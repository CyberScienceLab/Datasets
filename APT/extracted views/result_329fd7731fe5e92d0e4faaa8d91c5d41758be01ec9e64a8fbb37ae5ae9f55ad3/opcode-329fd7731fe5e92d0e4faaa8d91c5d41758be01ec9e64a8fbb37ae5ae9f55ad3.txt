push mov push call test jne push call pop ret nop nop nop nop nop nop nop push mov lea push push push push movl call mov pop ret nop nop nop nop nop nop nop nop nop nop push push push push call add push push call push mov movl call mov push call mov mov push call mov add test je lea push push push push push call mov test je mov push push call mov push push push mov push push call mov push mov call mov push call test je mov push call mov pop test pop je mov push call call pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov push push call mov test jne pop xor pop ret push push push push push push push call mov cmp jne pop xor pop ret mov lea push push push push push movl call push call pop mov pop ret nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov test je mov mov add test je mov test je mov mov add add test movl jbe mov mov add push push call add test je mov mov inc add add cmp mov jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop lea mov add pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov add call test je mov lea push push mov push push mov mov movb movb mov movb mov movb movb movb call add cmp je mov mov mov rep mov mov add mov mov mov jmp mov mov add add mov mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop nop nop nop sub push push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push call mov mov mov mov test mov je mov test jbe push call mov add test je push push call add test je sub mov lea mov rep call mov test je cmpl jne push push call add test je push call mov mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub lea movb push push movl call push call test je mov mov lea movl push push push push push call test je movb mov push call mov and add ret nop nop nop nop nop nop sub push call test jne add ret push push call mov test jne add ret push mov xor lea movl rep lea push call mov pop cmp je cmp je xor add ret mov add ret nop nop nop nop nop nop nop push mov push push call push call pop ret nop nop nop nop nop nop sub push push mov mov push call add test je push push call push call test jne push push mov lea mov push rep stos stos lea push push call lea push push call movb mov or xor repnz not sub lea mov mov mov or repnz mov dec shr rep mov lea and push rep call add test pop pop je lea push call add test jne pop pop add ret lea push call lea push push call add mov pop pop add ret lea push push call add mov pop pop add ret nop sub push mov xor lea movb rep stos stos lea push push call mov lea push push push push call pop add ret nop nop sub push push mov push push push push call xor xor mov mov mov lea mov mov mov push rep stos lea push stos call mov or xor lea repnz not sub push mov mov mov or repnz mov dec shr rep mov push and push push push rep mov lea push push mov mov mov mov mov mov call mov cmp je lea lea push lea push push push call push call jmp lea lea push push movw movw movw movw mov call lea lea push push call mov mov mov mov mov mov mov mov push push push push push push push call mov cmp je lea lea push lea push push push call push call push push call pop pop pop pop add ret nop nop nop nop nop nop nop nop nop nop sub push push push push xor mov xor lea mov push rep stos stos lea push call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call add test jne pop pop pop mov pop add ret xor call cmp jae mov jmp lea movl push call mov add xor cmp sete inc mov call test je mov mov xor lea mov rep mov push stos stos lea push push call cmp jne cmp jne lea push lea push push call lea push call add pop pop pop pop add ret mov mov lea push push push call lea push call add pop pop pop pop add ret cmp jne cmp jne push call push push lea push push call add pop pop pop pop add ret mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep mov mov mov lea mov lea rep stos lea mov push push stos push lea push push movl mov call add lea lea lea push push push push push push push push push push call pop pop pop pop add ret mov sub test push jne mov push mov lea rep lea movl push call test pop jne lea movl push call test je mov dec je dec jne mov cmp jne mov cmp jne mov pop mov add ret cmp jne mov pop mov add ret test jne mov pop mov add ret cmp jne mov test jne cmpb jne mov pop mov add ret mov pop mov add ret cmp jne mov pop mov add ret cmp ja mov pop mov add ret movl xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov sub test push jne lea push push call lea push push call lea push call test mov jne push call mov push push call test jne mov shr jne push lea push push call add push call pop add ret nop nop nop nop push mov sub push push push xor mov xor lea mov rep stos stos lea push push push call lea push call mov xor lea mov rep add lea stos push push stos call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and rep push mov mov push call call mov push call mov add cmp je cmp je cmp jne mov xor lea mov rep stos stos sub mov lea mov movl rep call add mov pop pop pop mov pop ret cmp jne mov pop pop pop mov pop ret mov mov xor lea mov mov rep stos mov mov stos mov mov lea push mov mov mov xor mov mov rep stos stos lea push push call mov xor lea mov rep stos stos mov xor lea mov rep stos lea push push stos call lea lea push push push push call mov lea push push call add test je lea lea push push call add test je mov xor lea mov rep lea push push push stos call mov mov lea xor rep mov lea rep lea lea push push call mov xor lea add rep mov push movl movl movl mov mov movl call push push call lea push call test je mov cmp je push push call mov push call xor pop pop pop mov pop ret lea push push call add test je mov xor lea mov rep stos lea push push push stos call mov xor lea mov rep stos lea push push stos call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call lea push call add test je mov xor lea mov rep stos stos lea push lea push push call lea push push call mov mov or xor repnz not sub lea mov mov mov or repnz mov dec shr rep mov lea and push rep call lea lea push push call add lea push lea push push call lea push call add push call sub mov lea mov movl rep call lea lea push push call add test je call mov push call pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp jmp jmp jmp mov test jne cmp jle decl mov cmp mov mov jne push call test pop mov jne xor jmp andl mov push push mov call incl pop pop jmp test jne mov test je mov push lea cmp jb mov test je call mov sub jmp push call andl pop pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret jmp cmpl jne pushl call pop ret push push pushl call add ret pushl call neg sbb pop neg dec ret jmp jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call xor cmp setne mov ret nop nop nop nop nop nop nop nop nop nop sub push push mov push push push push push push push call mov cmp mov jne pop xor pop add ret lea movl push push movl call test je mov mov mov push push push push push mov push mov call test mov je push push push call mov add push push push push push call mov pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov mov pop pop mov pop ret nop nop nop nop nop sub push xor push push push movl call mov test jne pop pop add ret push lea push push movl call mov push call lea push push call test je mov lea push push call add push call add test jne mov mov lea push push call mov mov cmp je lea push push call test jne push call pop pop mov pop pop add ret mov push call pop pop mov pop pop add ret nop push push call ret nop nop nop nop nop nop sub push push xor mov xor lea mov rep call mov cmp jne pop xor pop add ret lea movl push push call test jne pop pop add ret push lea push push movl call mov push call mov push call add cmp jl mov lea push push push call add test jne mov mov lea push push call mov mov cmp je lea push push call test je jmp mov push call pop pop mov pop pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call add ret nop nop sub mov lea push push push movl call mov push push lea push push push push movl call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov cmp jb cmpl je push call xor ret nop nop push mov push mov push mov push push push push push push push call test jne push push push push push push push call test jne pop pop pop ret pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push push push push mov test jne mov test je push push call test jne mov mov add cmp je mov mov mov add add add mov lea test je mov push push call add test je mov add add add test jne pop pop pop xor pop ret xor mov mov add pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov push push push push push call ret nop nop nop nop nop nop mov sub cmp push push push mov jne mov push call add mov xor cmp mov je push lea push push call mov push lea push push call add push call mov mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov push push call push mov call mov cmp je cmp jne push push call mov cmp jne push push call mov mov cmp jne push push call mov cmp je cmp je cmp je mov cmp je cmp je cmp je lea push push push mov call push call mov push push call add push push push call mov cmp je push push call mov add test je push lea push push push push call test je push push call mov add test je push push push push push call test je mov test je push push push call add mov jmp push push push push push push push call mov neg sbb neg mov mov test pop je push call test je push call mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub push push push push push call mov push push call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov mov xor lea movl mov rep or mov mov mov mov mov push lea xor mov mov push push lea push push push mov mov mov movb movb movb movb movb movb movb movb movb mov mov call cmp jae mov lea push lea push push push push call cmp jae push lea push push lea push push push mov movl call cmp jae mov mov mov push lea push mov mov sub add mov lea lea lea push push push push mov call cmp jae mov lea mov push lea push lea push push push mov call cmp jae mov lea sub push mov call push call cmp jae mov mov mov mov mov mov mov lea mov push lea push lea push push push push lea push push mov mov call cmp jae mov cmp je mov mov testb jne mov push push call mov pop pop pop pop add ret nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov push push call add pop pop ret pop or pop ret nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov mov push push push call add pop pop ret pop or pop ret nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop call jmp nop nop nop nop nop nop mov jmp nop nop nop nop nop nop push call pop ret nop nop nop nop mov mov test jne or mov mov jmp ret nop mov mov ret nop nop nop nop nop nop mov push push push mov lea mov push movl call lea movl call mov mov add ret nop nop nop nop sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop ja add out inc add loopne add sbb adc add mov adc dec add gs add rolb adc dec add inc dec add jnp add add adc inc and push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea les adc dec add pop dec add add dec add cmp push add jno add mov add sub inc dec add movsl dec add pop push add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov add jne add imul xchg pop add or adc pop add (bad) pusha add ss add outsb popa add nop nop nop nop nop nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push cmp lea jb sub sub test cmp jae sub mov test mov mov mov push ret int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret jmp jmp jmp jmp jmp jmp jmp int3 int3 lea jmp mov jmp add inc imul add xchg add jmp imul (bad) decb je and jb,pt loop in cmp ds (bad) mov sub cmp (bad) repnz das bound (bad) pop cmc dec pop rcrl repnz arpl jne shl out out rcrl imul mov xor cmp ljmp mov push pop daa hlt mov decb into in adc aad insl in push sub icebp into in loope incl add xchg daa jnp push cmpsw leavew dec or lret xchg cmp rol jle test jl pop pop and popf dec cmp int3 cmpsb ret lods movsb jmp iret dec pop xchg lds xor lret jl cmp pop loopne data16 add jb nop test in mov cli repz scas lret push pop (bad) scas dec stos leave ftst sbb in pusha sahf in dec jl dec dec and mov into dec lret lret vpaddusw std lods mov into dec lret lret stos movb (bad) stc lcall mov ficomp test fidiv (bad) (bad) icebp sahf aam sub xchg out lock rorb outsl xchg push inc (bad) loope into test imul mov addr16 insb nop xchg lods xlat enter pop pop mov or idivb dec mov inc addr16 in sub mov pushf or sbb stos jns imul mov jle pop xchg mov lret and lods jge popf sbb mov jne fldcw xor rorb cwtl jge hlt das add leave cltd daa sti pop jecxz gs mov arpl xlat cmpsb leave add inc xchg jnp pop pop out jbe jmp mov loopne (bad) stc shlb sub in cmp (bad) stc mov or sbb or jecxz fs xchg shrl jmp lret shrb enter sub das mov pop inc pop jmp dec mov lods lock inc add gs cmc mov push inc jmp fwait cmp stos ret int3 vpaddb call mov jbe testb mov incb sbb mov pop scas pop pop arpl sbbb scas shl jp orl adc enter push daa pushf push mov inc adc popf push enter add imul mov xchg lret or inc sub sub pop pop mov inc ja push aaa roll or dec cltd add pop stos outsl lcall cmp std sbb mov and mov imull xchg fsubr pop mov xchg stos cld lahf sub or xchg insl add movntq fs data16 mov and js call test and mov xor mov imul out mov fnstenv push cmpsl mov mov mov xchg sbb xchg fmuls mov push inc nop (bad) pop push push cltd test out mov xlat sub lcall mov lods fs popf aam adc push or aaa sub push adc (bad) (bad) test aam in jne jno std rclb jmp add mov insl pop pop scas mov idivb addl cld fimull fnop loop lea jl jb addl jb rcll add subb movsb jbe fcomi ret add and and inc dec jecxz ret js in xchg outsl mov add mov mov inc cltd (bad) enter pop in imul aam xor push cwtl aad aaa xor (bad) or repnz dec xorb fisttpl and sbb es jne push test dec xchg sub inc xchg pop out and inc pusha fsubs (bad) das icebp mov scas iret and pop imul adc int or add lret push pop push fs sub pop js dec mov es inc ret and imul ja add and mov inc dec sbb cwtl mov rolb aad enter mov int adc or pop add enter outsb pop imul rcrl xor scas sub pop push ret mov push flds pop mov out (bad) jns hlt push jo cmp and mov cmp and lcall in test mov push daa mov repz cmp sti sub in (bad) js inc enter mov repz cmp push sub (bad) dec lahf stc and jmp jae hlt mov loop lds es fadd inc mov inc sarb mov into and jno pshufw and and lods mov fcomps xchg test xchg and push imul push mov sbb and sub ret cmp repz add stos mov lods shrl rclb lahf stos inc insb sbb popf push das ret into outsb icebp jns pop xchg inc mov xor push aad and lds xor mov test rolb (bad) fidivl orl ljmp cmpsl sub add pushf xor xorb outsl lcall data16 subl (bad) sarb mov mov fdivrs loopne mov test int3 div lcall fisubr in movl popa jno and ficomp pop in pop add in fildll repnz jmp repnz fsubp inc mov iret add dec fldt push xchg movsl stos stc add nop mov movsl sahf mov outsb pop (bad) mov loop lock outsl mov in out push movsb pop repnz sar rorb popa mov aam mov adc nop mov mov bound add jnp bound (bad) xchg cwtl pop rep subb or (bad) cmpsb shlb pop adc lret mov sahf mov push inc jno leave je movsb js aaa add xor add nop pop jnp mov pop notl mov pop ss cmpsl and addr16 hlt adc pop cmp mov jno lahf testb adc inc xchg xchg dec jns fs nop inc bound sbb xor xchg sub punpckldq and push mov test mov into loop mov cmp cmp adc cmp js push cmp pop add mov push pop dec imul jae and pop dec mov out movsl push (bad) addr16 dec jl sub sar movsl maxps xlat xchg or cmpsl push out jae inc push adc psrad jo push sbb sbb rol aad call (bad) idivb cli mov inc inc das iret out jne (bad) in outsl mov pop (bad) jge sub jmp rcr das into sar icebp or int3 mov pop fdivr stc jg add (bad) mov inc movl mov shll mov push popf negb out (bad) mov add cltd xchg test cmp add fcoms out sbb xor or out gs jl adc loop cmp fdivl lahf sahf xor test out (bad) pop lds jmp lret mov mov idivb in or and rorl lret test insb xlat inc andl mov dec clc movsl fcomps out mov test xchg jmp test les loope stos xchg lods mov (bad) sbb rolb push out or jle lea enter in gs jne std iret xor movsb pusha lret movl enter cmp testb xchg mov cmpsb and push mov ja sbb add or dec pop inc or ss int3 adc dec outsl xchg pop leave (bad) jle or neg mov test jle int3 add sub and mov jmp pop mov dec das sub mov adcl out xchg dec inc adc lods adc cmp jnp test sub mov jnp pop inc test sub jge lahf push cli jbe dec sbb add pop pushl push pop add and or push push pop and and xrelease ficompl sbb adc fistpl data16 jg sub push mov push mov stc cs add jp insl mov jbe mov loope push sbb jecxz js push lods push sbb mov inc decb mov test xor hlt incb and push arpl cmpsl pop add das stos or popf add inc sub push xchg mov mov xor (bad) movl push cwtl xchg (bad) iret adc adc dec adc pop bound outsl and or adc ja push xchg push fdivl xor (bad) push add mov imul fwait cld out (bad) mov call mov xor xchg loop ljmp fcmovne or add nop jp mov mov inc jecxz (bad) mov sti mov pop cmpb push loopne (bad) das out xchg ss mov push pop sbb fwait cltd jmp xchg mov lds lret mov jo cmp and push lret pop jecxz insl sarl (bad) sbb or jno movsb sbb dec jns pop fucom pusha sbb sub xor jb mov and fistl pushl jns in dec (bad) xor shr jge fdiv pop repz in pusha rorl dec xor aaa jb call test xchg xor test mov in icebp in (bad) cmpsb lret jne lahf sub (bad) mov shll cmp add adc nop ds sub mov xchg lods into push xchg cmpsl add int adc pop sub jge hlt pusha sub (bad) adc (bad) fs pop cmpb (bad) xchg clc fwait and push (bad) jo lods inc add mov and pop repnz outsl and test popa imul movsb mov dec popf in sub sub push fnop out movsl mov push inc sbbl addr16 and lea sti add inc out fstl lahf test mov xor jbe cmp test lods or (bad) int test fcoml insb jne fbld or inc pop ror lret jbe cmp push in jb xor out addl (bad) incb mov in jmp mov fiaddl (bad) add arpl xchg inc pushf jbe aaa cmc ror dec insb jge pushf iret dec int inc push adc push dec mov in (bad) (bad) std pop jo mov stc es inc fldt stc loopne adc js cmc nop or dec notb or add in xchg sbb mov mov in imul dec pop enter (bad) notb es dec mov lcall sbb nop ficom mov movsb inc fcomps jecxz push movsb loope xchg jo jg push popf loop (bad) push lahf inc jl pushf andl cs insb imul (bad) push jecxz pop add add sub fdivrl sub jo,pn xchg ljmp insb pushf jge mov repz cli aad imul (bad) xor xlat mov xchg push pop imul out test mov test pop or mov subl or xchg in je es xchg popa jp loop clc (bad) call (bad) movsb push and add push dec dec testb mov mov pop sahf xchg add push sbb adc clc push xor and cmp pop xlat pcmpeqb stc push push (bad) imulb insb sub ljmp jmp adc mov push cmp ds popf aad aad xchg inc imul call or mov lahf or dec rclb mov mov (bad) mov lock aam pop push mov scas imul inc mov jno jmp jbe jmp rorl adc movsb loope lahf inc cmp push mov lahf dec cmpl sbb out push negl sub cs dec loopne leave test stc fmul int fld jecxz mov movsb iret int jecxz rclb sbb dec rcrb in xchg aam outsl adc or sub sti daa mov mov push xor jle pop test ret insb mov cmpsb loope jl mov pop pusha daa (bad) int3 pop (bad) inc xchg push rorl (bad) leave scas and ss inc clc sub dec fstps mov enter dec les xchg repz sbb sbb fldl test aaa iret mov lret rolb push (bad) pop add add imul add call mov dec cmp or scas arpl mov sbb pminub sbb push inc (bad) call lret or js cmp out lds jge fcoml push sub outsl scas pop pop (bad) cwtl xchg out insl push push (bad) adc aad jmp movntq out std sti and int3 ljmp dec iret jnp insl pushf sub ljmp aam sbb add in outsl xchg aam adc push stc mov (bad) je and dec fildl adc dec (bad) inc inc mov dec mov adcb dec pop lds orb enter enter push sbb inc xchg loopne xor xorl jo mov lcall mov or xchg adc inc mov pop fbstp jecxz stos xchg adc add mov pop ret inc jle fwait mov push icebp pop ror jne,pn or lock inc stc fsubs icebp inc xrelease aam enter fcompl lock repz (bad) leave outsb inc mov inc hlt adc dec pop leave sbb dec jno pop (bad) cmp pusha and xchg jmpw or pop jmp f2xm1 jl and adc popf sahf sarb jo xchg pusha rcr jno xor sbb verw sbb mov aas and aam outsb popa pop xchg cmpsl fbstp dec add addr16 pop shl jno ljmp pop cmp pop int3 jnp and (bad) cmp imul lcall xchg insl xchg mov push ss js sarb addr16 negb push inc (bad) icebp xor or js mov xchg es popfw add rolb jp cwtl data16 jno je leave test mov es scas pusha sbb fcoml outsb mov xchg xchg bound jg (bad) cmpsl popf pushf xchg push xchg mov sub repz out enter mov icebp imul add add jge add add push std mov or enter das pop adc mov repnz cli sbbb mov cmp push cmc adc cmpsl mov std jbe sub hlt fnop insl push push pop repnz mov scas pop add fcmovne mov lods push imul cmp cltd xorb in push adc inc jbe cmp aas mov test xchg add out lahf fiadd pop adc jne,pn jne ljmp mov mov xchg pop js pop in ret in add fldl push je lea jmp negl lods and pop aaa sbb lea xor clc cmpsl and je fisttpl lcall dec mov dec rolb les cmpsb mov dec sub mov enter adc (bad) jnp clc mov cmc (bad) notl add (bad) negl mov push (bad) sub sbb jecxz rolb jl adc mov std mov mov sbbb jae and cs xor and cmpl cmp notl ret je and ret or out jg adc push lds call mov lret jp test jmp xor sub addr16 bound scas or mov in popf fnop cwtl ret scas sub xor xorb cmp in outsl cmp daa (bad) sar jecxz das mov in add fwait mov aad loopne cmc dec sahf fwait mov sub outsl jp pop lret or repz or dec adc sbb mov rorb adc data16 inc push (bad) movsb fild push and cmp or out xor dec fisttpl inc jl inc mov cs pop mov (bad) div or and loopne hlt jb loope adc sub fistpl xorl inc (bad) mov lods xor xor cltd mov sub jg hlt dec inc (bad) push movsl and sbb fimull dec or movsl sub mov xlat jnp sbb stc and cmp inc xchg sbb mov test jle xlat into jne push adc aaa inc (bad) lret xchg out and (bad) push test (bad) icebp mov das mov sbb lret push sbb jno (bad) loopne mov mov jno sbb aaa jno lcall loop adc sahf xchg gs popa mov cmp adc push add hlt aam jnp pop xchg adc insb pop cmpsb imul pop lea aam jmp scas iret mov test pop sub xchg xchg cltd rolb mov jecxz rcpps int mov inc lock jmp das cmp ja jl (bad) add insb jge lea pop xchg pop lahf dec mov push fstps push (bad) (bad) pop in cmp push jb loop and out jg ljmp (bad) loop dec lock rcr fwait aas cmpsb aad dec idivl negb and test pusha addr16 cmp sbb movl out dec inc scas adc inc or clc and add lods pushf bound jge jbe fsubl sti popf ljmp insl (bad) lcallw adc fwait xchg lods mov std test cmp jge cmp rclb dec imul sub add sti js push mov fmul in (bad) sbb inc loopne push inc adc (bad) xchg mov mov pop jl mov in cltd push jg shlb and (bad) fidivr test mov cmp (bad) es or sahf repz std inc std add das and cmpsb (bad) lods pop sub rcl inc jle insl mov or jp pop push test jl push pop data16 sbb or out xor aaa xchg mov (bad) cmp mov adc mov cmc mov aam test mov in cmp les ret and loope pop xchg push pop cmp add jo scas pop xchg sar jns xchg push mov hlt mov bound or je dec cmc push adc sbb pop add dec stc mov popf xor repz or xchg pop jnp jle or add cmpsb mov insb jne cmpsb (bad) (bad) lahf lret mov inc add std out fildl jno inc fistl aad mov popa (bad) loope cwtl sub or pushf scas lcall loopne or and pop mov std xchg or sbb mov fdivs mov add mov nop inc repz pop mov cwtl or xlat mov xlat mov loop call (bad) mov ljmp imul push cli pop cs in cli clc sub add mov mov adcb cmp mov lcall sbb adc popf pushf mov push mov (bad) pusha jno inc repnz mov cwtl inc mov (bad) ret and jo fistp adc push (bad) push cmp dec pop (bad) mov js test fwait add pop ret insl pop lret mov mov cwtl jg test addr16 bound dec (bad) jecxz jo hlt inc mov or loope call inc in or add mov pop lds adc dec cli xchg test rclb fiadd mov jmp mov cmp dec and sbb iret aam out pusha inc sub inc pop outsb cld inc scas enter lahf jmp sub clc jb cmc lcall dec mov dec or bound inc adcl xchg cmp cmp ret xor in xor loopne dec dec inc ss cmp cmpsb lret mov lcall imul mov jns jns les and xchg inc add mov addl pop push pop or xchg cmp xchg jns or mov out andb bound push adc sysret xor outsb inc pop cmp test std int fisttpll dec cld lds lods loope std fimull pop fiaddl sarl sti cmp fwait lcall enter lea mov fsubp int jne test jne mov or or dec hlt dec jmp pop mov loop std pushf or les jne xlat clc add jmp pop add jns (bad) addr16 xchg cmp or mov mov sub or push push mul jo outsb idivl cmc imul cmp inc cmp jge cmp pusha dec int3 sub mov pop add inc sbb and mov push in or rorb xchg jg or repz push jo push mov push dec aaa mov adc xchg ljmp sbb jbe ja mov and in cs add and mov pop aas in and xor pop leave xchg cmp les cmpsb jne mov xchg pop inc or fnstsw push into push int3 mov (bad) ret stos mov sbb icebp stos repnz mov lock cmc inc test pop int3 arpl aas mov leave stc xchg xchg fcompl cli cmp dec sti in iret bound lret mov decb movsl enter and fsubrs jmp test outsb pop push (bad) or nop icebp mov inc outsb mov pusha in cmp adc ret and and mov je xlat mov insb cli ds jo dec cwtl adc xor aam stos dec pop loopne lods dec inc jne pop xor inc sbb add fscale imul rolb fwait mov cmpsl jb imul sbb daa inc push fdivrs inc xchg icebp fnstcw aam dec gs lea adc leave xchg cmpsb rcrb out pop dec or xchg bound and call hlt add mov or ss or xor dec jnp xor movsl push and dec stos (bad) jne rclb in fdivl or daa inc lret fidivrl sub xor stos inc add aad mov push fsub aam jne (bad) sub cmp jle xchg pushf xor sub or cmpsl dec xor mov adc cwtl shll out in dec push push jp imul mov nop jmp iret push mov dec push dec push and jb cmp jle mov pushf push mov test sahf jg jo push dec mov in push adc pop mov ret mov push jg pop push or dec insb push jle xchg push and int3 js popf or push push int les std or outsb or push cld push in insl (bad) cmp loop (bad) push std scas mov lret add sbb mov (bad) lods pop nop test fwait adcb or cmp test xchg popa mov lds mov scas sub pop imul loop pop dec lods inc jmp inc and js pop xchg cmp push movsb dec lea mov (bad) push cmpsl mov jno add cmp dec roll inc push mov negb mov mov or xchg js mov mov jl scas inc jecxz mov mov lods andb fdiv jge fildll adc (bad) pop test push jmp sbb (bad) out (bad) stc push pop lock icebp mov rcr and hlt push xchg (bad) roll test mov cmp loop fs vpshaw test cmp sahf in movsl stos out mull aam hlt ds fs cmp cmpsl xor mov rcrl sub sbb insl enter or push push cmc pop cmp xchg lret movsl stos push dec xchg mov pop xchg addr16 xlat push daa jae adc or pop inc dec lret out (bad) std push add dec dec adc cli cmp push xchg jle cwtl jg fsub mov sub jecxz loope sarl stos ljmp add enter cmp fwait enter xchg jnp loopne stos scas push lods fpatan fildl push ss lock loopne subl add cmp xchg sub test push mov xchg xor xchg cwtl mov mov scas jae aam dec in dec cmp aaa jb out movsb es or xor movsb jo stos sbb in cld ds cmp pop dec xchg clc add jno pop pushl dec jb jmp xorb lgdtl insl iret test call inc ss movsl testb mulb dec adc jo pop mov inc mov cmpsl inc popf mov lret pop fdivs add outsb (bad) sbb ja and enter jmp in pop sbb fildll mov es jl sub std mov pop push sbb dec pop test pushf push sti nop popl or out fnstsw or push insb pop test mov add out outsl and shrl mov lods lret jle xchg jae ret lcall stc jp out jno (bad) out add inc cmovne push jle fsubrl mov dec pop dec xchg cld test pop loop pop fs pop dec test push fnclex leave lods mov cmpl push push out lcall push dec jb mov push pop inc inc and mov out mov inc jno dec mov fcmovb addr16 repnz pop sub shl icebp dec ljmp cmp call cltd loopne pop push jge mov and aaa daa ret pop loopne repz mov xlat std sbb jb adc mov rcrl mov or and or data16 xor xchg sub pop bswap dec fstl int adc out incb bound loop insb into xchg mov ror (bad) dec add xchg (bad) cmp jmp push jns,pt push cmpsl sub stos mov fbstp cwtl int jle test pop jb in (bad) mov or mov ficom dec push jae inc pop or cli or push inc push dec dec dec pop mov jno cmp inc push xchg imul lcall and mov imul or imul mov jl jno inc aas or data16 adc push and je (bad) pop jns dec aas cmp dec mov fsubrl sarl leave xchg jno in push fisttpll gs mov enter clc loopne or popa fcomps push fistpll push mov mov push sbb in jmp mov popf lahf xchg pop movsl xchg add js mov in jg mov arpl pop ja loope sub push push mov inc or fimull movsb push fisubr lods push cmp sub push mov movsb or dec or bound int3 jg adc mulb stc mov (bad) aaa ret jnp lock jnp movsb rcrl mov pop add or pop xchg add stc out cld xor add aam push add insl push push fwait sub xchg in leave cmp inc out clc fdivs jl and pop pusha xchg adc dec xlat mov repnz dec mov negl xlat dec mov popl movsl lods fisubrl mov inc and out xchg xchg lea mov jae loop aam or sbb lods sub faddl push add in pop xor fimul mov xor inc fnstenv cmp pusha mov aam push dec pop mov mov or das (bad) std addl dec xor sti jne scas ffree mov xchg jbe add arpl mov cmp pop es jns stos (bad) xchg stos or (bad) loop push nop inc cmpsl movsl add fistp test pop pushf xchg jg sub enter imul mov pop das fld xor fiadd xor pop hlt pop cmpsb push cmp es dec fstpl pop push and (bad) and lods daa clc jp or inc in test push js sub js sub popa gs ljmp mov in lods pusha icebp les cmp pop leave mulb (bad) in sbbl cmovbe dec arpl mov idivl sahf dec dec jb fildl in push arpl dec jne ss dec je mov add pop adc lods push add jbe sti pusha (bad) xor pop sti xor dec repz dec jae popf push or lods rep scas jbe lods test rorl mov mov (bad) (bad) jno push dec push xchg xlat push imul mov loop mov pop ret pop and inc cwtl mov adc jecxz dec fwait and or sub mov out out andl xor add ljmp popf mov xchg cs fstpl add ljmp fisub hlt roll or xchg pop popa sub clc aaa mov aaa mov leave jecxz test xchg mov (bad) int3 sub ljmp incl fs inc or xor cld mov adc stos outsl pop cs loope cmpsb adc popa mov mov in sbb or outsb nop outsb pop mov arpl jo adc outsb adc xchg and xor pop sub sbb fst dec push hlt pop mov or sub (bad) ljmp orl sarb mov setge call outsb and cli fs xor adc dec pop les dec mov mov mov cmpsb push mov inc daa lahf cmp cmp dec sub push mov jl loopne loopne aaa (bad) mov push scas js sbb cmpsb dec pop and dec dec sub or loope or cld lret cli (bad) sbb shll cmp scas addr16 (bad) push ljmp dec dec dec (bad) mov lret into dec jbe push hlt mov dec ds pop adc xor pop cli add or xor fbstp pop add imul stos fwait movsl xor xor (bad) sub sbb insl lods insb es sub cltd test lret (bad) dec lods mov adc scas (bad) fsubl stos cmp popa add push repnz cmpsl mov ja scas adc into test jl mov fs mov or sub cmp xchg and stos shll icebp dec mov std stos mov mov mov cmp loopne mov fwait push jno out xor xor outsb scas mov cmpsb popf inc arpl daa jno cli pop hlt lret lcall pop out cmp sbb cmp es dec scas popf or xchg sarb sub cmp sub xor jnp xchg cmp dec and sbb pop cmp adc jge jns leave div xor pop pop in and in divl int3 jbe push ljmp pop leave cmpsl inc (bad) jbe in rcrl pop push daa or or leave sbb jmp insl out xor outsb adc ds mov and dec mov fcom test roll pusha enter adc fdivrp addr16 lock xchg les xor mov cmp or xor les mov fsubl jecxz loopne fiaddl fcomps xchg dec (bad) frstor or lds xchg lods enter (bad) sbb movsb pop les dec jne out jno or sbb les popf inc int3 das repz int3 call xchg add ret cmp (bad) push push imul inc addl int3 mov test mov sbb xor jle fimul mov cmp xor stc sbb js inc lods fmuls fwait mov pop lret ficomp sub add push fistl fcoms or lock adc jl adc aas pop inc outsb std lea mov popf popf mov shrl push sbb fcoml pop in mov ljmp push insb scas jmp mov adc mov (bad) adc or inc sarl aaa lcall lock jo pop addr16 mov pushf enter mov or fcmove js pop push fs xchg outsb sbbb push mov mov std pop and pop popf inc sbb push xlat mov or jl mov mov rcrb icebp xchg scas imul and push jbe in jnp sbb scas outsl lods and movsb fstpt and loope,pn sbb fsubrl fidiv mov outsb mov in (bad) rorl jns arpl jp push mov cs iret xor cmpsb xor pushf xchg sbb pop xor cli and mov scas cmp not fstps cmpl lcall rcrl fiaddl push lret loopne js enter subl adc mov sbb aad pop adc pop push mov mov repz cmc inc cmpsb cmp dec out inc ljmp add add jmp movsb fdivrp jbe xor cmp int3 add mov cmp addl mov call mov daa pusha lock movsl push sub adc xchg (bad) push cltd cwtl xchg mov ljmp (bad) data16 imul inc pop xchg fcompl dec cmc incb push jno shlb sbb (bad) push les ret jno sub shrl xlat fsubr aad cmpsl and adc jbe cmc adc mov inc movsl clc add icebp and sbb negl sbb int lcall popf mov mov mov mov sbb fwait sbbl mov mov ret sub popf popf ficoml dec fs and pop dec mulps jp mov dec mov mov jmp mov mov aad pop loop lods push mov shld and jl or sbb call fsubs or icebp lcall sbb mov or inc mov dec les popa pop pushf xchg (bad) and xchg sahf mov ljmp imul and cmp dec cmp sahf (bad) insl into pop insl stc xor repnz aam adc xorl sub lods (bad) lret push sbb or jmp cltd mov adc xchg adc and clc fldcw mov jns rcl daa dec jg xlat cmp into xchg mov pop fstp xchg icebp cmpsb ret dec fsubp mov xor (bad) iret aas movb cs aaa jne fidivr (bad) fucomi sub mov loope push inc dec aaa fsubp xchg xlat (bad) xlat iret das loope daa fisttpl inc xchg in test xor (bad) lds bound adc pop or rclw insb loop inc les cmp adc mov xlat mov mov pop cmpb push addb and cmp dec mov aam cmp cmp pop or out (bad) lret dec leave inc xchg push out mov sbb dec inc xchg jb cmp fcomps mov xchg adc inc hlt das fsubr into dec test rolb and (bad) jae pop inc pop out pop inc clts movsl insl jle stc xor idivb xchg push ljmp xor ret sahf insb pop or ds pop out fsub push aam and (bad) fstps in lcall shrl mov mov nop or nop test push xchg pop into and push (bad) mov imul call inc cmpsl mov lret and mov sub inc inc test add or xlat xchg cli jp add inc jbe mov aaa flds xor cmp push loopne and pop shrl xchg lahf fstps xchg sub and push sbb insb add xor jg (bad) add (bad) xor out fs add mov add enter aam add enter lods enter (bad) mov mov pusha cmp cmpsl mov mov inc mov push (bad) xchg sbb adc and jp in sarb push lock jno lret pop xchg jle jo outsl pop js mov jne std jns or jecxz dec cmp mov lret sahf push jne je leave (bad) mov add inc ljmp dec test addr16 xchg movsb in cwtl cwtl jbe test cmpsl jecxz cmp sub mov mov loope lock movsb and (bad) test popa insl jno loope dec xor shll out pop dec neg test xchg cwtl movsb sbb fstl add or hlt jns mov lret je lret loope sbb ljmp je lret xchg divb push jl daa int3 mov add rclb add dec scas scas xor xchg je add cmp sti xchg jne (bad) inc ljmp inc scas push dec jno or mov adc mov fldl lcall (bad) jl nop jl pop inc repz sbb or mov outsl lret int3 and lods fnop push rcr sahf xlat sti jb test jae cmp xor xlat sahf sub or (bad) push loopne data16 dec sbb imul or mov mov fild lods into fmuls xchg popa xchg xor mov add sbb mov imul outsb negb or sub jmp mov ret push jno add test push sbb jb adc dec data16 shrb pop mov jne insl stos popf cmpsb loopne or add adc mov mov mov rcr negb cmp inc pop sarb and roll mov ja loope clc and push rcrl insl fmuls test js mov pop rcrl fisubr inc arpl fistpll jl cmpsl (bad) xor dec sub sbb adc jge adc jg xor cs inc mov (bad) shrb push cli push stos adc xor xchg aad pop bound insl sub and push out mov or mov das fimul rcll and push test stos fnstsw cmpl pop enter add mov pop ja or pop hlt stc adc cmc in pop sub into jns pop push pop cmp jbe cmp dec mov xchg cmp cmp fildll mov sbb xchg jmp push mov inc sub fiadd lcall push fiaddl addr16 and push aam into sbb int3 out gs cmc mov jmp push and add out xchg sub add sbb push push ja pop or xchg jnp (bad) jle (bad) dec stos dec mov call sbb lcall pop int push into jbe inc std mov dec loop or jno adc and andb cmpsb scas dec lcall push das sbb sarl push lret xchg aas out loop or jnp add ficoml imul mov inc repnz jge push inc hlt jg cs je loopne sahf rolb ja les add cwtl pavgw push popf push lret jae (bad) dec push test dec and (bad) mov call sub push add pop insl adc insl or xor xchg repnz push adc fldl mov xchg aas cmp je daa daa nop push adc fsts repz sbbb aas pop adc arpl test ss adc int3 pop mov sbb sbb scas add aas fldt icebp imul mov ja ficoml or sbb cmp push ljmp inc push mov jl adc lcall or cmp rorb fmul out push cld cmc dec cmc rcr outsb cltd xor into or xlat inc dec cmpl out mov and xor cmpsl daa ss inc jecxz out fild sbb cli adc and (bad) mov call dec fwait data16 or fsts pop mov stc iret sti mov (bad) adc push ljmp sbb rorl dec in (bad) int push push scas pop inc sub inc iret xlat cmp and shl dec int sub insl or xor xchg loope aam jmp and insl inc add and or negl fstl jb sub mov jp cmp mov add xchg cmpsb or push push test sub int mov pop ljmp mov push and mov out adc mov mov push in and fwait add rcrb pop insl cmp xchg mov xchg daa sbb fisttp lret add (bad) orl jl (bad) push and push insl mov push out outsb push or lahf xchg mov sub jle nop in inc mov mov test or ficompl push ss lahf mov inc (bad) xor pop xchg lock out sub das (bad) scas test push fisttp jge jb out mov fdivl add push in and out mov mov sub jle jno fisubl leave lds and sbb rorb xchg std loopne ret xchg sti test ds and jecxz or dec or xchg pop insb lret fwait pop pop mov jg popf xchg popl movsl add cmp ds fwait and push adc lock mov sub arpl jo lahf js out pop jns and popa cwtl movsb jg mov jns rorb mov jae mov testl jp sub (bad) popa stos push mov and mov adc lahf (bad) leave push fwait out in add fs xchg push cs xor loop (bad) lret xchg pminub jnp or in sub test sub dec int jle adc mov adc test (bad) (bad) (bad) pop cld or xchg pusha pop fwait ljmp in add pop (bad) sub push pop lcall adc cmpsb jge sbb sub or push cmp fiadd out fcoms push lret xchg mov ss or xor sbb pop inc leave gs stc jl arpl sub xchg dec nop rorb xchg jnp dec inc cmp mov push push xchg push outsb test mov out (bad) xor dec mov lods loope rcr jbe xor jb or jl inc mov dec mov movsl mov or loopne dec lret pop lcall mov jg xchg mov pop jne mov xchg jbe add fsubr or std pop jbe or mov sahf add leave pop jb pop ljmp leave dec stos aam dec push icebp aas or push inc dec sti insl mov bound imul pop (bad) jnp adc xor aaa mov push dec push test xlat outsb xchg cld pop test jmp pusha mov in (bad) pop in (bad) (bad) jl aaa lock sub add popa sub and dec ret or cmc sbb lea incb sbb scas (bad) lret sbb test dec jae mov push mov inc add adc jmp xor xor dec jmp jecxz lds mov subl or and sub cld in inc inc pop xchg mov out imul lods jo arpl pop mov sub mov or adc and mov cwtl mov jb push lock andl jbe sbb stos (bad) or inc jns or jns enter scas das std sbb cwtl push or imul xorl fbld das mov test pop sbb movsb xor sub jmp outsb jnp popa jp xlat pop out or mov xchg dec cmp xchg incb lock dec aad pop (bad) or add sub (bad) fcomip sbb iret fnstsw imul sbb movsl or mov inc pop lcall xor mov push push pop add mov test sarb loope bnd push aaa or and in scas sbb lea call scas adc cmpl and std out cld pop mov push jle add lret call pop add xor stc (bad) mov sahf push bound add cltd lods mov pop jb mov fdivrs outsb jg sbb dec (bad) or dec mov push push sbb mov inc stos ret outsl xchg shlb mov mov push in pop push movsl (bad) push lock leave jae cmp data16 stos enter xchg mov dec aaa xchg dec les clc stos (bad) and inc sbb or inc sbb ljmp lea test inc cltd mov and repnz sub pop pop pop sbb movsb repz fiadd mov imul loope mov stos sbb adc pop mov cmpsb mov sub jns das mov mov sub es push in add or xchg ljmp jns inc and iret inc lahf into xor jge jae addr16 mov stos les mov rorl or mov fs negl (bad) imul adcb mov rolb mov cld mov mov loop (bad) aaa pop out or pop in sbb sbb cmpsb xchg fs push or xchg imul cltd hlt inc outsb inc pop das (bad) fdivl in mov mov (bad) xchg cmp push mov push mov mov dec insl pop mov call xor cmp inc test jno cmp xchg into (bad) and sbb repz out dec jne add movsb cmpsb jmp imul jge fmulp add push pop and dec adc or stos pop pop add daa int cmc xchg cmp imul fwait cmp or call pop dec inc xchg addl loopne aad iret xor add mov mov cmpsb mov fwait fwait rcrl xchg pop pop xchg call jp sbb call pop out inc sbb adc jp and jmp sbb daa sbb pop into and or aam orb xchg js test jb cmp push pusha xor jp popf cmp out in out fdivl mov ret aas push pushf adc ficom or inc rep cmp mov inc in decb ret repz insb push and invd jns sub cmp (bad) aad inc inc and shr mov pop jbe mov imul call push test inc leave movsl mov and jmp jge scas int cmpsb js lcall fcmovb gs cltd add ja xchg fmull bound hlt leave add int3 jae (bad) jnp (bad) hlt clc adc xlat popl (bad) mov mov adc js xchg push dec pand popf mov out cmpsl jns enter mov in sbb mov inc sarl fs jp in leave sbb xchg addr16 jo jp jae xchg out pop mov mov or (bad) mov sbb negl and xchg aaa les (bad) ja push and xchg dec adc aas pop inc pop stos pusha pop xor mov pushf inc inc mov sbb mov mov or movsl dec test scas out scas rorb data16 test mov and mov dec adc pop mov std xchg imul dec arpl data16 dec mov cli cmpsl (bad) xor jge,pt xor test or jae mov ja mov mov divb fsubrs add xchg vminps fnstenv fs into insb adc addb dec xor dec (bad) stc dec loope xchg sti push pop push std pop aad lcall fsubrs cmp iret das ja xchg add or xchg rclb insb inc push loopne jnp mov mov add pushf call rcl jo fdivrp ficompl inc (bad) ret iret das out loop mov inc test jmp pop lds jns std sub call fcmovb jmp pop aam inc (bad) pop insb fist imul ja push inc pop and das mov test add fdivp jo (bad) sbb lods and in jmp fmulp cmpsl sysenter fisttp sbb repz call lods daa push or addr16 pop inc leave dec mov rep test stos sub repz sbb outsl lcall lret sub outsl roll repnz outsl adc xlat stos xor test lret pusha xchg mov add push fild add sar scas mov enter lods xchg int add xchg mov pushf imul test push dec push shrl (bad) jo iret sti xchg and pop xchg imul jp add add test dec pop iret outsb cld cmpsl sbb push mov movsb lret and sub in (bad) lret jle fsubrl and mov jp movsb enter aad sahf aas jb push dec sbbl sbb sbb push inc sbb pop jne divps mov sbb adc sub adc and fnstcw into xchg inc (bad) pushl pop test hlt loope les push mov dec jge dec es push stc pushf jge jle xor test subb and dec add sbb aam fistl outsl mov lock xchg js add or add add fstp mov stos mov lds jae pop (bad) xchg hlt fucomip adc push add or adc pop fwait sbb jo add mov rcr hlt inc fnstsw mov in jno jno mov adc ret sub inc jmp stos push enter int3 aam xchg mov add (bad) ret mov adc inc mov add jge pop daa push dec ret scas stc mov jg xor hlt mov jmp dec mov sti (bad) mov and pop inc (bad) pop (bad) rclb dec pop mov xor sub jmp (bad) lret les push lret push jge and dec or out and add daa adc pop mov insb lods pop dec dec cmp mov (bad) mov cmp jl les fadds xlat mov aam shrl pop aas mov adc jnp ja push into push fs and mov inc or jb pop add lods inc mov or rclb ret sub xchg (bad) cmpsl adc jbe pushf sbb sarl sti inc loopne arpl sub testl or jle pusha daa pop add and jmp popf shll cs adc (bad) xor inc (bad) shl mov mov inc mov add dec movsl jb xor xchg sbb and stos jg pop mov lods cmp flds xchg movsb jae popf mov leave xchg add imul inc fidivr movsb rcrl push push add dec lods dec arpl aas leave nop fild mov imul lcall sbb daa daa ljmp pop add cwtl and xchg mov sbb pop test mov push xor sub daa loopne (bad) mov xor cmp loope jecxz xor icebp cwtl sbb and dec imul push scas jns pop int3 mov push jo push stc mov ret repz cmp mov cmp jmp enter into test dec jp std daa iret inc lods xor or lods add lcall popa pop adc ljmp and cwtl sarl adc cmp shr mov incb cwtl sbb sub mov (bad) icebp (bad) fiaddl or stc ss mov out lds or jo pop call (bad) insb lret jge lcall and lods lret lret neg dec push add or push jae adc (bad) sbb jns push or mov dec inc sar test xchg dec add test lods mov jmp jbe loop mov mov jo daa pop rolb jge js or mov push inc out pop dec in inc push std mov mov pop mov div into sbb and and fstpl push and dec das ret das ret out mov jp cmpsb decb mov sbb test int3 loopne int cs dec iret test sub movsl mov into mov cltd push movsb mov nop fs and sub ljmp cmpl mov jle fsubrs dec cmp and push mov mov fmulp or cmpsl jmp inc sub jno fisttp sti xor xchg xor mov push xchg neg jge scas into loope aam mov adc jecxz (bad) adc jns fildl decb iret and sub add fisttpll mov cli dec popa jns outsl test lea jnp imul nop clc mov push mov jge xchg adc sbb mov push xchg jmp mov std jmp xchg jmp sub sub mov ret pop jle fdivrl leave push repz xchg sub scas enter push xchg fwait and sti movsb aad push outsb adc push fwait or outsb outsb pop xor hlt pop movsl gs inc push push jp dec bound imul shl cmpsl add sub or outsb (bad) xor mov sub outsl mov sbb xchg push rorb lret dec hlt popf inc dec stos gs dec data16 mov ret test or in leave leave dec leave lret pop iret xor mov cwtl movsl jle mov out mov mov scas cli dec rcrl inc sub add jecxz sbb sbb push inc push lods pop sub xor pusha cli aaa cmp insb cmp pop daa insl inc fildl sub sahf and arpl repnz scas mov mov insb mov or xor lret mov push jle fidivrl addr16 insl int and scas iret nop push adc cmp in mov dec mov fs clc cmp push mov loopne into jo inc in leave pop dec pop mov daa shll inc das mov mov mov inc repz jb lock lahf push repnz fwait cmpsb push pop jo push sbb in xor adc aaa das cmc int3 popf lds adc loopne fisubr out int3 or and push mov nop dec xchg into rcl decl push cmp bound je pushf ficoml das inc pop outsb dec sub loope hlt push icebp cmp adc xchg js add imul mov vpmulhw cli not adcb es xchg arpl sbb push adc je lcall mov loop pop or fdivr inc rep cmpb jge and lahf int pushf mov scas dec pushf xchg push xchg sti (bad) jg lods rclb loop loope jbe add pop fistpll cmp loope adc repz (bad) popf push (bad) movsb jle dec xchg lods xchg adc xchg dec add clc fistpl and fbld inc mov dec aas jp dec iret notl les add xor or imul dec add xlat int3 cmp jge and mov mov mov nop cmc loope sbbl jbe cmpsb or mov jge hlt jle mov jg jbe lret xor xchg pop sbb clc int jno in jb xchg and mov sbb jno stos std movl jno add stos cmp and decl cwtl nop insb dec inc insl sbb dec leave ret dec jnp or mov xor fs and push ja sbb mov jecxz or je lods dec jge xchg push divl adc or orl adc roll jne mov add dec lret fildll fiadd (bad) mov ds popfw push pop in jbe cmp rcl bound hlt stos jmp jb mov sahf dec inc imul add testb (bad) (bad) lret decb xor inc jo xor xchg xor mov mov or lock (bad) mov in dec inc bound mov mov ds dec enter jle inc sbb pushf add popf xor mov pop xchg bound out sbb xlat inc ja lcall mov stos leave imul std fwait mov sub test shlb (bad) jb adc jp xor jmp adc push aas push jae mov cmp xchg mov lods sbb push pop test jge,pt and fwait jecxz sbb inc (bad) rclb ljmp pop cmc int3 push cmpb dec cmc inc cmpsl (bad) (bad) je mov je cmp jp adc jecxz imul inc stos mov sbb out int3 in les mov hlt das inc (bad) mov pop stos sub mov mov stc cmpsl push dec fistpl mov mov inc into icebp test loope divl daa xchg push jns out mov jmp jnp nop (bad) test pushf jae mov dec ret cmp jge mov cmpsl daa repnz stc push js dec or jge sahf in cmp mov adc dec leave test movsl mov jne addr16 lods cmp add push pop out scas rcll adc inc inc jb (bad) push dec int hlt inc lock shlb xchg or loop std ljmp mov (bad) sbbl pop sbb hlt icebp and outsb (bad) out popa xor lcall repnz and lea sub dec js inc test ljmp test into push jne inc out mov loope je fiaddl pop inc cmp dec pop loopne add scas sub dec jno (bad) sti cwtl in (bad) or test xor mov addr16 clc pop mov mov mov in test jnp lret add mov push lods js xor fldenv (bad) popf in inc mov push mov cs je mov in (bad) out sti subl adc cli (bad) xor loopne stos and stos popa shl insl mov (bad) hlt outsb sbb pop jbe mov stc cmp jnp mov outsb or int3 hlt inc mov add cld popa pusha pop stos out inc sub notl cwtl sbb xchg pop mov in push aad icebp mov or cli ret xchg in loop lods fxtract add mov mov insb rcl xchg adc add fsts fwait inc jmp nop xchg (bad) cmp lods xchg lea iret jbe mov int3 pop das jo pop setnp mov add sbb (bad) pop sbb dec and insb mov sub xor xlat repz pop fnstcw cld mov or imul ljmp js add (bad) pop sub pop push clc add addr16 or daa loop xorl lret cld xchg aad adc mov inc xchg frstor jmp xor and mov xchg mov mov sub std sbb hlt nop popa outsl push jns push loop inc jnp or add xchg xchg mov clc xchg fldenv and aas loope push xchg sub jge mov aam in add ror inc imul repz in cmpb push push push lea pop mov lea stos pop mov popa inc jmp and push outsb push adc out lret fildl adcl insl jnp add xchg pusha (bad) call mov insl (bad) add sbb add add or fistpl jle mov add (bad) fimull add sahf sub or mov test xchg mov imulb stos cmp out outsb aas sbb add jno xchg sub pop clc popa fstl bnd adc and xchg aas ja fadd pop pop pop mov les sbb add js dec cli or adc adc in mov cli fcmovnu arpl mov (bad) fild adc rol cltd ret adc unpckhps xor in ret sub lcall imul cld movsl jb shr xor xchg aas loopne jecxz add xchg aas (bad) sti inc mov jnp push push sub ja mov or inc inc or psubq xor stc jmp and inc push xor lahf sub xor addr16 out pop repz push lods mov xchg loopne aad dec outsl rcl fs adc pop int3 stos push not push ja inc (bad) mov pop popa jno adc jmp cmp adc cmp mov pop mov int cmp fildl jae and add movl fldenv (bad) gs dec jle dec jae and adc push pop pop pop mov aaa (bad) sbb int fildll adc fwait and dec je shrb daa jns sahf iret jl push and in loope dec into xorb (bad) jmp je lret int3 stc sahf jge sbb or sbb (bad) mov sub shll in sbb lret lret push pop mov fisttpll or and jb sti js jmp push (bad) push jg sbb inc cmp inc iret lret or pop ret scas xchg push adc fs push lds out popf and ret mov add cli push lods cmpl hlt mov mov jae decb (bad) jbe jne fiadd and jae pop mov test push pusha jmp lret mov pop sarb xlat nop pop or jb xchg (bad) (bad) jnp push inc (bad) jmp mov pop pop jecxz shr stos cmp xor jge cld jae pop mov jecxz sbb (bad) lcall (bad) jb ret into inc or inc (bad) or pop pop jecxz fmull outsl push je add into add shrb mov jmp mov cli fst aad fwait movsb mov cltd lds dec cmp int3 mov xchg std xchg add hlt fwait std je fidivr fistpl and jne add sbb in leave jle push dec stc out inc mov jg jle dec fistpll and into add je,pt popa inc out pushf xchg mov andl adc pushf mov repz out push roll test stc inc popa inc in mov test cli rolb and popf adc ret in sbb out push jbe push sub xchg and xor scas rclb enter (bad) mov lock add out fs adc insl mov dec stos scas shll mov fcomi lods stos jg sub stos test dec and dec rorb dec clc into je lods test dec dec jp adc inc movsl loope mov jne cmp movsb mov lods jl bound mov jmp in popf loope (bad) mov fistl addr16 pop out fistpll xor pop cltd and cmpb mov and or bound cmp fldenv fidivl (bad) lret cmp mov xchg xchg into cmpsl jne sbb mov push xchg (bad) ret fisubr bound xchg pop xchg or dec mov or (bad) mov push xor push (bad) mov xor imul and sbb movb jns in and xor sub fidivrl hlt jne pop (bad) loope lret fwait fwait and cmpsl and (bad) das cmp les fisub popl lds (bad) jnp loope lret orl scas shr les popf jo lahf sub rcll jmp mov sti xchg sbb cwtl in bsf popf daa icebp enter outsb std fistpll pop pop ret mov jnp pop sbb jns inc or int3 dec mov or stos xchg imul xor xchg imul int3 mov iret call mov jne (bad) adc jle ja cmc repnz js jno cld jecxz or sti push or cli xor mul popf mov pop pop sbb clc rolb std adc dec aaa jg,pn into fwait xchg daa int3 mov ljmp outsl lods sub sub outsb fs xchg addr16 fucomp test xchg push mov push sbb mov dec jmp mov xchg inc push cmp sub int3 mov icebp inc addl xor inc sub sub (bad) sbb aam mov and adc clc cmp cmp xor aaa xchg jle xchg (bad) nop (bad) cld divb mulb movsb or mov jge mov in in subl stos mov mov and pusha fwait mov in sub repnz inc push and (bad) test mov shll jge and adc mov (bad) out sbb or mov test adc enter hlt xchg jecxz xchg js sahf lea mov into lcall inc push inc jb les inc insl movsb cltd mov subl test or xchg xchg mov lret mov stc fidivl in push jmp jp clc dec (bad) ret jp fs out jp das es cwtl push mov mov mov sub mov into ljmp iret jmp pop mov out ret xchg inc pop bound sub pop pop xchg cmp inc sbb mov fs inc push imul and sub cmp add mov sbb movsl jge mov mov jno outsl cltd mov mov (bad) fisubl mov lret push lret cmp es daa cmp mov aas adcb dec in rorl imul lcall pushf mov cmp fstp imul xor out icebp in (bad) rcrl cmp sti cmp adc insl nop rclb pop fnstenv xchg adc fidivrl je dec fucomp cmpsl xor push cs ljmp mul ret and adc jle mov push mov rcll repz cmp add mov andnps (bad) daa xor sahf jg xorl push divb mov pop outsl push aam mov jl mov push adc dec pop sub cmp mov daa mov mov fwait xchg pop aaa push cmp sbb jo adc push mov cmp pop pop pop push (bad) push dec adc fcoms fbld and xchg sub movsb sub aaa pop and sbb sbb (bad) lahf jns dec fsubrp int3 in int3 rcrl out mov pop xlat test imul ljmp enter fistl hlt push jecxz mov add mull cld pop add (bad) aaa arpl into sti pop pushf jno dec movsl cli mov or fcmove mov push (bad) ja out pop inc sub insb cmp aas jle cwtl movswl lock pop and sbb jle imul outsl leave xor adc push rcrl pop (bad) jle xchg add mov jbe psllq push lods cltd sbb cld dec mov sbb lahf xchg push sbbl xchg mov add fucomp pop push (bad) sub sbb xor repz pop push jno insb push adc add in in sbb pop rcl inc ds jae mov lahf pop cmp mov loopne jmp imul pusha xchg sbb sbb inc fstps loopne adc (bad) fwait sub dec sub into dec push lds xchg jl jns cmp aam and mov repz adc add popl inc rcrb mov cmp aad out loope dec cld rcll xlat repnz or jns es neg xor xor cmpl sbb xor pop or mov adc sub adc loopne ja pop test xlat sub jp ljmp test scas xchg or sub icebp mov xlat faddl push bound insb pusha sahf int3 shl je addr16 push mov sbb jno sub mov add and aad pop cmp push mov mov cs jb out insb daa pop cwtl bound inc clc sahf sar cmp inc jno inc cmp jp (bad) push imul add (bad) ficomp lret and insb ss pop pop dec sub inc pop gs test xchg movb adc xchg push in dec leave mov ljmp cmc add sub test pop test sub xchg sbb push inc fwait in dec pop aam or jecxz xor jl or push fs xchg rol aam jb jl out add push (bad) out decb aas sub pop insl cmc loopne daa frndint add negb sub dec stos adc add subl popa push xor pop sbb out jge jnp stc add sbb in imul xchg ds xor in jp xlat aas sub mov jne in mov push push sbb add adc cmovo imul sub jmp jo xchg sbb popa (bad) inc mov mov (bad) dec test xchg or cmpsb sub out test int sub add adcl ficompl sub divb enter enter xor adc insl in lods dec leave in in lods enter push ljmp mov xchg pop mov adc push pop in dec jp outsb sub push je or dec sub xchg xchg cli ljmp inc cld dec push jno insl fbstp mov mov ret outsl outsb lret in adc cmpsb ss push (bad) mov (bad) jle movsb or lods or mov cmp fwait adc and pop das test lcall scas fwait inc xchg adc out and jp pop push daa icebp sub jns iret jp stc sub push insl shr xchg sarb loope clc and cmpsl jge negl cwtl (bad) jae pop int fild push enter xchg pop cmpsb cmpsb mov (bad) int3 dec fstl or pop mov call movsl add xchg (bad) fcomps lds xor (bad) mov mov jo mov stos outsl xchg insl xor es daa sub cmp sbb ljmp (bad) cmc inc jno add clc lcall addl lock pop lods or (bad) push outsl push in pop adc jmp jmp jge rcrb cmp inc inc mov push lahf aad mov lahf (bad) aaa pop sub stc dec mov shr gs pop mov ss jge dec repnz cltd dec shrl (bad) lret in das add iret mov jg,pt and out push adc outsb dec stos (bad) dec push sti push insb iret aaa add (bad) xchg xor int stos cmp loop (bad) add cmp add fwait jmp pminub or inc sub clc std sbb mov loop or xchg notb lods push (bad) xor push mov psubusw dec popf cmpsl jbe loop cwtl rcll mov insb (bad) loop adc dec cli fiaddl (bad) cmp mov push or rclb dec (bad) mov adc add arpl fs cmp mov (bad) ja jnp cmp fcmovne xchg lret frstor jnp stos or movsl shl dec (bad) ret inc cmp or adc inc scas push cmp inc js push lea (bad) lcall sarl xchg ja cmp dec (bad) jae and mov pop cmp in cmc pop outsb cmp repz lods jnp fwait scas inc dec add push imul dec lods jae push xchg das mov pop mov mov or adc cmpsl arpl cltd mov call dec rolb xor ljmp sbb xlat jmp scas pop icebp stos adc pop xchg jo cmpsl sbb sbb popa jge jmp insb jno lea dec repz inc push enter jmp jne mov ret mov sub mov sub sub jns fstpt or rolb out mov std stos inc out mov arpl and (bad) cmpsb add mov outsl cmpsl lret fmuls imull adcl add mov fadds or psrlw cmp jns adc push dec add arpl sub (bad) das push paddusw pop stc add repz push cwtl stos adc popw fistp shlb mov or pop aaa and imul loop data16 cltd lea sbb into dec jle adc mov dec imul outsb (bad) or or jecxz les sub jge mov cwtl leave daa outsb iret dec xor mov add std enter pop adc xchg or inc mov inc cmc popf pop sub or das (bad) cmp mov lret push sub test push jecxz inc xchg enter add das fnsave mov fistp and jmp scas imul cmpsb adc pushl ss xchg int call sub in bound lret fistp mov jb cld mov pop inc mov mov faddl loopne jbe adc pop mov mov (bad) aas mov gs mov int outsb (bad) aas adc dec jo jmp mov lret pushf xchg outsb (bad) jle lahf repz pop (bad) jge (bad) jl (bad) push xchg mov sbb sub add inc mov hlt or jl lds aam aam jecxz insb pusha lds jecxz adc dec mov lahf pop repz push mov in dec enter jl (bad) push inc mov jns pop xor pop lods mov fwait (bad) es popa mov les mov lods gs jl and push in inc mov jb adc enter stc sub inc cwtl dec in add aas fmull dec sub ret fist inc add popa pop inc and je push ds sub xchg lahf push out dec mov xor aad add cmp es mov mov fldt inc sub sub fwait subl sbb mov jmp sbb stc movsb pop lcall sti jp leave xchg jne adc lret fisttpll loop fwait (bad) sub inc popa test test fcmovne ficompl int js xchg (bad) inc jno js stos xor fninit mov ja pop sub adc jno jmp mov mov or dec and push dec dec and bound dec adc xchg fdivs mov call cmp jl push aas in fptan lods push mov xchg lahf push stos sbb js pop bound cwtl push push cwtl les and xor loopne xchg xchg sarl int lods outsl loop cmp or add add xor or inc xor fcoml and xor mov or pushf sub (bad) (bad) scas cmp int fcomps int ret pop shrb xchg push cmc movsb push push cmp (bad) lods mov (bad) fs dec ss sub cmp mov pop or adc mov es jns dec xchg call jle std sahf insl sbb dec push lcall in mov inc sub roll cmp mov lock es cmpsl or add pop test mov add (bad) xor sbbl mov pop lods jb jecxz inc jns inc and into xchg sub (bad) (bad) inc cmp loope jg add dec jecxz mov out loop mov psraw into push shrl mov adc or sahf ret fidivr loopne mov inc ficomp jmp xchg jnp lock lret sbb ss adc loopne xor (bad) gs sbbb sub push aad xchg repnz xchg scas out inc jmp inc sbb mov ret test inc das inc dec cmp lcall out shl cmp cmpsb std or insl add inc sbb in xchg dec lods cmp pop fiadd stc cwtl push outsb out movsl ficompl dec aas fnstcw inc lret lret inc and out inc inc loope js add jb bnd jbe push dec mov pop outsl fiaddl mov jne and in outsl cltd adc or push dec push aas and add mov and out inc push or push movsl sti lret mov loop inc fimull aas sbb xchg in leave mul lea and cmp data16 dec stc mov push inc addr16 in loop negb mov (bad) or pop mov lods inc mov pop pop out add sbb (bad) lret test lret inc mov repnz add fsub mov loopne ret mov dec dec push mov pop jecxz ret sbb jmp mov loope sub out mov leave mov pop stos (bad) cli imul mov enter hlt mov or mov loopne sub inc dec sahf int3 scas add cmpsb pop decl or scas std sub aas xor adc shrl cmp test push test call addr16 mov cmpsb xlat add je repnz fnstcw mov jle bound dec pop push shrl sahf lret xor adc push mov ficompl rcrl aaa jle add gs imul (bad) xlat adc sub cs daa jns cld ja imul jmp mov jp out mov push out and pusha xlat leave jns adc (bad) test add lret mov int mov inc pop pop (bad) in cmpl mov ret (bad) decl cmp in out pop test insb popa push xchg scas pop mov repz cmp xor and lods jno lock pop mov inc and jl adc xor jns and push ds pushf mov pop adc add jbe loope cmp lds out loop adc (bad) xlat ds (bad) or movsl mull scas sbb (bad) (bad) jl add int lahf std loop in loopne,pn scas jecxz dec inc sbb ja adc jmp iret cli (bad) fistpl push loopne test jbe into jge add sub ss dec mov insb jb js and sbb fs jno in and or clc outsb push rorl dec lret dec aam jns push repnz imul push adc es sub in push pop jno add rol (bad) aaa insb and push mov enter test aas and jb push enter dec mov pop pop into jle xchg pop nop xchg aam mov int xchg outsl andl lods insl lods mov fwait lods addr16 pop pusha popa xchg dec mov jp stos xor aam inc and jp fbstp pop clc fwait shlb push push std push adc popf jno imul out push lea pop inc cwtl sub bound cmpsl sti lods loopne mov std pop inc xor sbb mov sub fistp jecxz fwait push loopne repnz xchg xor ss jbe imul aas jns xchg popf sbb jnp pusha popf xor out mov mov jle inc fdivp cmp cs inc out fwait and loopne ljmp mov jge sub hlt xor pop adc flds pusha insb aad or pushl shl lock push jae push pop cmp bound xor mov scas mov les sbb mov fiadd push pop inc and shlb mov xchg inc cmovle stos insl ss les adc dec ffree mov sahf pop adc subb xlat mov imul sub dec or mov lahf (bad) cmp xchg scas and lret (bad) aaa jl (bad) lock add mov cs cli inc cmpsb scas imul and mov sub mov xor xlat cmpl xor push inc adcb stos push jae pop xor ljmp pop push xlat inc mov andl cs mov idivb inc cmp popf shll dec fimull outsb lret pop fisub jmp lods mov scas sub sbb aad int3 aad (bad) fimul jbe jle sub pop xor mov out out xchg or or pop jg into aas mov into mov add and int lock xlat dec rol xor sub or pop adc lcall push xorb ljmp xchg mov or adc and or dec arpl push rcpps jbe ret mov mov stos adc fchs cwtl mov inc sbb dec mov cmp (bad) xchg xchg add xchg jo sbb add add inc inc push or lea dec mov xchg and nop mov adc sbb xlat jmp inc pop cmp xor xlat pop (bad) push repnz sbb inc ret xor xchg (bad) iret xlat pushf or push movsb inc push loopne shrl cmp (bad) and (bad) jge or cli adc movsb imul xchg fbstp das jecxz popa ret push xchg mov mov jb xor lods mov mov xchg push add dec jbe out jae or fxch test adc je loop and jnp leave insb xchg dec xor pop cmp cwtl push sub je test jle cld and mov out inc ffree insl xor lds (bad) lret dec sub movsl and dec mov mov ret repnz test and inc sub cmpl sub adc dec pop sbb (bad) outsb push aad aam cmpsb mov sbb or test test dec stos jmp leave lds jne cli add lret pushf or rcrb aas xchg decb pop scas xlat cmp outsb popf mov inc push stos mov cli push les fdivrl sbb adcl mov xchg inc push cmp aas sbb xchg pushf daa mov inc push outsl stos cmp sbb pop aaa inc shr or or xchg cmp or fistp push push rcr xor std pop imul mov arpl int3 xor (bad) mov mov in fwait loopne stc rol insl pop sub xchg lods push inc xorl imul cmpsl (bad) xor sbb adc mov ret aam ljmp jne add xchg xchg arpl push jns jb hlt mov mov mov (bad) shr cld arpl cmc call jo movsl orl out or adc enter inc rcrl or xor pop enter cmp fbld js pop test mov aad jno xor movsb xchg aas dec inc test imul cmp sbb push stc inc ret mov xchg cmpsb shrl jno cmp les int3 sub or push mov sti jecxz (bad) andl xchg nop dec imul scas add or cmc dec jle imul gs test popf and push jg xor dec int push dec aad sub test mov jg and shlb dec and mov popa ss inc add movsl movsl js sti push je xchg lock jp sub or sub add mov or push insb rcll cs in jl movsl mov ret xor iret mov dec jp aaa mov jb push lds (bad) xor fist fnstsw adc push mov dec mov daa add rcrl cmp pop mov inc out mov xchg inc cli iret test jbe lea mov rcr and and (bad) mov pop pop fcoml sub jne sarb xchg xor es daa and incb xor pusha pop or cmp jae repnz sbb jg ret enter pop cli adc or sbb ret xchg mov jge sarb sbb xchg les xorl mov test cmpsl inc dec imul jb cmp (bad) mov cltd in mov test loope push fdiv inc lea cld mov mov xorl rorl addr16 enter ds lods clc pop mov mov scas mov push pop jp mov orl cs sti sbb or dec fwait cmpsl movmskps (bad) aad jmp push mov hlt lret push push mov dec nop jns xchg dec repnz adc dec lock mov lock and push mov fwait incb sbb mov lods rcrb vpmulhw pop leave xor inc push adc jno movsb mov (bad) aaa mov or outsl lahf addl push sbb (bad) popf xor arpl fwait shrb sti and out sahf mov icebp mov imul cltd cmp pop cli adcl (bad) ja je mov fldt push pop sbb clc sub jbe test fcmovnb mov aas push pop std repnz or mov into lcall das (bad) pop dec notl std punpckldq and mov iret lret pusha stos insl fs std aas jle out xchg inc jns int3 pop and aad sbb mov push hlt mov pop aad test jle inc jge jmp mov pop adcb roll jae mov cmpsl dec lcall je daa loopne sub imul xor mov dec dec fsubrs push ja dec mov mov cltd add aad inc sar adc pop or rol sbb mov iret add jecxz inc pop lods sub sub in sub jno pop xchg pop addr16 add scas pop enter orl jns bound add lock dec xchg lods mov fdivrs movsl out jp cli bound aas insl pop add dec jle in jge aas push jl repnz cmpsl sti or cmp cli mulb aad in in fnstcw rclb lea add loope mov fimull je dec (bad) lock stos pop jl out add dec popa mov insb ds inc inc xor out inc jle fldl sub mov cmp cmp and adcl push mov dec sub and bound shr mov out inc sub cmp adc xchg xor lea sbb mov mov jb (bad) jo setnp jae or mov lods mov or mov iret add out ret add out hlt push out push imul add add cltd insb pop inc mulb shrl aad fbstp push aad push mov jecxz out dec sbb movsb xchg mov lahf lret push inc jo xor xchg mov mov mov add in test add jns or add sbb jno rorb adc (bad) idiv jo jbe in adc pop in roll pop and aas cmpsb cs push movsb lahf mov adc imul adc cmp inc arpl mov jmp outsb or mov sahf (bad) hlt std or mov mov divl bound daa push cli fnstcw inc dec dec adc aad outsl out je push int pop lcall adc out jns js pop xchg js ss and add inc fbstp jmp inc add jecxz xor repnz mov xchg mov jmp add outsb sub sub mov cmp xchg (bad) outsl ret loopne iret cmp mov adc mov faddl sbb add (bad) out jbe loopne in xor lods or (bad) jmp and mov je ror xchg push xor orl ds sbb in dec aas in cltd adc or ud1 fbld stos pop out (bad) adc outsb (bad) mov or sub xchg notl orl ss mov lock shll in sbb daa jl adc pop cmp pusha jnp add out pushl rcll lcall in mov xor mov adcl add mov xor (bad) dec sub xor or inc sub sub gs jmp lock sbb inc jne mov mov (bad) fnsave mov adc int3 outsb arpl test cld je je (bad) idiv out loop call lret frstor mov mov mov xchg push and jge inc mov adc hlt jl pushf imulb (bad) add ss dec mov mov fnstsw and lret mov push arpl sbb mov fiadd lock mov jb loopne push inc mov in sub dec adc cmp xchg xchg mov pop jmp jne xor cltd inc das and mov test loop xchg cs push pop xor mov xchg lea cmpsl shll je cld pop mov push in jmp icebp orb inc mov inc sbb aas bnd (bad) push pop ret sub inc loopne ja inc aad xchg in mov das pop or xlat out movsl stc and stc mov stos sar mov push push mov fwait icebp out jg xor ss dec pop sbb cmpsl sub in in mov xchg xor or fldcw and mov fcomp imull aad hlt inc pop lret sbb mov (bad) push push cmpsb or sub outsl bound ficoml mov dec mov cwtl mov adc leave lds xorb cmp xchg icebp mov movsl xchg add pusha jno rcrb test sbb cmpsl fbld stos jne xchg (bad) mov mov andb fcmovnu mov mov sti dec ss insb adc movsl xor jo cmp cmpsb stos jmp and or mov jae pop imul sahf loope cwtl clc mov pop int3 adc sti dec or xchg gs sbb jo add mov adc sub insb pop lock add push dec inc outsb xor dec xchg or pusha xchg mov int3 xor xchg xchg inc addr16 cmp mov inc add add fsubp cmp xor push addr16 inc (bad) aad iret adc cmpsb inc out jne or add jbe mov add in nop pop daa mov mov fmull mov add fimul dec (bad) mov nop cmc nop sahf cmpsb xor inc fcoml xor adc ret or cmpsb dec mov sbb cld shlb repnz out (bad) jns (bad) and adc cmp sub jle adc xor fdivrl (bad) push ds inc adc cmp cmp jno add das sarl dec xor mov pop mov stos in fwait xor sub mov adc or mov mov cmc lahf sbb dec pop push jno push push dec pop sti mov inc shrl out std adc adc ret and ret ja pushf mov xchg cmp roll jmp jp sarb and xchg sub sbb call fsubr fisubr and add sar pop gs sub mov movsl sti inc cli mov daa add push mov cmpsl aad xor mov loop loope rep leave (bad) stos dec jb int3 cmp mov mov jo loopne jmp add inc fisubl in rcrb push pop mov dec mov enter mov roll lds sar pop (bad) jmp shrb mov je es mov xorl mov xor mov sbb mov jno lret out add clc xchg jbe js outsb xor cwtl mov jno cld jae scas jo fistp add push dec sbb mov das outsb loop sbb mov jb pop fucomp or fnstcw test push shl outsl loope pop scas xchg xchg loop add inc add mov cmpl mov (bad) je lds dec adc daa (bad) push sbb sub jns inc (bad) inc pusha jl mov mov xor cld sub out jl adc sbb xor (bad) out push adc xchg iret test xchg and jne imul lahf xor or nop dec test popf or sar mov ret inc test sub sub xor mov int3 mov les scas xor add fisub push stos and jmp and adc test ds rep ljmp fldcw das (bad) jne cmp xor in outsb mov inc arpl mov pop testl jecxz jo pop aam repz repz nop es loopne mov and mov rcrb adc dec (bad) xchg pop lret (bad) orl addb jo xchg or call enter dec movsb int3 cmpsl insl (bad) setae scas mov or mov fwait or in sbb mov sbb (bad) lcall out push push jb icebp fsts adc cmp stos ss out (bad) sbb mov icebp insb mov mov add adc shll inc sub fwait or xor and cwtl scas aad lahf adc cmp or mov adc rcrl dec or adc dec mov es outsb popa gs data16 out es add popa pop int inc push fistpll and inc (bad) ljmp into pop sbbl xchg mov mov pop sysexit fidivrl jge mov pop xchg in jl repnz stos jno fnstcw dec lcall in push xchg jge rcrl into mov loopne idivl iret sbb push lret inc popl mov cs cld jno pop ret cmp adc lods out pop inc and scas adc dec sahf in xor das push loope mov pusha inc andb je scas loop notb pushf jnp hlt push ja (bad) in out sahf or jno out pusha loop daa imul movsl std sti jmp cmp outsl inc cld pusha ja push int nop clc jge push push (bad) add hlt popw pop ss mov pop ljmp rcrl pop jno lret daa fmuls sbb sbb repz test test or sti push sbb imul mov mov bound (bad) xchg cld sub dec shrb fs inc add mov add stos cld test cmp or xor incb jmp add lea dec sti (bad) xor fsubrs mov and xchg fdivrs in ret cmp jg popf push es fidiv jle dec dec negb push push fiadd in jo fdivp mov pop out adc inc sbb pusha cwtl sub xor xlat movsb pop adc in and cli cmpsl hlt pop or std mov sar push in loope fcomi xor int3 mov xor mov push imul push jg dec jecxz jle xor cmp xchg xchg outsb push inc or jg popl dec mov es fs (bad) mov ret sti repnz lods fistpll adc cmpsb or or call fdivl hlt fstps or cmp mov and push cli xor jae xchg dec dec pop gs xor mov jb dec ja or sub lret popf jecxz xor pop cmp das mov je (bad) cli (bad) in add mov scas insl loop mov and ja scas pop (bad) mov xchg insb push mov ljmp lds in sarb (bad) xor mov scas lret and cmp add xor push repnz ja dec sub bound or lods clc sub inc mov loopne cmp jg sbb inc leave jno,pt xchg or ja pop fnstenv inc iret sub ret loop or xchg push xor pop mov jmp ss mov push loopne pop xchg in push sub mov push repz out into fcomps inc jmp ret jno mov addr16 and stos mov imul xchg testb mov push dec cmpsb mov out lret pusha adc scas out mov daa jmp (bad) in inc or (bad) outsb cmp hlt mov xchg lds sub push ljmp mov sbb mov fstl mov push in jl pop mov inc pop mov xchg js in outsl pop dec loop aas cmp das cltd fnstenv inc cmp add add loop data16 push dec push mov sbb andl sbb mov pop inc sub inc loop in push mov inc mov xor (bad) frstor out mov xchg in stos sub push fdivrl xchg mov in jmp int3 jecxz pop mov xor push cmc into xlat into push or add shl sub cmpb out mov fstl test test cli cmp into xchg jns popa clc dec leave push jle shl dec fiadd orb or sbb ficompl pop fistp dec adc mov sbb adc divb pop and repnz or lods xchg adc push int mov cmp out sbb mov inc cmp dec fs jnp mov ljmp jne out sbb fbld adc ljmp (bad) adc addr16 push push jge bound inc jb fiaddl cwtl add push stos jecxz in jns std mov inc popf ds push inc xchg imul negl jge je lods mov (bad) xchg faddl jmp aaa loope adc sub adc inc cli into data16 mov or xchg movsb lods adc xlat (bad) frstor imul jnp dec mov in std cmc xchg lcall sbb jl ret shrl ret xlat rcrb adc (bad) in stos shl jmp out stos add fimul push pop and (bad) divl mov and icebp mov push inc mov adc popf and fcmovnb in xchg (bad) jnp xor (bad) punpcklbw push lock mov mov lret push (bad) dec lds je adc sub lret dec ss xor mov das pushf cld xchg cmp ljmp inc cmpsl outsb mov sub into jno sub sti mov xchg sub xlat mov or mov mov push add inc jnp push shll adc orl loopne mov xor add xor lahf lods es ret push insb push loopne aam fnstenv rclb mov sbb ret jp je push xchg mov testb sbb adc cmpsb insl or cmp and (bad) das rclb sbb clc and pop call xchg dec into and inc or add lea pop ja push dec and cmpsb mov mov mov in ljmp fimull sub insb or lret mov mov sub push lret xchg in test adc lock sarb and mov fwait roll je and and sub jno jae out sbb add xor adcb push xor loopne mov cld sub rorl push or lea data16 inc cmp push and hlt lea cmp inc sbb out push inc test (bad) mov leave mov int3 test imul std push (bad) fcomp push and mov and mov sub pop rorl pop jnp fwait pop pop sub dec push lea add and dec push (bad) out mov loopne ret inc inc mov movb add or movsl inc push stos adc or testl inc add push movsb iret outsb ret cs lods mov jns mov inc push arpl pop sbb pop add out or mov ljmp sub or (bad) push (bad) in sbb movsb bound mov xchg and sti mov aas stos loope daa ds dec mov mov push inc int3 sub mov daa movl add push sub insl mov popa push rclb hlt lds pop xchg sbb movd jl addr16 je jnp in mov pop cmp and xor and mov cmp adc pop jle xchg mov adc shll jmp in imul push xlat cmp and pop test fidivrl pop push test mov cli aas (bad) outsl xor outsl bound loopne fidivrl leave popa add push sub daa inc dec sub sub fimul sub push dec sub nop movsb mull ljmp into adc or clc sbb jb mov pop sub stos add jge push pop xor pop scas pop mov aam fidivr jns and cmpsl push or das mov xchg (bad) and cltd leave adc and stc add scas lods inc lcall or inc arpl fnsave fimull mov and (bad) xor pusha out xchg fisttpll fbld pushf and xchg push cmpsb fisubr or pop lcall inc jl sbb andl push cmp cld (bad) in iret adc inc (bad) (bad) jno mov scas sti pop stos lds int hlt xchg fs in in sub mov pop pop movsb das push jge aam cs mov adc xor repnz ljmp cld inc std cmp and ljmp xor bound xor push mov cmpsb enter cmp into insb cld scas rcrb sub pop xor imul (bad) iret push test ljmp ficompl push lock push mov lret push mov xor divb cld xchg jns jae mov in cmp fucomp in cwtl xlat sbb inc call in iret adc xlat ret mov mov jle sbb cmp in fimul push pushf mov inc pop (bad) flds jecxz or and enter lods (bad) call sar mov push addr16 nop jp cmc mov xchg shrl inc xor icebp sub jge mov ja (bad) mov mov test mov mov stos mov xchg cwtl sbb add divb insb adc in pop insl std or adc addr16 ja jne push mov sub mov imul data16 mov sbbb (bad) movsb leave cli call fstpt push jle roll leave or inc dec cltd leave gs cltd xchg cmp sbb fildll loop adc push dec test btsl sbb xor dec mov mov pop rol fwait and push xchg mov fild cmpsl jb ds inc jo push push cmpsl or mov popa call scas inc ret jne loop jns popl jbe xorl cld mov (bad) js and jl mov mov repz add outsl mov sbb hlt rcl sbb aaa xor jl sbb int3 sahf (bad) lds xlat jge (bad) aas cs popf cmp pop scas insb stos jmp dec mov stos das cmp jns,pt xorl ss pop dec flds xor dec sbb push (bad) or test mov xchg mov dec or into xor dec iret sbb dec js nop add mov dec in inc mov (bad) lea inc push bound jno xchg xor push lods fstl sahf adc adc lcall inc pusha mov fucomip mov addl mov cmp xor popf push inc outsb fistl mov add mov imul cmpsl lods cmpsb into adc jmp push inc jne pop xchg sbb stos (bad) je mov fsubl cmc ds push imul xor addr16 push popf mov lds xchg xor jnp jecxz out std iret fcoms call push hlt das loope es sbb push push pop lret dec mov push stos nop arpl xchg mov add (bad) mov je out flds bound cmp mov cmpsl and mov jbe (bad) jge roll repnz xor fidivrl mov jmp hlt dec xchg ret pop pop or ret pop and add inc int jmp or push (bad) es xchg push push cmp sub lods add dec inc out scas arpl sub repz loopne loop add mov lret lods cld lret jmp imul xchg (bad) icebp push jmp pop add mov das scas mov js push shrl jne xchg xchg dec ror xchg jae pop pop push ja sbb push decl mov imul pop lock inc data16 pop and push cmpsb roll fs mov jo ja fstps daa push sbb popf or scas dec xchg fsubrs jnp,pn pusha (bad) and xchg mov enter stos mov stos dec inc gs pop lds or arpl adc push xor inc sbb xor and cltd test push pop or (bad) sti sub loop cltd cmp mov int js sbb mov sti inc cli das lret cmp leave dec aaa stos adc add stc mov pop test (bad) push jbe dec push adc mov shrl inc dec fisttpll cmp test in lret stos jmp cmc idivl loopne push mov jae pop cli aas add xor addr16 sbb clc cmp push add push pop cmp jno sub addl jmp aaa daa adc and les gs sbb cmpsb or push pop sub push lea pop mov loope (bad) fmull xor xchg mov loop sbb jae fisub pushf xor lods aas jg push or sahf or lods cmpsl dec mov mov sub jp dec scas add pop jecxz cmp pop fistp (bad) into push jecxz rcll and xchg gs iret lea xorl mov pop in pop xchg cmp lods movsl push xor push lock fistl adc aam aas int mov jecxz dec cmpsb jno cltd mov stos jno xorl xchg jne jecxz xor push (bad) mul adc mov in sbb xchg mov js ljmp push or adc add imul dec mov sub fistpll cmp in icebp add or jle mov ret lock dec data16 sub repnz xor or mov testb loopne xor push jnp test aam mov lods xchg cmpsb adc and repnz xchg inc hlt es hlt int sbb jle mov push pushf push adc arpl pushf and dec jg fidivrl jp lock cmp das sub scas mov lahf test iret ret pop adc nop push aam ss inc or sbb dec adc xchg jg test pop xchg or push imull inc sbb mov out in in fsubrl (bad) pop in fidivrl mov sbb push mov xchg pop dec add (bad) cltd lret push cmp loope (bad) cld dec inc push jmp (bad) xor sub lock cmp (bad) pop dec mov mov xchg pop cli push adc addr16 sbb das rclb xchg mov pop scas es imul pop or adc enter inc fild push cmp repnz mov sbb testb lcall (bad) icebp scas enter xchg pushf xor (bad) rolb sbb jge jle mov rcl aad lahf lds (bad) es mov mov lea (bad) pop mov mov add movsb test jae lahf cmp mov jg inc lret cmp (bad) dec loopne pop mov inc jne enter inc xchg cmp xorl loopne cs push rcrl adc cmp push sub mul lods lock push xchg inc (bad) adc loopne addr16 dec (bad) movsl mov mov iret ret mov jl test mov movsb xchg ljmp adc jne out add out inc inc add and jno jg dec ror fstpl jnp dec fmuls decb add xor ret hlt add push cld ds ss mov addr16 jl cwtl jno std adc push lods fmull push pop cmpsb fwait stos aad inc imul jmp mov xchg adc or or arpl xorl mov adc jnp cltd shrb sbbb push mov mov pop lret pop mov mov in lock xlat insb add ret cltd adc inc dec xlat jnp lret or cmp mov out push xlat cmp xchg jmp mov mov rorl pop add mov (bad) pop fmulp aaa add cs in aas ja lret rorb fistp jmp sti sbb cmpsb add xchg (bad) popa in dec push rep test cltd xor pushf loop jmp xchg call sbb shll xchg imul pop hlt pop mov dec mov cmpsb std cmp daa push ficom add fidivr insl shrl shrb mov adc inc movsl and (bad) dec orl push and jg jae adc jp or push mov add ja sar addr16 ds add pop xchg and push push pop pop movsl imul and into mov push fucomip jmp cld cli cmc fildll sub and leave (bad) lret dec mov pop or sbb inc mov (bad) cld addr16 test mov and sub xchg push sbb or stos mov mov mov stos sbb in addr16 mov divb mov sti outsb cmp cmp popa or ljmp (bad) ret iret pop (bad) es lahf xor push (bad) out lret lcall pop mov sub nop jl bound je dec pop push mov lods das (bad) mov and jnp aam les jne (bad) add idiv fwait loope or add (bad) repz sub sub push cmp adc inc jle ss xor pcmpeqd jo test dec jecxz insl andb lods mov mov push mov stos cli pusha mov and leave (bad) sbb lret and (bad) mov jl or and mov fldt xchg fbstp push popf out and lock jmp jl popf adc sub loop dec xor roll push push cmpsb je mov mov push es adc jg (bad) (bad) jl jne mov dec cmp sbb lods test cmp std in xchg outsb test aam adc icebp stos pop pushf out mov mov cli mov mov add push or (bad) aas cmp xchg jne into push cld jecxz call mov push mov sub in aad stos mov aam fidivr ja addr16 dec (bad) stos ljmp call loop mov pop mov das add and push mov mov sub inc (bad) jl dec lds testb jmp mov dec in mov hlt pop mov push fcompl cmp mov push and icebp mov lahf jl jp in adc clc ss loopne fldenv loopne fstpl jp pop xchg aas jb inc fsubrl iret adc inc fs hlt (bad) test jbe xchg push inc sub lea adc jo jb xchg add pop aam mov add cmpsl clc scas clc aam or adc xor push and popa clc bound mov mov fidivl daa roll bound pop cld popa fadds test sub nop mov pop loopne mov inc jbe or inc xor jno cmovne sub sbb inc dec movsb jg jmp orb aad jo sbb pop fdivl stos flds xchg inc (bad) cmc xor lret jnp add sub enter das in xchg push dec sti inc xchg xor mov push in adc xchg xchg cwtl adc repnz pop add dec sub lret adc jno mov add clc not ret cltd sbb mov cld sub jmp mov in mov or lea icebp sbb data16 push sti push jbe sub enter cmp (bad) or lea test bnd adc je xchg shlb in scas add in cmpsb fnstenv mov (bad) repnz mov push xor shr push lods bound and and aas popf clc mul push sbb (bad) jnp jle and mov insb push or sahf dec outsl xchg leave stc mov sti pop ja call add stos mov aad pop sbb or xchg mov jo imulb fisubr adc lds sub and pushf out nop or dec pop jmp imul lods bnd cmp xor data16 mov test push xchg sahf and arpl ss icebp adc (bad) mov xor jbe inc and mov cli jecxz jo repnz xchg rol inc mov cmp subl xor pop in add repz ret push lea (bad) fimull hlt adcl aas xor push pushf push mov mov addr16 lds xor xchg fwait dec mov xchg xchg aam mov ficoml sti push clc adc fs adc in movb mov orl (bad) fucomi or xchg lcall nop add pusha adc ret pop adc je mov fwait out jno cmc hlt hlt sti cs loopne mov fnsave and fldenv lock xor jae mov outsb lret (bad) mov in push repnz pop push adc sub add lds mov loope push mov mov cmp pop js pop jle inc popf mov or ret scas mov idiv fs ljmp inc lea pushf cmp push pop (bad) xor adcl pop mov aam pop inc pop out push adcb mov es mov xor arpl mov jbe mov sahf js mov loop xor ficoml aad jmp pop mov inc sahf test es call inc or int3 sub mov adc cltd adc dec dec xchg jno cwtl lds inc xor test jae cmpsb aas sahf pop pop jle add sti pop or cld adc inc ffree loope sbb outsl mov fwait or or movsl adc mov cmpsl or dec stc xchg pop lahf in out mov push mov es movb cwtl loope inc aaa (bad) push pushf das xchg mov mov push out and cmp jl xchg push lea mov lcall rol cmpsb xor mov mov in into cmp jno jo mov es push scas adc push repnz aam or mov xor sbb imul or mov pop cmp mov sub fimull xchg cmp mov out ljmp jnp (bad) and in add into lock loop (bad) loopne push xchg cld icebp cmp in lock add test push aas std add les mov jno pop insb dec arpl or pop scas fs loop pop jl mov sub aam dec daa xchg add loop push fs add xchg add adc xchg sbb test (bad) dec lock in notl or adc fcoml xor mov jns sub xor cmp sti es mov aad cmp push sahf lods push insl stc sbb push mov xchg sbb popf data16 cmp or fbstp popa scas int3 stos rorl (bad) inc dec leave dec std or popf push ljmp sub ficompl movsb popf sahf stc and mov ja stc dec inc subl sub movsl jecxz jns jbe (bad) add sti push sarb ss or mov call mov (bad) int3 sbb sbb mov subl sbb xchg mov ret sbb pop or testl aas and xchg inc andl (bad) xor aas jo arpl xor or sbb xor (bad) mov or fsubs (bad) sub divb adc imul rcrl mov daa mov clc aad cltd jnp iret sarl inc cmp mov insl loop xor (bad) mov stos mov enter addl ret (bad) ja aam inc dec in decb addl adc test js arpl pop imul adc adc sub jmp enter mov pop dec mov mov add mov and add (bad) movsb jno xor mov or stc mov xchg sub test mov push push pop and and stc jl in sub scas pop not fxch test aam in popa pop sub cmp cmpsb push mov out sub sbb aam pop pop push (bad) xchg pop pop mov adc xchg xor jae and jge add mov js pusha cwtl test stos cwtl mov sub scas sbb mov sarb mov xchg rcll je cmp mov loope shrb insl popw in adc pop (bad) das jecxz mov scas dec cmp mov ret imul jne lcall xchg sarb test and adc xchg imull movsl jne icebp xchg popf stos (bad) hlt lods inc cmp roll aad sub ret in ds cmp mov mov imul imul rclb lods mov insb push pop das call movzwl das sbb stos adc pop std mov scas scas add test push call cmp std jb jno push (bad) jmp (bad) or jno xchg cmp cli loopne out or int3 push push cs dec rorl adc les bound flds adc cmp imul xor (bad) mov sbb mov mov jnp notl pop jnp mov jo pop test adc (bad) mov fldcw sbb test addr16 inc push leave mov inc lods xor push lods cmp push enter iret push add sbb outsl mov xor data16 sub sahf mov push pop sub scas xor cmp enter bound push dec icebp adc cmpsl sub mov cmp test out or inc inc and sbb sub mov mov sub into jne mov scas push jbe in sahf jl mov insl sub test adc mov push in xchg mov pop lahf cli fsub push pop xchg mov xchg pop mov xor outsl push or cmp lea cmp xlat in ss enter aas fisttpll inc pop xchg pop push mov jno fdivr ja lahf pushf std cld jno mov push sub adc cmpsb xchg cmp lcall inc hlt mov sbb mov test fs shlb nopl cmpsb adc sbb xchg stos push sub cmp pop int3 or sub mov mov scas fs fimull sub in mov sbb jno call jecxz sbb mov and fisttp inc jmp cmpsl sbb jbe add jle scas jbe pop dec and sub lods inc pop clc inc dec out xchg rorl mov dec pop push scas icebp sub xchg add stos std hlt lahf cmp clc rcll xor xchg arpl dec rorl pusha inc sbb sub xor call mov pop push stos lahf xchg xchg movsb repz ljmp hlt sbbl fwait (bad) xor fist xor aad pop cmpsb xchg repnz mov xchg out pop xor in and lds xchg out push xchg es sbb or xor lret inc shr stos enter outsb xor ror in mov pushf (bad) ja (bad) test stos dec rcr out popf imul scas pop pop ret cmp xchg aam adc mov push cmpsl (bad) iret or pop and adc ja mov pop decb push nop mov rorb xchg loop icebp cltd mov stos pop jb stos test test push inc adcl push mov mov xchg out jecxz divb bound or ret mov jne pop push test shll and sbb (bad) dec bound add mov mov sub cmpsb (bad) xchg ret sahf roll popa stos je lret mov lret inc xchg movb int fwait ss push lds bound pop jno fldl sub mov jae mov add lods sti jp hlt mov shrl pop nop pop jg and xchg jmp sahf icebp in mov mov mov sbb inc pop jle loopne xor int3 lret push fistpll ljmp and fdivr or inc dec lods mov test mov fimul mov push cmp movsl pop sti mov stos out insb jmp jo repz loope cmp lock mov rorb loope clc dec js xchg mov aas dec mov pop jns lcall add sti xchg adc aaa jp in mov mov sti stos outsl jp xor sub mov (bad) or popf enter jg mov test push jg sub jne xchg xchg pushf inc jecxz mov push jg xchg (bad) pop addb in shll add sbb hlt fwait imulb mov mov leave sbb inc xor roll out imul or push jnp repz mov fwait pop cmpsl dec jge,pt rolb lock add xlat cli sub mov adc clc mov leave mov jp popa in nop pop in loopne mov mov adc idivb jl rorl jno sbb jnp (bad) mov scas push (bad) mov hlt fistpl lret enter xchg sbb add clc pop or data16 push iret (bad) lods (bad) loopne cmp pushf xchg jmp lret cmp dec cmpsb pop stos leave and icebp push imull push push lret pop mov in out mov adc or ss test daa mov xchg sub out das push cmpsb jl xor (bad) imul ss mov xor xchg stc fimull inc jle insl das dec add sti push cmpsl mov mov or out cltd sub push push stc push popl xlat pop out jge lock inc bound pushf xor cmp mov divl aas or xor jno enter mov add adc stos xchg inc inc mov adc mov mov mov ret and xor xchg (bad) mov cmpsl add cltd xchg scas call (bad) (bad) mov dec (bad) mov (bad) xor jp repz cmpsl add outsl mov das inc mov sub jbe outsb decl cli or xor dec sub sub cmp xchg pop dec push cmp mov scas xchg xchg pop aam pop add mov xor imul and push push sbb pop test test dec mov mov and (bad) mov sub sbb test mov push (bad) loope std sbb pop pop mov and repz mov cmp or push arpl sbb nop adc push (bad) xor shlb fdivl out leave lock lcall mov push ffreep imul mov fsubrs push jle lds lcall xor decb mov pop int std mov sbb mov and jae mov std cmp push add repnz ret aad inc js dec shlb lock xor testb lret int3 or xchg mov adc add pop jmp mov fildl cmpsb push daa push pop and hlt (bad) je inc sti int and test push dec add or fild push sub jbe nop loope pusha cmc shrl std insl movsl jl hlt pop xchg adc es sbb fwait dec xlat jl not negb mov enter dec cmp or mov mov cmp jo repnz repz aas shll xchg mov jne push in dec pop gs ljmp pop mov xlat sahf imul push aam faddl xor and shl adc or mov push lcall push aas push les add mov insl outsb lret sbb xchg adc daa faddp cmpsb xchg fs cmp fucompp clc roll aad out das scas mov and (bad) into adc jg sbb into sbb xchg leave (bad) lahf jns mov dec das sub adc imul ffreep int aam mov stc (bad) pop mov dec pop rcll xor xchg (bad) loope popf into test ljmp mov fld cmp xorl add stos pop push push xchg inc enter mov popf mov mov loop rclb dec loope in and mov decb mov hlt dec inc mov scas add mov inc xchg (bad) fsubrl mov adcl add daa pop or or mov insb stos push enter xor mov dec jl in cmpsb lret and sub int3 mov sbb adc fnsave outsb fsubs lea mov pop gs jno inc inc pop arpl pop rcrl js rol iret ss push pop dec movsb in mov jne push sbb das mov mov mov rorb stos jge subb lret mov and inc sub (bad) inc adc fs fxch inc or (bad) in dec out iret inc (bad) in dec out iret inc (bad) in lds push push insl dec xor jne insl push (bad) leave push push inc loopne fstl aam jmp mov inc cmp lods das mov mov mov push imul test add in dec mov cs (bad) fdiv mov fucomip dec test mull out pop test stos gs insl ljmp mull jmp ljmp cmp ds int cmp fcoms adc (bad) dec pop cmpsl xor sub inc mov add push lahf inc mov out jge mov fmuls (bad) dec lret cmp in in cmp inc xor mov dec xchg mov out mov inc leave dec outsl lea cmp inc jecxz or mov in fsubs push xchg mov rcl bound out or pop push bound xlat add nop pop mov mov leave pop mov mov jg or dec lods cmp sbb (bad) or xchg push lret (bad) add movsb push mull pop inc fidiv loope mov sub jns inc mov int scas pop sahf cwtl dec pop loopne frstor adc repnz addb sbb mov adc (bad) imul push sub adc lahf sub dec incl dec mov cmp gs lds aas sub cmp jne test sub mov pop jnp dec sub sbb or inc scas shr cmp mov xor ret js push mov loop movsb andb and or jns mov int3 (bad) (bad) (bad) and lret xor push stos push jns sbb movsb xchg es inc mov int3 mov dec stos cmpsl mov jae out clc repnz daa out sbb mov jae repz sbb xor cli mov fsubs xor movsl aam pop mov push sub dec or fs lahf push clc xlat pop test push adc out jge cltd aaa push mov jge xor imul arpl cmp xchg pop lock mov jo add pop pushf (bad) jp or sub push test popa imul bndldx xchg jns test push imul xchg inc rcl mov (bad) dec out in bnd or mov loopne and pop mov outsb xacquire mov imul push fcmovbe pop push xor inc dec int adc repnz push cmp repz into mov mov sbb pop fiadd pusha jne test subl mov popa sbb movsl xor cmpsl testl push clc push jp je rclb cmc adc adc cltd pusha sbb xchg lods cli loop xchg jg sahf pushf pushf xchg pop addr16 clc xor mov mov jecxz jl loop (bad) xor add cwtl add mov mov mov cltd pop mov aam decb or ficom jb sub nop jns out call cltd arpl lods fildl ret sbb xor cli xor sub or fadds clc pop adc scas add mov incl es push shrb mov xchg adc fsts xor xchg sub out clc lahf insb sub mov lock push ret xchg ds mov push rcl sub outsb popa sub jge ss lods (bad) xchg in (bad) fbld (bad) lret adc data16 arpl int jae sbb pushf mov mov std mov js int lea arpl hlt arpl jge ds aaa mov mov cmp arpl inc enter mov and or jp out xchg inc dec jg jmp sub cmp jg lock xor mov ja xlat xchg jecxz push cwtl pop rol mov sbbb ret sar cmc push dec inc xor ljmp daa push or or xchg mov cmp push cli lahf mov dec ds push add cmp xchg mov aad (bad) mov pop pop enter adc lcall push lcall movsb cs jp cmpsb jb hlt and daa mov xor xchg sahf mov loope adc ret hlt lods sbb (bad) enter push dec mov imul je or push xor jg adc jne dec adc adc icebp in pop mov sbb and aas pop mov or ficomp outsl out mov inc mov dec es icebp lcall mov xor cltd repz arpl (bad) lods push mov pushf pushf aad cmpsl daa cmp push push xchg mov ljmp fsubrs cmc mov test jl addr16 inc icebp popa (bad) xor sbb ss ja cmp inc rcll add add and aas inc mov xor push mov test pop (bad) sbb fs int scas adc pop imul mov sbb mov jno mov add cmc and bound insl xorl in sahf adc pop jb sub xchg mov lahf (bad) mov sbb mov inc xchg dec mov insb imul in in dec inc std gs dec and pop ret mov mov inc dec cmp sbb and fidivr iret lret jnp ror and lcall mov inc jnp shrl jnp pusha pusha icebp es pop int3 pop and add notl inc push clc push xchg sub xor mov pop mov xchg lods ds mov pop lods jg lods push adc (bad) mov add cmp sub xor jb mov pop mov sbb lret mov xchg mov into (bad) dec adc movsb pusha xchg fldcw insb aaa cmp add mov pop sub jg cmpl test jb js add pushf aad cmpsl mov jnp inc cmp loope loopne pop or das sbb clc sbb add and xor iret bound or sti bound xor and cmp add adc mov insb imul pop cmpsl lret clc pop mov sub loop adc andb xorb push or into pusha and add xchg jmp inc jnp out rol pop ret cwtl inc sbb popf int jmp lahf popf pop (bad) pop push jnp js cmp data16 push cmp js mov in push data16 cmpsb mov dec mov dec and fadds xchg bound xchg jecxz mov xlat call xchg jb mov in xchg iret (bad) fxch dec cmc int int lret sti in test lahf test jmp sub lods lds mov sbb movb std shrl sub inc nop iret add mov dec int out lret dec mov in lds loopne leave popf leave std and mov push xchg insb test nop test dec fs add pop int popf add pop (bad) insl lds lds ret daa popf xor lods lahf in add insl lods lds popf int rcrl int3 lods loope frstor ficom pop popf std dec into int fildll push cli mov sbb repnz lods shrb sbb enter repnz adc in repnz sbb cmc jg cmp lcall scas fucomp and xchg cltd aaa xchg pop and mov mov xchg xor test mov daa or mov sysret push ret dec push mov push jno cmp ja loope mov sbb push adc (bad) and inc push scas mov cmp sub mov (bad) adc or cmpsb shll iret adc das add xchg xor push in jnp push ds mov push push (bad) fwait bound push pop (bad) or (bad) inc lock mov sbb lcall push sbb in movsl add jecxz (bad) scas cwtl mov xchg mov xor call mov cli stos xor in dec test cmp inc xor roll les loopne pop sbb nop out jae push out or dec inc jnp xchg xor pop jp adc clc roll push push sub (bad) inc arpl nop fsubp xchg nop jp cmp push aad push cwtl std inc movsb sbb repz adc out lahf insl inc gs inc test dec xchg (bad) push scas and mov and xchg sbb or into (bad) ja mov push stos xchg xor inc incl cmp sub aam jnp pop sbb push adc bnd cli ret loope dec insl ljmp xchg imul test sbb cs cmp shrl into divl jb lea (bad) (bad) jecxz cs push idivb jnp dec or into sbb in fmuls imul dec xor pop and jo cmpsl cmpsb int sub imul lret (bad) iret mov dec cmp push xor not pcmpeqd jae add dec out fwait (bad) fwait jae dec movsl sbb jle lret test aas std push lret fwait rol in popf subl aad addr16 jle js clc out mov or cli loop dec add add add stos add dec inc aam ljmp scas sti lods movsl push sti pusha outsb adc pop adc aam xchg cmp test rorb push int cmpsl add adc mov out lret clc addr16 dec call mov sbb enter mov push or pop and hlt add pop pop (bad) pop (bad) xchg (bad) in scas fisttpl xchg lea in inc mov adcl adc cld fwait cld pop cld or mov add push jl out insl pop test mov (bad) outsl sbb dec mov xchg cmovno test js test outsb mov dec add sarb pusha jne,pn movsb push hlt xchg dec jge movsb mov stc (bad) std mov or sbbb push in outsl jge pop inc dec ret clc and pop lret cli and in xchg xchg xchg aaa and outsb push and pop imul popa pop into cmp sbb out sbb popa add inc jmp mov fisttpl cld inc cld and mov and and ljmp inc pop add rorb xchg dec repnz test and fsub fmul out adc pop out call dec pop or cmpsl mov sti imul out scas cmp pop sti loope inc sub push pop lods xor cltd push jg jne movsb jno push loopne cmpsb pop xor test enter jmp test (bad) pop add testb push incb (bad) lods pop lock stc jb je mov fsubs push add inc add imul fadds in xchg movsb popf loope dec dec inc cmp fistpll sahf fildll ficom sub xchg or sub or sbb loop push pop fucomi outsb (bad) xor xor mov mov and push add je mov mov mov cmp jae jns stos add dec je (bad) bnd or lret out hlt (bad) cld and jp mov mov test cs adc sbb movsl fistp cltd clc sub leave dec call dec xchg leave cmp in xchg in scas xchg mov pop adc loope (bad) je mov pop pop or iret pop call stos pop and in in push (bad) iret cld xchg inc (bad) dec out fiaddl les jmp jecxz push lds inc mov addl cmc pop lods adc dec fsubp faddp jmp push xlat jne out imull rorb orb imul fcompl gs ds (bad) dec stc or rorl bound movsb mov jno push fcoml add xchg iret jg lahf test mov inc mov aas add pop in inc pextrw xchg jmp pop fs cmpsl push add imul and cmpsl cmp in aad test sahf std rorb inc xor test pop pop hlt mov sahf xchg je jnp cmp mov outsb clc mov rolb stos insl mov xchg mov in pop jno cltd out movsb mov or add mov cli mov hlt fwait cld jp test inc je push enter lea cld ret sbb jns pop lret xor pop mov leave mov inc mov nop inc dec add add (bad) testl or xor cmpsb push fs jno std inc or in lret jge jne xchg popfw subl push lahf mov xchg mov iret into icebp mov sub pop and and jo in addr16 dec loopne xchg cmpsl int3 fs into adc lret sub add pop shrl xchg bound test (bad) and fbstp mov int3 mov (bad) gs insl cmp fadds les or inc fidivr and fcoml clc scas xorl sbb fwait and imul iret (bad) in and and jae cld leave inc cs dec (bad) imul int jmp push push popa lea dec popa clc and cli xor adc hlt lods jmp gs loope inc sbb inc insb mov sub clc (bad) xchg leave sub xor cwtl cmp jge popa out push enter lcall loope test pop lcall mov cmc test (bad) cmp xor cmpsl imul pop add in daa pop pop cld enter push mov inc mov in (bad) scas mov or dec pop imul in sub or jne mov xor dec in fisubl mov fistl call add sub out das mov xor (bad) jl outsl cmpsl jl cmp and repnz mov mov ljmp mov lods out mov gs cmp inc (bad) int3 cltd xchg out out sub mov movsl nop dec lods sti inc add icebp pop (bad) dec pushf das pop and fildl fs sahf fbld inc imul ds add fbld int insb add cmp pop popf clc or xlat pop mov add mov (bad) (bad) push scas xchg inc (bad) stos in mov mov add and sub (bad) and fstpl add add pop dec (bad) fisttpl nop inc in inc rcl stc push cbtw scas inc sbb out push out or adc xor stos fstl cmpps es xor cltd scas and or loope or jmp outsb (bad) inc rcll mov xlat inc jmp cli dec add call cmp push pop inc in rorb mov ficoml cmp stos or dec or dec xrelease push leave jne int3 mov mov mov xchg dec cmp faddp mov add xchg pop adc and push out xor push add xor pop jo and lcall cli scas (bad) (bad) repz xor out (bad) dec mov les sbb insl cmp scas lret mov adc add xchg add adc loopne insl dec inc sbb cmpsl fisttpl stc inc mov fwait popa arpl pop fwait clc inc or in or mov pop inc call out dec pop mov mov pop in lea orb jno icebp fadds push in inc cltd xchg testl jb lea fcoms xlat inc mov xchg cmp lods mov icebp cmp xlat mov dec inc hlt int3 xchg dec push mov jns dec movsb repz movsl or outsb pop inc and lea pop ljmp es xchg add jp (bad) adc adc xchg (bad) jb add or pop pop (bad) pop mov jb xor cltd mov push mov xchg nop in lods jge pop dec pop lds int3 jge lods xchg pop inc mov scas sub xor sub (bad) adc sbb add push pop sub push mov aam subl insl into mov pop adc mov scas mov mov or cli inc adc (bad) mov cli pop cli push mov sub into cld dec movsb fdivrp sahf lock cs adc scas std jno ss das mulb jl lods decb push xchg loopne mov mov outsb pop fs xchg mov pop dec sub or pop outsl pop mov add xchg stos push divb adc pusha popa mov push pop xchg dec dec xor jb or jge pop loope push inc stos sbb outsb jmp fstps iret fimull mov test in fucomi xchg xchg add and pop es mov aam (bad) lcall jo inc cmpsb dec push stos movsl (bad) sbb cltd sub clc mov inc cmp mov iret sbb mov lock cmp popf fldenv mov or (bad) sarb mov and push lahf push scas sarl out outsl iret inc push ret sub push lea pop call and (bad) adc jmp pop arpl fcmovbe push daa mov dec sbb add fild xor lcall repnz aad push add stos push dec mov ret jo dec mov ret fiaddl and add push clc inc mov mov inc call int in jle out xchg aas xchg jle cmp jmp (bad) jge xor jle cmpsl cld in adc jecxz and mov popf jge lods pop jge xor mov out lods lods cld cmc cmp nop mov mov pop orl or dec push faddp movsb js insl lods mov (bad) lret leave rol in popf std insl lods mov (bad) lret leave rol in popf std insl lods mov (bad) fucomip mov pop imul cmp dec cmp jmp (bad) imul cmp fdivrp pop add scas sbb push fidiv mov pop sub aas mov sub test mov sbb push lret mov mov xor mov xlat (bad) adc out fisttpll inc ds inc or jo enter test popa jl cli ret and pop push fisubr std dec dec and dec and loope push cmc mov sbb in outsl pop fistpl inc (bad) mov push sbb sbb popf xchg aaa dec lods sahf jns mov adc cmp gs mov or nop xor jnp leave jmp (bad) scas js mov cmc push xchg xchg imul mov push cwtl xor in xchg add test push loope fxch xchg inc shl dec pop leave sub add and push add or neg fcoms out lahf mov pusha dec sub xlat cmpsb movsb mov and daa cltd scas jl mov fptan xor shr mov lret fadd (bad) jne addr16 aad and std sub dec mov test pop pop pop push ja mov cmpsb and mov jbe xadd test inc dec int3 jae int mov push or cltd out (bad) mov rcrl popf add out into popa mov clc mov lock or adc push js inc rolb icebp or repz xor mov das xor mov mov (bad) jae xchg sar lret pop jge xlat fcmovb lock sar lods (bad) xor rcll cmpsl std sub aaa sbb xchg and mov push sub inc jo shll hlt xchg mov xlat sub or push cmp dec ret ds andl push xlat and xlat inc fcoml adc fisttpl test divb mov push (bad) xor mov ss (bad) ss adcb dec add dec sub out dec into lds mov outsb and mov mov je or aas xchg and cltd sbb fstpl fucomi aam pop test cmpsb ds xor mov or and pop push mov (bad) mov movsb mov mov add dec stc dec sub adc push dec lds dec pop test das and xor mov inc dec dec adc inc xchg mov in adc inc gs out and in dec add adc xor shlb in dec arpl je lods cs inc movsl cld xchg sub add stos push jl (bad) je add push mov pop sbb dec iret dec mov mov test out test push mov sbb push in leave jns rcr rcr mov orl test addb je leave outsb mov mov pop loop fisubrl dec jecxz test test xorl mov lcall mov or sub mov push hlt cmp gs jp test sub mov shrb mov (bad) sub (bad) jns fisttpll cwtl outsb mov cmc mov cwtl or add test rcrl pop enter sub (bad) xlat jp lock arpl xorl call mov xchg mov jecxz cs cmp outsb ss push dec popf push imul cmp addr16 fildl cmc and pusha fisubl arpl (bad) fsubl cmc or rcr icebp dec pop sarl (bad) add pop in (bad) jmp mov sub test dec sbb fs loop inc mov dec add cmpb cld (bad) mov xchg inc sub cmp or xor add add test xor stos add enter das mov jbe roll adc outsl shrl mov fst jmp lret dec es sub lds or sbb mov ja pop ror nop mov sahf andl mov cmp inc cwtl int3 push xchg cmpsb fwait mov xchg xorl stos fnstcw or mov ret push push popf push and sbbl (bad) or ja icebp out xchg cmp aad adc lds (bad) and push mov jle xchg loope xchg jle xor mov fwait xchg loop ret fxch lret pop jecxz fmul mov adc xchg popa inc lahf fdivrs mov adc pusha gs push adc ljmp mov ds mov or sbb push sub pop mov pop in fstpt fcoms mov aas movsl inc nop inc adc and cmp loope aas lret mov lret push dec call mov enter lea push (bad) xor add jno mov sti fildl fimull in and mov arpl xchg test arpl mov imul adc xchg and push pop mov sbb jno iret jnp ds dec sahf enter xchg aaa mov sub leave push push stos ds std jbe mov mov mov sbb mov jmp das jno sub xchg sbb cmp xchg fadd inc push xchg fldenv push mov jg pop gs popf loope add sbb jge lret jo push jno xchg stos xor sti mov rcr xchg cmp sarl xchg jecxz pusha fiaddl (bad) imul cmp (bad) test rcl dec xor add mov xor fsubl add imull int mov lods es jno decb mov mov cmp scas inc mov pop bnd sbb xchg dec movsl aad loop mov clc mov (bad) mov and cmpl test xlat add lret sbb lods (bad) or inc es push jno and jecxz mov mov popf cmc das inc cwtl daa pop in adc call out call outsb in push daa ljmp or dec pop jns test mov repnz sub jecxz push push push cmpsb fucomi add arpl ret mov jno daa mov movsb es aas dec sahf lret daa dec leave xor jbe sbb jae bound pop aad popa cld and aaa pop xlat inc jnp ljmp and xchg cmpsb mov jp dec nop mov rcll mov xor ret jl sub les xlat adc adcl jl jae pop xor pop sbb mov or popf sahf inc out lea std mov xchg lret sbb push addl and lds sub loopne clc ss pop ja push add jp fnstenv and mov xchg xchg cmp int3 xchg test jo mov hlt dec xchg test js inc iret xor int and xor inc add add jl ret push mov mov lahf or je xlat out push loopne ret (bad) outsl adc cmp lea (bad) test rcrb and cmp insb xchg mov pop mov js out subb and out mov movsl ljmp outsl mov cmp push popa insl mov xchg popf adc jns sbb mov das cmp push insb mov test outsl les flds sub hlt jbe adc jg mov cmp inc lea xchg xor mov insb and stos xor adc mov mov pop lea sbb or repz cmpsb pop aaa in aad inc insb pop mov movsl mov fmull dec stos enter bound enter sub les cltd lds adc mov or mov or dec dec cwtl and je jle ror (bad) mov pop popf nop pop lret push aaa sub push mov cmc adc jmp sbb lcall (bad) mov scas cmp or mov xchg call imul push (bad) pushw pushf mov jne aaa xor ret cmp ljmp test fsubrp mov cmp aam inc gs int gs xchg cbtw aam mov mov or add repz orl lret jl outsl ds iret mov pushf into insb mov fidivr fdivrs mov das dec ljmp loope (bad) sub add inc stc mov mov and jmp adc cltd push fstps out jae out pop and es mov adc cli jo,pt imul fidivrl adc xor imul (bad) dec repnz not xor repnz sub bound jmp lret xor add and (bad) mov mov cmpsl loop push xorl outsb fdivp add adc jo pop jne mov mov andb js adc pop inc fcmovu mov daa adc imul or divb xor bound movsb outsb mov popa push aas lods popa mov sub imul fcmovbe mov lret pop xchg mov movl nop lock into ds mov hlt movsb cmp lea mov (bad) sbb jl push inc sbb popl push push aas jno std sbb cmc stc jbe inc fsubl jp jge cmpsl roll movsl lret into mov test mov inc push push jbe ljmp adc and rorl or lret jbe and inc int3 pop sbb pop clc add jo fiadd xchg push mov loopne in fldl cltd fstp outsl js into stc xchg pop mov out pop xchg inc (bad) int nop lods in cmp cmp xchg das jmp add stos jl pop push push pusha jne push pop mov arpl cmc push and es insl xchg inc imul push cwtl dec xor bound xor inc jae ljmp mov jmp mov imul (bad) movsl in (bad) cmc test js pop push fadd xchg add push incl jmp out cli test add cmp mov jb sub arpl push add cmp (bad) jmp hlt sub outsb in adc add adc sub test jae ja,pt mov and dec mov mov popf mov (bad) adc sbb insl adc scas ds adc (bad) push fwait pusha cmp mov pop sub cmp repnz shlb or and xchg ss xor cmp cmp add mov mov mov imul (bad) adc cmp in cmp push xchg jo mov std push adc sahf ds adc cmp and adc xor addb mov xchg ds adc inc adc cmp fstpt bswap pop xor repnz mov cmp fldcw sub cmp mov sahf ds adc xor fmull cmp cli jnp scas adc sub adc push push hlt adc ss jge cmp mov mov fistpl sub pusha cmp mov je mov cmp dec pusha cmp repnz jo call sti pop sub cmp push adc ss mov mov adc loopne shll scas sbb cmp mov mov daa xor add mov xchg xor sub ret mov dec adc ds mov xchg lret cmp adc je cwtl jb mov adc cmp negb sub adc xor repnz lods sbb cmp add cmp mov fs adc inc push xlat sub les mov adc sti shlb mov es fdivrl cmp adc inc and mov adc push and je xchg mov mov stos bnd jnp (bad) push aad cmp cmp sub adc push push sarl into fs mov or shlb repnz adc out fcomps andl mov push push mov inc add jo sbb jle jno,pt mov push sub adc fs adc sub lret mov fildll dec pusha cmp push xchg ds mov scas jne,pt mov cmp cmp cmp mov mov and adc fs into jae push add adc sub adc je,pt mov and incl imul jo mov dec je pop jb rolb adc addb adc inc push push xchg ds adc idivb out pop pop ficomp cmpsb (bad) jne int jae cmpb and je cmp addb adc sahf ds mov adc cmpsb push fstpt cmp lea adc test adc imul mov xchg ss jo and je std mov and mov lret cmpsl adc mov push fs jb mov mov cmp sub ja adc adc pop adc sub mov mov adc adc jbe adc mov sub mov jb sub push mov adc sub xor fistpl cmp or dec scas sub and dec mov mov cmp cmp jbe,pt out cmp mov std inc movsl loope adc call sahf lcall mov adc mov push cmp das mov movl mov pop or fnstcw cmp cmc ljmp mov scas inc popf data16 sbb inc mov push jns xchg rcrl nop aad outsb dec addr16 cmp inc inc std mov mulb shr lods xchg sub cmp fwait push lock shr divb mov xchg (bad) xchg xchg mov in daa in cmp in fnstenv dec fnstenv jmp stos imul lahf inc lock into push test dec push lds inc cwtl popa adc lods (bad) aas jo movsb xchg push add jnp push pusha push mov scas inc and sbb shr or jns pmaxub (bad) pop arpl repz mov push frstor (bad) cmc push add rcll mov in mov xchg lret pop pop loope jp inc mov sete push shl (bad) out or push fimull in mov in (bad) mov int3 (bad) sti loope aam sbb popf sbb imul or mov mov push fucom xchg fsts push leave iret dec daa and cmc cltd (bad) mov pop mov dec sub mov xchg loopne pop add das inc xchg scas sub in push push aam sub sbb outsl mov lods jle cmp stc sahf fwait ss aas sarl xor std lods sahf into sbb das pop pop dec fdivl mov xchg (bad) divl les int cmp mov movq sarl bound dec sub cmp in outsl and aam mov and inc mov push dec xchg adc adc and enter lahf test out ret aaa push push cmp xchg cmp and jg ficompl xchg aaa sub stc xchg fiaddl sub in loopne xchg mov jp cmp xor test lret aam adc jmp aad sti push mov std mov fild sub xorl movsl mov pop sbb mov jo sti mov mov arpl ja mov std cltd cltd rcl jo lret dec dec lods and sub cli mov fistp mov mov jge xchg adc int3 ds jp js push lods leave (bad) pop test ror (bad) hlt sbb xchg addr16 mov cmp cmp fcom xchg imul jecxz jne jle or stc and mov xorl in inc mov inc push ret mov lods ret aas sub aas (bad) fnstenv lds rcrl dec add push sbb ss bound push mov ret out clc inc sti jg push xor sbb outsl rorl mov push mov sub sarb aas inc mov das mov sub mov xchg dec sbb inc std icebp inc scas aaa mov movsl sub loop aad sarb loopne sbb jne xchg fisubl std movsb idivl lods stos (bad) dec (bad) outsb xor add out int push mov mov xchg fwait push repnz inc xchg or clc lcall mov pop jbe cmc in add or ror mov faddl int3 jp adc aad xor (bad) loop lock and mov fsubs loopne sub sub cmpb cltd jmp or in cld movsl shrd test mov out add pop jbe mov (bad) popa jp jmp cmpsl pop sar jb out or jns sahf sbb jbe pop pop daa add xchg pop mov push mov out mov xor push dec out (bad) jb scas ss mov xchg xchg mov rclb in mov cmp shll cmp aam test mov inc fldt sub bound jle movsb test (bad) dec call pop sbb xor jecxz dec cmp lcall lods addl lret bound loope loopne inc mov ds sbb (bad) stos or push mov jle into nop aaa inc sbb adc std sbb jg mov mov out xor ljmp into jbe dec rcl dec push dec jae lea xchg sbb (bad) jb fstp mov (bad) xchg xor mov and mull jo lds xchg cmpsl clc xor pop mov jecxz (bad) cld inc adc scas push sub jo pop jae push mov xchg test sbb addb hlt repnz mov mov mov push cmpsl jp cmp movsl popa sbb xchg push bnd outsb sub fisub xor test mov jge jo xchg out (bad) and mov cmp adc cmc jecxz out sbb sahf pop or adc enter jae xchg cmp push mov shlb add pop jge cmpsb mov mov pop push cmp pop and pop pop insl or jl mov les or sbb mov rcl sbb in daa daa jl xor xlat and jp push mov pop ret lretw ret in les leave out ret mov add bound xchg xchg std inc daa icebp add jmp icebp aam movsb xlat (bad) dec sti xlat (bad) push push cmovo packuswb cltd jo add mov or flds push cmpsb jl ljmp lds mov xchg iret mov fcmovne insb sahf lret sub cmp pop inc mov inc mov pop jne (bad) repnz mov loop,pn cmp inc lock push adc (bad) inc aas adc nop int3 inc adc repnz dec inc js xchg jp test (bad) mov ss and xlat jp ja mov es pop push xor out jp int3 cmp pop (bad) or mov nop sub adc enter pop fwait xchg push sub add xor out or cli mov or jle xor jo xchg repnz nop ss add call pop mov mov jp adc ja xor sbb in pop into pop sbb or pop cmp mov movsl push inc jno rolb daa popa cmp (bad) jp imul lahf dec jne add (bad) mov incb adc data16 in icebp pop add ljmp fisub inc imul push mov and ficom push sbb xor out dec or xor mov mov add jmp xlat mov rcr scas or inc push and or ljmp ja mov sub mov dec sbb push inc xchg int cwtl jb stc dec fldt out test stos daa mov repnz pushf nop cld ds mov arpl jo inc enter sarl gs and mov adc xor js adc les sbb test arpl push mov vshufps in dec inc mov jmp dec add int3 xchg pop outsb cmpsl or xchg aas popa arpl jp,pt popa push fwait pop add sub jns,pn and and add jp adcl es mov or fnop jns mov das jmp out cltd in cs rcll inc (bad) in and nop mov (bad) mov cmpsb mov inc jo and popa cli shlb fwait sbb pushf jno mov out psllq es (bad) or lods add aaa mov push xor pop inc scas sti and dec test mov or in jbe pop dec in lds mov scas jge xchg (bad) cmp push pop pusha or (bad) (bad) pop fwait mov inc xchg push jne or (bad) lret jae test mov out push aam ja pop cltd (bad) faddl je insl scas dec lods push roll scas sub mov lock popf push leave movsb andb xor (bad) cmp (bad) shr pop add lods push popa add negl mov jl sbb xor mov cli xchg mov divl and mov int3 pop push push pop mov jle clc in fwait push fiadd sub add ja das fmul jne pushf adc lcall push adc jecxz out in les jle sub xchg jg push mov cmp (bad) jg test cmp test xchg mov mov or add andl or aam cltd cltd movsl test test xor and lret mov daa mov xchg cmp insb (bad) (bad) pop popf push or or icebp xlat shrl jmp rorb sub sub inc sbb and (bad) out js icebp sub pop mov dec (bad) lret (bad) lret and pop push es nop mov jnp mov jne iret fistp stos dec lock xchg or cs mov cld lcall cmc std and cwtl and fcoms cmp rcrl jne xchg loope or sbb mov xor jno data16 xchg and push loop adc test adc sahf lahf xorb aad lahf (bad) mov jb in into in std push ret leave xchg js xchg jbe cli mov sbb aaa (bad) mov jbe pop push jne sahf or push pop jbe test shr jmp xor dec (bad) popf loopne jl inc movsb movsl ret pop jo inc ds test jmp inc aad xor dec inc mov or ror jne mov add cwtl pop ja cmp xchg hlt jnp push and dec fistl add ror push xor inc sbb daa enter es adc add shrb test loop sarb inc dec pop rclb nop sub hlt add imul scas sarb push loop adc jb cmp xor sbb movsl in lahf iret scas (bad) mov sahf (bad) push shr sub jle mov enter ret jne lods mov jbe mov daa cmpsl xor pop lret xor in jb jp aam comiss adc fcomip push pop and jnp adc into or cmp pop mov sub (bad) out add stos xor jecxz and adc cmc push jg sub pop push add mov test xchg in fsubr dec sub push dec inc lea cmpsl inc aas fs sbb pop xor outsl cmp jge outsl push mov aas add jo imul push or inc cmp push jns popa push pop jnp std mov fucomip data16 xchg mov dec fucomip mov lcall inc lods jl rorb bound or popa subl fild cmp shlb inc add jg jecxz inc pop stos loope in xor stos test xor mov rorl ret test insb xlat bnd std jno mov adc jp icebp dec mov aaa rorb dec pop pop xchg enter nop xchg je cmc repz add dec aad inc jnp mov push fcomp inc jle jecxz mov pop sub shrb bound mov lods cmpsb dec shrb mov dec mov cltd cmpsl push testb lods jp or (bad) lock push in subl mov sub lds mov inc fsubr cmp (bad) js ss inc inc and jb lods push call pop addr16 aas fsub push sub andl icebp sub sbb mov stc pop (bad) icebp cmc jg addl jbe cmc adc mov scas or xor sub or add mov or add je mov (bad) int3 mov scas movsb cmp (bad) rorl mov jmp mov cmp sub test inc pop cmp jl mov loopne ror test ja imul push dec loope ucomiss int jae je add jge pop pop loop sar dec rorb inc rcrb out xchg aas push scas xor fimull adc call jno xchg adc fild fdivp pushl adcl fadd out fdivs jl test jge iret mov stos mov adc jne mov pusha in dec jns cmp inc dec dec jle call xchg negb push inc mov repnz sub stos cmp xchg sub je mov mov clc xor int repz in jmp fbld dec movsb mov add fiadd mov bound pop lds daa adc mov sbb sub lods sahf (bad) (bad) push pushf outsb outsl mov push pop mov pusha in jge shll ret fcoms and imul mov pop xor (bad) mov mov xchg mov fs and sub jo push xchg (bad) mov xchg js movsl sub adc test aad js mov cmp popf add cmpxchg jb xchg and lret mov xor outsl jno lods and in adc dec pop bound mov mov push or cmpsb fcomps inc xchg gs roll lods sbb or insl les popa push jbe popa cmp push aad aas daa pushf jns inc push in fwait push out lahf xchg jmp sub je inc outsb ds push xchg and or mov ficomp pop push call adc inc out push or mov mov into jg mov mov js dec (bad) xchg inc jnp inc mov ss enter ja pop out out xor fdiv rcrb add aaa or std insb pop ss cmp sub (bad) sub mov pop cmp add mov push fiadd xchg push fcom jnp int3 pop mov xchg push or call mov pusha (bad) lods jb jbe movsl in jnp cltd lcall es test pop out repnz dec mov xor pop lods or andl rol pop lahf or or loope jno inc hlt (bad) (bad) mov jl sub outsl sub sub jbe imul notl popf sbb push sub iret inc pop stos inc jae mov sbb icebp aad xchg out mov push lock push mov rclb mov add stc mov jmp inc push push add js cwtl (bad) mov or and xlat jmp push repnz imul cmp push (bad) mov (bad) (bad) faddl ror insb lds cli or lret iret fisubrl mov rclb sahf std push in test repnz mov repz fisub out lahf (bad) sub xlat xor xchg cmp xor lods jmp fadds mov lock lods ficompl xchg ja loop imul mov xor das test lret jl or addr16 dec and mov adc inc mov pusha mov mov cmp push jmp hlt mov in push mov test dec scas or dec dec add mov ss sub movsb cmp pop ficoml cmp mov and sub sbb xor int3 push xchg push notl or cmp aaa repz (bad) dec sub cmp push lret sti xor mov pop clc pop addr16 lds (bad) fdivrs daa mov repnz ret pop mov js xor or xchg stos out stc adc (bad) (bad) jmp adc xor inc mov pop lret and (bad) lret push mov loopne push push insb xchg mov mov xchg adc rcrl imul lcall imul popa out imul xor sbb je push movsl xor jge outsb imul movsb fs xchg dec fwait dec std jnp movsl std cmpsb ret iret sub out push or cmpl xor add or dec popf mov jg pusha mov (bad) pusha cltd and lock push mov inc mov movsl adc push ja mov out out das mov sub shrl dec and lret adc addr16 mov cld pop cmp fild mov jb stos push sarb mov pushf movsl jle pop and pop jae stos imul push sbb aas mov enter push das (bad) inc iret pop enter push sub add add arpl sahf xor inc sub adc pop inc imul inc xor xor dec push mov xchg insl mov push gs mov inc fsubrs push jb jp adc mov mov jnp imul sarb mov adc loop lds dec (bad) repnz mov clc (bad) mov xor jle mov or popf sub adc adc cmp lock fs cmp bound lcall jb scas push ja inc lcall jmp arpl sub rcrb dec jo iret inc push sub sub mov insb adc mov insl (bad) mov xchg push push dec dec mov scas xorl cmp jne cs leave sbb jne inc mov aad ret mov xor mov mov fidivr and or mov and mov inc adc and xorl cmc mov jae adc push repz cmpsb mov pusha cmp mov out or push lods ffree xchg roll jl (bad) cmp push inc test mov in jmp jecxz dec mov stc push fwait stc dec pop jge add lret lods fwait out pop mov dec test pop test xchg sahf lods sar and into mov lcall fldcw into push adc lods lods mov addr16 stc xchg jecxz xor jo lret mov xor sar xchg adc (bad) call in xchg sbb (bad) push int xchg dec aas push sbb nop and sahf rcr std repz (bad) insb pop dec mov test out mov mov cwtl gs imul adc or inc sbb (bad) ror pop sub jecxz nop dec cwtd and and inc cld and insb pop dec cltd and xor scas push (bad) adc in in adc hlt push xchg mov fcmovb std loope (bad) insl mov mov adc push jp call mov jno cmpsb lds sbb and cmpsb adc lods out (bad) gs add lea imul test mov and into jmp sbb mov push mov sbb mov nop das cmp dec stc scas dec dec shll loop add sbb iret push loope pop xchg test pop sbb test iret fucomp ret jmp pmaddwd mov (bad) in mov mov mov jecxz je cltd fimul lret into or sbb xchg sbb mov pop cmp jno add das mov push loop outsb js and icebp dec rclb repz negw lock adc cmp rclb mov in xchg jb dec dec daa test dec xchg out mov jne pop jp in xor push out pop mov cmc mov das sub (bad) test popf pop andb test imul jno into es xchg loope aaa push add dec repnz subb mov pop or dec mov dec push bound and adc nop out push test cmp lock daa jo mov dec pop push jmp test ret push in inc cmp frstor add inc jbe or adc adc loope cli xchg fnstsw dec xchg sarb and sbb pop xor mov std and fnstsw mov leave xor add test das cmc cmp adc add cmp mov inc cmpsb inc adc aam out mov gs cwtl push pop in in jle inc fnsave (bad) or inc lds ud1 sahf add and test cmp hlt add or cwtl jmp push pop les push adc mov pop cld loop in push and mov mov movsb sbb or movsl pop sub cmc sub insl xchg enter jbe sub arpl icebp (bad) testb icebp sub jne pop and out sub in insb leave and ss scas sbb test jl mov sbb (bad) mov xchg loopne mov adc loop inc cmpsl mov push pop inc lock les cltd sbb sub leave and mov add xor lahf push and mov jge jmp insl pop in push (bad) xor xchg add les in sub pusha xchg rcrl pop repz dec repnz xchg les loopne int pop mov adc jle sti xor jecxz xchg sbb test ficomp test push push sbb enter insl push push notl cmp test sbb pop xchg gs fsts sub jle mov xor fidiv mov sarb daa out outsb gs sub sub movsl mov pop (bad) rcll aam fdivr add add loope,pn push sbb addr16 lret xor and push cmc enter pop fsubrs push lahf push jno jnp push xchg and dec ja xor (bad) fnstsw into imul ja cmpsb add jge (bad) (bad) fsubrp mov ss cmc sar (bad) popf or dec adc cmp leave jae jg repz add jp es outsb jle pusha mov mov out dec inc xorl cld mov xchg das xor sbb std inc jl inc mov push push cmp out lret and pusha sub mov adc cmp ds bound icebp inc jno lret sub jbe and sahf aad mov fildl test fisttp lods divb mov aas lret and push dec sti iret (bad) cmp sbb push adc pop or pop les pop push faddl xor enter imul sbb rol sub sub bound insb push or mov xor in mov ss stos push sub xor mov (bad) fcmovb negl test (bad) cmp aas arpl xlat bound clc pop adc xor cltd mov cmc push cs cmpsl rcr ds mov (bad) imul fmull mov leave add mov pop mov mov ret loop addr16 inc sbb iret inc scas dec les lods rol fxch sub or faddl adcl fld fstpt add into dec mov xor xor dec hlt lcall lret sub sbb popf (bad) cmc into or cld cmp mov adc scas out push push mov ss mov push insl lods sub popa mov and fidivr mov add and push popf jge nop int jg imul aas loopne scas sub sar in cmp or lea pop scas call push ja loop push (bad) lock sub push enter imul inc xor push movsb aaa loop insb daa adc mov (bad) sbb push ficoml dec out mov test in push inc popf iret xchg cltd jle jno in insb dec ret sbb jl cmp ret jmp rcrl push mov aad lods and inc xchg adc dec mov loop push out or or jle std mov int3 push cmp push in push nop jl sti cwtl sub mov or add inc inc lods fstpt (bad) mov or sbb pop sbb jnp push insl addr16 out sub mov xchg outsl push leave jmp test cmp pusha iret sub mov cmc lret pusha (bad) mov jo out pop adc xor imul dec push (bad) add out outsl sub aas stos pop aaa mov mov daa cs cmpsb addr16 cli cltd adc dec fistp (bad) fistpl adc cs in cmp insl mov xor (bad) loopne xor adc and mov and xlat push out xchg xchg xchg xchg lds push pusha jg pop movsl arpl cltd outsl mul dec lahf aam or or mov adc popa pop in sbb lahf and mov jmp push mov fmul inc daa popa jmp jnp gs add and cmp dec and je xchg cmp hlt imulb push mov or xchg lea iret cmp imul dec ret scas sub cltd jno out out pop sti xor lcall into add lcall xor ficompl aas dec je icebp in xor mov and pop aas xchg push mov negb bound aas repz scas push lods imul mov pop enter xor cmp mov adc (bad) pop jns fdivrs (bad) sbb pop adc aas in ss repz pop xchg (bad) adc cli mov fisttpl inc popl add pop sar int3 cmp sbb and mov mov add or data16 mov sbb jnp push push (bad) out ret mov les dec sbbl sbb stos xor add jle cwtl and adc mov push inc pushf mov data16 ret and mov mov test add cmp mov or and pusha fsub lds test imul lods dec add xor sub dec lods loope and stc sub sub das test es mov xchg ja mov jo repnz push data16 xchg andl (bad) jno mov scas jbe sbb mov and aad adc dec push (bad) xor push aam dec cmp sbb cmp add mov test repnz xchg adc in jo inc dec fstps iret cltd js inc call mov inc or scas inc push sub xor addr16 data16 xor push icebp and sub push popa mov sbb xchg shll or push jo (bad) ljmp int3 jo icebp mov xchg pop stos sti (bad) mov enter shr test dec xchg div pop (bad) notl or out mov jns jae shll mov and push mov xchg push movsl imul mov lock popf ss jle cs mov (bad) je push mov mov leave jbe outsb jbe mov mov jbe imul mov iret or scas int3 leave popa aaa popa sub or adc adc pop sbb nop or das add lret cltd and push inc rclb mov cmp test xchg inc pop inc jns loope in stc test test inc sub jno aas fsubs fwait enter (bad) jbe arpl or pop (bad) cs mov (bad) inc pop int3 cmpsb push in pop cmp push mov sub mov dec enter repnz push and (bad) aaa jmp (bad) fsqrt jno add sbb out cs mov mov mov lret sbb cld mov andl or jae mov xlat movsl xchg inc leave sbb inc adc aam (bad) mov call fstl or dec mov imulb mov sbb mov aas lods iret sbb mov gs sti mov dec (bad) jb cmp dec sub or outsl das out jns mov adc adc nop test fwait mov jo jecxz xor mov fisub int mov sub fdivs (bad) push iret lahf inc cmpsb mulb ret jnp daa ret leave out or push ror pushf mov stos pop aas cmpsl out test pop lcall call push rol adc pop shrb and inc sbb xchg xchg shll daa repnz mov psraw test fwait ds adc addr16 fistp inc dec mov pop push stos cmpsl scas aaa sub mov (bad) gs dec pop cmpb xchg sarl inc imull dec push adc pop dec lahf push sbb subl enter mov repnz push jb adc ss push imul push das fildll cmp fsts outsl stos xor adc push addr16 ss mov inc movsb stc and xor iret xor (bad) imul sbb call add cmp xchg subb jecxz les cmc or jae xchg pop jb mov test pop pusha in es inc test icebp cwtl or call rolb fnstsw sarl fstps push cltd imul out fwait push pop jp push inc popf push (bad) mov jae push enter pop stos push in in push hlt fwait shr xor push rcl cmc mov dec jg lods jnp shr cmp cmpsl add cmpsl cltd mov inc fisub cmpsb or cmp out mov jmp pop pop push add add pop add or and movsl out dec (bad) mov lods jmp das unpcklps call scas lea test xor sbb adc (bad) jo jl ja jno cwtl cmpsb adc mov cmp data16 mov sub add lds sbb in lods adc inc iret bound xchg (bad) or bound repnz jns fsubr cs jae xor push mov cmp mov push dec mov mov pusha mov repnz fmul mov ret push and fisub jne stc or data16 mov int pop dec lret push pop mov insb in (bad) xor pop mov inc sahf data16 dec insl insb xchg dec fcomps pop mov adcl jbe pop cs xchg push pop adc adc fistpll out shlb nop mov stos movsb mov shlb xor int cmp in pop loop mov cld sub (bad) pop xchg fmull in popa cltd aam push mov movsb add ljmp jae and fsubrp mov popa cltd pop dec cmc mov dec je mov xor pop pop jmp test arpl test fadd inc push or mov jo cmp inc nop stos mov pop into inc mov lahf cmp jl cmc jo imulb les out (bad) sti or mov and das dec cmp sbb data16 scas dec cmp inc popa add push mov sbb sar xor clc pop jbe stos shl scas movsl push lret (bad) inc (bad) dec dec sub sub loope mov push adc sbb insl lods mov push in data16 movups dec jne jmp inc xchg pop js and sub bound add ds je mov cmp mov cltd or cmp movsb push push push int3 fsubr push mov jns jbe int xchg loope dec mov int3 push mov (bad) mov pop in sbb fwait addl lahf es test fcomps out test sbb jmp scas in push or aas pop sub fcom (bad) lret pop sub arpl enter jo sarb sti (bad) push insb mov mov jo pusha ja mov aas sbb push and ss cmc into ss mov inc pop imul fidivrl push ret adc fimul lahf xor ror inc ds sarl int3 dec mov test cmc push mov repnz in mov test int3 mov mov push sbb mov or adc pop shrl xor retw sub cmc and xchg cltd mov out pop mov mov leave mov in jmp push int3 jp in mov sar ret fcoms mov insl imul xlat push and mov rclb lret mov lcall cld jne or add dec aam imul fidivl (bad) das cmp sub dec icebp mov jge aad jle gs fwait in (bad) sub stc push jmp mov inc icebp arpl imul dec cmp mov aad xchg mov jp push push xchg dec popf das push int3 pop dec or sbb mov decl outsb jp dec jl popf dec scas (bad) outsl jp cmp into dec xchg pop push ja mov movl imul mov movsl rorl pop outsl addr16 (bad) lock push push sbb ret dec aas dec add test outsb (bad) mov enter outsl mov rcrl inc jne (bad) negb mov cmc pop inc std adc into scas sub into (bad) adc cmc iret jne divl insb jne popf stos lock enter cmp repnz outsl pop cmc loope pop inc jb popf sub pop aas jb sub mov cmp repz daa std repnz sar dec mov mov cmpsl scas sbb inc adc lcall sbb jb jne (bad) mov xor fbstp test mov sub frstor (bad) or cs mov sbb jnp (bad) jno lret xor data16 cmp (bad) int3 push dec push mov lret add or cmc stos jmp xchg inc cmp shrb xchg inc inc movsl push stos push subl mov mov pop jbe pop ss xchg jb test mov mov imulb mov xchg rcrb sub add pop mov lods test test (bad) fimul mov adc lret dec popa mov add sub daa sub cli push mov das call fsts (bad) iret pushf (bad) jmp or or mov jmp pop dec or pop test lret pop les clc andb aaa sub mov cmp mov loop add ret (bad) jae or xor pop inc inc add push (bad) push scas cmpsl loope push dec es sub ret pop xchg and sbb xchg popa mov jge sub push adc sub mov jg xchg mov sub xchg mov cs movsl ljmp insl push pushf pop ficom mov test fstl mov call (bad) cmc mov adc jno jae xchg mov pop (bad) mov adc push jae (bad) xchg xchg cmp mov mov into fwait mov pop jne,pt mov (bad) and pop cmp sbb push jno ja std js js cmp adc loope push inc mov popa xchg aad push mov movsl xor mov sahf mov inc add ss mov mov xchg loop cmp movsb mov push xchg dec mov push add (bad) xor dec pop xorl scas jp ret or cltd inc mov jno push jecxz dec and sbb rdtsc (bad) mov mov fcoml test push xchg pop gs jecxz or and lods mov in and es mov sub mov (bad) push mov loop and adc enter push movb push add gs sub mov mov and pop andl xchg add pop bound das cmp xor cmp sub xchg push enter pop xorl pop sbb mull xchg repnz repnz rdtsc and push das xor mov test mov mov aas xor cli xchg ss push inc ss push mov ss rdtsc fstpl stos aas sub (bad) pop repnz aas xor xor mov pop rcrl and shl leave jp dec mov jecxz lret pop and arpl and push sub sbb sub or inc jge adc out subl jae add mov xchg sub jl fimul scas sbb iret out jo push dec mov call jl lcall aaa je data16 icebp push sub pop jle mov data16 pop mov movsl jp repz lcall js icebp lcall daa je xor dec xor xor push xchg adc inc aaa xor xor mov scas dec adc cmp in lret out cmp pop jmp dec xchg lods test cmpsl and shrl imul dec sbb rclb lahf cmp mov add (bad) lahf push sub xlat inc mov dec jmp mov sub in movsl hlt cmp mov xor or ret popf fcmovbe ret and pop std daa mov ss sub outsl in push testb sbb xchg pop popf fdivrp sahf push jnp inc ljmp inc sub and adc subb push and shrb imul iret movsb mov push jp lret sbb jg sbb mov cmp pop test imul shrb pushf mov cmpsl aad pop and xor jmp leave cmp ret mov ficoml ret mulb ljmp mov mov in inc gs sbb xchg or fcompl inc cmp call inc sahf pop jne movsb mov fimul data16 or scas jnp jecxz adc xchg adcl js pop pop push sbb sbb fisubr lcall dec stc pushf inc jno insb sub jo inc lret xchg aad jle (bad) xchg pop or leave push ja or inc fwait add loop push aad jecxz mov add lcall cmp dec mov push sbb dec xchg adc xor xlat pop stos pop fstp pop mov pop scas dec sub sub cmp lcall mov sub jae and xor clc negb sub loop inc je and bound and adc pop xchg sub je,pn out sub pop pushl sub dec dec mov inc dec cmp iret fwait dec dec movsl lods add jmp push xchg and ret push mov and cmp mov xchg add cld cld std (bad) in pop pop pusha bound rclb xchg dec push into mov mov cmp dec dec jmp sub adc sub fistpl and std rcrl loopne imulb lods stc lods xlat mov mov jge push ds ret push (bad) popa ss add (bad) popf in inc leave mov add loop and mov int3 aam inc add aam pushf dec mov adc cmp (bad) movsl jb xchg dec fwait pop cld leave sbb sbb xchg pop call (bad) cli popl sub push jns sbb sub and pop push iret addr16 leave push mov or (bad) dec lahf icebp pop mov scas lret pop sti dec andl lret ret mov lds jns sub sbbl out pop enter pop dec and fnstsw ja movl add dec inc jae insl sbb push ret iret lock cmp out mov sbb xor js xor cmpsl pop sub sub pop lahf mov and jge,pn mov (bad) std (bad) mov nop data16 push jo jo jne push add adc in jns sbb and shlb es sbb inc in push dec mov cmpsl aad int3 int leave int3 int (bad) lods mov lock fildl adc mov jle call leave push sti cmp sbb daa pushf and dec mov jle add (bad) pop je stos xor fdivrs cwtl pop shrl push dec dec add hlt push mov mov xor aas or lods mov fwait and jge out dec scas add aam and and test out cmp outsl fcmovu mov aad pop es aaa lods in fldl mov fcmovu int ljmp js xchg push repz movsl jg lds xchg rorb push out add cmc std jle mov push pop hlt push adc mov add sub mov inc jb push sbb inc ret mov and mov jmp mov into xor cld mov push xchg and push mov sbb inc xor in shrb out dec aam pushf mov ss out mov adc dec int3 ficompl add mov je ficoml jns mov cmp xor hlt mov cwtl push andl sbb in (bad) jmp loope scas add jo pop mov (bad) idivl dec push and mov gs enter ljmp imul jb jmp mov mov cmp mov outsb nop movsb in add adc pop jns in in xchg inc jnp lea lock sarl stos lods jmp dec aad mov out adc lock and mov jmp ret bound (bad) jne popf jl imull add jno push sahf (bad) jno call (bad) insb jnp (bad) test test push cmp imul jle sub arpl push out jge mov add xchg sbb test das cmp out (bad) hlt stc push xchg inc mov (bad) stos dec rorl test lcall mov xchg dec pop mov xchg jne (bad) sbb cltd cmpb cmp jp xchg mov sbb jns adc ret jle mov push jge xchg inc mov dec pop mov xor adc and push in rcll sti jno add and jmp jne xchg push sub sbb xchg cmpsb leave or (bad) loope in aas pop mov out movsb xor loop popa lea cmp arpl lret popf scas mov daa adc and cmp dec mov add divl sub sub into ljmp mov xor add fldcw roll rcrl imulb and adc iret lods sahf adc mov js mov les adc sahf mov mov or add nop mov adc dec mov in repz adc mov jg mov sub sub dec shll dec dec sub jle shrl sti aas push adc sub (bad) and (bad) and xor jns data16 jl fidivrl ds imul js push fcmovnb jbe dec add popf add xchg in or push pop jns dec mov mov fisubl into mov xchg sub (bad) je jge shrb or and imul mov aas and sub out fs into xor push ret out pushf jp push adc sbb pop sarl cld imull and mov in push out loopne mov push cmp ret mov movsl xchg or push insb xor fisubl jae lods shrl stos mov mov pop inc cwtl push or mov int3 mov test adc push xlat and icebp xor xor ret aad (bad) dec scas or rcrl outsl insl lea out clc xchg cli das and arpl dec xchg std sub loopne imul mov push push adc and notb stos stos inc cmp push enter inc cmp aas dec clc cld call xor das lcall push fcmovbe fwait icebp add pop cmpsb test (bad) dec jg and cli mov cltd ljmp hlt or inc (bad) stos notb fwait pop sbb push movsb cmpsl and mov imul and std push push pop scas mull icebp sub mov in cwtl (bad) dec icebp sub fldt scas fdivrs call (bad) or popw or (bad) sub movsb and mov push or dec add sarl inc out imul dec sub add inc add inc adc cwtl fidivrl xlat rcrb push leave pop pop in sub mov push inc nop and cmc fs out adc aas mov pusha jl adc cmp xor inc stos mov push xor adc outsb and push aas inc test and mov pop mov xchg das jl or or add xor arpl sbb sbb or vmovntps outsb dec pop loop sub mov mov push cmp (bad) repnz lahf mov xor push add sbb mov (bad) mov adc sbb jmp cli push iret pop mov rclb xchg loopne adc cmp inc xchg out fsubrs dec inc jle lahf pop leave outsl lcall mov clc and jns mov push fildl loop jns jge fcmovbe lods or pop test ffreep divl aaa xchg sub aam push mov sahf (bad) mov bound fs push bound imul inc arpl pop mov push mov mov push mov add sub mov mov aaa cmp mov xchg iret subl dec mov jns movsb sub and insb adc mov push pop test mov sub addr16 inc mov inc test jns mov mov mov mov cmp lcall (bad) ja mov ljmp mov sbb fisubr mov in outsl ljmp cmp ss mov (bad) xor dec loopne jp xchg aam pushf push cmp cmpsb cmp cmp fwait lds jo or inc fdivs dec adc ss gs xchg iret imul sbb mov out insb lea xor rolb mov into jecxz test ficoml popa lcall mov xchg lahf jg mov loopne shrl xor notb push pop scas xchg fcompl sub or jecxz (bad) jle ret adc xor dec mov aam jno sahf dec cmp push sbb mov xor mov adc (bad) loop add lds rcr (bad) sbb adc push es mov push cld stos dec pop mov out and sbb mov inc lods push jns cmove mov mov repnz je mov and push dec cmc insb dec jge gs pushf (bad) pop dec in sbbl inc and sbb push inc push mov jno push call rorl xchg decb daa push mov inc cmp jo out cld push arpl jbe mov mov (bad) add or add imul jp xor and add sub jmp insl leave lods (bad) xor aaa or or in add push lret jbe,pn push ror mov and push or pop inc pushf sub jo push mov outsl mov inc and sub fs cld jmp jno pop mov pop inc ja add sbb xor jg xor es or cmp mov mov mov xor jp and pop daa cmp lods sbb mov jle cwtl push sahf jmp push sbbl cltd insl xor outsl nop mov sub cmc fstp popf dec cmc fisub mov daa mov sbb xor adc xor dec movsb mov fwait outsb jp pop idivb hlt push in (bad) pop orb imul daa xchg pop aam daa and cwtl push int cmp js jno,pn inc jnp lods mov mov mov xchg mov daa inc mov mov sbb jo jecxz push push cwtl shrb and xorl imul fcompl xchg aas mov sar or jbe sub rcrl mov cmp jne subb out insb (bad) inc xorb lret scas out in dec out rcrb xchg (bad) stos mov push mov sbb mov jle push adc cmp addb (bad) xor jecxz daa push (bad) ljmp insl mov sbb leave mov jae sub idivl dec icebp xchg sub (bad) sub icebp fild std ss xchg cwtl push pop mov inc icebp cltd sahf cmc inc adc int3 scas loopne mov cmpsb pop mov or lea loope das (bad) add sbb mov rcll inc mov inc sahf xchg sbb adc into xor xchg cmp fnstcw movsl mov adc adc cwtl jne pusha push and cmpsb nop test enter mov (bad) loopne testl mov movsb lods pop loopne or mov add sbb push fisttpl pop stos movsb jns mov push outsl subb sahf mov inc xor out roll iret test clc jno push fsubrs test std (bad) aad push (bad) loop mov mov jo xchg add mov add push stc cmp mov lods push loopne test sub push lret ret daa loope lds pop xchg xor push pushf push (bad) mov and cmp aad ja test loopne cmp adc pushl lock mov (bad) pop xor neg cmp inc push mov jmp scas out in cmpsl inc cmpsb stc push add (bad) call arpl sub test add ret dec jg sbb mov xchg rcrl fmuls outsb (bad) sub pushf jge jg cmp enter ds push mov aad mov pop arpl insl xchg and stc icebp lcall pop push leave or push push ljmp pop dec pop jne lods add sarb dec pop sahf test scas xor push nop rorb in and adc xor shl jne sbb adc test neg mov gs mov jo mov mov adc sbb pop fdivr cmp nop fldl dec aam dec add lret or lret mov leave mov loop adc aad outsb mov xor xor out mov ss jno,pt lret and cmp adc mov dec and out cmp xchg (bad) mov jns cmp push adc insb (bad) cmp mov scas inc jge movsb mov mov pop adc in and lret push push mov mov mov notb loop outsl andl jo push mov cmp ja aam insb (bad) xchg inc xchg xor jb adc mov cmp sub jecxz lret and std (bad) xor imul sbb jae pop cmpsb xorb sub and fs int3 sbb les outsl out mov mov mov rclb les std lds mov push mov cmpsl out dec mov adc sarb imul xchg fbld or jnp mov ja fidivl jbe jmp mov mov or and push xchg pop xchg cli push idivl pusha call and lret ret jp fldenv pop mov sbb or inc and imul rorl xchg outsb movsb pop int3 adc xchg negb jecxz xchg aaa dec and xor lds mov pusha bound jbe xchg rcl push mov shlb mov rclb es or adc add ljmp dec shl push mov sbb mov jnp inc or pop cmpsb rorb adc js,pt cmpl push or mov and jle sahf sbb in or mov xchg js mov push lods push js push jns daa or repz loope pop add out push lods nop and dec stc in setb out rclb xor fnstcw clc push repnz aaa out cmp push xchg dec lea xlat pop in add push popfw xor cltd xor sar movsl mov (bad) fnstenv inc push les sub jmp mov lock mov clts dec mov jge repnz xchg jl push jecxz les insl xchg loope xor sbb dec push xor xor mov jge push or adc pop mov ss sub mov sbb stc sub out insl aas xchg mov repnz (bad) mov aaa mov (bad) loope pop ficoml test mov inc or repnz add add or sti fcmovu cmp pop pop ds mov imul repnz jl imul push mov gs ret pop inc lret mov hlt insl push mov ds push cmp cmp pop add outsb push jne arpl inc dec inc inc pop mov add rcr push inc pop out scas or lea lock xor or cmp pusha adc pop xor mov cltd shll sub or pop mov rcrl xchg test sbb push mov sub mov mov fucomp mov or sar fnstenv lret cmc mov jecxz (bad) mov jmp mov mov add cmp pop outsb jae cli rclw sub cmpsb jns fsubs jnp mov cmp push int3 rcrb adc mov stc mov cmpsl je push daa fldl sub cltd or xlat ss sbb bound inc sub imul inc jecxz jbe fstpt mov (bad) jo push int3 jno lds lods (bad) pushl sbb pop insb xorb mov push mov dec mov adc push in sbb pop jnp sub ficoml sub pop aam sbb insb sbb mov dec pusha lods inc aas inc fnstenv add (bad) or and or add shrl sbb cmpsb mov jne pop push aaa mov std sbbl inc push xchg imul mov mov push mov and mov aaa dec or inc sbb mov (bad) rolb aam jbe ret loope out sbb xchg (bad) loopne imul out jns cmpxchg fwait and or mov aad jb mov and out xor jp mov dec insl add jmp inc je xchg pop int ret ljmp pop addl pop repnz lahf scas jo or jecxz ljmp jg in sbb or lds leave shrl cltd mov cmpsb jnp mov addr16 pop mov cli cmovs jmp push xchg fwait (bad) cmp int3 xor aad mov leave insb jns aaa movsl andl sbb mov ja sub outsb and mov addr16 jns jno fldenv cmpsl ret ficoml sbb in push cmpsl jmp or cwtl sbb mov mov lds insl xchg jbe sbb pop (bad) test fadds fwait and dec jno out out sub mov lret dec push and jecxz fisubl cmp mov lods movsl adc jbe sbb pop xchg xchg mov lods mov push add fmuls inc fs rcrl decl ljmp out mov push mov mov or popa decb push test lea jmp jle sub mov (bad) mov xor mov sub mov dec mov lahf rorl adc movl lcall shll (bad) xor or movsl xor (bad) jmp sub push scas lods cmp mov in leave sub ss xchg add lods jle mov adc ret xor fnstcw lcall lds add xchg pop fstps lds sub dec call mov mov sub adc xchg mov or mov pop pop inc push sub repz pusha (bad) aaa pop pop pop adc dec scas shll imul daa (bad) jp fdivrl outsb out inc les cmpsb jns xchg mov push adcl jmp mov int xchg xor jnp mov (bad) mov rclb xchg mov repnz lods pop pop insb aaa loope in and pushf mov lret sub call ret sbb cmp dec cs fdivs xor cmp and xchg push sbb repz call cmp sbb jne popf scas subl and repnz adc or cmc sub test into (bad) xor jl push pop or mov pop shr daa rcrb dec xor test inc xor jne cs ret jae inc adc xor imul add xchg jnp mov (bad) inc out cmp mov xlat mov mov (bad) scas subl adc std push mov sahf xlat jle or fildll or sbb pusha pop movsl push bound lock jbe repnz mov mov insb (bad) and push std aad mov xchg mul sub (bad) stos ss cltd jecxz stos push (bad) xchg dec addr16 xor cmp add out mov xor dec inc imulb out mov push sub outsb dec js (bad) or enter sbb ret xchg push or push sub hlt lods pop mov sub jbe sbbl jo push xor add inc cmp fstpt push popa dec mov dec pop cmp xchg aam js pop loopne cmp jbe (bad) xor popa scas push fs mov jl stc stos into push adc add and ss fnsave push cmp sbb and inc sub mov pop push push icebp call sbb out push ja dec ds inc or jp xchg mov dec leave push cmp repnz inc data16 orb pop stc mov ret pop push les xchg adc and in gs into pop sbb jbe ficompl inc xor adc ds sub add dec pop cmc adc jno je (bad) sbb in daa jns stos mov sbb data16 (bad) jno cwtl pusha cmp aas add das fbld push jb jmp dec push or into and jl jo xor pusha scas dec lds sahf test das sbb push (bad) or imul mov scas and cmpsl push add std xchg pop andl test divl xor imul xchg jg xchg fwait out inc mov cmp xchg stc (bad) xchg stc movl rol test test inc dec dec call subb sub js push mov add pop cmp ljmp out add js push mov cld aad xor popa ljmp mov (bad) cmc dec call sbb pop insl jecxz ret insl sub and xor push push enter xchg inc in dec hlt mov jmp (bad) (bad) and jae mov movsb push mov push std mov movsl xlat lds outsb lock adc xchg xor xchg lods into jb lods jns pop jle and cli aam or xorl adc xchg sbb jno ret dec xor mov push les mov adc adc or xor dec cmp mov cltd inc mov loop jae xor or in xor jmp aaa int repnz int push out int or jae adc pop and pusha fs outsb xor lcall leave push insb inc dec sbb mov adc cld cld ja inc arpl jbe pop js push lea shll cmp xor mov jns xlat es cmp cs push outsl sti int loope cmpb dec icebp paddq (bad) int out sub lods sub mov jne (bad) out cli fmulp cmpsb push inc push mov sub rcrb and rcrl push stc (bad) lock xchg sub dec sub fsts cs pusha fidiv stc test mov add adc insl (bad) das dec push jbe xchg xor mov les sbb das loop ljmp addl xor xchg sbb cwtl mov std adc fidiv sbb jnp mov mov cmp inc (bad) arpl inc (bad) or (bad) insl inc fcoms xor sahf fist add ret cli pop int3 mov add lret repz sbb dec lds mov (bad) lahf shl (bad) fstl addr16 mov mov sti cld mov ljmp mov jmp loop mov movsb push lock les fdivrs add scas movsl punpckhdq (bad) pop lcall fbstp mov nop jno adc mov lock rorb (bad) jbe rorl pop mov or lahf add shlb adc mov es sbb mov jae inc inc cmp push dec out das jbe mov mov test pop test pop sbb jns push push pop dec jns addb mov cmpsb sbb jno sbb popa adc dec out sub inc es rorl push icebp lahf cwtl div iret pop sbb sub hlt jo arpl fnop xchg dec adc sbb mov mov push pop adc iret cli shlb jae sbb notl mov pop mov aad nop fcomps mov sbb add xchg fimul pop ja jmp ja ja iret xchg adc out jecxz out (bad) sbb mov or nop int3 mov cld jg mov imul (bad) push cs (bad) nop sbb add sbb mov push inc jmp sub pop mov xchg jle inc call jbe cmp sub cmpl outsl mov insl mov sbb cmpsb mov repnz adc jo adc mov and lret cmpsb mov lock mov sbb mov push push xor rolb aam rcll push mov push enter mov jbe mov push cmp mov jae cmp negb in stc ss xorl sub adc push or fstpt jo sub pop jp cmpsb mov jp jo push push dec jo push push push adc ljmp add (bad) jo or cmpsb mov mov jp mov push push inc jo adc push scas ret add xchg sub xor xor cmp add (bad) jne dec and or enter xor and notl mov test dec mov jmp flds dec ret (bad) int mov mov mov mov mov mov xchg cmp (bad) bound add inc (bad) sub and add jecxz into mov xor mov sbb jo adc mov xor ror fcmovnb pop and inc sbb in repz je loope xchg shrl mov test daa jle pop xchg push push inc ret xchg sbb mov imul xchg in pushf lods mov jge sub into repnz cs stc pop scas icebp dec lret adc dec inc pop jmp inc jg jo mov (bad) sub adcl sbb fidivl negl insb or in cmc insb adc mov cmp bound add cld cmp (bad) push push xor repz (bad) cmp daa xor leave xor mov adc idivl sub cmp lret jo lahf outsb cmp dec data16 add sarb jnp pop pop je jge pop or xchg or jge test sti ja pop cmpsb sub out lods add cltd pop lret jecxz repz shll fs jne and packuswb das inc je dec into xchg jo dec in push test and (bad) sbb xor mov or ret mov aas in mov pop mov push inc (bad) or sub inc (bad) les call cmp test aam jns shr or repz ret add mov pop pop cs add mov mov dec icebp sbb add out mov les jns jge mov (bad) insb es cmpsl mov movsb es push xlat repz ss mov mov fwait jecxz dec js inc jle add aas adc mov ds sbb ds adc push and add add ret stc sub xor incb sub std pop lea imul lret ds aaa les cmp or mov xor sub adc adc jae (bad) jbe dec mov (bad) mov sti (bad) cmp and jg or mov xor mov push xor add (bad) movsb pushf inc int3 iret adc movsb sbb and shlb (bad) dec xchg jnp adc fisttp (bad) insb jecxz pusha mov fidivrl call fldcw subb aaa lahf xchg stos js mov inc popf fs popf insl mov scas jmp fcmovu adc in mov incl in int in mov push mov inc loopne lea lahf sub cmp in adc orl sahf add mov iret (bad) out int3 pushf or ret xchg mov pop inc pop jmp mov pop mov adc lock push mov mov mov rclb sbb test pop xor sti negb ljmp hlt sbb in or pusha lea pushf cli leave mov and push leave (bad) cltd or mov aaa sbb adc sub xor test add int shll cltd pop jl cmp je cmp aas add leave loop fsub mov negl push jmp dec int3 lods mov xchg xchg jp leave push fucom aad mov mov repnz int3 (bad) mov adcl jne fcoml jle mov mov inc push popa popw and inc push nop je mov jno andb push mov faddl mov dec jnp negb mov cmp cmp sbb push movsb mov pop lret mov scas xor cmp rcll (bad) dec outsl inc xor ret cmpsb movsl pop cmp repnz sub je mov sarl int sbb push pop mov inc cmp pop xor cmpsl enter ds cmpsb inc jecxz xchg sbb inc xchg adc sub das or call inc dec stos mov sahf mov mov fnstenv add sub je (bad) dec xchg mov ds pop bound cmp xor mov ljmp es stos js jmp xor aad and lcall sbb jbe push das xchg sbb push xor lds int3 neg sub jle cli dec xchg sti cmp and jbe inc outsl fiaddl (bad) adc lods add or mov popf or sarl fadds rcll icebp mov mov in cli aad jmp scas mov rcrb xchg fs xor fistpll jnp jge jecxz mov sub arpl jmp and mov inc mov mov adc rolb orb pop inc push sarl popa and adc sub cmp sbb jb xchg sbb lds aad or inc aaa inc sti ja push (bad) dec jecxz push aam mov jp in sub mov adc ret sub iret jno mov mov sbb jp cmp out sub dec push dec pop jns hlt fwait inc mov jp daa out rcrl xor jnp push mov imul jmp inc sub add cmp sub rorb jb adc push andl cmp (bad) push (bad) rcrl or sahf or stos adc cltd test mov (bad) cltd xor or adc ror inc sti add xor das mov xchg mov jae pop jb jmp jl out hlt adc xchg push test mov mov push jp movsl hlt cltd jns cltd add pusha mov (bad) mov test or test cmpsl push cltd call push mov xor mov shr mov fcoml cs repnz mov pusha jb daa sub rorb adc pop cmp push lods das dec adc cmp inc icebp adc repz and xchg xorl popf xor ffree jle inc arpl jo or jne push test cmp (bad) aaa mov sarb xchg rclb lds adc std lds das dec bound std std (bad) cmc and fbstp cld xor js or sub rorl outsb psraw xchg bound es (bad) cmp mov and jecxz mov jl jg dec in add fcoml (bad) inc jp or test push xchg mov cmp mov gs inc mov sbb jl dec xchg push jle sub call pop push inc std push (bad) std or int fdiv xor inc inc nop sarb inc jbe sbb aad int3 enter int jnp push cmp and xchg sarl sub jmp pop jne mov xchg rcl mov push push sbb cmpsb mov cs (bad) fidiv mov xchg mov add xchg push into loope mov and jae push je and cmp cs data16 mov jl lret mov mov shll insb loopne mov shll out icebp or push in inc jne insb out mov ss cltd xor mov inc sub mov xor push xor in mov arpl (bad) jecxz mov adc mov (bad) dec std and mov test lea adc out cmpsb dec scas lock xchg jo sbb lods test aad sub inc and mov push mov ss add cmpsb push or adc adc pusha sub adc xor test mov add mov push rcll sub aas ljmp mov adc call push jo es add xchg sub (bad) push add pushf sub dec jp adc and pop or or jo push push rclb cmp (bad) push cli jp imul pusha and mov sub mov and push push or mov jp jo jo loop insl mov sub jg adc xor mov sub dec je lret (bad) push mov adc int lods sbb in rcrl test std popl repz gs fmuls pusha dec rol cmpsl popf int pop int cmp int test push rclb (bad) and in insl (bad) in inc dec (bad) imul push jmp frstor scas push inc loop (bad) pop push jns test push in xchg es popf loop push ljmp out pop in fsubp mov cld out dec int ret inc add shl rcll inc or jmp add inc pop shl (bad) out into mov insl addl add or xor inc data16 pusha push ror mov or inc rol aad push (bad) dec fcomp into dec ret xchg rcl popf (bad) mov pop pop pop int3 rcrl stc sbb sbb addr16 push out xchg fist jge sarl xor and ljmp adc mov add dec cmpsl ljmp mov cmp xchg repz push insb sub xchg rol sub xlat (bad) adc cwtl mov int mov int int call imul or repnz dec stos or out push into and sahf int (bad) int sbb int mov ret stos lret pop sbb loope sub sub cmp cmp xor nop cmpsl mov test or mov popf sub test out std add sbbb xchg std mov cmpsl es adc xor xor and repz bound jne shrb neg mov sub mov rcl sarl push inc and std and xor movsl jp and xchg sahf fdivrs mov nop arpl fcmovnu cmp movsb (bad) arpl mov adc push mov ret cmp sub add leave and loop dec sub addr16 sub xor add inc aaa (bad) mov insl xor push subl inc inc and ret fstpt repnz dec and aad jb loop out xlat and add cmp jg cmp and sarl add (bad) mov cbtw sti and loope int sbb mov sarl in fnstcw stos mov into cmp in dec sub xchg cmp or std inc sbb sbb mov shlb shrb loop cmp pop dec sbb and sbb icebp xor jnp jae sub ret nop idivb pop xor xchg push repz stos jnp hlt xor ficoml imul pushl lret ljmp jle mov divb add mov add repz fstpt sbb les xor fnstenv pusha insb lret jp iret adc inc adc ret sub add bound ficom inc inc cmc push scas out lds cmp sahf add (bad) cmp out movsb xor shll mov sahf iret jecxz int3 (bad) sbb repz xor aam jp and in inc arpl ret mov rclb adc lds mov ret rcl jae les jbe pop cmp cmp cld aam lds out cld lds push int sub pop int ret cld leave cmp in leave fmuls int out cld int pop outsl fldl mov in leave fcoml cltd scas int aam lret lcall int mov in leave int3 push int jne int out cld int pop outsl fisttpll gs add out fldl or sbb pop lds int int out cld int pop outsl fisttpll pop int mov (bad) push cltd lahf int lds int aam lds mov fcmovnbe pop (bad) fucomip fisttpll sub pop int ret cld leave mov cltd lahf lds inc (bad) (bad) cld push int out cld int pop outsl frstor pop adc call jg jge mov mov lcallw insl pop js mov sahf add lcall sub push call js test jne mov dec es insl jns imul pusha out les xchg daa and dec daa jno insb out jns outsl daa movsl imul mov lcall add jle and loop dec jg push call fwait ss mov (bad) mov cmp adc pop les fisttpl push outsb shrb sbb int3 xor push jmp rcl dec dec pop aas in stos repnz js pop lea subl or pop (bad) push sub adc adc sahf xchg add adc jg lock push mov sub popf jp xor das mov lods jnp insb push mov les lock dec jne adc (bad) sahf scas repz rorb xchg jle insl pop sub imulb out sarl xchg adc mov mov sbb loopne inc cs adc sub inc push das push scas stc ds and stc xor inc mov lea mov sub imul and inc mov loop ret lods adc mov jns pop (bad) mov fstl cli clc sar push push insl data16 aaa das add shrb add ret rorl pop jo inc and mov inc ret rcrl (bad) dec (bad) lret jb jb mov popa jecxz push push pop fdivrl pop or and idivl cmpsl and push mov das add push jecxz es mov and xor mov adc idivb jecxz aam shlb adc ss jns mov lods cmp movsl movsb adc mov cmpl cld pop jecxz pop cs adc mov movsl add sub cli sbb jl sbb push daa or mov test cltd aaa jecxz cmp loop (bad) mul cmp (bad) dec (bad) notl insl or in repz outsl stos nop test pop jns adc and cltd add test ja cltd inc popa and repz fmul stc mov hlt fwait sub xchg jno (bad) in (bad) mov xchg adc and pushf sub fldcw fisttpl mul mov mov mov sbb (bad) mov jne push jnp in das xchg leave mov and (bad) popa or (bad) sub lret adc dec stc sbb mov sub jge mov pop cmp rorl (bad) pop (bad) cmpsb mov in xor pop stos dec and lods (bad) cwtl stos pushfw lret mov popf cli cmpsl insb cmp add iret mul cltd icebp aas cmp inc out sbb mov and xchg dec mov fisubl jmp outsb loop push inc movsb mov into addl push jge jp fwait lret sub repnz pop xchg pop pushf push sbb repnz add xor insl adc enter in mov les pop stos cs and push cld mov dec mov push repz iret pop in pop movsl sub pop dec fsubr rorb mov ljmp outsl in fisttpl in cmpsl pop stos in mov jae inc add inc cmp (bad) fsub jle movb mov int3 out mov bound add inc xor mov cltd lret stc outsb adc dec xchg push cwtl ror jbe insb jae inc ja pop insl pop xchg cltd xchg cs ss xchg sub imul adc movsl sarl test mov aaa push sub or (bad) call (bad) fmuls loop fwait inc je (bad) mov lret lahf mov in inc movsl or rcll ret (bad) arpl (bad) pop mov in sti stc mov in js sbb cwtl xchg enter cld mov rorb pop rcrb loop lret mov bound repnz cmpsl adc pop dec call in dec roll mov mov xor popf xchg xchg inc pop test lahf cmc cs jl or jecxz dec aam ja out popf imul std mov test xchg test pop xchg fstpt dec mov gs stc push push or cld pushf cmp loop push decb aam scas les cmp stos ja sarl out xchg dec jl cwtl xlat mov xchg aas mov mov out popa push jmp sbb (bad) mov add inc addb inc popa int fcmove frstor lret in icebp xor fidivl test pop lock pushf add jnp loope and paddq pop cmpsl fldt arpl movsb xchg lea aam leave sub or mov cwtl (bad) lock les xchg add jb push dec gs std and pop push xlat mov sti fmuls or test imul mov fimul notb cld out lock lods imul push push mov ret sub movq dec dec sub dec loopne mov push inc mov or out adc sbb ljmp jl std mov sbb cmpl adc mov test fisttp jge loope fwait jp ret inc push insl sbb jge arpl sbb jl add repnz dec int3 or dec adc add xor push pop jl insl inc icebp pop jl pop jmp addl hlt jae jns push push jmp or in or push pop stos lahf mov out adc stc inc dec lret subl xchg sbb fdivl in gs scas mov inc pop arpl fldenv mov sub cs sarl mov dec xchg jle jne jnp fildll scas inc fimull shr aam andl lret sti xchg dec lods cmpsl lret mov xor inc repz sub cmp jge nop sahf cwtl sub lahf ljmp inc pop mov inc inc in repz loopne std xor mov xor int3 stos stos jmp jbe pusha ret mov mov xchg jl xor inc enter inc ror fwait mov pop dec jg,pn dec fisubrl popl sahf push out jmp dec jno bound or imul add fsub call mov cmp mov mov imul pushf pop jo movsl icebp pusha rcl lret in mov dec sbb jmp mov ret mov mov dec movsl add and loope cmp lahf lret xchg and pop aad sub push inc rorl or mov mov (bad) enter dec test (bad) mov adc mov sbb fnstsw mov fadds sub cld inc (bad) or xchg inc mov popf ljmp gs push nop push jnp push jns into pop inc (bad) les imull js test pop andl dec in xchg and lods mov mov addr16 into movsb xchg test pop mov sbb shrl or into (bad) (bad) daa fidiv lds and jmp xchg aam inc lods ljmp idiv aad iret ljmp add push imul in jmp gs xchg popf pushl mov ljmp in mov out fild pop push in jmp adc std xchg dec test fdivl xchg xor loop add inc (bad) iret loope lcall mov sbb imul mov lods gs ljmp sti je cmp and adc sti mov outsl sbb or arpl sbb (bad) cmp popa in mov pop clc pop lcall inc out sub in dec dec dec push fwait add ljmp mov sbb orl pop pop jge pushf jmp fwait movsb lahf mov mov jo and outsb mov dec mov jmp push push push mov shrl xchg pop lahf push ret dec and mov or or cltd dec jge dec dec rcrl pop popf mov loope in (bad) mov inc cltd outsl fs movsb lods lcall cli inc jmp in mov lcall xlat mov dec loope hlt addl hlt test and mov outsl jp data16 stos out dec mov xchg insl dec jecxz xchg cmc or fwait (bad) push into dec sbb mov cwtl lahf sbb sbb xlat enter daa cmc push in xor cmp arpl mov cmpsl (bad) sub shrl in clc scas add dec push into test cmc idivb je les xchg xchg jae dec mov adc push aad loop test mov pop cmpb push (bad) mov mov insl lahf pop scas xchg aad in testl cld and push repnz push stc pushf dec rcrl popf lret daa jecxz leave iret (bad) in sti pushf setne pop or loopne mov mov xchg roll gs aad lock sti das mov (bad) push insb add iret stc jmp pushf jp ret mov ja pop (bad) (bad) test (bad) data16 (bad) fild mov movsl mov mov dec shr adc mov mov add les mov lcall push dec in xchg mov movsl scas cmp cld jmp add and xchg int jl push or outsb int3 mov add xchg icebp or repnz movsb sbb add roll inc push mov jns mov jge xchg movsl jnp push xchg inc lds pop dec out jmp (bad) cmp cli mov cmp and test cmp mov pushf pushf or in (bad) mov xchg mov sti in sbb lods (bad) push adc rolb push mov mov dec sahf test pop jne dec add add adc pop ror movsb pushf dec mov gs mov out push mov mov shrb lret call jl push (bad) fidivr icebp (bad) lret or test or mov in pop mov (bad) lret popf std insl int3 in dec out xor insl fistpl xor (bad) repnz push das xchg in sub xchg outsl cmc mov mov insb sbb (bad) adcl cvtps2pd mov mov (bad) int3 push enter cli adc jmp cltd fstpl add std mov sbb pop hlt scas mov fld1 popf mov mov stos addr16 popa fcoms cmc rcll mov in dec jmp xchg mov push shr sbb out dec mov insl sbb fcoml sub std sbb jnp test jne dec dec enter push sub fistpll std mov sbb lahf jae inc xchg inc in loopne jo lock mov ljmp add jl or xlat fucomip mov fcompl pop shrb push pop scas or xchg pop bound mov cli test mov dec loopne nop adc adc push dec lods in rcll fidivrl scas fisttp aam sub or cmp test dec fs push jmp sarl push daa call push jge cli incl addr16 ljmp inc out jns push in cmp clc scas mov jmp sbb outsl cmp shrl out test leave pop jl or dec push jle ror mov push fimul insl cmpsb outsb rcrb imull cmc cmp lods imul push xlat (bad) idivb fldt xchg mov inc or lret pop sti jg inc sub test imul add push pushf (bad) rcll cmpsb add (bad) dec fcomps aad insl data16 pusha ret fwait push outsb scas hlt das push es dec push sub nop in out xor cmp sahf insb ljmp (bad) push xchg push rcll sbb push ss pop mov insb jg or cmc pop cli fnsave cmp inc clc sahf int xor sti mov stos cltd sahf enter add or or into adcb mov lods addl scas and (bad) sbb pop add cmpsl sbbb or dec mov push dec fcomp pop lods dec jge pop rclb in nop rcrb repnz fisubr test test into lret lret leave cmpsl shlb inc and pusha mov sbb dec stc mov fisttpl xchg push clc inc (bad) fsubrs xchg jae mov jmp jmp out stos out dec fwait out (bad) decl xchg aam mov mov sub mov leave jl xchg and mov mov cli sbb sub pop sub or ret lahf inc xchg (bad) outsl imul lea out les scas cmpsb add adc rorl mov aas (bad) (bad) pop mov popf push cli dec loopne pop mov loop decb call dec js out cmp push arpl clc mov push sub push sbb adc pop xchg sahf aad mov je (bad) adcb xchg (bad) repz dec push aas dec push punpckhwd xchg pop jno hlt dec std dec and xchg sbb cli lahf pop aad fisubl xlat cli mov xchg outsl inc jmp (bad) loopne jne into pushf in shrl in add mov dec popa pop dec pusha addr16 (bad) (bad) pop jns jmp pop lods test movsb xchg xor inc cmp pop and add jo add mov dec xchg popa cli mov or sub sub add push jg jle out fild dec push adc inc pop stc frstpm(287 and lds mov pop aam fstpl (bad) cmc (bad) cmc sub add mov inc sbb mov mov lret loope test outsb daa push repz (bad) mov or jecxz mov leave sahf loope lods (bad) out push fildl fs lahf xchg lret mov push (bad) push popa aad or lret shll jl out fs jns or jl mov bound lock xlat jecxz fs stos inc mov xchg inc inc int3 mov std cltd adc fs ja in mov jo (bad) repz adc inc mov (bad) test in jl add in imul dec push or decl adc out es ficompl cmp (bad) vpshlq push push sarl and add aad or cli lods leave add adc dec lea jne test or or addl (bad) cmc xchg mov in mov aad repz ret addr16 lahf xchg inc pop cwtl jecxz xor fs incb jl test pop aam movsl scas or or into fnsave movsb out push test inc lcall ret test test jne or inc les faddl dec outsb push imul ljmp inc lcall fdivr leave add cmpsl or jmp cmpsb pop and loop lret mov scas or mov mov sbb inc mov ret lods rcrl jmp stc cmp dec (bad) call pop cmp pop (bad) aaa or jge sbb cmpsb cmpsb sub scas fadd xchg fild pop cwtl (bad) stc cwtl repz mov jle pop loopne (bad) sarl gs movsb (bad) mov test outsl insl iret pop xchg mov adc and pop sahf xchg pop (bad) pop shl les addb fld rcr xchg in cwtl fldcw hlt xlat into cmp aad inc or je std test cmpsl cmp mov scas xchg mov addr16 jecxz into inc repnz idivl mov mov sbb dec pop jecxz sub mov xchg push mov into je mov scas clc xlat lds jmp movsl push nop out fdivrp clc push push jl into testl add cltd cltd test pop insl add add cli or jg pop rcrb (bad) test push pop inc leave shld or push dec pop fcmovnbe daa xchg mov inc push icebp pop repz aaa mov out inc dec jle ret mov loopne push mov push mov cmp sub pmulhuw and jb into hlt adc mov pop cs jp in xchg enter adc imul jecxz jge inc das ljmp jge fnop xchg dec stos test pop sbb iret ret xchg sbb pop stc dec (bad) mov lods cmp push pop test pushf add js out inc xchg dec pop loope popf aam ja mov mov lret and lcall aad (bad) insl xor sub insb cmp popa (bad) jg mov add inc femms add out lds sbb cwtl push ljmp add imul icebp int3 pop js add mov out fnstcw xchg mov popf (bad) xlat mov test pushf mov xor sbb pop inc test gs xchg mov test cmc push sbb cld (bad) aas addr16 inc rcl in xor cmp mov mov jnp or xchg push ss xor (bad) vmovdqa nop lock add cwtl push inc iret mov lods jmp push fimul ret and nop scas and sub (bad) popf or lret fiaddl mulb sub xlat sub sbb inc xchg insb xlat outsl xlat loop (bad) push ja push ret xor jne cwtl aas lea pop test iret cs cmpsb or (bad) mov pop mov gs cwtl std xor shlb push sahf gs mov popl xchg clc cmp shlb rcrl sbb test sar lods lea add aaa daa xchg fmuls sti push daa sarb fcompl cli insb xchg adc sti pop xchg dec lahf xlat cltd movsl int inc inc jg roll xor mov mov icebp cmp xor in ljmp sar je xlat popf jg mov dec andl insl out lcall push lret add sbb and js rcrb dec aad sub xor dec jbe xor adc xlat iret repz out mov xchg fdivs sahf dec ror hlt cwtl addr16 dec addr16 neg icebp dec xchg gs xor jg sbb test cltd mov cmp fwait or insl pop rolb or pop ja (bad) fdivrs call fs xchg mov pop fistpl mov pushl outsl orl in jl mov les cli insl das inc dec inc xchg jmp cmp or xchg inc cmc inc xlat aad push xchg cmpsb fisub pop push sub push pop jmp pop into and aam cmp jno inc test push mov lea push mov inc jae cld xlat dec lret xor rcrl jns,pn movsb sbb inc sub fistpl cmp or jnp (bad) rcll jecxz jnp lea push adc in and xchg or mov dec mov stos insl sub dec cli dec push jns ljmp das cmp ds jns fistp sub lea hlt or into cmpsb add (bad) xchg jno idiv outsl cs addr16 add xchg clc mov adc loop inc lds cwtl sub rcll pop lods jbe adc add pusha xlat or out and fisubl fcomps loope lret mov or xor test inc jae mov dec add pop rol (bad) sub icebp cs int3 xlat sbb imul inc xor inc jmp xchg popa into mov pop negl mov in cld pop cmp or stc and or jmp jmp (bad) incl mov daa in lods mov lcall mov jae cli (bad) inc mov cld bound mov jge nop popf icebp (bad) in sub dec mov outsb lcall lcall dec into pop sti mov lcall cmpsb cmp sbb push insb test out pop jmp cs loopne mov dec xchg xchg test pop test fcmovnu pop out xchg sub fmull xchg mov jmp push adc adcb popa test mov push in jne xchg out jg stos cmpsl sbb cld cmpl add pop dec jg leave fwait fs sub push into enter cmpsb adc call fildl pop cltd out aas jl cmp out lret inc pop push xor arpl cmp mov add fistpl inc popf inc cmpsl pop fcomp addr16 sbb cmp xchg or in jl or adc push loop imul insb and sbb arpl mov push jecxz imul popf ret call data16 (bad) jmp pusha sbb imul xchg mov jg popa insb and xchg mov sarb jge int3 test hlt fadds push hlt cmp sbb cld mov push imul and mov jmp mov test mov xchg sub mov vpmacsww push adc repnz push dec imul sar std add mov xchg jb xchg sub in pop jae scas faddl daa enter (bad) out pop int3 (bad) cmp test lods ja movsb xor clc jmp dec cmp sbb inc jae out nop jg pop in (bad) adc xchg aam inc cmovb and add out js mov push cmp jnp outsb or add pop scas scas iret mov stos pop and jmp dec xlat sub xchg clc dec mov push mov push push adc test or ja imul je jl jbe inc bound inc repz iret iret mov xor daa cwtl inc popf (bad) enter dec (bad) aaa pushf inc in sub or mov repz out sbb faddp add xlat mov fstpl push std pop and popl aaa in adc and jl and fwait jo push pop idivl mov dec shrl stos adc aad pop hlt dec or cmpsl mov fildl mov mov dec mov and jne in out fbld add xchg gs rorb ds xlat pop pop or aas jno pop pop xchg leave jl andl scas mov pop fldln2 pop in ror dec stos outsb fistpll fidiv sub fnstsw rcrl pop xchg xchg fwait or imul or fcmovbe or leave add push pop out arpl pop push (bad) xor outsl xchg arpl imul sbb rorl sbb add ja lcall cld stos cld or ret fmul jge jo popa cmp (bad) mov aas loope test pop sub (bad) aaa mov fdivrl std mov pop imul inc lahf (bad) mov ljmp insb lahf xchg stc mov into in pop cmp inc aad jl lods lret mov push out fwait xor jmp add jbe sbb lret fcoml popf test clc iret push push cs sbb mov ficoml pop pop (bad) sbb inc mov stc jl mov add orb inc jb aad mul sub jno ret jns ret or icebp pushf outsb mov dec loopne flds inc pop dec ret pusha push repz push xchg aam mov in pop or mov or adc clc into mov push loop je fsubrs sbb std pop mov jl std fcomps ficomp lea icebp jmp lds sbb fnstenv xchg jae int cmp mov outsl nop roll inc icebp hlt mov sbb dec mov mov inc and pop sar test lea fisubr inc fcomi lret or int3 pop fsubrs jecxz pop adc nop jne lds std sbb xchg ja shr add or sbbb lcall pop fnstsw adc out dec inc ret mov dec cmp inc pop clc scas out incb cmp out lds jecxz mov inc lahf subl movsb lea dec fwait in fnstenv push loopne sbb ljmp in test cs jmp push ja ror mov fsubrs (bad) xchg adc incl inc push (bad) jmp jg (bad) jae jmp (bad) out add lods or dec pushf dec call popf scas cmp fbld jmp ficompl shll xchg rcll aas jb pop add sub (bad) lcall xchg in pop scas sti mov xor imul jbe scas dec sahf inc (bad) xlat outsl fs xor (bad) and enter aam lock adc je mov nop lods adc jg ret pop mov insl and into fnsave scas mov add insl xchg leave adc dec inc add rcr xlat pop jecxz and add jbe and pop push out jbe popl out xchg jl mov dec aaa in fadd mov sbb loope mov aas adc dec mov jge inc mov push jge jg pop (bad) sbb lret clc dec mov cmp loop sub loope rclb mov dec sub push cmp mov shrl pop adc mov or int3 xlat movsb fmul popa inc sbb insl pop stos inc add fwait jno adc cmpsb stc in and (bad) mov push leave pop in fdivl mov stos outsb add (bad) adc insb shl fsts rcll cvtdq2ps inc cmpsl sbb lea (bad) adc mov call sahf jne push loopne add xchg insb xchg push or xchg iret mov (bad) les xchg sub in aaa jge int jmp lods adc push inc dec jno mov dec sbb xor jae js cltd pop xchg jo and shlb add lea int3 cmpsl inc pop icebp or mov dec cmp cli rolb mov jne inc fisubr in xor scas lcall dec sub (bad) shr push mov inc cwtl or mov data16 mov call pop in (bad) dec xor sub push cmp push sub pop jb out xchg scas inc fwait mov mov mov or inc sub loop fwait lods jp cmpl mov ret sar xlat mov mov mov pop out cmp xor call mov imul jne insl aad je add or adc and dec ja jae movsb xchg fcoml xchg insb sti lret cld pushf outsl mov mov pushf pop and lock xchg test and or fs pop pop aad push fstpl mov ss (bad) lea cmp js fstl mov insb icebp mov mov sahf sbb and lahf jmp leave ret mov fcmovb or into sbb cmpsb addr16 pusha dec cmc push and stos pop movsl pop and and (bad) jl insl inc imul pop cmp in add mov test or stos xor int3 es xchg popa mov lret pop test add loopne or push pop stos fildll sub insb mov cmc fsubl movsl pop adc jno push or inc int3 cmp cltd jnp mov (bad) xor and xor je sbb push outsb push ret jb shl cltd sahf ror out enter push imul fisub jns jae inc test fcmovb or fs (bad) mov idivl dec test gs push fsub clc mov shrl mov or imull loopne ja xor (bad) push push sbb sub pusha ror lcall mov inc lds adc mov mov cmp aad pop daa outsl mov jle inc mov pop arpl ja sarl cmp mov dec bound push mov sahf pop insl js jne into test jl or sbb cld insl mov push (bad) mov sbb pop nop lcall sub inc cmp ror icebp icebp xor cmc pop add add ret scas cs mov cmc xor pop int xchg mov sbb in les into int in push or cltd int pop out mov lea lds sbb adc shll push xor mov pop mov popf out sarl mov leave mov and xchg sbb arpl ljmp xor ja xor ret inc repz jb stos sbb mov mov roll adc xchg (bad) jecxz (bad) xor xchg bound nop inc add mov ret lds xor rcll inc out jmp arpl cmp push push mov push pop push lcall les jmp xor das in ret jno mov sarb push push xchg add gs repz lock inc push psrld cld inc push pminub xor scas rorb rcr sub mov mov mov and dec int sarl xor push mov aas dec fs pop sbb add add inc push lcall mov mov jae sbb push push cmp xor and and mov mov cld ljmp bound es repnz repnz and push pop pop sbb fdivl xor and jae and push ja cmp xor pushf (bad) cmc bound xor xor add es push xor aad leave xchg xor cmp outsl fwait sbb sub cmc xor add sub xchg cmp mov mov movsb sub pop xchg and cmp sub and push adc movsb lcall pushf mov push cmp movsb push cmc pop and mov pop mov push jecxz xchg xorl jle shrb inc xor adc add xor nop ja xor movsb lcall divl and sbb xor lods xor jno dec pusha and inc shlb cmp pop dec xchg adc cmp and pop ljmp dec add xor sbb int3 out mov or push push add adc jb mov es sub js xor das imul cmp (bad) repnz jecxz sub xor xchg adc iret adc and cwtl cmpsb mov and mov mov movb (bad) xor pop or and push cmp sbb repnz ds xor push and push sbb xor push pop sbb (bad) jne fnstenv push lahf (bad) xor aam clc xor out mov inc add cmp xor mov iret lods mov ss mov adc cld pop lret xchg push lcall sub push xor repnz push jle mov cmp pop nop xor inc sbb xchg in inc hlt ds jl pop fsubrp xchg inc fldl cli xor call inc ljmp int xor xchg mov fldl xor mov (bad) fldcw lcall mov xor fstpl and ss bound fcoms sti xchg push hlt pop xadd int xchg in xor pop mov lock jecxz and lret inc xchg (bad) mov add jg int (bad) ljmp fucom fmuls mov (bad) pop pop mov mov (bad) xor and sub (bad) in xor shrl dec sti aaa jecxz scas sub (bad) mov pusha jl jle mov mov hlt aaa jmp mov xor xchg andl cltd jae mov adc cmp sub mull js jp mov cltd or or loop ljmp cmp (bad) jo mov sub jge rcrl mov xor out jmp int cld in dec xor xor and insl aam jmp mov adc jp jno out and ss or push or pop (bad) hlt xor arpl cmp jge pushf scas (bad) divl xor and jl mov adc cmc and inc (bad) je lods inc cld dec aad inc bnd int3 (bad) in and xor loop fmul lods mov frstor lea sbb mov inc bound test sbb test fst scas enter push xchg jne aad and bound xor push inc push or sub int loop xor xor push (bad) push fs daa bound pop mov cld add pusha jge jg je js mov fisubl push pop and xor frstor sub sub xor push add and lret xor movsb add and shlb in lds ss xor inc js pop add ja test iret add xor jg jno cwtl fnstsw outsl leave std andl push mov lret fldcw hlt inc int3 jmp int dec push aad dec es ret int3 cltd lds in std ljmp int3 xchg xorl sub push jne add imul int ret cs popf int inc cmp in and into cmc int push pop push adc xchg xor cmp push test test mov lret xor lods push adc inc xor hlt pop repnz dec jae addr16 xchg int3 je jl movsb iret or aaa mov fstpl mov mov dec addb cmpsb mov int and xchg idivl mov cwtl mov test mov aad dec mov paddusw cmp xor aad and xor mov sub leave and (bad) push push jno,pt clc stos sub add push or jae lock dec das xor inc jns bound das xchg nop test loope push fwait rclb pop push (bad) xor int3 inc out leave cmp add sub push clc sub repnz or jns cltd mov bound shll into jns sub nop (bad) xor inc cmp sub mov loope call mov cwtl orl shrl repnz fldt pop xchg xor movsl dec js dec ds cmp xchg xor add mov sti jno xchg mov inc mov xor std test sub aas lea xor xchg mov inc push rorl xor dec xchg adc pop inc pop pop std in jb dec mov mov inc inc mov cmp jnp les lds or jo mov (bad) adc and xchg inc xchg (bad) adc (bad) out or push mov mov cmp mov pop gs (bad) or call inc or inc inc and mov mov pop stos or imul (bad) leave fdivl mov nopl (bad) mov test dec mov popf xor or push dec jge mov (bad) addr16 ss mov leave call mov inc inc addl outsl repz mov and mov push mov push sub ret inc add stc pop cwtl add cmp push sub fildll lods andl loopne fidivr lret cmp inc xor add mov pushf push push ficom (bad) mov outsl jl add faddl and inc xor push in nop or pop out popf es or and sbb jecxz push pop (bad) (bad) and int cltd add into pop jp (bad) jle cmp out sub vandnps inc mov sbb cmpsl sbb adc pop xchg ficoml shll sub mov pop cli xor fwait inc inc mov imul and mov or xor nop sub mov inc add add push push cmc dec (bad) inc mov outsl jns sub inc and dec adc lcall mov (bad) xchg jbe lds sar int3 std cmpsl arpl lock and push push or jmp jg xor mov aaa sbb repnz loopne in loopne add mov out push dec gs hlt loope enter inc mov cmp pop scas pop fimull jmp pop pop push enter push lods movsl mov ja daa outsb fst sar inc and adc or pusha dec mov test cmp and mov mov cs mov mov inc loopne dec ljmp adc popw sub push mov cmp mov mov mov iret aas cmp lahf cmp hlt xchg pushf adc xchg mov in cli lods pop mov (bad) (bad) mov xchg imul and scas mov scas je jecxz sub cmpsb incb dec orl push scas mov jns negb or fidiv ret cmp xchg cmp lods mov hlt inc aam or lds (bad) (bad) lock std xchg (bad) add add cmp jmp push cmp hlt fs out pop int add pop or xor sub jg mov and vpternlogq std lods fist fs js movsl call ror sbb (bad) jb add lret icebp leave out or icebp sbb orb cmpsb mov push call inc sbb push fmul int in adc mov (bad) fwait (bad) xor shr jno loope cmp xchg (bad) pop sub cmp aas sbb data16 aad fstl xor dec or (bad) jne push dec and mov fldenv jmp (bad) lock es push xor inc push inc out (bad) in cmp pushf xchg or jbe imul push clc insb jge sbb sub and jae (bad) cld sbbl dec inc pop add xchg push add cli inc jno cmp ja pop xchg (bad) push cld stc xlat sub lret nop (bad) push imul adc mov inc mov or popa sub inc push sub popa pop cmp xchg inc pop lcall jl mov (bad) sbb les adc lea pop jl xchg push ret xchg pop dec dec cmp test fwait imul push movl inc (bad) fisubr mov push mov pushf lahf and call mov mov xchg adc mov inc push ret leave dec fistpl cmp aaa cmc inc adc cmp or mov adc pusha addr16 mov mov sbb paddusb sub shrd pusha push jle push (bad) insl push pop test pushf push mov sub cmp push dec cltd inc jne out jno enter adc lcall lea dec jmp sub cmc cltd neg test ja sub sbb incl (bad) lret sbb xchg cmc jb sub clc hlt inc add xlat arpl fmuls sub rorl add pop loope cmp je sahf dec add (bad) aad adc mov xchg adc push imul fcoml xchg fwait add pusha xchg (bad) push outsl outsl cld pop mov in or push into out push hlt push mov inc mov mov dec ds insb (bad) in hlt aas sti into cwtl xchg xchg mov popa mov stos dec jb aam outsb in inc cs into dec stos mov cs mov scas movsl stos lock daa jno pop xchg xchg shll iret push mov pop lds (bad) xchg or push outsl stos cs mov cmpsl sbb ret (bad) push int3 data16 stos das pusha scas addr16 pop ss mov inc out xchg mov lods push dec jb pusha test test jp mov mov push in adc iret aam mov push das xchg xchg ss sub sbb mov sub imul push or mov add scas jp mov cmp sbb or or in xor fimull inc inc and push in addl or adc inc rorl mov or sub out (bad) icebp pusha stos cmc in jnp test ljmp pushw sti xchg mov fmulp pop push ss adc in sti out mov js stos shrl (bad) mov xor push insb xor cmc sbbl shr (bad) ljmp lea push arpl imul mov stos int3 sbb in xor pop loope adc dec lock lods loop inc test or fistpll inc mov jecxz pop sbb inc push cld pop pop mov xchg jl push stc sbbl shlb xchg stos rclb jge out mov fidivl loop fistpl push int3 in fidivrl jbe rorl leave jmp xchg push push push lea jle aad ds fidivrl inc stos (bad) xor mov sub inc fistp sbb pop jb mov stos loopne movsl iret dec pop dec pop xor fmul inc out push sti or insb enter xchg cmc and mov push lcall negl lods fcoml xchg and dec and and data16 imull ret cmp push dec pop pop add and lret iret out clc leave pop xchg in mov push (bad) ljmp mov sbb adc add cld imulb sbb es push add jnp mov and aad enter int3 lea adc xor xchg imul rclb insl jl in dec (bad) shrl cmp mov imul stc xchg ja xbegin ror out fistl lods popf icebp dec sub xor xor mov jo cld popa add xchg test into (bad) mov pop repnz movsb sbb adc test andl fstl ja mov adc pop ljmp jns xchg les cmp inc mov mov inc sbb inc and jbe scas nop movsb sti dec ja mov and adc sub (bad) cmp stos or add push mov cmpsl pushf pop xor je adc mov mov push xor (bad) stc sub inc xchg (bad) aad xchg lahf mov mov rol sub mov mov iret pop pop or out enter test sbb push add or aas call subl xchg and mov or cmp aam cmp in mov sahf gs push add test pusha or push (bad) cmp fldt fnstenv int out scas ljmp adc adc fsubs adc dec ja lds outsb out and pop jmp jmp sbb aas shll insl (bad) add dec movsl icebp jb sti (bad) pop jne dec orb jbe cmp pop (bad) arpl rorb and pusha dec aad cmc mov les fnstcw loope pop add xlat fsubrl mov jp les test inc mov imull jl pop mov (bad) not mov cmp sub in jnp sub stos dec test loopne lret jnp fistpl sub sbb push mov inc (bad) adc xchg ret jmp adc mov adc jbe sbb adc dec daa popf pop mov jl les stos jo lods fsubr mov pop sub xchg sub repz call push rep dec jnp lret push mov mov data16 cli inc loop stos dec xlat hlt lcall (bad) imul dec out adc clc repnz (bad) mov jp int test out xor jg popf dec jle add roll adc mov jl movsb dec out jo adc sbb lock or jno lcall enter (bad) fisttp addr16 pop fisttp jmp mov dec (bad) dec cwtl and enter aad sub lret aad dec bswap and or xchg xchg sub or (bad) jecxz test inc mov adc inc mov ret mov jb icebp mov test lret xchg mov jb test push xchg repnz arpl pop fsubl ror push add xchg cmpsl (bad) jbe repz xor xchg sbb into sub dec mov cmp add add add mov lahf rolb fidivr leave movsl lods sub mov test (bad) or jp js mov xchg out sub jle ficompl ja (bad) pop jae inc or jnp lret mov xor cmp cmpsb fldcw fistpl dec addr16 fistl loope jns test sub test into stos call mov loop mov popa dec jge cmc fidivrl cmc xor sti pop inc pop and mov scas add bnd int3 and mov lock ljmp stos mov lods mov push push fisubrl aam pop cmp shrb mov out jl inc jmp mul (bad) std dec addb aaa mov js (bad) hlt dec cmc movsl jno repnz insb jbe push inc fisttpl pop add xor cs xchg loop dec cmp cld std cs (bad) cmp mov fsts loope xchg or cli sub mov jae sub test pop insl mov inc in cmp fstpt inc movsb (bad) rep fwait dec mov mov dec push and adc push add mov inc adc inc cmp mov aad xchg (bad) mov xchg xchg repz lock (bad) mov mov in push arpl (bad) insl popf mov test mov push lret aam cmp fldt mov out in aas clc lret les push xchg fnstenv and arpl pop mov push dec dec jbe sarl outsl fistpll pop loopne sub cmpsl addl mov out mov stos mov adc cli mov loopne fs popa pop in js pop fiaddl cmp imul sub mov dec pop or sub xchg jmp dec je xchg xor ret ljmp out lds jne mov punpckhwd les adc sub sub pop push jmp cwtl imul add mov push shlb inc js xlat pop aas mull insl pop shrb outsl pop xor fnstcw inc es dec lods jne lret dec pop jle lea jmp repz loopne dec sahf pop jb jo enter cltd aas ss xor hlt dec dec psubd jns dec rcrb ds dec or std lahf push loopne dec nop xabort mov cmp rcll or inc push inc and (bad) imulb push cmp ret fidiv in cmp ficom pop (bad) ficomp fild mov mov dec bound or pop test lahf dec ret cld mov scas cmpsl inc inc xchg iret into les (bad) into mov push dec (bad) jp xor cwtl jne and into inc jnp inc sbb xor mov mov ss ror fs lods imul pop jbe mov test loop adc fwait iret fs mov es scas test call or movsl sahf mov lahf imul sti push jge fmuls fucom sbb push sbb int3 leave lret and call pop cwtl loopne jp or fabs lods sbb jne mov aad pop hlt arpl cmpsl imul enter int insl push push pushf fs xchg sbb xchg mov xcrypt-ecb cmpsl dec stc mov cmpsb ljmp and (bad) jo mov fwait popf imul insb pop fcmovb xchg imul out cmp fistpl sub mov lock xchg imul or out pop mov mov enter cli cmp outsb mov int3 sbb cs jne and xchg into or outsl loope mov mov xchg sahf pop jns pop daa fwait adc mov push das hlt cmp cmc roll mov ljmp mov inc or mov push psllq adc pop into dec push cmp jae xor mov ret dec push pop add dec mov pop pushf loope cmp lret scas test lods lods cmpsb mov sbbb outsl dec dec jns add inc jg cmpsb xlat dec push mov xchg rorl jmp lahf stos push jno es aad aam and mov mov fsubs sbb clc out mov cmp push je add cmp ss test pop mov xor cmpsb mov cmp lods jne xor mov dec xchg (bad) push insl cld mov fwait inc mov mov andb xlat push daa bound leave fcomps cwtl pop cwtl mov stos xor push dec cmp ljmp imul out enter cltd xchg add xor and jl test fiadd icebp and dec fidivr or inc pop in repnz dec push pop es lock stos scas movsb movsb mov push inc adc popa lock jmp jg stos notb js mov push push xchg mov dec cmp cmc jg jne data16 cmp out scas adc sub vpaddq push aam lea jnp pop jns call (bad) nop test jbe rorb bound or and or and add pop gs lahf inc xor push js jne pop jge jbe bound adc jno pop loop lret fisubl mov arpl sbb pop xchg pushfw mov jl fimul inc jnp mov stos repnz push cmpl xchg leave dec push pop (bad) ds call mov and les mov xchg push (bad) idivb fs gs das add push jo ficom push test sub out enter pop jae add insb dec insb jo test mov xor fwait sub gs addr16 push cli add inc or xchg cmp movsb mov sbb subl std inc in cmp movsb pop insb and push xchg jecxz ret push mov iret outsb in or jne cmc enter xor push cmp push pushf fisubrl call xchg ja aad or sbb mov in mov cwtl loop xor cmp aam mov cwtl ljmp (bad) cmc or sbb idivl xchg and cmc pop pop daa imul ret ds pop aam loope clc dec or pop adc inc rcrb xor and and pop xchg cs (bad) call sub pop aam sub leave je dec push pop mov in dec mov lahf popa aad outsb sub addr16 cwtl mov or ret scas sahf cmp hlt (bad) dec (bad) xchg sti add sub cmpsl scas dec inc push aam je popf test out mov inc or pusha mov cwtl ret and movsb jg pop push add push es pop ljmp scas test and mov ds fnstsw push sub fimull mov movsl push lret sbb xor mov pop repnz mov dec pop sti sub (bad) stos jne fisttpl or push popf les pop out xchg sub pop pop push test fsubl cwtl lods xchg scas jnp push aad sbb mov (bad) int and xor add cli scas mov jno cltd mov mov (bad) mov pop cmpsb sub xchg push int3 (bad) (bad) or test adc jns pop cs pop xchg mov dec (bad) add ret popa into pop adc sahf imul loop sbb cmpsl lods push enter jl mov loop mov pop xor add cmpsl shrb clc aad int3 (bad) push (bad) mov lds das xchg outsl int3 push int3 les popf jp inc cmp cltd inc lods xchg inc test cmp lret cmc pop lahf into inc lods xor and clc mov cmp fiaddl ljmp das scas jmp pop insl push imul movsl outsl jp xchg push jmp mov inc or cmp sbb movsl je ja sbb aas sbb xlat fnstenv dec fist jge mov orb push push and scas pop dec adc fnstsw ret (bad) out pop rorl addr16 jnp orb cli xchg mov inc cmpsl mov scas ss in in addr16 mov aam mov dec movsb call fisttpl adc insb mov or xor adc les inc xchg sub (bad) pop out pop cld xchg (bad) jmp and or jmp lret popa mov pop in add xchg mov ljmp jae push or push mov inc add das adc in jle icebp pop xchg mov enter andl dec mov jnp push pop stc mov dec or lahf or jle out cmp ds loope cmp inc lea sub lcall and stos jmp data16 push pop (bad) in mov xchg jnp xchg lds mov pop mov or iret ja inc aad (bad) idivb lret lods add je jle lea push lcall or push aam pushf rolb xchg fcomps ja idivb inc clc cli pusha dec test ret cwtl sbbl cmp in insl mov push mov cs lods aam (bad) mov lods push pop jp mov cmp mov fs push adc mov push aam adc dec or inc out jecxz and xchg test pusha pop ds loop ja mov pop pop stos (bad) and das rolb mov dec movsl test push in outsl jnp outsb inc mov dec (bad) and mov arpl mov clc push cmp mov rol xor pop sahf (bad) add lock pop arpl xor data16 and mov daa pop push add hlt pop (bad) (bad) loopne add js pop icebp and cmpl imul or (bad) jae xchg iret sbb add ljmp lods sbb jmp xor push inc sub pop lret (bad) (bad) jle movsb rol pop subb in dec sub or jg xchg adc push xchg je aas push shrb mov mov pop inc push test push fstps pop arpl ja idivb test and fbstp test setge mov pop xchg hlt cmovge stos cli mov stos ja and (bad) out mov scas dec cmp inc or pop mov xchg addr16 mov jmp loope movsb xor fdivrl jb cmp enter dec ss sahf pop xchg xchg std push aas pop pushf test cs pop sub cmp test cwtl and ljmp sub mov sub ret lock mov lret add push and lods enter mov mov dec or mov lods pop or dec out pop leave out and stc cmp mov inc or dec aas stc push xchg push shl gs or out in rolb rcrb (bad) lret fcoms or jp xor pop leave jnp test aad orl pop adc cmpsl int3 test push cld jae lret xor test mov pop jp xchg aad push negb jge call (bad) jecxz outsb sbb xor jb pop fdiv js fldl rcll aad add lea gs inc pop pop cmc pop clc movsl adc cmp and lock jmp sub xchg pop lcall (bad) mov mov jp in jp mov adc fs push fiaddl mov call stos std inc xor sbb mov pop test dec mov push pop mov xor inc stos ret aam cmp cmp jl cmp cmpsl sbb lret cli in mov xor mov sub push bound pop pop xchg lret push enter pop ja xchg mov sbb test fucomip lea jl dec mov sbb mov mov mov mov inc xchg mov push lret and in pop mov push inc mov jae adc mov lods xchg sbb jge inc mov movl (bad) fildl jmp jge enter sbb inc (bad) xor or aas imul js lret outsl imul mov mov test lds outsl push jp add push push ret xchg mov pop fwait daa test jl test jl sub mov (bad) jae ret addr16 repz (bad) cmp (bad) mov jle xor mov push test fcoml out outsl cmp imul aas dec push mov adc dec lods xchg movsb jne rorb pop add sbb mov loope jno mov mov aad movsl aam mov insl rep insl (bad) sti sub adc loop pusha xchg repz cmpsb in sub or push push loop out int3 dec ret pop xor push jo insl push jmp jle xchg pop lock mov das sbb inc in pop test das inc in jge mov xor stc into xchg jp and jge ret pop and jnp xlat clc inc les clc push loopne add test jecxz inc sub pop ds add mov in push jne adc dec inc lods out test inc sub flds hlt inc mov ret (bad) mov cmpsb and jne cs fcom out xchg cmc adc imul mov daa or cmpl cli popf push push mov int3 adc lods bound loopne in imul addr16 addr16 jmp mov push (bad) mov ja mov mov jl jno or sbb fcmovb ds fisub push lahf imul xlat ud1 mov mov sub pop jp icebp pop lret push cmp ja mov push xchg pushf hlt lcall stos jne mov push ret outsl nop pushf push ret cmovnp sbb iret sarl mov out sbb into popw adc pop dec stc repnz in jmp ds cmp jge mov add fimul stos and (bad) cmp and pop test int3 mov add mov aad lds fldt (bad) xchg inc fdiv js push cmp (bad) pop add and (bad) mov xor or mov icebp mov sti cltd xchg ss test inc lds xchg sbb xchg test pop cmc pop (bad) (bad) sub sbb ret add hlt jmp push or (bad) (bad) je (bad) jae cs pushf imul (bad) or mov pop (bad) into cmp mov pushf mov jmp mov xchg jle jnp jle stos and cmpsl push jnp jecxz ljmp loopne in xor fchs int push jno insb mov fnstcw mov clc and sahf push outsl (bad) jecxz das rclb pushf lret push mov lds cmc in (bad) push sbb inc xchg stos inc mov push adc push sbb xorl jnp push into lahf sub cld cwtl lods cltd ret (bad) je (bad) cmpsl addr16 addr16 inc data16 pop cmp fistpll add mulb iret imul add cmp test pop mov inc add add sub sbb push sub push xor sbb (bad) repz notl xlat dec sahf shrb dec mov lcall mov pop iret clc adc fwait mov adc imul add mov sti mov jo pop dec mov inc adc sahf fistpll pop ret inc je insb call cmp add call push cld (bad) movsb test lock adc pop out and mov rcll mov xor dec test and adc xor and pop xlat ret dec adc ret insl aas jnp mov lahf cmp das jnp or xchg add and (bad) fldenv sahf mov dec pushf or idivl cld das rorl dec mov cmp cli sbb mov jmp fidiv add jne adc vmptrst bound das xchg call pop sbb (bad) cli sbb xchg jge leave adc cmc data16 mov daa push sbb pop jg test inc sahf fs or adc sbb jne and (bad) mov dec lea mov jl jmp or jbe aas loop sbb imul xor lea cmp add pusha xchg pop or lea idiv jbe lret js sbb or push mov rcr cmc sub and test dec pop (bad) push and push mov cmp addl adcl je popa sahf pop jno std idiv imulb or stos jae sub sbb in pop pop ljmp les lea cs sub fstpt rcrl cld inc push and mov aas ret cmp xor jae adcl mov cltd js pop das leave xor out outsb xlat imul je mov or jle sbb icebp sub mov dec inc repnz mov add mov enter sbb push mov push test pop pop mov push jo push jbe (bad) xor mov and mov add fwait ret push clc inc movsb mov and loopne aas iret jno xor pop add gs sbb xchg in iret popf ret inc jle inc jmp jge mov movsl scas fistpll or andb push xchg jb dec jns push outsb and adc jmp ror test sbb jo out test roll jge in or jnp (bad) adc outsl lret xchg es jb xchg imul into dec les ljmp cmp test and cwtl adc push pop add mov icebp scas mov push adcl test xor adc mov je mov or mov insl jae dec test nop jle xchg inc xlat and out bound xchg mov mov lret lea outsb fisttpll (bad) sub push cmp hlt leave fwait lahf cli test dec mov test sub cmp out inc mov inc in in fs cs add out bound pop cmp out adc add mov ljmp push hlt or std sbb lea cmpl sbb inc pushf mov cmpsl dec repnz add rcl fsts mov divl ret sub imul mov pop push roll pop pop adc in xchg (bad) sub lahf lods mov sbb sbb sbb ficomp clc pop popa sbb inc mov push jp stos bound jl (bad) jbe push inc cli mov cmpsl ftst hlt aaa lret sub (bad) pop sbb daa (bad) insl popf push mov fs adc xchg mov push push inc lea movsl icebp inc out jb jbe,pn dec call loop,pn or imul xchg cltd jmp stc rol jg stos and mov in adc fcmove mov or ud1 lret mov mov push dec inc fdiv adc cmp mov pop add pop or lret out (bad) repnz sahf xlat jge pop lahf lahf push cmp dec mov mov add sub and pop lahf pop jnp in or and mov pop pop adc add add inc call mov rcll iret xchg mov shll cmp and pusha mov pop iret inc (bad) jae and addr16 lods and pop lahf mov pushf repz inc xor mov xchg pop xchg das add cltd mov nop jbe mov mov jmp mov insb mov xlat push sahf out and call (bad) inc insl mov mov mov jmp xchg fwait dec adc decb in and arpl (bad) inc stos outsl push xchg test ret pop push popa cmp int lds mov jno jp aas add sbb movsl stos cmp jns in push push inc (bad) (bad) pop in and fbld sub ja out and cld push fimul pop ljmp fimul xlat jle (bad) xchg sub push addr16 mov std rcrb mov hlt not jl cltd add mov ret push jno pop pop stc pusha les add xchg push inc push scas add xchg mov fiadd lea in dec adc and sub push jno daa stos movsb ret int3 cwtl (bad) cmp fnstsw fild daa xorl call cmp push mov push stc gs in cs leave outsl cli cmp jecxz adc lcall imul cmp in or jno adc rorb cmp bsr inc stos push adc pusha int3 (bad) repnz xchg push test lods mov sbb add cs cwtl inc and bound jecxz test aas dec cmp cmpsb and or test mov mov xor daa movsb push mov fldcw mov insb mov or sub mov or popf push lods cmp (bad) inc and mov mov sbb cmovo into cld jae cmp out call addr16 cli cmp les dec cmc push imul movl sbb pop rcrl stos mov rcll inc in or pusha push mov (bad) xchg add (bad) nop out jle cmp mov dec pop dec mov test notl sysenter es dec jae push dec inc (bad) xor cmpsb pop enter das cmc inc mov lahf rorb out lods jg push mov mov sbb jmp and mov xchg es add xchg cltd add push mov aad pop test outsb mov dec cwtl fldcw (bad) fimul inc sbb (bad) and or aam push fstpt loope movsl pop or scas gs pop and xor lds xchg xor fldl cltd dec fidivrl call mov loopne lret and and sahf (bad) movsl into xor out arpl outsb pop fistpl jne bnd jge lods add neg or inc xchg push aas and std pop enter inc std std mov push jae mov and mov cwtl popa movsb aad sbb or mov insl ja test or lahf (bad) rcl imul enter mov sbb (bad) les pop repnz mov dec mov xor in sub push sbb ror lods dec push mov mov out xor sbb outsb jle push ret les iret popf test inc test lds (bad) jecxz push xchg jp sub jnp shll add sub (bad) fiaddl xchg pop cmpsb pop push mov mov add xor mov cmp jmp lcall dec cld cwtl outsl cwtl lods scas add lea sbb xlat fdivrl jb cwtl jp daa mov (bad) fadd jp mov adc outsb daa pop (bad) mulb fwait xlat mov repnz cmp jmp xor xchg or orl xchg cltd clc dec dec xor cmp jo push cltd fistpl inc rcll sahf scas cmp mov ss mov stos jno addr16 mov and xor adc in and jmp jae xchg sub dec jb dec push jae clc insb in push cltd repz or adc (bad) jmp (bad) lcall lret (bad) mov xor adc cmovo pushf out pop popa push push cltd enter iret movsl lret dec loopne xchg int push (bad) pop adc and jmp fsubs popf arpl cmc test pop (bad) pushf mov jp pushf ja mov dec outsb jmp add mov (bad) aaa scas push lcall rol jns pop xchg mov mov jle lds xlat jne insl shll sub out add ret scas cmp pop pop dec or jo xor lahf sub dec mov daa repnz in les push adc pop xor mov xchg fstp cmpsb xchg lret imul in xchg enter imul jbe pushf mov das loop clc sar and mov in negl push mov sbb mov or mov pop in fldcw sti and dec rcrl movsb shrb inc push push in je xor pop outsl div xlat dec push aad ds jg mov sub dec and test mull aad jmp (bad) jae movsl (bad) cltd dec add out pop xor sub push push or mov ficomp popa lcall cld in inc (bad) je (bad) aaa leave dec rorb cmp cmc add cmp mov aas dec pop mov popa test adc and lcall lods dec or mov clc cmp mov ja lods ss or mov cld inc xor sar lahf fidivrl out inc sub xchg xor sub stc pusha add pop cmpsl in das js in push mov stos jl (bad) push shrl jae ret cmpsb push sti sub test mov push jp jle sub or inc pop mov and int3 movsl stos test sbbl mov aaa jne push sahf cmc rorb mov mov add call test sbb sbb ret mov or shll dec xchg stc jecxz pushf pop mov sahf push ljmp cltd xchg movsb fwait jp pop pop js,pt in dec xor and loopne mov lahf cltd add dec fldenv inc out loop cmpsl dec ret sti cwtl imul sbb jbe mov add jge test xor (bad) stos xlat jb,pt imul mov push mov cmp xor mov cmp mov ds test lcall pop pop adc sub cld test fiadd jno mov in pop popa jp inc sub (bad) out aam mov pop (bad) push test push pop pop push xchg js cld cmp mov into mov pop xchg xor and ret je,pt sub xchg in mov clc pop test outsb shrb js lods repnz (bad) jbe icebp in ret (bad) repnz jge cmpsb into inc hlt stc sahf jl pop nop fsubrs test mov fmull test add cmp adc xchg or sub popa dec or mov push stc ret inc in jno xor rol and jmp ja jne loopne pop inc ja push mov pop or push xlat mov lret popa jb add mov lahf cmp mov adc mov and pop sub ficom xchg (bad) push (bad) mov sub test bound or mov test or sbb das enter sbb mov jns mov negb es adc dec int (bad) cld pop push cmp je cmc push push mov lea pop jge,pt sbb in rcr mov lcall addb dec rcrb (bad) icebp sarb add lret lock loopne xchg negb popl push push nop jmp xchg loopne cld push nop lret rorl ja loop or or xorb mov xor stos xor add movsl sbb int3 jae cld lock jo add lods dec or popaw and xchg enter xor stos dec bound cmc jb xor outsb addr16 jge xchg add mov icebp imul pushf inc push outsb scas add dec out fsubrp (bad) popa sbb cmp xor hlt fiadd xor and inc and or insl and ret xor test jmp pop popf sbb mov xor pushf fistpll jbe dec xchg add cld outsb mov cmpsl enter in dec sahf mov cli call xor jecxz jl mov mov pop add jb ds sub into push test stc sbb mov cmp incl inc enter jle es xchg cmpsl add nop pop ret fld test leave call lahf imul pop mov jno sub lahf mov pop psubusb cmp cmp test aaa inc lea js push out movsb cmp sbb sbb daa push das ja cld or addr16 shrb add cs repz cmp lds aam mov insb fdivr cs dec add arpl adc stos mov mov pusha out lcall xchg in sbb dec sbb xor ljmp repnz cli inc push imul jl sbb adcb and rorb or mov add mov repnz mov ljmp mov xchg imul gs insb or push xchg mov dec or cmp nop cmp jno iret icebp adc mov add out mov clc xchg lcall daa sahf jp insl pop lret add outsl outsb xchg jno cmpsb or jl in push or sbb stos lods mov inc mov inc jae sub pop or outsb gs into dec dec mov fdivrs testb dec js cmp jp mov lea push loopne mov mov loope lret iret xchg dec test sahf sbb in mov pop cmp lods clc lock mov outsb mov cld sti pop mov ja mov arpl push jo ret insl repz cmp dec cmp les sar add repz and xchg loope xchg insl sarb lock xor inc xor in mov jp dec cltd das cmp and (bad) negl daa punpckldq xchg mov lret das and inc out sub dec fbstp insl fwait pop mov lds sbb push cmp aad (bad) shrl movl or dec je jp push gs add sub pop js rclb test jg insl push push das push rorl jmp mov aas pop popf and idivb xchg loopne push insl mov jle test cwtl orl fcmovnb sub push jecxz dec mov into shr sub dec pop mov push push pop mov cwtl fdivl insb xchg imul scas pop pushf adc mov notb arpl mov dec aad mov es sub jns cmp or adc pop sbb fsubrs mov push test notb loopne test into add stos in mov mov xchg jge pop dec add ds fisttpll bnd or or call adc aas sti or cld cltd stc aam out scas mov xchg ret dec pop lods push xchg and (bad) pop testl cs adc cmp sub xchg aas xchg pop add pop sub into movsb call (bad) hlt psrlq jmp mov fidivr or adc (bad) xchg xlat xchg fcoms jle mov mov jbe dec outsb stc out cmp jge ret push and jne adc popf inc shrl dec push cmc push jno clc or (bad) adc sub jg xchg inc aas fmul xor in sbb test or rol and cmp in mov or adc sub in aas leave xor or xor in and mov lret or push idivb or cmpsb mov insb pop adc clc (bad) loop rorl subb stos sub mov sbb imull jne aad cmp jecxz loopne and sahf daa jnp aad lret mov ss faddp notb xchg imul mov lcall loopnew cs nop cmpsb popa adc icebp lcall js (bad) sub lcall (bad) jge mov ljmp icebp xchg mov cli pop jne (bad) sti sub aad adc push jecxz loope inc aad inc jmp cld jl insl inc push sbb in or je mov jbe ds icebp and fidivr dec jne sar adc test notl xor sbb xchg ret lds jle insb out sub (bad) std sbb aad sub js lock fstpt and cwtl adc jmp pop out mov mov jecxz mulb orps cmpsb mov test idivb sbb pop jns xchg inc imul pop push mov mov push mov pop mov ret sbb and mov or push aaa (bad) push bound mov sti mov pusha mov lahf pop mov gs xor ficomp add pop jo ds dec jmp xor adc mov (bad) ljmp inc dec in sbb inc mov sbb int3 pop insl (bad) test cmp popa call (bad) fdivr or pop scas (bad) mov mov adc sbb test jg xor cwtl xchg cwtl mov clc fidivr lret into (bad) lods pop mov cmp mov jecxz (bad) out push inc (bad) xchg adc xchg pusha mov inc sarl aam lcall testl ss xor add scas jbe and icebp adc mov mov pop jge or push sbb jo push adc aad movsb pop fwait xor jno sub dec shlb mov frstor das test dec sub sub adc es das lea lret dec pop push addr16 fnstenv xchg insl sub rol jo cltd stc fwait das sbb cld out jge hlt shll and push shlb xor xor arpl lcall or pavgw pop in fcmovnu call in icebp mov jb jnp lock jle jae nop add jb je pop cli xchg out add sub dec cmc arpl jmp repz dec adc int xor ss std sbb std add out mov ss push xchg bound pop adc cmp pushf mov inc dec push ds cld adc xchg add xchg mov sub out fmull push pusha inc sbb mov call stc dec inc and insb pop adcb pop loope (bad) out add repnz (bad) sbb lret push les movsb pop (bad) xchg iret fsubr rcrl or into ret btc aas jns mov (bad) paddusb sbb test movl xor data16 sahf push pop mov scas scas mov mov enter mov call mov mov test cmc xchg fdivl sbb adc mov mov pop (bad) pop pop mov xlat scas mov into and in fisub pop insl sub mov in pop push das xorb lahf jmp rorl mov sub add mov cwtl pop cmp ds mov pop xor fcomi or outsl out imul iret and pop jecxz xchg sbb mov fdivs adc test push pushf push lds fmull push lea ja pushf cmp jnp inc xchg aam iret jb mov test mov mov pop fldl add insl das into fbstp test inc sbb movsb loopne xor adc push push rcrl out scas and lds in jmp ljmp es leave adc push cld pop lea ret lret jmp imul pop jl xor xchg push std loope jbe cmp add xorl stc decb ret jo sub xor movsb add mov stc sbb adc pop add repz or ss sahf (bad) out je sbb xor pop jmp or inc pop inc add jns and cld cmp push ficom lcall pop or loop cli or imul sbb sub pop mov lock xchg ret imul test pop xor mull lcall cmp std fmull push xchg (bad) xchg test incb xchg into inc daa cltd loop mov mov int sub sub outsl mov les sub pop sbb (bad) or rclb fwait jmp and les and or push and add cmp int3 lock repz (bad) in inc fs leave stos xchg pop shlb push pop bound int lret dec and push inc insb sti mov sub or in bound xchg fisttpl or in jae leave push sti xor inc idiv jb loopne jbe push add je pop (bad) jp cltd or jg lret ja dec rcrl imul ds jle addl inc inc clc lods std das pop test repnz jbe ljmp jg es or mov stos iret ja push push mov sbb sub xchg pop inc dec loope dec incb mov push jecxz cmp adc xorb es xchg pusha data16 test or pop jecxz int3 push fwait mov sbb add mov ror clc mov imul cmp test jp in push out sub push fimul cmp (bad) push or bnd sub mov push pop xchg ss xchg mov stc sub jle pop nop int3 add mov sahf js out xchg out xchg in cmp (bad) mov arpl sub mov mov mov enter jns ret outsl int3 stc add pop xchg push stos test mov jle lods fimull testl cmp cld in clc leave pop ja or sbb cmp inc sub push jnp sti pop cmpsl rcl mov test int (bad) outsb outsl pop mulb es xchg aas jo ds and inc cmp sub xchg jp xchg mov dec dec lock imull fsubs bound dec add push mov les int fisubl pop cmpl aad xor dec aam cld dec rorb xor xchg xchg dec jo jns inc mov stos punpcklbw in mov mov inc daa es test js mov pushf cmp adc scas movsb mov out adc insb (bad) or cmc add pop stos pop fld insl (bad) and jne ret arpl mov movsl jne sbb into ds ss jae inc push (bad) pop or lods pop xor cld sub icebp mov loopne or jb popf add jnp int lret mov push out insl push faddp push mov xchg or jge push ret out popf fwait subl push (bad) stos or mov (bad) mov jnp fdivs inc (bad) jmp (bad) mov cmp xchg insl or push push js xor inc (bad) stc stc mov and dec bound lds sbb sahf in or xor aaa pop insl push push and cli lods (bad) mov gs pop shrl jle imul (bad) sbb jge sbb clc inc sahf mov pop fwait inc arpl and call shll mov addr16 mov inc pusha xchg cmove pop cmp insl mov addr16 mov (bad) or arpl iret push adc roll popf out push push fwait out repz and in pop xchg lret mov mov inc or lcall sub cld in loop lret or rclb inc iret fnop sub imul bnd mov sub inc pop inc dec inc (bad) mov inc mov lods jo cmc stos xchg or rcl push and cmp and leave (bad) pop cmp or in push adc test movsl inc in dec in sbb fmull push push shrb adc add out popf lock orl imul fiadd nop das fbld jbe scas dec jmp gs les xchg mov pushf mov jg inc sub push (bad) sub xchg dec imul rcr sub popa addr16 cmp lds pop sbb xor inc and xorb push stos cmpl jecxz and loopne mov push mov adc add pop push pop xchg scas and cltd mov aaa insl mov bound or outsl aam stos sub mov int3 push sub icebp (bad) pop adc xorl and inc flds rcll add mov insl loope,pt mov pop (bad) sub dec mov sub xchg dec xor test jb lds pop dec scas loope ret cmp lock ftst jle test pop cmp movsl rolb ljmp cmc (bad) jmp fsubrs cmp jns mov add push xchg push jnp repz sti test add fsubrs test loopne icebp insb xchg clc lahf ss cmp imul daa push out mov orl pop stos (bad) xchg (bad) in (bad) mov (bad) (bad) into cmp dec daa std adcb mov or rcl push and orb ljmp xchg mov push (bad) xchg scas jmp in test leave lret aas (bad) adc arpl cmp lods roll mov int std insb sbb add mov sbb dec jl xchg in mov pop mov outsb ljmp xchg ret mov lea aaa mov (bad) or mov jmp cmp ret enter mov outsl fdivl jp adc push sub (bad) pushl ja div xchg sahf xor xor imul lret fsubrp inc fmull push (bad) fwait cltd movsb ret cmp shll xchg stos sbb xor addr16 mov mov inc dec sbb add and add cs pop mov outsb icebp fmuls leave fmuls inc ss ja mov es pop stos jl pop (bad) out mov out xchg mov or xchg shrb repz pop mov mov mov ljmp cmpsb push xchg xlat push rorl jg and fist sub das jg,pn sbb lods push and es sahf xor (bad) sbb imul push xor mov push jno mov dec push mov inc rcll out fimull and or mov or ja push loope inc outsl insb (bad) out int3 and mov loopne jl mov xor sub daa jge movsb inc sbb je aaa into cmpsl and and mov mov fsub or repnz (bad) xor mov or adc cmp je jg push and jno xchg xor loopne mov pop xor xchg xor movsb clc out fidivrl xchg and xor push imul push cmp out sub mov scas jmp test (bad) mov stos or mov loopne jo stc pusha (bad) cmp fisub pop outsb lret xchg mov sub stos mov lcall lods cmp roll sbb in (bad) mov jp ss pop mov mov mov jmp or out (bad) mov push mov (bad) or nop dec inc mov pop xor iret lret inc fimul sbb icebp je cmp jl dec adc cmp inc data16 outsb push loopne mov stos inc xchg cltd mov mov mov ret push ljmp out lock dec movsl js ljmp jbe mov icebp jo sbb lock sub jmp mov sahf adc dec adc mov and or roll mov pusha lret xchg shlb test sub call (bad) jno dec iret lret aas mov jae mov jb ss pop sub jge aas xlat xchg fidivr bound sub xchg roll lods js,pt mov popa add jmp andl ds std leave jo inc test dec das xchg aas fidiv shl push lds dec inc ss xor xor mov ljmp xor adc jg sahf push pusha out xor and test xor int3 push std fcoml push mov adc movsl or push adc enter mov push (bad) jo sub pushf loopne aaa mov jp jmp cwtl pop jle jge pop jge adc bswap sahf cmpsb fldt out sub movsl and mul es loopne jns (bad) lcall sahf push mov repz outsl dec mov add mov mov lcall mov xchg insl stos add mulb adc add cld test push pop cltd rcrb cwtl outsb ljmp jg outsb mov mov shrl inc scas js jge inc scas mov and sub add cmpsl xchg xchg mov pop pusha pop das aad (bad) jne push iret sbb push pop lods adc xchg xchg ds test inc sub stos mov ret nop stc sahf adc or and shr or push inc sbb mov (bad) mov ffree aad in pop hlt mov sarl mov sub mov jo mov add mov mov stos pop enter mov xlat add popf dec out ds jne jmp pop xor fwait pop xchg jge insb xchg mov fdiv (bad) push push scas sub jle lods add adc (bad) int pop pop or sbb mov lods push xor shl loopne fidiv push mov mov xchg sbb xorb enter dec push adc cmp pop adc jo mov lret insl mov fwait sar adc or sub dec (bad) (bad) outsb insb je out cmp mov sbb xor jg punpckhdq movsb addr16 adc dec fildll sbb dec mov cmp pop or xchg push out dec adcb (bad) icebp (bad) mov jo xchg jle xchg inc popf aas dec inc testb mov fucom cs fcoml jg ljmp daa jecxz pushf rorb jecxz lods mov roll mov test mov xchg outsb mov cmpsl cmp xchg mov sub cmpsb out stos or (bad) into lods mov test adc and aaa popa out popa xchg jle cmp out add (bad) out mov push jnp std in add mov adc lods scas in frstpm(287 adc pushf jecxz iret out (bad) mov jno mov jns adc lods and (bad) xor enter adc (bad) fadds pop jns push push or fwait adc and lods js movsb xchg and mov mov (bad) sbb imul and (bad) xor stc pop leave scas inc xchg jmp mov push inc stc inc dec push jno xor or in aad sbb or mov lahf inc stos add into aam pop push loope sub jbe insb aam dec or jmp xchg dec pushf inc mov int ljmp nop pop jnp cltd nop sahf sub xor sub pop fwait mov mov mov jp andb outsl jno loopne fldenv sbb mov mov stos test mov stos lods mov and in iret push push scas lock movsb xchg push in out xchg ss xchg cmp flds shl sbb sub inc adc adc outsl inc or mov rorb push mov inc jmp out mov cmp dec leave faddp push xchg sub and push ds cwtl mov stos sbb sub loopne jge pop sub inc sbb fcmovnbe mov out data16 fcmovnb push adc jno stos mov sti cli push mov test outsl and sub jne xchg jae mov xor and lret and and jne sub fisttpl sub das push popf xchg sub and cmp push fstl cld push into and mov nop call or popf mov (bad) mov int3 test jp pop mov cmp sti xlat pushf into mov adc add push out fstpl sbbl popa ret sbb add fisubr sub sub call jne int3 sub inc das jb cmp xor ljmp fmuls cmp imul cmp andl and rorb iret xchg pop cld lods loop mov jmp sti test jb fs sbbb or insl jno dec inc std dec div dec aas inc mov adc dec aad gs insb adc and (bad) mov (bad) mov ja stos pop iret icebp sub in sub xchg cmp scas and outsl js adc int sub adc in insb cltd cmp in in xorl push outsb (bad) out mov fnsave or add incl sbb (bad) test push loopne inc scas inc pushf fwait dec bound cmp out add faddl (bad) pop pop mov lret adc xor or dec mov push pop jb dec punpcklbw cwtl dec test aam sti incb nop pop rcr loop inc fstl sub inc test xchg mov decb and push test popf aad iret push ret sbb mov pop fsubrs imul adc scas sub fisub rorl inc mov jl pop add js pop cs dec out (bad) frstor inc (bad) out sub mov pusha inc pop xchg dec and jp ds mov jecxz xchg mov mov and adc or push push popf pop int (bad) mov in jnp mov (bad) push add sub pusha into mov pop xor jge imul aam out push push cld xor insb test vandnpd les aas outsl jne mov adc jp push icebp mov mov nop loope mov mov xor push (bad) push fnsave sbb sub and mov pusha fmul mov adc push jnp mov jo xchg xor sbb sbb xor movsl in mov dec sub adc in data16 fbld popa xchg sbb lahf pop adc mov ja lret fistl mov frstor hlt xchg cmp nop xchg (bad) ja (bad) imull int push rclb sub loop pmuludq jge mov mov jg or xchg xchg es add je lock lock mov pushf or mov mov sub fbstp xchg out or xchg push cs add (bad) cmp or fdivr adc adc fwait mov mov push int pop push je add rorl sub dec cmpsl test (bad) out dec test aad xor jbe add jmp push push fs arpl dec jno cmp jo cli out fucom mov lods sub xchg outsb aad shrl mov adc cmp xlat jns dec adc xor (bad) movsb push js sti jg dec in js jmp lods cld adc add (bad) cwtl or sbb and stc lods leave and mov frstor (bad) loope adc cmp push xchg cmpsb loop add fs push jae cwtl jns xor jmp xchg adc mov shr push enter sub aas lret les and or fwait and icebp mov push aam lds sub cmc movsl cmpsb in inc or mov and bound push mov dec call fisttpl add inc mov rorl add rcrb add jl jl rcl mov (bad) in sub add cs into aam fmull (bad) rolb xchg push mov ret bound mov es stos scas (bad) lock mov aad imul nop add out lret (bad) dec stc push dec jbe stos adc test or mov lahf dec aaa push (bad) scas dec movsb sbb mov sti pop push rcl jmp push jmp inc and pop cmp and imul out sub push xchg fcompl ja or dec or rcl dec mov mov mov inc push mov out pop (bad) or (bad) jecxz mov repnz add test mov and add jle adc and loopne rcl aas mov rolb cmp dec (bad) jmp addl sbb and push ljmp sub mov adc xchg iret add ds inc cs push leave idivl mov ret mov dec mov lret pusha shl leave add fldenv mov sahf and or sbb push xor mov (bad) daa lods sub jne adc js sbb pop (bad) xor scas sub movsb xchg add fsts shrl dec push outsb pop push js mov (bad) stc cltd xor sub fiadd mov add pop adcb cmp push push xchg jo ficom sahf adc xchg rorb rcll lahf negl mov jge mov or cmp lcall adc dec loope add sti and lods sahf aam and sbbb and jbe,pn push mov pop popf insb lods dec xchg mov jnp cli adc inc leave mov and popf icebp push pop xor push aas nop ja and lcall push aad rclb or xlat cmp inc pop mov cmp and inc mov push push stos cli jae xor pop xor data16 loop xor jmp incl test adc cmp out js fmull jno adc das and xchg xchg jge mov repz mov int pop pop or shrl add loope and xor mov mov insl andl js fwait mov mov xor jl es cmp xchg fsubrp lret ret aaa push dec js enter sbbl mov sub pop jecxz jge test fisub scas test mov movsb pushf and cmp cwtl push test movsl (bad) ficompl push jmp mov sub repnz dec je push aaa or mov jns lds mov add lods outsb fs lods xchg xlat jno jbe stos pop mov mov dec adc repz std sub loopne or stos jle cltd sub outsl in xchg scas out add sbb add pop mov add fwait lret lea gs push (bad) dec cli imull lret add xor shr add dec cs inc lods (bad) cli leave pop scas jmp repnz jg pop push mov sahf aas fsubs rcrb test fisttpll in sbb imul lods push mov mov mov mov cmp (bad) fild adc dec pop mov mov lahf push mov sub dec fisubr iret stos push xor xor mov or stos lahf or fs jmp or mov int3 mov cmpsb das sarl aaa cmp je cmc cmpsb ss shr and test push mov movsb mov rcll (bad) sbb adc mov sbb pop cld pop xchg or movsb pushf lcall (bad) int3 cmp sbb lods mov int3 fbstp stc mov xchg and mov lods sub push cmp cmp xchg sbb cmp jno test or xchg lret mov fwait test inc sti out loop mov push adc cmp paddd jns xchg aas ljmp pop fdivrl movsb pop cli dec repnz stos push jno sahf cs loope pop loope lahf and outsl (bad) xor pusha mov mov rol js lret insl rcr aaa xchg scas shlb cmp sbb sbb inc xchg out dec gs std nop push fdivrl mov flds pop mov popf pusha push cld sahf cwtl xor fistp leave (bad) jb je pop mov mov lea push mov lods test xchg xchg sbb cmpsl stos mov lahf adcl mov push test add jno aam pop movsl mov jmp icebp pop rcll clc jbe dec stos mov ss (bad) into inc test pop xorb inc mov inc sub add push lods test stos and pop sbb call cmp lahf add outsl mov jle mov and lock cs lcall mov jae test ds dec insb cmp push stos stos push test lods jo loope outsb dec jge push push loop mov and mov push imul sbb (bad) imul (bad) or outsb ficomp pushf jecxz (bad) adc inc add ljmp push jge outsl adc and push int3 daa (bad) jp aaa lods rep mov psubsb cmp cmpsl jg sbb cmpsb scas sub pop xorl cli pop aaa in jns mov push push jne mov add jmp pop inc adc mull xchg imul lea and xchg add in test sbb cltd mov sbb jae mov mov push mov or cmp jg mov insb and (bad) out jmp cmpsb test sbb in inc jle xor mov push cmp or pusha pushf push push pop lret pop (bad) aas aad cmp pop jg scas push sub inc ror jp lret mov cli (bad) mov gs in std add dec orb lods xlat lahf adc or mov nop add aam (bad) into repz cmp roll hlt mov xchg gs pop hlt lods cmp xor mov ds fcoml pop (bad) mov jge jne push outsb jno dec jmp ja or push dec dec dec js pop enter (bad) push lds cmp into rorl sub mov sti mov cmc mov lea cli sub out pop ss cmpsl xlat shl push add adc (bad) aas pop pop dec and in cmp dec into fmuls jns out xchg pop (bad) stos jp rcrb in xorl push lea mov sar int call sbb ss pop jp incl or add xchg jnp cwtd stos clc fwait addl or stc std std xchg imul jnp les dec or xor push pop imul ficom sub pushf out add out js add fwait jle mov inc add out popf pop inc popa push sub xor xchg adc mov and and jle sub add test dec jge test jg pushf mov je cmp insl orl pop movsb jbe sub push jb pop cld mov lcall (bad) out ljmp push pop xchg pop jo push aad sbbb addb stos and mov scas cltd mov stos add add inc das test and xchg imul add cmpsb cmp mov aam jmp aaa aad (bad) cmc test or mov stos aas sbb iret aad (bad) push flds icebp (bad) rolb stos in inc rolb pop scas es addl sub xor sbb sub je fs (bad) mov inc and lods adc mov addr16 add jmp cmp jnp in push notb jnp shlb push or leave shlb and or jl jbe jge,pn in mov es aad rcrb jae push test in sti nop clc inc inc int3 sbb dec popf lods lret jmp (bad) fisub sub rcrb cmp fwait mov fimul popa cmp sub mov shlb xor cltd inc inc dec push pop inc popa mov xchg ja jecxz add lcall mov pop push lahf sub dec xor fcoms fist repz test lret leave (bad) fs jno lods (bad) icebp cmp mov dec dec mov or ljmp mov mov lret incl adc or loop (bad) fsubs fwait and mov mov leave xchg mov jno push mov xor push jg stos inc movsl xor fnstsw xchg pop (bad) push dec push sbb dec dec or (bad) dec and int stc sbb cmp icebp out ret dec shll inc dec jne inc xchg lock pop ss inc in mov in andb mov fsubrs ljmp sbb (bad) jmp push je call pop or or jb jbe jb je decl dec stos mov xchg inc (bad) stos cld cmp or mov (bad) inc pop lidtl lods adc mov scas loope ljmp popl pushf hlt sbb outsb adc jo cmp out sbb sti lock push dec and movsb imul xchg fwait ds add cs mov push bound sarb ret push mov fisttpll mov and mov push xor or mov mov int adc ljmp dec adc movb movl dec out xor nop lret clc mov ror mov pop xchg pop push sub push pusha sub push das mov lods dec ficompl mov sbb sbb mov add ss popa and xchg or roll mov aam xor and enter aaa dec adc mov cmp mov repz fstl mov jno (bad) negl push jle sub cltd jp aad das push je add movsl inc mov push dec sbb inc stc (bad) test inc ss faddl aas mov hlt push sbb aaa xor sub in push or iret fs mov dec xor icebp pop fs lds lods dec mov (bad) mov dec add js adcl nop cmp and lds inc fiaddl negb pushf push xor xor cltd ret jne jne mov out sub mov cmp popa pushf lods scas mov fisttpl cld fucomp es lret xchg cmpsb fwait push pop xchg nop mov push mov cltd mov lahf push xor (bad) ja imul adcl lods fistl dec (bad) shrb stc jmp cmpsl test jle sbb ds push insl mov mov pop sub pop mov (bad) or scas aas fmuls lods stos mov mov loope (bad) adc cltd stos mov mov lds xchg cmp les cmp push out pop xchg aad int mov adc sub mov popa cmp mov or shlb movsb test cli repnz xlat jg test rolb clc pop cmpsb pop test inc int3 imul mov test bound fldt pop mov or xlat adc push mov je scas (bad) xor xor aad out mov dec mov xor push loopne iretw pop fnop xchg inc add pop mov mov aas std leave sub mov popf mov sub pop in stos pop jmp adc or scas sub in mov jecxz stc in addl sbb out jle mov loopne or add popf jo push aas int push loope cmp sbb mov nop jae inc cltd mov sarb out (bad) sub daa and sbb pushf dec addr16 push test iret cwtl rol mov sbb leave adc add (bad) (bad) or cwtl fsts xor push test pop pop mov (bad) lret xchg hlt jmp ss lods ret in repnz fninit mov iret cmp or jbe js add cmp jns fiadd sbb push out mov outsl push cmp movsl dec mov cli sahf out push push inc sbb push lret sti lcall push lahf lock add push inc xabort in sub dec dec std xchg divb mov push cmp idivb out push pop ret pop push xchg fwait mov popl in jmp pop dec (bad) cmpsb push jmp sahf push (bad) es and inc stc leave cltd shrb mov xlat ja sbb mov int lods sbb push sub loope sbb lds test jo mov js leave jge pushf shlb rcll pop in add popa pop mov cmp sub sub imul and xor add cltd cmp cltd popa pop jb test sbb mov mov (bad) xchg loop mov jmp int3 and jnp jmp mov icebp xor sub add pop lcall pop cs mov aad add push sub inc cli into ja xor inc adc cmp daa out je (bad) jbe fild xchg and cmpsb mov stc add cmpsb jnp (bad) fstpt inc std dec xchg pop ds xor sahf adc (bad) sbb push cmp lods iret mov mov mov ret ljmp decl mov xchg cwtl push push aam ss (bad) (bad) jbe ja add xchg lock daa pushf mov (bad) xor iret cmp mov and jb idivl sbb mov xor stos fwait push inc (bad) mov insb push cmp daa and cwtl push add xchg cmp dec bound xchg sub sub push sub mov xchg xchg fld out je mov fist push test xchg jnp and ret sbb dec outsl cmpsl addr16 lret jb mov inc sub cmpsl cmpsb sbbl loop add mov cmp je cmpsb imul insl scas jo xchg mov jnp push lahf lret inc test das mov out jg in aad insb push mov or lret pop add outsl jl pop notb and mov mov adc mov sti jbe mov sub and pop sub aad (bad) outsl mov add out idivb cld jle cwtl add cltd (bad) std (bad) mov cli fwait sub jle xchg imul pop jne xlat push mov jno insb cmp mov sti ljmp pop int3 addr16 pop out pop pop sbb adc push arpl loope xor pushf dec xchg loop call repz dec les lret pop jle mov daa push out loop push xor push cmc sub test xor add xchg sub jns es fistpl sub push cli inc dec inc pop enter jmp ss adc add add adc xchg dec sti movsb mov push cmp stos fidivl ret cmp lahf aad aaa decb sbb xchg pop insl jecxz xor add dec dec in les or fisttp mov (bad) call addr16 test call ds pushf bound dec bound push arpl push outsl stc fisttpll inc test cmp or out pop scas fwait push in jg sbb jle addr16 lods aaa cmp gs push (bad) cmp sahf test mov jg in outsb enter add cli cmp xchg test pop sub lea cmp gs (bad) inc repnz in jecxz imul stos jl cmp stos push das pusha leave negb pop nop add xchg (bad) popa lret arpl mov in imul and or out mov inc push fnsave shlb dec mov in pop adc clc mov test pop sbb imul shlb xchg divl pop adc out push repz call pop mov in xchg xchg add adc out jge and xor loopne insl imul sbb sahf hlt lahf sbb pop ds je and insb int3 lahf push mov add push and cmpsb or call dec dec sbb cli jle cmp lret adc loop sbb mov imul fs ds jmp mov sbb mov out pop mov test int3 pop dec push push lcall ja cld andb add mov mov mov sub cmpsb movb sahf pop sub out int mov jg test xlat sti pop xor lcall int data16 je pop fnstenv loop out int mov sub fcomp insb (bad) lahf in pop (bad) lret sahf cld lret mov pusha mov inc cmp jle test pushf mov pop or aad cmpsl mov rcr xchg inc dec pop dec daa adc xchg mov cmpsl mov in nop xor sbb push dec fisubrl jge jl sub test jno push xchg and jb cltd lock arpl xchg and mov sub into xchg lds xchg sbb call push xchg adc cmp sbbl (bad) mov adcl int mov fisttpl sbb and mov and inc push inc dec dec sbb jecxz sbb ljmp mov lret or push (bad) mov aaa aaa inc add lock cmp and jecxz mov cltd push or in bound mov fwait mov lret xor push inc cmp pop jo mov jno cmpl adc inc in sbb inc jb push out loopne hlt cmp es stc ljmp cli ljmp add pop test and fcomps cmp and push pop mov sbb in dec xchg loop imul and (bad) (bad) (bad) jl dec lret jae nop ret xor xor clc xchg dec jnp pop xor jg out movb pushf imul lcall call add adc jb sbb xchg out ss push int pop push lock inc imull xchg cwtl push test lcall movq cmp push cmp push mov icebp push sbb cmp (bad) or and xor je int3 sbb (bad) ficom adc pop int3 movhlps jbe jb sbb mov mov xchg inc mov sbb xchg das cmp out std in cwtl push add pop test sub fldt cltd mov (bad) and jmp fwait xchg xor outsl popf xchg pop inc mov inc (bad) aaa sub into or and adc int mov insb (bad) dec shrl pop and fnstenv xchg scas cmp rcrb dec shll and xchg cmp pop adc repz in jg xchg jo xchg out sahf out fs cmp cwtl mov cmpsb xchg mov test push mov loope sti pop ja jl lret fs cmc pop out (bad) (bad) mov sarl cmpsl hlt mov int3 idivb into rcll sub cld (bad) sbb clc mov psrlw pop out jmp and iret nop pop shl in inc (bad) add in sti xchg dec movsl icebp addl fwait out mov and aas sarl inc in or ds test popa mov aas test jne dec popf mov pushf insb jns adc ret cmp pop cmpsb cmp inc pushf loope dec and jmp or adc pushf mov mov lds lods loope cld xchg lods cmpsl aaa movsl xrelease iret jg push mov dec push adc cltd leave sub inc lock sub lods ja mov das push rol ljmp aaa sub lret sub inc sbb jg mov cld loopne (bad) mov cs aaa push test in jge mov and push es mov and loop sbb pop mov mov lods mov shrl and fbld pop sub xlat lods lods sub xchg cvttps2pi push insb popf clc sahf cmp gs push xor test xchg addl add or push mov mov mov xchg add ret xchg xchg sub movsb icebp enter mov xor cmp sub xchg xchg lock dec cmp jno dec loop rcrb sub addl dec test pusha ficomp js enter push dec sbb (bad) js adc nop pop jmp repnz and fmull inc and js mov lds push or les cmp cmp mov scas rcl mov jmp adc sbbl rclb repnz outsl xchg loopne pop or jle or and (bad) jge je lret xlat mov test int in inc (bad) out iret add inc push jle cmpl and movsl cmpsl xor cmp cmp cs mov or enter cs ja fildll (bad) mov or mov movsb lret xor add (bad) (bad) jmp pop cmp popf xlat fwait or lods lods aad movsb repnz stos adc aaa arpl sbb cvtdq2ps mov fiadd call dec hlt sbb ja pop pop push scas inc scas xchg fs dec ja mov aam push loop,pt pop test (bad) arpl andb mov fisubrl stos inc test and push cmp cli stos test pushf or clc shrb iret cmp adc jg push lcall pop scas cld cmp imul std into icebp lret sbb or movsb fisubrl mov push into loope paddusb sub ret iret jns pusha pop push cmp xchg cld and dec inc sub aam xorl fcmovu bound and add daa xchg stos xor repz push in out (bad) fstpt push inc add arpl and xor sbb outsl lock (bad) imul mov push xchg inc xchg dec mov rclb dec dec push in clc mov sbb jns rcrb fstpt sahf test outsb xor das push lret pop (bad) das in jl out popf lock scas sub push jbe or lods js cmp and lahf mov push jns mov mov inc sbb xchg dec ds (bad) aam or mov cmp and push pop inc pop aad pushf int3 std xchg jecxz cmp cmp dec aad adcb push xor pusha add mov dec fadd out cmpsl leave dec ja xchg pop out cmp cmp xchg in outsb daa ffreep mov cwtl out add and lods or add xchg pop clc loop or test push stc inc mov daa fstpl mov and add divb pop ret sub dec lods sub sbb (bad) pushl xchg fwait lods enter adc loopne or add xchg jmp jne jle test je push scas lahf xchg aad aaa jb jns stos mov insl mov pop mov mov stos cs jne add test mov pop pusha and lds loopne cmc push xchg outsl pop popa pop pop and fsubrs push lcall push add mov (bad) repnz out ret xchg mov cmpsb xchg fbld or mov mov scas inc (bad) cltd adc mov shlb jg (bad) push jmp xor xchg add xchg ss sub or loope test adc cmp and mov movb aaa pop outsb sarl cmp mov mov cli sbb js and mov js pop jae jecxz ret push add aas and dec cmp mov pop sti jg inc mov mov cmp (bad) out fwait sahf xchg xor push mov out mov or fisubl shlb cmpsl push movsb mov popa push jl pop addb sub mov fstpl mov mov xchg lds in add mov leave (bad) repz lods mov pop inc mov mov and pop xor fdivr pop inc mov icebp int cmp push roll data16 clc int3 ret and mov bound mov in inc cmp mov xchg lea orl adc push mov pop jnp lcall dec or pusha out pop sub popa imul jp out jno mov (bad) push pop push lea call xchg and adc push dec fistpll int3 clc mov fildl inc icebp xchg and stc jnp fwait mov cmp jbe add jg jo jo dec mov push push and inc aas insl icebp push or fs cwtl fisttpl rolb jo push xor xchg scas xchg mov pop mov mov mov movsb cmp add data16 enter cmc das test mov testl ds aad adc or mov push lods sub xchg xchg jno mov add fisttpll adc jecxz test rorb pusha shlb adc mov pop stos lahf stc dec sar push xor ljmp lods daa and push lock paddd or shl jge je mov arpl jbe cli mov out stc fs stc adc into fidiv sub push push lahf cmpl aam jne cmp add mov jb fimul aas notb dec int3 push jne cmovbe mov mov mov xchg pop sbb out outsb outsb in (bad) pop jp mov xchg test fs (bad) pop leave in fadd sbb iret cmpsl inc dec mov ds insb daa xor sub cmpsb outsb into xor jge fsts iret sbb (bad) enterw or sti push adc stos ja imul sbbl xor pop movsb cmp cmc adc lea rcrl hlt sahf cltd pop into ja mov cmp ret out out pop xorl clc ja sub jno dec int3 sub ja push jbe and test pop inc mov mov jbe jbe faddl dec fildll mov and push push sti ds mov int rol mov pusha xchg addr16 dec mov sbb pop jo sti and insl cli jg clc lcall pop push loopne add adc es push lret xchg or or dec pop jecxz cmp lret (bad) clc shr addl shlb and push inc add call lcall mov hlt std push jnp jle mov mov cs sub shlb xchg dec int sub sbb shrb push repz cmp xchg push xor inc sbb pop xchg das aaa jle mov xchg loopne inc clc (bad) aam xchg cmp mov dec xchg cld pop adc lcall in loopne (bad) lock jecxz sarl rclb sbb sbbl or inc jge dec pop mov push xchg dec xchg add pop jle jae and pop jnp dec mov outsb (bad) fstl lea je loopne sbb loopne and mov js cmp cmp push (bad) sbb jnp mov inc ljmp sahf add test push lcall gs mov cmpsl sub test mov xchg pop jmp outsl pop movsb adc stos add int3 in imul int sub cld push call popa in lret inc add and sti cli mov arpl jae (bad) lcall xchg sub scas xor in loope subb iret pop cltd (bad) repnz lock pop cltd xor stc fsubrl push arpl xchg pusha add out inc mov push jnp adc icebp mov push hlt mov loope pop dec aad int3 push sahf jmp xchg paddq out (bad) addr16 (bad) pop test lods stos xchg mov iret pop fmuls (bad) push sahf lahf mov leave sbb in mov xchg xlat and sub (bad) cmp xlat cmp fdivrs mov pop outsb lods dec sbb push and iret cmp pop push mov rcll in sbb pusha cmpsl das jnp insb clc int ja,pt out mov xor xchg xchg lods lds jecxz sub lods push ret xchg dec jecxz subl repnz fisttpl sbb push dec loop cmpsb sbb (bad) cwtl push mov mov adc add lahf les das mov clc mov dec or ror mov or and dec cmp sub sub jle xchg ret push adc popa mov add cmc add adc int jns clc (bad) test adc outsl xor out mov mov mov (bad) cmp xlat bound inc inc dec dec aam or inc outsl inc stc push mov stc (bad) cmp xor jl in mov mov mov and jmp dec out xchg inc sbb ds sahf cmc movsl cmp or (bad) enter insb nop out mov xchg out push test pop scas daa les xchg dec dec xor fist daa popa jns xor sbb jl xor cld loop or mov mov and ss xor fwait call push lret cmc jge mov push and inc jg aam mov pop xor jle mov ret mov jl mov pop sahf jp sahf mov sahf lods or adc mov inc pop mov inc xchg lret out pop aam jg stos mov jp andb xchg addl xor addr16 mov adc out cmp ljmp xchg mov (bad) dec in jge rcrb (bad) mov stc inc (bad) out inc std sarb dec lock test fild adcl jne dec inc sub xchg fstl pop mov mov pop and jbe into mov sbb (bad) testl xchg dec jp adc mov sbb mov and subb ja cmpl int scas inc xlat or outsb test mov push add stos xchg push mov and pop (bad) xor ret dec xor lock inc and shrl xchg pop in inc hlt out je pop (bad) mov cmp mov jecxz sub cli fstpl sbb and mov ljmp ja xchg mov mov insl cmc in mov mov stc and jno (bad) dec and or pop rcl mov pop xor das push fdivrl push mov pop add or movsl and sub repnz ja jno in jae inc cld mov dec fldcw push mov (bad) xchg lods mov inc and out cmp sbb fisttp stos insb dec imul notb scas mov sub jecxz cmp out cltd fimull ljmp jae mov pop or fildll sub andb mov cld sub fimull lock hlt pop mov les cmpsl pop iret je add test or mov (bad) mov repnz or sti das lea mov (bad) (bad) hlt add jl int3 xchg add or lahf xor int3 ret fistpl dec ss notl and xchg pop test (bad) movsb adc pop data16 stos mov sbb into mov sbb (bad) mov enter js sbb test inc cld lcall sub adc out pop fsubs test xor pop test jo mov js divb fcoms inc iret negl or push les push mov mov fdivrs xchg stc add imul (bad) dec jecxz int3 mov aas add dec xor ss int3 (bad) paddusw jnp dec and mov mov pop mov mov rolb in mov out rorl idiv add stos lahf (bad) ror orl ret fsubr mov into xlat sub ja mov iret popf mov pushf sub sbb mov mov aaa fisubl xchg sbb or in insb gs data16 cltd cmp inc icebp mov sbb addr16 mov nop fnop mov stc and (bad) aam in insb imul xor inc out adc imul xchg imul inc subl inc sub add test insb addr16 push push es jns int out adc (bad) movsb adc loopne popf cli cmp pop cmp fiaddl sub lcall cwtl inc int3 iret inc fstpl out dec stos pop add mov push inc das out xchg imul xor mov jl lcall xchg or (bad) pop sbb mov cld inc or adc inc jp xchg (bad) je or mov nop idiv orl xor sub int3 enter lret sti out or (bad) outsb (bad) stos out sbb push cmp sub lock lods push iret lods mov cmovno sbb dec xchg push test ror cmpps (bad) dec adc jo add pop daa sbb enter js std cwtl dec mov xor adc pop fwait fwait ret and mov mov ds sub add xor xchg dec inc add shl addl and out xor or test in dec mov aam fisubrl mov loope dec mov (bad) fptan add movb inc gs sahf subb inc mov test in jmp xchg out add mov cmp or mov jl hlt sub divb outsl into popl lods (bad) xor fsubs lcall jbe lods jne aaa mov jns ja sbb mulb popa adc or aam mov pop in sub out fistpl fcompl daa dec out xor jo jmp xchg fwait cltd icebp fstps mov stos add mov test or sub xor jmp pusha sbb pop fs or jmp dec jne and mov loop cmp xor (bad) std test xchg mov ss mulb out or fmull inc xchg inc lahf fbld enter and mov mov dec (bad) mov dec dec outsl push adc cmp mov jae mov cli sub mov (bad) push mov ret je test int3 (bad) xor cmp add fsubr clc jnp xor pop data16 mov pop (bad) jo or cmp mov mov pop mov insb or (bad) scas mov jb jbe push jmp (bad) out nop ret add or cmp jb jns xchg pop test cld lcall (bad) pop pop dec xlat in xor pop pop sub insl fdecstp jg arpl xchg jge movsl ret mov and and sarb flds (bad) mov lret cmp imul sahf shrb hlt call xchg xor icebp and test and lock imul xchg sahf xchg les in cs mov and fs sub repnz xor aas cli mov jge in dec out ss xlat and (bad) mov fldt nop cltd mov (bad) addr16 cmp sub push dec mov and jp gs aaa lods pop imul adc or mov mov scas lahf inc psrad cmp xor inc mov (bad) or (bad) int3 pminsw mov sbb out stos adc dec dec (bad) pop pop mov xchg sub data16 addl mov sub cld mov mov mov and mov lea repz or lahf bound and pop sti rclb fdivrl pop jl add gs loope pop andl int3 jecxz jno sbb mov mov repnz jb cltd aaa or test dec std inc mov leave (bad) mov pop hlt adc jnp fcmovnu lcall or mov je (bad) sub mov sbb mov mov pop add pop outsb or (bad) subl mov sub std add dec lea (bad) sub out xchg adc (bad) (bad) xchg pop mov sub push cmp mov add fisubrl inc pop xor in dec fisttpll sbbb dec in mov jmp add add pop jb dec scas sbb push loopne mov test push xor mov into xchg mov out shll ret lret nop imul leave loopw (bad) jg xorb popf pop (bad) xlat and and (bad) (bad) inc cmp push mov cld (bad) push subl cltd inc ljmp add lds lea sbb fild outsb add pop mulb sub ljmp cmpsl jnp push cwtl outsl in lret sub mov mov outsl popf and dec subl pop js lods mov xlat sub push ds into adc xchg repz mov rol cs aam movsb xor movq imul int3 mov aas sub or cmp in inc (bad) into sub movl (bad) adc lock icebp pop cmpsb mov mov repz repnz cmp add pop mov sbb xchg sbb push xor in fidivrl mov in rorl iret je addl scas mov fsubl sahf call xor jecxz xor std cli adc mov pushl or int3 aas ljmp adc arpl sub or lods mov or lret stos out negl (bad) lds inc xor repz mov or cmp js pop push repnz dec dec addl cmp push cmpsb xchg push sub sbb mov mov inc ds xor sbb mull stos movsl lahf mov std adc dec jge gs mov stc and data16 jg xchg dec and sbb cmp and std push sub mov or cwtl ss fsubrs add inc adc jo stos fwait ljmp lret in sbb inc (bad) leave jnp add mull add add sahf add push arpl je js loop dec mov call pop push xchg jecxz push add pop pop mov les jle lret adc addr16 gs jg jle xchg push lds test sbb out or addl jnp fsubs insl and sbb cltd cmp clc gs xchg xor add inc mov call mov dec in gs gs lods daa sub adc and popa (bad) dec sti shrl pop push cmp and mov cmp dec iret or sbb cmp mov dec push (bad) repz cmp pop (bad) adc aas adc sbb pmaddwd mov in mov andl xchg jecxz int3 dec ss icebp stos add sbb rorl stc gs jmp subl cmp lcall (bad) mov jnp bound rcrl sbb cmp pop cwtl rcrl mov (bad) ror and incl cmp or dec hlt sbb outsl push hlt mov hlt sbb cli movsl ret add sub fsubrp repnz mov orl gs mov out iret in (bad) push mov in sbb rorb sbb mov mov hlt int (bad) sbb int jne xchg loope cli outsb push out add (bad) mov lahf or and fwait js int jnp push mov inc mov clc fwait mov pop out fwait push mov jmp out pop push lahf ljmp push mov cli int add push fwait cwtl add push inc xor outsb xlat (bad) (bad) gs inc xor sti popf and inc jne mov jnp aaa add jae incl imul jnp pop ror or adc daa pusha sub loopne jg test add adc repnz mov cmp (bad) sub into (bad) pop jle fdivrs jmp (bad) mov lds (bad) lret popa stos xchg sbb push into mov jg into loopne inc sbb jb js add mov xchg dec adc lcall out out dec pop pushf pop dec ja cmc push cmp sbb aas stos mov cli xchg in pop pushf (bad) imul idiv push test mov sbb imul pop sahf aad into mov mov imul add sbb inc pushf and jnp jnp pop dec xchg mull movsl fldcw pop mov pop (bad) mov stos inc cmp repz xchg pop adc cmp mov mov push int loopne ja into pop sub mov nop or jl pop push mov inc test jnp push jmp inc jbe int3 clc je fldt es in int fiadd sbb (bad) adc fisubr cwtl xchg and xchg mov leave pop push mov inc hlt add outsb push addr16 std imul icebp shrl sub stc or dec sbb push mov bound cmp sbb dec mov or sub in cmp fiaddl xorl int3 scas push sub push loope jno sub dec mov push sahf cli mov mov fimul mov push fs (bad) icebp and sub decb in xchg lea dec inc ret imul push xchg fcoml lods xchg cmpsb mov xor xor mov mov ja iret or stos push cld mov inc and (bad) negb and add push mov dec sub or ret addl jmp push and fadds mov push jg xchg fwait mov or jg xor mov sbb movsl out incl mov jbe fisttpll inc mov dec inc mov sub jp sbb test mov and cmpsb pusha scas stos cs sub sti cmp outsb pushf mov pusha mov in les hlt mov pop scas pop iret mov xchg pop push cmc rcll mov js hlt cltd outsl push popa lret int3 pop je sub mov lods int xor call push xchg (bad) mov jnp mov hlt out bound sub jmp jno lea movsl jg pop fsubrp shrb roll lahf (bad) adc mov pop dec sub push (bad) aad lahf (bad) (bad) mov scas outsb pushf or jmp test mov fwait lahf rcrb sbb movsb dec movsl daa movsb push cmp and push loop sub jge sub mov aas sti xor insb imul mov sub mov dec call int3 out xchg test ffree mov int sub out loope sub gs movsl (bad) jae std lahf mov pop jnp data16 sub push add aas (bad) push cld dec cmp mov fisttpl sub xor sub and aam inc adc sub repz out hlt jle in xchg jbe and lea dec push imul repnz sbb or hlt loop in jo and lods pop push mov lcall test stos cmp add mov test cmpsb push outsb ss pop addr16 mov faddl and and xor sahf ret aaa jge sub sahf call and push cmp mov push pop jnp sti mov cmpsl jne push or test xchg (bad) mov cltd mov push cmp adc jp dec and xchg inc outsl sub jo je xchg (bad) (bad) push cltd repnz mov cmp fstpt mov mov pop lahf or iret js in ds inc int3 (bad) stos in xor fbld out sarb dec xchg pop imul out jnp js jmp or pushf adc inc ljmp pop sbb movsb test dec jae pop mov or out test cmpl (bad) loop orb mov or dec mov mov scas push and or jb aas cmp mov lret cmp std (bad) cld mov xchg cs jecxz je outsb pop ds cli and pop iret fstpt fiaddl pop fnsave sub push dec sahf lods lcall je sub (bad) repz mov ret lods icebp lods inc inc push sbb fmuls ljmp add jge fsubl lods add inc nop in cli push mov cmp in loopne pop mov lods mov scas jecxz jne jo enter mov adc dec adc lods mov mov pop adc lahf ret adc (bad) pop pop dec inc rcll cmpl into int3 es (bad) loope ret shll sub in mov stc pop pop mov aam cmpsl push mov insl xchg dec mov ja es ficoml jb out sarl std push test addr16 and call jle mov loop xchg (bad) loope xlat mov mov jne arpl (bad) jb lahf push out out jge xchg and loope fisubrl mov mov dec pop hlt repz bound xor lret pop scas push push push std mov mov add cltd push sbb test dec dec cmpsl inc in dec fldlg2 les pop ds test dec pop pop dec jno dec into mov and ds mov lods fnsave xchg imul (bad) fstp dec lahf outsl cld pop je push loop or pop sub sub pop ja adc inc enter fwait jne lods enter frstor and xchg test fwait xor jp push inc sub pusha push lods pop das int3 jo push daa movsb lahf mov push mov lods jp js push xchg mov and loope rolb cs push mov push stos daa xor setle rolb jnp inc dec sbb push dec fidivr rcl pop and xchg jae and js addr16 shrb test jle ljmp push xor cmp jecxz scas mov push mov dec ljmp jno mov flds adc arpl jl xchg fisttpl les ljmp and movl movsl (bad) cld mov clc adc inc mov cld dec pop (bad) ja cmp mov enter loope clc fnstsw hlt lock xchg (bad) cmp cmp mov mov adc mov jge xor push sarl aaa cmp pop (bad) and mov jle sub mov jb int arpl arpl orb rolb outsb xlat lcall cmpsb stos sbb cmp imul bound inc in mov or pop lahf les jnp js stc std fist imul cmc pop lods xor or into inc and or hlt inc fisubl or cmp adc mov insb pusha addl int3 call pusha (bad) popa in aam movsb push fisub adc js (bad) xchg mov shlb add cs lea mov fisubl jle jae mov push push mov out add dec outsl out cld lods daa dec repz lock lret les int mov push xchg insl xchg mov cld sub test mov mov cmp mov (bad) in scas mov xor das les cmp mov loopne mov adc bound mov aas jbe xor cmpsb fstps and rolb xchg push cwtl inc mulb lahf add jae test repnz and ret mov in push pcmpgtd ljmp mov movsb sbb pop int3 jnp fistpll sbb dec stos xor or xchg insb mov and dec repnz push adc jae outsb and lea dec or out leave pop sahf scas mov pop (bad) xchg hlt adc jle and data16 add hlt mov sti xchg or xchg jmp stos inc aad and push addr16 std icebp adc push pop xor push fistpll in pop pop pop fistpll mulb fstl (bad) lock cld lcall cld push sbb lret cmpsl (bad) adc fs or rcr or pop leave cmp js and jl mov xchg push inc fld and rcr inc outsl (bad) (bad) int3 mov mov test cwtl daa (bad) jge sbb in xor mulb sbb mov (bad) and lahf lahf jo cmp fdivl dec in je lods out fsubs stc xchg mov mov add xorl adc fwait inc je pop hlt cli pop inc mulb out mov cmp jb lods gs (bad) aam lret adc rorb adc mov jo int inc xor xchg push xor pop jle sar cmp cmp push loope pop daa or fdivrp cltd and cmc (bad) pushf adc es mov and push cltd aad push sub pop cmpsl xor popa lods sub or xlat inc pop mov fwait mov or dec insl push push dec movsl pop cwtl test add xchg inc push xchg in xor xchg scas jns scas push imul ret scas and idivb sub xchg inc sahf mov push mov fbld jp sub enter push mov lret mov inc popf out adc or and xchg xchg loopne call dec jl or mov shrb adc arpl mov in popf xor cmc fldcw call out xor les sbb icebp inc testl adc (bad) add mov cmc push arpl lret mov push out das outsb in mov mov adcl jno lds adc pop jae iret mov push xchg (bad) dec sub or fisubrl jp std and xlat in int3 in pop inc ljmp data16 incb fsubrl inc push addr16 mov ljmp mov adc mov lahf sub mov dec adc bound sarb pcmpgtw xchg lret leave xor rcrb or xor imul (bad) pop add jb fstp insb lock in hlt pop in sbb out push sub cmp pop fcom mov add push and fisttpl pop into out mov lahf aas cmp push sbb lds cmpsl jle mov xchg push movsb std ljmp sub adc bound addb xorl clc jge popf jmp inc imul icebp pusha data16 add (bad) cld insl test mov jmp fwait insb add fwait dec cmp jmp stos and repz cwtl sub (bad) mov mov jecxz inc test dec enter cmp inc push rep imul pop out loope orw add (bad) cmp ds adc daa lock hlt mov mov dec jb mov mov ret xchg mov lahf pop insb inc rolb test (bad) mov fwait cmpsl test adc mov lret lahf pop popl fs mov lods jecxz xchg sub cmp mov cmp aaa mov cmpl push insb ret push add and xchg jmp loope pop aas lret cmp bound jge push add psubsw hlt sbb leave push ret jns test mov pushf xlat inc cmp jmp fdivr cmp test es imulb push xor add je popf lds xchg push das dec push adc icebp or pop inc addl (bad) pop pop ficompl imul and insl mov push test into cmp ss loop xor or sbb add dec lods push pop (bad) movsl out arpl lcall xor (bad) fidivrl and mov (bad) ret fwait or and jns pop mov add (bad) dec lods xchg mov and adc nop bound jnp addb xor hlt adc les sbb fmulp or cmp adc xor jecxz or ret in gs mov (bad) ret in insb sbb jae mov cmp xchg cld jbe push mov movsb out mulb lea sub mov imull adc loop (bad) movsl inc into mov dec xchg mov mov aas les xor dec int3 cld icebp cwtl subl jb bound mov add cmp pop bound data16 stos pmaddwd sahf xchg inc ffreep lds mov aam cld mov in les imul scas mov sbb dec and shlb cltd int3 and rclb insl aaa sbb aad add sbbb in repnz (bad) movsl pop jmp add jne mov dec in adc inc xchg cmpsb test sub mov repnz mov lcall add in sbb inc data16 imul adc xor push sbb mov cmpsl aas insl lcall repz push dec data16 dec and in ds mov and add notl mov ja adc mov pop (bad) loopne popf xor xchg xor adc out xor mov js mov mov adc jle (bad) xchg push daa cmp mov dec add nop inc push xor jp imul iret xchg pop inc test mov fisubl pop aaa daa subb mov orb movsl adc sti fistpl mov push jae mov iret xchg rorl rclb xor lahf repnz cmp call in orl jp rcrl xor xor jno mov sub add in jle pusha push (bad) mov fwait rolb jmp xor dec push stos iret mov xlat cmp rcr test out xchg mov mov push xchg or (bad) in mov lods mov out in sub cmpsb (bad) pop add sahf mov cmp add pop mov (bad) (bad) xchg pop icebp mov cwtl sbb jbe bound push inc mov xchg (bad) cmc std mov test adc and jae xor ja aam jns jp xchg jno ljmp sbb (bad) mov (bad) insb addb xchg jae jne cmp pop push sahf xchg cld inc aas push and fdivr orl shlb push cmpsb fcmovu aas mov inc call das mov fnop jge jle cmp push jl sub imul test sub lret aad mov sub test inc xchg lret iret cld cld inc sub xor dec xor in rcrb push push pop jmp mov int3 gs push add loop or notl cmp dec out testl into push mov jb mov fistpll decb in mov fildll mov adc cmpsl jmp pop inc outsl mov mov push jg insb cmp sub fmull or xchg js mov mov adc xchg cmp dec fstps push push fsubrl orb push jb lcall inc mov mov push sub xor sahf cld or mov pop lds inc ficomp add xchg into push test stos imul fcmovb (bad) dec imul dec outsb jo inc or push cld js push and dec (bad) mov dec push sti iret dec inc mov sbb sbb ljmp bound popw fist nop push scas movsw stos pop hlt dec std dec lods mov pop daa ja xchg dec das lret dec nop jae sub and sub pop adc pop xor fimull mov adc std cmp iret sbb rcll loopne out ret stos mov in sbb jns cwtl pop mov jle (bad) inc roll call stc adc gs cs fs sub jp push lcall icebp add stos ljmp dec push fisttpll sarb mov (bad) push orl mov jbe,pn jb ja test jb fisubr xchg imul xchg push mov daa xchg pop aad mov arpl xchg in jo jns rorb notb stc adc fimull mov cmc subl outsb sbb xchg pop pop mov xchg les mov mov dec xchg mov cmp bound (bad) inc ret fcomip jmp ss test sub cmpsb js jns mov (bad) stos rorb movsl gs aam xchg sub jp xchg iret pushf dec add sbb aad fisub xchg add imul int movsl test push mov sbb lock xchg cmpsl ljmp scas or and push push mov mov cmc cmp arpl and xor in pushl pop push xor lahf mov inc fs jmp movsl fistpl mov test in cmp insb push add insl or out add push cltd dec popf cmp and stc movsl sub xchg clc or jl jns mov pushf fstl js (bad) jle jae rolb adc mov mov je repz inc pop pusha or stos int3 inc gs inc xchg lods out stc les sbb adc pop pop inc inc mov add push cmp nop vandps jns xchg mov add sub les add (bad) out mov out ss mov (bad) outsb dec fild sbb xchg cld cli sbb cli sbb (bad) repz mov andl pop outsl icebp orl mov push movsb scas cmpb outsb inc push cs pop stos cwtl sub repnz dec cmpsb cmp and mov aad fs xor sub mov scas mov fisubr popf add inc add mov lcall out mov push je lret and lea xlat push mov pushf xorl push adc cwtl negb out ret stos arpl push push enter lods outsl sub mov cmp hlt gs xchg adc movsl pop mov xchg adc mov xchg add or mov jae mov lea jne dec mov aaa sbb js pop xor or fstl jns dec mov imul cmp icebp jns add push shl insl and jns aam fsts pop sub je lock loop mov inc icebp sub movl insb inc lret (bad) xor popf jp ljmp ljmp sbb jnp add popf or jecxz loopne sbb cmp cmc or movsb add (bad) aaa add xchg pop inc dec hlt sbb and add or cli adc movb iret mov bnd pop add aam mov xor or dec mov jo adc pop outsb out mov lods jge add lret scas rep cmpsb pop lods lods jg scas adc lcall test push jbe decb mov jbe addr16 cmp call push std xorl mov sub pop lock xor xchg mov ja or adc fisubrl pop sub fidivrl or xor sub cmp in cltd push sub pop stos mov pop popf lods enter cmpsb sti out mov mov jle fidiv out and pop mov jp pusha pop lock mov test sbb pop mov lock int3 and xchg add insl mov sbb addr16 les sub pop pop or lock mov xor add insl push in sub lret fwait push imul xor sub inc aam mov add inc mov ja bound ficompl in cmp add sbb mov in (bad) in sbb jns sub mov push xchg sub mov mov ret xchg mov test xor xchg and insb pop jp fild cmp cmp cmp jmp outsb adc push in js out mov ja jl lds inc push fildl or jmp add sbb je jo out in and leave push aam (bad) je inc mov sbb push testb dec repnz insl addr16 or scas enter outsb inc icebp scas pusha jle pop mov (bad) jb inc and call sar stos mov ds out ljmp (bad) push (bad) or xor jno in les mov aam lcall lahf int pop cmp inc jnp pand mov insb or arpl movsb mov fwait xchg cltd adcb das push adc sub jns adc jl jl fs addr16 or jnp xchg mov repnz dec aaa cmp xor mov lods mov sub pop sti xchg (bad) int3 push out xor in sub hlt ljmp jno mov xchg push mov lods movsl (bad) in xor daa (bad) jl cmpsl sub push movsl inc (bad) ja test repnz add out loope cltd xchg jnp push inc jl insb or xor (bad) cmp mov jnp ret sbb dec xchg pop cmp mov dec pop dec movsl xor push lret add inc inc arpl cmpsb int (bad) stc xor gs add dec orl jo nop push test and inc dec fadds inc insb std stos repnz mov dec cltd mov addr16 mov jo mov fnstenv add mov push inc dec shr xchg lret mov xchg push cmp mov and push test inc nop scas sub push loope add shl xorl pop enter popa cld mov adc movsb test mov jmp cmp out mov aad jbe push cmp add mov or jle add dec push pop add push int3 popf dec outsb lcall jnp scas popf inc scas pop iret sbb flds loopne or inc out in cmp lret jb add bswap rcrl idiv ds jns push shll test and loope hlt jle push stc mov lods imul cs push lret test aad out lahf mov mov movsb out jle aaa push push mov xor icebp add test xor ret mov xor loope fildl dec pushf xor out sub mov mov jo dec repnz sbb mov xchg adc add lods out xor mov test pop jp jns (bad) xchg sbb inc sbb add cwtl insl aam mov mov xchg mov call fsubl pop clc jge push arpl loop or add mov dec add jo inc cld daa ljmp sar in jmp ret ss sbb repz cs inc mov jne mov scas scas gs xorl lods outsl fcomp mov and jmp std cmpsb sbbl andl push jns cmp jo lcall sbb pop adc mov sbb es jmp mov adc sahf mov cltd in test push pop pop gs dec insb dec cmpsb inc testb sub adc cmp sbb ljmp stos es fs (bad) cmp addb pop and imul jno in jo mov mov add (bad) push adc movsb (bad) or into testl lods sub loopne bsf mov sub lods mov (bad) icebp arpl xchg iret into xchg push scas push jb push push fdivrl add pop std mov or mov jo stos xor adc cmpsl dec aaa cmp subb mov mull cmp pop mov push mov ds in sub lcall jg cmovb stos imul pushaw dec mull sub ljmp das jb mov cmpsb sub add ds inc std movsl or mov add push push and (bad) fmuls outsl xor xchg xchg jb mov cmp sub sti inc dec add lret dec xor clc call sti add je imul roll mov test aam cmp or (bad) jge pop sahf mov out sbb dec cmp mov mov bound (bad) mov cmp int3 sub cwtl int test mov leave xlat fsubrs add fadds sub or fnstenv stos cmc sbb sbb or cli push fwait mov pop pop shl xchg clc adc aaa incb mov xor xlat scas inc (bad) push rorl (bad) (bad) and add mov iret cmp (bad) cmpsl fistpl xor sbb out jo dec jo jecxz cmp (bad) cmpsb push int mov adc sahf fisubr jle stos mov sahf (bad) xor jle imul movsb outsb mov idivb lret adc ret sti out push push mov das and mov movsb lret arpl sub popf inc lret or jnp dec int3 enter or fisttpl ljmp dec and lea adc pusha lahf jnp mov mov xor pop and scas or add (bad) sar dec fisttpll mov bound mov mov mov mov or arpl daa fistl push loopne mov loop mov dec xlat mov fldt lea add jae adc pushf js repz adc add and (bad) jg mov xchg bnd out add insb ljmp add loopne int lret sti call clc sti mov cmpsl jmp cld sub pop bound jbe dec sbb push out or cmp mov js aam jbe mov or cs mov and outsb mov and (bad) or ds lret inc lret test dec jle,pn dec mov mov jge lea sbb pop movsb jmp mov fsubrl and add insl and jg adc ljmp dec je mov insb fildll sbb pop int sbb lcall fwait stos xor loop aaa inc fnsave bound cmp jle icebp xchg stos push sub xchg loop push cmpsl fiadd and push xor leave lds sub lea adc xchg inc push fsubl icebp pop mov mov pop out movsl pop imul les mov cwtl call bound int3 mov je faddl xchg popa and push gs cmp lods test aad (bad) add sub push stos mov push dec iret add jnp mov mov sub mov jae loope in sarl out jmp mov xchg clc fmul or push jbe lret mov pop xchg cmp andl pop mov mov mov dec add push sbb dec int cs daa out es sbb gs mov rcrb movsb xchg push jmp cmp sub nop sahf pop push xor pop popf or mov sbb test testb add int3 sbb mov repnz (bad) mov iret mov add sub sub pop or ds fsubrl push dec add add inc fidiv popa mov add mov xorl pushf sbb lahf push inc into pop sub sub mov mov adc popa imul and bnd insb adc les bound push jp dec mov sti pop scas inc inc push repnz cmp mov pop mov pop imul push and imul repz stos cmp xchg inc jmp mov dec loope push out adc fldenv xor insl dec cmpsb push icebp dec (bad) mov stos shlb mul jbe xchg mov mov scas jb mov cmp push lcall in je xor je adc jno push cmp (bad) ret shrl out mov in xchg jg lret dec lods mov add sti pop fwait mov pop mov xor hlt mov ss jg (bad) xlat dec or xchg aas lock in test movsb fdivrs (bad) ja mov lret jmp pushw or ds mov sbb cmp jno mov jp fwait aaa and jp add addr16 outsb cli lea push loopne jns int3 (bad) fs or call lock lds fidiv mov popf mov in xlat sbb pop xchg mov pop xor fcompl mov fs mov and sub push js xor mov cmp test lcall inc inc cmp inc add mov jp adc xchg fisubr xchg and lock sub movl ss repnz into (bad) into ljmp (bad) loope lret and dec psllw pop push mov mov neg mov sbb dec sub mov rol outsl jmp inc dec (bad) iret push pop push cmc inc fnstcw fs (bad) push aaa or cmp mov es cwtl xor xchg jecxz jb lea pop mov mov test add hlt ljmp and idivl cwtl and dec dec cli xor xchg mov movsb mov and mov push mov jl and lret es cmpsl sbb or mov add and test in iret push test xor xor adc aaa dec ret test push (bad) cmp cld add cmp push cmpl sub imul out sub leave test mov push inc test xchg jl sbb leave and push or mov mov sbb sbb inc nop ret mov cmp aad test jno xlat mov jle movsl test mov cli pusha inc icebp pop mov bound jge add add fiadd sub add (bad) in aam loopne adc xchg or int3 in cmp mov in jl fwait xor lods sahf push cmc mov outsl cmp jl arpl stos add jl int3 dec lahf xorl mov lcall jnp ja cmp lret in mov hlt cmpsl iret cmpsl dec cmpsl or test arpl movsl bound lds jo pop and test je lods add cli pop jge repnz std mov adc lods or rorb xor pop jp mov je rcll pop inc roll lds push adc popf jae out ficompl or ds jnp sbb pminub cmpsb mov and into jp dec xor xchg stos (bad) (bad) mov out loop jns aam sub cmp mov cmc pushf sbb sbb pop adc pop fbld push cltd stos cmp add xchg bnd add cmp inc bound or xchg mov rolb gs or in push inc rorb mov push imulb test pop arpl inc xor fwait (bad) aad and push lret sub add mov insl popf push adc leave xor add xor xchg jecxz scas jne sub sti adc hlt sub ret fist in pop xor jecxz adc mov mov mov sti call sub ja shlb insl jae sbb rolb adc jno push jne push jae xchg mov rcll sbb add cmp cld xchg cmpsl pop cmp sar aad xchg sbb sub sahf popa cmp test push ss mov test mov bound in (bad) in xchg mov ss lcall loopne add or jae scas jne stos lock push mov in pop repz ss cli adc add jmp cmpsb mov in and cmc std imul push jg lcall dec addl (bad) hlt cwtl loopne inc into hlt or (bad) mov mov mov push fldt repz cmp or in lock and popl ds xchg mov lret xlat stos fidivr sub jge mov mov dec lret jecxz or out and xchg jle jmp jbe or dec mov cli add xor sbb lea aaa pushf out (bad) cwtl adc aaa int3 xchg dec pop rcl dec jne in cltd jo sbb mov xchg test je in lods bswap aad adc fldcw dec js test nop rcl cmp dec sarb fs push fs stos sbb xchg mov add shrl stos lcall push adc mov and cltd pop sub in xor push dec mov pop dec adc rorb sub lds push mov fdivr dec cld cmp jle adc sbb into (bad) rorl push push jns lret push dec in mov (bad) scas inc push popa fs pop arpl lea mov pushf and test lea inc es pop cmp dec (bad) jbe cmpsl jne cmp out ret ljmp sub ret mov mov fldcw mov mov cltd out test cmp pop out call mov lret push push test xor fbstp (bad) cmp or sar sub pop (bad) jns dec mov jmp outsl mov xchg xchg dec pop fidivl sub mov mov pusha test and or adcl and and bound out mov pushf mov cltd sbb sbb fmull mov pop mov iret (bad) outsb out dec push lcall and jle subb xor es stc xchg pop mov (bad) inc jg mov xchg push clc inc mov pop add (bad) cmc push cmp ljmp cmpsl dec lods mov push push add fldl pop pop lods outsl dec xlat jp mov push mov and or xor mov xchg jne jae adc dec dec (bad) xlat jae andl les mov imul fs jbe lea fldl aad int3 jmp cmp mov cmp and push rclb aas repz xor pop (bad) xor mov js jne mov rol pop mov ficoml shrb adc outsl mov jp xor sahf das sub mov ss movsb cmp dec ljmp xchg push sarl ljmp inc sbb ds push daa pop arpl add jg or (bad) push (bad) iret mov lcall xchg icebp mov outsl dec ljmp sub xchg lods js add sub (bad) sub jno sub and dec pop jl mov aad xchg movsl xchg inc pop add mov mov pushf sbb sub ret popf arpl jmp pop jbe push mov loope xor in sbb cli mov pusha rorl mov xor test mov (bad) jle (bad) sub jge pop mov mov fwait sub jecxz outsb add shrb mov test fwait and push push mov pop push pop (bad) mov or adc iret adc data16 mov pop mov stos dec fsts mov in xor stos dec in divb (bad) mov std mov test inc cs xchg add addr16 mov mov push mov ret cs jl mov and rcll mov mov popa jge addr16 mov and or repnz in das bound lret icebp sbb mov cmpsb add rdtsc in or pop leave movsb daa stos mov loop and jb sbb xchg rclb cmp cmp mov xor test or scas jbe fisub push test mov push insb ljmp lret pop out call mov call fcoml jmp mov jg xlat jne insb fistpll gs xchg insl jno pop mov sbbl loopne hlt cmove (bad) rcr loope (bad) xchg adc sbb xor sub mov xor push daa mov push mov stc mov xor mov push lahf mov add sbb jbe xchg and repnz out push cs inc mov mov subb mov daa cmc push jne scas xchg pop push repz mov lahf data16 lret mov pop push lahf fsubr mov movsl (bad) repnz adc sti fiadd pop mov jmp xor sub movsb int3 fidivrl adc movsl mov jecxz sub ret data16 imul mov mov pusha xor sahf push cmp jmp dec (bad) in mov mov or or ss or and addr16 test adc or lock insb fwait cmc popa sbb (bad) iret and cmp out mov cwtl aas ret adc lea jge mov sub shrl pop mov adc add sarl jno outsl sub int into in inc sub jp inc cmpsl (bad) sbb pop xchg mov loopne add arpl pop jle out ret (bad) test lock std mov in iret ret xchg jg and loopne and fisttpl out insb pop (bad) rorb das in aas jmp sub daa rorl dec sahf jo in sub cmc dec icebp or imul push xchg daa mov mov adc and push mov mov push int mov jmp sub jmp pop stos pop add (bad) hlt daa ret inc dec ret ljmp cmp test test sbb mov dec dec cld cmpsb das aas mov iret outsl mov fisub repnz mov xor test add pop push ds aaa enter push daa mov rcll repz test lcall repnz jno jg imul adc or xchg cwtl mov daa stc xchg mov xchg shrb cmc mov mov mov fucomip sbb mov xchg shrb cld mov xchg daa test in (bad) sbb jmp fsubp hlt ret divb jle add loopne loop lods cmpb and and or popf sub bnd fldl iret cmc test mov cltd xchg add add int3 or rorb sub jo mov (bad) xor push mov orl repnz jb xor push cmpsb daa adc pop cmp and clc jmp test lods mov scas pop or movsl leave cmp out lcall frstor adc and or mov jmp (bad) adc inc dec sahf xchg shrb xlat fdivrs xchg dec jae cltd xchg jmp js inc cmp ljmp pop insl ja xor sub cltd addr16 idivb insl sahf adc cmp xor mov mov je (bad) jne ret or or mov rcrb scas hlt mull pop and jne and ss lret mov xchg rorb sbb jmp xchg cmp rcrb push sti or insl aaa pop int imul inc push xor aam mov inc xchg jp push jecxz or mov repz loop aam popf orb mov cmpsl adc stos pop popa push add dec (bad) pushf lret lahf adc fsub inc fsubs jg jns jb in push xorl les xor mov test ja roll cmp fucomp repnz out and mov adc ss outsl stc aam loope cmp adc imul and mov push cmp push push rcl mov loope lea push in pop outsb cmp dec cmp (bad) jmp cltd sbb adc pushf cmp adc int rorb dec jmp and dec aad arpl dec into jecxz pusha cmp inc xchg xor ss lods fcomps scas sub jge mov mov (bad) sti sbb sbb adcl cmp push xchg imul pusha cwtl add mov dec xchg pusha jmp xlat xlat aaa shll mov test sub pop sub dec mov (bad) pushf mov loopne sbb mov sub sub scas mov dec push loop dec inc cmp xor outsl adc jns ficom js add push pop xchg enter pop add cmc sbb fcmovbe sub rcrb (bad) xchg ss stos cmp in scas mov or test test sub inc iret andb and in test or xchg mov lods stos lock daa loop dec shlb pop loop stc push (bad) (bad) jo mov in sbb sti aaa adc test push dec es arpl push add xchg rolb inc dec out pop pushf mov mov dec ret sahf or nop cmp cmp xor daa repnz (bad) cmc adc jo cmp xchg push cmpsl clc mov mov xor inc or push ss out dec mov test mov (bad) insb jbe xchg mov insl or bnd loope dec push push dec lret jmp rorl push push (bad) mov call push sbb arpl daa jbe mov add mov push mov inc aad decl out add inc aas jb mov mov aad sub loop (bad) ror mov pop ds aaa sub push mov cltd cs inc adc adc xchg cltd into cli loop adc jns stos lret cmc imul arpl mov or mov outsb pop or int3 (bad) pop in or xor pop cmpsb sbb adc insb in mov dec inc dec (bad) sub sbb and mov mov sub pop adc rorb or xor int3 pop jle xchg (bad) push sbb jne out xor and outsl adc and lahf std movb sub std and inc cli clc cwtl (bad) push or add cwtl xchg dec (bad) or mov mov mov stos (bad) ds and rep pop fldt sbb mov sub mov push aad fxam xchg lds out jnp jbe ret cmpsl adc test lahf pop push nop iret or (bad) sub mov ss inc das xchg mov (bad) lahf xor inc nop notl movsl vdivss lock in push les mov insl insb sub js fbstp call or sub (bad) fcmovnu (bad) cwtl movsb inc sub div add enter sub mov imul jno les dec adc negl inc jle mov sbb lods pop fisubr (bad) mov fisubl mov mov test push and decb (bad) fadds jecxz rcll loopne cmc jmp jecxz imul outsb js sbb imull sub test ret push hlt or (bad) scas aam (bad) movsl add inc mov lcall xchg lret stc sti add xchg ficoml mov ss div mov push add shrb fs sub js dec pop cmp (bad) (bad) add dec in fs insb std inc dec dec hlt (bad) dec call addr16 (bad) jecxz aaa xorl push leave xchg (bad) jp sbb in xor pop leave cld push sbb push cmc data16 push mov test cli mov pop js movsb (bad) in popa cmc dec scas pushf add sbb adc fmull cmp pusha jg and jmp scas cmp cmc inc push inc mov lret sub xchg dec inc pop (bad) sar ficomp decl dec sbb pop icebp jne mov mov jno dec cld out scas inc mov pop xor fdiv pop fbstp fistpll sbb pop loopne out cmpsl gs mull cmpsl cmp inc push int3 (bad) inc dec shlb mov ss (bad) inc fcmovne push inc mov and (bad) cmc mov imul mov cmp push mov iret sahf lahf imul mov sub mov adc out mov ret or cmp ljmp mov ss mov (bad) insb insb or jae rorb adc sbb ja je dec jmp loop push lods cmp jne outsl push cmp push rclb (bad) jne xchg adc and je cmp shrl lcall in xchg cmp iret jo outsl lahf gs lds (bad) out fildl xchg mov stc add add pop add gs and adc mov rcrl mov adc (bad) and daa mov xchg inc sbb cwtl bnd mov xchg ljmp loopne loope sub dec bswap insb mov jg loop popa repnz hlt inc push mov jge mov arpl mov mov cmp mov dec xor jl icebp inc sbb pop enter jnp aas pop hlt insl hlt pop xchg test in sbb pop flds dec sbb mov ss cmp sarb gs dec es mov xor pushf jge xchg (bad) loopne dec mov mov js (bad) cmp fwait pop mov ss push jle arpl (bad) inc lock sub xchg push push into leave rorl sub mov outsb in mov push daa or stc and xor minps lahf mov das xchg or shl fwait repnz xchg jae sbb rcl pop sub mov pop mov testb outsb push cmp hlt cmp mov sub xor xchg sahf or daa pop xchg mov push lea or cmpsb jge cmpsl jno inc (bad) incl jae out inc das push lcall mov in test mov dec dec cmp clc xchg inc mov outsb mov cmp mov (bad) mov adcl push nop loop cltd or lds imul into pop adc mov int and mov jo or inc (bad) sub or insl mov (bad) inc es (bad) push enter movsb xchg es addr16 (bad) and dec je xchg (bad) mov inc cmpsb mov jnp cmp cmc je es cmp xchg test test cmpsb mov into and cmp push shl clc test push andl xor xchg out pop mov xor xor mov scas adc insl push out mov jmp loope popf scas subb add outsb cmp daa lds fisub loop (bad) mulb pop cmp test addl add mov data16 mov pop xor inc sti int3 adc dec out in add (bad) xor test cld mov xchg mov movsb sub cwtl jne and jbe sbb mov int push or ret sub int xlat sub pop and mov dec mov out dec adc int xor push xor int lret ret in jge ret loopne or jle mov dec ret in mov mov jle sti aam shr pop sub mov sbb (bad) outsl in sub cli adc fdivrs fnstsw test aad in xchg xchg mov mov test out mov fistpll das fistpl mov lret out aaa ds call mov (bad) sbb mov adc cs insb scas adc adc xlat dec sub pusha jp outsl xchg xchg push sbb mov je pop fwait (bad) mov xchg into jl cltd bnd mov pop sub ljmp jns aas les mov mov les addr16 lcall insl dec iret push mov mov loopne mov icebp aas gs arpl movsl aas jg test add out lcall (bad) xchg sub sub or add inc aaa sbb adc mov cmp push add xor push jo mov daa pop (bad) xlat pop inc xchg cld jns adc fdivs stos in pushf scas daa sbb (bad) mov pop pop and daa xchg xchg add xor sbbl mov repnz pop mov insl sti push loopne icebp mov es mov loope scas mov aad bound jb fbstp (bad) fidiv sbb in or (bad) je mov jo (bad) jbe or xor push dec sub aaa movsb (bad) xchg cltd dec or sti mov xchg outsl jecxz fidiv adc sbb mov (bad) xor mov mov (bad) fnsave (bad) pop repnz std loop lods movsl jne inc jl mov mov cli sub push movsl repnz xchg mov enter sti je jb mov ja ds pusha mov or xor test push adc test push daa push pushf push sub adc roll push and adc repnz push adc mov test mov fwait rcll das out mov push outsl (bad) in movsl andb cld pop imul int pop idivb rcll cwtl pushf popa sub lods ss add sbb jge sub jns out lods repnz or ficoml jo sub mov into xlat xchg jle mov stc xchg es xor lret jmp ss adc lea das pop mov mov add push cmpsl aas (bad) cmp cwtl pop dec push les cmp adc lret int3 inc mov xchg sbb rcrl push lret xchg out lock es pop gs shrl or push xchg lds aas sbb repz add jmp shrl sbb mov or (bad) sub add dec hlt clc inc push movsl out fldl jb stc or imul lcall subb hlt test stos mov rorb inc inc std jne fmulp adc test int3 sub sahf (bad) inc mov inc dec test or daa jle add sbb iret dec xchg adc outsb push cmpsb ja add fildl mov cwtl mov imul jp cmp repnz xchg adc add sbb fnstenv mov mov push inc out sub inc cmc xor sub test hlt pop xor les test pop pop push call (bad) into dec mov repnz lea out mov jo jno sbb push jne mov in push sbb clc adc scas push mov adc inc mov jbe inc mov divb in mov xchg push cmpsl icebp in inc sbb push ja mov adc sub repz jle out aad lret nop les fstl xor test mov popf cmp popa stos in data16 int3 add fidivr test in (bad) inc sbb pop popa imul mov movb xchg popa test add mov pop mov dec insl add inc xchg dec adc dec and jge (bad) out adc pop xor out imul mov out pushf leave ret (bad) mov cmp xchg cld rclb test ja in cmc lcall aas adc or fistpll fwait xor xor or and xchg test std or push mov fmul sarl js in xlat mov jecxz xchg stos mov sbb imul xchg fisubrl in add mov jae sti or mov cmpsl adc les mov and push out jp add fs enter mov jmp push dec push xchg loopne inc pop in (bad) les or repnz sub inc pop mov xor sbb aas adc cmp out cmp push gs rcrb mov mov push xchg mov out add enter mov decb xor into jle pop adc fsubrl jp fisubr imul ljmp pop jbe imul jge or lods cwtl mov pushw imul out mov js out mov push sbb xor fwait push pop xor push mov sbb adc lock popf dec mov xor sub jle sub lods jl mov call pop mov jmp push fstl leave cmp scas inc xor cwtl imul rcl push data16 in insl ds pop xchg mov jp decl decb pop repz ss popa ss mov inc test push scas cmp pop sub (bad) lcall in das repnz xor int lods pusha gs (bad) push cmp addl dec repz mov gs jo movsl lock sbb xlat and and pop pop rorb xlat movsb icebp arpl xchg and xor jns mov popa or mov or push sbbl lock xchg sub or loop shrl sub aaa or addr16 xor xor ffree jle push dec in subb negb or insl (bad) and xchg icebp xchg inc leave pop pushf pusha je lock pop add cmp xorb jae icebp mov loop jp popa add aaa fs or adc adc push mov push or leave jecxz adc ljmp push fpatan das sub out sub les es jbe cmp repnz mov dec cmp movsl ja cmp rorl adc into repnz lea fdivrl xor mov pop arpl fs inc sti jg cwtl sarl mov pop inc fucomip repnz adc xchg clc repnz imul es jnp into ret mov xor sbb mov mov ss sbb repnz jmp (bad) pop stos and dec ljmp inc outsl push push (bad) jo push adc push into jp repz push pop inc es sbb dec sub cmpsl fsubrs jnp jo aad loop lret mov cmp out add lds mov fadds xchg cmpsb xchg mov in mov mov arpl mov sahf cli (bad) mov sbb mov (bad) repz xchg cmc pushf pop mov mov rcl leave lock or lods jg add pushf pop cmp jp das adc xor mov sub cmp arpl or mov push andl xchg cmp ja repnz repz lret xchg pop sbb pusha mov push loopne pop mov dec jl lock cmpsb inc xchg test (bad) jnp rcll icebp or mov jns push test xchg rcrl xchg mov xchg add nop pop clc scas fs ja cli clc pop jns push xchg mov and sbb mov add sbb sbb (bad) rol andl mov movsb jp (bad) sub xor sub pop cmp nop out xchg cmp adc dec test neg mov hlt cmp mov aam add gs xor inc cmp sub cmc or loop push iret pushf clc add test data16 pop mov xorb hlt pop int3 jae adc rorb xchg mov mov (bad) clc ret lock div or add sahf mov mov sub icebp fildll ja lret mov imul cld cs add mov jge punpckhbw fnstsw nop jns mov sbb sub leave and aas inc cli jp jg dec cmp pop sub add not add push jg insb daa rcr xchg jmp pop and stos adc mov js int3 cmc (bad) pusha jbe mov xor mov add pop xchg out daa mov adc add rolb subl mov pop in mov push data16 out test js mov popf mov cmp add pop ret xor sub daa xor pop cmovp in rcr sbb and (bad) xor xchg aad sbb sbb bound mov pop or imul sbb inc lret push cmp add shrb xchg testl xchg (bad) mov ret fcomps cld pop jl (bad) hlt test mov push push addl (bad) iret dec sub sbb outsb dec adc sub jno insb les sub lods cmc mulb sub mov push imul or ficompl jb test push mov mov into out neg push mov mov xchg dec inc into out cmpsl fwait hlt xchg test aas sbb icebp movsl in jne jl mov or or iret mov movsl gs call insl lcall ret mov in cwtl mov (bad) jg and ret jg (bad) lock xor inc test mov push xor cmp mov mov sbb xchg mov stos in or and andl imul add aad js fidivl ja adc pop inc (bad) sbb dec inc jg fsubl add hlt stc sub jg pop xor or idivb int3 out xor xchg test (bad) arpl js jne sub (bad) int3 xor ss adcb (bad) popf xchg inc jg dec push rcll push pop pop push sub out lds or xchg add fcoml (bad) popa fldenv or iret jmp aad aam sub jmp add call mov jo iret lret push sub dec lahf mov lcall mov mov ja dec ficom (bad) (bad) ficom not mov inc push pop cmpsl (bad) leave pop loop mov sbb dec jg sub sbb jg inc add stos sub fnstsw inc cmp mov xlat push out ret icebp jmp hlt inc sbb movsb adcb mov movsl inc and divb gs aad add mov les xchg inc iret stos add test and adc inc lock jmp movsb jg adc pop movsb pop jg dec xchg adc xchg call lock and syscall nop aam jne aad cmc (bad) cmpsl push clc pop or ja jb test std (bad) out out stos mov mov pop adc and jp push or pop lea ret and jno js jb inc (bad) out inc dec or fnsave cmpb scas xchg popa mov pushf fistp int and and push mov add mov jle mov push inc call or jg sub inc (bad) mov fldt mulb sbb pop or int int3 fs jne mov stos cs insb adc outsb sub sbb leave xor dec call (bad) stos add sbb lods adc clc popa pushf icebp add sub out ja dec dec lods push inc das pusha pop dec lods sbb pop leave sbbl insl mov lea sarb imul ret inc push shrb cmp push mov (bad) lahf aas test add pop rcl fcomp adc mov pusha loop out (bad) fst mov ljmp mov lock inc lods lret mov (bad) ljmp int dec pop inc data16 dec inc jns inc insl or test sub fcoml or into cmpsb std push push xor xor and icebp push xchg mov loopne xor sahf cmp cmp (bad) sub xor ss or insb jg jnp jno push jge push jle imulb mov loopne xchg iret jecxz push fsubrs cmp inc in xlat imul cmp pop jae xlat cmp jo ficoml sub cmpsl jmp out rorb dec adc xchg cli ret cmp ret and out xchg mov arpl fnstsw sarb lods dec mov insb pop addl sub xchg mulb cltd xor shrl jmp push mov std aad cltd shr std jae mov leave pop fldz lock sets and pop or stos and jp rcr fucomi mul enter mov jbe andb add mov xor jmp stos into lret sub imul inc mov sbb pmullw stc add loop xchg mov or sub jo xchg enter int test jge inc xor sbb cmpsb fidivl xor xor adc pop sub fnop sbb pushf dec (bad) (bad) mov movsb jne ljmp js pop mov sbb mov out inc shrb dec aad inc add repnz xchg adc lds fidivr fs addr16 and (bad) fs call push mov fbstp lods lret popf (bad) jbe xor scas add fucomp inc lea cld insb mov sub negl ja xchg adc test lahf (bad) mov xchg pop jbe mov sbb mov pop inc inc ret push xor jg imul int in pop out mov out inc insb or in sub cs fnsave pushf dec xchg out push inc and sub push rcr mov stos pop out sub jae and pop test dec adc les sub xchg and mov popf data16 scas push cmp insb mov mov or in popa test inc adc jecxz icebp and jmp roll aad sub xchg and pop lock outsl arpl inc and push (bad) push and inc pushf mov or into inc dec fsubl mov adc pop mov jg mov gs outsl xlat xor mov push out std ret xchg aam repz sub test cmc push inc sti jns pushf jb sbb and aaa pop or xchg dec nop call push sbb sub outsl push push add dec rol insl lret gs mov adc pop pop lock xchg ljmp clc dec sub notl or icebp pop jns cmp push xor into pop add hlt lock cmp leave adc push xor sbb cwtl nop cwtl add ss jg push cltd cmpsl fs pop dec (bad) in xlat je pop add pop les sarb dec xchg cmp sbb aam cmp test fdiv push into scas pop (bad) es jns cmc in jns outsl nop xchg sbb test xor inc lret aaa mov dec pop lcall lahf sbb loope sbb sub fcoms sub sub and push movd es imull std aaa insb (bad) sbb (bad) inc popa into or or push ret mov add pop push stc outsb jle fwait ja or mov push lods sbb rorb mov and mov cmc adc push and aas xor pop arpl loopne mov ljmp mov leave mov dec cmc and loop repz xchg (bad) sahf mov push sbb dec cmpsb nop mov jbe gs mov mov push insl and nop dec lock cmp xchg sub push repnz das ret inc mov sti cltd dec or mov loope xchg test das call adc cmp out xor jmp enter mov fadds out sub test (bad) sarl mov dec sub pop pop add jle std lods test inc dec dec shr mov xor mov dec (bad) jne fwait ret sahf int rcr inc xor stc addr16 pop and push icebp addr16 cmp jae insb stc aas xchg idivl mov inc jle cs iret mov negl call mov out dec xchg imul pop popl (bad) jbe (bad) sub (bad) ss push dec sub paddsw xlat xor cmp adc aam xchg fnstenv add loope or mov je in stos (bad) pop sub cmp sbb jp test fidivrl xchg (bad) aas jl jno rorl pop stos and add daa jb and xorb sub sub shrb add inc dec pop cmc sahf sub (bad) daa xor and xchg dec pushl scas fcomps bnd fisubr mov divl jno rcr sub std push cmp dec dec pop mov sbb pushf fimul sti mov inc sbb cmp mov mov movsb jge loopne,pt jns push mov sbb sbb and jp cmp inc mov js (bad) subl daa sub (bad) and mov repnz jno inc push jne gs mov subb fdivl (bad) and in es test jne mov ja mov adc fs scas aas pop lock cmp push push mov test jge pop (bad) and inc loopne and push add test in arpl add insb loop ficoml jno push xor imul stos (bad) rcl add les out add popa ret or push adc pop loop add push xchg cmp outsl lret cwtl repnz jae (bad) jl xor mov jne icebp std stos insl sbb pop les (bad) ss mov ret cmc andl cmc outsb mov sub ja (bad) jo cmp into mov call cmp fwait push lea icebp mov lret scas cmp sbb insb cmpb sub mov ljmp dec add mov cmpsl repnz dec inc js xchg xchg and and aaa xchg pushf xchg dec fsubrl mov add push ja (bad) lahf stos not adc mov popl loopne xchg loopne cmp mov jnp mov iret sbb js (bad) xor push loop rcll mov insb test repnz ds sbb fcomip movsl jae imull dec cwtl testl gs sbb mov jo loope gs mulb jb adc dec push jbe sub das push cmp mov mov push int insl or mov push cmp lret loop and mov (bad) push cmp sub mov lods ljmp mov sub sbb insb cmpsb int xchg cld scas cwtl lret das inc push mov dec mov addr16 insl rol add js lods mov repz mov xor in fimul insl js repnz jg andl xor outsb (bad) call cmpsb cmpsl sbb push mov test test pop mov shrl add inc jno (bad) xlat subl dec jp xchg lods insb aam ja push adc repnz inc pop stos pop mov xchg inc in lret pop dec sbb sub loopne and fadd pop inc and add adc and mov pop mov fstpl sbbb mov add fwait and sbb stc pop xchg ret xor mov push enter jno andb mov and push jae test mov popf sub adc cmp test ja das fildl cs sbb in in in dec (bad) clc mov and mov dec sbb mov pop mov or jnp mov aad (bad) mov fsubrs mov outsb or iret adc ljmp je test in mov into pop icebp cmpsb sbb ret cmpsb scas dec xchg daa sub pop cmp push into pop loope arpl sbb bound xchg mov inc cmp add sbb and mov dec or push or xchg mov push mov icebp or mov and cmp test pop loop jbe add xchg aad rcll mov add or and sbb repnz in xor xchg sbb add mov inc jo sbb sub mov negl dec pushf mov orl sbb mov mov ss adc idivb aaa out movsb imul jns lds mov mov xchg pop mov pushf fdivp jb stc jnp lea sar jnp movsb jp push sarb popa adc dec (bad) pop mov sub mov dec jge mov or (bad) sbb mov es fimull push lock dec in jg sbb popf fildl mov xor add adc xchg daa nop jp mov cli sbb clc popf jno loop pop in mov dec aaa je xchg popa cwtl in jne mov or (bad) xchg icebp gs adc jno xchg inc sub in imul adc insb add push xchg xchg adc pop inc mov aam cltd xor enter (bad) hlt mov dec lds cs aaa sub jecxz add xchg ret mov adc jne pop sub lcall sub testb cmp xchg popf fisubr mov cmp lahf xor cmp mov dec dec add cmc and adc shll test sbb pop pop cmpsb pop push push ja pop inc fsubl gs rclb sbb rorl cmp add js stc sbb les int inc push and in push adc lahf clc lock idivb lods xor fisubl lds push fstps bound add adc subl dec arpl sub negb scas out sbb stos outsl sub mov pop test addr16 pop or rorl add movb loop js push iret jmp sarb dec popa out cmp mov lahf je dec dec (bad) hlt inc mov pop jbe out or xchg aam sar jl sub xchg inc shrb inc push clc mov (bad) pop sbb pop push xchg fisttpll mov mov xchg sub cs and inc push aad or adc mov pop jg mov pop adc movsb mov cmp xchg shlb xchg lock test mov icebp test jno ret pop jl xchg cmp add adc (bad) push aas je (bad) dec div inc out mov stos fldcw inc push adc xlat xchg pop pop aas xor jne mov ret adcl push fst xor popa mov jecxz mov and sub (bad) loop rcll xchg nop mov push ret call adc das test fcomp cmp mov mov (bad) sahf pop sub lea jns imul fldt lock hlt sbb test xor aaa cmp adc jne test test popa push andl mov pop aad and push subb push or push daa cwtl mov (bad) adc call mov jbe leave xchg sub sub ret das push adc test and aas shlb adc inc sub mov dec sub aaa pop cmp mov cmp int jmp sahf into adc adc dec nop pop loope jb jp pop repz (bad) stc cmp cmp stos aad mov iret les cmp xor loope out sub fisubr repnz clc out and (bad) (bad) testl ds mov pusha movsb popf imul dec push outsl test shlb sbb add jb mov cmp pusha mov cmc mov rep add xor jne orl pusha push (bad) xor xor lret jmp ja jo lds in imul cmp jmp in aaa out pop rorb xor mov pop cli inc jae jb insb add pop sahf xchg popa mov mov push daa sbb aam pushf stos arpl fimul pop and in rorb push bound xchg loop pop sbb movsb lret ss mov addl and (bad) dec pop out and cmpsb add add aad pop movsb push sbb in push dec push mov push je int3 dec stc out or xchg adc push sub inc sahf das leave ljmp push push les jno popa enter dec negl or or cmc or pushl test aam inc add je push mov adc je (bad) inc loopne incl push push mov mov mov inc push inc and lahf mov js sub inc pop je (bad) and mov negl push pop scas pop cmp pusha bound lahf cmpsb add repnz jp (bad) (bad) dec lea popf xchg jp cmp (bad) mov lret movsb mov rcll pushf cmp sbb pop outsl (bad) jecxz cltd out xchg mov hlt lret in xchg mov mov push inc nop lcall in lahf insb (bad) jecxz jno sub fimul xchg out cmc rcrb stos dec insl stos je,pt sub cmp inc push dec lahf inc insl addl ret push lahf mov cmp dec jo fdiv clc mov (bad) arpl add das or pushf and loop add out sbb adc (bad) adcl xor cwtl xor mov jno and sbb jb push xor jp ds mov pop xchg push dec jno add sti call or negl xor and or in lahf fsubrp lahf add and test mov (bad) xor loop (bad) mov stos out xchg insb lea xchg lret or sub adc daa sub cltd rorl dec repz dec call out lcall pop std insl push cmp jg (bad) pop push mov sbb mov out lods adc daa cwtl jno flds sub aad xchg (bad) cmc cmpsl je imul push stos mov test shl adc jne arpl repnz imul mov ds sub les mov cmpsl sbb and mov jecxz inc aaa dec sbb scas jo add lret ds mov sub cmp cld leave repz imul mov sti mov stos jl les pop outsb xchg pop cmp xor push jge pushf inc jnp mov add sub icebp pop lcall pushf stos sti fmuls mov or add cmp daa jbe dec int gs es or jg (bad) stos dec push ret fwait xchg mov push jecxz xor mov jnp in out pop loope loopne insl and stos push pop outsl mov sbb je,pn lea arpl pop jb sbb mov rcrb (bad) inc mov lock movsl ja into inc sbb sbb outsb lcall cmp aas fstl dec mov (bad) pop out add sbbb xchg jmp jl push dec mov add jle out es push mov push ret sbb enter out push fstps outsl mov fbld mov jae jmp adc jp imul ret data16 mov jae xchg sub fiaddl stos lea inc mov je div out inc sbb arpl jae (bad) jne stc shrb xchg js sub mov ja push (bad) fnop (bad) gs jne xchg jnp fnsave sahf lds add mov stos neg (bad) (bad) mov cmc hlt loope sbb jmp jle lock mov push mov mov lock je iret pop mov jecxz leave mov movsl popf mov lret mov jbe cli pop cmp aas inc push mov push sarb fiadd (bad) leave idivb shrb adc cmc pop and loop addb sarl (bad) lods mov movsl push (bad) pop aaa ja mov and je push jge lock pop int push fdiv pop add mov pop cmp adc sub (bad) hlt mov pop bound (bad) jp je fwait outsb jle add iret lock iret cmp test in cmp imul (bad) and movsb fs mov sub aam mov xchg pop jp dec imul int3 out aad fidiv sub pusha (bad) jo push sub iret int jno or aam loope imul jge enter aaa dec mov mov push mov (bad) mov out mov ret pop cmp jo (bad) cmp or fldcw inc int3 mov int stos cmpsb loope bound xor ret and jo mov lcall xor inc fidivrl or mov jle adc dec xchg cmpsb push push mov out dec sub dec push test out xor jecxz lods add mov cmpsl pop xor lret into xor idiv imul icebp mov sti adcl jp popl fistpl xchg test movsb mov adc out sub xchg add and stos jg ret add mov out or scas insb push dec xchg xchg xchg mull or aaa aaa int std cmpsb adc pop push inc in jle jno mov push mov icebp cltd xchg jbe jle mov addb inc lea test xor pop stos mov mov mov cmpsb fildll inc jbe subl orb sbb push adc sbb add xchg cmc enter mov aad inc mov cmpb mov pushf lret cmp mov mov mov xor (bad) dec pop test or sbb arpl and rclb cwtl js jno gs popf pop sub cli ja popf mull stc mov popf mov and into dec mov mov push mov push push mov pushf mov mov sbb jb out pop jmp sbb and cmpsb addr16 jnp ds mov push mov pusha push adc push adc stos fidiv movsl jl xor pusha bound xchg out cmp movsb aam test pop sbb loopne mov jns xor xchg es aam mov jl jecxz and ror je xor test sub movsb mov xchg adc mov test insl out das inc xor in adc (bad) jne sbb and bnd mov cmp xor int fiaddl pushf mov decl mov leave into mov (bad) fcompl mov cld sbb data16 cmp in aam out cli or mov ljmp sub push pop mov int3 stos cmpsl mov ret decl sbb popf push (bad) mov adc push sbb mov xchg jno or push inc inc jge lds aad mov idiv inc (bad) mov push sub test jns jl sub push cmp inc arpl dec popl xchg je int cwtl xor xor mov sub lea enter test mov mov xchg mov mov fdivl dec divl xor xchg mov dec sbb lock fcomp int3 cltd add fcmove iret xor pop xor mov inc fstp movb fst shl pusha cltd jg jle out std or xor nop es mov (bad) inc cmp lock aad loopne insl or loop mov sub dec mov push sbb dec mov mov test mov in lds mov add (bad) dec xchg repz push mov xchg andb cmpsl or inc pop dec jnp scas popf shlb cltd cmp mov sbb test lods xor cmp out sub ret cmp cld into push out adc jl in fldcw sub sbb xchg mov sbb aad xchg mov or and in push dec add test test lock dec movsb or stos xor test paddusw jp push rclb int rcrb fimull or ss imul popf cld xchg lahf insl or sarb push (bad) cmp lds jecxz mov sbb or cmpsl scas or sbb rcrb or test ja mov daa mov stos lds xchg js add cld sub dec xchg mov mov push add outsl into and rolb sbb dec loopne test data16 popa sti push sub push pop in jae or sbb jl into lds (bad) repz pop cmp imul repnz xchg pop jne inc arpl sbb xor cmc popf subw mov lcall leave flds dec pop hlt dec out pop jae mov sub mov daa push lods fildl push pop es mov mov (bad) xor enter push das and insb dec pop push insl sbb into leave jne mov jecxz pop movd xchg add sbb outsl mov adc scas adc mov int outsb cwtl sub stos jge xchg sub aaa inc sahf pop pop insl cmpsl xor cmp xlat pop test inc in mov ffreep pop addr16 ja jmp jp mov push and xor mov mov jmp push cltd jge or lods cmpsl (bad) cmp push iret inc test push lahf push out fucomi lods rcrb cli jns and cld shrb fisttp cwtl fisubl adc test sub cwtl data16 mov in aaa push out add and xor test int imul jns roll bound jmp mov ja jmp or push push and ljmp dec outsl fdivrp lods addr16 jne std mov scas repz nop mov (bad) mov xor shl xor (bad) cmp in fcoml nop ret ljmp mov repnz mov es out out mov jg mov cmp or lds mov push in inc xlat dec mov (bad) jae push mov enter adc jae cmpsb xchg std out rclb mov inc sti inc mov loopne pop clc mov jae shll fisubl pop lods mov popa fidivl push inc (bad) mov into stos adcl jne leave test sahf dec push icebp jl sbb rclb jno jge popa push cs rorb cmc sbb jmp aad mov xchg mov lahf or mov inc push adc pop out push mov imul arpl out mov fistp jle (bad) imul jmp jb inc sbb dec and bound je dec push test (bad) in ljmp lret jge (bad) jns imulb add out jmp add scas insl sbb jmp sbb pop xlat (bad) es jmp (bad) sbb aad jge sub mov add fdivrl ds jno movsb das xchg cmc push in cmpsb inc mov inc pop adc aaa or adc push (bad) jno pop fmul adc xchg xchg int3 pop loope xchg dec lods (bad) mov inc mov sar (bad) into out cltd push pop in mov jp loop xchg addr16 mov xor ret mov in push fwait dec mov and sub data16 int3 mov mov ss test pop sub lahf inc es aam in pop mov call cmp pop clc cmp add rcrb inc adcb out pop inc std nop mov movsl mov stos sub lret stos xor jp adc push stos ret jbe iret setb sti dec xor scas (bad) nop (bad) dec add enter fnstenv lods stc icebp inc repnz jb mov (bad) in popf repz aam or lds lret enter pop add and mov xor into (bad) mov aaa xchg adc sbb cmp xor repz rcl flds mov in mov aad testb mov jle fnsave mov (bad) lahf lcall jno inc ror adc inc popa pop xlat lea mov mov mov gs mov xor test pop and cli cmp mov prefetch testb jge aaa sub (bad) mov incb sbb add jnp ss sbb rcrb xor sub dec mov add mov push movsb in in lds mov gs lea test mov stos aas jg rorl or xchg adc cmp add lods mov insl cwtl cmpsb mov xlat icebp (bad) je xchg xchg pushf jp inc aaa jbe push loope loopne cmp push jmp cmpsb xchg push mov mov add aas xor outsb (bad) fidivrl xor ds sti loop lods pop push aam xor inc popf movl dec push (bad) aaa in insl ror jge jnp mov xor repnz mov sub pushf mov push jp test ja jge fwait pop mov dec or adc shrb fwait cmpl lods lods mov bound jno pop jno stos cltd mov sti aad mov aaa jno addr16 lods sarl mov inc hlt daa mov cli lcall xchg pop jp push jl movl cmp pop fisub cs lods mov pushf add dec fdivrl and jno mov jecxz jecxz xor into test inc sub int3 nop inc nop rorl das ja (bad) (bad) scas jg movsb jb leave dec popf ljmp cmpb mov iret pop pop mov add inc std adc add push jbe dec rcrl pop sbbb xor pop out fptan sbb ja xchg xchg mov jp mov cmp lea (bad) pop ss mov roll (bad) cmc mov cmp test mov das ret jl cmp or mov loopne stos mov xchg fist xchg js lret sub sahf aas rorl and sbbl mov aad pop sub push sub add ss mov insb push and stos jp (bad) loope push dec pop xchg adc movsb xchg fsts adc mov dec js add dec jne pop test outsl dec inc test dec push pusha lods not in jnp pop fiadd scas outsb in xchg popf data16 pop jecxz xor jmp loope test mov stc or les xchg push mov dec add jnp enter test movsl sbb lods (bad) rcll and mov mov pop call pop push push adc insb out dec add out stos (bad) mov push fs ja inc cmc cli js pop inc repz mov jle aam aad lods push and push nop inc pop or setle insb (bad) stos mov rcrb adc imul jns ret xchg xor in insl mov push mov rcl mov je scas xchg lock (bad) mov in lret xchg or xchg lock xor out mov data16 mov xor cwtl dec mull leave cwtl mov pop fisubrl int3 xchg pop dec and scas xchg xor sub mov insb xchg mov or insb push xchg mov lret xchg sbb outsl xchg mov dec out xchg mov dec das cwtl xor mov aad pop dec aas mov dec scas data16 ljmp outsb mov cmp push inc dec lahf mov pop pop ds insb (bad) cmpsb and (bad) sub into xchg (bad) push xlat xchg sbb mov or out and in aam stos lock pop and mov xchg decl xor xchg imul out popf mov xchg mov pop mov xlat xchg sbb imul pushf dec xchg and xchg pop push dec mov iret (bad) stos in jl mov in sahf xor into sbb leave out hlt and test pop pop pop imul push add sti or xchg stos jmp cli aad mov xchg xchg jbe ljmp mov (bad) jle mov xor or and hlt or repz dec sub add pop mov scas negl adc in jb aam mov jo mov pop cs sahf pop mov ficoml loope or mov movsl add mov sbb xchg insl pop ds pop daa (bad) imul (bad) jo jo dec sbb dec cmp dec shll call push test or push push pop das jp mov test pop iret sbb pop mov jo or inc pop sar dec xor jp testb xor je lds insl (bad) imul xchg sub insl push dec mov mull push or sti sarl loope notb sbb ret hlt jmp sub xchg jmp mov jl mov push fucom pop cmp repnz sti jns cli or std out xor je clc shll aad xor pop adc push add lcall add clc (bad) test add clc push (bad) cld cmc sub in cs xchg dec arpl jnp cli pop and shlb lcall jecxz mov xlat in hlt mov (bad) shrb rcrl mov cmp xchg scas ds scas daa sbb adc (bad) das rolb sbb pop divl out cmpsb in out (bad) bound insb in cmp cmp lods aaa scas dec test xchg scas lret pop mov adc call test orl mov iret (bad) movsl repnz jp test push les xchg iret (bad) sub xor out xchg aas inc in xchg cmp imul rcrl mov cmpsb xchg jbe inc (bad) or je pop xchg int3 mov ljmp nop sbb in sub and or cwtl sub lods mov cs or out imul (bad) mov bound adc pushf dec (bad) or movsb mov jle xchg xor sub (bad) lea mov js call dec sub iret das cmp push sbb cmp cmp jo or mov pop cmp jmp cs xorb jg cmp lock jno mov imulb push pop es cmpsb bound lret adc pop (bad) bound out into call fidiv sub iret dec fiadd inc mov xchg out jl adc push daa jnp xor adc adc xor sti or jb scas test scas mov xor xor mov inc into movsl iret inc fsubr lods fsubr movsl push fsubr dec outsb int3 leave push in lahf test sub popa sub shll lods push cmpsb clc push jmp fcmovnbe jmp ds (bad) cmc sub cmpsl mov pop add lea jle jp push stos jo dec rcr push jbe fmuls mov fcmovbe mov (bad) push popf mov jmp xor popf sub adc adc or and jg sbb les mov (bad) aad jge mov les insb sub test in jmp xchg aaa inc jae outsl add mov iret dec xchg or and addb rcrl sti and mov adc int3 arpl push sub mov lods sbb fnstenv sti push jmp dec inc jno aad leave icebp or lods inc les lea test fbld pop jl sub ror into jmp cld xchg push fldl2e cli cmp cmp mov popa imul fistp add dec int3 rcrb inc imul lods xlat out movsl rorb shl dec sbb fidiv (bad) push and add mov mov or rcll out test (bad) pop jecxz mov (bad) sub sbbb cs outsl inc test sbb cmp popf inc stos mov ret imul adc jb add iret sub lds jne jmp daa jmp loop nop (bad) push jp stos (bad) imull in outsl aas push in push or mov into adc dec (bad) mov xchg sbb pop inc mov pop cmp cmpsl jp cmpsl ljmp pop xlat int jl pop add mov cmp push out pop xchg adc mov std mov test das dec push pop push imul jmp pop jae je outsb add fisttpl aas dec or jo fidivrl in cwtl pop push pushl loope push loop sub ja addr16 hlt insl add loope mov pushl fcmovnu jmp in sahf push or push xor jmp ljmp stc int3 ds in push addr16 push sub and pop pop (bad) adc adc pop push imul pop inc fs mov cmpsl jmp rol das push mov (bad) das xchg xchg mov xor mov jmp sbb push lock dec pop scas cli ficompl pop mov and sarl pop push jns inc xor in in fimul jge leave xchg fnsave imul cmp push dec loop lahf push inc xchg in enter (bad) je mov mov aad push pushf mov or aas sbb dec pop or jno stc rol clc sub sar add push sbb out sbb mov or out stc mov and jbe sbb lods arpl scas mov js les nop mov jge je push je aam pop int3 out popa push scas sub jl in test push sub and in mulb sub scas jecxz inc (bad) adc jg add add les xor adcl mov loop xor sub jnp int inc imul mov xor (bad) cltd mov fistpll add popa cwtl lds add sub sbb aaa jg insl pushf scas imul add add and insb xchg pop xchg cli lret pushf mov xchg inc xor out push push xchg (bad) sahf hlt dec cmpsb mov into (bad) mov add daa out lods or or insb sub lahf fisubr fistp dec push lahf gs test clc sbb scas dec cli push repnz in test loop jge sarl in ret cmp push scas jae stos (bad) cmc daa neg cmp xor pop dec cwtl xchg sbb insb test jecxz add xorb cmovns add iret cld jo popf push aam ret je incb mov mov lret jge fs test jge jle test bt or jge dec push mov clc mov cltd xchg js aam scas pop dec not sbb inc movsl je lcall insl cli cmp loope cld ds mov (bad) cwtl pop inc sub sti mov add (bad) push (bad) or or mov dec es mov imul loope adc or or or jns jmp or xor pop mov nop pop xchg lahf mov arpl popa and mov adc jbe in loopne push aad lods cwtl test cltd orl mov push jne pop sti cmp pusha adc mov push sbb xor add mov dec sbb je inc and cmc aam push push sub cmpsl hlt or into cltd cmp (bad) push jge aaa je lea jne test pop bound dec xlat stc mov mov dec sub inc stos div lcall imul pushf rol insl cmc dec (bad) aas ds mov xchg std hlt mov ds inc stos mov push loope jge push mov das adc xor pop mov (bad) jnp outsb add jle lret jmp xchg orl leave lret pushf push imul jmp fs js inc push sub call jns into inc sbb mov add enter popf das or xchg rorl jmp (bad) or divb jmp sarb sbb dec pop lcall repz mov stos icebp mov inc inc dec (bad) or xchg aad gs or sbb inc inc decb xchg cld pushf push lods rol pop jnp sti or cld test cmp repnz mov aaa fldt push mov les int clc and or mov jo jmp sbb mov mov push xor jnp loopne pop push jp inc inc mov dec cmp sbb sub les lods cmc ret jo test lahf in jne mov mov and lret jl divl into cmp mov aas cmc daa shrb std sbb xchg mov add cs dec in pop push cli lock jp hlt mov pop jo jg js cld mov (bad) pop scas mov loop cltd mov mov fcmovne in movsb push rcll test pop push xor cmp pop (bad) jo aad mov in mov sub sub stc inc or pop dec lahf ret inc inc (bad) imull (bad) icebp es jae cld fisttpll add mov insb dec ficompl movsb out shrl push pop jo mov stos out adc add cmpsl adc dec mov add fsubr push daa mov mov sahf and xor jbe cmp mov outsl adc xchg add std xor sbb xchg mov mov outsb cmp pop enter stc adc mov or (bad) pop inc push and pop lcall mov aas popf fidiv xor lret test mov imul jecxz pop cwtl es fist lahf fsubp fistpl les popa dec cmc xlat int3 mov orb cltd add (bad) fs enter imul or jae insb lods popf mov std cmp inc insb ja mov rol stos pop jmp cmpsl dec insl out je push fsts pop movsb es imul pop (bad) or int dec shrb rorl dec or movsl jbe pop cli faddl sahf into in testb lods nop push mov xlat push dec mov lods mov push push pop neg gs das mov shlb and (bad) aas inc mov cmpsb mov mov cmp rcl sbb je int3 mov lahf or push je xor iret and pop imul pop mov imul and pop pop loope push pop scas dec or inc icebp out andb hlt ret jg sub sbb (bad) scas rcrl arpl (bad) xlat (bad) test (bad) je mov pop sub mov outsl dec shrb lahf rorl cld cmc mov enter (bad) stos jecxz or sbbl xchg (bad) cltd or data16 mov loopne icebp out or push adc fadd ficom push daa xchg clc scas daa sub cwtl cmp daa mov cli lcall sti pop (bad) pusha sub sub (bad) cmc cltd mov fmuls xchg insb rcrl mov and movsl jmp dec jge imul sub mov fimul inc into stc insb jmp out pusha and push mov jnp loope cmp dec pop fisubr push jg sarl cli jo shll (bad) (bad) movsl addr16 pop push sbb jmp push push gs inc iret lods jb inc inc pop dec les idiv stc push mov shrl movsl mov push dec push int fdivl mov dec push rol mov push fdiv (bad) cmpsl fldl cmc mov int3 jmp add sub in push lods negl xor fucomi cmp das stos cmpl mov scas call or pop add pop psrld jecxz push or sbb fimul sbb pop out inc and sahf scas jle jmp in jg std xchg aaa xchg mov inc (bad) (bad) rcll push rcrl das jge jnp cli xchg jb lret inc stos rol ficompl pop mov iret dec in pop push xchg mov sti mov mov mov mov rolb lret data16 (bad) cmc push popl dec xchg ror (bad) cmp push adc inc sub inc clc sahf or pusha ja xor sub stc out pop imul (bad) jbe jbe push outsl jecxz mov xchg cwtl push lock sbb jmp mov mov lds fstpt (bad) mov mov rolb xchg scas fisubl sub loop jmp test adc mov clc lock mov mov cld jno mov insb fnstcw push into add fcoml scas je movsl mov or ret pop cmp cmp pop push xlat fidivr das cmp mov aad adc movsl pusha sub jb (bad) fldt xchg inc sahf adcl aam or lret (bad) inc and mov int repz xchg cmpsb pop xchg mov jne addr16 jbe xchg adc (bad) stos addb sahf adc imul enter adc lret xchg gs movsb in je or dec or mov iret jmp scas scas popa xchg loopne pop scas leave les ljmp dec mov push ja cmpsl mov xorl xchg mov (bad) mov pop mov lret fcmovnb sub inc mov push pop sbb fdivrs addl inc into stos push movb mov leave adc loopne outsb dec (bad) inc jae fldcw mov inc cmc inc or addr16 mov sub jnp outsb xchg jmp xchg sbb (bad) loop xchg sbbl movsb push stos jmp fdivs sub or push jns fwait ja in insb icebp mov stos into jne jbe dec and lahf fsubl mov js dec icebp jae adc or insb xor add addr16 (bad) mov std jne aaa mov fs out xor adc jo cs adc mov jp pop in dec jp nop dec adc push or test jns into ss mov pushf inc add or lea jae idivl or inc fsubs xchg fistpl or imul sbb inc pop push dec movsb in test mov mov (bad) repz popa mov sbb adc loopne dec mov fdivrs fs mov (bad) push and jge add mov sbb dec sbb mov mov dec shlb stc rclb imul gs sub pop sbb lret sub test or and jge ljmp sub mov je sub aam mov mov sub add daa mov fwait in inc jbe test sub jecxz xchg push ds sub (bad) pop xor mov and inc iret hlt xor sahf leave mov int3 fisubrl sbb out lods dec into jp iret and lods jae sub mov js cmp mov sbb or dec xchg test lret and or push xor lea sub mov ret loopne mov addr16 mov (bad) fxch movsb jne popf fisttp add xor xchg clc xchg mov lock add (bad) fst pop daa jl enter xchg cmp (bad) repz sub or (bad) mov push (bad) mov roll fwait cmc test add cmp jb clc in mov bound inc add les rcr out sbb jl outsb or incl fs rorl dec pop out jns inc xchg mov add cmp cltd or push (bad) fxch jno out fdivrl aaa shrl pop scas inc pop sbb jnp pusha inc in loopne mulb pavgb sti lods mov add rcrl stc dec scas loope sub fimull sbb mul mov in dec cltd imul (bad) aaa pop inc dec in xor push pop insl outsb xchg cwtl popf push js fsubr (bad) mov rcl dec into cli mov (bad) mov add mov sbb add faddl in clc jg in xchg ljmp jbe mov push pop enter jmp pop out cwtl (bad) rorb dec add daa jg rcll mov pop push mov ljmp pop test push arpl add stc arpl or push adc inc insb scas test adc push xchg test out sbb push enter jl cld js add ror push mov mov sub mov push popf sahf mov cmp out je cwtl xchg push les cmp push or paddusw dec pop jmp stos mov xchg or mov mov test pop insl dec mov jns dec push fisub out fsts outsb mov sbb pushf in pop lahf or sub jno jecxz repnz pop inc dec mov lods cs and into rcl cwtl shrb mov mov mov pop pop sti iret insl rorb jb add jnp push fild rol imul (bad) inc lea mov and aad loopne movsl cwtl aas mov inc stos sarb pop loop sbb dec cwtl jle (bad) push mov mov pushf je mov shlb iret popa add push call and or xor fidivl mov test (bad) and orl mov lcall cwtl adc mov sbb sub lods sbb jb testl in inc pop inc pop in fs aaa (bad) arpl cmp shl inc xchg in frstor iret and pop pop pushw xchg out or sbb out lods dec movb push xchg hlt push (bad) aad push test add insb outsb adc pop addr16 dec cltd fidivrl cmpsl insb add mov xchg inc xlat lcall pop or rorl jno,pn cli or outsl stos and push pop inc or pop popa sbb push jle fsubrl xchg push ror mov mov fs imul jno mov xchg std pop mov rcrb cmp daa repz lods mov stos (bad) fsubrs movsl and jle pop addl pushf out into inc lcall ja imul cbtw xchg sti xchg cmpsb xor adc test push lds js xchg push push test fdivrs adc jbe andl das repz xor and and scas mov out mov or sub scas cld fcompl mov fstl cmp (bad) fildl addr16 lods cmp inc orl fstl js push movsl insl lods ljmp sbb rorb out jl sbb mov insl mov mov xorl sbb push repnz sbb or imul push pop pop sub lret inc or imul (bad) jne aam inc out xchg jl shrb pop sub lods adc adc sbb fucomi lcall pop lcall dec ss rclb leave jp pushf mov loope scas movq xchg imul push int3 repz fist jle insl stos (bad) aad push push (bad) das cli pop xchg shr mov ds pop aam or lods and pop xor movsb jns push sbbl (bad) clc dec xchg sub jg test add cmp gs vpaddusb push dec gs mov jns ljmp fcmovu enter xchg mov pop (bad) addr16 or push sbb loop pop and mov out insb movsl jo jp popa cmpsb leave push pop repz fdivl mov ret loope fcompl sbb imull out cmp pushf adc add dec pop push xchg rclb cmp stos rorb stc sub inc ds (bad) mov dec xchg rcrl jae insb jne aad aaa push movsb mov pop fcomps imul xor xlat rcl jmp into outsl and out sub addr16 inc mul popa fsubrl out hlt pop push and into sarb out out imul ret loope rcrl and popa (bad) mov lods mov push cld (bad) mov fidivrl mov sbbb andnps sub or sbb loopne mov sbb fsubrp pop push imull stos inc dec pop fmull pop jb test in sbb and cmpsb mov sbb sti test pop add gs out xchg aam out xchg mov (bad) mov cltd or adc adc stos insb jne mov enter lret push lods ljmp jnp adc aad call cmpsl ret loopne sbb inc flds das dec mov sbb xchg stos jl lea rcl les sti inc cmc mov dec mov mov push push pop movsb xchg insl dec dec gs jnp dec scas mov cltd fwait adc std scas pop jbe jnp hlt leave push into int3 test rclb insl and cmpsl mov lahf (bad) mov inc xchg xchg xchg adc cmp or mov mov pmaxub test sbb (bad) cmpsb dec mov (bad) push es rcll sahf enter cli or jge cmpsl mov mov inc cmp in imul push push dec jne int mov jle,pn lods stos (bad) repz or jmp repz fwait xchg mov imul ret scas rcll clc dec sahf push aaa les adc add adc jge mov mov or lods and xchg pushf scas sbb (bad) in adc pop push lock push xchg xchg cmp sub andl lcall (bad) icebp (bad) std jge xchg stos lock mov pop ror daa adc mov xor imul xor inc lods test lahf dec addl repnz int jns mov test dec adc sub cmp gs pushf xchg pop mov xor jns rcrb add call inc cmpsb nop ljmp lods lds mov jns jmp popa dec add lods fnop sbb jp lahf rcrl mov fist jp mov enter std stc (bad) cmp pop mov xor adc inc add xchg (bad) cmp in cli adc jle addr16 aad jbe mov inc sbb ficompl mov dec push cmpsl ds mov push mov sub or sti inc das inc (bad) mov mov cmp ljmp cmp mov stos fistpl pop insl xchg sahf dec push inc outsb (bad) (bad) dec enter mov rsm lahf int daa dec in dec mov mov mov sub push or add or loope mov xchg ficom mov out movsl pop push movsb shrl sbb ret mov loope (bad) or jo ja mov and dec lods add pop add inc in clc inc and sub cmp arpl jle stos daa loop push lcall test rep inc movsb pop je push fdiv decl mov jp lods mov andb sti inc aam (bad) int3 ret xor inc inc mov ucomiss pop dec mov nop shrl cmp pop fnstsw dec jmp lods lahf mov add ja pusha xchg push fstpt aaa nop inc cmp push lret xor pushf jb mov stos mov stc das test and fnstenv pop mov jp test mov xlat mov cld jno stc cmc cltd out push enter ljmp fs cmp stos lcall sbb jbe and push ret sub out nop movsl jmp aad jne xlat dec out daa cmp (bad) vphsubdq adcl mov pop fild fdivrp (bad) cmp pusha pop fmuls cmp sti or insl or xchg mov pop imul (bad) mov inc dec out adcb mov rcll inc mov sahf jge xor xor inc sbbb andb imul xchg xchg sbb pop push push pop add pushf scas mov push (bad) leave in int3 fisub test mov adc jmp xchg mov pop (bad) fyl2x lret mov or sub test fst out and cltd xor pop fimull fwait sub inc insl test pushf cltd iret je icebp push add loop mov gs pop test pop fcomps loopne dec cmp sti or out xor lahf mov ja insl shr mov or fs add in push push les daa loope loopne and js movsb inc mov mov outsl in xor out outsb xchg (bad) test insb pushf and sbb mov sahf inc pop sbb test ret or add jp loope clc pushf pushf nop lcall (bad) push inc cld pop xchg mov pop hlt sbb lcall add jl mov fldt test call lret mov imul cld adcb mov xchg mov repnz jae pusha cltd aad mov pop data16 movsb leave mov pop inc inc add pop or sbb or jmp cmp test add xor call xchg sbb imul sbb cwtl adc mov xor adc mov clc sbb addb jmp inc (bad) adc daa addr16 movsb or inc imulb or or adc addb setne pop (bad) mov arpl ja jg mov dec addr16 negb popa add popf pop or mov inc stos push pop push test mov xorb mov and lock xor push fstpl pop adc adc lcall outsb pop add ja and mov sbb mov pop das stos lock or dec sbb pop jge mov lods les fsubrs or cltd xor push mov push gs mov push lods std mov push out movsl pop and dec outsl cmp fldcw add jmp cmp rcr mov movsb xchg xchg fsubrs jns loop push out adcl jle lret adc into outsb loope clc dec push dec jl pop jno inc aam mov (bad) leave mov and xor add mov fs xlat aas ss imul (bad) cwtl in test sbb inc test mov sbb inc mov std rcrl negl (bad) xchg mov or popf pop insb pushf aad jge std dec mov push loop fstl (bad) dec roll inc out (bad) sbb push mov pop sahf pop dec mov popf into mov mov lods insl test sbb add loopne push cli (bad) sub inc outsb mov andb mov aaa and mov sarb imul sarl add in sbb outsb jae mov adc aaa int3 xor lea hlt push inc ds jge lds scas lds gs (bad) mov dec cmp outsl xchg (bad) or push xchg pop pop mov fbstp or mov or mov add jns out xchg pop pusha out cmp movsb fs (bad) push das lods aam inc cmp jbe or test sub push mov rcl xchg outsl fdivl (bad) or cwtl pop rorb xchg xor je mov push jmp xor pop dec or fisubl xchg xchg les xchg rcll xchg (bad) pop pop daa dec bound in fwait mov push adc mov sti icebp je mov mov mov mov arpl jne push popa cld popa push adc mov (bad) cmp jmp fsubrl pop fs dec and cmp mov and popa je mov test sub inc pusha or push dec inc out lods add and (bad) jb pop and movsl sbb in xlat xchg mov lret mov leave in (bad) jo inc (bad) (bad) pmaxub jecxz aam xchg mov cmp out repnz mov fs and sub lret popf sub inc out test sbb (bad) ljmp pop jno cmp ja das fidivr stos popa lea fistpll les sti adc jno outsl cmp pushf nop add jb xchg fs outsb pop mov push pop mov sti jae dec mov daa sbb lock mov repnz sti cmpsb cmpsl out jns jns pop jae push xchg in loopne cwtl imulb jb mov aam or das outsl loope xchg add popf js test sub jbe rcr insl fmull adc out dec sub fwait inc dec (bad) data16 xchg jl pusha jb fwait out xchg mov lahf cs fnop lahf gs push icebp mov in xchg inc sub and imul pop mov jno gs xchg mov cltd in adc push cwtl sbb movsb pop and xchg jp in pop mov inc cmp pop (bad) fnstenv adc cmp (bad) xchg inc int3 sbb (bad) lock sarb pusha sub cmp jecxz fisubl sbb pusha dec fidivl fwait outsl sbb pop sub dec xor and outsl mov push mov imulb hlt repnz pop sub loopne sub shrb pop or dec pop call test or lods and cltd shrl or cmp push lea push push ficompl movsl jmp out ret insb cwtl add xchg add xor pop je cs jge cwtl stos and mov sbb movsb dec jmp mov outsl xor scas in in lock punpckhwd test cmp and dec imul xchg std mov pop (bad) aaa call dec enter popl enter push aad or frstor outsb pop test cmp imul pop mov xlat iret pop in in das pop (bad) cmpsl push lock ss mul (bad) fwait jp (bad) pop mov inc adcl pusha shl jmp and ret test push xchg es pop pop out mov flds in dec insb into ja loope cmpsl mov inc inc pop arpl repz mov popa xlat cmc movsb outsb cmpsb or mov sbb adc stos outsb adc mov sub test pushf lahf or into mov test pop push popf push pop fnop xchg (bad) xor or inc (bad) mov xchg inc lea lock pop sbb data16 scas test adc nop outsb push inc addl mov pop sbb xchg fadds and add stos xchg scas subl lea pop cli add mov add int scas cmp (bad) adc xor mov insb seto sahf xchg push dec in add repnz jmp dec rcr je pop ret (bad) lea add out push movsl jmp mov jmp lret mov aaa and into in movsb or jae mov pop mov fwait push mov pop imul inc clc sbb pop js daa mov pop insb (bad) and lcall stc sbb ret iret cwtl divl mov sbb daa xor cmp dec add and fcoml push jbe sti test mov xchg push dec jns sub mov mov dec call dec movsl xor jns and test sbb sbb in dec mov sub push mov adc aad or and cltd mov sbb test out and inc notl scas cld mov jg adc cmp (bad) int3 xchg (bad) mov rorb loopne sub aad outsb sbb test xchg cmpsb mov push (bad) enter xchg leave lock aad stc dec sub fstpl or fs xchg dec cmp ljmp insl mov rcl out fcoms (bad) data16 mov dec mov cltd shlb dec (bad) fimull dec fwait rcr movsl arpl ja xchg mov sub insb ss lea daa stc jmp inc mov lret pushf xlat fbld and mov inc mov cld jb push in mov mov dec shll out sub add outsb scas loop cltd xor jp fcomps mov sbb out adc out dec sahf jl lcall in adc or (bad) repz hlt sub rcl fcmove das xlat out adc pop mov lret aas lds adc sub test adc por dec adc add insb pushf movsl sbb (bad) xor inc inc (bad) pop into pop in xchg push andb imul adc sahf sub popf mov hlt ficompl sub in mov outsl int3 insl sbb out xor rcrl push (bad) flds sbb ja jno mov in ret pop fist or add nop fcmovb mov jecxz jno pop mov outsl inc lahf negb movsb hlt fstps mov jmp fisttp inc pop cmp mov pop push mov bound inc test mov (bad) mov or add inc pop ror mov icebp (bad) popf sbb je mov lret mov and pop xchg dec pop push and push and scas inc (bad) lcall ja arpl aad or aaa mov aad lock and mov nop pop inc add in xor cld cmpsl (bad) fist jp inc (bad) or inc (bad) sbb adc ljmp mov mov add xor pop or addb xor es push mov xor stos add xor dec out add inc jg sub les sbb pop mov cmp out nop mov out cs mov and xchg xor shld add rcrb out cmp or cltd inc (bad) ja jecxz inc dec mov imul mov (bad) int3 or popl loopne cld ret dec out dec outsl cmc sub cmp mov aas or ret cmp lea dec je add in dec stos xor shlb or iret sbb cmp mov in and out and sbb ds in rcrb xchg mov test inc xor jnp sub jno,pt sbb cld ffree or xlat in and fs or xchg lea sub loop fsubrs cmpsl clc data16 test lea sbb or adc push test push popl push inc popa pop dec sub lcall mov add adc inc inc daa js lahf es divl inc std lods jecxz add rcr (bad) cmp int3 enter mov pop repz popf and testb scas xor ja dec or pop jbe inc test adc out test lahf rcrw scas out lahf fcompp fisttpl ja mov (bad) dec aam pushf cmpl flds xor faddl jne mov pop mov fs xchg rcrb loopne push sub sub adc pop shr cmp and clc cmp idivb aam sub adc (bad) adc lods fstpt push leave nop (bad) rol adc mov faddl jmp pop dec jbe mov js add popa stc sti push add jg dec cmp jbe call aam roll mov jne jl stc inc fsubrl shr lret fcmovb insl imul mov call int3 into mov sbb inc cmpsb or mov add inc movsl dec out (bad) adc xchg out jle inc sub aas jge pop dec lret mov jbe xchg daa push xchg dec sub (bad) jmp test inc dec push xlat pusha jg in popa sbb jge cmp lcall imull inc fnop fwait sbb clc adc mov andl dec pop pop or inc pop incb or jg push mov add xor and pop dec sub stos je pop cmc jno jnp ljmp popa xchg pop insl lcall jns es fwait xchg and (bad) imul push test pop (bad) (bad) pop xchg fimul insb jno (bad) lods sbb repz adc add fcompl shrl mov in jp dec xchg add push mov shr std jbe adc lods sub cmp hlt jmp aam rcrl fucomip cmc test sbb mov push pusha pop in mov sarl ror xchg bound mov stc sub popf popa add iret bswap fsts mov push mov jmp mov out in movsb test sub pop jnp xchg andl dec add fcomi rcll xchg sub frstor push inc aad adc xchg adc sub mov xchg jl sub in add mov or (bad) aam sahf mov jbe shrl lds inc faddl cmpsl loop or dec sbb mov dec push cmc ret inc add push adc in xorb les dec popa and popl sub iret dec push stos in sbb stos mov (bad) pop push movsb nop and ljmp bound sub outsl cwtl push neg sbb xor int lods in js imul pusha into out or cli ss pop dec and sub xchg gs in lock repnz sub fsubs (bad) mov mov push cld ljmp popf push or fsubrl add pop test dec push call repz enter adc fildl sbb lret out mov push cltd sti push dec mov mov nop push pop outsl into push sbb test mov rol (bad) js push mov icebp pushl dec inc adc sbb enter popa sub fdivl xchg pop adc ds inc lods scas (bad) enter (bad) xlat fmul leave fmuls jne cmp xor jg cmpsb fidivr (bad) xchg in xor (bad) (bad) addr16 or insb jg push xchg mov ljmp das or inc (bad) xlat pop jnp pop add sbb dec cmc out pop mov shrb push testl inc xchg or push les repnz cwtl cmp lret mov jmp dec mov add adc mov or push or and push sbb cmc jo int3 cmpsb jbe test push fbstp jp pusha and in or pop jbe icebp fsubrs fucomi dec adc jb popa pushf imul in pop loopne fdiv (bad) outsb sbb jg aad sbb mov addr16 data16 mov dec lea cltd hlt dec out mov jae dec cmp mov pop dec dec int3 orb sbb cmpsb stc out icebp and xchg dec in sbb inc mov (bad) xor fwait pop int3 mov xchg cmpl jae inc nop pop mov xchg pop xor (bad) mov dec enter jne loop (bad) adc push (bad) sub mov jae sti in in push cmpsl pusha sub in stos test push stc sbbl xor mov lds push and xchg repz (bad) (bad) add (bad) movsb or shll xchg sbb jns mov aaa mov insb icebp fmulp mov mov mov bound adc inc in dec call mov inc sahf mov jl hlt add inc jo movsl clc rcr jg out je jae into mov rorb aas pop (bad) mov xchg dec loopne iret adc jmp push rcr movsl (bad) orl or jg hlt icebp mov or out cltd sti je push loopne les cmp leave lret mov cwtl repz push push jp aad ja icebp in sti add fiadd fnstcw or lcall add icebp and outsb add add popa call (bad) or lret call jmp incl lods xlat test add adc sarl (bad) cmc mov fimul cwtl add cmpsl or subl jp lea fcomip in push outsb loope lret dec sbb popf mov dec les dec push lods cmc sub jge ja or daa leave pop dec dec mov sub outsl push icebp icebp jl rcl lock hlt mov lahf add scas addr16 stos daa inc test mov lea dec xchg mov outsl daa stos shlb daa inc inc xchg cmpsl xchg (bad) fwait inc jle dec xchg mov jp push xor sbb mov fldl aaa sub ret mov pop xor jl stos outsl xchg daa mov stos and std cld dec sbb decl fcmovnbe pop push popa aad sub movsb and mov mov dec mov xchg sbb leave jbe out cmpsl mov bound out add insl mov and pushf sbb jo fstpt xchg (bad) ja outsl (bad) xor cmp xor adc push cmp pop add fbstp jae or movb adc cmp add (bad) mov mov addr16 fnop out jmp mov fst outsl (bad) pushf push scas pop (bad) lcall test aad mov cmp movd fstps lcall (bad) outsl mov xchg popf push jle push adc rclb popa jle jge mov mov fisttp cld outsb lods jle add mov inc stc movsb out jns das imul inc setp pop pop xor shlb in (bad) int fistpl add push cmpsl out mov dec aaa fdivrl aas loopne ret add hlt clc xchg jnp xchg arpl push lret dec ljmp pusha pop inc or fstl (bad) test rol mov sbb pop scas lret or repnz mov pusha (bad) inc mov or scas dec or (bad) cld and mov cli pusha bsr sbb sub adc inc (bad) xor mov gs in loope popa arpl inc (bad) mov rcr sbb out (bad) loope add pop mov push pop leave aas push xchg out js imul sbb test dec pop xchg cwtl xchg dec pop (bad) cmc ja ret call cs scas fs mov xchg jbe sub rcrb fs out addr16 cmc ljmp cmp aaa insl inc pop in and inc mov mov cmp decl sbb daa out bound mov fsubrp scas stc outsb jmp out addr16 out mov rcr out adc pop aas xchg aad push and jne xchg xor mov mov je hlt mov or pop jle xchg rolb and pop mov add jg lret loop loop sahf pop xor addb gs ljmp jg,pn push push aaa push add popf imul push inc ss mov repz jg xor sahf bound add test cmp fsubl jmp cld enter nop mov jl adc sti clc lret push adc rol xor lds repz negb (bad) aas pop repnz sar fistp mul mov dec sbb out test rcr xor jns fsubs loop bound cmp xchg repz lret out lods mov stc imul or lods dec xor mov cmpsb movsb test loop lcall mov push push rcl mov jne jp cmp xor mov pop pop mov mov pop sub dec or popf dec in sbb jmp das shll push pop lret rolb repnz bound scas shrl adc or test iret jg pop nop push jl jns divb xor mov imul ficom jle ljmp cli (bad) and (bad) std lods test inc jl inc xchg xor adc shr decb jb int3 call push pop outsb rcl test std scas push cmp ret jmp int sub stc test jo mov rcrb inc test inc cmp fstl int cld into icebp xor mov aas iret pop sub sub iret or stos ss xchg mov in jae (bad) fnsave int inc aas int xor std imul mov add imul inc inc jns imul int push cmp mov (bad) es cmp (bad) xor loopne fildll insl dec xor ss pushf adc mov and pop das shll mov lret mov int mov xor and dec nop popf in lcall scas mov sbb push lods insl xor adc dec (bad) clc call push je sahf xchg mov mov push push lea push push call fcomip sub or xor and repz imul in mov xchg xorl or jo jmp lock mov (bad) rcrb jmp xor sub adc cmp mov or (bad) xor aad mov pusha jo neg decb pop push (bad) loop lret jg xchg or or xor xchg pop mov xchg mov das test repz (bad) jl lea (bad) fimull ljmp xchg xor inc out jp div aam cmp sub fnstenv fisttpll xor and rcll xchg movsl jp imul dec add push pop movsl mov repnz add mov dec in iret add xchg int (bad) call pushf rcll rorl sbb sub fdivl mov mov pop fisttpll test add flds and outsl pop and pop sti leave iret int pop in (bad) sub fs pop in (bad) es (bad) lds xor sbb popf call lds cld mov in sub xchg or (bad) inc pop lods add mov ja dec in int dec frstor and int int3 mov pop shl popa sub push mov into mov daa out incb (bad) and out push or dec ss mov rorl cmpsl mov push jmp iret sahf sub mov jnp cmp ret mov xor xor xor mov addl aaa jmp xor mov inc lods adc shlb nop aas popa xchg aaa mul sbb int mov loop and pop aaa (bad) sub lret jmp in or shlb xchg std jno shrl adc xchg (bad) cmpsb cmp inc or mov xor xor inc ret xlat jle int add int xlat int out int insl int ret lods pusha or inc adc jle mov push repnz jbe mov lcall (bad) jbe mov je mov pusha jbe mov xor popf sub insl lds mov es or icebp jle mov xchg ss in mov jg sbb xor push jae mov pusha jbe mov ss or icebp jle mov cltd ss mov das xor push jbe mov adc mov dec in (bad) mov sbb and pop push repnz jbe mov (bad) xchg dec push push mov ffree lret int adc enter pop mov jno push sub ffree dec (bad) ret test int add int cltd mov mov (bad) and push pop push mov addl xor pusha jo js je fdivrl mov outsl jg (bad) lds int dec lds cmp mov sarl and idivb pushf push jb into fistpl loopne push int3 inc add lcall (bad) lret and mov stos sub sbb lods fistpll lods jg push push int jns push dec jge mov ret pop fsubr add sub test loope cli dec and (bad) (bad) aad ret data16 mov and in dec aas add sbb popf rcrb dec and sbb mov dec push jge inc inc cmp xchg lock cmp mov lret adc xlat data16 and pop and mov mov out mov xchg mov xchg cmp cld jno (bad) jb out mov es ds xor fmull (bad) pop ret aas mov add jb and cltd (bad) xor jno cmp call jno cmp cmp and push cmp inc or cmp stc adc arpl lahf xor jecxz shlb and mov or mov fist and xor aaa mov ret cmp xor movsb es das and jmp jns cmp add (bad) incl inc mov dec movsl xor mov (bad) bound mov adc popl jae add sub or (bad) stc and or rclb hlt push pop jb mov mov push (bad) push push cmp ret pop leave xor cmp xor xor push (bad) mov fidiv sar jb add pop int cmp in fistp (bad) mov imul sbb sarb push jb xor lods adc repnz addr16 mov int mov int insb test dec xchg add xor (bad) mov xor stos add lcall mov jb loopne fldenv fisub arpl jns inc mov testl dec xor adc aaa notb jb or jg pop cwtl jae aad mov fwait and (bad) push xchg pop cmp cmp mov jo flds sbb cmp push (bad) adc sahf inc adc xchg adc sub push add cwtl add std rcrb daa cmp sbb mov adc push jnp ds sbb cmp and sbb movsb jge adc sarl fwait push repnz inc jns cmp out out jno xlat inc and sub jns iret ss jo fs out ret xor loope sarb (bad) fidiv nop mov and push add cmp xor or cmp mov xor cmp mov sarl insl rcrb cmp ret repnz scas loop lea repnz cltd add xor mov adc testl or outsb add bound ja jno test add adc fidiv cs jb mov lods or jne cmp push mov and or cmp mov dec push and iret xchg cld inc cmp inc ds mov ret push mov jle ret out xchg aad xor add sahf push xchg inc cmp cmp ss cmpl and fcomip xor mov xor or cmp mov add push xchg push cmp bound rcrl repz out jecxz inc sub and xchg add inc and mov bound (bad) xor ss lods repz mov (bad) cmp sub test das jbe and addr16 mov ret mov cmp ss xor jns cmp ss cmp (bad) repnz mov mov lock push add in cmp loope sarl pushw ds xor ds push or aas mov es out test mov repnz bound jb out inc jno,pt xor in xchg out test aas inc cmp mul add xchg mov or shrb pop (bad) pop and out and (bad) cs adc adc adc cmp data16 and push xor jecxz mov (bad) jecxz jno xlat sbb xor ss jnp and push test add xlat add cmp inc jno push xchg out in or and mov lods xor mov sub xor js sti jp fwait mov push or inc mov lret jecxz out adc das int3 das dec jo fldl cmp and jne cwtl rcll ds xchg mov call out call jmp in xchg mov push call add in sub mov dec mov mov fdivp (bad) cli pop pop push mov mov push push pop sub push fxam sbb jmp sub jmp out testl scas add out ret jbe sub (bad) cmp stos lcall or btc add sbb inc pop xchg xchg sub (bad) add add sub (bad) cli (bad) mov add mov sub sti lods pop loopne lds frstor dec mov test and nop adc adc sbb cmp cs pop out mov and shl loope jmp jno add push out inc pop mov xchg pop and in les push push push movsl push test pop adc push in outsl decb stos push stos shrl movl fsubl das je scas adc pop sahf xchg cmp jmp jo add mov pop pop aam daa push gs inc pop call hlt je inc push jne xchg pop mov pop cld cs outsb cld jmp push repz sti mov dec add sbb jno cmc mov push cmp push fdiv fcom fsubs or mov lcall sub lret test mov jl pop cmpsl insb movsl jl jl mov test inc lret dec loopne ror (bad) sub test cmc dec std cmp std cltd std (bad) test sbb bound mov arpl arpl jae jg jge (bad) push cmc loopne mov mov aaa pop cmp xchg and and and and sub sub push repz jae pushf push xchg push push sub daa cmpsb mov pushf jecxz inc popa or rclb sbb sbb pop nop adc adc xlat ja ja jg jno jns jp mulb (bad) adc mov mov and push test movsb inc test fs inc addr16 outsl fs int3 push push popf add and push mov out (bad) popa (bad) cmpsb loop ljmp xchg cmpsb out out out (bad) or add add jns jne jge repnz cli nop cli (bad) mul (bad) loopne mov hlt add ret mov pushl mov jl xchg jae lcall sbb cmp repnz pop mov jnp sahf (bad) arpl push outsb or daa test cwtl shrb pushf push ljmp push daa cmp push adc adc fcoml sub das adc adc xor data16 data16 sub test imul in in add data16 add adc adc adc adc adc adc adc adc adc adc adc jne push xor or mov or push icebp push push push pusha add (bad) mov mov cmc enter mov std (bad) std sbb xchg xor add subl adc adc fcoml sub daa xor nop bound bound shlb bound bound bound bound imul add bound bound push push push sbb push pop push fcoml sub daa xor int sbb ret adc inc mov xor aad lea xchg mov mov push sbb sbb xchg je push sahf push cwtl je or (bad) mov fwait stos mov dec scas dec mov lret mov leave lret (bad) mov gs int ret loop sarb and pop inc je adc aam xchg lock push loop jp or loope (bad) fistpll fwait das mov mov inc sbb mov add inc (bad) xor push gs jo rcrl xor add push dec add mov movsb jo cmp and mov imul movsb mov mov aas mov out out push add sahf xchg add es subb lahf in das mov mov fsubrp inc pop and dec (bad) iret dec int les jmp dec test xor mov sub or mov movsl ret daa mov std add add out pop insb imul sub or (bad) xchg inc pop mov jns jb insl pusha test push (bad) sub mov inc lea xchg add repz push dec dec jle push mov ja mov inc pop sbb or imul rcrb neg fsubrl sbb decb adc test stos cmc inc addl fmuls mov popa push lock and adc and jecxz mov add inc test sub cmp repnz push cwtl out cmp push cmpsl mov cmp xchg ret popf xchg std repz ds xor inc enter clc adc rorb sahf lcall xchg dec mov push ffree xlat mov or rol or mov inc sub dec rorb jmp add loope,pn and aaa add lahf out add add cli xchg xor sbb aam jle pusha mov cmp shld push pushf xor out add sub inc push sbb out push js push xchg adc xchg xor or cmp inc pushl andl pop mov or dec inc insl push add jl xchg xchg add sbb inc mov mov pop mov mov mov mov and jbe nop and movsb and test or xchg movsb (bad) jbe pop mov add jbe mov xchg jnp xor push popa lods hlt push xchg jne cld push out dec movsb and mov xor test mov test repnz xchg pop xchg es stos orl jns out mov rcrl jecxz pop inc sbb and mov pushfw mov jmp mov mov mov mov pop (bad) loop xchg xchg inc jl mov mov xlat mov ret aad jmp jb (bad) std insb mov add in adc xor adc xor add sub (bad) jmp lret dec mov pop aam sub fmull sti outsb fcoms (bad) negb xchg inc push inc je mov push pop out or mov jle sahf les lahf (bad) mov movsb push jb mov jo dec test stos repz or and in fmulp push and cli sub pop popa arpl fmul in pushaw mov ret in into sub out lea pop mov mov mov (bad) shr into (bad) cmp cmp xchg mov test out ss loop xchg xchg sahf sarl mov pop loopne mov push and mov pop in mov sub pop fdivrl xchg mov add mov xlat xchg das stc bound (bad) loop loop pushf pop jp xchg lahf ds mov add or inc les xchg test seto mov mov cs das cwtl lds jae push push nop cmp or das imul and jb mov loopne repnz (bad) mov jmp or jle pusha pop and dec fdivrl xchg (bad) sub notl or lahf add hlt jno adc fs xchg or rorl out or push fdivr dec and ret pop jle mov call iret js jb mov dec iret sub aaa adc out push add sub mov jmp iret xor or inc adc (bad) movb sbb xchg in loope mov fs (bad) jl js adc rcll inc inc gs clc or push sub jne xor sub and fwait fwait repnz into popa mov jmp psrlq lea (bad) js scas sub adc cmp add xchg mov push mov mov rcr leave movsl add pop fsubrp sbb mov sbb enter shrb test out adc xchg call jnp pop loopne enterw push sbb mov mov pop imul mov mov test jo mov and and jecxz and mov repz and inc mov mov add arpl lods daa int3 arpl rolb push inc pop mov insl daa xor popa jl mov sbb ljmp sbb lret push pop xor mov cmpsb dec and push pushf or lret imulb outsl cmpsl add adc mov iret ficomp shr xchg cmpsl daa push xchg pop sbb add mov push mov and jge aad pusha repz fisubrl push clc or push jg leave push mov lea mov jne inc loope pop dec pop or push lcall push icebp gs adc sbb into cmp or pop cld sub dec jle sbb in lret dec in sbb add sub xor lcall movsb inc daa icebp loop scas add icebp lock stos sbb ret scas cmpsb mov (bad) fnsave mov mov lahf lahf push js movsl inc pop mov aaa pop pop leave imul sbb mov fwait or out mov and rcr cs dec mov cwtl mov push xor add pop pop or adc jl mov mov in jle lods xor jne imull mov add das rorl xchg adc jmp out fcomi in jmp sti add das lock or mov jb jbe or popf pop push cs mov xchg aas inc jl scas or pop cmp cltd inc cmp inc push arpl and add aas xor inc in xchg push flds test pop pop icebp out fsubrp ss mov and push (bad) dec int lret popf lcall push mov icebp jg mov imull add rcll jp outsb js cmp adc mov lods inc cmp test imul mov add inc xchg lret lcall dec rcll es scas mov rcl dec (bad) lock add xor jmp xor cltd scas mov into push pop sub or test rorb push pop mov push mov xor xchg (bad) (bad) dec dec sub sub add inc sub icebp adc add mov xor or fsubrl cmp stos mov in sbb jne sub aaa cmp out sahf pop pop inc mov or mov rcr add xor push es xor mov add ret mov adc jmp add xchg and andl and js fstl xor cltd inc ljmp mov aad loop fisubrl inc push fcompl jl dec insl jbe (bad) neg out xor push push (bad) sar dec int3 sbb or mov xchg pop ficom fwait inc fwait inc stos and cmpsl pop mov adc inc in scas push icebp sub xchg lds or dec pop inc roll pop rcrl ficompl xchg ret movsb ljmp add repnz iret aas pop mov int3 push jg push push sbb push cmp fstps daa or mov lock mov stc lds push jmp aam sub cltd push jnp movsl loope dec lods cmp (bad) push popf pop test stos je jecxz jge push sbbl test jmp xchg push mov pop xchg sbb xor fwait clc cltd into jbe pmaxub stc pop cmpsl mov pop mov icebp (bad) aas sub stc mov jmp aaa stos mov lcall jnp pop lods xlat or divl sarb cmp hlt cwtl pop icebp xor add notb imul adc sbb dec and pop aad add jns jns and jecxz cmp orb pop mov or and gs cmc jmp mov cs pop mov xchg mov xchg inc cmp lahf dec outsl aad xor psllw enter pop lods or jbe cmp mov push cltd cmp sub cli jne rol mov idivl test pop sub cmp loop fldt dec lahf pcmpeqw add iret ret sub nop jge jmp sub in stc lret sub cmp mov inc jo shrb rcrb inc push lods cmp jge lahf mov sbb pop aaa addr16 cld sub or push lret mov lods jecxz mov add xor daa add sbb xor adc cltd jb add movb mov sub push push jl das push lods jno js sti adc sahf xor add test push pop int3 mov cmp sbb inc pop jmp push lcall lret out loop sti stos mov jmp call push pop push es inc push outsl divl arpl dec cli cli popf out mov addr16 out outsb scas scas es mov xor (bad) pop lret cmp repnz lahf icebp into push xor sub sbb mov xchg imul popa jmp and sbb jle (bad) mov imull fistp imul or bnd mov or jns dec mov push inc push mov mov pop out sbb push inc jmp pop fstl fnstenv js insl (bad) insl gs cmp pushf fistpl sbb fidivr dec aam mov mov sub and push dec out jg lds inc and (bad) mov dec inc and test mov cmp and (bad) clc pushf push push mulb and dec sub mov jecxz xor or xchg xor bnd lcall or adc push mov push jg mov push sbb sub xchg inc pushf mov imul or imull sti cmp imul mov push mov pop jnp cmpsl mov dec andl sub es and pop sbb sub pop push mov ds push mov int in xor push push out roll pop repz xchg jg xor je (bad) mov or lock mov (bad) ficomp pop jo push jbe mov lcall out insb stos clc xchg out push scas bound hlt push xchg in sbb xor ret jae mov push dec dec or cmp adc aas sub (bad) mov enter (bad) or jns loopne pop pusha fisttpl test dec je mul fimull rorl push mov (bad) mov dec fistl mov sub push mov pop sbb lahf call scas or test xchg inc mov aad out insb insl jg std add dec adc mov cltd mov in pushf adc enter cmp in inc dec fldcw push mov ljmp jl cmp cs aaa or xor shlb jno daa dec sub lahf add scas xor or aaa inc out or popa movsb mov push popa les jge jecxz pushf inc loope das inc fsubl daa cltd movsb (bad) stc and mov cwtl and rcrl adc mov mov xor mov loop aas sahf add imul add mov mov pop sub adc mov sub aas jnp xchg data16 or iret repz loopne pop xor aaa fs dec adc je cltd pop das lods call hlt dec (bad) scas imul in push les sbb mov mov sbb mov pusha pop cli pop inc int mov imull pop cmp push ja aaa mov addl and sub mov jne test nop and enter out in cmp movsb push sub inc add in jo mov push jmp mov mov add or mov test push dec test xchg sub push imul inc arpl add lods mov imul leave xchg cld sti mov lahf sub das rol push adc fs rclb mov inc xchg xchg or xor mov dec outsb xor push push bound add mov xchg mov cmpsb pop pop stos imul dec mov and pop clc iret sti sbb int3 scas daa push movsb sub mov xchg subl je (bad) adc fstl jp flds and mov es test xchg lret push push imul cmpsl inc add clc jb xchg xchg maskmovq imull add imul cld inc mov outsl test sub jne sbb mov out subl jge inc dec (bad) bound daa je jbe mov jle gs out jbe mov jle and jae xlat leave call mov pop outsl mov movsb fbstp adc pop inc repz fdivrl jno add out mov lock or add or imul push jb,pt nop rorl clc pushf (bad) mov addr16 mov dec mov jp pop push aam or lahf leave sub dec jle leave or cld push clc pop lods xchg pop mov js lods hlt repz pop repnz push pusha jecxz jl sub xlat mov lds fdivs mov mov movsb sbb test jne and int3 imul pop test lret mov mov dec cltd mov xchg mov out lods (bad) enter (bad) xchg or int cmp popa jno jg rclb mov inc cwtl dec mov mov cwtl xorl pop mov mov xor mov in mov cltd or mov push iret (bad) add xor jecxz pushf or or (bad) push push pop (bad) jno push or (bad) xchg jl std add (bad) aas adc push movsb outsb jg mov cltd decb in icebp inc (bad) icebp ret lret push dec addl adc pop rorb ret xchg (bad) mov mov cwtl sbb inc pop and xchg pop loopne sbb jns test lods cmp pop sahf lock push bound dec jnp out or push and jbe push (bad) cltd mov jecxz xor mov mov dec mov jae mov cmp and fsts jecxz and inc cmpsl xchg sub movsl xchg jno pushf leave pop outsb pushf in pop in into (bad) mov pop ret int dec shll lds adc mov or daa leave int3 fisubrl xchg or and inc sarb and adc sar shll or jne jmpw lcall pushf (bad) call divb jle jb jle add dec xor mov jb pop loop in pop sbb enter int mov leave mov xchg mov fwait jb loop aad jns (bad) pop sub xchg mov (bad) xlat mov adc mov int3 inc jg cmpsb lds xchg ret mov aaa fldcw xor stos jne in gs mov aaa push xchg cltd fwait add scas cmp fcomps xor mov mov int3 inc sbb adc xchg cltd pop add pop les ds cmpsl push mov mul xchg dec push and sub movsl inc or adc data16 movsb xor sub insb stos imul out dec mov ss cmp fisubl ret fidivr cli or fildl test cli cmp or sarl cmp mov or int3 test js mov push (bad) in addr16 xlat aaa mov cmp xor adc jne je xor push jmp or scas out push sub mov movsb and cmp out adc and in js cmp popa jp,pn and inc pop push outsb xlat std je clc sub fmull xchg and sub jo push ss sbb mov lods (bad) imul mov mov xchg jecxz dec cmp ja xchg inc jae js jnp das outsl cwtl jle and pop mov pop cmpl fwait test and jp mov stos pop dec add dec pop inc out dec and sbb cli jg leave fcmovnu ret das loop cwtl mov outsb gs (bad) and and add add fdivs (bad) test rcrb mov pop push sub add push fisttp in mov les popf push lock sbb push out mov pop mov ljmp rclb mov mov not (bad) mov xchg (bad) mov xchg daa negb lods mov xor (bad) mov pop imul mov inc das out pusha pop add mov test mov cld push orl out push push daa jl nop lahf cwtl or into cld repnz leave adc lcall sub in fs or imul insb xor fidivrl jb pop mov shld jge mov cmp sbbl pop cs icebp (bad) push dec or mov jecxz xchg push or std xchg pusha pop mov push push inc rclb jne xchg pop lea cmpsl cmp mov fs shrl inc cmpb sub push andb (bad) rcll mov repz out mov inc mov leave jmp and push sbb ret dec pop sti pop adc aam pop mov inc add cwtl lret push jns sub pop push add movsb cmp push inc add hlt or pushf adc push adc lret adc inc ljmp dec cmpsb push aas xchg sbb dec stc jbe mov dec es lds andl dec rorl dec pop test add insb jnp cltd mov enter mov (bad) fstpt adc jbe cmp andb dec sub mov inc test add and push add xorb stos mov test fabs sub mov mov jo fdivr mov insl cmp pusha pop aas push sub pop cmp cmp stc dec icebp xchg sub loopne ljmp test cs (bad) adc (bad) push repz xchg outsb test aad xor cli clc push add pop cli lahf mov jecxz js push lret mov adc jae add inc fldenv adc push lods xlat aaa adcb stos fs mov xchg xor les or xchg lods loope or shlb mov fisttp xchg inc or test inc mov das or call (bad) lods ljmp cs les xor inc xor decb or push adc jle xor push fidiv or popf jg lods imul jle out jmp stos mov bound xor cltd insl jp outsb das mov push loope push and enter dec push sbb mov push adc cmp lret inc xchg and mov insl cmp adc mov cli fcomip mov aam mov lahf ret push xor dec and (bad) in jae mov mov mov fnsave jo aam mov dec pop clc pop or jg and aas pop or lock lret cmp adc xchg sahf pop mov cmp mov push ja cmpsl mov pushf popf es gs add add xor inc xchg xorl jmp test iret mov dec dec sub jp test negb jo jmp mov (bad) test add mov out lret imul into jno sbb dec xor and aam jecxz mov in lret test push jecxz push mov arpl shrl or mov movsb push mov arpl and mov dec cmc rcrb movsb ret xor dec xor sbb rclb jo mov inc lcall push pusha push push xchg cmp and inc outsl cmpsb insl add int or cltd jno nop or cmp fdivrl sbb imul sub jmp add es cmp paddusw add adc mov adc loope or fisub nop push mov adc and stos loop or jo pusha mov cmp and cmp adc sbb add dec cmp fildl adc dec xchg pop jmp insb gs and roll and cmpw aad adc or pushf ja cmp xor fimull or (bad) mov aas out sbb divps jge int loopne or adc pusha popa dec dec fild stos movsl mov loop jno insb push roll xchg fsubrl lods cs insl and xchg dec cwtl fnstcw shrb push xchg pcmpeqb mov fmull sub int mov hlt mov bound arpl xor dec into push sub ds insl sbb fs cmp test xlat xor in jne (bad) icebp addb fildl outsb insl adc lods loopne mov enter cld cmp sub push cmpsb xchg or pushf pushf xchg in mov pushf lcall ficomp cmp fimull aam stos pusha xchg pop lods daa fnstsw sbb insb das fildl mov xor (bad) (bad) inc and inc pop sahf int3 lea imul or sub mov les fidivl push mov fstps dec es and mov call in add push (bad) in push leave js clc mov aas sarl std add js and outsl jge insb notb aad mov aam test std cwtl rcrl mov daa xor add roll jbe cmpsb daa (bad) fldt out lcall data16 pop jae or mov and and enter ret and lods mov mov lahf and fisttpl fldl2t mov js jmp sub dec dec das cld pop andb icebp addr16 sub sub rcpps arpl out cwtl and mov xchg xchg test mov cld repz jns in pminsw push out mov movsb or (bad) jg push in xchg sbb mov push out mov push push xchg cld mov (bad) xchg insl rolb fwait xor cmpsb (bad) adc add out inc cld xor push test cwtl jl subl rep jmp add push js punpckldq push daa shlb push into imul mov js lahf add in fdivl mov repz adc push fwait add push and in fwait push pop push jmp xchg das aas icebp adc sbb add jne push imul mov in push xchg icebp mov sbb ss aas xor fdivp scas repnz bound mov imul xlat inc lods mov cmpsb mov push mov leave in pushf inc fsubs in and fildll faddp call pop dec in dec jb cltd out push icebp push add int3 arpl jecxz pop repz add dec (bad) sbb mov jle mov mov movb push fcmove xor xor push xchg sub bound icebp shrb ret sub leave dec into (bad) jge fcmovnbe mov call iret cltd adc ds jae mov scas push lods orl pushf adc cmp lea ljmp lcall in sbb fcmovne xor xor pop mov lcall xchg sbb mov dec push add popa inc add ja (bad) les int lods inc out fmull mov sub rcl inc push sub adc leave ficomp andb fnstenv sub adc xchg outsb push ss fcoms push sub push dec das mov mov mov addr16 jmp jmp ret test push xor lods repz test pop in idiv sahf daa cld fildl pop mov stos sub fistpl aaa repz jle fldcw or sub ds aaa adc sub or lds rcll jne xchg mov (bad) fstps add sbb or rolb pop into mov (bad) cld clc jnp push cltd add aas hlt ljmp xlat mov inc scas xchg xor pop das jecxz,pt dec cs mov mov push sub inc mov xor jecxz loope out sub sbb sti jl mov push jnp add xor push sbb xor (bad) lret xchg loope rcl sub scas pop test roll loope sub hlt xor (bad) out and xchg mov jle mov hlt pop rolb scas cmpsb inc es out xor push mov sbb dec push lahf sbb fs iret pop repnz mov mov mov mov pop test mov push jae cmp jb jbe sahf sub (bad) mov scas or or or cmc ljmp jg jle jecxz and xchg lock ret xchg cmpsb out aad movsb mov lods movntq out mov pop fcoms movsl shll stc xorl mov ret lods xchg enter jns mov xchg std mov (bad) pop stc add sub push cld cmp (bad) jne gs xchg lods or add or repnz rcrl popa mov into inc inc sar push lds into out outsb add test pushf mov popa out sub ljmp fisub stos bsr popa jne mov scas sbb jae xor mov pusha addr16 adc pop cltd outsb mov pop rcrb clc mov jns jmp jp adc mov cs adc inc pushf aas mov adc mov cmp stos sub jge aad sahf leave cmp shr cmp xchg pop and mov mov push lock out dec (bad) imul loop push lret out xchg inc dec popa mov stos adc pop sub scas adc out add sub (bad) push bnd and jbe mov mov and mov adc iret pop sbb int3 rcrl xchg add or cld stos adc arpl pop fisttpl mov aad ret push inc in cmp pusha leave dec std push cmp push (bad) or call xor outsb lea lea leave jno cmp dec xchg push movsl movsl aam les movl fwait cmp lcall jecxz mov xlat push jmp int3 push xchg push in pop jo and adcb movsl enter call testb fwait push push icebp push pop pop daa aad loopne inc add push dec and dec hlt dec or int3 cld jg jmp hlt ret flds sahf cli or mov cmpsl and sti inc mov inc lods mov or cmp popf xchg cs std out dec fdivl cmp and inc imul aad sbb cmpsb mov jmp imul mov sti sbb xchg jg xlat in in (bad) or and xor jb lret or test mov popf mov stos sarb and add (bad) xorl sub pop sbb outsb push std sahf mov sarl pop dec or mov dec push aad mov insb xor outsl cmp pop cmp mov mov test int test adc ja pop sub test movsl xlat ds sbb jns inc sub push movb fisubrl jecxz xorl aas movsl pop mov out mov xor dec call mov or imul xchg (bad) lahf xor add push test leave cmpsl mov ret adc gs das mov push lret lea fstl sbb jns scas mov push testb repnz fcmovne xor push pop ljmp (bad) icebp inc mov lcall std and (bad) jbe sbb jmp testb aad popf jno mov fmuls adc cmp jge adc outsb into es mov int3 les inc mov lret inc flds push cld cmpsl jl aas jns push sbb sub sub mov push imul jle in pop ja push es leave lock lods xor addr16 movsb clc pushf or in fmulp xor shll icebp or rolb jne insl rcrb dec ret dec test inc test inc pop mov xor inc push lds loop imul pop and push dec push jmp in fcmovne add and pmulhuw dec xchg mov ret jne pop mov in in fbld pop shrb inc std or outsb les mov xchg lock mov xor push fucomip adc jg ficompl lods jp jg lock xchg imul iret jg jge xchg xchg push inc pop popf push test movsb dec (bad) cmp enter test ljmp addr16 rorb dec les clc jmp mov pop and inc mov mov scas call popf push arpl out pushf cld ds sub ds sub push mov in dec push xor mov arpl xor push inc fldcw push je,pt fdivp inc jae cld enter push divl mov out or adc ss fs mov pushl mov scas and or pop push xchg jl xor adc mov cli es or clc sub in gs fsubrl scas xchg lahf lret fdivl cwtl add fcoml cmp in and or jecxz das jmp sub xchg add lahf les call aam adcl out mov (bad) lahf dec adc push jmp repnz outsl xchg loopne cmp cmp popa inc cmp pop jle jmp (bad) mov inc icebp cs xor lds in fisubrl and dec add rorb jae and dec push lds insl ja (bad) lods sbb mov cmp ret and ret rorb cmpsl test in mov orb aam push (bad) cmp cmp out ret sbbb cmp imul insl fldenv add mov sub xchg aad xchg push cmp pop loop jb xor test cmp lea mov repz test mov jecxz pop loopne nop movsl lea push aas xchg iret or push in xchg sbb imul aad daa sbb in mov fsubr iret dec mov int3 xor push in inc cmp in dec iret sbb call sub sbb push dec lods arpl sub push in jecxz out pop pmaxub test mov gs fstps dec xchg lret pop add mov jnp dec lea and lea jo jne push mov add lea sbb scas jne scas mov push inc out hlt les xor jne xor jae scas test mov sub in mov dec xor or adc dec adc outsb push lret xchg xchg popf pop mov xchg add xchg or jmp add push movsl in fwait push mov mov xor outsl dec sahf repz test mov out xchg mov popa fldcw pop push lds (bad) fsub xchg dec data16 cltd xor cmc fdivrl fdivl lods (bad) dec xchg push stc mov mov pop jl mov into sbb out test xorl or mov js inc adc out adc adc push sbb fdivs outsb fwait xchg addl outsl push mov and ja jb imul sub lods adc mov cmp mov mov in fistpl inc cmp das add ja test stc stos sub jne mov adc push mov xchg aaa sarb push add into or dec add jns xchg jle sbb stc jp xlat jns and call fwait cwtl (bad) cmp andl les out dec jge xor stc sbb or jns daa push (bad) sub lahf or and and push dec xchg sub fwait cmp cltd xchg jns add popf pushf mov ds xchg roll in mov dec lods test in aad insl jg loopne jmp clc (bad) das xor add idivl add lock jb enter dec (bad) cmc int3 push rorb in add xchg or daa cmp mov xor xor lea jns out xchg js mov fisub cmp call adc inc test xchg mov jbe push mov xchg jmp xchg and sub sbb in xchg dec jno mov and insl jg sbb dec outsl outsl push sbb jp iret je int3 popa ss jno hlt sarl push sbb mov push push nop inc and mov pop push inc inc bound out pop fistl and pop sub mov mov shrl pop dec or fwait ss jp (bad) mov cs test mov cmp or mov mov (bad) leave add movsb xchg mov xor pop adc push jbe adc js mov sbb xchg dec or pop cmp and mov mov pop fldcw dec inc (bad) add dec jge xor scas or add mov cmp jo and cmp lcall xor cmp pop lret (bad) add cmp jns push ss mov fwait pusha add scas jmp fimul sub xchg sub lock push shl and lods sub mov leave jecxz or pop push imul pop jns mov bound out xor xchg pop xchg mov mov pop xchg xchg pop imul mov hlt out sbb addr16 and inc mov mov adc push (bad) sbb dec xor mov mov pop and loopne mov in xchg fst mov fisttpl scas mov mov mov lds arpl rorl ljmp dec cmp or dec movsb (bad) inc lods arpl xchg or data16 mov clc outsb mov in xchg mov sbb in cmc mov popa mov stos out fdivrs dec push shlb outsb sbb mov inc add ds pop inc sti dec cs jae dec push mov pop sbb bound (bad) fwait dec lret sbb inc cmpsb out stos js jg xor and push js push xor jno sub and in bound movsb and jge test jb dec loopne and repnz data16 dec sti lea rorb loope xor (bad) cmp pop xchg pop sbb stos das jle movsb mull test sbb jecxz jge fnop and stos jg loope add mov xor or inc cmp sub in xchg ret lahf xchg jl mov push test inc sbb aas adc shl jmp inc pop mov sbb lock inc pop das fs xor push fiadd lcall adc adc fisttp push or adc push rolb xor sub or pusha fimull in mov data16 imul sbb iret cli add cmp fistp out sahf data16 test cs outsl xor imul xor enter xor fbld (bad) (bad) repnz enter adc (bad) fldl mov sub aaa xchg cmc imul jle push dec xlat stos jae xchg cmpsl push cmc sarb mov ret add addr16 les jge cld das cld cmp xor aas and and xor mov mov sub xor sbb add sarb mov pop sbb fiadd into and ret and pop cltd je not push (bad) (bad) (bad) test cmp push mov cmp dec mov xchg lsl cld std lds mov das mov pop and push enter (bad) mov fistpl push test pop nop in dec jmp pop sub cld push pop enter cmpsl sbb je in scas pop dec cwtd aaa dec lods repnz pop adc es aas push pop repz popa xor mov add stc ljmp inc fstl sarl jb mov sub (bad) sbb mov mov leave xchg mov bound adc xchg gs std sbb push ret cmp popf push adc and mov or jo aam dec sub mov shrl pop lds or fcmovu mov dec or sub dec sbb (bad) push arpl in sub loopne stos jo sub xchg or hlt and dec sbb sub dec lods pop sbbb sbb add xchg lret sbb dec stc (bad) pop sub cld sub fildll sbb adc or clc add xor iret mov and lea outsl pop push data16 cli jge lock lea pop in jg out dec inc sub in cmp inc lea fsubrl fmull loop (bad) (bad) stc cmp stc enter xor pushf and or cmp in icebp (bad) fwait enter push in lock (bad) jb jl xor mov mov cltd xchg and mov ds movsb fbstp aas and repz (bad) negl or jne imul jno lea std pusha cmp bound pop fs mov fs cmp test nop cvtps2pd push mov adc mov adc notl cmp ftst lods lret cmp push lcall fisttpl (bad) stos sub addb ret pop (bad) fxtract sub dec (bad) das pusha xorl or lret sbbb jl cltd mov and clc std mov pop jo dec mov mov (bad) jle mov lods popa pop jl rclb (bad) frstor sbb adc push mov nop scas (bad) and mov (bad) imul pop (bad) cs repnz pop pusha inc adc aad push mov sub imul dec roll xor xchg jmp sbb repnz shr cmp repz icebp lods mov fs mov (bad) loopne iret and aad inc fistpll (bad) xor rorl or sti (bad) jle fs (bad) insb xchg pop or (bad) push movb xchg inc into clc dec adc dec pop adc daa pop sti pop (bad) aas insb jg (bad) and repz repz repnz mov rclb mov mov es rcr cmp mov fisubl fistpll push jle add bound je dec xor jecxz imul push sub push fs mov push mov inc mov xchg shrb xorl xor lock repnz (bad) das and dec (bad) scas scas jp mov (bad) rorl adc sub pop (bad) mov lea and ret pop dec add sub mov in scas movb xchg sub fstps sub mov sub icebp lret xor cmc loope mov mov inc xor mov inc loop shl out pop push bound je loop jecxz repz cmp xchg js daa xchg lahf cmpsl (bad) xor or jle movsl and sahf aad scas inc sahf out cli sbb dec xchg in xchg pop inc jge sub cmp mov outsb mov ss ds mov mov repz cmpsb bound xchg push aaa roll sub pop daa push and jnp cli adc xchg loope mov andb and lea sbb sbb xchg sbb push pushl lods sub ds mov push (bad) aam clc loopne popa xchg lods mov out xchg xchg rorl xchg pop mov add sub lods pusha ficomp mov gs call xchg mov test or jp mov push sbb in dec stos pop lock push mov decb push popa mov mov ljmp lock scas dec adc add dec jo and inc xlat and jmp lret jmp or add xchg loop out push sbb sbb lea xchg in aaa inc cs rcr in stos sarb sbb test daa outsl xchg call xor imul insl jge sbb (bad) pop mov les pop shlb lods sbb add or flds aad xchg repnz xchg daa inc push mov div shrl pop dec in push xchg sub lret jge pop aad mov gs inc mov inc in lods fwait xor mov pcmpgtd and (bad) mov mov sub sub das fstp and nop mov jb,pt in in (bad) mov shr fist lahf inc add mov dec push (bad) addr16 test sbb lcall fidivr cld imul (bad) xchg add arpl sbb lods in loopne jo add mov or arpl mov jge mov (bad) std bound and xor cmc cmp int3 jbe shl sbb adc pushf pop mov std mov (bad) or add pop jl int3 cmp gs mov sub or in inc lock jb adc mov or push jl les pop test icebp cld enter fbstp out jge repz mov jb pop cmp mov sti jo mov adcl cmpsb icebp lds xchg fs jo jns dec jp xor int inc xchg sub add cmc dec jbe negb hlt xor jnp movsl sahf and in cmc pop xor jb es jg sub or dec int3 cmpsl push mov and jnp and mov out mov mov mov mov (bad) mov pop loope dec mov push not aaa call imul aad (bad) mov pop adc leave push mov hlt das les pop or push cmpsl dec xor les pop mov (bad) cli movsl sbb xrelease lods sbb clc iret stc (bad) pop test ljmp or sub push testl mov aad xchg stc loop or cmp push mov push mov loop add adc movsl jge mov ret or lcall add mov mov inc inc lret punpckhdq pop sub scas pop and roll getsec jmp lods das push jns,pn das sub inc push data16 mov cmpsb push mov hlt jae dec jmp loopw cmp daa or pop mov jnp popfw jp fsubrp sbb test roll jmp lods add fisubr pop mov lods adc iret or arpl fs fdivr mov insb loop inc pushf fdivr jno sbb out sbb sub js pop mov aas sahf clc js,pn cmpsb mov add lods cli (bad) out pushf pushf daa jl addr16 les dec cld cltd imul mov lret cld (bad) lret fstpl outsb pusha sbb push inc dec (bad) mov fsub jae (bad) dec fwait cmp test stos shl mov stos sbb mov sub test jnp negb lahf in mov push sub subl loopne mov push pop rcll mov jae sub pop dec cmp in mov ret pop pop push sub movsl shrl or mov push mov push sti inc sbb cmp fisubr fimul fstl sub fimull mov mov inc cmp xor cmpsl push jne cmpl jbe fidiv add ljmp pop mov cmp stc (bad) lds fnstcw (bad) sbb imul jbe popf push es inc xchg jne xchg lret insb or leave or xor push cmpsl and push or jnp jmp adc jae aaa int3 pop scas negl fmuls movsl sub mov xchg leave popf sbb leave adc loopne xor sbb clc out mov ja leave enter fwait cmp or insb out iret in xor jle push cmp jae fidivrl inc lcall cmp sub jmp push lods jp hlt dec lods mov addb shll jno lret aam cmp movsl lret cltd adc push xchg cmp dec insl leave sbb mov idivl sub push xorl cmc or sub push xor ret and repz sbb pop push out add push xor repz loopne test rorb mov push leave and lret and repz ror insb xor icebp (bad) and dec (bad) xor xchg push dec adc ror sbb jp nop ror jl ret cmp xor and push cmp add xlat mov repz repz adc mov lret push cmp cs int std add (bad) movsl push lea mov cli iret xchg rolb xor addr16 int shll xchg jle lcall mov pop (bad) jbe xchg and std xor sub ljmp pop sbb or jmp mov xchg sbb mov notb cmp jnp xor pop stos xor push out movb insb (bad) pop mov arpl lahf push sahf add mov fldt mov mov and inc mov nop dec xor inc sarb shll enter push addr16 bnd or sub cmp mov mov cmpsb lods or and call jecxz fnsave sub notl fadds mov and aaa xchg inc out mov mov jno mov dec das jno mov repnz mov cwtl loope mov insl cmpsl xor mov pop and adc mov jnp or lret inc mov mov lahf xchg jb popa push xchg push mov and mov or gs xor mov js out fsubrl xchg into jb test ret pop lods xchg cwtl loope xchg lcall cmc mov xchg mov add cwtl lret lret cmp dec loop bound (bad) std shll aad mov xchg dec fldl lods and loopne inc jns pop mov out sub xor pusha lods lahf push inc inc ret leave and pop fsubrs lcall push dec subb leave stos js out sbb test xor pop xchg cmpsl cmc cmpsl out jl or sub sub xchg mov aaa inc popf xchg inc xchg or pop cmp jbe insb xlat jl add stos fcmove int pop lds (bad) aas addb out in jae out mov mov sub dec clc pop jge xlat or sahf int3 pushf insb outsb xor ficoml shrb aam lcall or mov or movsl push insl sub pop adc ljmp rclb cltd scas mov movsb mov sbb hlt pop inc stos in or pop inc mov test out fxch and mov rolb dec pusha jle add dec adc and sar out push (bad) sbb dec out fxch dec and fcoml (bad) faddl (bad) xchg jmp sbb sahf dec ret faddl scas dec xor mov in mov aam fdiv lahf pop jecxz shlb test mov jecxz cmc jmp lret and add and xchg push js (bad) mov and pop and adc sub push or std push setae repnz mov pop scas sbb vcmpunordss std popf sbb ret or jle bound stc dec test rorb inc pop adc lret (bad) (bad) jne scas mov mov fidivl or lock push cmp into push popf (bad) sahf adc jg dec arpl lds mov loope inc dec or lcall (bad) push movsb dec bt sub scas ds lcall cmpsl aaa xchg mov ljmp sar lret and cltd inc (bad) incl sub rorl sbb int push and (bad) stos mov mov test pusha jns gs shr in dec addr16 mov repnz pop loope or dec mov repz stc jmp nop sahf mov push mov push sarb pop adc aas xchg cld pop sbb mov or inc dec (bad) ror repz lods lea insl push push dec repz xor ja enter into xchg loopne ss divl add inc mov inc and inc xchg fcmovne leave lret lret jg and sbb nop in arpl scas xor inc pextrw pop out inc and ja add adc push sbb (bad) lcall loope pop (bad) outsb xchg jne mov mov ret sub adc xcrypt-cbc cmpsl push lods out lods lock (bad) les xchg sub sbb rcl cmp push mov xchg mov cmp xchg and testb std cmp (bad) (bad) cmp pop dec mov push sub or push mov imul mov mov cmp xchg sti sub cmp jbe mov or mov or jl inc fimull lds dec int cmp fstp enter (bad) xchg adc cwtl mov bound mov inc jne rol or dec popf int (bad) dec dec movsb scas lds aaa gs pop pushf daa add leave cmp int int3 dec sbb bound mov iret loope inc mov fdiv dec pop aas lds rcll pop loope or into add enter dec fcmovnu lods add xchg scas (bad) in popf test dec sar outsb iret enter rol insb outsl dec push (bad) pop ret inc jmp loopne iret aad (bad) (bad) pop inc push in mov out loopne pop fmull call popf (bad) ret mov pushf push rol and jge leave fucomp add lods add aad sub in fmuls iret (bad) std sub push ja xchg ljmp shll scas mov pushf (bad) xor mov ret repz xlat dec mov loop inc fcmovbe add pop pop out adc mov out (bad) cmp cmp pop lea loopne enter mov loopnew xor jmp (bad) int arpl call int fdivrl push popf inc (bad) sahf jns out push cmp mov jg movsb cmove popa or lea ret sub lds lds sub test pop mov lcall dec jae daa add pop add cld sbb arpl mov push movb sti xchg rcr leave outsl in bound pop (bad) cmp mov dec (bad) fidivrl (bad) mov mov add xchg fnstcw pop push mov mov mov faddl subl adc mov jne push sub adc (bad) (bad) nopl lock dec ret fdivrl dec aam aad in inc outsl mov arpl jmp dec adc pop adc cltd gs ljmp outsb aad mov das sbb jecxz ja aaa arpl jbe dec push insb jp xchg cmpsb jl es arpl sbb sub xor cli lcall arpl jbe ja jbe dec xor mov aam xchg xchg push pop push lods scas aas and hlt dec ds mov mov inc mov clc or sub jmp xchg sti repnz pop cmp or sbb cwtl andl clc adc add jae pop push mov sub or push (bad) addr16 inc sub inc jnp lret mov xchg add addr16 cmp add divl mull jb mov inc and mov mov pop pop rclb test fnsave in test and and adc (bad) addl rcr je call fisttpl and loop or jecxz ss push cli (bad) and pop pushf in and (bad) (bad) add flds test adc xchg fwait xlat mov lods jne mov mov jle xor cmp push hlt ja jg jns (bad) std push and inc cmc adc lcall cmp call sbb icebp and jge jns jne or pop sub ljmp in mov aaa shrb aaa shrb cmp lods push sub xchg ficompl xor mov movl pop cmc aad and push lahf in mov lock mov sarb xor rorl mov or sub and xchg mov jmp jnp adc push ja je out inc inc pop add add xor jo,pn clc roll mov push fldenv push pop in sub pop in push fildl pop inc (bad) push std insl jb xchg push add inc fsubrl stc inc mov and xchg push xchg gs cmp cmp cli lret pop pushf fs mov out (bad) lret out sub mov xor subb pop sub and and adc jle dec mov lds je push leave inc push xchg jne cs inc cs or mov fnstsw push data16 push stc aad ss roll scas fnsave mov inc mov (bad) adc pop pop pusha lea push mov mov lret mov mov cmc pop xor xor and xor mov push repz addr16 pop lds pop (bad) cli adc ret aas xchg mov sbb mov repnz jb push inc inc xor push mov and or jle stos fdivs mov dec add leave repz sbb shrl lret jb clc pop jle std (bad) jl jge sub add ret out cmc out jle pop inc loopne xlat xchg test faddp xchg pop insl and insl (bad) push dec sub in sbb lret pop and int mov mov js (bad) fistl push push movsl sub sbb jo inc xchg aam js jmp pushf ds popf mov sbb lcall xor popa mov mov add rolb test (bad) int sbb sub inc stos arpl push movsl daa cmpsl and xor bound sbb pop jb dec cld lcall sbb mov lcall cvtps2pd ja in lock out shl nop fdivp mov dec pop push mov enter repz cmp or imul lret arpl pop adc roll xor mov dec scas loopne lock sbb into popa add sbb pop shrl jle xchg push jae in inc test imul ja mov mov mov fs mov push insb je movsl and fucomp lretw (bad) adc push jnp mov addl scas lcall jnp sti pop lahf pop xor cmpsl (bad) sbb repnz inc arpl es xor push (bad) jae ljmp jns test sbbl dec fistpll std bound pusha ret insl outsb sbb clc xor mov push jnp (bad) aaa sti mov jnp mov xchg xor out cmp or inc cmp fisttpl push rorb mov xor push dec addr16 jbe js mov out ljmp adc push repz call adc xor bound sub sbb mov pusha insl jno sub mov je xor xchg movlps scas loopne out pop testl and out sub add mov lahf enter es cmpsb mov mov push jge push fs and jns xchg jnp xchg lock ja js add clc mov test push imul mov (bad) mov and outsb dec inc add cmc (bad) into fld mov cmp subl xlat mov sub jne (bad) in xchg lods dec push dec (bad) or int sub das mov (bad) fnstcw dec mov xor push cmp repnz jmp fs inc pop and dec (bad) ret mov fsts push add jge sti aad inc mov mov lods sti rorl push scas sti int icebp in adc dec movsb push into mov mov popa dec test leave mov pop or pop mov sti fstl int3 loope int dec lret cltd cmp rorl jb imul (bad) stc (bad) dec mul enter flds int insb (bad) stc fnop dec sub dec int nop daa in adc clc mov push dec inc xor cmp pop test add popa push and pinsrw pop mov repnz xor inc add cmc fisttpll dec inc or rol rol (bad) fldl xor out mov test ret mov test scas mov sub pop lret aam xor cmc sub repz dec insl repz and rolb xor push stos repz adc rol jl sub jb ljmp adc (bad) pop inc int (bad) in mov sahf and dec loop fmuls dec into adc rolb jns sbb repz add push add shlb dec push push rorb mov fsubrs fisttpl xchg rorb push and dec movsl repz xor sub push add inc int addr16 and dec mov dec fs and dec push ror mov lahf ljmp (bad) int jne mov sahf sub insl stc cmc (bad) stc shrl mov popa int3 xchg push (bad) rorl xchg lods sahf (bad) frstor cltd fistl lret mov sub cmpb add mov jp popf cmpsb push xchg xor inc mov insl (bad) or cmp inc mov fsubr inc cld (bad) xor jb or xor xor stc jecxz insl lret push mov cmp adc mov mov jb outsl cs dec cmp and or and inc mov xor iret pop mov lea lods xor cmp mov jae (bad) jb mov and xor test mov das sub inc cmp ret mov inc push xor push xchg pop movsl sti cs ficoml cmp dec sub lret movsl adc jl mov push cmp in and outsb das xor (bad) xor mov inc and mov inc xor and mov and push test pop iret jle xor xor dec scas xor adc xor cmp and cmp xor mov xor xor xchg jle cli cs jae iret push cmp dec xor mov xor mov pusha aas mov shll jae push ljmp jge bound inc jecxz add mov add add pop jle stc xor shll push mov xor xchg mov cmpsl mov addr16 int test repnz add stos mov cmp fimull sti jle mov xchg cmp (bad) jge cmp enter cmp stos and jmp or mov push add xor push pop xchg push push xchg lret pusha jmp mov ds xorl ficom cmp cmp test or mov sub inc xchg push ds mov rep loop adc and mov mov add dec xor pop sub inc popa jp xor jne mov mov add xchg inc sub imul and cmp or scas xor lds xor aam imul into add xorl add bound pop and add push and (bad) and or push pop jae (bad) xor xchg xor inc and sbb jge cmp jp bound xor lock lret cmp popa aas test fsubl cmp lea int3 cmp clc xlat repnz push cmp xor rorb sbb xor xchg adc add call mov rcr add repz add push and cmp or arpl or add or and dec and iret dec int mov add dec (bad) bound xor xorl cbtw and ret ja,pt mov mov and bnd or jecxz ficom lcall nop pop inc push mov push or rcll push dec xchg mov dec and fwait xor xchg cmp inc fiaddl pop inc dec pop sbb jne mov jl xchg mov xor pop mull shrl enter pop xchg gs adc aas sbbl fild fmull fildll out test xchg adc jge sarl mov popf cmp es popl in jge sarl es lea inc sub imul daa and mov into jecxz cwtl adc sub push xchg sbb push dec ficoml int out fcompl mov add inc fldl mov jge push (bad) xchg in cli sahf fldt dec pop inc popf out pop test xchg cmovg or inc sbb inc sarb int arpl pop mov nop cltd inc or lds dec insl jne inc dec loope std adc inc mov bound ja,pt add (bad) jo or sub aas dec aaa and xchg cmp sbb fimul popf rorl xchg imul gs (bad) out (bad) out push in dec mov sbb adc insl cltd pushf leave or dec fs xchg dec inc int3 sbb enter add and int xchg fmull enter frstor aas das das sub inc (bad) movsl mov into mov (bad) insl js add in dec cmpsb jl dec pop jae out jge mov fcmovne test push aad add fsubl ss pop std aam imul loopne jo push lret into xchg cmpsb fnsave dec popf stos dec ds fcomi out and iret add dec xor test loop or mov std and test sub lock adc jmp add daa js mov pop adc jl cmpsl mov dec mov jns push push icebp js scas out inc mov mov push mov adc xor sub jmp es xor add loopne sub repz sub jecxz je sub addr16 xor mov dec jo xrelease cld mov sub lods mov int3 sub insb sub sbb sub mov fadds cmp xchg push ror (bad) mov xor xchg xor es dec lcall sbb xor jp imul mov mov add and dec mov push rcrl xchg mov cmp popa scas xchg inc push sbb leave pop sti mov sub xor out xchg sbb f2xm1 mov xor cs lods cmp fcomi rcl (bad) (bad) xor (bad) icebp xor fimull in cs aas sbb sub ret jle sbb repz stc test add clc cmpsb jo inc les dec aam dec lret xchg loop int3 and or mov xadd mov mov or loopne rol cmc adc dec sub xor std arpl (bad) cmc lods sti push movsl rorb cmc lods cmpl lods sbb lods jl ret push aas push cmpl dec sub xor xor mov frstor lahf push addb push cmp jl dec or mov (bad) stos add in out jo ror lahf jle leave mov (bad) pop ret dec test sbb (bad) pop mov xlat inc add iret leave std sbb movsl in xchg in test xlat fucom mov fiaddl lds scas pop jmp fstps pop in stc sbb cmpb pop in in xlat movsl insb pushf adc mov lea inc and or popf pushf addr16 fs pop in and fstps sbb pusha xchg (bad) pop mov mov dec in std lahf mov out mov in in addr16 ret sub mov leave and push aam in cwtl push ret mov insl mov pop dec inc in fstpt movsb movq in inc aam jns push pop out and adc or pop mov (bad) fstpt ds scas aad addr16 adc mov leave push push (bad) mov out push hlt leave in cwtl insb sub mov sub lcall pop in movsb mov sub mov ds in pop jnp or out sbb xchg movl cmp push sbb out outsb adcl test imul mov cmp adc lods push cmpsl movsb fwait stos movsl shlb bound test mov jmp aad ss add fmulp mov cmpsb lea in (bad) int3 das dec add fsubrp out mov scas mov xlat or insl jno sbb add dec jne lret popf or pop sbb mov or das out out out loopne cli mov fcoml add cmp sub cmp and push sbb mov inc jb (bad) (bad) fadds mov push mov fcmovu and jns jbe outsl dec mov iret (bad) mov in insb mov insl pop (bad) int3 call inc jge clc mov (bad) inc stc sbb sbb push fcomip dec insl and sbb and insb xorl js sahf scas jg xlat mov adc int3 gs je aaa (bad) sar imul hlt int3 pop in insl cmp pushf icebp lods cmp and jno subl notl and mov jmp out and movsl add daa sarl ret sub jno pop sub mov push ja jns cwtl inc jnp mov adc jl mov push (bad) pop in aas pop cli xor xchg xor rorb mov (bad) mov fwait inc xchg std pop idivb pop mov push pusha cmp mov push add xor enter cmpsl xlat mov mov sub hlt jno mov sub data16 jbe jae xchg outsb xor fcompl insb mov mov push fidiv inc inc je or je stos aaa aam jb add popf adc rcrl push sub mov or mov cmp lea add inc pop mov (bad) (bad) xor xor lock jp or push inc pop inc xchg sub xchg cltd sub rorb inc jno sub test xchg cmp xchg aaa jge loopne dec dec bound popf popa sub and out ja and add jne aam inc (bad) xorb test (bad) (bad) push movsl psrlq fstpt cmp loope and inc lahf or insb mov mov (bad) jmp ret push dec sbbb xchg shr rclb (bad) mov pushf test aas push shrb mov ds sub aad ret push (bad) jg js cmp es test cltd pop hlt xor lock sbb inc movsl sub push das imul inc pop in push xchg and xor (bad) in adc sbb dec arpl jnp xor out sub jmp push mov jg in cld stos nop jne jl jne mov mov jmp sub (bad) mov aam leave add icebp lcall lea faddl addr16 mov in ficomp in cmpl gs cmp push hlt xchg adc and push scas aas pop lcall inc dec cwtl out out addb mov cmp push insb inc ret fisttp jge insb mov mov sub lea lods adc (bad) push pop sahf xlat jmp (bad) (bad) ret ffreep fstpl inc mov mov stc les iret dec js push cltd into push pop add out mov das or mov int3 xchg lret jb in shrb cmp imul lods cmp cmp xchg sahf mov jmp shrb sub mov cmp sub fs js pop jge pop pop sahf sahf lods cmp aas fldcw or les popf xor aam mov imul and aad popf ret enter in mov repnz sbb xor cmp push dec (bad) mov push adc add mov jecxz push fistl ljmp (bad) cmpsl imul mov xlat popf pop mov fwait adc sbb xlat lds scas lds jle cwtl sbb lret dec adc add movsl lcall pop das dec inc je mov lds insl je bound loopne adcl lret aad (bad) jmp mov jns popa arpl sub mov inc loopne repz lds nop fistl push imul cli sar xchg ret out (bad) lahf pop in ljmp push das mov aaa jge fldt sbb int3 sub test loope in aas (bad) idivl jno xor pop or arpl jne iret arpl in xor addl fsubrl rclb xchg aas (bad) or lock aad in popf into cmpl ret rcl jp push mov inc out das ret es dec repnz inc jbe mov ret test stc popf add jecxz dec (bad) repz mov out mov out xor test fmull scas sbb mov mov dec xchg xchg xchg fnstsw xor add xorl imul xchg mov push jecxz mov dec shrb pop add push inc mov icebp sbb jno js imul add or push jecxz mov jae imul inc loope hlt mov sub ss roll mov push mov dec mov lea lea xlat cld fucomip push xchg ror sub cltd mov pop jge aas lds ds pop incl jmp inc nop jns (bad) cltd dec rcll sbb in lahf push ljmp adc daa outsl pop add xchg in into or scas xchg ret std push mov hlt (bad) std lock lahf mov xor push lods mov and sub les test mov movl mov cs lret adc jno xor sbb ss (bad) sar in lods and (bad) or cmp fisubr movsl neg xor inc sbb mov lahf jmp fmull pop js jnp push add out loope clc push aad mov inc jns enter fucomp jecxz or inc add xchg mov jno leave gs call movsb ret aad mov test rorl popl cs std adcl mov or sub stos out int3 push cld leave roll shll fidivr call push xor lea push mov add loope jmp sub add hlt pop les pop les jns int3 out adc int pop lds ljmp inc hlt js out fucom push push mov fimul je mov js inc outsb pop jge jge push std into push fstp outsl test test rorl hlt movsb movsb test jnp (bad) roll mov std loope mov ret stos xor adc loope je mov into lds dec shl mov dec sbb lret mov inc outsl dec mov add or test int fisubrl adc testb push mov daa cmc nop into sub iret out je ljmp stos rcll mov mov push fs test adc ja adc mov push jo sbb xchg lods je das adc mov cltd sbb mov test fnsave cmp xchg and xchg divl push andl leave outsl pusha sub outsb jl sahf mov mov iret cmp imul inc mov (bad) std data16 push lds (bad) or unpcklps out or add sub or sub or ds mov mov cs inc add cmpsl push mov aam (bad) orl cmp into inc jnp ret (bad) repnz xchg cmpsl sub ljmp (bad) outsb inc pop ror test fild (bad) loopne pop or add fwait sarb mov repnz into or sub ret mov pushf lea in jb pop push sbb enter lds in sbb ds (bad) leave incl in mov test mov enter inc push xchg mov sub int ret test fadd (bad) jecxz out rcr es dec outsb fdivrs dec push js cmc loope dec shlb in cmc gs lret leave xchg or push loope sub test rcrl enter mov xchg xchg dec xchg lret pop cmp cmp sub xor test jl (bad) in cs xchg into jl or aas pop jb inc pop mov stos (bad) je lds inc jae cmp shrl (bad) dec push jb add sub jo scas inc jp outsl adc or jbe int vpmaddubsw mov not xlat (bad) ds loopne mov cmp hlt aaa lea and (bad) or in sarb testl jle dec push mov daa loope cmp gs stc push mov lret fs push sarb loope inc inc mov add and int cmp aam adc outsb or shrl pop jge push hlt xchg in paddusw subl clc in cmp ds ja push fsubrs std outsl push aas lds cli fucom movsb fucomip pop and (bad) das fucomp mov mov (bad) xlat lds aas push lea push xor leave xlat int cmpsl xlat call icebp mov out outsl cwtl vmulps pop or (bad) xlat int inc adc lea inc inc je aam in in ret fstl (bad) leave addl cmp dec nop or add lea lods imul cmp daa int3 or cld test data16 int insl inc outsl lea push in mov nop imul decl repz lret inc xlat mov test cmc push lret push insl (bad) ret hlt dec mov popa pop out mov fsubrs ficoml inc dec mov scas or jg cmp pop int3 call dec out outsl lds jae fcmove pop dec push popf leave cmpsl mov or jnp in (bad) arpl dec leave loope into in mov push dec fnstenv test ds or popf jns mov pushf mov arpl inc (bad) hlt dec sar push iret sti sarl nop sub add les mov loop mov cmp or popf inc mov nop mov negb cmp test jp ret add inc lret inc mov das int3 sbb cmp stos stos cmp and icebp xchg fstpt mov cmpsb test xchg lods or lret lods jbe and push jp dec and movsl cmpsl xor mov lcall push inc fsub outsb andb in inc icebp (bad) fstl xlat adc xor sub jne push (bad) (bad) in xor inc stc inc cmp push dec iret insl pop loop push popf lea mov lahf (bad) and fistpll cmp push rol jp aad ret adc fistpll std add cmp int3 mov enter aam inc pop pop cmpsb mov pop xchg inc push nop mov jg or jge ror pushf call xchg pop orl xor divl gs rorl cmc and mov fcos lods push in icebp fucomp add mov in ljmp xor out sbb fidiv lds out mov jno gs xor dec mov (bad) aaa in in cmpsl pop add xchg fnstsw adc or xor (bad) or push popf lret popa cmc jae roll mov xchg out ret (bad) mov cs leave repz push pop imul xchg mov (bad) fldln2 mov pushl (bad) mov inc rcl xor add gs or mov lds pop inc sbb mov test push jnp jg xchg leave aad xor clc rolb mov xlat mov iret aad sbb jbe pop std push rcrl fsubr jnp into dec (bad) rcrl aad (bad) jnp data16 mov insl mov popf es in je jmp leave cmc sub mov cmc sub fprem1 xlat into dec imul ds adc push dec lret lea xchg mov (bad) sub cmpsb sub testb add fild outsl (bad) negl div mov arpl fdivs cmp scas fbstp adc std and test push clc movsl sub sbb nop fcoml gs jno mov sub dec inc clc mov cmp in cld pop int mov rol movsb inc aad jg into bnd sbb lret lods mov cmp mov scas cmc int or lods fucom or dec ret push (bad) (bad) fisttpll (bad) mov icebp leave lods fucomp (bad) or (bad) fld (bad) cmc int lods fucomp dec adc sub (bad) sbb int3 iret push iret leave in lds cmp sub (bad) or dec out mov out dec les je lds (bad) jge je lds frstor jge int3 das push iret leave in cli sbb pop popa mov iret aad hlt fld lea lea lret int movd leave jne enter leave mov lods fucomp leave lret les out dec (bad) pop lea addl call iret leave in lds fucom or dec out je int js daa mov scas cmc int or or dec int3 and in leave (bad) dec les fucom or dec sub (bad) pop lea dec les pop adc cmp iret push iret leave in mov out dec les lds inc in mov push mov push adc scas inc dec sbb xchg push sahf and pop and sbb hlt js jne adc add push xchg movsl jp sub nop in loopne fs and push aaa jb push lods xor das push push ds sbb add sub loopne sub adc aaa mov push push and and repz or je sub fidivl into hlt mov xor mov push sbb les test xor loop push mov jb push pop mov adc xchg adc xor cmp push or setnp lea jo xor lret sub pop or mov aad mov movsb test cli mov lods xor inc out lock into dec dec mull cmp inc dec dec scas cmp lock xor mov and mov je mov mov lret pop cmp scas jb idivb mov out jmp (bad) mov dec push rol popf inc xorb test or stos mov xchg movsl pop lret adc fwait stos clc mov stos pop adc push je mov aad lcall (bad) jl jno ja outsb cmpsb insb lcall aam loope in xorl je lret mov pop jae icebp ljmp xchg pop mov jl test pop data16 movsb sbb je jno fwait and push adcb adc loope sahf jns jnp test aas mov fldt fisttpll ret aaa mov pop fadd mov call xor loope add adc push push add push cli ret les and stos inc push mulb mov cltd pop in xchg in lahf sbb insb insb sbbl pop fadds adc inc pop mov inc insb les pop out inc jecxz jne stc scas mov movsb dec pop lret pop cmp cmp push add hlt aas aam jns mov aam in mov and sbb dec adc lret sbb cmp fs sahf pop mov outsb mov (bad) aaa pop push cld aaa scas sub mov loop out mov inc loopne rorb rol ror ret (bad) shrl imul xlat neg mov enter xor push xchg xor xchg das xor mov and jecxz add popa lcall ss out dec (bad) (bad) out stc and push or lret scas cmc and sub and cmp enter (bad) sub sub sub adc outsb pop lcall mov or sub inc or jae xchg dec pop rdpmc ret std mov dec push sahf fdivrl out pop mov jmp das inc xchg cli out pop mov jl (bad) scas stos sbb clc clc hlt xchg xor cmp sbb mov xor test or rorl add std adc lods popf fldt cmp lods dec movsl into hlt xor pop adc imul jecxz,pt pop sbb cli mov das lock dec mov jmp sbb adc jbe (bad) repnz jecxz lea cmc div cld pop ja int push xchg std jp cli rorb mov mov (bad) lock iret jbe and lcall ss cld pop mov adc ljmp rcrb mov movb lods fs mov cmp xor push out jge xor sub loope sahf cmp mov adc inc pop jno jne loope leave inc or lahf adc dec and mov mov add dec das insl jne inc jmp cli jg out cmp jl push push push in aad xchg (bad) cmp ret push adc inc sbb pop dec pop das add ljmp pop mov jmp pop scas sub sub out cwtl or outsl jne inc push subl pop test mov jns xchg nop mov jne daa add mulb cmpsl xor and test push (bad) cmp push mov lods push cmp gs rol pop push mov xlat jl roll pop stos sub pop scas push and fwait xor or xor push test adc jg dec mov mov clc inc cltd add mov flds mov cmp leavew aaa mov repnz data16 pop and cld xor pop push mov jle xor in push add cmp pop mov cmpsb cld pop cmpsb jne jo xchg xlat jg sbb sbb mov loopne jle mov inc xor in mov jnp loope add loopne mov mov inc cmp movsl aaa rolb (bad) imul xchg push fwait shrb mov (bad) xchg repz lcall pop shlb sub rclb adc adc aas mov (bad) (bad) xchg mov hlt inc inc out xchg pushf adc cmp jae mov imul sbb or lods adc push sub ljmp jb enter jp mov iret mov mov dec and lock stos cmpsb inc imul cmp jno dec ret bound aaa lret pop adc push mov lods and cmpsb xchg (bad) orb xor xchg in ffreep out out into pop mov and lds jecxz mov scas xchg push jmp pop adc andb xor pusha xor sub icebp cmpsb mov negb in jno push xchg test push jge enter or sbb mov dec (bad) arpl pushf push push inc js jbe daa into inc push ljmp cli xor sbb (bad) in stc loope leave push pushl push mov mov in xchg out pop out cltd mov scas jne add nop sti addl add mov xor lret add in cmpsl adc add shll or sub fwait pop lock cli call lods push xchg stos pop add stos push lcall jbe ret mov xchg pop xchg out push sbb in cmp sbb cwtl (bad) cli adc lahf pop pop test out dec jnp insl mov mov (bad) stc bound adc and push cmp inc xor adc mov push stc mov cwtl mov xor js sarb pop inc xchg ds xchg mov cmpsb xor push push mov leave and enter cmp or xor mov or outsl jbe adc lahf cmpsb xor and nop (bad) jecxz pop inc sbb outsl and cli inc jno inc dec bound pop dec por lock mov imul add mov jae pop fiaddl movsl hlt jecxz jle sbb outsl aam add pop push lahf fstpt inc iret pop jnp popf push les mov cmpsl mov clc stos daa (bad) mov pop push pop adc sbb insl std popa inc and cmp fwait push adc stos push insb mov lahf xor add lock push popf push cld inc xchg subl iret jne inc imul sbb inc inc inc push adc stos fdivr (bad) sbb push xchg jmp push mov stos lds lds (bad) dec shlb iret cli stos (bad) mov cmpsb jge mov scas sbb icebp imul push sarb or adc adc mov dec xchg inc cltd cmp sub popa rcl sbb mov mov xor cmp aaa push sub es cmp xor cmp ljmp jl add xor jne ss xchg test cmc cmp jp xor xorb ret dec pop add test sub sbb push insl insl pop xlat testl cmp push in xchg adc movl imul jl pop mov mov pop inc xor mov jp fidivl insb lock adc outsl and pop inc push lds push leave out add sub gs les mov and imul inc out push pop shrl fdivs xor mov push les xlat pop pop adc push pop jg,pn cmpsb ret mov test dec push mov mov lock scas lretw push cmp xlat popa push pop in and push lahf (bad) fwait push scas cmp ds cmp cmp adc mov xchg mov test cmpsl or xor (bad) mov adc mov lods test aas mov call mov adc sti andb insb out jg or push je mov dec (bad) (bad) xor pop pushf in stos test idivl aam out lahf and in imul clc test notl leave (bad) xor add test in jne jmp (bad) add xor stos loopne push sub adc call mov push mov xor in mov pop mov push adc and ficoml sarb das mov mov inc inc pusha mov sarb mov or scas aaa dec shrb clc rcrb sub add iret lods jmp or push mov lret jg push add popa loop js scas cmpsb xor cli (bad) adc test pcmpeqw mov inc outsl pop flds ret mov mov jmp test add pop push scas stos xchg fildl dec xchg push sub add das out add in mov dec jae jg (bad) subl pop inc or jne mov daa sbb xchg jl push cmpsl mov or jmp negl pop scas mov test or or clc and dec (bad) inc or push jge ja aam xchg imull insl icebp push xchg pop pop pop mov ss lcall sub mov jae lock pop rclb leave (bad) imul das and mov pusha int3 jbe mov notb js mov sbb xor popf rolb mov inc mov inc dec mov mov into sbb repz cmp stos jge orl pop gs add jno test add mov pop inc sub mov stc adc and cmc rclb jb lods push sbb dec and mov cmp std imul mov rdtsc stos push pop fadds cs subl and pop xor lcall jbe jl js popa push push xchg ds cld shrb push adc push data16 and adc sub cltd pusha fisubl ss add mov dec (bad) jecxz mov int3 fdivs xor adc sub inc jns cwtl sbb sub imul xor jle mov pop cmp jl popf xchg sub mov idiv jbe ret popf xor adc (bad) ret loope cmp ja cwtl cmp pop (bad) sbb clc cltd add repz fildl enter cmpl xchg (bad) scas push push push mov stc repnz push std orb imul xchg add fldcw jmp push push test or mov loopne int mov adc stos das xor add sbb jns xchg fdivl cmc lcall enter mov adc rorl mov pop add adc mov jnp lock sbb mov jecxz and or mov cmp jne xor jecxz adc pop fbstp (bad) mov mov xor inc xor adc insb jle push ds or inc or popf fmuls sub add dec jle cmp out cld inc xor mov pop push xor outsb pop js mov push mov sub adc mov or inc xchg mov and or shlb bound sub xor mov (bad) cmp xor jg rcrb sub sbb lahf inc push adc add cs xor mov mov mov fistp xchg mov sbb xlat jge fwait jp xor icebp fcmovu xchg mov jecxz icebp dec adc mov push mov aaa rolb mov fcom lds pusha adc or int jne rorb mov shrl jle cld mov fildl fwait mov inc adc push mov mov mov sbb jge xor (bad) xor push mov insb cmp pop mov insb pushf push mov push add inc fcoms inc fdivs cmpsl dec jp mov xchg jnp mov inc xchg mov outsl xor ficoml mull push arpl mov mov cwtl insl push in loopne add pusha je lods xor shrl cmp cwtl xchg loope xorb add adc rclb xchg sbb sub xchg out (bad) aas movsb mov xchg or cmp subl dec xor outsb cmp jo cld clc and cwtl stos idiv daa shlb movsl flds cmpsl inc xchg mov xchg dec mov mov cmpsl (bad) sub sbb mov mov mov lahf rcrb and aam mov mov leave fdivl and cmp loop rorl pop add enter decl addr16 adc dec cmp (bad) scas (bad) lret clc jbe stos stos jp pushf (bad) insb rcrl xchg pop sbb pop mov mov rclb sti sbb mov aad lret jne adc push mov cmp inc pop cmp jno dec inc lds jl dec imul loopne ss push inc (bad) sub lock xor xor ja ds daa cltd dec imul sbb sahf fdivl leave cmp adcl sbb (bad) sub test hlt pop mov mov cld aaa cmp enter repz cmc jnp jg push adc pop mov out and mov jecxz gs icebp pop cmpsl or push mov push sbb lret sahf mov dec push outsl and jb ljmp cmp jno adc je sahf mov mov mulb sbb iret and addr16 sub test cs adc mov cmp push push fcomi fcoml repz lret aam mov out mov xor add iret pop cmpsl in pop jl mov roll aam lcall xchg push adc mov loope pop push sbb dec sub add pop inc xchg pop add xor xchg les mov fbstp cmp aad mov adc or fisubr cmp ss mov push scas dec cmc push fs shll cmp sahf sub imul inc rcll bound (bad) lock das or cmp and shll loop pop dec lds push (bad) mov inc mov mov mov push sub jbe inc pop push rcrb mov lock push cmp cmp ficomp ss jb out sbb sbb sarl dec in dec std and cmpsb push je sbb test inc inc sub enter insl fisttpl jne inc dec xor mov xor shrb xor mov xchg fcomps and into jp push pop mov mov cmp xor cwtl xor gs lds icebp lods xchg sahf push out xchg mov pop loop int3 push xchg push outsb mov lcall dec dec aas jnp (bad) loope outsb addr16 mov and or ficompl int jnp int xchg jl or orl cs data16 sub mov jg imul popa sub out sbb mov cmc jnp addr16 addr16 cwtl or imul test dec dec mov xchg insl jecxz push push loope xchg jae xor (bad) aaa popa pop mov das mov out cmp test outsl mov mov inc fdivs xchg dec loopne sbb mov out xor fisub sbbl or scas xchg xorb pop out out nop cwtl or out je xchg and stos negl mov and adc (bad) fist rclb xchg lods shr cmpsb xorb (bad) loope out inc and mov je push pop cltd enter lock repz and xor adc aad (bad) (bad) mov adc dec stc push in and mov or je adc mov cmpsb cltd arpl mov sub int jbe and lods and cmp ficom in popa or ja sub repnz roll inc sbb jns mov mov inc dec mov xchg stos sbb dec inc rclb rol add dec icebp push aaa mull mov loopne dec mov outsb stc or mov cli mov pop adc enter movsl jle (bad) add jno mov aam mov outsl in adcb mov cwtl je inc inc insl (bad) cmc push inc pop mov mov xor gs inc gs add in (bad) pusha sahf mov dec cmpsl push xchg mov and or or cwtl cmp out and (bad) adc es sbb sub cmp xchg imul adc add mov mov mov mov scas pop mov loop lcall and ss push mov fldcw xor ljmp inc cltd mov in dec bound (bad) mov test icebp jp insb cli sbb jae cmc adc pop pusha and or roll mov cmp (bad) jb outsl adc pop aaa cmp lret es jns mov xchg aad xorl jo mov stos stos or fsubrl push outsl sbb fwait dec push sahf push cmpsb icebp aas dec js jb xor push call int3 mov inc push cli loop push (bad) test iret loopne js mov add push in nop dec enter dec adc mov pop mov pop dec lcall leave es mov sahf (bad) xor adc out neg inc mov xchg cmp push mov or fiadd mov data16 push sub jle sbb push mov push inc push push cli jmp (bad) cmc outsb adc aaa pushl popf out imul add sub iret mov sub push mov add push lahf sahf jbe hlt push outsb out in push mov dec (bad) in mov xchg and adc sub sbb fist out adc ss mov xchg dec lods or pop pop adc mul jae roll jo sub and popa and js (bad) jl lret andb xor ja (bad) jp pop xor xchg mov xor sti xorb lock jo ljmp jl lea mov jo mov inc ljmp scas (bad) xchg in jecxz lahf add mov aaa inc cs xchg aas das nop push (bad) jno ret imul das dec or jo inc dec pushw jp jno,pt popf test push sbb mov inc lock stos in adc aad xor out movsb loop fistp shll movsb mov movsl add test pusha sub sub div push and jno insl loope sub add mull adc adc out fsubrl xchg ds ljmp ds cmp dec add inc xlat (bad) stc add sub arpl push sub and outsl ds sub add add push sub dec adc les rcrb test rorb daa repnz jno add shll jnp mov outsl std insl pop std pop jno lods xor inc pop dec pop xor or mov jle sbb jno push int3 cmpsl mov lock scas cmp jp add fs stc adc sbb mov incl push mov cs mov cmp sti fisubr xchg pop add outsb xor cmp std daa xor insl (bad) adc sub ret or sub jb lret or mov jge and mov (bad) or xor sub movsb clc add dec add fild (bad) mov ret cmp cld inc nop dec repz popf jge cmp mov int in sub mov popf pop or pop ret jnp mov xchg lcall (bad) std and scas pop movsl sbb in inc mov loop or or ja jns xchg lods std fwait push jl jae (bad) (bad) mov lret xchg (bad) repz neg pop lods shrl push (bad) mov dec ret pop fsubl enter pop lods push and inc hlt js lods lock push icebp addl dec mov jno pop xchg cmpsb ja jno loopne rolb xor not out orl nop pop fwait test push aam mov arpl jl mov imul mov mov lahf push rorb loopne lcall push mov repz insb or push or mov mov movsb pop mov fidivrl data16 add jnp add xor adc cmpsl jnp addl sub jo jae jno negb xchg mov pop (bad) mov nop jae sarl sbb pop pop insl pusha dec out lcall mov adc out loop pop movb insb scas xor sbb nop push stos out or cmp dec and mov and test dec cmp sarl mov popf sbb add pop and xchg scas scas mov sti cmc and arpl je dec cmp fs or movhps push push daa mov cmp pusha add cmp xor fidivr and fbld mov fidivl out test out inc clc push adc sbb cmpsl jo jno adc pop xor xchg (bad) xor mov add bound sub pop insb mov xchg lock mov pop jle mov xor imul jnp ret loop mov push popf mov mov jae sub or xchg add cmp and sbb jl mov push jo pusha sub inc imul push mov adc sub dec add in sti jns adc mov lret js ja inc test (bad) ret push loopne or div xchg adc lods cmpsl and ret pop cmp icebp jmp rolb push enter dec aam nop cmp shrb cld in lea lret jecxz inc cmc pushf cmc aam jge gs out jge dec jmp xchg lea flds les subl inc cld inc outsb into (bad) jno jge mov mov mov or mov sbb lds stos int int in into lods int iret (bad) xor ss clc cmp sahf add mov jb (bad) divb mov inc sub lea xor cli push dec mov loope rorl icebp lcall (bad) lret out enter movsb xorb inc cltd mov into xchg shlb sbb jl dec dec loop add int imul iret loop rcrb rcll lds mov and sbb cmp in add adc pop inc push (bad) fiaddl in cmpsl sub jb repz cmp ljmp sbb or sbb push bound loopne xchg sarl cmp mov and xor inc inc inc dec and sub adc dec dec decl lret adc jmp or inc mov lret in popa lret test shlb das sbb jl out or dec leave dec mov lods fldt loope mov pop je loopne xchg rclb in xchg sbb sbb and ret .byte lahf .byte .byte 