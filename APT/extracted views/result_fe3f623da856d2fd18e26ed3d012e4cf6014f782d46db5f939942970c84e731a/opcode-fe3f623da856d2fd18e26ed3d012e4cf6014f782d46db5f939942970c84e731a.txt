inc cwtl adc lret or data16 or data16 push add or data16 adc femms mov inc or data16 push data16 push data16 or je or popfw dec push pushw push pushw add pushw add data16 xchg pcmpgtd bound data16 or data16 or lahf sbb data16 add or xchg pcmpgtd jbe data16 mov pcmpgtd loope dec and push push push sub xchg mov or data16 dec insb push add outsb add test data16 xor adc ja data16 data16 or data16 in out push inc xchg pcmpgtd sbb push data16 imul scas lahf or add add add add add add and dec add (bad) dec add add add adc mov add pop xchg dec add dec add xchg dec add xchg dec add xchg dec add dec add dec add xchg dec add xchg dec add xchg dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add dec add xchg dec add xchg dec add cwtl dec add dec add dec add cwtl dec add cwtl dec add cltd dec add cltd dec add dec add dec add cltd dec add lcall xchg lcall in lcall inc fwait dec add dec add fwait dec add fwait dec add pushf dec add add dec add pushf dec add pushf dec add popf dec add dec add dec add dec add popf dec add sahf dec add dec add sahf dec add sahf dec add lahf dec add dec add dec add lahf dec add lahf dec add mov dec add dec add mov dec add mov dec add dec add dec add mov dec add dec add dec add mov dec add mov dec add dec add mov dec add movsb dec add add dec add movsb dec add movsl dec add movsl dec add dec add movsl dec add movsl dec add cmpsb dec add cmpsb dec add cmpsb dec add cmpsb dec add dec add cmpsl dec add dec add cmpsl dec add cmpsl dec add test add test add add test add test add test dec add dec add test dec add stos dec add stos dec add stos dec add stos dec add dec add stos dec add dec add stos dec add stos dec add lods dec add lods dec add add lods dec add lods dec add lods dec add lods dec add dec add lods dec add lods dec add scas dec add scas dec add scas dec add scas dec add dec add scas dec add dec add scas dec add scas dec add mov add dec add add mov add mov add mov add dec add dec add dec add mov add mov add mov add mov add dec add dec add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add add mov add dec add mov add mov add mov add mov add mov add mov add dec add dec add dec add mov add mov add mov add mov add mov add mov add dec add add dec add mov add mov add mov add mov add dec add mov dec add dec add dec add mov dec add mov dec add mov dec add mov dec add dec add dec add dec add mov dec add mov dec add mov dec add dec add mov dec add mov dec add mov dec add mov dec add dec add dec add dec add mov dec add mov dec add mov dec add mov dec add add dec add mov dec add mov dec add mov dec add dec add dec add dec add mov dec add mov dec add mov dec add mov dec add dec add dec add dec add mov dec add mov dec add mov dec add dec add mov dec add mov dec add mov dec add rorb rorb rorb rorb rorb rorb rorb rorb rorb rorb rorl rorl rorl rorl rorl rorl rorl rorl rorl rorl rorl ret and dec add ret push ret imul dec add ret (bad) add ret repz or dec add ret dec add ret dec add dec add dec add dec add dec add ret dec add ret dec add ret dec add les push les xor les arpl dec add dec add les mov les in les add dec add lds xor dec add dec add dec add dec add lds mov lds ljmp add (bad) dec add (bad) dec add dec add dec add add (bad) dec add (bad) dec add pop repz jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add cmp xchg pop scas fnsave cld add add add add push gs popa imul add add add add add shlb add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add dec add add add sbb add test inc add add add add test inc add add add inc add add add inc add add add es add add add inc add add add es add add add and add shlb add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add rorb pop add add sbb cld sbb add add mov add add add add add add add add add add xor add or or add add add xchg dec add mov add (bad) decl add add add add add add add add sbb or inc add add (bad) add add add add jo bound imul dec jns je add push gs popa imul add add sub or sbb push inc mov (bad) mov add add add add add add push add add testl inc mov fidivl add add repnz add add add inc add add shlb add add add dec add (bad) (bad) incl add add add dec add add add push add add add sbb add add pop and add enter add add rcrb inc add add add sbb add add rcrb inc add add add sbb js dec add add add aas add inc add inc add pop add add in inc add (bad) (bad) incl add add add add sbb mov add and add (bad) (bad) incl add add sbb push sbb in inc add sbb lock hlt add add and add add add dec add add or dec add inc add rorb test inc add add add add add and add add and (bad) incl add add inc add rorb add add test add add add inc add add add inc add add add inc add add add inc add add add add add add inc add add add and jl dec add add add and add inc add adc add add add add add add and js add inc add add add add add and add (bad) (bad) incl add add add add addr16 and add (bad) (bad) incl adc cmp add cld and add add add and cwtl dec add and add inc add add add cld and add add pushf and cwtl dec add and add inc add add add add add inc add and add inc add add add sbb inc add add add inc add and add add add dec pop inc add push inc add sbb ljmp add inc add push inc add sbb ljmp add push inc add sbb ljmp add pop inc add push inc add sbb ljmp add pop inc add push inc add sbb ljmp add and enter in inc add sbb lock insb rorb mov (bad) (bad) incl add add add and nop ljmp jl pop jle add add add adc inc add and or add add add add add add add push inc add (bad) (bad) (bad) cmp inc add and add add dec push fs incl add add add inc add (bad) (bad) decl add add and add add mov incl add add add sbb (bad) (bad) (bad) (bad) fsubl inc add add add rorb add add call add add add add incl add addb add add dec sbb (bad) (bad) (bad) (bad) js inc add add add add add add and (bad) incl add addb add add dec outsl outsb ja imul jp imul jb popa outsb imul insl jns add add je popa imul add sti mov or cmp push loope jle sub mov insb aam xchg mov out sbb push inc mov (bad) mov mov bound inc mov jno dec adc xor or stos add xchg dec gs gs jo arpl add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add insb and add add add add add add add add aam add (bad) add dec lods xor or stos add xchg inc outsl jb add add add xor or stos add xchg dec jo imul je outsl outsb xor fimull xor or stos add xchg dec popa bound xor add gs xor add push add push fs xchg stos jmp cmp push mov incl test roll testl inc mov fidivl arpl cmp dec xor xchg or or or inc add add add jb gs xor add add adc gs outsl outsb jae insb gs jne jae jb outsb outsw add add cwtl and inc add add adc dec add or je jmp push mov call jmp add add add add gs xor add add add jae outsl insl inc jo add add and inc add add sbb dec add or je jmp push mov call jmp add add add add je jo outsb inc insb imul push imul clc and inc add add sub dec add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb popa jae add add or add inc add arpl imul add add cwtl and inc add add xor dec add or je jmp push mov call jmp add add add inc outsb jne push imul clc and inc add add inc aam add or je jmp push mov call jmp add add inc push dec inc dec xor cs dec dec add add push add add gs je push imul jne push imul cmp inc add inc add add dec aam add or je jmp push mov call jmp add add add add gs add cwtl and inc add add pop aam add or je jmp push mov call jmp add add add add add add add add add add add add cmp push add xor and push add xor add add hlt daa inc add inc add add add lods xor or stos add xchg or add inc add add jo popa add add add add add add add jae (bad) (bad) (bad) incl add adc add push add popa add insb add jb xor inc add arpl imul add insb add jb add push inc inc ss dec dec add add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push popa jb popa je dec gs inc popa insb insb dec add add jbe popa push popa jb jae dec add add jbe popa push popa jb jae inc je add pop pop jbe popa push popa jb jne add jbe popa push popa jb fs jbe popa push popa jb gs bound fs data16 add pop pop jbe popa inc jo insl jo jns add add jbe popa inc jns popa jb add jbe popa inc jns xor add pop pop jbe popa inc jb gs je dec imul pop pop jbe popa inc jns fs pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa push popa jb outsl jbe add add pop pop jbe popa inc imul add pop pop jbe popa inc gs ja gs add pop pop jbe popa inc jb gs bound add add daa inc add add jbe popa push je inc popa je pop pop jbe popa inc imul add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa inc jb gs je add add pop pop jbe popa push je dec outsl jbe add add pop pop jbe popa dec outsb push je add pop pop jbe popa push je inc outsl jo add add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa inc outsb add add pop pop jbe popa inc jb gs popa jb add add jbe popa push popa jb jae inc jno add or or dec xor push sub or sbb push inc mov (bad) mov stos cld addr16 cmp cmp xor or stos add xchg cmp add dec add add or dec outsl outsb ja imul dec outsl je outsb jae imul inc add add (bad) (bad) (bad) jmp add je outsb jae imul add cmp add dec or add add inc add incl sub add add add je outsl outsb xor push add add je outsl outsb xor add push adc adc add add add add je outsl outsb xor push add add je outsl outsb xor add and das or add incl and add add je gs jo arpl add add add push or incl add add push add gs xor add push add gs xor add rorl lods add add incl add add push add gs xor add push add gs xor add sti push xchg adc add add pop add imul add imul adc add loopne add incl add add dec xor add testl inc mov fidivl sub push fs xchg stos jmp cmp push cmp xor or stos add xchg cltd arpl add add jb gs add jb outsb je outsb popa jae insb add add inc add add add add push or add cli push or add add add add add add add add add add add add add add push or add outsb cmp lock cmpl and lret (bad) lods and push ja dec push mov (bad) xchg xchg adc jl sarl sub scas mov cld jecxz xchg cmp rorl sbb ss add movsl test sahf pop leave sti jmp xor cmpsb dec in xor xlat bswap and lea iretw dec into inc call dec bound fmull fcomi xor xchg (bad) and pop push imul cmp out in pop or test sub jb fstp sbb mov push pop and cmc adc mov push mov popa sub xor inc shll jns in pop je jo pop daa add clc inc mov mov jp inc ret nop dec cs outsl fidiv or sub lods xchg mov sub add cmpl and pop lret (bad) jae in test lods fs pop push mov enter or into mov cmp mov add push and fwait inc aas adc lcall push adc loop and outsb fdivs sbb mov cmc ljmp inc pushf pushf pop mov adc pop fiadd add push and cwtl pop bound ljmp mov das push pop sub in add sbb js cmp push or sub sahf je (bad) data16 xlat popa and imul cmpsb jno jmp cmp mov hlt xchg jbe call adc adcb push or dec ja out pop mov mov roll out sub cmpl adc xchg dec cmp add (bad) out daa cmc sub mov push mov pop lahf enter sbb or into cmp mov jns lds dec iret fwait inc push adc lcall push cmp loop and adc mov stos scas outsb sbb mov lock inc (bad) pushf pop fmull pushf jbe mov xchg pop fistp push clc push and pop jb xor test inc xor pop in add sbb js daa xchg lahf or cmp cmp (bad) je in data16 imul push and rcll cmpsb inc cmp mov push xchg jbe call test andb adc or ja out pop leave push mov shll out subl push jne adc dec cmp add xchg dec arpl andl sub mov rorb enter sbb or into mov dec imul lds dec iret arpl and fwait mov adc lcall or lgs stc stos imul inc xchg mov cmc ljmp and adc pop ficom pop and pop jb xor pop jl add lret mov das push jnp pop dec sti add daa sbb xchg or push in sub sahf je (bad) imul push and push movsl mov stc lds xchg dec test jo jmp mov pop movsb and mov loopne inc fisttpll xchg rcl inc aam insb movl stos dec shll push push xchg cs cltd cmp in jge adc mov fisttpl cld lods outsb repz clc in inc add and js lahf loop lea popa loope sti sbb mov bound cmp fwait xchg mov sub bound out pop pop jno xchg inc inc mov mov jne fidivl mov jbe nop scas ja cwtl ljmp stc repnz sbbl fdivl mov sahf jge xchg adc xchg shrl sbb mov or pop std jae outsl clc mov popf or dec pop inc (bad) in jns outsb and xorb call mov mov push jmp cmp and (bad) or xchg push scas sbb out or out shrb push push fnop mov aas ret roll arpl xor sbb into mov push stos push sbb lcall mov cld and ja jmp (bad) sbb adc mov mov jo mov out xchg dec int3 (bad) and aaa rorl pop fidivrl mov lock cmp das aam sti dec je dec aaa adc loopne ds pop (bad) jg add jae icebp cli mul rorb push push hlt daa xlat push flds jo jecxz ficomp sub adc leave leave inc mov mov mov loope dec popf sub sbb mov xor mov clc rorb pusha adc adc xor sub push inc lret xor xor cmp pop scas jl sbb lret repz cwtl sbb push pop out jle out rcrb push (bad) fsubrs aas push pop add insl shrl xor test jnp into sbb int imul mov mov andl and cld sub adc jbe adc mov ljmp out xchg cmc and aaa rol pop fcmovb cli mov lock push mov repnz dec fdivrl dec xor enter aaa pop (bad) loopne add cmpsl jg (bad) xadd icebp push push loop xlat fcmovnu add jnp push ficomp jo adc leave leave or inc inc or loope or (bad) dec sbb mov mov (bad) jno pusha les adc adc sub push inc xor movsl sub lret gs xor pop lret repz or add push pop cwtl jle xor pop out push fsubr fsubrs aas push fild mov and pop insl roll arpl xor sbb cltd push aas jbe int3 jp aaa insb loope and ss test fwait mov out mov out cmc rolb fistpll and mov mov sbbl mov pop adc xchg jmp popl test ljmp mov mov add pop in aas pop inc or test inc and lock jno mov xor pop sbbl or repnz ljmp jmp push out outsb cmp fcomps sbb (bad) sbb dec adc xchg pop lods aad scas xchg sub sahf ret loopne bound or pop add insb cmp and hlt mov arpl js dec jne push insl out pop sbb adc add cmpsl sub mov add jg es out call outsl adc adc jae movsb or inc dec mov test cltd (bad) cmc ja fnstsw jnp es stos push mov jns xchg mov dec fucomip or stc cld cmp xchg data16 into xor hlt std les push mul mov jle inc loope das jmp js jb add dec in aas in or test inc and lock jno (bad) (bad) xor pop xorl sbb addr16 add adc daa cmp and fnop push (bad) mov dec mov push sbb pop lods cmp sub int xchg jne inc andl pop jo insb push mov cmp arpl inc mov js dec jne push mov sub fisubrl add cmpsl sub popa insl decb ss out call outsl adc adc loope movsb lods je jae dec or test sub fstpl mov jns stos mov clc fucomip xchg xor dec xor or sub and xchg and into xor std cli mov (bad) mul xchg push faddl xor inc loope das jmp js jb (bad) lret dec lret add in dec pop inc and test push jno mov or pop rcrb add repnz out jmp fs daa xor push sbb fnop sbb mov mov push sbb icebp adc xchg pop sub pushf sahf xchg jecxz,pn int ret loopne pop jo insb push pop and and cmp arpl inc mov js (bad) inc mov push insl out pop sbb adc popa insl cmpsl mov es add jg dec push out adc xor loope movsb lods test or inc pop mov test cltd (bad) mov jnp es stos push jp jns xchg mov dec (bad) or sub cmp xchg data16 cli into orb pop les push idivl push loope xor roll push das mov sti bound dec lret add pop in aas pop inc or test lcall mov jae outsb push pop push and pop mov cmp test ret sub cs cmpsb sbb pop mov lahf inc in add out add (bad) jge and push enter mov sub lods push jbe nop or test mov xor pushf leave mov jle insb das push jl xchg mov push loop push aaa rorb sbb xor rol adc pop (bad) movsb call cli andb (bad) dec lret xor adc test dec int out into mov pminub fpatan jg je mov xchg push sbb shr in scas pop dec cmp stos xor adc fwait ss fistpl mov mov lret dec push pop popf inc xchg cmp mov jne inc iret mov test xlat or pop inc and pop mov mov inc test jnp dec js insl ret sub mov lahf inc fs xchg out add (bad) jge and jmp cmp pop xor lods les cmpsl or push xchg dec nop mov xchg int3 loope leave clc mov mov pop mov jl xchg mov push loop push aaa mov cmp mov imul movsb (bad) cltd popf pop or call xor xor into push lret jg mov incb into dec xor mov mov and repz je fsts mov shll scas sbb stos xor (bad) negb sub jno (bad) push lret dec mov popf push xchg cmp mov sahf mov jne fmul mov test xlat or pop pop jae outsb push mov aas cmp mov js insl ret sub mov pop inc fs xchg lahf add mov sub bnd cmp pop xor lods les mov jbe nop or test int3 loope leave clc xchg adc pushf jle mov mov mov (bad) rorl add push fs loop mov push ja cltd xchg ss inc jns adc mov and test nop mov hlt jmp (bad) ficom (bad) (bad) ficomp push notl pop mov pop jno xor xchg (bad) pusha popf jnp add and xchg lret pop xor jno mov std inc imul dec cmp jmp ficompl cs data16 rclb movsb jo call cmp aam sbb xchg imul push xor imul push rcrb in ret ds mov jg mov cmpb adc add sti xchg lea dec inc in sarl insb mov mov sbb mov (bad) icebp inc test mov int3 into and dec mov jl js push cmpsb (bad) int icebp push fs loop mov mov (bad) ja jns adc loopne and insl xlat mov test nop mov hlt jmp (bad) ficomp mov pop (bad) notl fidiv pop ljmp mov lods or push sub out push stc loopne mov insb (bad) xchg jecxz mov ret mov aad divb bound xlat sub sub dec xor pop push ret std or in cmc repz and push aad insb jbe inc ficoml daa loop add pop dec (bad) mov scas cmp (bad) dec cltd sub sarl insl dec scas (bad) repz inc inc pop push push aas movsb por loopne es inc (bad) xor popa xchg push stos js push push add dec xchg adc das dec pop ljmp adc fcmovnbe imul or mov sbb test cwtl pusha cmp xor cmp sbb jge leave test arpl test gs xchg popf data16 fnstcw cmpsb cmp in and call adc out insb stc xchg jecxz (bad) inc enter mov int sbb mov je in bound ss shr (bad) dec xlat aaa dec sub cmp push ret std pop outsl mov mov fisub rcl aad lock push ficoml insb loop inc push pop daa (bad) mov dec cmp (bad) or dec adc sbb cs int3 insl inc pop rclb por loopne movsb dec inc xor mov popa xchg sub js push push push (bad) pop shr dec add pop xchg jp das into push ljmp cmp (bad) mov sbb add test hlt pusha xchg xorb ja lret loope jno test arpl test sbb inc data16 fnstcw cmpsb cmp in and and lods or push sub out insb stc loopne mov roll imul or je mulb cli out in ss shr mov xlat sub test or pop push mov outsl pop in cmc add mov lock push aad insb jbe inc ficompl loop add jne lds cmp or cmp jle cltd roll mov int3 insl dec pop (bad) repz inc inc jmp push sub es jns xor jae push pop push xlat adc imul imul push jg push push push push push push rsqrtps popa push push push sbb push and sub push push push add push outsl push or adc push jle pop push pop push sbb push inc push aas push outsl push and push sbb push sbb push rsqrtps push sub push cmp push push push pop push jge adc push pop push pop push bound push jbe dec push addr16 ss dec push js add jle iret push cmp push ds xor push or push insb push sub push es cmp push insl push and push dec push sub push dec push and inc push push push adc push xor push sbb cmp push cmp push adc push push xor push es pop push inc push or push ja or push adc push je jo sbb push sub push xor push das push sbb push push push push push push push push into push aas push into push add push and push outsb push inc push add push jns inc push inc push or push jns add push imul sub imul push cmp push dec push or dec push outsl push pop push jno js and push cs add push cs inc push pusha push sub push adc push inc push sbb sbb push push push sub push das push popa push or push or push pop push push cmp push jnp adc push and push pop push jne addr16 into push sbb push inc push sbb adc push aaa push add push bound push ds dec push imul push push sub push add push add push adc push adc push and push push push inc push fs sbb push inc push inc push push push push push outsb push cmp push or push ss and push and push sub push adc push dec push and push adc push sub popa push push xor push pop push xor push dec push outsl push cmp push sbb push push push popa push add push or push cmp push aaa push ds sub push rsqrtps jge push push js sbb push iret push jp ja pop push inc push adc insb push add push push push and push outsb push pop push pop push pop push push push xor push or push sub push pop push push push dec push or push sbb push push inc push jae imul pusha push push push push push push push xor push push push sbb push push push and pop push cmp push jb push push je arpl push sbb push xor push dec push push push imul push push push jge push and push or cmp push pop push xor push das push cs adc push or push or push pusha push popa push sbb push sub push inc push jnp outsb push xor add push dec push add push xor push daa push push push push push push push sub jp cs jno pop push dec push pop push sub push dec push xor jl es push pop push inc push imul cmp addr16 inc push outsl push adc add push push push and push gs jno imul inc push inc push dec push pop push add adc push ja pop push sbb push dec push inc push xor push add push xor push cmp push insl push push push aas push pop push add push pop push push push jae inc push or push jg ds inc push xor push dec push jbe pop push fs jne jg add push push push popa push jge push push dec push cmp push or push insb push sbb sub push push push inc push pop push inc push push push cmp push ja cs insl push outsl push pop push pusha push jns insl push das push imul push imul jo addr16 add sub push jbe push push push push adc push pop push sbb push sbb inc push je push push je jp imul push adc push dec push xor pop push or push xor push add push daa push inc push adc push push push jle pop push sub push adc sbb push jno bound push inc push add push push adc push dec push add push cmp push add push daa push push push cmp push sub sub push sub push jbe adc push adc push into push sub push add push cmp push sub push insb push rsqrtps push and push push jae sbb push pop push js sub push or push push push and push dec push iret push inc push sub push sub push sbb push into push dec push cmp jg sbb push push push aas push cmp push and push push push jp es inc push and and popa push sub push push push dec push inc push add push addr16 push push or push cmp push es sbb push es pop push js and push sub push pop push adc adc push cs and push daa push jns add push add push push push jle xor push push push or push jb xor outsl push inc push sub push rsqrtps jbe or push adc push sbb push pop push sbb push inc push pop push iret push add push jnp cmp push push push push push and push xor push aas push xor push pop push je das push cmp cmp push or push dec push dec push pop push daa push pop push gs pop push adc push sbb push adc push pop push adc push or and sbb push dec push push push pop push inc push sub or push sub push dec push adc push jae jae xor push jl aaa push addr16 cmp push adc push adc push pop push cmp push push xor push imul push sub push push push jp aas push push push inc push jg into push inc push jo sbb jbe dec push xor push ss dec push das push add push add push and push push push insb push inc push add push adc push bound push or push pop push js push push imul push push push outsl push cmp push push xor push or push outsb push pop push jo ja ds imul push dec push inc push jg sub push into push push push inc push sbb push push adc push sub push or push add push push push fs cmp push pop push je or push js cmp push dec push cs jnp jbe and push jno das push xor push popa push inc push pop push dec push dec push push push push push or push popa push and push add push cs push push add push aaa push and push jnp push push inc push aas push dec push push push jnp xor push push push dec push pop push imul pop push and push and push jle or push jno jae sub push cmp push push push or push adc push pop push adc sub push iret push sbb push jp jp ss inc push arpl push insl push and push sbb push sbb push sub push sub push cmp push outsl push pop push jl adc push jns jne push push inc push xor push add push fs adc and push insl push pop push push push pop push outsl push xor push push push or push dec push popa push pop push push push dec push or push push push sbb imul push inc push jle add push iret push iret push or pop push cmp push and push cmp push jno outsb push push push inc push jbe jle and push and cs xor push gs adc push xor push add push or push dec push pop push xor push jo push push jb push push imul imul jle inc push jp jno or push and push into push adc push sub push js push push cmp pop push pop push addr16 dec push push push into push push push or pop push rsqrtps push push or jnp sub push pop push dec push pop push inc push imul push inc push insl push jne bound push push push add xor push push push dec push sbb push sub push add push add push ja jns adc push and push pop push jae push dec push sbb push inc push sbb push dec push push push add push push push pusha push cmp push inc push das push inc push daa push cmp push inc push xor push imul pop push add push jge add push push push sbb push dec push aaa push rsqrtps push pop push or push daa push add push jge jnp pusha push jae cmp push pop push sub push addr16 jle ja insb push cs dec push cmp push outsl push imul push add push push push jne ss xor push ds jp sub push and push adc push push push sub je sbb push adc aaa push outsb push or push adc push bound push es and push add push pop push cmp push jbe jne jns or push rsqrtps push gs push pop push js jno gs daa push pusha push xor cmp push arpl push or push sbb and push push push outsb push insl push sub push push push adc push adc pop push or cs or jb popa push adc sbb push sub push inc push dec push push push add push dec push push push sbb push aas push pop push sub push push jbe push push and push sub adc push or push or push sbb push push ss dec push inc push cmp push xor push pop push cmp push pop push xor push js inc push inc push and push inc push or push dec push push push dec push cs and fs inc push dec push ss push push push sbb push push push sbb push and push add add push xor push jne cs inc push rsqrtps push sub push arpl push push jp pop push iret push pop push adc push xor push jle push push adc push or push push push sbb push or push pop push jnp pop push cmp jns and push pusha push dec push arpl push pop push sbb push jg outsb push add push xor push ds adc push ds push push jo cmp push and push push push sub sub push es cmp push aas push jno sbb push sbb push push push imul add push or push addr16 pop push and push pop push xor push push add push sub push adc push push push adc push pop push pop push dec push sbb push jae xor push push push push push cmp push dec push adc push dec push xor push or daa push xor xor push add push inc push inc push das push aas push push push jge push push sub push adc push sub push pop push sub push add cmp adc push inc push push push push push pop push and add push and push inc push sub push or push dec push push push je into push jg xor push sub push sub push pop push xor push bound push outsl push popa push push or push insl push imul push pop push ja inc push pop push or push push push inc push dec push dec push into push inc push daa push sbb push jl cmp push ss dec push inc push cmp push xor push pop push cmp push pop push xor push js inc push inc push and push inc push or push dec push push push dec push cs and fs inc push dec push ss push push push sbb push push push sbb push and push add add push xor push jne cs inc push rsqrtps push sub push arpl push push jp pop push iret push pop push adc push xor push jle push push adc push or push push push sbb push or push pop push jnp pop push cmp jns and push pusha push dec push arpl push pop push sbb push jg outsb push add push xor push ds adc push ds push push jo cmp push and push push push sub sub push es cmp push aas push jno sbb push sbb push push push imul add push or push addr16 pop push and push pop push xor push push add push sub push adc push push push adc push pop push pop push dec push sbb push jae xor push push push push push cmp push dec push adc push dec push xor push or daa push xor xor push add push inc push inc push das push aas push push push jge push push sub push adc push sub push pop push sub push add cmp adc push inc push push push push push pop push and add push and push inc push sub push or push dec push push push je into push jg xor push sub push sub push pop push xor push bound push outsl push popa push push or push insl push imul push pop push ja inc push pop push or push push push inc push dec push dec push into push inc push daa push sbb push jl cmp push ss dec push inc push cmp push xor push pop push cmp push pop push xor push js inc push inc push and push inc push or push dec push push push dec push cs and fs inc push dec push ss push push push sbb push push push sbb push and push add add push xor push jne cs inc push rsqrtps push sub push arpl push push jp pop push iret push pop push adc push xor push jle push push adc push or push push push sbb push or push pop push jnp pop push cmp jns and push pusha push dec push arpl push pop push sbb push jg outsb push add push xor push ds adc push ds push push jo cmp push and push push push sub sub push es cmp push aas push jno sbb push sbb push push push imul add push or push addr16 pop push and push pop push xor push push add push sub push adc push push push adc push pop push pop push dec push sbb push jae xor push push push push push cmp push dec push adc push dec push xor push or daa push xor xor push add push inc push inc push das push aas push push push jge push push sub push adc push sub push pop push sub push add cmp adc push inc push push push push push pop push and add push and push inc push sub push or push dec push push push je into push jg xor push and push and push pop push dec push xor push inc push addr16 jns bound push cmp push fs popa push or push push push push push rsqrtps push push add push push push pop push inc push inc push inc push pop push aas push adc push je xor push into push inc push pop push xor push dec push add push push push xor push push push dec push push jo pop push pop push cmp push pop push add push inc push cs inc push es cmp push pop push inc push into push bound push adc push push push adc push cmp push sbb sbb push dec push xor push pop push pop push aaa push and push jnp jp jle jb push push dec push push push sub push dec push push jge jbe imul dec push cmp push outsb push push push fs add push push push jae push push xor jno cmp push js inc push jnp pop push push push adc push ja push sbb push dec push jae ss sub push ss insl push or push adc push pusha push insl push and and push ds xor push ss or push adc push sub push pusha push push push inc push arpl push sbb push add push jg push push cmp push pop push dec push push push sbb push and push sub push insb push sub push push push das push inc push adc push or push or push push push xor push inc push sub push inc push dec push outsb push add aas push dec push dec push push push sbb push pop push pop push daa push aaa push imul push sub sub push and push pop push and push sbb xor sub push pop push push push imul cmp sbb push cmp push pop push and push add push inc push imul inc push ja dec push push push and push and push pop push dec push xor push inc push addr16 jns bound push cmp push fs popa push or push push push push push rsqrtps push push add push push push pop push inc push inc push inc push pop push aas push adc push je xor push into push inc push pop push xor push dec push add push push push xor push push push dec push push jo pop push pop push cmp push pop push add push inc push cs inc push es cmp push pop push inc push into push bound push adc push push push adc push cmp push sbb sbb push dec push xor push pop push pop push aaa push and push jnp jp jle jb push push dec push push push sub push dec push push jge jbe imul dec push cmp push outsb push push push fs add push push push jae push push xor jno cmp push js inc push jnp pop push push push adc push ja push sbb push dec push jae ss sub push ss insl push or push adc push pusha push insl push and and push ds xor push ss or push adc push sub push pusha push push push inc push arpl push sbb push add push jg push push cmp push pop push dec push push push sbb push and push sub push insb push sub push push push das push inc push adc push or push or push push push xor push inc push sub push inc push dec push outsb push add aas push dec push dec push push push sbb push pop push pop push daa push aaa push imul push sub sub push and push pop push and push sbb xor sub push pop push push push imul cmp sbb push cmp push pop push and push add push inc push imul inc push ja dec push push push and push and push pop push dec push xor push inc push addr16 jns bound push cmp push fs popa push or push push push push push rsqrtps push push add push push push pop push inc push inc push inc push pop push aas push adc push je xor push into push inc push pop push xor push dec push add push push push xor push push push dec push push jo pop push pop push cmp push pop push add push inc push cs inc push es cmp push pop push inc push into push bound push adc push push push adc push cmp push sbb sbb push dec push xor push pop push pop push aaa push and push jnp jp jle jb push push dec push push push sub push dec push push jge jbe imul dec push cmp push outsb push push push fs add push push push jae push push xor jno cmp push js inc push jnp pop push push push adc push ja push sbb push dec push jae ss sub push ss insl push or push adc push pusha push insl push and cmp push ss dec push push push into push add push sub push and push ja push push pop push jnp jge adc push sbb push ja imul push inc push push push adc push cmp push and push fs and push insl push daa push push push sub push add push add push push push dec push adc push and push pop push inc push push sbb aaa push inc push inc push push adc push push push push push aas push iret push popa push or addr16 cmp push and push cmp push das push cmp push adc dec push and push push push cs arpl push xor adc push xor push push push cmp push sbb push pop push arpl push pop push rsqrtps push push cmp push cmp push das push inc push dec push jno pop push jg jno jp sbb push jl jns add push push push outsb push pop push push push addr16 sbb push push push push push pop push pop push pop push push push aaa push sub push or dec push cs inc push pop push push push dec push or push popa push insb push dec push jbe outsb push inc push bound push push push push push xor push push push sbb push pop push es pop push ds dec push adc cltd fbstp iret pop mov aam push fdivl mov jns mov adc sbbl pop ret dec data16 fldl dec add and xchg inc jg movsb push adc in pushf dec add cmp lea cwtl jmp sub cld dec adc mov imul fildl rorl dec ljmp shrb add cli jmp lds mov outsb ret (bad) addl jge nop cmp pop scas jnp sub cld and and xchg rorl (bad) jno inc sbb bound rcrl stos out push pop (bad) dec stos and sbb and cmpsb movb mov fadd add leave clc insl push push pop mov or lcall dec outsb shlb addr16 (bad) and dec cld mov add add mov out xchg fsts faddl inc into (bad) aas xchg adc mov cltd push movsl (bad) adc pop mov std pop xchg push in adc lret daa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock add fwait (bad) lret dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb mov dec mov std pop xchg push in adc pop lret aaa mov dec mov jmp add loop sub jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb add lods sbb add movl clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf add loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test add adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl rolb add add push sub push movsl out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock add xor fwait (bad) lret dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb inc jg mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl add stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne add cmp (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std add pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter add add sub push sub push movsl out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test dec cld mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in add fwait (bad) lret dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound add add push cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov add xchg loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov add add std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter add or sub push sub push movsl out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test and dec cld mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push add in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and ja inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound add add stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov add add xchg loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov add xor test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das add enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl add add add add test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov stos xlat icebp pop mov out int3 mov jl push fs jp mov out xorb andl data16 sub dec fstpt jae sarl lds sti js add add sub jle cmp xlat pop xchg enter data16 cld xorl (bad) ss sahf mov fwait jecxz adc cld mov lret ljmp jne dec phadddq cwtl pop neg mov call jno adc or xchg xor fs fsubl push cmp mov mov and jne cmpsb lea sbb inc sbb add xchg xlat mov addr16 stos rcrl mov add imul inc inc xorl flds add call subl inc (bad) icebp lds and cmp push bound scas xlat leave stos cltd in stos mov faddl dec (bad) jge pop (bad) fsubr jg or push sub lahf mov mov lahf cmp in adc inc shr push add add add add pusha stc pop push imul and popf or out mov out sbb ret vmwrite add pop jg icebp push inc jg rcll push xchg fsubrs and pushl mov pop test andl sbb fistl adc pop shlb pop inc into sbb mov jmp xchg inc aaa imul push bound ds add mov sub iret (bad) aaa mov mov cmp xor mov mov push add cs leave insl lock rcrl jno ja orl dec jo scas sbb ja lds inc and mov in add push mov push in mov add xchg cltd (bad) lret inc jecxz daa inc arpl jle test scas inc sub pop popa adc pop push fcoml add add pop leave aas sbb mov sti pop lret add cwtl dec xchg or xor jp cld ror dec in sub divb jbe or push mov out testb xor adc pusha shll adc adc roll loope jg mov imul adc add cmp outsl mov hlt fwait movl jbe xor pop mov test addr16 test pop faddl (bad) mov bound inc (bad) sub push movsl push cli adc das mov out push mov pusha pop jmp repz mov add pop loop lock and outsl sbb addr16 decl pusha fcomps cli sub addl outsl xor mov jo sub sbb test outsl pushf jno scas in ret movsl or add add clc in imul and dec outsb adc outsl cmp notb repnz mov aas and aad jo scas rcll pop add addb (bad) out adc sti fst inc ret idivb (bad) popa pop lret mov mov mov add pop cli mov cli outsl sbb insw hlt js cmpsl adc push data16 iret lahf xchg test or stc add jbe ja xchg adcl push sub loop rorb (bad) jbe (bad) or push jl out pop cs dec cld icebp incl xchg icebp ljmp pop inc lret sbb insb push inc jns test rcrl add xor sarl dec repz test xor iret mov (bad) jmp xor adc mov add pop adc mov fstl push and enterw mov outsl add sub mov and ljmp insl push mov ficompl repz adc in fwait push and dec cmpsl sub arpl xchg cmp cmp ljmp xchg (bad) pop mov lret sbb sub std pop pop test outsl fdivs xor mov xor add inc test cmp js mov sub aam adc cli mov les cmpsl dec data16 push fidivl or mov xor inc push pop popa mov and jne adc adc sbb clc xlat xchg icebp (bad) lcall in in out shrb mov mov mov pop inc dec jmp clc adc mov sub push je fiaddl rolb aad push mov ja jle insb adc dec (bad) (bad) mov jl loop xchg loopne adc pop mov sub add insl mov jmp pop mov rcll fwait push and xchg ret push orl xchg stos inc jg jnp sbb (bad) std ss cmp insl push pop cs lret ret push insb es dec push fcmovnu nop mov fs push shlb add stc mov xchg pushf in fdivrs mov (bad) sbb fsubrl sahf ljmp fwait pop data16 test mov inc (bad) sarl fs insb pop or mov xchg (bad) loop sub sbb popa jo dec out out push int3 ret into insl xor (bad) xor andl sbb inc cmp mov (bad) mov in xchg in (bad) lock jo (bad) dec push jecxz scas out cmp test push inc repnz mov mov rol pop mov or fs sub pop dec mov std or add xchg pop mov jmp mov movsb cmp scas mov iret lods ja pop pop push xor cli rcll (bad) aaa stc xor add inc xchg lret mov sbb jmp add push ret rcll out in (bad) lock xchg fwait dec inc mov je and (bad) shrb mov xchg ljmp mov lcall inc inc fstps pop test (bad) sti pop xor cld data16 das scas lret lock sbb into jmp xchg ret pusha xchg loop dec mov jno mov adc loope stos sbb add outsb push and add add jbe,pt fisttpll jg mov fldt cmp xchg add and aaa dec xchg fwait mov add jnp movsb idivb test arpl adc mov scas push mov add pop enter fstpl or sub dec sti imul aam popf shll pop mov dec repz cmpsl mov inc adc or jmp sub iret xor add mov std out pop rcll xor stos pop adcl mov xor jno add inc push push push mov push lcall cmp addr16 and ret inc movsb int sti jmp inc outsb pop int3 sub insl das dec pop xor inc pop jge and lea jo push xor ss aaa jbe mov inc mov mov xlat es or jmp loope daa push cmp mov add je inc pop xor inc inc cmpl pop insb mov push inc js (bad) stc inc je and adc xchg nop xor cmpsl mov nop mov hlt inc pushf push dec add push rcl sub push int scas ret aas xchg jge movsb mov hlt (bad) pop add mov movsl xor cmpb and mov cltd add pop in (bad) sbb lahf into loop and outsb mov sbb imul rcrl (bad) inc xchg or js jg inc jg jnp cwtl mov push testl in frstor movl stos call cli jne (bad) xchg mov mov xchg mov add mov jl dec sti push cwtl pop (bad) or jns sub inc repnz movsl xor (bad) (bad) xchg movsb xor ja ret mov mov pushf ret lea or jae mov fsubrl sbb mov and mov stc xor scas mov mov frstor cmp iret hlt pop leave jne push lods in lea cmp add (bad) daa loopnew lea shlb cld mov in pop pop or push xor movsb inc scas pushf pop cwtl push jnp lcall movsl lcall scas aad pop shufps pop lcall dec ss fildl push test dec jbe div add inc mov rcl bound rorb stos fstl outsl and stc jo xor add sbb pusha mov aas lcall add add cmpps sub (bad) or xor call sub rolb adc xor fcoml fcmovbe aaa rclb push or push and fisub mov repnz push in adc fsubr pop mov jmp mov loopne sbb push ljmp cmp cmc or pop rorl loop rorl fldcw xchg mov ss push xchg scas mov mov pop jns inc popf push (bad) mov bound lcall pop outsb xchg lods icebp mull daa dec jne testl mov push popf jns (bad) mov cwtl push jbe loop xchg aam add test fscale pop add rcll mov cmp insb mov jmp adc mov insl cli iret lcall add add inc (bad) arpl jmp push jns push and pxor xchg dec cmpsl scas mov movb mov cli movl lret lods or das adc fwait xchg lcall mov mov mov (bad) adc mov ljmp inc into das enter cwtl (bad) mov in or bound fimul cmpsb idivl pusha mov jl mov adc rclb popa cld xchg jg gs nop jp scas dec jbe sbb int mov jmp sahf push ljmp add sti mov repz loop mov xor push cmp pushf push cli cmp gs sarb hlt mov fisttpl push mov xchg insl pop outsl cs lds push push fcomp adc stc (bad) or dec pop cmpsb bound sub push sub rcrl mulb lret xor cmp jp jmp fdivrs lret ret outsl jecxz and sbb push rcrb out mov inc push cli stos fldcw lret and adc je mov inc (bad) lret inc push jecxz jmp testl imul jae mov clc and cmpsb xchg scas enter cltd sub add inc inc mov addr16 jbe jmp cmpl push ficompl xor inc shlb or push lret pop lods inc das xchg mov out mov cmp ja lcall sbb push (bad) ss hlt push lea scas push pop ret adc dec addb or fstpl or push mov jb pop xchg add jns hlt int3 lods jae cmpsb ret fildl add add add shr fcomps inc stos push dec cld and dec add adc mov into das mov mov (bad) out sbb movsl insl xlat and jle es aam pop out push popa test cmpsl mov loop movsb add pop xrelease (bad) jne inc sbb mov loope lea leave mov imul (bad) icebp fwait std sub or popa mov add add inc leave clc out shl lock gs out mov ret add stos jmp clc jb das cld mov inc jmp fcoms add mov sti mov test inc sub push repz dec stos mov fdivrp pop add pop les mov mov sbb decb sbb (bad) dec push test ds add test mov mov dec ja addl fiaddl inc in popf out adc lcall ret popw jb xor add dec add cld mov jmp xchg mov push mov stc int enter sbb sub sub in out sub mov (bad) xor cs pushf (bad) mov pop (bad) (bad) sbb mov add iret xorl je aas mov cli es sahf test sub jle loop mov popf fildll jne popf insb leave test mov add pop (bad) dec xor pop add jo push popa arpl cmp jnp imul iret sub push addr16 loopne xchg xor idivb jg (bad) in push in jbe inc les add add push mov scas mov aas push cmp cmp sub adc bound je sub add add and sbb cmpl (bad) repz outsb aaa sti insl push imul pop xchg fwait movsb push enter cwtl mov cmpsb shrl mov aas cli stos and push fdivl sahf mov addr16 in dec fmuls test pop sub pop lret jmp cltd aaa mov mov push bound cmc imul sub xchg mov jmp dec cmpsb mov stos cmpl jmp sub mov int jg mov jg into or int xchg cmp cltd sbb jmp pop pop out fistpl int lcall sub ljmp dec into das leave aas xchg pop lret pop sub mov fstps cmp fimul loope pop pop mov push lahf jb (bad) out aaa mov mov mov movsl in (bad) loop ret or cmp lahf outsl mov cld mov adc pop scas xchg ret (bad) int3 lret mov repz cmp pop nop scas push mov pop pop js push push shrl mov int3 jns int3 lret add add loop sbb sahf lea and and std je insl (bad) cmp movsb and jnp lcall lock push cmc arpl fs push js jns adc inc cmp aaa fimull mov sub (bad) iret loopne lahf cmp jno add adc jnp insb pop mov sbb outsl sub cmp adc inc (bad) scas xchg add add add or pop mov push (bad) mov push xor or int3 add dec xchg mov (bad) loopne cmpsl mov shrb mov or cltd repnz dec enter icebp rol or mov xor (bad) jmp addr16 jge jnp mov aaa cmp clc add lret stc loopne lahf scas popa push mov ret dec out cmc jg push ja xchg or add add add sti mov in dec outsl mov xor lret inc push jecxz imul rcr js or lods fadds mov popf adc pusha push xchg inc cs (bad) sbb aam test cmpsl sub xchg lods je push addb mov pop xchg (bad) mov aas aad push sub sbb pop cmp push in adc xchg hlt lea pop mov daa (bad) mov imul adc stos dec add add cli xlat dec dec les sbbl push inc push stos fstl mov insl (bad) sti repz cli mov cmp fcmovne cmc hlt (bad) jp pop inc xor add notl push sub cmp es jp aam and sbb dec out pop dec test lods and lods dec dec leave aas sbb nop mov pop loop out cmc mov movsb pop ds rorl mov out xchg add popf fucomip test pop inc adc push jnp pop sahf (bad) pop repnz jbe sbb lcall ret mov lahf in cltd pop or jmp lret inc (bad) lret push push jecxz (bad) push ret push mov pop push imul xchg xor arpl fstps enter repnz popf ds ljmp inc es aas xchg xchg pop hlt aaa int3 int add add jecxz pop mov pop lret adc fwait in int3 aaa mov jle (bad) int pushf jmp add shrl std pushf sub pop orl add out mov imul add dec dec stc push imul cmp mov data16 or loop xchg sbb cmpsb mov and hlt stc popf add add add sarl push inc es xor xchg jge mov xor into inc dec mov pop cmp push adc lret insb in push jbe mov push sbb cwtl (bad) loop mov xor xor push addr16 pop rcr cli clc cmp lret cmp rcr xchg mov in xchg sub cld movsl scas sub cld pop mov push lret rorl push in (bad) lock (bad) or (bad) lret dec ds daa or idivb mov insl xchg mov xor jb pop xchg fwait movsb and jnp cltd (bad) mov les push movsl out nop addr16 mov std pop xlat push mov aaa mov ljmp dec sbb popa add jno xor adc sbb ret dec mov sub add dec adc add add mov fcmovnb add fstp insl push out (bad) lock aaa jb pop xor and cmp add and xchg sbb aaa ljmp push push mov cs (bad) or pop xchg data16 jge mov adc fisub les adc pop mov cmp sbb js pusha add jno inc ja pop test push notb push push pop add test adc in push add jge cld lret mov and shrl lcall jae cmp fisttpl sbb cmp popa jg cld leave mov sub mov fisttp dec into das inc mov pop lahf inc sub (bad) out or gs push fisubr adc fwait mov push aam in mov xor scas mov inc sti loope jne dec adc les mov or out fldl mov (bad) out mov mov sub in inc xchg jne and pop jno insl push in push adc mov xchg lea loopne int aas jo dec cld leave scas inc sub xor xlat faddl iret or aas movb lea ret or fisubr cli lea std pop (bad) or dec test int push pop (bad) arpl mov dec nop fwait jns and popf or jmp arpl push lods insl add and dec ss lahf jp ficom mov in push jecxz push sbb dec leave aas sub insl mov adc dec sbb ret test mov daa (bad) xchg fcoms cltd ljmp out rcr or add sub bound movsb bnd mov push cli adc jmp dec idivb push lahf cmp jno add adc xchg push lods mov sbb jmp cli je repz mov cmp sbb test push mov adc sub lods fwait add and xchg mull adc je push fisubl dec cmp sub add fsincos sub xchg push orl pop xchg add inc fxch outsb lods and push ret fidivr sbb or inc push mov fxch aam les jno jmp add call pushl sub ficompl je rcll daa popf push and mov pop and stos xchg lret inc push jecxz jmp adc mov gs int3 add push push mov outsb and arpl sub and leave lods cltd and mov mov lods or std pop adc mov add dec sbb movsb mov or pop out xchg or fucomip int3 mov inc adc push jnp lret mov pop int mov mov outsl ret test inc adc xchg or movb mov negb add adc pop xchg add xor mov shrb stc int3 ljmp cli ja sbb lods and push es xchg ds lcall (bad) out out scas pop test xchg add cmc mov jnp add xor lret mov cld sbb push mov mov add jp mov cmc inc mov adc jne int in push add add or mov stos fnop add (bad) je jo push (bad) lcall jo lods xchg push addr16 push inc inc sub pop adc pop fildll and ds scas push test pop push inc negb pop imul shll adc js xchg popf clc out adc rorl jmp dec rorb cld mov inc call inc movb add loop int3 jb,pn mov (bad) (bad) inc adc pusha shrl sti mov and mov mov mov mov mov push xlat push adc test fimul cltd mov test sarb jne out ds mov fild adc mov mov pusha call mov xchg cmovo lods addr16 pusha mov scas or add int3 aaa mov popa enter push jmp add loop (bad) into jns mov dec out mov ret iret pop pop ret push adc add (bad) loope stos sub scas and jg cmp add movsb pop (bad) clc fisttpll lret dec outsb in fbld (bad) arpl jp movsb adc loopne arpl mov push fsubr cltd ret mov add push sub mov movsb xor test sub jmp fbstp lods sbb cmp (bad) pop add sbb das rcrl cltd mov xlat shll push ret dec push dec aaa int jnp fsubrs ds (bad) push xchg sbb (bad) inc pop cmpsb (bad) (bad) push in in or jmp dec pop xchg imul dec dec cld add add pop adc mov sahf sahf loope (bad) cld pop inc mov sbb shrb or push sar inc xchg push xchg dec leave mov std fild mov push lret aaa mov ljmp aaa lahf (bad) jb dec jbe push xor inc (bad) lahf push jle pop cmp push cli cld add pop daa insl stos (bad) jp jne sub jg (bad) aaa popa mov push pop sbbb in dec clc add inc sahf and xchg sbb xor and mov and add daa stos test into add mov push xchg sahf sub repz add cmp das mov fscale pop add lret aaa mov out xor pushf jmp add movzwl jmpw and ds xor adc stc paddq push cli cli mov and je out pop and add in pusha mov mov push (bad) push in shrl cltd xchg add scas sub xor pop xchg pop cld sub sbb xchg insb jo sbb fist movb lcall sub cmp pop xchg loopne leave mov aas mov adc lahf (bad) je mov xorl pushf fs sahf (bad) loop sarl mov push mov add add add ret pop (bad) dec data16 pop mov add xor sub cmp les (bad) stos push sub lock lret ret cmp cmp movsl sbb sahf fisubl jle add test adc xchg push jne push out imull das sbb ficom test nop xchg rol mov int repz or xchg faddl add add jp scas dec jbe and les (bad) push cs jnp data16 cli xchg daa push inc jns stos fnstsw inc and addr16 sahf xchg or and or xchg lods sbb push decl imulb aam sub cwtl pop inc lret fistl nop xchg dec add stos and icebp stc mov adc addr16 dec xor (bad) out out pop outsb ljmp stos out pusha shlb es mov xor mov xchg cmp jbe icebp jae imul add push or add or cmp (bad) in mov ret scas lahf lahf inc push pushf jno aad popf push popf push dec add or (bad) fidivr je and xor adc test in (bad) lock jno imul mov stc jmp add addr16 pop daa cmp add das aas cmp into xor adc xchg scas push dec hlt mov jl orb insb fmull in stos sbb xchg repz ret xchg mov popf cmp mov xchg test add je cltd jle and es inc jg jg lahf dec add add pop add sbb decl inc xchg (bad) and sub add enter adc and pop iret xor movsb popf xor mov popa lret lahf enter in shrb xor jbe xchg pxor imul mov mov loope cltd fstps and xchg sbb xchg mov pop shrb iret data16 fstl rcrl mov loope cmpsb stos sub addl ss sti and outsl cwtl sbbl sbb movsb mov mov mov ret xlat rol fldl inc inc (bad) sar push cltd (bad) mov push sub daa fwait scas cmpsl fwait cmp dec xor xlat push push in xchg scas push dec test dec mov jmp adc mov xor xchg xlat push adc inc xor xchg mov add add sahf scas fldl popl icebp repz mov add add xor fadds inc pop dec inc popf adc add sub dec ljmp xchg test mov pop hlt mov scas lahf fisttpll mov fldt inc bound adc inc adc sub xchg mov ret pop cmp mov xchg mov fistpll movsb jl ljmp mov inc and pop add add add pop es pop fisubrl data16 push xor sbb scas xor (bad) dec or xor hlt dec inc out inc push clc stos pop shrl jae xor xchg mov jmp sbb popa xchg arpl mov sub ret std adc mov add mov movsb mov rclb pop (bad) loopne aaa push inc jb popf (bad) mov dec movsl mov jnp insl sahf (bad) popa push repz mov es mov dec sti stos fsts aaa ret lea dec adc lret inc mov inc in inc add xchg out push adc push mov cmp (bad) cltd xchg mov push pop (bad) (bad) or outsl mov sub mov inc pop (bad) mov xchg pop or mov fstps std add jp mov sarl test jp (bad) dec dec xor add cmp aam lods jecxz (bad) sti sub xchg mov jne aad dec add cmpsl sar inc add sbb mov mov movl cltd imul add lret or mov int jnp push (bad) cltd xchg push lret sahf sahf daa mov shrb imul lret mov faddl lods jb enter add add out int3 cmp mov repnz sbb push into xor je in fwait daa push dec repz loope imul push les repnz mov sub in mov dec ja xchg push ret dec ss cwtl movsl cltd and cltd cmp xchg fucomp or cmpsb ret das arpl mov sbb xor dec mov fs (bad) or sbbl daa add add add xor mov sbb inc mov push push fs ffree inc rcll sbb mov pop lret xor xor std push insb es mov lds divl xchg adc sbb xchg cmp scas and and xchg repz mov xchg into add rcll cld add insl push add add insl cld or lods icebp rcrb xchg daa aaa pushf bound fmull push add mov cli (bad) push pop inc and iret mov inc jb inc adc add adc movsl mov movsb xor inc and inc jp inc stos js add in mov dec xchg jne push sarl ficom loop pop push ljmp jno pop push cmp in out and pop push subl leave pop dec movb xor dec aaa sbb pop clc mov popa jno cmp fwait (bad) cltd dec xchg push push in mov fisttpll mov stc ljmp mov adc gs dec in data16 mov pop push dec mov cld pop xchg ss sbb add pop ret iret push std cld dec jbe sub push (bad) ds xchg mov cmpsl pusha clc faddl mov mov mov mov dec std sbb clc test imul or ret (bad) clc daa ljmp nop cltd xchg mov aas mov xor scas into das dec sti xchg inc lret jb dec icebp xchg std or mov pop mov jl shrl inc loope dec fldt (bad) mov add lahf test jns or in (bad) push adc sbbb jns mov movsl pop mov dec add and dec inc mov mov add fmul clc insl fcomps jnp fwait mov xchg je mov and (bad) jno push jmp out arpl xor test cs rcl mov push xor cmc arpl add ss test xchg xchg inc mov jmp add jg aam loop sub cmc xor mov inc arpl negl das mov push mov outsl cltd push mov jle addr16 iret mov jmp int add dec lea test mov lea and es sbb call and mov cs pop dec add jle add into das add enter rcl mov fbld scas pop push push dec mov cmp in xchg movsb cwtl addr16 stos ljmp loope insb arpl fwait scas or pop ja sbb cli out popf mov push cmp adc jecxz rol cmp mov xchg scas inc jge mov ss stos iret mov lods sbb add cmp pusha xchg dec outsb pop mov add (bad) inc and dec cld mov jmp push loop xor cltd xlat xchg pop cltd sarb lcall dec xchg jns,pn sbb loope mov add ret ret cmp incl dec cmp or add loop fsubl loop push (bad) sbb rcll dec push jb leave inc add je jle fisubl mov popa jmp lcall adc add xchg lods mov pop jne inc mov mov xchg push lret scas sahf daa xor inc shlb cmp pop dec add imul iret mov inc das sbb fdivrs xchg push sub call inc cmc rorl icebp pop addr16 (bad) rol mov rol lock outsb fdivl imul ljmp (bad) ficomp or jno pop aad les mov andb (bad) jb xor movl ja adc daa add ret icebp or xchg mov lcall outsl enter aam cmp imul add cs je dec repz fstpl fstpl movsb out jns and add lea pop mov scas jb mov mov rcr lahf (bad) popa push repz stc xlat push adc add bound or popa sahf popf les mov sbb mov jmp into push in xchg fidiv fbstp and loope dec das jmp fwait mov inc xor fsubs ja aam ljmp xchg fcom sub push dec dec loopne aas xchg xchg out mov cmp dec fcmovbe out sbb stos mull insb sbb sub out fwait mov sub cmp cmp jnp test jb mov xchg cmpsb jl cwtl cmpsb add mov sub dec add mov movb mov sbb incl negl lcall jae and mov test shlb jo mov stc (bad) mull cli inc movsl sbb add mov push mov jmp pop hlt adc mov std loope adc mov add mov cmp cwtl or inc out pop push sbb jmp dec push les adc jge jno sbb xor jl jb sub scas and arpl push cmp push movl loopne fcmovb mov inc add clc call dec imul fwait (bad) mov arpl cwtl loopne rorl dec cs add pop fstl add add hlt sahf push imul fcmovnbe es sbb add addr16 lret push pop test dec ret xchg nop push jp clc cmp push jp push add add clc add cli decl or inc lahf aaa rcl xor sbb stos fistp iret pop xor outsb xchg dec fnstenv sub inc hlt out cmpsl sbb push mov pop inc push push lcall mov outsl (bad) inc or loop mov add add rol and push sbb scas jno jo push in jnp sbb stos das mov push push je mov mov sbb popa cli sub cmp lea (bad) aas xor dec sahf call mov pop ret into int and xchg daa add fwait daa mov sbb lods mov fldl nop repz mov lds add add add test mov cmp xchg daa in cmc sub shrb push cld inc repnz sahf jle push aad ds in mov insb jecxz sub es aam add mov sub aad adc xor inc shr push in ret pop ds mov into (bad) imul mov and (bad) pop xchg add xchg ljmp cli stos and dec and add add bnd mov sbb inc xchg int push (bad) sbb lret lea mov cs sbb int3 pop xrelease addr16 lret pop stc xor mov sbb sti sahf pushf pop mov fimull pop adc in (bad) aas dec dec adc sbb test dec sbb dec test inc inc mov xor or jl pop cmpsb mov mov in daa pop out scas dec jae jge test sahf sub add xchg cmpsb jo add inc pop ret dec adc add jp jns sub adc mov push cmpsl ficompl gs mov test cwtl sbb je aaa dec cmp cmp daa jae mov iret and (bad) lock and push mov out push adc push adc lahf push cwtl push jbe call scas adc psubd mov sti orb mov mov add or aam cmp cmp inc pop sub or dec aas mov jmp push push xchg mov imul div jo and jns dec xor dec fcomps dec repnz stc jle cmp add in cli ret push pop dec adc out adcl mov jmp popf cmp push inc or js inc jo mov mov inc or shrb ficompl adc mov push in adc rclb incl dec mov in das ret fld cmp js mov cwtl pushf sub in or xchg idiv stos push pop add mov clc rep andl lret jae mov lods mov xor enter xchg fwait das add pop lret lds dec outsl movb sbb mov add test into inc enter fnsave maxps fldenv rcrb adc call adc fwait pop mov dec jbe inc xor jmp add popf int3 lahf icebp data16 jns jl cltd int push adc dec nop stos mov and push pop or jae repz inc cld movsl stos and push push inc fsubrl mov xor je das dec add outsl xchg je aaa xor push push push fistl xchg pusha ret lds xor fistl shrb pop xchg mov loop sbb adc lahf mov mov adc rorl lea popf ljmp mov mov mov (bad) negl ds repz and std push cmp jae fldl xor test ljmp ds and add sahf (bad) mov cltd mov aas (bad) stos mov sti stos dec sbb into jmp sub dec mov je movsl xchg pop lods and xor adc mov lods or pop data16 dec aaa aam pop out mov and gs bound orl jo movsb push (bad) push dec popf ja cs or shrl popaw std icebp push push out fist mov pop lcall add add repz add jg dec or xor pop or push mov (bad) push insl popf mov cmp pop mov out out adc push cmp (bad) mov jecxz test pop pop push mov xchg xchg popa popf (bad) push xor pop notl push sub pop lcall cmc fdivrl cwtl adc sub push cmpb mov insb or jmp sub mov prefetchnta add add das push pushaw std mov sub mov lahf aam inc push cmp and inc dec pushl jb fcompl std pavgw mov adc cmpl les fiadd mov mov mov lret lahf test and mov addr16 fbstp mov fs rcrl pop rorb dec lock gs data16 sti inc mov divl mov jecxz or push mov repz shl mov js cmpsl sbb cmp adc cld je lock push jnp jbe push inc adc (bad) mov insl in or jl lods sbb pop mov mov dec jmp xchg cli push fs dec jne cmpsl xchg pop ret pop test outsl in jae negl dec cltd cs pop aad scas push scas pop adc and je add js imul rolb imul out mov repnz mov imul fcompl dec add and repz mov je ss out iret scas xchg clc or call hlt push arpl inc icebp mov je sahf sub (bad) dec cmp add xchg xchg lods push add add add lods push iret ficom dec fcompl insl loopne and pushf sahf pop adc shl sub push repnz mov mov xchg xor neg fiadd std and loop sbb pop add sub pop fiaddl cmp xorl inc push pushl jnp mov insb xorb pop xchg (bad) call xchg pushf test sub stc or add stos push arpl mov data16 scas mov adc test int (bad) int3 push cmpsl bound daa loopne and pushf sahf pop adc roll dec aaa cwtl push loop inc cmpsb mov mov in mov int cs or mov and fsubrs pop mov cmpsb in repnz cmp std xchg daa cmp int3 jle insl into test add mov pushf xchg jae push insl std add btr lcall ret jae lret and inc (bad) popa movsl mov sbb xchg xchg xor mov sbb shr or stos repnz cltd sbb ret inc mov ljmp pushf sti fwait xchg ds out bound add fiaddl xlat bound and roll dec cli pop (bad) (bad) jl xlat inc jo shlb cmp in jne dec adc fs loopne je jg jbe iret inc xchg xlat je out pop xor addr16 lcall imul mov xchg xor mov and inc adc inc test cmp inc cltd add iret inc mov inc mov out xchg pusha je test (bad) or mov leave or popa std rcrl (bad) push xlat xchg inc out mov test push xchg jecxz xor inc mov inc xor (bad) enter stc ss push fs test mov mov les xchg cmpsl sahf je (bad) pop stc sub mov cmc rol shlb pop in dec shrl sahf mov or or pop mov sbb out mov pop or movsb mov add add cmpsb test insb xchg mov xchg sbb cmc (bad) mov sbb lea sub xchg ljmp cli fld jle jno jo jne mov (bad) insl (bad) mov ret jne movsb push rorl je int fs test pop mov out out jae cmp frstor out clc and aam jb sahf pop lods pop test int and das loop mov adc add add loop sahf mov nop neg jge cwtl adc dec dec into std mov xor sbb fimull sub push push pop jp or imul add lret xlat push and add and and aas mov sbb clc fnstenv lock mov mov sti mov push cmpsl lcall xchg xor dec jb xchg add push in xor push cwtl cmp sbb adc pop adc nop pop mov int3 dec stos call xchg rclb addr16 stos xchg jne mov call mov jne xchg psubusw rol sahf add es dec pop bound push (bad) mov inc jb inc dec call jae aas test mov aam mov inc fs test mov inc scas dec out sub imul dec mov repnz aam rorb cli mov loop fwait pop loop (bad) jecxz sbb loopne dec inc lret lods or (bad) repnz lods adc ljmp mov clc and cmpsb scas ljmp les arpl lea pop shrd sub in mov sub adc ljmp add add movl setb jnp fwait movl (bad) pop bound scas ds cld hlt lahf inc ljmp rclb add int3 adc rol mov mov inc bound rcll ds mov nop push insb sahf inc test add cmpsl sub out mov leave loope (bad) xor enter aas pushf or lods mov add sbb mov js sub ds inc xlat pop push and scas stc inc cmpsl insb (bad) and lds add out divl aaa dec outsb hlt push sub mulb pop dec scas cs test xchg ret and pusha call cmp lods add adc dec aas cmp and clc enter mov sahf sub sbb lahf cwtl fnclex jge or push pop adc inc test add fildl sub cmp push jl cli or and orl adcb lahf cmp (bad) lea lock jbe lds lods in loopne lods mov push ja cs or sub dec inc dec xchg push movsl mov icebp aam xchg mov jge mov std pop test inc (bad) loope add ss jle pop (bad) push loope lahf jnp loopne fcomp mov adc push xchg add bound jmp push jno fisttpl lret les add (bad) (bad) enter jg cmp sbb add std leave clc out xchg call repnz ret outsl xchg daa aaa out ds sub fstpt mov mov arpl subb cs adc add daa xchg adc mov pop lret fisttp jnp imul mov mov cmp loopne pop mov jae iret mov pop or pop push xchg jb xchg xchg push mov mov (bad) sbb add (bad) clc add out xor insb push mov dec into or je iret cltd dec sahf movsl aas xchg loope mov shrl xor add add add ffreep adc js (bad) addr16 cwtl push jbe out xchg sbb push add xor loopne mov mov jb stos cmp push je jg scas dec jbe add (bad) push push push add shrl dec ret dec data16 adc stc jo sub dec packsswb xor adc dec fdivp rcl jb jne push xlat mov icebp add add arpl ds push sub dec mov cwtl mov fimull push inc int dec (bad) xchg add jg sub repnz (bad) loope mov mov leave je (bad) ds insb outsb cmpsb mov push xchg jmp imul clc push and push adc fs adcl sbb pop pop dec xor mov sbb or add add and push insl movsl test pusha mov add pop mov imul lcall lcall les subb adc mov fcmovbe jmp adc mulb pop or or mov dec pop cmp jmp xlat cli xchg mov test dec mov hlt pop ljmp dec add out sub (bad) rorl cld inc inc dec emms loope sti push mov pop xchg lock cmovbe mov je sahf push imul daa pop repz fsubr pop dec jno xchg pop scas mov cmpsb cmpb in imul sub pop xchg add cmc sub inc bnd mov (bad) mov push adc jmp sub add sbb sub data16 mov fwait sbb movsb sub (bad) mov add mov hlt push mov pop xor mov decb call es (bad) cmp lret loop jp mov pop (bad) and mov xlat stos popf test mov push and fisttp leave jecxz adc push inc aas and repz lret mov dec mov add daa (bad) mov adc cmp add fimull jno ret mov cmp rcrl addr16 cmp xchg inc repnz cmp icebp xchg aas ds jle jno movsl and push (bad) stc inc scas push push loop repnz cmp mov rcll sbb pop mov fsubr loope sbb jmp popa mov mov jecxz insb push int3 jae mull xor and dec mov and add pop jp xchg pop dec ljmp cmp cltd add movl inc mov call xchg mov lret add sbbb ljmp inc adc or dec jp leave ret pop arpl pop cmp cmp mov cmp push xlat sti xchg dec sbb (bad) jmp sub inc (bad) popa test add mov push faddl into cltd and lds arpl rcr jp xchg sbb divb gs push cltd or ret inc mov inc mov sti imul jp scas dec jbe es out mov or ret sahf add xchg sub lcall push inc push decl jae mov push cwtl je decb xchg (bad) mov insl push outsb mov mov add add dec ret adc xchg scas das outsl cmp aas ljmp out cltd mov push and aas or pop fildl fistp in fimul aaa arpl and repz ftst nop nop mov xor test mov test adc fstps imul xor addr16 leave push cmpsb adc jecxz sub jbe mov add mov into aaa insl cmp add push adc add adc jae shll add mov je (bad) push outsb pop sti rcr sub sub add dec hlt sahf xchg push sbb mov xchg bound wrmsr popa leave xor cmpsb pop outsl push xchg cmp mov mov cld xchg mov jmp push (bad) pusha (bad) sbb stc mov sbb xchg add mov lret cmp xchg dec repnz cmp jmp xor push hlt cld add subb inc outsl fnsave rol mov out pop sub jg stc lcall test push add lds (bad) fsubrs hlt sub lret mov jbe mov cld gs bound rol call xchg loopne shlb add add and popf or out xor sbb push push pop ret dec mov out inc xchg roll mov and daa push xchg push push mov aas jno stos popa and xchg pop mov cld push cmp adc bound sub dec test mov popa jecxz aad loop test add leave pop out jmp test mov iret xchg adc sub mov mov add out xchg fmuls aas xor add sbb repz mov add sub inc ljmp jge lea mov cmp into imul addr16 hlt cmp lret dec push jecxz add stc ss test iret aas xchg sbb lret push and xchg pop and cltd mov repnz and mov addr16 inc pop mov inc dec ss pop adc add add mov or sbb icebp lods insb ss push (bad) (bad) mov add lods sub xchg arpl mov pop xrelease repnz or xor pop xor pop cli stos (bad) cmp pmullw jne or dec inc xor inc jle mov and fwait cmp mov and movsl cltd mov cmc andb mov pop incl add add (bad) mov ljmp adc xchg inc adc (bad) push dec xlat dec fsubl push in in out dec adc (bad) xlat fstps aam (bad) inc iret dec xor imul xchg arpl xchg scas or cltd jbe repnz dec cwtl andl out stos push pop ret cmpsl inc lret add pop fstpt jmp imul in pop mov lods sbb add add dec (bad) lret inc jp,pt mov mov push mov sub sbb mov push push fsubr icebp xchg cs sbb jns je lock adc adc xchg in stos das fdivrs or jnp arpl sti orl cmpsb sbbl cmpsl adc sub dec add jno arpl add inc jg add inc out add cs stos (bad) stc inc insl xchg lods sbb fistp adc retw mov lds sub mov fucomp sub faddl lods push jno aas jle addr16 dec pop push das (bad) sub xchg int3 inc pop lret stos (bad) jle adc (bad) loopne aas and dec ss cltd ret mov (bad) loop or inc sbb bound pop out push add push or xchg roll xor add mov pushl add inc lods xchg fcoms popa jb aas xor and jecxz jecxz arpl xor mov sti ljmp jbe das dec sti fwait jge cmp mov dec shlb pop sbb dec cltd (bad) std fild mov xor cs inc iret decl xchg ja daa jp add repnz dec popf mov inc mov lea fcmovu scas mov scas and stos fstl (bad) fcoms add xchg cmpsb dec dec and add imul leave or loope pushf cmpsb andb nop loop mov movsb or add arpl (bad) neg movhlps add test mov in pop cwtl (bad) cmpsb push loope mov popa xor popf pop loopne shll add xlat rcll adc out sbb pop hlt sarl addr16 xlat jmp sub pop cmp bound push jmp aas dec movsb mov or fisttpl bound scas xchg into (bad) xchg roll test fistl aam mulb push out addr16 daa (bad) ljmp sbb push pop dec mov stos sub fsubrl pop (bad) add adc or jbe mov hlt sbb lahf xchg jnp cmp mov and mov or pop hlt adc dec fcomi fsubrs jge fidivr int3 cmp jo out enter cmpsl (bad) int3 bound nop movsb and (bad) xor pop dec adc arpl dec inc fwait xchg mov cltd mov sub sub jle fisubl test (bad) xchg push lcall mov push popa (bad) call ss mov and cmpsl xchg push pop je insb lret ja add jbe popa mov imul jl js,pt stc push sub out lods (bad) xchg gs test xor mov rorb es ja xor push and addr16 (bad) (bad) (bad) sbb bound lds cmpsb das cmc mov add add fcomps (bad) sbb add fstpl scas (bad) out in fwait pop insb push into pop addr16 xor dec stos mov xor sbb sbb pop push in outsb (bad) cltd (bad) rcr pop cmpsb jg adc cs ss pop jge push pop jge daa cld xchg xlat outsl add pushf jmp cmp aaa xor loopne mov jb mov lahf or stos push sbb add pop jge pop (bad) xchg inc and dec iret xor int3 adc test pop cmpsb test test stos mov xlat loope sahf xchg aam int3 inc pop cmp jle dec movb jae cmp repnz arpl jne add lea or (bad) mov mov sub lods xchg lods mov mov xorb push in in mov and or add add adc mov shlb leave mull lahf jecxz mov testb pop fildl outsb ret lret adc sbb sbb scas movsl jne mov icebp mov pop out das pop inc in leave and dec dec jle pop pop dec pusha push jmp notb sbb jno xor pop xor xchg jle outsb pop outsl adc jge ds test rcl je xor add add mov sahf jb shl mov add mov arpl sub xor sub cwtl cwtl cmp ret mov push jmp push pop in sub xor int3 lods mov mov xchg mov cltd gs outsb orl out or insb push pop ss or dec pop jle imul pop (bad) ljmp add add mov les inc (bad) jbe mov in jo mov repz xchg sub cld ss (bad) push mov jb sub jo inc mov or jnp data16 fstpl or pop dec mov mov xor inc xchg int pop sub jne clc stc insl shlb jmp call cmp cmp scas and ret sub scas xor sbb push leave repnz lahf mov add sub mov call sbb popa loop fiaddl xorl jbe mov mov ss jle xor add sbb mov mov xor push lock xchg sbb inc data16 inc mov pop inc mov mov out sbb je aas sub insl mov adc or adc aas xchg arpl add repz (bad) and pushf popf jmp xor hlt (bad) cs pop movsl cltd test out jnp xchg loopne inc sbb mov std xor mov popf add mov add mulb pop mov lock lock sub pop mov or cmpsl clc faddl dec push fstl dec and inc dec add mov pop testl aad add add lcall shlb xor and mov mov mov push es ds xchg pop (bad) jne int (bad) sub push movsl mov inc ret imul push cmp or test aaa sahf adc (bad) outsb ds cli iret xchg inc (bad) bound lret rcrl cli fisttp stos fldl push xchg ja add add inc stc insb mov mov incl aad loopne lock pop repnz inc cmp sbb (bad) fstpt inc negb adc daa faddp enter lods or shr pop xor mov fsts inc scas inc mov fldenv orl loope inc jb dec ret cmp cmp ss fnstsw testb mov adc pop add std push mov adc jno jns dec and and mov sub mov push popf push leave movsl scas pusha and dec rorl mov (bad) xchg mov inc xor pop inc add outsl dec scas cmc clc jl mov ljmp cs jg mov mov mov sbb fwait sbb xor test push aad jle (bad) (bad) mov mov aaa push inc roll add add xchg push mov adc clc cmp (bad) popf pop dec push xorl pop cltd ret dec in push pop andl xor shlb pushf inc push dec fimul popf push dec cmp (bad) and mov pop fcomi mov lret inc jmp push dec call and sbb mov cs lea and leave push cwtl sti in or pop cs sbb cltd loope push incb add and mov mov jbe xchg rol inc xchg xchg out dec data16 loop sbb xor push cli insb pop push ret dec stos xor or repnz xchg xchg xchg push ds push and dec in aaa lcall dec push xchg cmpsl arpl sti jb sbb sarl cld fcoml faddl inc cmpsb das fdivrs xchg inc repnz lret mov xchg adc push repnz daa icebp push push sti flds dec pop fwait xchg push dec jp and mov xchg insl jno scas mov sbb inc sahf test dec aad je pop shrl dec dec in out int3 roll test cwtl sbb imul in cmp xchg loope and std fwait (bad) pushf add je movsb divb add add mov mov scas outsb mov or pusha int shll push mov add loopne or sbb addr16 push ret mov mov mov mov dec (bad) pusha dec inc sbb and (bad) jnp xor dec cmp push cli cld fldenv (bad) jle push push scas xlat das lret inc mov insl push das dec addr16 cmpl mov add mov mov mov dec outsb pop xor xor cmpb cmpsl test cmp xchg push faddl sbb xchg cld subl mov xchg pushf push mov pushw push jg xor sarl pop push adc and int3 mov mov loopne lahf (bad) imul add cmp sub xchg lods lahf rcrl push add dec jl add add sbb push jl and fbstp pushf hlt call mov mov out fild mov shrb arpl loope xchg add fs or movsb and ret add and jmp jae cmpsb pop xchg inc cmp daa fbstp adc lret mov jmp dec inc adc (bad) fwait mov insl or outsl int3 roll mov or jp mov arpl add inc push xchg pop repnz shrb add (bad) stc dec cmp or mov ret lret insl mov gs call scas addr16 enter xchg push sub push adc xchg pop sbb lret mov inc xchg mov loopne idivb sub fucomi push push sub mov push add addr16 repnz jno inc jnp in push sbb rcrl inc cltd data16 fstl sarb jecxz icebp jge daa mov sahf ljmp std stos (bad) out adc aas fimull xor dec add lcall incl sub cld ret (bad) mov int3 pop adc inc cmc fistpll aad xchg and movsl gs lea add lret stos mov jp adc fwait mov cld mov out add xchg loopne int3 push movsl mov hlt hlt jb loop xchg pop dec jne fistl add es dec ret and js xchg movsl push iret xlat les add stos int jmp mov jb aas aaa cmp cmp mov push mov clc and std je sub push mov pop popf dec (bad) lea add xchg out push rcll sbb insl imul pop aas pop push or fldt imul push mov pop (bad) mov push sbb adc jae or push aaa adc inc pop pop out adc loop fstl dec pop dec xor mov xchg adc loop mov inc xchg popf out rcr insb push imul ret popw jb xor add add dec ret mov aas adcb mov addr16 pop loopne cli int mov test jb mov sub inc and mov repz jl fmuls push lods cmp mov jne inc pop pop repz mov inc cmp fs mov imul daa sti repz and push das (bad) lods dec add test pusha stc ss add call mov movl and arpl mov jg pop push xchg mov push fisttpll inc into das inc mov mov cld cmp mov dec mov lret mov push inc mov imul gs sbb cs adc inc push (bad) xor repnz pop rcrl jg sub int3 fcmovnu and jp add add mov cld fadd push jecxz add push mov lods add pop mov cltd mov dec xchg push jae pop dec jns sarb sti add and cs scas cmc mov cmp aad movsl in push movsl out inc dec mov pop cmp cwtl (bad) loope mov mov (bad) cmp adc std sbb lods dec jbe mull sbb add add xor stos push or std inc xchg fdivrl lock iret dec pop jl mov fcmovb mov addl (bad) mov sub dec outsl xchg adc loopne rcrl clc insl dec cld cwtl outsb sbb add imul int3 das enter adc or cmpsl stc or repnz dec aaa sub cmp js adc xchg jecxz mov add fcomps outsb jns mov adc sbbl fldl pop out sub inc xchg dec idivb fmull hlt adc fcmovb call test push or xchg icebp or xchg xor xchg daa in xor sbb mov ljmp mov push cwtl (bad) xor xchg jbe push mov inc cld push add rcrb je cwtl dec mov jge loope dec fucomi sahf in movsb imul ret or jmp and lcall aaa (bad) or pop ret sub pop add mov and int push hlt sub and push add xchg shlb in (bad) (bad) xor pop cltd lret ret adc push test arpl ljmp jnp add iret das enter lcall fisubrl sbb mov sub xlat leave mov loope lret xor int mov lds xchg loopne pop cld loop out js add lds push stos bound and or mov inc dec pop mov sbb lods inc xchg and inc and lahf push leave jnp inc loope mov or cltd (bad) lret mov jmp add add nop cs insl sbb mov scas outsb push sbb es shrb enter sub mov test dec mov mov out mov cwtl mov addr16 out mov ret adc shrl mov clc (bad) dec xchg add lahf push xchg les pop scas dec or ret xchg stos sti repz sbb cs push lock fcmovnb adcl add add outsl push in dec mov mov loop dec outsb clc daa or stc cmpsl scas inc lods icebp cld cld out mov dec fistp inc into das dec (bad) out sbb popf mov push mov dec sub sbb daa popf mov enter cmpsb mov add ljmp fwait cmc mov jmp fstl adc push pop ret sbb daa dec mov lods pop das lret mov cmp add shll std ss add mov movl jbe (bad) (bad) sub aam scas cltd and mov es or xchg xchg pop enter lods (bad) sbb loopne nop loop mov ljmp les push inc mov push sbb std insb or mov out orb add fwait pop mov or push pop dec sbb clc mov push hlt jge ja add pop jg mov xchg mov inc (bad) xchg sbb push or enter lcall dec in push pop out es (bad) adc mov mov insb push cmp mov push (bad) aaa rol (bad) and push test dec pushf jae out inc shll mov ss add popa pop push xor add (bad) cli mov movsl movsb push mov xchg mov dec mov jp sbb pop push push cli fsts rol repz js mov cmp (bad) frstor arpl nop scas mov dec sbb jmp jne jmp pusha enter icebp arpl xor pop jb xor sub enter aam movsl jo and inc into lods or jle cwtl (bad) mov jnp fmuls nop sbb out cmp add xor ret pop pop fldt jb inc incl sbb push xor add loop sar mov xchg or popf inc jb orl xchg mov nop pop stos ffree inc push dec stc sahf mov movb xor lods add stos int3 push lret fisubl into add rcr in pop lcall outsl and leave scas xchg pusha mov mov fldl add add add push iret fwait lahf mov xchg cs sub push mov sti jp mov xchg outsb or sub xchg movsb lcall mov aas das push mov sub cld fistpl cld loope mov xchg mov jle pop push jg daa inc dec ret and stos sbb aam int add mov (bad) and push and lcall insl je pushf inc daa xchg add out xor lods pop adc push ja cld lahf std cmpsl lods popa jecxz add mov fwait push dec (bad) jge pop into pop cmp mov test lret cmp cltd pop cmp inc jb popf in sbb es push addr16 and mov sahf cltd inc cltd mov insl push pop push repnz add dec xor pop add std fwait jge ja push lods inc cs mov mov add xchg mov insl push outsl mov pop dec fxch ret insl xchg lods push ljmp ret es pop pop xchg fcoml lea rcrl fwait pop icebp add cmpsb cltd or sbb dec loop push mov movsb xor das push in adc lret and jb xor enter xchg (bad) jmp add lahf (bad) aad push ret sub ja lcall add add sti xchg sub inc mov cmp fdivrp add (bad) lock sahf xchg lock cmp bound inc out xchg sbb jge aas test decb push out lock xor dec test (bad) loopne jns adc popf mov sbb lods sbb leave pop insl ror pop lret aaa loope ljmp pop negb lods les out lods mov or or add mov adc cltd imul nop cmp pop mov pop mov ret jl jnp sbb inc or lock jne cmpl mov shlb bound fisttpl xlat shr cs inc push movsl daa xchg rorb mov dec dec xor outsb inc mov mov ja push shl sub mov int lock stos sub lds xor dec push jnp and std xor or sahf hlt mov sub push fildll (bad) enter mov inc inc push (bad) sbb into mov mov insb (bad) ss adc cmpb push outsb (bad) aas les push scas (bad) imul lods lods and cmp xor push lret pop leave test cmp mov pop xor fisttpl mov popl or out inc imul int pop push (bad) imul adc test jbe cli decl pop ds jne je cmpsl mov roll lcall xchg das inc (bad) lret inc push jecxz rorb or push in lea sub enter dec outsb jp jb mov shrb cmpsl and (bad) fistl add dec xor aaa xlat cmpsl cmpsb cwtl (bad) xor mov sbb scas mov jo xor mov je cmp pop or pop inc jp inc imul jecxz lds jecxz loop mov sub pop pop test push xor stos fistpl clc ja fnop lret fsubrl dec push stos lods sbb mov das fcompl push dec cmp (bad) and or dec lahf xor add push xlat cwtl pushf xor fisubrl pusha iret mulb sbb imul adc push or (bad) sub fdivl pop in in (bad) mov mov dec in adc fmulp int xor jle clc dec inc adc ljmp mov mov xor mov xorl sub dec xlat mov (bad) out mov mov adc fmuls cld stos bound insl lea dec ret scas int sub fisttpl push aas mov mov (bad) dec pop push jmp loopne add push push pop ret (bad) lcall mov cli cmpl stos stos dec les test shll rcll mov out xchg or inc popf in sbb fcomps aam ret dec (bad) loop cmp stc or repnz fwait mov pop dec or mov sub dec add (bad) (bad) ja xchg adc or shrb lahf aas jmp out in (bad) lock pushl scas ret stos lcall test cmc inc in (bad) mov imul dec dec test shrb mov jmp fcmovnbe add add xor inc cmp adc fwait mov cld sbb ljmp inc in scas roll sbb add int mov and repz cli es jbe dec data16 push enter je sarb mov add rcrl pushf jae push sub adc outsl xchg movsb mov test mov push notb add cltd jl into mov cwtl push jbe mov push dec das pop (bad) bound movsb mov subb xchg scas pop dec enter add mov mov jle ljmp leave push fnsave xchg sbb add je pop test ret dec in int js pop push cmp clc ret inc add aas push lods sbb add lahf adc in in sbb dec dec dec xchg rorb jp jl mov sarb and adc (bad) fsts mov aas jg scas (bad) mov mov xchg add dec aam pop sub out push add inc lds sub sbb push pop dec mov xor cmc dec out push adc mov push cmp push lods fldl dec cmp xchg bound imul sub cmp push inc jo popf push and or add call inc sahf leave fisttpl push aaa loop (bad) fstl aam dec cld mov ret ljmp add add add lods or sar sub cmp fstl inc fiaddl sar test add mov aam fidiv mov iret divl mov jg lods mov cli scas dec and inc rcll adc xchg sbb fwait push outsl mov cmp hlt notb lahf mov cmpsb bound fbstp and mov mov sbb add or xchg iret mov pusha dec xchg dec cld mov push adc push jle xor and lea aam push imull push loop mov add push in (bad) out and dec int ja dec mov outsb fs insb pop push xchg scas or decl int3 scas jmp es dec adc mov inc add cmp fs cmc xchg repnz push jecxz push mov dec xchg push leave adc xor add lret ds jmp ficompl and xchg mov dec scas or pop sub jb inc pop fdivrs aas je (bad) es ret insl dec movsb out nop fimul pop cmovns jo cld lods adc cmp aaa mov dec in ljmpw leave push mov mov pop orl cli es out and add adc clc repz out mov in ret push jecxz push xor sbb mov adc xor popa pop xchg fxch ret push daa addr16 idivb ret add dec lods hlt inc sub mov imul leave dec push xor xor push dec push in pop insl xlat push sbb sub fidiv jl popa xchg adc push mov dec mov das or add add hlt dec xor adc sbb push pop ret dec cmp cmp inc xrelease dec mov aas xor inc popf fs fadd add scas (bad) mov mov add dec pop icebp xchg insl fmuls ret sbb push inc leave scas inc addr16 (bad) xchg fcoms cltd mov ds lcall mov shl sahf pop cmc out sub (bad) adc xchg scas jae add xchg mov pop push mov das clc sbb pop inc (bad) (bad) and sbb add xchg mov daa pop stc jp cli fistpl int and mov cmpsl lret add mov movsl nop fadds jge into add sbb dec outsb adc arpl dec jmp add dec jno jmp push adc push leave inc xchg xor cmp mov add add sub mov mov popa arpl dec adc inc loope popf mov shlb push and sbb jecxz dec and ret xchg mov push cli rcll sbb lret roll xor adc or fiadd pop sbb leave clc insl fsubs xor mov xchg xor mov out test mov cmc add push lods dec push enter sbb mov mov xor push mov dec mov stc sub pop lret popa pop repz repz ja mov mov repnz adc imul jecxz test clc mull inc nop scas lret lods negl add mov insl add or add add fmull xchg push sub ror shrl hlt and js sti ljmp ret mov enter adc sub sub movsl out cwtl xchg (bad) mov xor jno in jp or lods fwait push divl add pop in shlb ret lahf mov cmc insl pop rcrb cli clc add rorb push sarb je repz cmp sbb add pop pushf push cltd xchg insl mov cmpb dec pop ds fstpt lds fcoms hlt mov sti popa jecxz (bad) xchg cld test xchg pop movsb mov add out pop lcall mov jmp adc lret (bad) mov mov adc jmp mov ret (bad) (bad) loope je fistl push jg es dec or jb push je les mov jnp push iret xor inc sti mov and movl sbb test imul xchg inc cs mov xor notb shll dec cld repz (bad) ljmp (bad) aaa xlat jg cltd sarb jns movsb dec ljmp negb lea stc fwait adc test in xlat das stos mov loop jge testl inc imul pop add sbb out nop jl sub nop lods cmp xor xchg dec icebp mov inc inc subl mov (bad) (bad) sarl pop aas cmp xchg lcall ret retw jle lds xor mov es mov and dec movsb inc mov popa mov cmp rcrl insl dec movsb out nop ficomp cmp frstor xchg add add add mov jecxz pushf lods add or push ja repnz push cwtl andl nop scas cmp mov xchg dec icebp mov inc inc subl fstps test cmp stos int ret xchg sbb mov lcall add xchg xor xchg daa in mov loop sbb jmp (bad) sub and into das dec sti lahf inc jo scas or add sbb test inc push js cmp fimul outsl push outsl xchg add aaa inc int fimul sbb mov loop adc pushf sub mov mov xlat ud1 push enter leave dec and dec std jo cmp ret jg xor xor imul pop ds push and push in dec clc pop fisttpl pop pop jmp sub nop mov shlb imul scas lds add shrl push pop ret (bad) lcall mov pop shrl push cs into imul adc lahf ret addr16 jecxz repnz jno outsb fmull (bad) imul loopne ja cmp (bad) je fistl push stos inc pop inc ret outsb int inc inc orb jge cmp pop lods dec adc pusha push push add pop push cltd adc xor mov out add mov add dec cmp fistl dec jg cmpsl inc dec jno jmp pop xchg inc pop (bad) xor jge mov xor test push sub dec mov pop cmp cltd aaa loope bnd ret cld mov aas insl js xchg loopne lahf mov xchg mov add outsl dec (bad) bound fildl aas mov mov mov xor add inc dec xchg jmp aaa loop in sbb lock je lcall and call sub (bad) loopne scas adc pop mov xchg fcom xchg fdivs cs adc aam test push sahf es out jp cli push test dec test or push pop sbb xchg mov adc out popf xchg inc mov popa xlat push adc fiadd inc fistpl add cs and add inc jb jp (bad) ja dec add call rclb fstp iret scas jno sahf insb test jns loop ficom inc xchg les dec scas and lods sub dec test push test xchg incl fwait call test adc mov lods and daa cmc cmp jo cmp add xlat pop lret mov rcl jmp (bad) mov mov lret add inc iret lret jns or bound imul lret and stc repz jnp mov bound loop push push jo (bad) stc fwait jne mov or jb pop fwait dec mov call popa xlat sbb inc jle out xchg cltd fcoms sbb jge aas mov daa xor pop scas jns insl push push ljmp and stos mov inc in add adc or mov add sbb xchg mov xrelease repnz or xor hlt push pop pop push sti add sbb add or jl mov in pop push jecxz push push xchg in push jne sub xchg shlb in sbb mov sub data16 outsb dec jno dec call add stos test cmp aas adc mov or add mov sbb and in in out repz mov sub cmp cmp or jne jecxz subl add dec (bad) incb gs lahf (bad) enter dec ja mov push and inc inc orb stc stc add aaa push push stc ja pop add or fnstsw mov add aam dec (bad) ds lret xor fwait jecxz bound cmp jmp add add decb cli ljmp xchg data16 out push test sub push idivb mov rorl lret xchg or or movsb fdivl call and out test sub aaa test push adc sbb and push add roll mov inc (bad) ja dec add cmpsb (bad) pop imul repz lods clc stos push sbb lea add mov fisttpl adc outsl cs fs popf popf fcompl or pop xchg gs pop neg shrb scas push in pop test out popa sbb (bad) std fwait rorl push scas mov pop sbbl loop dec mov popf stc inc sbb bound pop pop inc sti (bad) pop mov push mov xchg repz aaa cli cmpsl fidivr mov add add add in inc mov add lods add gs enter sbb jb pop fldt (bad) lret or dec mov or sbb inc negb push imul leave fwait (bad) lcall (bad) jge mov fsubs dec mov mov adc shrb push and ss inc pop mov mov popa sbb xchg out call ja scas and add mov jl inc xchg in aam repz lahf jnp movl call fbstp pushf hlt out in xchg xchg lret rcrb mov stos inc mov adc fistpll xchg jmp fwait movsb and rcrb adc leave movsl sub add pop sbb pusha cmp loope dec sub inc loope cwtl popa cmp popf xor bound add add jns or push inc (bad) inc lahf and rorl cmp stc stos push aad dec xor mov jge sub scas imul (bad) enter (bad) repnz push mov fnstcw push lds or xor pop xchg pop fsubrl mov pop push jmp pop jbe xchg fadds fistp enter nop pop hlt add jmp psubb pop or (bad) pop mov add iret sub sbb out add cld sbb xchg arpl xchg jnp fiaddl aaa jne into mov (bad) push aam inc orb and stos push fldl dec out in rol inc cmp arpl (bad) fisttpll inc movb jns xchg fidiv cli cld stos bound pop fwait lods sbb add das popa xor sarb mov mov outsl jp mov pop fwait movsb and sbb nop xchg pop dec inc (bad) es out sbb gs adc repnz and mov xor lret aaa xor mov add call (bad) imul stos ljmp inc sbb mov push cli stos ffreep ret dec data16 pop test inc push dec int3 inc pusha jecxz flds xor sbb dec and xchg movsl scas lahf mov popa jno xor fwait (bad) pushf stos daa dec outsb xchg stos loop dec cmp jns add add sti ljmp leave inc das xor push repz mov inc es lahf mov (bad) stos push xor fsubrs dec pop or dec mov or pop insl cmp add jge,pn inc lret rcl push subb and arpl rorl mov andl and sbb mov xchg mov int3 jae imul add push sbb jo,pt add ja cs in mov ljmp ja mov enter sub pop adc scas loop push in mov inc jle,pn mov inc in push nop and xchg cmc xor mov dec push xchg fldenv push fmul cmc sbb jmp and (bad) xor jo add aas jbe pop movsb pop pop push insb mov ret in loope xchg je inc scas jo insb mov jae movsb in inc divl fdivrs (bad) fisttp test (bad) aaa mov mov (bad) jno scas pop arpl bnd in pop test pop mov and xchg pop rcrb mov inc push sbb popf addb dec xchg fmulp mov cltd cmp add xchg add int3 cmpsb mov loope test jecxz adc xchg rcrb push xchg sbb sub outsl mov je xlat inc lahf and sbb and scas nop rorb aaa push jbe out sbb icebp iret mov lret loope mov mov bound xchg inc ret hlt neg je jo aas out js mov push (bad) pusha aam pop jmp add adc push lods mov mov out loopne shrl or out into lret dec push and (bad) outsl mov xor loopne push and ret (bad) lret out sbb jb dec (bad) jb lds pop pop in fucomip push inc add stos scas popf mov in dec fsubs popf sub sbb popl ss or xchg rcrl (bad) xchg fcoml out arpl in js push mov mov mov sahf lret cmp fs xor les push lods mov mov out xor or rolb sbb popl add jp (bad) dec mov aaa pop loop (bad) roll push popf (bad) paddw mov xor sub sar jp cmp mov iret shll pop test jbe sub add and (bad) sti in xchg in add fwait lfs test fdivl clc mov nop shlb cmp or in push xor inc out or mov cs ret imul pop les loopne iret jl and mov jae scas xlat xchg dec jnp ja xor adc ret push jecxz dec and lret mov pop xchg (bad) add mov dec or outsb out data16 daa fildl add (bad) dec pop push jmp loop addr16 hlt mov fildl outsl (bad) push sarb jns stos es jbe adc fisttpll mov adcl mov stc (bad) insb lahf xor stc sbb sbb nop cmc loope scas jns or xchg cwtl (bad) dec adc xchg mov pop std jl int mov loop (bad) sbb add or sbb add int3 cmp sub cmp movsl data16 and sarb outsb pop push mov ja es test mov pop adc xor outsb loopne fcoms cwtl jmp dec xchg mov add inc sahf (bad) xor (bad) dec lock jne adc ret pop loop sub adc repnz leave dec mov (bad) cltd das mov mov fisttpl aas (bad) adc xchg movsb cltd push jno dec loopne mov add jge pop std cmc push xchg hlt fldcw xor cmp ss dec mov sbb loopne stc frstor sbb adc mov xchg push xchg push fbstp inc cmc sti out iret fwait dec (bad) inc (bad) test nop insl in sahf scas jp gs hlt push mov cltd pop mov iret pop mov add pop test sbb in xchg fsubl sbb loop mov adc add xchg mov popa lahf ror push and cmp js and iret mov mov cwtl xlat sbb inc or xlat pop mov add xchg mov cmp popf cmp cmpsb push push adc xchg cli iret adc dec outsl pushf inc jecxz int sub jnp sub mov pop mov (bad) mov sub ret cmp cmp pop xchg ja imul jge incb pop mov xchg cmp popf or xlat sbb rorb inc push dec jo jno xor inc xorl add add popf push leave clc xor enter push in frstor in xor pop xchg test push sarb in out sub push push faddl cmp push les (bad) sbb push xchg add bound add loope cli or push ss or fwait push lahf stc mov add arpl fwait (bad) lods repnz pop repnz (bad) enter pop insb ds iret add out adc xchg sbb xchg jp push mov cmc jle cs mov xchg (bad) repz dec dec xchg mov loop in hlt add aad inc xchg mov les out and xor add mov lods mov outsb add mov xchg cmpsl xchg pop inc ret cmp inc (bad) pop lret paddd imul mov pusha fcmove push pop or aaa xchg adc ss push dec mov mov aaa fiadd test sbbb movsl cmc setge jns xchg mov imul arpl stc jl cld inc dec dec cmp push mov cld (bad) and push lsl scas push lock ret and leave push add xor pop inc ds add cmpsl inc idivb out push das test iret orl pop xchg jbe ljmp leave outsb rcrb out movsl pop fisttpll jmp sbb inc ds mov in in stos les insl in jge push movsl loopne lcall loop ja xchg bnd sbb lahf xchg notb or popl mov mov jbe push jl in xor lock adc lock add xchg out or (bad) aad test add pop repnz sbb mov or in inc (bad) mov add loop mov test sub out loopne cltd stos mov fistpll frstor pop pop pop aas pop fmull fdivp cmp mov pushf push push dec cmc mov jp push jmp arpl mov mov loope mov add popa cmp cmpb pop mov rorb xor cmp out lret inc cmp jo cmpsb mov cmp sub adc xchg pop mov (bad) mov inc out inc outsl xchg xchg pop (bad) je test push sub adc mov pop adc cmp push arpl push inc js popa xor jecxz sahf adc push gs imul or ret add sub inc test jae std (bad) jbe pushf fcoml fisub imul mov sbb fnstenv jmp pop data16 adc fwait (bad) push ja cs test sti ljmp mov out pop icebp jno daa pop int sub ljmp leave mov sub push (bad) sub xlat (bad) int xor xchg inc adc jecxz adc cmp (bad) loop addb adc inc (bad) sbb loope sbb cltd push fimul pop or and dec dec mov mov inc push jecxz mov cli stos (bad) stc inc insb pop test lahf ss push rcrl cwtl pushf mov shrl arpl adc daa push outsl cltd or mov mov (bad) cld lahf inc cmp mov fwait xchg mov pop add add xor push xor fldl2e xchg movsb xor push inc inc or arpl nop dec jle mov xchg pop sbb pushf mov mov cmc sbb pushf push and jno jb jmp mov mov push dec or lret test jb dec aas lea pushf xchg pushf push test push rsm nop inc dec lret outsl mov push ja stc lahf aad js repnz push out (bad) sbb add add notl in shl or es test push bound movsb lea fdivrp pop fimull dec dec mov mov xchg xchg insl sbb xchg add adc fmull pusha sahf stos daa insl dec or and int js mov cmp sbbb imul gs mov sbb mov sti cwtl cmp mov js cmp add cld mov aaa mov sti clc mov jne fidivr push jnp dec fcmovu out in enter jmp inc imul stc mov ret test fisttpl (bad) loop dec cld sub push pop or rorl test es lods mov and mov into or push (bad) outsl outsl sub fldpi or (bad) xchg add out in popf mov inc or cltd xchg add hlt xor imul iret push ja stc lahf aad lods popa jmp (bad) test jo inc imul sbb pop loop mov out rcrb gs ret jnp push pop test lcall iret add or iret sbb mov test fwait pop popf (bad) rcrl push mov daa test ror inc lds jae add jl addr16 mov and out ljmp roll inc dec imul movl fucomip out cmp cld mov adc fsts sbb rorl int3 mov dec pop pop div jmp sbb popa ljmp (bad) mov or push (bad) cmp inc mov imul std sub pop add sbb add add cmp mov mov xchg and sbb cmc cmp sub adc ljmp xchg call jae push xlat and jns iret jb movl and int test add scas js sarl mov dec rcrl dec test repnz loop sbb mov int3 fstl sub ret mov pop imul mov mov leave out scas add mov jno jge insl stos or push adc xor stos rcrl push inc add jns jge or push sub mov faddl js (bad) lock das dec ret in push aaa mov jp rcrb insb cmp xor adc test xchg pushf jge jno mov xchg adc mov add mov jle mov sub pop xor daa mov ljmp adc xchg imul mov sbb cmp fisubrl sbb bound push (bad) cs push pop mov imul mov scas and adc inc das mov sbb xor inc les (bad) popa lods fsubs add jmp or lret ja cmp push or inc lods stos mov popa ret enter inc mov add pop adc mov out inc repnz pusha movsb xor lods aad pop repz rclb ljmp push adc lods dec jbe mov inc pop inc (bad) inc lahf out sahf jl sub pushf and mov mov inc sarl cmc fwait jns ja adc add mov mov add inc adc movsl repz pop scas int3 lret ret popw bound add mov clc dec outsl sbb jb mov sbb sahf (bad) cli rclb cmc sub test add mov movsb mov into inc pop test fwait popl or inc pop scas rorb mov call popf or loope sbbl mov pop cmp cli mov sahf andl das std push adc movl add add movsl sbb fcompl mov xchg pop mov mov push pusha push gs adc cli lahf pusha push sbb mov cwtl scas or aas jl jnp out jecxz pop mov movsb jne push mov pushf xchg pop lret mov shl js adc mov rcrb adc dec jbe repnz push dec loopne mov pop sbb mull ja inc xchg jecxz add push jge es sahf jmp daa cmp mov out xchg cld test stc or pop push lret ret insb ret aas inc cmp cld mov aas out pop or (bad) aam lcall push dec cmp and loope or xor jo cmp in adc (bad) mov out clc mov aaa xchg or add fistl rorb add push push xor imul cmp lds jae fwait inc movl xchg aam (bad) outsl push in add enter lods dec dec lods xchg insl fmuls shll dec cld cs pop dec add sbb dec iret das mov pop aaa in inc (bad) es cmpsb push test dec mov jo je mov aaa mov jle xchg add mov cmc pusha push inc or (bad) (bad) loop pop jp and sub pushf mov outsl inc add xchg fucomp jbe or lret inc (bad) int3 sub call dec call stos test in lea and xchg call outsl dec scas sub add loopne sub ficom fcoml inc mov lods lret jecxz int3 aad xchg sti add add mov xchg pop out push popa test cmpsb xor loop push iret std mov xor shll mov (bad) test inc inc cli xor outsb cli mov daa mov aad addb or je fidivrl mov das ja add inc dec loope sbb push ds jbe xlat lds pop xchg and (bad) sub sbb cmpsl xchg jb mov pop cwtl mov pop inc dec jmp mov cmp xor mov aad jb (bad) std mov add rcrl add loope out jbe mov pop push repnz lock pushf sub call cltd mov insl sub push cli clc add stos dec stos fnsave lds je hlt ret push mov jne add hlt leave cmp add clc cmp jno jno hlt popa cltd adc ds xchg fiadd arpl mov into push loopne xchg stos add aaa rol jo dec repz mov scas sub sahf mov mov adc jns xchg movsb lea mov and jecxz jnp (bad) lahf (bad) popa push es in mov cli add mov int3 mov mov mov fimul test and mov xchg add add daa pop xchg add hlt int3 scas push mov xor sub mov out inc sub daa add xor mov xchg repnz push mov lahf out inc das jecxz sbb sbb fbld mov cmp imul in mov dec inc sbb push rclb out cmc mov xchg cld and dec movsl (bad) bound add jo cmp addr16 jne sbb call in add add xor adc pop push adc cmp xor pop dec xchg mov sub sbb (bad) adcb mov insl pop cwtl pop iret sbb out fisttpll sbb push jb dec mov cmp inc nop pop lret mov pop sbb in sbb sbb sub xchg add mov mov mov xchg sbb es fldl stc repz xchg into cmp clc fdivs leave clc or test leave lcall dec outsb xchg jo add jp dec cld leave scas cltd in stos mov faddl mov dec pop scas es jle neg mov cmc outsl inc add mov mov jp les addr16 inc add or ss xor clc iret loopne int3 push push popf mov or push and stos dec adc adc (bad) fisttpll jg jg cltd dec push pop loope push popf push lods cmc fisubr xchg lods icebp (bad) cltd dec sahf stc shr in arpl add out fs popf jmp or insb ret pop cwtl pop imull dec xchg and add push mov scas add roll jbe push jns in aas xor jg jmp mov sbb sbb jno mov enter pop mov adc fstps adc ret icebp js repnz aaa insl inc jle aad aad (bad) push popf push inc lods xchg fsubrs cmp fwait (bad) lods dec sahf mov out jecxz es xchg push inc xor (bad) jne and push nop pop add add add fstl in mov sbb cmp mov and sbb das je and rcrl inc inc aas cmp (bad) hlt mov add loop imul fisttpl mov decl push adc mov mov cli pop jb test pop xorb push and scas movb insl test jnp fbstp adc nop daa mov test mov jmp test or xchg sarl pop (bad) pop aaa pusha inc (bad) test ficoml jp ss cmp lahf inc (bad) mov jp dec push in sbb sbb daa sbb in mov add mov dec pop mov pop bound mov je (bad) fisttpll cmp push int3 or add fist pop jo jle fnstcw sub in das aaa pushf popa dec xchg pop lods xor test add sbb repnz (bad) movsb cltd aaa (bad) call xor and enter lret repnz cs outsb inc movsl inc mov sbb add (bad) imul std out scas dec std cmp adcb pop push adc or pop xchg cmc das rcrl dec xor (bad) pop outsl ljmp xor rcl mov fisubrl aam (bad) stc mov xchg add lret dec ds cltd jmp mov test cld dec cld leave out dec jns ljmp pop cltd (bad) dec lods xchg pop repnz test adc test jo in repz std pop insb xchg lret sarb repnz cmp call cmp cmp icebp adc and fildl add hlt xor loope jnp scas and cld mov mov repz in ret xor jae jbe add out push lods clc stos push sbb mov sub pop (bad) xlat or outsl dec ja cmpsl jle loope (bad) jno stos fstl dec into das mov mov push (bad) cmpsb cmpsb (bad) jecxz fucomp dec std pop out sbb clc popa leave lret aaa loopne add loop push mov xchg imul cmp cld fcomip dec push ds out mov cmpb sub in dec outsl mov xor lahf cld movsl lahf sub cld insb push (bad) or push and test outsb dec clc mov mov dec jecxz xlat xor sub outsl pusha stos jo dec lcall es ds sahf call sub xchg add jle or fstp sti cld pop pop nop out inc out ret das mov ljmp jecxz push clc push push pop scas dec cmc mov lret rorl sub adc dec cmp stos adc jecxz push jo sub repnz inc int3 jg mov xor mov bound in inc mov push or lret sbb arpl outsl dec jg mov js test xchg add fcomp es int cs sbb sub movsb out nop fimull sub (bad) pop mov enter jbe cmp jnp sbb es testl inc inc mov cmpsl sub ds mov mull pop addl cmp xor fs mov mov push mov enter leave imul std add jbe test (bad) push and inc inc dec add outsb mov add mov push sub (bad) mov push movsl imul pop xor test rorb stc cmp dec dec jle mov dec out add mov test jmp sti (bad) std xchg test dec movsb xorl sete in add mov xor sub dec pusha mov add dec movl mov (bad) lock mov fistpl cmp mull scas lcall and out ljmp aam das inc inc imul (bad) scas out and dec xor repnz push in adc fwait les jmp xchg mov or mov jne cmpsl test jl jmp (bad) mov cmp rcrl cmp add push xchg fsubrl int add pusha shrl adcl in frstor cmp push aas loop (bad) fstpt mov stc mov faddl adc or addr16 jbe xor aam dec iret out jns mov pop cmp cwtl jge lret gs push scas lahf mov aas das add jnp mov sub add add add jg aam inc push and stos fstl sarl fcoml into iret xorl cmp lahf jb mov loopne push xchg fwait movl iret repz dec sbb daa push add adc sbbl inc adc sub pop insl xlat adc sti lods mov sarl movsl inc out inc add add mov push xchg sbb xchg mov ja insl scas dec sbb daa add adc jmp mov dec dec dec data16 mov testb sub dec pusha notb ffreep push dec cmp fisubl xor out mov addr16 lds lock ss fcom xchg rorb xchg pop adc fmuls add add adc arpl js lock lret aaa mov xchg sbb add outsl cmp jns fcoms dec test testl mov sub add repz and scas xor sbbb es jmp subl mov mov std lret dec inc lret outsb ret jo mov sub iret arpl sub cmp add add imul mov adc addr16 dec in (bad) (bad) cmpsb popf gs adc jo out dec xchg (bad) fdivrp rorl fs xchg or cmp mov push adc push (bad) or push ret fldenv int jns int cmp ja push push test adc mov cld ljmp rcll jne lods dec add inc clc insl fdivs pop dec nop and add add dec outsb adc jnp idivb cmp add lods xchg jnp in xchg mov mov lods or stos or jns pop ret or ficom stc leave mov push xchg (bad) inc ljmp sarl repz ret ja jnp mov mov jle andl jle adcl fldl int je or sub fimull test xchg add and fwait cmp (bad) arpl or cmp (bad) sahf arpl inc stos add nop xor lahf mov stc mov jns addr16 jbe cmp lods sbb in dec push push and shll cwtl mov sub or or mov or cmp xchg ds arpl jno inc dec push ds sahf bound (bad) xchg add jle dec add out fcmovu lods icebp push jle lods inc pop lods inc adc mov pop pop add add insl push mov fistpl adc ficompl sbb xchg mov lcall xchg mov add fdivl rorb popl std add stos sbb or or xor rolb fnop cmp mov pop mov dec xor adc fimull push out add sti cmp fisubrl lahf das fsubr pop (bad) notb push pop dec cmp test outsl jns je js dec add dec xchg inc pop push jecxz (bad) clc roll (bad) jne pushl xor lret das inc das and in push das out es sbb xchg ljmp xchg xor push adc das mov adc xchg pop mov cltd sbb into xor insb (bad) adc add add add xor adc repz jnp lahf (bad) popa push push push (bad) mov push inc xor les xor sbb out sub mov gs mov push (bad) mov and leave clc call mov (bad) lret dec add stos jmp cli jne emms mov jb jp int3 dec fldl int sub pushf mov cwtl pop ret xchg (bad) movntps sbb gs mov fdivrp pop pop sub pop aaa mov cmp inc mov jmp xchg loopne lahf jne pop iret mov inc ds or je cwtl rorl cmp xor mov jp gs jbe inc jno,pn pusha mov sbb push fstps mov clc insl add int3 add add test daa outsb jp jns mov adc mov add loopne add ret mov (bad) mov hlt fstps sub and sbb cmc arpl int3 push jnp sub loope daa mov mov mov or add outsl cmp jns fcoms dec test testl push pop stos xchg jnp enter add ja,pn adc jns popa mov fcmovb push xchg insl cmp mov lcall add inc push ljmp arpl mov inc (bad) jb cld sub pop and fdivrs push xor pop iret das dec call adc lock adc cltd lea std pop pop xchg call shr push jbe mov add mov dec jbe cld paddusb mov jmp adc mov test inc or inc jbe or jae scas push cmp inc sbb imul sbbl lods xlat aas fisub cmp jle addr16 dec (bad) push inc out insb pop push jmp rcll ljmp leave inc mov into cmp inc (bad) ljmp in in push scas mov (bad) in adc sbb addr16 mov ljmp pop mov xor inc nop aam in in popf xlat mov pusha cli stos rcrl add add lret pop je dec add and xor inc push das mov and push inc jge test jne lcall add inc sbb xchg and or nop (bad) jno push jmp out add ret out (bad) mov aas cltd stc aam icebp jns aam adc in xor push ret and or xchg movsb dec repz mov xchg adc scas or add add lods jbe cli pop sbb mov mov orb pop fimul xor mov pop and and adc adc les xchg lea insl push fwait scas in or jecxz into fwait (bad) dec push out enter in out cmp addr16 scas adc jae mov push mov pop (bad) shrl lret mov and call xor cltd les add aam mov add clc icebp xchg lret aaa cmp push cld mov js cltd ret outsb leave push mov dec jbe mov push inc lret shr stc aad sub jno (bad) movsb cmp addr16 inc mov adc lret pop mov sbb add inc mov fnstsw fistl scas das lret enter cwtl loopne sarl lods repz cld lahf push sti ljmp lods into das fwait mov inc gs dec pop xor push dec stos dec fsubrl mov mulb movsb int test sub fwait les mov xor insb pop mov scas pop push mov sub bound lahf cmp adc mov ret (bad) repz and push or jo fs rorl jl (bad) and pop inc mov add rorl inc push (bad) mov insl jne xor sub enter add fcomps stos test (bad) aaa mov sti lret in into (bad) mov in dec sbb dec mov fdivrp psrld dec pause xchg loope out jbe pop cmpsl call adc std shrl daa mov push cltd in sbbl (bad) push fldt cmp adc xor inc jnp or jb mov mov (bad) add sub xchg fcoms dec clc cld cmc add or cmp test out pop cltd xor sti ljmp ret mov (bad) lret and lock inc xchg or sub mov push comiss add stc loope lret and mov sbb jmp dec adc cltd pop ret int3 mov imul and jg add add jmp lret popf test sub cmp (bad) ss and mov rcll jns pop shrb leave inc adc aas push rcrl push out and pop cmp test push rclb inc sbb and xchg scas push dec dec test iret rorl adc ret push (bad) loop pop mov xor ret (bad) inc push cmp inc cmp add mov aad mov push fstl cmpsb mov ja adc adc sbb mov inc les inc xor (bad) xor mov sub xchg mov inc mov cmpsl lds mov scas outsb mov push mov cs inc enter leave cmpb mov push shrb push hlt mov movsb xor test jo (bad) stc add mov jle xchg jbe call add mov or add stc imul jno pop aad push jecxz test add dec jl ja int sbb nop xor and sub xchg sbb iret aas mov sbb ljmp push or ljmp and es inc inc jb mov mov pop ret gs pop adc inc sbb mov add add mov aaa xor mov ret cmp sbb ss (bad) mov jno sbb arpl push call lock cmp ret aas clc in push cmp sub inc lahf sbb sahf jae pop mov xchg jns fbstp aaa inc xchg les push and dec outsl sbb mov push popf push fmull das sbb je add mov jmp (bad) pop ret insl lahf movsl out nop fidivr insl mov shll push addr16 mov cmc cmpsb mov add ljmp inc sbb mov ds fldenv rol and push arpl (bad) (bad) (bad) dec inc xchg sub dec sbb popf push cwtl scas test adc lea aas movb adc addr16 outsl enter mov jnp xchg and inc into lods or (bad) fistp loope icebp aam add negl dec xor lods rcl cmpb mov mov ljmp arpl sbb mov nop add aas mov cmpsl jae add (bad) cmp out inc dec add loop mov call sbb popf push inc lods add add bound stos mov movsb mov cmpsb mov and mov pop pushf push faddl (bad) mov in adc cltd (bad) mov daa std fimul sub mov into xor fwait or pop push cwtl fs testl bound push movsl int3 lahf mov mov mov fldcw (bad) push inc inc call adc (bad) outsb and add repz sub int add sub daa dec test xchg push push lret out roll push sub aaa lock mov ret call jecxz cmp cmpsl dec (bad) in jo lret sbb imul bound ljmp insb shll add mov pop lret cmp or xchg loope push xlat iret dec mov das adc int mov mov hlt and adc ds popf mov pushf fistp add fild xor inc xchg fwait xchg (bad) lock pusha adc push lahf dec adc cld fstps ret xchg add xor adc in das in out iret cmp jmp ljmp xchg pop pop mov xchg xor aaa mov into icebp inc (bad) loop pop pop fnop adc lret stos mov xchg in adc push xlat mov roll call add add ljmp mov sbbb adc jge orb add jmp data16 pop sbbl testb cmp cli hlt fmul fcmovb mov popa push lahf adc cwtl in push popl mov xchg xor scas out jmp mov shrb adc in add stos test jno mov dec pop push or int das xchg sbb test movsb xor push pop out sbb push lret inc mov dec jmp push inc rol cld idiv loopne dec es cld lock fwait out jge sub ds push pop test mov stos sbb ret ja sub lret inc push jecxz add push jo insl push in dec jnp pop cltd std dec inc inc and sub loop pop cmp nop mov fs popf sarl fsubl or dec xchg jbe cwtl pop testl out jg mov xor lods std cmp mov ret mov xor jnp,pn sbb cltd and push loope rcrl ja sub xor or cmp jle jg mov sbb dec adcb or add inc and pop push (bad) mov add mov pop clc inc dec rcll pop push mov sbb das dec pop push cwtl cmp sub in inc idivb jnp add mov pop mov scas jle xor inc adc push jnp inc lahf (bad) popa push andl aas mov (bad) dec adc js mov imul xchg (bad) repz and xchg cld xchg add add xchg lods sbb add out or int3 dec scas int3 rcr cmp mov (bad) iret lods cli scas add out push sti ljmp leave and aaa rol (bad) nop or sub dec xlat cmp out aam movsl pushf movsb adc stos push mov ret pop rcrl add jmp push les imul mov xchg or sbb popa add inc enter imul frstor add add cmp arpl jne adc xchg pop push cmp add sub outsb xchg movsb mov stos int3 xor push push sarb rcr xchg pop adc (bad) es out sbb dec fs sbb sub shlb or push lret cmpsl lcall jecxz lds inc jl sbb and adc je lock lods add sub xor cltd cli fnsave xchg (bad) dec ja inc add or pusha fiaddl test stc ss insl adc hlt int3 add (bad) cmpsb ret out mull adc aad lahf sub mov add (bad) push fdivrs and mov jbe addr16 daa call ret insl mov out stos inc dec mov mov hlt xchg movsb xor aas pop inc or fsts adc addl push mov inc pop xchg jns loopne ja mov scas daa nop jge sub xchg jno mov sbb lds jae sbb decb ja pop add jne and insl fisub jae hlt arpl xchg es mov imul dec inc inc ficoml lock dec add jle mov fmull shrb aam in hlt (bad) inc sbb lods arpl addr16 add add pushf mov data16 call mov jl xchg xchg ret pusha test jns pop int3 pop movsl cs or stos daa stos push rcll movsl xchg dec jmp ja xchg lret inc push jecxz jmp adc sbb hlt pop fstpt (bad) lret test mov and pop jmp cltd sub mov ret cmp mov add cwtl pop ss pop shll icebp test push cmc push inc (bad) dec mov adc xchg scas dec enter out pop push (bad) xor jecxz ret or jg loop (bad) xor test inc cli inc test push push lods mov fldl or mov int xchg (bad) mov fsubrp and add aad xor add mov pop mov xor add add add add outsl dec lods cs push dec add push popf test test dec lret pusha call mov xchg push sub hlt arpl fwait or in clc loope lret aaa xor cmpsb jbe xor mov call push and (bad) sub mov pop and mov mov incl dec sub pop add mov mov lret mov gs add dec inc lods int cltd daa insl push outsl mov cld pop xchg fwait nop xor es xchg test stos dec cld and sbb fidiv call push hlt out push test cs sbb fst jb mov jo jg adc rorb dec xor mov adc or inc (bad) loop mov hlt in mov cli nop scas sbbl roll popf push and adc and add or sub sbb add call jne mov mov scas leave xchg or xchg daa mov test jecxz adc jo adc inc mov jg pop (bad) mov jo sbb cmp dec xchg mov inc push jnp incb mov fstpt mov inc ljmp add hlt jb loop ds je add add sbb xlat sahf mov push stos faddl sbb xor jae inc adc add xchg xlat stos bound jg out xchg in mov add rolb and loopne sbb inc adc (bad) jmp fcomp shll mov outsl inc jo pop or stos sbb mov sti cli xchg mov jbe mov in add aaa cmp sbb hlt mov loopne lods aaa popa push repz lret idivl mov and popf scas and stos fstl rcrl ss xchg or lret xor dec (bad) sbb xor xchg mov arpl cld fwait movl adc xor mov mov dec push into mov push sub jae cmpsb ss inc stos adc dec inc movsb dec cli shl scas repnz add add add pusha ret movsb test adc dec jle xchg xchg imul stos push cld and jno int mov jmp or pop ret int3 mov and xorl dec push jg push push out (bad) fisttpl data16 ss push adc jb jle jb out rol pop jp,pt mov inc push mov cs pop dec add push inc lods lret add add aas sbb adc sub push sub in aam data16 mov xchg scas jg test sbb sub adc shlb sub lret adc cmp mov push jns inc pop mov in dec sub stos movsb sub cmp mov xlat addr16 inc add (bad) stc scas jno stos outsl push ret lret pop ds stos outsl lahf dec cmp add andl mov pop std cld out sti ljmp jl inc enter jp cld pop push call xchg mov call std fild imul cmp mov jecxz movsb add pop repz mov imul insl add push cli std cmp dec or rcr outsl and mov (bad) mov jno inc (bad) je xor cmp (bad) adc leave clc add add mov mov outsb lahf dec outsb xchg inc out out pop cmp cld mov sti cmpb mov mov cwtl pop testl fisttpl lock inc jo aam pop ds push out push xchg add mov cld sbb push push loopne sbb mov das add loop je pop orl int3 mov dec add add add loope (bad) enter xlat movb adc push fbstp and mov cld fwait (bad) lcall ss fistl adc ret push aam sub push cs pop fcoml lcall (bad) out les mov pop std mov (bad) xor enter repz fcoms loop sub in xor mov adc sahf mov cmp dec or and add mov dec sti sarb fisttpl push popa stc ss bound or push lock xchg mov insl ja mov fs dec push (bad) pop dec jno adc int iret jle stos xchg jmp das loopne jecxz (bad) test push sub sbb ss jnp outsl aam (bad) cmp ret add aam push add sbb jns push cmc inc sub xchg fstl adc push pop ret les mov lds sbb sbbl and add int stc push in jb pop gs out xor nop daa ljmp loop hlt repnz cld pop dec add sbb out sub das enter repnz mov adc dec push lret cmp mov inc cmp repnz dec xor in add xor (bad) insb pop outsb adc or fiaddl (bad) stc aam orl les mov lds sub pusha and (bad) and addr16 insl shlb jmp add cmp insl fsub cmpsl mov outsl (bad) jns push jmp out cmpsl sahf mov mov add add movsb popf xor jge pop testl out sub cltd imul scas xor or in in xchg movsb lcall mov aaa insl dec or push push mov sub push rolb jmp divb push pop inc mov push mov jnp sub inc jg in sti das dec imul mov lods sbb cmp mov outsl or mov (bad) lahf mov pop std inc dec andl pop mov fsts das enter fwait adc cmpl add lret sbb sub and call aaa mov das add mov out add xchg loopne or sbb and push mov pop mov sahf daa test sub sahf push lods mov or adc aad inc add add xor fs movl add mov mov add dec pop dec xchg insl fmuls and enter push mov jmp pop cmc push faddl shlb (bad) in xor es test inc repnz xchg fdivrl repnz insb mov adc rdpmc cmp mov in mov ret adc push mov sub mov andl push and xchg nop mov add ja xchg adc or out inc rcrb leave clc insl fisubr jno hlt bound push adc ret sbb pop cmp xchg mov icebp (bad) cld daa arpl ljmp inc into das xchg mov dec pop mov and dec add in xor xor insb push cmp push xchg aaa mov fdivrl or push loopne pusha add jno int3 pop inc sub add in xor imul xchg jle (bad) das clc mov sbb mov xchg adc loopne fadd add adc xor mov sub inc pop insl jmp sub call popa sbb test sahf mov fistl mov (bad) call mov cmp fldl adc dec pop push jmp inc xchg popf out pop aaa enter mov add sbb std insb imul mov ja jns or bound stos inc fmuls fxch or sub lahf cmp mov fidivrl ljmp cmp pmuludq dec push dec xchg insl fdivs out out cmp repnz pop sub mov cmp and mov xchg pop adc pop mov xchg fsubl add sbb dec add fdivrp fild mov imul out inc pop scas rol xchg loope add mov inc add push leave mov xor inc (bad) dec cltd xchg inc push cmp mov mov das sbb enter push mov icebp jo scas jl inc (bad) xor loop cmp mov fidivl sub insl push outsl nop sbbl movsl xor daa or (bad) jb pop xchg mov jle jecxz add xor jo xor dec sti lahf jge mov loope sub cmp push mov fidivr movsb fldcw pusha pop lret push add call into and scas jg push sub repnz or xor sbb stos add dec mov inc or jge xor inc movb xor in jne and push inc lea hlt pusha sbb (bad) int3 add xchg and add add aaa out ds movb adc loopne mov pop push test stc lods mov aaa rclb push or mov (bad) pop push cmp push xor fidivr xchg cmp popf ljmp aaa dec repz mov mov ret pusha jge mov mov xor gs push cmp stos push fldl pop or push ret pop dec add scas cmp pop dec shll fcoms (bad) clc push add add lcall push xor mov out rcll dec addr16 mov test mov sbb jle sub out inc into das xchg popa sbb adc inc pop jecxz mov in fcomi adc xor push in adc or iret mov sbb jecxz ret sbb push mov mov mov push rclb adc pushf rorl pop fldl pop out sub push xchg add push adc jge aaa xor push dec sti push mov push dec mov jb clc insl add rcr jns jmp fwait movl iret mov mov pop aas mov lds mov mov fsubrl cmpsb dec fwait fwait pop cwtl cmp arpl test out jns and lea test jecxz arpl mov push insb dec mov orb loopne pop mov jns (bad) add (bad) push xchg cmpsb pusha add ja cli stos push xlat inc ljmp fisttpll mov ret mov inc (bad) dec sti xchg aad ficom push lcall jge add lcall xchg bound divb mov mov mov mov fcoms rorb test loopne cld int push push xchg loopne jg cmp cmp test mov add add ljmp (bad) mov lea movsl adc (bad) dec bound (bad) cli stos cmp add sti push sar push cmp cmpb aad push gs out push push mov lea jmp lcall test mov (bad) outsb popa cmpsl adc lahf scas shl jnp ljmp inc mov dec cwtl (bad) mov or (bad) inc or sub dec out in out repnz xchg movsb jp (bad) dec xchg dec xor mov test mov stc ja sbb xchg loop test jns je fistl or pop push inc xchg (bad) mov repz stc scas dec movb mov xor outsb push popf insb cmc scas out or jecxz or ret outsb clc daa xor test sub sbb dec xchg ljmp add mov aas std pop repnz pop push xorb addr16 out pusha leave xor mov inc add aaa loope push jg dec mov stos dec mov push aam xchg loop shl jge inc dec sub jl xor imul xchg adc jmp stc mov inc (bad) sub dec pusha dec mov add pop sbb (bad) aas loop cli or lcall mov outsb add xchg daa loopnew cmp cmpsb mov and adc add adc push push fsubr sub enter cwtl pop ret cmp movntps xchg inc movsb movsb xor or adc jmp cmpsl mov mov imul je push jbe and push cmc das lods jmp xor je inc mov ret jmp movb push ja data16 adc scas xor inc push lahf dec sbb add push jne enter and fnstsw mov xchg lea call cmp int subl adc and push jnp dec sarb mov leave sub mov movsl in and (bad) pop cld pop test sub cmp inc mov push sbb xchg jecxz adc cmc decb jo ret fldl fwait test sbbl daa cmp in lds add add push mov xor test adc ljmp movl jne scas insl test cmpsl int3 jbe fwait (bad) lret dec outsb adc adc pop shrb xlat test (bad) xor jmp sub inc into das enter xchg cmp fdivrl fcoml adc push dec mov std pop pop scas in data16 and cmp dec ds adc popf mov fstps add add xor popf pushf ljmp es out rorb clc push add dec push arpl jge,pt cld mov loop mov mov xchg inc insb push in rcll and xchg daa or stos int3 pop mov pop sub test inc jmp fcoms mov sub aam pop xor fsubrl in sub or pop mov loope add add sub add xor (bad) lock bound pop adc pushf add dec ret out aad inc push ss lahf jp popa jne cld movl fwait pop push and ret loope fnstenv mov outsb test pop mov imul dec cld lods sub mov imul push mov cmc adc push dec lds add adc addr16 in sar push mov add pop outsb in inc out leave (bad) mov cmp ja pop mov and mov sub xor inc (bad) inc je jp (bad) sbb pop inc mov fxch incl xchg hlt xor add js xchg les mov inc lods sub or jl cmp rorl ret add (bad) movsb dec cld leave cmpsl cltd cmc push test inc sahf push fmull push cwtl lcall fmuls sub add addr16 xor ficom xchg scas jae imul stc and ja add test add inc xor sbb sbb xchg jo scas cltd jno and mov mov dec jne cli add push movsb in lea push mov (bad) mov dec push add adc daa or dec dec cld icebp stc cld xchg aaa sti ljmp push into das repz movl sub push movsl out adc mov push in fs pop mov sub int3 mov (bad) aam out int3 xchg cmp lret cltd mov insl push fldenv iret (bad) and add inc arpl xchg stos xor iret cmpl int mov lea dec push inc mov stos mov enter xchg fwait add xchg loopne mov jecxz xchg fwait mov or inc mov das and pop cwtl pop movl lock out adc mov push in adc movsb lret aaa mov dec mov jmp pop adc je scas mov aam jle mov (bad) xor and push cmp push or (bad) and add push jp sbb ja dec xchg (bad) mov fucomi and add xchg jmp popf mov lret lea loopne jmp pop cld mov sti ljmp inc into cs pusha ffreep push cmp push sar cwtl pop inc aam pop sub xor fldt inc pop scas rcrb (bad) imul adc lods dec jbe add add into rorb push cli adc pushw mov rorb mov sahf jnp (bad) lock mov inc sti jb clc stos iret fdiv jge jb add jge inc xor add enter ljmp ljmp imul cmp pop fwait dec mov jmp xorl push adc push stos jg incb mov xchg cs sub lds add jle mov mov outsl stc (bad) out stos movsb lahf es push enter and (bad) add movsl fs jmp arpl sbb in xor push cmp jo,pt xor (bad) andl or addr16 sahf adc lret and mov mov jg dec mov scas adc test fistpll pop popa arpl mov xor loopne (bad) clc jno inc fwait les add mov outsb loopne xchg dec ss fwait es push mov and insl jb sar xchg pop js sub jbe (bad) push nop mov stos popa fucomi nop push aam push ret xlat push cmp cmp imul in jp call pop push push fs (bad) outsl xchg enter jnp aam and dec inc inc mov loopne jecxz xchg cmp and and add mov cwtl insb xchg push lahf mov imul push int3 sbb xor dec das popa pop jl mov push ljmp cmpsb xchg out mov pop dec cmp cs jl and push dec insl mov mov xor adc jo mov enter mov mov mov xor in std ret je shrb add add add cmpsl and (bad) push and add push ja and lods cmp loop (bad) test dec mov jge pop cmp cltd sub pop cmpsb mov mov adc call jnp xchg push in pop push lret mov add jno sbbl sahf (bad) mov (bad) xor bound push adc test sub fs outsl xor je jo ss cmc sbb mov add inc adc mov add xor lret inc and lods adc leave pop aas inc dec dec cld icebp and (bad) xor cmpsl fidivrl xchg adc stos and out push les xchg adc adc call push and test cmpsl mov loopne lret push leave mov lods lret push in mov and add aaa inc pop addl jl jb inc (bad) scas push sahf inc push lahf dec xchg pop aas pop pop sbb pop xchg or in (bad) lock pop xchg inc cs or lods aas imul cmpsl mov lods and or aam and inc into rcrb mov mov mov jb sub mov jge test iret rorb adc adc aaa insl mov xchg loopne mov xor dec add idivb in (bad) lds fldt inc mov xchg fadds pop stos and jmp jge cld movsb out lret or lret aam push scas fldt or std xor test push scas shrb and fistp mov sub push inc push fcompl xchg jb sbb in xlat (bad) out push stos xor movsl mov das inc xor in in add xchg int3 aaa mov add adc (bad) stos dec ljmp clc mov ret fsts (bad) sbb rorl std mov and xchg dec add loop mov or fcmovnb push (bad) inc jns insb push mov mov sbb into call mov push movsl dec imul and lds test push mov into das cwtl rolb push dec dec iret daa add fmull (bad) adc (bad) in or sub cltd fs dec cmpsb add mov scas call pop mov jns iret mov cli test sbbl pop ret dec jmp loop or cmp jno repz sub std fs ret aas add xor insb push xlat and mov mov lahf daa insl arpl dec lahf push int3 ljmp add loop mov fldl adc pop or xchg jge pop (bad) clc call add movsl mov movsb pop cmp pop rcr push mov pop cmp orb jbe push cld mov xlat addb mov xchg inc test test dec cmp arpl mov mov adc icebp push sahf inc das fadds add push in rorb pushf cli lret dec sbb xchg mov dec out pop dec js xchg inc into das mov (bad) mov stos lods adc xchg adc mov push mov xchg push mov shrl movsb into sbb cmp (bad) imul mov jns mov adc push jmp push sar sub aam pop add jb jns daa sub push xlat insl pusha mov add add push mov add sbb data16 (bad) mov dec fwait dec add stos out out mov add jmp xor cli lret sbb pop sbb mov ss je add pop out push stos xor lods mov pop lret je test clc flds xor orl in mov jns ja pop ret xor add popf xchg cli jg pop adcl ret push mov dec add and scas mov jg xor and je mull das loopne add add cmp imul xor mov push sbb xor (bad) fwait movsb and jnp lcall sub movsl mov pop lret je jl adc (bad) push or mov jle jmp outsl mov sahf aas sbb in add add xchg jbe jno mov sbb rcrl ret dec imul in mov jge lock movb push lods sbb mov fnstenv stos sbb jb pop mov ret cmpsl insl fmuls push fistl add mov fist mov pop call jge (bad) loop jo cli repnz push in add push jne mov sub mov in cmp xchg loop dec es jecxz sbb jmp xor jg es dec sar fldl pop or dec ja adc add popa mov into inc jmp mov insl add or ret xchg inc js bound mov aas cld pushf aam cmp mov fwait push ljmp mov mov xor mov adc aas fdivrp fistpll sub adc les mov xchg mov sbb ret mov inc push loop jns adc inc sbb lahf mov adc fisub data16 mov je sbb jecxz xor inc adc (bad) sbb push add das pop xchg cmp xchg cmp insl fsubr out cmp aas mov add add cld fcomp rcrl inc into dec inc mov out gs dec pop xor and aam add (bad) sbb sub ret and fild mov aaa or cmp scas in insb pop push lahf jae sub jbe and int mov jne pop rcll ret daa bound lds repz and jp inc push xchg sbb push adc or dec lock mov push mov insl fdivs xor adc pusha scas adc jecxz call (bad) push inc popf jg jbe pop cwtl push jbe jle movsl sub push movsl out adc cmp ds lock lret aaa mov xchg fnsave ret insl jno scas mov pop xchg xchg push arpl jmp push jns pop sub xlat inc xchg inc fnsave sub imul add sahf cmp or popf jae xchg insl cmp pusha or add dec xchg and jecxz ljmp adc pop adc mov jl push mov mov in pop mov and ret and mov nop in adc cs add inc lcall scas ljmp sbb int3 xchg mov adc push repnz je pop adc push test push aaa ret mov inc mov out dec arpl lods pop xchg imul xchg push icebp rol add mov add iret dec or jl fildl cmpsb popf xchg insl fmuls sti jae mov lret lcall pop lea (bad) bound pop sbb mov ljmp gs fwait sbb mov inc mov fdivrp pop loop mov enter or ds mov mov call add jns cld inc movsl add push adc je pop pop mov xchg sbb sub inc xchg fsubl and inc cmpsl js mov mov push lret (bad) aaa push in dec loopne repz sar ficompl mov dec xchg mov and imul push into das dec sti mov push xor out cmpsb push movsl insl xlat adc loopne mov xchg xchg loope jns adcl mov mov mov jp sbb loop mov stos push mov push data16 pop adcl int3 mov in fcomip xchg (bad) add jno and mov jl ror push or out out (bad) cmpsl xlat aas fsubl fs sub sub adc dec repz js xchg sti inc idivl cmc pop test add stos pop lret mov inc mov inc imul sti jge fcmove nop cltd sub in push cmpsb xlat or sbb push xor mov dec repz out dec ret popf jge ja iret xchg stos xchg in push lods sbb xorps mov nop lods sbb push (bad) mov outsl fcomps icebp and shrb stos sub cwtl call push push faddl inc into jno mov dec pop sbb xchg xor repz adc cmp std fnstenv mov aaa mov into mov jmp mov add hlt jb loop ds scas bound sub add leave pop mov inc xchg mov mov ja (bad) rol mov jo and mov and shrb add add inc cs adc vcvtsi2ssl pusha lahf loope sahf in push add xchg enter cwtl cmp mov sub test pop and addr16 (bad) dec aam test enter popf pusha pop dec xchg repz loop test mov or leave and mov or sbb sbb push in cmp repz popa fs cltd add add popa in inc in add xchg call scas test movsl in lea (bad) pushf sub mov mov stos sub mov lods inc aad dec dec into das enter es or sub out adc mov push in adc xchg hlt cltd inc xchg cmpsb mov push push data16 cwtl (bad) loop dec jbe cltd jecxz loop push rclb jmp push pop rcrl add jg es xchg cmpsl and and stc jecxz and fidivrl jnp jg jg xchg push add pop jb jnp aas out in (bad) lock test and stos xchg jns mov cmc movsl push ja stc lahf aad js cli rcll fdivl inc test sbb sub sub jp xchg fisttp call std pop test adc cmpsl mov dec in sbb (bad) mov add jbe loop and pusha pop (bad) in dec (bad) push inc xor pop push rcrl lods inc nop mov icebp (bad) cmp mov repz fisubl jg and pop int and dec clc mov ret adc mov dec lret pop sub movsb loope imulb stos aad add mov sbb sbb rcr inc repnz inc pop lret stc add add cmp push mov in ret jmp push lds outsb leave (bad) loop mov imull (bad) adc mov pop sbb push dec je cmpl jmp fwait mov xchg adc xchg dec add fstp stos and (bad) push in fdivr addb (bad) cwtl dec sahf loope (bad) iret xchg fisttpll mov leave xchg pop mov xchg lock add adc sub movsl insl xlat or jle adc cmp jp (bad) sahf fnclex cmpsl mov push ljmp cld loop dec sahf cli rorb popf pop sahf and cli stos rcrl addb stc lods mov shrl inc lahf fs push or add jbe fwait (bad) lret or pop jl test add add cmpsl test mov cmp mov lds pop idiv jmp lock inc mulb es xchg scas jnp divl adc hlt enter add (bad) inc and popf or jmp loope imul lret mov and push mov sub mov fdivrs mov push adc stos cmp jb arpl (bad) fwait movl fbstp mov sub mov mov add orl adc push dec iret pop push movsl out lcall mov test call bound call mov and enter sbb cmp add or and out xchg inc ret dec and or repz or iret mov lods sbb dec (bad) xchg push fbld cltd pop insl push sub mov fwait (bad) lret fldcw push cwtl adc test aad stos fldl sbb add into jns (bad) call lcall repz add out sbb movsb push mov or rcrb mov mov inc inc adc push lds pop and sbb cld pop mov mov mov cmpsl add dec or cmp fldt xor add pusha mov aas lcall adc cwtl xchg (bad) lret inc pop push jns xchg push (bad) pop sbb ja cs lods mov ljmp inc into jg mov ljmp (bad) sub aaa sub out mov dec push xchg std xlat icebp pop xchg out aas lret call inc adc inc add add mov or push mov das cltd mov (bad) ss or xchg sub pop xor in dec xchg dec jl ja sbb and (bad) cmpsl lret add xchg push lahf adc in push xor add lds sbb call scas sub cmc clc shl dec sti ljmp inc dec xlat lret xchg pusha (bad) (bad) or fs cmp pop mov xor add std aad test call inc inc (bad) jecxz adc xchg loopne leave jae push sbb sbb inc cli sub pop push fcmovu cs daa lret cltd sbb dec jb gs inc adc (bad) popf insb leave stos cmp insb or jl jmp adc popa or cmp (bad) xor push (bad) pop inc inc or and roll mov loope sbb fwait pop jo call std xlat (bad) or mov xorl jbe stc loopne xchg (bad) loop and jno inc ja xchg adc pop arpl rcll adc stos ffree inc add dec mov and sbb shrl push add push clc insl shlb cmc or jae je fildl ffreep pusha clc daa or mov add je sbb loope adc xor repnz or xchg rcrl mov dec pop sbb xchg xor mulb adc jmp mov aad mov pop stos lcall adc jg loop dec decl mov or push pop inc mov sbb (bad) xor xorl aad add mov jnp pop mov mov pushf arpl daa cmp push cwtl adc fidivrl clc test mov sbb test out pop xchg dec or sub cmp adc adc in aaa loope mov fstps in popf das mov mov jmp sub jmp rclb and mov jns mov add fs push adc fs in mov inc test into imul xorl sub add add loopne,pn dec (bad) shrl sbb jne popf clc insl shlb stc or jg xchg cwtl inc lret popf pop push jp xlat jno outsl push (bad) xchg push aaa mov int3 add into js (bad) call lcall repz add addr16 ljmp std pop cvtps2pi jp or cmpsl sbb inc mov inc sbb sbb push mov sub (bad) xchg cmpsb pop add out outsb out pop push lods pop mov push push into bound sbb popa pop add andl sbb mov add rclb cmp fidiv jge hlt int3 jbe aas pushf cmp cmpsl pushf pusha rol push or lds dec and imul rcrl jne or mov pop and addr16 cmp and adc pop lret xor (bad) mov out mov add add aas daa loopne sbb repnz push imul loope cld mov and jge lret arpl icebp aaa scas sbb push push dec and push cwtl jne sbb in lea nop and es adc jg jae lret pushl (bad) dec mov enter test shrl push in push out cmp call adc dec loope add add arpl mov popl or mov add dec inc out push fisttpll and aad test pop add je insb stos fldl mov inc mov call mov (bad) xor sub int3 jbe jmp or je sub and dec lcall loop jmp or sbb add shlb mov adc push lret mov std or pop and add mov lods outsb ljmp loop dec add and jg int3 mov orl lods mov fldl (bad) push or and jg ss (bad) push sbbb scas push adc sbb leave sub mov ret jmp std mov sti in les test (bad) das (bad) mov xor sub mov sbb insl insl cmp and ds (bad) je pop out scas lret aaa mov (bad) fildl inc xor sbb adc dec dec jbe repnz jo dec push rclb je es cmc das sahf pop ret dec or push shrb sub cmp sbb mov ljmp add add jge pop add dec test jp aam dec inc push mov scas inc js scas adc fnop mov mov adc (bad) push outsb xchg pop sbb test insl pop into pop push loopne xchg fidivrl xor int3 adc mov mov sub xor push scas dec sti out sahf inc sbb bound adcl sbb inc popa hlt xchg push mov add add movb push lods mov push dec add popf push cwtl scas test push in lea or dec xor ret call in mov call aam sbb inc into jns (bad) (bad) jmp xor fwait repz add addr16 pop mov pop fucom outsl std pop mov xchg cmp inc jge xor (bad) leave cmc inc adc sub test jnp push mov add inc jnp push pop in add push cli cwtl fwait xor push jmp dec pop inc or jge xor cmpsb (bad) and mov add repnz mov or test xor adc add stos repnz sub cmp scas data16 fdivs push sbb mov push push mov pushf fisubr cmp mov and cltd das xchg push inc call mov pop add xor adc mov cmp bound mov push adc pop pop push lods xor pop mov outsb inc xchg rorl int xchg adc loop push xchg addb orl inc inc or xchg fwait dec lahf inc mov jmp ficompl test out das cld lsl ljmp mov xlat ljmp (bad) inc sbb mov xchg pop mov add inc pop gs push outsl aam fimul cmp sarl push jecxz sti pusha cmp (bad) mov ja jns pop add adc out xchg ret ret fist sbb cmp mov push mov fcoms adc stc ss jle or aas lock xchg xor dec outsl (bad) mov testl inc push add add adc (bad) arpl sbb mov xchg ficom out xchg movsb cltd mov cld sbb pop pop sbb stc loopne mov out mov xchg fsubrl xchg cmpsb xor cmpsb sbb adc mov mov fiaddl je jg ljmp std stos bound adc in push xor mov fwait (bad) lret test push jmp call add andl pushf iret enter xchg push rcrb and mov shr addr16 pop xchg sub add push movsl arpl outsw push pusha test adc sbb lret aaa cmp mov int lock lods outsl call iret int3 pop inc (bad) push aad orb xchg sub int3 push sbb push vpsllq out mov outsb aas jmp mov lea into insb add lret scas cmp mov out adc aas and push push sub inc mov sar int3 push out mov jbe repnz stos test jle insb std sbb and out jp out (bad) push movsl insl xlat and jle mov fdivr pop or sub movsb fwait mov add add sbb mov xchg int3 mov add sub add mov and jge cli add jp ja shrl mov cwtl or (bad) dec lea stos push adc enter vcmpss mov addr16 iret jo scas adc and cmp mov jle,pt and and stos sbb rolb movsb xor enter insl pop lret inc mov sub adc push lds ficomp sbb in mov add add add inc cli push jecxz pop pop cwtl xchg push mov cli mov mov mov in inc lods or je adcl mov add popf test in jp or mov repnz mov clc push fmull sar adc (bad) mov lock int3 mov lret cmp xchg jecxz into pop lret aaa cmp push cld mov and sbb xchg xchg and dec jbe inc pop lds sub inc xor imul dec dec fstps mov mov sbb ljmp xor stos bound mov jbe (bad) sbb fwait movl ficompl push fistl jmp dec stos mov dec push inc inc mov adc icebp inc (bad) mov cli movsl out cmp add add and jo jle add cmp mov pop inc push repz xor push jecxz adc cmc hlt outsl sti mov fdivs push imul (bad) xchg mov push (bad) into add call xchg pop sub (bad) push jecxz xchg xchg (bad) or insl push outsl test jnp outsl add push (bad) mov insl ja xor jle and into mov loope out cmp push fstl pop mov repz out shrl mov in aam push fbstp add addr16 cmp jmp inc adc push ret mov data16 loop leave mov hlt dec cmp lret in popf mov or repnz or dec stos cmp rcl mov je cmc das jb fisubl inc jg ss mov leave clc out xchg cld mov stos adc pop dec pop cmpsb and xchg rcr xor inc mov sbb mov cs xchg or movsb inc pop push repz and ja scas pop mov movsb xor fimull addr16 aaa cwtl adcl cmpsb mov add jecxz dec sti cld mov loop (bad) inc aam mov push adc stc pop ret and in dec push dec mov cltd inc (bad) lret shrl add add add mov lods sbb jmp sahf fisttpl jp int3 arpl loop (bad) pop push jmp pop push pop xchg fcomp and lea movb xchg pop adc sub dec add push lret inc daa icebp jp cmp fwait popl or and cmp out inc xchg loop adc cmpsb dec jbe es lock (bad) popf inc outsb push adc push out dec data16 mov loope add add and sub (bad) movsb xchg into dec mov ss pop mov add int3 add sub jecxz xchg stos ljmp xchg mov push adc rclb test rclb pop cld add sub xor sbb adc dec cmp es ret outsb icebp inc sub mov mov xor loopne ror cmc rcll add cmp fistl adc inc pop mov in leave inc repz xchg loope or hlt dec pop (bad) xor cld int mov dec xchg nop sub mov inc mov fstpt ficoml pop push arpl imul mov sti add jb push push dec test cwtl sarb pop jns mov cmc mov pop insl xlat push sar mov sarl jnp adc or pop clc int add jmp add mov xchg gs inc (bad) inc xlat dec jmp lds mov add imul mov movsl sub das ja mov ficoml int insl mov subb pop dec push rcrl ljmp push das sub ret sub and pop fstl aas mov xor push xchg inc (bad) pop (bad) enter dec in sbb add inc adc ret mov fisubrl shlb dec aaa mov xor cltd (bad) pushf mov fimul mov (bad) (bad) addr16 int3 movsb adcl (bad) and enter (bad) adc mov loop mov dec push lods push inc cmp pop and arpl cmp loope push mov jb and sar loop lock adcb add add add movsb lahf sub call out popa movntps push (bad) testb movsb mov insb ds adc les es mov cmp cmp icebp adc mov (bad) sbb mov insl insb rcrb cli clc flds lret jl cld mov add inc jo lods stos xor iret sbbl imul xchg jmp cmp pusha cltd pop (bad) xor rorl add mov pop (bad) nop mov pop scas adc cmp push push (bad) dec jecxz shrb mov frstor les in in in dec stc xchg and xlat icebp inc xchg out pop addr16 dec loop sub add scas inc sbb xchg push bound cmp xchg pop notb stos push add mov leave cltd (bad) scas cli (bad) mov inc jl dec adc add push dec xor adc iret aaa jl mov outsb xchg stos (bad) mov outsl sarb sti mov and or push lret xchg aad pop pop jb hlt addr16 ljmp mov mov movsb (bad) ljmp sbb (bad) lock lahf lods mov outsl fnstsw loopne nop add inc inc mov pop rcll xchg and add add mov divb pusha scas or jg sti cld xchg int mov leave jae add pusha pop into leave lret sbb in addl loop and mov fmull insl sar jbe or das mov push repnz movsb mov mov mov lret xor mov add push xchg jne add add inc stc xlat push adc or mov stos fstl rcrl mov jmp xor lret mov sbb addr16 rorb test cmp aas lret loopne xchg movsb mov mov xchg mov js xchg push fsts mov inc into jle xlat aas mov cmp leave lea xchg loopne jnp cmp arpl mov xor xchg test ljmp add add mov inc test inc jle mov punpckhdq mov xor xor push stos xor loopne mov mov or and add iret adcl sahf mov mov pop xchg cmp xchg enter and in push pop push mov test push inc repz lcall xor adc das dec test es aam aam adc in sti and sbb rorl or jg (bad) out jbe push mov int and fidivl xor leave pop aam push mov xor xchg mov xchg add cwtl call xlat pop (bad) fstpl sub js sbb (bad) push (bad) mov sub das in lea out lret das push push dec in movsb mov sub cs (bad) repnz cs xchg add add fcomps push cltd outsl push push mov (bad) movsb mov xchg mov sub dec push adc unpckhps inc cmp adc adc mov mov cmp (bad) outsl sti mov das cltd dec call cltd das jl xor je std add pop or or jo icebp mov mov pop mov stos bound cmpsl lret pusha shlb cld cwtl xchg lcall add pop xchg arpl nop lret cmp cld lahf adc ljmp adc dec insb aas xchg pushf xchg pop out call dec add sbb dec xor icebp xlat rcrl inc cmp and dec xor movl push push outsl ja inc scas dec sti xor fcmovne lds stc aam pop pop stc test push dec or dec loop dec mov mov jb jno (bad) scas stos (bad) mov add lcall clc insl fdiv enterw push (bad) pushf xchg xor mov sub hlt std inc dec roll adc push dec nop lahf lods or (bad) (bad) fidiv or icebp pop lret mov inc das pusha mov push (bad) add leave pop lret mov (bad) mov inc mov ljmp arpl sub mov cltd mov insl sub insl add or add add fisubrl cmp xchg cmpb notl pop jo out push push mov lea dec jmp fwait stos lret xchg or and mov mov arpl xor adc jg lea divl outsb fstp loopne jne or sub icebp ss sti jnp fnop add and mov sub xchg inc add or aaa ret xor clc iret loope add lahf push lret adc sbb mov and mov jne ficompl popa mov lahf mov scas fsubrl notl in push xor mov xchg xor insl fsub cmpsl mov outsl dec iret push jb sti mov push fdivrl push inc fidivr fstps lock dec xor in mov inc (bad) xor aaa mov push notl inc lcallw idiv repnz dec sub pop inc push xor out insl adc out (bad) pushf mov xchg repnz jno orl mulb and adcl lods outsl mov mov xchg cwtl add daa mov test arpl ljmp inc into das inc mov loop mov add add popf sbb and fdivrp fild mov cmp mov in inc outsl arpl popf cwtl popa xchg gs mov lretw dec mov cmp cli stos push xlat xchg add dec mov movsb sub (bad) int3 sub mov push adc in push jae cmp fwait inc push rcrb sbb ret pop add mov push add ljmp mov pop mov push fiaddl mov stc fwait xchg mov cmp in shl fwait das push inc jp pushf aaa cmpsb out push jecxz mov ret je outsl jecxz daa repnz int roll or mov sbb lcall (bad) xor or (bad) in push or fisub mov (bad) (bad) sub jb push insl int3 pop pushf inc daa xchg call and outsl inc testl inc push mov lret imul xor cmpsb popf mov (bad) sti je stc fwait adc xlat das mov aaa fxch jge repz inc push ret pusha mov cld movsl je loop (bad) adc loope stos cmp add mov dec push mov jbe fmull jg ds loop add test andl xchg lods mov jecxz insl mov cmp daa or push fistl xchg lock add fnop cmp adcl (bad) aaa dec xchg arpl (bad) outsl sub imul inc enter cmp in adc cs mov or mov mov mov pusha add hlt out loop mov add sub add cmpsl or fldl fst jne or call inc cs inc sub (bad) negb fcomps cmp add xchg mov stos addr16 mov dec xchg fcom xchg fmuls push dec xchg and mov pop push fsts xchg inc out aaa mov jmp jbe adc (bad) mov lea add add add jbe cmp int movsl test arpl push jbe stos push push test adc jl jge mov ret push dec cli dec mov scas ret add mov outsb in or lods cwtl setnp in mov aas (bad) mov (bad) cld pop adc ljmp adc inc imul pushf (bad) pop push mov fdiv adc in outsl idivb push in adc add cmp add add loop (bad) xor int pop inc push xor outsl adc add popa cmc sbbl lods pop dec xchg ljmp mov fidiv pop add rcrl dec cs push in enter sbb scas lret dec cmp es lret mov cmp lea lret aas sbb xchg pop hlt add sub pop pop cmpsb fwait cmp loopne xor jae adc jmp ret add cmpsb adc mov cs push leave mov cs sbb (bad) push dec jmp dec push stc add stos pop orl mov and cld dec pusha sahf pop movl cmpsb aad in lea inc mov fstpt pop clc daa xor cmpsl stos inc jns (bad) sub add or in xchg fcom test sbb movsb lock mov push push sub push cmp sti imul addr16 aaa cwtl in aad dec mov (bad) es sbb xchg clc sbb adc daa in pop xchg push cmp pop data16 push or mov negb add lods sbb (bad) lahf sub hlt push push mov lea dec (bad) cltd fwait test add jnp add popa mov shl arpl adc inc stos das phadddq mov lret cld leave mov pop sbb adc ss fwait lcall cmc pop adc pop mov push stc call and sub (bad) (bad) adc je push pop dec push stc add push pop sbbl adc xchg jbe mov add les cwtl add xchg push mov out xchg cld outsb repz or push inc mov pop push xor sub enter pusha (bad) mov mov fsubrl jp insl (bad) rcrb sarl sbb sub add shll cwtl movsb rcll das fcmovu in movsb jmp mov and leave test jns dec pop sahf aas ficom data16 wrmsr sti push cli cli fisttp push sbb js xchg movsl sub inc scas inc mov imul ficompl iret inc mov lock or pop loope jbe faddl call and stos hlt pushf aam dec clc ljmp mov adc arpl dec in mov push mov jns les dec into shll outsl dec push sub jns pop mov decl and sub out mov sbb cmp pop gs jno leave push mov inc mov mov and int3 pop ret int3 mov lds jne (bad) pop inc jg aaa jmp inc les out popa arpl imul push lret dec scas ret fwait jecxz pop inc fist mov xor test jge inc or cwtl pop iret sbb sarl (bad) adc sbb and lds add aam mov add mov inc mov cld iret jno mov cmp stos push cld mov ret fsts (bad) inc out xor pop xchg push push lods mov fldl mov push insl mov (bad) in mov and pop or xchg shlb stc shrb push in jno xor adc call sub rolb lods mov and add data16 mov xchg and inc roll jno lcall das or out lock call das bound inc (bad) xchg (bad) jb inc sub xchg add data16 fstpl fimull sub inc jg in sti movsb aam fcmovb data16 out jno insl push in add loope mov push or mov pop in lret lcall add in clc sti ljmp xor das enter xor or sub xlat out adc das aaa loope xchg gs fisubrl push cmp cmp push xchg inc das imul xor xchg add scas jp je ds pop xor and dec add cwtl mov daa add addr16 jg xor int3 xor add adc sbb lods cmp mov add fs lods add loope popf mov pop in lock sub ljmp cmp fistp lds dec inc orl xchg sti cmp mov add (bad) jmp (bad) sti mov fldl jecxz push scas and push dec xor mov add ret fstps nop mov je fstl imul or adc mov cmp xchg adc add xor dec cs call mov fistpll and fcmovnb and popl (bad) jo dec scas cs xor push iret mov dec sti cmpsl xchg pusha mov xor adc lret sahf pop dec mov lods rcl adc daa mov iret in mov sbb xchg loopne sar loopne (bad) and and push pop adc lret je pushf ret je roll add lea aaa std xor loope cltd imul push xorb ret push sbb imul imul outsb xchg daa cmp push cwtl adc ljmp pushl out inc mov aam je inc into sbb push xchg adc xor and aam aaa sub dec out inc dec fldenv cmp inc out lods enter xor sub inc adc add add add push mov xchg mov push jo daa cwtl or fistpl xor int3 ret into loope mov mov sbb jmp mov xchg insl rcrb clc sti mov lcall scas test into push lcall into xchg push and mov pop push push jp in int3 and movsl out inc repnz xor jl add sub mov mov jo mov data16 add ret sbb fwait pop (bad) and pop push lods or (bad) icebp stos fnsave lret rcll pusha inc add fildl iret sbb inc jb add popf rorl mov dec call inc outsb xchg daa out or lods sub in jb pop push adc push mov lret mov mov push sub adc mov in xchg movsb fwait popa pop jae repz jno outsb fmull (bad) imul loopne nop int3 mov in popf and cli stos fnop movl sbb aam repz cmp popa mov fcmovb adcl add sub add lret dec fs daa ljmp xchg mov icebp ljmp inc movsb das mov sub sbb sahf pop scas out adc jle movsb xor (bad) in adc nop mov inc inc xor push sbb xchg (bad) loop mov lret xchg inc fcoml adc pushf jmp stos cmp fidivrl push and jo jne ja scas sub popa cmp xlat pop (bad) movb popf pop inc sbb mov add sbb add mov cli lods jo xor pop inc jno,pt outsl dec iret arpl lahf fnstsw push add ret lods cwtl pop divl outsb fcmovnu loopne lcall fwait cs xchg cld pop lret mov or jne outsl cmc add mov (bad) and inc mov (bad) in mov pop xchg (bad) sub and xchg ret jo jl or add adcb cmp inc pushf mov mov lea mov fisttpl xlat fnsetpm(287 cmpsl mov in hlt repz cld xlat and ljmp inc int3 das enter mov dec repz in pop push ljmp in rorl adc xchg or xorb or dec mov cmpsl pop ret pusha push xor mov add fwait daa lcall add add movsb aad push push js sbbl ja call jmp (bad) data16 loop add out push jmp or cltd adc xchg notb fcmovb (bad) inc out es mov ljmp inc test popf in dec nop push jno mov fstps int movsl out cwtl ljmp shlb lret aaa mov mov push shll push jecxz (bad) mov aam push scas and xor adc popf mov mov mov stos popa sahf inc mov pop xor stc mov mov fsubrs (bad) cmp das sbb jb or pop (bad) dec mov (bad) imul es xor mov fistp inc jp sahf fnstsw dec adc xchg and test inc mov int3 add movl lahf add orl pusha add testl add pop ret dec cmp cmp inc and jne xor movb cmpsl daa push adcb push lret cmpsl xchg lods sbb sarb repz fmuls call scas adc aam inc dec sub xchg cwtl add cwtl (bad) or add adc (bad) out (bad) push movsl test dec pop push or lods (bad) pop mov jmp or (bad) xchg loopne iret push mov mov add push xchg adc rorl cmp stos push aad push or (bad) adc xchg mov cltd jge and cs inc jg (bad) movsb dec loop mov push add iret xor xchg shlb (bad) ficompl sub xchg lea call insb cmp add add cld leave scas inc negl adc ficomp cld lea shlb and push enter fwait xchg mov or and ss sbb dec (bad) sbb xchg loopne adc push mov sub add adc or sbbl push dec xor sbb mov test and inc lods inc repnz mov jecxz push lea inc ret (bad) stc dec cmp xor add test hlt int3 (bad) out shll pop das sahf pushf dec xchg test clc mov and lret addr16 and lods pop aas xchg xchg pop aam cwtl cld and icebp aam push dec in test mov movsb pop sub push jge adc mov sbb mov ficompl addr16 (bad) loop inc cmc (bad) jno inc sbb xchg add and mov outsl mov fisttpl pop xchg scas mov lods lahf dec or popf push dec cmp xchg jno or pushl dec mov jns insb ss test movsl lods adc in outsl xchg das stos test das aas shrb inc mov shrl fmuls sub in mov add clc pop lret pop popl inc imul stos scas lahf (bad) outsl jmp sbb and addb adc jo aad add add jmp sub push and adc je mov mov and ljmp test jo lea add (bad) mov insl jnp out ss push fstpt mov sub daa add mov push es pop enter jmp push movsl fst jb mov js jp adc dec inc aas out mov fisubl sbb add ret pop jnp push mov hlt hlt xchg mov xchg outsb mov (bad) mulb push pop dec add push rorb movsb xchg pop or in mov (bad) mov lea scas test sub lcall ret ret or (bad) cmp adc jae imul inc dec dec cltd leave aas xchg xchg out mov cmp fwait das (bad) out sbb jmp movsb xor push repnz push in adc and sub add fistpl (bad) popa sarb jbe testb pop dec add stc add sub pop test mov mov dec in jbe push pop mov loop jg into mov into add leave clc xor push hlt js int ret outsb xchg js call and dec jno movl daa aas push push mov (bad) aaa outsb add (bad) call inc mov ljmp idivl pop mov jnp mov aaa cmp in jle sti insb pop outsb pusha cs push repz inc (bad) inc cltd daa mov bound ret and sub ss inc lret jg mov pushf jmp stos dec test cwtl negb or ds sbb daa ss popa dec pushf popf add add push jle out cmp lea testb push xchg adc adc adc cltd lea aam leave inc addr16 sub inc jp lahf ljmp xchg xchg lahf push ret pusha lods outsl sub jle jno pop cmc aas sub movsl rcrl (bad) popf in fld jg jno js insl push xor push and cmp adc add enter mov push ret outsb xchg daa cmp mov shrb pusha hlt dec xchg ja popa jae xchg fcoms test cmp out push test push das sbb mov cmpsl xor jbe adc cmp inc or push cmp inc xchg jge mov shufps jne int in push add sub push and inc pop arpl inc add add add add jg mov and pop pop pop xchg shlb std out xchg test sbb in arpl add and sub negl js daa aas push mov leave dec fbstp shrb cmp mov out mov cmp ds sbb lret inc lea push loope popf stc mov cmp mov les hlt xorl stc outsb je add add sub push ret dec jecxz test (bad) stc repz jg jne sbb test outsl dec fistl and popf lea jnp pop popa sbb mov xchg mov jp xchg pushf dec inc push mov and mov lahf mov dec into das leave aas xchg pop jo aas or stos sbb gs call std push test adc and movl add fcompl add les out mov adc jle rcll sub or cmc jo or jne jnp cmp jecxz push mov or popf push inc outsb fsts in push xor mov dec sub mov add dec cld sub in cmp ljmp mov pop cwtl shl pop inc stc pop into and lret adc add add aad ds xchg aas les mov xchg mov movsl rclb scas dec jbe jno mov js std les pop xchg mov and mov repz and mov out jae sbb mov insb lret test (bad) fs lea inc push fimull shrb sarb sbb cmp lahf fcoms mov xorl add aaa mov dec xchg xchg fmuls sub je jmp cmp mov pop test sub jmp (bad) adc adc pop adc lahf (bad) mov jno lret clc sbb dec aad je pop rcrl cli stos push add data16 fstpl or pop dec xor mov out sub xor or dec into scas add cli and push mov add aas inc lahf daa mov sbb call add pop cld fdivrs xchg mov push and push lods xor sbb sub in repz stos mov fdivrp pop nopl inc out aas cmp in jmp sub repz inc (bad) popf addr16 pop imul xchg mov add test jns inc mov jb push sub dec mov sbb xorb add loopne sti lods enter sti mov cmp dec jg mov into data16 pop push iret push pop sar adc adc or sbb inc ds aas dec (bad) insb outsl push call cmp sbb mov lea fisubr jns mov cltd sub loope hlt or dec stos cmp inc in enter add sub int3 cmp in ficom mov push jno mov add call mov or das in mov push pusha push lcall dec jbe xchg fisubl push push mov std scas mov ret adc push mov sbb out inc fisttpll test sbb test mov inc stos jb arpl loope sti fidivl scas jo mov inc (bad) lahf push add std (bad) rcrb insb pop out dec adc sub cmp dec xor and and and or push mov lea dec xchg mov in xchg cs popa rol adc popf in cmp sahf rclb fadds inc into (bad) mov pop mov mov pop xor mov negl in popf aas rcrl repz clc add hlt pop push loopne adc out dec jbe jno sbbb sbb bound (bad) mov nop cli stos add stos push lret addl cli xor cmp sub dec fldl2t in add sbb adc xor pop inc push (bad) fcmove cbtw daa addr16 idivb and leave scas jle cmp dec mov leave fwait (bad) lcall push mov in pushf gs adc add mov shrl lret aaa cmp mov les inc clc imul std adc xor scas pop pop ret dec sahf rcr ret ficoml inc lock adc xchg pop aaa lods sbb rcr or push inc jle pop in out pop arpl push dec lret movsl jno daa addr16 and dec jno jg mov rclb mov xor add inc das enter enter mov adc in rcrl iret mov xor xchg xchg mov scas mov lahf (bad) imul or arpl mov push lods cli mov std xor mov repnz sub inc dec sarl lods jbe mov cmove insl fisubr mov ret pop inc fs daa in in add outsl (bad) test je add push push push dec xchg lahf (bad) mov adc push test popa pop mov pop lret mov fild mov aaa cmp mov mov cmp cmp icebp adc pushf sub fwait add mov insl pop rcrl cli clc add lock push push faddl sbb frstor add inc push jecxz xchg push movl add add popa (bad) adc mov dec xchg into xor (bad) ljmp outsl dec cld mov sti ljmp adc mov leave xchg in shlb icebp mov sahf sbb popf jmp adc movlps movsb sbb jmp mov lock stc jecxz jle cli mov es jg arpl xchg pop notb out into rcrb fiaddl jb jne jae push xchg push xchg add (bad) pop in pushf push leave clc fadds mov lods ds cs mov push mov pop nop scas sub call sbb pusha inc push outsl std push lret pop (bad) fsubr out pushf fisubrl cwtd sub lods add and fwait and stc push inc xlat das mov jge out imul decl and jno xchg cltd add add mov adc jb push pop ret les push push dec or cmp mov ret push aas pminsw push xchg orb fwait xchg insb add orl mov imul sbb push and enter xlat aam enter pop fisttpll inc aas xchg pushf aad cmp mov add arpl pusha sbb mov fidivr xchg fstl aaa adc mov add lock pusha adc ret pusha sub fistpl cmp add adc inc in mov (bad) js into movsl cmc ljmp mov aam sub inc jg call lahf inc push int mov mov xchg icebp into fwait sub adc nop push sti cmpsl test xchg pop dec jo adc jae nop je fcmove aam mov mov inc sbb repz mov add dec mov add pop xchg add popa cmp push ja dec mov arpl cmc (bad) mov ret xor sti gs inc cmp pop mov sbb cmpsl cmp push jecxz loop xchg sbb sub cld mov (bad) push xchg insl cmp mov pop scas loop ret out xor es sar loop mov dec mov cmpsl push mov pop xor add push inc into cmp mov push (bad) test adc xchg mov cmc ss add dec pop lret addr16 (bad) repz sbb iret sbb stc fbstp mov jns add add popf mov stos (bad) xorl mov lock aaa int cmp sub mov inc les (bad) jl push in in (bad) inc mov mov xchg add (bad) jnp add inc sub out adc mov aas std pop lret xchg dec cltd shrl rclb adc jle adcb jmp stc cmp arpl xchg xchg adc xor push xchg inc imul xchg fldt add push cmp dec add jg insl sbb xchg pop icebp (bad) test sub add jmp repz repz fwait (bad) cltd icebp sbb pop dec dec popa popa mov pop and xchg mov lock popf cmp push rolb and mov push repz (bad) push mov scas pop addr16 jle inc pop mov jnp imul inc or lds enter cmc imul mov sbb push lahf out jp sub sub add dec fisubl push and add scas and adc inc push jecxz add ss sbb in dec mov inc push (bad) or out mov in and push jo scas mov fdivrs push sbb mov push add pushf xchg bound aas movsl sub cmp fwait pop xor mov mov and and jmp sub mov stc mov (bad) in push fwait stos xchg sbb sub fldl stc repz (bad) hlt xor xor mov xchg cmp stos int and ljmp int3 add das stc inc fisttpl into daa addr16 dec inc in insb xchg mov sub add jle rcll mov mov shrb cmp lret xchg shr dec inc ret imulb cld rcll sbb out xchg xor gs and repz jno cbtw inc fistpl inc daa icebp xchg sub inc mov sub fcmovne xchg push and or jge push or scas cli jp cmp sbb imul xchg addl pop out xor pop out out (bad) shrb mov add (bad) mov dec jmp mov mov mov out testl add mov pop mov (bad) js mov add push mov jle push inc inc adc ret mov push test iret mov (bad) push jp xor sub dec mov outsb leave jle cmp das je repz mov inc mov or dec test lods sbb add daa shlb jbe arpl das mov mov xor add add faddl (bad) or dec jmp inc adc aas sub xchg (bad) in in in jmp add xchg movsb xor cmp and mov or push (bad) loop pop mov and adc ficom adc icebp shrl or mov xchg (bad) mov xor mov addr16 shrb adcl pop in (bad) lock jle or mov add add iret arpl mov push insl sub adc inc ljmp xor mov movsb and rcrb lock mov inc (bad) scas sub mov arpl in inc loope dec (bad) int repz mov fwait mov sar mov sub bound cli in cltd xchg push stos mov stc stc xchg jge xor cmpsb (bad) cmp mov inc shr mov mov pop mov sub push xchg or fs popf stc add push pop xchg jne pop idivl in pop jmp mov sbb mov test add or je mov je sbb xchg daa jns lahf loop dec sahf jb mov inc pop inc xchg xor imul jbe test add dec outsl sahf scas movsb xchg fldcw inc subl fstps xlat pop push and ret clc insl push mov adc pop mov call aam ret es push ds stos push inc mov push push dec pop neg xor outsb (bad) fsub or pop scas aaa loope pop push mov xchg mov mov (bad) in push subl jae pop sbb sbb add adc js sbbl or sbb xchg mov ja add pop mov (bad) pop push mov sbb outsl mov jb aaa lcall xor sub (bad) mov stos add addb enter int loopne push rcrb xchg sbb mov movsb mov repnz pushf test in push xchg mov add add rclb inc xchg jne stos inc jbe sbb xchg adc iret dec (bad) test push pop inc mov sbb mov lods and ja add mov xchg fimul fnstcw sub sbbb xchg add popa int mov (bad) jb cmp ficoml aam push mov test xor mov add or ret add nop arpl aaa mov test stc jae add loopne fisubl scas inc jbe clc (bad) loopne add push adc je sbb push cltd xchg outsl stos fldl or jge xor cmpsb (bad) adc mov fisubl mov and in dec mov pop (bad) inc or fwait daa loop mov outsl sbb cmp cli adc pop dec fldl popl mov cwtl sarb (bad) mov sbb out inc (bad) mov xor test inc mov (bad) mov jmp roll (bad) imul or out sbbb insb scas pop pop ret and (bad) sbb in repz xor push cs popa mov ror add xor adc xorb fildl add add cmp aaa mov inc shrb dec xchg mov pop pop pop faddl iret dec sub aas xchg jge pop out jmp xor test mov sbb add adc fsubs and ds push add loop setbe and pushf inc (bad) fwait inc (bad) imul fcompl dec test add mov cltd jge xor loopne lods xchg fldl mov push aam push lret aad out lock xchg and es sbb mov lods icebp inc mov mov sarl add into sub mov mov dec xlat sbb out cwtl or std pop mov test in inc loope (bad) addr16 mov mov add dec jl jno int icebp xchg xor sbbl xchg add sbb mov js fdivrp jp xchg adc add testl mov scas jno xor daa fwait sub outsb xchg and loopne in shrl sub dec cld dec sub sahf xlat rcr fldl inc inc mov repnz dec jno mov lds rcrb push rorl fdivrp pushf test in push inc jo popf in sbb mov inc pusha mov cltd loopne cmc (bad) outsl jecxz daa sub add add pop push repnz cmp or push or sbb dec clc jne sub adc fcos popa mov xor jg popf add out in lea bound and call xor xchg ret and push sbb (bad) cld iret aaa sti ljmp cmp das lret call or scas fldl sbb movsl arpl sbb dec jns fdivrp ror sarb add mov mov mov mov push add jge mov inc pop push repnz cli es mov fldl mov sub inc add imul sbb dec rorb fcoms cltd jae scas mov out pop popa je lret lcall xor add dec mulb dec mov faddl leave fwait lahf lcall int3 mov add sbb loopne cwtl push push out repnz (bad) call aaa cmp movsb adc jmp (bad) fiadd insl ja pushf scas dec jne repnz push adc les mov in inc das xchg adc scas sbb xor xor add mov (bad) xchg aas psrlw cli ss xor pop int3 stos mov and scas push call outsl dec scas cmc clc jle cmp jnp fadds es aas xchg lcall xor out dec fldlg2 sub mov fwait xchg fmuls sub dec mov push cmp icebp imul jne dec pusha mov xlat mov add stos cmp and inc rcr xchg push add inc scas push pushf fistpl lea xor insl push mov lods idiv pop push (bad) popf xchg push or mov push stc dec cwtl and push lds mov mov adc inc into inc xchg orl out jg dec (bad) lock mov inc jae push ficom push mov int and jbe les cmp jns dec adc imul jae (bad) dec cwtd sub inc pop ds divb and jg mov in lods sbb add mov scas aaa (bad) pushw leave clc push es or or jmp movsb outsb xchg daa pop push pop lret and dec (bad) sbb sti ljmp mov das enter cwtl sarb xorl fadds hlt addr16 pop push mov jne jnp add adc mov push dec mov jle ljmp enter dec jbe mov (bad) push fwait adc or cmp out setne add mov sbb mov ud2 inc cld ja dec adc test mov push mov (bad) mov pusha fsubs pop mov ret outsb ret fdivs xorl cmpsl subl test pop push dec xchg inc mov lret hlt jmp aad pop adc int and add aaa inc sub negl push mov dec mov mov movsl imul add mov das mov dec rcr xor ds into imul xchg sub inc aam popa mov mov js sub mov add jmp addr16 divb scas je out js scas lahf std mov fsubs push aaa rcrb adc mov xchg fs mov sbb movsb pop mov adc lahf xlat mov mov out ljmp xchg loop pop mov mov dec push pop push out cmp subb ret les pop (bad) push outsl dec jge stc jo sub mov sbb push fbstp and fimul daa arpl mov cmp xchg in addb mov sti adcl add lea divl pushf mov popf xor in pop dec mov repnz paddsb pushf dec pop dec xor add std insb pop dec lahf xchg loop iret push xchg (bad) decb sbb call cmp data16 sbb cmpsl mov je repz mov bound mov sbb test cmp stos in mov adc xor dec repnz xchg loopne arpl movsl test out popf in add pop jb fs adc cmpsb (bad) rcrl jecxz (bad) jge push dec jmp push scas out aam (bad) icebp movsb inc sbb adc mov fidivr outsb lahf fwait loop stmxcsr jno inc fiaddl pusha adc je sbb push cltd xchg loope dec arpl loope and arpl pop sahf inc push cmpsb incb fcmovb push xor imul sub in mov pop mov cmp push jne dec mov shrl cs jmp dec inc adcl add inc xchg pop fwait adc subl fsub cs repnz movsb xor rolb insl (bad) rcrb int cltd sub clc jl dec ljmp pop inc jbe daa dec (bad) adc bound test stos flds sbb xor stc test jnp pop nop int3 or add add lods push fxch cmpsb fwait jne or jge push (bad) mov sub arpl add sub sbb leave mov sti xchg fcom xchg int3 pop sbb enter adc ljmp xchg out pusha mov jle cld arpl loope ret popa cmp xchg xchg jl imul xor clc iret aad add lahf push (bad) std (bad) stc mov mov add add push add inc pop jo movsl stos xor iret andl data16 lock mov add leave push jbe add shrl out ret add (bad) jge out insb lea cmp out pushf fcoms cltd cli leave mov cwtl pop test in pop mov out sbb mov or ds lahf adc pop or add lock imul add lret xor push push xchg scas arpl rorb jb insl dec ja push xchg adc int lods sbb (bad) jle cltd jae jae scas outsl loop mov arpl push push jb iret dec adc lds lods aas sbb inc aam mov fcoms sub sub ds pushf int fmuls fs jns cmc fldz adc dec ret mov cltd add add cmp inc or movsb sbb jmp adcl mov dec xchg repz out sbbl push je and pop mov inc repnz stc or and cmp out jg frstor add push cld and out sbb cld andb mov xchg push arpl push (bad) mov jb jle cmp adc out or pop repnz sbb add add stos pop or loop in sbb pop cmp push adc lret insb cmp out jecxz mov shrl imul adc inc jl jecxz (bad) push lahf out (bad) jp sub cmp add mov out fbstp jo or push add inc dec or out inc dec loopne fadd add sbb mov push test bound fcmovne stos mov lahf shrb lock add dec mov jo lcall and pop cwtl sarb adcl adc sub shll or (bad) lahf adc (bad) xor dec mov xchg insb pop mov inc repnz mov cmpl jae scas roll xchg push and sbb insb push mov mov sahf mov jg jb loop add xchg (bad) sarl ss aas xor hlt int3 add es ret dec in addr16 (bad) inc out mov lock mov enter mov xor aas xchg pop cwtl pop aas lods dec (bad) es jns fnop sbb mov pop cmp jecxz push pop lret aaa pop les push daa dec mov jmp std sbb push xchg cli mov adc popf and cli stos cmp dec data16 push add push arpl (bad) (bad) negb xchg add add sbb mov push mov pusha sbb int3 add lods lret icebp and ds iret pop cmp ljmp (bad) sti mov and adc push incl mov das sbb test movsb mov js test outsb pop lret mov cld sbb push jnp fs (bad) popa push repz sub inc lahf daa rcl lahf push push lock add ret dec insw cwtl in dec jnp lahf fwait xor inc hlt idivl fmull hlt int3 push and pop push in lea pop mov ja mov sahf shrb addr16 jmp dec jbe ss stos test das cltd xlat (bad) gs sarb inc inc movsb mov jns add xchg push dec mov add cmp mov jl cwtl iret insl pop ret adc mov cmp mov test jmp clc sub add dec aaa inc adc dec mov adc mov arpl and incl push cwtl stos cmp mov fistpl pop lds mov insl js (bad) in mov into popa mov lock sahf or jg (bad) mov jmp out hlt fnop jl cmp shll in add push in and int jle lcall jne add jno xor pop out stc pop mov mov daa dec cltd jl cli fsts push push and rcrl mov sbb add fidivl pop xchg mov xchg cmp mov pushf xor ljmp and std je adcb mov aas fs rolb xor mov jecxz pop mov pop lret in ss imul mov dec mov das sbb add add mov in popf imul stos fimull stos push rcrb je jle fisub fs jmp push stc push jne xchg fcmovne arpl xor push sub ret shlb imul es pop dec stos mov and push cwtl xchg leave aas xchg pop jo dec repz stos sbb jmp in in xor hlt push in jp xor pusha out movl mov jle loop and jae int popf sub aam orl mov sub imul sub aas pop fs movb outsl push jecxz push mov lods mov popa (bad) and or or call xchg ss push sarb dec push jne nop mov cmc adc mov and std out es adc inc (bad) es adc jmp pop test jbe iret mov dec xor xor dec inc push dec fnstsw fistl das jae inc nop aam out in popf xlat mov jmp iret lret pop in dec add scas repnz cmp add (bad) jae and push leave clc test iret daa int3 pop hlt add scas jecxz imul mov in jb pusha mov leave dec repz push push mov clc popa movsl fist fisttpll xchg xor leave mov lret pop test shrl jecxz push mov int or fmuls cwtl andl add add add cli stos (bad) pop mov push lea outsl fpatan je jo cs sbb push jnp xchg insl pop sbb push ror loopne xor cvtps2pd push sbb cmp jb pushf dec inc push mov mov push mov jno gs mov push lret pop out add sbb xor fst inc ret divb mov inc jp inc sub dec mov scas or (bad) xor add pop fmulp popa push (bad) cmp add mov test push cli stos push xlat mov add nop cltd mov icebp jge dec hlt dec inc leave jge mov mov leave xchg imul push rclb xchg dec cmpsl inc scas cmp sub xor sub push iret fwait sti inc cmp sub pop mov fcoml fnstenv pop lock call repz lcall cmp gs sub incb cs iret cwtl cmc xchg test adc add and cmp movsl push pop ret dec jae or aam jbe ret mov fcmovb mov jne fldl push in out pop repz fidiv lcall push in in (bad) (bad) cs rol and push lea ret inc dec add add pop idiv jmp sbb call xor std pop pop xchg loopne pushf rorb ret xchg mov mov stc jne fsubrl xchg jge not int3 sbbl out xor sahf adc pop push xchg cmpsl cmp fldl lret roll addr16 lods inc sub mov adc cmp daa lret add mov int dec or dec lahf movsl jne add or ljmp xor push add les gs jecxz test (bad) repz xlat je adc (bad) mull leave test push mov aaa mov out or inc ss sbb js mov (bad) loop dec jns add lret pop movsl aad sbb push fimul cmp fnop lret push lods ljmp lret inc (bad) int3 cmp mov pusha inc lods popa shlb loope add jmp pop sub inc xor scas ds bound clc int3 bound cld mov dec out adcb fild mov sbb (bad) xor mov fcomps rorb ret cmp test (bad) das cmp imul or pop cld loope ret xor dec push dec in popf mov arpl mov sbb lret (bad) icebp jle fisubl add iret mov sub inc xor leave clc loopne adc fwait dec lahf mov xchg and jb outsl andl push push fcompl sub js cmp pushf push jbe les dec stos pusha mov stos xlat icebp pop sub pop (bad) mov pop xchg add out pop lret xor jo lods dec jbe jo inc sbb mov add fisubr adc into adc lock addr16 inc pop jge mov mov ss out xchg cld push mov popf dec in and je xchg addb dec cld sub sbb icebp jmp faddl sub outsb jg repnz mov jge xchg sbb out dec inc mov mov sbb (bad) cmp inc loope dec (bad) (bad) jp mov mov add add movsl enter daa rsm lock leave pop movsl pop push cli jmp insl rcll xlat xchg out out popa int3 ret into cmp ja dec add int pop cmp and es cmp sahf stc ds jne mov imul mov pop xchg jbe test aam push dec add lods cwtl movntps rcrb sbb jno movsb xor add hlt push add adc sahf daa cmp enter push scas mov sbb inc sahf test xchg rcrb popa or dec adc add int3 mov mov sbb mov ror insb xor inc jge add dec inc mov ret xor mov out fmull aas dec into popf daa in in into shrb nop hlt dec xchg ja popa jae xchg aad pop xor lods ss add popf push lea fisttpll sub dec aam sbb pusha cmp jp cwtl adc sti inc call mov dec (bad) jmp push addr16 lret and mov sbb mov subl dec data16 into mov add lret inc mov jno insb gs mov xchg push mov out xchg in mov ret lret insl je lcall mov mov cmpsl xchg dec mov in lret and add and das fwait push fimull stos sbb arpl das jo test shl push fstpt adc push lods mov lods mov mov ret fstps call adc shll nop xchg andl xchg inc inc jg xor or push mov push adc test mov aas mov xchg cltd dec sub loopne in lcall aam cmp mov lds push test and jnp into pop movl pop add out adc dec aam pop ds ss mov jb int repz add sbb cmp notb dec orl int3 mov push mov xor xor add add jle (bad) pop dec add add popf insb leave jne stos mov frstor movl jbe arpl nop cs jb aas lods mov js stos xchg fnstsw pop xchg imul xor repz pop lret lcall add or fnsave mov (bad) mov sahf adc lcall movl popa sub sbb sub inc aaa cld xor or insb int sbb decb pop leave clc cmp add push aas aaa cmp dec arpl and xchg mov pop incb icebp pushf ljmp (bad) nop movsb sub ja adc ret or add push mov inc loope (bad) mov sbb lock bound add pop (bad) sbb daa setle xor leave pop mov push out xor orb adcb dec push js sbbl fidivl xchg inc jg jg inc (bad) xor pushf mov test test xor in aad cmp cmp fisubr mov outsl ret sub scas ret sbb push fcoml xlat inc jp inc adc or xchg pop cmc mov repnz fnsave std pop cmova daa loopne mov addr16 orb imul mov inc lret shl lea mov xchg int3 lret pop push and je test mov inc mov fisubrl lahf adc sbb in push lcall pop es ret xchg jecxz cmp sahf pop dec jns enter nop xchg mov ljmp inc into das dec (bad) pushf bound sub pop cmpsb pop test dec mov lods (bad) add iret pop imul add mov fsub cmp cmp icebp adc js mov lret shl lea mov and add push add ja ja push dec dec sub jmp mov adc mov or add xor and (bad) cmpsl xchg pop mov sti ljmp mov lds cmp push sub fs xor dec out dec cltd mov (bad) popa pop lret mov mov popf mov sbb (bad) sbb adc mov outsl repnz mov push ljmp cli stos fisttpl cmp add pop (bad) loopne repz jl inc dec add aam fcmovb mov gs lcall xchg lods addr16 decl inc dec dec inc outsb xchg stos and test dec cld sub in dec xchg push push pop dec std (bad) mov cmp scas lret add in andl push in sbb mov xor jle push add push pop shl les sub fcoms xchg inc push xlat pop xor jmp mov or shrb stos (bad) mov push arpl mov add add cld ja inc orl notl call sbb scas mov mov dec aas jl mov test mov mov sbb iret in scas adc loope lahf xchg push faddl cld iret das enter cwtl (bad) mov cld rcrl dec xlat out pop adc bnd popf pop test inc sahf pusha cmp jbe repz jmp add push sub pop add bnd imul add adc cmpsb leave push sub iret xor lret sti (bad) mov (bad) stos jbe inc sub fcoms call mov xlat arpl mov push int cmc cmp xor adc mov mov (bad) cmpsb shl dec (bad) ljmp inc mov rcr and (bad) or out push mov cmp fidiv mov mov mov jmp enter mov dec ljmp mov cmpsl inc sbb aaa test sbb push xlat xchg ret mov repz addr16 push les int mov leave lret movsb shlb in xor adc xchg cltd test mov in ss dec lahf push je sbb pop inc repnz xchg fadds inc bound les push inc xchg push sub dec push push jns ds xchg pop xchg aam mov inc fwait mov mov inc adc xchg loope lahf jge mov popf xor ret sbb rcrl movsb dec data16 pop mov clc repz mov dec inc adc mov pop mov push popf test jecxz xlat cmpsl in (bad) lock jecxz inc lock fisttpl insb xor shrb daa xchg fwait xlat rorl push inc add dec rol xor add or mov sbb insl in push cmp stos mov dec jmp inc (bad) rsqrtps pop pop adc std adc shll bnd push xor les mov sbbl ret loopne cmp and mov movb ss (bad) addr16 xchg shlb std shrl add rcr outsb stos jp insb add ss shrb (bad) rolb lahf jb jp sbb bound fisubl hlt xchg push inc jmp sbb addr16 xchg (bad) repz fldenv mov cmpsl vunpcklps xchg insl imul xor lret dec mov push test es mov imul mov jb ficompl inc jg jg das dec test pop pop add add xchg jae push daa mov lcall push (bad) xchg daa addr16 dec aaa hlt out push call push test add mov orl cmp in xchg fmuls or jp sti mov and dec inc loope inc jb inc idiv mov cmp xchg pop cmp jle jne leave dec dec sub mov sbb setge leave int mov imul addl add add jno jecxz (bad) movb adc (bad) or cltd push inc lods gs xorb add lahf sbb sbb pop xor pop inc lods and and (bad) fcoml push lods sub aas sbb xchg xchg fisubrl flds adc in jmp std pop or adc xchg movsb popf gs adc or iret jno fcom cmp call lock mov xchg xlat adcl push add xchg mov scas and and xchg insl cmpsl movsl inc dec call addr16 lahf (bad) mov lcall aaa push in mov jle jle lcall jno sub dec lahf push mov stc lahf aam andl jno cwtl cmp lret lock pop pusha pop cld adc gs movsl addr16 push (bad) repz inc pop in es add xchg insb out inc pop scas rolb add cs movsl xor jp movd fcoms cmc dec sub in loope mov adc call xchg xchg or pop dec jb test add dec cmp mov ds loopne mov cld push xchg and dec outsb sbb cmpsb mov pop nop (bad) bound pop std popa rcl fiadd int3 lea sub outsb (bad) mov rorl aad add cmp outsb popa push sbb inc fstpt insl cmp mov rcr or add (bad) or mov and out movsb shll cltd das cmovp jp je js or and ret cmpsb subb and cli repnz (bad) repz pop mov xchg push or iret jae mov push insl xor adc bound addr16 addr16 xchg setnp (bad) mov out inc fimull sub fsubl xor in aam gs pop and and aaa cmp jb or xchg loopne out loop popa mov (bad) jb nop int3 or in popf daa (bad) mov inc cli stos (bad) pop mov push (bad) enter push sub ss movb aas xchg (bad) jbe and out cmp mov (bad) dec push jmp scas out add add mov mov and outsl push lods push or sahf mov repz in jbe icebp mov sahf (bad) mov pop fs add pop test test leave dec xor mov adc dec jnp mov push lods sti dec jbe mov leave pop mov clc sbbl or ffree inc dec xchg cld sti cmp inc inc jl outsb mov (bad) or add add out mov in lock into push add out adc cmp dec cld lds (bad) cmpsb mov push fdivl inc jnp inc push inc fs pusha js mov add jle cmpsl lret cmp fstpt icebp mov jnp adc lock bound push cmp int xchg adc addb popf idivl mov sbb fsts iret dec mov and add add cmpsl mov dec test leave dec inc xlat pop push and push push cmp data16 aaa jle add add fistpl jl in shrb mov push faddl (bad) or xchg pusha int3 pushf jge jno idivb and push scas das xor imul mov mov jmp sbb scas mov mov jns or add pop mov xchg inc fisttpll adc lods mov fs dec add cmpsl xor mov jmp sbb push pop (bad) ljmp adc test mov cmp sbb inc cmp dec xor loop sub out inc fistl fisub je pusha js stos cmpsb push sub adc out adc dec mov fcmovb and mov fistl fwait das stos inc jp inc scas add lcall loopne pop mulb aas arpl xor add push pop push mov sahf mov out sub lret cmp mov inc push inc mov sub sub push imul leave sbb jb loop add popf iret inc in sbb cwtl pushf ss (bad) sub cmpsl jo pop xor add add pop fistl xchg xor add mov lods outsl mov xchg scas push inc jb dec jp xchg mov jmp dec mov nop jp scas dec jbe xor es add popf (bad) xor push cltd cmp leave pop xor xchg mov (bad) rorl sahf and ja iret xorl mov dec dec mov pushf cmp flds fwait scas sub xchg inc xchg (bad) stc jae mov pop push xchg mov xor shrl jae inc jp insl sbb mov mov fnop adc ret divb lods mov enter minps ds mov into (bad) imul test fildl adc fsubrl inc or sbbl test adc repz js mov xor ljmp push mov jne scas mov fnstsw iret pop mov add add dec bound les jg mov divb cmp faddl (bad) or xchg xchg xchg out inc push movsl insl xlat adc lea cmp jno lds mov mov hlt mov test sub inc xchg push js es mov inc cli stos rcrl int3 mov pop pop (bad) cmp sub adc adc daa sbb mov lea xchg pop inc ljmp in xchg rol inc fmull push sub gs mov out push ja and lods loope lahf (bad) push push add push inc jnp ds fwait xchg mov out inc push movsl adc lea mov inc loope popf mov add mov sbb aas (bad) (bad) mov roll mov mov aad jecxz mov adc add jmp mov int imul (bad) dec jne push add jge cltd stc add (bad) into mov cmp iret lret cmp in (bad) lock bswap sbb test inc xor mov sbb push call out dec dec addr16 mov jmp inc pop scas (bad) jo leave (bad) xchg ja imul mov hlt cmp add push aad push or or push mov dec in rol orl loope jp inc mov dec nop mov push inc lods popa add int3 add add popf test mov in outsl (bad) out pop fdivrl dec ja mov mov fild movsb cs repz push push cli mov call jbe pushf fstpt cmp add xorb adc sub mov inc jle dec xchg add xchg adc (bad) ss cmp add ret into ret (bad) in js xor mov xor loope (bad) pop add or lea xchg jnp sub inc xchg sbb fildll xor push fistl dec sub sub push pop inc push mov pop lret add js out in add push loopne shlb jo insb rclb enter out jbe ds repz dec xchg (bad) scas imul bound (bad) jb (bad) ss cmp cltd push and xlat test jno cld sti jle int cli arpl int jecxz cmp aad dec add bound pmuludq shr jne out aam insb insl fcomps push daa pusha int pop push jmp xor rolb add add add daa stos test dec aaa shrb sbb cmc mov out cltd rcrb xor lret repnz adc cmp inc rolb mov loope pushf jle loope adc neg push inc xchg inc aad push or or pop cmpsb sub xor xchg jo and xor mov loope les andl inc xchg jno or andb lret mov add jbe jbe mov xchg shrb addr16 mov mov push mov pop cmp add (bad) pushf sahf pop lcall push int jg push cs mov or (bad) xor mov pop mov ds xchg js cmp inc std or add push outsb push test xchg clc stc add pop inc add add lock sbb jns jmp int add add fiaddl push ret push mov outsb cmp lods mov sbb in mov outsb ret sub fnstcw stos fistp inc sub hlt aad pop ret xchg pop movsl out nop sbb cmp incl fisttpl addr16 aaa cwtl negl xor scas or out xor mov and loopne sahf adc or push pop inc dec bound fldt test dec jae lock movb mov ffree pop or lea fistpll sub leave les jp pop data16 in cmpsb daa and cmpsl sub mov mov pop add jmp mov in xchg test add test cltd mov pop test dec xor test or (bad) fisubr or lret adc addl aam nop pop pop pop push das xchg daa lret inc push and mov imulb jg lods inc repnz cld dec pusha sahf pop add fwait add popa shl out (bad) scas push mov xchg cmpsl int xchg push js neg pop in in in repz lods out mov and popa sbb lds mov sub insl sub xchg hlt dec mov jns test popf cmp dec add mov movsl js push ds call (bad) mov sbb sahf test dec dec cmp fs shlb mov or das test adc jecxz (bad) pop or jecxz cmp xchg roll adc dec cmpsb pop jecxz das callw xchg movsl dec outsb sbb add adc add xchg jno fcmove aam jns and pop roll add add outsb push (bad) cli mov mov (bad) adc mov arpl iret jno push bound mov icebp jo push pop push or cmp and push xchg sbb js xchg test jl xlat sbb push sbb push push xchg sbb fcoms inc mov add andl mov js call insb daa lret add loop popa ror ficomp int3 push iret fwait and sub cmp leave push je fiaddl shlb mov mov nop fwait pop dec inc arpl or jnp push dec cmc mov sbb inc adc and inc dec inc in dec into cli pop mov call jg lods inc das xor dec mov pop rolb or push mov lock pop mov add push in lods and mov dec ja lods inc lods (bad) mov faddl (bad) leave sub sahf shr push out cmp call cwtl outsl push xor (bad) sbb mov (bad) push dec mov in lahf (bad) lahf pop cmp mov mov lret cltd je les arpl es pop rol test push fsts mov inc ret insl cmp add pop test pop cmp lea xchg cmc push testb dec popl sbb fs xchg mov js lcall inc lret stos (bad) in aam in and dec xor inc ret testb mov adc nop push (bad) jo leave int3 xchg ja imul xor pop data16 inc mov std sub add add adc push test int3 xor rorl add push sahf inc lds pop mov inc push into pop dec insl leave js call rcrl data16 mov scas cmp cli sbb pop inc inc and jb jge and sarl push test push sub cltd dec mov sbb inc insb adc (bad) mov cmp int fisubr sbb jecxz add add adc and je pop xlat popf cmpsl rcrl adc hlt push mov and sub les cmp and ret push push xchg xchg or call sbb movsb mov and jb mov inc sub pop pusha xchg loope cltd push inc mov jg mov fmuls jnp popf hlt out adc test jnp je jl leave cmp add les dec decl add (bad) ficomp sbb mov mov mov arpl aad adc and sbb aam push and repz fsubrs fs mov jle push in mov jle xchg movsb dec popl mov ds bound test leave lods inc dec fldenv xchg mov dec (bad) push jbe xor add pop jo sbb test add into xor test inc bound mov jmp call push mov shl mov ja xchg nop adc cld je es lahf test test repz dec xchg scas jp mov mov dec iret out shrl jns cmp lret (bad) push mov aas (bad) mov (bad) cld out add add adc lcall mov fnstsw sub mull push sbb (bad) jle nop fldcw aaa (bad) mov dec or mov jae mov sahf jp jne sahf test lahf push jbe incl imul push ss out push mov in dec push push mov sub xchg fnstsw xor add jg (bad) jne push push int pop jecxz iret out popa xor add subl xchg mov adc (bad) mov out mov jns call inc lahf mov push aas dec repz int insl cmp fcmovne adc xor jp out push xchg cmp test loope (bad) sbb mov js xchg inc mov inc mov xchg mov and rorl mov or iret dec adc mov mov jnp stc xchg cmp je,pn repz roll add sbb jne es xchg shlb stc add daa mov stos (bad) mov cli in repz rol and (bad) mov (bad) cld mov add adc ss mov enter into fcomp mov sub mull push sbb fcmovnb and nop fldcw aaa (bad) mov lahf push push jae mov sahf stos lahf jne sahf test lahf push pop idiv shrl and add das xchg add jae subl and xchg and mov jmp leave dec (bad) fimul cwtl loopne rcrl fs xor sub repz (bad) lret mov cs jle clc mov mov sbb cli mov call jle mov addr16 bound mov xor sbb sub jbe jno push pop jp sbb pop push add fisttp aas sbb jg ret gs ja adc mov rolb pop sbb adc test and pop fs adc adc sarb adc fcoms sbb rorl xlat jns aam jmp lock int push and dec hlt pop sbb pusha cmp (bad) or add dec test or xor mov (bad) imul stos shll clc fisttpl add lahf push outsb dec push test dec pop pop ret int3 mov push pop add mov cmp test outsl dec jecxz xor sbb inc or pop mov popa jno imul (bad) cltd dec xchg sbb ret dec pop mov cs pop dec lods mov and sub adc add mov test pop adc mov mov add lods fidiv dec xor repz movsl sbb stc mov mov mov imul in pop adc (bad) push lods mov sbb mov cli je repz and orb fcompl test cmp stos clc push scas clc or popa (bad) jb hlt fildl (bad) lret push test mov pop aam out cmp rolb add rcrb ficoml (bad) out fnstenv sbb adc aaa jle pop cmp sbb nop add ds inc mov iret adc repnz lods ret add xchg cmp pop icebp ds (bad) fcmovnbe outsb jns jns inc sbb out sbbb test data16 in xchg inc andl add mov bound popf aas mov (bad) xlat ss (bad) lock ret xchg inc add fisttpl insl imul xor fcoms das addr16 push frstor inc mov cmp lods es popf mov cmc cwtl dec insl xor sbb test mov iret cmp gs xor mov mov mov lock (bad) push pop adc or iret dec jno stos push cmp in leave inc out push push test mov add xor ljmp sbb pushf add lock xor mov cmp (bad) mov and sarb stos mov fcoml sbb push imul sub and sub mov popa jb std outsl inc shrl sbb push add mov fwait mov xor loop cpuid push jno inc xchg add lahf push mov pop push xchg pop dec mov (bad) fldl cs xor adc das in testb rcll or pop test insl add ret lock inc pop dec push in addr16 movsl pop movsl sbb (bad) imul test push mov leave mov cwtl mov push sub repz sbb loopne cwtl push jne pusha sub out push mov ret cmp out mov ret adc add adc adc sub icebp sub mov mov xchg jno mov add mov xor cmp decb dec inc test dec shrl shrb (bad) xchg dec adc call mov clc pushf loope jp dec pop mov mov cld mov or aam push in cmp cwtl cmp sbbl sahf inc xlat stc add mov (bad) test or xchg xchg fnstsw es or cmpsl xor and fwait lret push sbb inc push inc jns outsl dec jne test mov inc pop not es xchg cmp mov mov mov roll ds shrb mov data16 sub arpl shrb cmp cmpsb pop xchg rcll sbb pop je jae lea aad js mov mov mov sub bound pop aas inc jbe (bad) inc push mov sbb (bad) jae outsb (bad) das loope in mov and lock es push leave inc stc hlt je cmp mov or push sbb xchg sbb push and xchg sti into pushf adc es jbe adc (bad) scas xchg mov mov jmp mov icebp in xlat dec das data16 jmp arpl mov add jmp cmp xlat pop lcall mov inc aam outsl out lret cld in insl push lods adc sarl inc jae mov lahf mov andl cmpsb add or dec mov fidivl cmp lret (bad) aad cwtl cld dec nop fistpl rcr rcrl and daa push xlat lea add out aad inc jns sub divb inc push jecxz iret adc add mov bound loopne and mov push cmp inc iret (bad) jne mov push ljmp cmc imulb loopne test mov int mov dec sbb iret aas cmp out lock dec fstpt rclb clc jb call and out push mov xor frstor ljmp (bad) dec xchg push inc mov loopne inc stos push add xchg jne test stc inc push insl repz xlat mov xchg addr16 mov push lret or ret xor add jb adc xchg add xchg ss in std clc in or fstpt icebp fisttpl mov or push jg insb lcall jp int lcall jne jecxz jecxz adc xor das push inc and xlat not addr16 ret add dec aas pop mov adc sbb out movsl out mov fldcw adc push loop jns xor shrb pop std or nop adc push sbb insb gs jbe jge xchg fcoms cli out cmpb cwtl xor mov and nop mov inc aaa cmp hlt test adc in xor sbb add adc sub fcoms (bad) ds dec mov sub mov dec and cmc sbb mov mov or sub xor adc rcrl cmp sbb mov mov cli insb pop repz xor mov arpl lret push xchg shr popf mov insl dec cmp dec cli mov inc jmp mov (bad) in sbb movsb addb pop push cmp sbb bound push sub add or or mov pop imul test adc movsb jb fstpt push mov mov mov and cs test icebp out push jno or push mov lret pop or js mov outsl mov and push and out icebp out fcoml not faddl dec sbb aas out xor js call rcr xchg in push sbbb enter dec fdivrl outsb or ficoml sub enter cs push xchg xchg ss loope ds (bad) call jl cmp lods test ret cmp sbb jmp pop out mov or repz subb stc loopne lea pop adc mov sbb js xchg hlt mov cmp xor add add dec fcomps inc or mov clc sbb mov stos inc adc xchg (bad) jo mov pop jno mov lods xchg popf aad push xchg lods in fldl je popa jbe and jg popf or adcl aaa movsb sub cmp mov inc cmp push mov inc dec xchg (bad) je xchg les and and push loopne lret add sub push (bad) or dec push lahf sub push add dec adc pop or insl les push cmpsl push and or enter sahf je and dec and iret push imul and movb inc cs adc outsb jp and xchg mov mov sahf jns and push jno jl cmp xchg (bad) daa push sbb aaa ret sbb lods xor iret add pop int3 pop dec dec stos inc ds xchg mov sbb lds xlat jle ljmp jno out jno aas adc scas outsl xor and mov in insb loope mov cmpsl gs push mov in movsb add test mov and and inc mov aad push fcoms (bad) hlt jmp (bad) jne in mov sub jbe dec jns mov je bound sbb in fidivl jl shrl mov fisubrl mov and sub and push push movsl dec rcll jne popa fldcw xchg add inc (bad) insb jge inc lock js mov push push pop inc and mov ret dec mov push (bad) lods inc mov loop push jge cmp add add fisttpll cmpsb mov rolb std pop push and inc loopne (bad) movsl cmp pop push mov mov adc jle sbb movsb dec scas jns or or mov outsb in mov adcl sbb pop jbe xchg mov (bad) int stos int mov repnz pop cltd in xchg aad add jecxz aaa sbb pop lods adc mov add in int3 xor cwtl and jge in mov pop imul push push test cli cmp arpl data16 (bad) mov daa jecxz fmuls xor shrb loop inc mov (bad) (bad) cmp movsb incb scas push (bad) mov fdivr push add adc insb imul sbb jle stos dec stc xor mov fiadd sub lret add add pop jmp lods out sub js push mov lcall roll fisub dec jno adc adc sub fnstenv push std into mov cmp cltd repnz mov add xor cli jp outsb pop pop sbb std das test mov push stos push sahf add fcmovnb je sbb jle or xor push mov mov add sub mov mov fistpl dec into das mov cmpb or mov fisttpll icebp pop push mov sbb fwait jle movsb sbb sbb insl pusha in xchg and imulb mov dec sbb and pop adc pop ret movsb ja and (bad) (bad) jge ja push movb mov lea inc lods nop or repnz push add add in dec mov jnp call mov xchg mov cmp and sbb mov fiadd or into inc int ret xchg das (bad) in pop push movsl gs or repz outsl push test movsb sub mov add clc lods mov xor mov flds je pop mov dec loope in icebp inc lds xchg dec sub add test loope int pop incl and xchg addr16 lret ret dec or xor shrl insl mov jmp push ja cmc fstl fsub (bad) jns mov scas pop adc push incb xor mov mov jbe loop xchg adc push push push jns mov bound push inc (bad) xchg (bad) outsb icebp add inc sub inc movsb adc ret dec cmp (bad) sub jno jae movb mov fdivr loopne dec xchg jnp pop leave stos ds mov repz pop mov movsb xor cmp addr16 ret sbb inc fldl adc xchg pop sbb mov jnp cmpsb (bad) adc out adc push dec jge fidivr mov sub out dec lock fistpll mov add sbb adc push sub ds iret push jecxz scas and inc int jg or cld jg inc (bad) cmp lods sbb test add sahf lret xchg pusha adc add cmp bound outsb popa xchg and in sti sahf mov or dec inc movsb and mov xchg inc pop push cmp test clc lahf inc lods sbb fisubl dec loope xchg hlt cmp jb scas pop add push pop add pop push push add and sbbl dec xorl nop data16 int pop mov pop pop or or (bad) xor repz lcall lcall ja fldt lea fwait into jle icebp aam (bad) pop jmp add pop pop lods or pop scas pop add (bad) dec pop pop jns mov ret cli clc outsb push stos fs xchg push (bad) push and sbb push jge insb adc enter dec sbb mov xchg scas leave movsl insb mov (bad) in sbb dec mov jl xor inc lds fs testb pop xchg sub xor or xchg jb push popa xor add pop sti fprem sub stc jns adc pop fstp subl cmp (bad) nop inc pusha mov mov push scas loop std push stc push arpl mov cmp pusha out ret jecxz divl cmp inc mov outsl xlat repnz push insb jne popa dec js decb sbb sbb and jbe or pop mov and in in cmpsb ss and add icebp inc ret dec and or xchg jae sahf (bad) cld sub push and rcr lahf add clc pop fsubp dec push lret fidivr xor aam ja pop imul (bad) in adc cmc scas mov cmpsb inc xchg sbb and push nop js and or xchg push aam cmpsb je add add aaa mov xchg jle add in ror sbb rcll shr lret sbb push int sti mov call xchg (bad) pusha mov lret rcl and add mov andl push cmpsb addr16 rorb cmp addr16 stos mov push fsub bnd fwait ret loope jb sub xchg outsl pop sbb cltd fwait mov and (bad) xor mov add add addr16 pop push imul mov clc nop shll hlt adc mov push cmc sub ljmp cmp insl (bad) stc insb xchg loope je xchg stos xchg mov inc mov push int3 popa imul das push jp xlat push push pop in shrl xchg and jge xor lea das xchg stos scas pop cs ror xchg loopne inc out div dec lahf fidivl jns movsb in es add icebp dec (bad) and (bad) nop aas sbb fcoms xchg das sahf lds mov mov ljmp mov out or xchg insl test pusha mov xchg inc stos loopne push jl rcrb inc jmp into xchg sbb mov cmpsl test pop icebp adc pop dec mov js push repnz mov int push leave out cmpsl scas xor add pop sbb stos adc pushf pop cli jne es jecxz cmpsb push jp sarb jb adc andl imull test iret (bad) and add push mov ja ret popa jl sar mov (bad) adc cmpsl (bad) or addr16 mov aaa inc fs push mov test push or lret jo adc jg into das inc dec lahf lcall aad sub cmpsb shr in mov std test mov enter aaa sub inc enter outsl mov ja fsubrl mov (bad) out hlt push mov popf les mov sbb mov jns (bad) sub repz mov and mov (bad) fwait movl dec xor add jne es fistl adc test (bad) nop ficoml lea rol adc icebp inc (bad) xor fwait sbb rorl out add ja inc inc push cld mov ljmp pusha jae push mov xchg pop (bad) jge (bad) push inc mov rcrb sti rcll dec mov push and mov (bad) out mov sahf jmp fcmovb push mov leave clc pop push mov add sub mov push fistl sub test push faddl outsb (bad) pop cwtl push jbe cmp lods sub in dec mov mov jo adc cmp pop xchg (bad) (bad) mov or cmc decl mov dec pop loop,pt popf mov add push pushl fstl outsl dec inc mov add jo cmp cli cltd inc push jecxz push xor ds bound sbb fwait nop and fwait dec outsb clc es push fistl sub js mov stc mov stos pop cwtl pop ds cmp push test push hlt push mov xor xchg jo jl adc cmp inc jle mov inc adc (bad) sub mov iret ss loopne ja pop fwait ljmp scas xchg lods mov dec mov scas sbb push ja lret inc ja jne lods lahf dec add popf push dec cmp or mov adc mov push dec cmp ds pop inc ds and scas cmc clc push xor imul loop pop jecxz lods daa lret xlat (bad) in lea dec daa adc xchg xor and or and js insl icebp ficoml movsb add push iret jg mov dec jnp or out jl inc cmpsl inc jle inc jo dec arpl (bad) jne push imul add pop xchg adc imul inc push insb sub xchg aam and push jbe pop cmp sahf sahf mov inc or std dec sahf sbb scas (bad) movl dec xor cmp xrelease adc adc aaa inc fwait xlat lods lcall pop fldcw cli push bound imul jg scas xchg jg dec jecxz push stc dec cli mov mov nop test mov mov mov jne (bad) (bad) cmp or mov pop addr16 jge cmp sti pop add jge int repz add add add addr16 sbb jne in pop mov ret repz or jo popa in pop jns cmc pop xor ficom mov rolb or shll or xlat mov les and movsl jecxz fmull pop push jg pop xchg aam bound add and sub and pop fs test jnp lcall mov aas test test xor addr16 adc stos mov jb add add push ja das jae (bad) jmp lret mov fisubrl popa mov (bad) fidivr xchg inc loop out inc jge (bad) stc mov es rclb cwtl shlb inc or mov test ja jne push (bad) cld fildll test clc insb mov sete cltd mov lret (bad) ljmp (bad) bound and xlat outsb xor fdivrl add mov loope ficomp les cld into mov mov mov cmp inc mov sbb xor sbb dec out fwait imul scas adc push inc movsb mov pop loop lret cmp (bad) xchg xlat sub mov mov out adc ljmp outsw icebp sub cmpsl daa aas push testb add nop xor xor adc rcll mov push or xor cli pop insb (bad) pop lahf mov ljmp (bad) pop push xor mov in dec stc arpl and adc mov jecxz pop xor stos dec stos and jne int sub jbe stos add lods es xchg lret push fwait sub mov mov mov pop insl and add movsb push jmp xlat push dec fsubs lods or test or bnd mov sub js xchg cwtl jno out insl cmp inc or (bad) pop es ss in pop lock jmp push fildl repnz movsb inc pushf pop test xor jg imul js sbb into dec sti pop xchg (bad) mov rcr shll loope hlt fisttpl mov or mov add popf cmp inc sub in bound fidivr enter and sti push cmp jg rol (bad) sbb jle push outsb popa push sub pop mov dec jmp jl les cltd (bad) cwtl xor out out xchg mov movsb cli shrl jp adc scas cmp in ds dec f2xm1 pop cmpsb sbb aam jg inc dec roll fs pop jno add loop add add jmp out jne,pn dec ljmp and jno or aas xor lock xchg add cwtl mov or pop inc roll (bad) fsubrs adc or mov int3 dec testl in icebp add or ret loopne xor jo repz faddl js daa dec dec lret repnz fs cwtl or add mov cmp dec int push das ss int add xlat shrl repz push (bad) popf mov push cmp dec fbld jp adcl cld dec and gs rolb ret and cltd jno add or lods outsl xor jb in xchg mulb jmp pop dec jbe neg push inc fwait popf addr16 pop sub fwait pop lods inc pop hlt out lret dec adc adc in icebp push pop jbe and add xchg clc mov mov std outsl cmp jb dec fs mov mov jl add dec xlat jb jl add inc cmp lahf cmc push bound mov stos xor fcomps push fwait mov dec pop mov xor pop lret (bad) jbe adc ss out imul roll xchg in (bad) test add push jno pop push pop fadds in mov loopne jmp cmp (bad) jnp jb mov mov mov sub mov push dec jl jns lret scas ficomp cmp inc sbb push inc push mov in inc (bad) fildll sub add repnz fstpl daa out adc cmp mov mov mov add mov cmp mov push sbb pop sbb cmp or repnz test aam adc adc stos mov loope daa scas adc xchg (bad) test cli or loop dec rcrl fwait jle rorl popf lock mov in cwtl xchg jnp sub jmp out mov (bad) mov pusha push inc jg jecxz (bad) out fisttpl jl dec fdivrp inc sbb add add scas (bad) jl cmp adc insb sub in mov lds mov cmp jmp (bad) mov jge sub and das and fisub imul fldcw out add arpl or icebp adc fdiv mov hlt mov fcmovnb loopne icebp pop and pop pop and lret cld and push xor mov cmpsb jnp inc and jb adc repnz xlat adc jle jnp push or mov and xchg xor addr16 jl dec add jo test inc xor sbb cltd pop (bad) loop,pt mov jp adc (bad) dec cmp dec js rclb cmp out imul sbb xchg fmuls sub add or pop xor lds adc xchg scas push dec test movsb out add cmp outsb aas cmpsl das cld iret mov sub add add cmp cmp inc inc sub imul std lcall int pop sub pop scas (bad) cmp and (bad) lock mov jb dec outsb test (bad) scas and repnz xchg pop pop cli ljmp add add add (bad) neg push inc lahf jg xlat xchg addr16 xor mov sbb scas xchg push movsl out inc xchg (bad) mov xor test xlat das mov xor mov jns cwtl ret mov and dec out push mov (bad) je es mov sbb sbb and jg call mov int3 pusha popf push lahf adc pusha in push mov xchg inc sbb add add ljmp cmp adc dec ja sti add xchg adc in shrb sub loop cmp call cwtl push inc xor mov add inc out jnp mov xorl lock mov scas dec jbe or adc ds in popf mov pushf fild aam sub and ds imul mov and push pusha sti xchg int add add sub ficoml or jb push cmp sbb ljmp inc imulb repnz repnz and sbb hlt es bound (bad) out fcompl dec xlat cmp out aam lods in roll mov sbb push daa mov cld movsb in mov sbb in clc mov inc repnz jae inc and negb xchg dec jbe pop pop dec push stc mov cli add push add mov and frstor (bad) jmp jmp dec push mov insb shrl sbb add fwait inc push out adc mov pop (bad) cmp (bad) jns pop jmp out scas movsb fcoms push add adc cmp cmpl sub in mov hlt (bad) std pop xlat frstor out inc xor jmp xchg insb adc pop mov sub cltd mov fwait inc push or or add jl stos mov lret push insb sub leave je popa xor cmp lds push inc jge movsb sbb fstpl ret add fwait dec inc movl mov pushf and enter cltd cmc mov mov sbb aad jecxz sub cs aam mov ret mov mov lock popf out cmpl enter (bad) xor addr16 fs ret sbb out mov ret (bad) fwait inc push or or add dec data16 push or sub mov jg call push dec fsubs or in fidivr ret lods push inc adc jb arpl ds imul scas movsb fcoms push inc dec sahf mov sbbl add add xchg ret pop gs cld iret pop test stos xor lahf orl stos mov sbb std ret lods (bad) loop mov cld fisttp int3 push into in mov mov das cli stos add mov jo cli fsts push dec and add les cltd push mov mov ss sahf aad lea aas lods push mov xchg push fdivs pop jl test push push jmp jae add mov fmull mov loopne das jecxz push add mov dec inc ret divb aad mov xlat fistl mov or xchg xchg (bad) imul push data16 jb sbb sub stos fild cmp add mov gs daa pop mov xchg call jnp pop mov icebp mov add add dec inc test pop mov dec and test mov rclb mov jg pushf dec movsb mov jmp lret arpl je movsl xor (bad) pop add xchg movsb xor je in pop (bad) mov push or imul jne cmpsb sub push outsl mov arpl cmpsl inc (bad) stos push pop cmpl and xorl adc repnz mov jne xchg mov mov pop jns mov in movsb lahf shl out in in scas adc addr16 xchg ficoml scas or jmp dec repz aad je xchg rclb (bad) xor jbe mov imul mov xor outsl push add and mov jne adc jmp pop addr16 add add cltd push mov jl into loope jp es xor (bad) pop sub mov scas mov clc pop push mov add add jno cmp loop mov sti jae or pop dec js (bad) mov adc mov sbb repnz pop push dec adc aam pop int or cld aam pop ds inc add mov movsl inc fisttp sbb les xchg aad mov add add cld sub lahf push jle xchg rorl inc jo cmp in movsb pop adc ficoml and cmp cmpsb xlat ja push shrl mov or insl cmp mov pop outsb or mov stos or and add hlt push add cwtl mov fldenv cs inc enter fdivrp pop (bad) jae es out dec fsub fimul mov outsl inc push mov mov adc lret pop cmpsb mov mov call popf mov repnz xlat orl sub sbb imul fs push or or adc dec and adc adc hlt cwtl sub push ret mov pusha cmpsl mov or out (bad) lret xor xchg xor fisubrl pusha iret into mov mull rolb pushf (bad) shrb sahf sbbl fldenv push sub mov adc and xor dec xchg icebp add mov int3 mov mov mov ja sub std test sub xorl aam ret inc xor bnd hlt (bad) push scas jg icebp jle sbb add pop leave clc test pop jmp pop lods lret lea daa in in (bad) shrb dec push fstpl dec jo fsts mov lret jae mov xchg mov (bad) ret lea inc aam data16 xor aam movsb xor es clc mov outsb enter mov cli mov ret mov (bad) std pop xchg rcrb cli fildll jge stos fldl jns xor ja outsb inc xchg inc cmp movsb mov fcmovb je push mov in lahf jae repz fwait add (bad) lret adc push cwtl adc ja daa aad scas xchg fs or cmp fwait movsb and jnp adc mov mov ret mov (bad) jbe fsts dec (bad) loop inc sbb xchg insl mov and mov lods jecxz sub cli fcomps pop push (bad) ret sti pop ret dec mov mov int xchg scas (bad) mov add add aad pop add roll jmp test fstps pushf dec inc push movsl dec jnp inc sbb mov ficom es push shrb dec loopne and es inc mov movsl out sahf lahf movsl inc pop lret mov aad cltd cmp lahf push iret sub inc or scas dec and sbb bound sbb adc add pop push mov ret mov lods imul lahf or mov fadd push xor daa stos bound mov (bad) cmp jp jns dec lods mov cmp inc dec mov adc (bad) out mov (bad) aaa mov (bad) mov icebp icebp aam xchg xchg mov inc ret divb cs inc loope popf pusha fsubr mov repz mov call and sub cmp pushf mov mov mov xor loope movsl hlt fs xchg mov jbe push mov call jno ja stos mov or pop cwtl xchg lahf sbb int3 addr16 call ja push hlt cmc pushf aam fistpll xchg and inc into das enter adc push dec fist out push aad rcll pop xchg in xchg stos das (bad) mov jmp dec inc adc (bad) fwait imul pushf lcall sbb push lar lcall mov fstps jecxz cmpsb (bad) (bad) xchg lcall pop dec cmp mov (bad) iret mov dec in cmp hlt xor out jecxz mov movsb sbb mov and (bad) mov es loope popa sar fcoml insb inc js mov call add jmp fnop loop lret mov dec xchg (bad) cmp pop (bad) push loope ror (bad) imul test and (bad) cltd pop js pop test cmp or mov rorl or dec jae iret orb jle jecxz add dec inc pop jne or xchg cmp mov mov xor aam (bad) sub mov add je dec add push cwtl aas pop mov cli push test or scas iret loopne xchg setbe and mov gs inc mov repnz xor jecxz (bad) add (bad) insb pop push mov bound lahf push pop pushf xchg popf sub nop mov mov ror in stos xor xor dec add das in nop (bad) stc mov mov add icebp fistpl inc jecxz pushf (bad) test bound mov lret arpl mov xchg sbb mov shll gs inc inc lock mov xlat in cmp stos aad sub scas movsb xor fwait lcall adc push jle scas dec sahf cli mov mov xchg out sbbl xor sbb sub inc xchg in cmp gs inc lret jg add inc inc dec (bad) and sbbb push or dec pmuludq int3 dec dec push fisttpl jp mov jmp and adc push daa stos cmp push int mov aas xchg incl adc movsl out sti or mov push in adc cmpsl xchg sbb addr16 pusha xchg fdivr ret lock mov cmpsl adc xor push nop xchg add add push mov rol cmpl repz mov mov add jne or xchg cmp xor fwait das popa add add jo in (bad) int3 repnz pop es fs ljmp (bad) or jae xchg pop cwtl pop testl sbb repnz push mov das js push cld pop pop xchg call jp dec inc and dec mov or les pop add divl pop rcrl xchg jl push pop ret cmpsl pop imul add jg ja jbe mov xchg push inc fadd add daa mov or rorl cmp scas loope mov rolb lods mov leave flds xor scas push stc mov loopne adc push mov out iret cli lcall sbb test push popa xchg lcall jne dec mov lcall xchg daa mov inc jbe jno (bad) jns (bad) push mov push jb stos push jae dec insw pop sub stc repz mov mov mov xor or cmp lock push push xor int cmp jo push mov dec cs or sti ljmp leave dec jp shrb addb add add (bad) es sub lods xchg adc ds mov pop in adc fwait leave addr16 mov push aam std insb insl test sbb xchg xor jle bound push dec add cmpsl pop mov inc add sbb in sbb push inc das in xor mov add (bad) stc dec cmp cmp add jl lds xchg daa xor push cmpsl stos inc xchg add add sti imul inc into das cwtl xlat inc (bad) addr16 xor mov int jb push movsl insl rcrl sbb sub ds or xchg fmuls cmp fsts dec dec mov sub push push jbe lahf (bad) loop mov ret (bad) add mov sbbl fmul dec data16 lea jp jno arpl lret mov loop scas dec or sti movb lret out mov sub add add inc cs mov imul mov scas dec mov mov mov and out sub addr16 out adc dec mov out test cltd add mov xor push hlt add adc std sbb mov aas popa repnz lret push dec xchg cwtl push sbbl add pop cmp repz je or add add sub cs mov (bad) inc movsb testl in mov xor mov sub and lds cld sub in loop adc push data16 adc rorl jo xchg or mov dec movsl out inc xchg (bad) repz je pop test mov xor xor mov mov cmp mov hlt in inc cmp push inc sbb adc mov fldl push adc scas mov inc dec adc cmc stc mov adc lret mov cmpb (bad) ret inc outsb mov addr16 sub enter cld inc lods sti ljmp sbb (bad) aaa mov pushw mov dec add xor mov pusha cmp sbb pop test cmp xor inc jno dec push decl call add cmp mov adc xchg mov (bad) xchg jnp,pn jmp xchg cs lret cmp mov push arpl and ja mov stos leave jno inc test enter push leave jae js fcoms loopne adc dec outsb out dec outsb xchg mov ds (bad) or pop (bad) fldt xchg sahf mov ljmp inc std and xchg pop cwtl pop into sbb shrl rcrb mov sub mov add push in adc (bad) mov cmp adc lods sahf adc ja scas inc lahf xorl pushf mov add and sub jge adc call xor adc imul (bad) jae stos insl cli add or push daa (bad) lret mov xorl push mov cmp dec pop adc mov adc or lcall add mov mov or loop dec mov aaa jge test ljmp xor loop insl adc and dec incl insl popa and add and sub out ja xchg pop jo je jl (bad) outsb sub mov dec push push xchg (bad) lahf faddl loope and sbb incb mov movsb mov inc cmp and mov ljmp jae inc jnp ss inc mov es test stos inc sbb fldenv cmp push or out gs (bad) mov loopne cli cltd addr16 push cmp add and pop std xor fistl cmc inc leave push adc mov pop lea dec setge adc scas loope in out movb out je mov fcmovb push adc stos loopne loop add inc test sbb movsl hlt into cmp jno cld sub call xchg push add das enter xchg mov jge xchg xchg mov sub sub push xor push inc loope inc jb inc repnz es jmp (bad) and (bad) mov mov lret dec pop pop push push jmp or les (bad) mov fwait int3 ss dec add pop (bad) lds xor inc xchg int push (bad) adc (bad) push mov push xchg or jae fcmovb fcmovnb cmp mov sub jnp ja incl movsl mov bound sub inc div cmpsl xor xchg pushf push mov sbb out sub rolb add gs lret mov adc clc mov fcoms shrl scas sbb sbb (bad) sbb daa sub aad inc in loop adc inc outsl mov xor pop xchg in lods sbb push ret inc push dec fnstcw inc mov fdivr pop mov adc (bad) jecxz mov xchg xor push test mov (bad) mov cmp push leave jle ret aas xchg inc enter mov xchg adc gs or jp addr16 icebp or push mov push lcall ss sub add imul mov das sbb cmpsb (bad) imul push pop dec sbb cwtl dec or xchg mov sbb inc xchg int push (bad) adc notl mov xor scas jae (bad) cmp lret push insl xor dec arpl mov aam or jns cs pop leave pop add mov fstps lock stos out adc xor add fild mov push add mov dec xorl mov dec adc bound je or fsts mov lea xor mov jno (bad) psrad mov mov push leave scas cmp lock (bad) rorb pop in push xor and sbb std inc pop movsw mov test adc popw fwait movsb and add rcrb adc mov jp loope in sbb out dec xor fdivrp xlat roll push data16 mov fld1 mov sub into (bad) imul mov das sbb cmpsb (bad) imul push pop dec sbb cwtl push or adc test inc xor aad dec cwtl int3 fsubl addr16 pusha enter jnp cmp pushf test daa outsb ret stos xlat xchg mov add je fcomip mov jo mov inc pop ret movsb popf das (bad) pushf fstp jecxz mov mov cli inc or jb and idivl sbb fcompl pushf aaa inc testl (bad) in cmp jne mov (bad) dec sahf test inc cltd je shlb mov mov xchg cmp test int3 aaa jno movb mov lods xchg push leave scas cmp lock lock (bad) fimul pop in push xor and sbb jae dec arpl test and stc cmpsb fwait movsb and rcrb adc mov jp loope loop sbb out dec loope fdivrp xlat (bad) je push dec rolb mov pusha pop push ret (bad) lods imul fistl loop mov cmp or add iret cmp mov imul xorl je sbb repnz mov test push inc lods pop fsubs mov (bad) xchg inc xchg lcall call jno sbb mov mov push add lret sbb xchg pushf push mov pshufw test sar pop rolb add pop lret mov vmptrst ret pop in shll popf add inc or jmp (bad) xchg dec cmpsl pop pop ret sbb inc (bad) dec mov fnstsw add jg inc subl stc add mov push fwait jae pop mov mov lcall in xor shrb ja and test mov (bad) mov cmp push leave jle les xchg inc enter mov xchg adc gs add jp addr16 jmp inc loope (bad) gs ljmp ror (bad) imul mov das sbb cmpsb push outsb je push xor mov inc and or es dec add xor adc mov xchg push stos dec pop xchg cmp jnp cmp pushf test daa outsb ret stos xlat jnp (bad) je jg mov jo mov dec pop ret movsb popf sub pushf ffree jecxz hlt and add dec inc mov add pusha mov jbe mov movsb add ljmp inc mov mov cmp jne mov xor (bad) pop sahf test inc cltd aaa pusha rcl xchg push stos and push xchg les mov xor mov jno (bad) loop,pt mov je push leave scas cmp lock (bad) fimull inc in push xor push divb push aas clc gs aaa addl divl inc xchg mov fwait movsb add and rcrb adc mov jp loope loop sbb out dec inc xor std xlat rorl jb xchg xor scas mov pusha pop push ret int sbb gs xchg (bad) enter mov les push ljmp daa insl insl mov (bad) xor xchg addr16 and daa push nop (bad) push rcll enter sub data16 mov adc xor pop dec add add stos leave mov out pop mov push lods cmp enter mov sbb fs out or cs inc dec mov cli push sbb push test mov dec xorl mov dec adc mov or fsts xlat int3 mov pop push add push cmp jp sarl push fbstp mov add out hlt mov scas push ja into fisttpl ret push lds cmp push in loop and mov push inc dec lahf movsb (bad) insl (bad) call push jmp int3 cli push add add and test popa mov out push (bad) or mov mov shlb pop and and adc das push rcl xchg stos and inc xchg les mov push add add jns push cmp push dec lods dec xor dec lods mov into jg popaw jnp cmp pushf test daa outsb ret stos xlat pop mov xchg cmc fwait jo mov ret movsb popf pop (bad) pushf (bad) jecxz hlt xor cs add repz mov lods or test lret mov mov dec xorl mov dec adc xchg sbb add bound call out mov push sub cmp adc adc xor or mov push cwtl pop mov and hlt jecxz xchg inc cs or outsl ja fldz mov mov out ficomp or enter (bad) mov iret insb adc shlb add add and test popa mov out push (bad) or add add mov clc mov enter lds push pop push ljmp daa insl adc test xor xchg addr16 and daa push nop (bad) push rcll enter sub data16 mov adc xor pop dec xchg mov leave cmpb jbe ret push mov pop sub aas sbb test adc fs out or cs add test mov scas or xorl cmpsb mov dec xorl mov dec adc inc adc repz mov int3 mov pop push add adc push das xor aad push or jno mov out hlt mov scas push ja into fisttpl ret fs pop cld cmp push in loop and mov push inc dec add add call mov adc add and test popa mov out push daa add add (bad) hlt mov out popa push and and adc mov fcompl jge aad mov inc xorl je add push repnz mov das xchg push popf push inc lods jge mov imul leave xchg xor pop jmp call add pop dec xchg mov leave fwait jle out pop (bad) aam push mov stos sub aas sbb mov sbb fs out or cs inc dec mov cli push and push and push dec mov ds jecxz dec xorl mov dec adc xor je or fsts iret int3 mov sbb lods and pop ret sahf sbb insl xor xchg movsl xchg mov stc push fbstp mov out lock lock pop leave icebp (bad) fwait dec imul xchg daa xor pop and test sub adc in scas fwait movsb and rcrb adc push mov jb hlt arpl arpl dec pop test inc push rorb jo pop out mov adc jne mov std sub fcmove pop pop xchg or inc cmovs push push push xlat sbb pop add add das scas pop ret xor int push dec adc popf push lahf xchg push cmp mov lcall dec outsb xchg lods xor add imul mov stos adc mov faddl lcall xchg pushf push mov adc into xor mov inc cmp xor pusha push sbb and int mov sbb cmp fcmovne push dec test popf add and cmp lods and je add sub int3 idivl lods sbb imul hlt insl push mov xor xor adc in sub cmpsl cmpsl xchg pop mov std repnz xchg daa ljmp fildl jg fwait movsb and rcrb adc push mov jb hlt arpl arpl jl test inc jp mov cmp cmp pop push in cmp push stos ret or (bad) jne sbb les push idiv cmp (bad) out inc xchg push arpl jge cld addr16 dec inc cld movsl stos (bad) jecxz pop xchg hlt or mov popa jnp cmp pushf test sbb and arpl imul cli add bnd fcmovnbe (bad) xchg int3 push iret fdivrs rolb adc xchg pushf push mov push add add push cld cmp fisubr adc sahf daa cmp jno mov popa pop aaa or je repnz add inc or aad pop rep push or inc or sbb outsl addr16 (bad) adc xchg mov cmp or lds scas rorb cs or outsl imul cmp mov clc ljmp add inc (bad) les pop call fildl add cmp cmc or push popf addr16 jnp repz loopne pusha sbb cs sbb and mov insl js dec jno pop or xchg out sahf xlat rcrl ss ja or int3 add sti hlt mov add sbb mov pop dec ja cmp add add loop mov outsl sarb mov fstl rcrl mov mov mov adc jbe jl mov mov push sbb std adc sbb xchg mov fildll sub insb repz add mov sbb jmp es mov sub and mov and testb in mov xor fstpt jp enter mov stos dec xchg push push fistpl sti imulb xor (bad) sub rcrb xor movb xor mov lds es mov mov mov xchg inc scas add loope inc push mov mov imul add mov cmc movsb negb pop dec nop adc loop mov ss pusha add hlt int3 xchg xchg xchg popf sub xchg insl dec push push fistl cld fisttp adc int adc pop shrb xchg in xlat es inc or repnz jb mov into and adc jp or inc or pop jecxz add insb pop mov sbb xchg dec je loop add sub inc inc mov cmpsl sub jecxz add push mov rcrl in xchg pop or dec insb adc push sbbl stos bound mov gs cmc int3 add fstps fmuls inc fsts inc dec push push adc mov cltd xor aaa push mov iret cmp inc (bad) pop lret jb mov pop pop sbb adc add pusha pop jnp add add es ljmp cmc fnstenv jne xor lahf mov pop push nop (bad) add sub fwait push and lods push push arpl (bad) fstpl add lea je (bad) stc mov xchg hlt pop ror nop and jecxz or xchg mov leave sahf inc negl pop imul lods mov aaa rclb (bad) or jbe push xchg add add sahf pusha mov jle cwtl add sub and pop xor sbb stc loopne xorl sbb mov iret dec xchg dec mov jno sub stos sti mov and mov into cmp sbb scas add xchg sbb stos mov mov cs adc lcall (bad) xor dec cmpsl mov mov enter add add movsb test movl jle out mov pop insl xlat push sarb sbb inc dec dec lods int out mov xchg fnstcw jmp mov (bad) jne jno test pop lea xor and ret stos inc jg (bad) movsl dec sbb into imul div jo and adc adcl into movsb dec fsubrp sbb ljmp pop push mov fsubl cmp mov add js mov jo mov sbb sarb push iret mov jae (bad) xor inc add push aas sub es push push inc fmuls mov and and fsubs out mov call (bad) mov ret (bad) (bad) ss mov push pop dec addb xchg inc hlt or (bad) repz cld ja dec cmovae daa mov fstps pop xor insl push outsl movsl cmpl lret nop fadds arpl fadds cli in shrb daa xchg (bad) pop pop inc lret arpl inc adc dec jp add add inc mov adc xor pop (bad) mov xor xchg cmp mov repnz adc pop sbb mov cli test pop dec xor dec add mov jne mov aas scas and lret add fstl fsts cli inc sbb dec sbb call je aas lock xchg jmp fistpl and xlat in fldl2t push mov xchg mov jl (bad) je pop test mov mov xor inc imul jbe jno xchg (bad) aad pop cwtl negl pop iret sarl or ret ss or add outsl (bad) mov fnstcw lahf and adc sub fwait pop in push mov mov cmp xlat xchg in loopne leave pop in aam ss arpl adc imul dec out mov sub fldl fwait push xchg pop stos xchg mov inc push lds loope (bad) mov add ljmp xchg push xchg push mov aas jne push or pop mov bound rcrl cli cli fistpl shll in dec outsl mov jo adc imul sub pop jb jl es mov or adc hlt or addr16 add shl adc or mov rcrl iret sub cwtl jmp xchg mov insl pop repnz mov pop xor inc scas adc cmp lret fisttp dec ds pusha pop sub loop leave push insl or test cmp xchg pop notb sti mov jp jno mov mov in test push popf rol add fidivl xor adc mov (bad) or mov sub call nop add rclb or (bad) dec cmp aam fstpl pop (bad) mov movsb xor (bad) in adc nop mov (bad) mov aas dec aaa xchg imul lcall lret add popf push sahf jmp mov (bad) divb lock imul sub repz (bad) ja dec add insl pop sbb push or adc outsl xchg out (bad) lret add imul and and std je mov jge inc into das inc jp pushf (bad) mov (bad) mov xchg xchg popl aam mov lods cmp rorb js mov cld jecxz out and push jle mov popf or jp sbbl mov xchg dec push add jge ja int mov pop je add xorl inc rcrb mov repnz xchg arpl add sub sbb xchg xchg push mov push mov pop pop iret or fcmove aam popf mov test aam lcall or inc add or sub xor xchg addr16 (bad) imul adc clc sbb inc sbb daa mov sbb fistl cmp add inc xchg into add cs ja dec cmp into push cltd ja sti inc jle popf jb jne push outsl mov leave add inc pop inc jmp push push mov xchg arpl lahf inc ljmp push jecxz or loope in out push stos xor add adc dec xor add shrl ja inc repz scas in shr mov add inc std or lea mov or lcall or inc add or test xor add xchg adc push daa mov out xchg inc cs or push xor sub enter aam mov sub pop xchg jnp (bad) mov mov popf les in jo out bound test inc add jp cmpsl mov mov and jecxz jnp xor (bad) outsl jmp es mov mov js and adc push mov lea je in cli cmpsl sarb mov hlt orb cmp insb xchg lods sbb add (bad) push test push jmp call inc into push cld mov jb push adc bound clc shr cwtl (bad) mov xor add fsub adc leave or pop outsl push cmp sti enter aaa push inc (bad) xor add and popf or xor push ja cmpsl mov lea push repz jmp xorl mov mov push xchg fstp cli inc mov fdivs hlt mov fcmovnb sub daa outsl cmp enter pusha xchg cmp loop jl push faddl inc inc imul cs repz sbb xor in in in repz xchg cld xchg stos les cltd ljmp call cli icebp adc pushf sub out and adc addl fcmovbe mov inc out pop out test jle int3 mov sbb test in in xor xor add and call fsubrs cld mov sti pusha xchg fcomp adc xchg iret mov inc fcmove aam sbb xchg push dec xlat sbb out orl fidiv shlb shrb push add mov add jb mov add out jmp shrb or or dec cmc stos (bad) mov ljmp add insl pop sbb push fbstp and data16 cmp pop push dec ret imul pop (bad) jg pop popf in pop and mov dec adc jg pop shlb fnsave fist outsl inc aaa loopne cmp pop test sub fwait and iret jno outsb fdivl mov repz cmp fisubrl js stc int3 push (bad) xchg scas xor mov dec add sbb mov or dec arpl push pusha inc lea fiaddl adc jne push mov idiv or je dec (bad) cmc pushf into stos xchg cmpsb cwtl arpl xor mov sbb adc and cmp push test mov sbb sub dec mov mov cmp fs loop mov and or sub xchg popa inc arpl es add mov sub in xor scas fisttp aas sbb js push arpl (bad) (bad) mov xor sbb pop add mov sbb clc fwait (bad) dec push xlat enter in movsl in dec aaa hlt out rolb (bad) mov test mov aam or cmp dec add sbb shrl pushf daa scas adc add test shrl jmp add fidiv sti (bad) dec add aas popa mov lea inc cltd mov insl aam push cli ret ficoml dec jmp movsl mov mov mov int movb push data16 cmpsl (bad) stc cwtl adc sbb push xor mov out fiaddl scas mov mov mov lds pop ss (bad) xor cld pop mov push test add xor int pop sbb and and test sub mov mov mov adc pusha scas or mov xchg dec push cltd andl mov mov and add (bad) lret mov sub (bad) and pop es xchg shlb in xor and and outsb xor aas push fucomi (bad) clc nop outsl xlat dec add xlat and int clc push lcall scas lcall data16 sbb arpl data16 push pusha adc scas adc mov lret aaa xor mov mov in cmp mov jae insl icebp mov int3 push mov push push cli stos cmp add sbb into or jge jbe add inc jg mov fcmovb add sar imull in or push xor push add xchg cwtl pushf loopne cmp rclb cltd sub mov fisttpl mov push xchg mov mov push loopne icebp aam xchg mov shrb out repnz clc out adc dec jg xor push movsb or jmp adcl cmc rcll inc sti mov and aad inc jecxz test mov pop dec inc mov jg xor add (bad) add inc lods gs aaa xor adc push xchg out out sub outsl adc lcall jbe std arpl inc adc into mov inc push movsl mov sbb add and mov das ret push out jbe mov push lods mov (bad) jne jno or es inc mov pop rcll add xchg cmpsl cwtl stos fldl lcall and and add adc and hlt rcr sarb lret fisub jne or je xlat icebp or in xor cmp push lods mov mov rorl ja adc xorl loopne sbb add mov push xchg pusha or inc jl pop pop ds mov jns dec xchg fsub test add add add cmp pop sarl stos daa push dec push pop sub dec xlat or dec loop icebp int dec push bound fist pop fistp fbstp mov call mov inc mov (bad) ds cmpsb pop jae adc push imul insb lahf in stos mov dec inc adc jne fwait movsb and ficompl sbb orl jle movsb fwait pop xchg or mov add add add add stos push or mov mov call into outsb das push in mov pop fs cltd mov les fimul dec data16 in repnz mov lds xor ja (bad) xor jnp fild inc lret xchg jmp push daa pop nop cli outsl nop push (bad) sbb ret pop dec xchg movsl scas and divb popa ror add cmpl jb inc adc fmuls add add aad jp mov jp daa icebp and push sbb popa push xchg js cmp push jbe mov dec mov mov hlt xor adc out cmp adc mov test dec ss movsb xor repnz push xchg mov jo jg fbstp mov cmp mov xchg and jecxz jo,pt loope cmp push ja and add add cmp out adc inc mov mov pop adc mov cmp cmpsb sti jne xchg mov jmp movl imul jb dec jp or ds jecxz add or lahf (bad) loop mov mov xchg xor mov aam pop push imulb andb sbb and jp repnz stos jae pop inc xchg add sbb rol pop sub mov popa jnp and add mov int or out bound sbb sub dec mov adc jae pushf pop out cmp dec ret lea cld and pop cmp mov jle mov push inc imul dec imul or sub fmul pop dec pop push out xor jae scas mov cmpsb cltd push out mov sbb adc mov add pop push adc pop fistpll or lods fisubrl xor into call in ss insb (bad) jo push adc mov cmp or jle (bad) push add aaa rol jo dec repz mov popf cmpsb sub and sbb in rolb mov add std adc sbb lcall aam lret rclb cld or pop jmp shrl lret (bad) mov mov into cltd sbb pusha mov aas lcall push insb mov popa jnp cmp pushf xchg push xor dec addr16 sub rorb add inc (bad) clc adc and insb inc cwtl (bad) push push xchg xchg pop pushf mov fdiv xchg xchg jg mov jbe mov movsb sbb inc dec mov dec in add jmp pop mov add add mov movswl cmpl loope outsl pop aad adc negl xor jnp jmp inc sub or pop jecxz imul push mov in sbb add ficompl sbb xabort and sub sbb in cmp sbb out (bad) sbb pop lds sub xor add add cmp and dec fcmovne pushf fiaddl add or test cmp cld and aam call iret jne cmpsb sbb sahf test xchg rclb mov nop stos add adc cmpsb rclb std xchg mov loopne lret xor inc xchg lds jmp or movsb insl mov or movb pushf adc call pop scas sub sub pop imul in aas mov rcl out push jp push cmp xchg adc js push mov mov mov ret ret mov push xchg ret pop dec mov sbb mov xchg nop sub inc shrb repz lret in stos ret and dec mov cmp adcb pop test push popf push xchg movsl scas or fimul push lock inc cs add out adc cmp pop scas nop je mov in push test dec pop xchg arpl sub xor xchg cmc cmpl loopne in fwait das push inc jp lcall aam std insb arpl xchg jnp fildl inc (bad) clc mov shr cmp hlt or add push jo xchg push add scas cmp (bad) xchg xor inc xchg fisttpll push mov add add ljmp add and mov sub lret gs ja mov jle loop push orb cmp inc xchg and mov jge les stc dec fimull repz mov push xorl jae jno in ret and (bad) arpl jmp imul xchg cmp dec adc inc mov ret adc add xor aad add fild adc (bad) lret leave inc push adc pop push inc out addr16 hlt out push ja and test mov adc and dec inc rcll nop (bad) cli mov leave pop sbb push loope flds popf outsb arpl push inc loope inc jb ret mov mov sub push lds ficoml into cmp xchg fistl cltd mov fisttpl add add jo (bad) int3 fisubl adc xor sbb xor inc popf fs movl scas (bad) xlat jge (bad) lock xor inc push dec outsb xchg je push jae aam and sbb push jmp dec mov mov push enter or adc xlat subps sub mov jl adc cmp and xor xchg inc adc (bad) push sbb add pusha add inc dec mov jns bound loope adc out push lods sbb ss add pop add push xchg scas dec fwait inc push lahf dec or cltd cmp pushw add lds sbb pusha fsubrl es aam cli add icebp mov out ljmp mov imul nop pop popf sub loope test add add mov add push mov jno inc js inc cmp add adc and mov mov data16 adc negl jle addb sub add lods loop mov roll stos loop fsub insl lods fwait (bad) dec test mov dec or (bad) loopne push and push mov (bad) popa pop neg push in sahf mov add scas stos add out push mov pop cs sbb shlb mov ja or fcoml fdiv jne inc mov jbe xchg add cmc mov (bad) loop dec ss repnz sbb push je add or add (bad) mov adc fs dec cmc addr16 daa popa addb lea sahf cmc adc mov cltd inc or and je pop shrb add jl lahf adc dec enter pop adc sbb add (bad) in push jp popf hlt add add adc and dec mov ds pusha cmp mov shll xchg xchg push iret mov mov adc dec nop pop cmpsb out push imul cs mov mov inc jg stos repnz mov fnstcw and clc insl push outsl mov add add test xchg adc imul mov out pop sbb inc icebp dec sti ljmp faddl pop xchg in sti dec dec pop sbb xchg push jae popf scas rcl cwtl dec inc cmp or mov mov gs bound sub jmp cli nop and jae or jge push addr16 arpl lock cmp push push lods mov cli leave xor add inc or das dec pop xchg add add int3 jl lret dec add gs inc mov idivl push aas std hlt lods mov test fwait movsb and adc nop shl js mov and int3 jle insl push push cwtl add imull mov inc enter loop fcompl add stc ret xor inc mov xlat aad add add sbb mov sub dec add add add mov dec pop test push popf push xchg jae push daa fimul adc pop in aad mov adc call sub enter cmp xor (bad) loop xor and cmp dec dec (bad) scas imul loopne fucomi jne mov fdivs pop pop add (bad) aaa cwtl jae mov mov in fwait xchg int3 sbbl and popf fsts xchg cmp and test fistp mov setle mov into ret ds mov movsl jne sti xor js lock movsl lahf push int3 push inc sti cmpsl cmpsb mov inc fs mov jg mov inc mov xchg adc sarl and rolb sbb fs jle pop mov cwtl ljmp fadd push sti push call jbe mov mov jmp rol rcrb adc lods dec jbe cli call mov or push pop ret ret and aas jbe fmull mov (bad) push and push cmpsb insl mov or int3 inc sbb fstps push scas popf sar out push xchg fdivl fmuls add add mov push and arpl mov mov adc xchg (bad) ja dec xor jbe cmp jmp shll inc xchg nop mov and add ficompl sbb and or mov xor sbb (bad) mov cwtl xor or xor sub inc adc dec add mov clc movsb mov ljmp xor sbb popa sbb lds fimull mov in pop adc sbb leave shlb pop insb into sbb xchg push jl xor mov ret sub outsb lahf or jb push mov xchg in ret and (bad) fwait push and insl imul jg es dec sub popf and inc mov sarl mov dec add ret (bad) stc leave jae inc add add add rolb xor pop inc lds (bad) pop mov dec stos test jmp rcrb dec (bad) test fcmovbe out roll mov or js xchg movsb (bad) cmp mov sub insl pop push (bad) jge xchg and daa fsubrs lahf daa in (bad) mov in add fist pop push jmp dec mov stos sbb (bad) add add sbbl (bad) sbb jo jb cmp mov outsl sbb adc aad mov fistpl loopne inc out add stos test out mov push stos adc xlat int push push sbb popf bound mov in das cmp sbb insb cmp out imul imul adc cmpsb dec jbe cli decl push call add movsl pop rcrl test dec data16 push add inc outsb jo xchg stos xor iret xorl jno push (bad) std fnop stc inc jge stos sbb cmp pop hlt mov mov jmp rcrb pop jecxz scas or int3 mov sub and mov mov cld lret push mov out scas pop ds ror add adc cmp dec out jno jecxz xor add jecxz fwait inc or cmp mov xchg ret movsb dec xchg ljmp cmp mov jbe and or or lds addl lcall (bad) stc (bad) pop mov push faddl and insl fadds adc adc add jle outsb daa stos mov stos loopne push jecxz lods cmc not out ss lahf (bad) mov lret pop or xchg imul inc and inc adc lahf mov sti sbb sbb and js xchg mov fwait mov xor sbb iret mov je stos sub mov ds add mov ljmp stos (bad) mov jb add push call mov push cmp ret mov nop lods cli sahf shll sbb test rol xlat add add rcrb rcl es in add data16 jbe inc pop fstl xchg loopne out mov dec xchg add fwait loope imul cld fbld and popf cmpsl push mov es inc xchg cmp and adc and push xchg adc push mov fwait mov test pop jb adc add add sbb stos or out out fs stos aad or jo cmp or jb test inc xchg loopne aas fisttpll and dec fistp jle addl fnstsw add jmp inc shrb test jne,pt adc fbld jmp push (bad) imulb (bad) in int cmpl and lret lret rolb call push test cmpsb add add add xor enter aas xor inc inc xchg addr16 pop dec xchg sub sbb ds sbb pusha jge pop fst xchg lcall cwtl push pop loopne test jecxz ss mov aaa cvttps2pi and fsubr fisubl jecxz ret dec xchg jae mov stc dec (bad) inc push daa js or ret or pop inc cmp xor add add add test je pop (bad) lods push inc xor cmp mov std lret xchg fwait sub xchg insl movsb mov pop fcoml push ja cs movsb mov ljmp inc inc stos xor shl lret daa icebp aam mov ret mov ror xchg cmpsb cwtl cs lret ret pusha mov or jp push mov xchg xor jge bound add add repz outsb pop mov pop lock inc mov mov out xor cwtl mov dec test pop push cld stos (bad) stc cmc mov repnz movlps lret and das test push cs fistl (bad) aam jbe push stos test and icebp sahf mov test push xchg cs enter jne (bad) clc mov pop scas clc (bad) (bad) inc mov pop pop add add pop mov xor mov mov and mov and push loop adc mov dec stos fstl shll push mov repz mov mov jge loopne (bad) and stc ss pop sub mov out stc inc sbb (bad) adc sub cmp add and cmp aaa hlt pmulhw movsb jmp stos xlat pop inc daa mov (bad) fiadd popf movb lods mov paddw imul es jnp (bad) jne pop jp fs call loope ficomp adc jl pop mov aaa movsb sbb jle loop scas pushf mov scas aaa pop addr16 (bad) sbb cmc (bad) int fs mov sbb and out cltd lcall bswap sbb cmpl add sbb mov inc cwtl out add dec enter push sbb inc fldcw pop mov mov inc jmp add loop dec mov lea xor popf mov dec pop push push cli add xchg js inc addr16 imul push cwtl lods push stos clc push fbstp mov out outsl mov scas leave das shrl mov push das cmp pop sbb ja and test cmp fmull push sub mov and lods pop mov add adc repnz nopl pop lds cmp add cli jecxz ret std jmp mov popa test dec push pop push sbb icebp add push imul mov orl xor xchg call add ss inc sub mov test (bad) cmp push stos aaa aas sbb dec js lcall or (bad) xchg sub xchg xor out out shr cld sub xor xchg push bound ret mov les dec std jmp add (bad) dec scas lea mov adc bound xorl cmpsb ffreep das pop inc jnp add add int inc xorl fstps (bad) mov lcall xor add mov mov adc dec xchg push push imul pop loope popa jmp data16 test lret pop in add mov push sub (bad) ljmp cmp mov out xchg fmuls cmp iret jbe shrb loope shlb mov jne lret inc mov add add sub sub xchg int3 movsl mov orb jb cmp int inc hlt and std pop pop push mov xchg mov popa (bad) and lds daa cld insl enter pop in aad out (bad) aaa (bad) and sbb incl jmp mov pop dec inc xor dec (bad) mov jmp xlat dec fnop loop int out dec jns and fild imul movsb mov xor add ja into popa inc pop int fld cmp repnz fcmovnb pusha push (bad) popf push push les xlat xchg sarb mov pushl mov inc (bad) adc aas scas and mov cltd (bad) ret scas mov inc mov cmp push push ja xor lret arpl and lock sub sub fsubrl frstor inc inc sbbl imul and sbb arpl test fwait insl fimul inc cli inc cmc sti mov mov scas adc outsb iret push jne mov cli mov (bad) xchg popf inc jbe (bad) ret pop bound fistp dec inc in ljmp scas mov mov push das inc pop mov pop inc sbb jno pop aas scas cwtl or insl fsub cmpsl mov in call mov or add jp lcall push inc mov sbb xchg stos mov mov dec repz pop lret out inc mov ljmp and popf or push mov cli cli (bad) xor ret mov jnp jmp sbb ss loope (bad) xor jmp bound call gs push sub pop mov add add stc int3 repnz mov fimul imul jp pop iret or dec adc movsb push mov sahf push mov neg mov xchg loopne push pop fwait popa ret mov push jecxz ret mov cmpsb add ss mov and outsl loope,pn sub inc xor icebp lods lds ja inc cwtl int3 lcall pop push push jno scas std repz xchg pop je push xor arpl sahf push cmp jg cmpsl mov inc cmp pushf repz inc push dec add push fdivl pop ret mov clc sbbb xlat es out sbb std insl xlat push mov xor mov popf or (bad) push out xchg fmuls xor xchg cmp pop (bad) and repz mov push leave mov adc ret flds xchg xor or test inc dec add add sbb mul pop bound cmp jmp xchg or xor jl ret stos lcall xor sub and bndstx push ljmp (bad) xchg fadd aam (bad) enter rclb or out sub inc lret mov fidivrl js sarb stos addr16 dec lahf or iret jno mov in movd popf (bad) adc add push test xchg cmp and jp les mov int3 ret insb or mov push push dec add xor cmp fldenv aad sub fs aam fildl sbb (bad) add cmp xchg enter xor test xchg and lds pop enter mov popf sub xchg adc insl mov jno lret mov inc inc jae fnsave add iret or mov pop jne add popa pop push ss lds ljmp and je js jb mov popa jecxz je mov push mov xor sbb xor fwait lahf or jg imul cli lahf dec fcomip insl sub rorl movsl das jg mov xchg lret test mov add and mov mov test inc incb ss aas sbb mov mov push dec fnstcw mov inc cmp test loopne scas lret sub (bad) popf pop ret or xor xor xor xlat out sub add cwtl jecxz pop in adc fimull or mov fbld xchg jno or add inc inc add cmpsb xchg mov add mov ljmp dec or rclb cmp es imul out fbld mov das add cmp (bad) cli stos jno push loopne out pop and fisub jp jae sbbl rol xlat pop jmp push je lock add mov addr16 xlat mov jp scas mov inc jmp sarl jp (bad) lock push xchg aaa mov lcall dec aam (bad) in inc int jbe mov add pop pmulhw push sbb dec lahf and stc ljmp arpl inc mov pop inc inc inc ret xchg pop jp out ficoml ja out call clc insl cmp xchg fwait (bad) mov mov cmpsb data16 jbe loope gs dec dec adc (bad) les pop xor imul and sub test movlps (bad) and and xor test in cmpsl xor jl and or adc and clc (bad) adc insb pop push xor incb ret clc fcomps add or icebp jno clc aas inc xchg (bad) mov push jecxz sub sbb clc jmp cmp push xor roll (bad) mov pusha icebp js jbe pop repnz push (bad) (bad) (bad) lcall push loop xor nop or cmpsb pop push rcrb stc scas nop repz pop add dec dec sub cltd mov xor mov test inc inc cld stos add dec jecxz scas fild inc nop mov mov les xchg sbb push xchg adc push dec repz jb push (bad) call aad std (bad) fs and clc adc dec int3 data16 (bad) mov push push and lods mov mov mov add dec scas (bad) cmc sbb mov js fs add call mov rcll shll sbb add cwtl test cmp and inc lea mov mov xchg in or (bad) push (bad) dec sbb inc mov pop mov lret push cld stos bound int3 mov insb xchg rcpps lret xor (bad) fcmovnu xchg out xchg (bad) mov mov pop mov xor sti mov xchg jb xchg cltd test imul jge sti jnp fnstcw mov inc push lret cmp add sbb pop jne aam ret jge lds fistp jbe jbe inc cmpsl cld rorl mov (bad) popf jmp sahf and pop test les xchg pop jnp loopne push mov movl rcrl add test inc fs dec dec or xchg nop pop adc jge adc pop pop hlt arpl add stos test int3 fistp xchg rcr mov mov inc jns jne enter ljmp add test popf mov (bad) fisub bswap in lcall je pop lods pop sub call (bad) jno movsl push lahf into dec clc lret pop lods or jl js out sarl (bad) cmpsb xor pop mov stc cld xor pmuludq in cwtl repnz add outsb xchg cmpsb mov mov add movsl push lahf ljmp mov insl dec popf xchg mov jns jnp roll jmp test xlat mov sbb adc adc add movb cmpsb pop in stc and je or aaa mov xor cld xor jp fisttp pop jo xor int sub imul add (bad) enter or xchg lods sbb test pop cmp aas enter mov xchg add or ds push (bad) lods or ror es mov or fwait aad jl,pn sbb or fcompl xchg pop xlat mov xchg mov jbe sub icebp or inc jmp into jge adc push imul mov inc adc or es or add push arpl loope mov add je jle repnz insb xchg adc xor popf cmp test pop adc xor xchg cmp xchg les lret in fwait (bad) push sbb mov or xchg sbb stos aam jmp mov xor clc xlat rclb stc mov sub pop sbb out sub inc pop adc mov mov mov sarb pop (bad) mov out xchg (bad) rcrb pusha aad cs mov add sub ficoml add push (bad) dec sub or dec int or in rcrb mov dec (bad) jmp rcll ds (bad) lea xor idivl icebp inc jo cmp out mov outsl outsl sub xlat xlat cmp mov int mov xor dec push fnsave mov jae arpl pop jbe sub pop out dec int arpl mov mov xchg jmp pop cmpsb jb push xchg dec aaa gs arpl pop and lea mov cmp test mov aaa movsl mov jmp mov out adcb jo,pn (bad) outsb xchg or push xor movsl sub jns fsts pop and inc rcrb pop pop lea (bad) sahf mov add add add add push (bad) jo push jle cmp outsb mov push outsl or aaa lret dec cwtl jne lcall faddl out jp imulb outsb sbb pop test inc aaa mov cmpsb cmp cmpsl scas xor mov inc push lods mov sbb sbb cmpsb push scas test les push and push lods cmc add mov mov mov push jmp lcall add add popf popf xchg inc or iret sub roll add jnp rclb xchg xchg pop ret enter rcrl mov lahf xor fs push sar ret pusha push push adc pop jnp sbb sbb fwait fs out rorl dec or bnd jle pop jg outsb fldl mov mov movsl orl xchg shr adc inc scas xchg dec or xor pop add mov xchg sub sbb fwait pop mov fwait inc imul mov test lret (bad) inc fdivrs mov cltd inc adc cmovle mov int lods hlt ds xchg fstl pop mov push lds cli pop idivb inc orl dec mov mov dec shlb inc icebp mov add add sbb add jge cwtl dec xor xor repz cbtw fucomi ret mov pop scas pop (bad) fiaddl pop call ja pop cld in sbb sbb push sbb or aas imul pop hlt (bad) mov ja imul cld outsl test clc pop jb popa sar ss into jnp inc lahf sub repz pop fisttpll lods lahf (bad) xor add test les (bad) jb mov adc or ficomp into dec mov mov loopne ds fdiv dec clc cli jge stos in xchg dec cmp sub adc mov stos xchg leave jae nop dec fiadd cs leave pop xorl bound add sub inc xor cs and sbb adc ret pusha jns faddl add (bad) or loope mov sub dec xor js xchg fbld dec pop lahf add out test mov jbe add jg xchg flds (bad) loop paddd add sbb cmpsl cli mov adcb pushf add xor sub cli xchg or std aad inc call inc add push and sub inc inc leave shlb scas add jbe in fxch cmc inc cmp push jecxz cli fldl fdivl dec cmpsb jbe clc mov or movsb mov mov outsb push inc andl mov (bad) pop sbb inc sbb inc cltd adc int mov jno arpl test ftst fimull lds test insl push inc pop inc pop loopne ja das mov pop jmp sub frstor int push pop jb xchg xor add add mov aaa pop fnstenv xchg mov mov jns in imul stos push jecxz push lds mov cmpsl push or (bad) pop xchg lock pop (bad) cmp out jne dec rcr sub enter mov mov jp stos xchg pop xchg cmp sbb (bad) mov dec test cmp fistpl scas add cwtl call popa fsts dec lret add add (bad) dec rol cmp ret mov daa fstpl mov mov outsl or mov push hlt mov (bad) xor aaa lock or bound rcr mov mov or fiadd jb lret push enter fldenv add and insl jmp pusha push xor cmp mov xchg sti addb xchg add nop dec fiadd push mov fild xor popf cltd mov pop mov or xor mov push das mov mov lods jae aad in fs pop test or test cwtl add cwtl scas std lea shrl daa push mov cwtl cmp mov sbb fist inc aas sbbl js pop sahf sti jno pop fs mov fcompl mov pop loopne jl outsl xor test mov (bad) adc rcr imul popf lods cmc nop dec cmp mov or scas mov inc iret (bad) sti add push xchg push jo pop adc sbb call leave cld pop stos mov in dec xchg push icebp dec (bad) ss cmp out xlat mov hlt fidivr (bad) imul sbb adc addb jecxz add add sub or call pop leave cmpsb push pop fs xchg ja fstl jge fnop cmpsb mov insl rolb mov icebp pop ss mov call test jne xchg inc jo xchg cs rcrb (bad) clc sbb xchg mov sub aam fs mov push lret (bad) mov sbb jne or out add lock fisttpll jge adc nop imul add add fisubr sbb mov xor cld sbbl cmp jp push mov jns or pop add pop sbb mov lods sub sbb pop je into jg mov inc mov xchg add cmp xor aam mov jp push fisttpll dec cmp (bad) add push das loope cmp jae xchg loope add sbb (bad) les jo cmp pop or pusha in shrb movsl add jno fidivr push hlt inc rcr adc fstps dec dec push pop rcll insl cmp xchg das das dec fs add xchg lods dec pop sub sub pop out mov push ljmp cmovl sbb lahf adc pop lea dec cwtl es pop mov fadds sub sub mov jne adc imul cmp mov fwait movb enter push mov push lds and cmp rcl inc push xchg in sub jno add (bad) out cli je fimul fsubl inc lods sbb lret dec dec stos adc pop je scas xor mov add adc cmp mov mov fdivl and add add mov loope mov jecxz adc push and and sub pop sti cmp push in mov or mul (bad) cmp fidiv cmp jl jecxz xchg popa out push jle xor push push mov fcoml push fmuls stos jne rorl jg scas fisttpll inc push jns,pn mov into adcb mov ror (bad) push dec xor in jmp xor push test add cld lret je fcomps sahf xor push cmpsb ss imul imul push and call icebp sub xchg cmp or sbb idiv jg mov adc mov cld xor sbb in dec test rclb ljmp pusha ficom jl mov int3 sbb rcrl cli stos or fdiv jo xchg dec hlt inc lcall push add add or and jb mov je push jmp inc mov sbb inc dec fidivr adc xor js mov cmp pop sub into inc lret repz rclb stos sbb movsb pushf (bad) iret and and fprem1 jae push pop repnz mov jmp mov cltd fnop loop icebp adc (bad) repz mov dec lock add add inc lret aas or and pop repz cmpsl insl adc mov fisttp jnp mov pop imul pop dec ljmp pop scas dec or lret fs (bad) ljmp add push push enter push push xor mov mov and inc fldl lcall mov fwait daa outsb out mov aas iret sub jl mov repz add sbb movb adc cmpsl cwtl adc push in or stc mov mov cld jb fldt xchg (bad) dec jnp les test in test push xchg (bad) sub (bad) sarl es sbbl xorl std adc or push jb pushf adc push dec gs scas mov pop xchg add add ret fiadd cs pop jo fwait pop pop add xchg cmc jb int (bad) js pop push mov adc pop inc stos inc xchg inc insl les pop lcall pop xchg scas xor lods push lds aas fwait je cmp sub pop test sub lods xor lds pop popf or cmp xchg xchg sbb add stos add iret sbb arpl xchg mov popf mov mov xor adc mov scas jnp dec and inc cmp insb xchg jns jbe rclb into imul xchg inc inc sbb (bad) xchg mov mov pop rcl ljmp push out cmp push daa bound nop hlt sub mov roll pushf cmovae lret fsubrp cmc sbb inc sub stos add cmp push jns inc movsl dec push fistp clc sub pop fildl jae jl jmp or iret inc or xchg jp push xchg xchg push adc add xor mov clc pop mov mov (bad) subb mov aaa notl jbe sub ror add add adc int pop push xor insl add imul popa cmp je mov pop pushf inc fsubrl pusha sti aas iret fstl lahf jecxz lahf movswl cli pop adc xor and fsts push (bad) pop int repz jmp inc scas std mov int lea fstpl cmp lods lcall stc add or inc xchg sarl cmpsb (bad) into mov pop pop add add sbb cld sub addl xorb dec xlat pop mov cmp fisttpl xchg jg cmp shrl mov gs mov je sbb adc lds (bad) sub or cwtl (bad) mov sub xor dec shrb pop mov out shrb mov inc (bad) sbbl in jmp pop insb int3 xchg xchg fldenv mov cmp mov sbb dec jg jns enter inc mov lret out jmp (bad) leave jge cmp mov scas adc out cmp fbstp clc arpl popf shl int xor cld inc lahf mov cmp std mov (bad) pushf jmp pop mov cmp js mov push and xor and xchg and ds fs xchg imull add (bad) xor in fucomp jp push ljmp sbb xorl xchg std sub and loope cld or mov js cld mov std sub jmp (bad) repnz enter add fstl dec cli add xchg pushf (bad) mov nop rcrb pop bswap movl sti xor cmp or cmp push rorl fldt or rcrb dec dec adc xor iret add adc sbb clc dec or std dec inc pop ret rcrl arpl test lret stc xchg jne leave clc insl or mov aaa (bad) into lret movb push mov or je sahf push sub das ret scas daa subb add add push push iret bound ss lcall mov lahf pop xor sbb and out cltd jge pop fwait add mov add inc push lret xchg ret push dec shrl push loopne adc mov pop iret jae insb aas mov xchg mov bound in ret mov out cmp cli cmp cmpsl outsb lea mov jle popa pop or (bad) je mov popf sub aad cmpsl dec out cld or jmp xchg push loope ss pop pop adc outsb adc imulb subb xchg mov cmp jne cmpsb and cwtl sbb sub xlat xlat test outsb lcall adc jecxz jp lcall shrb mov js into add add add shrl scas mov pop cmpsl push push sbb push fildl jle scas jnp xchg add ljmp sub fsubrl xchg cmp add in adc fiaddl iret xor lds xchg (bad) adc cld xorl aas loope cmp xlat add sbb add push inc out cwtl jecxz fcmovb push mov insl mov add add jae push mov jle sbb or lods sbb ja lret mov imul push cmp stos stos insl xor push jbe xchg pop (bad) pop fmulp clc mov ret call mov jbe,pt adc jp mov mov or xor mov sub jne sbb lret pop enter (bad) jno adc pushf movsl inc or dec outsb mov add add gs sub push imul sti mov leave jl adc sti mov fsubrl jno or nop lods sbb lret ret pop cmpsl xor cmpsl push inc sbb sbb sbb loopne lcall into add xchg sbb sbb adc lea loopne mov movsb shlb movsl xor (bad) icebp push sbb notl icebp cmpsl xor mov pop addl cmp pop xor scas mov jnp fdivl cmp push mov dec movsb sub repz fdivrl fsubrl pop ss dec adc add jecxz cmp add jecxz dec cmp (bad) jg inc pusha mov cmpsl imul outsl leave cmpl repz xor xor in mov pop fadds mov in dec jg sbb xor outsl and cmp imul icebp insb jl adc xor idivb xchg fmul scas das pop cld rol movsl sbb and dec cmp mov add leave (bad) popf inc push jne jg (bad) mov fisubrl mov push jno mov xlat loope mov sub dec jecxz xor and (bad) ss (bad) xor out shr jge add add add push cmp jns cmovp dec ds cwtl jp pop lret (bad) cld inc es fisubr inc inc mov push (bad) insb pop das mov and push cmpsl dec dec lds mov stos jo adc xor jbe aam call and add dec sbb cmpsb fsubl xchg dec (bad) movaps lea adcl add jnp cld xchg mov imul out or jle aaa rclb idivb pop repnz inc xchg adc add fadds addr16 (bad) (bad) mov push test scas jge pop adc push mov push sub jmp std pop les mov iret fldl mov mov xchg divb mov dec repnz mov and fistpll mov (bad) jmp popf add add lods mov addr16 insl (bad) ds movsl add lds out pop dec call mov leave lock stos inc mov ds (bad) in sahf jle pop fnclex xchg lods bound add lods cltd sbb nop movsb xor push mov out mov outsl mov stos stc repnz mov repz xor clc inc out (bad) (bad) popf ja inc jne js hlt jo or cmp (bad) fldl add push daa cmp mov or lods sbb sbb cmp mov add fcomps mov inc push add dec xor out les xlat pop mov test pop dec xchg iret jmp jns into inc aad imul add das add cs add (bad) es insl push (bad) loope test insb dec jecxz xchg sbb adc call and popf or popf incl add idiv stos push pop fwait mov adc arpl cmp movb js insl inc (bad) and push leave mov add cmp sub dec outsb xchg jg or dec pop and lea mov sbb daa lret push or jno mov sti clc mov fnstsw pop fcoml inc ficomp inc or movsb mov jmp add add push mov xchg xchg (bad) push dec mov xchg adc mov fldl adc jecxz jnp stos sahf (bad) movsb cmp sbb pop sbb and (bad) lods sbb lock inc add hlt cmp arpl adc mov sbb daa sub jo mov mov cmpsl scas pop sub movsb add add aaa test jp das clc push lret aaa call mov jg sbb xchg loopne pop pop sbb cltd mov inc mov jp gs dec mov into push fcomip cmp pop fadd pop das sub sti lock mov sub push fdivrs call orl xchg sub fildll xor mov sub addr16 jb mov fisubrl jnp addb clc in sbb insb mov jge lods movsl (bad) jns jle addr16 stos sbb dec push xor push js xchg int jg lcall xor aad push pop mov adc or fild ss outsb sub loope inc jle dec mov cmpsl repz adc inc jp mul lea push jmp xchg mov mov lea mov pusha and add add out sar sub or sbb dec cmp push fwait xchg mov jnp sti (bad) (bad) jmp add and or icebp sarb pop fxch testl and inc sbb mov out mov xchg ss inc push and mov into fldl fsubrs jnp cld pop (bad) sbb rol jge xchg mov mov cmp inc inc cltd flds lahf mov inc arpl add arpl mov daa xlat jecxz std push dec or out (bad) comiss jge movsb je pushf xor mov es stc lret sub xchg leave sti notb int xlat jb scas (bad) push pop or lret mov loope mov xchg (bad) dec mov mov xchg xlat addr16 loop test cmp sarl mov inc xor push fild test mov add add or pop add pop pop jmp (bad) dec mov xor inc pushf sub (bad) stos pop clc xchg ss sti clc push cmovg sub inc mov arpl mulb lds ds dec into push std xchg fnstenv mov add mov lds cli movsb lods xchg enter (bad) adc rcll fidivr mov sub add mov stos xchg (bad) cld dec data16 mov cmpsl xor jl xlat inc ljmp iret iret das xchg shrb fpatan sarb data16 cwtl call outsl sbb dec mov sbb add cmp in lods sahf test ja in add mov sti pop repz inc mov pop int3 xchg arpl in (bad) imul jle daa sub xlat mov jnp mov inc ljmp add aam push sahf test pop push jae jbe adc fs loope test ficomp sahf mov movsl outsb cwtl test push lods sub or xchg in in ret (bad) jno dec popa sbb push inc mov push std divl outsb and push test mov sub and sbb cs out fisubrl adc daa lahf cli mov mov add push in push lahf add cmpsb adcb fbstp popf push jmp ficom inc (bad) (bad) adc lea sbb mov rcr or int fwait sbb lods push mov mov dec mov and popf mov jmp rcll sbb mov mov pop (bad) icebp or mov adc inc xchg jecxz pop aas inc outsb out ja jle and jo add add push sub movsb cmc inc in mov cltd push (bad) jnp jl push or lds js xlat and out test add repnz std jecxz jnp mov fwait push lods aas jmp pop adc lea sti pop and jl adc cmp mov jmp push jae imul lahf rorl outsl jge pop mov sbb jl in sbb inc cs jne jmp add add imul jbe or and icebp push xlat sub rdpmc cmpsl pop movl mov pop movsl ret (bad) xchg cmp push rcrl adc hlt pop je popf jg jge or xorl test pushl and ret and mov out xor sbb mov sub push lret test jle jo cltd sbb sbb add test push lock sub pop sbb add test gs sub data16 decl fs mov mov out (bad) sbb lahf ljmp iret add inc ja fsubr loop (bad) mov insb xor inc inc push mov daa insl dec mov inc cmp out int3 jns pop add popa lret sti aaa jmp int pop paddw mov js add sahf jns mov sbb sub mov sbb mov dec mov adc lods scas xor ss sbb mov stos sti insb nop and insb jb (bad) imul sub fcompl int3 adc pop jmp jecxz or test loopne mov sti loopne out sub out and push adc jp test in dec push xchg int sub pop add add and or push loopne adc and add imul in jecxz xchg jmp cmc pop add cltd or (bad) stc data16 call cmp and mov sub push test dec dec pop (bad) jo pop in xor dec mov add jp lods lcall cmpsl lods jl jno adc fs inc adc fwait into in jae pop sbb push (bad) xchg lret cmc xor into fisttp jbe and cmp rcrl lret popf lret cmp cwtl icebp push bound cmp sbb js sub xor ljmp mov and in push push negb movsb ja push mov cmp xchg or fwait enter call (bad) cmp jb add or push sarl mov add jmp jbe push fwait and or mov pop jmp mov and mov rcrl cltd imul sbb lret test sub adc cltd mov (bad) in inc cld popa dec int3 cld rcl xchg xchg ss (bad) jp out iret ficoml shlb outsb test dec popa cmpsb cmpb mov aam aas fcompp mov fimul cmp mov scas imul mov insb cltd inc iret sub fild pushf adc leave cmp or inc in push lret mov call xor and rcrl push push repz cwtl in je es dec xchg add out mov lds repz sbb push pop ror pop sub push pop xchg add add xlat cwtl out (bad) mov call mov mov xchg sarb jnp add add add pop mov add jb mov js pop cmp add sbb in and mov repz pop jg dec xor jle inc add lods das andb inc mov jge nop lock (bad) lahf (bad) jo or sub or out lretw cld cmpsl roll mov mov (bad) adc cmp (bad) dec mov mov add add sahf pop insl mov daa mov adc (bad) push xchg insb ja push in lods sub add dec insb bound cmpsb jae adc enter lret repnz xor out repnz cmpsb mov add pop sbb arpl push out xor push enter adc subl mov jnp int3 push mov mov push xchg sahf addr16 mov xor pushf dec or cmp add cmp fdivl inc or adc lahf xchg (bad) (bad) daa (bad) lret outsb xchg fimull pop icebp jo addw sbb push adc jg aad mov mov xchg scas sbb pop sarl fildl das pop in or loopne push pusha add lret insl inc adc enter sub jmp ss sbb add mov fistpll inc inc ja push dec mov adc pop sbb ja int3 addr16 sbb loope sub fs pop inc (bad) jecxz pop push mov notb nop jp push mov add out hlt aam jge adcl cmc jp je rcrb push inc mov jge fidivr push or pop xchg clc jne leave inc dec pop mov inc mov add and int3 push enter adc mov sbb out jnp or add xchg cli sbb into inc pop sbb sbb sahf jae inc aam loopne fstps lahf lahf mov push add xor outsl lret mov add scas (bad) xchg (bad) xor outsl (bad) jge loopne data16 outsb ret or (bad) or dec stos (bad) movsl push loopne sbb imulb (bad) insl lcall push sbb xor cli test mov mov add in jl adc cli pop insb call cmpsb push icebp ror fstps sub gs lcall js movsl gs xchg inc jge mov imul int or and nop push jnp xchg inc rcl les (bad) pushf scas push mov cwtl push sbb dec mov mov cld fwait xchg cmc lret cmp add neg (bad) sar add pop mov cmp dec mov push pop or stos outsb cmp push call xchg mov and dec in rorb inc in jmp inc or int mov push fdivrl jae arpl jno add cmp clc daa lds xchg imul pop out push in add jl lret sbb push fstpt in and (bad) js inc pusha push loope jmp daa cmc xchg add or ret jbe ja pop push sub adc sahf fdivrl ja ljmp stc mov lcall xor movsl push (bad) and js in imul adc add cmpsl jae add or xchg jge xchg cwtl loopne xor scas mov fmull cli adc push data16 enter mov xor xchg push in lcall inc cmp xchg xlat mov mov sbb mov int pop cmp cmp inc pop cmp gs and into (bad) (bad) sub in jno pusha add jge call mov jle cmp ja cmp jne (bad) ja int3 bound mov es xchg cmp sub push loop jl inc push xchg nop pop push add jbe lret neg out pusha scas jp dec imul sbb xor jae hlt jl insl cli add mov (bad) lds add mov pop dec popf addr16 in cld aaa cld lods pop addb cld sub push pop add xor add and add ret push (bad) cmpsl enter (bad) jo movl ds ret or push jge lret repz add cwtl mov push xchg sub dec dec push cmp mov ljmp scas cmc cmp mov lods fsubl in sbb and pmuludq cwtl int3 dec lret movsl cmp cmp xchg or jl lods sahf sbb mov fisttpll (bad) (bad) cltd aaa mov adc lret add adc fldl inc pop jbe mov call add test xor push ds jo pop das pop aaa movsl push dec xchg adc fwait clc movsl mov adc push adc cmp movsb (bad) jbe in cli scas mov push (bad) jns inc lea add jne lcall jno and cs jbe inc fldt scas fs add pop push cs inc repnz call arpl add add add fs fistpl jecxz xor inc mov notb or in adc and call jnp mov mov cmp jo loope and add lds and int pop mov xchg inc movsl cmpsb outsl adc cwtl or jge out mov jl popl fmuls (bad) in pop mov ret (bad) inc int3 sub inc adc add and out repz sti or xor in inc lock xchg mov push push enter push mov and adc ja cwtl inc mov mov adc jns cwtl sbb movsl cld nop gs or xor ret jb aad inc (bad) fcmovnbe push xor test addr16 add imul mov in add fwait push aam jne pop inc pop sbb mov add add lahf (bad) sbb imul sbb push and or ja lea stos dec ja jae test fbld sub add ror push leave xlat pop (bad) mov xor loopne mov or sub jns sbb jge lock pop or (bad) rcr test mov in pop mov fdivs push add into push in movhlps aaa sbb fwait call test movsb addr16 (bad) sahf test popa add (bad) mov mov adc dec les add sub lds imul sti std cltd rcll fwait ret mov push pop jge jp subb bound icebp or int3 sub int lods ret fildl aad fidivr add in (bad) adc inc xchg (bad) out inc in popf cmp push push andl sub sub pop sahf pop inc pop sub push clc jbe iret push iret dec test push sbb test mov fwait cld jae into jecxz mov mov pop cmp insb fisubr pop sub fsubs enter fmul jnp iret lcall adc push or mov js mov add mov das nop lcall movsl jbe jb or (bad) add addr16 xor in push pop test mov rcrb mov xor test push stos scas mov mov (bad) mov lock out jae shrl lods mov adc add out mov add lods lret arpl sbb jg test test dec lret add or test mov sub adc sbb or inc pop sti adc sbb push popa cmp mov add sbbl ret dec jnp xchg divl ret cwtl dec addl mov fimul inc jmp mov pop fistl add fprem out (bad) lahf add inc cmpsl cwtl mov icebp push add add jecxz xor popa push loopne sbb xor insb mov mov or mov into adc mov ja push jns mov pop jbe cs push das enter add xchg aaa push sbb mov mov (bad) adc cmpsl int mov adc push cmpsl sbb sub int3 int inc hlt add xchg inc sub cmpsb (bad) bound scas enter call int es xor in jmp rorl inc cmp jnp sbb (bad) mov and dec mov (bad) jno lods xor pop xchg fwait ljmp push call sbb mov dec ljmp add mov add xor sub inc xchg rclb sarb push and dec sub adc dec add add jo or out xchg int adc in and nop (bad) pop loopne scas test in add cld arpl icebp daa sub cltd (bad) jns loopne mov fisubr cmp push repz add testb pop pushf sbb cmp cmp and imul mov mov hlt cld inc add sub rcr icebp nop clc incb dec add add cmpsl dec mov cld fmull std xchg mov or cltd ljmp xor stos shrl push inc add xor jg fdiv iret inc jge roll xor cli aam fild xchg pop imul rcrb outsb lock dec adc aad inc add (bad) js dec loope insb jno mov xlat cmc dec les aad icebp lahf (bad) daa nop fstl cmc rcrb jbe imul inc hlt mov dec in xor fildll sub jecxz cld stos and lret mov push insb cli add imul pop mov rcr aas push fs lahf (bad) out aaa neg into addr16 inc subb cmp mov icebp and outsl test lods (bad) jb movsl jbe mov popa pop in cwtl push jno mov lds push push loop add add (bad) sub jnp testl outsl sub aad rorb push jge jns adc repz orl xor insl cli jge aad pop (bad) inc movsl dec sub sub bound movsb adc int3 outsl add add pop jno add xor add pop repnz push xchg pop bound js dec inc xchg jbe jb mov inc andl add add cmp or fmull les jle notl jp or xchg pushf mov out pop or add cltd stos jb lock addr16 mov cmc aam pop aas lret outsl sbb insl or or dec xlat ss mov fwait in out outsl int mov sub lcall shll sbb cli loopne shl add pop push arpl mov dec add cmpsl popf shr cmp push dec movsl push dec daa imul cmp fwait hlt inc aaa outsl addr16 mov scas mov lahf and adc mov inc fild dec mov icebp inc (bad) fnstenv cli arpl movsl xchg or loop xor lret jne mov ss jb cmp or in push test hlt mov lahf pop dec outsb (bad) testl add pop jne sub sbb stc hlt aad cmp mov sbb (bad) ja (bad) dec aam xchg js pop push adc fs aam mov clc frstor push jmp add stos cmp mov and jp push mov imulb mov or int3 mov dec fdivrp inc loopne addr16 jp xchg (bad) pop sbb add add push push mov inc outsb fsubr mov or jge lods mov stos mov mov mov adc fwait stc pop sbb and leave gs arpl xor sbb inc out movsb imul push call scas lea push aas subb aas cli lods mov fiaddl das jb rcrl hlt fstpt arpl loop dec gs jae ds fst xor aad xor sarl rcrb out ja cltd pop lds dec sahf inc std xor sbb loope mov sub inc mov pop add out mov incl mov leave adc fnop push mov jg shrb popf dec cmpsb fwait gs mov nop test add (bad) in das sti ss mov sub outsl into mov cmpsb inc dec push lahf cs pop mov adc push mov out xchg lcall add and mov sbb jp xorl mov sub daa pop pusha fucomip sbb mov mov lods lods mov jle popa jp mov daa ret push push int3 and sti mov shll clc out mov dec aam scas (bad) push scas test adc jp xor dec dec shlb int xlat pop cmc stos and mov cmp add add add add pop cmpsl xchg lods or scas call xor inc (bad) xor cmpsb (bad) xor cwtl popf icebp out stos test addr16 pop xor call pop mov or das or aad loope in push and inc in orl mov arpl xchg dec jns lock inc and repz mov xchg xchg mov sbb aam and sahf mov add add scas sbb and pop jge iret dec leave push cmpsl jbe dec test sbb ss cmpsl std adc (bad) push cmc adc pop adc or xchg pop xchg lret or xchg mov movsl pop sub sahf imul jno testl inc stc jne and sub fimul nop movsl out xor xchg push dec add cs (bad) add jns adc xchg mov lock add scas loop jl jnp add dec push jl mov idiv ljmp mov pop loope jmp jmp and fldcw loop outsl ret aaa adc mov (bad) stc mov fidivrl sti mov incl adc mov sub pop outsl push scas cs aad (bad) pop inc mov cmpsb aaa jns dec bound jp faddp cmpsb sub rclb idiv imul out mov lcall lds xor aaa out jbe xor je sbb ficoml (bad) jg aam push movsl jns adc orps push or xor adc xchg inc push shrb adc (bad) loopne scas ss repnz gs sbb push jg arpl xchg into rcrl mov divb mov add data16 (bad) in push cmpsl pop lock test xor scas aaa iret mov dec je imul sbb xchg jae stos inc (bad) mov pop inc jno xor jl (bad) mov sub pop bound insb xor jmp mov cmpsl movsl mov notb enter xor cltd adc jb push xchg jbe push add sahf dec xchg fistpll notl sub add sub pop pop mov mov in sub in rcrl jp clc sbb jecxz mov out sbb iret jns pop popf dec cmp (bad) mov mul stc repz jo sbb (bad) pusha ljmp ficomp scas or push loopne rcrb jmp (bad) mov das bound repz aaa dec clc push xchg in sub stc (bad) push inc dec out hlt add int3 call hlt icebp leave xchg scas xor dec psrld xor mov or add ljmp inc dec sub cmp lock popa int3 js sbb adc fldl jle add push pop push decb xor jp scas aad sbb bound inc mov xchg divb xor xlat xchg in repz or (bad) pop test outsl jmp (bad) fdivrp imul scas (bad) sbb sub or inc dec pushf lock inc push mov es pop loopne mov cmp (bad) aaa push fistpl mov mov cmp xor pop jb into in ss in outsb add fcompl adc add add push lea (bad) fimul loope jge sti add sarb iret out scas mov adc mov cs pop and mov mov cwtl repnz dec jmp push rorl in dec mov cmp int mov push xchg dec js xchg mov or roll shrb cmp test mov out pop xchg movsb adcl xor pop push xchg xor lahf jle jne cltd adc add dec (bad) int3 pop in xor xchg dec adc mull push daa jle jb imul movsb pop repz inc sbb js sub mov cmp dec mov add add in cmp stc outsl aaa movsl in push fucom iret or packsswb rorl push movsb xchg push les ja xor inc je nop pusha xchg mov movsb add add jbe dec or add push xchg enter xchg sub mov push inc stos lods in movsl sti inc lahf sbb mov mov or mov sbb pop out (bad) jns mov jg or mov in inc add and inc or ljmp mov pop dec inc pop jl mov iret das sarb lahf test int3 roll add adc int daa cmp in mov jge mov fmuls insb mov cmp fnsave cmc mov imul mov adc es cmp push ret mov or or mov pop sub dec cs mov (bad) sub test xor jnp (bad) (bad) dec pop mov cld and imul insl imul add add add add dec jns sbb sub cmp pop mov xchg jg stos xchg lods xor (bad) mov jb sbb fdivrl or rol inc stc xchg jno gs int nop scas or add bound pop imul test lret das adc lcall insb fs mov mov dec (bad) test (bad) jno sbb cmp popa jge hlt loope in jno dec das jo nop xchg sbb test fiadd xchg push xor xchg sbb shlb mov fs push and (bad) popf adc jo inc pop inc cwtl mov mov add enter dec mov adc fcmovne mov sub iret or push aas mov pop aaa xor stos lcall imul lret jg add add add leave ds lods xorb rcll mov test adc dec jl mov push out cmpsl fwait (bad) ljmp lock in or repnz dec push pop ss arpl sub add sub adc sahf mov je or icebp clc sahf jp push (bad) lret jg (bad) mov (bad) jle outsb push mov push and fsts add jbe aas adc add mov fnsave jbe sbb mov dec clc dec scas jne xor jae mov mov mov outsl push movl inc push lock dec ret or cld mov dec out das (bad) jbe and divl data16 loop dec jno (bad) dec loopne mov mov jge out and cwtl aam mov into lods cwtl xor bound out pop ds dec adc cmpsb push xchg cmp jle orl nop (bad) push outsb jne dec pop or ret cs insl xchg mov rcl mov pop fsts lods inc pop adc gs nop fs aam scas sahf mov inc xlat sub jp push mov push add test mov ds into lea add pop data16 data16 pop dec mov cltd sbb pop push inc push push or and ret (bad) sub cmp and cltd or sbb adc sub or fmulp movsb jl (bad) rcrb and xor div lock push ja daa popa mov lret xchg fnstsw fisttp sub daa dec insb sbb mov outsb test push push fcmovnbe cmc sarl frstpm(287 add sbb ret bound or test out outsl cmpsb add pusha arpl cmp lods movsb sbb lret stc add dec test push dec jg les shlb jne mov push dec sub fistl push (bad) jbe push lea insl fcomps mov test aam fsubs push rorb scas stos fldenv nop loop sbb add adc jbe xchg cwtl jle popf in cmpb pop dec aas leave jge xchg aad fcoms and push ret jae mov test dec inc lret pop and dec jge test mov pop sarb mov mov clc (bad) xchg fcoml orl or jnp jecxz ficoml jge fadds out pop or add push into out mov jnp aam pop add pop push loope adc sub fdivs and ret adc pop xorl scas push mull (bad) hlt or rorb xchg lods lods ret loopne mov and jge icebp add popa pop fs dec repnz jmp fstl ja mov sub clc mov mov mov add add mov test adc mov mov (bad) fnstsw ficom arpl mov jge clc pop das (bad) std outsb inc testl mov xlat push gs (bad) or xor cmpsl sbb inc dec mov inc sar inc inc sbb push ret mov jae pop push mov adc jne rol xor dec leave mov adc cmp enter scas inc addl (bad) add xchg loope (bad) dec pop mov js repz add xchg lcall int (bad) mov je jo sub sub sbb aad test ja jns (bad) dec dec inc or xchg adc dec xchg aas and fbld adc cld aam adc (bad) shlb pop xor cwtl push push inc (bad) (bad) rcll test cwtl add insb jo movsl lcall inc mov jne aas lret and scas shrb mov test aas pop or inc fisubl enter hlt movb popa lods aam stos push fwait imul jmp (bad) imull data16 mov ror rcrb push push cmp jp dec fisttpll push push pushf push pop xchg jne inc cmpsb and leave dec sbb stc in xor add add and shr sub push ss std xor ret xor pop adc mov in push stos inc pop int daa xor pop pop popf mov fildll iret xor daa push fs sub dec out or not lret fs daa and inc jle push cmpsb cli imul (bad) rcrl adc scas incb xchg xchg or cmp or cmp xchg dec fcmovne inc mov cs add dec jecxz dec or sub mov cmp fdivr xor mov dec cmp out gs mov jg gs sub insl ret inc push pop jmp and jns es (bad) insl dec xor mov bound mov test xor dec adcl cld rcll xchg fiaddl mov into nop (bad) xchg test mov (bad) or xchg call add aad fimul flds arpl ficoml ret out push cmp push sbb mov call mov push add das sub aam mov inc cltd or inc xchg adc add mov mov and and add dec push mov sbb test outsl sarl mov rcl adc xor (bad) icebp pop test into lret test xor xor cli les jle add ljmp cs jno pop jmp and and push daa js scas mov xlat add jp es shrl test fs xor addr16 fsubs mov mov in sbb popf sub xor sub lea scas cltd dec sub push lcall add and or and movsl xchg andl xor out and xchg addr16 outsb inc sbb push push xchg call out (bad) repz adc call out xchg mov fisttpl (bad) mov cmp push cmp insl xchg inc aad mov xchg in fisubrl orl dec jge sbb jns dec js into vphaddbd add add mov insl popf cltd cltd out or xchg adc mov fcompl jp mov aad xchg lret scas mov push stos sbb sub fildll and (bad) xor sbb mov jno stc jne or xor sub dec andl rorb mov mov or ds jle lcall or in aam repz lods xor iret mov add jmp xor pop (bad) sti roll sbb outsl loopne xchg fisubl sub int daa pop loopne or cwtl xor cwtl in sbbb cmp sub movsb xchg dec das (bad) lock pop pop and mov mov cli push mov call xor mov jmp jmp xchg cmpsl ds cmpsb icebp adc aad addl insl sub js out ret push cmp roll add xchg adc and and xchg push sahf sub movsl imul out add add xchg outsb pusha test ret leave inc add or push inc leave add test jnp fiaddl dec aas aaa mov pop cmp or sarl sub lods jae (bad) push ss inc in xor aad repnz xor xorl data16 sbb pop (bad) pop pop lret push jae pusha mov bnd sub jnp movsb pop xlat bound ja mov addl push orl sti out cmp outsb adc (bad) stos js jle adc loope repnz fcmovb out pop adc push fwait push pop jmp test jg (bad) add adc add fistpl sbb xor lods cmp test pushf xchg push pop inc mov xchg push mov lret cmp lods js pop arpl push add js mov and sahf mov pushf inc push lret push movsl loopne and (bad) test in xchg out lcall jp or xchg sub adc ljmp into push xchg or (bad) sub jo push cmp repnz imul add repnz int sti (bad) adcl adc push dec jecxz fwait shl dec sahf in add adc or fidiv cmp insl add fadds pop call test xchg into movsl insl rcr stos lods arpl out sbb out movl push lret mov jo dec and mov or inc push movl enter cmp pushf addr16 loop enter xchg leave mov mov push mov out add mov xchg or stc dec cmpsl es dec pop aaa mov call sbb mov push or fistp dec ljmp sbb mov add dec push sub out pop jns jne sub mov sub ret add mov xlat fimull xchg shlb addr16 inc lcall add popa add or out add xchg inc pop mov xchg lods shl negl call outsb xchg imul setge scas divl mov jp sti mov leave das fdivrs add jnp test lcall inc push mov xchg mov xchg add add add aaa les add addr16 adc sbb lods xor out jns lods das jnp ret pop ss jne dec inc outsl scas jbe pushf and pop int3 ss int in push sbb sub or dec int cs cltd mov sahf cld dec ret mov sub ficom loopne cld mov add jnp loop aad aas stos fsave inc int3 or pop repnz int3 add dec xor inc in mov mov in or jns into sbb cmp pop dec stc or sbb (bad) add and es dec adc in icebp imul jl les mov add dec fwait xor (bad) enter xor cmp mov cmp add or adc xchg aaa xchg bound aam and mov add add (bad) insb pop leave roll mov adc pushf cmpsl xor je inc mov inc sti idivb pop fs aad push and loop notl adc insl inc pushf jne push inc pop lods in cltd add (bad) in aaa or lret or sub cmpsl inc mov pushw cmpsl scas mov jge jno lahf movsl adc out mov faddl cmp add or leave andl pop jne scas insl icebp adc sbb push js xchg cltd pop inc inc xor push xor cmp idivl lock or int mov add imul and lcall lret push xor stos loop adc pop push inc outsb leave addb xor ret sub negl repnz add adc (bad) pop add out push aam out xor mov jge mov or pusha push and push dec jg in pop mov adc out mov outsl stc movsl scas iret xor enter data16 mov push jb je cltd sbb dec sbb mov push or test mov pop cmp movsl push (bad) pop add pop mov pop test negb shlb push adc mov das cltd xor int3 mov ljmp or adc addl stc cli mov je inc das pushf (bad) lock adc inc fsubr leave xchg cmp lds xchg or nop int lahf stc pop jae (bad) repz stos movsb xlat xchg fidivl gs sahf cmp test mov add pop jb (bad) push fwait xor jg in sbb jbe lods sbb fnop int (bad) sarb lret mov lds push or jnp loop dec decb xchg jns out add das test nop xchg mov push ret rcrb mov xchg or push es pop push fbld out lea mov add or add aam enter (bad) add fstp (bad) push and fist cltd nop ficom fnsave pop arpl (bad) (bad) jmp in jp xor mov movsl mov dec shll scas mov pop xor aas cli lcall xor or xchg (bad) lods (bad) dec push cmp leave mov mov mov mov add sti and test xor dec mov sbb (bad) push jae jecxz sub fwait hlt aam pushf fdivr cmp sub cmp or repnz repnz mov int sbb cwtl fnop sub push jg (bad) fwait sahf sti out sub (bad) pop jle mov lea add cwtl pop sbb cmp inc sbb cld mov cwtl mov xchg lret push ret call push imul inc cmp xor mov fwait and add lods push sahf xchg jmp les cmp (bad) pop push es in jo inc push lods jecxz test dec popf out cmpsl bound std rcl mov daa sarb mov mov dec (bad) (bad) out push inc inc jbe cmp cmpsl scas push jbe sbb mov mov push aas dec enter test call gs pop push popa dec daa rorb outsl cwtl pushf push mov dec mov idivl je ret xchg inc jb stc int inc jnp sub cmpsb jne pop fcomp es out fisttp cltd rorb or sti loopne sub xor xchg sub pop in mov jbe,pn dec loop jle xchg jle fdivs inc mov jnp xorl dec sub sbb add outsb xchg push xchg jno test sbb inc movsl insb (bad) adc or push int das fldt sbb rorb in jp testl (bad) mov lds mov rorb js scas repz cmpsl adc xor inc sbb mov call push mov add mov repnz les dec fsub bound xchg add and jle mov jo mov dec jo sbb or int and or xor adc mov and aam sbb (bad) icebp mov push xchg jg aas sahf jb loopne xadd lahf repnz cmp pop xchg in test fbstp data16 push sahf scas mov add push clc jmp stc mov (bad) fs loopne outsl int inc dec cwtl fisubl out and push fs mov sub xchg (bad) lret loop mov out cmp lret add loope jmp mov mov stos mov jle,pn stos in test xchg sahf out mov or pop mov popf enter clts adc xor test push xor push sbb xlat les xchg movsb in cmp push mov mov shl js aad mov mov or sbb lock inc push lret rcr into out js cmp push cmc add loopne icebp test mov imul and push stos cmp stos ljmp xlat pop xchg aas cmp push push inc rdmsr pushf jnp mov cmp fiaddl sarl jp jo xchg (bad) inc pop in sub enter mov jg insb xor inc sub sub aad push push out sbb pop pop mov pop or sbb sub in adc inc ret loope insl aaa adc xchg lcall clc xchg and lea sub movsb cwtl int3 test push out pop outsb xchg add pop dec add pop mov cltd int3 push fnstcw pop mov cmpsb out ss sbb or mov adc xchg scas imul mov stos mov push xor loope mov push mov shll xchg test stos inc jl cltd lret jno or lret es roll stc push and shr pop push loopne mov mov xchg cld enter movl ds adc cwtl or movq insl adc (bad) js xchg lcall rorb xor out (bad) mov mov push mov sahf ficom les stos stos and js cmp jl inc daa addr16 jle fsubrl popf mov mov negl mov add (bad) notl pop loop jge mov jbe sub (bad) fidivr adc (bad) lret cmc or mov out imul cltd mov lds dec popf xchg mov mov es sub test ret push lock inc sti popa push lods imul lods nop sbb pushf xor (bad) in cs insb cmpl pop push pop ret or jle stos inc stos sub arpl add adcb push sbb pop and add jo js dec out loope inc ss cmp or mulb add lds jg dec pop je subb xor sbb pop cwtl xchg clc pop push adc pop das mov cli mov in mov stc pop test in movsb imul inc and add repnz mov mov sub ds js movsb add setne out insb or sub in (bad) cld lret les test lret es flds loop,pt ljmp mov cli push sbb dec adc mov sbb (bad) or sbb movsb fwait aad sbb fwait stos pop and lea push out shrb movsl and inc addr16 push or push jl mov inc push inc out jmp stos jnp jle xor mov xchg aaa inc xor insb (bad) mov fchs mov mov sbb outsl or mov std inc out push data16 (bad) int3 xchg dec shrl lret adc stos mov cmp xchg xorl pop add push sbb out sub mov rolb add add (bad) mov jmp pushf sar push hlt push add mov orb lret (bad) mov movsb icebp jae and pop movsl es (bad) lock dec mov and pop (bad) mov movsl jg xlat adc xchg movsb in sbb lea push ljmp (bad) pop push jae lock jecxz mov push sbb jo sahf sub jno push cmp add outsb hlt add mov aam pop dec mov sahf out js or and sub push mov pushf scas popf push and or xchg aaa addl dec insl insl ja mov in repz scas test bound and bound cmp push int3 and jecxz outsb outsl jo ds inc jmp lahf ret cmp jl add push es adc addr16 cs adc and popa das call pop insl test jecxz pop mov sub aaa xchg jecxz js in mov mov (bad) add outsb js in mov and jns fwait repnz push and lock jmp scas sub sbb xchg test sbb pop dec in aas sbb sbb aam test add add sahf loopne lock out cmpsl sub (bad) mov and jb lret xlat loop jb adc and iret jge sbbb int3 test mov icebp arpl daa jle lahf mov push mov sbb mov fsubr adc into mov enter orl xlat xor xor add sub pop insl shl push out mull sbb push add cwtl hlt xor fstl and (bad) cmp ljmp jo add imul inc movsb push das outsb popf pushf mov popl dec stos movsb sub lods inc xchg or rcr sub scas int xchg ds les stos xor sub dec out mov popf jmp sbb xchg ror daa lds orl lahf (bad) jae nop lods jns (bad) push popa daa pop add int3 xorl xchg cmp add push and arpl fldenv xor jle mov sbb inc in int imul inc movsl adc mov mov push aad or sbb pop mov out orl sub and mov es ss mov or jae rorl xchg pop out push imulb cltd scas jno,pn sbb push or dec ret or add add add add and and pop jl das pushf mov pop inc and test mov into cmc sbb ret mov xchg arpl fistpl sbb das jg (bad) jb cld movsb inc add jmp test xor inc test clc or js cli lcall or stc in shl mov (bad) movsl pop jle sub or in mov add add (bad) (bad) mov and fnstcw dec push jp xchg dec leave dec pop xlat ss jle cmp (bad) mov jne imul in cmp cmpsl or movsb xchg and add das xlat (bad) mov cmp test insl push pop icebp xchg cli ds dec bound arpl add mov scas xchg popa add arpl add lret das daa jno xchg and add mov or nop push lock lock mov add mov sbb xchg jle jg or fdivrs xchg and rcll test cmp lock pop jne loopne insl loope psubb mov icebp inc int lahf xor (bad) xor dec daa movsl sbb out cmpsb icebp xchg into lret pushf sbb xor cmp lahf sub inc lods adc clc push mov add add cmp add ror and out sbbl stos sub xor fisubr xchg pop push stc lods daa call push pop scas aad xlat iret cltd cmp loope adcb adc (bad) es popa fwait xchg imul pop mov lods mov push sbb mov cmp pop cmp jle mov lahf hlt jne sbb ret decb loope add dec xchg jmp jb mov insl out sbb std rsqrtps cmp xchg sub stos ds gs lods hlt rcll xchg leave in ret popa mov scas test add jecxz sbb sbb cltd leave enter ficomp pop aaa data16 dec movsl pop outsl xchg fsubs not mov jae and mov and mov arpl adc out inc ret mov jne and jbe and add or sbb repz insl lods iret mov push and mov cmpsl add sub cmpsl ret outsl xchg test pop mov mov add cmp xchg pop mov sbbl mov mov jnp rcrb push dec or jno xchg push sub je jo int3 scas push adc inc lods js add insb fisub sub cmpsl insb inc icebp add pop pop mov iret sbb movsl mov adc in mov icebp dec repz cs jno aam push sbb negb dec xor xchg push ficoml loop push jno int xchg imul dec ror into leave xor test (bad) lahf jl cmp pop (bad) jmp push sub mov (bad) testb lods xor jns xchg adc cmpb es daa mov (bad) sub and (bad) dec inc sub push (bad) and sbb ja dec mov or je gs jbe cmpb add movsl mov mov jmp (bad) fnstsw sbb inc cmpsl bound sbb cmp inc fsubl cmp aam inc xorl or sbb sldt add add aam jns cmc std add lret es (bad) push or lds pusha aam movsb inc ja imull jl daa test inc ljmp add int3 cmc mov lret mov icebp fcmovbe repz mov push adc or es cmp (bad) push jnp jo aaa push jg inc xor dec adc cmpsl jb sub adc push pop sahf add imul push inc js mov inc add pushf cmp add add xlat or js cmpsl inc outsl push sub or out loopne sbb je cmp add nop rolb and sbb cmp dec xchg lcall out jbe adc sahf push (bad) insl fmuls repnz pop sub inc jnp,pt mov push cwtl stc testb int3 adc inc xor mov (bad) cmc xchg sub cmc push sti (bad) ljmp add das cmp jnp add pop push inc xchg adc inc movsb or mov and loop fnstcw scas xor or ja int3 rcl ss and pushf into jns cmpsb and jmp cmp inc pop xor dec inc (bad) in lcall out stos and pop movl in sub and jbe jg cmp dec test sbb shll add dec cmpsb rclb push adc jae cmp pop pusha pop ss outsb adc mov fdivrp add push ja and fucomip es popf mov movb inc xchg jp mov pop xrelease popa jmp cs xor inc int3 mov orl (bad) imul enter sub cvttps2pi pop lods stc add or enter nop fisubrl iret or cmpsl popa xor add jg ja cmpsb icebp js sahf xor lret mov add mov push mov jbe cmpsb add cld pop je pop das sahf pop dec and mov mov cmpsb adc or out bound out mov outsb cmpsb dec jp rcrl pop mov cmpsl push push pusha pop fimull sub cmp dec sub mov add add mov mov shrl mov es mov push pcmpeqb test pop lds in test xchg dec dec aam cmp insl sub (bad) sti push sahf or ret pop mov sbb sbb cs daa push insl inc add imul cltd push test imull test dec adc adc push jge or push cs out sub and arpl cmp movsl aas shrb mov pop enter jp das push adc mov outsl pop outsb fmuls lds pop pop stos mov popf add pop pop ja jns es loop outsl jle dec mov adc lea or popa bound mov xchg insb arpl mov mov xchg add and inc rol daa loope mov dec xlat sub xor cs in test int inc jp pop pop jp shr lret jns js test (bad) notb in mov aaa nop fwait xor ret inc ljmp out cmp dec aad pop pop sbb add (bad) or mov xchg inc arpl and outsb fisttpl imulb outsb pop adc inc mov (bad) ljmp or xchg out cmp push lret inc or (bad) adc push lret and pop mov cmovb cltd sbb inc (bad) jne push pop mov movsb imulb sbbb lds cmc icebp mov inc dec jp,pt push xlat push jne popa xchg dec dec jecxz cmpsb cmp push ret mov cs out jecxz ficoml mov movsl sub movsl aad add setl mov (bad) jge loope and and mov mov or mov stos les lret xor xor test or data16 (bad) lock cmp movsb lock sbb adc mov jmp sbbl outsb adc pop mov mov rorb flds addl int push test icebp stos sbb add aam pop stc sbb imul pop and fnstenv punpckhbw add fprem1 imul mov pop adc fildll adc xor pop cmpsb dec mov mov pop jge or or movsl ljmp jecxz out arpl xor into xlat add rolb inc ja mov pop popl pop (bad) add cmp adc pop sahf and stos fist add jge pop mov sub and fsubl mov sub mov push xor sahf (bad) fcom or (bad) imull sbb pop pop cmpl icebp (bad) icebp sub pop mov daa jb popf in lea jne out leave fs cmp scas shrb test icebp inc cmpsl stos outsb cmc add ret scas sbb add add push mov push add lret sub jno in std dec mov imul rcrl inc cwtl mov xchg and dec into xchg sub push xor fs xor or mov sahf daa iret cmp adc rolb (bad) clc fidivrl repnz jmp xchg adc jmp xlat cmp movsb aaa scas jle dec adc push jno (bad) dec ss add push push cmp repnz dec dec test scas les ja mov push pushf call leave mov dec cmp sbb and inc data16 jmp out or idivb cs adc dec dec cmp and test int3 push mov js push sub lret aad imul loop jne inc fwait iret int3 insb pop lods xor aas xor stos fst xchg and (bad) mov clc xchg (bad) pop push mov pusha xor lret cmp dec outsl int inc mov cltd data16 lea leave mov xchg (bad) cli xchg jge addr16 xchg in add mov je,pn or jnp test popl pop int xlat lret pop jae mov mov mov mov pop sarl pop add ror xchg sub hlt jp push add fdivp and add add xchg inc movb xor add aas adc jb dec test rcr aas fnsave sbb cltd pop push hlt or mov xlat mov xchg test inc add int (bad) (bad) fidiv mov sbb and and fidiv popf xchg jne incb jmp and dec fnstenv jmp imul ljmp mov add add mov add sub adc ret out mov sub sbb cmp test push call std sbb lods les push lea les mov js (bad) repnz dec lret cmp outsb mov pop jp ja jbe orl lret test sbb mov arpl push lret cmp and add add cmp push stos fs mov lea mov push ret stc pop stos mov inc adc fisttpl and sbb fadd sti jge inc xlat mov std test rcrl clc jmp loop std cmp adc (bad) xor cmp mov mov adc aad and push fistl outsl jl add stos test jno int3 test xchg aad pop xor push gs fmull jae nop pusha mov outsl movsb in inc mov das movsb mov (bad) ret int3 push scas push and gs mov mov imul jecxz cmp insb loope outsb dec mov pop mov mov lahf sarl mov dec push cltd cld (bad) jo mov (bad) lods or nop movsl into jbe mov add pop push xor ret call or jg mov into mov sbb outsb sbb xor popa fildl push mov add cli loope jle insl movl mov cmc add je adc mov pop aaa repnz std sub outsb pop push adc mov dec push outsl fldt outsl dec sbb inc decl xchg sbb imull add ret lock popl jge rcrb imul loop out ja mov add (bad) aam push int jne sub andl xchg jl mov imul jl push (bad) sub scas push daa in jecxz mov mov fstps sbb sub push fistl xchg (bad) sbb xor mov jne pop and fbstp dec sahf xor jne mov psubusb ja fs mov loope push xlat adc in pop pushf cs jmp aad sbb inc je cmp popf (bad) notb roll xchg (bad) add sti mov mov jbe adc mov lea xor jns sbb xchg push call mov loopne dec dec ljmp mov aam out fnsave (bad) mov aas fidivr mov adc rcl andl sti gs idivl mov scas mov call fdivrp and scas fisttpl icebp aam mov adc popa inc aam stos test or fsub leave sbb shlb lcall dec adc xor into loop mov inc arpl add xchg inc data16 cmc les and in adc sbb adc and push sub xor cmp add icebp enter mov or mov cmp mov jb es fisubr and jp (bad) mov inc push in dec rclb dec mov je cmp mov push in ffree jne xor jnp loop adc add xor mov mov leave dec imul addr16 pop mov cmpsb and fwait pushf push mov ds jecxz jmp popa sbb mov out fnstenv push les mov aas sub jns fwait cmp and cmc mov pop insb mov fcoml icebp cmp cmc dec jbe mov inc push inc loopne test jge add in pop movsl and mov sub xor imul mov cli lods es fmull add int3 popa lea cmpsl fistpl xchg pop inc push sub inc aaa cmpsb and jp jno mov leave dec dec scas mov xchg mov xchg repz cmp rcr sub sti sub jnp daa dec jne outsl sbb shlb add lods arpl inc pop xchg and inc shl and pop mov imul xchg adc or cmp and addl fistpll push and mov jmp std dec bound push divb pushw ja pop stc js scas mov or push inc ret loopne cs jp js mov andb mov add rcrl add aam ja aas mov sbb jp lahf pop out xorl adc fdivl mov stos iret fsub dec dec pop xor adc xchg cmp jo cmp lods sub mov repnz cmp (bad) jbe xor test xchg out das xchg mov fmull sub mov and xchg dec std pushf jge adc inc dec mov mov test ljmp mov test sti icebp or bound cmp xor lods aas scas sbb je data16 dec inc in cld lahf iret jmp xorb mov aas cmp mov out pop cli mov int scas cmp stos mov cmpsb cmp jl cmp xor out pop pusha xchg push lds xor mov sbb xchg cmp jne fcompl xor dec ja popf (bad) dec pop sahf add add pop push mov pop and movsl or rcrl push in push sahf cmpsl mov sub sbb imul ss and mov pushf push sahf jg mov scas fs mov iret jmp jae add inc jmp and inc mov stc lcall data16 mov or ds push jne push mov (bad) mov in add movb repz jmp out mov lea flds or adc cmp pop adc mov cltd ret repz cmp push (bad) mov int dec fs in mov fmul movsl inc lods gs ss js andl out clc aas inc dec sub mov daa or cmp mov data16 pushf fisttpl out add add fisubrl inc cmpsb inc lret fs mov ss mov lods jns fdivl sbbl sbb mov je dec sub es cmc sbb mov fld mov sarl (bad) pop sbb push push dec push in cmpl mov xchg xor mov daa repnz mov mov ss shr add in lods stc test out and add faddp icebp lock rcrl mov roll cmp lahf out xor cmp popf adc repnz scas and xor jne test mov movsl popf xchg rcrb push or dec sbb or lahf add pop out daa out pop xchg lock jns mov push andl inc jb add lea cld lret cli std xor push adc add add jo xor in call cmp hlt mov mov sbb cmpsb xor sub daa ret in ret and xor loop fcoms mov add inc fistp mov sti test pop pop leave jge es add imul ljmpw mov imul mov or gs add add ret cmp lock je xchg mov push clc into dec popf jmp js inc pop je fs cld or add inc scas insl lods in test pop pop xor xchg nop xor mov cli mov jo xor rorb fiaddl ljmp (bad) fs fnop push test scas cmp je addr16 add jb mov cmp add add jg mov mov (bad) in test lods mov ja push movsb scas mov subl das xor rcll test das dec xchg mov ret out mov orb push pop push (bad) sbb sub and mov out pop out inc dec frstor hlt mov inc ja rep cmp and adc arpl hlt clc stc mov inc jg mov add add mov outsl lret sub sub lahf adc arpl lcall jl clc push sbb clc hlt dec imul pop clc dec scas sbb mov xchg test cmp fcomps add xor jo adc je jo inc mov loope push mov and (bad) pop and (bad) data16 pop xchg mov (bad) add jle sar inc subl mov sbb add mov lods (bad) fcoml cwtl jo inc push xlat shlb push and push sub mov sbb dec cmp mov jbe mov lea aas loope push push mov xchg lea popl mov movsl test push add (bad) ja add cmp mov lock ficompl pop ja jg lcall push rcrl sub clc and cmp inc sub mov adc inc sbb mov scas (bad) fcmovne imul cmc mov imul shrl fs in push xchg fs (bad) das nop mov (bad) xor dec dec xor or cwtl mov push mov loop lds pop aas aad jmp sahf repz mov inc test in aaa pop xor mov inc pop js mov adc push jg in jmp dec push clc jmp pop int3 xchg lret leave push aam mov ljmp (bad) (bad) or out rolb push (bad) add pusha cltd ljmp loope (bad) push imul rcr cmp cltd ret xchg scas movsb inc jne add daa call add lcall (bad) addr16 out jne mov xchg sbb es sub fdivrl lods (bad) ja xchg pushf dec dec xchg inc loop fldenv dec add mov jp mov xchg sbb stos lods outsb dec ja daa xor pushf fildll out and sti push and or mov dec pop fcompl push add add gs dec push xchg pop pop pop sub imulb add xchg inc rcl shr or enter insl rcrl jno out hlt xchg sub leave repz movsb pop mov or add ljmp push cmp add mov mov out int3 mov mov les adc fnstenv popa (bad) gs jle adc add cmp orl dec sbb outsb and aaa cmp add sub xor fldt hlt pop outsl dec cld xchg ds repz jae sub cmp pop pusha inc pop mov lea pop bound mov jmp push sub jno adc mov and movsl es sbb (bad) call lds adc cltd adc mov imul jno inc in aas sub arpl call cmp push cs xchg mov inc push std ret mov ss sbb repz sub push icebp (bad) adc call mov push sbb outsl mov mov call fsub xor or cmpsb sub stc inc mov jl fstpl push clc xor fildll inc mov jg inc add or xor pop in mov mov out mov sbb add imul popf dec jge mov jmp jb push insl dec sbb adc pusha shrl pop sbb or cmp push sbb sbb jecxz dec jl adc xor nop mulb mov in jns jmp sbb add mov mov fcompl adc arpl stos hlt jbe cmpsl add adc sub (bad) insl pop xchg sbb or xlat cmp xor pop sub inc xor add (bad) mov mov pop pop out and fimull jns mov xlat mull push arpl cmp mov je mov cli xchg andl mov add dec movsl push int mov xchg push in jb mov call gs adc sbb call dec xchg xor dec mov sub sbb subb (bad) lock lea jno and jns (bad) sti scas push loopne inc adc and jbe and repz or fs mov mov cmpsb scas outsl mov mov aam sti aam icebp iret or push insl fadds add add add add adc sbb jl xchg enter popa cmpsl les loopne adc jg adc push and (bad) mov push std repz push sarl fsubr dec test xor or jecxz push ss sbb dec jb lret inc pop or xor xchg (bad) repz mov leave jge fs xchg xor insl cmp sub popf and mov add push add add add push daa int3 pop push or imul adc dec or dec ljmp sbb mov cmp or jmp test mov in xor rcl and jo outsl mov inc testb fcom faddl int3 mov std in mov insb shr add lea mov mov mov ja sub stos incl stos (bad) loopne pop in add imul xchg clc xor les mov daa sbb (bad) xchg aas xorl mov aam int3 pop adc push push mov or es jmp inc pop push or les int shlb push push add cmp push and lret repnz fdivr pushf jns fdivrs adc jns and lds dec jecxz addr16 roll xor cwtl imul shrl stos daa out out pop add mov mov pop push fisttpl sub pop into ret pop (bad) call jg (bad) imull sub sbb loop sub jno xor lock push push icebp (bad) call mov sbb mov ljmp sbb popl mov lret nop mov sbb lcall add add and fisub jno mov mov aas push push lods stc adc push sub frstor pop lds and test (bad) xor add das addl ds pop add add lods cmc out add popl imul push dec adc test les mov mov or cmpsl inc cmpsb pop and adc xor add add add pushf fwait add mov xchg nop (bad) mov pop jb popa xchg pop push ret in xor add sub rolb out fnstenv sub loopne sahf inc insb sarb sbb in inc push cmp movsl mov push mov adc adc aas je cmp jno test mov cmpsb sub or repz pop jle xlat fildll cmc cmpsl insl ss hlt add add jmp dec addl insl dec lods setl mov ficoml fwait out push xchg scas dec lods int or cli jmp std (bad) sarb cmp xchg pop imulb mov subb dec xchg pop fisttpll pop repz cmp in xchg jmp out sbb add sahf rolb add movsl push and sub addl add add add add in push mov sub repnz adc jmpw inc incl nop push lret pop sahf ficoml out pusha (bad) dec push cmp inc jns stc cmp insb loopne xlat hlt ja aaa ret lret fsubrl aam sub xor sub sbb jecxz and cltd fwait push loopne (bad) mov xlat bound or ds dec (bad) aaa cmpsb mov jns push push test out std clc sub jge dec ds sbb jl maxps mov jg icebp xchg in in (bad) (bad) mov leave mov push leave (bad) shr or int f2xm1 sub ficompl mov mov lods loope dec sbb inc int3 sub scas out adc inc test xchg std in mov push lds out stos add shrl cli js xchg imul push xchg add add inc stc adc shrb das xchg loop das xor cmp fstpt sbb lock sbb push imul jl (bad) sti mov pmaxub leave push jmp fnsave mov mov jae aad stc dec push ja (bad) dec movd into inc test iret aam (bad) repnz inc push ja mulb popa cwtl adc inc clc es pop pop push jne lcall push add mov clc jle rorb sub pushf xrelease (bad) pop push mull or xchg (bad) or dec loope ja cli adc xchg cwtl pop mov ret mov mov dec in data16 add cmp popa add jnp in dec dec out cmpl imul mov inc lods mov mov add pop cmp sbb imul add in fwait add cmp test cmp data16 inc add je push ss inc cmc mov (bad) push in int dec lret lods mov (bad) popf and imul and xor movsl in mov mov xor jl dec out js adc mov lods xchg iret out gs test mov sbb shl popf jo repnz add add pop in (bad) jnp inc rolb jg das in jbe mov mov mov mov imul lret cmp daa fimull and into into inc fs nop xchg sbb push inc inc xor mov pop rcrb into inc les sub lds mov lret out pop pop pop jmp pusha sti jbe push aas int scas fsts stos insl add pop fucom mov iret push pop cmp pop sbb cmpsl dec in addr16 sbb and adc nop pop mov dec and add fwait push in imul (bad) jns pop lock cmovno aam inc pop mov fcmovnb and xchg add xor setle mov sub repnz popa mov lods into mov lea push push test adc pushf and fiaddl add cmp dec rclb (bad) dec (bad) leave mov mov mov mov jns inc pop jo (bad) jmp mov add not cmpl shlb pop sti mov lods or int mov inc les xlat jns leave mov inc es inc (bad) int test jno mulb inc inc (bad) loopne arpl andl cltd es push xor rcrb xchg add daa out mov push push mov mov cwtl outsl fstpl lcall icebp xchg or movsl stos mov pop jbe inc mov add fs test xchg (bad) cli sub xor jmp inc xchg into popl lock outsb xor mov mov jl pop push jecxz repnz mov pushf jnp fidivr jno out add bound xchg test jg stos lods and add fstl lcall mov aas mov push aas js fistp js jnp mov add icebp arpl jo popf cltd aam mov jae adc repnz mov dec push mov std lods mov outsl test dec dec out fnstsw add xchg call arpl scas adc lcall push (bad) sbb inc (bad) aam loop fs dec inc push dec adc push and push mov dec mov dec xchg dec aas lods ret dec cwtl and xchg mov addr16 out sti mov jnp xchg pop nop and scas sub ja lahf mov push sub add sbbb shr das or push outsb fistpll pop jp and dec pop lods gs sub gs mov mov insb add add sti pop cmc and lret jae sub adc fs cmpsb jg adc push sar cmp ret repnz popa and xorb xchg sbb dec and in dec fistp out lcall loope (bad) pop lds sub pop loop jbe fisubl mov lcall cltd cmc cmp and ret (bad) xchg push jmp add cmp aaa (bad) adc push gs jge movsb push sub aam xchg jo mov stos fisubr push (bad) xor push (bad) mov push movsb or push xchg sbb mov xor pushf movl iret push dec arpl sub mov leave xchg pop xchg mov insl or jb cmp mov dec inc call test xchg add jb fadds add add lcall jo enter scas xchg std pop in fwait cmpsl divb xchg cmp xchg mov jbe dec insb xor dec and jne je insb mov dec dec ror ret cmpsl sub ror sti (bad) jae xchg call mov jne (bad) les push dec push aaa mov js pop push mov mov push in dec insb mov test mov out sub jecxz jo add add call pop push push roll xor aas aaa push xor ret and xlat mov loop nop cmpsl dec stc mov mov jg mov movsl add scas repnz out xor cmc or out add lret mov sub jb fwait jbe es das push stos pusha jg xchg jo scas or test (bad) bound fldl (bad) mov inc push dec xor out mov sub rol add cltd adc dec imul mov std push pop xchg dec ret pop stos aam jo (bad) adc (bad) clc sbb or lahf in fbld sbb ret and jne and repz arpl mulb nop addr16 jmp mov pop sub ss cmp frstor mov add mov shrb inc lret jg rcll fldenv and imul mov cmp lret out gs dec or xor xchg in pop and call (bad) push cmp mov and fisubl mov test test mov push daa mov jb imul ffreep mov fdivl rorb loope insb jg (bad) out aaa sbb adc pusha sbb rolb mov repz jg jl jmp mov mov shrb or dec lods rolb call clc push aam fs cmp add dec push push ret adc cli xchg xchg repnz movsb push fbld sub fistp into adc dec mov in sub es out cmp imul in mov cmpsb jae push adc out push into repnz aas loopne std popf (bad) popf (bad) dec stos jno jl out stos dec loop ret cmp sub inc mov or mov ffreep ljmp and lds icebp test mov add jo adcl pusha push mov inc sbb cs rclb and add js mov loop xchg inc das ljmp xor push lds jae mov je lcall mov jb sbb inc push and mov pop cmpsb xor jns sub or ss fnop dec pop mov pop in int3 fistpll ret scas lahf inc lods dec ds ret or cwtl push test (bad) dec or and cld loopne dec mov pop in inc sub push dec cmc out fnstcw sub mov dec imul cmpsl (bad) add pop rcl add inc mov lods lea inc pop jbe call mov insb dec (bad) and ret out je shll jle push add aas (bad) mov roll sar rep inc push cmp pop popf mov xlat jns mov loop push mov sti in pop fild scas lcall push ds pop scas (bad) mov stos and add addr16 lods mulb jnp push dec test inc imul lds dec xchg into xlat call subb pop push sub sub sbb imul fs mov inc fadd xor xchg stos xlat xchg push adc lahf les call add add and mov cmp outsl daa dec push add outsl imull push insl push dec (bad) push xchg or leave fistpl mov into push fs and mov inc cmp add sub xchg dec lods cwtl sub and jecxz xchg pop ret xchg jnp jle inc xor bound xchg enter fnstsw fsts stos mov mov inc dec push mov pop add mov xchg (bad) jl daa mov fs adc add ficompl divl jnp test andb rcll cmc enter inc mov jp and mov movsl xchg mov or sub mov je outsb je mov pop movsb ret andl loope pop pop pop and rcl insl fnsave add xchg loope jg (bad) (bad) in mov test sbb push pop push mov out sarl dec mov push jg push cmpsb ljmp enter mov daa (bad) push jae xrelease enter push mov int3 (bad) sub fisubl lock sar pop xor addr16 les in es decb daa fwait mov cmc adc pop rolb jle,pn jae repz aas fsubrs add add aad fisub popf outsl cmc inc xor fdiv add jb ds mov in ss mulb movsb rcl js rorl xchg xchg das rcrl or fisubr push sbb mov mov ja mov lret add out das ror ljmp adc dec dec fcmovne jo pop int test int mov sub cmp cmpsb in das add jno jo and mov test fsubp add jle and sub xor cld sbb into fstpl dec mov or cmp or xchg mov test push jns cli fdivp adc cltd cmp or data16 add xchg cmc dec popf xchg leave mov adc (bad) jbe or fbstp sbb popf inc adc aaa pushf stos out daa dec lds es pop inc inc mov pop mov stc es jnp rolb jne push xchg mov aam fstl and je stc lods push pop dec scas repz pop out fs mov cmp add fldcw xor (bad) and xor cmp jb push jne iret aas add das pusha mov int lret cmc fnstenv add add mov shr (bad) jmp out out add fcomps cs or data16 pop adc jge sbb in push pop ljmp (bad) and cmp (bad) icebp push push adc dec arpl ror les pop cmp fwait xchg scas jmp xor pop jb mov loop pushf inc add inc dec test jo cmpb cli pop imul out aad sarl add mov mov and (bad) xor sbb idivl adc xor (bad) mov lods lret cmp and xor and dec xchg push inc jge (bad) mov or mov and push ret test mov int mov idivb push adc or arpl cmpsb lods dec cmpsl lea ret out pop xchg inc push and sub outsb push mov scas cmp ja dec inc jmp pop aad icebp xchg (bad) movsl mov inc addr16 mov mov xchg int mov lret mov and cmp adc adc push das and fwait stos and xor xchg xchg mov test xchg and mov fcoml stc aad inc xchg inc (bad) and fs mov bnd sub cmpsl pusha jle out add ljmp aam sbb inc das adc dec flds xchg xchg aaa pop mov jns je (bad) cmc xor ja inc push and mov arpl mov sub pop add fidivr pop and sbb cmp jl or jne jne dec push add mov pop mov out ret dec push inc xchg xchg movsb test or das pop lods bound pusha mov pusha adc jge xor movsl mov outsb sub leave dec push idivb inc dec test addr16 xchg rorl or and xor dec mov in adc mov aam jl orl test mov push or add xor or xchg cs lret mov scas mov add lock jae sub pop fisub xor enter mov pop push push cmp ds daa xchg das into ss imulb and jnp (bad) inc nop pop mov sbb popf mov adc int3 test and xchg pop ja cmpsb push pop push mov leave xlat and xchg push mov mov stos icebp jne test sub aam in or mov jns fcmove cmp (bad) mov scas add mov xlat mov mov jb pop (bad) sarl pop sub xlat rcrl je hlt add test scas pop mov fstpl push rcr int3 mov jp mov adc jns,pn xor and fcompl insb int data16 cmp xor sub das push mov xchg in mov mov add ja or test adc adc fiadd (bad) test (bad) popa xlat push adc jnp cmpsb push jl int in sub sbb in and or xchg insb dec pop lahf or push xchg jns or dec xchg lret xor test int3 out icebp and popa push pop stos pop fbstp imul mov aaa push sub shlb mov cmp sub cld jge dec sldt add (bad) sbb mov push add fs movsb jbe inc gs je stos xlat pop and mov scas cmp jb pop inc lahf call or das add repz dec lods mov xchg stc jnp lret sub fdivrs sub xor push imul xchg jns adc adc mov not mov lods bound add or push loop scas jns mov or xor or or out or jns loop lea mov cli shll imul lods adc out jmp pop mull or cmp xor out movsl jbe cli std in nop jmp mov xor out xchg mov cmp ficom adc push mov add out loop jmp loope jo push (bad) mov jmp scas loop adc mov jmp loopne push xchg cltd mov push and out mov adc dec mov sbb cmpsl pop gs loopne mov inc shl call lods divb in scas dec fcmovu iret xor out in jmp dec xchg icebp dec daa mov xor (bad) jne scas pop jp and aad xor dec add sbb and (bad) (bad) pop mov out iret (bad) movsl pop add fwait pop lods outsb jbe adcl pushf jg (bad) or add lods and mov out mov pop sub dec or frstor ljmp pop xor cmpsl mov jle leave push imul scas fstl add call aaa lods add add add mov lock xlat lret add fstl inc cmp xchg iret lret aad push (bad) loopne (bad) std movsb pop cmp pop or arpl xchg or in bound in push adc or jge fldl cmpl scas jae mov fs adc pushl lcall pop push dec add rclb fmuls pop and push movsb and inc dec test or dec add xchg mov in add jb sbb popa jnp dec cmp pop sarb insb daa push test push ja mov insb add and pusha jmp xchg mov pushf insl in sub sbb inc addr16 jo fwait mov jp js stos stos mov rclb lods std leave push enter lret (bad) push out jmp push test add cmpb mov dec (bad) xchg push adc inc addr16 bound popl fwait pop inc pop adc mov cli (bad) xchg mov dec inc or pop sub loop call add push loop inc int3 sbb inc rcrl pop aas jo icebp mov push outsb popf mov fcmovu cli (bad) aad daa adc xor push inc inc mov arpl ss xchg inc pop dec jo ss xor xchg lea lret aas mov push nop inc jp lret ljmp add cmp sub dec cmpsl push sub mov push xorb pop mov sub or mov mov (bad) dec shlb jg inc xor lock pop dec xchg fdivrs mov cmpsl mov add std xchg jbe flds repz (bad) in jne mov notl (bad) (bad) push mov rcrl test sbb lret inc jg sbb xor and jg xor enter adc or or push imul call xchg add jmp push fisubrl xor movl cmc mov bound add add push mov leave xchg rorl enter cmpsb cltd mov and mov sbb mov xchg pusha push xchg xchg mov adc clc sbb pop xchg add loope push and movsb mov and test aam ss aaa fs cmp xor and call call lret call push xchg sub lret xor inc pop jno aas pop add add (bad) (bad) scas dec pandn ja (bad) cmp clc pusha cmpsb push fwait imul (bad) test sub in out dec cmp loope xchg pop jbe pop mov sbb sub data16 and cltd mov adc insb xor jmp inc sbb mov cwtl stos cmp outsb pop sbb imul mov aam ljmp mov xchg push cmp iret mov fdivp popf add xchg ljmp clc fs int3 insb aad shll leave mov mov jae aad and cmc push sbb lret test push mov (bad) leave out mov inc int inc dec jnp into jbe sub xchg sbb imul cmc negb mov sub sbbl and inc (bad) clc xchg add in lret add shl in add and imul je mov inc mov repnz lds (bad) loop lock or adc lods ja jmp (bad) je imul push rcll cmp adc or (bad) hlt inc adc bound ret idiv mul int3 gs dec inc add xor arpl int3 jp cmp mov popf pop xchg dec xchg (bad) dec sub icebp mov mov add add aas push add aas xchg sub lret push jge dec push fisubr std mov pop bound cmp mov out or hlt mov jg movsl data16 mov sub outsl outsb in mov push scas dec mov gs std bound roll add mov jp out int3 add sbb idivl ja sbb int add inc adc cld add andl pop (bad) fwait (bad) mov mov (bad) popa sti repnz lods lahf mov lret xchg sub movsb push push fimul aas push mov popa (bad) lret and xor call mov add mov dec sub xor cmp dec push loopne jbe mov jl imul jnp push stos mov add add mov and jo in sbb sbb xchg xchg xlat xchg outsb fcompl fnsave inc shlb bound pop addl push mov sub arpl gs xchg aam in pushf int3 bound pop and xchg daa rorb pop jnp sub mov or mov push cmc and sbb enter out mov xchg xchg push out (bad) sbb or and and adc (bad) push sbb push push push mov gs xlat jmp sub dec cmp ja,pt or pop in outsl jp fstl xchg (bad) adc stc add pop jne stos xlat jnp jl mov aad sbb fsubs rep push ret sar push xchg lcall mov cmpsb xor mov test jo pop adc or cmp movl add add mov outsb cmp sbb shr dec xor pop jns or out cmp add mov daa mov mov out push imul mov ret xchg movsb mov imul fist leave jmp pop es lea add (bad) (bad) jae jl cmp (bad) pop mov push out sbb lcall inc mov cs lahf jmp inc push xlat add cltd mov mov sahf movsb leave (bad) mov popa pop pop ret sarl mov icebp aaa outsb or sbb mov into push add dec jmp aaa (bad) out pop mov mov jp fistpl pop (bad) adc arpl or jg mov xor test cld leave mov pusha jno pop lahf cmpsb ss sbb dec lcall ljmp jnp add add lcall pop stos sub and push mov adc and outsb xchg and in mov xchg nop mov mov icebp xlat pop inc hlt test inc sbb adc jno dec in fstps adc into jmp or jge pop ljmp movsb xchg push or pop push add and xor dec mull js add pop lods sbb xor mov add add ror mov test cmp movsb imul or add mov or popf movsb cs js fwait loop cli lret daa sar stc mov inc mov dec xchg je add scas les dec and leave jno inc loopne iret mov xor popf mov mov adc aas jb bound jae cmpsb fist dec pop xchg push sarl inc xor out sbb adc jne incl call push (bad) imul (bad) mov fwait cmp and (bad) push in cmp adc pop in cmp ds mov ljmp stc lahf fadds cltd imul jecxz (bad) jmp insl loopne decb and jae jmp mov cmp (bad) fwait pushf std int (bad) xchg push jae xchg enter jns sub aad sbb aaa std add (bad) fild test push xchg adc jl xor or lea jae and sbb dec lcall imul inc add sub stos mov scas (bad) push stc push addr16 test jo push ret mov hlt jle loop out or dec fldcw adc dec mov decb jno cmpsl dec ds inc cltd add lcall push pushf cli nop data16 or int mov mov loope dec pop jnp es add cmp and jns sub jecxz imul pop rorl push int3 pop pop xchg push sti bound vaddsd cli pop addb aaa cmpsl aas test inc pop mov call jae call sbb mov and dec cwtl push cltd add stc scas dec in adc inc ss mov movsb cmp addr16 mov fildll ja mov lahf lock ret fcoms fistl add repnz test xchg jge jmp pop outsb js out push adc jg outsl mov loopne fwait ljmp xor push add push sbb imul cmp sarb ds sub popa sbb add add jge jecxz xor cmp mov mov pop iret mov dec mov inc repnz jmp add xor fstl sti push add (bad) adc mov test mov dec and mov pop repnz mov mov pop (bad) mov imul xor cmp test jmp push je repz xorl je xchg fistl cmp ret lods stos (bad) icebp outsl push push inc int adc push xor mov sub ljmp popa xchg pusha push clc xchg ss jns sbb push cmpsl mov lahf adc out (bad) scas jmp mov (bad) insb aas xor sbb adc cmp fwait sub jae xor adc push test mov add sub xor andl andb cmp add xchg lea mov or aad insb imull cli fwait ja imul jmp mov rorb push nop add inc jmp mov push daa loopne jo ret cmp mov push stos pop ret push lret (bad) adc lods or cwtl sbb enter or add es cmpsl xor pop mov add add lret test rol daa xor sub adc push out push cmp push fdivrp (bad) je cltd lret mov sub xor cld sbb flds stos lret inc ljmp scas dec fs inc jb add pop rcr and sbb inc sub pop inc mov ds iret jmp je repz pcmpeqd xchg inc ja lcall leave sbb repnz mov insb loop jae dec scas dec test imul jno inc cmp push xor sub xor push gs inc test sub inc ja movl repnz outsb insb clc adc adc call movsl pop push sti inc xchg cmp and insb loop cld std xor lahf sub pusha fld push xor or les add inc stos xchg out lds push mov stc sbb jp enter inc sub faddl daa stc add or (bad) cmc push es out pop punpckhdq jge push aam adc in mov inc fs pushf inc dec (bad) mov push push sbb jge int3 cmpb outsb frstor adc pop cwtl cltd enter push (bad) aaa and das in add add add arpl mov mov mov sub jno fldenv pushf in rclb jnp ljmp aas mov mov in repz aad loope fsqrt cmp add bound mov sbb pop and mov jb or leave push push inc adc push lret mov data16 sbb xor and arpl rcr cmp xor shrb add jbe adc test mov pop jg mov (bad) lds sbb mov aad insl inc jne lods add mov inc add lahf push out mov add add pop (bad) call pop jae adc lea aam gs hlt dec lret push add xor push jo adc push cmp jns push ljmp add or sub mov push mov jns mov movb out add mov test xchg dec pop fstps (bad) jl sub int cmc push cwtl dec mov stc (bad) xchg stos xchg jg and mov or inc dec loopne rclb lahf fildl mov andb movsl jo stos pop jecxz cmp inc dec cmp in aam pop fiaddl add push xchg cmp arpl pushf xor (bad) mov mov xlat ljmp stc pop cltd xor pushf dec fnsave push repnz and je and fidivr sub mov jno (bad) jge inc repz fadd adc fs dec sti push gs and call push sub push sbb (bad) jmp pop jbe adc dec (bad) das mov pop add add pop adc mov sub push loop int3 xor insb gs xlat mov jae xor fsubrs sbb inc and cld ja fwait js push pusha (bad) xchg jp adc jb (bad) pushf aam cld jno rcrb push or or lret pop sub xchg sbb out idiv inc stos in sub (bad) cmp sbb mov ficompl pop pop mov imul ret jge daa sub cmc add icebp mov sub insb rclb and icebp lds cmpsl lcall bound inc pop (bad) push lock js lock mov stos and insb lcall test xor lcall js cltd (bad) outsl fwait dec mov lock loope xchg popa lea js pop cmpsl outsl xor iret pop fisttpl sbb cld add lcall add add test stos mov xor jb (bad) mov out pop jno mov arpl lods into cmp stc stos pop cmpsb aad cmc loopne cmp xchg jmp cld sbb int outsl out push jecxz mov shl aaa cmp xchg leave xor mov and iret sbb je std dec repz mov mov stos dec or jae sub insl mov or mov cld mov repnz xchg addr16 lods push and (bad) fiaddl mov andl icebp mov add scas leave mov push stos dec das icebp data16 sub repz cmc movl stos (bad) in push inc xchg add pop dec push pop inc cmpsb push mov call add pop lahf (bad) mov mov xor pop or pop test aad mov and (bad) stc stos xlat out out cmp into pop in jmp pusha gs and rcl repz mov subb mov movsl das sub inc mov mov sbb sbb mov ljmp mov cltd sti lods loope clc fstl xor cwtl cmp pop in xchg (bad) outsb xchg repz inc and jg jle inc movsb jbe clc cs sub mov int iret xchg push jns jmp in iret xor or out dec ror popa imul fisttp cmp xchg decl ss loopne xor mov mov addl mov mov adc (bad) cmc into mov or arpl push movsb out lret inc inc fdivrl enter inc addr16 mov fistp xor cmp add add add mov loope push inc inc mov add jecxz in mov dec fiadd mov push in mov lcall imul std jge rorb ja stos (bad) fdivs inc in fsqrt pop sub jecxz mov enter jp not pop (bad) jg mov ret sub and in test mov ffreep out cld in xchg aad push addr16 cmp inc push or xchg lea (bad) shlb scas adc cmp dec fildl push pusha xchg pop dec pop cmpsb pop jge pushf cmpsl xchg xchg push inc jp pop mov pop adc lods xchg add mov js ds xlat fidivl mov fcmovnbe jecxz jmp (bad) movsl mov js rol insl sub pop push jne es xlat gs add jb fnsave jmp out sub orb aad push pop cmp rep andl cmp scas add and add pop div xchg out pop fs flds in arpl xor pop fs mov xor daa addr16 cltd push inc andl and adc out pop (bad) mov push and add lahf jno test cmpsb mov pop mov in sbb idiv sbb imul aam repnz aam icebp out sub xchg pop mov addr16 adc ss jmp mov xor mov pop (bad) mov mov or and arpl mov xor mov push jmp add bsr pop jmp or adc pop jo (bad) lock jae mov std jne mov dec sub push repnz push outsb icebp cs jmp pop lret outsb or icebp jae rolb add (bad) mov lock mov or out clc insl cld cltd push mov out sub pop sbb fwait mov pusha push pop add loopne mov test xchg jecxz enter mov repnz clc (bad) dec call ljmp inc pop adc jl and jmp pushf jecxz xchg sbb shrl scas jbe,pn (bad) int3 lods sahf aas in cmp cmc sbb jle pusha popa test sub lea push push dec sbb lret add add out fnstenv xor and popf mov jae (bad) dec mov (bad) sbb add addr16 mov rorl dec push sub sub insb push mov fiadd in add dec sub xor pop mov (bad) sub or aas or cmpsl sub in inc jae inc mov cmp (bad) lods dec jnp mov in sbb jb add xchg inc incl (bad) jge lods outsl add xor add mov push lret mov popa xchg fadds sub (bad) flds jp ljmp std ficompl fs test leave push in icebp movsb dec mov xchg lods inc xor out mov mov cltd or cmp push push pop cltd cld out cmpsl inc (bad) stos movb je rolb in stos inc jl mov iret test adc add int3 fwait scas dec fistpl cmp sub sbb dec adc dec add decl pushf sub popf sub ret or inc pop add mov xor xor bound lods mov ret stos xchg jmp jbe aas push mov out adc mov psrlq imul adc pop mov sahf lock dec inc aad fldt push call xchg mov enter cmp add add dec (bad) jne mov fistpll addl pop outsb icebp in dec es sub das cmp add sbb xchg arpl fs adc sbb aam mov data16 imul je mov jae push mov vsqrtpd out add int3 out rorb pop cld pop dec jns call adc cmp xchg adc add adc pop pop arpl outsb out mov adc out mov cmpsb add mov out jmp mov incb outsl push fidiv push push jnp (bad) fdivr scas (bad) or push and xchg jbe pop out push adcl mov adc push (bad) fwait inc test dec jbe xor jae push sahf test sbb fild ret movsb push and add add mov (bad) mov fimul out das insl dec (bad) (bad) adc in jno ja jp ret adc dec inc lods dec inc mov push xor lods push sbb xchg pop xchg lret std add iret popa (bad) or decl popf jmp jmp push ja inc not mov add sahf sbb stos ffree cmpsb roll sub or arpl cmp dec insb fistpll add icebp mov les cmpsl adc test cmp xchg gs mov add mov in js dec push movsb xor inc cmp js les scas pop sub jns jecxz mov imul xchg jo xor jmp out dec idivb loopne rcrb aad and xchg xchg push dec stos out pop in sti push xor pop aad add add or push outsl lret push shr es sub cmc call pop mov (bad) dec inc out push inc ret je jl fisubrl dec jmp push int (bad) out pushl jle mov push int or enter cmp or fnstenv xchg int adc insb mov cwtl xor cmpsl cmp (bad) xlat add lahf test dec arpl arpl xlat adc xorl fmuls lea jmp into ret test mov rorl and add push orb mov inc dec jmp inc cmpsl inc mov push lahf mov pop fidivl adc dec cltd in and data16 cmpsl mov ret or (bad) std aam and or and stos nop iret push call add push push aam inc mov icebp push mov cli mov insl shlb and sarb decl and test push in lret fistpll add sub pop adc clc stc ficomp mov cltd add pop cli aas mov (bad) das dec and rcr bound mov xor rolb dec or mov subl mov or jmp loop cmpsb outsl and dec xor sti and adc fmul aas inc dec (bad) cwtl es pop cmp xchg movsb add movsb ret test jg mov arpl movsl jno push mov outsb sti test push sbb clc push repz lcall push add repnz add ficomp mov cwtl std orl aas inc sarb add add lock adcb add test xchg push mov clc jge notb add mov xor clc enter repz in fmul clc mov iret stos (bad) push (bad) xchg ss xor push sbb cmp sub out and push xchg cmp idivl mov jb andl mov scas jge mov push sbb loope xchg (bad) and mov add jecxz outsb stos dec pop subb or inc lret ss int3 lcall cmc incb pop repnz insl inc push pop push cmpsl jge and daa cmp or sub out icebp inc lea addb jb jecxz adc sbb cmp lret or enter les lcall adc cld inc or jae dec popf and (bad) outsb cli cmpsl popa jno push jmp add add add cli dec adc xchg xchg rclb dec push lahf pop cld out jp je and (bad) mov out dec adc mov lods or ret negl mov sub mov mov sarl cmp (bad) jb cmc mov sub int mov push cmp in mov pop addr16 sbb mov or push stc cmpsl add das mov add or cwtl add cmp jo (bad) cmp fstl loope shrl jns jnp xlat out push inc mov test xor test dec (bad) test adc adc or mov dec into mov xchg aad xchg (bad) mov in add adc loope int3 mov jp push in jb inc and push outsl mov mov sbb inc cmp loope pushf add pop rcr in lahf fild daa div pop loopne push imul sub add out pop pusha fs repz clc mov jbe lret xchg xlat (bad) pop fisttp add aam add (bad) int lds sarb cmc dec mov mov pop test push pop fmull cmp out push stos stc imul out adc je bound or add icebp sub popa adc pop sti sbb std scas leave movsb jmp pop or xor jge neg inc dec popf jl lret data16 lahf or sbb aam fsubs cmc int3 dec jl nop xchg es in mov loopne sbb pop jnp std stc push xlat add outsb fnstcw jnp seta int3 push mov push cmp (bad) xor imul jmp add add pop iret push ret push out push imul out and ret mov fadd push mov sahf fbstp sub jb mov jg dec insb xchg inc ficompl lcall add nop sbb clc mov or push dec sbb (bad) loope int3 inc movsb pusha fcoml cwtl mov cmp adc jmp inc dec loope rclb rcrl add addr16 add sahf adc es movsb mov push out js mov arpl adc jecxz pop leave fcoml mov mov sbb fs xlat cs jg sbb add adc push and inc mov sub mov (bad) push xchg cmp ret (bad) mov outsb fldl scas shrb xchg cmp sbb daa ret cmpsb test jns test and mov fwait insb add pop pop ret lahf fnop mov call out jb ret into add pop iret add dec xchg cld stc aas jge (bad) enter scas (bad) test addr16 les fbld pop adc mov (bad) rcrl imul push push mov push mov push sub add ja xchg popf call (bad) jne sbb jp jns push lds jp add and mov xor sbb mov xor mov ja repz stos repz or or xchg icebp (bad) xchg ret lret lahf mov and mov xchg shrb mov pusha mov lods xor std jmp shrb test push jmp pop in scas sub mov ljmp xor fidivrl push mov jmp (bad) (bad) std out or add mov nop and loopne or mov scas les mov std sarl out push out xor mov ficoml adc adc add sub xlat sub dec mov loop inc divb les sub aam mov bnd ss pop subb cmp xchg sub cmp leave (bad) adc cld push jo dec cmp dec subb dec test in inc sbb push cltd dec pop dec and inc xlat jecxz mov cltd mov cmpsb fcomps std es jmp arpl aam (bad) xor rorb stos stos mov lahf jne scas aaa xor cmpsl push sbb adc mov out xor pop push lcall (bad) movsl mov in add add pop inc test jne fs lret xchg add push in bnd push push notl in push lcall cs shl stc into notb cmpsl and es retw test dec mov fcoml push cmc mov movsl sub and adc push xor mov (bad) mov arpl and push lahf jno scas dec lock add clc xchg pop dec in leave (bad) pop ret (bad) xor add int out pushf popa pop subl (bad) bound (bad) xor daa and incl test cmp aaa stos stc and (bad) in test stos mov inc lock in decl adc xlat (bad) pushf rorl sahf scas fisubl sbb fdivr fidivr fnstsw mov adc inc lcall cmpl out mov add add scas mov and mov mov push sub jb scas ret mov mov sti ljmp in inc jns and push xchg adc inc jecxz cld push icebp iret int3 stos xor add fxch int3 (bad) pop test loopne and sub pop and movsl int enter cmp iret cmp fs dec es mov les lret xor (bad) aam mov add nop adc jne pop int adc xchg (bad) popa fs mov mov and xchg mov and cmp popa push dec jnp imul or adcb add xchg shlb mov sahf js pop add mov insl push xor jecxz pop aaa arpl push sub sub popf (bad) jne stos cmc sbb repz aam aas and cs aam stos inc cmp imul fidiv notb les cli and cwtl mov pop rcrl popa inc je dec pop sahf popa xchg bound scas lcall int fwait and (bad) sbb aad cmp and (bad) std cld mov pop sbb test movsl dec js ds bound aas in (bad) dec lods fwait scas inc fwait repz lret add aam mov and sbb jge sbb out jnp punpckhdq cmc mov pop jmp pusha cwtl lret add xor cmp loope repz in idivb adc sub sub cli (bad) xor and add (bad) outsl lcall insl ljmp and dec sub imul add add mov es mov scas sbb lods fidivl jg xchg mov gs mov xor rolb adc outsl add jmp fisttp or nop jae dec sub push dec push mov movsb test xchg cmc mov scas pop fstpl jl mov sbb jno stos mov cmp es addr16 push add sbb inc add and jbe xchg in inc int3 stc mov arpl mov xchg push jge cmp cmp ficomp cld jmp mov inc mov adc inc mov insl push xchg xor neg lcall jle mov pop (bad) fmuls aas and stc push ljmp jbe adc cmpb mov or mov enter dec bound push clc test faddl sub clc shlb sbb cmp inc xchg pop xor psubusb out imul fsubrs and xchg jae jnp xor fisttpl in fsubr xchg hlt push jno je and enter mov out sub lea decb add in xlat jl stos mov in shl std sbb scas lods ja sub in ja clc push add cmp xchg fidiv pop mov lds aad add cmpsl ja push add sub (bad) hlt popa xchg xor push loope popf lock xchg stos jne (bad) push xor aam shlw sbb nop lret sbb adc jl dec mov mov mov pop jnp out sub (bad) bound inc lret jle push or mov bound dec xchg pop repnz push jne jo add movsl iret ret push and insl jne nop mov xor mov push js ret leave adc or lock ss (bad) outsl test stos je aam rcll out mov repnz mov (bad) in mov mov jecxz (bad) push xor add sbb xchg fnsetpm(287 jecxz or dec data16 xor mov adcb das push in stos cltd add cli push xor ror lods jae icebp ljmp mov xor push or sbb push or adc push pop fistl les xor jnp les sub pop in daa (bad) pop jl or pop arpl js movsb (bad) mov sahf jbe rcrb ja adc pop cmp jmp sub sub insl and add mov mov jmp imul dec rorb negl call adc cmp and jmp test fadd mov test out dec lds jno cmp mov dec sahf movsb mov xchg fs nop shrb sub xor inc icebp out ffree stos and mov fidivl fs stos mov mov popa js clc repz sbb or nop add or lret fdivrl in mov fsubr fs or jnp aaa daa loop in dec movsl addr16 pop add mov inc fmull xor jne mov shr (bad) lods popf daa out add icebp out loopne mov movsb cmpsl cmpsl cmp rclb jge cmp mov cmpsb mov hlt inc test push int in movb push inc xchg popf mov adc jg pop rcl fcomps sbb or cmc ja into mov cs add cmpsl jle out xchg mov sbb inc arpl add inc nop ja repz pushf mov sarl sbb mov ret negb xor (bad) xor push daa (bad) stos sbb ljmp mov mov hlt call sahf inc vandps ret add add jg mov dec mov jns aas push or cmp pop aas push (bad) ljmp add adc inc (bad) cmp inc xchg mov cmpsb movsl pop inc adc sub je cli scas sbb and aam jmp stos and sbb xor popf nop loope rcrb test add test pop xor mov dec add cs sbb fbstp push rorl push or cmp xor dec in outsb add xchg cmp xor xchg (bad) jecxz iret mov aad aam and or mov adc insb in xor lods sbb xor cmp data16 mov jne das add aad sbb into xchg jbe jns pop or jb mov loopne add aas icebp sbb xor mov mov jns pop lret xchg mov mov or and sub sub pop lret lret popa pushl add jbe sbb out fisubrl push pop callw mov cmc jae mov imul iret cs bound push mov jle push add add andb lcall mov xor mov add push xor std and rorl lar (bad) cmp dec xor mov mov inc outsb (bad) add jns inc cmp aas mov push nop jb xor clc es mov cmp enter mov loopne and and adc cmp fstps inc sub or push and inc inc cli out jle testb add imul add add and xor ds cwtl add sub sub fistpl sub dec xor jmp rclb (bad) jl push lret jnp and aas cmpsb popa push pop das sbb push dec mov mov push mov pop (bad) out or fcomi fsubrs sbb pop sbb adc sbb jle les dec adc xchg (bad) data16 pusha pop mov rorb mov mov fistpll aas mov stos imul nop mov pop xchg dec sub mov adc sub out xchg add enter xor cmp or inc xor pop push scas test enter pop in lods outsl scas lahf sbb mov int dec popa es xlat xchg adc adc sub add aam icebp insl adc stc or cli jns dec stc icebp enter out into jae pop jno cs lods and or lea dec lret and enter leave xchg ficom pop xchg sbb cmc (bad) adc ds (bad) or pop fsubs jmp and add xchg add decb mov inc loopne sbb jno push mov test cmp ret dec mov dec xor xchg out mov imul ljmp cmp cmp clc (bad) jne cmp out jbe clc pusha mov into pop aam dec sub data16 mov cmp add sbb out test iret cmp inc and or call sbbl out xchg push out and fsubrs xor out (bad) out xor jge pop popf leave xchg cmp sbb (bad) stos sub (bad) or mov fs push xlat adc or rcrl outsl dec outsb leave xchg push test lea sbbb in mov notb arpl xchg rclb (bad) add rcll add jb rcr xchg jle dec test das test add ds cmpsl push pop sub and loop mov cmp mov or pushf stos js jecxz jns jb xor sahf pop or ja dec jns or mov push out lods cmp hlt (bad) push and dec xchg and sbb and adc add pop jbe cmp out lret pop or sbb push push in sub jnp xlat movw add add (bad) jns into cwtl jns push push inc loope in shll lea imulb rcl in lods out add stos mov inc adc pop xorl cmp std (bad) xor push icebp (bad) sbb scas xor jle int3 scas jnp,pt aaa sbb and enter mov fisubr xchg sub mulb popa in lahf push jge (bad) lret pop into mov test jge in call in sbbb cmp xor and popa jno das (bad) pusha or mov fwait push pop sub adc cmp mov cmpsl fldcw mov fsubr push pop add popa out push or sti scas mov cmp jae inc xchg jbe pop std popf in fwait sub addr16 xchg mov test jg femms leave mov test push ds and push mov shrl mov inc in mov scas add and test xor xor mov cmp cs xlat cmpsl out sub je lahf sub pop cmp ret and icebp mov (bad) pusha xor aaa int adc push xor cwtl out icebp rol (bad) mov cmp cld sahf aam fadds adc je jge mov mov lahf mov ret dec xor js mov inc lret rcll arpl xchg or icebp dec fs in mov or data16 jle or loop cltd (bad) xchg mov cmc cmc mov loop test adc in aad or xlat test sti push bound test ffree (bad) mov repnz popa xorl int lds or inc dec fmull loop add mov sub mov push jg fs or clc lcall inc es icebp outsb xorl inc cmpsl and mov mov xor mov movsb sub fmull pop stos or lahf ret cmpsb pop scas jp jmp int xchg pop fimull mov jno sbb sub fistpll inc or out mov sub jne add movntps xor hlt cwtl insl cmp sti clc aas pop sub out leave sti mov sub jecxz and std fsubs mov add mov repz in cmp out push in outsb adcl stc push cwtl cmp cmpl lds push xchg (bad) bound pxor add cmp push or xchg in mov shlb lods lcall add mov ret push xor xlat cmp pop mov rorb stos xchg std jl aas and push aaa lods pop xlat dec push js pusha icebp repnz loope sbb mov pop mov out hlt push push and std xchg icebp sub fs inc stc inc pop mov mov insl into mov sub call repnz pop inc aas sub aaa jge push call jmp add xor sub out jbe push out add (bad) pop outsl sbb inc mov cmp or orl cmc outsl repnz mov mov into gs ss jns add jne (bad) jmp imul and lods push in or rorb lods cmp inc xor frstor mov fisttpl stc push add cmp dec das push cli aas std imul xchg lea mov adc inc neg bound add insb (bad) mov gs inc or fidivrl js jmp cli mov sub push nop dec jo fistpl lcall insl scas dec cmp jnp mov in cmp divl loopne imul shrl fwait pusha inc pop xor (bad) int3 lds add lret or inc mov (bad) cmp jg inc mov mov fstpt xchg lods push movaps ljmp iret mov sbb or outsl dec scas add dec fcoms dec test push les jmp mov jb mov addr16 ds inc addr16 sbb push addb mov loope sbb and mov add sub or jns lret mov adc mov (bad) dec jp xor fmull dec pop or pushf sub and push scas pop add xchg mov mov add cmp shll lahf jmp mov das adc cmc add jno sbb leave xchg ret int3 cmpsl fidivr cmp and push mov push xchg cli lret int mov add mov loope stos sub cli (bad) lock insl jg push imull popf into cli orb test sub push add sub or (bad) pop xchg push inc mov push inc (bad) cmp push sbb ficompl xor mov and cmp fdivr aaa aas cmp loopne mov adc insb rcll push hlt sub add add xor and jl xchg ss mov sub neg insl add xorl out scas pop xorb inc nop test xchg mov xor mov sub or sub test test scas fisub js repnz loopne insl xor inc dec mov cmp out and add in shr fstps pushf testb add sbb xchg mov (bad) stc divb or or hlt sbb or int hlt dec or iret adc icebp out ss ficompl cmp adc push stos push or outsb lods std fnop push pop jae dec (bad) fisttpll xorl out xchg lock ljmp and (bad) repz add (bad) xor add and out dec out jne sub aad dec mov dec mov and jns fnstenv xlat dec mov (bad) sub mov mov lret or rcrl mov insb cld inc xor outsb inc adc in mov mov addr16 imul ret scas movntps push stos mov decl jo (bad) loopne add xchg cmp sub sub testb add xor sbb test xorl mov mov mov outsl test and data16 out adcl call cmc stc adc push xor cmp xchg dec or mov popf add or inc in imul popf hlt out outsb mov (bad) adc xchg (bad) hlt int fsubrl add add add add cmp and xor sub jmp inc in mov xchg mov add mov ret xchg xchg in cmp es and cmp mov pop jmp pop (bad) mov pusha adc push lahf ljmp jbe imul popf xor push repnz add (bad) (bad) dec (bad) mov andb and cld and or add add adc cmp insb pop and aam lods push xchg (bad) loopne and insb lcall fmull inc mov decl repnz daa adc es mov mov ret and xchg mov lods subl (bad) push push psubb xchg sub mov clc jbe pop jmp lea or or xchg sbb sbb add into or (bad) inc inc lea std xor jno push or mov sub cmp cmp mov test jbe jne cli mov push cld arpl mov jnp jbe ja in dec xor adc popf jb mov dec pause pop push cmp sbb cwtl sti sub stos dec dec push pushf lods insl and inc stc test lds scas (bad) fsubr sahf mov mov add mov dec pop sub jmp out je push cwtl lods adc cmp imul push add fs arpl stos mov pop out (bad) ret jg test sbb fsubp jp push jno push mov insl jmp xchg insl dec (bad) fmul in mov mov sub mov loope fwait divb pop aaa inc cmpl adc push sub loop test icebp pop add add lods cmp pop mov fwait and jmp cld bound jns and adc mov sbb mov lods adc sahf je int3 (bad) pop popf dec xchg stos or mov idiv jno dec push mov mov and movsb lea cmpsb andl dec popa sbb jge sbb mov jge sub in jl fiaddl fstpl ret mov mov lods cmp xchg or jb (bad) arpl jle cltd dec or (bad) es cmp mov sub push mov add adc (bad) negl jb stos insl les jmp sub xchg pop (bad) adc test scas cmpsl fwait jno jne fisttp push mov icebp mov movsl mov fiadd mov add add inc loop orl xor dec js pop sti mov xchg adc in jge jmp pop bound sub ret xor call fwait sbb cwtl flds pop jns (bad) sarl (bad) mulb pop daa rorb mov mov jle stos out data16 fsubrp push lds fwait xor pop aas mov movsl fcompl jl scas daa inc and movb sarl add add (bad) fcomip je pop pushf cmpsb mov faddl xorl jmp scas outsb jp icebp dec mov xchg (bad) fisubrl aaa sarb jecxz mov sbb mov imul roll ret push orb mov ds sbb mov pop sub sbb sub mov push mov (bad) aaa add sbb inc jns mov or pop push negl inc cmpsl stc mov loope sbb clc ret je lcall push push add push sbb xchg sbb or sub push (bad) imul pop ss pop or es pop lcall inc and jnp push repnz leave sub adc sbb add loop imul add xchg ja mov xchg or movsl add out mov lods test jecxz int push jbe stos lcall xchg sub repz inc jle imul lret or ret push cs jnp mov sub mov movsl dec ffree dec adc cmc pop add xor cmp sbb rcr sbb divb fxtract dec jle leave ficoml add jno scas mov dec loop negl daa lahf fbld fcoms jl push cmp xchg cld inc sub jb xor ficom and xor mov out rcrb sbb dec icebp ja test cmc int3 pop pop pop cmpsl data16 ljmp push mov int3 test jl sbb stc add sbb xorl xor insl and icebp add fs mov add add push rclb mov jno test ja cs pop push mov jnp push mov nop addr16 mov sti aaa addl dec push sub loopne sbb sbb push das ja (bad) int xor inc dec mov les outsb xchg sub mov adc push das adcb and push jb push popa mov (bad) jmp add add jae fsubrs adc (bad) ror aad (bad) ds sub mov sbb gs in into xchg jo int or pushf jnp insb push int inc (bad) mov inc mov or cli xchg js fsubl xchg (bad) jle call dec mov pop popa idiv cmp movsl mov das cmovs add lcall adc hlt dec ret or or (bad) shrb add clc mov push mov mov loope xchg xchg inc or push stos sub sbb mov sbb cld rcrb pop loopne lock dec sbb xlat or dec mov dec popa adc inc mov shl cmp lods sub pop cmp push popf push inc shlb fwait lahf fisubl andl mov jae mov inc adc pushw sub add add lock enter sbb mov fsubs jno xlat cmp fadds ret inc movsb sbb mov push movsb sbb out push loop cmp sub iret inc add addr16 jno je out and (bad) bound xor cld pushf mov sti xchg mov mov fadds pop (bad) je or mov add cli daa flds addb rol sub mov fcompl xor inc add sbb mov arpl aam add pushf sub lods dec add cli push push inc in cmp idivb xchg mov mov sub repnz push sub xchg enter and sub mov mov pop mov and xchg cmp rcr add arpl movsl stos inc pop lods shll into mov ret jno inc pop cli adc in cmp jl clc cmpsl add or mov stos in test cmp insl push adc sub insl pop popf dec push int3 inc dec test sbb cmpsl (bad) mov pop or mov ret stos xchg outsb mov addr16 cmpsl fs clc add in dec (bad) int add and xor push rcll cld ret adc push aas insb xchg mov xchg jb imul fwait aad mov and xor ja push xchg ret xor repz das ret mov or add jo jo mov add cmp iret icebp jecxz (bad) xchg mov fisttpll jle mov lret out pop outsb loope data16 dec inc sub mov add add loopne insl ja lods ret or and aaa xor or jge push adc mov sub call (bad) and jmp scas scas mov dec (bad) mov mov fucom fucomi (bad) lock mov adc les addr16 and rcll cmpsb push sar cmpsb icebp inc xor adc mov jae inc add inc add ljmp add adc outsl les (bad) xor dec clc int3 or aaa push test aaa adc mov test imul ljmp std xchg rclb adc xor loop mov lret popa jp movsb rcll adc call add scas pop dec (bad) cmp pushf mov enter jge sbb cmp daa add add mov loopne aaa adc in fs pop test inc xchg inc mov jnp out sbb and inc ficomp adcl xchg mov mov cmp add jg cs in mov fistpll xchg adc mov daa push pop gs jecxz dec or stos aaa lcall (bad) sbb mov sub add xchg movsl pop insb push fidivl scas pusha pop mov sbb fdivrp dec in test adc (bad) mov adc nop xchg mov icebp lods xchg push outsl cmpsl xchg and sub test mull mov (bad) push sbb (bad) pushf dec (bad) and push ret and out push adc pop sub popf aad add jge shll dec cmpsb push cmc cltd (bad) mov in sub mov jnp push add add ja fdivs xchg movsl xor push pop jo sbb out or sbb sbb loopne and int3 insl stc jne mov jne hlt sbb ljmp int jmp lock sub jno hlt insl adc cltd jne (bad) mov sbb out into in icebp (bad) inc inc add cmpsb cmpsb addl dec cli add sub inc and mov (bad) mov sbb (bad) (bad) push frstor out fcmovne cld inc mov mov xchg dec xchg jge pop ficom jne mov sbb outsb adc shlb into jnp dec nop mov jo mov ret pop movsb xchg sub jge mov adc and jns je inc jnp xchg bound flds and add dec mov cwtl jecxz fidiv popa outsb fidivrl inc mov testb aad mov xchg dec pop dec xor jg push push jg mov dec mov jg imul mov xlat imul pop test popf push dec adc dec push mov and pop sub mov xchg add les add add mov sti dec sbb sub pop adc add add sbb mov ret push roll pop add les and sub fld mov les loop lods inc mov fcomp xor and jo jns hlt cwtl xor mov dec movsl add addr16 fnstsw xlat pop cmp fistl dec or mov mov add add add (bad) pushf jecxz xlat icebp repnz jnp and pop mov push dec xor jnp jmp shll fwait addr16 adc out mov aam out add mov mov aam enter and ret mov fsubs test xchg inc dec cmp xor push push push sti (bad) push fdivrs cmp std cmpsb cmp out in sbb dec mov insl mov in jbe jle je xchg push xchg xlat daa les jne xchg adc sahf xchg xor mov mov adc shl outsb enter mov test stc jo dec sub test cmpsl mov ja mov sbb ss outsl jge popf mov xor jmp push in fdivrl out aad mov add inc mov and cmpsb aad test out (bad) cmpsb jbe repz lds (bad) cmp dec push fs (bad) shll in add sub jecxz lret sti sbb fnstcw jne pinsrw lahf pusha fwait mov sub xor fwait xor (bad) fdivs cmp pusha mov mov xchg push je (bad) jae mov inc mov stc mov mov int3 inc mov push cli adc pushf dec inc aad adc jge or es sbb iret pop inc (bad) ljmp xor stos jns (bad) jo mov stc cld sti xchg jns cltd lods xchg imul lea cli mov inc jp mov (bad) mov jne mov sbb mov dec lcall add mov jb adc add sbb xor or rcrl nop imul repnz inc call or sbb pop jmp xchg out jnp mov and pop lds aaa mov ja jb cmp in clc xchg mov aam mov mov inc mov mov adc pop cmp fwait std sbb mov mov int3 inc cmp add insb mov jge call sub fcompl cld sarl leave pop insb dec inc cltd mov fbld push add icebp push in cmc adc cmpsb sbb sahf fbld lods gs aam jecxz sbb sti pop cwtl sbb std loop bound ss push pop xchg push outsb add xor xchg or xor addr16 xlat pop fisubl cmp add add fs lods inc mov in push push insb dec add pop mov push jns xchg loopne sub in jne in mov (bad) or adcl cmc jmp out movsl or outsb ljmp in or inc inc xor push int3 mov pushf mov lods out (bad) mov fistl pop push cmpsl jb sub add das sti ficompl or loopne mov fdivp add dec mov and test fsubl stos sub inc (bad) cli pop mov hlt xor add dec cwtl int3 sub mov or pop dec sub lea adc pop xor jg and jne jnp jno stos fbstp jl jg jae dec xor sarl scas adc push loopne lock push (bad) pusha lea push clc add insl mov jno jbe mov inc (bad) push notb cmp (bad) test sar sub popa sbb js icebp mov add sahf cld sub sbb ds lcall mov xor or or (bad) clc jae imul xchg nop pop gs push divb push idivb sbb lods pop mov add or out insb cmp add add push cmp jmp orl lea cli push adc (bad) jmp jmp push scas repz dec inc inc mov cmp and mov inc inc adc test shrb dec sbb idivb pop mov popa jno test sub inc inc decl sbb bound mov ret xor adc pop jl add xchg cmpsb (bad) hlt adc les add stos push mov stos fisubl testb cmpsl cs loopne lret mov jae cmp xchg call pop call sbb lods test mov mov xchg aas test rcll xchg add pop clc (bad) xchg leave call mov stos pop (bad) dec jg hlt mov cld shrb (bad) mov leave test xor fstpl jge in inc adc (bad) pop cmp iret add sbb sub cwtl call xchg iret or shl push cwtl pushf push repnz insb imul bswap jbe inc xchg mov popa (bad) out pop ret sub xchg mov mov enter daa mov daa mov cmp scas pusha xlat push xor or gs mov jge push sub in outsl add ret (bad) nop iret and jg scas push dec rcr add and or inc cmovno add aad fisubrl into sti outsl mov jmp (bad) inc xlat imul mov dec dec add push mov (bad) sti popf xor into mov leave enter aad xor out adc sub popf push insl pop lods imul mov js mov clc out sub cwtl inc fcomp je nop jmp ret mov movl or (bad) xor inc lea arpl mov xor outsl leave mov mov dec scas pop inc adc out mov inc mov push and xor push cmc or (bad) les and jg sbb out enter cs popf xchg push and iret sbb dec rorb push lods mov add sti je aas loop fsubrs out js pop out push cwtl cwtl xor xchg pop adc je sub sar (bad) dec dec inc push jge mov (bad) into xlat outsb (bad) mov subl xchg lret sub (bad) (bad) mov decb repnz push subl js mov jb loop inc fcmovnu into outsl imul popf and es or xor mov add fsubrl test pop pusha in test jle push dec mov idivb dec (bad) out cmp cmpsl fnstenv or shrb idivl roll push adc push or jl incl jecxz inc lods int fcompl pop pusha cli cmp push or mov mov (bad) sub add mov dec jecxz insb mov arpl pop cs push mov push (bad) pop mov push iret lcall out mov mov sub shrb adc xlat dec lret cltd lea (bad) repnz inc sti js clc sbb xor jge mov iret adc adc or mov add mov fadds dec xor xchg clc add add outsl scas mov lock (bad) fcmovnbe mov add repz (bad) jae lret push ljmp out push xchg mov dec insb push outsb dec imul jne mov insl mov (bad) and sub adc and stc insl jmp dec push adc pop int3 or dec (bad) add cwtl ss idiv and mov dec push sub sldt add add dec jo shrl mov inc stos loop in das inc add popf clc xor orl rorl mov inc dec or xor fcmovnu pop jmp imul jne mov sbb leave cmpsl (bad) out into mov ja jl ja mov test lcall lahf gs mov xchg inc pop push push lcall divl and idivl mov icebp add add add enter lret cmp push mov push ss addr16 imul in mov adc inc xlat sub mov or frstor gs add dec add jmp addr16 je icebp mov scas (bad) xchg sbb out sbb (bad) popa mov and lock into mov sbbb xchg sub inc rolb rcr xchg jle xor inc addr16 outsl test or adc lds add add mov data16 test pusha divb movsb xchg xor imulb push xchg hlt xchg repnz cmp mov enter (bad) stc sbb ss mov stos fcomi pop sarl out mov int3 mov push jbe int mov sbb fldt mov cmp arpl loop adc inc out add lds xor pushf push push mov jmp out lds sub pusha inc sub int3 mov dec and sub add or lret outsl inc xchg or mov nop imulb push imul lcall jo add repnz mov pop cmp leave nop in jb mov leave lods fsts aam fcom ud2 add imul loopne pushf jb push push movsb (bad) mov fcoml call jbe pop mov das dec push ret int3 push leave popf cmp out out mov fwait inc jg adc cmp pop stc int jne cmpsb cmc push dec flds stc sub out xchg and sub dec arpl stc aas in mov adc xor lcall sahf out sub out push aaa xor sbb loop arpl push (bad) (bad) and xchg mov fistpll push jbe popl add jg fdivrl add jg daa lret adc xchg cmc cmp fwait arpl mov and subb push mov pop xor mov push mov in xchg push mov test mov add push cltd sub addr16 inc dec push popf cmp loope out pop pusha or lods out adc call lret cmp fisttpll cmpsl in jg add add inc hlt add inc push and mov pop cmp and pop jle inc (bad) je xor xor xchg repz inc pushf mov insb jge push push imul mov push cmp cli push (bad) dec pop sbb or xchg aas and xchg xor xor pop pop out fiaddl xor dec cmp lds sbb jge jmp jae out sbb sar pop sub add add jb and cmpsl sub call and (bad) (bad) fdivl (bad) and pop push (bad) sub fldt (bad) sub (bad) (bad) insl push pop ror movsb scas out mov sub mov cwtl mov adc add dec jns fidivrl cmpsl jecxz jne hlt fsubrs push pop jl push jno cmp aas sbb xchg mov add xor jne rep les pushf jge or push cltd or js inc aad jno cmc push inc pop cmc (bad) mov jmp test in pop mov aam test subb fbstp fcoml adc xor (bad) in fsubs test insb jnp sub xchg xchg rcll add xchg nop cwtl ljmp stos pop test add add ljmp fisub and add jnp cld mov fdivrp sti jl loopne ret add movsl xchg shlb mov repnz sbb mov rorl inc adc or decb (bad) addr16 movsb push jo ss or cmp push je sarl mov add xchg push lahf xchg mov (bad) adc cmpsl in lret mov sbb sbb clc or pop rclb and stos lret mov or (bad) movsl xor mov imul call es cmp mov insb mov dec sbb aaa add test inc in mov push xchg fs push and (bad) cltd pop ljmp and out (bad) cmp dec cmp shlb bound add pop mov push xchg repnz fisttpl lds sbb pop mov push push push jl (bad) (bad) pop and jnp mov adc pushl dec pop (bad) lods adc mov adc adcl addr16 mov add cwtl inc cltd push pusha cs arpl sahf cmp xchg or loopne orb outsb xor or add gs cmp fbstp cmp (bad) or jmp xlat pop mov or fisubrl je and inc jp and test xchg scas ret jge ret inc jmp xlat xlat arpl ss jo mov mov out rclb movsl adc clc pop ss fsts sahf fidiv mov add mov dec hlt popa xlat cwtl push or jne add into outsb xor mov ret insl inc add cmpsl jo xchg mov adc add jge scas fisubr dec loop push jge les movd (bad) mov lret inc pop lock jno jnp xchg sbb cmp pop les in pushf mov test or call test and into push xchg into pop mov lret xchg xchg loop adc add enter adc lea pop mov adc clc mov xchg push stc mov addr16 sub nop fimul xlat ljmp mov aam ss sti jns xor or xor sti out jne fwait sub fmulp ret cmp push sub cld cmpsb movsb sub jmp into adc (bad) jo (bad) mov jbe xchg mov push push push outsb jae pop pop cld sbb leave sbb imul mov add add (bad) loope jg in pop in divb ss sub xor or sahf adc dec in mov dec mov or mov push test add rcrb or jle sub repz js sub mov movntps adc iret lock pushf jbe test imul scas mov test mov aam in sub jo xor add loopne sub xlat xchg xlat sbb push mov out (bad) fsub ds push and adc xchg test lret sarl insb xor xchg mov js (bad) je cmp push dec mov aad dec out clc call int3 lea icebp pop jle and loope int3 (bad) hlt xchg xchg xchg scas lods push les fisubr pop jmp add popa into test dec les ja (bad) fsubl repnz xor jo inc push xchg rcll ret lea lea xchg xor lds xor addr16 aad jno pop shr roll sti clc das in inc (bad) xor out jns cmp xchg imulb ljmp and adc adc adc call into sub mov pop jne mov test std insl sti hlt add sub jmp cwtl xchg lret xchg out lcall arpl aad pop jecxz fisub jne dec xchg leave cli jle (bad) (bad) pop xchg dec movsb jb cmp loop das (bad) mov jno cmp inc xchg mov or fmuls mov dec xchg repnz jmp add add cmc std insb push dec ret fcmovb nop dec jmp (bad) nop mov or dec pop mov sbb pop loop adc lahf fdiv int out push outsl pop aaa xchg sub sbb dec inc or xor insb push out jnp inc test mov (bad) mov lods fwait ret sbb sbb addr16 call mov andl insb cltd testl (bad) or fs add and fwait mov or leave daa rcrl sar lea dec sahf cli lret ds stos leave ret mov sbb shll ss mov fsts pop out or push lea adc xchg push xchg lods and mov rcrb sbb xor sti sbb test inc aad cld sbb pop outsb aaa xor add push hlt mov lds in or mov aaa in cmpsl lds idivl jg aam in js fild out mov pusha cs fildll pop and scas pop pop add and xchg stc adc aas scas sub xor bound das out sbb loop popa int3 (bad) call and lret mov and xor fcmovnu lods xor pop and imulb popa push pop jno mov lahf in aas and (bad) pop aas dec cltd es cmpsb and adc xor xor mull mov pop jecxz jmp (bad) mov mov int3 scas into cmc push fadd dec aam cmc mov sbb test jl cld jle cmp scas out fsubp mov xor fdivr ret dec pop test dec imul into adc rol fs dec (bad) pop shlb (bad) popa add xchg or rcrl push insb adc or mov mov jge adc xchg mov (bad) cltd test mov pushf jmp lret sbb mov sahf cmpsl call xchg sbb add push movb or xchg pop mov mov fs out mov mov sub clc sbb (bad) push decb add movl dec dec xor sbb rcll ret outsb out mov es rorb arpl in cmpsb les cmpsb mov daa xchg hlt mov mov sbb ss mov cmc sbb mov lds int or mov sub sbb insb push push in leave testl dec push rclb popf push lcall jbe add (bad) jno jbe test push pop popf pop mov jno movl ja pop aas xor lret in push ret xor jmp dec push lods add xor inc jge cmp std out xor incl pushf js xchg out lcall (bad) mov mov sar pop push cmp or fild insl inc dec les loope mov jo ret pop xchg repz add adc pop adc jns mov mov lcall cmp dec jmp mov mov pusha hlt nop mov dec test test and or pop lahf pop push mov xchg inc inc sub ficom pop mov dec cmp sbb daa jno into popf cmp xchg stc and add aas (bad) lds insl add sub call add pop mov into movsl flds mov dec mov or repnz jge cmpsl orb sbb and insl out xchg add rorl enter movsb mov fdivrs ss out popf arpl clc pop aam imul inc mov mov sti insl fnstenv add jecxz xchg pop jle inc inc add mov leave push jbe int3 adc add adc dec sub pop add dec or and add adc mov mov jnp imul push cmc shrb (bad) jae popa call xor mov ret icebp shrb sbb inc mov fucomp dec bound pop push js mov inc addr16 cltd mov test push int3 outsb movsl sub add inc add imul jne dec pop dec or dec sub fbld imul and mov (bad) shll ljmp enter leave test popw and dec sahf push xchg js mov cmp into (bad) inc mov adc aad shr mov cmc pop imul aas lea jb adc clc mov sub sub lock jns nop aaa loopne add mov out sbb push lcall xchg lcall ret popf cmp leave cmp stos ss xor xor popf jno lods repz leave cli (bad) push push movsb lds ja jl cmp jb orb int (bad) and (bad) rcrl jle add jb cwtl pop in mov cmpl dec and dec cmp jb imul addr16 (bad) addl add sbb push push or mov cmp mov mov das push jl,pt aaa push incb movsl mov mov pop jp movsl fdivrl mov cmp cltd mov push ret mov fsubl outsb pushf clc dec popa jg mov pop dec js dec fsubrl (bad) cmp pop clc xor test dec nop push je aad hlt outsb jo add mov push jbe lcall add add lods outsb popf test jecxz jp adc lea or sbb mov sbb cld adc js adc push mov sti mov cvtpi2ps xlat (bad) out ds and test push adc xchg and dec das stc push inc (bad) mov jo mov add jbe pop jp mov jle int sbb or or mov addb add xorl xor dec loope mov hlt pushf mov dec push ret fadds jb pop sarl je sub cmpsl je loop sbb jp dec loope das jb mov fs pop sarb inc aas and mov adc std mov mov (bad) test push and lret mov leave cmp inc pop xchg stc adc (bad) subb scas arpl dec insb pop sub adc sub mov lock jmp cltd mov push adc push hlt in aam inc sbb out (bad) out dec mov sub scas lea sbb fldt adc inc jnp mov roll imul inc xchg push leave xchg fistp mov imul mov test mov pop sbb add hlt sub fimull rolb jno add clc push xlat push repz icebp fcompl push add stos sbb xchg fimull lret xor inc dec jg mov dec arpl arpl mov cwtl mov mov lret jp xchg (bad) xchg test cmp pushf ja mov das cld imul mov pushf lahf mov insl jns push mov movb add pop sbb inc aad int3 test in std (bad) jo cmp ret mov cmc outsb gs call lock in test inc xchg jne lds sbbb mov (bad) and sub aam shrb fadd pop pusha inc sbb push xor cmp imul and jne jo int3 xchg add add push xor aas sbb ficoml sub fistpl dec daa jl mov fcoml fcmovnbe addr16 and in pushf in add dec xor xchg (bad) std push jno sub movsl mov cmc jno and jecxz push outsl pop push and ret sarb xchg repnz mov push int mov js (bad) push scas out mov ss cltd jl into pop lret mov addb add push js pmaddwd mov xchg mov jecxz loope out pop aad out xchg pusha pop cltd or shl shrl mov pop push and mov inc pop mov shlb lods xor inc mull xlat lret fisubrl (bad) jge pushf dec xchg dec add pushf mov push cmp mulb xchg dec addb add push mov adc inc xor in pop rcrl or movsl xchg int3 pop fidivr mov inc jnp dec lcall cmp pop mov and test roll push sbb xor push or mov mov and jb mov pop das xchg jbe scas (bad) inc jno xchg sub (bad) xor (bad) cli add inc mov lcall rorb mov out nop imul jns jne mov xor mov mov mov (bad) notb movsb mov mov scas inc sub stc mov adc mov (bad) das dec (bad) mov mov fsub aas movsl add mov sub jbe mov ljmp xorl cmp rolb and les gs es cs adc adc inc jle add ja faddl in into mov lcall xor lea int inc sbb cmp je and mull jne (bad) pop mov (bad) mov jl (bad) adcl dec enter in lods xlat push cltd sbb sbb jne rcrb jmp (bad) or adc nop nop pushf hlt push xor push add and xor notl fildll jecxz xor push js cmp cwtl mov pop xor into loop jle inc ja sbb mov xor repz repnz (bad) lock or (bad) mov pushf aaa lret popa jae sub bound test iret test mov jns xor mov and cmp dec pusha xlat push jns add pop adc mov and fdiv jns fwait in std sar and stos outsb mov mov mov scas sbbl out aaa sbb (bad) dec mov loope lret add iret into mov daa xchg dec push roll and push mov scas mov mov push popa repz mov mov nop adc jmp inc fsubs push add popf push mov rcl js (bad) ficoml push outsb movhlps jbe mov popf jo enter mov jnp jmp insl add popa pusha mov jae stc sbb mov cmp push sti mov inc mov jp jnp aas inc je jbe insl mov stc push xor jnp nop sub xchg sahf xor stos mov cmpb (bad) dec call xor add out add pop cli cmp push in pop push add push mov (bad) xor dec aad sbb in test out mov push sub jg pop and int xor in adc cltd mov xchg lcall lcall outsl and cmp pushf inc je mov mov push cltd lahf rclb add sbb mov movsl jp dec js push popl pop push popf in sbb movsb push pop jl in mov or xchg jo dec shrb out push dec xor or mov adc (bad) xchg (bad) cmc pop aam inc xchg clc test cld and hlt adc sbb test sbb movsb sbb ss or dec int3 data16 xlat mov jp lret inc lods fistpl out mov adc and shlb adc push movsb imul divb inc ds fs mov cwtl fwait mov int3 push cmp idivb data16 or push sub negl sub aad xor and lret xchg fwait pop pop fidivr (bad) push jmp insb xor aas ja data16 dec in jp jb mov inc pop loope stos jns je out xor iret roll add pop mov loop stos xchg mov fwait (bad) loop aad das cmpl ret xlat arpl sahf adc adc iret mov push sbb jp dec or fsubp call jnp push inc sbb pop and repnz add or cli inc and add jl les or loope mov aad fwait mov into scas arpl add pop mov dec stc int call mov sbb mov clc pusha outsb ljmp pop mov or rcl ljmp imul loop mov jae and into push mov in orl out cmp push dec (bad) mov fwait mov lret mov mov rcr loop clc and lds lock sub scas jo push lods rcr and sbb cmp mov push jge sub cmpsb flds movsb add jge and cmpsb jb mov sub mov inc rcll mov sarb push push lahf (bad) mov clc dec ficompl pop xor notl or inc mov test add in montmul cmpsb (bad) and add or lods fiadd pusha int3 ljmp jecxz push jns sub insl repnz nop push sti iret lock popa dec mov jbe sub push js adc and stc pushf mov cltd loope outsl setge out (bad) mov jnp adc lret push sarl int fsubl cli test adc ret sub xchg inc add lock dec lds push xchg dec and push cmp stos jnp test xor fldl jl or or or push mov scas inc dec cmpl push jne movsl repnz repnz les add xchg or out (bad) push cld mov sbb (bad) dec jp clc (bad) out lcall mov mov movsl adc aas inc fdiv testb add insl sbb mov scas cmp in or popa push movsb push in xchg popf (bad) adc mov cmp out stc mov sbb pop cwtl adc pop bound (bad) leave adcl pop (bad) sub xchg es xor addb push aam pop pushf pop and and callw xor adc cld add cmp loop mov inc scas jne add inc mov mov in pop ss clc jp sbb jns mov and mov (bad) pop mov aaa fs sbb js xor jnp nop inc aam das mov ds mov call mov add ret arpl arpl and sub fdivrl push movsl (bad) dec incl sbb int3 fnstenv (bad) jmp movsl sbb repnz shrb xchg add fnstcw in jb jp and mov push push mov fstl fcomps shrl insb add (bad) push in add cltd mov xchg push inc jge nop cwtl out rcrl sbb jl mov sahf rcrb cmp scas cmp fcomip adc ss enter call xor aaa lods hlt push push ss ret imul std pop fxam jl lret jb add add int3 data16 lret mov outsb xchg or adcl dec mov pushw push mov enter dec pusha xor and push cmp jl into js test shl sub push jnp stc pop jae or mov adc xchg fs sbb mov and cmpsl push ret shrl mov imul inc movsb mov and pop push pop xchg add outsb ss mov ds scas loopne leave outsb shr sbb pop dec pop (bad) leave les push cli andps cmp push mov lret cld adc xchg insb and inc aaa fstpl sbb stos mov xor outsb out aam imul pop or add pusha dec call or lret lcall out mov rcll or add xor int sbb push sbb (bad) xor xor movsl sti movsl imul and jb xchg xor adc outsl in lret (bad) inc pop stos xor mov xor add mov mov jmp loop pop mov mov test push (bad) adc xchg and cmp mov xchg inc sar cwtl mov add add mov jle aas aaa dec mov loopne lret jne,pt (bad) je dec mov and mov out add aas and in push sub jmp jnp add adc pop push movb inc sub cs scas cmc sub jnp and stos jg sub dec jnp sub jecxz mov sahf fs into inc inc (bad) cmp inc xorb movsl aaa loope test cs mov jecxz cmpsb in into xchg sbb fcomp fsubrl std push es rolb jp add cmp mov (bad) mov cs xchg jecxz cmp insb sbb mov push jne popa pop and nop (bad) test mov xchg test jbe xchg jmp dec xchg add add pop ret adc mov pop jl cld mov and jl pushf mov mov mov repz mov cmp outsb std sbb das cmpsb and inc and xor xchg sub sub sub mov in jbe mov mov xor subb xchg fsubrl jb rol in repz inc sbb jne dec jle int jb lahf xchg pushf repnz pop addr16 mov mov int3 sbb sarl lods (bad) ret pop loopne nop addb into push add xor (bad) es dec dec mov mov (bad) sub inc jge ret xchg fcomi lcall stc xchg mov and es sub and jl mov jp gs clc test mov add je int push mov lret roll push test jg xchg push divb cld push mov in jbe and cwtl push lds rcl cmp mov out jae cmp pop push icebp lret data16 push in movl xchg js push mov aam das repz es loopne sub cltd pop and add test mov add mov icebp sbb add mov mov xor mov (bad) fisubrl cwtl stc outsl cmp ficomp pop sarl xlat daa cmpl pop testb mov inc inc xchg lods mov mov inc test inc pop mov pop and cltd ds pop pop mov push lea xchg xor pop ds inc pcmpgtd xor add add outsb inc sbb orb mov clc dec int mov push lret jl lahf ds out roll pop out xchg cmpsb inc mov aad push ljmp cmc mov xor rolb and js add cmpsl or push lahf lahf movd and enter cmc (bad) fisttpl inc or and aad sub xchg scas shrb xor mov sub add add pop movsl mov adc jg les les negb decl inc xor (bad) push lods inc popf lock mov lcall out mov stos into and gs pushw add mov push out push outsb sub inc in stos outsb xchg jecxz mov std mov fs or sub or inc xchg test lahf lds or push aam dec (bad) jp jb mov add add push pop lods mov les xor outsl fidivrl nop ret push or (bad) ror mov lea (bad) xor lock mov add sub push cmp mov or and pop and push and lea inc pop (bad) jp add adc outsl push mov mov mov push adc cmpsb mov adc mov pop (bad) push add in mov js mov xor jns sbb test fadds push jge pop aam out sahf (bad) mov shrb repnz or push nop (bad) adc scas jl sahf jae adc xchg lock (bad) dec fisub (bad) and add mov lcall push int3 mov nop cmp sbb mov cmp xor das jnp add push cmp mov stos fiaddl inc movsl ret inc add subl (bad) int mov inc test nop loopne jl mov sbb push mov sub out (bad) pushf and pop mov (bad) cmp add (bad) call in aam cmpsl shr addr16 loop (bad) xchg dec (bad) pop nop mov cli mov mulb rcrb or sbb xchg cmp cmc inc push jbe mov push cmp cltd and and fs (bad) mov repz pop call sub jmp ds add dec jle and shll dec xor push movsb sub rep push mov popa mov into pop push or lods jns add dec cmc ret mov add sub iret shrb inc xchg sbb popf cmpsl add add cmp or xchg rcrl fstps cmc pushf cmp lret sub lds lret or arpl or shlb notl mov fs push mov dec out jg jg jbe add jge pop xchg dec mov push cli jmp adc pushf sub aam addr16 push es inc mov mov in xor sub dec dec jecxz jb (bad) cmp int3 in mov lock repz rcrl inc (bad) ja aaa adc jmp xchg cs xor pop sub or das or and insl jle fnstenv pop add mov cmpb loope adc cmpl jecxz int3 daa pushf cmp mov repnz lahf pop repnz aaa push push je sti ficom gs push test push mov loopne (bad) mov jno out mov add outsb mov stc orb data16 or loop sub jl jne mov negl cmp cli insb and scas jl xchg push jb lea or idiv pop adc mov sbb hlt in aad stc ret enter mov scas in enter inc and pop cmpsl test push sub test xchg loopne inc js sarl pop xchg adc adc pop sbb xchg repz aad out scas mov fdivl sbbb fs mov test sbb outsl (bad) fst jmp mov push pop jmp in jp cmp sub test jle scas (bad) stc inc jnp stos jmp ret loop dec mov mov rcrb rcrl push movb sub shlb aam notb fild add out jmp add mov dec in adc push sub push xchg and xor dec lds jno jnp jbe outsl xchg push imul insb xchg inc xor lahf int inc outsl or push push cmpsl or (bad) xor stos int inc or cwtl bound cmc popa fstps mov repnz jne xor test shr scas inc mov (bad) mov imul cmp add add cmp adc test es mov subb aas adc jp jp mov ret ljmp gs mov orl mov push adc cs mov or jb ficompl jle lock inc clc sarl adc add data16 sub sahf cltd lcall sahf int sub mov add ljmp mov hlt (bad) push in xchg pop dec stos mov lret sub ret mov jno pop or cld (bad) je roll or out mov (bad) jge mov mov aam into cs lock pop push xor dec insb fwait jns inc nop mov fldl (bad) lock mov sbb sbb clc add in add in loope jge mov or dec fistpl push jae sub adc xor xchg insl jne add mov iret (bad) adc clc inc call adc or and scas and mov std aam xor add mov mov cmpsb cmpsl fistpll mov pusha fwait ljmp and mov cmp xorl add and push fcoml xchg test mov shl xchg adc stos aas inc fnsave mov aaa cmp hlt test mov and inc fwait push xor push mov orl mov inc outsl sub push mov or push je xchg pop das shrb mov adc or icebp xchg (bad) jo mov stc mov adc push push mov add hlt out pop ret dec xchg mov int3 push nop cli mov sub shll mov loope fmuls sub jae sti nop adc in adc movl dec (bad) lret sbb int3 and aam lahf int popa cmp stc xchg sub jg lods jp xchg dec mov (bad) fist std xor jp sub mov xlat and push pushf and sub xlat negl xchg adc hlt mov stos movq mov insb or mov or or movsl jae cmpsb sub pop outsl in jmp mov lods nop enter sarb mov movsl and cmp shlb movsb and pusha movsb inc ret (bad) ds imul scas jmp dec repnz ret inc idiv lahf mov mov push sar sbb icebp xchg or addb and mov mov adc ja cmp popf mov lods inc add out mov push (bad) (bad) mov fwait (bad) lret dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov add loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov add fdivrp pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter xchg pop cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test add add dec cld mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test adc lret aaa mov mov mov add (bad) out repz add or push sbb sub aaa cmp pop sub cmp add push pop pusha outsb je orl ret aad jecxz lock add add adc add es dec push pop popa outsb jbe orl mov mov fsubp jmp clc incb push or sub xor push pop bound jbe orl mov mov fsubp jmp clc incl and cs inc dec dec push pop bound jne jge add cmpsl lods mov rol aam loope out cmc sti add movhps add add xor cmp pop arpl ja test add rcr loopne in hlt cli add push adc and cs push pop arpl jbe orl mov mov (bad) out repz add or sub xor push pop bound jne (bad) add stos mov mov (bad) in repnz incl or sbb es dec dec push add arpl ja test stos mov mov (bad) in repnz incl or sbb es dec dec push pop bound push ja test stos mov mov fsubp jmp clc incl es dec add bound jne (bad) mov scas mov mov add loope out hlt sti add push adc xor push pop bound jbe add orl mov mov fsubp add repz add or sbb es dec push pop popa insl je addl ret (bad) fsub jmp add and inc dec add insl je addl ret rcl fucom ljmp cmp dec push push pop pop gs je jg mov movsb add mov mov (bad) in out repz incb or daa sub inc dec push push pop add insl jb add mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add es ss inc add dec push pop fs js xchg mov mov add jmp stc incl or xor inc inc dec push pop imul mov add add mov (bad) in out repz incb or sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in add testb add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb popf mov mov (bad) fsub out icebp idiv add and add cmp inc dec dec push pop add push je jg add movsl stos scas mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound push (bad) mov cmpsl add scas mov mov (bad) jecxz out repz std add or and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov add add rcl fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp testb add or sub inc dec push push pop popa data16 jno jnp xchg popf mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push add pop pop add jne jg mov movsl stos mov mov rcl fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl add test mov add aam (bad) jmp add push adc push and sub xor ds dec dec push pop pop arpl jb jge xchg lods mov mov add faddl add add out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or and sub dec dec push push pop bound jno jl xchg add mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs add add addb mov mov aam fneni(8087 in lock cli incl unpckhps pop and das xor ds dec dec push pop pop arpl jae add mov test mov mov iret aam (bad) jmp add push adc push and add ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fildl loop in icebp idiv add add push or push sbb sub xor push push pop pop fs je jg mov test ret enter fucom out repnz add or adc add and xor ds dec dec push pop pop bound jb jl xchg add lods mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha gs jne add add stos mov mov aad fild out lock sti add pop and das xor aas inc dec dec push pop pop imul mov test ret enter aad (bad) ljmp push adc push and sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out in icebp idiv add or push sbb add add sub xor push push pop pusha gs jne jg mov test ret enter fucom call add or pop add xor cmp pop pop bound jb jl xchg lods mov add rcr fucom out repnz add or pop sbb sub cmp dec push push pop pusha imul addb mov add rcl fneni(8087 in add idiv add or adc das xor dec push pop pop imul mov xchg lcall mov add fnop in out cmc cli incl unpcklps push and xor ds add push pop pop arpl jae jle mov test mov mov xlat fsub out icebp add cld add or push sbb sub cmp add add dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or add sub inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov into rcr fucom call add or daa sub ss inc dec push push pop pusha imul addb mov mov add add (bad) fneni(8087 out lock add add or push sbb and aas inc dec dec push pop pop imul mov stos scas mov mov (bad) add in lock cli incl pop and das xor ds dec dec add imul mov mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop add popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb xor add inc dec dec push pop pop arpl jae jle mov test mov mov iret aam fsubp jmp add or daa sub inc dec push push pop popa imul addb mov mov rcl fsub out add add idiv add pop or push sbb sub cmp dec push push pop pusha gs je jg mov add (bad) lret (bad) in add lock add and aas inc dec dec push pop add push je jg mov test ret leave into rcr fucom call add add adc sbb cmp push pop popa data16 jno jnp add add fwait mov mov aad (bad) ljmp push adc push and xor add inc add push pop pop fs je jle mov test mov mov add fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg add (bad) int3 roll fcomp loop in repnz add or add adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas add rcl fnop in lock add cld add or pop sbb sub cmp dec push push pop pusha add jbe addb movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb and xor ds dec dec push pop pop arpl jb jge xchg add mov (bad) fneni(8087 in lock add pop and aas inc add add pusha imul addb movsb stos scas mov mov (bad) add in lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl faddl jecxz in repz std add or and add sub inc dec push push pop bound jno jl xchg movsl stos mov mov rcl fneni(8087 in lock cli incl add or pop sbb es cmp dec push push pop pusha gs add addb movsl stos scas mov mov (bad) jecxz out repz incb or and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov add (bad) lret rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec add add imul addb movsb test ret leave into rcr fsubp call cli incl unpcklps push and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov cmp inc dec dec add fs je jg mov nop xchg lcall add add iret aam (bad) ljmp push adc push and add aas inc dec dec push pop pop arpl jae add test movsl stos mov mov aad (bad) add lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc add add pop popa data16 jno jnp xchg movsl stos mov mov roll xlat fsub out repnz add or push sbb es cmp dec push push pop pusha add push (bad) xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push push pop pusha add jno jnp xchg mov mov (bad) add loope jmp idiv add and aas add push push pop pusha imul addb pushf mov mov (bad) fsub out icebp testb add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl add vaddsubps fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul add orl test mov mov fadds fsubp add out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae add test movsl stos scas mov mov (bad) in out hlt stc incl unpcklps push and xor ds dec add pop pop imul mov test mov (bad) in out hlt stc incl add add unpcklps push and xor ds dec dec push add imul mov movsl stos mov mov aam (bad) jmp add add adc das xor dec push pop pop imul mov lods mov add (bad) jecxz out repz std add push adc sbb cmp push pop bound jno jl xchg pushf mov mov aad loopne ljmp pop or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop add insb jno jl xchg mov lods mov mov rcl fsub out icebp idiv add or push sbb add add cmp dec push push pop pusha add jl xchg stos add mov mov xlat fucom out repnz add or pop sbb and sub dec dec push push pop bound jb jl xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov add (bad) leave iret aam fsubp jmp add add adc das xor dec push pop pop gs je jg mov mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov movsl stos mov mov aad fneni(8087 out lock sti add and aas inc dec dec add fs je add lcall mov rcl fndisi(8087 out lock add or adc das add cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) add jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out add lock sti add sbb and sub ss inc dec push push pop popa imul addb movsl stos add mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov stos add lret fcmovu in jmp idiv add and aas inc dec dec push pop pop imul add test mov mov add (bad) fsub out icebp idiv add or adc xor dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out add cli incl pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or add adc sbb add sub inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov into aam fsubp jmp add or sub inc dec push push pop bound jno jl xchg cmpsl lods mov mov rcr fucom call incb or sub inc dec push push pop bound jno jl xchg mov mov xlat fsub add jmp add or sub inc dec push add arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add pop or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps push and cs add aas add push push pop pusha gs jne jg mov stos scas mov mov add fndisi(8087 out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov add (bad) leave iret add fcmovu in lock cli add sbb and inc inc dec dec push pop pop fs je jg mov test mov aam fsubp jmp sti add or push sbb and inc inc dec dec push pop pop add jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc sbb and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp add pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 add call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov add (bad) fneni(8087 add in icebp idiv add or push sbb and sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov rcl fneni(8087 in jmp cmc sti add pop sbb daa sub inc dec push push pop popa data16 jno add mov lods mov mov (bad) fneni(8087 out lock sti add pop and cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub dec dec push push add add je add jle mov test mov mov fcomp loop in repnz stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom call incb or sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add fucom call add or add adc add push and xor ds dec dec push pop pop arpl jae jle mov mov mov mov fcomp jecxz in repnz std add or daa sub aaa add push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs jo add mov cmpsb stos mov mov aad (bad) ljmp add push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov flds (bad) ljmp or adc das xor dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz ljmp push adc push and add add cmp dec push push pop pusha gs jne jg mov movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec add pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul add xchg popf mov mov add rcl fsub out icebp idiv add or push add sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in add idiv add or push add es cmp dec push add popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add add or push sbb sub cmp add dec push add add bound jb jl xchg lods add int fcomp loop in repnz add or pop sbb es cmp dec push push pop add insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb add mov fcomp jecxz out repz add add incb or adc sbb add dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add or adc pop and das add dec push pop pop fs jo jnp test movsl stos scas mov mov (bad) in out hlt cli incl lldt das xor dec push add pop popa data16 jno jnp add mov mov rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop pop gs je jnp test movsl stos mov mov aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test scas mov mov aam (bad) jmp add unpcklps push and xor ds add dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc add and das xor aas inc add push pop pop gs je jg test movsl stos scas mov mov fcmovu in out hlt stc incl push adc pop and sub xor dec push pop pop fs add jl xchg cmpsb stos add lret rcl fildl loope jmp idiv add or push sbb and inc inc dec push push pop pusha imul addb mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov iret aad (bad) ljmp unpcklps pop and cs ds dec add add pop add pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and add aas inc dec dec push pop add push jne addb mov mov aad (bad) ljmp unpcklps pop and das xor add dec dec push pop pusha gs jne jg add mov mov (bad) fneni(8087 out lock cld add or push sbb sub cmp dec push push pop pusha imul addb add rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret leave into roll (bad) add ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul jbe addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds add push pop pop imul mov stos add lret rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec add pusha gs jne jg mov mov mov (bad) fndisi(8087 out lock add add push sbb sub cmp dec push push pop pusha imul addb movsl stos mov add (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz add repz incl unpcklps push and xor ds dec dec push pop pop arpl jae jge add mov add add mov mov (bad) jecxz out repz incb or sub inc dec push push add push (bad) add mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound imul mov add mov mov aad loopne ljmp unpcklps add and add xor dec push pop pop imul mov scas mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add pop add daa sub inc dec push push pop popa data16 jno jnp xchg popf mov mov ret rcl fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul jbe addl mov mov add fsub out repnz add or pop sbb es ss inc dec push push pop pusha imul jl xchg cmpsb stos mov mov int xlat fsub out repnz add or pop sbb daa sub xor cmp add add pop bound jno jl xchg stos mov mov aad add out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or pop and aas inc dec dec push pop pop imul mov add mov mov aam (bad) add add add jmp add unpcklps push and xor ds dec dec push pop pop arpl jae jge test mov mov rcr fsubp add out hlt stc incl push adc pop and cs ds dec dec push pop pop arpl jae jge mov mov scas mov mov add fcmovu in out hlt stc incl push adc push and cs add dec push pop pop imul add test mov mov fcomp loop in add clc incb or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop add sub xor cmp inc dec push push pop popa imul addb movsl stos mov mov int3 rcl fsub out icebp idiv add or add adc xor push push pop pop gs je jg mov movsl stos scas mov add vaddsubps fneni(8087 in out cmc add add or adc xor push push pop pop gs je jg mov movsl stos scas mov mov (bad) add out icebp idiv add and aas inc dec dec add pusha imul addb mov mov aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub add cmp inc dec dec push push pop bound jb jge xchg lods mov mov add fcomp jecxz in repnz std add or daa sub add add cmp inc dec push push pop popa imul addl mov mov rcl fsub out icebp idiv add add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos add lret rcl fneni(8087 in lock idiv add or push sbb sub cmp dec push push pop pusha add jno jnp xchg cmpsb stos mov mov (bad) aad (bad) ljmp lldt das xor dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp add add pop arpl jae jle mov test mov mov fcomp add in out hlt cli incl unpcklps push and xor ds dec dec push pop add push (bad) mov test mov mov rcr fiadd in out hlt stc incb push adc add and das xor aas inc dec dec push pop pop imul mov scas mov mov aam (bad) jmp add add adc sbb sub cmp dec push push pop pusha imul jnp xchg cmpsb stos mov mov (bad) fneni(8087 out add add add add idiv add and cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop add add jbe addb movsl stos mov mov aad loopne jmp cmc add std add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg mov stos mov mov rcr fild or adc das xor aas inc dec dec push pop pop imul mov movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp call add push adc push and xor cmp add add pop pop bound jb jns orl test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec dec add pop gs jne jg mov test add (bad) lret rcl fneni(8087 out add add std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) add fndisi(8087 out icebp idiv add or push sbb and sub ss inc dec push push pop popa data16 jno jnp xchg mov mov rcl fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne add icebp idiv add or push sbb and inc inc dec push push pop pusha imul add test mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push add data16 js (bad) xchg cmpsl lods mov mov add (bad) jecxz out repz incb add add adc xor dec push pop pop fs jne jg mov test (bad) leave into aam fsubp jmp add add add push adc push and xor cmp inc dec dec push pop pop imul mov stos scas mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jge mov add test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound add jle test mov mov aad (bad) ljmp push or push sbb and sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub add add add pop popa imul addl mov add (bad) int3 rcl fsub add in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov add (bad) lret add rcl fneni(8087 out lock add or adc xor push push pop pusha gs jne jg add mov mov rcr fucom out repnz add add unpcklps push and cs cmp inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop add arpl push je jg mov test (bad) leave into roll fcmovu in out hlt cli add add and inc inc dec push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and add aas inc dec dec push pop pop imul mov scas mov mov add fsubp jmp add add push adc push and xor ds dec dec push pop pop arpl jb jge mov mov mov iret aad (bad) ljmp unpcklps add and sub cmp dec add pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop pusha imul add add add stos mov mov (bad) fneni(8087 out add idiv add or add sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc add push pop popa imul addb movsl stos mov mov aad (bad) ljmp or adc add sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov roll xlat fsub out icebp idiv add or push sbb sub add cmp inc dec dec push pop pop arpl imul test movsb test ret leave into rcr fsubp call add or daa sub dec dec push push pop bound jb jl xchg test mov add mov rcl fucom out repnz add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop add insl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push add push pop popa insb jno jl xchg stos mov mov rcl faddl loop add repz incb or sub dec add dec push pop pop fs je add xchg pushf mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test mov fcmovu add add ljmp unpcklps add and aas add push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov (bad) in out hlt stc incb push adc add and das xor aas inc dec dec push pop pop imul test movsb test (bad) leave into aam fsubp add out hlt add add push or push sbb sub cmp dec push push pop pusha add insl jb jl xchg mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jge xchg lods mov mov rcr fucom call add or add adc sbb add ds dec dec push pop add imul mov scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg test mov mov fcomp loop in repnz std add or daa sub add cmp pop pop bound jb jge xchg lods add int3 rcl fsub out icebp idiv add pop or pop and das xor ds dec dec push pop pop arpl jae add addb movsl stos add (bad) int3 rcl fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad add out lock add or push sbb and add inc inc dec add pop popa imul jl xchg lods mov mov (bad) fneni(8087 out lock sti add or push sbb and inc inc dec push push pop pusha gs jne jg mov add (bad) aad (bad) ljmp unpckhps pop and aas inc dec add pop pusha gs jne jg mov stos scas mov mov flds add add in out hlt stc incb unpcklps sbb and aaa cmp inc dec push push pop popa data16 jno jnp xchg popf mov mov iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz incb or sub xor cmp pop pop arpl imul add test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov rcr fucom call add or daa sub aaa cmp push pop bound push orl test mov mov xlat fucom out repnz add add or pop sbb daa sub xor cmp dec push pop pop fs je jg mov test mov aad add add in repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp add adc xor push push pop pusha gs jne add add add lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop gs jne jg mov stos scas mov mov add loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor cmp inc add push add add jno jnp xchg cmpsb stos mov mov int fcomp loop in repnz add add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or add xor ds dec dec push pop pop arpl jae jge mov movsb test mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in add stc incb or adc sbb cmp pop pop bound jb jge xchg mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop add bound add add mov test (bad) leave into aam add loopne jmp idiv add pop sbb aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or adc xor dec push push pop pusha imul addb movsl stos add lret roll xlat fsub out in repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add sbb sub cmp dec push push pop pusha gs jne addb movsl stos add lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jnp xchg add test mov mov xlat fucom out repnz cli incl unpcklps push and sub xor cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub jmp adc push and xor ds dec dec push pop pop arpl outsb je jle mov test mov mov fadds (bad) jmp add and add xor dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add or sub xor cmp inc dec dec push pop pop imul mov scas mov mov fadds fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov add mov add lret rcl fnop in lock cli incl pop add daa sub aaa cmp inc dec push add pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jb jge add mov mov fcomp jecxz in repz incb push adc add and aas inc dec dec push pop add push jne jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec add gs jne jg mov stos scas mov mov (bad) in out hlt add add pop and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov add faddl loop in repnz add add add or pop sbb daa sub aaa cmp add push pop pop arpl add addl mov rol iret aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg test mov mov xlat fsub out icebp idiv add or adc sbb daa sub add cmp push pop popa insb jno jl xchg add add cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl imul mov scas mov mov fcomp loop in repnz add add daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov add fsub add in add clc std add or add daa sub inc dec add push pop pop arpl jae jge test mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos add int3 rcl fndisi(8087 out lock add add sub cmp inc dec push push pop popa imul addb movsl stos add lret fcmovu in out hlt cli incl push adc push and xor ds dec dec push pop pop bound jb js orl test mov mov xlat fucom out repnz add or push add aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad fild out lock cld add pop or pop sbb daa sub ss add inc dec push push pop add bound jb jge xchg mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov add vaddsubps fnop in lock cli incl pop and add xor dec add pusha gs jne jg mov test ret enter add add fcomp jecxz out repz std add or daa sub inc dec push push pop popa data16 jno jnp add mov mov (bad) fneni(8087 in lock sti add pop and cmp dec push push pop pop gs je jg mov test ret enter fucom call incb add add adc das xor aas inc dec dec push pop pop add add imul addb mov mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul lea lods mov mov rcr fucom out repnz add or pop sbb daa sub add push pop add insl jb jge xchg lods mov mov aad loopne ljmp add cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov mov mov fcomp loop in repnz add or push sbb daa sub add cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp incl add es cmp dec push push pop pusha gs jne add add addl add int xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter (bad) jecxz out repz incb or sub add push pop pop arpl outsb jae jle mov test mov mov xlat fsub out icebp idiv add or add push sbb and aas inc dec dec push pop pop fs je jg mov movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add add add sub inc dec push push pop popa insb jno jnp add mov add mov into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 add in icebp idiv add or push sbb and aas inc dec dec add pusha imul jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb add cmp inc dec push push pop popa data16 jno jl xchg movsl add lret rcl fneni(8087 in lock cli incl unpcklps pop and xor ds dec add pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or add sbb add sub inc dec dec push pop pop arpl jb jge mov lahf movsb test les lret rcl fnop in out cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 out add idiv add or push sbb sub xor push push pop add imul addb mov stos mov mov aad (bad) ljmp push adc push and sub dec dec push add push pop bound jno jl xchg cmpsb stos mov mov rol rcl fneni(8087 out lock sti add pop and das xor aas inc dec dec push add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and sub xor add pop pop bound jb jl xchg mov mov add fcmovu in out hlt stc incb or adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop arpl push je jg mov (bad) xchg lcall mov (bad) in out repz incb or adc sbb cmp push pop popa insb jno add jbe addl mov add (bad) int3 rcl fndisi(8087 out lock add pop and aas inc dec dec push pop pop add outsl je jg mov test ret enter fsubp call add or daa add xor add inc add push pop pop imul mov add (bad) aam fildl loope in icebp testb cld add or push sbb sub xor dec push pop pop imul mov scas mov mov xlat fucom call add or daa sub inc dec push push pop popa imul jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov add add mov mov rcr fsubp call add or sub inc dec push push pop popa data16 add jge xchg lods mov mov (bad) fneni(8087 out lock sti add and cmp add push pop bound jb jl xchg stos mov add rcl fucom add add hlt stc incb or adc add push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp lldt xor dec push pop pop imul mov add (bad) leave iret aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad fsub out lock add and aas inc dec dec push pop pop imul mov test ret leave into rcr fsubp call add or daa sub add push add add je jle mov test mov mov iret aam (bad) jmp sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb and sub aaa cmp inc dec push push pop popa imul addb mov mov rol rcl fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat add add loop call add or pop sbb daa sub ss inc dec push push pop popa imul addb mov mov aad (bad) ljmp push adc push and xor cmp push pop pop add add jnp test movsb stos scas mov mov rcl fneni(8087 in lock cli add add or pop sbb daa sub ss inc dec push push pop add popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb xor ds dec dec push pop pop arpl jae jge mov mov mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp add sti add pop and aas inc dec dec push pop pop imul mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop add insb add add mov test mov mov fadds add in out hlt stc incb add add xor dec push pop pop imul orl test ret enter fucom call add or pop sbb daa sub add push pop popa insb jno jl xchg cmpsb add int3 add xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add push adc add add and xor cmp push pop bound jb jl xchg test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs jo jp addl mov mov (bad) fneni(8087 out add repnz add or add xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add and aas inc add push pop pusha gs jne jg mov test mov fiaddl loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc sbb sub cmp add add dec push push pop pusha gs jne jg mov test mov fcmovu in out hlt stc incb push adc push and sub inc dec push push pop bound jno add xchg mov test ret enter fsubp call cli incl pop and sub xor cmp dec push push pop pusha gs jne jg mov test ret add into rcr fsubp jmp add or daa sub inc dec push add bound jb jl xchg stos mov mov rcl fsub out in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc add and cs ds dec dec push pop pop add add insl jae jge mov cmpsl lods mov mov rcl fucom out repnz add or pop sbb daa sub cmp dec push push pop pusha imul addb pushf mov mov ret rcl fsub out icebp idiv add add push adc push and sub aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out add add repnz add or pop sbb es cmp dec push push pop pusha add jno jnp xchg movsl stos mov mov add fneni(8087 in lock add add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom out repnz add or pop sbb daa add inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov add rol rcl fneni(8087 in lock cli incl push sbb sub cmp inc add pop pop bound je subl je addl xchg xchg pushf mov mov (bad) fneni(8087 out lock add and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or unpcklps pop and add xor push push pop pop gs je jg mov test (bad) leave into add fcmovu in out hlt stc incl push adc push and cs add inc dec dec push pop pop add jo jp test movsl stos add (bad) int3 rcl fsub out icebp idiv add pop or pop sbb es aaa cmp inc dec push push pop popa data16 insl jae jge mov mov mov xlat fucom out repnz add or push sbb es ss inc dec push push pop popa imul addb mov mov (bad) fneni(8087 in lock cli add add pop and aas inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add or and xor add push pop pop imul mov lods mov mov xlat fsub add in repnz std add or daa sub aaa cmp inc dec add pop bound jb add mov cwtl popf mov mov into rcr fsubp call add or and xor cmp pop pop bound jb add jg mov test mov loopne repz add and xor cmp inc dec push push pop pusha imul addb movsl stos scas mov mov aad (bad) ljmp push adc push and sub add push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop pop arpl imul mov scas mov mov xlat fsub out icebp idiv add add pop sbb daa sub ss inc dec push push pop pusha gs add addb mov mov add add aad loopne out add idiv add or push sbb sub xor dec push push pop pusha imul jg mov mov mov rcl fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov rcr fsubp call add or pop sbb daa sub ss inc dec push push add imul addb movsb test (bad) leave iret aam fsubp jmp add or sub inc dec add pop bound add jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or add sbb es cmp dec push push pop pusha gs jne add lcall mov aad loopne ljmp add testb add or push sbb sub cmp inc dec push push pop pusha imul addb movsb add lods mov mov (bad) add loope in icebp idiv add or push sbb and aas inc dec dec push pop pop imul xchg cltd sahf mov mov fcomp add jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop add je jle test movsb stos scas mov mov (bad) in out hlt stc incb push adc push and sub xor dec push pop pop imul mov xchg lcall add vaddsubps fnop in lock sti add push or add pop sbb aaa cmp inc dec push push add push (bad) mov cmpsl lods mov mov iret aam fsubp jmp incl pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz incb push adc pop and cs ds dec dec push pop pop arpl jae jle mov test add enter fucom call add or sub inc dec push push pop bound jb add mov movsb test ret leave into rcr fsubp call add or sub inc dec dec push pop pop arpl jae jle mov test scas mov mov add (bad) ljmp unpcklps add and cmp add inc inc dec push push pop popa imul jl xchg lods mov mov (bad) add fsubp call add add adc pop and cs ds dec dec push pop pop imul mov lods mov mov fcomp jecxz repnz std add or adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov xlat faddl add add out icebp idiv add or push sbb sub cmp add pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov test ret leave into rcr add in out hlt stc incb or adc push and xor add inc dec dec push pop pop arpl add jp test movsb test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg test mov mov rcr fsubp call add or add xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out icebp idiv add or push add sub cmp dec push push pop pusha imul jbe addl mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov aam (bad) ljmp or adc das xor dec push pop pop add jo jp test mov add mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov aam add in lock cli incl pop and das xor aas inc dec add popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop add pop arpl jae jge mov movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp add std add or daa sub xor cmp pop pop bound jb jl xchg test mov mov rcr fsubp jmp add incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp testl push adc push and xor cmp pop pop bound jb add mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg add mov rolb int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps add and inc inc dec push push add imul addb movsl stos mov add (bad) fneni(8087 out add idiv add or pop sbb daa sub add add cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop add sub add cmp inc dec push push pop popa imul addb add (bad) jecxz out repz incb or daa sub dec dec push push pop bound jno jl xchg lods mov mov (bad) fsub out add idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop add insl jae jge mov mov mov fcomp jecxz out repz add add unpcklps push and add dec push pop pusha gs jne jg mov add (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add jne jl xchg lods mov mov (bad) fndisi(8087 out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add add cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov rcr fucom call add or daa add xor ds dec dec push pop pop add je jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov movsb add (bad) aad loopne ljmp push sbb and sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha add jno add addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) fneni(8087 in lock sti add or adc xor dec add pop gs je jg add movsb test (bad) leave into rcr fsubp call add or pop sbb es cmp dec push push pop pop gs je jg mov test mov mov iret aam (bad) jmp add push adc sbb add inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg test movsl add stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) add loop in repnz add or add sbb aaa cmp inc dec push push pop popa data16 jno ja (bad) xchg add (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp add push push pop pop gs jne jg mov test ret leave into rcr add out add incb push adc push and sub inc dec push push pop popa add ja (bad) xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov xchg lcall mov aad loopne add ljmp unpckhps and cmp inc inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov rcl fndisi(8087 out in repnz add or pop sbb daa add dec dec push push pop bound push orl test mov mov xlat fsub out icebp idiv add add daa sub aaa cmp push pop pop arpl jb add js (bad) mov cmpsl lods add int fcomp loop in repnz add or daa sub aaa cmp push pop bound jno jl xchg lea mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test mov (bad) jecxz add hlt stc incb push adc add sbb and sub dec add add fs je jg mov test mov mov xlat fucom add out repz std add or adc push and sub inc dec dec push pop pop arpl jae add mov test mov mov xlat fsub out icebp idiv add or push sbb and sub cmp dec push push pop pusha add jno jnp xchg mov mov rcl fneni(8087 in out cmc cli incl unpcklps pop and xor ds dec dec push pop pop bound jae jge xchg mov mov fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov add fcomp jecxz in repnz adc sbb daa sub add add cmp dec push push add insb jno jl xchg stos mov mov aam (bad) jmp incl add adc das xor ds dec add pop pop arpl jae jge add mov mov xlat fsub out icebp idiv add or adc sub cmp dec push push pop pusha gs jo jnp test movsl stos scas mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock incb pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov aam fsubp jmp add or adc push and cs ds dec dec push pop add pop arpl imul mov stos mov mov aad (bad) ljmp or adc sub cmp dec push push pop add insb jno jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp inc inc dec push push pop popa insb jno jl add mov mov xlat fsub add add in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov rcl fucom out repnz add or pop sbb daa xor cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu add jmp idiv add and sub cmp dec push push pop pusha gs jne jg xchg add mov xchg xchg pushf mov mov (bad) fneni(8087 in lock add add es add push pop popa insb jno add xchg cmpsl lods mov mov rcl fsub out repnz add or pop sbb daa sub ss inc dec push push add insb jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or add add sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam fneni(8087 in lock cli incl and aas inc dec dec push pop fs je jg mov test (bad) leave into rcr fsubp jmp incl unpcklps pop and add dec push push pop pusha gs jne jg mov movsl add add rcl fneni(8087 out lock add and cmp inc dec push add bound jb jl xchg cmpsl lods mov mov rcr fucom call add or daa sub inc dec push push pop bound jb js orl test mov add fcomp jecxz in repz std add or and xor ds add dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp add std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps sbb and inc inc dec dec push add imul addb movsl stos mov add rcl fsub out icebp idiv add or push sbb and inc inc dec dec add popa imul ja addl mov mov (bad) fneni(8087 out in icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov nop xchg lcall mov aad loopne ljmp unpcklps push and add aas inc dec dec push pop pop arpl add je jle mov test mov mov xlat fsub out icebp idiv add add pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov (bad) lret (bad) in out repz incb or daa add inc dec push push pop popa data16 ja (bad) xchg cmpsb lods mov mov roll xlat fucom out icebp idiv add add add adc sbb and aas inc dec dec push pop pop add outsl je add lcall add (bad) aad (bad) ljmp or adc das xor aas inc dec dec push pop pop arpl jae jge mov movsb test ret enter fldl in out repz incb or sub inc dec dec push pop pop bound jb jl xchg add xchg pushf mov mov (bad) fneni(8087 out lock cli add sbb and inc dec push pop pop arpl jb jl xchg stos mov mov (bad) fneni(8087 out cld add or add sbb daa sub ss inc dec push push pop pusha gs jne jg mov test mov mov fcomp loop in repnz add or push sbb es cmp dec push push pop pop gs je jg mov movsb test add lret fcmovu in out hlt stc incb or adc push and sub dec dec push push pop bound add jge xchg add mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb mov mov aad add fnop in add idiv add pop and cmp dec dec push pop pop fs je jg test mov mov rol rcl fneni(8087 in lock cli add add sub xor push push pop pop fs je jle mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pop fs outsl je jg mov add (bad) leave into add fcmovu in out hlt stc incl push adc push and xor cmp push pop bound jb jl (bad) xchg cmpsl lods mov mov ret int fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov movsl stos scas mov mov (bad) jecxz out repz add add push adc push and xor cmp inc dec dec push pop pop arpl jb jge xchg add add leave into rcr fucom call add or pop sbb xor cmp pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add and aas inc dec dec push pop pop imul mov add xchg cwtl popf mov mov rcr fldl in out repz incb or sub inc dec push push pop popa insb jno jnp xchg mov mov roll xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test scas mov mov fcomp jecxz in repz std add add adc add push and xor ds add push pop pop arpl jae jge mov mov mov add (bad) in out repz incb or sub inc dec dec push pop pop arpl jae (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov add mov rcl fneni(8087 in lock sti add or push sbb sub xor push push pop pusha imul addb add rol rcl add loope add repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov rcl fsub out icebp idiv add or push sbb add sub inc add pop add insl jae jge mov cmpsl lods mov add aam (bad) jmp incl pop and aas inc dec dec push add gs jne addb movsl scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub call add or and xor ds dec dec push pop pop arpl jb jge xchg test mov mov rcr fsubp call incb add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add jmp add push adc push and sub inc dec dec push pop pop imul add mov test (bad) lret add loopne ljmp add pop sbb daa sub ss inc dec push push pop popa imul jl xchg stos mov mov xlat loopne jmp cmc cli incl pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add push or add add sbb and cmp dec push push pop pusha gs jne jg mov test ret enter (bad) in out hlt stc incb or unpcklps add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp add cld add or push sbb sub cmp dec push add popa imul addb mov mov aad (bad) add lock sti add push or push add es cmp dec push push pop pusha gs jne jg xchg movsl stos scas mov mov (bad) jecxz out hlt stc incb or sbb cmp pop pop bound outsb jae jle mov test mov mov rcr fsubp call incl or adc add das xor add add push push pop popa imul ja addl mov rol iret aad fild in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in add idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp add cld add or pop sbb es cmp dec push push pop pusha gs jne jg mov movsl stos mov mov aam (bad) jmp add push adc push and xor dec dec push push pop bound jb add mov cmpsl lods mov mov rcr fucom call add or adc sbb and das xor aas inc dec dec add push pop popa insb jno jl (bad) xchg cmpsl lods mov mov (bad) fsub out icebp add cld add or pop sbb es aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp or adc xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp add out repz std add add adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov add fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa push xchg mov mov (bad) fsub out in repnz add or pop add xor ds dec dec push pop pop arpl add jno add add addl mov mov aad loopne ljmp add push sbb and inc inc dec dec push pop pop fs jne jg mov test ret leave into rcr fsubp call add or and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc sub cmp dec push push pop pusha imul addb movsl stos mov mov add fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb add unpcklps pop and das add dec push push pop pusha imul addb add mov mov aam fsubp jmp add push adc sbb xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub add cmp push pop bound jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or adc xor add add dec push push pop pusha imul addb movsb stos scas mov mov fcmovu in add cmc cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or and xor ds dec add pop pop add outsl jne jg mov add mov into rcr fsubp call add or daa sub ss inc inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec add pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp add bound insl jb jl xchg stos mov mov aad loopne ljmp or adc das xor dec push pop pop imul lea lods mov mov add fucom out icebp sti add or pop sbb es xor cmp inc dec push push pop add insl jb js orl test add add rcl fiaddl loope jmp add add sti add or push sbb sub xor push add popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc pop and cs ds dec dec push pop pop add je jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa add js (bad) xchg add mov mov (bad) fsub out icebp idiv add or push add daa sub aaa cmp inc dec push pop popa imul (bad) xchg cltd sahf mov mov xlat fucom out icebp add std add or pop sbb sub ss inc dec add pop arpl ja test mov cmpsb stos mov mov aad add fucom call add or daa sub add add xor cmp inc dec push push pop popa imul jl xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb mov stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop bound jno jl xchg mov lods mov mov add add rcl fnop in out cmc cli incl unpcklps push and xor cmp inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add sbb sub xor dec push pop add jno jnp test mov mov rol rcl fneni(8087 add add out repz incb or and xor ds dec dec push pop pop arpl jae jle add movsb test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge mov mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg mov mov fcomp jecxz in repz add add clc std add or sub inc dec add pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or add xor ds dec dec push pop pop arpl jae add mov scas mov mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul lea add mov mov aad loopne ljmp push adc push and sub inc dec dec push pop pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz incb push adc sbb aaa cmp inc dec push push pop popa imul jg mov test mov add (bad) jmp add or add sub aaa cmp inc dec push push pop pusha gs jne jg mov test mov mov xlat fucom out icebp idiv add or add sbb sub xor dec push add gs je jg mov movsb test (bad) lret fcmovu in out hlt cli incl unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov add add (bad) int3 rcl fucom out repnz add or pop sbb es ss inc dec push push add insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or add sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor add inc dec dec push pop pop arpl jae jge test mov mov roll (bad) in hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add add or daa sub aaa cmp inc dec push push pop popa data16 jno jl add mov mov (bad) fneni(8087 out lock cli add and add dec push push pop pop gs je jg mov test ret enter fucom out repnz add or and xor ds dec dec push pop pop bound jb jl xchg add add mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop add jae jle mov add ret enter fucom add out repz add add push adc and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub add add add inc inc dec push push pop pusha imul addb movsl add (bad) lret rcl fneni(8087 out lock sti add and inc inc dec push push pop pop add jo jnp test movsl stos mov mov aam (bad) jmp add push adc push and sub xor aas inc add push pop pusha gs jne jg mov test ret enter add fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha imul addb mov mov rcl fneni(8087 in out cmc cli incl add adc sub cmp push push pop outsl jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl je jg add movsb test (bad) leave into rcr add in hlt stc incb adc sbb cmp inc dec dec push pop pop bound jb jl xchg movsb stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push pop bound push addl mov mov mov (bad) jecxz out repz std add or sub add sub inc dec push push pop bound jb jl xchg scas mov mov (bad) fndisi(8087 out icebp idiv add or pop add cmp inc dec dec push pop add push add xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) add add loope jmp idiv add or adc sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov add loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsb lods mov add fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test lret rcr fsubp jmp add or adc push and xor cmp push pop pop arpl jae jge xchg mov scas mov mov fcomp jecxz in repz incb or sub inc dec push push pop bound jb jl xchg mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push add popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add add adc pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov rcl fsub out add idiv add or pop sbb es cmp dec push push pop pusha gs jne jg mov test add fcomp loop in repnz add or pop sbb xor cmp push pop bound jno ja (bad) xchg lods mov mov ret int fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push add pop bound jno js (bad) xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and add xor dec push pop pop imul mov lods mov mov xlat fsub out add idiv add or adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add stc incb or adc sbb aaa cmp push pop pop arpl jae jge mov mov mov add fucom call incb sub xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp testb add add sub inc dec push push pop bound jb add add add mov mov xlat fsub out icebp idiv add or push add aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov rcl fildl loope in icebp idiv add or push sbb sub xor add pop popa imul jl xchg test mov mov xlat fsub out icebp idiv add pop or pop sbb daa sub add add inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp lldt sub cmp dec push push pop pusha gs jne jg mov cmpsb stos mov add add rcl fnop in out cmc cli incl unpcklps pop and das add dec push pop pop imul mov mov mov add (bad) jmp add pop and das xor aas inc dec dec push pop pop add je jg mov nop xchg lcall mov (bad) fneni(8087 out lock sti add add sub cmp add add add push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb add sub inc dec dec push pop pop bound jb jge xchg test mov mov fadds fucom out repnz add or pop sbb es ss add push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne add icebp idiv add add pop sbb daa sub ss inc dec push push pop pusha imul jl xchg cmpsl lods mov mov rcl fucom out repnz add or pop sbb es xor cmp push pop add add add jae jle mov test mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor add dec add pop pusha imul addb movsl stos scas mov add vaddsubps fnop in lock cli add or adc das xor dec push pop add imul addb movsl stos scas mov mov (bad) in out hlt stc incb add pop add sub cmp dec push push pop pusha imul addb mov add fsub add in repnz add or pop sbb aaa cmp inc add pop pop bound jb add test add add mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push add popa add jb jl xchg lods mov mov add fucom out repnz add or pop sbb daa sub add aaa cmp inc dec push push pop popa insb jno js (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push add daa sub aaa add pop pop arpl jb jge xchg cmpsl add enter (bad) jecxz out repz add add unpcklps pop and cs ds dec dec push pop pop add outsl jne jg mov mov mov add (bad) lret rcl fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt std add push adc push and xor cmp pop pop bound add add lahf movsb test (bad) leave into aam fsubp jmp incl push adc push and xor ds dec dec push pop pop bound add push orl mov mov fcomp loop in repnz add or pop sbb daa sub add cmp add arpl jb jge mov cmpsl lods mov mov rcr fucom out out repz std add or and sub inc dec push push pop popa insb jno add xchg cmpsl add ret enter fucom out add in icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae add mov (bad) xchg lcall mov (bad) jecxz in repz add add push adc sbb aaa cmp inc dec push push pop popa imul addb test mov mov aad (bad) ljmp push adc push and sub inc dec dec push pop add push orl cmpsl lods mov mov rcl fucom out add clc std add or pop add aaa cmp inc dec push push pop popa imul add fwait mov add rcl fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop bound jb jge add lahf movsb stos scas mov mov (bad) in out repz incb add unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov add ret leave into rcr fsubp call add or daa sub inc add pop pop bound outsb jae jle mov test mov mov fadds fsubp jmp add pop and add xor dec push pop pop gs je jg mov movsl stos scas mov mov rcl fsub out icebp idiv add or push sbb es xor cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov mov mov aam fsubp jmp add push adc add and das xor aas inc dec dec push pop pop imul mov lods mov add add add rcr fsubp call add push adc sbb cmp push pop add insl jae jge test mov mov fcomp loop in add stc incb or adc sbb and aas add push push pop pusha gs jne addb movsl add lret rcl add add call add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop imul mov lods add (bad) jecxz out repz incb or adc push and xor ds add push pop pop imul mov lods mov mov xlat fsub out lock add pop and das xor dec push pop add pusha imul jg mov test ret enter fucom call add or push sbb sub xor cmp inc dec push push add insb jno jl xchg cmpsb stos mov mov add fneni(8087 in lock cli incl pop and xor cmp inc dec dec push pop pop imul mov add (bad) xchg cltd lahf movsb test ret lret add out repnz std add or and xor cmp pop pop bound jb jl (bad) mov mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and add sub xor ds dec dec push pop pop arpl add jnp test movsl stos mov mov aam (bad) jmp add push adc push and xor cmp push pop pop arpl outsl jne jg mov test ret enter fucom add in repnz std add or pop sbb es cmp add pop popa imul addb mov mov rol iret aam (bad) add out cmc cli add push or adc sub xor dec push pop pop imul mov movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop add insl jae jge mov test mov mov (bad) fsub out lock add pop and ds add dec dec push pop pop arpl jb add test movsb test ret enter fucom out repnz add or push sbb sub xor dec push push pop pusha imul jnp xchg movsl stos mov mov aam fsubp jmp incl push adc push and sub inc dec add pop bound jb jl xchg test mov mov add rcl fndisi(8087 out add idiv add pop or pop sbb sub xor cmp inc dec push push pop pusha imul addb mov mov rol rcl fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop add insl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push push add insb jno add orl test mov mov xlat fsub out icebp idiv add or adc das xor aas inc add push pop pop imul mov test ret enter fucom call std add or daa sub ss inc dec add pop popa imul addb mov mov aad fild add ljmp push or adc add cmp dec push push pop pop fs je jle mov (bad) xchg lcall mov aam (bad) jmp add or daa sub inc dec push push pop add insb jb addl mov rol rcl fnop in lock cli add pop and das xor aas inc dec dec push pop pop imul jns add fwait mov mov aad loopne ljmp adc das xor aas inc dec dec add pusha gs jne add fwait mov mov aad (bad) ljmp or push sbb sub cmp dec push push pop add imul addb add rol rcl fndisi(8087 out lock add add add or add sbb cmp push pop pop arpl jae jge mov mov add (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jns test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jno jl xchg add cltd sahf mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound push (bad) mov mov mov fcomp jecxz in repnz std add add adc push and xor ds dec dec push pop pop arpl add orl test mov mov aam fsubp jmp add push add pop and sub xor push add popa imul addb movsl stos mov mov rol add xlat fsub out repnz add or push sbb es cmp dec push push pop popa imul addb mov mov fnop out lock cli add pop and aas inc dec dec push pop pop arpl jae jle mov add stos scas mov mov add (bad) leave into aam fsubp jmp add or daa sub inc dec push push pop popa insb jno add xchg test mov mov xlat fsub out icebp idiv add or push sbb and sub aaa cmp inc dec push push pop pusha imul addb mov stos mov mov rcl fndisi(8087 out lock add pop add sub add inc dec push push pop popa add jb jl xchg stos mov mov rcl faddl loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne addb mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos add mov mov fcomp add add out repnz add or push sbb sub cmp dec push push pop pusha gs je jg test movsl stos add lret rcl fneni(8087 in lock cli incl unpcklps pop and sub xor dec push pop pop imul add test (bad) leave into add fcmovu in out hlt stc incb or adc push and add xor add dec push pop pop imul add jp test movsb stos scas mov mov aad (bad) add lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov mov mov fcomp jecxz in repnz std add or daa sub cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or add add daa sub aaa cmp inc dec push push pop pusha imul addb mov mov aam (bad) jmp incl add adc das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in lock cli incl pop add aas inc dec dec push pop pop imul lea mov mov rcl fsub out icebp idiv add pop or pop sbb es dec push pop pop arpl push jo jnp test cmpsb stos mov mov aad loopne jmp cmc cli incl sbb and cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) in cmc sti add or push sbb sub xor dec dec push pop pop gs je jg mov test ret add iret aam fsubp jmp add push adc push and sub xor cmp inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub ss inc dec add pop popa insb jno jl xchg movsl stos mov mov aad fild in out hlt add incl pop and cmp dec dec push pop pop imul add movsl stos scas mov mov (bad) jecxz in repz std add or sub add xor add dec push push add imul addb mov mov fcomp loop in repnz add or sbb cmp pop pop arpl jae add jle mov stos scas mov mov (bad) in ljmp unpcklps pop and das xor ds add push add imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop arpl add jle mov test mov mov xlat fsub out icebp idiv add or push add sbb daa sub aaa cmp inc dec push add bound jb jl xchg lods add enter fucom call add or daa sub aaa cmp inc dec add push pop pop add outsl jne add fwait mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov add test mov mov xlat fucom out repnz adc sbb aaa cmp inc dec push push add add jns orl test mov mov fcomp loop in repnz add or pop sbb es ss inc dec push push pop pusha imul addb mov lods mov mov (bad) fneni(8087 out lock sti add and cmp add add dec push push pop pusha add jbe addb cmpsb stos mov mov int xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add insb jno js (bad) xchg mov mov fcomp loop in repz add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov aam fsubp call add or and sub inc dec push push pop popa imul ja add pushf mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor add dec dec push pop pop add imul mov test (bad) leave into add add loopne ljmp unpcklps push and xor cmp pop pop bound add jae jle test lahf movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add repnz add or add sbb aaa cmp inc dec push push pop popa imul jl add mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor add push pop pop imul add add mov test mov mov add add in out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul js (bad) add add mov xlat fucom out repnz add or push sbb sub cmp dec push pop pusha gs jne jg mov test ret enter fsubp call add push adc sbb xor ds dec dec push pop pop arpl jae jle test lahf movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov add leave into aam fsubp jmp add push adc push and xor ds dec dec push add imul mov xchg lcall add (bad) leave into aam fsubp jmp sti add or push sbb sub cmp dec push push pop pusha gs jne addb pushf add add fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and add inc dec push push pop popa imul addl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rolb int3 rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jno jnp xchg movsl add int3 add rcl fndisi(8087 out lock add push add daa sub aaa cmp inc dec push push pop bound jno jl xchg add mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov rcl fucom out repnz add or pop sbb daa sub aaa add pop pop bound jae add add orl movsb test ret leave into rcr fsubp call add or add das xor ds dec add pop pop imul (bad) xchg cltd sahf mov mov aam fsubp jmp add or sub inc dec push push pop popa insb jno js (bad) xchg add ret rcl fucom out repnz add add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop add imul mov add scas add aam fsubp jmp add or sub add push pop pop imul test movsb test (bad) leave into rcr fiadd in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg cmpsl lods mov mov rcr fucom call add or daa sub aaa add cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or sbb sub xor dec push pop pop imul mov test mov mov add fiadd add call add or daa sub ss inc dec push push pop add insl jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add push or push sbb and aas inc dec dec push pop pop imul lea lods mov mov rcl fucom add out repz std add or daa sub aaa cmp inc dec push push pop pusha imul add jo jp test movsb test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov movsb test ret leave into rcr fucom call incb or push adc sbb aaa cmp inc dec push push pop popa imul add xchg test mov mov (bad) fsub out lock add or adc sub xor dec push pop pop fs je jle mov test mov mov rcr fucom call std add push adc sbb aaa cmp inc dec push push pop popa imul addb add add mov mov (bad) jecxz out repz std add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop pusha imul test movsb test mov fcmovu in out hlt stc incb or adc pop and aas inc dec dec push pop pop arpl jae jge mov lahf movsb test add lret (bad) in out hlt stc incb push adc push and xor cmp inc dec dec push pop pop imul mov scas mov mov fcomp loop add repz incb or adc add and das xor aas inc dec dec push pop pop imul mov lods mov mov add add add add fcomp loop in repnz add or daa sub aaa cmp pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter add jecxz out repz incb or daa sub inc dec dec push pop pop bound jb add add mov stos mov add xlat fucom out in repz std add or daa sub ss inc dec push push pop add insb jno jl xchg cmpsb stos mov mov aam (bad) ljmp push add pop and cs add push pop pop imul mov lods mov mov xlat fsub out icebp idiv add add add adc sbb and aas inc dec dec push pop pop fs je jg mov test mov mov xlat fucom out repnz add or push sbb sub xor push push pop pop fs jne jg mov test ret enter loop in repnz add add push adc push and xor ds dec dec add imul (bad) xchg cltd lahf movsb test mov mov fadds fild in lock cli incl sbb and inc inc dec push push pop pusha gs jne jg xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor cmp dec push push pop pop add jbe addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc add push pop pop arpl jae jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add and sub cmp dec push push pop pusha imul jl xchg lods mov mov (bad) fndisi(8087 out add add idiv add pop add daa sub inc dec dec push pop pop arpl jae jge mov cmpsl add leave into rcr fsubp call add or sub inc dec push push pop add insl jae jge mov mov mov (bad) jecxz out repz std add or sub inc dec push push pop bound jb jl add add mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and cmp push pop bound jno jl xchg mov mov rcl fsub out icebp idiv add or push sbb and add xor dec push pop pop imul mov lods mov mov xlat fsub add in repnz std add or pop sbb daa sub aaa cmp inc dec push push pop pusha data16 jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push add aas inc dec dec push pop pop add je jg mov test mov mov add enter fldl jecxz out repz incb add push adc push and xor ds dec add pop pop arpl jae jge mov mov mov xlat add jecxz in repz std add or daa sub add cmp push pop bound jno jl xchg cmpsl lods mov add xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call incb or adc push and sub dec dec push push pop bound jno js (bad) xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and add xor dec push pop pop imul test mov mov fcomp loop add add add repz std add add adc push and xor ds dec dec push add arpl jae jge mov mov mov xlat fucom add in repz std add or daa sub inc dec dec push push pop bound jb jl xchg lods mov mov rcr fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul add addb movsl stos scas mov mov (bad) in out hlt stc incb add unpcklps pop and das xor ds dec dec push pop pop imul mov test ret enter fucom call add or pop sbb daa sub ss inc inc dec push push pop bound jb jl orl cmpsl lods mov mov (bad) fsub out lock add pop add push sbb and sub aaa cmp inc dec push push pop popa add ja (bad) xchg lods mov mov rcl fucom out repnz adc sbb aaa cmp inc dec push add arpl jae jge mov cmpsl lods mov add fadds fsubp jmp add push adc push and sub dec dec push push pop bound jb jge xchg add mov (bad) fndisi(8087 out icebp idiv add or add sbb es cmp dec push push pop pusha imul addb mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec add pusha gs jne addb mov mov aad loopne ljmp lldt xor add cmp dec push push pop pusha imul add fwait mov mov rcl fsub out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa data16 jl xchg lods mov mov rcl fsub out add std add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret add into rcr fucom call add or pop sbb add aaa cmp inc dec push push pop pusha imul addb movsb stos add lret fcmovu in out hlt stc incb or adc push and sub inc dec push push pop popa add jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop add aas add push add pusha gs jne jg mov nop xchg lcall (bad) int xlat fldl jecxz out repz incb or add cs ds dec dec push pop pop arpl jae jge test mov mov fcomp jecxz jmp add or adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in add clc std add or daa sub inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov rcr fucom call add or daa sub ss inc dec push push pop pusha imul add fwait mov mov rcl fndisi(8087 out icebp idiv add or push sbb sub xor dec push push pop add insb jno jl xchg add int3 rcl fsub out icebp add std add or daa sub aaa add push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp testb add or and xor ds dec dec pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and sub xor push push add imul addb movsl stos mov mov aad add out lock sti add and inc inc dec dec push pop pop fs je jg mov movsl stos scas mov mov add loopne ljmp unpcklps pop and aas inc dec dec push add gs je jnp test movsl stos scas add mov mov aad loopne ljmp add push sbb and inc inc dec push add popa imul addl mov mov (bad) fneni(8087 out lock sti add sbb sub add cmp push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc add dec dec push pop pop imul test movsb test (bad) leave into rcr fsubp jmp incl unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test scas mov mov fcomp loop add repz incb or adc sbb cmp pop pop bound outsb jae jle mov mov mov mov add (bad) in out repz incb or adc sbb xor ds dec dec push pop pop arpl push je jg mov test add leave iret aam (bad) jmp add push adc push and sub xor ds add push pop pop imul (bad) xchg cltd lahf movsb test leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha gs add test movsb test (bad) leave into rcr fsubp call incb push adc push and xor cmp pop pop bound jb jl xchg test mov mov xlat fsub out icebp idiv add or push add daa sub ss inc dec push push add add js (bad) xchg cmpsl lods mov mov xlat add loop in repnz add add pop or adc sbb and xor ds dec dec push pop pop bound jb jge xchg lods add leave into rcr fsubp call add or daa sub add cmp push pop bound jb jl xchg test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov cltd lahf movsb test (bad) leave into rcr fsubp call add or adc push and xor ds dec dec push pop pop bound jb jge xchg test mov mov xlat fucom out repnz add or push sbb add inc dec push push pop popa data16 ja jle mov test mov mov xlat fucom out in repz std add or and add das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov iret aam (bad) jmp add push adc push and xor cmp push pop pop arpl jae jle mov test mov mov rcr fsubp call add push pop sbb aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov add (bad) lret rcl fneni(8087 out lock sti add add sub cmp dec push push pop pusha gs jne jg mov test rol iret aad (bad) ljmp push adc push and xor cmp push pop pop arpl jae jle test lahf movsl stos scas mov mov (bad) in out hlt stc incb add pop and cs cmp inc inc dec push push pop pusha gs jne jg mov test ret enter flds (bad) ljmp push adc push and xor cmp pop add push (bad) mov cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jg mov test mov mov fcomp loop out repnz add or pop sbb daa add inc dec push push pop popa imul addb movsl stos scas mov mov aad (bad) ljmp push adc push and xor ds dec add pop pop arpl jae jge mov mov test ret enter fucom call add add sub inc add push pop pop arpl add outsb jae jge mov cmpsl lods mov mov (bad) faddl loop call add or daa sub aaa cmp inc dec push push pop popa add jno jl xchg movsl stos mov mov add fneni(8087 in lock cli incl unpcklps push and cs ds dec dec push pop pop arpl ja (bad) xchg test mov mov fcomp loop in repnz std add or sub inc dec dec push pop pop gs jne jg mov stos scas mov mov fiaddl loope jmp idiv add or push sbb es ss inc dec push push pop popa add jae jge mov add rol rcl fneni(8087 out lock add or push sbb add aaa cmp inc dec push push pop add push jne addb add add rol rcl fneni(8087 in lock sti add or adc pop and das xor aas inc dec dec push pop pop arpl jae jle mov movsb test ret enter fucom call add or adc sbb aaa cmp push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop add jae jle mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa imul addb mov lods mov mov rolb fcomp loop in repnz add or pop sbb es cmp inc dec push push pop popa insb jno add orl test mov mov add xlat fucom out repnz add or push add xor cmp push pop bound jb jl xchg test mov mov xlat fsub out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl add jns test mov mov fcomp loop in repnz std add or and sub inc dec push push pop bound jno jl xchg mov mov (bad) add loop add repz std add or daa sub aaa cmp inc dec push push add insb jb jl xchg mov mov fcomp loop in repnz std add or daa sub xor cmp inc dec dec push pop pop imul mov scas mov mov aam (bad) ljmp unpcklps push and sub xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg add add scas mov mov (bad) in out hlt stc incb push adc push and sub xor ds dec dec push pop pop arpl jae jge mov cmpsl add enter fsub out in repz add add push adc push and sub inc dec push push pop bound insl jb jge xchg mov mov rcr fucom call add or add add add daa sub inc add push pop pop arpl jae jge mov cmpsl lods mov mov rcl fucom out repnz add or pop sbb daa sub add cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec add pop pop imul mov mov add fcomp jecxz in repnz std add or adc sbb and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov add (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg add test ret leave into rcr fsubp call incl push adc push and cs ds dec add add pop pop arpl jae jge mov mov mov fadds fsubp jmp add or sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne out icebp idiv add pop or pop sbb daa sub ss inc dec push push pop add insb jb jl xchg lods mov mov (bad) fneni(8087 add jmp cmc sti add sbb add aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov rcl fndisi(8087 add in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add mov (bad) fndisi(8087 out lock sti add push or push sbb sub cmp dec push push pop pusha imul add addb movsl add vaddsubps fnop in add idiv add or push sbb and inc inc dec push push pop pop fs jne jg mov stos scas mov mov (bad) jecxz out repz incl push add das xor aas inc dec dec push pop pop imul mov ret rcl fsub out icebp idiv add or pop sbb add add daa sub aaa add push pop pop arpl jae jle mov test ret enter loope out testl adc sbb and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into add (bad) fneni(8087 in lock add or daa sub inc dec dec push pop pop arpl jae jge mov test mov mov add enter fldl jecxz out repz incb or add cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub xor cmp push pop pop arpl jae jle mov test scas mov mov (bad) jecxz out repz incb or adc sbb cmp push add add add add arpl jae jns test movsb test ret leave into rcr fsubp jmp add or and add aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out add repz std add or daa sub aaa cmp inc dec add pop popa insb jno jnp xchg movsl stos mov mov aam (bad) add out add cli add pop and das xor cmp dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or pop sbb es cmp inc inc dec push push add insb jb jl xchg stos mov add fneni(8087 out idiv add or push sbb sub cmp dec push push pop pop gs add add xchg fwait mov mov aad loopne ljmp unpckhps pop and sub xor dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz add add and sub xor push push pop pop add jo jnp xchg movsl stos mov mov aam (bad) jmp add or add adc das xor add pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push add imul mov stos scas mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov add movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor add inc dec dec push add imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push add push sbb sub cmp dec push push pop pusha imul jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps add and add add inc inc dec push push pop pusha add jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl outsl je jg add movsl stos scas mov mov (bad) in ljmp unpcklps pop and das xor aas inc dec push pop pop imul mov scas mov mov add fneni(8087 in lock sti add and aas inc dec dec push add imul jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub add cmp pop pop bound jb jge mov movsb test (bad) leave into rcr fsubp jmp add push adc push and xor add inc dec dec push pop pop imul add outsl je jg test movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add add (bad) lret rcl fneni(8087 in lock sti add sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov roll fcomp loop in repnz add add or daa sub aaa cmp inc dec push push pop popa insb jno js (bad) xchg mov mov (bad) jecxz out repz incb or adc sbb cmp dec push pop pop gs jne jg mov stos scas add rcl fneni(8087 in lock cli add pop and aas inc dec dec push add imul addb add mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl add add int3 rcl fsub out icebp idiv add or push sbb add sub inc dec push push pop bound jb jl xchg mov mov int fcomp jecxz in repz std add or daa sub cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov aad (bad) add lock cli add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) add fneni(8087 in lock cli incl es inc dec push push pop popa data16 jno jnp test movsb stos scas add iret aam add in jmp cmc sti add pop and aas add dec push pop pop fs je jle mov test mov mov xlat fsub add call add or daa sub aaa cmp inc dec push push pop pusha imul add jp test movsb test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop imul mov lods mov mov (bad) fsub out in icebp idiv add pop or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add add add adc sbb and inc inc dec push push pop pop fs je jle mov test mov mov rcr fucom out add clc add add push adc push and sub dec dec push add arpl jb jge xchg stos mov mov aad (bad) ljmp push movhps and sub xor dec push pop pop imul lea add add mov rol rcl fcmovu in out hlt stc incb or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add push or push add daa sub cmp dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub add add push push pop pusha gs je jg mov test mov mov xlat add jecxz in repnz add or and sub inc dec push push pop bound insl jb jge xchg stos mov mov aad (bad) ljmp add adc das xor dec push pop pop imul mov lods mov mov add ret rcl fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl lldt add xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop add pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out add idiv add or push add add sub aaa cmp inc dec push push pop pusha imul add fwait mov mov aam (bad) jmp add or add das xor ds dec dec push pop pop bound js orl test mov mov (bad) fndisi(8087 out add cmc cli add pop and cs ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and add xor aas inc add push pop pop fs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul add mov lods mov mov xlat fsub out icebp idiv add add push sbb sub add cmp inc inc dec push push pop popa insb jno jnp xchg mov mov aad loopne ljmp unpcklps push and xor add aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor add push pop add push je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov add add rcl fsub out icebp idiv add or adc sub cmp add add popa insb jno jl xchg movsl stos add lret rcl fneni(8087 in out cmc cli incl unpcklps push and xor ds dec dec add push pop pop imul mov lods mov mov fucom out repnz add or pop sbb daa sub add cmp add add push push pop bound jb jl xchg lods mov mov xlat add jecxz in repnz std add or pop and sub xor push push pop pop gs jne jg mov test rol iret aad loopne add icebp idiv add or adc xor dec push pop pop gs jne jg mov test les lret fcmovu in lock cli add sbb sub xor dec push push pop popa imul addb mov mov rcl fsub out repnz add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli add pop and aas inc dec add pop pusha gs add addb movsb stos scas mov mov (bad) in out add cli incl and aaa cmp inc dec dec push pop pop bound jb jge xchg lods mov mov add fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) faddl loop in repnz add add add or pop sbb xor cmp pop add imul mov lods mov mov aam fsubp add out hlt cli incl unpcklps pop and das xor dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub cmp push pop bound outsb jae jge mov add ret rcl fsub out icebp idiv add or adc sbb aaa cmp inc add push pop add push je jg mov test ret enter fucom call incb or adc add and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp testb add or pop sbb daa sub add cmp add push pop pop bound jb js orl cmpsl lods mov mov rcr fucom call add or adc sbb cmp push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop gs jne add fwait mov mov iret aad (bad) ljmp unpcklps push add aas inc dec dec push pop add imul ja (bad) xchg lods mov mov (bad) fndisi(8087 out lock add pop or push sbb sub xor cmp inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp add push sbb sub xor push push add imul addb mov mov (bad) fneni(8087 add in icebp idiv add or add sbb aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp call add add add or daa sub aaa add push pop bound jb js jle add movsb test (bad) leave into rcr fsubp jmp add push adc add and xor ds add push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb add sub inc dec push push pop popa insb add jge add add mov xlat fsub out icebp testl adc sbb xor cmp push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov add ret enter fsubp call add or add add daa sub aaa cmp inc add push pop bound jno jl add cltd lahf movsb test ret enter fsubp call add or daa add dec dec push add arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub add cmp inc dec push push pop pusha imul add fwait mov add rol rcl fndisi(8087 out icebp idiv add add push sbb es add inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov ret rcl fsub call push or push sbb sub cmp add dec push push pop add insb jno jl xchg add mov rcr fucom call add or pop sbb aaa cmp inc dec dec push pop pop bound outsb jae jle mov test mov mov xlat fsub out repnz add or push sbb es cmp add pop popa insb jno jl xchg mov mov add xlat fucom out repnz add or pop sbb and xor inc inc dec dec push add gs jne jg mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov rcl fucom out repnz add or push sbb and inc inc dec push push pop pop fs add add jg mov test mov rcl fneni(8087 out lock sti add pop and das xor ds dec dec add pop fs je add lcall mov fcomp jecxz in repnz add or pop sbb daa sub cmp dec push push add insb jno jnp xchg add rol rolb (bad) fndisi(8087 out lock add add sti add pop and cmp dec dec push pop add imul addb movsb stos scas mov mov fcomp jecxz in repz std add or daa sub cmp dec push push pop pusha imul addb movsb test ret enter (bad) in out repz incb or daa sub dec push add bound jae jge mov xchg cwtl sahf mov mov (bad) add ljmp unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg test mov mov fadds fsubp jmp add unpcklps pop and das add add cmp dec push push pop pusha imul addb add ret rcl fsub out repnz add or adc push and xor ds dec dec push pop pop arpl jae jle add mov mov (bad) faddl loop in repnz add or add xor ds add push pop pop gs jne add fwait mov mov add add xlat fsub out icebp idiv add add sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test rol rcl fneni(8087 out lock add pop or pop sbb daa sub aaa cmp inc dec push push add push js orl test mov mov aam (bad) jmp add unpcklps pop and das xor cmp dec push push pop pusha gs jne addb movsl stos add (bad) int xlat fucom call add or adc push and cs ds dec add pop pusha gs jno jnp xchg stos mov mov xlat fsub out icebp idiv add or add pop sbb es add cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov scas mov mov fcomp add jmp add push adc push and sub xor aas inc dec dec push pop pop arpl jae add mov test add leave into rcr fsubp call incb push adc pop and cs ds dec dec push add imul mov scas mov mov aam fcmovu in out hlt stc incl push adc push add aas inc dec dec push pop pop add jne addb mov mov rcl fneni(8087 in lock sti add pop and das xor add add aas inc add push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp or adc xor dec push push pop popa imul addb mov mov add (bad) fneni(8087 out lock sti add push or push sbb sub cmp dec push push pop pusha data16 jl xchg cmpsb stos mov mov aad add out in repnz add or pop sbb es add cmp push pop bound jb add mov mov mov aam fsubp jmp add adc push and sub dec dec push push pop add insl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add or adc pop and xor ds dec add pop pop arpl jae jle mov mov mov xlat fsub out icebp testb add add or adc sbb es cmp dec push push pop pusha gs je jnp xchg movsl stos mov mov aam fsubp jmp cli add pop and das xor add push pop pop imul mov add (bad) leave into aam add in out hlt stc incb or adc sbb aaa cmp push pop popa add jb add jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp add adc pop and xor ds dec dec add arpl jae jge mov add ret enter fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul add fwait mov mov aam (bad) jmp add add pop and aas inc add push pop pop imul add test mov (bad) add ljmp unpcklps push and xor ds dec dec push push pop arpl js (bad) mov popf mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add add sub cmp dec push push pop pusha add jno jl xchg cmpsb stos mov add fsub out repnz add or pop sbb add add cmp push pop bound jb jl mov stos scas mov mov (bad) in out repz incb or add add and das xor ds dec dec push pop pop arpl imul mov add enter fcomp jecxz out repz std add push adc push and sub inc dec push push pop popa data16 jno jnp xchg mov stos mov mov add lret fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and add ds dec dec push pop pop arpl jb jns orl cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb sub add inc dec push push pop add add insb jno jnp xchg add rol rcl fsub out icebp idiv add or push add xor ds dec dec push pop pop bound add jle mov cmpsl lods mov mov rolb fcomp jecxz in repnz add add sub inc dec push push pop popa data16 jno jnp xchg mov mov fiaddl loope add jmp cmc sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) jmp add push adc sbb add ds dec dec push pop pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb daa sub cmp dec push push pop pusha gs jne jg add add add lret fcmovu in out hlt stc incb or and xor ds dec dec push add pop imul mov lods mov mov (bad) fndisi(8087 out lock sti add pop and cs aas inc dec dec push pop pop arpl jae jge orl test mov mov (bad) fsub out add idiv add or add pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor add pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop bound jb jl xchg stos mov add add rcl fildl loop in repnz add or push sbb sub cmp inc inc dec push push pop popa data16 jno ja jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop fs je jg mov movsb stos scas mov mov (bad) jecxz out repz std add or and xor ds dec add pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pop gs add addl mov rol rcl fnop in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop jmp add stc incb add unpcklps pop and cs ds dec dec push pop pop arpl push je jg mov add rol rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov mov mov aam (bad) jmp add push adc push and xor add inc dec dec push pop pop imul mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add add adc push and das xor ds dec dec push pop pop arpl jae jle mov mov mov mov rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out add stc incl unpcklps pop and cs ds dec dec push pop pop add je jle xchg pop sub cmp push push pop data16 add insl jae jle mov mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul jge xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fneni(8087 out add idiv add or adc sbb add add daa sub aaa cmp inc dec push push pop popa imul ja addl scas mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov add fsubp call add or sub add push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push add aaa add inc dec dec push pop pop add insl jae jge mov movsb test ret leave into add add loope jmp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt cli incl add and pop pop fs je jg mov nop xchg fwait mov mov aad loopne ljmp adc add sbb and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in add cmc sti add and sub xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop add jo jnp add mov mov add add (bad) lret rcl fneni(8087 add in icebp idiv add or push add and sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc add pop pop arpl jae jge mov test mov add fcomp jecxz out repz incb or adc sbb cmp pop add add push (bad) mov test mov mov xlat fucom out repnz add or pop add cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test add into rcr fsubp jmp add push add pop and das xor aas inc add push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne jl xchg scas mov mov (bad) jecxz out repz incb or unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf add (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter (bad) add jmp cmc cli add pop and aas inc dec dec push pop pop gs add addb mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp add inc add dec push pop pop arpl jae jle mov test mov fcmovu in out hlt add add and inc inc dec push add push pop bound jb jl xchg test mov mov fcomp jecxz in repz std add or sub cs ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out repnz std add push adc push and cs ds dec dec push pop pop arpl jae jle mov movsb stos add lret rcl fneni(8087 out lock sti add and inc inc dec push push pop pusha add insb add jl xchg lods mov mov rcr fucom call add or and cs ds dec dec push pop pop arpl add jbe addb movsl stos mov mov rol rcl fsub out icebp clc std add or sub dec add pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or add aas inc dec dec push pop pop fs je jg mov test rol add (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl add test mov mov fcomp loop in add stc incb or adc push and cs cmp inc dec dec push pop pop fs je jg mov mov mov add fucom out repnz add or pop sbb daa sub aaa cmp push pop bound insl jae jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp add add dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub add cmp push pop pop arpl jae jle mov test mov mov aam (bad) jmp incl pop and aas inc dec dec push pop pop gs jne jg mov add lods mov mov (bad) add loope in icebp idiv add or adc sbb aaa cmp inc dec push add arpl jae jle mov test add mov rol rcl fcmovu in out add sti add or push sbb sub cmp dec push push pop bound jb jge xchg mov lods mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jbe addl mov rol rcl fneni(8087 in lock sti add and aas inc dec dec add add insb jb jl xchg lods mov mov xlat fsub out add clc std add add adc push and xor ds dec dec push pop pop arpl jae jle mov test ret add lret rcl fneni(8087 in lock cli add adc add cmp dec push push pop pusha imul jl xchg lods mov mov add (bad) jecxz out repz incb or add pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb add vaddsubps fneni(8087 in lock cli add and aas inc dec dec push pop pop gs jne jg mov add stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or adc sbb daa add dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom add ljmp unpcklps pop and cs add add dec push pop pop gs je jg mov movsl stos mov mov aad loopne jmp add clc std add or daa sub inc dec dec push pop pop arpl jae jge mov test mov mov aad (bad) ljmp adc das xor dec push pop pop gs je jg mov test (bad) leave iret aam add add in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov xchg lcall mov aad loopne jmp cmc cli add and cmp inc add push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add add push adc push and cs ds dec dec push pop pop imul jne jg mov stos scas add rcl fnop in lock cli add pop sbb sub inc dec add pop arpl jae jle mov test mov mov fcomp loop jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or add sbb cmp inc dec dec push pop pop arpl jae jge mov test add lret fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec add pop pusha add jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or adc daa sub inc dec push pop pop bound jb jge xchg mov add test ret enter (bad) in out hlt stc incl unpcklps push and add xor cmp dec push push pop pusha data16 add jge xchg lods mov mov xlat fsub out icebp idiv add or sub xor ds dec dec add pop add jbe jl xchg lods mov mov xlat fsub add in repnz std add or sub add add add add cmp push pop bound jb jge mov mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg movsb test ret leave into rcr fsubp jmp add push adc sbb and das xor aas inc dec dec push pop pop imul mov cmpsb stos add int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov rcl fsub out icebp idiv add add pop sbb daa sub ss inc dec push push pop popa imul ja addl cwtl sahf mov mov fcomp loop in repnz add or sub inc dec push push pop bound add jno jl xchg add int xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test mov fcmovu in out hlt cli incl push adc push and add xor aas inc dec dec push pop pop arpl jae jle mov mov mov rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fldl jecxz in repz std add or and sub dec dec push pop pop bound jb jle test lahf movsl add (bad) aad loopne ljmp lldt sbb and inc inc dec dec push pop pop fs je jg mov add test mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp inc inc dec push push pop popa imul addb movsl add rol roll xlat fucom out repnz add or pop sbb add es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out add stc incl unpcklps pop and add xor dec push pop pop imul mov xchg lcall add fneni(8087 out lock add and es cmp dec push push pop pusha imul addb movsb stos scas add mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add fucom call add or pop sbb daa sub aaa cmp inc dec add pop bound jb jl xchg stos mov add fcomp loop call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp or adc xor dec push push pop pusha imul addb add mov rcr fsubp call add or sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat add add add call add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) add lock sti add and aas inc dec dec push pop pop add jo jnp test movsl stos scas mov mov aad add out lock add add or push sbb sub xor push push pop pop gs outsl jne jg mov test (bad) leave into rcr fsubp call add or and xor cmp push pop pop arpl jae jle mov test mov mov iret aam add in out cmc cli incl unpcklps pop and cs ds add push pop pop imul mov mov mov fcomp loop in add clc add add incb or sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add add or push sbb sub xor push push pop pop gs add addb movsl stos mov mov aam add in add idiv add add pop sbb es cmp dec push push pop pusha imul addb add scas mov mov (bad) in out hlt stc incb or adc push and sub xor ds dec dec push pop pop add je jle mov test ret add iret aam add in add idiv add and inc inc dec push push add insb jno jnp xchg movsl stos mov mov aad loopne ljmp or adc and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add add sub inc dec push push pop popa insb jno jl add mov mov (bad) fsub out add idiv add or and xor cmp pop pop bound jb jge xchg lods mov add mov (bad) fndisi(8087 out lock sti add and cmp dec push push pop pusha gs add addb movsl stos mov mov aad fneni(8087 in add idiv add pop or pop sbb daa sub cmp dec push push pop pusha add jl xchg cmpsb stos mov mov aad loopne ljmp lldt sbb and inc inc add add push pop pop fs je jg mov test ret enter fucom call add or and xor cmp pop pop bound jb jge xchg test mov mov xlat fsub out repnz add or and add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat faddl add out icebp idiv add or push sbb sub cmp add pop popa imul addb mov stos mov mov aad loopne add icebp idiv add pop or adc sbb cmp push pop bound jno add xchg movsb stos scas mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound add jl xchg lods mov mov ret rcl fsub add in repnz adc sbb add cmp inc dec dec push pop pop imul mov lods mov mov add add in out add cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae add mov test ret enter fucom call idiv add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov movsb add (bad) aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg add mov mov rcl fsub out icebp add std add add adc push and sub add dec dec push pop pop imul mov mov mov fcomp jecxz jmp incl add pop and aas inc dec dec push pop pop fs je jg mov (bad) xchg lcall mov (bad) jecxz out repz incb or adc add sbb cmp push pop bound jb jge xchg lods mov mov (bad) fneni(8087 out in icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov add add add (bad) ljmp or adc sub cmp dec push push add pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add add pop or add sbb aaa cmp push pop bound jno jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc add inc dec push push pop pop gs je jg mov stos scas mov mov (bad) jecxz out repz add add unpcklps push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov into rcr fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fsub out in repnz add or push add xor cmp push pop bound add jns test mov mov fcomp jecxz in repnz std add add add pop and sub xor dec push pop pop imul mov scas add aam fsubp jmp add push adc sbb cmp push pop bound add insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into add fiaddl loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pusha gs jne jg mov test ret leave into aam fsubp jmp incl or adc push and add xor aas add push push pop pop gs je add addl mov rol rcl fnop in lock cli incl add add sub add inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov rcl fneni(8087 out icebp idiv add and aas inc dec dec push pop pop imul mov add add scas mov mov fcomp loop in repz std add or and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne out add idiv add or daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add add adc push and add add inc dec dec add imul add nop xchg lcall mov (bad) jecxz out repz incb or adc push and add add dec push push pop pusha gs jne jg mov test ret leave into add (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov add rcl fndisi(8087 out lock add and cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out add stc add add pop and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz in repz std add or and sub dec dec push pop pop add je jle mov mov mov aam (bad) jmp add push adc push and xor add add dec push add imul addb movsb stos scas mov mov (bad) add ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat add loope in icebp idiv add or push sbb and add dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb add add adc das xor dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa add inc dec push push add push add orl test add lret fcmovu in out hlt stc incb push adc push and xor cmp add pop add jbe addb movsl stos scas mov mov (bad) in out add cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add add push or push sbb sub cmp dec add pop popa imul addl mov rol iret aad (bad) ljmp push add sub xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or and das xor aas inc dec dec push pop add push je jg mov cltd lahf movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp or adc das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp add add dec push push pop pusha imul jg xchg add rol roll xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test rol iret aam (bad) ljmp push adc push and sub add dec push pop pop fs je add lcall mov iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno add add addl mov mov rcl fucom out icebp add std add or daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov add fneni(8087 out lock add or adc xor dec push add popa insb jae jge xchg mov mov xlat fucom out repnz std add add add add pop or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp idiv add and aas inc add push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test add add rcr fucom call incb or adc add and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz add add push adc push and xor ds dec dec push pop pop arpl add jg mov stos scas mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound add jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out add sti add sbb sub cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc sub cmp dec push push pop popa data16 jno jnp xchg mov mov rcr fsubp call incl push adc push and xor ds dec dec push pop pop arpl jae jle add add popf mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop popa imul addb mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop gs jne jg mov test (bad) leave into rcr fsubp jmp add or and sub xor add inc dec dec push pop pop imul test movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec add pop pop imul (bad) xchg cltd sahf movsb test add lret aad loopne ljmp unpcklps sbb and inc inc dec push push pop pop gs je jg mov stos scas mov add (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and aas add push push pop pusha add imul addl mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs add addb movsl stos mov mov aad loopne add icebp add cld add or pop sbb es cmp push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add cld add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) lret (bad) in ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha data16 jl xchg lea add popf mov add fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc add and sub dec dec push pop pop bound push orl test mov mov xlat fucom call add or daa sub add add add cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp add push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov mov mov aam (bad) add ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov rcr fsubp jmp add push adc push and xor cmp add push push pop pop gs jne jg mov xchg xchg pushf mov mov (bad) fndisi(8087 out lock add and sub cmp dec push push pop pusha gs jne jg mov movsl add lret rcl fneni(8087 out lock add sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop add jo jp test movsb stos scas mov mov (bad) in ljmp add add add or adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in ljmp or adc xor add push pop bound jb jl addl mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg add add mov add enter fucom call add or daa sub xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno add mov lods mov mov (bad) fndisi(8087 out lock add pop add sub add aaa cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add add or sub inc dec push push pop bound push jg mov mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add lret rcl add loope in icebp idiv add or push sbb sub cmp add pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add or adc xor push push pop pop gs jne jg mov cmpsb stos mov mov aad loopne ljmp unpcklps sbb add sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps sbb and sub cmp dec push push pop pusha imul add xchg pushf mov add aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat faddl jecxz in hlt stc incb push adc push and xor ds dec dec push pop pop add je jle mov test mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg add (bad) int fcomp loop in repnz add or pop sbb daa sub xor add inc dec dec push pop pop arpl jae jge mov add xchg cwtl popf mov mov xlat fsub call add or pop sbb daa sub xor cmp inc dec dec push pop pop arpl jae jle mov lahf movsl stos scas mov mov rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock add add add and sub inc dec push push pop popa insb jno add xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov aad loopne jmp cmc sti add and inc inc add add popa insb jno jl xchg stos mov mov add add (bad) lret rcl fneni(8087 in lock sti add and aas inc add push push pop popa insb jno jl xchg stos add enter fldl jecxz jmp add push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or adc sbb xor ds dec add dec push pop pop arpl jae jle mov movsb test ret leave into rcr fsubp jmp add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) add loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop add add js orl test mov mov xlat fsub out add in repnz add or push sbb es cmp dec push push pop add push orl test mov mov iret aam fsubp jmp add add and aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fneni(8087 in lock sti add pop and add inc dec push push pop popa data16 jno add add mov add int3 rcl fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out add cli incl pop and das xor aas inc dec dec push pop pop imul xchg cmpsb stos mov mov aad loopne ljmp unpckhps add add pop and das xor aas inc dec dec push pop pop imul xchg cmpsb stos mov mov aad add add in repnz add or adc sbb and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb es ss inc inc dec add pop bound jb jge xchg cmpsl lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add sbb sub cmp dec push push pop pusha gs jne jg mov nop xchg add mov (bad) fsub out icebp idiv add or push sbb and inc add inc dec push push pop pop gs jne jg mov nop add mov mov (bad) fsub out icebp add add add or add add xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub das xor dec push pop pop imul mov mov mov add (bad) jecxz ljmp unpcklps push and add dec push pop pop imul mov mov mov fcomp jecxz out repz incb add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc add push pop bound push add add mov test mov mov fcomp add jmp add push adc push and xor ds dec dec push pop pop bound jb jns add movsb test les lret fcmovu in out hlt stc incl pop and sub xor dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add add and sub xor dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp inc dec dec push pop pop add jae add mov add mov mov fcmovu in out hlt add add pop and aas inc dec dec push pop pop fs je jg mov nop xchg add mov rol rcl fildl loope in icebp idiv add or push sbb sub xor dec push push add push orl test mov mov fcomp loop in repnz std add or and sub dec dec push pop pop add je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub xor cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jl xchg cmpsl add enter fucom out repnz add or adc sbb cmp push pop bound jb jge xchg test add into rcr fsubp call incb or adc push and xor ds dec dec push add imul mov stos scas mov mov (bad) in out repz incb or adc push and add xor ds dec dec push add arpl jae jns test movsb test (bad) leave into rcr fsubp call add or sub add push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb mov mov into rcr fsubp call repz incb or add xor ds dec dec push pop pop arpl jae jge mov test mov add aam (bad) jmp add add adc pop and das xor aas inc dec dec push pop pop imul test mov stos mov mov (bad) fsub out icebp idiv add or push sbb sub xor dec push push pop popa imul addb add xchg mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop add imul addb movsl stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov scas mov mov (bad) add loope in icebp idiv add or push sbb add sub cmp inc inc dec push push pop popa insb jno jl xchg stos mov mov add fldl jecxz out repz std add or add xor ds dec dec push pop pop arpl jae jle add add mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop add push jne jg mov add add add add mov mov aad loopne ljmp adc das xor dec push pop pop fs je jp test movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov aam add in out add sti add or push sbb sub cmp dec add add insb jno jl xchg stos mov mov (bad) fneni(8087 in add testb add or daa sub inc dec dec push pop pop arpl jb jge mov mov add (bad) in out hlt stc incb push adc push and cs inc inc dec push push pop pusha gs jne jnp xchg movsl stos mov mov rcl fildl add loope jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov flds loopne ljmp or adc sbb daa sub ss inc dec push push pop popa insb jno ja add jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add add and sub dec dec push pop add imul mov scas mov add add (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov xchg lcall mov fiaddl loopne jmp cmc cli add add add adc das xor aas inc dec dec push pop pop gs je jg mov test rol rcl fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incl lldt sub cmp dec push push pop pusha imul addb mov add int3 rcl fsub out icebp idiv add or push sbb add sub xor cmp pop pop bound jb js orl test mov mov add fsubp jmp incl unpcklps pop and das xor aas inc dec dec push pop pop imul popl xchg pushf mov mov (bad) fildl loope add repnz std add add unpcklps sbb and add xor dec push pop pop gs jne jg xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp or adc sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov add fsub out icebp idiv add or pop sbb add sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or adc sbb cmp pop pop bound jb jns orl test add aam (bad) ljmp add push sbb and sub xor cmp inc dec dec push pop pop add je jle mov movsl stos scas mov mov fcmovu in lock cli incl pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps sbb and cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub xor cmp push pop bound jb jge xchg mov mov aam fsubp ljmp adc sbb and add inc add push add gs jne addb add mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and xor dec add pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp add inc inc dec push push pop pusha add jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec add pop bound jb jge xchg cmpsl lods mov mov rcr fsubp call incb push adc push and cs add inc add push pop add push jle mov test ret leave add add rcr fiadd in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push add imul test movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs add add mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop gs jo jnp xchg cmpsb stos mov mov add fsub out icebp idiv add or adc sbb aaa cmp pop add add jne add add mov mov fcomp jecxz in repnz std add add or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb js orl movsb test (bad) lret fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov add add (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul add stos scas mov mov fcmovu in out add sti add or push sbb sub xor cmp inc dec push push pop popa insb jno add add lahf add mov xlat fsub out icebp idiv add or push sbb and sub add aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg test scas mov mov (bad) jecxz out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov aam add fsubp jmp add unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov fcmovu in out hlt cli incl sbb sub cmp dec add pop popa insb jno jl xchg add rolb int3 roll xlat fucom out repnz add or sbb aaa cmp push pop pop arpl add add jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov iret aam (bad) jmp add push adc push and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp add jmp add add add adc pop and cs aas inc dec dec push pop pop imul mov mov mov aad (bad) ljmp unpcklps pop and das add push push pop pusha imul jbe addl mov mov rcr add add ljmp or push sbb sub xor push push pop add insb jno jl xchg add mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov add fsub out in repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub add add dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out in repz std add or sub dec dec add pop arpl jae jle mov (bad) xchg lcall mov add loopne out icebp testb add or adc pop and das xor aas inc dec dec push pop pop imul mov xchg lcall mov add add add (bad) fneni(8087 out lock add or adc xor push push pop pusha add jno jnp xchg cmpsb stos mov add fsub out icebp idiv add or pop sbb es ss add dec dec push pop pop arpl jae jns test movsb test (bad) leave into aam fsubp jmp incl pop and aas inc dec dec push pop pop add add push je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov rcl fneni(8087 out lock add or add add sbb and inc inc dec push push pop pusha imul addb mov mov (bad) fsub out in repnz add or daa sub inc dec push push pop bound jb add test movsb add (bad) lret fcmovu in out cmc cli incl add sub xor push push pop pusha imul addb movsl stos add lret fnop in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs orl test mov mov fcomp jecxz in repz std add or add xor push push pop pusha gs add add jp test movsl stos mov mov aad fndisi(8087 out icebp idiv add or push sbb es xor cmp push pop bound jb jge xchg cmpsl lods mov add mov (bad) in add cmc cli add and inc inc dec push push pop pusha add jno jl xchg lods mov mov (bad) fsub out icebp idiv add add or push sbb daa sub ss inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or sub inc add push pop pop gs jne jg mov stos scas mov mov aam (bad) jmp add add adc das xor dec push pop pop add jo jnp xchg movsl stos mov mov aad loopne ljmp pop or pop sbb and sub dec dec push pop pop bound jb jge mov mov mov fcomp jecxz out repz incb or adc push and sub dec dec add pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jle mov test ret rcl fdivrp add and aas inc dec dec push pop pop gs je jg mov mov mov xlat fucom out repnz add or pop sbb add daa sub aaa cmp inc dec push push pop popa add jb jge mov cmpsl lods mov add (bad) jecxz out repz incb or adc push and xor ds add dec push push pop pusha gs jne jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out add idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov add (bad) lret rcl fneni(8087 out lock add and inc inc dec dec push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov iret aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop arpl add imul mov xchg cltd lahf movsb test (bad) leave into aam fsubp add out hlt cli incl pop and das xor aas inc dec dec push pop pop imul xchg add rol rcl fsub out icebp idiv add or pop add cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov fucom add out repz incb or adc sbb xor ds dec dec add arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps push and add aas inc dec dec push pop pop arpl jae jge mov mov add popf mov mov into aam fsubp call add add adc sbb xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor add inc dec dec push pop pop imul lea lods mov mov rcl fucom out icebp idiv add or push sbb add sub xor push push pop pop fs je jp test movsb test ret enter fucom call incb or daa sub inc dec dec push add arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor cmp inc dec dec push pop pop imul mov xchg cltd lahf movsb test add add add aad (bad) ljmp push add sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push push pop pop gs jne jg mov test ret add into rcr fsubp call add or daa sub aaa cmp add add add push push pop pusha imul add fwait mov mov aad (bad) jmp incl pop and cs add push pop pop add outsl je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp add push pop pop bound jb jl xchg mov mov xlat faddl add jmp add push adc push add das xor cmp inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push add bound jb jl xchg lods mov mov (bad) add loop in repnz add or push sbb sub cmp dec push push pop pusha imul jo jp test mov mov aad (bad) ljmp or adc das xor aas inc dec dec add pop fs add addb movsb test (bad) leave iret aam fsubp jmp add push adc sbb cmp add arpl jb jge xchg cmpsl lods add int fcomp loop in add hlt add incl push adc push and add aas inc add push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop bound push (bad) xchg cmpsl lods mov mov xlat fsub out in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb add add stos mov mov (bad) fneni(8087 in lock cli add sbb sub xor push push pop pop add jo jnp add cmpsb stos mov mov aad loopne jmp cmc sti add or adc xor push push pop pusha gs jno jl xchg stos mov mov rcl fsub out repnz std add add unpcklps pop and add add das xor aas inc dec add pop pusha add jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl add mov mov xlat fsub out repnz add add adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov leave iret aam (bad) jmp add push adc pop and das xor add dec push push pop pusha gs jne addb mov mov ret rcl fucom out repnz add or sub dec dec push pop pop bound jb jge mov mov mov (bad) jecxz add cmc cli incl unpcklps pop and add xor cmp inc dec push push pop add bound add jge add movsb test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb add vaddsubps fnop in lock sti add and cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out in repnz add add or daa sub inc dec push push pop add je jle mov test mov (bad) fneni(8087 out repnz add and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test mov fcmovu in out hlt stc incl lldt das xor dec add push pop popa imul addl add lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov test mov mov rcr fucom out repnz add or push sbb sub cmp add pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop bound jb js orl test mov mov rcl fldl jecxz in repnz std add or pop sbb es cmp dec push push pop pusha gs je jg mov test add leave iret aam fsubp jmp add or and sub inc dec push push add pop imul mov test add add iret aam (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp xchg movsl stos mov mov rcl fneni(8087 in lock cli add pop and das xor ds dec dec add pop imul mov scas mov mov fcomp loop in repnz add add sub inc add pop popa data16 jno jnp (bad) xchg stos mov mov rcl fsub out in repnz add or push sbb sub cmp dec push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl or adc sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in jmp idiv add push or push sbb sub xor push push pop imul mov stos mov mov aad loopne add icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb add jns orl test mov mov fcomp jecxz in repnz incb or unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov add add add mov mov aad loopne ljmp adc xor cmp inc inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb add add inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add sbb daa add add xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add add daa sub dec dec push push pop bound jb jl xchg movsb test ret leave into rcr fsubp call add or sub xor ds dec dec push pop pop arpl jae jle mov test add (bad) leave into aam fsubp jmp incl unpcklps pop and das xor aas inc dec dec add add insb jno jnp xchg cmpsb stos mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push add bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor cmp dec add add add insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and sub xor dec push pop pop fs jne jg mov test mov aad loopne jmp cmc cli add pop and das xor aas inc add push pop pop gs je jg mov stos scas mov mov aad (bad) ljmp hlt cli incl add adc das xor dec push pop pop imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl outsl add addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp push pop pop add outsl je jg add test movsb test (bad) leave into rcr fsubp call add or sub inc dec dec push pop pop arpl jb jge xchg test mov mov iret aam fsubp jmp add push adc sbb cmp push add imul lea lods mov mov xlat fldl jecxz out repz std add or add xor ds dec dec push pop pop bound jb jge orl movsb test (bad) leave into rcr fsubp call add push pop sbb aaa cmp push pop popa insb jno jl add sahf mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha add jno add mov stos add add mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec add pop fs je jle mov test mov mov add add in out hlt stc incl push adc push and xor ds dec dec push pop pop bound add jge mov cmpsl lods mov mov xlat fsub out icebp add std add or daa sub add cmp add dec push push pop bound jno jl xchg mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb pushf mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl add test mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop add insl jb jl xchg stos mov mov aad loopne out in repnz add or pop sbb es cmp dec push push pop pusha gs jne add fwait mov mov aam (bad) jmp add unpcklps pop and das xor add dec push pop pop imul mov test mov fcmovu in out hlt stc incb or adc push and xor cmp pop pop bound jbe (bad) xchg test scas mov mov (bad) jecxz out repz incb or sub xor cmp pop pop bound jb jge add sahf movsb test ret leave into rcr fsubp call add std add or daa sub inc dec push push pop bound jno js (bad) mov cmpsl lods mov mov (bad) fsub out icebp testb add or daa sub aaa cmp push pop popa insb jno jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc sub cmp dec push push add insb jno jl xchg xchg xchg fwait mov add xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov rcl fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov add lret fcmovu in out hlt cli incl unpcklps pop add add das xor ds dec dec push pop pop arpl jae jle add movsb test ret enter fucom call add add add pop and das xor ds dec dec push pop pop arpl jae jle mov add ret leave into rcr fsubp call add or daa add dec dec push pop pop bound outsb jae jle mov test mov mov into roll (bad) in out hlt stc incb or adc sbb cmp push pop bound jno jl xchg lods mov mov add fucom call add or daa sub inc add push pop bound jno jl xchg mov mov (bad) fndisi(8087 out in icebp idiv add or push sbb and aas add push push pop pop add jo jnp test movsl stos scas mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno ja (bad) xchg test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add fndisi(8087 out lock sti add add or pop sbb es cmp dec push push pop pusha gs jne jg mov add (bad) leave iret aam fsubp jmp add add adc push and xor cmp push pop pop arpl jae jge xchg mov mov xlat fsub out add idiv add or pop sbb sub cmp dec add add data16 jl xchg movsl stos mov mov rcl fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb add mov mov mov fcomp loop in repnz add or push sbb sub xor push push pop pop fs je jg mov test mov mov fcomp loop in repnz add add push adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos add lret rcl fneni(8087 in lock cli incl sbb and inc dec dec push pop add imul addl mov mov fcomp loop in repz std add unpcklps pop and das xor ds dec dec push pop pop add jo jp add pushf mov mov xlat faddl loop in repnz std add or sub dec dec push pop pop arpl jae jle mov movsb test rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa add sub add ds dec dec push pop pop imul mov mov mov add loopne ljmp adc xor dec push push pop popa insb jno jl add mov mov aam fsubp jmp add push adc push and sub xor push push pop pusha imul addb mov mov add xlat fucom out repnz std add or adc push and xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test rol rcl add loope in icebp idiv add or pop sbb daa sub ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push add pop add push jne addb movsl stos mov mov aad loopne ljmp or push sbb es ss inc dec push push pop popa add jae jge mov lods add into rcr fucom call incb or adc sbb aaa cmp push pop pop bound jb jge xchg cmpsl lods add add rcr fucom call add add std add or pop sbb add inc dec push push pop popa insw jne test movsb test (bad) leave into aam fsubp add out hlt cli incl add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno add jle mov cltd sahf movsb test ret leave into rcr fsubp call add or and xor cmp pop pop bound jb jge add mov mov (bad) jecxz out repz std add or and sub dec dec push push pop bound add jge mov test mov mov aam fsubp jmp incl unpcklps pop and add add xor aas inc dec add pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl add add sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov mov mov add add rcl fsub out icebp idiv add or push sbb sub cmp inc inc dec push push pop popa data16 jno jl xchg add ret rcl fsub out in hlt std add or daa sub inc dec dec push pop pop bound jb jge xchg mov mov fcomp loop in add stc incb add adc pop and das xor aas inc dec dec push pop pop add outsl jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop add add dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas add mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push add gs je jg mov test mov (bad) jecxz out repz std add or adc push daa xor add inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp add out hlt stc incb push adc push add xor dec push pop pop fs je jg mov add mov mov (bad) jecxz out repz incb or adc sbb xor push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub add add push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop imul test mov mov xlat fsub out icebp idiv add or add sbb sub xor add pop pusha imul addb movsb test ret enter add rcr fucom call add or push sbb sub cmp dec add push push pop popa data16 jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop add add add add jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul add mov mov aad (bad) ljmp push adc push and add xor ds dec dec push pop pop bound push (bad) mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl add je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jns test add add nop xchg fwait mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jnp test mov rol rcl fneni(8087 in out hlt cli incl push adc push and xor cmp push pop pop arpl jae jge orl test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg add mov mov aad (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg mov mov mov ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov aad loopne out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl imul mov test (bad) leave into rcr fsubp jmp add push adc sbb cmp push pop bound add add jb jl xchg add ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov add rcl fndisi(8087 out lock add add add add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fiadd in out hlt stc incl prefetcht2 and das xor ds dec dec push pop pop imul mov xchg lcall mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov add add ret enter (bad) out repnz add or push sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out out repz add incl pop and das xor add add push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc sbb es aaa cmp dec push pop pop bound jb jge xchg cmpsl lods mov mov rcl fucom out repnz adc sbb aaa cmp inc dec push push pop bound jb jl xchg stos mov mov aam fsubp add out repz add add pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl add adc daa sub aaa cmp inc dec push push pop popa imul add jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb xor ds dec dec push pop pop arpl jbe (bad) xchg cmpsl lods mov mov xlat faddl loop in repnz add or pop add cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add add daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb es add cmp dec push pop pop arpl jae jle mov test mov mov rcr fucom call add or daa sub aaa cmp inc dec push push add insl jb jl xchg mov mov (bad) fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop pusha imul add fwait mov mov aad loopne ljmp unpcklps push and xor add push add add add add add outsl je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov rcl fsub out icebp idiv add add pop sbb and sub inc dec push push pop popa insb jno jl xchg cmpsb add add leave into roll fcmovu add jmp add push adc push and xor cmp push pop pop arpl jae jge mov test mov mov loope in icebp idiv add or adc xor dec push push pop pusha gs jne jg mov movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor cmp pop add push jle test mov mov xlat fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz jmp add push adc push add das xor cmp inc dec dec push pop pop imul mov lods mov mov lret fcmovu in add cmc sti add add add adc das xor aas inc dec dec push pop pop add je jg mov test mov mov xlat fucom out repnz add and sub cmp dec add pop popa insb jno jl xchg add lret rcl fndisi(8087 out lock add and inc inc dec dec push pop pop fs jo jp test mov add add (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz adc sbb add ds dec add pop pop imul mov mov mov add add loope jmp idiv add pop or push sbb es add add cmp inc dec push push pop popa imul jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and inc dec dec push pop pop add jne addb movsl stos scas mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb mov mov ret rcl add loope in icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add sbb sub cmp dec push add popa add js (bad) mov cmpsl lods mov mov xlat fsub out icebp add add incl pop add sub xor push push pop pusha gs add jo jnp test mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pusha imul mov stos mov mov aad fild in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb add les lret rcl fnop in out cmc cli incl add add adc pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs cmp inc dec dec push pop pop imul add cmpsb stos mov mov (bad) fneni(8087 in lock cli add add sbb aaa cmp push pop pop arpl jb jge mov add mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add push or push sbb sub xor push push pop pop gs je jg mov test add lret fcmovu add jmp cmc cli add pop and xor inc add inc dec push push pop popa imul addb movsl stos scas mov mov fnop in out cmc cli incl unpcklps pop and cs ds dec dec push add imul mov xchg cltd lahf movsb add (bad) lret (bad) in out hlt stc incl push adc push and add add cmp dec push push pop add insb jno jl xchg movsl stos mov mov add add fneni(8087 in lock add and aas inc dec dec push pop pop imul mov lods mov add fucom call add or and sub inc dec push push pop popa imul addb movsb stos scas mov mov flds (bad) jmp incl pop and xor ds dec dec push pop pop bound add insl jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound imul lea test mov mov rcr fucom call add or daa sub aaa cmp add inc dec dec push pop pop imul test mov mov xlat fldl jecxz in add add clc std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov aam (bad) jmp or adc pop and sub xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in add cmc sti add sbb and inc inc dec push push pop pusha gs jne jg mov add xchg cltd lahf movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno add mov lods mov mov ret int fcomp loop in repnz add or pop sbb es ss inc dec push add add imul mov test ret leave into rcr fucom call incb or adc add add cmp pop pop bound jb jl xchg stos mov mov aad add out icebp idiv add or push sbb sub xor dec push pop pop fs je jle test movsb stos scas add iret aad (bad) add lock sti add pop and aas inc dec dec push pop pop imul test movsb test mov rcr fucom call add or adc sbb cmp ds dec dec push add imul mov scas mov mov xlat fldl jecxz out repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz add or and sub dec dec add push pop pop arpl jb jge mov mov test ret leave into rcr fsubp call add or add sub dec dec push pop bound jno jl xchg mov mov rcl fsub out icebp idiv add push or push sbb and inc inc dec dec push pop pop imul mov test ret enter fldl loop in repnz add or add sbb daa sub cmp dec add pop popa data16 jl xchg stos mov mov aad (bad) ljmp or adc pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb add aaa cmp inc dec push push pop popa data16 jno add addb mov mov ret rcl fsub out icebp idiv add or adc das add push push pop pop fs je orb add (bad) aad fndisi(8087 out lock add or adc sbb es cmp dec push push pop pusha imul addb mov mov (bad) fsub out icebp idiv add or push sbb add aaa cmp inc dec push push pop popa add jb jge orl test mov mov fcomp jecxz in repz std add add adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb es ss add push push pop bound jb jl xchg add add mov rcr fucom call add or sub inc dec add pop arpl jae jge mov test mov ret int fcomp loop in repnz incb or daa add xor cmp push pop bound jno jl xchg movsl stos add lret rcl fnop in out cmc cli incl unpcklps push and xor add add push pop pop arpl jae add mov movsb test ret enter fucom out repnz add or push sbb and sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push add popa imul addb movsb stos scas mov mov add lret aad loopne ljmp push adc push and xor ds dec dec push pop add push (bad) mov cmpsl lods mov mov rcl fucom in icebp idiv add pop or pop sbb daa sub add cmp push pop popa data16 jno jnp xchg movsl stos mov add aad (bad) ljmp push adc push and xor ds dec add push pop pop arpl jae jge add add ret enter fucom call add or pop sbb add aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop add insl jb jl xchg stos mov mov rcl fildl loop in icebp idiv add or push sbb sub xor push push pop pop add jne addb movsb test ret leave into roll (bad) in out repz incb add adc push and xor add push pop pop imul mov lods mov mov rcr fsubp call add or daa sub aaa cmp inc dec push push add push add add (bad) xchg mov mov rcr fucom out repnz add or push sbb and cmp dec push push pop pusha imul jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pop gs jno jnp xchg movsl stos scas mov mov flds (bad) ljmp add pop and cs ds dec dec push pop pop bound jae jns orl test mov mov xlat fsub add in repnz add or add sbb aaa cmp push pop popa insb jno jnp xchg movsl stos mov mov add fcmovu in out hlt stc incb push adc push and sub inc dec push push pop popa add jb jl xchg add lods mov add xlat fsub out icebp idiv add or adc das xor aas add dec push pop pop fs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov test ret enter fucom add in repz incb or adc sbb and sub inc dec push push pop popa imul add fwait mov mov aad (bad) jmp incl unpcklps add and aas inc dec dec add pop fs jns test mov mov xlat add jecxz in repnz add or pop sbb es cmp dec push push pop pusha gs jno jnp xchg movsl add add add (bad) int xlat fsub out icebp idiv add or push sbb sub cmp dec add pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge add mov mov fcomp loop in repnz incb add unpcklps push and cs ds add push pop pop arpl jae jge mov mov mov fcomp jecxz in repnz std add or adc sbb xor ds dec dec push pop pop arpl imul mov mov mov roll fnop in out cmc cli incl pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos add lret rolb add add fnop in lock cli add pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl add enter fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb and das xor aas inc dec dec push pop pop arpl jae add add orl test mov mov xlat fsub out icebp idiv add or push sbb sub add cmp inc dec push push pop popa imul jl xchg stos mov mov fnop in jmp testb add or pop sbb es xor cmp pop pop bound jb jl xchg lods mov mov rcl fsub out icebp idiv add add or adc xor push pop bound jb jl xchg lods mov mov add fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas add push push pop pusha gs jne jg mov test add add rcr fsubp jmp add push adc sbb cmp pop pop add outsb jae jle mov movsb test ret leave into rcr fucom call or and sub xor aas inc dec dec push pop add imul addb movsl stos scas mov mov fcmovu in out hlt cli add add and inc inc dec add push push pop pusha gs jne jg mov test ret leave into rcr fsubp call incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop add jne jg mov test ret leave into rcr fsubp call add repz std add or daa sub aaa cmp inc dec push push pop popa imul addl pushf mov mov rcl fsub out icebp idiv add and inc inc add pop popa imul add xchg popf mov mov (bad) fndisi(8087 out lock add add sub xor push push pop pop fs je jle add add movsb test ret enter fucom call add or pop add aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa insb jno jl add mov mov (bad) fneni(8087 out lock sti add pop add and das xor aas inc dec dec push pop pop arpl jae jge mov mov mov fcomp add call add or daa sub aaa cmp inc dec add pusha add je jle mov add rol rcl fnop in lock cli incl pop and das xor add dec dec push pop pop fs je jg mov test add mov rcr fsubp jmp add or sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl add vaddsubps fneni(8087 in lock cli add pop and das xor ds dec dec push pop add pop arpl jb jge xchg cmpsl lods mov mov rcr fucom call add or sub inc dec push push pop bound jno js (bad) add test add add iret aam (bad) ljmp unpcklps push and cs ds dec dec push pop pop add je jle mov test mov mov xlat fucom out add repnz add or pop sbb daa sub ss inc dec push push pop add insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg add mov mov aad loopne add icebp idiv add or push sbb add aaa cmp inc dec push push pop popa imul addb mov mov ret rcl faddl jecxz jmp add push adc push and xor ds dec dec push pop pop bound jb jge orl test mov mov xlat fucom out repnz add or pop sbb add add sub aaa cmp inc dec push push pop popa imul add pushf mov mov (bad) fndisi(8087 out lock add or adc xor cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in add cmc cli incl unpcklps pop and das xor dec push pop pop imul mov mov mov into rcr fsubp call add add adc push and xor ds dec add pop pop imul mov scas mov add aad (bad) ljmp add pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg cmpsb add int3 rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsb add (bad) aam (bad) jmp add push adc push and sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push add pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and add xor dec push pop pop imul test movsb test ret leave into rcr add in add hlt cli incl unpcklps push add cmp dec dec push pop pop fs jne jg mov test add leave into aam fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb add nop xchg lcall add vaddsubps fnop in out hlt cli incl unpcklps push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and sub xor dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub add xor dec push push pop pusha gs jne jg xchg movsl stos mov mov aam (bad) jmp incl push or adc das xor inc dec push imul addb movsb test add lret fcmovu in out hlt stc incb or adc sbb xor cmp push pop bound insl jb jge xchg stos mov mov add add lret rcl fnop in out hlt stc incl push adc push and sub inc dec push push pop popa imul ja addl mov mov (bad) fneni(8087 out in icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods add int fcomp loop in repnz add or push sbb sub xor add pop pusha add jne addb movsb test ret leave into rcr fucom call add or pop sbb add sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov rcl fnop in out hlt cli incl push adc push and sub xor ds dec dec push pop pop arpl outsb jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and cs ds dec dec push pop pop bound add jge mov mov lods mov mov xlat fsub out in repnz add or push sbb sub xor dec push pop pop imul mov test mov fcomp jecxz out repz std add or daa sub cmp dec add pop popa add add insb jb jl xchg stos mov mov aam (bad) jmp add push adc sbb das xor aas inc dec dec push pop pop arpl jb jge xchg lods mov rol int3 rcl fsub out icebp idiv add or push sbb sub xor cmp inc dec push push pop popa data16 jno ja (bad) xchg lods mov mov (bad) fneni(8087 out lock add sti add or adc xor dec push pop pop fs je add add mov rol rcl fnop in out cmc add add or push sbb sub xor push push pop pusha gs jne jg mov test mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop add jo jp addl add cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor add inc dec push push pop popa imul addb movsl stos mov mov aam add in lock cli add pop and aas add push push pop pusha imul addb mov mov aad (bad) ljmp unpcklps pop add and cs aas inc dec dec push pop pop arpl jae jle mov movsb test mov (bad) in out hlt stc incb add adc das xor aas inc dec dec push pop pop imul mov mov mov aam fnop in lock cli incl pop and das xor ds dec dec push pop pop imul mov movsl stos mov add mov rol iret aad (bad) ljmp unpcklps push and cs ds dec add push push pop pusha imul addb movsl stos scas mov mov (bad) in out add cli incl dec pop pusha push mov mov (bad) fsub out add idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg mov mov (bad) fneni(8087 out lock add add or add sbb daa sub ss inc dec push push pop popa imul jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc sub cmp inc inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fildl loope in icebp testb add or pop sbb daa sub add add ss inc dec push push pop pusha imul addb movsl stos scas add mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push add imul addb movsl stos scas mov add vaddsubps fneni(8087 out lock sti add push or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov add add add leave iret aam fsubp jmp add add adc sub xor push push pop pop gs je jg add movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor add inc dec dec add pusha gs jne jg mov test (bad) leave into aam fsubp jmp incl sbb and inc inc dec dec push add add fs jnp xchg cmpsb stos mov mov add xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul jl xchg lods mov mov (bad) add loope in icebp idiv add or push sbb and sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp cli incl pop and sub cmp inc dec push push pop popa imul addb add rol rcl fneni(8087 in lock cli incl pop and das xor dec push add imul jbe addl mov rol rcl fnop in out cmc cli incl add adc sub cmp dec push push pop popa imul addl mov stos mov mov aad loopne add in repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg mov lods mov mov (bad) fndisi(8087 out add idiv add or push sbb es add cmp push pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec dec push add imul mov lods mov mov rcr fucom call add or push sbb sub cmp dec push push pop pop add jbe add fwait mov mov aad (bad) jmp add push adc add and cs cmp inc dec dec push pop pop imul mov add enter loop in icebp idiv add or push sbb add inc dec add pop pop arpl imul mov mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov rcr fucom out repnz add or daa add add inc dec dec push pop pop add outsl je jg mov stos scas mov add vaddsubps fneni(8087 in lock cli add pop and aas inc dec dec push pop pop add insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne add in add idiv add or push sbb sub cmp inc dec push push pop popa data16 jae jle test movsb test (bad) lret (bad) in out repz incb or sub inc dec push push pop popa imul addb movsl stos scas mov mov fiaddl loopne ljmp unpcklps pop and cs add push add gs add outsl jne jnp test movsl stos scas mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb add test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fsubp call incb add add or adc sbb cmp add arpl jae add test mov mov aam fsubp jmp add push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add pop and das xor ds dec dec add add je jg add add stos scas mov mov fcomp add jmp add push adc push and sub inc dec push push pop popa imul addb mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add add push sbb add sub cmp dec push push pop add imul addb add mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test mov mov xlat fucom out repnz std add or daa sub inc dec push push add insb add jge mov mov add (bad) int xlat fsub out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb pushf mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push add push and cs add add add dec push pop pop arpl imul add add (bad) aam (bad) jmp add push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov fsubp jmp add add adc push and xor ds dec dec push pop pop arpl add addl (bad) xchg cltd mov mov jecxz add in repnz std add or and sub inc dec push push pop popa insb jno jl mov lods mov mov into aam fsubp jmp add push adc sbb cmp push pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb es ss inc add pop popa insb jno jl xchg add xchg xchg pushf add mov iret aam add in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub inc dec dec push pop pop arpl jae jge mov movsb test mov add loopne jmp cmc cli add pop and das add push push pop pop gs je jg mov stos scas mov mov add fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop add outsb jae jle mov test mov add rcr add add jmp add add or push sbb and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec add imul lea lods mov mov int fcomp jecxz add repz incb or daa sub add dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) add in icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul test mov mov aam add (bad) jecxz ljmp push or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push add gs jne jg mov test mov aad (bad) ljmp or adc das xor add pop add pop gs je jg mov test mov mov xlat fucom out add hlt stc incb push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop popa insb jno ja (bad) xchg lods mov mov rcl fsub out repnz std add or adc push and xor cmp pop pop arpl jae jge test mov mov xlat fucom out icebp idiv add or push sbb es cmp dec push push pop pusha gs jne jg mov test mov fcmovu in out hlt stc incb or adc sbb cmp ds dec dec push pop pop arpl outsl je jp add jg mov test (bad) leave into rcr fsubp call add or and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock cli add pop add inc inc dec push push add imul addb movsl stos scas mov add (bad) aad add out lock sti add add das xor aas inc dec dec push pop add imul addb mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov add xlat fsub out icebp idiv add or push sbb sub xor dec push push pop popa imul jl add add mov (bad) fndisi(8087 out lock sti add pop and cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb es xor cmp inc dec push push pop popa add jb jge xchg cmpsl lods mov mov rcl fsub out in repnz add or push sbb sub add add cmp dec push push pop pusha add jb jl xchg test mov rol rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul (bad) xchg cltd sahf mov mov aam fsubp jmp add push adc sbb cmp push add push (bad) mov mov scas mov mov add add add add iret aam (bad) jmp add push adc push and xor add inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss add push push pop popa insb jno add xchg cmpsl lods mov mov xlat faddl loop in repnz add or adc sbb cmp push pop bound jno jl (bad) add mov mov aam fsubp jmp add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fildl loop in icebp idiv add or push sbb sub cmp dec push push pop pusha imul jbe addl lods mov mov fcomp loop in add repnz add or pop sbb daa sub ss inc dec add pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc dec dec push add gs je jg mov nop xchg lcall mov fcmovu in out add sti add sbb sub cmp dec push push pop pusha gs jne jg mov mov mov rcl fsub out icebp idiv add movhps and sub xor dec push pop pop fs je jg mov test ret enter fucom call incb or xor push push pop pusha gs jne jg mov nop xchg fwait mov mov int3 rcl fsub out icebp idiv add or push sbb add and aas inc dec dec push pop pop imul test movsb test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul jl xchg add int3 rcl fndisi(8087 out icebp idiv add or adc sbb daa sub xor cmp push pop bound jb jl xchg lods add add add rcr fldl in out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa imul addb mov mov rcl add loop in repnz add or pop sbb es aaa cmp inc add dec push push pop popa imul add pushf mov mov aad loopne ljmp unpcklps pop and cs aas inc dec dec push pop pop arpl jae jle add movsb test mov (bad) jecxz out repz incb or adc sbb xor add dec push pop pop imul mov mov mov iret aad add fcmovu in out add sti add pop and aas inc dec dec push pop pop imul mov test (bad) leave into aam fsubp jmp add push adc push and sub xor ds dec dec push pop pop imul mov lods mov mov rcr fucom add out add stc incl push adc push and xor cmp pop pop bound jb add ja (bad) xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jle mov movsb test ret enter (bad) in out repz incb or adc sbb add ds dec dec push add arpl je jle mov test mov mov add add in out repz incb add or adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and add aas inc dec dec push pop pop arpl jae jge mov test mov mov rcr fucom out add clc add add push adc push and xor cmp pop pop bound jb jl xchg xchg pushf add mov (bad) fndisi(8087 out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg add ret rcl add jecxz out repz std add or daa sub aaa cmp inc dec dec push push pop add insl jae jge mov test mov mov xlat faddl loop call add or add add and sub inc dec push push pop popa insb jno jnp xchg cmpsb stos mov mov fnop in out cmc cli incl add and aas inc dec dec push pop pop fs je jg mov movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jge test mov mov add ret leave into rcr fsubp call incb add pop and das xor aas inc dec add pop pop fs je jg mov movsb stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop add pop imul mov scas mov mov aam (bad) jmp add push adc sbb xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov rcl fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb add rol rcl fnop in lock add add add sbb add sub ss inc dec push push pop pusha imul jbe addl add rcl fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or sub inc dec push push pop popa data16 jno jnp xchg add add mov mov aad fneni(8087 in lock cli incl and inc dec add pop pop gs je jg mov test ret enter fucom call incb or sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov aad (bad) ljmp push adc push and add add add cmp ds add push pop pop imul lea xchg cwtl sahf mov mov add fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test mov mov int xlat fucom out repnz std add or daa sub inc dec push push pop popa add jb jl xchg stos mov mov aad loopne ljmp or adc das xor dec push pop pop imul mov lods mov mov xlat fldl jecxz in repnz std add or daa sub ss inc dec push add add add arpl jae jge mov cmpsl add (bad) int3 rcl fsub out add idiv add or push sbb sub xor push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp add idiv add or adc sbb sub cmp dec push push pop pusha imul add mov mov fcomp jecxz in repz std add or add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or adc sbb cmp push pop bound jb add add xchg cltd sahf mov mov aam fsubp jmp add push adc sbb and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor add add inc dec dec push pop pop arpl jae jle mov test scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc sbb xor ds dec dec push pop pop arpl jae jle mov movsl stos add lret rcl fneni(8087 in lock add add or push sbb sub cmp inc inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl imul add je jle mov test mov mov add (bad) out hlt stc incl push adc push and xor ds dec dec push pop add add jne jg mov test (bad) leave iret aam fsubp jmp incl unpcklps pop and das xor add inc dec dec push pop pop fs je jg mov test add add rcl fneni(8087 in lock add add pop or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov add fneni(8087 out icebp idiv add add sub cmp dec push push pop pusha gs jne jg mov nop xchg fwait mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg add mov mov (bad) fneni(8087 out in icebp idiv add or pop sbb es cmp dec push push pop pusha imul jbe jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc sbb daa sub aaa cmp inc dec add pop bound jno jl xchg stos mov mov add add loop in icebp idiv add or unpcklps push and add sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub add in repnz add or pop sbb daa sub xor cmp pop pop bound jb jl xchg test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret add leave into rcr fsubp call incb push adc push and xor ds dec push pop pop arpl jb jge add lahf movsb test (bad) leave into aam fsubp jmp add or add xor inc inc dec push push pop pusha imul jbe addb movsl stos mov mov aad (bad) ljmp push or push sbb add add inc dec push push add add insb jno jl xchg stos mov mov aad (bad) ljmp or adc das xor add pop pusha gs jne jg mov test rol iret aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add add add sbb sub cmp dec push push pop pusha gs jne jg mov movsl add (bad) lret rcl fneni(8087 in lock cli incl pop and das xor add inc dec dec push pop pop imul mov test (bad) leave into rcr fsubp call add or adc pop and das add dec push push pop pusha gs jne add add lcall mov (bad) jecxz out repz std add or and xor cmp push add push orl test mov mov rcr fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop add add add sub inc dec push push pop popa data16 jno jl xchg cmpsl add (bad) int xlat fsub out icebp idiv add or push sbb and inc inc dec add pop pusha gs jne jg mov nop xchg lcall mov fcmovu in out hlt stc incb or add sbb and aas add dec push push pop popa imul addb add add rol iret aad (bad) jmp add push adc push add cs ds dec dec push pop pop arpl outsb jae jle mov test mov mov xlat add jecxz in repnz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub add cmp inc dec push push pop popa imul addb movsb stos scas mov mov rcl fneni(8087 out lock sti add pop and das xor aas inc dec dec push add imul mov test ret leave into rcr fsubp call add or add cs ds dec add push pop pop gs je jg mov test mov mov add ret enter fucom call add or pop sbb add inc dec push push pop popa data16 jno ja addl mov rol rcl fneni(8087 add in icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp jmp add or daa sub inc dec dec push push pop bound jb jl xchg stos mov mov add xlat fucom out repnz add adc push and sub inc dec push push pop bound insl jae jge mov cmpsl add enter fucom out repnz add or daa sub xor cmp inc dec dec push pop pop add outsl je jg mov test ret enter fucom call add add repnz std add or daa sub aaa cmp inc inc dec push push pop bound jno jl xchg mov lods mov mov (bad) fneni(8087 in lock add add or push sbb sub xor push push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push add popa insb jno jnp add mov mov aam fnop add jmp cmc sti add and aas inc dec dec push pop pop imul mov test mov (bad) in out hlt stc incb or adc sbb cmp add dec push pop pop imul addl mov rol iret aad (bad) jmp add push adc push and xor ds dec add pop pop arpl jae jle mov mov mov xlat fucom out repnz add pop or daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push pop add insl jb jge xchg add add rol rcl fnop add jmp icebp idiv add or push sbb sub xor push push pop pusha outsw je jg test mov mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push add imul addb movsl stos add add int fcomp loop in repnz add add push adc push and sub dec dec push pop pop bound jb jge mov mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jge add mov mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov rcl fildl loop in icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb mov mov into rcr fsubp call add or sub inc dec push push pop bound add jge mov test mov mov add flds loopne ljmp lldt sbb sub xor push push add gs jne jg mov stos scas mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov aam add in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repz stc incb or adc push and xor cmp pop pop arpl jae jge mov test add add (bad) in ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg nop xchg lahf movsl stos mov mov aad loopne add icebp add cld add or sub inc dec dec push pop pop arpl jb jge mov add add lods mov mov xlat add jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov rcl fndisi(8087 out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps sbb and add xor dec push pop pop fs je jg mov test ret leave into add fcmovu in add cmc cli add push or push sbb sub cmp dec push push pop pusha imul addb movsb add (bad) aad (bad) ljmp add add sbb aaa cmp inc add pop pop bound jb jl xchg lods mov add add add fndisi(8087 out add idiv add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov aad loopne jmp cmc cli add sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc push and add xor aas inc dec dec push add imul mov scas mov mov fcomp loop jmp add unpcklps sbb sub xor push push pop pusha gs jne jg mov test add lret fcmovu in out hlt stc incl push adc sbb add sub xor cmp inc dec push push pop popa add jb jl xchg lods mov mov (bad) fneni(8087 out add add lock sti add sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in add cmc cli incl unpcklps pop and add xor dec push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add or sub add push pop pop arpl jae jge add add add mov test mov mov xlat fsub out icebp idiv add pop or and sub inc dec dec push pop pop arpl jae jle mov test mov mov add fsubp jmp add or sub xor cmp add push push pop pusha gs jne jl xchg cmpsb stos mov mov aad loopne ljmp sldt add add add and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc push and xor cmp push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push add imul addb movsl stos add lret fcmovu in out hlt stc incl push add add xor dec push push pop pusha imul orb stos mov mov aam (bad) jmp add pop and das xor add add add insb jno jnp xchg mov mov (bad) fsub out icebp idiv add or adc xor add add inc inc dec push push pop pusha imul addb movsb test (bad) leave iret aam fsubp jmp add push adc sbb and cs ds dec dec push add imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul ja addl mov rol rcl fneni(8087 out lock sti add and cmp inc dec push push add insb jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add push or push sbb sub xor push add add add js (bad) xchg mov mov xlat fucom call add or daa sub aaa cmp add push push pop add add insb jb jl xchg stos mov mov aad loopne jmp cmc sti add pop and cmp dec push push pop pop add jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jl orl cmpsl lods mov mov xlat fsub out icebp idiv add add or push sbb sub add inc dec push add bound outsb jae jge mov cmpsl lods mov mov xlat fsub jmp idiv add or push sbb sub cmp dec push push add insb jno jnp xchg movsl stos mov mov aad fneni(8087 in lock cli incl and aas inc dec dec push pop pop imul mov add mov rcr fsubp add out hlt stc incl unpcklps pop and das add push push pop pusha add jno ja add popf mov mov xlat add jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jge add mov mov fcomp jecxz in repz std add or sub add add cmp push pop pop add outsl jne jg mov test (bad) leave into aam fsubp jmp add or adc pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov fcmovu in out add sti add and aas inc dec push push pop pusha gs jne jg mov stos scas mov mov iret aam (bad) jmp add and aas inc dec add pop popa imul add cwtl add mov rcr fsubp call incl unpcklps push and cs ds dec dec push pop pop arpl je jle mov movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop add add imul mov stos mov mov aad (bad) ljmp unpckhps pop add sub xor push pop pop gs je jg mov movsl stos mov mov aad (bad) ljmp lldt das xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add add pop or pop sbb and sub inc dec push push pop bound insl jae jge mov movsb test mov aad (bad) ljmp lldt xor dec push pop pop imul mov mov add (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jl orl add add movsb test (bad) leave into aam fsubp jmp add push adc sbb cmp ds dec dec push pop pop arpl jae jge mov add ret enter fucom call add or add sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and add add das add dec push pop pop fs je add lcall mov int fcomp loop in repnz add or add sub inc dec push push pop bound jb jl xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov movsl add add mov mov aad loopne jmp cmc sti add pop and aas inc dec add pop pusha gs jne jg mov scas mov add (bad) in out hlt stc incb push adc push and sub inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock add and aas inc add add pop pusha gs je jg mov movsl stos scas mov mov add fildl loope in icebp idiv add or push sbb sub add inc dec push push pop popa imul addb movsl stos scas mov mov (bad) add ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov add mov (bad) in out repz incb or adc push and sub dec dec push pop pop add outsb jae jge mov cmpsl lods mov mov rcr fucom call add or pop sbb aaa cmp inc add push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push add fs add add test add mov aad loopne out add idiv add or push sbb sub aaa cmp inc add push pop bound jb jl xchg stos mov mov aad loopne ljmp or push sbb and inc inc dec push push pop pusha gs jne jg mov test mov aad loopne ljmp incl unpcklps pop and cs ds dec dec push pop pop arpl add test movsb test ret enter add in out hlt stc incb push adc sbb cmp pop pop add outsb jae jge mov lods mov mov (bad) in out repz incb or sub inc dec push push pop bound jb js orl cmpsl lods mov mov rcr fucom call incb add add adc das xor dec push pop pop add jne addb movsb stos scas mov mov (bad) jecxz out repz incb or and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov add fsub out in repnz std add or daa sub add add aaa cmp inc dec push push pop popa imul addl mov mov (bad) fneni(8087 out lock add add or push sbb sub xor push push pop pusha gs jne jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge add mov mov add add add (bad) jecxz out repz incb add push add sub cmp dec push push pop pop gs je jnp test movsl stos mov mov aad (bad) ljmp push adc push add aas inc dec dec push pop pop imul mov lods mov mov xlat fucom add out repz add add push adc push and xor ds dec dec push add add bound jb jge xchg test mov mov xlat fucom out icebp idiv add add daa sub ss inc dec push push pop popa imul addb movsb test (bad) leave into rcr fsubp call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add add add or daa sub ss inc dec push push pop pusha imul add fwait mov mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop add imul addb add (bad) xchg lcall mov (bad) jecxz out repz incb add or adc add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add sub xor dec push pop pop imul mov test ret add iret add fcmovu in out cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae add addb movsl stos scas mov add (bad) in out hlt stc incl unpcklps add add sub add inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov (bad) in out hlt stc incb or adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop add add insl jb jl xchg stos mov add fsub out in icebp add std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa data16 jno jnp xchg add mov (bad) fndisi(8087 out lock add sti add pop and das xor add inc dec push push add insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg add lods mov mov add fsub out icebp idiv add pop or adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos mov add mov xlat fsub out icebp idiv add or adc add and aas inc dec dec push add popa imul jl xchg stos mov mov aad (bad) ljmp push adc pop sub xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop gs je jg mov test ret enter fucom call incb or add add aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test ret leave into rcr add loopne ljmp unpcklps pop and cs ds dec dec push pop add push jle test mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp testb add add add or add sbb daa sub ss add add pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz push adc push and xor cmp pop pop bound jb jl xchg add add mov mov aam fsubp jmp add or sub inc dec push push pop popa insb jno jl fwait mov mov aad (bad) jmp push push adc xor cmp dec push push pop pop gs je jg mov test ret enter fsubp call add or daa sub aaa cmp inc add add push pop popa insb jno jl (bad) xchg lea lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub add cmp push pop popa insb jno jl xchg cmpsb stos mov mov add fsub out add clc std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa data16 add ja addl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec add push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp sti add add sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fsubp out repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov ret rcl fsub out icebp idiv add pop or push sbb es cmp dec push add popa imul addb add movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec dec push pop pop bound jb jge xchg mov mov roll fcmovu in out add cli incl unpcklps pop and cs cmp dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add add pop sbb add add xor cmp dec push push pop pusha imul jg mov nop xchg fwait mov mov aam fsubp jmp add push adc sbb aaa cmp push pop bound jno jl xchg stos mov mov rcl fneni(8087 out lock sti add sbb sub xor push push pop add imul addb movsb test add leave into rcr fsubp call add or daa sub aaa add pop pop bound jb jl xchg add lods mov mov rcr fldl in out repz add add push adc push and xor cmp push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or add sbb sub cmp add dec push push pop pop gs jne jg mov movsl stos scas mov mov (bad) in out repz incb or sub dec push push pop popa insb jno jl xchg lods mov mov rcl fsub out icebp idiv add or push add es cmp dec push push pop pusha gs jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec add pop pop imul (bad) xchg cltd sahf movsb test add movb rcl fsub out icebp add cld add or adc sbb aaa cmp add bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb add aaa cmp inc dec push push pop popa data16 jno add jbe addl mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fiadd in out hlt stc incb push adc push and add xor aas inc dec dec push pop pop imul mov test (bad) leave iret aam fsubp jmp add push adc push and sub dec dec push push pop add outsb jae jge mov cmpsl lods mov mov add fiaddl loopne jmp cmc cli add sbb add sub aaa cmp inc dec push push pop popa data16 ja (bad) xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc inc dec push push pop popa imul addb add add mov rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop pop gs jne jg mov scas mov mov (bad) in out hlt cli add add and aas inc add push pop pusha gs jne jg mov movsl stos mov mov aam (bad) jmp add unpcklps pop and das xor aas add add add inc dec dec push pop pop imul mov stos scas mov mov fcmovu in add icebp testl adc sbb xor add dec push pop pop fs je jg add movsl stos mov mov aad loopne ljmp adc xor push push pop add imul addl mov rol roll add add fndisi(8087 add in repnz add or pop sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop add and xor ds dec dec push pop pop arpl push jne jg mov stos scas mov add (bad) lret rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul add jnp xchg mov mov xlat fsub out icebp idiv add or add sbb pop and das xor aas inc add push pop pusha add jno jl xchg add enter fucom call add or sub dec dec push pop pop arpl jae jge test movsb test ret leave into rcr fsubp jmp add add unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli or jno xchg sahf movsl stos mov rolb iret (bad) fucom jmp cli add mov mov fsubp jmp idiv add or add sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound add add addb mov add fsub out icebp idiv add or daa sub inc dec push push pop bound jb jl xchg lods mov mov add fucom call add or daa sub aaa cmp inc dec push push add push add add jge mov cmpsl lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg mov mov xlat add jecxz out repz std add or sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or add adc push and xor ds dec dec push pop pop arpl jae jge add fwait mov add fcomp loop in repz std add or and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in add stc incb push adc push and xor ds dec dec push pop pop arpl jae jns test add lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov (bad) fneni(8087 out lock add and sub xor dec dec push push pop bound jb jge xchg lods mov mov add fucom call add or pop sbb daa sub aas add inc dec dec push pop pop imul mov stos scas mov mov aad loopne ljmp add push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb add pop and das xor aas inc dec dec push pop pop imul mov xchg xchg fwait mov mov aad add loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov add leave iret aam fsubp jmp add push adc push and xor ds dec dec add pusha imul addb movsl stos scas mov mov fcmovu in add cmc sti add pop and aas inc dec add push pop popa insb add add jl xchg stos mov mov rcl fsub out in repnz add or add xor cmp pop pop bound jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push add aaa cmp push pop bound jno jge xchg lea test (bad) leave into rcr fsubp jmp add add add push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret add iret aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop arpl outsl je jnp test movsl stos mov mov aad (bad) ljmp or adc xor dec push pop pop add jb jl xchg add mov mov (bad) add loop in repnz add or sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub add cmp push pop bound jb jl xchg test mov mov aam fsubp jmp add push adc push and sub add add cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat faddl jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl add sahf mov mov fcomp jecxz in repnz std add or and xor cmp pop pop bound jb jge addl (bad) xchg cltd lahf movsb test (bad) leave add into aam (bad) jmp incl add and inc inc dec push push add imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec add pop pusha gs jne jg mov stos scas mov add vaddsubps add loope in icebp idiv add or push sbb sub cmp dec push push pop pusha add jno jl xchg lods mov mov (bad) fndisi(8087 out icebp testb add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl add enter fucom call add or sub inc dec dec push pop pop arpl jae jge mov add mov (bad) in out hlt stc incb add adc das xor cmp dec dec push pop pop fs add addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa add jno jl xchg stos mov mov add fneni(8087 in add idiv add or push sbb sub xor push push pop pop fs je jg mov add test mov mov xlat fucom out repnz add add daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos add (bad) int3 rcl fndisi(8087 out lock add or adc xor dec push push pop pusha gs jne jg mov add rol rcl fcmovu in out hlt stc incl push adc add pop and das xor aas add push push pop pop gs je add lcall mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 add jl xchg lods mov mov aad add out icebp testb add or pop sbb sub cmp dec push push pop pusha imul addb movsb stos add scas mov mov fnop in out cmc cli incl unpcklps sbb and aas inc dec dec push pop pop imul mov lods mov add aam (bad) jmp add push adc sbb cmp add arpl jae jge mov cmpsl lods mov mov into rcr fucom call add or add sub add cmp push pop pop bound jae jge xchg mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne add lcall mov (bad) in add hlt cli incl or adc das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov add xlat fsub out icebp idiv add or adc sub cmp dec push push pop pusha gs je jg mov test ret add iret add fneni(8087 in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop add jae jle mov test mov mov iret aam fsubp jmp add push adc sbb xor ds dec dec push pop pop arpl jae jge mov mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul jg add cmpsb stos mov mov aad (bad) ljmp or add sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add add clc std add or daa sub xor aas inc dec dec push pop pop arpl jae jge mov add ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov movsl add (bad) lret rcl fneni(8087 in lock sti add pop and das xor aas inc dec add pop pop fs je jle add mov movsb test (bad) leave iret aam fsubp jmp incl unpcklps push and xor ds dec dec push add imul mov test ret enter (bad) jecxz out repz incb or daa sub inc dec push push pop popa data16 jno ja (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add add add add push sbb sub cmp dec push push pop pusha gs jne jg mov test mov (bad) in out hlt stc incb or adc sbb cmp push pop bound jno jl xchg cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push add imul addb movsl add rol rcl fneni(8087 in lock cli add push or adc xor dec push pop pop add jo jp addb movsl stos mov mov aam add in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge test mov mov rcr fsubp call add or and add add add cmp inc dec dec push pop pop bound jb jl xchg lods mov mov rcr fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl imul mov lods mov add add into rcr fucom call add or adc push and sub inc dec push push pop popa insb add jge xchg lea lods mov mov xlat fsub out in repnz add or push sbb daa sub ss inc dec push push pop pusha imul addb mov add aad loopne ljmp unpcklps pop add inc inc dec dec push pop pop imul mov scas mov mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov add rcl fsub out lock add and aas inc dec dec push pop pop imul mov test ret add iret aam (bad) add add out hlt stc incb or adc add and xor ds dec dec push pop pop arpl jae add mov movsb test ret enter fucom call incb or sub inc dec push push pop bound jno jl xchg cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb and cmp dec push push pop pusha imul add addb movsb stos scas mov mov add (bad) jmp add and aas inc dec dec push pop pop imul mov scas mov mov rcr add in out hlt stc incb push adc push and sub dec dec push push pop bound jb jl orl cmpsl lods mov mov add fucom out repnz add add add pop sbb add inc dec push push pop popa imul addl lods mov mov xlat fsub out icebp idiv add pop or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl add (bad) lret rolb xlat fsub out icebp idiv add or push sbb and add dec push push pop pusha gs jne jg mov add lcall mov (bad) in ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov add fucom call incb or adc sbb aaa cmp push pop popa insb jno jl xchg mov mov (bad) fsub add in repnz add or push sbb sub add xor add inc dec push push pop popa imul addb mov mov ret rcl fsub out icebp idiv add or add sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov aad fild in lock cli add pop and das xor aas inc dec add pop pop fs je jle mov test mov add add fcomp loop in repnz incb or sub inc dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub add in repnz adc sbb aaa cmp inc dec push push pop popa imul addb mov mov aad loopne ljmp or adc das xor dec push push pop pusha gs jne jg mov add add lret fneni(8087 in out cmc cli incl unpcklps pop add aas inc dec dec push pop pop imul mov lods mov mov rcr fsubp call incb push adc push and sub dec dec push push add push (bad) xchg cmpsl lods mov mov (bad) fildl add add add add out icebp idiv add pop or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call incb or adc pop and cs ds dec dec push pop pop arpl jb jge xchg add (bad) int3 rcl fsub out icebp idiv add or daa sub aaa cmp inc dec push add bound jb jl xchg stos mov mov rol add xlat fsub out icebp idiv add or pop sbb es xor cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov aad loopne ljmp or push sbb and inc inc dec dec push pop pop add jne jg mov test (bad) leave into rcr fsubp call add or and xor cmp push pop bound jb jl xchg stos mov mov add fucom out out repz std add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) jmp incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov add mov ret rcl fsub add in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb mov mov add fildl loope in icebp idiv add pop or pop sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub add cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp add adc sbb sub xor push push pop pusha gs jne jg mov test ret enter fucom call add or and sub dec dec push pop pop bound jb jl xchg lods mov mov add rcl fneni(8087 in out cmc cli incl push or adc das xor dec push pop pop fs je jle mov add (bad) leave into rcr fsubp call add add add and aas inc dec dec push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop popa add imul addl mov rol iret aad (bad) ljmp adc push sbb add aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add push or push sbb add sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov aad (bad) ljmp push add sub xor dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop popa insb jno jl xchg add fwait mov mov aad (bad) ljmp unpcklps push and add aas inc add push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push add insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs cmp add dec push pop pop imul mov scas mov mov fcomp loop call add or daa sub ds dec dec push pop add imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or daa sub inc dec add pop bound push test mov mov fcomp jecxz in repnz std add or daa sub ss inc dec push push pop pusha imul jl xchg movsl stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop add add add jae jle mov test mov mov xlat fsub out icebp idiv add pop or daa sub aaa cmp inc dec add add push jle mov test mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add add or daa sub aaa cmp inc dec push push pop popa imul ja addl popf mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop imul mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul add add mov rol iret aad (bad) ljmp unpcklps pop add aas inc dec dec push pop pop imul addb mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add or adc xor xor dec push pop pop imul add movsb stos scas mov mov fildl add out repnz add or adc sbb aaa cmp inc dec push push pop popa imul jl orl cmpsl lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop imul mov scas mov mov add ret add into rcr fsubp call add or sub inc dec push push pop popa data16 jno jnp xchg mov add (bad) int3 rcl fsub out icebp idiv add or adc xor add pop popa insb jno jl xchg movsl stos mov mov aad (bad) jmp add push adc push and xor add inc dec dec add add add outsl je jg test movsl stos scas mov mov (bad) jecxz add lock cli add sbb and inc inc dec push push pop pop gs je jg test mov stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jge xchg lods mov mov rcl add add loope in icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jg mov movsb stos scas add iret aad (bad) ljmp push adc push and xor ds add add pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub ss add push push pop bound add js (bad) xchg mov lods mov mov xlat fsub out add repz incb or adc sbb xor dec push pop pop imul add movsl stos mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov aad fsub out icebp testb add add add or adc das xor dec push pop pop imul mov test mov fcmovu in out hlt stc incb or adc push and sub inc dec add add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor add pop popa imul jl xchg add mov cmpsl lods mov mov (bad) fndisi(8087 out lock std add or daa add inc dec push push pop popa insb jno jnp xchg popf mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test ret enter fldl in out repz incb or adc sbb cmp push pop bound jno jl xchg add roll int xlat fsub out icebp idiv add or push sbb sub xor push push add add jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push add arpl jae add mov add add (bad) leave into aam fsubp jmp add add pop and das add dec push pop pop fs je jle mov add rol rcl fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos add lret (bad) fsub out icebp idiv add or adc das xor dec push pop pop add add jnp test movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop add insl jb jge add mov mov ret enter fucom out repnz std add add unpcklps push and xor add inc dec dec push pop pop arpl jae jle mov add mov (bad) jecxz in repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop imul lea lods mov mov rolb (bad) jecxz out repz std add or sub inc dec push push pop popa data16 add orl cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop add jne addb mov mov rol rcl fildl add in lock sti add pop sbb daa sub aaa cmp add push push pop bound jno jl xchg stos add (bad) int3 rcl fsub out repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc add add unpcklps pop and das xor ds dec dec push pop pop arpl add jge mov cmpsl lods mov mov rcl faddl jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul jl (bad) mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov movsl stos mov add (bad) fneni(8087 in lock cli incl add and sub cmp dec add pop popa data16 jno jnp xchg movsl stos mov add rcl fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop or pop sbb sub cmp dec push push pop pusha imul addb (bad) xchg lcall mov aam (bad) add out cmc cli incl unpcklps push and xor ds dec dec push pop pop arpl jb add add movsb test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul jnp xchg mov mov rcl fsub out icebp idiv add or push add sbb add daa sub inc dec push add bound jb jge xchg lods mov mov int fcomp loop in repnz add or push sbb sub add inc dec add pop data16 jne addl mov rol rcl fndisi(8087 out lock add and inc dec push pop arpl jns mov add (bad) add lock incl or xor inc dec push push pop gs je orl mov (bad) int fsub ljmp push es push pop popa imul xchg sahf movsl lods mov ret lret add fildl in repz add or sbb sub aaa aas inc dec push pop add data16 jne test test iret (bad) fsubp in hlt cld add adc and xor aas inc dec push pop imul add (bad) mov mov (bad) int3 rcr loop icebp clc add movhps es push add push jb orl int3 rcr loop icebp clc add add sbb add xor aas inc dec push pop imul mov mov (bad) fninit ljmp pop es push pop popa push mov mov fabs call or sub cmp push pop pop outsb jne test mov mov jecxz repnz add adc pop daa sub dec dec push pop pop bound jne jg mov movsl stos scas mov add movb rcl fucom add in repz std add or add sub xor aas inc dec dec push add imul addb movsl stos mov mov aam (bad) ljmp add add push adc push and cs inc dec push pop popa push (bad) xchg popf movsl lods add (bad) fsubp in repz add adc and das aaa ds dec push pop data16 jle xchg cmpsb stos mov mov loop lock add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos mov mov rcl fneni(8087 in lock sti add add sbb and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb xor cmp push add imul mov test mov aad fild in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg add rol rcl fneni(8087 in lock cli incl sbb add sub cmp dec push push pop pusha gs jne jg mov add rol rcl fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov add fsub out icebp idiv add or push sbb and add cmp dec push push pop pop fs je jg mov test mov mov xlat fucom out repnz add push adc push and add xor ds dec dec push add add outsl je add lcall add rol rcl fneni(8087 in add idiv add or adc das xor dec push pop pop imul mov lods mov mov add (bad) int3 rcl fsub out lock add add sub xor cmp inc dec push push pop popa imul addb mov mov rol rcl fneni(8087 in out cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad add out lock sti add pop and das xor ds dec dec push add arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and add dec push pop add add jbe addb mov stos mov mov int3 rcl fsub out icebp add cld add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fldl add out repnz add or pop sbb add sub add cmp push pop bound jno jl xchg cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub add in repnz std add or pop sbb es cmp dec push push pop pusha gs add jne jg mov test ret enter fucom call add or pop sbb sub add inc dec push push pop popa add jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor add pop pusha add jo jnp test mov mov aad (bad) ljmp add add unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov rcl fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 add in icebp idiv add or push sbb add sub cmp dec push push pop pusha gs jne jg xchg fwait mov mov aad loopne ljmp unpcklps push and xor add inc dec dec push pop pop arpl jae add mov test mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop add imul jl xchg cmpsl lods mov mov (bad) fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat add loop in repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call incb or adc sbb add ds dec dec push pop pop bound jb jl xchg mov mov add ret enter fucom call add or pop sbb sub cmp dec add pop popa imul addb mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul add movsb stos scas add iret aam (bad) jmp add push adc push and xor cmp add push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock sti add sbb sub xor dec push push pop pusha imul addb movsb add rol rcl fneni(8087 in add out cmc cli incl pop and das xor ds dec dec push pop pop add jae jle mov mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg test mov mov rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop arpl jae add jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add push or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push add daa sub ss inc dec push push add insb jno jnp xchg movsl stos scas mov mov rcl fndisi(8087 out lock sti add adc das xor dec push pop pop arpl add test mov mov rcr fsubp call add or pop sbb daa sub dec dec push push pop bound jno jl xchg mov mov ret roll fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov add mov mov xlat fsub out icebp idiv add or adc sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb add aaa cmp inc dec push push pop popa data16 jl xchg cmpsb stos mov mov roll xlat fsub out icebp idiv add or adc xor add dec push pop pop fs je jg test movsb test add lret (bad) in out repz incb or sub inc dec push push pop popa insb jno jl xchg add mov xlat fsub add in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret add add add enter fucom out repnz add or push sbb and sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec dec push push pop bound jb add mov cmpsl lods mov mov (bad) add loop call add or daa sub aaa cmp inc dec push push add pop pusha imul addb mov mov add fneni(8087 in lock cli incl pop and cs ds dec dec push pop pusha gs jne addb movsb test mov aad loopne ljmp or adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out add icebp idiv add or adc das add cmp dec push push pop pop fs je jg mov test ret enter fucom call add or pop sbb sub cmp dec add pop popa data16 jno jnp xchg mov mov aad loopne ljmp push or push sbb sub xor push push pop pop fs je jle test mov mov rcr fsubp add out hlt stc incb or adc push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov rcl fildl loope in icebp idiv add add push sbb sub cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or add pop sbb sub cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop add insb jno jl xchg mov mov (bad) fneni(8087 out lock sti add push add pop sbb es cmp dec push push pop pusha gs jne jg mov test mov (bad) in out repz incl push adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad fneni(8087 out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg test mov mov aad loopne ljmp or adc das xor add add aas inc dec dec push pop pop arpl jae jge mov cmpsl lods add add rcr fsubp call add or daa sub add cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov add aam (bad) add lock sti add pop and das xor ds dec add pop pop imul mov xchg cltd sahf movsb test ret enter add jecxz out repz incb or daa sub inc dec push push pop popa imul addb mov mov rol rcl fndisi(8087 out lock add or adc sbb sub cmp dec push push pop pusha gs je jg mov test add leave into rcr add in out hlt stc incb push adc push and xor cmp push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock cld add or pop sbb sub cmp dec push push pop add imul addb add rol iret aad (bad) jmp add pop and aas inc dec push push pop pusha gs jne jg mov add add lret rcl fcmovu in out hlt cli incl push adc push add aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add fsub out add idiv add or pop sbb es ss inc dec push push add insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp add adc add pop and das xor aas inc dec dec push pop pop arpl add test mov mov rcr fucom call add or sub inc dec push push pop popa insb jno jnp xchg movsl stos mov add add fndisi(8087 out lock sti add pop and cmp dec push push pop pusha gs jne jg mov test add enter fucom add in repz std add or adc sbb aaa cmp push pop popa add ja (bad) xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl add and aas add push pop pop imul mov test ret add iret aam fsubp jmp add or and xor ds dec dec push pop pop bound jb jge xchg lods mov mov rcr fucom add out repz std add or daa sub add push push pop bound jb jl xchg stos mov mov aad (bad) ljmp or add xor dec push pop pop imul mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub xor cmp inc dec push push pop popa data16 add add add jbe addb mov mov aad fneni(8087 out lock cli add pop add aas inc dec dec push pop pop imul mov lods mov mov xlat add jecxz in repnz incb or sub inc dec push add bound jb jl xchg stos mov mov aad (bad) ljmp add incl or adc sub xor dec push pop pop fs je jle mov (bad) xchg lcall mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec dec push pop pop bound jb jl xchg add add cmpsl lods mov mov (bad) fndisi(8087 out in icebp idiv add or push sbb and cmp dec push push pop pusha gs jne jg mov test (bad) jmp idiv add pop or pop sbb and sub dec dec push pop pop bound jb jge orl test mov mov fcomp jecxz in repz std add or daa sub add cmp push pop pop arpl jae jle mov test mov add (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs add addb movsl stos mov mov aad add loopne jmp idiv add or push sbb and sub cmp dec push push pop pusha data16 jl xchg movsl stos mov mov aad (bad) ljmp unpcklps pop add add dec push push pop pusha imul addb mov mov aad loopne ljmp unpckhps pop and aas inc dec dec add pusha add add add jno jnp xchg movsl stos mov mov aad fneni(8087 out lock add and sub xor push push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg test mov mov xlat fsub out icebp add std add add or daa sub inc dec dec push pop pop bound jb jl add mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc inc dec push push add imul mov scas mov mov fcomp loop in repnz adc sbb cmp add pop pop fs je jg mov add cltd sahf mov mov fcomp loop in repnz std add or adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) add loope in icebp idiv add or push sbb sub xor cmp inc dec push push pop add insb add je jle mov test mov mov xlat fsub out icebp idiv add or push sbb add add sub cmp dec push push pop add insb jno jl (bad) xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop add jne jg mov stos scas mov mov (bad) jecxz out repz incb or push adc push and xor cmp pop pop bound add jne jg mov test add fcomp jecxz in repnz std add or and sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in in icebp idiv add or push sbb sub xor dec push push pop pusha imul jbe add test mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec add add add add pop pusha imul jbe addl mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jnp test movsl stos mov mov (bad) fneni(8087 out lock add add sub cmp dec push push pop pusha gs jne add mov lods mov mov (bad) fndisi(8087 add out lock add and cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz add add unpcklps push and xor ds dec dec add imul mov mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul add jns add lahf add rol iret aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg mov lods mov mov (bad) fneni(8087 out lock sti add pop and cmp dec push push pop pop gs jne jg add mov stos mov mov (bad) fneni(8087 in lock cli add add unpckhps pop and das xor cmp dec push push pop pop gs je jg mov test ret leave into rcr fsubp jmp add add adc push and xor ds dec dec push pop pop add jae jle mov add cmpsb stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov xchg add add add iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg mov mov xlat fucom out repnz add or pop sbb daa sub cmp push pop pop arpl jae jge mov lahf movsb stos scas mov mov (bad) jecxz out repz incb or adc push and sub add xor cmp push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and sub aaa cmp inc dec push push pop popa imul jl xchg cmpsl lods mov add aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg test mov mov ret into rcr fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos add lret rcl fneni(8087 out lock sti add pop and inc inc dec dec add pusha imul addb movsb stos add mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push add add pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or sub inc dec dec push pop pop arpl jae jge add mov mov lret rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov roll fcmovu add in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcl fucom out repnz add or pop sbb es cmp dec push push pop popa add jb jl mov test mov mov iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound add add jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss add push push pop bound jb jl xchg cmpsl lods mov mov rcr add (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov rcl fsub out in repnz add add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov add fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jp test movsb test (bad) leave into add (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle test movsb test (bad) leave into rcr fsubp call add or sub inc dec push add arpl jae jge mov test scas mov mov fadds fsubp jmp sti add and aas inc dec dec push pop pop imul mov scas mov mov fadds fsubp jmp incl push adc push and add add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub add in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb mov mov (bad) fneni(8087 out icebp idiv add pop or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov add add fcmovu in out hlt cli incl unpcklps pop and cs ds add push pop pop imul add add lds lret rcl fsub out icebp idiv add or push sbb and inc inc add add pop pop arpl jae jns test mov mov fcomp jecxz out repz std add or sub inc dec push push pop add popa insb jno add xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt add add sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp incb or adc push and sub dec dec push pop add push orl mov add flds (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop add add insb jno jl xchg mov lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je jg add mov nop xchg lcall mov (bad) in out hlt stc incb or adc push and xor ds add push pop pop imul mov lods mov mov xlat fsub out hlt stc lcall ja test mov rol hlt sti add adc and das ss pop pop bound jb jge xchg lods mov mov (bad) add add loope in repnz add or pop sbb add sub inc dec push push pop bound insl jae jge add mov mov aam fsubp jmp add push adc push and add sub ss inc dec push add bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push add add jno jnp xchg movsl stos mov mov aad (bad) ljmp lldt xor push push pop pop gs je jg mov test ret leave into roll fcmovu in out hlt add add and inc inc dec dec push pop pop fs je jg mov test ret enter fsubp call add add add or sub inc dec dec push pop pop arpl jae jge test lahf movsb stos scas mov add (bad) aad (bad) ljmp unpcklps push and das xor add add dec push push pop bound insl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jbe addl add xchg xchg fwait mov mov aad loopne ljmp unpcklps pop and sub xor push push pop pusha gs jne jg mov mov mov (bad) fneni(8087 out lock cld add or add sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock add and add cmp inc dec dec push add imul addl mov add xlat add jecxz out repz incb or adc sbb cmp pop add add imul addb mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop imul add test ret leave into rcr fsubp call add or daa sub aaa cmp add push push pop bound jno jl xchg stos mov mov aad loopne ljmp or adc sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa data16 jl xchg cmpsl lods add add rcr fucom call incb or adc sbb cmp push pop popa add add jns test mov mov aam fsubp jmp add or sub inc dec push push pop popa data16 jno jnp xchg mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec add pop fs je jg mov test ret enter fucom call or and xor add inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl (bad) add mov mov rcr fiadd in out hlt stc incb add pop and das xor aas inc dec dec push pop pop imul add mov mov ret rcl fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas add rcl fneni(8087 in lock sti add adc das xor aas inc dec dec push pop pop imul test movsb stos scas mov mov (bad) in out hlt stc incb push adc push and add aas inc dec dec add pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg test add add int xlat add jecxz out repz incl unpcklps sbb and inc inc dec dec push pop pop gs je jg mov popf mov mov rcr fucom call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp add add add dec push push pop pusha gs jne addb mov stos mov mov aad loopne jmp cmc cli add and inc inc add pop pusha imul addb movsl stos scas mov add (bad) aad loopne ljmp unpckhps pop and das xor dec add pusha imul addb mov mov (bad) fildl add add out lock sti add and inc inc dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop add add jg mov stos scas mov mov (bad) add ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul test movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and sub xor dec push pop pop gs je jg mov test ret leave into rcr fsubp add out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae add mov test rol iret aad (bad) ljmp unpcklps add pop and das xor ds dec dec push pop pop arpl je jle mov test ret enter fucom call add or daa sub inc dec push push pop popa insb jb jl xchg lea test ret leave into rcr fsubp call add add adc push and cs ds dec dec push pop pop arpl jae jle mov test scas mov mov (bad) in out repz incb or adc push and xor cmp push pop pop imul mov mov rcr fucom call add or add sbb cmp push pop bound jno jl xchg add (bad) int3 rcl fsub add in repnz add or push sbb sub cmp dec push push pop add push jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov roll int xlat fucom out icebp idiv add or push sbb sub add cmp inc dec push push pop popa imul addb movsb stos scas mov mov aad (bad) ljmp add cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jns orl test mov mov xlat fsub out repnz add or push sbb sub add cmp inc dec push push pop popa imul addb movsl stos scas mov mov aad loopne ljmp or adc xor dec push pop pop imul mov add xchg cwtl sahf mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov aad fild out lock sti add pop and aas inc dec dec add pop gs je jg mov test ret enter fucom call incb or adc sbb add sub inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or and aas inc dec dec push add imul addb movsl stos scas mov mov (bad) in add cmc cli add pop and sub xor dec push pop pop imul lea lods mov mov add add rcl fnop in out cmc cli incl unpcklps push and xor cmp push pop popa data16 jno jnp test movsl stos scas mov mov fcomp jecxz in add stc incb add push adc push and sub inc dec push push pop popa data16 add jl xchg stos mov mov aad (bad) jmp add add adc cs ds dec dec push pop add push (bad) xchg stos add lret rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl outsb jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add push or push sbb and cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out add add idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add push or add sbb daa sub cmp dec push push pop pusha gs jne jg test movsl stos scas mov mov fcomp jecxz in repz std add or and sub inc dec push push pop popa data16 jno jnp add mov mov rol rolb xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound ja (bad) xchg test mov mov xlat fsub out icebp idiv add or push sbb and cmp dec push push pop pusha add jbe addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub add add cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or pop sbb sub add cmp add push pop pop bound jb jl xchg stos mov mov rol rcl fneni(8087 in lock cli incl pop and xor ds dec dec add imul lea lods mov mov add rcl fndisi(8087 out lock cld add or push sbb sub xor dec push pop pop fs je jg mov test add rcr fsubp call add or daa sub cmp inc dec push push pop popa data16 jno jnp (bad) xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop add add insb jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop add imul mov lods mov mov rcr fucom out repnz add or push sbb sub cmp dec push push pop pop add jne addb movsl stos scas mov mov (bad) jecxz out repz add add std add add adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam loopne jmp icebp add std add or pop sbb daa sub ss inc dec push push pop popa imul addb mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos mov mov rol rcl fsub out icebp idiv add or add sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add add adc push and add sub dec add pop pop arpl jae jge mov cmpsl lods mov add add (bad) jmp add or adc xor dec push pop pop fs je jg mov movsl stos scas mov mov fiaddl loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov mov add add leave iret aam (bad) jmp add push adc push and sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add pop or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc add and aas inc dec add dec push pop add push jne jg mov test ret enter (bad) in jmp cmc sti add add daa sub dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov aad (bad) ljmp or adc das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods add int3 rcl add loop in repnz add or pop sbb sub add inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and add xor ds dec dec push pop pop arpl add outsb jae jle mov cmpsl lods mov mov (bad) add loop in icebp add std add or and sub xor ds dec dec push pop pop arpl jb jge xchg stos mov mov rcl fndisi(8087 out lock add add or push sbb sub xor dec push pop pop imul mov lods mov mov rcr fldl jecxz out add repz std add or daa sub inc dec dec push push pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and add dec push pop pop imul add mov test ret enter fldl jecxz out repz add add push adc push and sub das xor aas inc dec dec push pop pop imul xchg cwtl sahf mov mov rcr fsubp jmp add or adc push and cs ds dec dec push pop pop imul mov scas mov mov aam fsubp jmp incl add sbb and das xor ds dec dec add pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and add xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or sub inc add pop pop arpl jae jle mov (bad) xchg cltd lahf movsb test add rcr fsubp jmp incl unpcklps sbb and aas add dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 add in icebp idiv add or push sbb and sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fildl loop in icebp idiv add add daa sub add push push pop bound insl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp add push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add jno jl xchg add ret rcl fsub jmp or adc add and cmp dec push push pop pusha add insb jb jl xchg stos mov mov aad (bad) ljmp adc das xor aas add push push pop pusha gs jne jg mov test ret leave into aam fsubp call add push adc push and add xor ds dec dec push pop pop arpl jb jge xchg mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop add jo jnp test movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jge orl test mov mov rcr fsubp call add or add add sbb xor ds dec add pop pop arpl jae jp addb movsl stos scas mov mov (bad) jecxz out repz incb or and sub inc dec add pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock sti add sbb sub add inc dec push push pop popa imul addb add mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop arpl add test movsb test ret enter fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb mov mov rcl fneni(8087 in lock cli add pop and add cmp inc inc dec push push add imul addb add cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push pop popa imul addb movsl stos add lret rcl fnop add jmp idiv add or adc xor dec push pop pop fs je jg mov (bad) xchg lcall mov add add add (bad) fneni(8087 out lock sti add and cmp inc dec push push pop popa insb jno jl xchg lods mov mov rcr fldl jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha add jo add mov lods mov mov xlat fsub out add clc std add or and xor ds dec dec push pop pop arpl je jle mov test ret leave add aam (bad) ljmp or adc xor cmp dec push push pop pusha imul addl mov mov xlat fsub out add clc add std add or sub dec dec add pop arpl jae jle mov test ret leave into rcr fsubp jmp incl add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rcl add jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov add add mov aam (bad) jmp add lldt xor dec push push pop popa imul addl mov (bad) fndisi(8087 out lock cld add or push sbb add aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov aad loopne ljmp lldt sbb and xor dec push pop pop fs add addb movsl stos scas mov mov fcmovu in out hlt stc incb add adc sub xor push push pop pusha gs jne jg mov test (bad) leave into aam add in out hlt add add and aas inc dec dec push pop pop imul mov scas mov mov add iret aam (bad) jmp add push adc push and add xor aas inc dec dec push add gs je jg mov test ret enter fsubp call add or adc push and xor add inc dec dec push pop pop imul mov lods mov mov fcomp jecxz jmp add push adc push and sub xor ds dec dec push pop add pop arpl jae jle add movsb test ret leave into rcr fsubp call add or and xor cmp inc dec dec push pop pop imul mov lods mov mov xlat fsub out add clc std add add adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom call add idiv add or daa sub aaa cmp inc dec dec push pop pop bound outsb jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add movhps add daa sub aaa cmp inc dec push add bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec dec push pop pop bound jb jge xchg add test mov mov xlat fsub out icebp idiv add or push sbb daa sub add push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add add add cs ds dec dec push pop pop imul mov scas mov mov fcomp loop call add push adc sbb add sub dec dec push pop add imul mov test ret leave into rcr fsubp call add or daa sub inc dec dec push pop pop arpl outsl je jg mov test ret leave into rcr fsubp call add or and xor ds dec dec push add fs je jg mov test add add aad (bad) ljmp unpcklps pop and cs ds dec dec add add jbe addb movsl stos mov mov aad (bad) ljmp unpcklps pop add add dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp or push sbb and inc inc dec add add bound jb add mov add (bad) leave into aam fsubp jmp add push adc sbb cmp add arpl jns orl movsb test (bad) leave into rcr fsubp call add or daa sub aaa add pop pop bound jb add mov test mov mov xlat add loop add in repnz add or pop sbb es cmp dec push push pop pusha gs add addb mov mov (bad) fneni(8087 out lock sti add pop and aas add push push pop add imul addb movsb stos scas mov mov (bad) jecxz out repz incb or and xor ds dec dec push pop pop bound jb jl add (bad) xchg cmpsl lods mov add fcomp jecxz in repnz std add or daa sub ss inc dec push push pop pusha data16 jl xchg mov mov (bad) fndisi(8087 out lock add and aas inc add push pop pop gs je jg add movsl stos scas mov mov (bad) in ljmp add adc pop and cs ds dec dec push pop pop arpl jb jge orl movsb test ret enter fsubp call add or daa sub inc dec add pop bound outsb jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and cmp dec push push pop pusha imul addb add add mov rcl fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov test mov fsubp jmp add push adc push and xor add push pop pop imul mov cmpsb stos mov mov aad loopne jmp icebp idiv add or pop sbb daa sub add add cmp inc dec push push pop popa data16 jno jnp xchg mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp adc sub cmp dec push push pop pusha imul jl xchg add int3 roll add xlat fsub out icebp idiv add add push adc push and add aas inc dec dec push pop pop imul mov scas mov mov fcmovu in out hlt stc incl push adc push and das xor aas inc dec dec push pop add push jne jg mov nop xchg fwait mov mov rol rcl fndisi(8087 out icebp idiv add add pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov ret rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add and add dec push push pop popa imul addb mov mov rcl fucom out repnz add add or pop add xor ds dec add pop pop gs je jg mov test add lret fnop in out cmc cli incl unpcklps pop and xor inc inc dec push push pop popa insb jb jl orl lods mov mov fldl in out repz incb or adc sbb aaa add inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub add in repz std add or daa sub inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop imul test movsl stos mov mov rcl fneni(8087 out lock cld add or push sbb sub cmp dec add pop bound jb add mov test mov mov fcomp loop in add clc incb or adc sbb cmp push pop insw jb jge xchg cmpsl add enter add jecxz out repz add add push adc push and xor ds dec dec push add imul mov scas mov mov fadds fsubp call add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg add movsl stos mov mov aad add out icebp idiv add or adc sbb daa sub ss inc dec push push pop pusha add insl jae jge mov mov mov fcomp jecxz in repnz std add add adc push and xor cmp pop pop bound jb jge xchg lods mov mov rcl fsub out repnz incb or and xor ds dec dec push pop pop bound add jge xchg cmpsb lods mov mov (bad) fneni(8087 in lock sti add or adc sub cmp dec push push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add push adc push and xor cmp pop pop bound jb jge xchg test mov mov xlat fsub out icebp add std add or add xor ds dec dec push pop pop arpl jb add test add lahf movsb test rol iret aad (bad) ljmp push adc pop add aas inc dec dec push pop pop fs je jg mov test enter add in out repz std add add adc sbb xor ds dec dec push pop pop bound jb jl add mov mov (bad) fneni(8087 in lock cli incl unpcklps push and add das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg movsl stos add lret rcl fcmovu in out hlt stc incl add pop and add dec push pop pop imul mov nop xchg lcall add aam fsubp jmp add or daa add dec dec push push pop bound jno jnp xchg movsl stos scas mov mov flds (bad) jmp or add das add push push pop pusha gs jne jg mov nop xchg fwait mov mov aad (bad) ljmp unpcklps pop and das xor cmp dec add pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov rcl fucom out repnz add or add sbb aaa cmp push pop pop arpl jae jle mov add mov aad loopne add in lock cli add pop and das xor aas add push push pop pop gs je jg mov stos scas mov mov (bad) in out repz incl unpcklps and add xor add pop popa imul addb cmpsb add int3 rcl fndisi(8087 out lock add and aas inc dec dec add pusha imul add fwait mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov fadds fsubp jmp add push adc sbb xor ds dec dec push pop pop add je jg mov test add (bad) lret rcl fneni(8087 out in icebp idiv add or add sbb sub cmp dec push push pop add insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add sbb sub cmp inc dec push pop popa data16 jno jnp xchg add rol roll xlat fldl jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb mov add vaddsubps fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom call add or pop sbb daa add inc add pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc das xor add add push pop pop imul mov lods mov mov xlat fsub out repnz add add daa sub inc dec push push pop popa data16 jno jl mov stos scas mov mov aad (bad) jmp add push or push sbb and aas inc dec dec push pop pop imul mov test ret enter fldl add out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom add out repz std add or daa sub inc add push pop bound insl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop popa imul add xchg movsl stos scas mov mov (bad) in out hlt stc incb push adc push and add dec push pop pop imul mov mov rcr fsubp call incb push adc push add cmp dec push push pop pusha imul addb movsl stos scas mov mov aad loopne ljmp unpcklps pop add das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or add sbb es ss inc dec push push pop popa imul jl xchg mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov add add (bad) lret rcl fneni(8087 in lock cli incl pop and xor ds dec dec push add imul mov lods mov mov xlat fucom in icebp idiv add or add sbb daa sub ss add add pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp add cld add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec dec push pop pop bound jb jge xchg test mov add fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt add stc incb or adc push and sub dec dec push push pop bound jb add mov test mov mov xlat fsub out icebp idiv add or sbb sub xor dec push push pop pusha data16 ja (bad) mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add sbb sub xor dec push pop pop imul mov add add xchg cltd sahf mov mov fcomp loop in repnz add or pop sbb es cmp dec push push add imul addb movsl stos mov mov rcl fildl loope jmp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov movsl stos scas mov mov (bad) in out repz incb or daa sub dec push push add push (bad) xchg lea test ret leave into rcr fsubp call add or daa sub inc dec dec push pop pop bound jb jge xchg lods mov mov add rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je add lcall mov fcmovu add jmp cmc cli add push or push sbb sub xor push push pop pop gs je jg mov test ret leave into aam fsubp jmp add push adc sbb cmp push pop bound add insl jb jl xchg lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa insw jbe addl pushf mov mov add enter fsub out repnz add or push sbb sub cmp dec push push pop pop add jo jp test movsb test ret leave into rcr fucom call add add pop or daa sub cmp dec push push pop pusha gs je jg mov movsb test ret enter fucom out repnz add or add sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa imul addb add lahf movsb stos scas mov mov (bad) add jmp add push adc push and sub inc dec push push pop popa imul addb cmpsb stos mov mov rcl add loope in icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov test ret enter fucom out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test mov add fcomp jecxz in repnz std add or pop sbb and sub inc dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov add add aad (bad) ljmp or adc das xor dec push pop pop imul lea lods mov mov jmp add unpcklps push and xor ds dec dec push pop pop arpl push je jnp test movsl stos mov mov aad loopne add in repnz incb or adc push add das xor add dec push push pop pusha imul jo jnp add mov mov into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov add (bad) leave into aam fsubp jmp add push add add sbb and aas inc dec dec push pop pop fs je jg mov stos scas mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs je jg add mov mov (bad) fneni(8087 out lock add add or and xor add push pop add push jne jg mov cmpsb stos mov mov add add loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov aad loopne jmp cmc cli add pop and cmp add inc inc dec push push pop pusha gs jne jg mov test (bad) leave into add fcmovu in out cmc cli incl unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov mov mov aam fsubp jmp add or add cmp dec push push add imul jl xchg stos mov add int3 rcl fsub out in add clc incb or daa sub inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aam (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov add fsub out icebp idiv add or push sbb sub cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) add ljmp unpcklps push and xor ds dec dec push pop popa push (bad) mov cmpsl lods add leave into rcr fsubp call add or sub add dec push push pop pop add jne addb mov stos mov mov rcl fneni(8087 in lock add add pop or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) add ljmp unpcklps pop and das xor ds dec dec add imul mov test mov mov xlat fsub out add clc std add or daa sub inc dec push push pop popa imul addb stos scas mov add (bad) rcl fneni(8087 out lock sti add pop and add inc inc add pop pop bound jb jns orl movsb test ret leave into roll fcmovu in out hlt stc incb or add add push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock cld add or push sbb sub cmp dec push push pop pusha add jno jl xchg stos mov mov aad loopne ljmp or push sbb and inc inc dec dec push pop pusha gs jne jg mov test leave into add fcmovu add jmp cmc cli add pop and das xor aas inc dec dec add push pop add insb jno jl xchg mov cmpsl lods mov mov xlat fsub out in repnz add or push add add xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or adc push and xor ds dec dec push pop pop arpl ja addl mov rol rcl fildl add out lock cli add add and inc inc dec dec push pop pop imul mov scas mov mov fcomp loop jmp add push adc push and sub inc dec push push pop popa data16 insl jb jns orl mov add fcomp jecxz in repnz add or daa sub xor cmp inc dec dec push push add insb jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add sbb and aas inc dec dec push pop pop arpl jae jge test mov mov xlat fsub out icebp add add sti add add sub xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 add in icebp add cld add or push pop sub cmp dec push push pop pusha add insb jb js (bad) mov mov add (bad) jecxz out repz std add push adc push and add cmp dec push push pop pop gs add add jg mov test (bad) leave into rcr (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and sub inc dec push push pop popa insb jno jl xchg mov mov (bad) fneni(8087 in lock add add pop and cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt add add sbb sub xor push pop pop gs je jg add movsb stos scas add iret aad (bad) jmp add pop and aas inc dec dec push pop pop arpl jae jge mov mov add lods mov mov add (bad) jecxz out repz std add push adc sbb aaa cmp add push pop pop add insl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop add sub xor cmp dec push push pop pusha gs jne jg mov test add (bad) aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb addb mov mov rcr fucom out repnz adc sbb cmp push pop bound jno jl xchg cmpsl lods mov mov rcl fndisi(8087 add call add or daa sub aaa cmp add arpl add jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub add cmp push pop pop add jae jle mov test mov mov add (bad) in out repz incb or daa sub inc dec push push pop popa insb jno jl xchg add (bad) lret roll xlat fsub out icebp idiv add or adc sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov rol rcl fneni(8087 in lock add cld add or pop sbb es cmp dec push push pop pusha add jl add mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add or sub inc add add imul add add test ret enter fucom add ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov add (bad) call incb or adc sbb xor cmp push pop bound jno jl xchg cmpsb stos mov mov rcl fneni(8087 in out cmc cli incl add adc add add and aas inc dec dec push pop pop imul mov movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub xor dec push add add jno jnp test movsb stos add add leave iret aam fsubp jmp cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov rcl fndisi(8087 out add idiv add movhps and sub xor cmp dec push push pop pusha imul addb movsb test (bad) leave into add fcmovu in out hlt stc incb push adc add and sub add add add add add inc inc dec push push pop pusha gs jne jg add add rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound outsb jae jns test mov mov add fcomp jecxz out repz incb add or adc das xor aas inc dec dec push pop pop imul mov scas mov mov fadds fsubp jmp add or adc das xor inc add push pop pop gs je jg mov test (bad) leave into aam fsubp jmp incl pop and das add ss inc dec push push pop popa data16 add jbe addb add add (bad) int xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov cmpsb stos mov mov fnclex call add or add pop sbb das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop or pop sbb daa add dec dec push push pop bound imul mov add leave into rcr fsubp call add or daa sub dec dec push push pop bound jno jl xchg add rol rcl fneni(8087 in lock sti add and cmp dec push push pop popa add add jge mov test mov mov rcr fsubp jmp add push adc sbb cmp pop pop arpl jae jns test mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop add jo add xchg cmpsb stos mov mov aad loopne jmp cmc cli add add sub cmp dec push push pop pusha imul jl xchg lods mov mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov add add fsub out icebp idiv add or push sbb and aas inc dec dec add pusha gs jne add xchg pushf mov mov aad loopne out icebp idiv add or adc das xor dec push pop pop imul add movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound add add jb js orl mov mov fcomp loop in icebp idiv add or push sbb sub xor cmp inc dec push push pop pusha imul addb mov cmpsl lods mov mov add loope in icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add add add or daa sub ss inc dec push push pop pusha add jno jnp test pushf mov mov (bad) fneni(8087 in lock sti add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg mov mov rcr fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle add test mov mov aam (bad) jmp add push adc sbb aaa add inc dec dec push pop pop bound jb jl xchg cmpsl add (bad) int xlat fldl jecxz in repnz or adc push and xor cmp pop pop bound jb jge xchg lods mov mov aad loopne jmp cmc sti add and add add aas inc dec dec push pop pop imul mov movsl stos add lret rcl fneni(8087 in lock cli add sbb sub cmp dec push push pop pusha gs jne jg mov test mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov test add aam fsubp jmp add push adc push and xor cmp add arpl jae jle mov test scas mov mov aad (bad) ljmp or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc pop and cs ds dec dec push pop pop arpl jb jl xchg cmpsl lods mov add aam fsubp jmp add push adc sbb xor ds dec dec push pop pop arpl jae jle mov test mov mov rcr add in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov into rcr fsubp call add or sub dec dec push push pop bound add jle mov test mov mov rcr fldl in out repz incb or adc sbb and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec push push pop pop gs je add add jp test add mov aad fndisi(8087 out lock add and cmp dec push push pop pusha imul addb movsl stos scas mov mov fiaddl loopne jmp icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) fildl loope in icebp idiv add push or push sbb sub cmp dec push push pop pusha imul addb mov stos mov mov aad fsub out icebp add std add or pop sbb daa add inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov movsb stos scas mov mov aad fild out add idiv add or push sbb sub cmp add pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock cld add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fildl loope in icebp add std add or daa sub add aaa cmp inc dec push push pop popa data16 jno jl xchg mov mov xlat fsub out add clc std add add adc push and sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov add rcl fsub out icebp testl push adc push and xor ds dec dec push pop pop add jae jle mov test mov mov fcomp jecxz in repz std add add adc add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incl add adc xor inc inc dec push push pop bound add insb jb jl xchg lods mov add xlat fsub out repnz add or adc sbb xor ds dec dec push pop pop add je jg mov test ret leave into rcr fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out add clc incb add add or adc add and sub xor push push pop pusha gs jne jg xchg movsl stos mov mov aad loopne ljmp adc add xor dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb and add xor dec push pop pop imul mov add add lods mov mov rcr fsubp call add or add xor add push pop pop arpl jae jns test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp or adc pop and add add xor dec push push pop pusha imul addb mov mov aad (bad) ljmp unpcklps push and cs add inc dec add pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or add xor add inc dec dec push pop pop imul mov lods mov add rcl fldl jecxz in repz std add or daa sub add cmp push pop pop imul mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp lldt das xor add add dec push push pop popa data16 jno jnp xchg add rol rcl fneni(8087 out lock sti add pop and aas inc dec add pop add imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp inc dec add pop pop imul (bad) xchg cltd sahf movsb test ret enter fucom call incb or sub add push pop pop add jae jle mov movsb test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop add aas inc dec add add add imul addb cmpsb stos mov mov rol rcl fndisi(8087 out lock add pop and aas inc dec dec push pop add push jo jnp test movsl stos mov mov aad (bad) ljmp push adc push and xor ds add push pop add push jne jg mov stos scas mov mov (bad) jecxz out repz incb add unpcklps push and xor ds dec dec push add imul mov add (bad) aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and cmp dec push push pop add add jl xchg add stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jno jnp addl mov rol rcl fneni(8087 out lock cli add pop and aas inc dec dec push add gs jo jnp test movsl stos scas mov mov fcmovu in out hlt stc incb push add add and das xor aas inc dec dec push pop pop arpl push je jg test movsb stos scas mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc dec push push pop popa imul ja jge mov cmpsl lods mov add roll xlat fsub out repnz add or pop sbb daa sub cmp dec push push pop pusha imul add xchg pushf mov mov (bad) fneni(8087 in lock add and aas inc dec dec push pop pop add jne add lcall mov (bad) in out hlt stc incl push adc push add das xor aas inc add add push pop pop arpl jae jp test lahf movsl stos scas mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add popa imul add xchg popf mov mov (bad) add fsub add in repnz add or push sbb daa sub ss inc dec push push pop pusha imul addb add mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop fs je jp test mov mov aam (bad) jmp add push adc push and add ds dec dec push pop pop arpl add js (bad) add add (bad) leave into aam fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop arpl imul mov xchg cltd add mov aam fsubp jmp incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb add mov (bad) fndisi(8087 out lock add pop and aas add push push pop pusha gs jne jg mov add mov mov rol rcl fneni(8087 in jmp idiv add or adc das xor dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul jl xchg cmpsl add (bad) int xlat fsub out icebp idiv add pop or and sub aaa cmp inc dec push push pop popa imul addb movsl stos add (bad) int3 rcl fsub out lock add and aas inc dec dec push pop pop imul mov test rol iret aad (bad) ljmp push adc push and xor cmp push pop pop arpl jae jge mov add add leave iret aam fsubp jmp incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov test mov aad loopne ljmp lldt das xor add inc dec dec push pop pop imul mov mov add aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov test mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop add outsb jae jge mov cmpsl lods mov mov aam fsubp jmp add or adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add pop and aas inc dec dec push pop pop imul mov xchg cltd sahf movsb test mov (bad) fneni(8087 in lock cli add pop add inc inc dec dec push pop pop add add je jle mov test mov mov rcr add in out hlt cli incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov into rcr fucom call add or daa sub inc dec push push pop popa imul ja addl mov rolb int3 rcl faddl loop in repnz add cld add or add sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov rolb fcomp jecxz in repz incb or sub inc dec dec push pop pop bound jb jge xchg mov lods mov mov (bad) add loope add repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov aad fndisi(8087 out lock sti add and aas inc dec dec push pop pop imul mov test ret enter (bad) in add cmc cli incl unpcklps add sbb add inc inc dec push pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps pop and dec push bound jb jl xchg lods mov mov rcl fndisi(8087 out lock add pop or xor ds dec dec push pop pop arpl push je jg mov test (bad) leave into aam add (bad) jecxz out repz incb or add pop add inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc add add sbb sub cmp dec push push pop pusha imul addb movsl stos mov add fsub out icebp idiv add or adc sbb daa add dec dec push push pop add add add jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl mov cmpsl lods mov mov xlat fsub out add clc std add or and sub xor aas inc dec dec push pop pop imul mov stos scas mov mov fcmovu in out hlt stc incl add add add add unpcklps pop and add xor dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpckhps sbb sub xor cmp inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov add fucom out repnz add or pop sbb daa add add push pop pop arpl jae add mov add mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add add adc push and xor cmp add push push pop pop gs jne jg mov movsl stos mov mov aad loopne ljmp unpcklps pop and das xor add add ds add push add gs jne jg mov test (bad) leave into aam fsubp jmp add or daa sub inc add push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out in repnz add or pop sbb daa sub cmp inc inc dec push push add insl jb jl xchg cmpsl lods mov mov add add (bad) int3 rcl fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or and sub add add imul mov add leave into rcr fucom call add or daa sub inc dec push add pop pop bound push (bad) mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor dec push add popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp or adc das xor add pop pusha add jbe addb mov mov aad loopne add in out cmc cli incl unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc sub ss inc dec push add add insl jb jge xchg lods mov add xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add jo add ja addl mov rol rcl fcmovu in out hlt stc incl push adc push and cs ds dec add pop pop add outsl jne jg mov test ret enter fucom call add or adc sbb cmp push add push jle mov test scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec dec push pop pop add jo jp test movsb stos scas mov mov aad (bad) jmp add push adc push and xor cmp pop pop arpl add jle test add add mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push add insb add jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add sbb sub xor push push pop pop add jbe addb mov stos mov add fsub out icebp idiv add or adc sub xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp inc dec push push pop popa data16 add add mov test mov mov add fucom call add or daa sub aaa cmp inc dec push push pop popa imul add cwtl popf mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop add jne add pushf mov mov aad loopne ljmp unpcklps pop add aas inc dec dec push pop pop imul mov cmpsb stos mov mov rcl fneni(8087 out lock add pop and aas inc dec add pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push add bound jb jl (bad) mov mov scas mov mov fcomp loop call add or daa sub inc dec push push pop popa data16 jno jnp xchg add mov xlat faddl add out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jnp test mov mov (bad) fneni(8087 in lock cli add pop and das add dec push pop pop imul mov movsl stos mov mov aad fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha add jno jnp xchg popf mov mov xlat fsub out icebp add std add or pop sbb daa sub ss inc dec push push pop pusha imul addb mov mov rol rcl fndisi(8087 out icebp idiv add push or push sbb and inc inc dec push push pop pop fs je jg add mov mov aad loopne jmp idiv add or push sbb sub cmp inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov rcr fucom call incb or adc sbb cmp push pop popa insb jno jl xchg fwait mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jns test add mov fcmovu in out hlt stc incb or adc das xor aas inc dec dec push pop pop imul mov lods add leave iret aam fsubp jmp add push adc push and add add dec dec push push pop bound jb jl xchg cmpsl lods add int fcomp loop in repnz add or pop sbb daa sub ss inc dec push add popa insb jno jl xchg add (bad) int xlat fsub out icebp testl adc sbb daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov add add fcmovu in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jb jge add mov mov iret aam fsubp jmp add push adc sbb and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add (bad) jecxz out repz std add or daa sub inc dec add pop popa insb jno jl xchg movsl add (bad) int3 rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha add jno jnp xchg movsl stos mov add add fsub out icebp idiv add add push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) add jmp add or sub inc dec push push pop bound jb jge xchg test mov mov iret aam fsubp jmp add push adc sbb xor ds dec dec push pop pop arpl jae jle mov test mov mov rcr fldl in out hlt stc incb or adc push and sub dec dec push pop pop bound jb add js (bad) xchg cmpsl lods mov add rcr fsubp call add or daa sub inc dec push push pop popa data16 jno ja (bad) xchg cmpsl lods mov mov rcl fucom add out repz std add or and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add add adc xor push push pop data16 jb jl xchg lods add int3 rcl add loop call add or pop sbb daa sub ss inc inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out in icebp testl adc sbb aaa cmp inc dec push push pop popa insb jno jl xchg add add rol rolb xlat fsub out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb mov mov (bad) fndisi(8087 add in repnz add or daa sub inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb sub add add cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) fneni(8087 out add testl adc sbb aaa cmp inc dec push add bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov add rcl fsub out in repnz std add or adc push and sub dec dec push pop pop bound jb jge xchg test mov mov xlat fucom out repnz adc sbb and das xor ds dec add pop pop fs je jg mov test ret enter fucom call add or sub inc dec push push pop bound add add jb jl xchg lods mov mov (bad) add loope in icebp idiv add or and xor ds dec dec push pop pop arpl outsb jae jle mov test mov mov fcomp loop in repnz add or and sub xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add add or and cs ds dec dec push pop pop arpl jae jge mov test mov add fcomp jecxz in repz std add or and add xor dec push pop pop add jo jnp test movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and das xor aas inc dec dec push pop pop arpl jae jle mov add lods mov mov xlat fucom out add clc std add or and sub xor aas inc dec dec push pop pop gs je jg test movsl stos mov mov aam (bad) ljmp push adc push and add xor dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc sbb and cmp dec push push pop pusha imul addb movsl stos mov mov add loopne in repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno add mov lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov movsl stos scas mov mov add iret aam (bad) jmp add push adc push and sub inc add push pop pop imul (bad) xchg cltd lahf movsb test ret leave into roll fcmovu in out add cli incl pop and das add dec push pop pop fs je jg mov add lods mov mov (bad) fneni(8087 out lock sti add sbb sub xor dec add add pusha imul addb movsl stos mov mov aam (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg lods add int3 rcl fsub out icebp add cld add or push sbb sub cmp dec push add add insb jb jl xchg lods mov mov (bad) fsub out add idiv add add daa sub inc add pop pop bound jb jge xchg cmpsl lods mov mov into aam fsubp jmp add push adc sbb xor ds dec dec push pop pop arpl outsb je add add mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb add int3 rcl fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret add iret aad (bad) ljmp unpcklps push add xor ds dec dec push pop pop arpl outsb je jp test movsb test (bad) leave into rcr fsubp jmp add or adc pop add aas inc dec dec push pop pop add jo jp test movsb test (bad) leave into aam add loopne jmp idiv add or adc xor dec push push pop pusha imul addb mov stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov scas mov mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) faddl loop in repnz add or pop sbb daa sub aaa cmp inc dec add add pop popa imul addb mov xchg cwtl popf mov mov xlat fsub out icebp idiv add or push sbb and sub inc dec dec push pop pop bound jb add mov test mov mov xlat fucom out add hlt stc incb push adc push and cs ds dec dec push add imul mov scas mov mov add fsubp jmp add or sub xor cmp pop pop bound jb jge xchg lods mov mov (bad) add loop in icebp idiv add or push sbb es ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incl push adc push and cs ds dec dec push pop pop arpl jae add add mov mov mov fsub out repnz add or push sbb es cmp inc dec dec push push add push orl mov mov fcomp jecxz in repnz std add or add push and xor cmp pop pop arpl jb jns orl test mov add fcomp loop in repnz add add push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp add std add or daa sub cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or adc sbb aaa cmp inc dec push push pop popa insb jno jnp xchg movsl add add (bad) int3 rcl fsub out icebp idiv add or adc das xor aas inc dec add pop pop add jbe addb movsl add vaddsubps fnop in out hlt cli incl unpcklps add and sub xor push push pop pusha gs je jg xchg movsl stos scas mov mov aad (bad) ljmp push adc push and add sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp or adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and sub ss inc dec push push pop popa imul addb movsl stos scas mov mov lret add (bad) fndisi(8087 out lock add and aas inc dec dec push pop add push je jnp test movsl stos scas mov mov aad (bad) ljmp push adc push and add xor dec push pop pop imul mov xchg cltd sahf movsb test ret leave into roll (bad) in out repz incb or adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp lldt das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub xor cmp inc dec push push pop popa imul addb movsl stos scas mov mov aad add out jmp idiv add pop and aas inc dec dec push pop pop arpl outsl je jle add movsb test les lret fcmovu in out hlt stc incb push adc push and sub aas inc dec dec push pop pop arpl jae jge mov mov mov xlat fucom add in repz std add or daa sub ss inc dec push push pop pusha gs add add jg mov test ret enter fsubp call add or pop sbb and sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out repz incb or daa sub aaa add push pop bound jno jl xchg movsl stos mov mov aam add in in icebp idiv add add or push sbb and aas inc dec dec push pop pop imul mov movsl stos scas mov mov aad loopne jmp cmc cli incl pop and cs ds add dec push push pop pop gs je jg mov test scas mov mov fcomp jecxz in add stc incb push adc push and xor cmp push pop bound jb jl xchg add xchg fwait mov mov aad loopne ljmp unpcklps pop and add xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add or adc das xor dec push push pop pusha gs je jg mov test ret enter fucom call stc incl unpcklps push and add xor ds dec dec push pop pop bound jb jl add add mov xlat faddl loop in repnz add or pop sbb es cmp dec push add pop pop bound jb jl xchg stos mov add fndisi(8087 out lock sti add push or push sbb sub cmp dec push push pop pusha gs jne jg mov test mov rcr fucom call add or pop sbb daa sub aaa add push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add or sub inc dec push add arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock add add pop or pop sbb es aaa cmp inc dec add add pop pusha imul addb mov mov rol rcl fneni(8087 in add idiv add and inc inc dec dec push pop pop add imul addb movsl stos scas mov mov aad (bad) ljmp add adc das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat add add loope in icebp idiv add or push sbb and inc inc add pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or pop sbb daa sub cmp dec push push pop pusha add jno jnp xchg movsl stos mov mov aam (bad) jmp add or add das xor ds dec dec push pop pop arpl add jae jge mov mov add fcomp jecxz in repnz add add or sub inc dec push push pop popa insb add jae jle mov cmpsl lods mov mov add fucom out repnz add or push add aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz add add add incb or daa sub inc dec push add bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound add jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl sbb and sub cmp dec push push pop pop fs je jg mov add xchg cltd sahf mov mov iret aam (bad) jmp add or adc and xor cmp dec push push pop pusha imul addb xchg lods mov mov (bad) fneni(8087 out in icebp idiv add or push sbb sub xor cmp inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and add xor cmp pop pop bound outsb jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov aad loopne ljmp unpcklps pop and add xor dec push push pop pusha gs jne jg mov test add add iret aam fild in lock cli add pop add sub xor dec push pop pop gs je jg mov mov mov (bad) fneni(8087 in lock cli add push or push sbb sub xor dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec add push pop pop bound jb jge orl test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp dec push pop pop imul mov lods mov mov xlat add jecxz add add out repz incl push adc push and xor cmp inc dec dec push pop pop arpl jae jge mov cmpsl add scas mov mov fcomp jecxz out repz std add or and xor cmp add arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pop gs je add add test lahf movsl stos scas mov mov (bad) in out repz incb push adc push and xor cmp push pop bound jb jl xchg stos add int3 rcl fsub out icebp idiv add or push sbb sub xor push add add insb jno jl xchg movsl stos mov mov aam (bad) jmp incl add add adc sbb and aas inc add push pop pusha gs jne jg mov test add (bad) lret rcl fneni(8087 in lock cli incl and sub cmp dec push push pop pusha add jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and sub cmp dec push push pop pusha gs jne addb movsb add (bad) aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add add addl mov rol rcl fnop in out cmc cli incl push or adc sub add cmp dec push push pop add insb jno jl xchg cmpsb stos mov mov add xlat fsub out icebp idiv add or push sbb sub add inc dec push push pop popa data16 jno jnp (bad) xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jge xchg lods mov add (bad) int3 rcl fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov add fucom call add or daa sub ss inc dec push push pop popa imul jl add mov mov (bad) fndisi(8087 out icebp idiv add sbb sub xor cmp inc dec push push add imul ja addl mov rol iret aad fild add in icebp idiv add or push sbb and aas inc add push pop pusha gs jne jg mov nop xchg fwait mov mov aam fsubp jmp add or sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov rcl fneni(8087 in jmp cmc cli incl pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 add in icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov movsl stos mov mov aam (bad) jmp add push adc push add cs add inc dec dec push pop pop imul add add mov test ret enter fucom call cli incl push adc push and xor ds dec dec push add arpl jae jge mov mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test (bad) leave into roll fcmovu in out hlt stc incb or add add adc sbb cmp push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp or adc das xor ds dec dec push pop pop arpl jae jge mov add (bad) leave into rcr fsubp call add or daa sub xor cmp push pop pop arpl jb jge xchg mov add add popf mov mov xlat fsub out icebp idiv add add or sub inc dec push push pop popa add jb jl xchg add int3 rcl fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fucom add in repz std add or daa sub xor cmp inc dec push push pop pusha imul addb movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods add int xlat fucom out repnz add or push sbb sub cmp inc inc dec push push add insb jno jl xchg cmpsl lods mov mov rol rcl fneni(8087 out icebp idiv add pop sbb daa sub aaa cmp inc dec push push pop pusha imul jl xchg movsl stos mov add (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock cld add or push sbb sub cmp dec push add add pusha gs jne jg mov test ret enter fucom call add or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas add int3 rcl fndisi(8087 out lock add or adc das xor add pop pusha add jbe addb movsl add (bad) aad fild in out hlt stc incl unpcklps add and sub xor dec push pop pop fs je jle test movsb test ret add iret aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop arpl jae js (bad) xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add add sub cmp dec push push pop pop gs je jg mov test mov mov iret aam (bad) jmp add push adc push and xor cmp push add push jle mov test mov mov rcr fucom call add add or pop sbb daa add xor ds dec dec push pop pop arpl jb jge xchg test mov mov add fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or and sub dec dec push push pop bound jb jl xchg add fwait mov mov aad (bad) ljmp push adc push and add xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov rcr add jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jl add mov mov rcl fsub out icebp idiv add or push sbb and sub xor inc dec push push pop popa data16 jno jnp xchg mov mov aad loopne out lock add pop and aas inc dec dec push pop pop arpl je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and sub cmp dec push push pop pusha gs jne addb movsb test add fcomp jecxz in repz std add or daa sub add push pop popa insb jno jl xchg stos mov mov aad add in in icebp idiv add or adc xor dec push pop pop imul mov movsl stos scas mov mov aad loopne ljmp unpcklps push and xor ds add push pop pop gs je jg mov test mov (bad) jecxz out add stc incb push adc push and xor inc inc dec push push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop add in repnz add or daa sub aaa cmp inc dec push add bound jb jge xchg lods mov mov xlat fsub out icebp testb add or adc push and sub dec dec push push pop bound jb jl xchg test add into rcr fsubp call incl unpcklps push and cs ds dec dec push pop pop arpl add jne add test movsb stos scas mov mov aad (bad) ljmp push add das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec add pop pop imul mov lods mov mov xlat fsub out icebp idiv add or add das xor dec push pop pop add je jg mov test mov mov fcomp loop in repnz add add and sub inc dec push push pop bound jno jl xchg add add (bad) int3 rcl fsub out icebp idiv add pop or pop sbb es cmp dec push push pop pusha gs add ja addl add fwait mov mov aad fneni(8087 out lock add add sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push add imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub add add cmp push pop popa insb jno ja (bad) xchg lods mov mov aad loopne ljmp adc es cmp dec push push pop pusha gs jne jg mov test mov aad (bad) ljmp add adc das xor aas inc dec dec push pop pop arpl jae jge add lahf movsb test add add fcomp loop jmp add or sub xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl imul lea lods mov mov (bad) fsub out lock add and aas inc dec dec push add add imul mov test ret enter fucom out repnz add or push sbb add sub xor cmp push pop bound jb jl xchg stos mov mov rcl add loope in icebp idiv add or push add es aaa cmp inc dec push push pop popa imul addb pushf mov mov (bad) fildl add in lock sti add or adc das xor cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs add addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insb jno add add xchg mov mov aad loopne ljmp unpcklps push and add add dec push push pop pusha gs jne jg mov test ret enter (bad) in ljmp unpcklps pop and sub xor dec push pop pop gs je jg mov mov mov aad loopne ljmp add or push sbb and aas inc add push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb mov stos mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg add add mov (bad) fsub out icebp idiv add or adc xor dec add pop popa imul addl mov mov fiaddl loopne ljmp or adc das xor dec push push pop pusha gs jne jg mov test mov aad loopne ljmp lldt add and aas inc dec dec push add gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods add add (bad) int xlat fsub out icebp idiv add or push sbb sub xor push add add insb jno jl xchg cmpsb stos mov mov aad loopne ljmp add adc sbb sub xor dec push push pop pusha gs jne jg mov test add (bad) lret rcl fneni(8087 in lock cli incl unpcklps push add aas inc add dec dec push pop pop arpl push je jg xchg scas mov (bad) int fcomp jecxz in repz add movhps es ss inc dec push push pop popa imul addb cmpsb stos mov mov rcl fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc sub cmp dec push push pop add imul addb movsl stos scas mov add (bad) lret rcl fneni(8087 out lock cld add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and add push pop bound jno jl xchg add add add rcl fucom out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg mov mov aad (bad) ljmp or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add popa add add jno jnp xchg mov mov aad loopne ljmp or adc sub xor push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push add popa add jb jl xchg lods mov mov add fsub out icebp add sti add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add sbb sub xor dec push pop pusha gs je jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop popa imul ja addl add xchg fwait mov mov rol rcl fneni(8087 in lock cli add sbb and add dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul ja add popf mov mov (bad) fsub out add idiv add or push sbb add sub xor dec push pop pop fs je jg mov test ret enter fucom call add or daa sub add cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge mov mov lods mov mov add into rcr fucom call add or add sub dec dec push push add push (bad) mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov mov stos scas mov mov fcomp loop in repnz add add es cmp dec push push pop pop gs je jle mov test mov mov xlat fsub out lock add pop and xor ds dec add pop pop arpl jae jge xchg lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa imul addb mov mov aam fnop in add add out hlt cli incl push adc push and sub inc dec dec push pop pop bound insl jae jge xchg lods mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa imul jg mov movsb add (bad) aam (bad) jmp add or and sub inc dec push push pop popa imul add jbe addb movsb test ret leave into rcr fucom call add or push sbb sub xor dec push add imul mov lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jb jl xchg add int3 rcl fneni(8087 add in icebp idiv add add adc das xor add push pop pop arpl jae jns orl test mov mov xlat fsub out lock add pop and cs ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov rcl fsub out icebp idiv add or adc sub xor dec push pop pop imul lea add xchg pushf mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound push (bad) xchg stos mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa imul addb movsb test mov (bad) jecxz out add stc incb or adc sbb add inc dec add pop popa data16 jno jnp add mov mov aam (bad) jmp add or daa sub cmp dec push push pop pusha gs je jg mov test add leave into rcr fsubp call add or pop sbb sub xor cmp inc dec push push pop pusha gs je jg mov test mov add add add rcl fndisi(8087 out lock add pop and das xor ds dec dec push pop pop bound add jge xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop pusha gs jne jg mov test mov mov rcl fucom out repnz adc sbb daa sub cmp dec push push add imul jg mov nop xchg lcall mov fcomp jecxz in repz std add or pop sbb sub xor dec push pop pop imul lea lods mov add xlat fsub out icebp idiv add or push sbb and cmp dec dec push pop pop imul mov lods mov mov add fneni(8087 out lock add pop and das xor ds dec dec push pop pop arpl jb add mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov rcl fcmovu in out hlt stc incl or adc das xor ds dec dec push pop pop bound add imul lea test mov mov xlat fsub out lock add or adc das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov rcl add loopne jmp cmc cli incl pop and das xor ds add push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop bound jno jl xchg mov stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa imul addb movsb test ret enter add jecxz in repz std add or add sbb aaa cmp inc dec push push pop popa imul jl xchg mov add (bad) aam (bad) jmp add or sub inc dec push push pop popa imul addb movsb test ret enter (bad) jecxz jmp add push adc sbb cmp add bound jno jl xchg movsl stos scas mov mov (bad) jecxz in repnz std add or pop add sbb daa sub cmp dec push push pop pusha gs je jg mov movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) jmp incl unpcklps push and sub xor aas inc dec dec push pop pop bound jb jl add mov add (bad) lret rcl fneni(8087 in out cmc cli incl push adc push and xor ds dec dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp add out hlt add incl push and xor ds dec dec push pop pop bound push (bad) xchg stos mov mov aam fsubp jmp add or sub cmp add add dec push push pop pop gs je jle mov add ret rcl fsub out icebp idiv add or adc das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) jmp incl unpcklps push and sub inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov int3 rcl fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jae jge xchg stos mov mov aad (bad) jmp incl add pop and das xor ds dec dec push pop pop arpl add jge mov cmpsl lods mov mov aad (bad) ljmp push adc push and xor cmp pop pop add insl jb jl xchg stos mov mov rol rcl fneni(8087 in out cmc cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp or adc das xor aas add dec push pop pop gs je jg mov movsb test ret leave into roll (bad) in out add add stc incb or adc sbb aaa cmp push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp or adc sub xor dec push pop pop fs jne jg add movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg add stos mov mov rcl fneni(8087 in lock cli add pop and cs ds dec dec push pop pop arpl jb jge mov lods mov mov (bad) in out hlt stc incb or adc push and add xor aas inc dec dec push pop pop add jne addb movsl stos mov mov rcl fneni(8087 out lock add pop or push sbb es add xor cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub add cmp add push pop pop bound jb jge xchg lods mov mov rcl fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov add aam fsubp jmp incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add popa data16 jno jnp xchg mov mov (bad) fndisi(8087 out add idiv add or push sbb add sub aaa cmp inc dec push push pop popa data16 add jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push add add jne addb movsl stos scas mov mov add loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom call add add pop sbb and sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop imul mov test mov fcmovu in out hlt cli incl lldt das xor dec push push pop pusha gs jne jg mov add movsb test (bad) leave into rcr fsubp call add push adc sbb cmp push pop bound jb add mov mov scas mov mov fcomp loop in repnz adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas add add push push pop pop gs jne jg mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg cmpsl lods mov mov add fucom out repnz add or pop sbb daa sub add cmp push pop bound insl jae jge mov test mov mov xlat add loope in icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb mov mov rol rcl fneni(8087 out lock sti add add sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound push js orl cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test rol iret aad (bad) ljmp or adc das xor aas inc dec dec push add gs jne jg mov nop xchg fwait mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add (bad) jecxz out repz std add or sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg add movsl stos add scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fildl loop in icebp idiv add or push add aaa cmp inc dec push push pop popa imul jge xchg lods add int xlat fsub out icebp idiv add or push sbb sub cmp add dec push push pop pusha gs jne jg mov test (bad) leave into rcr fiadd in out add cli incl pop and das xor aas inc dec dec push pop pop add je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl add lret rcl fneni(8087 add in lock cli add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub inc dec dec push pop pop bound jb jl xchg test mov mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul add add fwait mov mov aad (bad) ljmp or add sbb sub cmp dec push push pop pusha gs jne jg xchg movsl stos scas mov rol iret aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov rcr fucom out repnz add or pop add add daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push add aas inc dec dec push pop add push je jg mov test mov fcmovu in out add cli add pop and aas inc dec dec push pop pop imul mov lods mov mov rcl fucom call add or pop sbb add sub inc dec dec push pop pop bound jb jge xchg test mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in add cmc cli add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add adc pop and cs ds dec add pop pop imul mov test (bad) leave into aam fsubp add out hlt stc incb or adc add and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add idiv add and aas inc dec add pop add insb jno jnp xchg movsl stos mov mov rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop popa imul addb add nop xchg lcall mov fcmovu in out hlt stc incb or adc push and xor cmp pop pop bound outsb jae jge mov add ret rcl fsub out icebp idiv add pop or daa sub aaa add pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and add xor ds dec dec push pop pop arpl outsl je add lcall mov fcomp jecxz add hlt stc incb push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps pop and das add push push pop pop gs je jg mov test add add enter fucom call add or pop sbb es cmp dec push push pop pusha imul addb mov mov rcl fneni(8087 out lock sti add pop add sub xor dec push add imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push add pop bound jb jl xchg lea test ret leave into rcr fsubp call add add adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc dec dec add pop gs jne jg mov test ret leave into rcr fucom call add add std add or daa sub ss inc dec push push pop popa imul addb movsl add vaddsubps fnop add jmp idiv add pop and aas add push push pop pop gs je jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg add add add add ret enter fucom out repnz add or push sbb add aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound add jle mov test mov mov xlat fsub out icebp idiv add or push sbb add add sub xor push push pop pop gs je jg mov test ret add iret aam (bad) jmp add pop and das xor ds dec dec push pop pop add je jle mov movsb test (bad) leave iret aam fsubp jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov add add add rcl add loop in repnz add or push sbb sub cmp add pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop add add push je jg mov test mov mov fcomp jecxz jmp add push adc sbb xor ds dec dec push pop pop bound jb jl orl cmpsl lods mov mov rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp add out add hlt add add pop and das xor aas inc dec dec push pop pop arpl push je jg mov test mov mov fcomp loop in repnz std add or daa sub ss inc dec push push pop pusha imul addb movsl stos add lret fcmovu in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge xchg xchg xchg pushf mov mov (bad) fndisi(8087 out lock add pop or push sbb sub cmp inc inc dec push push pop pusha imul addb mov mov add fneni(8087 in out cmc cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop or add sbb sub inc dec push push pop popa imul addb mov stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fsub out icebp idiv add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test add enter fucom call add or and xor cmp push add push (bad) mov cmpsl lods mov add xlat fsub out add clc std add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or and add dec push pop pop imul mov test ret enter fucom call add or pop sbb es aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock add cli incl pop and das xor add inc dec push push pop pop fs je jp test movsb test (bad) leave into roll fcmovu in out hlt stc incb or unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec add pop bound jb jl add xchg stos mov mov rcl fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop or pop sbb daa sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or add add sub inc dec push push add insl jb jge xchg test mov mov xlat fsub out icebp add cld add or pop sbb add inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aad (bad) jmp add push adc push and sub dec dec push push add push jg mov test mov mov rcr add jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push add das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push add add imul mov stos scas add iret aam (bad) jmp add push add pop and xor inc inc dec push push pop pusha imul addb stos mov mov (bad) add loop in icebp idiv add or xor inc dec push pop popa imul sahf movsl lods mov (bad) int3 add fucom in hlt cld add adc and xor inc dec push pop popa imul add jno orb mov (bad) into aad in add sti add or and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push add imul addb mov add aad fsub out icebp idiv add or adc add add xor push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push push pop bound jb jge xchg mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb and xor cmp inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul jl xchg cmpsb stos mov mov rcl add loop in icebp testl adc and ss push pop bound jb add (bad) xchg lods mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push pop pusha imul addb movsl stos mov mov rcl fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add add and inc inc dec add pop popa imul ja (bad) xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov ret rcl fucom out repnz adc sbb and xor cmp inc dec dec push pop pop imul mov mov add mov rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov rcr fsubp call add push adc sbb cmp pop pop add insl jb add mov movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add jmp add unpcklps pop and sub xor dec push push pop pusha add jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add or adc xor cmp dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and add dec dec push push pop bound jb jl xchg lods mov mov xlat fsub add out repz incb or sub xor ds dec dec push pop pop arpl jae jle mov test mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl lldt das xor push push add imul jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp add inc inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or add sbb aaa cmp push pop popa insb jb jl xchg lods mov mov (bad) add loop out repnz adc sbb aaa cmp push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub ss inc inc dec push push pop bound jb jl add add add lret fnop in out cmc sti add and aas inc dec dec push pop pop gs jne jg test movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge add movsb test (bad) leave into rcr fsubp jmp add push adc push and xor add push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt stc incb or adc add xor push push pop pusha gs jne jg mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul test movsb stos scas add add xlat fsub out add idiv add or pop sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov (bad) lret rcl fneni(8087 in lock sti add and aas inc dec dec push pop pop gs jne jg mov test rol rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop fs jo jnp test movsl stos mov mov aad loopne ljmp unpckhps pop and das add push add popa add jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop fs je jg mov movsl stos scas mov mov fiaddl loopne jmp testb add or pop add aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add push or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad add out lock sti add or push sbb sub xor push push pop pusha gs jne addb mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop add imul add pushf mov add rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) fneni(8087 in lock cli add sbb add sub add push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov rcl fneni(8087 out lock add or adc xor push push pop pusha imul addb mov mov rol rcl fsub add out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp or adc xor cmp dec add pop bound add jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl add add xchg stos mov mov aad loopne ljmp unpckhps pop and cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp or push sbb and inc inc dec push push pop pop gs jne addb movsl stos scas add rolb xlat fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps sbb and inc inc dec push push pop add imul jl xchg test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop add insb jno jnp xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or push add aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) faddl loop in repnz add or sub inc dec push push pop bound add add jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp inc dec push push pop bound jno jl xchg lea test ret add iret aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add add or pop sbb daa sub ss inc dec push push pop popa imul addb mov mov (bad) fsub out icebp idiv add or push sbb sub cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add add pop sbb daa add dec dec push push pop bound jb jl xchg add add cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jno jl xchg cmpsb stos mov mov rol add fcomp jecxz in add stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub add push pop pop bound jb jge mov cmpsl lods mov mov rcr fucom call add or sub xor ds dec dec push pop pop arpl add test movsb test (bad) leave into aam fsubp jmp add push adc push and cs cmp inc dec dec push add imul addb movsl stos mov mov aad loopne add add out cmc sti add and inc inc dec push push pop pusha imul addb mov mov (bad) fneni(8087 add in icebp idiv add or and xor inc dec dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jb jl xchg add xchg xchg pushf mov mov aad (bad) add lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop add je jle test movsb test ret enter (bad) jmp add push adc sbb sub xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov rcl fsub out lock add sbb add sub ss add push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov add add (bad) in out repz incb add unpcklps push and xor cmp push pop bound jb jge xchg stos mov add fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae add mov movsb test (bad) leave into aam fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fildl loope in icebp idiv add or push sbb add sub aaa cmp inc inc dec push pop pop add je jle mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad add out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov movsl stos mov mov rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb add add scas mov mov fcmovu in out hlt cli incl or adc xor add pop pusha add jl xchg lea lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das add add aas inc dec add pop pop gs je jg mov test ret leave into aam fsubp jmp add or adc pop and das xor ds dec dec push pop pop imul mov lods mov mov rcr fsubp jmp incl pop and das xor dec push pop pop imul mov mov mov add add (bad) in out hlt stc incl push adc push and add aas inc dec dec push pop pop imul mov movsl stos mov mov rol rcl fneni(8087 in lock add or push sbb and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound add add jns orl test mov mov fcomp loop in repnz add or daa sub inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp add std add or add push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock add adc xor dec push add imul addb mov add add loop in repnz add or pop sbb daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor dec push pop pop fs je jg mov movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push add gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc add and das xor dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor push push pop pop gs je jg test movsl stos mov mov rcl fneni(8087 add in icebp idiv add pop or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret add iret aam (bad) add out hlt cli incl unpcklps push and cs ds dec dec push pop pop arpl jae jle test movsb test ret leave into rcr fsubp call add or sub add push pop pop arpl imul (bad) xchg cltd sahf movsb test (bad) leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg add lea add enter fucom out add clc incb or push adc push and add xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fsub out add idiv add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb add int3 rcl fndisi(8087 out lock add or adc xor dec push pop pop fs jo jp test mov mov aad loopne ljmp adc das xor dec push pop pop imul mov scas mov mov add add into add (bad) in out hlt stc incb unpcklps sbb and cmp dec push add popa imul addb scas mov mov fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb and sub aaa cmp inc dec push push pop popa data16 insb jno jnp xchg cmpsb stos mov mov aad fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or or sub dec add pop pop arpl push je jg add cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc push and xor ds dec add pop pop imul mov add add enter fucom call add or adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp call incl push adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub xor cmp add pop pop bound jb jns orl movsb test mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp push pop bound jno js (bad) mov cmpsl lods mov mov xlat fsub out add icebp idiv add or push sbb sub xor cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock cld add or add sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push add gs jne jg add mov add add loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul (bad) xchg cltd add mov aam (bad) jmp add push adc push and add add xor ds dec dec push add imul (bad) xchg lcall mov (bad) in out hlt stc incb or adc add and das xor add dec push push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle test movsb stos scas mov mov add add rcl fnop add jmp idiv add pop or pop sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pusha add add add jne addb mov stos mov mov (bad) fsub out icebp idiv add or push sbb and inc inc add push pop popa data16 jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos add int3 rcl fneni(8087 out lock cld add add add or adc sbb daa sub xor cmp push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out add clc std add or daa sub aaa cmp inc dec push push pop popa imul addb add add mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl outsb je jle mov (bad) xchg cltd lahf movsb test ret leave into rcr fsubp jmp add push adc push and sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov rcl fneni(8087 in lock add sbb sub xor add ss inc dec add pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add or adc sbb sub cmp dec push push pop pusha gs jne jg mov test ret add iret add add (bad) in out repz incb or adc push and xor cmp push pop bound jb jl xchg lea add (bad) int xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call incb or adc push and sub inc dec add pop pop add add add add add outsl jne jg mov test ret enter fucom call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and add xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub add in repnz std add add or daa sub aaa cmp inc dec push push pop popa imul addb movsl add movb rcl fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test ret enter fucom call add add daa sub inc dec add pop bound outsb jae jle mov mov add cltd sahf mov mov fcomp loop out idiv push or push sbb sub xor dec push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec add pusha gs je jg mov test mov mov xlat fsub out icebp idiv add add pop sbb sub cmp inc inc dec push push pop pusha gs jne jg mov test ret enter fcmovu in add idiv add or sub inc dec push pop imul (bad) xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp inc inc dec push push pop popa insb jno jl add add add leave into aam fiadd add jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle test movsb test ret enter ljmp pop popa imul addb movsl stos mov mov aam fild add add ljmp unpcklps push and xor ds dec dec push pop pop bound jae jge mov mov mov (bad) jecxz in repz incl unpcklps push and xor ds dec push pop bound ja test add aad in in hlt sti add adc push es push push pop insw jne addl xchg lcall lret rcr loop repnz add add ltr and cs bound js orl lret loope lock add movhps and dec push pop popa push mov mov loop repnz add adc pop daa das aaa ds dec push pop insw jne test mov in cmc cli incl and aas inc dec dec push pop pop fs je jg mov add lahf movsb stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds add push pop pop imul mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and sub xor cmp inc dec push push add push (bad) xchg cmpsl lods mov mov rcr fsubp call add or sub xor cmp inc dec dec push pop pop imul mov stos scas add rcl fneni(8087 in lock sti add and inc inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fadds add jecxz out repz incb or sub dec dec push pop pop bound add jle mov test mov mov aam fsubp jmp add push adc push and xor ds dec dec add pusha gs jne addb mov stos mov mov aad loopne jmp cmc add add or push sbb sub cmp dec push push pop add insb jno jl xchg add (bad) int xlat add jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or sbb inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz add or pop sbb add add sub aaa cmp inc dec push push pop pusha gs jne jg mov movsl stos scas mov mov (bad) jecxz in repz incb or adc sbb cmp push pop popa data16 jno jl (bad) add mov mov rcl fsub out icebp idiv add or push sbb add sub ss inc dec push push pop pusha gs jne jg add movsl stos scas mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out lock add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop arpl jb jge xchg stos mov mov rol rcl fndisi(8087 out lock sti add sbb and aas inc dec dec push pop pop imul mov xchg add mov mov aam (bad) jmp add or daa sub inc inc dec push push pop bound jb jl xchg cmpsl lods mov mov add add add fneni(8087 add jmp cmc sti add sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jle lea add enter fucom out repnz incb or sub inc dec dec push pop pop arpl insl jae jge mov mov mov fcomp jecxz in repnz add add push adc add and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push add arpl jae jle mov test mov mov xlat add jecxz out repz std add or sub inc dec push push pop bound jb jl xchg test mov mov add fcmovu in out hlt cli incl unpcklps pop and xor ds dec dec push pop pop arpl jae jns test movsb test add lret fcmovu in lock cli incl sbb sub xor push add popa imul addl add add add mov mov (bad) fsub out icebp idiv add or add sbb es add cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jbe (bad) xchg cmpsl lods mov mov xlat fsub out icebp add std add or daa sub add aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos add int3 rcl faddl loop add hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov movsb test ret leave into rcr add jmp add push adc push and add xor ds dec dec push pop pop bound add jge mov cmpsl lods mov mov add int xlat fsub out repnz add or push sbb sub xor cmp inc dec add pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp add mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fsub out add testl adc sbb aaa cmp push pop popa data16 jno jnp xchg mov mov aad (bad) add lock sti add pop and cmp dec dec push pop pop fs je jp test movsb test ret leave into add (bad) add add in out hlt stc incb unpcklps pop and cs cmp inc dec dec push add imul addb movsb stos scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov nop xchg fwait mov mov aam (bad) jmp add or and xor ds dec dec push pop pop bound jb add jl xchg stos mov mov rcl fndisi(8087 out lock add pop or daa sub aaa cmp inc dec push push pop pusha imul addb movsb add (bad) leave iret aam fsubp jmp incl push adc push and xor add dec push pop pop fs je jg add movsl stos mov mov aam fild in lock cli incl add or adc pop and cs aas inc add push pop pop add jne jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop popa imul addb mov mov aam (bad) jmp add push adc push add xor ds dec dec push pop pop arpl jae jge mov mov mov (bad) add loop in icebp idiv add add add sbb aaa cmp pop pop bound jb jge xchg lods mov add fcomp loop in repz std add or adc push and das xor inc inc dec push add popa insb jb jge mov movsb stos scas mov mov (bad) jecxz out repz incb push adc push and sub xor cmp push add push jle mov test mov mov xlat fsub out icebp idiv add sub cmp dec push push pop bound jb jge xchg lods mov mov rcr fucom call add or daa sub inc dec push add arpl jae jle mov stos mov mov (bad) in out add hlt stc incl push adc sub ss inc add add arpl jae jle mov test (bad) leave iret aam fsubp jmp incl unpcklps pop and das xor aas inc add push pop pusha gs jne jg mov scas mov rol rcl fnop add jmp idiv add or push sbb and add dec push push pop pusha imul jg mov (bad) xchg lcall mov rcl fsub out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz add add push adc push and sub dec dec push push pop bound jb jl (bad) mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc add das xor dec push push pop pop add add addl mov rol iret aad (bad) jmp add push adc sbb and aas inc dec dec push pop pop add jo jp test movsl stos add lret rcl fneni(8087 in lock sti add or push sbb and inc inc dec add pop pusha imul addb movsb test add mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl sbb sub xor push push pop pusha imul addb mov mov aad (bad) ljmp push adc push and cs aas inc add add push pop pop fs je jp add mov mov (bad) fneni(8087 in lock cli add pop and cmp dec push push pop pusha gs add addb cmpsb stos mov mov rcl fndisi(8087 out icebp idiv pop or sub inc dec dec push pop pop arpl jae jle mov test mov mov rcr fiadd add jecxz in repz std add or sub inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov mov mov fcomp loop in repnz std add or daa sub aaa cmp inc inc dec push pop pop bound jb jge add xchg lods mov mov rcl fucom out repnz add or and aas inc dec dec push pop pop gs je jg add mov lods mov add aam fsubp jmp add push adc push and sub dec dec push pop add push orl test mov mov fcomp loop jmp add or add adc sbb cmp add arpl jae jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg stos mov add fsub out icebp idiv add or push sbb sub cmp dec push push add insb jno jnp xchg cmpsb stos mov add add rcl fildl loope in icebp idiv add or push sbb and sub xor cmp pop pop bound jb jge xchg add (bad) leave iret add add loope jmp idiv add or push sbb sub cmp dec push push pop insl jb add mov test mov mov (bad) in out hlt stc incb or adc das xor aas inc add push pop pop imul mov stos mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne jg mov test (bad) lret flds loopne in icebp idiv add or push sbb es cmp dec push push pop pusha imul add pushf mov mov fcomp jecxz in add clc std add or adc push and xor ds add push add imul addl mov rol add aam fsubp jmp add pop or pop sbb daa sub ss inc dec push push pop popa imul addl mov mov (bad) fneni(8087 out lock add or push sbb add aaa cmp inc dec push push pop popa insb jb jle add add add (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl mov test mov mov (bad) jecxz out repz incb or add pop and das xor aas inc dec dec push pop pop imul mov add iret aam (bad) jmp add unpcklps push and cmp inc dec push push pop popa imul jl xchg lea lods mov mov xlat fucom out repnz push adc push and add add cmp dec push push pop bound jae jge mov test mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop add push jne jg mov test lds add lret (bad) fneni(8087 out lock add and aas inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and cmp dec push push pop pusha imul addb movsl stos mov mov add (bad) jmp add unpcklps push and cs ds dec dec push pop add push add outsl jne jg mov cmpsb stos add int xlat fucom out repnz add or pop sbb add xor ds dec dec add pop pusha imul addb cmpsb stos mov mov aad loopne jmp add cld add or push sbb daa sub aaa cmp inc dec push push pop bound jae jge test movsb test (bad) aad loopne jmp add incb add add push adc push and xor inc dec dec push pop popa imul mov mov fcomp jecxz in repz std add or daa sub aaa cmp dec dec push pop pop imul add pushf mov mov (bad) fsub out icebp idiv add or push sbb and sub ss inc dec push push pop popa data16 jno jnp xchg add rol int3 rcl fsub add in repnz incb or adc push and sub dec dec push push pop bound add je jg mov mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp push pop pusha imul addb movsl stos mov mov rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec dec push pop pop add add insl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb add rol rcl fsub out icebp idiv add or pop sbb sub aaa cmp inc add push pop bound jb jl xchg stos mov mov rcr fucom call add add add add das xor aas inc dec dec push pop pop imul mov add mov mov int fcomp jecxz in repnz std add or sub dec dec push pop pop bound imul mov scas mov mov fcomp jecxz in add stc incb or adc push and xor ds dec dec push pop pop add jae jle mov add mov mov fcomp loop in repnz add or sub dec dec push pop pop imul addl (bad) lret rcl add in out hlt stc incl unpcklps and xor cmp inc dec push push pop popa imul addb mov mov rol rcl fndisi(8087 out lock sti add sbb sub xor push add popa add jb jge (bad) xchg lcall mov loope add out cli add or pop sbb and sub xor aas inc dec dec push pop pop gs jne jg mov mov mov xlat fsub ljmp pop sbb daa sub dec dec pop pusha outsb add xchg mov (bad) fsubp in hlt sti add adc sbb sub cmp push pop bound js mov mov (bad) into (bad) fsubp out cmc std add adc and xor inc dec push push pusha push (bad) xchg lahf cmpsl scas mov (bad) into (bad) fucom in hlt sti add adc add sub cmp push pop pusha push mov mov xlat fsub out add clc incb sub xor aas inc dec dec push pop popa imul mov mov mov fcomp add jmp add add cmc sti add and inc inc dec push add push pop bound jno jl add sahf mov mov xlat fucom out repnz add or push sbb add sub inc dec push push pop bound jno jl xchg stos add int3 rcl fneni(8087 out lock sti add add daa sub aaa cmp push pop bound jb jge add (bad) mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge add mov mov fcomp loop in repnz add or sub cs inc dec dec push pop pusha outsb jae jle mov test mov add (bad) jmp add adc add sub xor add add add push pop pop gs je orl lods mov ret lret rcr loop add add add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl mov ror fadds loop repnz add adc and xor inc dec push pop bound jp mov mov ret lret rcr jecxz repz add adc and xor inc dec push add insl jne test mov in repz add add or sbb sub cmp dec push pop fs je test mov in cmc std add sub cmp dec push pop gs add xchg mov (bad) iret xlat (bad) out idiv push push push push es dec push pop add js mov mov loopne lock add adc and add aaa ds dec push pop arpl jp add lods mov vpmullw in add hlt cld add adc and xor inc add dec push pop bound jns mov xchg add mov loop lock incl or xor inc dec push pop pop data16 jge mov rol xlat (bad) out idiv pop push push sbb cmp fs jae (bad) mov mov (bad) aam loop icebp clc incl or xor inc dec push pop pusha push lea xchg pushf mov enter (bad) ljmp adc pop and inc inc dec dec push pop pop outsb je jg add test leave into aam loope out repz incb push adc pop and das xor cmp dec push push pop pusha gs jne jg mov stos mov mov rcl fsub out icebp idiv add pop or and sub dec dec push pop add insl jb jge add movsb test mov (bad) fucom in icebp idiv add or pop sbb daa cs push pop pusha add jno jl xchg lods mov mov fsub out cmc add add adc sbb sub cmp dec push push pop pusha imul jl mov mov (bad) int3 rcr loop icebp stc add adc pop daa cs add add add add imul mov mov loopne lock add movhps sub aaa aas dec push pop pusha imul lcall rcr jecxz repz add adc and xor inc dec push pop bound insb jae orl mov (bad) into aad in movshdup es push pop pusha push (bad) xchg add mov in cmc std add sub cmp add add push add pop popa push mov scas mov (bad) into (bad) fucom in cmc cld add adc and xor inc dec push pop bound jp add mov ror (bad) fucom in hlt cld add adc and xor inc dec add popa imul popf movsl lods mov mov (bad) add loop in cmc std add or sub dec push push pop bound jb jl mov add add vaddsubps fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push add push xchg test ret int3 aam fsubp jmp clc incb or push adc push and xor ds dec dec push pop pop arpl js orl test mov fcomp loop call incb or sbb sub aaa aas inc dec push pop gs je orl add add mov faddl in cmc cld add adc and xor inc dec push pop arpl jnp mov mov fucom in hlt cld add adc and xor pop gs jne test scas mov (bad) iret xlat (bad) out idiv pop movhps daa das aaa aas add pop popa imul mov enter call movhps daa das aaa aas inc dec push pop outsl add xchg mov (bad) into (bad) fsubp out idiv push push push push es dec push add outsl js xchg mov (bad) lock add adc and xor inc dec add bound jp mov mov loop repnz add adc sbb sub cmp push pop arpl add add mov out idiv push movhps daa das aaa add inc dec push add imul xchg fwait mov lret aam jecxz repz add adc sub cmp push pop pop outsl add mov mov (bad) iret xlat (bad) out idiv pop movhps es pop pusha push mov mov lret loope ljmp and xor inc dec push pop popa imul mov leave rcr loope icebp stc add adc and xor add inc dec push pop popa push nop cwtl mov leave rcr loopne lock add or sbb sub cmp push pop popa imul mov leave rcr loope add sti add adc and xor inc dec push pop bound jns mov add loop repnz add adc sbb sub xor pop fs je orl mov add in cmc incb push push add add cmp push pop pusha push xchg cltd mov leave rcr loope icebp stc add adc sbb sub cmp dec push pop gs jae (bad) mov mov (bad) add in hlt cld add adc and xor inc dec push pop popa imul cwtl mov (bad) iret (bad) fsubp in cmc cld add adc and sub inc dec push push pop bound jno jge mov add add rcr loope jmp stc add pop and sub xor dec push pop pop fs je jg mov test les lret rcl fnop in lock cli incl and aas inc dec add pop pusha imul addb add mov xlat fsub out icebp idiv add or add sbb and xor add dec push push pop pop gs jne jg mov stos scas mov mov (bad) add jmp cmc sti add and inc inc dec push pop pop gs add addb movsl lods mov mov loop in add clc incb or adc sbb aaa ds dec push push pop imul test stos scas mov mov (bad) jmp adc pop add das ss dec push pop fs je orl mov ror fchs call movhps es aaa aas inc dec push pop data16 jbe test scas mov (bad) into (bad) fsubp out idiv push push push sbb inc dec push add jo addb mov ror add loope repnz add adc and xor inc dec push pop popa imul xchg pushf movsb lods mov les into add (bad) add add idiv pop movhps daa das cmp dec push push pop data16 jne test mov mov loope out idiv push push push push es pop arpl jns (bad) mov xlat (bad) out cmc cld add adc and xor add push pop arpl jp mov mov mov xlat fsub out hlt cld add push adc push and sub dec dec push pop bound jb jl xchg lea mov rol rcr add out lock add pop and aas inc dec dec push pop pop arpl jae add mov test mov mov fucom call add or adc and sub dec add add jo jp test movsl stos mov mov add (bad) in icebp clc add or add add daa sub aaa cmp add add push push pop imul mov mov (bad) into (bad) fldl out cmc std add sub cmp push pop bound jns mov mov ret lret rcr jecxz repz add adc and xor inc dec push add insl jne test mov in cmc std add sub push pop gs je test mov jecxz repz add adc and add add xor inc dec push pop arpl je test mov in repz add adc and xor inc dec push pop add jb (bad) mov mov loop repnz add adc and sub cmp push pop arpl jnp add mov (bad) fchs in repz add adc and xor inc add dec push pop arpl jnp mov xchg add (bad) iret xlat fsubp out add add incl push push push es dec push pop data16 jbe add scas mov (bad) out idiv pop movhps daa das aaa aas inc dec add push nop cwtl mov enter out testl and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) iret xlat (bad) out idiv pop movhps es dec push pop data16 jne xchg mov (bad) int fucom in cmc std add es dec push pop data16 jbe xchg mov vpmullw in cmc std add movhps daa cs dec push pop data16 jbe xchg mov movb xlat (bad) out idiv pop movhps daa add cmp dec push pop popa imul mov leave rcr loop add hlt cld add adc and xor cmp pop data16 jbe xchg mov add in hlt std add add ss dec push pop data16 jne test mov (bad) int3 aam in cmc add push push push push and dec push pop gs jne test scas mov (bad) into (bad) fsubp out idiv push push push push es dec push pop outsl ja xchg mov (bad) int fucom in repz add sbb sub cmp push pop popa imul mov add scas add fsub ljmp push and dec dec push pop gs jae orl (bad) int3 rcr loop icebp stc add adc and das aaa ds add pop fs je (bad) mov mov add in repz add adc pop es push add pop popa imul add mov mov (bad) out repnz add or push sbb sub cmp inc dec push push pop imul orl stos scas mov mov add (bad) ljmp unpcklps push and xor ds add push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsubp in add and sub inc dec push pop pop insb jno jl xchg stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha add jo jnp xchg movsl stos mov mov aam (bad) add lock cli add adc and test jmp or pusha imul mov (bad) int3 aam in cmc std add and xor inc dec add arpl jp mov mov vpaddq jecxz add repnz add or sbb sub cmp dec push pop arpl jl mov ret lret loop repnz add adc and xor inc inc dec push pop data16 jne test scas mov (bad) iret xlat fucomip lock add or sbb sub cmp add bound jnp mov mov fsubp out idiv pop movhps add xor inc dec push pop popa imul lahf cmpsb lods mov add lret rcr loop icebp stc add movhps daa das aaa aas dec dec push pop insw jne test mov ret lret rcr loope icebp stc add movhps and dec add popa imul popf movsl lods mov (bad) int3 aam jecxz repnz add adc and xor add push pop pusha outsb jne test lods mov ret add aam jecxz repnz add adc and xor inc dec push pop pusha outsb jbe mov roll rcr loopne out idiv push push push sbb inc dec push pop arpl jp mov mov (bad) iret (bad) fsubp out cmc std add or xor inc dec push pop bound add xchg fwait mov vpmullw in repz add adc push and inc dec push pop arpl jp add mov ret lret rcr loop repnz add adc and xor aas add push pop arpl jns xchg mov ror xlat fsubp in cmc cld add adc and xor aas inc dec push pop fs jae (bad) mov scas mov (bad) jmp or pop pop es dec push pop gs jne test mov ror fsub out idiv pop push add pop daa cs dec push pop data16 jbe test add ljmp add add add adc and das aaa ds dec push pop gs jne test mov loop repnz add adc pop daa das aaa aas inc dec pop pop outsl ja xchg mov (bad) int fucom in add incl push push push and dec push pop arpl jae (bad) mov mov (bad) into (bad) loop repnz add adc sbb sub cmp push pop arpl jp mov add add (bad) fsubp in hlt cld add adc and xor inc dec push pop add add orl int add out cmc std add sub cmp inc dec push pop bound jae (bad) mov mov fsub out idiv pop push push push es push pop arpl jns add scas mov vpaddq in hlt cld add adc and sub cmp gs jne test lea mov jecxz repnz add adc and xor inc dec push pop pop outsl jbe test mov ret lret loope lock add adc pop es dec push pop add jne test mov ret fiaddl jecxz hlt sti add adc and xor inc inc dec push pop data16 jbe add scas mov vpaddq in repz add adc add sub cmp push pop add add jno orb mov movb xlat add call adc and xor inc dec add popa imul mov mov add out idiv add sub xor pop outsl ja xchg mov (bad) iret xlat (bad) in cmc std add or xor inc dec push pop popa imul sahf add iret xlat fsubp out cmc std add adc add sub cmp push pop popa push (bad) xchg sahf cmpsb scas mov vpmullw in repnz add adc and xor inc dec dec push pop data16 jbe test mov ret lret roll fsub ljmp pop daa cs dec add gs jne test mov in cmc add pop movhps daa das aaa ds push pop pusha push xchg fwait add aam in cmc std add cs dec add add jns mov mov fsub in hlt cld add sub dec push pop outsl add mov mov (bad) jmp sti add adc and xor inc dec push pop fs je test mov (bad) into (bad) (bad) out idiv pop nop/reserved sub cmp dec push pop bound jp mov mov jecxz add hlt cld add adc and xor pop gs jne test mov loope icebp stc add adc and xor inc dec push pop popa imul pushf movsb lods mov vpmullw in cmc std push push push add sub cmp push pop pusha push xchg cltd mov add rcr jecxz hlt cld add adc and xor inc dec push pop add jg (bad) xchg lahf cmpsl scas mov (bad) iret xlat loopne add lock add adc add sub xor inc dec push pop fs je test mov (bad) iret xlat loopne icebp clc add add sbb sub cmp inc dec push pop fs je test mov (bad) rcr loopne lock add adc and xor inc dec push pop bound imul mov mov in hlt cld add add push es dec push pop data16 ja xchg mov (bad) iret xlat (bad) lock add adc and xor inc dec push pop pusha push xchg cltd mov lret loop repnz add adc and xor inc dec push pop add jne test mov (bad) iret (bad) fild call adc and xor inc dec push pop popa imul fwait mov lret rcr jecxz repz push push push es add inc dec push pop pusha push nop cwtl mov leave roll fabs add repz add adc and dec push pop data16 jg (bad) xchg lahf cmpsl scas mov (bad) jmp or sbb sub cmp dec push add outsb ja xchg mov loopne lock incl or das aaa aas inc push pop pusha push nop cltd mov leave roll fninit jmp sti add adc and xor inc dec push pop fs je test mov add mov out idiv push push push push xor inc dec push pop popa imul mov ret lret rcr jecxz repz add sbb sub cmp dec push pop gs jne test mov (bad) into (bad) fsubp out idiv push push push push es dec push pop data16 jbe xchg mov (bad) iret xlat fild jmp adc sbb sub cmp dec push pop fs je test scas mov add out testl sbb sub cmp push pop arpl jnp mov mov in hlt cld add adc cmp outsl js mov mov fabs ljmp and xor inc dec push pop bound add xchg popf movsl lods mov vpmullw out idiv push push push push es dec push pop outsl ja xchg mov add ror fabs jmp adc and xor inc dec push pop bound jnp mov xchg pushf movsb lods mov vpmullw in idiv add cs inc dec push pop outsw ja mov mov loopne lock add adc and xor inc dec push pop bound jp mov lds into (bad) fsubp out testb or sbb sub cmp push pop pusha push add mov add ret fiaddl in out idiv push push push push es dec push pop data16 jbe xchg mov (bad) iret xlat (bad) lock add adc and xor inc dec push pop pusha push nop cltd mov ret fninit ljmp push es dec add push nop cltd mov leave rcr loope icebp stc add adc and xor inc dec push pop arpl jnp mov add mov out idiv push push push pop daa das aaa aas inc dec push pop add jnp mov mov fucom in hlt stc incl unpcklps push and das xor ds dec dec push pop pop imul mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc sbb xor ds dec dec push pop pop arpl jae jle mov stos mov rol rolb add add add loop in repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add pop or push sbb sub aaa cmp inc dec push pop popa data16 jno jl (bad) xchg lods mov mov aad loopne out repz std add or sub inc dec push push pop popa insb jno jl add addl mov ret rcl faddl loop in repnz std add or pop sbb aaa cmp inc dec push push pop popa imul addb movsl lods mov ret lret rcr fsubp jmp or adc push and cs ds dec dec push pop pop arpl imul mov lods mov ret rcl fsub out add cld add or daa add cmp inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push add insl jb jl xchg lods mov mov rcl fsub out repnz add or push push and sub dec push pop pop arpl js orl test mov mov xlat fucom out add add add repnz add or push sbb add pop pop data16 jae jle mov test mov mov fcomp loop in repz std add or daa sub dec dec push pop arpl jbe orl test mov mov rcr fldl jecxz out repz incb or adc push and xor add push pop pop imul xchg fwait mov mov loopne lock cli add and inc inc dec dec push pop pop imul mov lods mov add (bad) jecxz out clc add unpckhps and sub aaa add push push pop popa data16 jne addl mov fnclex out hlt cld add or sub dec push pop pusha push test lahf movsb stos mov mov add in lock cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) out lock add and inc inc dec push add bound jb jns orl stos scas mov mov add loopne jmp idiv add or adc sbb aaa ds add pop imul xchg cmpsl lods mov mov (bad) fsub out lock add and inc dec push add bound je orl test lret fsub jmp testb add or sbb daa sub cmp push pop gs jbe test stos mov mov fneni(8087 out hlt cli add adc sbb sub aaa cmp inc dec add push pop pusha insl jb jge mov test lret fneni(8087 in out cmc cli incl pop sbb es cmp dec push push pop pusha imul addb add lret rcr fsubp jmp stc incb or sub ss dec push pop pop gs js test add enter fsubp out hlt sti add push adc das xor aas inc dec push push pop pusha data16 jl xchg scas mov mov aad loopne ljmp add pop sbb daa sub cmp push pop bound jb jl xchg test mov mov fcomp jecxz in repnz std add or das xor push pop pop fs jne addb movsl stos scas mov mov fcmovu in add add out hlt stc incb push adc xor ds dec push pop pop gs je jg mov nop xchg add rol rcr loope in icebp clc add or sub add pop pop add addb scas mov mov xlat (bad) jmp idiv add or push sbb sub aaa add aas inc dec dec push pop pop fs je jg mov movsl stos scas mov mov add add iret aam loope add repz incb or adc push and cs aas inc dec add popa imul xchg cltd add mov aam fsubp jmp add or sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or sub aaa cmp pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or and cs ds dec dec push pop pop imul (bad) xchg cltd sahf add add (bad) lret rcl fndisi(8087 out icebp idiv add pop or daa sub aaa cmp inc dec push push pop popa imul js orl scas mov (bad) int3 rcl fsub out icebp stc incb or push push and add add dec push push pop bound jb jge xchg mov mov loopne add icebp idiv add or sub cmp dec push push pop popa data16 jno jnp add mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha data16 jno jl xchg cmpsb stos mov mov aad loopne add add in repnz add or pop sbb es pop pop add jb addb movsb test (bad) leave into rcr fsubp call add unpcklps add sub ss inc dec push push pop data16 ja (bad) xchg lods mov mov (bad) fildl add call add push adc push and xor inc inc add pop popa data16 jno jl xchg add cltd sahf mov mov (bad) in out add sti add and cmp inc dec push push pop popa imul addl mov rol rcl fucom out hlt cld add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb lods mov mov fsub out repnz add adc sbb daa sub aaa cmp inc dec push add bound jb jl xchg add ret enter fsubp jmp add push adc and cs add imul test movsl stos add lret rcl fneni(8087 in out cmc cli incl pop add sub cmp dec push push pop pusha gs jno jl xchg lea lods mov mov rcr fsubp call add repz std add adc cmp pop pop imul mov stos mov mov (bad) fneni(8087 in lock cli add add sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos scas mov rol iret aad (bad) add lock cld add or push sbb es dec push pop pusha insb jb jl mov movsb test mov (bad) in add cmc cli incl and inc inc dec push pop popa imul jae jge xchg stos scas mov mov add (bad) ljmp unpcklps add and aas inc dec add add add add pop pop fs je add lcall add (bad) aad (bad) ljmp unpcklps pop and cs ds dec dec add imul mov lods mov mov fucom jmp or adc push and xor cmp pop pop bound jb jge mov lods mov mov fcomp jecxz repnz std add or sub add add dec push push pop pusha gs jne jg mov stos scas mov mov (bad) fndisi(8087 out in repnz add or daa add xor ds dec dec push pop pop arpl jae jle mov add rol rcr fsubp call add add adc das xor aas inc dec dec add insl jb jle lea add add add enter fsub out icebp idiv add pop or daa sub cmp dec push pop pop bound jae (bad) xchg mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul (bad) xchg lcall lret fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop add add imul xchg cmpsb stos mov mov aad loopne jmp cmc cli add sbb and cmp inc dec push push pop pusha data16 jl xchg test (bad) int fsub out add repz add pop and add xor dec push push add imul addb movsb stos scas mov mov (bad) jecxz add stc incb or adc push and xor cmp inc dec push push pop pusha imul add fwait mov add fneni(8087 out lock add or add add xor cmp pop popa insb jae addl mov mov xlat fsub out icebp idiv add or push sbb es dec push push pop popa push addl fwait mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul jl xchg cmpsb lods mov mov xlat fsub out icebp idiv add or push sbb es dec dec push pop pop bound imul mov cmpsl lods mov mov fcomp call add adc push and sub inc add dec push push pop bound jb jl xchg stos mov mov xlat fucom out hlt sti add or adc push and cs ds dec dec push pop pop add imul add cwtl popf mov mov fcomp jecxz in repnz add add push adc push and xor ds dec dec push pop pop arpl jae jle mov add (bad) leave iret aam (bad) add out hlt stc incl unpcklps push and xor inc dec push push pop popa push xchg cmpsl lods mov mov rcl fsub out icebp idiv add or adc xor push push pusha imul (bad) xchg cltd lahf movsb test mov aad loope add icebp idiv add or push sbb es cmp dec push push pop pusha imul addl add stos mov mov (bad) fndisi(8087 out lock add add pop sbb es cmp inc dec push push pop bound jb jl xchg test scas mov les lret add loopne jmp cmc sti add pop and aas add push push pop popa imul xchg xchg popf movsb lods mov mov xlat fucom out repnz adc sbb cmp add gs jne orl mov mov (bad) fneni(8087 out lock cli add add sub xor push pop pusha data16 jae addb cmpsl lods mov mov fcomp jecxz out repz incb or adc sbb and sub xor push pop pusha imul mov lods mov mov fcomp loop in repnz add or add add add add xor ds dec dec push pop pop imul nop xchg fwait mov mov aad loopne jmp cmc cli incl add sub xor cmp inc dec dec push push pop popa insb jno jnp xchg movsl add (bad) fsub call push or push sbb sub cmp dec push push pop add imul addb movsl stos scas mov mov add add into rcr fsubp jmp add adc push and das aaa aas inc dec dec push pop pusha data16 jb jns test cmpsb stos mov mov (bad) in out hlt stc incb push adc push and das aaa aas inc dec dec push pop pusha imul jp add add mov (bad) in out hlt stc incb or adc push and cs ds dec dec push pop imul xchg add lcall mov aad loopne ljmp or push sbb sub cmp dec push push pop pusha add insl jb jg mov stos mov rol rcl fnop in lock cli add sbb sub cmp dec push push pop pusha imul addb movsl stos mov add fsub out icebp idiv add or pop sbb daa sub aaa add inc dec push push pop popa insb jno jl xchg stos mov mov rcr fucom out divl inc dec push pop pop outsb jae jle mov stos mov mov fcomp jecxz out repz incb or adc daa add cmp dec add pop bound jne test cmpsb stos mov mov fucom out repnz add push adc xor aas inc dec dec push pop pop add add je jg add movsl stos scas mov mov aad (bad) ljmp adc sub xor add ja jg xchg cltd mov (bad) int fucom jmp stc add lldt pop es push pop arpl jnp mov enter out hlt sti add adc pop daa das aaa aas dec push pusha push (bad) cwtl mov (bad) iret (bad) fsubp in hlt cld add add adc and xor inc dec push pusha push mov mov (bad) rcl (bad) out cmc std add adc cmp pop popa imul mov (bad) fndisi(8087 call add sub dec push pop arpl jg mov stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul add jbe add sahf stos scas mov mov aad (bad) ljmp unpcklps add add ss add pop add jbe test mov (bad) int fsub ljmp push sbb inc dec dec push pop imul mov mov rol aad fsubp in repz add push adc pop and jl xchg mov mov xlat fsub add add in icebp idiv add or push sbb sub xor dec push push pop popa imul test mov mov xlat fucom out repnz add or push sbb sub add inc add push pop bound push (bad) xchg cmpsl scas mov ret aad loop in repnz add or push sbb sub cmp dec push push pop pop fs je addb lcall rol iret aam (bad) jmp add push adc add and xor aas inc dec dec push pop pop imul mov scas mov mov fcomp add jmp incl es dec push pop pop insw jae jle mov test ret enter fucom call add or add xor push pop add add insb jno add xchg lods mov add rcr fucom add out hlt stc incb or adc sbb cmp push add imul xchg lcall ret enter fucom call add or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock idiv add or adc das xor dec push pop pop add outsl jne jg mov test ret enter fucom call add adc sbb aaa add inc dec dec push pop pop arpl je jle mov test mov mov fcomp loop in repnz add or daa sub inc dec push push add push (bad) mov (bad) xchg lcall mov aad add loop in icebp idiv add or adc sbb daa sub aaa cmp inc dec push pop imul mov xchg add mov rcr fucom call add or pop sbb daa sub cmp inc inc dec push pop bound jae jle mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg add (bad) int3 rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs jo add mov lods mov mov fnclex ljmp adc das xor dec push pop pop imul (bad) xchg sahf mov mov flds loopne ljmp sti add pop and ss inc dec push push pop add insb jno jl xchg lods mov mov add (bad) jecxz out repz incb or sub dec dec push pop pop arpl jb jns orl test mov mov fcomp jecxz in repz std add or sub inc dec push pop pop bound jb jle lea add cwtl popf mov mov xlat add jecxz out hlt sti add push adc pop and das xor aas inc dec dec push pop pop arpl jae jge mov add ror aam (bad) ljmp adc pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov flds (bad) ljmp add sbb xor add add add dec push pop pop add data16 jno jl xchg mov mov (bad) fndisi(8087 out lock add add or sub inc dec push pop fs jbe xchg test add int3 rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop imul addb stos mov mov aad loopne ljmp add add add pop and add cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out add cli add push or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc add and cs ds dec add pop add jl mov add mov add (bad) into aad in hlt sti add or sbb sub cmp push pop bound jp mov add fsubp in hlt sti add adc and xor aas inc dec push pop gs jne test mov (bad) into (bad) fsubp in cmc std add sub cmp pop arpl jp mov mov (bad) out idiv push push push sbb inc dec push pop bound jp (bad) mov mov ret lret jecxz repz add adc and xor inc dec push pop pusha push (bad) xchg sahf movsl lods mov les int add in hlt cld add adc and xor inc dec push pop popa imul mov leave rcr loopne out idiv add sub cmp push pop pusha push mov mov fninit add cmc cld add adc and xor add inc dec push pop fs jae (bad) add mov ror fsub call adc and sub xor inc dec push pop arpl jnp mov mov jecxz hlt cld add adc and sub push pop imul mov mov vpmullw in cmc std add sub push pop gs jbe test mov ret fabs jmp movhps add add aaa aas inc dec push pop insw jne test mov ret lret rcr loop repnz add adc and xor inc dec add add jb orl rcr loope lock pop push push push and dec push pop arpl jp mov mov loope lock incl or pop pop es push pop add jge lea mov fabs add add icebp stc add add sbb sub cmp push pop pop outsb jbe xchg scas add (bad) out idiv add sub cmp dec push pop arpl jl mov mov in hlt cld add adc and xor aas inc dec push pop fs jae orl mov loop repnz add adc and xor inc dec push push pop data16 jne test mov add add jecxz repz add adc and xor inc dec push pop arpl jnp mov mov lds iret (bad) add out idiv push push push push es dec push pop outsl jbe xchg mov (bad) into (bad) fsubp out idiv push or xor inc dec push pop pusha push xchg mov movb fsub out icebp stc add adc and xor aas add dec push pop arpl jns mov xchg cltd mov enter out idiv push push push push add add inc inc dec push pop data16 jne test mov (bad) int3 aam in hlt cld add adc and sub cmp dec push pop imul mov mov (bad) int fsub in repz add adc and xor inc dec push pop bound jp mov mov fsubp in cmc cld add adc and sub cmp push pop arpl jp mov mov loop repz add adc and xor dec push pop bound js xchg mov (bad) into (bad) fsubp out idiv pop add sbb sub cmp add bound jp mov add jecxz repnz add adc pop daa das add inc dec push push pusha outsl js mov mov (bad) iret xlat (bad) out idiv push push adc add dec push pop bound jp mov mov (bad) out idiv push push push push es dec push pop gs je test mov ret lret loopne lock push push push sbb inc dec push pop arpl jnp mov mov loope lock incl movhps and dec push pop arpl jnp mov mov add in cmc cld add add add sbb inc dec push pop imul mov mov (bad) out idiv pop movhps sub cmp push pop pusha push nop cwtl mov ror fabs jmp or sbb sub cmp dec push add add jle lea mov fsubp out cmc std add sub cmp gs je test mov loop icebp stc add add or sbb daa das aaa ds dec push pop gs jne test mov loope icebp stc add adc and xor inc dec add pusha push mov mov loop repnz add adc and xor inc dec push pop pusha outsl jbe test mov ret fchs call push push push es inc dec push pop data16 jbe add lods add add add add fsub jmp cli add adc and xor aas dec push pop pusha push nop cwtl lahf movsl scas mov (bad) into (bad) fsubp out idiv add sub cmp dec push pop imul add mov ror (bad) jmp add adc and xor inc dec push pop popa imul xchg lcall rcr loopne lock incl movhps daa cs dec push pop gs je orl add add xlat (bad) out idiv pop movhps daa das aaa aas inc dec push pop outsb jbe test mov ror fadds loop icebp std add sub cmp gs jne test mov (bad) int3 aam jecxz repz add adc and das aaa ds dec push pop gs jne test mov vpmullw in cmc cld add adc add dec add outsl ja xchg add mov enter call movhps es push pop arpl jp mov mov loop add cld add adc and add pop arpl jnp mov lods mov (bad) fsub jmp sti add adc sbb sub cmp push pop bound jnp mov mov loopne lock add movhps daa das ss dec push pop insw jne add lea mov loop repnz add movhps es pop imul mov (bad) int3 aam in hlt cld add adc and xor inc dec push pop pusha outsl jbe xchg mov ret lret rcr loop repnz add adc and xor inc dec push pop arpl jp mov mov fabs jmp or sbb sub cmp dec push bound jns mov mov loop repnz add adc and xor inc dec push pop pusha push mov xchg mov enter loope hlt cli add cmp add add jo jnp xchg cmpsb stos add int3 rcl fsub call add unpcklps pop and inc inc dec push push pop popa insl jb jl xchg lods mov add (bad) fneni(8087 out lock sti add push adc pop daa sub aaa cmp inc dec push push pop popa add jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb es push pop popa push (bad) xchg cmpsl add movl loop in repnz add or push sbb add add cmp inc dec push push pop popa data16 imul addb movsl stos scas mov mov (bad) jecxz in repz std add or add add xor cmp push pop bound jno jl xchg lea lods mov rolb add rcr loopne jmp idiv add pop and aas inc dec dec push pop pop imul nop xchg pushf mov mov fnop in lock cli add push add add add pop sbb sub cmp dec push push pop pusha gs je add lcall (bad) lret rcl fndisi(8087 out icebp idiv add or adc xor dec push pop pop fs je jg mov test (bad) leave add fnop in lock cld add unpcklps push and cs ds dec dec push add add jo jp test movsl stos scas mov mov (bad) in out hlt stc incl unpcklps push and xor ds dec dec push add pusha gs jne jg mov stos scas mov add (bad) aad (bad) ljmp pop or push sbb sub cmp dec push push pop pusha imul (bad) mov lods mov mov xlat fsub out icebp idiv add or push sbb add aaa add add inc dec push pop pusha imul addb test rol iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs jb jge mov mov mov aad loopne jmp cmc sti add sbb add dec dec push pop pop arpl jae jge lea xchg lahf add (bad) lret rcl fneni(8087 out lock scas mov mov aam fsubp jmp add push adc sbb cmp add imul mov lods add aam fsubp add add cmc cli add pop and aas inc dec dec push pop pop imul mov mov mov fnop in out cmc cli incl unpcklps add sub xor cmp inc dec add add pop pusha imul orl movsl stos scas mov ret rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg stos mov mov aad (bad) add lock cli incl or pop push and das aaa cmp push pop popa insb add add mov test mov mov fcomp loop in add repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound add jns orl test mov mov add fsubp call add add add das xor aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa add pop gs je jg mov add add mov mov rcr fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jbe addl mov rol rcl fcmovu in out hlt cli incl unpcklps sbb and cmp dec push push pop pusha gs jne jg mov add rol rcl fndisi(8087 ljmp adc push and sub cmp pop pop bound jb jl xchg add enter fsubp call push or adc sbb es cmp inc add pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jnp add mov mov add rcl fneni(8087 in lock sti add pop and dec push push pop pusha data16 je jle mov test mov mov xlat fsub out icebp idiv add or pop push and das xor ds dec add pop imul mov test mov mov rcr add in out hlt stc incb or adc sbb cmp dec dec push pop pop imul add (bad) xchg stos mov mov add add jecxz in repz std add or daa sub aaa add push pop bound add jp test movsb test (bad) leave into aam fsubp ljmp unpcklps push and xor inc inc dec push push pop fs je jg mov add rol iret aad (bad) ljmp unpckhps add add add and add xor ds dec dec push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and das xor aas inc dec dec push pop pop imul mov movsl stos mov mov aad loopne ljmp pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb scas mov add rol rcr fsubp ljmp add adc sbb and inc inc dec dec push pop pop add jne orl movsl add iret aad (bad) jmp add push adc push and sub inc dec push pop pop bound jb jl xchg stos mov mov add fndisi(8087 add in repnz add or pop sbb daa sub ss inc dec push add push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or pop bound jb jge mov test mov mov rcr fsubp call add or daa cs dec push push add insl jb jl xchg lods mov mov (bad) fneni(8087 out lock add pop and add add xor aas inc dec dec push add popa imul addb movsl stos mov mov rcl fneni(8087 out lock add add or pop sbb es cmp dec push push pop pusha imul jg mov scas mov mov fucom out repnz add or daa add inc dec dec push pop pop arpl jae (bad) xchg cmpsb lods add add add rcl fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fsub out icebp testb add or pop add aaa cmp inc dec push push pop popa data16 jno add add mov mov xlat fucom call push and sub xor cmp pop pop arpl imul add jns orl test mov mov rcr fucom out repnz add push push sbb sub cmp dec push pop pop add add addb movsl stos scas mov mov aad (bad) ljmp push adc sbb and cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub out in icebp idiv add add or push sbb and cmp dec push push pop pop gs jne jg mov lods mov mov fcmovu in out hlt stc incl or adc pop and xor ds dec dec push pop pop arpl jae jge mov stos mov mov (bad) jecxz out hlt stc incb or adc sbb cmp add arpl add addl (bad) xchg cltd sahf movsb test add scas mov mov fcomp loop add repz std add or daa sub aaa cmp inc dec push push pop popa imul add xchg pushf mov mov rcl fsub out icebp idiv add or push sbb daa das add add gs jne jg mov stos scas mov mov (bad) in out hlt cli add or adc sbb cmp add add push pop add insb jno jl xchg stos mov mov aad loope jmp idiv add and add cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec push push pop arpl mov mov roll into rcr add in lock add or push sbb es aaa cmp add push pop pop arpl jae jle mov stos scas mov rol rcl fildl loop add repz std add or sub inc dec dec push pop pop arpl jae jge xchg mov mov aam (bad) jmp push movhps and das xor inc dec dec push pop pop arpl jae jp test movsl stos scas mov mov add vaddsubps fnop in repnz incl and inc dec dec push pop pop imul mov stos scas mov mov fcmovu in out hlt stc incl adc sbb cmp dec push push pop pusha imul addb movsl stos scas mov rol rcl fneni(8087 in add idiv add add and cs inc dec dec push push pop imul add add xchg mov mov xlat fsub out repnz add or push sbb sub xor cmp dec push push pop gs jne addb lea scas mov mov fucom call add add adc pop and das xor push push pop bound jae jge mov test (bad) int3 add fndisi(8087 out repz add and sub xor add add aas inc dec push pop pop imul addl mov rol rcr (bad) ljmp adc sbb cmp push pop bound jb jge xchg lods mov mov fcomp jecxz in repz std add or sub xor ds dec dec push add imul add movsl stos mov mov aad loopne ljmp add idiv adc daa xor aas inc dec dec push pop bound jb jl xchg test scas mov mov fcomp jecxz out add cli add and cs ds dec push pop add imul mov scas mov mov (bad) in repz std add adc sbb sub xor aas add push pop pop arpl jne addl mov add rol rcl fneni(8087 in lock cld add push adc and sub dec push push pop bound jne jl xchg test mov rol rcr fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test enter (bad) call incl add pop and aas inc dec dec push pop pop arpl push je add jns orl test mov mov (bad) fndisi(8087 out lock adc sbb cmp inc dec dec add pusha gs jne jg mov test mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl je jg add cmpsb lods mov mov add fsubp call add or add adc sbb cmp pop pop bound jae jle mov add enter loope jmp idiv add or push sbb sub xor push push pop pop gs je jg lea mov mov fucom call add or adc add and add aas inc dec dec push pop pop push mov movsb test les lret rcr (bad) in repz std add or daa sub aaa cmp inc inc add pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out add clc std add add adc sbb aaa ds dec push push pop bound je jle mov test ret leave add aad (bad) ljmp unpcklps sbb and aas inc dec dec push pop pop add push je jg nop xchg lcall mov (bad) jmp stc incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov fcomp in out cmc std add push adc push and sub inc dec dec add push pop pusha gs jne jg mov lods mov mov (bad) out repnz add or daa sub aaa cmp inc dec push push pop popa data16 add jge mov stos mov mov fcomp out lock add unpckhps and inc inc dec push push pop bound outsb jae jle mov scas mov mov add in lock incb push adc add sub xor inc inc dec push push pop popa data16 add add mov movsl lods add xlat fsub jmp add idiv add or pop sbb add sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pusha imul xchg lcall add xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop popa imul test add add enter fsub out repnz add or pop sbb es cmp dec push pop pop insl jb jge mov scas mov mov fcomp jecxz lock add or push sbb sub xor dec push push pop imul mov mov mov fcomp add jmp add or add and sub cmp dec push push pop pusha add imul addb mov stos mov mov (bad) fndisi(8087 out icebp testl push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock add pop or add sbb and xor cmp pop popa imul addb movsb stos scas mov mov (bad) in out hlt stc incb push adc pop and cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop add and sub dec dec pop bound jb jge mov mov mov mov xlat fsub out repnz add or pop add xor add dec push push add data16 jno addb movsl stos mov mov add add add (bad) leave add aad (bad) ljmp push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fucom ljmp adc das xor dec push push add pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa add add add js (bad) mov cmpsl lods mov mov fninit jmp add push adc push and xor cmp mov movsb stos mov mov aad (bad) ljmp or push sbb daa sub add cmp push pop bound jb jl orl add add (bad) int3 rcl (bad) ljmp movhps and das add aas inc dec dec push pop pop imul mov lods mov mov xlat fucom jmp idiv add or pop sbb cmp dec push push pop pop gs je jg mov test mov rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) add loope add out repnz add or pop sbb daa sub aaa ds dec push push pop popa push xchg lods mov mov rcl fsub out icebp idiv add or pop push and cmp inc dec push pop pusha imul jl xchg stos mov mov add fcomp jecxz jmp add and inc inc dec push push pop pusha imul jg mov add xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and cs aas inc dec dec push pop pop gs jne orl mov xlat fsub out icebp add cld add add push adc sbb cmp pop pop imul addb test ret leave into rcr fsubp call add or and cs add add dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add add adc push and xor ds dec dec push pop pop imul mov stos add iret (bad) fucom call add add adc sub cmp inc inc dec push push pop popa data16 jno jl mov stos add iret aad fild in out hlt stc incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg stos mov mov (bad) in out repz incb or adc sbb xor add inc inc dec push push pop pusha imul addb movsl stos mov mov fcomp in icebp idiv add or push sbb sub xor push push add imul addl nop xchg fwait mov mov (bad) fsub out icebp cli add and inc inc add pop popa imul addl mov mov xlat fsub jmp add push adc sbb cmp inc inc add pop pop add outsb jae add mov test mov mov fsub out in repnz add adc das add add aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 ljmp adc sbb aaa cmp push pop popa add jb add test movsb stos scas mov mov fcmovu in out hlt cli incl adc sbb cmp inc dec push push pop popa imul addb mov mov (bad) fildl add loopne jmp cmc cli add and inc inc dec push push (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor push push pop pop fs je jg mov test enter fucom in icebp idiv add or push sbb sub cmp dec push push add insb jno jl xchg add add ret lret fsub out icebp idiv add or adc das add push push pop pop gs je jg add movsl stos scas mov mov fchs out repnz add adc and sub add push pop pop arpl jae jge mov cmpsl lods mov add (bad) ljmp pop sbb es cmp dec add push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop imul xchg cwtl popf mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov cmpsb stos mov mov aad loopne jmp cmc sti add pop and das xor ds dec dec push pop pop arpl add test movsb test roll fcmovu in out cmc cld add push adc sbb cmp push pop bound add push jne addb mov mov fcmovu in repz std add or and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into aam (bad) ljmp unpcklps push and das aaa ds dec dec push pop pop imul addb movsl stos scas mov mov fcmovu in jmp cmc sti add and cs ds dec dec push pop popa add jno jnp xchg movsl stos scas mov mov aad loopne jmp cmc cli add sbb sub xor ds dec push pop pop arpl jb jge mov cmpsl add add lret add loopne ljmp unpcklps pop daa sub dec push add popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp add add unpckhps pop and das xor aas inc dec push pop pop bound jbe addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) jecxz in repz std add or sub xor ds dec dec push push pop bound jb jl xchg test mov add add aad (bad) jmp add unpcklps pop and xor cmp push add imul xchg lcall rol iret aad (bad) jmp idiv add or push add aaa cmp pop popa insb jb jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop add add jnp xchg test ret enter fsubp call add or es cmp dec push push pop pop gs jne jg mov stos mov mov fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae add mov test ret enter fucom out repnz add or pop add daa sub ss inc dec add pop popa insb jno jnp xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push and xor add add dec push push pop imul test movsb stos scas mov mov fcmovu add ljmp adc push and das xor ds dec dec push pop popa insb jno jl xchg movsl stos mov mov add (bad) aad (bad) ljmp push adc push and xor ds dec push push pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul lea lods mov add (bad) lret rcr (bad) ljmp push adc push and sub dec dec push pop pop bound jb js (bad) xchg mov mov fcomp jecxz add hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae add jl xchg cmpsl lods mov mov xlat fsub out repnz std add or and xor cmp pop popa insb jno jg mov test ret leave into rcr fucom call add or add adc sbb cmp inc dec push push pop popa imul mov mov mov fcmovu in out hlt stc incb unpcklps push and xor ds dec dec push pop pop bound jb jge xchg mov mov (bad) fsub out icebp idiv add pop or pop sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov add add rolb xlat fucom jmp cmc cli add push adc sbb xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test add (bad) lret rcl fneni(8087 in add cli incl push adc push and xor ds dec dec push pop pop arpl imul lea lods mov mov fnop out repz std add or daa sub aaa cmp inc dec push push pop popa insb add jl xchg stos mov mov aad loopne hlt cld add adc sbb sub xor aas add push push pop pusha gs jne addb mov mov ret rcl fsub out icebp idiv add or adc xor dec push pop pop imul popl xchg fwait mov mov aad (bad) jmp incl add and add xor cmp dec push push pop pusha imul ja test mov lods mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec jle mov mov mov aad add out lock sti add pop and cs ds dec dec push pop pop add outsb jae jge mov cmpsl lods mov ret (bad) fsub ljmp add add incl pop and sub xor push push pop pop gs jne jg mov cmpsb stos mov mov fchs out add stc incb or add pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov rol rcl fsubp jmp incl pop and aas inc dec dec push add imul addb add lahf movsl stos mov mov (bad) add ljmp or push sbb sub cmp dec push push pop pusha data16 jno jl xchg stos mov mov xlat fsub out icebp idiv add or push sbb and sub ss inc dec push push pop popa imul addl mov mov aad loopne ljmp sbb cmp dec push push pop pusha imul jbe addl mov rol rcl fneni(8087 add in icebp idiv add or sbb and sub inc dec dec add imul addl mov rol rcl fnop in out cmc cli incl unpcklps push and xor cmp inc dec dec push pop pop fs je jg mov movsl lods mov mov add (bad) ljmp add add hlt stc incb or adc add and add aas inc dec dec push pop pop imul xchg cwtl popf mov rol rcl fneni(8087 out lock cli add pop and das xor ds dec dec push add imul mov lods mov mov xlat add loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov add popl xchg fwait mov mov aam (bad) ljmp adc sbb daa sub cmp dec push push add imul jl xchg lods mov mov fneni(8087 in out idiv add or daa sub aaa cmp inc dec push push pop pusha add jno jnp xchg movsl stos mov mov rcr fsubp jmp add or adc push and xor cmp push pop add push je jg mov test ret leave into rcr fsubp call push or push sbb cmp inc dec dec push pop pop fs je jg test movsl stos mov mov aad loopne ljmp or push sbb and inc inc dec push push pop pop imul addl mov iret add aam (bad) ljmp unpcklps and sub xor dec push push pop popa outsb jne jg mov xchg cltd sahf movsb test mov fcomp jecxz in repnz std add or daa sub ss inc dec push pop pusha imul addb movsl stos mov mov aad (bad) ljmp or push sbb sub xor inc dec push push pop bound jb ja jge mov cmpsl lods mov mov fcmovu in out hlt cli incl push adc push and cs ds dec dec push pop pop arpl jae jge mov lods mov add fsub out icebp idiv add or adc xor dec push push pop pop fs je jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or pop add and das xor push pop pop bound jb js (bad) xchg lods mov mov rcl faddl loop in repnz add or push sbb sub xor push push pop pop imul lea lods mov mov rcl fsub out icebp idiv add or adc sub xor dec push pop add popa imul addb mov lods mov mov (bad) in out repz incb or adc push and sub dec dec push push pop bound jb jg mov stos scas mov ret enter fiadd in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl imul nop xchg lcall rol rcl fnop in lock cli add and sub xor ds dec dec push pop add add imul mov stos scas mov mov fcmovu in jmp idiv add push and inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop out testl adc sbb cmp inc dec push push add insl jb jl xchg movsb stos scas mov mov fiaddl loopne jmp add add add pop or pop sbb sub xor dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add push adc add sub inc dec push push pop popa data16 jno jnp xchg add rol rcl fcmovu in out hlt cli incl unpcklps push and xor cmp pop add imul xchg xchg popf movsl stos add add leave iret aam fnop in out hlt cli incl push adc pop add aas add push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl unpcklps push and sub xor aas inc dec dec push pop pop imul mov test add (bad) lret rcl fndisi(8087 out icebp idiv add sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fsub ljmp adc xor ds add push pop pop imul mov lods mov mov rcr fsubp call add or sub inc dec push push pop bound jne addb movsb stos scas mov mov (bad) add ljmp adc sbb add xor ds dec dec push pop pop bound jb jge mov mov mov fchs call add push adc xor cmp inc dec push push pop pusha imul addb pushf mov mov fsub out repnz add or sub xor push push pop pusha gs jne add add xchg fwait mov loop in repz incb or sub dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push add sub xor dec push pop pop gs je jg mov stos scas mov add (bad) lret rcr (bad) jmp pop or daa sub aaa cmp inc add push pop bound add insb jno jnp xchg mov lods mov mov (bad) fndisi(8087 out icebp testb add or pop sbb daa sub aaa cmp push pop pop arpl jae jle mov test ret enter fucom call cli incl unpcklps pop and aas inc dec dec push pop pop imul mov scas mov rol add fcomp out out cmc std add or xor inc dec push pop pusha outsl jbe test mov ret lret rcr loop repnz add adc and sub cmp dec push pop imul mov mov into (bad) fsubp in add add or sbb daa das aaa aas inc dec push pop outsl ja xchg mov (bad) iret xlat add call push adc cmp push pop bound jns mov mov ror xlat fild add out testb adc and xor inc dec push pop bound jns mov mov ror fcomp out idiv push push push sbb cmp dec push pop bound js xchg mov (bad) int3 aam in hlt cld add or cs dec push pop gs je orl mov fsubp in cmc std add sub add outsw add mov add add fucom in hlt sti add adc and xor inc dec push push pop outsl ja mov add loopne lock add adc and xor inc inc push push pop push add scas mov (bad) fsubrl push pop gs jne test mov ror fsub out idiv push or xor pop arpl jne test mov add add (bad) jmp adc and das aaa aas inc dec push pop outsl add xchg mov (bad) fucom in add cld add adc and xor inc dec push push pop data16 jne test mov add out idiv push push push push es bound jns mov mov (bad) int fucom out idiv push push push add sub cmp inc dec push pop pusha imul lahf cmpsb scas mov (bad) int3 rcr loop icebp stc add adc and xor inc dec push pop popa imul lcall rcr loope repnz add adc and xor inc add push pop pusha push xchg popf movsl lods mov vpaddq in hlt cld add adc and add pop imul mov mov fsubp out add incl movhps es push pop gs add mov ret lret rcr jecxz repnz add adc cmp dec push pop bound add mov mov (bad) fninit ljmp and xor inc dec push add fs je test mov loopne out idiv push push push sbb inc dec push pop fs je test mov add iret xlat (bad) out idiv add sub cmp add inc dec pusha imul mov enter call adc sbb sub cmp push pop bound jp mov mov add add out idiv push push push sbb inc dec push pop gs je test mov (bad) out repnz incl and pop pop insw je jge mov mov (bad) int3 add fsub ljmp add movhps and dec push pop pusha add jg (bad) xchg sahf movsl lods mov ret lret rcr loope ljmp pop daa das ss dec push pop fs je orl mov rcr loope icebp stc add adc pop daa das ss dec push pop gs je (bad) mov mov fsubp in cmc cld add or cs fs je orl mov add add rcr loopne lock incl movhps es add jge mov (bad) iret fsubr hlt sti add adc and xor aas dec push push pop outsl ja xchg mov (bad) iret xlat add call pop movhps and dec push pop bound js xchg mov (bad) int fldl in cmc cld add adc and xor inc dec push push pop data16 jne test lods mov ret lret loope lock incl movhps add sub cmp push pop pusha outsl jbe xchg mov ret lret rcr loope repnz add add push xchg cltd mov leave rcr loope icebp add add adc and xor inc dec dec push add outsl jbe test mov ret lret rcr jecxz hlt cld add adc and xor inc dec add imul mov mov add into (bad) add out idiv add adc and xor inc dec push pop bound jns mov mov rol (bad) fucom in cmc std add adc and xor dec push pop fs jne test lods mov lds iret xlat fsubp out idiv push movhps es pop arpl jns mov mov ror fsub call nopl sub cmp pop pusha push mov movsl lods mov ret lret rcr loop icebp add cld add adc and xor inc dec push pop popa push (bad) xchg lahf cmpsb scas mov (bad) into aad in out idiv push push push push and push push pop outsb ja add scas mov (bad) int fsub add cmc std add adc and xor inc inc dec push pop data16 jbe xchg mov vpmullw (bad) out idiv push push adc cmp push pop pop add add js xchg nop xchg lahf cmpsl scas mov vpmullw in idiv push push push add sub cmp dec push pop outsl ja xchg mov loop icebp stc add adc and add cmp push add jne test mov (bad) int3 aam in hlt cld add sub dec push pop outsl ja xchg mov (bad) fnclex ljmp pop daa das aaa aas inc add dec push pop outsl ja add mov mov loopne out idiv push push push push and dec push pop arpl add mov mov fsubp out cmc std add es pop fs add test mov ror fcomp out idiv add sub cmp dec push pop add orl int3 rcr loop icebp add add adc sbb and xor inc dec push pop bound jp mov mov ret lret loope lock push or xor inc dec push pop bound jp mov add in cmc std add sub cmp dec push pop bound jp mov mov add rcr loopne out idiv add sub cmp fs je test mov loop icebp stc add add sbb sub aas inc dec push pop gs je orl mov loope icebp stc add or sbb sub cmp push pop bound jns mov scas mov vpaddq in hlt add add sub push pop data16 jbe xchg mov vpmullw in add std add sub cmp push pop popa imul fwait mov mov out cmc incb or add inc push pop pop push nop cwtl mov leave rcr (bad) out idiv add adc and xor inc add pop arpl je test mov (bad) int3 aam in hlt cld add adc and xor inc dec push add push (bad) xchg lahf cmpsl scas mov (bad) into (bad) fucom in hlt cld add adc and xor inc dec push pop bound jp mov add add lret rcr loop icebp stc add adc and xor dec push pop bound jns mov mov ror xlat (bad) out idiv pop movhps daa add cmp push pop pusha push lea xchg sahf movsl lods mov (bad) int3 rcr jecxz repz add adc and xor inc dec push pop arpl jnp add mov in hlt sti add adc sbb sub cmp inc dec push pop arpl add add (bad) mov mov (bad) ljmp and xor inc dec push pop pop outsl ja xchg mov (bad) lret roll fsub in repz add or sbb sub cmp push pop popa push nop cltd mov leave rcr loope jmp cli add adc pop daa cs arpl jp mov mov jecxz repz add sbb add cs add push pop data16 jbe xchg mov (bad) fnclex ljmp add sub cmp push pop bound jp mov add jmp cli add adc add sub aaa aas inc dec push pop insw jne test mov (bad) into xlat (bad) out idiv push push add and das aaa aas inc dec push pop insw jne test ret lret add fsub in cmc std add add add push pop fs jne orl mov loope icebp stc add adc and xor inc dec push add pop gs jne test mov (bad) int3 rcr jecxz repnz add adc and das aaa aas inc dec push pop outsl ja mov mov loopne lock add adc and xor inc dec push pop bound jp mov mov jecxz hlt cld add adc and add sub cmp push pop popa imul add pushf movsb lods mov (bad) lret rcr in hlt cld add adc sub cmp push pop arpl jp mov mov (bad) out idiv push push adc xor pop arpl jnp mov mov loope icebp stc add adc and add cmp push push pop outsl ja add scas mov (bad) int3 rcr jecxz icebp add incl movhps es gs jne test mov (bad) int3 aam jecxz repz add add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl mov ror fsub call pop push es pop fs jae orl mov loopne out idiv push push push push and dec push pop gs jne test mov loop add icebp stc add adc add sub add cmp push pop popa imul sahf movsl lods mov vpmullw in hlt cld add adc and xor inc dec push pop fs je (bad) mov mov movb (bad) fsubp out idiv add sub push pop gs jne test mov les into aad in hlt cld add adc add dec push pop arpl jp mov add add (bad) out idiv push push push push es dec push pop gs jne test lods mov (bad) lret rcr loop icebp stc add adc pop daa das ss dec push pop outsl ja xchg mov (bad) into aad in repz add adc and das aaa aas inc dec push pop data16 ja xchg mov loopne lock decl adc pop daa das ss dec push pop imul mov add ret lret add (bad) fsubp out idiv pop movhps daa das ss dec push gs jne xchg mov (bad) int fsub jmp cli add adc and jne test add (bad) out idiv pop movhps es push pop fs je orl mov ret fabs jmp or sbb sub cmp push pop pusha outsl ja xchg mov add out cmc std add sub cmp push pop popa push add mov mov out idiv pop movhps es dec push pop data16 jne test mov loopne lock pop movhps daa das aaa aas dec push pop pusha push nop cwtl mov (bad) iret (bad) fsubp in cmc cld add adc and xor inc dec push pop arpl jnp mov add movsl lods mov add leave rcr loopne lock add adc and xor inc dec push pop pop outsl ja xchg mov ret lret rcr jecxz repz add adc and cmp push add je orl mov loopne lock add movhps daa cs dec add insw jne test mov int3 aam jecxz repz add adc and xor inc dec push pop pusha push add mov mov (bad) int3 rcr loop icebp stc add adc and add xor inc dec push pop bound jns mov mov (bad) out idiv add adc cmp push pop bound jp mov mov loop repnz add adc and xor inc dec dec push pop gs jne test mov in hlt cld add adc and add pop add imul mov leave rcr loope icebp cli add adc and xor inc dec dec push pop insw jne test mov jecxz repz add adc and xor inc dec push pop arpl jp mov mov (bad) out testb pop movhps es pop data16 jne test mov loop repnz add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) add fsubp in cmc cld add adc and xor inc dec push pop popa push xchg cltd mov leave rcr loopne out idiv push or imul addl mov rol rcl fnop in out cmc cli add push or push sbb daa sub aaa add push pop pop arpl jae jle mov test add add into rcr add add ljmp add push sbb sub cmp dec push push pop pusha imul addb mov stos mov mov (bad) fneni(8087 in lock sti add sub cmp inc add pop pop imul mov test ret enter (bad) in out repz add push adc push and xor aas inc dec push pop pop arpl jae jle mov add les lret fcmovu in out hlt stc incl push adc pop daa xor inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock add or push sbb and add dec push pop popa data16 je addb mov cmpsl lods mov mov xlat fsub out icebp idiv add or add adc sbb add add dec dec push add arpl jae jge mov test ret leave add aam (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge test movsb test ret aad (bad) in hlt cli incl unpcklps sbb and aas inc dec dec push pop pop imul mov mov mov fucom add out hlt cli incl or adc das xor dec push pop pop imul xchg cwtl popf mov mov (bad) in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl add mov mov roll (bad) in repnz incb adc push and das xor aas inc dec dec push pop pop gs jno ja (bad) xchg test mov mov fcomp loop in repnz std add or and cs ds dec dec push pop arpl test movsl stos scas mov mov (bad) add jmp add push add push and das xor ds dec dec push pop pop arpl outsb jae jle mov cmpsl lods mov mov fsubp call pop or and sub aaa add pop add imul mov scas mov rol rcl fsub out hlt sti add or pop sbb daa sub cmp dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam fneni(8087 in lock cli add or add and sub inc dec push push pop popa insb jb jl xchg lods mov mov add rcr fsubp call incb or adc push and xor aas inc dec push pop pop fs add jle mov test mov mov (bad) fsub out icebp idiv add or push sbb add sub cmp dec push add popa imul addb movsl stos add lret rcl fcmovu in out hlt stc incb push adc push and sub inc dec push push pop bound insb add jge xchg cmpsb scas mov (bad) lret rcl fsub jmp idiv add and inc inc dec push push pop pop gs je jg mov mov mov fchs call add push adc sbb xor ds dec dec push pop add imul mov stos mov rol aad loopne jmp cmc cli add pop sbb add sub add inc dec push push pop popa imul addb lods mov mov (bad) fndisi(8087 out icebp idiv add or adc das xor dec push pop pop imul mov stos mov mov aad loopne jmp cmc sti add push or push sbb sub xor push push pop pop fs je jg mov lods mov mov flds add in out add cli incl unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl movhps sub cmp inc dec dec push pop pop arpl add test movsb test mov (bad) fneni(8087 out lock sti add and inc inc dec add pop pusha imul add add lods mov mov (bad) fndisi(8087 out icebp idiv add pop or pop sbb daa sub cmp inc dec push pop pop bound jae jg lea lods mov mov rcr fucom out repnz std add or daa sub aaa cmp dec push add gs jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc add pop bound jb jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss dec push push pop popa imul addl mov rolb int3 rcl fsub out lock add pop or add sbb aaa ds dec push pop arpl jbe xchg movsl stos mov mov mov fcomp loop jmp add add add push adc push and sub dec dec push pop add push je jg mov test (bad) lret (bad) in out hlt stc incb push add das xor dec push push pop pusha imul addb movsb stos mov mov fabs out icebp idiv add and aas inc dec dec push pop pop imul xchg add add add ret (bad) fneni(8087 out lock add or adc xor dec push pop pop fs je jg mov test leave into aad in out cmc cli incl lldt sbb and inc inc dec add pop pusha add jno jl xchg stos mov mov (bad) fneni(8087 in add add std add or pop sbb xor cmp dec push pop pop insw js xchg lods add int3 rcl fsub out repnz add or pop sbb and sub inc dec dec push pop pop imul mov scas mov add vaddsubps fnop in lock cli add pop and cmp dec push push pop pusha imul addb mov mov fndisi(8087 out icebp clc add push or push sbb add inc dec push push pop bound jno js (bad) mov lods mov mov rcr loope out repz std add push adc add and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov in add idiv push or push sbb sub cmp inc dec dec push pop pop arpl outsl je add fwait mov mov fsub out icebp idiv add adc pop sbb daa sub ss inc dec push push pop pusha imul addb mov lods mov mov xlat fsub out add idiv add or push sbb sub cmp dec push push pop pusha add gs add addb movsl stos scas mov add (bad) lret rcl fneni(8087 in lock cli add push or push and sub ss add push pop add jle mov mov mov fcomp loop in repz incb add unpcklps pop and cs ds dec push pop pop gs jne jg lea mov mov fneni(8087 out icebp clc xor dec push xchg ret repz std add or adc pop and das xor ds dec dec push pop pop imul add cmpsb stos mov mov (bad) fsub out icebp idiv add or add sbb daa sub cmp dec dec push pop popa imul mov xchg cltd lahf movsb test (bad) leave into rcr fsubp jmp incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge add orl test mov mov rcr fucom call add or and cs ds dec add pop pop add jne addb mov ret rcr fucom ljmp push adc pop and xor ds dec dec push pop pop arpl jb jge xchg mov mov fsub out repnz add or pop sbb daa sub aaa cmp add add dec add pop bound jb jl xchg lods mov mov add (bad) jecxz out repz incb or sub dec push pop pop arpl push je jg mov test ret leave into roll (bad) in out hlt stc incb push adc push and sub inc dec dec push pop pop arpl jb jge xchg stos mov mov rcl add fndisi(8087 out lock add sbb sub cmp dec push add bound jb jl xchg scas add fcmovu in out hlt stc incb push adc push and cs cmp add push pop pop bound jae jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle add add movsb test (bad) leave into aam fsubp in hlt add add and das xor inc dec dec push pop pop imul mov stos scas mov mov (bad) in cmc sti add add sub cmp dec push push pop pusha gs je jg mov (bad) xchg lcall mov (bad) in out repz incb or sub xor add add dec push pop pop add outsl je jg mov add (bad) lret (bad) add ljmp or adc das xor aas inc dec dec push pop pop imul orl stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs inc dec dec push pop pop fs ja test movsb test ret leave into roll fcmovu in add out hlt cli incl unpcklps pop and cs ds add push add imul addb movsl stos scas mov mov (bad) add ljmp adc xor dec add pusha imul addb stos mov ret lret xlat fucom in repnz add or pop push es inc dec push push pop add insl jb jge xchg add add add mov mov aam jecxz in repnz incb or push sbb add aas inc dec dec add pusha gs jne jg mov lods mov mov xlat fldl jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop add cmp add dec dec push pop pop arpl js orl add (bad) lret (bad) in out hlt stc incb unpcklps pop and add push pop popa data16 jno jge mov stos add int3 rcl fsub out icebp idiv add or push add daa sub ss inc dec push push pop pusha imul addb mov (bad) xlat fucom out repnz add add push adc push and sub inc dec dec push pop pop arpl jae jp test mov ret rcr loop in repnz add or pop sbb add inc dec push push pop popa imul addb scas mov mov fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul jbe addl add add (bad) fneni(8087 in jmp testb add or push sbb and aas inc dec dec push pop popa imul xchg sahf movsb test ret leave into rcr fsubp call add or adc push and sub dec dec push pop pop bound add jle mov mov mov fcomp jecxz out repz std add or adc push and xor ds dec add pop pop add add imul mov xchg lcall mov aad (bad) add repz incb or adc push and xor cmp pop pop gs jae jle mov lods mov mov aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp push pop pop arpl jae jle mov test (bad) lret rcl fsub out repnz add movhps daa xor ds dec dec push pop imul mov test mov (bad) in out hlt stc incb adc push and xor ds add pop pop imul add stos mov mov (bad) add add loope jmp idiv add or push sbb add sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and sub xor aas inc dec dec push pop pop arpl jae jle mov test mov aad in out hlt stc incb or adc sbb aaa cmp push pop popa insb jno jl xchg add add scas mov mov (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov aad (bad) ljmp add pop es aaa cmp push pop popa insb jno jl xchg mov mov add add jecxz out repz std add or sub inc dec dec push pop data16 jno jl (bad) mov test into aad out hlt stc incl and sub cmp dec push push pop bound jb jge xchg mov mov (bad) out sbb sub cmp push pop bound jp mov mov jecxz repz add adc and xor inc dec push pop bound jns mov (bad) lret rcl fsub out hlt cli add movhps inc dec push push pop outsl jbe test mov ret fabs jmp movhps cmp push pop push xchg mov fucom out testl sub cmp push push pop gs jae orl ror aad fiadd out cmc cld add adc push and dec push pop bound js test add mov mov ret aad loop lock add sub cmp pop fs (bad) mov mov loop icebp stc add adc and add cmp push pop bound jns mov mov loope repnz add adc and xor inc dec push pop bound jp mov mov xor inc dec push pop arpl jnp mov mov les add add aad in hlt cld add adc and xor inc dec push insb jns mov mov loopne lock add adc and xor inc inc dec push pop add jle lea mov fninit jmp sti add adc sub cmp dec push pop imul mov xchg fwait mov leave rcr add add repz add adc and xor inc dec push pop arpl jnp mov mov ret lret add fucom in cmc std add sub push pop popa imul sahf cmpsb scas mov (bad) fucom out idiv add sub dec push pop data16 jbe test mov loope lock add nop/reserved daa xor aas inc dec push pop data16 jne test mov loop repnz add adc and xor aas inc dec push pop add jne test add add leave rcr loope lock push push push push es aaa aas inc dec push pop fs jae orl (bad) int3 rcl fneni(8087 out lock add add unpcklps push and xor add inc dec dec push pop pop arpl jae jge mov cmpsl lods mov fadds loopne out idiv add add xor pop data16 jbe xchg mov (bad) into xlat (bad) out idiv add es dec push pop gs je orl mov loope icebp stc add adc and xor inc dec push pop popa imul lcall rcr jecxz repz add adc and xor inc dec push pop arpl jnp mov stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push add gs ja sahf cmpsb scas mov add add aad loope jmp idiv add pop and aas inc dec dec push pop pop imul xchg xchg pushf mov mov iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge add movsb test ret enter fsubp add out hlt stc incb or adc sbb aaa cmp push pop popa data16 add add jnp xchg mov stos mov mov rcl fndisi(8087 out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov add fsubp jmp incl unpcklps sub cmp inc dec push push jb jg (bad) xchg sahf movsl lods mov (bad) int3 aam jecxz repz add adc and xor inc dec push pop bound jnp add addl xchg fwait mov ror xlat (bad) out idiv add sub cmp dec push pop fs jne test scas mov rol xlat (bad) out idiv push push push sbb inc dec push pop arpl jp mov mov (bad) fsubp out idiv push push push push es dec push pop data16 orb mov (bad) int fucom in repz add adc and xor inc dec add add add add jae orl mov fninit jmp cli add adc and xor inc dec push pop pop outsb jbe xchg mov (bad) rcr loopne lock incl movhps es dec add data16 jbe addb mov (bad) iret xlat (bad) out idiv push add pop pop es dec push pop fs je orl mov fsub jmp cli adc add add add pop popa imul popf movsb lods mov ret fsub out idiv add es push pop data16 jbe xchg mov (bad) into aad in repz add adc push es push add pop gs je test mov ret lret rcr jecxz add std add sub cmp dec push pop imul mov mov (bad) into aad add out idiv push push adc ds add pop outsl js mov mov (bad) iret xlat (bad) out clc add adc and xor inc dec push pop pusha push nop xchg lahf cmpsl scas mov (bad) int3 roll out clc std add add adc sbb aaa cmp dec dec push pop pop bound outsb jae jle mov test mov mov fcomp loop in repnz std add or and sub ds dec dec push pop pop imul mov mov ret rcr fiadd in out hlt stc add add pop sub inc dec push push pop popa insb jno jl xchg stos mov mov int xlat fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop bound nop cltd mov (bad) into aad in hlt cld add add cmp gs je jle mov ret rcl fucom out hlt or and xor inc dec push pop bound jnp mov mov loop repnz add or sbb sub xor inc dec push pop pusha push (bad) xchg lahf cmpsb scas mov rol xlat (bad) out idiv add sub cmp dec push pop arpl jp mov mov fninit add hlt sti add add add adc and xor inc dec push pop pusha outsl ja xchg mov (bad) int3 add fucom in cmc add push push push pop es ss inc dec push pop data16 jne test mov loopne lock add add adc and xor inc dec push pop arpl test mov ret lret rcr loop icebp stc add adc pop es dec push pop data16 jbe xchg mov ror fabs add jmp or sbb sub cmp push pop bound jns mov ror fsub call adc and xor inc dec push pop pusha push nop add add lret loope lock add adc pop daa cs add pop outsw jbe xchg mov (bad) int3 aam in hlt cld add adc and xor inc dec push add je jge lea mov add add add lret rcr loop icebp stc add adc pop es pop add je test lea mov in idiv push push push sbb inc dec push pop popa push (bad) xchg add mov leave rcr loope icebp stc add adc and xor cmp dec push pop bound jns mov mov vpaddq in hlt sti add sbb add ss dec push pop outsl ja xchg add xchg mov enter call movhps es pop bound jns mov mov loope icebp stc add adc add sub cmp dec push pop bound js mov mov (bad) into add (bad) out idiv add sub cmp push pop bound jp mov mov add out idiv add sub cmp dec push pop arpl add orl into aad in hlt cld add adc and xor inc dec push pop arpl jnp mov mov (bad) out idiv add push push push and dec push pop gs jne add scas mov roll rcr add jmp cli add adc and xor inc dec push pop pusha outsl jbe xchg mov (bad) int3 aam in hlt cld add adc and xor inc add add pop fs je test mov loop jmp cli add adc pop daa das aaa aas inc dec push pop outsl ja orb mov mov fucom in hlt cld add adc and xor inc dec add pusha push nop cwtl mov enter jmp adc and xor inc add dec push pop arpl orl mov fsubp in hlt sti add add add add adc and xor inc dec push pop popa push jp mov mov (bad) in hlt sti add adc pop daa cs popa outsl jbe jg lea mov loopne out add add movhps add add inc dec add push jns mov mov (bad) fsub jmp cli add adc and xor aas inc dec push pop data16 jbe test mov ret lret add (bad) jmp adc pop daa cs pop gs je test mov ror fadds loope icebp stc add or add and sub cmp dec push pop bound jns mov mov ret fabs jmp adc pop daa das aaa ds dec push pop gs jne test scas mov (bad) int fucom in hlt sti add adc and xor inc dec push pop bound jp mov xchg lcall rcl (bad) out cmc std add sub cmp push pop popa push (bad) xchg sahf cmpsb scas mov (bad) int3 aam add in hlt sti add adc and xor inc dec push pop add jo orb test lret loop icebp stc add movhps es pop arpl jp mov mov (bad) int3 rcr loop icebp stc add adc and xor inc dec push add add push xchg cwtl mov ror fsub out idiv pop movhps es dec push pop arpl insb je add cmpsb mov ret (bad) ljmp add xor inc dec push pop arpl jnp mov mov in hlt cld add adc add daa cs pop imul mov mov (bad) iret xlat (bad) out idiv pop movhps add das aaa aas inc dec push pop outsl ja xchg mov (bad) int3 rcr loop repz add adc and xor inc dec push pop add jno orb mov add call ltr add sub add dec push pop bound jnp mov mov fsubp in cmc cld add adc and xor inc dec push pop pusha push xchg cwtl mov leave rcr loope lock add incl push push sbb cmp arpl jp mov mov fninit jmp hlt cld add or cs fs je orl mov ret lret loop icebp stc add adc and xor aas inc dec push pop outsl ja xchg test rcr loope icebp stc add adc and xor aas inc dec push pop gs jne test mov ror xlat (bad) out idiv push adc and xor inc dec push pop arpl jp mov mov (bad) into aad fsubp in hlt cld add adc and xor inc dec push add outsb jbe xchg test add loope lock incl push push push and dec push pop arpl jnp mov mov jecxz repz add adc and cmp dec push pop fs jae orl mov ror xlat (bad) out idiv push push push push es dec add outsl add mov xchg lcall leave rcr loopne out idiv or pop pop add xor aas inc dec push pop data16 jne test mov loop icebp stc add adc add sub cmp push pop bound jp mov mov fsubp in cmc cld add adc and xor inc dec push pop bound jp mov mov (bad) out cmc std add sub cmp push add push jp mov mov fucom in hlt cld add add add pop arpl jp mov mov (bad) out idiv pop movhps daa xor inc dec push pop pusha insb je test mov in cmc std add sub add push pop arpl jp mov add loopne lock add adc and xor aas inc dec pop pop addr16 jg add mov (bad) iret add loopne jmp movhps daa das aaa aas inc dec push pop gs jne test mov fucom in hlt cld add adc and xor inc dec push pop arpl jp mov mov (bad) int3 aam jecxz repnz add add sbb sub cmp push add je test mov ret lret rcr loop icebp stc add adc pop daa das aaa add push pop pusha push mov mov loopne out idiv pop push push sbb cmp gs jne jg mov mov jecxz repz add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) into (bad) fiadd add add out cmc std add sub add dec push pop arpl js mov mov (bad) int3 aam jecxz hlt sti add or xor push pop add js xchg mov ret iret xlat fsubp in cmc std add sub cmp dec push add outsl js mov mov (bad) into aad testl sub push pop gs jne test mov ror xlat (bad) out testb push or xor inc add pop arpl jl mov (bad) into (bad) fiadd call ltr and xor inc dec push pop pusha push mov mov add in hlt cld add adc add cs dec push pop outsl jbe xchg mov (bad) iret xlat (bad) out idiv pop movhps daa das cmp push pop pusha push nop cwtl mov mov loope add sti add adc and xor inc dec push pop pusha push mov mov fucom in cmc std add pop sub cmp push pop pusha push (bad) xchg sahf movsl lods mov vpmullw in hlt sti add add mov mov loopne lock incl movhps daa cs dec push pop data16 jbe xchg scas mov vpmullw in add add add adc and dec push pop arpl jp mov mov add in hlt cld add add push and dec push pop popa imul sahf cmpsb scas mov vpmullw fsubp out idiv push movhps pop daa das aaa aas inc dec push pop outsl ja xchg mov (bad) lret rcr jecxz repnz add adc pop daa das aaa ds dec push pop gs je orl mov add add lret fnsetpm(287 in hlt cld add adc and xor inc dec push pop popa push (bad) xchg lahf cmpsb add aad in add std add push adc cmp gs jbe xchg mov (bad) int3 rcr loop icebp add add adc and das aaa ds dec push pop data16 jbe xchg mov vpmullw in cmc std add adc push and dec push pop bound add add mov roll rcr loop icebp stc add adc and das aaa aas inc dec push add outsb jbe xchg nop cwtl mov (bad) iret xlat (bad) out idiv push push push push es (bad) call imul adc lret aaa mov mov mov loopne lahf (bad) loop dec jbe jno inc sbb bound rcrl cli stos push pop ret dec data16 fldl dec add and inc movb mov fcmovb add leave clc insl push in (bad) lock lcall dec outsb xchg daa arpl test mov sti ljmp inc into das enter cwtl (bad) mov mov sbb out adc dec mov std pop test dec imul jne xor decl adc outsl push test test mov cmp test cmp cmp cmp mov cmp cmp cmp test test mov cmp cmp test cmp jmp test test cmp test test test cmp test cmp test xor cmp test test test test test cmp test test test ret call test test test test cmp mov test cmp test test test mov test cmp test test test inc test test test test cmp mov test cmp test test test mov test cmp test test test ret pop test test test cmp test clc adc test cmp test cmp test jmp test rclb push sti push or lahf cmp in jbe,pn out inc sub stos (bad) (bad) (bad) cmp test cmp cmp nop jmp test cmp nop test test pop test cmp cmp test cmp add test cmp cmp test cmp mov cmp test cmp test cmp mov inc cmp test cmp cmp test cmp test cmp cmp test dec cmp cmp test cmp test cmp cmp test cmp cmp dec test cmp test cmp cmp test cmp cmp test cmp dec test cmp cmp test cmp cmp test cmp test cmp dec cmp test cmp cmp test test cmp test cmp xor cmp test cmp cmp cmp test test test cmp test or test test test test test cmp test cmp test test call test cmp test cmp test test cmp test test test push test test test cmp test cmp test test test cmp test jne mov test cmp test test cmp add test test test test test mov test cmp test cmp test add test test cmp test cmp call test test cmp test cmp jmp cmp test cmp test test pop cmp test cmp cmp test push cmp test test cmp test push cmp cmp test cmp test push test cmp test cmp cmp mov test cmp test test cmp call test cmp cmp test cmp pop test test cmp test cmp cmp jl cmp test cmp test test mov cmp test cmp cmp test sub cmp test test cmp test mov cmp cmp test cmp cmp sub cmp cmp cmp cmp call test cmp test test test mov cmp test cmp test cmp push cmp test cmp cmp mov cmp cmp cmp cmp test push cmp test cmp cmp cmp push test cmp test test test push cmp test test cmp test call cmp test test cmp cmp jmp cmp test cmp test test pop test cmp test test cmp inc test cmp test test cmp push cmp cmp test cmp test pop test test cmp test test inc cmp test cmp test test or cmp cmp cmp test cmp xor test cmp test test test mov test test cmp cmp cmp cmp jne test cmp test cmp test mov cmp cmp cmp cmp cmp cmp cmp test cmp cmp dec cmp cmp cmp test cmp dec cmp test test cmp cmp dec test test cmp cmp dec cmp cmp cmp cmp test mov test cmp cmp cmp test cmp test cmp cmp test cmp test test test cmp cmp cmp test cmp cmp cmp test test test cmp test cmp cmp test test test test cmp test cmp test cmp cmp test test test cmp test cmp test cmp test cmp cmp test test test test cmp test test test cmp cmp test cmp test cmp test test test cmp cmp test cmp cmp cmp test test test xor cmp cmp test cmp test cmp test test test cmp cmp test cmp cmp cmp cmp test test test cmp cmp cmp cmp cmp cmp test test test cmp cmp cmp cmp cmp cmp test test test cmp cmp cmp cmp cmp cmp test test test cmp cmp cmp cmp cmp cmp test test test cmp cmp cmp cmp test test test test cmp cmp test test test cmp cmp test test test cmp test cmp cmp cmp cmp cmp or test test cmp test test test jne cmp cmp cmp cmp test jmp test cmp test test cmp sub fwait mov dec imul cmp decb (bad) jge in jp aad outsl mov xor cmpsl dec mov test mov add xor and sbb (bad) in push ja mov std aam lcall loope adc pop xor pop repz inc ret cli fdivl jecxz add push inc jl ds je into pusha imul add stc adc jmp das cld or pop ljmp xor adc rcll mov adc or inc xor xchg int es xchg les fldt pop jns lret push sbb sbb pop xor cmp bound fisub sti push or lahf gs cmp in jbe,pn push inc sub sub fwait mov dec imul cmp decb (bad) jge in jp aad mov xor cmp cmp cmp test test mov cmp test test cmp cmp pushl test cmp test cmp pop test cmp cmp test test mov test test cmp cmp test mov cmp test test test test push cmp cmp test cmp test mov test test test cmp cmp mov test cmp test test test mov test cmp cmp test cmp cmp jne test test cmp test cmp mov test test test test cmp cmp jne test cmp cmp test pop cmp test cmp test cmp mov cmp cmp cmp test cmp mov test cmp test cmp cmp mov cmp cmp test cmp test add cmp test cmp cmp cmp mov cmp test cmp test cmp mov test cmp cmp cmp cmp add test cmp test cmp test mov cmp cmp cmp cmp test add cmp test cmp test cmp lods cmp cmp cmp test cmp test je test cmp test cmp cmp add cmp cmp test cmp test mov cmp test cmp cmp cmp cmp jne cmp test cmp test cmp mov cmp test test cmp cmp cmp jne test cmp test cmp cmp mov cmp cmp test cmp cmp push test test cmp cmp cmp pop test test test cmp test push test cmp cmp cmp test push test test cmp test test push cmp cmp cmp test test push test cmp test test cmp push cmp cmp test test test push cmp test test cmp cmp push cmp test test test cmp push test test cmp cmp cmp call test test test cmp test add test cmp cmp cmp test ret pop jno jb mov (bad) inc mov add xor and sbb pop sub hlt in push ja mov out std aam lcall loope adc pop xor repz inc ret cli fdivl jecxz add push inc jl sbb inc je into pusha imul pop add stc adc jmp cld or pop ljmp out xor adc rcll mov adc or inc xor int es xchg les fldt pop jns add push sbb sbb cmp xor cmp bound fisub push sti push or lahf pop cmp in jbe,pn out inc sub mov fldt pop jns add push sbb sbb pop xor cmp adc into push nop inc dec in sahf stos inc mov in and jge sub adc sub fisub xlat push (bad) sub jo inc mov popa cwtl ja adc sub jle sub ja xor adc aaa fidiv and jp and fs cmp aam cld sub ja xor inc loop mov stc out jo inc and das fimul xchg popa cld sub cmp (bad) repz lds lods pop add pop nop idivl cli mov stos movsl xor sub clc js adc pop into cmp push mov mov mov jp jne and sbb gs pop xlat and scas push (bad) (bad) push push popf dec mov or icebp dec leave dec (bad) fs (bad) add mov out xchg mov aaa add push jb out addr16 nop dec mov gs mov adc shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop es shlb loop dec ss inc mov jp outsl mov lcall mov jp push xchg aas scas mov push icebp inc mov xchg gs icebp sti mov mov xchg gs pop push popa inc mov scas mov (bad) gs lds jge mov adc dec nop xchg gs in xchg mov xchg gs mov xchg gs mov push jne mov push jne mov xchg gs and inc dec mov (bad) (bad) test insb mov add popf inc scas push arpl xchg mov adc daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz daa (bad) repz sbb inc dec fmull mov xchg gs and gs mov xchg push inc mov xchg cmova insb lcall (bad) imul push inc inc mov xchg gs dec cltd inc inc mov xchg gs and fs mov xchg adc out mov xchg gs into xchg inc sub mov push insl inc mov pushf loope mov inc dec xlat pop push push dec in mov je inc mov les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc les adc sbb mov sti in rcll sahf aaa scas pop sub mov xchg gs add mov dec test cmpsl mov push push imul xchg out or xchg aas scas jno gs sub xor inc clc sbb pop dec add mov xchg gs in out or xchg aas scas or sub outsl pop stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos mov stos int3 in xchg mov xchg gs mov fisub adc gs sti jnp inc mov sbb inc dec rolb mov xchg gs and gs mov fldl mov xchg gs and fs mov xor mov xchg gs and fs mov rorl leave lea movsl xchg gs and fs mov stc dec inc mov xchg gs and fs mov lcall movsl xchg gs and fs mov xchg cmp jnp xor mov jmp aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi lea mov gs and gs mov lahf lea xchg gs dec popf jb mov mov gs and inc mov xchg gs mov into dec inc mov mov dec inc gs mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov xchg mov sbb pop and dec and sbb adc sbb adc js mov xchg mov bound insl mov sbb pop and dec and jp insl mov ss mov imul test mov sbb adc js mov push jge mov xchg gs pop push jno mov xchg gs xchg fs mov xchg gs imulb mov mov mov add adc aam and and inc mov fisttpl dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas dec jp scas loope pop js imul loope jge mov lods adc mov xchg in mov iret jl mov push jge mov xchg fs mov stc addr16 mov insb xor sub imul and sub add pop inc aam mov inc sti (bad) xor test hlt ret mov mov std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret std or iret stc fs lret xchg cmova and in out mov insb lcall (bad) and inc mov sbb pop mov pop or adc inc notl out aaa mov out sbb dec out sbb sbb mov push dec ljmp inc (bad) cltd (bad) out stos and xchg (bad) fsts adc repnz xor mov ret jno mov ja xchg gs loope out pop popf push out cmp loop inc outsl sbb out cmpsl in or sbb inc mov sbb lods adc pusha sub mov movsb xchg mov xlat mov mov cli or enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter dec mov inc mov insb lcall fwait lcall scas inc inc mov outsl push mov insb adc in sub movsl stc gs aam lcall xchg les push jnp lcall lret test xchg aas scas icebp insl lcall fwait mov xchg gs pop sbb pop icebp jnp pop mov jp pop mov fwait mov mov fisubr jmp jnp mov jle gs dec imul cltd stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop jg stos pop int3 in fwait mov dec nop cwtl mov mov mov inc stc sbb and gs mov shr or xchg aas scas jge lcall fwait lcall xchg push inc mov ret xor mov xchg ss negb push les push std popf gs dec (bad) in mov mov insb shrb mov xchg out or aas gs mov mov or xchg cmova insb lcall push lds xchg cmova pushf lcall lds xchg lcall mov and xchg gs xchg gs fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb fucomp sbb lret xchg out dec pop loop mov movsl sbb dec pop mov popf inc scas push imul out add xchg cmovbe inc mov test mov mov lods xchg gs mov out or lock gs mov cmpsl mov sbb mov xor mov leave imul lcall xchg push or lret (bad) adc mov fs mov sub mov xchg gs sub insl scas mov jnp mov mov xor loope mov scas push cmovnp jp inc mov (bad) aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc repz aaa adc lret xchg cmovae push out sbb xchg les xor negb out mov xchg gs incb gs sub popa int3 mov das outsl sub mov scas fldcw mov negb mov pop xchg push mov gs dec or stc and inc leave xchg jne mov fwait lcall xchg in ret gs lds push inc mov ret popw popf adc inc arpl lock xchg mov xchg gs pop stc gs bound gs mov xchg gs sub insl mov and clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc sub dec adc adc push aad mov xchg gs repnz dec pop mov gs sub out xchg gs dec adc adc push aad mov xchg gs repnz dec pop mov gs bound gs mov xchg gs and inc mov fwait lcall xchg stc sbb mull xchg cmova fwait xor inc mov mov jg mov stc inc pop pop es mov insb push mov mov xchg mov dec and ret mov xchg gs fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb fsubr sbb in xchg mov xchg gs pop sbb (bad) mov xchg xor jno and sub popa scas sub aas mov insb mov repz sub insb mov pop xchg adc (bad) adc sub lock gs pop mov gs and dec mov sbb inc dec or inc mov insb lcall adc xchg sub popa scas outsb test sti jnp mov insb cmova in mov mov sti gs mov sbb dec pop mov gs data16 dec mov xchg out or xchg aas scas popa lcallw inc mov xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl xorl jnp push mov sbb dec pop loope mov scas push inc inc mov jp push mov addr16 xchg in mov mov fwait lcall xchg gs mov push fnsave pop pushf gs movsl pushf loope mov xchg mov dec mov mov mov fwait lcall jp pop mov addr16 xchg out or xchg aas scas pop pusha lcall xchg out add xchg in shlb gs sub inc mov xchg gs es fs mov xchg push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno movsl push jno insb lcall xchg gs icebp insb repnz mov add xchg push jbe gs sub inc mov xchg movsl dec and scas mov ret push xchg gs pushf sbb inc popa pushf loope mov xchg gs scas pop mov (bad) cmpsl xchg gs and scas js mov xchg gs dec mov inc mov sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb jmp das sbb gs popa pushf loope mov xchg xchg xchg pop shll scas popa inc mov test popa out jp fsubl cmpsl aad pop and incb inc mov xchg gs pushf shll out jp xchg xchg xchg pop inc mov lahf fs mov add xchg adc xchg lcall xchg gs mov xchg gs mov xchg gs jge lcall (bad) pop mov or mov mov xchg gs mov xchg gs pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop insl fwait mov pop sti popa inc mov xchg gs pop and inc mov xchg gs dec lea inc mov xchg gs pop and inc mov xchg gs dec xchg lcall xchg les push mov imul push mov (bad) out inc mov xchg jne mov int3 insl mov mov adc adc rcrl inc pop and inc mov insb push mov mov xchg lcall and inc mov xchg gs sbb out mov insb lock xchg gs inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc jbe mov inc sbb inc mov and inc mov xchg gs sub insl mov mov outsb lcall insb push mov dec insb lcall pushf loope mov mov mov (bad) jne loope in add jbe,pt mov xchg les add mov popf add out push inc arpl xchg xchg add popf fwait xor in subl xchg popa inc mov lahf in mov insb gs mov xchg adc jl inc mov mov sbb dec and mov push xor inc stc jnp inc mov adc push xchg gs cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld into cmp cld outsl out xor xchg gs fcompl gs push aaa mov mov gs sub movsl inc mov xchg gs imul addr16 pusha sbb push dec dec mov scas cmc out push test fwait sub push sub xchg cmpsb int3 in out mov mov dec aam mov and inc mov stc gs pop insb cmova xchg cmove xchg cmovbe xchg gs and lcall lahf in mov imull mov fisttp cmpsb xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg bound xchg in mov mov xchg xlat push mov push inc inc mov ret xor sub imul lret pop inc jns sbb int3 jmp xchg gs xchg fwait pop mov loop jns inc bound sbb insl in mov xchg cmova xchg cmova xchg or adc sub les cmova insb adc movsb and mov fbstp mov mov pop lods (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sbb inc and mov mov xchg push and stos xor out inc scas cmc out (bad) out and push mov js xchg in les add and and push mov push popa dec mov sbb inc mov stc addr16 mov insb xor sub add push mov push mov gs and mov xchg gs and gs mov fwait in pop scas shl jnp xchg adc xchg gs dec mull (bad) out cmp xchg addr16 mov (bad) imul xchg adc in std aam xchg insb push and outsb adc stc jnp inc mov lahf in mov mov sbb and xor push lods push push bound adc inc mov jmp aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas fldpi sbb aas sub imul test gs movsl xchg les xor mov and inc mov jp dec mov xchg adc popa scas cmp andl push gs mov insb mov pop adc sub mov xchg lcall pushf gs stc adc aad mov xchg (bad) pop (bad) pop test jge mov xchg adc jae jns sub fs jecxz movsb inc and xor out test loopne mov pushf gs cli sbb cmp fs mov xchg and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and loopne and sub jle cmp fs mov mov dec inc mov insb lcall push inc inc mov xchg gs dec xor mov out imul mov pop and mov push popa std mov (bad) insl xor cmpsl jb jecxz xchg (bad) dec xchg jne mov pop out sbb (bad) xor aam das les adc aam fldl xchg gs in mov mov xchg add inc cli sbb cmp fs mov xchg gs cmp fs mov cmc push repnz xchg gs (bad) adc into xchg and mov jo xchg push dec inc mov mov clc jg xchg gs mov push pop inc mov pushf loope mov fwait in pop mov daa daa dec daa gs mov test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl test jl adc into jno gs mov xchg gs push (bad) out mov mov inc mov mov xchg xchg gs cmp fs mov xchg gs dec xchg add dec insl lcall xchg in adc xchg add arpl xchg gs mov xchg gs (bad) sbb arpl fiadd imul (bad) in mov mov fs inc mov cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd outsl dec stos cltd out inc stos xchg xchg dec iret push push stos pushf mov sub outsb push adc mov pusha xchg adc std mov int scas mov loopne cmpsb inc nop pop and popf cwtl fnsave pop adc dec movsl xchg adc jmp and shr and inc mov sti gs mov insb lock xchg gs addr16 fldl andb pop insb aaa and divl xor fiadd sub loope inc dec pop (bad) mov mov jb mov mov xchg gs test fwait in dec sub imul movsl insb test movsl mov scas movsb push lea insb lcall xchg mov stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos cwtl outsb dec stos jnp movsb pop insb or (bad) inc dec inc mov xor loope sub fimul and xchg lea jns lcall mov xchg (bad) repnz enter sar and cld pop mov insb ss fild aad pop xor push dec lcall loope sub ret or jnp movsl pop insb sub mul or (bad) lds in (bad) or shr gs pop inc lcall lock add out xor xchg test inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae cmpsl inc jae inc inc insb lcall jecxz cs in and testb enter dec and (bad) or iret repnz cmc sti pop and mull sub mov (bad) repnz cmc sti pop and mull aas mov insb sub out jecxz sub in sub xchg lea lcall lock (bad) lds in (bad) or shr gs add gs lea dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul dec imul popa scas pop insb sub repz xor divb das (bad) testb jnp movsb pop insb sub out adc std adc (bad) xor (bad) testb jnp mov repnz add std adc (bad) xor (bad) testb jnp cwtl pop insb and aad or int3 repnz in cli or notb lcall lock xlat and icebp cld or ret scas dec jp mov fsqrt adc testl and loopne scas or lcall divb xor les lea mov mov xor loope and loopne or decl or (bad) sbb (bad) mov fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or fildll or (bad) mov aam and aad adc icebp loope and loopne inc dec sub xor icebp loope xor lock fsts lcall icebp pop es and dec aas mov pop lds loopne or ret inc dec mov push clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl clc fidivrl lea sar add loope and out add (bad) or mov insb es repz or aad xor (bad) testb jnp mov aad pop sub rolb and notb xor jnp mov aad pop cs loope xor rorb es gs add mov rcll lcall out add icebp adc in add aad (bad) sti ja lcall aad sub les addr16 lcall aad sub xchg (bad) enter add cld push and repnz int gs cmpsb jl mov (bad) repnz in pop and out xor mov xchg mov andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl or lcall ret gs jnp xchg pop insb push das (bad) decl je xchg lea push insb lcall mulb aad or aam add xchg lea (bad) repnz enter dec sti mov pop rorb (bad) lock (bad) les or mov into std add shl or incb adc insb xor sar or shl pop sar push and loopne scas xor mov enter enter dec lret mov pop aam xor (bad) or icebp repnz notb gs mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov loopne mov mov insb sub adc inc adc les push addr16 or sub testb faddl sub add and cli adc and incl lods cltd or ljmp pminsw xor repnz add (bad) repnz and fimul sar push sub out adc std add (bad) loopne add loope and out and loopne sub iret aaa xor fmull and iret gs and sbbl das (bad) decl imul cli adc cmp dec mov insb inc imul aas lods cltd xor rorb aam inc mov insb popa inc mov insb lcall arpl inc dec lcall mov insb gs mov insb lcall iret add int or int3 (bad) dec and mulb sarl std loopne and (bad) push jge mov shl pop ds add les lcall lret xchg mov ficoml lcall inc mov inc mov insb out mov insb lcall and xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor add add mov mov mov hlt add sub das aad inc into mov sub lret cmp jnp or or cld xchg inc mov ljmp sbb inc aam jg mov (bad) mov inc movsl mov ret (bad) adcb jp dec daa imul mov sub addr16 mov pop int3 dec mov sti mov iret push imull push loope (bad) pop or ror cmpsb pop jbe xchg imul cmp or push insl jo xchg mov adc jl popf lahf pmulhuw xlat dec mov fadd (bad) ja loop pop and and stc imul fsub fldl fcmovne jns mov sub std adc cli out out inc icebp insb scas in pusha cltd fimul (bad) in adcl push jne dec mov lcallw testl lret cmp (bad) mov or jnp xchg arpl inc xor xor aaa add fs mov (bad) mov inc movsl pushf jmp test push mov jp dec daa add jge sub bound pop int3 addr16 push nop dec mov sti push testl loope shl lret cmpsb pop jbe (bad) imul pop adc cmp push mov mov push adc je sarb repz pop xlat dec cmovs cmp xchg loop ret pop mov pop push and stc imul lea (bad) cmpsl lock test enter call (bad) int sub inc adc sahf pusha icebp fimul (bad) in adcl push jne add shll mov das add sub clc aad lret cmp (bad) mov or jnp xchg arpl add cld mov mov ljmp sbb xchg mov (bad) movsl pushf or test push mov jp andb xchg and dec jge sbb bound addr16 mov pop nop dec mov sti mov ficomp jp mov (bad) mov sbb loop cld insb xchg cmpsb pop sbb pushf mov mov cld stos xchg jl jle lcall mov outsl outsb lods pop pop hlt loope out mov xchg inc daa repnz ret jns (bad) notl popf jne in push imul mov rorl ljmp jno cmp push and mov jl cmp add xor inc andl add fld pop movaps enter or jge subl xchg and dec subb lea pop mov pop xchg push jmp incb rclb insl mov test adc pop jns cltd stc or sbb shll sahf jp outsl jae fnop push jnp mov and in adc aam fisubl mov lds aaa sbb mov and and mov push ljmp clc pop repz out lret stos rol jmp adc ds fs sub mov repnz mov sub cmc xor and scas jne jo add cmpsb js dec mov lods loope xor push xchg sti das sbb addr16 jle push and inc cwtl inc mov in xor inc addl xlat addr16 fnstcw rcrl mov push dec xchg jge dec sub and addb fildll mov pop iret push jmp incb rclb insl mov (bad) out xchg pusha or pop jns cltd stc out aas sbb shll sahf jp outsl jae fnop mov or and in adc bound ficoml dec aam movsb and sbb and and mov push daa dec inc mov or clc pop nop fninit loopne stos repz fstl sarb jmp fs sub std icebp repnz cmp pushf es xor and pop jne imul scas cmpsb js dec mov lods loope xor sub sti fcomps das mov mov push and inc cwtl mov icebp mov xor cmp inc xlat addr16 mov enter sub dec in lahf out or jge dec sub loop subb gs mov pop iret push mov push xchg push add (bad) push test insl or out test stc out pop sbb cltd cmpsl or into (bad) sarl out xor sarb or and in mul bound push adc cmp hlt inc aad inc sub shrl xor fstps cli pop insb mov mov (bad) rcl sar in je dec fcoms push push cmp ret jae ss cmp lods fnop push xchg es mov int mov stos pop icebp leave imul push cmp or or and cs and ja pop mov test xor push push ret push iret in dec add xchg jo xchg sub sbb dec sbb add (bad) jge jmp (bad) jb mov and out ds xlat (bad) cmpsl cmpsb sbb fsubrp jl daa cmp mov pop sub mov push in dec pop xchg imul sti lods cmp xchg into adc (bad) or and add pop add pop mov cmp ja,pn lahf adc clc mov insb mov add dec add test mov dec das aaa inc and pop pop xchg xorl aad cwtl icebp sti xchg lds lods push rorb ret cmp scas mov inc or mov adc in push repnz inc jns int3 leave jo fsubrl gs stos aam dec mov mov std mov fstpl rorb ficomp cltd push mov fldt pop jno out cmpsl xchg (bad) popa pop aaa cmpsb mov xchg cs mov cld sbb push or addr16 sub and (bad) add pop jle sub movsb imul notb pushf xor insb aas mov adc or jbe push adc dec inc mov mov stos cmp jb cmp insl je mov jge cmc mov (bad) in mov mov jae js inc mov jbe pop aad xor lds lods push rorb ret cmp xor and (bad) mov scas or inc adc in mov (bad) xor push int3 leave loope fadd sub aam dec mov mov (bad) mov std pop fimull rcrb cltd test push jno (bad) out cmpsb mov xchg cs mov jp sbb ret notb repz in sub popf das test and jmp push pop add imul notl pushf outsb xchg mov scas xchg xor mov adc jg lret imul out adc push inc lahf pop inc jl mov stos jecxz sarb je int mov cmc in mov mov add nop inc mov xchg pop pop pop xorl aad cwtl icebp push lods dec dec mov cli sarb xor orl or mov (bad) xor jns repnz loope fadd int3 xchg jo lods sub (bad) mov daa stos jmp mov std mov fstpl rorb ficomp add mov fldt pop jno out cmpsl mov cmpsb mov xchg cs movb ja pop pop sbb clc xchg aas mov out aad jp outsl adc jnp mov or and jle dec add sbb pop xchg and arpl imul sahf scas or mov mov lret data16 rcr lea lret into (bad) mov bnd mov xchg jae push mov in test or aad out mov or pop xor dec pushf inc int popf xlat mov das push sbb ret inc cmc gs add icebp push mov (bad) andb les mov es leave imul jmp in push xchg fiaddl ret loope jg outsb andl inc mov push lock bound repz (bad) lret sub pusha sbb clc xchg pop mov aas sub xor out xor shlb mov jge push pop and movsb jnp mov jbe inc and sbb fildl pop push mov push enter imul dec mov (bad) dec repz dec lret retw push lret ffreep mov bnd mov mov fwait insb call in xchg add aad test js cltd lcall or popf xlat pushf int3 jae (bad) mov stos push dec and cmc gs inc push mov fyl2x mov add mov lds sar leave mulb jmp push push in fiaddl ret loope jg push andl add inc xchg mov sub bound and (bad) lret sub rolb add adc clc lods aas mov out xor jp outsl adc jnp mov jge cwtl pop mov out jle and mov fildl addr16 pop xchg push scas imul sahf nop or (bad) idivl lret data16 ret push cld into (bad) call repnz mov cmpsl add jl mov cmpb add imul sbb fldl lods push (bad) mov inc and mov mov push push cltd jno jmp in mov mov int hlt out aad lret or insl pop rclb fnstcw js out test (bad) cmp cs je (bad) mov xchg jns (bad) fildll ret push jb xor dec push fimul push (bad) mov daa lret pop mov pop (bad) dec in or cmp dec int ret nop and into loope movsb pop or rorl jmp je xchg cmc or adc iret mov lcall int3 push ja mov add repnz pop fisttp (bad) aaa (bad) pop lahf inc mov adc push loopne pop and sbb lods lds inc cmp repz out xlat fucomip (bad) cmpsb mov or cmp sub inc adc scas in out pop xor lock and icebp sub and xor test pop mov mov cmp (bad) xor aam inc adc mov cmp sbb dec popa sbb inc mov jmp std jb ss shll aam push or repnz inc call jle dec xchg jns dec es push pusha mov (bad) mov pop lret dec in or xchg jg test dec cmp dec and ret nop pop or rorl movsb pop je xchg cmc jmp adc iret mov lcall int3 mov add repnz pop fistp (bad) dec lahf inc rcl mov push loopne pop and sbb lods lds inc cmp repz mov (bad) (bad) cmpsb out sarb or cmp sub cld adc stc in out inc xor pop cwtl and (bad) in (bad) adc addr16 stos mov pop push cmp cs testb not sbb adc cmp mov mov jp xchg popa mov inc das fdivs inc shll aam aas or rol push or inc call jle mov jns dec es sbb fimul pusha pop mov pop lret in outsb push (bad) dec add dec cmp dec int ret nop and into loope movsb pop je (bad) cmc jmp adc xchg mov iret jbe loop das lcall add stos add test popf repnz pop (bad) dec push inc (bad) aaa mov xlat loopne shll push cmc lods pop push and inc pop mov repz out xlat cmp (bad) or sarb ret cld push int3 stc sub inc adc xor lock (bad) in (bad) adc test std stos jno insb add dec fnsave inc sub not (bad) leave adc mov dec bound popa sbb inc mov jmp arpl mov aam push or (bad) call inc push mov jns jle dec xchg push fimul push (bad) mov daa lret pop mov pop (bad) dec in sbb dec (bad) cmp pop sarb mov sbb sti imul loop mov repnz test shr arpl iret mov outsb insl out pop push repz in scas push leave out inc shll es push mov dec pushf je in add add out cli xlat mov rorb sbb dec into or rcll fdivrl mov test hlt add xor ja xchg mov push daa mov cmpsl pop enter push mov in push and lcall and dec push movsb push lret cmove mov lea (bad) sub jecxz shl (bad) sbb aam stos sbb push test bound mov pop xor cltd mov ss push jle fistpl ret lahf or mov pop dec js pop xor (bad) icebp sbb pop mov test movsl add fbstp test aas ljmp adc add insl out lods push rep inc in scas push loopne mov shll es imul aad xor mov push xlat mov rorb sbb dec into mull fdivrs rorl (bad) push inc mov test xchg add xor hlt inc xchg and mov enter cmpsl mov push pop push cmp and dec cmp sub pop mov jno cmovle mov lea clc sub jecxz (bad) in dec sbb aam sbb push imull (bad) (bad) mov pop sub out cltd mov jmp push adc jbe ret lahf pop adc pop dec (bad) xchg pop ffree sarb mov pop mov test loope or xor mov daa pop jmp add mov and lret and enter add jge imul lock sarb xor testl ss int3 jns inc cmp in pop data16 test cld adc adc pop or sub loopne or sub jecxz jne sbb arpl into int mov inc dec adc xor xchg lret mov fdivs ret push aad dec gs popa dec push sbb pop jmp cmp stos xor shrb xor mov cmp xchg cltd cmpsb loopne aad sbb aaa pop cmp mov xchg dec (bad) outsb push test sbb in mov (bad) jle (bad) in sbb das leave mov mov divb call lea ljmp or push mov imul mov inc push arpl pop (bad) jne pop aam push lods addr16 les stos push add js jle inc out popa jg fldcw fidivrl lret push insl clc mov in or test outsl dec fs jo data16 std or je xchg xchg pop fcoml into inc cwtl inc leave mov psubusw push sbb sbb icebp popa pop (bad) fucomip push test fcom jl call (bad) jno mov or and out jmp pop xchg (bad) sub movsl pop add sub inc mul fidiv xchg xor mov ds gs push pop or in adc push inc lahf pop inc mov rcrl in jle push jno cmp push jb adc dec hlt mov pusha jmp loopne daa (bad) in (bad) repnz mov xchg push pop sbb mov xchg lock xchg or lret mov iret dec and cmp or sbb loope mov rdmsr sub inc js lret enter lods sub (bad) es roll mov scas call fisubrl and test je sbb or std pop jo out jmp movsl add adcl loop adc jecxz add pop pushf push jbe cmp aaa data16 dec cmpsl ljmp and aad and mov sub out mov inc cmc adc xor xchg icebp xchg push mov adc or jne push adc dec inc lahf in inc mov rcrl in jle push jno cmp imul mov adc mov pusha jmp loopne inc (bad) in (bad) repnz mov mov sbb popf (bad) lock arpl mov lret mov iret dec dec sarl xor movsl ret int3 sbb loope inc cmp mov (bad) xor lret enter ret sub mov test stos rol dec mov scas call fisubrl cld lcall je sbb test or xchg pop pop pop out movsl add mov sub loop cld jns pop add dec pushf aaa add sub cmpsl les fldl2t aad and imul out shrb aam cmc icebp xchg xor mov adc push pop (bad) dec jne in adc inc jnp sarl cmp out imul mov jl mov dec hlt jmp cli xlat inc pusha in loopne daa (bad) mov mov xchg push pop popf (bad) mov xchg lock xchg or lret cmp iret mov xor add add cltd inc or or cwtl mov (bad) xor js icebp enter ret lret (bad) mov test sub (bad) es call scas das cld mov and test rcr sbb sbb cmpsb insl subb adc mov xor fldenv sub repnz adc pop lods adc sbb cmp ds xor stos in aam jns outsb adc cmp pop mov imul sarb jecxz in jge dec inc lea inc and sbb std and bound push (bad) dec loope or cld mov or dec and pop add int mov lock pmuludq lahf add (bad) jb imul enter lods cmpsl add sbb fistpl roll inc int3 rcrl fsubrl icebp test cmp push mov fcmovnu ret mov aad mov pop les cmc call stos and in sub sbb push insl andb cmpsb sahf outsl push xor sub cmp adc daa lods adc sbb cmp pop mov cmp stos ds xor in xor iret pop outsb (bad) mov pop idivb and inc jecxz in mov jne inc and fiaddl pop push scas std push (bad) (bad) mov mov es dec leave mov fs fisttpll mov lock pmuludq into lret jb fisubr xchg enter lods (bad) add sbb fistpl roll inc int3 xor fsubrl icebp test cmp push mov fsubr mov ret or pop les cmc and stos call andl in xchg ret jle sbb cmpsb insl outsl push xor sub cmp repnz adc lods inc jbe nop pop sbb cmp ds xor stc in xor jns outsb adc cmp idivb and shl push add jne jp inc lea fiaddl gs xlat pop test push scas push mov mov dec xor dec leave dec mov rcr adc fstpl mull add pop fstp scas popa out aad movsl (bad) (bad) ja mov cmp mov lret test jmp sbb faddl sub cmp in mov add dec cwtl jo call ljmp repz aam lret imul iret dec sbb mov mov movsb sub sub mov nop js or scas jg push (bad) push mov xor cmp add add and outsb mov insl sub dec mov stc mov mov jle inc dec fildll loopne pusha pop pop (bad) ror cmpsb push xor adc test push xor sub push xor jb mov icebp mov or fstps je pop xor into in adc fstpl mov orb testl out aad movsl (bad) popa ja cmp fadd cmpl mov pop mov ret lret test loope stos push fsub lods sub and and cmp add dec mov adc add ljmp mul sbb inc lret imul iret or push clc cli dec inc mov movsb sub sub push jl jae or les bound mov sarl add add and aaa mov outsb sub dec mov stc mov mov hlt and dec fildll loopne dec pop pop int leave pusha push xor push repz cmc adc test sub xchg xchg out mov (bad) jb mov or pop pop inc mov je fwait xor in sbb add addr16 add aad fildl movsl fadd ja mov sub mov lret test loope sbb inc lods sub cmp add dec mov adc push fs jo call dec not sbb lret lret imul iret or push xor mov sub movsb (bad) lock mov sub (bad) mov mov (bad) jb popa lds adc adc sub xor int3 xchg xor pop lret pop xlat hlt push or add jg xor pop out pop fnop fldcw aas pavgb es pusha outsb roll xchg popf lcall xchg test idivl push inc out jbe mov push mov inc imul and out test inc imul pop cmc push addr16 jae das add sbb into adc sub or jl push arpl inc xor sbb add inc or push or mov cmpsb pushf jmp gs mov daa push sbb pushf inc cmp cltd push pop mov pop mov jo push dec dec mov cld push testl loope shl int3 bound add imulb movsl or push mov js ljmp mov loope cmp pop mov sarb mov ja gs imull aas lods (bad) dec call and sbb mov movsl lret std push adc outsl lock repz sub fisttpll xchg lods jb mov (bad) sbb mov jae stos xchg ds (bad) sarb pop sbb push dec test dec mov add fidivrl inc ljmp pop mov sbb fstl xchg dec in into fildl mov xlat test rol rep and adc aam sub inc orb fsts or pop insb dec ljmp mov xchg les sub jne mov and cwtl add xor sub out aad sub rcrb rolb push sub daa repnz lods movsl cmp or sub (bad) shr (bad) data16 or jno push push ret dec inc fwait jmp lcall cmp es stos mov stc fucomip xchg xor push cmp xchg xchg and into xor std sti mov (bad) xchg pop fldl xor dec loop das ljmp mov ja jae (bad) int3 dec lret inc in or inc and test inc imul test rcrl push jmp adc mov gs sub outsl cmp fstps enter mov pop sbb repnz xchg pop sub pushf lahf cwtl das in int ret loopne pop jno insb push pop and and cmp inc mov jns fdivl inc rorb insl out pusha sbb adc (bad) popf inc jecxz (bad) daa in add jg dec pop lock ss jo loope movsb lods stos push jae dec or inc pop mov xchg xchg lcall jl es stc jp xchg mov push (bad) push xor std cmp xchg addr16 std sti into orb pop lds push clc jle pop loop xor aam leave push das mov cld bound dec lret jae add pop in inc pop inc or inc and icebp jge jb mov xor and shl jmp adc aaa repz outsl cmp fstps sbb enter adc xchg pop scas aad scas cwtl das sub lahf ret loopne arpl or add insb cmp hlt mov fs inc movsl inc jns dec jbe imul out pusha sbb adc sub (bad) in add jg daa pop lock jo loope xor movsb or inc dec mov xchg xchg lcall jl es stc jp xchg mov push fucomip push xor std cmp xchg addr16 and into xor cmc std lds push clc out pop fst xor dec loop das ljmp bound ja jae add dec in inc in or inc and icebp jge jb xlat nop xor and rcrl push gs sub and fcmovu push enter mov addr16 add insl mov aas cmp (bad) xchg jae in lock imul dec dec je in push (bad) push mov rcrb jmp push jo cmp lahf lods adc jp aaa std add popl das andb inc jecxz mov int mov pop sbb mov bound pushf xchg out ds pop mov lret into dec gs mov ret out (bad) movsb inc lret pusha inc or dec loopne mov push xor xchg dec xor fiadd push push or aad mulb mov cli in fldcw and orl pop ficoml adc insl cld pop outsl push xor xchg mov js add (bad) xchg (bad) mov sub js add sti stc and fwait add add xchg or ljmp ret arpl roll and mov scas test hlt push fnsave test lock imul dec enter push (bad) dec mov rcrb jmp notl push jle lahf lods push repz aaa std adc popl das add inc inc jecxz mov es mov sbb (bad) bound mov lret into dec mov ss mov (bad) movsb ret out or inc loopne inc cmp dec sub inc ja push or nop pop push imul mulb mov cli in fldcw aas cltd cwtl sbb dec and adc xor fldt push outsl push sbb push xor add inc sbb xchg sub sbb add idiv js push inc add stc cmp jg or sub lcall rcrl sub mov mov (bad) xchg jae in fs imul xor push add in push mov mov sarb cmp jmp push jle cmp lahf std adc popl das add (bad) inc pop jecxz and es mov mov test push pop pushf lds xchg out test out dec mov ss mov jbe ret add cs (bad) lock rorb xchg sbb push cs push in mov sbb ret js notb hlt push test jmp and jmp or jge imul clc adc push xor xlat and sub icebp cmp aaa es or adc adc sbb cmp call cmp xor pop mov cmc in mov out loop insl inc mov mov xchg mov test lods fimull iret and dec mov jge sarl jns vpacksswb add into lcall mov aam sub aaa push loope and adc mov stos lods outsb sbb mov out jmp cmc jne std fistp fcoml mov leave (bad) ficomp push clc cwtl and xor test mov lret pop push in (bad) mov mov pop stos inc cmp (bad) jae in data16 scas das mov push scas ret cmp int3 cmp xchg jbe out rep insb xorl addr16 jp fwait dec push dec ja out pop leave push mov pop mov jl,pt out les sub adcl rorl dec cmpsb xor daa fldcw out aam (bad) mov xchg mov test inc fimull movsb and lods mov iret aas rorl ret jge jns (bad) repnz push gs jecxz mov push and and push add insb je add push add add add add and add add or test add add add adc add add add add into or add add add add add add add or add add addb adc or adc or adc or adc adc add adc adc push sbb add sbb add sbb sbb and and add and add and sub sub add sub xor add xor cmp add ss add cmp add cmp add das add xor inc cmp add xor inc cmp add xor inc cmp add sub inc cmp add and inc xor inc xor add adc dec cs add or dec sub add add dec sub add add push sub add pop xor add add pop xor add push add add or pop cmp add or pusha cmp add push add adc arpl adc arpl cmp add add add pop add pop add sbb inc sbb inc sbb gs sbb inc sbb inc push add add and pop inc add sub push inc add xor push inc xor push inc xor push inc xor add cmp push dec cmp push dec add add add inc add inc add inc add dec add dec add dec add push add push add add dec add inc add inc add (bad) incl jo xor add sub jno sub jb sub jae sub je sub jne sub add xor jp xor jp xor jnp add add cmp jle cmp jg cmp andb (bad) inc add push addl insb inc add insl dec add outsl push add jo add jno add je add ja add jp add jge add andb andl fwait andl test popf xchg sahf mov lahf mov mov mov mov nop jnp lahf nop jge mov xchg jl test xchg jg stos cwtl jg stos cwtl addb cltd addl mov test mov xchg add add mov mov mov mov mov mov mov mov mov lea mov mov mov nop add movsb xchg add movsb cltd add movsb lahf add movsl mov add test cmpsl add lods cmpsb xorl add scas pushf add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov mov add mov mov lret (bad) mov int3 ret mov add (bad) mov add leave les into lret into int3 lret int add iret into add rcl add rcl add aam add aad add xlat xlat add (bad) add fcmovnu add fstp add (bad) add (bad) add (bad) add loopne add loope add loop add jecxz add in add out add out add jmp ljmp in in add out out add out out add lock add icebp lock repnz add repnz repz cmc testb cmp stc add stc cli add sti sti add pop cld add std std add std std add or or push add add or (bad) fldz out neg call adc adc or (bad) xchg (bad) loop loopne loop jmp hlt idiv std std std stos shlb (bad) pop push pop scas ret ror into rcl fsub loop out lock stc std std movsb cmpsl xchg nop mov mov enter enter xlat fsub loop out div std std std std lahf mov push push (bad) enter mov rcl (bad) loopne out out div idiv std std cltd cltd (bad) (bad) pop dec pop mov mov into rcl fsub call idiv std std std xchg xchg jbe dec xchg into mov mov mov (bad) xlat (bad) fsub loop out cmp std std std std xchg mov mov mov ret (bad) mov rcl rcl rcl rcl loop std std mov mov mov mov cmpsl cmpsl xchg mov rcl fstpl mov (bad) mov mov (bad) (bad) (bad) pop pop pop push adc push push scas rcl rcr (bad) adc xchg pop push push push push push push push push push push push sbb rol rcl fldl mov (bad) pusha pop pusha push push sbb sbb push pop pop mov cmpsl rol (bad) pop pop test mov imul scas mov std std std std std std std xchg mov adc inc mov int3 xlat fsub call stc stc div div out out stc nop mov (bad) fcoml jle mov call div out out out adc cmpsl stos stos mov scas inc outsb outsb outsb outsb outsb imul div hlt out out call movsb mov test jae js outsb js std std hlt out out out out call lahf lahf cmpsl cmpsl mov inc imul arpl and std imul jmp loop (bad) mov mov ds dec and and and and and fdivr call xchg mov pop or cmp inc sub sub and and jmp loopne xlat xchg cltd cmpsl pop or imul (bad) call outsb std loopne ffree jnp mov pop or jle enter call pop dec jbe shr fcoml mov jb xor cmp loop jmp sub outsb js sbb jl mov pop pop jb xor xor mov call outsb outsb outsb imul jle test pop jb xor inc ds idivl imul jb jnp jle test jbe cmp sub imul jae jbe jnp test xor cmp cmp inc inc imul jbe jnp jle push push outsb je cmp cmp ds inc inc inc xchg jae jbe jnp dec push outsb je cmp cmp cmp je inc imul js dec push imul xor sub xor xor xor cmp inc inc inc imul test mov mov mov xchg cmp jnp mov lahf lahf lahf lahf pop lahf lahf lahf lahf lahf lahf lahf lahf pushf lcall cmpsl cmpsl stos mov add sub add adc add and add add or add add inc add add lcall mov xchg mov xchg stos xchg jnp mov xchg scas popf test mov mov mov mov mov popl mov mov inc add daa add pop xor add add (bad) gs add addl xor add cmp push dec sbb je and add sbb dec add or insb dec push add sbb push and add ljmp je and outsl dec push add push and xchg add jae add sub add cmp add sbb push daa add xchg jnp add (bad) incl dec sub add xor jno sbb into int add xor nop jbe add jno cmp daa add xor add add lods sahf xchg add (bad) incl hlt hlt testb jbe add dec push add jecxz add jbe add xchg mov jge cmp sub mov mov mov mov add (bad) add std incl out out icebp sbbl add in add (bad) lret jae add mov shrb add or pop adc dec xor add adc add add cmp add pop dec xor loop fild call jle add cwtl addb mov add cmp add push and andb xchg add and cwtl mov out out out add jmp add in in add cwtl jle mov mov sarb xor mov scas add adc xchg add mov testl lock out add lock lock aad add cwtl add iret leave add inc add mov push mov pushf add lret loopne aam in loope std cld incb mov mov add mov add rolb mov add push add sub xor and add and add inc cmp jae push add mov lods add fmul add inc add test mov mov stos add (bad) jbe popf mov jg add add dec add cmp cmp xor jecxz ret add fcmovne add xor add dec xor cwtl nop mov (bad) sarb sarb add lds add fxch add in add in in ljmp add jnp add inc add push add mov mov lods add sarb fcmovnu fiaddl out out div testl cli sti sti add andl mov cmp add inc add pop add rcl add lret leave add int3 leave add aad add loopne add ljmp stc cli stc add push add sbb add and sub and and adc add add add daa and pop push push add lods lods add iret into add out add hlt hlt add rol loopne loop in out call in jno rcl rcl aad xlat fcomp fcmovu (bad) (bad) xor ret (bad) (bad) enter int3 int into iret (bad) mov mov mov mov (bad) xor stos stos lods lods scas cmp xchg xchg xchg xchg cwtl cltd lcall mov mov xor xor nop xchg xchg xchg jns jnp jge jg addl insl outsb sub xor jae jne ja pop pop pop pop pusha popa bound fs dec dec dec dec push push push push push push push push pop pop pop pop cmp ds inc inc inc inc inc inc inc inc dec dec dec dec sub xor xor ss sub sbb and and es sub sub sub movups adc adc sbb sbb add add or or or add (bad) incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add andl inc jb outsb je outsb popa jae insb add notb add sldt jg add inc add incl add nop dec add dec add pop imul add add enter (bad) (bad) (bad) incl add add nop dec add add add nop dec add nop dec add nop dec add add add add add push sbb (bad) (bad) (bad) incl add add nop dec add add add nop dec add nop dec add nop dec add add add add add add shlb add (bad) (bad) incl add add nop dec add (bad) (bad) incl add add inc add dec add inc add add inc add dec add inc add add int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov mov call push push push mov movl movl movl movl movl push call mov lea call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl cmpw je movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov push push call mov lea call push push push push call lea push lea push push call add lea call movl push push push call movl push call movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov mov movl lea lea call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl push call movl push call push push mov push mov push call mov mov movl movl movl push lea push lea push call lea push call mov mov lea call movl mov push mov push fldl call test je jmp movl cmpl jne push push call movl jmp movl mov mov push lea push call movl push push call fstpl movl push push call fstpl movl movl movl or test je movl movl movl lea push lea push lea push call mov lea call movl movl movl movl movl lea lea call lea push push lea push lea push call movl movl lea push lea push call mov lea push lea push lea push push call add movswl test je jmp movl movl movl lea push lea push call movswl test je jmp jmp movl movl movl push push lea push lea push call add push lea push call mov lea call movswl test je jmp movl mov cltd mov idiv mov movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl lea lea call movl movl push push push push mov push push lea push call mov call mov mov movl lea lea call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl movl movl lea lea call fwait push jmp lea push lea push push call add lea call lea push lea push lea push lea push push call add ret lea call lea call lea call lea call lea call lea call ret mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf pushf (bad) or (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp adc add add add or ror or fmulp or dec add sub or dec or or or mov leave or cs or cmp or jne add pusha leave or js or mov or cwtl leave or cmpsb leave or mov leave or or leave or loop or hlt leave or add or push lret and or xor or inc lret push lret push lret mov or sahf lret mov or ret add add andb adc or call lret add or adc or and or cs or inc lret or push lret or (bad) lret or jbe or mov or add adcb or mov or ret add lret or repnz or cld lret or or or push int3 or and add sub or cmp or add add dec push push inc push dec xor inc dec dec add xchg add jbe popa push popa jb jae inc je push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add bound outsb add mov pop pop jbe popa inc jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor xor pop pop jbe popa push je inc popa je sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor add pop pop jbe popa dec outsb inc jb outsl jb add pop pop jbe popa inc jns fs cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add bound imul add addl popa inc jns popa jb add add inc dec push pop push dec dec dec pop inc fs data16 pop pop jbe popa inc jns xor xchg add jbe popa push popa jb jae inc jno or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl cmpsb add jbe popa inc jo insl jo jns add bound js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa inc gs ja gs add push add dec insb outsl add lcall inc imul rolb pop pop jbe popa dec outsb push je add testl popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec add pop pop jbe popa push popa jb fs pop pop jbe popa push popa jb jne add pop pop jbe popa push popa jb popa je dec gs inc popa insb insb dec add pop pop jbe popa push popa jb gs bound fs data16 push add dec popa je outsb add add jbe popa push je dec outsl jbe add mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound add 