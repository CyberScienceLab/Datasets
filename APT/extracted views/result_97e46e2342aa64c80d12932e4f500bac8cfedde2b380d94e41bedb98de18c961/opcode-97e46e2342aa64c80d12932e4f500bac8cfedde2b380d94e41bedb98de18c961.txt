push mov push call test jne push call pop ret nop nop nop nop nop nop nop push mov lea push push push push movl call mov pop ret nop nop nop nop nop nop nop nop nop nop push push push push call add push push call push mov movl call mov push call mov mov push call mov add test je lea push push push push push call mov test je mov push push call mov push push push mov push push call mov push mov call mov push call test je mov push call mov pop test pop je mov push call call pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov push push call mov test jne pop xor pop ret push push push push push push push call mov cmp jne pop xor pop ret mov lea push push push push push movl call push call pop mov pop ret nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov mov test je mov mov add test je mov test je mov mov add add xor test jbe jmp mov mov mov add push push call add test je mov inc add add cmp jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop pop lea mov pop mov add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret nop mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov add call test je call cmp jb mov lea push push mov push push mov mov movb movb mov movb mov movb movb movb call add cmp je mov mov mov rep mov mov add mov mov mov jmp mov mov add add mov mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub push push push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push call mov mov test mov je mov test jbe push call mov add test je push push call add test je sub mov lea mov rep call mov test je cmp jne push push call add test je push call mov mov pop pop pop pop add ret pop pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub lea movb push push movl call push call test je mov mov lea movl push push push push push call test je movb mov push call mov and add ret nop nop nop nop nop nop sub push call test jne add ret push push call mov test jne add ret push mov xor lea movl rep lea push call mov pop cmp je cmp je xor add ret mov add ret nop nop nop nop nop nop nop sub push push push mov push push mov call add test je mov push push call mov push call test jne mov lea mov push rep stos stos push lea push push call lea push call add test je lea push push call lea push call test jne pop pop pop pop add ret lea push push call add mov pop pop pop pop add ret lea push push call add mov pop pop pop pop add ret mov pop pop pop pop add ret nop nop nop nop nop nop nop sub push mov xor lea movb rep stos stos lea push push call mov lea push push push push call pop add ret nop nop sub push push mov push push push push call xor xor mov mov mov lea mov mov mov push rep stos lea push stos call mov or xor lea repnz not sub push mov mov mov or repnz mov dec shr rep mov push and push push push rep mov lea push push mov mov mov mov mov mov call mov cmp je lea lea push lea push push push call push call jmp lea lea push push movw movw movw movw mov call lea lea push push call mov mov mov mov mov mov mov mov push push push push push push push call mov cmp je lea lea push lea push push push call push call push push call pop pop pop pop add ret nop nop nop nop nop nop nop nop nop nop sub push push push push xor mov xor lea mov push rep stos stos lea push call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call add test jne pop pop pop mov pop add ret xor call cmp jae mov jmp lea movl push call mov add xor cmp sete inc mov call test je mov mov xor lea mov rep mov push stos stos lea push push call cmp jne cmp jne lea push lea push push call lea push call add pop pop pop pop add ret mov mov lea push push push call lea push call add pop pop pop pop add ret cmp jne cmp jne push call push push lea push push call add pop pop pop pop add ret mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep mov mov mov lea mov lea rep stos lea mov push push stos push lea push push movl mov call add lea lea lea push push push push push push push push push push call pop pop pop pop add ret nop mov sub test push jne mov push mov lea rep lea movl push call test pop jne lea movl push call test je mov dec je dec jne mov cmp jne mov cmp jne mov pop mov add ret cmp jne mov pop mov add ret test jne mov pop mov add ret cmp jne mov test jne cmpb jne mov pop mov add ret mov pop mov add ret cmp jne mov pop mov add ret cmp ja mov pop mov add ret movl xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov sub test push jne lea push push call lea push push call lea push call test mov jne push call mov push push call test jne mov shr jne push lea push push call add push call pop add ret nop nop nop nop mov sub mov push push push cmp push je cmp je test jne push call add mov pop pop pop pop add ret cmp jne pop pop pop mov pop add ret mov xor mov xor lea mov rep stos mov push stos lea push push call lea push call mov xor lea mov rep mov add stos lea push push push stos call mov xor lea mov rep stos stos mov xor lea mov rep stos stos lea push push call lea lea push push push push call lea push push call add test je lea lea push push call add test je mov xor lea mov rep stos lea push push push call mov mov lea xor rep mov lea rep lea lea push push call mov xor lea add rep mov push movl movl movl mov mov movl call push push call lea push call test je mov cmp je push push call mov push call pop pop pop xor pop add ret lea push push call add test je mov xor lea mov rep stos lea push push push stos call mov xor lea mov rep stos lea push push stos call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call add test je mov xor lea mov rep lea lea stos push push push push stos call lea lea push push call add lea push lea push push call lea push call add push call push mov call lea lea push push call add test je call push call pop pop pop mov pop add ret nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 mov push call xor cmp setne mov ret nop nop nop nop nop nop nop nop nop nop sub push push mov push push push push push push push call mov cmp mov jne pop xor pop add ret lea movl push push movl call test je mov mov mov push push push push push mov push mov call test mov je push push push call mov add push push push push push call mov pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov mov pop pop mov pop ret nop nop nop nop nop sub push xor push push push movl call mov test jne pop pop add ret push lea push push movl call mov push call lea push push call test je mov lea push push call add push call add test jne mov mov lea push push call mov mov cmp je lea push push call test jne push call pop pop mov pop pop add ret mov push call pop pop mov pop pop add ret nop push push call ret nop nop nop nop nop nop sub push push xor mov xor lea mov rep call mov cmp jne pop xor pop add ret lea movl push push call test jne pop pop add ret push lea push push movl call mov push call mov push call add cmp jl mov lea push push push call add test jne mov mov lea push push call mov mov cmp je lea push push call test je jmp mov push call pop pop mov pop pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call add ret nop nop sub mov lea push push push movl call mov push push lea push push push push movl call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov cmp jb cmpl je push call xor ret nop nop push mov push mov push mov push push push push push push push call test jne push push push push push push push call test jne pop pop pop ret pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push push push push mov test jne mov test je push push call test jne mov mov add cmp je mov mov mov add add add mov lea test je mov push push call add test je mov add add add test jne pop pop pop xor pop ret xor mov mov add pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov push push push push push call ret nop nop nop nop nop nop mov sub cmp push push push mov jne mov push call add mov xor cmp mov je push lea push push call mov push lea push push call add push call mov mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov push push call push mov call mov cmp je cmp jne push push call mov cmp jne push push call mov mov cmp jne push push call mov cmp je cmp je cmp je mov cmp je cmp je cmp je lea push push push mov call push call mov push push call add push push push call mov cmp je push push call mov add test je push lea push push push push call test je push push call mov add test je push push push push push call test je mov test je push push push call add mov jmp push push push push push push push call mov neg sbb neg mov mov test pop je push call test je push call mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub push push push push push call mov push push call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov mov xor lea movl mov rep or mov mov mov mov mov push lea xor mov mov push push lea push push push mov mov mov movb movb movb movb movb movb movb movb movb mov mov call cmp jae mov lea push lea push push push push call cmp jae push lea push push lea push push push mov movl call cmp jae mov mov mov push lea push mov mov sub add mov lea lea lea push push push push mov call cmp jae mov lea mov push lea push lea push push push mov call cmp jae mov lea sub push mov call push call cmp jae mov mov mov mov mov mov mov lea mov push lea push lea push push push push lea push push mov mov call cmp jae mov cmp je mov mov testb jne mov push push call mov pop pop pop pop add ret nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov push push call add pop pop ret pop or pop ret nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov mov push push push call add pop pop ret pop or pop ret nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop mov push test je push push mov mov test mov jne shr jne jmp mov inc mov inc dec je test je test jne mov shr jne and je mov inc mov inc test je dec jne mov pop pop pop ret test je mov inc dec je test jne mov shr jne mov inc dec jne pop pop mov pop ret mov add dec je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor dec je xor mov add dec jne and jne mov pop pop pop ret push pushl call pop pop ret push mov push push push mov push mov sub push push push mov xor cmp jne pushl call pop jmp mov cmp jne push call pop jmp mov cmp jne mov cmp ja push call pop mov push call pop mov cmp je cmp ja push push push call add test je mov jmp push call pop mov cmp je mov dec mov cmp jb mov push push pushl call push call mov push push call add cmp jne cmp jne push pop mov add and mov push push pushl call mov cmp je mov dec mov cmp jb mov push push pushl call push pushl call add orl call cmp jne cmp jne push pop add and mov push push push pushl call mov mov cmp jne cmp je push call pop test jne jmp mov mov xor push call pop ret cmp jne cmp ja cmp jbe add and jmp push pop mov mov cmp ja push call pop movl lea push lea push push call add mov mov test je cmp jae mov shr push push pushl pushl call add test je mov mov jmp push call pop mov test je movzbl shl mov cmp jb mov push pushl pushl call push pushl pushl call add mov cmpl jne push push pushl call mov test je movzbl shl mov cmp jb mov push push pushl call push pushl pushl call add jmp push push push pushl call mov orl call mov cmp jne cmp je push call pop test jne jmp mov mov push call pop xor ret xor cmp ja cmp jne push pop add and push push push pushl call cmp jne cmp je push call pop test jne xor mov mov pop pop pop leave ret push mov push push push mov push mov sub push push push mov test je mov cmp jne push call pop andl push call pop mov test je push push call pop pop orl call cmpl jmp push call pop ret cmp jne push call pop movl lea push lea push push call add mov test je push pushl pushl call add orl call cmpl jne pushl jmp push call pop ret push push pushl call mov mov pop pop pop leave ret pushl call pop ret pushl pushl call test jne call jmp xor test je push call pop or ret xor ret push mov sub mov push mov mov mov movl mov lea push lea pushl push call add decl mov js mov andb jmp lea push push call pop pop mov pop leave ret int3 int3 mov push push push mov mov test je mov test je mov mov mov inc cmp je test je mov inc cmp je test jne pop pop pop xor ret mov inc cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret mov cmp jne call push mov call test pop je mov xor mov and shrl mov mov shl add mov call test jne call xor jmp call mov call mov call call call call incl jmp xor cmp jne cmp jle decl cmp jne call call call call jmp cmp jne push call pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret mov cmp je test jne cmpl jne call pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 push cmp lea jb sub sub test cmp jae sub mov test mov mov mov push ret pushl pushl call pop pop ret cmpl ja pushl call test pop jne cmp je pushl call test pop jne xor ret push mov push push push mov push mov sub push push push mov cmp jne mov cmp ja push call pop andl push call pop mov orl call mov test je jmp push call pop ret cmp jne mov test je lea and jmp push pop mov cmp ja push call pop movl mov shr push call pop mov orl call mov test jne push jmp mov push call pop ret mov test jne push pop add and push push pushl call mov mov pop pop pop leave ret push push pushl call test mov jne ret mov andl andl push mov mov movl pop ret mov lea mov lea cmp jae mov sub cmp jb add jmp xor ret push mov sub mov push push mov mov push mov add sub shr mov imul lea mov mov dec test mov jne mov lea mov mov mov mov test mov jne sar dec cmp jbe push pop mov cmp jne cmp jae mov mov shr lea not and decb jne mov and jmp lea mov shr lea not and decb jne mov and mov mov jmp mov mov mov add mov mov mov mov mov mov mov sar dec cmp jbe push pop mov and mov jne sub mov sar push mov dec pop cmp jbe mov add mov mov sar dec cmp jbe mov cmp je mov mov cmp jne cmp jae mov mov shr not and decb jne mov and jmp lea mov shr not and decb jne mov and mov mov mov mov mov mov mov mov mov jmp mov cmpl jne cmp je mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or mov mov shr lea or jmp cmpb jne lea mov shr mov or lea mov shr lea or mov mov mov mov decl jne mov test je mov mov shl add mov push push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne push push pushl call mov pushl push pushl call mov mov lea shl mov mov sub lea push lea push push call mov add decl cmp jbe subl mov mov mov mov mov pop pop pop leave ret push mov sub mov mov push push lea push lea mov mov lea and mov sar dec cmp jge or shr orl mov jmp add or xor shr mov mov mov mov cmp mov jae mov mov and and or jne add cmp mov jb cmp jne mov cmp mov jae mov mov and and or jne add jmp cmp jne cmp jae cmpl jne add mov jmp cmp jne mov cmp mov jae cmpl jne add jmp cmp jne call mov test mov je push call pop mov mov mov cmpl jne xor jmp mov mov mov cmp mov je mov mov and and or jne mov mov and and andl lea or mov jne mov incl and add mov and or je mov mov xor imul lea mov mov and jne mov push and pop test jl shl inc jmp mov mov mov sub mov mov sar dec cmp jle push pop cmp je mov cmp jne cmp jge mov mov shr mov lea not mov and mov decb jne mov mov and jmp lea mov shr mov lea lea not and decb mov jne mov mov and jmp mov mov mov cmpl mov mov mov mov je mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov jge inc cmpb mov jne mov mov shr or mov mov shr mov or jmp inc cmpb mov jne lea mov shr or mov lea lea mov shr or mov test je mov mov jmp mov mov add lea mov mov mov mov test lea mov jne cmp jne mov cmp jne andl mov mov lea pop pop pop leave ret mov mov push push xor cmp jne lea shl push pushl push pushl call cmp je addl mov mov mov push push lea pushl lea call cmp mov je push push push push call cmp mov jne pushl push pushl call xor jmp orl mov mov incl mov orl mov pop pop ret push mov push mov push push push mov mov xor test jl shl inc jmp mov push imul pop lea mov mov mov add dec jne mov push shl add push push push call test jne or jmp lea cmp ja lea orl orl lea movl mov lea mov movl add lea cmp jbe mov lea add push pop mov mov lea mov mov andl mov mov mov inc test mov mov jne or mov mov shr not and mov pop pop pop leave ret push mov sub mov mov push push push mov mov lea sub mov and shr mov imul lea mov mov dec cmp mov mov lea mov jle test jne add cmp jg mov sar dec cmp mov jbe push pop mov mov cmp jne cmp jae mov shr mov lea not and decb jne mov and jmp add mov shr mov lea not and decb jne mov and mov mov mov mov mov mov mov sub add cmpl jle mov mov sar dec lea cmp jbe push pop mov lea mov mov mov mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or lea mov mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov lea mov mov jmp mov lea mov mov jmp xor jmp jge mov sub lea mov lea mov mov sar dec mov cmp jbe push pop testb jne mov sar dec cmp jbe push pop mov cmp jne cmp jae mov mov shr lea not and decb jne mov and jmp lea mov shr lea not and decb jne mov and mov mov mov mov mov mov mov mov add mov sar dec cmp jbe push pop mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or lea mov mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov mov push pop pop pop pop leave ret cmpl push push push push jne mov jmp push push pushl call mov test je mov push push push push call mov test je push mov push push push call test je mov cmp jne cmpl jne mov cmpl jne mov jmp mov mov mov mov mov mov lea lea mov lea mov mov mov xor mov xor cmp setge dec and dec inc mov mov add cmp jl push push push call add mov add cmp jae orb lea mov movl add jmp mov jmp push push push call cmp je push push pushl call xor pop pop pop pop ret push mov push push pushl call cmp jne mov mov cmp je mov mov push push mov mov mov mov pushl call pop ret orl pop ret push mov push push push mov push cmpl je andl lea mov cmpl jne mov push add push push call test je orl decl mov test je cmp jbe mov incl decl je sub sub test jge cmpl mov mov je cmpl jne push lea pop cmpl jne inc add cmp jl cmp jne push call pop cmp je cmpl jg pop pop pop leave ret mov mov push mov cmp jbe cmp jb mov cmp je jmp test jne mov mov and cmp jb mov mov mov mov and sub mov sub pop sar lea ret xor pop ret mov mov sub sar lea mov movzbl add andb cmpl movl jne incl cmpl jne push call pop ret push mov push push push push mov push mov cmp je mov lea mov sub sub sar shl add cmp mov jae mov mov cmp jl cmp jbe push push push call add test jne mov mov add lea add cmp mov jb jmp mov mov mov lea mov cmp mov jae mov cmp jl cmp jbe push push pushl call add test jne mov addl add cmp jb jmp mov mov cmp je jmp mov sub mov jmp mov mov cmpl je cmpl jne mov cmp je jmp mov andl mov mov sub sub sar shl add cmpl jne cmpl jge add incl cmpl je mov push shl push push push mov call cmp jne push pushl push call mov add test mov jle lea mov orb lea mov mov mov mov movl add add decl jne mov lea cmp jae cmpl je add jmp cmp sbb and mov mov mov mov sub sub lea lea mov jmp call test je mov mov lea mov mov mov sub mov movzbl sub lea jmp xor pop pop pop leave ret push mov push mov mov push push mov push mov lea cmp mov mov mov jb lea mov cmp jae add sub jmp andl lea mov lea jmp add cmpb je mov lea cmp jae mov test jne push lea pop cmpb jne inc inc jmp cmp jae cmp jne mov jmp sub cmp jb mov mov jmp movzbl add lea cmp jb lea cmp jae lea cmp jae mov test jne push lea pop cmpb jne inc inc jmp lea cmp jae sub mov mov jmp andl lea mov mov add jmp cmp jae sub cmp jb mov jmp movzbl add jmp lea cmp jae sub mov mov jmp andl lea mov mov lea imul shl sub jmp xor pop pop pop leave ret push mov push mov push mov push movzbl push mov andl mov sub sar cmp lea jbe mov sub mov add movl jmp jae mov lea lea cmp ja lea cmp jae cmpb jne inc jmp cmp jne mov mov mov cmp ja cmp jbe lea cmp jae xor mov cmp jne inc cmpb je mov jmp andl lea mov sub add movl mov pop pop pop leave ret push mov pushl call pushl call pushl call pushl call pop ret push push mov mov mov test je cmp je cmp je cmp je cmp je push call pushl call pop add cmp jl pushl call pushl call pushl call pushl call pop pop ret push mov mov push cmpl lea jne push push call mov pop test jne push call pop push call cmpl pop push jne call mov jmp call pop push call pop pop pushl call pop pop ret push mov mov pushl call pop ret mov test je pushl call test pop je push pop ret xor ret push mov push andl call cmpw jne mov test je add mov mov mov mov pop ret push mov mov call lea push push movl call test je cmpl jne cmpl jb push pop jmp lea push push push call test je xor lea cmp je mov cmp jl cmp jg sub mov inc cmp jne lea push push push call add test jne lea jmp lea push push push call cmp lea je mov cmp jl cmp jg sub mov inc cmp jne lea push lea push call pop pop cmp je push push call pop cmp pop je inc mov cmp je cmpb jne mov jmp inc cmp jne push push push call add cmp je cmp je cmp je lea push call cmpb pop sbb add pop leave ret xor push cmp push sete push call test mov je call cmp mov jne push call pop jmp cmp jne call test jne pushl call xor ret push pop ret mov push cmp push jne push xor cmp push mov jle mov mov lea push push pushl call push push pushl call pushl push pushl call add inc cmp jl pushl push pushl call pop pop jmp cmp jne mov mov mov test je push push push call mov cmp jne pushl call pop pop ret int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop inc pop add insb pop add nop pop add and mov mov mov mov mov shr mov add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov inc shr inc cmp jb rep jmp lea punpcklbw adc pop add hlt pop add in pop add in add fcompl adc pop add int3 pop add mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov sub adc pusha add cmp add push pusha add mov pop pop leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop enter call popa add mov and mov dec shr dec cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea fs add insb popa add je add jl add test adc add cmpsl popa add mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov shlb enter fsubs adc popa add mov pop pop leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov mov mov ret push push push mov push push push pushl mov mov mov mov cmp je cmp je lea mov mov mov cmpl jne push mov call call jmp popl add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov pop pop ret int3 int3 push inc xor pop inc xor push mov sub push push push push cld mov mov testl jne mov mov mov lea mov mov mov cmp je lea cmpl je push push lea call pop pop mov or je js mov push call add lea push push call add lea push mov call mov mov call mov lea mov jmp mov jmp mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret push mov mov mov push mov push call add pop ret push call mov xor mov mov cmp je add inc cmp jb cmp jb cmp ja call movl pop ret call mov pop mov ret cmp jb cmp ja call movl pop ret call movl pop ret call add ret call add ret push mov push push mov mov mov test je test jne test je andl test je mov and mov mov mov andl andl and or test mov jne cmp je cmp jne push call test pop jne push call pop testw push je mov mov sub lea mov mov dec test mov jle push push push call add mov jmp cmp je mov mov sar and mov lea lea jmp mov testb je push push push call add mov mov mov jmp push lea pop push push push call add mov cmp pop je orl jmp mov and jmp or mov or pop pop pop ret push mov sub push push mov xor push mov mov inc test mov mov mov je mov mov jmp mov mov mov cmpl jl cmp jl cmp jg movsbl mov and jmp xor movsbl sar cmp mov ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orb jmp orl jmp cmp jne lea push call test pop mov jge orl neg mov jmp mov movsbl lea lea jmp andl jmp cmp jne lea push call test pop mov jge orl jmp mov movsbl lea lea mov jmp cmp je cmp je cmp je cmp jne or jmp orl jmp orl jmp cmpb jne cmpb jne inc inc orb mov jmp andl mov andl movzbl testb je lea push pushl movsbl push call mov add inc mov lea push pushl movsbl push call add jmp movsbl cmp jg cmp jge cmp jg je sub je dec dec je dec dec je sub jne testw jne or cmpl mov je mov lea push call testw pop mov mov je test jne mov mov movl mov mov dec test je cmpw je inc inc jmp movl add orl cmpl lea mov jge movl jmp testw jne or testw lea push je call push lea push call add mov test jge movl jmp sub je sub je dec je jmp call pop mov movl lea mov jmp lea push call test pop je mov test je test je movswl shr mov mov movl jmp andl mov movswl jmp mov mov push jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call test pop mov je mov mov jmp movl mov pushl add mov pushl mov mov mov mov movsbl push lea push push call mov add and je cmpl jne push call pop cmp jne test jne push call pop cmpb jne orb inc mov push call pop jmp sub je sub je dec je dec je sub je dec dec je sub jne movl jmp sub sar jmp test jne mov mov mov mov dec test je cmpb je inc jmp sub jmp movl movl testb movl je mov movb add movl mov jmp testb movl je or jmp lea push call testb pop je mov mov jmp mov mov movl jmp orl movl testb je lea push call pop jmp testb je testb lea push je call pop movswl cltd jmp call pop movzwl jmp testb lea push je call pop jmp call pop xor testb je test jg jl test jae neg adc mov neg orb mov jmp mov mov testb jne andl cmpl jge movl jmp andl mov cmp jle mov mov or jne andl lea mov mov decl test jg mov or je mov cltd mov mov push push pushl pushl call push push pushl mov add pushl call cmp mov mov jle add mov decl mov jmp lea sub incl testb mov je mov cmpb jne test jne decl inc mov movb mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub test jne lea push pushl push push call add lea push lea pushl pushl push call add test je test jne lea push pushl push push call add cmpl je cmpl jle mov mov lea mov inc push lea push inc call pop test pop jle lea push pushl push lea push call add mov dec test jne jmp lea push pushl pushl pushl call add testb je lea push pushl push push call add cmpl je pushl call andl pop mov mov inc test mov jne mov pop pop pop leave ret sub adc add adc data16 cwtl data16 mov data16 insl add push mov mov decl js mov mov mov incl movzbl jmp push pushl call pop pop cmp mov jne orl pop ret incl pop ret push push mov mov dec test jle mov push pushl pushl call add cmpl je mov dec test jg pop pop ret push mov mov dec push push test jle mov mov movsbl push inc pushl push call add cmpl je mov dec test jg pop pop pop ret mov addl mov mov ret mov addl mov mov mov ret mov addl mov mov ret int3 int3 int3 int3 lea pop ret lea lea xor mov push mov shl mov test je mov inc cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret mov test je call push push call push push call add ret push push pushl call add ret push push push call add ret push call push pop cmp jne pushl call push call cmpl push mov mov mov jne mov test je mov push lea cmp jb mov test je call sub cmp jae pop push push call pop pop push push call pop pop test pop je call pop ret pushl mov call pop ret push call pop ret push call pop ret push mov cmp jae mov test je call add jmp pop ret push call call cmp mov je push push call mov pop test pop je push pushl call test je push call pop call orl push mov pop pop ret xor pop ret call mov cmp je push call orl ret mov movl movl ret push push call pushl mov call mov test jne push push call mov pop test pop je push pushl call test je push call pop call orl mov jmp push call pop push call mov pop pop ret mov cmp je push mov test jne push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop push pushl call pop ret push mov sub push push push push call mov pop test jne push call pop mov movl lea cmp jae andb orl andl movb mov add add jmp lea push call cmpw je mov test je mov lea lea mov mov cmp jl mov cmp jge mov push call test pop je addl mov lea cmp jae andb orl andl movb mov add add jmp add cmp jl jmp mov xor test jle mov mov cmp je mov test je test jne push call test je mov mov sar and mov lea lea mov mov mov mov mov addl inc inc cmp jl xor mov lea cmpl lea jne test movb jne push pop jmp mov dec neg sbb add push call mov cmp je push call test je and mov cmp jne orb jmp cmp jne orb jmp orb inc cmp jl pushl call pop pop pop leave ret push push push mov mov test je mov add cmp jae lea cmpl je push call mov add add add cmp jb pushl call andl pop add cmp jl pop pop pop ret push xor cmp push push jne call mov xor mov cmp je cmp je inc push call pop lea jmp lea push call mov pop cmp mov jne push call pop mov cmp je push push call mov pop inc cmpb je push call cmp pop mov jne push call pop push pushl call pop add pop add cmp jne pop pushl call pop mov mov pop pop movl pop ret push mov push push push xor cmp push push jne call mov push push push call mov mov mov cmp je mov lea push lea push push push push call mov mov lea push call mov add cmp jne push call pop lea push lea push mov lea push push push call mov add dec mov pop pop mov pop leave ret push mov mov mov push push andl mov push mov movl mov test je mov add mov cmpb jne mov inc cmp je test je movzbl testb je incl test je mov mov inc inc incl test je mov mov inc jmp incl test je andb inc cmpb jne inc jmp incl test je mov mov inc mov inc movzbl testb je incl test je mov mov inc inc cmp je test je cmp jne test jne dec jmp test je andb andl cmpb je mov cmp je cmp jne inc jmp cmpb je test je mov add mov mov incl movl xor cmpb jne inc inc jmp cmpb jne test jne xor cmp je cmpb lea jne mov jmp mov mov xor cmp sete mov shr mov dec test je inc test je movb inc incl dec jne mov test je cmpl jne cmp je cmp je cmpl je test je movzbl testb je mov inc inc incl mov mov inc jmp movzbl testb je inc incl incl inc jmp test je andb inc incl jmp test je andl mov pop pop pop incl pop ret push push mov push push mov push push xor xor xor cmp jne call mov cmp je movl jmp call mov cmp je movl jmp cmp jne cmp jne call mov cmp je cmp mov je inc inc cmp jne inc inc cmp jne sub mov sar push push inc push push push push push push mov call mov cmp je push call cmp pop mov je push push push push pushl push push push call test jne pushl call pop mov mov push call mov jmp cmp jne cmp jne call mov cmp je cmp mov je inc cmp jne inc cmp jne sub inc mov push call mov pop cmp jne xor jmp push push push call add push call mov jmp xor pop pop pop pop pop pop ret mov cmp je test jne cmpl jne push call mov pop test je call push call pop ret push mov sub mov xor mov cmp je add inc cmp jb push mov shl cmp jne mov cmp je test jne cmpl je cmp je lea push push push call test jne lea push push call pop pop lea push push lea call inc pop cmp jbe lea push call mov lea sub push add push push call add lea push push call lea push push call lea push push call pushl lea push call push lea push push call add pop jmp lea lea push push pushl call pop push pushl push call push call pop leave ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop mov jns adc jns adc rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov inc shr inc cmp jb rep jmp lea outsl jp adc adc adc adc adc add xor add sub add mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov mov adc jp adc inc or leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop sub adc add jo add mov and mov dec shr dec cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea les adc jnp adc jnp adc jnp adc jnp adc jnp adc jnp adc jl adc inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov and sub cmp dec jl adc leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov push mov cmp jb neg and je sub mov inc dec jne mov shl add mov shl add mov and shr je rep test je mov inc dec jne mov pop ret mov ret push pushl pushl pushl call add ret push mov sub push andl push push mov mov lea mov cmpl jle movzbl push push call pop pop jmp mov movzbl mov and test je mov inc jmp cmp mov jne orl jmp cmp jne mov inc mov mov test jl cmp je cmp jg push test pop jne cmp je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmp jne mov cmp je cmp jne mov inc inc mov or xor divl mov mov cmpl movzbl jle push push call pop pop jmp mov mov and test je movsbl sub jmp cmpl jle push push call pop pop jmp mov mov and test je movsbl push call pop mov sub cmp jae mov orl cmp jb jne or xor divl cmp jbe orl jmp imul add mov mov incl mov jmp mov decl mov test jne test je mov mov andl jmp test mov jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp mov and neg sbb neg add mov test je mov mov testb je mov neg mov mov jmp mov test je mov xor pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov jecxz mov mov mov xor repnz neg add mov mov repz mov xor cmp ja je dec dec not mov pop pop pop leave ret push mov cmp jae mov mov sar and mov lea testb je push push call pushl pushl push call push mov call add mov pop pop ret call movl call andl or pop ret push mov push push call cmp pop jne call movl jmp pushl push pushl push call mov cmp jne call jmp xor test je push call pop or jmp mov and sar mov mov lea andb lea mov pop pop ret push mov cmp jae mov mov sar and mov lea testb je push push call pushl pushl push call push mov call add mov pop pop ret call movl call andl or pop ret push mov sub push push push xor cmp mov mov jne xor jmp mov sar lea mov and lea mov shl testb je push push pushl call add mov add testb je mov cmp mov mov jbe lea mov sub cmp jae mov incl mov cmp jne incl movb inc mov inc mov lea sub cmp jl mov lea sub lea push push lea push push mov pushl call test je mov add cmp jl mov sub cmp jb xor mov cmp jne cmp je push pop cmp jne call movl call mov jmp call mov jmp lea push push pushl pushl pushl call test je mov mov mov jmp call mov jmp pushl call pop or jmp mov testb je mov cmpb je call movl call mov jmp sub pop pop pop leave ret incl push call pop mov test mov je orl movl jmp orl lea mov movl mov andl mov ret mov cmp jb xor ret mov and sar lea mov mov and ret mov push push test pop jne mov jmp cmp jge mov mov push push call pop mov test pop jne push push mov call pop mov test pop jne push call pop xor mov mov mov add add cmp jl xor mov mov mov sar and mov lea mov cmp je test jne orl add inc cmp jl pop ret call cmpb je jmp ret mov mov cmp jb cmp ja sub sar add push call pop ret add push call ret mov cmp jge add push call pop ret mov add push call ret mov mov cmp jb cmp ja sub sar add push call pop ret add push call ret mov cmp jge add push call pop ret mov add push call ret int3 int3 int3 mov test je mov inc test je test jne add mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret push mov push push mov push push call mov xor cmp je push call push call pop push pop pushl pushl call pop mov test pop je push call pop jmp push call mov pop pop pop pop ret push mov mov test jne pop ret cmpl jne mov cmp ja push mov pop pop ret lea andl push push pushl push lea push push push pushl call test je cmpl je call movl or pop ret int3 int3 int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov push push push mov push mov sub push push push mov imul mov mov cmp ja xor cmp jne push pop add and mov jmp xor mov cmp ja mov cmp jne mov cmp ja push call pop mov push call pop mov orl call cmp je pushl jmp xor mov push call pop ret cmp jne cmp ja push call pop movl mov shr push call pop mov orl call cmp je push push pushl call add cmp jne push push pushl call mov cmp jne cmp je push call pop test jne jmp xor mov push call pop ret mov mov mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp lea mov mov push test je mov inc test je test jne mov mov add xor xor add test je mov test je test je test je test je jmp lea jmp lea jmp lea jmp lea mov test je mov inc test je mov inc test jne jmp mov add mov mov add xor xor mov add test je test je test je test je test je jmp mov mov pop ret mov mov movb pop ret mov mov pop ret mov mov pop ret push mov sub push push push push call pushl call mov pop cmp pop mov jne xor jmp test je xor mov cmp je add inc cmp jb lea push push call push pop cmp jne push andl pop xor mov cmp rep stos mov jbe cmpb je lea mov test je movzbl movzbl cmp ja orb inc jmp andl push pop xor mov lea rep shl stos lea cmpb mov je mov test je movzbl movzbl cmp ja mov mov or inc cmp jbe inc inc cmpb jne incl add cmpl jb mov movl push mov call lea mov movsl movsl pop mov movsl jmp inc inc cmpb jne mov orb inc cmp jb push call pop mov mov jmp andl xor mov stos stos stos jmp cmpl je call call jmp or push call pop mov pop pop pop leave ret mov andl cmp jne movl jmp cmp jne movl jmp cmp jne mov movl ret mov sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret push push pop xor mov rep stos xor mov mov mov mov stos stos stos pop ret push mov sub lea push push pushl call cmp jne xor mov mov inc cmp jb mov movb test je push push lea movzbl movzbl cmp ja sub lea inc mov mov shr rep mov and rep inc inc mov test jne pop pop push lea pushl pushl push lea push push push call push lea pushl push push lea push push push pushl call push lea pushl push push lea push push push pushl call add xor lea mov test je orb mov mov jmp test je orb mov jmp andb inc inc inc cmp jb jmp xor mov cmp jb cmp ja orb mov add mov jmp cmp jb cmp ja orb mov sub jmp andb inc cmp jb pop leave ret cmpl jne push call pop movl ret push xor cmp push push jne push call mov cmp je mov push push call test mov je push push call push push mov call mov mov test je call mov test je mov test je push call mov pushl pushl pushl push call pop pop pop ret xor jmp push xor cmp jne mov cmp jl cmp jg sub pop ret push mov push push call cmp mov je push call push call pop push pop pushl call test pop mov je push call pop jmp push call mov pop pop pop ret push mov push cmpl push jne mov cmp jl cmp jg sub jmp mov cmp jge cmpl jle push push call pop pop jmp mov mov and test jne mov jmp mov mov sar movzbl testb je andb mov mov push jmp andb mov push pop lea push push push push push lea push push pushl call add test je cmp jne movzbl jmp movzbl movzbl shl or pop leave ret push mov push mov lea cmp ja mov movzwl jmp mov push mov sar movzbl testb pop je andb mov mov push jmp andb mov push pop lea push push push push push lea push push call add test jne leave ret movzwl and leave ret mov push cmp push jae mov sar lea mov and lea mov shl add testb je cmpl je cmpl jne xor sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop ret mov cmp jae mov and sar lea mov testb lea je mov ret call movl call andl or ret mov push mov and sar push push mov lea lea shl add cmpl jne push call cmpl pop jne lea push call incl push call pop mov lea push call pop pop pop ret mov mov and sar lea mov lea push call ret push push push xor call pop push pop cmp jle push mov mov shl mov test je testb je push call cmp pop je inc cmp jl mov mov add push call mov pushl call mov pop andl inc cmp jl pop push call pop mov pop pop ret push mov push call test pop je or pop ret testb je pushl call neg pop pop sbb ret xor pop ret push push mov xor push mov mov and cmp jne test je mov mov sub test jle push push pushl call add cmp jne mov test je and mov jmp orl or mov andl mov pop mov pop pop ret push call pop ret push push push push xor xor call xor pop cmp jle mov mov test je testb je push push call mov pop pop mov mov test je cmpl jne push call cmp pop je inc jmp cmpl jne test je push call cmp pop jne or mov pushl push call pop pop inc cmp jl push call cmpl pop mov je mov pop pop pop ret push call pop ret push mov push push push mov push mov sub push push push mov xor cmp jne push push push pop push push mov push push call test je mov jmp push push push push push push call test je movl cmp jle pushl pushl call pop pop mov mov cmp jne pushl pushl pushl pushl pushl pushl call jmp cmp jne cmp jne mov mov push push pushl pushl mov neg sbb and inc push pushl call mov mov cmp je mov lea add and call mov mov mov orl jmp push pop ret mov xor mov orl mov cmp je push pushl pushl pushl push pushl call test je push push push pushl pushl pushl call mov mov cmp je testb je cmp je cmp jg pushl pushl push pushl pushl pushl call test jne xor lea mov mov pop pop pop leave ret movl lea add and call mov mov mov orl jmp push pop ret mov xor xor orl mov cmp je push push pushl pushl pushl pushl call test je cmp push push jne push push jmp pushl pushl push push push pushl call mov cmp je mov jmp mov mov test push lea je cmpb je inc mov dec test jne cmpb pop jne sub ret mov ret push mov push push push mov push mov sub push push push mov mov xor cmp jne lea push push pop push push push call test je mov jmp lea push push push push push call test je push pop mov cmp jne mov cmp jne mov pushl pushl pushl pushl push call jmp cmp jne cmp jne mov mov push push pushl pushl mov neg sbb and inc push pushl call mov cmp je mov lea mov add and call mov mov mov push push push call add jmp push pop ret mov xor xor orl cmp je pushl push pushl pushl push pushl call cmp je pushl push push pushl call jmp xor lea mov mov pop pop pop leave ret push mov push or testb je andl jmp push call push call push mov call add mov pop pop ret push mov push or testb je push call push mov call pushl call add test jge or jmp mov test je push call andl pop andl mov pop pop ret push mov cmp push push jae mov sar lea mov and lea mov shl testb je push call mov pop testb je push call pop push call test jne call mov jmp xor test je call mov call movl or push call pop mov jmp call movl or pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl inc ret mov test je mov inc cmp jne inc or je test je mov add cmp jne or je cmp jne or je add jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je inc bts jmp mov or nop inc mov or je inc bt jae mov add pop leave ret int3 int3 push mov push xor push push push push push push push push mov lea mov or je inc bts jmp mov mov or je inc bt jae lea add pop leave ret push mov cmp jae mov mov sar and mov lea testb je push push call push call push mov call add mov pop pop ret call movl call andl or pop ret push mov push push call cmp pop je cmp je cmp jne push call push mov call pop cmp pop je push call pop push call test jne call mov jmp xor push call mov and sar pop mov lea andb test je push call pop or jmp xor pop pop ret push mov mov test je test je pushl call andw xor pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov lea cmpl jne mov mov or je mov inc mov inc cmp je sub cmp sbb and add add xchg sub cmp sbb and add add cmp je sbb sbb movsbl jmp lock cmpl jg push jmp lock push call movl mov xor nop or je mov inc mov inc cmp je push push call mov add call add cmp je sbb sbb mov pop or jne lock jmp push call add mov pop pop pop leave ret push mov push push push mov or je mov mov lea cmpl jne mov mov mov lea mov or mov je or je inc inc cmp jb cmp ja add cmp jb cmp ja add cmp jne dec jne xor cmp je mov jb neg jmp lock cmpl jg push jmp lock mov push call movl mov xor xor mov mov or mov je or je inc inc push push push call mov add call add pop cmp jne dec jne xor cmp je mov jb neg pop or jne lock jmp mov push call add mov mov pop pop pop leave ret push mov push cmpl push push push jne mov cmp jl cmp jg add jmp mov mov push cmp pop jge cmp jle push push call pop pop jmp mov mov and test jne mov jmp mov mov sar movzbl testb je andb push mov mov pop jmp andb mov mov push push lea push push push lea push push pushl call add test je cmp jne movzbl jmp movzbl movzbl shl or pop pop pop leave ret int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop (bad) popf add ds add xor add movsl mov add mov add and add xchg lahf add lret lahf add push mov add mov push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea adc add or adc add cmpsl add lea add shrl adc add xchg mov add scas stos add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov add add mov mov adc mov adc add xchg add xchg add nop nop nop nop nop nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push mov push mov push xor cmp mov jne mov mov cmp je mov cmp jl cmp jg add mov inc cmp jne jmp push push push push push push push mov pushl push push call mov add cmp je push call cmp pop mov je push push push push push pushl push pushl call add test je pushl pushl call pop pop pushl call mov pop pop pop pop leave ret jmp jmp jmp jmp add inc imul add (bad) stc in (bad) xor dec outsb les and jnp outsb jp jne es and mov cmp push mov movsl mov shl xchg inc push sub pop fstps pop flds rorb jg mov scas out aaa add in sahf adc sahf adc jge pop clc mov dec add mov (bad) dec fsubrs inc (bad) scas movsb add scas add in push (bad) arpl dec (bad) in dec (bad) fadds sbb enter sub stos ret xlat cmpsl pushf test rcl int (bad) stc or pop push (bad) rorb rorb sub push imulb sub pop lods sub jo ret das dec cmp cld (bad) cmc pop mov dec dec out push push dec lods cmpsb xchg mov enter nop jae lods xor xlat jmp loope inc aaa dec aas cs fmull mov or dec or aam loopne cwtl lock mov lret inc into enter fimull in insl cwtl jno fldl jmp ret out push test jle pop test cmp in out lods out add jb dec adc fcoms es sub mov lahf popa or test xlat push push or repz fmull xlat sub dec jg cmpsl sbbl fdivrs stos or les xlat loop jns cwtl push sub and aam add lods fadd jb in lods sbb aam ljmp insb fcoml inc xchg int3 dec cmp mov out ss pop rol es iret insb mov add in iret js push xchg lods pop or cmp inc hlt add ja rol pusha jne (bad) xchg test lahf fcmovnbe pop movsb sbb xchg loopne xchg lcall ficoml mov sbb in scas dec ss or movsl roll stos xchg ret push adc add cmc or mov scas add cld mov leave fmuls (bad) fcmovnbe clc repz (bad) loopne inc sbb aam arpl mov fimul pop add data16 js mov add gs cmp js push add cld int3 test gs and (bad) mov sti jge imul jo adc fs lret fucompp jge lret inc hlt lahf sub stc insl ret cwtl cmpsb loopne mov and ret out cwtl mov js cmpsl mov pop test in aas mov clc adc pop mov and pushf dec jecxz sub fucomp adc lcall mov push push nop mov movsb leave push popf into cmp mov inc cli in fimul insl and mov pushf or dec jmp add loopne (bad) enter mov adc mov mov xchg data16 push adc call dec cld mov xor mul xchg sbb jge cmc dec sti jmp pop lret sti sbb aam inc add push inc push rcrb xor int3 fs leave mov in inc inc adc jp inc and sub dec fucompp cmp adc imul mov call cmp ret test lods dec cmpsl xchg fsts sahf adc es in jle ljmp push out push add mov bound jmp rcll or dec adc push cmp dec aaa lea cmpsb cwtl icebp pop test movsb xchg loopne adc lret jnp cmpsl adc popf movsl cmp sarb rorl dec test ret dec outsb cmpsl (bad) mov lods add mov test ss shll dec add or xor sbb jecxz outsl cmp cwtl aas and and out or push or int3 sbb and pop push loope (bad) mov jp mov clc lds (bad) and stc mov and dec js push fsubrl loop (bad) pop ja adcl inc lds iret pop fadds (bad) inc pop loop lds lods ret and sbb sub test add out ljmp iret dec lcall cwtl cli mov xchg xorb mov test mov mov mov ret addr16 lock push push cmp lret loopne jg lock cmp gs rcll cld lahf sbb es mov mov push movsl mov add jb cli fbstp inc pop inc scas xchg cwtl push (bad) je mov fistpll pop dec ss and sub cmp cmp and dec pop mov loope call fisttpll xor or incl je fisttpll (bad) mulb repnz in iret fwait cltd in dec jmp daa adc dec js popf mov jl push popa sbb mov jno jl stos cmp pop xchg and test and xor push mov lret mov add dec cmp insb dec pop outsl imul and cmpsl sub es (bad) xor jp jmp cmc push push pop xor repz ss adc arpl icebp adc adc lock sub scas lock arpl jecxz lcallw sbb loopne cmpsl cs xor loopne xorb test std pop movsb leave or mov dec adc lret inc cmp je and pop adc pop or fcomp stc xlat lret (bad) out cwtl sbb or ficom test push cmp cmp xor mov (bad) aam dec js or fcoml out ljmp ret jecxz int mov xor jae mov jp sti inc (bad) (bad) (bad) xor xchg mov mov (bad) sbb xor sbb mov dec sbb and lock bnd leave dec icebp jl popf inc (bad) inc add mov add pop add mov jecxz cltd outsl outsl add enter ficom mov mov xor mov xorl mov push adc mov push and lret jp mov xchg sub cmp icebp dec sahf xor aaa imulb dec xor sbb cwtl and dec and movsl sub mov into sti cli cmp addl mov mov pop or xor pop jl push push ljmp mov into jp mov push test loope jnp dec sbb scas scas lea dec cltd arpl mov adc or mov fs nop clc movsl pop push add adc fsubrl aas mov pop (bad) push aaa xchg sub mov scas stos mov (bad) out sbb cld push mov sub push jle mov sbb jb in cmp or ret pop jns inc adc sub orl lods scas mov mov popf or dec loope and xchg mov mov aam stos or fldcw push mov shrb sahf inc push xchg xorl ret outsb test dec pop sbb adc pop cmp sbb jp insb lods pop (bad) stos jo add sbb sbb ret adc int lahf insl mov fs fs mov movsl test pop fs jge jecxz mull mov jecxz fidivr add (bad) lock mov (bad) jmp subl jae sub jmp sbb sbb popf aam out add mov xor xor or rorl push add push dec outsl mov jg mov div mov or pop pop imul push pop das (bad) ss mov insb ss adc and lahf or or mov mov out push data16 push jns add mov mov sub scas xchg xor add sbb pop out je mov sbb jae test xor lahf add repz pop ret sbb lcall inc adc cs mov push xchg test add mov push sti imulb hlt sahf mov mov pop push pop mov lret or mov imul loop faddp icebp or push in hlt mov mov mov ficoml ja sti mov cltd add and mov jnp cvtdq2ps mov lret inc cmp mov (bad) mov jbe and sbb xchg inc lcall mov pusha mov repnz ss int3 je cmp imul jmp iret jle sahf xchg add addl mov (bad) jl push movsb call xor pop xor les movsb js ljmp rolb inc ret ret dec scas add push xchg ds and fcoml push add negb orl aad lcall rolb xchg les lret js adcl cmp dec jnp into sbb inc lods imul daa sub sub cwtl out mov dec push fdivrp mov jp leave jl imul shll sarb push loopne es fstps pop mov cmp pop dec ret mov jmp insl (bad) lret imul stos mov pop out sbb mov rcll xchg sahf mov sub pushf dec push mov movsb xchg xchg dec jp outsb je xchg in stos fsubl sbb jecxz or adc mov pop ret or insl ret push fmuls aas cmp scas (bad) jp sbb cs insl cltd push (bad) jae das ss inc cld xchg xchg or or inc (bad) mov arpl mov mov mov out shr jge ds adc sbb in push lods xchg dec add dec xchg jbe push sub cwtl mov lret ljmp jb add cwtl fwait add dec jge pop es leave mov sub out pop xor jo lret movl enter fwait stos repz inc adc jnp pop jns push add push enter icebp fdiv data16 push lret inc movsb xor jl and adc mov jae cmp sbb adc pop test sbb fs fwait mov cmpsl mov lock daa xchg sub fstpl or push adc ret sub lret int3 xchg fdivs cs out mov data16 hlt xchg cmpsl and jbe fstpt ret pop cmp xor jmp xchg mov sub or pop jnp mov fwait xor jbe xchg xchg mov arpl movsl adc pop sbb push mov pop imul and daa pop in push push mov xchg pop roll mov cmp jne dec push pop add push mov adc enter jle xchg cltd cmp xchg adc pop dec mov push mov cmp sbb or test mov xor add pop sahf enter and clc adc mov mov movsl cmp or outsb pop xchg xchg and xor or cli push (bad) jg sub cmpsl cmc pop add xchg mov data16 mov mov pop movsl je adc cmp xor push incl popl repz loop add fdivs sbb jae mov mov fsubs push imul mov xchg jne add std xor repz inc cmc xchg sub cmp lock ljmp jnp fisttpll ret fxch add pop fcoml cmc movzwl sub lods sub sbb pop fiadd xchg (bad) iret inc movsb jg addr16 nop nop inc popa xor xor test movsl mov jne xchg sbb lea fisttp bound inc (bad) int (bad) iret cwtl lock dec rol cmpsl cmp test xor or pop dec sahf cmp mov sub fadds je mov mov jae out cmpsb or dec in push pop cmp fildl dec mov or jno,pt and icebp pop jnp sbb fs daa jnp out (bad) js cld pop pop outsl pop adc adc test mov fiadd add xchg std (bad) (bad) lods fucomp inc add push push test push mov xchg lock addl (bad) xor nop enter test test (bad) mov jge jbe pop (bad) mov cmp shlb ficompl adc cmp in or ja cmpsb adc xlat pop fs adc mov lock sbb lock (bad) je aam movsb jae flds cli inc aaa adc es les aas pop pop repnz test or daa rcrb fimul sbb aas xchg in outsl jo sahf adc mov aaa test lahf lret and aam inc aaa insb sub jb ret sahf test bnd pop sbb imul adc cmp xchg imul mov icebp add lahf sub popf mov lret punpckhbw sub lea pop xor daa mov mov in cmp (bad) sub push pop jmp xor fbld cwtl int3 adc xchg pop sbb iret mov push mov hlt std push push sbb cmpl push shlb push sbb aaa push subl sbb cli inc mov insl pushf in sbb cmp rorb pop sub xchg xlat idivb das loope sub dec idiv cmp adc mov lret movsb mov cmpsb aas push int3 imul xchg cmp (bad) dec stos mov lret push pop imul pusha cmpsb mov icebp stos push (bad) xor pushf add and or jns (bad) fucomp sbb lret lock mov cmp outsb (bad) fstp dec imul dec cmp sbb mov (bad) ja lods cwtl mov cld fsubrl ds mov xor sub cmp xchg mov and push icebp sub sub jg sbb xchg mov pop cmp iret inc cmpl imul ja push mov mull mov jg bound push adc loope add js lea stos adc push scas and in mov lods pop nop jno mov dec xor adc or mov rcll dec push popf or ljmp loopne sub ljmp js push pop inc adc movsb cmc xchg in into mov jns pop jge in jbe scas push add dec (bad) sub adc cltd add dec scas ljmp mov call dec mov iret pop int in pop insl daa lea push fsts test cli (bad) sti jo mov das inc push loop imul fs dec push xor int3 dec clc imull orb jae xchg and movsb sbb imul mov stc ret pop imul xchg lret or cmc dec push push std adcl out jb cmc inc stos in ljmp test mov ret sar lcall fdivs jb mov sbb mov std lcall imul (bad) push popa les mov and pop (bad) adc xlat pop jecxz imul ds aad jns fwait lret (bad) fdiv xor test lret and fstpt adc dec out or fldt xchg jecxz jg (bad) out call out and cmpsb sti mov (bad) (bad) stos xchg outsl mov mov cs cmc sbb test fcom lods and mov test mov lock dec or imul aam leave adc push nop mov fmulp fs ret dec pop adc ljmp (bad) push mov sti xchg insl and rcrb clc aas mov rclb jne call mov jae add iret jg shrb nop (bad) scas test out ja and int3 in es cmp mov push add pop mul (bad) dec xchg fcomi insb imul push in push sbb in popa cmp cmp arpl xor push pop jnp jnp cwtl push ja (bad) lock imul out lds popa push fimull adc imul xchg pop jae hlt lods ror mov (bad) insb pop push pop ficoml jb sbb out out ds add cmp pop inc push xor mov aaa push daa icebp and sbb clc cmpsl jae adc out inc mov popa mov pop mov rorl xchg test lock mov aam mov mov inc lret cmpsl fisubrl test lret test lret in sbb mov dec push jbe xor xor pop test lcall adc (bad) mov int mov stos hlt or push cmc push inc hlt jbe dec or mov sar insl mov sub shrl lcall push or lods in test cwtl loop arpl add test adc xchg dec into add and cld bound push (bad) out sahf out mov adc adc inc sub mov cmp not fs or adc mov push cwtl lret faddp dec fsubr dec movsl fsubr in sub das leave add icebp inc sti jl xor mov aas mov (bad) xor enter out daa mov adc addr16 stos sbb arpl rcrl fcmovb bound into sub loop cmp add ljmp sahf adc push xor testl (bad) lret xchg sub mov cli aam insl shl lret into insb ror sti fsubr adc loopne and rcr add dec push bnd sub clc adc out sbb mov mov adc test loop lcall pop xchg in cmp lcall push mov std (bad) xchg sbb pop push add xor sbb lods xorl lret test or fucomip inc (bad) adc and mov (bad) mov fdivrs out mov aad cmp dec sub mov ret pop xchg repnz pop lahf (bad) into fdivs cmc pusha xchg loopne sub and or mov in test test call lret rclb mov in push int3 adc mov push je out pop stos stos sub mov icebp inc sub adc and xchg and mov arpl (bad) cmp enter inc (bad) dec push push cwtl leave push sub xchg push cltd push push sar jnp mov mov mov test test (bad) rclb (bad) xacquire xor push push xchg cmp cmpsl xorb movntq dec jno enter or sub inc std (bad) int lcall cltd mov je push pop clc das test mov mov push insb pusha add xchg rclb push mov cmpsl sbbl jmp sub das movups int3 adc negb aaa xchg push shrb ret inc repz loopne popf adc je mov in pop iret sti jmp ret jl add xchg sbb mov stos jbe xchg mov sub or popa cwtl loop repz fwait push scas sbb jp repz ss push jl imull jb xor aaa lods and inc fcompl pop pop popf or in lahf cmpl lret aam xor push fistl stos add icebp jb sbb jbe pushf mov jnp cmp and sub lock dec fidiv jne mov test and (bad) mov sbb fnop cmp inc mov xchg retw inc jmp popa pushf jo lahf cltd (bad) les mov in leave pusha cwtl and inc add sbb mov dec loop fildl in or cwtl mov aas mov push fstps pop cmpsl fs mov push icebp das negb repnz xchg push mov imul cli cmp iret test ficomp push repz aas enter (bad) insl push pop ljmp insb or dec loop test mov rcrl push das in loop or cmpsl insb js cltd cltd cmp mov mov mov mov sub inc (bad) repz out push daa pop push xchg jns jl or sti lods lcall sbb pop jns mov movsl jecxz sub insl scas outsb insl pop mov loope push xlat dec bound js testl jbe mov cmpsl or jns mov sub mov sub scas push aaa xor cmp scas popf cs cli push sub dec dec faddl adc mov xchg in push es popf movsb shll pop sti mov js sub xlat clc cmc or jae jo ds lock jne and into sub cltd aad mov rolb adc dec mov adc sub je js dec (bad) test adc les push and test mov stc sub imul sbb jne and jbe ljmp mov pusha add in mov adc or in test xor lahf shl xchg test js scas std push loopne fimul push out cmp dec scas dec push imul push push aaa xor sbb outsb mov pop ljmp sbb repz jl cmpsb rcl inc (bad) adc leave jmp test mov fdivl lea cmp lods (bad) mov int mov arpl out mov push dec pop jmp dec les and and or aas aam (bad) clc lret fstl les jl mov sub mov jecxz jmp (bad) test mov sarb lcall int3 xchg in pop imul sbb jne jns mov repnz cltd cmpsl pusha call dec into xchg cs push cltd mov subl enter xchg inc repnz out pop and loopne dec cmp or sbb adc lods add inc jno pop jge (bad) mov (bad) das and dec xchg mov pop bound outsb in lret (bad) pusha dec mull repz cmp loop push xchg scas out dec mov inc sbb sti and repz js cmpsl push repz fisubrl add mov cmp scas das sub fwait hlt push sub dec xor inc xchg scas in and add insb and iret and sbb sbb inc jge ficoml sub mov sbb aam out test inc cmc jno les cmc adc lods mov fstpl add mov iret sahf mov (bad) sahf sahf push mov call pop or pop das or cs (bad) test movsl je xchg lock and imul bound fldenv lds in mov mov leave inc insl ljmp (bad) sbb nop mov push sarb pusha mov or cmp jecxz inc cmp dec into imul jp dec mov icebp sahf imul imul cld cwtl rcrb mov stc fsts inc pushf xchg test cmp and (bad) rcr scas scas cmp lahf xchg (bad) jge fs ja push out dec mov pop adc (bad) fidivl testl dec inc push rclb jge jl fildl inc push fwait call mov xchg lock out out fcoms into iret fcoms cmp xchg cmc pop fmulp ljmp out push lods mov sarl dec outsb mov loopne (bad) xchg loop push mov cmp cmc and clc sub (bad) stos lea dec icebp mov cltd xchg inc cmp ss xor jo adc dec and cld loop out and push push or dec xchg push push add xor in punpcklbw sahf gs insb sahf push mov jmp imulb dec aas mov jae inc pop sbb xchg mov popa mov lock (bad) mov adc push (bad) pop xlat sub pop jl push xor fndisi(8087 xchg icebp push xor (bad) lods sahf add adc ficoml es inc insb push jle cld jno call cmc aad into call dec pop (bad) movsb pop jge inc dec mov daa test push push (bad) mov jno popl lcall (bad) insb inc popl inc fstpt mov loopne ficomp divl sub fcoml repz jecxz adc push je jecxz popf imul rcll pop adc jecxz test xchg or mov out outsl pop sarb in pop and jne jecxz jne xchg addr16 sub push add fs mov fisttpll dec (bad) adc jge pushf add jns popa jae (bad) outsl imul sbb sbb and stos (bad) jae jp sub xchg and push out or in call rcrl das dec outsl adc popl (bad) inc fdecstp dec popf icebp lret jo push xchg jae lods sbb in dec pop fadd pusha cli lret cwtl insb gs or add aaa test mov sub add lods fcomps sbb mov mov dec popa xchg dec (bad) cli test push dec lret dec inc adc bound adc pushf jl (bad) and das xchg sarl mov outsb pusha rol mov lea in inc insb enter int adc push push xor jg inc test pop jp cmpsb jmp outsb (bad) out out xchg xchg dec add mov imul sahf xchg or lahf pop mov inc shl pop insb xchg int inc lods push xchg (bad) push lahf pusha outsb mov mov pop or mov push adcb xor push xor bound dec inc scas clc call aam fldcw iret nop mov in add outsb pop fldt dec push push and mov in cmp xor insb pop test mov (bad) jbe or aam out arpl adc mov jbe scas add insl sarl (bad) test push in dec mov in xchg cltd in call pop push xchg xchg icebp outsb cmpsb push xor ret fildll sub pop lret das pusha outsb and fisubrl pushf call adc xchg sbb inc dec add push test nop push inc mov add loopne pop xchg packsswb dec add aaa rol shld jae sub xchg or fstl shll add ljmp out cs xchg xor cmp xor icebp pop fcomps lds xchg (bad) or loop inc sbb adc adc push xor cmp scas fnstenv pop mov pop daa dec mov add jge cmp sub inc gs fs enter scas call xor dec lret mov jbe or shrb pop pop js dec jbe pop pop and in imul cmpsb push push lcall icebp cwtl arpl dec leave dec inc mov add lcall xor push insl int mov pop add fildl (bad) mov adc mov fist and dec pop ret and sbb pop ds jns pop push addl dec mov xchg scas inc sub test push popf mov mov (bad) (bad) (bad) rcl mov inc hlt outsb mov (bad) mov stc cmp int3 jno loopne icebp loopne fcomps je mov lahf movsl mov push push in sar mov in sbb push jecxz pushf dec xor (bad) dec iret add insl cwtl pop dec dec ret inc outsb sti imull popf (bad) addr16 sbb mov lock jnp sar outsb jmp cs loopne icebp mov sub xor out (bad) frstor mov (bad) sbb hlt push rcrl fucompp sub or mov add out stos xchg or into fsin xchg inc test pop fs push push xchg ret aas fdivrl mov ds scas dec (bad) out inc mov mov sahf add lea sbb stos ds push cld jmp push insb pop imul push xor push mov xchg mov mov jae ret ret (bad) mov sbb xchg lea sbb rorb xchg xchg scas adc dec push js dec sbb insl mov (bad) bound dec and dec ja mov loopne shrb mul or mov (bad) mov cwtl or je adc mov enter sub pop clc in and push js iret sbb addr16 inc or (bad) fstl mov add dec or push sbb (bad) jae and sub imulb xchg aaa enter pop movsb sti push mov or adc jb sub imul or addr16 and insb mov push or sub test xor (bad) jne push leave jne add sarl dec js rolb outsb sbb aam cmpsl invd (bad) ljmp test dec scas clc sahf scas and xchg movsb loop aas ficompl sarl stos (bad) int data16 xchg nop rorb sub fisttpll mov in (bad) int3 aam mov mov int3 dec (bad) repz sub push lahf or jge stos fsub or addr16 push mov xor pop pop ror xor aad push icebp (bad) xor or pop pop lea mov loop leave and mov int3 fwait stos mov loope adc cwtl cmp inc loope cmpb or (bad) stc sbb pop bswap scas mov loopne pushf lcall jmp jle sbb xor sbb mov cmpsl ja (bad) lcall push adc int inc mov sub repnz push or call mov orb insl ret in xor (bad) (bad) cli mov add mov (bad) add les mov sbb xor lret add (bad) mov es lods jmp call fwait in lods mov dec mov cmp popa xlat ret negb ljmp je mov daa push push nop testb mov add cs and dec cltd jbe mov mov push scas call das mov push and mov cmp cs cmp push movsl dec xchg xchg mov mov (bad) xchg fistpll mov xor into mov inc sbb lock jge jno loopne sbb and xor dec inc in mov test cld pop fucomp sbb mov push lea dec stc push add and jne imul movsl inc xor call xor call jae popa mov int3 fldl test mov inc pop repnz cli fcmovnb mov repz mov addb cwtl jo push fistpll dec sub cld loope add fdivl inc fwait mov aad push shrl es xor push cmpsl pop xor or scas cs jae or mov subl ret insl jb dec pusha push inc sub movb sub out xchg adc call xchg imul aas mov insl ror jge movsl ficompl sti add nop push cmpsl jae jne imul idivb out nop test ljmp cld ret notl imull (bad) rcrb push ret mov je push pop and cld popa jmp imul add sub and sbb dec stos pop add in adc lahf push js (bad) sbb decl lea lea test cmpsb push (bad) ljmp and sbbl cmp adc frstor scas into xchg or or (bad) das add pop sub ja cltd mov loop clc xor leave les lea inc sub repz jae inc movl inc icebp test mov dec inc jmp loopne scas pop adc jecxz adc xchg xchg in lret insl outsl ljmp popf add or iret js adcl addl dec pop push fdivl xchg call push fsubl leave les gs or leave jb lret cltd mov lret ret popf int movsl scas fsubs js xorl add cmp xchg shrl sti mov lret add jge cmp insb fbstp add jle add inc lret js stos cmpsl pop or (bad) inc jmp mov inc (bad) cmp or cmp xor push or test inc sbb into addr16 mov push (bad) pop mov adc addb jle dec mov cmp inc cmp xor adc xchg adc cwtl xchg push cmp js ja pop (bad) sub jge clc aam inc sub inc sbb fs xor cltd enter and popl sbb cli sbb and mov pushf jge out sbb mov push xchg incl fiaddl xor add push test push lods lret adc movsl jbe aad sbb and xor xor adc sub (bad) cld shlb mov jmp sbb aaa mov les addr16 in sbbl cwtl iret (bad) nop ret insl popf iret ja push push mov out das mov xchg rcll add dec test setno ja hlt dec fist sub mov into mov jge adc inc cli sub (bad) test mov (bad) movsl test inc out gs xchg fdivl or cmp push movsb out aam (bad) xor dec pusha lds fildll add add mov add dec lcall sbb iret fcomp jge xchg add cmpsb jmp adcl adc movsl jg sahf sarb out ficom jmp mov rcrl loopne add popf shr mov adc dec (bad) mov (bad) dec pop repz jl mov jecxz mov popf aam sbb loope or repnz fcomp ja mov push movsb sbb test and std fwait cmp gs mov out inc bound lret xchg lret hlt push dec lahf cmpsl cmp iret inc imulb and nop mov mov lods or fild insb mov add xchg ds mov shr xor jne dec pop ljmp cmp (bad) push push xchg jbe iret cltd fimull mov push mov fistl sti cmp xchg repz cmpsl xor jb,pt jae add mov in ja push outsb and add push cmpsl mov lock js mov enter pop xchg xchg popf icebp add or mov loopne scas cld in xor jb jge std ret mov cmc sti clc imul fnstenv repz fstpl add out push push imul mov mov jge add dec xchg adc xchg and shll adc adc jl data16 lahf mov movntq inc add (bad) int cmp movsl pop dec lret inc pop add mov nop pop sub (bad) jp mov rcrl pop cmpsb dec sub mov icebp xchg (bad) xor (bad) js add fnstcw popf cwtl dec ja sub mov pop scas iret ss scas jmp push movsb movsb jns into out (bad) hlt repz std cwtl inc add push orl and adc pop or iret mov (bad) loopne (bad) hlt arpl int3 lock add incb fisttpll (bad) fsubrs dec push cmp add sbb lods jno movsl dec and mov jg xor mov sbb xlat bound cwtl jmp sbb jecxz lret icebp out setb push fs mov clc inc push inc push xorl dec dec fist lods je ds fnstenv mov push faddl and pop sbb fsub xor out cld push std lret adc inc add push iret out and aam or shrl mov cmp add pop xor mov sub dec mov add jb out mov gs sub mov test ret in add shl cs mov push mov xchg jl add xchg out add sub fs repz outsb shr fisttpl (bad) dec arpl sbb mov (bad) cld sbb inc movntps sahf out mov cmc es and adcl out pop in imul jle cmpl (bad) cmpsl ljmp shlb push popa adc out in or jo inc clc ljmp movsb (bad) loope dec test xchg jno call or or test out pop sarb or js cmp cmp inc inc int and inc insl fiaddl cld fiaddl mov int dec xchg push outsl hlt outsl sub adc mov ja inc ja mov cmp push aad push stos jnp mov out xchg xlat jne sub push in dec pop mov and in in or mov xchg mov lock ret and mov in inc xlat add sub inc mov test mov pop das lods dec mov fidiv jl dec ljmp imul adc aaa lods dec and test mov cmp adc mov out cmpsb mov add pop hlt adc or or mov adc jb mov add mov loop cmp rcll dec inc cmc and lock dec cmp out mov add add inc (bad) in xor push fldl sub or dec lahf cmpsl mov test sbb and sbb pop roll sbb push cmc mov mov pop frstor inc dec adc repz sub divb jbe movb mov dec add xchg or xchg sti push ljmp test (bad) ljmp inc (bad) inc sub cmp add pusha loope jnp cli lods lea iret sbb fadd aad jbe movsl stos mov cvtdq2ps and nop bound xor or outsb push push inc pop inc (bad) int rolb fadds aas enter inc enter ret sub scas gs pop ret inc jle fs cli xchg adc jno fucomip rorl ljmp xchg sbb mov imul mov mov push add jne xchg (bad) jge xchg and das mov stos scas int3 jbe jo icebp add fiadd out fstl xchg cmp gs out xchg lea mov lds dec push lret mov es cmp xchg sub out and sbb cmp mov xor das lcall mov (bad) xchg mov mov decl adc int xchg dec sub push xchg (bad) cwtl jg fsubrp mov loope dec xlat inc aad fcom test add leave sub mov cmp pop loop or add cmp popa aam xor fimull (bad) add lea test and xor sbb test fisubr adc sub in sub insb adc jle or jmp xor and and cli imul or das add rcll cli cli sbb sbb xor in (bad) pusha fistpl push sbb lds mov outsb add (bad) xor add mov repnz fidiv aam ret mov xchg insl pop cmp pop (bad) sarb adc pop mov cli xchg add call mov fdivs jle inc pop mov xchg jae add or outsb xchg and jecxz scas mov and dec inc xchg dec lods jmp mov ljmp adc std mov enter xlat push mov pop es insb xchg dec xchg adc add call movsl adc out scas in cs paddq xchg push int int3 sub xor mov pusha mov inc test add pop fild fsub cmc cli cli cmpl arpl es jmp scas jg pop js adc xchg enter imul dec mov stos into sahf pop test pop popa cwtl dec loopne sti lods mov lcall ret call mov outsl push mov or or iret jge scas mov outsb inc (bad) scas and insb sbb sbb or cmpsl pop loopne xor lret dec bound xchg and out fsts inc mov aam fldt jecxz mov call enter (bad) jmp (bad) sahf in in pop lcall into mov mov fimul push nop fisubrl pop lret clc fcomps mov cld dec sbb sahf movl push sbb arpl fwait inc pop cmp sbbl pop add sub push sub mov jae sbb dec jmp dec cld imul mov jg lret jecxz push popl aas fstps fldenv mov dec cmp movsb jl mov (bad) xor in push movsl xchg cli jp cmpsb xlat and mov leave mov repz push subl sarl (bad) leave aas in push (bad) mov sbb inc jecxz insb adc jge in dec push cmp dec (bad) xlat add cmp push jg or cmp and sub lds add and sub outsb push sub or cld lcall and or nop sbb les movsl adc std add rolb dec inc int idivb pop and lock or test movsb (bad) (bad) adc lret xchg sub out out and enter sbb test jnp in stos adc xor insb jecxz neg lods jle ljmp adc lret adc sahf aas push adc les je or ljmp mov test inc xor fs int pop sbb rcll mov inc gs loopne (bad) jmp mov popf push push jne outsl lahf int mov dec hlt aad push test movsb (bad) cmp or or pushf push adc xchg lret bswap mov push mov in (bad) jns or inc cltd add imul (bad) jns push pusha mov mov inc out or (bad) push out add fucomi pusha (bad) pop lahf arpl xor lods dec scas xor flds in into icebp mov insb out popf lds lret out stos (bad) icebp mov pop adc cmp pop dec mov jg mov fsts or adc imul sahf dec xor in dec fstpl jbe cmp rcrl gs shrb imul mov cld and mov mov cwtl pop dec inc mov lods jae (bad) scas xchg test mov jmp push pop lahf aam aas imul fsub xchg mov mov or rclb sti sti xchg ja (bad) (bad) movsb and or out pop rcll lock insl mov sahf or mov dec push lea xor cmpsl je mov push fdivrl scas loop (bad) stc jo adc out inc dec or mov mov fs add shrb lret ret sub lods sub call mov rcll mov push jno int std neg pop bound (bad) adc inc mov or xchg add add mov mov dec shrl sbb mov scas jp lahf adc or loop dec push fisttpl mov (bad) push mov popf mov mov ret mov pop in out mov mov mov out rolb dec dec mov mov stc testl inc jbe jle lret cs pop sbb sbb (bad) pop insb inc inc inc daa inc test rcrl frndint mov cld test (bad) jecxz xchg popa outsb mov fmuls mov dec pop aaa sub push xchg dec pop loop inc in mov pop add xchg fptan jb nop frstor std xor lock sub js add repnz iret addl cmp popf add jmp fisubr inc xor fdivrs push shlb lock clc and sub mov cmpsb pushf mov ret sub dec pop pop sbb repnz fldcw pop decb sub movsb insb out lods mov (bad) gs sub lods xchg leave dec mov scas (bad) test icebp and (bad) popa fsubp (bad) jecxz (bad) fcomps lock dec and shr int3 dec sub clc in cmpb pop adc push or sti mov rcrb (bad) mov cld xor pand jl jb xor in add mov pop lahf test rol xor xor enter scas insl push scas pusha roll mov and mov pop movsl nop int3 in dec sub bound jbe sbb mov sbb je push mov repz mov xor in ret lock pop subl jge cs (bad) mov insb xchg dec cmp xor movsb jns cmp fcom into inc or pushf lds aas popa leave pop lahf movsb fistpll fmul lock cld outsl rclb roll and or jl dec test scas int3 fistp push dec jb xchg mov aad fsubrl sub dec or push pop mov gs in scas (bad) pop push cmp jecxz or xor loopne xlat add ja fisttpll and (bad) cmovl jge push add js jecxz dec iret arpl sarl sbb shlb rorb lds outsb fadds cmpsl mov frstor fimull jmp leave or clc jb (bad) lods sub repz data16 ret inc mov push or and jecxz imul sahf dec push lea cmc xchg xor mov cmp mov push mov sub xchg pop xchg dec mov xchg push nop add daa (bad) push mov add data16 adc fldl mov idiv faddl sahf cltd jns cmp mulb xorl leave subl subl fwait (bad) roll pop dec or out add jle call frstor shll and push push sub xchg cwtl lea repnz mov mov mov push add jbe fdivrs push divb cmp cwtl in outsb arpl movsl fsubr push fstl in enter sbb xchg call inc inc sub es nop enter rorl (bad) loopne ret sbb ljmp lock int3 scas jmp repnz (bad) out popf dec mov fistpll mov das inc into jb xchg adc push inc sub pushf lcall mov xor inc mov jo lret lds adc xchg out xchg adc sub loopne and mov shl lds add and in nop cmp lea sbb push leave into mov ss xchg imul pop sbb sub xchg mov sbb clc call repnz cmp stc xlat sub sub inc inc sbb scas clc lock sub scas int3 cli push cwtl cwtl arpl inc mov sub sub loope cmp dec dec ret pop scas insb sub push add push shlb (bad) sbb push pop mov inc test (bad) jmp out jne mov mov test cmp mov inc mov dec out adc mov mov push adc enter jbe pop add adc aam (bad) or dec mov test dec ja sahf xchg dec outsb add add inc mov ret fsubr outsb in and jg inc dec cmpsl enter scas cmp aas mov mov jns lret ds insl inc call dec mov sub adc fmul push rorb test into and pop and xchg imul dec push sbb sub andl xor mov lcall pop dec fsubl pop sub add and movsb xchg rcrb add arpl pusha pop ljmp adc cmp xchg insb cmp cmp out popa fldt jne lods inc dec and sbb xchg dec adc xor jl sub and insb call cmpsb in shlb adc ror scas lds aam sub pop push insl mov push cs adc pusha fist mov sbb (bad) or test lds in in xchg pop mov imul rorb (bad) cmpl xchg stos dec movsb and cmpsl subb add dec lods stos jge insl lds sbb mov mov mov pop lds ja jno loopne xchg mov or neg rol pushf xchg fs test mov lds out jo fistp xchg dec xlat xchg out (bad) out mulb mov cmp das inc pop lock or out push mov popf mov (bad) out shl rcrl cmp iret mov and inc cmc or shrb es inc test mov lret ds dec mov sbb cli jns mov (bad) int3 inc dec imul or mov pop mov mov pop (bad) and pop (bad) outsb int adc mov fldcw pop fstp int3 fmull jb movsb jnp push xchg lock push es xor pop jp and outsl shll pop fistp mov push into out movsl adc dec stos and mov pop sub mov mov mov loop popa and std xor mov dec push dec pop enter dec push addl adc sti ds jne gs mov or xor repnz mov sahf test test xlat dec loope inc jp pop lahf cltd rolb leave jae es in mov push cld cmp pusha out inc xchg push pop jg ret (bad) jp add sbb inc ja aaa lahf cmpsl in sbb inc push push mov out inc inc sti push mov pop sbbb inc (bad) arpl push movsl imul (bad) clc sub mov mov stc mov push into out mov jmp dec adc mov aaa arpl pop pushf dec inc bound xchg sbb mov xor js (bad) mov sbb out scas in pop scas mov or dec movsl cwtl scas stos xchg dec mov mov outsb leave fwait (bad) fadds xor cwtl jno xchg dec gs inc or adc cwtl xchg or ds mov adc mov lea mov lret mov add out mov test les ret pop mov xchg add sbb sbb rcr add inc repz aaa dec cmp call icebp fcoml clc adc stos mov test dec inc cmp das add jp out fucomp js jg push pop and in mov inc daa int3 inc and rol sbb push je scas cwtl mov cltd pop mov insl daa out lret and test push add pop sbb hlt push pop (bad) mov incw and jno loopne pop bound and or dec xor icebp pop xchg lods insl lcall push fisubrl int je pop pop xor lret cmp outsl add repnz cld xor ret dec xchg xlat or mov leave rcr jnp cmp fs push pop mov outsb faddl loope aam sbb add es out in dec jns adc leave xchg ficomp push test xchg stos inc push (bad) loope aas lock fildll decb in push push out pop mov es sbb add inc push hlt mov jnp cmp mov loope ds xor pop add mov out es sub cmpsl idivl inc aaa cmpsl inc stc and sti mov adc popf xor (bad) cmpsb fdivl bound cwtl push mov repz jne outsb mov mov adc fsts outsb and fistl push lret xchg xchg cmp and jno push fildll sub mov (bad) outsb imul decl ja and outsl inc or push jecxz fadds data16 jl inc adc adc adc xchg push daa fnop cmp xchg outsb push inc cmp jns sbb add sti in enter jb push loopne movsl and sbb mov inc dec sbb or int test (bad) scas test ficom pop fldz in xor inc scas pop inc jg lods outsl ret sbb cmp (bad) jo shr fwait sahf imul shrb iret jne mov xor loopne xchg mov sbb mov cmp dec sub add pop mov inc mov imulb fisubr es jns cmpsb insl loopne das push push mov int3 mov mov ds and jg jnp out push (bad) lcall pop sub ret mov jmp lds push mov cmp xor repz cwtl cltd negl jge push mov popa mov js mov or in xchg dec ret repnz xchg sbb push and add mov adcb (bad) mov sub fidiv outsb dec rclb enter push mov mov (bad) push cld rolb push inc push lcall (bad) push mov (bad) or aad xor (bad) (bad) push xchg leave cwtl inc not movsl inc mov push rorb pusha push (bad) lea nop or fadds scas fldenv jp sbb repnz lret xchg pop jno leave sbb pop mov cmpsl mul push xchg addl dec lcall push sbb fsubl jbe cmp (bad) loop mov mov movsb cwtl push adc movsl movsb and dec lods mov push dec mov int3 incl mov jae mov mov stos cmpsb sbb mov bound push adc fnstenv frstor fidivr push lcall mov outsb add scas inc in mov adc adc daa inc mov bound mov jecxz and or les or add shrb test xchg mov int push cmpsl icebp (bad) sub jge jg or addr16 dec xchg sub fist mov mov pusha fprem inc out mov ret popf adc and cwtl icebp mov or leave xor imul das sub fwait dec adc inc sbb mov cltd inc fs inc loopne lods sub push ret mov int3 or xchg inc and push cmp call imul in shll and mov (bad) inc cmp dec add pop xor or testb dec mov mov inc fcmovnb enter dec fdiv lret rcll popa inc mov sbb mov stos mov and or cld dec ja mov or lea decl cwtl outsl daa les scas leave int3 sub shrl fdivrs repz into popf cmpsb push adc int3 leave sti and lret or cmc sbb dec lahf cltd xchg mov xchg or aas (bad) addr16 push sbb and cmp (bad) push push push in fsub insl cmp mov dec outsl pop lahf adc pop (bad) mov (bad) pop cmp int3 insl in in mov ja cld xchg push add mov push mov mov fs mov mov sub sub repnz or scas inc sub cld jae adc and movsl hlt fisttp and xchg (bad) in sub pop inc xor lret sbb pop addr16 dec mov jecxz pop push cs xchg add test sbb inc jmp cmc push stc (bad) or pop mov fwait arpl inc jae pop pushf xor push pop aas mov jp push push ja outsb add int3 inc pushf insb cmp std outsb test dec dec scas dec psubusb sbb rcrb adc (bad) mov jno shr aam jb xchg test add or xlat fcmovnbe pop pop test push xorl sbb fbld xor mov sbb mov dec dec stc inc iret or mov jns mov mov pop xchg sub shr mov push shlb (bad) loopne sahf test or rcl lods sarl ret pop xor mov (bad) sub lods (bad) or mov pop lret mov icebp mov imul orb subb pop sub lea dec add mov aam jmp sti pop jne shll and out jg add mov mov pop and mov stos mov push sahf pop scas repnz jle lret fmull test adc and outsl dec push or lret mov cmpsb pop xchg cwtl or pop out idivl sti push inc testl outsl (bad) loopne test inc cmp lods (bad) das sub sbb or leave push ficoml sbb int3 cltd xchg dec push std lods in xchg xchg imul cmp and test (bad) insb rolb mov dec loop xchg dec pushf pop pmaxsw jg fimul dec std cmp sbb mov (bad) and or mov mov xchg push insb rolb add mov cmp or adc cmp mov pop imull ret dec cld sahf cltd and icebp rcrl lret insl stos cwtl xchg in shlb mov inc es sahf adc iret jge clc jno fcomi cmp sbb cmpl xor add pop sarl xchg outsb arpl in fiaddl inc fsubrs lods xor in scas popf push push dec adc jo outsb (bad) fsubl add mov popa bound mov jo push dec mov dec daa adc ja lret inc aas push mov jno lcall movsb (bad) jmp ljmp mov push ja sbb in arpl mov dec inc cli movsl adc sbb mov mov outsb jae in jae (bad) ficom adc xchg push inc dec movsb cs cmpsb scas inc xor adc test aam add pop movsb inc dec popf stos pop cwtl push js imul ret mov add inc mov and imul orb push (bad) popa sub jp (bad) test outsl jecxz (bad) mov push leave icebp aas xchg add pushl mov sub xchg stos dec jbe out fsubrs cli mov xor test mov push sahf imul or nop fistpl mov es cmp testb mov (bad) mov xchg or jp inc pop mov mov mov popf pextrw mov in adc icebp icebp xchg cmp jb cltd loope das push std loopne sub mov mov dec mov les sti sbb mov fdivs fstl lea insb dec xchg add cmp (bad) call das dec bnd xor out arpl jnp inc cmp and cmp xchg dec push test mov lcall xor (bad) rcrl js mov sbbl mov aad and push movsl jg ret lods adc sub les inc divl push outsl loop jg jle out add mov xchg cmpsl jg jne or cli pop arpl (bad) testb cmp adc xchg lods push arpl sbb mov ret (bad) popa inc dec jp addb popf push pusha fistpl rcrl in das fiadd xchg rclb mov int3 shll and dec or out lock das (bad) cli adc inc scas and jmp neg push stos test mov inc or push into (bad) cltd shlb jmp xchg cltd push popf daa aaa inc xor lret pop (bad) mov jb jns les push pop push pop adc mov mov call imul mov icebp in mov push xchg ja push jle movsl (bad) sub int imul loopne cmp popa mov scas add pop fstpl dec scas dec adc rolb popf out jo fidivrl sbb dec cwtl mov cmp in cmp inc das and in push out rorl fadds lcall rcrl pushf cld ja or jo dec sub cmp inc ret sahf nop and gs (bad) add pop call sbb les adc test mov hlt dec (bad) cli fsubrl mov ljmp cmpsl xor add jle (bad) dec pop call and mov popf je (bad) mov popa mov aam sbb inc push aam mov lods mov int3 test leave fucomi idiv mov (bad) add cli jp movsb lds (bad) push dec or aaa movsl mov mov ret fstpt jmp mov mov add repnz pop arpl ret fsubrl lcall or mov lahf or push iret push inc inc out imul xor xchg xor clc jnp addr16 cmp nop sbb or xlat and pop lahf mov add sbb sbb fcmovne sbb inc xor js adc inc sti (bad) pop (bad) cmp lods xor adc fnstcw call adc add jp mov loope push and inc xorl push jge and inc (bad) mov add dec icebp jl mov jns movsb jns mov adc decl mov mov sarb dec test int3 js rcll dec fadds mov movsl loop enter rcl xor outsb dec orl inc enter adc enter popf lock test js xor push aaa pop js in ljmp pop inc or sbb rclb nop push sbb mov xchg lret push int sub cld cs aam push xorb int3 nop jp clc sahf push mov xor in add sub xor ds xor cmp cmpsl pop (bad) xchg repz mov xchg fnstenv icebp xor xor jmp xchg lock (bad) push cmp scas test dec xor push dec inc inc out icebp jp mov sti jg inc push fsts stc push mulb adc cmp movb inc pop or xor jo gs lock push ret jecxz (bad) js mov in sub test push adc mov jmp push fwait mov sbb out adc adc in inc cmpsb push push ret add pop out (bad) out push les leave dec bound movsb xor call or lea inc inc xchg xchg adc movd push in jno mov sub xchg mov push push push inc push ljmp jge or lds fldl je fsubr js,pt rcrb (bad) dec mov push mov movsl xor lahf and in cmpsl shr inc adc lahf and sub sub (bad) xor test add test push mov (bad) mov popa jmp imul mov rcl sub mov adc add sahf cld fstpl inc rcrl pusha pop in hlt rclb xchg xchg xchg leave inc jnp ror jbe push mov mov insl dec push push add loope repz or rorl repnz mov sbb je ja pmulhuw (bad) dec push outsb sub out hlt loope in push cmpsb repz xor mulb pop mov fwait dec and fcmove test and mov mov aam xchg mov adc dec adc out mov cmc call (bad) (bad) in int jg aam imulb sbb shr lret sarb sub sahf ss test popf test push or push pop mov inc daa test dec or xor aad push js mov jecxz and icebp cmpl in in lahf adc (bad) cmp cmp ret sbb addr16 mov lods sub (bad) test pop cli jle jne sbb loop fsubp mov cmp push or das (bad) out ss les jp ret aam pop inc sbb cld xchg cltd stc sbb pavgb icebp and lret sub xchg lcall psubusw loop (bad) cmc roll fs aam fdivrs stc out imul ret and xchg jp dec sbb inc stc out sub inc jle lds fs lret add orb lods mov or dec jno mov mov sti dec ret cli data16 outsb nop je ret enter sub cmp into xor mov mov and aas ss pop push mov jbe dec loope adc dec hlt test shll xchg inc mov push movsb popl sarl or mov mov nop repnz mov call jg mull push in dec mov lea lods jle shl (bad) aaa mov (bad) lock mov ljmp cmc icebp hlt sbb clc push xor mulb add inc lods sub add xchg sub xlat xchg jns sub aaa clc sti sub in (bad) aam mov push push dec cmp xor push add pop jb dec out js xlat js leave lds fistl (bad) clc imul cmp push shrb ret (bad) push xchg sti fucomp in dec pop (bad) int in insb pushf sti push test add inc ffree std dec movsl xor mov orb lret clc test popf (bad) loopne out or add sbb adc rol (bad) rcrb fisubrl call xor sti in xchg fiaddl or (bad) mov ror stos ret mov add add mov xchg dec adc jmp jmp sbb loopne pop xor ret ss loop cld enter repz jne adc adc (bad) shl cmc cld mov jnp mov in out and test (bad) aaa ret out cmp sarb lret lds mov in mov sbb sbb push bound cmp cwtl push test rol ss sbb xor dec leave inc cmp push fistp sbb gs or ljmp mov lret xchg mov imul (bad) imulb or mov and xchg test mov mov cmp das push cmpsl lea aas dec roll pop cli daa jg mov mov lds test outsw and int jae icebp aaa inc adc gs ret mov in xchg mov cmp sub mov xor and faddl imul push shr fimull dec push leave cmp test jno (bad) xchg sub sub pop js push int fcmovnbe mov into dec lret ss mov add and push cli jo or enter and pushf aas inc sbb lock and (bad) pop xor sbb jae mov out andl js xchg (bad) leave insl mov popa (bad) stc pushf test pop sub cmp popa add dec int3 les mov movsl cltd lea xchg fnop sbb in xchg jns popf dec js cmovns mov dec lret push cmpsb jae jne test cmp add xlat (bad) jb ficoml out enter loope pop cmp in jne ja push sub ret cmp inc xlat int3 out test icebp inc mov inc pusha (bad) data16 (bad) ss arpl dec mov call inc push int3 or imul mov or dec dec insb clc subb fcoms clc roll xor sub mov in (bad) fstp stos test ret jecxz fidivr imul (bad) mov ret das add jb jno sub nop ja sub and aas out push mov clc sti fildl sbb jl rcll rcr xchg push xlat sbb sahf push jmp fsubrl dec jle stc push adc pusha hlt sub mov xchg or sbb int3 pop and jnp,pt xor insl lret stos (bad) xchg add movsl (bad) stos jnp loope fnstenv and pusha xor rcr loope inc cmpsl and repz jg cld dec in push dec jne pop hlt push out ret or sub push mov adc (bad) pusha in test inc out hlt mov call pop loop scas in outsl fimul xchg out adc lods jge lock aad jne cwtl psubw adc xchg lret ljmp enter xchg jb insb xor push (bad) xor cmpsb and jle xorps jne dec cmpsb xor xor dec negl jae jne push jo hlt std jecxz add xchg mov insb pop dec dec pop dec push sub lahf jne daa insl push cmp inc jae insl sbb int pop scas cld cmp fld1 fmul leave dec enter sti (bad) stos inc into call dec xchg sub inc sbb (bad) add mov jmp cmp addr16 es leave jo gs jo call loope sub in (bad) imull adc add loope inc mov fnstcw xchg xor gs popa xchg sub (bad) sub dec and fidivrl jmp xchg fdivrl (bad) dec nop xor mov xchg xadd sar inc sub insl xor xor in ret ljmp aaa (bad) inc mov jp jl and ficom jbe bound cmp sbb jg (bad) shrb adc xor jmp push ljmp lock (bad) fdivrs into push jp stos sbb mov stos inc ret popa insb cld gs sub add inc popf imul sbb sbb add nop adc mov jno lret push test (bad) sub test iret pop loop fidiv fidivl outsl dec (bad) add mov sbb inc movsb test mov adc and addl je pop clc addr16 mov push cmp mov icebp in (bad) or sbb cmp test cmc jg pop ret fwait adc inc mov xor xor in jecxz popf push aas loopne push or cmp daa insb cmp outsl (bad) aad or sub rorl cmp ret dec pusha and scas fdivrs add cmp mull lret adc pop add inc cld subl mov (bad) sub leave cmp (bad) and and je inc mov xchg cltd sarl or mov or and scas lods jle inc mov mov mov cmp lret push jns dec fdivl jno xor ss mov (bad) fnsave adc outsb out movsl xchg xchg mov xchg dec (bad) scas push mov mov jl cli ficoml jmp inc mov lcall inc xor scas into cmp mov jb mov and xor inc push add push cmp mov test sbb imul std add data16 sbb (bad) dec push xor mov dec test lret scas lock push mov dec in push movlps push nop imul das or int3 imul mov ficoml inc mov xchg sbb subl jne lock xlat out jo mov or xchg dec cltd xor xor push push lret xchg clc mov ud2 nop pop inc je inc jmp dec js sub aad jns pop dec mov in ss loop lcall les and adc xchg jle dec cltd fwait sub je mov addr16 ja push push call xor jne dec xor addb sub jne sbb cld add ja lea imul mov leave scas sub xor faddp jnp inc outsl and or ljmp loopne sbb mov (bad) mov mov mov adc (bad) fistl pop (bad) cmp jmp divps lret xchg pop pop dec mov addr16 andps add fwait mov mov loop stos sub adc mov (bad) imul or sub out cmp (bad) jge lock xor js out outsl sbb lods imul pop mov (bad) iret enter dec insl (bad) test or push xchg lahf and dec mov push fimul mov lods ja mov dec gs mov cmp stos mov cmc and or popa mov ret cld cmp cwtl mov xchg mov sub (bad) loop stc pop xlat sti cmp int test das sarl mov and push mov push outsb (bad) stos add mov inc insl pop imul dec mov in ja xchg daa push sbb rcl fdivrl xlat fiaddl xchg pop inc lods or rcr and rorb ja mov and push sub iret cmpsb pop movsl gs sbb aad jp loopne out cmp divl mov adc es or cmpsl cmp jne mov mov aas test pop pop movlhps add ljmp mov sub mov mov mov cmc into cld aas cs mov lds add push or dec xchg clc dec mov mov call mov lcall pop aad out lahf and push cmp sbb mov gs pop mov scas aad inc cld popa aad sarl xchg or outsb es and mov aad ljmp adc bound int inc cmp inc xlat mov mov adc rclb aaa inc faddl sbb xchg inc jo xor int (bad) mov pop push arpl dec test imul pop dec cmc das jnp push push aas xchg xlat les jnp mov rcrl sbb call cmp and add in cmpsb fucomp inc push test outsb rcrb jae jo lock dec sbb mov jno mov cld and xor test jnp jmp int3 popa and out jmp sub mov es stos shrl and and lds sahf int3 cmp rcrb es pop or mov jb cmpsb js xor push ret mov lods sti sbb pop cmpsb outsb or add or add imul nop es jmp incl jne xchg cmp push lret in pop (bad) icebp xchg int3 in adc inc push inc (bad) sbb out loop das and nop jo (bad) mov (bad) (bad) cmp leave mov inc sub sub jge mov jnp cld add and mov aaa orb inc imul xor and mov test cli fwait dec popf shll pop test dec fmull sbb mov popa lret es lea jne jno mov dec push lods jg iret ss xor mov push cs lcall cmpsl push mov push sbb (bad) sub cmp and jb int cld adc je in aad sbb add mov daa adc and js jns lahf scas pop addl icebp mov sti mov ss lcall and mov xchg mov jp pushf and sbb or cmp mov dec sub (bad) jp inc mov ret jp or pop sub fsubl fidivr test cmp pop or jne jmp mov xchg push mov pop push jg fs dec dec mov or cmc cli and mov jb jb or rcll xor out pop out gs int pop ja mov stos cmp push loop cmp aaa cld xchg outsl add xchg push fimul inc lea pop gs jecxz movsb in faddl stos xor int adc cltd out xor sub stc fdivl mov mov pop outsb mov pop xor test xchg (bad) std sub mov mov sarb (bad) adc pop rol lds not imul mov pushf in jp or sahf into int3 sbb mov sub scas or sub out xchg xchg xor xlat add adc add pop insl xlat out movl lahf lock nop mov or std dec imul add jmp jo add mov inc in scas sarl pop xchg jl jbe jnp push pop sbb dec shr cltd and ljmp pop push xor outsb mov xor push and loopne movsl loop sahf push and rcr iret jp push mov dec sub and mov mov vcvttsd2si sbb mov jle mov jg movsl mov movsb adc adc lods pusha mov add inc sbb mov scas loope ret scas dec mov lret (bad) jno daa pop test inc inc js lahf dec bound dec push fiadd sbb cmp lahf push lret in jae cmpsl dec daa pushf pmaxub stos loope cmpsb adc stc out push hlt pop jae cmp cmp lods outsb sbb insb je je xor aad outsb inc inc inc cmp lods xor xchg or div fstpl lcall lret movsl icebp incl xor dec test loop out lahf mov sti lahf jecxz lahf jmp lret fcomp cmp mov xor addl and mov push hlt and inc popf hlt and jno ja pop data16 hlt cmp xchg icebp mov cmc cmp into mov push mov adc sub ss sub xor mov add mov imul int and pusha inc (bad) xchg mov out lcall gs push nop push int push mov leave cmp imul imul cs and test dec fiadd test inc test push or inc mov rcrb mov jnp cmp lahf inc xchg xchg fiaddl xor (bad) mov rolb adc sar imul push lahf fwait stos sbb mov hlt or call inc insl jp lret sahf out xchg xor xchg jp ss dec loopne mov inc enter scas rcll jnp xor mov jnp inc dec stos or (bad) out rcrl std and mov mov or aam xchg inc ss loop test pop mov enter sar inc or push cmp enter adc cmp sarb cmp adc mov faddl lods cmp ret (bad) jne rcll rorb nop sbb loopne call mov mov andl dec sbb sub cmpsb mov jbe mov add das adc push adc sub xchg (bad) je inc jmp jo (bad) xchg loope mov fcomps inc in aas push pop rclb inc ja xchg lcall sub xor (bad) mov (bad) jbe inc out ljmp mov sub fs or dec sub jl inc out or mov fs popf mov es or mov inc sbb xor cmp inc insl hlt mov dec insb jbe push insl mov push sub stos repz dec mov cmpsl mov andl dec sbbl out lods push jns icebp push cld std cmp mov pop add jne mov mov push (bad) mov xor mov test cmc jecxz scas adc adc xchg jbe cmp jl mov xchg inc in cmp add sbb imul outsl inc fisubrl int mov fmull aad pusha movsl fild cli int3 pop pushf add add sahf push dec jmp adc sahf cmp cld inc and mov in inc pop jne cmpsl pushl mov pushf jo js rclb out push lret clc xchg popf fldenv popl inc xchg test lret cmp push dec pusha sub lahf and adc lret dec cltd adc enter subl pop xor shrl movsl movsl dec push mov pushf iret xchg push outsb jecxz sbbl leave out jns inc sahf in fdivrl mov fistl mov sub push mov xchg push xchg (bad) pusha (bad) fstpl jae pop mov test push pop dec jl leave fs mov pop jae inc xor xor mov pop inc xor in or inc out mov lods vmulpd leave add mov and pushf cli cmp adc push repnz pop notl mov mov mov xchg mov popa push (bad) xlat ret and sub xchg loopne push (bad) jb inc mov push inc push sbb mov inc mov inc or lock pop mov or cmc xchg push mov pop lods mov push loope test fs xchg andb lea xor mov lock pop sbb fnstcw jno (bad) hlt clc sbb sub andl dec or lcall cltd sbb stos dec cmp inc push cld cmpsb movsb mov arpl xchg adc push ljmp loope mov add inc cmc push (bad) stos outsb inc call xchg popa ljmp dec xor orl out xlat adc mov loope aas jg cmp xchg je test and jb mov inc loope mov fs inc pop jge jecxz lahf jmp scas mov inc faddl and mov test sub cmpsl cmp add cs sbb xor mov mov mov rolb mov out lret inc rcrl cmp mov decl jno,pn mov sarl jle clc pop (bad) popa fidivrl push pop cmp xchg test jb jecxz mov and popa jmp push out mov lret add outsb leave mov dec cwtl cmc jmp loope push ret ja pop mov and movsl loopne and test mov rep inc (bad) mov (bad) xor xor xor js (bad) xchg sub add adcw xchg fisub cmp xchg int loopne sbb sbb add test dec push mov (bad) lods je ds ffree jbe push loope add loope pop inc rcrb bnd out push cmp jbe (bad) leave loop aad or xchg fidivrl or mov push xor pop and js pop aaa mov mov inc sbb ljmp popf mov xor pop iret mov jle sarb jl ss pop cwtl ljmp pop jge mov test scas mov (bad) xor inc in cmp jae push mov jmp jecxz push mov sub in inc xchg xor mov jbe ss sub test pop int pop jecxz ret adc cmp xchg push jge in xchg (bad) sbb scas outsl addr16 test and je mov dec jo jno cmpsl arpl scas imul xor dec test (bad) jb cmpl aaa ss sbb jo jbe add xorl insb mov push cmp test add (bad) cmp imul push xchg fstpt nop sub pop movsb or test mov (bad) hlt mov cmpsb sbb (bad) in testl sti pop pop adc xchg inc (bad) (bad) xor int3 push jle outsb sub outsl aaa (bad) jno in pop mov jmp inc dec in fidivr dec cmp sbb mov adc stc loope addr16 adc sbb jo mov mov and inc mov inc (bad) into lds sub dec push or stos sbb push xchg cld jne sub sbb cmpsl out sub fmull or adc inc lahf fstpt and mov add push xchg je inc jge dec push mov daa mov (bad) fcmovnb mov (bad) sar stc push mov bound push test adc (bad) jge adc (bad) dec outsb test scas and xchg jne pop dec pop pushw or jle out dec test lret cld xchg outsl (bad) in mov push push mov rclb cltd inc and or mov or inc or jmp push and adc mov push pop div cmp je ret mov dec pop dec jne pop sub lods sbb leave mov or lock cmp adc out mov clc repz fisubr push jbe or fmull or ja pop push ja aam or (bad) xor out scas lret cld and dec xchg inc outsb inc add sbb sahf mov das mov pusha dec mov in cmp push fcomps add in sbb idivb adc (bad) jo loop inc stos sub gs test js in fisttpl or dec mov xchg xchg jle lret mov ret daa je xchg inc loopne cmp sbb fidivrl (bad) fs or (bad) jmp mov repnz add mov push movsl pop xchg lds jo ds and out cs out lods jle pusha lahf add cmp inc cmp and push add and mov xchg out insl fwait stos stos xor ljmp xchg cld (bad) push and or jge adc mov dec xor mov scas pop jnp sbb cmp adc addr16 cmp cmp loop icebp xchg inc and popf inc cmc mov out lahf xchg insb xchg mov divl mov lahf jmp in push mov pop loopne add adc xor sbb neg mov and xor xor imulb add int gs loope jns fs hlt fstps aas mov shlb pop shlb rcrl jbe or sbb scas mov loopne jbe jecxz test cmp jnp push cmp and fmull fwait daa pop and mov fmull pop adc and mov inc out mov out test jge ss mov jl adc and mov xlat and daa or stc ret adc jae popf lcall mov es stos ficomp mov dec pop jae dec in (bad) lock mov loope jo or jbe data16 adc ds or test ja cli ret xor iret mov cmp and popa dec and add ss xor leave lods xor xchg mov ret mov sarb imul or lea sub cltd (bad) jae cmp repz ret sahf mov lahf out cmp daa mov int sub sub xor outsl call add fwait pop loope inc mov add das icebp lods outsb fcoml sub add cmpsb pop or add xchg ds rorb lods mov push out adc mov dec mov push sub sbb or testb or std mov imul bound inc push scas xchg jecxz pop das out scas inc sub sub out icebp out pop mov fdivs xor enter ret xor pushf shlb mov call adc loop cmpsb cmpsl (bad) stc (bad) in pop mov cmpsl pop dec jbe push xor cmpsb cmp (bad) jmp and xchg cmp mov push int3 pop outsl daa jns mov sub cmc das xchg popa rdmsr cs out leave xor push clc movsb outsb fmull addr16 insl scas ret (bad) push lcall cmp adc jl jb (bad) inc mov push (bad) and jbe mov sub mov jnp das lock jae dec xor stc ret aas sub pop jns push sub jns pop xchg dec int inc arpl cmp adc aad push cmp mov scas ja mov ja call mov les mov push rcrb idiv add aad and iret jl icebp dec popf adc adc or fsubs repnz loope jne dec aad imulb xchg and or inc daa xchg jg jae mov xchg sub xchg mov enter add aam push sarl pop jne in mov sbb inc out lret (bad) mov mov mov push or fistpl dec les (bad) fdivs and inc enter add xor jae xor cmp cmpsb adc jnp mov (bad) out pop gs clc scas out add jecxz jnp pop cwtl js and add shrb in inc cltd popl mov rolb jecxz or stos lret or int3 subps push dec out aam sub xchg ljmp cmp xchg inc mov pop mov cli sbb dec mov dec arpl and xor jae xor dec sub lds test sub fadd lcall (bad) clc jns sbb rorl movsl sbb (bad) mov xchg jmp or (bad) rcrb mov sbb sub jb pop sub or jecxz aad dec jl mov mov ljmp sub imul negl in sarb fsubp setnp sarb ja and inc int3 mov outsb adc lods xchg adc pop out sbb sbb push pop mov jno pop cmc les push aas sahf pop jmp popa or pop loope scas (bad) and xorl jle ret or (bad) test jmp and sub push into enter test std jg cmp pop loopne cmp sahf sub lret dec xchg mov ja iret jno add dec inc xor outsb lahf add lret jmp in in add icebp xchg cli (bad) cmp xlat into mov jmp mov add pop (bad) cmp push push and mov push lret pop cmp jecxz cli (bad) xor mov pop sti pop lds mov pop xchg cmp pop shrl lock jg (bad) je pop (bad) inc pop mov mov cmpsl cmp or addl insl inc and sbb dec (bad) outsl cmpsb bnd imul insb cmp in dec inc xor mov dec jle sbb loope iret push nop imul popa add cmp or inc stos sbb adc mov loopne les xlat push lea xchg pop xor xchg cmp repz (bad) jae add mov or adc rolb push (bad) xor cmp cmp mov cld movl push sti jecxz cs out add mov (bad) xor push adc push popa ficom imul into and mov mov out pop or push movsl and mov cmp push push push or xor mov inc fimull xlat (bad) cwtl add pop daa shll aaa mov insl xlat data16 shr js and mov xchg mov sbb (bad) inc loop pop cld aad sbb or pop cmpsb repz cmp xchg lds sub cmp imul and mov (bad) jne imul imul mov out sub xchg bnd cltd mov fmull mov dec pop (bad) dec das cmp add fwait or mov xchg adc mov pop push sbb fsubr mov inc mov and mov dec jge pcmpgtb pop shll arpl fs hlt or xor call outsb inc push out in inc mov sub aas fsubp jnp add sbb mov (bad) adc pop push xchg outsl or sbb xchg sbbb iret jae imul or jp stc insl sahf sub add pop fild mov insb sub mov inc pop adc mov out repz je xlat fnstcw or mov mov cld mov stos mov jo sbb fsubs add loopne sbb cld test loope inc scas insl xchg dec inc icebp test xchg (bad) pusha xchg dec add pop or xlat mov or fnsave jnp xor jge shrl or mov roll and nop popf jbe ret out adc push in iret dec dec jnp push (bad) daa stos fcomi xlat mov push lret (bad) sbb ljmp call enter cmp cmpsl gs outsb pop jo push pop sbb int push test sub xchg call xchg scas push xor or jae js fcoml inc mov lods and push pop inc dec roll (bad) cmp clc outsb mov loope out adc (bad) sbb fsubrs outsb pop sbb mov mov js mov or or dec test insl pop rclb outsl jp push dec fistpl adc xchg es pop movsl pusha dec dec out fsubrs jecxz movb sbb pop scas jmp jns cltd push mov lds push hlt mov mov and jl daa out aam xlat xor adc fidivl mov popf sbb add xor inc cmp jnp movsb cmp ds push inc jge out aam sub ficomp cmp pop cwtl xchg adc cld (bad) das out xor push js leave sbb adc test mov lods sub xchg inc xor jb lahf out add adc mov adc pop dec lods insb push push sbb add adc into leave les sub cwtl xchg ret adc dec (bad) sub rcll ret mov in adc xor mov inc movsl fisttpl push pop xlat mov je pop pop test jo movsb insl cmp repnz mov mov inc or dec sbb test add fsubl in or cmp fincstp lods xor add jmp out das iret mov cmp (bad) mov cmc fnsave xchg xchg pop stc xor dec andl test iret xchg push mov call popf and inc test jnp inc test enter mov mov add xor or mov out jno pop or sarb js out bound in into dec ljmp in fwait mov (bad) add mov adc mov aam or aam mov mov stos mov out xor mov adc or test data16 adc xchg push outsb sbb xlat je cld xor es lea and (bad) fidivrl xchg (bad) aaa mov sbb mov mov push push xchg pushl pop dec lods sub pop cmp (bad) sub inc dec es cmp sbb mov add xchg mov aam pop dec cs hlt cmove hlt addr16 add movsl imul mov adc lock inc loopne dec sub cmp sub jo (bad) cmp (bad) sub out mov mov inc aam pop imul push je cmp fsubl lret adc (bad) inc mov insb (bad) push inc push or ror pop loopne repnz pop in daa push add enter push loop pop xchg pop rclb dec mov mov cli cld dec rolb fstpt dec mov dec scas ljmp pop arpl into in ret cli inc mov dec lea push pop jne int mov mov inc data16 jle push fiadd lret and ret push cmp (bad) icebp pop pop mov mov repnz test loopne (bad) mov adc (bad) dec xchg mov adc lds rep movb test aam dec icebp push fst imul jmp into sbb xchg pop and test pop scas mov pop mov xchg cmpsb jno aas imul mov outsb jnp stos jno icebp or push xchg aad gs cmp sbb xor sar jmp adc cltd jnp repnz sub jb rcrb mov or cmp push xchg aaa aaa out xlat out ret inc jmp xchg push fwait mov and (bad) scas and xchg int inc or or mov aas mov daa hlt push mov and lahf (bad) push lods sti adc dec fneni(8087 dec lods cs or (bad) scas dec mov fs push xor (bad) ja mov fs loopne leave mov fcmovnbe and inc out call lds stos sub (bad) js add sub mov or fnstcw inc cmpsb pop mov pop adc jo scas or (bad) clc jge or jne pop adc sbb in mov iret loopne cmp mov dec and hlt scas (bad) sub stc cmp in nop aam inc daa (bad) incb iret test test xchg sbb pop or faddl or add outsl seto mov cmp cmc fnstcw dec (bad) (bad) leave out das nop jg or leave es lret mov mov and and dec dec fisubrl dec aas divb push call inc or pop jno fcoms mov out enter dec js pop (bad) loope fsubp out daa mov aad movl stc cmp out xor int sub ja pop dec adc sahf pop add stc dec loopne inc lock jae icebp fcomi and cmp lods mov mov pop mov push pop add sub shrb lahf nopl fiadd inc (bad) int scas pop outsl mov adc shrl mov cmp dec mov cmp mov adc lret add mov aaa or sub stc mov xor dec push push pop pushf out mov (bad) int stos mov jns pop int lock dec iret lcall inc adc ljmp je cltd mov xchg pop rorl loop or or add pop jg js mov out pop (bad) bound (bad) mov je clc pop sbb mov aaa scas sbb cmp bound retw mov mov test stc and (bad) iret aad adc xchg add test push popf out xchg cs mov lock mov push dec bound rolb lea xchg mov xchg fucomip mov mov js push mov rorl pop xlat scas int3 xchg shrb xchg sub or mov sti xlat push mov xor mov xchg sub cmpsl push out xchg jmp jo mov cld pusha iret mov ja adc (bad) popl shrl dec fistpll iret cmp (bad) sbb inc cmp inc arpl cs or pusha push rorb test cli int3 test push mov imul sub add jne mov out add div jb push cmovle mov jmp mov seta repz rorb sub xor cltd into or loope popl mov pop push add mov xchg sbb xchg insb jbe ljmp adc aam xchg jl xchg mov in jl popa jge jl dec or xor je iret js xor pop fidiv sar adc add mov cwtl or mov sbb add inc and push pop or cs cmc cmp push sub dec mov sbb stc out (bad) xchg xorl pop or inc mov or xchg adc scas ss push cmp sbb outsl cld clc popf imul mov mov sub xchg sbb cmp insl lock mov clc aas (bad) jbe xlat xor popa clc cmp adc fdivs pusha cmp movsl and sahf mov into fstl out sar outsb popf or sub pushf daa lods cmp mov pop xchg notl jp test sahf (bad) mov mov push cmp jbe lea xor jne idivl push and sub cmp xchg pusha daa mov xor clc mov xchg mulb mov or mov test mov push clc xlat mov ds movsl mov (bad) mov push sub and pushf mov xor mov mov xchg scas adc mov inc pop dec cwtl fstps loope test jmp pop sahf and out out scas inc jmp mov jbe dec xor (bad) jle jp repz fdivrl inc test mov dec pop into jns movsl xchg sti jecxz mov mov jp test xlat scas addl (bad) lahf push or push inc fwait mov push imul dec hlt je mov inc cwtl add cmp xchg jne into dec sbb lret loop je mov fildl movups mov push jl fs arpl ljmp ret mov mov hlt cmpsl mov inc addr16 movq cs dec repz jne xlat inc stos iret and jb dec jns into outsb sub in in mov add sbb inc cmp repnz and cmp lret scas adc jmp mull idivb jmp lret cltd in dec pop adc and jo lahf stos mov insb leave mov jp,pn xchg inc push lea sar and dec cmpsl mov xchg cli (bad) dec mov jle hlt add in test (bad) and adc xor xchg add mov pop (bad) xchg add pop out push ficompl mov movzbl cmp dec cmp mov mov mov xor xor sub jbe sbb xchg call rcll xchg and mov jnp (bad) mov rcll movsb adc mov into pop xchg and ret xchg aas into ret lret nop jnp test push mov lea aam adc int cltd js mov inc sbb cmpsl ret lea std jae add jmp mov adc and (bad) jno fwait push jp nop inc and gs out pop cwtl (bad) out test mov pop (bad) xor js pop push fstps jbe push das sub mov nop xor sbbb mov add fsubl sub cltd adc adc repz pop pop xlat xlat mov sbb faddl or lds imul aaa sahf vcvtdq2pd and inc mov mov xor xchg cmc push inc mov ljmp and mov pop cmp cmp (bad) insl adc lods sub adc pop dec or test inc mov into cmc add loopne dec xor mov jnp adc out dec fcomps lock sti setno arpl aaa cmp mov sbb mov fidivrl jle icebp gs (bad) sbb xlat arpl incl sub std js add or out xchg ret sbb mov dec inc sub lods mov xchg pop mov or sti mov sub xchg lcall push push xchg pop loopne adc xchg mov ljmp mov xor push xchg inc pop (bad) ret sti pop mov pop daa std adc mov into dec sub inc pop pusha icebp cmpsl mov cwtl pop mov bound decl or cmp std dec and arpl push mov mov add test lds cwtl dec mov jae cltd jbe xchg or out arpl int3 (bad) ja lea mov decl pop mov adc (bad) and test push es mov push mov inc shlb stos ret repnz ret lret dec dec dec fwait or sbb orb cmp sbb andnps lods or pop pushf fcoml xor sbb cli push out and leave aas (bad) loope jbe test cmp fs sub imul sbb fwait dec pop inc pop adc mov arpl inc pop jno enter (bad) inc pushf dec dec negb test dec popf lea jnp (bad) nop fwait adc ret sub nop pop pop sub rolb xor cmp fdivrl cli push mov cmp jno and inc imul jg (bad) in dec negl mov adcl cmp mov sti xchg pusha sti push adc jbe stc lret jecxz and jle jl sti les sbb jnp rcrl mov stos loopne bound out push ja into inc mov add iret cmp shl stc mov mov cs dec xor cld sub jnp pop sub cmp pop pop and lock add and inc ja loope shrl cmp sub mov mov out imul aaa xchg ficomp cmp mov lods cmp (bad) imul and mov or xchg (bad) inc dec dec cmp sbb and mov jge lahf sub in mov or cltd jns psubd out outsl jbe imul add push rcrl adc jg push sub push scas xchg das jecxz adc repz out outsl xchg and cmc dec cli mov shrb push pusha (bad) mov push iret xchg sub mov pop jno into and nop das cmpsl lahf das sub ja sub jno scas out dec idivl popa xor push orl dec sub cmp subl pop or rol pop test or fcomps adcb das ret xchg xchg mov int sbb or mov push and movsb stc mov xchg das stos cmpsb aam add repnz and mov lock push insb sbb test inc bound jne test adc test imul jae lods lcall inc mov out movb stc cld jecxz outsb dec or out das push (bad) daa enter adc add mov lcall test dec nop hlt jecxz inc jg fadds out sub les aam fwait orl and pop mov xor mov ljmp in mov adc cmp jnp mov inc sbb testb jb jg fcomps mov cmp jnp inc mov adc xor inc (bad) push test push mov and in mov and add cmp daa cwtl neg je xor cmp dec mov stc cmp mov in repnz dec pusha xor adc in ljmp cmp mov push jle push inc test fsts imul push push or xor push stos mov xor test xor cmp xchg (bad) repz jns cmp jmp mov inc cmp mov in clc lods dec push out add hlt rcrb sbb jae mov cmp leave lcall push pop add push lahf (bad) xor push mov imul add imul ret cmpsl lods mov xchg (bad) xor in in inc or shll or push xchg add ret data16 out mov add stc push mov dec dec nop jo add (bad) aas mov in mov lret jo sub inc inc andl pushf cld sub xor outsb lcall push lods sub adc out pop aas jle add test mov ds test mov scas cmp push pop stos hlt and pop rcrl mov jg pop xchg cmp push dec nop pushf ret ret fwait cmc stos fstl inc mov jnp fsubr jbe or outsl ja out jns xor sbb jp adc outsl flds mov push andl dec add stos sub out iret push ljmp cmp ds or push ja leave fld mov cmp xchg jecxz jo lods (bad) es add loope stos testb dec les push jle dec jle jp mov push pop (bad) inc hlt adc jo jne jg mov jle fnstenv scas fsubl nop inc sar pop mov and cmp adc pop push push orl loop outsb popf dec mov (bad) push aam mov sub addl mov cmp (bad) mov cs fcoms sbb lret inc cli xor outsl scas lock cltd sub inc cwtl out sub sbb sbb inc mov gs push sub inc out lret lods dec push hlt mov sbbb outsb into ss ss ljmp dec mov (bad) mov imul push call sub mov loopne jbe push aad sbb xlat stos add nop xor adc adc pusha ret negl adc adc cwtl jmp pop jo cmp cli add leave or pusha inc cmpsb mov jecxz pop aaa sti add jbe jg xor dec iret lahf push xchg adc (bad) stos jmp mov xchg sbb push outsl sti addl aaa in gs mov (bad) push cmp mov jb add (bad) pushl mov jg cld test xchg in adc mov enter jmp mov jl or xor xor mov or ljmp out mov sbb xor mov mov sub cli jge std pop ret in mov dec movsb hlt xor cld mov out scas xchg xchg jg xchg mov stos xchg add or xchg in loope sub xchg les in xor call and push movl fdivrp dec mov pop cmovae cmp or sub popf add lahf addr16 stos outsb inc mov gs or jns mov mov addr16 push (bad) mov out cltd mov push lea push pop lret pop test fisttpll dec or or cli fsubrp (bad) dec scas add sbb cmpsb lods fnstenv cmp stos cmpsb (bad) adcb iret push mov (bad) lahf dec movsl movsb sub fiadd push fsubs add adc xchg repnz inc mov push rorl mov xchg mov xor push hlt xchg ss fwait pop jp mov testl xchg int3 fisub jge push fs cs mov lret jo or and push mov mov je dec sub and pop xchg sbb mov in push insb cltd icebp movsb mov mov sbb fwait addr16 shrb adc jg inc out (bad) pop das data16 das xchg fldcw pop pop rolb mov aam lcall pop and imul cmp addr16 lret js xchg loopne push xor outsl jno cmpl pushf push iret push dec insl out (bad) cmp lods fld pop test jg aam movsb in loopne jecxz mov mov ja cmp pop push cmp adc iret mov dec xchg jmp in and insl repz xchg cmp stos jge std jp pop testb add cmp sarb sub or mov mov js out cmp fs mov mov or aaa jmp orl or dec sbb ret jnp jg out out and daa xchg outsl fildl push movsb shl dec mov stos mov mov (bad) lock xor not push xlat leave repz or or mov jne mov xchg fild fsubrs pop sub jb jmp mov dec inc pop cwtl adc daa fwait xchg test cmp loopne add call dec inc sbb sub aas dec dec sbb push sti sub jp ret das pop leave or push loopne or inc adc out xlat imul loop hlt mov and sub mov fimul push add sarl (bad) xor jae daa or (bad) mov mov sub dec jbe popf loope repnz inc mov rclb out lahf fcmovbe movsb enter or xor mov out adcb icebp (bad) jne imul sub mov xchg iret rorb (bad) (bad) (bad) iret sub push loope pop jnp and hlt popf push (bad) or imulb mov jl leave or jno das shrl pusha push and dec lods mov loope push push push nop pop or hlt push xchg stc (bad) sub aam aaa (bad) jmp clc mov mov push stc test aas repnz cwtl repnz sbb scas test das xor pop and je or ja popa push sub popa sub rorl dec jl sbb pusha repz lcall lock inc push cmp imul pop mov addr16 bound popf lods lods sub ret icebp in inc xchg pop jp outsb fidivl xchg testb rclb fdivrs mov lcall lds loopne xor fnstsw (bad) xor test lock loopne cli imul sub dec cmp pop fmull jle in xor in adcl cmp lret mov cmp and jo mov or inc test jmp in jne push iret inc pusha cltd mov test xor xchg in test mov or movsl or mov xor mov push outsl xlat pop jl sbb pop inc out test lret mov int xchg fisubl mov xchg out xchg fisubr xchg mov dec shlb push test mov jp inc cmp pop cltd push sarl rcrb out mov add fidivl std imul and push leave enter arpl push lods lahf lret add (bad) xor mov sbb lock (bad) cwtl or pop mov cli mov xchg push dec (bad) jmp mov test cmp sub je rol mov cmc and imul roll xchg xchg inc fstpl cmp sbb or les dec scas rorb mov adc daa dec or in pop push jp orl xor and movsb jecxz and rorb pushf aad push pushf sbb push mov sub imul cltd scas xchg scas and (bad) es xchg stos add repnz xor hlt jp imul and insl rorb sub push hlt aas jecxz jnp and cli dec or ret mov push jb (bad) jo add xor or vcvtdq2pd inc sbb push pop xchg adc jne gs aad sbbl inc in inc cmpsl mov movsl sar push cmc es lea imul inc int ljmp and jnp xchg lcall xchg cmc mov cmp ret sub sbb xor insl adc andl addr16 repz ficomp and daa aaa xchg mov jle mov daa movsl call enter stc xlat shlb dec jbe and mov (bad) or fwait addr16 jecxz dec pop and lods cltd ljmp out sub or and ja dec pop loop mov lods push add mov subb mov adc hlt sti pop xor push aad xchg iret mov mov ja call clc xchg (bad) mov hlt (bad) mov std inc jge into pop jmp adc nop push jmp push inc test sbb push push jge aas inc lock mov sub pop pop or pushf push inc dec push inc mov pushf divl aad xor xlat lock push fld xor cs inc xor shll js sbb add movsl lahf out xor mov arpl mov sub cmp rorl aam ljmp in jecxz out les outsb or ret ljmpw call sbb mov push push ds jg repz adc and je daa lret dec and mov jbe out cmpsl inc dec repz mov stc adc push iret rcrl repnz sbb fcomip and test xchg xchg out out lret sub mov lret fsubl je cs or or cmpsl jl scas scas pop and mov push mov mov jbe inc mov jmp aaa in mov pusha repz xchg pop mov int3 add push (bad) insb bound sub negl jle mov xchg cmp sbb add shrb loop outsl cld nop and cld pop or fldenv cmp aam jb inc cmpxchg mov cltd sbb call cmc gs and lods pop mov inc fsubrp push xchg ss lahf push stos cmpsb push aaa repz inc and das jne xlat lds lock inc addr16 push jg movlps sahf (bad) jle out fisttp movsb (bad) pop adc movsl jp xor je mov out into test cmp xchg mov inc out xor movsl hlt setnp js sbb stos sbb inc call nop dec mov loopne leave xchg cmpb mov jl icebp and ljmp xchg add das adc jp xchg fdivs mov adc sahf add ffree jnp sti push (bad) ja add out inc inc jge stos lods cmp sbb adc leave sbb inc ficompl jae or fnstsw add int3 movl pop int3 and dec sbb bound mov add jp shr stos adc loope inc jg or sub idivb mov or popa out faddl xor imul xor add xlat cmp js cmpsl pop aaa sbb repnz xchg ds subb or (bad) push fstps pop sti in xchg clc sbbl xchg sub aam xor gs sti xchg dec cmp add pop flds cmp adc adc clc nop stc cmpsl in cmp aad movsb mov lret xor pop std rorb lret sahf xor or sub je scas and pop lret call js push xchg outsl jnp punpckhdq dec inc dec lea bound inc xor sub mov shrl out xchg inc insb jle xor gs jecxz jns mov movsl in sbb leave pop sub jmp je sbb xchg pop loop xlat (bad) mov or cmp mov push jne repnz movsl bound repz pop jno pop pop addr16 scas xchg cld pushf xchg sbb jge add pop (bad) lret or sub (bad) sub mov lock push ljmp ljmp je dec int ja add xlat dec inc mov mov data16 out and xor lds sub cltd jmp (bad) mov push ljmp mov or cmp mov fstl and cmpsl and aas insb mov decb jns xchg or mov pop lods xor stc cmp mov ja and fisubr in aaa adc xor mov cmp mov xor adc leave cmc xor lods jnp push sti sahf xlat cmp bound or stc xchg (bad) sti aas dec push mov int inc aad cmpsb or xor push inc pop or ss sbb mov push mov loop mov std test and cmp cmp cmp pop push xor inc mov in (bad) fwait mov dec mov sbb jge bound cmc sbb into xorl das xlat fs mov pop add push shlb or lret std push repz das mov vmovups jnp cmp mov pop mov dec pop rolb pop mov mov loopne cmp fmull (bad) out das mov cltd gs add mul out dec adc mov sahf dec mov rorl xchg inc jns data16 cmp adcl (bad) and scas lods test les (bad) mov sub test dec pop push cmp jne repnz add adc testl sub (bad) pushf push cli (bad) rcr (bad) ljmp xchg mov add adc aam xor aam mov fwait jecxz sti (bad) cmc lods adc mov pop add mov lea nop push xchg mov mov and stc xchg mov dec add add clc data16 hlt aas (bad) pop daa clc xor imul enter arpl or mov les inc daa (bad) cli mov inc mov mov add aaa inc push sub je test or jmp or aam dec xlat adc push lcall repnz push pop (bad) cwtl push repz xor or jns mov lea jno mov lret les out (bad) adc imull mov cmp jg add sahf xchg mov or insb mov ja adc pop insl cld in pop ret cmp out push pop inc arpl mov mov adc sub sahf push dec push dec (bad) mov (bad) pop cwtl scas test arpl add mov push fnstenv (bad) push inc scas xchg mov (bad) fdivrs lret inc idivb out jmp add pop call cmp js inc iret scas sbb in push adc push es (bad) test sbb mov add mov pop mov leave sbb ljmp scas dec mov pop dec mov outsl (bad) inc (bad) repnz mov or (bad) sub xchg fwait out sub int (bad) rol cld mov pop les test xor enter inc call mov push xlat aas cmpsl mov out push mov das sub and rcll sub mov xor mov pusha mov pop mov dec sub aad imul add mov and loope mov out mov ret and inc out dec xchg data16 cmc data16 ficom pop dec add dec cmp push sub pushf nop orb jmp sbb lods mov or jge arpl mov or or push les int3 test imul je add (bad) ja mov leave ret jp inc inc fs test or movl sub aaa adc outsl arpl push cmp out add sahf and test mov mov mov push test cmp pop sub xchg dec sub fidivl pop cltd dec cltd dec cltd dec cltd dec cltd dec cltd dec cltd dec cltd dec cltd dec cltd dec enter jge xchg cmp xchg and repnz xchg repnz push dec not scas lods shrl push inc daa repnz outsl mov mov repnz jg xchg sarb lret xor pop test mov inc adc adc clc pushf sub (bad) jno or xor xlat dec int nop xlat fucom xor pop dec adc add repnz inc jle dec in xor or inc xor addr16 pop hlt dec xor sub push repnz adc mov mov repnz adc sub cmpsl fnsave divb cmp mov cwtl movsl repnz xchg inc inc fs or push inc xchg enter xchg inc shl cmp lock out repz mov outsb test xchg inc jle out pop pop test xlat aad repnz or xor xchg stos out pop push cwtl xor fcmovne popf pusha subl frstor les push sub movsb dec jbe in dec jo jle outsb mov or call in popf (bad) mov jmp dec orl mov inc pop int lods cltd es xchg popf in in add mov addl xchg int3 cmp pop loopne add dec call aad ret loop xchg sub test jmp push cmp jp cli mov sbb fmull ds or pop leave aas mov cmp mov sbb fsubl adc sbb xchg and jge out mov fldenv mov adc ss add (bad) fdiv insl test test (bad) rorb shlb ficompl imul (bad) je xor and pminub bound mov ret pop std push mov enter das lcall outsl mov jl ret jno ljmp aad xchg cmp dec and shrb cmpl jge adc pop xor cmp push push in jo lcall popa cmp xchg sbb dec rcrb cmp rcl jl pop mov (bad) bound (bad) ss cld bound fdivrl mov movsl sub in sub push icebp in and xchg cltd sarl mov sub outsb lret ret mov cmp data16 mov int3 dec pop sub int3 fwait inc loope out stos ret sub sbb mov (bad) shrl mov mov pop cmp loopne fwait scas test jg xchg lret inc aad aas xor push push pop lds jg sub mov xor int adc xor in (bad) mov mov out mov aaa pop (bad) xchg add xchg lock subl in js xchg adc xchg int3 cmp out pusha pop test xchg xor ss lcall xor les mov ja test (bad) push (bad) xchg addr16 ja inc mov lea xor outsl mov dec out mov mov data16 fimul cmp pop mov xor loope cld inc dec adc scas mov ficom and jnp imul clc ret mov shrb (bad) xchg pusha vmovntdq xor or pop aaa imul inc inc addl pop stos add jmp leave sti mov mov daa xor adc cmp cmp insb cmp in ret loopne fcoml int3 adc mov popa imul xor and sbb adc push adc inc movsb hlt dec mov sub in push push (bad) lcall les or mov insl daa into int3 sbb and adc mov sbb mov mov cmp mov jb sarl pop outsb or pushf mov shlb cmp add mov (bad) fwait push dec bound inc xor sahf pop gs out xchg add add xor xchg jb inc arpl fisubrl aad mov (bad) mov out sbb mov ds mov push sbb mov shrb cld (bad) mov fisub (bad) mov mov mulb mov bound data16 jl daa mov xchg daa xor daa pop lds das sahf outsl inc jb out aam (bad) jb xor aaa jecxz or and popf stos push ficompl xchg pop or pop out jl out pusha jg or mov fwait mov in and inc add jb enter shrl stc std xchg das xlat jecxz xor ss jp cmp cmp cmp push sbb push cs rolb sub cmp xor cmpsl pop test push call in push mov sbb cmp inc icebp push ss aaa stc cmp jnp das stos les mov cmpsb xchg pop mov outsb int enter cmp jle in mov loopne out dec push in out rcl sarb incl test aaa add jb jnp inc cmp mov mov push or flds pop movsb mov int gs lods sbb fimull push hlt fs mov ljmp (bad) clc mov dec sub sub mov test leave ret jmp repnz lret mov mov subl call adc sbb jg scas repnz mov ret stc inc xor sbb pop lods bound and sub cmp ds aam loope mov outsl push shr (bad) out push add jo cmp xlat push dec hlt cmc in adc addr16 xchg dec aad mov xchg mov push daa inc inc insb outsb popa push xchg ficompl imul iret or in rolb dec (bad) fdivs push aas imul loop pop lods and xor inc cmpsl (bad) cmp pop xor in lahf fmuls xchg mov xor fimul sub sar mov popw xor push repnz aaa lea jge fstpl fs rcrb xchg dec adc push mov xchg test js jle ds add xor outsb pushl int3 jnp adc mov imul bound or std fcomps mov mov (bad) in enter enter int3 cwtl loope cmp mov push adc es sub jmp or int sarb test lcall aad mov test jmp test fstl test out dec xlat mov rcrl mov mov (bad) sbb call cmp jns dec enter mov push hlt cwtl dec mov test test shlb fcomps ror clc leave enter fldcw xlat mov enter push insb imul xor xor shrb popf test pop jle (bad) adc push ret inc in xchg push lods int arpl mov jne xchg add pushf xor xchg sbb sub rcrb push sub cmpsb mov push cmp xor ds mov out fs mov xor (bad) fidiv jle cld lahf xchg jno nop mov mov in repnz pop int test mov jle scas (bad) jmp in daa stos sub imul stos fstpt (bad) jecxz sbb in (bad) ja jle adc fstp xchg les push je xchg sub xchg ret dec fcom lock popf imul call in push lret mov lret mov jl sub push inc in inc ret and mov int mov loope lret shrb push sahf pop idivl mov mov push cmp mov test hlt jb int shrb ret sarb xor push xor dec add outsb test insb add shrl dec loopne call sub jp test or fs xor mov jp xor and pop aas pop je int3 rol ja add mov inc cwtl inc adc ret shrb (bad) cld push arpl stos cli sbb xchg cmc cmp pop mov sbb mov inc add aaa jnp pushf into mov scas cmp cmp fs inc ds fstpl (bad) jge into aas xchg sub or xchg popa add in dec fwait addb sbb lds subl push jb bound repnz dec push push sbb aaa inc addl fcmovne loop iret cmp lea fwait sbb imul fcoml push sti inc sti test fisub inc sbb jnp sbb dec ljmp add inc pop addr16 sbbl dec jne ret pop std clc bound lret mov fisubl or mov mov fxch mov lret push push push push push push push push push push push push push push enter nop add push in in push mov and dec push mov pop jge mov pop dec sti jecxz (bad) sbb fwait lret adc scas sbb scas xchg insl pop jge mov repz mov enter sarb fadds xor sbb ret mov lret inc nop push cwtl std js or test fnstsw scas fmuls js or pop (bad) cmpsb cwtl incl mov and and or call add popa je std jmp adc push clc xor inc cmpsb roll mov and add fwait clc loope subb jno push call (bad) jge insl shrb movsb rcll sub fisttp iret test or rolb pop sub mov inc add test popf loopne stc lods fisubrl cltd int fsubl lods ret inc (bad) (bad) mov jecxz ret mov dec adc cmp icebp ret lcall loop xchg (bad) in call pop jp add sub xchg inc cltd inc lods ret lcall int3 in sub add and mov jl jl pop cmc pop insl jmp xchg in mov loopne inc cwtl mov iret stos mov cs and and add push push pop in scas out scas iret inc xchg scas enter pop add clc xor sti lds fistpl std stc std lods mov xchg pop imul push in cs insb add mov and lret mov pop jno mov mov sahf call leave mov add stos into popa shrb adc pop decb jmp fldt sub (bad) bound arpl (bad) movsb enter fildl pushf mov ljmp dec mov sub cmp fcomip dec jb repz in push dec lock insl or pop add sub sbb je call sub fisttp shll jp outsl or adc xchg sub pop je mov xlat jecxz jno stos movsl and shr je (bad) fistpl cltd fwait lods int out jmp dec add mov popf rcrl mov or mov (bad) pop out or mov mov dec mov push jge shll shl movsl imul jp insl aam pushf and dec lods (bad) pusha insb loopne call jmp inc pop mov dec loopne push ror add loopne cwtl clc js js js sbb mov scas fadd call movsb cmpsb or adc jmp and lret mov sar mov or (bad) jno (bad) and pop lods pushl mov inc push inc fdivs adc mov bound inc call rcrb mov into loope ficomp into loop add loopne inc push add notb sub (bad) push cltd jge lods bound jle pop test ljmp jp aaa add ret push cmp mov mov pop xrelease es lods pop cmp mov mov mov or (bad) adc aaa adc ficomp push fwait mov pop dec dec fninit loopne push int3 jge outsb cwtl mov lods loopne inc add pop pop mov int3 cmpsl cmp mov pop inc stc enter shl add push (bad) lcall mov adc cmpsb les ljmp jmp bound std test loopne push fcmovne add imul push repnz lea incl adc stc mov mov imul int ror adc lahf adcb ficomp jmp mov cmp mov (bad) cmp mov (bad) loope movsl add push pop jb (bad) repz sarb jge xlat in push aas pop fldenv pop out fsubs scas ds and incl push fisubr xor mov inc xor inc jne ficompl outsb (bad) push and leavew (bad) mov pop inc and fcoml pop aas xchg loop,pn lea jecxz adc insl popa xchg out pop and stc rorl mov dec jae sbb dec cmp fistpl addr16 clc fiadd divb (bad) leave dec mov lcall add sti hlt or sti add adc jge (bad) fdiv cwtl fnstsw test add outsl pushf stos mov sbb push enter add jg inc cli add dec ja add nop dec xor xchg dec mov aam inc xchg adc jno mov imul stc jmp dec pop out xlat int imul dec mov shrl or and (bad) loopne call jno,pt sbb out xchg out jle push sbb jne test ficom jp int pop jns stos sub add int shrl pushf and pop jns jns push enter sbb aas ja aad inc mov stos nop inc decl test or mov insl fist test repnz and add jo dec mov lcall repnz push popa rcrl movsl iret jge push sbb fwait pushf jle add lock sbb fwait sub push movsl out dec add lods add and cltd cli jp add jle xchg push shr mov loopne pop jp sub aas fisubrl mov mov sub (bad) jmp aam call push inc cmc stos mov lcall repz xor jg xor cld fsqrt or pop mov pop sti mov outsb mov movb inc push popa les push pop inc stos xchg stos pop test cmp sbb pop rorl pusha mov pusha stos sub and and jbe lret sub sub or das or xchg sbb out out (bad) mov jbe fwait andb mov xchg out roll add add or adc add inc mov push rcrl sti outsb scas bound shr cli pop jmp xorl inc pop inc adcl push popa mov lret xchg out insl mov fisubrl fdivl ljmp mov rcrb icebp push insl xchg out (bad) iret loopne insl mov fwait push xchg push push gs js sbb (bad) jl lods push lods and (bad) jge mov imul mov mov int3 or fild lds and mov jle movsl insl lods bound jecxz ficomp cltd push or mov push scas pop mov rcrl orl adc inc or inc push into cmpsl clc jg cmpsl dec push jne dec xchg int aam cli cmp aaa xchg lods les ret clc dec jnp inc (bad) aaa cwtl int3 aaa scas or sbb xor (bad) sbb jno inc ret bound stos outsl stos (bad) or sub into call inc or sbb sbb lea lods cmp stos out sarb stos dec mov shrl mov cwtl add fwait xchg fwait jecxz scas jo sbb xor adc aad gs dec push roll push orb gs jecxz in mov dec fwait jns jns push ret inc test jns stos out pop dec (bad) sbb fstl test ljmp add inc and call dec dec xor mov sub aad cmpsb jge adc jle cmp popf jle add std outsl pop enter xchg add (bad) jo push or rcrb ucomiss mull dec pop aam add loopne inc lods andb (bad) pop pop insl pop dec pop das divl lret outsl pop iret or or xchg rorb xor sub sub mov inc pop sbb into push mov loope xchg adc or push pop ljmp xchg or ja cwtl push lcall push out mov mov stc ret in and aas iret scas mov out ja in xlat adc cmp jle inc dec test mov mov syscall sub push dec (bad) leave ja cltd sub (bad) aas push pusha adc jno sub sahf xor mov lds pushf sbb test lds mov and sub cmpsl mov out xor adc ficoml fadds add inc ljmp repz jle jnp jbe mov in (bad) call sbb hlt xchg mov pusha pop cmpsb mov inc adc js jle mov stos push out lahf mov mov mov lea inc lock pushf add pop sti mov lret cmc pop jecxz and and or mov imul cmpsb test inc sbb pop not add pop add mov xchg xchg les cli pop mov sub and and cs jmp inc js shll add xor push lcall lahf sbb std insl mov pop ficomp into ror jl enter call dec leave lret lret (bad) rol fdivr call dec leave lret lret (bad) rol fdivr call dec leave lret enter push or xor fimul sarb sarl (bad) push leave (bad) or fcmovbe adc sbb jl stos loop jmp fsubl mov repnz lret sbb mov cmpsb out cmpsb int sub cltd inc dec (bad) hlt jno fmuls sahf cmp gs subl rorb or mov (bad) sbb and sub or mov or outsl mov adc (bad) (bad) xchg dec insb les or pusha pushf inc cmp push test xchg (bad) xchg mov or dec out int3 pop jp xchg mov sbb subl stc fdivrl bound sbb jecxz fstpl mov (bad) cmp aas push paddusw int dec fadd into xchg loop test les ret xchg loop xchg outsb xor sbb jo (bad) push inc jo xchg jp add enter imul fisub xor (bad) cmp (bad) adc mov push int3 scas pop les repnz inc mov mov outsl les pop mov jae shrb mov fsubs jnp into fcmovb and int lods mov arpl in or sbb insb xor and fimull add adc push enter jp cwtl mov mov call mov push loopne cmp icebp (bad) test or push std test jo (bad) subl and pop sub jns arpl jg fs xchg mov icebp mov sub jne jecxz ds pop icebp inc sub dec sub xor aaa jae push sbb repz (bad) xchg lret add enter orb mov jmp pop xor adc push popa push pop addr16 fiaddl push rorl adc in arpl daa fwait (bad) (bad) xor mov (bad) cmpsb jecxz,pt sbb (bad) dec ds lahf push mov fsubrs pop (bad) cmc pop lret or clc icebp rcl shl lret mov dec ss imul scas push mov cmc xchg dec jge mov pop dec xchg cmp loop sbb dec jae in mov aas sub test jne into or xor xchg gs xor and jo adc repz sbb add jg xor xchg jg sub mov icebp daa sub mov push inc push nop mov ret push (bad) jp clc or pop jp cmp push sbb inc mov aaa das std sti jno sbb dec dec pop or mov ret clc lods add out sub gs out subl adc pop push imul cltd adc imul sbb mov (bad) dec fcoms int popa jge popf dec fmull cli pop or adcl std or push xlat push mov cmpsl jmp xchg sahf jg xchg and cwtl dec (bad) sti xlat mov push hlt shrb insb data16 test rorb dec push cltd or rcl not or inc jne in fsts lahf pusha leave mov ds push cmp sub rcl push jle mov fcoms sbb xor ja les andl pusha push lds pushf inc scas (bad) jle into push out hlt sub pop xchg xor fdivs sti xchg dec adcb cs add out fidiv and rorw xchg out mov mov insb or cmc mov lods or shrl and or cmp push mov and cmpb inc ds inc pop cmp pop pop into lret outsl adc out mov ret lret xchg xor test cmp leave imul movsl scas repz xor popf sbb jmp and aaa mov inc dec jp addr16 jne adc add pop hlt rolb mov mov push int or push ret xor cltd add jl (bad) lret cmc push adc repz push lret xchg jmp pusha in lahf push into mov repz lock or sbbl test jl pusha rorl pop test mov push cmp dec inc inc nop sub aam insl (bad) loope fistp sarl cmp enter adc loopne scas xor mov push pop cmp xlat cmpsl or sub iret push imul mov jnp pusha and mov adc movsb jbe cltd mov sarb and outsb or cmp scas inc adc pop xor call movsl insl out mov out es mov mov add cli and mov fwait add in pop or sub outsb pop inc pusha icebp cli daa sbb fist xchg adc (bad) push xlat pop adc push test stc sub int3 jno and es popa jle in mov adc lret cltd adc ja add es mov mov dec ja stos mov mov loopne mov add dec fist mov add mov adc call in (bad) and inc cmp inc fwait int test xorl sbbb push sbb ja arpl mov out imul outsb aaa pushf pop adc or outsb in and jp addr16 xchg imul mov dec sbb pop je aaa inc setb fistpll mov xchg ja jbe clc dec lods stos mov mov and cmp pop ret ds aad adcb cltd les int3 sbb dec icebp ss mov add into dec cmpb push jge lock sub cmp jo pop dec sbb xchg ret xchg fadd aam mov adc inc lods cmpsl aaa out mul sbb pop outsl lds pop ljmp xchg add mov dec or loop scas (bad) pop ret popf ret jle jmp popa inc fs std cmpsl les xchg xor xchg ds or xor dec inc test and adc mull insl or mov (bad) repnz and fadds loope scas fwait add ds mov and data16 test push dec inc sub or stos cmp popf out mov les sbb rclb mov loope xchg dec dec add fistp xor or mov mov sbb cmpsb aas fistl cmpl sbb cmp (bad) xchg fwait sub mov (bad) mov out adcl lea in call rorb fadd jl sub pop bound adc rolb loope je inc mov jne test mov xor addr16 push fistp mov (bad) call outsb pop data16 add rcrl sub fmull jbe sub dec in (bad) mov push loop pop jb push sub popa outsl cmp data16 imul jmp sub jmp and (bad) loopne adc call fisubrl jecxz jb (bad) int3 pop je mov lds pop adc test fwait and stos mov lret dec shl pop int3 mov andl das lret nop (bad) into xorw test sbb xchg or cmp nop fbstp mov aam insb mov orl repnz xor mov cmp int stos push mov clc xchg popf jo fwait daa sti add xchg xchg loopne cmp mov xchg subl out fcmovnbe (bad) cltd sbb mov outsl mov dec pop imul sahf and arpl subl dec aas ret adc adc cs jne push fwait and cmp leave adc arpl push pushf fcoml aam adc cld adc adc sbb push test lahf (bad) shrb mov sbb xchg lock sbb (bad) push xchg lea (bad) adc fcompl add adc outsb (bad) xor xchg xchg sub sbb test repnz inc sbb hlt jns mov imul (bad) adc pop dec clc xor fmull dec dec dec sub scas inc jg or or popf sbb repz pop cwtl adc sarl mov inc and ja lods cli sarl in sub test fdivrs cld cmp mov xor jmp xor das and adc (bad) (bad) xlat insb jmp jno sub ja jle inc or xchg cmp pop into add loope pop movsl test rcll or inc cwtl pop out sti movsl cmp pop in das in lods iret stc mov mov inc fsubrp dec jp jae mov cld sub lods mov nop pop mov stos push push jb mov add inc dec clc push imul dec leave repz adc loopne push push ss es movsl (bad) sbb cmc sub fidivrl xor ss mov sbb jbe and mov test jp push pop fstpt mov aaa jmp and push mov mov jne adc mov mov mov inc pop pop jle xchg adcl cmp (bad) push fildll sub daa cwtl inc gs nop sbb hlt add push into (bad) mov and cmpsb xor xlat in and or inc add add in xchg and fisubl push dec scas imul push pop mov int stos hlt out dec xchg in cwtl dec dec js call inc cld pop adc inc loope jg lcall sub mov push lods inc and or outsb dec xchg jno jmp ljmp lcall ljmp in loopne sbbl lret and inc clc or mov arpl rcrb test and iret lret idivb sub push mov jg shrl mov dec fimull in into inc mov push sbb mov aaa (bad) xchg mov cmp out bound or enter xchg cmp addr16 mov push mov rorl fmull xchg data16 daa dec popf xor jbe xor mov add shl xor in pop or xor aaa out xchg cli in daa dec test bound bound or lret jb jecxz mov addr16 aas dec jb lea bound int cmc bound (bad) je push data16 daa dec mov lea jnp data16 das and pop daa call js xor pop lcall add (bad) je xchg sub lret bound outsl push cld lea ret mov pop push jb cmp xor andl mov lods xchg xor pop sbb loop push mov xchg xor pop sar fstpt mov addr16 xchg cmp data16 pop push lods cmp clc (bad) pop (bad) xor jecxz xor mov dec pop ret jmp jns xor iret xchg incl mov mov pop add addr16 mov and cmpl in push notb arpl je or jle cmp bound cmpsb out and or bound int xchg mov dec lods xor pop ja mov daa mov addr16 popf cmp out popf aas loop call dec jp cmpl push stc push das popa xchg xor (bad) data16 pop fsubrs andl adc pop aas arpl int les je loop cwtl jecxz das andl push divl and push clc push push daa or mov pop mov lea push push cld int iret cmpl push hlt sbb pop xchg cmp pop push lea dec xchg xor xchg (bad) dec aas lods xchg xor adc cmp bound ja mov daa (bad) xor xor in loopne mov pop dec mov dec push jp xor lock xchg data16 pop (bad) bound (bad) xor icebp pop aas test dec push sti bound call fbstp frstor dec lods cmp aam xchg ss roll mov mov xor xchg repz nop mov (bad) popf cmp xchg cmp cli popf daa lea scas push std jb mov xchg hlt jge or and cmp jb dec je adc int punpckldq dec push mov jo inc xor aad mov lea push mov iret jb std push cld sbb mov popf pop add cmp mov inc popf cmp out or xchg sbb std sbb mov movsb out std pop rcll xor idivl xor push stc add into mov mov pop cli push test xor inc mov lods xchg repz mov lea inc popf cmp dec pop (bad) je add push jae je,pt mov loopne cmp hlt pop xchg gs mov test dec daa (bad) bound pop aas iret bound cld push cld popf pop call xchg xor pop fwait jb mov dec aas test ds or cs jno cmp out adc push mull dec fs aas or xlat or mov dec xchg cmp pop xchg jb inc out jae (bad) in fidiv das mov mov addr16 je shll mov or aam outsl lcall (bad) add lcall sbb fadds mov xchg out inc mov dec add addr16 and ds sti pop cmpsl or fisubr inc call cld jge add mov mov cwtl movsl mov jge add (bad) xor fidivr pop (bad) lods dec es or sub mov cltd (bad) sbb adc mov test mov cmpsb cmp mov push lea mov cmpsl (bad) (bad) lods or stc ror out ss push pop jg xor sar into mov dec cmpsl adc out xchg rcrb sub cs jmp or mov adc sbb in inc scas push mov insl (bad) xchg test out sub push add test xchg dec xor jns jno dec cmp mov dec adc xor (bad) mov loopne xchg push sub dec je jmp cmp clc hlt sbb ja push mov arpl enter fstpt imul xchg arpl outsl out popf inc xchg mov and enter pop or imul dec mov mov dec mov sarl add jge adc ja add mov ficomp movsb adc xchg xchg dec and jp jle,pn cmp ret inc adc dec das cmp add inc repz test fst lods push inc fimul or pop enter js (bad) in pop or aam fsubs cmp int3 mov mov mov fcompl sbb cmp lds cmpb cmp fwait mov ror (bad) loopne ljmp xor rolb aaa mov and or arpl mov inc push in mov (bad) lcall push jns cmp inc pop pop jg aas hlt mov mov stos inc or cmp mov fbstp data16 lock jae loope,pn push adc sub sarb sarb mov leave js xchg xor mov dec imul fbstp push (bad) xchg (bad) xor jnp push jle and (bad) lds dec (bad) decl sarl mov nop cmc mov cmc daa xorl cmpsb and xchg test sbbb scas (bad) rcll adc clc (bad) mov enter pop popl xchg sbb cmp outsb jae mov add mov pop jge cmpsb mov lods cmp shlb data16 scas rorl jle pop sbb mov imul or (bad) or lods mov and jp mov add sarb xchg adc mov (bad) cmpsb sub jnp add xchg sbb adc mov movsb pop rcrb loope clc adc imul inc push jge clc leave mov aad dec xor inc das xchg pushf cmp and sbb mov xor cmp popl shrl pushf xchg scas add std mov out mov inc (bad) leave test cs daa mov inc add cmp mov movsb jns push xchg mov mov popf jo sbb xchg int3 and mov lods dec xor (bad) repz rclb fs xchg mov rorb mov push cmp into es loopne fdivr push jo stos and dec and mov sub jbe into mov icebp pop pop movsl pusha lock inc js pop mov lock nop (bad) lods lods lret imul insl sbb mov cwtl das or add jne das xchg lods mov ror test sahf incb inc pop fs xchg jns jne lds inc and ja push or cmp and sub arpl (bad) jae add je adc data16 mov xchg cltd shrb dec pop sub ja shrb lock shll (bad) rcrl les (bad) int (bad) jecxz dec xor cmp xlat bound xchg pop pop es flds sahf imul or jo pop sbb (bad) mov mov (bad) jl fistp jns sub adc and sbb movsb gs mov and xor sbb test and nop mov xor xchg sub or mov jmp sbb leave cmp mov lahf xchg fldcw mov jle fincstp test out in push lods xorl lgs xchg fadds cld xchg sub mov lahf mov int3 jecxz push pop mov xlat leave xchg movsb inc mov (bad) jb mov pop ja loop dec xchg (bad) mov jg out sbb push jmp jg fwait or test jo aaa repz pop les daa loope in jle push and mov jp xchg cmc dec mov and lock stos cli pop ss je insb xlat lds (bad) nop arpl mov sbb xor push xchg mov das cld cmpsb mov les gs dec stc arpl push adc mov loope jb sub out leave pop cmpsb out mov pop hlt test out cltd dec xor call arpl add pop out or jl sub pop add jge pop cmpsb enter push out stc mov xor clc sbb sarl inc cmp scas jns push cmp out jns xchg mov das mov fsubrl sbb inc sub inc mov inc dec add js ljmp or sarl or inc or gs lock bound inc xchg mov fiaddl js or or ss mov setl (bad) ja xchg jl fwait or sti add xchg and mov stos jle or push sub mov loopne pushf sahf push add sub leave out mov pop cwtl sarb inc in in lret jp sub xchg xor push and mov std in mov (bad) jno pop sbb xchg int pop iret mov (bad) sbb jl (bad) xor push xor inc jge mov adc sbb daa fdivrs mov je aad pusha sub xchg ljmp lret cmp xorl add jno pop xchg jo add add enter pop cwtl add fdivp mov or cli loope xchg push and imull mov mov pop push cld (bad) std dec lret or outsl sub scas scas mov mov adc pop popf mov je out pop xchg sahf sub jnp in cmp pop or insb ss cmp and and fcmovne dec in (bad) or xchg nop jg rcll in xchg js xchg pop push push push pop idivl mov les loop scas out cmp clc or push es mov cmp xor mov dec bnd bsr xlat mov pop ret nop (bad) hlt jnp mov (bad) pop pop (bad) adc out adc sbb repnz push int3 sbb cli ret shll and mov aam mov mov call leave orl push xchg (bad) xor pop rorb lret add (bad) or aaa inc jnp push inc sbbb mov push in add ljmp in outsl test lahf adc sbb aad sarl popl insb (bad) dec sahf sbb lods and sub (bad) lea jbe test xor lahf call aaa dec int test rcrb push xor enter mov push jbe push addr16 push mov jl xor or jnp fs testb js inc jg mul test pop xor lods andl cs pushf jnp jb fs (bad) (bad) psrlq cmpsl (bad) sahf or jb mov pushf dec sbb mov (bad) jns mov or lds cmp jno insl xchg sahf xor je add and pop fisttpl repnz loopne pop lahf cmpsb lret pop push pop or fsubrl iret or imul rcl test fs divl mov fs push push (bad) pop inc lds push and jle sub jno les push add les cmp imul arpl cmp adc jecxz call jmp std jae jg jns test stc jbe adc xor test mov mov addr16 jo sub mov jmp or push jle (bad) lcall out pop jmp sub lea mov das ds mov shll sahf mov add popa test into push cld mov or insb inc mov and nop lods xchg jnp and pop cmpsl fwait pop fistl testb ja xchg daa jns push scas add outsl jecxz pushf popf xchg (bad) in jne andl sbb adc mov sti mov icebp test stc lahf fwait fwait out sbb xchg clc pop (bad) mov in (bad) pop test (bad) xchg sub and sahf pop xor pushl je sahf push in push push addr16 xchg inc cmp mov mov aad xchg or add inc mov mov insb lods test inc cmp adc mov jp cmp leave cmpsb mov and pop pop xor dec (bad) push pop out inc xchg adc xlat notl xchg sub xlat xchg jmp inc jmp dec icebp ss jge aad push shll faddp mov hlt sti imul pop cld arpl pop sbb andl xlat dec inc mov dec dec jge js xor mov cmp cmp insb or stos dec mov std imul jae fisttpl ljmp pop cmp js setl roll insl rcll dec adc jno dec les mov mov fsubs mov add fs es ja es dec ljmp hlt mov pop sti clc orb and addr16 negb push (bad) jae and xor cmc ja mov mov in jg sbb push cmp mov stos or fdivs loopne sbb sub shld adc cli or jbe push fxtract inc fist adc inc fsubs mov inc inc aam adc lds imul aam fmull mov sub cmp xlat sub add mov fldcw xchg cmp cmp (bad) mov pop or les test cmp ljmp hlt xchg jae push dec lds xor addr16 lock push test dec dec cmpsl fildll ds inc ret xchg dec or pop add push ss pop adc jle sahf xchg cli pop sub mov dec jge adc or loop jge ficomp mov (bad) imull dec inc jecxz ja xchg outsb (bad) mov int mov andl subl cmovne xchg dec int3 push mov rcrl sub stos dec adc loope dec adc xor xor imul xor xor pusha cwtl mov jbe movsb jne loopne push je mov mov or loop loopne jno or and mov add xchg push test push pushl jle mov adc test inc cmp xchg xchg xchg je or jmp aad imul xor jmp xchg inc lock mov int3 (bad) cwtl lods cli loopne sub std jle push lods (bad) or mov movsb lock mov js jg clc es inc cmovp in pop push mov jbe das xchg lahf mov xorl mov sub mov stos out sub cmp cmc hlt int (bad) rcll or xor repz (bad) call leave (bad) jno xchg cli jge cltd push scas scas dec xchg adc sub pusha add pusha das mov and jo sbb mov int popf mov mov roll hlt cmp test mov jecxz push loop sti mov cmp out push and push lahf jg addr16 push mov mov cmp push loopne out push fnop mul lock inc (bad) (bad) imull or (bad) mov subl insl inc add addr16 lahf and xor hlt jne xor outsl or mov push push fbstp mov cmpsb mov pop outsb aad mov loope inc jbe add xchg imul mov sbb and jbe and lahf test outsl pop sbb xchg fisttpl incl dec (bad) xor lahf mov insl jb pop jnp and dec (bad) arpl sbb fsubrs and add pop xor xchg js cmpsl jl xor or pushw sub cmp sti gs jl push push jo adc cmp and mov lods mov std (bad) mov jecxz cmpsb pop jae cwtl or incl les pop sarl cli (bad) or int inc inc ffreep (bad) jmp div xchg jmp dec int3 stc aas stos cmp mov or mov outsl sbb push das (bad) adc mov sbb in out out (bad) stos gs and icebp pop lcall lahf in hlt fcmovne push popf test xor cli sbb inc mov mov mov cmp jne sub push push test test pop outsl inc and cs je cmp test push xchg lcall or xlat xchg xchg cmpsl jns dec and outsl rorb pop jne push inc int xor mov out rcr movsb jo mov hlt (bad) xchg ja cmp or push in or call idivb clc xchg add cmp repz leave imul lock inc data16 or mov outsb xor sub bound jb popa fisttp pop fnstsw mov mov pop dec cmovo sbb xor sbb push cmp xor mov fwait outsb (bad) sub bnd sub (bad) adc mov out jns or push int and out orl aaa xor aas sbb cmpb mov imul jo mov xchg jo into outsl inc (bad) xor fnstsw adc rcll push mov inc push ss insl fcoms js push xchg test mov jno xor repnz es (bad) lret enter mov pop leave and aaa mov cmc add mov subb mov xchg adc mov call clc sahf pop or jp (bad) clc pop xor js mov ret mov mov call bnd mov iret fldcw into pop cwtl push xchg sahf pop or or or push jecxz icebp sbb jl adc idivb push ret push mov (bad) sbb pop std mov rcr clc mov bnd sarl loopw,pt scas sub push cmp mov cmpsl test push aad mov jmp or xor push (bad) outsb aaa xchg rcrb jne sbb push dec lahf cld inc ficompl pop inc xor cmp jb cs andl lea add jnp lods adc or push aaa test mov sub cs mov arpl aas shl (bad) jge sub mov bound cmp in ss cli sub xchg hlt jge fldenv dec pop inc mov push loop (bad) ss xchg scas lahf sub cmp mov adc das mov sub pop cmp movsb lods mov arpl imull ds sti ffreep dec std cld xor xor js jnp rorl mov sbb fldcw and mov push xor add xor sar imul lock lret mov gs iret rcrb (bad) adc mov mov (bad) mov cs xlat subb fstpl mov xchg addr16 xchg enter rcl jp repz std jbe (bad) dec add dec stos pop in bound adc sub xchg test (bad) lret and cmp push (bad) sbb add push inc xchg push mov xchg fyl2x push int3 pop pop xor cmpsl nop xor inc jge sub roll icebp mov pop cmpsb mov stos inc decl addr16 sub push ss mov pop push in (bad) cmp test in jl jmp jo push cmc stos xchg jb adc hlt std data16 mov lods out sbb xchg jae add pop cmp push sbb stos xchg lahf add jae pusha cmp xchg sbb les xchg xor push xchg xchg sahf loopne jno add cmp fsubl outsb sti sub pop inc or fcoms xchg (bad) repnz jecxz inc sbb arpl sbb jp push add mov xor or addr16 jmp je xchg (bad) push nop sub inc mov aaa jmp ja push daa xchg push cmc cmp stos sub loope cltd adc mov sarb or mov jno pop or sbbb (bad) sub fimull loopne icebp out test ret iret cld fs sub outsl shl adc xchg cmp es dec sub adc fdivl xchg test test cmpsl cs arpl aas (bad) dec or addr16 int3 cs xor inc sbb jae adc and (bad) and aam scas inc dec sahf xor insb jmp lret outsl and ljmp repz push jns and loop mov int nop leave mov sub int3 daa and ret cmp add sub (bad) jno fs test arpl (bad) cli inc pop addr16 adc mov int push ret xchg fscale scas jns fistpll popa push das lods (bad) and lock xchg popa (bad) (bad) sti repnz pusha xchg in fldl pusha mov add repz arpl pop lock mov mov xchg cmpl mov loope (bad) lret or sbb lds cmp jnp test ss call arpl and jge mov cmp sbb insb mov sbb mov dec add dec mov addr16 jns int (bad) fdiv sbb loope or in pushl push push (bad) iret adc adc out push push (bad) repnz in (bad) insl sub outsw jo xchg lea mov adc pop ds or sbb push or jb sub fisttpll xchg insb out lock (bad) sbb dec inc decb jae lods jge out cmp cltd mov decb jl repnz mov dec and and lcall mov sub mov les incl dec inc hlt cmpsl sub jle cld or mov in mov sub pop push xor pushf inc movsb push lods mov repnz xchg cmpsl stos fiaddl xchg (bad) gs fldenv cmp mov addr16 fcompl pop sub add dec mov jecxz inc (bad) fstpl pop ja hlt mov lods mov push lods mov push adc xchg mov pop mov sub dec pop dec daa loope mov mov repz cmc ja int shr jge lea cmp arpl addr16 jns (bad) mov cmp in xor (bad) neg (bad) loope fildl notb js imul cltd or jne jno rcr jne and roll sti fnstenv add mov add gs xor add stc divb or xchg sti cmp stos adc cmp popa and mov (bad) shlb int3 cmpsb xchg popw mov cmp mov scas pop stos xchg in nop in ret inc and ret jno cmp xor mulb ljmp aam add mov in mov (bad) std jo push dec jo inc mov xlat pushf mov add push adc mov dec mov ds aam popf (bad) or push negb xchg pop sbb (bad) in mov add mov inc repnz pusha jp dec test je mov icebp inc xchg push cld jae inc mov xchg push xor inc stos dec or inc mov rclb xor xor aas loopne or dec in mov dec sub imul mov into stos mov lret cld jns push test xor addb in dec cmp xchg cs js xchg add fs push mov fcmovnbe sbb js loope outsb out inc repz mov fldl pop or ret sbb stos adc inc jb fidivr (bad) ficompl outsl inc out jmp out jecxz xchg pop inc cli ljmp leave out pop movsb lock xchg mov bound jecxz imul clc loopne push xor sub mov ds movsl inc mov repnz pop outsl push sub sbb pop (bad) mov test nop out in shll popf mov sbb lahf aad imul pushf mov sahf sbb jno push ds xor insb pcmpgtw add sub in push hlt xchg loop adc jmp mov pop xor cs sbb push sbb in addb out mov mov incb test mov mov inc fisub dec js push mov loop or inc mov test cmpsb jle lcall dec fnop bound andb sub mov or push ret imull sub repz lods stos bound mov adc jle int xchg sub jnp mov sub hlt jne shrb jl push add notb cmp add dec xchg les or (bad) adc dec scas scas (bad) adc nop out insl sbb push std movsb xchg cmp movsl out (bad) popa lea adc loop fsts mov xchg jae mov adc aam jnp adc or xchg std cmp subb je pusha stc int or mov lret adc ss roll xchg mov adc cmp jle inc dec mov movsl pusha pop test xor (bad) xor mov mul stos mov lret ficompl std test adcl aad xchg and data16 cwtl lock test lea aaa sbb movsb call jg fs cmp notb dec or imul stc jecxz jl mov jle push cmp pop addl xor lahf fist aaa insb dec int mov int jns sbb fist push icebp rclb or push cli xor (bad) aaa hlt loopne mov sub into sti cmc ds out jo xchg psubsw and popa mov sub idivb and xor jecxz push stos fiadd in jp xchg pop loopne sub out mov insl xor lea inc inc xor push mov repnz pop out mov ss mov js jae pop aad les gs add rorl fwait test sub je fdivl ja mov test xor cmpsb dec push mov pushf cmp sbb mov jns sti imul fsubl lret divl pop mov pop icebp dec sub dec mov decl dec or push mov xor mov popa mov flds inc cwtl lock pop aad aaa fsubl add dec adc lock sub jmp cwtl je and repnz inc jl mov push sahf xchg out loopne push mov jmp rcrl or hlt shlb xlat and icebp inc push dec dec rorl int inc mov cwtl mov pop stc (bad) push add push mov adc testl sub or stos stc add mov and push xor inc push in push jb cmpsb cltd orl nop jnp (bad) jle cmp out (bad) out xchg hlt mov mov imul or ror adc pusha add psubsw std xchg cwtl mov and lcall sbb scas lock xor scas pop pushl sar xchg mov jns fildl mov aad or (bad) popa or sti dec mov push cmp mov jle xchg cld mov scas movsl ja ret mov ljmp popf mov mov pop push aad punpckhdq or xchg xor pop lea sub imul jno aad repnz enter add rcr incl fldenv pop in fcoms pop cmp push add cwtl xor mov (bad) push jp int3 addr16 sbb lock stc xchg repz mov xor roll sti jnp fimull imul xchg jae pop xor sbb aad hlt pushf aas stos mov jns test mov sub sbb cltd xchg lock stos test fisubl sub xchg adc sbb int3 and and and out sub incl loop repz mov jp sahf mov jb mov inc lret push pop mov pop (bad) sbb sub outsb mov lret divb insl cmp mov dec stos mov inc jmp xor daa mov js sub into inc mov lock call sbb je scas push and (bad) mov xor or fadds mov out mov and inc fcmovu data16 pop sbb mov xchg je imull inc mov mov and push or cmp popa cmpsb ret js xor xlat pop popa ja and adc inc andb and sub mov adc popa lock pop cvtps2pi xor aas cs out ja popf or les jnp sahf fcompl push xor lahf mov aas mov fwait dec cmp aad add into mov jge stos inc and outsb (bad) xchg jmp pop call jnp push push inc int3 sbb mov xchg imul daa leave cmp jo add test push outsb adc sub lahf pusha sub in xchg loop loop pop sti dec lcall mov sbbl xlat fs or ret mov ja sub (bad) dec lock callw (bad) jmp mov push hlt test dec jge push in (bad) cmc imull xchg ss and cmp mul pop and pop (bad) pop mov inc sbb std pop add int3 cld mov dec aas sarl xor mov xor shrl xchg xchg js loopne add bound dec lds mov xor outsl lahf add xor sbb add xchg sbb xchg or and sbb stos imul out popa aas shlb jmp mov in mov push xor or sti xchg xor bound mov (bad) aad outsb aad ds jns jbe inc addr16 incl rcl pop fstl mov pop inc xor mov mov sub nop icebp js test (bad) rcl jp fs cmc popf sar scas adc mov jge and in mov sub enter xor pushf push adc std or or scas inc shrb fdivl roll mov jmp test push lret jle xor jae or cmp and fnstcw and mov adc sub push add inc sbb mov jno fldt dec jl jbe loopne push xor xchg lock shrb out mov pop cltd aam mov xchg fwait xchg movsb lahf fldt sub sub cmp out (bad) sub xor into jge dec out hlt stos test shr and push inc clc and mov mov fild fistpl adc or enter xor test pop jmp and iret adc mov mov adc pop in ss movsl sbb pop mov scas (bad) outsl ljmp sbb sub (bad) mov inc cmp adc pop mov setnp adc shrb push push mov push (bad) xorl and and (bad) and sarl int3 (bad) daa mov fiaddl mov dec or xlat xor loop fcompl test add pop add sub pop fs out xchg clc add fwait iret or mov jno ljmp jp sahf iret adc scas int jecxz inc dec push je jmp icebp cmc icebp add es or insl jmp imul (bad) inc clc mov popa insb (bad) jg sbb (bad) notl into dec test cmpsl push dec and or and cmpsb lea loope add xorb iret nop repnz sub mov mov test jo aam mov das lods sti (bad) mov xlat pop inc daa test popa je gs xchg je in imul lret fldenv loopew or jne inc loope ljmp mov pop (bad) xchg imul dec cli xchg sahf dec fimull sti lahf aas cld xchg pop aas sahf cltd gs in dec jecxz xor add dec es cli push sar xchg std inc and fs sub loop daa xchg inc mov sbb vmwrite mov jl loop xor out cmp fildll sbb in int outsl lock in insl outsb lret int3 cs push loope,pn xchg mov hlt int ljmp cwtl mov and sbb dec and shrl imul jo imul mov mov (bad) dec push xor sarb cmp jmp hlt adc jo ficoml movsb cmp dec lds test out add cmp sbb (bad) dec mov and inc dec and mov cmc pop in icebp or outsl repz push add adc and add mov pop movb jg mov ds sbbb pop repnz add cld mov mov out daa sarb das lock test xchg pop pushf and fiadd mov sbb repz lock in ds xchg xchg icebp test in je inc lcall inc fcoms xchg jecxz test mul pushf addr16 mov out sub adc xchg or xchg jg nop iret and dec js mov sbb nop movsl pop xor enter lcall mov cmp cmp pop mov push mov inc ljmp mov cmp sbb stos mov pop add inc leave popf pop push cmp cmc push dec push sbb or xor adc jo add mov jae sbb xlat cltd pop mov in mov dec subb (bad) pusha call shr cld mov out jne ljmp fistp int push loopne (bad) fnsave or sarl aaa push fstl lods add (bad) ja sub stos push inc jno (bad) xchg ror push mov xor lret add les in xchg fdivrp mov mov mov scas cmpsb or test icebp mov xchg addr16 push repz iret sbb jo (bad) mov lret fnsave or dec enter sub in dec ja aam in jl add add xor mov sub jnp fisttp in pop mov cmpsb or fwait pop sti mov lret hlt aad je xchg in hlt (bad) dec dec sbb fwait aaa mov fdivl push sub adc mov fwait ja or inc popa loop xchg jg pop mov ficomp cmp xchg fstpl and and cmp jae push shll xchg and in mov movsl and femms and pop mov lea cmp cmp test mov dec cbtw inc sbb and mov fistpl loop sbb cmpsb enter lret jno sti mov cmp pop and insb repnz aam jns or sbb jbe push in xchg out inc lret pusha or in (bad) cli cmp icebp sbb bnd mov jns xchg dec inc and loopne sub sub inc dec (bad) je jbe fucomi mov push test push cmp mov outsl ss xchg add (bad) ret stos outsb mov xor push xor dec fwait cltd mov (bad) je in hlt movsb dec xchg notl aas inc push and xchg jbe inc inc hlt fnsave mov stc repnz fimull mov call ja cwtl jbe aad ljmp negl cli mov pop cltd mov push lea push sub mov xchg incl movsl in inc mov adc mov add out fwait push and mov out fistpll sub aaa dec and decb fmulp cmc mov or mov enter and xlat sub mov mov das xlat sub pusha mov mov cmp ss xchg das inc mov pop imul pop cmpsb add adc mov dec xchg xchg xchg dec and (bad) inc cmp add fadds call push leave mov imul rclb out mov pop imul je notb addl mov xor push je dec fwait jge loop mov lea jg jne dec outsb fstpt add inc stos push lcall push lods sti push lods fs jp rcrb xchg push aas cwtl push cmp dec and dec jo sbb sub pop jb mov dec cld xor rcrl xchg ja add cmp fisttp pop add lock mov nop rcrb hlt lret imul cltd and jne fwait dec mov jo js xchg test in xor (bad) repz sbb sahf out cli daa sub and pop cmp mov popf sbb iret jo mov inc dec mov pop loop cld and inc arpl addl cmpsb adc out fnsave mov dec sahf jns add mov xchg xchg adc shrb inc xlat pop lods fildl imul mov enter xor or aad fsts shlb xchg lret mov cmp out sub sub outsl mov repz popa out loop mov or daa adc arpl stos push and lods ljmp xor adc pop dec pop movsb iret out dec pop add push cli out push dec push and inc xor adc stc pop sub pop sbb fidivr jmp lret negb lds inc jo std add adc sarb repnz sub nop popf push loope sub mov ja or xchg mov fisubrl inc imul inc push fadds aas sbb int fbstp test repnz movsb gs or adc cmp push cmp or loop fbstp mov jle mov add inc (bad) mov (bad) push push jnp jge jbe pop dec cld xchg ljmp in push test insl (bad) xchg push adc fwait data16 shlb fsubrl dec jg or in push leave sbb in and pop cmp xchg cmp (bad) loope jmp ds and imul xchg sub mov stc stos jno xchg cwtl or or push pop shr pop int xchg mov (bad) (bad) mov imul and adc sub push ret orb lret mov add mov push fcmovnb push and xchg cwtl xor adc lret (bad) loopne mov jg das add jl pop and clc add adc jbe xor (bad) test imulb stos mov leave js cmp mov div int push cmpsl repz sbb jb push xchg lds shlb movl out iret lods sahf hlt mov (bad) mov push xor sub dec adc dec mov sbb fcoms rcrl loope cwtl cwtl push adc aas out jecxz in stos lret rcr mov cmp mov jp push inc pop or je pop stos jns lret cwtl ficompl std enter and adc sti cmp mov mov or sarb xchg xlat out inc (bad) arpl shrl push or es mov in sbb or out pop push push jns add popa dec shrl push popa xor (bad) in outsl aad (bad) jle xchg fs jnp aad sub push divb das cmc sbb ds icebp imul scas lods daa sarl insb sbb cs or addr16 in mov or std enter int3 stos sub scas jb xchg (bad) xchg repz pop pop cmp xor push mov inc push sub stos pop in lahf pop xor jecxz xchg push (bad) dec fmulp inc push mov addr16 or pop jnp ds lcall and push xlat jg insl dec test adc mov in iret repz pop addr16 sbb movsl mov dec xchg sub add out push idivb lea mov and push repnz movsb jno lret pop test xor ss leave ds or push sbb inc sub aas loopne inc cmc sub icebp js leave ja xlat iret lods mov movsb (bad) xlat int3 xchg cmp or js js data16 dec and dec cld fisubrl cmp sarl cmpsb push mov fldenv lret out lret cmp inc sub stc mov sub (bad) jbe mov fwait aad ds std mov mov loope sbb push pop sub mov pop and add sbb ret out sbb add xchg inc nop sub xor cmp shll jns fwait xor mov adc cld fsubs lcall jb (bad) loopne mov pop cmp dec mov jmp out or dec push inc (bad) in fisttpll lahf mov pop mov mov aaa jmp clc push push push stos cmpsl jle out xor or push or andl inc xor inc xor pop enter fdivl hlt (bad) mov or push cmc icebp mov mov cmp push mov add lret push int3 ds sub dec mov cmp test inc jmp dec int daa or xchg add or pop mov xor adc push int int3 stc notl push xor xchg dec cmp push xchg mov inc cmp dec sub (bad) repz fdivrs xor xor add jae repnz loop fsubrl cld insl data16 jno adc test add mov je test sbb xor cmp fadds xchg (bad) add sbb xor dec stos pop (bad) shrl fldenv mov or lahf mov or or add movsl or icebp cmp sub in dec add dec or mov jne pop imul push jl test xor jge (bad) jle sarl and in pop aad or jbe xor out push adc mov js sti mov add sbb arpl mov fidivrl jp (bad) adc cld mov hlt add or cmp (bad) shrb movsl cmpl cmp cmp cld add mov lock mov fsubl aad pop ret lods push pop xor push inc and xor inc fdivr faddl push push cmp das sbb xchg inc mov jl xchg (bad) loop lret xor or (bad) repz (bad) mov or out mov and sbb in outsl dec push ds or int3 scas and jl (bad) jno jle sub xor jne pop xor fwait sarl mov mov lret jecxz outsl clc sbb dec in xor imul repz inc sub jno lock clc (bad) in fs leave js mov xchg (bad) cmp mov and adc xchg mov mov pop mov in mov dec and inc cmp into (bad) and xor add sbb or ret call lock cs dec fs ror (bad) in mov ds divb xor inc jo bound ss dec pop xchg jmp enter (bad) flds insb adc sub hlt insl cmc adc (bad) cmc pop adc faddl int3 push sbb add ljmp cmpsl out cmc mov pop loope dec (bad) iret add lds nop xchg inc jnp mov fcoms das dec divl addr16 (bad) xorl xchg mov call sub or mov call lds mov clc pop mov loopne imul xchg pushf xor addr16 cmp nop and mov js loop adc sarb stc stc push jmp cmp les and jae addr16 jge lahf dec test push test sbb jns mov xchg cmp pop scas cmovbe insb fwait inc inc sbb or push (bad) sti mov inc dec or lods adc in outsl lahf push mov jecxz popa xor test mov rolb out hlt lcall aas fldl and scas std dec mov test das cmp push fdivs inc inc rolb (bad) cmp cmpsb fistp fist xor push bound clc in cmpsl xchg fdivp imul test fs pop addr16 cmp fucom jns mov in mov push cmp pusha mov stos (bad) mov mov sarb fstl mov enter leave adc and inc push test inc fcoms add lcall scas mov sub cmp sbb aad das sub ja outsb sub movsb out jl stc aam nop dec data16 and pop lcall xor adcb js (bad) cmp pop dec loop push and mov xchg pop push inc jecxz push fdivs lds mov xchg ret push cmp scas roll dec stc sub pushf lods pusha test xor push lods das add jg jg,pn xchg hlt sti stos insl lcall mov sbb test fidivl js dec sub inc insb sub dec gs nop mov adc pop mov lock hlt sbb arpl dec mov (bad) test dec movsb mov jg icebp cmc sub aam popa imul in mov inc pop insl jl xchg (bad) lret push addr16 mov in push mov popa in das or sub push cmp xchg add pop lcall add movsb ljmp lcall fdivs mov (bad) inc or loope push test cmpsb add push out fdivrs (bad) test js jae and push xor pop dec sti loope add sub out stc pop shlb rcrl clc fwait dec shlb or ret outsb sbb sub xor mov dec pop cmp xor mov cmp roll mov pop js (bad) cmc enter ljmp lret cld addr16 jmp data16 add std in pop adc xchg out pop sub xchg gs notl loope xor movsb iret repnz adc je jl pop push mov ret add mov push cli or xor and pushf xchg mov cmc fadds xor fistpl or pop dec cmp adc stos push jl sbb lods and inc inc mov mov mov xchg and movsb pop in mov sub push mov stos lods mov mov das dec pop aam sub and int3 (bad) das adc fwait inc aas stos (bad) int3 and jmp das sbb dec jbe add pushf xchg int3 or rclb sbb cld sbb jno mov sub sar dec jne daa push lods lahf mov xchg cmp nop out lret loopne movsl inc xchg popa cmp inc test pop xor fimull or mov pushf mov jmp dec icebp or cmpsl movsl pop dec mov inc sub mov aad fist in sub add lock mov fist add xchg push jb mov shr (bad) in in bswap or mov popa pop pushf je (bad) sbb addr16 bound ficoml in add loop (bad) pusha pop inc lods arpl mov adcb sti cmp jo xchg and xchg notb pop dec mov (bad) js roll add mov fidivr lods out out int3 xor lds test std mov inc fiadd shll push ljmp mov xlat jg xchg xchg pop (bad) in test (bad) cltd push xor jae xchg lret insl rcl in lret int3 mov popf dec je gs sub cli xchg or out mov sub mov cs lock adc and rcl pop mov repz shl clc mov dec sub out loopne and adc in dec ficoml seto scas xchg lret les cmp or js jb mov fs dec fld ja insb shr xchg push mov subb push lret out mov lea andl scas lahf (bad) loop add push jo xor mov (bad) push mov rcrb notb ss xlat scas sbb scas sbb or jmp mov or insl lds dec dec xchg les add pop les test xchg mov lock adc cwtl test test shlb xchg in cmp sub sarb loope fs pusha push mov das sbb aad push fdivp bound fisubl cmp fcomp mov fwait (bad) je roll mov add je mov adc push lds or mov xor divl std lds inc push ja ret sub push sbb add jnp xor test inc lods pop add addb outsb jne popf mov dec in (bad) stc daa or or imul sbbb cltd outsl pop rclb (bad) mov mov push lcall rcrw add ds sbb jnp push divl fcomp pop les enter aam pop pop in data16 jp sub fstl fwait push and jb (bad) negb mov ljmp js dec jp jge lahf (bad) mov sbb xor (bad) idivb sub xchg cld out dec push and js and xchg (bad) push cli lods xchg pop movsb xchg sub mov mov or push cwtl dec (bad) sbb movsb add lea lahf jmp popf arpl jge (bad) inc es dec mov sub mov dec hlt inc lret loopne,pt ret das fadd (bad) jecxz mov xchg lods sti lea dec in mov pop scas lods pop add inc xchg arpl push js sarb dec pop sub fisubrl outsb test loopne and test dec test cmpb mov (bad) adc push shll inc xchg mov leave adc jmp sahf imul mov jbe (bad) (bad) je jno iret inc dec cmp push nop cld mov mov mov clc sti add ds jle sub add jp cmp cmpsb mov xchg fs push fs ss sbb and jg xchg push cld lcall xchg mov (bad) ja mov inc lahf lcall test dec xchg or mov enter stc dec fiaddl sub mov scas (bad) jp inc add sbb push in test xchg fisttpl fs mov loopne add movsl inc pop or repz cmp dec push adc xor ja mov fiadd dec roll add cmp cli test inc mov inc push lods outsb add lock dec jne addr16 push gs movsl fwait (bad) sub cmp (bad) dec fistpl add (bad) rclb push mov mov cmp lock inc inc mov mov loopne dec sbb int3 loope dec jne adc (bad) mov and int dec scas mov and gs gs negb jmp (bad) out mov je stc push cli loopne pusha addr16 insl js mov and inc ret loop xchg ljmp push ret mov (bad) mov inc mov jl loopne enter sub pop inc sbb jecxz imul aaa bound inc lock ret lret and stos movsb insb mov (bad) fidiv mov imul jle lcall les mov cmc mov xchg addr16 adc dec add and jle idiv push ljmp das inc addr16 mov test push mov ss sbb repz popl pop lock fmull das xor inc rolb sbb ds adc mov xor out xor fcmovnbe pop bts imul fs jo fistpl mov jne bts les push sub lret loope pusha or inc cmp test push leave arpl inc fcompl mov ffree push (bad) cmp jmp into mov xchg xchg xor add add jp cmp cmp mov (bad) jg xchg imul jno or ljmp mov mov sarl cmp sbb outsb pop mov pop adc clc repz dec dec jo push cld rolw pushf pop sbb iret pop jae dec pop mov repz dec lcall into push test icebp xchg pop lahf jge jmp jo cmp mov (bad) mov cwtl sbb mov outsl in sub jne mov (bad) dec aaa loop (bad) mov sub dec mov in enter xchg pop addb add out (bad) jmp pop xor pop xor cmp scas jnp adc push dec bts push out jg mov scas aas std or (bad) sub cmp mov stos adc ss mov jl (bad) sub ret mov cwtl and popa scas mov (bad) arpl pop pop sub mov mov inc and jl mov mov gs jb pop adc icebp lret and inc data16 dec out jns aas or ret sbb (bad) cmp popa cmpsl mov imul pushf sub or add shll mov stos nop pop xchg or out dec and mov jl adc mov in pop xchg mov pusha je dec sahf push sahf stos es outsb push or mov aam push push scas xchg ret in mov dec pop notb xorl adc cwtl push jns mov addl add in xchg push sbbb cli lret add and jbe sbb cld cli pop lahf inc cmp inc lret xor add shrl in push mov pop clc xchg adc xor arpl in mov das add xchg aaa xor adc shrb dec mov and (bad) jbe pop rcrl (bad) mov cmp and fistpll movsb mov xchg repnz sti fcompl mov mov mov sbb add popa sti xchg jge or imul mov fs out inc arpl sub das mov lahf xchg int3 imul dec cmpsb push push push aas insl sub cmp xchg or lock sub (bad) xlat (bad) out pop dec mov out movsb jge mov jp cmc in adc mov jecxz movsb test mov mov (bad) jmp cwtl add mov push and cmp into rorl pop (bad) ret (bad) jae das mov ss pop sbb push imul shrb (bad) jb or jge push mov test push sbb cmp sub jge sub iret xchg scas mov in mov cmp rcrl push cld int jle adc mov pushf push imul adc popf (bad) loopne mov mov shl icebp dec push or pop test test mov into js jne adc add add push xchg jg pop loopne pop add out (bad) sub sbb pop lret adc lods ss repnz mov adc (bad) xchg popf xchg xchg stos aad insl mov cmpsl lods dec hlt lahf dec aaa flds test dec mov lahf stos std into imul clc adc xchg fnstsw and inc mov daa mov lods inc fsubrs adc xchg shll scas cmpl inc test fisubr cmp fild rcrl sbb jp dec cltd in ss lods sahf or dec (bad) mov loopne jecxz js shrb jge add push jp shrl inc ret les movsb xchg inc dec mov xor into (bad) shll cmp push mov bound loopne sub loope cltd push rorl (bad) jp cli fildll mov iret arpl or test test pusha aam add adc dec fdivrl dec push jnp sahf stos jmp add out scas sahf cmp xchg lcall push cs inc jmp mov sub cmp sbb fldenv add cltd loop loopne add lahf stc push rorl loop das mov nop mov lods movsl sbb lea lahf cmc mov xchg jp lods out mov (bad) or pop movsl cli (bad) pop sub mov iret imul add dec adc mov cli roll push xor jmp fwait jmp rol pop pop inc mov rcll mov xor out pop lods aam dec sub cmp test in aas mov push cmp jmp mov mov ficomp mov jecxz pop push cli call iret or test leave pop pop adc jmp mov (bad) into cwtl xchg dec inc or mov sbb out rcrb sub adc jmp lcall xor push inc fisubr int outsb out sbbb insl cmp push ret push mov cs jnp shll aad add outsl cmp daa dec test es call adc (bad) sub addr16 add loope inc pop mov imul sub dec mov inc pop aam cli inc inc lock outsb cli inc push into movsl cli inc es movsl pop into repnz mov ret push dec scas fwait loopne sub dec test add dec and es jae es add int jae push mov adc pusha add fcmovb pop jmp or mov push rclb mov adc push das int3 sub aaa or test sbb mov shrb and add fs cmpsb or mov pop mov fistpll (bad) xor pop push ds loope lods lods cmp int3 cmpsl xor scas push pushf movsb lock xlat xor repnz andb es sub lahf lea ret ja mov dec lret nopl movsb (bad) ja add push push lock adc mov push mov inc repz mov fisttpl es popf lods out jp testl jo jne cmp adc pop sbb adc and daa sub inc jns jl and pop iret jg fwait mov lds mov inc loopne cmp insl xchg loop cltd popf add stc add imul dec fs inc jle xchg xchg inc mov lock out (bad) mov dec rcrl imul mov and push add cld dec sub sub and aam push scas inc adc les setns xor cmc cwtl sbb inc inc mov test push push cmpsl out daa mov push jbe adc rcr sbb inc jl xor xchg push cmp test fdiv push movsb andb into sub jl dec enter (bad) pop shl jae cmp fsubrs mov dec movsb rorl mov out adc cmp cld dec std pop or mov or pop js sub mov fs xor and adc jae mov rcr dec leave jmp clc jns orl xchg jns out lock cld lods lret popa rorl stos mov mov mov mov dec gs loop sub loopne outsl fcmovbe inc cmp jp and mov (bad) popa dec out mov xor insb incb test je dec cmpxchg xor jp or es fisub xchg cmp jo dec packssdw jo push jp repnz mov fistpl pop fstpt mov pop xchg (bad) mov lret in inc sub lock std jecxz fs jge and or repz lock fiaddl popf jb jo lret mov stc (bad) (bad) mov push das das dec (bad) mov je inc insb stos movsb jecxz jle pop fnsave dec pop mov pop jo stos scas jmp jno mov xchg sub fmull scas pop imul aam mov jp xchg lret push dec leave sbb xchg pop std icebp sub jns bound fcoms imul hlt mov loopne mov in push fldl sbb fucompp mov jle sub pop imul mov pop adc or mov dec test xchg in sahf push popf rcrl jo imul imul inc cmc out sub sbbl pop out js cli pusha sub nop outsb or std adc sbb sahf pop mov (bad) pop cmp jb xchg or xlat dec arpl hlt hlt and sub cmpsb sbb push sbb dec and leave nop mov dec stos repz repnz or ljmp push cmp sbb rcr push mov pop sbb xchg rcrb mov cmpsl or (bad) icebp lret mov call mov sarl cmp das push (bad) mov mov adc stc (bad) out mov sub push mov mov andb test ds popf daa push in pop dec jno and mov adc imul push and xchg or imul cs aas and push fistpll jle,pt push mov inc aam into dec push data16 rol pusha addl add aam dec lds in push loope mov decb mov rcll dec sbb xor lock dec adc fistp cmpsb dec stc (bad) push sarl loope out into cltd push pop clc push jne in addr16 dec rcrl daa call out rorb or jmp cmpsl xlat stc inc lea mov ja ret (bad) stc mov fbstp mov adc dec fisttpl mov jmp aas add push mov in jp jle jo push cmp test jo in clc cmp ss aad out xor dec sub xchg jno xchg jmp jae (bad) aaa adc orl jae (bad) dec or add pop inc jae mov inc or jp inc mov xor or jg pop dec (bad) jb push push pop ss jp not or in pop (bad) rclb xor and pop int cs mov (bad) repz movl loopne add inc jp fs in hlt cmp addb mov loop push mov call movsb xchg mov mov sub mov sbb dec dec dec pushf jle cs lret fs or jp sarb adc icebp es fistp arpl std xor imul lds push or sbb int rcrb inc test xchg dec add or pop test sahf push inc cmp shrl sub rorb or aas and mov into pop fwait leave ret dec divl mov or cs stc xchg push adc inc scas adc pop test sbb xchg inc adc sub out clc push jg mov xor aam mov xchg jno and inc mov call inc dec and jb add cli js repz mov jb jle jl rsqrtps gs jbe sub cmp and jmp jns sub xchg mov dec loop mov ds add xor (bad) inc xchg mov jae call test or lret push add cwtl inc les add sub outsb xor xor pop ficoml xor jmp mov (bad) pop gs arpl in ret xchg xlat int3 mov out pop dec imul sahf sarl and cmc mov mov in jg or add push fprem or and aas jns lret cmc xlat mov test dec test mov clc pop push stc pop xor enter repz ja jno ss cmp aaa sbb outsl pop jmp in pushf js pcmpgtd jbe jl or rclb lahf lahf inc pop push dec popf add add (bad) hlt add sqrtps add push test cltd jns nop pop jg rcr clc clc fdivs enter pusha or and xor adc (bad) jge inc cltd push das rcr xor mov lock inc test add fisubr jecxz dec nop lods pushf movsb and pop (bad) pusha or inc xchg psrlw push inc inc mov pushf lods push dec or ljmp inc lock (bad) rcrl fninit lret lret or inc pushf test rcll mov add inc or add rcl pop jmp pushf test rcl pop jmp cltd pop push ljmp mov add inc or xchg ljmp insl rcl jge int3 pop jmp rcr or (bad) (bad) andl ljmp xchg inc inc test mov in pushf stos std mov cltd pop dec pushf mov sahf cmp fmuls pusha dec in pushf movsl push loop aas add jb mov dec cli enter sub (bad) fsubs or jbe mov or stos adcb sbb imul adcb inc rclb add inc sti data16 mov pop xchg sbb jae aas (bad) push or insl arpl adc jo test iret dec lock movsl insl xor mov jns gs outsl or popf sbb mov ret or fstps test mov scas inc lcall dec lret in js mov sub (bad) push enter sbb insl sbbl (bad) neg or push hlt int3 dec lea push iret (bad) into test loopne mov jecxz cwtl lahf hlt fsubl subb push mov data16 mov ret mov or call sbb xor dec or rcrb jg sbb sbb sub outsb sbb mov test and aam lods jg ljmp cmp cmp cmpsl fadds insl enter fisttp mov push data16 ficom ret jge cwtl inc jae sbb aas adc jb test arpl in sub (bad) jae push cmc add pop jne or scas xor in cmp mov loopne pop sbb mov xor push mov mov and out mov pop jmp pop out sub pop shrb pusha lods int add call xchg and lahf iret adc pop roll sar sbb push imul les rcr into pop add cli lret in fmul xchg jl push enter pusha xchg (bad) adc sub outsl arpl xor movsl jl movsb jp jb bswap inc fdivl mov xchg faddp mov or shlb xor xor pop sub aam xor pusha sub repnz jno out popa and cmp fwait lea add shrb lret jg pop add outsb ds andb sub enter out cmp test dec ja cmp out lret insl ss sub call mov movsl jge sbb dec mov xlat cmp jns mov mov scas mov dec cmp push xchg imul testb (bad) xchg stos add pop (bad) adc sti mov outsl cmp mov push xchg ficom bound lock dec mov mov and cld xchg lock mov imul sbb pop pop push pushl (bad) pop imul insl jae imul sub push add jl adc xchg mov push cld pop mov dec jmp push dec pop mov (bad) sbb xchg or fsubrl fcoml andb int iret inc push sbb mov les (bad) call dec daa push das int3 sub repz sbb test lods outsl leave jp cwtl pusha mov sub lds popf test fwait mov ret lods pop jns cmc leave lcall leave adc leave das jb fwait add jno jmp imul clc pop clc xchg lret sbb add and fadds fisubrl xchg lods xlat and lret mov imul insl pop mov xchg enter xor fildll and mov out lret ds xchg ret js fldenv (bad) and mov enter shll insb xor leave jmp sbb mov xchg sub sti mov adc rorl jmp mov inc sub mov ds fs imul or movsl dec je ljmp xchg ficomp aaa (bad) pushf lods fnstenv inc add push loope mov mov jo sahf (bad) fisttpll (bad) sbb add shrl ret in pop ljmp mov inc stc or and rcrb fdivl (bad) stos mov or sbb sahf and (bad) (bad) repz int3 cmp ljmp cmp popa pushf mov ljmp inc inc adcl fmull push jle cmp shrl mov cmp sarl cmpsl movsl cs mov and jmp xor jo xchg cmp dec inc mov mov mov enter shlb sbb mov fdivl roll (bad) js stos cmp jne sub xchg jnp outsl fsubs enter xchg dec das push push (bad) clc mov mov pop cmpsb into mov popf popa (bad) lret sub or test arpl cmp mov or aam jae inc jl,pn mov imul test push jnp push jno ficompl test cs push mov xchg xchg xor xor sbb cmp inc fs fwait sub lahf mov push add lret push pop sbb dec ds adc cmp add stc mov lock in and es sub adc mov mov dec mov jo ret (bad) sbb sahf inc adc cmp je std aas (bad) dec rcr gs add ds mov repnz jns sbb std iret adc int out or mov xor test jp adc (bad) mov mov fcoms lahf pop push push fwait imul sti xchg jnp xor mov pop or lock pop es data16 ficomp adc repnz daa rcrb addr16 xchg imul subl lock mov or mov mov mov jb into dec test outsb add pop cli test sbb into subl xor scas imul popa insl outsb (bad) fcomps stos cmpsl test add loop lods outsb cwtl cli mov sahf (bad) sahf (bad) lret pushf mov in cli sbb les lock pop out fwait xor shr dec sarl ror insb and or dec ret rorb xchg enter pop mov xor ror jmp nop int3 pop shrl dec mov push mov push mov (bad) in mov jp fstl pushf and hlt jl ljmp inc inc rcll rcrb (bad) into lock dec int3 mov push lret cli leave ror clc xchg mov insl in cli pushf loope mov int3 xchg xchg inc push jmp pushf inc leave fmull (bad) mov push mov cld test cs lret flds (bad) (bad) sarb iret enter leave xchg sub stc or fsubrs imul mov pop mov and cmpsl scas or mov shrl dec (bad) in jns and call sbb popa repz fidivrl add scas (bad) imul pop xchg into add and fwait (bad) jo imul outsb (bad) les loopne popa mov jmp sub leave loop lret test fnop enter loope (bad) lods mov stos sbbl lret out inc shrb xchg call ret enter das ja push clc push aas jae lret cs lods mov jbe mov fs std popf mov out push sqrtps jp aas xchg xchg sub mov jl mov in mov xor mov push push or push inc (bad) in popf xchg cmp sub out fld xor repz rcrl jge pusha sub das rolb rol enter mov add rolb jecxz aad inc push dec dec cmpsl stos push push xchg pop insb gs in mov cmp lock gs iret les adc mov jbe pop xor test xor xchg test inc push sysexit (bad) dec lret (bad) jo iret std mov test addr16 xor mov inc push jg scas cmp mov or pop repnz cmp lahf and out adc icebp mov out scas ss sbb push jge hlt bnd int3 dec into jmp inc cmp loopne pop call inc xchg push push pop jecxz mov and mov mov movsl add mov aas mov sbbb jg movsl and mov sbb pop aas mul nop jl mov mov in adc mov adc fcomi xchg decl ljmp mov ss scas sbb jge (bad) fisttp push inc jnp inc mov aad push popa pushf mov or cmp sti je jnp movsl int3 mov outsb mov ds test xlat adc sbb jg cmp mov jmp jbe sbb movsl aas dec jle or push cli inc sbb sub lods pop xor leave addr16 xor cmpsl push and mov cli pop and mov bound push and add xor mov jp bound mov xchg pop int3 test adc repnz xchg out call (bad) out or iret fdivrp push xchg out cmpsb (bad) mov xor cmp sbb imul mov xchg jmp nop sbb sub push loop add push pop outsl push popf idiv jo mov push cwtl idivl jecxz jp mov in mov cmpsb aad jmp mov jmp pop mov fistpll (bad) adc xlat sub lods sbb add loop jecxz in sub ret outsl adc mov sub lret pop mov cltd mov inc inc dec pop stos push pop ret rcr add push inc sahf mov movb add pop sub jp (bad) xchg push mov push popf idiv lret xor mov mov andl (bad) addr16 pop sahf push mov out mov les push xor push mov cmpl and in jnp movsl (bad) fwait out push stc add pusha clc inc pop fadds aaa enter xor ds ss (bad) lcall hlt jnp xchg mov jno pop fdivl lock push pop fcomp push and clc or movsl lods mov mov popa fbstp je cmp push xor iret test mov bound outsl push rol aad (bad) or (bad) push rorb xchg test imul mov mov iret addr16 (bad) fistp insl fadd xchg dec pop icebp es sbb xor std lahf sub jg scas out cmp cmp pop daa ret adc dec inc xchg repz out jo mov addr16 cwtl stos mov push lock fnsave (bad) stos mov out push (bad) cmp aaa push mov hlt pop repz daa dec xor fwait (bad) jp xchg repz push (bad) dec clc sub cltd loopne mov and xor fimul enter pop cmp aam xlat cwtl clc xor leave scas sbb cmc xchg lret cld pop push or jl (bad) enter out mov test mov iret lret in bound dec or popf std outsl pop pop add inc push sbb leave imul dec mov xor nop add xor push mov cmp push dec loop or jl xor or mov xchg dec sub cmpsb test mov mov push aaa out pop lods test push in iret jmp test add cmpl ror hlt sarl dec mov mov and inc stc sub cmpl and dec daa inc lret push inc cmpsl sbb jno xor enter jo mov repz mov and test mov push out shlb and add xor mov aad add das inc xchg mov xchg push mov fmuls pop xlat inc push (bad) notb xor mov add cmp jns fwait push jb xchg and mov cmpl and xchg (bad) inc and add sar pop arpl ja mov fildl lock fisub cmp stos inc nop call (bad) xchg and mov rcr in lret enter jmp dec pop (bad) push mov int3 sbb sbb jns jb subl gs sbb outsl ficom (bad) jne xor cmc push add dec lret data16 cwtl in xchg lcall dec mov jnp int sub mov lret outsl mov or sub adc xor outsb sti in xchg movsl cmp cmpsl push or (bad) fnstcw xchg and adc lret ret push jb push pop inc xor cmp stc push jg pop lret test mov lea or inc (bad) loopne ret mov cmp and (bad) cli push leave int outsb dec fnstsw outsb fcmovne repnz adc sbb (bad) mov fwait mov xor rep dec dec movsl aad and rol test xor sbb sbb (bad) int3 int leave push xchg leave js fs xchg loop inc jge push cmp ds mov add in adc sbb fwait or dec in push xchg decb lods cli (bad) jo mov push sti test cld fwait popf data16 xchg icebp and (bad) fwait loopne xchg in aaa lahf lahf adc push and push cmp loope stos xor mov push sub popf std xor xor cmp jmp loope iret out (bad) imul ficoml mov mov adc xchg flds inc xchg scas not cwtl aad insl rol sub adc mov inc jb fwait lahf adc cmovo pop aad jns aad orb mov jns pop adc roll mov adc lds xor fwait cmpl ljmp clc adc push sbb lock pop and pop insl popa jp xchg (bad) push insl bound movsb stc gs or lds cmp insl ficom mov out bnd pop xchg inc jns sbb jmp mov dec jmp and int fwait dec dec jle (bad) aad outsb push mov addr16 sbb fwait push sbb xchg cmp sbb dec or aaa inc jp data16 icebp or xchg in adc and mov das lds adcl repnz popa adc (bad) push (bad) add (bad) call pop xor or sbb shlb mov fist je push or inc shrb ss inc sbb cli mov cmp fwait sub std mov outsb lds lret jae or hlt dec adc lock and inc and ficomp mov push testb rolb lods stos ret and cltd and idivl jmp mov or fidivl insl arpl xlat jmp dec cmpsb clc sbb int in cmp sbb mov mov cli bound ret daa adc es mov or lcall cwtl dec cmp mov movsb js inc xchg inc (bad) cli mov idivl arpl je or or dec mov mov sbb mul lods fsubrs das clc jg mov call jo fxch pop loopne fs xor std or int ljmp inc lds push rorl and inc lods dec ret std cli mov lods cld mov jl in mov ret insl mov sbb sbb mov inc gs pop insl mov sub test xchg les pop add arpl or push lods dec imul cld imul into adc stos hlt mov cli sbb adc lret aas data16 (bad) mov xor add mov sbb and aas inc fs rcr inc add jb test and push out mov fdivl push clc sub into fmull fwait mov in ret loop push push or xchg jg mov popa push popf vpxor test out cmp push adc dec fdivl cmp lret add rcrl into push adc ret mov sub mov sbb xor dec inc movsl mull push icebp dec repz lock push fld lds inc jge sbb repz (bad) mov mov (bad) aaa inc jg test aam (bad) fiadd fnstsw cmp scas fsubrs adc ljmp inc push cmp and add cltd push jo inc not sub sbb inc leave dec lret mov int fiadd mov sbb xchg cli cmp fnsave lea or loopne mov pop cmovge lret dec push cmp dec push push popa outsl jns dec jmp insb in mov dec pop dec lret push adc ljmp out lret lcall cmp sbb arpl (bad) jo fiaddl sti dec add test cmp lret (bad) adc iret sub push xchg adc scas je in test dec insl inc mov cmp add lods mov arpl out dec sbb mov inc das outsl scas sub pop bound pop dec cs mov fnstsw loope fnstsw mov outsb mov push mov mov mov punpcklbw imul andl scas insb cmp or bound mov and scas jns adc outsb fistl cmpl sub hlt jnp push add test adc sbb outsl and imul mov inc cmp in fsubl lds rol repz jl jge jbe push cld and rclb imul and decb ja mov pop pop jo xor push mov or jo xchg pop xchg mov or int3 cmp cs pop dec or or clc adcl mov sbb cmp scas lods mov or fdivr test push jns inc int3 push pop and mov roll adc (bad) mov iret lock ds ret and cltd divl rorb fistl jns outsl mov mov fs sbb shrl fwait mov push nop aaa mov ret push mov cmp add mov clc addr16 mov int3 add push or testl xor jecxz sti sbb mov test lret repnz xchg jge inc shlb adc or mov sub pusha (bad) repnz xor rorl pop jmp stos subl mov xchg hlt fiaddl out lds xor sub and cmp lods sar push jo sarb jmp inc jmp (bad) inc and rol insl clc mov cmp dec xchg cmp das cmp (bad) cld add cmp mov adc xchg and fadds mov aas cwtl daa ret enter stc jbe out rolb lods daa pop mov mov scas mov ret fcmovb xor mov sarb pop hlt xlat xlat fdivs (bad) frstor push fisubl push loop addr16 mov movsl mov rolb rclb mov addb jle std mov (bad) mov subl (bad) lcall pop add in xacquire es jecxz lods mov jge or leave xorl mov mov mov pusha push cltd loopne loope sub push xor mov jnp negl shr fs fdivl inc xor push roll pop adc into jl or call jecxz (bad) mov cltd cmpsl jg lcall push xchg dec loop mov push mov sub subl push or das std les inc rorl shll rorb mov js adc std jmp pop loopne pop das scas das or lcall daa dec aad mov test ret xor sahf add call jge xor or cs nop pop std aas daa (bad) cmc and test lock dec sti xor push std or dec dec ret and and add mov mov xchg divl (bad) dec inc pop mov clc loop jno das (bad) or and cmc add sbb data16 mov adc fucomp jl stos mov jl adc sbb out xor cmp mov out lods icebp insb dec sub mov push or fsubl data16 stos (bad) cmp mov push adc push les mov pop mov imull adc incl pop mov mov imul mov fwait subl mov sub sbb fs and mov enter (bad) cmp call (bad) cmc mov out push leave mov iret sub (bad) jo test sub in (bad) icebp lahf pop into call inc sar sub fbstp mov adc ds push cmp jp dec mov scas jb push in mov insb mov xchg sub inc fidivl call lcall mov sarb gs xchg sbb popl sbb and hlt fisubl sarb mov cmp and adc cs in loop scas std sub loope xchg sub push inc push inc aad and sbb (bad) mov test lret add xchg sti aad push inc mov test lcall pop pushf or xor (bad) insl iret jno adc stos je pop popa mov push lahf (bad) push sti xor stc jae (bad) push inc cvttps2pi imul pop (bad) (bad) (bad) mov mov (bad) cmp sbb std mov insl out mov sbb xlat nop shr push cmp sbb stc out mov mov outsl or inc repz je mov push push add mov leave (bad) xlat out xchg xchg test imul lcall pop adc gs pop inc jbe int or in sub mov xchg and push dec imul mov into pop xchg pop ss sbb cmp or adc mov sti lcall mov pop xor adc mov roll adcl jmp xchg jnp sub add mov jmp inc jne ss and lret add dec sub push js adc xor int jnp jge lahf jo enter cmp sbb add aas lahf stc add test dec fsubrl xchg push out lock (bad) adc pop jp lock or xchg mov sbb lret les enter and (bad) adc sbb scas int cld pop jg push aas jmp mov push (bad) scas enter push jne pop lock cmp fdiv add sti push (bad) cmpsb out aaa cli adc sbb mov pusha aaa xchg lock fwait jo sarl arpl or adc stos aam mov daa adc lret adc jl adc stos out sbb cmpxchg or sbb pop sub sbb mov outsb je es sub int push (bad) add mov stos ds arpl stc sub inc mov stos sti cmc push ficom or jnp pop jo into movl pop push fildll lods lahf outsb cmp jb cltd and mov xor (bad) scas mov mov xchg pop xor xchg jno in iret xchg jmp (bad) addr16 in out mov sbb cs add inc clc arpl dec push push xchg xor xor add mov push xchg pop xchg lea jne or repnz hlt cmp pop arpl aaa add xchg add mov scas mov repnz dec or insb mov pop enter push jb sbb jmp mov in mov lods dec popa orl aas and push jle mov cmpsl call data16 mov out mov push rorl psubb mov repz push sub insl cli mov cltd or orps and negb dec sbb jno xor hlt dec add (bad) xor adc sarb pop dec adc dec mov int cld mov fdivrl (bad) sub add loop (bad) aaa xchg xchg nop adc call push es pop sub repz push add outsl insb dec mov hlt in (bad) sub lcall outsb jmp icebp adc mov xchg cld rcrb dec dec adc jecxz rcrl adc mov sar xchg insl cwtl inc and jbe add sub pushf xor call and popa popa add xor adc push pop sub ss push test mov mull hlt scas adc pop push pop xchg icebp in jb sbb dec xchg mov cmp push or mov es out orb push dec jns je rolb dec push jne dec test jl mov inc lcall inc mov xlat jbe aas or or xor and test andl dec std sbb jmp jmp add int3 adc imul dec test mov popf sbb mov loopne ljmp inc xchg and inc add xlat scas mov jg mov add jne movsl fistl push push out cmp stc nop std mov push imul cmpsb stc flds xor xchg sbb test in inc inc cmp sbbb ficom bswap ljmp inc (bad) mov imul inc inc mov sbb ds stos add jg (bad) and mov cmp lds mov push cmp mov jb stos lahf jle in aaa or js cmp cmp mov sbb out mov and fxam push lods add (bad) mov stos fistpll cmp jle adc shrb push mov sarb jne cmp das out or (bad) rclb lcall fwait into out and cmpsl xchg dec es pop mov or pop rcrl mov es sbbl mov (bad) (bad) pop test jle xor ds ficompl daa sti push xchg aaa cmpsl push push inc xor jecxz sbb (bad) jae arpl fnsave jmp xor enter sub scas daa jmp out pop xor cmp jae ljmp and pop jo pop or or aam inc out lret sub mov cmp lcall or push test jmp mov cmp add inc movsl adc pop lock pop fs mov sbb xchg sahf les rcr mov int mov push movsl or cmp test adc sbb sahf xchg into mov mov fstp mov (bad) jge push adc xchg or das add lret add and (bad) mov cmpsb iret push sbb popa sub mov sti mov fistpl inc outsl sub popa pusha daa jno das ds inc addl mov pop ficompl fcom or push mov std fisttp pop loopne mov and sub xchg rep add sbb mov dec stos inc pushf jle mov jl mov jmp pop lahf jmp into mov roll jb in cwtl mov rcl mov sub outsl and pop push mov adc fcomi jge push mov mov jae inc lock ss into xchg es dec mov jno cld fidivr enter pop (bad) or sub std aad test pushf stos mov sub cmp leave jns sub arpl lahf cmp ret dec sbb dec or lods testb test ret (bad) fwait xor push jecxz js mov (bad) push push add mov popa dec xor mov sarl mov pop out fcmovnu xlat (bad) fild fidivrl nop out jmp ret mov or inc push leave mov cmp mov cld sarl out mov pop test das fs pop mov ds inc xor cmpsl cmc fstpl ljmp mov in push cmp or leave adc lods (bad) movsl loope mov out dec add push out inc stc ffree out in push sub adc and push push sti shrl jecxz movsl jb mov and pop inc stos push pop int xchg cmpsl push dec std iret cld scas sub (bad) or push lcall sub jge add mov xchg das iret rorb in divb cmpsl mov xchg hlt and jno outsl test sahf arpl stos test scas out inc adc (bad) sub xchg movsb inc pop mov into popa dec mov dec xchg add mov dec lea jb sbb sbb aad push (bad) lock test push push push pop push imul stc jo sub mov test cli pop xchg out sti cld or sub mov insl popa push jl mov mov add pop jl mov dec adc push fildll testb cmp das cmp lods loop shr in mov push xchg pop pop xchg movb out sarb lcall (bad) jne jecxz cmp rolb fildll fdivs ss pop cmp cmp ja mov push or stos stos dec xchg rol inc sbb ljmp dec dec stos mov repz frstor scas mov loope push in (bad) or xor cmp jg,pt das xorl pop adc dec rcrl mov mov ss cltd xchg lea ja mov push and or jae jl cmpsb loope aas leave pop daa lret xchg aas leave adc dec add outsl push xchg rcrb in aaa mov pop adc jae aaa in jp imul mov add jae xchg pop rcll jge dec xchg pop mov push jno cmpsb (bad) mov adc cmc lcall jecxz dec jo lods dec mov and sbb xor pop mov inc adc les stos pop hlt xor inc scas out into ds outsl sbb aam xlat clc data16 outsb push adc ja mov jmp mov das (bad) lea adc xchg lret push mov push adc jbe inc cmp dec mov lock daa lcall leave mov sahf push dec add aad xchg inc das sbb inc stc popa imul out fadds (bad) cmpsb and fs jb (bad) (bad) push jns xchg mov (bad) jo mov aad add mov pop xor mov in sarl or movsl mov inc add inc mov loopne mov adc mov aas mov push jg (bad) cmp pop lret in adc inc sbb sahf test mov leave repnz in cmp (bad) fstps mov shrb in sti shlb xor cwtl xor push or subl mov inc int add pop add pop out (bad) xor dec jecxz (bad) push in mov gs lock xlat clc gs cmp pop lods push sahf push xchg push mov pop xor pusha call push mov aam (bad) ss shrl sbb iret jge pop (bad) imul xchg lcall (bad) movsl mov sbb and push push sub ret mov outsl mov or neg (bad) loopne inc test fstp dec decb fidivrl inc addl and mov add insl jp add icebp mov call sub cmp aam test cmp push adc xchg sbb mull popl pop (bad) (bad) push mov mov out add fwait add into and push out push pop push testl xor scas ljmp mov test popa push fwait dec cmpsl cmp and jge mov mov (bad) dec pop pop psadbw out push xchg rcrb insl mov je adc add cmp divl scas shrb and adc jb mov dec (bad) pop mov push and mov push stos adc pop sbb push movsb fbld push and pusha mov mov push add int3 mov fcoml add xor push std rcr add xor (bad) sub lahf add shll js add mov xor adc icebp xor mov in jne cmp dec iret jo cmp das aas fstpt divl pusha inc mov inc mov inc mov or imul aad daa inc sbb icebp xchg sbb pop cmp xchg mov add xchg jne pop rol insb data16 dec mov sbb ret inc movsl or lods popa lret pop inc cmpsl jbe (bad) or jp repnz ds fimull outsb lea add aas xchg cmp fstpt das cmp lds inc jecxz or pop jnp push pop popa scas nop sbb mov test pop in cmp dec jno not gs setl push pop int3 stos popa movsb mov lods das loopne mov push jbe pop ud1 and xchg shrb add jne fldenv inc pop inc decl mov aaa cmp mov lock lcall roll loopne xchg leave mov adcl cmpsb in aam xchg and xchg pop nop (bad) ja fs dec jno outsb cmp (bad) dec pop pop das jmp call xor adc imul mov inc inc xchg or adc insb inc leave in leave lahf jmp mov (bad) jbe (bad) (bad) xlat ffreep push jns movb xor loope icebp das and into push hlt inc mov mov ds or inc xor (bad) shr out push repnz dec gs and mov fsubs xorl or aas jl sbb xchg enter jne std and movl mov pop push add xor xor popa mov leave in pusha jp ds test repz sub lods jle sub mov mov ss cmpsb fwait clc cmpsl push jg jecxz jo out in push xchg cwtl addr16 test jl mov add adcl lods in jge xor out imul push ljmp cli lock sub aaa mov xor dec inc adc ficom out in les or js push sub lods jne sub push stos sbb movsb mov ret cs sbb jae push cmp mov les (bad) out xor movsl mov pushf stc xchg or pop ss adc sub mov push and mov adc cmp xor lret or pop mov cli repnz out pop loopne mov push mov cs jno or rolb sti das push or and push test mov shrl shrb fcompl out gs daa inc cmpsb out sub fisubrl data16 cld xchg mov push add push das pslld (bad) popa movsl mov dec jo iret adc (bad) fisubr push push popa jmp inc cli pop int3 movsb aas pop movlhps mov popf push call push mov push push xor xchg (bad) aas pop mov insl loope into add pop mov aad adc mov lods repz jl ret sti xlat jb xchg lret push adc (bad) (bad) popa jmp bound popa mov xchg push aas pushf sub mov adc iret cld dec sbb ss xor cs addr16 es and scas and pop jo pop in fcoms and shll pop fistp pop push int je sarb scas jmp jae cmp dec scas sbb stc (bad) jecxz pop push (bad) push sbb mov pop fimull lock (bad) aam test jb in xor insb adc divb js repnz xor rcrb dec and iret insb (bad) cmpsb lret lock push jno push mov sub ror shl sub push popl jbe pop inc hlt jg and pop dec aad ss imul call and (bad) fistpll (bad) cmp das add fxch out cmpsb xor mov bound shrb cmc mov test clc or inc loopne mov jle sbb push dec insl stos mov mov jecxz aaa rorl push (bad) orl sbb xor pop stos lock dec dec xchg lods cmp out xchg cmp sbb sub and mov mov xchg and sbb mov aad mov mov xchg jnp jae mov push xchg add sbb lret mov mov and gs cltd cmp lock mov mov push in es xor je push nop cltd test popa push fidiv adc mov jbe inc fstl push popa push xlat sub cmp jecxz pop sbb cmc inc cmp jecxz and mov jae mov lret into in add sub mov movnti push cwtl lock mov pop mov insb gs jbe lcall sbb lds sti push ds lods mov pop mov or push cmp push cmp lods aas (bad) fstpt shrl popf mov xchg icebp lret mov xlat (bad) adc enter into inc data16 scas arpl xchg dec pop dec xchg cmp arpl mov lret jmp ja dec mov lods sbb jle subl scas mov mov out jbe outsl enter addl inc faddl mov mov jl fsubs xchg hlt dec push push loop aad movsl and test lret or sub cld dec test ret xchg arpl mov jae push and push xchg mov mov lock dec cltd mov push push jb fs dec xchg into imul ficom add test dec (bad) repz jmp pusha fcomps mov adc (bad) stos or sub jmp repnz loopne cmpsb dec js insb jns,pt cmp inc loopne cld test pop xchg cltd mov shrl fwait idivl xor pop mov add fcoms jmp sbb jae pop cli cmc xchg add sbb cmc xor jmp mov cmp in das jb jo frstor sub aad sbb loopne fsubrl xlat jmp sarb cmp dec and dec je (bad) repnz jge mov andl imul inc jbe pop push jg and es xchg xchg push lds lds cmpsl xchg or sbb je int3 ljmp inc cs rcrb icebp jno sbbl (bad) dec mov mov addl scas xor push xchg sub mov and fstl daa roll call (bad) addr16 shll repnz xchg lods add jp test pop test mov cwtl int mov (bad) lods rcrb xor loope fmul fbld and sub sti dec cld and mov test cwtl pop iret lcall and aad es adc dec out ss and sahf jp rcll (bad) ja jno mov daa xlat push and inc ds loope sub sub xchg lahf cmp andl stos (bad) loop stos pop add mov xchg ds jle orl imul jge mov jmp and fstl push cwtl or jmp test xor leave inc mov shlb shrb test xor test sahf scas popf jmp pextrw sbb fldenv clc scas pushf lcall lahf ret shlb mov fcompl loopne (bad) mov (bad) xor pop into cmp clc xlat es mov test jne cli mov dec nop jnp sbb jmp in ffree pop dec mov mov (bad) dec imul xchg sbb mov sbb clc push test xor addb aam call ret cmp mov mov loope in fimull (bad) fadds pushf cmpsl shll insb (bad) and insb push jg or scas push inc add popa hlt jp ja mov fwait xchg push pop js inc icebp mov mov clc popa cli je cmp popa pop push (bad) lock movsl fwait and mov xor fwait xchg or pop test xchg sub mov rcrb les jle pop lds insl jecxz push inc lock fwait in gs xchg movsl fsubrl mov das iret fidivrl push stos xor pushf ljmp cmp inc xor inc lret dec sub rorb (bad) cmpsl sbb rcr and pop scas mov outsb insb pcmpeqd fs jo xchg unpckhps clc test cmp lcall jg mov or add repnz cltd push hlt int3 insl addr16 cmp ror inc push leave ret icebp adc sub mov lds adcb dec out and mov inc sub push push xor stos fwait add mov ret push (bad) add xchg push pop mov in outsb and xlat or inc pop in push push cmp dec add cwtl fmul dec or mov push and and in lods leave dec and adc sbb push inc mov clc jmp dec sub jle movsb xor inc test xlat jb repnz (bad) mov or jge dec add into cmp add push mov mov mov shlb (bad) dec fldl in movsb inc mov cmp fs mov inc push pop sub jo movsl fimul (bad) or cwtl xor mov fxam iret sbb addr16 xor sbb adc fwait xchg jnp xchg xchg (bad) lock scas push jp mov cs xor pop test adc and push dec pop inc mov dec add adc xchg inc and pop adc xor or ss sub scas adc ds fistpll dec popa mov outsb sub fsubrl xchg loopne and xor adc xlat fdiv mov mov push (bad) cmpsb pop das xchg insb stc xchg cli subl xchg push xchg js xchg sub ret xor es jo add inc inc nop mov jne xor sub xchg fisubr pop xchg mov mov xchg mov inc inc divb enter cwtl out or mov and push push jnp sbb les shl shrl and call sarb mov push jo popa jmp (bad) fiadd lret cwtl pop (bad) and cmp push push stc jl jl cs adc push in int3 and pop aam imul inc ds orl ror dec sbb dec lret sub rcrl (bad) mov outsb pop (bad) in cmp pop sbbl out insb cwtl (bad) (bad) es nop fisubr cld inc popl xor cmp inc pop adc adc or mov leave jnp mov sub push cmp jnp inc sbb pop inc scas sub push cli (bad) out inc aam shll das cmp add inc mov xchg (bad) outsl clc xor sub ds (bad) nop pop add cltd insl xor cmp rolb aam mov or movb pushf bound fstps mov loop lcall sub xchg test in sarb int das movsb pusha fist lds and (bad) lea adc mov mov arpl inc push cmp or cmp mov sbb pop jp adc in out shrl sub scas push hlt (bad) test push jecxz dec leave dec and mov (bad) scas adc inc or jo or dec jg,pn push sarl dec iret imul xchg out pop push mov arpl pop jge sbb dec xchg jns sahf adc cmpsb sub fstpt (bad) nop inc mov lcall jge xor mov add mov mov inc add xor cwtl xlat cld xchg jmp cltd cmp stc inc sahf pop outsb jns mov test mov aas lahf loop adc mov call ss pop (bad) rcl mov outsl jecxz sub jp push cli fdivrl mov mov dec or xchg jge xor int push or mov xor sbb loopne icebp out out jbe xchg data16 sub mov hlt cmpsb jo (bad) cmp test push xchg sub jmp xor mov sahf jl incl cmp lea fbld std std imul inc loope (bad) lret pop pushf sbb mov out sub mov js jp jmp outsb xor add fstl pop loop xchg dec mov ljmp addl adc scas js push shrb (bad) lcall clc sub pop push adc sbb in cmp std or push xor push je mov jne dec cmp iret mov or jb xor out xor or rcrb (bad) lret jae stos ret fldcw fsubl mov sarb pop sti clc inc xchg push test fs lret xchg adc dec out xchg xchg push ret adc in rcrl in outsb lea lods pop cmpsl jno adc vmovntps imul dec jl outsl add idiv mov inc decl lea pushl add addl push pop incl xchg fstpl loope and shrl aam mov mov rcrl das jo lock lret xlat mov (bad) loopne cwtl out gs cmp xchg mov mov adc fnstsw cmp cld push xchg mov xor leave pop adcb (bad) loope (bad) or xchg fisttpll xor lahf mov inc mov mov aad sbb pop stos dec rcr daa outsl out fisttpll (bad) call mov push jl mov data16 mov aaa mov jno mov les pop jp sub pop sbb adc (bad) or add pop jecxz in xor call hlt inc out add in inc (bad) in sarl mov pop and loopne cmpsb lret int3 lock sti push jp js mov lret insb push loop sbb push (bad) and je pop jmp mov sbb lds mov xchg jno xor lock push dec imul ror xor enter adc push sub push jmp sbb xor loopne push mov adc cli fstps sub rcrb (bad) adc cmpsl mov out cmpsb sub decl xor xlat pop cli lahf dec cmp jge scas (bad) les push (bad) xor dec into sub enter loope (bad) mov pop sbb ret (bad) jecxz mov stc add push jnp push sub cltd popa xor inc dec rorl or fsubrl add clc sub mov jmp test sbb lods mov inc inc cmc lret or xchg (bad) scas in jge adc cmp aam add jbe jnp enter xor mov ds lret pop rorl lcall lcall imul cwtl dec xor mov inc cmp lods pusha mov popl mov push in mov jnp popf jae andl xchg pop (bad) mov cmp sbb cmp pop push stos sbb inc xlat aad jbe adc or jne dec mov cltd rcll test gs das (bad) movsb outsb inc and imul and cmp xchg mov jbe enter dec or xorl pop mov clc andl adc sbb hlt xchg mov test in cli pop out sti pop out jne push or testb lret xor fs push mov outsl movsb jbe test fistp add inc arpl ja inc (bad) ss inc lds out and cwtl call out loop push xor mov sbb sub mov jge les mov mov test mov addl mov roll loop into loopne mov fs xor or dec call push dec sbb cmpsb push out loop imul cmp dec sub mov xchg lods and cmpsl cmp lds sub cmpsb and push outsb inc pop adc and pop in pop xlat aaa out xchg mov pop lahf xchg jmp rcll das mov in pop pop es jmp shlb adc ret repnz aad push enter pop lea leave stos jmp xchg xchg addr16 or sub sub pop daa incb inc popf sbbl xchg dec addr16 cmpsl js add mov xchg cltd rcrl xchg pop cmc or jbe pop pop lds stc sub call and notl lods xor cmp pop dec cwtl push faddl (bad) fwait lds jbe test sub mov mov je sub stc out sbbl ret mov mov sub mov decl xchg add ret into mov jbe push fwait xchg push in push hlt xor push icebp aam out in mov cmpl jp push cmpsl mov (bad) xchg sahf cs adc je jmp pushf (bad) (bad) sbb pushf in leave lock lret (bad) mov loope add ret (bad) mov pop (bad) xor dec sbb or fcompl fidivl jo jecxz dec ljmp or scas jnp add push (bad) or popa aam pop or xchg in test popf insb xor cmp movsl or (bad) mov lret rol cmp icebp cmp pop jae out dec mov fs xchg fisub pop adcl sbb adc inc enter cmp rorl add cmp and cli push add pop mov add out lret pusha mov mov adc and sub and aas jmp mov and js dec sarb imul bound sbb in and arpl dec pop push pop jle cmp leave in insb popf leave call add mov aas sbb sub sub or insb in jae ss mov jecxz or cmp (bad) push pop mov sbb mov repz je repz mov loop adc les pop hlt mov sbb shrl mov pop fdiv aaa sbb loope outsb stc fildl jmp ret insl arpl dec dec sbb ja decb hlt mov mov or outsb mov aaa and mov adc fistl adc aam and jmp fwait sub int3 mov outsb pop xchg into sub xchg test sub lahf jo push cs imul ja adc adc cs inc jnp inc out stc lds mov (bad) fistpll movsb pop arpl shr outsl inc jg lea and pop mov sbb nop inc (bad) mov ja jmp lock loop mov or push cmp lds (bad) mov adc (bad) xchg ror mov sahf fmull or stc (bad) dec inc xchg adc dec movb test loope pusha (bad) adc aam test (bad) testb outsb mov push cmpsb and push dec mov repz clc pop push adc adc cmp jle sub and xor pop dec and ja addr16 pop icebp stc clc add mov out jl sub jmp sub mov loopne jle mov mov stos popa js rcrl enter mov loope es add xor insb rolb pop bound xchg mov xchg push xchg int mov cmp out aas (bad) (bad) stc in imul pop arpl (bad) aad sbb dec push cli lea and sbb inc repnz pop pusha jle dec repnz adc scas fsubs das inc mov roll pop jecxz ja (bad) cmp jmp and pushf test jmp xchg lods lock addr16 jg cmp repnz push std xchg lods das adc inc and xor sbb dec out std fs outsl mov push mov mov mov rorl adc out leave mov add xor ljmp mov cmp cmp je imul faddl lods sarb lds arpl xchg sarb xor outsb jae cmp stos mov or mov test arpl push fidivl adc mov xchg jg cmp lahf inc ds clc adc dec sahf adc (bad) idivb mov or or cs test js adc fwait or xor arpl test stc pop test inc mov enter ds (bad) push dec imul add sbb rorb and add les cltd xchg mov stos sti jne aad daa adc jg jle (bad) pcmpgtb sti cmpsb movsb add xchg xchg push cmp jge pop mov sbb cmc pop lcall pop pop sarb (bad) pop sbb nop sbb out mov insb lret repz daa xchg lret into enter stos stc or dec insb dec rolb stc dec icebp (bad) or inc xchg (bad) pop movsb mov pop fsubl and subl push xchg jp cmpsl jb xor pop inc scas mov cmp jmp push jmp insl lahf movsl sub jge aaa mov jnp add fwait loope cmp or mov jb test mov inc and xchg inc out rcrl or icebp pop dec push pop mul sbbb and mov push mov add cwtl int3 xchg cmp xor daa mov add les cwtl cwtl arpl lahf pop lret mov daa cmp lock mov sbb cs xchg xor insl in jl test jno aas orb subl cmp sub fistl out (bad) fcomip xor cmpsb mov sub mov fcmovb (bad) xchg sti fcompl xchg or arpl int pop jb imul jl icebp orl jno ret sbb cld add jb cmp mov adc and mov setle mov jp fistpll lret in dec stc dec push sub inc sub sub (bad) icebp cmpsl lret jle jecxz dec fisub cmpps push repz int push aaa fist xchg divl aas pusha loopne push inc (bad) sub mov sbb pop jle pop xor gs stos or lcall aaa xor cmp or jns js sti push test ja (bad) cmp mov push xchg and lock push xor ja in cld movsl jns adc jl sti lcall pop xor test adc movsl (bad) gs stos or push outsb pop xor jg std stos or mov pop cmp inc lods jmp xlat jmp fs xchg and aad lds nop das dec mov or mov test fstpt pop lock rolb negb or aaa cltd movsb dec push mov mov (bad) enter xor inc testl xchg ds mov cmp addr16 repnz or lods add adc mov aad dec sti bound push pushf jae push add mov fdivrs cmp gs incb les daa jo clc add xor jns xor (bad) xor sub in and dec mov lcall mov sub push sub dec cld mov xchg test outsb dec outsb inc stos and repz and cmpl or jo testb shl jae jle pop push jecxz lea mov hlt arpl jge,pt outsb xor outsl sbb or xchg adcl xor cmpsl jl cmc push xor daa mov inc push loopne pop pop mov adc adc (bad) loope and aam cmp gs push pop jns dec pop pop fistpl cmp je fbstp in insb push popf pop (bad) lea or std test addl or jmp sbb mov sub or dec jb scas jge outsl mov mov or push aas or cs jge push jno es sub xchg inc mov jo mov outsl cmp and ret sti mov pushf cld and jmp in pop (bad) aad (bad) icebp out inc imul lret mov adc mov cmp xchg loope xchg inc test sub aas adc xchg mov and daa pop gs sbb dec pop pop jns fcmovu mov sbb xchg aas inc cmpb das add (bad) and xor push xchg adc imul fidivl pop fistpll or and cmp adc cli sbb sti fmull jns jno out (bad) pop (bad) popf repnz xchg imul push jno stos frstor aam pop das inc jns pop test and pop xchg mov aad shll mov dec push out cmpsl dec nop pop jns pop js inc movsb xchg jl lods test js dec addr16 jecxz daa mov aad loopne insb lods adc in insl mov sub int (bad) stos mov loope loope xor jo fsubs sbb sub rorb mov pop shrl int fisubrl cmp fnstenv mov mov pop movb push mov stos xchg mov stos jmp dec xchg push add dec add or (bad) (bad) sti push test cld call xor into aad push and inc jmp xor dec sbb outsb mov data16 dec dec sbb push inc scas or in sbb sahf fidiv inc enter int in or jbe lods mov cmp in lret in mov push enter adc lcall push sbbl jp push mov icebp call fdivs lcall ret sbbb mov push fadds sub mov test add lods mov stos fidiv xor cld sub mov mov dec cmp rorb inc lret dec pop out nop shlb pop mov sub xor test scas test inc (bad) xor push out fdivrs jecxz (bad) lods lret gs daa ret js inc out jmp in sub insb dec sbb in adcb jbe push add adc jmp ljmpw sbb pop (bad) ljmp push and add add pop sub push mov jmp loope inc lock jb xchg inc lahf iret cmc mov and pop sub jbe int3 ret fldcw fs jne mov or push jns cmpsl adc loop,pt cmp or xor adc in aas push bound bound pop es in das inc wrmsr mov xchg loop push xor mov mov adc out sbb adc pop fistpll negb pinsrw jb in clc lea jle pop push ds popa clc insb sub mov jns lods pop push fsubr outsb sub pop jecxz inc xchg fwait ret std jp jmp pushf xor fdivrs das pop movsl std loope stos adc mov xor jno pop into or xchg mov push cmp push lods xchg stos loop push jno std (bad) sti frstor (bad) jnp dec mov repz dec nop jmp int sub dec ljmp mov or pop cmp mov (bad) out mov aam sahf push and or push cmpsb mov push jo cmp mov mov xchg stos fs popf mov sbb or push insb jg adc push add xchg clc push cmpsb adc mov and cli mov hlt loope push sbb sbb movsb jo inc pop negb cmp xchg popa pop mov jmp into adc in std sahf iret cmp mov (bad) cld pop xlat adc mov add add and inc xchg jne push stc hlt add ja mov jmp pop pop out push and rcr or pop mov test rorl mov addr16 sbb push mov sbb (bad) or add lds mov jo leave mov ss add and lds pop mov mov dec fnstsw sub js das (bad) pushf xor lock inc lahf pop inc sub dec out fstp push mov fs pop sbbl shl add cmp sbb (bad) cld xor (bad) pop sbb cli jg mov inc loop jno out jo cmp pop adc lods ss add mov pop aas mov jg (bad) cmpsb pop pop bound (bad) adc mov cltd ljmp inc lods (bad) (bad) fidiv scas in inc mov jo jmp xorl mov xchg push or push xchg das sbb fadds out push fcoms mov mov push pop jecxz or pop push push pusha stos (bad) or in pop mov call decl adcl adc inc cmp or adc outsb sbb cmpsb mov jns jp rorl insl or jo push stos dec ret pop fwait push adc lahf shlb mov xor into or xor xchg leave jmp cmpsb or fs (bad) add jmp cmpsl push loopne int3 add loopne push push data16 hlt rorb (bad) sub mov clc call inc insb scas or cmp push sub fcmovnb lea and bound cmp jae addr16 mov and and sbb cmp mov addr16 jnp movsl or (bad) scas jae jns clc sbb test stos test lret push inc imul repnz es pop mov pusha or int cmpsl movsb push cmc adc sahf aam movsl push jb xchg (bad) mov aas out xlat cmp in add ljmp inc push cmpsb test std aas inc push mov xor push pop daa lret jecxz lret add ljmp mov mov dec (bad) sarl ja xchg or sbb lods xchg mov (bad) aaa jge or push inc repz xchg jl (bad) aad or adc out sub sbb cld std xchg icebp xchg jge push int3 push lods push inc jle dec add xchg mov stc ds cli xor mov jbe aaa dec xchg and dec mov pushf mov mov outsl (bad) push ret call call cmp inc jge xor ficom pop cmc dec cmpsb (bad) pop (bad) or pop in dec punpcklbw or fisttpl add rclb or pop mulb loop pop imul mov mov add in jmp mov mov xchg icebp pusha sub clc xor fsubrp xor cmp or lcall add cmpsb popf les out out in es les jb xchg jge adc mov lea rol aas or cmp xchg adc addr16 and pop mov xor xchg arpl sub jle scas add dec xor lea cmp rcll iret dec mov jmp pop mov mov shrl mov xchg mov (bad) je imul cmp idiv inc stos repnz cmpl int ss or mov pushf mov or inc and or sti mov or jmp iret adc popf les add js mov xchg sbb lock test xor out int inc int test arpl lods mov dec xchg imul cmp addr16 fwait cmpsb xor inc mov sbb add pop pusha (bad) jp push pop cmpsl xor pop fstpt leave loop and out ret mov js sbb mov jp mov lock int3 mov cmp (bad) cmc sbb fwait test lds loopne scas sbb pcmpgtb das pop scas adc xchg push fs or pop mov out jmp and in leave jo test pop lret pop out jns divl inc scas pop mov daa pop push mov in (bad) sub aas imul subb adc addb xchg addr16 and fsub stos or sbb sbb xor stos push stos sub fadds (bad) iret jns jne pop push stos dec and sub stos pop pop fsts inc cmp ds jns dec inc adc int3 mov xchg jle out adc imul cld adc pop mov pop addb jnp test leave mov stos sbb jnp xchg stc mov fcoml and cmp mov push push jg mov test lahf sbb sbb ja push call jp cmpsl rcrb xchg sahf jmp hlt and pop push xchg xchg push cs outsb les xchg push adcb ss pop sub inc lock xlat fsubl fldt ja (bad) mov mov xorl pop pop shrb fs stos (bad) cmpsb test fsubr pop sbb cs xor btc dec add test icebp cmp call insl arpl mov adc mov in lods sti pop ds xor dec (bad) jmp mov movsl test scas ljmp push mov xor push jae loopne xor push push test pop js popa movsb mov rclb mov sub adc inc jge scas (bad) jae subl movsl mov testl mov adc sub les push int addr16 lock push push xchg xchg xorb sub insl jle addr16 jb sbb xchg bound sub jnp mov jno mov daa push or push xchg xor mov sti mov dec push popa lret mov outsb popa push cmp lret cmpsb mov xchg mov or in inc dec mov lcall xchg xchg mov inc pop xchg pop pcmpgtd push cmp xchg sbb ret mov lahf rolb sbb mov mov sbb cld ljmp ja (bad) repnz jo daa cld cmovo scas pushf pop mov and mov daa or mov jmp faddl push mov je mov js pop add loopne out xor and adc pushf mov jp or pop (bad) add fldt or clc mov push cmp fbld or movsb in and je mov push push (bad) je fiadd mov scas lods fimul mov mov shl jmp (bad) pop add adc mov jg imul fcmovbe clc xchg daa adc add lods mov outsb jg loop ja fisubr cmpsl mov mov sub adc xchg std test stos fisttpll pop adc faddl jp (bad) xchg test sub push (bad) pop xlat sub movsl jg mov in mov shrl repz call loope xor cmp sub lods ret loopne jb xor aaa pushf fild scas test mov mov pop adc fs jl cmpsb daa pop jge jge mov xchg xchg push push int incb cmp xor mov ja sbb push movsb mov or cmpsb aaa adc jnp xor sahf daa xor push xlat mov dec lock lods pop or jmp or fcoml (bad) xchg imul sbb xlat daa lret ljmp ss test stos or cli jo imul cmp cmp jp call fwait dec pop int3 mov and inc or dec sbb stos scas sub xor scas aad int3 es jl bswap sbb bound sub fisttp or inc lret jg ss fbstp out jne sbb mov jmp jmp ds ss in pop or cmp int test mulb ret (bad) fstl sbb sahf adc stos cmp pop ja,pn sub inc rorb add inc cmp and inc ljmp aam dec pop (bad) pop les fildll pop lcall out and add cmp loop std xor jecxz mov lds ss aad outsl sub or mov (bad) fld ljmp rcrb clc cmp cmp sub idivb mov xchg xchg ja jmp inc leave lds out adc lahf inc mov cmp cmp leave xor jne outsl sub sti and (bad) popa add pop adc es stos out fs adc jbe loopne ljmp subl enter (bad) lock (bad) or fwait ds dec xor or jle ds ret mov jnp into xor (bad) lock add and pop mov or mov test dec mov ja cmp push outsb sub xchg test aam pop mov ja sbb mov addr16 xchg insl xor adc (bad) cs aad push mov mov fistpl pop or cmovne xchg jbe xor sbb push stos dec movb pop or or rcrb (bad) mov test mov dec lods sbb ret xor xor lock pop mov xchg jl xchg test inc push sbb faddl add push xor std aaa pop add or jmp and push sub jns mov lret lds arpl inc mov mov jl lcall fsubrs xchg push test mov push add (bad) lret mov iret imul sbb jo xor cmpl fcmove pop cltd dec int3 xor mov testl or popa (bad) sbb pushf mov not dec les cld push nop std mov cltd xchg lret sbb int3 sub pop sbb xor dec imul jl cwtl push jns xor add add dec cmovb aad sub xlat adc cmpsb dec lods lahf dec outsb jg mov jp gs mov ljmp sbb jns mov (bad) fisttpl lock ret int mov inc push push pop jne xchg ftst hlt mov cmpsb js dec je ds mov ss mov popf xchg push jnp or outsb imulb not pop fcmovbe mov leave aad inc mov jnp dec addr16 rclb cmp cld cmc mov xor pop ret push outsb je outsl xor push dec fnstcw aam lcall sub or adc mov pop pop mov jne shl xchg gs pop ficompl or mov pushf xor int3 pushf jo loop pop aam das push adc mov and daa mov sub in ljmp nop test mov mov sub pop test hlt lret (bad) outsl jno add jns insl mov xchg mov hlt mov xor dec stos push xchg in sbb adc insl (bad) mov stos (bad) out push jp cli add fwait ja out mov (bad) xor insb aas fmul xchg shlb outsb test push mov das lret xor fs cmp mov mov aas push cmp mov sbb sub ret sbb aas xchg and jl push inc jge clc inc scas fidivr imul sbb sub outsb stos fdivr jg lea cmp jecxz mov and and rcr add fisubr adc rcrb pop (bad) sub loop movsb jae inc mov jp mov pop mov dec addb (bad) jne mov fdivrl mov repnz cmp ret add add push aam loope iret mov pop inc adc sub aas dec cmp out in (bad) data16 shrl mov sbb fwait xchg mov adc and push out jo into arpl mov sbb fcmovnu or or out inc (bad) dec sbb mov stos clc add ja mov out xchg cli and mov and xor and lret pushf gs aaa movsl test out shll ds push adc and mov inc adc lock jmp lret sbb cmp andb iret call rclb sbb xorl pop xchg pop lret lea xor (bad) (bad) lock cmp (bad) enter dec pop mov js das fmull sahf and sbb push mov adc fidivl xor cmpsb lea mov sbb add add arpl inc mov push sbb push mov lea sbb mov push jo push xchg stos icebp dec in movl sbb int3 xor push mov pop mov pop pop xchg sub sub (bad) clc xor or aam push or iret push stc fimull xchg fcoml mov (bad) xchg scas jno mov movsb repnz int pop push xchg push dec adc test aaa push or (bad) pop movsl mov pop fistp int3 mov int dec jne lods jge (bad) ret cs decb cwtl inc icebp in idiv and fcoml push loop imull jo aaa movsb pop mov pop lcall add xchg imul mov sahf cmp pop mov adc sti sbb xchg sbb or and mov or inc aas mov mov adcb call int sbb dec iret and stos dec cmpsl fcom sub pop repnz push sbb xlat add jmp gs fsubr insl (bad) push das dec cmpb pop mov inc mov jp aam or movsb imul sub adc stos add or (bad) add es jecxz mov (bad) fnstsw in aas push mov cld rcrb add xor pusha data16 and imul add jo loop sub xlat sbb les sub cwtl mov cli pop inc sbb aas out pop js fwait xchg add imul (bad) sbb pop sahf call enter cmp sub mov rolb pushw (bad) cmp je sbb inc dec (bad) mov pop addr16 mov add ljmp or cmpsl add pop mov sub cmp jecxz cmc cmp add jb mov imul sbb jge loope mov mov jae xor sbb dec or popa in dec aaa movsl (bad) icebp pop xchg repz fistpll or rorl dec or nop push mov pop xchg dec mov mov test repnz ret dec in (bad) gs call int3 fmull pop dec gs fcoml sahf push enter xchg (bad) pop mov mov mov xchg or pop (bad) jae push cwtl pusha ret mov mov insl movsl testb shlb enter dec les push mov or call pop (bad) xor iret shl fsubrs dec sub fidivrl push out ja xor inc mov pusha pop jp pop push (bad) insl push out repz or sub aad insb std insb ret push mov cmpsl push mov movsl jno iret pushf clc jne stc gs inc nop cmp gs sub cmpsb pop xchg pop cs (bad) xor adc (bad) cmp lret push scas lods mov js xor sub enter jl xchg popa out jo call dec cmp and cmp (bad) scas pop sahf mov shrl stos mov clc repnz add enter and pop push mov sahf sbb and je jmp xchg jae imul pop ret out cs adc movsl pop fstpt xor movsl repnz push and xor hlt push xchg outsb ss adc mov or scas xchg sub jle add xchg out jle ret inc cmp sub add jae aad cwtl fcom cmp out jmp scas call and push mov (bad) jno lea lds outsb fisubr dec mov xor dec sbb and pop (bad) lret or or std aaa pop and packsswb pop add add sub sub es xlat int int popf push cmpsl cmp sbb pop mov jle jae cmp fwait and mov xor das clc or aad xchg out imull imulb loope pop pop cmp adc push mov sub fxch and adc sbb aaa pop test jge inc pop pusha (bad) mov jmp loope cmp bswap sbb sbb stos dec lea out je mov cmpsb jmp fstl daa pushf icebp add hlt sbb pop mov dec adc push repz and (bad) dec mov push push sub fs sbb in outsl ret std mov lea aas pop inc mov fs sbb movsl jmp mov jp and addr16 push pop add mov cmpsl xchg movsl xor pop (bad) dec cmpsl stc xchg movsl mov loope xchg lock loop lahf std jns (bad) jo mov movsl cmc mov push out sahf scas fwait es push add adc icebp dec dec pop lods pop out jo jo leave movups pop jb icebp test mov push jb (bad) xor add and xlat les ljmp mov imulb or jbe,pn lods sti mov (bad) jne dec mov push xchg jbe lea clc rclb jb mov or call inc sbb xchg add push add outsb cmp dec sub les enter mov clc aaa ja fs mov sub sahf jo stos xchg test out pop adc inc icebp rcrl mov idiv dec sub rclb out les (bad) adc lret jns xor jmp and mov insb and or mov pop pop nop push test dec xor rolb clc push enter test sahf mov or rep and xchg mov inc mov popf add fild cmp jbe and cli sub cmp add mov push dec movsl add dec inc push scas faddl add scas arpl inc adc mov xor push pop or add inc cmpsb (bad) bound cmpsb fldenv std test mov and imul out xlat ret push popa mov sti xchg mov mov daa fcmovnb shrl sarb xchg dec orl sub mov pop sahf dec lret cmp (bad) arpl loop imulb xlat out push xor add inc rorl shrb sub xor and sbb mov push fnstcw mov or xchg add jge mov or jl adc fist repz cmp xchg je dec in testb and repz in imul aaa jge mov out (bad) movl fisubrl cs cmp in out xchg test addr16 sub mov sub test (bad) mov ds add test push or or inc lret (bad) or out push stos sub lcallw or out mov cs mov test xlat ficoml jmp movsl cld addr16 pop mov insl and call test sbb push sbb adc jb mov mov call and dec pop dec sub lret fstp xlat xchg sahf xchg aas idivl out pop cmp out les (bad) aas test pop dec inc or pop jmp jg insb mov xchg movsb stos mov cmc jge push hlt lods enter insl jg push (bad) sub popf rorb rcrb icebp (bad) mov mov add push js sti divb pop push add mov bound mov iret cli in inc adc xchg paddw mov inc jle movsl dec popa cmp loope lds inc or stos jecxz and push push ror gs pop inc and cmp and jp adc sbb push mov js inc arpl or sub lock cli push movsb out or cmp sub je leave inc fmuls mov inc jmp imul dec xchg bt ss movsl (bad) mov add les pop pusha test mov inc mov repnz mov jmp add pop mov jecxz and cld inc push or enter push xchg (bad) dec repz testb cmc out insb out mov loope leave imul frstor fwait in scas out repnz mov arpl xchg je or fidivl mov mov mov cli and (bad) ja xchg js sbb jp fmull sbb pusha test cli loopne sbb inc xchg call js cmp cmp push enter push int3 or inc push jmp and cltd iret mov sbb mov loope popa cmp and call sbb mov fs dec pusha mov (bad) cmp sub mov icebp add pop cli inc sub ret add xchg sbb lock xor dec mov cmp sahf pop fwait cmp push inc xor push lds gs fwait mov xchg sbb xchg add out push inc xchg lock ret push sub es fistpll push or js cmp dec repz ss jae xor ret mov pop xchg nop cmp int fsub push pop pop fidiv mov inc gs lds das in mov ffreep cwtl cmp xor shll insl inc in es fdivs mov es mov fcmovnu pop jl sub loopne xor and xlat (bad) mov rorl jle dec sub xor (bad) psubb sti adc lahf fptan jo xor and fmuls fnstsw jmp lods std test mov pop shll ret mov jnp clc cs jge mov mov fiadd pop test add movsb lret and or push (bad) lret cmp into adc fmul xor sub (bad) and outsb jne lret roll xor jno out sub inc (bad) xor mov push jp push add ds jle pop mov xchg lcall (bad) iret out push sarl adcl outsb pop cwtl mov inc adc ja aaa scas push or scas xchg pop out outsl xchg add and lahf int pop mov repnz std gs repz xchg pop lds xchg and idivl mov adc push hlt (bad) jno fistpl popf xchg mov fidivrl in (bad) fstl push insb repnz notb stos movsl mov mov xchg xorl outsl xchg sub leave insl cmp jg fwait cmpsb xor notl pushf pusha push into or ja adc test lahf add cli jp xchg xor jno jle,pn in add dec and iret nop inc gs out repnz lods or imul mov adc ret int3 enter inc stc dec addr16 lds mov mov and or adc lds ss mov pusha ljmp pop pop fucomp push scas mov test cmc daa mov in loop imul sub cwtl cld mov iret inc mov sub dec fbld mov loop jle add add sbb xor in les pushf mov fnop loopne push ds push jb iret sbb or push sbb sbb xchg inc push stc ret nop adcl push dec and call mov push (bad) clc out xor and aaa inc imul pop xor adcb insl jg notl aas ljmp push in imul mov sbb xchg xchg jne stos dec mov xor sarb mov loopne cld dec push jg or rcrb and xchg mov jecxz insl dec and xor jg js mov adc in sub fistp dec imul push lock test lods fldl std test outsl jg and xchg inc and lock loop dec mov mov aas mov or fisubl jg ret test ss ja test jp or lea pop pop xchg push lock mov jno inc mov fcmovnu mov mov sbb or in xchg ret adc lret jge and and jp xchg adc xchg sub and adc pop cmp jp add inc mov test cmp (bad) jecxz mov adc or or xchg pop push mov shrb xchg sub jmp and push or mulb arpl or in fwait and out je cmp les mov cmpsb lret ret cmp cmc test pop jbe div (bad) and int3 mov add sbb jecxz jbe add (bad) (bad) iret lret test or out out jb pop sub loopne and push sarl (bad) movsb push int3 xor iret fimull or int cmpsb xor ret hlt xchg and daa mov enter push aad pop shl insb mov into cltd xchg test movsl xchg xor xchg adc sbb push push aas push cltd lret adc lcall dec push cmp inc mov sub into dec mov dec xchg scas or loope pop cmp inc loope mov push repz adc and inc ljmp mov clc es jg repz insb pop out (bad) sarl and das je mov pop imull cmp pushf mov add dec sbbl add and mov sahf (bad) push repnz pop xchg pop mov mov mov pop dec ret mov cmp cmpsl out inc push or sbb out jae mov sub (bad) sbb je dec sar sub jnp push jno mov (bad) adc cmp lcall sub push cmpsb mov shrl xor inc sarb in inc jmp dec addr16 mov cmp adc cwtl stos iret (bad) mov cwtl aaa out jg jns mov pushf ret aad imul (bad) mov add lret movsb or push dec or mov test jne jae jns jp push popf imul (bad) cmp adc pop mov jmp jg dec aaa (bad) int imul mov cmp sbb xchg insl int3 addr16 insl (bad) lret push jae (bad) xor aam test and and icebp xchg out ljmp jns push cmp inc ljmp jl dec (bad) and and jmp sahf mov cmpsb (bad) or pusha loop pop fldl aad movsb adc jbe scas pop mov sbb cmp in or adc sub mov push hlt in sbb orb cltd jge fidiv fs int3 inc out xor into xor or jl inc xor aam cltd and gs sbb clc iret push adc leave pop sbb fadds dec je jg jns mov push mov jmp jnp jge push fisubl testl lds xchg pop mov jb scas pop xchg adc fsubrl jle cmp mull xor scas test jmp ds inc std shrb xchg jle mov xchg cltd lds mov push popf inc loop loop into in les ljmp call into test jg ja lret dec jo xor fldenv out rclb aas xchg in cmpsb sbb hlt loop pop fcoms sub push jne orl int3 cmp cmp int3 dec sahf int3 leave ret jge rorl int3 lahf data16 lcall xchg dec pop loopne and push mov push js or icebp jp jle push (bad) lahf sub lds std add push ret push mov movsb cltd jnp les test les lock fsubl mov in loope mul cwtl sarb aaa jle (bad) icebp xlat mov std mov and jae sbb lret ror cmp mov xchg cld addr16 fdivl inc jg jae xchg mov aas xor adc push sbb sarb xchg cld cmp mov stc inc xchg fidivl push push inc iret sbb fwait in (bad) mov int3 dec lods dec adc and int3 repz inc repz (bad) xor ret rcr stc test sub pop movsl push cli xchg add xor mov jle aad popf mov pop popf lods scas dec cmp enter lret add outsl mov push cwtl in jl pop gs test jne sub fcompl jbe enter cmp xchg jne mov cmpsl into xchg mov xchg adc int3 adc adc xor mov pop and mov outsb pop sbb fisubl cmp xchg add inc and enter ss cs psubb and jge fldcw xor mov out stos insl neg bound mov and pusha jns sbb movsb mov push (bad) push or add mov rorb mov test icebp push nop sub sarb lds inc adc ljmp arpl in push sbb add dec add js push sbb sarb cmpsb dec sub lahf xabort arpl xor outsb mov enter mov mov ja push loopne hlt pop lock ds adc jecxz mov mov sub jbe cmp not (bad) je add and sbb xchg cld pop sbb lret push lods xorb negl mov push in repnz loop adc mov in sti inc push mov idivb or (bad) xchg sub add cmc stos lcall dec out push aam push inc in and in outsb shll add inc push stos fwait imull lods cmp adc lock insl fnstcw enter mov mov loopne adc pop arpl adc enter push movsb (bad) push inc pusha lret jns cmp xchg stc (bad) xor das sub or cmp add mov jno inc cmp leave pop loopne scas clc mov or sub push out and (bad) cmp inc movl pop xchg mov stos sbb mov cltd fldlg2 (bad) xchg cmp cmp (bad) movsb mov fcom xor out and ljmp add aam and stos clc dec and hlt movd test mov xor or dec pop sbb daa mov mov xchg sub cmp sub test in adc sub daa ret (bad) mov cmp xlat sub mov sarl inc test cltd dec imul mov bound pusha adc mov lcall add shll stc push test sub mov sub cld lahf aad adc dec xor cmpb pop adc mov pop sbb push scas xor mov xchg or lret sbb imul sub jne ljmp inc dec jecxz leave mov popf in rclb pop iret jmp enter pop mov mov leave lock insl mov ljmp sub sub xchg data16 lret pop push sub into je and mov jp stc xchg pop adc (bad) xor sbb int push js fistl rolb mov mov aam adc cmpsl jb xchg push stos lea sbb scas mov dec shrl xchg pop in pusha mov xchg (bad) mov cmp aaa lret iret jg (bad) mov sbb repz (bad) xchg bnd sbb ljmp cmp adc ljmp iret (bad) movsb inc sbb push int3 xchg pop xorb imul xchg out cli out pop mov jno sub cwtl sub inc cmpsb pop sbb test or loop (bad) sbb push or int loope je (bad) jmp jle pop mov sbb dec mov jne imul stc sbb addr16 (bad) pop jne call and arpl ds mov cwtl xchg sbb cmc push test psubb int clc andl add in and jbe sti add mov je int sbb (bad) inc xor lea out xor clc cmp jno pop nop and xor outsl adc inc and ret inc bound test xchg mov push je mov xor xchg test addr16 mov popf mov (bad) adc mov inc jne mov pop push lock aaa movsb add lahf sub gs sbb xchg fild pushf mov lock cltd or in aas sbb xor inc xor (bad) jne mov adc int and cmp ja stos pop push mov xchg xlat add stos and dec dec cld dec add es addr16 and mov and pusha stos js rolb and adc inc mov mov and mov pop mov ss jl mov imul daa sub sbb sbb je xor mov scas mov and sub lret in and aas push inc out iret xor daa jo sbb imul negb mov fmuls (bad) lods (bad) call ja out out bnd sti sub jecxz xchg jp out mov mov and mov imul push call das bound lret lret dec push push sti insb cmp push push ljmp test push leave out jno cmp inc add pusha pop lea bound std repnz cmc mov mov dec jp xchg sub dec pop rcrb xchg les insl mov cmp outsl popa ljmp fsub adc imul mov pop int roll jmp dec mov (bad) lret cmpb pop fimull repz cmp aaa aas loop cli inc add pop stos pop mov lods push jle xchg fisubrl dec loop adc xchg (bad) push xchg inc test lahf push dec rorl mov mov popa test mov (bad) or out cmp clc movsb cmpsb fsubrs mov lret inc jno ds pop xchg lret iret or xchg mov lock (bad) xor scas loope fsubs xchg jo inc (bad) incb scas in push int test xor adc cmp push mov pop cmp pop cld aam aam sbb popa push call into das pop sahf or inc or lahf ficoml mov (bad) pusha pop orb push xorl sbb dec cmp xchg outsl imul xor push sbb pop fistp xlat testl stos call push lds arpl test inc mov jl mov sbb xchg pop sub mov or sti inc adc and dec cs jae shll xor or jo idivl daa adcl jg das mov dec mov inc fdivrl fs cmpsb nop xchg sahf cmpsb test in in test movsb out shll adc or mov adc cli int3 (bad) rol sub mov cmp inc dec scas dec cmp or jl inc add xchg rcrb pop mov stos addr16 int outsl lret cld aas mov sbb cmpl adc add push jecxz nop adc lret popa mov adc icebp mov insl aad setp adc imul mov or popf push hlt rclb in lds sbb cwtl addr16 (bad) xlat adc pop cmp dec adc mov xchg xchg jb,pn or clc ss std mov sbb ds pop ds (bad) jno inc lcall push and add es in es outsl fs rep sub iret xchg mov push xchg xlat push fdiv sbb jno mov fcomp lahf clc push or xchg out and cltd jmp push dec xchg lret pop lahf pop xlat and aam jb cmc in xchg or cmpsl xor jge adc mov sub ret cmpsb stos arpl mov mov (bad) popf and out xor pop dec ljmp lods in mov pushf idivl imull add sbb pop inc fisub jb movl loop fisttpl pop ja mov push fsts mov pop popa scas adc xor fnstcw movsb xor nop rcrl cmp mov stc in stos ss add ja clc lock mov dec sbbb mov dec out idivb mov fs dec inc and idivb add jno sbb scas jne js les cmp movb sub stc pop push mov test add add dec lcall out out inc inc sub insb or in ds mov sub out test stc loopne push xchg leave cmp mov push (bad) sub xchg cli inc and out push das incl mov sbb jns les jmp push mov sbb cltd int adc scas cmp sbb shrl leave aad sbb xor dec or jo stos cmc cli cmp cmp mov leave xchg adc cmc push sbb aas push xchg repz leave leave call test dec mov jle cltd rcl push out and out sub rcr xor mov and inc push std mov jge rclb lahf in (bad) repz xchg ret xchg dec push lds pop xchg test andl sbb fisub inc or sysret into lahf dec or mov xlat test aad xorb xchg mov aaa int3 iret inc jae adc dec add and leave repnz clc scas (bad) mull enter adc mov pop cwtd jg stc xchg lods sub mov mov or sbb pop mov (bad) in mov popf femms aaa dec fnsave pushf fbstp jbe mov inc sbb (bad) inc cld xchg movsl xlat lret fnstcw movsl xlat ljmp mov cli add into imul loop (bad) cltd lahf enter dec push loop or lahf enter loope push adc sahf bound dec jecxz test loope adc dec mov insl mov cli and xor sub (bad) fwait pop push jns push mov popf leave and cs inc (bad) repnz add mov aas cwtl out mov in mov fwait jno out inc dec sub add cmp xor in inc icebp hlt decl mov rorb inc jnp fiaddl outsl lock jg or loopne pop push idivb and sub in lock jmp addr16 adc call std in inc dec shr aam mov xchg add out (bad) leave add fldt daa inc add or loop andb pop sbb xchg lds or pop test (bad) jne out unpckhps jle cltd orb movsl addr16 jb (bad) jo mov xchg in jns cmc jg pop mov (bad) jbe out imul pop push fwait std sub add pop iret add xor xchg cmp xor fnsave les inc (bad) sbb in shrl pop stos jb sub (bad) clc and pop fwait cmp repnz dec or imul jae jmp pusha aam sub es pop or pop mov cmpsb adc (bad) jmp inc stos repnz xchg dec (bad) cmp popa call leave or cli (bad) dec and int jno mov data16 push pop jp aas mov rol sub mov stos (bad) lahf (bad) mov (bad) cltd lds stc pop sbb outsl jl sbb inc fcmovbe leave fdivs jl aad push decl pop in sbb lods adc jmp xlat xchg scas cmp cmp leave add mov push dec adc shlb rdmsr push dec push lea rcll mov dec test mov xor sbb pop cs pop inc mov (bad) pop cmp jae insb loopne mov aam ds aad or cld loop pop insb lgs stos xor push jl push add sub out fldl pop sub or fidiv xor jecxz rcll cwtl stos iret ds fsubs and lock dec leave fmuls sbb aas mov cmp push push pop mov xchg cltd lds decl and std mov popf lds (bad) push test xchg lods mov pop aas dec icebp jne add cmpsb in or jae fdivs sbb subl push mov bound lahf movsl dec (bad) jle or das xor xor (bad) lret jl mov fwait jl cmc cs dec inc test add les inc (bad) xor pop sbb data16 or cmp inc adc loop mov (bad) jo cmc cwtl in sub sbb mov sub add aas (bad) shr into xchg pop sarl mov out incl outsb jno out jne lds cld push xchg jp pop or imul (bad) jno dec jg or imul cli (bad) fcomps xchg mov outsl rorb push scas dec sbb test jmp pop mov and mov neg iret fstpl or ljmp (bad) (bad) (bad) dec testl stos (bad) (bad) dec dec sarb arpl (bad) mov adcl mov icebp movsl fcmovu ds pop inc movsb mov decb (bad) adc int3 divb jo inc outsb push push sbb movsb sarl sub js mov push pop xchg xor adc adc movsb or jle cmpsb and rclb aaa xchg xchg adc add push sbb lock cld xor mov insb adc mov push jl and add and cltd push pop jle add mov lcall pusha sbb nop mov test push add xor push pop in cmp cmp aaa mov mov pop loopne stos adc cmp stc scas movsb mov ss out loop loopw xchg adc jb sbb xchg push and add je out adc push mov inc xor jns repnz mov std push loope rol and test jg loope mov cs lret scas insl adc mov orl add cld push ficom jnp sub loopne call lret and fldcw cmp hlt jge jmp (bad) aam sbb or in lds test mov loop int push negl divb cs adc movsb sub mov inc jns fmull mov aad push mov mov jecxz jne mov mov dec mov out mov pop js dec sub (bad) ret clc push gs fs fadd mov jge dec pop mov jnp cmpsl push pop sarl jmp into repz inc mov mov fcmovbe ficoml adc sahf gs push push jbe or in push dec stos pop push sarl aaa mov xchg pop fistpl mov mov rcr mov fs sbb push rcrl divps dec sbb scas and xor mov xchg jecxz daa lret iret cmp pop je (bad) jae outsl jl sub mov pop push (bad) dec dec sbbb out stos pop test jle lea jmp js inc sbb aam sarb and (bad) (bad) fistp dec fdivrl inc dec in (bad) sar lea mov mov xchg stos xchg imul xor fnstcw inc (bad) fadd push mov sub xor dec dec inc pop pop or outsl or inc mov (bad) fcom insl int3 inc mov cmp mov leave jmp movsl inc cmp adc nop push push dec lcall (bad) out mov mov adc xchg adc cmc repnz shrl push in xchg jmp pop lret mov test daa xor mov cmp scas js xor (bad) cs into sbb decl sub cs lods (bad) mov mov cli test test mov imul js aam cmpsb jae outsb iret sbb mov mov mov adc lret dec adc dec and push and pop lret mov mov dec in mov fdiv jae btr mov loop jo mov es inc and imul mov nop bound pop push pop lds enter lods cltd adc adc pop dec sti (bad) or dec push push xor sbb (bad) test pop push xor in (bad) insb push test (bad) out cmp mov sar mov xchg and ret insb test xchg mov lahf fcoml pop xor pop mov lret xor sbb mov (bad) xor adc adc ja and jmp pop pop (bad) stos sbb (bad) movsl xchg (bad) scas repnz fucomip dec or rcl out mov dec or sbb mov stos maskmovq (bad) dec xor fistpl out imul pusha lock aam jg fdivrs enter and (bad) clc jae pop sbb shrl cmp scas xchg pusha cmpsl mov (bad) (bad) aam insb xor mov xchg stc xor ret cmp lock out sub push cmc xor xchg cmpsl incl adc mov fnstcw inc jg aad pop int3 test data16 jmp fimul mov (bad) mov xor jno mov (bad) icebp add xacquire mov mov or add add iret movsb cltd sub pushf (bad) int3 pop test pop push mov and mov out xchg bound cmp fsub daa pop loope jl cmpsb ror jae lods xor jns fstps mov in pop je std xchg fwait sti mov aam xchg or inc inc stos push pop push sbb pop (bad) enter jp lods sbb dec cmp movsl fnstsw imul jno pop aam xchg incb and hlt jg mov xchg jo sbb mov inc mov call stos xchg xchg lods inc push mov fsubr add mov mov scas dec aad stc out mov inc lret decl call sbb adc jecxz dec mov fwait aam jo cmp add out enter scas sti push cmpsb or leave mov insl jbe dec cmp (bad) jo out fs (bad) sub in and cltd das jge adc cmp and push mov mov cmp jp hlt xlat in cmp cmpb sub int3 adc inc mov adc ret (bad) add mov sbb jmp fisubr inc (bad) test dec push fild and daa mov test movsl loope mov jmp dec jne mov mov mov mov jge dec cmp xor in test movsl mov rclb fwait push ret insl movsb xchg inc cmp sub sbbl in mov insb in std outsb les insb jg jno out cwtl cmc sub cwtl cs and movsl clc jmp and sub scas mov or mov in push ljmp jl mov out js sahf mov (bad) push pop popf in push popf imul jp loopne and adc cltd lock or pop flds inc sbb fiadd test push xchg sub std mov cld jns mov jae dec ret mov add std in mov xor dec or scas xchg xchg mov xchg jne pop mov add outsb hlt nop test xchg (bad) movsl imul or mov fisub fs js scas cmc xchg jno in xchg push enter roll jl mov inc mov jae mov inc push inc imul das pop shll dec dec stos cmp ljmp pop repz pop push stos mov outsb push roll test stc out mov out rcrb lahf and inc dec mov stos or mov pop fisttpll rorb mov xchg movsl call repz mov fwait push inc xchg fcmovne xchg in pusha repnz xor lcall xor fisubr aad cmpsb (bad) int3 mov mov push add xchg mov addr16 push scas mov lret loope (bad) dec sbb stc es mov int3 popa mov inc (bad) leave loop subl mov mov movsl jp scas ljmp rcrl jge cmpsb sbb or scas cmp jae pop call lods and (bad) lret ret outsb popa fbstp xchg bound push rolb stc mov mov repz inc js mov xchg jbe (bad) fstpl mov fwait aam or push sbb data16 inc mov scas mov test popa jae rolb pop mov test insl inc push andb mov cltd dec xchg adc mov mov cmp mov repz push cmp sub lods xor arpl loope adc int3 xchg fnstcw adcb imul popa fwait shrl sub adc jae icebp mov mov push mul jmp fdivs mov scas fadds insl push mov pop xor insl fucomip inc inc mov cltd and jp push and inc sarl fmul in icebp lret negw imul mov push jl aas add mov push mov fcmovbe xchg (bad) cmp or inc movsb fistpll mov add xchg inc outsl imul loop add mov mov outsl sub sbb sahf leave test jmp outsb xchg xchg cs lcall push popf cmp inc sbb pop frstor jo loope movsl out loop int loopne push xor in dec (bad) fidivr or sub pusha push mov pop sbb pop xchg jl out movsb pop out sub xchg cmpsb or dec aaa outsl and xchg nop hlt cwtl aaa dec sarb add addb adc jge leave fisubr pop mov imul dec inc xor lods xor mov sbb fist add test dec sbb inc mov add sbb hlt xor outsb push sub mov loope int sub jno lahf pop inc push sbb ljmp (bad) ljmp sbb outsl in pop sbb mov mov (bad) lcall xchg mov lret (bad) xor cmp sbb fwait stos or mov sub int3 mov cmp pop mov out in push dec jne popf jle ret in pop or mov add jae mov fdivrs mov sbb pop arpl scas push adc aam data16 mov repnz cld cli push inc jns mov mov insl mov push lock in loope push ffree pusha jno sbb mov dec gs xchg pop fsub aas or fadds sarb mov push push mov jbe cmp js sahf cmp cmpb aad testb xor push mov jns out pop mov fist sbb shr repnz cmp add out cmp out into mov mov in xor sub ror mov push mulb and mov jns and sahf add movb cmp (bad) mov iret adc jae jg mov mov push fcoms movsb cld xor ret mov mov arpl sub pop mov xor aas js aaa dec loope int3 int3 jle lds push inc andb xlat loopne or negb loopne insb pop shlb fdiv cld adc xchg inc jno xchg jnp (bad) fisubr xor ljmp sub or cmp push pop enter in dec or push int3 shrl shl std add push sarb iret and adc hlt das (bad) popa and inc xchg jl int3 leave mov xlat les and clc sub add inc sub ljmp add pop add lods ja xlat stos inc mov or out lahf pop (bad) mov lods mov add js mov stos in mov adc xor shll rol push pop (bad) in sub mov sub mov push fistl cli push subl (bad) cmpsb push dec jp sub cmp adc add cmp repnz and loop sub push (bad) int icebp (bad) sahf add mov and aad je jns jg mov (bad) std jl add and jns dec push icebp adc xchg sbb sarl test popf mov shlb decl insb gs dec pop lods in sbb dec clc mov pushf dec jge rcll mov lds push shlb fmuls sbb das imul cmpsl (bad) mov mov fdivrl cmpsb cwtl in sbb sbb test jb inc cmp repnz incb pusha scas inc push cltd aam mov lds das xchg loopne (bad) cmc sub lcall or and or dec and loope arpl mov loopne (bad) push inc lcall sbb repnz les cs sub dec adc mov lds sub (bad) lret mov and cwtl not pop test loop and jg sub jmp and dec dec out mov loope movl bound pop ja std int3 mov mov mov hlt cld jg xor push ret jl mov out lods mov or inc or or js int sub mov and dec or jmp inc fnop test inc and dec dec sub cmp sbb aad dec cmp aaa pop lds in mov cmp (bad) test aad push (bad) ficompl aam outsl lret add cmp sub (bad) push and xor movl pop lea dec js mov jmp js mov pop cmp in or or fimul xchg sub mov lds xor (bad) int cmp sarl (bad) (bad) int xor outsl and les or iret dec enter mov loop mov cmpb pop pop cwtl mov dec push mov int3 and pop and sub add imul cmc dec and or sbb mov mov pop mov cs jmp mov iret movsl aas mov add xchg cmp ss lret add jl cld pop and cmp and (bad) or dec cmc jg add pop mov iret mov pop stos pop ja pop mov popa adcl and iret (bad) jl xor jae sti add in jns jge cltd xchg mov or mov out fwait stos (bad) cs stos adc ret fwait stos sub dec je int3 enter ja scas push inc mov push je inc (bad) into mov loop (bad) push dec pushf hlt addr16 sub push aas pop mov sbb cmp pop or cmpsl mov cmp mov imul sbb add loopne xchg xchg pop pop cmp negl sti cmc or inc mov pop shrl sbb xchg sbb mov test loopne pop jno in mov movsl and mov pop loope nop loop xchg inc call fiaddl adc leave mov pop out mov in jns bound fildl sbb inc aas loope xchg xchg jno xchg fsubp mov lret inc fstp repnz xchg push or sbb mov sarl xor (bad) mov jae scas ret jmp aam leave int3 add cmp in add mov lock stc les inc lahf or int3 xor xchg enter and or sub in push (bad) sahf xlat add ljmp cmp and inc xchg ret or push fnstenv (bad) imul repnz outsl je mov push cmp std int mov pushl loope xor mov adc pop rorl ret ja jno (bad) idivl add test mov xchg sub and sets cmp ja lret jns xor push gs into add lret dec or ret xchg mov dec insb aaa aam or push pop sub xchg adc mov push push or dec js (bad) icebp iret outsb cmp test sub shlb lock mov mov mov test jmp or repz addr16 mov push cli add jg cli rolb (bad) mov nop push lret outsl loopne into mov jae mov xor xchg pop hlt shr inc pop hlt jg cmp mov push push pop and cmp push mov cld mov push ja push lods stos out pop addb jecxz cmp and jl clc rcrl sub repnz jecxz inc inc cmp cmp fldl inc repz mov xor push mov lods sbb icebp xor jge adc mov stos test jg cmc dec fld mov (bad) adc icebp sbb mov sbbb flds je push push (bad) loope xchg rcrb outsb jmp shll fiaddl stos shl and (bad) imulb or xor mov and imul shrl movsl aas inc mov pusha inc inc lods and sbb mov repz jecxz mov (bad) jmp cmp mov sbb mov sbb ret mov lods xor mov pop (bad) mov and subl sub movsl push pop arpl sbb je or dec mov xchg (bad) add or je fild jno mov aam rolb mov pusha dec or push daa push jl xchg or lahf ss push add bound mov icebp loope les sub push nop mov popf sbb push lret fmulp jnp and push cwtl sbb rolb (bad) mov inc mov fmul jne arpl mov test pop sub dec push jo out inc out push cld stos mov mov fnsave lcall cs sbb aad (bad) int3 nop adc xchg fisubl popa or mov push xchg (bad) lock xchg mov int setb jecxz sbb cmp call fstl add scas push push push lcall mov adc xchg or push mov addr16 (bad) hlt repz mov xchg stc pop jg aas push push mov lcall cmp lods sub daa lea push jl jb mov xor lahf inc pop and mov imul out and add out cmpsb sub cmp inc ss (bad) inc sub dec in andl leave enter or jmp flds push in mov stos lds cwtl test loope (bad) adc jbe lret xor cmc mov (bad) pop add push and inc test inc test add sub rclb jo lahf mov add inc mov add pop out cmp xchg push jge cmp xor fcmovne add mov sbb fstpl lods pop faddl loope cmp cmp xchg and (bad) dec (bad) mov out jmp add pop inc dec push sbb fidivrl mov mov repnz out pop pop imul fldenv push jle sahf cltd je push dec pop dec add lret out inc sbb push mov pop sbb icebp mov idivb imul inc jae cli sbb mov mov mov arpl bound mov rclb ljmp in push pcmpeqb and int3 roll (bad) xchg mov push dec gs andl dec les mov in cld dec cli dec xchg pop add xchg loop les in pop movsb push fistp bound adc cmp push add lods iret loop mov dec (bad) push add fs sahf stos dec in decl add pop enter nop cmp test pop pop xchg mov lret adc add and inc (bad) cmp or arpl movsl inc sti inc or lock movsl seta sub xor icebp unpcklps jne mov mov push stos inc push mov into out idivb hlt loope adc test push push or ret pop adc inc (bad) rol ja cwtl ficomp test cltd cmp push adc hlt jae cmp xor sub popf dec and sub adc mov xor (bad) ja lods lods and out pop int3 mov fnstenv mov rorb icebp pop test mov and ljmp shlb pushf cwtl inc in lock shrb hlt jle mov mov xchg sbb pushf pop bound in fistp and idivb fidivl das clc push or jne in jle lds mov ja lret cmp pop xor test enter out dec push inc test xor add or jnp sub movsb mov cmp jbe dec or aaa push (bad) mov ss sbb sub mov lretw mov sahf (bad) repz jecxz fwait nop imul insb fisubr push cli mov xchg xchg and inc test push sbb jecxz push xchg xchg dec (bad) imul dec fldenv mov jnp popa mov pop jb xor push scas stc add xor push push lret jle xchg push xchg sar push scas sbb arpl lret inc test add sbb add cld or pop xchg out pop push sbb les sub and dec inc and adc mov mov mov js cmp jo daa rorb jmp inc and out add das and cld mov jle and adc lcall push inc jae lea inc inc int push xchg outsl aad sub cmp mov inc xor sar int and pushf xchg fidivrl fstps push (bad) into stos fdivl add sbb daa dec in jp mov jmp push ljmp jno test (bad) imul mov (bad) xchg sbb dec int int rorb add lahf lea daa out ret add mov push iret je push shll and mov sbb call cmp pusha mov xchg sub dec cmp jmp sub cmp insl sbb (bad) xor dec rolb adc mov cmp leave mov sub add push sbb std mov iret movsb insl push aaa test ret jbe sbb in out pop cmpsl jno ret mov inc cmp push jnp arpl dec push test (bad) popf lock fst jge movsb mov or mov jge jo clc inc pop mov or xorl stc je dec scas inc pop xchg or dec cmp shlb rcl mov xchg js in mov jno cmp call and or clc adc cmp dec lret adc rolb clc cmc cmpl and jne stc mov cmp mov lods push ja aam cmpsb mov xor (bad) mov movsl insb or pop mov loop js fnop aam mov ret sub das sub xor lds adc ss mov dec inc pop adc adc int3 aas lret mov xchg pop iret lret mov (bad) mov sub lcall ss cmp and cld dec aaa pop pop (bad) pop xor mov dec (bad) push add push fst out int3 sub sarb push and and mov add test xchg ja sub aad lret sbb xlat (bad) xor jmp imul aam dec nop push mov (bad) adc gs xorb pusha cmp stc pusha fidivl daa push xor mov xchg adc jae mov or add ss leave push xor jmp xor popa pop (bad) repnz fild push clc jns mov mov lds push pop jp cmp cmp mov dec test loope mov lcall mov inc pop in inc imulb hlt out add ficompl imul mov icebp add shr xor xchg mov mov inc repnz dec test sbb loopne inc scas push add cwtl imul mov hlt lret or mov or mov mov cmp dec sbb add inc push pop (bad) dec adc icebp lds add pop lcall inc adc mov adc lret (bad) push out pop mov ja loope inc (bad) sub shr aaa arpl fiaddl idivl lgs sub mov adc sbb dec (bad) jp mov pop cmp mull jns jmp outsb and call into pop add ret (bad) pop pop pop int xchg jmp xor leave xchg push in test inc les xchg rorl pop (bad) cmc fwait jmp or scas adc mov sub fs (bad) in dec jno leave cmp mov cmp es jmp rol mov test and bound cli aad loop or and sbb (bad) test fisttpl loop mov cld jecxz jl inc loope dec int3 scas mov int inc leave mov ret ljmp stc sbb inc xor lret lods jae xlat xchg call cmp jno out cmpl and ljmp rclb gs bound clc or xchg jmp mov inc push daa je lret push ds add jge sti daa movsl mov insb add les ljmp es lret or sbb in cmp push mov xchg ret sub loop lea nop in jae mov fdivrs push jg adc loop push sbb mov add add je cmp cmp sahf push adc push jbe dec addr16 lods ja adc pop mov xchg jmp das xchg or mov out jnp mov std ds xlat popf jl shrb test inc (bad) in mov cmp pusha test or xchg aam mov xchg popf jge lea cmc xor mov lret dec mov mov iret xchg cmp add dec xchg xor dec sbb fnop rcl pushf xchg mov inc jmp iret dec add insl outsl sub fmuls or xor loope jns int3 insb sbb mov fidivrl orl xchg cltd fidiv sub (bad) icebp ret mov jne xchg mov mov mov jbe popa out mov add movsb outsb or mov loope sub sbb sbb and ret jmp add mov dec test add mov add mov repnz ljmp ja push test pop cmp push dec mov out lahf push mov das mov or fsts add sbb in sub inc pop xchg in lds popa std adc (bad) fdivs jmp sub std push adc xchg push int push data16 loope std pop xchg insb ljmp stos and or enter jecxz add into xchg dec pop cwtl les pop ret dec inc cmp or and mov subl loope out shlb pop nop fwait pop pop push lcall rcrb outsb xchg sub daa or xor inc idivl mov bswap jge push push addl dec rclb push (bad) cmpsb rorl lock cli cmp or and rcr adc addr16 inc mov nop sub pusha scas and cmp lret not das andl fstpl mov push inc aad xchg insb mov mov dec (bad) xor rcrl or jp ret in add sbb add (bad) mov inc pushf pop leave xchg (bad) mov sti movsl pop push cmc (bad) scas mov scas dec fidiv cmp mov dec mulb xchg mov aaa loopne cmpsl or ljmp jne lcall push sbb nop into fldt int jns adc lret (bad) cmc std adc lret push xchg add push (bad) sub dec push jne nop sahf or jg sub mov inc inc outsb hlt test lods out push outsb nop test pop mov orl pop popf pop pop popa inc ss cli or addr16 insb out (bad) lret es arpl pop and mov sub lods push inc xor sub or movsb (bad) out cmc lea orl std mov iret push cld cmpb das lcall cmp fstl xor mov sub inc sti sbb mov and je push in cmp rorb jbe rcll aam add mov (bad) lret adc pop add sub inc (bad) pop pop xchg (bad) cmp data16 ja push inc xor aam lods int imul cmp dec jl jp xlat jge jae inc and lods push pop mov (bad) cmpsl mov inc scas cmp xor dec mov fdivp insl push or mov cmp fmul loope imul iret jmp gs jo shrl int push mov (bad) dec adc dec xchg add cmp ror and mov sbb jmp out xchg pop inc test jb fmuls mov sub scas repnz mov jmp jne mov inc ret mov ret mov out push xchg ret imul pop (bad) cwtl notb rcl stos xchg sbb in fbstp cmp xchg xchg and jle push lock jmp loopne add (bad) sub jbe sarl dec fiadd stos jno (bad) popa daa dec shll imul sub add outsb push mov sarb out xchg (bad) inc sbb fisubr (bad) stos insb xchg iret xchg jmp pop cli int mov lret ret xor lea cmp or inc dec int cmp inc scas in xchg sub dec ror adc aam pop cmpsb add adc (bad) and push sub jp inc lcall cs or call mov xor test cli sub jo dec inc mov dec dec jo inc jge pop xor loop (bad) scas das pusha test leave adc pop pushf out fnsetpm(287 stos fsubs lret ret ret mov in adc xchg cmp fisubrl insb sbb ud1 xor push add lret jmp aaa inc push xchg sbb mov popl mov cmp pop dec shrl jl ret ret pop adc es dec jge int lret push adc lock lock mov fwait in sub scas (bad) cltd cmp mov roll aaa ret enter movsl outsb pop pop fs pop arpl jmp xchg negb lahf lods adc iret cmp add fimull gs sbb mov push pushl xchg stos cld lea test lea push sbb mov in repz cmp sub add mov jmp jnp mov mov sub lret push and sub (bad) push mov mov cmpsl jle pop (bad) jg and and jae (bad) mov push fwait ror or in out pushf and or out pop lds cmpsl mov les insl ljmp cld adc (bad) icebp sbb sarb repz test loope mov cld mov xchg cmp xchg out movsb stos dec mov xchg xchg inc aad test mov cmp stos jge arpl mov jecxz int3 xchg mov je mov adc aad adc push jmp (bad) test mov pop pop loop or out xlat out dec int jae push fwait rorb ss stc sbb push pop insb adcb mov jmp call jns,pt cmp adc out shrl ja pop std push push xchg xor add jo jmp cmp inc aas push lds insl cli es pop mov out cmc jns ret push jne push mov inc and jbe in loop cmc test addr16 xlat pushf pop in repnz pop repnz dec push adc xchg stos dec sbb xchg lods test rcrb jge add lods in cmp mov insl inc sti test dec mov int3 mov out jb movsb and xor pop sub dec test imul cmp loop sub je add call inc cmp dec ret sub mov add mov sti insb aad xor push push and out pop das (bad) stos test inc mov clc inc icebp jge jae push iret ficompl jns test inc out pop or mov int loopne sbbl mov stos add push imul mov inc enter cmpsl in push jp int3 pop mov lahf mov lods fs or fstps test ljmp je add push push jae xor cmp (bad) or pop dec xor cmc mov fwait mov aam adc jl mov or cmp add loope xchg test out mov stos jle addr16 scas stc insl gs dec (bad) mul pop mov addr16 and aas xchg adc add dec and rorl xlat test (bad) lock sub mov loop xchg add jle test adc pop js fdivl mov repnz lret mov pop mov or aaa test iret sub dec mov imul sbb test mov mov inc push adc imul mov add cmc mov mov into push sti inc sarb adcb add mov cmp rolb sub (bad) movsl lcall add dec insb scas mov pushf mov adc fnstsw nop pop test xor jbe jp pop insb (bad) out outsl das xor es mov push adc ja imul mov lret cmp mov xor clc repz jecxz sub or mov and jbe xor xchg add cmp push push (bad) cs icebp lcall xchg sbb (bad) lret sub inc in push mov and xor (bad) cmpsb sub xor push subl test mov popf mov out dec inc jl std lea jbe xchg jg push jnp inc xchg push push xchg push xchg imul adc mov dec pop leave cmp mov dec sar mov cmp aas enter stos aas or aaa test xchg or ret aas dec dec out xchg mov xor dec push loop inc lahf jge sbb jb (bad) mov xchg in jge push lds outsb cmp mov jg xchg fucom push inc mov gs sub push inc mov fldt hlt push and ficomp lret push js rclb jl mov adc hlt dec mov inc mov xchg ret (bad) or (bad) mov outsl push aaa xchg push and sbb outsl fwait pop in loope ret loopne cmp push rcr cmp mov stos or test xor cmpb rcll xor cmpsl shr pop or push cmc push mov sahf cmpsl inc push push mov jns sub pop cmp (bad) je xchg sub (bad) dec mov and mov xor jecxz subl leave aas js push xchg push lock ficomp add cs cmovb sbb cmpl fxch push push mov es js jno add daa lock ss xchg out aad dec out sahf cmp add xchg push sbb (bad) mov and xchg sbb push mov mov sub push cli stos out cmpl (bad) sub js jae bound pop jbe dec mov sub mov out les lret out enter lahf jle sahf adc pop lret cld adc fist xchg and test cmp cmp leave xchg jnp inc push and and fdivl push fwait adc pop insb inc and int aas xchg mull xchg popf mull out mov js adc pusha mov mov outsl int3 insl sub lret fsubr or cmp imul movsb pop xor (bad) sub negl cltd cmp addb mov mov xchg in sbb mull lods or rcl sub push scas or fnop mov dec jmp mov push insb pop aam adc fcoml pop mov and or ja in outsb hlt andl scas push sbb xor pop sbb mov outsb add imul jb sbb adc xor lcall or xor cmc negl or aaa js cli sbb das dec in lret stos test data16 outsb imul mov (bad) rclb outsb iret lcall rcrb mov mov xlat push bound pop js mov pop or dec shr jp sbbl cmp add and sub lock daa cmc jg xor aad dec cmp lea in jge lds stc test and je jge dec push in enter dec add mov push xor inc mov adc fistp xor jmp sarb add icebp in jecxz adc les fucom dec mov xor (bad) jno sub loopne ja popa (bad) cli jne fs xchg loop test lods shrl (bad) mov pop push sbb lock and mov lea jne pop psadbw addr16 es sub and scas fdivl ja (bad) jns clc scas jle and cmp (bad) (bad) int3 ljmp inc sti lock js and fsts aaa add mov push lret mov leave and ss outsl mov sbb push jne pop mov inc inc dec jno mov (bad) (bad) sub fiaddl jg fdivrs and fistpl (bad) gs push lock and icebp test aad (bad) push repnz fidivr lcall xchg push stos mov mov xchg jne fwait imulb sahf jp mov xchg lods or outsb add imul or add popa ret icebp mov repz or cmpsb int3 lcall (bad) xchg aad mov cmc sbb cmp lea sbb sub mov imul setg pop push inc push push es jo movsb push mov or sub adc or and mov mov inc rorb in mov rolb push or cli or xchg addb add or repz test arpl mov out ret pop push out or and mov dec jge adc lahf mov imul pop mov pop adc movsl push sub (bad) mov jnp or mov sarb test les stos mov (bad) retw sbb fdivrl iret sahf mov or test jmp ss ret pop lods or jno cmp or jmp dec cmp cwtl inc aas dec pusha (bad) cmpsb call out imul xor fistl or xchg mov divb sbb fcompl lret ss mov add jae (bad) jne lcall mov cli mov popa gs mov cmp xor lock mov cmp inc xor pop jmp cltd stc mov sbb add add es inc jns or (bad) push adc fldcw enter mov shl pop scas or cmp mov loop mov dec (bad) fwait lret daa mov inc hlt mov sub or inc pusha push mov and in test arpl loop stos xor dec fs mov fdivl pop arpl mov push mov or cmp xchg sbb sub mov test sub inc xorl pop sub push xchg push xlat add hlt push add in or mov std (bad) xchg push fcoms scas divl bound xor jb mov and jge pop fsubl mov mov stc pop adc into iret sub std push aam push and call and mov or xchg mov xchg js inc mov cs inc stos jmp test rcll aaa cld or dec outsb test sbb pop mov lock xchg xchg sarb rolb (bad) mov cwtl ja jbe mov sbb fdivl sub sub test dec int3 xchg inc push dec dec cs test jmp aas add enter adc dec xchg add pop mov push lock loop inc xor push jge imul cs push lahf adc or negl es jno dec lret add jp outsb jo fiaddl dec aam sub (bad) mov aam stos movsb repnz aas jmp arpl push xor mov iret call jl jb mov repnz outsl scas lods out xchg xchg rcll negb test and iret push push out insb out fdivs (bad) std out sbb xor repz pop adc jecxz ja test xchg aad jne xchg add popfw in xor mov je adc push inc sub dec inc mov insb or shr call int push cltd lret add or enter addr16 lret sbb (bad) dec fs push out outsl adc xlat cmp js pop cltd add cmp repz xor addr16 dec or rcll sub or mov iret (bad) (bad) dec nop imul jo mov popf sub xlat push int3 jl push (bad) bound leave xor movsb in test pop mov sub jb aad push and pop aas push xchg mov in xchg sub imul out imul cmp mov insl (bad) push pop dec sub add push add out insl mov cmp data16 jbe xchg xor scas rcl adc sub pop adc data16 outsl sbb negl push adc lods cmp out or cmp mov add xor jae mov mov or daa adc cwtl (bad) sub (bad) jae xchg test jno cs int3 scas cmpsl push (bad) xor jmp and add jecxz mov leave xlat dec pop mov nop (bad) jge or or fdivr jnp subl cltd inc mov loopne pop push lcall xchg xchg stos addl iret stos pop mov cwtl sbb inc add sarb and lret test dec mov fstpt stos je add add dec mov jl jmp cmc rclb lock negl (bad) loopne xchg sbb mov sbb mov fistpll mov jl add pop dec cli jae sbb cwtl jp imul push lock pop aaa mov jl (bad) mov testl and movsl lahf mov ljmp inc xor out je (bad) out inc pop (bad) lock sti pop dec int cmpsb fcmovu sbb push sub shrl sti cmp jge adc cmpsb pop sub xor lahf cmp or (bad) adc into sbb pushf test outsl jne int3 push inc insl xchg sahf lods divl (bad) mov or jle add pop push mov cmpsl and int lcall mov addr16 adc xor dec fmul fldcw or or ret lret mov into xor push jecxz addr16 jl mov scas test movsl nop jb,pn lahf mov cmp test dec je imul xchg xchg mov xchg push jg fidiv lcall jns popf push jp lcall jno bound icebp aaa popa movsl xchg je icebp adc dec fst pop xchg ja sub dec je bound mov jmp stos jae sbb xchg outsl sub cltd pop add sub ret push inc mov pushf pop xor std rcr sub xchg (bad) xchg push jge ja pop shl dec pop popa gs pop repz sub cli std (bad) mov rclb xchg mov mov test inc mov push pop mov mov decl lods adc outsl xchg (bad) in cmp push cmp lahf mov sahf jecxz in xlat gs fidivl jno inc cld jne push mov testb fimull adc and cld sub jns test jnp ret jp pushf out mov pop mov ficompl mov jno mov mov sub sub push mov test jnp cmpl and sti push ret jmp push cmpsb sarl dec fwait loope push addr16 cmp adc mov xchg aas out sub loop cmp mov pop jecxz xor sahf mov pop add and icebp daa ja test pop movsl xchg mov fcoms pop int jle jecxz sti cwtl aaa sti stos repz pop cmp mov sbb cmc les jle pop shrl add jecxz jl mov cld dec xor pusha xchg sub xor fs sub aaa add adc enter daa out out std jle rcll imulb xor add and adc push packssdw xchg lret and notl mov ljmp subl pop ficompl or xchg cmc ljmp stos jnp std (bad) mov rorl add inc test add dec jnp mov dec jno aaa rcll push stos pusha push push and inc add pop repz nop out (bad) cmp stos push inc mov inc shrl (bad) out push data16 shl or mov les mov sbb in mov cmp popa sarb mov mov jmp jo bswap add mov push sbb je mov aaa data16 loope dec leave or dec mov mov ret xrelease xor add xchg add pop not andl test imull dec lret inc cmp (bad) idivb loop cmpl fstpt lods cmp lret lahf push je std pop addr16 pop push mov bound test scas jle enter outsb cmp stos adc mov outsb fwait pop scas repnz nop dec fsts mov jmp lods jo push int3 into fild fwait aam mov cmp mov sbb mov cmpsl (bad) adc push cmp imul inc push int seto inc xchg stos jle add arpl fist shll in rolb dec inc popf jnp sub push movsb pop push dec sbb xor mov out cld in inc insb mov das pop in je into pop imul xor ljmp or scas outsb lret sbb addl and adc rcll repnz into orl push scas jno jns cmp lock icebp dec popa aad dec sahf cs push pusha lods pushf mov mov sbb mov std xchg mov adcl test jmp stos cmpsl mov mov stos int3 inc xor mov bt lea mov int mov fisttpll mov lret imul sub lock aaa lret (bad) lret in mov aam jne int add pop mov sbb idiv xchg pop jbe push fcmovne aam (bad) mov test les scas sbb dec adc outsl leave inc test or and cmp sub inc xor insb sbb cmpb out adc fsubrs lret pusha mov mov xor loope mov mov and popf mov call ficoml or dec jne stc dec mov daa push pusha cltd xor fucomi cltd popf rolb xor mov inc jo push pop imul add mov adc cmp pavgb ds jge mov les cmp jns je notb or mov call push sbb (bad) xchg xlat dec cmp fs mov loopne movsb jg or mov mov xor mov loope aad cmpl push xchg roll push lods dec jnp mov adcl push fbld mov mov fistp (bad) jb jl cltd jge mov mov ljmp inc mov cmp xchg jnp aaa mov lahf aaa dec imul lods aaa inc xchg jle inc jp push lret mov sbb movsb pop dec imul gs push ss outsl in push sbb icebp inc shr xor add aad cltd lock cmpsb adc jl pop addr16 dec xchg sbb or mov xlat pop bound sbb mov out sub sahf jg mov std (bad) jno mov add xlat or mov xlat push push insb inc xchg dec cli loopne popf (bad) and lds lahf fwait or pop mov jle addps bound (bad) cmp and push or cmp das dec in inc out inc rcrl dec leave or mov sub cmpsl jmp aam (bad) jg test jnp cmp inc test sbb ljmp push inc sbb pop bound push mov pop xorl lretw fdivrp xchg fwait out mov jae mov and or out mov andl mov mov lret xchg sub into mov push mov sbb mov cmp sub sub fcmovnb movsl loopne xor cmp dec sbb ret jb push mov jl xchg popf iret rorb add fs cmp xchg sub mov loop mov xor jbe cmc icebp push mov outsl out aad fisubl mov inc sub lock xchg inc sub (bad) jl pushf jns adc fsubs sahf sub je mov lea add mov pop xchg and cmp (bad) (bad) icebp adc lds lds data16 rcrb scas ljmp inc sbb push leave movsb stos rcr (bad) push push pusha ret cmp or or push lods pushf (bad) inc sub stos out sahf cwtl ljmp jmp pushf sub rclb test xor sub mov cs or add lods push mov adc sub outsb cmpsb (bad) cltd cs rcrl xchg ficomp (bad) xor lret lods mov mov dec in aaa mov mov mov xor sbb dec push inc pop mov xchg repz mov jle incb mov push push and (bad) loopne test mov jb cwtl pushf xor jle and add cltd mov imul in inc aas inc jecxz pop xchg fsubrs lods int les pop jl dec sbb fucomip mov jnp int jns jb inc adc int3 inc (bad) fiadd mov mov outsl in xchg dec adc push jmp in mov add mov or cmp imul push xlat movsb sbb call es inc inc loop inc mov das (bad) and jo jge imul out mov push stos in int3 (bad) push call outsb addl push stos mov xorl dec xor xlat pop cli sbb pop jae shlw push daa aaa lock fcmovbe ret pop ja fiadd pop (bad) ds or dec or or leave arpl pop adc outsb mov sub lcall dec js or loope cmp fsubrs adc adc jmp cs mov mov pop cmp repz add sbb pop mov popa subl fisttpl aad fbstp push push lcall repz fidivrl xchg or push xchg div leave xchg imul sub pop sarb mov cld mov dec rorl and mov ds cmpsb arpl adc add negl inc dec inc inc push mov sbb or cmpsl loopne arpl test fidiv inc and jmp cmp pop (bad) ljmp xor mov aad out pop pop pop cli adcl mov inc xorb iret jg aaa aas mov mov jns xor dec int ficoml sub sbb and fidivl neg test mov lock lea xor sarl xchg pop cmpsl push fmull in inc mov lcall adc iret adc and jecxz repz jmp mov outsl push jle and mov mov outsb jl arpl lret clc dec sub mov insb mov sbb mov hlt xor xchg inc adc pusha adc pop mov push and jl (bad) sub lret fcmovnbe (bad) pop push push int mov pop pop dec jle jns lret repnz and xchg mull sub repnz (bad) fcompl fisubrl and and testl loopne fildl pop ficoml nop bswap aas push fldenv mov or mov push mov jg ret arpl ror mov or repz hlt inc dec add jge lcall (bad) or pop lock pusha xchg out sahf in jecxz les sbb leave fdivrl leave lret sarl arpl aaa pop shlb jns js movsl cmpsl jbe pop ja xchg cmp cmp pop mov popa rol dec mov dec mov pop jnp or jo inc rol xor clc loope (bad) pop inc mov inc shlb imul fcoms int3 roll or xor cmc stos inc inc xchg repnz add les aam (bad) fmulp das insl mov loop jns fwait mov test iret dec mov mov sbb dec das lret mov pop inc adc das xor jmp xor jbe ret sub xor leave icebp mov xor fist inc mov rcr stc mov or lods lock pop imul cmpsb imul lahf in dec cld les push inc loopne dec out fbld mov and xor inc mov cli ja push hlt dec cmp pop mov je push inc lahf sub sahf cld xor scas fimull stc clc aam int mov cs inc cmp add inc outsl loopne cmpsb call sub (bad) in xchg stos lods mov in popa adc cwtl push lahf sbb (bad) std mov fsub divb push dec (bad) or or fldl aaa xor xor xor cmc outsl in cwtl cld xor fstps xlat loope sbb xor xchg data16 stc xorb call movsb lret jae xchg roll push sub shl (bad) movsb cmp imul mov xchg push lcall gs push cltd das iret push ja sti pop jg into jbe testl and cltd mov rorl mov outsl in add lds xchg xchg (bad) mov dec imul push insl icebp dec sub mov test aas dec into xor adc popf or inc or (bad) cli cltd ss stc neg xor dec es pop sahf adc or psrlw movsb dec mov sub fwait adcl js add and nopl nop clc je outsl pusha adc jbe dec int3 es cs cld jbe outsl add loope (bad) mov fisttpl es inc xchg popf (bad) jmp insb mov mov jnp pop push lock fsubl lods stc jb call push adc imul sub cmp push leave mov cmp inc lods xchg inc in pop or xor sub fidivl inc mov jbe lock pushf jge aad and popaw sbb mov loopne cmpsl aaa jmp sub loopne icebp mov sbbb pop dec aaa push test mov mov mov repz cmp scas jecxz popa lds mov and add insl xor into repnz lret sub mov loopne or xchg das push jg sub test pushf cmp jmp out out leave mov xor test aaa popf in adc arpl out std mov (bad) imul sarl popf sub xor xchg loop cmp inc into pop loop clc mov jecxz jl lds cmp or and popf jns in mov push hlt repnz xor mov mov out sub and xchg mov xchg pushf mov jbe lea pop (bad) aad andb mov (bad) mov sub (bad) cmpsl mov jg mov xor (bad) or bnd imul or rolb sub test pop imul push mov or je mov lahf cmp rorl in ficomp loope out in stos push imul pop cmpsl imul mov pusha subl cmp inc pushf jbe or inc int3 inc xchg (bad) inc dec push fwait xlat xchg std sub xchg scas loope repnz jmp mov insl inc (bad) rcr insb mov outsl rcll hlt mov xchg push sbb inc icebp roll xlat repz out xor push sbb shr mov adc push fidivr inc mov insb iret out insb xchg ljmp rorb jg sarl push pop xor call jl popa push hlt popf les vmovsd jno xchg push xchg int3 lea jp sarl adc movsl cmp rol dec adc inc pop xor (bad) and mov out shrl push popf mov stos jb adc dec cmc sub fldcw mov sub pop push daa add push lret push std aam mov pop mov fdivs pop or mov xchg arpl loopne fistl popf movsb aaa dec sbb (bad) xchg decb in icebp cmp pop gs jmp daa into aas adc dec in push adc (bad) push and adc nop fstl push adc popa sbb pusha jle push scas push dec sets xchg xor inc xlat cld popf and sub test and jb mov or das mov and aam xor sub xchg xchg xchg hlt lods sub daa repz rcl inc jb sub ret sub dec and aad sbb add xchg sub sub adc test pop daa mov pop add and pusha xchg add mov jmp sbb out outsl xchg negl (bad) (bad) cli fisttp push inc lds mov adc fwait test hlt (bad) cli (bad) jb movsb (bad) in sub aad test insl cld (bad) xchg xor push pop push test hlt pop sbb adc cmp (bad) bound xchg icebp sahf bound sbbb mov bound pushf clc jbe push pop sbb push mov jp mov lret mov add xor verw push out leave jmp pop fwait icebp insb sub xor (bad) insb xchg inc lea lods mov fldenv jl inc xchg push lret test cmp or into sub push in push push mov rorb mov pop lods xor cltd pop outsl movsb (bad) clc pusha xchg and mov lods movsl ljmp pop inc pop pop mov cwtl or xchg sbb outsb pop imulb mov adc and nop pop rcll xor ljmp hlt repnz aad les xor ret mov imul push mov and sbb aaa add mov leave ret xchg cmp in mov xchg inc test mov xor jp stc add inc mov sbb (bad) lret sbb pop data16 aas sbb cmpl outsb jbe jg mov loopne cmp int out sbb mov js dec push pop cmp xor or data16 or scas imul adc mov iret cmpsl lds cmc xor fldenv push hlt jb push pop and cmp (bad) std or ret jno pop xchg or dec adc and or or hlt outsl stc mov loopne dec push scas cmp clc jle lock imulb inc mov inc xchg stc inc dec cmp dec jbe (bad) or add lock sbb xchg stos icebp cwtl cmpl mov int3 xchg test loope jo mov jae jg repnz (bad) fld mov mov (bad) mov sti and sub inc leave ljmp sub test push test andl cmpsl cmp dec pushf jbe adc cmp or adc xchg push lods js mov ss hlt rclb test push jmp mull push mov jnp ret xchg clc fstpl fsubrs fwait and sub repnz cmp int3 push adc lret cmp lcall adcb push pushf pushfw out iret jmp mov enter sbb arpl push in es aaa arpl mov cmp add adc xchg adc jo in sbb sbb xchg (bad) addr16 push lcall lds (bad) out sub in mov jbe pop xchg (bad) or cmp mov adc mov les cli mov (bad) jae xchg test les fidivl add jge aaa jle xor add add xchg mov (bad) push iret mov inc sub lods cld ds ret sarl rolb cmp inc lcall xchg movsl jle mov adc xchg clc scas pop or inc adc cmp fistp dec dec inc lods jne xchg jb imul andl push pusha orl jns add js ja cld icebp (bad) jg daa imul mov sbb inc mov lods mov mov fimull mov xchg imul mov fwait outsl jnp mov cmp (bad) ret aad out sub xor inc adcl mov sub fldcw jmp es cmp add aad shlb hlt cmp sub pop mov int3 push lahf or shrl loope pop adcl outsb jae hlt cmp aaa inc lea les lods push push out or int rclb push jle cltd and orb cmp adc or inc xchg test cmp mov out and mov in push leave inc mov leave mov js fs push out mov jmp mov (bad) repnz cwtl (bad) dec pop insb mov notb xchg fcoms add mov mov (bad) ljmp outsb jb cli ja pop cmp int aad mov fnstcw adc loopne fdiv cmpsb pop sbbl popf fwait lds pop jnp idivb add xchg repz mov dec xor fidivr pop ljmp mov js dec sub xorl mov xlat inc cltd sbb jmp push aam enter faddp repnz mov dec xchg push icebp push push out ja push and scas mov (bad) pop imul push pop sbb fildl mov sarl leave add imul or xor (bad) push or lock jg inc mov repz adc dec pusha cmc sbb and bound add cld dec adc jns mov pop mov cli xchg mov or xchg out popa mov adc outsb (bad) lcall hlt pushf popa lock jecxz lret mov add test sbb mov mov je int3 insb adc cmp (bad) scas loopne push enter je prefetch imul enter test mov and les rorl or push (bad) loopne (bad) fist iret (bad) mov inc aam in cmpsb test test inc das adc mov mov dec dec imul sub mov imul inc int3 bound div test mov test es pop in jnp mov pop sub add or push jp loop sub and mov dec ljmp (bad) pextrw mov lret push cmp push jbe pop pop cmc and xchg adc xchg fldcw mov outsb loop fidiv push push arpl pop cmp xlat dec xor adc clc pop or jecxz pop bound out xchg jmp pop rorl pop xchg sub xor push (bad) push movsb stos repnz and pop or xor push inc xchg pop (bad) push sbb adc shr and imul hlt pop es stos jg add sbb pop out sub stos jbe add add xor adc arpl sahf fsubrl (bad) pop add mov and repnz arpl arpl mov xchg mov inc sbbl mov sub mov mov orps out movsl cmp jae adc add push mov xchg rcll cmp mov xlat xchg jne mov ret xlat out popf fldl jl mov sub dec pop xchg cmc mov int3 in daa or pop xor aas ud1 jno data16 ss xchg and lods xchg adc lea or jp jae sbb ljmp cmc cmp mov and or sbbl cmp dec sti call pop sub stc sbb or icebp xor negl dec mov js inc inc mov in xchg jb inc add fcoml cmp or sti sti dec cmpl es xlat xchg (bad) cmp and xlat sub mov test jae,pn ja (bad) fnstcw mov jne mov adc test push xchg mov lret idivb jmp cmp or mov in jno jmp popf jmp xchg cli cmp add cld in cwtl mov cs pop fcoml ret (bad) fistl mov mov movsb mov inc push out mov dec or dec add (bad) je xchg jg dec sub adc movsb into ret mov xor jne into push fwait cmp imul rep mov test mov or or and ja sub data16 insl shr mov cwtl jl lock xor in adc pop testb in int3 hlt ds bound cmp out int3 cli or repnz mov js or cmc test (bad) in cld dec mov cmpsb cltd insl bound lcall mov in faddl mov ret aad out add imul or push cli lret mov mov inc js jmp stc pop cli pop add xlat pop push mov dec sub jl inc add jmp cmc jno sbb pop jb lahf (bad) sub sub ljmp mov dec daa (bad) mov xor insl mov daa xlat mov fistp xchg mov adc stos lods fmull push leave jae mov aas or push mov fsubrl lea in mov push cmp xchg mov add jo cltd inc shlb sub aaa mov add push popf pop mov adc ret mov push (bad) inc fcmovbe lahf mov sbb xor mov nop xor jns push (bad) xchg repnz daa jnp adc enter xor int3 clc add or test addr16 push cmp sbbl and or add sbb in test lods (bad) cli inc (bad) mov data16 push cwtl xor xor popa mov idivb imul (bad) repnz cmp sub out in inc roll and lcall out jmp push lock inc nop movsl mov das xchg mov test (bad) dec inc loope fistl or cli cs jg and lahf es push ret notb int daa lahf (bad) mov and jmp mov sbb (bad) icebp pop mov loop add pop nop fisubrl scas push jle out push sub mov sub aaa daa or xor push ljmp pop xor pop sub (bad) mov adc (bad) icebp push and xor pop pop notb sbb xor leave dec push int3 add add lock scas mov and xor xor jg mov loop add and andps adc pop lcall insb pop leave arpl sbb cli push add push addr16 gs push test popa rclb push outsl fiaddl inc add push mov mov push mov cld cltd push jne mov in loop negl pop mov lahf pushf cwtl cmp push mov sub popa (bad) sarl pop cwtl fistl jmp int3 int3 js cmpsl sub arpl fidivl ret push (bad) jmp dec lahf dec in frstor push cli xchg popa leave fild out out pushl xlat jb push push pop xor mov push stc mov movsl cmp inc sub mov mov pop leave scas ss mov daa out inc push adc test xchg movsl (bad) jmp js jmp adc std sub jns stos pop jmp das inc jecxz lcall sub (bad) out mov mov pop ret lods adc add cld mov or jge (bad) repnz aas adc ds mov ret sub outsl loope cld jmp (bad) ret gs or (bad) mov addr16 sti fdivrs (bad) sarb insl fwait mov push adc xor adc hlt (bad) fidivl nop cltd shll or cwtl rcll shrl ret daa aaa inc adc mov sbb sub push mov xor or mov mov push sub push jg xor mulb incb repnz leave (bad) mov fldt cmp lret mov inc pop and les fld pop dec daa add add (bad) mov outsl cltd inc pushf pushf dec icebp add add xor sbb lret loopne mov push inc test pop mov cmp stos add mov sub fcomps js and push js mov push xchg repnz movsl addr16 jb in pop and outsl push add test xor repz out mov sub lret sub mov jle sbb lret loop mov jmp sbb push xchg inc (bad) cmovnp imul mov fs (bad) push or adc call (bad) fnstsw clc sbb sbb lahf bnd mov fnstenv fwait mov fldcw popf stc dec outsb lods pusha mov add lahf lcall (bad) in cld cmp xor pusha fisttpll fbstp push clc les sub int into test pop xor push inc mov mov (bad) or xchg popf push xchg pop and xchg ljmp bound repnz push dec rclb cltd jne mov pop loop mov pshufw rorl mov in cltd mov push mov ljmp mov jp dec jae cld mov es mov popf pop push rcll inc add sbb jmp jns fs jl sahf dec add roll shl dec arpl xor mov dec aaa xchg int loope mov fisubl mov sub loope pop jmp xchg mov in or cs es fcmovb addl cltd fisubrl dec pop cs dec mov ljmp outsb push mov pushf dec js jp sub mov seto dec pop aad mov dec je jmp or and mov sbb pusha cmp and js push (bad) mov push push ror jb mov mov in mov repnz mov gs (bad) dec outsl lods pop shld shll int inc call jmp xchg push lret pop mul jo imul push dec repnz sub (bad) jae mov out mov gs pop out inc fstps add mov sbb and xor lea fs add fiaddl xchg sub sbb mov dec movsb shrl pop adc fs cltd aaa sbb sbb dec sbb push arpl jbe fmull fcomps jbe add dec movsl nop dec daa xchg dec sub fwait shlb pop sbb je stos (bad) xchg bound or insl repnz mov cmp jae mov stos test pop sbb call ficoml (bad) insb jo adc addr16 leave mov pop jbe xor inc mov mov leave xchg or (bad) out fisubl jle int popa jbe mov and add int3 fsts testb leave xlat mov push push xchg sahf es xchg fimull js sbb int3 xor sbb xor test jp insl cmp cmp dec data16 mov add call adc inc dec stc ljmp sub aas (bad) mov pop mov ret cmc and jnp fmul dec xchg lret imul xchg lret outsb leave mov imul outsb rcrl jae xchg (bad) fmull jns lret stos das es xor arpl (bad) out aam mov mov and jg mov sbb sub mov cli or cltd add push xchg xlat inc popf push mov cmp incb mov xor inc jne xor hlt lea inc outsb sub inc bound stos (bad) popf adc mov adc popa cmp adc cmp clc and push enter (bad) out out sbb sbb push cwtl add mov and adc jge jle out insl cmp (bad) jbe jnp test js adc jp mov pop add mov cmc aaa lds or dec push cli addl cmp das repz aas adc mov pop push xchg fiadd fs in dec xchg cmp (bad) cmp je (bad) pushf call leave cmp xor gs bound fwait mov adc mov scas or adc cld jle dec mov cwtl out jl das mov and jb fwait sbb icebp and mov sub (bad) mov and add movb mov pop test sbb sbb or in ret cltd pop leave mov cwtl pop jns xchg cld inc addr16 inc mov mov aaa ret add test data16 (bad) mull cmp movsl (bad) jb sbb mov jg cmc push jge into outsb mov mov sbb mov aad and pop outsb nop imull repz adc jb les lock mov arpl loope push sbb pop test decb popf icebp mov xchg jno adc test cmp es bound iret jne pushf sbb lods lret pop ret out jp sub pop inc fidivl xor mov hlt clc dec adc sub aad aad mov xor ds sti ljmp cmp arpl lods cmp lods hlt cmp ljmp pusha js jecxz mov inc outsb jl mov outsb hlt aas fistl (bad) dec jno dec (bad) out clc inc outsl dec mov jmp mov fs mov bound loope pop iret xor insl push push mov inc ret xor cs pop adc push mov ja out add jl dec push xor int iret decl jne and in mov fsincos loope bound jne sub andb dec divl lock orb push xor or push out dec jb lods dec xchg jnp into dec jne jae test jae cmpsb xor add out mov adc mov jge sbb clc and in dec popa xor repnz pop into je add icebp xchg dec mov xchg add pop aad (bad) mov xor jecxz fild push pop into in lcall jne cltd jb pcmpgtb fwait rol adc or xor push lea mov and scas decl push stos mov loop and fmull repnz jbe fiaddl xor push push sub pop pushf sub (bad) inc stos sarl ljmp leave xor mov sub or inc and push (bad) fstps insb sahf cmpsl fsubrl xchg lret adc push jbe repz dec int (bad) push add push mov lret pusha add mov and bound (bad) aas aam loopne mov sti adc fdivs jbe xchg cmpsl (bad) mov sub mov bound ret sbb lods mov inc inc into (bad) (bad) fbld xchg notb les xchg addl jmp jg jg add inc add pop mov jle jns movsb cmp cmp sti movl pusha popf adc dec inc inc and lahf sbb dec and add dec cmp lods test or scas and dec in push dec pop fidivrl mov bound jns sbb fcompl mov out cmp mov out or (bad) and adc mov out and ret stos (bad) jg sbb xor and test mov xor jg jbe sahf mov lcall mov dec xlat mov jle cmpsb lods faddl js fldenv and lret and stos repz xor mov mov or in push mov out jle movsl lahf stos roll add fldenv aas dec push test mov cmpsb gs push mov pusha mov hlt adcl ficompl sub mov or push lds jecxz rclb and and dec add push jmp jp mov mov popa add aad rcrb lret nop push add inc fstpt sbb mov xlat sbb mov inc xor sbb arpl inc cmpsl inc and or lods xor lret imul cmc loopne mov mov add pop lahf sbbl ret cmp cmp mov test dec mov inc or xchg mov sub daa dec sahf sub add add loopne jo (bad) cmp xchg xor jns inc sbb jmp jge out int3 cltd mov xchg pop fldl (bad) mov pop gs adc lds mov inc outsl and dec xchg xchg testl sbb xor mov pop mov movsl xchg aam adc stos sahf repz imul push cli rcll dec xor (bad) push or adc cmp pop iret fsubs sub xor stc andb and negl pop fs cmp lahf and adc adc lahf xor pop aas iret pop test iret js inc in fsubs sbbb loop pushf arpl lcall dec jge ror adc mov in jecxz outsb aad add out aas mov sbb mov ljmp pop xchg jmp and dec xchg out mov mov xor (bad) mov pop ficoml and test fmull push jno xlat xor cli xor sahf outsb cmpsb insb lods dec les out adc mov imul cld lods (bad) gs ja jnp stc loop movsl js pop add test xchg jo fmuls imul jne adc aad and jae popf sub mov jne test mov (bad) lcall je lret mov push cmp insb (bad) das mov xchg xchg jb adc sbb sahf pop mov repz insb adc mov rorb xchg clc in std xchg scas dec rorb mov std loop cmpsb fild xor jp dec aaa stos arpl mov lods xchg mov xchg das xchg xchg mov push leave mov push leave mov insb aam jne (bad) mov (bad) mov adc adc or jl push gs int std leave or sub jecxz cmpsl in mov jnp std repnz arpl lcall add std mov jbe or addl test cmpsb lea shlb ret sarl cmpl (bad) fild mov push fildll pop aas sbb adc outsl push stc adc xchg cmp jnp sub test addr16 fxch jnp jb hlt mov dec leave int sub push fistp mov cmp inc cmp push enter (bad) mov add xorb push inc mov jg sbb cmp mov and (bad) sub push notl imul sti sub or cmp sub (bad) or cs add roll cmp std repz pop xorl fsubl mov xor sub sbbb jg popf cmp or push mov sub jg movsl scas adc repz xchg cmc push mov inc stos pop fstpl push clc inc mov negl bswap sub fs insl cmp test sub icebp dec loopne ja xor inc cmp shl xchg stos pop movsb aad dec mov push (bad) push rclb xchg ljmp sub addl push cmp leave outsb lea (bad) xchg lds mov sub fs lret movhps out jmp cmp and inc test dec xchg xor add mov inc lcall aam mov mov inc or xor push adc or add or cmp xlat pop ficomp cmp xorb addr16 mov mov das xchg movsl ret int3 repz mov jne es es xchg ds fidiv sbb or push aad sbb add mov dec mov cltd mov adc add test icebp lock cltd dec pop cs mov jp mov sti and fdivs jno push and daa inc sub test add nop sbb mov fs std loopne,pn xchg jg xlat bound jecxz cmp xor popf addr16 and adc addr16 cmp addr16 mov xchg inc sub mov inc and lods outsl lret roll mov dec subl cmc sbb imulb inc pop mov pop pop jge jle je shl stos push mov mov adc xchg cmp test fisubr and and ffreep fdiv mov xchg arpl lea push ret shrb ret fcoms mov cltd repnz in cmp cmpsl (bad) int and subl push movsl mov out mov mov sahf mov lea dec daa lret pusha je or loope sbb push test fdiv bound pop stos pop aam add data16 mov loope xchg xor test ret je xchg push jecxz fwait imulb xchg xor insl dec jge inc ljmp stc push push into mov repz and push les repz popa ss bound fsub mov pop ja dec or inc loop sbb cmp ret stc sub jg dec adc fisub sbb ds je add inc addr16 sbb outsb in cmpsl pop pop sahf imul sbb xor test or inc in inc popf push mov adc ds xchg (bad) push mov stos sahf mov pop negl dec jne jns xor mov stos jbe,pt mov adc jmp adc sarl add sbb aad mov insl popf nop jae xlat push push in es xor inc std cltd sbb xchg mov pop out mov push inc lcall cmp sbb or lods jo loopne nop ret sub hlt pop repnz lock mov sub shrl fstl push outsl dec imul push mov dec push adc cli mov jo leave mov xchg adcl pop lds sub insb (bad) mull sub (bad) cmp pop jle (bad) in js adc or or add lock mov mov ret loopne,pn in fldt imul and jnp les lods daa dec enter mov inc insl push lret dec cmp fsubrs mov lret mov (bad) xor push lock sub gs or dec xor and xor mov xorl fldt js (bad) mov addr16 cltd jb test insl push adc in out add jb cmpsl cltd push mov in fs dec xor inc jecxz push xchg and pusha jns lea pop push add mov cmp repz bound jmp mov add and int3 sysenter and lods dec fdivrl sbb into inc jns push sar jnp mov sub push inc (bad) xor adc les push repnz inc out jmp loop jl test adc mov out add mov xchg adc push mov or cwtl cmp movsl arpl dec outsl aaa insl decb test fcoml xchg or dec add dec cmpsb and mov (bad) jo sbb cmp ret dec jbe mov add stos nop and das sbb cmpsl and dec add aam lahf and xchg ds or adc mov icebp mov jno arpl (bad) xor lods lret pop and cmpsl (bad) push (bad) out insb sub pop jle or call nop iret fyl2xp1 das push hlt push adc sub in imul mov jns call mov or push dec sub xchg movsb xchg loopne add cmp push cmp inc ds jnp sub mov in clc cld or jle jl out cmp push arpl sarl imul mov scas iret jp inc and jns (bad) xchg dec hlt das pop mov mov jbe mov fild popa jnp or in (bad) and hlt sti sub pop icebp lock cmp xor xchg clc dec pusha xchg insb je or push sub mov imul adc sbb loop out ss lea mov dec insl loop sahf enter je dec cmp sbb mov scas dec sub stos push mov pop (bad) xor and xor and xchg and movsb xor add push xchg int push push sahf test push (bad) test pop inc push sub repnz mov shl push lock cmpsb popf mov das dec mov add fisub repnz cmp cltd push mov mov push aaa or (bad) ds push mov imul push mov mov shrb xor inc mov (bad) cld mov or sahf mov scas xchg cmpsl pop outsb movsl mov je lahf popa outsl adc jae sbbl pop insl icebp mov rcrl data16 adc clc int3 dec fimull mov rorb les lods leave dec fimul mov mov mov je jno jne test push mov int3 out aad mov and mov pop hlt test cmp mov stos lret or fwait push lea inc push fstl fwait sub in out cs in mov mov idivl js call or push test je test sbb shrb outsl adc cmp pop jp hlt mov xchg hlt nop scas pushf pushf and rcll add xchg out pop (bad) jb int3 mov data16 imul lods test add inc mov xchg xchg je out sub jne adc mov lea mov mov lcall pop push rcr adc into mov loope (bad) jne cmp sahf add jno cld popf stc into orl ljmp and cmp push sahf fucomip jmp xchg adc jle gs clc mov in adc movsl push shrb aad shr insl sbb scas jb xor or into (bad) mov add loopne mov aad daa sbb sub stos sub dec js or dec into cwtl xor call add movsb mov cmp and arpl or test rcr enter (bad) cmp dec lods iret lret sub aam cwtl lods cmpsb rcl call sbb inc inc pop fcomps xor push inc xchg orl sbb xchg jns (bad) jns in (bad) test xchg enter xorl dec mov js lock add shl push ficom mov mov rcrl fmuls mov pop xchg nop js sub fild sbb mov outsb mov add mov (bad) addb mov pop lcall push mov int3 xor push clc rcll dec (bad) pushf push and mov into add push outsb push xchg int3 mov ds insl adc lea mov (bad) mov push or dec jecxz jbe mov pusha pop mov or sbb (bad) mov cld lahf cltd push sub pop (bad) jne cmpsl cmp sub xchg and sbb adc xchg jb lods rclb cmp aad mov aam repnz daa (bad) mov sbb pop loopne jae xchg sub cwtl sbb (bad) leave add pop and cmpsb inc or xor pop orb sti (bad) sub sbb mov mov fisttpl (bad) in xchg xor jmp mov insl rcl subl dec ret popf sbb inc aad cwtl or jne leave mov mov or fadds jno adc jno pop mov jae dec stos popa adc or inc out dec test cs out addr16 imulb icebp iret call mov xor movb jno mov pushf pop js fsubrs stc (bad) add push and sbb dec mov pop and in mov add mov and pop jb mov insb loope repz cmp (bad) and sub xchg shrb xor jmp pop jmp out test test sbb lods in in jae popf jg pop iret adc sbb and push movsb fs cs pop xchg mov jnp sub repz xlat mov movsl sbb (bad) jg lahf mov loop and ds mov ds lret (bad) fwait into fistl insl mov mov adc call es rorb clc pop adc or test mov cld dec dec dec in lret push and xlat sub rorl xor add sbb les cltd mov ja jne sbb add jp jle jns dec mov stos pop ret lea adc subb xchg dec push and push jge push push jge movsb mov in cltd cltd or das ljmp les daa xlat mov icebp aam xchg xchg enter or xor jmp cmp clc jne pop cwtl jne out jg add add fsubrs or scas or mov aad rolb mov push lds repz or insl aam xor sbb cs xchg adc xchg dec faddl xchg push sub mov mov or insb push popf not xor mov fcmovbe lahf in mov pushf pushf pop fstpl inc mov ror push or insl xchg cltd jmp leave leave insb dec pop push popa fidivr and dec push repz insb fwait inc push rcl mov in sarl mov push push sbb mov outsb ss fadd stc pop pusha xor inc std fdivrs movb int3 aas mov and adc rol add xor sub xor (bad) ss insl cltd test sub add jge incl test xchg les mov movsl add int3 lock shlb fdivs mov popf loopne ret cmp loope repz lret push mov jo cmp mov imul je into mov mov fistl xchg lea (bad) es cmpl mov xchg aaa arpl or bound mov jb test arpl push and repz pop lock je fwait or adc add mov adc mov hlt cmpsb es data16 cwtl pop (bad) out lock jo mov adc mov sub and push sbb je dec lcall popl lret out shrb int3 mov push inc adc call lea mov inc lret out in test out pop jl inc pop dec sbb push movsb xor test icebp cld dec fidivrl xlat out inc inc inc pushl les rolb outsb data16 sbb cwtl push test jmp push xlat or in cmp adcb pop out outsb or xchg loopne cmp pop push jno daa lods adc inc sbb aam cmp insb les and push sti xchg outsb mov jnp sbb or test or out jl pop or rcrl cs loope pushf dec xor in imul int3 cmp cwtl or push mov dec (bad) int3 dec mov ljmp (bad) dec dec (bad) loopne pop inc call les cs imul loop and (bad) and pop cmc adc shrb sub adc int mov sbb push loop test push mov jbe lret lea xchg in or dec in test adc add cld mov lods sbb xor pop leave xchg dec (bad) dec mov movsb call cmpsb bound cmp (bad) movsl lahf clc test insb scas call stos std sahf popa stos jnp test cs sbb mov mov js inc ret movsl les xchg cmpsl dec sahf jae,pt insl push mov adc fstpt push xor xchg pop xor (bad) movsl ret iret decl lret loope add ljmp and mov jb xbegin call dec ret or sbb ret push insl jb lret je (bad) pop in sub arpl inc out pop (bad) sbb in jg arpl push xor ja pop cwtl cmp addr16 stc lods (bad) popa adc inc outsl popf sbb dec adc mov push paddb sarb jge push mov cs jb mov xchg pop arpl adc insl mov dec sti movb (bad) (bad) pop ss (bad) mov aam stos cwtl push fsubrs sahf in and shlb test out int mov test cli mov test and or mov jge push pop fwait jno mov mov lahf popa stos repnz pushf (bad) sahf and movsb leave imul gs jp,pn push xchg sbb ficom adc leave call fincstp adc or aad stos cmpsb cli and or cmp mov xchg scas into push lret (bad) shll add subl push in out push cmp fwait std mov test mov sahf cwtl hlt test and mov mov cmp cld mov orb mov into sub mov lds mov (bad) sub xor pop jle push cltd addb test jecxz mov jb xchg mov or test pop (bad) incb aam aam outsl jmp inc js sbb test cmp jmp dec lods cmc icebp inc out into leave inc push add adc push jb or mov (bad) mov rcl mov test cmp loope mov mov (bad) mov xchg cmpsb in shl bound sbb hlt iret aad in std repz add add scas or push (bad) cmpsl inc jnp mov and sub adc xchg push aas leave ror cmp or in adc dec pop js lds xor sub xor shll cmp in in pop adc jns inc int3 adc xchg fnstsw pop jecxz stos addr16 scas xlat ljmp inc xchg in outsl lcall inc and mov lahf scas push push (bad) movsl enter inc ret inc sub bound cmp test sbb mov mov sahf xchg (bad) out repz icebp push fwait dec std adc and in sbb movsl outsb shl in addr16 sub scas movsl in sbb add pop lret mov mov jae ljmp pop sub push int mov in ja cmp push (bad) call mov fimul or gs pusha push fmuls (bad) pushf pop dec (bad) enter in ret xchg jge jnp cmpl pop adc scas or int3 ficompl mov iret mov scas rcrb popa faddl test nop jne pusha nop outsb stos (bad) and int3 inc gs lds mov mov and xchg xchg ljmp push ret out mov test lock fdivr (bad) repnz js xchg pop mov push dec ret das pop pop fwait push in (bad) les subl sbb and xor dec addr16 xlat fildll rcrl and mov ds cli dec insl bound hlt ret (bad) cmp jne (bad) (bad) pusha fwait repz movsb icebp push fwait xlat xchg cmp sub xchg jl jbe cmpsl adc sahf push adc xchg add xchg pushf cmpsb sbb jmp nop popa jb iret rep and das imul aad mov jp jp sub pop add sbb dec adc out shrb outsl mov mov inc decb mov lcall sbb int3 mov (bad) cli mov xchg scas sub iret push inc icebp jp push fadds lahf lret push insl cmp ficoml hlt xor push mov ljmp insb push mov and jl lds dec in push mov gs jge popf push clc inc icebp mov lret leave and jns aad rcrb int fs xchg in xor cmp pushf loop add push sub pushf lock adc shlb and pop aas push xchg mov js and imul or inc jecxz loope lods mov cld gs (bad) movsl add inc dec sahf adc pop push dec pop push push lcall in leave rcrb jl mov outsl fdivrp ds push xchg mov call sub (bad) scas fwait ret orl nop mov mov lods and add push pop cmp xchg js xchg cmp sbb pop sbb leave add jo dec xchg xchg sbb in xchg sbb jb fwait rcrl subb (bad) dec rcr sbb inc add es add mov pop lock add adc roll loopne aad push fsubrs and call cltd xlat adc mov repz push out xchg mov sub imul mov inc jl sbb pushf mov inc out rclb (bad) loop aad fldenv outsl icebp iret loopne dec cld lret stos out pop ds mov or ret negl fsubrp sti test sub cltd rorl repnz jle dec xchg loopne inc adc mov addr16 jle lods rorl xchg test or ljmp jecxz or outsb int fldenv sti inc into movsl lret or sbb pop jge dec pop pusha dec movl jecxz push mov ret scas stc mov cltd test pop mov lcall sub adc insl sbb cwtl fwait int push lret fs jo scas jmp data16 sub add sbb xchg (bad) mov loopne pop clc repnz jae and add fs cs xchg ret repz cs gs and fwait movsl ret (bad) push fbld sarb aam xor push sti inc into dec mov outsb test in push mov (bad) pop int jb cmp add call mov pop dec daa dec dec xchg sbb out rcrb lock mov push jp mov dec fcompl jecxz sub insl insb repz test jo mov lods xchg pop (bad) jl inc insl out add or (bad) mov lods lret push mov lock rol adc (bad) insb aad inc pop pop or outsl out bound rclb lcall adc ljmp xor adc fcmovnb push mov popf lahf cmpsl mov test (bad) lock add mov and pop jle pop xor jg mov or jecxz (bad) fdivs cmp cltd fs xchg and rol pushf jnp push cmp (bad) lock pop insl add int3 or jl push rcll mov ja pop pop pop ljmp push rcrb cltd in aam in push outsb js xchg sub push into jb daa mov sbb enter ret (bad) inc subb fwait (bad) repz sub rcl arpl fidivrl pop sub icebp sti (bad) lahf fdivrl insl lods push pop enter cmp or xchg leave leave dec arpl in (bad) not das imul adc cmp enter add and mov or (bad) cli pop imul lds or xchg lahf fidivrl push shr aad pop int cmpsb test inc (bad) jo mov test xchg (bad) fimul inc rorl mov sbb pop hlt pop and pop mov mov inc lods pop cmpsb mov outsl ret imul call (bad) jne push lds cld jmp adc leave popf rcrb ljmp pushfw mov xor push (bad) sbb ljmp decl int3 add dec cmpsb ret sahf sub sub (bad) xchg or or call pop mov sub pop add adc fwait mov and and or push xor adc (bad) push mov push into xor mov mov xchg push test adc test hlt mov (bad) outsl and add mov cmpsb shll and or jno (bad) add (bad) ljmp rcrb aas sub and or dec xor dec mov add add or inc in xor sub out enter cmc jmp cmpsb add std movl mov add cmpsb dec xor cmpsb dec and add push stc pop mov or int xchg int3 jmp mov arpl xchg icebp xchg sbb rorb inc dec inc jmp mov fist int pop aad mov (bad) sub add push mov jb sbb cli fisttpll fstps adc (bad) mov pushf mov stos lock fnsave xchg jns lds loope sbb loop lahf arpl mov (bad) sub lret inc aad cmpsl mov imul cmp std adc mov aad (bad) jno mov xor int lock mov lds jnp and outsl sub jne sub push insl or in cmp cwtl xor sub jmp pop loop or push imul sub sub popa es in pop push test cmp dec xor das lea and xchg fdivrs movsl loopne es movsl fisttpll arpl dec add fnop or invd jl dec push scas aam (bad) shrl outsb clc cli mov jbe cmp std insl xchg insb aaa sbb test fstl dec movsb outsb xor (bad) repz or pusha in lds incl popa pop lahf jae push adc test iret cmc adc aam mov sub fdivp out cmc popl push sahf cmc or jnp fwait nop cltd jmp ret adc sub push idiv mov adc (bad) push push out fisubr mov fiaddl rcll dec dec or inc loopne into and out pop jns dec rclb shl cmp push loopne push or test jnp call mov js cwtl test iret dec mov sbb push or dec into (bad) pop mov mov sub mov popf inc test (bad) mov popa popf xlat and subl fadds leave adc (bad) fsub jnp je aad push test js jmp pop stos push lcall and (bad) rclb out sbb nop jno push lret js test test mov dec add js call jne jne fisttp rcrl lods sbb add dec jne mov clc sbb mov or jmp pop pop mov gs dec repnz arpl mov out jb add xchg dec repz mov (bad) (bad) add jge loopne inc pop lahf xchg dec sub mov js adc pusha fnstsw mov xchg adc ror lahf notb sbb inc testb rcll ret int3 cmp mov fldenv stc fcmove ret cltd test mov inc sub cwtl ret fwait loop fsts push int dec hlt push ret and aam fnstenv dec mov dec imull adc jns dec iret nop lods adc cmp push mov sbb dec es mov jl insl fdivl cmc cmp xchg das sbb fmul cmc or gs daa lods loop or or inc sarb bound mov flds rorb call out inc pusha xor (bad) xchg jo sub jecxz gs push ss sbb sub cmc rcr mov mov in add and dec xor into scas (bad) stc jecxz or push dec ret fnsave movsb and movsl dec aad rep xchg bound xor scas fist data16 mov sbb inc int3 idiv loop out push (bad) clc inc repnz mov inc xchg test pop mov imul orl aas xchg dec or push pusha and loop addr16 cwtl lret mov arpl jo adc xor mov sbb dec (bad) (bad) cmpsl ret cli jecxz mov (bad) pop xchg push jns stos ror out fs insl popf aam test sbb dec inc lds shrl nop fcoms rcr repnz lds mov fnsave mov jnp jle mov ret push adc or cs lods lock js jo mov xchg jle int3 sub mov into sbb ljmp push mov adc fistp arpl into and cmc xchg push cmp outsb dec in inc pop or push adc cmp outsb mov jbe pop ret and adc mov sbb nop lock mov dec xor add mov (bad) sbb imul push movsb mov stc add ret sub and cmpsb arpl mov insl jo aam sub imul enter lds dec dec stos int ret les pop (bad) int3 cmp (bad) test pop ret xchg mov xchg call mov mov je lret addr16 pop enter rcl mov cwtl or neg call or dec test call inc inc cmpsl in cmp outsb in xchg loop pop pop (bad) shrb fwait mov int lret flds dec fiaddl leave (bad) mov cwtl sub mov mov ljmp fsubr scas inc into lcall int fsubp lcall ror fadds lock in test inc xlat div or dec (bad) in or orb cmp pop iret fdivr sub ret aam orl dec int3 call shlb mov fsub and mov ret call and pop cmp dec cmp pop (bad) in imul push inc lret adc daa pop in xorps fs stos dec jne sbb sub mov jo mov subb sub mov stos lods (bad) sbb fildll sbb dec aad data16 lods int jbe sbbl loop call cmp dec sti fadds sub enter inc dec enter jle lods mov mov cmpsb add stos aad out outsb in lahf lods or cld xchg test inc js push enter pop pop mov cmc pusha mov out sub stos mov add imul fdivrl mov clc imul and in inc fucomp fldenv adc xor sbb pop dec fnstenv sub add out fsubl testl jge test fwait cltd mov iret mov sub dec or cmp jae dec mov test es outsb cli enter or inc lods negb sub test ljmp jae das mov inc inc lds std lods stos add push dec lret into sub or inc in fcmovne mov xor and xchg and and dec push loop inc and lret sbb xchg or jae lods mov jecxz or fldt into loope les xor cmc jle dec mov pop inc sub jnp xchg dec (bad) fcompl (bad) out fisttpll (bad) movsl in in rolb and inc es or or sti sbb xor lret push lods call cmp and inc push mov push sti push add sbb xor iret repnz cmp mov mov and shl loop push push pop test imul icebp popa andl pop lods popa mov scas lcall icebp loope adc rcll ljmp add dec and loope push and fisttpll (bad) lret repnz jmp xchg hlt jl mov jecxz jbe mov pusha xchg shrl pop insl mov lods test jmp xchg push outsb rcrb or inc sbb inc cmp nop into pusha cmpsl pop jne adc dec mov (bad) ja lahf cli test (bad) xchg das dec jae (bad) xor add mov sbb jb into xchg jmp lcall in fist dec dec xchg inc mov call outsl ror add imul dec cs jbe fadds push jp sub pop dec cmpsb sbb mov sub pusha jbe bound sahf dec xchg xchg aad mov xchg out pop lock jb mov imul ds and dec dec call ss xor aas ja or add ret add lds in (bad) inc push insl outsl fistl jno or lods out jb and mov (bad) insb add dec (bad) pop xchg mov data16 lret xor dec into xchg lret dec adc pop sahf adc jge add and fadds int cmp xchg test in and or and inc sbb add fdivrl mov push inc rcll push inc ret push add iret ja (bad) xchg push xchg iret sbb jae or (bad) and pop gs (bad) xlat jae mov inc xlat addr16 ja les mov jae (bad) mov dec mov dec sbb sub (bad) pop jge cltd xchg dec jae push scas or orl outsl mov pop jbe jp lods xor or push aad and dec aaa out (bad) (bad) jns add ret stc push pop test in cld test outsl lret out mov pop sbb cltd adc xchg aam inc decb sub sub mov hlt sub (bad) pop cmp ss in xchg mov cli mov cs sub sub sub pop out incl fstpt or or lret mov mov lock mov pop repz negl pop jno scas decl mov xor adc and mov fisttpll std inc pop push pop xchg pop adc negb push test scas iret movsb aam add pop negl jmp jmp rclb sub or pop push pop insb jmp in and mov adc cmpsb push cmpsb in loope das pop inc mov cmpsb mov cmc and je jno xchg mov fistp push lods pop pop inc add adc imul ror fisub xlat xchg pop sti js icebp mov sbb stos stos pop cs pushl out sbb mov or push sbb xchg lea cmp xchg sti sub pop inc xchg cmp mov sbb inc push movl (bad) aad jge pushf dec mov jbe adc xchg cmp sarb mov inc jp inc mov (bad) dec pop scas fstps jnp fwait cmpsl pop sub push shlb sbb (bad) mov psubb push pop mov push sub adc inc xchg out js xchg push pop cmc adc sub fbld les (bad) mov dec mov xor (bad) sub sbb in jne test loope (bad) adc nop clc in cmpsl sub xchg int or sbb xchg js aad xchg pop cmp or adc cltd das fs arpl cmp (bad) mov insl cld popa (bad) jb inc into sbb xchg ficoml ret dec push xchg jne inc stos nop js scas rolb sbb and fdivrl jns mov clc dec jecxz mov mov jnp jmp aam repz leave mov adc cmp jg aam add cmp in sahf xorb pop xor push ljmp in in sarb out ss sarb or jl add in jae cmpsl inc sub jns scas hlt add mov inc lret xorb cmpsb sub movsl sbb and nop subl mov pop stc and popf inc push xchg push mov mov imul add and pop add xchg pop inc pop iret in pop hlt cmp sbb addb repz add inc (bad) iret pop mov into out nop xor lahf or jmp add lods jp (bad) sarb (bad) mov and cltd jmp dec ret sbb sbb fwait sbb xor mov sahf call test lcall shl jle mov and dec stos cs loopne mov pop and xorl cwtl inc stos jno lret push movsl pop or add jae (bad) call xchg lahf (bad) mov pop and and jae dec inc scas ljmp (bad) fisttpll in es nop scas out orl mov or sbb in inc xchg dec push cmp add dec ret pop mov dec arpl sub xchg in inc out mov arpl sub in or sbb rolb call xlat in and into (bad) mov ds xlat arpl pop in pop lock jnp cmp int repz or test jl jecxz dec fstl adc clc daa push xor outsl sbb ja repz xchg or push sub mov stos add sbb xor sbb xor insl and add out aas scas cmp xchg mov push outsl hlt jge repnz sub in inc push mov scas mov sbb das and push mov idivl lock stos mov jl in in or pop xor jnp (bad) negb jnp jmp and mov jl mov cmpsb and add (bad) or pusha shrl pop xchg add xlat xchg test outsb data16 cwtl in xor inc sub fsubs ret jge mov scas (bad) das mov push (bad) jmp mov imul (bad) mov mov cld mov daa sub inc pop mov xchg or xor int3 adc sub stos push xorb scas push cmp mov adc lret xor dec popa ret pop inc mov and jb popl add outsl ret fildll jae mov sbb push mov fwait sbb inc mov (bad) xchg arpl add in fnstcw (bad) mov scas mov in and mov dec pop jae mov mov movlhps or or pop popa je stc out es mov xchg or xor es push (bad) ret push dec scas mov mov mov out fcoml mov jae pop and sbb jmp mov jecxz dec dec inc (bad) insl lods addb movsb mov cmp cmc fwait xor pop xchg xchg add fcmove (bad) das pop dec imul out cmp in and je daa mov sub ljmp pusha or and (bad) fwait sahf (bad) mov lcall addr16 rcrl jmp cmp dec xchg test jmp jne inc push imul push xchg inc inc pop and jge fistpl xlat cmpsl push in dec scas fiadd xchg jae std test push dec jmp movsb inc fwait sub mov push pop push pop loopne add fidivl adc aad add je jge adc sbb andps lods fsubrl dec int3 mov mov mov push fnstenv rorb add sub push rolb ret mov hlt xchg mov les xchg insl (bad) fwait nop ficom decb loop call cmc test inc dec add and test xchg jb in pop pop divb and fwait (bad) or test jb dec insb lcall push inc sbb inc daa adc addr16 mov xor fnstcw test aas repz popa adc lds jae addr16 or mov push lretw sbb pop mov jecxz aaa ljmp mov std inc cmpsb jno test and mov dec and int3 das sub das lret rclb (bad) sub mov jecxz and mov mov push stc addb int3 xor stos sub mov imul fistl aam nop lods pushf ljmp push cmp sub mov daa adc cmp in mov mov fiadd enter and loope mov sbb int xorl lret cmpsl leave xor cwtl add add and adc sbb push mov fisubl mov scas mov push repz cwtl adc hlt out mov xchg mov cmp ja jae mov sbb sub ljmp pop pop pop lock xor inc xor cmpsb pop mov push or cmp rcll movsb jmp repz push jb sub and rcrl push pushf js rcrl out cltd xor mov sahf mov scas mov push (bad) in repz or lret push leave jbe insb jmp mov into cmp mov (bad) mov pop loop (bad) stc mov mov dec sub sti outsb in inc xchg xor push inc pop call dec adc jae pop (bad) mov sbbb add (bad) in lret inc adc and pushf fs adc mov pop das in adc mov push sti dec inc scas cmp xchg or pushf xlat cmp (bad) or lcall inc popa es rorl (bad) xor push mov jbe jle in cli dec adc jg in xchg hlt inc iret add das push xchg xor icebp ja dec mov dec xchg (bad) jl iret dec dec mov mov sub in push mov push xchg or and xor cmp std imul dec pop into (bad) inc adcb data16 imul clc push int jae mov faddp pop int3 ljmp sarb arpl fdiv in (bad) mov add lea fwait xchg jecxz into adc lret add mov lret test xchg sbb jmp fcoms cmp daa loope mov push adc nop mov or push inc push (bad) mov in fdivrl sub xchg es outsb push shrb fisttp push mov aam and fs mov lea sbb dec xor cmp inc cld stos cli ja leave cmp popf scas ret and jne or jg add into dec test hlt sbb test icebp aas repz decl test sub inc cmp (bad) pusha (bad) mov push cmp push (bad) mov mov xor (bad) mov pop mov push std pusha dec jae arpl lcall in dec (bad) sbb loopne out add xchg movsl into sub fsubs sub xor sub xchg inc push push outsl cltd lods out scas sub inc mov test dec pushf fdivrl ret loopne (bad) andb bound xor frstor pop outsl addr16 cmp sub leave sbb xchg or mov sub stc inc addr16 adc mov shl inc jmp hlt push or jo jmp sbbb je inc cmp mov push mov mov movsb insb (bad) sbb (bad) mov les jge subb (bad) jnp add sahf daa stos fsub das jmp fs jecxz repz adc xchg mov fldenv dec cmp sbb pop out data16 fistpl fsubl int3 push xchg fld sti add les das mov stos fs push aas dec or mov or stc add (bad) sbb leave xor xchg sub pop clc mov mov fisub call and jne add (bad) movsb mov (bad) xor cmpsb fcmovu (bad) into jb scas mov cs push jnp ja dec in sub in nop mov mov mov stc (bad) mov xchg jae mov sbb inc mov xchg je pop ret subl (bad) test mov dec sbb dec sbb and push mov out lea cwtl (bad) mov fimull out cwtl push scas fcompl mov push or mov sahf test in cmp xchg aad mov push xor clc jns fnstsw je cld inc xchg jl add inc je sub and ss lods cmp add cmp push stc out xor xor xlat ds cmp cmp push sti loop and scas add jnp pop inc jecxz pop sbb gs lahf jnp add sbb movsb mov sbb sbb popa sbb sbbb xchg int dec xor in or scas fdiv rclb pop in sti xchg and cltd or aas repz push sub out dec sarl xor ror sub or lock ds aaa gs xchg mov testb push dec jbe fdivs dec xchg ret mov lret movsl pop jmp cs push mov jecxz fnstcw popf dec xchg cmp sbb jne xor stc push nop adc or loope or fstl fldl andl in adc mov andl push fstp dec pop fsts and xchg xchg inc outsl lahf (bad) stc sub inc lahf or fistpl mov loop outsl call mov les leave pop xchg mov in add push add cmpsl and mov pop adc (bad) jg mov les js mov xor cmp xor cmpsl add jg inc xor add sbb xchg jle jmp inc shlb inc xchg movsb dec dec fs out addr16 fdivrs (bad) je mov into dec inc rcrl and mov and and xchg loope lods lds push xor cwtl and mov jnp cwtl lods mov sub cmp dec (bad) imul mov es sub or or stc mov scas cli add adc nop adc mov mov mov (bad) or cmpsl jp js addr16 mov adc nop in ss rorl scas ret int3 and mov cmc xor insl jmp push in aas popf dec iret int xchg jmp cmp and mov fnstenv pushf fiaddl (bad) dec iret jmp scas pop xor xlat mov mov inc or ret ret fdivrl pop mov cmp bound cmp ffreep jbe add mov sbb push pop and addr16 dec adc mov pop push call xor cmp push pop stc ljmp movb fwait pop pop fldl cli jo mov xlat cmp mov dec fild rorb popa jle in mov lods gs inc adc mov mov mov loopne mov jl test sti sbb aam push pop mov cmc sbb xor repz ret nop pop sub mov not xlat ds mov jo imul xlat pop (bad) mov repz into push nop lock cli pop scas jp or pushf inc push scas call cmp cs pop call mov (bad) hlt jecxz add rolb (bad) icebp fldt dec mov pop jns (bad) xor add sbb mov add movb ds repnz fsubl jns dec imul or mov pusha test lcall insl in sub mov mov ret leave icebp sbb cmp andl cmp ss push xor es push xchg test xor mov pushf or incl insb inc pop lea add mov or (bad) fs adc xchg fcoml ja jl push sub in int jns outsb negb dec adc pop test fisttpll pop jno,pn cmp into das les scas stos ss xlat xchg rorl adc ficomp ret or movsb inc ret sbb cwtl movsb mov mov xor sbb test pop mov data16 xchg aad mov mov repnz dec mov pusha pushf mulb mov xor cld pop xchg pop outsb inc ljmp inc xor (bad) adcb fdiv dec cli cmc nop in sub imul cmc fwait ret gs ds (bad) outsb imul es (bad) jbe xor mov xchg mov sbb int3 jge cli lods gs (bad) lahf lods fwait push out mov adc mov jmp daa jbe test fs test fistl jno test leave mov lret pop movsb outsl test loopne js hlt dec mov xor dec jecxz cmp fisubl sub lahf or (bad) xchg pop cmc and out mov pop mov xor xor sbb sbb lods outsl mov dec (bad) xor repnz dec jnp mov xchg js xchg in sbb adc fnstcw movsb xchg pop js mov pop inc mov imul pop (bad) or pushf sbb sbb test (bad) je jbe ljmp lahf stc gs movsl sti mov outsl add pop nop (bad) fwait jge adc test fnop mov aas sbb insl xchg xchg popa jge lahf lea jmp jle fucom pop movsb iret lock aad or push adc cmpsl jp aam sahf pop sub imul movsl outsl pop cmc dec or addr16 fist and sub rcll or sub repz jo add frstor nop fwait push out lahf (bad) sarb dec mov jns out add jno or mov lret push and cmpsl aam cli mov roll add lods lahf sub or mov xchg mov pushf and add scas sbb mov out mov adc sub repz (bad) mov fwait mov dec int3 xchg and aam loopne sub mov in jmp add push pop lahf pop adc push cltd divl mov loop sbb lcall leave out out rcrb ret jl loopne aam jno test nop (bad) push cli gs add cmp pop dec ret add fs sub or lods negb hlt lea jns mov fwait out je mov fcompl sbb in dec sub xchg icebp in sbb add inc minps stos insb lret push mov iret xor (bad) mov xchg cwtl pop xorl push cmc cs sbb xchg and aad rcrb push jmp test mov loopne outsb fadds jbe cmp and mov push jle pusha sub lahf cmc push js cmpsl test shrl push inc sahf notl or fs xor lock repnz cmp add xor sbb xor dec shrb mov inc and out xchg pushf stos mov nop into adc pop and das xchg (bad) mov mov mov pusha dec inc mov push movsb adc int in ficom push pop xor sarb mov xorl out out outsb mov mov adc mov and popf push loope cmp lret sbb std (bad) cmc aam fcmovbe sarb push fmuls mov loopne inc or mov xchg cmp and call movsb aad je andl push scas jns mov and fwait roll cmc pop lods (bad) fsubrs dec (bad) lea lret iret sbb mov lds adc adc jmp imul lds cmp and inc lret sbb lock enter inc pop jo mov aam (bad) icebp lret outsb pusha aam sbb cwtl mov into push fadd xchg enter enter cltd rorl fistpll jge mov stos mov je xchg pop add in pop push pop push pop push pop push pop push pop jmp ljmp dec add jno cmp incl adc adc cmpsb add jge pop mov and add mov cwtl (bad) xor scas sub sub movsl cmp cmp cs sub and ljmp test or or mov (bad) mov and add inc icebp adc sub jmp fildll and and dec js mov and adc mov rcr dec lods hlt incl xor and add shr jmp jp test inc call es dec fsubrl clc aad (bad) jmp inc ss dec fdivs mov fcomp dec lahf mov out lods clc lret cld xchg call test ret dec das xlat int3 rolb cmp in jne movsb dec xor push or imul sbb data16 out lock in test jmp add int3 cltd jl jno inc rclb jbe inc fsubrs push push ljmp and lcall push faddl dec les mov repnz lahf cmpsb jp (bad) ja aam dec xor dec enter fsubrs lret mov xsaves nop cmp faddp pop mov pop or mov jno sub or dec aad lock aad mov add arpl or lea dec inc ljmp int3 xor mov int3 clc shrb pop and shrb jp insb outsl sub (bad) addr16 inc das mov dec push push or jecxz pop fidiv daa xchg pop ret mov xchg scas pop in jb mov push (bad) lock cmp jns ret mov dec pop xchg bound jp mov cmp aad push sbb mov push daa add test pop push pop imul int cmp xchg push cmpsl mov and xor lret lahf es iret lock lcall xlat xchg aas js mov out cmp lret xor (bad) idivb shrl lock fwait xor test into dec adc ret mov cmpsb mov mov cmp bound add pop dec cwtl mov fidivr pop repz data16 and cmp cmp mov inc lds out sbb dec insl sbb or pop inc lea cmpsl dec (bad) das inc cli daa lcall fwait roll mov and xchg mov sbb aam sbb in into lea packsswb fidivr daa cmp cmp cmp fidiv ja jg and cmp sub add inc loope cmp ret jg int lock fidiv jbe ficoml cmp addr16 fcmove jo aas out mov popa add and dec cmpl mov mov mov mov sarl or xchg nop dec (bad) mov push js lock outsb cmp ja pop fidivr movsl cwtl cmp mov in push jge idiv rcrb aas inc pop inc lds cmp fwait xlat in loop test fidivr cli xor dec addr16 jle fidivr je out loopne int out popf lds pop push test daa ret imul (bad) aas call cwtl cmpps push pop jae cmpsl clc mov sar lcall in sbb das push xchg jle push das sub xchg ja (bad) lods cltd sbb pushf loop push aas inc inc sub daa into mov je or aam cmp xchg les inc inc sbb dec jmp or (bad) sub clc cwtl cmp dec mov pop inc cld (bad) jl lock aad mov xor lds or cmpsl into int3 mov sbb sarl in lea xor (bad) xor dec xchg push mov push mov hlt ror test andb aam int roll loopne enter xchg int sub mov cmp (bad) xor lock pop lea sbb cmp adc adc jmp mov cmp jecxz cld xchg dec sahf mov fisub pop jmp nop ret mov xchg adc popf (bad) cli jb xchg adc push js sbb shufps shlb or fistl fdivrs cmp subl mov mov je jmp add data16 xor not dec je fsubrs and rolb and lret adc lea add xor push xchg jmp mov ljmp inc xlat vmovdqu aam mov (bad) xor mov inc sahf mov sarb sbb es ret movsl rolb cmp les fisubr push adc sub (bad) cli out lds int test cmp jb mov das in adc aas addr16 mov xchg push das iret hlt lea inc icebp rclb mov xor push test leave inc shl xlat call lock test das dec leave and push cmp dec sub mov inc xchg int3 (bad) mov xchg (bad) cld leave addr16 push lret mov fwait (bad) fidivr gs sbb sti push fld arpl int sub xchg mov jns aas call cmp (bad) and xadd mov cmpsl inc (bad) sbb mov cwtl out sub daa outsb lds mov ja adc insl leave addr16 in scas test clc xlat cmp xchg loop pop pop fsubr sub adc cmp rorl sub (bad) and cmp cmp pop cld dec sbb rclb push cmp leave add mov xor jo icebp aaa mov mov xchg ds xor gs shrb repnz daa jno mov es cs sub (bad) mov mov pop (bad) xlat mov cmp xchg lds mov ret cmp aaa into test (bad) test inc xchg inc subl testb test jmp test mov inc sub std ja and stos dec pop movb xor fimul push movl testl pop clc xchg cmp fsubrl repnz fsub mov in fs and aas int push cmp rcll cld push popf mull rcl fs mov hlt pop pop inc rorb hlt orb sub xchg sti xchg mov shl fwait (bad) hlt orl or xlat popf daa ret mov pop sub cmc sbb jg pop repz lock cmp xchg mov inc inc es sahf dec outsl sbb cmpsb ret ja or push pop jns cmp and (bad) pcmpgtb pop fdiv mov push cmp mov cmp (bad) popa hlt dec lahf cmp add cwtl insl sbb (bad) pop mov out shrb jbe xlat xchg test sub xlat add int mov and mov dec xchg inc setno jb ss sbb leave pushl leave jge pop rcr jb dec push pop (bad) and lcall cmp ljmp cmpsl mov mov (bad) mov mov adc das arpl outsl dec pop adc adc xor inc cmpsl mov xor vmovaps xor loop icebp cmp xor or pop xor out ret mov nop mov int nop and fidivrl and pop or mov dec and fild fnsave lds hlt and bound data16 call mov cmp cmp cmp call cmp jb fwait aas cmpsl cmpsl sahf incb rcll xchg add (bad) fwait mov jle lock sbb sahf in mov subl inc cmpsl cmp sarb xchg mov shr xor mov mov mov in clc insb sbb pop push das roll xchg ja pop fsubl clc push and int mov adc lds movsb inc imul addr16 sub movsl sbb and fsubl mov jle (bad) jne sbb divl dec out xchg rorb outsl jecxz cltd (bad) jbe aam add inc xchg lret addr16 pop or mov inc xor lea cli leave aas inc mov fnsave inc das sbb bound (bad) jbe pop or cmp cmp sbb ret rorb mov sub pop (bad) hlt xchg mov cmp sarl decl cmpsb lret mov out xor dec xchg add inc cmp (bad) jle adc inc cmp dec inc sub ret sub cvtps2pd xor push jbe xchg xor sub inc sbb cmc inc out sub rclb mov scas xor outsl je xchg repnz cmp inc hlt es xchg je cld sub inc sbb (bad) mov push mov adc mov lods jecxz frstor mov cmp lret mov ss sub sbb (bad) sub inc lahf clc shrl xchg cmp xchg sub inc jp out sbb cmp notl cmpsl jl cmp fildl adc dec jae test loopne test and add cld add lret aam nop mov sub sub (bad) aas dec jecxz in lcall push mov pop pop pop inc pop rorb shll pop iret pop popf mov test aas dec pop test fwait aam jb cmc jmp xlat ret and cmp mov or or sbb dec sub pop jecxz pop inc pop int jg aas into inc repz pop test outsb scas mov or test push cwtl dec lock bound pop bound ret fnstcw les push das les hlt inc fcoml in or imul pop pop ret mov daa lock pop aaa dec cmc xor mov push mov cmp (bad) cmp cmp into xchg sbb push push (bad) and gs xlat cld pop test das ret mov insl mov (bad) xchg iret cmc bound adc xlat mov in fwait imul addr16 arpl cmp aaa sahf inc mov bound (bad) mov sub inc clc mov pop xchg xor cmpsl aam mov xchg div cld and xor push jl loop pop shl push sbb test mov sbb mov dec aas (bad) rcrl cmp mov sub es rep and inc rolb lea sbbb mov pop out mov xor outsb fucomp aaa xorl roll fildl add inc xor outsl test push cmp cmp dec cmp leave ficompl add cmp lret daa aam lea sub adc iret jmp mov ja lcall daa test add add xor loope addr16 xor loop xor add inc movsl jecxz sub jmp jg ja adc in dec aas pop xchg bound xor out add hlt inc mov rcrl icebp addr16 ja push lock lcall xchg out dec mov inc in movsb pop pop fildl cmpsl fidivr ret cmp (bad) lahf inc clc jbe xchg test fiadd mov and sub shll inc (bad) hlt mov fcmovb and push js cmp cmp das (bad) daa ret mov mov xor xor scas aam iret pop pop xor mov push xor xchg or xlat mov addr16 mov adc int3 das pop pop inc fisubr add movsb sub cmp jmp mov cmp rol sub jg clc daa jno (bad) hlt dec dec xor jle fidiv push mov mov cmp dec mov out push add adc mov mov das repnz mov inc cmp lea subb stc cmpsl lcall cmp and stos testl das inc stc mov mov or xor push mov mov mov in pop ret mov sbb and xchg repz fst sub leave aaa jmp mov mov stos mov or mov mov into pop imul lock xchg and xchg dec and cmp xor daa sbb inc iret sbb cmp mov push push loope stos xor mov mov push jp hlt sub cmp lcall mov aad jg dec and cmp xor cmp inc lcall adc out cmp idivl outsl add push mov xor mov or mov sbb dec or enter (bad) sti push sbb and mov mov inc add mov hlt out daa mov inc clc das test ror dec rcrb push push inc mov xchg dec or jge jns divb cmp (bad) sub int3 scas lods imul arpl pop sbb inc and jge ficomp (bad) (bad) sbb lods imul lret (bad) int cmp cli sbb es mov in in aad jbe leave (bad) rcll sub or rol mov inc pop push xchg imul adc scas dec test hlt fisttp rorl mov movsb loop fist into dec sub cmp dec adc mov frstpm(287 ficom std mov or xchg sbb stos or sar mov and adc pop cli inc fcomip mov jnp fcoml (bad) stos pop jbe xchg xchg lcall sti enter jnp or push repnz push dec pop xor and or out mov (bad) in or in pushf push mov out inc icebp ljmp inc pop sahf dec imul cli push roll call xor daa fwait cltd pop pop in lea xor dec or loop ljmp pop pushf push pusha sbb iret lea pop inc push (bad) ret (bad) mov lret lods lret int dec dec pop dec push in ret sub pushf fsubrl loopne call add push inc cltd arpl lods sub ss xor mov mov mov ds sub cmpl loope xorl add add fistp pop call xchg xchg xchg xchg xchg in in in (bad) std (bad) push dec jne cmpsb dec mov pop mov shll movsl ljmp in mov lea add pusha jecxz jecxz jmp sahf pop sahf call sahf push fs out lea pop push push (bad) jecxz jmp insb push (bad) jmp jmp pusha dec pop pop pop push in loop mov pushf pop sub loope jmp add in insb loope inc xchg arpl lods fistl inc inc inc in cmp popf mov mov outsb pop call fist xor loope pop shll mov pushf mov fsubrl sub pop jmp imul icebp or in in mov jne inc sbb popa mov (bad) dec in and jne fdiv or cltd dec lret ret cmp in rcrl scas or push mov sbb dec cmp sahf add mov jp dec andl dec pusha mov das fsubr dec pop addr16 push mov sub mov aaa dec and imul jl lods jbe test movsb xchg jmp jo jnp mov xor aad in mov stc fcomi aad hlt add rcll (bad) insl inc ja outsb mov loop push mov gs mov pushl mov loope xchg rclb push data16 aad jmp in sbb cmp test outsb mov cmp subl (bad) repnz aam aas lret shlb dec lds dec sbb xchg dec add mov cmpsb push fildll push and movsl pop or mov push shrl adc das push mov sub jo clc jno ret mov jmp sbb sti (bad) rclb inc cs jecxz mov and jo inc inc fs inc dec repnz xlat popa mov mov aad test (bad) imul mov out jb shrl ret inc stos repnz jae xor test in lret mov ja sbb test mov jmp xor mulb jg je pop imul jmp (bad) adc mov mov xchg icebp lods (bad) xor sbb adc (bad) cmp (bad) setne fwait and push xor and sub cmpsb imul cwtl js fmull xor std fildll cld pop jp adc dec cs cmp adc dec cmp pop ja pop mov mov (bad) cwtl push or outsl and cwtl sahf jb mov add push in aas repz or test inc je aas cmp adc test or out xchg inc scas (bad) dec das sub (bad) jo xlat sub cmc mov in ss and dec int3 pop pop movsl fstpl or add dec imul jno (bad) arpl lcall (bad) xor mov pusha cmp jne int3 jge lods jo movsb clc sub mov pop mov sbb adc jecxz and add xchg xor sub scas adc dec in sbb lret adc stc jp jle jno mov adc sbb adc xor lcall cmp cmp sub mov arpl roll int3 mov rcrb clc jo mov enter jp imul fidivl call mov sbb pusha (bad) pop cmpsl lock mov jl imul xchg pop push mov lea data16 jb movsl push (bad) movsl cmp insl scas arpl sti inc rorl mov and jo dec call mov mov mov xchg inc add mov sub jnp int push ljmp xlat into push push (bad) xor fisttpll inc cmp cltd arpl mov or fsubrs fsubs mov (bad) test enter jp sbb aas dec insb pusha dec (bad) enter dec into fmuls lret dec sarb clc fsubr jecxz push popa cmp js les outsl sub pop pop inc push loopne or pop jmp xor xor add jno dec mov mov add push jl push adc xor and add jno dec mov and and sbb xor or aam mov sub add push add or adc inc add inc or sub sub cs sub mov mov das sub and jmp insl call pop lock negb call pop jae mov add ret cld sub add add push lds push add or pop fcoml pop cmp sbb fs fs mov mov in lret sub icebp lods das sub or and lock out fadds xor (bad) cmc pop or stos mov stos leave mov dec rcrl mov mov (bad) push out xor or fcmove sub dec daa dec dec cmp das rcrl aam mov adc push adc (bad) data16 xchg sub rolb sub jbe sub lock and (bad) cmc pop stos push outsl int3 push imul scas xchg jbe push xchg fistpll repnz sub cmp pslld lea (bad) and jbe ja ficompl xchg and xlat mov add cmp dec pop cmpsl and add cmp cmp cmc and js adc mov (bad) fwait xor cmp call xor mov and add cmp push jb jne or jb jns rcll mov xor sub add add lahf andl adc mov add (bad) dec sub mov es xor aas mov jo pop mov cmp aaa rcl cmp pop xchg dec xor xor addr16 mov sbb inc rolb cmp xchg call cs mov and mov lret add (bad) mov mul adc mov adcb scas push inc add shr cmp add push mov fdivl xor mov clc lods out adc mov into fmull mov ficoml dec icebp popf hlt jg or (bad) lock sbb xchg fisub cmp cmc (bad) or inc push test aam fyl2x data16 das add cmpsl cld jno xchg mov xchg lret xchg cmp add pop xchg xchg xchg js dec aam clc push pop mov insb sbb sbb iret xor cmp xchg mov pop xor and ds xchg std sarl sub inc jbe sbb xor cmp push cwtl fnstcw insl or into iret sbb shll imul aas (bad) xchg sub test pusha mov mov xor addr16 xorb xor hlt xchg out or loop xchg sarl daa rcrb xchg pop (bad) das ljmp push (bad) rcrb mov (bad) mov xchg xchg movsb mov fadd jbe mov push mulb add mov push outsb pop lcall xor int add xchg xor xchg jmp bound nop imul inc or aam mov movsl xor xchg jnp jae loope sbb idivb xchg xor cmp aas shrl rcll pop xchg into adc and cmp cli popf sbb pop push das pop add out fsts dec xchg cmp dec pop dec bound in out xchg test cmp mov xchg (bad) dec lods xor das add repz xor xchg jmp lea (bad) jmp mov (bad) xchg push inc dec (bad) jo lods sbb jecxz xor pop pusha xchg (bad) mov int aad dec pop into aaa imul call cmp cmp cmp dec loope repnz loope (bad) mov dec fwait dec xor pop (bad) push mov sub outsl int3 arpl test pop sub mov xor cmp push jle lock fs aam in jns das les sbb jecxz xchg dec mov push cltd mov inc mov out mov fs clc xchg cmp and cmp das and sub das in xchg lods sarb add cmp mov sub mov cmp dec shll popa xchg (bad) cmp in iret pushf add ja cmp mov movsl mov mov xchg push xor in mov or sub pop or arpl push fisubrl sub mov sbb mov ret mov mov int fidivr xchg pop cmpsl roll test mov roll or out decb stos leave enter cmp fimull inc lock or (bad) xchg (bad) mov add test fmull in js leave (bad) lahf mov jecxz inc jmp jle test ljmp fmulp js pop pop jecxz inc outsl rcr mov inc rcl mov pop push fsubrl clc dec jmp push inc lea adc lcall popa fs (bad) ficompl test pop repnz adc jg sti lcall loop mov jmp (bad) pop rclb mov loope loop ljmp mov inc xor ljmp sbb xor cs int adc iret int std fcomps push lret mov out cwtl iret mov dec dec je (bad) mov and or xchg pop push std clc sar xchg jp pop mov ja xor xor sub cs cs push add mov es jne je inc sub sub jbe loope fstps loope add pop imul addr16 pop int inc pop or orl fmul lods dec (bad) enter faddl fnsetpm(287 dec fiaddl lret in pusha (bad) rorb pushf pop pusha dec dec loopne (bad) mov rol shr cmp fldcw in (bad) xor add push enter in inc sarl xchg mov or xchg lret sarl dec push jl mov das xchg inc (bad) and pop cli out gs mov or rcl jl loopne dec xchg push out jle test jmp jb mov rorb or push in or or out mov inc icebp fcoml mov sarb or or inc sar cwtl pop jle push sbb js or lods scas out cmpsl mov jl cld push mov inc and cmp and mov add add add loop cltd pop pusha out out out xchg jns fsts add lret gs pop (bad) aaa add stos and in cwtl pop fs pop jp sub bswap xorl out out (bad) in (bad) sbb and lods jns inc push shll in (bad) sahf pop jl mov mov cld or dec push lds or xor mov pop adc fs jge aas cld bound aaa adc lods mov sbb out leave ja stos add jns sbb pop (bad) je loope rcl shl lcall int mov shr pop fs xchg dec xor lcall add pop adc insl std jecxz sahf mov loope lcall jmp dec in ljmp push enter leave lret int3 les loopne in push jg push fidivr jns or mov test fcomip jb (bad) (bad) and adc jo mov or xchg mov adc cmc movsl add dec repz aad (bad) push data16 push inc pop test add cs adc daa repnz sub (bad) mov mov movsb dec addr16 dec lret insl and lret in dec js adc mov dec adc loop push lock xor or jg (bad) in push call les dec fucomip mov mov (bad) pop dec pop mov in jb push cltd cmp (bad) fimull popf ficom sub xchg push jp outsl and lcall out dec cwtl stos movb (bad) idiv mov shrb dec test cmp pop movb aaa aam xor or inc mov clc iret and mov fcoml dec lds pop sbb adc test pop into or scas les pusha pop lea lods xor dec mov add add lahf (bad) loopne jecxz sbb fadd sar or cmpsb or outsl pop cld jl xchg push test loope mov mov dec das cmp cmp mov xor sarl addr16 jecxz (bad) adc pop jnp lods dec add mov sub ss fnstcw sbb negb nop jae jmp xchg (bad) imul jp inc push sub mov es push adcl pop mov xchg jnp icebp cmp or sti in cmc rcrb cmpsl fild or fimull ret fadds outsl or popa int cmp cmp je mov adc push gs xchg mov testl imul pop adc arpl hlt xor ja mov dec mov in jb lret push pop or xchg fadd (bad) cmp addl testl mov inc jmp adcl lock cmp int test out cmc (bad) jb lods add jo adc int dec push lcall fdiv shrl xchg mov add imul xor push cld sub dec add (bad) ss pop or je inc aaa mov ret mov nop pop sarl ja add fcmovb pop dec inc mov pop stos leave call fcomp mov (bad) outsb fistl sarl cmc out inc insl push xchg mov mov (bad) int3 jne jl add mov mov cmp pop into dec xor jns xchg jne mul sbb fs pop idivl inc lods xor sbb xor cwtl sahf in xchg bnd lahf xchg xor les sahf ret addl inc push xor xchg sahf into hlt sahf into dec dec sbb jmp lret jmp je ljmp pusha lds and jb inc and push stc jecxz iret aas mov jno pop jmp or dec lret pop jge stos fnsave ror pop sub dec je je lea pop add mov adc pop in push mov fistpl dec sub lods inc dec sub fimull adc icebp rol out add ljmp jmp dec mov lea scas adc stos pop pop (bad) or cmpsl ficom notl enter push call loope sbb and insb subb pop daa repz pop jl roll pop ja push jl icebp je adc (bad) push or mov push les (bad) lret (bad) pop jnp mov or rcll add push mov dec leave sub dec mov js mov out test inc out inc cld imul sbb jp adc mov fisubrl int3 push sbb adc (bad) out jp jns rcll inc cltd inc jp sub xor call xchg mov push cmc hlt lret fnstsw int cmpsl jmp out or rorl dec adcl loop or bound mov out add xchg pop das iret mov fdivl cmp jae fldz xchg and sbb js cmp ljmp jle jp pop jmp stos insb dec imul inc push xlat lcall mov dec mov lcall cmp sbb rcrl fildl testb ja sub add cmp adc mov push inc add pusha sub jnp gs mov pop inc popf xlat (bad) pop hlt and mov adc or dec and jo adc leave xor fist out push push cmp in popa or mov in test sahf jp fmull cmp jp push mov pushf aam ffreep repz repz (bad) jae push xchg out nop call jecxz xchg mov cmpl int3 repnz mov je imul nop test cmp into decl inc loopne inc in push out sbb (bad) xor push pop ds mov hlt adc lahf in pop mov (bad) call sahf sbb cmp sub jle or dec insb and jg xchg jns aas jl mov pop xor (bad) fisubrl test js (bad) stos rorb loop and sbb (bad) js insb dec loop loope push (bad) mov fsubl popf cmpsl sbb das ret pop push dec pushf dec cmp jp jmp dec cmpl cmp fldl2e imul xor out xor sbb mov arpl mov push je push jmp mov dec dec in (bad) mov lcall mov and push out push mov mov test or cmp cmc pop sub sub stc push xor int pop push dec in jno jle push adc hlt lcall or sub cmp dec and pop sbb cmp cmp jbe add mov popa stos push pop (bad) and orb sub push cmp or push sbb and sub xor cmp jbe ja dec sub xchg (bad) jne inc push arpl add repz pop jge roll xchg push inc pop mov and mov mov and jmp mov adc test xchg inc mov cmp mov in sbb icebp and push and movsb push fcomip adc negl and add xchg lea jbe sbb jge insb add hlt xchg mov out loopne dec dec sub rolb pop mov ret and push pop mov mov loopne inc xor mov sti ja (bad) xor addr16 outsl cmp test aad xor jp fidivr mov sbb mov pop jp dec jp imul pop and addr16 pop pusha roll jge adc mov ja sbb add lock jne out cmp jl inc sbb or negl inc daa je movsb pop push mov xor fcos loop and and push pop inc add int mov add xor mov mov pop mov adcl std les test arpl fisubrl fcomps mov daa mov mov test adc lds loopne mov leave dec mov mov push stc xor jecxz shrb mov cmp fcomp jg addr16 rol or arpl jg inc das or inc in dec aas mov cwtl lcall mov push xchg je cmc fadd or scas cmpsb aas clc xchg mov adc fiadd loopne jmp dec daa nop xorl nop fisub xchg and les movl jge pop jecxz xchg cmpsl arpl ss sub fwait sub lods dec adc adc adc fwait setp xchg mov inc adc in push (bad) out lods dec das out pop jge,pt out mov jl les mov cmpl (bad) jno cmp das jecxz add mov test (bad) and lds mov lea mov pushf icebp xor add (bad) pop mov push jo movsb and xchg xor and xchg pop jp jp int3 fs lods imul bound cmpsl (bad) out sbb add in addl or cwtl sahf push xchg and sub mov mov sub test sti fs out and xor inc lret sete int lahf lods shrb mov xor stos jge sbb add xchg ljmp jecxz pmulhuw push mov cmp xor jnp cmp sbb jmp scas std dec lods stos pop clc pop xor dec jns or aam lock jl ds dec jl pushf cmc push mov adc cltd mov lret (bad) dec xor inc xchg jle stos push xor xor mov pop push adc jnp and rorl push pop dec lahf sub outsl jb adc cld fcomps push stos repnz adc xchg sahf jne or push notb cmp stc ss mov or bound or inc push sub mov mov mov mov pop mov and sbb pop incb jno ss xchg hlt fsubrs lahf stos fildll aad push dec idivl mov dec fimull mov push ret outsl sub sarl mov sbb push arpl push pop dec popa inc into lret pop fcoms fbld push in cmp sub cli sahf jmp (bad) or sub in adc ljmp imul xchg mov adc adc xchg xchg xchg mov cltd dec mov pop push cmp stc cmp daa mov repz aas movsl mov fs pushf sbb mov das mov push je add mov push push icebp cltd dec stc sbb insl jnp mov cmp pop ja jg jge mov cltd xor add push insl fsubrp rcl mov inc sbb in mov push mov adc mov lods stc ja lcall mov and and adc outsb xchg xor pop js mov das stos fisttpl and sub jns inc xchg lea insb sahf push imul repz fstl jb loop,pt pop push or in insl jmp pushf or pop mov clc xor xor daa push mov rclb lea xchg es lds addr16 sub call inc iret sub mov sbb and xchg inc jmp sub hlt or xchg test pop mov je mov stos jno pop push aad inc jle add mov pop and fwait insl add inc or fisttpll mov lcall ljmp xorb mov or push rorb adc test xchg xor aaa popf or cmp sbb lea clc mov les cmpsl lahf leave das cltd js inc sub ljmp mov sub arpl sub jmp adc popf rol cmpsb mov mov jbe shr sub cwtl dec in xchg (bad) jmp lds data16 je es jb out xor or jb pop int ljmp gs or mov jg int dec (bad) in addl in push cmc cld fwait jae jp arpl pop fwait je data16 rcrl pushf push ret cmp jb imul adc in jno push mov inc loop and sub and mov push push popf pop test or fnstcw cmp xchg cmp divb decb push fwait ss xchg imul orb sti mov addr16 pop inc jle inc add or pop (bad) int fbld xchg aam inc xchg or fsubrl mov push jbe loop dec imul cmp sub mov mov dec and mov movl rolb repz jb aas fwait dec movsl jp jbe fmull mov push push jecxz popa dec sbb cmpsl push enter and sti daa push adc pusha in mov push cmp dec in mov hlt mov jl outsl rcrb xchg iret mov jmp (bad) dec nop push mov xchg fwait jmp mov mov mov cmc mov mov and sbb leave mov xlat stc xchg lock loop cmp popf (bad) push and fmull loop and jnp push mov jmp xor test jle movb ds roll repnz sahf test mov gs scas call xchg loope cmp sarl mov push (bad) fnstcw arpl in add jae cmpsb xchg and push (bad) and sub sti ja decl stos xchg iret or pop or mov inc or inc fnstcw das je pop popa inc dec ljmp inc jnp out sbb and dec push cmp xchg les mov jno enter dec mov jge pop sbb push or dec jnp mov push std pop cmpsb andl mov jge test or sub fild xchg fcmovnb jns ss xchg stc xor and cmp movsl mov loopne clc bound mov fldcw pop cmp pop repnz daa inc test mov mov sbb push push pop flds add arpl jns pop adc lods nop lcall push lea sbb sahf push mov dec imul aaa mov mov gs xor (bad) mov push bound popf pop movsl cmpsl test sbb and repz mov adc xchg sub loopne push (bad) jns into arpl adc mov out cmpsl mov mov sub aad jne add imul and inc or loopne lahf jnp fcmovbe (bad) lret jp imul inc rcl or addr16 jo fwait je ret dec pushf imul pop pop push ret out jae cmp addr16 or sbb popa sbb dec xchg cmp mov sub add push push shrb leave out dec cmpsb xchg (bad) pop sbb xchg push aad dec decl xor fcompl sbb (bad) call in jl leave call push rcrb pop dec iret jno shrl mov jno and add es movsb repz push xchg gs outsl ljmp sub outsl xchg cmpsl cltd les cld leave adc test push push data16 sub lret arpl in jo fcoms and jl sub (bad) cld ja inc mov rolb imul push push mov cmp leave jmp jp test mov test mov dec popa cwtl shll pop js mov xor imul xchg mov inc mov push (bad) aam sbb ljmp nop orl add cmp lods sti push call rcll dec mov inc sub push mov cmp lds sti out cmp lea xchg xchg push xchg xlat out mov sbb or addr16 dec ja jne nop call repz (bad) testb mov fcompl dec sar cmpsl leave jmp push loope outsb pop adcl cmp mov adc mov scas jo (bad) fldenv push jmp sub inc inc insl daa das (bad) fildl and loope shr hlt push jbe or jge adc dec mov push sbb in adc dec xor aad daa test push adc in outsb mov jb sub aad sbb pop cld push in mov cltd push adc push pop pushf push (bad) lret adc sub dec adc push in sbb ljmp cmp lcall rcrb fcmove fstl add insb repz xchg mov mov mov inc jmp sub push and cmp push xchg ret into sahf (bad) je out inc xor popf lds in (bad) in adc jae aaa mov in dec jmp jns mov outsb mov and (bad) sti repnz rcrl mov data16 jg pushl out int sub lcall and mov jns je jle pushf neg sub lods jg aad push cmp mov imull pop sbb test mov push push ljmp inc cmp mov xor movsb ja not ss data16 popf lret mov cwtl sub test add aas lahf pop cltd hlt repnz add decl ja es cld icebp and inc push sbb xlat fs or add out xor fwait mov dec rol aaa fsubrs les (bad) stc cmp jo inc gs push out dec or cmp bound iret pop popa adc inc int mov movsl pop jmp ret icebp in in dec repnz push leave push clc or in lods imull in cmpl decb scas push es loopne test sub dec or jnp rorl or pop jp xchg std test (bad) cld cmp push pop test push roll jbe ret in je mov inc out ss add push mov vcomisd stc clc and push in mov dec mov loop into jne in jne fucomp inc fs adc clc cmpsb jns js test and push fmull addb je mov ret mov ljmp outsl xor js sub xchg jns out icebp data16 nop gs clc push pop addr16 mov (bad) sub loop lahf in repz xlat inc sbb shll aaa xchg inc mov out out mov test xchg jge sub movsl mov pusha les movsl jns cmpsb icebp mov fstl leave mov andl add push cmpsb pop dec and lods aam stc jp aas xor sbb push push (bad) xchg xor arpl push sbb push iret adc mov adc pop jmp inc pop clc stos inc fsubs mov imul (bad) xor andl xor cmp xor push aam mov js test inc dec cmp das rclb test cmp into arpl cmp ret push fidivl icebp jae sbb popf inc rorl fwait pop scas mov sub mov push adc pop adc xor adc aas das inc or xor lock sub inc inc test sub pop xlat sti mov dec in lds lea and test mov mov cmpsb call fcompl pop ficoml xchg cmp test loopne fnstcw adc clc fwait pusha rcrb mov or lahf movd sbb sbb ret adc dec or mov outsl roll (bad) ja sub push add daa fld add lret sub xchg dec repnz pusha push sti mov int and pop and das mov jg push out cmp cli mov lods sub lock jo sbb pop xchg cmc aas dec cmp and mov and xor add lret pop mov in pop out sbb inc or cmpsb xor push jl mov adc test repz sub mov and ror sarb dec xor xchg (bad) imul pop ret andl mov xlat or daa fst fs mov loope iret sbb lods sbb and push xor test mov mov inc jo shrl pop test mul or insl call cmp adc lcall int add loope xchg loopne xchg popa dec movl xchg cltd cmp jb push cmp mov mov repz sbb loopne add push icebp inc sbb inc dec js jo jmp in cld fadds and in pusha mov out inc mov pop jl push cmp stc test sub scas cmpsb mov sbb iret add repz adc jo adc mov mov pop icebp (bad) repnz fisubl adc test xchg jle add imul and xor adc icebp icebp xchg xlat scas mov lods or mov push (bad) push xor cmp inc sub pop add js pop ja lcall fiadd cmp pop out fs pop pop mov cmc out int lret mov mov imul pop dec ja pop popf cwtl pop xchg jp mov int mov adc out enter fistp push test cmp lds push scas into int add flds dec cmc mov ljmp inc decb sti cld mov inc fisubr daa lret test cmpsl add adc push dec ljmp push mov adc jno dec lods mov xor imul loope or inc pusha or push loope rorb sub inc fwait cmc push insb mov mov inc ret cmp xchg lret dec xor lcall or pop subb mov push xor repnz rcll jbe cld aas std dec ljmp in icebp ret insb add cmpsb lret push hlt fcoms or cmp gs dec lret (bad) mov cmp fcmovu in and jge les add out xchg xor dec jmp push imul xcrypt-ctr cmpsl pop out pop rclb mov add or push aaa sahf pop mov or inc pop and inc lcall ja mov ljmp in addr16 gs je pinsrw (bad) faddp xor mov mov push cmp sub inc and test mov sub mov lahf cmp push sub push inc pop das int jnp fbld cmp jo mov and cmp rorl aas adc add js inc loopne pusha dec cmp xchg jge xchg adc (bad) js sahf add int pop fisubrl lcall ljmp cltd out push cmp ficompl jle lcall (bad) mov add stos dec push sub js aas mov test lods or rclb dec lods mov xchg inc push sbb jle lcall adc divb pop imul test push push shrb (bad) sub test mov scas push mov pushf aad xchg lds dec mov and sub (bad) xor mov pop jno lea hlt xlat mov icebp jbe pop push into ret cmp rclb iret leave push pushw inc das cs jb jae inc loop mov mov fs pop rorl iret ljmp icebp lods dec loope out popa and sbbl or mov sub lret dec (bad) js sbbb rol cmp inc fistpl xor jae cmp jno js loop ds xor movsb in inc hlt mov (bad) jle pop loop sti push jmp push cltd ret dec clc (bad) push sub sti jg ljmp popa (bad) xor xchg mov cld pop out cltd xchg jno leave popf cmp mov lret enter fsubr leave lret call pop adc xor hlt fcmovnu jno jo ja push xchg jnp test ljmp jns nop sub aaa sub mov mov xor fisttpl and mov or mov xchg mov movsb fistpll xchg xchg or fistpl mov call add jmp pop mov out push pop pop push mov dec jnp pushf stos les or es pop divl inc or xchg lcall mov cmp mov mov xor (bad) sti xor fcmovbe (bad) fild cli clc mov or adc mov (bad) dec test or inc nop sub cmp ret (bad) incb and dec push (bad) adc adc inc mov leave cmp cmpsl sbb sbb mov push pop xor divl in push xchg inc lods pusha xor mov dec or pop stc lcall sbb aas xchg sbb mov aaa js aad jnp jno and (bad) es es out jl test xor pop popa inc into pop sub je loope out jb xchg xchg lea aam lods shlb sub cltd push mov in jecxz mov lret push in in add mov cli lods inc in add int insl mov or xchg js cwtl inc and out push push mov clc jg xchg jp loop dec ret inc dec jno push or cmpsb cwtl movsl sahf jmp (bad) mov mov ficoml or flds lea mov imul sbb sarl pop pop sbb pmaxub aad rorb stc jp icebp hlt lahf daa push (bad) out mov lods nop inc cwtl test mov (bad) decl push or sti outsb sub incl lock (bad) pop faddl or or mov xor adcb jno add dec adcl dec push dec push mov stc mov fisubrl inc std push or iret inc fwait outsl call iret inc daa pop fisubr cmp mov repnz add fdivp out pusha and and push sbb add imul push ficoml inc sbb push cmc sbb jp dec sub cmp (bad) int3 jmp xchg sub lahf mov and cmp mov ret mov popf push aas out in sbb dec add and xor orl ss pop sub or push mov push xchg or jmpw or pushl popl mov mov mov inc ficom dec xchg pop clc xor jg fsubs outsb push jae mov cmp aaa push out push mov xor dec lahf dec push (bad) add shlb push lds sbb mov (bad) stos je jmp out cld push jb push stc aas xchg out xchg insl cmpsl push fs sahf mov iret sub test cs inc in rorb stos xchg lcall adc and es lcall pop mov lods (bad) adc push lods fist push test (bad) push push mov push and xor lret pop sbb arpl push add cmc inc fidivr inc add sbb outsb push insl fldcw test enter int cmp out mov ds xchg movsb ss insb scas xlat test add push mov mov stc stos xor xchg outsb mov data16 mov out mov and mov popa push repnz out fwait sbb lods push inc xor stc sbb int3 lea sbbb in add inc clc adc cmp (bad) je adc repnz push mov sbb or mov bound ret clc fwait mov (bad) jg pop dec or cmc les mov sbb dec mov imul pop cmp push mov insl icebp stos rcrb jp enter mov mov jb lcall mov push fmull inc hlt les lock xchg xchg icebp sub pop xchg cmp leave addr16 adc cmp pop add dec mov pop (bad) (bad) in inc pop sub cmpsl gs push in loopne sbb lret xchg cmp adc fisubl xchg (bad) push iret mov xor jle jmp sub inc sti je stos xor testl hlt sbb cltd pop add add cwtl shlb xchg push outsl cmp scas mov sbb add test sbb das daa movsl imul mov mov negl cmp shrb mov out cmp aaa add jnp movsl sub and (bad) sahf pop hlt std sub iret jl or xchg sbb jnp imul rolb adc mov mov mov ffreep aaa das popf adc (bad) sbb dec inc mov pop imul or mov sbb cmp out and test inc jge or aaa pop mov ret mov mov inc sub dec cmpsl fimull cmp loope mov jmp cmp lods xor test lret add cmp or adc fdivs add pop mov push xor sbb jnp sbb push scas dec mov jo popa xchg (bad) push (bad) out icebp pop popa outsb lcall sahf in aam xchg (bad) nop push out insl jl dec and ror pop lock push xchg xchg xchg xchg shrb adc gs bts rolb mov fs sahf in mov xchg repz fnstsw adc add push rorb and pop aas push sti push adc shll insb repz cmp call push inc jge xor pop add and call out add pop mov cmp fwait jp add and (bad) cmp add ret sub pop roll lds sarb cmpsl sbb xchg mov lcall ja clc mov (bad) lcall inc arpl push jmp aaa mov ljmp inc in inc xchg loopne dec aaa pushf jl addr16 pop (bad) push lock fldenv add in jle sub out xchg iret pop add mov fs xchg fisttpll int3 push jbe jbe or xchg out icebp aaa (bad) int mov push mov inc sbb push out dec push adc bound and mov aaa shrb push pop sbb cmpsl addr16 push push or mov mov pop mov jbe fimul sbb cs popf and mov in xchg cmp dec lods mov loopne push test lret call xchg fwait mov adc sub data16 (bad) icebp in stc xor add arpl push cli mov dec mov call jmp ret inc xchg jmp or out cmp inc jne mov sbb insb fwait int3 inc inc aad js dec aas repnz test xchg dec push lret add lret push (bad) test loop adc cmp mov int3 aad sarb lret xchg lcall mov jne and or and daa dec cwtl inc pop jne xchg data16 dec (bad) jno hlt or rorb in lret sbb jo push jno aas adc pop aad insl js pop or xlat repz leave leave cmp test loopne jg sbb sbb inc and into mov xor (bad) aad rolb lock xchg cwtl es ljmp addr16 mov add lret jbe shll xchg sub imul movsb (bad) jmp add shll sbb push js push pop push pop push in pop repnz xchg mov test and jmp mov fildll pushf (bad) adc es sarl push scas xchg cld imul cmc fldlg2 xchg dec bound jne push cli pushf xor aam jle fnstenv test inc stos insl or int3 mov pop jns dec dec lret popf popf or loop dec out push mov and imul cmpsb pop push and dec mov mov repz in sbb jecxz out sub idivb mov test and outsb add mov add inc push push es or ljmp loopne or addr16 mov aam mov xchg pop cli stos (bad) mov repnz adc cmp and mov repz cmp sub inc scas sbb js xchg imul jge cld jae sarb pop add stc push (bad) adc sets fstpl push (bad) mov or enter pop jle or cmp sub sub adc aas dec mov mov incl dec sbb inc int xor flds and loopne ljmp lret jbe aam in lret add negl aas jmp cwtl int dec lds and cmp nop push arpl adc out (bad) je jns addr16 bound xor cmp shrl sbb stos adc int inc dec push daa mov mov pop ss test sarb ljmp jo sbb fs cmp cs ficoml insl lea sub xchg test xchg xlat es imul cmpl push (bad) xchg insb fs mov add pop jae jp dec popl mov es cld stos lahf leave cmpl sarb or cmp xor adc adc inc addr16 insl ljmp sub mov out jnp jo scas sahf xor push cmpsl cmp insl sub adc inc out xor push mov and add mov jae scas cltd inc push insl inc dec leave xchg dec inc popf fcmovnbe stos add dec jmp jl jge cs ja scas cs jo test lods out mov push loope bound xchg (bad) adc arpl fucomip inc lods mov in jecxz lcall pushl ds je cmp or xor xlat out jle shrl xor std aas mov push les std es ja imul cmc cmpsb (bad) fcmovnu scas push in orl xchg aam lahf sbb outsb (bad) jle bound and sbb ret (bad) push jae pushl mov jl jge xor mov rcrl xor lock repnz push aad (bad) xor mov enter xlat pop stos stc not inc test xchg ret rcll push and lahf gs int3 out add and and aad push fiadd stos mov icebp in jl ja (bad) mov les nop movsb jb aas inc cmp sbb mov sbbb std pop mov pop int3 mov std imul pop jl or dec scas jg pop sub cs pop (bad) scas inc and jns jecxz push popa add loopne addr16 in fldcw es dec hlt add mov imul or and lea mov inc addl andl lds sbbb mov and or xor sahf sbb push stc jl dec das jmp mov push mov jge push lods mov cmpsb or popa outsb sbb (bad) insb mov mul pop push push hlt lock mov xchg sub lock inc ficom dec xchg pushf cmp icebp stc jno into js jecxz lret dec gs scas jmp jmp stc insb lret cmp stc xchg cmp js pop lds or xchg inc orb lret jp dec or pop cmpsb in jecxz and cmp cmpsl jo call aaa iret mov shrb mov pop pop daa in stc cld je mov arpl add pop inc lock in test adc fiaddl adc pop imulb pop js xor insb ljmp jb xor ret cmp or mov dec pop sub mov or cmp nop mov mov inc cmp in mov pop inc xchg adc jnp inc (bad) insb jp pop dec hlt pop (bad) xchg jp clc (bad) call into enter inc (bad) adcb sbb or jle cmp test cmp inc popa lock (bad) sbb or popf jb dec negl and out cli mov loope mov jg xor pop mov pop (bad) mov mov mov (bad) push jb cmpsl xchg dec dec mov mov jbe dec divb push test out movsb outsb xchg mov add pop aaa nop (bad) and cmp iret cmp and clc rclb xchg loop jnp dec bound adc ret dec aam sbb pavgw or cmp push pop sbb loopne imul dec xchg mov mov adc add negb (bad) mov add cmp mov cmc pop cs ficoml jecxz mov mov (bad) jnp mov loop lahf jge sub movsl xor push jb cltd sub xchg push ja mov or stos cltd push mov sarb push jge mov pop imul push movsl test xchg in push inc jne rcrl and mov (bad) stos ja call cli or imul mov mov lea add xor xor xorl sbb pop mov in sbb cmp icebp imul mov (bad) pusha lods lcall decb neg in dec test inc fcomps outsl scas lcall xchg pop idiv push ret dec fcompl insb call lret or shrb into xchg int pop mov pop mov lret mov push inc pop std dec pop (bad) loope sub dec mov inc mov add mov pop cmpsl cwtl in mov mov test mov xor sub or push xor out fidivrl cmp pop inc int3 ret lret daa (bad) or (bad) xchg mov jle nop out into mov test dec xlat lea popf arpl dec xchg fld mov sbb pushf stc xchg (bad) bound ret xchg cmp pushf push and sub adc fcomp loopne xchg cmp test ret idivl and dec (bad) push inc rorl xchg movsb or stos pop incb pushf mov popa mov clc cmpsl add sbb mov adc lods scas es adc add jns mov test pop and movsl pop gs jge iret xor and stc cmp inc adc ret dec fwait lods (bad) dec pop and lods pop fucomip inc push add mov (bad) or stos mov cmpsb pop xor shll sub outsb fs dec pop jne into sub lret xor ja jmp aam xor (bad) xchg cmpsb ffreep jmp dec adc dec dec jns cmpsb fisttp jns (bad) dec push sub fisttp push lods lahf sub push js add add lods (bad) dec lods lods decb xor xchg jle inc pop push jo jmp ret cli mov out (bad) dec dec test and dec inc add sub dec mov sbb xor lret into xor lock jecxz dec sahf aad sti cmp dec and data16 ffreep jno mov or xor minps fwait xor adc mov mov dec adc adc xlat sub pop or hlt out (bad) ljmp mov ret sub sbb (bad) dec or adc jnp and mov push pop or clc je test int mov sbb movaps inc adc sbb cmp mov test nop stc pmullw dec in dec xchg mov js xchg movsb jg cmp js in jo cmp aaa mov push test and das adc jle lcall inc jle mov inc dec les xor (bad) cltd (bad) sbb cmp loope sbb and aas sbb and xchg xchg xor fwait notb pop fwait xchg push sub lahf cmpsb mov add mov es adc mov cmpsb insl mov ret and xor aaa insl fbld jb adc xchg push hlt gs nop adc mov cmp push cli xchg dec mov dec cmpsb pminsw push mov lods dec jmp pop jns icebp call mov push pop test pop cltd iret mov pop dec inc mov pop stc and mov (bad) mov push inc popa js js aad dec jmp popa test dec imul push inc or mov sbb add sbb adc or sub mov outsb lcall addr16 test pop fdivl ret setb jmp inc cld xchg inc sbb clc (bad) xor mov cmp sbb sbb ret cld xor (bad) sub mov cwtl xorb add add add dec (bad) push int mov cmpsb xor pusha cwtl inc and ss lds cld add imul push or adc xchg mov fs push sbb mov fs fimul push sbb sub adc sar test fld cs sbb cmp imul nop test (bad) xor cmp mov scas stos inc mov daa mov mov cmp daa mov mov or sbb mov (bad) xor pop sbb outsl popf sub mov adc cmp (bad) pop loop pop leave jne pop mov xor jb or stos ret mov (bad) inc and sub jb cmpl hlt enter mov xchg out pop mov mov cmp (bad) insl hlt xlat lcall jns inc call add sub cli ljmp (bad) mov (bad) pop push push arpl sub (bad) enter (bad) add (bad) adc or cwtl out insl xlat pop push fdivrl push out je pop imul jbe daa loopne push push icebp fcomps inc mov or push xchg mov (bad) jle hlt push cmp int sub aam mov adc push insl xchg and ss push frstor sub das jecxz push outsb add xchg lahf insb call shrb les sub or ds sub jnp push iret ja dec or and inc sbb inc int (bad) mov loope or roll jecxz push dec stc (bad) jnp test arpl or insb mov out rcr stc out sub dec sbb xor mov ljmp xor jmp xlat stos dec or popa test push das fsubs insl mov imul les push (bad) rorb sub xchg inc lods insl add jno push in sbb pushf in lret cwtl loope jno pop fidivl jl data16 sti pusha (bad) arpl stos xchg xor sahf push vsubsd fisubrl push loope push out sbb pop sbb add ja pop rcrl xor data16 xchg add jecxz push mul jmp cmp (bad) mov dec rorl dec lock (bad) pop popa andl sti daa lock jl add push insl inc mov roll dec das in enter or mov xor stos sub mov xchg js cmpsl in push add loopne pop mov jle bound sbb dec cltd in inc popa lods fcom add cmc push push imul lds mov pop xchg add test jb faddl push adc lods sbb inc lcall add pop pop sbb mov cmp mov lret faddl mov bound js push cmpsb in jmp adc pop sahf iret ljmp shl icebp dec pop sub test bound shr sahf addr16 mov mov in sub js jg std fdivs pop (bad) int3 icebp int3 xor cmp lcall bound ja dec adc add xchg inc scas in in xor xchg (bad) outsl in movsb adc shrb icebp (bad) imul (bad) dec pop fcmove sub jg jns jns mov and push pop int ljmp lock pop cwtl inc ljmp fsubrs lock andl (bad) loope pop push (bad) test repz xor push mov mov pop and lret stc pusha out pusha mov clc sub inc sub into xchg das inc lahf call in pop rol jo cmc push loopne aad jge adc cld fbstp imul push mov pop stos loop push inc cwtl mov int xchg cltd xor and jecxz add xchg out imul inc movsl ja call xor sub xor (bad) pop jb jo sbb (bad) jo xor (bad) inc cmp and push lds and int movsl cmp sub sbb stos and stc mov pop mov mov loop movhlps fcmovnb cltd ficompl cwtl dec mov mov cld (bad) int3 test xchg popa ds test dec enter ret or pop xlat out not dec sub xor or or dec cmpsb clc aas or not imul add cltd fisub xor or aam xorl or neg out or movsb (bad) mov shrl dec xchg lock or not sub or mov pop add xchg push dec and and ret and sub pop xlat popa xlat lret and xor outsl add or sbb stc inc ret (bad) repz cmp fadds xchg mov lods outsl sub scas bound sub mov adc rcll ja add subl adc and inc clc and mov scas out repz dec inc jno push adc or push jecxz je imul jbe xchg (bad) mov daa sbb aad xlat aas push mov sub or lahf push cmp outsl jle ds adc push add xchg aaa mov xchg fwait popa daa jns movsb xor mov mov call inc cwtl dec xor lock sub cmp dec xor loop call mov arpl in lods sbb pop and dec and add aaa insb pop pushf and adc mov lock xchg sarl xchg mov sahf sbb ret inc cmp sub es push cmp lods pop cmp jbe jno pop inc fsubs bound jnp jb orl and mov cli push sahf lret fsubrl push xor popa add or jns mov mov shll vcvttps2dq jbe mov int3 jge lret push xor cmp cwtl cs pusha mov in mov idivl jmp mov push mov fcom dec bndstx xchg and push sarb insb cwtl iret jl pushf xor enter cmpsb jmp (bad) roll or shlb adc cmp add andl iret mov mov sub ds mov jns (bad) lods cmp clc insl mov clc inc js,pn mov imul insb leave adc iret in sbb xchg test clc orb xchg movsb push xor outsb pop scas fdivr pop enter cld inc cmc sub inc push cwtl mov lret enter in add push xchg enter pushf aad push imul fidivr sbb rolb pop fwait leave dec mov adc adc sbb jecxz xchg int3 into fcmovnb (bad) faddl mov dec lahf mov into rol int3 ds es mov xor sub and or jbe sbb cmpsb (bad) jno iret fisttp (bad) or (bad) repz inc mov add mov pop fistp neg (bad) cmp mov add dec and inc dec add adc (bad) sbb xlat (bad) cltd dec dec ljmp lods dec add inc iret cmp adc or stos ljmp jl flds sbb sub xchg inc inc adc loope rcll popa and fbld fcom lds jne into es pushf dec arpl jnp sbb mov dec and (bad) stc add pop repnz out daa test pop xor push fwait inc adc movsb in mov enter shlb fnstenv inc enter loopne mov mov aam inc cwtl mov stc or popf iret mov cli mov test cli mov cmpsl fidivr rorb and fdiv adc inc push jbe dec cmc mov mov add lret faddp and insl arpl inc je fbstp dec clc arpl mov ret mov std in clc sub int3 (bad) and mov into adc inc in jecxz into and mov lret inc adc adc adc les push sub mov jmp loop cwtl add into sbb (bad) les xor pop lsl pop pop rcr jge repz inc jne fisubl inc insw cli out jecxz andb scas stc add sbb cmp xor cmp mov dec or dec ret div in imul or (bad) sbb push iret (bad) push mov xor arpl xor lret (bad) push in xor cmpsb ss mov fidiv or sahf lds (bad) in rol (bad) mov mov pop cli xchg es fidivrl mov or loopne and out sti cs push sbb mov pop sbb lock sub out or sbb leave jo adc inc pushf fwait mov (bad) neg push cmc psubw inc and loop fstpt sbb sti lds adc mov jns sub lds sub scas faddp pushf (bad) outsl test lret jne cmpsl dec xor imul arpl addr16 xchg xchg cmc test inc push mov and iret and pop and sbb (bad) fisttp enter dec cwtl loop inc aas addr16 fcoms jae cmp cltd inc fsubs (bad) jne lds fsubrs push int3 cmp mov dec aaa (bad) lret lret js daa popf fmulp ds mov or clc (bad) das int3 xor lret adc inc rorl rol mov mov bound mov mov mov into lock dec ret enter fstp push rorb rol mov pop std loopne mov out inc loope and dec dec ret xchg or int fcomps shll insb mov in in orb xor out add dec iret mul pop fldcw dec sar hlt pusha cwtl call mov les call lret into shrb imul lock outsl ror fmuls xchg and fs mov js das and xorps (bad) cmpsb xchg cmc and inc gs cwtl sahf jge int fnop pop and pop cli je pusha cli jmp inc or je or test xchg xchg (bad) push aad aad shll push sbb dec call jo imul inc enter mov mov fadd dec enter enter push add mov inc rcrl fs cltd jl add fistpl repz ret enter mov add adc add and insb push inc movsb mov movsl cmc insl push pop icebp inc scas mov inc xchg stos arpl pop or ret push jbe mov and mov or xor and mov jo jae sub dec sbb icebp outsl imul jmp jle jge jbe push test sbb cld (bad) icebp jae fwait and in in jb and in stc adc or and mov test das hlt pop jecxz rorl movsb js test or rorb dec pop movsb mov pop in inc aad xor fwait (bad) pop jmp push jb jle and fbld jbe mov ja sub mov mov pop jae xchg sbb push cmpsb lret fbstp (bad) pop sub push push bound and jb out iret xchg sub imulb or cmpsb push ffree cmpsb pop decl push cmp mov sub inc lds test mul (bad) xchg pop fstpt and push (bad) loop and pushl sbb push cmp pusha xlat mov jbe xor push ja (bad) mov add mov mov lret in mov mov icebp es in into add and imul inc js sub iret inc adc fcomip mov jns jae lods push ds jecxz jae mov ja in icebp mov pop fldl in cmp div ret and xor cmpsb mov push (bad) (bad) (bad) jnp dec ss insl inc fbstp fstpt mov out lahf mov pop jge test pop dec out inc cmc and outsl sub push test add mov dec sbb es hlt mov adc fbstp sub sbb test jecxz pop popa imul idivl mov mov inc arpl dec adc mov scas das adc hlt jnp add mov push ja push xchg je pop mov or enter pop mov (bad) cmpsl movsl push sbb dec cmpl mov shl (bad) (bad) ja jns mov mov dec (bad) ficoml jge mov jp and fsubs and push lret xor and in test inc push mov add mov (bad) testl sbb cmp rclb (bad) scas das dec ljmp in (bad) mov jbe sbb mov fstpt add or leave lret adc stc (bad) inc or pop popa inc sbb adc negl xchg adc pusha xchg sbb cld sub xchg loope pop cwtl pop dec int xchg mov (bad) in js add mov aaa jl mov xchg xor enter pushf pop cmp mov or mov cwtl movsb xor pop jnp add fdivs xchg rolb movsl das mov mov pop call lret xor and ja sub aas add jno mov clc sub cltd ljmp sti sub add insl cmp pop pusha push pop jae add popf daa sub jno mov push imulb add arpl gs cmp mov cld movsl sti es push std mov and jne out adc rcll mov outsl fcoms mull mov jbe jp mov rclb sub js dec lahf into dec test loopne and das sub ss scas sarb in dec popf inc xchg dec xchg lds dec inc mov pop in or jnp xor clc clc mov xchg bswap dec lret lods cld sub insl cmpsb imul jp or imul jge inc fnop call (bad) cld sti push pop bound or push outsb scas das ss in leave xchg popf jbe je mov jns pop push xchg outsb ret in lds mov stos aad jo sbb xor pop insl cmp mov in loope in pop jecxz jp fstl sub sbb sti mov sti sbb inc and call les outsl cmp dec or cmpsl push push pop jl sbb rolb lock push ss ljmp mov inc cmp inc je lahf incb pop mov add sti sbb sahf scas sbb fwait pop adc xchg movsl data16 arpl data16 add xchg xchg push aad adc pop and je jle adcl test jge or push (bad) std aaa movsb jno scas mov pop sub jo (bad) adc mov call out jb inc addps lcall mov and ds mov jns inc pop js add mov dec xor push (bad) lahf add sbb xchg (bad) jb (bad) arpl popa addl sar fnstsw fdivr inc mov inc pop mov out inc adc addl adcl out fwait xchg dec test cs pop aam lods or pop push scas loopne ds mov leave and xchg in aas mov cmp pushf xchg mov addr16 call mov popa jns mov or imul std adc orl push mov inc add mov xor sub jle cmc pop xchg lods sbb cmc xchg adc ja loop add mov lods jmp stos je xchg adc (bad) aad (bad) pop mov int3 push pop test push popa mov mov or jne mov shll (bad) push and sub xor jmp sbb imul push sti icebp xor adc shrb inc mov jbe push jnp mov rcrb cmp mov movsl fsub jb shr lods pushf js or mov dec or ljmp out enter into out enter nop sub add daa pop hlt ja in or push cmp or or xlat add int3 and aad in cmpl aas les add add test scas pop test test jmp aad jo push xchg cmpsl add sub outsl push mov scas lea shl pop push les add fimul nop sarb lods lock xor dec mov outsl ret or movsb out enter mov sub clc out inc clc clc dec (bad) pop lret sbb xchg dec enter scas into enter lret dec enter push and lret dec mov enter cmp push nop jae clc xor mov sub and int jnp push xlat dec and add clc loope cld push fldt (bad) clc imulb sbb fs adc lods mov out in je sub (bad) jl xor sti sti aam out iret xor cld sti sub inc and cmp fs push stos and add cmp push mov or (bad) dec movsl not lret and dec scas notb dec sub clc fisubl mov dec cmp or xchg lret adc imul adcl dec pop dec push xlat or das add sub cmp or push xor mov sbb add imul and pop dec mov xor stos xor mov test not push mov xor loop iret jmp (bad) or imul pop sub sub cwtl jnp lea inc sub cld xor clc jns enter (bad) je int pop int3 push call (bad) (bad) mov (bad) sub int3 les aas data16 hlt pop inc nop leave daa xor or cmp pop fidivr or add decl clc push (bad) test jmp clc mov add adc (bad) push xchg mov inc pop cld out pusha iret and push mov aas int3 divl fidivr dec xlat xor hlt orl add cmp dec xor movsb aas add mov xor dec test fcompl dec daa shlb lret cmpsb cmp cmpsl cmp ret je lret mov and aas mov mov sub jns aam cmp push sbb and mov sub xchg xchg sbb push hlt popa aas and cld iret add mov vunpckhpd mov xlat cmp popa cmp xor inc lock pop xchg mov mov push pop stos xor pushf es xor add out repz pop cmp int3 scas sub sub jne aas inc pop clc out push sti add mov pop jb dec mov in cmc int3 jmp mov shll add and cmp cmp hlt sahf push test clc mov loope or test cmp or dec sbb dec adc cmp cmp adcl fwait jnp mov hlt add rcl mov (bad) popl mov xor jnp cltd shrb ja aad int aaa leave cmp in daa hlt jnp push jg cmpsb movb fiadd cmp ficom out leave dec dec mov hlt mov int mov push sub jecxz inc pop jl scas shll fisttp cmp jo icebp aaa (bad) fnstcw jl jno xchg lea iret ret push mov pop inc ljmp daa ljmp mov push cmp dec dec daa cld sub pop dec jecxz jns xlat jle jge aam jp cmc fnstenv xor aaa fisubr rolb mov cmc cmp ja frstor mov pop mov push cmp sub mov aaa cli pop ret jne mov pop xchg aas add sbb push cmp cmp lock aas dec pop jl xor sub aaa lret out mov das aam (bad) push xor es out es in pop xlat js aas rcrb cmp pop divb sbb inc xor cmpsl jp cmp sbb leave paddb ficoml xchg and (bad) aas dec pop (bad) loop popa (bad) adc imul ja lods inc stos lods data16 inc sbb add xchg movsb fistpll mov hlt iret sub or inc dec es (bad) dec or mov neg add (bad) enter (bad) mov les lahf sbb (bad) jmp xchg lods sbb cmp aaa or sbb inc push sub test daa jo test or jb int ss shrb mov sbb inc addr16 mov dec and popa loopne push add xor into loope mov cwtl fwait or dec sub cwtl adc test loop (bad) sub push jne xor mov mov pop mov repnz flds xchg js test (bad) int les addr16 lock dec mov imul addr16 xor fldenv imul shrb rolb cwtl cltd test dec loop fidivl mov int leave push loop bound pop or adc test repnz leave and dec fisttpll imul jl mov roll cli outsb push sub mov mov daa mov js addr16 or loop test add js inc orb ljmp lret leave js int mov pop cli or sbb addb lret inc (bad) mov arpl clc (bad) in je fmuls loopne ss jne daa pop divps xor repnz add xor jne inc add push sub out loope cmp sub into ret ret nop (bad) imulb in aam fwait outsb xchg cmp lret (bad) cltd (bad) cld jb push enter pusha iret (bad) mov pop inc call mov test enter add inc push sbb add call data16 (bad) call test xor jg in mov inc enter cmp lcall sahf incb jns or sub (bad) pop ret into pop lret fs sbb sbb pop mov and sbb fisub int inc cs bound add jo pop hlt or (bad) adc jno hlt out or stos test pop cmp clc mov lods cmpsl jns clc and (bad) imulb sub adc lods xor pop adc jns mov lahf jl jae hlt jge stos add inc adcb stos fmull mov ret out cmp jbe mov sbb and sbb fsubrp addr16 adc lods gs dec pop push add xor fwait pop in nop (bad) mov adc add popf adc notb dec push or pop stos (bad) and jl (bad) arpl jo test pushf fidivr xchg aam jecxz movsb fdivrs test cmp movsb shlb mov add push ds cmp mov xchg sbb aam mov xor mov lret add icebp cmp imul xor pop (bad) idivb mov ss sbb call cmp aas loope lea push (bad) call out das inc cmp mov xchg stos scas popa sub dec pop cs pop test jns jns jp sarb insb inc in jecxz jmp lods icebp push mov pop je cld and and cmp mov jns aad inc jo je mov andw sarl jp int sub out ss mov dec cld mov cmp test fmul (bad) call lret add add dec fyl2xp1 sbb xorl mov fimul jg (bad) loopne mov xlat mov ret test and fwait das mov pop jmp cmp lcall pop xchg inc or push sar sub pop nop sub cld cmp imul mov aaa mov (bad) aaa pop clc xor lods and jae rcll call lcall fs pop clc xchg mov cli addr16 pop clc xlat mov clc daa mov ja ror pop stc insl dec fnsave arpl and imul test mov outsl pop shr lahf push ret fdivrp push jecxz js dec mov mov mov mov mov push xchg adcl lahf push (bad) push push push daa xchg dec rorl mov mov cmp sbb dec fdivrp pusha into xchg jle xor loope shl adc outsl ljmp mov sub vpsrlw pop jmp lahf (bad) (bad) (bad) mov xor dec cs xor dec sbb mov rorb aad test cld pop (bad) adc push fcomps (bad) imul add test inc sub stos push mov stc loop sub (bad) mov lods or in lahf lahf pop jl out ret clc call lret les (bad) add add pcmpgtd mov int mov mov mov fimul jns in pop (bad) test lock (bad) test ror ret fimul fcomp xchg lret (bad) into pop clc dec inc imull out imul in gs imul xor pop jecxz cs mov movsl (bad) fnstsw xor inc dec cmp fstp cmovge lods cltd mov xorl inc mov inc sbb lods mov push and es arpl push test lock je mov sbb push jmp cs mov or sbbl les leave test ret in sbb (bad) leave notl or je (bad) and adc sbb pop jecxz lret push in insb clc movsb fnstenv and push mov (bad) loop in in std (bad) loope pop rorl dec aad cld push mov dec dec sbb push xor xor mov push test (bad) mov mov add mov data16 pop jb inc cmp jne mov repz jl bnd mov dec aaa fwait mov cmp arpl push inc testl fnsave jo outsb jbe loop (bad) imul mov sbb idivb test je mov jnp sub cmpsl es nop cmp (bad) cltd das fwait push dec sbb jns jb insb xchg lahf pop (bad) mov mov js xor je test push xchg inc sub mov data16 dec lods sub pop lahf and in les shr dec pop pop xor pop push and mov jb push mov xchg add aad ds inc jge mov cmpsl out sahf dec inc out mov and cld and out mov xor mov out pop dec (bad) jne test fistpll sub ret add movsb sub dec (bad) call jb inc pop cwtl jecxz mov in pop add and sub js pop mov ljmp mov hlt fdivrp out jmp cmpsb scas movsb (bad) movsb in insb arpl lea lds pop in in cmp fs xlat out push mov mov aad ss dec push pop jle cmp dec outsb lds subl pop sar sub loop lcall ret js fwait aam pop (bad) loopne ljmp inc push sub mov sub push sub dec mov shl (bad) call in out rcr push xchg sub adc mov insb and iret adc mov fcoms loopne pop aaa loop in inc out enter cli in mov sbb (bad) jo int3 mov addr16 clc inc (bad) aaa sbb loopne dec dec add sub dec (bad) mov lret lea jle push or mov mov jb mov xor loope fildll push in mov push jmp stos fwait sbb xor pop lods and mov jo stos add lods jge inc mov pop sub adc movsl push pop jb lcall addr16 cmp sbb fwait xlat js ljmp push pop xchg and lds inc test notl fisttp int3 or data16 pop aam outsb jge dec jo dec jge adc fldenv adc mov jg mov (bad) in sub sbb shlb pop xor cld or add and out (bad) xchg test pushf fisttpl aam in stc cmp test cmp sbb into push test insl or in pusha or and jge ljmp loopne cmp in cmp cli pushf loope fcomps mov push jbe loop push xor aas fadds cwtl push les call dec (bad) test jg fcomps mov jae ss rcr adc sbb push push push push imul (bad) push dec outsb out int3 fcomp sahf push inc in mov out mov cld in push nop jecxz rep lock lret scas sbb jo mov cld lods xchg in jle mov push mov xchg cltd pushf (bad) xor das inc lods pop jo rcll movsb shll les js outsl cmp mov int3 cmp cwtd pop xlat mov xor nop mov push orb loop or nop enter push sbb sbb out fld dec sub je js cld (bad) xchg movsb test in movsl xlat xor (bad) repnz fnop clc daa pushf and pushf push fcoml (bad) and xlat pop es pop addl sub inc jo fs cld movsl mov daa fwait hlt mov xlat loop push (bad) lahf inc popa sub (bad) (bad) paddusw mov aaa cwtl sub cmp push sub push (bad) fnsave lret ja (bad) fs mov xchg outsl sar fstl inc sub pop imul sub loopne fmul sub cmp inc sub xor sbbl add xchg outsl adc add sbb test adc popl and mov xchg out xchg sub fwait lahf popa insl add insb mov mov xor js jbe aam add mov adc cmpsb dec pop stc adc pushl mov loopne in xor mov xor mov in in dec mov adc test lds pop lea call sub aad ljmp mov rolb pop outsb jle inc sub and inc add je mov and test lods pop insl scas fmuls sub xchg psubusw dec iret fsubs push mov shrb sub mov sub outsl dec lods inc fadd push mov mov cmp int3 addr16 xchg clc es xabort cmp cs aas xchg in aam clc popf dec ud1 pushf arpl mov (bad) cmp fs dec pop hlt cmp mov push out fimul ret int3 xor jle int mov cmp ret xchg inc pop fimul sub cli push call int3 dec sbb cmp loop inc lods (bad) jae out cwtl leave (bad) sbb mov ss std enter ret (bad) ud1 mov call xchg out lds shl sub (bad) jb push call sarb int cwtl leave (bad) sbb enter jl push hlt shr ja or cmp shr pushf inc in aaa cwtl insb arpl sbb fcoms jecxz (bad) or mov enter sub inc psubusb lds xchg jo inc xchg das inc enter xchg pop js std xlat push call jb cmp cmp arpl bound sub lods test cmp mov mov enter bound and int3 dec dec or cmc call adc jbe fsubr (bad) jne (bad) xor inc (bad) into int3 xchg pop das mov pop push add dec mov and add std inc ror pop jo out push enter (bad) sub std negl cmp ret int stos repz dec push test sar fisubl pop dec inc and sub repnz das xchg xchg add jnp sbb pop or add add cs mov mov cmp into fwait pushf ds lock jl and fdivs sub adc movb bnd sbb scas int3 stos sub sub call fwait dec mov or (bad) repz or mov dec pop lret inc dec or push mov adc test adc sbb loope mov mov movsb fcoms sbb dec insl push mov aas xchg movsb mov rcrl fdivl dec (bad) lods inc pop stos cmp notl test mov sbb push sbb xor pop clc repz or daa fdivr mov clc scas mov add test dec and cwtl dec mov fcmovnbe lock and (bad) lret jge enter test add dec dec push jnp dec scas cmp mov lock aaa fsubrl repz std out rcr das rcrb cltd sub or lock lret (bad) dec fldl cmp hlt push insb leave mov sbb inc repnz mov pop rclb imul sbb mov xor stc push ss int3 fstps jmp inc cwtl push and dec add fcoms sbb xchg dec lret popa mov or js xor pop mov aas repz or and mov in jno lret jl inc cmp pop or (bad) and enter mov cmp out in and stc dec push mov pop cs xchg fsubs mov stc mov mov add out jg fsub into (bad) aaa jns imul or jle push xor in dec arpl mov cmp add les rcll mov adc rclb mov mov mov dec in fmul hlt (bad) cs jle xor inc xadd sub sub mov push gs dec inc insb pop and rorl push xor jmp xor and or clc ljmp lahf mov clc in scas fsubrp pop and xchg cwtl call push clc stc out shrb cmp xchg aam rclb mov cmp rcr dec lods (bad) jmp out into in xchg out lcall mov enter mov sub fsubrs rcl enter (bad) repnz lret pop ljmp or lret pop jae add fwait rclb cmp ret cmp fsubl (bad) dec pop test sbb mov mov inc pop mov push rcl mov aam mov jo or enter rcr mov cmc enter in enter imul dec dec fisubl xor icebp push or nop test pop test add mov xchg lock sub outsb jmp sahf imul or (bad) mov enter sub jecxz rorl push inc lock inc into cmp mov nop cmp push dec (bad) fiadd loop aam fmuls (bad) lock mov mov cmp lret jbe int out ret and dec mov mov cld loope sbb push xor cs mov leave lret push pop lahf inc fimull mov xor inc (bad) mov mov aaa sub es pop jmp (bad) aas sti shr xchg es imul sub jo sbb pusha fldenv (bad) into cs adc mov stos nop fidivl jne lock (bad) fldl adc jbe dec imul adc (bad) in lds roll cwtl or (bad) ja shl (bad) cli sub shl (bad) lret (bad) lret mov lock xor or cmp pusha orl mov ljmp pop xchg sub aas fildl call fiaddl or push shlb outsl cmc xchg mov mov inc iret (bad) adc or imul popf or sahf popf dec mov or jl popf (bad) xor rorl aad cmp pushf jle cmp pushf jl add push inc adc ret loopne sbb mov loopne (bad) add jae sbb lea mov jmp inc inc xor out and in adc cmpsl lahf rcl or loop push sbb push sbb mov int3 in aam lods push (bad) das jo cmpl ss movsl inc pop std gs inc (bad) outsl arpl cli lcall test daa test lret pop cld inc leave fcmovb int3 cmp test mov das das inc adc int3 cmp call mov out cmp mov sub pop leave push cmc xchg orl icebp push jge enter into xchg rolb fcmovnb push loope dec fs push stos add mov mov pop (bad) jne adc aad in push dec les les cltd std in imull pop in addl cmp into sbb test mov or subb cld hlt fisttpl stos (bad) xor scas div xor push rclb test ja mov repz imul mov cld mov stos lods pop sahf (bad) sarl jecxz xchg jmp dec pushf pop repnz insl pop cltd sbb fstpl sub fs xor loope dec sahf mov std test scas add dec (bad) cli rcr mov push les lcall jbe mov jo mov cs mov stos jo push mov jno rorb loope call loopne imul iret push or mov dec inc ljmp int3 call mov dec jecxz rol test dec enter enter loope call into daa call fxch push ljmp pushf rorb mov rorl call jecxz int dec loopne pop test pop mov ror xor int3 call mov rorb or jo pop or shrb call push lret sub pop mov or mov and or mov jmp shlb jmp repz rorl loope rorb loope scas mov jbe mov adc int3 call pop test lock icebp pushf rorb out fxch push ljmp enter int3 loope rorb loope call jno push jbe (bad) mov call mov jo pop test push dec mov addr16 jo scas mov and cmp and push lcall test or and (bad) mov test ds adc and fstps pop jns mov pop sbb sbb pop adc repz das notl cmp and jmp ds add mov mov push and das inc pop insl xchg mov xor popa inc aas ret xor je sub pop push push popa in cli sbb fistp repnz mov mov gs sti or popf test loopne sub and jbe push mov dec sub sub or lods sub test inc jecxz jmp mov and add cltd popf or imul cmc ss add sub mov cltd movsb and cltd mov mov mov xor mov mov ljmp in lcall pop adc adc and std jle jb cmp repz dec xor xchg mov or popa nopl adc xchg add adc nop and adc push or mov repz add jmp mov mov xchg lock xchg shrl jle push and inc movsl sbb jnp sub sub movsb sub cmp mov mov fcoms add push (bad) gs mov mov jbe scas iret jecxz lahf subb mov inc les pushf cwtl not fnsave push xchg test (bad) ss sarl mov int3 es push lods (bad) sti jbe jecxz mov inc movsl push in jl xor sub loopne dec xchg lret inc xchg xchg arpl arpl arpl arpl lahf push lahf sbb pop in movsl lcall mov jmp shrb and inc jns dec inc imul jmp (bad) or lea cmp mov fbld pop dec pop dec pop int int3 pop cmp or sbb mov mov adc cmp test test pop pushf pop pop pop jb xchg jns xchg inc pushf push nop cbtw push pop rclw mov mov push mov jmp jp jbe sub das lahf mov idivb xchg push and pop add sbb push dec jmp shr stos (bad) icebp mov stos fistl add in lahf call lahf inc inc jbe inc inc test rolb incb insb mov cmp stos jae nop movsl jno xchg sbb sbb lcall inc mov push mov inc stc cmp push inc nop flds jmp sub adc sbb mov jecxz pop imul stos mov hlt outsb mov and sbb loop loope test or scas mov sbb add sub jo (bad) not sub mov pop mov mov inc sub shll adc or or mov sub add sti ss data16 cmp jl in cmp imul loopne test rcll rclb xchg mov xchg inc out mov repz les jo and cltd and arpl (bad) movsl nopl xor dec dec and cmp mov (bad) arpl cld fstl cmpsl aad scas sub mov adc fisubl mov aad push jge or nop adc pop jns push hlt aad fidivrl push scas nop mov dec outsb cli leave bnd jns mov pop cmp ljmp fsubp and mov adc xchg les out xor sti adc adc xor or sbb mov push fimull je jp inc add cwtl rcr out cmpsl call inc xchg loopne jae out sub (bad) loopne es sub xchg lods (bad) mov cmp sbb lods dec dec arpl push xchg mov or pop sub inc pop sbb es (bad) adc push mov adc push jg ret lcall lods push cli (bad) sub (bad) jns jp subl scas jle mov mov fmulp pop in adc xchg cmp mov xor aaa pop inc pop dec lock jne (bad) adc int cmpl dec cmp dec jecxz nop lcall and (bad) ss enter popf setno push mov fistpl jb mov jg insb push and dec scas inc xlat ja lods sbb bound daa popf inc jb sti push push js mov sbb mov outsb popaw mov cltd mov push sbb dec jno lods push pop pop stos ss xchg xor rcll daa inc push and or push xchg pop bound pop sti out sahf mov stos inc xor shll jle xchg jbe rorb and movsl int pop mov adc jb xorl adc (bad) and mov out loopne xor ds out push out inc inc ret bound mov add out mov cli dec cmp mov repz addr16 cmp scas sub data16 xchg lods sbb push xchg popf push test insb cltd mov mov das imul test lcall mov out xchg and push mov mov movsl xchg sub mov stos cmp mov push xchg or pushl sub mov pop (bad) scas xchg pusha mov or int3 sub int adc ljmp pop les inc mov lcall leave sbb add inc addr16 movsb popf or aam lret mov icebp xor xor aad xchg add push pushf pop inc test mov inc sub pop mov xor dec sub mov js dec xor pop inc mov sub xchg mov or (bad) push cmp sub cld and clc sbb jno pop repz add repz sahf or jbe xchg adc cs push push xchg ds and mov or data16 cmpsb jnp scas bound out mov push mov stos jno jo mov xor and mov push daa int cmp cmp je fcompl je adc or adc test mov jle mov pusha movsb and mov mov cltd stc cmpb mov xor sub popa jnp xor lcall adc fadds or adc pop inc inc insl aas jae jge push sub inc dec mov lcall dec xor fstl adc sti fidivr mov in push ljmp mov jg pop xchg or sbb lods push mov jne arpl and subl sub insb xchg lret jnp fstps popa cmpl imul ljmp adc add xor (bad) pushf pop sub daa sub and js pop adc push fcmovb jb pop out xchg sti adc out notb shll cld nop insb out sbb jp inc jne adc xor loop add mov inc mov pop push xchg lods rcrl jns add push mov shrd push shl hlt xchg clc outsb mov (bad) dec aad jno rcll ds cmp jnp ficompl xchg xchg icebp jne lds and cmp cs xchg popa add xor lahf cmp es sub pushf pop out push mov push fsts mov xlat jne sbb or fsts sub mov xor mov dec mov sub cmp inc stos scas dec sub pop xor mov and adc sahf sub call mov pusha pushf pop in int3 mov mov jmp jle jne add lods scas jle (bad) mov pop cmp xchg movsl leave adc out outsb stos std push lods unpcklps lahf orl (bad) arpl ror ret iret or sbb pop inc bound je pop gs push aad xchg mov xor and xchg pushf addr16 jo shrb in adc xlat add je xor inc roll in movsl scas mov out mov int xchg das dec mov and push pop push push das mov sbb pop push lds in and sub mov adc mov push jle pop push mov adc (bad) ljmp mov sbb ss test cs xchg test in sub in jg push push xchg or ficompl mov mov add ljmp nop mov (bad) jp adc mov jle ljmp jmp popf rol xchg and sub pushf adc sar (bad) fisubr in dec xor js fwait xchg rolb enter (bad) lahf cmp cltd mov adc xchg mov les push in test mov jle sub pop sbb rcrb std popf aam mov mov adc test sti mov fsubs ret pop xchg mov sub mov imul clc push stos repz lahf inc push adc xchg mov stos jns stos pop mov dec sti jne or enter jnp test or dec loop inc cwtl jae push stos pop notb push fsubrs mov inc (bad) scas push jmp popf dec cld jbe pusha ffreep xor (bad) pop mov mov aam inc iret out mov ret adc (bad) jecxz cwtl mov dec cmpsb scas cmpsb int pop fiaddl icebp sub mov mov xchg test push add jno mov add mov and jno jne mov mov push (bad) sti xchg daa std push mov leave jp popf pop mov push movsl inc stos mov xchg mov inc xchg cs push add out and xchg mov bound out cld dec jle pop adc or rclb push xchg sarl mov pop (bad) ds repnz mov stos ja adc stos lods movb mov fisubl push stc cli push nop push pop and dec lods arpl cmp jo cmp mov cmpsb das out cs jne xchg testb sbb rorb scas push push add test xlat scas ss popa aam das mov aam enter xchg adc (bad) (bad) cld sti icebp jae clc fistpl ss pop jecxz xchg icebp imul (bad) push sbb mov jp and sub ds es pop stos mov ret test jb mov lods push gs arpl repz popf cltd add sbb je jae mov mov cmpsl xchg pusha notl mov inc pop arpl push lea and lcall dec addr16 xchg ffreep dec (bad) xchg or mov cmc mov hlt out xchg mov mov js sbb sbb cmc add sbb insb xchg inc cmp es (bad) dec adc lds cld push add (bad) or aaa add cmc stc and jmp xchg sbb push in xchg mov jecxz mov idivl adc mov std lds test popa push lcall mov jg mov add cmp adcl jnp jb loope pop rol add stos lods inc incl out inc repnz xor inc xchg repnz and dec cmp repz jg (bad) cwtl push leave (bad) dec in fwait ret in aad push push shr and nop imul and cmp and repnz xor push mov mov stc repnz xor call mov punpckhdq in mov (bad) (bad) cmp mov fisub rclb out and lret (bad) lock pop pusha imul mov sbb notl xor push sub stos (bad) mov insb add stos mull cltd xor repz mov cli daa test xchg fsubrl stos rcrb fwait inc dec push lcall dec adc xchg xor inc aam lods imul and repz add ljmp dec mov in dec mov jg ret int3 ds pushf push loopne sub xchg mov mov iret outsl (bad) add push int test (bad) mov jae mov mov inc fnstcw inc out pop popf pusha xor pop inc lea dec adc fmull xchg push mov (bad) push stos adc imul mov sbb lahf pop fs jg or inc mov jb iret rcr ss mov jns (bad) adcb stos adc pop jns push lds in stc dec and xchg push mov or mov push int3 dec or sbb rcr add repnz out sbb adc push gs dec pop nop sub fisub push test dec (bad) xor adc inc int3 insl push int (bad) int dec outsl fcompl (bad) mov dec insl adc xchg sbb or dec sti fstpl adc jecxz popa xchg fwait push push and xchg cwtl pop adc mov gs insl dec cmp xor mov repz xchg rcl inc in aas sub pop sbb ds in enter mov cmc sti dec sbb and push pop and in xor fdivs cmp add cs mov cli lea xor push test fildl outsb stos testb jae adc test hlt mov inc dec adc movsb jecxz std mov test pop (bad) negb add test ret jle add popa movd movsl inc xlat jl int3 popf repnz test fild test repz pop test and xchg push or stos (bad) cmp lret dec loopne in pop mov xor pusha pop movsl cmp pop mov xor xchg cmp call adc or jno push insb xchg mov icebp daa insb xchg xor pop add sti (bad) out clc rcll xor pop jo sub push rcl stos cld push in jo push insb pop dec lahf aam sti pop fistl loope xor jb dec push sti mov xchg sahf mov out and lea mov ss (bad) outsb add mov leave test aad jnp adc js pop icebp jb and mov stos push repnz mov lods and inc and mov mov inc loopne fnclex adc dec or outsl push sbb cld popf decb sahf mov push ja and ret mov push call sarb jns ret push add lock jnp out mov jmp in mov loope loopne,pn or aaa addr16 sbb or and xchg inc dec rol bnd cltd xor pop push dec sar sub pop mov ret pop loope add outsl shrl dec scas (bad) (bad) sub mov bound mov mov fldl pop fisttpl push jae nop cmp sub fs inc push cwtl test pop xor mov aam dec into test enter stos mov xchg lret into cmc mov cmpsl lods loop mov test mov adc int or pop stos scas inc pop dec and inc inc movsb or lcall pop (bad) pushl into test into push adc movl js orl test daa rcr movsb lret dec adc icebp push lods xchg xor sbb fisubr les adc jno cld lods sbb lahf push sti sahf (bad) mov push fimull sbb xor push lahf nop fsts clc add jecxz mov dec movsb sbb imul sahf out nop or xchg fcomip out sbb jno shlb dec outsb push sub add mov dec movsl dec aas jne test into std or and cmp lds mov and mov mov jle fildl and loop lret xchg addr16 data16 cmp fwait ret mov cmp cmp lcall push fild dec cs lock inc or cmp sbb loope ss mov jno jmp scas jp stc and imul jns fsubs sbb jg daa jecxz in addr16 pop outsb les jl shlb cmp cwtl jb stos dec (bad) invd fist insl in idivl cmpsb mov and test fild ljmp ss jmp sbb stos dec lcall adc push xor dec push popf aaa (bad) inc xlat negb cmp dec mov movsb adc xchg loop sti adc dec pushf notb cmc mov iret pusha mov cmp push xchg or jmp mov xchg gs pop test clc mov enter mov sbb arpl mov mov das dec out ljmp enter adc add mov repz sbb push jbe,pt mov or xchg outsb push jne and mov and test cmpsb xchg push jno dec loope nop add std adc sub add pop jl cmp inc fcmovnbe sbb lret xchg mov fisttpll dec sahf aas imul push mov (bad) pop dec icebp (bad) dec mov mov repnz fcmovnbe insb (bad) mov in mov xor sub bound inc or sub leave xchg add mov lcall sti pop nop rcrl add adc (bad) pop lret int3 adc push push dec (bad) adc arpl push sbb or mov push mov dec fadds push std cmpsb sti lea mov xchg std call fistpll mov jmp fwait sub add int3 pop rcrb (bad) jge movsb mov (bad) stc xor cmp movsb add imul or add sbb add data16 mov repz cmpsl inc mov je scas sbb in push (bad) clc adc ret add mov adc adc jne sbb call mov arpl mov sub pop lret inc insl or inc test test in xor fldcw xchg enter sbb roll lcall ss mov pop jbe xlat pop fcoml pop lcall jns aaa inc divl (bad) mov mov cmpsl mov mov (bad) adc daa mov xor (bad) mov jle inc dec add out repnz xchg inc xchg xchg pop mov inc mov arpl jne shlb adc fstpl mov test (bad) addr16 ja mov push add mov inc add dec sbb mov push movsl adc xchg js js,pn lea dec sub rclb imul js fldt arpl je cwtl (bad) repnz inc cmp jne ret fdiv shl ficom loope add or lods in cmp in loopne inc sbb dec pop pop xchg or roll rclb mov insb pop and or ja mov inc pop mov cwtl es mov int cmp jbe and hlt cmpsl iret mov xor sub add into inc cmp out inc ret iret popf or insl adc shl dec xchg mov repz dec lret lret out test mov scas mulb les test (bad) pushf aas sub or push mov cmp pop sub lcall rolb loopne or and pop lret or inc pop insl jge (bad) popa sbb pushf lds adc xor decl out in lds jle add dec icebp or es mov cmp loope add sahf jb bnd inc jnp mov xchg (bad) mov push push mov mov and add adc inc push (bad) xor shl mov xor jno aam inc pop mov adc xchg sbb repnz out outsl cmp and sbb scas or add push je pop outsb mov rcll cmc mov jge inc push pop jl cmp lds imul adc out xor and sbb scas movsl jle sbb mov push mov imul test ss push sbb mov mov sub imul gs les pop jae outsb push jnp inc (bad) ret mov (bad) or sbb add pop jg sarl push inc push fs inc xchg xorb bound aas push jne mov xchg fidivr push in pop mov mov cmc sub sub es xchg inc dec gs lret out outsb ja std jg lcall repnz xchg and jnp nop out jg cmp fwait jnp or jns jnp sub push mov test jnp sub es insb aaa int aad pop sbb stos repnz add cltd jae adc sti and notb mov xchg loopne stc dec (bad) xor mov in cmp pop flds lret mov (bad) and testb lods sbb test (bad) mov cltd inc pop pop jnp jecxz jbe pop add sub insl push push jne cmpsl mov inc pop xor enter stos stos lret xor mov pop xlat movsb in mov fmull dec pop (bad) outsb dec xchg iret (bad) add dec push xlat call and lods fisubr in push mov (bad) fldcw inc cmovbe mov mov cmpb leave scas fisubrl fiaddl mov sub dec stos xor and pop mov clc cmp or xchg pop scas (bad) imul dec cmp mov subl mov mov jns fisttpl dec gs jnp sbb xchg ja ja xchg xchg clc lock sbb mov mov mov popf adc jo stos push (bad) roll ljmp sub push les imul pusha sbb aad jnp aam sub xchg int in aam cwtl pop (bad) mov dec dec inc fcmove nop inc nop (bad) (bad) mov sbb cmp pop test jo push ss ja ja pop (bad) das mov xchg mov jbe xchg addr16 ja ja cmpsl sahf ja lock test inc pop inc push lods leave nop lret dec lock adc dec neg inc mov dec out adc cltd fcmovnbe lods roll mov in sar ret les mov 