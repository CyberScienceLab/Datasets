xchg pcmpgtd push xchg jo xor sub push data16 push data16 adc jb mov xchg dec push inc or data16 push data16 or mov mov push stos push data16 add popfw dec push data16 lahf or data16 pcmpgtd jbe inc jp popw les ljmpw dec push data16 jge data16 or xchg xchg push inc push or data16 mov or data16 or and xchg push xchg xchg pcmpgtd inc push sbb mov pcmpgtd jne pop (bad) or sub data16 mov push data16 pcmpgtd add dec insb push add outsb add test data16 or data16 dec push mov data16 ja mov data16 mov or data16 adc mov data16 dec arpl in out push xchg sbb inc xchg pcmpgtd fisttpll data16 imul scas lahf or data16 add add add add add add ds inc add inc add add add inc add add add dec inc add dec inc add dec inc add dec inc add dec inc add inc add inc add inc add inc add dec inc add dec inc add inc add dec inc add dec inc add dec inc add push inc add push inc add push inc add inc add inc add inc add push inc add push inc add push inc add inc add push inc add push inc add push inc add inc add push inc add push inc add push inc add push inc add push inc add push inc add inc add inc add inc add push inc add push inc add push inc add inc add push inc add push inc add push inc add push inc add push inc add push inc add inc add add add pop inc add pop inc add pop inc add inc add pop inc add pop inc add pop inc add inc add pop inc add pop inc add inc add inc add inc add inc add inc add inc add inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add inc add pop inc add add pop inc add pop inc add add inc add inc add popa inc add popa inc add popa inc add inc add popa inc add popa inc add popa inc add popa inc add bound (bad) bound mov inc add inc add inc add inc add fs add fs add fs add fs add fs add fs add fs add fs add inc add add add inc add add add addr16 add inc add inc add inc add addr16 add inc add inc add inc add push inc add push inc add imul int inc add inc add inc add inc add inc add imul imul imul imul imul imul imul insb inc add inc add inc add insl inc add inc add inc add outsb inc add outsb inc add outsb inc add inc add outsb inc add outsb inc add outsb inc add outsl inc add outsl inc add outsl inc add inc add inc add inc add jno add inc add inc add jb add jb add jb add inc add jb add jb add jb add jae add jae add jae add inc add inc add inc add jne add jne add inc add jne add jne add jne add jbe add jbe add jbe add ja add ja add js add inc add js add js add js add jns add inc add inc add inc add inc add inc add jp add inc add jp add jnp add jnp add jnp add jl add inc add inc add jl add inc add jl add jl add jge add inc add inc add jle add jle add jle add jle add jg add jg add addb addb addl mov addl add lock push add add add clc test mov add add add xor xchg jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add push dec cwtl repz dec movsb pop mov push mov (bad) add add add add add inc add push addl arpl imul add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add add add add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub sbb add pusha add add add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub sub add rolb add adc cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add add add sbb add sbb add add cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and inc add add add sbb add inc add add cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add nop inc add add add xor add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add nop inc add add add sbb add push add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add add add sbb add pop add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and inc add add add xor add inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add es add xchg inc add add add sbb add inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add xchg inc add add add xor add add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add add add or cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add xor add sbb add or cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add es add inc add add add add add inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add inc add add add sbb add add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add add add sbb add (bad) cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add add add sbb add adc cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add sbb add sbb add adc cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add xchg inc add add add xor add inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub fcoms add loopne xor add add add cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add xchg inc add add add sbb add sbb cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub push add add add add sbb add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add add add sbb cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add add add add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add add add sbb cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add xchg inc add add add add add add cmp inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and add nop inc add add add sbb add hlt sbb add add add cwtl stos add add ds scas add add add add add add add add add inc add add add add add add add add xor add fdivl add add add add cmp inc add add add xor pop add add add add inc add add add xor pop add add add add inc add add add xor pop add add xor pop add add inc add add add xor push inc xor add or or add add add and (bad) sti hlt add (bad) (bad) decl add add add add add add add add inc add inc add pop inc add add test add xchg add add add add je popa je arpl insb jns push imul insb outsl jne add dec arpl imul add sti pop test jg bound leave pop sub add add add add add add add add inc add add add icebp adc dec mov in stc out in lock add add subb add fiadd add add add inc add add cmp inc add add add dec inc add (bad) (bad) incl add add nop inc add add add xor add inc add add add inc add add add inc add add add inc add add add add add js inc add add add and pusha cmpsb inc add add add stos add sub inc add add add mov (bad) (bad) incl add add add add and push sub (bad) (bad) (bad) incl add cmp add xor add add add add inc add add add add cmp add xor add add add and js add inc add add add add inc add add sub add add add and js add inc add add add add add inc add pop inc add inc add add add pop inc add inc add add add add add and clc pop inc add inc add add add add add and clc pop inc add inc add add add add add inc add add add xchg pop sbb inc add adc inc add inc add add add add add dec inc add (bad) (bad) incl add add inc add xor cmp mov inc dec gs mov add add add add add add add add add add add add add pop inc add (bad) (bad) lcall inc add sub add add rclb xor add add add inc inc add (bad) (bad) jmp add or inc add add add sbb add add add (bad) (bad) fdivl add cmp add sbb inc add add add add add incl add addb add add in sbb (bad) (bad) (bad) (bad) in inc inc add add add nop inc add add add inc add incl add addb add add and inc add (bad) (bad) (bad) in inc inc add add add nop inc add add add sub (bad) incl add addb add add pop sbb (bad) (bad) (bad) (bad) in inc inc add add add xchg inc add add add sub (bad) incl add addb add add xchg sbb (bad) (bad) (bad) (bad) in inc inc add add add xchg inc add add add add incl add addb add add int3 sbb (bad) (bad) (bad) (bad) in inc inc add add add xchg inc add add add add incl add addb add add add inc add (bad) (bad) (bad) in inc inc add add add xchg inc add add add inc add incl add addb add add cmp inc add (bad) (bad) (bad) in inc inc add add add inc add add add add incl add addb add add je inc add (bad) (bad) (bad) in inc inc add add add inc add add add inc add incl add addb add add lods sbb (bad) (bad) (bad) (bad) in inc inc add add add inc add add add add add add (bad) incl add addb add add in inc add (bad) (bad) (bad) in inc inc add add add inc add add add add add add add incl add addb add add sbb inc add (bad) (bad) (bad) in inc inc add add add add add add add add (bad) incl add addb add add push sbb (bad) (bad) (bad) (bad) in inc inc add add add add add add add add add incl add addb add add mov inc add (bad) (bad) (bad) in inc inc add add add add add add add add (bad) incl add addb add add les inc add (bad) (bad) (bad) in inc inc add add add add add sub (bad) incl add addb add add mov inc add (bad) (bad) (bad) in inc inc add add add xchg inc add add add sub (bad) incl add addb add add cld sbb (bad) (bad) (bad) (bad) in inc inc add add add xchg inc add add add sub (bad) incl add addb add add xor inc add (bad) (bad) (bad) in inc inc add add add xchg inc add add add sub (bad) incl add addb add add insb sbb add (bad) (bad) (bad) in inc inc add add add xchg inc add add add sub (bad) incl add addb add add or inc add (bad) (bad) (bad) in inc inc add add add xchg inc add add add sub (bad) incl add addb add add fcompl add (bad) (bad) (bad) in inc inc add add add xchg inc add add add sub (bad) incl add addb add add inc sbb (bad) (bad) (bad) (bad) in inc inc add add add xchg inc add add add inc add incl add addb add add jl inc add (bad) (bad) (bad) in inc inc add add add xchg inc add add add inc add incl add addb add add test (bad) (bad) in inc inc add add add inc add add add inc add incl add addb add add dec sbb (bad) (bad) in inc inc add add add inc add add add inc add incl add addb add add adc inc add (bad) (bad) (bad) in inc inc add add add inc add add add inc add incl add addb add add movsb sbb add (bad) (bad) (bad) in inc inc add add add inc add add add add incl add addb add add dec jb gs popa bound push jb bound outsl jb popa outsb add ja outsl insl popa outsb xor add dec gs gs je jb add push outsl jb outsb addr16 arpl jb gs add popa insl outsl jae outsl jo xor add add outsb outsl je jae add add outsl insl outsl je outsb add push imul add add js outsl jne outsb gs add je popa outsb arpl add add gs insl outsb je xor gs outsl popa fs add popa jae je outsl jo add inc outsb jae outsb jae imul jae popa outsb imul outsb data16 add ja imul inc bound xor add outsb outsl je jne aaa add add outsb outsl imul dec popa insb imul popa outsb add inc imul jne insb jns add add insb imul jns add add push outsl outsl bound fs add add push push outsb add je jb arpl xor dec arpl imul add push fmulp daa sbbl or int3 cmp pop and push jg ret aad pop test jg bound leave pop sub (bad) xchg xchg sti pop ret sbb dec lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add mov add add add add add add sub add inc add add inc xor sub xor or stos add xchg push imul push imul push imul or dec add bound pop sbb inc mov ds std cmp adcb dec (bad) mov mov push rorb (bad) in stc out in lock or dec into movsl insl dec scas sbb shl pop daa dec push outsl jae outsb add lods xor or stos add xchg inc je popa insl outsb je jb add add inc outsb je jb add dec lods xor or stos add xchg inc jb gs add fimull xor or stos add xchg push je imul insb insb jne outsl cmp add add dec lods xor or stos add xchg dec jne outsb arpl ljmp adc pusha rcll je outsl ja imul imul adc xor or stos add xchg inc jb je popa xor inc insb popa jb jae add dec lods xor or stos add xchg push jne imul jne arpl outsl jb add push imul pop popa insl popa insl outsl je cmp add push popa jb imul inc outsl imul insb insb jne je popa je outsb xor add push jo jb fs add add arpl addr16 gs add dec lods xor or stos add xchg dec js outsb imul dec lods xor or stos add xchg inc jb gs outsl insb outsl addr16 inc imul gs add add inc outsb jae add add gs popa outsb fs push outsb jo gs jb fs jns add add insl popa imul popa jae jb jo popa insb add add loop lods xor or stos add xchg inc outsl outsb popa outsb outsb outsl xor add add imul imul add inc arpl outsl jae jae add add jae jb xor dec popa jb arpl add iretw adc pusha rcll jae outsb add outsl outsb fs imul xor or stos add xchg inc gs jo gs je arpl add add je outsb add inc jb je jae gs add inc outsl insb outsb je add insb je jbe popa outsb outsl add dec jne bound addr16 xor push jo popa arpl imul arpl cmp inc outsl ja insb imul outsl data16 push popa jae popa jb add je arpl insb imul add jae jne imul jb jp insb popa add insb imul outsb imul arpl outsb fs insb xor add add outsl outsb imul outsb je jb jne je popa insb add add push insb imul add dec outsl outsb imul add inc outsl jne jae xor push imul outsl outsb arpl jb outsb arpl xor add dec push popa je add add je jne imul popa fs jae jne aaa add inc push outsl bound je add add jns gs je add add inc outsl outsb je jb imul jae insl bound gs add outsl insl jne xor add dec popa insb popa add add push insb popa imul arpl popa je jbe add dec popa je imul add push jne jae outsl jo push push add push jns jb insb imul add inc insb popa jne outsl outsl je add or jo or xor add add xor add or adc add add adc add or or add add or add or imul cs add add push add add fs outsl outsb imul add fdivs inc add xor add add pusha sahf inc add or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add pop add add popa outsb addr16 gs imul imul xor inc add inc add add insb sahf inc add or je jmp push mov call jmp add add add add jb imul insb insb add add add inc gs imul outsl outsb dec outsb outsw inc add xor add add js inc add or je jmp push mov call jmp add add add add jb jne jb push popa insb jne inc add cwtl xor clc xor add add test add add add mov or je jmp push mov call jmp add add add add jb gs xor add add push add add insb dec outsl jbe dec gs outsl jb add add inc add inc add add nop sahf inc add or je jmp push mov call jmp add add add add je imul outsl outsb dec outsb outsw push imul inc add add pushf sahf inc add or je jmp push mov call jmp add add add add gs xor add add inc outsb jne push imul popa je outsl outsb jae add add add jb imul insb add outsb add add call xor add add test inc add or je jmp push mov call jmp add add add add je jns je insl dec outsb jne add call xor add add mov inc add or je jmp push mov call jmp add add gs jne jae jb outsl jae add add xor mov add rcrb add add add or je jmp push mov call jmp add add add add arpl outsl jo jo outsb jne add xor call add int3 sahf inc add or je jmp push mov call jmp add add add inc gs jb jns outsb jne call xor add add fcomps add add add mov or je jmp push mov call jmp add add add add gs je push outsl jo jo outsb jne call xor add add in inc add or je jmp push mov call jmp add add add inc jo outsb fs outsb jne add jne imul jns insb add add add add xor mov add lock inc add or je jmp push mov call jmp add add add add popa jb outsl ja jb add call xor add cld sahf inc add or je jmp push mov call jmp add add add add popa jb jo gs add call xor add or add add add mov or je jmp push mov call jmp add add add push popa je dec popa insl gs inc xor inc xor pushf xor add adc inc add or je jmp push mov call jmp add add add add add add add add add add add loop add xchg add add add add add add add add add add add add add stos xchg add add add add add add push add add add add add jae and imul popa add add add je and and add add push add add imul outsl add outsl add jb jns xor add or add dec add jo popa add add add add add jne jo imul adc add push add push add add add add add add imul outsb add xor add adc add inc add add jae je jb add add sbb add dec add add insb add jae popa add jb jne jae xor add inc add popa add add add outsl add jae add adc add push add arpl insb add popa add add add add add jne jb imul popa add add add add jns jb imul outsl add imul insb add add add add add popa add insb add add add add add dec add je outsl add add add add add add outsl add add outsb add xor add add inc add outsl add jae add push add add insb add jae jae outsl add imul xor add adc add inc add add push add add add add insb add je add add add adc add dec add outsb add jae push add add add add inc add imul imul add add add add add jae add add add dec add insl add popa add adc add push add popa add jb outsl add jae xor add push add outsl add insb add add add add add add insb add popa add add add add add outsb add jne data16 insb add je add add add add add add insl add add insl add je popa add insb add xor add dec add insb add add add add adc add push add imul add jae add add or add dec add jb add add add add add add add add add push add add add add push add imul add add add add add imul outsb add arpl xor add add adc add inc add jo popa add jae add add add add add add popa add jae add data16 add aaa add add insl add jne add imul xor add add adc add push add jne jb add outsl add add add add add add jo outsl add add arpl push add add add add add add add push add add add popa add arpl add add add adc add push add popa add add outsb add add add add outsl add popa add add add add add add popa add insl add insb add add add add add add popa add add outsl add insl add add add popa add imul arpl imul add add push add add push add jbe imul popa add add add add add popa add imul add add add add outsl add je jb add add outsb add add sbb add push add outsb add imul jb outsl add jae xor add add sbb add dec add data16 add jne add arpl jns xor add add adc add inc add add imul xor add add push add add popa add add add add add push add je jb outsl add outsl add add add add push add add insb add jb imul je add je add inc add je outsl add popa add jne popa add add add add add outsl add add add add arpl popa add add add add inc add insb add bound popa add popa add xor add add push add jb add add add or add push add jb imul adc add push add je je insb add jb cmp add add push add add jo push add add add add popa add je add outsb add outsl add je add add add add push add je je insb add jo outsl add add add add add inc add outsb add imul insb add aaa add add add outsl add add jae imul insb add add add add add add imul cmp add push add add popa add add outsb add add dec add arpl jb popa add add outsl add jae xor add add or add dec add jb jne je imul adc add dec add je add imul add je xor add add push add popa add arpl push add jae add add or add inc add imul aaa add add add add inc add jae bound popa add add add dec add jae imul add add add adc add dec add add add add add add add add add outsb add jae arpl jne jae add adc add push add insb add jb imul add add adc add push add arpl popa add jne insb add jb xor add add add jne insb add add imul outsb add insl add cmp and add add add add mov and push add xor and push add xor add add loopne inc add cmp add jns lods xor or stos add xchg add add push add add dec sbb mov cmp add add add mov adc add inc add popa add add add je xor add add push add outsl add add add add add add add add dec add and push add jb jae imul and dec add data16 and popa add popa add insb add bound insb add and add add adc add inc add push add add xor add add add add add sub add xor xor add sbb add dec add das add add add add dec add add add add add add je outsl add and inc add outsb add add add add push add add add add add dec add add add add add push add add xor xor add add push add add outsb add outsb add ja outsb add add add add jo jo add push add add add add add inc add imul jb add add push add add jb imul add and add jbe add sbb add dec add jns bound outsl add jb add add add add add sbb add dec add outsb add jne popa add add add add add add push add add add jo insb add jns and add jbe add adc add dec add jne jae add add add add push add add add add jb imul add add add adc add push add jae je add and add jbe add add push add add outsb add je popa add add bound insb add add adc add push add jne outsb add add add add adc add inc add insl add and add jbe add add or add inc add outsb add add add add add popa add je add and inc add outsb add add add add add add add add add outsl add je add push add add js inc add add add add add add or add push add add jne add adc add inc add jae je popa add je add xor add add adc add dec add add outsl add outsb add add add add add add add add jns add or add dec add js popa add add add inc ss dec dec add add pop pop jbe popa dec outsb inc jae jb add add jbe popa dec xor jb add jbe popa push je inc insl jo pop pop jbe popa dec bound outsb add jbe popa push gs popa jb jb add pop pop jbe popa push bound outsb add jbe popa inc jb gs je dec imul pop pop jbe popa push je inc popa je pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc jb gs popa jb imul pop pop jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa dec bound gs fs data16 add jbe popa dec bound gs pop pop jbe popa inc jo xor add loopne inc add lahf inc add jbe popa push cmp outsb add pop pop jbe popa dec outsb inc jae jb add add jbe popa push dec xor add pop pop jbe popa dec outsb push popa jb pop pop jbe popa push popa jb imul pop jbe popa inc jb gs bound add add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa dec xor popa jb add jbe popa push jb outsb je bound add pop pop jbe popa push popa jb fs jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add pop pop jbe popa inc jb gs je add add pop pop jbe popa push popa jb outsl jo add add pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs popa jb add add jbe popa dec popa je dec gs inc popa insb insb dec add pop pop jbe popa inc jns popa jb add jbe popa push je push outsl push outsb imul add jbe popa push je push outsl inc outsb jae add pop pop jbe popa push je inc outsl jo add add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa push gs jns je insl inc jb outsl jb or or add add cmp inc add add add inc add (bad) (bad) incl add add and add inc add add add sbb add inc add add add add add add inc add add add inc add add add add add js inc add add add lahf inc add add add add inc add pop add add mov (bad) (bad) incl add add add add mov add (bad) (bad) incl add cmp add xor add add add inc add add add inc add add add lods sub add add add push inc add sub add add add adc inc add add sub add add add add add mov add sub add add add add sub add add add push inc add sub add add add adc dec add add sub add add add add sub add inc add add add sub add mov mov add sub add inc add add sub add adc add mov add sub add inc add add add sub add pop push inc add sub add inc add add add add add mov add add add add add pop add add sub add add add inc add add add add add adc pusha add add add add add push inc add mov add add add add adc add add add add add add add inc add add add xor add add add add add add add push add add add sbb inc add sub add inc add add add in sub add add add add add inc add add add add in push inc add sub add inc add add add in sub add add pop push inc add sub add inc add add sub add mov mov add sub add inc add add sub add add or add sub add inc add add inc add add add inc add mov add sub add inc add add sub add mov mov add inc add add add str inc add add add inc add cs add add add or nop add add sub add jo inc add mov add cs add add add xchg add add sub add add add mov add cs add add add ltr sub add int3 pop inc add cs add add add add pushf add add sub add add add pop inc add add add add add verr sub add cmp inc add sub add add add or movsb add add sub add nop pop inc add mov add add add add sbb test add fs add add add pop inc add mov add add add add sbb lods add add add add add inc add mov add add add or mov add loopne inc add add add pop inc add mov add add add adc add add pop inc add mov add add inc add add sub add add add add cs add add add or add add int3 pop inc add mov add add inc add add add add sub add sbb mov cs add add add add add cs add add add add mov add cs add add add adc enter insb sub add int3 pop inc add mov add cs add add add or add sub add xor add mov add cs add add add sbb rolb add fs add add add add mov add inc add add add adc aam add in sub add add hlt pop inc add das inc add add inc add add add add sub add push pop inc add das inc add add add add add sub add add add mov add inc add add add push add add add add or add das inc add add inc add add add add sub add add add inc add das inc add add add adc call sub add add fcomps add das inc add add inc add add add add cs add add cmp add mov add inc add add inc add add sub add cwtl pusha inc add mov add inc add add inc add add add add sub add in inc add das inc add add add adc clc add add sub add add add popa inc add das inc add add add or add add cwtl popa inc add mov add add add inc add add add add add add add popa inc add mov add add add add add in sub add add add inc add das inc add add add or add add mov inc add mov add add inc add add add fs add add cld bound sbb add add inc add add add add sub add je inc add mov add add add adc adc add shrb inc add add add arpl cmp add add add adc sbb add in sub add add add add add fs add das inc add add add add adc add cwtl fs add das inc add add add add add in fs add mov add das inc add add inc add add add in sub add add add inc add das inc add add add adc sub add shrb inc add add mov mov add das inc add add inc add add add sbb add mov add xor das add add (bad) xor add adc add fs add xor and add inc add add sub add mov mov add inc add add inc add add add add add add add inc add mov add xor add add inc add add add loopne inc add add add inc add mov add inc add add add or add sub add test inc add mov add inc add add inc add add add add hlt addr16 add xor inc add add or add sub add fs add add add add str add sub add mov inc add xor adc add inc add add add loopne inc add add inc add mov add inc add add adc push add add sub add add add add xor xor add inc add add add fs add add movsb imul js inc add add inc add add add sbb inc add mov add add add adc pusha add add add add add inc add mov add add add or add add sub add int3 push add mov add add add add add inc add inc inc add inc add add add inc inc add inc add add add add add inc inc add inc inc add inc add add add inc inc add inc inc add inc add add add inc inc add inc inc add inc add add add inc add inc inc add inc add add add inc add inc inc add inc add add add inc inc add inc add add add inc inc add inc add add add inc inc add inc inc add inc add add add inc inc add inc inc add inc add add add add add inc inc add inc inc add inc add add add inc add inc inc add inc add add add inc inc add inc add add add add add inc inc add inc add add add inc inc add inc inc add inc add add add inc inc add inc inc add inc add add add inc inc add inc inc add inc add add add inc add inc inc add inc add add add inc add inc inc add inc add add add inc inc add inc add add add inc inc add inc inc add inc add add add inc inc add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add add add inc add inc inc add inc add add add inc inc add inc add add add add add inc inc add inc add add add dec inc add inc inc add inc add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add inc add inc inc add inc add add add inc add inc inc add inc add add add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add inc add inc inc add inc add add add inc add inc inc add inc add add add inc inc add inc add add add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add inc add inc inc add inc add add add inc inc add inc add add add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add inc add inc inc add inc add add add inc add inc inc add inc add add add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add inc add inc inc add inc add add add inc inc add inc add add add inc inc add inc add add add dec inc add inc inc add inc add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add inc add inc inc add inc add add add inc add inc inc add inc add add add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add dec inc add inc inc add inc add add add inc add inc inc add inc add add add inc add inc inc add inc add add add inc inc add inc add add add inc inc add inc add add add dec inc add inc inc add inc add add add push inc add inc inc add inc add add add push inc add inc inc add inc add add add inc add inc inc add inc add add add int3 xor add pop test jg bound leave pop sub push fmulp daa sbbl or dec lods xor or stos add xchg scas add add add or dec jb gs popa bound or outsl insb outsl jb insb imul add and and (bad) (bad) jmp add insb outsl jb insb imul add add add add or add add add add add pop add gs xor or scas adc add cmp add incl sbb add add add gs xor add add mov add add add pop add gs xor or mov add or add incl add dec xor push icebp adc dec mov in stc out in lock lret movhps inc mov ds std cmp xor or stos add xchg fiadd rolb add or push jb bound outsl jb popa outsb add outsl insb imul sbb add and movsl push add add movsl push add add add add add add add add add adc add add nop movsl push add ficompl out sbb sbb movsl push int3 adc sar jmp sub in (bad) mov rclb push mov sbbl jmp sub ja mov and repz or fs dec cmpsb movsl sub addr16 add call pop sub mov hlt push cltd das mov cmp cmp sub adc add push adc inc jno mov divb iret outsl in loopne sub imul repnz pop ljmp jg icebp es jbe aas mov inc jae adc pop subb test fmull divl ja mov inc mov stos or cmp out mov (bad) xor (bad) lcall mov data16 les and mov xchg cs push cwtl xlat inc dec fcmovb jb push xchg (bad) mov xchg insb cld or push fsubs mov xor pop inc sbb dec sub sbb mov and repz fwait lock cmp sub push sub jg xchg out sbb call pop sub push push cltd imul cmp aam sub test and pop xor inc pop adc jge imulb cmpsl loopne iret cmp cvtps2pi pop mov repnz jg icebp es js lea mov inc sbb xorb rcrb stos gs ret test (bad) mov jl inc xor mov mov inc or cmp (bad) lcall nop bound rol mov and mov scas cs mov xlat xchg dec ficoml int xchg (bad) (bad) into xchg push cld or pop sub movsb mov mov dec adcl sbb loope add and xchg (bad) jns outsb ret sub mov jecxz test add jge and jmp jl aad pop sub lods les cmpsl or nop mov xchg int3 es leave stc mov mov pop idiv shrb rcll push aaa add jp inc cmp or lods test std adc enter loope or call xor xor iret push adc mov adc inc out bt xchg movsl lea repz xchg mov adc push dec cmc sbb scas sbb stos xor (bad) negb sub mov fsubl push lret push stc and pusha hlt test fcom mov enter or mov lcall subl jns outsb ret sub mov sbb jecxz out jge out bnd jl and aad les mov jbe nop or or stc xchg adc pushf jle mov imull push loop xchg aaa add inc push cmp inc sbb or std movsb (bad) adc pop enter pop fisttp xor xor sbb adc iret add cmpb inc out bt xchg movsl mov lret ret xchg lea repz mov dec and bound sbb cmp out xor (bad) imulb sub and shlb stc push sahf pop or push and test fcomps inc shlb mov jae mov mov aas add cmpl ret sub cs cmpsb sbb lahf sub clc ja insb adc mov add xchg add pop aas dec mov das aaa xor xchg inc xor pop inc lods mov imul pop push jg mov jp dec test pop cmp fdivrl lret les out add dec cltd and sub nop orl loop movsl mov in mov or push inc jo lcall arpl sbb dec pushf inc repnz pop add stos psubsw fldenv ss sarl mov pop scas and out pop ljmp xlat fisub popa out pusha daa cmp mov pop sub mov push in sti pop xchg and sub lods cmp xchg and xor iret je add pop add cmc dec cmp mov mov clc ja insb adc cmp dec add xchg add pop aas sahf mov mov dec das xchg inc and pop inc xor lods and addl hlt mov jp jg dec lock cmp fdivrl lret les outsl cli (bad) out mov popf add dec and nop xorl movsl mov in mov or push inc xchg jo xchg sub sbb dec sbb add (bad) jge jmp (bad) jb mov and out ds xlat (bad) cmpsl cmpsb sbb fsubp jl daa cmp mov pop sub mov push in dec pop xchg imul sti lods cmp xchg into adc (bad) or and add pop add pop mov cmp ja,pn lahf adc clc mov insb mov add dec mov insb inc in aam iret mov lret pushf mov test sahf fdivl inc (bad) movsb and lods mov into aas adc sarb (bad) rorl add push fs loop testb aaa sbb push mov and insl xlat or test xchg stc pop hlt cs std sub and fist and push notl pop mov mov fcmovnbe movsb popf jnp add and popa pop xor jb mov incb pop loope mov cmp xor loopne pusha or das sbb xor jo call cmp jne int3 sbb fsubrs mov push xor lods lcall mov xchg shl lahf cmp ds mov jg mov cmp repz cmc rcll add sti aad movsl xor es aam insb mov mov sbb sbb or into and (bad) mov jge js push cmpsb les (bad) push fs loop mov divb sbb mov (bad) and insl xlat mov test xchg stc push cs std sub je pushf fistp int and mov notl and pop jmp mov add and xchg xchg jb popa sub sub (bad) mov mov cmp xor loopne in or das sbb xor jo call cmp loopne aad cmp fdivs out stos mov push xor lods lcall push cld xchg mov lahf mov jle ret ds mov cmp repz mov adc lea xor sti sbb cmp mov sbb mov xor bound push push add (bad) xchg pop add dec pop ljmp adc fcmovnbe imul or mov nop cwtl pusha cmp xor mov ja lret loop cld leave test cmpsl sbb gs xchg sahf stos in flds sub pop sub adc out mov xchg jecxz (bad) inc enter mov int sbb mov jne in arpl out mov mov shr (bad) mov dec jno les cmp ret fsubl pop outsl mov mov fisub rcl sbb mov insb daa adc dec mov dec cmp and cltd sub dec adc pop adc mov int3 outsb inc pop rcrb push xor and je mov bound push push push (bad) pushf pop out popl pop xchg jp das iret lcall data16 fildl mov sbb inc nop cwtl xchg cmp test cmc pusha xchg xorl sbb test and pushf push sbb inc stos in flds sub pop sub adc out mov loope mov roll push inc int sbb mov jne mulb cli out in ss shr mov sbb dec jno les cmp ret fsubrl pop push mov outsl dec xor add mov xor adc mov imul dec push jbe lds cmp xchg jl jle cltd rorl mov int3 outsb dec pop (bad) hlt aas inc inc xor pop sub daa push mov fs bound stos pushf pop push pop mov adc sbb adc popa je repnz lcall inc sub push xor out or mov push or push stos out fstpl insl in (bad) es push (bad) lds mov inc stc adc xor xchg outsb inc cmpsb (bad) imul into jns pop pop lret push dec mov aad pop inc jg lock jne sub aas mov adcb dec gs dec add test mov pop mov hlt inc addr16 fwait repz cwtl iret (bad) loop dec dec (bad) cmp aaa shlb jg and popf dec inc adc ss jl iret int3 in ffreep sub mov lods mov xlat leave push mov mov add and loopne mov loope add je and lcall xchg sub push xor out out add sbb or cmp add xor fucomp fstps xor bound test ret jmp lds mov mov notb imul into cmp lret push jns icebp pop mov dec jg aad cld inc jne lock aas mov adcb dec clc lock dec gs add mov pop mov pop pop mov sbb cwtl or loop dec dec iret cmp rol daa (bad) jg and popf dec adc or pushf mov (bad) ss in ffreep iret fidivl xlat leave sti mov push jmp mov and loopne adc loope add mov and popa je repnz mov jmp (bad) xor push mov mov nop inc add icebp (bad) (bad) ret or data16 push mov lods mov fstpt dec xor xorl adc bound (bad) lret lock rcrb repz push fst sub iret inc les test pop jae or mov loopne (bad) pushf sub pop orl xchg insl fs jo sbb inc dec adc int3 jecxz cmpsl push inc xor movsb sub lret das push aaa aad push xchg dec ret sbb cmp cwtl stos xchg outsb and mov fdivrl insb rolb push push test xlat inc mov jno addr16 adc imul fidivr and jmp (bad) xor push sub mov nop inc mov add icebp mov fnstenv mov sub jne (bad) lods mov xor ss (bad) fwait imul lret lock rcrb repz push fcom sub iret inc fstpl out pop les test idiv movl pushf addb sbb insl rorb mov dec dec out int3 pop out adc jecxz sub lret das and aaa and push aad dec ret xchg sbb cwtl stos mov ror lcall mov push insb push push test xlat inc mov je inc jno addr16 adc lahf movsb push cli mov and jmp jnp mov scas xadd into movsl mov jo outsl inc mov mov nop xchg add jp xchg popa sbb inc mov jmp arpl mov aam push or (bad) call inc push mov jns jle dec xchg push fimul push (bad) mov daa lret pop mov pop (bad) dec in or cmp dec int ret nop and into loope movsb pop or rorl jmp je xchg cmc or adc iret mov lcall int3 push ja mov add repnz pop fisttp (bad) aaa (bad) pop lahf inc mov adc push loopne pop and sbb lods lds inc cmp repz out xlat fucomip (bad) cmpsb mov or cmp sub inc adc scas in out pop xor lock and icebp sub and xor test pop mov mov cmp (bad) xor aam inc adc mov cmp sbb dec popa sbb inc mov jmp std jb ss shll aam push or repnz inc call jle dec xchg jns dec and mov (bad) mov pop lret dec in or xchg jg test dec cmp dec and ret nop pop or rorl movsb pop je xchg cmc jmp adc iret mov lcall int3 mov add repnz pop fistp (bad) dec lahf inc rcl mov push loopne pop and sbb lods lds inc cmp repz mov (bad) (bad) cmpsb out sarb or cmp sub cld adc stc in out inc xor pop cwtl and (bad) in (bad) adc addr16 stos mov pop push cmp cs testb not sbb adc cmp mov mov jp xchg popa mov inc das fdivs inc shll aam aas xchg orl fistl and xor fidivrl sbb or lods iret mov icebp scas arpl loop mov push in insl cmp xlat pop aam sbb or xlat push cmp lock sbb jecxz mov je fwait sbbb pop push pop push (bad) fsubrl mov push inc repz bound mov push in rcll cmpsb daa pushf inc pusha imul stos mov outsb into loopne in addr16 ja les xchg inc dec inc outsl (bad) out rorl xorl mov js dec insl jns lcall clc sti hlt mov sub fidiv mov cltd adc adc add (bad) leave inc popa mov mov lahf inc (bad) pop orl fistl and jb,pt or lods iret sbb mov mov cmc fist aam sbb or lock jecxz mov je cld sbbb pop fwait pop push sub imul incb idivb bound add movsb es in push mov inc pusha sub imul outsb into les lea ja addr16 cs dec les xchg push roll out mov lret cwtl push ss out aaa adc insl jns lcall clc or mov roll fidivr mov cltd adc adc add (bad) leave inc xchg lret stc lahf mov pop inc fistl and jb,pt or fcmove sbb data16 cltd mov ss push jle fistpl ret lahf or mov pop dec js pop xor (bad) icebp sbb pop mov test movsl add fbstp test aas ljmp adc add insl out lods push rep inc in scas push loopne mov shll es imul aad xor mov push xlat mov rorb sbb dec into mull fdivrs rorl (bad) push inc mov test xchg add xor hlt inc xchg and mov enter cmpsl mov push pop push cmp and dec cmp sub pop mov jno cmovle mov lea clc sub jecxz (bad) in dec sbb aam sbb push imull (bad) (bad) mov pop sub out cltd mov jmp push adc jbe ret lahf pop adc pop dec (bad) xchg pop ffree sarb mov pop mov test loope sti imul movsl mov dec (bad) fild test shr arpl iret mov outsb insl in push push loopne mov scas and out inc (bad) xor push mov dec mov push add add dec cli xlat sbb ror imul jo dec rorl (bad) push and inc xor (bad) hlt add inc push mov enter cmpsl pop in lds push mov in fldenv popf dec cmp sub pop mov dec push mov std push clc aas inc push lea sub dec jecxz shl int sbb aam stos sbb mov (bad) (bad) stc mov cs pop mov jmp cltd ret adc (bad) ret lahf pop cmc mov adc sbb out out add sub repz repnz shrl jp (bad) xor push add dec jb ljmp inc mov mov movsl jnp into outsb mov fist cmp pop stos lret inc icebp mov mov inc pop call sti popf je lock sbbl pop aam jb pusha rcll in notl fs test mov jl ret stos mov inc or or loope dec out iret faddl ror insb (bad) fsubrs popa and adc xlat sub push xchg lret test (bad) jno adc (bad) imul insl push jmp xchg mov mov dec (bad) sahf sbb jmp loopne add cltd mov push out arpl jge movsb out xchg cwtl sub rcrl out dec pop jp sub mov repnz shrl jp push paddsb (bad) jb push adc dec inc pushf ljmp hlt js movsl jnp into outsb jecxz fildll cmp jns icebp mov mov inc pop call sti popf jle lock ja pop xchg xorl rcll in mull pop xchg test xchg test mov and jl sbb xchg inc cmp iret das inc jne enter fadd and test mov lods in mov adc sub push xchg aad dec fld jno adc fisubrl or (bad) mov jmp mov (bad) sahf inc pop jmp loopne fbstp add cltd out arpl jge push out in sub sbb out dec pop add jp cmp lea daa pop jmp add mov and lret and enter add jge imul lock sarb xor testl ss int3 jns inc cmp in pop data16 test cld adc adc pop or sub loopne or sub jecxz jne sbb arpl into int mov inc dec adc xor xchg lret mov fdivs ret push aad dec gs popa dec push sbb pop jmp cmp stos das insl (bad) shrb xor pop pop iret (bad) fnop push push sbb pushf adcl loope fnsave adc or jb or mov std imul ljmp insb push mov jo sbb pop lahf dec outsl in outsb loop cmpsb mov aam add les icebp cs xchg sbb repnz ret jne jmp mov xchg dec (bad) lret and adc add push cmc aas mov push loope push ss jns inc cmp lret in pop pop lods test cld adc adc decb out fsub pop or sub pop ficomp arpl jmp or cmpsl inc mov adc out push mov and aaa ret push aad push gs cld dec push dec hlt pop popa xor stos das pop (bad) sarb lcall pop mov fistpl push push iret or bound repz xlat je sbb in mov or or mov cltd std imul fwait and xchg mov insb push shrb mov dec movsl in outsb pop mov add mov sub icebp les and sbb ret daa add repnz dec cli in ficoml jae les stos addr16 push fidivr inc out js dec (bad) imul popf push insl clc lret push or mov outsl dec xchg push fs (bad) std or insb movsb mov jmp push push into inc pop inc leave xor mov sub cmpsb push dec sbb icebp popa mov test aad sahf call (bad) jno mov rcrb xor out or xchg pop jmp movsl xchg mov sbb out mov mov fwait in nop inc xchg scas dec daa stc pop cmp sub int ret xor into orl pop test pop push divl hlt test mov sub das divl imul cmp mov mov jns xchg add jecxz jp push cld mov xlat inc jne adc pop (bad) lods cli pop les stos addr16 mov mov add js dec movb jg fldcw fidivrl lret push insl lods mov add xchg xchg outsl mov push jo insb movsb std je rclb xchg inc pop fmul xor rcrl sub cmpsb push sbb fistpll icebp test aad push call sahf jno xor xor and out jmp movsl xchg (bad) fucomp and out mov mov fwait insb nop inc mov dec in stc pop xchg and daa int cmp xchg and ret xor into jae add add hlt lea mov sub (bad) divl imul cmp pop ja mov add test mov add jecxz jp dec cld mov inc push bound pop (bad) jne pop aam push lods addr16 les stos push add js jle inc out popa jg fldcw arpl fmull fcomi adcl ss nop aad out insb sbb cmp imul pop repz sti fstpl mov int3 and push adc notb mov xor inc shll xchg (bad) daa jo mov mov dec stos inc jge dec jp outsl les das fs fistp pop or sub add cmp and in lret xlat je out ss (bad) js test dec dec nop mov xchg mov sahf xchg jl loop cmpb mov jle cwtl mov push jecxz adc mov ds movsb xor and add aaa adc add cmpsb test ljmp fmuls xor lea int adc addr16 jnp ja or dec lock jmp push arpl fdiv adcl pop and mov aad out insb sbb cmp imul pop repz sti sub fstl mov push mov pop and adc mov xor fcmovbe mov xchg (bad) daa jo mov inc aas push inc jge dec jp outsl les fbstp or sbb jb xchg mov sub hlt in cmpl and sbb xlat scas (bad) out test dec dec push mov nop mov xor sahf cmpb mov jle scas mov std jecxz cwtl cmp ds movsb xor and (bad) imul add leave cld ljmp cmpsl dec out xor fcoms int adc lea jnp ja rorb inc jmp push arpl fmull fcomi ss jbe mov pop cmpsl (bad) repz jbe xchg sbb test data16 push pop in flds jecxz push jle test pop jmp and jno pop out dec add popa clc fucomip scas mov loop roll add int3 dec sbb mov mull jae jmp mov out cli xor (bad) mov ret jl push sarl xor fldl dec aad add rclb fiadd adc popf dec les cmp loope test jnp aas dec fsubrl rcrb mov sub repnz mov out jb,pn daa imul pusha rcll mov lds push (bad) jno pop jmp cltd gs fcmovbe lods fs sahf std hlt inc sbb xchg lods adc pop je repz xchg ret xor mov sbb test cmpsb pop in inc ficom fstps pop jmp and mov pop sub add pxor popa xchg fucomip in scas clc leave inc scas loop addl xor add (bad) dec stc jae jmp addr16 cli xor (bad) mov jp jo ret jl push rcr cld mov or dec xor aad inc xor ficom adc or mov test icebp and or insb jnp rorb xchg mov lret mov pop mov cs test in arpl mov lds push decb lret jno cltd jmp lods gs (bad) hlt fs sahf lods adc xchg jg cmpsl js mov jbe push sbb or sub in fcompl (bad) xor pop and ret cmpsb inc ds clc push xchg ja call test subb adc or js lock lret mov aam sti aas jle out subl push jne adc dec cmp add xor mov rorl leave mov lcall repnz nop into mov dec imul (bad) (bad) push repz mov in mov adc aad inc jnp adc mov and stos insb icebp sbb pop imul inc (bad) call popf popf push mov adc pop fist and pusha jae ss cltd xchg bound jmp inc xchg xor xor jl pop dec cld add daa sbb xchg or imul sub (bad) insb xor pop and ret cmpsb jb jmp clc push loope (bad) mov call adc or js pop pop lret mov aam pop aas jle out cmp sub (bad) mov jg cmp adc xor out xchg cmc sub rcrl mov leave repz or into mov cmp mov add mov in dec inc adc fwait mov aad inc jnp adc loop and outsl fnstenv sbb jmp (bad) call popf popf and push pop fild add and cltd pusha bound jmp xchg xchg movsb inc sbb pop sub in add dec or cmp lahf cmp adcl sub (bad) fdivrl lods mov das stc dec jb dec xor (bad) cmp cmpl out div pushf mov repnz push xlat add js inc fcoml or (bad) sti mov mov mov (bad) pop fwait sub ret mov jmp or jle into dec inc sbb pop inc cmpsb adc xor in push inc leave out mov and sbb enter dec xchg push add dec pop jmp mov xchg cltd (bad) insb and pop mov xchg imul xchg lcall mov jns int3 sbb jg lret xchg es sahf adc sets sbb cli jecxz jne sbb push add mov movsb (bad) outsb mov add mov scas push sub xchg (bad) mov or jbe out fs pusha jmp call fnstcw dec das lret push xor sbb movsl jge cmc or mov xlat add js push fcoml or movb ja mulb (bad) or pop rol mov or arpl jle inc dec adc adc in push inc xor mov and sbb enter dec ret inc dec pop xchg jl xor pop jmp xchg test (bad) cltd mov pop imul xchg lcall bound int3 sbb jecxz jae xchg gs adc sets push lahf test mov cli fnstsw jecxz je int push and movsb mov mov roll nop add lock fdivs mov daa cld jmp pusha mov mov dec stc rol push or xchg cltd sub clc nop js dec and sbb mov imul lcall lea test xchg int3 mov or adc inc adc notl into jne loope cs lret mov add jbe mov add loop lahf aam push mov jns push sahf adc pop xor stos pop push and stos les inc push mov pop repnz xor jg (bad) or mov push psubb push lods lods xor outsb out xchg or lock cld test sti push mov mov sub test daa das cmp cmc or mov sub mov dec movsl scas dec jns xchg pusha sbb cmp xlat ja inc out xor pop mov sar rcl push dec data16 ret out or sub inc nop popa fmull push mov imul lcall test xchg int3 dec shll and pop dec inc adc notl into mov cwtl jne push mov lret push jbe mov add cmpsl sbb dec push loop jns push sahf mov adc pop fildll hlt stos les inc cmp arpl repnz xor and (bad) movsb mov or jl cli push mov push shrd pop xor xchg fwait out xchg and lock adc xor inc cld push mov mov ss test daa das sub cmc inc adc push aaa movsl scas sbb dec pusha sbb cmp std ja scas out xlat inc jnp jno xor (bad) mov dec stc icebp ret mov movq sbb iret lods lock mov (bad) in and sbb (bad) push lds push aad out push sbb pop loop cltd pushf xchg sub sti lret jae fnstsw sub cld and cmc mov push inc std mov xor mov and pop shlb adc daa movsl mov fbld dec xlat test shrb ficom mov mov xchg inc add dec repz jne mov in test js ja xchg scas mov in int xor cli repz push xor mov jge scas adc lahf jecxz cwtl xchg mov fwait aam movsb roll (bad) sbb xchg stc pop incb jo mov pop aas or (bad) dec dec inc ficoml and sbbl into mov lock out cmp cmp (bad) push sbb (bad) pop push sbb dec out (bad) pop stos rcrl sti lret jae fnstsw sub cld and mov push inc repnz popa mov std mov das addr16 pop rcr adc daa movsl es mov xlat test shrb ficom ljmp pop jno xchg inc inc mov mov jne (bad) xor test lods divb xchg scas js cltd jmp in mov repz popf sub fnsave ret xchg cwtl adc mov mov cmp add (bad) (bad) aaa or enter leave add clc sahf aas or dec pop inc fcmovbe out jp outsl and xorl pop mov ljmp je sarl lahf repz adc cmp xchg sahf xor and push and cli push or fidiv test leave jp shr popa xchg lds lods inc adc pop pusha repnz enter adc inc imul outsb add push dec fwait jae das add sub stc (bad) mov into (bad) cmp or jl push arpl mov mov cmpsl xor add jae jbe xchg mov or pushf or gs push mov daa push dec and push inc mov sub pop dec dec mov cld mov mov daa inc xchg loope shl (bad) bound add int3 test (bad) or push mov js jno cwtl mov jns je ret fstps popf dec adc pop dec ja mov sbb sbb movsb dec cli dec data16 mov icebp fsub test cmpsl jp ds sarb inc adc scas out lods pusha repnz mov pop scas lcall enter push mov dec mov addr16 sub das (bad) mov into (bad) stc sub cmp jl or or push inc mov cmpsl xor sbb inc xchg and jbe or pushf or gs cmpsb mov push push dec aaa pushf dec daa imul inc cmp mov pop mov jo push dec cld mov mov daa inc push loope and xchg pop or ror bound jbe xchg imulb movsb or push sub cwtl mov ljmp je sarl daa xchg sub rclb push sub add mov fisubrl sub sahf shll or push lds arpl ret dec jno jmp lcall hlt cmp call mov stos push outsb js pushf mov lock mov loopne fsubr and mov mov sbbl mov pop adc xchg in cmpsb nop add (bad) inc inc (bad) xor lret mov das mov sti sbb enter or fstl and fildl mov movsb test iret (bad) repz cmpsb jecxz dec loope stos sub mov aam inc sbb fadds stc or pop insb push ljmp mov xchg les sbb jne adc mov mulb dec cwtl add xor daa jl mov rclb shrb in add daa mov cmp loop lods movsl (bad) icebp or sub sahf shr imul xor jno jmp fwait push aas mov int hlt cmp call mov and aaa or stos leave lock out mov cmc mov out (bad) and loopne mov lret sbbl mov pop adc xchg in cmp cmpsb inc movl mov sti mov or add xchg lods cmp cs fildl mov xlat test rol rep and adc aam sub inc orb fsts or pop insb dec ljmp mov xchg les sub jne mov and cwtl add xor daa jl mov sub rcrb rolb loope sub sub mov or pop out shll call mov xchg dec ror and cmp push and mov jl hlt push test and fdivrs xchg js push jle lret in inc gs lret add inc aas in push ficomp pushf and ret daa sbb sbb bound int3 inc mov adc push mov gs lods sbb jne mov sti rorl fs pop inc lods pop aaa jnp xor push dec iret cmp imul movsb xchg notl push popa icebp (bad) nop repz mov fdivl xchg cmpsl pop mov mov mov mov cmp cli jg shlb mov lea scas and insl pop sahf movsl mov shl xchg scas inc imul sub xor or pop mov es call add mov clc and cmp lret (bad) (bad) mov hlt push test mov xchg and push js lret js inc jle lret add inc aas adc push cmp fisub dec cmp sbb mov bound int3 push mov inc mov mov inc adc push sbb gs rclb sti (bad) jne fs pop inc dec pop aaa push sub lods push dec jnp test imul movsb pop notl push popa fwait (bad) nop ss mov fdivl xchg jecxz mov mov dec xchg mov cmp cli jg shlb mov test scas add sub mov dec mov insl loope movsl scas inc (bad) xor ret jnp ljmp cmp scas loope jns dec inc mov inc sbb xorl stos dec ret stos add mov jge inc xor inc sbb mov add leave push pushf push insb (bad) (bad) in jecxz or (bad) lcall dec arpl rol mov and mov scas jmp xchg push fistl int xchg aas enter mov sub sub in movsb mov mov push test (bad) aam popf out xor roll xor and in cmp movsl pop xchg push nop sbb and sbb push mov mov dec das (bad) mov cmp out lret adc or xor test (bad) or jb mov divb in cmp shrb hlt loopne cs pop imul mov sbb cmp xchg loope lahf jbe scas mov inc sbb xorl stos stc dec ret stos dec xchg add xor inc lds sbb (bad) flds pushf push insb (bad) leave in jecxz or lea (bad) outsb dec fisubl xchg les sti dec outsl adc mov xchg jmp inc push aas enter xchg or iret fsubrs mov movsb push dec sbb xor ds test jmp out xor mov (bad) push (bad) xor and cmp cmpsb movsl in push sub jg and nop mov sbb sub mov mov cltd das popl lods dec and sub lret out rorl xor adc (bad) pop inc pop test jb mov divb aaa cmpsl cmp loopne cmp adc int3 mov add ljmp cmp scas loope add movsl (bad) adc lcall dec in xor xlat bswap adc add call dec bound push mov hlt js jne mov aam dec scas sbb cmp out xor (bad) imulb fwait sbb pop lret lea mov sahf pop (bad) cmp mov xchg mov popa sub jne inc shlb mov je outsl push pop push es mov mov jns inc ret nop dec cs outsb fidiv sbb mov sub add (bad) jge and pop leave cmp pop cmpsl mov push jbe xchg or or stc xchg int3 loope lret adc cmp insl xor pop ret icebp xchg mov push loop push cmp mov inc cmp les push add rol adc pop enter popf loopne sti andl xor add call inc bound push mov jne mov xchg push sbb aam out scas pop dec cmp lods xor test sub fcompl lea mov lret pop (bad) push push and popa mov lahf mov jne inc shlb test xlat or pop pop inc outsl inc mov mov dec test jl dec jns outsb ret mov cmpsb sbb sbb mov xchg lock (bad) jge and jmp cmp pop xor shlb xchg (bad) mov xchg int3 loop lret adc cmp insl xor scas pop mov jge xchg mov push loop push cmp cmp les push daa std (bad) ss add movsl (bad) lcall pop loopne mov in mov or push inc xchg jo xchg sub (bad) jmp or cld repz add (bad) jle ljmp xor loope pop jg mov out stc jmp fstl dec fdivrs test cmpsl sbb fucomip cmp sub push std mov pop sub inc mov or insb out sti lods neg inc repnz adc mov inc lret add roll xor dec sbb cmp (bad) das xor lahf into in clc mov sub js je rcrb aas sahf push in pop xor cmp (bad) rcrb xchg inc xor and push (bad) sbb inc inc mov ret loopne cmc add test pop mov fadd pop adc cli int3 out mov pop mov sub push xorl push shrb mov in lcall xchg push aad lret xchg sub (bad) jmp or push repz cld cmovae (bad) stos pop ljmp ja loope pop jg mov and stc or out push jmp frstor cmpsl dec rcr cmp sbb push call and mov pop in dec inc xchg insb or fsubp repnz lods (bad) movl add add lret dec sbb mov mulb mov das movsb negl sbb into outsb cmp or push test mov in cmp xchg add and xchg pop inc push and push inc inc pushf dec ret pop cmp mov ss test fisubrl fdivrl int3 lds out mov pop dec cltd and sub xchg orl jecxz bound in mov nop and mov clc pop fidiv and cwtl pop popa sahf xor add lret pop xor push in (bad) mov mov cmp in outsl sub data16 (bad) pusha xor dec movsl jo call cmp int3 cmp xchg jbe out outsl insb push ss lret jp fwait dec leave dec ja out pop mov mov les ds out sub push sub push sub push sub push sub push das push das push sub adc push adc push adc push cs das push das push cs sub push adc push cs cs sub push das push sub push sub adc push sub adc push das push adc push adc push sub push das push cs sub push sub adc push sub push cs sub adc push adc push cs sub push sub sub push adc push sub sub push sub push cs das push sub adc push cs sub push sub push cs adc push sub push sub push sub sub push cs sub push adc push adc push adc push adc push sub push adc push adc push adc push adc push sub push adc push sub push adc push sub push cs sub cs sub push sub push sub push sub push adc push sub push sub push adc push cs cs adc push adc push sub push adc push sub push sub push sub adc push adc push sub push sub push sub push adc push adc push das push das push sub push cs das push sub adc push adc push adc push sub push adc push adc push adc push sub push sub adc push adc push adc push sub adc push cs adc push das push adc push cs sub adc push adc push adc push sub push sub push sub push das push adc push adc push cs sub push sub push sub push cs sub push adc push sub sub push sub push sub push das push das push sub adc push adc push adc push cs das push das push cs sub push adc push cs cs sub push das push sub push sub adc push sub adc push das push adc push adc push sub push das push sub push adc push adc push cs cs sub sub push sub cs das push adc push das push das push adc push sub sub push cs cs cs cs sub push adc push sub push adc push cs adc push adc push sub adc push sub adc push sub das push adc push sub push cs sub sub push sub push adc push adc push adc push adc push cs sub sub push adc push sub sub push adc push sub push sub sub push sub push cs cs cs das push adc push das push sub push adc push cs das push adc push adc push sub push adc push das push cs sub sub push das push adc push sub push sub push adc push sub push adc push sub adc push sub push sub push das push sub sub push adc push adc push adc push sub push cs adc push sub push sub push cs das push adc push adc push sub push adc push adc push sub push adc push sub sub push sub push das push adc push adc push sub push das push das push adc push sub push sub push sub push cs adc push sub sub push adc push sub push das push sub push sub das push adc push adc push adc push sub push sub push sub sub sub push adc push cs sub push sub push cs sub push adc push sub push sub push adc push das push adc push adc push sub push sub push sub push adc push adc push cs cs sub sub push sub cs das push adc push das push das push adc push sub sub push cs cs cs cs sub push adc push sub push adc push cs adc push adc push sub adc push sub adc push sub das push adc push sub push cs sub sub push sub push adc push sub push adc push adc push adc push adc push sub push adc push sub push adc push sub push das push sub cs adc push sub push adc push sub push adc push sub push sub push sub push sub push cs adc push adc push sub push cs adc push sub push das push sub push adc push adc push adc push sub push adc push adc push sub das push sub push das push das push sub push cs sub push sub push sub push adc push adc push sub push sub adc push adc push adc push sub adc push das push cs adc push cs adc push sub adc push adc push cs sub push sub push sub push sub cs adc push das push das push sub push sub push sub push adc push sub push adc push adc push sub push sub push sub push sub sub das push sub cs adc push sub push adc push sub sub das push sub push adc push cs das push sub push das push sub push sub cs adc push adc push sub adc push adc push sub push sub das push sub push adc push adc push sub push cs sub push adc push cs sub push sub adc push adc push sub push sub push cs das push sub push das push sub push sub push adc push cs adc push sub push sub push adc push sub push cs sub push cs sub push sub push sub push sub push adc push adc push adc push adc push sub push adc push sub push adc push sub push das push sub cs adc push sub push adc push sub push adc push sub push sub push sub push sub push cs adc push adc push sub push cs adc push sub push das push sub push adc push adc push adc push sub push adc push adc push sub das push adc push sub adc push adc push adc push adc push sub push das push adc push sub push sub push cs sub adc push cs sub push sub push adc push sub push adc push sub push sub push sub cs sub push das push sub push sub push sub adc push sub push adc push cs sub push cs cs sub sub sub push cs sub sub push das push sub push sub das push adc push adc push adc push sub push sub push sub push adc push sub push sub push sub push cs sub push adc push sub push sub push adc push sub adc push adc push sub push sub push adc push adc push adc push das push cs sub sub push sub cs sub adc push das push sub adc push sub push adc push cs cs das push sub push adc push adc push cs cs das push adc push adc push sub adc push sub push sub sub adc push sub push das push sub sub push sub push sub push sub push cs sub push das push sub push sub push sub sub push cs adc push sub push sub adc push sub push das push das push das push das push adc push das push sub push cs sub das push das push cs sub push sub push sub cs sub push sub push das push adc push sub push adc push adc push adc push sub push das push cs sub push sub push adc push adc push sub adc push adc push adc push adc push sub push das push adc push sub push sub push cs sub adc push cs sub push sub push adc push sub push adc push sub push sub push sub cs sub push das push sub push sub push sub adc push sub push adc push sub push sub push sub push adc push sub push adc push adc push adc push sub push adc push das push sub push push rol xor inc dec mov or xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc rorl dec pop inc push adc dec in movsl (bad) mov pop repnz jmp jge ss mov popf sahf pushf push insb mov and in inc out jnp fldenv pop aam lods jle inc mov jmp mov subl rcll push push js dec dec cltd addr16 sub in jecxz inc mov pop scas sarb jl in cmp jnp push scas mov (bad) cmp movsb (bad) (bad) and out imul test sbb popf sbb pop fsubrs mov cmp jbe or mov int3 inc bound lods enter lods enter lods enter lods enter lods enter lods enter ret movsl push popa int3 inc bound cwtl loope push xorb xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc fstl push inc mov xchg outsl pop xchg jmp add (bad) and pop pusha push jo add mov push xchg cmp push xor subb loope jo fnstenv pop aam lods cs mov shrb ficom lret mov or jge push js jge cltd addr16 (bad) push mul mov xchg sarl cmp in push adc or push scas mov (bad) js nop cli dec das movsb inc lret and aaa sarb bound mov lock and lret fld and sub dec sarb xlat (bad) xor lods enter lods enter lods enter lods enter lods enter mov popa int3 mov cmpsl pop or inc inc ret xorb iret lock mov addr16 incl jo loopne lcall sbb add xlat pushf pop and dec push ja,pn pop lea call mov xchg iret sub add add (bad) in xchg insb iret inc mov imul out cltd arpl aad push jmp mov out subl pop xor jo jle xchg fwait or stos or in xor ficompl popf data16 xchg push adc push in frstor scas mov add mov int test ss jl lock mov mov lock mov mov lret out xor adc add xchg mov jp xor enter lods enter lods enter lods enter lods enter lods enter aaa inc mov mov aam test dec (bad) (bad) mov mov mov test push loopne outsb pop (bad) repz xchg fldcw jns cli dec add mov sbb sub add xchg push push and push dec push push pusha nop fimull sti repnz fistpll in push jo out and test js loopne mov sub mov aad xorl out push lods sbb cmp xchg cmp xchg xor repnz in cmp fs pushf mov imul mov jecxz rorb mov jl pusha cmpsl fisubrl cli mov test (bad) repnz in push add insl pop jp es imul jb fbld push cmpsb mov xor mov jmp outsb pop int xor ret adc je jbe js add icebp or enter lods enter lods enter lods enter lods enter lods enter lods enter mov popa dec mov push dec push or imul cld push jo mov (bad) inc out fcmovnbe jl test mov add cmpxchg adc jae fsubrl cli or (bad) fdivl fnsave inc dec push push int (bad) ja xchg mov jns dec call (bad) xchg clc iret sub stc dec loop aas mov inc cld mov xor fwait mov pop rol sub inc pop cmp sbb inc lods mov fcom lahf pop cwtl into lcall jl stos adc daa dec data16 test adc xchg mov or cmp dec add in gs or gs push push dec insb cli add movsb sub (bad) cmp aaa lea cmp loopne dec clc and pop adc and shll test repnz popa enter lods enter lods enter lods enter lods enter lods enter cmpsl sub cmp xor adc mov push mov xor jns stc push pop push xchg push push jl add imul call test and int out mov mov jmp scas leave notl adc mov add jecxz arpl xchg gs mov mov sti push mov sti lds xchg outsl inc jo jp mov mov xchg outsb es adc scas add mov and jl mov sub insb xchg push jmp xchg fwait divb sti repnz ds push out enter (bad) pop lret pop nop icebp outsb sub (bad) sub adc jb addb push aad push xor add adcb movsb icebp push adc (bad) imul sarl lock pop inc cmp movsl push dec test mov dec inc js xchg cltd leave data16 movsl lret dec nop lods enter lods enter lods enter lods enter lods enter lods enter dec mov pop incl dec xchg loope pop jl add ret rolb addps pop mov je out adc addr16 adc cmpsl insb mov fstpl mov and ja add arpl jne popf jno push mov mov lahf push movsb jns ds add test and clc data16 mov lds popf mov mov call mov fcom mov dec sbb bound mov inc dec int3 in cltd es fldt (bad) mov sub lret aas stc sub jb or (bad) mov lret cli out mov je idiv pop lods scas mov test pop xor jb outsb xchg mov fisubrl lock mov movsl cmpsb out push ret xor pop xor adc insb cmp lods enter lods enter lods enter lods enter ds popa cltd into mov hlt fadd (bad) cmc push adc lods mov dec jns loope pop jns inc pushf nop mull repz fstp mov out push (bad) add leave xchg dec jo (bad) sti xor mov aad push jno in fisttpll inc or sub push inc xchg mov std pop xchg and in vmovaps cmp xor mov xchg (bad) xor aam scas out fisub inc lods rcll dec pop cmp sbb notb stos pop ror sub insb or xchg fwait (bad) mov inc cltd xor mov iret movsl mov pop sahf pop cmp ret scas and stos fldt add rorl and out sbbl sub test das std xor pop (bad) hlt aaa mov lret jae inc js into scas dec cmpsb fcomi movsl lret dec enter lods enter lods enter lods enter lods enter lods enter lods enter xor dec jl xchg or xchg dec mov loope pop jge fdivrl inc pop int3 ja loopne mov or ja lcall scas loopne xor mov and and adc xchg outsl push pop push loop sbb popf test insl mov adc fadds cmp add push lock xlat xchg lahf jecxz call xchg (bad) or pop mov cmova dec pop cs lret pushf cmp mov jl push js dec popa pop mov pop lahf das out add imul sub aas (bad) insb cmp inc and jg aad push stos call add pop pop scas fcmovne (bad) stos inc movb icebp lcall cmp in les (bad) outsb ss orb cmc dec loop call lods enter lods enter lods enter lods enter lods enter jle,pt mov pushf mov sub int dec mov mov jo xchg and mov pop aad push arpl xor or addr16 jo sbb in cli inc lock sbb lcall (bad) fcompl push sbb insl pop xchg push cwtl pop lea clc jns lret push mov mov inc mov iret cmc or cmp mov test outsb xchg adc mov pop sub (bad) push mov lret imul mov sub dec or mov xchg mov lahf mov das test dec js mov aam in sub jg push push aad push cwtl jmp movl mov arpl cmpsb mov rol bound sahf jl jno cltd sbb mov push out (bad) out and fwait out daa rclb (bad) test lods enter lods enter lods enter lods enter lods enter ds dec test ljmp int sbb test dec mov jge pusha pop xchg adc pop (bad) fsubp out adc in ss pop push and imul cmp mov push pop mov sbb xor pop sub pushf or out imul xchg xor test ljmp daa pusha js xor cmp les adc out and aad and fwait inc mov xchg outsl jg test sti (bad) xor lods mov loopne pop cmc aaa outsb repnz mov popf pop xor mov loope cwtl dec inc sub mov and dec in jg stc sub xchg sub xor add sti mov int arpl xchg inc mov enter pop std cmp insl mov push call and (bad) icebp aad xor jne enter lods enter lods enter lods enter lods enter lods enter xchg in ret repz mov test mov cmc jno lds cmp sub push dec repnz imulb in test stos mov fldenv pop mov inc lods lret je dec js xor xor not (bad) mov xchg push inc xchg mov hlt pop xchg data16 mov push jo les jne mov arpl insl (bad) int into mov je sbb adc imul cmp lea dec dec mov lret test inc push lcall xchg fwait (bad) int3 and fwait mov test dec js jmp xchg xchg ret ret cmp call jp adc leave add outsl (bad) stc rcl dec aas (bad) aas sbb pop adc jmp dec cmpb out std stos adc fdivr fs dec pcmpgtb mov lods enter lods enter lods enter lods enter lods enter lods lret adc push das js and popf mov or add xchg loope xchg (bad) cmp sub lret lods ds lock xchg nop inc sub push inc jns pop out bound popa mov sbb and lret jo ret test mov nop sub pop jnp lea hlt pop lret js lds sbb push mov sbb pop mov shrl adc mov cmpsb sub (bad) sub ret inc xchg repz fsubr shlb and xor loop hlt bound pop adc mov test (bad) jo popa pop mov in jg stc loope,pn inc orb or dec cmpl das movsb ret pop sub inc imul into mov (bad) jno jp (bad) pop and clc lods push pop loop lret mov dec push dec and lods enter lods enter lods enter lods enter lods enter lods (bad) (bad) cmp pop add call jge mov add jbe xchg mov push push xchg sub (bad) lret leave pop loop stc loopne pop fist out insl test or xchg jecxz outsb fistpll pusha in dec repnz pop mov jmp add mov test std pop or fdivl dec aaa push mov std fadds and stc pop insl (bad) xor aam sub xchg aad scas push pop mov xlat (bad) push cmp mov cmc mov (bad) jb sub cmp addr16 (bad) mov jl pop pushf (bad) icebp aas (bad) insb nop xchg dec pusha mov pop mov mov jae jae nop add lds ss cmpsl inc push mov fucomi sbb loope lea mov fcmove mov cmp lods enter lods enter lods enter lods enter lods enter lods enter pop cmp mov bound add mov pop adc mov push dec sbb sbb div bound xorl out cmp cwtl push cwtl add dec xchg and leave jmp inc mov push jle int mov (bad) jbe dec dec call lock or or jp outsl loopne dec push push inc pop outsb cmc daa xchg lahf jecxz outsl daa pushf cmp movsl int3 jno pop xlat stos shrb pop mov adc or nop jnp mov daa rorb or cmpsl add fstp repz scas dec pop add jno out rorb inc push mov mov mov add mov ds loope adc xchg xor jg pop fisttp fcomp call add enter lods enter lods enter lods enter lods enter lods enter or dec jge test lret mov sbb lods sbb ss xchg inc add jae jne inc cwtl sub push call mov leave xchg hlt lahf mov sbb out mov adc adc pop jb pop sbb cmp (bad) and lcall cmp push mov adc mov in rcl dec ss adc and jno rcrl rcrl lods stos sar (bad) add mov cmp (bad) je jmp sbb sub mov in gs pop cmp adc sub mov mov insl or pop out js in (bad) cmp in cmp dec repz inc rorl and xor xchg mov inc mov mov lods enter lods enter lods enter lods enter lods enter push jle int inc lcall adc (bad) movsl stos jp lahf into daa inc (bad) pop xchg dec sarb (bad) xor into or jne (bad) push test mull xchg mov inc pop xchg ret mov mov int sbb in aas pop (bad) pop lods pop xchg mov or mov leave loopne in push jo int mov xorb loopne sarl sub jle xchg outsl mov lods cs mov and jmp dec ret jo sbb inc push inc xor fldt fwait sub sbb pop pop cmpb xor push fiaddl and adc test (bad) ja ds aam movsb xchg test aas cmpsb mov sbb in bound aad enter lods enter lods enter lods enter lods enter lods enter dec push mov popa cmpsb inc or jecxz adc push pusha add in push ljmp jl cmpsb fisttp inc pop fidiv dec push fcomi loope or mov jb iret mov and xorl and or push pop sahf out pop add shl xlat test repnz enter test cmc sti push mov cltd stos pop push insb fadds jg ja insl ljmp aad lods push sbb in sahf pminsw and lea sbb push js dec dec sbb or scas adcl xchg mov das addr16 out and fldcw push incl inc push dec outsl add sub xchg or test sub in mov pop sahf aas movsb mov fdiv fldt and lret dec int3 cmp enter lods enter lods enter lods enter lods enter lods enter lods test mov int cmp push sahf ret inc bound lcall mov xlat jl push pusha xchg mov idivl (bad) insb mov out imul (bad) stos data16 sarb fstpl repnz sub stc xchg (bad) (bad) outsl or xor sti add push leave and subb add fs lods cs mov aas shrb xor sbb sahf fwait (bad) mov mov movd push adc mov sarl push cmp aad aad popa std add popf stos push mov jae ja add aaa and mov out lret cmp xor jmp cmp pop mov xor clc mov into and mov enter lods enter lods enter lods enter lods enter test mov xorb sub mov mov ret movsl mov lea mov and imul stos xor xchg add call mov add mov mov sub and push sahf mov loop outsl mov mov jge add push or sti fcoms sbb in inc dec pop daa leave stos push leave movsb lods outsb aam arpl je pushf cmp cmp push rorl int xchg out ss pop and stc ficoml xchg int3 stos repz ja and xor adc mov push jl mov es dec inc push nop xchg push orb jno xchg and scas or cmp lret cmp insb lea jbe push inc cmp lret loopne lock jecxz push adc mov lods enter lods enter lods enter lods enter lods enter std pminub xor push je mov add mov adc sahf and mov mov pop cwtl sub xor lock cmp dec sub cmc popa xor pushf add mov cmpsl outsb sub lcall test ror cmp xchg outsl or fcmovb lods addl inc (bad) xchg or enter mov movb xlat lds subb ljmp mov cmpsb jmp cmp out addl insb xor loop hlt bound xchg sub add sbb add jno dec ljmp jns loope mov dec lds js sub (bad) sub icebp push push ds outsb test jo xorb bound inc inc enter lods enter lods enter lods enter lods enter lods enter bound lock jbe loop sbb (bad) cli mov (bad) shrb and mov aas push inc mov ret jbe xor push pushf sub scas testl rorl js (bad) push pop rcrl out jecxz movsb and adc mov adc divl jns lds mov add enter test in xchg insb iret inc pusha pop (bad) jg gs scas fpatan iret sahf mov mov mov insb loop and sarb ss insb or std in xor popa popf push mov int3 xchg cwtl in or dec fwait xchg (bad) cmc jl cli movb or scas and popf insb test xlat sub cmp sub sub cmp mov popl into pop mov sbb ljmp adc movsl xchg enter lods enter lods enter lods enter lods enter lods enter or push cmp cmc das cmp sub pop enter add sahf movsb mov push mov scas add sbbb mov fbld pop aad jmp push push lahf xor scas imul mov add mov dec push jbe lret sbbb jns pop arpl popa (bad) call cmpsb sahf xchg jmp (bad) shlb out aaa out push jo out and cld stc dec pop sub mov pusha hlt dec xchg aad cmpl sub dec popf dec xchg pop dec push insb loop fdivrl rcl (bad) rcll or pop mov dec out rorb inc lahf cwtl add push push adc push call push lods sub add pop or ret in xchg lods data16 addr16 lret rcrl xor jl pop (bad) pop mov loop lcall repz cmp enter lods enter lods enter lods enter lods enter lods enter sbb leave adc push gs xor scas ret mov mov dec or testl xchg push sbb xchg push dec orl mov jle stc adc sub xor fistp or sbb mov and lcall jge jmp xchg into stc lahf insb push and adc mov cmp mov jle xchg jg mov mov (bad) xor ret (bad) out mulb lds je stc ficoml sbb inc inc push in outsb cpuid dec js into mov sub icebp mov movsb in cmp popf adc hlt adc mov inc movsb lret push xlat cmp mov mov jnp popa pop dec clc cmp lods incb jmp scas enter lods enter lods enter lods enter lods enter lods enter jb xor mov jg xchg dec cmp sahf xor dec and sahf xor push ret dec push xchg adc or add lods push sbb adcl sbb imul addr16 in xor dec cmc inc mov xchg loop jmp xchg outsb lahf adc mov push mov stos fs in xchg insb iret inc mov jge aam mov push int3 ss in cs lcall pop mov lret dec jg or xchg xor aaa push js movsl scas inc addr16 pop pop imul lahf sarl mov in sub push push jne mov incl out scas rol insl add lret dec loop add push push inc dec xor mov popa test int int jae (bad) dec or (bad) enter lods enter lods enter lods enter lods enter lods enter lods scas dec and mov insl xchg scas xchg inc mov cmc movsl aas cmc pop or xor cmp add pop and popf (bad) int3 pusha bound stos add movsl xor imul pop push jae pop push fldl loope aaa imul fsubr and push shr ret mov mov test jb adc (bad) lret dec dec ss sub ss mov out mov pop (bad) imul sahf jecxz pop mov (bad) sahf outsl lret test jmp mov fiaddl dec jns out jle gs ljmp inc cmc xor test lret xchg movsl jb inc add out mov rcrl xchg ljmp cmp movsl enter (bad) scas sub (bad) fs xchg icebp or popf sbb aaa jae stos dec cltd stos enter lods enter lods enter lods enter lods enter lods out push lret adc pushl dec addr16 (bad) rol movsl (bad) jl xor popf cmp in sub ret or xorb les fs repz push xchg mov lods fild imul es cwtl jbe repz ret add cltd stos fist push test pop xchg jmp add icebp mov test ret dec mov cmp sub mov pop sub sub push sbb or push pop insl scas cs mov inc aam push loopne xor sbb sub sbb sbb mov (bad) and cwtl je pop mov push jp cmp in inc mov fisubrl or mov (bad) xor into mov mov lods xchg enter nop inc pop or inc xchg bound roll lods enter lods enter lods enter lods enter lods enter mov cmovs mov sbb cmp test dec bound add pop add jbe and aad jnp or xor add jae (bad) jae scas mov fwait gs cli dec add mov or imull std push dec js xor and or das or cmp std popf jne fdiv test lahf ud1 and call cmp outsl imul ljmp push adc movsl add jbe stos shlb ss mov mov xchg jb (bad) repz in cwtl inc inc push clc es mov mov int3 es mov adc sbb fstps into ja mov pop sbb clc ror movsb enter jmp mov jg inc (bad) xchg mov mov adc mov aad out jne lods enter lods enter lods enter lods enter lods enter lods enter mov out dec (bad) ljmp lret movsl aas adc or cmpsl hlt sub cwtl mov lahf sub andl and pop sub adc or out (bad) mov pop mov cmp and mov cmp test stos cmp int lahf ret (bad) ficomp fwait jge mov xor aad movsl adc sbb mov cmp icebp fnstcw test ds jmp out fmull add lea idivb lea rcll xlat sbb fdivs push and rorb aaa pop dec lods push xchg jne dec js (bad) lcall ret scas and xor fucomp mov jae mov xchg rorb mov inc sarb arpl bound sbb lods enter lods enter lods enter lods enter lods enter ds sub ljmp xor outsb mov mov stos pop mov popa xor xchg cmpsl incl ret movsl hlt xor jo sahf push orb popf or imul lret pop scas lock xor pushf add jo mov jo cs icebp fisubl jbe adc loope xchg push notb test xlat jmp aas loope ret and push sub jo jno xchg cmp sbbl and push add pop lcall inc aad inc mov inc mov cmp (bad) xor in rcll stos nop sub inc inc movsl in jecxz cmp sbb ret cmp scas and xchg scas mov add je cli add sub adc cmp adc xor fdivl jl (bad) out (bad) lcall lods enter lods enter lods enter lods enter lods enter cmp fsubrs or iret cmp mov ret int icebp popa into lods sbb mov or mov pop lea fild iret jb sub sub pop in (bad) mov das jbe sbb jae sbb pop movsl dec jbe dec pop scas jecxz rclb dec xchg mov popf scas sub jb call popa aaa push shlb cmp jecxz das xchg xlat enter (bad) xor es subb loop add xor adc mov pop pop inc fldt push sbb jne mov mov insb inc rcrb jle test xor or sbbl mov flds in unpckhps in sub add jle jg mov cwtl mov add bound cmpsl fldt mov or int fcmovb sbb gs sarb lods enter lods enter lods enter lods enter lods enter lods enter lcall call jg int cltd dec dec fdivrs mov sbb push adc enter jo dec push orb jne xor test call negl ljmp mov lret push (bad) xchg mov fwait repnz dec fcmovnbe (bad) adc dec cmp in movsl adc insb ja insb jle xchg jbe xchg icebp popf addr16 mov call fild jnp in lods push push push roll xor popa adc cli cltd mull adc bound mov andl sar stc paddsw sub outsb cmp xchg outsb leave xchg shll outsl cmp pop outsb push push sbb push cld (bad) aas out pushf fcompl dec mov cmp std outsb lahf push cmp pop ds mov mov mov addr16 or lods enter lods enter lods enter lods enter lods enter pop xor daa jae int3 pop lret arpl movsl stos jne subl push ss dec inc int3 cld mov or adc js mov inc and popl push mulps ficom mov (bad) repnz pop dec add out add add cmp and test in push cld gs pop insb add push mov dec js jge xor mov inc inc loopne pop popa lea mov sbb fadds call enter push sbb inc jecxz iret and xchg clc fcmovnbe mov mov scas dec pop ret lcall cmp test jl fs idivl inc push jmp jno and call in inc pushf in aam frstor xor xor cltd mov adc test movsb enter lods enter lods enter lods enter lods enter lods enter fcompl arpl (bad) fdivr xor pop jns mov jecxz frstor bound repz sbb pop fwait cmpsl pop xchg inc mov jmp sub insb pop mov or (bad) fnop aad push add fisttpl jnp enter adc push mov push rcrb lahf or mov rorl idiv mov mov inc loopne mov fwait je sar stos cmp pop test and inc push mov js xchg fsts cld bswap mov imul test repz (bad) mov cmp push adcb outsb scas (bad) leave sub arpl jmp cmpsb mov xchg inc lcall cmp rolb mov out jle adc sti add stc or jne test fsubrs mov imul in sub lods enter lods enter lods enter lods enter lods enter lods enter jl jnp mov in insb rorl dec inc int3 div cmp push jae sub loopne sub mov sub xor adc dec push push jl sbb hlt xor clc mov in aas xchg dec and mov jae jmp lods jmp lock outsb pop movsl sbb nop addr16 loop mov dec mov sbb idiv imul and jg mov loopne cld fcoms (bad) or in outsb and mov xor push ja adc jnp xchg push test cmc daa sub cli loopne fimull mov cmp mov fwait in mov xchg jmp das jno pop jmp mov adc xchg add mov mov mov dec push call lods enter lods enter lods enter lods enter lods enter lods enter or jmp bound lret ds mov pop cmp shll add cmpsb mov popa mov arpl mov js add nop dec out jb adc int or pop push fwait or enter mov jo xchg daa test sub mov test xorl mov imul or dec jnp add arpl and and inc push mov xchg or push sbb fldt push pop shll loope rclb push mov cs mov mov imul fdivl dec in jle pop pushf jbe data16 inc rcll (bad) out les stc and mov out addl dec cwtl sub mov call adc (bad) sbb dec das pop ds xor adc enter lods enter lods enter lods enter lods enter lods enter (bad) xchg call loopne cmp dec adcl cmp int3 or jbe ret adc jnp bound fwait cmp lods jg push cmpsl or mov mov dec push icebp or push xchg dec jo fisttpl push sbb or inc mov add or cmpsb movsl adc jmp pusha or (bad) sbb add in movsl movsb icebp lcall xchg sub push ds das push push mov in cltd mov test xor loop jp stc jae shrl sbb movsl jg pop jmp test loop divl sahf push loope mov adc inc or push xor add cs dec notb scas mov test or enter lods enter lods enter lods enter lods enter lods enter lock xchg pop mov xor xchg and push rclb xor xor dec xchg aas movsl push popa xor outsb ror es bound xchg sub push push jge push dec jg imul inc aam sbb lea lret fisubrl add inc push push (bad) push pop dec ja pop sbb test int3 mov loope xchg data16 and pop pusha aam sbb ja mov stos jg inc call pop or cltd xchg fs mov push pop aad cs mull mov je mov push or fs sti stos xchg cmc out mov adc jno fcmovnu lds cmp fnop inc hlt mov repnz mov mov add add outsl push pop mov (bad) or test pop insb enter lods enter lods enter lods enter lods enter lods enter sub jg push mov push jmp stos (bad) repz iret pushf inc dec daa mov (bad) movsl lock out ret enter mov jbe cld mov jg xchg sub push into add dec pop pop push test adc imul adc mov lds outsb out (bad) sti push pop fstl mov inc push sbb popf loop lret xchg sub repnz cli scas (bad) mov in push jo add imul xchg lds jmp out psubsb outsb pop insb lods movsl push jae push mov cmpsb cmp push adc inc xchg mov push push and mov dec in mov adc lods mov call test cmpsl and or ret cmp add repnz addr16 aam test inc inc or mov pop bound lods enter lods enter lods enter lods enter lods enter ret sub fsub (bad) fisttpll add mov js dec sbb dec adc cmp leave inc mov dec add sahf inc (bad) jmp mov push xchg push and leave sahf or inc out outsl push and (bad) cmc cwtl stos xchg cmp inc outsb add fcomps push loope and mul movsl lods pop xchg fs push lea lods addl adc cmp ret movsb jecxz jnp in loope fsub dec mov inc scas push and pop jmp int3 in mov out (bad) push mov adc cmpsl xchg or gs call dec mov in inc mov iret mov mov addl hlt sbb cs push pop out push lock das icebp int cmpsl add pop in mov xchg lods enter lods enter lods enter lods enter lods enter lods enter cmp sbb add pop push out pop jb jne mov pop mov add inc push (bad) pop inc mov rol pop inc mov jmp das mov ficomp arpl loopne xor xchg fisubr popf ficomp mov push mov (bad) addb or pop out iret jge sbb lcall fdiv adc or fwait xchg test pop mov stc dec pop push (bad) outsb mov dec sub sub (bad) ficompl sarl xor rolb pop and or or je jns addr16 sahf xchg fwait (bad) int3 and mov inc scas adc pop push addb cwtl sub and in (bad) je nop add lret push fdivrs sbb jle test jge enter lods enter lods enter lods enter lods enter ds addr16 arpl loopne lret fld and lods loope das mov pop jl xor test and popf mov xchg and push imul sub sarl jns out sub mov jmp push cli push icebp jo ljmp enter and int out mov movsb popl and nop mov pop pushw insl mov xchg pop repnz pusha add push test mov inc in pop pop out lods mov mov mov sbb imul rclb movsl xor shrb mov push xor rcrl jmp cmp xchg popf loopne push in dec sub xchg sbb dec mov and lods push pop inc inc sbbl cmp and out xorb pusha lret inc cmp lods enter lods enter lods enter lods enter lods enter lods enter fsts push fcompl ret and pop (bad) push lcall cli ds addl dec add aas cmc add or sbb jecxz imulb in int3 in xchg adc push outsl hlt popa xor pop or sbb jge hlt cwtl inc fbstp push dec addb scas mov ss xorl popf lea mov imul in jg xor mov xorb pop scas cmp imul out sub shrb out adc rcrl sbb cmp mov in jge sbb (bad) mov cltd addr16 ja lods jecxz and outsl adc jl xor mov mov aas mov mov jne xor add adc and imul jp repnz lods enter lods enter lods enter lods enter lods enter repz fsub clc clc mov scas pop add insb mov jae xor jp mov lret cs cltd mov rcll ret movsl cld or mov mov dec loop inc cmp push test dec lock dec xchg (bad) push push jl pop in rorb adc and jno dec in repnz mov int3 or sbb lods lret sub fdiv push ss mov stos (bad) sbb mov jp loop and inc pop sbb (bad) clc adc xchg es xor sbb outsb mov xchg push lds lods imul add fstpt jle out and mov mov mov xor cmpsb jbe mov sahf fldt bound cmp (bad) in das and stos scas mov test mov adc and cmp adc test lods enter lods enter lods enter lods enter lods enter mov notb mov rorl out mov jmp int notb (bad) jbe or sub and sahf inc add ret jp push popa incl and push inc xchg orl nop imul stos test dec jecxz data16 int3 lods aaa or jbe gs xchg jo (bad) xlat fwait test mov xchg xchg sbb scas ret adc push jo test and out lods jno dec xchg or sub jno movsb cmpsl jge aam lods sbb cli stos lahf shrb fwait mov pushf repnz les fdivrs or add mov out cmp jmp and and gs pushf lods mov mov mov and and adcb lods enter lods enter lods enter lods enter lods enter lods jnp inc repz pop insl movsl aad push out daa fistp insb xor (bad) sub jns mov mov add jbe add std sbb cmp std mov ds jg fwait xlat add insb (bad) mov sbb mov stos (bad) xor or push adc inc (bad) cmp insl lret (bad) fsubl dec loop sbb jle call push xchg insl stc jns dec call (bad) xchg test pop es mov stos fs and iret push js inc xor xchg fsts mov test lret out xchg (bad) int3 inc cmp subl cmpsb js or sbb sub mov insb mov fisubr dec xlat cmpsb jmp xchg jns ret cmp push int jge jb fldt mov lret xor and xor (bad) enter lods enter lods enter lods enter lods enter lods enter aad lahf push cmpsb mov cmp (bad) mov xchg sub mov jnp jg add (bad) sahf xor iret pop mov mov xchg popf mov pop icebp dec pop or push jge inc mov cmp or adc mov inc xor call mov sub mov (bad) lcall cmp scas mov and clc push add (bad) fdivrl or jb and sub sbb aaa popa out lds dec loop aam push adc arpl into and je aam inc sbb fcomps (bad) pop xchg lods (bad) xor repnz pusha xchg xchg fwait or mov push movsl jns xchg fldl pusha dec mov push pushf test mov loopne leave sbb jle pop jg inc call mov push aad push rcl dec aas lea cmpsb cwtl aas enter lods enter lods enter lods enter lods enter lods enter bound int bound roll add xor or insl xchg xlat xchg je fsubrl nop es sahf add pop das cmp xor sahf popf cmp jg shlb imulb and out xchg or imul test cmp dec add mov ds out mov and and subl push push popf xor ror repnz pop ss mov (bad) (bad) sbb cmp mov test (bad) mov jle xchg ljmp push adc test dec push push mov popl cmp lcall jno cwtl movsl xor mov xchg xchg pop stc ret cmp scas test jnp lea or jae dec outsb add outsl fidivrl sbb enter lods enter lods enter lods enter lods enter lods enter lods aaa xor popf jp xchg sarl cld push and lock or iret cmp es sahf (bad) movsl pop mov cld aad imul mov or fstps xor frstor mov jae cmp (bad) insb stos push (bad) add jo sub xor jecxz xchg enter dec out mov and mov loop push pop int rcr cs pop vmovaps add lods push cmp cli pop jp xchg push leave cmpsl icebp or lds pushf inc and sub pop cmp sbb imul cmpsl dec sti aad cmpsl adcl ljmp mov out and rorl jbe dec (bad) mov jo push jae and stc stos lds push clc pop mov mov lods enter lods enter lods enter lods enter lods enter push add jnp imul push and sbb pop rorl pop mov sub mov mov aas cltd inc sahf test das cmp cmp mov add cld nop or dec pop ljmp stos add cmc ret sub fbstp xorl push into dec and sub in dec repnz add and aas xchg push mov sbb int dec jb in cwtl fdiv test lahf test idiv push lods add or push leave cmp sahf jge lds rcrl cmp sub and sar out mov jge push jle gs iret xchg cmp divb sbb ljmp mov xor jle add fisubl cld push mov cli mov push sub loopne add enter lods enter lods enter lods enter lods enter lods enter iret xchg ss (bad) xor insl and mov inc sarl stc jp jg dec movsl add mov cli mov bound add scas shl rolb je nop call (bad) adc sub testl lahf push test xorb sbb jp inc xchg or mov outsb fs pcmpgtw sub jae jbe call enter mov stos xchg sbb decl cs cmpsb cmp test pop mov push mov fcmovbe leave call jb je repnz jge xchg cmp dec mov gs xchg and sbb insb test inc mov scas dec jle jg push movb push mov push outsb test dec stos enter lods enter lods enter lods enter lods enter lods enter jb jb je test sahf (bad) dec xchg bound push lock loop jmp sub int shll (bad) (bad) das (bad) dec mov popa inc add dec jl jmp loope scas or sahf jae mov pop jno adc ds pushf sti inc lock pop out in je pop out sbb lahf loop xchg xchg lret jne mov shlb stos rcll gs sub in lds ljmp aad mov pop in ss or inc test outsb loope add and xchg mov loopne push icebp inc aas push cmovg dec pop nop insb inc aas cmc push fsubp sbb cmp jge push xchg mov mov cmp jmp cmp scas test flds jns or cmp mov inc xlat test lods enter lods enter lods enter lods enter lods enter lods enter (bad) push pop or test xor int3 cmp dec sub fstl out and lret xchg data16 aaa or push ret movsl incl pop loope ret movsl (bad) jl lods mov xchg inc mov sahf ficomp adc pop out mov push or inc adc cmp or (bad) sti inc jae hlt or jno xchg jmp cmp xor pop notb pop inc imul in jns lret jecxz leave xchg pusha mov sti fmul hlt adc mov xchg cmp jg insb cli jmp repz pop cmp adc gs pop cli jecxz pop aas push xchg xor pusha and mov data16 int3 mov adc sub mov testl adc dec xchg adc inc xorb and sub lods jns ja mov enter lods enter lods enter lods enter lods enter lods enter sbb es lods jp sbb bound out outsl gs xor mov ret xor je movsl lret dec inc ds xor ret pop mov mov mov mov jg dec cli mov and out int dec std mov mov or sbb lock fisttp mov scas mov pop xchg loop call xchg aam sbb cmp xor inc add mov je leave mov jg add mov sub movb push test xor mov (bad) push dec sbb xchg push ss js out negl rorl jecxz push jno mov cld jns adc adc repnz sahf adc jg ja fistl sub lods enter lods enter lods enter lods enter lods enter mov xor into test outsl fwait mov fwait sbb pop and push lods movsb insb lahf and mov dec jle and (bad) out xchg in jl cmp mov push push xor ret push mov sarb faddl xor repz xchg mov sbb or xlat lcall cmpsl (bad) cli inc pushf fs xchg enter dec mov lods and mull sbb cld arpl jge mov pop iret mov sti fadds or or push leave stc popa ja xchg add andl push rcrb lods cs mov push aaa subl jge xchg adc pusha xor leave dec (bad) pop sub xchg xchg test cmp sub ljmp push les or adc push sub lods enter lods enter lods enter lods enter lods enter lods enter xchg fbstp inc push xor push cmpsb mov xrstor fstpl leave mov cltd in and sub cmp jbe xchg cmp cmp xchg icebp or adc adc cmp xchg and xchg push stos rol push out xchg add pop or (bad) mov xor hlt test jno xchg pop cli cmp xor jl add mov and test xchg mov adc stos lahf test pop loopne inc add cmp jmp push repnz insl cmp jmp aam ljmp loopne pop movsb (bad) popa mov inc fisttpl push sbb mulb xor in jle mov (bad) stos xchg mov inc scas dec js jp addl dec mov xchg popa test out or add arpl repz enter lods enter lods enter lods enter lods enter sarl sbb dec xor jne popa test push or pop jnp xor stc daa push adc and add and out pop pop xchg icebp or mov push pop add xor push ds push mov and out dec sub aam mov call mov mov jae imul in ffreep mov mov pop stos fldcw ljmp xor mov jg stc sbb add movsl leave cmp adc pop shll aad scas shll gs and aas fsubr shrb stc mov pop out pop popa mov or addr16 mov add xchg cmp or aad push outsl push pusha jmp dec push imul scas push mov lods enter lods enter lods enter lods enter lods enter lods enter sub xor mov inc dec movsb test out fist (bad) xchg fcompl iret cmp (bad) out dec jns ffree or push lahf insl test das xchg cmc add jbe jle add mov mov cwtl mov add mov mov dec seta out inc push dec sub fsubr pop inc adc addr16 cmp mov mov fbstp xchg jns cmp adc or inc fidivrl cs (bad) js fstpl add jns lret movsb jb push popf adc and bound cli xchg lcall int3 in adc pushf lods sbb adc xor std sbb inc ja lods (bad) and mov lea pushf mov mov mov cmp mov fistpl addl mov scas int ja (bad) fucomp pop js cmc adc (bad) (bad) push enter lods enter lods enter lods enter lods enter lods enter lods inc fsub mov jle sarb lcall cmp scas roll adc and xor sub adc iret in rcrl mov xlat int mov jno addr16 sbb mov dec fcomip stc adc mov or jbe jo mov jo and cli pop in dec push pop test mov cmpsb adc cmc xchg mov jmp xchg xchg xchg lds or and mov pop cmpb cli pop ret mov aam ljmp xor jmp adc xor cmpsb push push int cmpsb subb xor mov or lahf push lods jecxz shl pop popa in xor sub dec ljmp test pushf jb jns clc imul lods enter lods enter lods enter lods enter lods enter loop lea inc inc mov pop push rorl adc or pop pop jecxz xor and push and pop xchg ret int icebp popa dec lods push sahf jbe xchg pop mov mov mov add mov inc and inc fisttp (bad) adc jo loopne dec sbb mov jno js gs mov fnstsw add push add dec mov mov xchg pop pop or mov mov mov mov xchg mov outsl es int3 mov rcll lcall aas push xchg (bad) jl mov sub push negb mov xchg xchg popf mov test mov (bad) jb mov sub jle jg fucomip lods sbb adc add lods enter lods enter lods enter lods enter lods enter jbe,pt inc xlat (bad) sub mov dec push fist int jne jbe wrmsr scas outsl or scas and mov test out cmp jne das stos fwait (bad) icebp popa inc shlb aaa cmp ja push sbb mov sbb js push mov fld1 push test or mov sti inc pop mov out pop (bad) or adc nop aaa mov daa outsl pop xchg cmpsl pop mov scas jae insl xchg xor movntq out stc adc pop push sarl mov push aam addr16 gs dec or jg (bad) aad pop mov xchg (bad) sar sbb inc mov fnstcw or inc in clc xchg leave es jb adc sahf fidivrl imul lea or scas shr inc add lods enter lods enter lods enter lods enter lods enter (bad) jg lds add es test jne push mov xor daa (bad) lret jae daa cwtl mov cltd xor dec hlt das cmp add mov ret movsl jp outsb dec push popf mov addr16 imull (bad) xor repz push dec sub pushf add jo xchg inc mov jno sbb fstl and addl loope in imul ljmp xor stos (bad) xchg or mov push mov sbb insl (bad) lea dec les (bad) in sbb xor rcr lea data16 out cmp jecxz subl sub jnp scas out popa lods imul push js jo cwtl addr16 inc into in jecxz cmp sbb ret cmp push (bad) cmp mov or add xchg enter lods enter lods enter lods enter lods enter ds add cmp (bad) pop sahf lds stc into push cmpsb push inc sub cmpsl xor fsubs push xor sbb dec jae cld inc mov xor push or inc bound push xor add xor or adc rcr fmul inc fild iret jb mov push or inc adc addr16 adc mov and jno js in adc fcmovu (bad) cs movb push mov rcr repz lahf mov aad test inc jo jp mov shrb or out rorl les xchg (bad) enter jl dec stos scas (bad) mov in dec test sub movsl daa cwtl add and or dec js pop fnstcw rolb (bad) jae push and adc js movsb push inc dec lods enter lods enter lods enter lods enter lods enter lods enter add xlat int3 test adc mov test jno pop int bound roll adc mov ret movsb mov fiadd setle (bad) out ja cmp push popa inc add dec in in push les xchg xchg iret repz (bad) dec jle xchg sti clc or cmovnp add xchg pop frstor (bad) pusha nop jp cmp gs outsl rcll sub arpl jge or imul xor inc adc cli pop push insl movb jmp subb jg (bad) fs (bad) dec aam lods pop adc xor inc xchg pop dec out lret push arpl lahf push rcrl je stc ficoml call rorb aaa sbb or jecxz xchg movsb jle jnp push cs ljmp stos push pop js mov lods enter lods enter lods enter lods enter lods enter adc jecxz mov mov jae xor xchg dec jbe imul dec pop dec clc xor stc daa push pop test xor les test cltd in mov mov cmp pop aam int3 inc out xchg pop add sahf jns pushf mov jo stc push orb mov and mov aad pop subb or (bad) xor sbb pop nop fstpl (bad) or cmp cmp jmp xchg lcall push jo jno push mov mov cmp push mov movsb loop aam add mov or cltd scas popl cs cmp stos pop rcrl shlb xchg add xchg mov lret push out sub cmp (bad) sub dec ljmp stos push imul enter lods enter lods enter lods enter lods enter lods enter or inc movsb sub (bad) sub maxps fist xchg jmp lcall int dec cmp mov mov xchg jb lea mov fsubrs jb push sahf and movsb mov rorb xlat xchg or jae cmp ret (bad) out push jno pop cltd inc sbb and test addr16 and add rcll test dec icebp push and adc xchg rcl mov cmp jge xchg (bad) and mov cmp push rcrl outsb pop mov (bad) jle dec and lds fstps jle movsb cmpsb jns add es aaa xchg add and sbb pop dec repnz jbe xchg test ret mov ret push fidivl and jnp lods enter lods enter lods enter lods enter lods enter ds incb fcmovne mov mov loop mov jno fist int jne insl rorl mov fnstsw ret cltd out aaa mov movsl aas dec pop cmp data16 xchg pop mov mov popf mov xchg mov push jg imul sbb imul (bad) mov loopne mov or bound addl clc ss leave popa mov mov and addl mov nop mov mov jge jns ljmp or in inc add cmp iret pop insl (bad) xor ret jno adc push sbb or das ljmp imul jecxz fwait scas push lret sub push adc (bad) mov cwtl sbb mov testl adc dec jge and pop out mov lods enter lods enter lods enter lods enter lods enter lods enter out mov arpl add sub inc and loopne push push int3 mov xchg xor out mov cltd mov (bad) negl iret xor (bad) movsl xchg outsb xor shlb jg mov sahf or lea mov pop loopne mov call mov test (bad) (bad) jno pop decl cs nop scas mov sbb push (bad) std fnsave lret pop mov test mov jne cld xchg stc or aas inc xor inc inc jns aad adc arpl push or push mov stc les aaa add mov sbb and dec mov cwtl sbb mov add xchg pushf sarl dec lret dec ljmp cmp repnz mov lods enter lods enter lods enter lods enter lods enter lods enter cmp outsl (bad) mov adc aaa mov in pusha test push test mov pop in rcrl fs lret in iret cmp sahf and das cmp cmp sbb push loope xor sbb mov push jecxz sub sub or xchg mov push or mov mov inc jae jecxz xchg enter dec gs fnstsw add push push inc xchg mov call xchg cmp sarl lahf test sar mov push mov xchg push cmpsb cli xchg lcall cmc xlat xchg lahf jecxz rcrb pushf cmp out stos and mov xlat mov test cmp insb mov (bad) xor inc pop nop push mov (bad) mov test mov sub cmp test mov adc int3 ja sub out enter lods enter lods enter lods enter lods enter lods enter push mov add jecxz test fcmovne je mov mov lock dec inc cmp rorl pusha psubusb fs xor test insl jl xchg (bad) call pop (bad) popf mov cmpb sbb mov inc mov mov cwtl cs jp loopne mov mov jmp scas dec jo lods pop xor add addr16 vrcpps and loop ja jecxz int adc inc call pop inc ror shlb cmp cmc mov and add push mov xchg lahf lret mov aad icebp adc pop sbbl call xchg and xor mov push fldt sti mov dec xchg jecxz dec (bad) push outsb sahf jb mov jl inc enter xor scas and and enter lods enter lods enter lods enter lods enter lods enter add out add outsl (bad) clc sub cmp push int3 or jnp lock popa and pop mov aaa adc das xor xchg xchg fadds pusha add mov add sahf outsb cmp add mov push mov std push xchg pop pusha push dec je xor xchg loopne dec mov imul add popf sti mov inc mov jb dec ja dec js xor sbb dec cmc jle mov mov ret jge push adc mov aam inc add mov push jmp push leave and add (bad) cs (bad) jle xchg sub mov rol imul js sub lahf or xchg fwait (bad) pop inc js repz push mov aam sahf mov stos cmp int3 sub mov lods enter lods enter lods enter lods enter ds gs sub (bad) je out add sbb mov test sub arpl lds cmp push cmpsb rcl leave pop cmpsl push ret (bad) jecxz daa (bad) fnstsw ret and je fdivrl mov and lods loopne mov enter cmpsb mov es cmpsb jg xchg sub rcrb adc (bad) inc jmp ds cwtl pop push or fwait xchg dec cli mov sti dec mov push fimull rclb mov mov rorl scas leave bound push (bad) into mov (bad) pop xchg cmpsb jbe ss call sti push mov or movsl xchg rorb pop insl (bad) lods pop mov add out and sub hlt les addr16 out test (bad) mov sbb sub (bad) inc pop nop jge mov or lods jecxz cmp (bad) pop popa in xor sub out dec ljmp stos enter lods enter lods enter lods enter lods enter lods enter sub out add shrb add (bad) insb test sub fs mov and inc int insb test mov rcll xor mov rorl and idivb (bad) iret popa add pop add mov jbe jmp push imul mov inc inc pop mov (bad) cmc or outsb sbbl and jb in pop sarb movsb mov or nop mov push gs xchg lcall test sbb icebp mov int3 and iret push jl cmp push int3 mov xchg push shr add mov pop push out icebp (bad) push lret sti test cmpl push iret (bad) xchg test test pop cmp or ret mov ret push ficoml lods enter lods enter lods enter lods enter lods enter and push fisub nop cli or rcrb int3 jge mov mov rcrl pop pop int jne inc rorl mov mov dec mov jl je das cmp push leave mov cmp mov pop jns xor in pop or sub mov int sahf or jae sub fiadd out imul in xor jb push iret fmull push clc or nop mov aaa adc jns lret lret bound push or scas fadds adc out (bad) jae call mov insl ljmp xor jmp fucomp das mov adcl sbb cmp or jns adc sbb das and adc call sahf mov stos or adc ds lods enter lods enter lods enter lods enter lods enter jb stos (bad) out inc call mov clc sti add sbb sub or mov sub jnp test add mov ds dec cltd stos pop (bad) or jae cmovns inc add add push mov or lods stos add sbbb mov (bad) pop lock cmp inc sub out mov adc shrl mov ss cmp push sbb dec push push int ljmp repz lahf cmp push xor mov add mov jl sbb add es or movsl mov popa aas push in cli mul fsubs js sbbl cmp (bad) mov and fisubrl dec fbstp lahf rcll lods sub ljmp lods enter lods enter lods enter lods enter lods enter lods enter lea sbb cli push rcl dec aas xor sbb inc inc jl mov nop jb bound jb roll adc xor sub inc mov cmp negl pop xor mov pop popf sahf xor xchg inc mov mov iret xor outsb push xor add std mov call inc add sbb mov or addr16 xor pop scas sub pop lea int3 add leave lret xchg xor mov mov sti sub mov sbb in ret mov aam imul mov xor mov pop dec sbb dec imul outsl cwtl sbb mov pcmpgtw jne sub test fist mov sub cmp sub (bad) into sub lods enter lods enter lods enter lods enter lods enter lods enter jg and out add outsl (bad) (bad) sub or inc imul aas jno jae jp fldt out jne lcall (bad) or shll ret bound bound lcall pop add adc push push prefetch or imull cmpsb sub pop add and push pop aam ja out das xor and jg mov loop xchg sub int pop in mov push ds mov add clc inc push mov in fisttpl pop clc cmp pusha or sbb sub lcall aas (bad) out idiv icebp fisubr or insl mov xchg mov (bad) ds lret push dec xor push ja lods sub fcmove lods enter lods enter lods enter lods enter lods enter lods enter xor xchg mov sub add fnop imul mov mov pushl in xchg shlb rorl xlat pop daa lcall lahf aad js inc popf lahf add mov scas sbb or xor add popa int3 inc loope insl outsl push mov hlt aam xchg cltd and orl (bad) sbb (bad) (bad) or push xchg roll add lahf sub xchg add cmp out xor (bad) adc push int mov imull outsb jg,pt iret mov sti fmul hlt adc in xchg rolb gs mov mov les pushf cmp lcall lcall sub or xchg fwait xchg ja xchg mov jne repz test dec ds adc enter lods enter lods enter lods enter lods enter lods enter in mov inc and inc sahf adc adc into cs (bad) rorl cwtl dec fist lea inc pop clc shrl xor and mov add dec jnp push mov std popf mov xchg cmp xchg mov lea push (bad) loope addr16 stc (bad) sub dec pop js push ja mov rclb pop call lahf pop or dec inc mov (bad) jno sbb cmp movsb and scas aaa mov imul mov inc pushl sbb xor divb mov shrl xchg inc outsb xchg ljmp mov gs mov push sub sub or into fs xchg or movsb into cwtl addr16 loopne lods jecxz and outsl and subl in dec imul lods enter lods enter lods enter lods enter lods enter ds jne push sub stos push sub rolb movsb jp,pn test mov inc dec sti iret sub sbb sbb adc inc leave mov pop mov mov mov push idivl lret dec sbb push call jbe ret int cmpsl and mov push mov lret stc (bad) sub int in clc stc loopne mov enter mulb mov sti test data16 adc addr16 mov mov scas testl mov aaa push xchg add push (bad) mov sbb jp mov rolb into mov outsb sbbb jmp je pushf mov cmp pop rcrl xchg pop aas fsubr rcl sbb and insb or fstps cmp jge lock sbb in jo popa or adc enter lods enter lods enter lods enter lods enter lods enter jae addl movsb inc or dec fdivrl jmp (bad) mov enter dec xor insl in popa test pop jo out mov sub clc xor fnsave xor xchg cmp test mov mov xor push sahf mov das cmp dec add aas addr16 mov js (bad) mov and mov je jmp imul mov dec mov repnz leave adc iret xor and or addr16 pop int xchg dec push call sbb mov sti push mov int3 add sub push mov xchg cmp cmp stos (bad) sub scas mov xchg fsts gs lret dec aad leave rol mov pop loopne (bad) int sub ret or xchg mov xchg push js lea pushf mov (bad) adc xor (bad) cmpsl enter lods enter lods enter lods enter lods enter lods enter xor pop fiaddl adc loope (bad) je cli imul jo mov enter std popl das cmp push lock push cltd stos adc xor xor mov cmp jp xchg xor xchg in push aam mov mov lods stos add sbbb mov and gs ja in insb push sbb xchg add movsl inc mov insl fbstp xchg arpl cmp or dec test cwtl mov pop int3 add fs jns or sub fldl enter aad jecxz cli pop ret sbb mov xchg and in cmp lcall inc jge lds clc add lret arpl es xor adc lods mov outsb cmpsb dec js xchg push out cmp push enter lods enter lods enter lods enter lods enter lods movb and push scas and cmp cs and pop mov cmovp jnp imul into jne push rorl pop out das push adc mov ret rcrl je das mov pop xor xor cmp add jbe push stos movsl jg push and xlat icebp loopne mov ja adc insl rcrl add inc and aas ja pop pop lods fsubl dec loop fidivrl add std pop xchg iret jno ss jmp in rolb adc out xchg rolb gs mov jg fdivs sbb xor mov xchg mov pop aas push mov and insl sbb dec test sub and pop add push sbb mov cmp lods enter lods enter lods enter lods enter lods enter and fiaddl fldt add dec xchg cli push movsb dec (bad) adc xor mov inc rol push into push fist cltd pop popf sbb fsubrs mov cli ds pusha shrb int3 enter pop inc push or sahf pushf mov sbb xchg and inc fisttp and mov sbb adc fs sbb cmpsl sbb and or dec repnz pop xchg sub or sub dec xlat outsl mov mov ret and jno iret aam mov sbb inc pop sbb pmaddwd insl (bad) mov add pop adc adc mov cmpsb adc dec inc fistl push sbb mov clc lahf push rorl lahf push jbe xchg push jge fwait das mov sub (bad) mov test mov lock xor fmul lods enter lods enter lods enter lods enter lods enter ds ja addl adc loope (bad) je iret dec addr16 aas mov mull jae jp jmp pop mov les wrmsr test pop jbe fnsave fimul aam mov popl xor add dec jbe xor push sahf stc push sub mov cld lods jg push pop push mov and jp loopne cmp mov sbb mov sti adc mov repnz test pop test pop jecxz ss fs test std mov pop ss xchg cs xor iret adc daa fnsave xor xchg sub pushf les sub pop mov sbb inc adc int push mov xor or outsl fs lea aaa cwtl mov jne ret (bad) mov jg test enter lods enter lods enter lods enter lods enter lods enter mov sbb dec ljmp stos push adc add rcl dec aas lea mov inc dec xor push jle test inc jae out pop rorl stos out popa add fnsave jle mov xlat inc mov xor add icebp jge popf mov cmp add in mov push mov push sub and pusha mov sub inc sbb imul adc addr16 je pop sub dec jae xchg xor in loop fldl cmp scas mov pop xchg push mov jne inc call mov cmp inc lods xchg leave or mov cmp add pop adc nop sbb loop xchg fld das gs mov dec jae sbb jl dec and int cmpsb jl sub nop xchg (bad) xchg jne mov add js bound or lods enter lods enter lods enter lods enter lods enter lods enter outsb insb adc jge stos and nop push lret sti out mov arpl (bad) shrb in aad or pushl sbb scas push push inc out roll clc mov xor mov cmp mov pusha shrb and iret mov pop xchg hlt xchg fwait add adc cwtl loope in call mov and out xchg or sub stos rol push out add scas mov jae sbb fild leave test fldl (bad) dec loop pop pop xchg push mov scas fiaddl sub mov dec iret mov sti fmul add cmp cli pop pop sti inc test out xchg mov jb sub lds inc in pminsw cltd adc dec in je mov insl xor inc mov inc and push out (bad) pop into cmp lods enter lods enter lods enter lods enter lods enter lods enter (bad) xchg test mov adc int3 ja in jnp out push dec mov mov sub ror sub mov and mov lock mov pop adc and rcll or mov add jne add call mov jge movsb test pop enter pop push sub xlat in stos loopne jp push xchg sub mov mov xor shlb pusha xchg rclb fcmovbe xchg pop xchg jmp std out jns dec xchg leave pushl aaa pusha fidivl or mov cmp iret std pop out lods into lods dec xchg mov sbb add jns insb lods rcll dec dec jg xchg pop nop es mov pop inc and or lcall mov cltd prefetchwt1 push adc cmpsb dec js stos lcall enter lods enter lods enter lods enter lods enter ds cmp mov aad pushf sub mov sbb dec (bad) hlt out dec enter (bad) sbb push xchg and mov ds inc xor test movntq rorl xchg dec nop jmp lret jae inc mov sti push (bad) daa cmp scas cltd loopne add mov and add push xchg push mov mov xor outsl jmp jns stc das pop ss push push cmpsl loope inc xchg dec fs jecxz sub stos test je and outsb jg dec sbb fcompl test sbb add jbe cli aas lret jno ss inc sbb push jo mov (bad) lock rolb gs mov mov jae pushf cmp iret mov push aas push sbb inc pop je (bad) xor in hlt bound xchg mov push adc mov enter lods enter lods enter lods enter lods enter lods rolw fisttpll inc mov inc orb sbb push (bad) je mov sub cmp mov (bad) rclb lods popf jb roll adc xchg jl adc pop mov xchg and cmp cmp mov dec mov xchg dec loop popf push lahf imul pop cmp mull mov mov xor sbb add mov sub pop fldl mov nop mov mov leave imul and test pusha pop mov sub pop nop aas mov mov xor sub ljmp stos test pop pop inc sbb fcomps (bad) mov mov pop stc mov sbb jmp int3 and sti cbtw and pop jge dec xlat or lods enter lods enter lods enter lods enter lods enter lods jbe int les ljmp (bad) jbe out inc movsb jns pusha lret mov push mov or aaa cmp out in popa test mov movd daa push adc xchg lret xor cmp lcall mov and add push xchg push mov or fisttp mov repz outsb lds pop add call add sbb sbb sbb or jae mov loop xchg push int dec xchg pushf jg lret js ss fadds daa mov lahf rolb in mov outsb sbbb push cltd insb es les mov lahf push mov ds jne adc jl orl add jno jbe,pt xchg or js mov movsb fwait (bad) adc lods enter lods enter lods enter lods enter lods enter cmpsb popa or mov aad mov addb inc add loopne outsl add sub cmp inc inc dec jnp xchg jp popa and pop roll clc daa inc lea and test mov fnsave jbe or sahf and leave mov das jbe or sahf and leave mov movsb mov ret xlat mov fisttp les aad pop subb add (bad) subl mov aaa jbe fild int dec js and and push movsl imul call pop mov test jmp stc pop mov ror or mov jg popa adc les mov adc or sbb notb addr16 (bad) xor dec insl insl jmp and sti cbtw jle mov mov dec pop mov lods enter lods enter lods enter lods enter lods enter outsb addl outsl sub and push push aad push insb mov push (bad) pop pop mov mov inc ds lea out nop jne xor lock fiaddl test mov jbe cli pop mov xchg sarl lea cmpsl pop inc ret movsl hlt xor scas jns cltd pop loope add dec loop mov and push pop xchg lds call or add dec cli dec add (bad) sbb push es jbe sti cmp stos cmp movsb test push stos jmp loop sub jb call mov movsb stos sbb outsb xor icebp mov mov ja outsb cmc and mov lods lea inc inc push loopne inc pop call jmp stc mov pop out (bad) pop lret (bad) int3 add jno mov jne enter lods enter lods enter lods enter lods enter lods enter fcompl test cld mov inc dec dec out and stos push enter adc (bad) jg mov mov pop dec xor jle dec xor cmp mov fnsave mov sub mov mov cmp negl loop mov cmp xchg rorb (bad) pop xchg outsb cmp sub mov pop test ret cmpsl pop call mov push mov gs xchg adc cmp fldt mov (bad) ja xchg das outsb xchg pop xchg xor pop cmc pop add mov push data16 es ljmp pushf xchg xchg rcll pop rcrl xchg (bad) cmp out scas subl push jne bnd leave sub or mov leave in movsl roll sbb enter lods enter lods enter lods enter lods enter lods enter ds outsl fwait xor xor int3 xor pop fiaddl mul adc loope (bad) je (bad) or fisttpl pushf enter (bad) cmpsl push inc cmp stos (bad) lock clc push das pmullw xor dec cmpsl je andb jnp das cmp mov mov jmp das push add or sub push (bad) mov add fstpl mov call ret les inc js pop or jmp jecxz pop cld jns in xor and movsb and pop rorl popa nop mov loop cmc pop xchg jge mov insb daa mov pusha xlat lret insl (bad) icebp inc (bad) mov jg add aad es jno and push rcll dec dec stc sbb int push dec stos pop shll mov push jbe xchg fwait or mov data16 xchg enter lods enter lods enter lods enter lods enter lods (bad) mov cs sahf int3 ret cmp push fcmove pop mov inc or dec aam outsl add sub jo mov enter dec xor pop in popa test cli popa (bad) out mov sub clc daa (bad) fnstsw ret rorl cmc cmp add push sahf mov cmp mov dec inc pop in dec pop or in mov stos add ds push rolb popl or in adc in jns mov (bad) inc (bad) popf pop and mov nop sub inc xchg mov cmpsb pop xchg (bad) mov movsb mov add iret or sahf stos inc test xchg insb ljmp pop aam jmp dec aad leave rol push andl subl hlt xchg xchg adc dec inc pop adc inc push in enter lods enter lods enter lods enter lods enter lods enter jecxz,pt jbe (bad) pop popa movsb insb xchg pushf xchg cmp and add dec xchg out ja jnp add sub scas in shrb mov popf jp jmp dec dec insb (bad) out mov mov xchg xchg mov cltd inc add add sub popf mov shrb xor xchg mov pop push pop mov (bad) mov mov repnz xchg push pop add call fiadd cmpsl insb jle test pop rcll bnd lods and or nop mov mov jne jns mov mov fdivrs movsb lods xchg sarb pop leave mov hlt js ljmp mov (bad) push rcrl xchg pop mov bt push dec and sarl adc or xchg fwait (bad) xchg in outsl popf xor enter lods enter lods enter lods enter lods enter lods enter adc mov js popa movsb je push sahf cmp pop fiaddl iret add inc or inc mov sub fucomip push inc dec xor mov popa mov out (bad) pop and out cli movups xor mov ret inc mov xor add adc mov cmp cmp popf mov arpl lods jg outsl shll imul pop aad adc stos std jl xchg sub or in adc and out dec (bad) or push imulb xchg mov push lea jns mov aam lahf test xchg clc fmul hlt adc xchg (bad) jae in insb iret inc mov jge aam scas (bad) lret es aam mov inc mov dec lods out inc in dec ficom lret addr16 insl push jge push adc rorb aaa clc leave xor lods enter lods enter lods enter lods enter lods enter sbb scas ret jg jmp xchg stos mov ret rclb jo cmp test add add fldt adc rorl enter loop and lds cwtl and insb mov mov xor cld aas lret cltd leave jle movsb sbb add mov cmp add jne movsl les js and xchg punpcklqdq sub fiadd stos xchg fmull (bad) mov xor jecxz xchg enter dec gs xchg fnstsw inc xor jecxz mov push int aaa nop pop test jmp push fcom loope or cmp dec dec inc fdivs push adc xchg xor sub sub (bad) dec lds stos sbb xchg mov xchg xor arpl icebp daa das or lods enter lods enter lods enter lods enter lods enter lods enter xchg (bad) mov mov cmp jl outsl out push scas jne int3 ja dec bound out adc xlat xor movsb push sub or cmpsl enter push xor inc adc pop in ds (bad) xor adc iret fmull adc lods adc jbe test and popf mov addr16 mov cmc mov lret inc fistp ljmp inc xor add repz in add lcall mov mov mov loope push push xlat jmp loop xchg out mov lahf and mov inc add (bad) clc xchg rcl mov lret daa aam mov fstl lods mov pop aas lds ret stos scas rcll insb mov (bad) xor inc pop nop addl lods enter lods enter lods enter lods enter lods enter out cmp mov sub cmp ffree ret xchg test mov adc int3 ja jle pop out push fnsave push jmp in pop call cmp movsb test lahf in pop dec sti pop (bad) out jnp mov insl ret sub push jnp inc inc add add cmp push or pop and (bad) push ds push mov mov lock cmp shlb out add test add mov data16 push pop fldl mov nop mov mov mov insl sub outsl (bad) aaa jecxz daa jp add push insl ds test inc insl sub fisubr ficoml xor sbb adc andl (bad) je lcall insl fcmovnbe fidiv enter lods enter lods enter lods enter lods enter lods enter lods enter mov pop icebp jmp cmc dec lret cmp push ficoml pop inc pxor add je imul loopne mov mov enter mov outsb mov adc mov pop mov sbb xor movsl cmp test adc int stos and mov cmp mov mov popf mov cltd loope in call sub and jp (bad) dec jp xchg sub imul mov xchg mov das enter dec js xor adc or inc mov sub pop int xor gs pop xchg mov pop iret mov sti fcoms pop mov xchg mov pop insl shrl or mov xor mov aad mov cmp push rcrl xchg pop sub inc lds es insb xchg push pop loope fs pop js (bad) cmpsb enterw lods enter lods enter lods enter lods enter lods enter movsb in lock xchg ret nop mov dec aad inc decl mov cli push mov arpl (bad) sar cs and pop sub xchg mov mov popa test dec pop (bad) out cld clc fcomi mov sub fwait pushf out movsl test das dec loopne jp add and in adc mov insl lret xor jmp sub cmp js aam jnp pop push mov arpl das (bad) or mov call inc sub fimul in out scas fcompl stos sahf stos sbb sbb add mov (bad) int3 cmp int jno xor jne push mov out mov sbb mov out in xor push jle das mov cmp cmpsb cmp push (bad) add lret lcall es sub lods enter lods enter lods enter lods enter lods enter jno,pt mov jl scas pop xchg push out jl sarl ljmp rorl mov out xchg and jmp dec out ss imul movsb cwtl popf lock pop inc cmp cmp jg and dec nop jmp fnstsw ret inc out mov ret movsl jg adc lods jge jbe cmp add adc lods pop (bad) jbe mov xchg jge ds test and (bad) inc jecxz dec mov loope imul sti inc mov in lcall rcr mov pushf push sub bound std pop sub jle mov push jo les adc push popf dec mov (bad) xor cmp sub jg stos (bad) mov push aas push lsl push mov push jbe xchg fwait or mov lods enter lods enter lods enter lods enter lods enter lods enter mov loop mov loop in (bad) pop popa mov es xlat or sahf mov pushf dec movsl jns outsl dec icebp fcomps sub or leave enter pop cmp out sbb ss stc (bad) bound pop jb inc arpl adc test jmp xchg jl das xchg int stos and mov cmp lret lea sub inc xchg hlt test xchg xchg and iret repz mov sti inc bound sbbl inc xlat jno pop mov (bad) push fimul fisubl cs imul jne cmp mov xchg test popa mov dec push in movsb mov test leave mov (bad) scas jecxz jmp sbb mov in mov das adc dec mov inc lods (bad) xor in hlt bound xchg lods enter lods enter lods enter lods enter lods enter cbtw mov iret mov dec xor dec xor clc mov ljmp stos fldt add ds or (bad) cmp outsl outsl dec dec xor push inc cmp andnps daa push (bad) mov ret insb (bad) jbe jg sub pushw sahf xor xchg arpl sahf xor mov into jg push imul stos or inc and call mov add mov sub jno push dec js xor and or nop mov jne arpl jg jns mov push jo (bad) sub lods ret rolb mov aam scas pop sbb and mov gs pop aas push (bad) mov push cmp push mov cli xacquire fwait or stos or lods enter lods enter lods enter lods enter lods enter add in mov mov adcl push fist pop mov inc divb test movsb adc jne add xlat and and inc or mov or inc fist cmp outsb sbb add daa cli xchg int xor xor sub jge je jle pop add adc mov pop pop add mov sbb mov add fstl mov ja mov rol add shr into inc pop xchg test sti cmp xchg cmp xchg pop adc add mov fldenv jge mov adc pop imul cld ds add scas ss sti addb jmp fwait push xor pop test fstps xchg pop mov cmovae dec iret cmp xchg repnz (bad) inc inc enter lods enter lods enter lods enter lods enter lods enter lods nop mov mov aaa (bad) pushf dec rcrl adc scas out mov jno test dec std dec mov mov pop out out pushf shlb icebp fcomps sub or hlt enter push cmp out sbb fwait std stc (bad) bound pop jb inc test and test or push pop push xchg ret pop dec add test xchg cmp push call jbe loope mov lock xlat shlb imul subb pop jmp jge add add or adc imul in mov sub out pop xchg nop jmp mov sbb jns dec inc (bad) mov repz lea (bad) rorl pop xchg dec xor mov mov mov mov mov mov push aas push sbb inc lods dec lods (bad) xor in hlt bound lods enter lods enter lods enter lods enter lods enter stos xchg mov and mov addl dec pusha cmpsl int das orb or mov arpl (bad) rcrb add cmp mov sub jnp popa in popa test or out mov pop clc xor jbe xor mov sti and pop push add mov popf mov sbb push mov popf mov sub pop jmp mov and lock sub fiadd pop cltd inc jo add ss (bad) fbstp addr16 in pop pop fstp xor inc out jp cwtl push xor inc jb loopne lock pop inc ror xor sti adc mov dec movsl sbb insl (bad) sub insl or ljmp mov cltd mov xor xchg push das and cwtl sbb enter lods enter lods enter lods enter lods enter lods enter lods adc xchg inc addl icebp (bad) pop push out jl pop push clc mov mov inc inc cli mov cld push mov mov inc fdiv mov adc inc fisttpll jbe cmp int cmpsl ds gs jmp jb mov test mov ret iret popa mov adc add sahf ds dec cld pop push ds jg lahf rcrb push into or dec pop pop push test push (bad) add or pop or mov jecxz xchg enter dec xchg mov jnp imul push pop or fdiv pop cltd push push mov sbb cmc lret arpl mov or mov test cli jmp xchg push es mov test xchg scas push mov dec stos pop (bad) mov in jle popa xor lods enter lods enter lods enter lods enter lods enter (bad) inc pop nop pop fidiv movl jbe push int add dec shrb mov les and notl dec lret movsl pop out push xlat scas sub mov push (bad) mov mov xchg jl jecxz ret shll lock out pop dec call cmp outsl xchg mov push mov addr16 icebp dec pop mov add mov mov mov or push mov and fbstp inc jb fisub int lret or and jle,pt fbstp (bad) pop ss and jb shrl je sbb pop lock out sub or cld stc mov inc loopne xor mov popa cmpsb jge jge cmpl outsb int3 pop aas push xchg (bad) imul lods lds test (bad) rcrb push enter lods enter lods enter lods enter lods enter lods enter mov inc cltd addr16 arpl outsb iret cltd out les sarl sub xchg jne,pt lods cs in out mov nop cli (bad) jmp mov dec fnsave cmp mov jmp ja lods popf jb push lock push daa (bad) dec int mov insl jl mov imul and lods cmpsl sahf mov cwtl or call sub fstl push or test dec mov mov jg imul in out mov mov xchg scas leave dec inc xchg xchg push push popf jne sbb pop or fdiv test lahf fidiv lods push cmp in jns (bad) mov cmc fistl sub cmp rcrl xchg dec and sbb jl dec ss lods xor in mov lods enter lods enter lods enter lods enter lods mov (bad) int3 fidivr outsl jne dec mov les rdpmc aam jl dec ljmp sti push pop out inc addl pop cld rcrb mov cmpl inc ds nop jmp in inc pop int jne pop rorl fisttp fcmovnu stc fnstsw aad cmp inc mov sbb mov pop pushf pushf xor fistpl stc mov aam mov in icebp mov mov mov push stc push (bad) xchg fisub xchg dec cli dec pop xchg sbb mov mov mov or or insl mov push lds xchg sarl je and adc rolb out lods (bad) mov jg jns sahf jns into repz fs mov clc lods xchg aas push mov push decb sbb enter lods enter lods enter lods enter lods enter lods enter xchg cmp or popl sbb sub xchg jp cmp das and pop mov (bad) hlt out mov arpl cmp ret xchg sarb (bad) add push cmpsb push js insl stos (bad) xlat dec pop clc daa fist fnstsw ret in mov xlat es icebp adc lods in mov add pop icebp popa int3 inc movsl or loope push inc hlt sub xor orl cmp fucom mulb adcl or xor pop popa and outsl inc or in and dec push add or lea mov add mov jno push sti push inc in or (bad) mov fs imul push mov push int3 mov xchg and ret mov es or lods enter lods enter lods enter lods enter lods enter lods enter pop popa mov mov mov imul ljmp xor xor aam ljmp add inc add js mov pop iret xchg rolb mov inc fadds mov dec fsts jne sub nop (bad) fldcw je xor sub xor es or dec loope jne mov jl popf lret (bad) mov jae sub xchg int xchg xlat in mov sub stos xchg stos fdiv add lcall push sub dec jae popa and dec pop lods les dec loop sub cmpsb mov xchg bound sbb xor xor push rcrl mov std mov cmp sbb aam scas mov es int3 mov xlat push shl cmp lret test vandnps pop (bad) mov in lods enter lods enter lods enter lods enter lods enter lods enter das xchg xor inc pop nop gs data16 mov and pop mov xchg push adc jns mov push jb or cs out inc ja push cmp lcall in pop in inc out sub inc rol stc or popa fcoml cmp test dec rclb sbb lret data16 or mov xor xor stc pop cmp jb cltd pushf mov sbb mov and (bad) inc out dec mov imul addr16 add mov mov jecxz adc add test scas mov and inc out fdiv out call dec leave loope ficomp dec shll iret push imul push stc (bad) ljmp pop aam insb pop push outsb pop mov pcmpeqd test in je sbb lods enter lods enter lods enter lods enter movsb sbb test repz stos xchg popf loopne test dec repnz jbe repnz ret mov aad sbb lock orb or add js nop rcrb mov xchg enter dec into lock in xchg rclb cmp loop scas adc fdivr fs dec pshufw inc mov mov jmp jbe mov add jbe and pop jg lahf xlat add fstl test pop sub sub sub mov lret pushf push add gs adc (bad) aam push ret jecxz mov call push add or aas xor sti push mov jmp movsl xchg aam insl xor js push inc inc jns mov and pushf cmp ljmp mov xchg repz lds sbb (bad) xor lods enter lods enter lods enter lods enter lods enter lods enter sbb push pop jge fdivr jbe mov daa jp xor in jecxz les popa es cmp cwtl push cmp jne jae xor imul jns add movsb lret inc out sbb jns lds loopne push cmpsb mov call (bad) push push xor inc cmovs hlt aaa mov movsl iret dec lea scas push test mov push mov rcrb mov jns push loopne mov or adc dec add je jle lea jno cmpsb dec repnz cmpsb adc pop (bad) (bad) xor jmp sbb jge xor mov in add cli or leave push jle xchg mov pushf cmp loopne scas lret pop aas push push xchg dec ss inc lret enter lods enter lods enter lods enter lods enter lods es in jle loop (bad) int3 pushf mov mov mov adc popa sarl mov loopne je stos movsl inc mov mov mov mov or fisttpl xchg enter mov test add pusha test call sarl stc daa push mov mov aad mov mov cmp mov bound inc add push xchg into push bound xchg les mov mov cmc push repz addr16 push xchg mov leave shrb imul jge cmpsb sbb push outsb iret mov cmp (bad) fcoml popa hlt mov xchg mov (bad) or mov sub jbe fadds dec mov xchg outsl push dec je (bad) int xchg cltd mov fwait es je sub inc sbb inc mov test mov outsb lods (bad) xor enter lods enter lods enter lods enter lods enter lods enter add xchg test repz stos cmc dec (bad) mov cwtl and sbb mov push mov adc dec mov xchg arpl dec out add arpl je shrb fbld outsl scas xchg inc ficom and jnp inc outsl xchg pop testb lock (bad) dec ss push adc movnti lcall lods pop mov or fstps stc mov popf mov mov add xlat mov aaa cmpsl lock loopne mov div jmp sub in fsub and lcall or popa (bad) mov xchg pop in mov (bad) dec add push in dec das add inc lcall js stc leave cmp adc pop push pushf cmp inc lods inc fcomps loopne xlat outsb mov adc aad dec out enter lods enter lods enter lods enter lods enter andl (bad) sbb lods adc cmp leave cwtl add adc popa cmp cltd (bad) dec pusha cmpsl int xor adc jg jg addr16 xchg mov mov (bad) mov (bad) mov cmpsb mov lock sub call and push jnp xor jg pop inc push or sahf pushf mov aas dec cwtl mov dec mov dec push sbb pusha xor lret lods out sahf lock dec pop arpl pop pop or inc mov pop jp adc leave push gs mov push xchg movsb push dec push push int fisubl pop xchg sahf push ss sub jno jmp inc dec adc iret or push leave stc jge aam add fs jno and push rcll dec pop cmp sbb ss inc and lods enter lods enter lods enter lods enter lods mov pop push push int3 and mov push scas popa cs aas (bad) insb cmp mov jb outsb scas xchg mov into push adcl mov or pop sub outsb stmxcsr lods push pop pop mov dec jle xchg in push adc lods and jbe xchg cs jl cmp or jg push lods test push rep pop mov pop or call rcll or pusha pop mov and jno cli sbbl aaa cmc popa nop mov mov jge lea fstpl pusha mov cld cld push std mov rolb lcall (bad) sub cwtl arpl jmp ficoml lcall aas (bad) insb pop fadds enter lods enter lods enter lods enter lods enter lret jnp in jle mov xchg cbtw mov sub cmp mov es pusha cmpsl int inc orb or lret mov outsl add sub cmp ss fildll inc outsb test mov sbb sbb scas stos out lahf and fldl and cmp sub or sahf mov das cmp or and mov loope daa mov aad sub fbld pop push dec mov imul xchg into inc xor in mov fbstp push ljmp jbe aaa mov imul or data16 jns or (bad) xchg or ss push mov test subl js stc ficomp jg cmp (bad) lcall aas cmc (bad) cmp lods enter lods enter lods enter lods enter lods enter loope,pt mov and xchg push mov data16 addr16 sub sub loopne fsubl mov dec jg fimull mov out push pop jp or add incb mov mov inc dec mov popa test jp popf dec sub mov jmp and lret mov ret mov mov pop xchg lods jl arpl cmp ret jle cmp dec lcall fwait add xor or leave inc xchg mov mov push or xlat lcall pop mov sbb pop push (bad) fcoms fdivr cmpsl dec mov rorl pushf cmp out pop test mov sbb xor sti xor mov xor jno imul sbb jae mov outsb mov (bad) ljmp lods enter lods enter lods enter lods enter lods enter ds je iret pusha mov (bad) int3 pusha add push adc scas mov mov in sub xchg icebp nop pop repz cli cld sbb dec adcb or sbb xchg inc inc (bad) mov mov outsl mov fwait ret sbb pop adc and repnz mov int aas xchg mov add int fs cmp pop mov ljmp loope mov loope lret lret adc dec pop stc push loope icebp cmp daa stos mov sub mov mov fistp inc sbb aam xor arpl rcrl bound std pop adc push mov inc daa ds inc lcall inc inc test and es dec xchg pop rcll push arpl enter lods enter lods enter lods enter lods enter lods enter lods enter imul pop gs inc test fsubs mov (bad) mov or cmp mov aad addr16 mov sbb sbbl mov pop jno insl inc xor adc loope repz and pop xor sbb jmp test cmpsb enter rol mov sahf mov das cmp aas test xchg loope mov leave imul aam jp ja in xchg insb ret xlat test daa jo jecxz push popa ds jae xchg cwtl data16 std push dec sbb xor jb adc pop xchg jmp cli mov decb test test mov test aas test xchg cmp ljmp pop fwait mov das gs sub dec ds rclb imul lods enter lods enter lods enter lods enter lods enter dec and repz add cltd fs adc dec lret jp sti push in jecxz (bad) jae int3 cmp (bad) cwtl outsl pop ljmp mov xor mov inc xlat and addr16 push pushf in push in sahf mov dec iret push nop lcall mov dec arpl loop mov jmp dec jbe sub andl mov sub sbbb jne gs add or jae cmp inc (bad) popl jmp jae mov xchg xlat dec (bad) and xor mov popf in popa loopne jae pop clc add mov inc rol or cld iret mov push mov sbb outsl (bad) mov (bad) sub out and push pop xchg pop dec pop inc xchg pop dec call lods enter lods enter lods enter lods enter lods enter inc mov addr16 fdivl addl mov adc int3 or or sbb aad pusha inc fimull mov imul pop out lret add ret dec mov fstpt sbb sbb ds dec daa add jp popa and sar inc out jae cmpsb out pop push adc add pushf dec lcall incb cmp add ljmp ret scas aas test xchg movsb fwait sbb inc test scas and xlat repz js fucom or push sarb repz adc cmp arpl sub bndldx and dec std pop call and mov fs loop insl push popf popf add or fdiv mov ror lahf fidivl lock (bad) xchg (bad) mov out push xor ss jl sbb add sahf fldt sub push in inc xchg out lods enter lods enter lods enter lods enter lods enter xor push outsb and mov adc movsl (bad) mulb sbb and xchg imul cmp inc dec out and push hlt stc sbb sbb icebp enter aad (bad) push ds test sbb adc mov or daa push sbb dec or shll or repz int3 adc sub cmp cmp orb popf repnz xchg js pop add adc inc test addr16 inc imul cmpsl clc sbb enter mov add pop fstl adc adc lea add andl and or clc stc dec pop andl inc sbb rep scas add arpl lods sbb mov lods enter lods enter lods enter lods enter lods enter lods enter inc push sub push dec ret adc jnp sbb addl (bad) fsubl sub pop pop xchg mov sub adc cmp push scas mov push sub add mov xchg enter dec mov popa test std add and mov inc mov repz rclb lret mov pop lods push int3 inc imul fisttpl dec mov mov xor mov pop mov jne js aam jnp ja rcll or mov call fs sbb mov (bad) or nop xchg adc inc sti outsl pop movb popf mov leave jle jbe pop mov data16 xor or push pop rorl leave mov lds mov arpl push sub (bad) xchg mov sbb lods enter lods enter lods enter lods enter lods enter lods enter cmp popf xor sbb repnz pop jle gs dec stos xchg jge (bad) (bad) adc xchg cmp (bad) cmp cmpsl int movb pop jbe add (bad) pop adc lods pop mov xchg jmp or dec loopne in and push push pop out aad pop fucomip (bad) call dec iret cmp add decl adc lods inc and mulb mov mov pop mov inc aam jp fcoms test jl push sbb jo adc cwtl pop add mov orl scas sarb mov imul ror repnz pop and mov adc call fadd inc cli daa pop cmpl (bad) jp lods inc data16 test dec inc sbb lods enter lods enter lods enter lods enter lods enter lds stos pop push add outsl repnz pop adc add cltd cwtl add fs jne xor cmpsl popa cs cmp popa scas jbe push fisubrl push jbe stos push sub add and scas mov out mov inc cmc roll test sahf fidivl jp (bad) out cmp (bad) and lret add jecxz adc sub jbe dec mov adc lods cli dec mov dec xor and lock mov jne ds or push pop sub ret es sbb sbb out mov push fwait inc lcall dec js xor pop jmp fst jo imul pop xchg jae aam push push lahf and neg inc add fistl xchg cmp jmp lds aad adc and pop mov push mov lods enter lods enter lods enter lods enter lods enter pop aas push (bad) out test out push (bad) test int3 stos xchg mov cwtl and sbb cmp orl aam dec aad std jnp addl js stos push inc ds (bad) rorb and out sbbl mov jnp xchg repz pop inc cmp lods pop rorl dec xor adc mov sub adc dec jb sahf xor cmp jle popa int3 (bad) lcall jle push xchg push (bad) jl sbb hlt jmp xchg dec jo sbb mov xchg cmp dec in mov fldl sbb call xchg out call aam sahf loop fs mov mov dec movsl sbb insl (bad) mov jg test mov mov sub jle xor lods enter lods enter lods enter lods enter lods enter lods enter xchg pop aas inc sbb jl cmp sub insb inc cmpsb sbb test pop xor or mov jecxz sbb xor ret ret push fidivl and out mov je idiv pop lods scas mov test pop dec inc xchg shl jmp dec fiadd out incb cmpsb out fnstsw ret cmpsb leave jae ret adc movsl add jbe add lock inc test mov xchg or (bad) jg jl pop ror loope lods jle lock xchg nop inc mov mulb andl mov sbb rcrl fwait repnz scas fmull adc push cmp lods imul add xchg xor stc daa mov lahf push mov dec das xchg dec xchg andb (bad) out pop aam les enter lods enter lods enter lods enter lods enter ds in shrb stos stos push xor outsl push jmp pop lret daa mov jno sbb (bad) pop sub jg lahf mov xchg add fstl or fistl lret btc mov dec dec push push ljmp mov mov jmp pop int int (bad) sbb clc daa inc pop xor inc xor adc add jno add popf incl cmp push leave retw rorb jbe push cmpsb push sub mov sub push or cs pop xchg mov adc call jle lret fmull push clc jne stos dec push add sub push jno lahf and jno push cmp movsl arpl into inc mov (bad) xor leave mov inc pop pop arpl sub sub cmpsl out adc lods enter lods enter lods enter lods enter lods enter cmp sbb rcll ss mov in imul aaa cbtw popf test pop mov mov lods addl dec inc push push outsb inc or test rorl add movsb inc adc sbb mov test test mov out into stmxcsr cmp out and or dec and adc cs jbe jg sub jge sahf xor lcall js and cmc mov insb dec loop mov and lock cmp push mov cld jno (bad) jae gs pop in xor fild push mov dec xor sbb or dec mov and jle adc aam pop pusha push jo adc xor add test sub mov movsb pop aam cltd gs enter lods enter lods enter lods enter lods enter lods enter dec push in rcrb xor shrb jge aad mov mov jne out enter test cmp aad xorl cld ds add je cli imul xor int3 or xchg inc aam es loopne in xchg rcrb mov push mov mull in mov add xchg add mov aad cli mov (bad) mov rcr xchg sub frstor dec pop aad jmp ljmp dec mov sbb and lret call mov xor mov xchg outsl pop push push inc xchg mov call xchg cmpsb jno ss mov xor sti push inc add cli sub inc cld mov xchg adc inc cmp fadd mov lods enter lods enter lods enter lods enter lods enter ds cmpsb mov cmpsb cmp mov mov insl mov push push js jmp (bad) cmpsl pop in mov xor xchg cmp mov ret push ficoml sbb cmp hlt jns pop lret add movsb (bad) sub or xchg enter inc xor aad lret mov dec clc xor daa push es lret fld and loope mov mov popf mov xchg aas (bad) cli xchg lea dec mov dec push xchg js sti push push ja rcll dec pop xchg aam inc pop (bad) adc adc jle jno jp insl xchg xor mov sub jge outsl xor jmp or mov fdivrl dec (bad) into mov popa daa mov sbb insl (bad) lea dec les (bad) in cs (bad) fs xor rcr es lods enter lods enter lods enter lods enter lods enter lods enter mov out cmp loop fsubr mov push cmp pop icebp fs sbb add jge mov icebp mov or lret push fnop cmp roll in aad sbb sbbb into loope xlat cmp cmp (bad) lcall inc sbb arpl xchg inc inc dec inc add dec (bad) mov or xlat wrmsr jbe fnsave add iret push mov or mov mov xchg aas iret lcall daa pusha clc mov fildll cmp ljmp dec mov sar push out cmp dec add sbb bound out jae or adc gs pop xchg xchg call stc sbb pop mov pop (bad) xchg or jle push mov mov inc cli pop out mov not xchg and jne mov sub adc cli enter lods enter lods enter lods enter lods enter lods enter lods jns inc lret gs sbb jl cmc and cmp jp insb or cmp (bad) mov and lcall cs repz bound mov in lcall lahf add scas xchg out enter mov imul add push cmpsb call add and out mov adc es icebp cmp inc dec mov cmp add iret hlt inc pop hlt jbe aas pop mov mov mov (bad) sub (bad) notb leave ret fbld stc push pop xchg push push jle jmp pop jnp add js ss fucomp gs jae or adc pop (bad) movb xchg adc int aaa lea pop (bad) ljmp sub int3 inc sti fcoms xorl mov cmp xchg adc fs sub lods enter lods enter lods enter lods enter lods enter lods enter rcll dec dec jge xchg pop lahf repz xchg push das push xchg cwtl ss bound icebp (bad) mov cltd or lods jecxz push mov fnstenv add xor addl scas xlat lret jo cmp outsl (bad) out fldt sub mov outsl jp popf dec sub jae pop insl fadd ret ret xor inc push mov aas jge jnp and sub cmp negl xor cld fs ds push sbb nop js push loopne ret mov inc push (bad) loope fwait xchg dec push add fwait pop in (bad) sbb pushf lcall mov mov mov scas sub xor arpl dec lret xor mov jno push mov mov mov sbb (bad) insl lret nop mov fisub enter lods enter lods enter lods enter lods enter lods enter lods inc lods rcll push pop sbb mov cmp fidivr cmp in lea xchg fwait getsec aas js dec mov push test aam pop push adc outsb mov outsl out dec sahf cli xor stos adc inc inc sbbl mov ss mov into out (bad) in in push cmpsb inc mov jb roll pop nop lods lret mov xor sub adc movsl stos jp dec sbb movsl mov ds int rolb das js ror loope mov loopne cmpsl sub ljmp sub popl repz mov lret popa push pop popa lret dec inc fstpl inc cli sarl push sbb sub jmp xchg loopne mov in aam cld stc lret popf insb (bad) idivl and sbb and enter lods enter lods enter lods enter lods enter lods enter lods enter ret pop mov xchg hlt dec clc divl lods (bad) xor outsl out jmp xchg adc pop inc dec lea repz adc mov or data16 addl dec ljmp stos push lock or push and sti sub cmp inc pop adc mov lock mov mov dec pop dec clc xor in xor mov ret test add jp xor lcall scas test push bound add stos jle push pop push pop hlt icebp stc loopne (bad) push stos push (bad) add dec xor xor sbb inc jae mov fdivs in cmp dec cltd cmpsl lea loop add bound adc inc jle ljmp mov sbb (bad) push leave mov inc cmp adc test lods enter lods enter lods enter lods enter lods enter lods enter cmp fwait mov push cmp lds sbbl mov daa xchg adc push cmp or fldl sahf aad ljmp and out aaa cli lahf nop scas mov pop xor (bad) sub insb push ficompl sahf pop testb out es sar daa push lcall and mov (bad) sbb mov das mov jb popa xor jmp push cld xchg or sbbl dec sub push or imul pop in lds and xor movsb fist push test in nop mov cwtl or pop xchg xchg jmp sbb mov or mov imul jg xchg lahf sti mov aad enter lods enter lods enter lods enter lods enter lods enter lods mov mov mov dec aaa push sbb mov dec outsb cwtl fs bound xor data16 jns push (bad) lret push cmp pop bound subl rcrl mov push mov das pop lret test pop mov sbb lret add cmpsb push js icebp (bad) jg push daa pop and adc je dec iret mov jbe or in dec inc lcall icebp popa movl mov lods hlt (bad) xor sti lock nop push push and loopne xchg cmp movsl pop or push jecxz lock mov addr16 mov push xchg push cmpsl mov jns test xchg lahf stc inc pop or fdivl jns push mov sti fmul in push std mov insb (bad) mov jg test jno xor lods enter lods enter lods enter lods enter lods enter lods enter jle sub rcrb (bad) xchg mov push aas push sbb push add cmp xor lcall dec sbbl sbb daa cmp dec repnz jbe and aaa add sub lahf icebp xchg lods sub xor in jmp (bad) insl push mov add dec push and mov jns jb lock loopne mov pusha sbb xor push pop cmp or or cmp das sbb mov popf (bad) int3 dec cmpsl enter inc test js and outsb es (bad) loope jo loope mov mov test jle cmp hlt mov fbstp push addb popa cmp xchg nop imul in jne xchg xchg xor adc repz pop push jp sbb jmp arpl lods enter lods enter lods enter lods enter lods enter lods outsl dec sbb (bad) ljmp test jg test div aas (bad) repnz sub daa dec adc lds add jl nop jl sti dec lock push or outsl jb cmpsb sub xchg (bad) cld pop mov or sar sub sbb addr16 sarl sahf jp popa and push out sbb rsm push adc mov ret scas jle mov das cmp in mov (bad) movsl xchg hlt or sub or xorb xchg js push pop repz push fisttpll testb je leave jbe pop in cmp push and (bad) fcompl (bad) mov inc mov xchg test inc (bad) xor (bad) and dec in adc xchg dec movsl sbb cltd stc xor mov pop sbbl lods enter lods enter lods enter lods enter lods enter lods enter and lods rcll xchg dec push loop mov in mov push mov sbb subl xchg popf stos cmp pop ljmp cmp in ror jp mov cmc call (bad) je repnz int (bad) mov lds outsb xchg mov shll lock jmp outsb pcmpeqb daa sub jnp and ret movsb push popa jb add mov (bad) xlat arpl pusha sub cmpsb loope mov xor xor or test cmp xchg insb stos cmpsl jae pop out imul pop in les gs adc fstl push iret mul (bad) loop outsb mov pusha test jmp xchg cmp add addl mov mov subb popa sahf enter lods enter lods enter lods enter lods enter lods enter lea arpl pop (bad) cmpsb lcall xchg aad and lahf push rorl cli gs push cli sbb mov sub jecxz fdiv outsl or rclb jp cmp test test dec das lea jmp mov or push add (bad) (bad) and in stos inc les xor mov jb (bad) mov cltd sbb sbb clc daa push lcall arpl mov loop inc insl lret cmp add enter nop test icebp insb adc lock cmp and dec inc call mov mov (bad) inc cmp mov aaa fucomp insl mov push fs clc add (bad) ljmp movsl lahf and pusha fiadd jb mov sbb dec push inc inc jns (bad) xchg adc lods enter lods enter lods enter lods enter ds xchg xor cmp lcall aas fs xor std cmp ljmp stos or addr16 aas push lcall push adc aam mov std jno movsl jb scas sub jg not (bad) divb scas pop jbe cs sbb xor mov add les xlat pop (bad) mov cwtl dec jg pop test roll inc mov cmp dec mov aam xchg adc pop lea push mov dec (bad) rol mov push enter ds sbb add push cmp dec out adc add xor adc inc jae lahf loopne imul adc pop dec cltd stos lea cmp sbb fs (bad) pop int ret and and mov mov popa pusha dec nop stc imul iret aam (bad) fdivl outsl enter lods enter lods enter lods enter lods enter lods enter lods sbb (bad) pushf mov pop sub stc pop mov out fdiv out pop xchg xor clc mov lods inc das inc bound neg (bad) mov addr16 (bad) cmp sbb adc out pop mov push cmp (bad) and dec rcrb mov xchg cmp lret lods adcb pop sarb popf or jb cmpsb cwtl (bad) popf lock push (bad) sub ret int mov and (bad) sbb sahf mov rol es sahf mov fabs mov js data16 (bad) mov je stos sbb pop jl mov sbb sub out ljmp cwtl cwtl add imul and int xor mov jecxz mov mov pushf fmull pop or dec and mov aad add ds mov js or xchg (bad) xor fmulp subb lods enter lods enter lods enter lods enter lods enter lods enter out cs fwait es cmp pavgb pushf sarb push outsb jg ret mov es xor push scas shrb or stos icebp (bad) xchg and and sbb sbb (bad) pop jbe or xor mov fcmovbe or call pop je mov mov xchg add push adc pop adc sbbl dec adc xlat or lahf movsb push lret fs mov jo imul ror and popa int3 (bad) pop fwait mov inc or icebp popa dec cmp dec push cmpb and adc repz insb stos test je out data16 inc call adc jno sbb mov es mov jecxz fiaddl (bad) fdiv test lahf test ds push mov popf and pop out lods lock mov jg lods enter lods enter lods enter lods enter lods enter lods enter adc imul rclb adc (bad) enter jl xor imul xor xchg mov sub ret icebp cwtl mov lcall xor popa orl aam xchg dec ljmp stos push aad push sbb (bad) je or lret sub mov stos mov sub insb mov in test pop cs jae rorl inc out sbb mov test cltd leave scas arpl test jbe mov pop push or mov jl lods jg push and xchg sti lock xchg nop dec xchg pop cmpsb sub out cmp into sbb jo mov (bad) sbb sub icebp push inc fcomps xorl sbb gs jb jns cltd push movsl lahf and repnz insl (bad) insl add loope dec outsb enter lods enter lods enter lods enter lods enter lods enter sahf fwait mov adc push fstpl lcall aas and (bad) je dec ss push xor dec mov xchg lods sub or jne aas add xchg xor cmc cmpsb add pop sbb or add add push not pop (bad) push xor mov enter mov popa mov add sbb pop clc daa pop add xor cld daa lret cltd leave jle jb cmp jl lea mov cmp adc sahf xor push (bad) mov (bad) mov aaa sti lock loopne mov or mov test add mov out fbstp out pop mov (bad) (bad) push pop cmp adc pop lods mov in jns mov dec add jo jno push pop pop mov xchg dec inc cli xchg lcall lods enter lods enter lods enter lods enter lods enter lods enter inc das insl mov lahf xchg or xor aas and (bad) or out cmpsl aam sbb push and sbb int3 xchg cltd cld fdivrl adcl in push scas jne int3 ja jmp and (bad) pusha xchg mov sub ror sub mov and mov lock pop mov pop adc and lds push and or add add popa int3 inc jmp movsl mov dec or mov inc pop in dec jmp sahf mov jmp test pop stos sub cmpsl push (bad) add sbb cli sub xor mov mov pop adc push aaa mov movsl in cmpsl sahf pushf daa pop sbb mov test and int3 scas ja mov cmp xchg clc movsb scas mov lods enter lods enter lods enter lods enter lods enter or test stc dec sbb scas xchg adc (bad) xchg mov ret dec test sbb cltd and jmp cmp cmpsl mov (bad) push fdiv xchg mov cmp dec inc inc test inc orb or (bad) cwtl adc dec pop mov in aaa rolb xor lcall cmp loop lret sahf mov pop push out and xor pop xor sub xchg aaa dec mov sub outsb mov int3 and cmpb int3 dec mov mov and dec loop popf push push imul pop cmp and rorl jo notl fstpl leave mov in ret and and (bad) jle nop add mov push pop or fdiv pop and push mov in push fldl push jne push jns (bad) aam lods enter lods enter lods enter lods enter lods enter ds push (bad) jne sahf lea cmp mov gs mov shrb es sbb insl xor fild repz pop outsl and sbb test (bad) orl mov call push jno or jmp sbb xor outsl add out pushf (bad) in imul scas mov jle rep add lock popf cmpsb out and lret sbb mov gs les int3 lods repnz das sub outsb dec cld mov les imul and jp jne (bad) loope push cmpsl loope adc repz data16 aas and xor sbb movsl and cmpsb ja add int3 mov std pop xchg xchg arpl push sbb push cmp cli pop insl dec push enter lods enter lods enter lods enter lods enter ds xor test adc fs lds scas shll popa xor mov nop push dec push push lds jo or xchg xor fsubrl cwtl addr16 mov scas ret xchg xor inc mov scas and push scas and repnz incb dec aas jns sbb (bad) out bound pusha test push sbbl jb push lcall aad mov push mov popa and pushf mov cmp movsb push loop dec push xchg pop movsb mov xorb xchg adc dec repz divl push (bad) or insl adc xchg xor sbb inc jae jecxz mov loop cmp mov stos imul xor lret leave xchg mov insb pop add cld stc mov xchg lods enter lods enter lods enter lods enter lods enter lods enter cld cmp adc jmp fcmovnu adc xchg (bad) int3 mov push xchg into imul lods mov sub jne sbb sub pop lods push adc mov sub test dec cmp shr push popf jg jg mov stc arpl adcb xlat fs xchg or dec jmp mov mov out daa (bad) fnstsw ret mov push je das mov xchg lock mov cmp mov addr16 repz xorb xchg js push into pop push dec pop pop sub mov mov xchg icebp mov fisttp (bad) test mov xor aam mov sub add add (bad) jb add (bad) pop jmp scas add lods enter lods enter lods enter lods enter lods enter adc sub xchg repz shr xchg inc test push dec inc fs pop (bad) out push sub sbb data16 fs push js xor adc pop or js xchg cmp (bad) pop mov jo jle daa in inc sbbl add xlat and imul dec in icebp push int3 fs addl fsubl dec pop nop hlt mov adcl sbb in cmp cmp popa pop add push pop jo repz pop aad cmp pop lcall sbb pop add clc xchg in out enter gs and and in xor dec ss xor pop sub pushf jbe ljmp and test jno adcl (bad) icebp loopne lods enter lods enter lods enter lods enter lods enter lods enter out mov jecxz xchg shrl les mov dec adc les test fdivrs xchg xchg mov xchg in cmp fiadd mov cmpsb push mov pop adc mov int inc orb mov decb xchg das shll pop and cmpsl pop push xor outsb inc mov out ret sar subl inc iret mov and inc cmp lods daa movsl mov loop mov cmp test jne movsb sub jne imul xchg or (bad) repz ja cmp aad or (bad) mov inc call inc mov lret cwtl in mov pop push push push cmp push add xchg imul pop cwtl out fadds mov aaa push jne lods enter lods enter lods enter lods enter lods enter lods enter insl (bad) int lret xchg aam loop inc lds pushf cmp rcl lea mov out cmp jl,pn mov sub out in mov fidivr adc mov ror jnp ljmp clc sub push (bad) pop xchg xor aaa cli lahf nop jns shll lock jecxz xor push cmpsl mov sarl sub inc std fnstsw aad pushf cltd inc std fdivrp pop (bad) pop mov mov int3 les incl mov push mov inc out pop ljmp rorb cwtl sub pushf ljmp or mov incl gs pushf in ret jmp and jg mov sbb pushf cmp std pop repnz aaa add mov fadds cmp xchg stos sub lods enter lods enter lods enter lods enter ds xchg mov xor pop popa adc popf cmp lcall aas xchg gs imul push or jns or stos or (bad) adc test in pop sahf or aad aad in mov scas mov repz push movsb sti add (bad) mov inc loopne xor out sbb test mov in inc pop rcrl lcall mov aad test add mov xor add inc mov pop insb fistl loope lods lods sti lock xchg cwtl cmpsl push push stos fnop mulb andl addr16 call popf repnz cltd mov cld cli xchg mov mov scas push ljmp and xor aad lcall enter lods enter lods enter lods enter lods enter xchg inc add je sub outsl adc lcall and xchg lds (bad) cli mov mov and aad sub fwait sbb movsb or or cwtl mov or sahf push aas ret add aas out insb dec test mov adc arpl cmpsb (bad) je xchg das rcrb pop sbb cmpsl outsl inc rclb pop mov jmp pop in fisub jg repnz lahf xchg xchg fcmovb dec pop mov ret xchg push dec jmp das jnp push popa xchg mov dec test adc lods or jbe mov mov pop jge xchg js aam jp inc sbb fisubr div (bad) out stc (bad) mov mov mov les flds (bad) (bad) push mov mov mov xchg sub adcb mov xchg jno sub lods enter lods enter lods enter lods enter lods enter lods enter aas inc jo jp push test and push out test imul inc push aas jmp mulb iret inc stc (bad) bnd in insl fwait or mov xchg cmpsl add and insb pop cmp pop sarb arpl and mov (bad) mov mov arpl add scas xchg test inc inc stc push sbb xlat cwtl mov cmp pop testl jne (bad) lods adc loope dec push push or into shr jno (bad) xor mov xchg inc sarb in push loope (bad) fsubrs xchg aad bts push (bad) or out scas icebp ja call dec cwtl xchg pushf loop push movsl or or in notl mov mov pushf pop adc cmp and fwait addr16 cmpsl clc daa mov enter lods enter lods enter lods enter lods enter lods enter lods enter cli movsl push inc outsb jae xchg subb imul sub xor (bad) fsubrl xor and nop mov std or or out dec mov sub pop adc xor into stos mov fidivrl mov pop idiv xchg or add dec in pop jno test and adc ds icebp mov dec mov (bad) out pusha cmp cmpsb pop lea add dec inc outsl rcll cmc mov fwait (bad) movsl incl cltd rorb jmp fs enter sbb push orb fwait sti rcr or aas sbb xchg insb movsb sub out in jnp gs mov add push lods iret mov ret bound stos loop roll int3 mov (bad) fdiv mov xor mov push stos clc sbb (bad) lods enter lods enter lods enter lods enter lods enter lods enter outsl inc xor js push inc pop jns rcll push adc mov outsb mov rol mov push push lret stc repnz mov pop js js lea insl je (bad) aad xor sahf (bad) divl testl loope and test fstpl je sub xor mov stos aas jo mov insl add sahf push cmpsb cmp xor mov and dec ss iret cmp inc (bad) cmc das dec loopne push adc mov aaa dec movsl lods sahf xor or xorb xchg xchg pop in dec pop aad push sbb out adcl mov adc adc jo push stos jnp xchg outsl or cwtl push fstpl ja xchg jmp push inc sbb push jo mov enter lods enter lods enter lods enter lods enter lods enter ds xchg rolb pop js push inc inc jns jb adc push xor cmp pop mov sahf pop mov sbb inc fadds nop insb xchg sbb test and stos xchg mov lcall xchg stc inc sub jecxz cmpsl adc and fldpi pop inc xor outsl (bad) adc test mov mov jno (bad) sbb add imul in ret dec iret cmp sti into repnz mov pop popa ss xor insl lret loope lods cmc inc call push xchg xor or (bad) adc (bad) insb stos and sub (bad) lods invd (bad) clc mov insb fbstp outsl dec or adc fildl inc loop loopne jp ja sldt sub data16 mov mov ds lods enter lods enter lods enter lods enter lods add aaa clc mov mov test fs add mov pop mov sbb scas sbb jl cmc ss cmp (bad) imull xchg sbb push (bad) dec mov inc divb fldt mov jle xchg adc ljmp pop push pop out jbe add insl add ret pop xor int3 jae mov sti inc sahf jnp (bad) repz pop insl mov insl enter mov add insl xchg mov inc mov cmp mov rol sub push ret into push mov inc lds loope outsl pop (bad) pop test pop jp scas bound mov mov ficompl lcall pop adc aam repz push inc xchg mov push pop xchg fildl pop adc daa enter enter lods enter lods enter lods enter lods enter ds rorb mov movsb adc jo fsub cmp mov inc aam xchg scas push movsl out movb xor cmp es insb out sbb lea (bad) mov pop push or incl push pop adc mov pop scas sub mov arpl mov xchg cmpsl mov push xchg fstpt lock imul and clc fucomip mov leave push mov push dec cmp iret fisttp adc lods (bad) sbb dec loopne mov pop fsubl enter pushf stos (bad) roll sti cmp or add or push out in arpl (bad) (bad) (bad) jecxz repnz sub mov stos imul push arpl mov mov push (bad) sbb lods enter lods enter lods enter lods enter lods enter lods enter inc mov insb inc cli jmp dec dec push inc inc outsb cmc xlat test adc mov sub (bad) cmp pop mov lods scas sar (bad) jl mov sub push xchg sbb jp mov and mov dec adc push jbe cld test aam mov dec fsubrl jle hlt sahf cmp mov popf jns outsl (bad) or sub push mov mov out sahf test mov xchg (bad) sbb clc daa ret and nop lods jl adc lret dec jge sahf xor stos inc pushf mov xor outsb and mov sbb sub outsl dec push loopne mov jmp inc adc sbb lea and (bad) test dec lods ja mov and xor inc out jp cwtl push xor insl jb loopne dec jbe pop inc ror xor sti enter lods enter lods enter lods enter lods enter lods push mov mov movsl xchg ror pop out lods pop arpl ljmp xor inc lahf rcll dec dec fsubr xchg pop dec call icebp fisubr or xchg adc xchg sub arpl dec mov mov insl popa movsb je pop imul jg and out xchg cmp and mov lds jbe jg mov popf mov ljmp sbb mov pop aaa adc sti scas mov outsb push push cmc das stos ss mov movsb inc bound mov popf cmp jg loop popf push bound mov pop cmp popa xor pop or adc pop (bad) into mov into fbstp push dec gs sbb jmp pop stos shl imul mov movsl leave sarb enter lods enter lods enter lods enter lods enter lods enter dec mov mov ret cli imul or add (bad) fs mov sub (bad) mov pop mov lods cmpsl sar (bad) add mov push std sub fwait sbb jle in sbbl in outsl popf mov test dec repnz jbe sub sub sahf inc cmpsb mov xchg pop gs pop stos (bad) je mov xchg and xchg dec cmp inc inc dec mov jbe repnz cmp movsl push dec clc lods cmpsb pop std xchg xor inc cmovns mov aaa mov test add xor xor jbe lret dec in sahf xor sub (bad) notb int adc lock cmp and repz inc push sub enter mov pop test mov or mov or lods lret jne repnz sub ss mov lods enter lods enter lods enter lods enter lods enter sti push mov xorb mov and aam sbb push cmp inc jbe shrl aad out xchg (bad) cmp sbb inc and lods (bad) and and xchg jns pop xor hlt mov cwtl mov push scas ret jnp jmp xchg in push jbe scas jo push addb inc mov ds xchg clc cld outsb movsb push aas stos sahf sbb dec mov popa test push xchg (bad) out cld cld fcomi mov sub lcall leave mov xchg int3 scas mov iret mov mov xchg lock inc xor dec pop inc lds imul pop sub mov jl push out dec jo pop xchg (bad) hlt movsb fbstp addr16 addr16 cs lcall mov mov ret jge jns lods aaa sub test lods enter lods enter lods enter lods enter lods enter lods enter push mov and movsl xchg pusha jae in insb iret inc mov insl xlat inc insl adc out rorl and cmp mov ret shll mov repnz inc push dec xor inc mov jle and push add dec rol pop into or sarl cli fiaddl push pop out inc push mov add (bad) test sbb mov jle fwait gs sbb or shr int jae mov mov ret sub or (bad) cmp mov popf cmp push mov mov xchg inc jne test js push dec sti push jne (bad) push mov adc repz sbb adc add cmp mov fnstsw cmp pop repz imul repz and jl lahf enter lods enter lods enter lods enter lods enter lods enter lods enter movntq out mov cmp cli pop sbb inc mov adc push sub sub mov cmp out lcall hlt xchg sub popf pop xchg test pop jae popa imull iret mov adc ljmp mov ss add mov cmp sbbl mov aam out inc popa test rorb lock mov mov fwait jae (bad) aad mov pop das cmp mov mov popf mov adc lea cmpsl mov call mov mov push pop test inc pop (bad) imul push in out mov scas lret lahf pop fsubs lock mov ret jp and jg mov push jle int mov mov loopne ss inc enter lods enter lods enter lods enter lods enter lods lahf and pop fadds push cmp in and (bad) mov aad adcl in fmuls or ds js sbb rol mov mov (bad) repnz sbb bound nop rcrl data16 mov movl dec in pop hlt in orl aam mov fsts addb inc or inc or (bad) (bad) cwtl adc cmp xchg dec andl js lock testb fisubl test mov mov xor mov dec sub cwtl xor dec std xchg stos enter fwait lods push jno cwtl ljmp sub incl mov rol ficom dec jo loopne or add mov jno out test jle movsb and add jp push push inc xchg mov dec pop xchg ljmp lods enter lods enter lods enter lods enter lods enter lods enter mov xchg xchg mov daa xlat ret push cmp cli pop sbb or aad add pop aam inc xchg pop inc mov xchg inc insl addr16 mov xchg mov repnz aas add add stos or (bad) cmp inc (bad) cmpsb popa sub cmp xchg and add jb inc push js xchg push (bad) push push cmc mov aas fidivr mov in fnop pop sahf test repz sbb cmpsb and mov push jmp movsb daa mov (bad) movsl pop cmpsl aaa xor ret int xchg and sub push jle enter dec test imul das orl sub push out xchg add lds xor decw push jne scas mov stos pop pop xchg push mov test push xor fdivrl cmp enter lods enter lods enter lods enter lods enter lods enter inc push mov ds push cmp cli pop insl dec test inc inc jns gs adc push sub mov mov dec into cld sbb jl inc ss push add sbb xchg xchg fwait or mov data16 mov scas dec fcoms mov inc sub ficom ja pop loopne out ss xchg cmp nop xchg in dec in mov addl inc mov repz pop insb mov call mov fdivl pop inc mov cmpb test sbbl int3 adc mov cmp fcmovu cmp cli xchg call sub or add mov rolb fsubrl dec dec repnz sbb les inc pop mov jmp ljmp cltd enter lods enter lods enter lods enter lods enter lods enter lods push mov sti fadds push jo sbb insl dec dec inc lods add je sub jno push popl sub cs pop cmp sbb pushf jle (bad) hlt lods repnz cmpsb jmp fs xchg cmpsl add mov mov adc cmp jl or or pop out push xor (bad) ja cmp (bad) imul push idivl jnp mov ljmp not les out and jne outsb test leave jle addr16 pop pop jbe xor xchg pop add mov out fabs sbb and cli mov imul inc xchg (bad) imul push xor jo pop xchg push and inc dec push mov dec xor sbb jnp mov loop arpl dec jbe cli (bad) fild lods enter lods enter lods enter lods enter lods ljmp into es movsb add int insl (bad) mov js sbb add sbb pop xchg mov inc push fcmovu cmp cmpsb jl rclb jle sub mov sbb or add push pop movsl inc repz stos jg cmc adc sub scas stos ror xlat out mov arpl cs test sub cmp jnp (bad) repz and cs pop rorl pop out dec in fnsave mov xchg lds inc mov aam lock loop mov cmp negl leave xchg mov outsl (bad) mov xchg xor or jae cmp push (bad) cmc call or or daa incl push lock pop fsub mov pop mov test scas mov sub jb popf imul enter lods enter lods enter lods enter lods enter fmulp mov jno inc mov mov insl add inc pop jns adc loopne out mov sub mov daa lret cmpsb cmp ss add sarl xchg insl int3 and lods es divb lods fiadd rdpmc aam cmpsb aad ljmp xchg in out inc sub mov mov xchg inc ficoml pushl jnp inc setle sub icebp mov fsubrs popa add aas dec scas inc xchg ret movsl mov dec mov add pop icebp popa int3 inc out or insb push stos rcr xchg inc lds inc dec push adc (bad) xchg out (bad) push idivl insl adc (bad) xor adc push sub in cmp push dec jnp and stos insb jecxz nop add lret mov enter lods enter lods enter lods enter lods enter lods enter and xchg inc mov (bad) idivl cmp sbbb aam sub jmp fisubr rcr ds rol push add and lds jo imul sbb cmp sarl mov pop iret or pop mov push pop inc push scas stos ror sti out mov arpl mov shlb das and in call sti xor push outsb mov (bad) popf adc iret mov rolb adc lret aad push mov sub xchg add scas jae dec (bad) adc mov fstl arpl dec jns xchg pop mov inc int3 inc call sbb xor lret lahf pop fmuls int3 ja mov cld dec (bad) fsubrl fisttpl cltd cmpb push inc nop mov push pop xchg lods enter lods enter lods enter lods enter lods jecxz and loope mov add mov push insl dec mov jg lods in jne fldenv sub rcr (bad) or xchg push sbb scas (bad) mov pop out stos xchg fwait (bad) mov mov adc jecxz cld dec js pop xchg cwtl stc inc rol jecxz sbb les adc mov inc sub or pop aaa (bad) xor pop inc jp dec lret dec xchg mov clc out jo xchg leave leave out dec lds divb cmpsl (bad) and lds gs cmc imul sub das adc int push je add or push pop pop testb shrl mov inc gs mov push push xchg pop fstl lret test and scas aaa push jecxz mov push gs lods enter lods enter lods enter lods enter lods enter jge,pt repz cwtl add push in (bad) testl xlat push dec pop insl (bad) xor test jg loopne sbb jae xor mov imul cmp out (bad) push (bad) ret mov mov sbb bound adc movsl loopne cwtl mov and mov push jp pop not jl test imul add or add outsl (bad) push sub or inc imul cmp test test mov cmp sarl mov gs int mov mov std jbe loop mulb inc mov and push jo dec (bad) pop xchg push xlat mov cmc loopne adc or jmp sub pop push imul mov add inc sbb jp (bad) mov movsb test or nop mov pop fmuls enter lods enter lods enter lods enter lods enter lods clc inc repz sbb xor mov mov jp cmpsl cmp or sub sub imul les sub lret dec xor push nop and je dec mov sbb roll ss icebp inc cmp repz pop lods idivl in inc jmp roll out inc sbb mov je mov mov lds testb ret lret in fisub pusha xor int cwtl mov pop into cmp mov xor add fwait popa movsb xor push mov jbe or sahf xor outsb cmpsl fs mov add pop mov (bad) mov js mov flds or call or or and enter mov add dec pop mov stos dec push imul enter lods enter lods enter lods enter lods enter lods enter xor inc and (bad) iret mov outsb daa aad sahf or mov pop insl (bad) xor aam outsl aaa xchg les inc dec in cs mov orps push dec push (bad) jmp dec ret xchg insl imul push js and roll inc js jbe or cwtl push aaa push cld iret mov pop out mov arpl (bad) das shlb mov xchg inc ficoml lock xor imul and mov pop adc xor test cltd leave (bad) je or add adc lods jg jbe cmp pop push sahf xor movsl mov jg dec fisttp lods repnz lock loopne arpl xchg push push (bad) add icebp sub jo pop sub xchg jecxz gs data16 dec in fwait movsb and inc mov sbb int mov enter lods enter lods enter lods enter lods enter lods enter xchg bound ss stos lahf test aaa inc fadds dec movsb lods xchg rolb insl dec dec inc lock jg fadds sbb fs andl popf pop mov xchg (bad) cmp sbb subl pop cwtl adc (bad) imul cmp js inc sub lret mov mov incl (bad) cmp ljmp scas mov push int3 mov xor dec xchg addl mov push mov test dec fdivr notl mov jecxz xor jae (bad) std pmullw aam mov outsb xchg pop mov mov sub pop add sub (bad) pop mov in pop mov loope fidivl enter mov inc lret dec call sub xchg sbb add cmp xchg dec repnz inc mov push nop sub enter lods enter lods enter lods enter lods enter jb,pt fnsave lret pop mov test mov daa mov andb cli pop insl dec mov mov xchg adc ss mov jmp mov enter jl cmp aas (bad) repnz add mov push orl (bad) push in pusha mov std (bad) pop sahf fdivrp leave cmp outsl pop inc pop out and push scas mov mov cwtl movsb inc push sbb scas add fnstsw xor aad cmpsb mov ds lahf ss jmp and dec decb cmp jbe or (bad) mov int3 hlt sub stos jnp pusha int3 inc dec mov lods xchg pushf fsubrl pop lds cmp pop aad andb lahf (bad) insl (bad) loopne jnp pop cld fdivr cli inc jae adc lcall cmp mov and push dec jb adc jecxz lods enter lods enter lods enter lods enter lods enter or xchg popf fadds inc xlat inc mov mov cwtl ror or mov shrl lahf sbb push adc sub mov push outsl stc fcmovu cmp pushf sub cmpsb mov (bad) loopne xor inc or cmp add movsb cld (bad) pop xchg adc add mov scas dec jns jg and add xor lods (bad) pop inc scas mov cmp lret pop (bad) pop in icebp mov int3 mov sub xchg jecxz shrl or ret mov je das mov add cmpsl jae cmp add cld nop or pop test mov or stc xchg insb shrl mov add or adc jecxz pop xor out jo fcoml or nop mov lods enter lods enter lods enter lods enter lods enter ds xor and xor arpl sbb cmp mov test into mov rcl sbb adc rclb add adc shrb subl sub xchg bnd jmp pop fs xor cmp xchg (bad) mov push adc mov (bad) jl xor mov ret (bad) adc and push push aad push jg add fistpl sub xchg mov adc inc aaa xor jae jp scas adc lods popf jo pop mov pop mov pop adc xor movl cs mov (bad) and add push mov jbe or sahf xor pop enter sbb push lods cltd and mov push or pop cmpsb sub insb jle test jno push mov jb lods and or cli pop xchg xchg ficom enter lods enter lods enter lods enter lods enter lods enter adc xchg and movsl mov mov mov or data16 pop sbb cmp jno mov les xchg push pop insl scas xchg cmovo lds (bad) mov insb inc notb jle xchg adc cmp (bad) mov test idivb popa fs (bad) (bad) cmp out fiaddl push pop out lret scas js outsl add sub mov stos jmp sub jae jp mov sub push rorl mov xchg and mov xor ds inc ret arpl das cmp sti mov xor cmp push mov xor push mov xlat xor fdiv xchg mul popf (bad) insb bound or test dec mov add jnp sbb fild int (bad) mov (bad) mov nop sub lods enter lods enter lods enter lods enter lods enter lods enter mov inc pop xchg (bad) mov movsb mov daa sar dec push test mov mov lods sub sub adc push rcll mov pop dec call dec stos stos (bad) mov in mov mov insl aaa mov cmp mov jl aam cmp xchg fiaddl fldt add (bad) fs (bad) lret xchg enter xchg mov dec fsts push fdivl xrstor ffree or dec xchg hlt mov jnp das mov pop int3 sub mov and mov push ret dec loop mov aaa sub loopne (bad) cmp jg add (bad) pop add mov sbb and jmp sbb cld pop jnp mov data16 enter lods enter lods enter lods enter lods enter jle,pt push hlt push lea scas and mov frstor push les sbb mov inc test (bad) xor sbb cmpsl push lods cs cmp lahf test out imul jbe leave nop (bad) or mov cmp in xor lea mov movsb je test cmp and lcall push addr16 jle mov mov pop sub sub insb mov in mov adc imul jb inc push xor mov std jbe loop test mov dec loope ret dec inc cltd inc movsb add pop jbe jmp push imul repz ja push stos ret (bad) out inc mov pop jp sbb xor js repnz mov jmp scas sub lods enter lods enter lods enter lods enter lods enter lods enter push int aaa lea pop (bad) ljmp xor or or push mov sbb jp jns leave test sub popa pop lock add jle xor jns out mov pop xchg cmp (bad) mov or out push and daa dec repz dec lods push pusha cmpsb jle cmp lods imul cmp pop dec std and jle je and adc (bad) pop test andl adc out ds inc xor xlat repz pop inc dec sbb push rorl pop cmp push test movsl mov into sbb fsubrs cmp xchg mov xchg (bad) or outsl push mov cmc mov lret test rep pop mov push inc shl adc xchg sbb add divb jmp lods or repnz mov mov imulb enter lods enter lods enter lods enter lods enter lods enter loope fistpl jb popa cld data16 pop mov push jo mov dec add mov pusha xlat xchg inc pop insl mov dec (bad) mov add fwait lods or cmp push shll ret int3 add dec fcmovb mov mov jnp and jle fcoms pop mov cmp add jbe inc test ret ja fisttpll push push outsb push push dec stos push pop movsl arpl out add je,pt (bad) rcrb (bad) int3 sub mov dec dec xor xchg repz imul call sub clc daa (bad) lret jae xor sahf push xor cmp dec add mov cmp dec sbb mov push outsb or mov loopne add xchg push push inc jmp sub or mov jecxz gs jb stc sahf or adc fldt lods enter lods enter lods enter lods enter lods enter lods enter cld mov mov ret pop ss xor sti adc mov dec mov ret pop out sub pop or ljmp mov insl scas push inc xchg push test xor scas push lret insb xchg push out push xchg fwait hlt jbe adc dec movsl daa psubsb push test adc xor cltd (bad) dec pusha cmpsl int (bad) orb jg jg pop addr16 xchg mov mov xchg mov (bad) mov cmpsb mov lock sub call and push jnp xor jg pop inc push or sahf pushf mov aas dec fnop popa int3 dec mov dec push sbb pusha xor lret lods xor stc dec pop arpl pop pop or inc mov pop jp cmp (bad) loopne (bad) mov gs movsb push dec enter lods enter lods enter lods enter lods enter lods enter imul jge pop xchg and inc mov popl hlt adc xchg (bad) xor ret ss call test sub lds lcall aas and je dec mov sub inc ret xchg xchg adc mov xor (bad) mov cmp mov sub mov ret push (bad) cmp test add add rcll psrlq sbb dec xor test add test adc int out lret mov cltd mov ret dec inc push adc lods or jbe cmp clts sahf xor fdivs mov imul and decl dec jo pop das scas sbb (bad) ds gs cwtl cli (bad) xor and enter lods enter lods enter lods enter lods enter lods enter xchg pop loop cmc pop xchg xchg (bad) lahf and or inc add std mov inc into mov push mov leave pushf jno and push rcll dec dec addr16 xchg pop aas sbb int push pop cmc outsl (bad) xor in imul xchg cmp dec mov test dec outsl push mov fdivs xchg fiaddl push pop clc dec iret out add ds or in fstpt sbb xchg fisubr inc inc dec xor sahf insl xor add sbb mov pop data16 mov test mov test out stc mov stos push xchg mov xor pop enter add sahf xor push cmp mov xchg test pop enter stos lock cmp popa xor pop or adc jg imul in ds cmp adc push enter lods enter lods enter lods enter lods enter lods enter ds (bad) into shrl pop push (bad) xor sbb dec cmpl out xchg xor and in in add sbb push lds test ret jno adc jae pop cmp pop inc aam stc xchg nop add lds jo ds in mov or add mov mov stc js xchg cmp (bad) (bad) ficom jg xor loope inc rcrl mov rcrb pop push fdivl (bad) and jmp dec adc lret outsl fsubrs in iret push imull add sbb add sahf mov cmp popf add test inc bound add scas (bad) out sub (bad) lret lods sbb lock xchg nop dec pop pop fs mov pushf sarl int3 pop xchg mov (bad) enter mov pop test mov and lods enter lods enter lods enter lods enter lods enter lods enter mov pop jns pop xor int3 add mov insl (bad) sbb (bad) dec das xchg jns and (bad) mov mov add es int3 mov sbb cmp push dec inc fs jg out push push fwait sub fwait sbb jle in cmpl or and nop jl sarl aad cmp push sub stos push lock hlt incb inc stc mov (bad) je mov inc dec and sahf and scas fcomps rorl pop cmc jbe call mov dec jae inc mov addr16 icebp xor test ret iret lods push adc lods stos jns addr16 (bad) imul aas repz push dec mov imul daa stos mov adc pop (bad) sbb mov jno sbb ret pop sbb lods enter lods enter lods enter lods enter lods enter lods enter pop inc dec imul arpl mov xchg xor bound mov sbb jge leave (bad) in ret jmp repz lds gs stos (bad) lods out or mov jo repnz jno sbb sbb int3 xchg cwtl out (bad) mov pop adc mov adc std jae jle je and sub or mov loope sub sbb mov (bad) lock dec lds lret int3 mov roll adc or cmp jle inc in pop add sub cmp add cld nop or addr16 push lods xchg lahf jmp fldl2t in push or jg imul cmc into mov gs bound mov and lods enter lods enter lods enter lods enter lods enter jmp mov nop rcl sbb inc int pop xchg (bad) jge arpl xchg gs mov mov mov lods push cmp in lahf mov inc mov sub xorl sub rcll dec dec mov pop push add mov cmp adc das push xchg fwait hlt jbe cmc (bad) sbb sub or jne mov xor int3 test inc loope out and and out ja addr16 cli imul call (bad) (bad) dec xor cmpsl cmpsb mov push sbb pop lods xlat adc xor mov cltd mov jmp inc xchg icebp in mov sub push sahf movl xor fdivl js add outsb pop aad push push and xchg dec cli mov popf je and sti cwtl cli in cmp and lods enter lods enter lods enter lods enter lods test or xchg push int sub popf imul inc mov and xor inc add cmp cli pop insl dec mov and jg sbb add es cmp cmp test lcall notb vandnps jno lret lahf repnz insl insl jmp mov mov data16 mov add mov cmp scas and push scas mov jae addr16 pop popa xor inc in icebp lcall (bad) popf adc repnz test sbb xor clc dec xor sub cmp jb xchg cmp iret pop mov mov jle mov pop xchg js add mov and pop cmp test leave arpl xchg add pop or nop jmp cmpsl es gs jle in dec in ljmp enter lods enter lods enter lods enter lods movsb and mov stos fsub imul and and push sbb mov movsl xchg mov stc pop out sub pop or mov sahf cmp mov loopne xlat insb mov jle dec and xor in lret fs fldcw xchg packsswb xchg loope push outsl andl cmp pushf fiaddl sti sub cmp in xchg cmp les in cmp xchg pop mov icebp push jg test inc mov out ss xchg clc daa arpl movsl dec stc xchg pop das mov pop pop push xor imulb mov inc js or cwtl popa je hlt hlt call xchg xor or or test xchg pusha incl adc jno cli test cmp lods enter lods enter lods enter lods enter lods enter mov push jbe inc (bad) out xchg outsl push push int mov test pop mov mov loop xor jmp xchg sysret rolb mov (bad) rcrl inc sub pop (bad) cli xchg test cmp imul xchg jno js js cmp (bad) aad loopne inc fiadd notl ret dec ljmp stos push aad push push and repnz stos push loopne mov popa sub mov jp fldt sbb clc xor clc daa push adc xor inc daa into dec ds jne (bad) test jl popf cmpsb inc or jbe lret dec push daa mov cwtl loope in call mov and out outsb mov ficom pop push roll pop in lret lahf pop fmuls int3 ja std push pop test lods enter lods enter lods enter lods enter lods enter (bad) aam push sbb pop sbb add fdivrl or jo jno xor ror pop out lods (bad) jae outsb mov sbb bound push xchg das inc sub (bad) popf je mov sub fcomps (bad) dec stos stos rcl out insb jns or insl fs mov iret (bad) adc push out (bad) push pop xchg movsl lods adc test ret cmp fcmovb xchg jno jb and push (bad) outsb arpl xchg imul xor mov fist push jecxz sbb out inc stos out and dec dec iret insl sub adc pop rol scas aas test cld cmp pop mov (bad) mov jl ds sub cmc loopne xchg mov lock mov jo cmp test mov add jle xor and shlb dec enter lods enter lods enter lods enter lods enter lods enter lods enter das sti jl push lods or jecxz mov (bad) int mov mov xchg xchg ss sub mov and xchg ror or mov nop and fldcw sub push inc addr16 dec icebp inc sbb jl lds lods dec xor fwait sbb adc mov fcoml adc push jmp jl mov cmp cmpsl int inc orb jg add js cmp pop dec pop push out ss cmp or (bad) ficom int bound outsb xrstor frstor hlt mov addr16 rol dec inc cltd mov cld fsubrl and popf mov lock mov xor lret cs repz (bad) dec dec sub test inc pop xchg mov fbstp ror lods enter lods enter lods enter lods enter lods enter lods enter or clc pushf adc (bad) cld cs imul mov ss lock cwtl mov inc mov mov pusha xlat aas cli pop insl (bad) jno pop or adc arpl rorb inc lret push inc sbb jl cmc and outsb mov jno adcl aas gs add ret cwtl je pop lret pop nop stc inc test inc in ljmp stos daa in xlat pusha jp cmp in xchg inc das pop xor int3 mov cmpsl inc inc rol mov mov mov mov adc and addr16 repnz mov or cwtl (bad) movsl pop pop push xor mov push sbbb xchg mov stos add add dec ds lcall (bad) inc addb sti sub sbb jb mov enter lods enter lods enter lods enter lods enter lods enter in mov mov idivb cs (bad) push inc xchg mov pop pop xchg mov pushl xor insb xchg (bad) mov ja add push cmp add mov scas pop aam push pop insl scas ds inc xchg dec jns sbb jmp js mov mov outsl pusha xchg and pop loop ffree pop into or push fwait adc pop xchg lahf fiaddl fldt add dec xchg cli push movsb dec (bad) adc xor mov mov jp sbb pop pop outsb xrstor mov lret mov xor lret jbe dec sub movsl push cmpsb mov test int3 das (bad) (bad) xlat je push insb xchg and jae pop aad push sbb out add sub and add lods enter lods enter lods enter lods enter lods enter lods enter repnz mov mov mov mov mov lahf test xchg or xor push mov in rorl pop adc hlt js in xor sub inc fcoms pop pop out push cmpsl shrl and lcall adc nop cmpsb push dec cltd in dec mov test mov nop jl mov xor mov lea fs (bad) ds or (bad) sbb dec xor in test push xor dec jb and clc popf push push xor mov rcll mov sbb mov ret lock loop mov push ds push pop jo xchg xlat ljmp aad jecxz jecxz mul cltd adc fwait test mov fstpl enter enter lods enter lods enter lods enter lods enter in dec gs fdivl mov stos add mov pop pop xchg jp mov test sub and lods xchg pop pop jl stc leave cmp sti imul lret gs mov mov fidivr cmp sbb sahf cmp xchg mov cmp mov (bad) js cmp lret (bad) cmc adc aam stos push sub xor or je test fist adc xchg enter jmp scas outsb mov adc ret mov sbb xor cmp cltd or (bad) negl mov or xor add push mov mov pop jge icebp cmpsb xchg loopne ds mov push or nop add add (bad) hlt jns enter lods enter lods enter lods enter lods enter lods enter lods fbstp xchg push cli cmp xor jl cmp mov and jmp xchg add push shl xchg insl xchg or mov pop insl (bad) xor aam outsl aas xchg les dec inc in cs mov pcmpeqb cmc cmp ficom jle cmp js clc mov mov add push fcoml addl cmc adc orb (bad) out add shrb ret outsl sarl sbb add jnp xchg jp popa and pop mov addr16 clc daa sub cmp dec sarb fisubl cmp incl jbe ret stos jnp popa int3 inc or ja mov nop pop and mov and lock cmp push inc loope adc or add (bad) ds enter lods enter lods enter lods enter lods enter lods gs cwtl cli pop and and dec test cwtl mov mov sub xchg pop push ss sub mov dec sub rcll insl (bad) mov test mov sub lds cli jnp pop aas push push bnd dec and sub mov push inc popf xchg fwait (bad) inc inc nop dec fs cwtl (bad) hlt xor inc js popa movsb insb xchg jl cmp push nop mov lea or add ds or sti fstpt sbb xchg sub jnp jp jbe pop inc cs pop rorl inc lock push pop add xor mov fisttpll cmc das cmp daa push sahf xor cmp sub sahf xor push (bad) sahf ja push imul idivl cwtl sub call mov or mov lret lods enter lods enter lods enter lods enter lods enter fbstp ljmp popa or cmpsb sahf lcall adc (bad) dec ficompl popf fdivs inc fildl icebp and aad jno test aam lahf jecxz fdivl sub pop mov xchg (bad) cmp xchg xor cwtl and jns gs xchg add adc and cltd cwtl add and or lahf rcll lods sub mov pop add out lret mov rcrl xchg fsubrs mov jnp jns jmp dec mov aas lock outsl push (bad) scas and mov xchg xor sub lods aam sahf add pop das cmp and cwtl mov pop jns xchg mov jnp xchg nop dec sub push push (bad) add mov dec jo popf cmpxchg enter lods enter lods enter lods enter lods enter lods enter dec iret mov popa xchg movsb test push and scas sub clc (bad) pop or lret mov ss sub xlat cld xchg sbb sub rorb (bad) sarl mov scas aam loope add mov insl scas mov mov cmovle int mov mov inc pop nop frstor data16 mov mov sub subl cmp or (bad) test in push mov enter sub pop je mov aaa push jg cmp push pop into mov fcompl pop dec cld xor daa push in mov mov jge jg cmp negl loopne mov sub push sahf xor xchg int3 hlt push les xchg sti lret xchg or (bad) repz ja push stos ret (bad) out mov mov xchg inc jae lods enter lods enter lods enter lods enter lods enter mov dec iret mov popa xchg movsb test push lea dec loop outsb pop jns pop dec xor add pop mov test mov push inc xchg (bad) sub shr mov cmp rcl xchg (bad) ljmp xchg sub mov pop lcall lds xchg adc xor in jle outsl fs stos or cwtl mov (bad) mov sbb add push or lcall or aad (bad) pop mov xor xchg enter dec mov popa test int bound (bad) in std pop clc daa fist lret jae ja jnp data16 lahf or cltd fwait adc fs outsl mov mov icebp mov mov add or (bad) fs lock decl jl push push dec jo jecxz mov sarl lods enter lods enter lods enter lods enter lods enter mov das sbb in inc mov stos test add rcll mov scas fdivrl or add pop daa push inc push cmp cli pop (bad) mov aam lahf pop mov and rcrl xchg and lods sbb inc adc lods (bad) cmp xchg xchg lock sub add scas rcrl pop mov inc rol data16 scas push incl adc out mov ffree add sub cmp fwait sbbb test out push sub cmp dec dec push mov fdivrp dec iret lret arpl xor xchg xor and cmp and inc mov sub gs push sahf xor xchg iret in aam (bad) sub xchg leave les mov adc mov loopne ja in repz add lods enter lods enter lods enter lods enter lods enter jnp inc stc gs ja mov and subl jle push arpl jge dec mov lahf test sbb mov push mov mov lock (bad) cli push inc inc jns setb cmp pushf les gs call mov jne xchg repnz hlt adc push js mov insl cwtl jb (bad) cmp mov adc sbb dec inc push push xchg mov rorl es sub or inc enter cmp xchg jp into add out mov mov adc xor adc pop dec add scas das cmp mov pop mov test dec push dec jae sub pop fsts lock jecxz sbb jmp sub frstor lods enter lods enter lods enter lods enter lods enter lods enter jae pop and aad stc cmp pop fnstsw cmp sbb sbb cmc pop xchg fdiv pop ss mov inc jo movntq out (bad) adc dec ja add or mov or loopne pop xchg xchg mov push push rcrl (bad) aas push outsb mov lods mov and insb or mov clc mov in jo sbb adc insb shlb adcb jbe scas jo push cld mov stc pop gs in leave (bad) je cmp (bad) adc (bad) mov mov pop divb xor scas push xlat sbb sub insl je and lret cmc lock es clc into aam pop enter add ret mov scas nop mov stos mov mov pop inc stos inc lock sub movb sbb or enter lods enter lods enter lods enter lods enter lods enter xor fbstp xchg fbstp (bad) jmp fldl cs imul arpl idivl outsb and push mov and inc pop leave mov pusha ror or add mov es add lea xorl xchg sub ss sbb repnz movsb xchg xchg cmp cmpsb sbb adc movsl popa cs dec xor movsl xchg push push data16 jb push pop inc inc sbbl sub dec lds cmp jno test test popf jb (bad) movsb aam pop pop das pop (bad) xor dec iret cmp mov ret movsl cmp mov ret bound xchg xor push dec or lds mov in sub cs add call mov lods enter lods enter lods enter lods enter lods enter cmpsl nop repz imul scas pop (bad) cmp pop rclb sahf sub xchg (bad) call loopne sbb mov and sbb shlb sub mov jg test mov lods mov xchg cmpsb rolb xor icebp (bad) mov mov insl loope inc imul jae sub test cli adc addl mov outsl push popa jle xchg cmpsl push pop pop mov sti sar mov xchg or gs sarb jle pushf add test mov push lock or (bad) fnstsw jg xor into sub jg cmp sbb sahf xor sub dec popf cmp jg push imul in sub push push or mov test enter lods enter lods enter lods enter lods enter in (bad) fimull jbe dec je mov mov xchg pop dec sbb sub lldt sub mov popf sbb roll mov push mov mov leave cmp adc into and rcll insl mov mov and jmp dec ret mov in les les or cmp stos lret push dec repnz jbe xchg imul inc jl pop inc out pushf cs jns outsl iret dec addr16 sub or xchg enter xchg xor test daa out scas les ds fldenv add mov std jbe loop jmp add pop enter negl pop aaa mov push mov lret sub inc and out cmp dec sub stos sarb out xchg add enter lods enter lods enter lods enter lods enter lods test test and and and ja (bad) or push imulb xchg mov mov popf fdivrl or icebp lock xchg dec xor ror or es inc sbb arpl rcll push rcrl outsb mov add scas adc mov jb loope insl fwait dec js cmp mov xchg (bad) mov (bad) adc jl insb pop sub mov scas movsl or pop out xor add je adc and sarb pushf jp into aas mov or lock aas test mov sbb inc xchg ret pop mov mov call dec mov clc mov xchg test cmpsl cmp repz sub dec sub (bad) sti or adc jo lods enter lods enter lods enter lods enter lods enter xor sbb sbb iret stos bound (bad) dec pop nop mov mov or nop mov push inc test out xchg mov pusha and cld scas mov push and adc pusha outsb jg add mov mov aam push pop insl scas pop push inc xchg dec aam sbb push cmp ficompl xchg xchg fwait (bad) popf insl jg divb iret mov jmp jl mov inc sub jecxz and and and mov ja cli add sbb arpl into loopne mov sahf push es insb scas roll adc jne mov lret push ds inc add add mov in movsl push ljmp loope pop rcr lods (bad) xor add pop imul push (bad) testb push jbe lods enter lods enter lods enter lods enter lods enter add xchg add rcr cwtl and cmp mov ja outsl xlat outsl mov repz fmull add xlat test sub add mov movsl sbb xor inc push inc pop push add cmpsb adc rcll rorl mov cmpsb cmp stos and scas fadd orl push js mov pop jne inc imul jnp push adc outsb mov outsl out dec inc cli scas xchg in sbb rolb push out insl and sub (bad) mov sahf push lret jne sub popa mov push imul fs mov cltd in insb std inc or dec insb je sahf cmpl mov add nop js xchg rolb (bad) imulb add pop iret jb ds fs mov sbb lods enter lods enter lods enter lods enter lods enter ds inc sub or cs mov int3 shl cld dec dec (bad) and (bad) or outsl pop mov (bad) popf jno je mov push test ljmp pop nop jg in rorl mov cld loop fwait shlb push rcll mov cmpsl lock aas push xchg (bad) imul fistpl pop cltd or dec data16 jecxz xchg ret lahf sarl dec ss stos ljmp push scas cmc fwait push mov adc inc das pop xor out sbb arpl inc mov or pop fist int jne mov outsl addr16 scas and mov test cltd leave jle xchg sub gs adc mov je cmp sbbl xchg jg loop mov and enter mov insb es mulps enter lods enter lods enter lods enter lods enter lods enter sbb (bad) cmpsl sbb addb dec pop out sahf std add sbb cld push dec mov pop push lods into pushf pop lea add fdivrl mov lahf push je ja adc add push sbb test mov lods cs aas cmpsb daa dec xchg ficom xor adc ficom pop nop cmp mov lds pop push inc popa ja,pn dec sub les cmpb mov mov or mov and imul fidivr in xchg sarl sbb clc daa mov mov je inc mov (bad) adc lods mov pop fild (bad) std mov dec push nop mov and (bad) xor mov push pop aad adc or lods enter lods enter lods enter lods enter lods enter gs add mov mov test push gs test ret int3 movsb and std nop aaa test jecxz mov mov imull jns lds push mov jg stc sbb loope lds imul imul jo es pop mov outsl push shll outsb mov imul and ljmp imul dec in outsb clc or push add add jb jae xchg cmp in cmpsl icebp in fimull push xchg adc cmc push jnp mov pop xlat iret mov push (bad) xor mov bound push xchg bound imul mov icebp mov adc imull cmp daa cli mov popa cmp or push mov jg sbb mov and add push xor (bad) enter lods enter lods enter lods enter lods enter lods enter cmp inc call inc cwtl inc neg frstor dec inc jecxz test ss dec sbb mov sbb ret and jecxz iret mov pop fadds cmp add adc test mov xchg stos jmp jmp push cmpsb gs mov sbb ret mov aas in push pop out cmp xchg jne inc xchg loope (bad) push mov mov lret stos mov jcxz pushf ljmp (bad) movsl adc je push std das (bad) pop popa xor sarb popf push leave adc push shrl jnp push imul in into cmp mov pop cltd addr16 inc repnz or sub xchg daa lea mov sub inc test lea stc push dec mov enter lods enter lods enter lods enter lods enter or gs cltd pop (bad) sti sub sbb lcall ret push fnstsw mov aam fs jecxz int mov test xchg lahf and cld repnz bound jo ret lods ss sti addb jmp lods pop aam insb rcll mov repnz adc ret and cmp jmp int3 and and inc mov fist movsb jle js mov inc scas data16 and (bad) stos mov xchg scas clc sar jmp das add mov push test xchg xchg shrb roll test dec xor test das cmp add xor mov sub in sahf xor lcall inc in (bad) notb aad sub add xchg mov push stos imul lods enter lods enter lods enter lods enter lods enter lods enter sub and popl cli fcmovnu or ficompl lahf or (bad) and adc xchg pop dec sbb lods ficomp jbe xchg pusha push jo mov lods je scas cmp (bad) leave in lret (bad) inc outsb sub mov sub lods sbb fisubr inc out sbb and lds mov (bad) loop cmc xor cmp and mov adc lods cmpsb popa fidivrl inc mov inc addb and sbb cmc jno (bad) outsl iret ljmp rdtsc sub push js dec subl negl popa out jmp lcall int or shll bound cmp jl popf int3 xor cld sub mov mov dec mov cmp mov retw sub adc xchg mov push stos enter lods enter lods enter lods enter lods enter lods enter sub and popl cli fcmovnu loop xor sbb pushf or dec jle dec (bad) mov push idivb xchg push int bound test pop mov and mov sbb xchg cmp subb scas pop and (bad) (bad) mov lcall subl lret xchg sbb int3 jle in test es in dec cltd addr16 sbb push fiadd jp cmp add mov scas cs push mov mov imul sbb outsl enter hlt into (bad) mov pop push cwtl test pop aad and pushl (bad) neg xor mov jbe or pop scas fwait popa cmpsb inc xor mov add inc dec xchg gs xorb xchg js lcall movsl push lods enter lods enter lods enter lods enter lods enter ds pop mulb icebp imul inc mov lock inc or push add mov sbb test push inc pusha mov add jns jecxz mov adc (bad) xchg lock mov or jp add xchg cmp subb ljmp adc adc ljmp jno test (bad) aas (bad) repnz lret fs push clc dec xor mov adc pop sahf or sub outsl pushf addl pop mov xor (bad) je loope hlt stos ret mov cmp sti push sarb aaa push negl jno iret aad lcall cmpsl lret fs int jnp rcrb xor add daa out popf cmpsl icebp cli cmp hlt xor jbe ljmp cmp fbld pop aad repz lods enter lods enter lods enter lods enter lods enter lods enter push out scas imul in add jne iret mov iret (bad) fcoml popa jecxz ja outsl xlat outsl mov dec arpl (bad) and inc lahf test push pop fadds scas bndstx clc repnz insl lock mov xor fwait mov pop rol cs clc mov shrb mov aad mov push repz lret cwtl addr16 out test inc js jbe test addr16 adc inc ja out mov jmp rcl (bad) sub push xchg and in jmp rolb es lahf jp jbe pop inc cmp sub lods mov push cltd stos pop push int3 or fwait cmp jbe or adc jb leave xor mov sub push sahf xor bound lods movsl rcll imul fcomip sub xchg mov lods enter lods enter lods enter lods enter lods enter dec (bad) sub xor inc pop (bad) sub mov pop (bad) jno outsb aaa dec (bad) and xchg mov mov pop imul std int add pop in add push jbe mov rcr sub inc and inc push adc adc sub fstps roll and mov cmpsb cmp pop adc xor sbb movsb (bad) in and dec or inc mov xchg movb xchg cmp out stos cmc adc jb,pt mov (bad) hlt out fnsetpm(287 or cli decb inc (bad) xchg and shll pop dec lds jb,pt out cmp and repz jmp fucomp xor iret ret out jbe das rolb decl inc enter jbe lret and icebp sahf jmp les (bad) mov or xchg lea loopne enter lods enter lods enter lods enter lods enter lods enter lods scas push sub xchg scas imul sbb push mov dec sub pop sbb jmp push dec pusha pop test arpl subl mov xor sti add jge dec movsl dec cmp insl sbb sub outsb movsl dec in stos jmp mov sub les shr loop push ret call dec xchg je xlat bound push inc add lret jne loop insb mov fcomp roll in aad lea fs pop out aad mov mov subb repnz xchg adc pushl pop sahf test add sbb dec pop jecxz daa (bad) das mov or or cmp xor int3 mov ret pop fisubl push sbb push imul adc ret lea lods enter lods enter lods enter lods enter lods enter mov xchg test out imul fcomps xchg dec add adc push xorb loope lcall mov mov push jo add ds xor add xchg mov xchg adcb out fldenv lods cs shrb mov inc ret xchg repnz xor ret cltd addr16 ret push shl (bad) push mov push lds inc in pop mov scas and push scas mov (bad) sbb mov loopne push aaa xchg mov js sbb popf cwtl cmpsl ds rcrl sbb stos out loopne lret mov shlb dec xchg enter xchg aam movsl add mov mov push js xlat or push enter lods enter lods enter lods enter lods enter lods enter lods enter shrb mov xchg inc call inc jno loop adc dec mov addr16 fcomps xchg ljmp xlat pop stc ss pop add lock and dec mov add cmp std dec pop jecxz mov gs int test insl adc jae pop aam sub vmread mov subl (bad) je jnp loop push gs stos mov and dec add out pop loope scas adc and and sub xchg pop and mov je xchg pop (bad) adc pop outsl aaa ror cmpsl ds xchg test pop (bad) mov cs fbld es pop enter rcll (bad) pop mov lock cmc popa int3 xor or xor sbb bswap lods enter lods enter lods enter lods enter lods enter lds out or lea js jb add or and mov (bad) test push inc mov pop ja xchg jmp push call movsl leave xchg mov loop in mov ret in inc (bad) push push dec cmp adc rcrb sub (bad) xlat mov add inc lret jo repnz xor cmpsb jns push sub xor nop aad in cld push or push pop sub add lret add pusha (bad) (bad) fiaddl jae mov xor insl xchg push rcll xor icebp push fistpl pop loope pushf (bad) mov jl nop dec inc iret mov in jmp inc (bad) sti icebp popa int3 inc bound fiaddl lock int bound add lds jg loope lret xchg js sbb enter lods enter lods enter lods enter lods enter lods enter (bad) pushf and sub out test inc call (bad) arpl sbb adc dec add fsts pop inc mov pop jmp pop fsts add pop ljmp in std dec pop bound loopne (bad) xor mov outsb andl inc pop stos mov leave cmpsl push shr xchg lahf lods mov fidivrl jns incb xor cwtl jmp cwtl cli add cmpsb sbbl cli bound cmp lods mov jle stc bound mov (bad) cmp cmp shll (bad) and aaa cmpsl mov bound mov and (bad) and inc or cmp mov xchg jns sahf into lods cmpsl push sub pop je loop inc xor inc jo mov jg pop stos xchg shlb lods pusha enter lods enter lods enter lods enter lods enter lods enter pushf xor inc cmc call and fldt inc std (bad) sbb lcall inc int3 pop fstl (bad) pop mov xchg das aad cmc ss pop add clc jge and pop ljmp in clc movb mov push lods ss sbb xor jmp adc rcrb sub popa inc mov shrb sbb sub pop push cwtl loope je xor dec push dec cltd addr16 jecxz fdivs xchg pop sahf (bad) idiv and ret movsb pop jge mov mov adc fwait xchg cli add lds mov test adc popf enter (bad) cmpsb pop fcomp imulb iret mov fldenv jbe cmpl push call mov mov gs xchg pushf loope daa cltd cmp cmp xor lods enter lods enter lods enter lods enter lods enter fisttpl inc xchg jnp shrb jno adc imul pop xor sbb lcall (bad) (bad) pop or push inc repnz cmp xchg jmp add repnz (bad) mov cmp arpl adc stos mov scas mov lea aam cltd cld dec sbb mov xchg scas mov mov pop ja lret scas iret lcall fcoml fidivl pushf addr16 (bad) sbb jecxz push mov pop rcll xchg jb mov xor sub dec or or jae xchg lcall jae call cmp nop inc push dec adc lret xchg push mov fsubrs lea mov jbe dec push mov imulb dec imul lcall sbb incb js lods enter lods enter lods enter lods enter lods enter (bad) sub sbb and imul sbb lods stos or (bad) mov orl or outsl sub xlat sahf daa xchg pusha push sti fs mov mov xchg xchg ss in mov fwait push in pop aam in cmpsl lret pop movsl dec mov out or test push cmp repz lock add mov adc gs (bad) push gs xor xchg push insb jle cmp jb mov scas movsb test jg push fnstsw cld mov mov push movsb push inc fidivr sbb mov jg sbbb and add (bad) mov jmpw add test sbb das pushf sti mov movsl leave mov icebp popa int3 les cmp add mov jno ja enter lods enter lods enter lods enter lods enter lods enter pusha fisttpl jb cmp and loope adc dec add add mov incb adc mov fstpl push xor lret adc xchg jmp add daa fistpll test popa jmp xor mov mov mov dec xchg shlb push in pop aam daa test inc mov adc mov test ret lret sbb subl js (bad) in arpl dec sar out push cmp jl sbb pop enter fistl jp lcall xchg (bad) je je sub inc imul cmp jmp aas lcall cmpsl ds imul in test inc repz movsl lahf inc mov push lea aaa inc addr16 mov jns mov xchg and xchg (bad) mov lods enter lods enter lods enter lods enter lods enter ds repz xor in mov imul icebp js cmc incl push lcall sbb ret fcompl xchg out inc mov adc xchg jmp push in jns push lahf sub xor pusha fdivp cli add mov insb aas mov inc test sub lret cli iret std jnp aad lds lcall enter cmpsl lods cmp rorl negb out sbb out hlt aas push js jbe out bound add push mov pop sahf adc or add sub stc mov push je xchg lret xor inc ja scas xorb mov in fs mov out and sahf push cmpsb mov mov fbld and dec insb dec call jmp sar fisubl mov stos movsb lcall arpl test roll mov enter lods enter lods enter lods enter lods enter lods enter lods mov add push out mov fbld test sbb lcall (bad) fcompl lcall addr16 xchg jmp add repnz or lods int xor cltd push sbb add mov insb aas mov inc test aam popa scas push stos arpl pop aam outsb pop arpl cmc imul xor push ss je inc push out cs (bad) paddusw inc into sub dec dec fmul out push cmp cmp in adc xchg scas addl adc mov pop mov in push iret movsb mov dec jge pop push into mov sarl cmp jmp (bad) push incl adc clc pop lock int (bad) adc ret movsl (bad) jp out jmp lods mov pop jbe mov lods enter lods enter lods enter lods enter lods enter (bad) xor xchg pop and out jecxz adc dec sarl loope inc jl (bad) fstpl xchg sbb hlt fldt (bad) shl xor cmp fsts jmp push lret mov sbb push in pop clc mov xchg adc call (bad) movsl stos int3 dec cmpsl and iret lea mov add inc movsl xchg fidivr movsl jbe jecxz (bad) cmp push aas lret jge cmp inc mov (bad) in sub push cld je ja adc rolb jne add ficomp jge int int3 xchg push mov jae mov xor mov push shlb out fsubrs adc add sbb xor shrl js or inc pop leave (bad) aam movsl mov ljmp sbb and lods enter lods enter lods enter lods enter lods enter lods enter mov js fimul add sub fsub xchg adc ljmp jl cli xor pop jecxz pop sahf jo in pop add popf stos je cmp dec xlat ret pop adc stos (bad) movsl inc popf imul inc mov add push les jle aas in mov out ja push jne pusha xor sub scas sarl les jge mov push pusha les fsubrs lahf icebp inc xchg outsl pop jle fs fdivr ljmp ret push in pop fs pop sub push xchg (bad) cmp lods sub pushf loop shufps mov icebp mov xchg lret jne in lret push jne inc data16 pop scas cmpsb mov mov shrl add lret mov jbe or ret movsl jb pusha cltd int3 jae dec aad movsl push ljmp loope push add enter lods enter lods enter lods enter lods enter lods enter lods adc or pop aad pop push pushf pusha jge popl in sub sbb lcall dec inc pop fsts frndint mov lods bound out xchg daa xchg pusha push cli jmp arpl cmp mov jle cmp addl jp movsb xor popa inc mov sti outsb call (bad) mov jns ret lods adc sbb ret aad insl enter push xlat mov jl adc mov and push es icebp fwait repz imul fsubs or lahf mov mov clc dec icebp cmp mov decl push cltd inc add cmp and xchg lods jp and cltd mov pop scas adc out jmp aam mov lods enter lods enter lods enter lods enter lods enter lods enter mov adc ss cmp (bad) mov push test imul ficoml mov adc leave (bad) cmp mov pop xchg xchg xor adc daa mov jmp mov inc test sub jecxz mov aam daa jb pop sub fwait cmp push mov jae pop sbb mov loopne pop jg repz xchg arpl vshufps sbb imul mov (bad) jge ficompl aam inc jg int int3 ljmp lcall adc sub xor mov test inc repz enter add xchg daa jp call push sub push sahf out jmp adc add lods enter lods enter lods enter lods enter lods enter lods enter push xchg sub add dec xor (bad) fnsave mov imul sbb lret lret aas (bad) xor lret stos inc pusha lods inc repnz stc push jge leave idivb (bad) cmp aaa test or stc mov negl inc inc jno add cmp mov js sbb sti cmpl sub movsl mov cmp dec arpl push jne dec push pop sbb cmp mov mov stos inc adc push mov adc (bad) mov xchg das cmp imul cmpl adc xor incb das daa test jbe daa inc cmp mov mov xchg jecxz shl and and xchg dec mov dec loope fnstenv into lods cmpsl addr16 clc dec cmpsl popa dec dec adc mov lods enter lods enter lods enter lods enter ds pop mov imul push dec sub dec test sbb es jg mov cli outsb aad lcall xchg adc cmp (bad) int aas mov xchg jmp je inc inc pop mov or mov inc add shrl xchg push mov imull repz jb fchs mov stos xchg inc mov iret and cmp sbb push lret jns repnz out into add or sbb leave (bad) fidivrl loopne cs sbb addr16 and pop xchg inc mov and stc fcmove je scas push movsb push xchg add or sahf enter xchg ljmp movsl jp push fstps sbb dec clc sub adc inc inc rorb mov dec loope aad add stos mull dec mov sbb pusha xchg or lods enter lods enter lods enter lods enter lods enter xchg mov jmp sbb pop aad push xchg fldl loop stos jno mov xchg lret loop dec adc jns adc dec pop xchg jmp add cld cwtl and add outsl es addr16 mov lea pop stos loopne out loope pop scas popa dec cltd test jle out jecxz in mov dec and cli ja push and insb lret retw pop out sub gs cwtl movb xor rorb adc ret cmp mov add sub cwtl mov mov scas and xor mov loopne cmp mov jbe inc lock int and (bad) xlat daa dec and lret pop adc inc mov dec icebp frstpm(287 ljmp dec imul xchg xor push lods enter lods enter lods enter lods enter lods enter pcmpeqd mov les dec cmp (bad) lcall dec jo xor rol and xor cltd fldt jmp adcl je jno lret call shll mov movb lcall jns mov dec jae,pn mov inc sub dec in stos adc (bad) jno fldenv pop push shrb imul hlt jo dec xor sub mov (bad) or fidiv cwtl mov jecxz outsb or and insb dec adc ja mov mov inc addb pop adc mov jl sub lea ds mov cltd sub pop ror (bad) push out lret or dec test iret cmp pop (bad) sarl bound mov cmpsl mov pop int3 cmp cmc stos enter lods enter lods enter lods enter lods enter lods enter lods push jbe cmp or push fsub pop iret dec sbb push pop xchg pop mov call inc jmp inc pop sahf cmp out rolb cmovs popf push pop stc dec jge lcallw jle shll lods cld jge and std aam (bad) or fmul ljmp adc xchg cmp lds jo int3 andnps push mov pop scas imul mov dec inc push xor repnz gs inc mov jbe loop dec (bad) push data16 add pop js add mov mov pop lods hlt cltd jg cmc inc xor pop jae or sbb adc leave mov lcall dec pop aaa (bad) out (bad) jnp xchg (bad) cli fs and push mov cmc sbb or jmp lods call ljmp lods enter lods enter lods enter lods enter lods enter lods enter enter push pop push lods das adc divl sub pushf stos dec mov mov fs lcall ret mov movb and jb pushf je jae outsl and mov and rcr jmp mov push cld mov xchg adc push sub mov arpl or out in fsub mov pop lods (bad) dec sub pop outsb sbb sub (bad) js dec rcl sbb and add addl out popa scas xchg push jle stos push fwait aad mov mov and sub aaa sarb test loop and lcall sub and repz mov lea xchg (bad) cmpsb ja enter aad inc xchg enter lods enter lods enter lods enter lods enter lods fxch push mov xor xchg or push cmp ds xchg cli cli jl (bad) jmp xchg xlat or cli inc jae daa add add adc mov (bad) push (bad) adc push adc xchg pop xchg icebp cltd push call jle jo xchg lahf push out incb daa mov jno cmp in cmp das cs xchg subb divl fldl2e inc dec shrb movsl dec mov sbb or lret mov testb push js or dec (bad) fildll mov or xchg jl mov sarb jbe mov jb fstpt (bad) cmp push loop das movsb push pop stos fchs inc imul pmulhuw cwtl dec sbb mov pop push and es pop iret xlat cmp adc or call mov lret repnz add jb lods enter lods enter lods enter lods enter lods enter cwtl lret shl sbb popa (bad) xor pop pop push dec sub test sub loop aam mov pushf fnstsw pop jae lcall xchg pop lcall subb jmp push arpl lea push out test xchg clc stc dec fildll mov (bad) sbb jmp paddw rcrb daa mov mov fstpt subl xchg jo repnz mov es jl arpl mov jne add and inc popf jp xchg push sbb daa insl movb sub cmpsb xchg lret mov mov jae out pop inc fcoms mov mov pop lock sahf shrb push dec pop adc js mov sbb mov jl fisubl sbb mov jg inc out inc fwait pop mov fdivrl lods enter lods enter lods enter lods enter lods enter popf mov sbb inc jg push and mov sub xor jo mov loope xchg roll sti shlb add mov mov fcompl sbb cmpsb (bad) pop xchg loop mov movsb and stos ret jle xlat and fsubrl cmp adc mov out and mov ja adc cs ljmp sub push pop mov popa adc subl fcmovnb cmp push xchg shrb shlb xchg or test mov popa pop stc push ret cmp scas and mov mov adc add notl subb imul push fistpl popf sbb xor or ret mov aaa jb in test insb or aas movsl ds imul jmp add inc addr16 jp dec enter lods enter lods enter lods enter lods enter lods enter lods enter mov (bad) push push (bad) loope jb mov or loopne pop test (bad) xchg imul push mov cmp test pop or mov negl loop (bad) sti sahf push imul pushf mov sbb and mov xchg je (bad) arpl sub xor imul dec sahf stos jno aaa mov mov (bad) rorb mov fs xchg jb rol out cmpsl xor test in cwtl arpl adc jns xchg scas mov xchg jne cmp mov adc pop fsubrl aaa lods decb mov addr16 or (bad) int add outsl pop dec cmp (bad) mov add pop das jns xchg scas scas call lret test jecxz les inc push fdivl insb xor add repz nop pop add lock push lods enter lods enter lods enter lods enter lods enter movb mov aas sbb add addr16 or das loopne aam loopne or fs push stc xchg stos mov scas test popf rcr aad inc lret sbb mov test movsl inc xchg mov or mov subb add sbb test les cmp lcall dec lods mov sbb in int3 es or adc inc xor loop mov pop ja xchg ret inc cmpsb xchg dec mulb mov pop and cltd (bad) sbb jno cwtl test popa (bad) mov or xor ja lods sbb xor and inc inc (bad) bound xchg in add and inc inc xchg mov xor jmp or imul lods enter lods enter lods enter lods enter lods enter lods enter je ret push adc je (bad) popf (bad) sbbl cmp lods dec mov (bad) (bad) add jl adc cmp xchg add (bad) mov add mov aaa mov outsl pop xchg loop mov cmpsb inc int3 mov imul (bad) jl mov jle pop stc loopne cmp adc rolb mov sbb xchg out and les out negb add outsl repnz mov dec pop cmp fsubl orb scas sub xchg inc adc in sub jg cmpsb daa jbe pop call xchg jae es iret adc mov inc mov mov addr16 jb (bad) mov pop mov add inc addl addl and dec lods enter lods enter lods enter lods enter lods enter (bad) repnz cmp cwtl push adc jno out data16 (bad) cmp test jl addr16 pusha inc imul insl cmp rcrl inc cmp cmc xchg xlat outsl aad sub mov push call test test sbb int xchg rolb push fstps clc popf jg ljmp ljmp iret jbe jle out add mov js push xchg xor pop movsb push sbb xlat dec jecxz in int3 push xchg jl adc das push nop pop test pop mov fistp test es mov daa push cs adc (bad) shlb (bad) mov jecxz aaa jge insb data16 pop xchg daa pop leave xchg pop test sub nopl adc inc xchg lret jg and sub lods mov add enter lods enter lods enter lods enter lods enter lods enter cltd jp call xchg jne pop ss lahf mov mov pop cmc stc loopne xchg mov cmc call pop mov mov lcall pushf push push fldl mov loop sbb adc jne mov pop mov fidivl add mov dec dec sti add inc fbstp sahf stos jno pushf fwait xchg mov rcll ss out xchg cmp sbb inc in sbb cmp or testb (bad) mov lret mov test xor xchg add cmc adc xchg in push pop js xchg mov pusha stos jmp scas cwtl sbb cs pop incb xchg je mov std ds enter lret jmp scas mov fsubl in loope add dec loopne js cmp (bad) cmp rorb lods enter lods enter lods enter lods enter lods enter lods enter mov mov cmp or hlt addr16 jmp imul divl outsb lcall stos cltd in xchg adc mov (bad) lcall (bad) fcompl inc mov jecxz rcll imul push js and mov pusha mov mov jae jle jle (bad) in jnp push xor scas adc fldenv mov movsb pop cmpsl loopne pop mov pop jno popf insb mov fidivrl lahf xchg jg xchg out lock stos xchg xchg xor sbb scas sub jnp aas ret aaa out cmpsl pop jnp inc jb push out add or inc push pop lds inc inc dec into icebp cld or xchg jne cmpsb ds pop push inc mov (bad) shrb xchg dec addr16 dec clc idivl ror iret ja enter lods enter lods enter lods enter lods enter lods enter pop push popa int3 inc or mov bound mov out cli pusha stos dec jle xchg mov xchg xchg dec jo call leave adcl fbstp rcrb das and or (bad) into jecxz nop mov mov jge mov lret and ljmp (bad) jns loopne jl loopne jnp push xor daa int popf cmp fwait mov mov sti push dec and push pop icebp adc fs or xchg les xchg add loope ret sbb out out jb xlat xor mov jge cwtl or dec sarl xchg je pusha mov enter hlt into insb pop jl popa pop adc lret leave mov mov jmp jae rorb jl das pushf sti movsb xor push jmp lods enter lods enter lods enter lods enter lods enter lods fcoms xor mov repz lock mov mov cmp inc adc push out loop push push imul data16 imul pop stc sbb mov out lahf push jmp jbe jns xor mov push xor mov mov lock sbb mov (bad) push iret push test dec lahf stos jno cmp pop aam and sbb in enter push in dec mov shll sub shl cs sub mov fmull mov js cmp cmp push sbb in out sbb pop (bad) je pop jb movsb lret xchg int3 xchg or xchg enter dec inc rcll dec dec shr jnp push out push testl dec inc js xchg mov out mov xor lods enter lods enter lods enter lods enter lods enter sub xchg aad lea or or dec sbb mov fs add test xchg mov sub mov sahf mov fsubrl xor add fwait and and sub push mov (bad) sub xor fidivrl lods fcmove mov cli pop xchg scas ret pop cltd jge movsl lahf test movsb or xor movl and movsb shrl adc (bad) cltd pushf fsubrl dec ret mov mov fisub dec push mov push aad xchg fwait pop xor jno mov or (bad) pop push aad cmp jae xlat fildl scas dec inc ss jnp jne add pop mov mov xor icebp in test xor xor and cmpsl and xor inc jns dec cmp mov andl lds lods enter lods enter lods enter lods enter lods enter lods dec cld push xchg repz xchg lahf xor push mov add mov xchg xchg push xor xchg push clc pop imul adc pop add push stc (bad) lret add xchg (bad) cltd enter sub arpl (bad) xlat mov test dec lcall rcl stos mov jae push mov (bad) jge or adc test test bnd stos cld lea out subl (bad) je repnz subl js dec dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub jg push scas mov (bad) cmp movsb inc xlat and in imul mov bound mov lock and lret mov cmp jbe or ret movsl push popa int3 inc enter lods enter lods enter lods enter lods enter lods enter bound rol movsl push popa int3 inc bound cwtl loope push xorb xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc fstl push inc mov xchg outsl pop xchg jmp add jns and pop pusha push jo add mov push xchg cmp dec xchg subb ljmp pop aam lods cs mov shrb ficom lret xchg repnz subl js dec dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub jg push scas mov (bad) cmp movsb inc xlat and in imul mov bound mov lock and lret mov cmp jbe or ret movsl push popa int3 enter lods enter lods enter lods enter lods enter lods enter mov ret movsl push popa int3 inc bound cwtl loope push xorb xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc fstl push inc mov xchg outsl pop xchg jmp add jns and pop pusha push jo add mov gs jne lret push cmp lret pop mov hlt pop rorl les lea lods jae jecxz jle popf push repz or adc jecxz jnp pop dec popa cmc data16 stos xor cmpsl adc mov sbb dec (bad) jo or adc je leave ja andb out jecxz jae shll sub jmp ficomp divl and xlat test cmp dec test cwtl push jecxz out cmp enter mov (bad) nop pushf dec enter lods enter lods enter lods enter lods enter lods rorl mov ret movsl push popa int3 inc bound cwtl loope push xorb xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc mov cmp cmpsb xchg out dec int mov mov sub inc sub jo add mov push xchg cmp dec xchg subb ljmp pop aam lods cs mov shrb ficom lret xchg repnz subl js dec dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub jg push scas mov (bad) cmp movsb inc xlat and in imul mov bound mov lock and lret mov cmp jbe or ret movsl push enter lods enter lods enter lods enter lods enter lods enter bound rol movsl push popa int3 inc bound cwtl loope push xorb xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc fstl push inc mov xchg outsl pop xchg jmp xor dec mov mov mov cmp xchg aad fwait sub dec fbstp jmp jne add or push imull sbb jl outsb ret (bad) or push scas mov xchg cmc push or push push dec clc jle jmp cmp loop repnz test fldl adc (bad) arpl lcall xor xchg inc mov adc mov push mov sahf and fldenv ret xor popf xlat sbb test cmp leave sbb bound lods enter lods enter lods enter lods enter lods enter lods enter add mov enter test icebp (bad) aaa repz sbb push icebp or pusha jb mov mov insb jnp add cld xor ret leave jae call out cld ja push jno xor fistp mov ds data16 dec in lods out cs inc sar xchg and add imul inc sub cltd pop (bad) lods arpl dec gs sub pop int3 mov test fcmovb mov pop notb push adc and mov inc jl in xchg jmp (bad) jmp sahf mov lods in dec aad fisttpl lret cmp rclb fiadd nop cwtl je shlb movsl and andl into sarb test stos das cmpsl push test orl loopne iret pop adc mov lods enter enter lods enter lods enter lods enter lods enter (bad) popa lods sub (bad) xchg nop adc stc (bad) and in mov sbb (bad) sbb arpl sarb jg pop (bad) sub (bad) cmp je ljmp mov and fs and mov (bad) push cmp push xor dec (bad) inc jmp cmpsl icebp push pop push cmp insl dec (bad) sahf and pop enter dec sub inc dec loop inc add adc pop add ret or out (bad) (bad) cmp movsl adc popf outsl xlat sbbl adc or dec scas xor in sub movsl adc lahf inc fnstsw and xor mov xchg push in nop fwait jno enter lods xchg push pop mov in loopne in xor lret sbb fs cmpsl in mov lret movsl icebp enter lods enter lods enter lods enter lods enter lods movsl xchg cwtl add out xchg leave (bad) popa mov mul sub hlt aam dec or push loope das cmpsb arpl pop mov movsl add les aad and xorl mov mov scas jmp aad cmpsb mov mov sahf push das lret outsb out aas repz icebp ds jbe sbb and shlb sbb mov cmp std dec and push ds loope or cmpsl ss lods pop add iret sub fmuls scas ss movsb cmpsb add or fs pop cmp mov sbb mov xor loop scas rcll adc cmpsl xchg sub jl inc adc jg xor int3 jg hlt je push in xchg add sub xor pop mov lret test ljmp hlt jns push sahf mov orl ljmp rcrl in loope lods enter lods enter lods enter lods enter lods enter ds movsl lea sub lcall stc (bad) and repz inc sbb test jge insb mov mov imul (bad) inc (bad) xchg xor test ljmp xor insl idivb pop cmpsl fildl in sub add dec mov mov leave out cmp and xchg ficompl aas int mov pop ss inc or lahf add mov mov aam ret sub dec mov iret test loopne fnstcw push out jae repz or pop es sub ljmp xchg stc and mov ret fnstcw adc or ja fwait jbe pop mov mov lret and mov push aaa mov jmp and (bad) mov lahf mov imul dec push scas or enter lods enter lods enter lods enter lods enter lods enter hlt xchg lcall daa mov test add dec xor mov out aaa scas gs imul mov iret roll std inc mov or jg call rorb jno push xor push sbb idivb loopne xchg dec jmp sub inc xchg ss mov pop enter push and pop aas xchg jmp add addl mov xor aad lods adcl pop scas mov xchg out push add adc es xor jmp add mov (bad) out in mov add mov inc fsts sbb push ret leave jnp hlt jne push out mov dec (bad) and sbb fmulp ror add jle ds ret lods movl test push or dec lods enter lods enter lods enter lods enter lods enter lods js stos movsl cltd orl sub dec out mov adc (bad) mov dec pop mov fistpll cmp (bad) push fmulp xchg gs imul adc loop adc bound lds fidiv or stc lea cli xor jbe sbb dec mov movsl cli inc xor xor gs aad xchg dec aas add notl ficoml (bad) loop insl mov mov inc sbb int3 cs sbb lods shl loop fbstp sbb pop or xor sbb adc gs and sahf mov cmpsl in pop ret jo push jle pop pop cmp lds shll mov shrl and test andps loope icebp jle push aad mov jl xadd nop xor stos xchg cmpsl jecxz movsl pop or lods enter lods enter lods enter lods enter lods enter ds imul int3 or std mov movsl pushf nop adc in test loope,pt out adc push out sub js imul movl xchg pop (bad) lcall dec loop jae push jbe and mov lock ss test lods insl mov sbb cmp xor (bad) xor mov xchg cmp sbb dec and repnz jbe adc add sub icebp cltd enter aad cmp xacquire icebp add xor cmp (bad) (bad) stos ficompl repnz xchg dec and cmpl cmp nop adc mov mov jp inc xlat and in imul call and pop ret (bad) xchg outsb mov adcb iret cmp dec push scas adc enter lods enter lods enter lods enter lods enter lods enter lods adc jns lods lret mov adc call lahf or hlt mov and fcomip sub mov cmpsb inc outsb imul (bad) insb stos test or out imul add outsb mov inc negb mov mov mov std or clc mov insl mov je repnz inc sbb and xchg popa rclb insb fbstp sti push sub push dec (bad) repnz push (bad) cwtl add mov pop fild sub sub xchg lcall cmp xchg call push daa ds adc xchg and ret ljmp push in mov adc movhps std aam int jbe cmp aam in jmp das pop aaa xchg xlat rcr lods in loopne lock (bad) scas jmp mov out popa movsl scas out and enter lods enter lods enter lods enter lods enter lods icebp adc push cwtl adc add sub subl and and cmc test xor aam sub mov mov lods ret mov jp pushf and testb and jae out imul adc jg lods das cltd jno and frstor and das stc push lea mov pop sub inc lret cltd mov pop insb fildll xchg jbe int3 pop sbb out dec or push stos pop popf inc fmull xor and sbb mov sbbb pushl je xchg outsb mov add or sub push sbb (bad) adc (bad) repz mov adc inc roll inc aas mov into inc int3 xchg arpl push aam movsl dec mov das push push mov (bad) mov cli cmp ja pop sahf mov outsb scas ret addl decl pop or lods enter lods enter lods enter lods enter ds enter mov leave pushl sbb mov add cwtl mov out sbb mov jnp insl mov (bad) das into fiaddl imul xor pop mov cli out rorb push lcall cs jbe sbb push out shrl push mov leave cltd test into pusha stos testl scas dec add and sub sub and ds cmpsb cmp dec scas mov negl sbb orps or sbb mov addl sahf sarl cmp in sub jg push scas mov (bad) cmp movsb inc xlat and in imul mov bound mov lock and lret mov cmp enter lods enter lods enter lods enter lods enter lods enter mov ret movsl push popa int3 inc bound rol movsl push popa int3 inc bound cwtl loope push xorb xchg js mov arpl out mov (bad) test inc push mov xchg sub sbb lcall (bad) insb adc lret (bad) pop jb jae stos movb into bound insl sub jo dec mov or jae add test sub out jno fldcw mov pop or iret cmp outsb mov subl mov repnz sub sbb test add (bad) mov xchg mov pop mov scas and push in iret jg popf je cmp movsb inc xlat insb lods xchg aaa add stos mov test sahf sbb cwtl (bad) bnd push xchg mov je test and mov jle lods enter lods enter lods enter lods enter lods enter ds or sbb sahf test int3 inc bound test in adc xchg and cld xor popa bound cmc idivl arpl popl fcompl sti add jno hlt add in jg arpl (bad) cmp cmp lcall jns and lds add fstps loope cmp lods ss xchg rorb cltd test cli mov xchg xor and add or pop div out cmp iret mov xchg repz sub or or xchg or mov cmpsb mov adc adc xor mov xchg adc sub pushf inc xlat and in push jle lret fcmovnb mov sti pop aam mov je pop xchg fcomi bound cli and lods enter lods enter lods enter lods enter lods enter movsb out adc bound push mov mov add and in fistl ret inc push mov les sub js mov or leave xchg bound cmp out sbbl jmp out scas stos xor loope fild aas in push out cmp ja or mov xor popa data16 (bad) nop das xor dec shrl loopne adc pop sub rcrb pushf (bad) sbb pop test jp (bad) notl movsb mov jmp in rorb add bound insl xor movsb xor in cli mov stos mov popa (bad) push pop xchg pop pop outsl fistp xchg push push xchg jne call mov adc jmp jmp std and xlat test cmp push lahf test or jmp loop enter lods enter lods enter lods enter lods enter lods enter lods loop add jp scas int3 pushf nop adc out mov mov adc xchg jmp cmp add jo sbb mov cmc sarl add mov test jp xchg jae repz loop cmp jae jnp and (bad) je add lods leave jg push enter mov cmpsb mulb and fstpt mov hlt inc pop sub jno cld dec imul inc push ljmp xor imul test jge test mov pop pop cmp push gs xchg pusha outsl test fs scas popa test jl jecxz pop or lcall dec loope inc data16 adc xchg gs (bad) stc mov xor sub fcmovnb mov mov lret aam lock xchg xchg push stos lds lods enter lods enter lods enter lods enter lods enter sbb into adc dec mov stc scas popf adc sub cmp xchg xchg cmc mov adc testl inc cmpsb and mov push nop cmp hlt mov mov mov das pushf jge mov shrb orb popa xchg cmp inc sarb or mov add sarb sub gs fcomps push fisttpll loope sub dec adc aam and mov sub add cmp fildl mov pop (bad) mov lahf (bad) xor pop es push and mov mov jmp xchg lret mov pop dec pusha xchg lea jmp pop aad adc rolb (bad) mov pop rolb inc mov xor inc mov neg mov sti push repz mov sahf mov mov mov enter lods enter lods enter lods enter lods enter lods mov popf and aas fadds xchg movsl mov adc mov adc cmc test out xlat jecxz adc push enter jg arpl in add movl xchg cmp mov jmp push fbld ds dec mov mov xor test cmp jo and mov add xchg popa push loope movsl add sbb jno cli gs imul popf (bad) pop mov or ret adc adc cmp shr push pop jo (bad) aaa (bad) cmpsb pop mov jnp,pt or and xor (bad) xor push call ljmp and pop rcrb les movsl and mov fucomi mov or in xchg fadds test flds popf enter lods enter lods enter lods enter lods enter lods enter ds or push addl fidivrl adc cli andb ret lock insl sub mov aas popf fdivrl pop js add mov adc loope jae pop test and aas jl leave (bad) out xor addr16 or dec call push xor pop mov iret cld stos daa cmp dec (bad) into jle (bad) push sub mov pop mov push inc bswap and xor cmp push out lret shrl in push or push cmp mov fdivrl cmp jno cmpsl or mov stos addl je in adc mov jmp in xchg js xchg aaa push jno jmp jmp jp add stc xchg fadds test mov enter lods enter lods enter lods enter lods enter lods enter mov push sbb pop xchg lahf out test adc outsl lds and enter in lahf repz add data16 push xor xchg fbstp pop dec (bad) loopne pushf test xchg sahf sbb mov scas repnz fcoms in mov xchg or fidivr sbb mov insb fwait or mov pop adc lea pop and jno (bad) push fs push cmp subb mov hlt mov mov inc adc shlb pmovmskb icebp mov ljmp shrl fistpl adc sbb js or clc adc or or mov imul jbe jl inc and adc xor xorb icebp popf fs mov mov push push mov lret notb imul popf inc rcll fsubrs (bad) mov lods enter lods enter lods enter lods enter lods enter or cmpsb loopne pushf push sbb out push xchg stos leave lcall fidivrl adc std mov mov sbb xchg bound mov (bad) inc js sbb sbbl dec mov push mov ja bound test xlat outsl loopne cs dec in cmp inc hlt popl add nop jb iret shrb pusha xchg in xchg loop sub (bad) cltd pop (bad) stos dec xchg xor xor dec in or mov xchg outsb cli (bad) ficomp pop mov push sub inc and sub in inc sub add loop sahf popf sbb mov jo add push loop arpl aam fwait dec std cmc mov jg xor and test pop pop sbb inc aad ljmp xchg test enter lods enter lods enter lods enter lods enter lods enter mov setnp popl lret imul and in mov int3 and aas in xchg aas jl leave jecxz sub stos pop jge jo xchg test int subb imul jae jae out push out cli ja dec xchg lcall fidivr dec or xchg jg push mov iret leave (bad) pop cmp adc xchg and sbb enter sbb (bad) push cmp loope or push mov cmpsb inc ret dec inc add pop lahf sub dec (bad) (bad) mov cmp jnp in das xor addr16 cmc add insb xchg and mov jno rorl ret push push push lods lahf sub jp push or or jl xchg gs dec in pushf and mov aaa jne xlat rcl mov clc ja in xchg mov mov pop xchg enter lods enter lods enter lods enter lods enter lods enter mov push sbb out push xchg xchg jecxz mov cmp mov (bad) xchg sahf jp lret mov aaa repz (bad) pop jne pop out and insl in clc adc (bad) notl orl sti pop mov ss jne call in jae or jnp sub loop cmp xor mov stos (bad) push cmp and push push iret sahf xchg push push cmp jmp and cmc pop jne or inc adc cmp pop icebp int3 in lea mov mov sub add push cmp sub lret cmp adc fdiv xor mov test fistl lret sbb pop rcl jecxz push mov jno int mov sbb int3 ror rcll loopne (bad) ss ffree aad aam mov (bad) je lods enter lods enter lods enter lods enter lods enter mov mov jnp or add mov or inc xor sti movsb ret lock mov cmpb neg in jne pop out add mov test int subb xor xchg cmp mov out push out cli ja inc test xchg and loop stc or or fs push jecxz jecxz pop pusha or and out mov insb (bad) jno loope or inc cmp jmp hlt stos pop les subl sbb mov ljmp mov mov das adc sbb add cmp add mov mov insb loopne (bad) pusha push leave adc call sti icebp cltd fs add push mov test lock ljmp rorl ror lods enter lods enter lods enter lods enter lods enter lods enter mov cmp loopne stc gs leave lcall (bad) mov add cld mov and mov inc push cmpsb xor bound push jo (bad) (bad) and jbe cmp sti sub mov xchg test pop mov mov push lds das mov fdivl or xchg xor pop stos push in inc out (bad) xchg (bad) push adc pop mov loope pushf cmp add jbe rcll inc sub mov cwtl or add stc dec cld add cmpsb les mov insb cmpsb cmpsl push repnz mov ss or mov es cmp sbb push in sub (bad) adc addl fmull (bad) cmp icebp mov lret xor and nop xor pop mov loop bnd xor sti mov jge bound enter lods enter lods enter lods enter lods enter mov mov test push mov loopne loop fwait stos lret lcall loopne cmpsb fst xchg adc or andb and dec pop mov (bad) insl jl push sti movl cmpl dec clc in dec in mov xor mull push xor fwait pop ljmp push jecxz out inc pop inc daa adc popf push push pop cwtl add (bad) push cmp loope or or leave and shrl shrl shrl (bad) fnstsw add sbbb repnz sbb xor sub ljmp mov and lock mov ds dec cmpsl (bad) pop (bad) and and (bad) jne mov lcall js mov sbb clc loope fsubs dec fbstp aam mov lods enter lods enter lods enter lods enter lods enter lods enter scas rclb cltd inc mov push pop out rolb mov mov cli mov adc notl out sbb push (bad) or lods jne push push xchg out sub push cmpsb dec out daa pushf test xchg sahf sbb mov mov jl jmp fdivrs test fldl ss add mov xchg fidiv aad out push rdtsc add gs fsubs addr16 push cmc gs paddw dec add push mov cli inc aam gs mov mov fstpl (bad) xor mov or sbb adc pop xor stc push ljmp push fidivl or std enter jne pop jmp xchg outsl dec xlat sbb jnp mov enter in add jle add int3 mov jbe dec enter lods enter lods enter lods enter lods enter lods enter test imul in mov enter mov cli into scas push xchg jo cmp mov cmp in std mov clc dec add mov outsb jbe mov les int3 ljmp outsb pop mov cli in popa cltd fs xchg xor in in add mov sbb push call (bad) mov jne sub adc stc add dec fldt ret (bad) ss hlt dec sub adc cs bswap movsl lods mov out (bad) mov adc popf outsb add pop add inc cmp mov sbb adc popl or mov scas in jns jae push pop lret sbb sbb shlb xor js movsb sbb push xchg xchg xlat (bad) mull ret lret call lods enter lods enter lods enter lods enter lods enter lods xchg (bad) jae fadds sub jbe js ret lock mov or ljmp sub mov lods imul dec stc roll in sub sub test lret shrl xor jp xor (bad) sbb lds xchg or and cmc cltd mov adc add lods dec daa sti test or xchg hlt cmp stc inc and jmp repnz insb dec in cmp fild iret push mov lods (bad) dec neg ret in push lret jecxz xor add push push bts cs adc (bad) or out sti lea or mov fistl lret sbb iret shll js pop call xchg inc fwait inc mov arpl pop mov movsb xor outsl notb enter enter lods enter lods enter lods enter lods enter lods enter jbe xchg out pop stos ret mov push daa mov fs rclb adc cmpsb mov popf cwtl bswap sbb sub fisubrl icebp pop add mov aad test stos sti mov out sbb mov ljmp test pusha add and fnsave sbb inc stos aas mov mov mov ss adc cld stos pop sbb push jp enter repz xchg fwait adc mov cwtl and push jb jbe sub mov xchg adc ljmp sub push dec add mov cmp mov sahf xchg cld and or dec pop movsb cwtl pop lcall and rcr fcoms loopne inc jnp adc sbb mov in or je cmp int3 call enter lods enter lods enter lods enter lods enter ja ds test xor into orl fistp nop je test mov nop int test movl or sti mov aaa ret dec adc xchg pop dec dec inc xchg (bad) mov loop xchg fs mov scas xchg sub xchg xor test mov inc (bad) fmull xchg and imul push std sub add in lret add in mov jns cs fbld (bad) push xor sub jmp fldenv pop aam lods cs mov shrb fisub dec cmpsb mov (bad) in push insl pop or cmp scas jle notb adc (bad) and (bad) mov std mov mov inc frstor push and or jne xchg push push leave pop pop shlb cmpsl and xchg das add mov (bad) mov (bad) xor lods enter lods enter lods enter lods enter lods enter out sbb dec pushf mov (bad) jmp mov mov pop scas add jbe gs mov xchg cwtl adc in ret (bad) mov adc call sar add mov push insb movsb fistpll jns mov aad and subb xchg xor jmp decb test out dec xchg aas cs jo xor out popf push out pop (bad) jae adc inc mov stos cli pop sub dec (bad) stc dec pop push xchg cmp dec xchg subb ljmp pop aam lods cs mov test rcr push imul aas add push and mov add push mov and rorl pop pop mov inc (bad) adc adc adc rcrl stc popf outsl inc lret push mov mov rcr mov ljmp enter lods enter lods enter lods enter lods enter lods enter repz dec ret cmc (bad) jg stos int3 adc cmp and icebp fistp cs out test adc in cld mov aaa repnz inc adc adc jne jb mov mov fcomp cwtl jnp into das out or sahf aaa lahf movsb sub mov enter imul sub fidiv xor lcall pop call (bad) test push add dec fdivr aam ja pop into jne mov cmp mov add jno sub mov xchg mov ljmp cmpsl je xchg jnp out add add or or xchg xor and sarl push push pop test rolb cmp jne test mov icebp stc xchg insl dec movsb sbb pop push mov int3 fisubrl ret enter lods enter lods enter lods enter lods enter lods enter outsl (bad) dec xchg xchg bound fwait mov mov mov scas loope andl or into rcll es std test xor lahf (bad) outsb and sub dec outsb jo cmpsl fisubl push loope mov xor test int inc decb cmpsl push push (bad) adc xchg cs jmp sbb insl and xor ss sti enter push outsl enter pop fist mov cltd pop (bad) stos adc es adc or sbb movsl (bad) jg std aam popa pop scas mov xchg mov inc add push and ds movsl fiadd mov aaa ljmp test push sbb jg cmp adcb jecxz mov mov sbb lahf call and dec mov enter lods enter lods enter lods enter lods enter lods (bad) lret mov ja pop sbb push cltd cli cmpsb sbb lret int3 add add (bad) or int3 mov pop stos xor rcrb (bad) icebp lret int3 sub mov mov jle xchg or lahf xchg adc xor clts pop lock stos sti cwtl outsl arpl movsl lcall push in pusha fldcw cld push movsl fs xor mov ss insl lcall out cmp push mov push aas xchg add fidiv cmp mov flds les inc lods inc gs popa mov mov lods test lret xchg nop sbb jge push inc lret mov dec dec movsl push (bad) mov sahf mov push cmp adc inc jb scas ret adc mov inc mov movsb in imul mov out icebp enter lods enter lods enter lods enter lods enter lods enter lods enter mov dec into push mov sub mov cmp add js lahf in sahf add mov or out test and adcl sub popf fsubl jge mov lcall mov fucom data16 scas sub es dec repz loop adc jmp or lcall xchg popa push popf fstps enter dec and push ds pop dec iret (bad) pop into stos push mov test or sbb sub or cmp rol add adc sarb (bad) fnstsw sub sub cmp cld and sbb and cwtl pushl shrl pop pop sbb lea adc adc iret aam mov push fisubl (bad) sub pop push mov (bad) cmp lods enter lods enter lods enter lods enter lods enter sahf adc notb mov jecxz arpl je xchg and movsl mov and lret movswl cmp or add sub mov fistl rcl aaa mov pop stos es out data16 aaa call (bad) and mov mov pop sti xor pop stos adc dec jmp leave leave jae adc sbb mov push fist out inc cli pop sub (bad) dec pop (bad) mov rep or cmp iret cmp bswap lods repnz pushf and mov test or js push and (bad) or loop ljmp mov adc sbb xor into adc movsb arpl jb loope mov sbb out lds lods enter lods enter lods enter lods enter lods enter outsl pushl rclb cltd scas (bad) je ret orl pop or cmp pop clc arpl add sub dec cmpsl mov aad mov dec std cwtl mov adc pop jne xor outsb outsb push xchg fsubl insl jb imul cmp outsl mov je mov inc sbb xor sbb loop sbb ds add mov xor gs leave mov dec leave add cld inc sub andb lahf and stos pop les add les stc add mov mov loop in pushf aas pop mov xor (bad) inc mov push sbb xchg mov sbb in int and xchg lret push adc call aad sbb fcompl hlt cli inc inc loop xchg mov xlat fisubl lods enter lods enter lods enter lods enter lods enter lods enter ljmp idivl xorl dec movsb lret sarb adc fsubs cmpsb loope (bad) or orl ds stc xchg cmp repz ret push add sbb lock push xchg rorl pop test cmpsb ret loop in test mov test or out push add jmp inc mov les cmp loop pop fisttpl mov pop sti pusha arpl cwtl push hlt stos pop in in into adc xor sub add lods enter test ljmp repnz push pop jge push sub pop pop lret arpl adc lock fadds ret (bad) jo or aam jb loope inc call fcos cwtl outsb add adc aaa fs xlat lds enter lods enter lods enter lods enter lods enter push fadds icebp stc xchg fadds xchg mov inc mov iret adc cld rorb fwait insl sub rolb mov xchg xchg cmc fbstp sub neg in jne push out and aad movsl or loope or add out test pop mov movsb lcall stos mov xor cmp pop lea dec push ret and les mov sub (bad) cmp xchg sub pop xor mov aad or add imul ja fsubl pop xlat sub (bad) cs decl in punpckhdq jnp loopne or jge cmp mov pop dec xchg aaa sahf nop mov fprem1 sub push dec cmpsl int3 outsb frstor jns rcrb aam aas lcall (bad) xor inc stos mov int mov lods enter lods enter lods enter lods enter lods enter lock jl cmp aad mov lods ret imul jecxz mov loopne loop mov or test mov jmp add sbb lods inc outsb imul mov fcomp cwtl jnp out cmp std xor sahf xor jns (bad) dec loopne jle je mov push push loop out add xchg mov repz jb sbb cmpsb repz sub and fistpl dec lcall inc sub (bad) adc lods or inc inc xor cmp jmp push int lods daa push movsb mov cli popf je hlt sbb push jge add ljmp cmpsb and sub cmpsb adc pop cmp mov push or adc and iret jle test dec mov scas push xadd movsb push lods mov pop pop mov lods enter lods enter lods enter lods enter lods enter ds lock je push loopne xchg mov mov bound cwtl in mov int3 add mov or xlat lcall out xchg pop adc loope inc adc stos jl inc jle rclb dec inc mov call and out push mul jle inc mov lahf cmp mov loop das lcall imul jecxz repnz adc fmuls jae jbe mov add lock or or sbb add int int3 outsb lock lret xchg dec loop aad sbb ficom add inc cmp lods adc mov stos mov push in aas ljmp test xor cmp cmp aad (bad) lcall push push cltd mov inc shr xlat enter lods enter lods enter lods enter lods enter lods enter test idivb push loop mov sbb push mov cmp jbe arpl popa out push dec aad mov int3 or outsl iret int3 mov and fdivrp dec push cmpsb sbb push sub jae enter out (bad) ds inc idivb mov cs or dec xchg addr16 mov stc sbb cmp add mov or lea sti test dec je pop (bad) std dec sub ss lock pop insl ljmp pop ljmp add pop cld nop int3 xchg dec hlt mov popa cmp cmpb mov push adc inc xor jno aam and nop std ds in xor outsl insb (bad) lea dec incl or mov stc decl orb sub inc repnz enter lods enter lods enter lods enter lods enter lods enter xlat ret stos movsb das in repnz cmc xlat mov xchg xchg outsb mov lods clc adc or add rcr add mov push stos xor sbb testb dec sbb xor jnp je mov mov data16 xor pushf das xchg fisttpl leave dec call mov mov roll add mov ss fwait jns inc repnz add inc dec iret mov pop shrl std inc push pop and sahf pushf adc mov inc mov xor sub sbb cmp enter gs cmc str pop cmp lcall (bad) adc xor dec lods cwtl pop lcall sbb (bad) cwtl adc pusha pop rcrl dec cmpsb xchg divps lods enter lods enter lods enter lods enter lods enter lods enter into rorl jb push ret clc imul movsb mov orl mov mov lret or adc xchg mov mov enter neg in jne pop loopne pop mov aad mov jnp out cmp sti xor cs fimull out push fsubrp popa les scas aas fnsave xor aas lock std cmp insl popf pop (bad) or insb pop add cmp mov jge jno xchg push iret inc cmp repnz xor or pcmpgtw sub sbb mov mov mov pop ljmp repnz pop push xor movsl cmp or daa scas cmp loop ljmp orl ret lret jg cmp into fs (bad) cld mov imul testl jp lods enter lods enter lods enter lods enter lods enter jmp lock fbstp ret out imul mov popf push test mov subb xor mov push in adc sub lock les ss test mov sarb sub decl addr16 xchg xchg or ficoml cli fistl enter mov mov rcr xchg pop mov negb psllq cmp in push out pop les sub mov cmp xor imul cmp lcall bound shll jmp aam jecxz push addr16 cmp sbb mov cmpsb push cld ret mov and mov cmp sbb ss and cltd das and xchg sbb sub mov jp jno mov push jle das cmp rolb les mov cmp lods enter lods enter lods enter lods enter lods enter lods enter int3 ror xor dec lods ja fnstenv xchg jmp mov cmp mov jecxz sahf (bad) adc rorb lods sub outsl fyl2xp1 xchg cmp jne js sub jl push stos test inc inc fisttpll out xor inc cmp out sti popa shlb pop xchg pop mov in sub fwait push pushf pop fsts pop rolb sarb add mov pop in popf mov sub loopne push and inc sub orl sub xor loop into mov fstl mov loope pop test add push xor add in ret in mov aaa push pop mov pop (bad) jns fistp sbb lret cld pop lret xchg push loopne mov data16 mov stos xchg sub lods enter lods enter lods enter lods enter lods enter lahf fcmovbe aam loope fstps xor int jmp mov mov mov adc adc and fs rorb cmp mov add or out mov cmp fsubp pop push lahf push out and aas xchg mov rcr subl (bad) loopne sbbl jmp clc js mov mov (bad) sbb js add loop popa stc sub imul scas loope cmp xor insl inc iret xchg mov cmp arpl insb mov push xor push add fsubrl cwtl cltd adc lods xor ret inc cmp enter aam lea mov daa out imul lods and cld adc add cmp or dec pop sahf mov push adc or sbb lcall outsb pop lret imul lods enter lods enter lods enter lods enter lods and mov call or (bad) sbb arpl mov adc data16 out movsb stos roll or in movsb mov mov ljmp inc pop mov xchg pop xor cmc (bad) mov (bad) fstpl (bad) lea add mov jbe arpl test xchg sub flds les xor and mov outsl cmp (bad) ss int3 lret adc or popa popa cltd add mov sbb lods or lds std sbb sbb movsb enter fcmovnbe ficom loope jns orl or cmp in addr16 xchg stos lret int sahf (bad) xor cmp out and (bad) mul adc scas push (bad) xlat sar enter (bad) jnp enter lods enter lods enter lods enter lods enter ds or cwtl (bad) into pop add sbb xor mov pop cwtl fwait mov mov jge mov cld jbe jnp ret jmp mov xchg and movsl andl sbb mov or int sub scas jne xchg cmp aad pop sub mov in (bad) pop jne add sbbb jecxz xchg addb aaa fdiv sbb outsb lods fcompl popf test sahf add movsb cmp xor or std cld push sbb add add mov roll xchg pop cltd arpl lahf xchg sub lock ljmp add out inc jmp lret (bad) repnz push mov mov push daa jne push push in push inc adc leave mov cmp cmp gs stos xor push mov addr16 mov xlat (bad) enter lods enter lods enter lods enter lods enter lods enter lods enter dec ljmp jbe pop sahf lds (bad) xchg cli out mov loop jne scas and int3 dec or cmp push pop mov and dec mov mov (bad) mov mov adc (bad) xor or push pop aad (bad) insb stos test or out sub out xchg sbb dec mov je fstpt incb xchg or mov xchg outsl jns (bad) push std sub add jge ja mov inc rcll dec into pusha mov aas inc fwait lea fs mov hlt or lods inc lahf dec and sbbl nop (bad) jae ljmp mov or pop pop scas xor inc out int mov mov sbb loope fbld sub pop cmp and cmp clc lahf insl inc xchg je enter lods enter lods enter lods enter lods enter lods enter test sarb bound mov lock and lret mov cmp jbe or ret movsl push popa int3 inc bound rol movsl push popa int3 inc bound cwtl loope push xorb xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc fstl push inc mov xchg outsl pop xchg jmp add jns and pop pusha push jo add mov push xchg cmp dec xchg subb ljmp pop aam lods cs mov shrb ficom lret xchg repnz subl js dec dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub jg push scas mov (bad) cmp movsb inc enter lods enter lods enter lods enter lods enter lods enter and in imul mov bound mov lock and lret mov cmp jbe or ret movsl push popa int3 inc bound rol movsl push popa int3 inc bound cwtl loope push xorb xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc fstl push popa idivl les (bad) sti push fisubrl mov enter loopne xor and lods cld icebp dec pop push xchg cmp test sub jmp fwait leave arpl pop fsubrl mov shrb adc lret xchg repnz subl jl dec dec fwait addr16 (bad) push in arpl sahf rcrl cmp in sub jg push lods mov (bad) cmp mov lods enter lods enter lods enter lods enter lods enter xlat sbb fstpt js adc mov out int add lahf ret fiadd in test (bad) adc enter gs inc xchg (bad) mov out xlat pop outsl pop orl xchg cmp les lahf jnp fadds or fnstenv fnstcw or pop cwtl scas outsb ret ret jle fidivl sub mov mov (bad) fcompl adc push inc mov xchg imul cwtl pop lea call mov pusha push je add dec pop push xchg cmp xchg subb ljmp pop shrb mov shrb fist lret (bad) jo repnz subl jl dec dec popf addr16 (bad) push in jecxz push mov pop lcall in sub mov mov cli cmp enter lods enter lods enter lods enter lods enter lods enter inc xlat and xor mov bound mov lock and iret mov cmp addr16 ret movsb (bad) cmc gs inc dec mov (bad) mov inc bound cltd loopne push xorb nop js fisttp push sbb mov insb scas test imul repz xchg cmpsl or xor push inc xchg sbb jmp (bad) enter xchg fsts jo add mov push (bad) mov mov cmp imul arpl pop aam lods scas gs mov shrb into push sbb (bad) hlt xchg repnz sub push js int sbb pop inc jbe jecxz push mov pop mov cmp insb sub pushl mov xchg (bad) mov enter lods enter lods enter lods enter lods enter lods enter aas and push and les aaa repnz test sahf push cmpsb mov ds (bad) xchg stos out mov fistpll push mov shl and inc loop mov ret movsl jg popa int3 inc bound sbb lret jb mov sub mov js pop sub push lahf aad (bad) insb mov in imul stc dec jae sbb lcall (bad) fcompl sbb push inc mov xchg outsl push sahf jmp add jno and pop pusha push js push daa mov pusha aas mov dec test sub jmp cltd shrl pop fsubl mov ret cmp xor (bad) je cli sbb mov fs push js dec dec fwait outsl jne (bad) pop in mov test sarl cmp out and jg push lods mov (bad) xor lods enter lods enter lods enter lods enter lods enter lods enter movsb dec fbld sarb bound mov popf sbb pminub mov aas jnp fs lret movsl push imul rol movsl push arpl dec pusha dec mov mov and aaa xchg jns pop or es aad imulb (bad) or outsb dec xor shr pop in (bad) jae cmp lcall inc fcompl xchg not bound sbb jmp add andl mov pusha ja loop daa cmp push xchg cmp test stos dec ljmp pop aam sub gs and outsb mov mov mov repnz xor dec dec lret mov push in jecxz push mov pop sahf sarl cmp int3 sub jg push scas mov jle or lods enter lods enter lods enter lods enter lods enter cli add (bad) ljmp test sbb pushf sbb ds sti mov and dec into sbb jbe or inc movsl (bad) shl int3 lds mov ret and inc loop or mov and xor or push pop fnsave (bad) or scas imul ficompl lcall (bad) fcompl fstl adc adc test add jno and pop pusha push jno inc daa mov pusha jge add nop cmp dec nop subb jmp fldenv pop aad scas cs mov shrb push cmp xchg je repnz subl js inc dec cltd data16 (bad) push in mov test sarl cmp in sub jg push scas mov (bad) xor enter lods enter lods enter lods enter lods enter lods nop sti or inc fbld (bad) mov mov mov sbb fstpl cmpsl ds mov and lret lea cmp jbe or ret lods mov bound nop shll add loope adc xchg xchg sub inc iret dec dec es aad (bad) insb jmp xlat sbb imul lcall adc fstl push inc mov (bad) jmp add cmp and pop pusha push pusha loop pop lods cld mov mov inc jmp sub stos xor aam lods push gs mov sarb sahf push sub pop out sub insl xor lret cltd addr16 jecxz inc testb sub sub push scas and adc mov (bad) cmp lods enter lods enter lods enter lods enter lods enter mov push xlat and in imul mov and test fstpl mov lock mov bound sbb lretw or ret movsl fcomip arpl gs adc popa int3 dec bound nop loope push mov xor (bad) pop aad (bad) insb test out imul rcrb adc std adc pop inc mov xchg outsl pop xchg jmp and jnp add pop push daa mov push xchg cmp dec xchg andb ljmp jle sub test shrb fidiv enter lock subl js dec dec mov push out jmp push mov jns (bad) je aas ds mov scas and jbe scas adcb xor enter lods enter lods enter lods enter lods enter lods enter nop cli add movsb inc aad in inc imul mov bound mov ds (bad) and jmp or cmp jbe or ret in cmc jno inc bound rol mov bound fsub dec push xorb test fisttpl push sbb repz push pop scas imul fimull adc fstl notb inc mov xchg jg xchg add jns and dec and repnz mov push shrb inc test sub sti jno fldenv pop aam in cs push mov shrb mov xchg je loop out jp fs push js pop dec cltd arpl xlat push std jecxz push mov dec lcall in sub outsl jb out mov scas hlt adc lods enter lods enter lods enter lods enter lods enter ds cmp cmp das mov xlat and loopne sub sarb and mov sub out and lret mov mov ja cmpsb scas ret icebp popa int3 inc bound rolb inc loopne inc stos xor xorb xchg js pop or mov insb stos test or out mov mov jb in (bad) jb sbb lcall inc fstpl xchg notl xor outsl pop xchg jmp outsl js mov mov pusha push jo add mov imul insl les sub jmp adcl lods cs mov shrb ficom lret adc sbb add pushw push push in dec out aam jecxz (bad) mov pop sbb jl mov mov fbld push scas sub lods enter lods enter lods enter lods enter lods enter ds jl mov js das insb (bad) (bad) and inc imul mov bound cmp popf sub lock and fdivr insb and mov clc shlb mov dec inc movsb incl int stos int3 mov adc dec inc bound (bad) xorl jmp push push pop push mov cmp test imul fsub sti repnz sbb push and ret pop pop fldl push inc xchg cwtl xchg outsl jb call add enter pusha push (bad) addr16 dec in ds lcall insl ljmp pop aam lods cs shll in cmp pop dec (bad) je je out in insb fs push js lret dec cltd fcomi dec (bad) lcall pop je jge lds adc jg shrl lods enter lods enter lods enter lods enter lods enter lods enter adc xchg movsb sbb and aaa mov add xchg sbb and sbb sbb push movsl int3 lret dec into into cmp scas or rol movsl push xchg dec inc bound rol movsl push popa and arpl sbb dec push add xor and pop pop jecxz xlat insb in sub or push repz inc addps mov fcoml rolb ret adc pop js xor add xchg jecxz jo xchg mov add inc daa mov xchg sbb lcall das das mov and lods jecxz (bad) test ljmp subl sarl sub cwtl addr16 (bad) push ja mov add add inc in sub cmp jb sub enter lods enter lods enter lods enter lods enter adc jl xchg cli push stos movsl inc mov (bad) in imul xor out sbb shlb cmpsl loopne fisubl and lret mov cmp shll scas mov ret xchg jns popa test arpl push ret ja int3 xor dec mov dec push push aaa xchg sub push xor (bad) ret sbbb mov insb stos inc jno pop adc mov inc call inc jae fcompl repz fcoml lds xchg fwait mov pop repz jns movsb xchg ret loop mov pop push pop mov nop subb ljmp (bad) aad lods cs pushf dec cld sbb mov (bad) push js adcl in (bad) fs xor adc ds roll sbb stos xor sbb sti xchg adc out inc (bad) popa fisttpll xlat jb,pt push mov lods enter lods enter lods enter lods enter lods push rcrl lcall (bad) arpl xchg rcr lods out bound (bad) xchg fistl xchg lds mov mov stos (bad) xchg mov mov leave ror test scas xor repnz ds adc je js fimul jb mov faddl sar add repz cmp mov clc loope fsubs mov and fdivrl cs mov jne sub imul stos xor adc adc pushf add imul add lock (bad) pushf ds lahf or jnp sub aas jmp cmpl xchg repz sbb lret or in aaa pop and vmulps dec xchg mov inc into push push clc jg popa scas enter lods enter lods enter lods enter lods enter lods enter jecxz,pt ficoml loop bound xor gs imul fcmovnb stos ret jle push cmpsb mov dec (bad) test popf dec scas scas (bad) cmp int xchg psubusb enter icebp nop mov or xlat lock in movsb cmp out ret xchg sub pop out ss aad (bad) das fxch xchg jge mov lea sbb dec cli mov xchg seta and pop lcall test jb pop rclb ret inc pop inc push and mov es ret and add pop sub jmp sbb mov rcrb ret pop loop pop out ljmp xchg sbb sub sub movsl ds cltd push je mov and loop (bad) mov ret mov lret fmull lods enter lods enter lods enter lods enter lods enter lods enter ror (bad) mov aam int3 cmc mov (bad) daa mov add sarb push (bad) (bad) in and aad repz ds (bad) bound sti cmp enter xchg ret movsl mov es cmpsb mov mov lret xchg cmp out (bad) (bad) sub aaa (bad) sbb je mov int jge pushf adc popl repnz orb out inc fdivrp jge fs mov cmp cmp test pushf push mov or test push or push or aas std pusha xchg rorl push and les (bad) add pop aam scas inc push xor and add shrb stos cmp cmpsl adc popf dec (bad) in cs inc push ret enter add xchg sbb jecxz repnz adc mov and enter lods enter lods enter lods enter lods enter lods enter lods enter inc lret xchg pop lret lcall xchg sub push mov xlat pop icebp dec lock (bad) (bad) mov mov orb cmp add sbb data16 mov jmp les pop cs popl adc sbb mov inc dec push mov mov pop arpl std pop cmpsb xchg add mov sti loope mov cmpsl fcompl mov xchg and (bad) js sub repz xchg pop into insl stos or inc repnz cmp xchg dec cld mov aas and jno repz sub in dec pop fadd adc pop mov sub sub outsb (bad) mov xchg or cmp add xchg jge icebp lsl sbb add adc xchg and jmp sti xchg add cmp in dec adc sbb lods enter lods enter lods enter lods enter lods enter cmp xlat mov cltd ja cmc xchg dec dec fldl xlat loopne mov or mov std daa std pop sahf in cmpsl ljmp scas (bad) dec mov lret test push mov fstpl (bad) outsl xchg mov int adc in test lock cwtl add cltd mov xor cmpsl inc out sub aad adc int dec jns add out sub loopne xor push (bad) jae push jo xor fldt movsb inc cmp test pushf lea or mov cmp nop push add pop enter jp int3 push cmp aad add or (bad) dec or mov mov xchg dec lret ficom cltd cmpsl push (bad) mov xchg enter jl and sahf and notl xor lret push mov cmc sbb dec addl lods enter lods enter lods enter lods enter lods enter ds es aam mulb cld lea int mov test mov loopne negl mov rcr cmc ja dec xchg mov out imul jecxz movsb pop xadd jbe gs popa ljmp (bad) nop xchg or jmp and sub mov icebp sbb fisttp push insl mov mov jp lcall sub sti popa jae dec pushf leave push out cli retw fsubrl jnp cmp xor add xchg movsb xor xor mov push (bad) shll push jo gs call or leave pusha xchg ret iret pop and sbbb cltd adc scas dec mov cs mov shrb ficom lret xchg repnz subl js dec dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub lods enter lods enter lods enter lods enter lods enter ds mov (bad) cmp movsb inc xlat and in imul mov bound mov lock and lret mov cmp jbe or ret movsl push popa int3 inc bound rol movsl push popa int3 inc bound cwtl loope push xorb xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc fstl push inc mov xchg outsl pop xchg jmp add jns and pop pusha push jo add mov push xchg cmp dec xchg subb ljmp pop aam lods cs mov shrb ficom lret xchg repnz subl js dec dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub lods enter lods enter lods enter lods enter lods enter jle jg push scas mov (bad) cmp movsb inc xlat and in imul mov bound mov lock and lret mov cmp jbe or ret movsl push popa int3 inc bound rol movsl push popa int3 inc bound cwtl loope push xorb xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc fstl mov (bad) hlt add dec pop addr16 lea fxam repnz sbb fs mov adc sub inc push pop imul sahf stos mov clc add push sub inc push pop push test rcr ljmp inc dec pop insb jns xchg lahf lods mov clc add push sub inc push pop push test rcr ljmp lods enter lods enter lods enter lods enter lods enter adc pop imul ret ljmp inc push pop imul ret call sub jne (bad) fwait test ret call sub jbe xchg popf stos mov rcr ljmp inc push pop push test rcr jmp sub jne mov (bad) cmc add sbb xor dec pop push test ret call daa xor dec pop push test ror call sub jbe nop pushf test jmp sub jne (bad) pushf test call sub je mov fucomi testb sbb ss push pop imul ret rcr ljmp inc push pop push adcl fucomp testl push enter lods enter lods enter lods enter lods enter ds imul lahf stos mov clc add inc push pop imul sahf stos mov clc add inc push pop imul lahf stos mov stc push adc sub inc push pop imul popf stos mov rcr jmp sub je lea (bad) repnz sbb gs mov fsub repnz sbb gs mov fsub repnz and data16 mov (bad) hlt add sbb xor dec pop data16 lea (bad) repz xor dec pop data16 mov fxam repnz sbb addr16 lea (bad) repz dec pop data16 lea fxam repnz sbb fs mov (bad) in decb pop and ds push fs mov lods enter lods enter lods enter lods enter lods enter lods mov jecxz cld or and cmp push bound mov aam out cli pop adc sub outsb jnp xchg mov loope cli pop adc sub insl jp xchg mov loope cli pop adc sub insl jp xchg mov loope sti pop adc sub insl jp xchg mov loopne cli pop adc sub insl jp xchg mov loope cli pop adc sub outsb jp xchg mov loope cli pop adc cmp popa insl jnp xchg mov loope cli pop adc sub insl jns mov loop add repz sub jb nop popf stos mov rcr ljmp inc push pop push test rcr ljmp jne (bad) pushf test (bad) rcr jmp add push sub inc push pop push test rcr jmp push sub lods enter lods enter lods enter lods enter lods enter lods enter pop insb js xchg lahf lods mov stc push adc sub inc push popa outsb jp xchg mov loope sti or push bound mov loopne cli push adc sub inc push pop imul sahf stos mov stc push adc sub insl jp xchg mov loopne cli push adc sub insl jp xchg mov loopne cli add pop and ds pop gs mov fsub repnz sbb fs mov xlat in std or and cmp jle cwtl movsb mov int3 (bad) repnz and fs mov (bad) jecxz cld or and cmp push popa outsb jnp xchg mov loopne stc push adc sub inc push popa insl jp xchg mov fucomip clc add inc push pop push adcl rcr jmp add inc push pop enter lods enter lods enter lods enter lods enter lods push adcl fsubrp clc add inc push pop imul sahf stos mov clc add inc push pop imul sahf stos mov rcr ljmp inc push pop imul sahf stos mov rcr jmp add push sub inc push pop imul sahf stos mov clc add push sub inc push pop insb jns xchg lahf lods add cld or and cmp push arpl mov (bad) loop cld or push popa outsb jnp xchg mov loope cli pop adc cs push bound mov (bad) jecxz cld or and cmp push bound mov aad out sti or push bound mov (bad) jecxz cld or and cmp jge xchg mov loop cld or push bound add lret icebp std or and ds pop fs mov lods enter lods enter lods enter lods enter lods enter lret lock or and cmp jge xchg mov loop sti or push pusha insl jns xchg lahf lods mov cli pop adc sub insl jp xchg mov loopne stc push adc sub insb jns xchg lahf stos mov testl push pop add xchg loopne cli pop adc sub insl jns xchg mov loopne cli push adc sub insl jns xchg lahf lods mov cli pop adc sub insl jp xchg mov loope cli pop adc sub insl jp xchg mov loope sti or cs push bound mov aad out sti or push popa insl jp xchg mov fucomip clc add cmp popa insl jp xchg mov loop cld or push bound mov enter lods enter lods enter lods enter lods enter lods enter aam out sti or cmp popa outsb jp xchg mov loopne stc push adc sub inc push pusha insl jp xchg mov loopne cli push adc sub inc push pop insb jns xchg mov fucomip stc push adc sub inc push pop insb js xchg lahf lods mov cli push adc and cmp bound mov (bad) loop cld or push bound mov aad out sti or push arpl mov aad out cld or push popa outsb jnp xchg mov loope cli pop adc sub insb jns xchg sahf stos mov stc push adc sub inc push pop imul sahf stos mov rcr ljmp inc dec pop imul ror add testb sbb cmp imul sahf stos mov rcr ljmp inc dec pop push test ror out enter lods enter lods enter lods enter lods enter lods add dec pop gs mov (bad) repnz xor pop data16 mov fsub repnz and gs mov fsub icebp decl and gs mov int out add dec pop addr16 lea (bad) repnz and fs mov fsub repnz sbb fs mov (bad) loop cld or push popa insl jp xchg mov fucomip clc add inc push pusha insl jp xchg mov loopne cli push adc sub inc push pop insb jns xchg lahf lods mov stc push adc sub inc push pop imul xchg mov loop cld or push popa outsb jnp xchg mov loopne stc push adc sub inc push pop insb js xchg sahf stos mov testl enter lods enter lods enter lods enter lods enter sub inc push pop push adcl fsubr cmc add sbb xor dec pop addr16 lea fxam repnz sbb fs mov fsub repnz sbb add lea (bad) repz and gs mov (bad) jecxz cld or push fs mov xlat jecxz std or and cmp jl xchg mov jecxz cld or and cmp push bound mov (bad) jecxz std or and cmp jge xchg mov jecxz cld or and cmp push bound mov aad out cld or dec pop data16 mov fsub repnz sbb gs mov xlat in std or and cmp jl xchg movsb mov lret lock or and cmp enter lods enter lods enter lods enter lods enter lods enter jl xchg mov loop cld or push popa outsb jnp xchg mov loope cli pop adc cmp popa outsb jnp xchg mov loope cli pop adc and cmp push bound mov (bad) loop cld or and cmp push arpl mov xlat in std or and cmp jge xchg mov jecxz cld or and cmp push bound mov aad out sti or push arpl mov (bad) loop cld or push bound mov aam in cli pop adc sub insb jns xchg mov loopne out cld or push bound mov aad out cld or push popa outsb jnp xchg mov loopne cli pop adc cmp popa outsb jp xchg mov loope cli pop adc sub insl jns lods enter lods enter lods enter lods enter lods enter lods xchg shl in stc push adc sub inc push pusha insl jns xchg mov loope cli pop adc sub insl jns xchg lahf lods mov out sti pop adc cmp popa outsb jp xchg mov loopne cli push adc cmp popa insl jp xchg mov loopne stc push adc sub inc push pop insb js xchg sahf stos mov clc add inc push pop push test rcr ljmp inc push pop imul ret call daa xor dec pop data16 mov fsub repnz sbb xor dec pop data16 mov pushf test ret call sub je mov (bad) hlt add sbb xor dec pop addr16 lea (bad) hlt add sbb xor dec pop addr16 mov (bad) repz xor pop data16 mov enter lods enter lods enter lods enter lods enter mov decl sbb xor pop data16 mov (bad) repz and gs orl add sbb xor dec pop addr16 lea fucomi cmc add sbb xor je mov (bad) hlt add dec pop addr16 lea fxam repnz xor pop data16 lea (bad) repz xor dec pop gs mov fsub repnz sbb gs mov fxam repnz and pop addr16 mov (bad) hlt add dec pop data16 mov (bad) repz dec pop push cmpsl mov int out add dec pop data16 lea (bad) repz dec pop data16 mov fcmove lods enter lods enter lods enter lods enter lods enter ds add dec pop data16 lea (bad) repnz and pop push test ror out add sbb ss dec pop push test call sub je mov (bad) hlt add sbb xor dec pop addr16 lea fucomi hlt add sbb xor dec pop addr16 lea (bad) repz dec pop data16 lea (bad) repnz daa xor pop addr16 lea (bad) hlt add adc pop imul ret iret fsubr cmc add sbb ss dec pop push stos mov rcr ljmp inc push pop push adcl fsubr testb sbb ss dec pop imul ret iret fsubr cmc add sbb pop push adcl fucomp testl lods enter lods enter lods enter lods enter lods enter lods enter inc push pop imul ret add clc add inc push pop imul mov loopne cli push adc sub inc push pusha insb jns xchg lahf lods mov clc add inc push pop imul sahf stos mov rcr ljmp inc push pop imul sahf stos mov clc add inc push pop imul sahf stos mov clc add inc push pop push test rcr jmp add inc push pop push test (bad) aam in cli pop adc sub insl jns xchg mov loopne stc push adc cmp popa outsb jp xchg mov loope sti pop adc cmp popa outsb jp xchg mov loope cli pop sbb xchg in decb sbb xor pop data16 test (bad) lret (bad) fsub out repnz std add push enter lods enter lods enter lods enter lods enter lods enter lods enter and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov add fndisi(8087 out icebp idiv add or sub xor inc inc dec push push add insl jae jle mov stos mov mov enter lods enter lods enter lods enter lods enter lods enter loop out repz incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop add outsb jae jle mov stos mov mov fcomp jecxz jmp add and sub aaa cmp pop pop gs jne addl lods enter lods enter lods enter lods enter lods enter popf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne add repnz add push adc push and das xor push push pop popa insl add jle mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp pop enter lods enter lods enter lods enter lods enter lods enter lods pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and das cmp dec push push pop bound jae jp test cmpsb stos mov mov fcomp jecxz out hlt stc add push or push sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb lods enter lods enter lods enter lods enter lods enter xor ds dec dec push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop popa data16 jno jl xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add unpckhps and inc inc dec push push pop bound jae jle add cmpsb lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aad loopne lods enter lods enter lods enter lods enter lods enter lods enter icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add push adc and inc inc dec push push pop arpl jae jg mov xchg xchg pushf mov mov (bad) in lock sti add or add sbb cmp inc dec push push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov enter lods enter lods enter lods enter lods enter lods enter mov mov fnop out icebp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos mov mov xlat fsub out repnz incb or adc sbb sub ss inc dec push pop pop arpl jae jle mov cmpsb lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop fs lods enter lods enter lods enter lods enter lods enter lods imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl or push sbb daa sub dec dec push pop pop gs jne addb mov mov fnop in icebp idiv add or add xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and lods enter lods enter lods enter lods enter lods sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and cmp pop pop imul xchg xchg pushf mov mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fucom call lods enter lods enter lods enter lods enter lods enter ds repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out cmc sti add or push sbb daa sub aaa cmp pop pop arpl je jg mov stos mov mov ret rcr fsubp jmp add and sub cmp ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor push push pop popa insl jb jge mov stos enter lods enter lods enter lods enter lods enter lods mov mov (bad) fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub cmp push pop pusha imul (bad) xchg test lds int3 rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa data16 enter lods enter lods enter lods enter lods enter lods enter jl xchg test mov mov fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop popa insl jb jle mov stos scas mov rol int3 rcl fucom call add unpckhps and sub aaa cmp inc dec add pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub enter lods enter lods enter lods enter lods enter lods enter inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec add popa insl jb jge mov stos scas mov rol rcl add jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop imul xchg xchg popf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz lods enter lods enter lods enter lods enter lods enter idiv add or sub xor push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fldl jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl push jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) aad loopne in icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov lods enter lods enter lods enter lods enter lods enter mov (bad) fsub out repnz std add push adc pop and xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl outsl jne addb cmpsl lods mov mov (bad) in lock cld add or sbb cmp inc dec push push pop pusha data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae enter lods enter lods enter lods enter lods enter lods enter jle,pt mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je addb cmpsb lods mov mov (bad) in lock add add or sbb cmp inc dec dec push pop pusha imul add sahf movsb stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub lods enter lods enter lods enter lods enter lods enter ds dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb sub dec dec push pop pusha imul addl sahf movsb test vaddsubps fsub out repnz std add add adc and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add lods enter lods enter lods enter lods enter lods enter lods enter sbb and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add lldt sbb es aaa cmp pop pop imul nop xchg add mov fnop in icebp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fndisi(8087 out repnz add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp pop pop imul nop xchg fwait mov mov lods enter lods enter lods enter lods enter lods enter lods enter (bad) in out hlt cli incl and sub dec dec push pop pop fs jne addb mov mov fneni(8087 out icebp idiv add or add das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop imul addl lods enter lods enter lods enter lods enter lods enter sahf mov mov fndisi(8087 out icebp idiv add or sub xor cmp dec push push pop bound jae jle mov stos mov mov ret enter fsubp ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov fcomp in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor push enter lods enter lods enter lods enter lods enter lods enter lods enter insl jae jle mov stos mov add fsubp jmp add and sub cmp push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc lods enter lods enter lods enter lods enter lods enter sbb and inc add push pop pop arpl je jg mov lods mov mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) (bad) fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc add and sub aaa cmp pop pop imul nop xchg fwait mov mov aam lods enter lods enter lods enter lods enter lods enter lods fnop in lock add or sbb and cs aas inc dec push push add insl jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss dec dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fnop out icebp idiv add or sub xor aas inc dec push push pop add insl jb jge mov lods enter lods enter lods enter lods enter lods enter lods enter mov mov xlat fucom add out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in jmp idiv add or sub xor aas inc dec dec push pop enter lods enter lods enter lods enter lods enter lods enter ds imul ja (bad) mov test (bad) aad loope in icebp idiv add or sub xor push push pop popa insl jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl add addb cmpsl lods mov mov fcmovu in lock add add or lods enter lods enter lods enter lods enter lods enter lods enter and cs aas inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push jbe (bad) mov ror in cmc sti add push adc and sub cmp inc dec push push pop bound je addb test (bad) int loop sti add push adc and inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs mov lods enter lods enter lods enter lods enter lods enter movsl stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je addb cmpsl lods mov mov fcmovu in lock add or pop sbb daa sub dec dec push add imul addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz std add push adc pop and inc inc dec push push enter lods enter lods enter lods enter lods enter lods pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp pop pop fs jne addb mov fsub call add or sub aaa cmp pop popa insl je addb stos mov mov fndisi(8087 out repz incl ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs lods enter lods enter lods enter lods enter lods enter lods push jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test rol rcl fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec push push pop popa data16 jno jl mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor ds dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz incb or adc pop and lods enter lods enter lods enter lods enter lods enter lods enter cmp dec push push pop bound je jg mov lods mov mov fcomp in out cmc cli add and sub aaa cmp push pop pusha imul (bad) xchg test vaddsubps fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub call enter lods enter lods enter lods enter lods enter lods enter or adc and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub add out repz incl and sub ss inc dec push push pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jge mov mov fucom jmp pop or ds dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop imul xchg xchg pushf mov mov (bad) in out cmc enter lods enter lods enter lods enter lods enter lods enter cli add and sub aaa cmp inc dec push pop pop arpl je jg mov cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom jmp add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb unpcklps and inc inc dec push pop pop arpl jae jg mov stos mov mov lods enter lods enter lods enter lods enter lods enter lods enter rcr fsubp jmp add and sub inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov lods enter lods enter lods enter lods enter lods enter cltd lahf movsb stos scas mov rol int fcomp jecxz out hlt stc incl adc xor cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out cmc cli add or pop sbb daa sub dec dec push enter lods enter lods enter lods enter lods enter lods enter lods enter imul addl mov aad loopne in icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop gs jne addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop popa data16 jb jge mov test (bad) aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out add clc incb unpcklps enter lods enter lods enter lods enter lods enter lods enter and inc inc dec push push pop bound jae jle mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl lahf movsb stos scas mov rol rcl fsub out lods enter lods enter lods enter lods enter lods enter ds repnz incb or adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop gs jbe addl mov aad loopne jmp idiv add or sbb cmp dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pusha imul (bad) mov test vaddsubps fndisi(8087 out repnz add push adc add and inc inc dec push push pop bound jb jge mov stos mov enter lods enter lods enter lods enter lods enter lods enter (bad) int fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop popa insb jb jge mov test (bad) int3 rcl fsub out repz incb or adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test rol rcl fsub call add adc xor cmp inc dec push pop pop arpl je jg lods enter lods enter lods enter lods enter lods enter test cmpsb lods mov mov (bad) in out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp push pop pop imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor aas inc dec enter lods enter lods enter lods enter lods enter lods enter push pop popa data16 jb jge mov stos mov mov (bad) fsub out repnz add push adc push and das xor aas inc dec push push pop pusha imul (bad) xchg test (bad) (bad) fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov add fndisi(8087 out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps lods enter lods enter lods enter lods enter lods enter and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb unpcklps and inc inc dec push pop pop add jne addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub enter lods enter lods enter lods enter lods enter lods enter clc std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fucom call incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test enter lods enter lods enter lods enter lods enter lods mov mov fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha data16 jno jl xchg movsb stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne enter lods enter lods enter lods enter lods enter lods enter lods addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and daa sub dec dec push pop pop gs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb unpckhps and sub ss inc enter lods enter lods enter lods enter lods enter lods enter pop arpl je jg mov lods mov mov fcomp in out hlt cli add and sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps and inc dec dec push pop pop arpl je jg mov lods mov add fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jle mov stos mov mov xlat fsub call add unpcklps lods enter lods enter lods enter lods enter lods enter sbb and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound jae jle mov stos mov mov fcomp jecxz out cmc cli add and sub dec dec push pop pop gs jne add sahf mov mov fndisi(8087 out repnz add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl lods enter lods enter lods enter lods enter lods enter lods enter es cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or push sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add lldt xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fmul lods enter lods enter lods enter lods enter lods enter loop,pt in repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov add (bad) int3 rcl fucom call add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop imul xchg xchg pushf mov enter lods enter lods enter lods enter lods enter lods lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and cmp pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop bound jb lods enter lods enter lods enter lods enter lods enter js orl stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop arpl je addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) rcl fsub call add unpcklps pop and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp in out hlt sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor push push pop popa insb jb jge mov stos mov mov (bad) fsub out repnz incb or adc pop and inc enter lods enter lods enter lods enter lods enter lods enter ds dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa add jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb test mov mov (bad) sti add or sbb es cmp pushl ds push pop imul mov mov fnclex call add and das xor push enter lods enter lods enter lods enter lods enter lods enter imul orl mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 js orl stos mov mov (bad) fsub out repnz std add push adc push and das xor aas inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jbe addl mov aad loopne jmp idiv add or sub xor lods enter lods enter lods enter lods enter lods enter lods enter cmp inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call incl and sub cmp pop pop fs jne addb cmpsl lods mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub call add unpcklps pop and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add lods enter lods enter lods enter lods enter lods enter lods enter or sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor push push pop popa insb jb jge mov movsl stos mov mov fcomp jecxz out repz incb unpckhps and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha data16 jb jge mov test vaddsubps fsub out repnz add push adc push and das xor push push pop popa insb jb jle mov stos mov mov lods enter lods enter lods enter lods enter lods enter lods rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loope in repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov enter lods enter lods enter lods enter lods enter fwait mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop imul nop xchg pushf mov mov aam loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop enter lods enter lods enter lods enter lods enter lods enter ds jne addl mov aam loopne jmp idiv add or pop sbb cmp inc add push pop popa data16 jno jl mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcmovu in lock add or pop sbb sub dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and enter lods enter lods enter lods enter lods enter lods xor cmp dec push push pop bound jae jle mov stos mov mov fadds fsubp jmp add and sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock lods enter lods enter lods enter lods enter lods enter add or pop sbb sub dec dec push pop pop add jge mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov enter lods enter lods enter lods enter lods enter lods enter mov (bad) in lock add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub ss dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop imul or lods enter lods enter lods enter lods enter lods enter lods xchg mov scas mov rol rcl fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz incb or adc add sub ss inc enter lods enter lods enter lods enter lods enter lods enter push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop imul xchg xchg pushf mov mov aad loopne jmp idiv add or enter lods enter lods enter lods enter lods enter lods enter sbb cmp inc dec push push pop pusha data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop popa insb jb jge mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov test (bad) xlat fsub out repz incb or adc pop and add dec push pop pop arpl je jg mov stos mov mov fmul lods enter lods enter lods enter lods enter lods enter fucom jmp add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add push adc push and das xor push push pop bound jae jle mov stos mov mov rcr (bad) ljmp adc sbb daa sub cmp pop pop gs jbe addl enter lods enter lods enter lods enter lods enter test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test vaddsubps fndisi(8087 out repnz add or sub xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jle mov lods mov mov fcomp in out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha add jno jge mov test (bad) xlat fsub out repz incb or adc pop and inc inc dec push push pop bound enter lods enter lods enter lods enter lods enter lods enter jae,pt jle mov stos mov mov xlat fucom jmp add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or sbb cmp inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz incl unpckhps and sub ss dec dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa enter lods enter lods enter lods enter lods enter lods enter lods enter dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jbe addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge add movsl stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add lods enter lods enter lods enter lods enter lods enter or push sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc sbb and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov lods enter lods enter lods enter lods enter lods enter lods enter (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) mov test (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jle mov add leave into aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl enter lods enter lods enter lods enter ds popf mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add push adc pop and xor push push pop bound jb jle mov stos mov mov xlat fucom call add push adc pop and cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop enter lods enter lods enter lods enter lods enter lods enter ds imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov lods mov mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) lret rcl fsub out repnz std add push adc pop and lods enter lods enter lods enter lods enter lods enter xor push push pop bound jb jge mov test vaddsubps fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos mov mov xlat fsub out repz incb unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add and sub aaa cmp dec dec push pop add push jne addl mov aam loopne jmp idiv add or pop push and cs aas inc dec push push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out repnz add or sub xor push push pop bound jae jle mov stos mov mov xlat fsub call enter lods enter lods enter lods enter lods enter lods repz incb unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in add idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov enter lods enter lods enter lods enter lods enter lods enter ds fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jb jge mov test (bad) (bad) fndisi(8087 out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov rcr fsubp ljmp adc sbb daa sub dec dec push pop pop gs jne jl xchg test (bad) aad loope in icebp idiv add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fsub out repnz incb or adc and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je enter lods enter lods enter lods enter lods enter lods enter test cmpsb lods mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add push adc pop and inc enter lods enter lods enter lods enter lods enter lods enter push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp in out hlt cli add and sub cmp pop pop fs jne addb mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add or sub xor push push pop bound jb jle mov stos mov mov xlat fsub out repz incb or lods enter lods enter lods enter lods enter lods enter push adc pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop gs mov mov (bad) rcr out sbb push bound mov rcr out cld pop pop and sub dec push pop pop imul orl lods mov mov fsub out repz incl and das xor push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor push pop pop imul (bad) mov stos mov mov fsub out repz enter lods enter lods enter lods enter lods enter lods enter incl and das xor push pop pop imul (bad) mov cmpsl lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpcklps and sub cmp inc dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb sub lods enter lods enter lods enter lods enter lods enter lods enter aas inc dec push push pop arpl jne addl mov (bad) lret fsub call push or pop sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha gs jno jge mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop popa insb jb jle mov scas mov rol rcr fucom jmp pop or sub ss dec dec push pop pop gs jb jle mov lods mov mov fsub call push or pop sbb cmp dec push enter lods enter lods enter lods enter lods enter ds pop fs jbe add mov mov fucom call push or sbb and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 call add and cs inc inc dec push pop pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jo enter lods enter lods enter lods enter lods enter lods enter jl,pt mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push pop pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sub ss dec dec push pop pop imul orl lods mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop add imul (bad) mov lods enter lods enter lods enter lods enter lods enter lods enter cmpsb lods mov mov fsub call add and das xor push pop pop data16 jno jge mov lods mov mov fsub call push or sbb and xor cmp dec push pop pop imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pusha imul orl lods mov rol rcr fsubp jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcl fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp push pop bound je addb stos mov mov lods enter lods enter lods enter lods enter lods enter (bad) jmp idiv add unpckhps and sub dec push push pop bound jne addl mov (bad) in icebp idiv add push adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and xor add pop popa insb jb jle mov scas mov rol rcl fucom jmp lods enter lods enter lods enter lods enter lods enter lods enter sti add push adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb test (bad) int fcomp in lock add or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out icebp idiv add unpckhps and add xor aas inc dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb enter lods enter lods enter lods enter lods enter lods sub xor inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop out repnz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incl adc sbb sub xor push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and cs aas inc dec push pop pop fs jbe addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incb adc add cmp dec push pop pop imul (bad) mov lods mov mov fsub call add and das xor enter lods enter lods enter lods enter lods enter lods enter pop pop fs jne addl mov fnop out repnz incb adc xor aas inc dec push push pop bound je jg mov scas mov rol rcr fsubp jmp or adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub dec push push pop bound je addb test (bad) int fcomp in lock add push adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp unpckhps and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je lods enter lods enter lods enter lods enter lods enter lods enter mov mov mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb test enter loopne jmp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov fnop in icebp add incb adc sbb sub xor aas inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods enter lods enter lods enter lods enter lods enter lods enter cmpsb lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop imul (bad) mov stos mov mov fneni(8087 out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 add out hlt cli add or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov scas mov rol enter lods enter lods enter lods enter lods enter lods enter lods enter jecxz out cmc sti add or sub aaa cmp pop pusha insw jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rolb (bad) in repnz incb adc sbb sub dec push push pop arpl jne addl mov fnop in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov (bad) in icebp (bad) enter lods enter lods enter lods enter lods enter lods std add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub dec push push pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov xlat fucom jmp pop or sub ss dec dec push pop popa insl jb jle mov scas mov rol rcl fucom ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and enter lods enter lods enter lods enter lods enter lods enter sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov (bad) in icebp idiv add push adc and sub cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jle mov scas mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub aaa cmp pop popa insl jb jle mov lods mov mov fucom jmp pop or sub aaa cmp lods enter lods enter lods enter lods enter lods enter push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop es cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop arpl jne addl mov ret leave iret aad loope in repz incl and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor push pop pop imul orl lods mov rol rcr fucom jmp pop or sub aaa cmp pop pusha insb jae jle lods enter lods enter lods enter lods enter lods enter lods enter mov scas mov rol rcr fucom ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop bound je addb stos scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop arpl je addb movsl stos mov mov fnop out icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov enter lods enter lods enter lods enter lods enter lods scas mov rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr loopne in repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb cmp dec push pop pop fs jbe (bad) mov (bad) xchg fwait mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb stos mov mov fxch lods enter lods enter lods enter lods enter lods enter lods enter jmp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne add mov mov fsub call add and xor cmp dec dec push pop pusha imul orl lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop arpl je addb test (bad) int (bad) in lock add enter lods enter lods enter lods enter lods enter lods enter lods push adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp jmp pop or sub ss dec dec push pop pop imul orl lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 add jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp jmp pop or sub enter lods enter lods enter lods enter lods enter lods enter dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp push or sbb and das xor push pop pop fs jbe orl lods mov mov fsub call push or sbb and das xor push pop add insb jb jle mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec push push pop bound je addb stos mov mov fnop out repnz incb unpckhps and sub dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub dec push push pop enter lods enter lods enter lods enter lods enter lods enter outsb je addb test (bad) int (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop arpl jne addb stos mov mov fnop out icebp idiv add unpckhps and sub dec add pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and das xor push pop pop imul (bad) mov lods mov mov fsub call add and das xor push pop pop fs jne addl mov fcmovu in icebp idiv add adc xor aas inc dec push push pop arpl jne addl lods enter lods enter lods enter lods enter xchg cltd lahf movsl stos mov mov fnop out repnz incb adc sbb sub xor push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov mov fsubp ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov lods enter lods enter lods enter lods enter lods enter lods enter rol rcr fsubp ljmp adc xor ds dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc pop and ds dec push push pop bound je addb stos mov mov fchs out icebp idiv add unpckhps and sub dec push pop pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe addl mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub enter lods enter lods enter lods enter lods enter lods enter ds push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fucom jmp pop or jae jg mov scas mov rol rcr (bad) jmp idiv add push adc xor aas inc dec push push pop pusha data16 jno jge mov stos mov mov (bad) fsub out repnz incb or adc pop and inc inc dec push push pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop out icebp idiv add or and enter lods enter lods enter lods enter lods enter lods enter ds xor push push pop bound jae jle mov stos mov mov xlat fsubp jmp add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb cmp inc dec push push pop pusha data16 jno jl mov test rol rcl fsub call lods enter lods enter lods enter lods enter lods enter lods enter or adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop imul (bad) xchg test (bad) aad loope in icebp idiv add push adc push and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) lret rcl fsub out repz incb unpcklps and inc inc dec add pop imul nop xchg pushf mov mov lods enter lods enter lods enter lods enter lods enter lods enter aam (bad) jmp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop fs jne addb test mov mov fnop out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 add in repnz incb or adc pop and inc inc dec push push pop bound jae jle mov enter lods enter lods enter lods enter lods enter lods cltd lahf movsb stos scas mov rol rcl fndisi(8087 out repnz add or sub xor aas inc dec dec push pop popa data16 jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test vaddsubps fsub out repnz add push adc push and das xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov lods mov mov fcomp in out hlt cli add and sub aaa cmp pop pop fs add addl mov (bad) fndisi(8087 out repnz add or sub xor push push pop enter lods enter lods enter lods enter lods enter lods enter insb jb jge mov test vaddsubps fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or adc pop and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and lods enter lods enter lods enter lods enter lods enter xor cmp dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov movsl stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock lods enter lods enter lods enter lods enter ds sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add adc sbb es aaa cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and add xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov lods enter lods enter lods enter lods enter lods enter rol rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop fs jbe addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov rcr fsubp ljmp adc sbb daa sub dec dec push pop pop imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg lods enter lods enter lods enter lods enter lods enter lea scas mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fnop in lock add or sub xor aas inc dec add pop bound jb jle mov stos mov mov (bad) fsub out repnz add push adc push and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec enter lods enter lods enter lods enter lods enter lods enter push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop imul xchg xchg pushf mov mov flds loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or enter lods enter lods enter lods enter lods enter lods enter and xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) (bad) fsub call add unpcklps and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out cmc cli add and sub cmp pop pop fs jno jl xchg test (bad) aad loope in icebp idiv add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) enter lods enter lods enter lods enter lods enter lods enter ds out cmc cli add and sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl add and sub cmp pop pop fs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fsub out repnz std add push adc push and das xor inc inc dec push push pop popa data16 jno jl xchg test lods enter lods enter lods enter lods enter lods enter scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jl mov test (bad) lret fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg test (bad) lret fnop out repnz add or sub xor aas inc dec push push pop pusha imul addl mov mov fneni(8087 out icebp idiv add push adc push and das xor inc inc dec push push pop popa data16 jno jl xchg test mov mov fnop in lock add or sbb cmp inc dec push push pop pusha data16 jno jl xchg test mov mov fnop in lock add or pop sbb sub xor aas inc dec dec push pop pusha imul lods enter lods enter lods enter lods enter lods enter jl xchg test (bad) aad loope in repnz add or sub xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out repz incb unpckhps add es aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fsub out repnz add push adc pop and xor lods enter lods enter lods enter lods enter lods enter cmp dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop imul addl mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli add and sub dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or sbb and cs aas inc dec push push pop popa data16 jno jl mov test vaddsubps fsub out repnz std add lods enter lods enter lods enter lods enter lods enter or adc pop and xor cmp dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp dec dec push pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub add push pop popa data16 jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov lods mov mov lods enter lods enter lods enter lods enter lods enter lods enter rcr fsubp jmp add and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) add loop in repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fsub out repnz incb unpcklps and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc and inc inc dec push pop pop arpl je jg mov enter lods enter lods enter lods enter lods enter lods enter mov mov xlat fucom call add push adc pop and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop bound imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fucom call add push adc pop and das xor push push enter lods enter lods enter lods enter lods enter lods enter pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out add cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub out repnz std add unpcklps pop enter lods enter lods enter lods enter lods enter ds inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul mov lods mov mov fnop in icebp idiv add or sbb cmp inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push push pop bound jae jle mov lods mov mov fcomp in enter lods enter lods enter lods enter lods enter lods enter lods out hlt cli add and sub aaa cmp pop pop fs jne addb test mov mov fnop in lock add or add push and das xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov enter lods enter lods enter lods enter lods enter lods enter mov (bad) fsub out repnz add or sub xor push push pop bound jae jle mov add int fcomp in out hlt cli incl and sub dec dec push pop pop imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne or lods enter lods enter lods enter lods enter lods enter lods enter xchg lods mov mov fnop in lock add or sbb cmp aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fndisi(8087 out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub cmp lods enter lods enter lods enter lods enter lods enter pop pop fs jne addl mov add fneni(8087 out icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha data16 jno jl xchg test vaddsubps fsub out repnz std add push adc pop and das xor push push pop popa insl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in lock sti add or pop sbb lods enter lods enter lods enter lods enter lods enter lods and sub dec dec push pop pusha add jl mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test mov mov fnop out icebp idiv add or sub xor push push pop popa insb jb xchg cwtl sahf movsb stos mov mov fsub call add and xor cmp dec dec push pop pusha data16 jb xchg xchg pushf mov mov fnop in icebp idiv add or sbb enter lods enter lods enter lods enter lods enter lods enter cs aas inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pusha imul addl mov (bad) fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc xor cmp inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out enter lods enter lods enter lods enter lods enter lods enter cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp testl adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push sbb sub dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor inc inc dec push push pop bound jae jle mov stos mov mov lods enter lods enter lods enter lods enter lods enter rcl fucom call add unpcklps pop and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl jne addb mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or sbb cmp inc dec push push pop pusha data16 jno jl mov lods enter lods enter lods enter lods enter lods enter lods enter xchg cwtl sahf mov mov fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop pusha imul addl mov aam loopne jmp idiv add or and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub cmp pop pop gs jne addl mov aam (bad) ljmp adc sbb sub xor ds dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec enter lods enter lods enter lods enter lods enter lods enter imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl mov test rol rcl fucom call add unpckhps and sub ss inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp in out hlt cli add enter lods enter lods enter lods enter lods enter lods enter daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or sbb cmp inc add push pop bound jb jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add push adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul addl mov aam loopne enter lods enter lods enter lods enter lods enter lods enter ds idiv add or pop sbb cmp inc dec push push pop popa insb jb jge mov stos scas mov rol rcl add jecxz out repz incl unpckhps and sub aaa cmp inc dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pop fs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jg mov stos mov lods enter lods enter lods enter lods enter lods enter ds ret rcr fsubp jmp push or push sbb daa sub dec dec push pop pop gs jno jl xchg test (bad) lret fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb unpcklps pop and inc inc dec push pop pop arpl je jg lods enter lods enter lods enter lods enter lods enter lods enter nop xchg fwait mov mov fcomp jecxz out hlt cli incl push or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa insl jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc pop and das xor enter lods enter lods enter lods enter lods enter lods enter push pop bound jb jle mov cmpsb lods mov mov (bad) in out cmc cli add and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov xlat fucom jmp add and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incl adc sbb es aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or enter lods enter lods enter lods enter lods enter lods enter sbb xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jbe addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov add vaddsubps fmul lods enter lods enter lods enter lods enter lods enter in repnz std add push adc push and das xor push push pop popa insl jb jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom jmp add and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter lods enter mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fsub add in repz incb unpckhps and inc inc dec push push pop bound jae lods enter lods enter lods enter lods enter lods enter lods enter test movsl stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop bound jb jns test cmpsb stos mov mov fcomp jecxz out hlt cli incl and sub cmp lods enter lods enter lods enter lods enter lods enter inc dec dec push pop pop fs jne addb test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha data16 jno jge mov test (bad) lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub call add or push sbb es aaa cmp pop pop fs jne addb test mov mov fnop out icebp idiv add enter lods enter lods enter lods enter lods enter lods enter lods enter sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub call add push adc pop and xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli add or pop sbb daa sub dec dec push pop pusha imul addl mov rol rcl fsub out repnz std add push adc and inc inc dec push pop pop arpl je jg mov stos mov mov enter lods enter lods enter lods enter lods enter lods enter lods enter jmp add and sub cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub inc dec dec push pop pusha imul (bad) xchg test (bad) lret rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov lods enter lods enter lods enter lods enter lods enter movsl stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov aam (bad) ljmp adc sbb cmp inc dec push push pop pusha imul (bad) mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 enter lods enter lods enter lods enter lods enter lods enter lods jno jge mov test (bad) (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add push adc pop and das xor push push add push test cmpsb lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loopne in icebp idiv add or sub xor enter lods enter lods enter lods enter lods enter lods enter push push pop popa insb jb jge mov test (bad) lret rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jb jle mov stos scas mov rol rcl fsub out repz incb unpcklps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz add cmc sti add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp lods enter lods enter lods enter lods enter lods enter ds or push sbb daa sub dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jbe add sahf movsb test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol enter lods enter lods enter lods enter lods enter lods enter loop in repz incb unpcklps and inc inc dec push pop pop arpl jae jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addb test mov mov fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) aad loopne in repnz add push add xor cmp inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jbe addl lods enter lods enter lods enter lods enter lods enter mov mov fnop out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop imul nop xchg fwait mov mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop (bad) enter lods enter lods enter lods enter lods enter lods enter insl jb jle mov stos mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub inc dec push push pop popa data16 jno jl mov test (bad) aad loope in repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl adc enter lods enter lods enter lods enter lods enter lods enter lods xor cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb cmp inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop arpl jae jg mov stos mov mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti enter lods enter lods enter lods enter lods enter lods enter adc sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add sub xor inc inc loopne std add unpckhps and sub cmp inc dec push push pop bound je addb stos mov mov loop out hlt cli add pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop arpl jne addl mov fndisi(8087 out repz incl and xor dec push pop pusha imul (bad) xchg test (bad) (bad) enter lods enter lods enter lods enter lods enter lods enter in repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop imul addl mov rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov fnop in lock add or sub xor aas inc dec push push pop pusha imul (bad) xchg enter lods enter lods enter lods enter lods enter lods enter scas mov mov fndisi(8087 out repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub call add unpckhps and inc inc dec push pop pop add jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add push adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop fs enter lods enter lods enter lods enter lods enter lods enter jne,pt addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb unpckhps and sub ss inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add or sub xor enter lods enter lods enter lods enter lods enter lods enter aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl sahf movsb test (bad) aad loope in repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add lods enter lods enter lods enter lods enter lods enter or sub xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push add cmp inc dec dec push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jge mov stos scas mov rol rcl fsub call add push adc pop and inc inc dec push push pop bound jae jle mov lods mov mov fcomp in out hlt cli add and sub dec dec push pop pop gs jbe addl mov enter lods enter lods enter lods enter lods enter lods enter fndisi(8087 out icebp idiv add or sub xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov lods add into aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc and sub ss inc dec push pop pop arpl je jg mov lods enter lods enter lods enter lods enter lods enter lods enter cmpsb lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop popa push test movsl stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je addb cmpsl lods mov mov fcomp in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs lods enter lods enter lods enter lods enter lods push jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) lret roll fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb sub enter lods enter lods enter lods enter lods enter lods enter dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add or sub xor push push pop popa insl jb jge mov stos mov mov xlat fucom call enter lods enter lods enter lods enter lods enter lods enter or adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add pop or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop imul addl mov lods enter lods enter lods enter lods enter lods enter into aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insl jb jge mov enter lods enter lods enter lods enter lods enter lods enter lahf movsl stos mov mov xlat fucom call add unpcklps pop add sub aaa cmp dec dec push pop pop imul nop xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out icebp idiv add push adc pop and xor push push pop popa insb jb jge mov test (bad) aad loopne in icebp idiv add or sub xor push push pop enter lods enter lods enter lods enter lods enter ds insb jb jge mov test rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test vaddsubps fsub out repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps pop and lods enter lods enter lods enter lods enter sub xor dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repz incb or adc and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub cmp pop pop fs jne addb cmpsl lods mov mov add loope in enter lods enter lods enter lods enter lods enter ds idiv add or sub xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha add jge mov stos mov enter lods enter lods enter lods enter lods enter lods mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor push push pop bound jb jle mov stos mov mov xlat fucom call incl and sub aaa cmp pop pop imul lods enter lods enter lods enter lods enter lods enter lods enter mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp dec dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je addb mov mov fnop out icebp idiv add or sub xor aas inc dec enter lods enter lods enter lods enter lods enter lods enter ds push pop popa data16 jb jge mov stos mov mov xlat fsub out repnz incb or adc and inc inc dec push pop pop arpl je jg mov stos mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop gs jbe addl mov aad loope in repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or pop sbb xor aas inc dec push push pop pusha imul addl mov aam (bad) jmp idiv add or sbb lods enter lods enter lods enter lods enter lods enter lods enter and cs aas inc dec push push pop pusha imul (bad) xchg test mov mov fcmovu in lock add or pop sbb sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jle mov stos mov mov ret rcr fsubp jmp add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp enter lods enter lods enter lods enter lods enter lods enter out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jle mov lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop gs jne addb test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub add push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz incb unpckhps and inc inc dec push push pop arpl jae jg mov stos enter lods enter lods enter lods enter lods enter lods enter mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa insb jb jge mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov flds loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov stos scas mov rol rcl fsub out repnz add push adc pop and das xor push push pop bound jb enter lods enter lods enter lods enter lods enter lods enter jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop imul nop xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs add addl mov aad loopne jmp idiv add push adc push and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add adc xor cmp dec enter lods enter lods enter lods enter lods enter lods enter lods enter pop imul nop xchg pushf mov mov (bad) in out cmc sti add or push sbb sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add or adc and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or enter lods enter lods enter lods enter lods enter ds sbb daa sub cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or push sbb daa sub cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov cmpsb lods mov mov fcomp in out cmc cli add and sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fcmove lods enter lods enter lods enter lods enter lods enter jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpcklps pop sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and add dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insl jae jle mov ror fnop ljmp inc push pop data16 test scas mov mov fndisi(8087 out icebp idiv add push adc pop and lods enter lods enter lods enter lods enter lods enter lods enter sub xor push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp pop pop fs jne addb mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repz incb unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop gs jne addl mov aad loopne jmp enter lods enter lods enter lods enter lods enter lods enter add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add push adc pop and xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repz incb unpcklps and inc inc dec push push pop arpl jae jle mov stos mov mov lods enter lods enter lods enter lods enter lods enter ds rcr fucom jmp add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb sub xor aas inc dec push push pop pusha data16 jno jl xchg test lds int3 rcl fsub call add unpcklps pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul lods enter lods enter lods enter lods enter lods enter lods mov lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret rcl fsub out repnz std add push adc pop and inc inc dec push push add imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jbe addl mov aad loope in icebp idiv add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp clc std add push adc pop and das xor push enter lods enter lods enter lods enter lods enter lods enter insl jb jle mov stos mov mov xlat fsub call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp in add cmc sti add or pop sbb sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addl mov aad loopne jmp idiv add or lods enter lods enter lods enter lods enter lods enter lods enter and xor aas inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa insl jb jge test cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fsub out repnz add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpcklps and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out lods enter lods enter lods enter lods enter lods enter lods enter in repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl lldt sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fndisi(8087 out repnz add or sub xor aas inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jbe addl enter lods enter lods enter lods enter lods enter lods enter (bad) lret fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov add (bad) int fcomp jecxz out hlt stc incl and sub aaa cmp pop pop fs jne addb test mov mov fnop in lock add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop imul nop xchg pushf mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha data16 jno jl enter lods enter lods enter lods enter lods enter lods enter lods xchg test vaddsubps fsub out repnz std add push adc pop and add dec push pop pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop fs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha data16 jno jge mov test (bad) (bad) fsub out repnz std add push adc pop and xor enter lods enter lods enter lods enter lods enter lods enter lods enter bound jae jle mov stos mov mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb unpcklps enter lods enter lods enter lods enter lods enter lods enter xor cmp dec push push pop bound imul nop xchg fwait mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz incb or adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov stos scas mov rol rcl fsub out lods enter lods enter lods enter lods enter lods enter ds repnz add add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop gs jbe addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jb jge mov test (bad) lret rcl fsub call add unpcklps and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop imul nop xchg pushf mov mov (bad) in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov movsl stos mov lods enter lods enter lods enter lods enter lods enter lods enter mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and daa sub dec dec push pop pop gs jne enter lods enter lods enter lods enter lods enter addl mov aad loope in icebp idiv add push adc push and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov aad loopne in repnz add push adc pop and das xor lods enter lods enter lods enter lods enter lods enter lods enter push push pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor aas inc add push pop bound jae jg mov stos mov mov fcomp in out cmc cli add lods enter lods enter lods enter lods enter lods enter lods enter daa sub aaa cmp pop pop fs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop imul addl mov jmp add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz pop enter lods enter lods enter lods enter lods enter lods sbb cmp dec dec push pop popa insl jae jg mov rol rcr fucom jmp add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov (bad) in lock sti add or push sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov add (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fsub out repnz std add push enter lods enter lods enter lods enter lods enter lods enter sbb and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das cmp dec push push pop bound outsl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pusha imul addl mov aad enter lods enter lods enter lods enter lods enter lods enter out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add push or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov enter lods enter lods enter lods enter lods enter ds mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out cmc cli add and sub dec dec push pop pop gs jne addb test mov mov fnop in icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jle mov cmpsb lods mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pusha imul lods enter lods enter lods enter lods enter lods enter lods enter addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and daa sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fsub out repnz incb or adc pop and enter lods enter lods enter lods enter lods enter ds inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock cld add or sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov add (bad) in out cmc cli add or push sbb daa sub dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz add enter lods enter lods enter lods enter lods enter lods enter ds sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov (bad) fsub out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos scas mov rol ror lods enter lods enter lods enter lods enter lods enter lods enter fsub call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add and sub cmp pop pop fs jne addb test mov mov fcmovu in lock sti add or sbb cmp inc dec push push pop pusha data16 jno jge mov test (bad) (bad) faddl loop out repz incl unpckhps and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb sub dec push push pop pusha data16 jno jl mov test vaddsubps fsub out repnz std add push adc pop and xor push push pop bound jae jg mov lods enter lods enter lods enter lods enter lods enter cmpsb stos mov mov fcomp in out hlt cli add and sub cmp pop pop imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop imul mov scas mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound enter lods enter lods enter lods enter lods enter lods enter lods jae jg mov stos mov mov xlat fucom jmp add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock add or sub cmp inc dec push pop imul enter cmc add push and arpl orl iret (bad) in testl ss dec push popa insb jbe mov rcr jecxz lock add add adc xor aas inc dec push push pop arpl js mov aad loope in repz incl and das xor push pop pop imul orl fnop in icebp idiv add adc sbb sub xor inc inc dec push pop pop imul test test mov rol rcr (bad) jmp idiv add unpckhps and lods enter lods enter lods enter lods enter lods enter xor inc inc dec push pop pusha insl jae jg mov scas mov ret aam loopne in icebp idiv add adc sbb sub xor inc inc dec push pop pop imul orl mov mov fnclex call push or sub cmp pop arpl jne addl mov fucom jmp or adc and sub cmp inc dec push push pop bound add addl mov repnz incb adc sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or sub cmp inc dec push push pop arpl jbe (bad) xchg lods mov mov fucom jmp pop or sub aaa cmp pop bound je addb lods enter lods enter lods enter lods enter lods enter lods enter lahf movsl stos mov mov fsub call pop or sub cmp inc dec push pop pop fs js test stos mov mov fucom jmp or push sbb sub xor inc inc dec push pop popa push xchg lods mov mov loopne in repz add or sbb and xor cmp pop popa push xchg lods mov add enter loope in hlt cli add or sub cmp inc dec push push pop bound jne addl rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp lods enter lods enter lods enter lods enter lods enter or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pop imul orl lods mov mov fsub call push or sbb and das xor push pop pop fs jbe (bad) mov lods mov mov (bad) fucom call push or sbb and xor cmp inc dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe addl mov fnop out repnz incb adc sbb lods enter lods enter lods enter lods enter lods enter and cs aas inc dec push pop pop fs jne addl mov fnop out repnz incb adc sbb sub dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb movsb stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and pop bound jge mov lods mov mov fsub call push or pop sbb cmp dec push pop pop gs lods enter lods enter lods enter lods enter lods enter lods enter jge mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov xlat fsub call push or sbb and das xor push pop pop gs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov stos mov mov fnop out repz incl adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl enter lods enter lods enter lods enter ds sahf movsb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb movsb stos mov mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl je jg mov scas mov enter lods enter lods enter lods enter lods enter lods enter rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae jg mov xchg cwtl sahf movsb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insb jb jle mov scas mov rol rcl fucom enter lods enter lods enter lods enter lods enter lods enter idiv add push adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb add mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha imul orl scas mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or lods enter lods enter lods enter lods enter lods enter adc sbb cmp dec push pop pop gs jbe (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop add ja orl lods mov mov fsub call pop or sub ss dec dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp inc dec push pop pop imul orl lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub enter lods enter lods enter lods enter lods enter lods enter dec push push pop bound je addb stos mov mov fcmovu in icebp idiv add unpckhps and sub dec push add arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop enter lods enter lods enter lods enter lods enter lods enter lods enter jb jle mov scas mov mov fucom jmp pop or sbb and xor cmp inc dec dec push pop popa insb jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub out repz incl and das xor push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) enter lods enter lods enter lods enter lods enter lods mov stos mov mov fndisi(8087 out repnz incb adc sbb sub das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb adc xor aas inc dec push push pop arpl jne addl mov fnop out repnz std add unpckhps and sub dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc pop sub aaa cmp pop popa insl jae jle mov scas mov mov fucom jmp push or sbb and inc dec dec push pop pusha data16 jb jle mov enter lods enter lods enter lods enter lods enter lods enter lods mov mov fsub call push or add push and xor cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec push pop pop imul orl lods mov mov fsub call add and cs push pop pop fs jbe addl mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov fnop out repnz incb or adc xor aas inc dec push push pop bound je addb test (bad) int fcomp in icebp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jle mov scas mov mov lods enter lods enter lods enter lods enter lods enter ds fucom jmp add push adc and sub aaa cmp pop popa insl jae jg mov scas mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl je addb stos mov mov fnop out in enter lods enter lods enter lods enter lods enter lods enter stc incl and cs aas inc dec push push pop arpl je addb test (bad) int3 rcr fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs ja orl lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov (bad) fsub call push or enter lods enter lods enter lods enter lods enter ds sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov fsub out repz incl and cs inc inc dec push pop pop fs jbe addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fcmovu in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insw jae jg mov scas mov add (bad) int (bad) in icebp idiv add push adc and sub aaa enter lods enter lods enter lods enter lods enter lods enter lods enter dec push pop popa insl jb jle mov scas mov rol rcr fsubp jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov rol rcl fucom jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe addl mov fnop in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb add enter loopne jmp idiv add unpckhps and sub dec push push pop enter lods enter lods enter lods enter lods enter lods enter push xchg scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov rol rcl fucom jmp push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb and cs inc inc dec push pop pop fs jbe addl mov aad loope in repz incl and das xor push pop pop fs jbe (bad) enter lods enter lods enter lods enter lods enter lods enter mov mov ret leave iret aad loope in repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb add mov scas mov rol rcr fucom jmp or adc pop and inc dec dec push pop pusha data16 jb jle mov enter lods enter lods enter lods enter lods enter lods lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call add and das xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp pop popa add jae jg mov scas mov rol rcr (bad) ljmp adc and sub aaa cmp pop popa insl jae jle mov scas mov mov lods enter lods enter lods enter lods enter lods enter lods rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz std add unpckhps and sub dec add pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb test enter (bad) jmp enter lods enter lods enter lods enter lods enter lods enter idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insb jb jle mov scas mov mov fucom jmp push or sub ss dec dec push pop pusha imul orl lods mov mov fsub call add and das xor push pop pop imul (bad) mov lods mov mov fndisi(8087 out repnz incb adc sbb sub xor cmp dec push pop pop imul (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov fcmovu in icebp idiv add unpckhps lods enter lods enter lods enter lods enter lods enter lods enter es cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub out repz add or pop sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov fneni(8087 out repnz incb adc sbb and das xor push pop pop imul (bad) mov lods mov mov repz sbb cmp push popa imul xchg mov rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je addb stos mov enter lods enter lods enter lods enter lods enter lods enter mov fnop out repnz incb and cs inc inc dec push pop pop fs jbe (bad) xchg stos mov mov fsub out repz incl and xor cmp dec dec push pop pusha data16 jno jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop arpl jne addl mov xlat fucom jmp push or sbb and inc dec dec push pop popa insl jae jg mov mov mov out std or lods enter lods enter lods enter lods enter lods enter and ss dec push popa insb js mov rcr call and inc dec pop gs mov (bad) hlt add sbb cmp push pusha outsl jnp xchg lahf stos mov rcr jmp and pop push mov fucomp repz pop and cmp pop push cmpsb mov leave aam jmp add and cmp pop push mov (bad) lret fsub call add and das xor push pop pop imul orl lods mov mov fsub call add and das xor push pop pop imul orl cmpsl lods mov mov fucom jmp pop or sub ss dec dec push pop pop imul orl lods mov mov fsub call lods enter lods enter lods enter lods enter lods enter ds add or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul addl nop xchg pushf mov rol rcl fucom jmp pop or sub aaa cmp dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop enter lods enter lods enter lods enter lods enter lods enter xor cmp pop popa insl jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop popa insl jae jg mov scas mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jno jns test test mov rol rcl fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec enter lods enter lods enter lods enter lods enter lods enter pop pusha data16 jb jle mov lods mov mov fndisi(8087 out repz incl and cs aas inc dec push push pop arpl je addl mov fcmovu in icebp idiv add push adc and sub cmp pop popa insb jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fsubp ljmp adc pop and inc dec dec push pop add outsb je addb test (bad) int (bad) in lock add push adc xor ds dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub dec push push pop bound enter lods enter lods enter lods enter lods enter lods enter jg mov scas mov rol rcr fsubp jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fucom jmp push or sbb and xor cmp inc add pop pusha data16 jb jge mov lods mov mov fucom call push or sbb and xor cmp dec push pop pop gs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov enter lods enter lods enter lods enter lods enter lods enter mov mov fndisi(8087 out repz incl and das xor push pop pop imul (bad) mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call add and cs inc inc dec push pop pop arpl jbe (bad) mov stos mov mov fnop out repnz add unpckhps and sub add aas inc dec push push pop arpl jne addb stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl je addb stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl je addb stos mov mov lods enter lods enter lods enter lods enter ds aam (bad) in repnz incb unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int3 rcr fsubp jmp pop or and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp enter lods enter lods enter lods enter lods enter lods ljmp adc and sub aaa cmp pop popa data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jno jge mov lods mov mov fndisi(8087 out repz incb add pop sbb cmp dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop bound je addb stos mov mov (bad) in lock add enter lods enter lods enter lods enter lods enter lods enter ds adc pop and inc dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fucom call push or sbb and xor cmp inc dec push pop arpl mov rol rcr fsubp ljmp adc add daa sub dec push push pop arpl jne addl mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp pop popa insl je jg mov scas mov rol rcr fsubp ljmp adc and inc dec dec push enter lods enter lods enter lods enter lods enter lods enter lods enter insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov mov fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push add sub ss dec dec push pop pusha data16 jno jge mov lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb adc xor aas inc dec push push pop arpl jne addl mov fnop out repnz std add unpckhps and sub cmp inc dec push push pop popa push lods enter lods enter lods enter lods enter lods enter lods enter addb test (bad) int fcomp in clc add sbb cmp dec push pop pop imul (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fsub call add push and das xor push pop pop fs jbe (bad) mov stos mov mov fneni(8087 out repnz incl and cs inc inc dec push pop pop fs jbe (bad) xchg stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addb stos mov mov lods enter lods enter lods enter lods enter lods enter aam (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp testb add unpckhps and sub dec push push pop bound je addb stos mov mov fcmovu in icebp idiv add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp pop popa insl jae jg mov scas mov rol rcr fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fucom enter lods enter lods enter lods enter lods enter lods enter cmc sti add or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul test cmpsl lods mov mov fucom add lock sti add or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fucom jmp push or lods enter lods enter lods enter lods enter lods enter adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fcomp in out cmc sti add or sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jge mov scas mov mov fucom call push or pop sbb cmp dec push pop pop fs jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl je addb stos mov mov fnop out repnz incb or adc xor lods enter lods enter lods enter lods enter lods enter cmp inc dec push push pop popa insl jae jg mov scas mov mov fucom call push or sbb and xor cmp inc dec push pop pop imul orl lods mov add fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and das xor push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incb adc sbb daa sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec dec push enter lods enter lods enter lods enter lods enter lods enter ds popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa data16 jb jle mov test (bad) int fcomp in lock add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov mov fucom call push or pop sbb cmp inc dec push pop pop imul orl lods mov mov fndisi(8087 out repz incb adc sbb sub dec push push pop arpl jne addl mov fnop in icebp idiv add unpcklps and sub cmp inc dec dec push pop popa insl jb jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jno enter lods enter lods enter lods enter lods enter jge,pt mov lods mov mov fsub call push or sbb cmp dec push pop pop fs jbe (bad) mov (bad) xchg fwait mov mov fucom jmp push or sbb and xor cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push pop pop fs jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl lods enter lods enter lods enter lods enter lods enter lods movsl stos mov mov fnop out icebp idiv add unpckhps and sub dec push push pop bound je jnp xchg mov mov fnop out icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub aaa cmp pop popa insb jb jle mov lods mov mov fsub jmp push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fsub call push or sbb and das xor push pop pusha imul orl lods mov mov enter lods enter lods enter lods enter lods enter lods enter fsub call push or pop sbb cmp dec push pop pop add jb jle mov scas mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jge mov scas mov mov fucom call push or pop sbb cmp dec push pop pop imul xchg cwtl sahf movsb stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov fchs out repnz std add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp jmp lods enter lods enter lods enter lods enter lods out cmc sti add or sub aaa cmp push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or sbb cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl lods enter lods enter lods enter lods enter lods enter pop sbb add dec dec push pop pop imul orl lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fnop out repnz std add unpckhps and sub cmp inc dec push push pop popa insl jae addb test (bad) int3 rcr fsubp jmp pop or sub ss inc dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe addl mov fndisi(8087 out repnz incb adc sbb and das enter lods enter lods enter lods enter lods enter lods enter xor push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) xchg stos mov mov fnop out repnz incb adc xor inc inc dec push push pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop popa outsb je addb test (bad) int (bad) in lock add push adc pop and inc dec dec push pop pusha data16 jno jge mov lods mov mov fsub call push add sub ss dec dec push enter lods enter lods enter lods enter lods enter lods pop pusha data16 jb jle mov lods mov rol rcl fucom jmp pop or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub jmp push or sbb and xor cmp dec dec push popa insl dec popa push xchg mov mov fnop out repnz incb adc sbb cmp dec push pop pop imul orl lods mov mov in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods enter lods enter lods enter lods enter lods enter nop xchg pushf mov ret rcr fsubp jmp add and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz std add push adc pop and das xor push push pop bound jb jge mov stos mov mov (bad) fsub out repnz incb or adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop fs enter lods enter lods enter lods enter lods enter lods enter jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insl jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub lods enter lods enter lods enter lods enter lods enter lods inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) lret rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub dec dec push pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add enter lods enter lods enter lods enter lods enter push sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aad enter lods enter lods enter lods enter lods enter lods enter jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsubp jmp add and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in lock add or sub xor aas inc dec push push pop popa data16 jno jl mov test lods enter lods enter lods enter lods enter lods enter lods enter rol rcl fsub out repnz add push adc push and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop gs jne addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae enter lods enter lods enter lods enter lods enter lods enter lods enter (bad) xchg lcall ret rcr fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb unpcklps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub cmp lods enter lods enter lods enter lods enter lods enter ds push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub xor aas inc dec dec push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sbb lods enter lods enter lods enter lods enter lods enter lods enter xor aas inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add or sub xor push push pop popa insb jb jge mov test (bad) int3 rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne enter lods enter lods enter lods enter lods enter lods enter lods jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop bound jb jle mov stos mov mov xlat fsub call add push adc pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl enter lods enter lods enter lods enter lods enter lods enter (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge enter lods enter lods enter lods enter lods enter lods enter mov test vaddsubps fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or push sbb daa sub cmp pop pop imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push enter lods enter lods enter lods enter lods enter lods enter arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov fcmovu in lock add or pop sbb sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) lret fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpckhps and inc inc dec push pop pop arpl jae jg mov lods mov mov fcomp in out hlt cli add or push sbb enter lods enter lods enter lods enter lods enter lods enter lods daa sub dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov aad loope in icebp enter lods enter lods enter lods enter lods enter lods idiv add or sub xor push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop arpl jae jle mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fsub out repnz add push adc push and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov enter lods enter lods enter lods enter lods enter lods enter rcr fsubp jmp push or pop sbb sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb and das xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loope in icebp idiv add or sub xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop fs jne addl enter lods enter lods enter lods enter lods enter ds popf mov mov fnop in lock add or sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or sub xor aas inc dec dec push pop pusha enter lods enter lods enter lods enter lods enter lods enter lods enter jbe (bad) xchg test (bad) aad loope in repnz add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add or sub xor push push pop popa insl jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and lods enter lods enter lods enter lods enter lods enter lods enter cmp dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli add lods enter lods enter lods enter lods enter lods enter or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop imul addl mov enter lods enter lods enter lods enter lods enter lods enter lods aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov lods enter lods enter lods enter lods enter lods enter movsb test vaddsubps fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound enter lods enter lods enter lods enter lods enter lods enter lods enter orl stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fsub call add unpckhps and enter lods enter lods enter lods enter lods enter lods inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop gs jne addl mov aad loopne jmp idiv add or lods enter lods enter lods enter lods enter lods enter adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl jae jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods (bad) into aam loopne lock pop push adc and test enter add sub cmp inc dec dec push pusha push orb mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push push pop arpl add (bad) mov lods mov mov fndisi(8087 enter lods enter lods enter lods enter lods enter lods out hlt cli incl and das xor push pop pop fs jbe xchg fwait mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop add inc inc dec push push pop bound jae jg mov stos mov mov enter lods enter lods enter lods enter lods enter ds int3 rcl fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods add into aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter cwtl popf mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test (bad) lret fneni(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor dec push pop pop imul nop xchg pushf mov mov (bad) in out hlt cli add and sub aaa cmp lods enter lods enter lods enter lods enter lods enter pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop in icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) lret rcl fsub out repnz incb or adc pop and xor push push pop bound jb jge mov stos mov mov rcr fsubp jmp add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb unpckhps lods enter lods enter lods enter lods enter lods enter and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpckhps and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop add push jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop gs jbe addl mov aam enter lods enter lods enter lods enter lods enter lods loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter scas mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jns test cmpsb stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fsub out repnz std add push adc push and das xor aas inc dec push push pop popa enter lods enter lods enter lods enter lods enter lods enter lods data16 jno jl xchg test mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop arpl jne addb cmpsb lods mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop gs jne addb test mov mov fnop in lock add or sub xor ds dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb lods enter lods enter lods enter lods enter lods enter and sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp in out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos scas mov rol rcl fndisi(8087 out repnz std add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jb jle test cmpsb stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov xlat fucom call add push adc pop and xor cmp dec push push pop bound jb jle mov stos scas mov rol rcl fcmovne lods enter lods enter lods enter lods enter lods enter loope in repnz add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul addl mov aam loopne jmp idiv add add sub xor aas inc dec push push pop pusha imul (bad) mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa data16 jb jge mov stos mov mov (bad) fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jle mov lods enter lods enter lods enter lods enter lods enter movsl stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov cmpsb lods mov mov fcomp jecxz out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs lods enter lods enter lods enter lods enter lods enter lods enter jp test cmpsb lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl unpckhps and daa sub aaa cmp pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb daa enter lods enter lods enter lods enter lods enter ds dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov mov fsub out repnz add push adc push and das xor push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add push adc pop and das xor push push pop popa data16 jno jl xchg test mov mov fnop in enter lods enter lods enter lods enter lods enter lods enter idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp aas inc dec push push pop bound jb jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec dec push pop popa data16 jno jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) lret fnop in lock add or pop sbb sub dec dec push pop pop fs jne addb cmpsl lods enter lods enter lods enter lods enter lods enter lods enter mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb sub dec dec push pop pop gs jne addl mov rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul lods enter lods enter lods enter lods enter lods enter jbe,pt addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec add popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop bound je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss lods enter lods enter lods enter lods enter ds inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add push adc pop and das xor push push pop popa data16 jno jl xchg stos scas mov rol rcl faddl loop out repz incb unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg test (bad) lret fnop in icebp (bad) enter lods enter lods enter lods enter lods enter lods enter lods enter or sub xor ds dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli add or push sbb daa sub cmp pop pop add jbe addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor inc inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test lods enter lods enter lods enter lods enter lods enter lods enter rol rcl fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) (bad) fndisi(8087 out icebp add incb or adc pop and xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor inc inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jl lods enter lods enter lods enter lods enter lods enter lods enter (bad) xchg test (bad) lret fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha imul add sahf movsb stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc pop and das xor lods enter lods enter lods enter lods enter lods enter push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add add adc xor cmp dec push push pop bound je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add lods enter lods enter lods enter lods enter lods enter lods enter adc pop and das xor push push pop popa insb jb jge mov movsb stos mov mov xlat fucom call add push adc pop and xor push push pop popa insb jb jge mov test (bad) aad loope in repnz std add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov lods enter lods enter lods enter lods enter lods enter lods enter rcr fucom call add unpckhps and daa sub cmp pop pop gs jbe addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or push sbb daa sub cmp pop pop imul enter lods enter lods enter lods enter lods enter lods enter lods enter mov mov aam (bad) ljmp adc sbb sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp in out cmc cli add or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt sti add or push sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and sub aaa add lods enter lods enter lods enter lods enter lods enter dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je addb cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov aad loopne jmp idiv add or lods enter lods enter lods enter lods enter lods enter lods enter pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs (bad) rcr in stc add sbb sub inc dec push popa imul xchg sahf test in idiv or sbb xor inc push pop arpl (bad) mov leave aam jmp sbb das cmp pop bound mov rcr call and data16 mov fxam icebp cld pop adc push pusha jle xchg lahf stos mov lret (bad) loopne testb sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne enter lods enter lods enter lods enter lods enter lods enter lods jmp idiv add or sub xor inc inc dec push push pop popa data16 jno jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods enter lods enter lods enter lods enter lods enter lods mov mov (bad) in out cmc sti add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in lock add or pop sbb xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne in repnz add or sub xor inc inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor push push pop popa insl jb lods enter lods enter lods enter lods enter lods enter lods enter js orl stos scas mov rol rcl fsub out repnz std add push adc pop and xor cmp dec push push pop bound jae jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and lods enter lods enter lods enter lods enter lods enter lods enter cmp inc dec push pop pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add push adc pop and das xor dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call lods enter lods enter lods enter lods enter lods enter lods enter add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov rcr fsubp jmp add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je addb cmpsl lods mov mov lods enter lods enter lods enter lods enter lods enter rcr fsubp jmp add and sub dec dec push pop pop fs jne addb test mov mov fnop in icebp idiv add or sbb cmp inc dec dec push pop add insb jb jge mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fnop in lock add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out cmc cli add or push sbb daa sub dec dec push pop pop fs jne or lods enter lods enter lods enter lods enter lods enter lods enter mov lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb es aaa cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and inc enter lods enter lods enter lods enter lods enter lods enter dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpcklps and inc inc dec push push pop bound add test cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add enter lods enter lods enter lods enter lods enter lods enter sbb cmp inc dec push push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out icebp idiv add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl jae jle mov stos mov mov lods enter lods enter lods enter lods enter lods enter fucom call add unpckhps and inc inc dec push push pop bound je jg mov xchg xchg pushf mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb test mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jb jge mov test (bad) int3 rcl fsub out repz incb or adc pop and xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jb jle mov lods enter lods enter lods enter lods enter lods enter lods xchg cltd lahf movsb stos mov mov (bad) fucom call add unpcklps sbb es aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp enter lods enter lods enter lods enter lods enter lods enter push jne addb add (bad) leave iret aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) lret fnop in lock add or pop sbb daa sub dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl lods enter lods enter lods enter lods enter lods enter es xor cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov add enter lods enter lods enter lods enter lods enter lods enter lods (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc add push pop pop arpl je jg mov enter lods enter lods enter lods enter lods enter mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop enter lods enter lods enter lods enter lods enter lods enter imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl mov test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop add insl jb jge mov stos mov mov xlat fsub call add push adc pop enter lods enter lods enter lods enter lods enter ds inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jle mov stos mov mov (bad) fsub out repz incb or adc pop and xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out out repz incb and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz lods enter lods enter lods enter lods enter lods enter repz incb unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub aaa cmp pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jbe jl xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter lods enter mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fsub out repnz add push adc push and das xor push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fndisi(8087 out repnz std add or adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl enter lods enter lods enter lods enter lods enter lods enter je,pt jg mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fsub out repnz std add push adc push and xor push push pop bound jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insl jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov movsl stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jae jg mov stos mov mov xlat fucom call add unpcklps and lods enter lods enter lods enter lods enter lods enter cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub call add push adc add sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov xlat fucom call lods enter lods enter lods enter lods enter lods enter lods stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl add leave iret aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop arpl je jg mov lods mov enter lods enter lods enter lods enter lods enter lods enter ds fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub add cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne enter lods enter lods enter lods enter lods enter lods enter nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov rcr fsubp jmp add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp lods enter lods enter lods enter lods enter lods enter inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jbe addl mov aam (bad) ljmp adc sbb es aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz add movaps xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push enter lods enter lods enter lods enter lods enter lods pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fndisi(8087 out icebp idiv add or lods enter lods enter lods enter lods enter lods enter lods enter cs aas inc dec push push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) enter lods enter lods enter lods enter lods enter ds idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov lods enter lods enter lods enter lods enter lods enter lods enter ret rcr fsubp jmp add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out cmc cli add and sub aaa cmp pop pop imul lods enter lods enter lods enter lods enter jp,pt test cmpsb lods mov mov fcomp in out hlt cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop popa data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor aas enter lods enter lods enter lods enter lods enter lods enter lods enter push pop pusha data16 jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov (bad) fsub out repnz std add push adc pop and xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add enter lods enter lods enter lods enter lods enter lods enter lods unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov enter lods enter lods enter lods enter lods enter lods (bad) in out cmc cli add and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait enter lods enter lods enter lods enter lods enter lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec push push pop pusha enterw lods enter lods enter lods enter lods enter lods enter imul (bad) xchg test (bad) lret fnop in lock add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub cmp pop pop fs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub enter lods enter lods enter lods enter lods enter lods enter inc dec push push pop popa data16 jno jl xchg test (bad) lret fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov (bad) fsub out repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call lods enter lods enter lods enter lods enter lods enter lods incb unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push push pop arpl je jg mov lods mov mov fcomp jecxz out repz incb unpcklps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov enter lods enter lods enter lods enter lods enter lods enter fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov lods enter lods enter lods enter lods enter lods enter cltd sahf movsb test (bad) (bad) fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push enter lods enter lods enter lods enter lods enter lods enter ds arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb enter lods enter lods enter lods enter lods enter xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out enter lods enter lods enter lods enter lods enter ds stc incl unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb sub dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov lods enter lods enter lods enter lods enter lods enter (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fnop out icebp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) aad loopne jmp idiv add or sub xor inc inc dec push push pop bound jb jge mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg enter lods enter lods enter lods enter lods enter lods enter nop xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push enter lods enter lods enter lods enter lods enter lods enter ds pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fsub out repnz std add push adc push and das xor inc inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz add push adc enter lods enter lods enter lods enter lods enter lods push and das xor push push pop popa data16 jno jl mov stos scas mov rol rcl fsub out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp in out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov fcomp in lods enter lods enter lods enter lods enter lods enter lods enter out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp inc dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl mov test enter lods enter lods enter lods enter lods enter ds mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop imul enter lods enter lods enter lods enter lods enter lods enter mov lods mov mov fcomp jecxz out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and xor lods enter lods enter lods enter lods enter lods enter dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or enter lods enter lods enter lods enter lods enter sbb cmp inc dec dec push pop pusha imul call jbe xchg fwait mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop imul addl mov mov fndisi(8087 out repnz add push adc pop and das xor push push pop bound imul nop xchg fwait mov mov lods enter lods enter lods enter lods enter lods enter lods enter rcr fsubp jmp add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor add dec push push pop bound jae jle mov stos mov mov fcomp jecxz out add cli add and sub cmp pop pop fs jne addl lods enter lods enter lods enter lods enter lods enter xchg xchg pushf mov mov fnop in icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jge mov test lds int3 rcl fsub out repnz std add push adc push and inc inc dec push push pop bound jae add mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp lods enter lods enter lods enter lods enter lods enter lods enter pop imul nop xchg pushf mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push add bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or enter lods enter lods enter lods enter lods enter lods enter and sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loope in repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fnop in icebp idiv add or sub xor push pop pusha data16 jb jge mov lods mov mov fucom jmp add push adc and sub cmp inc dec push push pop bound je addb test aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc lods enter lods enter lods enter lods enter lods enter sbb and das xor push push pop popa insb jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl add lret fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop add insl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fmul lods enter lods enter lods enter lods enter lods enter fsubp jmp add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb add inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call incl and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop fs jne addb lods enter lods enter lods enter lods enter lods enter mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsb lods mov mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul jge mov stos scas mov rol rcl fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop enter lods enter lods enter lods enter lods enter lods enter je jg mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec add pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb enter lods enter lods enter lods enter lods enter ds sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov add (bad) jmp idiv add or pop sbb daa sub dec dec push pop pop fs jne addb mov mov fneni(8087 out icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aam loopne lods enter lods enter lods enter lods enter lods enter lods enter in icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop add insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addb enter lods enter lods enter lods enter lods enter ds mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop gs jne addl mov aam (bad) add icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl lods enter lods enter lods enter lods enter lods enter lods enter jns test cmpsb lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs add (bad) xchg test (bad) aad loope in icebp idiv add push adc push and sub cmp dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and enter lods enter lods enter lods enter lods enter lods sub aaa cmp pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl mov test (bad) aad loopne jmp idiv add or adc push and das xor aas inc dec push push pop popa data16 jno jge mov test rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz enter lods enter lods enter lods enter lods enter lods enter lods out hlt stc incl adc xor cmp inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jg add cmpsl lods mov mov (bad) in lock add or pop sbb cmp aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods enter lods enter lods enter lods enter lods enter lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov (bad) fndisi(8087 out repnz add push adc pop and das xor push push pop popa insl jb jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl enter lods enter lods enter lods enter lods enter lods enter test movsl stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl jae jle mov cmpsb lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec add pusha imul addl mov aad loope in repnz std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and lods enter lods enter lods enter lods enter lods enter aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and add aaa cmp pop pop gs jne addb cmpsl lods mov mov flds (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jle mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt enter lods enter lods enter lods enter lods enter lods cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 js orl stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push push pop arpl jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop fs jne addb test mov enter lods enter lods enter lods enter lods enter lods enter mov fnop in lock add or pop sbb cmp add push push pop bound jb jle mov stos mov mov xlat fsub out repz incl adc xor cmp inc dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha jns xchg mov mov fnop stc incl and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov lods enter lods enter lods enter lods enter lods enter mov ret rcr (bad) ljmp or sub xor aas inc dec push push pop pusha imul (bad) xchg test rol rcl fsub out repnz incb unpcklps pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor push push pop popa insl jb jge mov stos mov mov (bad) fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop fs enter lods enter lods enter lods enter lods enter lods enter jne,pt addb mov mov fnop in lock add or pop sbb cmp aas inc dec push push pop popa insl jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb test mov mov fnop in icebp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) lret rcl fsub out repnz std add push adc push and das xor push push pop popa data16 jno jl mov test (bad) lret fndisi(8087 out repnz add or and lods enter lods enter lods enter lods enter lods enter lods cmp dec push push pop bound jae jle mov stos mov mov rcr fsubp ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock cld add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb add (bad) lret fneni(8087 out icebp (bad) enter lods enter lods enter lods enter lods enter lods enter pop or sub xor aas inc dec push push add insl jae jle mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock sti add or pop sbb xor aas inc dec push push pop popa data16 jno jl mov test lods enter lods enter lods enter lods enter lods enter (bad) (bad) fsub add out repz incb unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom jmp add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl add lods enter lods enter lods enter lods enter lods enter lods addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl jae jg mov lods mov mov in repz incl cmp inc dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb sub ds push push pop arpl jne addl mov fndisi(8087 out repnz incl and das xor push pop pop imul orl lods mov lods enter lods enter lods enter lods enter lods enter ds (bad) fucom jmp push or sbb and xor cmp dec dec push pop popa insl jae jg mov rol rcl fucom call add unpckhps and inc inc dec push push pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov enter lods enter lods enter lods enter lods enter lods test (bad) lret rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or sub xor aas inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop gs jne lods enter lods enter lods enter lods enter lods enter lods jnp xchg lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha data16 jno jge mov test vaddsubps fsub out repnz add push adc pop and das xor push push pop bound jb jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl scas mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor lods enter lods enter lods enter lods enter lods enter lods enter pop bound jb jge mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add lods enter lods enter lods enter lods enter lods enter push sbb daa sub cmp pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jg mov lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop fs jne addb test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop popa insl jb jge mov test (bad) lret rcl fsub enter lods enter lods enter lods enter lods enter lods enter clc std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor push push pop popa insl jb jge mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl jae jg mov stos mov lods enter lods enter lods enter lods enter lods enter ret rcr fsubp jmp add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl jae jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul lods enter lods enter lods enter lods enter lods enter lods enter mov lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in repnz add push adc push and das xor push push pop popa insl jb jge mov stos mov mov (bad) fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push enter lods enter lods enter lods enter lods enter lods enter popa data16 jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul orl mov (bad) fndisi(8087 out repnz add or sub xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb enter lods enter lods enter lods enter lods enter lods enter ds sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in repnz add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add push adc pop and xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp enter lods enter lods enter lods enter lods enter ds add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov (bad) fndisi(8087 out icebp idiv add push adc push and das xor push push pop popa insb jb jge mov stos scas mov ror lods enter lods enter lods enter lods enter lods enter (bad) int3 rcl fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fsub call add push adc and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop enter lods enter lods enter lods enter lods enter lods enter lods enter cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec push push pop pusha data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa enter lods enter lods enter lods enter lods enter lods enter ja (bad) mov test (bad) lret rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb and cs aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das enter lods enter lods enter lods enter lods enter lods enter lods enter inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz add push adc push and das xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb sub dec dec push pop pusha imul addl mov aad loope in icebp idiv enter lods enter lods enter lods enter lods enter add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fucom call add push adc pop and inc inc dec push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) lods enter lods enter lods enter lods enter lods enter lods enter loope in repnz add or sub xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fsub call add unpcklps and inc inc dec push push pop bound jae jle mov lods enter lods enter lods enter lods enter lods enter mov mov fcomp in out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop arpl lods enter lods enter lods enter lods enter lods enter outsb jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor enter lods enter lods enter lods enter lods enter lods aas inc dec push push pop pusha data16 jno jl mov test (bad) lret rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fnop in icebp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) aad loope in repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or lods enter lods enter lods enter lods enter lods enter lods adc sbb sub dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop imul addl mov aad enter lods enter lods enter lods enter lods enter lods enter out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jb jge mov test (bad) xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop gs jne addl lods enter lods enter lods enter lods enter lods enter lods enter lods mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul lods enter lods enter lods enter lods enter lods enter jl xchg scas mov mov fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec enter lods enter lods enter lods enter lods enter lods enter lods dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or lods enter lods enter lods enter lods enter lods enter lods enter push and cs aas inc dec push push pop jne addl mov loope idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add lods enter lods enter lods enter lods enter lods enter lods enter push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jg mov cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov lods enter lods enter lods enter lods enter lods enter fnop in icebp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsb lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out cmc cli add and add dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg lods enter lods enter lods enter lods enter lods xchg cwtl sahf mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) aad loope in repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret fnop in lock add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aam loopne jmp idiv add or sbb cmp inc dec dec enter lods enter lods enter lods enter lods enter lods enter pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) lret rcl fsub out repnz std add push adc pop and xor push push pop popa insl jb jge mov stos scas mov rol rcl fucom call add unpcklps pop and inc add push pop pop imul nop xchg pushf mov mov (bad) in lock sti add or push sbb daa sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl lods enter lods enter lods enter lods enter lods enter lods enter and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov rcr fsubp jmp add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test vaddsubps fmul lods enter lods enter lods enter lods enter lods enter lods enter out repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop add jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pop imul addl enter lods enter lods enter lods enter lods enter mov mov fnop in lock add or sbb and cs aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa insl jb jle mov stos mov mov xlat fsub call incl and sub aaa cmp pop pop fs jne addb test mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 enter lods enter lods enter lods enter lods enter lods jno jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop popa data16 jno jl orl stos scas mov rol rcl fsub call add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom jmp add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli add or push sbb daa sub enter lods enter lods enter lods enter lods enter cmp pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or adc push and das xor push push pop bound jb jge mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl mov test (bad) (bad) fndisi(8087 out icebp (bad) enter lods enter lods enter lods enter lods enter lods enter ds add or sub xor aas inc dec push push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl mov movsl stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jb jge mov test lods enter lods enter lods enter lods enter lods enter lods enter rol rcl fndisi(8087 out repnz add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz add push adc pop and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl enter lods enter lods enter lods enter lods enter lods enter xchg cwtl sahf mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec enter lods enter lods enter lods enter lods enter lods enter ds push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc add pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or enter lods enter lods enter lods enter lods enter and xor ds dec dec push pop pusha imul (bad) xchg test (bad) aad fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl jae jg mov lods mov mov fcomp in out hlt cli incl and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl je jg mov stos mov mov fmul lods enter lods enter lods enter lods enter lods enter lods enter fsubp jmp add and sub aaa cmp pop pop add jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg lods enter lods enter lods enter lods enter lods enter lods enter test vaddsubps fndisi(8087 out icebp add incb or adc pop and xor push push pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov (bad) fsub out repnz add push adc push and das xor push push pop popa addr16 lods enter lods enter lods enter lods enter lods enter js addl (bad) xchg lcall rol rcr fsubp jmp add and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or sbb and cs aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc sbb and enter lods enter lods enter lods enter lods enter lods enter inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop gs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov rol rcl fsub out repnz lods enter lods enter lods enter lods enter lods enter clc std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb and das xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor add dec dec push pop pop imul nop xchg fwait mov mov lods enter lods enter lods enter lods enter lods enter enter fsubp jmp add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jg mov stos mov mov fcomp in out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and das xor push push pop popa data16 jno jge mov test add int3 rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop popa data16 jno jl lods enter lods enter lods enter lods enter lods enter lods enter xchg cwtl popf mov mov fndisi(8087 out repnz add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop arpl jae jg mov stos mov mov xlat fucom jmp add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor push add bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and xor cmp enter lods enter lods enter lods enter lods enter lods enter push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fldl jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add enter lods enter lods enter lods enter lods enter adc sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov fcomp in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pop gs jno jl mov test (bad) (bad) fndisi(8087 out repnz add or sub xor push push pop popa insb jb jge mov stos scas mov rol ror lods enter lods enter lods enter lods enter lods enter xlat fsub out repz incb unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop imul xchg xchg popf mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov lods enter lods enter lods enter lods enter lods enter lods enter lahf movsl stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl jae jg mov stos mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loope in repnz std add push gs mov int (bad) in icebp idiv add unpckhps and sub dec push pop pop fs jbe (bad) mov lods mov mov fucom jmp add push adc and push pop popa data16 jno jl mov test vaddsubps fsub out repnz std add push adc enter lods enter lods enter lods enter lods enter lods push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fnclex out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop imul nop xchg fwait add mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov rcr fnop lods enter lods enter lods enter lods enter lods enter ljmp adc sbb es aaa cmp dec dec push pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa add xor aas inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov enter lods enter lods enter lods enter lods enter lods enter scas mov mov fsub out repnz std add push adc push and das xor push push pop popa insl jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov add fcmovu in lock sti add or pop sbb sub xor ds dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb daa sub dec dec push pop pusha gs lods enter lods enter lods enter lods enter lods enter lods enter addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and das xor dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and lods enter lods enter lods enter lods enter lods enter lods enter inc dec push push pop arpl jae jg mov stos mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov add fsubp jmp push or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp lods enter lods enter lods enter lods enter lods enter add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop popa add jae jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jg mov lods mov mov lods enter lods enter lods enter lods enter lods enter lods enter rcr fsubp jmp add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock cld add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl enter lods enter lods enter lods enter lods enter lods enter cwtl sahf mov mov fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa data16 jno jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge orl stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpcklps pop and inc inc enter lods enter lods enter lods enter lods enter ds push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl add push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp enter lods enter lods enter lods enter lods enter lods enter lods adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop bound jb jle mov movsl stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov enter lods enter lods enter lods enter lods enter lods enter in lock add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) (bad) fndisi(8087 out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and xor push push pop bound jb jge mov lods enter lods enter lods enter lods enter lods enter lods lahf movsb stos mov mov (bad) fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc push and inc inc dec push push pop bound jae jle mov stos mov add fucom call add unpckhps and sub ss dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop enter lods enter lods enter lods enter lods enter lods enter lods gs jne addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc add push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz incb or adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsubp jmp add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add and enter lods enter lods enter lods enter lods enter lods enter aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp pop pop arpl je jg mov lods mov mov add (bad) ljmp adc sbb sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out enter lods enter lods enter lods enter lods enter lods enter stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl imul nop xchg pushf mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov enter lods enter lods enter lods enter lods enter lods enter ds xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc add add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop arpl je or lods enter lods enter lods enter lods enter lods enter lods enter test cmpsb lods mov mov (bad) in out cmc cli add and sub cmp pop pop gs jne addl mov mov fneni(8087 out icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp in out hlt cli add and sub aaa cmp lods enter lods enter lods enter lods enter lods enter ds push pop pop imul xchg xchg pushf mov mov (bad) in lock add or pop add and das xor aas inc dec push push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out icebp idiv add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or enter lods enter lods enter lods enter lods enter lods enter pop sbb sub dec dec push pop pop imul addl mov rol rcl fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop popa data16 jno jl xchg test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop gs jne addl mov aam enter lods enter lods enter lods enter lods enter lods enter jmp idiv add or sub xor add dec push push pop bound jae jle mov stos mov mov xlat fucom call add and sub aaa cmp dec dec push pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jg mov enter lods enter lods enter lods enter lods enter lods stos mov mov rcr (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) mov test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop add enter lods enter lods enter lods enter lods enter lods enter jno jl xchg scas mov mov fneni(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb unpckhps and lods enter lods enter lods enter lods enter lods enter inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb sub dec dec push pop pop gs jne addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jle add cmpsb stos mov mov fcomp in out hlt cli dec lods enter lods enter lods enter lods enter lods enter adc sbb es aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) jmp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or and das xor push push pop bound jb jle mov stos mov mov lods enter lods enter lods enter lods enter lods enter lods enter fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov add (bad) int3 rcl fucom call add unpcklps and inc inc dec push pop pop arpl jae jg mov lods enter lods enter lods enter lods enter lods enter movsl stos mov mov fcomp in out hlt cli add and sub aaa cmp pop pop fs jne addb es pop push mov (bad) int3 rcr fsubp in cli add xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incb and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov add (bad) in out hlt cli add and sub aaa cmp pop pop gs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop imul lods enter lods enter lods enter lods enter lods enter lods enter lea scas mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp in out cmc cli add and sub aaa cmp push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul xchg fwait mov mov fcomp in out cmc sti add or push sbb daa sub dec dec push enter lods enter lods enter lods enter lods enter lods enter push jne addb test mov mov fcmovu in lock add or sub xor aas inc dec push push pop pusha data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc dec dec push pop pop imul nop xchg fwait mov mov (bad) in out add sti add or pop sbb sub dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa insl jb jle mov stos mov mov xlat fucom call add unpcklps and lods enter lods enter lods enter lods enter lods enter ds inc inc dec push push pop arpl jae jg mov lods mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz daa sub dec dec push pop pop fs jne addb cmpsl lods mov add fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call lods enter lods enter lods enter lods enter lods enter lods enter add and sub aaa cmp dec dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb sub dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test mov mov fnop in lock add or pop sbb cmp inc dec add pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop imul xchg xchg pushf mov mov enter lods enter lods enter lods enter lods enter ds into aam (bad) ljmp adc sbb sub dec dec push pop pop imul lea mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out add cld add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) lret fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov lods enter lods enter lods enter lods enter lods enter lods enter mov rol rcl fndisi(8087 out repnz add or sub xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pusha imul addl sahf movsb test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call adc and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne enter lods enter lods enter lods enter lods enter lods enter xchg cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub cmp lods enter lods enter lods enter lods enter lods enter lods inc dec dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul test mov mov (bad) fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jle mov lods mov mov fcomp in out hlt cli add lods enter lods enter lods enter lods enter lods enter lods enter and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec add popa data16 jno jge mov test (bad) aad loope in repnz add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc xor cmp inc dec push push pop arpl jae jle mov stos mov mov xlat fnop lods enter lods enter lods enter lods enter lods enter call add xor cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add and sub aaa cmp pop pop gs jne addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb sub dec dec push pop pop gs jbe addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test lods enter lods enter lods enter lods enter lods enter lods enter lret fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) lret rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle test cmpsb stos mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg xchg mov mov fcomp in out hlt cli incl and sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub xor ds dec dec push pop pusha imul addl lods enter lods enter lods enter lods enter xchg popf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push enter lods enter lods enter lods enter lods enter lods enter lods enter imul (bad) xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je jg mov stos add into aam (bad) ljmp sbb xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa enter lods enter lods enter lods enter lods enter lods enter lods sub dec dec push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec add pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov mov (bad) in out cmc cli add lods enter lods enter lods enter lods enter lods enter adc sbb es aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub dec add pop pusha data16 jno jl mov test (bad) (bad) fndisi(8087 out repnz add or sub xor push push pop popa data16 jno jl xchg test mov mov enter lods enter lods enter lods enter lods enter ds iret aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp sbb cs aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fsub out in repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov lods enter lods enter lods enter lods enter lods enter lods enter stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov test (bad) (bad) fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa data16 jno jl xchg test (bad) lret fnop in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add push adc push and das xor push push pop popa data16 jb js orl stos mov mov xlat fsub call add unpcklps and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop enter lods enter lods enter lods enter lods enter lods arpl jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out hlt cli incl sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor lods enter lods enter lods enter lods enter lods enter lods enter cmp inc dec push push pop popa data16 jno jl xchg test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and sub ss inc dec push pop pop arpl jae jle mov cmpsb lods mov mov (bad) in out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or sub push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl lods enter lods enter lods enter lods enter lods enter es aaa cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor inc inc dec push push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc add pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg test mov mov enter lods enter lods enter lods enter lods enter lods enter loope in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fsub out repz incb unpckhps and inc inc dec push push pop bound jae jle mov aam loopne in repnz add cmp dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out repz incb unpcklps and inc inc dec push push pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je addb cmpsb lods mov mov fcomp enter lods enter lods enter lods enter lods enter lods enter out repz incb unpcklps pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jge mov stos mov mov (bad) fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jle mov cmpsb stos mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out cmc cli add and sub aaa cmp pop pop arpl je jg mov lods enter lods enter lods enter lods enter lods enter lods enter movsl stos mov mov xlat fucom call add movhps xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas add push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul enter lods enter lods enter lods enter lods enter mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov add fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov mov xlat fsub call add unpcklps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb adc xor cmp inc dec push enter lods enter lods enter lods enter lods enter lods enter push pop arpl jae jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop arpl jae jg mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp pop pop imul mov scas mov mov fnop in lock add or pop sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov fcomp jecxz out repz incb unpckhps enter lods enter lods enter lods enter lods enter and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add push or pop pop sub imul xchg cltd lahf movsl stos mov mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fsub call push or pop push and xor cmp dec dec push pop pusha gs mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp lods enter lods enter lods enter lods enter lods inc dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp repnz add or sub xor aas inc dec push push pop popa data16 jno jl mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fucom call add push adc pop and das xor push push pop popa insb jb jge mov mov leave aam (bad) ljmp adc sbb lods enter lods enter lods enter lods enter lods enter xor aas inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addb cmpsl lods mov mov fcmovu in lods enter lods enter lods enter lods enter lods enter cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or xor dec dec push pop pop imul nop xchg fwait mov mov add loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test lods enter lods enter lods enter lods enter lods enter lods enter lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc push and xor push push pop bound jb jle mov stos scas mov rol rcl fsub out repz incb or adc pop and xor push push pop bound imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push push pop bound jae jg lods enter lods enter lods enter lods enter lods enter lods enter mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add pop or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push enter lods enter lods enter lods enter lods enter lods enter lods enter imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb and das xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov movsl stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz add or das cmp push jbe (bad) mov lods mov mov fsub call add and das xor enter lods enter lods enter lods enter lods enter lods enter lods push pop pop outsl jnp lea mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov out cmc cli add and sub dec dec push pop pop fs jne addb mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha enter lods enter lods enter lods enter lods enter lods enter lods enter ja (bad) xchg test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov mov enter hlt cli add or sbb and inc dec dec push pop pusha imul ja (bad) mov test vaddsubps fndisi(8087 out repnz std add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fsub out repnz incb or adc xor cmp inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop arpl lods enter lods enter lods enter lods enter lods enter outsb je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop imul xchg xchg pushf mov mov fcomp jecxz out hlt cli add push or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and cmp lods enter lods enter lods enter lods enter lods enter lods dec popa push xchg mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop data16 mov ret rcr fucom call add unpckhps and sub aaa cmp pop pop imul nop xchg fwait mov mov xlat fucom call incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addb test mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop enter lods enter lods enter lods enter lods enter lods enter ds data16 jno jl mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop popa insl jb jge test movsl stos mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt cli add and lods enter lods enter lods enter lods enter lods enter es aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz std add add adc xor cmp dec dec push pop pop arpl je jg mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop popa insl jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz lods enter lods enter lods enter lods enter lods enter lods call add unpcklps and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl je jg mov cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl lods enter lods enter lods enter lods enter lods enter lods lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or add das xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl enter lods enter lods enter lods enter lods enter lods enter lods je jg mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa data16 jb jge mov test rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub enter lods enter lods enter lods enter lods enter lods enter lods aaa cmp pop pop arpl je jg mov lods mov mov fcomp in out cmc cli add and sub aaa cmp push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) aad loope in icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli enter lods enter lods enter lods enter lods enter lods enter lods enter adc sbb daa sub aaa cmp pop pop gs jne addl mov add fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov test (bad) lret rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov enter lods enter lods enter lods enter lods enter lods enter rcr fucom call add unpckhps and sub aaa cmp inc dec push pop pop add jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb and das xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and xor push push pop bound jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov lods enter lods enter lods enter lods enter lods enter (bad) xchg lcall rol rcr fucom call add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jbe addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push enter lods enter lods enter lods enter lods enter lods enter pop popa data16 jno jl orl stos scas mov rol rcl fsub out repz incb or adc pop and das xor push push pop popa insb jb jge mov test (bad) aad loope in repnz add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out icebp idiv add add enter lods enter lods enter lods enter lods enter lods enter pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov movsb stos mov mov xlat enter lods enter lods enter lods enter lods enter ds call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fsubp jmp add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor push push pop bound jb jle mov lods enter lods enter lods enter lods enter lods enter lods enter mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out repz incb unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop fs jne addb test mov add vaddsubps fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop popa enterw lods enter lods enter lods enter lods enter lods enter lods insb jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub call add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fsub out repz incb unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpckhps and inc inc add pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub lods enter lods enter lods enter lods enter lods xor cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) aad fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fucom call lods enter lods enter lods enter lods enter lods enter lods enter add unpcklps pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg test mov mov fndisi(8087 out repnz add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) aad loope in repnz std add push adc pop and das xor push push pop popa add jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov enter lods enter lods enter lods enter lods enter lods enter lods mov xlat fucom call add push adc and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov (bad) in out add sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne enter lods enter lods enter lods enter lods enter addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop fs je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul add sahf movsb test vaddsubps fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add push adc pop and xor lods enter lods enter lods enter lods enter lods enter push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or adc sbb cmp inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa data16 jb jge mov stos mov mov xlat fucom call add enter lods enter lods enter lods enter lods enter lods enter unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov cmpsb stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov test (bad) aad loope in repnz add push adc push and das xor push push pop popa insl jb jge mov stos scas mov rol enter lods enter lods enter lods enter lods enter lods enter lods enter loope in repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fsub out repnz incb or adc xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpcklps pop and cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul addl enter lods enter lods enter lods enter lods enter mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test rol rcl fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom jmp add adc xor cmp inc dec push pop enter lods enter lods enter lods enter lods enter lods enter push test cmpsb stos mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub xor ds add push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add or lods enter lods enter lods enter lods enter lods enter lods enter and cs aas inc dec push push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop pusha data16 jno jl mov stos scas mov rol roll xlat fucom call add push adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in lods enter lods enter lods enter lods enter lods enter out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor aas inc dec push push pop pusha add jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz xor dec push bound lea mov rol rcr (bad) jmp idiv add unpckhps enter lods enter lods enter lods enter lods enter lods enter sub dec push push pop bound je addb test fnop out icebp idiv add or sub xor push push pop popa insb jb jge mov (bad) xchg lcall rol rcl fucom call add adc xor cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add lods enter lods enter lods enter lods enter lods enter lods enter or adc pop and xor push push pop popa push orl stos mov mov xlat fsub out repnz incb or adc add sub aaa cmp inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test (bad) int3 rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov lods enter lods enter lods enter lods enter lods enter rcl fucom call add unpckhps and inc inc dec push push pop bound jb jge mov test rol rcl fsub out repz incb unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec push push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov enter lods enter lods enter lods enter lods enter lods enter lcall rol rcl fucom call add unpcklps and add dec push pop pop arpl jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop enter lods enter lods enter lods enter lods enter lods enter outsb je jg mov lods mov mov rcr (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz add push adc pop and das xor push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb enter lods enter lods enter lods enter lods enter lods enter ds sub aaa cmp pop add insb jno jl xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jle mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fnop in enter lods enter lods enter lods enter lods enter lods add idiv add push adc push and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out repnz std add push adc push and das xor inc inc dec push push pop popa data16 jno jl xchg test (bad) lret fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jp test cmpsb enter lods enter lods enter lods enter lods enter lods enter lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push push pop arpl je jg mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop popa insb jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb push pop imul addl in icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add add sub xor aas inc dec dec push pop pusha imul lods enter lods enter lods enter lods enter lods enter lods enter jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop imul addl mov rcr (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb mov mov fcmovu in lock add or pop sbb daa sub enter lods enter lods enter lods enter lods enter lods enter ds dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl jne addb cmpsb lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add add sub dec dec push pop pop gs jne addl mov aad loopne jmp (bad) enter lods enter lods enter lods enter lods enter lods cld add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsb lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov enter lods enter lods enter lods enter lods enter lods enter lods mov (bad) in out cmc sti add or push sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub add cmp pop pop fs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne enter lods enter lods enter lods enter lods enter lods enter xchg xchg popf mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov rcr fsubp ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub lods enter lods enter lods enter lods enter lods enter lods enter inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul nop xchg fwait mov mov xlat fsub out repnz std add push adc push and das xor inc inc dec push push pop popa insb jb jge mov test (bad) lret fnop in lock add or pop sbb daa sub add push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul addl mov aam (bad) ljmp enter lods enter lods enter lods enter lods enter push or pop sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov enter lods enter lods enter lods enter lods enter ret leave iret aam (bad) ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb cmp inc dec dec push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb daa sub dec dec push pop add insb jno jge mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge xchg test (bad) lret fnop out icebp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) enter lods enter lods enter lods enter lods enter lods xchg test mov mov fnop in lock add or pop sbb sub dec dec push pop pop fs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne add repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc enter lods enter lods enter lods enter lods enter lods enter push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or sbb cmp inc dec dec push pop pusha imul jge mov test (bad) lret fnop in icebp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test mov mov fnop in lock add or pop sbb sub dec dec push pop pusha imul addl mov aam (bad) jmp idiv add enter lods enter lods enter lods enter lods enter lods enter ds pop sbb sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop arpl je jg mov stos mov mov lods enter lods enter lods enter lods enter lods enter fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle add cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpcklps and inc inc dec push pop pop arpl jae jle mov lods enter lods enter lods enter lods enter lods enter xchg lcall rol rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub ss inc dec enter lods enter lods enter lods enter lods enter lods push pop pop arpl je jg mov stos mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov cmpsl lods mov mov fcomp in out cmc cli add and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add bswap lods enter lods enter lods enter lods enter lods enter ds pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc push and das xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or add xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop popa push stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz enter lods enter lods enter lods enter lods enter lods enter lods std add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov add (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov enter lods enter lods enter lods enter lods enter lods enter ds (bad) fsub out repnz std add push adc push and das xor inc inc dec push push pop popa insb jb jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop add insl jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop popa insb jb jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne lods enter lods enter lods enter lods enter lods enter jnp xchg test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov (bad) in jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe mov fnop out repnz incb adc sbb cmp dec push pop pop imul (bad) mov lods mov mov out hlt stc incl adc xor cmp dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or sbb cmp inc dec dec push pop pusha data16 jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push add imul xchg xchg pushf enter lods enter lods enter lods enter lods enter lods enter lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in jmp idiv add or sub xor aas inc dec dec push pop pusha enterw lods enter lods enter lods enter lods enter lods enter lods enter jl xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and lods enter lods enter lods enter lods enter lods enter inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out repnz std add add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti enter lods enter lods enter lods enter lods enter lods enter push or pop sbb cmp inc dec dec push pop pop imul addl mov aam loopne jmp idiv add or sbb and cs aas inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop gs jne addb mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos mov mov lods enter lods enter lods enter lods enter lods enter lods enter fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub add push push pop bound jae jle mov stos mov mov xlat fucom jmp add and sub aaa cmp inc dec push pop pop arpl je jg mov lods enter lods enter lods enter lods enter lods enter mov mov fcomp in out hlt cli add or pop sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor push push pop bound jb jge mov stos mov mov xlat fsub out repz incb unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop enter lods enter lods enter lods enter lods enter ds data16 jno jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or sbb cmp inc dec push push add insb jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out repnz incb or adc pop and lods enter lods enter lods enter lods enter lods enter lods enter sub xor push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fnop in lock add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fsub out repnz add push adc push and xor push push pop bound jae jle mov stos mov mov xlat fucom add out hlt cli incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp lods enter lods enter lods enter lods enter lods enter lods enter icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop imul jl xchg test (bad) lret rcl fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov enter lods enter lods enter lods enter lods enter lods enter lods enter int3 rcl fucom call add unpckhps and sub ss inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and xor push push pop popa insl jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl sbb daa sub dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop imul lods enter lods enter lods enter lods enter lods enter nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg movsb stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl jae jg mov stos mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec enter lods enter lods enter lods enter lods enter lods enter ds push pop pusha imul addl mov aad loopne in repnz add push adc pop and das xor push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub xor ds dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add push adc lods enter lods enter lods enter lods enter lods enter lods enter pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop imul addl mov rcl fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) enter lods enter lods enter lods enter lods enter lods enter lods enter cmc sti add or push sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor push add arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test lods enter lods enter lods enter lods enter lods enter mov fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insl jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha data16 jno jl xchg test (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fucom call add unpckhps and inc inc dec push push pop bound jae lods enter lods enter lods enter lods enter lods enter lods enter jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pusha imul jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb or adc and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub lods enter lods enter lods enter lods enter lods enter lods enter dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos mov mov xlat fsub out repz incb or unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fsub out repnz add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add enter lods enter lods enter lods enter lods enter lods unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb mov mov fnop in lock add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop gs jne addl mov aam lods enter lods enter lods enter lods enter lods enter lods enter fnop in lock add or pop sbb cmp inc dec dec push pop pusha data16 jno jl xchg test (bad) aad loope in icebp idiv add or sub add cmp dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov lods enter lods enter lods enter lods enter lods enter lods enter mov mov fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov test add int3 rcl fucom call add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and inc inc dec push pop pop arpl lods enter lods enter lods enter lods enter lods enter lods enter jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp add imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub enter lods enter lods enter lods enter lods enter cmp inc dec dec push pop pop gs jbe addl mov aam loopne add repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fsub out repz incb unpcklps and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv enter lods enter lods enter lods enter lods enter lods enter lods add or sub xor aas inc dec push push pop popa insl jb add mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov lods enter lods enter lods enter lods enter lods enter lods into aam (bad) ljmp add sbb and cs aas inc dec push push pop popa data16 jb jge mov test vaddsubps fnclex out repnz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fsub out repz incb unpcklps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or push sbb sub dec dec push pop pop gs jne addb test mov mov fnop in lock add or sbb cmp inc dec push push pop popa data16 jno jl mov enter lods enter lods enter lods enter lods enter ds sahf add rol rcl fsub out repz incb or adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl rol rcr (bad) in repnz incb adc enter lods enter lods enter lods enter lods enter ds sub xor aas inc dec push push pop arpl jne addl mov fsub out repz incl and das xor push pop pop imul orl lods mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insb jb jle mov test (bad) int fcomp in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp jmp pop or sub ss enter lods enter lods enter lods enter lods enter lods enter lods dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or pop sbb cmp dec push pop pop fs jbe orl mov fsub call add and das xor push pop pop imul orl test mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov fnop out repnz std add unpckhps and sub dec push push pop arpl enter lods enter lods enter lods enter lods enter lods enter xchg stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop fs jbe (bad) mov stos mov mov fnop out repnz incb unpckhps and sub dec push push pop bound je add lahf movsl stos mov mov fndisi(8087 out repz incl adc sbb sub xor aas inc dec push push pop arpl je addb test enter loopne jmp idiv add unpckhps and sub dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je addb stos scas mov rol rcr (bad) jmp idiv add adc sbb sub dec push push pop arpl jne addl lods enter lods enter lods enter lods enter ds movsl stos mov mov fcmovu in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb or adc xor ds dec push push pop arpl jo jl mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) xchg lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul (bad) mov lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov enter lods enter lods enter lods enter lods enter lods enter rcl fsub call pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop add outsb je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne (bad) mov lods mov mov fsub out repz incl and das xor push pop pop imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pop imul orl lods mov mov fsub call lods enter lods enter lods enter lods enter lods enter add or sbb and xor cmp dec push pop pop imul orl lods mov mov fucom jmp pop or sub aaa cmp push pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub dec push push pop bound je addb test (bad) int (bad) in lock add push adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fndisi(8087 out repz incl and lods enter lods enter lods enter lods enter lods enter sub xor push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp inc dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs aas inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb cmp dec enter lods enter lods enter lods enter lods enter ds pop pop imul orl lods mov mov fucom jmp push or sbb and xor aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jge mov lods mov mov fsub out repz add or pop sbb cmp dec push pop pop fs jbe addl mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs ja lods enter lods enter lods enter lods enter lods enter mov lods mov mov fsub out repz incl add das xor push pop pop imul orl lods mov mov fucom call push or sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and das xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcl fsubp jmp pop or sub aaa cmp pop popa insl jae jg mov lods enter lods enter lods enter lods enter lods enter lods enter mov rol rcr fsubp ljmp add xor aas inc dec push push pop arpl jbe addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jno jge mov lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub dec push push pop arpl je addb stos scas mov rol ror lods enter lods enter lods enter lods enter lods enter lods enter in icebp idiv add or adc xor aas inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop fs jbe orl lods mov mov fsub call push or sbb cmp dec push pop pop imul orl scas mov rol rcl fucom ljmp adc pop and inc dec dec push pop popa data16 jb jle mov scas mov mov fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz enter lods enter lods enter lods enter lods enter lods enter adc push and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fsub call add and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp add repnz incb or adc lods enter lods enter lods enter lods enter lods enter lods sub dec push push pop arpl je addb stos mov mov fnop out repnz incb unpckhps sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor cmp dec push pop pop imul orl lods mov mov fucom jmp push or sbb and das xor push pop pop fs jbe (bad) mov stos mov mov add jecxz out cmc sti add or sbb and xor cmp dec dec push enter lods enter lods enter lods enter lods enter lods enter ds pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop arpl jne addb stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fcomp in lock add push adc and inc dec push push pop popa insl jae jg enter lods enter lods enter lods enter lods enter lods enter popf mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb unpckhps sub xor inc inc dec push pop pop fs jbe addl mov fnop out repnz add unpckhps and sub cmp inc dec push push pop arpl jne addl mov (bad) in icebp idiv add push adc and sub aaa cmp pop popa insw jae jg mov scas mov add enter loopne in repnz incb adc xor aas inc dec push push pop arpl jne addl lods enter lods enter lods enter lods enter lods enter lods enter leave iret aad loope in repz incl and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fucom call push or sbb and xor cmp dec dec push pop pop data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insb jb jle mov lods mov mov fucom call push or sbb and das xor push pop pop imul orl lods add rcl fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fmul lods enter lods enter lods enter lods enter lods enter out repz incl and cs inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl adc sbb sub xor inc inc dec push pop pop fs jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov test mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb stos scas mov rol rcr (bad) jmp idiv add enter lods enter lods enter lods enter lods enter lods enter ds adc and sub cmp inc dec push push pop bound je addb stos mov mov fnop out repnz std add unpckhps and sub dec push push pop arpl jne addb stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and das xor push pop pop imul orl cmpsl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or pop sbb enter lods enter lods enter lods enter lods enter cmp dec push pop pop imul orl lods mov mov fsub out repz incl and cs inc inc dec push push pop fs jbe (bad) mov lods mov mov fsub out repz incl and das xor push pop pop imul (bad) mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle test test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop popa enter lods enter lods enter lods enter lods enter lods enter jns test test mov rol rcl fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sbb and xor cmp inc dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop popa insl add xchg mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov (bad) out repz incl and das xor push pop pop fs jbe (bad) mov lods enter lods enter lods enter lods enter ds lcall (bad) lret fsub call add and xor cmp dec dec push pop pop imul orl lods mov mov fucom call push or sbb and das ss dec dec push pop pusha data16 jno jge mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha insw jb jle mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa add je addb stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov lods enter lods enter lods enter lods enter lods enter lods enter (bad) fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push add push jbe (bad) mov stos mov mov fndisi(8087 out repz incl and das xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fucom jmp pop or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp lods enter lods enter lods enter lods enter lods enter lods idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcl fucom ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpcklps and sub cmp inc dec add pop fs jne addl mov fndisi(8087 out repz incl and das xor inc inc dec push pop pop imul orl lods mov mov fsub call push or sbb cmp dec push pop pop imul orl lods mov mov fucom jmp pop or lods enter lods enter lods enter lods enter lods enter sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp jmp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub inc dec push pop pop fs jbe (bad) mov stos mov mov fneni(8087 out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor inc inc dec push pop pop imul (bad) mov clc incb adc sbb sub aas dec push pop pop imul orl lods enter lods enter lods enter lods enter lods enter lods mov mov fsub call pop or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb test test mov rol rcr fsubp ljmp adc pop and inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jae jg mov scas mov rcr add in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov test (bad) lret ror lods enter lods enter lods enter lods enter lods enter lods enter call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl add addb cmpsl lods mov mov fcmovu in lock sti add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter scas mov mov fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop bound jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop enter lods enter lods enter lods enter lods enter lods enter imul addl mov aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov xlat fucom jmp add adc xor cmp inc dec push pop pop arpl jae jle mov nop xchg fwait mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb enter lods enter lods enter lods enter lods enter lods enter daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos mov mov (bad) fsub enter lods enter lods enter lods enter lods enter lods enter in repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jb jge mov test (bad) int3 rcl fucom call add unpcklps and inc inc dec push push pop bound jae jle mov cmpsb lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb cmp inc dec dec push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter lods mov mov fnop out icebp idiv add or sub xor inc inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov test (bad) aad loopne jmp idiv add or pop sbb xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl jae jg mov stos mov mov xlat fsub out repnz incb or adc pop and das xor push push pop popa data16 enter lods enter lods enter lods enter lods enter lods enter jno jl xchg test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov add fndisi(8087 out repnz add push adc push and das xor push push pop popa data16 jno jl xchg test (bad) lret fndisi(8087 out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub lods enter lods enter lods enter lods enter lods enter lods enter inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb sub xor ds add push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out cmc enter lods enter lods enter lods enter lods enter ds add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb test mov mov add loope in repnz add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out repnz std add push adc pop and das xor push push pop popa data16 jb jge mov test lods enter lods enter lods enter lods enter lods enter lret rcl fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos scas mov rol rcl fsub out repnz std add unpcklps pop and inc inc dec push push pop bound imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne or lods enter lods enter lods enter lods enter lods enter xchg pushf mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp add std add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp in out cmc cli add or push sbb daa sub aaa cmp lods enter lods enter lods enter lods enter lods enter lods enter pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb mov lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add bswap lods enter lods enter lods enter lods enter lods enter adc xor cmp dec push push pop bound je jg mov stos mov mov fcomp jecxz out hlt cli incl sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb sub dec dec push pop pop gs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad lods enter lods enter lods enter lods enter lods enter lods enter fndisi(8087 out repnz add push adc push and das xor push push pop popa data16 jno jge mov movsl stos mov mov xlat fsub out repz incb unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb lods enter lods enter lods enter lods enter lods enter cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub inc dec dec push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl lods enter lods enter lods enter lods enter lods enter lods enter outsb je jg mov stos mov mov rcr (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add or sub lods enter lods enter lods enter lods enter lods enter lods enter das xor aas inc dec add pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jg mov lods mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov flds loopne jmp lods enter lods enter lods enter lods enter lods enter icebp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) (bad) fndisi(8087 out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop imul xchg scas mov lods enter lods enter lods enter lods enter lods enter lods mov aam loopne jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jl mov test (bad) lret fnop in lock add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor aas inc dec push push pop pusha imul addl mov aad loope in icebp add incb or adc pop and das xor push push pop popa data16 jb lods enter lods enter lods enter lods enter lods enter ja (bad) mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repz incb unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul add sahf movsb test vaddsubps fndisi(8087 out repnz add or sub xor lods enter lods enter lods enter lods enter lods enter lods cmp dec push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne in icebp idiv add or sub xor ds dec dec push pop pop imul (bad) xchg test mov mov fnop in lock add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) jmp (bad) enter lods enter lods enter lods enter lods enter lods enter lods sti add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop fs jne addb mov mov fcmovu in lock add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test lods enter lods enter lods enter lods enter lods enter lods enter (bad) lret fneni(8087 out icebp idiv add or sbb and cs aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor ds dec push push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out icebp idiv add or and xor push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jb jge lods enter lods enter lods enter lods enter lods enter lods enter (bad) xchg lcall rol rcl fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg test scas mov rol rcl fsub call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and inc enter lods enter lods enter lods enter lods enter lods enter lods inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push lahf mov int3 out decb adc sub inc dec push popa insb jns lea mov mov in repnz std add push adc add sub ss inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub lods enter lods enter lods enter lods enter lods enter xor ds dec dec push pop pop fs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsb add leave iret aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add push adc pop and das xor push push pop bound jae jle mov stos scas mov rol rcl fndisi(8087 out icebp enter lods enter lods enter lods enter lods enter lods enter add or sub xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub inc dec dec push pop popa data16 jb jge mov test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov test vaddsubps fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov lods enter lods enter lods enter lods enter lods enter rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add push adc push and das xor push push pop popa insb jb jge enter lods enter lods enter lods enter lods enter lods mov stos mov mov xlat fsub out repnz incb or adc and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop add imul addl mov aam (bad) ljmp adc sbb es aaa cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor lods enter lods enter lods enter lods enter lods enter lods enter push pop popa data16 jno jl mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp in ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add push enter lods enter lods enter lods enter lods enter lods enter pop and das xor push push pop popa insb jb jge mov test (bad) lret fneni(8087 out icebp idiv add or sbb and cs aas inc dec push push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out repnz add push adc pop and xor push push pop bound jae jns test cmpsb stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jbe addl mov aad lods enter lods enter lods enter lods enter lods enter lods enter in lock add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov fnop out icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or adc pop and xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jne addb lods enter lods enter lods enter lods enter lods enter lods enter lods mov mov fcmovu in lock add or sbb cmp inc dec push push pop pusha imul (bad) xchg test mov mov fcmovu in lock add or sbb cmp inc dec dec push pop pusha imul addl mov mov fneni(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop (bad) enter lods enter lods enter lods enter lods enter lods enter lods push test cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov fnop in lock add or pop sbb xor aas inc dec push push pop popa data16 jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb lods enter lods enter lods enter lods enter lods enter lods enter aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl add (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa data16 jno jl xchg test mov mov fcmovu in lock add or pop sbb sub xor ds dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub call lods enter lods enter lods enter lods enter lods enter incb or adc pop and inc inc dec push push pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jg mov stos mov mov fcomp in out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov lods enter lods enter lods enter lods enter lods enter ds leave into aam (bad) jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov xlat fucom call add push adc pop and xor cmp dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop popa data16 jno jl enter lods enter lods enter lods enter lods enter lods enter cwtl popf mov mov fnop in lock add or pop sbb daa sub dec dec push pop pop add jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop imul nop xchg fwait mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec enter lods enter lods enter lods enter lods enter lods enter lods enter popa insb jb jge mov test vaddsubps fsub out repz incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub ss dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb bswap lods enter lods enter lods enter lods enter lods enter lods enter adc and inc inc dec push pop pop arpl jae jg test cmpsl lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fxch lods enter lods enter lods enter lods enter lods enter lods enter ljmp adc pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in repnz add push adc push and das xor push push pop popa data16 jb jge mov test (bad) lret fnop in lock add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add or sub xor push push pop bound jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov lods enter lods enter lods enter lods enter lods enter lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and xor ss inc dec push push pop arpl lods enter lods enter lods enter lods enter lods enter lods enter push test cmpsb stos mov mov (bad) in out hlt cli add and sub cmp pop pop fs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add unpcklps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov aad loopne jmp idiv add or sub enter lods enter lods enter lods enter lods enter lods enter ds inc inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc pop and das xor push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul orl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push add imul nop xchg fwait mov mov (bad) in out cmc sti enter lods enter lods enter lods enter lods enter lods enter lods enter adc sbb daa sub dec dec push pop pop gs jne addb test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop gs jbe addl mov aad loopne jmp repnz add or sub xor push push pop bound jae jle mov stos mov mov lods enter lods enter lods enter lods enter lods enter rcl fucom call add unpcklps pop and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne add popf movsb test vaddsubps fsub out repnz add or sub xor aas inc dec push push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter xchg popf mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz std add push adc push and das xor inc inc dec push push pop popa data16 jno jl mov test (bad) lret fneni(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov test (bad) aad loope in icebp idiv add push adc push and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl add pop sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec push push enter lods enter lods enter lods enter lods enter lods enter lods pop pusha data16 jno jl xchg test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop arpl jae jg mov stos mov mov xlat fucom call add push adc pop and das xor push push pop popa insb jb jle mov stos mov mov xlat fsub call add unpcklps and inc inc dec push push pop bound jae jle mov cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or lods enter lods enter lods enter lods enter lods enter lods enter xor aas inc dec push push pop popa data16 jb jge mov test (bad) int3 rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz incb or adc and inc inc dec push pop pop arpl jae jle mov stos mov mov (bad) fsub out lods enter lods enter lods enter lods enter lods enter ds repnz add or sub xor push push pop popa insl jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov rcr fsubp jmp add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or push sbb daa sub aaa cmp pop pop arpl je jg mov mov lods enter lods enter lods enter lods enter lods enter lods loope idiv or dec push popa insb js mov loopne cmc add xor push pop gs xchg mov rcr out cld pop add sbb dec pop arpl (bad) lea int3 aad jmp sbb push bound mov into fsub in testl cmp pop outsb jns nop fwait cmpsl mov enter testl aaa inc dec pop bound test ror loop testb adc dec push pusha imul mov out cli add cmp arpl orl rcr jmp and inc dec pop bound mov (bad) repnz adc sub jge xchg pushf cmpsl mov (bad) rcr in sti add cmp pop arpl (bad) lea int loope testb push and lods enter lods enter lods enter lods enter lods enter sub insb jbe mov rcr out std or sub inc dec push bound orl add fsub repnz pop adc push pop push pushf cmpsl mov (bad) rcr out sti push adc push popa insb js nop fwait cmpsl mov leave rcr jmp sbb push pop addr16 test stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl bswap lods enter lods enter lods enter lods enter lods enter lods adc xor cmp inc dec push push pop bound je jg mov stos add into aam (bad) ljmp adc sbb sub dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fmul lods enter lods enter lods enter lods enter lods enter lods enter jecxz out hlt cli add and sub cmp push pop pusha imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repz incb or adc and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or sbb cmp inc dec push push pop popa data16 jno jl xchg test (bad) lret fnop in lock add or pop sbb sub dec dec push pop pop imul addl enter lods enter lods enter lods enter lods enter lods test mov mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop out icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor inc inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repz incb or adc pop and inc inc dec push push pop bound push lods enter lods enter lods enter lods enter lods enter lods outsb je jg mov stos mov mov fcomp jecxz out hlt cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) aad loope in icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov xlat fucom call incl and sub enter lods enter lods enter lods enter lods enter lods enter cmp pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jge mov stos scas mov rol rcl fsub call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz std add push adc push and das xor push push pop popa insl jb jle mov (bad) xchg fwait mov mov fcomp in out cmc cli add lods enter lods enter lods enter lods enter lods enter lods enter push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl add daa sub dec dec push pop pop imul addl mov lods enter lods enter lods enter lods enter lods enter fnop out icebp idiv add or sub xor aas inc dec push push pop popa insw jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa data16 jno jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jb jge mov stos add int fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop arpl je jg mov lods enter lods enter lods enter lods enter lods enter lods xchg fwait mov mov fcomp in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or sub xor ds dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop enter lods enter lods enter lods enter lods enter lods enter lods pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop imul addl mov add fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fucom call add unpcklps and lods enter lods enter lods enter lods enter lods enter sub ss inc dec push push pop arpl jae jle mov stos mov mov fcomp in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub cmp pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa add jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out enter lods enter lods enter lods enter lods enter ds stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insl jb jge mov stos mov mov xlat fucom call incl and sub aaa cmp dec dec push pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov lods enter lods enter lods enter lods enter lods enter lods enter rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fsub call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock sti add or sbb cmp inc dec push push pop pusha data16 jno jl mov mov mov rol rcl fsub out repnz std add push adc push and xor push push pop bound jb jge mov test (bad) aad loopne in icebp idiv add or sub xor ds dec push push pop pusha imul (bad) enter lods enter lods enter lods enter lods enter lods enter xchg cwtl popf mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) int3 rcl fsub out repnz std add push adc push and das xor aas inc dec enter lods enter lods enter lods enter lods enter lods enter lods push push pop popa data16 jno jl xchg test mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop fs jne addb add (bad) leave iret aad loopne jmp idiv add or sbb and cs aas inc dec push push pop popa data16 jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add bswap lods enter lods enter lods enter lods enter lods enter adc xor cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jbe addl mov aam loopne jmp idiv add or pop sbb add aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov ret int repz add or enter lods enter lods enter lods enter lods enter lods enter and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub call push or sbb and xor cmp pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub call add unpcklps pop and cmp inc dec push pop pop imul test aad loop out hlt cli add or sbb and xor cmp dec dec push pop pusha data16 mov lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or sub xor aas inc dec dec push pop enter lods enter lods enter lods enter lods enter lods enter imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fsub call add add adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and inc dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop gs jbe addl mov aam (bad) ljmp adc sbb lods enter lods enter lods enter lods enter lods enter lods enter xor cmp pop pop fs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov movsl stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz lods enter lods enter lods enter lods enter lods enter lods enter cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub das xor push push pop bound jb jge mov stos mov mov xlat fsub call add unpcklps pop sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test enter lods enter lods enter lods enter lods enter lods enter mov mov fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insl jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jle mov lods mov mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa insl jb jge mov stos scas mov rol rcl fucom call add unpckhps and inc inc dec push push pop arpl jae enter lods enter lods enter lods enter lods enter lods enter mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt sti add or pop sbb daa sub dec dec add pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sbb and das xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp enter lods enter lods enter lods enter lods enter lods enter push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne out icebp idiv add or sub xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or lods enter lods enter lods enter lods enter lods enter adc push and das xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and mov rcr (bad) jmp idiv add push adc and xor dec push pop addr16 xchg mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop fs jne sbbl into rcr fsubp ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg mov mov rol rcl fsub out repnz std add push adc and inc inc dec push push pop bound jae jle mov stos mov lods enter lods enter lods enter lods enter lods enter lods enter rol rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov rcr fsubp jmp add and sub aaa cmp inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt stc incl sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop fs jne lods enter lods enter lods enter lods enter lods enter lods enter mov lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repz incb or adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov ret rcr fsubp jmp add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp enter lods enter lods enter lods enter lods enter lods inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push push pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa add inc dec dec push pop pop gs jbe addl mov aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add enter lods enter lods enter lods enter lods enter lods enter adc and inc inc dec push push pop bound jae jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rcr (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov rcl fndisi(8087 out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov enter lods enter lods enter lods enter lods enter lods enter lods (bad) in out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop add outsb jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov lods enter lods enter lods enter lods enter lods enter lahf movsl stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl jae jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in add cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) aad loope in icebp idiv add push adc push and das xor push push pop popa enter lods enter lods enter lods enter lods enter lods enter insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pusha imul add sahf movsb test (bad) (bad) fsub out repnz std add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub lods enter lods enter lods enter lods enter lods enter lods xor cmp pop pop fs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add lldt sbb es aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fcmovu in lock enter lods enter lods enter lods enter lods enter lods enter or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl je jg mov cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test enter lods enter lods enter lods enter lods enter lods enter lods enter aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub add push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in lock sti add or push sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or sub xor aas inc dec push push pop pusha data16 jno jl xchg lods enter lods enter lods enter lods enter lods enter cwtl sahf mov mov fndisi(8087 out icebp idiv add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop arpl jae jg mov stos mov mov rcr (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor inc inc dec push push pop popa insw jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push enter lods enter lods enter lods enter lods enter lods push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push add arpl jae jg mov stos mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret (bad) out repnz add push adc push and das xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz incb or adc enter lods enter lods enter lods enter lods enter ds and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz ljmp adc sbb sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or sub xor ds dec dec push pop pop imul addl mov aad loopne lods enter lods enter lods enter lods enter lods enter jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jns test cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop in icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test lods enter lods enter lods enter lods enter lods enter lods enter rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add or adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul lods enter lods enter lods enter lods enter lods enter lods enter (bad) mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov movsl stos mov mov xlat fucom call add push adc pop and das xor push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) aad loope in repnz add or sub xor lods enter lods enter lods enter lods enter lods enter lods enter cmp inc dec push push pop pusha imul addl mov aam loopne jmp idiv add or and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop popa insl jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz enter lods enter lods enter lods enter lods enter lods enter add push adc pop and das xor push push pop bound jae jle mov stos add int fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop bound jae jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test enter lods enter lods enter lods enter lods enter lods enter ds (bad) fndisi(8087 out repnz add push adc push and das xor dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jl xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop bound jae jle mov lods enter lods enter lods enter lods enter lods enter lods enter lcall rol add fcomp in out hlt cli incl and sub aaa cmp pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push enter lods enter lods enter lods enter lods enter ds pop add jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpcklps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out add sti add and sub lods enter lods enter lods enter lods enter lods enter ds dec push push pop bound je addb stos mov mov (bad) in icebp clc std add unpckhps and sub dec push push pop bound xchg test vaddsubps fndisi(8087 out repnz std add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge mov test (bad) (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) aad loopne in repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test rol rcl fndisi(8087 out repnz add push adc enter lods enter lods enter lods enter lods enter lods pop and das xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc add push pop bound jae jle mov stos mov mov xlat fnop lods enter lods enter lods enter lods enter lods enter lods enter loop in repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov add fsubp jmp add and sub aaa cmp inc dec push pop pop arpl je jg mov lods enter lods enter lods enter lods enter lods enter lods cmpsb stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg sahf movsb stos mov mov fsubp jmp add and cs inc inc dec push pop pop fs ja orl add adc xor dec pop arpl orl in stc add sbb sub popa insb jbe mov iret (bad) in testl cmp push popa imul popf cmpsl mov xlat loop cmc std pop adc and aaa inc dec push pusha imul lods mov enter lods enter lods enter lods enter lods enter lods enter loopne hlt std pop adc xor inc push pop data16 xchg ror fucom repnz push adc and add inc push pop data16 xchg aad ljmp xor push pop imul mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add push adc push and dec push push pop arpl jne addl mov fcomi cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or push enter lods enter lods enter lods enter lods enter lods enter sbb daa sub dec dec push pop pop fs jne addb cmpsl add lret fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and inc inc dec push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or sbb and cs aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul addl mov aam enter lods enter lods enter lods enter lods enter lods enter lock add or pop sbb add aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov test vaddsubps fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop popa data16 jno jl xchg lods enter lods enter lods enter lods enter lods enter lods enter mov rolb int3 rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add push adc push and das xor push push pop bound jb jle mov stos scas mov rol rcl fsub out repnz add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and xor push add arpl lods enter lods enter lods enter lods enter lods enter je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor push push pop popa insb jb jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz ljmp adc sbb daa sub lods enter lods enter lods enter lods enter lods enter cmp pop pop gs jne addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or sbb cmp inc dec push push pop pusha imul jge mov stos scas mov rol rcl fsub out repnz enter lods enter lods enter lods enter lods enter lods enter lods enter push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop fs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add add sub xor aas inc dec push push pop pusha imul (bad) xchg test enter lods enter lods enter lods enter lods enter ds (bad) fndisi(8087 out icebp idiv add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov mov fndisi(8087 out repnz add or sub xor push push pop bound jae jle mov lods enter lods enter lods enter lods enter lods enter (bad) xchg lcall rol rcl fsub call add unpcklps pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb sub cs aas inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fsub out repnz std add push adc pop and inc inc dec push enter lods enter lods enter lods enter lods enter lods enter pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fcmovu in icebp idiv add or sub xor aas inc dec push push pop pusha imul addl add aad loope in repnz add push adc pop and xor push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add or enter lods enter lods enter lods enter lods enter lods enter sbb and xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps xor inc inc dec push pop pop imul orl rol rcl fsub out repnz add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov (bad) fsub out repnz std add push adc pop and xor push push pop bound jae jns test cmpsb lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz std add enter lods enter lods enter lods enter lods enter lods push adc pop and das xor push push pop popa data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor ds dec dec push pop pop gs jne addl mov rcr (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or adc pop and xor push push pop bound jb jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push pop pop arpl jae jle mov stos mov mov lods enter lods enter lods enter lods enter lods enter lods enter rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addl mov rol rcl fsub out repnz add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov enter lods enter lods enter lods enter lods enter lods enter stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp in out cmc cli add and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom jmp add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl add daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub xor ds dec dec push pop enter lods enter lods enter lods enter lods enter lods pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insl jb jge mov stos add int fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or enter lods enter lods enter lods enter lods enter lods enter sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and add dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call lods enter lods enter lods enter lods enter lods enter in repz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov rcr fsubp jmp add and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addl lods enter lods enter lods enter lods enter lods enter mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push add push test movsl stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli add or pop sbb daa sub dec dec push pop pop fs jne lods enter lods enter lods enter lods enter lods enter lods enter xchg cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in jmp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz std add push adc push and das xor push push pop popa insb jb jle mov stos mov mov xlat fsub out repz incb or adc pop and enter lods enter lods enter lods enter lods enter ds inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and das xor push push pop popa insb jb jns test movsl stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add lods enter lods enter lods enter lods enter lods enter lods enter or sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov lods enter lods enter lods enter lods enter lods enter lods enter int3 rcl fucom call add unpckhps and inc inc dec push push pop bound jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl je jg mov test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb lods enter lods enter lods enter lods enter lods enter pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli add add sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) aad loope in repnz add or sub xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push enter lods enter lods enter lods enter lods enter lods enter lods enter imul nop xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods add aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub call add unpcklps enter lods enter lods enter lods enter lods enter lods pop and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add push adc push and das xor add dec push push pop popa insl jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add or inc inc push pop push jle xchg pushf mov rol rcr (bad) ljmp adc and add dec push push pop arpl mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp lods enter lods enter lods enter lods enter ds dec dec push pop add push jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub call add unpcklps and inc inc dec push push pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli add and sub dec dec push pop pop gs jne addl mov add fndisi(8087 out icebp idiv add or sub xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and xor cmp dec push push pop bound jae jle mov stos mov mov fcomp jecxz add cmc cli add lods enter lods enter lods enter lods enter lods enter ds or push sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop add outsl je jg mov lods mov mov fnop in lock add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha data16 jno add mov stos mov mov lods enter lods enter lods enter lods enter lods enter int3 rcl fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out add stc incl adc sbb es aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or push sbb sub dec dec push pop pusha imul addl mov aam (bad) ljmp or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg lods enter lods enter lods enter lods enter lods enter ds cwtl popf mov mov fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl mov test (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha imul jge mov stos mov mov xlat fsub out repnz std add push adc push and das xor inc inc dec push push pop popa data16 jno jl xchg test (bad) (bad) fsub out repnz std add push adc pop and xor push push pop bound jb jle mov cmpsb lods mov mov (bad) in out cmc cli add and sub cmp lods enter lods enter lods enter lods enter lods enter pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add pop or sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) aad loope in icebp idiv add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps add daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add lods enter lods enter lods enter lods enter lods enter lods enter daa sub cmp pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa push test mov mov (bad) in out cmc cli add or push sbb daa sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop gs jne addl mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop pusha imul addl mov aad lods enter lods enter lods enter lods enter lods enter lods fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add add daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor cmp dec push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov lods enter lods enter lods enter lods enter lods enter ds movsb stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push pop pop ja test cmpsl lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb xchg cwtl sahf mov mov fndisi(8087 add in repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) in out hlt cli add push or pop sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl lods enter lods enter lods enter lods enter lods enter popf mov mov fcmovu in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb unpcklps and inc inc dec push pop pop arpl add addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jb jge mov (bad) xchg lcall rol rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop enter lods enter lods enter lods enter lods enter lods enter lods enter jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out repz incl unpckhps sbb es aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or pop sbb enter lods enter lods enter lods enter lods enter lods enter cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rol rcl fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call lods enter lods enter lods enter lods enter lods enter in repz incb or adc pop and das xor push push pop popa insl jae jle mov stos mov mov xlat fucom call add unpckhps sbb es aaa cmp pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sbb xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos enter lods enter lods enter lods enter lods enter lods enter mov fcomp jecxz out hlt cli incl and sub ss inc dec push pop pop arpl je jg mov cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jbe addl mov rcl fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor inc inc dec push push pop bound jb jge mov test (bad) aad loopne in icebp idiv add or sub xor ds dec push push pop pusha data16 enter lods enter lods enter lods enter lods enter lods enter jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub add push pop pusha imul (bad) xchg test (bad) (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jge mov test (bad) int3 rcl fucom call add unpcklps and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp in out hlt cli add and sub enter lods enter lods enter lods enter lods enter ds cmp pop pop fs jne addb cmpsl lods mov add fndisi(8087 out repnz add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov add fsubp jmp add adc sbb es aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt enter lods enter lods enter lods enter lods enter lods enter lods enter or adc xor cmp add push pop pop fs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha gs jno jl mov test vaddsubps fsub out repnz add push adc push and das xor push push pop add outsb jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test lods enter lods enter lods enter lods enter lods enter lods rol roll fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in add idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or push sbb daa sub aaa cmp pop pop add jno jl lods enter lods enter lods enter lods enter lods enter lods enter xchg cwtl sahf movsb test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je add pushf mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub call incl and sub aaa cmp enter lods enter lods enter lods enter lods enter dec push pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in repnz add add adc and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or pop push and cs aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das cmp dec push push pop bound jae jle test cmpsb lods mov mov fcomp jecxz out hlt cli incl enter lods enter lods enter lods enter lods enter lods enter and sub cmp pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov mov fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl sbb daa sub dec dec push pop pop gs jne addl mov enter lods enter lods enter lods enter lods enter lods enter ds loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz std add push adc pop and cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add push adc push and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps and sub aaa cmp inc dec push pop pop arpl je jg mov cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter lods popf mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop bound jb jle mov stos mov add fsubp jmp add and sub aaa cmp dec dec push pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul (bad) mov test vaddsubps fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps and cmp pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop enter lods enter lods enter lods enter lods enter lods enter gs jbe addl mov aad loopne in icebp idiv add or sub xor aas inc add pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addb test mov add fndisi(8087 out icebp idiv add or sub xor push push pop popa insl jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and lods enter lods enter lods enter lods enter lods enter sub xor push push pop bound jae jle mov stos mov mov add fsubp ljmp adc sbb daa sub dec dec push pop pop imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test vaddsubps fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp push pop pop imul addl mov aad loopne in icebp idiv add or sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp lods enter lods enter lods enter lods enter lods enter ds idiv add or sub xor aas inc dec push push pop popa add jb jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add adc xor cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl or push sbb daa sub dec dec push pop pop gs jbe addl mov aad fndisi(8087 out repnz add or sub xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repz incb unpcklps and inc inc dec push pop pop arpl je jg mov stos mov lods enter lods enter lods enter lods enter lods enter ds rol rcl fucom call incl and sub aaa cmp inc dec push pop pop imul nop xchg mov mov fisttpl das cmp pusha insl jae jg mov scas mov rol rcr fsubp jmp idiv add adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe addl mov (bad) fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp enter lods enter lods enter lods enter lods enter lods enter push pop pop imul orl lods mov mov fucom call push or sbb and das xor push pop pop fs jbe (bad) mov stos mov mov fsub out repz incl and cs inc inc dec push push pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb test ret aam loopne in icebp clc std add adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop fs lods enter lods enter lods enter lods enter lods enter lods jo jnp xchg stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop arpl jne addl mov (bad) fsub call push or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fsub call add and xor cmp inc dec push pop pop imul orl lods mov mov fsub out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov enter lods enter lods enter lods enter lods enter lods enter lcall ret leave iret aad loope in repz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) mov cmpsl lods mov rol rcr fsubp jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe addl mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je jg mov scas mov enter lods enter lods enter lods enter lods enter ds rcr fsubp jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop imul jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov mov fsubp ljmp adc pop and inc dec dec push pop pusha imul orl lods mov mov fndisi(8087 enter lods enter lods enter lods enter lods enter lods out repz incl and das xor push pop pop imul (bad) mov lods mov mov fsub call add and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop add jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jno jge mov lods mov mov fsub call push or lods enter lods enter lods enter lods enter lods enter lods enter pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fsub call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push add fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul (bad) mov lods mov mov fndisi(8087 out repnz incb adc sbb sub dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addb stos mov mov fnop out repnz incb adc sbb sub xor lods enter lods enter lods enter lods enter lods enter inc dec push push pop arpl jne addl mov (bad) out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fnop out repz incb adc sbb sub xor inc add push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop imul (bad) mov stos mov mov fnop out repnz incb or adc xor ds dec push push pop enter lods enter lods enter lods enter lods enter bound jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb test enter loopne jmp idiv add unpckhps and sub inc dec push pop pop fs jbe addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jne addl mov fnop out repnz incb adc sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fsub call add and das xor push pop pop imul orl lods enter lods enter lods enter lods enter lods enter fwait mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub call push or pop sbb ss dec dec push pop pusha data16 jb jle mov lods mov rol rcr fsubp jmp pop or sub aaa cmp pop popa insl jb jle mov scas mov rol rcl fucom ljmp adc and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb test lods enter lods enter lods enter lods enter lods enter ds (bad) in icebp idiv add push adc and sub cmp pop popa insl jae jg mov scas mov rol rcr fucom jmp pop or adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je jg mov scas mov rol rcr fmulp lods enter lods enter lods enter lods enter lods enter lods in lock add push adc pop and inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp unpcklps and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je addb stos mov mov fnop out repnz incb unpckhps and sub dec push push pop arpl je addb stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push push pop arpl jne addb stos scas mov rol rcr (bad) ljmp lods enter lods enter lods enter lods enter lods enter unpcklps and sub cmp inc dec dec push pop popa insl jae jle mov lods mov mov fsub call add or sub aaa cmp pop popa data16 jb jle mov lods mov mov fucom jmp push or sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp jmp pop or sub aaa cmp pop popa insl jb jle mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub enter lods enter lods enter lods enter lods enter lods enter lods cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr add out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz add unpckhps and sub dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop gs jbe (bad) mov lods mov mov fndisi(8087 out repz incb adc sbb daa sub dec push push pop enter lods enter lods enter lods enter lods enter bound je addb test movb aam loopne in repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop imul test test mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addl mov fsub call add and das xor push pop pop fs jbe (bad) mov stos mov lods enter lods enter lods enter lods enter lods enter lods enter mov ret lret fsub add out cmc sti add or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc xor aas inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul test test (bad) int3 rcr (bad) ljmp adc and sub cmp inc dec push push pop arpl jne addl mov faddl jecxz lods enter lods enter lods enter lods enter lods enter lods enter sti add or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr loopne in repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fndisi(8087 out repz add or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc xor aas inc dec push push pop arpl jne orl mov fsub call push or sbb and xor cmp dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop arpl jne addl mov faddl jecxz out cmc sti add or lods enter lods enter lods enter lods enter lods enter and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and xor inc inc dec push push pop arpl jne (bad) xchg stos mov mov fndisi(8087 out repz incl and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop popa insl jae jg mov mov mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop imul orl lods mov mov add jecxz out cmc sti add or sub aaa cmp enter lods enter lods enter lods enter lods enter lods enter insl jae jg mov mov mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop gs jbe (bad) mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc xor aas inc dec push push pop bound jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop imul orl lods mov mov fcomp in lock add push adc and sub cmp inc dec push push pop bound je addb lods enter lods enter lods enter lods enter lods enter ds cwtl sahf movsb stos mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and inc dec dec push pop popa insl jae jg mov scas mov rol aam loopne in icebp idiv add adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor cmp pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and cs inc inc dec push pop pop fs jbe (bad) xchg stos mov mov (bad) fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov mov enter lods enter lods enter lods enter lods enter lret rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp jmp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fcomp in lock add push adc and sub dec push push pop fs jbe addl mov fndisi(8087 out repz enter lods enter lods enter lods enter lods enter lods enter or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop arpl jne addl mov fsub call add and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc xor aas inc dec push push pop arpl jne addl mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol int (bad) in lock add unpckhps and sub dec push push pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor enter lods enter lods enter lods enter lods enter lods enter cmp pop popa data16 jb jle mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop imul orl scas mov mov fsubp ljmp adc and sub aaa cmp pop bound je addb stos mov mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fcomp in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb lods enter lods enter lods enter lods enter lods enter lods enter mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop arpl jne addl mov fndisi(8087 out repz incl and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and sub cmp pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rolb into aam loopne in repnz incb unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov enter lods enter lods enter lods enter lods enter lods enter mov fsub call pop or sub aaa cmp adc cmp dec push pop pop fs jbe xchg fwait mov mov (bad) in out cmc cli add or pop sbb cmp inc dec dec push add insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl je jg mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop enter lods enter lods enter lods enter lods enter lods enter gs jbe addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aad loopne add icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb enter lods enter lods enter lods enter lods enter lods enter lods enter cmp pop pop gs jbe addl mov aam (bad) jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno add mov stos mov mov xlat fsub out repz incb or adc and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out enter lods enter lods enter lods enter lods enter lods enter lods enter add or sub xor push push pop popa insb jb jle mov stos mov mov xlat fucom call add add adc xor cmp dec dec push pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl enter lods enter lods enter lods enter lods enter lods enter mov fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov mov fndisi(8087 out icebp idiv add push adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fnop in lock add or pop sbb daa sub dec dec push pop pop imul enter lods enter lods enter lods enter lods enter lods enter addl mov rcr fsubp jmp add and add dec dec push pop pop imul xchg xchg pushf mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fucom call add unpckhps and inc enter lods enter lods enter lods enter lods enter lods enter lods enter pop pop arpl je jg mov stos mov add (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out icebp idiv add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) (bad) fndisi(8087 out repnz add or lods enter lods enter lods enter lods enter lods enter sbb and das xor inc inc dec add pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add and sub cmp pop pop fs jne addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fxch lods enter lods enter lods enter lods enter lods enter lods enter add jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop imul mov lods enter lods enter lods enter lods enter lods enter mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz std add unpckhps and sub ss inc dec push pop pop arpl lods enter lods enter lods enter lods enter lods enter lods enter outsb je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fsub out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fnop in lock add or pop sbb sub dec dec push pop pusha imul addl mov rol rcl fsub out repnz add push adc push and enter lods enter lods enter lods enter lods enter lods enter inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test vaddsubps fsub out repnz add push adc pop add inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call lods enter lods enter lods enter lods enter lods enter lods enter add unpcklps pop and inc inc dec push push pop bound jb jge mov test vaddsubps fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addl mov mov fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov stos mov mov lods enter lods enter lods enter lods enter lods enter rcl fsub call add unpcklps pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push push pop arpl je jg mov lods mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub ss inc dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul or lods enter lods enter lods enter lods enter lods enter lea scas mov mov fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) (bad) fndisi(8087 out repnz add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pop imul addl mov add fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp lods enter lods enter lods enter lods enter lods enter ds pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub cmp pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl xchg test (bad) lret fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add push adc push and das xor push push pop popa add jae jg mov lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl lods enter lods enter lods enter lods enter lods enter lods enter sub ss inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub out add stc incb and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jbe addl mov aad enter lods enter lods enter lods enter lods enter lods enter jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg xchg lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg enter lods enter lods enter lods enter lods enter lods enter lods test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz std add push adc push and das xor inc inc dec push push pop popa data16 jno jl xchg test (bad) lret fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb lldt sbb es aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop fs lods enter lods enter lods enter lods enter lods enter jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop gs jbe addl mov aam (bad) ljmp adc sbb sub dec dec push pop pusha imul (bad) xchg movsb stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub enter lods enter lods enter lods enter lods enter lods enter xor ds dec dec push pop pop gs jne addb test mov mov fnop in lock add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fndisi(8087 out repnz add or sub xor push push pop popa insl jb jge mov stos scas mov rol rcl fucom call add unpckhps and cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loope in icebp (bad) enter lods enter lods enter lods enter lods enter lods enter lods std add or sub xor push push pop popa insl jb jge mov test vaddsubps fsub out repnz add push adc push and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov rcr fsubp jmp add and sub aaa cmp inc dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov lods enter lods enter lods enter lods enter lods enter ds leave iret aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl xchg test vaddsubps fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec add pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop xor cmp pop popa insl jae jg mov (bad) int3 rcl fsub out repnz incb or adc and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov enter lods enter lods enter lods enter lods enter lods enter lods enter int fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push push pop arpl je jg mov lods mov mov (bad) in out hlt cli add sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and sub ss inc dec push pop pop arpl je jg lods enter lods enter lods enter lods enter lods enter test cmpsb lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb mov mov fnop out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb unpcklps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or push sbb daa sub cmp inc dec enter lods enter lods enter lods enter lods enter lods enter dec push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub add push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl adc xor cmp dec dec push pop pop imul xchg xchg pushf mov rcr (bad) out adc cmp push pusha imul xchg popf mov rol rcr fsubp ljmp sbb cmp dec push pop pop imul (bad) mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov enter lods enter lods enter lods enter lods enter lods enter ds rcr fsubp ljmp adc and sub aaa cmp outsl je addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in repnz add push adc push and das xor push add bound jae jle mov stos mov mov fcomp in out hlt cli add and sub cmp pop pop fs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub call add unpcklps and inc inc dec push push pop bound jae jle mov enter lods enter lods enter lods enter lods enter lods enter ds mov mov fcomp jecxz out repz incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub dec dec push pop pop gs jbe addl mov aam (bad) add icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul lods enter lods enter lods enter lods enter lods enter lods enter ja (bad) mov test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop arpl je add pushf mov mov fnop in icebp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl mov test vaddsubps fsub out repnz add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) aad loopne in repnz add push adc push and das xor enter lods enter lods enter lods enter lods enter ds inc dec push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl lods enter lods enter lods enter lods enter lods enter sbb es aaa cmp inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop arpl jae jg mov lods mov mov enter lods enter lods enter lods enter lods enter lods enter lods fcomp in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or sub xor cmp dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insl jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov lods enter lods enter lods enter lods enter lods enter lods enter stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl jae jg mov stos mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) jmp idiv add or sub xor aas inc dec push push pop popa data16 enter lods enter lods enter lods enter lods enter lods enter ja (bad) mov test vaddsubps fndisi(8087 out repnz add push adc pop and inc inc dec push push pop add je addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub ss dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub lods enter lods enter lods enter lods enter lods enter lods enter dec push pop pop fs jbe addl mov aad loopne in icebp add incb or adc pop and inc inc dec push push pop bound jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in lock sti add enter lods enter lods enter lods enter lods enter ds pop sbb daa sub dec dec push pop pop gs jbe addl mov mov fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop gs jbe addl mov enter lods enter lods enter lods enter lods enter lods aam loopne jmp idiv add or pop add and das xor inc inc dec push push pop popa insb jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl jae jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcmovu in lock add or pop sbb sub dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub call add unpcklps and inc inc dec push push pop bound jae jle mov lods enter lods enter lods enter lods enter lods enter lods enter mov mov ret rcr fsubp ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp add push push pop popa enter lods enter lods enter lods enter lods enter lods enter insl jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos mov mov (bad) fsub out repnz std add push adc push and das xor aas inc dec push push pop popa data16 jno jl xchg test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov rcr (bad) ljmp adc sbb sub lods enter lods enter lods enter lods enter lods enter lods sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop add jno jl xchg test vaddsubps fndisi(8087 out icebp enter lods enter lods enter lods enter lods enter lods enter std add or sub xor inc inc dec push push pop popa insw jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repz incb or adc pop and das xor push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out add stc incb unpckhps and inc inc dec push pop pop arpl je jg mov stos mov enter lods enter lods enter lods enter lods enter lods enter ret rcr fsubp jmp add and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub cmp pop pop fs jne add popf mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge lods enter lods enter lods enter lods enter lods enter lods orl stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound je jg mov stos mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop fs jne addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) int3 rcl fsub call add lldt xor cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub dec enter lods enter lods enter lods enter lods enter lods enter pop gs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loope in repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addb add (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps lods enter lods enter lods enter lods enter lods enter sbb and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpckhps and cmp pop pop fs jne addb cmpsl lods mov mov fnop in icebp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fsub enter lods enter lods enter lods enter lods enter lods enter in repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add adc xor cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol add xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter lods enter mov aad loope in icebp idiv add or sub xor inc inc dec push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc push and das xor aas inc dec push push pop pusha data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop popa insl jb jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop add jne addb test mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop bound jb enter lods enter lods enter lods enter lods enter lods enter mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out cmc cli add or push sbb daa sub cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out add sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor push push pop popa data16 jb jge mov test (bad) (bad) fsub out repnz std add push adc push and das xor aas enter lods enter lods enter lods enter lods enter lods enter push push pop popa insl jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl lahf movsl stos mov mov xlat fsub call add unpcklps and inc inc dec push push pop arpl jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock add or lods enter lods enter lods enter lods enter lods enter lods enter and xor ds dec dec push pop pusha imul (bad) xchg test (bad) (bad) fsub out repnz add push adc push and das xor push push pop bound jb jge mov stos mov mov xlat fsub call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out cmc cli add sbb cmp inc dec push push pop pusha data16 jno jl mov test vaddsubps fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop imul nop xchg fwait mov mov fmul lods enter lods enter lods enter lods enter lods enter lods fucom jmp add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub cmp pop pop fs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl add lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jb jge mov lods enter lods enter lods enter lods enter lods enter lods movsb stos mov mov xlat fucom call add unpckhps and push pop bound jl mov out adc sub cmp ja nop pushf mov ret aam loopne in repnz incb adc sbb sub dec push push pop arpl jne addb movsl stos mov mov fnop out repz incl and cs inc inc dec push pop pop fs jbe addl mov fndisi(8087 out repz incb adc sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov adc pop and inc dec dec push pop pusha data16 jb jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol ror lods enter lods enter lods enter lods enter lods enter ds in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl add fndisi(8087 out repz add or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call add and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pusha imul orl lods mov mov fsub call push or sbb and xor cmp inc dec push pop pop imul test test mov rol rcr fsubp jmp enter lods enter lods enter lods enter lods enter lods enter lods pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov add int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp clc incb adc xor aas inc dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpcklps and sub dec push push pop bound je addb stos mov mov fnop in icebp idiv add unpckhps and sub dec push pop pop imul xchg cltd lahf movsl stos mov mov fndisi(8087 out repnz incb adc sbb sub enter lods enter lods enter lods enter lods enter lods enter inc inc dec push pop pop imul xchg lcall (bad) lret fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov cmpsl lods mov mov fucom jmp pop or sub aaa cmp pop popa insb jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub dec push push pop bound je addb test (bad) int (bad) sbb es aaa cmp pop popa insl jb jg mov lods enter lods enter lods enter lods enter lods enter lods enter test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec push pop popa data16 jb jle mov scas mov rolb int (bad) in icebp idiv add unpcklps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov lods enter lods enter lods enter lods enter lods enter lods enter aam loopne in repnz incb adc xor aas inc dec push push pop arpl je addl mov aad loope in repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fneni(8087 out repnz incl and cs inc inc dec push pop pop fs jbe addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe addl mov fneni(8087 out lods enter lods enter lods enter lods enter lods enter lods enter incb adc sbb sub xor aas inc dec push pop pop fs jbe (bad) mov cmpsb lods mov mov fsub call push or pop sbb cmp dec push pop pop fs ja orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) xchg stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fnop out repz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc lods enter lods enter lods enter lods enter lods enter ds sbb sub xor inc inc dec push push pop arpl jne addl mov aad loope in repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fucom call push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub jmp pop or sub aaa cmp lods enter lods enter lods enter lods enter lods enter ds dec dec push pop pusha data16 jb jle test test (bad) int fcomp in lock add push adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) xchg stos mov mov fsub call add and das xor push pop pop gs lods enter lods enter lods enter lods enter lods enter lods enter jge mov lods mov mov fucom call pop or sub aaa cmp pop popa data16 jb jle mov scas mov rol rcr fsubp jmp pop or sub cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa outsb je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpcklps and sub cmp inc dec dec push pop popa add je addb enter lods enter lods enter lods enter lods enter ds popf mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) in repnz std add unpckhps and sub dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov mov fucom jmp push or sbb and das xor push pop pusha data16 jb jge mov lods mov mov fsub out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl adc sbb sub xor aas inc dec add pop fs jbe (bad) mov lods mov enter lods enter lods enter lods enter lods enter lods enter ds fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub jmp push or sbb and xor cmp inc dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl adc sbb cmp dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc pop and ds dec push push pop bound je addb test (bad) int fcomp enter lods enter lods enter lods enter lods enter lods enter lods in lock add or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and aas inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add enter lods enter lods enter lods enter lods enter lods enter adc xor ds dec push push pop arpl jne addl mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addl mov fnop out repnz add unpckhps and sub dec push push pop arpl je addb stos mov mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb test (bad) int3 rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add unpckhps sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub enter lods enter lods enter lods enter lods enter lods cmp inc dec push push pop arpl jne addl mov fcmovu in icebp idiv add unpckhps and sub cmp inc dec push push pop arpl jne addb stos mov mov fnop out icebp idiv add unpckhps and sub dec push push pop bound je addl mov fneni(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop fs jne addl mov fndisi(8087 out repz incl and das xor push pop pop gs jbe (bad) mov lods mov mov fsub call push add sub aaa cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp or adc and sub cmp inc dec push push pop popa enter lods enter lods enter lods enter lods enter lods enter jns test test (bad) int (bad) in lock add push adc and sub dec push push pop bound je addb test (bad) int (bad) in lock add push adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp jmp pop or sub ss dec dec push pop pop imul test test mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb lods enter lods enter lods enter lods enter lods enter mov rol rcr (bad) jmp clc incb adc sbb daa sub dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp add push adc and sub cmp pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov enter lods enter lods enter lods enter lods enter lods enter lods rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr add in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop fs jne addl mov fndisi(8087 out lods enter lods enter lods enter lods enter lods enter lods enter in repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je jg mov scas mov rol add fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop arpl jbe (bad) mov lods mov mov fsub call add lods enter lods enter lods enter lods enter lods enter and das xor push pop pop imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fsubp ljmp adc and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insb jb jle mov scas mov mov fcomp in lock add or sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb adc xor inc inc enter lods enter lods enter lods enter lods enter lods enter ds push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jne addl mov (bad) fsub call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fsub call add and das xor push pop pop imul lods enter lods enter lods enter lods enter lods enter jge mov lods mov mov fucom jmp pop or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insb jb jle mov test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incl adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl adc sbb cmp dec push pop pop fs jbe (bad) mov lods enter lods enter lods enter lods enter lods enter lods enter mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov mov fucom jmp or adc and inc dec dec push pop popa insl jae jg mov scas mov rol enter lods enter lods enter lods enter lods enter lods rcl fucom jmp pop or sub aaa cmp pop popa data16 jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg add mov mov fnop out repnz incb adc sbb daa sub dec push push pop bound je addb stos mov mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov fndisi(8087 out pop outsb jns nop fwait cmpsb mov lret (bad) loope notl push daa xor push pop gs xchg rcr (bad) out hlt cli add or sbb enter lods enter lods enter lods enter lods enter lods enter ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb sub dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc add push pop pusha data16 jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add or sub xor push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz enter lods enter lods enter lods enter lods enter lods enter lods std add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps xlat fucom call add unpckhps and push pop popa insl jae addb test fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out enter lods enter lods enter lods enter lods enter lods enter idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jge mov movsl stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov lods enter lods enter lods enter lods enter lods enter lods mov ret enter fsubp ljmp adc sbb daa sub aaa cmp pop pop imul nop xchg pushf mov mov lock add unpckhps xor inc inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec add pop arpl jae jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc dec dec push pop pop imul nop xchg pushf mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl enter lods enter lods enter lods enter lods enter lods enter mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov flds loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub pop arpl jne (bad) mov incb or ds dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz lods enter lods enter lods enter lods enter lods enter ds add push adc pop and das xor push push pop bound jae jle mov stos mov mov ret enter (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test lods enter lods enter lods enter lods enter lods enter lods enter lret fndisi(8087 out repnz add push adc pop and das xor dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out repz incl and sub aaa cmp pop pop imul nop xchg fwait mov mov out hlt cli add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov lods enter lods enter lods enter lods enter lods enter mov xlat fsub call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop popa insl jae addb lods enter lods enter lods enter lods enter lods enter lods xchg cwtl sahf movsb add fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop arpl jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec add pop pop fs lods enter lods enter lods enter lods enter ds jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov out hlt cli add push adc and aas inc dec push push pop popa data16 jno jge mov test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fndisi(8087 out icebp idiv add or adc pop and das xor push push enter lods enter lods enter lods enter lods enter lods pop bound xchg stos mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov out hlt cli call pop and inc dec dec push pop pusha data16 jb jle popf mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor push push pop popa insl jb jge mov lods enter lods enter lods enter lods enter lods enter cltd lahf movsb stos scas mov rol rcl fndisi(8087 out repnz add or sub xor aas inc dec imul orl rol rcl icebp idiv add unpckhps and sub dec fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter scas mov mov fnop in icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb sub xor ds dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov jmp pop or sub push pop pusha imul (bad) xchg movsl stos mov mov xlat fsub out repz incb or adc pop and das xor push push pop bound jb jle mov lods enter lods enter lods enter lods enter lods enter lods enter mov mov xlat fucom call add push adc pop and xor push push pop bound jae jle mov mov fsubp ljmp adc xor cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop add insb jno jl mov test (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push pop bound jb jge mov lods enter lods enter lods enter lods enter lods enter xchg cltd lahf movsb stos mov mov xlat fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec imul orl scas (bad) int (bad) in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pop gs jbe or lods enter lods enter lods enter lods enter xchg lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock cli add or push sbb daa sub dec dec push pop pop gs jne addb add (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret out cmc sti add push adc and sub dec push push pop popa insl jb lods enter lods enter lods enter lods enter lods enter orl stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test (bad) int3 rcl fsub out repz incb or adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub call add push adc pop and xor push push pop add outsb je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and sub aaa enter lods enter lods enter lods enter lods enter lods enter dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push insl jae jg mov rcr fsubp jmp add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub lods enter lods enter lods enter lods enter lods enter lods enter dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or sub xor aas inc add push pop popa data16 jb jge mov test (bad) aad loopne in icebp idiv add or sub xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz add or sub xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add lods enter lods enter lods enter lods enter lods enter or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat icebp idiv add movhps sub xor pop arpl je jg mov lods mov mov (bad) in out hlt cli add push or pop sbb sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock enter lods enter lods enter lods enter lods enter lods enter lods enter or push sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop fs jne addb mov mov fnop in lock add or sbb cmp inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push outsb jne addl rcl fsub out repz incb or adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fsub out lods enter lods enter lods enter lods enter lods enter repnz std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and das xor dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl lods enter lods enter lods enter lods enter lods enter lods enter mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad fsub out repnz add push adc push and xor push push pop bound jae jle mov stos mov mov xlat fdiv cld add push adc and sub pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb enter lods enter lods enter lods enter lods enter lods enter lods enter mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loope in repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc xor cmp inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp dec dec push pop pop ja enter lods enter lods enter lods enter lods enter lods enter xchg pushf mov aam (bad) ljmp adc sbb daa sub aaa cmp push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop enter lods enter lods enter lods enter lods enter lods enter imul addl mov aad add out repnz add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat (bad) std add push adc and sub pop gs jne addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push enter lods enter lods enter lods enter lods enter lods enter insl jae jle mov cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) int3 rcl fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock add or pop sbb lods enter lods enter lods enter lods enter lods enter lods and add aas inc dec push push pop popa data16 jb jge mov test (bad) (bad) fsub out repnz std add unpcklps pop and inc inc dec push push pop bound mov mov jmp add and sub aaa cmp pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sbb cmp inc dec dec push pop pop gs jbe addl int fnop out repnz incb adc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps add daa sub aaa cmp lods enter lods enter lods enter lods enter lods enter lods inc dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne add or sbb sub xor inc inc dec push pop pop js test movsl stos mov mov fcomp jecxz out hlt stc incl adc xor cmp lods enter lods enter lods enter lods enter lods enter lods enter inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test mov mov fndisi(8087 out repnz add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov fcomp add jmp add and sub dec dec push pop pop fs jne addb test mov mov fcmovu in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add enter lods enter lods enter lods enter lods enter lods enter ds adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl mov lods mov mov fucom call push or sbb and xor cmp dec dec push pop pop data16 jb jle mov test (bad) int3 rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fndisi(8087 out repnz sbb enter lods enter lods enter lods enter lods enter lods enter lods cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop add jl mov test vaddsubps fsub out repnz std add push adc pop and xor cmp dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop imul nop xchg pushf mov mov (bad) in add unpckhps lods enter lods enter lods enter lods enter lods enter lods enter cs inc inc pop imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov (bad) in out cmc cli add and add dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repz incb unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli enter lods enter lods enter lods enter lods enter lods enter or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa insl jb jge mov stos mov mov rcr fsubp jmp add and sub aaa cmp pop pop fs mov scas mov rol out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov fcomp jecxz out repz lods enter lods enter lods enter lods enter lods enter stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl orl stos mov mov (bad) fsub out repnz incb unpcklps and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop imul nop xchg pushf mov mov lods enter lods enter lods enter lods enter lods ret enter (bad) ljmp adc sbb daa sub cmp inc dec dec push pop pop imul addl mov aad loopne jmp or push sbb sub xor insb jb jge mov stos mov mov xlat fucom call add unpcklps and add dec push pop pop arpl je jg mov lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fsub out repnz add push adc push and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov enter lods enter lods enter lods enter lods enter lods enter ds fcomp in out hlt cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec push push pop popa data16 jno jl mov test vaddsubps xlat fsub call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl xchg lods mov mov out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods enter lods enter lods enter lods enter lods enter lods enter mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov movsl stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov test (bad) xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom jmp add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne lods enter lods enter lods enter lods enter lods enter lods enter xchg cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb and das xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp or sbb and xor cmp outsl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb enter lods enter lods enter lods enter lods enter lods enter jb,pt jge mov test (bad) int3 rcl fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp add ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test (bad) (bad) fndisi(8087 out icebp idiv add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub lods enter lods enter lods enter lods enter lods enter lods enter inc dec dec push pop pop fs jne xchg fwait mov rol rcr fsubp jmp pop or sub aaa cmp pop pusha insl xchg add lret rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor enter lods enter lods enter lods enter lods enter lods enter ds inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repz incb or adc pop and add dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp notl push sbb sub xor sbbb lret rcl fucom jmp pop or sub aaa cmp pop popa insl jae jle mov scas mov ror aam loopne in repnz incb adc sbb sub xor inc inc dec push pop pop fs jne xchg enter lods enter lods enter lods enter lods enter lods fwait mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pusha imul jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc push and das xor push push pop popa enter lods enter lods enter lods enter lods enter lods enter ds jno jge mov stos mov mov (bad) fsub out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno (bad) xchg pushf mov ret aam loopne in repz incb adc sbb sub xor push pop pusha insb jb jle mov rol rcl fucom jmp add adc xor cmp inc dec push pop pop arpl je jg mov lods mov rcr fsubp ljmp adc and sub dec push push pop popa insb jb jns test movsl stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul (bad) xchg lods enter lods enter lods enter lods enter lods enter sahf mov mov fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop arpl jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock add add sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg test (bad) lret fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha enter lods enter lods enter lods enter lods enter lods enter lods enter jbe addl mov aam (bad) jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jge mov test vaddsubps fsub out repnz incb or adc pop and inc inc dec push push pop arpl je jg mov lods mov mov fcomp in out hlt cli add and sub dec dec push pop pop imul addl mov rol rcl fsub out repnz std add push adc pop and xor cmp inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub lods enter lods enter lods enter lods enter lods enter lods enter inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop bound jb jle mov stos mov mov fcomp jecxz out repz incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub xor ds dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti enter lods enter lods enter lods enter lods enter lods enter add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne in repnz add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add push adc push and das xor push push pop popa data16 jno jl mov test add lret rcl fsub out repnz incb or adc and sub ss inc dec push push pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov enter lods enter lods enter lods enter lods enter rcr fsubp jmp add unpckhps and sub ss inc dec push push pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jg mov lods mov mov (bad) in out hlt cli add and sub cmp push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop imul addl lods enter lods enter lods enter lods enter lods enter xchg xchg pushf mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) (bad) fsub out repz incb unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop enter lods enter lods enter lods enter lods enter lods enter ds gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae add mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov (bad) in out cmc sti add or push sbb enter lods enter lods enter lods enter lods enter lods enter lods enter cmp pop pop gs jne addb test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz std add add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor push push pop popa data16 jb jge mov test vaddsubps fsub out repnz std add push adc push and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out enter lods enter lods enter lods enter lods enter lods hlt cli incl and sub aaa cmp pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jb jge mov movsl stos mov mov xlat fucom call add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jbe addl mov lods enter lods enter lods enter lods enter lods enter lods mov fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and sub add cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pusha imul (bad) xchg lods enter lods enter lods enter lods enter lods enter lods enter xchg cwtl sahf mov mov fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov rcr fucom jmp add and sub aaa cmp dec dec push pop pop imul xchg xchg pushf mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push enter lods enter lods enter lods enter lods enter lods enter pop pusha imul addl mov aad loope in repnz add push adc pop and xor push push pop add outsb jae jle mov stos mov mov xlat fsub out repz incb unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and lods enter lods enter lods enter lods enter lods enter ds ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out add sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa data16 jb jge mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop popa data16 jno jl xchg stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp in enter lods enter lods enter lods enter lods enter lods enter lods out hlt cli add and sub cmp pop pop imul mov lods mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor push push pop popa insb jb jge mov test (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa data16 jb jge mov test (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov lods enter lods enter lods enter lods enter lods enter mov ret rcr fucom jmp add lldt sbb daa sub aaa cmp pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jge mov test vaddsubps fsub out repnz add push adc pop and xor push push pop bound jb jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov fnop in icebp idiv add or sbb cmp inc dec push push pop pusha imul (bad) mov test (bad) lret rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle lods enter lods enter lods enter lods enter lods enter lods orl add into rcr (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add push adc and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub inc enter lods enter lods enter lods enter lods enter lods enter lods dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop bound jb jge mov stos mov mov rcr fsubp jmp add lods enter lods enter lods enter lods enter lods enter lods push sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor push push pop popa insl jb jge mov stos mov mov xlat fsub out repz incb or adc pop and xor cmp dec push push pop add outsb je jg mov lods mov mov fmul lods enter lods enter lods enter lods enter lods enter lods enter jecxz out hlt stc incl and sub ss dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb test mov mov fneni(8087 out icebp add std add push adc push and das xor push push pop popa insl jb jge mov enter lods enter lods enter lods enter lods enter lods enter mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop bound jae jle add cmpsb lods mov mov (bad) in out cmc cli add and sub cmp inc dec dec push pop pop imul lods enter lods enter lods enter lods enter lods enter lods enter xchg lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor inc inc dec push push pop popa data16 jno jl xchg stos scas mov rol rcl fsub out repz incb or adc sbb es aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub ss lods enter lods enter lods enter lods enter ds inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb unpcklps pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jae jle mov cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul addl mov aam (bad) ljmp enter lods enter lods enter lods enter lods enter lods enter push or pop sbb cmp inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jle mov stos mov mov xlat fsub call add unpcklps pop and cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov enter lods enter lods enter lods enter lods enter lods enter iret aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov rcl fsub out repnz std add unpcklps and inc inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add push adc and inc inc dec push pop pop arpl je jg mov lods enter lods enter lods enter lods enter lods enter ds fwait mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl je jg mov lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop add imul (bad) mov test vaddsubps fsub out repnz std add push adc pop and xor push push pop bound jae jle mov lods mov rcl fucom jmp and cmp rcr jmp push sub cmp pop enter lods enter lods enter lods enter lods enter ds insl jae jg mov scas mov rol out repnz std add push adc pop and das xor push push pop popa insb jb jge fwait mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb stos mov mov fnop out stc add or sbb sub aaa cmp pop popa insl jae jg mov rol rcr fucom call add unpckhps and sub ss inc dec push pop pop arpl jne jl xchg lods mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addb lods enter lods enter lods enter lods enter lods enter lods enter popf mov mov fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop fs jne sbbb mov fsub call push or sbb add inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp incb or adc and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli add and sub aaa cmp pop pop gs jne addl lods enter lods enter lods enter lods enter lods enter lods enter mov mov fnop out icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl jae jle mov stos mov mov add fsubp jmp add and sub dec dec push pop pop fs jne addb test mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound lods enter lods enter lods enter lods enter lods enter ds jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add push adc push and das xor push push pop popa data16 js orl stos mov mov xlat fsub call add unpcklps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb enter lods enter lods enter lods enter lods enter lods enter lods cmp inc dec push push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out repnz std add push adc push and das xor push push pop popa insl jb jge mov test (bad) aad loopne jmp idiv add or sub xor ds dec dec push pop pop gs jne addl mov aad loopne jmp testb add push adc push and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb unpcklps and inc inc dec push push pop arpl jae jg mov stos mov mov (bad) in out cmc cli enter lods enter lods enter lods enter lods enter lods enter lods enter adc sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fnop out icebp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out cmc cli add and sub dec dec push pop pop fs jne addb mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor push push pop popa insl jb jge mov stos scas mov ror lods enter lods enter lods enter lods enter lods enter lods enter (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov lods enter lods enter lods enter lods enter lods enter xchg lcall ret rcr fsubp jmp add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jne addl lret fucom jmp push and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl jae jle lods enter lods enter lods enter lods enter lods enter mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor push push pop bound push test cmpsb lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov (bad) fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp dec enter lods enter lods enter lods enter lods enter lods enter push pop pop imul nop xchg pushf mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp push adc push and das xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov xlat fucom call add enter lods enter lods enter lods enter lods enter lods enter lods unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg xchg lods mov mov fnop in lock add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov aad lods enter lods enter lods enter lods enter lods enter lods enter fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out repnz std add push adc sbb sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp in out hlt cli incl or push sbb daa sub dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or pop push and das xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop imul nop xchg pushf mov lods enter lods enter lods enter lods enter cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jbe addl mov mov fndisi(8087 out repnz add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in icebp idiv add or sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop fs lods enter lods enter lods enter lods enter lods enter jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa add pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub enter lods enter lods enter lods enter lods enter ds dec dec push pop pusha imul addl mov rcl fsub out repnz add push adc pop and das xor push push pop popa push orl stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl scas mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne in icebp idiv enter lods enter lods enter lods enter lods enter lods enter add or sub xor aas inc dec push push pop add insl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp inc dec dec push pop pop gs jbe addl mov lods enter lods enter lods enter lods enter lods enter aam (bad) jmp icebp idiv add or sub xor aas inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov (bad) fsub out repnz std add push adc push and das xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae add enter lods enter lods enter lods enter lods enter lods enter xchg fwait mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out repnz add or sub xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or adc sbb cmp inc dec push enter lods enter lods enter lods enter lods enter lods enter lods push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov (bad) fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jge mov movsb stos mov mov xlat fucom call add unpckhps lods enter lods enter lods enter lods enter lods enter and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add push adc and cmp dec dec push pop pop imul xchg xchg pushf mov mov (bad) enter lods enter lods enter lods enter lods enter ds out cmc cli add or push sbb daa sub cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push push pop bound jae jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov (bad) fndisi(8087 out repnz add or sub xor push push pop popa insl jb jge mov stos enter lods enter lods enter lods enter lods enter lods enter lods mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jb jle mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor push push pop bound jb jle mov stos mov mov (bad) fsub out repz incb or adc and inc inc dec push push pop arpl jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and inc inc dec add pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop gs enter lods enter lods enter lods enter lods enter lods enter jnp xchg lods mov mov (bad) in lock sti add or push sbb daa sub cmp inc dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test mov mov fildl loope in repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa enter lods enter lods enter lods enter lods enter lods enter cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in lock add or sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha gs xor push push jns,pn ja ret movsl push popa int3 inc bound cwtl loope push xorb xchg js fisttp push pop aad (bad) insb stos test or out imul ficompl adc fstl push inc mov xchg outsl pop xchg jmp add jns and pop pusha push jo add mov push xchg cmp dec xchg subb ljmp pop aam lods cs mov shrb ficom lret xchg repnz subl js dec dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub jg push scas mov (bad) cmp movsb inc xlat and in imul mov bound mov lock and lret mov cmp jbe or ret movsl push popa int3 inc bound jns,pn ja adc cmp mov cmp add test mov test pushl test pop cmp jmp test cmp push cmp test xor test pop test cmp ret test cmp cmp cmp inc cmp rdtsc cmp cmp jne test pop test add cmp push cmp ret pop jb push sub push mov inc stos jl (bad) jno xor jae pop or das scas je test cmp cmp test test call cmp jmp cmp pop test clc adc mov cmp mov cmp inc test inc test inc test sub test test mov cmp cmp call test cmp push cmp cmp test jne mov test add test mov cmp add test call cmp jmp test pop cmp push cmp push cmp push cmp mov test call cmp pop test cmp jl test mov cmp sub cmp mov cmp sub cmp call test mov cmp inc test inc test inc cmp inc cmp inc cmp inc cmp inc test inc cmp inc test inc test inc cmp push cmp mov cmp add cmp push test push cmp sub test sub test push cmp call cmp jmp cmp pop cmp test inc cmp mov test xor test mov cmp cmp jne cmp mov cmp cmp sub test mov cmp call cmp or test test jne cmp jmp test mov pop repz and fnstcw sbb test push jp push dec fwait lods mov mov pop jle cmpl pop mov addb mov sarl add (bad) (bad) inc add mov daa (bad) sub cmp add adc test popa mov loop test fnop xor (bad) push aas jge push rorl jmp repnz dec gs mov sub (bad) neg outsb sbb xchg mov or xlat clc sbb or out imul cs pop sub inc jne pop fnstsw xchg into pop mov and clc push mov cwtl mov (bad) xor ljmp aaa and sbb call mov or cmp xchg xor lods xor fild test pop test pushl test pop cmp mov cmp mov test push cmp mov test mov cmp push cmp pop cmp add test cmp jne cmp push cmp pop test add cmp cmp jne test pop cmp mov cmp mov cmp mov test add cmp mov cmp mov test add cmp mov test add cmp lods cmp test je cmp add test mov cmp cmp jne cmp mov test cmp jne cmp mov test push cmp pop cmp push cmp push test push cmp push cmp push test push cmp push test push cmp call cmp add cmp ret lret out outsb xor or xor mov cld inc scas mov push sti mov ss neg test jo imul or jnp int rep dec pop mov addl jno inc mov cmpsb push (bad) rol stc dec xchg add icebp dec fucom xchg add les and lods mov inc negb in rorl aad cmp xchg adc and or adc cmp notl dec in ror loope mov std lret fld1 pop sti (bad) lcall jnp imul mov jge getsec xchg iret pop mov cli stos sub hlt mov pop mov in xor fsts mov pop mov (bad) cmpsb aaa fdivrp mov cmp in push sar stos ss mov mov (bad) cmpsb aaa fdivrp mov sbb fmuls in fsubs and insb test in mov jmp add daa push mov jns mov push jecxz mov jbe pushf out hlt pop gs or into fwait aaa and sbb call mov jl mov rcpps mov (bad) outsb xor or xor inc scas mov push sti mov cltd neg test jo imul pop insl jnp int rep dec mov addl sbb sub mov push (bad) cli rol stc dec xchg add icebp dec fucom xchg add mov and lods mov inc negb cmc in dec push aad cmp xchg adc and or or das cmp notl in ror loope mov std lret fnstenv in mov mov mov sbb mov push jecxz mov pop jbe pushf out hlt pop gs or into fwait aaa and sbb call mov or cmp xchg xor lods xor (bad) and out outsb xor or xor mov cld inc scas mov push sti mov ss neg test jo imul or jnp int rep dec pop mov addl jno inc mov cmpsb push (bad) rol stc dec xchg add icebp dec fucom xchg add les and lods mov inc negb in rorl aad cmp xchg adc and or adc cmp notl dec in ror loope mov std lret fld1 sub (bad) dec and (bad) mov cmp mov cmp inc test mov cmp mov test ret sub sbb mov mov sbb mov push jecxz mov jbe pushf out hlt pop gs or into fwait aaa and sbb call mov jl mov rcpps mov (bad) outsb xor or xor inc scas mov push sti mov cltd neg test jo imul pop insl jnp int rep dec mov addl sbb sub mov push (bad) cli rol stc dec xchg add icebp dec fucom xchg add mov and lods mov inc negb cmc in dec push aad cmp xchg adc and or or das cmp notl in ror loope mov std lret fnstenv in mov mov mov sbb mov push jecxz mov pop jbe pushf out hlt pop gs or into fwait aaa and sbb call mov or cmp xchg xor lods xor (bad) and out outsb xor or xor mov cld inc scas mov push sti mov ss neg test jo imul or jnp int rep dec pop mov addl jno inc mov cmpsb push (bad) rol stc dec xchg add icebp dec fucom xchg add les and lods mov inc negb in rorl aad cmp xchg adc and or adc cmp notl dec in ror loope mov std lret fldcw mov sbb mov mov sbb mov push jecxz mov jbe pushf out hlt pop gs or into fwait aaa and sbb call mov jl mov rcpps mov (bad) outsb xor or xor inc scas mov push sti mov cltd neg test jo imul pop insl jnp int rep dec mov addl sbb sub mov push (bad) cli rol stc dec xchg add icebp dec fucom xchg add mov and lods mov inc negb cmc in dec push aad cmp xchg adc and or or das cmp notl in ror loope mov std lret fnstenv in mov mov mov sbb mov push jecxz mov pop jbe pushf out hlt pop gs or into fwait aaa and sbb call mov or cmp fdecstp (bad) (bad) jnp iret leave mov inc lods inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc mov push outsl inc push loope and mov or (bad) loop push or push loope daa push or fisttpl sbb pusha ss push or pushf (bad) or or or or or mov or or test insl dec bound bound pop or cmp out mov andl push add or or push or or out shrb stos or push push push pop pop or arpl ss repz or push or (bad) loop push or fstl out and jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg (bad) pop or sarl push mov andl cmp or out push or or lods fsubs es dec pop cmp adcb por out fildl bndldx out mov andl mov pop sbb (bad) lock (bad) sbb mov (bad) pushf out push pop sbb lock (bad) icebp (bad) or mov pop jbe mov int3 out push or ficom out dec adc adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc std adc (bad) (bad) dec cmp or mov mov daa out ljmp addb out stos or mov shrl or or inc loop call loopne rsqrtps outsl dec add pop and pop adc in jle out mov andl or loopne rsqrtps outsl dec push loope or je rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb fwait rcrb flds loopne and or loopne or or sbb lret push push lahf push or adcb insl inc push loope and mov or lea push or push loope cs or fisttpl insl inc push loope and mov or (bad) repnz insl inc push loope and mov or (bad) decb push or push loope and mov or (bad) cli or insl inc push loope and mov or (bad) (bad) or setno out (bad) outsl dec outsb loope or push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov in push mov push or lcall jge loopne or xchg fcomps out xor and stos or or adc or dec mov or pop push test out mov out addr16 sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp sarl cmp insl dec or sub push or push dec outsl dec push loopne pop push or push push or loopne negb negb or push (bad) outsl dec adc and push or cmpsl jns out add mov dec or dec or insl dec push dec outsl dec push loopne pop push or pop mov adc out cmp out push divl push or popa lods or or iret out push or or sbb add or addr16 push or or jge dec add pop pop mov push or (bad) pop pop scas loopne or or int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and int3 and xor sbb (bad) icebp out cmpsb dec insb adc adc jl iret in push or (bad) pop add mov out or adc insl je mov adc out push pusha out push or cmp out adc pop sbb (bad) adcb cmp mov movaps xor loope push inc and push mov lods pop stos mov mov test out jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp dec movsb jmp mov cmp mov add divl mov cmc sbb arpl outsl dec push andl (bad) adc (bad) or xor or jb pop out push jge (bad) and mov or insl cmp or insl or xchg mov and lea jge or sub mov jo in pop imul rolb pop mov cmp out push pop mov lods fsubs dec lret (bad) test or or dec testb add inc jbe xchg xor flds sbbb imul add lock scas sbbb test sbbb out fildl loopne or or mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov cli mov dec mov flds loopne sub or loopne imull dec into loope negb neg dec lret cs or out flds outsl add add or or cmp sbb xchg and push or push pop arpl loop out or clc or push add insl inc pop loope adc stos cmc sbb fisttpl pop mov subl push push insl inc pop loope adc pop add or push mov pop push (bad) dec or loopne or or jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg jle jg (bad) pop add sub or push mov pop push fimul out std sub out xlat mov or push or dec insl inc pop loope adc repz sbb lods jg (bad) sbb fmuls push sub xchg pop mov push sbbl cmp or mov out mov lret xchg or mov adc push gs or mulb not test out push bound or or into or or lea push or ds or or jle xorl dec andl adc mov or mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov or lods jns mulb sub jle xorl dec mov or inc add jbe out cmp mov lods jge mulb not testb arpl inc outsb insl inc push outsb scas outsl add (bad) inc mov push or outsl jmp cmpsl aas outsl push rcrb jnp cmpl push ljmp add cmp or mov add or addb pop or mov inc inc iret out push or mov mov or jmp or inc out loopne adc or loopne rep negl jle xorl (bad) mov or sbb push or dec loope or ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja ret cltd ja push (bad) subb mov or gs pop pop not testb add push or inc mov (bad) sbb inc into sbbb add push push das stos negl mulb notl push pop arpl or or dec mov bound out push sbb or or pop not test out push andl repz or cmpsb add or (bad) inc push out fistpl insl inc push loope pop push or cmp mov fninit addr16 out add push mov add fmuls fcoml out mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp mov cmp cmp mov out out add out xchg hlt out push pop insl pop pop not testb insl inc push xor sbb outsl test or or jecxz lret out add out xchg or or insl pop pop not testb outsl loop lret pop or mov iret mov and pop fstps mulb mov mov push insl xchg loop out fistl arpl out pop lods mov insl pop pop not testb out cmp mov add push mov add pop (bad) loopne or or inc loop fist out or jmp mov or or mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov subl push push push das movsb negl adc out push subl pop fs inc push loope adc mov idivb push mov pop fs (bad) mov or adc dec and arpl out pop js arpl out or popf bound push or scas pop out push jl (bad) pop or stc dec or push mov andl cmp loope push push or cmp sbb fcomi addr16 out add popa push sbb or add cmp or mov out push or or inc out loopne push out or mov lods (bad) pand out sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb inc test inc sbb pop mov hlt sbb or (bad) out add divl mov push out flds loopne push out or mov lods imull fimul out fcomi addr16 or xorl (bad) mov push push or or jmp not mov push push or push (bad) adc or stos or push push push daa cmpsb negl pop cmp mov lods cmp (bad) inc loop sub out or cmc std lods imull sub out flds loopne adc or loopne cli lods imull cs or dec loop push sbb or (bad) data16 insl mov or or (bad) or popa lea out (bad) daa jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl jge jl pusha sbb push or push cwtl out push pop sbb (bad) mov or out xlat mov or popa xchg push or xor or leave pop mov push or xlat test call or imul ret or or loopne push pop bound xchg push out pop mov adc or push (bad) js or aaa or sub lahf lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les lds les or leave pop mov push or sub or push (bad) mov or jo push enter or or jl xor or leave fildl dec push jge xor xchg push rolb bound or xor or leave es fisttpl or push (bad) jl or out push mov lea or or or or ret divl push or popa push or or or mov lods lahf lcall negl arpl sbb pop xor lret out push mov mov lods mov sbb mov or aaa insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb fdivs insb pusha loop push dec sbb lods mov sbb mov pusha in push or mov lods mov sbb mov andl or mov negb not lock (bad) mov imulb jl or mov push notl mulb jae push or subb out cmp mov lods mov insl push pop not test out push pusha in push or mov lods mov sbb jmp out or gs jge arpl jae push or loopne or or xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret xchg jnp iret sbbl or or mov fsts mulb jae push or loopne cmc sbb cmp insl pop pop not testb pextrw mov xor icebp push pop bound repz or cmpsb cmp dec testb mov or push pop add out xchg or (bad) inc push xorb jge inc mov gs pop cmp mov add jl hlt outsl iret fnstenv mov sti inc (bad) das add into push or or mul or and push or pop shl out push or or fwait add push or leave push iret mov and out or mov rorl ud2 push leave mov mov out inc sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz sbb repz adcl push or pop mov or out mul mov adc out push loopne or or or sub fildl loope in divb cli push xor repnz xor stc ljmp dec outsb mov or ljmp dec loope sbb mov neg push ljmp (bad) out cmp sbb mov (bad) out push (bad) in push (bad) out push or mov divl je sbbl pop lods popf cli or outsl dec push loope or pop mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lock inc (bad) out lods jg or dec out add pushf jb out add mov add or insl push outsb or (bad) sub insl dec pop subl push adc imul pand movsl orb clc or outsl not into out push or cmp mov cmp out adc pop sbb sbb or mov add mov add mov mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov mov rorb mov sbbl or iret out push or rcr gs push cmp ror in (bad) xor jl outsb insl or jl in outsl xchg or or ud2 mov outsb and xchg or or leave in xchg or jp mov or loop push or pop sbbl or out push (bad) in push (bad) in push or sbb mov fisttpl cmovp out fisttpl nopl out ror out push or out push or (bad) xlat int3 out push cmp orl adc pop or jle or push mov pop insl je sbbl or xlat rcr call add pop repnz dec gs iret adc testb sbb or loopne or mov das add not into out push or pop (bad) repz pop cmp ror in mov loopne or (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) cmp fwait add scas add or or or into loop lods mov sbb push icebp push or testb cmovbe out (bad) xor jl subl push push push lret mov sbb push or arpl sbb fcomi addr16 push add or or push (bad) out pop dec or or xor in push (bad) out lods divl adc pop cmpsb dec (bad) xor jl lret xlat shlb adc xchg dec jmp enter or in mov sub or jmp or push insl adc xchg lret or stc push or icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock icebp stos lock loopne add std or out push (bad) popa push cmp or or into or or (bad) ret or outsb or or push insl adc jne insl repz or cmpsb add cmpsl xor xchg repz loop push sbb or out jge adc fstpt dec adc pop mov xorl adc pop mov adc cli add repnz mov push out or push or adcb setbe out xchg or loopne push out or out push cmpl or or out push outsb insl cmp bound out xor sbb es andb enter or mov fistpl xchg fbld out push cmpl push push fimul push or adc push or orl adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov cli adc mov xorl or test or adc (bad) repnz jno arpl mov adc enter sub or jnp push or push push or imull push movb or addb pop or out pop push and push pop xchg (bad) pop sub inc jb sub mov jecxz inc or or cmpl or leave daa enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter add jmp add daa pop pop jbe sbbl sbbl push and or or xchg dec ror jecxz fwait dec xor xchg lock je or fstps or xchg jl or mov or or mov lods popf dec or mov iret push mov addb or pop subl xchg xor jp insl mov jno loope jecxz imul or or add idivb or insl add (bad) insl inc pop sub inc push andl jbe push or loopne shrl jp cmp xor push or nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret mov xchg insl ds cltd fistp testb xchg dec and jnp addr16 insb push loopne fisubr andw out or sbb sbb mov xor and ds andl or pop cmpl xchg jge jp data16 push loope negl dec aaa jl jl jnp jnp addr16 or inc xchg pop and insb add xchg jge imul cli test sbb jl pusha xor data16 xchg or nop jle lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret ljmp mov pop (bad) insb and imul test jl insb and xor pop cmp push mov sbb dec xchg insb xor cmp push mov inc xchg inc and dec and mov loopne call adc xor insb add xchg jge imul out or ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add ljmp add add negl inc es cmpl sbbl subl push clc mov sbb dec cmpl mov jo pop cmp push mov sbb pop cmpl mov jo pop cmp push (bad) negl dec aaa jl data16 xchg inc (bad) addr16 pop out ja sbb add pop and insb and dec add cmp or dec cmpl (bad) jge addr16 insb add push jnp or dec xchg insb xor and insb and or dec subl mov es xchg xor jp popa mov mov loopne or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in push or or in pop out sbb push insl test test jle pop and insb and loope fistp testb jge imul jno loopne out lods imull pusha xor jnp dec out popa fcompl testb jge imul loopne or or push mov push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or push or mov popa xchg dec cmp jge dec and mov loopne in lods mull insb add es mov and insl push loopne in lods mull xor insl and jp loopne out lods divl pusha cmp dec mov jnp loope fstps testb subl cmp xchg pusha cmp orl xchg outsb pop jle or negl dec and jge dec (bad) gs pop out sub sbb add dec (bad) gs or dec xchg sbb addr16 insb sbb insl ds out and sbb add jnp imul jnp dec sahf pop push loope or cltd jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja jbe ja (bad) mov dec out push pop out push loopne fisubrl mov pusha or adc jl pusha ds cmpsl jge jp imul cmpl push stos xchg sbb imul imulb mov jge pop out or sbb adc sbbw inc xor pop push loopne fisubrl gs xor pop and insb and loope fcompl notb sbbl orl add imulb insl mov imul rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl sarb rorl cli sbb dec add or inc mov pop jp data16 mov and insb jb xorl in pop aaa jl pop and popa aaa mov outsl sub insb sbb jl sub js daa add gs add gs inc aaa jno xor sub pop cmp jp push pop popa test jnp outsl es mov cmp mov push movsl jl jp addr16 cmpl mov pop xchg addr16 or lea mov cmp insb ds mov cmp aas jno insb sub or sub sub dec mov add pop xchg popa add gs cmp les mov or or adc or push movsl mov or loope ficompl notb out mov or or adc loope loop (bad) push outsb (bad) gs xchg xorl push cmpb test fs insb and push mov negl pop aaa outsl (bad) jp jp sub insl lahf sub mov aam lods divl loope stc sbb jl mov (bad) dec out push rcrb notb out mov add or mov pop push or adc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov je sbb cs int3 outsb dec pop (bad) hlt inc dec inc jmp pop sub daa push jp xor bound lods pop rcll dec add pop xchg adc ljmp adc (bad) mov cmp push cltd xchg push test xorl sbb bnd lret test fs lret cmpsb adc stos xchg inc pushf in push sbbb and es or out pop cli loope mov insb addl inc leave ret (bad) xor or (bad) je mov sti jne in arpl fsubrs cs dec jno dec xor (bad) (bad) pop push ret jl std or mov mov icebp and push aad insl ja inc fistl jecxz add lds mov scas cmp fdivrp dec lcall sarl outsb dec scas (bad) hlt int3 dec inc pop addps adc xor sub push inc enter gs bound pop push add dec xchg adc ljmp adc (bad) imul or add mov nop cltd pusha cmp mov js lret sbb jge lret cmpsb sbb push xchg sahf addr16 fiaddl out es xchg mov mov xor jb push hlt (bad) bswap cmp int3 push jp repnz mov dec jg xchg cmp jne lods out (bad) inc mov adc mov clc lock dec movsl xchg imull jg xchg inc (bad) jbe mov pop pusha pop xchg push insb cltd enter dec dec mov aam daa (bad) lret nop cmp xchg and popf dec adc or pop mov (bad) aaa jmp in loopne iret xchg je imul add sbb fisttp pop js lea sbb fidiv popa je rep ret xchg xchg test push mov and (bad) out mov mov mov push push imulb in test lods out and leave out insl in bound es push outsb subl adc xor jb inc hlt (bad) imul sqrtps repnz int3 push dec movsb pop dec mov cld jg lods xorl mov inc shlb (bad) mov dec clc mov gs fsubrl movsl jl (bad) (bad) jbe mov pop pusha fildl pop pushf hlt add insb dec mov (bad) cmp cmp test pop shll dec adc mov aaa jmp in jge iret int xchg loopne sub sub sbb fbstp pop sahf rorl loope popf adc popa je rep fwait xchg fs cmp push mov xor jle les mov mov push push imulb test out das lcall in (bad) es ret push bound outsb jno inc cli adc xor cwtl outsl inc cmpsb (bad) imul into jp pop pop int3 push dec movsb repnz mov cld jg lods cmp jne aas out ja mov or inc pop inc push aam js outsb rorl mov pop add int out adc xor popa in jge out push jmp cmp and aad les push sbb or stos mov es fwait xchg jno jle,pt mov push insl pop push inc lock pusha push fadds cmp mov daa gs pop movsb and cli mov and jmp jnp dec sbb adc iret cmpsb jns mov outsl inc inc push mov xchg dec add repnz je mov jbe cmpsl scas ja fucomi nop xor ss sbbl and stc negb (bad) hlt loop push fadds sub lahf inc (bad) sub rorb lds or outsl negl inc (bad) cmp add pop call aam js inc and and sub add add sub add add add add add add add add and add add add or add adc add add add add cmpsb adc add and add add add sbb add adc add add add add mov add sub add sub add push add add add add add add add add cmp push dec add push adc cmpsb pop push add popa adc mov dec and orb xchg inc and xchg dec and cwtl pop and add push add push xor add insb das add arpl add pop add les add popa pop add add lds add imul into jb add jb add jp add pop and (bad) pusha and add ja add jns add jge add xor (bad) je add jle add dec inc add dec dec add inc add inc inc add dec dec add dec add dec add pop push add dec dec add dec add mov add push push add push add push push add push push add pop add fs add pop add inc add jne add outsb imul xchg jne add jae add je add data16 arpl mov jl add js add jb add push pop add push pop add pop pop add jne add jg add jns add gs bound int3 gs gs ret push imul imul insb insb add outsb jo (bad) jne add jb add jbe add jnp add jp add jno add je add js add jne add jbe add jns add js mov jnp add jl add andl add mov (bad) test add mov add xchg les push add xchg inc add xchg dec add lcall in pop add cmpsb push add movsb pop add test lret add cmpl mov add scas jbe repz add mov add jle add mov add mov mov popl mov xchg xchg add cwtl xchg add lcall scas lahf lcall movsb lahf add mov add xchg add (bad) test (bad) mov add xchg add mov add lcall rorb xchg add xchg xchg add xchg cltd add fwait lcall mov add test in mov jmp mov add mov add mov add xchg xchg add popf cltd add popf popf add xchg xchg add xchg xchg add cwtl xchg add fwait lcall mov lahf add mov mov add test add stos test xlat mov add scas mov enter les mov add test add test add stos test sti lods test add scas lods add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov mov repz mov add les add ret les out lret les test rolb int3 les clc lret not lret add fmul add sar add (bad) pushl add add lods test test fldl add fcompl dec dec dec inc cmp cmp cmpsl add add push insl jge (bad) leave enter outsl addr16 xor dec lahf pop jo fsubrp out jmp loop aad ror enter xor stos fs call jmp loop (bad) rcl into mov add add gs sti cmc cmc repnz cli cmc cmc cmc cmc lock enter jae cmp mov jne cli sti sti cmc stc sti sti sti std cld cld cld std std std cld sti cmc aam (bad) jnp addr16 cmpsb add js cli cld sti sti stc sti sti sti sti sti cld cld cld cld std std std std std cld cli out jp dec xor lods mov cli cld sti cmc cmc cmc cmc stc stc stc sti sti sti sti cld sti cld cld std std std std std hlt lret inc xor add add add repnz cmc cmc cmc stc stc stc sti sti sti sti sti cld mov cld cld clc int3 jb ds add add add mov out out out lock cmc cmc cmc stc stc stc sti sti sti sti sti cld cld sti int3 insb inc ss add add add mov in jmp out out out lock cmc cmc cmc stc stc sti sti sti sti cli hlt mov add add xlat fdivr jmp loope loop in jmp jmp out out lock cmc cmc cmc stc stc sti sti out jbe das add add add out aad aad (bad) loope loop loop in jmp out out lock cmc cmc stc cmc int3 dec xor add in (bad) rcl aad aad (bad) (bad) loope loop in jmp out out out lock jmp add add int iret rcl rcl rcl rcl aad (bad) loope loope loop in jmp out out out lock push add mov pusha (bad) into iret iret iret iret rcl rcl rcl rcl aad aad (bad) loope loope in jmp jmp out out lret cmp or ror into into into iret iret iret iret rcl rcl rcl rcl aad (bad) (bad) (bad) loop loop in lret add sbb adc cli addl ret (bad) rcl rcl rcl aad (bad) (bad) loope loop aas mov sbb and and and and and and push mov rcl rcl rcl rcl aad (bad) ffreep inc add push test mov xchg add rcl rcl rcl rcl aad rcrb imul rcl rcl rcl xchg push dec add into into iret iret iret rcl rcl ror je add imul rcl rcl rcl rcl mov push cmp add enter into into into iret iret iret ror lds add popa mov fwait fwait fwait fwait fwait fwait fwait fwait fwait lcall rol (bad) leave leave leave into into leave jp add add pop xchg xchg xchg xchg cwtl cwtl xchg cwtl cwtl cwtl cwtl cwtl cwtl cwtl xchg mov push cli mov rol rol (bad) enter add add add xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg mov dec add jp (bad) mov rol (bad) ja add add add adc (bad) nop nop nop nop nop nop nop nop nop nop nop nop mov addb mov pop sub mov lea mov jnp addb add add mov mov es jp jnp jnp jg add and test sub add je jp jae (bad) push adc and and and and je jns add add add cli mov and and and and pop mov push push sbb sbb mov add add push xchg add add add add (bad) (bad) (bad) incl add cli (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) incl add clc add incl add push add incl add jmp add jg add incl add incl add pop add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov add add add add add add add add add add add add add add add add add add add add add add add add add add aas add add add jg add lock incl add clc add add add add add (bad) add add add (bad) incl add incl add push (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add sub add and add inc add add add add add add add add (bad) incl movsl jnp add test mov mov pushf pop arpl movsl imul cmp (bad) jae add jnp add cmp movb mov dec push add push pop add pop arpl pushf cmp add inc inc add cmp add push add push add cmp mov add arpl (bad) imul arpl fidiv add imul jnp add test test add mov call add jnp notl add cli test negl add lods lods add imul xchg xchg add jae add mov add movsl add lods lods add mov add mov jnp out mov add imul mov xchg jae add mov lods mov pushf test jnp imul movsl movsl add cmp jmp mov ljmp lods add lods movsl add mov inc add pushf xchg add lods movsl add inc cmp jae cmp inc mov add into movb inc xor arpl xor fidiv movb cmp add cmp add inc add (bad) mov add (bad) into add cmp add cmp movsl cmp add and neg (bad) add and lods push xor pushf push cmp lods inc sbb movsl cmp add or movsl inc adc jae sub movsl cmp add inc or lods dec adc mov sbb (bad) imul neg into add dec or mov adc arpl add dec add (bad) pop or mov or mov sbb (bad) imul (bad) test (bad) pop add into imul (bad) jae add xchg push add arpl add imul mov jnp add test add mov add xchg dec add pushf push add mov add add (bad) arpl add jae add mov add xchg inc add movsl pop add lods arpl out lods imul mov add imul out or (bad) jnp add test add pushf inc add pushf dec add lods arpl out pushf cmp idivl test add add ja ja dec dec dec add add add add add mov mov mov dec dec push push pop pop push pop push add add pop cmp adc outsb mov add inc cmp sub and pop outsb mov add mov pop fs inc push cmp sub sub and add add add add add pop pop inc imul jb inc push sub and pop bound add add inc pusha pusha pusha fs imul pop xor cmpxchg add add inc pop pop pop pop inc pusha pusha pusha fs imul sbb mov add add mov jb cmp cmp inc pop pop pop pop inc pusha pusha pusha fs pop push outsb mov add add push xor cmp cmp inc inc pop pop pop inc pusha pusha pusha fs add add xor xor cmp inc inc pop pop pop inc pusha pusha cmp mov add dec push xor push xor xor push push xor cmp cmp inc inc pop pop push sbb add add xor xor xor push xor xor push push xor cmp cmp cmp sub sub sub sub xor xor xor xor xor xor cmp push and sub das sub sub sub xor xor xor xor xor xor adcb and and and and and sub xor xor push xor xor push or xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg pushf mov xor sub sub xor xor xor or fwait fwait fwait fwait fwait fwait fwait fwait fwait fwait mov sub das sub sub xor xor mov add scas mov scas scas scas scas scas scas scas movsb js add daa sub sub sub sub sub mov add andl movsb movsb (bad) mov dec dec es sub sub mov add add stos stos stos stos stos stos stos stos stos stos xchg push sub es sub add add add mov cltd cltd cltd cltd cltd cltd lahf jae add and sub add add mov mov mov dec and and daa mov pop mov lahf xchg lahf xchg xchg jle add dec and and pop mov test test xchg mov add mov add add sahf sahf sahf sahf sahf sahf xchg mov mov add add je addb add add inc inc add add (bad) (bad) (bad) (bad) (bad) clc add inc add incl add incb add cld add psubb add lock add add add add add add add add add add add add add add add add add add add add add add jo add mov pusha jg add cld add incl jg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add add (bad) (bad) incl movsl jnp add test mov mov pushf pop arpl movsl imul cmp (bad) jae add jnp add cmp add inc dec add dec push add push pop add pop arpl pushf cmp add inc inc add cmp add push add push add pop pop add cmp mov add arpl (bad) imul arpl fidiv add imul jnp add test test add mov call add jnp notl add test jmp jae ljmp jnp pushf imul xchg xchg add jae add mov add movsl add lods lods add mov add mov jnp out mov add imul mov xchg jae add mov lods mov pushf test jnp imul movsl movsl add cmp jmp mov ljmp lods add lods movsl add mov inc add pushf xchg add lods movsl add inc cmp jae cmp inc mov add into movb inc xor arpl xor fidiv movb cmp add cmp add inc add (bad) mov add (bad) into add cmp add cmp movsl cmp add and neg (bad) add and lods push xor pushf push cmp lods inc sbb movsl mov add or movsl inc adc jae sub movsl cmp add inc or lods dec adc mov sbb (bad) imul neg into add dec or mov adc arpl add dec add (bad) pop or mov or mov sbb (bad) imul (bad) test (bad) pop add into imul (bad) jae add xchg push add arpl add imul mov jnp add test add mov add xchg dec add pushf push add mov add (bad) xchg add imul (bad) arpl add jae add mov add xchg inc add movsl pop add lods arpl out lods imul mov add imul out or (bad) jnp add test add pushf inc add pushf dec add lods arpl out pushf cmp idivl test add add ja ja dec dec dec mov add add mov add add add bound mov add add add cmp or bound mov dec pop pop fs cmp add lea xor imul and add imul pop pop pop fs bound lea xor pop pop pop bound and es push xor push xor and and and and xor xor xor bound addr16 sub sub xor bound lods lcall sub mov add daa sub cmp lahf lahf lahf lahf and and xor mov add add cmpsl xchg xchg xchg mov and mov add add add add add add pop add lock add loopne add rolb add add add add add add add add add addl add popl add incl add incl add add add add add add add sbb add add orb add popf lea jl (bad) jl mov jbe xchg xchg cmpb pop mov mov inc mov mov cmp ds aas cmp dec inc insl pop dec jl pusha xchg cmpl add xchg jbe pushf dec dec mov push jne fstps lock xchg jmp mov xchg push pusha mov inc mov cmp cmp push xchg cmpb mov add cmpsb push push lret bound sahf pushf idivb sti mov cld scas lods std stos cmpsl (bad) movsl mov lcall nop ljmp push push mov cmp cmp bound add add lods mov popf cwtl (bad) int3 xabort mov mov cld scas stos cld mov cld lods stos std cmpsl movsl lcall (bad) (bad) (bad) out mov jp leave arpl pop pop data16 ja pop add add mov mov clc int stc enter mov mov into (bad) not int xlat into neg (bad) neg (bad) cmc (bad) not leave hlt mov out (bad) fistpll fdivs (bad) pusha pusha mov xor imul add add outsl jbe ret ror clc int3 vshufpd enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret not int xlat into neg (bad) neg (bad) cmc (bad) lock cli faddl lds mov cmp mov mov aad stc lds sarb mov mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret not int xlat into neg shl lods cmpsl (bad) popa popa mov cmp push add add xchg xchg leave addl mov mov cli mov cli mov cli mov stc sarl clc mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret in movsl mov dec fs cmp add lds sarb test lods stos cld scas lods sti mov sti mov sti mov sti cli mov mov cli mov cli mov stc sarl clc mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) loop lahf mov dec mov cmp arpl add add jge not int3 std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl clc mov enter ret aam xchg mov inc jno push enter mov (bad) pushf pushf (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl mov push addr16 dec add add add cli add add add nop mov cltd cltd (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov sti mov mov push jp inc roll stc xchg xchg sti xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov aam jl dec inc add add sbb push and imul mov mov nop clc xchg xchg stc xchg xchg cli xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods (bad) jge jg dec add add add popa or data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 mov cltd cltd lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test (bad) jp (bad) pop push add add add data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 outsl add enter jno cli xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl (bad) cltd cltd lcall (bad) pushf pushf (bad) sahf popf (bad) mov shrb mov add add jl dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg (bad) cli xchg dec xchg dec xchg out movsl push imul add add xchg mov xchg xchg clc xchg xchg cli xchg xchg sti xchg xchg std xchg xchg (bad) cwtl cwtl (bad) cwtl cwtl lcall stos push pop add add add mov test mov clc mov clc mov clc mov clc mov clc mov mov add add add mov js mov mov (bad) notl stc xchg xchg sti xchg xchg notb add add add mov cmp mov repz repz repz repz repz repz repz repz repz repz repz shrl jg add add pop pop lds ljmp xchg mov mov pop insl add add add cli add add add (bad) out test out test out test out test out test out test outsl push inc add add cmpl jnp addb (bad) ljmp xchg jle movsl cmpl add add add add and sahf push call push call push call push call push call inc js daa add add add mov insb loopne jp jnp jecxz jge mov out and sbb js add add add sub xchg inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc loop inc mov add add rcrb pop pop fidivl jbe fnsave fistpll fistpll int3 jns mov mov add add fisttpll fisttpll fisttpll fisttpll fisttpll stos inc or add outsl outsb mov imul jo jb (bad) jo shrb ret (bad) jb pop daa ret sbb jle fdivrs fdivrs fdivrs fdivrs fdivrs fdivrs fdivrs mov push add add mov int3 xchg gs push movl add mov cmp psrlq (bad) jae (bad) jae (bad) jae (bad) jae (bad) jae lret mov add add mov daa scas push push scas push push mov add add pop add pop add add (bad) add add add add add xchg (bad) mov pusha mov test add (bad) add add (bad) (bad) (bad) (bad) (bad) cld (bad) jmp add incl add cld add psubb add clc add add add add add add add add add add add add add add add add add add add add add add add add add pop addb pop addb xadd rcrb add (bad) add cld add incl jg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add push jne add cmp aaa xor cmp outsb pop dec add nop fsts xchg nop aad jp jb cmpsl dec dec bound sub sbb add add cwtl cltd clc lret lds ror not leave stc les jle lret gs das push cmp add mov std movsl mov enter (bad) clc iret enter not into stc (bad) mov data16 sub add add mov in shr (bad) std cmpsb movsb cld stos test stos test mov stc les xchg (bad) enter cltd cmp add add fwait fwait jmp xchg fwait fwait (bad) cltd cltd cld stos test lods stos sti mov sti mov cli mov stc sarl pusha push aas xor add fidivl jp lock lea mov std cmpsl movsl cld stos test lods stos sti mov sti mov fisubl les fidivl je aam imul imul imul jo test pushf (bad) mov std cmpsl movsl (bad) (bad) outsb es outsb es outsb es outsb es outsb es outsb es outsb es inc (bad) jo lock cwtl cwtl lcall iret xchg (bad) pusha idivl idivl idivl cwtl outsl dec (bad) jbe loopne jns mov (bad) (bad) notl add xchg xlat popf (bad) roll jmp pop jmp pop jmp pop jmp pop mov imul gs jl addb (bad) add je fisttpll lea loopne cmp lea int3 ja js push int3 gs xlat jno into test add add xchg jge jae fildl fstpl subl lods add enter mov mov add (bad) add add aas add clc pop add lock add add add add add add add add add pop add clc incl add incl add add insb imul xor lods adc add add add add incl sub or inc outsl outsb je jb imul add mov dec popa fs insb outsb popa xor adc add add pop add arpl xor or adc arpl and adc add add add add add je arpl insb imul or push jne jo jae fs jns add je movsb adc add incl push add add insl bound addr16 xor and or or push add imul insb add outsb add adc add add add add sbb add imul add add and add add add pop push add je jb and adc (bad) or pop add popa add add jb xor push add add add sbb add outsb fs xor and add add add add or inc je popa insl outsb je jb add add wbinvd add add add add add pop add insl popa imul or add sbb add incl das add add or push push outsb jne outsl imul add adc adcl ud2 or push popa insb jo outsw jb add push add add add add or inc imul gs or stc paddusw add add add add add add jns gs je add add xor add cltd adc adc add add add or outsl outsb fs imul stos add outsl adc or push add add add add add add push add add add sbb add imul add add add add add or dec js outsb imul adc add or add add add adc add je outsb add add xchg or (bad) or inc imul imul incl push add add or dec jbe jb popa outsb fs pop pusha or add cltd adc add add add adc add outsl jb je jbe add add adc add add outsl add add add insl add adc add add add add sbb add outsl je je gs add add and add add push add insl gs add or outsl arpl je gs xor add pop out mov or incl push add add or dec popa jae jne imul add fild adc add add add jae add xor adc add add add add sbb add outsl jne gs add add and add add add add or inc outsl jne arpl outsl jb pop add (bad) or or add je outsl insb outsl imul push add add add imul mov inc adc add add je jne add (bad) incl add add or dec outsl outsb imul add jb outsb gs imul pop add or add adc incl and add sbb add popa jne outsl outsl je add add or or add add sbb outsb imul movl adc add add add add or inc gs jo gs je arpl add popa gs fwait adc adc adc add add add and add outsb arpl and adc add add or push add jo jb outsl add add imul add add push add add add sbb push gs outsl fs imul add add add add add or pop popa insl popa insl outsl je cmp adc or add adc incl pop add add or outsb fs bound je add adc or inc add popa add add je imul adc add add add add sbb add insb imul sbb add add add add and inc imul gs add add add add jne jb outsb add imul adc add add add add sbb add jb jae fs add and add add add add add addr16 fs add add jne add cltd adc adc add add je add add outsl adc or push add insb add add jb aaa add add push add add add sbb add insb insb insl popa jb add add and add add add daa pop add outsb je add add add mov push popa jb outsb fs insb gs pop add add add add or inc jb gs outsl insb outsl addr16 push add add insb insl outsl outsb popa jb add imul add add add add pop add jae outsb add pop or add or push add incl pop add add or inc arpl outsl jae jae add add test or mov add add add add je jb jne je popa insb add add or add or or add popa outsb fs xor adc add add pop add jae jb xor or adc adc js adc incl and add xor inc popa je jae jb jo popa insb add add test mov aaa or pop add add add add add imul add outsl fs jb xor add addr16 or add add add add jae jb add outsl jae popa jbe imul mov jns sub stos or and incl sub add xor imul imul add add outsb je jb add sub add adc add add or push jns jb insb imul add int3 push mov inc jne jae arpl adc incl push add add or push outsb jo gs jb fs jns and push scas adc dec add jo add bound popa add imul add add add add sbb add jo jb popa jb arpl sbb add add add add cmp add imul add add add gs gs add xchg or adc and add add pop add imul add nopl pop adc adc es add add add push add popa jb jae or je add or add sub add aas or inc outsl outsb popa outsb outsb outsl xor add pop push or or add imul add add add add add insb popa add add or add sub incl add add add insl jae outsl jo add or or or gs sub add add dec popa je imul adc or cs add add inc or push gs jne imul add add jne imul (bad) or adc add add add add add outsb arpl jb outsb arpl xor or adc or add adc add add or push jb insl jne xor add or push popa arpl insl popa imul add in or xor incl inc add add add popa jb and push and add imul jne adc add add add add sbb popa jne sbb add add add add add add outsb outsl outsb jae or out adc add jb add incl sbb add dec add jae add add adc pop or or xor incl and add dec or push jb arpl addr16 gs add add adc add or incl sbb pop add arpl cmp adc adc scas add add add add add insb imul push add add jb popa jb add adc aas push adc add add add add or inc gs outsl jne fs insb xor add or inc outsl fs imul add ss pop add add incl sub add push pop add popa jp insb popa add add add gs outsb jp add xor push add add incl and push add popa imul add js popa add dec add or incl sbb add clts add gs je add add push add mov add add add add insl imul add add or or add add pop add outsb addr16 outsb add add or adc adc add add or push popa jb imul add add insl insl outsl outsb insb popa ja add or mov adc add add or dec outsl outsb outsl outsb imul (bad) or adc incl sub add es add jb arpl add or inc imul add or adc push add add add add or push jo popa arpl imul inc popa outsb popa imul mov add sbb incl sub pop add outsb insb imul inc insl jns imul add into adc adc add add or dec popa fs jae jne aaa add add mov xchg push push adc add xor add imul add add add jb popa outsb imul add inc or adc add add add add or dec push popa je add add add jb jp popa add ss pop add and incl sbb add cmp add arpl imul unpckhps sti adc adc add add add or inc gs insb jne outsl cmp add push add outsb imul adc dec or adc add add add add jne je popa je outsb xor add or push popa ja imul add push push and add add add jne jae xor add or push outsb jae gs xor add lahf add incl sub add inc or inc popa insb je jbe popa outsb outsl add add inc popa jne add push adc adc incl add add add outsb imul jge add add push add add push jnp add incl sbb or dec outsl jb jne push push add add push incl sbb add dec pop add push bound add add adc push loope jo incl daa add add add je outsl data16 add push add je insl outsb add unpckhps adc add add add add add bound outsb addr16 pop add pop add add adc add push or add add add add push outsb arpl jns add add add add or (bad) add add add add insb imul adc push or incl add add add pop inc add (bad) (bad) incl add add dec inc add add add dec inc add dec inc add dec inc add add add add add clc inc inc add (bad) (bad) incl add add dec inc add add add dec inc add dec inc add dec inc add add add add aam inc add inc add lods ds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add (bad) (bad) incl add add add (bad) (bad) incl add add sub add lahf inc add sub add sub add lahf inc add sub add inc add sub add sub add lahf inc add sub add sub add inc add sub add sub inc add sub add sub inc add sub add add inc add sub add add add sub add sub inc add sub add sub inc add sub add add inc add sub add inc add sub add cs add inc add int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov mov call push push push mov movl movl movl movl movl mov lea call movl mov push lea push call push call call mov push lea push call lea call movl mov push lea push call push call call mov push lea push call lea call movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov mov movl lea lea call movl push call movl movl movl lea lea call movl movl movl lea lea call movl movl movl mov lea call lea push lea push lea push push call mov lea call movl movl movl mov lea call lea push lea push lea push push call mov lea call movl push lea push call lea push call mov mov call lea call movl mov add jo mov movl mov cltd idivl mov xor mov mov mov movl mov and jns dec or inc xor mov movl cmpl je jmp movl lea push lea push lea push call mov lea call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl call movl movl movl cmpl jne push push call movl jmp movl lea push lea push lea push call push mov mov push push call add lea call movl lea mov movl lea push call cmp je jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push mov push lea push call add push call mov lea call lea call movl movl movl lea push lea push call push lea push lea push call push call mov movl movl movl movl mov call mov movl mov push call fstpl movl xor test je movl push call mov movl mov push call mov movl mov push call mov lea call movl movl movl push push call movswl mov fildl fstpl movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov lea call lea call movl push call mov movl lea mov movl lea push lea push call lea push call mov lea call lea call movl movl movl or test je movl fildl fstpl fldl faddl fnstsw test jne call mov movl mov cltd and add sar mov movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl lea lea call movl mov push mov push call mov call mov mov movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl xor cmpl setne neg mov lea call movswl test je movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call lea call movl movl movl mov lea call lea push lea push lea push push call lea call movl cmpl jne push push call movl jmp movl mov mov push lea push call movl push push mov push call add fwait push jmp lea call lea call lea push lea push push call add ret lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop pop mov pop ret jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl mov xor lea xor rep lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push lea mov mov push lea lea push push mov call mov mov lea call mov push push call mov lea call push push lea push lea push push call mov lea call push call lea lea mov movl call lea lea push lea push push push call lea lea push push push call add push jmp lea lea push lea push push push call lea lea push lea push push push call add ret mov lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov lea xor push mov mov mov mov mov mov mov mov mov mov call mov push push call lea mov push call mov push push call add lea jo mov mov push call lea push call mov lea call lea call lea push call mov push call mov push push call test jne mov lea call push call push push call lea push call lea lea push push call lea push call mov lea lea push push push call add lea push call lea lea push push push push push call lea push call mov lea call lea lea push push push call add push call fwait push jmp lea lea push push push call add ret mov lea call lea call lea call lea call lea call mov lea call lea call lea call ret mov mov pop pop mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop sahf sahf sahf sahf mov (bad) (bad) (bad) (bad) (bad) (bad) decl mov add adc add mov add mov add mov add mov add pop add pop add pop add mov add pop add mov add mov add mov add mov add pop add mov add mov add mov add pop add pop add pop add add orb add xchg mov add pop add add cmpb pop add mov add add sub pop add add cmp pop add mov add mov add pop add pop add pop add pop add pop add pop add mov add mov add mov add mov add mov add mov add add sbbb add mov add pop add pop add add pop add add addb adcb pop add add (bad) mov add mov add mov add lea add lea add add sbbb add lea add pop add add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add add jbe popa dec outsb inc jae jb add pop pop jbe popa push popa jb imul pop jbe popa inc jb gs popa jb imul pop popa fs imul xor sbb pop pop jbe popa push cmp outsb add mov pop popa fs data16 gs xor xor pop pop jbe popa push je inc popa je sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb inc jae jb add add jbe popa dec outsb push popa jb test pop popa fs imul xor add pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa dec bound gs cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul jbe popa push gs popa jb jb add push add dec jae outsb add outsl add jbe popa inc push add bound jns popa jb add add inc dec push pop push dec dec dec pop inc fs data16 pop pop jbe popa push je inc insl jo push add jbe popa push jb outsb je bound or inc insb insb inc jne arpl outsb inc popa insb insb add add jbe popa dec bound outsb add push data16 je outsb add add jbe popa dec popa je dec fs popa insb insb dec add dec push pop push dec dec dec pop push gs gs jae add dec add jbe popa push dec xor add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add pop pop jbe popa push je push outsl push outsb imul add fs data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push bound outsb fs add jbe popa dec xor jb add pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul iret add jbe popa dec xor popa jb add pop pop jbe popa push popa jb fs add jbe popa dec popa je dec gs inc popa insb insb add inc add jbe popa push je push outsl inc outsb jae add pop add jbe popa push popa jb outsl jo add test bound jo xor fild pop pop jbe popa dec popa je dec gs inc popa insb insb dec add push add dec popa je outsb add add jbe popa push je dec outsl jbe add mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound 