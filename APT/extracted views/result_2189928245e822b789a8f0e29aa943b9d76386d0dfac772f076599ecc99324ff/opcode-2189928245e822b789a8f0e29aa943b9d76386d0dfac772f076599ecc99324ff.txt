test xor sbb pop (bad) hlt mov push int3 cltd testb movl inc pop jne into pop lock mov push cmp and pushf test xchg or push sbb dec push xchg inc pop sbb cli pop ja inc add mov sub repz pop (bad) adc inc sarb jl sub popa push insb jecxz ficoml stos push jl pop push rcr adc negl (bad) push mov mov (bad) int3 pop push or outsb push enter xor (bad) sub mov mov sbb add push push lods mov roll mov rcl mov hlt in arpl sub lods dec pop dec and adc pop insl outsl mov fs in jne (bad) nop ja sbb stos mov adc cmp jns pusha jl and mov inc pop std (bad) aad dec cmp (bad) idivl jecxz or mov cwtl inc insl sbb repz loope fbstp repnz nop in ret ss lock add pop popa push and fsub adc rcll lret punpcklbw xchg addl je fstps mov inc fcmovnb leave and pop sub (bad) lock lock pop lock fbstp mov in add pop enter leave andl fidiv popf jg in or fstpt loopne sbb imul les fdivs ret outsb dec adc (bad) div js pop enter cmpsb rcll dec shrb jl lret inc in inc pusha arpl (bad) pop (bad) jne dec scas cmpsl or mov inc push adc adc dec sbb push dec push popa dec inc adc movsb mov mov cmp cmp mov movsb and mov sbb fcoms pop dec mov adc add pop (bad) pop or (bad) test imul cld pop pop sti cmpsl fldcw jno inc fdivrl mov cltd dec pop push pushf (bad) cmp bound sbb lahf shrb sbb add imul adc cmp std mov aaa lods stos std lods sahf sbb jb mov mov clc lahf aaa or jns negb xor sbb cmp movsl sahf fistpl pop pop dec jecxz into sbb ret fimul stc sub inc add repnz shr ret (bad) cmc sbb jge jne popf dec xchg adc and push pop jnp dec inc (bad) mov pop aad or scas mov push fwait aam iret dec out dec adc mov cmpsl shld adc loopne scas sahf dec push mov jns mov xor sub sarl sbb es cld mov adc fstps pop out mov outsl cmpsb xchg fsts mov dec pop (bad) cli cwtl sub sbb dec inc loope jp mov aam popa inc int3 clc cmp insb and mov rcrl inc je or adc cmp add pop mov dec cld jp cltd pop cmc push inc rclb aam add or or icebp xor (bad) (bad) clc xchg push push dec sbbl aam pop pop lcall lcall cmpsl cwtl xor adc push and xor movsb imull pusha push and imul cmp pop fs call js pop pop mov inc mov jmp aaa mov loope fs xor or push repnz xchg push cmpsl mov xchg dec rclb adc pop or sub jb xor or lahf fs aad xchg mov inc cwtl sub adc pop loope enter mov call hlt pop mov les dec adc sbb jno add adc cmpsl mov mov add xor push outsl cs (bad) pusha out adc std mov and xor rclb jg xor aaa lcall mov cmp stos pusha or jbe aas adc ret sbb stos inc enter jle mov adcl rcrl scas adc and pop xor or jmp mov data16 testb sub mov pop sahf loopne movsl aam jo (bad) mov add mov nop xchg popf xchg cmpl fldcw imul sbb popf (bad) add jo pop in adc mov push mov in addr16 pop xor xchg clc insb sub enter rcl xchg and lods mov mov sbbl lret or jns push dec cmpsl not fimul jns into inc rolb jno mov pop sub jbe out lcall mov pop loop test sub call or ja sbb mov sbb in (bad) scas das jbe aam (bad) mov adc mov aad mov jmp cmp sub dec xchg je dec and adc stos dec (bad) call inc push div push ret push pop pop mov pop je pop push ret push hlt cld pop xchg cmp sbb adc and in in enter fsubp loope push mov sub sub in jl mov call pop aas mov xorl pop or mov pop loopne xchg lahf mov daa push imul cltd fidivrl mov aaa sbb imul loop sub pop jbe jns dec cld lret sub push ror mov ret cmp stc sbb in mul push outsl adc ja mov push stos lock jb pusha pop add add add xchg mov repnz mov mov mov lds sub testl mov or in jb jae fidivr cmc pop subb dec fcmovnbe mov push lahf cmp pop pop mov (bad) jno imul in mov outsb das and (bad) add inc cmpsb cld adc mov cmp mov pop dec lahf rclb push aad clc push or sbb or out sub mov dec cmc sbb in ss js mov stos fsts dec or jp lcall loopne push fistp sbb mov imul dec bound lock test jb mov bound mov (bad) sbb xor fildl dec lods mov in insl or mov stc mov fsts xchg bound daa popf mov ret sbb stos jno jo outsb cmp aam or sub cmc jp into mov pop les jb lcall mov loop jbe dec aam xchg in and mov movsl sti lock lret jg add inc neg test xor cmp or xlat cwtl or and popa and jnp push int3 (bad) jo movsb push mov fldcw mov jl or sbb scas repz (bad) cltd flds loop inc (bad) adc (bad) mov insb mov pop add mov inc jne daa lods adc and in dec imul xor scas mov ja test pop js xorl cltd push (bad) cmc test xchg arpl xchg sub mov adc dec push fcomps mov (bad) (bad) xor repnz xor jne lahf faddl roll (bad) jno sub dec adc sahf cmc aam pushf bswap outsl sti pop popf out mov daa mov nop xor outsb outsb mov popf lods lods jle stc not (bad) and and inc push clc mov sbb pushf and inc xor sbb lods addb adc add mov push inc mov xor sub (bad) movsb jne sbb dec loope call push imul sbb mov xchg jae sar pop mov in pop sbb je in ret fs out push stos xchg sbb cmpl dec jecxz or pop lea std dec mov adc sub je pop lahf stc xchg rcrl sbb cmp jae int3 jg mov adc (bad) push imul cmp scas movsb leave sahf add inc xchg aam leave dec ficomp jp lock (bad) jle scas jns lret fimull mov add sbbl push xchg cmpsl cmp aaa or lods inc outsl sbb pop cmp fstp decb adc fucomip or sub insb jle push jo or repnz sub sub push int mov iret jne stos pop mov mov in js cld insb movsb cmp ljmp lods out pop pop cmp daa arpl cmp negb dec rorl and ljmp imul fdivs mov hlt pop mov mov mov fcoml mov push (bad) sbb enter (bad) fdivp daa push ja add (bad) xor push or add push dec lods xchg push mov fsts or int dec sub ss add addr16 lock scas sbb push xor sub adc lds cwtl (bad) mov lcall push pop ret pop add push fdivrl cmp push push cli sbb jne es inc (bad) add mov mov adc out push fimull lock pop add mov dec mov inc stos inc insl cmpsl addr16 jge inc ret and lds je push add roll hlt out sbb rcrl mov sbb movsb xchg dec hlt popa mov dec xor std or aas jae out mov lea ret mov ja jae xor push btc (bad) jne in (bad) dec add sub sbb das push scas sti popa pop adc fdivl sti push pop arpl std cmp inc push sbb inc test aad pusha jo push jg mov mov sub divl push popa js sbb mov cwtl cmp mov pop xchg xchg sbb push fcoms push hlt rolb xchg (bad) jmp lcall dec mov mov xchg push les dec fdivl loop shrb imul mov xchg jmp fidivr rorb ds mov fldenv cmc ficoml mov add daa fsub sub sti aad out scas dec sahf inc adc (bad) hlt jo xor add jne call (bad) (bad) jno cmpsl rclb and jae (bad) or ret and push dec sub js sbb mov sti add mov (bad) in stc jp push pop jecxz pop and shrb arpl cmp mov mov lods loope out out aaa test push aam cli mov movsb pop xchg push cwtl jg adc outsb sub rcr add ret hlt popa fmul mov aad push (bad) mov dec add mov mov int3 jbe push in mov testb lret jne sub mov mov ficoml or fwait xchg lea jl test push pop pop mov repnz cmp mov add sbb lods adc call inc leave adc and test jne lea fnop push test insl jns jg adc push movb cltd pop inc adc test rcll insl dec int inc adc jecxz push idivb pop dec fwait es adc push aam sub loope jne add pusha (bad) fcoms flds in sub jle push cmp (bad) adc mov pop mov scas mull pusha fiadd in push cmp cmp cmp pop std ds mov pop imul mov shrb xor and jno add decl lds dec xor in push xor insl sub adc inc mov xor ljmp adc fwait shrl pop (bad) mov mov dec insb inc int3 adc es scas test jle out push push ja ds vphaddubd stc into rorb adc int3 mov fwait xchg popf cmpsl std (bad) lea loop xchg ljmp sub bound aad (bad) cltd mov add mov xchg add mov test jnp pusha sbb fcmovnb mov call dec adc flds and aad (bad) iret das mov mov in ljmp mov test ja cmp jb clc fldenv sbb cmp mov mov jmp lea flds or cmpsb sbb add mov in mov inc jp push pop in sub (bad) lcall inc ljmp mov ds push sbb aaa jl xor sbb out and xor mov enter fistp imul nop or lds jns inc nop and insl pop jb sbb jnp loope fstpt daa cmp pop js sub es pop xor pop test les sarl or pop lods ljmp cmp fs mov clc or add popa jo xor jl hlt clc adc loope cli clc jge outsb shll jbe dec add dec shl pop je inc daa cmc sarl movsl (bad) jo jbe mov fucomip fs mov ror adc jns pop cld adc pop aam push mov dec jmp sub enter lret pop adcl push arpl inc mov fmuls xor and adc adc jmp (bad) iret enter loop adc lea aas sti (bad) divb lret pushf jbe scas or loop and add out mov jnp dec push movsb xor sub daa mov dec mov ds xchg aam inc aas loopne ret inc jecxz cltd sbb jo xor repnz rorl (bad) pop ret divl or aaa out movsb mov or sti jecxz roll add sbb add sbb in xchg pop shll pop sti jmp stc cld mov pop arpl mov sub mov ljmp push xchg adc das cli cld adc mov mov xchg jmp in or imul push xorps jl repnz icebp testb or adcl jl stc enter cltd mov aad fcomip sbb push (bad) outsb dec xchg pop mov push adc sarl int3 mov mov add mov adc cld sbb mov lods mov sbb mov xchg dec ret mov pop enter mov pusha lahf and test out mov (bad) mov cmp scas mov aad ljmp pop (bad) pushf mov and (bad) jae fsub cmpsl push push int addr16 mov adc add ja add jne or leave pop lods add nop fiaddl mov lds orb push jb jp and push scas bound xor cmp mov (bad) jp sbb push or adc enter mov fist std popf das dec sbb cmpsb insl inc sarb and inc rcll shlb pop hlt out pushf clc cwtl or out out lock xor jecxz and mov mov ret mov fiaddl (bad) dec pop mov inc adc adc adc add clc pushf lahf add ret inc jnp ja pop or jmp pop jp or dec ror mov jae in pop push in dec adc jae call movsb lea in sbb ror sbb mov es xlat je lret and pop mov rol adc cmp lcall mov pop (bad) and je push adc mov push pop lock push std pop add call hlt adcl int3 nop ljmp add sbb movb cli stos test sarb pop roll push sahf pop mov pop unpcklps insl cli add pop in js pop mov pop rorb je add adc js pop or inc add push (bad) imulb lock jl cmp xor sub sub mov push push push scas ffree test push in dec cmpsb (bad) mov inc pop lock in mov cmc pop mov leave add inc mov cmp movl int mov outsb (bad) popf rclb xchg push in cltd bnd repnz pop lcall cvtps2pd mov sub pusha mov jae cli cmp insb cmp inc test lods fisub movsb pop sbb sbb (bad) sarb mov pop sarl repz sbbl and ljmp shrb rorb jae adc jo and mov push enter stos xor cmpsl lods mov in lock inc fistl loop mov pop je and ja js mov and ret (bad) scas adc adc lea lds adc lock dec add sbb or sub cld jle dec loop mov pop mov cmova xlat gs mov cmp std decb and test mov dec dec js pop sahf mov call imulb insb adc ss dec (bad) or push test dec dec dec cmpsl fsubr lret and xchg push leave sub into mov cmp mov shr jnp and jbe imul test (bad) (bad) fbstp shll lea mov loope prefetch or pop dec sub cmpsl (bad) shl add mov xor mov mov dec adc insl out sbb stc out sbb add stc insl fstps pop jbe ja rcrl and jge and xor push xchg sub ds xchg mov xor lock xchg out test lea sbbb iret out fmuls sti sti mov cmpsb jb pop repz leave push mov aad js cmp fucomi sahf call push hlt fwait add mov xchg mov inc imul loopne cmpsl sarb inc call cltd aas inc bnd cmp cli adc push inc adc mov sbb mov icebp push mov adc mov fmuls lock aam xchg push call loopne pop je or jecxz cs test inc fmuls ljmp cmp mov std pop dec pop out adc pop dec fadds ret and jno cli lds or dec nop jmp inc cmpxchg fimull push fldz fs sub pusha or aad jl (bad) call xchg (bad) pop in sbb jb inc pop mov mov sub mov (bad) fcompl clc sub mov mov mov xchg push imul mov fldt add in mov inc rcll jb ja js cmp or inc je mov sub enter cmp aad repnz shrl xlat dec or test scas xchg clc int3 stc jo out stos pop addr16 test aaa cld cmc popa xchg fxch dec inc rorl mov pop or hlt hlt rclb rcr xor fs pusha test movsb into mov xlat js inc repz lcall cli ja stc push test and mov pop cli mov sub test inc push repnz jb sbb inc jl lret adcl sbb lods mov hlt gs popf insb loope push insb add ljmp xchg pop mov ret jno bnd je out mov insl adc (bad) dec xor pop fistpl loop decl loop mov push fldcw addr16 xchg jp mov mov test xor (bad) mov ja cmc mov jge in les loop and ja or xlat adc adc data16 rcll mov xlat icebp mov adc (bad) jb and pusha cwtl adc or pop js negl or inc fistpl mov xor into mov or ljmp push fcompl into shrb pop add aad int adc cmpsl std inc rorb and mov fwait mov dec inc sarb pop cmpsb inc cmc mov insl push lret dec imul rclb adc in lods push xor orl in std sbb (bad) sub je psubsb std test push push mov mov cmc jg fstpt mov enter inc lret jle or mov cmpsl in jmp or repz pop push jns or stos jge stc jno stos jg cmpsb mov gs add sbb inc ret mov mov mov in inc mov jmp or sbb lea stos jb mov (bad) mov mov nop es bswap inc cmc sub lods out sbb xchg cli outsb inc adc nopl scas ret iret sub mov aaa (bad) pushf or out out sbb (bad) sahf pop mov mov mov in fmuls in xor fcom mov mov (bad) loope cld jg lock movsl push leave mov scas or or (bad) lahf int3 adc xchg and dec mov call inc push or inc clc adc mov fadd aam imul insb aaa fucomip inc xor push pop dec ja inc cs imul jge daa mov mulb mov xchg mov fistpl daa (bad) (bad) inc iret adc push scas sub inc mov dec std ficom dec push mov loop inc sahf lea stos jns xchg mov ljmp cmp adc mov and push adc xchg push nop sub mov add out cmpsb add sub mov or lds out xchg cwtl or mov mov cwtl sti jbe ljmp cmp inc mov sbb imul aas inc jge test push pop mov aad sub jmp aam aad jmp mov xlat jno mov sbb out cltd aas scas jne mov stos adc imul dec mov lds outsl inc xchg mov (bad) sti pop insb ja xor (bad) push pop clc push add pop dec inc xorb insb xchg mov fistl mov xlat (bad) cmc fcomp jae popf and mov (bad) xor and enter sbb mov lods dec mov adc push movsl mov push xor lea push or aam ja inc xor mov call daa xor add mov popf adc jne mov mov mov stos int or mov sbb or jbe pop shrb sub arpl pusha adc xchg xor adc sub clc or out pop mov (bad) xor xor popa jbe out je bound lods scas jle add dec cmpb jns pop call jg adc jno or sbb push movsb out jb lock push xchg mov cltd enter out cmp push pusha pop pop faddl xchg lcall das jl mov mov mov adc ds jle add xrelease mov jbe mov sbb jle cmp jp enter (bad) jbe xchg loopne es jp lods test push mov (bad) repz mov pop jge adc add add mov pop mov dec bound movl fwait inc and leave (bad) jnp add push mov aad pusha mov add test cld (bad) mov jnp stos adc sbb loop fimul lret lock pop push mov call sbb neg push mov (bad) jo in js mov or xchg icebp sti add subl inc sbb cmpsl (bad) jb xchg insb stc imul lods cld data16 inc mov mov push adc add mov aam push inc pop xor std ljmp mov popa sub repz jp in inc test outsl outsl arpl imul dec add push aaa out mov inc xchg dec notl jnp dec call int3 sub xchg jae not jnp or sub push sub lret in jnp cltd out les daa mov loope dec sbb mov push scas subl cmp push loop sbb mov sti negl test jmp gs add ret jne jnp sbb add loopne push sub ret sub or xacquire std lret fmuls (bad) fidiv mov mov sbb xor ret and xorl fidivr cltd push dec inc adc mov adcl mov pop mov scas lods aam jge jae add loope cmp arpl jne and dec mov dec xchg jg lods sbb fwait add add cmp mov cwtl aam sub scas movsl inc lret icebp ret jno cwtl cmc inc mov mov sbb out mov cltd shlb jno mov xchg sub dec jae scas mov push xchg clc clc dec rcl sarb adc ret int3 les mov and test lock mov push imul jg rcll out push mov jl pop sbb movsb cltd std fwait es mov sub iret adc jbe sti xchg adc adc push xor add cmc sti jge inc popa cltd push cli push negl inc aam (bad) idiv ljmp xor inc mov cld addr16 xor ss sub pop fcmovbe fistp inc inc xchg mov push pop and ss dec ret sahf xchg or add ret (bad) rclb pop inc jne sbb pop mov xchg pop mov mov rolb ret push inc les out inc mov push inc in cwtl (bad) lcall push add adc cli cld leave or iret add in cld into adc roll aam push je (bad) lock dec mov arpl aam adc cltd jmp sti mov js fdivl fidivr jecxz push imul fildl icebp sbb rcl jb cmovno sub xchg push adc adc adc and jp idivb stc in push (bad) xor cwtl jne repz (bad) hlt test (bad) mov dec mov jns mov fiaddl and dec push int3 inc sub nop and icebp test in inc ficomp adc bound es push icebp aad icebp ja add hlt pop jo pcmpeqd fidivr dec xor in inc fimul js insb rolb int3 out (bad) lock sti dec dec std ljmp in cld fsubl push test pusha mov je push mov int dec push jmp ds rcl in inc in inc out mov jae push stc push (bad) mov jns mov pop mov push into or sbb es mov add lods push inc dec mov fwait adc ffreep ret and jp enter rorl rcrl cli push scas mov cltd fstpl iret movlps mov jae imul idivb mov aam hlt ret imul in inc (bad) cwtl dec sbb (bad) shrb in subb cmpsb sub push jb xlat push pop cmp sti inc in inc sti loopne inc js lds clc xchg outsb jp loopne push mov stos lock xor loope nop mov fadd lea jecxz xor es push imul data16 subb push jl adc mov (bad) aaa inc pusha std in jl push xor pop shr sub adc scas int3 idivb xor inc sub sbb lock (bad) cwtl mov loope mov js push faddl pop xor in dec inc iret inc jecxz push inc out mov push cli fadds popa leave repz test js enter (bad) cmp icebp js (bad) sti fdivp add add (bad) sbb inc pushf pop mov dec loopne xor scas roll adc cmpsb fdivrl jno (bad) in push add in fnstcw aad cmp (bad) test inc sbb jno into mov or xchg push pushf cwtl pop je out aad inc icebp jne fs ret lods inc cmp in je cmc sbb ret (bad) inc and sahf dec loope (bad) mov jns je inc out fdiv lds std ret push in sti jmp je sarl lods enter pop pusha lcall cs test push rorb adc xor pop ror addr16 sbb mov push clc les mov movsl das jo call pop jnp mov imul les lcall dec enter (bad) js jo adc int sbb popf ret xchg xor dec aam or insl pop push inc lock and dec in sbb jne adc cmp (bad) pop enter das js mov ljmp inc aam sahf dec (bad) data16 js sbb pop inc shlb ss orl adc in and jecxz dec and fistl sub gs enter sbb cmp push sub cmp xchg or mov mov adc (bad) shlb rorb pop rorb aad nop aam jle sahf push sbb into call decl test xorl insb popa (bad) nop fs js,pn out or addr16 mov inc inc pop lea jl jp je fldenv scas xchg pop hlt lret imul xchg in sti adc adc and and sarl lods out xchg inc push dec sbb dec dec xchg adc pop xchg xlat dec enter adc test jle mov adc leave js pop adc pop movsl adc jns std sub out jo xor cmp test pusha fimul mov in inc outsl jb cmpl js call inc adc jne sbb mov sbb xor sbbl insb popa lcall in out mov xchg sub test mov into or icebp xor stos ja inc loopne lret pop (bad) nop fdivr icebp xor loop jno pusha mov add (bad) imul cld fidiv fnsave roll movsl jo adc mov jg fs (bad) fs mov pusha mov popa jns popa xchg ljmp mov pop aad mov and xchg push push stc mov mov pop in ljmp push pop mov jb out jge jecxz and imul fcoml adc aas mov mov jns popa fdivl pop enter sub inc jb mov aam and jmp je mov into or adc shr fdivl cs outsb (bad) in adc fcoms clc inc js adc jle (bad) (bad) xchg fcompl cwtl sarb push xchg sub js icebp adc push cld shr inc sub or dec mov mov lcall dec pusha pushf fsubr or arpl rcll inc adc push push pop ljmp lock mov dec aam (bad) leave sub inc or inc in lock out adc fimul pusha xchg jo mov js insl push and dec mov in scas xor ss fnstcw xchg (bad) icebp sbb insb or sahf pop rolb in mov xor leave dec fs adc les cmp shrl inc js adc call push ret pop push fistp jnp in sahf nop sub das mov jp cmpsb sti mov pop rolb adc mov xor jmp or dec push icebp leave adc pop jl xchg cmp (bad) in pop mov (bad) jo lods jmp (bad) dec insl test in jge enter jns inc (bad) cwtl dec push mov and mov sub stos dec add push sbb dec (bad) int3 or mov push dec dec or dec std mov data16 call mov mov xchg pusha jo call ret or dec jns popa cli faddl cmp lds pop xchg js push sub popa mov push (bad) ss sarb ds push (bad) stc jne push rolb enter push lods or (bad) out lret faddl jo cld (bad) cli je adc out push jp mov jnp inc inc xor clc pusha sub movsl outsl insl pop jns dec pop ret jo mov in inc inc jecxz dec sub xchg mov daa inc mov sbb dec mov fdivrs adc sub (bad) jo jo xor jmp shrb sbb insl jae insb push rol jg jbe mov adc xor adc and push rol mov inc jns dec ror bound jp xor adc add mov fadds pop cwtl mov insl lcall in xchg fidivr mov sti mov dec nop je ret (bad) icebp lock loop dec loop ja hlt in sbb ret mov mov sbb aad jp jbe inc movsb mov push into or jno fidivl (bad) add pop or push icebp repz inc (bad) inc cwtl iret int3 inc fdivs aad adc ret pop dec call xor pop xchg mov fimul ljmp ret inc or mov je dec data16 add push loope mov and popa sub popf call lret insl pop adc mov loopne dec ss fucomp lahf push and mov lret arpl lahf cmc xchg jnp add ja into call dec or cld mov pop cwtl or cmp push inc in out inc cld shll dec jns popa push mov fndisi(8087 jp mov push ds dec xorb into jns mov rcrl pop loope or sub cmp and imul incb je jmp jmp dec push sub dec int lea int3 mov insl enter mov std add insl (bad) or rorb dec iret ret dec xor jns inc push call negl insb imul in in ljmp js inc and mov add pop sbb jb,pt je ss test aam mov adc xchg cmp cmp sarl jo ret gs insl inc pop xor pusha (bad) imul cli adc dec sti cwtl inc sti addr16 jmp in push ficomp les bound hlt mov fimul repnz icebp fst sbb not sbb insl aam lods rolb cmp mov sub jl mov jmp out push cld loopne int3 test mov (bad) hlt and lcall mov adc xor dec scas in mov out fbstp push clc into xchg imul popf (bad) mov jo ret outsl push hlt mov in hlt cmp sub xchg mov mov jns popa scas sarb cld out leave lock lods popa jne mov ficomp ds jnp pop mov roll push addr16 call fnsave enter mov test lret inc insl test insl lea enter fs repnz mov or sub push mov ja sbb push fucom std inc fdivrl pop out rorb icebp in fstps insl fcmovnb fs jne dec fist push movsb into jne (bad) lock jns insl inc lock ss loopne aam sub mov cmp shr inc call jne inc jne pop pusha jb outsb jns loope nop mov loopne push jl enter xor push push push test pop insb xlat pusha inc xor fcompl jl scas ss sbb adc out inc je cwtl mov sbb ss add adc add js nop leave sub xchg in inc sbb leave cmp or (bad) testb (bad) dec lods pop fsubr call call cli enter cmp in pop jle fildl pop (bad) mov jns popa cmpsb fisubl dec pop jp mov dec (bad) mov sar dec aam loope dec pop in jmp movsb in push fidivr jns mov cs and in pop ret adc cmp lcall loopne mov in mov inc call sarb fsts gs leave sbb ds pop or outsl add pop push in or fdivr jle icebp (bad) dec mov jecxz jae xchg rorl std and or or aam cmpsl jo aam lret and inc sbb into inc fisubr aaa mov sbb pop lock pop aas or sarl push mov mov mov inc sbb mov jb orl mov xchg aad inc cmp and aam je fsub je mov into push inc pushf cmp or hlt jmp ret sbb pop push lahf std xchg jnp add jno insb rcrl outsb std stos outsl mov test out dec mov int3 stos (bad) dec xor sbb sahf push push add leave ss adc dec (bad) repnz pop cmp add or cmpsb dec mov in hlt call mov dec test dec pusha jns outsb jns pusha push jp fsubr popa in cmpsl add movsl aam movsb dec sbb cmp inc cwtl mov in and dec enter adc notb in pop pop les out (bad) (bad) mov jns in inc fist ret sbb or std mov push clc mov push je pop mov adc adc in and (bad) jp (bad) mov jns out push mov push (bad) mul dec mov es (bad) jne push aad insb or adc (bad) mov lock pushw push or sub ss (bad) inc insl inc js mulb sahf nop sub nop add ds loopne push icebp test jnp leave xchg fistpl out or shrl (bad) pop sbb into sub int xor into nop mov dec and insl sub add dec aam cmp lahf es dec cmp ret mov lea dec pop or jno push in popa inc (bad) test adc fcmovnb jo fstl xor jae shl pop or daa out in popf lcall stc ret gs hlt mov sbb sub inc stc push sbb cmp inc push divb sbb dec mov les dec adc icebp mov in leave push mov inc insl pop roll sbb cmp movsl jae cwtl xchg sbb shrb dec mov ja mov into sti mov pop sbb xchg push insl xor inc pop pop call xor sbb outsb xchg pop pop jo stc pop jp std inc jecxz pushf jno fsubrl jp inc dec (bad) mov rcrb push jmp push xor cmc adc fistpll enter enter mov movsl inc push pop sub sbb push outsb sub gs mov in pxor loop jae fsubr jae insl mov sbb mov fimul xchg iret sub fisubrl rolb push xchg (bad) ds cld ljmp movsl scas sarb jecxz sti mov and rclb js ret shr into dec ficom sub dec add dec adc scas call push (bad) cmc sbb push adc jmp jnp or mov pop dec mov clc or mov push insl adc xor cmp rcrb push dec mov jo faddl jo je fiadd stc adc mov hlt in loop dec jae sub call lea jg mov mov mov fmull jo pop je fs call negl sbb xor cwtl cmp sbb adc push jo loope jmp call jb pop lcall pop dec sti push cmp leave sbb out cmp mov mov in adc rcr sbb in (bad) xor sbb cmc out lock in jbe aam bound faddl sub xor mov push or push xor nop push cli mov pop inc and lods imulb mov adc out out xchg jl movsb fstps and xchg and mov add jecxz call aam add adc in in xlat in fldl or xor ss xchg and jne dec cmp ss and jno call adc dec loopne inc push ja hlt (bad) ret nop xor ss int jp enter pop das sarl mov (bad) jmp add push sarb adc stc xchg push and mov movsl addr16 out (bad) xor inc sbb jmp xor gs cltd jg nop rcrb dec jmp cmp leave pop jmp call insl dec jae in and sbb or in add cwtl jbe inc outsb jb in fnstenv in mov sbb mov fs or pop dec test inc pusha jnp popa notb in xor sahf jns pusha mov jns ja push mov into inc sbb mov jno call adc dec loopne inc movsb ja add sar rolb divb mov (bad) mov mov cmp mov sub adc fisub js pop inc call je push mov sub cmpsb jg lahf dec xchg adc dec mov mov lret sbb xchg je push cmp popf jbe fidiv (bad) lock fcomi call insb in or inc (bad) hlt in add enter mov push inc mov (bad) iret sbb adc adc stc sbb mov and stc (bad) mov test adc enter (bad) mov call ss xor sbb fldt inc mov sbb xchg ja push or stc mov push addr16 cmc pop and aam jns ljmp hlt jb or inc pop in lret aad (bad) dec movsb fisub out loopne inc fidiv push sbb xchg inc sbb rcl sbb jmp in push sbb fidivr cld scas leave dec mov jns pusha xchg in mov add dec sub popa and mov adc icebp (bad) xor in jp adc aam int3 jecxz mov in pusha or or sub mov scas mov imul into dec fcompl inc rclb adc adc cmp js add test (bad) es jns add jbe aam adc or mov push push loop or popf dec sub es cmp pop leave insb jecxz insb into (bad) push popl dec cmp sbb movsb bound mov imul enter mov fdivr pop ficomp pop xchg (bad) adc fs sbb adc jl rcrl push gs push call cmp mov test cmpsb enter cmp fst shll mov xorb or xor cmp fsubrs and test pop add push xor fdivrl jl fstps mov push sub sub mov adc aam xchg ret loope or dec popa ljmp adc sahf cld test inc mov mov stos push leave insl dec jge jecxz inc push jecxz je xor jl cmp push pop loope push sbb sub sub icebp test shl bound lods mov push aad jp loopne push jl dec dec dec outsb inc dec pusha fimull dec xor push icebp out inc sti cmp dec nop (bad) jne push (bad) mov mov xchg or mov loopne das and repnz in dec (bad) sbb xor push mov xchg imul popf (bad) sbb rcr enter sbb inc hlt loopne aam dec loope icebp je mov into sub dec mov lods jb stos jns stc popf in mov adc push sub push dec jl pop jb adc adc fnstsw icebp pop inc int cs push add push fisttpll lds (bad) xchg inc adc insb (bad) or rorl adc es ds lret push jbe mov dec sti dec cmp adc mov std mov fisubrl fdivr int in imul pop jbe scas xor dec xor sarb enter loope xlat (bad) (bad) mov adc push ret loop imul push and add lock dec cmp sbb movsb fldl jle mov rolb les adc inc cwtl xchg pusha cmp inc sub jno inc js fcmovu (bad) (bad) (bad) pop pop sar enter insl sbb icebp je jbe pop mov (bad) push insl ja mul out outsb dec jle cmp xchg sbb sub jbe ret mov inc mov ljmp movsl testb pop jl pusha jle push out addr16 mov rcrb cmp repz jnp int3 flds in fidivr xchg lret mov push or aad aam cmp scas mov rcr arpl push dec sbb cmpsb dec fwait rcr stos jmp scas dec sbb dec pusha jp outsb pusha pop xor insb lods lcall lea lock dec add notb dec fcoms xchg mov in mov es add dec adc clc nop int3 js mov decb enter adc dec aaa clc insb push aad in mov jo sbb push (bad) push dec fbstp dec sbb loop fiadd mov cmp loop mov and sbb rorl lods push fsts mov aaa lcall (bad) rorl mov pop add out enter js hlt jp mov push pop ljmp and jno mov jb bnd cmc enter xchg mov mov pop sbb mov pushf push rcrb loop jae in push push out (bad) inc mov adc xchg aad dec enter push push push sub mov hlt cltd adc (bad) pop xor cmp cwtl mov xor nop fstps call pusha ret loopne add stos xor xor (bad) inc and mov push or pop inc call and cld ljmp mov fiaddl push ret stc (bad) fiadd jecxz jb push mov (bad) mov xor sbb stc sbbl adc and hlt adc push rcl xor jp bound pusha push nop lods xchg push jns lcall test dec push gs insl adc mov ljmp clc cmp push loope xor adc lret sub testb pop outsl sbb cmp push xor inc je call mov dec sahf fldt movsl mov inc call jge mov out push sub into mov push and jae in lods lcall jno rcr push jo out and jo in cmp jne pop mov mov jp mov or stos enter jns mov lahf test inc or sbb mov dec ds dec cmp cmp shrl inc push ret test pop loopne jp aaa adc dec (bad) insb dec fcmovne lds sbb scas loopne stos dec pop pop loopne (bad) mov dec fidivl in aas lods mov ret push dec inc ret (bad) sbb inc push imul clc push (bad) shll int3 in insb fmulp adc inc add fisubl xchg (bad) adc inc inc lock pop sti cmp dec pushf cwtl cmp mov mov push pusha push mov cmp lock fiaddl fst insl int3 ret push pushf test or fstl or lods adc jp test out loop xorl outsl leave sbb lods pop lret insl pop outsl fidivr out add ss bound mov imul orl fldl jb divb outsl call mov insl in xchg dec xor sbb mov es call jge int3 in pop data16 loop fstps push mov inc nop jl jle jmp popa inc nop inc xchg out rorl iret stos sbb inc jo adc sbb mov add loope jb inc inc sbb push add in je shll push in (bad) xor aaa add test inc nop jmp and movsl inc sbb sbb shl jo dec push or jmp ror stc outsl cvttps2pi jae hlt nop fsub push add lods dec js (bad) loopne adc mov mov out mov cmp xchg pop mov (bad) inc je jae loopne,pn nop push mov mov cmp inc xorb popa or (bad) lock in aam jmp fiaddl (bad) jae add icebp fimul jmp sub pop dec js in jb rorl int3 sbb rcl mov sbb and ds or out or jge sti insb je int3 mov into enter dec imul adc xchg in adc lock ja rolb jp pop push test dec inc or jb cli aad inc rcl or inc and sub int out and dec mov (bad) aaa sbb clc cmp push mov mov fiadd nop loopne (bad) jo fwait imul shlb dec mov stos sbb loop pusha fdivrp dec add lods (bad) jns cwtl inc and jno pop clc addl push push push stc mov mov xor lds inc sahf fcomi aam mov je cmp dec hlt hlt inc fdivrs fwait inc add shll jp call mov cmp out idiv inc mov add fnstcw fsts rcr inc sbb adc test cmp xchg inc xor sbb sbb leave push push imul fs rcrl dec loopne adc xor jbe jp xchg pusha mov push add add push jnp push pushf aad dec je les in dec xor sbb sub pop cmp loopne inc sub push xchg insl fcompl pop in jne rclb aad enter pop adc mov in dec mov shlb adc in adc adc (bad) jbe dec std push test inc sbb outsl xchg jmp mov sbb rol xor or out movsl dec cld scas sar jp pop idivb mov lcall aad dec jl jo fs test les lods inc fcoms or pop cmp call jle xor sbb cmp ljmp stc jbe sbb inc sub mov mov insl (bad) dec xchg shr popa cmp vmwrite sahf iret into lcall xchg loopne cmp inc out sbb dec mov push loop jmp movsl mov call mov xor mov add push dec sbb adc fdivr mov sarl sbb fldt dec scas jno adc mov js push jae cwtl pop pusha call in inc les mov test in stos dec js pop cmp inc pop call cld ds loopne pop sti enter out adc fld ror adc inc out inc jo mov test jbe inc cmp rorb sbb jge je mov fnstsw push cmp out std (bad) imul aam mov push push pop push push xor addl frstor push pop mov insl pop jecxz leave push mov dec scas mov jns in stos ss mov pusha (bad) repnz pop cli jo mov xor inc pop in pop mov nop dec mov aam jp jne inc hlt movsb (bad) leave mov imul jle pop roll mov push in cld jecxz jo in pop jp mov jns loope nop subb push pusha ja clc xor ret inc adc fimul sti cmp adc loop push mov pop fsubs pushf (bad) pop fmull jl xchg call jg adc outsb repnz pop aam mov push fsubr push leave dec cmp sbb inc mov sub push clc xchg shl xor insl loopne mov out outsl outsb roll pop mov or jbe jmp stc pop jb std incb in (bad) jecxz jp sarb bound (bad) loopne fcomi mov push cmp mov leave sbb mov leave jl lcall insl jbe into push jbe into dec negl inc mov lcall adc mov push xchg pop push adc or rcl or push push aam jle rol inc sbb mov sbb addr16 pop stos or ss fwait lock je xchg dec mov decb ljmp sbb roll ljmp enter or neg inc lcall push jne push xlat imul lret call xor aam or stc mov jo xchg cmp in (bad) ret jge clc mov push ljmp loope shlb xchg mov jg xchg jno (bad) cld (bad) dec xchg fstpt mov imul lock mov stos dec aad (bad) jmp mov loope outsl pop cmp out popa xchg stos lock mov mov je sub int in adc cmpsb fnstenv pminub mov mov push mov push push jno mov sub jno mov repz inc cwtl xlat sbb inc sub cltd push fistpl rorl (bad) aaa sbb imul popa and aaa mov pop cmp repnz mov stos or (bad) add pop mov adc rclb por inc sbb add (bad) push push and mov inc xchg pop pop jno dec test or pushf mov cmpsb inc push mov (bad) xor or dec jne imul cmp pop cmp sbb push cmpsl pop ja inc test jecxz loop inc cmp add add scas jae ds add push arpl fdivr xor outsb arpl test mov call (bad) cmp test lds mov addr16 and aas mov mov add push inc int int decb outsl js sbb repnz pop pop gs cld out arpl in mov mov xlat cld sub pop sbb hlt inc popa sub and cli dec popf inc xor pop aam stos test push add arpl clc inc fbld push push lock jl mov jne aad cmp cmc (bad) pop lods clc leave insl mov mov inc xor lock jecxz push cmc fisubr cmc (bad) cmc repz test mov pop movsl int3 xlat inc and mov xchg xchg add jg jp push lods sbb ds fwait mov sub pop xor mov out es sub add cmpsb (bad) repz enter addr16 in mov pop xchg jecxz inc out sbb div and popa dec pop mov jnp xlat orl imul or das jge ret mov ret popf pop or push pop lock out ja or stc and sbb cmp inc push (bad) push dec mov hlt push fildll addr16 movsb sbb (bad) jecxz bound cmpsl scas mov cmp mov add dec adc test sbb sarl pop addr16 pop mov pusha push and and jle daa lods xor jg aam jno mov stos adc dec push add adcl jmp jbe lahf sbb mov rcl inc movsl mov or shrl xchg xchg arpl (bad) pop mov cmpsb mov insb adc pop fmull pop ficompl inc mov cwtl iret pop je sbb xchg sub cwtl dec insb pusha js adc mov add (bad) icebp fsubr fdivr popf lock in cmp dec adc inc flds sub (bad) je pusha xor xchg lods sbb xor lock add sti outsl fs aad mov sbb jbe pop mov dec xor jecxz out or push pop (bad) addr16 dec mov mov aad test inc xor aam test ror stc jne adc xor inc or daa jae dec repz fstpl out jbe push hlt inc sbb rcl sbb cmpsb mov push fistl test jg mov cmp sbb add pusha mov call mov pop mov and pop icebp sbb pusha out push adc clc mov enter enter into stc or sar idiv dec outsb jnp (bad) jae icebp xchg cmp lret je out mov adc sbb push pop inc adcb js dec insb insl mov inc mov std mov xchg xor mov clc jne ljmp int sahf jnp inc rcll mov fldt sub outsb enter aad add add scas jle outsl lea or aam dec cmp xor inc add jae jle gs push mov push lods stc inc dec loop xor inc iret and xlat mov mov aaa lods shlb mov pop js mov js mov push pop jl pop lcall sbb scas inc dec push addr16 push and test aad repz push pushf cmp (bad) in loope mov inc or cmp pop mov fucomip pop mov cs pop out negl mov jge inc stos push out sbb fdivrl fisubl or sti ficom roll lds xor stc fidivr stos sar sbb jecxz mov mov jge cmc cmp inc roll mov xlat jae inc pusha jno ljmp mov sar push fldcw or mov ret ds insb addr16 bnd push inc gs call test imul repz call movsb mov movsl fnstenv add (bad) ljmp mov pop (bad) push test sub test imul es cmc push cmpsb cmpsb sbb cs xor popf sbbl testb adc jns out xlat (bad) jmp or xchg test data16 aam dec adc sti cmp leave lods xchg loope es push push jp add mov stc in xchg sbb movsl hlt pop fildl punpckhwd int insb (bad) add add mov roll roll cmpsb adc jnp repnz fneni(8087 push xchg insl imul (bad) clc idivl sti pop push xchg pop inc gs mov mov shl (bad) jb fsubp sub scas mov out jg jle push push adc js cmp in ffreep insl xor push gs pop and or mov fistl jmp mov cmp inc add stos jb cmpsb (bad) cltd in fldcw shll into stc adc fld1 vsqrtsd shrl test fidivr mov xlat add mov push (bad) fnstcw sub dec imul dec ds mov ret or sbb lret push adc cmp xchg mov loope adcb insl add lret xor and cmpsb add cltd lods fs lods inc (bad) dec in repnz roll xlat lods xor cmovp repz lahf mov (bad) je pop imul ds sub push std mov xor dec add xchg sarb arpl push adc jns (bad) adc shlb xchg iret xchg jns cltd test aad dec mov add mov xchg fstl pushf dec sub push push test adc mov ja ret test cmp into dec (bad) (bad) fnstsw scas push (bad) clc fldt dec repz xor mov gs cmc popf add jns sarb in jb out outsl xchg jge imul jge in scas mov jl stos dec flds mov pop imul rcrl mov sbb leave in cld adc xlat popa test imul mov bound (bad) enter fdivl pop aad lock lret mov add push jns ss fidivr hlt mov dec dec xor cmp (bad) and negl xlat inc and xchg push ret movsl sbbl adc jp mov imul add push inc inc sub arpl stc lds or outsl mov push fwait stos cmc imul sub sbb jns scas pop cmp pop pusha jg sbb dec jne lods jb bound jnp mov imul mov fisubl push mov or ss xor test jnp pop dec inc mov cmp pop pushf jo lcall jl dec dec and xchg cmpsb sub add pop xchg lret mov sub pop push pushl in ja jne lds fstpt jecxz sbb xchg jl imul inc lret mov and push cmp mov inc (bad) in push jnp outsb jae aad data16 sbb imul in pushf jne mov shlb adc jl sti sbb xchg inc es test add lret jl pop popf sub test inc fcmovu loope imul cli push lea sbb add in sahf fwait jns inc fs add lds xor dec jne leave ljmp mov cs jl dec (bad) lock jb mov push fsubs push clc adc std clc sub (bad) fcoml adc sub ret xchg add dec push and push mov mov sbb mov mov test mov mov das clc mov lods jne and mov adc imulb push push ja (bad) push xchg sub nop mov rorl add xor lea mov stos lods lock push dec push movl outsl fdivl stos (bad) pop pusha loopne pop jmp pop or mov adc mov sti pop push dec add in push clc mov push fidivr shrl aad push or push pusha adc mov cli sub xor into or sti test or jle xchg (bad) fdivp rcr push mov push popa cld mov dec dec pop repnz mov sahf push dec es mov cmp jae pop mov adc inc dec scas push bound push pusha imul cmp push repz lret mov cmp xchg mov scas popa ret cmc pop sbb ljmp jp add data16 out xchg addr16 add jne cmp outsl inc pop (bad) bound fsubl xchg inc hlt (bad) stos imul push mov inc inc and (bad) out pop fildll shr imul pop adc jb mov add mov in pop aam mov cmp std sbb fadds pop enter aam imul je rcl cli js and insl pop dec je pop lock xor mov jno pop nop jnp mov fwait adc in div out dec movsl adc lds iret loope push in jo lcall rcrb lods sub push sub movl bound push or aas call popa or rclb (bad) comiss jbe lret fsubs mov (bad) jbe (bad) dec cli shlb in push adcb aaa push (bad) mov fdivrs leave jne mov fmuls push inc fdivl arpl sahf mov pop pushf pusha (bad) fst test and sub jb cltd dec stos pushf test inc ljmp test je mov push jno adc and mov stc fildll pusha cmpsl pop and inc adc cld adc mov ljmp mov js sbb mov mov leave rclb pop cmp jle insb insl ds xor sahf cs ss js add es fisttpll jb mov shll xchg push jns sahf imul xchg xor (bad) mov push cli mov mov sbb sub fstps adc push scas notb fwait jle pop jl rol ds in sbb je xor out adc xor push call sbb es stc jle leave xor popf and xchg lret mov cli into in outsb dec popf mov inc inc pop in cmp (bad) loopne xlat mov (bad) xor bound mov push pusha xchg push (bad) adc ret (bad) rclb or inc push shl (bad) pusha sti mov jb call into dec std das shlb fidivl mov mov pusha int push imul loop jmp lcall out daa and pop mov hlt cmc aas (bad) add mov xor in lods sbb dec (bad) adc pop cmp push gs out xlat mov not jge lret pop and xorl pop pop in sbb jns lret inc test fimull inc js mov faddp out ljmp hlt insb inc mov cmp inc xchg mov sbb push imulb aaa mov lods lahf jns push sbb lret loop mov add pop fsts dec push add adc sbb mov aam fmull roll fs imul jmp jecxz imul push cmpsl pop loopne test inc paddsw idivb les cmp mov cmp ss pop adc sub mov es mov movsb or dec mov add pop cmp nop pop (bad) hlt ljmp movsb xorl cltd nop jmp std out orb imul push jp push mov mov fidivl mov cmp test mov xchg add fs inc std (bad) outsb pop cmp fwait xchg cs adc sahf cmp outsb dec xor push mov cmc rolb add call jo (bad) lock jmp ret cmpsl add loope sar push into dec sbb ret xchg in fwait sub fwait in adc jmp jb in adc nop cmp repz movl les dec popf jns push add mov xchg jle pop mov mov dec mov mov aad jns pop or add lret (bad) out (bad) push aam lock aas push out dec out dec inc xchg pop std xchg push aam pop (bad) leave rorb mov xchg push movsl cmp push xor mov test mov (bad) lahf pop dec and mov hlt add xor pushl jne mov jecxz xor xor mov out sub mov daa loopne ljmp aas int and in push pop and cmc (bad) test and jg xchg jb mov xchg shr or stc jns repz hlt rcll pop fwait js mov aam mov pusha ret sbb jecxz jo inc and movsl mov inc and mov mov dec mov mov (bad) repnz leave ljmp mov clc shrl lods in fadds mov push mov push mov fadds cltd lcall fdivl subl or lock out fsubl lret sbb pop (bad) test fistpl loop jno (bad) or das mov enter sub aad or fucomip enter xor sahf sub lds pop (bad) sbb or xor mov push jns and jl mov arpl mov (bad) xor pushf out insl enter pop jle sbb (bad) push sbb push mov mov dec adc or push jnp (bad) dec sbb leave adc pop mov sbb pop sub lds mov pop shrb stc fwait dec mov fnstcw sbb cli pop test (bad) mov (bad) mov pushf adc ljmp add icebp jno inc add fdivs loope cmc bound in es adc out xchg pusha int3 les push lds or shl jae jle inc cli data16 adcl shll dec adc xor negb je mov sbb (bad) sti mov (bad) dec aad dec jnp shrb les pop shlb jmp cmp jb push aas mov inc add adc xlat mov ret pop inc addr16 mov pushf cwtl test dec in aam cmc rcrl in inc push movsb loop push pop ds push aad in call in hlt mov pusha add std jne in fnstenv or mov mov cmpsl inc fcmovbe push lcall pop sub push push xor (bad) push test pop fistpll mov and rorl cmp (bad) je int pusha xor insl mov xor push jmp mov (bad) fidiv or xchg popa mov pop mov jne mov pop aaa and add dec fstpt icebp adc jo mov rorl jnp xor sub jb xor push insb push fcomps add test je ret adc shlb icebp jne outsl inc aaa in leave fs or ss scas sbb subl clc xchg pop adc enter sbb stos repnz jb repz rol hlt lahf out inc push inc ror cmc add pop push pop lret clc sub xor popf push cs push xor sbb xchg loope ljmp imul or xor push lcall inc lods mov sub leave cli inc jns inc fs rep inc ret repnz clc clc hlt push daa sti jbe lods fdivl pop dec out loop inc jmp stos (bad) xchg sub xadd (bad) dec jg jo push (bad) adc cmp adc xchg daa enter adc (bad) dec pop sbb out add ja (bad) stos push mov push mov mov jbe mov cmp pop jle loop push lock xchg imul ljmp nop sbb mov sbb dec mov jne xor cmc jb push (bad) jo mov jns mov push std inc pop aam andb mov push pop nop or insb or jnp sarb (bad) ja jnp ror cmp xorl jne (bad) bswap movsb cld hlt stc orl pop add pushl loopne fistl xor mov mov push cmpsl fsubs pushf in (bad) imul flds in lret xor out int3 test push and jns add (bad) bnd lret jl adc push pop dec mov lret nop and arpl jno adc scas cmp push and cmp (bad) (bad) jl sbb add stos mov dec jo test cs or jno adc and scas subl cli jnp out dec sbb fs into dec inc ret cmp movsb or mov test in and das cmp aad pop jo cltd bound add paddsw inc jns lret adc adc sbb dec mov pusha ret aad xchg pushf push mov mov sbb cmp pop pop sub sti cmpsb or xchg jnp outsb mov mov shlb gs sub jl xlat sub sub mov mov shrb out fistpl lods in xchg jbe cmp aam push sahf (bad) test (bad) cmc inc (bad) pop cmp stc ret mov out sbb clc fisttpl pushl mov ret das (bad) in mov or mov sarb jbe cmp arpl push xor movsb sbb sbb mov push mov popf pop int mov lahf insb aad cmp adc fucomp cmpsb xchg pop and push fsubr sbb add mov or je wrmsr jp gs stc pop dec rcr lds jae es sbb out in sub mov xchg lret sbb sub mov aaa icebp or inc sub add stos ss fmull ljmp pop push cmp cmpsl add arpl daa sbb dec rorl test aas dec push jecxz into pop sahf mov mov mull ret push add scas cmp je ljmp pop mov scas cltd (bad) out ss lods clc pop mov mov mul cmc adc xor mov aad in jg push cmp fsubl in cmc mov sarl ds out dec mov jo inc call (bad) sbb mov or adc mov push repnz repz adcl sbb shlb cli lret aaa sbb add rcll ja inc pop jp pop dec in mov adc jge mov mov ljmp loop fadds in push ljmp sub inc mov add pop imul in xor js imul push push pop lret loop movsl push ds mov cmp test iret cwtl fdecstp mov dec rorl aaa inc pop scas daa stc inc push push fwait jns sbb mov sti sbbb mov cwtl lods push jg adc shrb dec push cld les push add (bad) jecxz jle dec jb cmp sub fsubrl add aaa stc and xchg lods xchg test mov adc xchg (bad) jecxz xchg bound sbb jl clc ficompl rorb pusha je,pt loope in inc jecxz enter out add int3 inc mov mov mov int cmp or xchg ret cmpsl out lock daa or stos adc fdivrs push sahf adc pop (bad) jbe inc pop mov fldcw mov in pusha xchg pop pop dec sbbb rolb pop adc cmc out ret adc xlat hlt and pop imul callw in (bad) arpl xor adc clc mov lahf aad fildl jno fiadd cmpsl daa dec repnz loopne cmp sbb das hlt out scas lret in or frstor fidiv pop adc imul jb jbe lcall jnp cs sbb dec pop pop fisubl dec fcmovbe jnp (bad) idivl mov dec adc rorl shll mov out dec nop inc adc aaa ret mov sahf dec data16 or in jl int inc pop jne pop cmp enter fcomip (bad) push pop scas or add gs jnp add and das into dec loop (bad) jns mov cmp (bad) jbe popf mov popf adc (bad) adc les fstl ffreep fwait jne bound rol ljmp popf loop sub cld hlt jnp cmp xchg jnp nop stc lods sbb inc xchg in js push cmc xor pop gs lock mov in mov jne ficoml xor xlat loop add (bad) cmp fwait jno or sbb in mov jmp xor popa inc (bad) test or es jl mov sbbb lahf (bad) mov jmp mov xchg mov or outsl sub aam in mov rcrl pusha shll sub mov inc add and xor xchg icebp dec mov inc jge pop push (bad) push adc mov sub gs cmp mov add jno shlb dec or pop jo jmp xchg int sbb add test loopne stos jg or insb hlt rcr xchg lods push adc lods ds ret pop pop pusha dec or into stc int cmpsl int pop push ljmp leave adc mov adc std xlat bound sarl jns sub data16 fistpl mov adc test test cmpsl xor and mov pop push adc roll leave popa pop push clc fwait xor lcall jb xrelease scas call clc das fdiv scas dec cmpsl dec jg jecxz sbb push push popf mov or jl imul enter push add pop cwtl loopne sub mov jl cmpsb mov mov es scas add pop loop jl pop pusha stos add (bad) nop ss pop or inc nop (bad) xchg push cmc mov maskmovq negl scas imul out add jns mov push movsb enter pmullw repnz mov adc mov es std scas xchg add (bad) fstps aam fildl ret or add std call mov out popa ljmp xor mov sbb cli mov adc push test or fsts jb (bad) daa (bad) fstps xchg mov inc mov pop inc and sub or aad jge sub mov jle clc add push cmpsb and mov mov aaa add pop xor iret les call dec mov jnp mov mov adc bound push ret xor jl cmp mov sub xchg movsl mov in iret add jle mov ds sahf movsl aad mov sbb out sub aam sbb repnz cmpsb or push sbb in imul movsl pop mov dec push pop fcmove fs push sub push cld jbe xchg sub or psubsw std mov and mov xchg dec adc xor push pop call sbb fistp inc leave (bad) sub add out push fadd push push sbb push orl cmpsb mov inc imul addr16 adc test cld out mov jb das sbb insl mov pusha mov push iret mov pop arpl les push lds jg mov (bad) mov xor daa xchg pop pushf jo loopne jne stos pushf xchg mov xor js (bad) mov push pushf xchg adc dec pop scas push dec jns pop add insl shrl jl push push int3 gs xchg in push lahf dec and sub out add add xchg xchg loopne dec pop push dec in roll xor stos inc or loop loopne fwait mov negl push mov mov in js sbb jo push jb orb fldt mov fldcw loopne fs push dec xor dec hlt or mov lcall ja pop sub sub dec pop gs cld sarl pop dec ret and fcomp lds sbb xchg sbb lea jae fcoml das push jl in jo loopne out arpl sub dec aas xor addr16 lock fildll mov xchg lcall call fnsave inc xor in push sti pop seto jle or fwait sub xchg ss xchg xor xchg scas fnstenv repz sub push les ds inc pop dec mov (bad) mov inc inc pop addr16 cli mov inc mov push mov test je scas cmovae add test inc je mov movsl aam cld push xchg call push sbb xchg bound jo fmull repnz push jo fnstenv movq in add mov movsl scas push dec (bad) jg mov (bad) jecxz fsts xchg inc insb fist dec notl and lock dec js push sahf pop int jbe xchg push jp loopne or popa dec int3 in push lret sti mov xchg repnz push int in inc dec out cli fbld mov pop mov jb fstpt loope and popa mov sbb stc (bad) pop add fdivl dec lock negl mov arpl sbb lods jl dec adc mov jg and clc repz pop popf dec jl cld pusha jb std outsb push jl loope inc jno js inc scas test adc add sbb add into repz flds jl daa js sbb push mov and repnz add cmp cwtl pop inc addr16 mov add sub sahf std std pusha mov lret jo jae stos lock ficoml aaa je mov fistpl sub and clc (bad) lds stos lret cmp xlat sbb outsb fmuls jg jne pop test dec sti xor lods arpl (bad) dec adc dec dec sti (bad) in popa mov (bad) mov mov test cld add xchg and xchg or lcall fild mov adc popa and inc pop mov sub fisubrl xchg nop xlat aaa popa outsl jo,pn js (bad) aad xchg data16 rolb push (bad) call ja call jns faddl mov out or cmp inc mov sbb pop inc xor inc rclb out add or cld mov ds push mov lock xchg es and icebp sub incb aaa xor rorb jns insb mov ljmp je popa mov mov push daa insb adc in sub jl push push xor inc lods loopne mov dec add pop inc int3 (bad) push aas mov ljmp test cmpl jno fs out sub sbb lahf dec mov fnstsw fdivrp sub daa insb xor push ds icebp push (bad) xor fisubr and or xchg test fcompl roll test add mov scas (bad) mov lock imull xchg je dec outsb lds or push push push dec lcall out xlat jmp inc xor sbb test xchg mov clc scas repnz movsl jne out mov xor jecxz in or inc icebp cli jmp adc mov sti stos iret rcll negb push or adc pushf scas ffreep cld cli imul jp cli jns popa loop dec xchg ljmp dec loopne jg outsl cmp fiaddl insl and pop sbb mov adc sbb jns xchg cmpsb push call (bad) jo add push push negl fwait loope inc call in jae cwtl aad jo fldl pop int3 loope pusha push std outsb dec adc jl movsb dec add not cltd popf sub test pop cmp ss hlt add xlat dec nop push daa jb xor xchg add push enter cmp ret mov mov mov loopne mov fisubr mov stos push sahf aas lea adc dec mov jmp xchg scas hlt loopne sbb fwait movsb shl test jp pop push cmp cltd aam pushf sarb lret xor mov nop shrb sti xchg std fdivrs imul cs mov jns roll mov or push fisub and push test es and add lcall push nop mov cmp jp mov loope jl mov scas mov jmp stos push clc add lcall ss in test fpatan loop mov xor decl jecxz std or in or adc fwait jns arpl inc imul mov mov stos scas add call mov mov rclb arpl pop or lock xchg jns cmp gs addr16 scas (bad) add loope push sub out inc add jle aas mov sbb test (bad) cmpsb mov pop mov cmp jp xor mov in or daa adc cmc adc das (bad) loope push ja pop mov out inc add jg aaa pop fdivr inc push push jg mov inc sub sbb sub push (bad) ss mov add lahf lcall or jmp fs inc int or mov xchg cmp data16 and or push (bad) (bad) sub int cmovs or sub jno mov cltd and addb mov cli adc mov lods les jno das adcb xchg xlat daa mov dec dec inc and or inc jae lea fmulp pop sbb or lret sub negb out fwait bound repnz or jno adc push mov fstps mov mov sbb je xlat xor aam adc mov inc stc test jae enter sub xor sets fwait inc (bad) push push (bad) repnz pop insl jge (bad) insl call sbb (bad) mov inc fimull sub sub clc jne sti rcr popa cmp cmp lea int3 and fstps (bad) int3 test int jge mov add mov xchg jmp clc sub jae bound test inc jle inc dec insl shll xchg adcb sbb fldt push and mov push dec inc and loopne jmp cmc jecxz adc mov pusha sbb call cltd in std js es clc dec pop xchg adcl (bad) mov pop sub sbb ret cmc xor mov out mov mov xchg add aad dec dec mov pop pop mov cmpsb push call repnz lock (bad) lret xor cmp movsl or (bad) cmc sub inc mov sub inc leavew lock cmpb sarb adc push dec ret push jmp jl movsb fstpt repnz cmp inc adc ret xor test mov adc mov arpl add pop and jl cs lock imul mov fucomip je pop hlt aad nop pop xor sub pop aaa scas inc sbb pop xor pop in or sbb mov pop add jmp pop cli (bad) jp call jae adc dec nop mov jne xor (bad) fs xor sbb andb sahf ja andb mov stos mov (bad) in jo (bad) xor and cltd jge adc or sub push (bad) xchg push jle lea dec (bad) adc lret lods xor ljmp arpl inc mov push scas dec jle cmp mov or aas fldl movsl (bad) enter insl addb mov out adc ret sbbb es sub mov xor inc jmp stos mov mov es or cmc cmp mov sbb imul lds loope and mov daa ss adc inc push mov sbb addr16 fs pop (bad) cmpsl or cld mov aad in pop in outsb es jg jl idivl int3 shll les adc lock sbb mov sbb icebp mov fnstsw pop ret mov xchg ret inc fnstenv movsl in mov iret mov stos xor fcoml sub out aam sbb cmp rcrl sbb xchg ficomp inc jecxz in xchg mov pop cltd sub loope jecxz mov (bad) (bad) cwtl mov int lds nop jae or xor mov (bad) in (bad) fldenv xchg and (bad) mov arpl xor std stos mov fcoml enter sub dec and adc insl jae movsb mov xor fsubl add insb clc movsb cmc pop std sti add mov mov sahf das test add adc sbb push cmp cmp or mov adc aad mov mov inc pop jb xchg loopne sbb dec sbb rcl mov lds mov repnz mov repnz iret push iret cli add loop mulb inc dec add add insb mov iret sub mov and xchg mov sub dec ret test mov mov and sub adc sbb mov loop pop mov push sbb or dec mov cmp jecxz jne or jae fs sahf in (bad) icebp jg sahf loope pop jo mov (bad) mov jns add (bad) sbb mov or mov test shll (bad) jno gs xor push cmpsb dec in adc loop lock mov mov sub xlat jmp dec (bad) jne lods scas mov jae xor repz addr16 shlb les fsubrs mov pop sbb insl pxor mov cli add roll test sahf push aam (bad) loopne adc or sahf pop int lods pop pop (bad) and repnz das inc imul std or pop in inc aas adcl or xchg dec pop stc ja inc mov fabs jecxz push mov (bad) jo out pop push fwait push cmp push adc mulb pop addr16 sub or pop adc in ficomp mov mov cmp xchg pop add inc shrb popa pop mov ficomp test push pop lret cwtl mov es mov jl insl cmp fwait test movsb push scas loopne gs or adc jbe je imul cmpsl imul popa jl fcoml scas mov pushf adc and inc mov cmpsb loope je mov adc dec or fstps xorl fdivrl pop xor sbb jo enter iret sti lds or cmpsl lcall adc aam sbb push loope fstps rorl adc (bad) xor xlat and sahf loope loope cmpsb mov and lods xor mov cmp hlt sbb int inc testb pop pop repz mov aam arpl adc mov (bad) push jno cwtd gs mov or jp shrb pop or inc push inc push mov inc or mov inc push (bad) adc repz inc and into repnz lods jb es out pop jmp pushf adc inc lret mov loope pop xor or pop xor pusha mov outsb push mov mov bnd add mov dec jge cmp adc dec lret mov fnstenv testb sarb push push xchg inc and jmp pop push (bad) jb in mov mov lret and fs and ja negb cld pop add push popa (bad) inc stos dec fimull jno mov and sbb jne or and dec fsub or pop push mov popa shrb jo gs add das and mov sub inc or ret pop inc cli shrl xor scas pop push test (bad) clc or sub repnz adc jns xor scas shrb out sti sti push in jnp out idivl inc cs test fmuls sbb jno es mov add push arpl sahf les ror icebp out sub jbe push jns (bad) aas lods loope ja jp rcll mov lcall mov sbb (bad) int3 push std in mov add push adc xchg dec int lret out sbb xchg das dec pop jo pushf cmp (bad) lret insl jle pop jns xchg js idivb incb into or out inc std out faddl (bad) jns xor scas pop mov addr16 dec jge jl movsl imul inc js jge fstpl inc add cmp inc jne mov sbb adc shrl jb and mov inc aad clc push (bad) jne dec hlt rcll ret (bad) jns sub cmp cwtl (bad) aas mov sub cmp je loop jbe mov add popl jo repz pop mov rcll out push test sub jo aam stos cld fldenv push dec cmpsl ds and or std (bad) stc sub fstpt sub lret inc cwtl push (bad) je lock adc cltd fistp cmp out roll hlt rcll sbb out cmpsb mov mov icebp mov rcrl in daa xchg jl lods and mov inc call shl test addl sti shlb lock (bad) inc xchg push sbbl push ret inc loop xlat pop fdivl je test mov xchg test mov sahf rolb push mov lret inc in jo pop aas or push enter inc and xor mov std dec rolb sub cmpsb adc addl inc rcl push inc push lret mov stos sub xor jg push mov xorl or in lods lcall add out scas inc or mov loopne jg sub iret jns add mov add daa call mov mov and insb adc or in fadds out lds out aaa pop outsl icebp fadds xchg lds lcall inc adc lret popa fstps cmc aas mov push fmuls push shrl pop dec cmp cmp adc sbb aas insl cltd out arpl cs pop sbb aam (bad) in js lock stc mov add repnz lock loop in mov ljmp fimull add call cmp jns xor mov adcl clc xchg dec (bad) into stc jne mov test mov stc jp xchg lret sbb outsl iret daa cs shl mov jge in dec ret cwtl or pop jae (bad) pop movsl or (bad) out iret sbb inc loope ja or sar insb pop adc fdivp sbb push pop out adc and shr dec (bad) int sti xor pop bound jle lea test iret mov bound mov mov bound push sar sbb sub push push inc divl and jl js mov sbb dec les sahf sarl in loope idivl push fsub add inc idivl lret arpl data16 inc pushw movsb fidivrl sarb mov xchg pmulhuw lahf je (bad) mov pusha dec push arpl push push push adc adc pusha aad insb lods mov xor jnp orb jne in mov push mov pop fldl std sbb cld mov xor adc dec or aad je fldenv lcall xor mov sbb add aad pop pop jns adc cmc negl add adc iret sbb icebp jmp jo cli xchg xchg push movsb repz aas popf ja lods mov mov xchg sti arpl cmc jl bnd shrb pop gs enter cmp inc mov sub xchg inc mov gs arpl (bad) fdivr mov mov aad js jg int3 push mov dec mov flds fmuls push xchg std jo pusha dec ja shr loope pop jle and sbb mov adc in push fsubrs xchg aad cmc push int mov iret loopne out xchg mov dec push ret outsb sub inc roll (bad) jmp dec push cmp clc lret shlb rclb inc fsubrl aam lds leave lret dec xchg and mov jns push das ror fs rcl pop fxch pop out out ret add dec push push jne push pop add lret jns sub out test int3 stos adc orl setge mov loop push or mov xchg pop out fstpl dec les xor adc loop movsb ret jl in movsb xchg enter or in jno cmpsb inc sbb inc mov hlt adc jbe jecxz movsl cmp repnz test push movsb fwait push pop sub (bad) bnd mov (bad) mov adc divb mov jecxz push ret xchg jno mov pop addr16 movsl out push sbb iret into enter xor jg sub aaa mov or mov jb cmc shrb mov pop mov ja adc mov shrl dec jnp dec xor roll xchg push in xor (bad) jb jp jbe push jge cmpsb das ljmp inc and cli jmp add iret push (bad) xor and push cs mov loop or out and jno jno jo jne or iret cmpsb nop cmp cmpl andl sbb jns add mov mov inc mov pop or mov pop mov mov adc ss fimul int3 mov pop xlat sub mov ror jecxz jp inc out clc pop sub jno sar mov or jl mov lds mov shll (bad) cli jg popa cmp inc adc (bad) lret xchg aaa iret mov fldt xchg push repz and (bad) dec fnstenv loope lret cmpsl jns enter xchg cmp cmp or mov cmp lock dec mov stos dec jge fistpl clc enter xchg sti mov arpl insb mov ds sbb push (bad) push popa adc negl inc cld negb in xchg xlat int adc outsb dec dec mov add add sbb ret sar mov or xorl xchg and rcll repz repz repz dec daa repz jno dec xor push inc (bad) mov mov das cmp fs fiaddl mov adc pusha xchg arpl das cpuid and and loopne aad cmpsl sbb testb adc mov mov loopne (bad) xor mov jg add je fsubl or loopne mov cmp xchg xor or or push inc add jge (bad) xor and fcoml mov movsb rolb mov sbb pop push sbb and int das cmp stos aam mov iret inc mov adc pop pop sbb xchg mov pushl loopne sbb fwait jbe test sub mov pop fcomi cmc in cmp pop sub push aas out push ja sbb add or stc popa repz inc lds cmp inc jp jne push fcompl ret push pop xor test push iret mov inc pop test adc mov insb mov xor push inc inc adc aam pop push adc sbb mov push (bad) jge daa aad lods sbb add dec ret or mov mov push (bad) (bad) ds in sub rclb (bad) fnsave inc mov xchg addr16 xchg clc in push push (bad) loope dec sti mov test pop loop inc idiv loopne stos sbb (bad) fmuls sbb aam adc cmc es xor jb (bad) xchg dec dec loopne,pn repz loop sub add imul inc scas sbb out lds (bad) sub test popa sarl and push xchg mov gs jo xor or repnz movsb push adc mov inc cltd sbb push stos xchg or rcr or xchg and leave jno lcall insb mov push imul iret mov dec fcoms ffreep in fisubl (bad) outsl jp in pop and les sbb lock sbb or je jne out lret push out aad push push pop addr16 cwtl out stc mov xor and rol fcmovb mov push sub mov fnstcw cmc aad sbb in (bad) insl fcmovnbe pop and or cmpsl push arpl inc mov push cmpsl xor ja aad add decb (bad) popa mov inc lods (bad) neg subl lock pusha clc pusha mov movups imul and pop sub js ljmp fsubrl aaa enter xlat je add jo adc add push mov cmpsb aam or mov jo stos lods add fnstenv ljmp mov sub cmc idivl dec mov rcll insb inc sub mov push das mov out inc insb lret cmpsb dec jno ljmp fsubs jne bound movsb push inc pop adc adc mov add pushf xlat jnp inc mov inc push (bad) lock mov lods lock cmpl mov inc hlt pop dec negl push in push dec stc mov push pop pushf out inc xchg imul in add cltd lcall inc jl xchg les in rcl mov lods mov jns loop push and jl sub jne out jne (bad) inc add roll adc out jp cmp mov xchg pop lock dec pop out inc push test pop xor (bad) sub jmp or test (bad) into das jbe (bad) lea ror stos repz push cmp inc inc incl fcoms mov dec mov out xchg sub es sbb inc pop lods xchg inc js dec add xchg popf das lret pop cs dec cmpsl add dec or push pop roll fcmovb aad sbb mov jg xor mov add dec pop dec dec jbe lods xchg ss push add enter mov fcmovu jecxz (bad) sbb inc addr16 or push sbb cmp push clc hlt sbb xchg jne cmpl (bad) xchg pop and mov pop gs inc pushf into xchg mov mov xchg (bad) xor push mov scas scas cwtl mov adc push aam inc push shlb ss pop inc popa mov sub xchg (bad) push aad jb cli es test cmc inc addr16 ss lret rcll push cli inc adc adc shl negb mov mov iret scas popa sti pop jo (bad) es loopne push aaa add stos js jge aam xor jae lods or mov roll inc jbe jmp or or jae pop insb mov push inc cwtl and sbb insb adc icebp pop adc sbb add mov pop adc or aam jb jp pop xchg call clc nop and sbb push leave inc ja mov enter sahf adc arpl out fisttpll imul (bad) mov dec jg scas lea shll clc mov mov pop mov orl ja,pt daa mov das and ss repz out xor lret (bad) decl cmpsl mov add dec (bad) xlat out mov jne adc jne lds inc fcmovnb cmc in inc ds mov lret shll push pop mov mov stc inc stos jb xor ret push test (bad) icebp inc push pop sbb push mov xchg mov lea jge push mov ficoml sub in jbe ljmp inc dec daa jno jno mov mov loop cmp repz (bad) jecxz mov and cmpsl (bad) fwait rcrb cld mov clc loopne les shll lcall les movsl imul jg fdivs pop lods pop jo sub adc out cmp mov outsb lods or jge sbb jge push mov scas cwtl outsl jns fwait mov sub mov popa in jne dec cmpsb stos push rep aam cmp xor into or mov fidiv cmc mov mov push imul cmpsl call and mov out clc jae out lds (bad) cmc mov mov imul daa repnz loop xorb daa dec pop mov ret iret jmp lret movsl (bad) enter pop std not or sbb cmp clc cwtl pop inc push push call rorb out dec stos dec in fldlg2 lea jl shll shr imul stos xor movsl clc stc pop push jle push sub mov in mov sub gs lock xchg pop enter fwait call jne lahf mov int test rcrb mov push push (bad) ja dec rcll add mov push and inc cmc mov push adc icebp cmp mov mov (bad) in add mov pushf js arpl (bad) rolb cmp mov push jae lret loop inc lahf cltd repnz mov mov xor jns je jbe add lds imul mov js dec js mov arpl cmp int3 pop nop xchg loope dec xor xlat mov pop mov dec push (bad) push je pop jg insl pop sahf leave pop loop addl ss sbb lcall adc les insb aam inc pusha mov loop xchg cs nop leave cmp aam add divb add dec and sahf cmp popa scas bound cmp sub cmp test or jnp fs dec imul dec or pop clc cmp cmpsl cmp cmpl loop xchg lock sbb dec push xor mov inc cwtl aam iret adc (bad) adc roll cmpsl mov insb dec fisubr sbb fldcw push cmpb dec mov cli dec mov es in pop push inc test fistpll clc lods jnp negl das cli test mulb mov push cmp sub mov inc cmp (bad) out and xor mov fildll adc pop jno nop jno gs aas out xor xor scas sub jno (bad) mov iret notl mov push (bad) lods add adc iret or cmpb mov jnp xor fucomip xchg ljmp lock lock push add ret test sub fcoms shrl sbb std mov pop inc sub std jecxz je and mov jae dec insb lcall lea pusha and jno mov dec test pop inc inc or inc (bad) in mov (bad) gs mov or xchg dec push cmova ret mov rcrb mov arpl es pop sahf aam scas sbb or add push dec lret sbb xchg fprem1 jecxz lret addr16 das add mov or (bad) insl (bad) out or lock cmp pop hlt push mov inc sub cmovs fiadd ds (bad) cmp inc aam add push pop lods mov sbb outsb and and adc lret mov das push addr16 jp xor in jo pusha sbb jns cmp fwait jae and (bad) (bad) mov cld xchg in or enter mov mov in icebp jns or test enter xchg test (bad) mov mov inc aaa bound adc mov pop jg push imul stos (bad) and in fldlg2 pop and fdivrp add ficom inc aad or cld (bad) jmp push add xchg hlt cmc jecxz xor push std sbb dec idiv stos push (bad) pop inc (bad) sti xchg and dec ljmp pop pop jmp xchg sbb or test push cltd stc jmp adc int out push inc dec xchg xchg pop cmp push ja add jo flds mov aas cwtl test inc pop push pushw (bad) repz aaa cli cld (bad) cmp pop jmp bound sub popa push jae,pn lret div dec sar push add and dec sbb shll and clc push adc push jb lock push push mulb pop (bad) lock jg imulb fcoms xchg cmp push add sarl stc negl lock stos cli imul js mov push dec or push int (bad) fbld repz (bad) pop mov pushf popa imul xchg scas loopne cltd mov add cmp add mov push lods add lods (bad) fldl pop adc mov sub inc sbb mov xchg or mov in stc sbb cmp push and pop inc xchg std mov (bad) mov fsts xor adc in les shl and pushf rclb push in int orb lds sub cmp js (bad) fs lret ret mov xchg nop sarl pusha xchg test aas bnd fs xor mov mov jl (bad) movsb cltd or inc ss enter adc cmp jnp and clc xchg cmpsb int arpl cmp push jle stos stos add loope xor std mov (bad) into sbb add insb add mov mov pop cmp lea cmpsl inc xor mov xchg test jns cmpsb add sbb out add popa dec dec stos cmpsl adc (bad) (bad) testl jnp mulps sbb or bswap (bad) (bad) fistpl inc aam aad jmp or scas sbb inc cmp sub js inc jbe jmp out clc mov adc dec dec adc add stos and femms rorl dec out call jecxz add into aam push sbb (bad) dec cltd int aam or push lcall in or add xchg jg and out enter stc add inc xor add xchg fmuls jo mov (bad) dec lret scas and inc lods or sub jae pop pop mov sbb call pop pop xchg pop movsb jns fsub mov inc xchg cli enter xchg (bad) es xchg dec aad and les sbbb xchg cld pop push xchg push mov movsb scas xchg jne into push jae pop mov pop mov jecxz test add ja inc add in lds pusha dec es cmpsb into outsb pop mov pop mov jo ret rcr repnz mov dec pmulhw mov ds mov enter (bad) cli push sub mov xor mov rcrb pop js push enter push aaa scas clc (bad) ja iret mov jne sbb ja mov jb mov loop out test out les jge mov scas mov adc pop jae jp mov ficoml (bad) stc cmp lret mov loopne fnsave rclb dec aaa and mov lods fwait stc sub addr16 dec xchg mov les xor pop cs add cmp leave mov mov test and xchg xor mov movsb jp test mov call iret data16 sbb mov pop aad xchg hlt adc fist clc mov adc aam push pop cmc jb push mov mov jne push push in faddl fnsave inc xor popa sbbl and clc jb pop jge cld enter stc xchg pop adc adc mov (bad) xchg fildl xlat inc js cmpsl sbb fcmovnb insl out mov leavew adc imul int3 cmp push inc sub out imul jns jp sub mov (bad) iret adc dec pop push sbb in pop pop push test push pop in sub scas push adc sub mov popa push push insb and push mov inc cmpl call sbb in jno (bad) jae iret lcall sahf cmpsl cli or (bad) xlat xor xchg pushf mov sbb xor push fdivl xor int3 push adc test rol into aam adc test clc jge cmp or mov cmp inc insb rcl mov es dec inc shr fstpl movsb inc popa lret and in sbb ret pop mov push movsb mov loope push hlt stc (bad) sbb push jo mov and mov or aam pop or push jae in adc mov addl xchg xor subl fmul cs mov inc vpslld xchg loope jne ss jns mov fnstenv iret fsub mov push in mov and mov std mov je sbb jae xchg fwait arpl pop cmpsb loope hlt cmpsl jl das mov aad scas mov out inc fdivp jb out fsts pop xchg jmp xchg sbb cmp or jge test push (bad) xor dec out insl adc and sbb xchg lods pop jecxz push mov pop jg sub cmp xor xor mov xchg fwait dec (bad) daa push (bad) xchg mov sub sahf push in add loopne xor mov (bad) scas rcr rolb xchg dec xchg push jae ljmp xor rolb in jecxz jl scas pop jge xor shrl scas aaa lcall xor insb (bad) hlt add mov aaa push clc test and and xor popa sub sub cmp sub in rcrl aad jge cmp mov push sbb dec loopne or mov out ds cmp fcomps lahf adc ljmp pop pop idivl jecxz and pop jbe inc cli jb stos inc jb sqrtps pop test or mov test pushl add leave aad sbb pop pop js mov push fcmovu imull test add sub push cmpsb jg add popf mov pop iret rorl ds inc (bad) aam push je rcrl mov ds cwtl push inc aad fwait cwtl or lods mov mov es std js xor mov inc mov inc dec in int js push sub (bad) push push aad mov dec xor mov repnz fstpl call (bad) xor inc insb loope fs push cmc test int3 pushf sbbb rcrl xchg jbe aam cmp push push mov jnp mov xlat cmp cmp ds and (bad) mov pushl xchg mov jp cmc mov mov dec xor add (bad) mov sarl (bad) repnz cld repnz push push mov dec rcrb push arpl rcrl mov divl cmp mov pop inc inc lods mov aaa pop xchg in call add cmp lret sub push xor xor or xor pusha inc sub dec push (bad) sbb into mov mov mov scas test xor in std stc and push cmp stos and mov in (bad) mov mov scas nop js xlat mov pop ret insl enter lods fdivs mov jnp xlat sti push adc sub std dec xor xchg dec cmp int3 sarb in loope mov enter push fmul mov leave push lahf xor out push js dec pusha aad adc (bad) or fnstsw sbb jo or jbe mov push out cwtl (bad) lret or push mov cmpsl aam clc cmpsb (bad) hlt loope jge and xor in pop aam ja rcrb inc repnz xchg arpl js aad icebp or inc add ds js movsl adcl xchg jns mov aam nop loopne fsub push pop sbb out mov pop pop insb cmp ret loopne cmpsl and jl pop mov andb xchg mov out mov inc adc scas cltd fild clc bound mov adc inc cmp popf ret inc mov inc inc inc mov rcrl inc loop std frndint mov call (bad) pusha cmpsl jbe cmp jp gs lock adc jmp loope (bad) repnz in (bad) cmp test cmpsb dec or sbb popf aam push mov jmp dec pop popf lcall inc nop in mov insl out mov psrld insb inc lods jae (bad) pop mov xchg pop mov ss mov and testl pop push and repnz sub (bad) fstpt sbb fsubrl jg sub xor loopne in cmpsl pop pop das das stc xchg outsl inc repnz sar add ss aad dec pop mov das lret mov jb pop test negl pop fmul ss hlt cmp scas xchg pusha jg sbb addb xor popa pushf pop shlb mov popa push xor cwtl xchg out test jl out pop push adc mov loop loopne scas xor ret jl rolb push or dec cwtl hlt test sbb jl mov cmp xor (bad) mov sahf push negb imul lea sbb iret inc fnstsw daa pop adc ss lods not (bad) (bad) hlt pop movsl (bad) lret add jb sub pcmpeqd ss je mov pop mov aam pop cli pop pop in imul insl jnp mov push ja ljmp fisttpl insl fcompl scas out js test mov or cmp mov adc sti jg jo jbe aad lds jle cltd or sub push fs lea xor ljmp ret jb or testb push sbb cli inc pop icebp and inc mov sarl imul sbb cmp roll jg push mov rolb lods cltd ss loope aam jmp lcall or gs or les out dec lret adc cmp (bad) dec aas aaa mov xchg mov mov or and js lock fldenv jo sub out rcrb pop (bad) sbb mov js paddsw in inc out or jne test jle es push jae push insl mov and xchg mov scas bound std test std fnstsw inc out mov test leave xchg ss sbb sbb pop (bad) fldt dec stos rcll adc arpl ja mov mov jnp pop pop icebp xor cmp mov scas stc mov in sbb dec xrelease cmp xor bound (bad) xor cltd mov or fdivrl pcmpeqw (bad) sub jne ret jp fcomps cs cmp addr16 dec inc pop stos jl mov lds dec fst sahf xor js xchg arpl mov les repz inc fdivrp jb push and shrl sbb push loopne adc pop mov dec mov lods subl lret mov inc mov mov pop pop adc cmp std lods in mov xchg jge sub push push std hlt sete out and dec jle call sbb dec cmp negl mov and and mov adc inc insb push movsb mov cmp negb mov push xchg mov inc iret mov loop mov push xchg push sbb addr16 (bad) clc adc jno (bad) pop jbe jo cs jbe pop dec pop mov dec adc add test sub pop sub mov cltd fisttp (bad) lock push pop sbbl lcall adc insb cmpsl lods (bad) gs test addl mov hlt adc mov mov ljmp jo jo mov (bad) and in inc popa lcall mov mov push mov xor jp rorl movsb aas std clc dec push lret sbb shr movsl jge es fdivl aas cmp or sahf dec psraw lock sarl enter cld in jb int3 mov mov aaa (bad) mov cmp fiadd cwtl push jmp nop sbb sbb push (bad) fmuls fcom (bad) push arpl jbe sbb lcall jl inc pop fistl in push jge fsubp push mov mov inc jg mov jmp out mov sbb cmp jno fistl inc pop mov sbb adc dec dec nop jns popf gs mov pop xorb or int3 lret bnd mov psrad daa pop test fidivr push inc mov mov pop pushf (bad) lods jae adc aam jmp out fwait das jbe loop loopne dec ja pop lea inc (bad) mov adc fdivp mov pushf cli lods jae cltd jmp fidivrl popa pop sub inc andb jge add lcall out pop dec mov sub inc jne push xor sahf pop popf mov adc out and dec insl movsb int3 cmp mov inc inc sbb sub push mov mov pusha dec shlb xchg jo inc mov (bad) std mov inc sbb mov inc add in frndint rcl pop dec jmp cmc rcrb shll repnz mov jmp adc push insl rol imul loopne es xlat inc inc push xchg shlb add out inc adc push jge sti test rcrl push (bad) push icebp ds xchg xor mov iret and inc out rorb pop cmp lret mov sahf sub imul dec flds mov shlb in pop jl inc push fstpt pop jae mov (bad) sub or lret add adc int3 arpl loop mov (bad) push mov into jno out lea xchg mov adc pop frndint rcl lds test fist sbbl test rcl insb mov cmp shrd sbb fdivrl sub adc sbb or lods inc mov xchg pop mov inc or addr16 aaa enter push mov out addr16 mov dec leave fdivrl loop add pop out fild xor push (bad) movb dec test or adc jns leave add lods pop inc or mov jns mov xlat sbb sub push cmpsl sbb add outsl fidivrl arpl sahf and or addl pusha cmp or dec aas cmp (bad) sbb aas (bad) fild mov xlat xor fldcw and mov ja pop les inc mov cmp push pop sbb aad cmp pop and adc jp add gs test loope inc addr16 imul add test xchg push rorb enter xchg test sbb mov sub or bound enter push mov out push pop mov dec mov sub ret aaa (bad) fnsave icebp scas rcrb je mov cmc (bad) mov and aam pop enter inc mov cmp mov or xor cmc lds jo mov shl mov je movsl scas fildll xor jae or mov stos test add xor aad or fidivl test movsb sub call mov xor mov out pop jo mov inc xor jecxz (bad) jbe mov lahf and rcll fiadd or test add xlat mov push mov xchg mov leave cmpsl popa xor add test loope dec (bad) mov push dec rol int3 (bad) add xchg xor or xor add (bad) mov xor sarb or fs aad mov adc jp outsb jae getsec sub mov stc dec add jnp shrb add nop addr16 mov mov jl xchg call (bad) notl ret scas mov stos xchg inc decl inc push rorb xchg test mov mov jecxz push ljmp or (bad) repz xlat mov sub mov rcrb daa inc add fidiv shrl ror add push je mov mov inc pop shlb inc jmp ja mov dec mov and inc dec xlat xor jns loopne and jge loopne push out fs icebp inc pushl mov ss scas pusha fstp inc aaa xchg sub out sbb loope pop mov mov push fmul sbb adc add inc in push jno fcom stos mov pushl cli cmp fsubrl js fdivl fisttpll jns loope je std jb fcom fnstenv test sbb ret fistpl sub js (bad) jb fistl jbe or pop xchg stc mov aaa insl rorb jp mov mov cmp or push movsl pop imul fcomps stc (bad) fnstcw out mov jns push mov test mov subl pop mov jns fnstcw and (bad) mov nop cmp mov dec fnstsw sarl mov mov jo sbb scas xchg push clc daa pop mov or inc inc iret push push test cltd jne mov in sbb add (bad) cwtl movl mov cmp movsl (bad) cmp (bad) mull push xchg fmull and loopne jecxz sub mov lods stc out movb pop mulb mov call dec leave shr fsubl cli out mov sub dec fwait (bad) lock inc lds xchg sub cmpsb das jne hlt cwtl lret and outsl mov pusha mov scas jno dec out sbb rclb dec add outsl std or stc mov ret out cmp cmc mov push shll fcom mov sahf mov xchg mov orl stc jecxz add fwait dec jp adc mov inc and pop inc cmp pop push in enter (bad) in and and fsts or push dec mov (bad) sti pop push adc in pop xor inc jb (bad) in test add mov test push pop dec loopne es sti sub jb or mov and ds jno sub sbb cmp fwait enter clc jno jno mov xor out ljmp dec pusha inc lret inc or fmulp inc xor cmp sarb mov mov adc and xchg pop sub jle dec jp insl lret popa cld sbb pop aaa ja scas jle out jns cli sti sarl nop jb stos lahf mov add or in lds cli lcall add sarb jle sbb mov aam inc daa jle mov movsl sbbl cmp xchg xchg fstpt mov clc sbb cs ss mov daa xor imul in pop insl into fcmovnu xlat lods js shr mov xchg cmp sbb inc popa jne adc (bad) mov mov repz fwait add inc outsl ja (bad) sub sub add push mov mov (bad) mov jecxz dec xchg loopne pop dec jp pop test rorl pop es xor pop and sbb add ds sbb and sbb sahf (bad) mov push fsubrl xlat rorb jg (bad) jno cmpsl aad mov (bad) jg,pt jns inc test sbb scas int (bad) jae mov fnop hlt mov inc mov dec (bad) mov test pop mov popf movsb push fxam or mov and xchg push inc add ss test popa notb je cltd (bad) mov xchg popl scas mov push push (bad) dec imul xor pop inc push lods mov jg dec imul push icebp sbb mov cli test sub pushf mov fdiv pop xchg loop dec push xor xchg push inc pop lcall enter (bad) out mov mov jge ds test int add out mov lods jae icebp sahf imul jg and or scas cmp cld ljmp stc and mov mov cmp clc pop sti inc add into sbb mov loope lods fsubrs outsb ret and stc jnp xchg bndldx out je gs mov js rcrb inc cmp push add (bad) (bad) cmpps pushf mov loopne push cwtl nop dec shr clc adc sarb fistl sbb (bad) out push xor pop cmp test xchg data16 loope jb xor out loope cmp jb cmp (bad) dec je test sbb jne push std push (bad) mov inc stos sbb push mov jmp cld test pop mov js jmp mov out dec decb jge sub dec xor aaa (bad) (bad) pop dec ja lcall jb jge sbb in push test mov aam inc xchg stos mov stc mov aam push jle and jg out jle adc push outsl xchg mov in sbb enter sub sti add mov sbb add faddl pop jo sti pop cmp ljmp lcall daa popa push pop or repz push jle or fwait push or push add dec mov insb (bad) dec sbb sub and cmp pop mov (bad) out hlt faddl popa dec icebp lods mov (bad) push enter dec (bad) repz iret push add sub mov dec push pusha sub (bad) aam pop mov mov mov (bad) dec dec sub mov test nop insb push mov int inc adc ss ja insl js test jae int cmpsb jae jp fldenv push loopne roll xlat push adc add jle je jbe ss mov lock jecxz adc fisubl into rorb mov aad jo jno sub mov mov dec sahf pop outsl adc jmp fstps (bad) jmp ljmp popf lods enter inc mov cli sbb mov lret (bad) loope jae add add jbe xor dec lcall leave xchg sbb mull in repnz stc mov shlb push rcr mov jbe adc pop sbb outsl ret mov cmp fsubl jl rcl iret sbb popa movb (bad) aaa int3 inc hlt imul rcrl pop adc dec lock or add mov adc add ret out rcr rcrl scas ja pop std rcrb mov xchg add inc dec mov loop lret sbb xchg mov sbb cmc xor enter rclb push adc and lock cmp les fcomp data16 inc (bad) mov push leave mov fwait pop enter lods xchg xor lret lods stos (bad) outsl sub dec inc rcl popa pop sub inc xor outsb mov mov xor xchg decb gs scas mov xchg xchg mov cmp cltd std mov lcall sub mov cmp into jns sbb dec (bad) mov push inc xor sub mov mov enter mov xchg lret push (bad) inc fadds adc xchg sti cmp sub sbbb xchg rol (bad) shll negl daa jb dec cwtl push jne push (bad) adc mov or inc mov movsb jmp addr16 lahf pop fstl (bad) mov lods cmp test adc leave lea in insl sub add rcrb jg mov mov sti mov jmp (bad) and dec outsb sub test or scas hlt adc stos cltd dec gs addr16 lahf jp lret adc scas cmpsb sub push movsl sub out leave sbb mov inc xor mov xchg scas es enter into loope jecxz mov jne (bad) xchg mov repnz inc inc into xor mov dec test je (bad) stos xchg xor cmp push sbb push mov ljmp mov movsb test push mov or dec ss jle mov mov (bad) jbe or aas (bad) jno dec in fldcw jbe es xchg daa insl sbb imul lret movsb dec cwtl dec rol sub leave or jns fmul outsb std shrb and push aam cmp fwait adc (bad) repnz and fwait arpl sub dec jns (bad) mov xor pop push pushf sarb decb test dec out jo or or in test dec jl adc lock in repz call jno test fist (bad) mov pop cmp cmp rcl inc (bad) sbb cmp fldl adc pop jno pop inc mov dec movsl inc fdivrl add mov sub into inc mov movsb mov and cwtl aas push (bad) cmp dec fstpl js scas int3 in arpl and shll repz pop inc pop xor adc insb or fs sahf sbb lock cltd mov cs jb mov mov pusha cwtl andl xor sarl mov popa lcall push push sbb mov cmp rolb jg push (bad) pop mov in or jb dec add jnp jns jae addr16 xor jns cmp push sub outsl or mov dec aad sub loope (bad) sbb xor test adc movsl stos mov adc jae fnop into push and out pop (bad) mov adc xchg jnp insl stc or sub mov push pop pop pop std push push xor out js and mov rcrl inc and pop jo pop dec push pop lret jle stos (bad) or xchg pop jnp,pn insb cli sbb lds mov add testl das jmp cmc int adc mov push dec aaa add lods lea daa fnsave mov cmp lcall addl nop fsubrp mov sub mov data16 push lock movsb sbb jne sub and int mov dec lock fwait mov dec adc pop xchg or mov dec push fcomps pop or jns xchg fiadd pop dec data16 fs ret (bad) out pusha cwtl xor and pop xchg jmp aaa test push aam sbb mov insb (bad) mov arpl mov hlt test arpl jo,pt je andps xchg sub xor unpcklps dec jle shld pop sbb push gs ljmp mov test fnstsw pushf mov and mov jnp addl mov je stc pop gs stc push aad dec pusha sbb das pop data16 imul and ficomp mov inc mov lods xchg inc xlat mov daa sub les loopne mov js sti jae pop inc dec ljmp xor std aad jl push push out push stos pop push mov xorl pop es add xor lret jge daa push jnp (bad) cwtl test inc jns mov fucom (bad) pop xor sarl pop (bad) jge fwait clc fsubrl or cmpsl stos push adc mov add out or xor pusha cmp (bad) sbb daa add cmp cmp repz inc xor loopne rol sbb push and add js pop out adc mov jl cli adc mov push pop dec enter js cld sbb js cmp sub call jg fistpll and cmp jge test pop sbb data16 dec inc lds xor std push push mov stc xchg pop jne leave notb mov inc push pop fwait insl jae dec scas push or outsb ja sub sti mov mov addr16 imull imul cld cmp loop jnp aaa test jmp pop (bad) fcmove (bad) xchg bnd loope movsb movsbl loopne (bad) sbb dec lods or dec sbb mov sbb lret jmp mov dec arpl sbb fadd (bad) dec clc cltd ss mov iret mov jb sahf xchg (bad) xchg fbstp nop movsl pop push adc (bad) hlt fsubs cmp cld scas pusha push push push mov add xchg lods add pop sbb push inc ja arpl (bad) push faddl nop lcall inc mov in aad icebp je icebp mov or ret mov rcr in repz mov adc lcall mov shll aad mov js mov (bad) xchg adc out jnp jo repz aaa xchg shld sub lret inc hlt dec (bad) call push movsl jg adc gs or sub pop mov push js stc loop jmp mov dec rcr jp aaa xor les pop in pop jne or sti or jp inc out dec into push ret std in aam jbe in cmpsb ror push repnz mov cmp and test aad mov int test lock cmp loop inc xchg aad fs lret add loop fstps in dec scas mov pop push cli fnop pop sarl cmp fsubs mov sbb mov loopne insb icebp mov adc mov cmc jbe into sub mov in cmp (bad) cltd pop into fs rorl add sub push imulb push xorl lret mov adc sub xor loopne push xlat lods cmc inc jg add popl and xchg int3 push clc sbb stos leave xor push add push icebp jp das sbb insb push jmp pop inc ja adc arpl rcll cmp mov dec sub jne lods mov mov outsb aam das aaa stc sbb inc insb stos mov xchg push add aad cli jp cmp dec xor push mov add fdivrs jns (bad) insb push stc sbb scas mov fisubl jg or ret scas insl into mov mov cmp dec jne mov add push mov dec push sbb or mov aam inc inc (bad) xor mov sub lds lahf cld movsl sbb sarb or pop xor inc (bad) pop mov loope jge mov mov stos add mov xchg xchg mov jl mov push or push mov push cmp inc mov popa es ret cwtl test divl inc fnsave test sub js mov cmp je push xchg (bad) mov rorl sbb jno pop push out mov fild add loope mov imul repnz mov add jg popf inc xchg imul or jns xchg cli and add arpl add jle add outsl cltd (bad) xchg enter xchg mov sbb pop aad mov mov call (bad) shrl ret sar and stos or insb je in in in mov cmp mov int shrl jo rcrl frstor inc mov outsl sbb fstpl dec jne mov in ja in jb jmp pop jno jbe shlb outsl xor xchg jecxz xor add adc lret adc cwtl and cmp out cmpsl dec (bad) cmp pop jns movsl lcall push js xlat mov ja rorb adc mov nop xlat loopne pop push scas fwait sub sub and fnsave and mov test inc jle xorl mov repz cld lcall or xchg xchg roll push pop pop jns loopne insl adc into and mov dec and cmc mov mov mov daa (bad) icebp das xor mov pop add jle test shr inc bound jecxz and bound dec jno popa mov push pop (bad) je out jl cmp aam ss stos sbb mov rol xlat mov mov aam (bad) repz scas out jge in sub iret call lock sbb ficom cld mov cmp push mov adc test or push fisubr push fsubrl mov lock stc mov hlt inc add clc test pop lods adc or lock call pop sub fild push stos jmp rorl cmp rclb sti adc pop xor pop fadd jle push add and outsb mov add stc jne pusha mov mov xlat lahf mov cmp mov fistl xlat push mov popf push or (bad) mov and fidiv xor ljmp adc into or jns pop add iret jl test cwtl (bad) rcl inc ss and jg mov add out mov imul xchg push sub loopne,pn test fdivr adc jecxz mov (bad) sti js test inc jns pop add sahf cmp lods mov mov (bad) cli xchg cwtl jns lret out mov je xchg insl rorl xor and pop cmp jno fcomip lds (bad) mov pushf fisttpl pop je dec mov pusha push insb lret add jecxz adc dec cmp mov pusha mov sbb mov sbb and repnz xlat sbb data16 ss divl out js inc mov sahf repz jae inc aam cmp ret ss sarb cltd (bad) push jp imul (bad) xor pop xor lods inc neg sbb in sub fildll lahf in adc jecxz into jbe add sub ret out mov ss push stos loope mov out sub movsb push mov je jle xchg push sarl pop into fldenv nop jae daa cwtl lods mov fucom jne xchg les cmp sbb mov adc out sbb shl cli mov divl cs push popa pop pop hlt push cwtl das jmp pop sbb clc mov mov lock mov mov cmpsl jae rolb fs pop loopne mov jns jae inc dec mov stc mov and out arpl add out jo jne flds dec and fwait inc inc movsb scas rcl inc jns loopne mov int ja cltd fdivl flds lea sbb ret or jae fistpl jmp daa mov or aas push push ror (bad) sub jge cmpsb rorl aas sbb test lcall (bad) inc sbb push nop cwtl mov sbb imul out pushf adc cmp push mov lock sbb push call repnz sti cwtl in rcll mov lcall inc push jle sarl mov push orb xchg lea gs cmp fnop addr16 mov data16 into push loopne rcrl dec pop clc scas pop mov mov cs fcom adc arpl in leave stos jno insl arpl jmp dec inc sti mov adc adc jne ficomp test sbb xchg adc sub pop pop fsts add pop fistpl cs arpl mov pop (bad) idivl lcall into xchg mov ss dec imul mov roll imul fiaddl add icebp dec fistpll push mov fsub sbb or aad repnz cmc mov xchg dec lds mov pusha and cmp imull dec adc jb xrelease out pop fisubl push lret repnz lahf push and mov adc sub inc lea shll cmp stc add adc imul insb and jmp and or lret pop xlat xor lods ljmp jge mov aam enter inc sub push je sub aad push outsl in mov out xor stos pop test cmp or add int inc pop test pop arpl pop es hlt fcos insl aam popa test pop cli js push shl pop fisubrl push pop rcrl (bad) jne out pop sarb jns mov pop and nop (bad) fsubl andl clc xchg outsl jle xchg js pusha ficom cli iret add jno std data16 out addr16 pop shl xchg pop push rorb mov insl cmpl mov cmp inc (bad) jmp push shll lds cmp nop sbb or fistp cltd jb int3 xor xchg xor (bad) out lods js inc and fabs pop xor dec add sub adc pop inc sbb xchg les and and push test stos jl out push imul pusha arpl int jg mov das fs push mov (bad) repz scas movsb or add fnstcw mov push das ret push sti js inc mov push sbb dec pop xchg fimul inc push pusha pop cmpsl das xlat cli mov cltd scas roll clts lods push mov mov xor mov test sub and mov and hlt out repz test in cmp push or or test cmpsb pusha sbb pop je in mov push jne inc pop int pop dec mov insb fbld pop fistpll scas das ja push gs dec lret addr16 les mov jne int3 ja mov arpl loop lahf add pop stc ret cmp pop lret xchg cmc xlat sbb clc nop/reserved movsb (bad) pop mov fistl incb movsl dec lret push call mov lret inc push and inc push outsb lret arpl add int3 xchg pop cwtl clc imul fimull aad cmp data16 adc daa out test mov outsb sahf or repnz cltd repnz pushf jae in cld ljmp sub xchg xchg pop cmp mov pop daa popf popa int3 cmp sbb cmp pop and mov ficomp fstl mov pop addr16 cmp adc xchg loopne repz insl jns sbb testl mov and test js ret arpl movsb push hlt out push pop in xor imull cmp cmp adc int scas mov mov or push sar sti insl sar shll xor xchg add fnstcw jo inc jb js pop sub lock dec xchg cli jmp lods rcl xor nop popl cwtl cwtl lahf push cli mov shrb pop pop fadds inc ja mov cmpsb xchg imul push movsl sbb sbb inc lahf pop and cli jne sbbl mov mov xorl cmp cs loop lods fidiv lret in stc mov pop lods adcb pop mov and mulb or sbb ljmp jae stos mov std sub inc ljmp repnz popf jge jne add push adc jno std mov push ret lret test imul inc aad cld lods popa cwtl lock or call mov push xchg mov mov inc push jno sbb mov cmc jne dec es aam push add mov adc sub dec push xor clc lret inc insl mov std dec sub sti dec mov popa aam fincstp rorb xchg mov mov jns mov out inc pop jb inc mov mov adc divl (bad) jmp dec shrl outsb negb fwait pop ficoml push pop fwait out mov pop dec add pop (bad) out dec inc add dec pushl push jle rclb pop daa mov fdivl push inc scas sbb adc xchg (bad) or cmp repz cmp sbb or popa shl inc cmp inc mov push sbb push lock (bad) aas dec inc (bad) cmp clc jp mov mov adc mov stc enter test jecxz jl cmc lret add jle and cs stos mov jne cmc sub sub push sbb sbb dec jge stos int3 scas js aam scas stos sti mov mov sarl lea xchg ss xchg pop mov xchg mov repz cmpsb repz mov cmp push sub negl jbe aas mov mov cmpsl outsl xchg fnstenv fdivl push mov aam push sbb fiadd cmp inc mov fnop fcomip or lods loop mov adc loop vphaddubw out shr inc lock cmp inc clc xchg cmp mov xor test or test inc fsts aam pop mov push mov and sub add add xchg cmp pop (bad) out (bad) mov fdivrs push inc mov push jns sbb notb and popa (bad) aaa sub mov sub xor sub jne ret xchg pop push push ficomp je movsb dec call mov add fimull mov in mov mov pop or sbb int pop push dec adc dec lret xor push xchg aad xor mov (bad) scas cld add movsb mov xor (bad) mov jnp inc ret jmp inc sbbl call mov pop push lea cltd pop jmp dec (bad) hlt xchg out lret popf dec outsl stos movl mov stos cmc hlt ljmp mov dec push push inc dec test (bad) in inc flds je fadds nop arpl xor pop xchg push fistp pop jno or les jmp inc inc lds inc jbe or mov (bad) xchg cmc int3 pop mov leave push dec into sub aad xchg jne repnz sub jb mov hlt stos in push cmp ja mov or inc ja imul inc dec ficompl push adc dec cs xor sub mov test addr16 push cs jmp movsb fistl mov adc js mov sbb push (bad) push je add cmp daa dec div scas das icebp sbb inc sub mov in sbb mov hlt inc stos out jl jb cmp adc add dec xor sub add clc push stos ja addr16 dec jge xchg fisubrl mov (bad) pop daa pop xchg jnp dec sub popa jne and stc into jp mov loope xlat fcoml xchg in scas push fwait jne sbb hlt (bad) xlat mov outsl pop (bad) mov inc movsl sub bnd pop outsb aam mov mov mov in dec jg (bad) cmpsb mov xor mov stos xor into inc sbb xor inc push call in (bad) sbb iret jge daa push stos aaa nop inc mov cltd push in dec pop add jle imul push push pop (bad) repz shl out cli add div push jl jmp ljmp rolb mov leave mov inc dec leave arpl cmp dec in loopne js push pop mov mov inc test dec nop fiadd (bad) cmc push jp pop lods and push add ret mov dec jae jno,pn inc push adc pop (bad) cli pop nop jmp xchg fisubrl mov jb xor push xor sti or inc loope xchg insb je sub sub adc inc push jns jne (bad) xor dec and xchg sbb cmp roll xchg cmc xchg jg xor adc cli jmp js cmpsb push cmp dec and ljmp std add fwait into xchg inc int mov jno fwait and lret dec pop mov insl std jo test fisubr loope aas insb add add xchg (bad) call sub and and mov fs iret mov sbb sub push enter push pop aad adc jp mov dec sub push or pop pop xchg rorl movsl andl je roll lcall sbb insl push jno scas (bad) lea cmp pop lods or scas enter mov (bad) lods dec fst lods sbb das das shrl aam sub adc xchg pop cmpsb push xor lods loop mov movsl ja imulb or cmp and rorl sub mov arpl cmpl sub fstps inc sbb mov cmp pop mov and cli jo (bad) or iret mov mov jne stos or dec negl dec es xor mov jl xchg xchg sub sbb mov dec adc scas mov shl cmc sub xor and jbe inc or cmpsl icebp (bad) inc shl mov sbb incl adc (bad) movsl add setnp adc nop jns out dec in mov pop movsl sbb inc inc ja pop mov jmp xchg lret push cwtl sbb jmp or xchg and ficom xor mov fsubl sar sti pop add rorb ja (bad) mov lock jle adc add jle imulb push mov push hlt mov in and xchg add loope dec es int (bad) les (bad) xor fsubrl popf pop rorl cvtps2pd fcmovb pop push cmpsb stos dec ja push pop iret xor roll mov xchg jg,pt fcmovbe xchg icebp ffree xor ljmp or or mov std or pop imul sbb in mov mov mov stc pop (bad) std push mov mov mov (bad) jp push inc cmp imul xchg adc jne scas jl std cld pop ret add push mov mov inc lods mov add adc cmpsl sbb cmpl (bad) pop sub and cli jb and cmpsl pop (bad) fstpl ds das fstps xor enter adc cmp int3 jb ds mov aaa (bad) sub dec mov pop lcall xchg imul mov xor in mov sti mov mov push mov or push sbb adc (bad) (bad) push repz dec jp dec xchg adc gs js bound or adc xor sbb dec fcoml aas dec lods sahf mov loopne push neg push mov cltd pop es push push mov push and popf loop dec (bad) push (bad) adc inc es (bad) fbstp sbb sbb xor popa jbe mov in fstl pop add xchg jg add pop adc enter loop stos jp mov jns mov dec xlat xchg loope jns lret outsb xchg out jns pop je adc jns imul inc adc push (bad) in cmp push arpl adc jno pop pop fcompl sbb je fdivrs lock ljmp ljmp stos dec mov mul adc xor and add int scas pop stos xchg xchg mov divl mov cltd jns fdiv ja in jo call sbb ss pop cli in inc (bad) jo rorb pop loopne std insb in dec fdivrl push imul clc (bad) mov dec sbb mov jle lds popa (bad) jno in int sti (bad) repnz pop pop sub or in das imulb idivb faddl lods pop cld lods mov insb aad daa cli sbb lods scas adc dec mov out std scas popa xchg cmpsl sbb imul or ficompl and jnp mov sub shrb cld sub jb lea pushf std push stc aas cmpsl test hlt jecxz arpl scas adc ret bnd test push add mov push sbb repz xchg jp jbe cld jns lcallw xchg xchg in test xor mov mov pop js inc pusha add addl andb push nop ret dec adc mov cli mov sub aam fcompl xor mov rcll adc cmpsb stc lods sub nop or jbe push dec xor sbbl imul pop mov sub mov push shll sbb mov mull mov js ss sub push mov xchg jp lret jnp cli ljmp mov imul loopne cli pop mov ja insb cmp and mov mov mov inc bound inc js adc pusha out into adc (bad) fadds fucomip fsubl push pop ficoml daa xchg xchg jnp xchg iret push lahf add jno cltd (bad) stc push arpl jg pop mov or mov pop sbb mov clc xor sub pop icebp and sbb adc fwait lods sbb mov inc lret cmpsb xchg fldenv (bad) pop (bad) fstpt pusha mov mov les bnd clc add jo pop or pop jns xor test jmp fist sarb les into mov and and repz addr16 cmp or faddl adc mov cltd jo sub dec sub fdivrl push (bad) mov scas lods mov cmpsl scas xchg imul pop sbb xor enter sub fwait mov loope jns pop mov sarl mov in pop stos mov add jg sahf xlat xchg dec ja mov xlat (bad) xor cmp gs (bad) mov cmp lahf mov (bad) std rorl shlw lret notb mov dec call popa add stc mov dec xchg ljmp pop sti jge pop sbb rcl and in (bad) call leave adc dec fisttp mov pop sbb out cmpsl stos inc scas add loop xchg jns call dec mov mov jp pop push lock xchg mov and outsb in mov xor mov and mov fldt xchg dec xchg std xor ret mov jmp popa into cmp cmpsl test mov (bad) mov call sbb dec pushw dec outsl jae jno decl adc jnp mov sub jb movsb loop sarb loope fwait sbb pop cmp jb adc mov sbb iret rcl fxch sbb aad iret pop pop mov test push orl shr cmp fstps scas imul jno inc loopne jl es lds jp lret adc ja scas inc jae addb call movsl and mov sbb cmp push je je push fidivr xchg enter mov xchg inc add mov mov pop sbb hlt out inc lds int3 hlt jg xor loope mov mov mov fbld mov sahf push icebp jns inc lret fnstsw scas scas lock in pop jmp cmc dec jg ret or stos mov stc (bad) ds imul push jo js mov xchg mov xor ss fcmovnb incb inc popl out xchg in jl push pusha in (bad) xor jp les adc fidiv jge jne inc jmp pushf cmp repnz mov rclb dec adc cld add adc lods sub push jg mov inc sub into push popa pop add out stc fdivrs test cmp ljmp fmuls mov fldl adc stos xor jb cmpsb pop inc shll dec lods popa push pop out repz pop popa jmp sbb pop test scas fcoml mov add lods mov rcl ds push cmpsl mov out sahf jp push imul addr16 lret mov xchg xorl int3 aad shll (bad) adc adc pushf dec cmp sbb mov or in lret or adc (bad) aaa pop in outsl frstor cmc and sub lret lret mov sbb sub jl add mov stos arpl shll in pop lcall mov push mov out jne mov aad rcr xchg popa xchg cltd cmc mov push int3 (bad) imul adc sub test add (bad) adc movsb dec sbbl pop sbb xchg imul imul stos ficoml cmp jo jnp dec (bad) fisubr out push mov xchg notl stos inc adc pop aam mov dec es add enter pusha sub loopne ficomp xor jno f2xm1 (bad) pop cmp cmp or in fucomi add std in fdivl aaa adc jo adc add (bad) jne jno push daa add xchg test mov jne xchg push xorl push lods sbb stos push adc aaa ds movsl in mov mov push ljmp jns pushf adc xchg inc hlt dec jo push mov sti dec test fldz dec aaa cld jae cmp and aad repz fidiv xchg pop repz jns cltd xchg mov bound out cld (bad) loopne add callw jne pop mov ljmp fsubr incl in in (bad) ds mov sbb sbb clc loope cmp outsl imul and push xor cmp je iret add push es bound pop sub sbb pop xchg inc push mov push lcall cmpsl add cli in sbb or adc idivl mov xlat mov movsl inc (bad) loopne inc rorl sbb in decb out mov jmp jl pop imul pop in sub out xchg fcoml push aad ja lds xlat pushf sahf push xchg inc push dec fcmovb jae xlat test inc push aad mov xchg sub sbb mov lcall jecxz lcall scas mov das or ret les mov cmp lock cmpsl or lods (bad) jno cltd fwait adc inc out repnz inc pop adc lods adc jmp mov mov add push es pop jle pop std and jecxz in ret fwait arpl cmp shlb loop sbb jg or loope das repnz jmp dec call inc pop mov clc pop nop stos jne cltd push jmp adc xor pop push pop fdivs popf mov cmp (bad) call daa push sti push (bad) jae rcrb adc mov push (bad) into xchg je mov sbb nop add data16 push ret dec lret mov mov jge lock pop cmp dec aas pop adc insl add or push cmp cmp pop mov pop out sub adc and cmp lret jmp mov push je popf movl mov jmp lock adc out jp fistpll xlat fisttpl xor loop mov mov push inc xchg jns ljmp test and int les stos fwait push add sub mov (bad) into std or inc sbb xchg push sub mov push push rorl push mov xor lcall fadds xchg jge daa inc jno mov pusha xchg push pop sub roll jmp movsb insb clc aad mov xchg inc or in xchg mov inc (bad) push shrb aam fsubrs push xchg push or add add lods cmp pop flds loope dec subb mov jmp or into dec (bad) xchg enter rcll pop (bad) add (bad) jns and push add sti fwait cmpsb inc outsl (bad) mov rclb pop js (bad) jge push fildll imul test pushf cmp push cmp outsl pop or mov jle add sbb add test add pop les lock aaa cmp addl and insl scas in mov imull in loop mov hlt jl jnp xlat test add jb dec jo js fidivrl pusha into in fs cltd mov jno mov add call imul fs mov shrl subl cmpsb jle adc inc push jb mov test aam jle mov add mov (bad) loop mov pop xor std push iret ficompl shll cmpl shrl jge adc pop pop fnstsw dec dec add and sbb pushf mov or inc mov inc jmp pop daa jo cmc stc jecxz mov (bad) js fcomip add pusha mov leave pop push adc movsb lods pop mov push jnp clc rol cli sbb or mov mov or sub mov dec (bad) rcrb insb ljmpw hlt mov sbb mov inc and inc or mov movl rcll cmp sbb sbb mov adc cmpsb imul mulb call lods cld outsb sbb mov xchg cmp and xlat out ffree pop mov jecxz dec lcall push mulb fistpl loopne mov test mov add clc push inc (bad) repz cmp dec andb jge mov sbb add adc jo inc mov adc adc mov mov pop cmp push inc jno stc pop dec adc add inc mov cmp inc jns jle or ds in sub pop sbb mov out pusha loope inc (bad) and pushf mov pop cmp xchg push mov and cmp gs roll sbb dec and mov ss notl dec scas cmpsl pop push jno or std cmp stos sub push or sub mov sub jp xchg mov sahf or lods jle or stc je (bad) ja stc aaa pop insl or xchg adc fcmovnu xchg sti ja mov js (bad) aaa mov stc call call lcall jecxz dec mov pop (bad) xor (bad) and clc dec jns mov jno mov imul pop sbb inc sub rolb push clc xor jle pop jecxz std ljmp sub andl jg jmp loope and and xchg ljmp ret out lods (bad) imull outsb mov into out lret pushf mov test sbb xchg stc push sahf xchg mov lods fstpt cmp gs scas xchg inc sti xchg test xor clc or sbb cmp inc into outsb fistl rolb or cmp lcall cltd cmp or inc cmc inc cltd push dec inc arpl pop (bad) scas mulb fs daa std aad out into fadd dec out pusha cmp fs push lahf jns push test push repz adc insb mov jo sbb fdivs push pop je push push gs loope loopne (bad) ja int3 cwtl mov xor xor pop sbb mov mov inc push mov movsl cs clc dec mov mov dec insb ljmp mov cmp sbb jnp scas inc or xchg pop lcall cltd imul sahf sub mulb outsl or push push mov shll mov xchg pop sub mov mov and jbe add add pop dec enter xor xchg jo repz pop mov xor pop je adc or add mov xlat adc or pop ss lock mov add (bad) stos mov xor imul cwtl aam push es (bad) sbb and push (bad) loopne (bad) aas push xchg sbb mov movsl push fcomp and mov repnz xchg mov pop dec mov ja sub lret mov outsb push pushf test push mov sahf imul inc sti aaa roll loopne movsl (bad) jb ror mull mov mov mov ss repz xor cmp test sbb shlb cld push and loope daa sub (bad) mull (bad) outsl in xchg sbb or inc mov cli adc adc in jns mov dec push out fcoml pop xchg insl xchg sbb sti xchg iret mov mov test inc mov xchg adcl js stc scas das cmp xchg insb and (bad) mov xchg icebp pushf jno mov inc lcall pop loopne adc jecxz stos inc sub (bad) push inc adc xchg cwtl xor jmp pop hlt enter (bad) pop shrl and popa mov cli push mov inc ja in mov icebp je popf sbb push push arpl xor int sbb cld test pop mov cs (bad) gs jb cmc (bad) and push xor and adc or sub scas inc add pop jge hlt mov add add dec loopne out scas or jmp mov scas mov pushf aad mov inc dec (bad) adc jp cmpsb cmp xor inc and sub dec out jno test fiaddl movsb push xchg popa jns jne movsb jmp push js fwait call push popa dec movsb jno ret sub push pop xchg mov jmp and xlat dec ret fbld mov orb push mov out fidivl sarl adc loope rcr jle jne divl mov dec adcb add fwait lods pop test ret adc pop mov (bad) mov jp out popa pusha jne imul add (bad) mov pop arpl and lock mov mov (bad) daa dec shll push mov shll aad push cmp (bad) push arpl push mov pop adc scas mov (bad) imull sbb or pop aas loop stc fsubl jecxz scas rclb xchg (bad) ret cld repnz mov and and inc ret loop push inc cmpsl mov arpl in jb fbld ljmp sub mov pop jae push fcmovne into inc add mov mov inc xchg int3 push js push mov cmp aad roll popa mov jmp lods dec cmp mov xchg iret or cmp add sub mov std incb add aas mov jb adc or std sub icebp fldcw cld cmc pop push fbld adcb cmp lock push dec inc push ficoml pop arpl popf es push lods adc adc sti inc fsubp mov pop mov mov cmp add push lods mov shr sub call dec rorl xor test stos xchg and js adc xchg movsb into push lahf sub and cmp (bad) movsl mov pop xchg mov fisubrl arpl sti sub stos mov punpcklbw sbb nop adc lock mov xor or or inc add or pop add mov dec lods sbb mov es sub sbb sub fs out and ja xchg es jmp inc test lds pop stc in les sbb in lock xchg (bad) bnd mov inc mov call repnz push or addr16 inc loop imull push (bad) gs push mov sbb mov xor lcall les ret inc jp insl jb mov fildl mov mov jnp sti addr16 cmpl das mov fdiv test jae in loope in mov jns popa cmpsb nop and ljmp jnp and mov (bad) call test lcall inc les or pop fisttpll inc mov (bad) lods mul nop (bad) jp,pn push ret mov cmpsb mov aad in bound ja jmp jmp mov out in xchg push repz ror adc mov fcompl test jne mov rcrb out cmp or mov xor xchg sarl lods and mov inc cwtl fs fisub or lods push push mov adc cmp push mov rcll leave jns aas nop inc inc repz in ret outsl push push lock mov jp mov adc imul daa jnp dec xor fldl jne fldenv add inc mov (bad) jb mov dec mov aam adc lcall jnp mov sbb rcll xor incb mov loopne mov adcl in sbb sub aas pop xor xor jmp popf push sub repnz popf ljmp hlt xor adc out inc dec imul js jp enter sub inc mov cmp lret addr16 jae (bad) or mov movsb cmp data16 fdivr cmp xchg cmp push loopne sub xchg or mov clc jns (bad) icebp mov push lahf jno jns or adc hlt xor inc js cli sbb xlat es adc in mov rcr jecxz push inc mov in je mov js data16 scas push test mov dec jns pop push jno ja insl jb pop mov mov int shll mov ret sbb dec pop inc mov sbb in xor mov movsl pop inc js jl pop sti jle ret (bad) mov scas mov cli repz js push inc mov inc lock mov push popf sar xchg add pop inc addr16 aad repnz sar mov gs imul imull mov push xor add or cmp out int xlat loop mov andb scas mov and inc sub jns stos ret loopne or aaa test sub mov idivl scas pop sti sbb sub insl ljmp in jo sbb mov sbb jp cmp and cmpsl ret in ret push dec repnz call mov push xchg sub (bad) push add and ja sbb mov push jno mov mov cli test cmp mov or pop pop pop dec test (bad) negb xlat cli stos enter sub cmp push fcoms movsb jnp lret inc xor nop xchg add lret test pop jo push stos dec cli sbb addr16 ret adc xchg ficoml jp adc fcoms cmc or fbstp inc das ljmp rclb aam jmp out pop sahf (bad) sarl and and (bad) xchg add cs stos push out je cmp jp mov mov popa xchg sbb xchg xchg sahf pop add mov jbe,pt fs out dec dec adc ret in jne fisttp lret inc leave fstps cmp mov dec cmp test mov popf push adc dec fstl jno arpl test insl aam sbb ja imull in jne into push ja jbe cli (bad) pop xor ret pop jo adc sub mov xor fwait bound mov sahf int fidivrl mov jae lea mov (bad) jmp loope fnsave mov in lahf dec les cwtl lods mov lds pushf push gs bound repz mov inc inc inc stc fs jns and push mov outsl not ret or inc mov push push hlt add divb inc test xor cmp sub lea daa cli jb sub inc movsl sbb add mov jnp push faddl repnz jno inc (bad) repnz jb jmp sub out out test sahf jl bound or xchg pop int3 sbb or in mov (bad) sbb cmp in push add fsubl stos cld fwait push push loopne mov lock (bad) push jae jae mov mov cld cmp jmp in fimull pause fcoml add and fldenv jg xchg adc cmc dec xchg mov push std daa jl sbb mov sti rorl or xor daa and insb into jge jbe js sbb cmp mov pmuludq rcrl (bad) mov dec jg leave adc and jecxz (bad) (bad) xor add jae cld std cmpsb add adc arpl inc fnsave mov fdivs lahf dec xchg push xchg sub sti push in jmp jl sarb and aam out and inc or mov lds dec imul mov xchg test pop pushf sub in clc mov std call xchg in dec pusha aad add (bad) ja repnz cwtl xor cmp dec sbb js jno in popa push dec or in or push sub gs dec arpl push sbb push lret fisub lds js inc xchg in jecxz sub imul flds push cmp sub cwtl mov mov push and insb jl mov pop mov mov dec add adc repz pop clc stos sub add shlb and pusha mov data16 call add sbb or xchg (bad) inc dec stos mov imul pop jb popf dec ret sbb sbb in mov and push out sub cwtl and xor out lds pop (bad) std cli ret mov jg mov fldcw lock xor sub mov mov xor je and adc loope push xchg mov lods add sbb fstpl cmpsb mov pop daa (bad) xor sti es lds das in or aaa mov fcomps xchg mov lea push sarl mov mov push lcall and in jb (bad) inc xchg add std lahf add into popf mov mov jb fidiv outsb inc in repnz sbb ret xlat leave fstp add sti push or cltd fwait xchg mov loope dec mov imul into jno je es pop jg jl push popa or (bad) in dec test test jge lahf lock sbb sub inc add pop jns dec icebp xchg rorl jb adc movsl loope fsubrs js xor lcall push mov xchg repz js sbb ss adc add xchg push xor pop movsb push jns pop into in sbb scas push inc out lods iret add jb in jns sbb das cmp fcmovnu or decb repnz pop xor (bad) sarl add mov movsl dec lretw add mov mov push inc fisubr sub adc test pop push inc xchg iret out test or inc cmp iret (bad) fldcw fcom jecxz sbb repz pop jge jecxz int mov adc sbb mov mov add mov pop loop xchg shrl push mov ss cmp cld jecxz add push inc cltd ja inc bound js jns jl fdivrl iret out pop je rcrb je inc fdivrl xchg pop loopne and mov aad mov in ljmp adc std das out pop sub mov jo js pop cmp mov mov inc inc pusha std out cli push jb mov lock aad pop push loopne cli nop je test (bad) cli xor or and sarb jb faddl and negl icebp lods push pop sub mov int3 stos mov nop jb sbb sbb jge ds inc hlt xchg cmp sub mov clc mov dec repz (bad) cmp sbb sub dec xchg jne loopne in dec nop mov mov push sarl gs xchg dec pop movsb inc cs mov pushf sbb jle faddl out stc jecxz push jb mov cmpsb imull dec add fwait push loopne jb ljmp push jnp ljmp insl sub dec cwtl in dec push sbb sbb jnp cmp lahf stos popa mov mov sub cmp mov sti push sar sbb repnz popa dec lcall insb lods xor adc jecxz lea jne jns push insl or in lahf xchg push int3 mov mov adc fldl mov adc aaa pop outsb sti sub fstpt adc cmp dec aad mov fist add scas hlt insl push xchg push adc int3 jbe jbe inc xchg out ficom adc insl dec dec sti test dec in inc jle pop inc clc pop hlt (bad) jmp xchg (bad) iret add lret in mov ja movsb add out aam and jl gs pusha mov popf push jp into rclb sub lods fist or cmp (bad) jno scas stc lea or fisttpl mov enter cli int pusha scas insb pop xor dec aam shrb xor shl jno loop jge add call cmc movb mov jl in lods adc adc fdiv inc (bad) je mov mov jno lret rolb and imul ret ret cmp imul (bad) push or lret sbb dec push push int3 rcrl repz in and aam jge dec inc aam dec (bad) xchg mov mov xchg shrl jl ret fistpll leave jno popf ja mov push cmp out ljmp addl ficompl mov std fbstp lock imul pop rorl cs ret push cltd inc xadd pushf loop inc cli or mov ret inc push sub jns jo sbb dec rclb std inc rcrl ja xor shr nop out ss dec loopne scas lock dec out into inc xchg mov xchg mov dec jge or test mov in popa mov dec sub xor pushf mov lock test mov pop push clc test outsb dec scas xor lcall insl xlat xchg and lods cld adcl pop loope lret popl aad mov pushf pusha lea jp repnz psadbw in out push (bad) pop nop shrl repz dec lock inc and fldt decl push mov xchg push sbb imul mov xchg loop ror popa rcrl jns lds mov mov nop mov stos jle fsubrs repnz push or mov addr16 xor icebp jle std adc hlt inc adc mov insl mov (bad) mov mov xor aas sub out mov mov inc mov push sbb and stos sub mov lcall fwait mov mov sub mov repz jb xchg mov inc loop mov push cs sti adc imul adc fcomip cmp jnp mov xchg dec inc ret gs lret sbb sbb stc sbb add pop mov std pop lret cmp sbb aaa and mov aas mov scas mov sbb lret push popa into out xchg xor cmp out rcrl imul adc sbb hlt popa push ljmp outsl inc jno push push repz dec aad mov mov pop aam xor cmp adc push repz push mov (bad) sbb stc icebp push mov loopne cld (bad) mov fimull loopne inc mov addb mov push or ret mov nop in xor leave push nop (bad) ja sub mov dec sbb and add and inc jo cmpsl popa jg test and jg hlt lock sbb lods mov fist push lds movsb int3 xchg jge out rcrl sub xor pop loopne jno and xchg flds xchg outsl (bad) cs pop pop ss jg pop mov int3 ret jo shll js or outsl in (bad) mov pop data16 fstpl sarl je sarb outsl in (bad) in (bad) in ljmp je ret (bad) loope and and push rcll jo lods jns mov stos mov fidivl mov out mov js scas pcmpeqw (bad) jge (bad) arpl fcoms fist insb arpl leave loope fldcw fs hlt mov sti or pop idivb pop out mov sahf add xchg inc iret jns ja les mov adc lods or sahf jne cs cmp (bad) xor mov std mov mov movsl push push out add test lods dec js call repz aam cmp jl stc lock sbb push stc in jb jno pusha adc sbb push outsb es aas inc imul lret push fsubl hlt (bad) adc xor sub insb fimull mov cli cmp push outsb ret mov mov test cmc or sub mov lods mov (bad) test enter icebp int3 fnop stc and je push and lock pushf pop fmuls adc jge or mov and mov insl stos mov and cli int3 fistpll imul jo into xchg iret movsb add fistp cmpl or je icebp in rcl ret (bad) fld ss js dec enter pop clc inc pop or ja xlat gs sub popa cmp fnclex xchg mov cmc or jo lea xor pop or aam (bad) lret (bad) mov int ljmp repz xchg push add into imul xchg pop dec notb fldenv loop xor andb testb mov (bad) fildl or mov inc fcmovnu xor sahf rorl imul and xchg dec or mov pop and and add test xlat cmp and insl push jg push lcall neg gs inc ror inc push fstl sub or sbb gs jns and lods and jp stc push sub sbb and and fs out sub stc lahf sub mov push mov mov jbe jle sub sbb ss clc aaa push js cmpsb clc xor mov call push xchg lret mov mov jbe test outsl push add push pusha (bad) (bad) mov lret aad aaa mov xchg sbb cmp pop pop mov inc xchg leave inc (bad) jns mov test and cmp std jnp mov (bad) mov mov push jno jge enter mov jmp and daa mov stc xchg cltd test adc ja nop jge and push lret pop push mov push mov dec dec mul push jl or xchg scas fsubl mov dec jno jnp scas aam or test imul pop bound movsl sub pop xchg std mov lea xlat pop pop cltd add jb sbb push test pop mov mov mov je repz ret jo cmp add (bad) ja inc fnstcw and mov mov out call imul mov mov xchg and mov dec mov mov and subb sbbb fs sarl ljmp pop jg,pt outsb mov jns mov js cli mov popa fisttpl les call and push out inc ja cmpsl mov scas jl cmp ds jnp pusha fdiv fwait mov pop fcmovbe ret pop pop movsb or es (bad) lret mov inc scas sub jae xchg out inc int3 mov sbb fisubrl js pop cmpsl push lea adc in lea outsl fisubr cmp mov dec aam sbb nop stos insb (bad) xor cli cmpsl adc or inc mov insb mov pushf lods mov mov pop pusha addr16 jb aad pop (bad) pop gs xchg sub shl lods fnstenv ja pop cli out push sbb adc jle pushf fwait lock (bad) jp jl fmull aas loopne dec pop cmp shll jl inc shrb fwait adc stc cmp sbb sbb push inc mov mov mov xchg push nop fcmovnbe mov lea mov push push imul dec sub pop pop jb clc mov (bad) jne mov jge mov insb leave pop fwait push jbe ljmp and insb mov ror jno pop fmuls stos push adc test lret sbb jmp sarl pop push pusha lds fisubr cld sbbl cmp dec push movsl adc or (bad) jo jp fcoml cmpsb or jle daa jns jnp fwait cmc jb jl xor mov jne idivb in add xchg lds lret dec fstps xor push add test jno jbe or sarl inc je jg jb xor mov loopne int3 sbb ja fmuls out aad shrb js and jae pusha ret xorb and xchg stc icebp add fwait je mov leave movsl mov mov jo lahf lret (bad) call js jno push mov or cmp jge dec jns dec hlt jo cmpsb out jecxz sub loope imul jp fstps pushf jbe int hlt mov adc in jecxz lret mov leave dec sbb mov mov js lahf and jo jo ret xchg push inc aad repz loop xchg aas xor dec clc adc cmpsl xchg (bad) jp insb pushl jp mov in in fsubrs xchg lock mov jle lods test dec jno pop adcl fxch gs out out lock scas clc adc repnz xchg jns pop push pop cs stos mov or or pop or lock ss mov add cmp mov shufps inc lahf cmp fmul mov sbbl jnp jecxz cltd mov out xorl push or jns or jo cli fidivl (bad) push jnp je jo push leave inc adc movsl (bad) dec fnsave push fisttpl and inc sbb subb or in imul push dec inc movsl or xor push out insb jl sbb inc pop sbb push jo push ficoml imull inc xchg adc ss inc mov jle sbb lret (bad) xor popf pop cmp in add xor fs lods popf jmp andb fsubr dec mov xchg ja rcrl mov add mov scas ds and adc das in je dec fmuls sbb pop shr jns stc int mov add out push xor mov mov (bad) cmp cli ret push pushf cmp inc jg rcl dec fsubrs (bad) in aad pop xlat mov fdiv push test push out sub pop (bad) mov cli shlb cmp ret out inc cmp mov test stc inc int3 pop cmpsl dec inc xlat cs push repz add ret push pop fimull cwtl adc jnp call sbb call lcall cmp out lcall push lcall sub (bad) jp pop push xchg inc ja loop jl mov sbb jns int rcl mov test xchg jnp out push jno push sub adc inc xor cmp or mov jg push outsl push lods ficoml dec pop test cmc add mov clc cmp xor aaa imul dec pop xbegin adc jl lds inc incb (bad) or sbb push arpl (bad) fbstp mov pusha mov aam push add inc cmp shl into inc push dec sbb insb into cmpsb je mov mov push sub mov aas test loop mov in daa xchg test adcl aad adc loope div sbb push cmp inc test inc mov inc jbe outsb outsb mov dec fadds xor cwtl jno sub icebp faddp dec std js cmpl mov ja cmp iret inc aaa ffree inc sub test je movsb jo dec hlt rcr lret mov jns xor cld inc lcall fdivrs test aad rol sub in sub xchg push inc or int3 call fcmove nop testl loop rcrb cld (bad) push push adc push fdivrs push push push je rolb push lea (bad) mov addl insl dec jno sti dec sbb jl addr16 (bad) ss xchg in fadds jae jo jge lods xor mov scas jg and pushf insl adc jp jae loopne dec mov cmc das pop cwtl pop cmp stos push cmp mov lds pop lcall cmc outsb aaa test es fbld out ficom loop push test sub mov pop jle sbb data16 inc ret rcrb inc dec xor (bad) (bad) mov jbe jnp outsb js and dec clc adc in aam bound xor jmp cmpsb arpl and ffreep mov divl es imul xchg rcr stc out push shll sbb (bad) jl ja rcll sbb mov movsl cmp out pop out iret push jne jecxz sbb pop dec hlt or ret mov lret lds outsb push pop xchg (bad) adc mov (bad) xchg push repz cmp stos xchg jne push sti add pop dec (bad) sub (bad) jb nop mov addb ljmp jne and scas popa js clc (bad) cltd jecxz xor out je xchg adc scas pop mov or dec dec adc popf cld int3 pop rorb inc pop push fwait or adc mov out fucomip pop mov jp sbbb movsb jmp jge inc jbe scas test xor jle into js or cmc add int3 cmc dec (bad) into cmp pop mov sub scas maxps inc inc inc sub dec dec sub mov xor sbb sbb (bad) or imul incl inc push mov push sub mov cmp repnz lret (bad) mov test ror ljmp mov mov shlb sbb cmpsb sbb test push mov arpl cwtl pop add push in pop mov jg mov mov adc mov mov in sub std sahf idivl les rolb jg jmp (bad) jns lock dec jo mov sahf xlat pop or (bad) xor std out lcall xchg call popa xor xchg mov mov int3 jmp iret or xchg imul into add add stos mov sar pusha pop inc dec (bad) xor call xor and pushf mov test in fs lret sbb mov scas cmc ljmp sahf mov scas add cmpsb out push push loope stc xchg push pop shrl daa inc sbb jno out icebp out dec or mov jbe lods mov orl jno aad add add ljmp or push sbb inc add mov jbe fisubl sti fisub push sub and push insb aaa xchg out stc mov lds xchg push (bad) dec pop cs jo lahf xchg push imul cli or xchg pusha repz jecxz in or add sbb aas and int sbb or push xlat xchg lret insb ds hlt test ss lea pop cld insb pop in mov pop or and call push mov test in pop in aaa mov mov push es addl mov cmp pusha in repz lcall xchg adc jp pop or stos popa xor pop lcall in mov mov lcall and sub push popf mov cmp (bad) ljmp or (bad) adc xchg dec mov gs into in jnp out in lret hlt sub (bad) xor adc xchg sub cmpsb lea xchg lock ss adc clc add jae dec (bad) mov push xlat adc mov enter jle loope in push adc xor mov mov xchg (bad) or cmp xor mov add inc cmpsb cmp mov dec dec xchg test xchg cld or sub test cs mov sahf xchg mov xlat loopne mov xor loop movsl add lret cld in mov jle in push test mov dec add pop xchg aad push push adc out aad jbe scas cmpsb fwait in scas (bad) mov fs add (bad) cltd sbb sarl (bad) push mov pop push movsb in outsb mov jge data16 sub push cmp jmp mov hlt mov (bad) ljmp xor mov inc (bad) dec ret adc sub out pop sbb sti call shl cmpsb mov cmpsb jl mov adc or mov cld mov jae sub into jae pop mov repnz jg aam lret mov outsl rorl pop ljmp imul adc in inc push inc push mov cmp imul scas or mov adc sbb dec add mov cmp pop cltd push sti jbe cmp out cmpsb iret test int xor rcrb js xor in (bad) in daa je repnz imul push inc cmc test cmp scas xor jb pop sbb jne xlat jne dec les jnp fnstcw dec pop mov adc add cltd sbb mov arpl push xchg jcxz jno sbb jns xchg mov ret inc pop loopne push inc fistpll ja add push js rcrl mov push jmp push in mov inc xchg idivl aaa fcompl outsb pusha inc mov inc insl enter xchg xor lock xlat inc aad xchg addl lods cltd pusha repz add cs lods add lods or push pop gs jo fsub mov out mov lods in push and pop adc out inc subl imul mov inc loopne dec in into xor jmp jno movsb loope or push lock ret sbb adc stc xor push xchg mov decl sub icebp loope rorb mov sub jl push fcmovnu sahf lods dec dec jns enter enter fsubl lock mov aas (bad) call ja cmp (bad) (bad) mov movsb sbb aad aam iret clc int3 pop neg xor scas fimull scas mov rolb aaa cmp mov test je jecxz lcall inc pop ret cmp out mov pushw pop iret in jle inc (bad) out popa pop shrl test or jne add fbld test aam dec out pop lds mov jp mov fdiv gs jo insb inc or movsl gs test gs out xor sub jbe call lods sub xor sbb ljmp push out and das jno hlt stc lret xchg mov lods call test stc pop push push js xor gs cmp push (bad) jp lods (bad) and jge dec pop push add arpl pop scas call mov lods mov outsl mov fisubrl push lock bound mov test cltd inc sarb sbb add insb inc cmpb dec mov and arpl jne pushf mov and xchg mov pop imul cs insb cmp mov dec xor or mov mov movsb or sahf andb int3 scas inc loopne pushf lret inc mov ret sub out or out into lods dec xor inc es push pop sub test (bad) cmpsl mov fcmovu fdiv popw push pop xchg hlt mov xchg xchg cmpsl test imul inc lock mov daa aaa sbb lock adc mov dec and jecxz negl clc push cli push push jns dec or sbb and push js jns jl cltd out aam or adc push pushf cwtl insb mov xor lds inc push add fldcw xchg cld (bad) cmc arpl movsb enter pop popa inc sti xchg sbb fcompl mov push shl push pop lret or cli dec cs mov mov ja add adc test mov (bad) dec pop imul sub mov xor inc jmp sub jl xor repz insb pop cmpsl xchg cmp daa jnp lret (bad) cmpsb lods jmp xor repnz popf loopne rolb in jg in pusha jns cmovbe jns shrb test in mov lret (bad) lods sahf movsb cmpsl subb stc out pop or jecxz addl xchg sbb adc (bad) lret test inc into push adc mov push loopne ret and mov data16 push (bad) ds (bad) mov out mov test ljmp adc pop pop inc xchg bsf mov nop dec push out leave lret ljmp mov inc push sbb mov and cmp pushf mov pop push stos pop in test sbb mov xor lods dec add push movsb pop out or int3 in mov notb nop xor cmp ljmp dec inc pusha aam ret mov push lods and cmp and mov or mov sbb loope push idivl dec cmp fldl sti loope cs lods sbb cmc aaa or mov sarl and (bad) arpl add mov stos mov icebp sub fwait rcrl rcrb mov sahf jp cmp (bad) mov ljmp jge lea mov rcrl clc (bad) push cmc sub lcall inc test xlat xchg xor dec repnz stc outsl stc sub scas jmp inc push loopne sbb shrl push lods rclb repz pop or pushw push pushf jb dec adc cs sbb lea in mov (bad) jmp mov rcrl mov lock cmp jo jno je or mov pop mov test push repnz stc jno sbb xchg cli and mov scas push xchg sbb mov (bad) pop mov sub hlt imul ljmp or aam or jecxz les iret xor inc lods jl or add jg xchg ror mov xor iret fidiv daa dec xchg rorl sub or bound jnp jno inc pop sahf cli aam sti ds daa aad ret inc daa aaa inc and xor cli cwtl pusha divb js mov dec jns scas mov fdivp push jp idivb sbb rclb sbb jecxz push out loop mov cmp jno jmp test pop cwtl js or stos or leave push test fsub mov mov sub inc icebp outsb jmp sti pop push in jo mov pop xchg jns push fcoml mov movlps mov jno adc inc lret jb dec dec adc shrb cmc mov push add fsubp jecxz mov jge hlt xchg aad repnz outsb inc inc cli ss mov pop sub inc aad sarl mov (bad) (bad) ds mov lods icebp repz clc inc push (bad) out mov (bad) repz cmp aas sbb popf popf jae jne stos mov push jnp (bad) cld outsb call imul lods addr16 inc inc clc sti dec (bad) cli inc mov dec les sti pop inc rorb (bad) cmp in fsub movsb add and sarl mov cmp aam sarb mov je call lods rorl test dec clc sbb lods sbb ret in jg bound mov fstps cmp loope and sbb cmp hlt inc (bad) aad mov pop or ljmp sub repnz (bad) xchg jmp inc pop call (bad) jl fistpl scas sbb fcmovnu fsubrs inc call cmp push scas jp rcrl xor stos das dec dec sbb jl pop les cmp xchg rclb enter mov sub inc or rcrl xor nop cmp lods push es (bad) sbb cmpsb mov pop mov clc out mov dec dec lods push mov sub pop xchg lret dec imul push mov or lcall or fsubrl int3 outsl loopne cmp sub dec dec add xchg push aaa pop test jle xchg sbb js unpcklps shlb stos mov call mov mov cmp push push rolb hlt stos mov (bad) pop sub lods ja js xchg call push add (bad) mov pop adc mov sub out push jg push and mov or sbb jb pop jb ja imull ds sbb inc cltd sbb (bad) (bad) ja jge sbb cmp push or js mov push clc push push mov mov pusha inc ret movsbl inc add movsl cs or negl jo xchg inc hlt inc xchg push jecxz jnp cmpsb ficom rol and movsb jecxz push pop aam test pop jge bound ljmp je jae push test xchg push (bad) mov rcll js jmp push fnstenv and push mov rcl repnz lods push clc (bad) in mov in jp loope xor lods mov outsb inc mov lods add add sbb mov cmp xor insb pop lock popf shll jecxz mov xchg xchg dec push das inc popf mov movsl mov inc mov sbb sbb gs and mov mov andl push fldt push mov fdivrs mov push pop cmp stos sarb mov es cmpsl sbb ds (bad) daa (bad) sarl push rorb sub test jg cmp jp inc es adc mov mov and push (bad) xor pop add mov fsubl fnsave mov or xchg jb inc add pop sub cli pop lret icebp fs mov or popf lea lods sbb sarl cmpsl iret or fisttpll ja push mov sbb test insb sub cmp test jne in aaa lret sub mov lock mov push ret ret ficoml mov push ficoml fsincos daa mov out inc adc repnz sti iret int mov or insb out jne push mov mov aas dec xchg lret jnp or std sbb leave scas cli jno (bad) pop dec sbb or adc pop repnz divb shrb enter jo (bad) mov popa jb add pop shr testl ficompl mov cmp pusha xor xor dec aad mov fadd addr16 mov sub xor rorb aaa lock in mov rsqrtps mov adc mov cmpsl insb stc xor jb jbe jbe rcl repz lret mov lret cli mov (bad) (bad) cmp jae push mov inc es adc sbb inc in cmc in or rorl stos lcall outsb (bad) div fwait and mov ficom (bad) daa repnz pop mov idiv adc inc and shr out cwtl cmp pop push adc push push adc pause lods fcmovnu sbb insl pop sbb jne push das rcl mov mov and orl xchg ficom xlat aaa jae jecxz test mov lods popa mov fidivl xchg fisubrl cmp gs cltd scas int3 data16 cmpsl push pop fstps ficoml or cmp cmc inc movsl fisttpll outsl (bad) mov lock sbbl jg xor (bad) push cwtl outsl rcrl int3 sbb sahf call dec inc dec std into sub dec mov add jecxz inc push clc loope add into cwtl sbb (bad) int3 loope out cmp dec aad mov pop out cmp dec or lock into jb pop xchg xlat mov add add push das movsb xchg loopne into cmp hlt clc stos enter or lret cs sarl adc fldpi inc inc cmc mov adc out sbb test testl jns jne imul push push and dec adc int (bad) mov dec out bound xchg jae add aaa mov sbb dec inc xchg mov dec fs dec pop outsb fst in push in call stos mov adc sbb dec mov into mov inc ljmp push xor outsb test sbb mov lcall enter or push rcrl sbb bound adc dec dec lds and cmpsl rorl inc lods or jbe iret (bad) cmp je mov push adc int3 int (bad) adc mov std stos sbb notl pop xor fcmovnb outsl mov bound std and pop (bad) mov cld nop je sarl push mov cltd pop xchg decb mov cmp rclb mov ds mov dec out push xchg jno and lahf xchg pop int3 mov loope rorb add jnp jg lret push insl subl and mov movsl sbb sarl pop les sar fs call lods adc or arpl push movsb mov je imul es (bad) iret imul mov inc iret pop dec sbb ret movsl fcoml push lock adc neg stos fstpt fadd (bad) pusha jne xor adc icebp mov sti sbb dec (bad) mov insb sbb fsubs ljmp xor pop jbe jge pop jns popa mov mov or pop dec data16 xchg inc rcrb lea lock lock test xor and mov adc dec (bad) out lock or js jae dec or dec scas xor std jge loopne rorl xor dec xchg jp cmpsl sti (bad) or cmpsl lcall (bad) fldl pop lea hlt add sbb ret add icebp rcll dec xchg jno mov lcall push xor lcall leave in xchg inc adc inc dec sub push mov repnz jns jmp dec scas push jp mov fidivrl sub push adcb lret ss jecxz pop pop adc fdivrl int3 cs adc adc add mov into mov adc out and cmp in loope fnstsw ss ds push and cmpsb pusha gs inc test ljmp outsb and or lds adc clc gs jmp in scas xor add nop mov popa adc dec repnz push xlat test int3 lea dec dec sub lods mov mov les leave cmp cmpsl movsl dec pop dec test pop test shrl fsub dec jns rorb arpl lcall or (bad) push hlt lods das clc sbb jo test adc mov stos jl outsb pop jne repnz add into test outsb (bad) sub popl push jmp sub jno pop mov (bad) movsb xchg cli pop lods add inc lahf xchg xchg mov dec jecxz aad inc pop jecxz lock pop out or pop mov jo push icebp pusha pop mov or jp pop add push insb (bad) out sbb lret sub rsm jns (bad) es aad sbb or sti cmp lock pop (bad) in xorb aam ljmp dec pop xlat xor movl mov dec lods hlt call push push and aaa cli or aad push cmc jmp icebp imul pop popa sbb enter sti cmp jge daa inc xchg cmp dec mov jb fmuls inc jo shll sub sub xlat push and inc push xor popa fs fcomip test ror stc or div push inc stc mov mov hlt lods push inc mov popa mov push pop cmpsl push mov iret lea mov sahf sbb iret pop cltd mov jg sar pushf cli fcompl xor shll sbb jecxz psubsb sbb lret aam (bad) dec mov fs mov inc dec lods in in stc xlat pop mov xchg jb lods out add jo lcall jnp flds mov sbb lock mov call xor xchg cmpsl cmp and cmp jbe mov arpl fmull mov jmp jo sahf mov jge mov movsl xchg out push xor test cli fadds xchg mov xchg cmc or aaa fdivrl lcall or mov insb dec imul dec jp xor adc push xchg dec cltd daa out mov mov and out mov and aad daa push aam push sub mov pop mov mov notl or push icebp jae pop cwtl fbstp icebp adc flds rcr jae rorb adc jle ret lds mov imul dec negl jl add (bad) pop icebp test (bad) jae xor loop xchg push pop sub dec jae imul incb dec iret and jno jo dec jecxz mov mov out xor inc xchg shll mov sbb jne fwait xchg in lods pop jp test mov push jge adc js xor pop dec shrl lea adc popf jle clc shrl mov popa mov inc rcll flds cmp stc cmpl cmpb pop inc jl xor out mov sbb push cmpsl rcrl dec adc sub mov pushf lret mov and inc jno int3 scas cmp push (bad) push test or or mov outsb adc fdivrl cmp ss xchg dec hlt icebp add jg scas sbb fldcw cltd push pop lods cmp xor hlt adc imull into enter lret adc jecxz (bad) fs call add mov mov mov mov loopne mov call in sti (bad) mov in gs sub sbb mov clc popf clc aam stos (bad) divl sub test mov cmc jp xchg inc scas fcoms cmpsb fisttpl in mov or mov adc or jae jg pop or dec das daa and add stos mov and mov jne ficompl xor ret ljmp aaa nop lock mov mov sbb add cmpsl mov mov pop sbb mov jb sub fdivrs inc cmpsl dec inc fucomp xchg inc stos push and pop jnp dec push inc test lret sbb sub dec inc lock inc mov and add push pop in testl inc mov fmull push mov sbb push pop test jge sbb jno cmp adc insl cli or fimul sti cmpsb out pop out mov mov lock add jg dec frstor mov mov mov in mov push xchg inc es fucom jns (bad) xor fstl in in and lods sbb mov repz inc (bad) cmp movsl sbb push in nop sti mov jo xor cs imul dec pop pop dec pop arpl mov xor (bad) out in test push dec adc jg rclb test dec mov popa test daa jb pusha leave jne ja mov inc pop push rolb in adc push loop mov mov xor pop stc (bad) int3 insb lret xchg aas stos cmp cmp test clc out and shll out xchg sbb adc sub js jb arpl es mov pop mov ret sbb dec es in xlat adc loop lock add movsb inc mov jg dec mov jns mov push in jg cmp push fmul popa mov call ljmp lods or adc mov adc add xor pusha jbe setno std in mov push pop and adc cmc mov mov pop stos pop add inc sti add jecxz jns xor in imul lret rcll sbb lock xor jno jns add mov test sbb lcall mov shrl sbb cld enter sbb xchg andl sbb mov push pop fstpt push cmp jo or jg dec pop jl fstps call bound jmp lcall test clc rcrl inc ret je push xchg jecxz stos mov mov inc mov xlat push cmc sub rcr ftst cltd in dec jp xor add jns mov cmc rcrl sbb sub mov addr16 dec out lret lds push mov mov test (bad) mov pop lret cmc adc sub adc xchg push sub mov pop cwtl (bad) daa push and mov lock push ds cmp pop cli push adc add sbb data16 scas dec push cmp adc adc push lods aam fwait inc rolb popa jmp xor xor mov (bad) xor fcomps dec inc mov lods cmpsl jbe push or out pop lahf sti mov mov pop lods sbb fwait mov divl mov pop dec ja add inc add xchg add jg mov enter mov xor ret outsl inc mov lods in ljmp and pop (bad) jl (bad) je (bad) mov push roll std ja lods mov sbbb or mov leave (bad) xor and test (bad) jl mov imul std xorl loopne add pusha xchg sbb mov aas pusha mov jns aad jmp dec nop adc push dec call sbb adc adc test mov jno xor in push repnz cltd xchg add sbb jo xchg dec stc popf xorl (bad) in (bad) jle addr16 scas mov ja add in rcrb movsl inc lds pop pop jbe or lcall andl and movsl rorl fnstcw mov push dec test test test jg mov push bound pop fcmovnu mov xchg mov stos imul stc outsl aam jmp dec jne mov mov add jl imul mov popf cmp jb add jne mov jmp cmc mov or mov push ss paddb sbb clc movsl mov push push pop ds add hlt stos ss and dec add out (bad) sub imul pop dec push mov pcmpgtw pop sub mov stos jge movsl mov jae das (bad) lret outsb pop dec (bad) in mov push adc (bad) add (bad) std adc fild push (bad) rcl cmpsb sbb inc xchg daa xchg mov cltd mov xorl rcrl xchg test jns iret mov cwtl rclb push push xchg xchg testl test mov inc mov mov mov xchg les stc or lcall jge xchg (bad) (bad) mov push xchg fmulp mov lea mov sbb mov sbb and into xor push mov cli mov push fbstp add stos cmovb lock movsl imul gs mov imul ljmp sbb imul insb repnz jne in sbbl in dec jnp dec ffree or iret jge sub jge mov test dec dec movsb or xor (bad) xlat adc out lods xor je hlt imulb fwait push xor jmp jne mov pop or jae sahf (bad) sti dec je dec sbb (bad) cld and sbb cmpsb fucomp subb add sbb adc cmc push in jne imul xchg adc icebp repz cmp pop jo pop popa je push dec push or aam loopne fbld xlat mov das sbb mov pop and mov xor mov push sbb stc push mov mov lret outsb cmp ret int3 cmp fistpl xor jmp sub jecxz sub sti pop and aam sbb fs xchg push icebp insl sbb sbb ja aam cmp enter int3 fiadd hlt pop aam pusha ror enter cmp rcr inc push stc sub mov xor xor cmp jp sahf jno inc push mov enter (bad) sbb jno and cmp rcrl sbb push ficom stc movsl sbb sarb fdivrl daa lcall xor js out mov cmc jae insb stc fcmove pop inc (bad) push repnz inc mov mov jns popa dec rcrb call adc ret enter fisttp hlt rcl sbb rorb les cmp rcll mov rclb dec adc sbb mov adc mov push sbb ret or std push fdivrl insl pop jge add cmp (bad) hlt ja in xchg test fsubrs out (bad) xor leave test cmp xor imul rcl xchg cmc pop fcoml dec fs mov adc fsubrs mov pusha jg mov fbld inc fist fwait je inc lock xchg jl pop mov sahf leave push cwtl mov (bad) xor rcll mov rcrl pop sub pop hlt loop lods pop sub popa popa jle ja add push insb rclb and imull adc mov jmp xorl movsb mov push adc aaa xchg jmp push push add stc pop out aad test xchg rclb out push sti std (bad) mov js in fcmove test dec fwait hlt stos inc loopne inc imul (bad) pop rorb (bad) iret sub pop int and and jg fmuls mov push ljmp pop mov mov test in sar loopne bound test xor lods cmp mov aaa add rolb xor mov cmp mov iret push push sbb lea aaa ficoml dec pop dec pop popf pop aad iret cmp dec imul gs push gs aam notl faddl loopne adc push inc test (bad) sti cmp jae shll adc gs insl push mov aam fidivrl xchg lcall pop mov call faddp dec mov mov xor lret in mov push pop sub mov loope mov xchg xchg out push leave rorl insl mov push pop or cmp pop cmp in ds mov inc cmc cmp inc add loop sbb movsl loop data16 adc pop or loope mov mov inc mov test scas dec fsubp cmpsb imul (bad) mov (bad) mov xlat inc pop jmp fs loope push out sub lods sbb sbb scas stc inc cmp push adc scas loop mov add mov jp dec shrl sub add inc jno pop test repnz imul clc rcll mov loope sbb jge arpl mov or int or outsb pop sub enter in adc mov loope popw push (bad) int pop gs mov sbb stos and pop cltd out (bad) idivl addr16 daa vshufps js pause out (bad) adc cmp pop push ss jae ret shrb popf push add out shll div daa dec fsts pop push add jne pop sbb cs cmp (bad) jmp imul jle push iret insb loop sub xchg bound inc loope push cmp xchg cmp rcrl jl cmp jmp or cmpsb mov fwait mov jmp cmc push lahf dec mov inc jns xor inc std pop push (bad) je je orl stos dec cmp ljmp adc stos rcl jmp repnz inc inc push fistpll fwait in pop lods push add call push inc test in jns or mov mov in xor fmul roll std sbb out ds pop jno or loopne xor push fdiv cmp jns fsubl div add (bad) push test jge cmpsl add (bad) mov or aam push fsubp xchg jge xchg sub imul jg mov add mov sbb push sbb clc and iret xor subl inc xor sbb sbb sbb inc adc sub push (bad) jl jecxz (bad) enter mov std in push pusha mov sbb jne dec add je int mov and mov dec movsl adc inc cmpsb arpl shrb add mov inc (bad) mov inc mov and loope lcall lock inc and jecxz or cltd (bad) inc ja icebp nop cmp inc inc clc mov xor movl jg push lret es mov pusha cmp add pushw jecxz mov stc jmp mov iret cmp movsb mov adc or psllq cwtl xor aaa mov jmp enter rolb mov push pop inc jnp jl mov mov (bad) sahf rol fdivrs fisubl arpl add sahf nop lea mov scas mov lods (bad) ret cmp stc pop aas pushf in in call mov cmp das test (bad) bound sub pop outsb dec roll test loope sbb cmpsl fldt dec jbe push mov fsubs pop rcl push clc mov push (bad) push aam add outsb mov ljmp cs fdivrs adc lret pop mov nop std ret adc cmpsb lahf movsl loope cmp jmp out scas dec ret sbb (bad) bound pop adc enter out ja adc in mov cli movsb sbb stos ror adc push je int aam push (bad) test sbb imul in ljmp xor (bad) push popa sub leave or mov dec sarl adcl mov xorl xchg xor cmp mov lock mov sbb cmpsb add mov mov ret sti add lods inc push rcrl test add and sbb inc or sub mov mov pop and fstl loop loop dec cmp in mov adc push popa fwait push pop movsb sbb jns mov arpl jle fldenv loopne (bad) jne inc fnstenv nopl dec pop rorb sub and mov adc mov out jecxz or mov mov add (bad) aad mov cmpl or pop fmull (bad) int adc movsl rolb add push sbb pop jne jns dec jmp xchg xor push mov or inc sbb mov aaa sub call lods mov (bad) iret movsl in sbb js dec rorb sub neg pop sub dec (bad) cli ret pop cltd cmp lcall add pop mov xchg aas jae cld scas push (bad) sub dec mov ja push and fstl jecxz sbb mov gs fwait in sub inc ret mov or mov ja orl movsb mov add mov rcrb sbb pop jg cmpb pop xor mov add js repz stos jns inc jecxz pop repz imul xchg call mov ret mov add pop cmpsb fiaddl add dec inc les aaa pop test cmpl adc mov push int3 aam arpl push cmc inc arpl adcl rcl sub imul cmp lret push jp pop add sbb jmp adc xchg mov mov sub iret fstl pop mov fsubs push pop repnz ja pop sbb sbb add ljmp dec scas cmc or loopne ffreep in pop push repz fdivp movsb cmpsl in jge in jmp outsl inc mov rcl loope idiv inc cmc imull lret in fstps push sub sub int (bad) (bad) idivb jno pop aaa mov std jg call jns mov (bad) push fcoms setg mov jp (bad) (bad) mov dec inc negl adc in out add ret xchg jns (bad) mov cmc xor mov sub cmp mov lock jb test dec js and js push jbe (bad) mov jns and je jmp lcall mov popf in cmpsl in stos insb in scas cmpsb pushf popa mov dec push fiadd pop pop xchg xchg mov sbb push fnstsw in into jae xchg sub push test lret pop jnp iret mov outsb push dec cmp mov push les es je das push sbb dec sub pop addr16 adc jnp bound push sbb (bad) fldt sti sbb add cmpsl pop inc lods movsb (bad) pop mov popa fs fcmovu (bad) mov or lock mov sarb movsb mov sbb cmp mov test mov cmpsl sbb das push pop push mov mov clc mov push xor js or pop loopne test cld dec mov mov mov (bad) (bad) icebp or jbe sbb mov inc dec mov iret dec lret sbb mov mov mov jns mov fldcw push and adc (bad) into out mov pushf pushf xchg les test mov dec lds cs hlt out mov rcll cmc add mov mov cmpsb (bad) mul adc sbb in pusha lods dec xor shll stos push call adc fs fcmovnb into jg je fildll std inc add in push pusha pop mov leave ja push fidivl cmp cmpb xchg and push sbb pfacc call scas or cltd mov xlat dec (bad) inc cmp (bad) sarl xor mov stos scas and inc push std fcoml cwtl lea xchg jbe scas add and test push scas ljmp pop pop icebp pop popa int3 test mov inc inc adc xchg mov add xor loopne pop xor je outsb ret add stc mov adc (bad) mov xor ljmp cmp cmp pushf jns fs adc cmc pop lds ret adc cmp jns dec add stc sbb mov das pop ljmp fldenv push sahf sti sbb or mov jp push pop test add mov fstp mov cmp mov jbe stos ja test nop push pop imul icebp adc test add and int3 add xchg xor ret xor ds dec pusha mov jge inc cs sub xor mov enter lcall mov cmp mov scas out mov (bad) push jns (bad) mov inc inc rcl enter repnz or ss dec jno push or xor add je aaa inc mov jge sub int push je clc lds jl roll add jbe clc mov sarb inc push sub stc sti xchg (bad) or jge fcomps adc mov cmp sub push xor or cmovo sbb addb pop add mov cmpl push divl daa jl inc push push enter or push jne js mov loope sub jp pop iret mov inc stc cmp out dec pop inc sub int popa pop ljmp push shrl inc imul mov fidivl adc repnz jnp or repz dec push cwtl fwait pop fstps ret jle in ss mov bound (bad) (bad) push fwait mov aas movsb das and (bad) and fsubl mov dec shll xlat fwait xchg push push pop and insb add es push push rorb add dec inc mov adc jo out popa mov sbb cmc setae add adc and mov dec icebp shlb pop push mov outsb pop fadds fcompl dec lds ds je mov aaa jmp fcmovbe addr16 and cmp or icebp sub cmc imul pop cld fs inc jg out and ja jne (bad) pusha jl,pn lcall in jecxz addr16 dec inc xadd ljmp pop mov icebp pop (bad) lea dec xor cmp xor sbb mov sti and cltd ret out dec xchg rdmsr icebp rcl mov (bad) stos xlat xor dec pop das mov mov adc out dec xchg or cmp addl aas je loope shlb jge test enter (bad) in enter jl (bad) mov push inc int3 adc pop and dec push dec mov mov fimull mov inc inc movsl stos cmp andb fnstsw mov cltd xchg test inc mov xchg xchg lds xor sti xor (bad) sub mov and int3 mov dec inc fcomip inc xor fisubrl and (bad) rclb scas dec jnp (bad) sub push lods lcall fsubl pushf pop xchg iret negb mov inc dec fucomp lret ds xor gs (bad) js addr16 into cmp push out std test scas push ljmp cmp sarl pusha (bad) fstps lods push (bad) mov stos mov bound add push jns push jl jge mov clc sbb cmpsb xchg mov mov xchg pop jno jne,pn adc aam jno idivb pop mov daa mov xlat aaa push daa fdivrs sbb sbb out pop sbb inc jb adc movsl cmp je (bad) sub aaa sub das pop and ds lods xchg xor add dec jg outsb cmp call je ds push add (bad) lods pop stc dec into or push loopne jge xchg (bad) jmp testl ds sti mov jg lods dec add push sub idivb sub stc inc sub cltd (bad) jp xchg pop jo,pt ret cld (bad) cmp xchg dec pop mov jns or insl fstpl fstpt push (bad) cmc push clc jne push jnp xlat aam loope mov push nop dec testl inc dec movsl dec jo sbbl mov mov sbb sub icebp cwtl mov mov jb (bad) (bad) xor pop jp jg outsl jns test xor daa and sbb jmp rcrb jmp push push adcl fidivr push jmp dec xor or push out cwtl loop sahf sarl fsubl inc jmp pop mov adc mov out mov xchg mov cmp in cmp push push mov int3 fildl (bad) das pop scas jl pop (bad) mov jo test sbb in gs cs or stos je movsb jne adc call add sbb mov xchg das outsl mov imul sbb mov pop aas jo iret dec push push mov fisttp add add and mov mov cmc sub fs in cmp je pop das push xchg sbb fstpt jbe stos jnp imul mov cmpsl jecxz test or adc jbe out sbb mov jecxz or jge imul ljmp jmp jl push xchg setle jns loop in rcl das xchg mov xchg js pop lcall out rsm cltd rclb int3 pop cld sbb cmp fwait jmp pop lock cmp cs fwait xchg mov xchg scas (bad) and ja ja or sub cltd movsl lods sbb cmc jbe mov (bad) in cli int3 mov fstpl push lods loopne mov push call push mov jo pop addl popa std cmp sub add imul int3 mov lahf jmp add arpl test mull pop jg jae add adc mov dec push stos xchg mov push das fcompl add mov jns ljmp sub lahf sbb out loope int push fadd fcomps std add stos mov inc imul cmp dec in mov pop fsubrs es lock ror inc inc jno and pop and loopne xchg je pop jb mov cmpsl out bound pushl pop cs scas xchg repnz loop cltd jo mov lods enter add sbb cmp std and cmpsb lock pop ds and mov insb mov sbb push push (bad) aam inc rorl mov pop fdivs adc mov adc cmp pop jbe test popa dec fsts repnz pop sbb sbb mov sbb test ja pmaxub adc push (bad) cmp jne outsl mov leave inc cmc repnz mov mov mov xchg mov dec out repz push jne pop (bad) je xor dec loope fbstp xchg mov push sbb fdivl aam inc mov cmp push jo daa jne sbb push test inc pop je lock mov pop and fdivrs sbb (bad) sbb hlt pop pop dec das in xor xlat xlat stos (bad) out push lods test sub mov push sti sbb fsts dec ret pop fcos cmpsb icebp and xor lret loope cli js mov pop cmpsl aam pop pop ficomp jne stos push daa jns jbe int fisubrl inc xchg fwait inc daa cmp pop pop push mov xchg mov xor fidivrl or mov movsb xor cmpsb cmp mov iret sub push pusha loopne xor jae inc push sub jo cmp ret pushf repz mov icebp leave push jne rorl sbb mov mov sbb (bad) pop stos mov lods js nop bound adc lods pop mov jg loopne dec pop push test cmpsb jbe xor hlt lods int push dec xlat mov clc mov scas call push fdivs and push push je push pop fmull adc repz pop add into daa ret pop xchg subb cli push sarb imul hlt cmp hlt sbb push jge xchg in add pop (bad) mov xor jne mov inc cmpl sbb or clc push dec mov stos fmul aad sbb gs aam in sti mov mov push rep rolb ss ljmp rol mov sbb pop xor in inc push jno mov jp sub xchg js mov (bad) repnz setbe inc sbb pop jno repz in or pop test shrb jmp lds mov push enter int3 mov xchg and mov fisubrl push jge push div mov cmpsl xchg out pop sbb bnd cmc and mov or pop stos jge push arpl pop dec movsb cli lret and and imul push adc inc shrl and adc call in push jmp scas mov pop dec pop test lcall outsb pop data16 dec in jae lcall push jmp je daa adc adc outsl ret mov dec test pop test scas sti add cmpsb mov dec jns movsl aad (bad) lcallw aad dec fisttpll mov cmpl cmc add mov das test pop arpl mov movsl imul pop hlt ret pop cmpsb jl sub lret fadds loope adc or xchg pusha mov das insl aas dec notl xchg push inc mov xchg out push mov sbb (bad) es add or call es jmp scas sahf jae add das sbb out push push jb,pt or std popa insl mov add xchg loopne jge cmp dec arpl jmp push les xor or sbb fiadd mov jo mov inc inc sub and sub addr16 adc mov jne dec adc stos repnz mov sub daa mov sbb mov mov sbb sbb pop add sub in and cmp mov pusha (bad) mov and inc fcmovu lods daa push xchg dec mov test add sbb push arpl jne test cwtl adc pop xor mov jne or scas cs push arpl lock ret pop pop inc fistpl insb test lcall out xchg xchg mov push dec arpl push mov inc pop cmp cld cmpsl les pop inc flds adc (bad) std and mov lret hlt mov pop sbb lcall fnstenv (bad) pop arpl movsb add movsb test nop cmpsl xor mov hlt mov push stos push cmp sub psubw popa pop sarl popf xchg mov adc inc outsb mov rclb mulb jg in push mov inc cs mov sub rcl lret adc int and enter (bad) lock pop add les inc mov lcall sub xorl aad rolb mov cmc fnstsw mov (bad) jb push mov adc outsb xlat popa pop scas mov jecxz mov cli pop mov fidivrl in push dec test xchg fldt mov push fidiv mov fldenv pop incb mov sbb sub fiadd pop pop inc (bad) repnz and repz cmp mov mov (bad) fsubp aam jg pop pusha lock sub pop mov imul add cmc cmpsl out sub push out mov popf jmp or xchg mov mov or cmp xlat sarb fidivrl test lods inc inc mov test lcall (bad) mov mov add push pusha ret sbb sbb lahf insl push add aad call (bad) dec into sbb mov out mov xchg iret add loope loope les je loop push aas pop jp rolb jp or lods test mov in fwait xchg sbb (bad) mov sbb mov pop and lea jge mov push mov mov lods cltd ficompl dec arpl scas clc xchg jp repz push xorb jl push lret inc mov lret push cmpsl in in inc mov cwtl fild cld out cmp movsl orl jno movsl loope mov sti and push mov (bad) push inc test jne and inc je push adc sbb add sbb stos xchg imul in inc inc es pop jb incl lcall xchg hlt pop fsubrp inc push sbb push xor pushf mov in vmwrite cmp or les je mov mov mov mov adc push les adc out imul sar or sbb adc fistpll (bad) nop ljmp (bad) adc dec loope fistl repnz xor test push mov les and jno insl cmp pusha pop fisttp scas add push cmpsl mov es sub adc out push dec jmp or cli dec pop cmpb or je cmpsb jmp sarl sub test arpl icebp pop fnstcw clc outsb cld ja call imul imul dec lret adc in sbb jp lock es test push neg (bad) and (bad) sbb loope add mov rcll es pop pushf mov mov ds xchg cmc aaa dec inc dec pusha push ljmp mov pop jo or and popa jp mov fldenv push pop jno hlt mov mov pop push mov sub inc clc mov fmull cmp inc (bad) sbb fldt lock xor mov inc sbb inc xlat xchg xor cmpsl sbb pop mov (bad) or xchg out lea mov cld imul call ds sub icebp lcall cmc push nop fwait xor mov add imul jns lea sbb bound mov pop xor negl mov hlt (bad) fs fdivrl inc stos push xchg adc and (bad) ss mov cmpsl sbb xlat rcrb push test sbb or inc clc inc test sub mov cmp shl inc pop ja inc out dec stc lock fs clc ds sub mov adc nop mov cmc adc sbb xchg movsl stc jnp pop pop loop fadds dec lret ds jae bnd inc or jp arpl cmp mov shrb imulb insb xlat mov jnp loop inc negb or pop es push lds hlt cmp out mov aad jae push mov sbb push xlat push sub dec sub sarl mov shlb lds jb cmp (bad) dec std inc stc xchg add jb mov and push mov pop push fdivr jne push pop jge pop stos lahf lret push pop mul js xchg fisttpl sbb mov xchg mov xchg out or nop jns scas mov xchg jbe mov notl sub cmp aaa cmp mov adc daa mov push dec jg xchg dec shrb out test pop daa pop in lock imul xorl (bad) fwait push jp sbb xchg pop (bad) jbe mov cmc jns out xchg jl sbb repz xor sub add rcrl jb pop sbb fmull stos in add out loop lcall mov aam sbb movsl adc push and cli enter inc int3 add inc inc mov fcoml (bad) lret decb insl xchg mov or pop mov cmp pop mov sbb sub and push sub je icebp mov sub mov sbb neg cli push dec cmp call roll or fdivrs outsl and lcall mov add jg test sub loopne adc mov add mov test out lds cmc mov or sub test stos repnz xchg adc addr16 mov addr16 scas cmpsb lret push jbe lods loop jp cmp imul nop pop push xchg lock inc rcrl sbb shrl loop ret ja pop es jge cli push push cld dec iret scas inc push imul xchg gs clc sbb mov arpl test movsl loope jecxz (bad) push pop push xchg push add and xorl aam addr16 std popa lods or je xchg fs ja push shrb mov movsl loopne outsl mov add sub (bad) aaa stos pop dec stos xchg mov jne or ret mov es add adc cmpsb inc or jbe adc mov (bad) pop bound adcl push rcrl mov js mov rcl cmp fwait dec jle jmp stos repz sub cltd push testb push stc jb je pop push jge ret fwait (bad) jo jne rolb lock pop les (bad) dec push mov adc ret outsb push pop (bad) rolb and hlt adc imul sub scas inc bound cmpsl in xor cmovb add or mov lea mov mov push cmpsb cmp xchg loope dec (bad) icebp xchg cs clc pushf mov cs lea sahf jae addr16 push loop jno mov pop int push insl popa test push dec sbb xor mov shrl sbb add aad fstpl push xor sbb adc cli xchg movsl insb xor (bad) gs xor es lods rcll cmpsl cmp mov adc fistl movsl push mov jmp mov cmp push lcall cli push inc xor jne jns test xor add sub lods inc inc jo in test inc push cld test fidivr or jae push sbb fdivrl lret out add mov repnz pop add test sbb adc (bad) std ljmp mov jge das lock dec addr16 roll fstpl jl adc or idivb daa mov popf push inc rcr sub push xchg xor fist shrb pop fidivr push scas (bad) js mov add pop mov adc in insl fcompl fs testb jns js adc inc popa xlat sub xor fdivrl insl dec jns inc push nop pop adc lret enter inc xchg dec sbb stos mov neg mov dec je mov jl cmp cmc cmpsb push or mov inc lahf clc cld dec and jbe clc lods sbb insl cmp fadd insl sbb and pop pop sub jg adc inc aad pushf jecxz movsb jle xchg rcl mov or mov stos stos jp push sub mov into push aam xchg adc mov inc rcrl push push fcompl xchg add pop push insl pop jnp xchg push loopne repnz mov push or pop inc clc rcr cmp ss std rcrl adc and imul pop xor sbbl fnsave xchg gs sub (bad) push adc add push push fdivrl aam fstps roll loope (bad) (bad) mov push xor fwait jge inc pop jecxz inc jne pop stc sbb sbb out pusha leave add mov xchg ja pop xor fidivr push mov in xor enter jge sub or (bad) pushf int pop mov enter xchg mov sub std inc roll adc jbe fisubr pusha jp jno or cmp sub fstpl xor je dec jae hlt addl add fstps imul jmp mov jge add sub jp imul out cmp mov cli (bad) jb jno mov aam in mov cmpsb inc out xchg mov or jae pop inc (bad) jne jp xor inc enter dec sahf insl scas mov sbb pop (bad) sbb sbb mov push sbb push mov dec mov pop cltd cmc enter data16 inc jae push mov xchg mov mov in cltd or clc jno pop mov cmp adc push cmp or add mov push push repz sti imul mov aad adc lret (bad) dec call jl imulb jno xchg addb jp (bad) xor mov mov cmpsb rorb scas mov cmp mov jl int mov xor lcall cwtl stc stc mov lods in mov mov rorl leave jle pop orl cli mov test add cmpsb xchg mov mov cmp shrb enter jnp stc pop mov dec jns sbb test push jle pop mov sbb mov outsl sbb sbb das rorb xlat xchg inc jl inc loop sbb inc mov hlt sarl fucom in xchg (bad) xchg cli add (bad) iret sub xor inc fstps xor push cmpsl sti fldt push sbb roll movsl repz movsl mov loopne test test les mov stos enter andl js adc mov push pop fisttpl movsb pop mov aam jns sbb in cmp out cmp push cmp cmc (bad) push xor fiadd sub and (bad) fistpll lea mov test pusha sub and jg adc lds in jns sbb xor (bad) fsubrs jo iret dec pop pop xor xor fmull pop inc adc fnstcw xchg movsb sub stos adc jle pop aaa aaa shrl (bad) pusha xchg (bad) push push fs add call adc stos cli and adc or aad pop pushf xlat xor test sub sub (bad) mov mov pop js in xor mov repz sbb aaa loopne test aam sbb pop (bad) inc in push sahf or inc push xchg jmp fisttpll mov jo cmpsb sub xchg scas and or sub jp jne test fldl (bad) js subb and sarl sub fs xchg mov dec fstpt xor pop data16 outsb aaa mov clc or inc fildl push jb repz test sbb adc test push lods mov and cmp iret or push pushf pop mov movsl aad int pop rorl xor and dec mov iret or movsb sbb (bad) xor scas and fnop repnz xchg push ret fstps push or jb dec call shr inc mov ficoml int3 addr16 mov mov rcrl int and mov negb inc sbb daa std and clc mov jle cvtdq2ps sub rcr add sahf test sti cmp jp push mov cmp xchg dec or ss xor mov xchg cmc movsb repnz mov xor and or jl repz jge scas aas loope mov mov or dec mov ret jns pop pop ja sub jl cwtl jg dec and sarb sub inc arpl or jle inc push test xchg xor stc push insb xchg js aad test jle daa pop divl adc pop or movsb cmc pop adc jb insb xchg add jmp ds pop fisubl push daa call lock scas adc jp or adc jecxz imul jo jb cmp push pop fbld or cmpsl jo dec (bad) push inc push sub pop push fidiv testb add aam arpl fbstp cmp mov jge mov inc in repz js lock loop (bad) jno fst ja jge out jae sahf inc popa clc sub mov out push and div out inc push sub pop (bad) pop (bad) push lret adc jnp int3 inc jo jecxz sub dec (bad) lock mov jno (bad) je lock pop mov ds addb jnp push shll adc (bad) es push adc add fisubrl mov xor inc lock cli mov cmp enter jle rcll pop add in push insl mov popf inc mov clc xor or inc or push jns (bad) aas pop loopne cmc pop arpl jae imul dec add cmc jp jecxz (bad) jno loopne sti (bad) fsubrl inc in mov cwtl aaa js inc push lret inc xchg push jg ss aas lods jg add push in jl mov fild mov add mov pop stos nop (bad) jge sbb loop aad mov rorl movsl pushf stc xor adc js (bad) mov stos movsl cltd sub iret clc shrb cltd inc mov jg out jne xchg jbe pop xlat ret gs push xlat jo push fwait mov fnstsw push jbe sub inc fistl stos xchg mov jns mov das jae ds jle add ret add adc sub xchg sub in mov jnp adc ja add push mov cwtl push push lock ja test cmp test repnz xor fistpl ret sbb add outsl xchg cmc mulb pop (bad) subl mov jge cmpsb int3 fwait pop pop movsb sbb pop xchg adc mov add or or (bad) icebp icebp pop fnop cli adc and ret xorb scas popa out loopne mov (bad) stc and and rclb in mov inc js int not pusha xor add ja jmp enter pop cmp and sub cmp push jmp mov bound shll mov lea dec test xchg push das xchg push arpl lods push imul push mov pusha jbe and add rorl jno lcall cmp int add cmp repz mov or int3 stos sbb stc add dec mov loope jmp divl lods dec ja adc jno jecxz xor mov in jns loope hlt dec je mov loope fisubr leave xchg fidivl imul add scas sub add scas and dec lds and inc jmp xor dec frstor mov inc aam cmpsb jns push pop ror pop js lock mov xorl mov fcmovbe inc cmp add or in fmuls sti jno fstpt rorl pop repnz dec sub les xchg xor inc inc jmp push sub pop lret push outsb mov or add lods mov fistpl xchg lcall int3 lcall xchg int3 mov loope mov int das mov jb sbb lock push std lcall lock icebp test adc sbb pop jecxz loop loopne jl es and fist mov sub (bad) xchg add add clc adc or test ret add stos (bad) adc or out arpl dec dec push icebp sti and enter mov fs adc push cmp rorl mov pop pop (bad) mov push push arpl xor imul or push fsubl xchg repnz call push pusha jg jns repz inc call ja das aad dec fisttpl out movsl cmpsl fmuls push aad xor xorl push push js cmp ljmp inc mov push cwtl push add icebp int je adc es mov add (bad) out mov sbb pop push mov inc jae pop dec push mov sbb inc xor push mov (bad) adc je imulb movsl lret mov push out outsb or ja add enter test or gs out in rol call push repz jnp in xchg sbb dec and adc gs fcmovnb shll xchg jg sub or clc dec add or push jle pop push mov (bad) in or es mov aaa pushf test adc idivl call adc call pop and clc adc lods xor mov sbb xor jmp push xchg dec fisttpll xor inc insl aad int xchg push sub pop mov fcmovne sbb mov inc sub pop jnp push inc xor pop stc mov sarb xchg cltd pop loope in jecxz out push into mov (bad) push add outsb xchg xchg sbb and clc pushl inc fprem1 push sub (bad) test rcl cmp test test (bad) mov cmp (bad) and add mov fnsetpm(287 fildl addr16 add lret out mov push movsl cmp repnz dec mov xor add push add mov and pop mov testb xchg mov notl adc (bad) mov mov mov jecxz lret mov adc or sub roll iret in dec int xchg xchg sbb push sbb cmpsl or or cmp add rolb clc xchg cmpsb aam fimul cld stos decb inc jno jmp mov cmp addl std int3 dec call push test lods sub mov movsb lahf mov (bad) cmp pop rcr sbb stc (bad) lahf test (bad) ficomp or adc dec sarb (bad) dec hlt movzbl sub jl (bad) jle data16 call out or lock pop out fdivl or pop out test xor add stos aad and shr fldt mov imul xor insl lods cmp jb aas mov and ret dec and (bad) cmc out clc inc cld ljmp fnop lock xchg lea mov test inc imul push push mov jnp stc fbstp ret ds sarl fisubr xchg fistl movb fstpl test push in (bad) ffreep xchg pop adc or lock or fwait inc and dec ficoml or les add ret out sbb ss sbb mov ds fprem1 sbb jl adc data16 je popf repnz lahf pushf imul add or mov fwait adc in pop ja mov push mov repz jp rcl cmp cmp push jo (bad) jo sbb faddl daa cmpl das jmp in call ja mov ljmp cwtl mov sbb sub dec mov sub in je out inc sbb repz inc push (bad) add jp mov add sarb sbb pop xchg adc push (bad) xor xchg lock sbb or sbb (bad) stc and and xorps arpl mov outsb in in aad pop enter cmpsb cmc inc adc xor xor or mov mov adc repz loope cltd adc (bad) fscale mov adc fsubs push mov push pop push mov xor outsb fisubrl push cs mov jg (bad) stc sti (bad) sbb (bad) notl pop adc mov adc js lock pushf aas mov and les pop add mov sub mov mov jnp add jbe (bad) mov mov or xorl jp cmp jne push nop inc hlt rolb adc and sub push cs outsl or int3 pop mov add xor adc mov mov jae imul lock in cld pop push adc inc int3 push jl nop push mov cmp sbb mov push push repz sub in pop jl pusha add and jnp dec aam and in mov sub jle or outsl inc test or mov adc push or pop push fsub sbbb dec (bad) aad rcll in mov jecxz (bad) mov dec daa add mov std outsb stos mov jmp (bad) stc mov fldl aam or inc js loop push push scas out cs jl data16 js cli adc (bad) fbstp push ficoml je mov fstpt iret arpl adc shl mov sub imul mov sbb jg fs mov sarl test repz sbb xor cmp mov push rcrb dec xchg mov mov cli in or and fisubrl mov inc pop jnp inc cmc mov ficoml or sti pop cltd push xor mov push mov les out sbb jns in fcompl dec outsb sbb lods inc dec push and out les adc stc iret test sbb fadds push pop sbb mov icebp cmp push lods jbe mov push testl (bad) push hlt lods sub shrb movl loop jo sbb aad dec popf cmpb aas jp pop divl outsl dec and mov push pushf inc aas xor jns mov xor popa es in xchg xor lea mov sub dec jnp cwtl stc add out fsubrs cli jle xchg std int sub inc push repz stos ss daa fxam shrb mov push aaa mov out pop push pop fdivr (bad) (bad) (bad) (bad) aas adc clc push push stc cmp pop je ret adc mov inc fsubl rorb popf mov sahf mov lcall data16 pop mov xchg lahf and dec and iret shlb xor popa xor adcl cltd xchg imul (bad) (bad) mov movsl (bad) mov mov nop push std lods adc stc aam ja sbb fwait add js inc sbb lock imul sbb repnz xchg mov dec ficoml and adc rolb repz pop paddw adc adc sub or inc or (bad) dec cltd pop adc sbb xchg jo pop cmpsl repz mov inc xchg add or cld dec dec aad push inc mov push adcb in jl cs stos mov dec sbb fstpl std jp (bad) dec fcompl dec add hlt cwtl (bad) ss rcr lret repz call into xchg mov cltd sahf and xchg pop push clc mov (bad) jne xor cmpb pusha out xchg adc push mov repz in jne sbbl out aad repz js mov js push popa leave loope push pushf inc sti mov repz dec xor cli enter (bad) or jp cmpsl lret dec add movsb and lcall cmpb or xlat jecxz dec mov xchg or stos lods sarb out adc aas movsl mov mov enter sahf sahf and insb shlb rclb ret ljmp lods cmp xor pushf iret addr16 pop dec or jb incb pop xchg repz int3 cltd push (bad) sbb ret mov cwtl and in stos (bad) int3 daa xchg adc lods adc jmp cwtl fimull sub sub popf aas jecxz push jo clc add ret pushf mov bound xchg stos pop fldenv mov outsl rolb xor arpl sbb mov jnp push sbb pop jno sbb (bad) clc aaa sub cs mov ljmp mov stc and fnstcw mov mov mov subl pop pop sbb mov icebp sti sti lea jo cli mov imul cmp rclb dec insb xchg and xor in pop je out cmp jo rcll lahf aas fstps shlb jb loope int mov adc jmp rcrb mov loop lock es xor ret mov inc (bad) fucom pop sbb lret ret pop jg push mov bound cld fidivrl clc pop dec mov or dec adc push push sub aaa jl daa not mov stc jmp pop or jecxz and inc bound mov mov inc push sbb sbb xchg pop push stos xchg push or pop or test inc into pop mov (bad) mov xchg lahf gs jae hlt push aad pusha mov pop mov into fist ret xor jno sub (bad) mov insl mov cmpsb loopne push inc leave jne mov pop xbegin sbb adc test insl xor decb cmp je (bad) faddl out and jg inc cmp mov inc ja cs pop jge scas shrl mov adc ja inc xor fcoms fstps nop fsubp in test and cmp jnp cmp jbe cmp dec cmp sbb pushf jl or or test fs lods xor in jmp pop ret push pop sbb movsb jae xchg jg mov pop pop inc clc add mov shufps mov push xor pop jne adc sbb lret jb inc stc in test ret aas mov push or cwtl adc jle inc pop ljmp mov mov aas mov cli sbb jo lret fs lods sub sbb iret dec jbe sub cltd ljmp jmp mov adc ss adc cld inc (bad) push xor hlt insb jmp pop stc adc push cwtl inc enter cmc xchg pop cmc xchg jb mov add imul in xor jnp xchg inc loop jge mov sub fwait dec ja loopne cld jne (bad) mov dec sub outsb daa cmpsl fsubr xchg xchg pop aam mov jne negl mov inc les inc shll das lret add mov push (bad) fimull jno shlb fimul pop pushf incb ror fsubrs fisubr mov dec sbb sahf out mov sbb mov test or mov mov fadds (bad) into int sbb jns (bad) xchg xchg mov dec rolb dec sahf add scas add aad fdivr or dec sbb out cltd inc (bad) mov cmp out lds aam inc fmuls fwait adc jp in js lds lds inc inc add call (bad) out dec or lcall cmpl inc add mov pop hlt cmpl sti dec fstps mov xchg popf add in rcrb imul cmp fistp adc repz addl pushf inc negl (bad) stc aad xchg mov dec (bad) ja cli int jns stc lods sbb inc add push aam fsts or pop add mov jns test (bad) jbe (bad) fcomp or in or add jno imul or sbb outsb js shrb xchg jae push sbb sub dec out fadds mov xor loop mov shrl sahf or and outsl flds push sbb adc lock jno mov mulb dec js sbb sbb pop (bad) xor dec lcall dec xor sbb sbb stc movsb mov jle movsb dec push adc push int jae fldt clc pop (bad) dec jns,pt sbb scas dec insl cltd sub jb or sub push fnstenv (bad) lock xchg sub ljmp mov std mov sbb icebp ret pop mov (bad) sbb push jb xor mov or and xor (bad) mov (bad) sahf jecxz mov or inc test pop dec mov jecxz fdivrs mov mov cwtl adc stc (bad) mov inc mov jb pop cs add jl sbb stc ficompl les rcr inc pushf es loopne aad jne add dec pusha mov push (bad) std sub mov mov stc dec mov mov addl mov js (bad) mov in imul int daa dec ret push dec fwait and fstl jecxz sarl arpl jl cmpsl adc pop cmp pop in or outsb mov mov (bad) inc insl test cmp cs or (bad) mov adc stc jecxz mov (bad) hlt mov jb sbb jg aad ret imul ljmp fadd mov add mov in adc mov add or sbb sti sbb sahf jb jne imul push rolb mov inc pop xchg aas insl shrb rcrb and ja lods fstl inc insb inc arpl stos xchg insl adc pop xchg push dec xorl mov iret test jp int push pop lock ret cmc jl push fidivl lcall lods dec movsb popf sbb test mov movsb adcl inc jae mov or sbb outsl jb ljmp and mov inc xor cmpsl mov (bad) cmc les mov jo add lock cli int3 js mov iret jecxz sti adc mov xchg lock xchg loope std jl test cmp or sarb fcomip mov cld jb inc fwait sub or mov add jl lcall leave jge (bad) aas inc add pop sub addr16 out push adcb int3 pop inc sti xor fidiv inc pop mov push outsl (bad) jno aam push cmp lods nop lds mov add je cmpsl inc fildl ja jae adc cmp jg sti push das inc pop dec scas mov lahf mov movsb daa jle outsl pusha push jno push hlt sub fcmovne jno lea mov iret push xlat loopne pop int int aam lret in int test or mov es test pop sbb aam data16 int mov mov out push cmc jo dec cmp xchg xchg sbb jmp sti insb adc lea pushf xchg (bad) lds imul in cmp sti xor imul adc out notb icebp mov pop mov movsl repz pop ds dec push mov pop loopne push in ljmp enter add dec js jmp sub dec scas adc rorb rcll loope (bad) mov mov imul imulb (bad) into fiaddl jb hlt ljmp adc fistpll into (bad) inc (bad) lea lret sbb ret lret js movsb inc fsubrs xchg enter inc xchg add sub adc cmp add in mov jl call dec mov les sub rclb fwait xchg sbb cmc lret fsts or cmp lret pop or (bad) mov inc sub ljmp std mov sbb push sbb mov sbb cmp ja aad fstpt dec ret subl loop es xchg int xor xchg mov imul jae fsubs dec fdivr mov adc scas rcrb pop mov repnz fsubrp aam shlb push inc ret dec hlt cmc sub je or sub cmp jne pop jo mov ret push pop jge (bad) xor jecxz pop in jno out test loope adc fdivl lods insl out jbe mov rcl dec xchg ja (bad) xor loop jb lret outsb jno rcll adc mov dec fcoms rorb insl rorb mov inc mov clc dec adc mov movsl pop int3 pop fwait jne das add repnz cltd adc sarl adc (bad) divb push (bad) dec push les mov fcmovbe cmpsb rorl rorb stos mov pop inc cmp fild in fst xchg popaw mov pop ljmp mov jmp loope js jecxz fldenv cmpsl pushf sub pop xorb test andb mov sbb jo or fst rolb push test xor addl dec (bad) mov jnp adc (bad) sbb gs push scas cmp and sub jnp sbb push movsb cmc popf out fsubrl pop mov ret dec out in dec jp jp (bad) loop push call fsubrl (bad) adc xchg test (bad) je xor push push mov jge popf inc repz rcl out js lahf popf cs cwtl (bad) xor lcall dec pop pop dec inc cmc push dec jne outsb dec cwtl lock pushf pop lahf (bad) test dec fwait scas arpl dec jns mov adc inc (bad) addl shrl adc loope push jmp rcl std mov lret xchg jbe mov fmul or mov ja mov push movsb cmp dec jg jp lahf dec aad mov inc pop insb dec sub inc js int (bad) and aad in mov call xor push fdivrs mov pop (bad) mov pop or mov push je jo sbb hlt aas imul and int movsb imul insb daa leave jg mov bnd sub into outsl jns out pop inc sbb (bad) cmp jns xlat mov outsb adc and into repz push pop in lock push sahf cwtl sbb mov (bad) pop or test ds mov popa inc (bad) pop fidivr inc adc mov pushf fdivp aam pop xor mov xchg (bad) dec lods sbb (bad) mov pusha push rcll popa adc clc pop (bad) mov push push dec mov stos pushf push adc icebp pop std cmc inc fisubr adc sbb out sbb add lods push pop mov repz mov imul cwtl lret imul push (bad) fistpl ds xchg xchg stc mov in jl ret add jae adc adc fiaddl xchg neg adc out outsl inc test inc frstor fsubrl xchg sti in fmull cld popa add bound or (bad) xor lea push xlat inc inc ljmp out fidivl xchg add in aad adc iret or data16 or or popa pop out sahf pop sbb addb sar mov inc mov pushf adc aad sbb cmp xchg dec xchg mov cmp roll outsl mov in push pop adc movb sub cltd pop out mov js addr16 lods xorl mov rolb ja add mov leave test dec mov adc pop or cltd fcoms popf add mov or int inc subl jmp addr16 mov insl (bad) ds adc pop cmp std dec call adc out bound repz or adc leave notb pusha inc int3 je popa fucomip inc pop cmc mov and pusha dec addr16 pop shrl (bad) test sti sbb sbb insb jmp rorl mov mov adc movsl mov in or icebp insl inc inc fucomi fadds je xlat mov or sbb test scas fcoms imul cmp movsb loope sub cs mov rolb je fdivs je push enter frstor mov je xor mov pop data16 cld jbe dec inc mov jo dec jecxz jns jno rolb dec scas cmp (bad) dec adc (bad) jnp adc mov lods adc (bad) dec mov push scas loope or cs pop mov in mov fidivrl aam addb dec cmp mov cmc aam (bad) fisubl xchg imul icebp inc mull pop lret (bad) je rcrl jo xchg jge jne addb je cmp xor mov repnz dec sub leave adcb daa aaa pop das jg cli hlt sbb mov fisub xor inc out adc jo inc mov xor xchg push add les add in mov push movsb pop (bad) mov rcll je mov push (bad) loopne movsl outsb cmp dec aam insb fcomi mov je jbe (bad) out lds mov loop mov lds popa movsb push fstps or aas (bad) idivl push push in std loopne fnsave daa hlt cli jae mov inc inc mov in outsl ja xchg test in test mov sbb scas add test test lcall cwtl mov enter inc popa dec add dec xor adc lock jo xchg adc outsb and repnz fmull (bad) repz inc mov repnz or rclb cmpsb (bad) lock cmp adc aam xor int3 xchg repz arpl sbb ror das je xchg or sub das out pop add dec inc popf fwait mov fs inc push ja mov mov or cmp push mov sbb cltd mov push inc or cmp sbbl out leave lods push les and push aaa adc fcmovb xor mov (bad) xor cltd cwtl sbb bound pop (bad) push sub (bad) mov inc insb (bad) adc inc jge fs jmp leave push jl lcall xor es jecxz mov test lret stos push mov inc xlat aas (bad) cmc divl sub or push cmp xchg es sbb aaa xchg cmp enter in mov mov ss xor out jmp inc (bad) push pop test int sahf fcomps xchg test mov clc push xor jns dec adc push or rcrb frstor push in dec hlt imul pusha mov es pop stos add (bad) push daa leave dec pop mov jmp pop jae or aam fistpll (bad) mov fnstcw or shl push jb out push push loope cmc jne adc movsb inc xchg cmc jg jns lock push adc pop jge decb pop push jb push add test fxch sub les aaa jl std pause dec dec idivb stos xchg jmp std add incl mov inc pusha insb in dec jnp popa sbb cltd or cli push cmp jle das (bad) hlt repnz dec xchg cmp imul (bad) push inc int fwait or cmpsb push sti mov (bad) mov dec stos ret loop push jge lods mov adc mov bswap in jns jne mov pop fimul pop mov clc inc inc in test jle jne fisttpll mov jle out and pop jg daa push lcall adc sub dec sub dec mov add push test rclb pop mov jl stos pushf inc int in push or sub add (bad) cltd ja xor inc add pop test add xor mov fimull sub (bad) add imul dec insb mov mov jno add fiadd dec and testb pusha xor movsb cld imul cli jae sahf push jmp int3 rclb leave or in dec lods movsl sti dec xor inc sub cmpl mov (bad) and (bad) xchg push jno loopw mov inc cmp cmc pop mov cs push mov cmp push mov mov fild or jo cmp adc or loopne jbe push fidivr sbb pop adc jb xchg push push lock cmp push inc add or and and gs mov mov ffree xor adc push cmp adc push jb leave fstpt jnp,pn mov inc push outsl mov jp (bad) cli xchg mov lods push pop lahf call fcomps ficompl cmp stos (bad) sbb pop dec bound out sub frstor pop daa xchg mov inc sbb sub imul sbb fild ja ret clts jp in mov mov fidivl call addr16 aam and in mov jl cli jo pusha fadds out lcall or pop idiv adc mov add adc bound (bad) shll mov or (bad) int3 mov dec cli imul (bad) pop imul push push mov jae lock leave rcl fidivrl pop cli (bad) cmp inc mov mov adc xlat xchg add jge arpl call sbb lret mov dec popa call movsl shlb mov or lods enter loopne and sti pop jmp mov shll adc mov sbb bnd out xchg xor js test test frstor or and adc fstpt lods movsb cmpsb sti (bad) int3 fidivl inc aaa loopne lds inc inc dec dec mov fldl adc stc movsl mov stos in xchg mov mov jb pop cmp pop cwtl mov or cmp pop xor scas imull xor lea push xchg imul mov and repz dec cmp mov jmp mov arpl (bad) daa pop fistp lcall inc sti lock push xchg rcrl mov arpl pop cmpsl xchg mov mov or jle inc dec addr16 mov int inc test out sbb or or inc inc inc sahf stc sbb push fnstcw sbb push mov and mov sbb sub mov xor mov icebp or pop ss mov cld jb push or push insl xlat pop cmpsb stos pop cmp fcmovb test mov aam cmp mov push push fisubr into xor mov or mov mov aam mov pop ljmp xchg mov pushl sub stos jge loopne sub cld rolb js js je gs sti cmp aas shrb int xchg outsb ret cmp arpl insl fsubrl lret jmp mov lods jbe aad xchg pop fistpl add (bad) xchg mov jnp mov adc pop sub sub mov (bad) int3 pop pop sbb dec and lcall insl dec jp fnop jb and out lock inc jnp ficomp rcr cwtl add sub scas imul jo xlat repz fisttpll xor pop pop inc test fisubl sbb sbb jb push mov loopne popf mov pop cmp rclb jp jo push out cmp mov sub fwait imul sbb sbb cmpsl outsl lods cmp fild fsub xchg fnstenv xor dec test adc into xor dec jmp push sub mov mov imul subb insb (bad) cmp nop into imull jp push fiaddl les sbb xor dec jbe mov jb sub fcmovnb ret add adc stc or into sti fstpl add push adc loopne xor or dec mov insb fdivrs in lock and xchg ds sbb dec clc mov dec ds push pop scas out adc cmpsb add jns arpl outsl mov jno push jle mov mov repz ret jecxz (bad) std mov repz nop movsb push jg sarb dec mov gs fptan (bad) fdivl repz adc les aad inc icebp out decb push jo jae rclb jp pusha ja or mov jns loopne leave enter in xor in fldcw leave std mov int adc fwait dec repz dec jp je pushl inc aad dec lahf mov inc insb in repz mov in repnz mov sbb xchg je jmp add mov jb push lret jno in jnp lret adc jmp shrb fnstsw outsl push cmp or and loopne adc int jo mov int3 dec jle popf mov fcomi call add roll jecxz cmp pop xorl or inc (bad) test dec mov cwtl ljmp clc movsl es and in movsb xchg or push mov sbbl dec lods scas out je leave jb mov gs dec lea jle js f2xm1 cmc scas lcall xor dec loop (bad) scas in mov jg and icebp jg sub mov fisttpll sbb xchg and inc pop ljmp icebp rorl hlt js adc jp into inc add fmuls xchg sub xchg test sbb mov dec fsts pop dec jmp mov out outsl mov pop mov insb mov pusha ss sti pop je or mov stos add fimul or push cmpsl dec mov jo adc pop xchg adc je xchg inc les push addr16 fwait add (bad) xchg inc lock pop (bad) loop fmuls hlt fcmovbe popf xchg jno fstps jecxz repz jnp cmp insl leave jg xchg xor out cmpsb aam push pop aaa xchg push iret xor or in call fcomi or outsb hlt jbe call jmp rolb dec fisubrl jo,pt ja shll cmp mov or sbb sbb int pop adc enter test mov in lcall add push xchg insl loopne jecxz cmp pop ljmp mov pop fabs xor cmc dec mov xchg mov (bad) hlt es jle cmp xchg (bad) and cltd cmc add cs jecxz int3 pop mov sub or push xor dec mov sahf push not out cs shll scas push inc and fmulp jnp xor jo sbb xchg mov mov adc inc (bad) dec dec jno sbb or inc imul rorl ret std scas cmpsl mov fld adc fcomi fcomps aas popa mov out mov ja (bad) dec sub cmp inc sbb mov sbb ret jmp test scas sbb (bad) mov mov xor jmp mov pop mov add rcrb scas ret dec sbb push mov (bad) in (bad) aas xchg dec cmp mov arpl mov stos xor push adc push pop push popf jmp enter in mov jecxz sbb (bad) ja jmp xor into mov cs sub xor stos adc data16 int3 mov or sbb ss lcall push or rcrl (bad) lret jb lock xchg mov jnp jecxz rcr xchg into push sti jne ljmp mov xor xlat cmpsl cmp xor mov hlt test and iret (bad) cli or or sbb loop xor jle sub sti in mov sahf aas add cltd outsb dec mov repz mov xor mov je icebp jne je std mov xlat addr16 jge push xchg mov cmp test xchg xor jg je push add mov sti stos jo (bad) jp incl mov ljmp loopne fsubrl cmp inc orb repz out inc or mov fist fwait cld mov inc or lcall out add sbb jae daa sub call lods push aad or dec fisubrl int3 inc mov icebp rorl or pop std in cmp add in mov pushf pop hlt and sub pop pop std inc mov cmpsb add dec sarb push add jg push sub scas xchg push mov lahf aas aas ljmp fwait sbb mov in sarb pusha fs add gs or dec adc jb in pop (bad) roll fdivrs or fsubp cmp popf jle inc xchg push in aam fimul cs ret fnsave aas sbb lea int mov push mov jo shrb jecxz int3 orb sbb add out enter sbb scas call (bad) js jb push notl sbb mov and stc push mov push mov adc mov adc dec inc pop stos shlb push mov mov xchg rolb jns ret jb test arpl test cmpsl cli dec lcall mov out jge or jbe,pn sub adc ret ja (bad) cli arpl add out add aam mov xor xchg lret push enter es shrb cwtl lahf lock js mov cmpsb push push ret ss out cltd loop clc pop test gs decb loope mov pop in jbe addr16 ret xchg xchg jecxz cmp out sbb int (bad) jp arpl sahf sub add pop data16 in or popf and lcall jp push sub in leavew add push inc or mov leave call or fadds pop adc sarl js lods addl lock mov mov pusha jp dec ror sbb fildl test jecxz pop rcr (bad) sbb xor data16 or xlat or repz mov idiv sti lods (bad) xchg cld inc fnstenv add jg add inc (bad) xchg xchg cltd jecxz stc pop addr16 xchg fildll mov push negb cmp jno cmp fldcw das loope nop dec arpl jae xchg sbb movsb add adc mov jo mov push xchg (bad) decb adc adc sub dec ds es mov cmp (bad) mov mov pusha mov sub dec rolb or stos and sbb jl std inc (bad) jnp or or mov lea aaa lret mov inc stc cltd push adc divb adc mov adc into jl loopne scas cmp xchg sub jge ret mov lcall repz enter xlat int out xchg arpl test or arpl dec stos in or pop jecxz mov inc cmp adc pop nop cltd ja push mov mov in cmp outsl dec xor push and rcr popa test pop stos sub aaa adc std in lds dec jmp ja inc pop inc iret push pop adc adc test sub jne mov sub pop inc sub pushf dec insb in or xchg xor jmp jo testb mov popa scas mov je repnz and mov leave cmp pop stos in inc rcl jp daa cmp negl sbb pop imul bound sarl les dec xchg jecxz dec in inc push pusha call clc adc lock ds enter and insb in sbb imul mov sahf aam inc in popf stos repnz lock cmp cmc add addr16 jmp push lods lret insl fwait and mov ljmp jb cmp inc adc aad dec gs and and sbb leave lock dec cltd call aad stc in mov sarl test and xchg mov aam jne or jp mov aaa mov mov cmp jl arpl or mov jae (bad) adc mov test xor dec cld leave aas xchg add adc test jb mov xchg xor pop aam jecxz stos adc sub cwtl je xor pop jbe test mov sbb shrb mov inc dec ja push dec adc pusha adc insb pop leave (bad) jne inc push in dec mov and loop inc inc inc cmc dec or aaa cmp das mov mov or xchg mov daa xor xchg pusha or dec fistp lock push adc test cwtl enter mov in test int3 adc mov out cmp pop sti enter out sub mov cmp add imul pop or xor mov shr push pusha mov enter in gs push pushl xor jl lea sbb xchg lcall loopne jl and fistp lahf aam dec sarb and gs mov call ret das xchg jmp mov xor ss xor inc sbbl push jae jp lds rorb hlt subl xorb push xor inc mov mov hlt clc sbb pop sbb and mov pushfw or fs adcb inc add xlat cmc (bad) cmp or inc cli dec xor and js pop sbb xchg push pop aam cmp (bad) sbb or (bad) mov xor arpl popf test movsb jbe or mov or mov mov cli add bound ror mov jg outsl js jno scas test fnsave in xchg movsl mov loopne push sarl and add std (bad) mov cmp sbb sahf push mov mov sbb jb ret imul imul push pop pop loopne mov adc out mov adc mov adc mov sub gs adc pop loope leave mov pushl sbb or dec icebp sbb shrl push push stc and je into inc push jae insb dec js call inc dec stc out aad in leave jo imul out push xchg roll jnp push out fdivs aam mov jno add jno mov stos (bad) out mov and adc or das pop fs push in push cld inc jno pop adc dec push cmp dec adc push arpl andl or lock sbb nop aaa (bad) repz lahf mov jne push inc mov cmp jno es fdivrl rcl aam sbb rol or mov inc xor sbb mov mov repz js ret cmpsb in cmp pop xchg test js mov and in dec arpl rolb lret call or test xor dec mov mov nop jmp inc jnp jb mov mov inc pusha in jns imul sbb mov fs in in aas dec push fisttpl xchg je inc (bad) add pop xchg sarl cmpb pop jns aaa scas insb arpl and (bad) mov push fs aam pop pop mov xchg sbb lock jbe jb cmp mov dec jne daa int3 mov adc ss jns aas add cmp mov pop jne sbb in push push mov cmovo dec or mov movsb cmp cwtl xbegin xchg mov nop adc adc cmp mov ja pusha in lcall in jno jle adc test fnsave sbb ljmp sbb inc daa and pop pop in test mov out rcl pusha push loopne (bad) or data16 push xchg push mov cwtl jo popa loopne sbb pop (bad) rcr aam add cs push dec cwtl test (bad) clc (bad) mov jle pop (bad) mov cs dec or mov sub gs cmpb pop std rclb mov bnd je (bad) dec push adcb ror icebp gs xchg mov push enter cwtl aam adc push jp push inc mov push push pop mov pop xchg fsubr fisttpl mov sbb sub fsub sub adc movsb popf push ds in add jae add mov stos sbb js out les cmp (bad) ds mov int fwait in pop bswap (bad) (bad) call add mov loopne aas pop scas stos dec cwtl loope adc mov out lods in xchg mov fldt imul adc push ficompl cmpsb xchg rdpmc les sarb pop mov ja popa aad fdivr cwtl bnd pop inc or sarl in push jle repz mov ja (bad) jmp repz sbb mov mov jecxz mov into (bad) lods jbe mov sub insl mov or mov lock in add inc adc sbb pop into int3 mov nop xor int3 inc mov mov mov insl mov sbbl pushf adc stos outsb (bad) xor rorl pop cmp repnz cmp ljmp dec jae daa add sbb ficomp jmp notb fsubrs mov hlt aad xchg push stc lods push insb ds mov pop fist out add sarb js mov std sub or inc xor sti push jae insl test in aam sbb out enter ret cmp push inc sbb inc aad data16 add push in fsubr push addr16 jmp out das negb mov ret add fnstsw pop in repz int3 rorb in jo mov fisub (bad) adc jg cmpsl das xor (bad) jle out add cmp push popf int3 mov dec or inc adc cmp in sbb fcomps scas jnp in jns loope pop dec pop aam jmp jo lahf mov mov adc pop dec std or out rorb or or call aaa lds or sub fst inc rcrb sbb inc xchg std and pushl cmp cld pusha decl xchg ljmp jbe repnz mov aas enter pop dec xlat pusha das push clc test insl push xor into notl pusha sbb push add push pusha inc or imul mov push xchg xchg icebp adc pop push inc cmc mov and inc xor ret push mov loope cmp or repz (bad) mov (bad) aas hlt dec or xlat sub mov scas les cmp dec sub dec and cmp fwait mov fsubrs adc inc inc cwtl (bad) cmp bound xchg popf scas fwait sbb lods cmp add sbb pop test movsl scas shl xchg sbb or aam xor mov fwait or xchg jno mov ljmp jmp xchg pushf lret cmp mov inc inc (bad) inc jmp fwait movsl (bad) int3 xor ret fcompl push mov pusha lds adc or out mov movsl pop flds (bad) in add (bad) in jmp sub or fiadd (bad) xchg std (bad) xor lods pop ja mov jae mov jp jp mov mov out pusha popa aad rolb fisubr dec jecxz jp movsb mov cs pop jne cmp inc daa jmp xchg and sbb push dec insb push fs pop sbb xchg arpl mov pop sub cmp jno,pn fildl cltd (bad) std fmull xchg repz push mov dec mov cltd jp add inc aam dec out in in inc jo hlt pop sbb mov shr sbb scas jnp bound movsl ss push stc call dec cld add lods dec cmpsl aad test stc pop mov mov movsl fdiv lods out push mov mov dec lahf push jns rcrb pop jne lods pushl lods mov cld push pushf and push imul xor aam dec jns std iret jne jnp dec (bad) incb aam in loopne mov arpl scas lds js jl in mov push jnp stos dec bound mov mov fidivr lock loop popa fs adc adc jae and add lods (bad) aad out xor je shrb pusha jne xor rcrb xor and mov add int3 xchg mov sbb cmp out jp movsb sbb jg mov cmpsb insl jge inc add lahf inc pop xchg jns imulb daa icebp add rcl fwait repz fiaddl mov cmpsl inc aad jns into inc js sub mov adc clc ds in xchg in cltd push ficompl loope popa lods cmpsb out xor adc push add mov (bad) mov push inc sbb imul decb stos mov cmp sub adc dec vmovss add dec std outsl cmpl pop dec clc ret jecxz xchg jns cmp sbb les pop xchg into imul sbb push push cld in cld jo mov inc dec or gs test fadds add inc jle mov and cld scas cmc ret enter lods xchg in jb xchg lds cmp dec sub jg lds sub mov add xchg jmp fadds hlt rclb add inc fcmovnb jge ja jnp in fcoms sti (bad) seto icebp or jno cmpsl mov lods push fs sub cmp or xchg dec adc sbb loopne add mov or outsb or xchg mov pushf (bad) scas jnp mov sbb pop rcl stos xchg push stos int or mov mov in outsb loope in jne xchg mov jno loopne or scas jno in and add aam ss xchg stos in loop mov xor (bad) test cmpsb cmp dec dec sub js mov inc dec pop aas sbb movsl fnsave cmc popf in pushf imul fmuls arpl mov pusha ds out sub or (bad) adc sahf pop js (bad) cmp push cmpsb je movsl movsl xor sub loop mov and js lock fcoms das push aaa lods jmp add std or mov add out adc mov in mov out xchg mov adc mov xor adc imul dec sub ja xor xor or mov and stos mov outsb adc stos out mov adc lret cmp lcall xchg mov pop (bad) imul jns outsb cmp imul sti jp pop rcrb push sub xchg add repnz pop jp or push add in jb jno mov push xor dec jmp stos xor cltd not mov push pushf lea icebp adc stos lods xchg fiaddl inc xor add (bad) je xor imul mov fdivrs outsl dec lods out push mov sub rcr jl and popa stos jle add stc fs mov cwtl fprem1 mov inc xchg xlat repnz jmp es dec sub fldenv mov jnp ror aam rcl cmp mov (bad) fdivl xor stos imulb rolb stc arpl popf cmp out (bad) aad popf jae jmp fildl sub inc dec loop cmp aad jp fldcw fs outsb loopne outsb cmp insl dec inc inc dec std push mov lock pop lock and xchg dec cltd mov sbb fistpl out outsb jbe mov pusha iret inc aam xor jo leave cmc fidiv mov loopne loope enter and mov je (bad) jecxz stos sbb sarl shlb dec pop sbb call jmp or js mov add mov movsb cmp sub push adc out jae xchg xorl mov sarb cmpl pop jmp cmp popa divb inc mov icebp lods addr16 or rcl push enter out insl pusha inc jbe outsb (bad) notb add ss in adc xchg inc jbe out jns jno addr16 rclb fwait int pop add push cmp idivl rcr and test jns js rolb icebp dec adc leave inc fisubrl add and fnstenv (bad) daa add sahf cltd push and daa arpl add jp movsb test sbb fisttpl sub out mov (bad) movsl enter cltd frndint push aam ficom call jecxz js movsb mov push dec mov jg test sbb shll mov ljmp cmp cld out push adcb insl popa scas cs sub fisttpll adc cmp sub cmpl or lahf fsubs mov pop cmp add pop out dec mov adc fwait adc jne fidiv and sbb cld xor sub push cs pop adc repz int3 dec mov pop cmpsl add jg and sub mov inc stc sbb jo (bad) mov sti cltd call or fcmovne stos lods xchg dec inc imul mov sbb mov std xchg inc pop cmp fidivl lock jl lahf cmp push out cmp inc mov (bad) test movsb inc sub cli jne dec loopne cmp popf cmp aas inc sbb lcall rolb cld test push addr16 adc xlat jae imul popf xor push cmp fadds call mov cmp out sbb pop pop mov adc cli push shlb lahf (bad) cmp inc (bad) nop adc aam and jge inc in mov daa xchg mov stc rcrl inc cwtl pop mov into icebp pop enter mov jb rolb into sub jp das lret pop sub mov aas dec mov fmulp fmulp adc fs leave std (bad) sbb xor jmp movsb or adc lea mov push call sub aaa aaa cli mov int lcall mov rcrl ja mov mov inc cmpsb es inc scas jne inc adc ljmp out sbb fadds sar mov aad ret sbb je ja jns add jne sub xorb xor std sarb jge out adc lret (bad) in loop adc in xchg add cmp cmp sbb adc mov cmp mov sbb test stos mov (bad) jne cld sbb aam pop jmp roll int push pushf adc cs imul scas or mov mov js lret aaa fcoms into adc sub dec mov xchg (bad) pop adc and dec in aad pop mov xchg jbe xchg and (bad) dec adc pushl push sbb js invd push and jle adc mov jno cwtl hlt jo dec fcompl pop mov push pop roll rclb mov mov stc pop or call lahf mov rolb fnstsw xchg adc mov xchg and cltd fsin aad fwait or add or (bad) dec das jg sbbb sarb test xchg or mov jbe int3 mov ljmp sti push jb loope rorb sbb call jo mov jp push std sub cmp and jnp fdivrl mov pop lret cmpsl jmp int3 (bad) js nop data16 or xlat es sub into pop mov or enter jns cmp in pop sbb pop mov pop or mov incb jns lock cmp adc mov (bad) push pop mov adc and jno and jne jg push jp jo mov fimul cmp jns les adc pop inc fs je or fidivr xor lea in insb push icebp out and or jp cli cmpsl jp sbb mov mov pop mov or shl aaa adc push jmp cmc pop hlt je sbb dec call in fdivp ljmp leave lcall in es fwait cmp pop mov ja jne,pn out pop loopne in jne xor pop dec or sbbb call cld stos or aas xchg mov pushl daa add or roll ss and mov pop int enter adc xchg adc jne mov dec rorl jne daa stos push cmp pop fcmovu add ljmp jne,pt sbb (bad) movsl sbb adc cmp adc or cmp test jb sbb xchg out xchg (bad) cmp add adc mov aaa aam xchg dec dec sarb jne fsubs or lods nop pop sub push jl jl cmpsl sbb jmp inc popa shll lcall mov xchg fistpl or loopne adc hlt (bad) sbb out popf (bad) scas loope shll sub pop test inc sub sbb or mov cmpsl lahf sbb cmp imul jb (bad) pop push outsl out test push cmc mov test aaa orl in lds push jo enter loop mov jmp adc cmp xchg insb sub fwait loop pop mov aaa adc rorl jecxz fcmovb or aaa fidivr mov sbb fnstenv insb jg pop or (bad) push adc jb lds ja ds test xchg rcrl arpl sti loope fdivs push pop jg cwtl cmpsl fimull adc ljmp pop and sbb ja sbb dec fmuls test jnp mov dec xchg jl outsl sahf jmp sbb int3 stos adc js int lock insb pop mov xor mov clc les clc les or jge inc aaa faddl insl or out mov outsb inc cli sbb push imul xchg sbb sub lahf sub (bad) cmp mov pop adc in mov addr16 rcrl std and sbb jg mov mov sbb mov out fsts push fdivl inc mov hlt xlat add push ret fisubr xor clc pop xchg mov adc rorb push cmpsb ss dec push or pop cmp mov bswap adc popf push sbb daa cmp jp out loope inc movsl rclb dec or scas mov add mov add aas and jg sub inc jbe mov fwait icebp imul call fisttpll xor jb icebp sbb repz insl push lahf push jns xchg in test jb std mov popf in mov aad mov int (bad) jg jb lcall mov cmp or push (bad) out shr cmp aad std dec mov push (bad) call push mov pop pop fildll sahf xor pop lods mov (bad) mov aad (bad) mov ja lods mov mov cltd push push outsb out repnz push outsl out dec lock addl jle leave jns mov mov push inc mov out test aad jne jbe jno xchg imul push and mov imul mov lods pop lods mov adc es mov mov dec (bad) jo popf adc test cmp mov shll or mov (bad) vaddpd popa sbb jo add and (bad) sub mov jge pop jmp pop pop in fcoms mov (bad) mul sub out scas xchg mov push mov into jecxz je sarl push cs mov stc repnz mov jne add cmp and movsb mov sub jb sbb mov popf mov add sub dec fisttpl out je sar (bad) out cmp mov cmp leave sti outsb lret test arpl lcall (bad) lock js mov mov mov in dec mov rclb and stc mov inc push pop mul fnsaves mov insl ljmp mov rorl aam mov pop orl mov push (bad) fcomi jge or xchg in lret add xor loop stos pop imul sahf shrb in popa inc test mov jge mov adc lods push inc mov hlt pop fadds in addl adc call xchg mov fstpt xchg bound and push mov xchg mov fildl cs pop dec fs test fmuls loop add neg inc push sti (bad) shll adc lods inc mov rorl xor mov mov push push or sahf push dec hlt (bad) sbb xor outsl sbb in mov adc and adc (bad) cmp add adc in mov sbb movsb cltd call or dec (bad) (bad) ficompl imul push xor adc mov xchg xor popf int3 mov sub leave sbb mov xchg jle fldcw outsb in mov xchg fldenv dec jo ja pop xchg mov xor adc jp xchg mov xchg mov xor fcomps jl jle imul imull sbb xchg imul cmp (bad) dec divl pop fcom insb push add fstl mov int3 fdivl mov aaa aam into push clc xor call push icebp jne mov pop arpl dec orb insb imul fistpll mov test xor push sbb xchg ficoml in push lods in addr16 lret lds push dec and cmp outsb scas cmpsb rep out fucom call bound je inc rcl jo loopne and aad dec adc jg pop adc ret out add pop outsb add mov inc repnz jmp cltd lcall jb and sub mov repnz scas and sarl ja cmpl js mov mulb sub (bad) pop push pusha and sub jne mov dec lods frstor (bad) xlat je insb mov paddq push movl or in and js ret fstpl leave inc or mov dec mov js es test mov test (bad) cmp push sub or sub shlb jmp lea pop dec dec ret repnz scas mov cmp jge leave and dec dec popf mov jno loopne std push adc movq push jmp shrl dec jns int3 xchg ja mov inc mov (bad) xor les sub fisttpl dec push xor ja rcll loopne aad pop clc clc mov xor xor sahf dec push clc fisubl xchg cmpsl fiaddl jo dec cmp push push js dec (bad) xlat lock pushf push mov (bad) xor fsubl push mov stc pusha imul fwait jnp jne inc inc sub push cli aad xor aad pop sbb dec adc jno int daa fadds sub rcrl mov lds jle push out lock (bad) jbe shr scas (bad) ja dec in (bad) pop jmp sbb es jmp enter cmpsb mov lea jns mov iret (bad) jle sahf xor xchg mov or fldcw rorb into jecxz ljmp (bad) inc fs cltd iret loopne cld or or out pop (bad) (bad) lds xchg add pop movsb pusha (bad) in jecxz aad sbb pop stos sbb adc fsts and (bad) lret dec dec or inc jecxz (bad) adc fsubp jge lea jne clc ret push fs and mov fimull (bad) adc inc sub push fdivrp cmp mov inc push inc call lock pop or lds aas outsb xchg mov dec loope mov stc test sub jecxz fsubrp xor ljmp xchg fild in jno cmp dec rcl mov dec stc xchg sub mov stc aam idiv mov addr16 dec shlb mov mov push sbb mov fnstenv in repz mov dec pop cmpsl add addr16 add fld adc jne adc mov jb add (bad) push add xchg cli jle mov push dec mov ss imulb stos in xor mov nop jmp jl mov xor movsl clc sbb popf adc sbb loope (bad) movsb mov push iret pop es add add enter lret dec imul xorl pop sar jno cmp lock adc cltd jo fldl2t jae imul ljmp jle adc pop sbb push pop aad push insb adc push or push pop das popa lahf ss out pop adc js mov inc mov mov pushf adc jns push inc and dec pop and cmp aaa push jne sbb push lods shlb mov push aas ss adc sbb cmpsl sbb mov pop jns rcr sbb jne add repz cltd js in cmp fildl mov sbb out ret inc push out jnp gs ja mov ljmp stos jo push adc push sbb xlat mov sbb in loop sbb dec push ret pop fs fldt xchg dec rcrb in xlat cmp xor inc imul xor data16 adc (bad) fistpl pop outsl xor int add inc mov fistl faddl and lds loopne push je mov or mov or js adc aad push sbb (bad) push enter out jmp add xchg daa in scas dec jae cmp add sbb scas bnd (bad) in cltd add ss add insl push xlat inc cmp push mov pop mov inc push sub arpl push jne (bad) imul inc push jle ret aam sub lods js push loopne stos push in mov aas nop fs dec les mov inc hlt dec mov push sub aam pusha sbb jne fistpll jne cmpl xor mov loope es pop adc pop pop inc lods or push scas xchg fidivrl lods xchg rcrb (bad) scas mov sbb add xor xchg jmp push lods adc lock sub outsb out mov push dec xchg inc adc mov mov and ja ret pop ja jbe je loopne adc roll in pop sbb pop adc shll ja xchg cld andl jg inc mov inc out add fs jns add add adc sbb mov mov push inc mov fcomps out xor shr add pop jo iret sub inc lds xchg call ret fdivrs lods leave xchg iret test jno pop cmp hlt clc arpl repnz jle cmpsl clc pop push cli shrb stos hlt mov test sub sahf jp into test dec pop adc imul xchg cmpsb cmp (bad) in test movsb cmpsl dec and repnz jnp adcl stc dec mov loop dec jnp sbb sub lods sbb jns aad sbb adc loopne cwtl call bound xchg daa and jmp in add cmc jns (bad) mov lret hlt jg aad clc loop js (bad) call inc jne orb dec iret xor mov sti rcll shll jmp std aaa lods mov push (bad) scas mov lret movsl divb push test push fldl leave push pop stos fstp push (bad) std fstl mov loopne data16 repz repz lret xchg test sbb pop pop pop sub aad mov mov dec imul dec scas or cmpsb sahf in xchg popf fcoms xorl xchg sub js jae out into nop dec or (bad) stos pop test cmpsb (bad) cmp ficompl outsl inc and js rcrb fdivrs adc nop add stos sar (bad) aaa (bad) lock push sbb jo dec jb leave pop out rorl inc insb pushf xchg push lods sbb mov push test jns mov sbb fisttpll or inc jl xor outsb pop jbe jbe push es insl and adc loopne mov (bad) sub xor sub mov in std aad xchg scas mov divb xor cltd rclb cmp idiv js aaa add xchg pop shll sbb jmp flds inc sub callw mov test adc lret pop popa inc pusha adc cmp lods sbb sub dec mov mov cltd mov ds jge push add jo (bad) push or or (bad) push jle es pop in cmc mov or mov lcall pop dec aad mov adc sbb adc js inc shll fmuls cmc mov test loop (bad) test sbb inc stos (bad) push out pop jb pop jge sbb cld pusha (bad) or roll ds jle and fcomps lock nop popa push push ja push or add pop daa ds insl aaa jb arpl dec idivl cmc mov std (bad) xor jo push push repnz insl inc push shll mov sub idiv dec mov jbe repz sbb dec rcrb adc test sti inc imul cli cmp stos mov (bad) push dec repnz insl in mov imul inc mov loop (bad) add pop or sahf js mov push add sarb or mov loop mov fistpl jnp mov js sub stos shlb repz xchg int3 sbb repz or sub fldt dec lock int3 int shrb mov out sarl and mov aas je adc adc scas repz daa adc jnp leave mov repz cltd cmc jnp mov arpl adc insl mov add and adc repz jp daa dec mov dec fwait sti add cwtl dec mov sbb mov jmp dec dec or add gs movhps shlb imulb addr16 test jae cld sub or ds stos jno sbb dec push scas mov push xor jle pop mov ret gs push jo data16 fmuls std mov (bad) std pop xchg jae and test mov jnp mov negb roll and js jl mov pop jae mov mov faddl adc (bad) cmp jns sub push pop in inc jbe pushf fcomps test cltd rorl (bad) data16 test mov dec (bad) jnp cmp aam cmp inc jae incb jno pop add mov push dec jns sbb stos lret push and repnz shr mov cltd or push fdivs test std cmp sbb jns sbb cmp mov adc lds pop inc lods popa mov add cmpsb or mov and (bad) jb call adc jns mov push iret push hlt sbb pop jae fcmovnb dec das enter mov xchg clc (bad) mov hlt xlat (bad) sti int inc push stos hlt outsl jp out imul mov or push into add ret sti mov fdivl pop daa fisubr js mov (bad) js and and cmp jb add sbb mov jae repnz fdivrp mov mov pop push mov inc pop push dec or iret loopne cmpsl dec daa fistpll dec cs inc mov leave dec loope mov pushf orb aam das pop cmp in in out mov rcll je test adc jae sub lock insl aad add ss xorl xlat push (bad) sub jns push or jne aad add cwtl and mov jle xchg cmp and pop xchg adc roll adc lret movsl and pop scas jl fstl inc mov repnz mov popa clc call jnp xchg aad or push pop movsl mov call pop stos jg and pop push cmp gs jne or loopne cmp inc icebp lods std add mov insb ljmp cmp repz xlat and sbb pop bound mov jp push lods popf dec cwtl cli in shl cli dec push mov fiaddl (bad) sub add jnp push pushf loope pop (bad) cmp sbb add gs test adc loop mov fisub ja pop mov imul cmp cmp inc push jl push push sbb inc dec std test lock fdivs (bad) xor insb push cmc push sub dec (bad) adc jne push fist in add shrb fnop xor mov iret push mov add fcomps cmp sbb jno xchg fildl leave and jge push fiaddl pop and mov test repz sbb fdiv sti mov int3 in icebp ds lcall inc and jo mov repz adc jl inc mov ljmp cmpl in jnp dec mov cmpsl (bad) mov movsl mov adc inc or in idivl std lods pop pop (bad) mov ret sbb lea mov sbb rcr xchg (bad) inc jmp lods sbb movsb fsincos push divb push mov in pop mov or xor hlt mov pop adc mov mov sbb bound lcall pop add fsubs mov pop sbb jne (bad) out dec lret mov stos cs loop jle popa xor dec dec pop sbb and or adc aad mov add (bad) push fiaddl dec mov (bad) rorb sub mov sub sbb rorl and js and mov lds test pop ljmp push or js mov push (bad) je cltd sbb adc xor movsb add push test fnop les arpl jg hlt xchg das loopne in push mov pop ret mov mov out loop fwait jne or xor ljmp mov fimul pop (bad) jmp fwait jg sbb insb xchg jae mov jae dec scas cmp jnp in in cli sahf jmp mov fsubs cwtl or pop aam aad jg (bad) ret fistpl inc push cmp push out js fs push sbb jbe mov pop xchg fildll cs jnp iret inc pop cmp stc lcall aam mov xor cmp mov adc and mov ret sbb add mov push inc fiadd add inc push sub mov sahf add or push pop push in ret push mov jns rcrb pop mov je lock lcall adc xor pop ja sbb add std ficom xchg pusha pop enter pop sbbl int movsl popa icebp add shrl dec repnz ss repnz mov repz repz xchg add leave adc out int3 cli mov frstor outsl jl inc rcr cmp cmpsb mov cmp mov inc sbb jecxz mov test push pop sub mov push lcall push cmp lock jo ss mov inc lahf mov fdivl jmp js push add iret cs out xor outsl xlat adc shlb imul cmp push pop shll push bound lret pcmpeqb sbb std into push jmp pop mov sub int stos out add pop stos fsts mov ficompl add clc mov movsb push adc frstor sti stos jg xchg in mov insl (bad) push cmc lret aas repz inc jmp lods push loopne rolb arpl jecxz jmp jmp test jp jae xor and lret inc sub mov cmp scas lret fs cmp pop insl push mov jecxz dec lods test dec std inc sbb loope cmpsl pop ljmp push fbld sbb out or je popa add shrl imul sbb notb add cmc adc adc lods mov clc inc loop xchg psubusb push adc addr16 lods pop or inc xor cli lea (bad) dec call (bad) add stos imul or cmp xor les mov jmp stc scas add adc jno push adc movsb popa cmp int3 push mov and or xor outsl add cmpsb dec jae cmp pop mov push pop add (bad) popf xchg lods xchg and push in sub aad mov out shll xchg dec scas mov in popf jns pop out push push fildl cmp sub sbb sti inc test dec cmpsl in push xchg adc ljmp mov out xorl fistpl and pop mov mov mov scas es popa xor cmc mov (bad) jecxz (bad) mov sub push jge cmpsl (bad) mov or not ret sbb sti ljmp mov dec out test or mov push dec sbb pusha push in scas mov pusha jl data16 pop and xlat ret je fistl mov push arpl mov shl pop lahf jge testb jnp clc roll push mov daa push jno jne push mov sbb cld adc or mov je and jno mov das int es mov dec pop notl fcomps fsubrs sub fxch inc mov or (bad) dec or pop sbb mov mov (bad) jb insb fnsave adc sub sbb push sbb imul mov push (bad) gs dec ret fnsave std aaa pop aad imul inc push int3 rcr adc arpl ss cli imul pop cld jl mov mov push out movsb cli and lds mov insb adc jecxz mov dec leave cli repz jp jb outsb jmp int jg add sbb jl xchg test cmp fs xor shll pop int3 out xor in jnp sub xor sub mov jecxz mov (bad) jb adc in out xor pushf ret std fsubl jno dec ja (bad) ljmp jnp arpl add push rcrb lock xor push mov sub xlat scas mov adc sahf jg imul or stc mov inc insb jecxz lcall out dec xlat and in dec (bad) cld xchg in push adc adc aam in jle jmp push fildll or inc mov jg fstpl or mov fist (bad) insl fsts les mov push jle adc shll test push pop lods push sbb and mov sbb cmpsb outsl lods or dec jg inc loope hlt ja das outsb (bad) idiv pop mov scas sub mov pop stc out shll loop je andb pop call dec pop lods mov mov and gs jo mov (bad) int3 xchg sub dec rclb test movsl xchg adc dec (bad) mov jo fistpll mov sbb push pop sub in add cmp add dec in lcall push lcall push sbb insl clc cld scas cli subb mov sub fnsave int inc call jb or add sub pop jae ljmp pop cmc xchg cwtl fisub loopne push mov jmp cmp (bad) xor mov dec mulb enter cltd xchg or add inc popa dec xchg fadds pop cli je pop cmp pop pop fdivl cmpsl dec jo loopne add inc insb jnp mov add mov pop add data16 push fdivl out mov in call in arpl fstl (bad) push add adc sbb cmp sbb pop push loopne mov in sbb push push inc lods rorl ss add in xor jp sbb sub data16 test (bad) fisttpl inc sbbb lahf sbb xchg pop xor or jp cmp inc dec mov outsb cltd icebp sub add cltd cltd rol lock scas lret add mov lret sub bound mov data16 inc inc xchg push adc inc scas cmpsb sbb (bad) repz shll jmp adc ja enter jns cwtl lods jne scas cmc add imul pusha pop mov mov push mov xor sti fdivrs sti xchg pop xchg out lods xchg hlt scas push sub aam xlat jp or loop push cmp (bad) inc mov outsb stc data16 jb dec in mov dec cmp pop lds repnz mov mov lock mov insl cld (bad) mov or (bad) jns jle inc inc dec fistpll or stos push push ljmp inc push cmc pop push lds push mov add add inc (bad) cmp adc (bad) fldt (bad) pop xchg repnz mov sbb imul mov xorl (bad) sbb sub push jmp sub hlt adc shrb enter into imul pusha (bad) daa jae fstps in sub jbe (bad) bound arpl pop aad jno hlt imul mov test and push dec xchg gs push in push mov mov shl add call sbb daa insl and pop dec icebp (bad) cmp movsl in sbb or jnp cmpl push sbb inc in lods push lock bound xchg xchg cmp aam std add push out dec mov fwait dec or lret pop popa mov ud1 stos sti mov (bad) in sbb je mov xor scas add ja pop sarl into les jnp mov push adc fs pop js clc mov pop out popf mov inc stos jo (bad) jb stc push or cmc nop add rol pop dec repz fdivs add aad mov jl bound in aad push jns sub jg scas lods mov outsb dec jl into push jmp push pop lret rolb pusha xlat js push jb sbb shrl divb sbb adc jp dec pushf ljmp sub ljmp fdivrl adc jns and lock cmpsl out enter aad sbb fsubrl sbb cmp and dec pusha sbb mov cmp test fsts xor lods addr16 xchg insl or icebp mov stos mov test std stc test xor shrl adc into sub jle in clc mov (bad) pop (bad) sub rclb insb es mov pop lock sub cmp fildll or call xor dec jbe rorl insb stos mov pop xchg jp pop (bad) inc outsb and adc xchg popa jp fnstenv sbb or mov xchg dec cmpsb outsb sbb sbb jb pop mov sbb xlat xchg mov lock (bad) cmp fstpl pop aad push xchg pop sahf test and push rep sub mov test sbbl pop repz fdivrl inc xchg jg sub frstor ret xlat out jb pop es mov ljmp mov cmpsl sbb addr16 push cmp cmc cmp inc push (bad) dec repnz in pushl push mov pop popf pop call xlat inc pop pop cmc cltd rcll adc jae sbb cmp out or test push jne in outsb lret fdivp cmp mov loopne inc in xchg not inc pop rol lcallw mov lods pop pushf cli stos cmpsl shrw test lret add mov inc dec cld shll cmp add scas in dec mov xchg cmpsl xchg or or fwait loope fldl mov ss and bound je aam fstl (bad) rep fildl jns sub (bad) stos test xchg sub negb jecxz fisttpl dec pop mov decb or jge testl out mov sbb sub adc (bad) mov xlat and shrd mov arpl lea sub push pop fwait or cmpsb sbb leave sahf (bad) inc cmc rorl (bad) dec xchg or xor xor clc es add imul ds (bad) shlb add idivb roll jg xchg mov dec enter fistp jns jns or push xor sub jle (bad) inc inc xor jne xor ja pop pop mov pusha pop inc and inc xchg cmp test call pop dec xchg aad or cmpsl outsb imul mov mov jecxz rolb jbe repz xchg dec and sbb neg adc sub push xchg jecxz js fwait scas outsb mov insb aaa dec (bad) stc movsb pop jmp stc sbb mov and cmpsl sti pusha ret int dec lods fwait push stos pop jp lods iret rcrl jp clc sbb add hlt mov in mov fs mov shrl xor dec sahf fnstenv inc jo jl daa lods ret pop mov and lods push jb cmp fucom je outsl imul cmc aas mov sbb js mov lods test mov lahf fwait xor cmp jbe xchg mov inc add pop xor mov or je and je loop mov lock fcomps jb add out out jle inc jecxz mov sbb int stos (bad) jb mov je jo adc les inc punpcklbw insl call dec add enter xor push and stos test mov add or sbb into inc xor mov mov js or cmp ja jmp in inc jnp in js cli and js push lock cld out sti fs inc je cld ljmp addr16 fadds cwtl jns or add repnz xchg call mov rcrl stos lret sbb mov or or push outsb jl test fldcw stc dec mov lock (bad) or in cli pop pop lods std out fidivrl cmc imul inc xchg lret push jge out mov int test cmc push xchg adc mov fs inc fidivr add enter mov inc outsb sub mov mov and cltd mov cmp dec jne idiv xchg lcall hlt fs ret adc sbb sar add pop sbb add cmp or cmp sub mov js push cmp adc mov dec mov mull loopne mov dec lcall lods lcall sbb dec iret daa mov imul fisubl popa lock push dec divl jnp jo mov pop xchg or push ds jo std sbb lds mov in jmp dec add sub push xor pop mov xchg cmp shl iret test (bad) mov pop lods sbb pop das (bad) mov dec push sbb lahf ret loop adcl (bad) test mov dec pop mov sub or cmp mov ljmp mov cmpsb xchg daa fisubrl mov loopne ljmp mov sti (bad) cltd or mov ficompl push loop sbb sahf mov sbb xor call inc xchg cmp ljmp scas cmp outsb mov add mov push outsb mov pushl lds mov push sti ljmp mov mov (bad) and sbb das sahf rorb das sub inc mov mov jecxz sub jmp mov out pushf movsb scas push dec dec clc pop rol fcoml jns das push add insb aam out test add test mov jp mov test xchg shll jp aam insl xor jns stos fdivl or enter and push jg sub in inc repz adc push jbe fistpl imul daa push test test (bad) outsb adc jbe cmpsb sbb xchg sub sbb (bad) mov adc icebp mov dec repz or js pop inc cli scas rclb sti jecxz dec lds jo shrl sahf pusha cwtl fdivrp sbb arpl fdivr push sub or ljmp aaa push (bad) fldt scas inc mulb cwtl int3 dec and jge sahf push mov sbb xor mov ja lods hlt js adc jl mov adc and dec sbb add test mov out or and push fsubp (bad) stos scas xor dec (bad) arpl jo add dec mov jno loope out dec scas clc mov pusha icebp pop sti inc test inc lcall jl jp femms xchg jl daa sbb scas test sbb out (bad) jl add add (bad) js xor sbb lret inc xor popf add faddl mov into rolb inc call mov loope cmp sbb pop inc push push add cmpsb mov or fcompl out push mov inc xchg mov inc fsts in in mov outsl lods sub rep pop dec mov pop bound (bad) xchg push mov in jbe inc es roll mov inc push ljmp js jbe push pop sbb adc push pusha mov xchg pop push jg sbb cwtl xor push add stos jo xor push pop cwtl sub jecxz add jge push scas and out jo hlt std scas pop movsb push in clc out adc mov mov mov (bad) mov or ret lods out out movsb pop push scas js adcl pop mov fidivr scas cwtl testb fdivl sarl pop in pop xchg ret arpl push inc pop cmp mov insb lcall xor mov mov testl cmpsb xlat andl stos sub stc sti cwtl or aad dec mov sub std mov and scas sub xchg push jno jmp call inc decl inc jge inc lcall cmpsb lock sbb out out sbb in imul cwtl adc mov andb cltd mov push add je daa mov aaa and push add in push test in push mov ds daa aaa sbbl test dec mov popa lock push fldl pushf sub rcll les or repnz push std sub pop nop and cmp and (bad) mov xor lds cltd adc xchg sub lods push dec pushf xchg inc lcall or fcmovnb jb add pop ja test sbb scas push loop and mov adc cmp adc push (bad) mov jbe inc movsb inc mov sarb dec mov nop and sbb jg in dec and ficoml sti fist (bad) sarb sbb lret push sub dec add incb andps mov inc aad hlt mov sahf imul out inc pop fcomps inc std mov fdivrs addr16 mov rorb imul sahf insl test popf xchg mov fisttpl xchg addl stc lds imul add xorl mov popa (bad) sbb arpl test (bad) sub addr16 dec pop push adc negl out xchg data16 jno gs movsl lcall lret push or imul add push sbb psrld pop int sbb xor mov jbe or lcall inc or mov and js (bad) popf imul and xor inc push mov sub cmpsl ljmp cs ja or pop test test scas adc insb fstps hlt jp aad cmp dec push push sbb and jbe adc mov mov scas push ljmp or xor lret mov outsl ja in pop outsl out hlt dec popa into insl mov in sbb daa stc adc test fdivrp js out aam sbb pop mov add cmpsl push sarl mov push jne push enter xchg adc dec (bad) in jp mov sub inc mov mov mov dec movsb (bad) mov arpl addl sbb stos sub popa popa and ror xchg mov clc jle sub or rorb lcall fs push adc and rcll insb jmp jl push nop fistpl push mov xor cmp test sbb dec mov repz daa shlb iret cmpsb inc cmp ja push jecxz xlat mov xor add divl in test fwait pop add sti es repnz inc sbb aad idivl push loopne ljmp jmp dec fisttp xchg cmpsl mov cmpsb je ja lret jmp cmpsb xor push frstor fisub jp fcompp pop ljmp mov addr16 fstl adcl dec xchg loope icebp popa and fs or movsl mov in pop jne cmp push or sub pop mov js dec xor out sbb cwtl cmpsl scas pushf mov test mov jg in dec sbb adc dec call sbb xchg je lods xchg cmp xor fmuls fsts sbb cmp data16 cmpsb sbb dec adc repz push mov cltd imul xor jmp inc mov adc add mov cwtl sub cmp pusha inc lret pop mov sbb mov or fwait cmc xlat out lods mov scas aaa push lcall aad jae movsl addr16 rcll xchg pop rorb aas mov inc movsb clc sbb add lahf in lret and and ret sbb sar popa push lret xor int outsb or test and mov hlt gs arpl (bad) stc popf cmc cli hlt test jecxz xchg inc in fldenv sub in rolb iret and in push sbb inc rol sbb test dec jns repz shll gs pop setbe push add sbb adc or out call dec js (bad) cmp and imulb pop notb add xlat rcrb test push push mov and or jns xor push pop mov sbb push or adcl sub xlat sbb add and mov and jo xchg ja sub mov (bad) or in cmp mov test adc sub push add incb pop sarl ss adc lods sbb in fistp psubusw xchg mov jecxz sub and cltd xchg xor cmp jecxz cs jno into vpmaddwd repnz sahf jp jne std xchg mov mov xchg ret sarl xor jno sti push dec xchg insl sarl jbe jns std and push mov inc jo js aad pusha xor faddl icebp scas push adc pop lret aad adc xchg es jnp stos push (bad) inc sub pusha dec je inc cwtl aam shl shlb rcr loopne jmp jbe fsubrs (bad) call inc cmp lods jle jb in in pop pop push adc lcall sub rcll inc ret stos and in add or jge (bad) mov or fwait pop outsl inc mov fstps inc xchg cmp je ljmp mov and push fwait scas or (bad) mov sbb inc mov in add mov scas decb jae loope mov or pop cmpsb add cmp (bad) aam jnp je nop push mov adc (bad) out pop hlt lds xchg push sub push cmpsl jg int3 mov dec fmuls xchg call int3 xchg in in jo scas mov xchg dec loope scas xchg xchg (bad) or andl pushf pop adc or icebp sbb cmp push out cmpsb mov (bad) ret add mov (bad) mov movsb (bad) xor mov (bad) mov daa mov or dec (bad) hlt dec cmpl pop jae jp adc xor mov (bad) and dec xor test add scas (bad) repnz pop xchg (bad) mov xchg or mov lock out (bad) mov cmp fwait das or or xchg add lock pop pop inc xor test mov pop lods mov jg cmpsb dec pop mov xchg (bad) mov and scas xchg stos cmpsb sub pmaxub xchg sbb jge or loop and sar sub jbe push sub mov ficoml adc or outsb test cmp lds lock mov shll rorl xchg and adc stos lcall imul fs arpl and rcrb adc orl add out mov aas pop cwtl inc fdivr sbb cli push cmpsb mov data16 and scas adc mov cmpsl call cmp adc test in push mov std cmp cltd mov (bad) sbb lock add pop mov dec push jns sub arpl testb mov enter push je sub push stos dec jp std dec aad das mov fisttpll or xor sarl stc fstp pusha ficoml mov fwait push or ss adc test data16 xor mov es mov mov add dec cmp mov ret lcall pop out xor imul lds out mov insb testl jl xor lods ret push jb xchg cli adc int insl gs pop scas sub mov lret or rorb or cmp jne fidivl sbb lods stc pop push test push dec jb lock in or mov sub ds push mov test stc call jno insb push fisubrl call push push scas in das scas jne loopne dec (bad) test cmpsb pop add pop cmp clc lret repnz push push loopne divl jg shlb mov ficoml je loop rclb jbe outsl xchg inc ret mov dec mov mov ret sub add dec scas js addb mov (bad) test scas jo sub js mov pop inc ds xor dec add ljmp sub mov push outsb sbb (bad) mov out shrl fxtract xor lds je cmpsl loope ret jb mov std add fmuls out cmp inc cmc movsb scas pop fwait inc hlt adc inc out or cmp sti pop cmp cmc (bad) movsl mov xlat cmp call cmc movsl stos or jge mov scas pop loope ljmp dec inc aaa (bad) stc push mov cmp daa pop cs lock subl push std jnp bt sbb out sahf push ljmp jno push movsb das and popa push or push push mov xchg arpl lea pop jmp sub and jb push imul iret out push cmp xchg mov sbb loope mov repz ja jno fs xchg cli imul push jecxz pop stc push xchg cli push jns fldt neg inc mov mov pop incb bound into stos enter pop jae push xchg in add loopne pop dec xor fstpt pop bound mov mov fnop push aad scas in fnsave pop and (bad) neg push fbstp les out mov sbb sub repnz sub xorb mov decl add push popa mov jns mov dec lods and scas xor mov mull ja mov inc mov into lret sub xor fistl ret bnd and pop sbbb cmpsb mov ljmp inc rcll add scas xor (bad) testb mov or in (bad) mov test cmp jbe leave adc mov cmpsb clc sbb out push xchg repz jo mov inc int3 sbbl xchg pop lock stc repz xchg add sarl add push ds ret push icebp repz cwtl push std call pop add cs or test (bad) jecxz mov (bad) rorb adc ret jbe jl (bad) ss imul sbb test jge adc fwait rcr mov add fwait aad sub inc cli pop (bad) or jb clc imul fisttpl (bad) jno sbb inc inc outsb mov cmp out sti jle loope (bad) data16 (bad) mov adc and pop pop fisttp test les jbe mov pop (bad) int movsl pop bound xor mov sti pop cmp out mov pop pop sbb (bad) test dec pop (bad) stc push mov push jge add mov cs xchg or mov mov mov mov cmpsb sarl divb jns mov and scas or xor inc jl dec cld jge mov cwtl push mov add sbb push adc loop jle push bound (bad) out or and enter cli push in sbb push or gs ja (bad) push pushf fdivs mov out mov scas or shr pop inc jo mov push scas adc or push sti aam mov push inc lea xchg (bad) mov sbb (bad) cli nop pop in pop sub push out mov nop les pop inc jo mov cld xchg dec aaa mov enter adc lods sbb sub out sbb enter jnp (bad) jmp sub fstpt arpl incb test lock push ret (bad) aam dec xor in ja xorl mov orl test xchg into js pop ret (bad) jmp mov fnstenv sbb shll mov mov or dec xchg es sub sarl fcmovnu aad jge leave pusha subl in lret and inc push out repz fwait and xor ljmp xchg xor das stos ja pushf std test test lods loope xor nop negb push xor dec cli push jecxz or mov and in movsl (bad) pop sub hlt inc inc into mov scas xor lods dec cltd lods cmc mov cvtps2pd inc loopne xchg imul jmp fild inc pop test std cmp test mov cmp lea sbb iret test push cmc push adcb popa movsb daa out lods pop fdivs dec inc scas lock scas lahf and jge fistpll mov les decl into clc cmp leave call adc add aam (bad) dec std xor sti enter xchg mov jo dec leave fwait repz and pop sub minps xchg add push popf fstps lods ret sub and and and cmp lods inc cmpsb push out cmpsl mov xchg sbb loope sti pop add (bad) jmp and adc and pop (bad) lret dec shll push pusha mov cli mov mov adc es push add into repnz and cmc mov aas sub cmp imul and test pop fnsave lahf test xor pusha daa lods cmpsl dec rcll dec out (bad) popf and mov mov xor xchg test jns aad jns pop pop loop (bad) js mov (bad) js mov std mov les push dec fstl icebp jo mov xchg test lods fwait sub cs push mov xchg cmp pop js mov mov mov sbb fwait push mov xchg fsubrs lret fsubr mov xor (bad) outsb out cmp xchg dec cmp adc push mov test xchg xchg pop mov (bad) into push imul fildl shll pop test mov mov fildl iret dec xchg xchg xor mov sub stc cmp fdivrl and add mov cmp sub imul xor cs mull xor aaa test std inc insb aaa inc scas xorb out sbb xor mov mov mov lods mov out or js (bad) repnz daa sbb mov subl xor lock loopne jns cmp std push push jge cmp jge lods in jp test push pop jbe cmp test pop sbb mov adc pushf mov dec clc int3 in flds jnp push stc jp (bad) dec jl push xor pop push shll mov mov sbb call xchg jecxz dec rcr data16 add xor sbb mov mov jne push mov xlat or or pop and dec xor pop inc leave xlat xchg pop mov xchg mov aad push dec mov add cmp add out je add mov out ss cmc jmp scas imul push jnp subb in mov or cmp dec popf into jnp ja test jp fstpt iret adc clc daa sbb pop sti insl add imul sbb sub sub in aad cmc and adc int mov mov mov shr mov inc (bad) mov imul sub lcall sub xchg mov sbbb sub and lock scas cld js push insb in inc xchg test add stos mov pushf inc loopne enter inc xchg dec inc jbe jnp (bad) testl inc sub insb mov push (bad) push rclb jnp int3 and or mov rcrb ds dec pop sbb xchg xor out in inc add adc les (bad) dec jecxz mov scas push scas sbb mov in jns inc dec (bad) sub xchg movsb mov mov lods aad std jl pop mov (bad) mov sbb xor outsl mov aam cmpsb sahf addl jno ret push fildl inc inc aad cmp dec push in mov mov js pop pusha faddl xor jne mov or int sbb movsl in stos shl xor jmp mov inc daa jnp mov inc pop pop lock enter lea sbb xchg add pusha out adc push pop mov cmc pop cmp dec roll xchg pop movsl sbb xor push gs jns pusha push pop push mov inc mov or dec shrl xor or fstps or add mov jecxz xchg hlt adc stos inc or test push loop hlt int3 cmpsl loope (bad) sahf pop xchg inc sub or int sbb push add xchg jecxz faddl fnstsw lret add and fs in or in mov sub sbb cli cmpsb xor ds test push fcompl test (bad) mov aad add scas xor call repnz cmp cmp imul js int in inc push in sbb es (bad) das and or loop adc lods frstor lods pop add or sbb adc jno dec call adc jl push mov shlb xlat gs orl mov mov fwait inc pusha fimul or js pop out mov sub (bad) mov and enter pop add xlat cmpsb sub fisubl xor mov sbb push xchg jae or repnz push inc pop gs iret lods daa push pop stos mov shll adc push gs adc push jp dec push sub cmpsl in enter jecxz pop sub pcmpeqd mov nop out pop or jne stos push jae pop cmp pop dec inc cld lcall rcrb sub sbb imul xchg add sbb mov jecxz jne sbb sub sbb fnstsw loope inc mov push dec xchg adc fdivrl adc dec lock or pusha xchg pop xor dec cli add xor ret jnp es pop ret pop ds jne lods mov cmp pop test jl adc dec imul les dec jle out mov imul xchg adc mov int int3 inc or add xchg lahf or (bad) mov sub xchg stos sbb int fldenv pop in enter fnsave incl popa cmpsb or clc or cmp sub cmc inc scas jmp jp sub sub imul js push rcrb and push ds daa mov mov vpshufd js rorl hlt inc stos js inc arpl ss fstenv push ss (bad) cmpsl jbe sbb adc add sbbb repz fnsave outsl xchg xor lahf test push gs mov cmp inc and jno jbe ja imul idivl sub xor test xchg hlt mov int lcall and lea jmp xor pop loop adc inc jg mov push or add mov loop out dec lods stc cmp pop arpl mov jb xchg add inc push jns daa jbe sbb adc dec cmpsb dec cmp jge,pt or addr16 imul xor fld add js jnp add insb ja pop lahf gs shlb stc call push pop lods and insl rcr dec mov stos test fidivl dec std pusha sub ja sbb sub dec pop or or push in lds fstpl sub negl jnp xlat pop inc xchg mov mov mov mov pop pop sbb mov aaa sub dec push adc stos mov pop and pop gs pop daa push cld in jno push mov fsts adc or xor jae int3 fisubl cmpsb adc push mov mov andps std mov sub xor mov xchg cmpsb out dec outsb push in push mov movsl in pop test loop mov mov and pop sahf enter decb (bad) lods xor adc mov jge out and jl push mov sbb jns dec popa pusha stos jmp jbe pop and ja xor std add fcoms insb jne mov fucom add loop jae jne mov popa imul lods es cli dec dec ja int ds add scas add (bad) std ljmp or fistp clc sbb mov out sub aaa je mov repnz cmc cmc jbe mov push mov add xorl xor push fimul xchg add adcb push sub mov dec add pusha mov sub push insb fwait loope pop pop outsb je ja cmc shrl das mov lods sbb (bad) push jmp dec (bad) cvtdq2ps mov cltd pop pop repnz cmp fnstenv add lahf cmc fwait js xchg cmpsl and add sbb inc (bad) mov scas mov jle fistpl pop dec insb loope je mov (bad) loop inc jns mov (bad) cmc cmp mulb sar clc fldl2e adc adc sub call out repnz aam fxch mov out add popa aam add repz sbb fnstenv or jecxz inc sbb jae (bad) xor fs xchg fisubrl (bad) cmp hlt popl shlb push rorb add out cmpsb movsl jb sub adc aas xor adc test jo xchg (bad) out popa outsl mov inc mov mov cld ret add lret shll ret movsl mov sbb or icebp inc outsl cmp push pop xor or out and nop push inc pop dec pop push (bad) cmp push movsl mov cmpl dec mov pop xchg add push mov add test mov pop push fsubrl and mov clc dec push push jge dec icebp mov mov sbb sbb ja xchg cmp int or sub xor mov or sbb mov xor lods sahf outsb mov mov lods out test arpl (bad) out jmp rcr fucom fisttpll and jb pusha jnp mov inc jne clc jle inc test push mov sub cmc outsl test addr16 sbb insl pop (bad) or xor icebp imul mov scas iret sbb fs call push lods inc and xor push popa cmp rol mov imul mov mov sbb (bad) xlat shlb mov ficompl jne sti in (bad) fwait mov jp xor push add dec daa ljmp sub mov jg clc (bad) loop sahf sti pop movsb leave loope push xor (bad) neg rorl scas jecxz xchg jmp pop pusha jb out ret mov mov call (bad) pop fisttpll outsb std jb shll mov inc (bad) mov sbb mov xor ret mov add add sahf roll in popf rcrl and sub xchg out mov mov dec bound scas inc cmp sbb mov cmpsl (bad) push pop jbe pop cmp mov in lret ud1 xchg pop into imul in pop int3 cmp int daa mov xorl jb jecxz (bad) cmp jecxz push jge sub or pop int test cmpl rcrb inc popf mov pop in dec cmp push mov es outsb gs lret mov test lock sti cmp cli popa scas cmp icebp fldcw loop,pn dec mov (bad) ss ret mov arpl push leave inc lret test jmp sub in jmp or mov imul ljmp and cld popf dec push jno push xcrypt-cbc cmpsl push sub inc mov push push xchg xchg jb inc movsl mov and ret xchg push mov dec mov stos xlat mov inc cwtl cwtl sub ret leave ljmp push cmp inc adc bt stc sti jge mov repnz mov hlt out cmp mov xchg inc mov lea dec pop dec push xchg inc push dec adc popa inc fucomi push push inc sbbl xchg xchg pop test sub test lahf pusha pop (bad) aam call xchg (bad) xor push in mov scas sub mov pop enter cmp insl (bad) in adc push inc je mov imul leave sub pop aam or repz icebp movsl clc imul fcomi testb (bad) out xor stc sti in cltd je add or daa dec xchg shl mov dec dec adcb fldl sbb test mov dec mov xchg add in add loopne xlat lcall sub fidiv in inc inc int clc movsb ds push add jl std (bad) outsl imul mov shl mov pop xchg lods xchg xor lods and das testb and (bad) (bad) or data16 or sbb inc jecxz int loopne lock xchg push or push add sub outsb xchg ret daa daa xchg push in pop imul push add (bad) mov inc lock mov ja mov inc shlb pop xor add push out and fidivrl jbe mov scas push (bad) or aam scas adc stos pop lock jp mov fnstsw int3 test js push add idivl mov add mov or pandn jnp jle push jmp xor cmp xor cmp negb push jecxz xor (bad) mull fdivrs mov fmuls into cwtl movsl push push ss roll sub arpl mov mov jns lods cld repz add sbb cmp and popa fs aaa sbb cmc movsb cmp pop lahf (bad) jmp mov test jmp in jns dec adc fdivs jl mov adc lock pop ffreep pop and repz ljmp push inc imul hlt pop mov jmp jmp add rorb setae or les mov sahf mov xor and push sub cmp rcrb mov test jbe dec jmp dec xlat fistl mov mov mov imull fidivrl mov mov or xchg ja inc mov sub ljmp pop cmp push cmc mov mov mov rcrb popa out (bad) sub fwait in mov cs jns and hlt jb (bad) out aaa xchg jns ret std sbb mov xor repz icebp ljmp dec iret lret nop jmp mov mov mov push jne in xchg cmc mov ss and mov pop push js adc dec jle shrl xor dec frstpm(287 xchg (bad) les adc repnz cmp and push in and add dec (bad) xor out iret cmpsl pop mov fnstcw outsl dec cs adc ja or cltd xor fmulp lods dec xchg mov jae (bad) and rcrl lds scas fdivrl lds in mov sub loopne outsb movsl pop fdivrs in subb out dec jno dec mov jnp or out lods scas int pop adc mov stc dec test (bad) ss mov insl adc mov push mov aaa stos gs push jo lcall test adc add sub push loop push fist (bad) adc mov adc inc hlt push mov enter cmp sub jg cmp mov dec jmp stos mov mov pop pop mov les mov adc call (bad) mov (bad) in push dec insl outsb cmp cmc sti push pop mov stos rcll cmpsb jg aam and shrb pop push loop iret (bad) or inc push add lock leave inc stos xchg push int3 imul inc adc sarb cmp in push or jle push mov loope mov xorl scas mov pop or dec cmp mov sbb sub mov out loop adc jmp out sbb dec xor and sbb imul fs call pop das sub mov push loopne dec jae and je inc iret lods dec cmp pop and push outsl je clc out out and mov (bad) cmp arpl sbb sub push arpl aas (bad) aad js xchg hlt and add decl neg push or lret aad push xlat xor mov mov push dec out lret sub mov push sub pop push mov mov push mov cmpsl push test push test jae push cmp mov lcall mov cmpl cwtl adc data16 je or pop (bad) pop cmpsl push rorb fdivl mov mov leave mov cmpl adc in dec cmp movsb test inc jb sub lcall add add icebp fcmovbe scas sbb dec xor mov push mov adc fimul lret test outsb mov xlat aam stos xor lods or cmc xchg pop aad mov mov xlat sub push push fdivr sub fldenv mov and pusha mov aaa add inc jns dec loope sbb je sub in (bad) push rcl int add rcl or js or pop enter pop aad fild lds clc mov mov mov in mov push popa mov cmp inc mov push sub lods pop cmp cld ret arpl lret sbb xor mov pop or xor jecxz outsb mov icebp sbb in outsb pop adc scas nop ds nop xchg cmp sub pop fidivl jns add jb dec decl pop mov add in xlat cmpsb xchg imul je mov sub imul inc mov sub (bad) iret pop pop cmpsb cmc sbb adc add out pop cmc or mov mov loop dec and lret mov popa ja ffreep lret data16 push push sub cmp inc adc fiaddl push out cmpsb bound inc roll pop lea adc aad jo jmp icebp push pusha xchg adc fstpl or rcrl fbstp jle sub in pop mov sbb rorb or loop mov (bad) je xor mov sbbl lods mov call rorl dec jno and (bad) push lcall fisubrl or stc sbb shrl mov sub aas repnz lret lret adc mov fs and fisub add aas aad and xor aaa push in (bad) fidivrl mov jo cmp imul divb nop (bad) cmpsl ret mov sahf shrb mov insl or dec insl jg adc mov sbb bound mov lock sub pop mov or jbe xor scas cmpsl inc andl push cmp jg push arpl pop add add push jo iret les dec stos mov and inc and cmpsl add mov insb xor test dec add pop in js dec add add jle mov adc rcll pop jp sbb dec cwtl sti int pop loopne lret cli mov loope pusha stos fmull push dec pushf xchg mov addr16 sub movl iret cmp aaa jle mov outsl jae rorb call xor jg pop jp jo push mov and pop icebp frstor aas push mov inc ficoml scas addl jns pop xor out mov mov sbb pusha idiv stos or leave mov ret js dec pop sti xchg push je push pop ss sbbl jmp pop dec and xchg jmp or outsb pusha loopne ljmp and (bad) jne bound jbe dec gs lret gs cmp in jle pop and mov mov lock cmp add rorb inc loop push rcl xchg into rcrl cmpsl sub or lods outsl and loopne pop dec xlat jne jno repz mov jae lock pop dec sub inc cmpsl jae pop daa pop sbb int sub xlat jecxz imul xchg icebp arpl mov fwait cltd inc (bad) in cmpsl (bad) into aad push fsub in jl fisttpll (bad) jb outsb jg jo clc mov push and mov dec dec aas mov out and lret cs fcoms aas xchg hlt lea pushf pop aaa out (bad) outsl or push mov nop pop insl dec icebp inc ljmp push lods pushf push inc jp pop push in cltd mov imul sub inc aas enter add xchg sbb lea adc ret inc xor (bad) cmc add push aaa or lock xor jl xchg int3 inc xchg fstps imul inc aam or setns mov lock mov mov repnz (bad) dec push xor int3 leave mov test push lcall mov in and lret cmp mov inc sbb rorl xchg pop cltd out inc sub inc lret (bad) adc mov mov stos sbb sub xor push notl loope enter pop jg or and pop adc repnz popl out fadd fisttp imul dec mov sub dec fidivr mov in aam xlat aam dec and fstps cld insb xchg sti jno fdivs xchg jecxz jae push xor mov aad sub dec adc add add adcl loop push das scas adc xchg adc push and mov jne adc push adc mov sbb (bad) mov jge test rolb pop sub jmp fmuls mov stc rcl sbb fadd adc sbb jecxz mov jae movsb mov ror xchg insl out aad mov ret lock std add xor fdivrs pop pop cmp dec mov movsl in mov insl jns loope adc add jne dec push fstpl or scas js ret cltd test cs pop hlt cmpsb mov test ret outsl rclb pop lock or mov out and lods fs fucomi adc push inc mov jl (bad) out jo mov movsb std test mov jl call cmpsb cmp arpl rorl xor popa cmc in (bad) arpl jg lock stc shrb sbb inc addl in lcall mov add scas sbb cltd fwait divb cmp pusha or xorb sbb fildl pusha jns mov jge (bad) loope sub jmp pop mov cs pop inc call pop or xchg or cmp orl dec jbe fisttp (bad) test cmc xlat pop pop dec mov inc aad inc xor into pusha cld pop adc inc lods fidivrl test xchg pop dec ljmp push aam ljmp inc sub adc mov pop and jo fisubr add push or andl movsb xor testl cli pop sti rorl xchg push ja in adc loope pop je push clc out or mov fcoms hlt in dec ret loopne pop fdivrs dec vcomiss cmp add lods mov lret xor or add inc (bad) fdivl mov and or movsb adc fimull in xor or (bad) cs jle or dec add into ljmp lcall and push dec xchg (bad) jge (bad) jecxz mov cld out pushf fs jg lock das scas xor pushf das popaw pop (bad) aaa in sbb insl ret mov dec in repnz data16 and mov sbb dec push (bad) int3 pop je mov pop push stos sbb xchg dec bound sbb pop fsubl mov stos add int3 inc and mov mov or lock sbb sbb sbb nop sub pop out mov sti jbe cmp divl stos mov (bad) loope mov pavgw dec cld or out mov jne addl mov dec int3 das xchg in push cld ret aas xchg aad jecxz mov dec movsb mov iret jo dec cmp test cli test ret arpl jp mov hlt nop sarb adc push mov inc push mov bswap aad out inc test cli movsb imul and inc popf add (bad) fs leave ss dec sti or test (bad) xchg movb fs cmc aas sbb enter sahf pop inc jl cmp mov int3 insl xor int jge mov xchg inc push aad inc or out jmp iret cmp cmpsl jge push aad and orl sbb mov sar inc fs cmp mov rol pop out out and jg int jne insl cmc fsts fnstsw lods mov and std rcll fildl out lahf sbbb mov dec fidivrl inc jo or add inc out cmc outsl idivl jne cwtl pop add bound push test inc test jb mov pop fdivl adc add mov cmc stos fxch inc rol bound xchg (bad) loop out xor orps and lods ret shll pop xor mov popa lret xchg pop out mov ja mov js push or pushf shrl inc jecxz ficomp add sbb decb pop xor lahf jno sbb push mov or dec adc psubd out std in sbb add cld xor dec adc ret stc inc test xchg push add mov call xor or scas lahf and jmp sbb add out add out add scas (bad) js sahf mov outsb pop sbb push sbbl loopne cwtl push ret int3 stos and lcall fsub icebp cli repnz call bnd pop sbb gs pop jo (bad) xor or dec pop loopne,pt add inc jmp or lcall mov in fistp mov push aam add rcrl dec jg xor in iret adc mov loope push in and add ficomp push add fsts imul rorb mov (bad) fldl repz aam inc cld pop mov fistpl mov mov lock cmp sbb mov sub daa sbbb (bad) mov sub out test or dec dec pop (bad) aam (bad) lock loope mov jle jne js pushf mov scas (bad) rcrl mov push aad and daa sbbl iret and aaa xchg dec movsb jg and repz and sbb mov xchg hlt mov shlb jmp xlat jb adc adcl push ficom fildl mov pop pop hlt (bad) fstpl es lahf jno pop pop stos popf jns loop mov fiadd adc push xor mov pop les js lods pop ror mov push push jns and (bad) shl dec and rcr rolb adc pop test mov loope fiaddl mov lret mov mov xchg lock fwait jecxz fsubp xchg es xchg xchg (bad) cltd adc lret pop and in mov rcll xchg adc ja outsl add out cltd jno or jp test cmpsl movl testl addl adc cmc imulb dec jl mov cld ret add cmp fucomip sub shrl shrl test lods sbb xor dec pop lds cltd sbb xor inc (bad) ljmp adcb or sub (bad) pop sbb aad or sti out or rcrl inc mov adc fwait pop (bad) fldenv mov insb scas mov (bad) jbe loope repnz inc rcrb (bad) call loope cli mov divb imul pop adc test fdivrl bound out push push sub imul jle fwait mov mov nop mov nop (bad) outsl and cmp jle in insl out adc pop out xlat (bad) cli xor iret lods leave ja mov xlat jns clc rcrl lods lock (bad) mov pop test insb popa pop in inc adc adc and daa xlat pop fidivrl adc loope sbb cmp (bad) push sub in sbb es cmpsb mov add push xchg loopne jp decl fcoml jbe in push inc dec sbb cmp or jno frstor and dec pop push pop call leave add push aas mov xlat and repnz rcll or mov mov loope hlt fcoml int3 lds shr jmp pop jl dec fcomp cmc (bad) pop pop jne out inc mov sahf or push push xor xlat xchg in sbb push adc add cmp arpl test pop (bad) lcall out fldenv adc jp and xchg add or test repnz int3 or xchg jbe add dec subl out mov loope mov dec add sahf hlt dec sub insb insl pop cmp xchg sbb pop push popf sub in js loopne std adc inc sbb jbe or sub rolb rolb in dec sub and dec fnstsw push xor (bad) mov movsb int adc ljmp pop sti in cli adc je sbb sub bound (bad) sbb in adc add jle push or std adc add repnz rcll and add jecxz sub addps jo scas push rorl xchg popf sar movsb ret js int3 nop mov fs insl push sbb mov sbb and xor (bad) sub sub test jl jbe mov sub sbb push add xchg add test into lcall jmp xor cmc sub int3 shr hlt push jo pop shrb shrb sbb popa outsb and arpl push inc lods sar or push imul aam cmp les (bad) fwait jo mov jecxz icebp sbb out mov mov and ret jno hlt sub test lahf pushf sub in scas xchg cmp jge imul cmp and ja pop sub loopne xor loop jl fistpll adc dec push in add movsb dec inc sub loopne dec sti jns push add inc add mov xor jns arpl movsb cmp pop lods mov rcll (bad) mov mov xor lret sti or sub out clc pop inc jns mov sub push mov imul mov sub pop add mov push mov mov aam lret (bad) pop push stos in sub outsb imul and repnz sarb mov hlt repz pop repnz jnp (bad) int jle cpuid inc mov mov fdivl movsl lahf add fstpt or jo scas repnz shrb pop dec int3 in aas in roll js lds dec push (bad) jae lods cli jge adc (bad) push pusha (bad) pop push addr16 cwtl mov lahf fmul repnz or aad stc fcomp push (bad) mov sub pushf (bad) stc enter lahf in mov sbb out ljmp test cmpsl loopne xchg and push jge loope push pop fcmovnb push mov pop dec mov sbb cmc clc repz pop popf push sbb lods cmp sub lret xor jns not jo push call push mov fimull and sbb or fidivl lods pop into fmull enter mov inc fild insl mov jbe lock mov aam fdivrp mov jae fdivp pop xchg js and mov adc mov bound repz rcrl xor stc daa dec rcrl nop sub sbb jbe and cmovg insl dec push jge pop clc hlt mov ja mov xchg clc movsb push (bad) out nop pop mov xchg pop add pop push dec inc test inc and aad (bad) jne cmp or ret mov int3 xor pop test aaa imul mov xor in push push (bad) sbb lock sbb or es push push mov add jle adc inc xchg pop flds test stc lock push negb mov add in stc pop loopne stos ret mov imul push mov dec xchg push lock xchg mov imul out jb mov clc jae jo cmp xchg mov push fdivrs mov dec stc xor inc dec xchg dec in jle mov out add arpl push mov push (bad) shrl mov daa dec outsb add (bad) leave add insb mov rolb clc jb or in popl jp cli outsl test fist adc xchg and xlat (bad) push mov pop rcr push mov adc les inc repnz fwait jb popf push push adc cmp data16 insl jns mov mov xchg jae xlat push dec imul nop (bad) rolb cwtl jb aaa xchg and mov lret lcall cmp lret data16 jnp push jae push icebp pushf stc cmp sbb lret mov push adc cli push jb push sbb fistpll xor pop inc fnsave divb add mov call sbb or mov lods pop add pop xor sbb mov or jb (bad) mov mov scas jns mov loop stos sbb nop add jg sbb sub jecxz sbb lcall jmp adc dec ret dec mov insb fsubrs insl outsb sbb inc test inc mov enter notb iret test adc stos jnp inc dec pop les (bad) jmp xlat sub cli adc adc arpl popa jne cwtl fwait sub sub pop dec jnp pop fildl adc mov adc mov mov into sti mov mov push lret cli cmp call mov into push lret mov js mov popa and das (bad) cmc push adc lods repnz out push sahf mov jecxz enter fwait sahf pop mov (bad) jno data16 icebp dec insb imul jne jp push out gs arpl cwtl mov (bad) mov aaa pop lds jg rcrl xchg add xor adc mov lcall aam mov sub jmp cmc (bad) mov jp xlat inc in mov or aas fbld dec aam push (bad) pop jns sbb adc dec jns inc jp push aam cs cmpsl lods je and ss jns hlt (bad) fdivp into out mov int3 jp cmpsl les movsb aam gs (bad) fs rcrl xor adc mov insl jl cli sti addr16 push cltd mov sti inc mov mov pop ja mov xchg insb jae pop sbb xor xlat and in jb xchg sbb xlat roll dec mov xchg sbb xchg xor ret mov push pop push jg call roll sub je cmp (bad) call clc jne std jl test cmpsl pop mov loope in push lcall out add fcoml adc cmp or imul or pop jns int stos adc sbb lea mov (bad) mov cmpsb daa sbb inc sub (bad) fldcw mov fisub test xor mov addr16 mov int and push jne xchg adc mov inc and mov jg jmp pop negl and imul (bad) lods imul sub arpl jge in mov lock push ret in jmp in sub cmpsb push shrl mov dec sbb jbe and dec (bad) jne pushf push imul add lock inc popa je sub jbe (bad) fisubr mov push and fldt ljmp add ds dec clc stos dec in outsb sub mov (bad) inc into adc aaa je repz fisubr or sub lods fwait push pop fisubrl mov in xorl ret (bad) fxch mov and in jnp push js insb jle mov lcall xor jb iret cs adc and xchg mov je mov mov hlt leave cmc nop nop es repz sahf add push aaa jne stc and clc adc aad test sbb xor jl je stos mov (bad) jo pop lock cld jecxz stos lret call mov xchg fistl mov movsl sbb add (bad) sbb xlat xchg cmpb xor das dec mov sub mov mov push out jbe mov mov js lret jne aam jp jnp or mov (bad) mov mov or bound mov lods fcompl xchg sub cld jp add mov push mov push lret sub ss das sbb push inc fnop and mov pop adc popf inc sarl adc dec mov mov stc hlt fistp std sbb aam sub inc aaa lea clc loope adc pop xor mov (bad) cmpsl push push xlat aas mov and pop (bad) icebp daa neg dec fdivr sbb mov test cld jmp out mov push jbe jno insl push xchg jge pop int3 mov les add mov cmpsb fnsave add sub xor das push dec in or sub out lret dec aaa pop adc test vpsllq or rclb jbe ss add ss sahf add lcall in cmc jp mov shll sub jmp cltd in mov scas fstp pop pop jl shl pop (bad) aam pop int3 jnp adc inc inc sbb orb xchg cwtl dec aaa mov movsl aas adc cwtl loopne gs adc movsl cmp lcall (bad) jecxz hlt adc jae mov adc mov jne orl xlat or aad bound fcoms push inc xor int push sub sbb dec aaa int into imull or mov xchg inc in insb movsl adc dec rcrl or sti pop lcall lods pop xchg in lret lret cmp fnstcw cs jb lcall in inc clc ljmp cmp (bad) in mov unpcklps jecxz test push mov test sti jle lock xchg les out faddl sub jp inc cli push jne (bad) fnstsw std add jl test loope std push loope hlt pop outsb or imul pop pop mov mov pop movsl shl sbb into jnp addr16 mov jmp pusha out sub sbb movsb scas mov pop das mov aam lahf int3 outsb dec (bad) jb xlat lds shlb add aad sub mov shlb dec pop nop andl mov dec push daa lods movsb into add fmull jge shl pusha sub mov hlt clc inc lret adc rcl fmul pop hlt push xchg aaa in push arpl mov fs cmp in arpl repnz jb pop mov arpl cltd stc push sbb (bad) pop push lds fidiv cmc andl jns cmpb cmc or mov js xor cs pop dec gs std jp bound pop lock sbb mov mov dec sub dec and aaa leave jbe je sahf js inc mov std dec jne mov dec movsb (bad) sub loop jne mov imul in mov add mov out rcrl ljmp sbbb loopne mov fsubrl insb shl mov adc cltd test mov cmp mov (bad) ds push lods loop push jge js jns je mov movsb out sub adcb loopne lods push test sahf loope mov fmul jge jnp sbb dec loope fcompl aas outsb popf rol fprem1 inc mov pop xchg in xlat adc dec adc sarl cmp jne cmp jecxz (bad) mov pop iret and test inc bound cmp mov addb mov jae fcmovnb stc inc fs mov push sub push mov mov mov push js arpl push in scas xor xlat fdivl insl shrl jo in inc mov jnp fnstsw push (bad) mov jecxz rorb jno xor fcmovne xor pop add ds xchg adc push xlat out fistl test mov es nop inc sbb movsb gs sub and arpl shlb leave mov repz cmpsl xor enter mov pop pop mov sub jle pop (bad) (bad) movsl add fistl add jg jge jp out adc loopne push mov jae int add and xor sub into xchg fdiv fcomps xor mov push sahf clc push add lea fcoml push jecxz popa cs dec add es mov jb adc push cmp pushf mov push adcl inc push xor sarb sbb rolb adc xchg gs mov (bad) pop stos fidivl sbb add mov cmpsl xorl (bad) push fbstp lea jge gs add aad inc outsb and mov cmp jp jns (bad) cmp and lea sarl fs fiaddl adc xchg jl fldcw sarb mov inc inc push sub xor nop push add inc mov iret adc in cwtl outsb mov mov inc mov lock clc mov sub bound sbb pop pop lret sbb mov xor adc mov lahf lret enter mov cmpsb rol mov cmp jge pop and arpl add test cmp push sarl xor rol (bad) xchg adc mov repz or jns or and add push adc aad sbb cli andl mov (bad) fldl sti ss sbb fucom outsb add call inc les mov clc xchg mov sub or add mov loop mov pop push mov xchg fadd mov add gs and fwait scas xchg push inc cmc push push mov in sub mov add fs mov lahf sbb repnz xchg (bad) in dec pop pop test inc popf dec push pushl jle or fwait cmp push push inc xor mov pop ljmp mov clc mov pusha rol int jl je les sbb sub pop mov mov js jnp adc pcmpeqw jmp and ja enter mov cmp dec icebp push es ret stos (bad) dec jl mov cwtl addr16 add adc ja push xor sub pop ds fistpll popf jbe inc adc mov leave aad fisubr int cltd and dec outsl (bad) xchg lahf sbb or cmpsl cld mov xor sbb jno or in fistp pop sahf aad inc je aas or jge add pop stc sub pop jne popf dec push rclb jle loopne sbbb adc xchg mov imul jge (bad) dec lcall (bad) rorb fdivl ss call lods adc lods mov sbb mov ficoml outsl mov inc into cmpl rcrb fstpt adc aam pop jge rcrl lds (bad) loopne push sbb mov mov fbld xor scas jne cwtl test cmpb int aas (bad) jbe ja jne mov aad fcmovb sti insl lea inc fidiv (bad) data16 js pop sub ljmp (bad) frstor loopne jo in inc cmp rcll roll or sbb fnstenv mov sbb int push xchg mov scas push sarb aam and test jp cmp stos popf loopne mov adc jae dec pop push jbe add repz fldcw cmc aas dec mov sbb pop sbb mov rorb gs (bad) cwtl jbe inc imul and repnz loop push je (bad) bnd ficompl mov mov adc cmp (bad) aaa jo lods hlt inc js jnp pop in sarb loope rclb jmp sarb jmp push lret dec in sub repnz (bad) in popa fnsave test shll call (bad) mov pop mov xor add dec xor stos and pop les push adc roll sbb aam aas sbb in pop call adc insb push faddl icebp cmc enter sbb js sub jmp mov xchg inc pop roll dec xor outsl out out adc pushf js add jmp data16 js ret lret ljmp imul push add loope (bad) idivl dec sbb sbb pop sarb jge stc pop and out push mov je jl add lret aad push enter push addr16 and mov add push movsb insb scas mov jae outsl out and sbb (bad) jne mov lea in rcrb test cmp mov xlat pop jbe mov mov cmc shlb push jmp das std repz rcrl xor insb xlat xchg cmp stc jb pop ret imull fcomps pop adc aas addr16 cwtl push rorl pop adc vmread test imul fwait dec inc test cmp mov jno sbb xchg xchg jae std mov and mov pushf clc jmp inc stc pop bound out mov mov mov adc fsubl test test jae cld movb loop (bad) mov int and aaa mov mov fs fisubrl dec adc ds add mov pop out or sbb add popf movsb das pop (bad) aad pop cmp pop add (bad) out aas dec inc or dec std xor clc or sarl lods jns sbb pop arpl jle hlt into cmp in nop cli xor add lds rolb sbb sbb fsubl rcll jo inc push addr16 inc add or fidivrl loop sbb imul pop mov jo push mov bound testl jg push call mov scas and adc flds (bad) punpckldq jns pop fcos (bad) xchg fcoml push mov sub sbb lock out push ljmp xchg fimull sarl fdivrl and imul jmp mov jns cs aaa add rcll (bad) dec ret xor (bad) ja jecxz (bad) push dec hlt sub jbe shr lcall xorl sub dec mov lcall arpl cmc or rolb adc fisttpll es xorl sub cmpsb inc or rorb and repz jns sub push pop std push (bad) mov gs ret adcl bound cmc cli outsl push cmp add mov push sub (bad) mov shrl mov in sub arpl add cltd outsl sbbl lea pop (bad) mov fisubr sub mulb push or mov rorb inc test or icebp (bad) or xchg (bad) fisttpl sbb out pop aam and jo inc mov push jp add aam ss fcomps xchg sbb push mov push mov leave mov outsb idivl frstor or mov inc je push or repnz adc mov movsl and jl sub jecxz xor and (bad) pop test push push dec fidivr dec xchg sub repnz cmpsb xchg mov imul ret movsl push xor cmpsl mov test fs in mov add inc xchg pop pop mov std jbe stos mov fstpl jl aas sbb test cmc push mov mov xchg rorl xchg fist and adc in fisubrl fwait mov gs jb ja lahf daa sbb pusha sub pop (bad) loope pop pop mov nop and sarl outsl pop outsl jl mov pop mov xlat and mov inc xor outsl or fst lock enter out das es inc jge,pn int push push and dec repz jg aad xchg fucomip pop (bad) (bad) xor sahf rcl mov sbb ljmp fnstcw std jo push push fldenv add fiaddl js repnz mov fs xor push xor mov mov jns mov and pop les arpl dec test ds push jge add cmc loop icebp cmc cmc or jns mov in mov sbb (bad) lods sbb in aam cld fnstenv scas insb pop xor add in (bad) xchg inc loop pop nop rorb sbb or stos js outsl cmpsb push adc sbb xor movsl loop decl les push mov fisubl jne data16 sbb pusha fmuls push (bad) jne mov xchg adc pushf (bad) dec std sar es adc xor adc movsb push or add xchg andb int sarb scas sub or mov jno pop out repnz aad sti lret adc mov (bad) mov cmp pop or enter push mov xor mov xor sbb pop sti stos lret repz cmp adc pop mov call jo mov outsb inc test and lods mov jbe pop stos ja iret ret adc mov pop dec (bad) (bad) scas hlt cmc push lret inc lds pushf dec mov addb adc mov xor jne imul mov sub popf js in sub clc jb mov jl add mov pop dec pop and sbb mov add mov jae and repz cmp iret div popa in push xchg test nop pop je xor cmpsb add sbb test insl nop mov ss (bad) lahf test jmp or enter std push (bad) jno push push push dec cltd fucomp (bad) daa rclb pop mov aad inc pop cmc adc pop cmc adc fdivrl imul mov andb fs jbe popa mov push dec pop pandn mov pop inc iret cld mov push jmp mov xor push aam sub subl add adc cmp sbbb mov dec fs gs mov mov sbb jae jno scas and (bad) fildl dec sub rolb fstpt push and stos icebp mov add roll into mov lods mov dec xor add out or mov dec push pop mov pop gs dec mov pop pop or scas mov std push push shlb dec out dec stos pop fxch mul mov loope hlt mov add dec fdivs xchg mov in je inc xchg imul in jae xchg dec jbe sub test cwtl arpl push jb ja jns jle push rcrl lcall ss or push sbb fisttpl fbld xlat data16 mov pop out mov in arpl cmp pop int lods inc sbb xorl xlat sub pushf fsubrp and loop inc js inc sub (bad) (bad) sbb clc bound inc shl jg push sbb push jae imul dec test push ss jne pop cmp je repnz adc out not xchg icebp inc arpl dec fildl cmp sub mov je adc (bad) imul (bad) ljmp sbb mov push mov and xchg sub inc ds inc ljmp outsb sbb push (bad) or or inc jecxz xchg movsl stc js fcoml pop cmp fstpl push mov jnp mov roll adc push fs push popf sub sub and add sub pop nop std outsb or outsb or mov jo movsb stc outsl cwtl gs add cmp outsb xchg inc adc cmp sbb imul (bad) ja (bad) pushf aas outsb subl loope and push (bad) (bad) mov repnz or dec pop adc scas mov jg sub fcoms mov divb (bad) test xor dec aad loopne add push mov int fsubs lods push jg ja sti cmp cltd add lahf pusha mov and gs sub mov (bad) jne adc and jle iret jo fistp std mov cmpsl push mov inc fmul mov orl xor mov loop (bad) xchg add popa cltd xor leave mov jg cmpsb sub and cmpsl cmp pusha pop jg frstor cmp or sub jmp inc mov or out sub cmpsb mov jns popl (bad) and cmp dec sbb ficoml (bad) bsf jns es xchg dec mov nop or aaa mov add into dec scas add pop aam push ficoml or repz cli cmpsl nop movsl push in jp inc mov je fldcw lock mov sbb or lock aaa (bad) out imul ret lods jne pop inc enter mov sbb out jecxz xchg pop jecxz lods inc mov aad mov (bad) stos xchg and cmp bound ret lret fimul mov test mov sbb test cmc push jno add shll mulb mov adcl inc cwtl mov loopne push ficomp data16 test mov outsb push xlat mov in push add stos mov sub test mov adcb jb inc stos in fwait inc cs xchg fsubl inc test cs (bad) (bad) (bad) jnp cwtl and mov xorb popa scas and mov sbb mov push iret lods jle lods or cltd and mov test (bad) jecxz movl jae mov std lods add or push imul mov sub mov pop dec pop jp add dec loopne inc jecxz dec (bad) aam (bad) (bad) lods ljmp jnp out out enter xlat mov stos sbb (bad) sub and je fs fidiv icebp mov insb scas adc insl push jnp jge imul inc sub inc gs add push pusha adc rep lods jmp out (bad) icebp psrad shld mov inc js mov fcomi dec sarl fs and mov sbb pop ficoml in int3 pop mov push mov jp lds fs gs mov xchg out test cli dec adc push in xchg adc cltd insl aad sub mov (bad) push loop push jne scas (bad) and mov mov jnp pop movsl jg push jnp int3 in stos test notl test adc lds std test arpl out rclb imul dec cmpsb pop ljmp add (bad) arpl dec mov or dec cmpsl pushf fldl cmp cmpsl push push fadds movsb inc ja dec xchg sub pusha mov nop into outsl (bad) cmc test push cmpsl jg push cmpsl mov in rcr fsubl lret sub orl enter cmpsb mov nop dec jbe (bad) cmp lock out cwtl dec jnp dec push add fdivl add enter popa cmpsb ss les mov stos xchg jecxz pop adc loope ljmp or jmp mov cmp sbb insb ss dec mov in test loope and or jns mov push mov sbb mov adcl inc add sbb inc jb mov pusha pop les pop adc push test lock mov xor pop adc cmp dec inc icebp pop cmpsb lret cmp mov hlt xchg xchg add mov and mov cmp xor mov push dec add enter cmp movsl push lret push mov xor or rclb outsb mov insb in insb and int sahf test push mov movsl rorb je aad decl mov lcall (bad) jle ret adc cmpsl dec js lds fmuls mov clc rcr jns push mov je (bad) push sbb inc jne outsl movl popa jno jne fucomp jne dec push test mov mov in xor fstps mov (bad) sbb repz ret insl shrd les std into aad sbb loop jecxz jo ss dec imul call push adc inc pop sti or js adc daa cmpsb pop int3 sbb xchg mov mov xlat addr16 test ja sarb mov jbe jmp out sub (bad) fisubl jne mov inc (bad) cwtl in inc cmpsb dec sbb xorl mov scas ret adc out and das outsb pop add jmp (bad) outsb dec xor test mov mov cwtl or cmpsb dec pusha test jge mov (bad) frstor test xchg pop loope mov xor pop sub push rol push imul pushf push xor jne adc clc and cmp or (bad) sbb cmp jle jno dec xchg push int3 cmpsb testl and xor mov mov test lret adc shl adc push jne fimull mov inc cltd out clc rcl pop push movsb lahf mov test lods add and dec add stc cmp rcrl pop push sub js js hlt mov push sahf jbe insl int ret push inc int cwtl and jp sbb adc lds xchg icebp xor les pop xor stc test in pop (bad) cmp mov ret (bad) in mov and xchg sar push inc jae std sti test cmc inc jo mov pusha rorb jno xlat xor adcl pop mov out insb test dec jno jns xchg jge ficoml orl iret ficoml fistpll dec xor cmp loopne xchg (bad) jl test push imul and leave jo or jmp cmpsl sub push pop cli negb idiv pop pusha icebp mov inc dec inc loop dec (bad) out inc in dec (bad) std in inc inc loop jb fst into jnp aad jle fnstcw (bad) fistl rcr jl mov bound les leave push popa icebp lret imul adc mov sbb mov adc inc adc insb or jno std jnp incl sbb mov fsts inc jb dec xchg xchg push in inc push push mov fiaddl push loopne dec int3 pop inc fistp jge inc pop mov mov sbb adc aam in xor int daa loope out fidivr out jne adc popa dec dec js xchg push push push fdivs das mov jge out push mov flds out ror hlt ds pop loop push sub lock pushf incb mov dec push and call mov int3 or xor push jbe mov aaa push insl cmp dec mov xchg clc out jp sbb mov ret fisub incb icebp sbb iret mov pop clc xchg rcr stc sbb cmpl arpl jp mov mov pop dec xor push stos push jb sbb lahf adc jge iret and icebp test adc push cmc fstp les fs fist sbb (bad) repz daa jne dec xor mov mov shr mull icebp mov loope cs shrb jg lods inc insb fwait push pop mov jo into into outsb pop adc push mov add mov ret inc fwait pop int3 mov mov scas test push rorl pusha arpl insb fwait cs (bad) and popa (bad) loopne pop cmp loope xchg pusha pop fidiv jne daa mov vpslld sbb popa push inc push (bad) hlt dec insl in into sbb (bad) hlt out sahf lock dec hlt (bad) scas mov cmp pop or sbb ret fwait cmp add test lods inc pop imul das repz jl ficompl pop pop push icebp test stc (bad) pop jge (bad) fwait push xorl or sti mov mov jmp and and and ljmp and lods mov cmp xorb mov pop stos sub shll loopne bound std push sbb notb mov mov pop lock out jp enter mov movsl add out or insl jb cmpsb call ret jge mov popf jge jle mov push sub jp mov mov imul popf addr16 fwait adc pop mov (bad) and jnp cmpsl and mov sub outsl push pushf shll sub repnz sub inc push mov repz je testl mov jl push push push dec push dec sub in call mov sub lret mov leave push cmpsl out dec ja mov dec jno cmpsb lcall jecxz cmp pop xchg sbb movsb add in inc sub xchg cmpsb push daa mov inc (bad) jl lods jne adc fwait nop fcomps cltd fnsave (bad) jne (bad) mov push sbb xlat cmpsl add adc jo inc mov movsb cmpsb jg push sub stos xchg insb scas pop sti push fldt inc (bad) fdivrp sub call or jmp gs test xchg or pop dec dec call lock outsl sub xor leave inc flds out and or cltd jb push mov add add and dec js fwait sbb lcall lea pop pcmpgtw rcrb clc push jns jp int xchg iret push mov adc add pop xchg xchg add sbb or adc bound outsl (bad) inc inc (bad) pop sub (bad) into lcall inc mov jo packuswb hlt pushf addr16 aad adc sbb repnz mov int3 imul mov mov fimul push mov (bad) jo mov xchg fmul mov bound inc push fcoml lret add in cld adc test adc mull (bad) jnp mov add js in pop fs into inc dec fcompl add daa xchg sahf inc faddl sub daa jecxz insl clc dec lcall jmp push call add add xor cmp mov movb mov inc das imul stos inc loope dec stos repz jne push sbb sub mov and stc mov mov pop and mov mov cld test scas pop jmp jle jl inc sbb pop dec enter loope pop push mov es ret dec mov cld sar push out ret sub mov jne mov leave xchg fdivs ret sarb clc mov daa mov or pop fstp jb cmpsl xchg loop jne ds sbb pop push dec or rcll cmp dec fisttpll les sub add out jo sub (bad) cmp jnp add pop jle cmp cs pop into pop mov jae dec std test pop jo fistpl jmp test in ret mov push mov inc insl cli lock int sahf call and mov cmpsb sti scas dec xchg jnp push adc xorl out int sbb sbb mov adc (bad) push in (bad) xchg jp fisubl loopne sbb jns rcrb aad push and shrb push jne mov fcomp daa sbb xchg pop push repz pop push repnz mov jns sub inc aad sbb imul jnp dec pop lea inc fistpll mov scas daa jl addr16 xchg pop mov fistpl pop loope and or dec add mov sbb xchg rcr in dec fcmovnu aas and fdivrp sub test jge mov adc mov mov push lock inc add jecxz adc or fcmove cmc cmp pop (bad) lcall or stc or fcomps or jg cld jnp mov icebp jl xchg lock int fdivl dec fsubrs jg pusha int cmp (bad) jno in adc outsl mov mov lods or cmp test or mov in push mov in push (bad) (bad) (bad) or or in push dec dec (bad) test pop lods (bad) sbb jnp leave clc in (bad) mov js cmpsl das outsl fild mov or pop loope sar mov loopne lods fstp (bad) mov pop lods pop (bad) fisttp enter mov jmp or loope jmp fcoms das jno add mov clc jecxz jp lds add out adc mov push pop je sub movsl sub div push sub push orl mov push lcall fdivl inc add lret mov inc aam mov pop imul ret es out or and lock repz ss cmp push pop adc fdiv add aad jecxz sbb jle test stos (bad) iret cmpsb pop frstpm(287 fcmovnu or in or pop push cltd sub or cli sbb aaa push adc loopne pop jno dec cltd push stc fimull loopne push std inc imul repz adc push mov add std fcomip mov push sub fs imul push (bad) hlt mov push sbb in loope pop push sub dec sbb scas jns or (bad) mov inc pop adc mov mov (bad) sub (bad) and mov add repnz push repnz xor sbb int fist enter lret sbb imul push mov in stos fdivrs test xor pop clc cvtps2pd call fistp movsb fistl xor aam sbb lods mov inc fildl out mov in test xchg lret fnstenv mov xchg test mov pop out shl push jbe std dec pop mov out inc dec cmc repnz inc sbb je sub mov xchg std fimull mov xor (bad) mov jns loope mov inc (bad) pusha in push cltd cwtl ret pop mull aam test (bad) adc shrb insb fbstp pop mov xor adc sbbl cwtl test cli adc int pop push jb mov stos dec adc repnz dec and pop mov or sbb jno fdivrl pop or mov movsl xor push mov pusha xchg cmc add call ficomp dec jno dec inc je sti (bad) fdivrp insb cli jno in push ds inc pop jl out mov fmull xchg clc int mov push leave push sti repnz jbe stc push or or fcoml jae add and sbb dec mov outsb lods ja mov movsl or (bad) push (bad) dec xor adc push mov int3 sub dec hlt jnp dec mov xlat es push cmp int3 enter xchg loope pop popa aam mov scas dec je aad stos ljmp or mov stos cmpsl imul jecxz cmc jmp test loopne mov sub inc fldenv sbb cmp cli imul xlat loop cmp cmp lods fwait out add sarb loop mov in rcrb jp add (bad) repnz pop pop dec sbb dec jae int push mov call arpl push aad std jmp mov mov jmp jne rclb inc inc or push or mov ljmp iret and mov adc push outsb adc dec xor repnz test ds sbb loopne mov cmpsl sarl in pushf xchg fidiv and or push and aaa pop mov add pop inc pop fildl test push push add push push dec mov insb out lcall cli cmpsb cld xor push mov scas ficompl stos push bound xor mov adc ficoml fnstenv popf mov adc bound or dec cmp ja dec push jne mov inc repnz inc lods enter ds (bad) repz jnp int (bad) int3 faddl or jmp (bad) aas or jb divl jns (bad) js mov jp add sbb std int mov or repz addr16 mov pop add push push lods push mull or cmp add jns or sub sub lods scas mov insl fs adc jp jp les popf xchg jo add bound pop rclb lahf sti cmpb cli dec pushf test and rclb (bad) std daa mov add adc push adc xchg jns cmp xchg movsb jae daa dec xchg cmp (bad) xor sub fucomip mov lock scas sub popf int3 sbb pop popf push push jge inc adc imul mov push fiadd gs jmp jne out subl cwtl movzbl or xor sbb les jle stos jno mov mov sub dec inc pop mov (bad) pop sbb push (bad) icebp mov mov xchg ja cmpsb sti addr16 sbb push xchg xchg les rorl sbb andl (bad) je (bad) sbb inc lds pop or cmpl into push rolb cmp aam dec shll push mov pop fsts push es cmp pop push (bad) jbe roll or pop ja gs stc dec ret (bad) repz stc cmpsl pop scas (bad) movsl cmpsb add es addb movsl mov insl jle push ret sbb call inc xor mov push stos xchg imul mov roll dec repnz lcall adc jne inc ljmp push (bad) cmp sub ret dec adc pop pop inc fldl2t call xchg aaa inc sub test xor xchg loope dec pop pop loope mov fbstp (bad) in fcompl mov sub scas cmp iret outsl shlb negl prefetch inc hlt push jbe jbe std aaa imul decl mov sub int adc push js jb stos lods sub test add mov rorl adc jle pop inc and loop adc fistpll mov inc jbe lods rcrl into outsl sbb inc pop bound mov sahf push mov fistp mov and pop lods inc lock out imul xchg push mov scas inc test outsb pop adc mov jbe js push cli xlat mov or jp enter cmp daa icebp jp sub xor cmp std imul dec xor inc xchg mov (bad) cmc jp mov and int3 xchg inc popf into dec out iret mov adc into stos xchg or arpl dec pop pop or lea jmp push jnp adc fstps fisttpl push push or bound pop add push jb insl xchg iret fadds fsub cmc stc cmp (bad) mov push pop pop mov sbb jb xchg cmp lock repz lea (bad) aad or ret test push cmp push rorb xchg pop and and adc add jp adc pusha mov ficom mov push lcall fisubr (bad) pop divl movsb inc movntps insb (bad) jnp pop loope lahf inc mov (bad) or popf int fdivl xor jl loop mov mov loop fwait lcall xchg lret or imul adc pop popa inc loopne fistp aaa sbb adc or (bad) or mov shll cltd mov jge mov or aad pop aad cmp pop fnstenv inc sarl add xchg (bad) mov shrl loope pop push cmp xchg out loope xchg test inc (bad) lock mov ja in mov lea lret mov into dec pop les or repz adc sub pushl xor cwtl dec fdivrl mov ror loopne sahf (bad) sbb ja repz cmpsl jecxz jle ljmp fcom insb or or enter or scas inc dec fildl bnd (bad) or jmp outsl imul mov mov jb fist jg lods pop cmpl or mov fnsave fnstenv push es flds insb push out mov push repz lret and (bad) test cmp clc jnp mov mov mov sub sti movsb or or outsb (bad) dec (bad) std mov pop or clc dec movsl pop mov push push pushf jmp adc jb jl sbb ss cltd in test jns mov or js sar ficompl and and jns imul or (bad) daa insb mov (bad) cmpsl add mov and xor push xor repnz lods movsb dec ret or sub sub jecxz outsb popf sub jl jns inc mov fnstenv xor jo jl mov lahf mov (bad) push (bad) dec scas lret pop jg fwait call in mov mov pushf outsb test push fadd outsb or bound and mov stc rcr repnz leave adc std push inc and push outsb jae imul dec mov pusha xchg mov sbb mov lcall mov (bad) in ja cmp outsl sbb jne inc int aam js mov fcmovb in or bound jb fadds push adc fiaddl lods cld mov imul jecxz inc dec jb adc lock sbb inc xor inc movsb cld jp adc push stos mov xchg cmpsb cwtl (bad) in sbb pop jns aad lods test fistp dec fadds iret es dec add mov lea or inc das add push mov pop mov fist in inc sub jne lods out jecxz inc push inc in scas and iret adc sbb rcrl pop mov (bad) ss push push mov xor push arpl sti push shrb dec mov mov inc jb jb out cwtl imul pop jae xor and pop enter xchg test push jge loopne aad aad nop movb jbe lds push fdivrp add loopne push in jle sbb push fninit out and (bad) pop cmc push mov xchg lock inc jecxz lods fbld rcll hlt inc dec mov int3 gs (bad) scas lds ljmp mov mov aam or mov out dec mov repnz leave mov mov mov pop ja data16 mov sub dec cmp xchg inc mov sbb sti xchg mov lods ljmp ja cmp add rolb in lock push dec ret cmpl xor cmpsb (bad) push jnp sbb lods xchg fnstenv sbb mov lret sbb stos data16 adc push dec mov repz sub sub inc and mov scas bound push fcmovu xchg adc mov mov jb xor movsb sub (bad) clc mov and sbb or push lahf scas in insb jns mov inc xor push cmc enter std (bad) lods fisttpl stc inc stos (bad) jecxz rcrl pop movsb mov mov mov jno imul (bad) mov xchg popa mov pop pop jns dec jp scas xchg fnstcw cmp lock loopne xor cmc lods mov ds lods daa ret in addr16 cmp xor push mov popa or and lds popa pop push jl or loopne cmpsb mov pop movsb movd fsubl cmp pop aaa mov jne mov sbb push adcl xor pop add cmp test mov push add adc dec xchg arpl adc add ja arpl adc into sahf mov bound or scas jge inc push mov stos int sub xchg jb mov mov or adc leave mov sub mov icebp add pushf and lods sbb fldcw outsb pushf mov jg dec sub fnstsw dec (bad) dec xor adc mov loope imul sub add push jbe mov mov sarb fwait pop mov arpl call pop mov cli or test stc jecxz jns rcrl neg xor jne cmp iret or insb mov aaa lock scas mov sbb push ja jp mov adc leave dec mov fbld fadds sbb or push cmpsl jle ja cmp (bad) fidivr ss mov mov sahf lods push jne pop fidivl xlat mov fwait cmp rclb inc negl mov push scas mov inc aad (bad) (bad) cmc (bad) in pop (bad) sub push jge fdivrp jnp lock sub lahf mov add rcl in (bad) ja movaps fild std ret ja jmp mov mov mov push pop cmc xchg add xlat sbb scas insl (bad) in jecxz adc loopne pusha in mov xor loopne dec sub mov js mov fldcw inc pop (bad) push jp in scas jle cmp cmp or xchg add (bad) sbb test cmp pusha jmp push stos cmpsl mov arpl frstor out ret rclb mov cli stos pop test push mov xor cmpb daa mov jecxz mov movsb ljmp ljmp ficomp push lret mov or inc mov adc push pop sub push call xor popa add repz js cli push jg imul test enter mov add jo mov xorl fyl2x push add cmp and les idivl outsb mov aam add mov in ljmp jle jecxz inc decl in (bad) aam mov lret dec add adc syscall push mov sub pushf fnstcw lods or enter add pop fistpll jle imul dec incl pop faddl xchg push jg push in rorb ret into mov cld sbb pop (bad) lods (bad) incb dec mov mov cmpsb mov fadds xor xlat fdivl mov pop or (bad) mov dec inc push mov or add mov pushl fadd xor data16 pop mov mov xor pop repz mov cmp xlat adc ret in xor add (bad) js xchg adc and xor fsubr mov arpl iret lcall adc pushl sbb icebp dec lret xlat jl sub sub call repnz sub incb mov sub mov negb jecxz repnz stos xorl js stc mov stos lods gs push jnp push push fild scas xchg int sbb js xor shl push adc divb cld inc rorl hlt out xchg sbb sub fld adc adc push sub mov out mov jg mov jp je cmc inc xor fistpl popf movsl loop mov gs outsb shll nop roll stos stos movsl jo pop out jmp adc fldl loope mov and dec mov jno divb cmp rcrb pop jno push mov dec dec mov lock daa jbe jbe jmp jle and notb leave push cmpsl jne mov inc (bad) (bad) (bad) int3 cld inc dec (bad) dec jg flds dec and adc mov lret bound repnz movw or mov lods dec sub fwait ret loopne cmpsl imul adc sbb dec mov popf (bad) dec pop rcrb mov in pop int3 cwtl xchg mov dec aad pop movsl mov mov inc out and into jecxz lods cwtl cmp mov pushf sbb lock div xchg add sub adc addr16 in jp cwtl pop cltd jne jmp cmp loope scas xor out ss xchg pop xchg in dec in and cmp popa sub jge out jge dec inc pop adc mov fsubrs pop xor fwait ja add mov pop inc pop call or cwtl fdivrs test clc inc nop push mov xchg pop test jo ss sbb cmpsb sbb mov xor mov call mov test ret outsb rolb and (bad) into mov sbb or and jecxz popa lock (bad) ljmp jecxz mov and inc cmp inc dec adc mov push or cmc fs loopne data16 sub (bad) and lahf sarb pop inc std push push lret add cmpsb test icebp cwtl lods int3 lea xor sbb std test and out lock sbb pop data16 mov inc aam loop stos dec cmpsl inc f2xm1 jbe stos sub push dec je cmc scas pop or mov inc stos stc pop je in in js jp fstpl mov fsubp outsb add lock sbb pop adcl shll cmc stos cmpsb rcr or jae lds ss scas fdivl aam mov dec pop mov fsubs loope jbe (bad) mov aam pop in daa mov lods pop mov sbb mov jae or add dec or dec fadds mov sbb xchg mov jb jl sbb pop in fcomps or xchg movsl push repnz push add in fisubrl sbb sbb push fdivs cmp stos test push cmc sbb xor scas sbb loop xchg cli ljmp gs int mov mov or fldln2 (bad) js jne mov mov inc pop mov pop and mov dec aad push sub mov or fsubrs dec ja fsubp cmc inc outsl mov and (bad) mov aam and mov lret into jb push sti popa test pop xchg adc mov cltd in clc sbb shl and arpl xor sbb inc lds loop push cmpsl stc xchg mov add popa sbb lret mov or repz jae int jns bound mov outsb js loop dec in cli dec (bad) xor push push xchg imul mov aaa push inc add (bad) xor dec fstpt sbb stos das and cmp adc inc inc inc rorl push stc inc add lock aam mov mov xor cmpsl sbb je push lock xlat mov in aas sbb jge stos mov sbb mov adc jmp (bad) test mov ret jecxz add (bad) scas mov and push dec sbb lahf jno dec pop imul mov out xchg je js,pt add lods insl mov push add fist lods push (bad) adc clc pop jns inc or sti stos dec lea test pop dec mov (bad) scas adc pop pop or pop outsl inc lea adc (bad) clc or (bad) sub (bad) (bad) pop jecxz cmp ficompl jo push (bad) jg lock cltd pop test ret pop in or (bad) and jns xor fwait mov jns bound loope int das dec rcrl (bad) lods ss dec lea xor cltd inc xchg push add dec inc js xchg aaa fisttp cmp xlat lock imul cmpl mov aaa addr16 jmp cvtpi2ps in es fnsave repnz inc cmpsb popf fistpll rcll cwtl push insb xchg imul inc and or bound push popf stos sahf scas test mov popa jns in jle outsb dec lock pop std pop or lea jne mov js cmc sti or stc jo daa out and push dec or xchg jns in in fldl2e sbb sbb sbb leave mov pop movsb add mov shrw aad mov fwait push mov push stc push in mov sub jae fcomi jmp imul in ds icebp sbb loop inc lret lods pop sti jne mov jle push in cmp pop sbb jno and aad mov mov icebp or je rcll inc jb (bad) in mov push mov adc push jle cli scas push aas stos loope repz bnd sub fistpl jge xor pop add scas mov add es into pop dec dec repz sahf mov (bad) in loop inc sarl inc sti cmpsl mov jns or stos xlat lock mov cmp mov adc mov pop jp xchg push jp fcmovu add mov adc jecxz mov test daa lods adcl inc (bad) je pop jne cmp aam fistp dec adc xchg and dec xchg dec push call inc push xchg sarl xchg add push or and lahf jp xchg std fs push iret ret add dec test mov (bad) jb std insb rorl ficom jbe or jo sbb sub iret negl mov out lret shrl jb xor loope ja mov xchg fwait (bad) xor push hlt pusha dec repz adc push add xor mov inc cmpsl jb inc rcr push shrb scas xchg mov loope (bad) lods rcll pop stos adc sub rcl fldt jnp push xchg cmc jb jnp push aam mov adc popa in jns inc mov sub inc rcll pop (bad) sbb sbb cmp adc sub dec fsubl lcall inc push and push jne cs push add mov shll mov out test and cli push dec movsb add movsb cs repz les mov lcall std mov mov add outsl sub call adc insb push mov sahf clc popa stos adc ret aas call push jmp mov arpl jp js jnp fcomps out outsb arpl out int stc push or push stos aaa dec adc in jp sbb push cmp insl imul xor cvtps2pd cmp jb mov mov fisubl push iret cmp pop cmp ja adc cli and (bad) std jge popa inc aas js dec cli sbbb (bad) mov or loop dec mull pop test mov and mov fs es call ret push outsl shll pop inc fdiv push insl xchg lcall sti daa sbb or xchg shl (bad) in aas cmpsl cwtl mov mov pop fcomi jle cmp rcrb mov das push push xchg es cmpsb sti mov xchg mov das sub mov movsb add jecxz je push pop stos mov sbb fldt mov sarb fidiv iret mov insl pop hlt mov inc pop (bad) dec fcom push mov mov shr fnop rclb (bad) pusha lahf xchg int ss mov sub and pop inc sbb xchg sbb adc ss sub push add bound outsl fsubs jl mov loop pop mov or sbb adc loop inc jge xchg pusha adc lret decb sbb mov and pop add pop mov fwait jbe cmpsb add pop cmpsb mov push adc jbe gs shrl cmc icebp cmp mov inc (bad) call std pop dec xchg gs jae clc repz sbb les adc data16 lock sti add cwtl sbb fldl or mov or add cmpsb lock lods std mov insb xchg xchg call icebp mov notb insl pop mov sbbl adc cltd dec push and pop cltd mov arpl mov jp rclb add add push mov or imul repz sti bound loope outsl aaa rorl cmp insb sahf sbb sbb push shlb pop inc and or jl std cmpsl enter push f2xm1 (bad) insl sub addr16 (bad) cmp and in adc cmp scas ljmp pop (bad) ja add dec mov lret pop imul mov mov inc movsb push inc mov pushf in js daa push lock pusha lds cwtl out (bad) add push adc leave packsswb cld cmpsb test or jge fbld dec rorb inc int3 cmpsl add insb mov data16 mov adc mov ret arpl mov dec gs xlat jns sti cmpsl xchg call in in xor xchg lods mov xchg dec bound ds lcall sbb clc fsubs in and fiadd push in inc dec lea add pop mov or dec dec ret out jle hlt add mov mov decb jmp xchg pop push or lods loope inc or pop es jmp mov scas jg mov or push lret fdivl lcall jecxz inc mov pop aaa fadd lods inc pop sti std jecxz lds push pusha stc pop fcompl xchg stos jge cmp dec adc aad (bad) pop and notl stos jl jp (bad) repnz mov fdivs dec xchg repz dec (bad) cmpsl mov iret ret dec dec push mov or jmp scas inc mov mov out fsubs push sbb ljmp loop outsb das push inc jge jbe cltd cli dec mov out pop int3 jae int3 inc loopne push rorl daa mov clc add rol daa dec jge push inc imul lods scas mov ljmp mov inc push mov mov js add sub push mov jno mov sbb adc cmpsl push in lret mov dec fcom jns mov add (bad) mov movl mov popf inc jne adc xchg rorb popa test jmp xchg (bad) lea adc in test fisttpl scas cli les cmp mov (bad) xchg jle popf sbb push call fwait mov rcrl fisttpll adc jbe push xchg mov xlat lods fiadd aaa jle jb daa cmpsb fildl insb fsubl inc fldcw mov sub jge,pt or fcmove cmpsb adc and sub jge jmp mov (bad) inc divl call mov xchg push arpl cld int3 mov jae popa fadds iret or and inc jns xchg cli ja mov daa adc fwait xor mov inc lahf leave hlt data16 sarb nop rclb icebp jo push jmp inc (bad) xor in hlt cmp lods mov pusha stos loopne scas in xor jecxz mov sbb daa pusha jae lods push movsb jb xor adc push lock dec stos icebp stc adc and jbe fs test mov inc fldln2 add pusha push xor mov sti mov or adc or pop cmp cmpsl inc push xchg loopne jno mov mov stos adc fstpt inc ficomp cwtl cmpsb jl adc push pop ljmp les cld push outsl (bad) stos ljmp cli outsl xor xchg jp sub lods xor jne add (bad) popf and fidiv cld neg es cmpsb sbb and fldenv clc mov sbb test and jg arpl cmp push repz adc inc in xor leave mov das cmpsb movsb jge mov mov aaa push mov enter cld enter cmpsl fmul mov cmpsl ljmp dec aad lea mov cwtl rcl stos repz cwtl lcall mov jge sub pop adc adc push mov int3 adc xchg stos pop rep jg or cmp dec imul fwait mov jg adc ja mov or cltd xor lret cmpsb or cli pushf mov push or lret inc xor cmpsl push adc cmp jo push insb out shlb or xor push push inc push pop cmc (bad) repz jno inc imull jbe pushf xor inc fs shrb push adcl fildl (bad) mov adc lock add pop push rol push adc inc lock jne xchg push sbb mov jmp add xor cs cmpsb jle jp xor inc insl lcall jns sub mov ljmp cli xor js es or mov test mov in imul test inc jns mov pop daa jnp pop push cmp jno mov add inc sub insl inc mov xchg jmp push js or mov push imul or push mov cmp sub lcall cmc adc fisubl mov pop pusha mov or outsb mov xlat fnstsw add mul sbb jne add push xor sbb div add out cltd or jne sub (bad) xlat das dec pushf jp test imul xchg clc mov hlt imul cmp daa and and arpl push scas jno dec enter xchg pop sub mov push ss cmp sbb test jno js in ds xchg jae jbe pop mov imul cmpsb xor push ret jle int3 nop loopne xlat mov sub mov data16 repnz lods xor pop jg call pop das les in pusha pusha mov dec cli (bad) lock popf cmpsb inc pop mov les out leave mov sbb imul mov lods mov scas repnz dec xchg rorb mov mov mov cld xchg add mov pop mov movsb cwtl into jecxz fisubl call sbb outsl lods cmp cmp push mov mov mov mov xchg cmpsb test jg sbb push std adc aas adc or xor div xchg inc ljmp push cltd (bad) std dec int rolb (bad) cmc iret repz cli sarl jb les or pop sbb fstpl stc push iret xlat xchg inc popa adc shll lock sub rorl or push pop adc xchg test decl xor shrl jmp push jl jp lock adc pop push stc inc mov (bad) jns jg (bad) dec mov ds mov es pop clc sbb fisttpll inc mov andnps js out cmp mov fcmovnb scas popf (bad) loope cmc xor imul and add sub mov dec arpl mov add repz jle test sti shl pop cmp adc decb jno (bad) push lods sub dec mov jbe cltd mov rcll (bad) fchs call clc add pop jae sbb sbb mov les (bad) ficom daa cmc test adc push imul test jne adc pop mov mov fs sbb pop loopne xchg push push mov (bad) inc jne inc (bad) out sbb and mov cmp test pop cmpsl and arpl sti bound mov pop popa mov fisttp test push imull lock mov (bad) mov cmp push mov jno sub dec adc cltd pop mov xchg sub in jb (bad) scas loopne clc or leave into fstps sbb (bad) in out fsubr outsb push (bad) repz pop (bad) stc pop ja negl scas insb mov scas fistp push rorl jg outsl pop cmpsl mov push mov bound lods push or fpatan cmp inc in inc popf adc jecxz pop into stos jne loope js mov repz mov mov sub insl xor fnop xor fs cltd add jmp mov jl cmpsl sarl xchg mov js out pop pushl daa sbb (bad) in rolb aad dec mov std jge xor ja or in push rcll cmp fs sahf ja pop and push shlb (bad) lcall xor cmp pushf repnz outsb mov fmul (bad) mov mov pause mov jbe cmpsl add iret outsb pop (bad) mov ss ret push inc icebp js ljmp fsubs outsb stos pushf dec int xlat in shr push jp pop push repz stos daa jnp adc je jnp les push jg stc sbbl outsl jae clc cmp in sbb out subl xchg popa or repnz jo (bad) sbb lods cmpsb xchg xor ja lods push nop and add and in nop lods cmpsb pop stc xor cmovno dec cltd cs stc inc fildl dec inc dec mov movsl sbb aas aad jecxz dec pop nop dec es and pushl push cmp (bad) nop in popf inc clc ds loop lcall jecxz inc in inc add jmp dec push push jecxz pop into mov and out sbb mov rcr pop push xlat cltd mov test mov jmp sbb roll repz insb inc cmpsl dec test loope mov cmp test fstl out or out inc xlat push inc cmp mov scas sub push jbe cli in mov nop mov and rorb sub or test ja sbb jne mov jbe nop adc adc cwtl adc mov movsb push cmp push insb jle xlat mov or xlat mov jl ss pop mov push or pop mov js inc mov pop or inc mov push or inc mov push loope jb (bad) mov jae pop add leave or aas sahf jne dec push push push or stc ficoml sti out adc fsqrt push push and jnp xchg rclb push test ret rcll scas lea or inc test or int mov std dec sub push fimull addr16 jns aaa add pop sub jl clc ror inc dec jne clc ljmp flds inc notl es fdivrl call adc in in mov mov cmc add adc lea mov aam cmp adc pop dec dec cmc and and rcrb pop sbb or mov adc scas pop dec mov orl popf popa dec movsb jo out lcall ds je pop mov dec (bad) scas in sub outsl cmp lret pop xchg or xor pop pop cmpsl mov mov loopne xor icebp sbbl cmp movsl loope fs ljmp test imul lock jno (bad) mov cmp mov sbb push (bad) push fildl in sahf add push sub jae mov clc or scas imul int cmp add addb (bad) push pop int and xor push xor or loope repz arpl lods leave cmpsl fisub mov add cmpb sahf pusha jnp mov and dec xlat sub or test jg (bad) or outsl pop shrb xchg jns xchg inc adc mov int xchg test add movsl xchg hlt lods (bad) mov sbb xchg dec cmp jecxz xor adc jno fcmovne adc lahf xchg je subl sub xchg mov sbb jae lahf add int3 jl or or xchg movsl loopne aad mov daa xor psubusw aad inc dec in sbb push int mov jle adc cwtl sbb jp pop pop sbb fdivrl sbb ja pop mov in fsubl clc sbb addr16 jb rclb mov sarl adc mov lahf jp pop inc mov pusha or mov push pop cwtl adc stc (bad) les mov ret jbe add sub jle jno mov dec repz repz or adc mov stos xor lret mov push push add test jecxz mov cmp jae cli inc mov jp leave faddp mov and mov or and push movsb and leave popf pop ror fist lahf mov cmpsl pop (bad) shrb rcll lret jp mov inc jecxz cmpsb cwtl cs add pop sbb add loop les imulb dec js fsts push mov int3 or jnp mov mov mov fsincos fldenv pop mov xor test es inc xor int3 or loop movl pop roll call sahf or (bad) fbld test popa inc jne sbb push cwtl mov mov and xchg scas mov xchg movsl push inc adc js push mov in lods xchg adc xor fnop test ret xchg cmc movsb dec cmp sbb int mov loope or mov jmp jg out or jb lock gs inc lahf mov rcr (bad) pop outsl sbb jns dec pop mov push cld inc dec out insb stc sub xchg (bad) mov dec movsb jne jae push gs jp push jmp sub rorb mov lcall fidivl je dec push icebp jmp jnp push bnd mov popa sarl incb jp pop and out push cli lods inc fs push loopne mov xchg lods (bad) int push mov cwtl shrl xchg mov pop add cmp jecxz mov mov hlt inc and mov ficompl dec test or ret shrb jmp stos or or xchg mov cmp dec or lea mov sub cmp push cmpsl add push jecxz,pt cwtl add bsf or dec mov mov fisttp sbb pop inc js jns outsl add sub mov push clc pop sub xchg pop push fiaddl ret xlat xchg jge (bad) sti push adc cmp or clc adc popa or adc lret dec xor push pop mov and or movb dec lock call hlt mov lods test fistl mov daa fwait addr16 out add sarb cmp push sbb out pop pushf inc rcr add inc push sahf jno inc jg repnz pop bound scas adc dec pop mov mov or push jns sbbl xor cmc outsl pop lock sti or sub iret pop lahf sbb adc sbb outsb lds or lods scas sbb inc jne cwtl imul adcb adc xor roll cmp mov jno mov dec xor jae clc sbb sbb inc data16 call add adc gs adc test push int jecxz js in dec jge mov (bad) xor jecxz dec push cwtl add jmp mov add cwtl push mov in xchg pushw and aaa ficomp dec xchg jmp pop lcall das mov fs mov push inc mov dec in idivb dec add lods mov iret and das push mov outsb add push dec int3 ljmp lds fs mov int sub push shl sub fimul cli lods xchg outsl fldcw dec out lret sub sbb js sbb in imul es inc add add ret and sbb cltd sti out lock inc xchg mov fs dec (bad) (bad) pop int int and arpl and xchg pop lcall in or xor jle cmc jae cmc test movsb pop int3 (bad) jno call loop jno (bad) mov jnp mov stc out and cmpsl rclb cmp mov dec push jbe sub push ret pop sbb inc dec stos hlt dec out iret add xor dec dec std aas sti cmp lock xchg jmp mov cmpsl daa lods inc test and fcoms lock test sub push bnd and clc stos loopne xor adc adc add mov adc or push sub sub xchg daa jnp aas pop hlt push outsl jne mov pop lods fldenv mov aad mov mov dec loopne jmp or push xchg lds sbb jae ficom les inc xchg cmp add lret bswap fwait or jb sub xchg outsl mov repnz in mov iret pop mov stos fcoms xchg sub pop mov mov lods sbb imul mov imul mov mov inc jo int3 ss repnz vmovaps das xchg and mov lods (bad) pop or neg lret in xchg repz pop fmull aas inc jp test gs incl xor sbbl mov inc (bad) insl movsl sahf out sarb jb sub mov xchg xchg repnz xor mov push loopne outsb dec icebp mov std fisubrl cmp cmp loopne jecxz lea dec dec sub xchg lret and mov ja xchg mov out ja pop lods sarl in xlat or icebp incb push (bad) scas add in sbb (bad) pusha mov adc cmp nop das xor cmc cld pushf adc (bad) mov cmp in cltd jg (bad) in sub inc xchg fsubs fcoml lods lcall jne sbb ja arpl inc jb aad mov mov adc push fidivrl out popf push addl mov or fnstsw movsb outsb fstps pop jp popa sti inc sbb out cli sbb lret lods pop inc adc push dec cli lret in xchg sbb jne mov test xor out (bad) stc mov rcrl fimul mov shrl mov lods jmp mov inc imul xor mov repz idivl mov xchg (bad) xor bound iret inc stos mov push cmp int addr16 and push movsl int cmp lret or or adc (bad) stc jmp (bad) xor xchg cmpsb inc jmp lods adc fdivl std in test inc mov int push fwait lods pop leave or fs xor add scas mov or sub shrl cmpl imul fmuls rolb (bad) pop ds insb ficompl pop sahf popa ljmp ret insl push decl (bad) clc (bad) je incl pop inc mov pop aam jno cmc jl iret sbb ret ss pop jae jno add scas popa mov cmp jle sbb sbb or enter mov dec xchg out sbb add test lret (bad) mov pop cmc add jmp lods stos xchg loopne stc add scas cs add (bad) fiaddl sub xchg mov mov rcl mov jb sub stos and ret ret mov imul aaa loope lods fild pop test mov adc lahf push insl fisubrl bound mov jno jb mov sub mov jg mov sub repnz fmuls add fidivrl sbb sbb sbb imul test out pop push sub jns mov xorl aad aad je add push lret or icebp neg sti mov add cmp icebp das mov icebp jnp bound push lods dec sub std out les cli std pushf mov les loop enter pop lods dec pop add movsb push in xchg (bad) repnz push mov inc leave adc mov hlt int3 and dec push rcll addl pop mov ja push cmpsb ljmp fcmovnbe adc repz mov jge clc sub aad mov inc cmp fdivrl xor jo (bad) dec fildll iret cltd iret ja stos in adc jge outsl daa int3 je adc jne sbb pusha daa aad fist jle frndint sbb movsb adc push pusha lahf push lcall mov mov pop clc sub cmpsb mov jmp xchg adc lods cltd scas inc mov mov popf pop adc push and adc test sbb push push (bad) cld pop cmpsl ja daa popa xchg lock xchg shll and jge mov cmp jg mov shrb sarb lcall add xchg adc movsb jp add mov inc add icebp (bad) ds mov pop dec in cmp loopne jo and or xlat negb inc out mov adc imul int3 jo out mov out (bad) movsb sub fcoms sbb or push pop add fmulp dec jno sub (bad) pusha pop jbe cmpsl pop notl xor and cmpl or xchg inc xchg add push or outsb sub sbb pop mov es pop sub pop xor div lds xchg test push mov mov adc iret mov sub js popf cmpsl jg mov (bad) pushf xchg push dec xchg dec aad repz divl enter arpl mov cltd xchg stos pop or insl ljmp daa les (bad) lret out jb inc fildl std xchg cmp jle repz mov cwtl add sbb lret mov mov mov in push pop cmp xchg fstl ljmp mov push mov sub fdivs inc adc cmp xchg jae fld or xlat (bad) fstp std cmp repnz xchg arpl mov loop push adc pop mov mov pop popa jl movsb imul stos jbe jecxz cmp nop xlat sbbl xchg mov jb rcl bound dec cmpsl pop enter inc fsts mov mov loopne pop xor jo repnz cwtl std xchg push in rol dec push pop cmpsb (bad) pop sub pushf fisttpll pop mov jmp dec and loope ficoml inc faddl scas adc mov lods mov or mov sbb bound scas adc inc inc (bad) fnstsw iret arpl adc mov inc pop mov sbbl gs mov jb sbb push cmpsl js push movsl sti jne cmp dec popf insl mov push jge (bad) lcall pop arpl or jl add cmp jg loope lret fdivr sbb inc sti cmp (bad) iret outsl pop ljmp push insl fisttpll jp scas fidivl xchg cld mov fnsave es fsts inc fisub mov pop jmp push push std sbb lcall or movsb push test mov cmpps cmp mov cmc mov stos in std mov cmp mov sti jb scas push jge inc mov inc dec jbe mov lods fnstsw adc cmp pop dec jp add (bad) cmc movsl xor mov xor int sbb mov jnp loopne imul inc sarl lods push inc cltd cmpsb je movsb mov sub clc insl jmp fiadd mov cmp mov shr mov scas xchg and and or jb sub fyl2x jb (bad) mov (bad) push (bad) sub and pop imul inc (bad) xor push cmp ficoml icebp jge stos xchg rcl mov and incb pop mov hlt dec mov cmp jle data16 outsl cmp pop xor bound dec call aad shrb (bad) push leave cli dec in xchg enter push lds lds fist scas jns mov inc mov mov loopne mov rcr repnz fist imul lock or pusha imul mov push (bad) mov or lds mov add push hlt sbb cmp mov xchg lcall or fidivr bound daa daa push in pop mov fcomps push out shll loop test dec mov dec sub (bad) rorb sbb clc data16 push std push je jbe pop je mov rcrb mov sub aam gs dec and jle and fcmovb out sub add out daa repz cld ja adc rclb sti adc jmp inc fnstsw jle cmc es sub inc pop movsb ds pop ja jns test cld sbb or mov outsl mov xor push fidivl or sub dec (bad) je rcl mov push shr mov sbb mov mov mov (bad) lods inc cld mov add xchg test clc and cmp sar mov cld or jl jbe xchg dec push sub imul jmp lods push mov es dec pop or mov imul dec add in xor push jae test mov int push shr daa dec (bad) sbb popa stc mov mov fs push mov mov pop pop lea jl xchg push mov jbe imul fcoms nop arpl jmp push (bad) cmc rcl loop cmp outsl jp cmpsl ret sub jns out jo mov call xchg in mov lret mov mov arpl shr push mov adc cmp add aam mov (bad) fiadd adc inc jns add imul mov stos sahf add lret mov in js outsb sub push xchg cmpsl mov rolb ss fiaddl ljmp inc adc pop clc pushf mov pop xorl (bad) jmp test aad sarl dec das jle outsl loop cwtl jbe jnp outsb ret lods test fisttp sub nop xchg jne je and mov cmp xor jnp cwtl arpl les jnp xlat (bad) movsl jl arpl loop inc mov scas sbb xchg dec shll test (bad) mov lret jnp (bad) aad addr16 lret in push dec push sub fs pop popa cmpsb fsubl pop ss mov dec adc pop push (bad) cltd fidiv and rorl outsl sub sbb fisubr push inc xsha1 cmpsb mov jp sahf (bad) cmc jbe movsb rcll out lcall xlat lods stos outsl cmpsl pop cwtl dec lods cmc mov daa pusha stc xchg nop faddl adc loop loopne inc insl dec or shr pop or xor loopne jno sub mov loopne lods mov pop push mov push lahf mov inc push and dec push ja push jno jae js xchg call cmc dec dec inc sbb mov jno call pop xchg pusha pop sbb dec enter push ja push or or and test out (bad) fnstcw lret andl xor inc je les sbbl dec sbb mov inc add inc sub push mov repnz mov frstor (bad) adc push sahf std scas fistl push fldenv dec push jg cmpsl nop or push add pop stos fcmovnb dec int3 add loop mov aaa push shr lods sub mov sub push add fisttpl mov fucom jge mov xchg mov std mov sahf subl repnz add push repz pop and add sub adc in push and test mov outsb and in xchg test jl xor dec pushf sbb and mov stc rcrl stc add add or rcr test add (bad) imul inc or add loope out sub sbb lods xchg xchg fwait clc mov repnz in fwait sbb testl (bad) pop in stc daa ret pushf cwtl int cltd lods aas push and popf ret (bad) mov pop push xchg xchg lock sbb pcmpeqb inc lcall xchg es testb (bad) loop jecxz loope fldenv je inc cmp pop aad jnp sbb cli arpl pop push loop ficompl add in sahf or pop ret test jne jns or xor add (bad) cmp lcall (bad) insb mov out and or push lea arpl sbbl xchg jmp xchg lock mov mov adc cltd add sbb mov in movsb int3 mov inc mov mov inc ljmp pop std jbe pop mov pop stos std mov or aad jmp insb mov call push out jge cmpsb push jbe sub add sub (bad) xchg out nop test insb mov xlat sbb (bad) adc jge inc or dec pop (bad) cmc dec pop arpl pusha pop sti xchg das iret cld sbb xor mov or jecxz clts adc cmc (bad) pop pop js fcmovnu mov in fbld in sub cmp popl rcrb pop lret mov or jle xor out mulb push push dec shll sbb pop scas mov (bad) int3 and pop fcomps fwait call mov xor or pcmpeqd fs stos or scas jecxz mov call jge lods cmpsl jmp insl or movsl test add ret jns negb inc jmp sbb test (bad) scas pop lock sub (bad) sti mov loopne inc sarl pop push cmp xor jnp ja mov mov and mov cltd xor popf cmpsl jmp adc inc jge cmpsb cmpsl bound mov jns lds aas fwait in jp jb sub cmp lret lcall aaa or jns dec popa ss push jne int3 xchg lods test jbe push aad call inc sub jno sub adc fstl jle add ret loopne sbb sti fcoms inc movsl js adc mov sbb or adc in in cmp pop jb (bad) sbb cmpsl rcrb mov (bad) jmp pop jmp mov repnz enter or leave cld ss lret cmp stos jl lods cmp lret (bad) rorb scas jmp mov xchg fimul mov mov sbb pop (bad) das daa movq enter or sbb (bad) dec jnp push test xor sub mov xchg mov (bad) fadds sub mov mov push call sarb test mov and mov in add fldt mov cmp lret mov pop push clc pusha and mov ljmp insb cmp push add stos out fsubrp mov xchg je sahf and sbbl call jg loope push jne xorb sub lret mov xchg inc jo jle je in mov rorb ret adc movsl leave inc out jmp cmp cmp repz out adc sbb or inc push loopne jge out and (bad) aas fcoms add mov (bad) sub or ret clc jb jmp inc or mov sahf pusha shll xchg inc push out push push or cmc mov test cli add (bad) aam movsb lds mov pop xchg or lods push gs scas xchg pushf dec cmp stc and ror xlat cmpsb int3 jle dec jl xchg pop ret mov dec push dec push lock push mov mov and push jge push pop add pop scas sarb dec sub mov xor sbb out push in push jne cmpsl aad orb lods loop dec loopne loop dec out sub dec cmp mov xchg ret daa out int arpl stos fnstcw cwtl in adc daa mov fwait cmp pop in pop lcall cmp aas call jg stos inc popa into sub test xlat addl fwait mov (bad) idivb sbb add lods ret (bad) loopne enter and mov adc inc lcall inc and orl rcll std cwtl and sbb pusha fcoms sbb (bad) in mov out out pop jo mov lods mov jg xchg cmpsl jo cmp call inc (bad) mov imul mov arpl xchg mov push sbb std ja push fisttp inc mov pop (bad) lods movsl dec pop jne pop mov mov daa pop popa out mov insl cmp sub jp sub jge cmp scas data16 fisub or clc mov lds gs inc fsubp cmp inc cmpsl mov or les enter xchg fild mov imul js sub jle (bad) clc mov push jns js adc sub and popa xchg lods into or pop je and xlat xchg pop lds sbb je cmp out sub scas sub ds arpl test pusha mov les and mov repz xor jp lods pop (bad) cmp sbb cmpsb jg jp mov rclb dec mov (bad) mov jp testl ljmp mov pop in sub adc repz (bad) mov pop out (bad) fyl2x inc mov test (bad) mov dec push cmp stos and pop mov mov mov pop sbb loopne test and fcompl scas test stc (bad) sti pop cli push pop mov push jbe adc jmp faddl out jg pop lock scas jp test fs mov or pop in mov mov sbb xor mov add stos stc daa jmp inc idivl dec fcomps aam add ja aaa cmpsb jne jecxz movsb or lods adc jl fadd dec and js inc inc dec pop or xchg out push jmp (bad) mov sub in pusha lea mov and imul sarb popf mov shrb sub testl (bad) dec add mov sarl pop xchg add pop xchg (bad) fcmovu pop jno aam inc jae fist fldenv dec cmc dec (bad) cmpsl adc fdivs ds adc ret gs ja or jg mov mov pop (bad) imul push lcall inc mov sahf iret je rol lods sbb inc sarb ret mov mov les and decb fstpt xchg fcoms xchg test mov into push icebp mov loopne stos rcl imul je stos fsubp insb test mov sbb lret add inc fwait fwait push mov and ret das mov jl xchg je out mov xchg sbb mov lods addl fldt (bad) lds cli sbb xchg or andb inc sub or cmp sar imul fcmovnbe ja push (bad) pusha test lea idivb (bad) stc sti mov adc fildll andps adc mov sub pop xlat mov fstl add fcom cltd mov addr16 test lock fcompl pop push lcall adc dec loop sub sbb repz fsubl popf mov bound mov inc push or cmp imul xchg (bad) aam es popa (bad) nop xor mov jecxz rolb stc insl pop shll pop mov das (bad) cmpl inc pop inc push roll and cwtl int jmp loopne popa mov lock fs cmp jmp jp mov mov or call stos ss inc cmpl scas cwtl fdivrs movsl push lcall testb in test jmp jno dec fcmovnbe bound repz stos mov dec js dec (bad) dec ja add and pusha loopne les xlat sbb mov (bad) andb pop mov (bad) pop lock in sub pusha jno sub sbb sbb cwtl rcr mov lret ss inc cmp inc push in mov add sub add sub lods jl scas sub sarb scas and jb jl cli insl shrl test insb int3 mov cmp xchg lds in jg aas data16 call inc jbe aaa inc jne and mov aam mov mov in dec shrl add cmpb jno xchg (bad) ss or mov or pop es add loope dec imul ja std mov push std jb jb leave jg push fnop fldt mov loop cmp xchg inc (bad) aaa out out out cmpsl or dec adc or loopne cli inc lea cmpsl (bad) sbb sub push adc sarl pushf (bad) sub jns mov adc xchg lods fldenv mov jo cld leave out scas push arpl imul inc loopne pop (bad) repnz dec mov es sbb lock mov js pop fstl dec scas cmp aas jle jle nop stos and nop inc mov dec out or xchg inc xchg cmp pop mov xor inc add xor adc je mov add jo leave fs (bad) push sbb or jno jnp loope jns sbb sbb cmp lock fwait adc pusha aam xchg push lods push adc pop (bad) cmc loopne dec or xchg fisttpll scas incb ficom ror xchg aad add adc mov jo int3 xchg or mov pop pop mov mov rcr loop idivb and sub cmc cltd adc call mov in pop arpl xor insb stc outsb pop dec fwait mov imul loopne dec lcall cld mov push mov jl int enter mov adc dec and xor stc hlt inc jne aad cld aaa daa dec inc or mov addl ja add lret mov sbb push rcrb std scas pop stos mov fisttpll sbb imul test adc pop fisttp lock mov xor xchg pop cld mov pop dec cltd out sarl insb pop pop (bad) xchg sub paddsw pushf cltd rcl inc test add inc dec flds pushf pop dec lock movsl mov js repnz fwait loopne,pt scas ds or pop inc and lret xor adc and sahf (bad) dec push and int je pop add (bad) pop push add (bad) xor cmc add xlat dec mov in lods mov dec inc in dec fdivr out sub (bad) stc into push shrl int test xchg sbb adc adc xchg push mov inc push rclb pop mov fs fwait and arpl out fcom fnop bound pusha lea push mov sub push data16 push xor mov aam or sub dec add xchg popa mov fwait outsl std test mov sub iret ljmp fs loope cmpsb pushf mov cmp bound jl dec push cld mov mov xchg bound (bad) (bad) hlt (bad) fisubl js dec pusha imul lahf lods stc int3 cmp cmp lahf dec cmc xchg iret stc inc push mov stc pop jae and pop mov xor sti dec aaa psllw mov mov or pop or mov adc sbb pop jecxz sbb jo and or mov subb fs jb int jl xchg sbb ret test fldenv mov or push mov fcmovnbe in subb adc xchg dec popa in nop jecxz and vcomisd push dec mov push mov pusha repz (bad) mov xchg ljmp fdivl dec out add je and call js and mov mov int nop mull jp lds stc jo dec ja lds add in out mov clc outsl mov dec mov cmovle es mov lock add clc stos mov in cmp sub push sbb fldt inc jecxz or adc cmp stc pop pop insl jo pop stc negl (bad) or sbb cmp enter push outsl pop inc cwtl mov das bound dec xor inc push stc int add leave pop cmp sbb shll fcomps pushf movsl fwait pop jg pop sarl lret cmp aaa jnp icebp add inc dec add inc mov pop dec mov push ret hlt push gs sti imul arpl cld add fcomps call jns inc in subb sub out je adc out aas repnz push test js adc mov js or repz pop sub sti pop inc add push inc mov push ret bound pop dec (bad) out and insl lods and notl rcll and ja cltd lods jge push fcoml and pusha add imul arpl push jo aas dec in jecxz loopne push mov xchg adc pop cltd mov stos outsl rcrl inc test sti pop (bad) mov inc pop jne xorl mov xor pushf imul mov lds inc movsl jae lret cmpsb add add adc xchg jns jl lock inc cmpl shld test dec cmp in (bad) cld lret xor scas outsl mov mov out push xchg dec ds inc mov push push push add xor pop leave mov dec neg enter arpl add sbb dec andb icebp mov sbb mov inc pop divl inc data16 or inc cmp mov jge cmp imul mov aas lods shrb aas cmp pop in sbb std arpl rcrl sub ss and addl lea xchg repz fldt push adc (bad) lret jg sbb xchg or jg je hlt ja rcr push fisubr sarl xor jnp aam dec loopne stos enter dec xchg in insl sbb lret cli sbb mov pop lahf jle movsbl mov arpl sub jp nopl aad dec sbb sub pop or and mov mov cwtl jns enter ret fwait (bad) push je (bad) rolb jbe stc mov inc (bad) cmp aaa fistpl pusha fdivp pushf mov dec add mov ret inc pop mov stos test lcall mov jge test jecxz xchg inc in rcll (bad) adc shl fnstcw mov ret shrb push cmp pop xchg pop sbb push loope pop xlat cmpsb mov mov arpl int out jp sbb (bad) jno ds popf xor nop in rcr adc push (bad) stc popa xor repnz (bad) add cmp xchg movsb mov mov mov test dec mov pop aam jae cli lcall push cmp add xor out mov insb and sbb lods fsubrp in cld add add mov jp rcll clc gs out and aam jo enter (bad) dec inc fadds push jge dec mov jl add es add or shl lea xor clc (bad) mov enter icebp push cmp push data16 mov pop xor (bad) jb rolb pop mov add add pusha jbe ret xchg out lret sbb push loop fs mov test loopne rcrb fisubrl jge ret inc nop loope into into sbb ficompl pop enter sub in lds leave push (bad) icebp repz jbe dec lret pop cli notl cmpsl or push push adc (bad) aas pop jno adc pop xor mov jae lret fnop mov mov (bad) (bad) mov jbe jne mov scas pop xchg cmpsb xchg arpl data16 pop mov add lret iret insl inc clc push and dec push pop iret pop pop sub push mov adc (bad) fnstcw cltd popf sub mov add adcl cmp bound dec mov aam lret (bad) pusha and ficompl mov sub lret pushf mov xchg jg idiv mov mov cli cmp dec pop push aaa inc xor mov push stc push sub push jne popa in jg fadds push pop (bad) sbb mov lods out (bad) fsubs cmc pop jbe mov ret stc ficomp (bad) mov nop push sar pop sub addb jmp cli sub sub xchg in iret sbb add test imul nop in push in les mov sub (bad) jb mov popf ficoml mov jmp lcall lds (bad) iret bound lods sub popa pop insl (bad) jmp and int3 jge push movsb pop adc mov cmpsl ss inc pop out (bad) call rclb pop dec sarl cmp loope xlat jp pop les hlt mov jle rcrl dec push cmp out js jmp xlat insl je add push outsb and rdpmc rcrb jge cli push jle and ror rorl inc (bad) push jne cmp rcrl leave arpl (bad) or js xchg xor daa in test addl fcmovnbe mov mov jo cmp mov inc jno lods xchg push setnp mov xor mov mov and fcmovu jbe add int xchg fbstp sbb test repz insl fcoml int3 pop inc add addr16 fist mov jmp cmp out mov jb xchg shld pusha push or cmp mov xor push loopne lds icebp (bad) pop (bad) pushf pop push ss push cmp (bad) or divl stos add shrb ljmp ret scas mov inc pop stc lock sbb adc or add mov pushf iret pop rcrb or pop popl test (bad) sbb (bad) (bad) adc dec je fcmovbe jg out pop loopne jae outsb lahf int3 imul fimull out arpl lahf ret mov dec lret add or fs add adc mov lcall pop jg (bad) cmc stos andl push (bad) pop fldenv clc pop sbb ss pop xlat nop mov dec movsb inc lock mov hlt leave lock mov lcall les add pushf leave jns mov jne stos pop clc lods sub cmc or imul jb shr rorl dec fsubrs jb lods mov mov mov jge,pn mov scas mov or mov stos xchg mov cmpsb rcrb mov adc cmp icebp shl mov rorb fbstp (bad) jl movsl (bad) adc push add inc mov xor inc or xor ret sbb in frstor or mov sub (bad) push lds jmp mov clc fwait pop roll xlat pop add hlt mov outsl inc lods insb xor in je lret movsb pop mov nop popf in cmpsb mov cli ljmp xor vshufps shrl inc aad sub xchg inc sub pop loope jbe inc lock push aam add mov mov ljmp aas pop in fcompl in outsl add cmp inc pop movb jp imul out insb inc xlat hlt pop lret pop pop cs (bad) dec (bad) dec jnp and sub divl aad out jo popa add sub loope dec (bad) adc aad pop lods and inc ret cwtl push scas sbbl adc data16 mov in mov std imul mov add pop fiadd mov mov add popf ds lods popf cmp push call data16 adc mov mov xor lret sbb aaa rolb inc sub daa testb mov push ja xchg cld sub repz dec aam adc inc xor push jo mov imul out sbb push std iret js inc aam sti test jg fidivr rcrl dec dec mov dec xchg jo push outsb ret aam push addr16 sbb stc and inc pop in aad imul jne notl inc jecxz and jge mov inc mov inc mov sahf mov lock clc (bad) in sbb ja inc mov cmp sbb in cmpsb inc sahf push js arpl adc fdiv fwait jp test pop lea hlt addr16 and gs add mov sbb mov popa mov scas cmp inc pop jns daa jnp sbb cmp mov fldenv mov xchg arpl popa sbb lcall add inc ds test int3 cmp popf sbb movsb jecxz push mov shrl imul loopne jecxz sbb repnz sbb daa nop inc popf fisubrl pop bound xor mov jl sbb xlat out daa pop int3 lcall cmp mov arpl cli push sti (bad) push sbb (bad) mov jno repz cmpsb mov pop inc cltd xor stos (bad) fisttp mov dec dec push (bad) dec lcall mov stos cmpsl arpl push in cld sbb call mov jb xchg in cmp cmpsb cmp mov add xchg mov adc mov jmp (bad) jp rcrb or test std les mov dec adc icebp add mov movsb clc mov fldcw fimull sahf jecxz pop mov (bad) insb xor inc inc sbb or das (bad) push fstpl gs mov xor aas insl push mull subl frstor sub cmpsb outsb rcll cmp xlat shrl fsubrl pop lods xchg mov test mov push test adc fnstcw jne add adc ljmp pop les jnp add out and in add xchg (bad) push shl cmpsb imul cld in mov jg jnp pop mov sarl sub jl xchg xchg xlat push invd sbb fdivs sbb insb cmp (bad) mov pop sub in lahf xchg xchg pop int3 arpl rclb inc push fiadd xchg cmp pop push mov adc mov dec jg xchg adc mov cwtl sbb xchg push sahf dec cmpxchg addr16 in mov lret pop in xchg add jecxz sbb jne pop push fcoml cmp leave js bound dec sub fild xchg and mov sub aad inc inc loop ds mov ds sbb xchg jo cwtl imull mov mov jp push aam and pusha push mov mov sub call cmp inc ret sti sub pop jge or pop or inc movsb lods mov mov stos cmc mov push pop xchg lret shr add add stc rorb cmp sub push in std outsl jbe cmp insb movsl aam mov lock jl mov fwait je scas lods ret jecxz neg mov mov sarb shl adc and cmp orb ljmp lahf call psubsb rorb mov or sub cwtl cld sbb fsubl and outsb data16 dec push test adc (bad) jae bound inc movsl repz outsb cmp add pop cmp mov sub pop add jl loop inc pop jp dec insb stc push mov ret add xchg lcall (bad) fmull push pop cmpsl imul loopne push js sbb fdivrs push jo adc je adc push std inc or adc pop aad lret pop pop enter lods stos rolb jae sub aas xor nop sub cmp ds mov xor jae fldt pop (bad) imul pop outsb mov decb cmp (bad) lods pop imul icebp (bad) fdivl ljmp ret fs sbb add cld ret jne push mov xor (bad) aas stc call xor sbb sarl shrl jmp mov lret and or int sbb mov fdivrl test jg pop push lret push jge jae pop loopne pop cwtl mov add test sub (bad) aas xor jg cs fwait loope sahf data16 dec jno icebp dec (bad) faddl xchg (bad) aam addr16 insl jns or dec pusha or jp (bad) stc lcall pop loope cmp and (bad) or push inc (bad) adc popa adc mov jl cmp arpl pop rcll je jno mov xor mov andb mov adc sbb push stos mov mov xchg cmp ja jns sub adc inc mov jl add push iret ljmp mov daa mov mov xor inc pop jecxz cmp add jnp arpl jge cmc inc adc jae mov sbb bound mov (bad) pop fistpl push xor sbb add lods fstps repnz push fwait mov sbb pop mov adc insl dec jecxz daa sbb mov js shl push jno mov jg das xor nop push inc loopne push mov jl push inc sub push inc ss sub pop mov roll cmp lret xor fidivl int3 in adc jb pop stos (bad) xchg (bad) in movsb int3 inc jmp movsb cmp cmpsl rolb or jae insb or call xor push and mov test pop mov test add cmp sub (bad) (bad) pop pop loope in adc jno jp cmp lods sbb sub push (bad) insb push push addr16 push test cltd and imul cmpsb jo adc loopne lret pusha adc repz pusha jne jb sbb push sbb stos push insb std push nop mov add je sbb push jp inc mov sub jp (bad) cs je mov mov dec outsl pop (bad) sub imul fs in sub leave xchg subl add push mov pop pop cmp xchg (bad) pop inc clc out int3 jb jl push cltd jp in mov lcall in xchg or stos repnz mov inc pop icebp shrl or lea add and cmc movsb lret lods xchg idiv lcall or push sbb inc mov mov mov fdivr cmpsl sbb scas lret rcrl add aas xor push sti or nop pop and sbb lcall xor cs sbb jno jbe pop test fs mov inc outsl scas sar xchg das scas out or inc (bad) lods jmp popa movsb (bad) sbb (bad) push ja mov push insb xchg push (bad) fs cmp int mov gs pop mov in xor scas cmpsb lds mov es stos push in es adc add hlt adc adc fcompp jmp mov pushf scas adc push bound stos add push subl lahf pop rcll adc scas shrl pop mov js push mov mov jb and inc out lcall sub lds mov adc add xlat sub addr16 aas shll mov dec sub push xchg jb jae lock jle out or xchg cs fdivrp add leave ljmp adc ds fist and jle shll xlat jns mov pop add ljmp insb xchg cmpsl ljmp ljmp imul outsl fidivl je loopne cmpsb pusha adc sub test dec lock dec mov pop fildl fdivl and scas daa or shrb jb loope call in aas mov pop push vcvtps2pd cmp sbb mov lock and cltd in mov push pop fxch sahf inc pop fsubl inc lcall mov mov rorb cld or in sub mov push inc add hlt rcll mov pop pusha call pop and jl fisttpll mov (bad) jbe jo std adc cmp jns lahf lret pop stos lock adc pushf (bad) add cmpsw (bad) sbb jmp sarl jo cwtl stos mov jne dec insb shll xor dec ja mov mov call rorl int test add lcall sti fs push push inc jge fdivs mov mov imul roll in sahf jp and and dec push lds aaa fdivl pop push ss mov rol xchg add cmp add cmc outsb das cwtl jecxz inc cwtl out push inc cmc push adc ds or mov and cmp and sbb mov mov adc movsb and subb cmp mov xchg insl xor add push mov ss add in or adc and imul cmp inc pop cmpsl sub hlt sbb or enter lahf xchg fcompl xor sti dec inc cli dec arpl inc xor hlt jno aas rcrl xor sub mov push jl sbb mov dec ljmp jmp es cli out pop jle xor fs ljmp (bad) mov in dec enter cmp mov ljmp aad mov pop jns les jae cmpl test idivl jbe jmp adc sub cmovbe jecxz std push insl movsl push jne,pt pop mov push jmp inc ljmp aas adc lfs js mov mov or sbb int3 cwtl fdiv xor add mov or iret mov sub cmp push xor sub mov es adc jmp adc out fmul mov mov sub test mov gs in sub jns sub loop pop adc or loop xchg imul add lea push mov iret cwtl adc push jbe fldenv nop dec adc or scas in ss cli or aad inc pop xor es ljmp cmc xchg std lods (bad) jle aad ds mov xor sbb add repz lock xor jo es inc loope and iret movb xor lock enter push movsl popa cmpsb scas dec inc jne add cld add jns outsb aad jnp lock (bad) dec lahf sbb push inc adc faddl (bad) test outsb jmp ja sahf cmpsb aam pop add fldenv rorb jl jnp xor jne ret in in xchg add push cld xchg fcomps pop mov ljmp jecxz js sub inc clc jbe push in push movsl rcrl push dec jo arpl test jle nop insl add mov mov jns test inc add xchg xchg jl cmpsl hlt add std test decb jmp ret (bad) jne or pop mov inc not inc and sub popf icebp cmp fcompl push ret inc or clts mov out cmpsl orl in rolb inc mov mov in les sbb insb loope push jns mov xlat fildl movsl jmp mov jp push jb (bad) aad push scas mov jp out leave pop aad and incb cmpsl clc test and xlat pop gs aad jecxz jns lods jmp mov fdivr cli inc mov xor mov aas jbe pusha mov push jle push mov pop shrb and dec inc xchg sti and xor push (bad) scas (bad) jmp sub push jmp mov loopne sbb in mov mov jl or (bad) (bad) jno cmpsb add repnz pop insl add jo rol insl movsl ss pop pop lret pop mov (bad) cmpsb lock adc ficom xchg outsb stos mov xor cs jp das cmc (bad) push pop push or add neg mov xchg mov push fistpll xchg mov ret cmp cmc xor add hlt dec dec push jp pop adc (bad) xlat pop test xchg aaa and inc (bad) adc dec lods mov in mov (bad) and adc add dec sbb loope inc inc cwtl mulb mov daa arpl ljmp mov cli fwait sub ret fwait dec push mov dec in ja mov cwtl mov xchg fistp push adc inc repnz pop mov lods test in lcall (bad) and stc adc inc call inc enter dec clc nop jae mov and fmull test adc pop les (bad) test mov dec pop jg sub dec push fbstp jne lds das hlt jns rcrb aaa xor (bad) fsubl mov pusha xor pop cmp push int mov jb dec jns fmuls inc das inc loop push inc je push adc hlt sbb mov jle xchg mov je pop jne movsb jb repnz jmp xchg push out fs das inc pop mov add (bad) xor mov xchg shll push mov fdivr dec dec xor fst cmp cltd mov jnp insl cmpl jp sbb hlt (bad) mov lods rolb sub jle pop mov xor scas cltd mov jecxz data16 in ret out imul lods test inc add cmp daa mov sarl pop or (bad) lret shrw xchg (bad) mov out xor scas mov pop outsl outsl inc mov int roll adc sbb sub bound pop sbb mov sti scas idiv mov int3 mov push jnp cli scas loopne jns xor addr16 test (bad) jne cmc mov or das leave and or push mov inc push push mov jae in mov push bound inc push iret adc lock inc adc mov cltd sbb out outsb xor mov gs or push cmp aad lods inc adc leave jae lahf les adc arpl repz pop xchg mov mull push idivb cwtl es sbb data16 fisubrl popf lcall movsb adc adc xor xchg cmpsb mov sub inc cmp mov icebp jne sub jecxz scas cmp notb xor and imul adc std cld fcompl pop loopne fidiv fscale dec inc icebp stc jae pop repnz pop xchg cmp fwait inc outsl out adc sbb divl add inc jb js xchg in push cmp push movsl mov test into dec adc push je shrb jp pusha aam adc (bad) pusha push adc mov jp jmp push minps push sbb inc (bad) push xchg push scas dec and push fwait mov mov lock push jo divl push xchg jmp cmp mov pop pop sub (bad) push (bad) xor mov cli ficompl dec les sub mov cmp pop add es sarl stos inc cmpsl ja ficom and fwait sub jge imul aaa jg ds scas jle fcmovb and stc push gs mov call pop rcll arpl adcl pop jno lea lock stos rol cmc (bad) aaa shrb jno push and adc inc or pop in cmp jne test lds mov cmp xchg mov push cmc pop in push jns call cmp lret mov sbb or in imul mov in add push jne ljmp rcll cltd je in pop out bound cmc mov push mov mov outsl int out (bad) in ret out out pushf sub xchg insb cmpsb mov or stos clc les pop fiadd and and fdivrs nop mov mulb fdiv (bad) mov mov clc pop adc pop cmpsl sbb cli inc xchg jb popa movsb or mov lea lret xchg loope std lds add push cmc aam les sub lret mov data16 jno adc (bad) jbe iret pop ret xor lret push sar adc fwait nop daa mov add stos (bad) pop adcb pop mov pop mov call push dec loopne scas mov test fimul in inc add fcmovu fdiv cli pop sub sbb ds cmp inc ss xchg loop inc cmpsl cmp cs imul sbb fstl inc or pop jle test testb xchg mov xchg (bad) add jns scas lock imul sub xor rorb fbld jne jecxz and cmc ss pop or sub sbb xchg cmpsb pop (bad) int3 movb push jno pop cmc jecxz xchg pop rcrl dec sub mov lret je mov pop (bad) sahf mov mov mov mov push sub push lahf adc nop sbb movsl xor push dec movsb push xlat sub in ss nop lods ss mov push bound (bad) xor adc dec push push rorb int jnp push add rclb ret lea pop adc mov adc push mov mov lcall fwait sbb jecxz lcall xchg cmpsl dec mov fisttpl mov enter mov jb adc xchg stos adc popa and ret xchg sbb sbb iret js fimull mov out push cwtl sbb dec adc inc xchg or ror jl jb and mov or rcr add mov xor sbb out mov or fistp sbb sahf pop aam xchg out into fadd rol add mov xchg clc in and loopne xor in cmp sbb addr16 fucomip (bad) arpl cwtl (bad) jp das lods mov jg jnp int3 pop push xlat sbb aad iret rcll mov int jmp aam lods aad mov (bad) or add test std jae roll inc adc push inc pop xchg dec fisub xchg repnz inc stc out pop xor in cmp push rclb xor adc add popa addr16 push xor lds xchg aam or popa cld lock jge pcmpeqw sar mov data16 test sti jo les jecxz clc xor adc rcrb aam out pop add xorl mov test cmp jo adc pushl (bad) add movl ret fxam mov lods add add js lret repnz mov mov out hlt (bad) sub pop or dec popa call fldl inc push pop adc clc dec mov and push add in daa dec mov push xchg movsb adc mov jl ret mov hlt mov repz sbb sbb cmp nop mov sbb mov lods cmc sahf sbb push sub test jecxz in xchg or aad push or add push lods jmp push (bad) mov js mov call fwait int mov jns (bad) aaa test jge xchg jnp hlt jp stos lock lret push clc in jns or xlat lret ret sub pop adc std xlat xchg (bad) jmp mov dec mov negl jbe xor es idiv lds faddl inc fisttpll dec jecxz fsubrp sub pop stos stos mov inc test dec shlb cmpb jne decb push test aam jb loop js ficoml fs adc mov dec sbb inc pop fimull jle cmc imul lret es aam pop stos mov andb pop and test stos (bad) push jae xchg mov add pop inc hlt push mov popf inc (bad) push inc push dec cmp test pop fbstp adc test loope sahf cmp push jg sti sbb xchg mov adc inc sub xlat push aad rclb jno ficomp into inc shlb ljmp shrb stos popf loop and jo int mov repnz mov popa mov shr mov fs leave jnp xchg ficom fwait push in insl es xchg adc (bad) repnz cmp pop or out stc jl mov cli xor sub push sub popf lcall inc data16 movsl dec sarl mov fisub pop jl leave daa adc rorb jp pop fcmovb repnz push mov clc ja jecxz hlt and rorl pusha fiaddl jo dec cmp sub cmpsl dec out jge enter das and lret es jb fstpl daa inc jno mov shll (bad) lcall lds rorl jge icebp insl sbb xchg aam xchg add push jae cmp xchg adc pop xchg sahf inc negb out jno adc fmull add or das or mov mov popf xchg cmp lods cmpsl adc pop add mov popa sbb fildll lcall or add movsl fildl sub daa sbb punpckhbw adc orb push out mov mov stos push sbbl mov mov popf stc daa inc xchg sbb xchg std fsubp xor scas scas (bad) mov sbb add arpl dec (bad) aam cmp pop xor popa in mov cmp mov nop push lock leave (bad) daa mov pop jl and xchg pop dec ret xor adc pop and or inc pop (bad) or xchg rolb push push hlt jb jle xchg rcr add out fdivrl sbb sub les les jg loop insb sub push repz push sti gs push pop sbb int mov xchg (bad) fnstsw inc sbb xor ficom jle push daa adcb cmp fsts and cmp add xchg adc add stc hlt outsl add pusha inc rcrb outsb mov (bad) jo icebp cmp jne dec ds jno shr lock int3 stc push jl inc imul push or push dec dec pop push or icebp stc sub aas ficom pop dec ret dec jae mov or inc es dec sahf (bad) jo aam sub mov mov dec xchg adc cmpsb push fcomps cld loopne inc fmul xchg stc (bad) jbe sbb ret gs jno bound mov push daa mov mov js ror test aad lock shrl xor aaa gs pop stc add movsl xchg inc pop stos test jge pop (bad) ficompl ss xchg cmp pop push daa jb,pt push mov popf (bad) push and rcl inc clc pop pop jbe je push or cmc testl aam inc out fnstcw movsb pop cs je das mov mov jp fcoms push jne (bad) pop mov push and dec push gs push pop push icebp mov fcom lea cs outsl int3 adc sbb pop push insb jnp sbb mov xchg int3 sti push add jl mov mov pop call or add sbb push aas cld xor idivb or scas or xchg dec xor xlat cmp mov dec clc jne jne pop hlt out enter adc sbb cld push jp jp andl (bad) jecxz xchg pop mov push shlb cmp lods fucomp pop push in lahf (bad) mov dec dec jns sti inc not inc jge in outsl outsb pop js fild mov call stos pop dec pop jns push jno fcmovbe movlps icebp add mov ljmp cmpsl jbe call hlt lods xchg and shll xor dec xor rorl jle push xor jecxz xchg add push js ret jnp and dec (bad) jle mov jmp or pop jl rcrl rcr cltd or xorl shll mov std jmp xchg pop mov dec lods popf dec test mov push push in std daa push inc (bad) mov sub outsl sarb imul jbe jae sbb daa ljmp sbb ror icebp jmp pop dec scas loop sub je jb or jbe (bad) aam (bad) aaa pusha sbb scas (bad) sbb push fdivl in lock mov dec fisttpll push scas adc rol pop and shrl (bad) xacquire pop or mov mov lcall aad xchg xchg nop and les cmp pop pop push inc in mov rorb hlt shll mov repnz dec jns add dec sbb mov imul cmp daa push lods inc ja mov mov sti sub fs andb sarl push shrb (bad) hlt sbb jbe inc lret icebp dec fnstsw pop push sub adc cmp das insb add pop rcrb mov inc pop fild ljmp inc pop mov addr16 movsb inc scas cmc imul je popw pop fnstcw sbb aaa cmp out mov push and aad cmp adc jecxz jecxz sbb lret fwait in mov (bad) jge fisub jecxz mov loop movsb adc mov add cli lcall push daa inc cwtl mov pop ss add repz dec lret fcmovne out jle xlat out xor jle inc jmp jbe dec xlat jne push xor dec pop (bad) add fstpt push lahf mov ror (bad) loope clc push mov lcall or pop pushl stc mov or stos mov jne mov stc mov pop adc xlat adc add jbe test cmp sub movsl inc cmp and cli mov mov adc adcl xor rcl iret test mov movsb lods dec push in test mov mov mov mov mov or or pop imul xchg scas jns dec adc and jo shrb repz jg pop xor push mov js jb xchg scas in repnz rcll sub add pop pop in fmull in aas imul adc fmuls sub sbb adc or cs push in xor add imul sub dec test pop mov jp jae add js jnp push cli pop adc jb sub mov popl sub mov jge js addb and scas out xlat inc adc xchg add dec push sub lock pop pop dec adc jne lret and addr16 inc jb mov repz in jecxz mov pop rcl (bad) loopne imul dec jbe adc xor mov pusha lcall cmp out xchg jns daa dec repz das adc outsb addr16 jl loope mov and insb ret jecxz (bad) (bad) jns out jl dec mov hlt push dec mov out daa adc lods mov insl sub jne fstl inc adc jne aad pop icebp add cmp mov mov lods mov mov mov lret into ds movl addr16 adc fsubl out mov fadds clc std adc out movsb aam lods mov aam mov and pop mov xchg bnd (bad) push jl in push les sbb mov xor jbe jge shlb iret and fcoml jge sub lcall leave fiaddl test in pop xchg pop dec add or add in cs test pop nop daa sbb ficompl std jns daa movsb fisubrl dec push jno shr xchg stc lods add jb (bad) int cmp (bad) jb lahf add push push push pop mov leave pop sub inc sbb xlat mov cmp lret inc adc inc pop fildl fwait mov jmp adc fstpt or cmp aaa adc roll ss and (bad) fild sub js nop jl sbb sbb cmp lds into cmp out add aad push je mov sbb pusha std inc and sarl (bad) arpl loop imul (bad) fisub inc mov pop mov (bad) push in (bad) into push sbb cmp and call adc int add jbe lret xor adcb push sub enter das dec (bad) fcompl jmp (bad) add ss fdivrs int sub push mov mov stos sub push add add pop daa jmp inc lods (bad) cmp xlat and fisubl rorb pusha mov pop movsl or mov mov and jno in xchg adc adc lods adc push (bad) aad mov mov xchg add mov xchg and push (bad) inc or testl neg aam js in popf sub loopne pop mov mov lahf pop mov adc adc out aad ret test jae je gs cmp push aam lods sbb dec mov ret jecxz repz inc adc andl jge mov jne negb xchg sbb jp aad mov arpl mov xchg mov test mov data16 xlat inc sub outsb add xchg xlat mov inc iret mov divb imul fstps fsubs cmp jl aas inc and inc pop (bad) and dec test mov sbb ds fadd mov mov jmp mov push mov push lea mov call cltd (bad) dec pop mov outsb jnp sub rorb mov je add cmc adc sbb add paddb pop iret cmp xor mov mov sub pop or repnz sbb mov pop fistl popa push sbb mov add (bad) fbstp cmp mov fimull rcll in into push or mov xchg ja lret xchg test pop fisttpll mov clc lock sti push in flds pop mov fdivp test mov (bad) std mov mov cli jg mov je xor jg and and cltd add mov jl mov pop cmp cmc dec stc sbb add fcmovu ss (bad) adc mov sbb push mov push jge push jns mov lods es jae mov xor loop fisubrl sbb scas mov enter xor repz mov xchg jg inc or sbb cwtl jno push mov sub rorl jge sub js in and and cmp jo xchg lods jnp add mov mov or rorb hlt jmp jg out pop jns loope dec aaa aad mov stos test cs (bad) push loop lods insl scas jns push js push cmc out inc les inc repz dec (bad) adc fcomp dec fstp rcrb test and mov push in adc or mov cmp loope pop imul out mov call out loope cmp cmp es xchg pop outsb cwtl roll ret and inc xor pop les mov adc jmp or jno pop push inc bound aaa push jo loop fs fdivs (bad) fildl xor pop fcomps std push sub mov ss mov cmp (bad) cmpsb pop repz mov or movsl pop add cmp clc dec fidivl inc mov dec jae dec sub add (bad) cmp (bad) mov cmc pop pop lret adc lcall pop jno sub or sbb push mov out flds decb push jo in sbb int sub cmpsb add outsl fadds in out pop jg pop mov mov jecxz subb jle negl gs mov add lret bound adc loope sub (bad) pop mov iret pop jg adc das mov mov out inc test jb sbb test pop subb pop mov icebp jo ja or or push inc lods jge inc xchg inc sbbl mov int daa decl push fildl push outsl mov push (bad) ljmp and out jnp pop jnp or add lds clc int3 fisub mov sub arpl xchg lock push (bad) js jp int fstl cmp xor mov jp cmpsb rclb shlb hlt adc and lret cld outsl sbb jns sbb jno push and push sub mov mov fs cmp mov (bad) pop pusha lcall shrb xchg jne lret lcall inc dec or dec jns mov out cmp inc xor inc mov das or pop xchg mov mov mov mov stos push rorb imul fs es rorb cmpl frstor scas pop xor mov je test idivl and lcall lret mov subl ss dec (bad) outsb jne or mov xor jmp std cmovge sub xchg daa ljmp pop fisttpl arpl mov aad sub mov clc es jno sbb pop mov adcl cmp sbb inc arpl push fwait jp std insl imul fsub clc call mov pop pop xor xchg mov lods dec clc in jg pop icebp les fucomip inc sub dec sbb lret push jle push out cmp cmp stc rorl jge push daa rolb lea rorl or sbb popf (bad) pop fdivrs push mov mov ja sub sbb pushl add daa out pop adc sub push dec clc add (bad) or mov cmp lock lea or notl popa jo adc (bad) jno push arpl neg dec sbb rorl movsb fimull cmpsb adc lock cwtl je xor (bad) mov daa (bad) stos cltd (bad) xchg mov mov xor dec mov cld xor (bad) xor call es cmc into xor xor mov (bad) pop in stc stos xchg dec or clc adc mov pop test sub insb adc jl mov xchg fdivl xchg inc fwait push inc stc inc adc jmp loope push push and sarb loope jno addr16 push jl (bad) fbld mov push fldenv mov ret adc lods sub pop mov repz scas lahf jnp fstps negb aas loop dec inc test sub lock jns dec and xchg push or aaa sbb fs cltd lds js xor sbb fistl (bad) fistl nop add and (bad) dec mov sbb fs inc loop mov negb mov (bad) dec mov mov inc into xor inc lcall push dec cwtl jge cltd cld daa pop mov mov push mov jg inc and out repz and push fnstenv inc aam jmp adc pop sbb mov mov fstpl insb adc add ss push fstpt sub sti adcl push adc sub adcl add jne mov into in inc jecxz lahf (bad) mov das add and scas cmp push divl add shrl sub repnz lods std ds fs fdivrl dec mov loop mov enter data16 nop push sbb mov (bad) sbb pushf imul outsb sbb fidivl mov lods cwtl lods push and test pop jmp mov repz jge adc (bad) jns pop insb mov cltd push mov repz (bad) and fsubs out push ret jno sbb jne jecxz xchg cs jg outsb imul pop call mov push mov cmc sti aaa shl sbb mov lds adc subl bound mov cld and cmp push lock push fldcw rcrl test xchg loop fdivp sub mul ja cli ja rcl lcall inc int in push jl out sub out adc pop aaa pop add imul mov adc jb dec xor jne adc adc test push shll sbb cmc fwait xor cmp out ss cltd test (bad) enter sbb pop xor mov sahf test dec dec jbe inc int les add and dec sub sbb psllq stos sub es mov out test cld mov fisttpl inc push jno mov mov xor xchg dec mov xchg (bad) out jno mov mov insl push lcall or mov in lods dec arpl es pop scas std push (bad) cmpsb sbb rorl mov aad or gs insb mov jns repz cli ja xchg mov add pop lock inc sar js mov in stc lods push es add or loop in sub mov pop pop jl movsl mov xor pop fstps or fisttpll add mov mov fcomps jo fwait in sbb mov sub adc mov sub test xor pop pop in mov je ljmp insb movb out sbb sbb cmp push inc cmp jo and dec jle cmp sahf push jge pop int3 scas lcall xor xchg pushf nop xchg inc push sub push movsb dec pop pop push mov mov xchg (bad) nop or lea xor adc scas fwait mov ret int pop mov inc adc jl sarb adcl dec test mov in push out add and inc jb cmpsl xchg insl and sbb add in (bad) ret movsl pop xchg sub xchg pop popf xor mov ja in jo in push test jle xchg xor cs ret add mov bound lods xchg dec inc adc xor jl sub push push adc ret or and int3 sub dec sar inc jb pop in stc or pop dec mov imul out pop enter push je in cltd xchg inc dec test and add call loopne pop mov sub shll dec cltd mov push clc clc push insl shr fs jns loope adc sarb fwait or iret xor and dec out pop divl xor cmpsl repz sub test pop pop pop xchg pop sbb cwtl popf and decl stos (bad) add mov clc pop cmpl dec sbb mov or leave xor xchg imul xor dec xlat dec popf add test pop in xchg out jmp sbb or adc push push loopne in cmc sub test lock push rclb shrb repz xor cmpsl push jmp inc xlat cmc xchg lea mov mov stc test (bad) mov outsb cwtl adc ret shll adc les iret fidivl mov test cld mov ss adc js add mov aaa or sub int int3 inc mov mulb xchg movb push sub or ds add notb ror xor clc mov add rclb mov int mov ss cmp add cmpsl (bad) jo stc inc push adc scas mov adc mov ja scas jp or xlat cmp lods pop push shlb (bad) cmc out jle lock xchg and orl inc loopew sub addps stos iret outsb inc aam lods inc iret xor test stos and cmc mov arpl mov pop divb inc dec adc lret lea jb add ret insb push mov out imul nop ss jno fsubs sub add push in jo push stc (bad) sub add inc dec xor add movsb andb pop sbb mov adc push or cmpsb divl scas dec add fldln2 inc stc mov insl xchg fidivrl nop aas xor dec data16 jne sbb fucomi or jnp mov daa push mov inc inc insl mov jns lds lock xlat xor mov pushl mov inc cmp push cmc sbb in dec push pop std dec (bad) jno jge jo bound push (bad) fnop decl adc pop xor or cs or jg mov jbe rcr bound movsl push inc push dec aaa pop xchg lcall cli mov rclb ret cmc ljmp cltd cmc arpl xchg inc nop mov movsb or mov push mov pop ret insb or xchg adc fcmovbe mov dec in stos jg fidivl jbe (bad) imul scas jnp shl pop jbe shlb ljmp jbe dec push push dec (bad) jb pop add mov loope mov dec jecxz popcnt pop add adc jl inc ror insl jae fsubp stos js add pop adc in mov repnz lock pop jge push int hlt dec mov and jge pop adc and call mov mov pop cld push loopne jp mov xorl mov mov jecxz jbe and xlat repnz clc and sahf sti jge push cmp in mull xor std add dec xchg cmp xor jle jb or hlt ret popa push jmp push mov addr16 push pop mov cmp xor pop push add aam mov xchg sbb insl mov xor mov notl std push pop push notl jecxz push pop jp push pop sti dec xchg out loope pop lcall repz loop fwait mov out les imul sub cmp stos pop adc fsubl inc mov test fildl xchg sbb addl shl push stos sub (bad) call push cmpsb ret mov hlt scas mov mov or ret call test jp lds (bad) xchg and lret out push stc push inc or inc inc gs or fcmovne or or jl js pop mov scas jnp (bad) scas fcmovu or scas les inc daa jns scas js std fldt lods push fbld icebp aam imul jecxz (bad) xor jnp (bad) jne mov pshufw aam xchg mov (bad) outsb int3 xchg pop pushf adc sarb or inc jo mov mov cmp outsb xchg lods mov sbb in adc popa jno movq push mov dec ja adc xor loopne push sbb inc cmp lods ja lret cmp mov repnz adc xor repz scas aas mov fisttpl shrl fsubrl es sub dec sbb mov jae,pn pop fsubrl sahf dec adc and or or dec mov mov push mov cmp cltd sbb adc lcall xor clc push jg fimul pop mov jbe jae or jmp arpl inc ljmp fwait ja (bad) xchg jl adc dec mov in push pop mov iret jp lock js or and lods push fidivrl lcall rorl insb cmp (bad) mov jbe (bad) mull sbb and pusha shll fmul aam das adc ret in aam nop les jb sub jmp jecxz es sub pop iret stos in push push stos gs dec adc ja (bad) jne sti dec loop push insl sti aam test mov jne mov movsl jmp lods inc mov pop and in jb cmc xchg jecxz mov idivb dec call dec inc sarl out mov outsb add in aam loop mov jne xor (bad) jne cmpsb mov mov jnp loop inc push pop mov jecxz mov addr16 jp xchg jecxz push fidivr pop scas cmc repz negb jge repz push sbb aam int pop in mov adc insb sbb mov push subb cmp push lret mov dec add pop (bad) jbe stos ret adcl arpl or xchg cmp xchg add inc fiadd mov cli (bad) sarl or clc xchg fisub faddl aad add int mov or or lods mov sub push sbb outsb cmp jns mov sti jmp lret mov adc pop jnp icebp loope outsl cmpsl inc fildll test jecxz mov dec out mov and dec mov add hlt aam in dec mov xor test ror dec fstl mov shll and jmp push fcoms push inc jb or jp or dec and lods leave and fwait test xchg jb push add mov lods pop sbb mov adc es xor stc add or daa cld (bad) out xor ljmp push xor ret push sub xlat add lret and add cltd rcrl or push repnz negl mov pop call (bad) push pop push orb stos testl aaa xchg push outsb pop in add jns int3 scas sarl mov mov cmp xchg add int3 sti rcl in sub das aad dec repnz (bad) xchg xchg mov jbe int div (bad) cmpsl xor push add sub out sub xor faddl jne loopne mov into mov outsb xchg aas sbb stos sahf dec in push mov pop repnz (bad) js arpl inc in add shll dec push stc pop stos push dec dec (bad) icebp sbb es adc popa (bad) sbb (bad) (bad) addr16 js popf mov jns dec and (bad) mov pop sbb jae rclb mov es xlat cmpsb popf scas cmp jl cmp jae push inc dec cmc loope pop inc adc jl fwait sbb xor and movsl enter mov push inc add cmpsl dec inc test adc arpl dec stos cmp leave push in or cmp je mov xor std imul mov in fisubl jmp in ss pop rcr add pop vpsubusb stc mov test jmp xor pop and dec xchg lds mov and or in push clc pusha ret jle sti jo js xor stos mov fiaddl push adc (bad) repz addr16 inc sub rcll jle xor or leave fmull aam mov pop imul adc xchg dec stc dec orl in add dec dec test jns mov jge jmp dec and dec push stos cwtl sbb das pop lret inc add mov jno loop (bad) cmp mov fstpl mov pop mov repz add adc mov add mov gs scas dec sbb pop mov and push mov dec lret mov mov inc mov adc xor and in (bad) (bad) xor addr16 sti jbe int3 xchg jns rcll cs push mov insl repz pop aad adc scas mov pop dec (bad) aad faddl rcrl mov pop test es sbb xchg xor dec loop jbe int mov (bad) jne lcall xor push outsb or mov inc stos adc jecxz test cmp cmp jmp clc sarb mov pop out ffree mov fldt sub in leave je stc scas lcall mov push call cmp (bad) std rorb dec in sub imul lds pop aad sbb pop dec pop sub jae sbb adc xchg aam xor mov fldt gs adc and inc mov adc dec add repnz lcall test mov hlt test dec xchg mul into scas add dec cmpsl sbb inc pop mov fist icebp xor fiaddl sub or adc jl imul cmp adc inc jno push mov hlt outsb fldl inc cli jmp inc jmp clc dec add loopne add pop push inc hlt lods lret pop inc mov mov nop and pop mov fsts sti icebp fstps subb imull mov mov out cmpsl jns mov sbb je cmpsl jne push and mov scas sub inc ja ss lods pop dec pop notb ja je jns or sub pop out dec mov dec into sub xchg clc loopne sub cltd aam add dec inc xor pop mov sub dec mov stos out mov fs jmp int arpl mov out rorl pop jle loopne xchg cmp outsb testl adc and outsl mov pop sbb sbb mov (bad) inc cli push add push cmp jns sub notb jl add test push xor mov dec and inc xchg add imul or cmp test adc out inc pop fcoml jnp sbb ja rorl pop push push (bad) ss adc scas mov sub jb push loop mov in repnz aad xor lret mulb clc sbb nop je pop leave fsub inc scas test ss mov push mov and mov jp stos push std xchg aam pop mov jge mull inc data16 push pop and inc idivb inc (bad) sbb add cmp and sti pop scas sbb stos xchg pop push mov push xchg insb lret inc mov mov push push add inc or sbb xor pop mov pop push sbb maxps or xor dec in add inc inc dec mov push xor mov fadds and add add sub lcall lahf sbb es lds dec into inc inc push mov pop jmp push sti (bad) outsl pusha (bad) out test push repnz mov adcl mov das test pop jnp (bad) mov push mov cvttps2pi scas jo movsl mov arpl or out and xchg mov ja push into in js bound cli mov and mov bound cmc push shr or mov inc cmp ss xchg cmc es mov (bad) cs cmp push mov and mov scas xor sarl sub aam jg push or fstps aad cs inc fisttpll movsb out xchg dec mov fsubrl mov fdivs inc out call and (bad) adc jecxz,pn cmc fwait out jno dec repnz jae mov outsl sbb movsl mov rclb adc notb mov fadd call orl xchg xor add jne out dec jno pop in or imul mov inc pop pusha mov pop enter outsl aam arpl insb js mov mov push ds cmpsb shlb jbe dec shl ret mov jl in push shl pop mov movsb roll or push or stc imull int3 push cmp test cli rcrl out push insb imul rcrb nop jns in inc adc (bad) xchg aam or xchg adc repnz or or adc out pop test test pusha ljmp xchg into cmp (bad) jmp call pop dec mov (bad) xchg xlat sbb push (bad) pop xchg mov and fwait jl sub (bad) jecxz outsb sub jb jb xor aam fnstcw test or aaa push adcl inc mov sub adc movsb mov dec cmp pusha call enter push cmp fiaddl scas cmp jno mov outsb cwtl pop enter loop clc shll aam aam push enter (bad) adc push pop out lcall adc std (bad) fistl mov test sbb mov repz or sub leave inc and dec jo inc or fidiv std (bad) notl movsl jo popa rorb add inc cwtl or add mov dec mov sahf mov xor in daa sub lock mov rcl push adc int3 jecxz in faddl imul and xor add (bad) jb dec mov cmp add (bad) mov jmp movsb scas xor mov inc dec push mov scas pop (bad) loope sub popa stos or jae jl add pusha movsl push jl lahf mov sub subl idivb mov mov add or jl mov test jmp sub daa dec or rclb push push and add or push or out aad insb adcl jae in mov sti mov divb ds add lock pop mov mov shrb pop pop pop stos jne push pushf std cmpsl mov pushl lock mov jle imul daa jmp shll jp js pop call dec cmp out push js in in (bad) lock fsubrl push mov ret outsl rcll std pop out jo (bad) mov insl enter dec inc jle loopne lret cmpb fdivrs sbb jne loop and fstp scas loope sbb out (bad) push lahf xchg les in sub xchg push xchg repnz stos or arpl xchg jb inc imul sbb sbb js ficomp pop ja cld gs mov inc jb or lcall jecxz js mov jge cmpsb add mov mov mov inc icebp push jge imul inc mov cmpsb mov inc xchg push (bad) in xchg repz adc cmpsl mov dec add ja stc hlt mov and stos or test xor inc mov aad push mov inc mov fsubr mov fdivr and jl (bad) lcall loopne push enter (bad) imulb (bad) jb push mov jae or fisttpl stos movsl jb sarb adc cs aam iret pop mov (bad) sub fcmovnu cmc add xorb dec fidivr mov jb loopne cmpsl dec cltd pop xor popf (bad) stc xor dec adc mov push jno test mov push fistpll xlat jp or out out imul cmpsb arpl cli je xchg adc movsl cmpsb stos loope test (bad) or (bad) jno loop push ret mov es mov inc xor scas sbb ss push addr16 gs sbb add inc fcompl dec jp mov mov xlat movsb xor mov movsl fisub imul rol fdiv mov aam clc scas mov add movsl out cli fnop adc pusha mov (bad) out or or (bad) xlat inc lods popf dec sti scas push loopne sarl pop push sbb jecxz pushf add aam lret pop jnp or dec mov inc sub sbb gs (bad) rorl loop in add insl cli into out and (bad) pop fwait add and orb pop sbb in into shrl push pop push add aam add repz pop in loopne pop test dec push enter std push and pop dec pop lods adc pop mov repz xorl mov pushf in xlat arpl (bad) mov mov push sbb mov mov fwait scas push ds dec hlt dec std in mov dec (bad) sbb movsb out pusha adc test inc jb rcrl add push xor std sub data16 mov lcall jne mov mov rcrl mov outsl or xor mov dec mov pop icebp jns sbb cltd push out imul movsb or dec xor jnp xor fsubrl ja repz cmpsb stc ss mov inc shrl loopne add sbb lock xor cmp loope lret repz (bad) jge mov lea loope jp xchg sar adc push cmp mov js or aam mov pop test sbb fldenv inc imul es mov lret or or cltd stc push test aad popa lret clc sbb nop jp sahf leave add in jo adc cli addr16 scas inc lret cmp dec repnz sbbb cmpsb imul mov pop push (bad) in fbstp inc in push out (bad) push push std repnz pop lcall fs dec dec ljmp imul mov (bad) jo lock mov adc pop gs iret mov sub mov pop outsl jno sarb in out leave xchg hlt addr16 add daa jp mov inc pop ret js mov jmp jle int3 adc mov dec outsb and jbe pop int3 mov sbb add jns jp or adc inc pop mov add (bad) pusha faddl mov ja xchg dec mov fcomps into or icebp stos adc add pop loopne stos mov fwait cmc inc pop mov add sub lahf lahf cmpsb test or mov jae nop xchg insb rol inc (bad) (bad) sbb jge scas std cmp movsl adc imul jne dec sub das and adc in ja mov push add movsb mov es mov inc cmp fildll mov pop sbb mov jbe mov push fistp cltd int jo and fs push mov lock push ss shl aaa leave jo pop ret or pop ljmp sbb fwait mov dec mov xchg sbb repnz xchg jp push pop dec jo lcallw and (bad) sbb notb mov sbb or nop into pop call mov push cmp pop loope in sbb sbb inc test inc arpl pcmpeqb nop lock lds xor adc (bad) push jne mov int3 ret inc push mov inc mov lret call dec cli bound stos int3 xor push into add push mov iret and mov mov into loopne addr16 mov enter mov (bad) mov jb scas enter mov fs (bad) sbb (bad) pop imulb es loopne xchg cmp es cld push cs jp jge imul out pop mov push mov test movsl loopne sarl (bad) (bad) ds es fisubrl push mov shl test inc pop fst aad xchg adc adc rclb (bad) jno push fisubr call mov (bad) fmul std lcall lea xchg in and add ja jns (bad) insb test mov call enter jge cmpsb enter mov jecxz popa mov es aad push das cltd lea les std pop fisttpl lcall sbb call ss (bad) repz cs mov ss inc mov add imul aam addr16 mov sarb xor imull lcall push or jno inc pop subl repnz mov jg xor pop xchg sub lcall jnp sbb mov add popa inc pushf loopne lahf dec out mov sti nop daa test es test push jnp push neg (bad) sub aas repz push pop inc pop or cs mov inc jge dec (bad) cmp ds lods aam adc xchg sub push cmp jne mov lods cmc notl jl lea iret mov call stc push add mov iret mov push push in ret pop xor mov cmp rcr add mov pop pop mov pop in idivl xchg sahf sub imul jo inc cwtl mov or (bad) je mov mov pop pop outsl loope imul pop jno call xor dec push lods sub mov pop xchg jmp popa mov adc fwait shrb (bad) cmpsl push mov mov xchg sbb pop mov mov imul loop lods add xchg sbb pushfw xor gs jne xchg mov jmp xchg inc jmp xchg cmpsb jns xchg or or iret cmp adc clc jl push int test and adc fdivs or mov cs sbb push inc adc fdivrs ret xchg sti test dec add dec push adc cmc sti inc imul xor lds (bad) fucomi jl rorl jno adc mov push rolb ja xor cmp xchg movsl mov push loopne out adc mov jp pop stos dec push adc cltd mov iret or inc cwtl out jp movsl fs or jge stc (bad) scas out cmp cmp mov xlat aam mov out mov clc and cmc test ret cmc out push inc mov stc dec (bad) xor mul jmp push shrl cmpsb sbb add mov push insl push dec push je xchg data16 nop pop ret xchg fcmovbe mov in sar jmp cltd shll add xor std (bad) scas cmc loop push mov ror loope or xchg aad dec mov in sub std out rorl or or pop pop adc adc add insl out nop mov adc (bad) adc cli repz rclb js loope aam adc add pop or std (bad) jg and add testl pop and xchg lods add sbb (bad) (bad) roll sbb int3 jl call cwtl xchg adc out dec inc daa aad mov push bound addr16 stos dec fstpt pop mov repnz in push push xchg xor cltd in cli dec dec movsl pop aam jle cmp shrl test lods mov fcoml mov mov and jne sti lret lock add mov insl lahf out mov mov mov subl mov or pop push (bad) xchg pop xor jmp inc cmp pop push bound and jge sahf sbb pop fsub add xchg movsb sbb repz or out ja ret ret mov fnstenv add gs int3 mov inc incl rcrl movsl push scas fwait pop out mov adc ja test leave xor or cmp insl je (bad) pop roll loopne cltd sbb push sbb std add mov (bad) xor add adc out adcb (bad) cmp shlb pusha mov daa jle jno repz mov cltd outsl xor stos stc mov pop enter jle mov scas clc pop sbb cmpsb dec mov pop fmull add jae or xor pop ret aam stc pop orb and fadds mov sete mov fstl insb add xor fcompl sub lcall adc xor jge sub dec mov jns push cmp mov scas int3 sbb fisubrl jmp (bad) or scas or jl loopne dec hlt sahf mov nop addb iret rorb xchg stos je hlt loopne inc in icebp insb push incb push pop cmp mov add mov sbb repnz cmp push cmp jp decb lock dec mov ja xchg aam dec pop jae mov add mov xchg sbb xchg mov mov scas outsb pop fld (bad) jo or and pop imull cs stos in cmp dec les ja loop and pop shrl inc testl jae jno repz mov insl lret add imul or mov cmpsw imul loopne mov hlt or nop mov xorl hlt icebp out daa mov add ds cmpl lds mov (bad) cmp fiaddl jmp sbb inc imul mov sbb mov dec mov test push xchg mov or int xchg popf scas shll outsb in pop addr16 push iret and cmpsl push gs mov out adc xor mov fidiv inc sbb ja or push int xchg xchg insb adc dec repz das loopne mov push jge (bad) rcrb cmpsb std pop lret (bad) out dec cmp dec add sbb mov int mov cmc loope or mov dec mov mov insb jns out ret mov into pop sbb mov xorb sbb add jbe xchg xchg mov js add lods arpl pop push jo aam push add jecxz popf pop sarb stos inc movsl rorb sbb leave pop fdivs cmp push scas adc jne push pop inc mov ret and jp inc ljmp fs sub enter pusha adc fistpll cmc inc lea mov push iret pop pop sub push cli push (bad) aad hlt outsb out mov repnz imul add jg bound ret je xor sbb push pop outsl jmp mov cmc es pop sbb cmovnp popl mulb inc icebp cmc xchg push in inc dec in rorb mov (bad) fisttpl in aam out jmp dec (bad) inc aaa int3 jne out cmpl fwait push out mov inc push rolb lcall lds data16 fs pusha das loopne loope pop pop fisubl mov inc inc push outsl ret (bad) stos mov pop rol push mov jecxz pop inc xor sub mov and mov pop test push push js mov (bad) je int mov ja jno xchg adc sbb (bad) repz in sbb fwait inc mov cli sub sbb dec aam and xor push es xchg sbb add rolb xchg jecxz ss cmpsl jl pop je push add or push in pop (bad) dec mov push lcall or insl (bad) xor sbb popf xchg pop movsb adc and jno push pop inc or pushf push or pusha sub xor mov dec and jae xchg in cwtl sbb out push add push push cmpsl jge in cmpsb pop mov mov add or cmp stos pop mov clc scas es cmpsb dec jns fwait in flds dec aaa out push std jns adc orb int outsb je mov bound lea cwtl jge sbb std shr fnstcw pop repz push (bad) or cmp dec xchg add repnz and arpl sub mov jo out mov loop hlt mov and mov push dec fsubr and jo inc push or sbb mov (bad) push dec and add xor stos xchg push jl shr xchg inc add mov iret in dec pop shrl aam flds sbb mov xor mov cs xchg pop mov jge jecxz rorb xchg imul int3 cmc std mov push lret repz out inc fdivs pop arpl xchg dec aaa adc insl (bad) fs mov jle (bad) inc lods pusha sarb push je xor sbb test fs pop dec cli ja sbb add scas mov sbb enter lock inc (bad) movlps mov fwait and aad pop fdivrs xchg mov data16 bound pusha repz in pop push mov mov rclb hlt jns mov pop jbe pop mov mull or pushl stos mov aad arpl clc jp or mov inc add aad fsubl mov fnstenv jg sbb data16 stos aad out cmp movl and (bad) xchg orb fnstenv push iret mov sbb in mov imul outsb in imul lods adc sbb mov mov inc insb mov inc ret xor adc lret mov loope scas movsl cmp fdivl and aas xchg pusha mov pop inc mov jne sbb or test jns fxch cmp in adc jne call mov and pop fidivr jge mov jo clc loopne sub clc (bad) mov cmp in sbbl cs pop stos lods xchg (bad) mov insb cmpl cmp cmc imul test xchg lock orb pop push cmc mov clc dec (bad) jne cltd aad mov dec mov out add pop gs inc sub daa inc test in fcoms xor xor or add in ja idiv lock (bad) aaa push pusha mov jne (bad) gs push xchg cmpsb mov mov imul hlt xchg pop clc std ja mov call js aam ja mov dec jl add dec dec (bad) imul (bad) jo inc xchg sbb popf or bnd cli std lret mov test and adc mov pusha mov aad loopne xchg ja stc (bad) das jle fbld xchg or sbb rcrl mov mov out or pop mov adc xlat add cli lods sub mov xorl movsb (bad) xchg cld push fcoms movsb test rcl sbb adcl mov sub nop xchg leave sbb mov loop adc adc push dec pop lds mov (bad) mov ret aad sub jmp stc mov jmp stc repnz push lret pop mov add insb pop scas std mov push dec xor pop mov add (bad) je sti mov pop or out or add sbb ss push mov js cmpsb clc lcall fsts mov xchg add enter cmpsb ficoml sbb rcrl push mov push or rcl dec loope inc push pushl aaa cmpsl das mov sbb fldcw mov loope insb lods jns out into mov ret xor jmp aad test fadds es push inc arpl push mov dec jns or inc cmpsb test add inc push ljmp or pop stos ljmp push or std jmp add std cmp or lahf loopne jl sbb fxch aam mov mov cmp inc jecxz dec dec pop push scas mov lods xor test xorb jl repnz leave sbb lea xchg leave enter add pop fldt cmp out jg (bad) and fsub push orl out xchg mov pop fxtract bound pop mov jmp push and sub test push mov dec hlt mov and push clc lahf dec mov and imul loop test pop std fsts sub repz leave js cs (bad) or ret lahf int std inc lahf sbb cmp push cmp jmp mov cmp mov aad pop shlb mov popa imul jne fimul pop pop mov outsb roll sbb std or cmc cmp rorl xor das xor gs jle mov cli pop daa lds mov mov cmp ja add adc into jno pop jno add out (bad) cmc (bad) arpl jp test and pop hlt mov arpl divl movsl jnp xchg les pop ds stos push sahf xlat (bad) xor call in add push (bad) in jo mov cmp loopne fldcw sbb test or sbb cmp cmpsb loope aad xchg cs call jne lcall sbb clc test pop rclb add bound fstl sbb inc popa and cwtl cmp xor cld push jo mov in imul pop mov dec mov dec sub mov in (bad) aas js inc fsubr mov jne test dec jmp add add mov cld cmp andb sub sahf les mov or (bad) imul popa pusha cmc mov mov add push aam mov fld divb and pop pop fldenv push xchg test xchg mov popf fsubr jno and fwait in jmp (bad) repnz mov rclb (bad) push clc sbb inc fild shlb fistpl push es jp sbb xlat adc lods push add jl mov inc out or mov mov mov cli test sub scas and popf dec mov mov dec cmpsl shll or mov pop fdivr push add jo xor sub in sti popa pushf es sahf push dec jo mov xchg pop mov and adc repnz pop imull pop andl mov ffree mov pusha dec mov jp adc arpl es dec rol out inc popa ror loope xchg cmp arpl mov xor pop or sbb cmc sarl in cmp xchg (bad) and sub mov push fnop pop xor pop pop cmp add inc and (bad) jg or mov pop in xchg enter jl add aad imul jno sti out sub pop sbb idivb gs popf pop das repnz shr inc loop mov js adc shrl adc sbb popa add mov adc loop aas mov bound xor mov aad daa add into sbb push jl push bnd xchg cmp test (bad) fidiv cmp sbb jns cmp dec adc test in mov gs hlt test adc out add hlt rcrl inc sub mov dec lods pop lods loope add fisttpl sbb ret dec mov add sahf pop incb lock dec lea mov xor mov nop mov sbb or in pop cmp mov insb add lods jns leave mov adc pop or inc cli push push jno push mov add jp push dec jb pop xor sarl movlps jae xchg ret cwtl daa movsl aad int add mov lds nop fidivrl sbb or fwait cmc sbb add addr16 and ljmp jns sub leave jne mov mov push xchg repz xchg pop mov sbb jb ds or bound hlt in int3 rol sub repz cltd rorl in jecxz es mov out sbb iret jg push iret adc enter or push mov cmpsb out push lods mov push or out in mov sub and scas fisubl sbb push mov and out pop jnp test test xor mov test cmp or adc iret fs sar mov sub decl outsl inc aad dec cmp fbstp hlt pop pop jne add mov sub jo in popa dec xor int jbe pusha sbb int3 test insb push push fadds mov rcrb pop inc ja or mov lds lret testl xor lcall (bad) ss jo xchg popa ss inc push push cmp xor lret xor rcll xchg mov in hlt xchg std mov inc mov push or sarl imul jg jno in fmuls mov jmp test notl jmp (bad) arpl shrb mov sub ror push sahf mov jecxz (bad) mov movsb bound sub out ja out cs iret arpl fisttp dec mov fbstp in xor (bad) in inc int pop fcoms iret xchg das mov ljmp scas test shlb in rcrl int fldl jle adc aaa test stos mov addr16 dec aam hlt loop icebp sbb push dec push movsl hlt cwtl lahf add pusha dec jle and mov adc ja mov out push cmp imul cmp test sti repz movsl push and mov cmc lret cwtl sub call or dec cs psubb push rcr repnz add pop jge mov fwait push lea cltd (bad) mov mov push add aad and lock sarb je out push cwtl in (bad) ret mov dec out sub jns fdivr xor enter sti mov (bad) loop inc lahf pop scas push arpl pop arpl (bad) push dec loope,pn je movl xlat add mov imul push xor leave notl clc push dec mov loopne dec lods cmc mov dec xchg adc shrl pushf test insb mov shr movsb cmpsl dec in mov adc aad (bad) mull adc add xchg cmp loope mov push adc or int icebp in sub subb and push xor (bad) notb cmovb cmp ret jge lods cld shl mov movsl xor push add jne es in mov enter sub mov mov mov sarb mov cmp mov lahf add inc xchg (bad) loop mov cmpsb add inc out or inc mov icebp jb jae (bad) mov imul pop int3 test adc add xor repnz sbb mov bound xchg pop push push mov sahf in addl cmp into insb push add sbb xor hlt mov pop xchg mov jnp mov pop lret dec (bad) ret push inc loope btr mov sub clc lret hlt cvtdq2ps mov add xchg dec add jmp add (bad) leave inc dec rcll jnp pusha shrb int push popf mov inc sbb std push pusha in clc push push in loopne js in push inc in ljmp aad sub adc sub sbb or je lods mov cltd cltd adc dec rcrb mov adc les xchg pusha sahf rcl in xchg je idivl (bad) lahf sub insl iret (bad) movsl jg outsb lahf and push push movsl pop mov inc xor rcrb jp pop in popa push sbb push jmp mov adc gs cmp daa push cmpsl ffreep adc jae and aam jecxz push adc jne ss add insb and pop clc mov or jbe enter jl inc dec out hlt jl or dec adc pop leave add enter imul pop stc push xchg fldcw mov data16 popa ret pop imul leave xchg mov xor lods jmp mov push dec mov (bad) push sbb fsts dec mov and sub aad (bad) ss inc pop cmp inc jg scas imul js test lods mov leave mov cmp inc (bad) xor pop nop pop hlt andl bound xor jl pop mov loop jo jns js mov inc sub add lock add jmp add in push adc in fwait mov push xor movsb jae,pn or jg or std mov xchg xor push mov jb clc cltd mov mov mov fsub mov xchg add aam test mov hlt cmc les in push or pop dec jbe adcl ja jno sti sub je fs jmp pop add xchg pop int3 jne cmc sbb mov add andl test aas push pop jns,pt adc xchg cmp pop (bad) jg sbb or mov imulb or adc mov inc pop jns mov mov add jnp loope out fadds add negb (bad) in lcall lret (bad) testl es push rcl scas pop stc or out add cs and loope jp push popa cwtl cmc cltd pop dec jbe call sub cmp test (bad) pop fiadd pop cmpsb dec dec adc pop rcll int3 lods fildl je adc sbb and scas sbb dec adc popl popf movsl sbb mov cli xchg mov stos inc int3 jo lea aam loopne push add data16 ss jnp sarl sbb lods insb add xchg push sarl fldenv scas ror jbe inc sub repz or push packsswb js jle pop adc dec xchg loopne mov add push and pop push sub jo xlat loop jb insl cmc jae push sahf divl or test sbb push (bad) mov mov jo mov ret loope add push arpl or rcrb jmp sarb daa sbb faddp pop bound inc xchg popf (bad) mov mov or mov mov int3 mov jle jbe mov xor xchg and (bad) mov adc rol or push clc push xchg js out iret inc cld jmp xlat inc fs pusha push inc adc ret lret loope das xor test pop lahf inc or inc mov scas sbb (bad) js cmp sahf mov inc mov push and inc add rcll pop mov xor push repz pop out push xor and sub mov loop inc pop and dec lret and stos push push xchg xchg mov jne mov popa js,pt stos pop xchg out pushf cltd xor add or lret (bad) lods cmp jle inc inc sbb pop push adc mov mov dec call loope aas mov add xorl lods imul adc xor ds shr fs mov sbb add dec push xchg clc sub cli es rcrb outsl cld lods xchg imul lcall jns (bad) mov push or and stc lods bound jns fnstcw sub outsb push and and push cmp shrl add pop dec push sub or xchg pop mov lret fsubp sbb add int3 incl cmp andl mov fstpt movsl mov (bad) sbb out test leave mov mov add in cmc cltd xchg fdivrl das mov fcoms mov mov movsl incl jp lock es sarb xchg cmp lret lea xchg jp call inc mov pop into loopne lret rcrl daa xchg xor daa out mov jge or insb and popa or push flds inc pop xchg sub sti scas dec clc cmpsb fcmovnbe add test pop cmpsl (bad) arpl popf sub and inc mov pop inc (bad) out test lods mov or (bad) ja jmp lret or cltd adc lods test nop bound lods jno sahf in lea push mov lods icebp or dec fnstenv (bad) movb add dec inc call aaa add lock sub push test (bad) dec scas (bad) mov and push lods out mov xorl jns sarl jns sbb sub mov mov lea (bad) or and pop dec loopne sub cmpsb xchg imulb dec out pop imul xor inc insb (bad) pop into (bad) sbb pop out push cmp cs and cld sbb xchg es pushf lret lcall test fiaddl sub fisubr push xor cmp sub cwtl or enter mov or and (bad) mov push jg in clc orl adc repz push cltd lods and mov push xor leave dec xor xor mov and mov cli cs leave xchg test sub push push jmp pop sub push test rep sbb inc arpl loope pop enter icebp fcompl je jmp mov out push lods andb lds out ljmp aad mov mov push adc mov lock lods push stos icebp popf scas cmp cld inc push sub ja dec hlt sbb inc pushf scas (bad) lea call jno roll fistl clc jecxz fadds js push insl imul popf xor cli sbb sbb ja cmp lods inc dec out jp mov sbb lahf push out push jns fstpl lret fdivrs popa hlt les in data16 shll (bad) faddp rcr jecxz and pop rcr and fstps push xor mov js lds cmpsl leave mov sbb fist in (bad) push (bad) fisttp test jns pop mov fnstenv xchg add dec scas mov inc pop xchg loopne int3 or inc dec jl into or pop sub outsl xor pusha outsb xabort into sbb stc cmp or and mov pop jmp leave jp outsl dec and or mov ja xor cmp push outsb jmp jae jecxz pop sbb fcmovnbe jmp xor sbb jns add or adc loope inc adc imul jne insl mov popf addr16 sub xchg loopne jae add sbb call push jl pop bound (bad) ljmp jp ret cmp push hlt (bad) jne lods loope adc lods push xchg sti mov test je jnp sbb sub cs mov out mov add push sbb data16 lods mov adc push sahf adc das jbe and pop push lods cmp cmp pop cmp or rcl enter or inc cmp xor shl lock int arpl pop cwtl sub loope sub sbb mov lds stos jbe scas (bad) add sahf arpl push andb add lock lret stos push mov in add bound stos fldl2t push out leave dec call mov faddl ret mov dec inc pop fimul mov test iret (bad) xor lods jecxz sbb in rol pop push stos cli shl adc in mov loopne add nop add movsb addr16 jnp fidiv sti mov mov inc (bad) mov mov sbb fisttp or cltd xor xchg push and nop popf scas ret fimul aad jg repnz push mov pshufw xchg jo mov movsb addr16 addr16 cmp pop lcall (bad) cmp xchg data16 and fldl mov out out fs cli fstl js in pop adc fisub jbe arpl cmp mov add or jecxz (bad) js mov or movsb repnz nop dec xor xor cli or pop das fadds rcl push lahf dec mov (bad) outsl out shll inc scas iret and sahf inc divl (bad) xchg mov ja mov mov sub fcmovu call or pushf cmp lods aas mov inc push (bad) adc jecxz or fcompl (bad) sbb fstl mov das popf outsb rcrb lea (bad) arpl xchg ficom (bad) adc ljmp sub jns in pop repnz dec mov (bad) dec dec jae xchg stos cmp mov lods pop movsb clc mov dec iret gs inc sahf push test clc test std sbb mov cmp (bad) lock push push dec lods dec fisttpll stos cmpsl pushf ja mov xchg rorl movsl imul mov jno jno movb outsb xchg popa inc sbb rclb push cmp and xor cs icebp or scas jmp mov dec adc sbb xor shrl ljmp xor rorl sbb dec lods in xchg sarb call sti popa add inc dec aas sbb sbb cmp mov idivl xchg pushf lea adc cmp inc adc add sbb mov xor loope sbb push inc repz adc jle stos pop in sbb mov jae or insl xchg jb (bad) xchg mov imul jno lcall sbb inc or pop sub out push fidivl or pop adc mov (bad) hlt xchg mov out lods into insb std pop mov dec inc lret inc in fisubr iret daa dec test cltd cmp adc test push popa scas push repz call dec insl push into mov rcrl xchg stos outsl imul xchg ret mov shll sbb out nop xchg xor sub jae mov adc cmc xchg jmp (bad) mov jle leave scas inc vmovlps inc jmp inc (bad) int int in pop mov fsts mov mov mov clc pop push sbb adc inc ljmp ds mov add inc ja ja inc push mov dec mov mov repnz cmpsl lcall lock push cmp fistp add xor fs in mov scas xchg sbb or mov pop xchg stos sbbl adc add imul (bad) call leave ss imul or dec ja xchg and loope adc clc and push xchg nop in mov push pop aaa stc jge mov scas imul lret fcomps and xchg jmp and ret mov sbb xchg adc int aam fsubl jno addr16 in xor fidivrl pop jl,pn sub sbb jmp sti call cmp mov (bad) (bad) imul repz test mov mov jmp sbb xor js cmpsl das icebp jns lods (bad) fxch pop mov in dec dec jp pop xlat jnp sub scas fldcw lods jb mov jge js mov jnp,pt or add dec out call cmp xchg lahf pop push aaa adc (bad) mov cmp (bad) fldenv test pop fcmovnb addr16 push mov or test and cmp lods lcall shl jne (bad) cmp (bad) cltd add mov pop mov out imul fsubl (bad) jb add clc add gs inc push dec jmp xchg push into cmpsl inc cmpsl cmp es or add lods mov inc repz (bad) lods inc jno pop sbb pop jmp pusha lret sbb popa and push push sbb repnz es hlt es lret loopne push sbb inc xchg (bad) cmpsl or inc sub outsb pop cmpsb push shrl ret pop sub ficompl xlat xor mov mov js clc fs popa das je lret jl imul mov fdivrl lods lods loop subl xor sbb lock inc cmp mov dec (bad) mov inc mov popf mov xchg and and ffreep mov sti mov cmpl shll dec sbb sti (bad) jb (bad) sbb (bad) fildll or scas (bad) movsl mov inc sub (bad) les push push sar repnz out (bad) inc jno xor or mov sub iret fistl adc popf lods icebp cmpsb fiadd leave xchg jno add dec js jg sbb nop cmp jecxz cmp or fstpt scas pop lods repnz mov fisub xor lret out and push sbb (bad) mov or dec (bad) cmc pop enter adcl xlat mov sub jecxz (bad) lea xchg es addr16 int3 lods pop adc add js push xchg cmpsb jne insb nop sbb idivb (bad) mov sbb mov or mov sub hlt and sbb sbb xchg loopne inc rcrl rcl es pop jle into and pop loop and (bad) mov movswl roll xchg lret test aad adc or push bound fadd xchg mov cld ja mov push xsaves lock out add push aad mov pop jae fcmovbe stos xchg push sbb add jnp inc push sub popa adcl add lret pusha sbb dec push push push ljmp push in mov push lcall push xchg jnp or (bad) xchg popf sub gs adc mov loopne add data16 std adc pop fwait enter pop sti sbb dec call sub add es mov loopne andb mov sbb inc loopne in out movsb (bad) cmpsb mov mov out sub inc fs push les out inc lock add or jo cwtl pop sbb cmc dec xor cmp dec aaa push jmp (bad) stos mov push xor loopne out cwtl jp sbb inc xor rorb int3 pop popf daa mov iretw dec inc mov fadds pop fchs cmp in mov push adc xchg decb dec (bad) into cmp mov add push mov (bad) loopne les adc aaa pop mov dec mov ljmp imul daa (bad) movsl inc add xchg outsl or sub movsb xchg push or into push es add in adcb dec and mov ds jno or dec sub mov call sbb xchg xor adc stc (bad) mov mov clc dec cvtdq2ps sbb rcll or mov jo pop jp iret pop cmp and ret mov lret add pop repnz xlat aaa push ja jns dec shl push das cmp cmp mov imul push nopl mov fdivr fiaddl adc ljmp lods jae jno loope das int adc mov sbb lea int pop es mov mov xchg mov lahf out pop out arpl js (bad) mov mov and jb cwtl dec data16 pop mov lods push push push pop xor lcall push inc bound sahf jecxz repnz in inc or scas fnstenv sbb mov pop cmp jp cltd or daa push lods sub fcmovb xor test jo mov push test cmpsl (bad) sbb cmp inc dec or and inc mov jnp jb pop outsl jg cmp inc and lahf lret rolb xchg or rcll adc lea aas iret lcall pop test fstpl mov mov xor aam stos nop and scas cmp out (bad) mov fsincos mov dec call or es xor sbb pop and fucom xchg jecxz cmp sub mov sub mov loop jl mov jle cs mov cmc jge rcl fimull push cli push in daa fs rcrl jae sub out mov xchg pop out inc fcoml stc xchg xor jp repz jbe inc aad xchg js sbb push add pop (bad) jnp mov pop sub fisttpl rcr jno in outsl jmp dec ss mov adc jnp inc int3 add pop mov or loope add (bad) mov movl inc sbb mov jae cmpsb std sub fldenv rcrl stc or push pop test jp sahf ret ret loop outsb aad jno mov and cmpsb out mov jns pop push push adc in scas mov dec lods mov aaa bound gs cmp push sahf mov lds mov stos inc lods cmpsl pop sbb mov dec jbe stc push loop jne sub (bad) xor das push xchg mov jo add and jp fxch mov mov jae sbb repnz ss push lahf in sub fnstsw lock and cs add in sub mov jp cmp jecxz xor fildl call add pop fwait inc mov xchg xor mov nop test add test hlt cmp into mov inc or push roll sbb loopne or lods xlat aaa inc movsl pop aad xchg cld fisttpll out xchg xchg cmp mov jg sbb shll or xchg stos jecxz (bad) jae xor mov lret or jl movsl mov in xchg scas dec lods mov scas pop push and dec ja mov add iret std xchg mov add inc pop cmc pop sarl pusha lcall add cmpsl inc push movsl addr16 (bad) xor cmpsb jmp xchg push push pop push in fidiv cmpsl ljmp and cld xor std sub repnz inc jecxz inc dec sbb mov cmpsb icebp sti je (bad) sub mov (bad) mul xchg loope lock jmp sub in sbb add (bad) lcall pop cltd adc sarb mov test push leave inc (bad) mov repz sbb or pusha sub lret inc xchg (bad) or fmulp jne out aad cmp imul mov outsb fildl aam mov xor scas pop push mov pop adc std sbb pop test addb ss mov repz push xchg test pop push dec jns push ror add in mov loop bound adc dec push out jae in data16 in jb jns loopne mov jo adc imul hlt mov and je pop inc insl clc bound mov fdivs inc lock mov jo addr16 xor subps hlt decb inc sbb into aas addr16 insb dec aad mov mov mov and lret sbb add mov gs stos jnp jns ljmp inc cmp (bad) jns hlt xor ret mov and or outsb das test (bad) mov jbe bound dec pop sahf sahf dec jmp pop cwtl aaa maskmovq divl jp jg mov stos loopne mov inc cltd push idivl cmp lcall push lods pop add xchg jge push sub bound jnp inc xchg jp dec in jmp out pop pop mov mov loope mov sbb jo mov out cwtl es fcoml repnz and inc ss inc jnp fidiv push dec imul mov leave add insb dec adc (bad) cli sbb movsb lret jo sahf mul popf cmpl add mov add push or mov in mov ss aam mov or xor sbb push sub or mov aam mov xchg scas popa rcl sbb or mov andl sbb pop fldcw sbb jl jl shll mov cmp jl or data16 sub fwait lods sub fcmovu pushl pop xchg mov test mov cmp xchg (bad) pop test dec and in sbb mov pop add sbb lods dec aas xchg (bad) jno mov fisttpl dec mulb std cmpsb in in dec popa adc add (bad) fsubr jl mov js pop int popf push xchg stc mov clc dec push repnz stc in inc jle cmp inc daa push jne addl inc dec sub or hlt fwait insl push mov js gs mov push xor divl lea dec push pop mov push ret xchg sbb jp fldcw dec xor xchg jge mov clc pop pop aad push inc xchg dec mov mov cmpsl hlt lods push pop adc ret push mov loopne je or inc pop cs sub shlb fsub dec pop jp iret dec or cmc mov adc jg or insl or (bad) mov pop stc sub cmp leave ja out std cmp leave jge out leave je xchg leave jl xchg leave jp lcall cmp leave js mov clc cmp jecxz (bad) mov negb sub gs dec (bad) aaa xchg sub fmull test loop mull pop cli outsl sub inc rclb mov hlt adc sbb cmp pop es inc das aad addr16 mov call punpckhbw mov lret loope sub in std (bad) mov push or je jp mov and movsl mov addl dec dec cmpl fwait push int jmp fildl xor mov lods mov jmp and push cmpsb pusha push lds fistl dec inc jo jns xchg cmpsb es jae adc dec out ja out out inc sbb into lds and repnz pop shll cmpsb incl cmp outsl mov cmp je dec iret clc mov push jo les imull fldenv pop aam insl sbb mov sub pop je push jge negb jg jae dec faddl push repz adc cmp dec enter sub stos mov (bad) stc daa push repz rcrl mov addr16 inc sbb roll out out ficoml cmp mov imull (bad) out bound cmc ljmp jb xor mov sbb add (bad) sbb sbb pop in cmc (bad) mov call add pop pop jge mov cmpsb dec xor sti hlt addb in (bad) aam pop mov loop mov mov mov fsts (bad) cmp scas cmc lock mov push loopne jg pusha cmp movsb mov lcall aaa out inc test cli scas pusha aam pop xchg scas pop rcll bound mov dec daa inc repnz jns popf mov lcall roll pushf pop cmp ja pusha xchg rep lock or jns xchg inc in or test out ret xor cmp incl pusha jne push jl cmc adc divl jg scas mov push (bad) stc test loop repz jnp pop push js (bad) into inc xchg out mov js push (bad) sbb dec (bad) ss adc (bad) jno or and divb mov rolb ret stos jge stos sbb outsl or arpl lds fsubrp fsts jae mov pop push jge inc inc inc cwtl xchg ljmp cmp pop lods xchg sub sbb fstl call add test lock push and mov in repz cmp push and test stc cmc popa pop inc xor jb je lods add mov (bad) enter aad movsl mov or movsb dec mov or or lahf mov push push cmp dec mov push rorl (bad) adc outsl add arpl cltd sub dec sub mov movsl sub nop aam leave xchg aam mov (bad) jmp xchg add call scas cli fs add fistpl xor jl mov jae hlt popa hlt mov clc sbb mov mov push addl out pop cmp popa push dec push fdivs sbb test pop pop adc movsb adc test add and (bad) icebp loope add or hlt adc jbe mov inc push in fcmove add stos cltd es jne,pn les test mov pop mov push sbb rcrl mov std (bad) dec fistp xchg repnz pop push enter inc popf dec adc jmp inc lahf stos pop in adc repz inc daa and (bad) movsb out push sti mov int gs test or inc add jno adc and mov in mov xchg lods int3 mov scas mov rcr daa aad mov mov (bad) gs pop xchg roll or rcr in pop cmpsb imul mov rcrb stc cmp add dec mov cmp imul jae adc leave je inc mov jnp jnp add lods movsl pushf lods mov adc insb clc (bad) xchg or pop scas xor cmp mov inc pop add test inc xor mov lcall test fstpt inc push mov jbe mov mov mov jmp mov mov arpl insb (bad) push mov stc cmp and mov fbld insl out xchg ja (bad) lock icebp aaa das nop fadds push push jg aad sbbb repnz jne cmp (bad) xchg adc cmp mov dec cwtl inc push pop mov popf dec faddl jmp jbe add dec jne mov jmp clc or mov mov mov int3 mov jmp loop ficoml pop xor pop mov mov or test jo dec adc ljmp jae aaa dec loope into es or cld nop xchg mov in out push pop dec in orl rolb inc push xchg nop (bad) mov jbe dec ss sub dec mov pop pop stos mov adc pop adc movsb test sub push pop sti ret cld cltd movsb bound imul mov addb cmp movsl popf mov xor add inc fisubr mov divb add jp imul sbb cli push in cli dec es jno decb lret pop in inc pop sub in iret loope inc pop aaa or push push inc in and jne jmp leave mov out and cmpsb mov jg mov jge push jecxz mov imul inc push cmp ret test gs jge mov xor rcr or ja mov pop bound hlt data16 mov and aad cmc repz aam sbb push lock xchg push jb das clc cltd sub add je fisttpl xchg adc mov cmp or mov rcll dec outsl xlat insl ja xor call and pop lret int3 jp fprem fldl inc fidivl jmp pop into mov adc outsl fdivrl fildl xor jg aaa xor xorl popa sub loop icebp dec imul aam leave sbb outsl fxch pushf sbb es ss out dec sbb fnstenv sbb lds dec ficompl dec (bad) jmp mov cmp test cltd ret cmpsb sti mov flds mov (bad) out fidivr aad sti xchg in stos jne mov fisub jb ficoml jo loop rcr incl loope sbb jne das sub xor stos fdivs fild enter mov xor lcall adc je mov mov arpl push cmpsb adc jne push jb clc and repnz push inc adc je imul sub pop sbb add jmp or xlat pop sar (bad) jp call fimul rorb int jecxz ja mov or dec xchg jbe xchg aas dec dec xchg sti pop test idivl jae adc dec ljmp push mov push aaa stos dec loop in mov pop arpl test push fsubrs lret sbb sbb je mov jl movsl add mov call xchg inc cmp jle pop sub insl pop add and test arpl rolb jae xchg mov cs pop and out adc or stc push out repz call test mov lret (bad) fidivr stc imul leave mov ret mov adc mov clc and add mov cmpsl cmp icebp cwtl jae in sti sbb dec xor mov cmpl xor lret sub mov xchg mov andb sbb cmp xchg add mov push add and mov imul stos sbb fsincos mov mov push xchg adc xor in mov push sbb xor sub mov add mov test mov arpl lea cmp lret out pop pop pop fiadd pop push jmp enter test inc jge push in ss mov jnp pop rorb adc ja mov mov fisubl jg movsb lds sub in sub add imul cwtl push cwtl stos push daa addl cmc sahf mov fwait mov mov add (bad) fnstsw rcrb lock movsb inc sub hlt test add movsb icebp clc dec (bad) jecxz and ret xorb out mov mov sbb jmp sahf mov lea push fimul pop push mov pop (bad) xchg xor lods ljmp in lock pop mov stc arpl into lea push cli or or mov in adc int clc clc and inc xor or rcpps adc sbb clc ljmp xchg push sbb (bad) scas or xor das ret repz inc mov mov mov adc dec loope bnd add sub xchg into call arpl nop add pop ja push ficoml ret leave in jbe xchg add push inc pop jbe and xchg cmp insb mov rorb push out push das mov roll outsb stc (bad) mov lea sar xchg adc out mov cmp adc in add push pop repz push sbb icebp outsl fmuls jecxz divl sbb adc out lea (bad) add mov cwtl dec scas cmpsb loopne (bad) ljmp dec jg pop cmpsl inc stc cmp insb cmp aad pushf mov xchg mov dec dec or push fstpl jecxz int3 push aas loopne pop dec or xor lock andb pop pop dec sbb jns sub push cli inc lods sbb je fs jae inc ljmp inc sub sbb dec rolb in xor sbb iret mov ss pop fistp stos stc pop adc pop hlt lods push mov mov mov int3 faddl push in rorb sub push or mov pop jns out adc lahf push jl pop lods pop mov mov clc mov scas in je sarl test inc hlt pop push (bad) icebp in sub sbb push not loope leave lds (bad) xor jae mov fidivr and push pop xor fdivrl sarb mov insb scas loopne or out scas or lock fdivl ja divb (bad) ficompl gs rcr xchg lret pop adc aam jp call test leave or (bad) stos push cmc inc repnz pushf jl pop or pop in ljmp dec inc repz dec inc cwtl mov andl or popf or clc clc in push mov jns fidivl insl add cmpsl in dec iret cmpsb cs mov or jb sub testb out jnp ret out pop je adc leave jp mov cmc (bad) in jp in sbb jp cmp lcall fbld xor repz nop loope in repz insl int3 inc stos lock mov shll jb inc mov xor mov push sbb testl fcomps push and scas mov pop or sbb pop push hlt in add movsl mov push push daa push repz jnp sbb es mov dec icebp adc push mov hlt cmp (bad) push popa jnp fmull sub jo or pushf or sarl and cmc push cmpsb test stos jae js and (bad) das negl daa jecxz insb push std jns cmc mov mov notl jae int sbb sbb push scas xor gs int3 push (bad) das and in ret fs ja aad push movl xor js fdivrs js (bad) dec xchg ljmp dec scas sub jge add jns popa dec mov in adc sahf jmp std xchg rcl add jae xorb push mov das jg pushf inc xorb mov cmpsb neg xchg mov sub in xor ss lret sti (bad) cmc mov xor inc sbb xchg add lahf mov incl in ffree ret mov push popa dec push fs dec jge jb or xor dec lods sub out (bad) test out jp mov and xorl imul push xchg pop pop sub addr16 scas sar (bad) lock mov aam std in movsl xchg jecxz mov andl dec dec sub xchg pop cmpsb sub gs pop je adc ja jl je pop jp pop dec inc jbe push and call rdtsc or sub jo lods fcompl sub and jae jp loop in lret or lcall inc cmp aam sysexit data16 mov dec outsl adc add rol addl jl rcrb in mov les stos xor mov mov scas les stc sub pop dec pop clc jecxz js inc movsl iret xor mov mov or int3 rolb arpl mov sahf and mulb mov mov insl sbb mov dec fmull dec shrb ss sub divb fcoml stos popa pop aad pop rorl stos adc insl (bad) insb out jecxz iret int adc inc loop js mov sub mov mov es cli (bad) or jae mov xchg call lock pop sahf std jle sti jecxz mov scas insl stos mov dec imul (bad) inc call push cmp adcb addr16 mov insl in mov inc xor lahf mov sbb mov mov sbb fidiv cli es xchg sub lods rolb and ret xchg clc cmp mov lods jb sbb sbb add insb enter jl lods xlat flds arpl dec imul xor pop ret test mov (bad) mov cs dec mov test mov inc jb lock push outsb js add push and pop or mov sub sub mov jl outsl mov int3 clc (bad) not leave dec test inc sub dec push pushf mov add pushf mov das ss xchg sbb and ret bnd jb adc mov pop ret shll cmp mov jp mov bound adc (bad) mov push ljmp das or out mov cmp adc dec std jg inc jg fidivrl xchg mov mov xlat and dec sub and pop test stos stos scas lahf stc inc and pop push xchg push (bad) aad adc (bad) aaa out outsb mov lret jecxz mov xor add push ds push cmp repz (bad) sarb mov jns fldenv mov insl (bad) jg ficom sbb out je mov adc fidivrl and aas mov lock mov cmc lods jb pusha jno roll mov stc adc push push flds sub inc cmp add and lcall (bad) mov xchg scas jne push fdivs (bad) mov pop js bound cmpsb xchg mov inc or fwait pop es pop std mov sub retw or dec mov mov inc push sub dec mov lahf and cld jge std sub mov fwait nop sub into push jp rorl sub loopne and mov test out xchg insl cltd cmp in vdivpd mov pandn pop shlb repnz ss inc das mov stos js ret sbb and lock test xchg pop pop mull adc leave in mov loope rclb inc ja bound push cmc sub pop push inc and lcall sbb adc lock (bad) bound mov stos scas in or cmpsb loop push or loope lods sub dec popa stc lods fs lock xchg xlat lcall lods adc nop test lret xor mov mov and jne in es push les push fstp ret cwtl mov xchg cltd pop mov addr16 out subb (bad) sbb cmpsb or mov movsl pop or leave testl push lea adc lahf xor (bad) dec lret sbb pop jns mov mov xor imul cmpsb xor xor jne mov mov gs jno in (bad) pop jae jb mov pop lcall dec add push loopne in or in roll lds sbb int adc movsb dec xor push rcll call dec fwait xchg ret xchg dec out cli add cwtl sti fisub mov mov mov lds or lds mov push out test clc fild push dec mov lods ss cmpsl push sbb mov les push test jne push mov les jbe pushf (bad) mov andb pop jge and subl jo jle sub cmp add outsl pushf push add adc out jne lods xor or mov jl jbe or addr16 xor sbb xor adc xlat dec jle jns gs les cmpsl xlat sahf fnstcw neg les and roll loop es (bad) mov insl addr16 xlat jle ss fildl imul or inc scas shll jb aam mov mov add sahf das mov shl insl daa imul pop (bad) iret shll mov inc jge pop or aad mov or and or and out (bad) mov or negb push xor mov out jb adc xor push add fadd dec fcomip cmp lret (bad) in or mov cmp sbbl xlat sub xlat sbb cli test pop adc sahf jmp sbb push dec fxtract outsl pop mov stos pop (bad) adc cmc add sbb push imul gs sti add in sub fst jne and arpl imul mov fstpl push arpl test inc mov lcall pop jmp std mov push cmp push jg movsb push sahf mov inc mov call jg adc or in cwtl mov sbb cmp dec jne jae push test push rolb fstps psubb sahf fs pop pop aaa ret jmp roll lcall xchg mov hlt in pop xor pop out std stos je popf cmp mov cmc movsl push icebp stc (bad) sub repnz mov shlb movsl xor dec lods repz jae xor jno xchg out sbb test cmp push scas pop ficom cmp add cmp imul sbb push mov (bad) fimull test fistl adc out add in aad lock out push ret inc outsl inc mov add daa aaa in pop lret jae push xchg inc jp pop xchg mov lcall test xchg scas add sbb dec inc inc pushl imul (bad) outsb imul cmp fildll adc je and mov sbb lret fmul loope jl das pusha loopne in in xchg jmpw pop pop xor xor enter pop cmc sub outsb add xchg rcr mov pop bound cltd mov (bad) cmpsb shl mov cmp push in repz xchg outsb jp push (bad) adc outsb push pop ror cli sub and lods fs push add rorb sub ss repz xchg cmpsb and sbb adc rcll sbb (bad) aam es lods std test in js xchg mov jle test cltd xchg mov adc sbb icebp pop cwtl sbb popa call jle pushf rcl andb lds push jmp (bad) adc cwtl movl push movsl jle jge jmp xchg sbb inc (bad) adc inc pop test add dec test inc cmp stos pop loop push rcrb add sub push xor sti jae js sub int3 jo popf sbb xchg out xchg test push loop sahf jnp push push jle sub pop sub out lahf sub into inc pop jo push push inc adc movsb pop xchg (bad) jbe mov cmp or call stos popa les pushf ret (bad) repnz mov repnz inc mov adc ret mov insb orb jbe inc jbe cmp inc xchg scas out sbb nop xor inc aad sbb scas popa (bad) or push pop ret fucomip daa mov lret aam mov lods out and in imul icebp clc pop add aas lock nop cmp pop lods dec in push aad mov jp jl mov or into mov inc es inc rorb lock (bad) cmpsb push ja (bad) dec dec sbb lods xchg arpl inc xor jae sub roll mov mov cmp aam xchg fcmove sti adc mov xor push jl xchg ret add cld repz mov sbb bnd mov cmp mov outsb jns stos repz fldenv icebp lret (bad) xor mov pop add movsb sahf add mov in and pushf outsb lock pushf mov fsubrl jl (bad) int lods nop or xor sahf pop dec ljmp lret lret fisttpll or test cmp push push cmp ljmp lods jle pop jno adc or and mov ficomp fnsave fwait adc mov mov dec pop enter push cmp fwait mov (bad) dec mov test outsb out inc or callw xor loopne (bad) push cmc loop xchg fld dec mov xor les aam add lret dec rclb int aaa xchg pop scas ret sti subb inc or les mov (bad) outsb xchg es xlat mov push mov loop jp add mov ss jg scas ret arpl movsl pusha js inc cmp mov xor loop mov ljmp adc ficompl cmp fdivrs cmpb push dec inc mov pop xor aaa mov mov mov mov mov xchg out sbb icebp cmpsb arpl mov sub mov jge push mov push leave gs fcmovnbe loop mov into (bad) sbb push or rorl enter js fs addr16 jg sarl js or movsb fisttpl daa xor lea dec movsb inc aaa sub stos js dec sub faddl mov push adc cli lret cmp and js aad call sub popa push std clc sub aaa and jg gs pop mov aad or fimull ja in xlat pop insb fsubl xchg je test jns std addr16 loope shlb outsb push pop xor lods xor push rolb test cmpsb mov push xor push add sahf dec jp out cli repz out push pop jno test mov jmp sub lret pop sub sbb add mov sub clc lret mov xlat lahf lods jle mov test sti movsl cmpsb push jecxz pop fisttpll ds mov loope jns inc xor popf (bad) loop pop sti fisubl stos std scas sahf popf or (bad) mov pop mov (bad) xchg sbb sar add sbb pop mov nop push mov (bad) push popa mov (bad) enterw inc pop inc popf into mov mov dec mov (bad) insl lcall mov in dec leave cld icebp lret (bad) mov movsb jp jle rclb mov dec and xchg xor stc xchg pop movsl pop stc xchg lea xchg inc cmpb popa jne pop add or jno scas mov fimull gs sahf push inc ret leave movsl hlt xor out (bad) adc (bad) cmp cld push push icebp into sti movsl sahf pop movsb lods mov fistp in pop cmp and and test cmp lahf pop cmp xor adc and mov jge cs xlat cmpsb xchg call push mov or dec (bad) in mov loopne dec and lcall adcl fmul push dec sahf inc jns mov sbb xor sbb stc pop sbb loopne lds jle mov xor in xchg test jp inc sahf out or adc push and cmp or xor xor fwait push popa daa dec pop in dec pop inc outsl inc pop jns fstps jp stos xor loopne sub mov fs push ds adc add pop scas dec hlt lahf jb dec jp mov sbb mov or test ja inc insl cmp mov inc or adcl push push scas or xor add loopne gs adc outsb leave gs insl jo fstps mov sbb adc punpckhwd xchg pushf mov mov cmp dec enter mov mov aad aas in stc cli sbb sub and add in mov data16 rcll popf fdivrl dec pop (bad) or cmp xor xor lds fisttpll stos or xchg mov cmp inc add sbb jne pop mov pusha adc or jnp cmpsl and dec loop jle sbb or pop add std in xor out mov push dec jo xor cmpsb add jmp nop fist lea add (bad) cmc add insb jne mov cmp xchg ss cmp roll xlat push jns cmp shll adc data16 jecxz sbb jnp mov sbb xchg adc test (bad) iret sbb adc jmp popf adc xor clc jecxz jmp xor xor adc sub mov sbb scas std dec pop mov add adc cmp lret out xor pop cmp mov mov js fsts pop pop pop or pop push addr16 cwtl sub sbb dec imul sbb or popa popa scas jmp pop sbb sbb push xor pop fild sub mov adcl sti jae mov mov mov sub aam cltd dec sbb jl pop clc cmp decb jno mov pop lds cmpsb cmp push in or outsl int3 imul sbb insb add pop and mov (bad) ja es mov (bad) fnstsw in push (bad) jb add inc fdivrl repz adc fs or xlat jo,pn mov test push mov inc pop mov aad mov mov ja mov pop cmc out (bad) clc jle sub incl mov inc (bad) ds fs push jl js test dec mov sub sbb cmp cli cmpsb mov pop sahf and inc das mov popf rorb test jns add dec dec dec mov push dec int3 sub pop or mov imul in test mov dec mov jmp ds rcr and mov sahf xchg xor addr16 aaa into in add outsl xor adc mov jg jecxz sbb cli or cmp mov (bad) inc shr push loopne push std sbb sbb popf inc ja lods (bad) sbb ficompl stc push fdivl add stos push jo or clc sbb push loope or add pop push faddl cmpsl (bad) pop scas or mov (bad) shrl and or xlat mov or mov data16 scas fidivl je rcl sub repnz (bad) cmp in ja daa popa inc add test mov ljmp into mov (bad) stc mov adc jo or or pop mov or fisttpll xor xor or push out pop jno in push loop jo sbb setnp scas fs and in xor or or or adc out lret cmc test cld mov and ror es jns add insl pop mov dec in loop test jmp fwait or jmp mov dec pusha or jb add and data16 insb or or ret mov xlat in out in adc enter push fsubrs iret mov outsl pop mov dec dec (bad) dec and out test (bad) jne push or sar idivb pushf push das jno push in pop mov movsl inc adc jne inc mov pop punpckhwd in pop jne add xor xor addl les push dec xchg out pop sub inc pop xchg jne mov mov pop inc adc sub popf fistl fwait xor pusha xor stos jae int movsl (bad) out cs cwtl sub push xchg cwtl lods fdivr sahf (bad) addb das std rcll (bad) lods jge imul jmp mov sbb push mov xchg int (bad) jns lods nop cmpsl mov jl add or lret add (bad) (bad) rolb add cld or (bad) or in aam pop out sti out es fidivr popa push lock pop aaa repz mov insb lds mov mov fdivrl hlt xchg (bad) std mov pop mov push lods cmp and je fisttpll push sub cli mov or nop sbb nop lds jne pushf test cmp or pop stc (bad) jb cmp pop mov mov mov scas cltd lea cmc push daa repz (bad) pop xchg lret or aam fcoms or fcmovb lret frstor jne fdivr add mov std clc sub mov mov mov jns add xchg inc mov or sub mov out dec outsb repnz in fmul sbb adc mov clc mov push and sbbl mov mov add pop test xchg dec ret cmp stc mov mov mov push fistl pop lds je sbb mov pop (bad) or add stos sar xchg movsb stos mov mov dec in (bad) (bad) jae cmpsl rcrl mov add rorl test js inc push push enter aad jecxz js pop push leave lret ret hlt fisubl icebp dec daa mov mov mov mov cmc jmp mov arpl xchg aad or xchg repz stc into fnsave pushf jg les shll stos cmp call loop jns mov enter mov mov dec cmp lds jnp in pop imul mov dec xchg leave mov data16 adc add notb ja hlt cmp repnz and es (bad) movb test out adc mov gs and cmp iret dec les sub lods pop aad test cltd mov fbstp mov adc scas add jmp cmc aam xchg cmp iret test dec cltd pop cld xchg cli popa push jb pcmpeqw fsub fbld mov in adc xchg mov inc inc mov in scas add lods mov push xor inc adc add popf jl lods (bad) sub enter insl stos dec cmp inc das pop push sub repnz cwtl stc push pop pop cmp imul fdivrs adc sbb out xor arpl mov mov int scas mov stc insb mov es orb mov and mov and mov inc clc (bad) mov aas pop cmp pusha bts pop clc in arpl xor aas jl pop subl push lea jge test scas dec in jmp rcrb mov fidivrl adc push cmp imul mov mov int3 mov outsb xorl or imul mov fsubl ja add out xor dec pop arpl test mov les jge cmpsb cmp lods mov cmp addr16 or hlt ficoml movsb jb xchg stos aas add das notl cld out mov adc scas cwtl (bad) cmc add pop cli add and lods test inc ss lahf add jne mov jp sbb add push mov iret mov jae out test arpl out repnz hlt mov bound daa outsl cmp movsl sbb dec inc pmaxub (bad) fxch push out add ret sub xor pop and mov or push lret (bad) cs add dec or add fmul loope fisttpl mov movsl sub add dec ja inc insb mov mov jmp nop clc icebp or jns or and lock cmp dec or or mov ret mov xor mov ret push dec sbb mov mov or fsts xor sahf nop inc insl es hlt jno pop jns loopne lret int and (bad) (bad) (bad) popa dec sbb mov repz xchg sub and dec popa arpl mov aas repz insb pop mov dec lods mov push nop jne inc mov enter loope mov jne push jg jecxz cmp cli add test jg or rclb or (bad) inc add arpl pushf ss mov pop sahf mov xor nop jle js dec insb loope pop gs movsl cmc shrl out pop push mulb push push dec cmp clc dec sub and jbe daa pop ss lahf jl (bad) dec push push scas pop ja xchg fld loopne movsb xchg outsb sbb push adc jg dec push js push test aam loopne scas mov push in loop movsb pop push push into mov sub xchg scas mov sub out ss jmp jns mov pop rcll stos cmc or pushaw repnz dec jns (bad) es stos (bad) outsl pop repz cld push xor mov push lahf pop jne push mov bound jne sarl fiadd add sub in or dec xor fcmovnbe push push sbb loop movsb test cvtps2pd imul xchg in push lods sub aam and push xor push mov not mov jbe mov mov push lods std jg test jae lret xchg loopne clc inc jg (bad) lds dec out mov fadds inc jnp push or mov mov xor iret sub xchg lahf loop frstor add push sbb ja cmp lock rol popa or mov cltd je add mov daa mov fs inc lods xchg fldt into std mov sbb loope or lods ljmp shr mov fstpl mov mov pop cmp fimull les fcomps ja add sub and or fs push pop mov jl cmpsl scas push jp dec sbb iret mov pop mov jp pop fimul mov mov jp push stc enter pop pop pop cmp push (bad) out mov pop push push mov pop cmp loop fdivrl (bad) in lret mov rorl jg sub neg insb mov pop call enter xchg xchg or adc js cmp push add (bad) dec and adc add mov lcall mov dec jb mov jnp (bad) xchg iret add mov mov xor pop int3 fstpt out or mov arpl mov loope dec mov pop (bad) jae cld push inc mov mov leave cmc adc adc jno leave lret dec cmc lret push inc (bad) cmc jb movsl ret jbe adc mov cld push scas mov test mov in jno pop jne inc (bad) cmp cld push imul movsb cmp cmpsb sbb lods lods int adc cmp (bad) pop negl jl ret xchg or decl pop pop add cmpsb cmp in nop sub push rcrl ja psrld stos jno dec stos jl adc pop aaa stc lock or stos cmp cmpsl fnstenv xchg adc jmp aam enter xchg arpl (bad) pop sbb in inc mov cmp sti or in int3 xchg loop loope out dec (bad) cmpsl push push in jb pop (bad) (bad) insl jecxz sub dec jae add cmp ret sub pop adc cmp mov in push sbb int3 jbe or xchg in repz mov inc push call pop pop or aad lock (bad) repz cmp or jae dec add dec jp pusha and aad call or mov fcompl (bad) xor dec jns (bad) xor mov sbb adc sub test jge inc repnz (bad) xchg cwtl adc adc ss inc mov mov outsb repnz lahf push and xchg (bad) push les imulb icebp lods pop fstpl push jae outsl inc push fisubr ror into repz or shll (bad) daa or sbb fisubrl loopne (bad) fnstcw jmp lock cmp sbbl lcall xchg (bad) xor pop sub fs loopne movsb out outsb gs add stos jg test cmp je push jg jns lret jle out decl test pop rcll mov sub push repz mov (bad) pop aam stc out sub enter push cmp jo call pushl cld inc insl jno aad jl cmc mov adc loope jno mov pop mov jo cmpsl cmp inc mov andl in mov loope cmp or movsl in leave je push incl inc insl sbb xchg inc sbb lds jmp cwtl or in test fisttp insl sbb add shr mov popa call fwait cltd pop repz xchg pop sub and imul push (bad) mov pop hlt (bad) push cmpsl pop push sbb pop pop cmpsb mov popf adc mov mov pop push aad stos mov and add or xor push cmp inc pop cmp rolb (bad) mov lods aas clc and movsb ja inc pop call xchg pop sbb jb aam mov js ficoml jnp into jno or pusha jg jg lock mov jnp idivb shrb out dec push (bad) mov das jg sub jae in lock mov pop rol pop push inc sbb jp fwait shll push pop mov pop lcall mov adc cld sbb cltd push push dec mov insl and jbe mov and dec mov pop stos cmpsl add add push fidivrl cmc jae or cltd popf or mov imul push sti vhaddps in sub scas add nop cmp adc mov fnstcw jp (bad) bound cmpsl mov jnp xor lret jp in mov (bad) adc push mov sub mov shl add mov loopne xor ret add mov js rcl aad pop push pop jo pop mov aas cltd add jecxz and pop add clc fsubl dec and iret scas iret dec jae push xlat mov xchg scas lret adc outsb clc jb mov xor dec loope sub xor jmp mulb push mov or popa (bad) sbb cltd lock inc orl dec fucomi cpuid xor mov mov ficom mov inc xchg popa mov leave and push jns jmp fild pop mov jbe ret les imul data16 (bad) divl push in or inc mov pop or cmp movsl add inc xchg subl adc jecxz jns popa push pusha push mov pop mov push mov add or push xorb (bad) mull cmp and loope add ljmp pop scas dec xlat jge push popa je sarl leave dec fldl (bad) add out inc jo les inc js push cmp cmpsb mov mov and in inc jns cld sbb sbb push int3 pop (bad) fistl dec leave sbb or sbb sub out pop clc imul sub jb mov hlt xchg repz lret mov stos inc mov mov adc xlat daa inc out pop or aad je lea js pop dec repnz loope shll jnp outsb xchg (bad) imull sahf add arpl fadds sub and mov mov fwait mov or sub jecxz pop (bad) aaa mov movsl in jne push dec cmp test loop sarb int call sbb sub xor sbb jle or mov or jge js les sub sub arpl add inc and jae sub and fidiv std out shlb jmp xor add or nop jno popf sub iret mov fidivr lret sub mov in adc pop fdivs cmp push xorl aad leave sar loop jg frstor xchg out nop or sti fwait icebp cmp in push aam (bad) xor lea mov js fdivs cmp or loopne inc mov sub aaa sbb jne imul mov (bad) sahf (bad) mov ds sahf mov mov cltd hlt mov stc mov or adc (bad) or push fmull xchg cmp mov ret inc mov loopne push push stos loopne dec aas loope push outsb mov push sub ljmp pop sbb mov inc cld pop jl and jg sbb lret ljmp movsl or rorb adc hlt dec add lds repnz jno inc (bad) rclb dec sub jo dec dec mov mov ret jno fs or add or jno je adc push mov xor mov loope push insb mov pop dec out jecxz (bad) add sbb jg xor lahf jl cmpsb enter sbb mov rcl xchg xor jbe pop inc cmpsl pop mov xor pop fdiv repz xchg adc sub rcrl mov sub pop (bad) pop loope fsubr out jb dec mov jmp add push in xchg out inc roll (bad) xlat xor push xchg out cwtl adc and ret add mov add sbb mov jg xchg xchg imul adcl lock mov je pop mov ret icebp mov loopne push test test test sub mov mov daa ds (bad) std rolb and aas das add fnstcw inc pop and fstpt idiv pop popf std and mov cmp fcmovbe scas dec pop xchg add cmp cmp test popa mov in inc mov dec cmp (bad) fidivl dec lods or stos and in paddsb xchg pop sbb push or fdivrs mov es sbb mov lret jo push sbbb mul test js js or test jne pop mov mov in daa aad jns xchg or mov pop mov sub add sbb int3 fs icebp (bad) and adc add stos mov inc insl fcmovne iret inc in pop movsb outsb sahf mov je rcr mov push dec adc pop adc ss jno mov aas (bad) jne mov call imul jg push ret xchg (bad) leave mov outsl xor fstl mov pusha and inc mov and xor aam test inc adcb scas inc sub mov mov cmpsl xor pop dec add scas mov mov and ds out scas aad inc or stos or cmpsb testl jbe cmpsb mov add jb icebp ljmp pop adc and out std adc adc ret pop cmp dec cmp out fs cmc iret mov std sarl pop ljmp in in sarb mov push lds movsl push js and jecxz dec (bad) ljmp inc ret mov insb loope sub cli add idiv or or daa dec jg imul clc hlt adc jns or mov hlt xchg popf jbe mov inc or cld sbb push jecxz xchg or xlat lods jo pop (bad) scas sbb jecxz flds xchg ja stc fisttpl testl iret xor nop and dec and mov adc mov add out inc push add add mov cmp mov arpl sub xor pop and ss mov (bad) adc ret inc pushf hlt cmp enter pop imul mov and movsb fiaddl xlat stos sti mov adc pop xor inc jge push in psrlq mov fldt jae mov out sub mov pop xor ja add shr nop fistpl and (bad) iret pop add adc lcall push aas push inc shlb (bad) test in sti in push sbb lock jbe fimull loop rep jns cltd cmpsb adc jns fwait je push push xchg cld ss in push push adc mov (bad) call xchg adc stos dec (bad) xor mov es mov push pushf js ss xchg pop jns xchg movsb ret sbb imul push aas js popf mov cltd or mov nop add push je repz fwait jno js leave daa mov mov xchg inc mov and loopne inc fbstp std xchg add arpl je mov mov in out inc icebp xchg and arpl pop push jge xchg pop add or jbe divb pop nop insl test aaa dec sti mov xchg rcrb mov jns popa xor inc (bad) movsb jae out dec adc mov adc jno out add int3 xlat leave (bad) mov mov pop jb pop sti ss nop jle lods and ljmp jns js (bad) addb loope dec pop (bad) stc jmp mov outsl add imul xchg and pop ret sahf lret inc out push pop fucomip popf and xchg dec jbe rcrb mov and jae xor cmp adc sbb xor in sti enter xchg pusha test (bad) lahf int3 (bad) mov and loop push hlt xchg push je pop jmp jge out gs jl movsl pusha pop daa ficomp xchg scas xor mov mov and mov movlps xlat dec mov (bad) xor pop test mov addr16 adc loop test fnstcw adc jl adc out lock xor xor mov xchg inc ds xor mov lret jmpw cmp stos or mov ja jmp pop push fildll inc std sbb push ljmp dec in hlt mov stos adc xor push mov ljmp outsl mov decb cmp jle imull addb (bad) mov jns out xchg iret ret mov sub dec inc popa adc push js into test int add ror mov inc test test pop sbb mov jl stc lock mov repnz clc ffreep sbb lods ret add jge push out rol adc pop mov loopne rcrl dec push xchg jo stos mov lcall arpl (bad) and out out fldcw int3 mov stc popa repnz mov imul adc jnp ljmp jecxz sahf jb xchg pop dec dec movsl mov loopne push shlb fldl mov jle loope cmp mov or movsl and lds imul jle stos jnp adc pusha dec mov mov outsl mov dec stc data16 fidivr cmp jo aad (bad) mov js xchg ljmp fistpl mov dec stos and adc ret hlt decb push push inc mov and sub xchg repnz stos or leave js pusha fsubrp (bad) dec mov xor data16 mov mov adc sub push sbb stos or lds inc ljmp or dec roll scas push push sbb pop mov jg cmpsb popa or mov pop sbb mov adc out mov je jno dec hlt ret push add push and out cli addb out pop out rcrb mov inc xlat fdiv sbb insb fdiv insb mov xorb xor pop fsubl test jns push dec ja les movsl std das dec mov adc mov (bad) jnp adc js mov and loope (bad) dec hlt idivl cmc insl fsubl iret or xor jnp mov jno add mov or test inc sub cltd add (bad) aaa mov (bad) cmovbe (bad) bswap std xchg movsb lahf mov test (bad) shrl dec cli mov sub add andb push or fisttp in pushf std orl movsl cmp xor add cmp jecxz xor or add mov fnop je pop hlt mov (bad) pop cmpsb mov and aad ficoml fistpll mov inc jo dec fmuls mov adc cmp rorl add adc pushf cmp pop jp mov dec lds xchg xchg js fbld lock insl stc mov inc inc push push push sarb sub loope jno fwait movsb nop xor sub lds mov jle shll cs shl sti inc push ja inc pop xor mov in fnstcw in adc push cltd ficoml (bad) nop mov inc insl ljmp push and repz or add inc jnp cmc clc (bad) sti cmp push inc inc aaa xlat mov cwtl imul jg jge dec dec icebp outsb push shll mov adc push inc fbstp cmp sbb add jecxz hlt cwtl push mov aad adc sbb push in cli insb ja out xchg lret cmp lcall in ja cmpsl jns mov adc mov test pop js pop adc jge aam inc cmp pusha add insb pop push mov fwait outsb lock js cmpsb movsb mov sahf arpl mov cwtl fcmovnu imul add in mov dec jne push jnp cmp shl xchg (bad) rcrb (bad) mov cs iret mov call and pusha mov cli cmp push int cmp pop xchg sbb jecxz dec enter jno adc std fild cwtl mov (bad) test pop jge and xchg and push popa scas stos (bad) fldt mov push push mov push xchg push lcall in mov dec push in sbb push add shl sbb xabort xchg faddl imul movsb decl jno cmp add in mov stos addr16 or stos adc sub movsb and shlb fsub add ret sbb mov out lret cmpl pop js call hlt imul xor les in jge dec rcrb stos repnz jp push xor push icebp mov add mov repnz ljmp fldl sbb and dec hlt inc dec ret imul xor out or test mov or and mov add sbb mov stos enter nop test sub imul cmp adc (bad) sti fmuls xor mov cmp mov enter shll outsb sarb (bad) int3 rorb shr xchg mov xlat sti test inc sub aam (bad) add adc scas movl aaa mov jp pop (bad) jnp jge mov pop fistpl add cmp sbb aad insl in add cmc imul pop movsb inc das jne mov cmp add clc in lahf mov push push fsub adc cli imul (bad) bound pop xorl mov mov shrl pop and (bad) mov mov int cltd push call mov mov (bad) repnz mov cmc hlt in (bad) aad or sarl insb cs or pop (bad) stos mov test int xlat xchg stos jg roll pop iret or sbb pusha jmp dec lock xchg aam sbb or jne sub (bad) mov or sbb sbb jne sbb add cwtl add cmc add sbb add (bad) js mov fwait xlat mov jae jmp xor out jne push ja repz movsl scas and lahf or dec or dec mov jbe xchg adc cmc sbb add and (bad) pop push add mov xlat daa scas (bad) scas inc xchg mov sub aaa sub mov push push (bad) sarl cmp sbb fidivr loope (bad) pop insl inc in sbb repz aad jp inc pop dec push sbb sbb pop ret or or xchg jo das js insb test xchg jae cwtl sub push fdivrs ja push test movsl pop loopne cltd bnd stos add das lods mov rcll jmp std add ja push or mov mov test inc and push pop fistl adcb test test mov and adc add mov aad push jle shr adc lea pop scas ljmp int3 (bad) sub enter cmp fmull scas fmuls loopne cltd and je in sahf arpl jp cmpsl or into insl cmp aam xchg es imul loop faddl gs cmp test sbb mov repz rol jle movsb or out xchg cli mov outsl cltd mov fisttpl jle mov or iret out repnz push push (bad) dec add push leave negb lret jb incb in push je jne jbe dec xchg mov (bad) repz lret mov sbb dec (bad) pop dec pop das nop scas mov pop pop je and inc imul mov cmp mov stos xor sti ret inc les sbb sub and (bad) popa (bad) adc push fcmovnbe dec sub adcl loopne cli imul ret enter push outsl mov add data16 mov mov mov pop enter jne aas cmc mov mov xchg sbb test mov bound dec mov ret push jb xor mov fnsave sbb lahf add dec dec lds inc sub pop jle aaa or ffreep or addl leave jbe and xchg cmc hlt gs push pop sar nop mov lret adc nop push jb or enter aaa dec and inc mov andb (bad) cli std addr16 std dec addr16 movsl dec (bad) xor push inc cmp test in mov sahf idiv in pop repz jge mov pop mov add cmpsl pop jns sbb mov sub (bad) xchg lds push dec adc or cmp lods cltd sbb or adc lds test add add jmp pop add jmp repnz iret or and sub sbb xor aad icebp fimull jne inc mov pop sbb cmc punpckhwd dec ljmp pop push std xor in pop sub shll adc pop mulb jnp outsl cmp fdivl mov movsb lock jns ja gs fimull dec mov inc push dec jp cmp mov and (bad) jno and xchg fsts jns aad fs and jne lea divl shrb addb or fiaddl fidivl inc mov inc mov das nop ljmp call sahf je fcmovu dec mov jo sbb popf adc jae ljmp jle add ljmp movsb lods push dec std mov pop dec xchg ja dec mov push pop cmpl sahf pop lods pop adcl jecxz or or push mov jp sub ret mov (bad) adc (bad) jo push push and test jb popf inc (bad) mov test into fbld in test push (bad) cli push jp push mov stos adc sti add mov xchg jle hlt lods dec add xchg push test dec je (bad) xchg movsb jg mov xor imul outsl cmp divb std sarl push mov mov cs xor xchg aam pop dec test mov pop push mov pop inc lods inc xor cmc pop jg xchg jo add lret outsb or lret (bad) (bad) add icebp movb sbb mov mov movsb (bad) mov sbb call and in fbld in jbe xor (bad) push ror movsb adc mov fildll inc dec inc das adc aaa push pop popf add (bad) insl ficoml adcl jg,pt in pop ds (bad) mov push das pop jmp iret sub daa out fiaddl sub daa inc adc (bad) stos sub or btc fcomps mov fwait sbb xchg in js lock outsb or or inc push jb mov xor cmpsb inc xor loope (bad) stc or pop adc es int3 xchg sub insb push jge scas jo insb xchg sti jge push mov popf in pop ss jecxz pop fidivrl jno push mov pop ljmp xchg cmp mov xchg in pop loop inc out repnz gs cmpsb int3 pop imul (bad) mov not or mov xchg mov or fiaddl movsb xchg mov lfs daa mov jae xor mov or add mov dec and aam mov loope imul mov lods push mov movsb sbb lods ss int nop add or adc pop sbb jae jnp dec stos or mov addr16 daa insl and stc out xchg clc mov sbb push push out xchg jnp and or push and sbb and push mov mov fwait repnz movsb ud2 pop leave cmp jge rorb sbb xor and icebp std mov dec cmp push ljmp pushl add lret xor call outsb push or js das mov or loope pop (bad) outsl add inc bound je adc push roll jno xor stc (bad) rclb push orb push pop jl jp int negl aas xor rcll scas ret repz mov sbb sahf sbb mov repnz ret stos or and scas call in dec jp xor adc push adc out pushf in push pop stos repz sub popa xchg out or mov repnz fnstsw adc repnz push sub je bnd test jns mov sti rorb push (bad) lock xor push adc dec mov in cmc jae sti jae mov call pop js mov fdivrs sub lods sar std imul push rcrl sbb mov and ds rcl lock add mov stc mov push xchg stc lahf sbb into xchg lcall push jg fcom adc inc fldenv pop mov outsl jg xchg rcl jno (bad) rcl pop mov jmp rcrl (bad) mov sub xlat dec push out push sbb (bad) (bad) repnz loopne cmp mov cmp mov (bad) jb xor xchg cld jge and cmp fiadd nop push sub inc sub imulb movsb jno (bad) and xor xchg lods push push call in pop insl clc data16 fisubl repnz mov (bad) loopne fwait cmp pop mov insb push jp xchg imul shrl pop mov xchg into adc mulb pop xor pop cwtl cli imul cmp mov std push je enter stc cmp add push pushf add fidivl push inc lock jb inc (bad) (bad) std pop pop jl test mov inc (bad) add mov in jae push test push pop or mov mov mov inc aas stos jmp jns in jo test inc in leave pop lock dec adc dec addl in pop mov dec mov inc push cmpsl scas dec minps jp push into inc mov dec fdivr repnz dec pop test pop sbb xor sahf cmp incb push mov sbb sbb mov jo lcall rorl jge sti mov cmp imul lods lods inc sbb into int3 rorb xchg jl nop xlat call clc mov fwait (bad) rcll es clc jns mov mov mov push mov icebp jb pop jne push push rcrl push in in xchg mov in mov xchg or cltd xchg movsl mov sbb mov fiaddl shr call xchg loope push mov shr dec jb adc mov jp cmp xchg or jle cltd sbb xor dec test mov jo or lahf daa cmp (bad) lods leave ljmp stos xchg dec cmp ja sub push add lahf imul shr or jle or and sbb and lahf jmp and jle js test push fs pop int3 aad add xlat fs lret sub test add pop inc sub pushf pop dec in cmpsl (bad) cmpsl std sub dec mov mov or fwait adc pop sahf sar pop sbb hlt ret inc adc test adc cmp fs push hlt push add cmpsl (bad) aam sbb imul sbb aam pop jmp shlb fistp rorb arpl (bad) mov push adc jns stos loopne jmp cmc jo pop imul xchg in xchg or add adc add jb xchg rol pop dec aam enter loope or addr16 in cli rorb or push test xor inc loopne push jge xor jge sbb adc fcoml fwait add scas jns cmc or jno cmpsb jl fsqrt jns or pop push jnp sbb std int3 sub dec jmp lds fidivrl psrlw in jp pop lret inc pop fcomi in dec ficomp lret outsl in dec aad test rcll inc (bad) repz pop adc cmp cmp notb and inc mov ret jb mov sarb mov dec jge (bad) arpl sub jb inc sub jl jp jecxz cmpsb push nop jno test out cmp xchg rcrb jne jle sbb repz push and rcl inc or sbb ror call jb mov xchg push mov add mov leave jns push inc dec sbb imul (bad) xchg inc rcrb jmp sahf and cmp fistl mov int test dec imul jl pushf mov xor outsb inc aaa in push jnp xor (bad) aas clc int cmp mov jl and (bad) scas dec pop xadd xchg sbb or adc xchg cmp loope imul int3 and loope je and cli lods and mov test mov adc pop mov pop outsb cmp or jl loope leave (bad) in jge inc jnp sbb xlat std pusha push cmpsb jns je mov fcomps sbb clc insl push mov xor ljmp push into jmp fmuls jbe pop nop mov not sub in xlat in test jg sbb pop push fistpll pop cmpsb pop adc sub sbb std lods inc sbb mov jg leave (bad) loope into les mov jmp cmp in mov and (bad) mov mov cld pop xor aam sbb sahf add rcrb dec (bad) popa jle add jnp cmp push out adcl or mov mov cmp jecxz jns (bad) jns mov pop cmpsb es fsubl hlt xor push nop jbe imul mov adc out and (bad) test xchg cmp or or call sbb or mov (bad) mov jb hlt push mov fdivrl or dec cltd data16 mov ret dec and inc movsb ss sub xchg mov mov xchg stos xchg or sti sbb cmc xor push aas pushf pop ds dec jns add movsl add iret dec hlt repnz gs pusha in js arpl pop (bad) mov fidivrl add and clc inc es dec insb sub ficoml xchg enter test stos jecxz lcall arpl mov gs incb ljmp sub test lods int (bad) xor mov repz inc cmp pop ljmp (bad) sub inc sbb cld sti adc jp push sar in mov js xchg inc (bad) daa push or xchg movsb adc in mov sbb jmp nop popf addb mov lea and pusha (bad) cmp pusha push mov sbb xchg out push push ret (bad) mov hlt test imul xchg fistpl stos add jne inc add inc add psubb lret cmp out pop loop loop std out xchg add rol push mov or sbb or pop addb xor mov in adc xor push push es fsubl cld xchg xlat popf in (bad) sbb mov cmp sub push xor sbb in out sub mov adc js hlt or cmpsl movsl inc or mov pop mov (bad) xor dec rcrl xchg jns mov fidiv sub mov jmp dec fucomip call movsl js mov or pop pop push mov in sbb mov push cmc jno (bad) jle aaa push cmp sbb rcrl mov and shrl ret mov sbb (bad) repnz scas mov and cld aam mov dec xchg lock (bad) popf lods enter jle add mov imul xchg mov mov jp pushf cmpsb add enter push cmpsb xlat les ret lods daa arpl mov push mov (bad) (bad) mov gs inc xchg adc or sbb shrl scas xor push dec out jmp lods shr sbbl adc sbb mov out repz insb xor ljmp in popf dec test popf xor shrd shl pop fildl push lea stc jnp call mov bound data16 roll daa outsb clc and pop inc je imul or scas pop insb lods cmp (bad) sbb scas and and lcall add adc ficoml adc lods (bad) xor es lds fsts cwtl negl jge fidivl add or sti arpl adc outsb sub cmc cmpsl mov adc xlat add pop push iret sahf das inc fmuls fstps mov jbe insl movsb adc (bad) (bad) arpl popl add inc sub or xchg jg das scas popf cmpsl mov ds mov add scas test mov jbe push imul sub lods mov jne cmpsl and cmp orb inc inc aam lcall dec pop or in (bad) pop and mov fstl lahf adc adc rcl ljmp rcrl mov xchg jl imul testb addr16 js (bad) je jge xchg pop mov mov in fldl push mov movsl inc rorb pop out mov je fistp jne das dec and and jns scas mov popa push xlat push cmp lret sbb mov inc lea test aas pusha xchg fwait cmp inc (bad) inc mov cmp push mov je mov addr16 int or cli dec mov xor add data16 movl mov xchg fadds sbb dec or ret aad push dec clc sbb mov cmp and std jg dec xchg lret mov jo lea xlat or call mov ds push les mov dec enter push fnstsw (bad) cmp call adc mov test hlt aad sbb fldenv or ljmp mov push add out aas adc cmp push stc movsb xchg pop push mov sub jnp pop push (bad) ss pop and in ss out iret rorl (bad) movsl int3 movl and sbb mov cs fidiv stc lahf int3 inc loopne pop inc repz and clc dec adc mov add pop xor xor dec sbb fstp out pop int adc or push out jmp pusha cmpsl (bad) das mov pop mov mov std jo mov jno adc je lock mov adc lods lahf cmp sub xlat daa sbb mov ret aam ljmp ss cmpsl pop mov (bad) mov add out and or or and es call dec (bad) shrl insb jp popa sbb andb fldcw cmc add push es jp and testl mov or or push enter rcrb arpl loopne inc jp (bad) (bad) insl ret pusha ds jo and pusha sbb cmp adc mov sti pop mov shrl jl mov daa jo in mov inc call sbbl mov ret (bad) aaa fcmovu mov leave mov add jno inc push or or mov rol jmp aad in inc mov jns cmp out repz insb (bad) jp mov data16 (bad) fstl (bad) xor xchg idivb dec push xchg cmp cli mov (bad) jb (bad) not sbb xor ss jge aad pop pop in scas mov std popf dec arpl test dec sahf lock sbb fiaddl lods dec xchg mov sub mov into add lock sbb push jp test aas (bad) int or mov in push inc in pop jl push jp lcall push mov cwtl fs adc mov adc (bad) dec rcl (bad) leave movsb movsl popf jl call and ja pop jo xor insl inc (bad) cmp cmp cmp rcr insb scas rorb mov sbb xchg test sub xchg rcrb in jns lods add pop add lds ss xor inc jecxz jle and cwtl push (bad) rol or cmp inc imul adc frstor into xchg jns adc test pushf (bad) add pop loope ds divl mov pusha lcall xchg jp pop push icebp imull push and mov xor fdivr mov aad fimul loopne adc out jmp into test loop test or mov out js into mov scas pop in insl push xlat hlt data16 inc cmp mov cld jo stos repz and fisubr pusha xor jae,pt dec pop loopne mov aam (bad) mov jle imul push sarb mov popa add lods test es loop jle mov adc movsl pop lds (bad) xchg scas mull mov and add call cld fimull sti inc aad in add mov push cwtl jne shl jge stc shlb (bad) jp clc jns gs je cli out sbb sub leave ret cwtl lods dec inc dec fs cli data16 nop pusha repnz or fcompl fisubr testl cmp push stc lock insb push lods rcrb cmp (bad) push cmpsb fcomip or roll jb sbb repz add cmpsb fiadd mov daa push cltd out sbb fdivp ret fcomi (bad) lods fist lock pop out mov sbb jp push lods inc pop aad popa ret gs and dec pop in mov jns cmc out add pop in faddp dec insb hlt fs lea sti push mov push push in or stos jne loopne (bad) xor hlt xor or lcall cmp sub cli (bad) mov xchg push in (bad) jmp imulb cmpsl les std int3 fisubr loope fdivl add sub xor aam out loope pop call inc push pop cli xlat roll scas loop adc cmp cmp jnp in inc stc adc pop test jmp push mov jmp sbb dec pop inc dec jmp dec pop ret push rcrb stc aas clc dec push js or rorl rolb and in jb loope nop sub add sbb fsubrp sahf adc rolb loop jae ljmp rcrb pushf cmp cltd lds shr push mov out add call dec aaa mov bound std xor mov fbld mov jb mov (bad) pusha pop gs xor sbb jge enter sub xchg es (bad) xor imul inc dec arpl pop fldcw adc push adc out xchg pop hlt in pop ror lea add ret shrl adc test mov lods xor pushf pop and mul push dec call push inc iret mov push xchg mov repz xor inc es sub dec push pop pop cli in add fs adc test repnz test dec daa pop int3 adc mov mov push enter sbb xchg inc cwtl inc stc leave sub cli dec jns stos sbb mov sahf cmpsb sbb fs mov pop fiaddl fisttpl jp jo push lods outsb mov loop fistpl jo cltd cmp adc dec pop inc pop xlat insl dec in ss mov inc pop repz jecxz cmp rol mov pop add pop jns pushf mov add jp aad mov incl in or push fildl gs clc scas js push mov xchg adc xchg sarl inc dec (bad) fisubl xchg or js lahf fnstenv test pop std icebp cmp inc mov outsl cs ret imul movsl cmp mov idivb mov mov paddsb lahf jne sub push dec (bad) ja imul fucomip andb insl adc pop mov xor inc push xchg loop into dec xor pop fsubrl das jbe es mov cmc dec ret movsb out inc pop je push iret pop push add and xor in xor sbb in out mov xchg lods cmpb push fildll mov in js pop xor std (bad) cmp inc push pop fistl fstps scas movsl in loop mov sub test clc mov rorl int3 enter pushf clc fisubr sub ljmp fiadd sbb jno subb hlt xchg xorl mov lods movsb jnp in stos jb jbe add xchg add cmpsb inc sbb jae push xchg jle (bad) mov xchg dec sub add or roll add and xor push push in mov clc data16 sub js mov pushf or jge sbb mov jg fwait shl test pop dec inc pop adc clc ljmp pusha aaa cld ds pop call ret nop (bad) js adcb pop or subl fsubr gs ljmp jo in outsb sub (bad) adc lea stos xchg rcll xchg insb stos dec mov (bad) push mov (bad) sarl enter add fiadd js mov dec inc pop enter xchg fmull mov inc rorb xchg pop dec push js sti jno ss mov sahf lret in hlt mov jne mov push inc repnz mov jg imul fisub inc bnd ficom jmp and test xchg sbb lods cmp (bad) movb cmpsl aam in enter into fsubrs insb sbbl gs inc shlb jno sbb sbb (bad) cmp inc pop mov dec call xchg ret ficoml in mov pop cld in mov jb and sub xor movsb cmp mov aaa push dec lods loop mov ja jp movsw je fcompl aam fisubl sbb inc push mov fcmovnbe arpl sub lock jb push inc mov jne dec cmp (bad) cmc mov and sbb jb jno pop sbb (bad) push dec outsb pop mov jbe cld hlt pop nop (bad) rolb in leave mov movsb sub ds xor add or mov div dec ret mov push call fcmove xchg into divl sub std (bad) test dec or cmp cltd andb jb dec cmp idivl cmp out out push cmp mov scas addr16 push out jne repnz insb mov mov into jae lret adc clc mov int dec movsb mov and lret (bad) loopnew jae inc push pop ja test mov dec cmp add popf xchg mov pusha daa or xchg xor mov push scas xchg out leave addr16 adc je hlt jecxz sbb jecxz xchg out push push dec cmpsl lods in cwtl push bound iret rcll adc daa ret (bad) fnsave pop roll jle outsb fisubl test mov inc leave mov int (bad) adc lock lods sti ds dec test stc stos mov jbe cmpsl xchg loopne inc or rorl cmp sbb aaa mov sub stos and (bad) inc or ja adc lea je push lock mov xchg lods jle dec push mov lods mov pop inc xchg jo pusha sbb lods xchg sbb dec fsub fwait lods xor (bad) pop out lds mov push or cmp push mov (bad) insb test outsb insb or insb xor inc sub inc (bad) clc movsl push mov mov addl scas mov sbb and sub js ret loopne and in adc stc (bad) aam roll inc mov test lds fsts jae mov push inc imul stos or or lods or arpl sbb push mov pop sub test or jo dec lods inc ja cmp cmp pop or (bad) ficompl pop mov jecxz out add jg out jno js jl rorb mov mov je cs cmpsb mov adc js hlt sbb stc push (bad) cli mov pop test out xchg xchg in cmovae mull loopne pop repz out repz mov fild xchg outsl (bad) xchg push in icebp test inc popf ds (bad) or std pop setge ljmp jp mov hlt stos mov mov pop cmp into sti add cmpsl icebp add jne mov aaa add push push xchg xor add arpl sbbb and jbe dec mov mov or sbb jle mov adc js jne jo dec call cmp push ljmp insb mov (bad) out rcrl or dec loope (bad) stc mov andb incl sub stos jns loopne mov rol jo notl daa mov inc or mov fs add push test aaa stos cli dec out jmp bnd jb add sbb or jp jo lods ja movl or pop fadds call adc sbb lahf and in sub mov jae adcl in fwait mov les fwait mov inc cmpsl and jno cmp shlb add sbb daa inc and dec rclb jno push jl or push fucom aas rcrl subb fsin das (bad) jb loopne pop int ds jecxz out push jg push sub or int3 out add xor pop or mov and xchg sahf push sahf out fidivr pop or jbe in or mov clc aam mov mov push jne out cmp das out enter (bad) mov aaa outsl fcomi cwtl push mov push int3 xor jo jae cli inc (bad) dec fsubs push sbb and insb dec (bad) mov xchg pop dec push jne outsb imul movsl cmp iret pop in sbb or cmp push scas jns dec or mov popf cmpsl aam inc dec scas or mov sbb sar dec (bad) sbb jb dec mov push fimull lahf xchg mov repz push lock and ret outsb or cmovno lods ljmp pop outsl aam add jecxz sahf mov lret test pusha (bad) nop lods nop imulb jge adc lds jp shl inc xchg or dec arpl jg inc loop aad stos inc add jno (bad) mov sbb ror fnstenv lcall sbb (bad) push push pop cli cltd xchg pusha cmc inc das (bad) sbb mov cmpsb pop test hlt (bad) out mov std and sbb add mov push int adc call (bad) push lods out (bad) into dec cmp cs push lods inc lret sbb repnz jmp mov mov (bad) lods iret push jns jnp (bad) clc bound (bad) jmp ret xchg jbe sarl push pop popa pop lar dec jle in fs test dec cmc es and push (bad) sub iret add mov xor repz mov and jb push out xlat sbb jge (bad) cld out mov je,pt adc push sbb std stos push je repz adc jno or rcrb shrb shl out sbb out in jp jno lock mov jne loop inc je or in mov arpl inc pop mov fnop mov popa int xchg mov dec test push mov shll and xchg and or jnp les push out jo mov mov ss mov loop (bad) mov xchg (bad) xor pop cvttps2pi js and sbb repz xchg jle lock xchg movsb fdivl lods inc dec pop inc xor iret std in lock fstps lahf adc jbe aam cmpsl cmp daa dec pusha dec decb xchg sbb jne loope mov and insb or fucomip xchg std dec (bad) in loope in movsl adc pusha or movsb pop std pop div jl iret add and jbe aam mov adc cltd (bad) ljmp jge push add dec lock mov add outsb loopne jl ret mov andl adc sbb loop aaa or and cwtl fnop mov xlat insl cmp sbb lcall mov or mov xchg add js xor popf shr loopne lock jle sub xchg pop mov sarb mov push out dec in pusha pop enter cmp push (bad) cld loope into pusha pop iret push clc mov push cld pushf jge call inc inc fdivr repnz mov call cmp sbb jge sbb jo mov jp invd push arpl fidivrl fimull (bad) in hlt sarl int aad push xchg and sub mov jle loope testb xor mov jae inc mov nop shrb cli divl out sub mov std shlb fidivl mov imul (bad) iret scas sub out popf loop lock enter jle rcrl fsubrs xor jecxz (bad) shl fbstp push inc mov sbb adc add (bad) test mov push add lea pushf xchg ss xchg cmp rcrl flds ds xchg cmp jp jge dec dec call lret fsubr xchg int inc xor (bad) dec mov mov movsb sbb and fsubl scas sbb jno add dec jb test imull xor clc inc clc repz dec insb mov daa sub loop in jle hlt aas sub push push inc jns aaa loope inc sub gs lods decl dec mov int3 les sub sti mov mov jmp inc stos popa inc stc sub add or dec daa or fisubr incl xor fcos cmp (bad) xor rcl mov jne test push stos add xor add icebp jge out inc arpl lock sbb xchg sbb ljmp loop add call das loopnew xchg lock cli (bad) fbld add add inc in (bad) sub mov fstps js leave cmpsl inc sub sbb dec nop pop and repz push cmpsl bnd icebp jb jnp call aad rol xchg out je ss xor mov shl gs fsubl sub sti mov mov call in pop fisubr or fsubrl ret sti push lods push xchg push sar sbb (bad) lock inc loop jge movsb mov xor pop sbb mov jbe adc bound or out mov mov aas jno mov mov xchg and sub gs xchg inc test inc call cmp insb jl jo sti (bad) inc aam imul leave push jge pop or lds jbe mov test mov lods call cmp outsl jg in xor notl push incb cwtl cmp sub mov push or ret push testb rclb adc cmp xchg cwtl call mov outsl jmp jp add (bad) xor sub add sbb inc xor decl in push lea dec jnp jno inc dec xor sarb fildll mov fsts rcrl mov push icebp aad lret or (bad) movsl test std (bad) js imul fnstenv sub ja dec rorb lock add or fadd add or pop lock and fnstsw in sbb insl sbb out dec jle loop jno std xchg cld xor cld pop xchg lahf lahf mov jge mov js inc add cmpsl sahf fucomi jle mov jo cltd mov lock and push movsb sbb insb cmpsl cmp mov cmp jnp ds mov sahf call jmp je fxtract push ret (bad) aaa jbe mov push das push jns fcompl loop sbb loope pop push out inc xor xchg aaa aam (bad) jne xchg mov pop aam int3 aas sbb push das inc and iret add test es rorl jmp lock mov lret xor sbb pop mov jb in inc lahf add push pop or subb dec xchg loop (bad) and (bad) sub cmp in add or jge inc fcomps stc push and (bad) repnz sub and (bad) in and mov adc pushf xchg pop outsb fldpi cltd push jg sbb sarb fmuls (bad) cmp add (bad) dec sub call cmp dec and out in and sub daa js jmp ret cmpsl in mov movsl add fwait mov bound pop fwait outsl popa pop inc dec arpl sbb pop jp mov mov js sbb sbb in adc push std xor adc jl ja test add (bad) fsubs sub out or (bad) in nop loope notl jne lods xlat out sub adc adc cwtl pop fisub stos outsl adc jecxz adc sahf cmp sbb jns sbb xchg movsl mov test (bad) mov cmp into rcl aas jnp inc mov cs lock adc adc cs jbe jo es scas fmull es (bad) push aaa adc jne sarb jl ucomiss mov rdmsr sahf xor jge insl imul sub je mov and jge add adc and cmpsb mov dec adc inc into push jne insb test dec sub mov add int3 cmp mov aad xchg leave inc aad dec mov mov ret jno out cmovbe cmpsl sahf dec pop push mov js xchg mov and vpackssdw lods adc inc cmp xchg hlt out inc das dec dec push out xchg pop jno inc sub jecxz mov and adc adc hlt sarl cmp jb out sbb and xchg cmp mov popl lret xchg mov mov data16 xchg xor call jg testl scas xchg ja xlat mov bswap or iret sub mov jb call fnstenv repz sarl insl cmp pusha mov fcmovbe dec scas aad movsb rorb adc dec loop out fwait mov mov mov push js mov cli mov jge bound scas jmp push pop xchg mov mov (bad) and enter test in lods jmp add mov inc jbe jg push adc inc fsts movsl dec inc adc push push insb dec add test out test fwait mov push outsl jl in mov xchg jl neg daa mov mov jecxz and pop test mov arpl push xchg pop mov std out mov subl (bad) js mov imul insb pop leave (bad) fmulp mov or mull clc push sub shlb unpckhps jnp mov mov and mov (bad) dec adc sub jp jnp ss mov cmpsl movb or mov out scas sbb lods pop test nop fs and jg in ret xchg sbb add xor cmpsb stc inc fnsave cs in out ljmp dec push mov jns mov stc or fisubrl data16 pop test push mov inc mov ljmp xor aaa stos cmpsl mov adc out add js or push pop dec sub sti push push jns cmpsb sbb xor pop jne jns loopne xchg or mov out fs mov shrb cmp ret cmc ret clc sbb or jo lods push test cmp mov cs outsb fisubrl insl and mov mov xchg cmpl fs jae and or sti push cmpsb lcall sarl push fs adc push imul pop lods loope outsl fsubrl mov (bad) out xchg lahf sub js insb jo movsl scas std jl xchg xchg rorl adc js xor es (bad) cmp scas arpl cmp imul fidivr aas jae scas cmp mov cmc dec cwtl test mov lret xchg sub jno cld jbe daa repnz mov out jmp mov sti sbb cwtl cwtl add scas (bad) aad pop adc test jge in fnstenv cmp and push and pop mov fcoml push xor rcrl fildl sbb fisttpl fwait xor dec inc xchg roll fwait lock inc lret negl aaa loopne js clc loope cmpsl ss sbb imul jge inc inc xchg push sub cmc ds mov push imul imull push imul push or daa and (bad) push leave xor (bad) mov adc push lock shr dec and mov or negb mov aad mov enter adc subl clc (bad) xcrypt-ofb cmpsl test jg test push call or or js jg movsl fcompl mov mov pop jecxz xor adc pop xchg mov loope jmp cmpsb mov jne jecxz add imul ss sbb inc clc xchg imul call xchg movsb mov push fnstenv jno mov insl jl clc (bad) dec out jmp add out fidivr sbb test adc (bad) hlt jbe lcall cwtl mov jbe std pop push in jmp mov mov in or mov mov mov adc iret (bad) shrb sti out sub jo ljmp inc call cmp sbb inc mov loopne test jnp fsubl aaa mov out dec xchg lcall inc and cwtl fstps ja pop rcr insb lock dec scas jbe int and cmp aad std outsb lds loop inc rcll sbb pop sub cmp fwait ds xor cwtl pop or cmp jmp jecxz fstpl jb mov push out jp in ficoml adc mov dec pusha subl xchg lods cmp (bad) ja iret mov pop jl and pop mov pusha les loope loop jne xor ret push xchg sub andb mov push xchg and pop sbb sbb (bad) dec jns xchg dec jnp mov jae hlt (bad) cltd push pop es cmp mulb mov rclb sbb addb les test jg adc push mov loope xchg jbe std popf xor jae outsl bnd mov ds inc cmp cmpsl insl movsl rep in pop pop push ds inc jmp cmpsl mov or loop imul jne or (bad) lock or lds out fcomi mov adc icebp adc adc sbb push js test jno push jp roll sbb pop mov lods sub and xchg faddl rolb (bad) jae mov xchg pop or popf rcrl aaa shll cmp push fsubrl es fidiv imul jge jno jp je add test shr ret xor mov imul lods lock fiadd pop jo je sbb cmc je mov popa enter fistpl sbb pop aad inc sub push push push sub into mov mov jb (bad) mov lock hlt fcomp in push hlt pop sub loope roll inc ficoml cli in push clc and test mov movsb sbb mov movsl xor int xlat es fmul mov mov in arpl js jp and loopne sbb push ds enter fcmovu push aam fimull jg add icebp icebp out pop adc cmpsb and test mov sahf dec fs roll xchg dec sahf mov xchg js bound pop push cmp bound fcomps (bad) icebp inc pop cmc gs jo pop in lods ret scas lds aad mov mov pop hlt outsl mov es popa imul dec add mov push rorl sti xorl xchg and out mov fsts mov jecxz or dec (bad) insb ljmp mov aam dec mov push stos fdivrl or outsb dec cmp xor and gs in mov inc gs mov cmpsl adc hlt dec iret xchg add adc pop cs daa lret xchg pop jns mov cmp mov test popa jecxz or sbb test inc or data16 push outsl or das pop cwtl jns inc test add add stc or adc mov pop js fisttpll or hlt or mov push leave mov ljmp fbld sti or dec int mov cmpsb jg mov jnp call stos jne xchg push lret ljmp jmp fsubl xchg jp adc loope sbb cmp aad lret lock xor fdivs sbb cmp mov mov cmp mov mov fimull cmpb data16 cmc adc push xchg ret mov repz inc scas addr16 and pop je int xchg fistpll pusha in xchg cwtl xchg cs xchg jae mov sub sub shrb sub pusha mov daa mov and jae out jmp lods jbe or add rcrl dec mov inc inc int push mov mov lock add xchg sub adc inc out add mov lods (bad) mov push div push (bad) rep fmul xor fiaddl mov fisub aas (bad) jb insb jecxz dec xor xchg test lods popa sbb mov mov push sarl pop loope bound cmovo aas (bad) in jg push adc ret push mov jecxz sbb adc adc adc push mov inc dec mov cmp jne dec xchg repnz stos push mov and jmp pop shrl out cmp popa je pop fnstcw inc scas sbb xlat out icebp (bad) (bad) dec pop mov lret adcb clc mov fsubrl lret sbb fcomp mov jge lcall std adc mov inc adc inc mov cmp out mov movsb repz inc cld mov jmp in add dec or dec pop imul vpavgb dec jne popa js dec sbb add jl test lds out pusha ret fistpll ja test add push sbbb mov mov adc popl mov mov adc aaa pop test pop cli push cli dec pop das jb mov adc nop dec scas sbb mov sub or pushf rcll aam daa in test jne push mov sub fmul mov mov cmp xchg idiv and nop out insb stos rorb cwtl decb movsb aad xchg sti and xor scas mov sub mov icebp xlat js pop jne aas fs mov imul xchg je repz dec loop jp jo mov xor mov shlb out fs xchg loopne mov cmp and or mov mov jecxz jns xchg pop mov push in andl push add in mov dec or inc push jo jecxz mov test in lock test (bad) out das scas int cmpsl test pop repnz mov jmp push mov cmp add sbb push leave mov mov mov inc xbegin push rcr dec out pop push pop (bad) hlt (bad) mov repnz pop aas cwtl dec jle fcomps cltd mov jne nop xchg pavgw cli sbb inc scas pop xchg adc aam sbb xchg jne repz mov out or test push popf pop xor aam in lcall mov andb lea sbb aaa ds push lock pop sahf mov or pusha scas lds out jae dec mov fisubrl mov jl cmp xlat push fdivrl (bad) push cmpsb clc or rclb hlt sub pusha aam incl jmp dec and mov xchg cmp adc pop inc (bad) mov outsb lods push mov lea nop dec sbb mov xchg cltd xor in nop int3 rcl mov je in or cli loop subl std (bad) shll push imul in lds sbb mov jle add xor cmp js sbb adc imul jmp clc dec mov dec into or mov jns stc lods cmp in pop jae inc sbb movsb movsl fwait cltd add jmp pop lods loope fisubl jb mov adc fwait cmp (bad) jo lcall outsl pop call dec out adc or leave cmp (bad) sub mov lds fs xor xchg ret aaa push shlw dec loop adc inc sbb sahf sahf fmul dec cwtl mov stos cli push dec into adc add push and not in jbe add mov outsl call rorb clc add stc je int3 pop into mov lods push incl notl rcrl dec jo or sbb add pop fdivrl mov pop pop inc dec nop imul xor (bad) jno or cmpsb aad js push (bad) (bad) dec sbbl jo test vpacksswb xor sbb xchg pop out das (bad) xor pop sbb add shll call gs jle fwait nop gs mov jb movsl imul enter mov cmp sahf lret sti stos jecxz xchg test inc aam pop cmp fsubp fwait sub ja mov hlt cs (bad) pop stos cmp xchg dec test adc std (bad) stos in push sub or mov lret inc scas push cli push sub lock add sub jl lcall adc jns jbe dec mov cwtl pop inc jp jno pop pop xchg dec sbb js push mov imul enter push enter clc cmp out pop jb and call aad dec jo jbe pop in test imul cmc jmp fcomi enter out movsl jg and pop out sub adc mov stc clc and mov and popf sub int3 enter jecxz push shll or test (bad) mov ja mov orl jb xchg cmc scas jo call push mov pop jb je push push imul inc repz adc fcmovb push push outsb call mov repz insb push insb xchg cli mov sub inc dec adc dec call xchg xchg int aaa hlt lods addr16 xor rclb pop jno mov jnp cmp sti pop or push jb inc outsl mov lods into (bad) popa inc adc add sub or sbb hlt jmp pop imul add js incb aam mov bound add jae and pop sbb sub pop sbb push mov mov cltd stos mov lds jns movsb adc fsubp addr16 rorb lret xchg pop (bad) out iret aaa add mov inc daa fldcw jmp out push mov (bad) add mov je or cli dec fdivrl jge adc mov xor and mov add sub adc add adc pop pop push or ficompl out pop cmpsl xchg mov dec jp mov adc push cmpsb sub cld mov push out rcrl sarl js and push loope (bad) scas test cwtl and outsb xlat gs sbb std mov lods or xor (bad) lret hlt mov push popa lock push loopne push and popa call fnsave out xlat push popf cltd inc scas xor orb sbb les cmp pop mov pop rcrl fnstcw dec jno xchg jbe xchg add sarl fadds xlat das imul repz inc adc dec enterw add inc jle pop inc loope stc xor add arpl sahf push (bad) xchg scas divl push inc jge push xor sbb jle je sbb add cmpl test shr push push inc sub mov mov syscall inc mull imul pop shlb rorb pusha stc iret lods xchg fcomi cmp jle fwait pop xchg lret rcrb jno jb xchg or pop lock stos dec pop call es mov movsb emms jecxz in mov stos sahf sbb lret movsb jl into sub std dec push push aam push cmp (bad) cmpsb out mov out add or pop jle cmc inc arpl dec mov frstor lock fwait inc stos pop (bad) (bad) jne push dec mov fldt sbb adc ds iret sti adc rorl pop (bad) je push repz bnd inc mov sti push or jecxz test in dec rcr jae loop,pt (bad) adc test ljmp cmpsl outsb pop or (bad) pop mov jno lea lods in lcall hlt (bad) sbb loopne xor mov xor lds or and fnstenv (bad) je loopne pop scas rcll js dec lcall inc or imul jle ja inc cs inc or andb add and stos push jnp add add iret ja jns or loop (bad) xor dec loop aam ret push and xchg inc xor sbb stos insl or push imul aas sahf mov (bad) push repz sarl call inc push or jecxz sbb sbb test test mov and fild or mov in pop ss in jmp hlt push testl mov mov dec adc test xor cli ljmp mov add mov add in cmc cmc out pop push inc mov (bad) aam stc adc push xor insb pop sub sub fstps fs xor rol and pop gs je mov scas jle notl cld jmp imul push aam sub jl,pt or push ljmp pop mov in push add push lock nop mov fnstenv dec mov test ficompl or sarl push or cmp das adc gs push mov jg stos je dec add jmp inc nop lock aad sahf and adc sbb pop in or jns add sbb mov push cmp jo popa shll jp push jmp pop dec stos jecxz push sbb dec xor popf jge or js enter push repz movsb xchg sub fcomi (bad) jnp incl add movsl bound pop mov xchg adc das fwait lods sub xchg pusha dec pop cmp jns sbb or xor daa jnp int3 push int push sub fdivrl add outsb loop mov in imul dec test cli sarb mov out mov fxch lcall pop cli mov mov mov inc xor imul out lahf push lcall jbe sbb dec push icebp jne loopne shr mov mov ficompl mov mov mov push pop jo adc mov ja or std rolb les js shr aad flds dec out mov inc mov inc popf (bad) mov mov inc push jne mov pop mov shrl loopne sub sahf loop mov jp leave mov bound notl cmp inc jnp sti js,pt jl (bad) xor mov or call shr inc mov pop aaa or cwtl std in sbb leave mov dec push lret test icebp es cmp ss push ret mov subl mov cmp adc cmp inc jg bound rclb lods mov jge testb popf loopne imul leave rsm aad add fsubs int jmp cmc cs jb cli cltd (bad) out push pop xchg fwait or aaa pop pop mov jmp nop loop cmp adc push push mov lods mov sub idivb sbb add clc js add loop push jg sarb insb insb cmp sbb fsubrl in ret xor jo mov mov test leave shlb push sub jns push sti mov or push xchg (bad) dec ss sbb inc pop lret dec and xchg mov dec pushf cmp out jne aaa sub mov leave mov jo and push scas inc push mov jno dec xlat les pop lods xor sub andl dec lock into xor das bound movsb je pop mov jne fidivl das mov lock xchg jo ja dec imul loopne fcomp mov out enter add enter sbb pop xchg adc sbb push aad push ss fdivl add cmp add ret inc inc jp jns sub xchg cmpsb dec sbb lea popa xchg inc mov call jo out mov mov jo mov (bad) imul mov add jns cwtl xchg leave cli add mov dec push jns mov lock mov push dec or sbb call sbb loop or cs test or sarb mov cli inc xchg pcmpgtb cmpsb jp movsb lea mov cmp jae jge jp adc mov popa adc xchg aaa xchg aad push dec xchg adc xchg xor and adc xchg jae ret gs adc enter jae jmp xchg xor fdivrl add fs sbb je (bad) jae mov test mov add es or jl fdiv add iret rolb jns fs imul bound imul fbld push push mov dec mov fcomps inc inc push fs shrl outsb jb pop pop fisttpl call cmc push add pusha and js mov aaa popf sbb xchg xchg adc add popf sbb les mov sbb mov or popa bound add adc and imul ja fcoml cmc xlat fidiv out jg and xor adc sbbb mov cmpsb or xchg adc sbb fidiv out test sub mov inc iret repz dec into sbb int or and mov mov (bad) fidivl or xchg je and xchg jnp lds or pop xchg cmp sarb mov push popl (bad) inc sti fild add xor push int lret dec addl scas loopne shrl push ljmp out divl sub test out test sbb jne jp je mov mov push mov pop out fiaddl scas jb aam mov les ja add jg adc pop pop add cmp jnp mov xor out inc into ljmp test repz sbb or (bad) sbb movsb inc cmpsb jne sub (bad) cmpsl mov int3 pop fdivrp jae sub mov sysexit or push mov out insl test das cmpsl dec and mov loopne push dec ss gs sarl cwtl imul fcmovu jns rorl mov insl (bad) sbb in or movsl sbb cmc pop xor cmc aaa adc js std xor adc jns push test movsl or inc push cmpsb mov jle (bad) jg jp xchg jle lahf push push mov subl pop fnstsw mov rcll cld add or arpl sbb xchg cmpb loop jb shrb fildll push jae jno lock fdivrs popf jb andl push test dec cli in ret jl sbb (bad) pop dec and mov push (bad) pop call xchg aam repz movsb cmpsb data16 inc pop or adc xchg jmp dec sbb gs pop lret jo add in add in sahf scas test ffree insb dec stos aam cwtl mov jae aad lods mov (bad) push loopne inc mov loopne jno mov or mov fidivr test enter gs inc daa add mov mov cld add cmpl popa inc xor rep popa test mov mov add add pop insl scas dec and inc sub out xchg push sbb jl fldenv das imul dec sbb in (bad) fisubrl inc mov push pop mov push push add jno sbb xor add nop pop inc test mov mov (bad) cli std dec mov imul mov mov xchg inc and ds cli inc in xor mov xchg xchg sbb pusha xlat push fisttp leave imul jno in add je dec adc push dec jns imul ja sbb sbb add sub dec out xor fsts test std or aad outsl sbb and xchg adc nop xor push mov push push pop mov dec (bad) (bad) in push imul xchg xlat cmpsl cmp dec inc pop arpl sub (bad) pop mov dec fwait cmp lcall fildll mov out popf lods xchg enter sarb dec or jp shlb dec repnz cwtl (bad) mov dec sbb pop sub cwtl ljmp aas dec jnp addl xor test bound adc inc hlt mov sti inc adcl outsl inc rcr das fisttpll dec je xchg xor push add cmp xor icebp jp adc insl outsl and adc aad ja push mov mov pop and aam les push adc loopne stos lret iret js or call (bad) xor in xchg in fldcw mov int3 dec fs scas push or lret mov adc jge mov das xlat adc jb insl push add pushf jns cltd mov mov jl data16 push push nop loope loopne inc lret std jl lret stc lcall sub add push and icebp mov std and mov into aaa sbb popf push jp pusha push test cmp lock pop sbb lock aas in jecxz das jmp sbb test fnstsw sub mov mov dec bound push jl in pushf jle mov ljmp (bad) fcmovbe aas ljmp jbe lods fldenv jmp mov in xor mov cmc jnp bound xchg aam add push insb iret sub loopne (bad) les cmp mov mov or inc (bad) ja mov mov (bad) cmc shr lds mov roll inc sub in les fdivs mov push mov mov fldcw rorl push add lock ret js mov js dec test jp mov ds jnp pop sub push sub divl push fsub jp sbb incl pop pop flds and push cld xorl mov mov aaa (bad) insl cmpsl cli clc mov cmp cmp add or mov gs xor sbb and (bad) cmp mov cld lds data16 adc fild mov test stos adcl (bad) xor hlt xor fcmovnu xchg add (bad) (bad) js iret leave sarb mov les stos xor adc packuswb mov xchg sbb cmp (bad) (bad) dec scas push pop inc rolb ss push out movsb sub lods outsl and jnp push data16 jmp add dec cmp dec decl jne lods mov mov or xchg or test lods pop rolb xchg push test add mov (bad) adc mov cli js jl data16 decb clc cwtl mov insb sbb clc in xchg pop movsl mov and cs psrad repz add cmp mov jo xor lock test out mov fidivrl aam js loopne loope loope sub sub cmp in inc jge daa cmp mov loope inc into lock jl clc push jo pop push xchg movsl pop sbb dec xchg movsl pop dec insb jne pop fnop ret add and sbb rol push cmp daa xchg inc add xor mov cmp or pop repz imul in nop cmpsl test (bad) sarl ja push mov sbb mov (bad) adc add jl les mov mov jae mov lods push pop ja test mov jae rcrl ja jp cwtl jp jne daa mov addr16 popf jns dec (bad) std ljmp mov iret xchg (bad) mov sub and xlat inc fcomps cmpsl sbb rcrl fmull hlt xor pushf sub mov jmp test bound xor inc std push ret daa push jns (bad) sbb pop dec dec clc lock add push scas push mov lcall repnz xor lock push (bad) mov pop ret das scas aam rcl push mov mov mov and divb cmpsb push and add out movsl pop mov xchg es inc xor ret mov andl mov cmpsb and push test push and movsb push in repz (bad) hlt into fidivl mov adc mov mov test push fucomp pop out sub pop xchg push pop pop je pop push in push and dec sub loopne nop arpl cmpl adc xor jg cmpsb imul jl mov xor js dec out or add or popa lea rorb mov sbb cltd adc (bad) push pusha cli mov popa iret mov add jb mov adc clc mov jp xchg push and jo ja int3 jle ss push xchg out stos loopne mov jb outsb aad bound insb push sub jge jno test lods sbb mov mov lock push or xor lds shrl dec fsts fsubrp push andl xchg push repz dec gs jecxz (bad) (bad) daa cmpsl xchg lret popa aaa ds cmp cmp mov dec movsb rcrl ja stc xchg pop mov cmc adc jns pop xor inc lahf test mov pop and cs adc ret lret testl or push loope and mov ficoml out or cltd sahf xchg push popa fisub arpl mov pop or jb daa or xor inc inc adcb aad push ffree add addl andl (bad) adc xor push cmp xor aam scas (bad) sbb sbb lret ficompl jge xor mov inc je inc or out dec jb std cli dec lds mov xchg mov mov and xor mov shlb aad push jp sub call xchg pop ja test pop and pop pop xor xorl pop jo and ret jo push js jge int popf pop (bad) popa or xlat nop sbb pop or mov add pop xchg sti mov push mov fcomi mov pop fnsave dec (bad) aad or rclb push popf xchg cltd and lods dec mov lds cmc dec xchg lods imul jge add loope lds inc into mov mov loopne mov fwait int push sahf mov xor mov sub bound and jnp fldenv jne push jne hlt lods dec pop in test leave xchg jp jae in je outsl cltd mov insb mov sbb ljmp or push push dec jecxz mov mov lret mov mov stos xchg mov sahf test pop cmp ret test jmp shrl cld stos popf mov fwait dec mov xchg push data16 pop push cld inc les pop mov and dec scas or sub xor sahf mov push dec std pop das int3 adc mov nop lea mov mov pop fild fucom push xchg fwait mov or mov add xlat mov mov cmpsb mov add pushf jo in inc in inc in aam xchg inc jp cld or shl pop cmpsl lcall mov movb insb dec adc or push push jns or hlt popf clc (bad) pop and sbb ss lea mov mov jo insb lds lds sbb rcrl shl jae inc push jp xlat sbb jbe int insb pop shrl rcrb pop inc and (bad) mov mov js clc add jno loope mov jns sub xchg ret sarl jne pop or cmc xchg adc xchg roll jge (bad) neg inc push xor xchg lcall jp leave mov adc adc jge and pop cmpsl std push fwait jnp pusha or js scas xchg out (bad) jge call js sbb mov pop mov repz test sbb scas jne adc fwait inc and jae addl lea int dec jae mov jp adc cmp mov ss mov and sbb push dec push pop insl dec pop jns push outsl dec notb add cmc adc fdivrs mov xchg outsb and (bad) lret jne in pop jle pop jnp jae dec jo ud1 or imul xor test lret sub out js cmpsb pop push or inc loopne jmp shlb adc and cli xor push pop mov add aas push fsubrl ret leave (bad) or loopne cmpsl mov sub int3 nop clc fstl aam mulb pop arpl mov sub (bad) xor nop leave vmaxsd mov stos lret push inc fbstp dec (bad) pop mov push mov fwait mov fmul jae push out daa jmp jmp iret or stos dec sbb pop roll (bad) fisubrl aaa jo test pop fiadd inc mov cmp mov inc lock aaa push adc imul sbb fcmovbe adc pop ss pushf cmc repnz je and jge cmp cmc out push dec stos jl fist pop pop jb,pn into out pop mov ror mov (bad) mov int3 mov fdivs pop push cwtl push (bad) jge mov xor jle (bad) or sar lods loop pop inc (bad) scas les popa jno mov fcomp es jle loop mov inc roll es or push and sbb sbb push mov ja and inc out loop mov rcrl sub pusha xorl lret loopne sub fidivl rcll stc or mov add js mov call pop loope adc jle mov stc sbb loop daa push stc cmp mov pop in push hlt mov xchg dec inc iret mov inc push lret test pop mov push mov mov sub mov pop ficom ja adc icebp test pusha pusha (bad) adc dec add clc cld pop test jg popa or mov sbb popa xor mov push add mov adc std inc cmp aam or jnp xor mov daa dec lea inc mov and sti mov in xor xchg mov int aaa xchg cmp xor popf test std call push (bad) test leave loop test fcompl aad jecxz iret or push daa aad mov pop test jmp push in xor test push shlb sub scas mov or loop (bad) fnstenv add icebp ja clc inc mov dec sbb jb dec insb pop jmp jae mov jo dec aam ja (bad) out shrl test cmp xor pop test push add adc xor sbb pusha jo sub jle add cmp out adc adc lea push popa xorb push jp or adc pop (bad) sub push and std cmpsl add xchg pop sbb dec cmp adc pop mov mov hlt sbb je loope es mov js js imul mov jl sar cmp sub cltd mov sbb popa add fdivp fidivl mov ja inc daa addr16 sbb scas adcl xchg push shll jno loope jg aad dec lock push mov add int3 push fdivl cltd and xabort js inc hlt leave std int push mov jge xor and inc test add xor cli notb add xor jo cmp into in jbe fstl and jae jo add in and xchg (bad) in flds test dec das jecxz aad push push aam roll rorl push mov adc inc push frstor movsl jbe dec movsl cli aas pop cmp sbb cmpsb adcb xor add xor aam adc mov add shlb xchg mov inc sub ret jecxz and ja sub mov add sbb dec js xor dec cmp mov popa mov cwtl cmp jp mov or aam pushf xor std daa pusha inc cmc push add jae pop mov dec inc cmpsl std pop fwait lods dec sbb adc jo subl dec inc in inc jo in jle (bad) dec mov (bad) int ljmp mov loope pusha icebp lret jmp popf in andb icebp cmp (bad) push xor mov mov or aam push popf xor add sbb xor test daa call dec popf imul jp leave frstor mov inc pop add lods scas jg stos inc mov fnstsw bound and out outsl or xor jmp pushf cmp mov (bad) jmp ret sahf dec mov aam (bad) add (bad) cmp inc (bad) (bad) (bad) lds mov (bad) jae into js push int jecxz pop inc stos push push lock outsl jl sbb add sub test lcall data16 jecxz sub mov sbb ja xor imul movsb in call sbb push push mov inc mov push push pop mov sub and xor stos hlt enter mov pusha jbe lods (bad) jno cmc pop and mov fcmovnu sbb and pushf adc pop mov movsb jns ss cmp xchg test fwait sub aaa xlat sub jle dec push mov dec adc push xchg add icebp sbb loope test push or xchg lret scas and (bad) inc xchg nop dec mov stos clc iret sbb sub jae sar pop sub dec xor add mov addr16 nop or mov pop data16 jp mov in loopne adc clc into popa addl and enter xchg in push inc mov lock neg add ficomp and or ror movb mov test xorl xlat push jmp popa sub (bad) and cmpsb cltd loope dec mov inc add fs std mov sarl (bad) cli test push popa jecxz mov dec (bad) or add push loope pop cmp sbb fwait loop int3 (bad) aaa movsb (bad) lds sub xchg mov mov pop cmp mov aas jecxz icebp xchg lea mov jb (bad) lods adc inc inc xor dec sub (bad) in mov inc adc xor (bad) or nop jge add pop dec sbb push xor sbb dec push adc mov cmp outsl ja repz mov sahf dec test call push dec cmc loopne adc sti outsl pop cmpsb fsubs call dec inc cmp mov mov mov jp or xor sbb push repz js dec lret xor pop fsubr push into cmp pop fst (bad) cs or movsb xor pushw into inc xchg aam cmp lods dec orl adc sub xchg sbb int3 sti sub jmp loopne (bad) xchg sbb sub or lcall in sbb test out add shrl pop jl jnp lret inc mull sbb dec add rcrb movsb fldl and push sbb dec clc shrl jns or sbb push jns push imul (bad) fwait cmp push out cltd and cmp out cmpsl data16 inc xor pop lcall mov cmp pushf or andl rcll adcl xchg cli fiaddl pop cld lea fwait lods out mov loopne mov out and in daa jae cmp pop iret pop mov cli lods cmpsl scas push jne das inc inc sub or inc adc fdivrl mov aam adc lret jg cmpsl xchg test out pop lahf icebp jmp cmp ret lret add (bad) jo sbb insb mov or out fwait jb daa jno or cmc dec jo pop repnz pop sub mov xlat mov jno je sbb cmp insb sti mov xchg rclb adc imul ret dec jo imul icebp sub xchg insl int3 insb inc mov sbbb addb movsb add or jbe scas lods or mov imul sub push sub add out mov mov xor or mov sub jg xchg add lcall cmpsb pop mov or mov add adc cmp push cmpsl dec mov pop in js test adc scas and movsb (bad) pop pushf xchg das fs test data16 popf pop (bad) jno dec push adc mov mov sub rcrl pop inc inc test call or pop jne mov fldt loopne jp sub hlt sbb andl sbb popf pop pop dec push push xchg adc in xor cmp pop sub or adc sbb mov adc into test push (bad) mov aad xor cs repz pop sti in lock or movsl out cmpsb dec cmp mov add pop in or test (bad) notl sbb ljmp out jne mov mov out fisttpll mov and jnp pop cwtl stos xor mov lds dec push in mov icebp addr16 add xchg mov (bad) roll push pop (bad) jl jnp mov xchg ffree jno inc push mov test ss sahf stc out jne cmc jg ds lods add dec mov inc adc pop add inc mov inc adc adc cmpsl enter pop mov fprem1 cmpsl lds add jns in aam add pusha test or in add hlt add test or enter pop lock mov out stos ret pop out xchg cmp hlt int add (bad) fstpt cmc pop add cmpsl inc or jmp mov push into jnp in es push pop repz (bad) fs cmpsl and lods mov cmp pop xchg jae xchg divb cltd repnz nop push sub ja and dec in nop fldenv mov ljmp pop xchg jbe sub dec imul aaa ja jae pop addl mov mov sub sti imul pop iret xor insl mov pop push xchg sub mov push loopne fs lods out gs jecxz imul push mov insb jmp add mov xor pop cmp hlt dec adc scas fsts mov test out jns clc fisubrl je out pop imul jmp pop nop pushf ret ss jp mov je cmp clc jae cmp push in xor rclb sub pop push popf mov sarb cli inc arpl jb aas mov es jne dec imul add and aaa mov mov dec cmp xor pop push sahf mov sbb shrb jb dec adc rol mov xor mov test test mov (bad) jle fucom lds rorb pop mov das iret insl insb out int3 jle sar xor iret outsl out adc jmp inc push inc pop aaa les lods (bad) push scas sbb rcr pushf push lcall or cmp jmp xchg popf mov data16 adc sub xor pop jo sbb stos aaa mov jmp xor fsubrl mov je sub push inc pusha adc nop repz xor mov or nop je out mov (bad) fs jp and aam dec xor sub rcr lock jnp repz mov stc xlat mov mov xchg stc test popa in loop js popf sbb scas inc orl cld push sub sbb fdivs rol rorb pop std inc movsb sti adc rorb cmp sarb pop cltd shr fsubr pop stos push push sbb push mov test in push sub out movsb cmpsb nop fimull cltd jecxz fwait gs cmpsl add xchg mov sub add push dec loopne negb pop add inc ret and dec cmp lcall mov xor mov mov xchg ficom add and and push lods adc cli lret mov popfw inc sub mov inc rol outsb mov pop ret js inc cmp out inc and (bad) sbb sub call fwait jo cmc xchg and (bad) jne cmc movsl adc sbb and aam sub add stos push in loope jns inc add push lahf out repnz rcrb xchg aad lods sbb or cmc imul mov mov (bad) and addr16 xor pop adc into cmp lods test cmp sbb adc test xchg (bad) repnz (bad) or ret pusha in pop push xor flds ret xor mov js add inc xor lods mov mov or das arpl stc popa xor cmp out mov into xchg fnsave dec fisttpll (bad) add imul loop test inc rorl jl dec icebp int sbb cmpsl push jo xor in jo fwait (bad) mov or inc push xor xor stos cltd iret jbe push leave xchg or inc xor sbb sarb pop sbb xorb adc xor inc sbb adc das lods imul fisub enter push pop popa fnsave lods dec fcomip xor jl xor sbb xor test sahf rcrb or incb stc fmull pop jg rcrb xchg shr pop and add out lods test outsb xchg mov cmp push sub push stos push mov je dec adc pop repnz xor inc sbb pop aad push sbb or or scas xchg in lock aas inc sarb ja pop int3 add mov scas in mov xor adcl je mov dec jbe lods insb mov and pop sub movsl je cmpsb pop dec shlb mov push or mov mull test adc or cli sbb jnp in lsl or (bad) data16 lds pop test mov push mov arpl (bad) ss or aam jmp repz ret in xor xor sbb mov xchg cmpsb cmc popa inc daa scas imul psubsb pop sub scas jb in out fs lahf sbb pop in decl int push movsb xor cmpsb loop pop fstpt jo xor or outsl pop mov mov adc sub dec push lcall mov and test push testb dec and mov icebp inc cmpsl rorl inc data16 jg jo out imul (bad) jae cwtl in jp or inc bound cmpsl add scas dec es mov pop mov push sbb cmpsl sub jo ror int jge (bad) ja xchg into cwtl and cmpsl or and adcl push lea scas lods lds notb stos sub clc sbb jne mov pop daa mov push cmp pop scas shrb jg mov cmc (bad) mov cld int3 pop test and or adc fldenv dec fsubs sbb jge xchg je lcall sti jb sbb mov jo mov call cmp jo pop or lods hlt insb js or push adc enter scas push movsl rolb adc js loope sbb (bad) aam mov xchg std (bad) aad dec mov add mov cmp mov sbb sbb sarl (bad) push cmp dec test mov lcall aam mov cltd jae jmp xorl dec sub shlb mov inc xchg push pop ret flds cmpsb dec xor sub imul and adc lret xor add xor mov bswap add jae cwtl std cmpsb mov sbb sbb clc (bad) in mov aam ja push dec mov test jmp cmpsb cmp mov ljmp (bad) xchg fistpl ret or add stos pop rclb jl fadds cmp or into sbb movsb pusha data16 ret (bad) jb ret data16 ljmp (bad) outsl adc xchg mov mov fistpl cli (bad) mov xlat cmp mov pusha and (bad) arpl lcall jp cli adc loopne in sbb push jg lods imull jae inc movsl daa dec cld les add push mov in push adc add mov mov fnstsw mov jmp push (bad) dec stc les add mull stc cwtl sub mov ret jo divl and stc ret jne lret adc clc fimul push fnstsw lock movsb mov mov fnstsw or sbb mov xor loope jge dec hlt fidivrl xor test push js fsts in jle aad movb add add jge mov aam and lcall pop fstpl push les mov clc pop gs sbb aam jne or stos inc aam cmpsl outsb stc jo mov sbb imul mov (bad) fidivrl es jne jg (bad) xor dec push sbb mov cmp ficom xor out addr16 sbb in (bad) fisubl repz call fnstcw (bad) stos pop addr16 xor mov inc faddl lahf xor fdivr sbb sub jecxz jge jae push (bad) cmp cmpb shrb fsubl es stc jb and sbb test mov push jmp sti test push xor (bad) and out pop lods test negl mov or adc lcall adc or push sbb push dec jp jg jb xor sbb aam ret pop fmuls rclb push jo,pt or add lahf sbb push icebp adc rcrl xor sahf xor push add lods lret pop (bad) sbb add fwait mov stos cmpsl fwait push sbb mov or mov and cwtl lret and jmp sbb negl call aaa dec mov idivb dec or (bad) out jo mov (bad) jb mov cmp or fdivl lcall or shrl insb mov gs mov out mov fstpt stc nop cmc pop fdiv aam jns callw roll leave pop rcr push sub xchg stc mov scas xchg dec leave or mov fsubrp jb aaa dec pop imul xor dec jnp or mov cmpsb cmovb mov inc sti adc outsl dec pop or bound stos or xor ret or adc (bad) aam imul cwtl movsb popa imul dec sub inc pop dec push rcrb inc mov xchg fildll pop push dec jne mov clc cmp and jmp and jns (bad) or jae ljmp xchg mov push repz test mov xchg out adc dec nop mov jae (bad) cmp test flds test xchg sub mul ja jle add mov push push inc xchg (bad) xor cld xchg fs (bad) nop or jne scas fnop aam aam xchg mov imul or fisubrl push and hlt loopne aad jecxz scas pushf scas xchg mov cltd dec stc cmpsl jb in push dec mov push jge mov icebp mov jl stos mov jl xchg addr16 sub fwait pop jp dec test (bad) pop mov (bad) pop addb or fyl2x dec arpl cmpsb jle and fldt mov xchg lret loope and stos mov out adc (bad) hlt iret cmpsb dec jne cmp lods lahf (bad) insl mov push sbb movsb pop fcomps in add std sub popa sub push push test mov sub fcomip inc or jp hlt (bad) mov sub lret outsl xor mov mov (bad) mov push dec sub lods sub in xchg or cmp popa xor rclb mov repnz (bad) mov sbb xchg lcall loope mov mov sub or mov fdivrl ja mov xchg incl add push popl xor (bad) mov sbb cltd cli inc scas cmp mov mov jl mov mov sbb arpl rcl imul or es pusha pusha pop mov and jb jnp cli rorl adc shll inc sbb pop xchg test repnz out mulb lods in mov and cmpsl ja fcomps or (bad) jecxz push jp xchg mov ds add adc outsl adc cld pusha mov test enter adc in imul add xchg ja scas mov push dec mov outsl mov push jp or push jbe lret sbb inc ds xchg jecxz xlat mov mov add hlt fstpt bound mov sbb mov add lea cltd sub ret pushf cmc test es aam adc cmpsl cmc inc mov out cmp movsb sbb lods sub aas (bad) xor insl dec or mull push sub mov and jo jle fidivl mov jg into xorl cmp test (bad) cmpsl sbb pop jnp jno xchg jae (bad) jmp sub loope jnp negb cmc cmp test cltd xchg pusha pop pop out inc imul notl cmc in jo mov andb add enter pop xchg addr16 dec iret pop aam xor pushf out sbb shr xor pop je or pop cmc shll add push add pop scas js je (bad) bound rorl xor adc or push add push dec ret enter int add rorb mov cmpsl lock mov jns or sub pop cltd xchg data16 dec jge inc movsl jnp sbb mov jne sub pusha lea pushf (bad) lret and mov push jno mov jno outsb cmp cmp sti push insb xchg add pop mov ret jecxz and mov adc and push mov es stos add into jae dec negb jb bound mov notb aaa dec pop orps and pushf iret pop out push jno lret or pop clc push push push lock add push push jns jl mov nop cld loope jp scas dec inc jnp repz js arpl call mov cmc out jp mov bound or add inc or das int3 add les shll add cltd sahf cmc adc xchg cmpsl adc sub loop aas jl rorl clc leave fs push push aad orl push adc mov add in sarb loopne dec push ficomp fisubr mov lea mov dec test add leave in shll and faddl into mov das pop add sbb scas fdivp in setl sub into pop pop jb cmc ficompl push pop pop lcall push pop cmp xor xor mov adc sahf or sbb sbb jno or cltd out pop clc lret es mov arpl pusha fildll in fiaddl fcompl add outsl jnp ja shll xor push adc arpl mov adc addr16 or inc rcr mov in dec mov int cmp mov add jae mov (bad) jne sti pop mov popa mov stos aam dec sbb add shll loopne in in xlat ret cli fnop fucomip adc je lock sarb jl das call push stc jle add or xor jns jbe pop and popf popa pop mov xor js ss popa (bad) jne cmp and outsb (bad) xor ret scas push adc pushf scas adc jl cld mov out rep dec and pop push outsb jmp (bad) iret daa fistl jns push repnz rorl mov ss inc scas pop stc inc test xor add adc dec pusha mov add pop sbb enter pop (bad) or or (bad) mov popa (bad) push pop pop int3 gs or jg faddl mov xor (bad) cmc test psubb in push pop xchg dec aad sar mov sub mov inc xchg aas int gs mov mov dec xchg bound xchg sub inc sahf ljmp fadd inc mov test mov jbe sbb push mov repz inc (bad) jl fildll enter adc jb push lea clc in clc add adc mov outsb fidivr int popf leave cmp jns mov inc xor in inc xor mov aaa inc xchg push in xor jne and pop rolb ret cmpsl dec sbbl gs ss outsb je inc ja rcll cmc fistl jmp push xchg sbb cmpsb inc xchg bound leave popa push mov jge and push sbb rolb nop push rclb mov jp and (bad) add (bad) scas jae dec adc (bad) pop fidivrl xchg inc les (bad) cmp ss inc or mov mov ss mov xchg shlb cld (bad) (bad) dec stos inc jbe divb daa ret and adc mov add mov ljmp xchg mov popf aas int3 cwtl into inc call pop mov lods xor add cli pusha dec mov cmp sbb jmp hlt movsbl fiaddl loope faddl cmp stos xchg or jbe or (bad) adc repnz and and add ficom or xchg lret dec fnstenv sbb popa imul (bad) jne ljmp sti jae mov mov pop add divl adc fsubl hlt hlt daa pop push xchg jl dec cmc test jb leave adc mov fildl pop cs stos incb dec jno jae mov insl cld jg mov sbb das xchg jecxz sbbl xor jge xor mov int3 fwait je and adc bnd jmp ret bound pop jg ret dec add lcall dec mull negl (bad) pop rcr shlb imul cmp js adc cmpsb loope or xchg andb jmp push pop fist pop lock clc pop mov mov popf out pop pop out pop or and inc or xchg push push push jno lcall sti add xor add cmpsl in pushf mov sbb stos xor add fwait popf and mov ret lret in or inc add jb addr16 ret stos sub imul fwait sbb add fs jge ja jecxz jp pusha clc sbb outsb sub out lahf (bad) shrl mov in mov out inc add les lods push cs test adc dec lahf xchg fsubl mov add jno fstpl or popf test (bad) flds dec aaa jmp test dec leave adc adc sub xchg adc jl jo sahf push xchg arpl loopne sub ss mov inc stos mov cld lds push (bad) sub (bad) pop notl xchg in int3 std jo rcl push lea fs sti stc bound (bad) pop stos hlt push fnstcw fnstenv and xchg fwait jae pop jae imul imul cld push ret push and pop mov sbb in test add test stos xor xor (bad) mulb cmc push (bad) idivl (bad) mov push dec mov int jns pushf sahf daa and (bad) lret mov movsl inc adc dec mov push mov cmp cmp (bad) insl (bad) das iret arpl adc sbb sti cmp inc jmp out push in daa mov and mov scas fsubrs sub sbb lock push (bad) aaa sub jno sub outsb cmpsb mov sbb pop cwtl (bad) jl push cwtl push mov lahf nop jmp mov mov rolb jb fsts adc ljmp xor xlat push mov aas ficompl enter (bad) push roll shrb push adc pop push adc pop fidiv xor mov push jae pop hlt insl and iret pop pop add push sbb inc ja,pt in push mov push xchg adc push rorl icebp sbbl sbb mov jl pop (bad) aam test adc xchg pop enter loope dec jnp and push push jnp or inc add inc mov sbbl nop and dec into mov rorl lret ret jl or dec sub push jge dec push inc daa (bad) daa mov testb int3 pop jo in inc jne movsb dec ja lods and cmc jp hlt movsl mov repz stos sub ljmp insb dec leave cmc int mov and sub dec in in xorb scas (bad) cmp leave cmpsb loope inc sbb or in rcll push mov sub push ficomp (bad) mov lret in (bad) out sbb movsb xor popa mov repnz or push inc push push loop cmp sahf ss inc pop jae mov push adc orb dec cmovle jmp ja jnp push ficom or jle or xor adc hlt out insl adc push int3 sub xor adc pop dec xchg jae xor loopne fs sbb pusha cmp inc pop stos out and int3 lret cmc or cmpsl cmp cmovae or mov cmp push sub cmpsl or ja cmp xor jle push push dec mov movl loopne loopne and pop call sbb cmpsl pop jp jne or inc dec (bad) out stos mov mov mov aad sbb jp fdivr das sahf jl or mov mov gs movsl sbb mov dec jns fidiv bound loopne dec or add jae in arpl add mov xor adc (bad) sub fisubrl mov mov and jnp sti dec flds or sub gs movsl in push insl adc in out addr16 dec jo jecxz dec inc enter dec mov cltd push cli sbb dec (bad) xor test fistpll inc (bad) sbb insb popl std js sub fildll pop xor (bad) aad shrb minps std xor push cwtl cmp ds pop call adc (bad) icebp orl lds or sub divb inc test fldcw or stos sarb ds add into xchg push mov adcb sub jecxz xchg push data16 dec in mov mov push push jae pop daa jmp outsb pop fstps lds movb not lods adc jbe mov sbb push into mov rcr fsubl add xchg (bad) mov imul xor or insl pop rclb in mov push clc out push sahf mov or push xor or inc aad lret cmpsb dec inc xlat cmpsl jne sbb and jae inc fimull and stos inc (bad) adc cmp pop push xchg leave aas fwait imul out (bad) jecxz and insl stc (bad) mov arpl cmp cmpsb js mov mov int3 int daa shr call dec sub push jle ljmp in (bad) or mov js cli call cltd add mov dec repnz jp mov fdivr stos push test inc cltd (bad) mov cmp out or xor xor adc mov cli sarl bound lock das testl adc push sub xor inc lds cwtl add arpl pushf mov pop jmp sbb into jl dec inc mov rcrb popf push aad test jge jae lods stc clc (bad) popf loopne scas jg std xchg add push xchg outsb hlt xorl lret mov cmp (bad) add in mov mov cmp xor sbb inc clc adc jp fs inc dec mov nop pop push jns loope cwtl stc arpl roll push xchg xchg inc push test fidivr mov adc lret dec ret jns popf push je inc ja and mov adc jp roll in gs dec out mov mov call jl push inc leave push movl mov push push push enter pop mov dec pop ret cld roll (bad) or jg dec test pop imul jo ja sbb and ja rcrl dec xor fldt pop daa jns jae call in pop dec fldenv jmp in jns mov mov inc rep mov mov pop out mov cmp mov fisub jecxz imul xchg imul ficom out enter ds jne popf mov mov scas and orl jo daa pop xor mov and sbb ja movsb les mov push push mov dec movsb fdivrl mov dec dec (bad) cmpsb mov mov push sub mov or ljmp jecxz (bad) xor cmp mov ljmp dec mov push xchg prefetcht1 and jg lret mov das xorl xorb movl (bad) fwait sub jecxz lret icebp movsb out fldl push lds jg sbb test push ret ror fnstcw sbb (bad) or jp faddp adc popa mov jecxz fcmovnb hlt leave sub scas mov xchg (bad) je std in les sbb test jg (bad) bnd jne stos jne enter lret repz test pop dec shl out push push sahf (bad) jno popa dec jge (bad) and pop fucomp test daa out inc (bad) and jle ss inc pop push inc je in inc mov jecxz or mov js mov stos dec sub inc fnstenv jns test les shl pop pusha fldcw push lods mov sbb fs jb inc cmpb or in xor int xchg sbb adc daa push or (bad) cltd dec daa js leave ret jno out rolb lret fcomp fdivrp jb and and lock sbb sbb insb imul iret cmp ret inc (bad) repz xor nop jb je pop clc jge mov clc push cmc push mov enter gs lahf loop leave mov add sub jp call inc push xchg xor mov and sub xor es jmp inc pop sbb xchg popa shrl mov arpl js jns (bad) icebp fisubl test and fcmove pop mov fadd push in xchg add jmp nop jecxz adc cmc jnp repnz ljmp cmc popa push inc loopne jp adc inc fstp pop mov (bad) pop push push push mov das jne xchg sub pop lahf mov mov es pop js aad pop mov adc nop xchg dec pop les adc std pushl cli mov cmp testl js mov cmp sbb fdivl cmp loope jecxz mov pop pushf inc lea add insb mov push sub push mov mov mov sbb jns ficom test sbb (bad) jb mov aam imul inc (bad) call push lock aam dec rcrb xlat mov sbb xor dec add mov push jecxz sbb cmp push sub cmp push mov add jae cmp sahf or and or fmull or rcll mov dec shrb pop popf sbb jo data16 aad test dec popa stos or pop test fsubrl dec jo arpl lea jo push out xchg insb cvtps2pi mov xor mov shlb leave inc xlat add jge or cmp and fldl2e sub cltd push cmc (bad) lret out je lcall jo scas mov inc push movsb cli (bad) mov mov sarb sbb push pusha (bad) sarb ja rcl sub jecxz lock mov jmp sbb ljmp pushf cmpsb mov jmp push xchg stos lcall mov sub add scas jg add cwtl cmpxchg xlat mov jmp test cmp push inc mov dec (bad) repz sub repz fldcw dec jecxz imull mov inc add pop sub mov sbbb rcrl jo cmp cmpsl aad in (bad) and and mov jnp rcl sbb or cmp jo inc xor loopne jnp test xchg mov icebp push clc (bad) jl mov cmp and xor (bad) pop loope mov ljmp mov adc pop push jb,pt std bound cmpsl sbb js int inc je pop pop (bad) jae outsl aaa mov pop in mov test stos pop cmp add jp mov icebp popa test aas jo sub pop pusha push call push xchg fnop addl mov mov jl jle adc lret pop cld add mov and mov mov loope inc mov or xchg and inc jp imul loop mov cli dec mov dec arpl in rcll cmp lods clc std daa ljmp sbb lods cmc fldt xlat or dec divb out mov add push cmp test lods repnz cltd push scas push pop inc ja sahf mov xchg roll mov mov cmpsb jecxz mov aam sbb arpl fiadd sub pop fxch (bad) lahf rcrl sti sbb jge inc cmpsl (bad) aad push das ret mov jae jne push and idivl and mov into mull push or lret dec adc mov xchg imul push cs out and jne or push and stc insb dec push inc ljmp dec addr16 das add out das jmp jecxz inc call (bad) (bad) mov inc pop call push lahf or je and repnz (bad) aam sub call jbe xchg lods pushl inc rclb mov xchg (bad) enter mov dec arpl mov cmp popa mov add jbe xchg xchg enter aad xor decl push mov adc loopne fdivs pop push push imul pop stos pop sarb jp cltd fdivl add sbb shrb (bad) adc lea xlat xlat push xchg les push cltd mov mov push push cmp sub out or sti add xchg (bad) jae pop push arpl (bad) (bad) cltd nop jl out mov mov sbb scas jmp jle pop aam loopne pop (bad) rclb or inc ja pushf cli fildll cmp push mov sbbl daa add mov bound rorl es jbe mov push pop fs cmp xchg pop mov jb adc in push push (bad) divb clc stc lahf dec dec mov sti mov mov inc add fidiv mov andl dec lea sbb sub imulb cmp (bad) pop mov or daa sub mov cmp cmpsb in rclb sarb jns stc xchg mov mov lcall lcall push mov cmc scas notl fiaddl cld push data16 or mov fidivr inc fldt inc ds lds into inc sbb fistp inc js mov pop dec or inc sahf fidivrl and sub or and pop mov shlb jp fdivrs fnstcw and adc inc into aam jo sbb push ficompl (bad) inc sti (bad) mov stc pop jmp push xor in mov jns neg ljmp push and add addr16 mov dec enterw (bad) push aaa sbb hlt es adc jl ss lcall or (bad) fnsave mov pop (bad) fdivl cli (bad) imul rcl jle loop dec mov call jmp push pop cs lret aad push pusha (bad) enter out mov into jbe push sub jg sti js call in imul roll lcall push push into jo cmp (bad) (bad) push cltd pop xor mov enter out mov add sub lods jge mov cmpb out sub sbb push (bad) rclb xchg call cs xchg lret cmpsb in clc add add mov or mov loop lret (bad) cli sub aas xor mov adc popa and into jnp rcll inc js dec push adc pop mov mov xchg jg xchg mov outsl or jnp ret xchg jp inc xor fistpll (bad) cmp test jb out sbb (bad) cmp sub stos cmpsb je push sbb jns xchg mov jp mov sub dec jl inc (bad) (bad) das mov sbb or dec in xor and mov mov mov imul hlt aam (bad) push repz decl mov xchg xor gs scas aas dec push dec repz sti pop xor rcrb lock mov push test and jge mov sbb sbb or clc mov lods imul inc adc cmpsl jo test and aad cmp (bad) mov adc jo outsl mov sub mov adc sbb addr16 loop jecxz lock inc icebp mov in sub add add nop jmp ret lcall dec leave imul lret jns out mov sbb insb dec inc push int3 mov icebp bound inc ret jle mov popf lcall dec push icebp push and lods or in fprem mov ret rcl jnp jae in cmc in sub mov xchg xchg dec pop pop cmpsb xchg cmp cmpsb imul mov mov aas pusha bndstx push pop les cli jae sahf fidivrl adcl mov jle add loop jle cltd dec inc fisubr jbe,pn lret subl ljmp pop add mov jb (bad) in ds cli insb inc movsb sbb fcmovbe cli mov mov aam (bad) hlt popf pop mov fisttpll xchg in jns push xchg leave cmc jne dec sub jnp fdivp (bad) cs dec int xchg xor arpl or dec mov repz cmpb mov mov mov js push incb pop lock pop sar cld fcomps inc clc inc sti (bad) fisub call sub pop dec lock fstpt add repnz (bad) ret mov ds test std add push jae mov add int3 or ja (bad) repz mov outsb mov cmp mov sbb aad outsb dec jnp imul adc sarl js leave in mov mov jbe je dec into mov or popa stos jmp mov lret in (bad) or fwait lret add sbb or add call sbb in cltd and mov scas stc inc aas into test ss lret call fstl (bad) sarb dec mov rorl dec mov mov add into ja rcl inc fnsave outsb rcll pop jnp mov mov push adc test ljmp in sbb mov jmp loop repnz ljmp pop sbb (bad) push out imul cmpsl andl lcall lods std imul fisubl or add add sub push repnz pop cmpsb enter add rorb mov or jne jo,pn xchg and stos sahf mov sbb (bad) mov (bad) sbb stos bound rorl inc adc jne add inc cltd pop out mov loopne push or cltd es les ret pop xchg pop sar es stc dec rcr ss mov fisub inc fdivr and mov mov (bad) jb out iret sub in push mov and sbb in xchg sbb push or adc cmpsl xor (bad) mov jge pop out enter or fcomps stos pushf mov sub push cmp xchg adc push faddl push jge push cmp push jge fcos or push xchg mov stos fidivl dec xchg pop dec pop mov loope lds sbb inc mov pop aad in pop xor es or lcall jns ret add hlt or mov push dec push sub int3 sub out fcmovu je xor rcrl jmp fnstsw push mov add arpl and lret stos jmp bound (bad) add sub mov orb scas imul nop lods mov bound pop das loopne adc movsb xor pop cmp mov push insl es mov stos cmp sbb test in xchg sbb push inc lret or mov add or fisttpl mov mov sub lds in lods adc pop enter mov mov mov sarb es test mov push mov add pop cmpsb mull mov add flds sbb sahf jl mov popf push add popa mov ljmp dec pop sub and jae cwtl inc movsb xchg jnp nop loop inc cltd add jbe iret scas pop iret mov cmpsb inc adc or pop arpl clc xor stos mov or leave ds les lock shrb cld pop adc divb xchg in cmpsl fstl sbb cmp push add xchg add mov lds xor clc push stos out imul or mov lock inc test cmpsb ja jo ret jnp sbb addl jo or cmp daa adcl or add cmp popf xor ss lock sarl out jp sub std xor jns inc mov leave pop movsl insl and inc mov daa and outsl (bad) jp jmp mov jne mov lahf jl push in addl enter stc test out xor gs je pop decl lods mov inc roll push in push das shll ret enter lret lret scas out sbb pop inc sbbl sub ds push sar mov jbe enter (bad) aad mov cmpsb stos inc aam jne pop into sbb ja insl fmull inc lock scas push (bad) stc fcompl mov sbb clc stos aas hlt inc mov mov aad ret hlt mov push add test jae arpl adcl mov and or stos insb imul sbb pop jl sbb imul push push xchg xchg sbb jnp add loopne fsubrs sbb gs pop repz mov mov jo dec into sub mov xchg fs dec adc test fstl adc rolb fnstsw jne lret jne jae fucom ret inc mov sbb cmp and mov cmp sub xor or jecxz jp xor mov and pop xchg popf inc in stos fsubrl popa sbb sbb xchg scas jns or ret fdivs or in adcb adc mov mov cmp xchg ret es sbb (bad) js ss lds dec out inc sbb dec scas cmp push pop push fst ss call jl mov fisttp jmp inc and je mov in adc sahf add ret arpl cmp mov sbb jle js pop dec les dec or sub incl mov insl ja cld xchg sub (bad) sub inc fsubrl fidivl xchg xor sbb mov aad xor outsb xor ss nop rcrl int3 xor loopne inc in adc mov (bad) outsl push in add add push call adc je ss (bad) arpl lock (bad) sbb and pop fstpl push dec pop fstpl push push rorl inc pop cs sub mov jb hlt push sbb ficoml cwtl mov call js int3 dec jp pop jge jge dec inc jne cli (bad) inc iret xor cli add lahf jb fldl aad outsb or and xor in mov jae jp iret dec push es in rolb fwait sub lock out insb adc enter (bad) loopne xchg rorl fdiv push fildll mov repnz scas mov int sub cli sbb push in jecxz,pt sub test in xor jo in pop xchg jp je enter fdivs jo test adc fst inc xor inc lock cs aad add (bad) inc mov mov jp add add lcall jo jb clc or jmp xchg push je out into sub push lss std adc fucomip insl (bad) pop loop sarb mov or bound jle mov imul xlat pop xor inc cmpsl adc sbb testb mov aam into inc or ret xor loopne iret add mov push stos shrb or dec cmp (bad) and adc out loop inc sub mov inc fmul mov add iret orb sbb push and test inc scas sub mov icebp lcall lock sbb pusha xchg push push in pop fldl2e mov jae mul jae loop bound lcall (bad) std ljmp daa loopne cli dec sub jmp xorb leave dec jns pop int (bad) or adc (bad) lods rclb and test ljmp mov movsb pop mov rcrb movsb xor cwtl sbb or fildl roll pushf fidivrl call mov sbb lcall leave int3 mov test enter push sub sti jl sbb push sub xor stc cwtl subl incl xchg loope in adc dec cwtl call addr16 popf shlb add js out ret aam imul jp into (bad) sub movsb mov sbb mov repnz cwtl mov out das inc push inc and fisttpll repnz andl outsb mov gs (bad) loopne and popf lds sub adcl jnp cwtl jo mov mov stc out sub scas mov pusha pop jp mov lret jne inc lahf fcoms sbb rcl sbb mov ret jo (bad) imull cmp clc popa adc jo pmaxsw fidivl shl mov out (bad) jp out pop jge rcll xor dec mov loopne cmc inc jo aam iret dec out fistl fcomps lahf insl sub stos fdivr jns sbb mov inc xor adc js dec mov xchg push ret loopne inc cmc jo lds jo mov fadd push dec cmp leave stos (bad) xor cmp jnp push cmp jae jecxz mov xchg es hlt sub rorl jae sar jo repz movsl cmp jge xor or pop sbb ds idivl pop dec lds jl das jge (bad) sub push adc mov data16 repz cmp std ds mov es adc iret mov push mov push inc mov ret dec int push xor pop mov sub arpl sub push inc test outsl rcr addr16 inc inc sbb sbb shl stc push js pop cmp ret mov pusha inc out inc fstps pop in stc add add push mov (bad) int3 fidivr sbb lea jge enter mov mov sub and cmp or mov movsb jno je std aad sub pushf mov jge jp mov loop push xchg (bad) cmc movsb loop push popa mov test lret lock mov stc mov mov sbb push push adc fdivrl push adc add jo add jge idivl leave dec in xchg sbb mov call cmp push dec mov adc adc in loop inc mov sbb std push leave sub pop ljmp inc pop or sbb pop fisubl or push mov scas ficoml pop stos or dec and fwait inc mov mov push xchg inc insl jmp dec or push xchg data16 pop jno out cmpl stos loope cs pop fildl inc jg fdivrs pop or aad enter adc pop movsb mov test jno adc rol lds add je xchg and push push cmp cmpsb add test andb scas cltd xchg mov stos add mov sub jl mov sti (bad) enter scas fldl lds imul mov sub test lods fldt cmpsb js fcoms dec add jne pop cwtl cmp push inc insb sub push mov mov addr16 mov repnz inc (bad) outsl push into mov out fcompl mov push xchg xchg adc cmpl jge and cmp in dec mov sub sbb sti ret xchg loopne pop dec add hlt (bad) fstl xor or xchg xchg sub mov out mov cltd mov lahf xlat add pop aam jno add or test popf push lret push sub mov mov add hlt out ss adc leave lods jno jmp xor mov stc sbb (bad) xor ret push dec dec rcll mov outsb mov dec xchg lea jecxz stos les mov je push lcall push dec sub mov out dec loope and scas adc vmovdqu les leave (bad) mov adc (bad) fnstsw push std sub add lods movsl call adc test jo daa push jno and and sbb js icebp jmp mov (bad) aas or adc stos sbb pop add dec roll das xor (bad) and orl mov push mov stos mov and mov aas aad dec adc lret mov adc mov daa inc mov popf mov out xor xor xchg mov rorb mov xor mov mov add push lahf add (bad) xor pop sub or cs sub push sarl jno dec or dec jo mov jmp rolb cs and int3 cld mov sbb in scas arpl mov pop fadds jg mov jecxz jp iret or push jne or jns imul xor roll stos int3 fwait jb mov lret ljmp sbb sahf stc dec add jle mov rcr addr16 push les mov jne bound xchg mov mov push pop stos jo sbb dec add lock jno scas jno inc test mov out loope scas mov and or jnp outsl push pop mov (bad) push and ret xor jo pop into add add test mov push mov or xchg (bad) pop jle inc sbb ljmp sbb stc mov jbe xor call cmpsb insl inc jno jb cmp cld insl clc loop bound test add ja sbb adc lock divb lret (bad) imul add cmp test dec push adc aam vmwrite lret jle jnp add out mov mov sub int3 add add jle loope cmp or mov push fwait adc push arpl std jns rcrl sbb cmp or loop push (bad) adc shrb (bad) scas xchg ficoml mov out mov fsts fistpl imul ljmp jmp fs bound out loop incb xor fisttpl jns sarl bound scas in fsts push (bad) cmc jg and outsb insb adc push outsl dec leave sbb out ret rolb faddl sbb adc xchg lock mov out pop xchg push inc (bad) mov clc pop outsb jecxz das movsl adc mov outsl fwait push call dec or aas test mov push push stc loope mov repnz or fwait (bad) stos int inc mov test rorl ret shrb stos mov jae and cmpsl stos popa (bad) std cmp sti pop push push and mov push dec sbb jb fcomps sarl cmpsl addr16 inc sub push in inc fstpt sti add loope cmp in dec cld and xor xor repz scas cli pop std jns ds hlt mov xchg mov dec js sar mov mov addr16 dec fistpl hlt xchg pop or mov faddl test shlb and lcall cvtps2pi xchg add cld in data16 aas dec call jbe sbb add popa add aam mov jne mov idiv add std push dec cmp neg out push les mov sti (bad) inc push stos cmp mov add dec inc lock push loop dec adc jne daa insl or pop insb stos mov pushf nop sbb push movsb adc lea ss mov jo movsb ss cmpsl fdiv add push loope aad stc jle or stc (bad) pop mov xchg jb add fwait in stos mov xchg roll add xor movsb jp and push dec adc rcr mov and xchg xchg jne pop or in shrb rcr dec xor adc (bad) jle fisttp mov imul add popf inc adc cmp jae mov insb sar cmpsl shll fndisi(8087 mov jle aad xchg outsl aad mov or mov (bad) jbe xchg jbe fcoml or jo pop jbe sbb cmp ds inc mov fwait sahf rorl inc sbb in enter pop adc mov outsb (bad) dec add rcll jno frstor (bad) cmp push cmpsl pop pop mov mov mov sbb xor out sbb inc push xor cwtl nop (bad) leave xchg sub pop sbb inc (bad) jnp cwtl jo sarl negb cmp sub aam mov jecxz (bad) out ret inc aaa sbb in push cmp inc gs and pop rcl xor repz mov lahf sbb inc jno mov mov xchg sbb je cltd xlat fcom shll aam ja lods (bad) nop cli loopne pushf cld pop push sub imul pop jg cs inc mov (bad) xor call sbb xlat fld sbb in fcompl dec push inc stos (bad) (bad) mov mov enter mov icebp stos pop push lds sub ret pop inc fimul add jo imul xor mov jbe in fs cmp push loope data16 lds movsb cli in (bad) sahf jle jo and sbbl xor mov cmp jp rcrb push xor pop mov iret arpl pop jecxz mov lcall push js inc dec sub cwtl jno gs add fxch xor mov push mov in xor stos xchg mov lcall and and int3 aas aad adc fwait jbe jne xchg pop inc jno (bad) fiadd fbstp cld mov addr16 push hlt inc (bad) pop std xchg fisubr fbstp pop outsl add push jb add dec push clc pop sbb mov ret ljmp testb jge aad mull mov ljmp fdivs rcll leave pop rcrl push adc pop addr16 (bad) push xchg mov cmp insl jae sarl rcrl lcall push std (bad) xor cmc addr16 ds dec and and cmp clc mov dec inc les sbb xor mov stos mov lods cmpsl mov fwait dec cmpb fcmovb sbb and fisubr xlat rorb rorl call xchg (bad) and cmp push dec pop push cld sbb jbe subl fsubl push add fisttpll mov mov add scas pop or or add inc aaa sub mov es faddl arpl jbe and mov inc add call inc (bad) cli dec into inc insb pop jbe fstpl pop pop sbb mov ret jmp mov or mov (bad) mov mov xchg cmc mov xchg mov sub xor aad js call out lret out imul push inc push clc sbb arpl stos repz dec in pop or sbb jo stos inc std test popf mov mov cs xor push jg pop dec push jne sahf xlat xor mov mov or lcall bound sbb test js push fwait cmp and (bad) pop lods je dec cmp sub cmp push add xor enter mov (bad) pop pop jl lods in sbb push jns fs xchg inc jg jecxz mov into add es sub inc lret je mov out mov xor ds scas mov sbb adc arpl ja enter dec xlat repnz jecxz sbb mov sbb cmp sbb jecxz xor mov mov stos rcrl (bad) jg add stos pop mov pop arpl mov inc (bad) lods aad ja xchg inc sub mov inc push or mov lock rclb push adc (bad) or sub shrl sub cltd cmp (bad) in lock fs pop fsubrs cmp mov sub lods pop movsl lcall cmpsl mov (bad) pop out in nop xchg xchg (bad) sarl push popa gs adc pop data16 dec ja cli add (bad) mov mov xchg rolb in cvtdq2ps fisubrl addr16 mov sbb sbb orb in mov xor jge movsb jmp xor push out bound jno in fcoml mov es (bad) (bad) hlt (bad) and jecxz add (bad) shrl sti sarl loope aas out push add sub dec jns fwait rolb sub gs sahf lods and jnp mov mov mov repz push inc add inc push mov and lock mov fmull cmc mov cld dec dec lock mov inc mov and pop mov mov ret cwtl leave inc in leave insb xor mov mov sbb int3 ficoml adc push push mov lret andl shrl pop pop mov add stos roll xor push inc or xlat ds mov or adc sub and and imul sub popf mov dec pop (bad) rclb fdivl pop xorl leave jnp lock xor sbb cmp (bad) addb dec mov int cmp daa jp or in call push mov mov push jp clc xor sahf andb test push fldcw pop inc adc pop arpl xchg inc loope sti aad xor out cmpsb or (bad) pusha pop stos rcr dec nop punpcklwd push inc fsub rorl sbb fildl bound mov in popf outsl or lods in es or jae push sub sbb (bad) sbb mov mov stos data16 bound fistpll into fist ret mov cmp inc leave into lcall adc and lods mov stos xor and sti in pusha xchg jecxz cmp push (bad) mov sbb out data16 push cmpsl rcll dec mov fwait popf fdivs sbb iret add notb pop mov sub mov mov les es fmuls pop add sub push inc (bad) mov push xchg add xlat cmp and stos push mov pusha dec sub cmp divl gs push cmp dec loope nop mov push enter cs das adc test dec jo jge add dec punpcklbw cmp jge nop outsl lds gs xchg sub inc add inc int3 test popaw (bad) loop aam push xchg jle push sbb push add cmc jp test lods or mov pop in imul pop sub mov mov jmp pop and loope test (bad) adc into sub movsl fwait add xchg pop xlat insb or or sti adc add sbb push pop pusha jae mov adc cmp (bad) cmp push sbb clc pop add mov ret cmp sahf out add movsb adc xchg aam adc add ds jnp mov xchg adc xchg pop push mov mov and test xlat (bad) hlt xchg mov je sbb sbb add inc fnstenv mov into sbb insb xchg loopne pusha sbb mov std inc adc js movsl imul rorl cs rcrl jg mov dec orl (bad) push inc out aad mov cs cmc xchg addr16 in sbb xchg push adc mov out push lret sbb test hlt mov jo push add mov mov push je les push sbb sbb and fistp inc jae cmp mov adc xor scas in ret jmp pusha or jns rcrw scas in adc mov adc mov sbb xchg mov fs sub pop insl cmp add push mov orb jle into pop bound push cmpsl or fimull unpcklps roll pop lret inc xlat xchg xchg loope push ds jb out sti add push sbb sub insl sbb adc movsb dec addl (bad) cwtl ss inc mov cmpsl call mov add movb in movsb lods out inc aaa js,pn repz (bad) sub in insb test or jnp outsl xchg inc mov leave mov movsb leave daa sbb sbb xchg jecxz repz xchg scas js push cmpsb xor or std or ficoml sbb repz sub xchg leave loop inc hlt testl ds lds ret push icebp hlt mov xchg (bad) fisub loopne push dec jg pop xor out inc mov push nop mov mov outsl jmp leave lea int imul dec lds sub sub mov loope out arpl mov imul dec xchg fs je push incb pop repz mov shl push jo lods ljmp dec dec jns adc out cmp jp out or icebp inc lods aad lock cmp lods jg rcll sub stc aad mov mov ss sbb (bad) mov sarl movsl (bad) jne adc bound jg,pt fwait and add lock push shlb mov aas adc dec sbb jge mov (bad) enter aas popa les pop (bad) into and shrb into mov mov (bad) push xchg in lret jne pop dec pop and push bound mov and je lea ljmp push xor pop or (bad) in leave jns sbb aad cli loope jns add inc dec movntq (bad) repz mov push add mov or lret jl adc pop push jno ficomp shlb pop lahf adc mov pop push in stc imul or sub hlt cmp sahf scas dec sub addr16 and xor add pushf mov mov pop loopne rcll xchg cmp fildl sub sbb leave jb lea inc insl jg dec popa xor cmp int pop jl aad fidivrl inc rcrl jae int imulb sub stos lds hlt cmp in neg inc xlat inc imul sub testl scas adc dec jle dec iret xor fbstp pop mov inc xchg dec loopne loopne inc (bad) pushf jne pop fstpt in call mov dec xor pop xchg xor adc mov mov in xor lods mov inc dec adc les arpl jg cmc jmp cs inc mov sbb jp add jno and lods movsb push (bad) cltd std in ficompl sbb mov (bad) cs cmp cmpsb mov (bad) test and rcrl call and mov xor imul xor sbb notb add cmp xchg fldt test popa scas lret loop insl inc pop scas enter lahf sbb or out js insl sub sub adc lret or lcall pop sub adc (bad) jl popa stos inc mov and adc mov repz pop add out sub inc pop mov xchg fcmovu pop push ja lock fisubr fucomi cmp (bad) dec and divl clc cli ucomiss push dec ss sbb xchg out mov jecxz pop add shll (bad) sbb or and fdivrl dec ljmp jg test repnz fstpl daa loope int3 add test adc dec in mov fcmovnbe fwait push insl loope add fisttpll adc cwtl ret push repz pusha dec jno fwait inc cmp fimull (bad) mov push neg xor xchg xor cmp mov xor pop out xor dec ja shrb fwait or test push adc jno shrl ret inc xor es mov mov sub cld int mov fsts popf fs and into imul add pop scas imul (bad) pop mov cmpsb inc je sbb adc ret xor push mov jecxz sub loop repz jl mov aad or iret fstl adc mov icebp dec ds inc sub test imul in inc outsl mov dec or or ss jl fnop mov mov mov stos or xchg sti lret jle in adc dec test ds xchg inc std outsl pop aad mov or push (bad) gs mov add push stos loopne fucomip dec ja and and inc adc scas (bad) mov sub aad pusha std daa int3 sbb adc ja jge jnp jp repnz ror or pop dec (bad) xchg mov scas adc dec mov add idivl jle cwtl xchg dec sbb imul (bad) or cld sub cmpsb xor mov js enter popa std jmp cmc popf mov xchg pop pcmpeqb lock mov pop daa and fwait lods (bad) jo add pop mov sbb fnsave sub cmp ret fcompp insb outsl adc insb lcall sub dec pusha jge push scas test pusha stos ret sbb aam fcompl and jne js les es adc sarl mov insb sti into clc mov cmp cmp jp mov inc jne push add push ret mov sub sub adc fninit aaa dec pop and mov scas (bad) jno sub inc mov push mov addl into jne unpcklps rolw jmp or xor imulb sub sti (bad) jno jns inc mov cmp or push adc mov adc int lret fwait shrb roll mov out cmp mov outsb add stc loopne dec adc mov pop lods cmp divl flds hlt lock mov cwtl rcl loopne shr loopne (bad) sbb sbb fsts (bad) adc fsubr adc fsubr add jne push mov leave js (bad) in adc (bad) sbb push add aas ja shufps adc cltd or xchg test out sub adc pop daa mov clc dec push push lea int3 jnp mul pop jnp xlat adc adc movsl or lods xor push stos aaa out cld out rclb in insb loop scas inc mov pop push push sbb dec loope adc mov fimul repz loop push jbe fstl cmp pop inc cmp pop dec mov adc rol jbe leave bound sahf stc mov adc pop jb pushf dec pop lds add std mov cmpsl mov dec cld push roll pop mov shrl mov sti mov in cmp add dec or fidivl and sarl je inc dec jecxz sbb xor cmpsl push enter clc (bad) jbe (bad) sbb or fnsave out and inc push int cmp fsubrs shrl push push loop and sbb fmuls pop jno jo add gs mov cmp cmpsl inc and jg push repnz add sub sti inc xor test les (bad) jmp jmp leave pop adc jae add es outsl sahf mov inc xchg add push push jge sub mov cmpsb mov sub movsl stc (bad) jmp mov mov dec add mov or stos sub lcall rorb mov push stos mov lds faddl pop jp or sub jae add ss outsl out mov push add fstps jne scas (bad) mov xlat pop loopne cmpl mov pop add push in fs pusha stc mov mov mov repz sbb and sub dec mov arpl negl xchg cmp sbb cmpsb and aam cmc pop (bad) jecxz mov jns sbb int pop sub iret std stc mov xchg fsubrp xor mov bound test add fildll scas and xor cmp int3 or repz xor inc sub xor insl xor cmpsl scas and aas and sbb loopne pop imul dec (bad) outsl add jmp or cmp lods lea lea enter movsb ss pop sti jne xchg mov movsb into lods or test mov mov roll sub mov mov rorb aam (bad) repnz xchg cmp pop xorl (bad) cmp lcall dec push (bad) (bad) mov adc sbb pop cmp push loope stos or int3 push xor mov jp sub hlt or adc into add jge idivl mov je mov pusha or js or mov loope dec out and addr16 lds sub stc push rcr mov lods xor mov fcoms movsb cs loopne negb sbb jp dec insb andl jnp adc fisub dec push lret adc jne cmpsb call or or imul and sbb fwait push mov iret lods push mov pop addr16 mov das mov mov clc je mov jg fcoms and in mov orb add sarl rclb lods dec imul cmp fwait push xchg push mov das adc lcall lock xor rolb popf mov test lret bound dec inc insl (bad) and rol adc sbb or adc dec xor int3 in fisttp pop stos fidivrl add mov inc in dec and inc inc push loopne (bad) mov pop imul inc fistpl cmpl repz add adc arpl in out jge jno aad pop mov inc in fs loope push lea sahf int3 inc jno inc mov ret lea mov dec mov pop ret stc push (bad) sub lret imul sub mov sub mov clc pop (bad) js sti mov fdivl sbb mov stos aam mov lea lds (bad) loope lods push (bad) sub pop mov outsl jns aas adcl rorb test mov xchg push in lods pop pop mov or lcall dec push adc mov fadd inc rclb (bad) jecxz out lds pop popf jecxz xor adc inc mov push fisttpl clc stos xor js mov ficoml das aam mov cmp cltd cmp rcr mov push add inc sarb mul xchg add popa les cmp cmp xchg lods add fistpll add (bad) enter scas cmp inc or push pop mov mov shlb or fild imul (bad) pop ret cmpsb sbb push or popf xor popf movsb add push adc outsb lock lock xor inc imul dec mov (bad) mov shll in jb stos sbb scas pop jno xor cld xchg (bad) hlt sub push fnstenv dec aad repz in shl pop clc lods xor mov sbb stc loopne rol sub fsubrs dec push mov popa cli push pop cld repz subl and rcll and lods mov xor stos jecxz mov xchg pushf or negl xorl movsb sub inc jecxz stos jp in js sbb out ss fwait fs in pop and adc cmp sub bound pushf mov pop add or pop mov rdtsc inc pop adc insb jecxz pop call ja and (bad) inc sub adc adc js dec inc sbb out pop and lock mov adc add pop push enter mov cld jmp movsb fwait cmp (bad) jae mov push addps push adc iret cmc (bad) cmp popl jge jb cltd xchg cmpsb pushf or stos scas and ror adc ja add int cli daa inc jae out hlt out cmp inc sub mov les rolb vmwrite loop bound adcl repz mov cmpsl sub jns mov clc mov (bad) mov inc mov fsubr ret mov popa imul dec adc push (bad) daa pop xchg ljmp lock xchg testl jl fdivrs bound mov insl sub outsl dec arpl adc xor mov js adc sbb xchg sbb adc ficoml pop push xor and mov push lret jns pop ljmp mov or cmp in mov jmp lock lods popf int3 movsb mov mov xor in push rclb add sub cmpsl fldl cmp in outsl imulb xorb into out adc jns pop push pop pop or lock dec (bad) dec pushf into adc (bad) out jo cwtl push (bad) rcl dec and aaa or pop pop cmp loope mov shll xchg scas pop or ja sub pop mov sahf mov pop pop test bound jb inc mov pop pop sub push push mov int xor cld outsb nop aad lock and test das mov jg xchg push push test push (bad) test loop add pop xor cmpsb call push inc or jl ljmp dec xchg sbb jae sub dec sub xchg mov cmp add inc loop or jns bound fnstsw push out inc imul fisub sub xchg scas clc push bound (bad) daa aas push pop out jp jmp sbb pop pslld mov cvtps2pi add in icebp mov pushf mov jle add dec pop mov add stc mov jne or mov xchg inc adc stc cmpsl je dec in and push inc imul push push push cmp jl sbb push mov test push shl xor xchg stc and loope clc test push push jecxz hlt movsl xchg int3 std sbb dec jmp das std subb in push movsb decb nop push imul lea sbb jno into pop cmp pop mov aas dec lds adc loopne es test and mov out push cltd pop inc jg xor aad out adc das nop pop pop pop outsb lcall pop fcomi xchg ljmp inc fsubr pop (bad) leave sbbl inc jge inc fidivl cld sub js nop mov push jnp aas or add not (bad) (bad) mov xlat dec sub icebp sbb jl fiadd add mov pop arpl div jmp xor pop cmpsl inc push js xchg int outsl dec iret stos lcall scas in das rcrb dec xchg (bad) (bad) fnstenv jecxz ficom mov movsb sub push jecxz repz push inc pop scas jb int dec push (bad) (bad) dec lock adc and mov sbb cmc push xchg out jnp mov cmpsb subl push mov jp mov jb push inc pop jl pop ret fwait jp pop add adc sbb stos mov in pop fs stos adc in (bad) mov pop or push jb mov fbstp rcr cmp fcom outsb add xor bound (bad) int3 jo xchg or int3 mull jne jo xchg imul divb or mov pop into sub aam cmpsl in pop inc push scas pop sbb dec push mov mov xchg rol xchg xor or ljmp (bad) pusha pop push out stos or insl in imull ja call std mov sub pop inc jecxz imul ss sub ret (bad) sbb jmp stos loop fidivrl xor mov mov scas imul cmpsl gs jle jo test test inc mov cmpsb xchg jmp pop dec out sub mov clc push adc sbb inc xchg (bad) jb loop mov xchg (bad) fwait push call aaa push pop xor pop pop xor inc inc call out dec lcall jo xor jnp rcll mov fistl or fstps dec push add and divl mov imul mov jge push push pop and lcall adc or movsb mov mov imul push xor lret scas dec or inc mov jnp insb or pushf loope xchg xchg (bad) xlat pop push xchg xchg pop inc push xchg jns cmpsb ljmp loopne pop mov cli jae (bad) inc enter or lea arpl lds shll mov nop sbb sub mov cmpsl cmp cmp and int3 ss pop pop lods push lock sbb out push adc sbb push and inc push xchg (bad) adc test cmpsl repnz jl sbb mov movsl mov callw mov and (bad) (bad) xchg jnp cmovb fwait sub and cs lea outsb dec add outsl ss scas xor clc xchg pop mov cmp xchg test dec push ret mov loop or jle int (bad) (bad) cmp xor in or ret push (bad) mov pop push gs sti mov mov pop lods insl cmp fisubl or cmp sub rorb nop cmc rol je fsts inc in bound test shll or jae sub inc out outsb xchg xorl and mov bound or pop pop mov js psubd out push (bad) iret and inc imul pop int3 (bad) rorb pop mov adc sbb loope jmp rcl push add inc (bad) cmp mov cmp int3 insl mov cmp test adc or inc aad repnz sub popa fstl add lcall push hlt ljmp xor push add jmp xor out fcoml cld neg mov stc cmp lock aad imull je pop adc push fsts sbb stc addl jle lcall inc ficomp fdiv (bad) fs xor (bad) cmp cwtl aam add fmulp push or xor dec pop push sbb aam mov lret lock data16 data16 pop xchg test popf inc xchg inc push out pop sub xchg push (bad) lahf push dec lret lods cmp sahf cmp xchg pop pusha inc out push (bad) mov add loope (bad) je (bad) and loope push xor and fsubrp push ds loopne push cwtl ljmp sub push sar jg sbb hlt push push xor pop push in xchg push cmc sti push xchg out cli das or mov insl aad xor xchg in enter insb jne dec insl sbb mov mov sbb push lret es pop hlt inc jae add xchg inc movsb scas sub pop in (bad) sbb jg mov fs fidivrl (bad) mov (bad) lcall adc sub push and xchg adc (bad) in xor adc shrl repnz (bad) cmpsb pop push icebp scas aad lock sub cmpsb repnz sub inc out mov repz fwait js scas mov stos adc pop jne frstor jle stc xchg fwait mov dec pop add mov test mov rcrl inc repnz sbb push test shl push lret mov insb popf ljmp or lahf lds inc jnp stos (bad) repz cmpsl loop inc addr16 sarl iret mov xchg addr16 pop push hlt bound gs sbb das dec adc cmpsb (bad) add out in push call push sbb aam clc cmpb adc imul mov loopne sub call clc outsl or lock imul sub xchg in in pop push mov xlat sbb es lds (bad) repz push cmpsb dec xchg push dec inc sbb aas ja jb mov rol mov pop out cmpsl or (bad) fs jb roll cmp adc push repnz push add daa sbb xor xchg fs (bad) xchg pop in dec lods or mov inc push xor shl (bad) lock out or and ja add aas lods pop jg jl jns sar and mov ja jl sbb mov loope inc fdivrs push cmp dec shrl dec adc arpl cmpsl cmpb sahf mov dec js (bad) mov xor dec jo fstp sbb sbbl fildll push push pop popf sbb mov test pop aad add rcrl mov or pop sbb (bad) mov mov movl mov loope sub pushf dec imul stc inc pop dec mov loope add call loop (bad) cmc and add mov popa or jne lock aaa loopne dec xchg fdivrl inc cltd adc xor push stos in outsl fdiv jns xorb cmp in inc or dec repnz loope pop mov mov inc fidiv lret push fcompl pop lahf lret mov push jle mov mov fbld js (bad) ja gs cli movsl xor xchg xor or hlt into call mov and or xchg fbstp in inc push pushf sahf jmp dec jp cmc adc sbb (bad) jle test xor sub hlt js dec inc cmp bound and cmc and jp mov jbe into testb shlb lds or dec jae movb pop roll mov imul pop push scas sarb jg mov push cmp (bad) push sbbl rorb xor sbb xchg xchg repz rcll or mov fisub sbb lods jle es jb sti dec push dec pop (bad) vmwrite inc push scas stos cs pop mov imul jge fisttpl testl lcall ja loope dec popf jne int3 xchg js fstl in hlt xchg ljmp arpl xchg mov test cli scas fucomip or fs notl dec cmp sub and loopne mov sbb lock cmpsb jg jg jo sbb enter test (bad) out push sti sub pop push js test mov test iret jne repnz xchg inc bound std mov xor in andl fnstsw ja lds jmp mov xor ja cwtl or movsl add stos sbb push jnp push inc push (bad) je movsl insl push xor cmpsl insb sbb sbb jo xchg mov lds ret ffreep jg les add sti inc and push inc push jg outsb mov in mov xor jbe mov shlb ja cmc lcall incb loop add nop adc lcall or loopne dec fcom insb mov jno fdivrl pop jmp js es inc lods push fwait ds or jns sub mov jno mov xchg xchg test push scas push test sbb push rclb add cld sbb loopne fsubrs adc jl in out inc lret jne stc cli jp push dec push (bad) ja sbb fidivrl (bad) xor jbe test jmp (bad) jnp rclb pop adc jp outsl fnstsw stos clc and popa push sbb push adc jnp insb jbe clc cmp cli sub cmp xlat mov xcrypt-ecb cmpsl mov or dec loopne hlt addl cmp jl mov lret in adc (bad) ss lcall push push popa lods or outsl mov cld jmp rcrl sbb jmp pop dec in inc inc enter (bad) mov push sub inc cld fwait rorl dec adcb lcall xor and jns faddl scas fwait jecxz adc test push sbb loope fwait stc std cs sub xlat mov mov cmpsb sbbb stc (bad) repnz ja int xlat mov dec or rcrl add out mov add xchg cld adc (bad) push adcl arpl les push mov xchg mov icebp (bad) loop cltd and mov and out pusha xor sysenter xor push push aad dec dec add call add loopne loopne pop ljmp icebp jl mov jo xlat xor call test les cmp mov cli repz fnsave test lds clc push push dec out mov inc cmp int test bnd or jnp add daa movl lret pop ljmp mov scas icebp lret fild ret jns fisub rorb sbb push cmp test push and std popf fwait int xor and or jns sbb es sarb es ja je sub inc push mov xor inc in xchg sub inc int3 adc test xor iret lret push mov fidivrl push (bad) mov test inc mov jp mov ljmp icebp inc loopne pop jno mov push inc push sbb mov dec jbe push aad mov add xchg test es test mov shlb fsubs mov (bad) mov pop js aaa cmc lret dec jne inc cmp aaa ss popa and jge push sub sbb xchg jnp adc or stos in mov push in lods jae xchg jg mov test mul stos mov pop pop jp push pop mov inc push cmc mov lods (bad) and aad rcl xor aaa jge pusha jns dec jmp xchg fstpl sbb ret rcrl in mov jmp into or adc ret pop mov cli inc push jb pop dec imul xchg shll ret call fmull sub mov push pop lahf dec xor jns sub ja popa (bad) shlb mov adc mov enter test cld pop roll push call pop daa xchg or push idiv mov adc cld xor cmp lahf xchg cli cmc sti jmp adc cs pop testl (bad) out dec adc mov ficomp in fnstenv insl sub lock jns add pop sahf out inc mov inc mov cmp imul (bad) mov push add pop fdivs or call mov je xor jbe stos incb fsub shl and or xor daa fsubl and mov mov inc mov mov pop cmc fmull test mov test imul adcb push test hlt mov iret jb ljmp jg gs lea ja pop mov mov xor fcompl inc es or rorl int3 lcall pop push clc push sbb jo and mov outsl ficompl cli xchg loopne out ja xor negl jo sub inc lret pop arpl dec sti jb bound sbb cmc subb in inc jne push icebp cltd inc jo (bad) dec pop mov cmpsl out in loop sarb cmp sub pop xchg clc mov pusha and andb sub into clc mov mov test fldenv or lret (bad) shlb mov sub mov adc xlat adcl xlat sbb pop rcl mov push icebp in aam jns mov mov mov jp or mov push and sti mov gs pop sbb mov dec push push aam push and inc nop je aaa cmp pop jae mov pop fadds push xor adc arpl dec movsb test inc pop das imul or daa stc mov mov xchg lock jp dec das scas push jno and jns jg cmp test mov test or pop loope jnp cltd xorl jmp or jge sbb mov fsubrs mov mov and inc fimull adc icebp insb pop adc enter jg fs add ljmp js sub arpl (bad) adc dec jl sub pop pop data16 (bad) arpl jno in push out ficomp out shlb or jbe xor mov in scas ss ret rclb insl bound push jae dec push fsubl add fistp mov xchg fild pop push (bad) xor leave aam jno insl mov (bad) lea push mov punpckhdq mov push or sbb leave scas jmp and jbe cld repz mov pop jge xor push dec mov jmp shl pushf mov and mov (bad) ljmp mov in xor and cmp mov aam ss insl cwtl pusha (bad) cmc inc jnp scas sub fistp pusha ficom sbb and xchg push adc test adc mov cmc js dec negl adc pop jo mov movsl adc cmp stos pop jae or dec (bad) stos sbb lock inc push jp dec or jo jnp sbb cmpsl add xchg movsl jg (bad) mov inc inc lcall (bad) fdivrl movsl ja test mov and lea arpl mov mov dec mov mov in pop mov jnp ja or mov sti mov push (bad) movsl or and test xor faddl jge cld xor popa aad lds aaa sbb inc les jl das cmp jp fwait pop lahf jmp mov mov mov adc push inc pushf jmp push repnz mov add das mov test (bad) test and inc inc mov push and add rol jb pop in mov xchg dec xor mov mov or cmp push xchg mov pop pop in fistpl or stc scas sub ljmp xchg ficomp (bad) fiadd add jp mov and xor cmc push (bad) and push mov in pop xchg stos mov sarl data16 into in xchg mov lea xor in (bad) in fnstcw test inc jecxz inc inc jns lock js ljmp fdiv sbbb scas lahf out jno lock mov sarl test or push mov sti fmul mov test imul lods and sbb daa popa aam pop push mov inc sbb jne fldlg2 and adc stc movsb (bad) mov jnp in aam in das adc aad push cmp jno add add (bad) (bad) rorb in mov add pop lea xchg mov movsb fmull sub sbb pop inc pop (bad) cwtl push stos mov jg bnd adc xor cld mov movl and jp xchg push fidiv or mov fsubrs sets mov xchg or xor repnz es cli mov mov fbld lcall pop out pusha jl xchg add mov pushf pop (bad) out sbb fisttpll imul jmp mov push cmp andb insb imul (bad) (bad) aam test jecxz rclb js loope dec xchg jmp sbb jo in sub cmp mov lods sbb (bad) lds inc out fiadd fstps fstpt ret add and dec xchg push sub sbb lea call jo push xor inc add rcrl idivl pop dec rorb fldl2t cli lcall jecxz fstl and test push loope popa pop jns mov scas adc mov hlt lods or std mov mov mov cmc pop pop mov sub pop clc and loopne out stos stc cmc divl jo push and adc push call dec sbb fidiv mov mov dec cmp or out ja dec cmp pusha xchg fsubs movsl je cmc mov mov (bad) int3 popa or out int push mov jp in push roll pop in inc je in and push ss jns insb and push ficoml js push (bad) sbb test cmp aaa xchg les mov dec xor add push jnp add and ret dec push in xchg adc push popf push sub xchg xchg es sbb push jl push in push outsl or xor add push ret mov pop cmpsl xchg or sub int3 mov mov fsubl pusha imul or test mov cmp xlat mov push lock dec pop idivb imul fiadd repz dec adc daa and xchg ret movlhps jno jmp mov sbb cwtl lcall mov jg mov mov loop push and movb into lret mov lret push iret xorl stc xchg pop (bad) in loope aam call mov pop sbb imul fs ret fdivl mov mov loope inc fstps mov mov xor lock jne cmpsl dec cli jae jp std add jne mov jg fnstcw lds xor in fidivrl mov mov or dec dec leave add fdivr add dec test jbe inc xor rcrb (bad) loopne add mov jo mov mov pop nop mov pop pop or add jg rcll stos jns inc inc (bad) leave and roll add jmp lret push jle inc loop movsl adc mov jl xchg (bad) jno call out sti jle (bad) es leave sti push or adc cmp cld out popa adc jne pop sub insl (bad) test adc add mov pop pop dec lcall mov sahf fxch pop jnp dec stc dec jbe aad stos (bad) scas push (bad) xor aaa sub in push pop (bad) (bad) icebp fnstenv mov ja mov jbe fs xchg cmp (bad) sub mov test out or jne loop inc mov mov shrb cltd gs sub shrl fmulp sub or xor pop (bad) sbb lock ljmp mov dec (bad) loopne push mov push push sub mov xor in and xchg sahf fnstcw push (bad) movb jae cwtl fsubs mov repz pushf sbb jb pusha (bad) mov lcall add xchg mov jno sbb sub in xor rcl pop jge jp rcr fistpll jg hlt xchg mov data16 xchg and sbb inc (bad) push inc cmp xor imul in inc adc aad jns or ficom pop int3 in out xchg cmpsl pop insb insl (bad) shll mov aam pop pop cmp fnstsw push or cmp xchg stos or inc xchg enter popl jp les cmpsb fisttpl int3 out aaa dec dec fidivl in jo inc aaa (bad) push sub imul (bad) inc sbb and xor data16 mov stos mov ja scas hlt or inc push xchg (bad) mov jno movsl inc or cmp push in sarb mov xchg cmp (bad) popa ficomp mov add and sub (bad) es inc les lds mov mov cltd (bad) sahf fisub js sbb mov aam push in shlb sub in pop outsb or clc and pop mov pop inc mov dec dec lods lods mov in mov mov (bad) (bad) xchg mov ret out dec (bad) push sbb fcoml sbb ljmp sbb repz xlat mov mov scas divb jl pop pop scas pop fldenv jge popa mov add cmc push roll aad fldcw lods iret les adc in jnp fmull pusha dec cmp pushf (bad) pop mov cld dec (bad) aam cmp (bad) lods mov jge xchg push aad add push in sbb lea lcall movsb cwtl add rclb pushl es pop push jb aas inc jns mov fwait add sarb js pop push pop push movsl xchg data16 jo inc andl fmul mov imul push and xchg mov arpl pop dec inc sbb fwait mov in into inc cmp in jmp push adc (bad) adc (bad) pop adc jecxz and jle add cmp int3 rorb push fs push fstl sub xchg ja xor inc fnstsw out push sahf xchg imul mov popf mov mov incl je dec xchg popf ret loop pop cmp jae mov loopne dec xlat cmpsl cmp cwtl push inc in add mov mov sbb inc xchg pop jno sbb inc push scas jmp adc stos jmp adc jae sbb mov sub sar and ds adc pushf fistpll push lret sbb (bad) ljmp and pop out jb and in in mov rcll jo mov out popf mov inc add push adc and cmp xor sarb push jle (bad) int3 cmp (bad) or xchg sbb (bad) fimul das xor jle mov aam mov ret fs xchg aam cmpsl out push repz clc imul ret call pop mov push test movb xor gs jnp jg cli sbb jo lret pop (bad) or push sub out pusha adc mov ret pop mov adc test aas pop dec and shrl or call out and (bad) hlt and inc mov adc mov push and xchg out test decb push sub cmpsb inc xchg sbb mov loope fcoms stc into xor call cmp orl test mov rorb mov je dec pop xchg inc sub scas inc icebp jg (bad) or dec mov xchg stc jne jo pop adc js push (bad) sbb roll inc test cmp in and pop sub enter adc xchg fcomps mov rcrl sahf inc jae xchg xor adc outsb cmp aas jbe imul add mov push popf daa push call cmp je gs cmp lods pop cli pop mov and imul test in xchg lret test outsb aad subl aad pop jae jmp mov sarl clc fnstsw aaa int3 xchg adc mov jno scas movsl pop cmp pop or add sbb faddp adc jp repz dec mov inc lods cmp rolb js or insb (bad) and loopne ss adc ret xchg adc mov stc in jne push rcrl xor shlb xchg fisubr arpl and fbld adc push popa jg lds ljmp rorl add jge sub jecxz sahf cltd aas push aam aam popf fisttp inc sar roll mov jae and unpckhps push and adc cmp nop jl in push sub xor fcoml inc push dec test scas cmpsb addb push flds and lds push push int rorb out outsb inc sub or (bad) adc push sub enter add cwtl ret outsb and dec ret shlb loope push imul pop xor scas testl add cwtl popf jmp mov mov jmp pop pop imul cmpsl cmc push sub jl cmp xchg fcoml xor push jge sub mov and dec imul push cmp lock out inc leave push mov adcl and punpckhdq (bad) xor xchg adc xor imul addl fwait sbb mov or mov jnp das mov xor push jae mov dec inc pop lods mov jg inc in loop dec pop and mov pop ror push adc adc out sbb dec mov (bad) sbb mov aaa addr16 mulb fnsave jo addr16 xor sarl jno jge add and in lea mov shrb cli sbb arpl mov pop pushf inc xchg inc jge add fucomip ret cmpsl repnz sbb sub insl fildll outsl stos add scas pop imul adc fwait orl and (bad) mov mov (bad) push stc subl inc adc jns and imul cmpsl xchg fcoml in dec xchg (bad) jno cmp sub mov fcomps xor stc (bad) and imull lock jge in rcl and cmpsl and mov mov or lret stos das lock sub cs mov repnz pop and enter loop stos mov push pop dec (bad) jne adc or fsub xchg es xor fwait mov sbb inc and sbb adc stos stos cld mov int3 push pusha cmp lods arpl iret fsubr and add sbb daa dec nop push cmovle fisubr pavgb sub loope jmp add mov cmpsb cmp fldl js inc in sub ja (bad) pop xchg stc cwtl daa mov js mov dec (bad) rol jae adc push dec aam mov jne xchg fucomp cwtl push add loope and fnsave jb lcall jmp xchg dec inc xchg push inc ljmp xlat mov mov adc out fstps insl fnstcw pop push jae or sbb mov pop outsl icebp jno push xchg push adc mov shll shrb out and int (bad) and mov daa js repz sbb mov jae imul (bad) mov cmpsb fbld fwait adc pop lods sbb movsl fiaddl pop js sub adc sub (bad) in loope jle loope clc pop cli adc pop adc out adc jae stos loopne push mov cmpsb sarb ret inc std sbb cmpsl lahf daa pop adc dec pop xchg xor arpl push xchg jo and pop je cs cmp fwait inc mov popf pop push xor inc add or inc jge pop add out or mov mov (bad) ss dec int mov mov bound loop cwtl std (bad) cmc fisttpl sarb fstpt mov xchg sarl push pop inc adc jbe repz or fidivr cmp sbb and jle outsb fdivs lock cmp test nop cltd mov push mov or ds fsts add bound sbb mov (bad) sub (bad) scas dec sarl mov inc iret js dec hlt jp sub fcmovb push add (bad) xor mov pop clc mov mov lcall dec adc jb mov push adc ja or fdivrs aam daa int3 push mov sbb push lea cwtl je aad lcall popf enter cmpsl add dec fimul and loope cmp mov pop dec shll dec daa mulb cmp jp loopne mov in or add dec testl mov movsb fld and inc test push mov lcall je,pt test js adc jg enter mov test pushf inc stos out ss pop notl mov cltd adc adc testb sbb pop mov sbb and mov adc lods sarl inc mov js mov xor jns into test loope lahf js leave jo push sub sub pop push lret ss sysexit fdivrs loop and adc sbb pusha mov insb jle aam push xchg outsb imul add or sbb add mov jo popa pop push mov and call in mov dec xchg cmp cmp imul adcb dec push inc enter ficomp out (bad) enter xchg or js mov inc add and ret mov (bad) xor rclb mov sti cmp daa mov fs cltd inc addr16 jge,pt xlat mov stos mov jns popa aaa in xchg leave or (bad) loopne xorl call mov enter out cs fs push add mov es add or push push xor jb popa out mov push mov lahf inc dec add leave shr or gs mov jnp xchg inc stos inc sbbb jp and icebp dec mov rcrb push scas je int rorb lock fdivs (bad) jne jb xor aad xor das scas idivb dec or insb mov ror sbb push or arpl pusha rclb or out mov mulb subl hlt jp adc sbb pop das movsl push adc test mov adc dec dec setnp adc add sbb or fdivrs push cmp inc mov push adc fadd shrb fcmovnu nop xchg lea sbb in xchg jmp or sbb sti or lods rcl sbb scas out sub lea ret test scas inc clc mov ljmp inc add pop cld add aaa decb roll orl add add inc inc (bad) push jnp rorl data16 pop pop imul mov iret addl mov and enter pop sbb add mov push jg outsb stos mov cmp (bad) or repz loopne movsb mov mov iret outsb adc aam or sahf lret jno or aad into cmp jns clc mov ss in add push rclb or (bad) cmc xor repz mov pop ljmp and adcl int leave or movsb pop jnp js (bad) cwtl pop mov outsb jnp cmp push sbb jae fmull push xchg inc wbinvd xor stos mov aad movsb mov test bound cmp cs data16 lahf cmp xchg mov test jnp insb rcr jne pushf mov fwait test inc sub daa (bad) mov fldcw push out (bad) outsl lods aad aaa mov call pusha mov popa cmpsl pop mov hlt stc insb or jg jecxz pop aad ja mov scas push stc andl ss or leave scas shll xor sub push loopne pop popf xor add cmc sbb idivl lcall lret sbb push cmpsl pop imul test daa in cmp insl mov scas lock std push push sub aad jmp mov dec dec lret push iret insl mov (bad) or jl push arpl push sub scas popf int cli adc push add inc repz xchg dec jne frstor mov mov xor mov repz rorb lods xor pop cmp bndldx inc cmp cmp outsl jae scas mov add mov push idivb js ss jbe xor ret outsb fbld mov das notl jl mov or xchg push repnz movsl and je int fmul mov adc je pop aad rcrl sarl aas mov inc lods sub push mov fdivrp out xchg into sbb insb stc dec pop cli mov pop pop jp popa xor dec adc scas lods fidivrl std jb pusha lahf (bad) dec and je sub les dec jno adc or mov dec cmp stc xor push jnp (bad) icebp dec test or dec ficomp jne inc mov pop xchg xchg push jo jne sub mov lds sbb adc dec insb (bad) ficomp and mov out jmp xlat sub and cmpsb lods fcomps call dec xchg mov cs inc stc inc jle insb notl ds lods shrb mov cmp cmp jne jecxz xor dec inc insb jne push inc les inc adc mov outsl mov cs xor ret leave mov mov push shll pop scas pusha (bad) aad (bad) push enter mov (bad) cmc sub into fs mov lahf sbb lods adc and push fwait jge mov dec jle fcmovbe aad sub jp push pop jo mov lods jb aaa fadds (bad) (bad) (bad) js insl nop jmp jb rcll sub in push insl popa nop lret je rcr in mov jge cltd xchg mov push test in jmp and mov sbb lods push inc jns cmp ret sbb js jb xor jno sbb sub sbb fwait push push pushf dec aam lret pop dec js mov and js and sbb jb xorb xchg push pusha jge (bad) cli pop dec cli inc notl push bound pop push cmpl inc cmpsb icebp sub outsl xchg add jne sub xchg inc mov adc ficompl sbb and test xchg push sarb call jle popa pop in xchg mov dec and cld cmpl aaa (bad) ret sbb loop mov mov mov mov mov inc pop pop scas movsb pop fdivrs dec sub xchg imul mov pushf cmp clc xor dec das sub mov push rolb movsb fwait mov stos jp aas inc xor add int3 mov cmp gs inc add fsubrl adc shr push inc loope adc fxam and cmc fbld xor sub jae popa jecxz mov fwait mov mov mov mov (bad) cltd enter insl jno jg insl js aad jl lods scas lods out imul inc cmp call rclb test mov imul xor push stos pop push mov pushf (bad) cmp lock inc stos mov movsb pop pop cli movsl das push pop pop inc lds int3 dec frstor add scas jmp jge push dec sub cmp repnz sub lods pop xchg cmp ret lahf dec out and pop mov and sub xchg mov mov sub iret ja hlt mov cs jnp push shrb stos les or cmc sti sti stos inc mov adc mov (bad) mov fucomp je jp and or mov insl lcall xor pop shlb xor pop inc pop dec inc xchg sbb lret (bad) stc daa sbb mov dec mov je out mov fadds mov mov inc sarl xchg jle mov loope xor push dec pop mov in fnsave shrl xor pusha fdivp inc jbe mov incl pop dec push pop dec mov pop ja ja xor sahf push mov cwtl cmp cmp std dec popf pop or pop pop insb sub (bad) jae dec mov insl (bad) pop std pop xchg movsb ret sbb (bad) push push addr16 movl stos jle (bad) jns sbb imul std insl push add dec mov js adc dec imul or mov (bad) es cmp dec adc cltd jle dec cmp xor enter sbb fsubrl inc (bad) sub out sub jge cmp inc sub jnp sbb dec negl mov sbb push cmpsb mov jp sub add adc or cmc pop xchg rorb aam push or bound std xchg mov cwtl jae std in sbb jns push scas arpl enter bnd dec adc loopw push mov jecxz jne movsb popa pop mov mov and jb mov jmp stos dec lods sub ljmp popa dec iret stos cmp in es cli das ds lds pop cmp mov inc mov jl pop add cmp loope xlat scas jmp cmc pop lret inc jo mov mov mov jl daa shrb adc sbb into cmp popf lret fstpl dec pusha insl fstpt mov fildll fadds add out or pextrw xor mov ret xor pop std fdivrs push popa dec sbb and adc pop sbb push lods inc jp scas dec jae in insb inc sbb pop in fild mov pop sbb sbb push push (bad) movsl sbb call adc mov adc pop dec jmp ficom adc fmull in mov xor hlt cmp cli sti xrelease jnp xchg inc push push fistl pop out add sub (bad) xchg pop or (bad) mov and mov jb jns aaa sub mov mov add jno fstpt mov mov inc lea cmp cmpsl (bad) adc (bad) mov iret les loop lret or push adc ret cmp push bound push jg sahf sub in pop andl adc (bad) fisubrl inc mov push mov mov sbb jo dec mov push and jl adc das aam (bad) jb scas cmp inc dec ret sub mov mov lods frstor push xor mov jmp mov in test push or clc push ret daa sbb stos adc mov mov (bad) lods scas jl inc insb sbb cmp cmpsb and pop add adc lret out (bad) xor ljmp cmp int3 int3 sbb (bad) mov lock rorl inc add fisubr dec in mov sbb dec lret aam aad xchg (bad) je sub or pushf out clc mov enter inc dec sub jecxz inc pop mul mov rcr pop add ss sub popa repnz mov sarl mov dec shrb inc popf test aaa pop sub and cld inc or or cld mov push or fisubr cwtl les push movsl add inc movsb adc nop mov fs pop cmp movups mov jmp mov jp rcrl pop pop cmp inc inc sub mov leave je lods inc inc flds aaa push jo out add push (bad) cld jge adc jmp adc xor sub (bad) xor mov in pop sbb mov orl xchg jno xor mov in fwait lods lahf jecxz add in mov pop into xchg negl (bad) pop push aam loope in mov or pop loop divl mov (bad) movsl (bad) adc decb insl adc leave cmc in jle cwtl pop mov push fcoms out test test cmp popa xor sub sbb int push add mov sbb sub add sub sbb pop push sbb aad inc jnp sub add into (bad) dec movsb negl int mov mov jge aad jl dec gs dec dec add jmp mov xchg std call es push mov cmp and cmp shlb std push pop add lods in mov fisub xchg enter mov movsl mov pop repz mov ror shlb mov add aam out dec clc rclb jo mov pushf mov repnz lret adc cs mov dec popa mov iret mov cmp mov pop outsb or mov push mov xor clc push sbb inc mov mov xchg xlat cmp ficom gs (bad) hlt fadds pop imul xchg ret adc sti mov jno dec test cltd mov stos mov sti push data16 xorb fildll lods cmpsb cmp mov dec scas jl lahf pop enter xchg call push inc jecxz xchg jl mov mov mov jecxz negb mull jne adc aam sbb in fldenv in jae jg les stc test test div fwait cld outsb add mov mov aaa mov or fidivr movsb and or jbe push rcll int inc aad stos pop mov enter ret insl mov loopne jae mov aam mov sub adc sbb aam add xor mov add (bad) lea call mov cmp (bad) add lods lret and mov out cmp dec add subl cld imul mov aas pop jne mov mov and mov jnp mov mov mov roll jg dec call sti inc xlat xor cmp fidiv and fnstsw adc stc addr16 cmp adc xchg mov (bad) mov push lret jne jno mov sub sbb push xchg push dec dec call xchg mov dec (bad) mov and insb lods and lret jp mov sbb bound mov add add inc int fldl2e push pop test (bad) lds in scas mov mov ret lea std push mov jp xchg push rorb push (bad) in dec dec jnp scas xchg ljmp push dec lock rcll sahf mov hlt dec add mov aad movlps jle das stos inc sbb enter std or inc push jecxz (bad) fcmovnbe or iret ds jns or pop fmulp mov add adc sbb mov ret cmp jo rcll scas push inc (bad) int3 fisttp push sbb in sar cld sbb mov xchg outsl add dec nop scas jnp mov leave pusha fildl jmp cs pop jp (bad) dec inc add pop mov addb test scas pop xor int3 mov pop roll dec ret or push xchg inc adc inc add lods xchg jmp mov xchg fstps jne test and stc push icebp sub xor jmp mov aam data16 hlt imul aam inc inc fildl xchg or outsb dec cmpsb outsb aam mov pop repz push xchg dec fdivrl adc xor inc pusha lods pop jg out cmpsl and dec scas inc nop dec and sub xchg xchg add sbb dec (bad) pop jmp (bad) adc sar (bad) sbb arpl scas or or dec cs xchg sarb pop mov xorb fldcw fidivl pop cmc add test or dec les jmp mov stos cli out pushf js xchg mov inc fdivrp mov in xor adc cwtl bndstx data16 lcall push mov xchg or stc xchg repz pop rcl ret out inc sub mov mov les cli cmp add (bad) adc ljmp lock inc test adc pop add iret xchg aas daa sbb dec std mov scas inc ljmp cmp mov add das cmpsl or adc cmc stos xor push cmpsb outsl mov repz jno pop fstps push pushf dec clc pop fs pop repnz adc pushf cmp mov dec (bad) das lret cld aam dec fidivr mov cmpsb lods (bad) jo in shrb out mov add sbb pop mov inc ret mull push in outsl sub mov ja jno das mov mov mov jne pop leave test les test in xlat imul test in scas pusha mov bound adc dec fneni(8087 jb fadds push cmpsl push loope jmp or negb fsubr lds out imul scas or data16 or jl xor cmp or or (bad) rclb or ficompl dec ja or or xor add inc mov (bad) pop fcom cld stos dec jmp pop dec scas cltd negl cmpsb cwtl fcmove insb mov (bad) aad jecxz lcall bound iret jae aaa lods adc push adc push lahf mov xor cs pop roll jns jle mov jbe shl imul mov xlat cmc dec hlt sub lods mov fs mov xor xlat lods add dec push out stos jae aas mov dec jns addr16 cmp mov ret popf or xor sbb fbstp icebp mov test inc jmp add stc cmp pusha lahf push jnp mov in loope cmp (bad) push and jle (bad) adc sbb loop pop push enter dec or and repnz jne mov ficoml sbb and and aam cmp pusha mov pop mov es arpl data16 in push sbb pop push ljmp js cmc mov jmp jo int3 repz sbb in call jl nop cmp pop or rcr loop cs pop out lods hlt sub xchg sub push outsb loop cwtl icebp or adc popa lcall fidivrl push mov addr16 insl outsl inc sbb leave pop repz sbb cmp and mov jge push pop jl out int3 jecxz sbb pop jo sbb jle sarl jbe jecxz aam ret mov or cmp out mov stos adc pop lods jle aam push mov mov test adc fdivrs mov cmp adc jecxz jl or stos leave xor inc add cmc lock mov push repnz inc mov (bad) cmc js (bad) jmp inc mov or push lret dec aaa and push in bound call scas in stos leave repnz (bad) pusha xchg push jmp push std cmp jge push or hlt hlt cmp lret lcall sbb push adc rcrb pop subl mov fmul lock xchg sbb inc ds push sbb jbe out shlb outsl jbe mov jne mov fwait int3 jp jecxz push aad xchg adc pusha notb xchg shll push sbb mov and add add imul test mov sub cmpsl add mov fisubl mov call in xchg test lods lock faddl adc sub loopne push aaa addr16 test sbb inc lahf and pop popf repz mov movsl sbb loope mov or push pop out lock pop lea scas jb cwtl clc mov mov inc mov xchg lods rorb cltd pushf dec roll mov adc imul push cli stc (bad) jge jl cmpsl jge sarl xchg pop lret test pop mov sti mov and sub cmp xchg arpl cmp push int3 daa add ljmp add inc xchg stos jo stc in dec cmp inc inc fildll adc int3 (bad) pop mov xchg mov inc mov clc jle je mov arpl dec lret xor fstpt push add xchg dec pop mov sub scas repz in pop fsts add or mov push insb push ds decb mov ljmp xor jne das sub scas or and push hlt (bad) cmpsb stos adc repnz scas into inc in mov dec mov or repnz xchg pop (bad) shr xor add mov ror stc mul dec or jb mov imul dec mov call or push int3 je push add (bad) sbb in cmpsl test dec pop jg aam loop cltd rcll jp jnp pop mov out jns mov testb out (bad) aad (bad) push clc rcrb mov negb neg (bad) sti adc push push mov or fldl mov mov movsb ror inc mov and xchg dec jbe pop mov lods std jmp dec lock xor push test cmp pop push movsb (bad) ja add pop adc jp adc (bad) lea add xchg pop push adc cs loop dec cwtl pop icebp or push sbb dec fcomi les push jmp jmp adc or cld lods add in cmc and push clc push mov adc push in dec insl pop and add push xchg mov inc push shr mull xorb insb mov pop lock mov fidivl and iret lcall (bad) in push jae and jno jns into mov or sub mov lea and xchg dec popa in mov mov mov push adc jb sbb pop or pusha inc xchg mov fbstp add inc xchg fistpl mov mov adc scas stc imul push addr16 sub push sti lock pop or fimul lcall imul aam add insb idivb in sbb (bad) and sbb ja in js and add mov sbb push je je rcrl test adc lret sub mov ret mov mov push (bad) ljmp dec push in cld inc lods imul fmull mov rcrb or dec lds loopne xchg pop mov xor sub sti jne mov push jp sbb mov mov mov adc popa insb or cmp lods fcmovbe int3 push lods push sbb or icebp fdivl add js jne jo push fldcw dec and push rol mov mov (bad) jb adc fiaddl notl das jl push xchg xor pop xchg ja mov add sbb adc cmp aam imul enter arpl xchg mov fiaddl js add rcr js movsb repz cmp repz mov or pop gs ret movsl cmp cmp inc xor mov pop sbb test (bad) xor sbb les or sub inc insb and nop aad sahf cmp push jl enter ret mov cld dec mov sti add imulb cmp inc fdivl cmpsl mov jg xchg fcmovb enter xchg or sub inc std pop jne push loop fcmovne (bad) repz (bad) testl leave insl cmp sub mov add clc leave pop xchg or cmpsl out clc in xchg sub or insl sub sbb dec mov not cmpsb add fistpll sub aad xlat hlt outsl rorl inc (bad) sub test jo mov sbb cmc xchg adc setle push repz jecxz (bad) je divb mov mov dec jo push mov nop lock arpl fwait mov pop mov mov pop cld ss mov mov and jge jl push sub or pusha push ds sahf sti loop xchg push mov sbb lret rolb hlt jecxz fdiv repz pop mov adc sbb clc cmc push leave fisub and cmp cld cmc mov pop jecxz pop push add dec repz jno mov mov loop push shrl pop icebp xorl mov lds mov push dec mov dec std sbb fnstsw and dec lcall outsb adc cmpb negb repz cld push xor int nop addr16 loope pop cmpsb stos (bad) cld addb rcrl enter lods repz dec repnz movsb inc aas mov jge mov sub lea sub scas mov ret jnp insl inc jbe lahf mov daa inc hlt pop pop dec js and pop scas fisttpll mov in subb inc mov or dec scas stc mov cld dec mov fimull jo xor stc xchg mov daa push cmpsb ljmp jno push push dec jmp or mov mov popf shrb mov mov cmp jb (bad) fsub push jb sarb pop inc inc mov shlb mov nop xor dec or inc mov lret mov neg pop mov pusha push mov ret mov (bad) mov sub test enter fmul jbe (bad) (bad) adc push out sahf jmp idivl lahf lahf mov scas jp imul sbb cmpsb sbb fmull pop jmp adc pop mov es in dec pop or repnz into dec adc jns add cmc sub (bad) js dec hlt mov mov inc pop mov imul aas mov (bad) (bad) jmp push mov sbb push scas add in in cli xor out add into adc nop popa xchg fidivr push xor (bad) repz xchg adc (bad) jnp rorb hlt push dec mov jmp mov push movsb adc (bad) outsb mov or inc inc push ror mov fldl mov and loop dec adc mov xlat popf pusha fisttpl flds scas fsubs fstpt in inc out (bad) (bad) lret pop fidivl cltd ret testl scas cmovns cmp fidivrl xchg inc add fdivrl pusha pop sbb inc test mov lret add sbb repz add (bad) jne sub adc sbb aaa adc fldt sbb outsl stc sub adc movsb jno pop test or or push mov movsb dec out in pusha mov test dec and sub cmp mov test (bad) add pusha push subb jp sub push fcom mov rol xchg xor movsb push sbb stos pop ds test mov xchg or fdivrl sbb ret or xchg push xor out mov cld mov (bad) in dec inc pop sub jp xchg insl test stos repz scas pop vcvtps2dq lods cmpsb ret pop aam inc cwtl repz mov test inc sbb lret jae test jns add dec dec push data16 xor lret aad sahf mov rep stos cmc xchg push sbb cwtl fidivl add movsl imul mov pop pop mov xchg lret mov repnz mov xor sub mov cwtl loopne stos push enter sbb inc mov mov fimull xchg lcall inc jg push xchg mov out mov cwtl sbb cli cltd push ret cmp ljmp cmp push mov adc in push pop es imul push jo and xchg dec aaa dec icebp inc mov cmp push in enter adc jmp mov imul loopne repz in in mov out in ret mov inc pop ret inc icebp or and push push scas fwait sub les sub mov xor push mov (bad) or mov out adc cli int3 cmp dec mov jo pop inc in scas add fidivl inc out test mov scas pop icebp fs or mov mov push fs push movsb or and jecxz xchg imul jns movsb cli sub jmp pop dec push out inc sti call int pop inc dec mov adc repz sbb lahf test dec cmp jnp imul pusha sti dec adc stc fcomip in cmp out enter xor fs inc mov (bad) mov cwtl fwait jl mulb cmp cli cmp loopne fucomp inc jbe pop inc sub hlt js lock add xchg mov jns ljmp call aam jns mov popa cmc outsl ret or mov repz iret or xchg sub call pop cwtl or arpl xchg inc mov js dec lcall (bad) add push dec pop loop das nop in fsubs dec xchg jbe jne out jb divl cmp js lock call adc push stos mov mov mov jg dec cmovnp sbb adc jg pop shr rcl in fs adc nop loopne in mov cmpsb std jbe sbb shrl mov js cmc pusha sahf les and pop inc inc dec frstor or stos dec sbb add (bad) pop mul sbb jne sbb and mov out out mov push jno jge add mov (bad) (bad) xor popa jge popa adc sbb fdivs (bad) xor fcom stos mov scas je adc ja scas xchg stos jne test int sbb fwait adc cmp push (bad) or insb or outsb mov mov test lret imul jmp and lret call nop (bad) repz push jl bound pop dec lret add in cmc stos sub je xchg dec jns push (bad) push dec in stos jg inc test insl out (bad) ficompl mov push sbb lock jl jnp in ret xlat call sub add inc sbb sbb push cmp fsubrs (bad) pop fs mov (bad) add lods jg les (bad) call sbb mov push xchg insl fdivrl add push add ficomp add push mov pop pop and out jne cmp add add add in (bad) jbe mov or idivb aaa push xchg ja and aam jb mov imul jg movsb test jno xchg (bad) loope enter leave jge mov push std jl leave outsl mov stos int3 add sbb jle in aas std sbb fdivrs xchg (bad) in insl pop push push xchg hlt mov lret test adc in xor jno mov mov mov mov pop lret fdivrs in xor lcall aam mov (bad) mov notb mov js and add jbe mov dec dec lcall jmp imul cli cltd dec mov test or jne out push mov mov push mov insl (bad) jo push mov jge,pn add (bad) call xor or xchg jle mov sbb jnp out adc leave cmp mov dec dec jns jmp lods mov jle out (bad) cmp adc add push mov push jo out jne xchg pushf inc in loope (bad) inc pop and pusha sub pop pushf scas add inc js std repnz dec adc push pushf dec iret cmp dec adc test sbb int sbb add lock xchg pop inc xchg imul stc daa jge leave js fmull adc xlat sarb jne out insb dec in mov rcll (bad) rcrl push cmpsb mov jno shr add inc outsb xor je or lea lods outsl fadds rcl add and inc clc xchg pop into in cltd jns shl clc hlt inc push lcall xor (bad) out or ljmp loope dec ficoml shrb movsl dec inc jmp lcall rcll pushf fiadd or or imul fisubl loop out aam xor add clc mov mov mov aam cmp insb std cmp xor xchg fstps mov cmp in arpl (bad) clc nop mov (bad) daa inc movsb mov push cwtl in movsb jge and not mov jno mov cmpsl idivb mov out adc jo adc fcomps inc xor jno or stos pop insl inc sbb rorb cmp test cmp ret xchg stos dec ss lret dec ja fcom int3 into or inc ds push cmp fcmovnbe cmc adc imul sub cmp sahf lods or mov daa out aas mov lea mov adc mov dec je and push sbb lret push movb cmp jns fs imul pusha sub xor push xchg sbb xor (bad) xchg out fcomps jmp mov test ret popa decb jge jmp les (bad) negb aas sub inc push in sub dec dec lods xor pop rorb sarb push sbbl and gs push ficompl sub and jp mov lock push test aam jmp mov mov push or ja ljmp lahf adc mov les mov xchg sub stos pop into or xlat push iret sbb clc xchg in out mov sbb push into in pop mov (bad) mov pushf fs icebp dec js mov push push dec adc push sbb mov jb dec push out test xchg dec push sub xchg jae addb mov ja movsb and inc loopne jge add scas dec push and fist je lods fsubs mov in sahf add mov cwtl faddp (bad) push ja (bad) jbe inc cmp iret outsb sub mov mov push lcall pop xchg (bad) and in xor fprem popa orl gs lea out sbb fmull shrl xchg outsl mov jmp sbb push (bad) lret sub rcl das pop add mov (bad) vsqrtsd sub cmp mov fistl mov sub test test or ret push ds fnstsw lea daa js mov pop sbb das ljmp dec sub jmp mov sub xorb pushf sub mov pop nop dec add dec je xchg adc xor shll (bad) push ss mov scas adc mov inc sub pop xor pop subb ret inc jmp push inc out push cwtl pop and jle sub (bad) jp popf mov nop mov rclb and jl push out mov les xchg mov cmp cmp popf out pop pusha jle scas sub inc pushf dec push jmp (bad) xor xlat mov stc push xchg data16 pop mov jo or dec sbb (bad) ds insb fcmovnb mov adc movsl xlat hlt dec stos add hlt mov mov enter bound push loopne lahf and ss in pop cmp mov rcrb inc sbb xchg jecxz cmp lret mov push dec je mov ficom adc fisubrl sbb ret pop lods fldl frstor (bad) test leave or push push loopne dec je inc pop sub dec ja adc movsb xchg mov inc repz dec adc inc mov cmp sbb mov dec add (bad) and bound dec adc in sub cmp cmpsl sahf negb lret cmp push mov push call xchg fs push dec inc nop pop mov les (bad) lods mov insl jnp jb loopne cmc sarb fisttp add notl add out das push mov popf scas (bad) in aad popa loopne push sarb jle sbb (bad) fwait js and lret jne andb sbb mov add xchg clc lods cmp lret ja adc popf aad js lds mov xchg xor xchg fucomip clc (bad) in (bad) mov aam jno push xchg rorl and cmp pop sbb adc xor mov aas out xchg mov ffreep jae fidivrl adc mov ret hlt push dec xor cld neg jg mov cmp call add xchg inc ds mov jp (bad) xor push inc inc iret mov in inc cmc or sub jns and ds add cltd sarl adc ljmp aad fiaddl mov ja scas adc adc (bad) cmp mov jmp cmp mov shl push xlat in push xchg shl sbb ret nop clc mov and and (bad) inc mov xchg test or loopne out testl loop inc mov insb hlt fisubl pop dec cmp je pushl mov lds mov mov insl scas jo mov jecxz jl mov adc pop mov pop jge stc add les xor hlt xor push mov loope inc sbb cs jae inc stos ljmp push jecxz xchg in inc cmp out inc cli mov and xlat sti inc cmp mov pop cmp loopne dec inc push loop loope les jb xorl sub jne jno jbe loop fdiv or push loopne roll bound (bad) cmp jno pop repnz lahf adc bound push xchg xor push rcll sbb les test lea pop (bad) repz dec sub push push jbe xchg push xor repz hlt pushf cld push and lret inc mov nop mov je lods rclb stos jecxz and dec push inc (bad) ja adc aam pop sbb clc sahf cwtl sahf cld and call inc inc aas mov es xchg fldl mov push jnp ficompl (bad) push pop (bad) insb xchg mov pop xchg xchg sti aaa and xorl ficomp rolb outsb cltd push dec pusha push flds into inc inc cld jns jae mov add ret sub mov and mov in push adc daa xchg lds cld push in flds divb and call adc dec scas fadds sub dec lahf les daa dec daa mov sub mov sbb push inc xor pop mov clc sub call (bad) adc clc je cltd jge xor mov and lock sbb daa scas mov hlt jmp fs sarb ss rcll sub mov pop push cltd xchg jg in jbe xchg cmpsl pop mov pop add std push sub int insb das mov ss mov sti push xor mov aaa sub rcrb mov fimull test push sub outsb sbb cmc bound aad js mov addr16 std push inc iret out adc mov popa xor lahf aaa aad stc stc dec mov ret mov (bad) jl push pop imul pop push repz inc dec out loop dec ljmp inc loope dec pop fnop jo fcom je cld fnstcw xlat fnstsw (bad) icebp bound ret lret pusha (bad) fs pop mov mov pop cld mov pop push mov push dec cld movsl pop push stos test push add cld xchg xor xchg xor xor add pop call sub xchg outsl lock pushf loopne (bad) fmuls insb push das mov imul mov nop mov pushf mov (bad) pop cwtl pop (bad) hlt push lret in inc sub xlat aas cmp gs xlat push mov xchg addl push (bad) (bad) cmp arpl imul pop mov (bad) push stc jo xchg push ljmp add loope dec push push aaa xchg enter push dec inc mov cmp xchg sti add cwtl xor sbb aas int3 ljmp or xchg dec int3 lock mov or rol inc lret push scas mov mov jae xchg jmp cmp lcall pop jge or cmc ds mov pushf or cmpsl lahf xor (bad) jmp call bound jl test jp mov fldenv mov (bad) fnstenv (bad) insb cmp push (bad) xchg push sbb xchg inc or (bad) bound enter dec rcl cmpsb mov pusha dec ss xchg cltd xchg push push ret inc gs mov mov and aas pop scas push cmp dec aaa leave mov adc mov lret jmp cmp sub clc shrb test add sar (bad) or popa nop mov pop adc xchg cmpsb push fadds jg add pop pop and push gs cmp and mov lods mov cmp orl xchg js mov jge std lret insb cmp or and jge scas in rcrl popa movsb adc add fadd and inc adc sbb xor mov mov imulb mov mov dec add stos fbstp pop movsl lcall xchg push sbb adc push fwait test push mov add shr hlt mov lcall inc fs popa pop pop cmp jmp push ds les popf pop pop rolb sub xor js,pt add xorl xchg mov ret test jp data16 std cmp popa add mov pop rclb dec cmc pusha add fdivrp lcall loopne or loopne insb (bad) jmp fisubrl jl dec dec jne inc cwtl into repz jl mov inc js mov jge jne inc and rcrl and jo (bad) sub add dec bnd data16 lcall dec mov cmp mov dec adc add hlt fstpt jno sub xor and mov jle mov cmp cld insb lds xor or lods add mov push stos (bad) rcll cmp (bad) mov frstor aad stc mov sarb insb add inc mov inc push fucomip inc cmpsl cld push std (bad) lahf and cmc jnp (bad) lods out cmp (bad) fcoml xchg lea repz pop mov les lods fsubrs (bad) jmp bound xor mov cmp (bad) in inc and and xor (bad) push mov nop xor addl cmp std sub cmc rcr cmp and test out push xchg sahf ss scas cmp add xor mov ds rcrl jle loope shrb jge daa cmp mov inc loope sub fisubl hlt stos inc sbb int adc lds push hlt fcompp push mov shlb shrb in inc ficompl movsb pop jo aam pusha sar es mov pop mov dec aad in in dec les adc push rcrl (bad) push jno repnz mov movsl or cwtl scas inc adc mov or stos or inc fwait cmp mov scas mov sbb sbb lods orb fdivr pop pop pop jbe stc xchg fdiv stos jo (bad) xlat and or fsubp rcrl lock mov adc (bad) rclb jo push js pop mov pop (bad) popa push out repz (bad) mov push pop decb push pop xor dec jnp insb sbb lock das pop rcll shl (bad) fdivrl fnstcw rcr jns aad jne push (bad) jo (bad) insb pusha rcrb (bad) into imul cld push lds repnz pop icebp icebp cld pop push cmc lock pop push repz pop cld (bad) dec inc loopne dec inc out dec dec jmp cld dec out in dec xchg cltd ds xchg pushf cmp xchg nop xor cmp xchg sub sbbb xchg cld sub mov sbb mov adc sbb mov add scas or stos mov add mov stc dec sbb int pop out mov jno jmp in cmpsb cmp test fbstp rolb jge sbb mov lahf outsl ds pop aas inc mov mov push xchg or mov nop xor pusha cwtl movsb jg mov in aaa jae pushf jnp sti sbb stc fimull mov insb in aad loope dec adc adc add je jmp lods (bad) (bad) fnstenv sbb vmptrld fldenv xchg je pop aaa leave push push jb sub roll jb xchg stc aas sub xchg sub pop (bad) fucomi (bad) xor cmpb mov sub mov xor cwtd push ja mov stos inc sbb outsl movsl (bad) adc or cmc mov and insl xchg outsb scas adc repz xchg in int rclb (bad) inc cmp mov cmpsb or icebp in cwtl sub pop jnp fmuls cmp mov sti add xchg bound js or add jmp lcall out push adc loope xchg mov adc rol push pop loope adc int push add xchg cmp and push inc cmpsl lods or insb (bad) daa sbb ret fisttpll (bad) shrl (bad) xor sub fildll out mov pop test mov add mov xchg push mov add xlat out adc sub add ret inc adc arpl dec dec xchg nop sub ret fisubrl push mov popa mov ret and out or fs aaa ds cs pop mov push out inc xor hlt cmc adc insl sbbl xor es mov aam push mov sti insb sub aam inc sar jg xlat mov sbb mull mov fisttpll sbb fldenv ja fsubrl xchg adc lock add cwtl pop push mov pop fistpll sub mov (bad) mov cmp daa push mov xor sub ljmp lret dec inc sti xor in fnstcw or addr16 jns les and add test (bad) cmc push imul jo mov dec std ss xor jo mov jecxz jl mov adc xchg inc add clc lret test add mov fistpl leave jbe mov ret je fsts jl js dec in inc adc pusha pop jp mov lcall cmpsb sbb sbb jbe mov ret sbb push mov js dec cmp xchg adc loop pop mov enter xor test dec mov inc mov and inc insb fdivr adc mov mov pushf jne inc rcr sbb jmp fcmovnb out jno add leave ret push out push fstps adc xor (bad) push jl xor push fwait (bad) mov pop xchg push aad fdivr rolb scas mov in adc in mov or dec or lods bnd cmp addr16 or pop jne jl or pop sbb leave pop mov jg es dec adc cmp je push inc xchg test (bad) adc jnp mov test jp jbe xchg out push mov adc mov std sahf mov push lret les sarb (bad) xor test mov fnstenv and nop xchg fcomps mov sub fisttp sub cmpsl jmp fnstenv mov xor xor sub int3 sub or xor xor push fsubp outsb jbe ficomp js jecxz in addr16 (bad) xchg in jg jge cltd mov int add ret pushf addr16 shrl pop mov stos repz fsubp push clc jns in inc push xchg les add out adc mov popa shl push pop inc out out js jp pop stos sub lods pop jg outsb into jp scas inc pop cmp test jb inc cmp jne dec sbb mov adc cmp fcmovu nop test cmpsl andb ficomp jbe test and dec push stos xchg adc lock lret call dec jo mov inc (bad) lods push and mov repz loopne and nop out aas or outsb pop pop sbb or dec cmp push repz jp movsl cmp cwtl dec sub je sbb aas (bad) mov cltd push test divb test xor imul jp xor cmp in xchg pusha nop das cwtl xchg fcompl push int3 mov dec in pop xor aam and cmp pop stos inc (bad) dec jo push mov or je pop mov push inc mov enter mov mov push mov mov push add mov inc jne xchg fmul das jne jno test cwtl sub push imul push cmpsl lret adc stos inc jb fwait push sbb cmp pop jecxz (bad) fidivr stc fcom inc popf test mov sbb xchg jmp (bad) leave imul test lods ret (bad) cmp aad cmp insb mov add mov adc mov sti push jle add ret test fadds into xor fisub ret popf jo int3 in cmc pop xchg sbb pop fdivrl push addr16 rcrb into loopne push fcmovnbe lret pop dec in cmp add pusha popa dec adc pusha dec push clc bnd mov loope pop xchg pop push popa push fdivr jo sbb in mov fs (bad) rcrb fwait mov mov jo jp mov jo jg cltd pop pusha das push and leave fcomps mov adc inc cltd cmpl pop push hlt std cmpsb cmp sar mov pop or cmpsl mov rclb cwtl jbe scas adc bound jle call scas ss es in push mov aam dec ror pop (bad) addl aaa out scas dec dec inc jmp dec out inc pop aad arpl mov stos adc xchg add dec cwtl and add sub and push mov and xchg sbb aaa jnp nop jb pop insb insb mov mov dec loopne lcall flds pusha fcomps fcom lret push mov (bad) ljmp mov cmpsb jl call ret fmull pushf pop pop in cmp xchg dec mov rcl into imul jo pop fistpll mov jbe mov fadds push repnz ds call add hlt fstl or nop test xchg lahf push dec rol sub in add fwait ret pop ja (bad) sarb push cwtl xchg xor aad rcl js mov jecxz sarl pop fbstp pop gs mov jl push outsb ljmp lret push inc (bad) movsl push push pusha inc sahf inc ficomp jae fsubs icebp adc lret cwtl jbe sbb dec mov ffreep pushf push mov mov mov fdivl mov cmpsb add (bad) xlat or hlt imul xor cmp mov fdiv cmp stos mov sbb scas push mov push xchg sub ret sar pop in popa cmp in mov outsb dec sbb lcall test jg and add hlt mov jne pop xorl call mov sbb movsb int or aam and fcompl sub xchg icebp fwait jnp xor push lea cmp loopne lods (bad) rorl fadds xchg xchg lret or inc push xchg cmp insl push sbb iret popf jl fld1 out punpckldq ffreep cmp (bad) mov gs and mov int3 rcrb jl jbe pop mov sub cmp testb imul and jge push inc sub sti push jne or in das hlt mov (bad) mov in iret mov je in je jg imul decb mov xchg dec dec repnz push addb mov sbb pusha in popa arpl push (bad) fild out adc arpl insl mov adc int3 dec push inc cmc pusha jmp xchg arpl mov sbb dec inc cmp lods mov inc into and jbe lea lods rsm jmp pusha fs aam mov pop (bad) jecxz add insl jmp popa pop mov mov enter push mov sbb mov fcomps dec push mov in pop stos mov in shl mov (bad) cmp mov add and xchg test test iret sbb ror scas int3 test sub inc jle or inc jbe cmp stos push bound test mov mov and dec in or mov dec cmc fisttpll test jmp push ffreep mov add leave enter mov shll xchg cmc mov sbbl mov outsb sbb add and mov adc pop jno lret clc mov jmp hlt fstps add dec xchg adc arpl loop hlt pop sbb xchg pop cmp mov inc sub ds adc hlt add push aad pop leave lret cmp andl in pusha mulb or in stos (bad) adcl pop jge xchg lret lods lcall cld js add das xchg push xor shrl dec jp push push je add mov mov pop data16 add inc and popf and insl daa cmp ljmp icebp test scas sub sub pusha or push pop push loop out push icebp divb (bad) icebp pop mov jae insl icebp shlb stc lods jae fwait jne (bad) std mov add inc notb sub push pop stc dec rorl bnd cli sub dec or stos adc pusha lods jp mov pop arpl nopl jne lods nop iret pop pop or in jnp mov repz or pop sub test mov pop jb push pop ja jge std cmc or rclb clc sahf jno sbb outsb sbb lahf sub mov cmp xchg push mov jge sahf inc loopne pushf daa mov lahf aam aaa mov lret mov mov xor int3 cwtl es jne cmp xchg sbb dec lahf jnp mov xchg push xor cmp ja idivb xor stos cmp sub test mov subl jecxz les and test fwait inc pop test mov sahf inc xchg ja in pop repnz mov enter stos nop das or jp xor outsb xor aad test aam pushf jl push add hlt into scas data16 cmc xor aam sahf icebp movsb cltd xchg sahf add sbb cmpsb pop daa ds mov lea dec call mov (bad) movsl mov add ljmp adc add mov fdivrs or sbb loopne mov mov dec lahf mov pop mov mov sbb and lret nop cmp int3 out and mov xchg daa push lahf pop or mov out lcall (bad) dec jo xchg sub clc jb xor jae mov imul das mov fstpl mov jo bound inc pop test adc mov xor xchg dec hlt xchg adc pop fwait loop in call lcall aaa dec lock mov jns or xchg rcr out mov jnp sub cmp in xchg mov cs xor inc xchg and ret loop aaa dec mov and in xchg lock or jmp imul je call inc pop dec and leave in in movsb movsl clc in pop movsl sbb out loopne and ds sub es (bad) ss test clc mov cmp mov aaa repz sub lods cmc iret add cltd test lods nop das pop std pop das lds mov pushf cmp in test inc lods fistl lret outsl add adc add xchg stos movsl push add test xchg out jo cmc jecxz data16 pop cltd call cwtl dec push test addr16 lock (bad) adc pushl outsb or mov push stc mov add dec pop sbb pushf push mov (bad) loopne pusha xchg cmp popf (bad) jge jbe push clc jnp jge call lret loope pusha cmc iret data16 icebp std (bad) icebp std mov jne xchg out call xchg fstpt pop mov (bad) loopne mov lock inc pushf icebp repnz dec (bad) cld inc jp addl cld dec jp orl mov push push cld dec sbb leave pop or lahf and mov leave pop or fs popa insl pop inc in push adc dec into inc jecxz inc pop and nop and call lock mov push xchg mov xor jb out mov mov push cmp icebp ja scas icebp push pop mov (bad) std cmp enter into clc dec jl and inc push pop in (bad) fldenv jnp in imul jmp nop jp int jle push jne js insl push sbb repz scas push push mov ja iret lods pop adc jbe jp pop sub mov maxps push movsb ror stc push outsb into push shr cmc icebp leave loope and cltd inc pop (bad) std mov gs sbb (bad) push mov out sahf arpl and mov mov (bad) (bad) leave jge mov in dec mov mov shlb add jb mov pop xchg dec iret pop and mov cs int3 mov push bound pop push iret inc mov push fdivrl add icebp les (bad) (bad) jo mov pushf cmp leave xchg (bad) mov push arpl or ret pop pusha push mov enter jg idivb test roll pop pop ret shrb jmp das inc jno cmc cld cmpsl iret mov test xor enter sbb aad cmpl bound mov sub or push arpl imul push cltd jno js loopne bound dec cld pop aad clc (bad) sti add jb lock xchg mov push rcrl pop test movsl fistp lret sbb rolb push lods or mov mov scas push movsl cli add mov dec adc movsb stos push into inc mov stos mov mov clc xor xchg or jno out lock jnp jb adc mov scas mov add (bad) adc sahf sub jns int3 mov (bad) push fild ret hlt jbe mov sbb lock leave (bad) loope cmpsb jecxz ds jb divl mov jbe aaa pop xchg fcomps push xor out shlb das scas loop test rcrb cmpl mov pop sub pop lret cld xchg fnop mov push xchg inc xor into sbb xchg loop pushf std loopne (bad) cmp rcll sbb mov sbb inc xchg into lock test lock and fdivrl negb lahf sbb (bad) js dec movsb xchg jle aad xor jg in xchg cmp insl int3 inc out imul jle adc push sbb xor mov push aad icebp sbb test cmp call adc js xchg sub dec inc dec sub dec aaa mov pop lods mov sbb in hlt mov mov adc jae jmp scas imul jb mov ret icebp sbb incl cld repz shrl jae in mov bound cmp cwtl (bad) sti sbb sub sbb enter orl insl or jge fwait lret ret pop push pop (bad) icebp add scas mov aas adc push push mov and movsl ja jg in mov mov cmp mov jmp test fs je adc arpl cmp sub lcall cmp sbbb pop cmpsb sahf adc pop mov fdivrs ljmp js popa ds xor and aad sub (bad) fwait mov pop dec sub push xor jne push out inc addl push inc fbstp pop movsl mov test sub paddsw xchg adc pop cmp cmp in xor jae or rcrb xchg jnp insb pop sbb clc in mov dec xor jne data16 xchg push sub lds dec xlat pop mov fidiv rol jbe inc jl ret inc (bad) aaa test pop jl mov adc (bad) mov push push scas bound sbb loopne cltd aas cmp mov fmul jle mov fs lahf stos fs xchg mov aam imul cmc or stos jnp mov add mov jmp scas cld in imul cmp int3 ja and jle push adc out iret adc mov sbb leave push test mov sbb jbe xchg adc jmp lret xchg frstor insl pusha insl xchg dec sbbb jnp flds sub push aad test jecxz sub adc sub sub das mov jne push jae and mov subl rcr stos or mov test in inc cli faddl das and or push ja push jle scas gs fsubrl aad or dec xchg cmp lea add cwtl dec les ret mov mov dec ret xor clc mov mov pop mov lods xor out (bad) ret dec jns mov data16 shl stos cmp push fnstenv hlt lcall adc cmp gs shlb xor mov xor xchg jo push lcall cmp rcrb cmp int3 mov stos pushf add cmp mov stos mov adc mov lret into cwtl pusha and sub pop ljmp test movl (bad) dec mov jns out test ss add inc add outsl jbe ds adc ret clc adc or xchg mov (bad) leave add or call hlt dec aaa jnp jmp jg out in lock cmpsl pop or xchg push xchg pop push into adc stos mov inc fwait or lods push scas push jnp aaa (bad) sub inc sbb xor repnz jle xchg inc add or sub xor add jae mov jnp lret cmp pop int3 lods iret repnz jp pop lods xor shl mov enter push jmp dec lock stc mov into jb std or sub cwtl or roll bound cwtl gs pusha mov jecxz mov cmp push loopne icebp mov adc and dec hlt clc gs leavew cmc enter arpl daa dec stc pop adc push mov xchg sbb aam jbe neg shlb clc inc addr16 cmpsl jne xor lahf push leave or xchg aam mov insb push sbb sbb pop test loopne cli sarb mov or mov and mov or adc xor cs jge and xchg sahf movsb jbe mov mov dec xor in popf lods add lahf scas lret push jp int jb dec xor in or fabs or outsl aad add jns fcoml push aam sbb dec imulb mov add xchg sbb pop pop sbb push scas cwtl and add jb cmp push push cmpsb arpl bound cwtl adc adc aad push jp or mov out inc enter pop sbb mov xor sub add or adc (bad) and js dec inc cwtl cmpsb pop xorb pop xchg stos lds je mov mov mov aad push pop mov ret inc pop (bad) sbb scas loope dec sbb out dec pop mov les mov mov mov sbb inc aad cmc cmpsb and mov dec adc mov cwtl mov or adc and icebp js mov (bad) jno xchg fidiv add fdivl sbb mov popf cmp in fninit rorl loop ja lret and mov pop adc loopne sub subl negb inc dec ret call xchg aaa push movsb ret js and fistpll stos shrb lods sti pop sbb test pusha add lds sub fildl je jo adc je (bad) mov cmp or or enter dec sub adc mov adc in adc out out enter add inc xchg test xor (bad) jo mov daa mov ds iret sbb cmpsb loopne cwtl popa or dec xchg shlb out lods or cmpb bound jno out mov dec xlat in sub xchg jmp dec popf mov pushf or daa rolb mov stos bound fwait jge jo in jb test mov aad sahf scas mov pop push hlt loope lcall sbb loopne aad fisttpll popa es xor js cs mov inc cld mov aad call in add (bad) je popf mov call sub fdivrl bound sbb jno pop jg enter inc push pop adc leave pop or sbb mov loopne insb jmp mov mov cltd loop loopne or add in push and inc test xor jnp dec xchg adcl inc or cld fs incl or rol xor out dec push dec out sbbb push jg call lret jno mov jl adc sub xor jb inc or mov mov xor mov adc sbb push cmpsb mov popa outsb enter inc sbb out cs je (bad) (bad) rorb sub mov push inc jmp fcmovnb adc mov mov rcr rcrb dec ror mov loope out js les lcall cs js mov in (bad) js cmpsl sahf outsl cmp mov push jecxz scas xchg sbb or adc pop stos push adc push outsl and sarl data16 jns sbb les stc aam pusha push cmc push scas adc in test push in test mov ljmp loope push (bad) sbb xor push pop mov pusha pusha call lea lret test jns scas cltd not rclb hlt mov pop js adc sbb loopne addr16 fsubr int cmp mov scas (bad) fucomip fwait inc lock xchg push mov andb loope inc pop pop inc cwtl add mov xchg test push bound or addr16 push inc mov gs fnstenv hlt lods shr rorl outsl cli push in add imul and cwtl in mov shll push lods aad inc mov jnp in aaa and in sbb lret cmp jb fisubr stos cmp push cmpb mov jecxz jne push sbb pop les xor sub mov test fmull pop lea ljmp ds push fiadd lock inc lahf dec fstl xchg adc js sbb xchg push inc or iret mov dec outsl push adc test (bad) ss dec dec sub sti stos mov insb in dec cmc inc mov mov in idivl in or stos inc push enter daa xor js fucom xor sti loop stos inc daa add push addl pusha ljmp (bad) into mov mov sbbl mov xor in cmp rorb push push cmp outsb mov mov je fildl push enter mov cmp jecxz mov jae sub arpl xchg mov mov cmp cmc cwtl adc outsb in fdivrs sbb clc xchg in mov mov xor stc fdivrl jg pusha test adc xchg dec sbb push popf lret sarl lods jmp fxch jno gs inc movsl hlt inc imul mov cmpsb lcall leave sbb pop or push sbb inc fstp fidiv dec adc ret test adc adc in bound add loope mov pusha cmp sti mov clc xchg add out push (bad) xlat rcll insb insl push sbb dec mov mov inc fdivl pop adc lds dec adc pop mov push and inc dec dec xchg sbb orl repnz fdivrs or mov stos dec mov jo por repnz inc ja jmp add cmpsb dec movsl push scas pop in add enter sbbl adc adc inc imul divb loopne jecxz xchg jmp jnp pop enter cmp popa mov push jecxz sbb adcb cmp inc leave cmp outsb mov aad mov mov lcall mov enter jp fs mov pop js push fst mov sub mov (bad) jns out push insb aad jp adc jp out jp push scas iret jno or sbb aam jbe dec stos hlt rclb frstor ret jp aam (bad) icebp adc pop mov stos add insl xor (bad) test dec out push scas movl push roll (bad) fnstenv (bad) push add sub addb frstor push lds add adc mov sbb imul ja lods loope je add or mov push frstor and fstpt jo addr16 aam jnp ret sbb inc (bad) jle xchg bound xchg adc psraw lds sahf and test pushf and xchg arpl aam mov je data16 dec pop flds in xor pop and pop cs (bad) popa mov cmpsl faddl bound sub push (bad) mov std in xor jmp mov out push mov or mov loop in int3 into xchg or pop mov icebp inc mov mov cld vhaddpd ficom jae adc mov int3 sbb (bad) cld jne popl in icebp (bad) (bad) cmpsl sub scas enter mov addl and fldt inc sbb sub pop mov or ficompl out push dec jg out lds in push lock in xchg push (bad) dec ret mov adc je mulb mov insb add xchg (bad) jp mov rorl test je movsl in stos and inc cld pop pop je add stc dec lea shrl push xchg sbb mov push adc rolb fdivrl mov pop jmp out push imul mov mov pop lret cld xlat in push push mov pop dec inc shll inc js push mov rclb sub xor mov jbe scas jns mov pusha jbe movb cld pop movsl (bad) js enter into aas je in xorb out aam out test jno insl (bad) idivl fcoml pop arpl in dec sbb xor int add aad pushf arpl lds ret js mov dec and jb into stos inc inc rcrl lcall jmp sbb mov push leave in adc jle in cltd mov push jbe mov loopne jns cmp int lds adc mov mov stos cmp adc mov (bad) cmc shr inc ret nop mov loopne or cmpsb imul rorb xorl scas cltd sbb mov xchg add and adc adc jnp xchg or lock and and mov lret pop xchg shlb lods addl or mov call mov sub je jle push pop or adc or pop mov jne push inc movsl mov push fbld sub mov enter in test and jnp pop pusha cmc pop push enter fdivrs inc mov push pop push jb out (bad) xchg jp aad push cmpl ja aad inc sarb int3 pop and mov sub in test push add out sub scas test lods (bad) cld sbb pop cmc pop test xchg in sub and add add push aaa lock pusha inc sub cld cmpsl push aad (bad) (bad) mov add adc cmp mov pop xor pop add xor pop or movsl lahf ss or mov jnp fiadd pop xchg mov aam xor sub addr16 imul stos pop leave or (bad) leave (bad) pop inc sub or (bad) mov and inc add push mov in ret adc xchg cltd xchg push out icebp sub lahf xor dec scas dec mov xchg ret mov and jae dec icebp pop cld movl and pusha or test daa push shrl ljmp icebp bound (bad) data16 xchg pushl cmp rclb or fsubs or popa jno,pn aad clc mov add out push mov es popf cmp in cmp xor (bad) aad cs mov dec (bad) xor cmp aam data16 jns or lods lods aad sti dec sbb ret shlb in (bad) popa inc xor inc cmp fnstsw fbstp lcall lods test les sbbb test xchg fldl jmp gs mov adc (bad) hlt shrb jge xchg pop mov jbe mov sub xor cmp data16 fsub es arpl negb (bad) movsb add sahf cmp insb or addr16 fucom loop mov ret cld xchg jl dec aad and jno sub mov into cmp jp into and into les es mov sub fcmovne or mov shrb mov out lret insb dec mov jle adc dec (bad) int3 cltd (bad) out pop enter int3 inc cmp pop out ljmp xchg cmp jbe mov ret push enter xor stc or sti loopne shrb cmpsb pop xor in fstpl push ret push sbb sahf (bad) je and mov cld out add mov ss adc lods pop xor and mov movsb xlat mov push arpl sbb fsts mov mov aas sub mov adc loope sbb or push jp mov pop xor sbb adc mov pop jno cmp jb hlt cwtl cmpsb jo test ljmp test push pop iret (bad) xchg add jno push lods xchg ljmp les insb dec cmc push lods cld or jmp push nop adc push (bad) outsb int3 cs mov xchg mov mov rcl or inc test mov jge adc fucomip jno fldt rcll xchg (bad) pop or sub cltd rcrl add mov cmp bound orl int3 addr16 addr16 push outsl push fdivl mov sbb push in or fcoms mov adcl arpl sbb mov or inc in or lock in clc aam lahf insl push scas int xor cltd adc xchg fcoml sub cmp les pop jg mov jns xorb ja mov jne sub cmp mov push bound jle cmp pop sbb pop loop mov insb clc pop pop push pop mov enter push mov or fcomps ja lahf add fld mov inc cmp fsubl sub in sub rolb xlat sbb pop inc mov aam xor outsb sub pop xor rcr dec jbe scas int3 loopne inc (bad) (bad) stc lds sub mov push xchg test icebp dec ffreep jg sub mov inc fwait jne je cmp pop jecxz out and stos (bad) or push dec loopne sbb push movsl addl mov or lret test add or dec xchg insb (bad) jmp pop xchg int (bad) adc cmp push mov iret lret inc nop imul or rcrb rcrb pop outsb pop loope mov loopne pushf xor push jnp dec xor jl mov ja orl mov scas mov fmull (bad) mov cmpsl das push (bad) enter jl (bad) cwtl lods (bad) xchg and or xchg mov clc or and adc clc xor insb fsincos and sub jnp movsb aad es (bad) inc arpl aad aam ret jb in scas add mov push add sahf outsl mov ffree jecxz xor roll jecxz cmpsb add push outsl inc sbb lods sub mov pop cltd mov dec jnp leave in jecxz (bad) fmuls popa jno rorb mov ljmp insb xlat jmp inc popa push mov sub jnp repz test lret jbe add mov loope sub mov mov add inc fstpt stos push pop jecxz or aas dec not jge (bad) adc jge inc mov test push es pusha jge mov clc push and (bad) fisubrl mov insl aas inc jp bound ss shl popa out and dec or stc pop popa mov aas (bad) mov dec and (bad) bnd movsl outsb or mov test std lock jno push test aad outsl mull jb stos mov mov inc imul ficompl lds test or test daa lret xchg (bad) leave jne loop push dec xor sbb mov (bad) sub mov mov int3 push sub mov jp leave dec sub jmp dec jne xchg push add mov mov cwtl and arpl bound stos movsl mov push xchg aam orl xchg sub test sub cmp mov lods adc sub xchg je fstps or cmc scas jno cmpsl loope jl xor (bad) xor pusha mov jp jae (bad) or sbb (bad) jno (bad) cmpsb dec ja test sbb dec aaa add inc orb incl mov (bad) sbb xchg fidivr loope in lea iret mov inc cmp jb cwtl and sarl pop scas mov mov loope insl cmove (bad) or fisubrl sub sahf jp fsubrs loope pop add cld jnp cltd in and (bad) js lds inc inc lods pop push adc pushf sub cltd mov add out mov es and (bad) jmp (bad) (bad) std test push iret cltd cwtl mov pop jge into enter loopne jmp jge fmull sub mov mov mov xor call dec aam inc sub pop incl loope fldl mov in cltd mov inc mov ret and pushf pop sub cmp repz add cmp or (bad) xor add cltd lods imul cs xor mov lret rcl sarb (bad) mov push scas stos enter imul fdivl subl xor std or push leave mov push clc xchg mov (bad) mov int sbb lods mov in popa pushf xchg hlt cmp xlat movsb cwtl pop jge mov lods insb out adc inc jp add (bad) mov cmp lods add ror and test add jge xchg sub xor add mov and xor sub leave fnstcw add aad adc (bad) cwtl dec loopne add xchg xchg mov out cmp outsb loopne add jl sub push (bad) rcrb adc mov adc std dec bound push repnz or imul mov cmpsl aad pop inc scas lret ret inc pop fsubr pop cmc repz mov pop call loop out insb popf adc sbb adc out flds xchg (bad) fsubs jno std add mov rorb cmpsl rolb jne fcmovnbe jb mov or xchg dec jbe and out adc mov mov sbb negb pop scas sub sbb fmul push test push pop pop ror push std jnp pop jb fisttpll jnp push pushf or xor imul push jb or pop dec sub cwtl mov in xchg (bad) aam add xor cmp add repz push cmp (bad) nop cmc sbb jb add sub fst int3 sahf fimull hlt aas push cld icebp int jns mov or in xchg mov push sub jae dec std in jl and push dec popf jp dec mov out mov nop in adc cmp lock ljmp jnp in sub dec inc out xlat or fwait jb push int push rcrl mov jbe scas xor fidivl push mov mov and add add adc popl mov outsl pop lods adc or jge popa push pop jb je sarl pushf jecxz sub mov sub sub leave xorb inc jnp mov xchg cs outsl inc and loop push lret inc push jns cli mov jnp mov push out jno push pop loop test mov dec xchg js add mov or addb fstpl cmpsl adc mov push (bad) fidivl rorl orb push fdivl jae pushf xor ljmp imul lods xor movsl pop mov push push or sbb mov (bad) xlat sbb mov sub and repz nop inc pusha hlt idivb test fs cwtl push push push cmp push test arpl ljmp nop iret pushf push mov and aaa push adc out test inc add sub shr add std push cmp jl std push sbb fistpll push xorl hlt xor stos mov cld call clc mov jl push stc mov mov xchg or sub mov sti std into (bad) iret mov xorb mov lahf jl repz xlat lock pusha add cmc pop adc lcall pop cmp mov push sbb adc cmp adc pop hlt (bad) negb xchg shlb sbb hlt inc aad lea push negl js adc jl cli cmp cmp fnstcw gs inc rclb leave dec lcall push sbb mov enter or jg (bad) mov fwait mov divl andb stos fmul (bad) mulb cwtl mov jne negl roll ljmp ror sbb jne and xorl ficom push dec lods aad pop pop mov sbb inc je aad inc int3 xchg inc adc pusha push dec add pusha test adc ret mov xor pop pop (bad) leave or gs push jo (bad) jl mov push sbb int jo in pop mov pusha mov and (bad) nop jne inc loopne inc sbb insl push jo mov jecxz jge (bad) bound mov fisttpl push mov in pop std loope lret sbb adc ja in dec fcoms fs adc push push test and xlat sbb add imul dec jl mov pop sbb std fistl clc fmull imul jae sbb data16 pop add aam push repz into jmp dec sbb add dec int3 scas stc cwtl setl inc xchg jecxz jl mov cwtl pop int3 xchg shrb dec jo push jle jb jb (bad) adc pusha push jno push inc minps cld mov xchg dec push mov into roll push insl lds lock pop loop mov sahf adc sub dec nop fmull adc push test jnp clc scas ficomp mov dec out ret in sbb xor push xchg rol jb and stc stos jmp gs inc jl pop call gs inc inc out pop jbe mov ret inc fisubr dec insb js dec je pop adc jp mov sub or in push dec dec mov pusha jb test pop adc cli inc sbb in fs in jo mov jecxz jl mov inc sbb std fstpt stc jbe mov ret jl js dec add push jle sbb inc adc shl repnz lcall mov int jne cmpl lods mov add mov (bad) sbb jne jbe cmc arpl in and clc push sub cmp adc mov aas dec rcr add mov scas pop call mov mov jge rolb jo aad push pop repz sahf cmp lock push shlb jbe out sti push fsubrs inc jo loopne out jno out ljmp xor jecxz das mov int3 in mov cli cmc cmp cld and movsl fsts (bad) mov dec mov icebp and sub sti hlt fbstp outsl xchg mov adc xlat fwait jae xchg pushf int (bad) xor dec adc mov mov jo rclb cld mov fstl mulb cwtl and mov (bad) pop add pop icebp mov pop cmp push (bad) mov dec jmp stos sub cmp (bad) mov and push adc cmp hlt negb sti ret fucomi std daa fnstcw and mov pop add lret inc inc mov add ja shlb push decb jb test push aam nop andl icebp psrlw or fisttpl nop sub (bad) ss fwait ret imul pop scas xchg inc pushf flds fdivr icebp test (bad) pop xor cmp lret jno cmp jg cmpsl pop aas and in or inc subl mov mov adc adc dec cwtl ds hlt out outsl jp xchg imul adc adc int3 inc daa mov ds xchg std nop (bad) dec mov push pop cmpsl adc pushf inc gs mov jmp inc test fwait icebp call inc dec ds sahf push dec xchg arpl nop fldenv sqrtps add lea mov (bad) pop inc arpl dec pop sahf push adc push mov daa ret pop sbbl pop mov xchg sub cmp lods leave jge outsl pop push lret dec and xor fnstsw pusha jle adc pop sub dec jmp decl xchg pop js adc push jl iret orb add adc aad sti xor cli dec ret mov xchg inc inc ljmp inc inc je mov popw scas pop pushf xor or xchg xchg mov (bad) sbb (bad) int out jb inc mov aaa fs or xlat push test xchg adcb cmp int3 mov (bad) insb pop out jbe stos and and data16 insl and push cmp clc sbb xchg gs (bad) and mov les and stos out loope or clc pop jl push out imul sbb stos pop (bad) mov popa lods xorb mov inc pop insl xchg jo mov jecxz jl mov push adc inc push jne inc push fcomps push insl insl jo jns movsl test xor js clc inc jp mov mov sbb mov mov pop jno cmp int inc mov pusha idivb mov sbb inc push fild xchg adc fidivr mov or inc js loope test stc mov cmp repnz movsl fistpl out in jl out out adc mov mov ret jo loope dec adc or xor mov ret (bad) test cmp fild adc jo mov jecxz jl mov jle loopne adc hlt aaa inc mov cmp jp mov xor mov push mov xor (bad) sbb jns and add into les mov dec mov call pop dec mov or xlat pop clc inc mov stc data16 cli sub cmp bound fstl repnz call data16 insl pop xchg push mov fs into jns pop repnz ljmp sbb jns dec clc out and icebp sub rorl leave loope pop enter cwtl push shl xor adc js push mov jmp mov dec icebp cmpsb lahf jns rorl fs push dec cmp cmp or pop add push pop sti in xor xchg inc repz nop fcompl cmp mov lea and (bad) mov pop cld mov cmp imul mull fs adc mov or xchg sub (bad) push repnz add mov and dec add loope stos push mul lds pop (bad) fstps stc scas loopne and cli jecxz cld lea add dec cmp popa push sbb xchg lock pop fsubl lret and rol je pop jecxz in pop adc xchg adc fwait pop loopne mov cmc addr16 pop pushl jne int3 aas push imul cmp add xor je inc jg mov std std icebp dec cltd or rorb cmp push lods cmp loop lods sbb pop out sbb out (bad) (bad) cld or sbb iret inc stos jl fidivr cmc nop loopne xor jg mov sti push icebp (bad) sub (bad) int xor test mov mov movsb and xchg lcall dec xor cld adc pop iret scas push push push icebp fwait and sub sub mov jne mov std fwait pop flds dec je mov and mov xor stos pop and jo sub push in push es dec roll jge push jbe lods out out push popf push loop rcl loopne inc loope inc imul repnz imul and (bad) mov iret dec fisubrl push pop jg mov out cli xor push lret cli add rclb cmc bound mov das sbb (bad) mov fist nop pop xchg lods add aas cltd jno outsb nop call cmp out lods mov cmpsb mov test jns out (bad) adc out (bad) sti sub repz sub push (bad) lea or cmpsb out (bad) and push in ret mov jns icebp sub inc negb adc cmc adc xor cli mov icebp cmp test push jo push cmp jmp ds push sbbb fs cld std sahf pop mov icebp push jp xlat push or cmp xchg in arpl in xlat icebp push xor cmc cmpsl sub push imul sub loope mov dec adc ret fiaddl push cmp insl icebp xor repz pop cmc inc insl outsb repnz fwait mulb dec stos xor fidivl mov mov xchg dec out lock pop arpl sub jns sub add aam mov inc (bad) xor cmp out stos je inc pop mov dec sahf lret jmp push sub repnz mov outsl aaa xlat sti cwtl cld cmp (bad) xor icebp sub icebp es or cmc sbb dec repnz xor mov mov and xor sub imull adc scas icebp out icebp cmp xchg sbb sub fcomps dec mov jbe lret cmp es jno icebp mov xchg mov mov dec dec sbb cmp dec pop xchg lods (bad) jae (bad) (bad) cli out jb xchg mov jno push jne cltd addl and adc sti insb fisubr out das sti cmp in rclb fsubp push testl sub jge push bound jnp int3 xchg xor add aam (bad) clc xchg test not std xchg sti lea mov mov out push enter pop jne dec mov mov call fsub stc sub mov cmp add mov in fisttpl jl in add mov jne inc lock aam mov mov jecxz jl mov rorl cmp out push mov rcrb xchg fildl call fwait lods cmp cltd push fcomps bound sub lea in in les sbb leave mov js daa inc stos jge out mov scas xor fcoml and scas or xchg rorb mov jecxz mov dec sbb push jnp xchg dec out (bad) sub out adc cmpsl pop data16 leave or lds or lret sti inc test mov sub leave leave jmp nop mov je adc cmp xchg adc fcomp cmc cmc sub cmpsb pop or push rorb mov ljmp inc xor jns mov cltd ret dec mov insb in mov jecxz push ss cwtl icebp push sub fbstp imul lds ja ds loope imul xor fwait cmp mov test cmpsb fadds or nop shlb insl sbb mov jecxz jl mov ficompl mov sub cltd jge fisubr adc enter loopne inc pop je or jl mov (bad) sbb jns and popf jbe mov ret fs push inc lock push and cmp ret int3 fidiv xor js dec enter loopne inc jp shll sarl idivb ss (bad) pop in sbb pop sub ljmp push inc pusha fcom sbb or shr sbb jno cmp mov je in ret push mov add inc nop fmuls cld insl gs mov (bad) out int cltd inc sbb stc fnstenv fnstenv (bad) ljmp push aam jp (bad) jb fidivl add popa push jne in les mov mov cld pop pop negl ret push (bad) stc idiv stos stos sub js movsb ss mov insb insl fnstenv mov movsl push mov sub push loopne js dec jo adc push inc sbb leave sbb in pop faddl fneni(8087 out pop jbe mov ret sub cltd cwtl pop in push jmp adc lcall leave inc jne test mul out (bad) mov xchg hlt pop xor clc fnstcw pop stc push daa add dec pop mov lods call cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop cld icebp push pop ret rclb daa add jb add jb push dec dec add xchg inc push add outsb sbb das leave add mov in push add in push (bad) push (bad) push add out cmp dec out push add out mov lahf fild push sahf pop xchg repz xchg sbb push adc sbb add add sbb mov cltd repz mov and out push add inc add dec (bad) push push lahf outsb (bad) jmp sbb nop out out je push (bad) fsubr push add cs mov nop out into jp out push add es add out addr16 add out push add jns loope jns loope ljmp push out push add mov xor outsl xor repz nop and insl jp mov xor mov nop out push xor repz lock lock mov xchg rcr out test cmpsb adcl xor (bad) cmp ljmp out inc push nop lock mov xchg rcr out test cmpsb pusha dec fcom sub nop out fstp (bad) push add lock mov xchg rcr out test cmpsb pusha dec scas out in adc push add das mov out hlt sub mov push add out push xor repz lock js mov push out aad nop popa js nop repz add cld adc test xor pusha in push add out mov jns fadds call insb mov xchg bound mov jns fadds out push add xlat mov mov mov inc imul dec add les pop push mov push out pop out mov xchg mov imul pusha xor iret xor pop mov fcmovu inc (bad) nop xchg sbb push cltd or mov and outsl inc jb inc out movsb mov add inc ret pop push and loope jne js pop add inc movsl push cs aaa ret dec into or cmp xor popa dec sar lea fldenv cld lret gs lret orl outsb dec loop push inc add xchg push orl sbb (bad) fnsave and lods ret mov mov mov lods fisub enter outsl icebp or fiadd jne adc mov inc jmp fldl cmp xchg shrl arpl aad adc push adc add xchg subb mov sbb ss dec cmp outsb mov das cmpsl sub popa jnp mov in outsl jnp idivb mov fsubl (bad) ds sbb stc call (bad) and shr and pop push ds hlt push jno inc sub leave mov das ret sub ljmp jbe ficom push mov fucomip sbb test inc adcl mov xlat sub sub jo xchg out or mov stos (bad) (bad) cmp clc stc inc movsb xchg sub cmp sarb fdivp and pop js shr push push int dec fdiv pusha es pop lock out push sub add jmp shl in ljmp (bad) ss inc push cld es mov imul lahf xchg in jge pop leave add cli jg mov nop into lds dec push push add sbb outsl cli out loopne inc outsb pop in addl negb inc arpl jo arpl or pop xor sarl mov jg subl fcmovu sbb or mov mov lret add mov inc adc mov sti add inc pushf push fidivrl adc or sub dec imul sbb stos mov xchg cmpsb push cwtl inc sbb fs dec jmp mov add lret cmp cmp xor or cmpsb pop mov (bad) jbe push fucomp mov rorl adc sbbb xchg aam pop cmp les loop (bad) in (bad) jmp and out test out mov and int movsl cli sbb lea mov scas call test pusha or mov jo sub xor jmp icebp jo add or and push adc enter cmc or jnp xchg xor jne (bad) pop fstp rcr mov inc cmpl sub mov sbbb jno dec icebp push (bad) xor repnz inc and cs jns xchg cmc mov adc or adc fldt pushf repnz test loopne inc push jmp jecxz jne jb and lds xor jmp jecxz fimul mov (bad) lds xor push push push lods and fildll icebp sub xlat push push aad ljmp negl movb fisttp nop jo sbb or test xchg fimull jp pop lret call popl mov and cs and xchg xchg adc outsl repnz scas cmp pushf dec jne hlt xchg shll dec jbe xchg dec or push sbb mov mov sbb rcr or outsb repnz mov sarb insl (bad) pop or mov iret adc jp cmpsl sarb push orl push cs cmp adc out jae repnz add jp sub push push popf xor and and fimul add dec xlat xlat xchg add and outsl ss jns out sub lahf outsl loopnew mov sti outsb sub in arpl or mov mov cmpsb movsl jne stos cmp insl mov jp and add inc dec mov push imul jecxz jp jo xlat imul icebp repz insb nop stos std in mov in and cmp (bad) icebp rol cwtl lret jb rclb dec ret push mov arpl mov pop test imul xchg (bad) sarb (bad) mov fisubl cli out aad icebp es icebp inc lea lret rep in movsb cmp sbb in xor adc sbb jp outsl mov outsb or rclb fist mov dec mov push insb out aad inc jnp rcll dec (bad) cs sahf fidivl pop xchg insb jno loope push or mov push cmp push cltd test cmpsl dec cli stc fldcw push sub jo insl add sbb test cwtl xor inc call test lahf repnz sub add lcall daa push jne sbb insb push jp icebp fiaddl aad push movsb cmp idiv push rolb call mov stc add sbbl cmp (bad) jge loopne mov jne mov ja insb xchg jo cld mov insl push xor cmp pushf xchg aas data16 mov (bad) adc stc jne and aas sub icebp call xor jo add scas fdivrs push pop or jmp inc sub jg jle popf inc and mov push and insl outsl dec mov mov or out xor or push dec cmc mov hlt dec fsubl push repnz call outsb jg insl add push mov into push insb fsubr pop dec or or icebp jge xor mov inc scas inc (bad) es push xor xor in (bad) loop xchg mov scas mov cwtl sub sbb add pop incl sbb mov add add nop pushf mov hlt bound adc dec cmp call xor pop cmpsb cwtl cmp sbb mov test lods push xor loope daa movsb in fadds add sub inc mov (bad) call (bad) cmp mov mov sub mov jns mov movsl adc loop imul imul sbb mov inc test cmp push mov pusha decl scas repnz jno insl in fdivs insl mov sub divl shrl stos or in nop jo (bad) xchg sti das enter loopne (bad) es jb fcom cmp cwtl stos daa and pop addl mov shr dec das test inc dec jp insb jbe push mov (bad) call (bad) scas cmp inc cmpl call xchg jne das scas dec and sbb nop and xor sbb xor mov xor jo mov add fwait ss inc repz push xchg clc mov in mov or adc loop mov ja mov cmp iret jle xchg xor sarl outsb mov lods inc sbbl mov out les dec pop test clc cwtl pop fsubrs sub mov (bad) mov in rolb pop adc dec fnstcw push andl push data16 sbb mov addr16 outsb stos xlat mov aas (bad) mov (bad) jne push lret out xchg outsb sbb outsl (bad) ja mov test into pop pop jne vpcmpgtd in mov leave jne mov push in cmp sub lods mov push xor jnp,pt xchg loop test cmpsb mov gs repz aam fnsave add pop lods cmp adc sbb inc push adc dec dec inc test lods xchg fsubrl adc and mov cld xchg jp outsb adc sahf dec push stc leave (bad) fist mov xchg mov (bad) inc (bad) out xchg mov xchg jo es mov adc cltd ret fnop (bad) (bad) xor (bad) push outsl or test or and sbb sub sub xchg mull lock leave aas (bad) andb jb sbb push pusha push push pop dec xchg inc cmp fmul jae mov pop stos cmp dec sti pop xor push fmuls mov sbb mov subl mov jmp jno leave cli jo push mov jge jecxz dec test aaa (bad) or xchg cs mov xchg add push jne inc call test fadd fisubrl cld mov ja ljmp xchg xchg pause loope fwait adc daa jae add out mov int pusha test adc pop xchg and call xor xor lods adc popf int3 ret jmp gs sbb xor rorb pop imul mov and add push cli lds pop outsb cmp sbb xchg aaa lock lds add sub repz or ss aaa cmpsb sub mov in test ret add imul adc sub xchg pushf xchg push arpl repz adc std pop ljmp imul repnz inc jp mov movsl xchg inc rorl ja xorl xchg or out pop cmp (bad) fldcw out rclb out mov jae js sbb arpl lcall sub xor push sahf je add dec call inc inc sahf insl or pusha xchg cmp (bad) pop push jl xchg jmp into lea xchg clc adc fidivl xor (bad) xor inc mov out pop cmpb and iret add out xor testb pop cmc cltd jle jb,pn cmpsb hlt adcb into inc mov mov das pop xor xchg daa out ja pop insb shrb fwait pop mov xor mov xchg adc push pop popa je mov in movsb xchg xor xlat jae xor aam pusha xchg jae ljmp inc mov scas push and cld bound mov inc jbe je outsb mov fldz incb movsl adc push scas xchg lock dec pop out imul dec addb rorb inc loop aam ljmp lock pminub iret and mov fidiv jae and mov mov add aad push jmp in dec fadds and jecxz cmpsl sub mov jg loop insb leave cli xchg dec hlt ror mov adc lock mov fstpl jmp and clc es out mov dec out mov in sub adcb sub cmp js or pushf dec aas fwait push jo addr16 lods or mov xchg jp pop inc and mov ljmp xor repnz sbb ljmp orb jbe sub push mov cmp rorl push pop les jno pop enter add jmp ss add fidivrl inc mov pop fsubrs push sti lret out in insl shlb and mov aas inc add jle stc push fiaddl bound inc arpl maxps call imul or dec sub push imul aaa lret sbb sti rclb mov sub jge sub mov sbbb enter pusha push sbb lret popa addl outsl add addr16 js clc mull pusha jns dec (bad) pushf mov push sbb jne std stos xlat rclb aam mov mov mov in cmp add or das push in test adc cs mov mov mov es add cmp add push js xchg hlt fsub pop or sub pop or (bad) andl jge ret cltd outsb sbb xor xorl js lret push push add repz mov mov adc mov push popl or (bad) jno lcall jl inc out add sbb sub movsb mov test incl popf nop pushf or mov outsl fstl jecxz add (bad) stos loope jne inc xchg mov push xor mov pushw pop xchg inc sub cmpl add rolb pusha test ret aas insl adc imul mov test cmp js adc pop leave insb cmp stos loope daa mov xchg cltd mov push xlat sub fcompl mov xchg call test lret mov adc pushf xchg xor xchg fnsave decl pusha (bad) clc xorl or pop mov sarb dec sub rorl inc cmpb jne in repz mov xor aam or icebp cmpsb js push addr16 fisttpl sub pusha inc fnstsw or ret jns push xor xlat and cmp or push mov idivb dec js add xchg sbb aad inc xchg pop mov mov test jg shlb cmc insl int3 loope cmp lahf aaa clc ret jmp add xor shlb or push sub les pop sub shlb out popf movl push push test adc clc inc test (bad) pop mov jge popa sub adc mov sbb inc sub out lcall or inc dec adc jns jns dec lock enter mov or sbb lahf imul cmovo push adc sahf aas dec jle add stc loopne xor into adc cmp push xchg nop and mov nop mov pop or inc out mov lea add dec add inc pop icebp dec popa mov xchg mov mov add cmpl add inc mov mov push xchg in mov pop popa sbb fs and addr16 bound cmovge rcrb pop in xchg pop push jle loopne add sbb xor and js add les inc mov int3 jo mov pxor sub aad push push ffreep ds fldenv pusha int3 push mov or cmp push add or lret sub add mov pop add xchg cltd sub nop or aaa (bad) (bad) mov jge sub add xor add jge add idivb mov add fimul dec xchg movsb xor sub pushf aad mov push lock dec loop add add jecxz lock mov xchg sub clc add das inc mov sub push add enter in xor adc pop mov rorl pop add in pusha mov xor mov xlat jl add xor mov pushf push jp sbb mov andl test mov add jb mov jp jg or lret or pop xor inc or lret pop icebp cmp pushf adc (bad) outsb inc test nop es add mov popa dec and in add add adc pop jb add sub inc add sbb sbb push pushf addr16 subl and pop sti mov arpl mov mov loop enter pop and js nop pushf in aad add (bad) adc lea lods ret clc in xor mov or (bad) (bad) adc add out xchg test aad add sbb fdivl in cmp fiadd imul push dec sub lds test xchg adc push inc frstor sub jmp pop cwtl aaa jo fsts in out add stc lock push outsl std mov test pusha scas fldcw clc mov xchg gs loope,pn popa add dec sub sub or lods pusha push mov mov mov lock enter fistpll outsb imul js ss sub sub inc loope inc pusha cmp add popl mov xchg orb mov daa pop dec popf mov adc pop repnz push adc pop sti fdivrl xchg sub call outsb or inc aad repz xchg rolb pusha lahf or (bad) dec mov add enter xchg sbb xchg jl or pop faddl repz (bad) mov adc stos sbb and mov push xor sub push je cwtl inc or inc pop mov sbb movsl andb cmp dec call adc nop nop icebp sub push jbe das mov cmp lahf mov pushf mov lcall push adc cs add js sub insl in add aad test ret jmp push cmp cmp and aam or jb (bad) (bad) in lods add loopne daa mov add (bad) cmp push fsts imul push pop jmp jg push scas xor jp cld sub nop pop iret adc ss incl in add shlb dec xchg js stos movsb cwtl js pop adc mov jl mov cwtl (bad) sbb mov loop in lret popf xchg repnz push and aam sub add loopne dec sub mov xorl add fcoms sub lret jecxz ds pop pop adc mov pop movsb xchg imul jo mov add pop daa push fmull fs adc sub sbb or (bad) jo mov fidivrl mov push popf xor es sub dec mov in lcall shlb jb add mov mov or sahf dec inc sub dec pop (bad) mov pop dec js xor mov sub mov adc adc push rcrb repz add mov sub push cwtl pushf add mov and pop fistpl mov (bad) into xor and sub add hlt inc adc movsb pop jbe leave add in fwait mov jno insb xchg lods add dec bound or outsb jnp cmp jns loopne ficomp fnop cwtl adc pop push jmp add mov mov js pop data16 repz insl push inc roll test fbstp push cld loopne xor js add or add repz int3 cmpsb add aas pop hlt pusha test icebp rolb outsb jo cmp pop xchg les nop aas add inc pop mov jg test dec fcoml data16 aaa xlat sub in xchg loopne pop lock out les cwtl add xchg inc pop stos je pop test mov repz loope pop mov cmpsb out subb push mov push sbb iret and je xchg sub and lea (bad) bound lock push ret lds push sbb sbb mov test push pop lods pop add mov mov int3 sub mov ds mov xchg data16 xor movl scas (bad) mov mov dec cmp stos push add add aaa add fcoms inc mov add stc (bad) cld adc mov jo out mov test movsl daa movsb push or add dec inc in adc pop or nop rcl sbb fisubrl ja js rcr test lret inc jae sbb mov cmp pop jg dec or cmp loopne or out xor mov xchg and xor sub and push jp in jmp pusha mov loopne mov pop aas mov add aad xchg xchg fcoms xor je and dec outsb std push aas push lods mov xchg rclb dec sub addb or fdivs sbbb push xchg xlat add or notb pushf fsubrl sbb cmpsl inc pop pop movsb add out fstps enter std sub xorl push test cmp movb inc movsb out lods or mov stos pop adc cmp xchg sbb clc pop mov sub pop add je leave pop or int (bad) sbb daa add int3 mov xor adc cld jae mov xor cmpsb dec stos ss popa add cmp fstps xor or lret sub jns cmp dec in loope xor or jnp adc add and add pop pop loope push scas rolb ds mov mov popa sub pop cs nop pop adc (bad) arpl add adc mov popf cmovns lds push mov loope pop ljmp sti jbe pop aaa add push and xor stos mov adc adcl mov push mov (bad) ficoml push mov in add xor pop ss push or in pushfw mov mov add inc add xchg (bad) jl xchg add inc fidivrl cmc sub add je sar add jns pop (bad) sub xor mov lret jb jg ss adc add roll ljmp fist sub add addr16 or lock mov add cmp loope out add nop aas mov fldl pop mov stos bound je or or rorl loopne fdiv imul clc jo jmp sti sarl mov jle mov and sahf sbb fsubs popf test int3 mov popa lea xor sbb cmc dec repz cmp movsb dec outsb nop hlt out add gs in mov (bad) lcall pop dec xor in cmp rcrb fxch enter xchg daa sub jmp sub addr16 push pop (bad) mov xchg inc or inc lods cmc xor js mov or clc (bad) push and or cmp arpl into jge cmp cmp adcb loope inc out setb pop inc or sbb mov test or nop flds (bad) dec cs pusha pop pushf rolb (bad) in and popa sub xchg cli mov (bad) in jbe xor rolb (bad) leave xor outsl stos mov cli popa lods adc jmp add movsl incb out xor in add and ss test add (bad) data16 mov cmp into adcb or adcb js or cmp test xor cli cltd test push add mov leave pusha mov inc flds xor jmp xchg cwtl and out les fmuls movsb or (bad) lret sbb pushf lahf je jg add arpl and jg adc rcll push lock jae movsl push dec mov adc mov enter adc sub (bad) xor and pop sbb xchg fnsave push dec sub in adc out push xor inc sub xchg fs es lcall popa (bad) jmp pushf xorl xchg pushf cmpl inc sbb add adc xor pop stc xchg cmovb cmp sahf ja jns lret jno incl lods inc adc bound and sub and jmp pop and lock sub lcallw subb cwtl icebp xor mov inc mov mov inc jno jns push fisub in pop mov stc cmp stos cmp inc repnz lock jo xchg or test icebp adc push add popa inc pop fstp les sub cmp xor lea (bad) or inc mov sbb mov push add cmpsl jp and cmc sub cs pop addb sahf pusha inc add push fisubr push xchg or repnz cmp sbb test lock fisttpl mov into and or and pop popa les cmpsb or shlb out add mov sbb jb or mov cmp add dec out add dec sub (bad) and (bad) sbb lret adcb add lcall aam xor jae push (bad) cwtl call lcall cmp sub (bad) fucomip mov push lret (bad) pop sbb leave sbb loop xor inc shrl mov mov push dec or bound les fdivs or fistpl mov stos mov and scas sbbl test jmp adc xchg xor or dec jle add cmp xchg sbb lock lcall lret add add (bad) js or sub lock movsb sub inc test cmp (bad) jo xchg pop aad inc test into (bad) icebp adc pop sahf test sub sub push sahf and arpl aad dec insb adc out das adc or lock sbb add (bad) jmp dec xor rorb aad sti add and add insl test enter or add subl outsl cs dec loope or mov movsb add mov dec add mov arpl (bad) rolb not mov ljmp sub xor add lahf xchg sbb daa jmp sub adc xor xor jo mov nop jl lret add add fwait dec adc cmc and scas pop mov ds icebp inc nop xchg fidivr ja and dec sub and add pop aam inc in mov (bad) xor add lds rorb call cmp jp scas bound jmp sbb push mov cmp add (bad) xor pop xor xchg hlt mov loopne adc int3 nop and push mov or gs adc je mov nop mov mov mov sub test int3 mov adc xchg test mov add addl jae add xor mov fmull push (bad) scas xor js ja bound mov mov sub std enter (bad) test or popa cwtl test leave add mov enter push mov leave xchg mov int3 test add jbe push setle sub pushf test adc in adc movb adc pusha roll call push xchg test aas (bad) cmp pop sub scas loope in mov jo mov dec xor (bad) icebp cmc mov adc or int3 imul add add pop cwtl bound (bad) insb and push add add mov push pop pop fcmovnb mov fadds mov outsb (bad) add jmp arpl fsts dec sbb int3 cwtl pusha adc enter xor sbb mov jns out loope push sbb add sbb into pop (bad) push push adc lods int3 mov push adc add les and outsl jo add or out scas enter shrb pop int lret push outsb call test into adcb jns imul bound or lret aaa cli sbb mov gs (bad) call xor pop xchg lea or int3 or orl mov pop cmp les testl xor (bad) mov jne push (bad) sar test or xor jp add add test mov add pop jb jnp adc mov aaa cmp sbb mov lock sbb jp cmp insl sbb negb popa inc rclb and and int3 fs fmuls mov int ds in add vandnpd pop add cmp ds jno sbb inc cmc add fdiv xchg ds pop mov add test subl sbb cld cli out pop and or stos xor fdiv insl jmp sub lret or push call dec repnz stc adc hlt ret fadd sub push sub adc add (bad) (bad) jns test add push and imul hlt into rol mov mov jp dec push in outsb sub jns jle mov incb (bad) dec shll in add sub mov mov inc cmc xchg jg add mov mov int push push sar test aam test sbb sbb insb push adc ss cmp mov (bad) xor and push jbe mov jns mov shll mov push add jp push push jl mov sbbl (bad) mov inc adc add dec jmp or mov fldl int3 inc lods ds xchg and hlt add jno and push std jecxz lods pop pop dec cmp pushf xor and and mov stos sub cmp rclb addr16 xor movsb push dec sub sbb or mov xor aad dec cmp ds mov leave sti cld fsubrs into xlat xchg loope inc jg sbb sub push lock daa clc cmp inc xorb adcl stc xor xchg inc mov in mov imul push pop fbstp outsl addr16 xchg dec xlat mov jg sub insl (bad) sbb xchg lock and mov mov push jns leave xchg mov add and inc inc adc cmp flds test add mov mov cmpl pop rol lods sbb add adc sarb pop (bad) jno bound add xor xchg test sti lret aad and pushf fs and xor mov sub mov adc popa (bad) insb push scas sub outsl mov mov xor (bad) jo push cld sub add (bad) jne sbb test mov adc (bad) fiaddl mov jg or lods xchg popa jns pop enter dec push in icebp (bad) or push dec andb in rclb lahf mov adc call xor lods push inc loopne add mov dec stos push push jl mov (bad) dec test cwtl into not sbb mov rolb arpl xchg jb stos fwait push test fistp jmp mov loope pop push inc loopne xchg and xchg in (bad) adc cltd js jp xchg pusha ja add cmp add mov add cs out shll enter pop dec pop jo pop add ss movsb jp and (bad) sub adc jb nop sbb enter or xchg fwait push dec inc insb aas jb (bad) lods or adc sbb mov inc inc and cmp pop mov (bad) movsb mov add dec out pop fcompl cmp rcrl or sub pop enter pop xor mov dec rclb je add lea or cmp pop test mov cmp scas adc mov lock lods pop gs pop rolb xor (bad) jno dec fs arpl js je add sbb stos ficomp or sub jge bound fistl xchg sbb mov sbb repz outsb add mov and dec fstp dec inc clc push add mov sti incb cmc pop xor scas adc and or (bad) xchg int3 sarb adc sub mov sub pop mov sub sub cwtl mov xor enter fist pop xchg mov lods int3 clc lret and mov push stc sbb mov add xor jmp cld or dec rolb xchg bound rolb orb xchg pushf adc xor les mov sub jae (bad) jecxz loop sub xchg imul mov jns xchg (bad) out sbb call mov push lods loop in add fcoml addb xor xchg mov fild mov inc mov or adc and cmp xchg jp stc xchg dec xor sbb xchg loope and in or push aam lods inc cmp add mov mov push lahf mov and scas out add cwtl ret sbb or push inc test xor inc jg fisttp xor inc add popa mov and enter xchg or out add push xor mov or leave les inc out mov mov stos cwtl add clc lods cmpb or out sbbb push dec movsl aam xlat xor inc push loope pusha call test fs ds clc daa int addb push add lret or push mov xor cld push xor enter mov lods xchg int3 sub mov or inc mov movsb andnps add jmp mov test add xchg (bad) mov xor roll sbb cs push lcall and jnp pusha mov idivb cmp jmp pushf pop sahf (bad) insl push cmp sbb sbb andb push cmpsl add pop cmpl push movsb inc adc test cld int3 pop je test and mov add sub andb cmp dec fisttp test roll dec lahf mov and or add cmpsl adcl repnz leave int jo adc stc scas and test enter jo in add adcb xor cmc add jl,pn dec rorl jnp adc stos int3 push mov test jo add fdiv and inc push loopne rcl add and mov adc cltd lahf mov repnz loop xor lock pop jp lds fwait inc sbb mov cld sbb dec push sbb rclb jl (bad) loopne adc lahf inc cld inc and sub mov imul movb test inc dec stos push test fstl dec das hlt or cld int js adc shrb sub add test pop cmc sbb in in push arpl enter xlat push loopne nop push dec mov mov (bad) add vpunpckhbw inc sub xchg ficom jl lods and adc mov push mov cmp xor int mov faddl mov inc arpl repnz add add mov ss mov stos push dec sbb pop fisubr mov fadds sub bound add jbe or aad mov add ret pop stos bound js in pusha push aas cmp pushf adc shl rcll mov cli jae xlat or int3 dec rcll sub jp test dec clc ds jle cmp adc jb loopne addb subl lret loopne test int3 mov dec test mov dec and jecxz,pn push xchg rolb (bad) xor push sbb int3 ljmp mov mov xchg push les fiadd xchg dec sub mov subb push add movsb sub scas sbb push icebp sub add insb add cld mov sub mov sbb and fstl ja sbb and ljmp and pushf int xchg fsubl inc les int3 sub jo mov lods cwtl hlt out icebp mov sbb pop loope cmpsl push dec das ret pushf fcoms mov pop cltd call mov mov dec add popf enter push (bad) adc xchg add add orl mov lea or ja rcr int3 add clc mov lahf (bad) test cwtl imul fstpt std adc les or xlat xor clc pop dec cs sub adc mov aad inc cmp xchg int3 mov call sti dec movsb adcl insl cmc adc xor and sarb enter imull lock sub or pop cmc fnstenv cmp daa sbb les aaa inc adc popf ret xor mov pushf add push xor (bad) xor test pusha fldenv cs push cli lods (bad) add stc push cmp push leave fsubr adc mov les mov push or xor ss sbb inc mov push pop dec adc push cmpsb fdivl mov pop jb les dec inc sub adc loop dec sbb xor and rcrb out (bad) xor pusha pop jne pop out xor jno mov mov mov fs mov and jns and incl (bad) sarb inc add push cmp test cltd or jo sub test popa pusha or mov jo mov nop lock dec leave sarb outsb lods sbb sbb test pop rorb inc enter sub (bad) adc xchg dec or shlb cmp int3 cmp sbb mov xchg test adc leave pop js mov xor arpl cmp jecxz mov xchg pop add push inc shr orb jl xor cmp ja mov leave enter js add xor hlt movsb add cmpsl call leave insb sub test je sub lahf push push mov roll dec scas sub cwtl inc jbe push insb and dec repz cmpsb test jl loopne xchg xor aaa mov enter add push inc and andb mov popa pushf xchg insb xor pusha mov out ds push enter cwtl inc fiaddl (bad) xor lret sub test fisub mov sub dec pushf nop aam lock dec adc cmpsb xchg lods ss mov in push or xor jo push lret movsb xchg das dec cld aas jns pop sti imul int3 pusha mov or push daa dec lods add and pop sub test push dec sub add lret test (bad) mov dec add test add add bound mov mov rclb sbb lods push push flds jno add mov insb xor es add jo add push jmp aas add sbb not iret (bad) dec jno add xor test fiaddl add les in push jo test add scas inc fisub push (bad) adc int push or je or inc push and add inc pusha int and dec pop cmpb lret push nop mov outsl test fcmovu mov bound int3 mov inc loope mov adc lahf das jae mov fsubl sub add adc or int3 out mov or add cwtl enter push sub sub push loopne test cmp add push cmc and in dec lds mov or mov inc and push or add adcb add ret xor xchg test pop pop xor fucom add ret or int mov cld outsb icebp jg loopne (bad) sbb cmpsb xchg xor andl sub pop adc push mov (bad) in push jns cwtl das rclb and mov subb or add jmp push sbb popa and add (bad) cmc or cmp jo sub push xorb cld addl add insb adc sub out add movsl imul mov loope hlt (bad) xor push out inc mov sbb or ds insl (bad) push xlat call or or and fadds add inc pop mov mov clc js in leave fdivrs add fwait sub fnstenv inc in dec jge es pop loopne int nop clc fs f2xm1 cmp adc mov xorl bound or or rcll push push rorb outsb push leave and popa sbb mov dec cmp jb mov gs jp xchg sti ljmp mov xchg mov leave push inc sub add test outsl pop push mov enter push flds shr dec scas hlt mov hlt scas js je cmp ret jle cmc cmpsb adc inc pop mov hlt fnstenv push or and mov add in cli adc push sbb pop jge pop repnz hlt pop xchg test les lock shrb mov jo fsts sbb mov loope add (bad) inc mov das inc loopne mov (bad) sbb mov in sbb sti jg pop stos int3 icebp push in add gs shr mov hlt pop fwait xchg nop jl dec inc adc push jecxz push dec add lds or repz bound dec adc pushl sbb push mov enter mov dec mov inc xchg and enter and jmp cmp sahf sbb mov scas or or roll sti jae push jnp incl mov mov add rorl (bad) jg xchg lret xchg in and sbb ficom scas add push dec in mov sahf add sbb push loopne or jb adc adc mov loop and in call xlat sbb jg add xabort sbbl pop xchg add add sbb sub add and fdiv add push xchg xchg pop test std lods jb adc xchg stc mov mov sahf inc add sub add movsl rclb add cmpsl add inc sbbb sub add jne jle lret sbb add mov push push push xchg xchg hlt mov andb test psubd les jecxz xchg xlat inc mov push aam adc jne push mov test fld clc lods xchg mov pop add pop test add adc fwait inc xchg enter ljmp xor ret add pusha daa inc pusha add adc lods fsubs xchg sahf inc add movb ljmp mov sbb add dec popa repz or mov mov testl loope pop test andb pop xlat insl pop fwait push cmpsb mov outsb sbb (bad) popa loope sub xor (bad) iret addb test jnp dec sahf sti nop sbb cmc pop ficomp fldl xor mov outsb dec add stc shll pop jae aad add sbbl xchg mov xchg cmpsb dec pop mov stos inc sahf inc leave data16 loope push in add dec pop or add fcmovbe (bad) add mov xrelease sbb jb subl dec adc andb add adc verr push out movb bound mov (bad) mov jp add scas (bad) mov sbb push xor jge xchg fstp sbb mov sbb lods sbb dec inc pop xorb mov dec xchg sbb loopne mov mov jo arpl rorl sbb mov outsb lock sahf loope add int adc test aas jns cmp int dec sbbl and loop stos add js mov sti fistl xchg in (bad) jl push inc iret lods pushf or out inc push fs jne mov lock cmpsl ret add and push fnstsw (bad) pop int stos sbbb bound pop (bad) sbb lret scas and add pop push add pushf (bad) loope ja bound lock adc data16 add dec repnz add jns xor sbb add or test xchg jp pusha cmc jg rol adc add xchg dec mov pop enter cmpsl (bad) sbb push andl pop push cmp and roll loopne and js add outsl mov (bad) mov loopew jb inc cmpl pop lret int3 adc pop in jle xor dec andl push jno in cmp xorb cmc cli test das or cwtl sbb les stos sbb movsl and inc mov paddusb dec mov xchg add xlat (bad) jno add ss push dec or lock or ffree cli push jl push pop (bad) gs inc or adcl mov xchg outsl push das fcmovne inc jo push mov add xchg and mov ds cmp mov pop pop call and adcl xchg add inc loopne push sbb rcrl out sbb dec fnop pop aaa and nop or (bad) xor fsubl adcb sub lret loop push sbb aam cli imul pop test ja or cmp push mov push sub int xor sbb pop add sbb adc jb inc add mov pop int xor add lea leave mov movsb adc jnp shrl aaa enter sub leave mov xorb and mov js je fs push sbb or inc xchg mov cs push xorb push mov ret int3 arpl adc xchg les sub push adc int3 and test mov jp rol mov lods loopne fdivrs and ffree (bad) repz or jg test aam (bad) mov add pop sbb add dec aas lret enter inc sub mov andl lret push or (bad) sub adc faddl orl push lahf sub paddusw add mov movl dec jo pusha jnp add or andl xchg sbb push dec (bad) pop pop hlt mov test add cld (bad) mov outsb xlat sahf popf stos in add (bad) lock dec in scas inc ds or fistp mov outsl or mov pop add add pop mov rcl add adc add jns xchg into int3 xor cld in aad inc mov jl daa (bad) test ss adc out sub test sbb xor adc std (bad) rolb loope mov jne and add mov pusha mov fisubl add sub add rcll mov lret inc mov fcoms pusha cmp sarb sub sub and aam add (bad) mov fnstenv fisttp mov jp (bad) in les inc mov incl adc repnz xor movsb int3 sti cli mov pop ror adc xchg xor and and or lret jb adc mov aam add ljmp push test ret mov in push in sub pop pop xorl xchg ds xchg xor add add pop xor das loopne adc mov or jbe and jno clc lods and stc nop cmpl enter dec fisubrl cli mov and pop lds nop mov cld pop jbe cwtl in scas dec rol aas lcall mov int jae mov lret sbb push loop sub in push popa push dec out or orb data16 movsb in rolb test (bad) xchg popa add cmp insb sbb mov test movsb sahf and adcl push int sbb adc daa clc imul adc add lcall xchg loopne clc dec orl pop sbb and js icebp test dec (bad) mov daa subl mov lods adc push mov lds xor sub hlt out add cmp aam jg dec sbb inc mov push push jge pop in rclb jp loop adc clc mov sbb shl add aad je xor cmc rdmsr push pop test fsubs leave jecxz roll cwtl jo push scas dec in loopne movsb and mov popf cwtl xor insb pop inc ret pop add scas mov popf sub lock add cmp out xchg (bad) fmuls sbb push addb test sbb adc loopne leave dec cmp stos bound sarb or test add jp xchg mov movsb add stos push stos adc add mov push lods (bad) enter fstp sahf in or std js push inc in xorl mov (bad) fadds inc xchg ror pop adc fidivl (bad) mull xchg add in cld sub mov lock rclb push dec dec movsb enter daa push jb rorb or (bad) cltd pop sti or int3 inc in (bad) pusha loopne push dec adc add dec or pushf add stos cmp sub daa inc jbe mov imul sbb adc sti mov addb shrb xorb add sahf add (bad) aaa ss push addl jb cmp sbb sti xchg mov mov pop xor push lea lock daa lcall dec repnz cmc add loop xchg or in pop xchg cmp mov lret stos sbb sbb cwtl cmp or lea inc pushf into xchg popf pusha adc push test push push test loopne or daa in mov and add xchg add cmp jp jge lret subb mov pop mov add fisttp cld add jno inc les mov mov lret cwtl xor dec cmp test push ljmp push clc or push cmc loope outsl in mov hlt cmpl jg into lcall popa in xchg mov sar stos jl xchg test mov dec lahf test dec push cmp mov jle mov popf cmpl and stc jp mov int3 into mov pop dec aam add ljmp add pop aad roll xchg nop sbb push cmpsb lahf dec jo jp and je fmull loopne dec (bad) repz fadd or inc and leave cwtl lock mov jns cld push jb sbb xor aad push or jge push movsl xor adc mov std loopne imull fsubs lcall sub pop fwait push add aad push dec je daa dec mov pusha incl rclb dec cmp mov dec subl xor xlat push mov dec add scas sub fmuls add push pop rorb adc add add mov (bad) aad adc loopne ja add xor pusha adc in add dec push movsl pop ss sar lret lcall add leave mov pop repz add test rcrl flds rorl sbb faddp inc lods loopne xor xchg cmpsb sub xchg in ja imul add mov add mov incb sub dec sbb and xchg cs inc std jbe and mov adc dec notb sub fdivrp cltd xchg cwtl out fs inc stos jp add add sub sbb cmp add xor or leave mov orb dec push rcrb adc in cmpsb inc mov sub jns mov add test jb rol push jnp sbb jnp loopne jmp lret mov pop lods js mov inc (bad) lret ret and xor add outsl out roll lods pop xchg sbbb mov addr16 dec jno xor cltd fs bound shrb pop add test add inc adc clc sub jg or data16 test andb add mov cmp pop xor xor sub xchg fldl out push aas loopne xchg jns and inc ds loopne pop (bad) push dec or shl adc mov test repnz sub pushf lods std mov or xor jns sub imul sbb dec out add adc pusha push xchg and inc outsl adc int cmp xchg popl pop stos inc aam dec or mov cld fmuls rolb push (bad) mov pop loopne fsubrs mov push xor inc jl mov scas in push movsb mov outsb in inc enter fbld pop data16 sahf xchg jge (bad) jo add push rcrb movsl (bad) jno xchg mov push repz clc pusha orb push mov repz and in lods sahf mov mov adc pushf shll sbb xor jae adc and outsb or jb mov add jp or and xchg mov mov cmpsb and push pop and das je add sbb cld subl decb arpl test xchg mov push enter sub sbb ficompl (bad) xchg sub shll mov addl pop pusha loope cmp roll xchg imul ja jl imulb xor xchg add (bad) cli int adc pusha mov test mov sub sbb jno rcrl (bad) hlt sti rcrl jns jl add sub daa cld jecxz sub pop mov mov sbbl push add test out mov cwtl xchg pop or in fst inc nop jb cmp push sti lock and jbe adc sbbl loope mov fucom inc add (bad) negb fcomps nop xchg ret clc xorl add sbb xlat add jns clc mov or mov add xlat pop xor aaa cmpsl jle les mov push fsubrl lahf rorl inc mov sub movsb addb pop xor or pop ljmp test adcl cmp aaa pop cwtl popf pop sub sub mov mov sbb ret xchg adc sti movsl or mov aad or test dec shr xchg cwtl test fptan adc sub jp and fwait cmpsb dec (bad) sbb add gs into inc add mov enter insl movsl fcomps hlt jne cltd push sub pop jo lods add cmp pop cmc ret mov lret mov enter push test mov daa sub sbb inc push subb loopne,pt xor ss fiaddl or fwait dec mov dec in inc ja adc mov mov mov int3 out rclb dec (bad) or push push jnp jno repnz aas adc sar adc or (bad) and dec mov or sbb mov xchg pushf in jecxz dec or mov popf mov mov dec pop push cltd sub in dec dec cmp fldt push enter push arpl sbbl sub test cmp int3 nop sbb mov sbb add mull out jb xor les sub and addb add xor fstp mov add int mov and jbe repz dec cwtl mov cmp subb push jl lret mov dec jle add push lcall inc push rolb insl pop out (bad) imul add or sub mov or pop or pop add lret or mov test sub test mov lods xchg xorb jne cmp xchg cmc sahf loopne or push push mov mov fcmovb fsubrs sbb and cmp sbb xor lods sbb push mov ret dec mov push cmpsl rcll pushf icebp sahf xor add push rorb push and xchg in mov jp adcl (bad) lock imul test xchg add cmc lcall push in add pusha test cs mov mov call loopne inc and js test movsb mov daa or jle (bad) popa push les push mov sbb addr16 xor cmpsl cld cmp fcmovnb add adc mov push mov clc rcrb mov mov push imull adc xchg lret pop popa jle push adc mov jnp inc lret sbbb cli test fildll adc sbbb jg pusha adc adc (bad) loope sub cwtl mov repz inc sahf into jnp sti xchg jecxz or icebp pop dec pop lret or mov push cmp cmp test push push push leave mov inc rorw jb imul mov lods mov or (bad) ror jecxz or stos xor sbb and add out lds push test std jbe add jnp jmp loopne ds movsb test insb mov lret inc xchg sarb hlt movl push sbb xor int3 lahf mov cld mov mov loope pop and xor lods js xchg cwtl arpl in push jmp in jo pushf insb add iret out fbstp (bad) std mov sub or inc testl or inc sub inc iret das mov sbb cmpsb pop xor xchg pop stos sti adc cmp inc rclb xchg lcall add int3 movsb mov std lcall or add or jo in add cmp rol mov adc and jo add push je pop and mov lret mov add (bad) push sti stc pop mov or push jp add loope (bad) int3 xor test inc or mov fwait or ficom and or fcomps mov pusha add jge lods cmpsl and int cmp sub lret mov add int3 xchg add pop rclb or aaa add xor mov cld xchg clc ds mov (bad) mov xor pop test cmc popa lea sub or fiadd xchg icebp int and fisttpl addr16 sbb cmpsb cmpsl cld cmp cmp adc cmp add into (bad) loop cld cwtl mov push jp and cmp or sbb push std hlt sbb jnp dec cwtl sub push in ss ffree dec adc lods sbb shlb rorb sub icebp mov push inc pop dec jl nop fmuls mov pusha out xor mov cli mov add and jo daa int icebp aam int3 je mov int3 lds in fistl insb sbb mov (bad) rolb jo int3 mov add mov arpl mov in add xchg add sbb cmc das imul (bad) ss aad and mov push mov dec push int3 sti or jl test xor int3 je cli movsb andb and test jge pop sub test movsl or int3 shrl pop cmp mov mov jecxz out daa loopne fistl or fstps pop jns push rcrb sub imul std or inc mov pushf or sub pop popa lods and outsb add out xor jnp add dec fs fstp incl dec pop inc push cs or fadd shll hlt push mov push pusha lahf popa insb push stc sarb aam out sbb inc add add bound lret and scas xor pop fnstenv adc iret mov or pop or push (bad) dec add or (bad) xor mov scas int3 xor sbb push push jnp stos push int3 push lcall in js fiadd pusha nop and cmp xor (bad) into sbb xor cmpl rorl enter adc bound cmp incl loopne mov ljmp add cltd ret fcompl sti mov subl mov mov push lock dec adc cld adc add lret leave loopne or rcll dec adc lds repnz pop push loope and dec or loopne inc add nop das adc cmovp add test enter in jns loopne lret in add xor add push mov adc insb push mov (bad) mov xor or cld or jo jo pop popa sbb int3 popf lahf add dec repz inc stos sbb jnp mov and cld (bad) cmp sub cs mov popf out or icebp rcll or or fs lock cld dec inc andb div test (bad) mov or aam fs ss jno or and jge es adc fimul cli js int3 je xor jo cmpsl sbb lods and lahf popf daa test mov xchg add pop int mov xor xchg loopne (bad) or dec dec add jmp rcr das add fdivp mov dec jecxz mov sub inc aaa imul xchg jo loop or or shr (bad) in out and jp (bad) int xchg inc cmp icebp inc or fcmovne sub sbb jp add pop jecxz push lret dec sbb test or popa int push gs addl nop dec jecxz in xor and jge pop call sbbb and mov cli nop faddp pop sub fs add mov ljmp dec jns dec xchg add test paddusw pushf (bad) jne mov loop dec sub fwait cld loop orl enter lock and xlat in jle popf mov int3 inc xchg add mov cs inc push ja mov cmpsl int3 jg (bad) mov outsb mov push (bad) fsubrs leave mov lret test mov test repz fsubrs fcompl movsb push ret cmp and mov xchg data16 xorl in jl pop int rclb pop (bad) push imul rol adcb push mov push xchg push repz dec jo mov daa stc in imul push pop jle pusha dec (bad) in xorl int3 aad ja shrb shrl xchg fadds cwtl fucomp jno data16 jl dec or cltd and jns sub mov and cmc push fcom inc mov mov add mov jp data16 pop orb jbe je inc add shrl inc pop js add xor xchg add fadd lahf int3 inc shrb mov int rclb adc das mov sub addb xchg cli (bad) (bad) testl lret stos outsb adcb or push out sbb shrb cmp lock cwtl incb mov les cmp and mov xor or or test fwait add les push jmp or mov adc add outsb mov inc pop jnp sbb xchg ljmp lret dec jno or inc add adc mov jg push pop adc or clc inc jo jecxz movsb lds mov pop xchg push test daa int mov xchg lret jg or cmp test cltd push cmp jmp mov xchg dec inc add or or pop add into test daa fiadd movsb xorl mov imul pop popa push call test xor cmp ret cmp rol dec jo inc or pop (bad) xor sbb repz push jns leave and and push mov insb aas dec iret push add (bad) sub mov sbbl mov xchg dec test xchg lds xor mov test iret add data16 fdivs stos pop movsb pop loope mov sbb xor add push (bad) stc lods jp cmp test sahf in or pop (bad) repz enter lock mov mov fsts icebp je push adc outsl and or and rclb dec mov dec push test cmpsl jne cwtl lret lds xor jl scas lods add adc cmp idivb push xor sbb pop loopne loopne pop adcb mov imul and call lods int3 xchg push pusha xchg and bound repnz sbb xchg insb rol cli sbb stc inc andb adc lds xor pop test xor int3 or pop adc mov fs push fild daa cmp ficoml lret xor adc sbb push clc imul pop mov xchg push add (bad) fstp into aas rcrl xlat jns cld or mov dec jo push lods test and cwtl sbb scas jp fstpl and add lahf enter mov jo jge inc mov sti pop mov fsubl xchg sarb jl jecxz add fcoms inc cli call fs js insb or and and movsl add lock jl aas adc test jnp mov test cwtl fs je sbb pop sub add movl mov jecxz mov das xor call loopne cmpsl rcr inc sbb sbb (bad) mov and push (bad) and adc imul enter sub xchg mov mov cmp adc cmpsl aaa mov or or insb pop stos push sub sbb lock xchg dec dec test xor test and adc (bad) rcrb mov pop je push inc xchg mov sbb lea ds push andb iret jg cmp mov adc mov mov cmp loopne mov inc sbb rcrl adc xor xchg inc hlt pushw dec and inc jmp shlb jno lock int pop add scas jp (bad) push inc mov sbb sahf pushf adc adc inc push add fldcw jl lret inc add xlat mov pop clc and int3 das lods xchg cwtl sar sarl xor dec (bad) in shrb mov loop das xchg pop cmp add int3 data16 pop fwait lcall lods or mov and mulb stc rorb mov and mov mov mov sbb jp mov pusha cmp rcll (bad) lods icebp and push push and (bad) ljmp int3 xchg pop fcoms cmp add pusha fisubrl in shrl adc xacquire call mov add xor sub out addl nop sbbb (bad) fstpl push pop into push gs js cmpb test ss nop push andb out xor stos iret xor shrl (bad) or cmpsl adc idivl adcb sbb pushf and inc mov push push test jnp xor bound outsl fidiv aam jo in lahf and adc pop and cwtl or das adc mov scas cs mov xchg mov mov dec ret repz mov cmp out cmc inc and fisubr add sbb stos js add mov sahf xor bound sbb in jle push add sub and sbb cwtl pop fs adc test ss sub mov enter ret mov imul inc outsl jno (bad) pushf cmp push jbe call pop test lcall daa clc pushf lock rol mov pop inc push div addb repz xchg int3 ds cmp pop inc mov in dec mov mov adc pusha mov shlb (bad) js push andl scas inc out jno ficom ds aaa daa imul sarb xor aaa lret push sbb andl bound test adc mov push (bad) cwtl addr16 mov dec (bad) and ss jns push xor daa xchg loopne addr16 sub sub and daa add push stos dec pop add insb sarb sti pop xchg push sub ret (bad) dec cmp sbb cld inc xchg push mov add add dec fs cwtl adc jo scas mov mov test mov stc pusha push cmp xchg dec fadds push lock lods paddb lret and mov in ja pop jp clc mov rcrb aam enter popf test enter xlat jns or mov pushf push (bad) mov xor arpl out pop add sub lods sbb loop addr16 push xor std pusha add out loope push add jnp int3 or lds sub or adc add dec in push xchg or movsb lods clc hlt mov add sahf xorb hlt fisubl sbb nop pop insb add push dec add pop scas and pusha mov std cmp cmp and sbb push hlt push dec lret fsubrs add dec shl mov push adc out add mov add and dec int push pusha lahf sub (bad) inc add mov and xor repnz cmp add clc sbb arpl cmpsl push sbb lods mov icebp (bad) ja movsb or icebp (bad) pop je cmovns sub sbb mov mov (bad) sub clc add aad shrb add xchg inc sbb jae negl and mov sub inc in fmuls sbb pop push adc ds lcall ljmp fs and setle cmp inc dec outsb es dec das inc (bad) (bad) pop rolb daa sbb and or add andb jl add or in push mov add inc fisubl mov sub adc pop mov xor scas cltd iret or add mov sahf lahf inc mov xchg js inc xchg sub test sub xchg test inc pop or pop or mov add int ss push dec adcl inc sbbl add xchg dec je shrb xor int3 ja cmp xor add xor fistpll inc pushf xor cmp or dec or dec sbb pop add dec mov add jle mov in jb and adc jecxz xor or xor jo xor sbb pop out dec push xchg sbb scas mov mov cmc or inc mov sbbl adc nop (bad) mov or arpl or addr16 push pop test dec jbe (bad) dec xchg and inc inc adc fild adcb mov popa inc jbe dec hlt xchg jp mov insl andl pop into clc jae ljmp test and sbb and xor aaa adc test sbb mov sub out sub pop aaa jmp adc xor mov sbb fistp dec movsl dec jbe int3 add sbb mov pop pop pop fildl add jnp mov sbb pop mov je nop push sbb push enter and push push pop mov mov push xchg push adc inc int3 mov mov jmp dec stos push cwtl sbb pop out adc jg jbe daa add clc data16 rorb sahf add dec jge inc or cmc pop cs lahf xor mov mov add xchg mov pop scas cld add jns inc data16 jbe je adc cs pusha test movsb daa add cmp icebp push add dec lcall jmp xor mov cmpsl lock pop mov cltd jl or divl orb or pop fcoml sbb stos xchg xchg test add ljmp jne pop adc out ja mov pushf cmp cs rcrl lea adc lock mov lods mov pop and pushfw push mov add stos add andl dec jb cmp into xor (bad) pop add xor popa loopne and add inc mov inc dec loope dec clc outsl jbe test insl andl add sahf ret loop add scas mov cwtl mov rcrl sarl jb mov adc push outsb and add push adc mov lods jno cld or outsb sub mov and fwait mov dec dec jle push les scas ja add dec mov movsb clc cmpsb sbb xor mov adc cmpsb cmp or mov jg lods enter cmp sub push xor add sbb rol sbb cwtl add and sbb add jae fdivr jnp adc mov and js pop xor and and add jg hlt cmc sahf add jmp inc and xor movsl sbb in mov lahf ffreep fwait shr nop cwtl add cs fdivr push cmp daa add out sub je lods inc or dec std xchg mov and mov imul xchg xor and je in nop push mov fstpl aad scas scas mov dec mov push ret fstp dec mov inc mov mov enter pop mov cwtl hlt aaa dec cwtl mov adc cld lret dec adc and aaa int3 add xchg cmp out insb es cs insb push cmp cmp push xor sbb or incb mov sub sbb inc jnp sbb xor sub sub faddl mov jg and xor int3 mov add out dec mov jo lret lods pop sti xor fsubs sbb sub fs push pop in js stc cmp mov sub pop mov cwtl push and or cwtl xor mov push je cmp mov pop ja rcrl repnz rcrb add clc jg ret cmp push rclb fs push mov push out cmp xchg adc pop jo sbb ds mov inc mov inc pop sbb sarb mov into push sbb adc add inc test or sahf sub div sub inc cmp cmp pop int3 add xor sti lcall jb ds jg pop pusha repz push or mov push dec add mov fildl push add adc mov add fdivs andb adc fadds rorb dec sbb nop adc xchg mov mov jecxz in jl inc es mov xchg repz jle mov jge addb sbb and inc test push rorb push cmp subb add or (bad) sub cltd pop jns shrb mov inc add or setge push stos dec dec stos dec mov jae loopne mov mov mov (bad) testl pushf mov jo inc mov push mov loope xor mov jno pop add and pusha push scas movb mov sti test xchg dec test pushf inc jp jle pusha and push jmp movsl add leave inc scas cmpsl clc arpl xchg lods push sub mov sub pop bound and nop shr push xchg std xchg clc add mov icebp mov dec (bad) dec or push dec cmp or push cmp mov lods jo enter adc mov sti scas in insl sahf adc icebp sbb dec fisub cwtl sub cmpsb mov push dec scas imul ja cs and bound fstpl sti mov add loopne add xor call lcall fwait es scas dec popa jnp adc sub (bad) leave mov xchg enter sub enter add bound int cs jge lock or in movsb inc imul imul sbb popf inc and xor fwait inc push addl insb cmp (bad) jle nop dec add lock pop fldl dec and cmp popl inc arpl pop mov sbb ss push push xchg roll lods scas popa mov and decb lock rep xor pop sbb sbb add mov mov add cltd dec call pop inc dec lods imulb or stos push cmpsl pop (bad) jb test mov adc jecxz or xchg or (bad) insb mov aaa lods push adc call fimull cltd add in mov popf in pusha cwtl lock jl sub lods mov rolb ja cmp pop mov insb scas pop mov test and mov sbb inc and sbb cli pop push dec and das pop add mov in cwtl add movsb stos cld es push or aam (bad) popf jae or adc or push int3 pop sahf pop jle mov hlt pop mov stos sub leave pop fld mov test arpl jo inc or bound jp xchg sbb dec aas push sbb and jp push cmp cli test sub ljmp loopne adc or mov xor lcall cmp outsl adc pop xor mov nop cmp mov xor add inc sarb (bad) xor mov orb andb dec cmc mov imul pop aam pop xchg iret shl div pop dec push push xchg cmp mov and stos nop xor dec inc xchg sub jae jne sub mov push iret sbb add imul inc sub clc insb lods push aad gs dec ss rolb sub leave stc and mov and jnp movsb cmp mov rep imul mov or pop shr xchg inc sub cmp dec adc pop or hlt mov insb xor clc lods rcr cmp mov adc pop movsl pop cmp clc dec mov adc fmuls adc sub ds dec mov aas popf fimull mov adc test pop mov inc adc addl negl pop and inc cmp sub sub lret cmp sub and popa sbb dec inc or hlt mov add adcl pop pusha scas mov clc xchg add xchg sahf (bad) push lea pop pushf add jg hlt or pushf dec decb dec adc shlb add stc mov push mov dec call rcll fistl mov push sbb sub or mov dec test addr16 sti jg nop dec mov stos inc cmp jl,pn inc fmul lock or pop inc sub adc inc lds xchg sub xor enter fisttp (bad) and test mov and dec dec cltd push pop mov sbb sub fs mov and je sahf xchg test arpl js inc or nop into fistpl rolb js repz negb clc faddl js aas add sub test fsqrt add jge cwtl pop adc stos daa inc call orb or sbb outsl inc cmp mov inc jno sahf push lods out pop ret negl in mov xor push dec in pop shrb and dec cwtl xchg add mov std negb and jbe mov or lock popa pop adc mov pop divb cmp adc mov sbb jb loop stos mov push push fisubrl xorl add es xchg in rolb dec jp (bad) ror jno pusha cmp pop ss cmp pop add add push test jecxz jo dec sbb and hlt dec pop inc adc outsb cld lock nop in dec push sub outsl mov mov sbb das inc pop and dec scas adc in pop test and cmp push flds out daa inc and nop sbb dec fsubrl stos and inc xor sub clc arpl push roll mov or dec sbb cltd pop mov fst xor add cmc dec jb arpl inc sbb in sbb push test pop roll xchg loop adc inc add add mov js mov xchg cld push shl jp sub mov addl mov movsb sbb xor and mov mov mov xor (bad) sub and add push xor mov mov jno and adc sub push ret jmp push mov adc add jle outsl pop dec push jmp aad out mov ret addb in iret sub jmp pop sub addb push push mov mov ret pop lahf jmp pop lret mov mov jmp pop xor mov stc and pop add aaa jp push loope and pop adc fist pop or xchg mov xor jge add push jmp sub in ret not push (bad) jg sarb cmp pop push fucomp pushf add insb push and mov fsubs mov pop not or ret or jmp test pop mov jg pusha pop push (bad) cmp add out pop push mov addl jle xlat dec or jmp movsb nop pop xchg mov cld dec mov loopne (bad) add xor or testl cmp add (bad) xor inc mov push pop clc fdivs test sub les jmp push arpl add sub xchg pop or popa insb and add enter cmp lret jmp xor idivl jl adc test call mov jmp lret lret imul mov adc dec negl in mov push add pusha jg js out xor push ret or (bad) jmp dec (bad) cmpsb outsb hlt pusha gs jns jmp rolb (bad) pop pop or pop add int loopne mov pop pop adc outsl push (bad) fs addl jl int push inc sub out test jmp pop in lahf test add or sbb prefetch push sub and adc push xor and inc push popf test inc ret lcall int3 aaa rorl stos lock in adc adc push xchg add inc sahf es add mov out sbb dec in cmpsb push adc cmp or sub adc push add ficom inc pop mov les mov jne or aaa inc je push rorl js inc sub scas xor jp add xchg stos int incl ror or inc pop in (bad) test add pop add and inc cld mov sub push jb pop sub xor or or dec out ja sub in lret test jmp adc push pop mov jmp shl rorb add mov sbb jmp mov outsl push repz loop sub add push pop jae andb jbe jae inc ficompl or xor cmp cltd mov or mov push add call pop xchg (bad) push add icebp mov and mov cmpsl faddp repnz adc push in sbb shrb cmpsb outsb jnp rolb inc xor and mov pop pop idivl sub lds fdivrl jg dec (bad) mov negl push add sub movsl inc push adc mov push sub jne inc test dec in or pop push push or add push fiaddl inc inc or and pop adc jnp std std cmpl jecxz das subl pop dec dec add dec sub call repnz xchg adc ret ret addb pop ret js (bad) cli adc lahf hlt or sarb adc add or sbb mov addl mov lret adc dec xor (bad) xor jg add mov inc and add iret pusha js sub pop xchg ret sub loop invd push sti xchg pop sbb or and hlt enter push fcmove imul adc jb jmp inc cmpsb jmp lock es loop flds add loop xor and add mov push push jl xchg xor dec nop jnp sub jns insb add sbb test fcomps lret adc addr16 gs dec or mov mov sub and xchg pop cs hlt or rcr push pop xor mov in shr insb imul adc dec mov sub push adc bound add pop fist pop mov xor pop and cmp jmp add sbb iret (bad) sub or adc sub or push jecxz lret rolb or pop and fcmovb dec adc jno xor sub xchg lods outsl or add jge xchg add jmp int3 sti jmp or loopne pop xchg mov (bad) or push (bad) mov push sub loop rcll jmp push lock mov ficompl and sbb push loope jb push dec test jmp fstps iret movsl cwtl push sti sub add jbe sub and jmp mov push rorl or mov push xchg cmp xor and xchg scas in inc sbb dec pop loop adc add add popa cmc (bad) mov fistp iret ret pop add mov pop and jae dec test xchg aaa xor push push movsb (bad) xor add cmp jl dec mov inc movsb ss fdivrl ret sub inc add mov jmp mov pop push push (bad) into pusha pop jne test pusha jg roll pop out stc xor les jmp push sub sub dec mov inc and es add mov jg and int inc loope mov outsl pop sub aam lret jne adc sub out ja roll enter adc imul rcll jmp xor xchg push adc mov jmp dec jle pushf repnz xchg or add test outsb inc mov in push jg push in jnp and inc in ljmp push mov dec xor add jne mov repnz fisubl add or sub into bound (bad) mov lret mov adc cmp mov push call jno mov fs push xor adc and xor sub sbb sbb jl js sub or data16 push ds pop pop pop and xchg das daa sbb adc sub pop fwait (bad) sub out push jmp test or inc mov sub movsb sbb cmp sbb xor jge pop (bad) leave les pop xor and aaa xchg adc sub or sub cmp stos dec inc adc mov mov and pushf rclb jp (bad) fldenv or ret add sub loop lret out dec pop aam and adc icebp add call loopne push push les das call push test test push and pop addl add add push jmp dec sub pop dec pop fld push xor adc pop (bad) sbb fcompl ret sub and xlat (bad) popa (bad) into jb pop or mov (bad) sti cli pop scas mov imul idivb jle aaa add (bad) jmp mov and sub rolb ja outsb int3 ljmp pusha pop or sbb mov jo mov insl iret sbb mov sbb push fidivr mov xchg int xchg imul nop call dec repnz xor inc cmc inc or lret negb es mov fs push pop ljmp and mov or push popa adc inc cmp aad or inc jge sbb scas add idivl shrl leave lfs mov lods dec pop mov jg lds mov nop (bad) sbb push (bad) (bad) pusha or push adc mov mov subl push push mov xor xchg cmpl (bad) jbe fdivrp in faddp pop add cmp or push push lret dec add push add pop shl add push in jle and jp or sbb push xor lods push repnz jge loopne pop (bad) mov or cwtl pop and add jmp in xchg ret jle xor aad pop jmp cmp (bad) cld mov loop ljmp ror sti sub jp inc ret sub xor push cwtl aad pop cltd cmp pop (bad) add in cltd push sbb sahf jmp xor mov cmp xor out add mov incb addl lahf ja stos mov out xor mov ret and add rorb dec mov mov sub and cld cmp xchg hlt (bad) mov test dec jo add call add pop add pop jmp xchg add imul repnz inc mov push dec xchg pop enter fdivl scas push or or add outsb mov shrb push push rcrb scas fiaddl repz in in jo shlb jp push mov mov movntps dec leave out les push dec ret sub pop dec mov xchg lcall mov jp ljmp add add (bad) jo pop jge pop vunpcklps popa aaa cmp xlat (bad) jae jecxz frstpm(287 jbe sbb xchg adc xor sbb int add pop sub add push adc adc and mov js jecxz push lds rorl test sbb add pop push push push imul jmp and pop or or fstps adc jle into add jns inc outsl into arpl js jmp imul push mov and push jns pop mov js xor xchg lret push or or lahf das cwtl cmpb push mov test test dec push sub leave mov enter cli and sahf adc ljmp (bad) xor xor add rcll xor jno int push aas jecxz cmp pop mull ret cmp imul jnp ljmp std les add (bad) notl sbb pop fdivr xor lock std pop mov and pop rcrl and or cmp inc sbb lods mov jbe imul cmc push int cmp add adc push fisubrl out outsl movsl xor adcb cmp (bad) imul (bad) ss neg cld testb leave test xchg pop cmp rorl mov xchg lea push das and sbb cs out mov dec or pushf imul mov mov xchg test shll paddw inc xchg out mov xor jmp cltd call daa add ret cmpsl xorl mov mov daa shll and mov or nop repz aad enter and jnp adc repz adc mov add mov fisttpl inc adc or lods add mov adc pop je fdivl shl add and out lcall inc (bad) test jge jnp repnz enter jmp rcrl outsl in pop or jl and or and (bad) push push or gs scas gs cld sub mov or add push sub inc add push movsb add jae shll testb xchg fdivl aas dec mov mov adc int jmp decb lds jle dec sub icebp add test loop insl jecxz testl xchg jl js fs adc or or nop xchg sbb arpl in pushf sbb fwait decb and out mov roll inc incb jle and sar jno jmp push add dec xor cmc int3 orl inc adc stc add repz fdivl cmp imulb sub roll jnp nop sbb or dec test cmp add mov xor pop or inc adc repnz jge pushf and out subb lahf (bad) xor mov subl and popf cmp jo in cmp jb xchg adc cltd xlat ret mov hlt add (bad) je nop push dec add pop cmp mov mull shlb mov sbb cs bound xchg xchg pop test decl and imulb mov shl rol pop lods es pop aaa add cmc mov add pop mov gs push lret lods mov gs mov repz xor pop arpl addr16 cmp xlat (bad) ss les outsb dec mov mov xlat clc inc movsb xchg mov add scas imul push in push mov scas daa lods out fldl and not jne add ret or jmp cmc mov mov dec nop mov in mov mov adc call cmp jbe pushf push pop jns mov lret stc push bound out jno daa roll shll out or push sbb sbbb decl sbb add and shll and (bad) and cmc jge add lea adc sbb sbb lods adc and pop bound cmp repz add inc in cmp (bad) pop jg nop or adc mov rorb mov rorl xrelease pop pop (bad) or andb test cmpsb inc dec push pop mov mov add call push dec popf jnp mov test xor pop push test and mov (bad) and xlat pop stos negl daa enter mov outsl adc mov mov ret push lret out pusha lea pop jno or pextrw push out call dec or int3 jmp mov push and es lret sbb jnp sub dec xchg les push and in jmp cs ret or sar dec loope inc ret imul jno push adc add add in pop mov xor js add xchg test mov mov add xor pop pop mov inc jbe jecxz xchg jnp push inc popf insb dec sub add mov jmp ficompl xor enter pop jmp ljmp push sbb mov mov lods in or clc sub xchg jg lea xchg imul push adc push add in es xor (bad) add repnz xchg pop pop fwait push mov push add sbb (bad) repnz rcll xchg jb jmp pop adc push or jae mov (bad) xor jge xor mov pop xchg rorb mov shr fucomi pop es inc add sti daa popa and std mov jmp jg adc sarl pusha pop xchg mov adc jle mov bnd outsl jbe mov in ljmp cmpb sub mov jg push cmp pop mov repnz outsb out daa or or pop xor inc imul pop mov and std dec push push jge and jmp mov push scas jmp setp ret jns call sub (bad) adc add adc mov cmp xchg not lods or cltd dec mov jl cmp enter (bad) mov adc stos lock push stos out add jbe xor popf adc data16 stc jmp jns and lock insb pop cmpb loop negb pop ret pop divl mov xlat rorl pop sti push dec dec lret push pop add sub inc incl inc mov push shr add xchg xchg jg cmpb mov adc mov jb lahf lea fisubr (bad) outsb in sbb outsl dec vxorps das mov mov ljmp (bad) imull movsl sub daa rcrb out sub bound nop jg add add popa pop push pop sub (bad) fwait inc xchg pop pop jmp mov (bad) test push pavgb out or mov (bad) rcr nop pop mov jmp flds incl push ljmp mov or mull ret add leave insl jle or jns fist mov push pop pop int jp inc pop xchg add dec adc pop ror dec adc mov and push add lods cwtl enter mov add adc (bad) loopne addl push hlt adcl dec sbb pop orb sub mov dec mov inc leave add stos sub add and pop jmp pop pop pop imul in sbb enter das insb daa add mov cld sub int push and inc adc mov icebp jne push push lret push push cld sbb xor inc lret sub insb into add adc pop pop mov fucomp dec mov or outsl sub add daa inc pop inc dec pop sub pop mov inc dec ret (bad) jmp or (bad) jnp movsb dec lret or test shl mov push and cmp repz fstps sbb out scas cld cmc add mov or fstl cmp scas mov inc push add and xchg sub sub or clc dec loop lret dec mov mov mov fisttpll repnz movsl lock jne mov push pop les cld mov add inc mov wrmsr test adc adcl mov xor adc cmp movsl out mov repz dec mov pop pop lea outsb pop inc or jnp (bad) fimul or and leave js mov (bad) sub rep pop jecxz add dec shl xchg or cmp andl push add inc push adc (bad) mov rol jg xchg das and cltd sub xor leave shr add mov out and dec dec sub popa ret mov lods int3 (bad) mov sub xchg inc test sbb test cmp adc mov inc adcl or pop popf sbbb mov test mov adc mov jo adc lock in mov lahf clc adc mov test pop mov dec dec scas and add sbb and adc add or ljmp cmp add xor jg jmp dec push and subl adc and testb or inc mov sbb mov jmp dec add rcll or push add mov ljmp or rol (bad) adc stc inc rorl sbb and (bad) data16 mov test inc fsubr pop mov cmp mov mov cld (bad) xchg gs mov sti inc stos sbb cmp jbe les sbbb ret xorl mov andl mov xor or jg or sub push dec shr loop push jb and jbe sub adcb lret mov test mov add and sbb or enter mov cmpsl or and sub sarl mov repnz add mov jp gs inc das roll mov repnz pop cwtl (bad) or lods ljmp jg mov out insl adc test mov pop xor scas lds push mov inc ss ret int icebp ljmp inc imul data16 flds mov rcll pop je xor pusha sub mov (bad) mov (bad) ret push xchg sbb aas xchg push out push repz (bad) or xor jg or xor and lock es xor (bad) iret stos in ljmp ss push push enter daa adc sbb dec cmp inc or jmp lret and popf rcrb mov cmc add add adc push stc lods or push out insl fcmove inc push andl ret push les ret sub cmc sub xor jae ljmp sub pop add add and mov jne adc and sub or mov add jecxz test fist lea add mov mov int3 or out dec (bad) fisubr or pop mov into push xor sub flds inc sbb (bad) scas adc nop sub sub push mov addr16 jmp mov pop dec dec cwtl push add (bad) mov jbe mov sub add or add jmp mov mov inc (bad) or daa and cmp xor mov mov (bad) xor fwait add movsl and or and cwtl or cmp fs and (bad) xchg dec repnz adc inc or and sub icebp and and rcrl xchg sub adc aaa and leave add sub push xor (bad) das ja fstl mov adc push out mov or mov cmp loope push adc sbb fcomps iret add pop push xor (bad) xor int stc cli jno or movsb lret pop aaa pop rclb enter test xor and push jl sub or add cmpsb es sub imul adcb (bad) dec mov lods lea data16 xor pop out rcrb mov mov das notl push dec loopne sub and or jg push adc sarb push and add lret add notb mov mov push and add cltd lret or cmc rcrl into pop or andl xor jl lret test mov fwait jne enter (bad) xchg mov sbb dec lcall mov ficom sbb (bad) out (bad) out inc (bad) lret inc divl jns ret out add sbb sbb fsubrs lock sub push (bad) mov pop sub or inc mov shl clc xor push je lret or inc mov pop ret les push out xchg int3 js in add divb nop inc mov cmpsb and jecxz iret xchg sub loope xor mov sub inc inc arpl jmp adc xor fsts xor or test xchg ret and dec movsb pop and aad adc or cmpsl and ret push pop rorb ds test fdivr add (bad) xor mov xlat add xor cltd nop lret inc dec sub int3 mov imul paddd adc sub add add psubd push add add and or pushw inc xchg imul inc mov out fistp xor mov dec mov arpl pop xchg stos or and daa inc and into clc imul cmc push into pop add (bad) aam (bad) jl ret lock mov inc pop ret dec fidivrl mov dec jecxz mov and dec and int3 lret rclb (bad) sub sub sarl call push aam push imul and and movsb mov loop pusha xlat into add mov add or int3 je out inc lret add orl cli jmp shl enter ret inc push mov cmpsb popf xchg ret ljmp rorl or sar movsl fs add push add mov or in or pushf adc cmp negl pusha add (bad) cmp sarb cmp dec aam xchg fidivl shrl mov (bad) or add fsts repz sub cmp push movsl adc push inc push (bad) mov js lret xor xchg (bad) xor mov ds adc inc pop (bad) lea push into xor add sbb xor mov jmp mov leave sub push dec adc cltd inc or mov mov adcl sub push insb sbb ret adc faddl ljmp pop jb mov inc sahf adc je sahf dec add xor movsl les dec mov pop addr16 inc add pusha cwtl rcrl mov shrb inc dec push sub mov push sub push mov jbe and mov mov jg lock idivl push push or ret js push push mov jle add jb add ds mov pop push jo or jl xor or pop loope mov rolb cli cwtl dec jo test xor nop negb and mov jle cmp rolb push cmp rcrl rcl jae cmpsb push mov clc jnp xor pop aam push or pop dec push pop movsb rcrb or outsb mov shr add ret pop sub fist cmp lds jge decb cmp call inc jne aaa mov es inc out test adc or push jb nop aas add mov lock mov sbb lcall xlat addb add mov (bad) push push xchg test push push repz or dec mov fdivs or fldcw lret xor adc imul sub lock adc bound push push sbb xor push pop std sar cmp in or or lea push push fimul shlb jmp cltd cmc mov fmull (bad) jle clc pop (bad) sub popf xor add (bad) mov pop xchg push add in or fnstsw jae in jg dec mov cmp scas push shrb xor rorl fwait jae xchg lds mov aas pop aaa sub add or add cwtl dec pop lods (bad) push push pop (bad) and popf dec (bad) and (bad) xor test inc sub fisubl and cwtl out xor out inc ss pushf rolb popa push lretw cmp sbb push inc sbb icebp loope or cmpl xor aaa cmp stc out stos sub sub inc out mov sbb fldcw dec xor loop gs mov ljmp add and mov xor or mov xor pop movsb or pop scas data16 lret fbstp xor xlat sub mov inc mov in (bad) or adc and sbb ljmp mov pop leave inc cmp xor xlat out in lods mov sarl inc mov movl dec inc jo idivb add int3 jecxz or aaa scas leave jns xor pop jl mov movsb loope sub dec rcll pop pusha aam pop mov sbb pushf lds test pop mov xcrypt-ctr cmpsl fstps lods adc add jle jge ror gs or xor and xor sbb ret out lock jb xchg btc dec test inc sbb mov sub mov xor xor dec mov int3 cmp xchg rclb movsl sbb cmp or pushf jecxz push movsb or (bad) jp,pn sbb imul into and xor xchg jbe in push add sbb clc lahf jl fistpll and hlt ret add mov sub xor mov pushf add lds out dec clc jae adc out adc pop pusha mov sti faddl jl add adc mov adc xor adc mov dec adc ss outsb test out xchg mov dec popl js shlb mov push sub mov xor dec shll adc and sub inc xchg pop mov mov enter mov in pop sub jp dec (bad) and mov movsb lcall negb sti sub dec repz jns add mov xlat cmp dec dec xor and shlb and pop push cmp wbinvd cli sub push cmp enter sub or add mov iret mov xor (bad) xchg cmp pop adc shrb cwtl pop mov pop out or rcrl adc or cmpsl rcrb dec les or or out add xor and or inc out cltd inc sub dec jb lds mov fdivs arpl lahf mov dec mov adc sub and add xchg xchg pop jmp or add into lahf pop arpl icebp aaa and and cmpsl add sbb cmp movsl or lcall cmpsl mov xchg or push jp add pop mov mov mov or sub xchg push cmp sub jae sbb pushf mov sahf loope sub ret cli ret fs inc push mov cmp push inc pop or pop xchg and pop bound ret inc lahf adc xor mov sti jbe push and lock fs iret cltd iret lods sti mov adc pop xor or jle (bad) jmp mov xchg into subb shrb push out push push sub xchg cld jmp or mov xor imul or and xor pop or iret sbb sbb dec lret push ljmp sbb loope mov sub and sub (bad) shrb test (bad) test adc stc mov arpl (bad) add cwtl out (bad) mov es lea (bad) and loop test fcmovnb pop pop dec (bad) xor push in cwtl mov and (bad) repnz int3 aas or mov push and outsb inc lret adc lret add add ret sub test lret mov add sub jns cmp lret add test add or jecxz sub xlat ret test inc or fsubs imul shrb mov push sub xchg loop add cmp cmp insb add push add ret (bad) mov mov dec pop cmp adc clc push lret test divb notl and mov jmp cs add lods and out inc pop and add iret popf mov lds add aas xchg mov ret push cmpsb sahf xor xchg cmp sub in xor jle and out sub or sti repz xor mov (bad) in movsb push ret (bad) je imul mov pop xor xor cmp adc xor fnstsw xchg or mov sub in cmc jbe adc adc pop in iret xor leave (bad) mov add ljmp xor (bad) or or sub sub in xor cs nop repz jns movsl sbb mov pop in cmpsl jo dec into sub test xor lea movsb adc sbb fadd ret clc fidivr mov sub pop add push testb sbb int clc into and sahf jle dec notl lret loope inc scas dec lods inc push sub lds leave push in in inc inc xchg push sbb mov pop jmp gs xchg pusha push js mov pop fnop aam stc insb mov and push push rcr sub out jo add outsb adc push repnz add sbb dec jo sub mov cwtl xchg fidiv xlat and test dec mov sub inc jp jmp mov sbb cmp or jmp or sub sub cmp adc pop test mov jnp das mov xchg pushfw cli (bad) (bad) repz int mov sub mov xchg dec repz notb pop jmp xor repz pop xor mov inc jns inc and jl imul ss mov push mov push in daa and lcall or inc (bad) mull cmp mov cmp pop nop and xchg dec das dec divl inc mov fiadd dec (bad) xor dec xor mov sub xor and jl push pop xor je lods daa andb cltd and mov push outsl cmpl xchg sbb xor fcmovnbe test js repz mov cmp xchg or push jp sub scas sub dec iret cltd lods jnp mov nop or xor sub cltd out jmp sbb adc push xor pop inc mov xchg sarb dec jmp mov aam int pusha das out or decl cmp test and in aam adcl jo xchg dec pop inc inc pushw pushf mov or gs and pop shlb mov dec pop cld lret (bad) mov push andl iret nop and (bad) pushf xor stc test sbb gs mov daa cmp pop and mov jae scas fs and adc add mov jmp lret xchg icebp lds and dec int mov xor pop adc add add or (bad) mov dec mov and mov lret ret shrl mov bound adc das (bad) xor add sub xor lret icebp cmp sub test adc jecxz mov jl (bad) mov cs in dec cs mov cmpsl add rclb or stos pop bound fsts push adc and and les shrl shll add mov add xchg xchg lahf mov sbb inc adc and inc stos icebp add jmp cmp cltd ja add mov and add xor in sahf xchg inc pop bound mov dec (bad) xor test inc mov and jmp add or sbb out xchg pop xchg adc xchg popa das test fsubrs (bad) pop and ficom xchg push (bad) xor daa sbb je and xor out (bad) push jnp pop adcb aaa adc mov dec dec or dec xor aaa dec mov inc add je pop repz xchg sub inc fcmovb and lret and enter or mov adc psubsw inc mov test rcr fnstcw lret (bad) mov (bad) repz push jns mov fcomip sbbl inc push test and push ljmp mov mov mov push js dec stc xchg mov negl xchg mov in aaa xor lds aad or ljmp push scas lahf add gs mov rcll mov xlat insb cmp push sub into pushf lea push ret dec pop sbb sub nop fwait pop fnstenv xchg inc test (bad) outsb cmp mov xlat sub sub (bad) mov sub cmpsb lret daa add sbb fildll add mov cmp inc pusha mov scas or and testl lods fcomps push scas adc stos rcrb push xchg and dec test (bad) mov and ss fsubrl int pusha or repnz lcall fildl out dec cli in xor mov lahf sub pop cs out fcoml xor xor or add or sub out mov aad std jne and dec jle push adc mov mov add int3 arpl jb dec sti mov cmp gs xchg and xchg pop or adc sub scas cmp mov push xor xchg test or or mov mov pop inc adc lea int3 (bad) dec orb (bad) fisubl movsl push push xchg addr16 out jg lea jg mov insb and xchg and movsl dec cmp push cmp mov and xchg mov or mov popf sub xor sub icebp dec mov sti fmuls mov ret sbb xorl (bad) scas mov dec xor adc mov adc insl repnz adc outsl das rol push xor pop or dec xor es sub sti inc xchg add movzbl lds adc mov sub adc adc pop in bound push add fs std repnz xchg sub lret sub cwtl insl mov xchg stc test sub push pop popf mov and push mov repnz xor xor adc sub movsb sbb pushl stc pop mov mov insl jo add dec sub xor cs movsl sti jno imul fsubrp nop hlt xchg adc popf dec or test jmp mov shrl push xor fsubl pop push xor lods mov fcomp shlb and mov mov fldt popa dec mov or xchg andl dec push les sarb lock or dec enter inc repnz mov das out outsl add push ret jmp push or cmp add jle in mov (bad) adc jp inc or ljmpw adc rcrl outsl mov xor push mov adc cmp and rorl gs adc or out xchg adc loopne popf mov cmp xor jmp aaa (bad) mov imul xor sbb and xchg lcall scas sub scas rep xor cmp dec cli notl scas imul dec inc or sub mov xor rcrl ss sub sbb sarl mov pop xor sub ds lret xchg xor sub pop lret mov adc arpl jmp xor out in arpl adc call fisub pop scas push ret aas xor iret je das xchg mov jns xchg imul push adc adc int insb test and loop push dec daa jb cld xchg lods push roll ljmp mov movsb test scas adc jo pushf mov pop popa imul push dec leave call je and movsb movsw lcall add mov decb iret add fwait push add adc sub adc cmpsb cmp or and jns xchg (bad) mov je mov movsl (bad) pop lret and fwait dec ret das arpl pop xor sub and jg daa jmp adc sbb lds push bound outsb (bad) fisubl fdivrs pop adc mov xlat xchg inc sbb xchg jg xor add push scas popa fdivrs pop and nop stc mov insb pop fstpl fdivp inc cmp mov shll daa (bad) bound pop jl or dec mov ret inc and mov sub push cmp add xchg idivl mov and in dec test sub in pop movsl mov lods cmp push sub push imul gs daa or pop push int add call ds dec clc xlat mov ret jl pop out dec cmpsl repnz fucomip pop xchg cmpsl add and enter lret fisttpll ret dec loopne lret pushf add aam fildll adc dec popa mov dec in (bad) dec sub test (bad) aam push cmp in in ds cli aad sub push mov sub mov ffreep add mov dec bswap gs xor pop mov shl leave into (bad) in pop cmp dec cli aaa popf xchg pop stos (bad) jbe jmp sub xchg mov dec aam adc xlat lds aas fiadd add cli cmpsl and repnz mov test lret rolb icebp int3 cmp nop stos sbb or insb and sub leave lret push stc fiaddl sub pop xor icebp leave sub xor mov fstps sub stc mov jbe repnz rorb push and jbe and sbb rorl pop cmp adc add push mov ljmp pop lea andb mov sbb lcall xchg shll rcrb cmpsb xor pop and stos test or add and sub daa rol dec xor inc pusha and icebp fisub (bad) xlat sbb call cmp cltd sahf adc fist mov and or outsb jp or es sbb and xor aam into aad test andb mov ljmp popa dec into aam inc inc dec leave loopne stos out movsl jb fisttpl nop lret shr sbb repz adc cmp ja sub or pop in cs sub add and addr16 and pop or inc xor hlt out adc sub add push ficom lret call mov push test fbstp inc iret mov push pop stos sub push int3 xchg stc xchg inc adc jecxz and nop out xchg lahf inc sahf pop gs pop scas pop add lret lods loop (bad) leave js sub jl pop pop pop scas rclb jne or xor hlt mov add (bad) aam sbb adc fisub mov mov add or push (bad) lock pop dec cmp xlat xor iret mov sub mov xor xor loope js mov test loope cmp sbb mov dec pop (bad) icebp in cld pop jns and cs stos or add (bad) pop jne (bad) sub or (bad) mov jle into loop xchg mov aas daa push int ljmp push mov xchg mov out jecxz add and cwtl xor dec push xor xor add insb movsl mov xchg xor sti cli adc cwtl imul pusha sub add dec add xor xor cwtl enter sub fsubrp or repz idiv mov test test jle pop and and in sbb sbb into xchg dec iret or jbe lret ret popf push cwtl cmpsl cmp cwtl loopne pop leave or cmpsl adc sub xchg push call adc pushf mov stc mov movsb (bad) cmpsb jp xor mov orb stc dec mov (bad) adc or pop mov jns cmp dec repz test sub sbb xchg fldcw adc int xor cmpsb jmp dec loop into push xorl dec and lock cwtl in dec add pop ljmp insl enter (bad) push cmp push sub jecxz into jnp dec je inc lds leave into js cmp add push push add clc pop push shrb adc ret pushf shrl fildl stos sub or sub cld push ficom and ja (bad) leave dec jl adc push lret adc idivl sub xchg inc shlb fwait xor add jl enter icebp in lods cmp xchg mov stos sub out cmpsb movsl mov pop mov xchg icebp ss aas or cmp pop jnp mov ret icebp adc ret cmp pushl leave and outsb jns dec loopne or push push daa push in jae add out inc pusha cmpsb andb sbb decb push and insl sub das sbbl mov (bad) adc iret insb pop or popf xor test clc ja mov inc (bad) mov mov lret jne pop daa pop jb mov pop mov pop cmc lods adc jo mov jecxz push sub pop sbb mov jle push aaa fs xchg cwtl or and lahf push jecxz jle ja adc imul and leave xor dec orl andb xor mov mov lods add (bad) lea adc cld in adc cmc mov pushf mov cmp fs cs adc mov enter popa ljmp and fisubrl out and jge push cmp pushf mov flds lods pop test mov movsl lret js dec clc sub pop sbb sbb int3 nop and mov pushf rorb mov fisub mov jno adc in add sahf jno imul pop jns bound testb inc sar rcrl jmp jg cmp fdiv pop std mov sbb pushf mov (bad) mov pop bound pop sub ljmp out dec into push movsb aas xchg (bad) mov fucomi cwtl loopne or iret xchg jl mov xchg dec dec cld dec jne and ret repz or addr16 in mov inc rorb in mov rcll dec leave test (bad) fs xchg mov movl add add cli xor and jp pusha call push rolb sbb mov add movsl js movsl mov pop push jbe push sub add mov loope sbb add cmp xor xor icebp push xor shrb out cs adc jmp (bad) xor sti lcall ds xor pushf stos dec xchg icebp xchg and and inc into xchg xchg out test mov in mov cltd mov ror out push fstps mov lock pop xchg sbb adc shlb inc ror xchg dec pop mov xchg enter adc adc push (bad) lock jmp test xchg sbb pusha fstpt mov dec out mov push xchg mov or cmp sbb das in pop (bad) xor rol mov or and or loop enter (bad) xor orb mov cmpb cmc inc add mov dec cmpsl jmp (bad) sbb outsb push push popa cwtl stc outsb int jg push pusha (bad) jl pusha in and xor out in mov gs roll mov icebp pop mov mov sbb loop pop jecxz lret inc or mov dec test jp sub iret inc lea (bad) ror inc (bad) push mov repnz and ret xor mov cs push push fstpl mov int ds cltd mov es daa neg xchg and dec notl pop cltd add jns xor imul and cmpb cld out in mov adc pop lret aad mov fcoms nop insb mov push mov shr dec std (bad) cmpsl pop dec jb and loope mull sub in mov pop jg xor or mov mov jae dec leave stc dec push movlhps lods push ficompl sub mov jecxz daa push jno mov mov sti (bad) pop or (bad) dec sbb fisttp jg test inc loopne loopne repnz mov pushf movsl xor sub mov ljmp push daa dec rorl outsb daa pop inc inc xor testl mov (bad) aas ja popa lret lods ret fwait icebp cli cmp mov inc add push cmp lahf adc and dec pop js pop clc std mov imul leave test std daa lds daa mov out mov shrb movsl pop sub out add xchg (bad) sub sub mov and (bad) pop popf hlt jae push ljmp lcall in add jbe push sub daa rolb xchg cmp inc xor ja dec add hlt iret mov shl add icebp mov insb fcmove xor cld lahf in push push int3 ret ss (bad) mov ja les pop or or pop mov jo dec mov mov aaa enter pop dec add push xor mov or pop imul stc imul mov inc clc divl inc add aaa call jmp imull enter adc movsb dec out xor leave imul pop and xor stos imul push pop mov and xor and loope adc mov sbb push js or sub test cs repz push xor addr16 xchg shll insb addr16 xchg or cli fistl and imul adc int and call xor leave cmp sub lds mov pop sub lea das sub push xchg inc mov pop fdivl push test and xchg lret xchg insb jmp mov (bad) lea test mov mov push mov jno imul sbb shlb mov pop out aaa mov (bad) adc (bad) pop ljmp into das xlat add sbb and bound xlat fdiv leave bound jg leave xchg mov pop sub lret mov (bad) dec sub in pop dec or and sbb jno xchg not outsl mov pop xchg inc push (bad) adc cltd cmpsb mov sbb ret or add test pop jne dec pop mov aas pop mov jmp stos outsb test sub sbb das out insb cmp jbe sub popf xor lds inc int pop xchg xchg incb stc xor xor push fisub xor sub mov adc leave xchg push nop or rorb loopne cmp icebp enter ret xor mov xchg push mov loopne inc sub lret mov adcb mov adc cmp lret (bad) xchg (bad) dec mov jge xlat loopne sbb mov pop and fadd and (bad) leave pop aad repnz test xor repz adc fmuls pop ret mov test mov xchg adc (bad) repz sub dec push out aaa out mov pop test jecxz das fsubs xchg add movl and mov pop ret mov out fisttpl lret xor mov movsl xor movsl test ret mov xor adc pushf iret cmpsb xchg lock mov jmp fadds das adc mov inc imul mov and jecxz jg fs xchg sbb loop and or daa sti and rolb test fnstcw (bad) frstpm(287 cs push push daa adc das push popf ret imul cmp stos sub (bad) xchg out daa xor mov mov cli inc fxch call mov fxch sub push push sub mov jb inc push int3 addr16 lret mov inc sti inc mov rdtsc fidivr fdivs repz pop pop loopne add repnz add add dec and and mov xchg adc lahf add loop sub add inc or bswap fiaddl or fmul leave je leave inc mov dec dec data16 daa movl xor mov mov mov xor mov push cmp push fisubr add lods pop lret ljmp dec lods sbb into and leave mov int3 addr16 adc nop dec mov mov sub inc imull std xchg sub xchg add fsubrs sbb adc xor jmp or xor xor daa xor inc and add inc imul cltd mov in fmuls imul nop leave mov dec mov sbb out xchg jmp and rcr push jmp mov mov ja mov rol mov inc jp stos mov movsl or movsl aas test xchg dec or negl jmp xchg pop xor xor lret mov jge push sarl or leave xor add (bad) cs pushf or mov addr16 sub daa sbb jecxz cwtl jo cltd setbe mov inc mov (bad) or add repnz les fsubr and dec xlat mov sub jmp xor xchg mov movsl js adc out dec idivl test xor in push xchg sub outsb sbbl adc add sbb addb jns movsl mov xchg rorb pop das sub sbb (bad) mov (bad) mov in test mov push call sub mov hlt repz bound into sbb add pop or push or (bad) mov aam imul stos (bad) movsb lea mov push jecxz inc cs ret (bad) and cmpsl loop repz or aad rcll dec fisttpl out push push sub push leave jecxz xchg mov lcall xor (bad) subb cmc sbb (bad) lahf and mov bndldx stc dec jp cltd into rorb sub mov shrl leave or dec test (bad) pop xor jmp pushf mov frndint push push insb cwtl mov xchg in sub ret loop aad sbb andb daa lret adc xor xchg inc es or xchg jns stos push adc xchg test lds (bad) mov adc aam mov fldenv jg stc sbb and sbb jne inc ret in jnp outsl and pop dec lret shrl into and dec (bad) jmp cltd jl jb mov (bad) in xor imul sub loop jbe pop js push push cli sub dec mov sbb sbb push lock popf cwtl xchg or lds sub mov cs and pushf hlt inc push mov xchg scas xor add shlb imul scas dec jnp icebp ja inc mov ret xchg inc mov mov ljmp add (bad) xchg icebp (bad) leave lods in adc mov push jmp stc dec cwtl dec icebp das xor insb lcall sbb cld sub cmp ret (bad) cltd xor (bad) dec add jns xlat jp sub adc or cltd push pop call shrl push fadds mov lcall loop push mov out mov xchg test jecxz mov in sub dec jo and decl add clc mov jb clc daa out icebp mov ret sub rcrl xlat cmpsl sarl pop xlat cwtl inc shll mov or xlat xchg sbb mov dec or sbb add out mov lahf push (bad) mov sub xchg or xchg clc or add or and lret pop and inc sub lds test add sub insb cmp mov pop mov push or int3 nop mov add mov jnp or iret pop shll roll pop mov sub mov add push ds mov sub push lods dec sub leave test xor shrl add js push dec (bad) adc push push xor mov mov add add dec mov mov cltd aaa js mov and (bad) lahf gs pushl inc ss push dec push out lret push jne jns or or (bad) cmp movsl enter icebp add fcmovbe dec dec popa outsl add sub or or pop fisubr add sub scas pusha int jno daa dec or fsubl dec pusha cmpsb mov or mov loopne es dec xor fwait dec mov mov and es adc divl pop jae cli test mov mov repz mov add pusha push out test imul xorl inc cmpsb push and pop inc or stc push leave pop pop xorl and jb dec cli mov xchg xor div pop test daa sbb mov cmpsb outsl or ret ja ret addr16 and and xor fsubrl fistp push bound fistp std sub xchg popa je es mov add ret test out loope and xchg nop mov lods or sti inc aam and add fmull imul xchg xlat mov xchg enter pop sub xchg lods fist or sub pop (bad) fcomip cmovp lret jl cmpsl mov fsubl dec (bad) in aad clc xor cwtl pop fistp out cmp je lcall inc orl adc repz lods loop negl ljmp movsl stc stos scas lcall repz mov pop int3 mov mov insb in xlat mov jg fistl push pushf mov mov sahf or push adc or cmp outsb lea sub out inc add mov arpl mov fwait ljmp out fstpt sub into aad (bad) xor daa xor outsl fldenv xor call (bad) xor sub sub mov popa enter sub xchg cmpsb fldcw out mov hlt sti mov mov fistp mov sahf arpl rorl (bad) or popa dec mov idivl mov lea outsl sbb dec mov jbe pop sub dec out mov flds cmp mov je adc add or sti cmp cmpsl ja jge xor push mov pop fmul shll ja pop or (bad) xor imulb sub add fildll in daa add pop dec mov or sub pop sti gs add andl (bad) sti mov sti in pushw test jb add xor push add xor lahf jnp mov loope and orl jg int cld shrl adc loope lods mov fldenv mov mov mov mov sub sahf xchg test stos enter clc (bad) ss add mov insb or fwait dec ret cmp sbb adc dec mov xor push data16 in repnz mov or jge out or scas push out (bad) int3 leave iret sti leave mov hlt lret cmp lcall mov fcoml mov cmp decb mov adc xor xchg dec jne int sub mov mov nop idiv das out xor sub out (bad) cmpsb mov repnz imul mov fnsave mov xchg stc outsb rcll pop add movsl call and sbb add cltd add xor sub jnp mov (bad) test or movsl add shll rorb fild sbb dec ret lds dec xchg test orb cmp or (bad) and loope out xchg adc das xor mov pop mov leave cmp fiadd fmuls stc loope loope jmp jecxz jo mov out test jmp mov or jmp xchg mov sbb xor lret jb addr16 adc push cmp xchg mov popl add outsl adc stos xor pop mov and clc sub sbb fdivrl jmp ficoml or rcrb mov and in imul ss add push idivb dec aas xchg fsubrp inc sub call lahf test sarb cmpsb sbb bound shll sub leave jno in sbb sbbl xor test test add xchg dec lods fwait pop mov mov mov and jmp xchg or cmp adc sub insb pop sub pop sti push adc xlat mov popf gs pop (bad) sbb dec mov addr16 fist dec aam mov push adc push and fs jmp push dec fistpll adc jecxz dec in pop and (bad) loopne enter push and lret iret inc stc mov (bad) sbb lock cmpsl nop (bad) loop into jb (bad) popf cwtl or add mov adc les testb mov lahf jmp lret (bad) mov cmp fcom pop not daa add adc push lret divb pop dec ret imul push jo subb mull pop sub and add je test repnz shl shlb pop hlt mov movsl dec pop das fxtract cmp ror push (bad) cmp fcoml insl dec lods gs xor fadd nop lahf and push shll icebp mov adc gs pop leave cwtl inc jmp jnp mov (bad) dec dec fcoml data16 cmpsl pop idivl shll cmpsb mov insl push aam pop add cmp outsb daa dec sbb xchg inc pop jmp pushf std xchg in push mov and pop xor adc jne push out cwtl test or (bad) adc sbb pop into xchg sti cld lcall out cwtl dec mov push call cmp das ljmp imul mov sahf xchg je dec mov mov push mov push jecxz je loope sti mov jge lret dec xchg in repz dec push xchg xor sbb pop mov sub mov dec pop pop push push ds xor xor int3 test add pop sub or bound add out lret push fbstp mov and pop jecxz popf xchg jecxz lods jmp loop repz dec bound or ds or xchg jmp add adc jbe pop add and sbb pop pop pop pop pop pop pop popf dec ret mov cld mov sub out add fwait mov sarl xor cli sbb sbb pop orb loop (bad) push add sbb dec repnz lcall in sub xor lcall leave sub fidivl je mov stos cmp pop pop test pop xor jno xchg fsubs imulb jne jae sub xor mov ljmp idiv sahf adc imul pop or out fsubl out mov les fdivrp jo loope popa (bad) or jbe dec jecxz dec les pop add push out jno lods push das insb sbb stos inc mov cltd (bad) outsb test mov dec mov loop xchg pop inc divl or jecxz xor movsb rorb pop and ret cld jne jne iret idivl (bad) or test inc shrl divl add or sub stc xor mov xchg aam loope cmp mov mov aad mov dec cmp pop popf pop out int3 mov pop mov clc add (bad) push cld enter mov js cs and lea add lds in stos (bad) fmuls push mull (bad) pop or jno aas mov dec mov dec and mov test add test shl pop hlt mov xchg dec jmp cwtl (bad) mov mov mov mov hlt add or add inc pop push jno add jle jno and jns xchg xor xor mov cltd aas call add mov jno mov push mov fistpll clc mov mov jge mov jmp xor mov or mov pushf sgdtl (bad) insl fisttpl and cmc push jl adc out cmp adc sub daa xor scas insb jge mov clc pushf stos adc and and test dec aad aad insb fnstenv es jne loop pop repz mov ret int3 imul jnp sti jmp sbbb mov inc mov shr cmp hlt xchg push (bad) lret clc mov bound or sub xor cmp fldenv jno aas fstl in add (bad) cmp sbb cmpsl adc int3 fcomip or sahf ret divl or data16 das xor loop fnsave mov dec test sub push iret out movsb rcr or mov cli (bad) mov (bad) movsb lods adc adc jmp adc inc and jle repnz dec jecxz (bad) xchg jp outsb lds jae jne int3 mov pop adc mov push rcrb inc or aad pop push push (bad) mov loop sbb mov adc loopne lret mov lods push stos gs push sbb ret orl xchg mov call cmp lods add mov xchg push stos ret jnp and repz and push mov cmc (bad) mov test mov jne arpl mov cmp repz js lock pushf push add and inc pop in pop (bad) out or (bad) je pop jbe inc mov and xor clc into scas popa or or and adc pushf bound and xchg inc sub ret adc mov fsubs inc pop and pop iret and stos aam adc into int3 adc dec sbb add jmp sub xlat mov inc cwtl test dec les sbb cmc scas xor sar adc loope aas mov xchg mov jge jp into mov pop xchg push cmp xchg dec call push mov popf adc lahf inc roll push adc inc daa pop (bad) mov xor (bad) mov xor f2xm1 ds dec and ss xor ja das cmpb jmp ficom dec and dec inc mov (bad) xor (bad) insb dec mov inc pop mov (bad) sti mov mov add mov out xchg lcall cmpsl pop loop mov mov clc xchg jb mov jecxz pop aas pop mov inc sub and mov pop movsl adc into outsl mov or sbb (bad) clc and dec fdivs outsl imul mov test cmpsb rorb cmpsl les xor jnp not fs or and aas mov add cs push orl and lret ret and cmpsb test cmp mov icebp sahf clc and add mov inc or fstps dec int3 xchg mov bound and outsb mov push pop push ror xchg lret stc lock xchg cmp sbb push dec out sub xchg xor dec xor inc and cmp xor sbb add fmuls mov cmp sub or lds mov or dec cltd loopne sub pop jmp jnp push out mov xor cmc loop or ficompl mov movswl and pusha icebp (bad) mov mov loop lds or and or (bad) cltd dec xor cmc imulb sub out dec (bad) (bad) dec mov std and or push jl loope addr16 imul xchg incl test and lods mov neg iret in add jg pop sbb mov iret mov add jmp call sbb pop (bad) pop loopne cli in mov mov movl dec sahf addr16 or ret xlat (bad) mov lret sub sti jb cmp and push jge ret lret out adc repnz into lret sbb fisubrl fwait lret mov mov (bad) repnz pop add out mov push push or xor push adc ds gs push loope popf mov sub sub flds test in aaa popa add loope adc imul ret out and (bad) pop mov pop or fwait das or (bad) push bnd and xchg fcomps in (bad) mov add fsubl repz xor ret mov mov sub jbe jp neg xor xchg adc mov mov pushf mov mov add (bad) stc sub popf into pusha mov mov mov xor or pop jns dec lock in push cmpsb sub mov push je sub cmp cltd pop mov (bad) sbb push ds iret jle (bad) scas int3 jl cs sbb jl outsl lret (bad) js sub jle daa (bad) fldcw sub sub pusha mov es lcall iret mov mov xchg daa push sahf lds xchg loop shr and push cmp test mov cltd pop into sbb xchg and or mov loopne and cltd bound lock sbb sbb sbb sarl sarb movsw dec sub dec (bad) fsubrs in movsb out cmpsl xchg add in orl sub js (bad) (bad) outsb cli pop mov add xor lods shrb push inc pop flds jle jge daa leave and lcall or jne (bad) mov push cld inc add loop jge (bad) icebp push sub adc mov out sub fisubrl inc pop fldl out mov sub outsl add cmc loope aas repz xchg div loopne ljmp dec das or sarb addr16 aad fdivs cmp mov mov mov dec mov lret loop test movsb (bad) in adc inc jae outsb push fiaddl mov dec in mov or sbb cmpl cmp ds (bad) xchg (bad) repz outsb sub out dec sbbb ud2 imul (bad) mov imul jns scas inc out adc xlat (bad) and mov cmp scas mov xchg xor out dec mov pusha dec xlat push push sub mov or lahf mov push nop mov fstpl fnstenv mov cmp jg and imul mov rcrb test jle and and sbb push inc push ret add sub pop sbb (bad) es lock mov and test ljmp lds cmp and push mov add sti test lret clc xchg dec test mov xchg mov das mov sub and dec xor stc popa (bad) repz push in imul and cs push dec inc lahf mov or cmp xor in xchg cs mov and stc pop lock lret mov xor jp add mov ljmp pop scas jno dec sub jp sub and daa dec pop pop cmp sub imul mov or test add call inc ret test (bad) (bad) adc push mov sub add (bad) pop movb and jg and call add sbb (bad) jbe pop or stos fidiv (bad) fcomps je outsb ljmp movsl icebp mov push xor mov lcall or outsl lea repz sbb idivl push bnd mov and bound les (bad) loop dec subl lret xor call add sub xor outsb add adc lea jge push sarl push mov cltd dec (bad) push xchg sbb std mov add sub insl dec movsl mov dec inc xchg int3 mulb mov inc rcll repnz in mov pop xchg fstps int3 das sti xchg sbb pop and roll sahf lret xchg mov xchg lcall sub push mov sbb push mov add cmpsb in nop and add fs pusha add xchg push add iret push int3 dec negl loop xor jecxz mov sbb xchg sbb ret cmp ficom mov add mov sbb fs jmp cmp rcrl idivl aas nop (bad) (bad) sub or mov mov ds fsubl ret lret lahf inc inc sarl and jmp movsl jl ljmp out dec iret test rcl pop push ds adc mov xlat mov ljmp ret and scas fisttpl mov cmpsb xchg inc cltd sub sub xlat test and stc push jle cmp mov rol (bad) daa and call ret sub dec xor imul xor mov xor mov shlb push mov in aaa out push cltd dec insb test adc movswl rcll inc mov xchg call test mov or imul xchg push popf jno adc repnz mov push sub or shll mov push repnz js lahf ror inc into mov lcall jbe dec mov and adc mov test mov inc cltd loopne repnz lcall sub mov add add int3 pushl imull mov ja add pop mov cwtl mov adc bound test lcall jmp and popa jnp jno lods ret mov pop push push xchg xchg (bad) mov mov mov mov add add mov push jle out and clc inc movsb or pop incl pop push push push pop dec mov jge jecxz or and or popf popa enter loop inc dec mov mov add es push mov mov sub sbb add sub repz shl jp sbb jle call inc mov push lea out ja jo sbb shr add dec push mov or sbb sti push arpl fistpll shlb fsubl push mov pop nop sub sub outsl push add inc loop sti shlb sti pop jbe push adc push incl repnz mov pop cli and out xchg (bad) test aad ljmp sbb test aam jl cmp repz and push push pop pop shr dec sbb or neg add mov mov (bad) inc aam dec mov enter push xchg cmp or fistp xchg or fidivr fstps push mov mul ja and dec pop and shr test push mov dec not or sti adc (bad) loopne push xor outsb or dec add iret fcomp fs or mov fstps (bad) push enter int scas or push mov jle in pop dec xor stos xor mov push lcall xchg pop std orl sub pushf mov rcrl and pop adc sub lock mov jae mov (bad) xlat cwtl orl int3 in loope add sub mov mov stc push out mov cmp bound pop (bad) sbb or roll testb pop cmpsl aas pop cwtl mov xchg (bad) xor daa loop incb daa or clc test in jo mov add sub jp xor push arpl daa fdivrs scas add xchg cli jo pop and lahf sbb adc stc rcl or icebp push jbe call lret push out outsl or or sbb adc subb jae or add cmp (bad) and and sub cmp mov or stc push outsl mov les lods std mov fdivrs pop mov lds leave insl or cmp out std adc mov mov ljmp inc in mov lock loopne mov sub loope outsl repnz cmpsl fwait push mov lea mov call jg and jl jb call sbb jbe mov (bad) xor mov adc dec out pop pop leave sbb dec mov or (bad) xchg xor pop outsb inc and mov (bad) lret xchg pop push das int fcmovb (bad) add dec fs mov insl pop (bad) hlt fwait or pushf mov iret cmp int3 imul add movsb mov jg xlat negb cs push xchg outsl dec std in flds ret mov imul js mov dec (bad) in es lret cmpsb lock scas or add faddl mov pop dec mov mov dec pop mov sub mov mov sbb pop sbb dec in sub and cltd pop fnstenv (bad) je int cmp (bad) (bad) arpl mov mov inc mov push fcmovnbe (bad) jle pop jl int3 in add call add movsb mov sub stc dec leave add mov int mov xchg mov pop mov lahf adc cld bsf dec cld dec loopne adc jo xchg aam inc stos lret pop dec and mov idivb movl sbb bound icebp clc mov cld or icebp push pop pop pusha leave xor lret sub mov or (bad) and sbb xchg rcrl adc mov test xor hlt pop enter sub or or dec push and lods into xor dec test shr dec (bad) loop lcall mov xchg (bad) push icebp and out pop bound daa hlt lods call cwtl test or fsubl xor lea mov ret add push lahf pop mov (bad) sub xlat sbb xor daa add loope pop fwait push add dec mov mov mov mov xor fcoms sub or adc and imul cmp inc pop add adc stc fcmovnu rcl mov xor lret mov and ja sahf inc out fs add dec xchg mov mov pop xor pop icebp les ficomp mov sahf dec and or pop push inc lods push int push pop add je call data16 rcll push insb dec jb jo sub cmp data16 xchg in into xchg jp dec add out and clc xchg mov aas ss pop movsl mov pop ljmp outsl or sti fstpl jb mov or dec loope sahf adc jo sbb mov lret clc dec movsl in outsb repnz lods cmpsb mov das mov jge ja sub push push inc stos cmp mov popa cmp add mull pop lahf xchg out testl inc mov cs ret ret dec rcr mov jecxz mov aad scas sub ficom sbb aas movsb shr rcrl daa xor jns xchg xchg xlat cmp cmp or or and mov inc jmp mov cli into shlb dec and push mov mov das (bad) sub sub cmp mov adc or (bad) insl les mov pop lret pusha pop setp jge f2xm1 adc inc divl pop icebp pop sub xor xchg cmp add comiss div lds pop or jmp loop test pop clc faddp or mov icebp dec repz movsb arpl sbb insb mov lret sbbb jp pusha cmp rorb pop mov movsl dec inc daa cld mov add push add and cmp daa not push jmp pop ja sbb jo mov subb stos fisub outsb insb add das mov xor mov push ret fist pop dec loope push shrl xchg adc and loop rol insb in add shrb div rolb aas je jp xchg add push ficom sub and loopne (bad) xchg mov pop ljmp pop xor inc or arpl dec popl mov jb cwtl xchg scas adc mov dec sub jae and popf or xchg adc (bad) or inc sahf out lcall pop iret push dec in insb sub cmp adc adc pop sub jne scas inc cmpsb push push int3 add xchg in daa mov dec clc (bad) ret rcrl cmp and jae mov popf sub ficom inc int3 lret sub push mov in mov inc loop xchg pushl pop (bad) adc add pop outsb ret idivb pop loope mov divb (bad) push cmc mov iret xor mov sub loop loopne xor dec rorb mov aad (bad) push cmp sti pop mov xchg lock jns xchg rcll mov pop xlat ret lock repnz idiv pop jno cmpsl inc pop (bad) inc sbb icebp outsb cmpsb cmovle pop push aaa into pop sub push pop push (bad) or mov sub clc mov pusha xchg inc inc or pop xor mov inc xor pop lret sub cmp mov jl cmp push outsl bound push in das bound shrl or ljmp add sbb loop xchg lea sub xor stos jb leave (bad) dec add jo pop (bad) sub (bad) loope adc movsb aad bound mov inc and push jmp insb dec sbb add popa cld into add add leave cwtl out xor (bad) cmc (bad) mov dec les mov jbe pop cmp gs pop adc out lods jo add (bad) pop bound les mov dec mov outsb fldl push and mov inc adc std jb xor pushf loop cmp aaa mov xlat or pushf lcall ret test fnstcw xchg xor imul sub ret xchg mov rcll sub push add and lods pop dec js loope add jnp and cwtl xlat or or mov sub adc (bad) mov xchg test cmp mov icebp jge sub loop jne addr16 mov ljmp (bad) out jns (bad) push xchg jecxz cmp mov xor ljmp test or cs pop push sti imul push ret adc lret jge sbb push sti mov sbb inc inc mov xor lret fnsave cmp sbb push dec lahf icebp out aas mov enter push leave in or mov xlat cmc movsl leave (bad) ja das (bad) pop add cli scas sub fs adc ljmp ficomp inc push cmp xchg adc lahf jns imul shrl or mov add dec shlb scas push imul call push mov test mov adc sarl lret test (bad) out push sub sbb mov push jmp jns out and cmp icebp add sub test iret mov js out pop sbb pop cmp call add inc rol inc push mov fwait das adc sub mov (bad) mov and lock mov pushf aaa lret (bad) je (bad) xor add aad adc mov and leave push std daa dec scas mov sub or sub lret fld cltd add jp sti ljmp ja out mov sub (bad) adc jb imul inc and sub imull into jno sub in sub mov ljmp insb enter fidivr sbb sub ret insb push outsl (bad) lret into flds push push sub mov js data16 dec and mov mov pushl inc js popf rcll lds push xchg sub shll clc daa push adc pop mov or fld pop sub pop ss jp lcall cmp mov inc (bad) test push daa roll push das flds imul sub sub movsl pop xchg jb sub cmpsb or add cmp jmp adc push and dec xor insb sbb into inc clc pop hlt stos and xor jg out pop adc add sub or (bad) mov (bad) shrl or inc mov stos repnz les lock cmpsb pop ds mov mov pop xor mov add mov xor mov push cld arpl push subb sub jmp cmc popf outsb loop ror aaa (bad) lock add push lar lret out mov jbe loop add and inc pop xor sub (bad) mov cmp xlat loop (bad) lods jb std fldt and stos pop in pop and sub das fwait dec dec and sub mov mov iret xchg xchg insl mov sub and pop mov fisttp and clc leave xor xor icebp std adc call popf clc xor xchg and test dec cmpsb or shrl repnz insl arpl mov cmp aaa add das pop lcall sub int3 pop lds or flds cmc cmpsb mov dec cwtl (bad) sub jmp rcrl mov pushl or dec sub push loop rolb test sub loop scas pop sub add bound jecxz fild sbb out sub cmp (bad) enter sbb divl xlat jo fist movsl pushl nop lret jo lahf adc xchg push mov stos cmp ljmp sbb addr16 stos adc sbb xchg lods fs fisttpll (bad) sti addr16 mov push inc (bad) pop xlat inc or sub dec sub daa mulb (bad) stos sub xchg xchg loope data16 mov aad mov pop sub cmp jne test jg and or push js and popf and hlt in (bad) aas pop xchg mov dec pop (bad) or cs cmp in add and divb cwtl sbb lret cmp shl push stos mov sub or clc cwtl mov xchg daa out sbb ljmp in sarl mov fwait add inc mov adc movsb jge das pop mov pop xchg aam les std mov push lods or pop add idivl stos gs icebp jle adc or (bad) and std out cmp decb aam adc add fs pop lcall jg inc repz out in stos pop les daa add sti inc es push iret adcb (bad) sti cwtl add cs (bad) inc lods std sbb cmpsl jno scas (bad) and (bad) popf das and sbb fldcw sub fisttpll cwtl inc jmp inc sub subl popfw add repz jmp adc mov xor stos loopne inc push push sbb sbb pop ljmp out sub xor sub repz mov sti dec jne imul jg xchg imulb inc inc loop fidivrl cmpsb xor mov (bad) gs call push and shrl in xchg xchg lods repnz lret popa or cmp xchg pop je pop cli ljmp push add iret sbb inc movsb scas mov fsts addr16 stc and cltd push outsb mov sub xchg out sub mov mov xchg out int cmpsl and out out and popf pop sar jo stc and mov jne sub ret xchg inc adc js xchg (bad) and lds fdiv iret movsb mov clc loope mov mov aas xor fidiv pusha xor mov mov mov clc sub xchg cwtl and dec add test xor (bad) out (bad) mov (bad) push xchg mull or jno imul or in (bad) sub push movsl mov sub orl or xor jne movsl cmpsb or xlat fildl push mov leave cbtw and or mov push in pop or mov dec or push sbb jge push fs xchg sbb or ja daa or mov sub add ret xchg jmp (bad) sbb ja popa shlb adc and pop (bad) pushf xchg or mov call (bad) xor add lods shrb push jb ficom mov or push mov (bad) mov or out add mov popf add testb push dec adc movswl rorl xchg jno lret in repnz call ljmp sub sbbb adc pop mov data16 out jg int into mov pop mov (bad) int or mov pcmpeqw arpl gs cmpsl out xlat sub sbb sub clc add cmp dec negl aaa pop mov add or or inc sub push lret cltd ss inc push lahf xchg jb mov adcb fistpll dec cmp add jmp sub mov inc dec push dec sbb (bad) into (bad) dec add push sub (bad) fisub jp out pop xchg rcrl jp icebp std ljmp cmpsb dec test ret lret daa mov popfw pop scas dec push jl test (bad) jb mov lcall movsl jbe jno sub lcall std rcll dec scas sub out movsl mov push loope ljmp sub sarl test sub mov scas cwtl inc xlat sub add call pop clc jmp pop ret int3 xor insl mov mov and pushf clc ljmp mov and and inc fldl2t sbb les movsl das or xchg pop mov lret idiv mov rcrl lock leave imull movsb adc stos jne pushf mov mov fimull push test cmp int3 xor popf xor push mov and push push pop cmp adc cmp dec pop cmp cmp hlt dec pop or mov mov cmc xor idivb sub xor repnz push cmp das mov out push das mov sti mov lret push fnsave rcrl jo or or xchg xor or jae sub and or cli lahf cmp cmp xor mov enter cmp ret mov sub hlt out dec dec and sub mov sub ret popf adc xchg adc inc popf sbb or bound repz or imul das lcall adc fist ds jmp jno inc mov or inc into ret cli adc imul rorl and and jbe or add push mov out lds loop ret not push cwtl (bad) adcb jae movsl jge dec aaa add sub mulb xchg mov jmp sub rcll dec out out and jae adc mov psubw lcall xlat pop loop lret or ret pop scas int3 push sub cmpsb mov push or sbb pop xor add cmp rcr jae sarb sub push pop ret push out jne (bad) mov fistp mov add icebp dec inc add pop sbb mul fildll pusha jo ljmp loop repz pop lods das test imul and ljmp les popa movsb adc test mov pop cmp sub ljmp cli xor lods test fimul pushl ljmp (bad) mov xor jno inc sub xor test ljmp cld xchg dec and (bad) add xor mov dec ret pop xchg cmp push sub push addb pusha sbb daa mov (bad) rcll popf cmp add movsb (bad) mov and ja cmc popf int3 push xchg adc pop fucomip pop loopne mov jge ds cmp xor xchg out dec (bad) mov sahf lret add push dec cld xor jno cmp inc sbb xor and (bad) hlt or (bad) mov xor mov into dec push add pop push in sub sbb notl xchg movsl stos and test cli pop lock push dec das shrl cmp xor mov mov add repz daa or xchg jnp ds loop xchg std rorb ss xor ljmp pop dec xor incb repz xchg pop push sub mov xor dec sub mov pushf xlat clc jecxz jmp repnz imul popa ds cmp mov mov gs mov adc push js or and iret aaa nop cltd popf hlt arpl ljmp or das pop lahf je pop mov faddl inc (bad) int3 gs jb (bad) je dec jnp fiaddl sbb popa shlb fdivs sub int3 fist mov pop imul stc (bad) pop into pop jbe repnz mov jp xchg push in out imul xor inc sbb jb pop fisttpl jo nop (bad) mov mov das ret outsb sub cmc lret and xlat (bad) dec sub xor sub aaa lret ljmp mov and mov pop ljmp divb into outsb jo repz int das call sbb mov (bad) jnp and scas sub repz sub pop ljmp test xorb xor add mov pop sarl mov mov popf cwtl rdpmc cmp jno jmp xor (bad) xor roll add jle push (bad) arpl add pop clc rolb dec shrl dec repz sub or mov add lret fsubrl aaa frstor xor sub mov out mov pop stc scas test mov dec push frstor dec loop sub sar das adc add ljmp xchg out sub imul call and add (bad) cs sub test (bad) icebp shlb dec inc pop xor jbe bound (bad) (bad) or adc out dec imulb cld fwait mov mov and imul fs mov mov cmpsb movl mov add fcmovb sub sub sub add dec (bad) aam out fisttpll push jnp xor imull jecxz xchg cmpsb iret dec out sub jp jle adc mov ret add rorl push aas mov shll sti cwtl lock popf jle imul daa std and jmpw xchg xchg not in jge jne lcall cs add stos repnz insb lret add xchg (bad) push mov or push add sub repnz mov jmp stos xchg das push adc (bad) (bad) and inc sub out and add push sbb add pop add xchg pop fldl stc pusha mov mov lds std pop jmp leave mov mov rcrb xor dec dec or and jnp pop fistp mov and adc mov ret adc (bad) sahf push jbe sub adc and cs rcrl or shr pop in push push fcoms add jns or shlb cmp inc (bad) idivl sub add pop data16 dec adc in cmpsl cmp or fldenv cs imul push out and push mov jg xor or gs and (bad) popf xor (bad) shl shr fnop inc adc sub ror sahf cmp addl or mov enter mov ret (bad) mov and sub (bad) popf xor leave (bad) cmp fldcw jmp leave rcll imul mov jecxz mov fstl xchg jmp jne ja fadds aaa in xchg fisttp push bound jle push cld es stos and adcb out fbld sar les (bad) xor add sbb fstps cltd adc fldenv outsl lret add sub pop mov enter scas mov js out fnsave push sbb lret (bad) pushl mov mov into ja add mov add out mov sbb xchg jmp scas jns and push and int3 cmp jo mov or ss sub pop push sbb icebp and mov mov pop jmp xchg mov imul (bad) enter cltd popf jae inc cld dec mov mov adc sub out pop xor sub mov stos pop inc inc jmp adc gs cmp shld push (bad) push daa lcall jmp aad jmp (bad) or daa push rclb and and add xchg (bad) jmp icebp lods adc jle in dec jmp sub pop das sub icebp jae fildll mov loope jno sub fmull xor inc int jle sbb and test push stos or outsl hlt punpckhwd scas out xor and mov adc js jg cltd add lcall sub (bad) and dec ljmp pushl or sub (bad) xlat clc add lds pop or jmp xlat popf sbb call mov dec stos (bad) repnz mov imul pop mov pop int int3 stos adc sbb ljmp add mov or mov cmp pop adc sub mov push lcall out push inc pop dec cld sub xchg loop xchg adc and or inc push negl xchg imul cmc outsb xchg mov mov popf jno xchg sub sub std cltd andl sub mov pop adc lock (bad) fs (bad) pop (bad) pushf adc mov sub cs sbb and dec js or adc xor pop std negl loop cmp mov lahf push rcrb lock mov repnz lahf and or mov mov gs das mov and push add iret xor (bad) xchg jbe dec sub push xor and out sub mov push movl rcll loop int3 popa xchg cld jge add jno xor ds mov xlat xor (bad) mov mov xor movsb jns stos sub xor outsl lret pop mov (bad) aad leave popf mull (bad) push out and loopne clc push dec mov dec fdecstp xor jmp and sub cmp (bad) or int3 push xor mov (bad) xor mov cwtl jb (bad) xchg int3 in and inc repz mov push (bad) jl push push int3 jp (bad) leave orb inc mov into and cmp cwtl (bad) and in repnz xchg in push xchg cld jge (bad) (bad) outsl and ds loopne sub lret fwait lock or inc repnz jnp inc xor movb data16 adc mov aam call cmp sarl jge pop in push and inc enter and aad ret ds pop rclb inc gs (bad) mov adc scas sub fnstcw pop dec iret call inc imul (bad) out gs xor ja cs ret jne arpl (bad) xchg (bad) xor fs gs cmp js repz test ret mov (bad) or mov call add cmc or push jle mov incb (bad) divb add push add jo add mov test mov mov daa mov ds divl mov aam push push loop xchg xor js (bad) (bad) outsl xor sub call idivl ljmp dec repnz iret ficom stos lcall dec dec mov add push xor out fld inc jge addr16 stc adc pop xchg (bad) popf js pop ljmp mov inc and mov cmp popf loope pop mov les cmp or and pop xor lea jne sti fadds push stc push xlat shlb jg mov push pop (bad) xor xchg shrl imul push rorl ret mov jo xor leave das mov push adc ja mov adc cmp insb out dec ljmp xor sbb adcb inc loop mov cltd lods idivb and sarw push jns stc dec ret in stos sbb mov into rorl test fild fisubrl mov sub rcll iret ret sbb aaa dec add fisttpl mov sub or pop es sbb leave idivb (bad) fist into mov inc mov fnop add lods shrb (bad) jmp or and sbb stos cwtl lea sbb push ret push rcll or jge jno pop jno jne (bad) mov mov fsts push loopne push mov out mov push or div mov (bad) cwtl fldl in add push mov dec pop fsubrl notl jmp repnz pop mov scas rcrb or nop pop call mov loop xchg jmp insl adc divb ficom lock pop ret fdivr fsubr out sub pushf cmp pop push insl loopne call xchg push add mov jae adc int cs ds jns sbbl push hlt sahf cmp or dec pop mov pop sub faddl push mov jnp mov add sti pop shr pusha cltd jb adc push outsb mov sub addb add mov or or inc or in pop or jge sub xor out imul orb ja push add shr fldl pop xor or mov jb mov jbe (bad) pop mov imull lea pushf push mov outsl out ja jmp mov mov xor and pop dec add subl add xchg fldcw lcall cwtl jns inc mov jb int3 fnop mov and dec jg (bad) (bad) dec push mov push testb das mov sub das and pop les xchg xlat mov cmc insb or and and xchg loope pop sahf arpl jmp in fcoml lahf pop cmp jge mov fnsave das in mov push mov push cld int or pop mov in or cmp mov push testb mov sbb das (bad) xchg inc mov pop adc dec inc sub popf push add out mov stos out cmp mov adc ror or daa push add inc xor or mov mov mov and pop or cmpsl jne lds sub fistl sub subl lret jnp push or mov push sub pop jbe or mov aaa sub xchg jnp popa lret fcmovnu adc std es sarb or (bad) and arpl lods mov hlt (bad) and outsb cmpsb notb shrl bound mov mov sarl mov in ds mov sarb pop or (bad) jne cmpsb out lret inc and add cli mov and xor stc mov pop std sahf cmp or pop pop cmp mov sti jbe cmp jb pop xsave out into add pop adc ljmp jge loope sub into cmp daa pop push sub mov xchg jecxz push pop and cmp jne ret loop xlat ret je lret mov inc fs (bad) add imul jno xor ds jbe xchg inc shrl pop (bad) xchg (bad) rorb xor ss cltd gs adc sub scas je out mov xchg mov jge mov xchg mov cmpsl pop dec int das fdivl divb aad xor clc mov pushf rclb jle in les lret xor aam popa mov and notl jmp push loope push or push sbb and out push xchg pop xlat rorl repz lods shlb jg stc lcall rcll out scas xchg dec pop dec lret sbb stos xor mov xor xor mov dec loop jns ret mov pop mov pop test cs loop xlat hlt push (bad) sarb lea xor imul add xchg (bad) jns push jl (bad) data16 pop and add sbb cld mov sub lods imul daa mov cli flds push lahf insl incb sbb adc mul dec mov (bad) pushl push cltd xchg push std push out jecxz outsb pushf dec lret pop xchg pop test mov mov mov cs imul dec and repz dec notb dec test dec sti sub xor sub pop xchg out lahf add or je jb and or test mov lret xor mov ret das repnz pushf lahf adc mov ljmp push (bad) sub fild movsb pop mov cmpsl cwtl dec stos jp adc movsl out cwtl dec sbb pop dec lahf push inc jl test je mov sub sub je jmp jg (bad) test dec imul xorb pop mov cli mov fnsave jmp dec pop mov add mov lret cmp mov test aam pop push int3 stc xchg (bad) (bad) lret stos dec rorl xlat adc shr xor mov imul inc stos xor sar pop xlat mov lds fmull mov push cmp pop mov jmp push rcrl jb push push rorl jp idivl mov negb loope sti mov inc leave mov adc loop xchg xor sub das int3 cltd clc mov lret push iret imul push cmp or pop popf jbe fadds inc mov mov dec dec rol (bad) leave cli mov sbb bound (bad) cmp adc enter iret jge sahf and pop sub mov mov imul add add mov xchg push clc (bad) xchg lock (bad) xchg jae adc (bad) fdivl pop push hlt push imull pop clc stos movsb xor xor adc fs lds test les add enter leave cmpsl aam mov jp lahf fstps fdivs xchg shl xor stc clc movsl (bad) icebp popf out es repnz push int adc idivl mov jae stos fstps jo cmpsl movsl dec (bad) lahf cld cmp outsb and outsb sbb push aas mov mov cmp test out jl aaa mov inc ja add inc ror pop scas sub adc test cmpl adc (bad) je icebp outsl jg lds ljmp cmpsb mov aam imul popf popf adc sub sub cwtl lret enter and cli jmp lock imul or mov std lods pop or add and imul sub cltd dec jle fdiv pop sbb xor lcall mov jmp mov sub inc jg fmuls cmovle sub sbb add int3 mov adc in aas sbb adc lahf pop stos push dec gs add sub or aas cwtl xor mov or add aas ret fcoml pop movsl dec xchg rcll lahf push ss lods pop out fs cli fdivl pop xor sbb jbe push ret push outsb push lahf add orb inc push mov out into jnp and inc mov test sub xor out gs mov sbb (bad) mov cmpsb adc lret pop push add or add jle ret je push pop or pop cld movsl fdivr mov cmp cmp daa icebp dec cltd xchg mov clc out sahf into push jne adc pop loope cmp cltd mov shrl inc adc aad jnp jae pop pop enter xchg adc dec dec ds jmp loopne scas xor adc out or clc fwait adc mov sbb push sbb push sbb stc mov mov arpl mov arpl int out cmpsl pop pop sub mov out sub sbb mov into lock notb out add loope notb das ret add mov mov out pop xchg cmovp mov iret cmpsb jns out insb leave fld mov xchg stos test test jle inc sub fnstenv mov std pop and xor cwtl jmp sti mov addr16 imul sub xlat cld (bad) and add in daa or jg pop call xchg gs test mov pop mov xchg jbe inc or stc imulb mov jmp pop imulb xchg xchg dec mov jle push repnz adc mov (bad) sub mov inc jl shrl xchg stos sub cmp rcll push stos adc stc add loope ds mov dec jl push add push push push push divl jle jo push add pop fs stc sbb leave jno (bad) xor mov mov lods sbb cmp dec sbb lret int3 negb sbb and sarl dec sbb dec hlt pop push icebp cwtl dec ds pushf xor sar cli adc mov adc jmp (bad) push loope or (bad) neg pop jp call xor dec adc sbb in cld (bad) fbld mov jl ret mov pop inc jmp aas stc push adc add loopne adc fwait stos fstpl setge cmp add mov inc cmp das or jge pop (bad) lods movsb sub or xor jnp (bad) jp adc xchg mov jae or sbb push mov and pop aam xor outsb (bad) jbe ret das fldenv sub sub aam mov jle enter out and lret sub sti add shrl xlat and mov aaa out sub cmp jle adc cli push and enter out xchg imull xlat aad mov push and aas jg lcall stc jno repnz lahf neg push pop lretw hlt aam dec push mov daa fisub fcmovnb das (bad) lds into testb dec fisub jne ja push insl ret out movsb stos mov lds pop loope add mov add mov jns dec cwtl dec sub daa mov pop pushf lods rcrb mov xlat sub aaa ret inc jno dec cmp dec mov and in loopne xor iret or stos xor and xchg sbb cmpsl decl inc push lret mov (bad) icebp xchg or or mov mov cltd aam das in add test xchg mov nop xor dec pop sub cmp add mov mov pop shrl or xorb mov std pusha mov das mov push ret jmp jne ret scas fxch xchg cmp (bad) jg out repnz call or and call ljmp xchg mov and adc or in (bad) shll in mov sub repz cmp pop push lock inc sbb cmpsb test out js jno insl test and ja mov cmc shr lods or mov pop imul subb jns roll push adc pop pop out push and js mov sbb pop pop push push mov adc add imul pop rcll icebp add mov xchg push pop sahf xor jo jle std lret fisttpll xor pop add mov cmp add jae daa std pop pop pop add and push mov ss stc fldenv cmp cli movsb pop sbbl jmp jo in and and in or mul adc (bad) xor xlat ss or js xchg fidiv out (bad) add pop push mov pop outsb or sub or int3 aaa jae add inc dec jo or mov movsb scas cmp loopne jno pusha dec push sub pop add mov jnp push dec stos or (bad) jle pop pop insl out xor and pop (bad) das aad sbb sbb (bad) repnz jmp inc inc pop push xor dec xor nop insb dec pop mov push cmp (bad) adc out jg add pusha clc cmp clc cs jne mov loope sub pop xor popa jb or clc sahf repz not (bad) pushf cltd lret adc je pop repz dec sbb mov pop push in pop or mov sub and inc push jns repnz int3 push jg movsb mov pushf xchg in mov leave fcom mov enter ljmp and inc and jmp mov mov mov push inc lea xchg xchg std (bad) xor push add and mov xchg mov lods fstl inc pop xlat nop stos add mov mov xchg repz mov add mov outsb out test sub xor cwtl push ss das xchg jo pop les shrb xchg cld sahf movsb (bad) xor (bad) or arpl cli cld stos repz (bad) pop jmp xchg jecxz orl sbb mov cmp jecxz push clc stos das daa icebp pop inc lcall outsl lea push outsl jmp mov jecxz xchg pop daa (bad) iret pop sbb and mov ja icebp daa rclb jns mov sub push xor mov fprem1 into lods xchg inc inc jmp cltd aam lret scas and and or ljmp (bad) enter xchg sbb push fldenv sub movsl aam and into jle rorl pop sbb add add and out lret xchg xchg mov mov scas fdivr ss cld cwtl into xlat mov cmpsb pop xor xchg inc jg xor into pop jno pop sbb fstps inc xchg cmpsb das je pop mov adc sub mov scas push jge fcmovbe mov jecxz cmp push fsubrs xor fldt fisubrl xor loop aas fldt or outsb lret popf adc das dec pop pop push lret popf in ds lods idivl (bad) and xor sub les testl mov mov and shr jno add cmp jnp and sbb pop pop dec (bad) lret rcrl xchg adc ret mov or sub sub xchg dec push add or cmp clc jnp das sti in dec roll fmull scas fldcw and or jle out mov add push jl (bad) cmp scas gs cmp add mov pop cmp mov fsubrl roll cmp rcr adc mov loop test std int3 mov xor int push mulb push inc add push int3 fmull pop sub iret mov and lods mov pop fmulp fs addr16 stos into and jbe (bad) (bad) dec fsubrl mov je aam out dec cld fdivs fcmovne add xor cld iret ret sbb insb setge movsl shll lret jecxz call lea dec mov and outsl (bad) shrb or add rclb icebp sub call jg mov fwait adc jp test in mov adc stos dec leave test push mov sub sub or (bad) (bad) pop jmp xchg lret neg imul outsb push cmp sub int3 dec leave ret or jge sahf (bad) dec fldcw leave scas mov xchg loope scas jb xchg icebp gs (bad) cmp fldcw int popa fnstsw cwtl jno mov sub cmp dec push inc aam and mov imul cmp fs adc adc pushf jae nop dec nop push mov jae stc gs push sub add cmpsl (bad) cmpsb or frstor cld and clc mov pop bound lcall pop inc lods xor repnz jns rclb and ficomp cmp xor ljmp pop push push imul repz and bnd test xor out xchg fistpll xlat ds outsb push addr16 mov jmp jno test sub mov cmpsb pop xor mov push add fisubr (bad) xchg pop xor dec rcrb mov icebp loope pminub aas add mov sub (bad) je cmp jmp adc lmsw ret mov lods mov mov ja movsl movsl dec popa inc add adc inc cmp stos adc mov push jmp xor stc leave popf iret in jg and jb sbb ret rcl pop cmp jmp sub leave sbb sub xor cmp jne jmp ljmp mov repz (bad) jmp add adc add fs sub xor pop and or les or das jmp imul je adc neg jle push mov int3 (bad) xor jmp cmc cbtw dec and push or in push sarl jns stc add bnd and sub dec xor sti fs push movsl sti cmp out xchg rorl ret push ljmp pop jne (bad) (bad) sub int3 jno mov rcl pop fnstcw popa frstor lds pop jmp aam rolb or dec add push sti rorb pop mov jg into jmp add push cli cltd sbb sub adc mov mov add cmc push inc (bad) jp icebp jg jl (bad) call das bound and (bad) pop or add ljmp sub push (bad) or je mov cmp or frstor pop (bad) imul pushf push imul daa out add mov sub repz and xor movsb sahf push imulb inc jmp pop into icebp or fimul imull push popa xchg mov test les push nop shlb pop out mov jbe (bad) lret sub xor leave dec je adc lret sti or fnstcw call cmp mov mov sbb and sub into sub xlat mov sub fidivl jno (bad) ljmp push mov and pop pop frndint cmp lret (bad) jae and add cmp and sub cmp jns dec pop movb (bad) mov std daa test (bad) inc pop out mov mov dec inc movsb es ds nop inc popf inc popf test xchg (bad) bound out sub jbe imul test aad shr jecxz test push lods fwait cmpsl in clc out mov sub jae cmpsb es ja lods or dec shrl (bad) xor pop mov ret mov repz das bound cmp fsubrs or dec mov repnz add ljmp xchg and add ss call xor dec sub cmp or mov pop adc add ss inc enter mov push aas rorb inc and jp mov shlb mov add jne ds andb fucomip hlt dec clc mov pop cld or cmp cmp pop mov out cmp and add push stc das jle adc not out cltd sahf push add mov mov lods jno lods adc or (bad) mov andl iret outsl jmp (bad) mov ret push xor xor push mov stc idivb add repnz aas sub push adc sub cs mov pop inc sub pop pop jo sub inc cwtl push add xor add jge jp (bad) pop (bad) sti mov mov mov xchg push fwait push adc and (bad) jns ds fdivrs add mov jae xchg loop xor xor out bound jmp push jmp push mov mov fmuls ret and das or fwait aaa pop mov pusha imull add cld xor rolb mov loopne push pusha (bad) clc sub lahf pop fisttp sarl roll sub (bad) outsb out sub jg jno mov ss xlat lret test fs das mov test out daa xor pop std dec (bad) sbb ret adc mov xor pop mov push aas aas cmpsl rcrb sbb (bad) repnz adc fidiv out jnp (bad) mov fcomps jl push push pop add out pop sbb mov sbb push adc ljmp add jno xchg fidivl fst outsb sub and xor mov jge jo fstps popa pushl enter leave add test stos repnz sub repnz dec and mov and pop sub push adc rolb call mov pop icebp mov dec pop xor xchg jns or dec sub aad stos xor or dec push jmp out sub mov cmp or mov hlt jns push inc lahf cmp mov mov adc cmpsl push in adc inc pop ret push mov je lds repnz subl and inc or std xchg enter sub jns movsl push push add icebp dec lret xor jmp or and xlat inc mov xor mov jno cs mov ljmp sub pop or xchg cmp xor pusha test lock (bad) into sub sub cmpsb inc sub int3 or push jno test xchg scas and sti leave shrl xor scas push xchg jmp add dec enter xor cmpsl (bad) xchg pop mov jno xlat movsl (bad) xchg mov out daa (bad) dec jmp mov test pop sbb (bad) mov fldt xchg push sub adc repz ja mov add and add or cli mov mov or jg and test cmc and jmp lds mov push je dec mulb mov adc in insl jne adc mov das into sub push bound add int3 push cli mov push sub xchg cmpsl fs leave sub fsin sub push jp pop loopne xor cmpsl outsl dec push dec (bad) jae push push insb shll out outsb imul pop test roll imul sub inc or push and mov sbb xchg dec push lods pop movsl push adc mov add leave (bad) jno push mov in inc das dec cmp adc lock sti or add jne xor xor in mov cmp push (bad) popl ds ljmp pop popf push jbe call mov loope inc jae sub pushf ds daa aas adc dec dec js lods dec shrl idivl mov sahf sub js xchg sarb ret lock data16 fdivs or es push pop add out jbe in rcrl sub mov sbb pop mov loop mov movsb (bad) into push lds ret sub xchg pop mov jae xor ds adc or mov pop sti (bad) gs in rorl adc sti mov and pop push sub sub or (bad) scas sbb push push je repz dec sbb sub out jno push xchg mov stc cli xlat pop inc icebp icebp fisubrl hlt test int3 dec xor les mov enter and mov imul sub loop test xor int sbb pop vcvtss2si imul cwtl dec xor pushl in clc test jne sti mov xor cmp cs jo sub arpl cmp pop xor jae sub divl or stos (bad) enter hlt add pop push outsb leave popf popa loope jp insl add inc pop sbb mov and dec or inc sub push xor add xor cmpsl ficomp jle jno cld xor popf jae movsb lcall fstpt out inc sub aam mov sub into xlat or (bad) imul dec pop pushf stos dec dec dec mov shrl xchg shlb frstor mov mov (bad) xor or jb dec sub test jle or or sbb cmp mov jmp popf push pop mov stc cmc imul stc and repnz fdecstp idivl das sub mov xor xlat lds (bad) xor add add mov mov push test adcb dec push sbb or in into loope call sub adc iret mov repz jne shrl insb aaa in pushl fldcw cmpsb and xor cmpsl mov iret dec stos repnz push je push or lret or out jb add mov sbb js fistp into mov dec mov or jecxz pop xor sub sub push roll mov popa sub cmp sti hlt xchg dec sbb popf clc jecxz adc lret push mov lods cmc (bad) sub xor clc lods mov mov jp mov and and jno js cmpsb adc pop sub js xlat xor sbb ljmp out mov push inc lahf repz clc jmp sub mov dec fistpll lods ret mov mov pop iret jg das pop mov dec mov adc pop lret into dec rep push repz int3 inc ljmp adc out mov sbb clc outsl lods push mov pushf xchg lcall decb add jecxz cli or lds ja mov mov ja mov and inc xchg mov stos jae and imull sahf pop push jno out stos sub das adc jg xchg clc push jmp shrb loope popa rcrl or repz fisubr (bad) (bad) out (bad) mov in adc xchg push or cmp fildll shlb push fisttp xlat ljmp pop out dec sub mov outsb mov sub negl pop mov or and push xchg pushf and leave add mov push clc lds call and loope xchg cmp lcall sub flds movsb les ss and jmp in pop xor movsl imul mov mov jnp and inc pop lret ja mov push cmpsb and sahf fsubrl mov ret aaa mov (bad) push lret mov sub lret aaa mov pop ljmp nop jp test or lret icebp lods xchg rol (bad) ja mov (bad) ds add jmp add mov aaa pop ja nop adc mov sarl mov (bad) inc loopne out int imul mov mov jbe push test sbb inc rcrl hlt jmp lret addr16 and lds mov cmp ss out jg adc push lret push scas scas idivb push addr16 popa jae scas jbe pop pop jnp movsb insl scas push push mov jecxz sti repz inc data16 pusha and xor ret mov pop xor out icebp cwtl mov (bad) sub ss mov push sbb adc daa aam and mov push imul xchg mov scas sub xchg cli daa inc nop cli xor or lock mov outsl popf shl pushf mov mov ljmp mov xchg push sbb and mov repnz and repz inc test testb loop divb sub or xchg cmp push sahf pop pop mov dec fnstenv cltd mov movsl das (bad) push mov sub mov ss push and popf div lret std mov clc xor fisub fidivrl or push les cli lret pusha pop add cld dec cld addr16 push add add jge sbb lds (bad) ja adc push xor pop fdivl fadds cmp loop (bad) int3 pop sub ret mov rcr outsb xor jnp (bad) add lock xchg outsb inc xor pop sahf loop inc dec inc push mov sub sub or add sub fidivrl or adc inc dec rol jecxz pop xchg xor add push std jns xorl outsl popa into lret addr16 mov (bad) sarb adc mov stos test outsb xor out jb mov add pop mov jne mov add push lret daa sbb dec push and jge fstpt out inc pop fs call das cwtl inc xor mov sub call mov xchg fscale fnstenv sub pop xchg xor sub inc fimull inc add popf incl pushf mov add daa je and out dec (bad) jmp cli xchg repnz push xchg test cmp int outsb mov cmp (bad) out xchg icebp (bad) xor mov mov cli out pop lret das ljmp push roll roll sub add push mov notl sbb mov imul and movsb aad xchg mov jmp sub push add and mov icebp (bad) lods std xchg lods xchg dec sub fcmovu jo imull outsl mov mov xchg (bad) xchg mov leave dec mov (bad) lcall sub xchg or xor lcall sub inc and lcall push ljmp pusha dec ret mov jg fcoms rcll stos pushf or mov out pusha mov in outsl mov cli in jo scas movsb push notb (bad) icebp and imul mov jg jmp push xor mov fsubr xor mov pop loopne repz jmp (bad) in mov rcll dec xor fstp mov cwtl mov sub cmp add add push sub outsb repnz jmp outsb scas dec (bad) (bad) xor fdiv rcll fsub cmp mov popf pop xchg in xor push ja mov push and ljmp mov imul pop stos stos xchg inc add add notl jmp jnp icebp out ja dec mov mov or lock mov xor and or xlat into push mov int push xchg (bad) repz sub icebp push cmpsl into std xchg nop mov mov push push cli mov adc in pusha lds or mov lds mov sub add or mul negl sub jmp cmp ljmp aam push jl fs mov dec and and push mov lock xchg out ljmp xor mov xor out leave ret pop xlat gs (bad) hlt and push or or push add sub shr jge xchg bound movsb push icebp and inc dec cmpsl jno fs repz popf fstps xchg (bad) jbe aad ljmp sub cmp aas std sarb jne int imul pushf push sub add imul rol (bad) idivl jg cmpsl or mov add lods and lahf sarl and push mov in xchg into jge push mov mov jb mov outsb (bad) dec pop xor sub test push jns sahf ret push idiv sub jmp or add or add sahf fmulp ror scas cmpsl inc mov stos inc popf cld inc enter or jmp jecxz dec xchg ljmpw idiv push jecxz lds mov sub and jbe lds lea mov movsb mov mov xor inc into dec xor rorb fiaddl rcll scas ljmp pop into inc repnz and arpl jno jo repz dec aad mov add sub or push in and sti adc std insl sahf jle fwait xchg stos mov xor repnz aas xor sub mov or mov lret mov dec xchg mov jp jb cltd xlat addr16 sti pop cmp mov sbb xor dec es fisub push test repnz jae cmpsl les xor pop mov jae mov sub mov mov adc mov xchg and movl and das mov sbb mov mov (bad) mov enter repz imul jge (bad) jmp mov inc dec bound lea ljmp jbe repz push push aam and cs add jnp push lods mov xlat push (bad) (bad) into mov mov das data16 adc dec and imull cmp (bad) (bad) push (bad) into cmp das (bad) lahf rcrb (bad) (bad) xlat in cmpsl (bad) mov adc or add xchg push push mov mov hlt div testb mov inc jl jnp inc rorl aad push xor test lret sti pop fidivrl aam bound fisubl or sarb repz stc shlb sub (bad) decb xor pop movaps in movsl cmpsb rcrb fdivrs shr imulb subl (bad) aaa mov xchg lock ficom pop sub out fs lahf dec test lods jge jb and and in scas dec aas lcall sub sub sub and jp rorl dec stos sub (bad) mov lds scas int jl pop test pushf test cwtl test not and or mov fiadd loope add mov sahf and aad mov gs repnz xchg cmpsl pusha pop scas sub mov jb xchg std mov xchg xor imulb fcomip push jbe hlt inc clc scas (bad) in jns mov loope push xor cmc lds xchg and pop clc and add lock lock loopne mov cli cmpsl xor movzwl pop inc rcrl fsubl add cmp xor jb das out out cltd (bad) insl test pop lock add sbb scas fistl xchg mov subb push or nop iret mov sbb mov pop mov dec scas adc scas adc xor jmp jge lods sbb xor push adc scas xor shll sbb mov push pop pushf test push (bad) outsl add into and scas adc cmpsl xlat adc stos sub push lods jnp daa add add in dec xor stc cmpsl xchg mov sbb (bad) dec enter jnp add lcall mov iret xor clc mov mov dec imul pop into sub test add cmp mov mov popf shrb push jmp nop je cli mov push add scas (bad) fld push xlat and sub sbb lods jge pop xchg pusha inc sub (bad) inc lea sbb data16 add cmpsl clc out pop jmp mov sahf popa add mov repz sti push or sub xor inc pop and loop add imul jg push xchg mov jo aaa nop pusha mov xor cwtl addr16 adc (bad) jmp out or sub cld out sub xchg (bad) insb pop popf imul scas cmpsb jno out inc das sbb xchg adc ss cmpsb lahf sub push movsl push jnp jbe arpl sub mov jle imul cli jmp jge push xlat cmpsl rcrb add and cmpsl int3 mov sti pop cmp mov les fstp cmpsb inc xor mov cs (bad) xor mov fistpl or sub test roll iret push add (bad) pop mov das push push bound fild lret mov xchg stos adc (bad) dec pop sbb cmp dec stc iret xchg push jg adc out adc sub lret push and or mov outsb ss jo lds rep mov dec rcr dec clc or or push in out sub sbb (bad) ss xor (bad) aad repnz jg mov mov cli jnp mov mov pop jmp mov add cmp sti lret ret (bad) leave pop mov adc (bad) std dec aaa sahf sar pop sahf mov jbe xor lret (bad) cltd sti jnp xchg and mov movsb mov pop cmc jecxz and movb or inc and cltd fild push cmp and mov negb cmpsb inc dec call sti mov imul pop cmp stc jno repnz jl test fcoms push sub cmpsb ds dec lds cmp sub and das (bad) cmpb (bad) add loop shr or (bad) sub shr mov (bad) lahf pop jge add inc inc dec mov imul (bad) or sti or cmp movsbl adc ja sahf dec push movsl jbe lds mov cwtl sbb inc or movl pop jecxz lds sub dec (bad) push ljmp out or imul jns lock pop pop add lret and add shrb dec adc fsubrp daa nop xor pop (bad) subl mov mov xor and rolb pop repnz mul and cmp mov or loop add push sub and dec xor mov or je imul jle clc dec test rorl call xor sub rcll sub mov push in sub adc (bad) insl pop (bad) xchg add neg xlat mov mov (bad) sub das loop insb adc mov stos cmp mov push rolb lods mov lcall xchg mov fistp mov push enter dec add dec dec sub or cmp popf xor xor mov inc and lret int3 movsl pop sub pop subb or cmp jae ret pop dec je bound cmp fs add xor mov jmp mov sbb mov mov add mov aad in mov sbb and and sub pop xor lahf fisttpl mov dec jecxz pop and jmp popf out dec rolb sti daa sub xor (bad) imul sub clc stos ret and aad xor inc inc mov js lcall ljmp add out or mov xor mov pop pop cmp add int3 outsl add pushf (bad) and sbb xor inc or mov add cs and cmc sub sub out jb xchg jbe dec sub xor mov mov lret aaa sub scas dec imulb cmc dec ljmp push ja jp (bad) mov sar insb cmp cmp pop (bad) adc gs cmp add add sti aam ss ljmp push jmp push shr mov xor dec jl mov xchg ja insl pop jecxz jo sub xor jno xlat or and pop sub dec icebp (bad) cltd inc imul inc dec sti fwait scas push add mov pop leave mov pop pop pop fsubrs add push jbe jns repnz adc leave jmp pusha lods into pusha and add mov addr16 fld push daa fs lods push xor adc pop sub outsl sub das testb (bad) in icebp mov pop clc mov lods and sub xor outsb cmpsb les mov (bad) mov mov into sar dec leave nop outsb jecxz xchg mov and xchg mov jmp dec das outsb mov insl imul iret stos mov xchg sub add popf pop addb and js dec enter ret pop test or out xchg int3 loope inc and ds sub or hlt (bad) pop dec repz jmp mov iret sub mov ret inc mov mov repz push pop adc mov std int3 xchg or fnsave xor or (bad) dec leave lcall pop inc out out adc (bad) inc mov and jmp inc xor cld repz and ljmp popf das inc aaa stos sub decb ljmp push lock (bad) movsl cmp sub mov gs (bad) pop pop gs in movsb or mov cmp pop and orb mov imul call adc (bad) pop inc jle dec mov sub inc lcall aam pushf scas std push xor cmp sub push jecxz pop mov add arpl mov test or loope (bad) push mov icebp jmp jno and mov mov leave or push iret pop mov (bad) leave sub lret mov mov sub jg mov push jmp leave inc xor dec xor mov dec ret fnstcw jle out clc daa dec and and (bad) lock fimull push xor mov out jl xchg int3 pop mov xor out jmp jb loopne jg jno ljmp mov scas pop stos lods rorl shrb mov jecxz les cmp mov sbb std (bad) (bad) out inc pop daa push dec fsubp inc test cmp popa scas fldt and scas gs ret push inc sub repnz pop idivb and dec outsl lret xchg gs and mov rcr shl rcrb xchg lock mov lret adc jg,pt xchg sahf cmp int3 outsb mov push sbb test mov cmpsl inc je pop mov push cmp or mov xchg or dec cld nop orl push xor dec ret push clc fadds xor jmp sbb dec xchg nop mov bound out adc (bad) jns mov mov sti xor fbstp mov addr16 and xor mov data16 ss dec add es je rcrl pop scas dec aad adc popf dec sbb std test jns mov xlat imul mov xor (bad) ljmp data16 push xlat inc scas lret gs pop fidivl mov stos xchg pop out lds cmc (bad) add test xor xor stc es enter cmp pop enter sub or repz imulb inc jns sub movsl ror xlat and or sub (bad) idivb hlt sub movsl jo xlat popf sti adc roll mov mov xchg lods dec scas mov pop scas jb out mov push sub pop cmp lret xor jb out outsl (bad) daa pop or cli or xchg push and fldenv xchg ret mul cmp pop xor sub pop sahf add pop and pop shll out fsubs sub push repnz mov icebp std bound into aad cs daa mov jle cltd clc jge fcom mov mov popf in das sub adc mov rorl xor sarl and jnp sub bnd hlt (bad) imul mov stos jno pop test mov pop cmp loop pop push rclb mov sub mov cmp mov push aad xor jl fs and popf push aas adc out mov (bad) and xchg mov sub push pop pop bswap prefetchw mov lret pop mov adcl or arpl dec jno das mov (bad) lods stos leave push pop movsb push push daa adc and outsb cld pop in xor inc scas cmpl in lods jns scas add sub fildl addb xchg out scas lret test adc xchg pop jbe sub or cld cltd inc or mov jecxz jnp sub popf ftst insb imul push ret in movsl inc sbbl lock mov xchg movsl push jns test or add cmp (bad) mov rclb shrl lock sahf push or add push sub inc xor sub dec rolb repz pop (bad) fiaddl leave mov popa popf shl imul sub add push ss cld repnz mov je rdtsc ret repnz mov pop loop xchg mov lret mov or mov sti negl cld xor sahf rcrl cmpsb addr16 xor data16 sbb sub dec inc pop mov repnz shlb jmp mov push mov adc (bad) (bad) in mov mov cld std pop jle inc xor push pop add add sub jl (bad) or (bad) imulb in rorl pop cmpsb and into in push mov sahf or daa and hlt leavew mov setb (bad) jb pop mov inc xchg scas imul push inc adc cmp jmp test mov adc mov sub (bad) jp repnz xchg or jne jno sbb jno and xchg inc adc dec push (bad) call xchg sbb (bad) lock (bad) data16 outsb rolb fild rol pcmpgtw scas sub nop aam ret inc lahf setb out cmp ret mov dec push (bad) cmpsl xlat sahf cmp add xor imul dec es loope lock dec push pop out mov in (bad) sub notl or jg and fimull test ret rcl (bad) lods add xor scas das lods andl adc call jecxz,pn and add hlt push xor pop aam jmp pusha repz sub out mov mov sub ret xor mov sub push and xlat mov cwtl cmp je bound repz loop xor int3 outsb sub and mov mov dec sub inc adc (bad) mov clc insb xor mov pop push inc cs jp jne test cmp fildll cld add push rcrl std les mov lods test mov or lods pop push jb insb and ret xchg out int3 or mov and mov push and fistl adc call jmp insb jb cld pop push pop lods pop out out (bad) fildll into push dec stc scas xchg repnz sub mov xchg xlat ficompl cld sub mov out cltd adc stc notb ds cmpsl negb sub test cld daa lock or and dec test mov jne mov fcompp imul aam mov hlt mov xchg fdivrl jo inc xor add imull sti xchg mov fistp xchg shrl or aaa mov out or pushf add popa mov or jl loop and movsb mov xor lock (bad) and adc adc aaa add and xchg jg gs mov enter xchg mov ds xor push push imul imul mov hlt or out mov push leave jge cmp adc sub cmp lcall mov std cli test les xchg adc rcr pop lock mov movb icebp mov negl les daa mov addl or inc push mov jmp add mov je nop pop cltd (bad) dec dec mov fcmovnbe mov push daa xchg jmp mov add add mov push insb leave dec call aas scas mov icebp jo mov push mov icebp inc imul jne and dec idivb dec pop insb jno out repnz mov add adc mov push fwait addl mov adcb divl dec fild imul mov ficoml mov dec fisubr cmp sub rolb fnsave sub movsb jb negb or daa stos jle push (bad) out icebp es and pop cs xor mov in (bad) mov ficom enter (bad) jns push add or mov repz call scas mov pop sub dec lret add cmpsl dec out fiadd jl pop roll or stc dec notl icebp inc sub out mov push xor lods xchg add (bad) aam mov sarb push pop xchg pop and loope inc sub (bad) fisubrl ret movsb mov sbb aas and inc or mov imul add stos cltd cs imul push mov sbb leave aad aas lahf (bad) sbb movsl inc inc das aam gs pop fs stos mov dec shrl loopne aad addr16 mov cmp (bad) xor je inc add sub jae gs into push in seta xchg pop popa (bad) repnz push mov mov dec faddl or fstpl daa push adc and fdivrs repz jae adc mov adc stos lods hlt sti adc notl mov jp xor (bad) jle adc sbb iret repnz shrl jmp ja sbb push sub leave mov fcomps dec sbb inc push mov aam mov mov movsb enter or ret mov jg inc add mov cwtl cmp into test mov add mov sbb pushf push mov and (bad) xor test lods jbe dec loop popf imul sarl lds xchg xchg and inc mov mov (bad) into and or je cwtl sarb push cs push sub pushf stc movsb in dec push pop out xor mov mov arpl sub lret mov js dec jns adc repnz clc and adc aaa xor push jmp mov lret and mov and cld mov stos sub cmp enter insb xor les mov xor sti lea dec or add fistpll lods push outsb (bad) decb sar push fnsave loope scas bound dec mov fmuls ds mov mov stos xor add gs jne,pn clc fwait (bad) mov xchg dec push jno cmpsl sbb fdivrs xor dec out mov std mov jno add xchg lret rclb shrb lods ja mov add and push add popa fs push jp (bad) mov cli xchg ret push push mov cmpsl les sbb notl loope jb mov out pop arpl adc and (bad) add iret scas popf (bad) cmp addr16 add lea and jle and test dec outsl add mov jmp jne mov sub clc adc fdivrs pop adc pop and mov mov rorb xchg mov push add mov cmp in pop cli or or aaa jmp lahf xor iret das js sbb daa aaa vcvtsd2si jle loop and inc sub add and and sarb icebp add sub repz or inc dec sub loop popa sub out or into cmp pop dec and dec mov dec and cmpsl jbe push and mov cmp ret xor into hlt push (bad) jle push repz mov loop xchg mov aas mov pop lock popf xchg push fs add push lds and add pop push int3 lcall mov and pop push push repz sub iret push test ret ret sbb sarb dec in sub lcall in fisubl sub outsl cld sahf xchg adc mov call (bad) or movsl cmp or xchg lret out sbb or in ds ja aam mov dec mov jp push xor repz testb insl adc (bad) dec sbb pushf jge imul dec imul test stc mov pop adc lcall (bad) push pop gs mov jbe or adc mov lret push movsb fsubs (bad) push out inc subl movsb jmp pusha and add or add mov adc sub movl sbb pop cmp call push pop mov pop xor fisubl (bad) jno xchg popa loop test add lods dec out dec sti xor jmp cmp inc adc mov mov or (bad) push add mov daa jae daa jnp movsl (bad) jg test pop adc sub xor cmp adc cltd pop outsw push sub adc jg in les sti and scas fistp inc xor dec pusha jmp dec addr16 notl xor lahf inc push lods xchg push out cmpsl cld pop pop hlt fisubrl stos or loop push push imul lock (bad) fbstp mov in and add xor xor scas bound push mov call and sub add inc sub imul push into and or iret adc popf test mov and popf rcll leave jge loope pop dec mov mov inc neg push out add xchg je inc ljmp imul mov dec push and mov or mov pop sbb or (bad) mov push and sub dec pop xor dec or jg xor fwait das sub fs (bad) adc addr16 and push sbb pop inc xor mov xchg fs xor data16 dec ret pop int sub pop test sub dec pop mov inc aad mov loope in and dec and (bad) sub ror in outsb mov (bad) mul outsb xor mov adc add pop andl cmp loope mov xchg addr16 rolb push ret dec jp shll xlat mov adc or or enter xlat (bad) and cmp push push push cmpsl sub lds mov mov or (bad) adc and cli xor sub dec inc fs add add jo xor add xor xor daa add jae mov notl jmp (bad) into sub popa xchg (bad) and mov leave sub and sub ret lock int3 mov push imul (bad) mov lea outsl lret inc dec into cmpsl inc iret and sar (bad) rolb xor and or cmp shrb xor ror jne push push or sub clc adc lods pop mov popa pop mov outsb idiv and sub sub jmp in (bad) xchg jecxz xchg jae push jle xchg iret scas sub mov cmpsb push aas ljmp shrl push movsl (bad) sub xor mov cs mov and pop lahf shr enter out mov mov sub pop mov cmpsl hlt inc imul test sbb adc add ljmp stos into mov xor notb xchg lahf flds loope repz or mov lahf add sbb gs mov ljmp mov inc mov dec mov out and out out inc xchg jle call mov pop sbb mov (bad) mov adc out sub jg clc je icebp popa jnp add xchg jne mov push cmc loop cmp mov pop gs pusha add pop sub out sub orb xlat xchg dec mov leave mov sub in movsb lret or cwtl dec add dec fs sub outsl push pushf inc lahf sbb push xchg push adc inc jp mov out dec divps (bad) idiv jmp hlt xchg ret push pop (bad) movzbl mov and decl add bnd sub xchg sub rcll xor mov (bad) mulb adc mov btr lods or lds or mov mov xor mov pop pop mov add mov (bad) push add movsl sbb adc es gs mov repz push push push idiv movsl gs dec jge nop sbb jle out adc or or mov add lret and fptan cs movsl cmp dec fidivr mov movsl push sbb push fdiv popf dec sahf dec sarl test aam js mov dec dec push cmp or lret das (bad) gs ret gs pop sub fimul add mov dec repz mov in jecxz or xor into sub add ret push mov push test sahf shrl sub test push mov adc sub clc daa dec mov imul sub rcll call cld imul (bad) shll adcl inc xor sub mov jbe icebp lods push or stc cli shl xchg test mov fdiv dec mov (bad) mov aaa inc mov lock pop add out or cmp pop dec in xor mov sub xchg mov inc push jp jg and test out pop ljmp and pop movsl aam jmp jecxz mov fwait add (bad) ljmp sub mov enter cmp mov pusha jle sbb xor mov or loopw stc test sbb pop add lahf loop adc pushf jae push js bound test adc pop lret mov sub enter in mov scas mov rcl push jmp or add sub xor or inc imul (bad) jle aad adc ds sub sub add mov push pop shrb test xchg push lea cs dec add jne stos fs sub pop repnz or and mov rcrl xlat lds mov dec ret test cltd jbe repnz test mov (bad) inc xchg sbb andb aad cld mov cltd bound adc fwait add stos fnsave repnz add scas xor les adc rorb mov mov imul adc jns push (bad) mov lods (bad) movsb adc repnz scas or ret pop dec push sub sarb add cmp push xor xor rorl addr16 or pop (bad) ret adc dec jne clc or out icebp out lods jae push repz pop js add dec outsl in jge xor aaa iret and and (bad) or or or add mov add out cwtl fnstenv jnp jbe fistl push and into (bad) add andl shr clc leave cltd and (bad) cmpsb sub movsl mov stc idivb in lahf jno loopne lret in mov orl clc adc ret pop aam jb pop dec jle adc jmp add and or mov add sarb inc test scas fcom mov inc fabs inc fwait sub and mov dec test adc or lock lds and sub adc mov into roll xchg incb clc ja insl inc jb les call leave divl dec mov stc bound and jne add in daa inc or clc int xor mov and das mov lcall or call and iret loope andb mov cmp ljmp xchg sub mov xchg leave (bad) cmp mov or ss cs jmp int into or mov mov ja or push ret sbb test in adc mulb and repnz xor cmpsb int3 pop mov pop mov mov mov stos jecxz nop aad es and sbb cmp neg xchg ja (bad) enter mov icebp je jge out cmp mov into xor xor fnstcw mov out gs scas cld leave flds sub stos leave out testl push sub mov mov add sub cld loope shlb mov ficompl pop in cmpsl jnp add dec inc testb inc or dec enter sbb add add outsb mov xchg enter add pop add jne add icebp jne add mov outsl ljmp pop sub daa jne mov ret mov push sub mov std add and out test icebp out iret xlat inc sbb mull mov sub xor mov push cs or sub jle rol lahf push mov add into mov add stos mov pop mov repz pop and mov pop frstor frstor or cmp sub jl (bad) stc ffreep add stc (bad) mov cli pushf movl sub imul repnz sub jne xor jg movsb test mov push xlat stc repnz ret xor add lods fistpll lds lock add movsb add mov jb mov imul sub (bad) das push inc pop push hlt mov add daa shrb mov notl dec ljmp and xor cltd test or jmp imul xor or dec inc mov adcl or add jge pop aas or sarl jae adc pushf adc js pop imul cmp ds cli mov dec fcmovbe decl out inc (bad) mov mov and mov jbe jne sti adc adc mov cwtl int dec (bad) enter sub sub mov and add jg or push les mov ss les ret jl movl les jns mov xchg mov push dec ret cld sahf in cltd lock subl sub cmp cmp mov les movsb mov and psraw xor cmp les jecxz clc sbb in scas add and xor std dec push push sub inc push sub roll dec imul leave lea sub add pop mov shrb xor popf in cmpsl mov and into dec daa jge mov mov shrb jmp outsl xchg pop call sarb ljmp test pop icebp jmp inc popf or pop cs push cli jb xor inc lret (bad) (bad) and inc sub inc xchg or pop addr16 mov adc pop adc xlat add xor mov mov clc jl repz scas sub push sub mov xchg mov add repnz mov lret push pusha or sub add inc pop inc mov test push sub adc sub mov lock aaa push mov or and dec adc add das sub das adc jecxz pop inc add dec xor xor lods out dec call add cmp pop pushf sahf ffree negb jp xchg adc mov jns dec jg jbe xor testb divb ret lret stos repz cmp test push xchg adc test mull in cs loope pop std cmpsl fdivl fwait or dec imul pop pop pop jne repz pop loopne repnz ljmp mov cmp or or iret jo adc incl or push call adc and add dec rclb aad movsb cld mov (bad) push sub inc bound or adc and stos in inc lds (bad) pop and sub push mov and ret rcll adc mov roll loop pusha loop jo mov jle fistp pop push xor sti fiaddl cmp mov jo (bad) mov push je dec and pop ficomp or and into mov cmp lret les (bad) mov xchg push add mov outsl das out xchg or gs testb xchg push xchg (bad) mov movl lcall ja pop in insl cwtl in das xchg lds add push ficomp shrl mov jmp inc or sub repz in adc loop mov xor cs mov and push test pop push (bad) mov in mov mov or sbb inc pop sar das (bad) dec sbb mov pop in sub xchg insb adc xlat mov cmpsl push lcall out sub repz imul mov adc addb sub pop std dec sub in sub sub sub sbbb lods cmc mov lret jle cmp (bad) and (bad) in mov pop outsl rcll mov (bad) sub and lret and and icebp adc leave stos xor xor mov pop dec mov dec push push ja faddl mov inc ret ret sbb repz adc sbb sbb xchg decb dec dec mov inc (bad) or or or shl pop ljmp outsb rorl out jno sub das cmp cmp imul add or jnp iret or push (bad) xor mov pop sub jns xor xor pop popf inc fincstp imul mov lods pop mov cmc test mov stc adc mov pop jbe leave push cmp pop repz push in adc xor (bad) repz cmc repz js jecxz in mov (bad) push outsb (bad) out pop push lret mov jnp movsl repnz (bad) and push rorb sub es and xlat jmp loope sub std sbb add push pop and mov fild jecxz sub insl fs pop mov push mov mov pushf inc push or sub push or cli xchg (bad) mov das fstl pop jge aam repz adc in push movsb fwait mov xor loope jge fidivrl addr16 add adc sub cmpsl inc gs fdivrs cli mov xor mov jns cmpsl push fwait out sub (bad) jmp popa lret mov add iret sub in lahf mov cmc inc adc sub aam leave push test xlat mov inc movsl loop push cld push negl dec or into data16 xor add sub mov mov shr and xlat out gs loopne (bad) mov and imul (bad) (bad) mov adc xor arpl lahf and sub or in or sub xlat dec fnstsw pusha push mov call divl or adc mov xchg sbb inc fild fsubrp cwtl not mov push out cli cmp mov mov mov out xchg and fcomi cld dec or hlt das jmp sub xor xchg js jmp xor les or (bad) (bad) jmp shlb fsubr ds dec mov jg or loope scas push push bound sub or test xor fimul ret lds and fsubl and sub daa pop (bad) jbe mov mov sub adc lret xchg fdiv jmp xchg ds in ljmp test ret mov das icebp pop and cmp shll scas gs cmp idivb hlt inc push cld dec (bad) inc sub and add aam pop xor mov ljmp imul icebp js pop add inc ds rorl repz dec loopne notb add and inc and clc lcall fwait cmp push or cmc add jmp mov dec xlat leave sarl (bad) xchg push xchg fs pop dec ret outsb fisubrl or pop jge jmp and mov (bad) push sahf xchg (bad) xor pop je iret ljmp or mov pop pop aas je fcmovne jmp aad int3 imul push inc lds andb movsl test pop mov enter mov cmc push sbb aad jb sbb dec pushw jne cwtl push into sub jmp jnp in jae push lret clc popa divb fisubr bound shl sbb out popa add test mov shr adc in decl inc mov and nop xchg test cld push icebp pop outsl repnz lock outsb add xor stos cmpsb sub je test mov push pop scas sub (bad) push sbb (bad) xor or jecxz and movsl cmc lcall out rorl imul push into sti fidivrl xlat aas jmp dec xchg sub cmp mov xor add inc imul into ret lods les and xlat cwtl cli out jno add dec stos mov mov (bad) popa shrl pop mov add insb inc (bad) sub or cmp mov test add (bad) mov into (bad) mov push fcompl out in pop mov gs ja mov add pop dec loopne fidiv leave iret xor pop je lret push out cmpsl cld shl jmp (bad) push mov out dec jmp enter add cld (bad) push sti mov insl jg test mov scas fstpl sub lock popa in push mov sub and cmp mov hlt out pop in dec ds cmp daa sarl dec xor ret add push jge add xchg loopne mov mov push test push adc orb sub daa add (bad) mov jle dec cmc or (bad) jmp test xor pop sbb dec idivl mov dec test pop push out data16 sarb sub cmp leave xlat jno sub mov shl pushf pop jmp mov lret imul inc push sub sub mov adc js stos in enter stos sub cmp popa cs inc out mov and scas test and xor mov lret js lock or mov mull pop fcmovnu cs sbb stc pop pop xor (bad) insl lret or lcall cmpsb enter fsts sbb nop scas xlat test pushf or inc dec stos cltd jp mov test sbb mov into or js pop lret mov mov (bad) mov mov lret sarl shr xadd loopne shlb hlt jg cmc inc sub fidivr popa les adc int3 mov jmp xor pop cmpsl (bad) jo or (bad) push adc cmpsb ret fs leave xor scas bound cmp lods xchg jae mov jp inc cmp repnz leave jmp mov pop mov shrl imul mov (bad) movsb scas popf dec inc xchg adc push stos mov inc je lds push mov jns dec jle stc mov pop fimul enter in (bad) bound pop dec subb xchg stc fisttpll in push popf rorl pushf dec neg pop fisubl repnz adc jns jecxz das lret pop je repnz mov dec pusha loopne jecxz fisubr jmp je ret xor in repz push xchg out mov cltd pop xchg pop push negb pop ja lea mov aaa repz adc mov jge fsubrp xor out xchg ljmp xchg gs xor lahf dec inc notb xchg rol jecxz xor push xor (bad) xor xor flds outsb mov jle mov imul ret pop pop mov cmp adc and (bad) jmp pop out ja add sub dec call xor xlat xchg cmp sbb leave jmp xor add mov xchg xchg stos out imul movsb or bound (bad) iret leave add loop xchg xchg pop pop je add mov mov and and pop test mov repz xor lret (bad) mov loop fstps add scas fcmove pop mov icebp mov in out cmp mov loope mov jle sub jno leave and addl mov in mov pop aad jno into sbbb pop and mov cmc imul mov icebp cli add mov iret icebp adc aaa xchg addr16 out push xlat (bad) sub ret lahf stc sahf enter mov std insb int3 pop ljmp sub stc fcmovnbe jmp rolb sub xchg gs mov ljmp lock or jae dec cmp in jne dec jne sbb sub rcr cmp add sub pop (bad) repnz adc out call decb add jae jne cmpsl stos pop popa cmp aaa out cmp mov push dec mov daa pop inc push mov test cwtl mov in mov fldt (bad) scas int sub (bad) cmc pop push xchg je push mov jmp mov pop add cmpsb test negl call testl push test imul rcrb (bad) mov sub inc imul sub int push enter lret out inc ljmp push fisubrl repz xor xchg jmp out dec js mov jnp jl mov cmc xchg adc sub xchg and sub test idiv mov or and mov rol pop repz push rorb stc scas lret arpl pop lock mov scas sub or ljmp mov lods xor dec cmp fstpl orl jno push xor push mov es inc lahf lcall ds bound jmp (bad) lds adc (bad) sub add jnp (bad) mov mov loop xlat mov out flds (bad) sub ja shr sub bound cmp add dec ja aad aad cli jno iret and test mov mov dec and iret icebp ret mov pop aad xchg sub or jmp push sub mov xchg cmp ljmp push xchg in dec mov sub sbb push or pop pop scas cmpsb sub jge add cli sub pop pop inc repz pop clc int pop push dec adc repz and jne push inc cld add lds mov and sbb or inc xchg cld popf aad hlt inc mov add mov (bad) fwait call jecxz add ret add or adc cmpl gs xor icebp pop jp cs cmp sub jecxz mov push adc or pushf push mov pop into popf repz xor jge cmp repnz and push lods push leave xchg inc jmp das and xor or mov cmc pop jp add into dec lahf push test adc inc loop mov push xchg jecxz jne or addb mov fs or movsb pop out cmp data16 jp mov fidiv out sub or cmpsl movsb adc lret mov mov iret enter cmp in (bad) sub lods add push (bad) (bad) lods and adc push add add in aas gs sub (bad) and mov mov inc mov iret push (bad) int3 add pop cmp mov das or adc xorl and shr (bad) xor and mov in mov clc add mov mov xor add subb lret cmp out xchg lods push sub add sub sub out add cmp add push insb aas mov (bad) leave aam jb jae and xor mov lahf jb mov cmp adc leave jno (bad) into sub dec mov adc pop mul adcl push daa gs xchg ret stos int3 int ud2 outsb (bad) jae fistl cmp loope popa aam push inc out cwtl push ret dec lret push testb mov repz jmp cmpsb lods or push and icebp xchg jo push add lret mov (bad) mov imul out sub sub mov shrb (bad) daa (bad) mov pop call rclb dec sbb push xchg cli mov sub popf push push pop loope sub popf dec cmp cmp (bad) xchg inc fucomp jle adc int3 movsl (bad) das imul push add mov lea notl xlat jae dec movb mov jno movsb jmp das data16 push sbb fdivr sti ret and in in push cltd push outsl sub mov dec fs leave jg mov out xor out cltd cmp cli xor les xchg ret jmp lcall inc dec xchg sarl shl xchg int3 pop cmc fnstenv inc test popa movsb mov mov cs pop neg pop cld sbb out jnp cmpsl and push es movsl or and pop lcall add and jo test leave hlt mov push ficomp cmp loopne testb lea fisubl rol jmp ljmp adc sbb pop imul es sub add xchg imul mov les mov pop loop mov jnp mov add fld incb std pop shll jnp and push mov lock (bad) mov repnz jne push fbstp pushf sub jne test fcmovu insl jno ss add fidivrl push cmc in sub push xchg pop sbb sbb add mov out add test fiadd aaa rcrl dec ret mov sub sti imulb aad mov gs stos out push sub mov cs aas cld pop mov or sub mov fs pop neg push sub cwtl xchg sub dec out add adc inc sub jmp or movsl (bad) les lods inc mov jbe ds xrelease (bad) jge pop scas hlt sub fadds sub add cli fsubrs jne fstpt mov into aad stc movsl or ret out ret and daa repnz jno movsl pop sbb mov (bad) mov inc or mov jge or or ja popf cld lret inc imul jne aas mov push mov aam push stc sub (bad) out cmpsb jo mov sub or lds ret adcl pop pop mov lock xor (bad) jne scas mov movsb int mov and xchg inc popf scas fs sub ret ja jo and dec or (bad) call incb jne jb lods and movsb (bad) neg incl sbb xchg (bad) leave (bad) and xchg mov pop push out xchg dec push add sbb sarb cwtl out sub out adc lret push sub dec xor xchg clc cmp inc scas jmp lds repnz popf cmp std stc xor orl mov in lock cli sahf into pop call dec imul dec jb xor xor mov jnp scas mov jnp push xchg sbb sub push ss cmpsb sbb sbb sbb mov push or inc movsb enter cmpsl sbb sub inc xchg xor aas pop jp jno add pop jbe leave jne stc cmp cmc push adc adc adc mov lcall mov outsb mov data16 call sub (bad) in cmpsl pop setl push neg adc sub push scas pop jmp lret sub pop dec pop push (bad) outsl dec xor mov in mov pusha xor testb out mov cmpsb sbbl aaa and xlat pushf mov jmp mov call insl xchg adc xor fisttpll leave aad (bad) xor inc jne pop ss decb xchg icebp aam lret sbb xor and leave out out inc and dec mov bound mov push add iret mov push fs dec leave ljmp jg jge push push lret in repz hlt mov jb sub jge sti or icebp add dec inc sub aad int xor sbb rcrl pusha ret mov sub jne inc js les and inc (bad) sub maxps adc mov jne outsb and xchg data16 add dec jnp push (bad) mov jmp mov ja insb pop loop xor ret push pop insb out movb ret je imul mov dec dec xor sub and xchg fstps add dec fisubrl call or int pop sbb js push movsl imul loope cli add pushf lfs jge xchg mov popf push add sub push out pop out mov jne jmp ret mov clc pushf in mov mov into xchg push push out aam push mov and adc mov inc gs sub das xlat cltd xor jb xor fmuls and shrb outsb jge mov sub rcr clc sub or push inc adc mov mov loope or add cmp ljmp sbb mov or mov push shlb jo xchg addr16 or sub inc les test std in repnz inc sub mov (bad) push stc push xor loope jnp (bad) pop sub mov sub sub test pop fadds xor pop es or xchg mov sbb xchg jg es xor call sub adc mov je out jge pop or int3 and (bad) mov lcall jmp push adc pushf cmpsb inc cmp and icebp (bad) (bad) push fsubr outsb mov pop lds mov and mov cwtl xchg into mov mov add inc add loop inc popf fisubl shlb push sub push and negl push mov sub pop xor lahf add xor add mov leave pop add call shll test mov cmpsb rorb cld cmp cmp sub fldenv xchg or ja ret loop sub (bad) mov (bad) gs out sub out daa xor jne xchg adc out bound pop pusha lea mov push lahf lds mov xchg mov sbb shrl jne push aad xor cmc leave xchg (bad) es dec push test into xchg insb cmp out das rclb dec mov and or mov or dec jmp ljmp inc mov cld pop test fnstenv xor mov daa or dec add sub push ljmp pop pop sbb mov std pop dec popa mov idivl cmp scas jae out xchg repnz push xchg dec icebp movsl inc out stos test mov (bad) movb cli cltd aad mov mov pushf xor jmp cmp xchg xor into lods xlat cmp rcl out stc push lock or aad lods mov inc and mov xchg pop lahf xchg push pop push xchg jo (bad) sti jp push mov pusha dec jno mov bnd (bad) xchg xor mov rclb add mov pop cli jne out (bad) cmp ja push (bad) mov jns dec xlat xor add bound call inc mov mov adc aam cmp xor add or pop (bad) mov fimull jl pop or jns adc pop lret mov adc divb sbb jecxz push inc pop bound push pop push push bound movsl xlat loop lds jae jl shll fsubp std inc test (bad) mov jne jno cld loope mov and and sub push ss out cmp cmp std cmp ja (bad) insb mov mov lret mov sbbb adc (bad) fcompl or add fstl sub outsb sub inc inc fldt dec sarl scas cld int3 bound fstpt cltd and mov (bad) data16 sub movb icebp ret fcmovnu mov (bad) mov enter imul or pop pushf lds pop mov test jecxz adc aas mov clc mov cltd lods sbb mov cmp loope mov daa in into int3 jno (bad) sub popf in inc dec mov lret stos daa sbb cli (bad) mov mov pop dec (bad) or mov pop decb push out sub mov mull imul cmp sti fdiv mov loop sub jbe ret faddl push out sub imul stos jbe xor mov mov sti negb sbb (bad) sub les je mov jp leave mov xor lods sub pop and mov inc or popf shll mov sub out fdivs repnz es xor xor fidivrl xchg (bad) sahf jbe jns leave xchg mov (bad) cld or pop outsb xor add and dec pop stos in inc pop xchg jp (bad) and stc mov inc jbe push adc jge scas jmp testl or xor (bad) jg push aas xor dec sbb sti adc cmp stc and daa (bad) jb or subb cmp (bad) xchg pop cmp int3 jmp pop inc sub ja sbb (bad) daa and std or push adc leave cwtl adc mov jge xor shr lea mov out and inc jo xchg inc mov adc ret jmp jg in mov pop inc sbb idivl stc xor pop and cmpb in add xrelease jns mov in dec mov (bad) repz add add inc lcall inc add cld lods mov mov sbb xor jmp jg mov xor mov sub mov aas into popf icebp sbb ja mov imul pop stos mov dec repz lret das push ljmp add push xor xchg dec xchg (bad) jecxz inc pop imul fcoms movsb sub out repnz jle push sub xor out dec loopne mov daa dec scas insb je ret imul stos jne and mov ds call ret pop int3 push in movsb and cld jmp mov cmp xor (bad) repnz shl leave cwtl stos mov lahf dec fwait ret cmp jle fs cmp cmp and movl movsb cmc sbb xor sub fist popa out ds dec mov mov add leave gs dec dec or imul push mov add outsb inc mov ja cmpsb das xchg mov jnp push jno sub dec jp mov cmp sub mov pop mov leave fmuls jg jo jge fwait push adc into ret lods (bad) dec sub dec jnp sbb hlt xchg vmread fsubr cltd iret cmp mov ret add or icebp and or pop (bad) int3 xchg cwtl pop sub mov dec pop ljmp (bad) fisubrl adc push gs cmp movsb out pop lret in ss xor dec sbb push lock xchg out sbb aam lods testb xchg and ds and adc aaa cmpsb dec cmp pop in cmpsl mov ljmp aaa icebp sarb mov xchg pop fldenv or call movsl pop div ficoml adc (bad) popf push mov or xlat inc dec and imul lcall jbe mov or (bad) int3 lea jmp pop fidivl mov (bad) xor (bad) sub test mov xor mov inc imulb lret popf je jno outsb mov sub clc or sbb insb (bad) pop ljmp cmc jmp aad ds out cwtl xchg fldcw enter push push (bad) or sbb and xchg lcall pop sub and movl sub loope xchg js and or out call int3 inc and add mov (bad) mov mov dec repnz adc (bad) mov jbe rcrb xchg fcmovnu and mov and xor dec lret cmovo les inc clc shld jbe pop mov sub and mov cli jecxz dec daa cmp div lds sar cmpb mov adc pop rorl xor mov dec lret cmp xchg dec mov das or pop vpshab (bad) push (bad) mov dec out sbb xor and sub sbb inc xor sub subl (bad) lcall add mov aam pop dec (bad) clc push das pop push xchg scas mul fsubl pusha std mov iret mov (bad) mov xchg pop outsl leave leave (bad) xor add mov mov stc push aam jo icebp lahf jno cmpsl insb aad add icebp xor outsl imul and clc pop lret mov push outsl lret punpckhdq and add arpl je loop dec xlat std jnp cmpsl jg test je adc sub int ljmp dec (bad) fldcw add pop mov lock pop add out mov pop rcrb xor out test into or sub mov or mov push jmp call mov jl add or sti lret (bad) bound loop mov sbb sub mov cli mov inc dec pop or jp out sbb mov fsub sub movzbl mov push sub pop dec mov push sbb push and lret (bad) dec imul mov xlat mov jns imul or rorl out jmp fmuls push cmpsb dec sbb pop fiaddl or movsl cmp adc xor pop or mov sub lods lret sbb (bad) sbb cmc mov cmp clc sbb divb aaa ljmp sub gs jle outsb test push into add jno lods lock stos cmp or mov xchg sbb xor ret add xor sub mov or cmp enter (bad) and lret add xchg testl sub pop push sub cmpsb (bad) inc sbb test push add adc lret lock sbb sub sti fadd ret mov pop lock sarl jmp popa (bad) or mov dec popa jne sti xchg (bad) ljmp ret sbb jg adc fmul (bad) xor dec aas xor (bad) ja jb push cld lcall jb cli popf (bad) es mov add lret mov and mov dec inc sub lcall add mov les repnz xchg mov mov lret mov xchg clc into pop (bad) lret xorb (bad) dec repnz (bad) data16 shr sbb pop jmp sub sub ret into orl pop sarb add scas or mov add inc jmp jg and loopne roll pop ds push mov lods sbb shll es pop xchg outsb lahf pop sub mov push add mov or or in and das mov repnz scas ret (bad) fistpl sarl jp pop faddl ret mov mov bound enter add iret scas in in out lahf xchg add clc or push or inc fsub adc test mov inc mov sub xchg jl sti mov and (bad) push fisttpl outsl mov jmp (bad) jg inc jecxz or mov mov int js mov ds and test movsb mov cld in daa (bad) push in xchg out fstps aad in push iret dec iret ja lcall mov xor and fbld popf mov (bad) cwtl ret das lock xor adc enter adc mov pushf and jne leave mov repnz fdiv push jmp lahf dec in adc mov test call adc lahf fidiv sub ret mov fistl test sub mov sub aaa mov add pop aaa and inc pop pop mov dec rep in lds rclb adc comiss lcall jecxz push and mov mov leave jbe jmp loope outsb bnd mov adc and mov popf test sub jns dec fstpl enter repnz jb insb jg,pt imul insb or clc mov push test jl fs cli cmpsl xchg shrl adc ret or pop adc push out xchg test xor aas stos loope out push lahf mov or mov mov push xor push mov mov pop pop (bad) cmp outsb in mov xor repnz shrb lock or push xor adc dec xchg cmovp mov in stc dec sub psllq bound stc xchg dec push or (bad) mov ljmp in dec adc add int push mov sub fsubr fisubl or sub out and xchg sub pop aaa pop adc mov sub ficoml cmc mov push mov push adc push icebp sub xor mov inc mov mov xchg mov lret pop cmp mov fiaddl into sub popf sub or lret fwait (bad) or jne rcl cmpsl inc cmp sub or jo inc in fs icebp fisubr movsb mov lahf adc cs lcall jle inc sub jbe mov sub mov add lret les pop notb shrb mov faddl jecxz sub and sub movsb shr pushf je sub and mov dec mov dec add fmul cmovns push mov andl rorl das xchg lds clc repnz add mov mov pop cmp xchg pop adc inc or (bad) sub nop add outsb xchg pop inc test insb sub sub add or int bnd sub lds sarb imul sti lcall call repnz and ljmp push mov add out push movl pop scas mov or lahf ja push mov pop nop scas out cwtl aaa pop xlat xor addr16 xor mov aaa into mov pop imul cmp pop push (bad) push push pop xor adc les mov (bad) mov mov xor addr16 or mov and stc pop pop popa stos add pop clc and xchg sub push popf add rcll fwait popf aas xabort or dec shr movsl cmp lods xor dec add add fnstsw push xor (bad) mov mov mov pusha xor push pop mov (bad) dec cmp adcb dec xchg and out inc cltd addr16 mul jno popf pop or jae jmp pop add add and (bad) and and rclb test xorl xor testb cmp push and push aas fsubrp or pop fldl add cli out jne sti inc rorl or adc loop pop ljmp xchg sbb jbe (bad) pop mov call push mov mov and inc mov cmp push push adc push inc mov test lock add jle test push mov loop faddl jecxz aad pop inc shr loopne arpl lea cmp (bad) pop pop clc outsb add jmp data16 push mov push shrb cltd dec xlat aad fisubrl out dec push dec iret cltd inc and cmp pop xor scas stc arpl jmp adc mov jle pop cltd pusha lret insl jne mov mov repz stc ja aam lcall rorl mov sub jne mov add pushf cld add inc sahf das push mov xchg push das xor xchg call cmpsb mov fnstenv in aad idivb push test dec mov mov loope jnp out (bad) fmulp inc xchg jmp add mov push stc fimul loopne or or mov (bad) leave jecxz insb pop mov imul data16 pop repz pop mov jecxz mov fcomps aas push fwait push xor daa sub hlt iret rorb pop std add ret pop scas mov mov dec mov imull dec and (bad) leave push in or bound lahf stc mov fwait jns xchg add mov lock jae push xchg ret pop sub clc daa into mov (bad) add (bad) jmp leave inc cmp stos mov xor repz mov xchg (bad) out lret (bad) dec sti xor mov cli into cwtl add repnz stos fld jg call out rorl push repnz scas dec aaa xchg (bad) adc daa stc fadd cmpsb sti xor scas testb fdivs sti inc add pop inc negb in fildl fist insb das xor icebp jb in and xchg (bad) call sbbl out dec xchg sub popa out mov stos stos imul cs push push out insl popf outsb lret int3 bswap mov xchg ret mov dec push into add cwtl enter sub jl rclb mov xor mov divb jne nop pop inc imull mov lahf sub in mov sub mov pop xlat int3 std xchg cmp fdivrl (bad) test sti mov dec mov (bad) and lcall les sub push lahf add in out sub mov test jecxz xor test repz jmp or xor mov sub out inc das and adc adc mov imul and jne cwtl xchg add scas fucom cmp mov mov ds mov (bad) inc out mov scas nop mov ret lcall in mov hlt jb,pn push mov push or push mov push call aas jo mov mov out es xchg test int3 jmp sub in pop popf jne hlt dec mov xor arpl popf lret and or lcall xor dec cmpsl mov (bad) pop inc and or lcall ret push sub imul cmc (bad) scas int cmp jno stos lret std jl mov mov ja push mov xor and pusha adc test (bad) and jb lock into sbb daa xor test (bad) cmc leave or roll dec orl or xor dec loopne out mov (bad) jmp cmc jae and push (bad) and xchg repz add std (bad) daa sub jnp jecxz dec fdivrs (bad) mov popf aad or scas push inc orl jp (bad) xlat and mov leave lcall inc icebp pop clc out pop int3 loopne dec (bad) xor iret cwtl (bad) and sub popf mov icebp xor xor shll roll lock xchg aaa js and in or push lds pop add xor dec push (bad) stos mov daa add dec adc xor push mov pop pop in push movsb mov pop in ja cmc jne loope stc adc out movsl cmpsl (bad) xor and push jnp scas sbb add leave mov jmp xchg push loop in push rorl mov fsts adc xchg xchg (bad) repz mov push push mov and in test push inc mov out dec and jge or dec call jle and imul push push cs lock das pop arpl fdivs mov (bad) (bad) cld and lds jl mov daa (bad) mov add test dec scas sub mov jb pop jmp pusha fstpl repnz push popf (bad) fild or sar sahf les cltd repnz sub mov fstpt outsb jmp adc adc aaa mov and and sub cs mov push shrb divb push dec jecxz ret dec lods hlt xchg fmul add bswap sub aas adc cld mov lods mov dec scas sub shlb incl lahf movsb cltd jb add xchg ret push in int3 xchg ds shl mov push push fmull ret (bad) mov xor (bad) xor (bad) jnp jae mov rorl ljmp je repz sub cmpsl adcl movsl cmp (bad) mov addl sub and mov push xlat jnp out test push xor aas popf shrl outsb aad rcr mov mov in data16 lods jbe add rorb push mov iret je push sub mov push loope lret (bad) rcll gs push icebp fcomp sbb scas mov and fwait loope push loope (bad) xchg (bad) scas int3 jecxz cmc loop sbb hlt pop into int3 mov add jne jp mov cltd cmpsb (bad) add push lock roll mov and sub out sub ret dec dec and xchg sub ret ja lods fsubrs cli sub test sub mov shlb inc cwtl push xor inc cmp adc (bad) sub (bad) mov orb loope sub movb mov mov sbb jb mov dec (bad) mov and pushf dec popf jge push lret jb mov xchg mov mov adc sbb sbb sub add inc lods push popf fistp pop call and and lods mov jecxz daa (bad) cmpsb xor inc pop stos outsb xlat pop leave stc roll in jne (bad) jg jae jnp daa add xchg std add aad push dec into and (bad) and test out dec push out dec in mov pusha dec add shll add fcoms mov jmp mov lret and ret ljmp cltd rorl movsl std outsb sbb sbb fdivrp mov leave je (bad) mov sub data16 mov cmp xor jl ret add test dec jbe leave and sub mov test mov inc jp mov int movsb (bad) rorl ljmp mov arpl stos mov adc (bad) stos addr16 fldt repz test repnz repz mov aam rorl aaa jecxz sbb movsl mov mov or lahf mov mov cmpsb pushf sbb jmp les ret cwtl in nop mov sub loop (bad) adc test xchg sbb into mov rclb clc and aad mov out mov stc int3 test add cmpsb (bad) mull and pop fsubrl sub fcoms add shlb jb mov leave push fistpl fdiv jns xchg lock mov xor xchg xchg pusha mov aaa icebp jp mov or push fcomps icebp xlat sub sub xor cs scas xor ret ds jns or add repnz push sub fdivl mov jle into ret fbstp sub add pop mov and push stos mov jmp mov leave add add icebp pushf ret orb lcall movsl mov (bad) leave xor adc mov aas test sub jne pop push or or and xor sub push ret jo dec mov stc xor sub in sub movsb leave push lcall ljmp dec pop iret jmp aad and mov ffree scas daa (bad) call or mov pop mov xor ffree out mov inc leave int outsl (bad) xor push rcrb sub rolb jle (bad) or cmp mov repnz sub pop mov xchg imul push fbstp imulb xchg in bswap pop stc and pop mov (bad) cmovnp or push ret loop sbb pushf scas adc imul cmp les fcomps and call mov xor roll jnp movsl js out mov dec ret pusha not test ret cwtl xchg mov test mov sub ret and int3 daa imul pop stc mov xchg pop sub push sub lret (bad) movsl stos lret mov (bad) mov mull push xor cli aam mov lahf push enter test (bad) push dec mov jo inc ss (bad) or loop adc xchg jg stos mov cwtl cli mov jp insl and icebp sbb das push lock push les sbb fnstcw repnz ret bound out insl push push push adc xor cwtl test lock or fildll enter sub xchg aad push lock mov jnp or pop cltd and cld stos mov xchg stos mov jmp out movsl cmp loopne cld add loope fisttpl cmpb ss test inc mov dec out dec mov cltd xchg aas lea lods jnp repnz or jne xchg pop pusha add sbb mov dec jmp xlat repnz in push xchg dec dec jge mov aam inc stc repz test xchg (bad) mov or lods xor cmp xchg xor into out adc loopne ret sub lret sub mov ret xchg mov bnd sub js pop repnz std and mov (bad) cli adc lret pop adc or mov (bad) xor (bad) enter mov mov dec xor sti pop push call imul mov xor sbb xor adc testb ljmp test cmp out pop in ds sbb lret sub and stos lret xor xor rcr mov dec outsb out mov mov mov in mov mov stc stos xchg (bad) cli fildll call and scas xor pop mov sub cli arpl lcall and popf int3 cmp xor int3 jnp jecxz mov or notl cli sub or mov add mov ficom stos in leave mov test bound notl movsl pop data16 sbb sub sub ret ja (bad) int3 aaa idivl ja xchg push xchg pop out sub popa sarb and and ret mov push test in daa lret pop cltd jmp mov movsb mov notl mov push stc aaa xchg sbb jbe inc lahf mov fadd xchg adc xchg fnsave leave pop jmp in mov std sbb inc push sub stc leave jb roll call mov iret (bad) jmp sub lret jo mov mov into rorl mov push daa cmpsl pusha mov push dec pop mov enter rcrl xchg mov cmp je sbb push sub aas and fldenv push and lds mov xchg faddl pop cli outsb ret mov inc xor icebp cmp cmp mov and or and (bad) mov push call pusha xchg jge mov and push jbe jmp mov out cltd imul pop inc mov rorb or or divb imul lret js dec out sub jle out or push fidiv bound negl movsb movsl pop out jle pop out test bound fiadd inc mov test mov add fsubl stc loop sub in fcoml ljmp out lahf loope jmp and decb xchg fistp xor (bad) outsl add dec aas pop push pop roll iret add lods push mov mov mov outsl (bad) adc divl cmpsl movsb std xchg out int3 fsubl clc les popf xor xlat adc leave jb inc pop pushf dec pop in pop push outsb fildll js adc adc mov mov sbb mov add and adc (bad) cs aaa dec lcall dec pop in jmp and fnstsw leave push lcall pop push mov out stc mov dec push cli pusha pop out add mov bswap sub inc mov mov jg (bad) and (bad) or (bad) leave add dec mov icebp icebp jns ret std sbb repz test sti mov adc xorb sahf in push negl and push mov jmp push or clc or mov cmp sub je in mov outsl jecxz xchg popa int3 mov sub mov pop xchg ja mov ljmp cmp and mov dec mov outsb dec fwait mov dec jb into fcompl push inc pop xor mov pop push fisub sub sub mov sti mov add add into out out dec sbb je out cmpsl pop dec jb es movb xchg push push leave fstps sub data16 mov or and and mov mov add mov mov int3 repnz dec test stos jb or sub hlt shlb stc stc xchg mov and cmpsb pop xor stos shrb lahf roll imul clc mov cmpsl xchg sub mov rorb mov mov mov arpl mov bound xor sbb test test dec stos jbe dec mov xchg into notb jge cli je mov push incb or into notb xchg dec or xorb xor and push jne aas nop insl dec clc lods push mov jg mov xor mov dec fsubrp cmp into mov xchg (bad) or and insb cmp in pop mov aaa aas fs clc sbb cld mov inc mov lds stos les mov or xchg (bad) in loopne push stos push (bad) sub scas nop aad dec xor scas mov pop stc lret dec repnz jmp xchg gs pop imul into mov ret mov and shrb fsubrs adc mov mov addl sbb loop push dec push add dec cli fist push rclb rclb ret test bound (bad) push jno dec mov jae das ja pop jp stos and inc mov and pop (bad) mov (bad) and mov adc or push scas cmpsl and lds push sub mov inc cld push into lds (bad) lret mov je pop icebp das mov hlt fldenv xor sti mov xchg xchg push sub imul (bad) pop pop sahf or and out dec jge jecxz cwtl adc adc fsubs gs aaa stos or mov lds mov jmp loop push mov into leave leave (bad) outsl push (bad) lods jg mov js in out dec cli gs stc inc rorl lcall jne inc hlt ljmp cmpsl inc (bad) mov ljmp rorl (bad) jb idivb pop jg sub adc shll ljmp and cvtps2pi (bad) je gs out aam cli in das in and dec sti fisubl pop jne mov out dec pop dec mov idivl dec loope xor js sub lea or mov xor xchg (bad) and and fdivl imul mov popf dec leave mov or sub inc test push cmp loope xor cmp xor call (bad) sarl or rcrl jecxz stc sbb fsts adc frstor fld js hlt mov cmp mov push add push mov adc cmc jge fldl jg push repnz add mov in lods adc mov loop jl push push in adc dec and mov and test jmp pop mov mov call or fnstcw pop shrb in mov (bad) pop sub (bad) adc add jle xor push xchg xchg ja loop in inc sub insb movsl mov gs test or mov rorb imul lahf (bad) stc out xor pop xor imul out inc adc inc aad mov scas (bad) call cmc out sub and (bad) lret mov bound test mov shlb stos cmp xor daa sub dec or lahf xchg in (bad) or imul or mov dec and ret out (bad) icebp pop test (bad) mov arpl xor or xor lret cmc add fisubl ret shrl cmp push cmpsb xchg push in outsb les mov jl adc (bad) add dec cmpw inc das sub rorl mov je cmp and out stos push sub into adcb stos ljmp add jbe leave xchg popf mov (bad) mov sub inc mov sbb into cmp mov xlat inc (bad) mov cltd arpl or jge bound add mov xor cmc pop or or mov dec dec mov (bad) out subb mov data16 lcall aam out adc das xor in rcrb popf stos lods cmp and xlat mov mov jmp and push js pop inc lret mov inc push rcrl pusha loope (bad) mov dec (bad) lock rol movsl insb push inc inc add dec iret dec scas lret mov inc arpl (bad) insb push ret pop fistpll (bad) lahf (bad) mov sar mov rcr das adc sub les ljmp cmp xchg mov pop sub mov (bad) cvtps2pi add xchg push adc rorb fist addr16 cmpsl or icebp adc inc out aad add add mov ret das (bad) xchg dec xor ret (bad) jnp das icebp in mov das cmpsb lahf (bad) xor mov mov insl lret jnp js mov jp mov aam xor stos (bad) das ljmp je and or cmpsl in pop into push and sub pop clc or sbb and aad xor (bad) xchg in bound rcl scas cmc xchg adc mov xlat in cmp repz rcrb pushf dec mov mulb shl inc xchg pop mov mov ffreep insb std out push test mov les xchg xor jmp fimul xor pushf mov popf das scas int3 icebp xor repz dec dec mov shrb jo adc xor or idivb add int3 and out xchg push out (bad) lret mov ljmp negb arpl into xchg adc mov mov push test roll and pop das mov and dec add add inc push inc sbb sbb sbb fisttp hlt add rol mov xchg cbtw cwtl sub cs mov outsb xchg mov sbb dec jecxz sahf vmread ja cwtl sub adc push xchg sbb adc rorl jg inc mov and ljmp and sbb add fld sub lret bound repnz inc dec lret mov std mov cmc inc jae repz fldt sub sub pushf aad adc xchg or or sti pop repz pop mov mov xchg or rcl dec sbb mov mov or pop inc jnp and mov je jb (bad) pop in xchg repnz mov pusha (bad) ret (bad) xchg mov adc subl inc mov notl push add scas cld ja clc inc dec lret movsb xor add xor (bad) adc sbb pop mov cmp sub sbb push add or inc sbb fisub in cld push sub cmc or lock cmc repz inc rolb cs pop (bad) mov popa pushl enter add hlt push insb cmp (bad) and push mov (bad) mov pop dec sub pop outsl xchg cmpsb ror mov cmp dec inc aam (bad) ljmp ja lods adc add cmp (bad) push inc cld daa pop mov repz nop mov out scas cmc movsb fldenv sub sub ljmp shr (bad) pop xor jge sub inc ret push sub mov mov sub ss push push push cmp mov fidiv leave je pusha or jno,pn pop (bad) enter (bad) stos xor (bad) mov xor hlt icebp mov mov scas repnz adc mov int jl js cld test sub repnz jae push jmp fldcw add fildll push (bad) xor out cli cmp jmp mov test (bad) call or or sub push push inc add loope je rep add or jp inc mov fstpl imul push (bad) call xor (bad) iret mov in xchg mov js xlat int3 push pushl iret je lahf or pop inc cmp xor mov push icebp imul sbb iret xchg (bad) mov ds fistl push jp repz xchg imul push rorb dec dec cltd adc mov shrl pop mov and sub stos pushl sub sar orb lret daa jg sahf leave (bad) icebp loopne mov inc adc loope lea add sub out push out repz mov add jecxz dec pop xor xchg ss add or mov xor jnp or and lods pop sub or add and mov ljmp lret jns pop or je jmp push pop or sahf inc mov gs lds mov jp push inc mov inc icebp cld pop push jne (bad) mov push inc sub cmp pop xor das mov mov je ljmp add inc mov sti and and leave (bad) xor (bad) mov and push xor outsl leave mov inc leave fldl (bad) leave push cmp (bad) sub fsubl or not and leave jge pushf cwtl dec add push mov sbb mov sub out fwait jne movsl dec sub adc and add mov jge enter add shrb mov mov stos lea int cmp jl sub xlat in inc xchg sbb mov leave fnstsw iret mov imul jecxz test movsb sti xor cmc ret mov sti fld jg fidivr jmp fucomp fimul ljmp aaa and fcoms pop gs sub lahf xchg decl (bad) dec pop mov imul sub loop add pop push or push xchg sbb jmp (bad) scas mov (bad) icebp lret (bad) jnp pop mov pop and xchg sub (bad) sahf lea add popf rorl dec notl mov (bad) aad pop inc loope push aas push cld cmp push mov testb fs push icebp outsl xchg fisttp stos adc mov xchg stos dec imul in pop xor jnp xchg cld cld imul lcall xchg ljmp or loope sub mov vmovaps mov push add mov add adc jne jle adc mov aas out fst sbb mov in add jo lahf sub and test shlb in dec rorl aaa lcall stos inc fisubl iret sti jg dec adc int3 add mov or mov inc push mov pop cmp ja jle,pn or adc pop add pop (bad) xor push outsb pop popa out subb mov mov jbe jl xor cmp lods sbb pop push pop inc addr16 mov mov inc and adc pop rclb adc dec mov mov das sub push xor clc insl add pusha cmpl xchg jne lds mov lret and repnz xor push out xchg and and daa mov in push inc xor mov mov repz int dec sub push jp mov add lret xchg jg push pop adc pop sub push ficompl lret mov push nop fmull or pop push call sub add xchg jge or pop push mov and jnp jmp inc dec adc psraw xlat dec out sbb sub inc sbb (bad) idiv push adc sbb push jo fucomip decl sbb push popa or jmp in push sub xor pop push adc addb outsl es sub ja cmpsb push lret (bad) repnz test mov jle repz sub jge add mov pop insb sti (bad) fdivrs and pop xor jg pop pushl orl or sub inc and lds xchg push mov nop fistl pop mov mov sti test xchg sub ja xchg xchg push jbe sbb lret pop pop neg pusha add fwait xchg or or jmp jae sub fprem fs push inc mov sti lods jmp add pop jne out and (bad) xor repz push lcall adc lahf xchg in push adc and (bad) mov mov into out jae (bad) add call jo cmpsb push imulb mov pop mov cld pop mov (bad) mov (bad) xchg pop pop xchg push push rol ljmp xchg shrl adc fcomps mov mov out mov out ja (bad) push ret in sub (bad) cli mov lds sub sbb mov sub pop pop mov mov cmp adc sbb call inc mov fist mov jecxz into xlat and stos bound fbstp js mov (bad) mov call addr16 (bad) xchg dec add jp (bad) sbb xor pushf sub inc mov stos std cmp out gs add pop dec ret ja mov sub jns and push mov inc adc clc fistl sub or add outsb ret fwait std sub add pop leave xor cmp xchg xor and or fcomps add push out inc ss add lds test stos jb das or mov or jbe popa sub jp add pop call stc pop xchg sbb lahf push pop les adc xor and mov sub les xor xchg leave sti ds ret xchg pop popf add mov stos call adc fnstenv iret test clc xchg dec mov cmp pop (bad) icebp sub lcall (bad) cmc pop inc dec push out sub sarb push test xor and shlb daa add push mov or cmp pop lds mov test movsl mov fstpt jbe divb bound rcr cmp cmpsl icebp aaa imul scas add xlat stos jae or inc imul mov xor cmp dec sub mov mov pop inc sub ja gs add jno add insb sti lds (bad) bound notl xchg mov das jecxz leave jmp aad add loope sbb test movsl pop ja ret sub ljmp shll outsb sub cltd movb cmp pushf shll mov pop xchg mov and idivb dec in dec xchg mov icebp push dec idivb jmp xor in das fcoml ss les add xor and roll outsb jb jmp pop pop pop adc (bad) mov push out inc and add sbb in pop mov dec pop sub cmpsb jp mov add scas mov stos iret push pop or imull in aaa sub xchg inc stc mov pop sbb popf (bad) sub dec lahf pop xchg jp push insb std icebp mov inc cli jae xchg xchg push das and int3 push dec leave lea daa repnz mov sub xor jecxz mov iret in divl mov imul ret aad fdivrl xor dec daa jmp xchg out dec (bad) mov divl inc cli mov dec sub mov xor sti mov inc and mov popa fcmovb push mov ljmp loope xchg jmp fildll jbe movsl fiadd mov add sub mov lret mov (bad) or mov and out stos mov aad call adc iret jge mov incl pop and or das ja or and cmpsl push ja lods sub sub cmpsb enter out or pop sbb xchg (bad) push pop lret push push add divl mov inc pop and les addb xor stos pop pop mov dec test (bad) vmovlps rorl dec fadd xor sti jg (bad) (bad) jnp clc jno mov sbb aad sbb negl dec lret pushl lock pop sub and mov into or daa sbb (bad) mov ficom lds cli popa ljmp pop scas mov pop nop les xsaveopt and cld stos sub jg dec or xchg or (bad) mov lret jne add sub add (bad) xor popf orl scas inc notl sub or and rclb adc cmc dec mov (bad) stc les xor inc xchg dec into stos fdivr or mov out dec lret mov pop sub int3 push mov sub mov xchg jge insl or and mov fisttp gs scas mov popf lds push mov sub cmp mov xchg out out inc mov inc and cld in lret (bad) repz movsl fsts xor cld pop int imul fidiv lds ret sub jg pop add push or stos lods ret adc jb jg and negb int std fnstenv inc or std int3 mov faddp jb xor adcl add mov cltd popa jp mov pop das repnz mov (bad) cmp sub mov xchg (bad) lods js dec into scas mov sub testb ljmp lods xchg shr hlt push cmp xor or inc xchg mov xchg jg xchg hlt xchg mov sub push divl xlat cmp in mov in das cmp fsubr xchg push cmp test add stc xor cld popf imul pop xchg int xchg dec out rcr rcrl xor xchg mov test repz add inc xchg out les inc lcall lret pop andl adc jecxz adc shrl jl roll int3 mov ljmp out push (bad) jnp or fldenv roll cmp leave gs scas adc mov sbb ret adc add pusha movsl test adc int cmp out mov dec push sub ljmp add adc mov jne scas xor mov loope loop (bad) dec sub lahf pop cmc xchg pop mov xor jae mov out sbb mov fsts sub shr sub pop pop lret les lret sub and mov sahf mov ret hlt xor in xchg and push adc incb sbb rcll imul mov fwait push loop jnp sub inc xchg (bad) loop lret bound mov cmp rcrb out lods push mov cmp into or pushf test test test test loope xor xor jmp (bad) popa sti cs pop push addr16 icebp add mulb (bad) gs lods xchg into jmp push shrl sub or cmpl dec and add lods cmpsl bound outsb imul add mov adc xor and iret test out sbb stos xchg ficompl sub xor jp inc leave ret jne adc or idivl push cmpsb mov cli xor mov mov pop push aaa popf jne push or sub repnz inc mov sub add dec or fcmovnb xchg jle lret or lods cld sub jg arpl mov pushf push inc add cmp or sub xor fstp xor pop rorl cmpsl pusha and mov lahf add sub sub je lret and aas mov sub push mov dec outsl sarb int3 mov out add imul pop call mov sub arpl rorl sub das (bad) push push xchg jb push sub test mov repz repz mov call (bad) xor xchg cmpsb xchg dec test mov inc sarl int inc cs add mov fidiv and (bad) lock pop sub adc mov fist imulb test mov xor mov sub and pop cmp inc jo shr js xchg repz adc pop popf xchg ss pop in aad dec pushf mov out mov imul into leave rcl mov out xchg dec ds rcrb xor mov adc fistpll bound sbb jge dec push shll xor pop shr in mov (bad) cmp jmp je cltd movsl sub pop adc push (bad) sub cmp cmp scas xchg sbb cmpsl or cmp add loopne mov lahf jbe iret sarl mov daa xor das pop mov in (bad) fldl xor inc into pop les mov pop stc mov loop dec addb jns mov icebp fsub add and cli test cld out inc lret jne iret sub lods in and stc lods out mov mov ljmp jno pop ss push push mov sub xlat mov lret cmpsb ret dec or fldl adc and movsl testl push lahf leave icebp push lds sub aam pop cmc cmp repnz jge test popf adc mov pop or mov cmp into and pushf mov repnz cmc push repnz outsl dec ds cmpsl test stos stc mov fistpl (bad) repz xor mov ljmp jno xor pop call imul aam (bad) jg xchg push jmp sub pop (bad) ja movsl cmpsb enter repz pop sub test fstps xchg sub dec ljmp andb sbb scas mov mov dec daa ja sub sub lcall xor add leave divl dec pop bound (bad) push ljmp (bad) fstpt decl add div je cmp fmull or add push and dec mov inc adc and mov xor sub jmp xchg dec sbb adc stos adc xlat ljmp jge lret xor (bad) js sarb sbb and hlt movl popf inc jnp xchg add jo xchg lea lock rol dec xor ja xchg fdivrs xor je das flds xchg (bad) mov or mov jge dec jmp aad mov sbb pop test stos mov and sub xchg pop addr16 or mov ret xor pop (bad) fs (bad) (bad) dec dec cmp fcmove lcall sbb fistpll sub pop data16 xchg jne lock aaa dec incl or cli mov or and or bnd cmp cmp inc pop into adc cmpb and outsb call add xor test jae pop mov pop inc or rcll mov cli call mov cmp je xor add jg (bad) jecxz dec jne fsub out cld je repz xor test ljmp sub add and test stos jne (bad) sub mov imul jo and pushf xchg mov push inc push std cwtl push and mov mov gs mov pop xor data16 adc cmp push xchg push xor mov or cmp popa cwtl jae dec jecxz daa sbb cld fbstp clc xor mov and cli mov cmp sub jmp push mov pop pop sbb out mov jmp std xchg mov mov mov (bad) fldenv cmpsb push lds orl push add inc in lahf or ret icebp out push xchg outsb add (bad) icebp das in push pop adc icebp sbb sbb movsl icebp in int3 (bad) sahf push cmp popf sub xchg pop cmp mov daa outsb jmp imul lods jbe (bad) xchg int add test lcall mov push cltd mov (bad) aam das xor jmp mov mov fs fbstp mov pop add mov (bad) push add (bad) jb lret (bad) and push cwtl fs lret add mov xor loop xchg xor push scas lret bound fstps in sti cltd mov lea push int3 xchg xchg (bad) fs adc cltd pop push push in dec sbbw adc lret inc cmpsl (bad) repz cmp inc iret or (bad) or (bad) mov adc (bad) (bad) dec pusha and scas mov ds loopne push daa jmp pop jge dec iret xor add mov xchg and das inc lods cwtl repnz pop mov push and stc mov xor test test lods ljmp sarl push test jno repnz push mov mov stc add add fiadd and or ja and mov (bad) imul testl std das or sbb (bad) mov adc cld pop mov fildll je jbe mov cld and jecxz add in add and sub pop data16 lock mov inc xor ss jnp or add push pop mov outsb push pop and or xor adc sub test dec popf mulb cmp lret ljmp ret jae (bad) mov cs push xchg outsl jb shrl ljmp inc jmp fs pop jle or mov xor jno lahf jmp dec insb mov ds sub test lret inc sub mov gs daa (bad) aad or out lret push inc cwtl ss das mov fisub rcr out add xchg jmp xlat cmpsb daa push and scas xchg gs sub cmp jo inc ss (bad) je cli mov jbe push sub lahf stos push out outsb stos jle push call mov sub adc (bad) xor or mov dec ret cmc gs jo dec lret in sarl pop and jecxz lea sub xor xor (bad) fsubrl sbb cld shll add or ret sub stos sub shll add cmp ret xor data16 nop xchg sub sub or mov xor popa in movl mov jge fs fdivl mov sub lcall and xchg fnstsw jge xchg xchg mov sub add jno adc clc (bad) mov gs sub push xchg and mov and out mov sub dec sub fistpl mov out test lret faddp xchg mov scas lret negl cmp pop push sbb mov add (bad) imul dec pop sbb jp data16 pop mov or jne mov ds mov outsb add arpl jge add call scas mov out xorw xchg test adc mov pop mov je add or icebp repnz mov cmp out inc sub and lods ja mov ja jae das cmc or jne pop stc cmp dec rcrl xchg pop rcrl pop leave xor out dec mov (bad) push ljmp or (bad) leave pop xchg sti es ds (bad) icebp pop gs scas cmpsb or mov xchg in test mov repz jmp mov inc jmp jle and and adc jae push shr adc adc jne xchg pushl jo (bad) std add lret sub movl (bad) jl jle bound divb mov adc and gs adc sbb ja stos imul jecxz rorl mov sub adc negl jle jg mov sub (bad) out scas adc pop movsb les out xchg (bad) popa popf jne lods sub cmp into cmp cmp mov scas pushf fildll dec shlb pop dec sub inc in mov icebp ja or scas sarb jl imul pop fdivs add out xor (bad) sub push and mov les into mov jecxz jle aaa aas xchg push sti test mov push scas loop pop mov (bad) adc dec push xchg test out cmpsl cmpsl pop push push push mov divl or mov add fwait jnp dec and nop dec fwait mov pop xor repnz mov push mov out adc adc mov mov cmc lret sar xor stos push pop clc mov adc loop shrb add loop rcr add xlat jmp jb dec adc shrb sbb jp mov dec popf lret pop js movsl sbb push xor dec call xlat stc push push sub pop movsb lret add ljmp fdivrs xchg jae pop leave bound push sub inc and push sahf sub cmp movsb xor sub and pextrw mov add jns imul rcrb clc or (bad) fucomp icebp sub xor aad scas sub int3 mov sbb push add jle (bad) pop mov sub and hlt and das sub xchg into xor loope pop outsb cmpsb aam jo pop imul (bad) nop pop push lock faddp ja and mov mov push fcoml add ja jae out and lret nop fidivl iret mov jg xor movsl repz fist lret add xchg lret test pop pushf lock bound add leave xchg mov pop mov mov imul pushf (bad) lods sbb pop mov out dec ljmp sub and mov push out lds ss jb mov es mov push inc xchg sbb sub dec imul scas sub rolb ja inc push std in mov rorb lret push lds add enter inc scas test or adc sub mov sub adc dec pop push xchg imul jmp repnz dec xchg xor push or in or outsl sub lret xchg in push dec imul (bad) ljmp pop fild out mov push repnz xchg (bad) aad es rcr test (bad) push stos inc (bad) jge loopne inc pop mov xor sub ja call sub and leave jp xchg les repnz xchg test mov xor push mov fs call (bad) stos fstpl xchg shlb jns mov notb int das pop aad lret enter adc pop std leave sarb adc pushf test xchg add fdivs dec stos cltd jg cwtl sbb cld xor mov out jne pusha pop out mov push ret ret xor cmc sbb or stc ficoml xor xchg mov adc sahf sub outsl inc and jle dec pop popf push cwtl insl adc xor mov push or cmpsb mov xlat inc push jl xchg mov xchg sti push fs out add and or mov jl sub and mov xlat ret out pop mov insb (bad) sub test popf cmp in clc mov adc aam push bound sbb sti ret pop (bad) stos adc std into cmp push mov jp pop test dec pop out mov hlt jecxz add cmp pop xlat add push dec xor subb inc loope pop aas loop add add pop ret push jge mov push aas mov jg rcrl ljmp outsl xor pop subb outsl pop dec jl push stos data16 inc sub cmp inc pop and mov pop divb into mov push inc jp sub shr (bad) psubusb cmpsl inc xor sbb cs inc dec out lcall mov xchg adc push inc clc in pop add push sub pop push mov dec jns pop not xchg lea inc mov (bad) xor in rcrb shl add dec (bad) inc andb sub pop pop jecxz sbb inc mov push (bad) test out insl sbb cmp test call int3 mov or sbb enter pop (bad) adc (bad) sub sub sbb xchg aad inc repnz or sub pop cmc fistl dec xchg std jnp mov sbb xor jl test add and xor and adc rolb cmp aas add pop mov subl pop jmp repnz push mov sub jnp fildll inc sahf xor mov jnp cli add inc movzwl outsl fist cmpsl in (bad) jp mov cld decl mov scas push enter push pop pop into rcll (bad) xor (bad) cltd and mov mov (bad) and mov or sbb xchg stos add xor inc addb mov push fidiv push mov xchg and or sbbb loop pop jp inc out push jmp les jno dec pop xchg or or xor cmp add push push adc xchg (bad) adc or sub mov cwtl fnstenv (bad) mov daa jg pop cltd xor cmp out pop lea sub xlat jno test sub cli or or sbb push call roll mov inc sub xchg repnz mov mov loope xchg cs add popa cwtl push data16 push fnstcw pushf pop repz movb push ljmp sub pop inc mov int3 jo cld lahf mov lcall clc bnd adc neg inc jns cmpsl xlat insb (bad) lods ds lret add lahf (bad) jecxz (bad) nop and stc xlat mov sub pop ja int lret mov outsb ret sub cli and fs add ss popf adc or in jge cmp mov xor mov out mov or add (bad) das idiv or jns pop es dec and fs sti mov sub fisttpll repnz add rorb cmp lods push sub (bad) bound xor pop imul jb subb xor lock cmpsb sub jle leave popa jle stc in pusha and mov fsubrl or inc into and and or inc inc jmp cld loope mov lcall fwait dec lret or push aam adc lahf push sbb (bad) xor inc dec sub add sub dec iret je popa (bad) xor and out int3 addr16 and pop and push movsb or add inc sub repnz add sbb add inc pop insb dec push mov leave sbb cmp ret dec or push mov xor jbe inc xor loop cmp test xor sub sub xor pop daa (bad) and mov inc cwtl (bad) mov das xor shr call leave mov lret sbb repnz fiadd in cmpsb les cmp cli repnz lds mov cld (bad) add outsb repz inc add push add fxch les (bad) fs mov and cli mov xor push and jmp sbb roll jb pop add push dec lods sbb ljmp sub cmc popa and sbb icebp test jle dec fdivrp int3 je xchg popa and or into aam jb push cmp or push or ret xor mov cwtl fistl push inc add inc pop or lods jg mov dec in mov ret sub xchg ja popf push and data16 pop mov gs ret ljmp mov testb jo add mov push dec pop data16 xchg (bad) mov push les pop rolb adc and mov cltd aas fs mov and mov icebp jno sub gs sub rorb and movsb outsb sub mov sbb add add scas std fcoms xchg out call gs mov jecxz test out or ret jno dec push mov ret pop aam pop lret aas mov into or (bad) les adc pop out mov lods inc mov and das shl cmpsb imul jo movsb push lods outsl mov jp cmp popa or add movsl jns mov push cmp insb into dec fimul dec (bad) loope push cmp xchg idiv jno inc mov mov aad aad jbe lret lock xchg cmp out mov pop jge inc mov loopne sti mov jge cmp mov xchg loop add ret lods jmp call inc pop add sbb cmp mov bound cli movsb or data16 repnz clc and add sbb loope cli fisttpl jno add das mov adc (bad) fstps imul lahf into lret cwtl mov mov inc push shr adc cltd clc das mov pop xor adc cmp (bad) lret xlat icebp clc dec fucomp jne pop push (bad) (bad) sbb (bad) lret (bad) mov and mov (bad) enter adc jno dec lret daa inc sti and fist or dec mov insb out pop jns sbb js pop out loop xchg outsl or jno fs cmpsl (bad) lret xor mov ficoml mov or sub xchg jns xchg mov gs out cmp xor xchg out sub sub xor leave cmpsb sub jp gs stos or add daa mov inc sub add cmc lret mov data16 aaa push bound (bad) (bad) and adc clc pop jnp hlt cmp mov or xchg lods jg push shlb add and pop lahf dec and push out cld pushf les imul ja int3 push cmp sarb fs ret test int3 push cmp mov aad nop sub mov aad xlat push (bad) (bad) lret dec sub bound rcrl shrb into out cwtl pop sbb ds outsb stos mov test test lods jae mov or mov pop jbe out scas mov xlat icebp aam std cld iret (bad) aaa int3 push out inc sub out cltd sahf cmp les out sub decl ret popa inc push cmpsl repz stc (bad) arpl aad in and daa jae daa adc or push js mov idiv nop dec je or in dec shlb mov inc fidivrl pushf dec push mov test push mov es lods jno xrelease adc mov push mov outsb repnz or sub lret xchg jmp (bad) or inc pop cltd push push aaa lods cmp adc cmp int rol dec lret enter (bad) aaa loop xchg mov sbb aas test mov (bad) or stos cmp sub shlb sub movsl clc jb or call dec jne loope jnp (bad) shrl push aaa and in hlt fnstenv in adc sarb cmp iret clc jbe xor fbstp mov mov xor (bad) sub pop jne mov adc nop ja dec int3 jle mov lcall (bad) lahf jne jo int3 shrl jg in (bad) dec sub add pushw imul rclb movsb mov xor enter fldenv dec push call leave je loopne (bad) hlt out jbe push mov xor and ret adc popf push xor stc cmpsb test add jge xchg loopne lock sti dec das arpl mov adc dec mov shll adc aam enter xlat sub imul mov push fwait cmp popf sti or imul rcll sub and sbb add sbb pusha loopne jge pop dec cwtl fsubl and (bad) enter add push pop dec cmc pushf lock mov lahf xor aam or aaa sub xor mov dec mov fidivrl and sbb and dec mov rcrl stos jecxz mov jo test mov mov sub cmp push stos cld repnz repz xor xor lods inc clc cmp inc jp sub mov mov ss aam inc (bad) scas test aam dec sbb pop xor lret and shrl js xchg je push fstp jne ljmp jp jbe stos hlt mov popf inc xchg push repnz sbb mov and sub jg push mov and pop out mov mov dec adc fs mov mov or lds rorl add outsb ja add or lret xor mov idivb mov hlt in call gs mov outsb decb cltd lods xor jb lahf pop and outsb mov mov test dec pushf fcoms adc pop out lret insb dec lret loope std xchg inc daa sub push xor aad mov cmp out jmp out movsl test aaa in repnz lock xchg sarl inc inc mov add cmc movsl ljmp mov cmp lret arpl adc das mov hlt xchg loop add lcall fistp fs fiadd fidiv (bad) jl sub adc test dec mov (bad) xchg popf icebp adc in or rorl sbb push push negb xor cli lret out insl imull loop test (bad) mov dec stos mov jp ss gs int3 mov sub or push cmovb (bad) or xchg lret loop lock fldcw sub cmc sbb xor adc in mov mov dec enter ret roll adc cmc cmp push cltd or mov pop jmp add mov cmpsb iret add (bad) cmc xor push cli dec mov sub pushf (bad) and mov jmp lret inc pop cmp jge dec xor cld xlat imul pop xor jmp lds sub xor (bad) aaa movaps data16 les test repnz or jmp jno push or pushf (bad) or mov lea mov outsb and jnp sub lahf push push (bad) mov inc (bad) sub rcll pop or add xor mov out xchg decl dec pushf aad jns mov push leave (bad) out mov add or cmp cmc inc stos cmp shll mov dec jne das iret push cmp ljmp mov cli push or ss rol (bad) or inc mov or jno add xor or in xor sti cwtl lea iret das add aad (bad) mov iret or lds pop les cli stc pop (bad) flds (bad) je jmp sbb bound ds add and sub mov aam inc in xor scas sub cmpsl (bad) fsubrs add (bad) ljmp and outsb leave mov sahf in and jecxz test cld cmp mov mov push jno sub push pop xchg out gs cmp mov pop adc inc adc or or sub xchg aam outsl ljmp (bad) adc sub or outsb sub sub sbb bound loope gs xchg ret mov mov cmp loopne lcall (bad) jle in push (bad) gs xor xor mov push decl mov add mov in stc xchg fbld ret fdivl mov push call cwtl lret sub dec mov notl xor rcl inc sti sub popf xor xor add pop std cmc jae xchg mov sub and or mov test insl nop mov add data16 push dec pop xchg mov imul pop ret adc dec (bad) jo cmp or or (bad) push jg jecxz data16 or dec sbb cs sub repz icebp or nop les fwait aam adc inc pop and gs cmp out dec adc pop fldenv (bad) and mov pop sub xchg mov aam ret aam push sub xchg fadd fild rorl mov (bad) dec data16 pop aaa mov adc mov imull cld lret dec int xor imul adc mov (bad) into bnd popa adc in pop lret out inc sub ret sahf push mov pushf int3 sub cmc mov sti xor mov loopne (bad) popf push pop (bad) bound cli decb adc sti lret sub add fcompl mov scas lret test ret mov das mulb sub das xor inc sti les dec sti in fcmovb sbb aas cwtl push decl mov cmp jge stc push (bad) push push jmp out sbb and (bad) test dec and test sub pushf mov and pop or mov sub lods (bad) roll jmp add jg adc jnp out cmp mov imul fmuls clc into mov pop jbe in subb jne scas out inc sub and or pop xor pop sbb int roll add fdivs mov jge xor pop xchg mov pop sub and push mov dec ljmp mov hlt jne or push mov not sub fdivrs inc ror inc lahf maskmovq idivl pusha dec adc cmpsl fild sub pop mov pop xor movsl xchg in push add jnp outsl pop not roll mov imul xor (bad) jnp out add fldt mov add xor pop xchg jecxz mov pop push dec xchg xlat mov adc popf jae xchg pop retw xchg or (bad) icebp das jne and je cld or repz mov lea add push push rolb xchg pop or mov shl pop not push mov sub addr16 add and sub mov mov stc add jmp push mov sub mov test stos mov xchg shl fcomp pop push mov (bad) or and cmp xchg je fistp call int3 sub shr out dec or push sbb dec out adc fidiv popf shr (bad) or push and adc rolb jp push movsl andl popl jnp stc add out ljmp not clc push es push fdivs push subl dec inc lahf add repnz (bad) or inc dec cmc dec jnp xor or cmp xchg adc add rcrl xchg mov sub and sbb push (bad) aaa int cli ja xchg imul rorb jge mov scas jae mov out popa mov and (bad) jmp xor idivl iret xchg fucomi sub push jmp lret test jb lret in mov out and (bad) lahf cld rcrb and mov ss bound xchg xchg ds fsubl jecxz dec push adc xchg test cmp sub clc mov dec and mov push cld jae push push pusha xchg and push xchg dec jbe stc (bad) lcall fisubl ds mov or scas call ja cmp stos ds mov cmp icebp fstl ljmp cmp (bad) jge dec xor xor xchg repz fidivr cmpsl lahf adc stc mov pop fucomp or mov (bad) mov sbb hlt pop and repnz push imul div mov or or dec push in sub push push imul scas xor jns dec loope push or jge push mov push xchg xlat xor push cwtl xchg out mov cmc adc inc jo pop cmpsl pop lds mov aaa mov dec pop mov scas xlat out and xlat xor ljmp xchg (bad) daa into and sbb scas mov lods jecxz (bad) mov push dec ljmp cmp mov sub out je push out cld dec mov lock add sbb stc cmp mov cs and push push push dec or ret (bad) or repnz xchg fcmovnbe fs sbb and jg imul stos ret push (bad) out add mov pop out or or xchg cltd lds push loope out dec out adc loope xchg faddl pop sub inc bnd test push and cld sub les testb jp xchg push or mov mov shr or add frstor dec jb push dec cwtl jp xchg addr16 adc push dec test sub and jno mov and xorb pusha fcmovbe sarb ljmp lret jl sub sub inc add add sti ja pop mov ret jnp and movsl pop dec arpl mov cmc iret mov push fs daa xor dec popa mov dec repz repnz ret in cmp lahf data16 mov xchg inc xor ret out xchg jno insb and fs inc or jmp lods cli insb mov mov out scas repnz jne xchg pop lret jl xor daa loop jmp mov ljmp push (bad) mov and jg add sbb xchg cwtl and ljmp cmp daa ret jge in fldenv mov sbb (bad) leave fcomi scas pop fnstcw cmp leave aaa sti add lret fimull dec push lret adc pop and sub mov sub push mov jge popa mov sbb mov fisttpll push loope mov add ljmp fnstenv icebp add inc iret pop (bad) popf das sbb cmp pop repnz ret repz add sub mov pop jecxz (bad) or popf adc jmp mov mov push sub syscall push jle gs gs inc xor (bad) cld out pop je lds stos cmpsl pop sbb rolb vpsubq mov mov adc jp (bad) xlat mov xor incb das iret push loop stc test fidiv adc mov sbb call ja je cli cli dec push xor pop lea mov cmpsl mov xor inc pop xlat idivl jg dec mov cmp sub inc jno push lods js jae dec iret cwtl (bad) mov jno and and xor ret shld jl jp jg ret or pop mov pop lea push xchg loop jno inc daa cwtl lcall push es insb jmp fwait out clc xchg dec popa imul (bad) jmp rolb xlat pop out lcall loop inc mov and cmp sub incl xchg (bad) lock das (bad) pop stc lods jl xor cmpb cs rclb mov pop ret add mov ss rclb xchg ret mov sbb fsts jl fist xor fnstenv xchg pop outsb movsl push mov xor and movsl lods dec call mov jg cmp sub loop rol cmpsl push or jmp adc or data16 aas repnz dec pop mov rclb addb push loop pop rclb pop cmp mov push jle outsl aad mov cld mov mov loope arpl mov mov aad xchg fcom xor out dec aas xor add cs ss arpl icebp push mov xor or std and mov ja mov xchg add icebp pop adc loope std add jbe xchg dec cmp into scas mov or insb je sahf lods lds sub or or les or sub xor cmpsb (bad) sub idivb das adc mov push hlt cmp mov pop sub mov adc sub inc sub hlt into or mov shlb sbb jmp ljmp adc stos insl dec ds cltd dec (bad) icebp repnz inc mov lods pop and movsb int cmp sub fistpll pop jmp inc xlat mov lds daa pop inc cmp movsb mov aas aam xchg mov cmp pushf mov inc out add orb push push xchg idivb flds sub jb mov dec mov test stos mov ljmp cmpsl push aas xor xchg rep in xchg stc sbb cmpsb jne mov out or and add push adc adc sub adc bound cmp push xor mov sti xor add jmp stos popf dec xor push xor or add inc popa mov arpl dec ljmp and mov out sub into cmp fisubr sbb and aaa sahf into lret (bad) mulb ud1 ret jmp push test sub push mov leave icebp jno mov fdivrp mov sub adc push ror cs les jge xor out sub add pop sub scas repnz roll add jmp leave mov mov sub adc scas jmp mov cld (bad) lret jne xor mov pop cmp mov ret dec and adc imul add imul or adcb pop fistl pop loop subb outsb sub xchg std cmp mov mov mov add adc in mov enter loop lret int3 gs jnp lahf xchg or and push cli les lret add adc std jecxz loop push or mov push sub xchg neg ss sub out jl loop push aad jo divl cmp mov loope sub jno mov das pushf and dec pop mov andb insb mov jne xchg pop fcmove or inc test mov sarb je mov mov push movl mov pop sub adc insb (bad) std cmp xchg mov rcr jl clc mov xor loop jno jmp stos fsubs sub out push add dec jne in fs sti mov xlat test out inc mov dec popa mov pop mov outsb dec mov cmp sbb or (bad) in pushf mov mov fsts jmp adc in orl clc nop lahf inc enter pop mov dec push lcall hlt cmp or push bound out test xchg add nop aas popf enter mov jb and cmc lds cmp dec dec mov dec stos shlb call cmp xchg dec xor sti add and cli in outsl xchg pop test push mov iret xor sub push enter pop sub mov sarb std push out sub and adc ljmp fistp sub (bad) cmp faddl or int stos lret dec out mov movsl cld xor add mov es fwait cmp mov stos out xchg jmp ss xor les out and xchg cwtl pop xor mov inc add xor pop mov dec ja cmc and dec adc aaa out testl test fsts cmpsl xor xchg test popf lcall in (bad) dec xor (bad) adc cmc jmp scas sub add out and sub shll lea shlb ds add add pop psubusb pop jl push mov imul shll popa and pop dec mov adc fdivrp je stos clc push mov fisubr popf jb pop pushf sti das out xchg (bad) xchg inc mov syscall mov and mov mov sub data16 ljmp push push jmp inc xchg je repnz sub js mov mov jecxz dec add ret add aam jne sti negl fnstcw ret mov (bad) iret and pop mov mov inc inc mov (bad) push in or add mov (bad) pop or pop (bad) push xor ds add stos mov leave aas mov (bad) dec les jecxz jge jp lret (bad) mov adc dec push jge (bad) jbe pop pop mov ljmp scas and and rol (bad) xor xor shrl or popf hlt cmpsb das push mov jns and repz dec lods push (bad) adc jmp sti xchg nop shlb int jnp or andb push loope (bad) imul jno movl sarb (bad) xor and jg pop mov (bad) sbb push jne pushf push xchg aaa and push ror ja outsb clc lret xchg testb add or mov dec in and pushf sahf imul push or icebp adc decb das push fucom xchg add aas or xor call iret (bad) sub iret dec (bad) hlt sbb jg andl das mov and cmpsl push jmp fwait out inc and popf jno xor inc enclu or data16 out cltd ds data16 (bad) fistp sub daa daa sar mov lock rcr mov popa push call xchg fs jmp sub mov pop or es int rorl sub jns rorl pushf cmp mov jns xchg push loope fs in stos fldcw outsl test and xor stc cmp mov (bad) loop (bad) xor xlat add adc pop or out mov dec mov lcall (bad) (bad) int fs int3 pop lea and cmp stc xor mov mov stc (bad) jmp cwtl xchg addr16 ret out mov orl call scas mov pop enter mov push insl dec in (bad) xchg clc mov fsts das xor mov test inc fcoms das mov mov xor mov mov out lret lea mov scas outsb pop add cmpsl push push or push xchg dec pop mov or mov and xchg adc out jb push ja lret mov xor mov mov stos push jg cmpsb dec pushf cmp pop and add insb out xlat out cmp and sub pop dec sub dec xchg rcr dec (bad) fnsave pop push stos les clc lahf mov popa (bad) (bad) aas mov pop fnop gs stos sub es xchg call repnz add notl imul dec test lret or and data16 lods dec incb sub cwtl lods xor jmp insb fisubr jns sarl pop ja mov sahf xor mov xor pop (bad) dec adc push jg adc (bad) test test pushf jns mov and push xchg push mov pop icebp outsl dec aad pop test mov sub push dec decb mov mov inc stc scas jmp cld enter jl pop in ret dec into pop cli adc dec jg xorl mov aad push xchg lods xchg push jmp mov adc mov xor adc mov addb test mov loop sti leave aam (bad) out jno inc xor lcall divl pushf dec sub xor sub mov movsb aam scas adc pop sub les sub sub stos call pop inc ficom mov mov xor xor lret xor xor push xchg (bad) mulb inc leave out repz xchg fcompl mulb clc cltd cmpsl mov out lret test sub mov jge and add mov pop rorl stc cmp cmpsl (bad) rcl rcl movsb mov scas popf mov jmp popf xchg mov scas xor mov fsubs nop addr16 inc pusha movsl divl stc cmpsl imul jmp xor xlat push bound sub das out mov sub fisttpll rcr mov les cmp inc adc sub jmp xor jp stc movsb xchg mov mov sti mov repz xor mov fildl jle xchg and pop inc inc mov lret pop js dec cmpsl push push cmpsb mov cld movsl push lret orb xor stc cli lock adc add sub mov pop sti aad mov dec lds mov mov cmc ficompl adc popa popf pusha and pushf and in mov cmp test pop mov ret pop dec lods ret cmp mov and add iret mov mov popa (bad) xor jno stos sub pop leave popa std jmp add ds sub aad es xor and cmpsb push and mov leave inc add mov adc mov xchg dec mov out jbe jb cld enter mov dec cmpsb mov jno mov decb aam clc jg into add loop inc push xor dec xchg jnp mov sub add mov in ret movsb ljmp jl push mov adc loope sbb jl stc xor in sub jmp jge or cmc clc push insl scas clc jo push imul or add push xor shr mov (bad) (bad) dec leave call xchg mov (bad) icebp xor jle and repnz repz dec xchg jg negl dec cli pusha dec pushl sub add pushf mov rorb lahf cld leave das push xchg mov test gs mov inc nop lret out add adc cmp or mov scas jge (bad) dec (bad) mov add into adc fcomps imul xchg bound inc push pop lret cmpsl jg push and cltd mov iret rorl mov mov inc leave xor xor lods or imul mov pop dec mov ss in imul popf jne out add xlat mov sub mov sub push fdivrp pop aad or aam dec mov test stc dec cli xor and mov xchg push or or cmpsl in pop adc loope aas sub das adc mov mov arpl adc pop mov sub loope (bad) into test testl jge pop (bad) adc test adc push stc icebp dec sahf and sbb mov cli cmp movsl cli xor push je lret lock ret xor addr16 xor mov fstpl pop (bad) in ds lods popa int jnp jno jmp xchg or movsb iret and iret mov imul lret in xchg sub sbb pusha push (bad) lret mov dec out test xor add int3 loopne les push (bad) fwait hlt jmp repnz dec xor xor ds and pushf nop (bad) mov inc mov jmp jl adc mov mov clc (bad) daa ret jb mov push push iret (bad) je mov cmp pushl test push jnp (bad) dec push iret sub push xor mov xor jbe and mov mov inc xor lahf jno push fdivl imul mov push adc adc hlt lods mov mov xchg std inc leave ret mov out pop mov or jb call fstl xchg std xchg rolb aam pushl dec int cmp ret sbb loop xchg dec mov data16 subl jnp adc ficom leave jle push movsl aam mov enter in je and mov cs adc pop fsubl mov roll xor std mov ret sub arpl pop jecxz es or mov aad add test jle vpsrld jmp gs scas sti in test sub cltd fwait xor sub lds pop ljmp ja into sbb and out mov ret xchg jno imul or pop push and jnp movsl xlat mov or add sub mov jmp or mov sar adc inc gs clc dec shll pop pusha or add popf in fwait lock sub push mov add sub push scas pusha jbe test pop mov cwtl sbb add and mov xchg and xor in loopne (bad) out das (bad) jne dec mov pop int3 mov pop jo rcll lret sub pop or cs jns mov (bad) (bad) mov pop call dec sbb sub sub negb (bad) and dec cs lds (bad) in int mov mov inc popa cmp cmpsb loope cmp movsl (bad) xor xlat mov and sahf jp fs sub mov or fmulp adc mov notl mov (bad) and push mov xchg out push xor adc add mov arpl in mov pusha mov mov xlat mov (bad) test ljmp scas dec mov inc les jns nop in popf or cmp cmp pop movsl add or iret and push and cmp das jl pop sbb mov mov mov out sub pop or xor xor loop pop lds cmpsb pusha lods mov in mov mov jg jmp jl gs cwtl adc mov cmp insb cltd pusha xchg idiv push movsl mov (bad) shlb adc lock pushf or fstpt cmp fiaddl ds mov fs mov outsb sub push daa add or dec pop inc ret cmp idivl lahf rorl lahf scas test adc xchg add lret mov push push stc mov dec imul sub lods aaa mov add or jge inc jp pop or push dec sub mov ds xchg popf insl fabs cmp movsl test mov dec data16 shr leave leave icebp push jae adc out adc ret in add leave out clc enter sub into ljmp dec cmp jne pushf lret pop shrl imul out bnd sub ljmp push sti cwtl jmp shll cmp push pop idivb push stos ds jle dec test push test push repnz loop pop out adc lock aaa cmpsl pop mov pop enter shrb mov sbb dec adc rclb mov repz sbbb and mov cmc inc ljmp lret stos int3 xor xchg out xor loop xor rcrl clc mov add lret cmp out hlt push pusha add cmp pushf push adc pop dec lods jl out js and daa insb pop jle pop out scas bound or js mov mov cli inc (bad) xor add (bad) aaa xchg mov enter mov movsbl sub lret fs scas int3 fidiv dec iret xor push add inc mov or in cmp movsb inc jno (bad) mov test mov dec lret push dec icebp (bad) cmp xchg les adc add inc dec mov repnz push pop aad orl repnz out mov xchg mov sub arpl mov popf jp xchg clc add out ja fistl mov jae add mov jle pop sbb sbbb mov punpckhwd cli fnsave fsubrs lds add mov je push mov pop popf rcrl icebp pop pusha sub aaa shrl add call mov add xor add mov insl movsb mov xchg gs daa in jl push subl out adc push cmp mov int3 mov add shr shlb adc push mov mov pop pop mov pop dec in add pop add pop mov mov cmp fcmovnbe or push and or loop and idivl test cmpsl push sbbl add add mov loope mov push add sub icebp mov repz pop sbb add sub xor jg push mov cltd js mov xorl orl sub inc test push xor stos mov xchg icebp mov shrl jecxz add into and jae dec xchg inc xchg arpl pop push stc mov inc mov ret mov out sub sub lds out mov scas and mov mov push cltd repz sub in xchg cmc mov or ds xor in loop es fstl popf fsub loop sub sub (bad) cmp sbb stos push push push jp fnstenv leave and xchg adc mov push xchg mov rcll xor sbb lcall sbb (bad) push add inc and mov cmp movsb mov aad cmpsl jno dec bound pop jmp stc stos daa or lods jo popf stc rorb (bad) sub jbe popa ljmp add mov stos inc add lret and push repz stos sub cmp rclb mov das cli out cs xchg pop adc dec aas inc notl cmp icebp mov fistpll xorl jecxz inc addr16 pop stc fbld sbb in in js jns pop mov mov mov adc mov lds clc and sub mov jbe daa or inc cld add (bad) mov outsb cs ret push push shlb sub outsl stc es idivb and in sbb push mov xchg sub cltd repnz sahf jg pop in mov out lret push adc xor xchg sti cltd cmpl pop lods mov mov ljmp push sub aaa into mov (bad) jle jae mov clc sti mov ja mov xor adc push sahf imul pop outsb jno jle (bad) mov enter imul addr16 fisttp test xor sub out inc mov imul jg lret ds cli add jo xor mov mov shll movsl sbb adc leave and mov push ja rorl jmp out push inc idiv into mov (bad) push (bad) dec js mov mov adc fldenv (bad) fbld pop daa les mov out ja test mov rorl ret cmp into dec add dec nop mov adc stos lret dec (bad) xor mov mov pop adc xchg cmpsl daa pop xchg test sbb stc rcrl jne add mov cmp pop int3 lods ret lahf mov sub lds ja mov out inc enter (bad) fisubr scas cltd cwtl icebp imulb out sub adc pop xor out add add fcomps xchg in sbb pusha daa push (bad) sub sbb movsb sub fsubrp aas mov movsl jl push sub xor les orb repz lods lahf cltd popa sarl pop mov repz in cmc push rclb pushf mov pop out or loop aam loopne pop add das cmp jne ret loope dec cwtl mov mov out xchg std (bad) xchg mull je push add sbb sub outsb fdivl sub (bad) stos xor xlat mov inc (bad) cmp test sub jns (bad) out pop rcrb ja push adc mov mov or add mov pop test jmp push pop fiaddl loop in out jb icebp popa push bound or jne cli mov add stos fild stos dec jmp cmp jp xor stos pop mov xor mov rorl into adc pop decl rorl lods mov mov dec into lods mov das ficom les jmp lret movsb out clc (bad) dec lret (bad) sub lea stc lahf adc sub and xchg (bad) mov jbe pop xchg push scas idivb and push jmp lret inc vmovaps dec push out fnop push loop stc lcall call jecxz icebp in gs mov scas jb pop (bad) cmp jno insb cmp dec mov dec mov mov add adc subb mov mov pop (bad) pop negl les repz jecxz cmp add pop mov out dec out push loop sbb je push xchg pop mov rorl add jmp leave clc adc push dec ja mov mov lret jbe das jg movsb dec sub xchg pop pushf jecxz dec mov dec and icebp or fsubrl push ljmp in repz js mov mov jp push mov xlat addr16 hlt das push pop mov ds leave pop adc xor scas sub ficom xor mov dec and inc cmpsl ret and ljmp adc test lods xchg out jno inc sub add or mov pop fistpl ljmp bound (bad) cmc jno xchg iret mov jmp jae lock aad sbbl adc aas movsl mov sarb push inc dec mov loop lret mov add popf and inc inc and dec pop and add repnz stc stos dec xor (bad) (bad) mov jp add ret clc push insb xor arpl sti in (bad) std mov gs add dec pop sub mov inc sub pop lret xchg mov xchg enter scas pop aam or add (bad) fwait rolb shr in or rcrb push or add aas and movb mov mov (bad) decl (bad) jg jnp rcll or iret pop es (bad) ljmp pushf and mov adc enter aas movswl iret lret mov sub sub add js or stos mov fistpll adc mov sub pop jecxz add or or pop cltd pushf into cmp aad xor mov pushf loope ljmp loope push bound jge jmp mov or adc and push sti xchg addb mov in jmp pushf out push scas clc add cmp add or scas gs cld xor jmp fxch lret jbe mov push push fs sub xor add loopne repz in inc add imul dec mov pop flds jmp fiadd pop loope cmp add mov mov out lock sti xchg es mov (bad) dec ljmp sarb fs vmovaps sub mull adc pop or idivl sub mov xchg mov sub jns sub rcrb cld pop mov test enter jecxz,pt push leave and xor (bad) xor popa xchg fsts jb sub xor stos sar sub jmp xor mov adc adc repnz sbb xor icebp loopne add mov mov test clc push movsl (bad) cmp out mov xor fistp or xchg shr adc mov xchg xor sub rcll icebp adc inc mov (bad) mov and cmp cmp push sbb or lret sti mov adc cli lret or add jae pop loope add sub ljmp cmp pop out adc out mov (bad) cmc ljmp cltd sub sbb jg insb add push int3 hlt dec mov mov ret (bad) sti dec xor addr16 add leave mov ret or add push mov mov movsl mov jmp mov arpl andb or mov call (bad) jmp decb push push mov cli dec repz and push adc sbb xlat ljmp scas dec lcall mov in mov scas sti and loope popa popf sub bound jp sub mov test ficomp nop repnz sub mull jp mov or ror push sub sub divb inc out mov push dec int das dec call call add push cmovge jne popa or mov imul rolb jl pop iret in xchg pop idivl xor (bad) mov dec out ljmp aaa add scas jb out inc rorb ja fwait neg outsl jmp icebp (bad) inc lret inc dec fldl adc mov jle lret std rcll outsl mov ror repnz ss mov sbb jb dec sbb dec xor add and loopne (bad) dec add fist lods add pop std mov into imul pop out mov sub into xchg sti ds loopne mov and in cmp sub mov rorb sub scas out mov pop loope and ret mov faddp ss push xor adc ja out call loop xchg sti leave cli ds pop andl std xor data16 repz ret xor sub dec fcmove (bad) jne or sub add pop imul cmc lds sbb lcall js mov push xchg pusha gs iret sbb mov xlat inc jecxz pop and bound lds mov jge aas jo xor daa leave pop dec rcrb fs stos mov pop sti mov inc dec cmp or aad mov hlt lds xchg mov repnz add sub popf xor push in dec andb daa add xlat or cmp mov add mov dec (bad) cmp das movsl jno mov outsl loopne pusha and add into or mov sub push nop (bad) divb mov push push faddl aaa mov mov out jge xchg je (bad) aaa or push pushf cmpb and icebp pusha leave jns adc std sub xchg (bad) cmp jo pop or fcoml sub jo and mov into in adc and or and (bad) div add xchg lret enter test into cmpsb shrb (bad) jno sub mov ficomp sbb repnz push lret jge pop into outsb out js push mov xchg fs jl out and adc adc jmp test sub and xchg adc lods test mov fdivrs test sti xor test sti cwtl xchg cmp add jge bound loop hlt or jae cltd scas xor xchg imul mov push mov adc popf idivb xchg adc add (bad) fldl mov push or adc pop mov add mov xchg pushf sbb pop lret nop dec lret jae push ss fcomps repnz (bad) add ja loopne data16 js rorb adc sti or mov aad pop xchg sbb movsb and or mov push loope xchg jg push mov inc in lret stos mov mov pop sub popf idivb push mov ljmp sub mov xchg arpl lret mov mov and ljmp sbb add or pushf fild inc and push mov fndisi(8087 xchg mov imul (bad) enter jmp ficompl and je in lret add (bad) call cmc add dec cli int3 pusha mull mov pop sub jl ret sub mov lahf (bad) idiv add xor or adc lea mov dec xchg mov mov mov inc push mov fmulp lret jle lods push test das loope push pop sub outsl std test repnz rcll lret add mov and xor and js jbe push cmp mov aad enter and add mov sub (bad) sti sti stos adc pop xorb lds mov and insb dec adc orb mov pop pop out gs arpl push aam jecxz adc call xor (bad) fstpl ljmp xor stos jge sub jmp cld or jmp (bad) aaa and pop xor push movsb adc sahf lods sub or push cmp fsubrs je xor sub xor add xchg inc subl jnp loopne (bad) cmc lret pop pop mov mov repz push push pop sub cmpsl lds test movsb mov fstpt out push enter mov jb xchg mov imull push imulb jg (bad) movsb shll shrb xchg mov les or jg mov mov adc stos dec dec add out mov cs xchg fcomps (bad) inc lret cmp (bad) out into mov mov xor mov cs les cld fwait and jns insb mov stos mov lcall xchg sarl or imul cwtl dec mov ljmp add cs mov pop xchg out sti mov xchg adc and pushf push xchg and adc cmp adc push add adc mov jp mov sub incb movb inc mov ret pop mov stos je cli xor dec adc xchg repnz jbe xor xchg insb scas mull add ret mov xchg adc and add or dec cld push sub fisub (bad) outsl test mov dec repz or adc aad (bad) mov popf rcll (bad) (bad) and mov mov in inc pop repz outsb pop fs loope js (bad) add cli or sub push rcrl jne rol add les call sub mov and cmpsb insl (bad) and repz das rcrl jp dec cmp pop sub dec xor fadds mov xchg jecxz daa cmp mov lock lds sub xchg out divb inc decb pop repnz xchg bound or pop sub stc negl jo negl push inc push xor mov clc test adc out dec push inc jmp (bad) push movsl jge inc add push jg push jmp (bad) dec jbe sub sub aas lret mov out dec stos mov sub xchg pop (bad) mov cwtl pop xor scas mov xchg ja jge (bad) dec pop push mov and gs or fnstcw cmpsl xlat sarl movsl push add inc (bad) in pop mov pop je (bad) out and in cmp mull sub movsb mov repz jg push (bad) cmc enter dec pusha pop pop aaa inc dec stos int mov lds push add or dec mov sbb fsubr cltd popa dec cmc dec (bad) mov xchg imul mov sbb sub jne adc test ret movsb rcrl xchg xchg mov sub fs mov pop add lret sahf les movb mov rorb cmpb fsts loope adc xchg mov xor les icebp out cmpsb imul shl sub mov inc add add mov sub out push and fildl mov push add jg lock bound jo out mull pop push pop aad cmp jmp adc pop xchg push adcb add jmp loopne cld into outsl inc push mov mov and mov xor pop idivl push mov jge adc mov int3 inc mov add pop and popf sar in adc sub adc mov nop popf jae pop aas add sub or or adc push push loopne movb jl add mov into aad lret pop add lret mov loopne repz pop fcomps (bad) adc cmp push push lahf sbb add pop add sti jle mov jo rorl rolb cmpsb pop sub fsubr pop xchg xor outsl or cmp (bad) fiadd xor and aam enter js andl (bad) push xor mov inc mov and sbb dec xor ror mov insb leave (bad) push loopne je adc mov sarl jnp icebp pop cwtl jnp aas jmp mov xchg lahf pop and cld stc xchg sarl sub clc xor jmp hlt out imul xchg push test shr loop sarl sbb int and push aad jle test (bad) mov cli mov jle mov test pop (bad) lock lret mov mov pop fdivrs (bad) pop xchg (bad) fisubr sub dec jb cmp repz inc pinsrw sub push pop into je fstpt xor icebp xor decb cmc ret mov icebp fs xor fstl scas jge cmp and daa jg adc adc mov clc data16 test pop scas jno xor in push xchg lret pushf mov jecxz push pop daa mov iret pop rol mov mov pop inc scas and pop inc shrb mov aam pop push dec test add sti aaa je xor mov xchg ljmp xor mov xor or test lcall xor mov test sti xlat sub mov jnp iret popf cld inc (bad) mov add inc add int3 (bad) jmp adc cmp aas and adc inc mov stos xor lret push fldcw push mov xor push mov jae es pop fcoms repz call dec xor ljmp repnz mov repz add sbb xor jg aas xchg scas testl adc ret push pop aad push nop xor xor or xchg out adc jno mov and pop dec std in adc push push out fstpl add sub bnd scas dec hlt sub dec jbe inc scas clc dec sbb push mov std jno lods rcrb sbb push ds add mov pushl aaa imul sub jge add adc pop out jmp sahf jg neg pop mov out adc data16 push xchg and test cltd adc xor in xchg mov aam jg pop (bad) incl adc aad pop push inc jmp daa mov in jb int3 inc and or dec push lcall add cli jno outsl dec add fstpt inc test or into fldcw sahf add sub dec in fwait test lcall test sub push cs not shl add mov dec jnp inc pop not jns aas int3 movsl mov xor inc push and xchg pop jecxz aam push or loope xchg rcr ds mov or out repz test mov ds sbb cmp movsl es scas inc adcl pop jno data16 or cld stc jns leave push jns popf flds jle pop in imul std rclb and xor cltd xchg adc jl push mov ds lods lea inc pop pop scas (bad) movswl mov jns jae sub cmpsb fs mov popf int3 rorb lock mov add loopne inc sub pop idivb cli cltd popf test pop mov lea leave sub enter add cmp inc out xchg sbb sub mov pop or sbb adc mov cltd push jl xchg rolb into je gs fstp das xor pop sarl pop push imul or popf push mov hlt mov ljmp stc inc mov imul or insl mov mov mov (bad) pushf int push xor pop mov (bad) mov adc add pop lret pop jns jmp mov fcomi or pop mov mov loop (bad) mov adc imul sub cmp into lret jae pop (bad) sbb loopne lret imul mov xor aas out sub out mov call lret pop scas and stos mov sarb inc and das dec mov push loope das jmp pushf fdivp daa jg in sub in pop xchg cs aad leave and sahf inc loopne or les xor ja inc imul jno aaa fwait jge ja (bad) cli test mov add in mov adc cmp add (bad) mov jbe jnp mov and sub rorl out loop adc and (bad) dec pop cltd lea mov mov subl fsubrs daa ret dec lahf dec pop pop mov cltd shrl test repz push cmpsb sub sbb xor or out or inc lret pop sbb push out push (bad) sti daa or jmp ret rcrb push (bad) daa sbb jmp popa out out sbb rcrl jnp xor (bad) mov xchg sar jle mov fstpt add movzwl jne and mov and icebp loopne xor xchg push sub sarl jo test or sub std xor cmpsl cmp xchg and mov dec mov pop fsubrl je jb cltd lods imull rorl (bad) cld xor jg icebp aam mov dec rcr add out ret movsb gs sub fldenv xchg imul and push lods cwtl sub lods js pop pop sub cmp mov outsb test loop cld mov mov and lret cmpsb xchg ret sub mov xchg stos call cmpsb out fsts push adc out fs rcrl sub cmp push xlat xchg xchg jnp cltd in and das rol call or mov pop ja adc jg mov mov mov daa (bad) jne fsubl les mov incb ss shlb je dec jmp popf adc push lret popa ss cwtl std xor xchg jmp inc lods cmp insb cld ret jmp and clc push rorl test jge ret xchg push pop bnd rcll sti or mov cmp push jmp and lret mov pop push fldcw imul jmp icebp adc das pop pop dec inc outsb mov mov repz movsl imul xor cmp je arpl sti xchg jmp or jmp lahf dec and mov and pop cmpsl inc cld and repz ret aaa pop xchg fidivl aad pusha cmpsb jmp divb bound (bad) lcall xor (bad) sub xor xor dec into ficomp jmp push xchg adc or push xchg hlt mov pusha xchg and adcl out int3 fs adcb movsl repz cltd daa (bad) xor and mov mov or cmp mov movsb sub add mov cld out (bad) daa (bad) (bad) das add cwtl or sti sub popf or aam imul rclb xlat loop rorl or (bad) jnp xor or add mov push push or jns mov push push lds mov xchg (bad) repnz add xchg ret test push push xchg imul repz loopne jmp add fsubl imul bound (bad) jns pushf mov add fsubl (bad) dec sub fistpll cwtl roll (bad) mov mov pop pop leave mov in orl cmp je int3 in pop shl sbb (bad) sub fnstcw fucomi add arpl fistpll add and mov jne lds mov adc or xchg adc clc popa jl shll pop ret push mov enter dec (bad) xor push inc out (bad) dec lock pop enter mov add mov pop jle pop lock mov shrl and fldenv ds sub movsl dec jp imul cmp and xorl xlat and add frstpm(287 add xor mov add dec pop vmovshdup pushl in rcl orl repnz and mov (bad) xor mov clc cmp outsb dec insb leave (bad) dec or (bad) xor fnstenv mov cmpsb out mov not sbb js dec (bad) lods es pop aam lret sbb into das stos sub ret gs lock cmp dec call je cld cli xchg mov xor ds mov outsb mov jl adc scas jb (bad) jl add jbe imul cwtl pop imulb dec orl jle mov cwtl mov sub pop mov dec lods pop and negb adc mov ret xchg xchg add enter mov out sbb cltd xor stos mov (bad) mov push das and (bad) fmulp jmp in inc or add iret in pop sahf push (bad) decb mov test negb mov add push pop sub or adc (bad) fldl cmpsb or into pop (bad) jae add cli xor enter sbb and les inc cs call and sub aad mov xor outsb popa iret xor inc popf sub cmp mov std push xchg jecxz dec mov or data16 pop lret loop adc jmp xchg imull push call jmp out test mov dec mov test int jnp mov xchg or dec pop xorl daa repz mov pop lcall fneni(8087 iret sub jae pop add pop add mov mov xor out ficom aad inc ret jl rcrb dec inc aaa popf movl push mov sbb mov into and inc fldenv (bad) ss test xor stc pop out cs imul add or inc sub fisttpl mov jae addr16 push add and test lock mov cmp push pop movsl scas out sub or int3 mov pop sub xchg gs push aam push dec out lret push and inc or mov fs xlat or aad popa mov mov mov xchg ja mov jg nop adc repz dec les ret xchg mov cmpsb mov out es stos sbb mov nop or dec or iret jnp add push divb mov lock xlat ja jae push flds cmpsb movsb or repz mov icebp lds cmpsl push inc leave ja pop xchg adc jbe sub loopne jne loopne jmp (bad) lcall pop inc dec jnp push mov dec aas aad loopne or lcall cmp mov out jcxz je dec insl xor cmp pop pushf mov cmc jecxz mov sub jno ret and (bad) mov ret adc repz movsl ffreep sbb nop or xchg mov adc mov xor mov jne scas pop push mov andl mov adc test je pushf (bad) mov repz dec imul push pop outsb push xchg add (bad) mov fucom sub jl sub add pushl sarb adc cld jbe lret xchg dec jbe mov dec and sub mov push mov jno das cld out adc sbb sub cmp or cmp nop ljmp add xchg test dec lods xchg xor (bad) je in lret je ret pushf or rorb loope xor xchg cmp push xchg inc xchg std cmp sub cmp mov (bad) or xor sub mov call inc data16 mov notb repnz xor dec mov cmp xchg mov arpl or sub cmc pop xchg in mov push mov dec sub icebp jmp lds inc cwtl jbe popf into sahf xchg dec and mov mov pop movsl inc mov dec sub add rolb (bad) mov cmp test xor mov and mov popa wbinvd repnz push je (bad) xor mov jg repnz push sbb or or mov out gs sti adc xchg stos in lret xchg pop notl rcrl cltd imul lret sarb sbb ja cld (bad) mov adc adc jge sbb mov mov and pop push jecxz dec out das jmp jbe idivl stc bound cmp mov pop xchg and sbb mov out sub or inc roll sub pop mov jmp stos ljmp (bad) and das repnz pop movsl jnp adc sub cmp (bad) jb fnstsw shrb icebp pop adc pop lea sbb mov xchg lret dec dec mov xlat inc cmp add aaa lret pop iret test mov or xlat cmp lods inc dec (bad) or sahf insb pop ret add pop testl les (bad) or out inc movsl dec or xor fistp (bad) repnz add xor xlat mov mov push arpl cmp xchg lods dec loop stos add adc sub pushf xor dec sub mov arpl iret pop inc test mov jae (bad) push mov loopne pop lcall in fldt clc cs rep pop and cmp mov fs cmp sbb loope test sarl push jns dec jbe popa shr movsl inc fdivrl jb mov repnz cmp and mov or push fmull mov adc ljmp xchg mov and ret (bad) xor (bad) fstl or mov insb xor out stc hlt push push scas out jnp xor movsb dec nop hlt fnstsw adc arpl (bad) dec add pop ss sbb scas dec testl xchg and sub xchg mov fidivl lds inc mov cli xor je test test sub lret push push lret shlb or (bad) cmpsb jecxz negl mov mov scas mov push sub mov inc int mov mov insl and mov push stos in cmpsb fs dec or push mov movsl push scas (bad) xlat fsubrs mov xchg add and adc jnp lods popa and mov cmc dec push test cmp dec dec stc xor add xchg testb test out mov jle cli lods (bad) xor loop xor (bad) imull fidivl mov test loope sbb cli lret fildll ficompl dec in mov mov (bad) cmpsl shrl hlt movsl or (bad) loope pop add out inc ljmp mov mov fwait jle lret pushl cmp mov sub notl xor sbb popf notl fs mov push xor es test shrl push shlb cmp cltd sub adc mov ja inc iret adc and loopne adc sbb jg mov jmp adc les and mov in fbstp repz add mov lahf push adc stos sbb (bad) cli fidivr cli mov divl sbb negl sub push push aam imul lock enter (bad) mov pop jge jb add and hlt sbb dec test mov add add adc adc je (bad) jecxz xor push pop jl pop into mov (bad) mov iret xor jns xchg and push pop fnstcw shr call pop pop xor ja pop flds test sub mov jge nop lods dec mov jmp and leave pop add repnz inc push sbb fidiv xchg push aam inc (bad) stc xchg sub je mov loop (bad) or dec adc adc popf jne shl inc popf push dec mov test adc iret sub stos sub and xlat mov out mov add adc cwtl sub lcall sub rorl dec cmpsb fisub xlat out mov jmp jnp or sbb call or jbe daa lret add insl das dec mov push fild in mov lret jmp jns cmp les scas gs (bad) fs mov xor mov pop iret xchg into lea hlt aas std popf xchg adc xor out cld cld jo sub and pop bound test xchg xor inc xor std cmp lahf cmp lret xor repz xchg imul lret add sbb adc ljmp pop jbe sti dec dec mov mov jne jnp dec hlt xchg leave and jnp cmp jne jns mov in leave pop aas popa repnz outsb push mov or lcall jne lods shlb push mov fsubrs lea fcmovnb popl shl mov (bad) std mov lahf jae lods insb clc dec fdivr push xchg mov push testl sub sub jns les mov dec ror sub loope shrb adc pop test dec xor ror add mov (bad) call cmc sub popf or and xor in mov fdivrl jns mov add add mov and out mov dec mov or pop jae or dec fidivl adc and cmpsl xchg mov push js inc inc out test mov push mov xor add and ljmp clc jno jp inc les icebp cltd inc aas or inc iret sub sub cld xchg pop es sub imul jecxz loope into daa jne xor test icebp ljmp mov jno dec movsl loopne mov shrl push loop popa pushf mov stc into cs jno test out in lods lea lahf fcomp mov (bad) mov xchg or sub out jle jmp jae lret push pop les jb xor add add push add or aam pop sub mov pop imul ljmp je sti mov aam movb mov mov syscall adcb mov pop mov and popa inc out add cli cwtl fwait setne mov jp sbb fildll sub jg mov or push dec or push fdivr and fyl2xp1 imul test sbb test cltd lods fdivrl pusha bound aas out popf mov mov pop adc jb ljmp in cmp mov shr jmp (bad) sub das xor iret and pop lret orb pop sti mov jbe xchg out dec mov xlat (bad) je jmp jns mov xchg jmp pop mov xchg dec js adc mov mov in and cmovp cmp or or adc sub aaa or add icebp fsubrl inc shl inc adc popa xchg leave pop xor (bad) mov adc jbe and push repnz mov dec je dec dec sub sbb jmp and inc (bad) negl repz jg hlt mov ret stc pop xlat in cmpsl fwait dec movsb movsb jmp fidivr push or mov scas (bad) repz dec ret not ret push inc inc and push imul fist leave or mov jnp push test jmp cmp out lret js mov jns movsl pop out popf insb adc mov mov ljmp jbe dec jmp cmp and sbb popf aad outsb add fildll or or sub jg mov push fsubl add sub pop cwtl out inc cmpb or bnd cmp fdivrp push mov mov ret aas fildll push lods xlat mov xor mov sub out push add pop mov iret lahf pop and push mov ds (bad) scas ja idiv stc cmp push sub jmp stos pop fcomps mov in movmskps bound adc roll clc dec xlat mov scas xlat pushf cld icebp popf add scas popa ret mov pop push idivl cmp xor call loop not lret dec roll push daa mov repz sbb dec mov adc mov xchg pop inc lods pushf mov icebp add test xlat mov pop xor stos mov mov pop out into xchg fstl dec lahf pop pop into mov mov testb jnp sub dec les in or push addr16 or rolb lret call (bad) sbb jae ret outsl call pop je cltd mov scas adc scas mov dec imul inc pop mov and dec push repnz xchg mov xor add xor push adc and lock push lea mov sub xchg cmpsl fs lret cmp dec mov pop test sbb mov fwait sub inc bound dec xchg dec xor cmc jecxz xchg sbb or mov add imul mov (bad) lret mov negl jmp xor inc cmp lock or push ret jne inc (bad) fdivrs xchg inc add ffreep xor mov lock push loopne inc test (bad) dec sarl scas sarb iret popf adc pop dec and and insb cmp ja std aas in into or xor jbe (bad) fisub xlat vcmpss sub push stc mov dec fnstenv arpl cltd push test gs adc shrb jne lahf cmpsl push repz jg fimul dec sbb mov dec (bad) xor jne push push sub jns mov inc cmp jecxz aas xchg mov out repnz xchg orl xlat fsubs fisubl or repnz add jle fwait cli and imul movsl data16 rcr movsl les sbb sub call cld cli movsb lods sbbb cmp push cmp ret aad xchg mov add pop cmpsl pop xlat xchg out mov lret jmp jo and idivb push loopne fstl dec loope cs xorl fwait xchg stc pop cld pushf push lahf jno inc rorb pop sub fstl sub cmpsb (bad) pop xor aad mov xor out push sbb sub push scas pop pop mov xor mov mov enter jne ret not sub and repnz lds add mov fcomps inc push pop mov adc cmpsb in ss into pop imull pop dec xor push mov in mov and jle andl push (bad) call je cmp inc enter arpl loopne pop sub add (bad) movsl (bad) sti xchg int sahf mov nop jmp or xchg fisub push dec fsubrs fisttpll push cwtl out (bad) (bad) testb lahf sub or in push dec lods xchg roll mov (bad) or mov xlat inc push dec scas mov xchg fs enter lret mov sub push pop sti cltd xor inc mov xor ja xchg push mov enter in inc shl xor dec jmp mov mov mov xchg std and pop mov and or jmp add out sub das stos push and push xor (bad) mov (bad) mov outsb (bad) mov into (bad) int mov dec scas sub add pop adc js dec out mov dec jne lock icebp dec sbb (bad) or mov or gs sub mov mov popf sti pop or and test and adc lds and mov dec mov scas loopne add sbb in (bad) jge out mov mov iret sub out sub pushf aas stc jmp cli out popf xchg jp pusha and sub add inc test imul xchg test les fucomip cwtl cmpsb iret mov mov (bad) jne pop test jg lods imul loop pop adc pop flds pop mov sub cmp and aam stc lods mulb ljmp fcoms mov jb cwtl push jmp and mov sbb push repnz jl adc sahf stos xchg stc adc xchg xchg (bad) int3 js popf out push decl pop in mov xor adc mov inc imul sub xlat sbb xor fnsetpm(287 cmp inc jle in mov cmp sbb sub lock add (bad) push lds jecxz sub inc sub sti mov daa fistpll test cli mov adc add push and add and sub imul pop mov (bad) cwtl xor ret push aam ret decb mov stos into outsl daa pop fs loop jge push stos inc and cmp or loope cmp outsl sub movsb repz test push movl mov sub mov mov and leave ja cmpsb mov enter call adc mov mov cmp mov mov sub adc inc sub cmp push and imul repz icebp jnp mov mov lds add jae lds outsb xor sub idivl test jmp imul mov or push add dec mov cmp sub sub ljmp jns or pop pop jmp ja daa xor rcr push outsb pop xor (bad) lcall test xchg mov and xor cmp mov lret cli dec mov es (bad) scas lret mov cmp and (bad) icebp sub testb das (bad) je push sar mov inc inc out and pop lret (bad) xor divl std push popa ljmp push mov movsb pop negb out pop sub dec lret xor fdivp loop push insb dec push add and inc cld mov or lret roll rclb mov cmp stos mov jbe sbb aam sbb ljmp dec rorl ja adc xlat ljmp jmp mov lahf adc mov shrb mov (bad) out lret fsubs and mov dec out cmp add mov stc test (bad) fistpll clc ret aad sub cmp ja ja std lods jnp imul mov xlat cltd push mov loope jo hlt mov or push (bad) mov sti jmp lea adc rcll jno sub cmp mov sub inc mov and cwtl mov pop lahf xor pop ljmp stos cmp sub mov or shll loop jbe in push enter inc into inc mov sub xor jecxz inc shrl mov mov jae stos xchg sbb repnz ds setbe test jmp adc in xchg in sbb movl mov popa sub xchg mov mov cli enter (bad) xor xor sub cwtl lcall push outsl test and push sbb rolb dec (bad) outsl push loop iret (bad) xor push dec pusha pop sub or ljmp adc xchg std mov fnstcw dec sub xor arpl and (bad) mov xor lret add sub or mov aas fildll cld aad mov or imulb and push js ss push sbb mov adc fiaddl jbe icebp pushf xchg cmp cmpsl rclb pop mov push into ret add add or mov and jl sarl iret add loop dec test adc aaa lahf adc mov xchg (bad) fnstenv mov (bad) scas cmp fsub mov dec popf jmp adc push and cmp cs lret mov fisubr cltd inc (bad) loope dec xor sub and sub movsb sbbb jne pop aam jmp addl lret pop lds sub mov xchg mov xlat in or xor pop lahf push ret mov and sbb lret lods imulb cli sub fldl imul gs and out into xchg cmp jo pop out stc xchg pop push sbb cltd push cmp rclb repnz push rcrl flds mov sub decb loop (bad) subb xor repz daa cmc add pop pop or xchg mov xchg push sub mov cwtl mov sti push mov sbb sbb mov pop cmp int fnstcw mov aaa scas bound testb push xor leave out lret pop jmp sub pop jp mov push add leave and inc xor repz adc xchg cmp sub sbb push imulb pop mov outsb sub or addl jmp test xor mov cmp iret jmp pushl jne rcrl insb mov ret enter hlt sarb xor aas out js pop lret lahf push (bad) mov sub xchg add stc mov cmp pushf cmp pushl lods jbe scas (bad) push dec and mov test sar shrl adc fisubl lret cmpsl or or xlat addr16 call mov sub fisttp repnz cwtl mov xchg jecxz mov and fs pop call jl in lods sbb or mov sar xchg enter xchg bound cmp test add add pop xor mov icebp shrl pushl push sub sub cli push jl rcrb mov icebp shrl or aad mov sub jle outsl and (bad) dec iret loop push or repz lcall sarl sahf xchg ljmp mov ret loop cmp mov pop adc test divb lds mov push sbb popf push xchg inc mov ljmp (bad) jmp push xchg test dec ja pop sub dec stc inc jmp xchg xor cmp xor and and xchg cmpsb mov jb leave mov cltd sub xor add sub lret out add pusha (bad) insb push stos xor (bad) ja test sarl cwtl xchg aaa scas push cmp add das and nop or sbb inc sbb xchg dec enter data16 pop outsl insb and dec sbb test (bad) and addr16 push movsl push pop sti test mov xchg mov mov adc ret and jg xor mov fs push jo adc fs sti add out lret in outsl pop leave (bad) jns imul ja push mull fwait data16 dec mov cli dec lock out inc inc mov inc mov inc pop inc imul sub hlt into stos test (bad) in pop dec mov add ret mov push xchg (bad) (bad) in add sbb bound jmp fsubl xor out jl push jmp sub pusha mull inc shll add mov and stos lods xlat mov call movsb pushf xchg xor pop push cmp cmp jl add sub inc or xchg loopne (bad) mov hlt sub sahf inc imul sub jecxz jo inc dec jge clc adc imulb repz pop sub cmc xchg lcall xorl pop in stos jmp mov mov mov pushf fldl sbb jns stos xchg movsb sti into add lret inc or jne sbb call jno movsb pop and xor aaa (bad) cmp mov pop cmp in and insl lret mov and xor in or ljmp and adc add fcomps pop jle or fnstenv jle mov and or pushf jp and sarb mov negb pop shll out or mov shr and sub out adc dec and (bad) jne enter lock adc fwait dec and movb mov or fldt inc push jo sbb push mov daa iret push fldcw (bad) xor sub jne fdivrl mov mov fidiv jns dec mov mov iret push mov into (bad) xor xlat je,pn ljmp lret or pop xor mov or mov sub pop inc and notl add mov and pop das xchg and clc push movb addps leave ljmp in cmpsb sub cli xchg add mov lret ud2 jnp dec inc mov ficoml and lock push stos in and rorb jbe and xor (bad) sub jb add repnz mov dec enter xchg ficom jecxz pushl mov xchg in xor lds scas or sub dec leave ja jnp movsl (bad) (bad) jbe leave jg mov and and xor xor jo loopne and pop mov mov sub mov jle xchg adc xor xchg das add push insb xor sub push iret icebp dec leave ficom aaa sti mov jg dec pop popf ja mov mov leave sbb sub fnsave xlat xor stc xchg sbb mov and and sub mov and out in std lret sar cmp sub dec xor mov cmp sub dec subb xchg dec dec out mov push and jne lea (bad) jg sbb (bad) mov ret lret xor test fstpt or and jge mov stos ja aam in cld jne sub scas ficompl add fs dec or mov or daa and pop (bad) pusha test or jle pop mov daa (bad) repnz (bad) cmp xor ja jge repz adc lods mov xor xchg mov bnd iret xor mov pop out or mov xchg mov mov imul xor cli popf (bad) xor pop out and add sti mov adc and mov fadds push sahf or (bad) push xor sub jp,pt (bad) incb pop mov sub jmp mov repz cmp std popf std mov adc decl mov mov popa or lret sub push xchg pop mov les mov call cld (bad) sub mov or lcall sub out lret mov mov sub dec xchg jg pop ret xchg mov mov test gs jmp cmp test dec data16 mov inc idiv push jno or add jmp adc inc das xor addr16 or ja pusha xor jecxz or xor hlt pop pop cld cmp icebp push adc ret dec daa jo mov or leave sarb fld fcmovu movsl pop cwtl mov mov (bad) ret xor in out jl pushf inc imull dec sti pushf scas dec scas xchg lret inc jmp (bad) and mov cli mov (bad) (bad) mov mov ret jg adc sub jns xchg movsbl sub add idivl adc lret loope mulb pop cmp dec lret inc push cmpsl xlat cmp rcrb jle mov mov ja mov and cmp sub icebp fbld in scas (bad) xor sub xor (bad) hlt and pop ret sub loop jge sub aas sub push jbe jae es movsl out dec cli xlat pop and sub shrl xchg mov and mov ss or jb pushl cld or popa data16 jp pop in and adc mov xor jmp movsl and repz sub and xor or mov adc jnp mov or add mov scas xor xchg pop rolb in mov and outsb sub ret test js bound pop cs sarl mov pop adc fnstsw pusha ret xor jmp mov loop loop shlb (bad) xor ret cmp dec mov jns mov add fcoms push add dec orl adc sbb cmp insl push insl ret aad mov (bad) xor push cmpsl and push mov lahf pop pop or pop rcrl into andb mov xchg jmp xor pop repnz sub fwait or dec jne lret xchg push movsl inc mov pop cmp sbb or (bad) fcompl and popf ret mov jnp movl cltd in and std stos lea ret imul xor sub push add js bound imul or xor lds xchg out sub adc sub ret dec pop xor push sqrtps sub (bad) push adc push ret mov in mov (bad) ja lret in xor mov ljmp push dec mov xchg stos int3 in xor outsb and lock aas int cmp or add or out aam pop and iret and adc xor in mov scas mov out mov out xor pop xor stos (bad) ljmp (bad) ss dec je jb dec fistp inc or xchg fildl pop cmp daa push xchg mov sub push das shl sbb ret fild cmp leave jmp stos and ds loope outsl mov addr16 fistpll jns add std fdivs (bad) and cmp cld mov gs (bad) je mov push in or (bad) xor leave jne inc dec negb or mov test cmp sbb jge dec call and mov das repnz push sub mov sub movsb ljmp leave movsl ds pop add pop icebp cld push and mov fisubr xchg (bad) push pop lock and das jbe push sbb lcall push sub add pop icebp cmpsl loope ljmp adc mov jmp pop jb js mov sub and dec fistp lahf sbb shlb in lods int3 jp repnz (bad) xor stos mov (bad) dec add fstpl dec jge clc call xor or xor mov fwait (bad) lahf push mov pop (bad) ret out add (bad) std add imul call add mov test pop mov das pop call jmp mov data16 dec or sti mov dec out sub mov add mov scas cmp sahf cs in cli mov mulb popf jle push sti fisttpll sub test movsb test xlat cli bound push cld and fisubr inc inc mov mov mov push in add into mov or insl daa les add mov xor pop fnsave push dec dec lock dec xor jmp pop xchg mov mov mov in push mov fdivs dec je cs and xchg jge popa inc xchg dec pop dec (bad) rclb xor fdivrs repz cmpsl fstps in test scas lret xchg inc sbb or xor js add and sahf es adc and icebp scas add mov xor daa dec pop aad aad outsb dec dec aas movsb movsb or divl daa adc push jmp fcmovnbe jo pop cmp pop pushl add popl adc xchg pop icebp pop xor stos sub pop cld mov nop add dec call sub or les dec sub cmp jne divb adc idivl or dec pop add push test adc sub icebp pop ret mov sub movq jecxz adc adc mov dec out sub loopne dec fcom dec inc std pop dec in xor and les sub add pusha ljmp rolb xor sub add pop pop jns inc add mov (bad) repz movsb out int push jno sub cs dec test mov jcxz test cmpsb mov mov mov mov aas sub pop idivb fs mov cmc in mov and imul aam jo mov enter adc add (bad) or stc mov inc pop mov add in icebp in jns dec push sub pop fsubs push pop loope push ret pop fnstenv (bad) imul dec fsubrs mov adc mov test rol dec movsb inc scas popa mov sbb push shrb nop jmp fidivl inc repz cmpsb sub je ficompl roll mov stos mov sub pop cmp or pushf and and jmp inc xchg (bad) int adc in jecxz pop loope dec xchg mov xlat jns insb adc adc xor insb mov ret push or (bad) and repz dec cli int aas loop sub dec jp and dec mov xlat sub mov in call pop or inc and test or xchg cmp fdivl xor jmp out adc xor out pop stc xor mov int mov jmp pop call sbb (bad) das lods pop nop jp mov ss f2xm1 inc lahf mov xlat jns dec adc mov pop lret mov pop cmp loop xchg jl rcll xchg jo adc sbb xlat xor or repnz fist (bad) adc mov sub xchg out rorl repz pushl out push jp dec inc adc fidiv xchg jb cli push mov cmp mov xor outsl je push enter nop int push sarl insb push les ret stos xor push jnp push inc inc sti xor (bad) jno lods xchg mov jns leave add mov or in cwtl add pushf xlat (bad) fidivrl add push insb mov jle pop ljmp lods inc lahf adc mov and mov push cli es rol decl jae xor cld outsl leave lock push std mov mov xchg jmp clc pop push movsl fnstsw popf mov gs jbe cs mov das rep sbb or scas cmp lea call adc xchg sbb cltd xlat scas rolb cld push sub mov (bad) cmp jmp and dec cmp jae jmp int ret jbe enter sub imul divl test mov and scas xor fisubr mov or fldcw mov sub rorl cmpsl and cmc dec orl jmp sar mov push xor leave les iret ds (bad) add lods sub std cltd aad aas jecxz test imulb leave outsb rcll xor jmp jns mov and enter pop (bad) lods icebp mov pop lds dec xchg out and bound and jb xor sbb pop mov mull adc popf ja insb sub imul ljmp dec dec insl inc cld out push xchg das mov daa negl das and (bad) push call mov pop mov push or sbb pop fcomp and sub jp mov push inc out sub std and adc sub add mov pop test mov (bad) mov imul dec mul in mov int3 dec jmp mov and out sti sub popa push out xchg mov adc sub (bad) fidivrl inc lds mov sub lods jmp jno and jns mov adc ja rcll and or imul dec sub imull out mov adc fisttpll cmp push mov push push dec or xor rcll (bad) or inc adc pop and inc mov stc pop push and xor cmp jp lods xchg mov aas inc mov pop js add ss adc lret outsb sub and test rcrb sbb lods adc aad push jmp insb and lret fist cwtl xor mov hlt imul cs add pop addr16 lds add push cmp inc sub or jne ljmp mov ljmp inc fdivrl enter movsb cli in xor xor nop test pop sub cltd cld mov inc insb in jo sbb clc outsl ret (bad) rcll inc xchg inc dec outsb mov enter sbb mov int3 scas or scas sub adc mov divb xchg or xor xor xchg out and iret cld jns push out add fcoml dec dec mov lds ds ret add popa fdivl xlat xor jg inc sub sub mov lds repz fstpt add push repz mov and sub mov sbb and sub negb movsl pop pop sub aad mull xlat lds dec dec inc add test jmp sarb add loop add in push call cmp in push lods les cwtl xchg push adc push leave repnz int adc into and adc idivl or sarb data16 pusha xchg cltd sub cmp lock xchg sbb ficom mov and int3 cmp push repnz add lods xchg imul lret aaa daa add ret das and xor call jg mov cmp sahf daa mov mov mov imulb cli adc in mov ds jmp enter sub (bad) icebp stos test cltd test or mov popf mov jns leave ja dec and add pusha sbb (bad) mov std dec xchg popf fistp nop int xor je (bad) repnz jo std gs mov mov sub sub popa and out daa ret mov pop mov mov lret and jb and jae icebp mov jb lret sub inc add jns mov repz inc shlb out dec adc inc sarb in push fcmovu divl push sub jmp das test and jmp incb cmp (bad) test lds and mov sbb loop repnz xlat (bad) xor mov imul lret cwtl arpl add mov xchg enter pop (bad) sarl xchg das popf mov (bad) out decl or and add rcrl xor push push gs (bad) repnz shrl push sbb ds add scas xlat in or in fldenv pop movsb out rep das negb xor lods in sub or jae sub bound aad ja and inc mov xchg sub (bad) dec lret (bad) imul inc dec lret repnz popl repnz gs mov inc jecxz mov iret in clc xchg stos je and mov jbe jns sub push popa shrb loop (bad) je test (bad) inc xor retw nop add mov aaa sub icebp bound mov icebp mov das into fiaddl xor and movsl dec inc fiadd push xor pop push inc in mov sbb xchg inc pusha loop lds mov sub and adc jnp fcoms mov xor push fldt rcrl ret or bsf adc outsl mov add add push pushl pop (bad) test js mov mov push dec aaa mov mov or outsl dec sti lret cld inc shrb sub sub (bad) mov out sbb adc push out mov mov fcomps xor xor add xor inc lret dec leave mov mov loopne cmp sub icebp sti out dec mov and adc int3 cli push (bad) scas mov cs out (bad) into pop mov cld xchg or nop leave jge in clc (bad) push add jmp pop lods lods sahf fstps pop inc jne xchg sub push mov xor pop pushf jmp sub div mov pop xor (bad) jge (bad) das cld xchg leave pop dec sahf adc and cli cmp cmp jo adc sbb and jecxz and xchg movsl clc shrb and inc mov push out cs out jae add iret sub sub in xor (bad) sub xor push pop cmpsb shll popf jmp dec cwtl sub out sbb movsb mov mov push lahf insb jne repnz fbstp or clc push sbb xchg sub pop sub sub xchg lea mov adc xor cli (bad) mov mov add xor lret xor lds sarl jg xlat inc mov in fisttpl sti xor testb aad aam jb mul gs mov xchg mov ljmp cmp pop (bad) shr mov fdivrp or (bad) ja test dec in jmp sub cltd xchg testb test (bad) mov aas sbb lcall push push aas and cmp fnop add daa xor cmpsl mov fiadd out fdivrl rep fnstenv push mov mov imulb rep das pop mov jbe and and pop jg jo aad xor je lahf jbe jb pop adc or sbbl fstpt and fdivl jb mov stos sub cmp jo inc xor mov jl inc insl dec flds aad loope (bad) lock or fmull mov pop xchg lcall xchg add xchg sarl xor (bad) mov fsubrp jne sub lods cmp scas and xchg fmulp sbb test pop xor lret leave push xor shlb lds jne sub ljmp sub cli xchg mov andl push sbb (bad) dec dec outsb push (bad) lea mov into (bad) or fcmovbe mov imul xor call xchg loopne or mov cmpsl push enter sub dec xor jecxz,pn mov pushl sub popw stos fcoml or or (bad) mov sub mov push movl (bad) mov dec sbb push sub xor pop ret xor jle outsb xchg sub lods mov mov (bad) cmp xchg mov mov and push adcl test add testl hlt adc sub and in mov adc dec or pop xchg push adc dec ljmp inc (bad) popf ja push cmpsb cmpsb push sub lea and (bad) jmp dec fidiv mov cmp mov int cmp push outsl (bad) adc (bad) cli jmp inc addb enter clc xchg sti imul jne and lahf and stos jne test lret stos mov pop sbb xlat push js popf lahf mov adc xlat (bad) (bad) sti push pop sub inc pop mov mov mov cld and lods jle push jo loope jle mov orl pop js pop in out movsb add out cmp movsl push mov and or cld cld (bad) stc and (bad) dec das jp pushf adc lods mov cmp cmc mov lahf ret push lret mov or loopne xlat test fxch fisub cld inc lds lret test fsts daa into push pop lret aad adc sub das rcr inc mov push repnz pop icebp inc nop jmp imulb repz ljmp iret mov inc movsl and sub dec mov add xor jmp push sub xor or negl mov mov cmpsl iret (bad) sub inc sub imul lcall mov adc (bad) mov mov xchg pop push xchg popf push aaa inc xor std in xchg xlat sahf (bad) popf sbb iret or sbb (bad) mov or sub out push out repz dec xor iret ds out rcrb mov push add movsl in repnz xchg decb mov lcall (bad) bound push push xor mov (bad) stos mov or xchg (bad) xor roll clc sub inc inc (bad) cmpsb pop jp clc mov ret and insl inc push sub mov (bad) mov cmpsb movsb dec leave shrl fwait loop dec into dec or xor push test cmp ret enter dec (bad) std pop xlat out mov jbe or cmp mov cmp out adc mov dec fldl icebp dec mov jno mov repnz mov jg pushf pop andb jl dec sub ret sub dec xchg mov push adc ljmp idivb stc insb sbb add sbb mov jnp adc scas mov (bad) jbe jmp xchg pop mov sub shll add xor out mov shll xlat mov sub xor and mov les fstps add dec and push xor mov xor xchg hlt jns xchg cmp inc cltd (bad) fwait dec or jns xchg fidivr (bad) mov out pushf loopne daa or shll loope loopne sub int repz jge add lea xor stos icebp xchg push cmp popf test add pop fist mov cmp and mov pop mov (bad) leave call fidiv push dec test mov inc out mov jmp leave sub pop mov fsubr and or popa xchg xchg and cmp sub sub sub push cwtl leave sub daa mov ret fild pop outsl (bad) scas repnz mov mov fadds lods out cmp xor iret imul sti lds or ljmp gs daa fcoml (bad) jo or add add mov or pop sub push xor fist out or (bad) jne jecxz daa sar popa add fimul xor pop dec jecxz push jb out outsl stos cmp and cs aad stc pop fiadd push out je ljmp cmp dec mov mov lds iret dec mov ja mov out rorb add push push (bad) pop shrl icebp jecxz push dec inc push lret das ret pop int3 cltd mov gs pop call stos push rsm pop ja lcall adc test push incl int loope cmp dec cli mov ss in lea inc xor fstpt mov lcall cwtl xchg add mov mov xchg mov or out sub add push mov sub pop xchg cli jb pop pushl in add mov je out loop xchg ljmp dec fcmovu xchg cli (bad) out pop xor mov gs enter mov inc mov sub inc mov jo nop or imul add daa out and cmpsl mov into flds sbb loopne sub mov in jae icebp inc jl push mov sub or and sub lret push out loope insb add lahf (bad) dec imul sbb pushf sub mov xor movb cmp sub insl push mov sub stos xor xchg sti sarb cmp add stc nop aad jl outsl push adc xor stos fadds sarl fcompl xchg push adc cmpsl mov mov std ret and test iret adc jmp and push cmp push inc pop sub mov movsb xor pushf aam xchg sbb ret mov dec enter aas xor stos and or std cmp dec outsl mov sahf sub push cltd imull and sarl enter fs push mov sbb rcr xchg or test movsl adc adc gs inc cmc dec jno cmpl mov outsb jno inc pop and and mov pusha sub push cltd out inc dec inc pop test xchg sub jmp sbb add dec push adc stc sub add sub inc test cwtl mov shll pop inc icebp sub sub ljmp stos sub test or sti xor dec jmp mov and aam dec mov aas fs or popf adc xchg mov into or adc mov daa stc jl sub add out or clc clc and pop and (bad) push jl call jmp mov sub lds or icebp mov mov int add stos adc test vcvtps2dq rolb mov icebp xor es xchg xor outsl push mov arpl add testb test jbe cmpsl mov movb out lret jmp jb sub movsl lret mov popf leave jno or clc pop (bad) sahf mov dec psllq or icebp mov cmc bound mov or sbb roll aas adc adc rol shlb sub or fmuls mov rorl push jns dec pusha test sti mov or pop loope cmc pop fistp adc cmpsb or lds sub lods insb and push jo,pt or and leave xor inc dec mov pop xlat aaa (bad) fdiv enter cmp (bad) imul mov or sub pop fwait cmp clc push jnp daa adc inc in sti mov sub test sub jp mov enter (bad) mov sbbl pop shr cmpsl adc and push lretw dec jg push sub adc mov sbb push lret mov sbb push mov test test out xchg pushf dec (bad) popf sub ss cmp or and cmpsl push pushf pop xchg nop in add mov mov fstpl mov dec jo xchg pop adc pop xor int3 lea pop jmp ret mov xor pop inc arpl sbb xor idivl cmp leave xlat gs pop mov aad pop or sub adc mov mov shl cld sub and mov sub inc mov subb lea ds xor xchg aam push mov bound daa jo sbb jmp aas out dec leave adc sti div pop adc das add dec jne icebp outsl sub decb mov aas sub pop lock out out mov jmp sub insl (bad) xor jae mov clc lcall les stos mov jb not xor xor or inc std or stos je jmp stc movsb jmp sbb cmp sub or mov jecxz jns dec push push bound into loop jle ret lds cmpsb inc imul push fnstsw xchg idiv js loop mov out lods jl push xchg mov add inc pop pop push mov sbb iret mov and es into xchg jb fnstcw sub or push inc dec or push fstps lods jbe daa pop xchg fs out fwait xor dec sub push (bad) mov pop test in cmp push xchg data16 es cmp das inc fildl mov lock stc push xchg scas mov sarb fnsave cli jb stos (bad) icebp out add test ljmp push (bad) xchg jmp ljmp xor xor mov pop xor in aaa fst aas pusha mov dec imul ja pop mov sbb cld int3 pop push add mov cld sti push je fs scas lret adc data16 loopne and call add bound aad push add cmp pop jle imul xor jno lahf mov in mov (bad) idivl mov pusha sub xor ds mov repz inc repnz fist repz jmp sub jb adc sub sub and stc imul push mulb cmpsl cli test bound mov ljmp mov or mov adc xlat loope add movb push lods bound mov jp xchg push or mov adc scas mov adc xlat data16 jg into out arpl sub xor jmp pushl jle dec mov or mov fistp stos dec mov lret negb jno (bad) cmp aam mov pop mov push ljmp and jne js adc xchg repz or sbb mov fstps ret pop and repz popf mov ret int3 fdivrl daa sub pop push mov mov jne inc or or cli out ror sbb jge ror imul leave ljmp scas sub sbb dec gs out dec mov fnstsw xchg cmc sbb ja mov xor cmp cmp out dec fcompl mov xor sbb (bad) ljmp fsubl jne mov push xor stc loope jle lods mov in clc test lods cmp ret jge in daa jg xor rcrb movl add lret inc xor or imull sub sub fcmovb and shr cmovle mov ret cmp rcrb inc add aas adc mov daa adc sbb add mov mov sub add or cmc mov or dec pop push and jns dec jb mov xor scas pop sub (bad) pop push or adc sub sub or fadds pop adc mov sahf or mov jge or inc mov sub push das sub outsb ficom icebp dec das je adc arpl and (bad) fnstcw loope jnp jno sbb daa cmp xchg ljmp sub test xor out out xchg in or and mov fcompl sub rcrl inc pusha shrb pop fidiv cmp pop lret add and mov xor mov pop mov pop xchg xchg ljmp loopne negb sub pop lds add xor jmp mov in rcrl mov jecxz icebp adc outsb mov dec daa repnz in lahf mull dec movsb mov mov xchg test test mov out int3 mov mov mov notb pusha sub add sbb (bad) iret inc leave mov dec into sub add mov mov xchg adc jmp sbb sbb push dec mov insl outsb bound add mov mov jno mov gs aas dec lods cld pop das repz pop jno es adc or xor rclb sbb fisttpl (bad) and icebp stos mov cmp test into cmpsb adc (bad) jl in out cwtl push lock inc dec sub popa int outsl mov (bad) push adc jne mov lret inc sub push pop ss aaa fildll push jle adc sbb add adc push mov add or pop xor jp xor and push sub mov (bad) mov daa (bad) insl mov mov dec mov xor aaa cmc push and mov jg xor out xor cmpsl fstpl adc movzbl stc mov addr16 (bad) int ds repz pop jl cmpsl jle pop icebp out data16 mov pushf loope lret js stc mov pop jne mov lahf cmpsb outsb dec cmpsb push inc jmp data16 add jmp sub dec mov lock ljmp push jno insl ret (bad) or jge pusha adc hlt rcrl pop dec or mov xor fsubrs push add cmp and jne das movl mov mov imul dec cmp or (bad) fdivrs dec jb pop ja push and js leave divb (bad) dec test test sbb (bad) sub add mov pop dec dec inc and pop stos cmp sub and xor push test add pop scas pushf std sub xor in popf dec sarl xchg mov mov or lods or or mov lret mov sub fistpl out cltd in in sub jg sub jnp lods (bad) iret into mov decb inc jb jns adc dec out leave pop cmp sbb push or or add push test repnz icebp jmp (bad) cmp rcrl leave add ja xchg dec loop cmc lea sub mov cli cli int add cltd fsts add add inc sub pop sub fs dec add add sahf push push adc das cmc jne sarb int mov scas inc enter push jbe adc mov cmp bound cmp mov push add jle in notl mov lcall loope mov jb and sahf mov in es fst out fidivrl (bad) cs (bad) or adc cmp pop imul enter in call stos sub (bad) dec or rcrl (bad) or push fist scas cltd fmuls sbb inc addr16 push leave mov xor xor xchg outsl jmp rorl adc and sarb int mov addr16 pop mov ret mov into or adc dec mov jle pop xlat test daa (bad) cmc adc lock ret mov xlat test mov cmc popl mov jmp xchg jne xor dec sub ret jno inc (bad) and mov mov or and mov jbe push xor jno icebp in cld fprem daa or push inc out scas in pop mov (bad) cli mov nop jo sahf xor jge test or ret lret inc (bad) xor out and sub stos mov data16 popf jge xorb push test push and lock mov inc or sbb jecxz shlb cmp sbb std xor or popa xchg out cmp sub (bad) dec inc mov mov jge push rcr call and mov into scas sub mov in mov leave push push or and xor lret add (bad) and and (bad) jbe mov adc daa aad repz adc repnz push mov popa xchg subb sti lea cwtl sbbb push aad stc adc xor ds push push inc loope inc push sbb mov add xor lods xor popa push imul xor sarl insl mov (bad) (bad) mov dec std shll jnp sub pop and out fs out mov ret xchg and xchg xchg (bad) ljmp and sub mov sbb push gs scas repnz and sub sub loope popf rcrb sti out jnp mov cmp das fs clc fbstp rorl xor cs mov inc cld mov fdivl cmp xchg or cmc jmp clc (bad) mov sub lock and jae mov clc xchg mov sbb mov dec cli mov imul lcall repz sahf xchg mov cltd xor dec cli mov mov data16 xchg lods jbe clc pusha mov mov fistpl add sub ljmp imul pop mov (bad) stos and and aam fstpl fcompl cli sub push insl mov out sbb jmp mov enter into loop xchg mov jmp fsubs aad mov shl test jecxz fnsave dec xor jmp push pop sbb mov xchg mull outsb int3 xchg ljmp ficoml cmp jmp xchg push mov into (bad) stc mov scas into push das loope cmp sub push sub mov std push mov stc icebp xorl fincstp cmp cld xchg inc repnz lods adc xor or sub push dec (bad) fldenv scas cmp call popf (bad) xor lods call (bad) out or xor pop fisttpll shrl scas pop and js pop cmp fs jmp inc sar mov dec je gs fmuls bound dec lret sub or jmp fwait imul sub ds cmpsl pop xor mov and ljmp ret rorb sub popa (bad) ss mov sub mov ds pop repnz or repz daa call xchg lret push bound mov int3 jl mov and int test ret ror notb icebp leave inc add inc call and cmp pop in jnp insb sub ret cmp imul ljmp repz int jnp push jmp and outsb rclb jbe outsb mov pop jg shlb test (bad) ljmp sarl or cwtl jp dec sbb imul jecxz add xor xchg pop mov lds cli dec into mov jne mov fidiv fadd jecxz iret xor leave jp xchg stos mov ficomp clc (bad) jmp fcmove push push pop (bad) out fildl call mov xor cmp notl cvtps2pd xor fldl push icebp add aad sub mov and scas sub mov push fist and add movsl push jmp or sarl add sub mov stc notl imul sub adc mov jle mov dec in sub outsb lret out fdivrp pop push (bad) repz xor outsl dec jo out and cmpsl nop lds xchg mov ljmp xchg nop ret les repz mov jecxz sbbb pop pop sub inc testl sub call fild xor pop and pop outsl call stos loop lcall xlat or xchg xchg dec add mov mov xchg lret das xor mov mov or movsl in scas mov (bad) jno jmp sub repz sti xchg repz adc scas sub push xchg (bad) xchg inc ja lods push push mov aam imul jno xor ja lret je or xor add (bad) pop push push adc cmpsb popf or push insl insb dec pop jmp or sub xor jecxz int inc jle jge mov jmp jge sub mov or mov or add mov push fisub pop shl dec pop and repnz leave enter cli or push inc cmpsl je fidivrl incl rclb bound aad mov xchg insb imul mov call add and add mov mov adc adc iret pop sub dec into lods (bad) or inc out loop xchg xor (bad) or (bad) shrb or imul pop into stos fdivl mov and mov scas lods sahf hlt stc xor sti imul mov out dec insl xor jns pop xchg mov (bad) testl mov cmpsb loopne ret stos mov xchg cmp js jmp pop (bad) dec pop out push (bad) (bad) int3 push adc daa or fldl dec out jge jecxz xchg clc fwait pop mov sbb adc pop mov add scas leave cmp xchg mov das jns lods xor sbb fdivr leave lahf je jns data16 jns out inc dec je xor stos notl pop and xor (bad) dec xor lret xlat roll and shll lret mov and pop push or cmpsl jg into add xchg outsb (bad) jns stc nop inc mov sti dec mov and or pop test adc and xchg lds scas clc ss jmp mov nop push mov in pop mov (bad) std outsb les jecxz dec pop jne repnz xchg sub inc pop stos mov pop xchg mov into arpl imul pop or (bad) scas cwtl sbb xchg xchg inc sub (bad) mov rorl (bad) ljmp icebp in cmpsl mov cmp (bad) and iret adc mov enter mov or dec sub push icebp dec ffreep repnz ljmp sti mov movsl dec cmp iret sti dec push cmp ret cmp cmc daa jecxz sub pop data16 mov ret xor mov dec out arpl push (bad) xchg lods fadd leave fs ljmp pop repz add out movsl cmpsb and shrb rcl ja jbe or loop xchg add mov mov mov into xor int imul jno movsl adc into adc add andl lods es push jp xlat imul (bad) popf testb fstl mov xor scas pop scas mov inc cmp (bad) or outsb and mov (bad) bound mov jmp cs jecxz pop daa fs sub sub shrb and add outsb int3 insb icebp mov mov push mov xor push push je leave mov cs mov xor test jp or push daa jmp addr16 (bad) loope hlt adc dec into nop into dec iret cltd pop add ljmp ret sub (bad) mov push inc insb jno mov ljmp jle jno mov mov popa scas cmc daa (bad) pop cwtl add mov xor movsb rorb mov adc xchg pop clc cmpsl dec mov daa mov les negl mov cmc in or daa aam pop mov inc cmpsl testb rcll scas jne je push mov pop loop push clc push xchg pop adc ret sub sub sti fistl or xor cmc sub (bad) pop xchg add scas sbbl shll jmp pop out mov inc icebp add cmp fisubr ret sub or hlt xor mov cmc pop cltd push mov jno ds inc pop out lods pslld mov xor cltd imul das cmp jnp add mov fsts mov das push cmc rorb or jmp dec dec mov xchg aaa cmp repnz popf push mov inc xor dec xchg out or sbb lock or les add and loope aas call iret sub ret sub and repz dec mov out push subb test push std das (bad) xchg xchg cmp int3 sub or cmp add fnstenv xlat in cmpsb push imul mov iret and idivl (bad) sub incb xchg mov push mov jbe or mov lret jle int cmp das sub pop add and flds xchg (bad) mov (bad) mov mov xlat adc cltd mov mov aam inc push pop test lea mov and arpl push push add sbb mov and in and mov (bad) xor mov mov push sub das (bad) jl push imul fstps push dec (bad) xor xor int popa cmp pop popa movsl ljmp enter mov sbb dec sub fwait push out adc adc fldt repz fsts bnd push out icebp inc mov mov jnp adc out into add ss xor roll mov mulb jno leave mov pop repnz sbb cld and outsb arpl in mov xchg mov jl jmp mov mov cmp les aaa cmpsb (bad) and mov xchg fcompl dec enter rcll imul jp mov (bad) (bad) cwtl mov xor jmp hlt dec and sbb pop int daa in hlt dec lods fidivrl ja mov (bad) jle push shrl stc sub cs aad fildll xor add xchg push leave (bad) or push inc adc or js mov push jmp adc mull xchg pop insl fs mov ds std mov and jb je in hlt push push shrb mov movsl cmp push pusha stos xor push mov lock out dec movl bnd dec xor (bad) xor test adc xor mov fiaddl or add das mov inc movsb es imul test movsl sbb pop mov (bad) xchg cwtl and (bad) int3 jmp mov push iret xor add das out xlat mov lds (bad) fwait cmp fisubrl cwtl sar jmp xchg pop shll dec icebp (bad) jg decb popa (bad) popf hlt push bound test jle cmp xlat clc or and add push test mov int scas lods lds add fist pop mov sub pop or test cmpsb mov fucom sub cmp jg pushf cmpsl and jmp pop popf dec in add jnp outsb icebp add sub jg cmc jg sbb pushf mov or mov adc xor mov pop mov test push or enter je mov out add mov adc stos lret mov mov out and adc xor cli rol dec out ljmp es out ljmp repz inc cli fstl ficoml adc sub aad repnz imull sub inc (bad) or rorl or mov xchg sub mov into jmp aaa push mov rorl jecxz das test daa icebp aas cltd and fdivrs push stc add xor sti in xchg adc lret mov sub or xor pop loop xchg enter (bad) ljmp xor cmp pop test sub lret imul sti scas adc and pop xor in addl dec inc jo (bad) ret negl push cmpsl xchg std call leave fistp loope int das jmp pop jg in rorl incb out aam pop rolb push sub inc in js idivb sub stos sbb movsl mov jecxz pop adc mov das or sbb das gs jnp sub mov lods lods sub push dec mov dec dec push or and sub inc mov fnstcw mov or add and stos jb fstps and fcomps fdivrl movb dec into adc mov les or ja shrl dec xor jmp es add test mov mov sub lret pop neg adc sub mov test add rclb testl jns or leave mov in fsub test testb pop push or mov xor mov mov (bad) mov mov stos mov add test pop mov sbb xchg ss daa lret repz or stos addr16 imul xchg out iret mov idivb add mov push xor iret mov xchg aad push push and push scas subb mov mov dec shll or lods out adc add and nop jae add shrl mov push inc (bad) jmp pop loopne sbb out lcall add pop push mov add sbb (bad) mov sub out or adc add and jnp sub mov push inc sub adc ret or lods movsl lods jle mov mov xchg repnz adc jle cli jb push add nop out push pop dec addl jge in (bad) xor push cs jp push insl or pop mov pop xchg sbb xor cltd (bad) or call clc adc in mov xchg arpl jge or and pop push xchg add enter sub nop adc lret rorb in dec pop shlb pop or out pop pop adcb aas mov add (bad) jnp call xorl or into scas daa pop inc and mov push (bad) je and mov inc movl sub nopl imul push int xlat jle push add push mov or fiadd jns aas and lcall sahf insl inc lret cmp push add sbb adcl hlt pop add mov movsl push sbb ljmp pop adc lods fs scas pushf mov push push pop jl movb bound clc jns stc cs mov inc test sti inc jb jge pop addl add adc or scas test incb xchg ja mull sub pop mov inc inc mov ss inc cmpsb push dec fs test mov push lods or ficoml fcmovne jge fildll jle xchg add mov cmp fisubr imul dec fstp cmp pop and test jmp xor and cmp cmc leave loop inc adc sar xor and mov add mov ror jle dec xor pop popf pop jle push sub loope out pop adc pushf addl daa divl ds mov fs add gs ljmp insb dec out fimull (bad) xor and sahf dec repnz je pusha mov mov daa cmp pop stos xchg hlt inc in dec outsl dec rolb jnp sub add ja aam (bad) test xor (bad) cmp pop lods mov xor and pop (bad) cmpsb sti pop clc std shll loop (bad) loop xlat imul cmp jl movsl xchg sbb popf sti jl testb sub cmc mov and push add xor pushf mov sub stos xor loop xchg lods test mov ret mov dec stos or repz push es (bad) lods inc xor mov cwtl decb scas xchg cmc ret cmp sub scas add jmp aas fs mov repnz scas jne pop xor dec mov in adc mov icebp adc pop cmp (bad) imul sbb not fpatan movsl out xchg pop test daa add int3 mov mov cmpsl jne bound mov test fwait mov cltd shlb push pop cmpl xor add ljmp ljmp subl xor pushf jle pusha shr lret repnz add push mov daa jbe lods push xor or fcmovbe mov nop movsl inc movsl pop sub (bad) popa jb lock imul pop divl outsl je stos xor iret jge add sbb lea jbe xchg out out lret mov in xor addr16 leave jbe leave jg xchg (bad) pop xor cmp (bad) inc iret int3 cmp ret js cs jmp imul jle pop xchg (bad) imul mull push add sbb (bad) add mov insb call push sarb or inc add and popf popa scas xor adc sti pop shll xlat mov clc and repnz notb dec out cmp jmp xchg and and sub stos jp (bad) cli aam and inc (bad) xor lods daa xor xchg movsb xor (bad) daa lret pop vcvtsd2si xchg fsubs andl leave add into pusha adc cmp imul scas mov stos repnz xor (bad) xchg test sarb cmp push push cmpsl loopne push add jbe xor sbb test jnp jmp es ds ljmp adc (bad) or fdivs lahf xor out mov sarb fwait imul decb or ret cmp push je leave sbb mov es imul and hlt cli ret push stc ret outsb shr mov lcall push xchg (bad) jae or inc push mov aas jmp push rcll shr add jl repz xlat data16 fwait xchg pusha and xchg (bad) pop pushf mov mov es int3 ds sbb je jae xor and fildll ljmp enter jnp and and in push movsb and out pop mov dec mov mov jae adc das clc (bad) es or mov ret add inc mov jle push loop jl in pusha cmp pusha scas negb cmpsb cld adc sub lds lret mov mov dec mov lods ficomp xor pushf stos mov in data16 (bad) stc cmc jno leave stc xchg cmpsl std sbb outsb testl mov daa outsb mov cmp xor ljmp pusha add stos xor in inc dec ja mov (bad) dec dec mov inc sub mov mov mov add mov ljmp sub or fnstcw lock xchg adc fcmovu sbb divl jmp in (bad) rcll lods xor xchg xor dec mov inc pop aas or add dec adc push shrl sub push pushl xchg add mov iret xor mov gs repnz dec inc mov push add jecxz lahf data16 sub fs (bad) xor xor pop out ret push fistp xchg mov adc iret adc out dec (bad) jmp mov lcall sub (bad) dec int mov and dec out inc pop or sub ds sub and jbe ds jmp mov jg push (bad) into gs das sbb sbb arpl ljmp push xchg in ds and fimul and lret push cld ret cmp xchg jg mov adc push ljmp jnp ja scas xchg repz std xchg ficomp lods mov fisubrl fdivrs repz pop mov dec lods loopne mov sub add mov sarb aad dec add jno or adc inc sahf xchg push mov repnz lret add mov into jge shrb mov lds addl or in nop scas sar dec mov xchg mov inc cmp movsl or jbe in push cld popa pop mov dec xor and ljmp in sub adc mov lret pop pop push jno std sub imul or (bad) icebp scas leave mov cmc xor js (bad) call daa jl or je mov xlat mov push mov xor icebp imul stc xor jnp cmc mov (bad) jo icebp pop inc and add daa hlt cmp or ljmp es mov adc adc cs lds cmpsb add mov sub xor mov rolb sub notl xchg rorb jne (bad) divl pop lret sbb sbb pop out out jbe test cmp push adc and leave (bad) adc ljmp cs loop ret dec imull rcr pop pop cmp sub inc dec mov popf push push stos jmp sub into jo dec repnz and mov mov add jmp scas or cmp fsts lods stos dec push leave sub sub icebp push add aam repnz mov add cltd xor pop sbb clc mov push testl mov and jle push fdivrl sub ret mov xchg fdivl loop aas dec ljmp pop xor adc (bad) std (bad) add sub dec jp pop imul fwait jp push pushf jge lds sub pop pop jne mov cmp cmp stos xor call xchg adc jne enter mov aas mov pop std xchg (bad) incb add setne cmpsl inc out jmp leave (bad) push imul dec push sub dec mov xchg xchg pop lcall and or add mov (bad) fisub sar and inc adc mov xchg sub fisttp dec cli mov mov or mov xor pop test lds sub mov mov and mov loop jne xchg mov pusha add jbe sub push mov js loope sub and fincstp pusha dec lahf fidivl xchg call scas inc lods inc gs (bad) fs cli pop xchg push lret les loopne cmpsl inc fadds mov out loopne daa icebp jne cmpsl mov and add loop scas mov out xor push jbe pop pop xor sub aam mov idivb mul int imul xor pushl push pop xchg xlat and movsl pushf push int or mov bound sub cli adc sub mov pop and fxch fistl enter dec mov fsubr pop mov stos mov pop inc mov push xchg adc mov push and inc mov (bad) and scas cwtl fwait out lahf cld inc gs je mov or sub int3 lret lods jb sub mov test stc mov push sbbl cld cmc add dec sarl popf out testl cld ja cmpsl pop bound test add mov push push add (bad) aad out pop xchg sbb jmp or inc or lret mov dec cmpsl dec adc push mov leave repnz cmp insb sbb mov or ss and ret repnz icebp push jns leave ja mov jae cmpsb and jns adc arpl or jbe bound clc pop or in and pushf aaa xchg add pop pop dec fildl push leave dec push insb pop mov addr16 fsubrl and fistl shr cmp rclb mov pop incl lods (bad) mov lds mov dec in orl ret dec push lret mov sub jb jg aam repnz mov mov dec arpl add push aad js cmp sub das mov in and (bad) sti lds mov scas int outsl fsubs popf xlat jb pop repnz xchg out push orl or iret jg insb and in inc mov xor xchg push cmp inc (bad) dec jl dec loop popa mov popf rcrb dec pushf add cmp jae xchg and and or push jge es pop rorl sub cmp daa pop adc les (bad) out in sbb xchg xchg enter outsb int aas or out icebp in imul bound sbb cmpsb or mov and sbb sub add sbb enter inc jno bound mov pushf mov loope adc inc or (bad) ljmp xchg movsb xchg daa jge nop mov mov and cs xor sbb bound sub movsb test subb xor xor fisubr add cwtl pop (bad) mov sbb pop cmpsb std adc and pop popf stc shll jno push in mov pop xor mov fwait xchg mulb sub into mov inc xor cli xor arpl push rcr jge cmp xor xchg add (bad) repnz add xchg push push lret jl lret fdivp dec pop cmp ret xchg jo xor sar mov fidivl sbb xor movsl fstpl (bad) mov ror push add fdivs pop imul in or jmp cli (bad) mov test ret sti jb jl sahf (bad) dec pop gs fsubrl cltd dec and cli mov aam add xchg and mov push push aad mov dec pop and clc imul hlt xchg mov and pop cs mov call rorl sbbl sub sub out xchg lds movsb or inc ds jae into adc rclb xor xor pop dec loope ljmp sbb mov das push mov and adc mov cli mov (bad) stos mov pop mov or xchg cmp sbb pop add cld testb movsb mov mov inc pop cmp push sbb mov add iret xchg mov into fistpl sub imul push loope jge loope pop pop and xor idiv popf fwait add fadd cs in outsb mov sub mov aaa cmc test xor push in sub das std sub (bad) in jp sub mov int push adcb sbb push jge (bad) or mov or add js mov incl lret mov cmp inc xor in cmp (bad) dec sub sbb add movsl inc xor mov gs cmpsb cs xor push fnsave jecxz jno dec xchg icebp sti or jae xchg xchg xchg mov (bad) cli loope fnstenv dec stc inc mov xor imul push je pop jge into out cs arpl mov mov xorb data16 or mov adc mov dec in sbb aas (bad) push jmp adc sub xor icebp ljmp lcall or shll leave cmp cmp sarb and inc cmp jns or (bad) ja cwtl into scas pushf cs mov icebp add mov test ljmp fs ljmp roll test out pusha mov sub add aas cmpsl aam mov and inc mov daa cwtl ret sub enter mov adc and dec mov in add dec loope jbe imul mov dec push push mov ljmp movsb xor or mov popa ja (bad) iret xchg rolb pop popf add add xor sub rolb rcrl pushf mov push insb shll pop decb pop daa mov inc out out inc push inc xor adc int push cs das adc jae push mov cmp std sahf sub push pop pop or (bad) neg or mov mov subb mov ret je,pn inc xchg popa jp mul sub inc scas mov shrb iret push xor add lret pop push mov ja in bound es sti insb inc repz ljmp cmc cmp dec cld int sbb cmp mov add pop add add test iret mov das add int3 jmp out add mov mov adc leave jnp,pt mov adc sbb scas dec rcll lret pop fildll xchg jno fldenv xchg jbe neg dec push hlt sti xchg fildll push sub std aam push xor pop mov push inc sub mov pop stc out xor call flds or or icebp sti jle xchg xor mov testb notl pop and cmp jo (bad) in adc push mov pop push sub mov dec mov out sar clc pusha dec test mov mov (bad) mov sub mov loop and leave pop inc push dec (bad) loop xchg sub adc add pop pop repnz bnd stos lea mov scas mulb pop and add decl and xchg ljmp mov (bad) dec les jo and xor sub lds lock dec (bad) or lret (bad) (bad) sub dec idiv into nop dec mov movsb mov jno inc mov add shl push cmpsl and or mov nop (bad) and jb and cmpsb xor or popf push add pop pop loope imulb mov ljmp mov pop jbe in out lret outsl pop xor cs in mov cmp sub cmp and mov sbb mov cmp shlb sub mov and bnd icebp dec push outsb mov jge mov mov int3 push pop jno scas std xchg pop popf jl fs das icebp out mov decl lret mov or inc mov or xchg in cli mov int xor cld daa repnz push mov and push je push lods out push mov push ja out cmpsb hlt xchg fadds ljmp int mov aas cmp jge and imul cld divl int3 (bad) pop pop insb push roll sub aam sti ret push jae psubd imul cmc scas mov xchg adc daa test inc mov pop cld jmp ds push int cld mov (bad) sbb xchg out jecxz dec scas (bad) sub jne mov stos icebp pop daa (bad) idiv loop mov add xchg cmp popa adc and jo jno mov pop mov mov stos cmp loope sub xor mov mov std and (bad) mov pop gs mov mov mov scas mov inc sub xor xchg cwtl mov popf divl or (bad) lret data16 push mov push pop repz (bad) or repz ficom jmp stos into (bad) mov out notl stos repz jge roll adc sub or and push rcrb mov fs push pop dec push dec data16 loope pop sub mov divb in push decl repz out mov adc pop push mov adc pop push dec lret rorl pop mov enter push push add pop inc xor cld adc in mov dec and add das mov testl dec mov imul ror jle jg incb js sbb or sub add lds ja xchg mov xchg push cmp (bad) movsb cltd pop sti jge inc dec cli or popa cmp push mov ja push pop jmp cli add sub jae mov outsb adc adcb or mov adc or jae addl repz (bad) out jge and in mov dec in mov push or xchg xor cmp pop inc xor jp and mov sub and xchg add test xor jnp int3 push pop pop add lahf data16 sub and mov add mov pop mov xor pop cli fcomps and push cmp push push cs scas cmp mov or cmp ficomp jne movsb daa (bad) mov leave xor xor add or add out gs mov testl gs xor mov pop push outsb in ficoml fcmovnbe int3 les ret and push mov negl mov test add or fiadd dec data16 mov push dec jl mov sub out movsl pushf push adc loop xchg fbld lds jle pop xor push sub mov sarb push dec xor push out inc ret fiadd jnp lock or mov daa into stc push leave hlt sub or jo popf mov push push mov or cltd xchg out out sub in adc and add in xchg push fs sub (bad) jmp jne pop shrl push sahf xchg (bad) enter cmp xchg jmp fiadd orl btc or nop cmp hlt or xchg pop sarl xor loope cmp or xor add movsb and jne push sub sub out dec xchg or cs add or or cltd not jle rol movsl test lret loop outsb mov or jno jg add ss dec and pop xor pop jnp inc mov jne pushf in jmp rcll mov pop cmc cmp mov push pop add (bad) stos lret (bad) daa mov jmp jle push mov (bad) sub clc das mov dec out mov scas sub add dec cmpsb test adc popf aam insl pushf enter fdiv icebp adc and lret mov sub pushf mov xchg decl lock ljmp mov sbb add divl adc ljmp fiaddl les cs xchg imul jno lock push xchg mov in adc sbb jbe mov jmp lds (bad) push fnstsw lods sub sarl dec fs adcl sarl adc cmp dec lret xor jecxz or xlat mov negb xor push pop dec fistpll mov mov sti sub sub outsl mov test mov pop sbb inc pop pop xchg lret lahf rorl fcoms (bad) cmp jmp and (bad) jno mov sbb rorl adc out std imul dec lahf or and js jl push or lahf mov xchg fdivr fnstenv (bad) mov add pop xor (bad) xchg xor xchg mov pop pop (bad) fpatan sub leave xchg mov sbb sbb loop lock xchg inc mov test scas in lahf (bad) mov add add mov mov int3 mov imul push add xlat out out test lahf stc lret cli repnz lcall (bad) and in or fidivl sti adc aad sbb sbb repz lods leave repnz (bad) enter stos mov das (bad) mov call sti adc add mov or pop or or fbstp pop mov rcll scas xor mov cmp adc mov scas pusha dec jmp sub sbb ret xor cmc or std mov push dec or mov pop aas xchg push mov dec mov jl xor lods cmp xchg loope fs call popf fnstcw lret out adc (bad) popa mov fsubrs scas or sti xchg cs imul fdivrs jns pusha push (bad) in cmp out and mov notl jns sub inc mov pop insb inc pop xor xlat mov sub scas ret lahf leave pop cmp jmp push dec cmp orb mov divb mov rcll das jno lret fcmovnbe xchg leave inc dec repz mov outsl mov cmp pop lret cmp ljmp jg clc je sub xor sub in (bad) fs je mov stc es nop add push daa sub hlt add shll mov xor jne or test call inc popf push cmp call out jge lock xlat test xor stos mov mov pop mov xor outsb lds hlt dec push shrb cwtl fcmove or cltd and faddl xchg imul and jmp add xchg cmpsb cmp icebp dec sub xor imul or gs int3 mov cld icebp mov add xchg jg ljmp cmpsb or cs testl or (bad) jno movsl ljmp (bad) mul or (bad) js rcll mov and shrl sti mov pop fsts jns xchg sbb sti into imull out notb mov hlt dec xor and inc dec pop popf mov or ljmp and cld pop stc rorb ljmp jp icebp push cmp ret mov ficoml xchg pop nop imul out (bad) jns xchg and loop shrb fmul push lea and popf xorl jmp movsb scas popf aad sbb icebp jle repz or xchg (bad) ror push (bad) mov push inc inc xor clc lea xor and xbegin inc cmp daa jmp xchg scas mov cmp and jmp sub addr16 and sub lods cld idivl lds sub dec (bad) xor into sbb pop leave pop fnop fcmovb sub xor fdiv leave pop (bad) sahf jp dec popa (bad) inc xchg mov (bad) mov xchg cli adc mov lret mov xor repnz gs mov les add loopne je sti xchg adc sti fdivrs imul inc cs push cwtl cwtl adc dec out lods add inc adc ss into jecxz sub enter icebp jns leave (bad) ds cs call mov insl adc mov ficom adc or in mov adc mov leave js icebp cmpsb push or xor pop sub jmp and dec adc push inc shrb xor scas cs xor subl inc ret jl (bad) sub push out cmp and lods cmpsl fstl icebp testl xor and mov pop mov into bound rclb data16 int3 jne cld or mov mov and mov inc sbb sti rcl adcl outsl cmp sub xor sub fiaddl pop dec mov jle jecxz dec repnz imul lret sbb cltd mov push mov sbb leave dec push push in outsb call icebp test mov sub int3 outsl mov jmp sub jle mov test mov or jne lret mov dec div adc imul test fstl xor sub js je loop push adc dec out arpl sbb mov rorb outsb dec and dec in outsb dec jecxz leave fild add ja stos test out jb repnz sub loop jb xchg decb sub and addr16 sahf dec sar add xor mov add mov adc (bad) mov cmpsl test and out jnp sub scas xchg adc xchg nop sbb mov in add test add (bad) and inc pop jmp (bad) shl lcall sub out pop and shr mov dec loope and adc fstpl mov inc sub xchg lret dec (bad) dec jge call or enter out scas lret inc daa ret hlt addr16 mov push mov lahf sub je mov test cltd xchg jg std sub (bad) mov or dec outsl push in and dec xchg scas mov cld lock pop in pusha in int3 xor nop cmpsl mov push in out in out les movsb mov xor (bad) sub push cmpsb pop sbb sbb pop xchg loope inc stc mov testb insl das xor or nop outsb pop sbb pop icebp mov xor or adcb or in jecxz out jle add xchg fcmovu add ret mov (bad) cmpsb aam das push clc lahf outsb cltd clc mov clc xor cmpsl shlb mov add push fldcw rol pop aaa es dec add in (bad) (bad) cmp pop push ret gs divl (bad) mov js popf cmp jns movsb and loop jg add aaa pop mov push in sub (bad) inc loop xchg mov cmp les lock ret add stos mov dec in pop mov in es mov jl mov jae add jae arpl cli in push cmp into lock mov xchg cld or push pop in lock mov (bad) push pop mov scas loopne in jecxz rclb push add mov mov sub jnp push ljmp mov clc shll jns dec aad jae inc dec decl out mov pushf mov cmpsb ret mov mov hlt pop imul and pop dec orl xor pop push daa cmp cli sub mov lahf out cmc imul pop repnz (bad) fsts lret or jmp xchg sbb repz jmp and pop (bad) push popa xlat mov das fs mov adc ret mov xchg adc mov xchg inc pop ljmp mov xchg sti dec (bad) data16 lds int add cmp (bad) mov push rclb jns gs inc and xor mov or sbb sub ss adc add xor clc sub lods loop clc dec mov aam push add cmp outsl lds mov in cvtps2pd hlt fiadd jmp ds std sti stc mov xlat sarl and cli pushf rorb loope mov cmp mov les leave mov mov gs ret xor dec push loop xchg loope fdivrp inc push pop bound push test pop das shrb xorl popf mov rolb xchg xchg cmp ret lret and xor aad ljmp pop ret loopne sbb out fldt movzbl shlb cvtps2pd cmpsl lret jp pop out popf pop mov leave jns or push and or xchg rcrl sti fdivs loop call dec or sbb fcomp fadds xchg pop lock (bad) adc or adc push xchg push into (bad) cmp ficom subl pop (bad) decl mov divl (bad) mov and or dec adc (bad) dec pop jg mov mov aas mov aam out fstps outsl lods iret repnz lret dec add xchg sbb xor lret push pusha ss push sub int cmp mov cld pop stos and jle push or addl jne js orb fnstsw cmpsl scas cmpsl pop xchg mov in adc push ljmp or mov into cmc fcmovne mov add and incb fsubp xchg sub push pop addr16 fsubrl ja add test pop lret lret add mov idiv jmp or adc cld scas movsl fdivrs ljmp xor ret sub imulb lods xlat fld movsl hlt mov mov aas sub outsl adc out jg ljmp xchg push insb mov gs icebp add sbb and mov jo xchg xchg jecxz (bad) (bad) jg (bad) push jle jno push add jmp xchg mov push pushf out jl or ret cmp lock rorl xor leave call xchg mov sarb rorl icebp lods cmp out call xorb inc leave push (bad) cwtl cmp out dec mov mov push add push vmovaps dec add scas pop shr add arpl xchg pop mov sub mov bound leave mov popf inc iret popf ret mov rcrl stos and sbb (bad) ljmp push idivl mov pop mov mov adc or lea xor or pop push imul dec push cli lcall test push dec out add ret rol jnp mov inc or push cmp cld xor mov push or jg shll or pop pop pop ds mov push lcall add xor adc out mov inc cld cmp sub pop leave pop cmp insb lds add xorb (bad) jns and push sub or dec mov mov aaa mov lahf mov lods jb push xchg push push mov jae pop pop shl add adc push sub jo daa repz push xor cmp mov scas sbb push jle push inc mov pop pop cmc sub pop sti frstor jl divl sub inc jge sub pop mov jmpw fs pop jg xchg push mov add repnz push test cmc dec loop daa push jp or lret je cmpsw jae pop (bad) rorl enter jmp in call inc sub mov jb sub bound pop cli out daa outsl jb ret pop lret enter clc test pop movsl adc test ror sub leave adc repnz pushf jns loope cs push ret daa in or repnz mull cwtl (bad) dec or fs mov add ja movsl inc or adc mov (bad) stos cs mov adc insl or cld ss fldl pop ljmp dec popf push pushf sbb movsl push pop out lret mov mov dec or ljmp inc push adc push mov xor dec sarb adc test lret mov mov inc or pop ds push mov or pushf nop popf or test push sub jmp dec dec scas mov pop mov fsub outsb repz add push add pop pop les adc xor adc in ficomp lret inc add incl daa xor jno mov mov (bad) lcall xlat jae cmove out lds aam das repz lds fs push push or rcll xlat pop adc insl (bad) or mov pop rclb (bad) js out pop loop jbe and imul fcompl enter fldenv outsl test pop out je jmp negl mov mov sub xchg sbb and mov movsb and cltd jg out sub jbe push negb mov cli fs xor cmc mov xchg sbb rcll or (bad) (bad) mov cmpsb shrl dec stc lea rcr cs in mov ficompl test mov pusha cmp inc ret dec sub sub push adc in mov sub in xchg sbb xlat ror dec popa xchg repnz lods mov push cmp sahf inc pusha sub adc aas into sbb ret fadd xchg push mov sub dec pop mov pop inc mov loopne cmpsl pop mulb sbb and mov dec cld movsb and popf std mov das push adc xchg xor xor mov or mov js fstpt mov sbb lds es sub mov add leave add inc imul movsb jno rorl pop adc sub and add dec test pop clc sub clc xchg ficom xchg and aaa pop (bad) xor jl mov and xchg mov push jb negb test dec mov push xor pop ss pusha and push cltd xor xor push inc (bad) xor inc push mov add add mov cmp jmp push push cmpsb ljmp movsb mov xor or xchg or add xor cwtl cld or ljmp out call movsl adc loop mov adc lret xchg pop stos adc mov xor (bad) xchg cmp or pusha int or das cmpsb (bad) sbb pop cld imul sahf and dec out sub iret dec add shrb add xor icebp push clc pop ds add test inc sbb rorb sub dec (bad) jno dec push cmp stos in insb scas mov mov add or mov std jnp cmpsl inc test (bad) test sub das into out adc adc mov xor je imul xacquire popf std xchg gs xchg add xchg icebp loope cmpsl (bad) mov ljmp jle mov jecxz xchg enter fild xchg mulb out xor enter dec pop cmp cmp ljmp mov lock xor cmpsb xor rcrl sub das cltd xchg or cs test adc inc and lods cld xchg mov out iret jmp or adc out pop dec adc jb jmp icebp mov mov fadds (bad) out clc lock rclb mov push insb or and aas movsl jg or adc in scas (bad) pop dec sbb dec (bad) fidivr add (bad) mov (bad) or push sbb xor inc push xchg inc xchg addr16 lods rcr dec sub stc jmp or shll pusha test lds push sub rolb ds daa inc sub insl insl jg movsb (bad) fstps xor aam jb aam and inc dec jns xor mov lds lods mov or lcall shlb pop add mov cmp mov push out sub in mov cli (bad) pop add out add nop or rcrl xor mov repnz mov sub push sarl pop jle lret das cmpsb cmp ljmp (bad) pop ret cmp std xchg test inc xor cwtl inc xchg xchg push insl imul mov cmp inc adc (bad) fidivr lds mov mov or call mov pop jmp es xchg das insb add mov movsl add cs shlb addr16 gs xor call test push cmp rcrb pushf jg in mov inc ret dec ficomp or (bad) dec repz mov out or or xchg cmp das (bad) mov mov cmpsw jb repz mov cltd ljmp ret xchg mov xor mov cmc mov or jno dec (bad) lret das pop sbb jne sub mov icebp inc or rorl dec incl (bad) pop bound sub int mov adc stos rcl sub sbb movsl mov or pop xchg fstl inc push sub repz sub pop jbe vpsubusw ds or mov cmp dec mov and or ret fist or add sbb int3 scas mov test or xlat inc mov sub out push pop lock (bad) dec xorb or ja xchg fnstsw bound fbld adc push and sub dec (bad) mov (bad) xor into jno out mov pop xor inc xor and add bound jge cld imul movsl adc push es jbe xchg jl in dec popa or sub mov sub sbb xor std test xchg aad out das rcrl shlb (bad) leave and jno push push dec cmc xor orl dec ljmp into aaa dec and mov cmp add jl mov cmp mov (bad) out pop imul dec mov outsb fstp cmp jns dec stc jl or push das lock pop xor push mov fstpt xchg test and mov lods xor xlat and enter add lret mov lahf xor xchg les fadds sub icebp lret sub mov pop mov xchg jmp movsb fildll sub and enter int3 and loop add dec push rorb mov inc ret jno cmpsl sbb push nop test cmp (bad) es fwait leave mov (bad) fsubrl mov cltd stos ret or int3 popa fcoms cmp xor and lock lret push pop (bad) adc fidivl jecxz push out add jmp xchg mov incl dec cmpsb mov std gs xchg mov add js xchg or fisttpll mov cmc nop clc lret iret pop (bad) xchg imul cmp stc in (bad) hlt xchg and push dec daa jbe sub in xchg (bad) mov adc jmp inc icebp mov mov das mov xchg mov stc xor cli lea les movsb ret adc mov mov xor or jmp dec jnp pop loopne adc xor loope ret or std xor mov xor mov xchg fs sub xor pop cltd push xchg push jge loope and cs rorb pop (bad) je xor repnz xor fisub xlat in ret pop and pop sub and mov pop lods and je sub (bad) sub lret xor movsl jecxz repnz adc testb sub negb lahf or add jbe ficomp mov xor or mov xchg mov scas sub push ja in sub xor shl cmp cmp imul jmp cmp push and ror dec mov (bad) sbb das xchg sbb into jns and cld cmpsl adc cli nop mov mov mov sub and and xchg je mov cwtl mov adc mov sub mov jbe (bad) mov cmp dec mov inc popf push jne call xchg push push repz es mov ljmp cmp imul push mov pop jmp daa mov sbb popf movsl sub xchg add sub fstp add mov mov mov fadds xor sti fildll (bad) dec (bad) lods lods xchg test movsb mov sub jo rclb icebp pushf mov or and jge cmp cmp fcmovnbe (bad) loopne mov push or xchg pop out lret push mov cmp xor xor lret push dec jp iret ficom mov bound mov stos sub or pushf dec imul je call cs aam cld xor sbb fistpll sbb pop idivl movsl cli push bound out cmp (bad) and dec sbb xor inc scas cmpsl pusha xchg mov pop jmp stos xchg leave out sub fldl sbb sub xchg push jecxz jo out jne es je pop mov cwtl mov sti and ret pop inc dec or ret ds and inc dec lret sub push inc xchg or and mov mov push stc aad add xor pop daa and repnz mov push dec jmp test xchg repnz (bad) lea and or insb (bad) xor xchg outsb into (bad) jecxz pop mov sub pop ljmp inc pop out fld xchg cmp sub dec or loop ja cmp mov adc ja addr16 movb aas cwtl (bad) pop adc push pop repz xchg imul fcmovu stc loope mov cmp inc sbb and or xchg cmp mov cmpb jno inc bt (bad) mov dec cmp divl push fstps push or in in push lret pop imul dec andb ret fistpll gs and and xor imul dec int cmpsl push inc mov inc bound std and fdivs pop add xor mov add daa mov addl mov fild jbe push jne mov mulb dec int3 pop ljmp xor mov icebp cltd push add xor imul mov pop xchg repz jno mov lds out mov xchg mov rorl out add sti data16 mov dec ret mov loop icebp or sti push ss jmp test xor sub leave pop (bad) inc psubsb mov adc and les clc sbb xchg ret sar ds pop cmp aaa mov push sti ret dec or imulb push iret imul sbbb pop mov dec stos jbe pop daa (bad) and insb sub inc pop jmp icebp cmp mov out xchg inc and and shrl push xchg sarl fnsave cli push ljmp mov lds push sarb insl cwtl aas mov test pop pushf mov lods mov cmp pop stos (bad) sbb pop add sub jne into fs fucomip cltd mov add out and iret mov adc inc adc jns push ret mov mov sub (bad) into pop lds inc and or sbb push inc add mov lahf cld mov movsb and lcall and xchg cwtl (bad) dec mov gs stos test movl and shrl jmp and sub push fucomip dec (bad) adc ljmp div dec int3 push add and add push or or push (bad) mov inc cmpsb dec ds lea cmpsb popf (bad) das rcrl jge dec push stc (bad) mov cmp cmp out outsl andl (bad) pop and outsb and lret add lea push push dec fs je mov xor pop scas int3 imul and mov (bad) aam in cli sub cmc dec mov addl sub aas dec mov cltd sub push dec mov bound ret and cld divps fs jmp dec movsb jne cltd inc and ret mov jecxz adc shrl pop mov cmp mov xchg out shr pop pop xor int dec bsr stc cmp pop cmp push (bad) pop (bad) ljmp xor and shr sub imul cli mov sub jge mov daa aam dec push dec xor pop dec ja pop ds push lds push adc xchg mov mov fnstcw arpl pop test (bad) mov es and and ret or (bad) jge xor cltd adc cmp (bad) xlat mov fnsave push ror dec fistp fldl stc mov aaa (bad) mov and dec movsl (bad) cmpsb jb sbb in ss lret xlat lds sub mov shrb adc and pop gs xor dec insl cmp or push sti mov (bad) movsb and mov adc or sub or jle addr16 in mov push mov and sbb mov mov jno les add (bad) xor and outsb cmpsb add jnp fdivrs mov jmp (bad) sub cwtl xor hlt (bad) mov push add das mov push jge inc clc add fwait lds xchg sbb push jno push dec std mov xor les (bad) mov icebp sub pop push cmpsl pop cs push and test add std inc nop andl inc pop shll icebp loop sarb repnz dec fdivr out test in test lret ss lock lods aas loop in and sub les adc sbb call push sub mov jb or push pop scas loope sub pop clc xchg mov int3 or js adc mov icebp repz (bad) xor sub lods std pop mov repz loope frstor shrb inc push or ret push mov and call jg or ficomp cmp add push add xor lods lods mov add mov pop or mov push ret std (bad) xchg xor rcrb loop jae xchg (bad) pop dec push test sbb bound lea or sub xor mov mov jl ljmp pop sbb imul andl jge sub lahf mov fstps or cmp mov dec sub int3 push dec (bad) ss cmp out sbb mov notl and ss arpl loop aad (bad) divl mov (bad) popf rorl mov cli idiv sub pushl fnstenv test mov into mov imulb insb test ret int jecxz xchg and enter add daa push je rol xchg out (bad) lret fimul jno xchg and sbb (bad) cmp inc cmpsl (bad) sub (bad) xchg imull mul adc sbb xchg dec push idivb in adc addr16 loope sub ret insb and adc jl mov sbb ret mov inc sub gs mov push mov cmp pop lret push pusha loop dec mov pop int3 cmpsl ja inc iret xor cli gs fist stc mov mov adc and mov mov fnstenv add (bad) mov sub xor push xchg fld lods inc push add aad mov xchg or and sub push xor leave jbe pop sub bound sar data16 pop xchg xchg jb in inc xchg hlt fmulp cld xchg (bad) bound jle pop push mov ljmp cmp ret popf mov add xchg jmp lret loop push push add jp shl repz movsl test insb add shll xor mov fs into mov add and jns imul or aas add fprem1 cmp dec cmpsb call ja mov imul add mov (bad) sub flds stc mov nop mov insb sub xor inc push mov (bad) into decb sub loopne ficomp enter cmpb mov jl dec ret and icebp push je mov pop sub loop mov jnp inc or mov fistp mov xchg xor sub cmp lds clc xchg xchg add pop enter jne int3 inc add push (bad) das pop (bad) dec nop add xor mov aaa push (bad) pop or sub hlt icebp daa sub ljmp push fbstp jmp (bad) dec stos sub mov push push and cmp pop fisub xchg jp push rclb sarl rolb and das xlat mov stos sub sbb int3 pusha sti or roll rorb out imull das mov xor push pop ret dec sbb das dec mov (bad) fadds add pushf ljmp lahf jmp cmpsl lcall cmp cmp lods ja,pn pop cld xchg out scas notl mov jmp aaa das mov test inc or (bad) das lods movsl shr rcrl pop xchg adc push pop mov push cmp inc pop enter jbe adc fildll ds scas xor mov jg mov nop nop or (bad) ss push (bad) daa call sti popf js and add aas mov int sub out mov cmpsl ret jbe scas (bad) divl adc sub mov pop and fdiv popf in movsl mov push into dec cmpsb mov sbb daa out jnp movsl sbb or loope and sti fnstsw in sub and add xor jne add inc (bad) jns (bad) (bad) call jecxz (bad) out inc push out bound iret jge mov in clc out scas xchg sub leave push inc ret outsl les and xlat add add jne adc sti mov xor ficoml jecxz inc imul repz (bad) out push sub or sub xor mov icebp pop mov enter add mov scas (bad) insl add mov lret xchg pop loop ret insb roll ss sub push push insb xchg sub xchg in insb bound ljmp add sub mov sub mov xchg push push push daa iret sbb xchg scas push xchg mov xor sub cmpsl dec cmpsl dec ret push dec add pop adc imul es test (bad) sub sub jl jg xchg pop mov and std movsb mov (bad) (bad) imul or mov punpckldq popf insl dec cmp test inc or mov cmp jg xchg push jb out adc (bad) xchg push jge mov je outsb jmp pop pop pop out stc (bad) adc (bad) mov dec and pushf das or paddb out mov mov aaa xlat stos sub popa test lahf or jbe imul shr dec sub dec sbb test rol xor sbb test fimul popa mov sbb mov jnp stc pusha and bound inc lods push fildl xor xchg hlt xchg pop jne les out fistpl xchg pop jmp mov je call cwtl fisttpll mov add pop movsl (bad) xchg sub (bad) stc icebp cmpb and xor add jno out push in mov shlb mov int3 adc add mov jg mov push or sub cld dec jmp stos adc imull add jge sbb enter mov repz xchg rclb mov sub mov inc push fstps dec jmp or rep iret pop ljmp ret jmp lret enter (bad) pushl leave notl ds repz (bad) and mov lock cli out pop mov pop rcl bound (bad) jne in and orl popf push push outsl lret repz xchg pop cmp mov adc add mov dec mov lret loop lahf adc stos mov inc in pop jo loope mov xchg or cwtl push or fildll push daa inc imul das xor pop mov cs jmp aad fcoms and mov mov int3 add mov out sub cli sub mov push or dec add xor outsl jne call dec fisubr xchg data16 dec mov aad cli lret dec push mov dec (bad) sub jg mov mov jns xchg out (bad) in or ror dec xor ja or aam out mov push fs pop pop mov sub rclb pop push dec xchg pop leave shrb inc dec aas out mov dec gs xor inc popf adc push fist imul test mov adc adc je mov das (bad) (bad) mov stc leave imull push test out in movsb fisubl jne jge xchg and or mov jmp sub mov xchg cmc xchg and and (bad) and rol sub and dec shll fidivrl rol dec movsl and jle decl or or xor loop add lret icebp push mov or incb mov cmp movsl dec sub pop test out sub cmp (bad) aaa sub scas pop (bad) ret and dec adc aad jmp cmp out rclb push jno xchg xor mov and ret mov xor out sub into lret loop sbb insb mov push (bad) punpcklwd sub inc jmp adc or mov sbb ficomp dec mov movsb lret sub lods push out ljmp dec mov add out xlat dec arpl and mov sub rorl ret test stc dec jne ja push scas push lret call push daa inc pop add cmp repz dec sti iret inc daa sar mov testl cmp daa ret mov divb dec pop push inc and into adc dec imulb shlb dec test and pop adc sti movsb lods rorb and cli sub clc and or and or xor icebp push insb or shrl xor in mov cmp std cltd mov das add lret xor out sub (bad) xlat (bad) mov mov pop in scas dec jmp sbb mov add int3 das xor push jne lret and ljmp mov fwait mov push scas sub sub repnz out divb mov sub push shlb xchg fildl sbb xchg (bad) xchg xchg imul add add push cld test push repnz stc pop scas addr16 mov pop or jg cli test xchg jmp sub leave lahf xchg push adc mov push (bad) mov pop xor movb xor pop clc jecxz pop xor jg (bad) popf mov lret cmp xor in xor xor out push scas std adc in jge faddp adc pop lret sbb or xor sub sub sti jno jmp call push sbb jmp cs dec mov fsubrl push call fs push movsl adc dec cmp lds repz or fcoml and out sub sbb rclb push xchg cs sti into pop lret aaa outsl test jb shl rorb pop (bad) add push or or sub and dec jae dec aad and enter mov mov sub and stos mov mov test sub loopne xor in adc sub out mov rcrl (bad) push sti or test shll rcrl dec sub cmp out cmp test ss sub lahf daa lret jge cmc shlb mov pushf fbstp and mov fs inc sub leave push cmc mov adc iret jns ret (bad) pop sub xchg push or add xchg test idiv mov dec aaa xchg std jecxz lret mov jg jns call jl pop shrl hlt jb popf ja mov pop ficoml dec mov jno and icebp icebp xor mov popa fsubp roll jl (bad) cmpsl cwtl dec mov sub mull in mov mov inc daa xor shr mov arpl pop cmp mov pusha out mov pusha dec jmp xor sbb cmpsl pop loop ret pop out xchg ljmp cld xchg test loope xor fildl sbb and out test fcoml stc xchg inc mov push fwait imul leave lods (bad) lret lahf push into inc add add xor rolb out dec fistpl jg and sub mov push mov int cmp sbb push push loop movsl sahf and das fistpll dec jbe inc and push imulb fnstsw test das sti (bad) out fs push xor rorl mov popa daa clc adc cmp repz adc loop fbld (bad) sub and sub test xor sub and (bad) ljmp xchg push mulb or xor mov mov adc ja out mov push jmp xor enter cwtl cmpsl sub out jnp or sub repz dec call dec sbb mov loop jne lods sahf dec je les cld shl scas mov ror add insw xchg mov lcall push (bad) xchg xor subl sub roll repnz pop pop add mov mov inc inc iret pop push call inc loop pusha (bad) jmp sarl pop ret xchg adc mov ret push adc mov bound (bad) pop ror cltd xor push sub xchg out test fcmovbe mov pop lds sub xchg adc (bad) popa xchg lret icebp rcr and loopne add icebp cmpsl jle push fucomip xlat leave (bad) cmc mov and xor mov and or add cli test adc (bad) xor sbb pop neg add rclb rcll xchg jle add leave push pusha imul sub es (bad) loope out loop aam rorb mov and push jl repz gs xchg inc daa add fwait outsl xlat scas push roll push mov into or fld loop fisttpll xor movzwl mov and das jnp adc jmp dec pop jecxz and pop insb popf dec mov xlat in and xchg xor std lds test ret mov rorl cmp or mov inc push out dec test sbb inc dec pop and pop adc lahf inc loope iret pop mov test or push cs inc push dec (bad) mov add aam xor lcall or or xor adc cltd sti stos cmpsl mov sub repz xor daa add pop xchg fdivrl xchg mov fnstcw lahf inc stos test sub (bad) test jno scas fsubrs repnz loopne ljmp sbb cmp jbe add push add out aad lcall mov ret mov (bad) (bad) dec push xchg adc outsl xchg icebp xor incl out std shll pop jo packuswb shrb ror jmp frstor add ret movsl lcall mov and test jmp cs sub sub mov pop les mov imul jmp sub pop jmp or pop (bad) fs stos lret push out xchg jnp out mov rcll sub xchg mov pop rorb mov and out xchg mov push insb mov in xchg xchg icebp or mov sub callw or icebp pop or sbb or sub out sub clc in and stc inc mov ret xchg jg xchg xchg lods push repnz dec cmp int3 jbe or xchg aam jmp pop jno dec lret into (bad) rcll add or xchg icebp jmp xchg jge je and inc jne in sub pop inc xchg pop jo pop xorb and mov adc sub or mov jns negl adc movl mov jnp out inc (bad) mov test mov xchg ja nop and out jg pushf dec xor mov xchg pop in xor lds clc xor (bad) fwait lock or movsb ss sysexit inc jg (bad) divl mov xlat mov push sbb cwtl inc out or repz jge imull (bad) xor cltd imul clc jl in or aad inc and add shrl out pop decb inc jmp or hlt xor jnp ret in (bad) sub std mov movsb ss imul out and movsl and mov mov iret mov test sub xor add sub in mov imul enter xchg icebp xchg aam mov mov and push push mov inc push sub adc inc leave push cmp xchg jbe adc add pop or les pop lods pop leave and daa pop sbb inc clc iret stos xlat mov adc jg imul (bad) fxtract cmp jg fdivl sub xchg pop ret bound aad repz xor js hlt dec ljmp inc dec (bad) or sbb popf push push and pop and pop or push push pop sub jns or adc mov cmp and and inc push dec iret (bad) (bad) scas imul jecxz mov gs and rorl movsl mov cmp roll repnz sar pop mulb in jmp mov and (bad) mov enter xchg das lret icebp movsl inc add xor lahf inc mov mov push aam stos clc movsb lods xor popa icebp add mov test or stos and ds sbb roll pushf cmp xor bound mov or dec add jle sub and or cmp mov mov cmp stos cs call or mov icebp push add xchg cld mov mov and mov mov sub movsb shlb (bad) or xchg pop ljmpw inc cmc out lea jnp sub outsl xchg sbb in test outsb leave into jge orb fdivrl ljmp xchg aas das adc aaa and add xchg xlat sub sub push jecxz dec add or pop mov or cmc pop aad sti stc sub sub mul inc dec add lret movsb push outsl dec lock sub dec jmp cmp leave popa jns xchg out dec adc cwtl sub add das or pop cli ljmp aas mov negl and movsl jl mov dec repnz cwtl mov lret lret fstpt fisubl out stos mov push idivb pop inc push iret insb lock xor mov sub inc mov stos das aad popa jge cmpsl int jle in std cmp push sub or jg and repnz and mov or dec add dec dec mov loope inc sub mov dec push movl adc xchg int3 xor jl pop popf loop cmpsb sarb daa imul xchg mov mov lock mov ss dec icebp mov inc ret add add mov out popf adc mov shl mov outsl fldpi outsb int3 and mov movsl cld pop jnp ds ja pop cmc push out xchg and add mov sub dec push (bad) repnz mov std in lcall aam xchg add mov std adc mov hlt lcall cmp aaa push pop push push jp call notl push test daa fisttpll inc and sbb mov outsb mov sub call clc sub into xor xchg adcl mov dec jns iret sub sar cmp xchg xchg cs gs mov and mov jno out cmp aaa (bad) out test and ds imul xchg dec push bnd orl xor popf in imul and fisttp mov push sub sub hlt mov inc xor jp jnp and mov es rol xchg into mov sbb pop mov inc fs mov dec cmp iret mov mov cmp (bad) xor dec and cld dec lock sub mov push dec add testb jge andl mov icebp enter lahf pop loopne out push orl imul mov adc sub jnp and xchg cmc pushf int3 xchg inc stos xlat mov adc lret xor lahf faddl mov pop fcoml out inc dec (bad) mov (bad) xor xor shlb jmp jecxz ret pop leave pop aaa mov jo or out jbe and jge (bad) repz sub and mov das mov jb (bad) lret iret and dec add mov push push mov sbb xor std pop xchg dec adc pop mov scas (bad) mov fsubl das or or aam (bad) leave int3 mov cmp ja xor jg add or push inc and out into lods mov xor mov setb inc jmp cmp add cli xor mov dec mov mov das lock sbb cmp mov cld dec cli shrb push jg test xchg lods pop pop lret imul pop pop dec sub or cmp mov jmp sub jmp frstor jp push mov xor sub sub movsl jno imul sub ret inc inc ficoml mov mov pop cld rcl scas jecxz mov sbb ljmp mov pop (bad) mov (bad) and popf loope div xchg mov sbb sbb enter mov mov mov ret shr pop sti push push (bad) xor icebp addb add les lcall fbld ret je mov xlat dec rorl sbb jmp pop sub or scas or iret sub int3 push daa ljmp dec pop cltd pop shlb maskmovq (bad) or mov inc pop push xor sub fist jle data16 testb lock adc std mov adc inc push jle mov and sub insb jp pop add jno mov mov daa mov sbb in cmp inc daa pop push or iret pushf mov lea mov xchg xchg int3 cmp or xchg mov cmc mov add (bad) fmuls pop push lods mov mov fidiv repz scas cld inc lods mov jmp fidivr jae and sarb xchg cmc mov xchg add jge pop pushf mov add jge mov jmp mov out push lea (bad) adc fldl out xor mov mov mov mov call andl xor ja jb icebp push lret jae mov mov pop adc mov out int sub bound xlat inc or mov aam jle,pt sub xchg cs sub add pusha cltd outsb bnd pop iret data16 ljmp out sub test leave push int3 and clc icebp sub (bad) icebp jb je jmp in adc and xor xchg cmpsb sub jle inc (bad) xor mov lods negb test pop add add mov loopne mov stos mov mov (bad) sub (bad) or ljmp sti xor and mov mov fsubrl stos addr16 sub out test lods lahf dec sub mov xor cli in insb stos (bad) clc rolb pop clc push (bad) (bad) loop xor dec pop pop fisubl das (bad) icebp lret jns inc ss xchg je setne rcl pop push cmc stos mov xrelease out mov add jb adc das lret and das fstpl dec popa push push rcrb ljmp pop or lock sbb push push jg inc pop cmpsb jno out std dec int3 xchg testl js pop (bad) (bad) hlt ret sub ss popf push pop imul imul insl xor aaa dec mov sarl mov pop mov jp pop mov imul pop push ljmp xor roll dec sahf push fldt insl or daa or rorl mov out jbe sub cmp add and enter xor enter popf pop and pop xchg push push sub rorb out sub roll mov mov out adc scas divl xor or sti leave pop loope,pn xor pop mov and add data16 dec jmp jo pop sub jecxz popf push dec or pushfw cmp xor lea popa xchg and push lock pop int3 lods mov out xchg (bad) sub mov and sti call out int3 mov mov enter mov cld dec jne inc dec jle andl idiv sub adc data16 sub and xor fsubrs outsb shlb xchg jbe push add cwtl mov or (bad) in push adc and (bad) pop mov push lret out sub loop mulb repnz cmp dec test jle (bad) inc ljmp sub std or xlat xor scas jno idivl or sti push mov and imul bound ret addr16 xor lods fistpl stos jnp sbb js fimull fimul lret adc sarl push mov out mov jmp pop add or pop icebp in pop jmp inc dec (bad) mov std mov jns xor test sbb stos repnz add cmp lods mov mov mov jle and cmp fs cli rorl pushf jle imul outsb dec xor mov dec add or idivb sub mov mov jns outsb rorb out clc movsbl xchg and stc imul xchg push push add xlat cmpsb out sub test and mulb stc (bad) xor rorl das cwtl mov mov negb mov adc bound sbb (bad) dec (bad) aad pushf mov dec into sub inc ljmp aad sub xchg xlat cltd inc jecxz rol mov sti mov mov push dec stos decb movsb mov js xchg sub push out mov xchg out mov (bad) in inc pop out mov mov pop mov andb sub icebp inc lods cmpsl mov fdivrs xchg gs and scas dec fs rcr cmp repnz xchg hlt cltd jecxz outsb dec cwtl jmp into xor int cs pop or add dec add ss rorb popf sbb mov ret mov sahf (bad) mov add mov std (bad) icebp and out mov test jne sub mov sbb xchg xlat stos out dec stc mov adc sub mov out pop mov sub mov adc sub out cmp daa lods push add ficoml sub inc sahf mov mov cli pushf dec ret daa repz jg imull pushl mov nop out sub lret jno adc daa (bad) pushf xlat or loope pop mov add or or and (bad) dec (bad) idivb cld pop (bad) int aaa repz sub or (bad) (bad) mov cmp xlat out (bad) xchg sbb push push sub mov scas fs les xor mov pop sub pop fldcw ljmp pop or add (bad) data16 daa or jne jae mov shll and outsb mov jle in pop jno lds add rolb into stos xchg pop out pop or sub dec xchg or mov push pop es pop je imul inc mull xor inc mov lea lods sub mov xor lss pop adc cli inc adc dec out mov das pandn or cmc mov xlat int mov add inc mov stos (bad) pop sub mov xlat and scas mov and leave es fsub gs pop sarl into mov std (bad) add aad scas mov in inc xchg gs lea lret xor push sub pop sub shrl or subb sub push test sbb das mov mov ret mov dec cmp int3 push pop push jecxz mov push fbstp sbb (bad) out std das sub rcl ja (bad) shr stc outsl lret mov and xor dec subb mov xor adc adc clc test or or adc sub xchg pop rol and into cmp iret sbb xchg pop loopne je (bad) jmp pushf insl or sbb mov fisubr sarl adc (bad) (bad) xor xor xchg int3 jl das call loop lds sub jge loope xor or enter lahf loop repz push jo divb and (bad) fcmovbe scas repz xchg repnz pop dec repnz mov add or xchg add popf and imul add fnsave and xchg aam aas dec mov jl loope (bad) lret xchg jle jb fdiv imul dec or xchg scas faddl (bad) scas hlt mov mov and mov add cmpl pushl pop aam sti xchg adc cmp and arpl or pushf add inc imul loope xor add or push je or cltd jo push pop call mov sub adc cmp xlat nop mov pop dec data16 cmp sbb pop adc sub sbb stos cld outsb imul fcmovbe and pop (bad) mov dec movsb (bad) ds mov mov dec (bad) (bad) xchg test jecxz mov fucomip je or test jecxz (bad) sahf jle repnz xor sub xchg popf xor xor xor jnp fstps fmuls ret aas pop xchg xor into jge and jne mov inc (bad) repz roll out or pop sbb into jg sub cmc lds and xchg js mov lahf cmc fisttpl fdivr in or repz add mov mov inc mov jecxz mov mov sub cmp (bad) outsb mov add pop jmp inc push mov das cmp mov xor mov push add xor mull decl cs (bad) movsb push mov (bad) shr dec iret cwtl (bad) mov dec je gs xchg icebp jmp icebp ret sub xchg mov repnz lea or lods push jno xor scas out icebp xor mov adcb or mov inc mov jge adc or in pop (bad) mov aas mov fmull add or cld cltd rcl pop jnp loope dec adc pop negb mov and movb inc mov outsl add push fcompl cmpsl lds jnp or pop xchg sub loop in (bad) sub add mov fimul sub add and inc or (bad) std jl les mov mov mov inc jecxz cltd (bad) sub jbe (bad) repz (bad) xchg pop jmp mov loop pop jge call fnstenv into xor aas (bad) xor and jl loop and add add jg cwtl or popa sub mov js les ud1 push mov notl pushf dec out out lret cmp out dec push les sti scas clc mov xor fistpll das push leave jecxz push movsl mov adc push call adc repz rcr sub or jo inc test jmp ret sub outsl cmpsb pop dec loopne ret leave push mov scas rclb mov sbb add xor add fstps xor add xchg push push pop jge sub div mov arpl not lret loop xchg fsubr (bad) std insb pushl cs inc rorb roll idivb adc mov (bad) and or lea jecxz inc jg outsb sbb mov xor fsts and xor mov scas cmpsb imul mov cmc in rclb and and and fwait repnz xor imul or mulb repz daa out dec add jmp push push fsubl sti (bad) mov fstl shrl rol data16 sub pushf (bad) ja add cmp mov arpl ret mov adc inc sub repnz loopne dec xchg add and cmp divl sub pop pop addr16 call jmp adcl mov adc xchg lds and imul xchg or xor sub neg push fisubl pop int3 pop ljmp xchg sbb aas jg lods jle call test add add stos or (bad) out dec arpl xchg push sti lret xor out (bad) lret add repz or addl cmp (bad) or or loopne sbb and (bad) xor jmp jmp rorl fs adc (bad) loop std xchg es mov jo mov orb jecxz sub push dec adc adc fnsave sti mov cli pop xor push mov daa sahf pop (bad) iret decb cld push or cmc pop xchg test mov mov sub or inc stc dec mov lahf xchg mov cmp and sub jge fwait incl sti dec xlat mov pop testb push out mov out lret aam lds test mov or and out lahf int3 fs mov or jge mov je aad mov mov sarl fsubrs cmp fistpll mov (bad) jne pop push paddw mov jbe pop pop xor out cwtl or mov pop mov aad or push ds jbe addr16 test inc pop lret mov pop cmpsl jl fnstenv dec mov mov dec call jb mov add inc std popa movb (bad) repz dec dec pop icebp (bad) and roll jb pop ss fadd sub mov mov xor stos sbb and pop leave push ret fs mov lds mov sbbb inc fdivs mov xchg ljmp sub xlat sbb jmp (bad) jle adc mov mov adcl mov dec mul or sub mov in add out fsubrs and lret jge mov or adc das mov in push (bad) stc jne in pop test lds repnz stos xchg roll sbb leave (bad) jnp aas mov repz and movsb ljmp icebp (bad) sub fsubrs sub jl ret jne dec or cli and ret sub sub shlb bnd adc outsb mov xor (bad) sbb dec aaa rorl call push or lcall iret idivl pop sub pop insl sbb xchg xlat jmp xor add mov inc xchg stos mov adc and icebp add cmp jg loop clc mov adc add and and mov inc dec mov pop mov mov cmpsl push sbb and sub in lahf test mov rcrb mov icebp mov sbb ret or sbb and lret mov cmp hlt test cmp (bad) (bad) or or (bad) sub jo pusha test pop daa mov and mov jecxz xchg test mov push daa iret jne cmp or sub xchg dec ja jo dec imul jmp loop sarl push jns push test cmpsl sub mov push mov loopne push fisub push mov repnz (bad) xchg mov mov les mov push jo dec mulb jne fidivr lahf pop sub rol mov mov xor or ret dec nop and dec out subl fistpl into sbb push sbb xchg stc int3 adc mov mull inc stos mov nop daa cmp jg pop jecxz jmp lret mov push out icebp and sub cmc inc sbb scas sub (bad) fnstenv (bad) mov sub jp jae dec lock add adc mov dec inc or repnz int3 jmp ds mov dec jmp add stos fldl sahf push and gs out push xchg test or stc xor call pop pop push adc clc xlat out mov pop adc add imul sub sub or bound push jl jmp or ja notb out daa mov out lahf out popf iret push (bad) sti adc jb push int3 push pop cmp icebp imul sbb and and mov cld jge in aaa das or inc call out mov cld mov mov mov push sbb push mov mov outsl std dec add and pushf sub sub push adc or jne add jne int3 dec (bad) stos (bad) jnp ljmp cltd jnp jnp mov ljmp inc lret aas or rcl cltd cmp jbe daa mov sub fdivs repnz into jne jmp daa data16 mov popf out cmc mov push (bad) std mov dec sbb dec clc orb lds ja mov nop inc popf jne outsb ffreep xor cmp sbb ljmp pop scas repnz test pop and ljmp in mov jno cmpsl aam xchg mov xchg fistp push in add pop adc test mov mov sbb lods jmp add rcrl xchg add ds jo test scas sub movsb xchg inc fs scas dec lret and leave sub xchg or not pushf sbb setp pop push inc jecxz push ret pop mov add and aad rcll clc sbb pop adc inc mov (bad) enter loopne inc dec outsb push negl xor jo add (bad) bnd cmp dec test xor sub ds call cmpl push sub mov lret push lret les mov xchg pop or xor pop sub (bad) pushf mov cmp mov sub mov test mov mov pusha xchg or push ja incb or sub sub ss jmp aas (bad) xor test iret into or fwait in out ficompl ljmp popf dec mov cmp cmp push sbb mov pop mov mov sahf sub add out lods (bad) jecxz rolb divb popf pop xchg dec push xchg cld lahf jae lods hlt scas dec mov push or ficom jb (bad) or xor mov fstpl iret lret loope mov (bad) mov mov out daa xor out fs ljmp add mov sub scas lret mov repnz cmp dec (bad) clc (bad) sub shrb out jmp xor jmp lea std xor imul and cmp jne jne and scas jb repz push pop add mov add (bad) xchg jmp out dec repz pop out add adc or stc jno andl cmp roll cmpsb push sahf or inc out (bad) out push xchg mov daa (bad) jge sti scas lcall xchg out mov pop xor inc data16 (bad) fdiv (bad) out pop nop popf pop jbe sub xor pop mull cltd imull mov and push pop jmp cld out jg push jno movsl push push mov lds testb cmp xor adc cli (bad) xlat (bad) jns mov xlat orb add test (bad) int jp push mov mov je jg push inc xchg jns add call aaa test sti (bad) daa out (bad) adc adc jae pop and lds lahf loope jp pop rclb jp mov loop mov jo xchg pop popf in dec sar mov fdiv xor mov aaa into xor movb mov mov pop and dec and mov adc leave fnstsw push leave gs or xor mov aad mov fdivr lock (bad) mov cmpsl xlat mov (bad) xor inc sub sub hlt adc icebp std push mov fstpl jle adc icebp in pushf mov insl sub push add adcb mov test loop cmp sarl jmp jbe add mov push scas mov dec rorb shrb and fisubrl or cli adc fisubrl mov dec stc das and mov sub repz dec push xor lods leave jge (bad) jmp mov xchg cmc mov adc scas loop xlat les mov xor ret mov xchg cmp jle loopne and addl push repz frstor iret xchg (bad) cmp adc lock xor cmp aas scas and xchg mov pop mov vmrun xor leave cli out xchg ror pop jecxz andb in (bad) xor icebp sbb inc cmp imul lods fwait mov mov cltd shrl mov sete sub mov (bad) repz imul in xchg add mov sub loop sbb mov and jmpw xchg sub clc ret fstpt rep das iret jle outsl or into pop and mov sub xor xor adc ljmp cltd arpl ret inc xor scas lret mov (bad) cmp icebp test inc in jecxz cli sub dec ja je sbb jl ja push (bad) clc cmpsl xlat out push jge mov sub xchg nop jge (bad) popf pop xor mov daa pop lcall arpl (bad) lods lods pop mov pop adc stos jne mov das push callw pop sahf imul sub stos jecxz add mov imul or xchg pusha xor das add fcompl cmp fist out adc push dec sbb orl into xor mov dec add (bad) repnz push fistp adcb and pop addr16 lcall add clc pushl sti loop pop ljmp shll xlat fsubrs lods sbb icebp fisttp sbb push push mov dec adc das ds (bad) fmuls pop out gs xor fiaddl push nop mov imul xchg adc jecxz enter jg sub pop repz shl push pop add movsl vmovdqa mov xchg pop xchg (bad) bound sbb std ja icebp xchg rcrl pop mov cmp loopne jae add adc cwtl xchg cmp push add and xlat aaa not add or insb add xor sbb nop nop rcrl xor dec add (bad) pop popf clc rcrb loope jo js xchg gs orps loop mov shr out push add (bad) jnp push mov mov aam dec cmc jmp daa mov aad mov fcmovnbe add add mov jle pusha int mov (bad) xor push (bad) (bad) or dec pop faddl lahf cmp push repnz daa cmc and subl out add pop mov outsl jmp cli sub inc fsubl (bad) inc push push cmpsl add stc fldenv inc add sbb decb sbb loopne enter pop ljmp loop neg push into mov add inc lret and and add fisubr mov mov out pop divb rcr jno cmpsl push jno or xor fdivl xchg shrb rcrb jo xor and and sub mov je mov jnp and pop fstl mov cmp cli imull pop xor loop dec clc pop pop sub mov lds hlt mov loopne clc mov mov mov cmp mov xchg sub icebp lahf idivb popa shrl xor ljmp test and out repnz mov rorl pop jge iret or inc lret lea jae,pt or mov aaa add or shrb pop mov (bad) lds cmp gs and inc push scas xchg xchg ss fwait jl lds call adc lods loope mov das stos xor mov jp lea out adc sub aad lret out lret (bad) dec add jne les (bad) sbb add sbbb mull mov repz faddl mov mov sub and or and es ljmp sub mov out scas out imul insb popfw ja sbb in sub popa aas add mov xor sbb (bad) dec mov lods es insb push vpmaxsw mov test (bad) mov ficompl es jl imul mull jno add adc sahf mov sahf mov je ja test mov dec cli fs (bad) adc fild outsb (bad) jmp and ds es dec mov and jle and pop out loop xorl lods aam inc popf imul mov sahf push mov (bad) shr cmp pop test mov lods dec ret ja lock fidivr fadds arpl push mov xchg push and cmp sbb and mov (bad) jmp idivb mov xchg fistp add or pop or je push or jne je enter daa pop mov ja cmp loopne cmpsl cmpsb xor test pushf test test loope xor idivl mov repz inc cmp sarl xor xor repz xchg icebp cmpsl (bad) and add mov add push fistp je stos cwtl jp dec or xchg sbb ljmp rclb sub push aad mov jl mov mov loope xor jmp insb mov push xchg es loop pop sub (bad) movb icebp xor mov (bad) mov cli data16 push xor mov xor add mov mov push pop mov (bad) sbb mov xlat dec mov (bad) sub out sbb lcall (bad) jecxz repnz stc arpl push pop stos jae xor (bad) xor loop sub jbe clc add or (bad) fidivrl push mov jl fdivs mov jo xchg out jp mov movsb sti in pop mov mov call (bad) fcmovne jge xor add xor out mov mov int cmp mov xor scas repnz sub icebp iret cli imul mov pop push ret mov or div mov sarl push out das je fimul in ljmp aaa jnp scas ljmp add bnd call (bad) jno icebp and in loop add stos fisttpll aaa sahf dec mov pop lret pop sbb ss xor shrb mov rcrl out push adc or shlb rorb das fcoml data16 shrb nop (bad) in neg inc das jle leave sbb loope (bad) dec and imul sub mov movntps sub dec call ljmp pop daa sbb push fwait cs sahf sub outsl lock std xchg fldcw jle adc jno out mov jne aas jno jo ret es mov push xor in sti or sbb (bad) data16 fild jno or sub ficom mov cmc push xchg mov xchg imulb sti popf dec push js je leave push lcall or das jo push leave js sub ret xor adcl jp mov xchg cmp mov xor scas pop mov lahf inc jle lods pop and cmp push sub or clc (bad) movsb jecxz adc xor jg adc mulb mov int and mov xor fadds mov sub xlat in mov outsb mov outsb aas cwtl cs aas lret fmull and addr16 dec pop jle and cmpsl jmp scas cmp and cmp and sub jp leave sbb cmpsb (bad) pushf fldenv adc xchg jno dec (bad) lret jl mov pop xchg ds add fidiv adc sbb add mov or popf (bad) lret js movl ja or add sub and sub xlat push es pop nop or cmp roll les out lods fwait popf xchg sbb cmc cmpsl (bad) aaa ret pop or pop sbb (bad) and push sub and mov or data16 or and adc or pop xor jmp es inc movsl imull push lret ss cltd and movsl cmpsb cmp (bad) stos mov inc lcall cs andl cmp daa lock xchg mov gs movsl icebp cmp and mov sbb jnp mov (bad) push adc iret mov push jns and mov ss xchg out jmp stos out stc or fidivl jb mov shll mov pop and idivb add popf js push sub xlat loope sub push test inc stc mov or pop fdivrl inc cmp adc idivb out cwtl pop loop pop cmp daa nop and dec adc cld push imul in in das fbstp pop dec adc add mov cmc outsb test sbb mov cmp (bad) repz dec std fstl or add aad dec pop mov jae js add lods add repz push lret test jbe pop jmp mov imul and out dec mov fs test cwtl mov test and mov add dec cmp sub or cmpsb shlb adc repz cwtl jmp mov adc roll cmpsb pop sar int bound add mov sbb imul ja aad pushf and sub inc mov nop mov fnstcw imul adc xor pop cmc adc push das inc dec in clc mov cmpsb jne jmp mov sub dec push mov cs sti or loop xchg addr16 mov xchg add cli sub jmp ljmp out or sub jbe jle out jp sub mov mov pop jbe insb pop ss sub sti jle fnstenv bnd movsb mov (bad) dec fstpt das sub pop lcall mov pop xor sub and int (bad) rcrb out push inc add out and mov jne int jge into out lds fxch mov mov pop push fildll sbb and mov (bad) insb jmp mov pop sti (bad) and adc int inc sub sbb lcall jl pop lahf daa jg mov stos xor repnz xbegin call pop out sub push shrl inc andl out and mov cmp push cmpsl jo mov test mulb jle mov add pop jbe in in stos jg ljmp rcll (bad) ljmp in jp psllq adc test push clc add jmp fsubp xlat inc pop or adc scas jecxz mov or jb or or sbb sub cmp mov cmp jne call mov xor jmp xchg stos mov mov xchg push mov mov lods mov das add xor repnz loope sub lret scas dec pushf xchg stos daa lret fldenv arpl xor add std cmp aam sub and outsb xor xchg fwait jmp popf (bad) addr16 cmp mov add (bad) xor mov add stos mov pop dec jmp popf xchg inc xchg js mov repnz fucom cltd movsl jg adc and sahf jp sbb andb add dec repz fsubrp or or int3 lret out xor and leave ljmp dec stos sub movsl sbb xor pop mov and add xor in adc mov jb dec pop mov rcl xchg dec jmp iret je pushf imul fwait lock push xor xor cmp je fcomps movsb and ss jo add aas divl dec jmp xchg add sub mov mov adc jmp sub rcr ficoml or or jnp xchg add xchg dec mul inc imul xchg cltd xchg jg data16 xchg (bad) jne sub ja mov adc push enter lahf int3 stos (bad) jo and into imul div adc mulb or lods mov aam jo test dec imul (bad) mov mov mov leave mov add ja pop push mov inc into or (bad) xlat fs and (bad) not sbb push (bad) sub xchg (bad) or negl push xchg out mov jo cli pop (bad) cmp dec sub and add std dec xchg lock stos je and mov pop aad xor sub mov inc or mov lahf or ret jmp ja lds lret push pop mov mov jmp jecxz bound stc aaa (bad) mov and (bad) mov xlat mov shlb fcomps (bad) xchg rcll das out add std adc push (bad) jb mov mov push push add mov int inc push mov adc add xor cmp pop mov sub div cmp pop mov shrb push ja mov add add sub sahf movsl in adc xchg imul pop or push lods andl enter ljmp xchg push mov xchg pop push or fldenv add shll pop mov mov xchg fnsave fwait add mov lds cvttps2pi mov in lret xor jge into xchg int3 dec mov pop loope fs movsl push sub pop or in add jp loope or xlat stos pop fsubrp add int3 pop ljmp jns movsl negl (bad) or sarl sub or ljmp test mov ret insb fyl2x outsl test push scas dec mov add mov adc mov mov lods push pushl cs and sbb and outsl loop stos and stc or mov mov jg sti rol cli or sub lret cmp and dec test xchg inc and gs add dec cmc mov jmp sub cwtl add dec add mov pushf add outsb lea jnp pop sub push shl xchg lret stos pusha jl into mov repz push dec out add mov and add outsb cmpsl push sbb and or sbb mov into js fsts dec in notl mov dec add lret pop xor cmpsb sbb aam sbb cmpsl jle lret mov push push cmc ljmp mov jge fisttpll add fstpt push or dec add rcr iret (bad) ss insl sub fildll (bad) lret sub imul std push inc push sub xlat repnz sub pop xor fldcw leave loopne out fwait lock fnsave add xor ja and pop and push mov sub and daa sbb icebp pusha and cmpps lods dec add dec les insb loope lret or in and and add pop ret xor stos and mov push ljmp push (bad) sti mov pop loope sub cmp ret xchg ss push cli pusha push adc xchg pop xor stos mov add lods sahf mov aad mov bound (bad) and xor rcll mov dec ljmp jge xchg sti mull pusha fs pop mov sar push pop adc mov push or loop jae mov call sub pop dec jo or xor mov stos lret popa xchg push icebp push out sbb ljmp sub sub add lods mov or aam stos sub pop or out and mov iret in shr les ret fsubs adc inc lahf and (bad) in xchg cwtl pushf jmp clc xchg (bad) and scas lret dec push mov lds movsb inc inc out jmp rol push sub xor (bad) sti xor mov in dec push loope dec rol or scas pushf mov lods movsl repnz stos sub imul int rcl lds scas mov xor out fldenv mov dec rcrb cmp (bad) and and outsl mov push cwtl pop jmp push jl jmp imul repnz cmpsb pop imul jne mov adc scas popa add xor mov das notb fcompl push jmp sbb mull outsb (bad) cwtl dec (bad) rcrl daa or fdiv jae (bad) pop dec sbb and mov inc mov jmp stc xchg dec neg (bad) mov add (bad) adc insl sub mov outsl (bad) mov (bad) adc and cmp push push cltd jmp fist fsubp cmp mov xchg in adc fs scas mov pop insb pop stos mov pop out or jno dec xchg push xchg decb and push push out sbb fdivl bts pop std xlat pop sub and stos adc aas ret or push or mov std in xchg fsubp push sbbl int adc mov jg push pop stos push nop mov xchg (bad) gs loop fisubr pop xor ja popf rcl mov inc dec inc repnz iret in movsl push add mov pop mov popa cmp into cmp das enter mull (bad) pop dec and mov cmp (bad) hlt xor or dec pushf lret repnz ret fnsave or scas and mov inc jb xor out push ja cwtl add sub mov iret pop and aam mov sub in repnz shr scas subl mov lahf push sbb call out push fnsave cwtl movsl aam pop jne xchg cmpsl std xchg in icebp xchg mov add pop out or out xor mov add std gs lods push or (bad) xchg inc mov bound repz push add xchg cli jb repnz or movsl jne mov out stos mov jae ljmp js pop cli imulb sub mov (bad) into mov in add icebp xchg mov mov jns ja xor mov xor or dec and adc jp das popa push sub sarb mov loope in or jb rcl shr aam pop add pop faddl sub adc (bad) negl jmp leave cmpsl loop adc ret aad fbstp es inc test sbb in popf sub cli xchg sub stc addr16 rorb jecxz rclb add push adc in jp cli sub and stos xor pushl jmp xor xlat das jmp out add xor cmp mov mov sbb je cli fdivr jmp sbb (bad) and pop pop js dec add jge jmp or mov cmp add leave cmc iret or shll dec add add int jle dec hlt loopne rorb lret (bad) and push pop int hlt push push pop mov ficoml dec push xor mov jle (bad) lock xchg lahf xor into push jno inc loop fsubs sbb inc hlt out insb jg mov jnp daa faddl aad clc and icebp cmp and popa call movsb mov jne je sub fadds mov xchg mull add dec test mov cmp addb sub xor call arpl out xchg inc in add xchg cltd incl pop inc test rolb inc pop mov or popa shrb popf ljmp cmp xor or xchg divl xchg imul shl jp ret leave or in daa mov pop pushf and cwtl popf (bad) ljmp jae sbb cmp cmp or das cmp mov xor leave sub jle push jo mov mov cmp xchg cmp aaa or or (bad) aam mov (bad) lock mov add add rorl cmp je in xor iret push cmc xchg jae leave sbb push sub divl add jae mov and push (bad) and call dec stos add cmp mov sub shll adc mov dec cwtl stos sub mov cmp into ja,pt mov test inc rcll stc mov imulb xchg mov out xchg rol rcrl xchg sarb xchg or sahf aaa out inc add das mov popa loop add lcall or or das (bad) icebp fiadd (bad) popf outsb sub jg ljmp fdivrs and xchg out pop in in inc mov xor pushf daa loop ja mov sbb sub adc leave lret data16 sub adc aam ljmp cli les jmp into pop inc testb mov xchg imul leave xor mov stc cmc pop and repz mov xchg jne mov jno dec or scas sub add inc add sub mov push sbb jbe push pop mov aad in or xor scas lock pop (bad) mov std dec (bad) ljmp mov loope das xlat cltd sub lret out inc pop cmp daa icebp inc inc mov popf push push lds add mov into pop sub dec lods jmp dec cmp idiv shlb fld inc sub fdivrl mov pop jbe push or mov adc lret sti sub outsl out or lret mov mov jne iret ja stc xchg xor xchg adc push mulb push aad lock sbb and xor cld xor fldt jmp fildl (bad) or push dec fnsave jno call sub lret movsl nop add mov push and sub pop and ja hlt push loopne out xchg fstl mov xchg outsl jmp add in cmp xchg shrb push insb pop push cmp aas mov and das testb xchg mov popa xor (bad) cmp enter sub or les inc test stc repnz icebp add cmp xlat int3 es movsl cmc int3 inc xchg ret add mov loop dec test mov (bad) addl pop (bad) mov sub icebp aas (bad) add (bad) and jmp scas in lret sbb arpl mov mov into outsb sub popf aam pop (bad) jbe inc frstor dec sbb loop test mov adc int3 lret or (bad) data16 or push repz sub xchg out lret inc push cmp mov cmp cwtl add xor into aam mov movsl aaa pop movsb (bad) test sbb xor ljmp mov inc lods dec aaa inc sbb idivl sub mov dec mov pushw xchg ret add (bad) inc out (bad) push push jl imul stos xor xrelease in (bad) mov sbb dec adc adc jle lret xchg or rolb sub shrl dec ljmp iret lcall jmp incb (bad) ret out mov daa (bad) hlt cmp out sub inc inc ffree push lret jl mov popl lds lods and scas je test gs out dec test mov not push out xchg mov pop lock or dec pop sub mov xor sbb xchg fsubr pop inc inc xchg mov mov adc notl lahf into jp mov inc cmpsl leave or das aad mov notl insb dec sub pop jae jl inc mulb fldl inc out xchg dec dec jge les sbb stc xchg icebp scas test scas imul sbb ja (bad) xlat mov mov jnp mov movsl pop test pop adc lods push mov fistl dec cli lret pop into fnstenv cli push gs test std lret js jge fisubrl mov sub (bad) (bad) mov jge decl repnz inc daa mov push mov out mov scas (bad) (bad) adc cld pop sti cmpl lret add not push and stc sub mov push xchg sub mov mov jle inc lods movsb sarb push popf xchg and fsubrp shlb sub pop inc mov ret inc and mov out cld sti cmpsb pop mov in stos push dec add or out pushf sub adc add das xor xor lahf pop sahf gs out daa xor sbb hlt (bad) rol cmp dec icebp ljmp adc push cltd mov into pop inc mov roll jno ja mov mov fldln2 dec pop push (bad) pop jecxz (bad) mov pop sbb and inc lahf fadd loop,pn test and loope inc add add (bad) cwtl or in or popa jmp xlat jle inc pop mov fcmovb pop fadds or push jle leave fldl imul out (bad) and pushf cli enter daa addr16 xchg ljmp adc repnz dec pop out sub mov leave rcll mov cmp cmpsl mov add xlat mov xor mov rclb iret aaa adc fildll adcb popf outsb jmp push dec jle jns fs lods (bad) pop ret addr16 dec test stos test xchg lods inc daa or dec (bad) or mov gs mov flds fdiv imul add lcall cmp jmp cmp (bad) pop pop xchg adc dec test xor test pushf inc or mov mov popf fdiv xchg xchg pop fisubr add and jmp std jnp mov lret fs in jg mov call in dec mov adc jns movsb dec mov fmul adc sbb mov (bad) fadd sub loopne cmp inc or mov pop into or mov stos scas loop (bad) testb insb adc repz jmp jmp mov mov jmp mov daa mov mov fxam test mov outsb ljmp and in lods push sub or cld cmpsl fs fcoms sbb ds int3 aas and mov add in mov repnz psadbw xor movsl orl insb imull jmp or xor ret repz or cmp lock dec ljmp or and pop xor dec movb in ret mov jg cmp sub cmp (bad) and test int3 sub out xchg nop sub daa mov loope mov mov insb mov iret mov push pop jnp inc sub adc dec out lret fisubrl mov (bad) out inc add sti test xor aaa mov mov mov adc jl (bad) (bad) stos dec push cltd and sbb adc or rcrb sub mov mov pop mov mov push gs push xor shrb rcll test sbb das out adc mov cmpsl loopne (bad) mov (bad) xchg jecxz dec (bad) pop stc test idiv pop xchg dec xchg int3 jns popf push leave dec cmp (bad) and pop jmp pop in daa fstpl fbstp fwait js sar inc dec adc aam and fs out cmpsb cmp rol inc add out and mov xor inc test pop cmpsb pop sarl push lret lret jns daa lcall pop adc std dec call lcall xlat mov bound out sbb mov js ret call add js shrl in mov inc or push (bad) mov mov ret sub jle loopne jge ret std movsb or push jl sub pusha jmp fucomip daa push add fidivr jp popa clc sbb cltd in mov dec int outsb test cmp fstl xchg lcall aaa or loopne mov out pop call sub pusha xlat (bad) push arpl mov scas cmc test cmp je rcrl cmp xlat in cld add cmp stos xor and rorl fsubs (bad) xor jmp repnz (bad) jle ret arpl sti mov repnz dec sub add pop lock add mov lret mov jge or sub enter lret xor or enter sub xor (bad) (bad) shr repz add adc mov mov stc fsubrl sub jbe jb icebp and mov sbb pop ror aas xor adc xor int3 imul sahf mov or and dec js dec shll push inc aad out or and sub mov ret inc cmp loop pop or sub or mov fisubl sbb call ljmp (bad) mov push popa mov mulb add and lret lods add or scas or ficompl xor jmp rcll sub push test fisub mov or repz mov (bad) stos push mov lret incb add cmc dec sub sub pop je xchg lret popa pop cmp xchg push mov or sbb inc jle sub cli cmp repnz sub xor pop call pop or sub jnp stc mov (bad) or mov jbe ret cli aas mov sti mov cmpsl shl pushf gs icebp push add jmp pop test sub mov mov adc fs dec or pop fiadd mov jmp inc add (bad) xchg (bad) repz ffreep scas mov xchg outsb aad mov lret sub inc xor and mov scas fstpt leave jle add and jg jg hlt pop mov and mov (bad) aam push and lock mov fist xor add lret dec ret hlt sar test scas xor (bad) pop insb (bad) jle jl xchg ja pusha cmc dec mov (bad) sub out ljmp call hlt xchg iret int3 dec push mov lcall and add inc rol mov leave push stc lods dec push outsl dec les outsb popa xor xor mov jne loope sub cmp ss or inc je and (bad) movsb rolb jne imul cltd inc push xchg loop fnstcw aad dec xor mov stc daa shrb into jecxz and repnz popf adc xchg push into dec sbb int3 mov movsl cli int3 xchg pop sub movsb push adc and cli sahf mov test sbb sub dec lret int3 add (bad) stc jmp or call sbb out mov out inc xor (bad) sbb pop out popf ja (bad) mov or or xchg cld test inc or loope decl gs (bad) jecxz pop cld stos icebp and ds in or repnz and data16 in (bad) hlt push cld fwait push dec jbe gs in aad int fincstp imul mov aad fsubs ss adc daa dec into pop push ja das (bad) and mov jge dec js or subb mov push inc aas pop outsl mov scas aaa in into fwait xchg push sbb cmc inc lret xchg sbb out outsl adc or and shlb lods jmp xor jge xchg inc sub push adc outsb sbb jmp xor mov xor xor fwait rclb lret stos cmpsb (bad) dec clc jg push pusha push imul cltd in movsl push cltd xlat jns sbb fbstp pushf mov lds int or (bad) adc stc mov or fmuls sub ljmp pop pop sub mov pushf mov inc rcrl in lds (bad) mov gs andl in sub rorb pop test or pop dec (bad) jb ffreep movsl and jns jbe pop or scas int3 sbb or xor add pop adc sub ljmp fs pop aas loop (bad) mulb repz jb or fbstp dec jo addb and mov rorb cmpsb mov gs je imul mov pop (bad) in (bad) sbb add (bad) dec popa inc or inc fs stos idivl repnz cwtl inc out jecxz push mov shlb sarl push daa inc cmp or jle ja test pop popf dec mov xlat sub mov scas lret jecxz jg repz jbe pop mov popa clc lret das popf dec lods mov js fisttp mov add inc xchg pop test (bad) xor mov int3 lods mov movsl push adc lahf inc imul sarb (bad) jmp mov ror mov dec (bad) mov rcrl inc dec leave ss add test (bad) mov jmp push es pop jge enter push aad sub mov jmp jmp stos cltd jb cmc mov add xor dec bswap xchg jmp roll aas sub xor pop push int3 mov dec fimull mov jle sbb xchg pop ljmp push out cmp mov cli call into xchg cmp stc int3 push xor lock cmp fiaddl pop dec int mov ds mov mov sub les icebp ljmp repz cmp push and xchg in and sbb mov cwtl (bad) mov push imul jns popa adc pop xor xchg sub adc out jno imul inc (bad) xor ret scas mov jmp push leave or iret inc dec mov jmp nop jbe pushl adc (bad) iret dec push pop lret ret pop or testl hlt scas hlt xchg leave loop adc lret popf cmp bound ret push mov jmp pushf mov push gs (bad) leave mov fnsave cltd aam imul or add mov popf jl xor jmp push imul rcll jg sbb sbb outsb (bad) xor mov jge sub xor pop lods or sbb comiss sahf xchg pop mov xchg loopne testl insl in sub lods into cld clc pop pop insb test mov jne jle shrb push xchg jg push sub mov xchg jecxz cmp ret sbb out jmp (bad) dec test movsl push loop xlat mov jg fldt mov gs lret cmp mulb iret add jne lcall xchg xchg enter lock cmp jg mov rcrl arpl mull lret cmpsb mov sbb pop push out sub pop cmp stos xor lock jg shrl or mov sbb sub add and hlt sub fsubrs xchg inc movsb add push mov fcmovnu sub movsb mov nop stc pop mov enter clc ds ja jb roll pop nop and cmpsb into data16 inc pop out inc and push fldcw sub add mov ret sub and shlb sub dec or lret popf cmc lea pusha or repnz pop or out pop das and popf pop or cmp push and xchg (bad) cld pop pop (bad) cmp dec dec mov mov pop cmp into je imul pop xlat clc (bad) mov jg,pn adc xlat dec mov xchg std sbb (bad) sbb mov dec ret clc add pop fmull push lahf popf jae sbb sub es pop fdivrp xor xchg clc jmp sub cmp aas (bad) fadd push pop gs cmpsl cmp xor mov pop cmp or sbb daa out (bad) cmp test (bad) xlat fisubrl in mov jle or sub jmp xor cwtl lcall fyl2xp1 icebp xchg (bad) lods repz or inc push scas jne loopne adc jmp dec xor (bad) arpl (bad) jmp test into out jne xor and mov mov dec add sbb rorl mov mov out and add subl and ljmp (bad) repz dec add cmp adc sahf (bad) inc lret frstor pop call xchg mov icebp sbb or sbb and iret mov jo lret ja add sub daa (bad) cmp jbe jg out adc ret pop call pop cmpb ss sar sub daa xchg add or xor jno adc lods in mov jne (bad) jmp sub xchg (bad) jb dec xchg xor push ret pop mov enter cltd add dec outsl sub sbb (bad) or or cwtl hlt xor nop lds into push pop cmp fs loop mov mov jmp ljmp fwait push add sub cmp aad cmp loopne sub mov adcb ljmp sub fdivr adc ljmp or cs cmp gs mov sub add in xchg lahf dec and (bad) shr and adc and mov push jmp or fsincos inc ret or mov insl push mov mov hlt pop push mov lods mov jg aam fs ret inc cmp jecxz mov les pop into and xchg xor mov (bad) mov outsl in mov add push icebp cli cmpsb mov mov mov movsl xchg sub shrl imul pushf mov pop add mov push or mov xor mov out inc and sub add jge add rorb xlat or js xchg jle shr xor sub xor and imul sub hlt insb call movsb mov aad dec ss sbb outsb adc xchg mov mov addr16 and pop and nop adc lds xor xlat push leave dec into scas jne xchg jl or adc (bad) mov (bad) mov ja pop es (bad) lret inc iret rorl cmp sub call pop add aaa (bad) jno movsl jg fmull out push jmp mov or adc mov in imul xor xor (bad) fcomps and or sti jge lods sub push imul or dec lock xor scas add sbb iret rclb cmp stos cwtl pop push loope and lahf dec out lret shll mov sbb xchg out fs mov jns push or (bad) iret leave jmp mov push or mov ds dec std pop sarl in jno mov add and test shrb lea push adc clc xor xchg xor fcmove xchg jo jo mov in les push jb (bad) dec mov jg pop sti sub sub (bad) mov xor (bad) xchg xchg mov mov clc pop mov cwtl mov xor mov sbb pop sub outsb dec scas gs mov push dec or mov fisub stos dec or sbb ljmp push aam imul or mov cld add cmp cmp inc shr lret mov outsb mov je xlat mov stos pushf push jno out cmp sti fnsave out gs out ret mov sti das (bad) push jg jecxz enter aad inc sub aas js adc xchg idiv adc loop mov notl lods lahf jne sub mov into dec (bad) dec mov cs (bad) push mov subb mov sbb xor push or std in and test shrb stc into dec xor clc sub mov (bad) pushf nop daa outsb (bad) mov scas fildll xchg mov mov push scas out dec fwait sub mov cmp or mov insb cs mov jg xchg addr16 and sub ljmp aaa sub lds and xor xor fwait dec xchg clc inc test xor lcall sub sub or repnz dec mov and daa xor jnp sub test pop push mov pop movsl mull stc cmc inc (bad) hlt shrl clc popf mov push pop inc add or rorb mov sub mov or pop fnstcw and add pushf (bad) dec mov ja fcomps or or mov into outsl push lret fcoml dec stos into aad xor mov out mov pop out in mov inc xlat jnp mov aam mov mov cmpb add enter imul (bad) cmpsb fidivr jbe jo add dec sahf mov and mov pop add popf rorb notl in xor divl aas pop jg push mov sti fwait repz call repnz pop repnz cmp pop mov outsl adc adc sub loopne cmpsl sahf dec repnz sahf mov cmpsb or mov xlat dec icebp xchg or out xchg repz sbb xchg ljmp pop push pop sbb sti lods mov (bad) jmp inc repz sbb pop lret cmpsb in stc xchg xchg xor ljmp daa pop fcmovne insl cs outsb fmull ds push imul push cld outsb (bad) or lret cmc insb jae and lret test xor divl dec (bad) mov ffreep sub cmpsb mov pop je imul xchg stc mov ror xchg idiv inc cwtl movsb sub jmp or (bad) stos push dec out das or into mov stc rorl cmc xor gs or inc loope lods and sub sub dec xchg ss icebp push gs out fnstsw xlat into dec push leave jmp sub ret lret xor mov out xlat gs test popf push pop jmp sub into ret pop mov ds mov out and (bad) xor lea dec xor leave mov and sub test push sti movsl cs push inc into jl loopne mov and int pop test (bad) stos sub mov lods inc sub jns inc testl fcompl int3 dec jne pop pop mov push out iret pop int3 lcall mov mov pop and mov clc push out sub and cld dec aam pop dec inc aas das lock fxch jl xchg cmc or inc push in ret and fstps loopne iret sub sarl push xor ret cmp test aad xorb icebp addl loope push pop into sub adc xor pop daa mov in test xor cli mov in adc dec jmp (bad) add mov xor (bad) (bad) ret fwait les gs or (bad) xor ret das stc jbe leave mov in and nop xor push testl cltd push out sub mov ds inc push sub (bad) mov fcoml mov jp lods fsubs push add dec adc scas repnz (bad) repnz mov in mov add jmp mov lcall xchg jmp adc mov xor fadds pop xchg into sti jecxz sar lret and xor clc or shll loop push or jo es sub scas je lcall gs cmp stc sub dec mov lcall imul (bad) mov loope je mull cld push mov ja ljmp dec mov ret mov clc lcall mov mov xchg dec int sub bound call dec xchg shr mov push sbb sbb das adc pop lret inc lret cmpb (bad) (bad) rolb xor sub cmp jmp or jecxz movl (bad) data16 cli mov dec dec sub mov inc pop ds sti jg xor add xor loopne or sub data16 stos jo xchg or adc int3 sub mov xlat xor repz es add cmp xor scas repz push sub sti push mov mov sbb jle mov mov cmp adc jmp mov fstl pop mov xchg ljmp nop add or call and orb pop cmp adc xchg jne xchg adc mov lahf push xor push cmp clc test xor inc inc sub out mov cmpsl cmp dec daa (bad) sbb cs push push mov dec fdivl daa mov fadds gs std pop and fidivr adc push repnz out sub fucomp scas daa out add xchg push add movsl cmp rcrl and sub notl sub rolb mov icebp sbbb or sub mov mov mov divb xor outsb cmpsb pop mov xchg inc mov jbe sbb jmp pop sti jns,pn and ficom jg scas or clc out call pop (bad) mov adc sub mov fldenv mov jmp cwtl push cmp pop mov mov push jae xchg and popf outsb xor shlb iret and out imul pop jmp enter adc (bad) jae sub jo pop pop (bad) cmp add mov xchg aad pusha xchg add mov cmp shrl sub mov pop jl ret push je out inc lret subl pop dec mov xlat imul loopne (bad) shrb (bad) and pop sbb add mov popw insb movsl jae jbe and cmp ja stc lock sub mov mov lods inc les int sub dec fstpt jg (bad) push inc mov jo and cmc in and dec pop xor stc jecxz lods shll mov int push jbe sub dec aam pop sub mov cmpsl ja call add cmpsl idivb lods pop mov mov imul mov outsb gs dec sbb lods or push fsin (bad) jmp mov (bad) out out test movsb loope das sti pop lcall push fildll push sbb stc cmp arpl test pop jno or lods jae lret pop sbb add lods pusha xchg (bad) aad and inc outsb cs mov adc push incb cmp pop int3 je movsb adc or lret mov fdiv pushf add sub xchg xor mov lret pop mov dec in inc das ret stc mov daa add aaa int3 push and mov imul or xor outsb jmp inc xor sbb and jnp sub repnz lock dec test or sub cld test in lods mov lahf pop or mov xor lahf ficomp imul loope pusha aaa pop bound cli aam (bad) repz sub add incl lret add add aam stc jg push pop xchg dec cltd gs xchg sbb mov pop xchg jg repnz dec popf cwtl push (bad) fninit dec fs mov adc ljmp imul out ja inc cmp dec pop and mov (bad) mov push ret pop loop and mov lods in (bad) mov add fistp and mov out push pop push in int3 pushf (bad) mov mov inc (bad) mov pop xor push sar cs mov data16 dec sub out ret icebp ds loopne repnz xlat out int3 inc fstps xchg rcl mov inc xchg adc loope pop pop call addl push lea mov stc and xor int3 lret mov stc (bad) leave mov nop inc and add pop pop outsb ja mov scas cld jmp (bad) push les cmp push pop stos inc and jne enter or or mov inc sarb test inc repnz out and sub out je mov jae ja xor fbld mov push xlat ljmp mov in mov dec ret push mov call jmp lret out adc mov sti xor sub test mov sub xor cltd ror (bad) repnz (bad) ret ja (bad) jnp xchg or add dec movsb (bad) and cmp pop repz jns pop sub popf loopne out add adc sar lods jecxz cmpsb cltd les pop push movsb jmp add push dec pop xchg fsub insb mov lds fidiv jmp arpl adc sbb mov xlat into add pushf ret popf (bad) cmp (bad) (bad) sub decl icebp dec xchg fist adc pushf mov stos sbb fucomi movsl (bad) scas xchg mov bound xor (bad) mov sbb bound int popa cld outsl aam mov sbb jmp or movsl inc repnz xorb aam leave jge dec inc xor outsl mov or xor xor inc dec cmp fcomps popf xlat xchg xchg mov lret pop loopne fcomi icebp popf pop or in cmpsl outsb mov in repnz mov cmc add inc dec sti mov rcl jmp shrl cmp push sbb sub roll push aas push lret (bad) mov shrb mov mov pop sub push lret out cmp (bad) popf jge or ja pushf rcl or pop fist dec loop inc fcmovu add pop fisubr das jbe jmp mov push mov das call mov cs call mov dec loopne into sbb repnz adc mov and loope jge lret sbb daa in jge rorl (bad) dec pop sti bound (bad) int3 inc jbe mov test adc and xor and ljmp pushf mulb lock and fsubs or sub test sub pop push pop mov imul jl daa inc das and cmpsl push fist lds fisubrl rorb icebp fstpl xchg repnz sub push adc cli lods mov inc dec stos int scas insb cmc cmp xlat adc test sub pcmpgtw imul or xchg cs cmp pop jle cmpsl jno imul scas push idiv sub out xlat push loope cmp mov repz pop push les (bad) in fmull scas mov pop jle fstpl lahf fcmovne or stos inc inc daa add or mov add jecxz push scas les cs mov out dec inc cwtl jg loope mov test xlat sub mov imul mov xlat xchg pop dec fsubrp pusha ret xor mov sub xlat sbb xlat inc ret and or lahf negb out inc dec add mov mov fsts in push insl out add leave adc adc jmp sti loop cmpsl imul jmp sbb mov push pop push iret or insl daa rcrb dec stos repz xchg shll loope cmp and xor pop sahf adc mov ljmp pop hlt cmp das mov xor popf fidiv or pushf push fs sti repnz je bound stos lret and sub add dec mov xchg mov xchg mov ss jecxz js push fbld neg cmp mov xchg jl jmp sbb fbld adc dec lods dec dec or sub add jmp push push add lcall mov xor adc adc repnz jb and dec sar xor ret pop push mov xor in xchg cli lods mov push rcrl and ss sub xor hlt out mov mov mov and add adc testl and das sub fisub clc clc call mov dec mov or mov pop rcrl xor push lcall jb (bad) fistp pop outsb push cli fisttp and rcll movsl notb fmuls xor and xchg jnp xor mul pop clc mov xchg (bad) cmp mov add fidivrl xor roll fimul fs and ljmp and loop repnz sbb lret gs jg div das mov push lds xchg pop push int3 mov mov fdivrs sbb add or mov mov cmp daa loope fs push mov jmp and fdivrp fpatan es mull or sub mov lcall scas lret and sub testb (bad) or iret rolb and out mov sbb add adc outsl je scas sub xor xor daa (bad) testl add pop iret nop lds or add fcomps lods das adc or imul ja (bad) inc mov mov rorb and xchg (bad) std jne pop mov pop icebp fsts and frstor gs cmc movsl cmp sub sub lret or inc xchg hlt shll iret daa rol adcb xorb xor jmp push or jmp push repz neg aaa jae pop into cltd das fdivrl push pop hlt cmpsb imul out ds bound out xor cmp mov hlt rcr pop jno out loopne cmp mov dec psubb xor (bad) scas fldcw imull inc adc ret std aas (bad) testb add outsb push arpl jmp pop ljmp popf jmp mov inc pop and ret ret xchg loop fnclex rcr das dec mov lahf pop call inc scas sub icebp push sub les sub cmp sar popf faddl je inc sub xlat in mov add and outsl xor xlat out and mov mov cmp inc inc add add clc push mov mov push fnsave shrl mov dec jb inc lds arpl and add (bad) out stc xor lret xchg jle (bad) pusha into jg inc dec or cmp popf cmp push lcall jne mov adc stc mov daa (bad) bnd daa and push xor sub mov in lods daa cmpsl (bad) sub cmp mov mov xlat jno dec out add xchg insb mov ljmp add ljmp mov jl in cmovne mov out pop rol sbb in rcr ds jmp or xor lcall xor das or pop xchg push orl loope loop rcrl dec ret xlat lds scas dec fs sub mov fwait mov rclb gs popa loope mov inc pop or aas ds ret jg cmp lcall lock idivb push out push mov pop fcmove push movb xchg pop pop je int jmp mov push jmp int3 js in (bad) popf call add stos cmpsl mov out orb add add sub (bad) std stos xchg mov jo movsl inc mov adc stos fnstcw fist lret stos loop xchg (bad) or mov cli loop shlb sub cmp sub mov (bad) test leave add out and cwtl add mov pop aad mov cmp dec pop movsl aam sub repnz sahf cmp add cs jle jo into mov add pop mov dec stos mov stc scas xchg int3 test pop mov fisubr lret int3 or mov les out mov iret dec int loope outsb std andl mov or sub add mov pop leave xchg xor in xchg (bad) jno outsl push mov test or adc mov mov push jno inc enter xor insl add sbb loopne jae pop inc push ret ja std repnz jo idivl or and sub lods jg scas mov sub ret sbb idiv inc sarb mov or mov (bad) and mov pop jbe insl je iret and lret insb push pop or loop daa and sbb test sti mov aaa inc inc push jl sbb loope sub sub dec shrl dec mov sbb or fnstcw ror pop sub int3 repnz or pop pop push sub movsl cmpsl adc mov test pop add (bad) xchg pcmpgtd pop cmpsl (bad) adc pop or (bad) mov nop ja fsubs push xchg cli mov pop sub pop or push xor sub cmc inc jl fsub jmp jl leave rcll pop dec xchg shr pop mov mov ja pop add movsl push jno adc int3 mov outsb sbb shrl pop mov pusha inc jmp inc jb xchg xor sub scas imulb loop stc rorb mov jne mov das test dec add into sub and fwait sbb xlat mov ret jno xchg xor mov dec lcall cld std in test vcvtsd2si xor push cld adc inc push and or rorl ret out mov (bad) imul loop xchg xor mov stos popf stc mov iret cld sub jb lret xor out sub loope inc pusha or and xchg repz adc cmp movsl mov fs cwtl xchg scas movsb imul add mov cmp pusha mov fisttpll xchg add and ret shll xor add push es mov sub or xor lahf sub pop cli repnz dec nop adc pop add aad test daa sbb inc sub and popf test mov fsts jle inc mov and lods jle daa push inc or adc pop dec mov push ljmp jg sub adc clc xchg shr std sub add or or inc dec scas gs add (bad) cmp adc mov lret ret divb scas std lock jae jbe ret outsb iret mov sbb das mov xchg stos add push movsb lods lret cmp (bad) (bad) dec sbb mov into sti pop gs stos or leave das jle pop testb xor into arpl pop xor jmp sub addr16 out lahf dec aaa pop sub out dec mov push sti (bad) ds out into dec aam daa je push out jmp lahf pushf jns sti mov add jmp jb into jg add les push sbb mov xchg jmp clc mov cmp dec sub mov sub scas mov in sub adc or xor (bad) mov into gs cmpsl jne mov ret and (bad) sub xchg mov mov ret and sub test push stc lahf jne pop mov cwtl xchg cmpsb or ret lods xchg pop lret dec xchg loope cs and cmp and bound mov sub movb shl cmp into scas mov lret xchg dec stos cltd movsb push jbe cld loop jmp scas rcll les or push idiv lret aad xlat mov sub mov mov add cld out pop or mov addl inc and sub fisubl addl rorb fdivs mov mov outsl xchg adcb ja lret (bad) or add cmp cmp xchg mov xor push push pop mov push ror test ja add pop add jg ret lds jl (bad) es jbe neg push push push jns shr pop mov outsl and movl repnz insb cmp loopne je and lahf sbb jmp push out add in ljmp test push inc inc inc popf pop mov mov add or lock test add loopne dec jae int lds clc lret subb cwtl dec mov shll mov pop sbb out in add jge mov dec dec scas inc roll neg inc cmp pop add xchg jecxz lahf (bad) cmc jle push or imul cmc add (bad) icebp adc sub cmp lret jecxz cwtl int sbb adc jecxz lret cmp sub outsb inc (bad) insl mov fnstsw fiaddl pop push cmp fstps push add adc xor xor push rep xchg pop dec iret mov mov push in inc cli daa repnz pop ljmp mov mov inc and sub daa or loope out lret mov fcoml xor (bad) notb mov subb push push mov jbe pusha sbb pop xor rorb test addb ljmp movsb mov push lret adc hlt testb cmp adc or jmp loop leave ffreep sbb fldpi imul jbe inc iret mov inc mov flds mov stos xor mov ljmp sub mov mov in mov repz pop popf data16 pushf mov jecxz nop xchg dec xor jge es pop loope pop and or mov xchg jmp imul rorb and xor or adc and inc (bad) dec and ds sub or and out popf aam pop ja cmpsb mov test int or inc mov xor decb mov scas scas push sti leave jl sub or inc icebp inc inc and xor jl push ljmp (bad) and sub jae push ljmp inc leave mov push and idiv dec lods xchg cltd inc fiadd cmp mov ja stos sub movsb lods pop in pop (bad) dec mov or xchg push pushf xchg xchg test cli jmp inc xchg (bad) std or aaa mov mov ljmp fisubl xor test sub push add adc pop loop mov fsubs xor loope sub sub les into clc in lret fdivs dec aam mov sarb xchg sub sahf inc xchg dec lret add bound leave push insl jmp ljmp outsb insl mov xchg push jl sub jbe pop mov hlt enter xor xor add push stos lret sub jge aam stc jb lret and fs cmpsb sub faddp push or pop aaa adcb adc sub inc jbe mov mov and mov leave or lret adc out jnp adc xchg cwtl xor and stos mov push popa jmp in das adc adc (bad) xchg xchg mov push enter xor scas int insb or das negl cmpsb stc adc sub and push imul leave push hlt je push add loope mov or pop dec add or out sbb mov jl or cmc in and lahf rcll mov ret xchg inc cmp gs mov jns dec pop aam ret xchg mov pop jmp jne mov (bad) fwait add mov aam popf jp jb ret (bad) xchg sbb pusha xor or ret pop and mov repz (bad) jmp and dec (bad) mov jmp or movsb xor mov inc rclb jbe push adc xor inc inc ljmp jbe or adc or sbb jns ljmp add nop inc sahf mov sbb loop pop call jnp das lods mov or sbb test fnstcw dec mov add cmpsb mov or dec sub sbb pop stc dec in jo ret xor dec xchg sub sti je (bad) repz aas mov add fcompl push jle pop (bad) stc add or mov xor cltd fs decb test sahf daa fsts or sbb lods std sbb mov call sub sbb rorl ret push mov repz xlat mov adc mov fucom jmp mov pop leave jecxz sub ds outsl je or jmp fsubrl sub icebp stos loop lret ret pop lea mov cmpsl cmc sbb aad gs mov in clc mov pop daa mov push pop push stc add test add aas stc mov or xor clc fisubl inc xchg sbb xchg dec adc jmp insb sbb in imul and lds push and stc popa rcll mov (bad) out negb dec mov inc ljmp sub vcvtss2si xchg mov not mov and fldcw dec lret test pop jb mov icebp fistp mov dec or out mov repz push bound stc pusha ret ds jmp adc mov xor mov cs loop mov xchg mov das shll mov stos fldenv lahf inc xchg sub enter ret pushf cmpsl sahf xchg dec icebp inc xchg idivl jg icebp dec lods bound fs fstpt cli ret int3 push rcrl stos mov leave sub fdivr ret notl dec repnz inc ds divl cld inc fsubrl add cmp cmp das push jno inc and push or fdiv inc jne dec jns adc loope add sub icebp cmpsb cmpsb or icebp dec imulb out fnstsw or xor pop pop push (bad) xor daa jge loope xchg fcoml jge or jecxz and pop sub jp pop ret mov dec add and stos je stos push dec mov dec cld bound jae mov lret mov (bad) pop push shlb iret mov imul decb mov jne add rol sbb add retw xor vmovaps lcall dec mov sub sub and sbb (bad) enter or loope lock cmp mov sub jmp adc loope pushf setne pop mov (bad) idivb add mov leave xchg fdivrl out and push or mov dec sub xor xchg enter xchg mov out inc ret test es sub les dec enter push jnp cli jecxz pusha ljmp xchg or fstpt int3 pop lahf cwtl dec stc mov sbb push dec stos cltd mov cmp nop and jae mov test pop and or stos scas jle adc sub mov jmp cld and mov jmp adc jecxz or and push mov jne fstps sub sub pop mov jmp out dec stos je xchg jae sbb cltd mov cmp iret push pop stos call repnz xor pop mov add mov sub iret stos fldenv call lret cmp jle daa lock decb xor lahf (bad) sbb or or cli inc adc add lcall mov xor outsb cld mov daa data16 (bad) sub rcr cmp push repnz pop daa pop dec mov cli jg sub inc sbb rolb (bad) inc jmp pop adc cmp cltd mul out cmp sub mov or addb mov fist and sub pop cmp cmp (bad) pop push sub add jbe iret ljmp insl sbb test jl leave lret rolb bound mov nop push sub lahf pop nop or rol popf sti movb or std ror or push mov jne xor stos xchg cmp pop cmp jl (bad) lret inc and clc in or (bad) or jmp aaa movsb stc je leave push lock rolb shrl (bad) xchg call stc xchg push xchg jb xchg push iret insl xchg cltd dec ljmp mov stc mov or sbb and fstps (bad) xor sub and xchg mov or scas sarl out mov aad fmuls movsb es pop or lods adc sub jmp (bad) pavgw adc or scas xor ret cmp sub into das add scas gs (bad) or push push (bad) push and and pop pushf add test stc dec lods aam add mov jmp cmp or in jp mov andl lcall jae repnz sub mov push ds mov out pop bound (bad) and mov loop aad sahf pop jnp lods cmp imul cmp in xchg dec hlt sbb dec cmc daa sti fisubrl pop mov sti in (bad) gs sti fs mov adc jo jno sub bound lcall or imul xchg (bad) std or inc mov sub mov pop cmc pop into sub or inc push loop inc pop pop cs push or sbb lock or call scas sub fistpl test dec pop push ret and fidivrl mov xchg dec lcall and mov out add mov leave add mov cmp dec mov and ljmp inc fidivr movsb pushf das idivl xor mov jecxz fwait rcrb cmp fisttpl lret lret arpl (bad) mov pop cwtl fiadd ficomp cmp add faddl fadd imul mov pop add mov jo pop ret push repnz xor (bad) std lret stos out dec or popf inc xchg xchg ret (bad) mov xchg mov and fcoms pop into mov test jne or lods pop adc and xchg add popa int ds jno and jne sub mov mov jno into inc sub mov fsubr shll ficompl rorl repz or into push lods or das imul lds adc and loop leave xchg negl je sub jg add (bad) mov cs or xchg bound push imul sub jns call sahf push js push cmp lds movl cs jne (bad) fdiv or jnp push cs dec int3 in pop roll pop xorl sub in mov int3 jbe (bad) sahf fsts loop (bad) es mov mov repnz push jge out xchg mov bound sub loop and push mov mov bound shrb repz les xor xor test or adc (bad) and lcall loopne mov mov inc push sub into xchg dec sbb das mov xchg or mov inc leave mov je in pushl cmp push jmp fdiv jbe and fnstcw out adc sub scas fnstenv or mov sub lret insb ret xchg xchg pusha mov sbb pop mov test xor push push sbb xchg fsubrp notb dec jmp js and mov dec mov pop pop std push add daa mov (bad) mov (bad) ljmp xor (bad) mov dec test (bad) test xchg inc mov mov ljmp loope insb (bad) lahf push add dec add outsb lods ret pop scas sub gs ss lea ljmp cld leave push (bad) push mov push dec sbb lahf dec scas ss xchg daa sarl inc and adc xchg xlat andl dec adc adc cltd xchg int3 sub pop aaa mov mov mov mov stos add jmp mov scas push iret (bad) xchg rorb sub pushf int3 idivb push xchg cld add pop movsl (bad) scas cld cmc mov sub (bad) push out lret mov imul add out dec jg pop icebp jge ret mov jbe mov jae adc mov movsl mov cmp mov mov lret or and mov cmpsl jne fwait ret fmuls shl and mov xchg push fidiv test fistpll adc cmp insb lret js xor subb cmp mov cmp out mov ljmp mov jnp bound or roll or adc xor or push push ljmp push (bad) sahf das movsl in xchg add int3 ss aaa popl mov xchg test dec test xchg cltd xor xchg lcall xchg cld int jmp pop clc stc in addr16 jmp pop xchg or and arpl jecxz xchg mov mov xor mov sub pop addr16 mov add fucomi sbb dec mov mov push dec shrl dec inc jp repz add ret movl dec rcrb fildl pop (bad) (bad) pop ja fldcw leave loop xchg scas cltd pop das call cmp test add and jnp sbb and dec in daa sub cwtl imul lret pop mov and leave inc sti xor fmul mov rcrb shll mov lods (bad) lods jns inc sar mov dec cs aaa gs cli jecxz daa jmp daa (bad) mov push out jecxz dec clc cli cmp dec mov pop lea call cmp jmp or pop adc rcrb gs ss sub jno (bad) add mov ret dec dec and inc imul jle push jnp xchg orb cmpsl cli inc out das adc inc stos sub test int3 push cs add hlt xor mov es lcall adc jmp aaa mov insl lret mov pop subb (bad) inc mov add scas lcall push ret test lcall pop arpl mov into fwait (bad) and pushf fcoml adc xlat mov xchg pop out cmc loop icebp fmull ljmp outsb mov sub ja mov add xchg xlat pop in dec dec cmp pop inc imul cmp add dec ljmp mov adc add (bad) pop out out into push jle idivb and mov test jmp fmuls mull (bad) jl add not push out adc add sub push push or push inc and add xchg dec lret pop and xlat adc sbb fs jmp inc sbb mov adc ljmpw test xor xor imul mov sub fnstenv jno jl movsb stos mov dec pushf jmp mov movl lds xchg (bad) call dec cli sub outsl xor or leave fsubrs dec leave insl adc sub ljmp cmpsb jecxz repz int3 (bad) pushf or xchg sub cwtl movsb or xor (bad) dec movsl fstpt jp jnp cmp pop popf mov sbb pop add loop pop pushf in (bad) mov cmp jne mov daa jge,pt pop inc loopne inc fist dec outsl stos jge ret xchg in or push or push inc sub add fmuls xchg inc loope hlt (bad) fs (bad) out pop fnstcw mov jmp sub and notb mov jae rcl loope xchg imulb ljmp fidiv insb pop lret insb mov (bad) cmp roll or fild lret ds pop fstl inc lock aad movsb xchg in push pop jae loope test push negl popa fisubl in mov clc out xlat lret out in test lret ljmp popf ja pop dec sub cmpb movsl sbb inc jnp and inc and repnz mov and add fnstenv mov cwtl lock je mov lods (bad) jp iret lods inc dec repnz leave ret jae adc mov dec mov scas mov mov stos mov (bad) in cltd pop xor adc xlat mov sub (bad) lret (bad) adc mov dec imul pop addr16 push inc adc cltd outsb and add test fstpt inc ret loop jge fsubrs loopne and std add cmp adc sub jmp (bad) sbb push gs cmpsl sbb jp jecxz mov jbe jne xor mov lcall adc or jge nop xchg enter repnz push sbb jne jmp idiv sub cwtl adc add pusha or or (bad) dec push push xchg lcall outsb inc enter jae inc jb fwait sbb int3 mov sbb or loop shll mov shrl out mov mov notl loope add ret mov mov jmp iret add adc inc dec pushf cmpsb insl dec repnz mov bound icebp jb adc dec lock pop daa mov hlt out lret fistpll js cmp mov hlt sub inc push (bad) out sbb inc test adc in lods cld sbb dec dec fstpl daa shrl jle push aad and dec jmp in push pop and xchg test lret xchg xor jl pop sub xchg fldt sub or jne ficom (bad) cmp inc scas mov loop push dec dec aad popl clc jno mov imul ret xor xchg lcall shl push jnp lret outsb sub jg pop (bad) je out mov daa andb xor out fs mov cs xlat jns xchg push fisttpll cmpsb adc iret out loop xchg stos gs mov xor cwtl xor pop and movsb pop pop xor adc fcmove pop test sub test lret add or pop xor test ja push daa in popf popf stc push imul xchg xchg (bad) dec pop mov pop pop jecxz dec loope mov negb (bad) test mov add sub mov lret adc xor repnz and or lret mov inc aas sub testb ljmp cli add add and sub sub popf jmp hlt lds test mov std packuswb or and mov dec into add fsubl scas sub and mov les or sub (bad) movsb xchg clc mov adc pop adc push sbb loope xor mov sbb add bnd sub add xor cltd repz nop in adc mov hlt in ljmp mov and pusha or mov xchg sbb (bad) add shrl mov gs notl and cs cmp adc add xchg jne mov and js dec (bad) int3 cmc sub cmp mov aad xor bound stc ficomp lret mov (bad) gs pusha cmpsl pop out dec sub out xchg iret or inc dec xlat (bad) movsb icebp add out scas aaa test and leave ror push stc xor sti push in rorl sub pop (bad) lock fbld mov scas (bad) sti ja pop js mov adc popl adc cli jmp in push and or cmp pop fsubrs ljmp out inc add xor xlat fldcw dec hlt jecxz xlat mov add jae fbstp push push xor mov xor popl sub dec movsl mov adc mov or sub sub lret decl dec lret int3 mov mov clc mov lds and jl mov repnz mov adcb lods mov push aad and mov mov stc lds fistpl ror mov repz jb std dec xor ja mov loop push sti push dec cmc sub push les test dec pop mov sub mov aad adc inc inc es mov push int3 and cli ret push fidiv int inc jecxz mov cmpsb in icebp xor hlt jmp std add and jne fldenv dec (bad) xor bound adc stos test mov cwtl jnp push push dec into test mov cld mov outsl sub and sub imul sub divl jecxz push (bad) leave into mov pushl hlt fidivr and xor jae fisubl add pop mov aaa mov cmp mov mov inc push push sti mov push and adc pop ljmp test lods jbe scas cltd (bad) dec popf dec scas mov jle push and and daa cltd mov or xchg xchg fsub popa inc add cmp push or pop icebp repnz jle mov ljmp jns xchg repz ds mov xor (bad) lret mov pop in jecxz mov test es push add ficom pop xor cmpsb jge loopne (bad) (bad) and and mov outsl xchg cltd jns cs sub test mov adc fildll pop mov sub dec pop ret cs cvttps2pi call ss out dec sti cltd cld and mov jl xlat ror call jge les pop repz dec xor stos add or mov jge xor enter mov push nop push dec cmp mov fcmove rorb push mov js and cmc sbb mov push mov jae movsb (bad) mov ja sbb and lods pop pop loope push lgs iret push sub dec ret jno add icebp and mov xchg xchg dec dec std inc or mov stc mov adc call xor push je lcall lret adc cmp int and fcmovnbe cmp jmp mov push mov repnz out pop mov ds test mov je inc sub inc xchg mov and (bad) xor in outsl fildll loop cltd bound shrl mov xbegin cmp or enter sbb pop divl mov aam leave pop out test mov std mov add pusha mov enter cmc das bound xchg lock ja enter scas daa xor clc mov xchg xlat inc icebp and xor stos jb (bad) icebp iret mov fcmove push mov push lahf loop fucom es mov xchg cli fstl (bad) pop lret sti mov push jmp fisttpll xorb int3 push jbe and pop jmp shlb (bad) mov mov repnz xchg in mov mov cmp (bad) mov sub cmp xor in or sub aas jmp aad cmpb sub adc stos push add adc mov test cmp inc dec cltd xlat xor cs xchg xor sub mov inc xor or inc ret int mov mov lret stos fs popf mov (bad) lods out jno movsl ffreep push cld popf jmp out mov stos lret xor aaa je leave xlat shr dec jge daa and sbbl pop adc not iret aad push xor mov mov jne xor addl (bad) out sub xchg jne push push or cltd xor in fcoms (bad) mov fsubrs pop sar xchg sub cwtl cmc or pop das or jns ret jg out lock mov add mov dec dec and xor into jae add jmp out push add pop scas mulb addr16 jns loopne fs (bad) mov (bad) push ret push mov ror ret (bad) incb dec dec sub sbb loopne xchg icebp xor or call cmp ficompl out fs cmp push stos and and mov stos lock cltd hlt int cs aas in adc jmp inc scas ds rcrl sti pop lcall xchg xor dec shl add push push loop mov in and push pusha cs mov ja mov decl sub add das scas (bad) mov out jg fwait ljmp push adcl in inc push inc fwait dec mov sbb jne sub mov xlat jge push push stos out jg insb push daa jmp sbb or or dec mov sub sub ret sub outsb das pop sub push inc mov or sbb inc mov mov leave das and arpl insl std xchg ficoml inc xor inc dec div into lret lret test push inc int xor ret nop sub pop popf std xchg lcall loopne jg pop add jae rcrl neg xchg fdivrl mov (bad) mov arpl loopne (bad) (bad) adc rcrb dec sbb push jle int3 sub sbb or pop jge push frndint (bad) mov dec inc push not out add out inc scas sbb js push in sbb sbb sbb add cmp sub push or mov bound movsl add adc dec dec (bad) out mov jg dec jecxz fldl mov movsl out aas inc add gs and pop xor mov es push mov lock mov ss xor ja loope in dec add ficompl mov cli in stc fisubl notl add in add cmp dec mov mov repnz push lds ret push out movsl inc lahf pop push mov movsb and xchg xchg xor test repnz xchg inc push lea ret jmp or addb lcall pushf push push mov add jge add xchg pop lock fisub sbb xor fisttpl insl add add push cmc jb push cld enter rcll cld or xchg or iret push ret out pop xor mov sub ret scas inc decb pop dec pop mov andl pop dec pushf and inc shr adc or loope in daa xlat mov lock call adc (bad) popf cmp and xchg pop cli dec xlat sahf xor idivb and shl or into insb mov add and and int3 dec out out sub shrl fsubl jbe mov mov lods push cltd xchg jbe sub idiv imul cltd fldt xorl bound cli hlt cmp ljmp int3 mov stos sub pop flds jg mov mull or cmp mov sti mov pop lret lret push add ret (bad) sub fsubrp imul mov xlat jg push sub cmpsb es leave jle sbb fldl xchg es (bad) incb ret (bad) xchg push push adc out jmp add xor xbegin pusha add adc andl jnp push imul push (bad) pop push je adc push xor mov mov dec stos test mov int ds adc and cmp call jg jo into mov xchg ret mov imul repnz out sub cmp xor (bad) push into movsl mov xor and cli aam mov test push (bad) sub (bad) add hlt stos leave jbe push xor sub xchg dec or lret mov adc (bad) fldenv sti mov mov pop iret pop ret enter mov das ficomp rcrl mov sub out jo es fidiv fsubrs mov sub mov mov mov popf (bad) data16 pop lret add icebp sbb je test decb outsb mov mov xchg loop dec clc and jnp jo aam leave sbb add inc sub leave mov fs sbb xor call loop sbb out xchg xor sahf add lret sub mov lret pop daa jne incl test xchg mov pop xorb and sti mov cmp scas mov or add fcompl movsb push jge cmp fisttp add mov push aas mov xchg adc (bad) adc adc aas mov jle adc and sbb adc aad dec mov (bad) sub std jno test sub mov repz jmp loop xchg orl mov cmc or repnz inc cmp add mov loop add test stc push mov pop mov ds aas jmp ljmp push cmp jmp lret stos popf mov pushl ljmp mov in bound lock mov pop push sub mov aas int loope cmpsb lock in fnstenv xchg cltd loopne repnz orl test xor mov or inc jb ljmp mov ljmp leave mov sbb pop sub (bad) fadds fdivl cli pop mov mov jmp jns imul jo lods dec popf fidiv pop inc sbb rol cmp mov andb xor call inc inc ret stos in pusha mov cmp (bad) sub repnz inc test (bad) sub adc pop jmp pop jno cmc xor push lods lahf xchg xor into lock pop divb iret or inc xchg out sub into inc xchg xchg mov (bad) mov xchg lahf xchg pop aaa lret ljmp sub cmp sub dec mov das mov popa fs jae lods push test push push faddl adc dec or in (bad) aas das xor xchg mov pop jg subl imul add or xor rol lods inc sub mov rol rcr mov pop loopne xchg aas in fnstcw sahf out pop aam loop and mov test push jg int leave roll cmp popa and (bad) adc data16 (bad) mov xor ljmp repnz out jmp js xchg cmp cmp mov mov stos xchg jbe aaa das jno bound hlt js ljmp cmp (bad) and xchg fsubrl imul dec ret add fmul js call icebp sub loop fistpll and pop sub adc lcall dec pop sub add add cwtl pop or mov pop ja xorb popf xchg mov push pop jle bnd mov mov rol test mov mov mov jp lret fnstcw push outsl sub cld inc add jb adc mov xor out (bad) push and jle scas ja mov pop notb out pop loop sbb mov push jb sti ja fs and xchg std push add loop aam and mov outsb leave jp xchg (bad) mov adc out mov mov ljmp push pop mov out stos cltd aaa jle inc fidivrl jne (bad) lret aad add cmp push in movsl add adc or out pop arpl push mov inc push jmp inc xor adc pop inc ss sub imul xor dec adc sarb outsl lods mov ficom xchg aam loop push je push fildll pop (bad) divb repz orb mov test in xchg movsb bound lods test sub xor je (bad) scas loop xchg mov lds jmp ljmp cli jne and xor jns push mov xchg insb sbb add neg adc pop sub nop pop xor or icebp mov ror mov xchg push push jns fwait pop daa push inc or jbe dec xchg rep dec fmull in dec (bad) out sub inc inc xchg les jmp je adc mov xor jp fistpll out sub stos mov sub inc stos jo loope loopne jge cmpsl sub lahf insb lods mov daa shrl pop out or testb (bad) sub mov mov dec lods xchg mov or rcrl jns and scas nop mov xor mov pop and pop test popa xchg jl push pop dec mov lret push fpatan dec inc daa jg (bad) pop inc movsl pop jmp pop imul mov jb add sub movsb xchg cli xchg jmp push sub jecxz add jle daa in daa aad adc xor std test cli cmpsb loope (bad) aaa data16 ret leave cmp cmc and adc and adc dec mov adc and addr16 repnz (bad) jno pusha or jmp xchg xor sub lods das xchg adc push push sub add inc lret jmp pop in shl lods ret in push adc rclb lahf and daa xchg or pop imul push cmpsl sahf jl push dec (bad) push xor fmul add ret outsb orb push (bad) mov and add mov je sub lods mov fstpt bswap das dec jge pop iret daa jne insl dec cmp int int3 mov imul push out cmp sub test dec out ficom push jmp cmpsl xchg xchg xchg add pop mov dec adc in mov mov repz subb add lods dec ret pop js es dec das rorl xor mov adc popa sub dec cmp movsb jecxz pop push xchg scas mov cli push mov adc xchg sbb mov insb dec shrl rcr divb imul mov xor in rclb test (bad) xchg cltd in sub test and and (bad) adc int3 xlat adc jno imul shlb popf cmp xchg stc sub sub pop dec scas pop pushf cmp pop leave test sahf or xlat in and sub aas pop test push int3 nop mov mov (bad) mov cmp outsl in sbb out (bad) fcoms out lods (bad) mov adc cli cmpsw adc fcoms mov xchg xor xchg vcvtsd2si and lods outsb mov daa and pop sub lea sub pusha lret xor lret lds xor imul or aaa push push xchg or push add and sarl push es scas push sub dec imul pushl adc iret std decl xchg ljmp imul cmp xchg mov movsl cmp leave adc add or add xchg xlat mov das push shrl mov jbe ljmp dec or test pop loop lcall mov leave and subl push sub testb aam scas add cmc fdiv xchg scas imul and or rorl mov cs lret fstl mov xor pop mov dec mov bnd lock jae or xchg mov ds aad movsl or jno dec dec sub xchg xorb addr16 mov cmp lea xchg cmc push sub dec sti in mov (bad) clc pop mulb das pop and scas add scas cmc scas mov xchg negb lods std cmp adc mov mov xchg out ljmp ficoml pop fldl ret cmp sub das xor push xchg mov pop test mov pop xchg sub ret incl out cmp and and sub das mov mov push xchg sbb or out sub pop push pop insl dec decl outsl inc popa outsb frstor fs mov test mov inc dec (bad) mov in ficomp stos lea pop xchg sub push and mov sub cld into dec test in imul xchg mov mov ret mov repz cmp xlat ja sbb jecxz cmp jle outsl fmul xor pop mull mov adc sbb xchg add jb sbb inc sbb inc sbb sahf lahf lahf jl rolb rorb out das sbb sti lds add xor fs adc pop call or cmp test popa inc mov dec mov sbb je jmp sbb xchg imul enter int3 std xchg jge mov and sub sub pop (bad) dec adc repnz jo stc scas je mov imul cmpl inc push decb mov dec lcall dec mov or push fsubp dec scas xor aad std inc jns icebp lret sub (bad) sub lret xchg sbb sbb sub out repz push push cwtl xchg stc add loope pusha cwtl add mov push sub repnz jge mov fistpl insb out or lret stos pop jnp cmpsl repz ret repnz pop jmp loop stos (bad) (bad) mov and mov xor pushf (bad) repnz xchg adc scas sub cli push push repz iret icebp cmp pop mov movb js loop aam ljmp ja imul adc cli popa ds or xchg dec cmp int jmp sti cmc (bad) dec (bad) fistl pop xchg and xor xchg push dec push jnp xor lret std rcr dec dec xor mov mov mov cmc bound cmp push sti int jle insb dec sub out call push mov mov sub xchg cld call cld mov scas mov and push cmp jmp mov (bad) push iret push ficomp push dec add or hlt loopne (bad) cmp sub xchg lods movsb mov std stc cld fs ret movsb je scas sarb stc pop jmp arpl mov mov shlb ret adc mov and test (bad) jbe out stos icebp pop dec (bad) (bad) repz sub mov mov idivl (bad) lods or fcomps xchg (bad) int sbb mov pop inc xor sub cs xor out out adc xchg lret xchg mov push add dec js cwtl cmpsb mov push sahf arpl sbb pop sub rorb roll or and scas lret sub cmp adc rcrl pop je in decl lret pop mov aas or (bad) mov clc and mov ret xor sbb sub ss incb (bad) jne jne or testb push jne stc push mov add je ret dec imul xor and or dec cmpl xchg pop push call ret pop cmp mov or in mov adc cmp xchg in imul or loopne xchg repz fwait mov ja sbb call sub (bad) jae sbb rcr cmp (bad) push imul dec mov sub mov adc mov and aad loopew pop jge add jns (bad) cwtl xor inc inc adc leave mov js (bad) xorl jle call xor pop ds cmp (bad) jle xor jmp loop roll loope lea mov sub jno push jmp or push mov jge dec xor sub jmp push jo mov imul jmp xchg and mov out test in repnz imul lds cmp or xor sub mov pop xchg loope imul sub roll ljmp and mov pop les jp out adc sti lea bound pop mov xor hlt cmpsl inc cld mov rcll push iret (bad) xor cmp adcb mov add mov out dec sub lret hlt repnz shrb clc aas popf rclb mov push xor aam mov cli sbb out dec and xor lcall out mov sub mov repz add mov mov mov ds in ds mov ds mov outsb dec sar call les enter movb rcll mov mov mov popa shrb mov add pop mov add ljmp movsb rolb test jp jo stos test xor jmp pop mov and imulb pop sub insl mov loopne pushf pop mov pop (bad) xor call ds (bad) fwait mov sub sbb xor cmp dec jne,pt scas mov das or dec (bad) (bad) pop adc and or push adc sub mov sbb push es adc xor xchg add cmp dec andb movsl pop stos aaa xlat fnstcw into pop sub adc mov push pop jle (bad) and fdivrs xchg xchg jmp mov sub and mov ret mov clc mov (bad) cmp (bad) xchg rclb loop ja data16 mov lods xor jbe loop test add je xchg mov rolb lahf push sbb in xchg xor sarl sbb neg lds sub fbstp icebp (bad) hlt dec jmp mov mov mov pop push mov mov mov scas (bad) jbe pop fmuls andl pop xlat jge (bad) mov push xor notb into pop lahf xchg cmp (bad) jl xor dec mov sub mov (bad) ds lds mov insl fistl xor lods aaa mov adc iret cmc inc pop movsb arpl iret jmp cmp rcrl lea push fadd fsubrl lds cmp ds xor and sbb into and mov enter insb inc into imul into popf sbb jno movsl pop push mov mov sub inc je pop ja fs clc add mov dec out fnop adc cmp and (bad) (bad) mov mov mov xchg sar xor or xor inc (bad) popf sbb inc lcall aaa xchg (bad) fsubrs out int xor rep pusha enter and fiaddl cltd mov (bad) mov inc and xor mov imul cmp cmpsb xor xchg mov fisubl andb pop inc pop jno scas ret xor ret xor ljmp lret or mov mov and mov int out repnz lret stos cwtl in push mov mov out (bad) imul inc out out sahf adc mov mov ret cmp and pop cld ja jmp mov sar lods push in stos sub pop xlat lods add popf fisubr jl rorl rol push xchg add sub mov cmp pop xor das call popf sti sar jl (bad) xor xor sub stos xor jl sub loopne icebp pop sbb cmpsl dec xor std xchg pop out dec or adc cmp dec dec out mov dec dec lea jnp jo into push dec pop add mov pop lds dec repnz pop ret mov imul jge mov ja xor add push punpckhwd add jmp shlb add stos insb xlat pushf lea daa xor fcompl xlat xor sti push out nop xchg mov sub jo pop into clc xchg movsl scas jecxz daa not incl adc ljmp hlt xchg lock (bad) or jp test sbb adcb jecxz xchg lret pusha mov pop in and jmp hlt inc dec das add ja push (bad) jo inc dec mov ret aam movsl mov pop icebp mov imul xor int xor or jmp add aam jmp lcall stc mov pop cmp xor mov fadds jecxz cld aaa mov and sub out and pop mov and out sub dec (bad) mov sub push add outsb mov in mov into daa xor mov cltd push pop sub jmp popa imul out pop mov cmp dec ror sub test in xchg out cwtl leave xor mov repz and pop sbb mov push sti xchg add lds sbb jo sti add scas jo icebp outsl bound (bad) push jmp or cld stc mov fsubr xorl je sti add add jmp pop in std mov mov pop mov add pop dec aaa pushf add inc add xor lods daa test push insb dec xchg push inc mov ficompl pushf add inc or cmp mov lret mov loopne mov fbstp adc sub lods nop lret jecxz xchg notb and or arpl rclb jne cmp pop dec fildll icebp or or scas lcall jns daa jbe jno into pop lods gs xor and (bad) push jp stos adc mov sub mov dec mov dec push (bad) lcall cmp mov cmc loop jle pop (bad) xor cmp and and mov shrl xor lret lods add sahf pop je mov and jmp cmp mov hlt adc fprem1 push arpl cld fs pop mov xor notl shll mov sub push mov fildll in bound stc sti push out sub inc sbb mov add sub lea jnp test sarl es inc cmp add repz das mov imul test xor mov dec fs call ja int sbbl rorb sbb out xor add iret and hlt mov mov cmp jmp popf dec pop stc mov mov cmp mov sbb scas enter outsl and dec (bad) xor adc pop dec in es fisubrl xor pop lods out dec mov sbb push rcrl enter push (bad) xor fisubr or test jmp lret jmp cmp dec jb repnz inc xor shl or and add jne mov lds xchg loop std jp dec sub sbb sub sub or mov cmp (bad) flds stos mov push int ret mov sub lret jge (bad) xchg mov mov mov sbb mov std rorb xchg xchg les jecxz das out fwait cltd sbbl mov movl push std inc push call jns ret test mov xchg push jns push pop je xor (bad) jmp lods adc mov and mov sub dec (bad) imulb and mov mov sti (bad) cld or mov sub movsb jmp (bad) call ds xchg ret ja sub sub pop addr16 ret mov push sbb out xchg xchg lods jnp mov lret ret rol xchg repnz mov (bad) out ja sbb (bad) pop cld out repnz dec adc lds fdivp xor and loope inc jg jnp out sub sub bsf sbb fldcw pop and cmp hlt dec mov fst adc sub lahf loopne dec or inc std sbb sub fcomp add pop jbe jmp mov fisubr test adc inc jae add out mov (bad) or into call or xor movzbl addr16 das out rorb mov add ja mov xchg mov xchg sahf test pop cmc push xchg xchg fld mov cmp stc pushf lods hlt rolb mov adc cmp fdivrs jle lahf sub xchg add adc push cmp push mov pusha fistpll mov loope adc push out insb mov mov ds adc inc sub (bad) jmp les icebp jl or cmp add notl mov leave push hlt ret add and xchg push jmp sbb iret add leave fldl xlat pop cli fdiv (bad) xchg pop push test icebp jecxz (bad) xor ljmp scas adc and scas dec sbb sbb gs (bad) mov fbstp sti mov mov (bad) xchg stos test mov xchg lods loop rcll sti add mov jl leave fidiv (bad) push xchg out sub ljmp test xor lret jecxz andb dec xchg jl add add aad fstpt scas jge sub sti sub roll icebp mov cli jg sti repz add mov xchg mov push sbb repz add lock call sub js xchg cli or or loope std in xchg mov xlat add inc (bad) xor jl dec sti mov sub jecxz,pn adc push mull cld aaa inc sub sbb xchg pop jge imul mov rorb dec in dec adc xchg pop xchg jae adc gs int loopne sbb rol or out push or xor adc icebp sub sbb push jo pushf push jmp addl xor jmp imul push loop xchg sub call stc and shr dec push mov add inc xchg adc mov das xor bound divl sti aad or in adc repz mov inc xchg dec push stc xor scas push inc or xor das mov loope jmp icebp sub popf and test and into dec lret mov add sub in pop aam dec cli or mov xor lods xchg push dec xchg jg or xor fcoml or cli jb xor inc add and je jne or sub mov pusha lcall push ficom cmp fdivrs in or enter add daa sub jno cmp out and and dec adc ss orl (bad) scas sub cwtl add add mov add mov lods push push mov jmp ss adc pushl nop xor icebp sbb insb or int3 push or ljmp xorb cli sub les (bad) sti fsubl cmc das clc mov test lret cmp jbe stc aam mov cli xor pushf fpatan dec sbb mov add sarb test xchg add xor jne dec ja sub push jge in and jns cmpsl out dec call daa leave loop lds daa mov dec pop dec arpl gs bound mov add jmp mov notl cltd cmp mov nop cld xchg negb jns xchg sub std das push dec int3 jmp call jmp mov dec jmp leave mov jb or add add rorb test cmp out mov xor xchg sub and mov push inc add and aad inc sarb cli xor fdivl xlat jno movsl aam out lret iret jne or lret pop and rorb pop sub sbb inc ret jmp or push iret mov setbe or jbe mov add xchg (bad) call sub pusha pop movsb mov jg mov xchg dec jo sbb push js mov fs int clc push mov mull pop cltd mov cmp adc leave cwtl or push mulb loope gs sub lods inc sub hlt arpl jmp mov mov js (bad) xchg ret (bad) pop cmp adc out mov test mov dec add imul lret cmp pop leave sbb cmp mov into std adc mov lea mov dec xlat xor and vcomiss repz into pop sbb pop lret ss outsb jle movsb xor cld pusha ficom lret sar or fnstsw adc mov sub jg jae mov (bad) cltd mov add std in inc lahf xchg lea inc mov xor and dec fsubp in xchg fsubp lret pop xorl mov icebp mov mov xchg movsb cmpsl idivb out pop push adc ljmp mov inc ret movsb dec jmp mov sub loopne ret cmp sbb lret arpl cmp xchg daa jno xchg sub add dec out pop ljmp (bad) stos sbb cwtl adc enter sub and pop and cli mov dec push test mulb mov (bad) jo sub push mov pop sub mov repz sub mov ds daa mov xchg sti adc cmp rcrb sub pop jnp add or inc sub push mov xchg clc jge lods jnp mov sub decl inc adc adc jb (bad) adc ficomp lods xchg or sub in dec sub xor movsb jecxz loop mov pop cmp lods mov cld lock lods mov fldenv pop dec lods popa pop stos sub loopne or xor mov sbb popf je pop mov push xor mov jbe xchg lcall data16 test mov das mov imul test mov mov icebp push or sbb out lods stc pop imul call sub add pop and pop dec lret div mov ja cmp ret loope ljmp or or xor clc and out add (bad) or pushl test adc fsubs test mov sub popf push and (bad) imul push fidiv ds jge in mov pop or cmp dec leave sub divl xor in mov mov (bad) dec mov shrl lcall lret mov pop lods sub test push cmova xchg out sub loop xchg adc mov (bad) movsl push xlat in or into in cmpl das fnstcw add gs adc sub (bad) sub movsl cli xor out ret jno dec data16 out lea xor out adc cmpsb and xor lods or xor xlat mov pop pop and push sbbb sub pop pusha xor and (bad) jl rolb imul lods sbb mov add jmp pop out push sub and push add jns inc add insb mov xchg fidiv cmpsb cltd and adc and (bad) push scas imul add pop call cs movsl mov and pushf push push movsl (bad) mov lahf mov and mov jae jns rcrb icebp jne popa mov cmp sbb dec push add add imul fucom mov out inc incb add nop loop cmp push daa xchg adc imulb push lret divb loop inc lods and int gs cmp pop cs mov cmc pop mov adc popa sub adc sbb push and push insl aas sub and out idivl pop xor mov gs jmp test ret adc cli sub and fs ds mov aaa sub adc push xchg xor inc add pop repz add iret inc add repz sub mov cmpsb fldcw xor mov xor sbb adc cwtl mov pop or loope cs jnp and sub cli nop push pop aaa mov ffreep pop lods jne adc test sbb hlt xlat ja sti popf cmc sbb xor cltd lcall mov lret outsl popf aas outsl cmpsb dec dec pop dec mov pop test cmp xchg lds cli lahf lcall jae jno mov xlat mov sub pushf lahf pop gs jmp or mov ret rcl inc sbb popf lea xchg popf add daa jp sbb cmpsl in sub jl pop lock sti add outsl icebp lret xchg clc adc xchg pop out popa jge add ja pop (bad) insl adc lock nop dec imul sub push daa jg mov mov jo mov xor repz mov call xor icebp int3 sub sub xchg adc and js inc xchg pop xchg insb cmp stc inc inc mov jbe outsl mov sti mov and daa xchg lock dec mov rcl mov aaa or cmpsl or push sbb xchg popw cli test xchg imul rcr outsl (bad) jae js dec sti scas jno icebp addb leave scas mov cmp fsubrs lahf push clc push sub xchg mov xchg (bad) arpl sub lea push ret or dec add mov or fs pop cmc mov dec xor add int3 jns pop shll lret sarl dec add lret (bad) dec push dec lods mov or cmp jne jle dec (bad) repnz sub jle test or push ja jne inc push or add stos bound push leave cmpsl xlat test jp (bad) xchg lcall mov call pop mov sub jnp xchg out fpatan cmp cmp xor out cmpsb mov testl mov jne fsubs mov sti enter push sahf lahf ljmp add shr test xor or popa popl inc cltd popf pop mov jg push rorb pop (bad) sub add and push das dec popf cltd xchg lock clc cli in xchg js or mov add imul sub sub or rclb inc pop (bad) xor xchg icebp and push (bad) daa (bad) sub test push mov sar shrb in sub sbb mov (bad) mov dec (bad) cli stc jne xor lret mov ficoml out stos divb sub int adc jecxz lods movsb movsb ljmp sbb addr16 in les mov ficom bound sarb xor scas clc sbb stos ss cs fidivrl gs mov dec neg sub dec and inc ljmp xchg adc idivb and mov pop or shll mov (bad) fstp test aad in (bad) je xchg xor test lods or ret cwtl test shll add into inc sub mov imul jae mov (bad) xchg lock mov (bad) mov outsb pop dec mov pusha sub xor bound aad mov or xchg mov cmp jmp sub mov icebp jo cmp cltd imul sub mov and add xlat jl cmp xchg xor pop xchg loope push pop icebp mov scas jp mov xor scas mov inc movl cmp std fisttpl and scas cltd inc outsl aaa in mov dec repz (bad) in gs fcomp call cli sub jns adc sub in mov pop outsl int xor push movb int3 cltd jne jg sbb lret or mov loop pop push add or jbe and mov pushf push mov ljmp xor xor out or loop lds in aam data16 and pop sahf add ret xchg add out cmp pop int3 mov movsl cmc cmpb imul lret or mov sub xor sarb stos sub and mov movsl pop movsl js mov pop ja lods (bad) imulb pop fisttpl sub sbb inc dec daa into inc dec and rorl mov or mov xor sbb xchg data16 pushf insb jne mov and js dec jmp sub cwtl push out mov adc js dec shrl in add dec movsb fs lods dec negb bt pop scas and fcomps jecxz icebp sub sbb sub pop test bound push mov or cltd mov xor cli or out adc cwtl (bad) jecxz scas jg clc pop jns dec stos lock xor mov shrl inc nop les inc and jge dec and test fs pusha repz sbb ja fsubrl (bad) enter push xor push pop (bad) xchg std stc in cmc insb inc (bad) data16 fmuls test sub les repnz mov imul rep lea sti sub pop pop adc and ljmp dec stos inc enter add mov sub jbe and pushf mov lret mov loopne jno aaa mov adc xchg push push sub and cmc cmp pop mov cwtl jae adc pop mov scas out pop jno jno jno mov mov stos fstpl dec imull mov pop daa pop gs sub das mov mov into pop pop lret stos xor out bound ds dec cli (bad) xchg sbb xchg int out stos lret mov sub (bad) xor mov add sbb daa xor push inc aaa jmp test mov push in aaa adc out xchg enter push and mov arpl sbb shll stos sub popf and lret dec sti xor sub push stos push jmp mov push pop push and out (bad) sti daa out ror pop jmp fimull (bad) rcrl mov fist in mov repnz mov sub lcall pop push or and daa or aad or xchg sub insb stc sbb add call push xchg sbb or mov xor pop stos sub mov adc jmp jo ljmp pushf shlb and sub mov mov and iret movsl (bad) pop jnp jae lahf mov push cmp push rclb jge push lahf clc jns mull push inc je insb sbb push jl adc or pop add xor xor lds or cmp add mov pop adc cmp adc adc movsb adc dec lcall pushl movsl or and sub lods pop xchg jmp leave xor push cs cmpsb imul xor cli out jbe loopne xor cmpb notl movsl mov mov xor cmp push jg jbe pop mov (bad) xor lahf (bad) lock pop adc add cwtl or push add call pop push adc inc aaa add ja shrb sub jp imul negl sbb adc iret push rcrl or push mov mov and ja jmp xorl mov pop xchg mov out add jno jnp mov clc repz fldcw fildll repz aad repz add stos sbb (bad) stos and into pop lret push add mov mov loope stc pop outsb sub push mov add aad (bad) (bad) fisttpll pushf pop shrl test clc dec xor lahf out imul notb mov add (bad) pop mov pop push dec sub sbb fmuls xor dec into or fiadd jno jae or int pop push xor sbb push stos (bad) lret or add xor shlb test push add sbb pop fbld inc ficoml and sahf pop addr16 lret outsl push adc repnz xchg (bad) jmp fstpl (bad) mov mov in cs push push and xlat xchg popf jb cmpsb out sub add sub addr16 mov sub (bad) cmp mov negb js ret mov pop pop (bad) mov sbb into andb jmp pop push dec mov (bad) (bad) mov ds aaa into leave inc push inc mov sub xlat jmp shrl mov pop mov cmp dec xlat imul int add in scas fdivrl cmpsb int inc jne stos or fstpl pop rcrl inc pushf add repz cmc mov and mov and lock mov daa (bad) mov push or cmp dec fildl icebp dec imul movb jecxz scas ja add adc (bad) mov rol sub or (bad) out inc cltd (bad) lods fs mov mov push stos les jle flds or mov push pop push xchg mov (bad) scas rep ja (bad) test push push out sub add (bad) mov sbb inc sbb loop jne lret out sub sub and mov sbb push pop popf lods mov xor mov xor jl push out sub mov rcr sub call je leave imulb arpl sbb cli addr16 jp add mov pushf divl mov in fisubr jl dec std add or std and aas cld pop mov movsl mov pop xchg inc mov repz out scas loop leave or mov dec push lock jmp cmp call decl mov sub or sbb jb nop das std sbb in push dec (bad) xor add (bad) xchg das mov into pop gs and in mov sbb xor (bad) mov test movsb inc and or sbb testl and cmp push cmp dec xchg bound out pop adc mov dec loope dec cmp mov inc xchg pop xchg mov fidiv mov xor pop out sbb dec lcall add prefetch std in sbbl insb cmpsb ret popf hlt mov js xchg cmp rolb inc scas cmpsb lahf cmp out jbe popf mov and add out in idivb lret xor lret shlb das mov out lods jmp outsb inc push (bad) cmp mov hlt push outsb das nop push cmp sbb out or push cmpsl jmp std push neg sti dec loope imul jmp stos sbb cmpsl (bad) mov push mov pop add (bad) cwtl movsl add cld cmc add add stos std pop xchg sbb outsb push (bad) pop pop or call lock push lea push repz popf adc icebp adc sub sti sbb ficoml outsb pop (bad) sub push cmp sub pop loope outsb in and mov sub pop pop pop mov fs das xlat insb or iret pop stos xor xor push jae and das (bad) and add xor cli mov xchg enter rcll pushf mov and adc mov (bad) lret mov insl sub and jbe out push dec movsl xchg fld aas cmpsb das adc xor fdivr shrb push (bad) sub adc jmp jbe and adc mov gs aam les dec outsl xchg ljmp add repnz or (bad) xor call and ret aad stos repz xchg orl cli push cld inc push push dec and (bad) pop test repnz lret and ret mov mov rcll push mov mull mov push in rcl sbb pop cli xor jne inc sub into inc mov mov dec mov std push clc nop movsb leave add repz mov lods xchg call add pushl and xchg stc mov test loope inc xchg adc mov xor fdivr out dec sbb mov pop ss xchg cld lahf pop clc sarb scas jecxz xchg lret stos outsl pushf pop pop lret xor stos sbb fwait leave jge add into test pop (bad) int3 add cmpsb adc das sti sbb das outsb and arpl sub in cltd leave jmp in and xor sahf dec adc or sarl mov out cmp push sbb inc mov xchg mov jmp daa jns push lcall stos loope je les jae cmp stos in call cltd fwait jmp jecxz pop sub mov xor and cmpb mov mov mov xlat inc jbe pcmpeqd jnp dec fistl xchg sub pop sub (bad) lods push sub or dec leave push lods (bad) lods push jecxz lret fsubrs push cmp movd jnp sti or inc fstl pop in ss adc sub lea jle jae or xchg jl dec idivl and adc pusha je addr16 xchg rcrb ret inc xor xor xchg scas and jb fldcw add out ljmp movsb (bad) stos mov push jmp inc xchg xchg and jmp sub and jg dec movsb incb cmpsl neg loop bound mov add repz jns aad jbe inc or jmp ret cli jmp adcl jmp push sub stc das test cltd jmp and pop mov xchg mov adc popf mov fwait sahf xor clc cmp out call inc sub xor (bad) mov leave aad mov cmp test mov mov xor movsl out daa add ret sub dec loop jl movsb or add out lret lret and and add jne mov cmc flds movl pop jo mull sub lret mov mov sti icebp dec jne dec dec mov push pop jle iret and inc mov or data16 sub mov fidiv dec or mov xlat pop lcall int3 adc les mov xor scas mov mov (bad) stos (bad) loop loopne xor mov mov jge sbb and movsl in es push (bad) mov inc xor (bad) sbb and lock push (bad) jns mov dec pop pop sub cli sub outsl mov (bad) icebp out data16 dec dec test push in and and and inc xchg gs add xor lcall mov mov or into cli lock inc movsl aad push sar xchg jmp lret sub xor mov push stos jg loope pop popa test mov mov loop and fnstenv repz dec pop lock push dec sub sbb rdtsc or out loop rcr xchg and dec scas sahf scas add orl (bad) bound sub add mov mov out scas mov pop mov sub sbb jg pushf xor leave or push loop pop dec mov mov ret sub sub mov pushf std inc and push mulb ret dec pop jl pop cmp pop mov sub sub and push (bad) or add in test cmpsl in fsubs push add repz mov fstpl or cmp pop sub scas lret popa adc ret fs call call mov mov or add mov fisttpll lods push mov mov adc or jecxz das into xchg cmp xchg pop mov mov pop pop pushf mov mov pop pop ret mov jno mov xchg addr16 push les sti test jmp push add or dec (bad) movswl in inc xor cld dec scas lea sbbl mov dec pop adc dec loop mov aas leave jge das imul out xchg adc sub rcrl mov mov inc add call mov testl cmp xor pop loope pop cltd and jmp mov xchg out test imul mov mov pavgb fs pop pop mov and or and fnstsw gs cli repnz xchg adc faddl push cld mov jg jnp inc or sbb and xor ret rorl lret mov ss mov cltd inc ss mov ds push and addr16 je cmp (bad) mov pop and daa aaa data16 popf rorl pushf sbb pop dec dec outsb jp lea decb leave mov std popf xchg cli cmpsl ljmp mov cmp lock je in pop call jecxz (bad) and add mov lahf inc out iret cmp cmp lret xchg fdivl jmp arpl shl sahf add fnstenv dec (bad) sub lret inc stc (bad) xor dec das adc icebp repz mov lcall incl push ds lret mov pop repnz dec push jmp jbe repnz (bad) add adc xor add or shlb jmp stos repnz push adc cmp inc or push push ss push jmp xor mov rcrb ja sbb std mov and bound dec xor adc pop mov mov aaa inc inc and dec fldcw mov aad inc movsl pushl mov sbb adc pushf and xlat push xor push inc add and add scas jne sti mov dec int sub in xchg outsl jne subb pop daa int3 mov xchg andl cltd ret dec je pop sub jns inc jo sbb jns (bad) icebp xchg in add xchg mov and aad xchg jmp loop push cltd sub lods and das mov xchg enter push into add sti lea pop dec (bad) fidivr das lahf adc pop es and pop hlt and sbb (bad) lahf cmpsb imul push cmc push (bad) sub push pop mov (bad) leave lods lcall xor pushf pop add test out push push pcmpeqw ljmp mov imul das sub pop cs and push fnsave mov sub out sub arpl movsl lds sbb stos popf add in dec mov data16 sub enter nop movsl inc pop jne mov push daa dec out call loope sbb adc movsb inc push iret scas adc out sub add push and mov xor xchg push push jb in and sub repnz sub push insb fcoml cmpsb lods mov or into into sahf add mov jp push fcmovnu cmpsl fist inc data16 iret call add popa add cmpsl adc mov bound and icebp pushf jmp and xor into sub les xchg movsl add jg cmp lds sti mov xchg mov add and inc call in mov pop mov out test repnz push lahf or sub repz and cmpsl iret dec adc jecxz,pt push xor add push or movsl ffree imul pop sbb xlat test sbb mov mov jl mov mulb push sbb mov pusha in dec xchg jnp cmp mov add sub xlat sub std push jecxz fistp push add xor push push notl mov (bad) push mov pop clc xchg ret into jne mov cli popf xchg pop pop and dec mov outsb lods xchg (bad) and in movsl inc jl cli repz pop xor int jp movsb mov cmp repnz les mov out imul fs xchg pop int3 dec push lret int3 fsqrt dec pop repz push mov adc sub or popf int3 or jmp xchg lcall xor or ljmp mov cmpsl sub xchg jl add or ror repz (bad) jge popl (bad) push push mov leave dec cmp mov mov sti scas xchg sub les add jne or dec ja aas push pop push into ljmp adc mov add mov dec jmp adc lds pop scas test cmc cwtl fdiv cltd loopne mov and xor es jmp pop std adcl push xor stc mov add lret and jmp lret sarb (bad) pop lret int outsb push ret in sahf test add xchg adc sbbb xor add pop mov enter mov cwtl (bad) and (bad) and sti in push fstp xor pop or pop jle mov movsb mov (bad) or or inc lds push xchg rorl fs test mov pop leave sub test sbb dec xor xor mov movsl xchg arpl idivl in ja out adc jecxz test and cli cltd test and jae das aam sub push mov mov dec dec aaa in and test pushl sti fld add leave les cmpb jmp mov and fst push sti mov jns mov mov jge cli inc cmp lret inc inc lds mov dec call mull sarb ljmp or push mov cltd sarl adc repnz xor mov (bad) mov mov div (bad) gs xor jnp outsl inc lods and test in mov lret pop adcl push int3 repz mov mov rcl ret loop mov shl jecxz add sub mov fmul xor xchg mov xorb mov clc mov sub mov imul sub mov aas pop test loope and mov sahf dec cmpsl leave sub rorb adcl or test movsl (bad) iret jp and das gs aaa mov (bad) xchg lods hlt dec in or add mov and gs lret daa das fnstcw xchg jge out dec sub xchg loop adcl fwait jmp and fldcw pop sbb mov jge push jae cmpsl fist xchg mov scas inc jae push xchg mov mov popa mov jns or mov or jns outsl or (bad) popf popf fcoms out or mov ret inc mov jb (bad) or lods not stos fs stos push mov dec sarl out mov jg insl pop (bad) xor in into jo cli (bad) lahf sub stos dec lret aaa fnstcw scas hlt xor or dec jnp xchg and xchg mov mov fidivrl sub jo testb iret xlat stc dec xchg movsb xchg pop xchg sub das in aas xchg fdivl and popa or cmp mov pop inc mov enter sub fwait mov pop or inc pop xor jmp mov and mov mov lock xchg into cmp add push sub cld btc jno lods sbb dec sbb xchg sub inc stos fsubrp push fiaddl xchg mov xor test and jmp loop xchg ja pop or movsl je jb (bad) xor sub pop ljmp pop ret jmp mov (bad) das dec adc sub push mov shlb pop icebp in daa (bad) jmp lret and and mov inc in xchg mull and mov lods orb mov add inc cli enter (bad) and icebp repnz call sub fisubr mov into and jns xchg sub cwtl (bad) fistp cwtl push cmc cmpsl xlat shrl (bad) test vpmaddwd pop rcl inc out pop xchg (bad) push mov xchg xchg popf dec xor test inc add ret js xchg adc and inc ljmp jg add push loope sub or (bad) inc or dec je xchg push jne adc and pop mull mov sti cwtl fcmove mov into sarb mov (bad) repz dec bound fisttpll mov mul inc inc std icebp cmpsl xor xchg popf cld mov adc mov or adc bound adc sub mov out dec and jl mov lret add cmp negb xchg lds and std sub lds clc cmp es push pop jne add mov mov aas adc (bad) sti cltd (bad) pop cmp mov sub xchg enter dec roll popf or add pop pop dec mov fbstp into mov sarl inc out lret test shrb outsl cmp push mov test cltd jecxz mov xchg sbb add cwtl ret shrl jne imul adcb cmp in xchg xchg sub ss push call ds test sbb js or out cmp loope mov sahf xor xchg sti xchg gs push xchg repz rorb scas jno movsl inc (bad) dec hlt (bad) js fs scas sub bnd jecxz sub ss mov push das add lret or enter jmp pop stc stos jae shl icebp xchg gs pop mov ja imul jns inc push and inc leave ds sub jle xor mov and mov fdivs adc mov (bad) in mov pop jnp data16 popf push jge or xor cmpsb add mov push out pop push pop and call or call sub std xchg cmpsl inc dec push dec ljmp cmp inc loope lcall in imul insl xor pop add inc (bad) ljmp test mov fidiv out adc js movsb fdivl mov ret adc add sbb outsb ret xchg iret add pop lds stos in lds (bad) ljmp xor in faddp sub scas cmp push mov lock xor out add stos scas add movsl dec (bad) push jo bound cmp pushf jg add jge push or and mov out and mov mov pop push imulb or jne stc out push movsl xchg enter and add pop test pop sub (bad) lret mov mov arpl idiv lret mov scas das fs mov xchg insl or fsubs mov lcall (bad) mov insb testb jge cmc and mov cmp aam out mov xorb sub sbb pop adcb repnz sti inc cwtl (bad) mov or out xor (bad) push push std sbb sarb loopne test push jl pop push imul or and inc fiadd loope (bad) inc lds jbe or sbb arpl aaa pop add mov enter xor add stos gs (bad) xor jmp cli xchg gs ret stos adc xchg sub jp mov or (bad) insb dec sarb fdivrs pop pop mov pop ret enter cmp or into xchg dec into stos cltd test loope repnz rcr pop decb out rorb pop and mov aaa or (bad) push int3 or lods jp stos fnstenv repnz push data16 pop repnz out (bad) and cli iret xlat dec cmpsb push iret or sub mov shrb rcll rol mov jl push lock loopne imulb jle adc fmuls repz mov push repz (bad) ja xchg in int outsb mov xchg mov cmp or push divl inc jns out pop mov xchg out dec rorb daa dec mov xlat mov lds or jo jbe ret aam jmp xchg (bad) pusha lret jne sbb sub xor repz inc add in xchg sahf push shr pop add mov lds rcrl rolb dec sbb xor xchg adc mov sub xchg xor xor cmp xlat in pop (bad) into sti adc add aad cli lret jp out push outsb ror sub mov or test cmpb mov mov push stos mov (bad) mov cmp call or fwait mull aam push orb adc decl xor xchg pop std in or xlat ret sub inc leave xor popa and leave push imul push ljmp test cmpsl push into pop sbb or xor cli inc add out leave mov or rol jbe pop cli in push movsb pushl ret xor and andl mov jmp mov (bad) sbb xor mov rcll push jbe testb outsl lcall push sub (bad) fnstsw pop ljmp xchg mov xor pop cwtl je adc pop lock mov daa xchg cmpsb and sub test enter pop lock gs xor stc push or mov jne ds bnd ja subl cmp shrl ljmp ret ds xor mov sub mul inc cmpsl cld jge or out jne call pop or sub gs test dec repnz test sub loopne scas mov cmp add scas clc mov jnp movsl inc lahf lcall mov cmp enter and xchg mov mov dec pop dec push loopne xor push sti decl lahf push repz push and int3 rorb jbe test sbb adc aam (bad) aam int not push dec xor out push push out mov mov xor loope xor cmp pop sub jne mov jnp mov cmc int3 addr16 sub ja lods lock pop dec cmp pop dec adc js adc pop test dec push push mov dec mov clc repz es mov and dec test pop fldenv xchg jl or inc push fistp jmp std pop bound and xor dec xchg adc outsb jmp xor ss mov push insl (bad) or xor je push mov mov (bad) ret and ror push xor adc mov movsb push inc mov pop aas daa (bad) dec les int mov lea ret daa jne les out dec sbb jns mov sub dec xchg clc pop jp pop adc xchg fildl (bad) jno out adc jbe xorl shlb ficom fnsave inc mov pop (bad) push rcl lret call movsb dec lock ljmp jbe xor dec mov out xor les std insb lret out std sbb lret cmpsl shl ret in test paddsb lds (bad) mov xchg fcmovnb adc cmp xchg fisubl pop mov sub xor (bad) sbb sbb addr16 jmp addr16 and jle cmp test and dec pcmpgtw out mov (bad) mov dec scas push push int3 std cs lret push (bad) push xchg repz mov insb mov gs pop out cmp insl and enter push clc jno or mov fmuls mov popf fisub int loope lods add loopne mov and sub (bad) ljmp inc outsb (bad) in mov and fdivrp push int3 cltd enter fstps cmpsb xchg add push imul imul aad shl sahf dec clc rcrl mov aas cld pop mov cld pop gs cmp cli repz movsl cmc xchg push or pop aaa mov mov sahf cmpsl inc mov mov adc cmp cmpsb jl (bad) idivb xchg add sub push daa call (bad) mov sub mov (bad) push lahf rcr and pop ret in dec mov inc orl ds jmp mov mov enter das push call sub fucom icebp xchg xor mov mov xor mov pop mov xchg pop cmp (bad) std lds pop test and outsb mov aas sub mov dec into add inc popf ja rcll xchg leave out into add adc jg and popf pop push xchg repz (bad) stos pop jbe mov in imul and stos sub cltd pop fmulp push jnp or and out jp js icebp fnstcw mov sar loopne lea lods movsb lret orl out sub mov adc xchg sub jmp fild addl sbb sbb jg cs pop cmp jmp not movsb push out mov mov cmp jmp fstpt pop cmp jecxz pop out xor test ret icebp pop leave xor leave das mov dec in add subl cmp ret sub rclb add or test sub jle imul cmpb test jle jg sub jbe (bad) lock and inc shr add add shrb ss ret sbb and inc aaa das and out mov and aad mov xchg lock sub lahf cmp push jns inc xor mov sub call mov sub xor and mov inc lock push xor jge icebp dec or and dec out xchg loop xlat fcompl imull bnd (bad) or dec call (bad) call imul lcall push insb lock ljmp lret sub test adc cli je popf out arpl je or xor in jp mov and icebp negl cmp std stos leave iret xchg test (bad) cli jae les sub jmp push or ret adc or nop subl xor xchg rcll mov pop sbb in pop mov xlat insl lods test add cli out push adc xchg xor jmp lds movsl fs mov fs jmp cmp mov jmp and daa insb dec add pop divb mov lds add das sbb out in xor adc push insl rcl int (bad) fcomi movsl scas sub cmp or jg cmp push xchg add lods dec shr (bad) jbe push jecxz mov ficoml (bad) mov adc dec xor shll outsb adc adc mov lcall inc mov cmpsb (bad) dec mov lds mov adc sub (bad) (bad) mov ds andb adc mov lds daa hlt out push push push push rclb arpl push fbstp mov pop add dec push sahf add adc call out stos cmp lret cmp mov mov sbb xchg insb stos mov mov scas xlat sbb das or fcompl ss out scas test mov lea mov lods cmpsl mov xor cld push std cmp leave mov push dec (bad) xchg mov lock xchg jl push aam dec fsts fiaddl movsl push lea cs mov idivb fwait inc out mov imul fbstp add loope mov inc mov shrl test cld enter rclb jo fmuls sub mov mov xor scas (bad) push pop pop ret test adc cwtl push ret cli sub add and loop adc push mov xchg dec pop into jl or (bad) xor mov sub mov xor fidiv out (bad) mov cmp push or aam gs ljmp sub insl sub outsl idiv pop mov fbstp in xchg dec ret dec stc fildll xor push out mov (bad) (bad) lahf pop and xlat push lret lods cltd add jno cwtl hlt out or (bad) xor pop lahf adc sti (bad) (bad) mov je add pop xor into and (bad) pop popa jno jae dec (bad) sub dec es sub lods repz fldenv sti lret mov or repz pop pop lret int3 lods adc add mov fs out in push rorl fmull into sti dec and sbbl aad pop adc in and mov push add mov popa rol dec call test lahf push sub (bad) imul mov dec std leave daa test sti dec daa mov pop ss push int3 jecxz sbbb rcll imul mov stos cltd out adc add jno std xor xchg lods cbtw xchg inc mov pop rcr xchg into add adc add adc rol lahf lahf fstpt (bad) std xlat loop or xor pop test sub and lods ss jmp lods mov mov push adc out and mov jne pop jg jl mov sub ljmp fs ljmp (bad) mov ret in call std loop pop in js xlat add dec shrl sahf dec and xor sub mov daa fimull mov xchg test cmp pop mov pop idivb repz jmp xchg (bad) add pushf xlat pop pop dec push adc cmp pop mov and mov fldenv mov or imul negb mov pop jge push cmpsb (bad) jae shlb pusha scas stos imul lods mov (bad) xchg lahf jl push dec mov jns cld std xor in inc xchg and mov cmp leave idivl icebp mov xchg das mov aad mov sub add mov (bad) and pop shrl push add or gs push push adc scas jne scas cmc dec call jmp gs push xor out sub mov and push ds (bad) or out lret or das in (bad) pop stc dec mov pop jno dec pop dec jmp sbb aad notl xor push (bad) pop add std xchg push xchg icebp and ret popf call xchg rcrl (bad) mov jecxz out out cmp push jbe clc pop cmpsl (bad) push mov sbb in lret cltd mov adc mov sub call mov out outsb clc in imull push sub and jg (bad) jbe ret jle jo lds call sbb lahf inc jg xor and fidiv sar loope xchg jmp or jl mov imul cltd cmc cltd jl xor push or pushf mov jg shrb push mov std int3 mov dec (bad) out gs out push (bad) pop sub sub movsl movsb mov lds test cmp ret mov ljmp das add push lods mov xor or je out inc or add mov mov jmp or adc jmp jl movsl mov jle or pop mov xlat sub popf pop xchg jb jbe pop pop pop adc into stos popa test mov push jle pop std les xor mov bound inc clc xchg jns leave jg test push xchg mov mov push test jns (bad) mov mov push arpl (bad) (bad) pop xor jno lea jp test lret and dec xchg lcall sahf lret daa adc dec xor jmp repnz leave iret ja ficoml rcr decb xchg xlat mov bound or sub clc cltd popf mov jle pop (bad) push pop push in inc lahf cwtl in cmp das xor xor sub (bad) mov cmc icebp loope pop dec mov mov mov jp movsl jmp daa pop outsb js movsb mov xchg jmp test mov mov cli or add xor mov push aam xor pop and xor sub pop sub dec (bad) or pop or loopne or xor jbe dec ret aad aad shlb int push add fs aad pop lock mov sbb fdivrs mov mov (bad) mov jecxz clc movsb and scas xchg jns lret aaa add adc sub ja and or nop mov int3 push leave push mov add les mov adc lea mov fstps repnz cwtl adc scas out push lcall jg hlt lret add inc add in clc pop or cmpsb and gs jmp jne xchg out adc int3 mov fwait cmp clc jbe mov add jl int3 pop negb mov and cmp xor and mov pop mov (bad) mov pop (bad) gs sbb xor jmp pop or sub mov iret dec call sbb xchg push dec push jo stos ss (bad) sub and push pop gs mov pop in jmp dec rclb xor ret and adc jge inc mov adc sbb scas jp int3 add out out insl pop es push mov push imulb std mov xchg arpl or fnstcw and or fst bound mov subb dec sbb mov loope sti (bad) mov enter or (bad) ficom fstpt sub pop into int3 sbb dec shll and scas aam push sub xor out dec outsb (bad) aad or mov jle (bad) mov push test mov xchg scas into fidivrl scas je lods arpl adc xchg pop fcoms jecxz test or mov jb lock cmp sub xchg (bad) into pop (bad) dec xor decl push jbe pop push (bad) (bad) leave repnz push testl insb les xlat stos jecxz fcomip xor pop inc push mov mov aaa or pop jns fdivr xchg in shl jg adc pop fsubrp jae mov jl push mov cwtl jp into insl xlat shr add loopne (bad) cmp pop xchg jne jecxz es jl jnp dec data16 jno je push xor popf mov shrb sahf push add dec movsb jmp adc daa inc mov adc xor scas mov sbb cltd imul xor mov xor ret imul leave aad aad xor dec (bad) out xor in jl dec sub ret scas push mov push in push and mov xor inc mov mov pop sbb and push leave incl idivb std add cld (bad) mov flds pop jbe lret jbe xchg divb xlat call pushf je rorb lods fiadd dec push pop out jp or add test and repz dec sti xlat pop adc pushf addl int3 jecxz sub pop idivl popa cwtl (bad) out xchg jno dec ja mov mov dec mov fisttpll ret sub test (bad) xlat leave data16 stos fwait and mov pop (bad) aaa sbb stc shrl adc popl lcall fcomps sub xor pop lock sbb repnz test dec imull lahf outsl loopne jmp sbb std mov dec aad insl add mov loope ret int std pushf lahf dec out ret or push push xchg mov jmp aas das cli bound jne out jo into mov popf dec hlt subb mov pop fistl add xchg fwait cmp jge pop lcall fsubs sub scas pop push mov xor jb inc sub jbe in outsb jnp loop pop push and adc mov bound mov lcall in sub sti or imull mov mov mov xchg imul mov mov and lods aam ljmp mov int3 mov sub xchg (bad) cmp loop frstor (bad) cmp out gs imul cmpsl push dec push jmp cmp cmp shr repnz sub push or stc test mov sub (bad) pushf pop push mov xlat cli and out cmp iret popf cld cmp cmc push sub (bad) cmp add pop add repz mov std adc mov aad mov push cmp and shlb sub popa cmp loope lret sbb js ljmp bound scas sahf cmp adc mov push jae cmpsl leave loop cmp xor rcl out out and xor push out icebp add jo inc pop lret dec pusha adc leave ja cltd and rcrb cmpsb xchg or add xlat out xchg (bad) and sar stos or jle sbb clc xchg pop jno test out sub ds and mov sar clc xchg repz sbb and jbe and sub jnp mov (bad) das (bad) ds fnstenv and ljmp mov mov push xor mov adc sbb movsl xchg rcrb enter inc fs add push fisub mov mov (bad) out cmp clc repz lret jnp testl push add std adc std popf loop movsb pop movsb cli pusha out div ljmp lock sub push (bad) pusha popa xor iret das mov xchg mov or and pop inc ret test inc sahf (bad) lods notl xchg pusha xorl mov pop sbb test fucomip repz decl mov iret popf decb sarl pop cmp add popa addl sub sarl xor je mov dec fbld cmp jmp push pop in divb dec cmp or sub fisttp xlat inc adc mov pop mov mov push dec jmp jnp xor adc sub cmp sub jb dec pop aam push mov cmp adc jg xlat pop jecxz jg arpl mov and push out jae mov sub mov ds xor ljmp sti mov shll mov inc xchg sub jb and mov imul repnz jmp fsubp out cld adc or xchg (bad) lret lods mov lock repnz mov adc adc ljmp push scas mov push pop lock in sti cmc push jp test cmpsl sub sub gs xchg inc mov leave out fnstenv jge enter push and out mov and and sub sub dec mov ljmpw fidiv fst ss mov push sub cs fsubrs stc pop sbb pusha mull out sti mov jl push gs faddl mov imul test jbe xchg jo jno cmpsl stc sti scas (bad) jecxz or popa movzbl xor xor call subb sub jg jbe out daa aam push ret in fs sbb int sub scas xchg add xor aas cmpsb pushf fdivrp sub stc out add shrl jb std shll insl cmpb lret neg ret mov ret shrl imul dec dec inc mov sub jmp xor pop mov iret lcall iret lods xchg push push inc fdivrs pop jb mov jle pop push mov into xorb jmp dec rorb sar mov dec pop add mov cmp cltd cmpsb or sahf push mov jle jle int3 jb in xlat push lods daa xchg loopne jmp notb cmp sarl sub mov and dec movsl cmp inc insl (bad) sub (bad) push sarb push outsb add or dec stos cmp imulb (bad) pop cmpsl jns mov imulb or pop aas inc and (bad) mov push (bad) cmc and pushf mov dec mov mov dec shl adc rcrl ja daa rol push dec sub mov cmpsb dec mov and mov rolb xor or push out daa push data16 mov pop pop loop out mov adc mov pop jmp mov or mov add testb cwtl call fcoms outsb or mov dec inc daa jnp or out lahf js and sub out mov addr16 push adc sbb movsb cmp xchg ss sub scas clc pop mov mov sub mov dec clc dec out cmpsb push adc enter push test jp lcall ds ljmp sbb repz (bad) fs int3 icebp rcl popl push or mov (bad) push and xchg or mov adc jecxz dec pop popf scas je push add add or fs add fisubr incb add mov push in loope pop sub int3 mov add mov aas mov jp fisubr insb xor and imulb (bad) out ljmp dec xor sarl push mov cwtl (bad) pop jno xor sub out test rol adc repnz jg sub lods jg jge outsb sub cmc inc sbb fcompl into (bad) or movsl call fcomps and push add sub fadds enter mov repnz repz mov dec dec mov xchg cmpsb rcrl imul sub das pushl rcrl ret mov lcall xor mov popa in leave cmp jo leave mov movsl lret icebp andb cmp cmc and cld int3 mov (bad) jg stos nopl fidiv imul (bad) dec sbb rclb mov xchg inc (bad) iret aas clc clc movsb cld add xor pop xchg or fmul and mov push dec jo pushf cwtl cmp mov xor cmc jno fs lods mov or cmpsb adc popf ret lahf push ja icebp (bad) sub pushf mov cs adc push mov push cli fsts sub jl lds or loope movl pop in adc mov sub sbb testb lret dec andb jnp mov mov add add cmp jnp daa stc sbb testl adc cmp push dec das adc sbb divl or ret std outsb sbb les cmp int (bad) mov push xlat add adc shrb xchg mov in in cmp repnz xchg ljmp xor mov cmpsb cmp das lods xorb pop sbb xlat int3 jle pop into mov add cld test pop je stos loop (bad) add sub mov repz test sub push test test xor test push (bad) mov sub sub cltd cmp xor jg jae mov push fs imul pop neg lds pushf mov in inc movzbl dec push ljmp loop lret mov test pop sbb sarb je add mov mov xor adc lret xchg push and subl push push lret ss push cmp cli in xchg std push int xchg xchg gs xor (bad) ljmp dec dec test lret std jno xchg add or sarl xbegin adc mov fstl daa testl xchg outsb mov push fildll popf rorb sbb stc fnsave inc sub iret das lret scas xchg sti (bad) mov sub (bad) dec gs test jg and (bad) cli fs jmp jle jecxz pop adc movsb scas xor and shll jle (bad) mov ret mov leave adc inc jl mov sub mov fisubrl dec dec out mov pop arpl das lret mov pop (bad) mov lret sbb mov sub dec pop or xchg scas ja and out mov mov fdivp inc jae push fisub xor movsl repz push jg xchg insb inc pop leave (bad) xor divb hlt dec fisttpl mov jle movb (bad) xor cmpsl cmpsb das jecxz rcrl push mov lret sub mov or sub jecxz dec pop imul mov arpl or mov cwtl and cmc lcall jle adc xchg inc mov stc sbb xchg xlat (bad) out rcll rcrb add jecxz mov xor repnz dec arpl movsb xor mov data16 adc push inc and mov inc into xor sub sub jmp mov pop push mov roll xchg or cmpsl push push mov and (bad) icebp xor std adc bound inc das imul or or out sahf mov fwait push movsl jo xchg insb nop xlat repnz enter cmp call bound add repz sub cmpsl dec bound lgdtl dec je enter pushf sti mov loopne and dec sbb fildll inc adc aam stos in cmp push add jmp xchg fildl je (bad) (bad) or aaa and and fdivrp mov stc adc scas sub add (bad) pop dec pusha jp (bad) dec scas sub loope sub adc jmp imul leave icebp pop dec dec negl icebp cli mov rcrb insl adc xor and aad iret mov sbb cmc test pop cltd dec add xor xchg (bad) lods imul lret imulb fidivl inc jo leave shrl mov ss xor pop leave mov xchg fs aam mov xchg stos out xchg imul clc xor fbstp mov dec (bad) ss mov cmp lret gs lret mov mov leave daa call mov in das mov inc adc das xor cmp pop insb popf push iret lahf add mov sbb sub sub leave out pop xchg mov or sti pop mov jne stos test mov push mov in dec mov cmp push fstps jl bound adc mov (bad) mov js movsb test imul stc dec movsb inc and xchg (bad) mov inc daa xlat xchg xchg dec mov and stc jo mov jns imul sub jg xchg mov dec jne scas mov add call mov cmp iret xchg jle push call icebp jge add jbe pop mov lea (bad) test shrl and jl in out mov negl lret jg leave mov jle adc mov push mov in fldt mov and inc xchg std push pop ljmp ja shrl mov pushf add iret fsts or lret mov pushf pop inc dec xlat shll or jno dec jl das test aad enter push inc incb jmp popf or aaa sub xor (bad) or sub pushf rcrl mov out and in scas sub xlat cld xor mov or sub pop mov or imul push add lds pushl test jno xor push adc lahf jl jae push sbb or push fdivrp repnz aam pop lret subb aam ret (bad) add repnz negl jne ljmp in xchg out fs or pop out mov ror aad pop pavgb jmp imul inc dec out cld mov pop sub and mov pop shrb or xor fwait sub sub lock pop sbb sar sub dec sub sub pop pop mov and jbe push mov stos xor or cmp push dec pop lret mov std xchg lcall loope cli add into pop xchg mov or add push xor sbb mov aam dec (bad) mov sbb stc mov add push dec or mov out cli cmp fadds jl push aas push jecxz std sbb fdiv dec out mov mov pop mov in in or xchg add cmp lods (bad) lea imul push mov das jle push pop mov xor mov icebp addr16 repz mov pop ljmp (bad) cld out mov inc or jge push lret cmp dec lds popf push push fwait dec ret add xor mov adc ret imul fist cmc mov lret iret inc push repnz (bad) dec jbe in out sub push ror lock mov sub cmp jbe push adc bound cs push shl daa in (bad) sub xchg inc and dec cmp out sbb or out dec nop lret jecxz and inc into int3 loope rolb xchg cmp pop and divb push in out mov xor gs adc and gs jnp cmp pop xor into outsb mov sub sbb mov dec in cs sub sbb insl ret iret mov or sbb sub das test xlat mov mov in cmp in cld mov xchg lret sub xor pop xchg les adc fldenv pop pop pushf (bad) push ljmp and lret in stos xchg fdiv jo mov pop icebp mov std out or add and (bad) test jmp pop add cld repz add mov out xor xor imul nop stos xor xlat in jmp inc and dec mov clc dec aas (bad) dec sub add sub mov jmp cld negb mov or mov cwtl pop xor outsw mov iret jg popf daa fbld pop jecxz aam push dec and (bad) sbb in movsl mov negb inc xor or pop loope imul or les sub sub pop jmp xor mov xor xchg push mov es lret stc push imul pop pop inc hlt mov daa mov mov in cmpsl (bad) xor sub inc mov iret sub adc mov scas inc cmp inc movsl out sbb shll out mov dec and in out xor mov inc xor cmp clc out mov xor jmp add inc and push xchg bound (bad) jne ljmp ret call cmp int sar or sbb push cmp or inc pop pop and mov or out cmp pushf cmc fistpl and mov aam inc (bad) stos mov xlat mov das cld jl pop mov aas imul icebp andb scas dec loop push or add out sub jmp dec rcll stc or mov aad fcmove or and sub add stos mov aam push sub mov mov pop test scas test leave rcrb jno xchg xor sahf xlat pop jg mov or dec pushf das xor cli lods xlat outsb sar insb (bad) xor add and cs loope movb sub and sub movsb sti hlt sbb mov jno lea addr16 cwtl add sbb or lds pop repnz push xor lret jne scas mov mov or js xchg xor outsb xchg in adc lret sub xor ljmp in mov xor aaa adc ljmp pusha jp mov adc mov xor jae xchg out scas mov roll xchg xor (bad) inc (bad) xor add push (bad) imul adc inc add int3 and mov ret and cli fnstsw adc decb mov cs adc mov stos sahf out jmp shl mov xor pop adc mov or stos out dec mov ror jge jo dec pusha add add pop mov add into fnstsw dec stos test stos movsl jge das dec fildll shll adc lock sti rorl pop shr out inc scas sub shrl mov push mov xor add shlb push cmp stos lahf jl insb (bad) into mov popa push mov popa rol adc (bad) jp inc ljmp leave jecxz in aad stos imul jne push scas fldl2t cwtl into jbe pop adc stos sub out inc mov sub add xchg sbbl aad mov (bad) mov ficompl mov mov cmp xor sub cltd sbb mov mov fs out lret xlat mov xor pushf jl pop popf sub xchg xchg mov (bad) mov (bad) mov xchg out add push scas arpl insb xchg mov out in sbb xor movsl mov push dec ret rcr outsb test stos cltd test jmp jne lret sbb or add pop pop adc mov mov ret push shlb push dec imul fsts add repnz xor add repz aas dec push jecxz (bad) enter in push out loop ficompl std fldcw ss lea pop scas sub (bad) (bad) xor cwtl xchg out dec repnz out sub enter icebp ja jge pop mov add inc out and jnp bnd lds and scas in or pop dec call add xor into sbb xchg pop shrb mov lea mov loope jecxz,pn lcall daa loopne inc push (bad) jae add out jo and das cmp inc cmc dec cmpsl mov mov sub sub dec xchg ficomp mov popf lds add popa xor cmp adc sub add mov cmp (bad) imul jb mov je push ffree sub xchg push aad jnp push movsl (bad) cmp je sbb aas or sti jb repz fistl cmp jno (bad) xor insl outsb enter ja mov sub sub mov cmp out (bad) andl lea adc adc xor ljmp clc sub hlt das aam pop jge xor mov out repnz and mov stos sub mov iret clc or pop loope mull jnp pop ss xlat inc dec icebp mov jb jnp xchg sbb outsl mov test mov ret jbe rol and scas dec cmp mov cmp leave pushf push jns into loopne rcll out rorb mov leave adc stos sub xchg mov push mov adc out dec adc push mov add ljmp (bad) mov add push pop dec stos sahf (bad) loope shrl repz outsl fnstcw and mov lea mov call or pop and call outsb jno or out imul sub and (bad) mov gs cmp ror (bad) xor enter (bad) arpl sub dec adc stc cmp xor push roll mov push ds jo xchg push (bad) daa out push ss ficoml shrl ret mov pop daa movsb (bad) and cmp and sub xor (bad) xlat inc outsb xor mov js inc mov jns jmp or in das roll xchg mov or dec scas fsubl in dec or repnz movsb jnp push jbe mov xor dec xchg je imul pop int3 cltd cli mov (bad) push jo sub scas outsl or adc add pop mov cmpsl push stc mov aas lods inc shll add sub add mov sbb or fstps lahf jbe loop add adc popa test ret cld out mov mov (bad) jno in mov lea popf dec adc and xchg jns cli push fildl and mov pop add arpl adc ljmp ja frstor mull mov pop xlat pop lods pop cmpb outsb das (bad) ret mull lock pop push cmpsl (bad) pop pop (bad) fs mov sarl mov ja stos ss mov or mov pusha fdivs mov push fisttp sub ret addr16 add insb lahf cwtl lea bound sub in test mov adc cmc lock scas xor xor cs sti jno mov das cmpsb jp lret and jmp mov sbb repz clc lods dec sub decb inc loopne repnz aas lods fldenv dec lods stos mov sub pushf add cmp sub xchg mov (bad) iret ret xchg fs pop or lcall mov mov jne add mov pushl aad mov stos sub add sub xchg mov ljmp and jge xchg out adc add mov repz lcall and (bad) dec repz ret dec jl aad dec pop (bad) ljmp xor stos sub rcrl xor imul fs cmpsb test stos xor sub cmp insl mov xchg add adc dec mov mov jne out add inc or fimul ret xor (bad) lcallw ja movsl subl imul movsb fcoms loope and lret int3 pop daa and aam out gs and movsl (bad) sub sub loop pop pop mov sub lret jnp test adc mov enter xchg cmp push xor and in mov inc xor sti adc cmp mov les jmp dec xor lret stos and lock lock mov xchg daa aaa aam push jmp sub jg repnz add or cwtl jl dec aaa stos lcall mov sar dec pushf out imul add sti popf jmp repnz push sub pop mov sub loop daa neg sub lock adc mov sub cs xor clc sub mov jo xor xor inc lcall add fsubr sti mov xchg sti mov cmp out mov push mov bound fcmovnu gs push loope pop mov out movsb or ja movsb or push mov adc ds or sub mov fucom cmpsl sbbl pop dec pop push mov shll dec std jmp in gs sbbb xlat enter xchg hlt cltd imul (bad) out jmp cmp pop or pop mov jnp negb insb add out add stos notl lret pop lret mov dec xor jmp mov fnstsw sbb mov repz or cmp mov xchg dec push sbb lret add addr16 in out adc sub xor fbstp dec sbb mov daa clc pop jne add pushf add imul mov stos in sub push (bad) incb pop or into and mov sbb sar sub imul clc mov jecxz pop cmp mov idivl and icebp xor lods cmp sarb or or nop dec (bad) call lods dec les sar mov push scas ret jns mov and fsubl ret lret adc xor std insb xchg out leave mov pop rcll inc pop mov jp push (bad) jg loope (bad) push inc ret sub and add sbb xchg pop into loop and or sub push xor pop scas sub das out xor mov fnstcw ret sbb test dec xor mov imul xor cli sub lret xor or ret roll add rep sbb cmp sahf leave push or leave pop and adc dec data16 mov and popa pop push decb leave xor pop sarl fldlg2 imul or cmp pop (bad) jmp lret xlat (bad) pop sbb xchg sub mov (bad) stos bnd adc pop mov fildl cmp mov jb icebp push aam pop jmp loopne cmp lret mov fucom stos mov cmp jge fdiv lods dec js mov out jbe lods and and sub popf lds (bad) movsb mov loopne aas fnstenv cmp or dec mov daa ljmp adc jae adc mov out int3 in stc mov xchg cmc push pop push mov aam scas sub add addr16 or xor loope pop out xchg fs jne fstl sahf inc lret pushf inc sub das shll or sbb xor or inc mov or pop jne loop push pusha pop mov popf jns xchg dec jl,pn add jns inc jecxz test (bad) mov adc sbb push mov push icebp inc cmpsl jno mov cmp add xlat outsb xor (bad) loope imul dec fwait cmp clc in lret mov and push xchg out cld movsl daa (bad) jnp sub js out dec aas jmp outsl rcr notl add bound add shrl andl mov xchg xor icebp jbe pop fstpl and stos cltd or xor out (bad) out and mov stos push xor xchg (bad) daa and aad ffree add xor sub js cmc jae subl fldcw cld pop lods and loope ss add adc (bad) lcall lret (bad) addr16 bound flds and imul out adc aaa cli dec fistpll mov push sub scas cltd mov adc repz sar xor ljmp mov xchg mov xchg mov and sti das xchg testl iret mov iret test add into call sub stos lea sub adc pop push out xchg cmp lret inc or sub fstpl xchg ret div push iret and add scas mov push pop and outsb mov lret cmpsl pusha jmp sub dec sub out es js and fnop push pop call insl jmp pop insl jnp jp sbb rcll dec push popf daa or lret icebp hlt inc (bad) jecxz in in call pop rorl mov lds enter and pop sub dec mov stc (bad) mov jl jmp cmpb adc fldenv dec and adc lahf xor dec (bad) pop add cmp dec mov or xor sub jle hlt adc scas sub cmpsb inc ss cmp loope jle push adc lret int push in lcall or jge cwtl add add add mov (bad) dec or mov movsb (bad) pop xchg into loop (bad) push xchg out pop shrl xchg movsb xchg out mov sub cli mov imul sbb daa jmp xchg pop daa xor push dec xlat mov xchg jmp ljmp xchg pop inc (bad) jge push mov ret xchg je cli jg inc sub adc lahf dec mov je push dec scas iret pop sub mov icebp das aas and (bad) mov imul xrelease sbb jp adc and gs incl mov shlb mov mov adc cmp or adcl sub nop and pop int3 (bad) mov or fadds lea and ss xchg add dec jbe mov push outsl rol sahf ficom fidivrl sbb jmp in and (bad) push sub out jno add pop fst repnz fidivrl sub into mov sbb inc dec cmp repz stc test lds divb pop push sub mov push sub mov mov gs xor sbb sti xor jns (bad) cmc gs nop leave xchg jno sub hlt in popa xlat bound ss cwtl xor ljmp lahf add and hlt cmp jmp mov pop imul dec aam movsl arpl ret jbe and xor sub in xlat jle out and dec test lods jg mov and xor or mov insl jno sub arpl leave lret stos das jnp pop or and das scas jb leave pop dec hlt push out lds call or lds rcrl in jae xchg cmpb lahf or fidivl jbe mov or mov shrl xor dec icebp in scas or or leave mov es and dec call (bad) cli test jmp xchg repz sub sub aas daa repz cvttps2pi (bad) repz lock int jo sub mov push mov iret imul ret xchg rcll add cli adc repnz cmpsb scas pop mov icebp jb lock in out mov repz mov push pop bound into scas in push xchg fnstcw cmpsb and iret inc push xchg inc (bad) xor ja jp mov out mov add scas repz mov roll sub push mov mov pinsrw dec adc adc pop cli sub (bad) repz pop mov lea mov (bad) and push stc xor mov iret and popa shl xor add loop mov push stc out mov jne cmpsb mov pop mov or test xlat sti add fidivl xchg leave jg cli pusha xor sub mov push mov xchg pop clc and and sub ds lods (bad) loope rcl repz and loope mov inc insb jne sti popf gs jmp popa dec mov pusha cmp add inc jnp pop lock dec (bad) and fildl push sbb add loop and ror movsl mov insl rcl movsb sub or pushf mov in in or inc jno ret sti loop ror push sub inc clc sub outsl repz test sub test xchg stos test (bad) mov nop dec and pop jns daa adc in and inc xor (bad) call dec mov push cwtl popa fnstcw ret std pop iret mov jmp cmp add (bad) sbb sti jmp mov inc add push cltd in mov mov jne push xor (bad) addr16 jl pop xchg push (bad) into jle fwait movsl jmp sti mov lods cmpsb movsl sti out dec and incl ljmp stc scas sub icebp pop aas test fnsave fs lcall sarl sbb loop subb aad pop roll inc pop (bad) jo sub mov add pusha mov push loope mov adc stos imul dec dec mov test out cwtl mov fwait push or mov clc std mov gs adcl test xor add adc jmp icebp jne popa shrl add add jmp icebp std lds notl scas hlt xlat mov loope je test mov cmp cmpsl lcall aad js and sub xor xchg test pushf xchg in ljmp mov xor je scas xor xor or cmp das xor sub pushf sti fidiv js pshufw xchg and inc xchg je push mov outsb inc pop cmp fsubrs cmpsl jl push pop and imul fdivrs (bad) and js fistl sub inc int3 icebp ficoml shrb cmp out xchg in rolb dec movsb sub (bad) push pop mov mov leave aad add addl (bad) lods pop out mov mov imul mov xor mov pop and ljmp fxch popf pop mov add inc and pop or add icebp test repz xlat cwtl and mov and stos popa inc or cmp pop rolb sub pop mov mov hlt add notb dec xlat inc sahf or shrl mov cld inc xchg mulb stos jecxz add xor mov mov pop jg aam (bad) negl sbb mul repz adc add iret fcmovbe or sbb xor cmp shr push fnsave leave sbb push pop push jge loope das lret mov xchg popl pop pushf jne in mov call push lds aas sub and and sti jecxz xchg jmp fs je mov xor push cltd inc pusha xor or ss mov or cmp xlat cmp push dec pusha rcr or aaa lahf pop mov fwait imul jle sub imul push adc mov xor negb mov lret repz jae mov ret scas lret insb imul fidiv fdivrs or pop decl xor xor popf js mov das gs leave pop pop test fidiv mov div lahf pop push aad jb inc cmp sbb mov inc jmp and into mov mov ret cmp ret sbb (bad) cld mov xlat ficompl in out sub mov and das push arpl das jl sub outsl test sarb or and xor mov mov nop push lcall hlt push leave aad out (bad) in jno lods pop insb dec out test mov xor (bad) mov mov and sub (bad) pop and into js cld or les lds or stos int3 push (bad) popf int3 xchg repnz cmp push jne ds ljmp push add mov lahf pop xor nop pop hlt sub pop outsb bound cmp inc xchg sub push fisubr out push pop jg aas mov jl into pandn mov cmp dec mulb mov cmp lods push add jmp xchg xchg push dec (bad) loop lret scas (bad) ss xor inc xchg dec div in xchg sub popf pop hlt lahf adc dec mov jne lahf or push js push fwait in out mov fildll xor inc icebp and out rcrb xlat (bad) mov les push mov fcompl sti xor test fxch and sub mov or mov dec pop in push neg in or mov and cli xor ja lcall ljmp sub and inc xor dec add rolb adc cmp jns adc repz sub nop push adc enter pop pop sub stos mov add xor sub decb adc jae adc add add out clc mov in dec dec add movsl lods rorl data16 in or int3 pop lret xchg pop ret inc push xor xchg aad jne and test sbb ret cs pop adc stc dec xlat and cmp call add adc and mov aad dec rorl mov fsubs mov push shll ja add divb jecxz adc and push or (bad) leave mov rorb fimul sub pop fs add clc xchg imul fs sub repz dec popl mov or or imul add mov loop inc jmp pop out divb imul cmp xchg popf dec idivb adc repz lods fidivrl mov out dec mov adc (bad) push or add iret aam xchg movsl test scas mov aaa mov (bad) push std inc (bad) push je mov inc pop add (bad) jg in cmpl push mov (bad) das fmull push (bad) gs push add shl jno mov and inc and inc scas call mov jle je add pop jb (bad) push mov cld add not sti (bad) mov add add xorl idivb jb xor push mov das push mov jge add jl es xchg into dec mov push neg addl xorl add movsl ret fist imul bound aas mov add nop aad jecxz sbb loop mov add movl add sub mov aam dec add pop xor xor or out mov aad add insb jmp fisttpl adc mov stos add ja push mov inc sbb repnz and cld addl mov mov outsb jae pop bound je scas and add sub ficompl lret or push push jne ret push xchg inc sub pop xchg iret pusha and mov mov jg inc cmpsl notl dec ret scas cmp pop arpl negl bound xchg sbb rorl push add inc fisttp mov push lods adc icebp push jo and cwtl inc aas push push xchg xchg cmp loopne (bad) mov fcompl ljmpw adc and push xchg dec mov pop enterw jbe (bad) je push and mov (bad) nop adc pop push push mov fidiv dec sub push cmc adc push pop sti cmc cmpsb add lods inc push xchg addr16 mull fadds pop iret aaa enter out ret cwtl and jnp mov cmc in sbb dec sti and inc sub clc sti hlt ljmp jns xchg aam jno aas ret clc fistpll lahf into push mov rorl movsl dec jmp out dec in adc repnz test dec shll dec repnz rolb sar bnd ljmp scas jno xor jle data16 mov leave or or es lock push or ljmp sub and inc loopne lret or xchg push adc jle fs orb dec pushaw xchg mov shrl dec add test lods dec mov jns dec xlat push inc push add cli and aam pusha mov mov lahf mov mov cmpsb aaa mov and stos mov cld mov mov (bad) in dec add adc fldl lret imul jae outsl (bad) mul fwait dec cld and test mov loop dec stos sub outsb and or cmp das lock popf sbb out sub mov xchg decl mov sbb jno fbld and out in xor xor mull push add mov adc repz or imul jnp lods lock or enter shrb loop jns mov daa jmp jmp std push movsbw test mov push js leave mov daa ds repnz or aaa jae sbb xor pop (bad) or add lods or push jecxz mov jnp push inc pop cltd enter add stc pop shr push mov jmp imull mov add pop inc les pop push flds repnz pop addl add xor fist mov fucomp add ljmp cmp cmpsl rcl push xor out popa add inc or call pop mov lods iret and rcll outsb lret xor scas adc lcall aad orb dec mov (bad) sub out push jle push dec push jp xor or nop popf nop add sarl push call outsb lods pushf adc pop (bad) mov push mov fildl or cld ror push inc (bad) jg push push mov inc testl cwtl sti aas fsub into pop repz pop cmc ret adc call ja mov push push add mov shl outsb jno sbb jmp lret jecxz incl push push ds pop jnp cltd popl or push xchg xchg es fsts sub mov iret aam addr16 pop nop pop add out cld xchg add pop xor dec popa fcomps test push xchg pop cmpsl movsb sub push xchg ljmp jg fistp sub sub stos mov xor (bad) or mov repnz or lcall push mov push dec dec cwtl xchg ret movsl in push sbb mov test mov jmp add dec pop xor or les and dec xchg into jmp add ret pop ds mov iret lods fsub into push inc fs mov roll xor push (bad) xor outsb or lret mov sub pop or or fdiv inc push or pop jl pop (bad) js (bad) xor divl adc fstpl adc xor mov sahf xchg adc lock and pop es lahf sub push (bad) push and ds inc sbb dec xchg test stos popa movsb testl inc push (bad) fucomp daa mov and lret push and mov fbstp sub mull ret mov test sbb (bad) or fmuls scas sbb push pop mov (bad) in jb push or inc negl loope jg inc test es ja popa push repnz xchg icebp sub jno xor jnp test lahf (bad) adc mov dec test cmp dec pop adc add mov inc daa test rorl lock and js std leave push jnp xor iret jg cli xchg outsl mov mulb idivl ret test cmpb jg hlt nop ret dec lea out outsl sub movl pop out mov jmp sbb xor pushf cmp sbb mov add mov cmc ret iret call adc (bad) aaa pop pop and data16 cmpsb mov rep cmp test xor xor iret pop push mov outsb jecxz,pn or or insl leave pop mov pop sub mov and mov imul mov lcall cmpsl leave and push mov mov sub push push sub out das xchg leave lods push mov lret addr16 xor mov jae mov xchg cltd xor pop je jbe jmp sbb enter outsl mov pushl shrb add adc xor mov adcb cld mov test test pop mov or mov jge push jp hlt or xlat pop xor mov (bad) xor pop push pop xchg in fimull mov adc (bad) pop leave out jg pop daa lret dec xor xchg (bad) push aam lds test popf or repnz jmp push call and divps je add leave add loop pop test (bad) popf int3 imul xor repz add xlat dec out loopne gs sbb test and movsl loop lods and mov int3 sarl push jmp shlb ljmp out inc xor xchg push imul jmp pop mov xor and bound lret push mov popf cwtl jae lock adc or sub scas xor testl lods (bad) shrl or stc jg adc sub loop inc mov sub dec imul dec aad (bad) push imul pop push cmp ljmp push popf pushl and ret (bad) hlt sub and push jno mov jne sub dec fwait sub jmp lret push or mov cmp fnop cmp sti sbb adc jecxz pop push fnop jge and mov data16 sbb (bad) cmpsl mov adc push mov (bad) fdivr add mov call cmpsb mov into in sbb dec add sbb mov and push shlb lods xlat mov movsb adc pushf mov jmp nop add ret cmp and xchg mov xor repz ss xchg popa (bad) imull jge push push popf lock daa and sbb push and ds in cmpsl sbb sub cltd daa mov fldenv or and fsts xchg xchg rorl cmp mov inc push xor js fs mov cltd lahf (bad) (bad) dec jne dec xchg pop ret fs mov jmp test notl ret or loope gs lods fnop pop sbb fidiv sbb popf out cld popf icebp mov inc dec mov sbb or mov adc xchg mov xor pushl sub (bad) dec adc mov mov push (bad) and cmpsb xor clc aam imul or sbb mov or jae cmpsl push mov divl les mov jecxz inc sbb cmp mov xor scas mov mov inc mov jp inc xor push leave push lock mov out and fsubs mov mov dec das sub aam leave push in mov xlat and dec jp xor push and cmp xor xor je mov daa popf lods add fcoml (bad) cmp mov pop sbbb in xor ret pop push insl mov mov jns dec jl cmp stos je inc cmp sub pop stos or mov sbb cltd gs dec jmp das jmp aam (bad) rep mov and mov ret mov mov or cmp (bad) add bound jno cmpsl clc aaa les sbb mov pop gs add aas repnz fcompl jmp data16 and dec push cmp or or cltd add mov jae or and mov push jmp push stos jns inc cld push push cltd jg js ja or push fisubr inc lahf push sbb mov jecxz lcall mov ret imul popa call xor out cwtl popf add jmp iret adc cli mov pop mov mov push sbb xor pop lock xor sbb add and add out push cvtps2pi inc jg xchg jg cmp mov outsl and and movsl sub or loop add sub pop mov mov pop sub inc sbb test (bad) js push or sub sarb lds mov xor sahf inc adc pop xor mov cmp stc out jno xchg xor mov imul ret push push in cld xchg jbe mov fcomp push popl sahf incb mov or mov sub (bad) das pusha or lret xchg pop jo shlb repz and imul lahf ss aas outsb test mov push sbb add mov pusha sbb neg shr inc add pop rolb mov pop lods ja xchg sbb jbe push dec push sarb rcll push lea es (bad) (bad) repnz push push pop mov cwtl dec jle sub jbe add xchg push cmp mov decl add xchg in xchg ret aad mov jmp cmp xchg adcl dec push insl hlt cltd in imul mov jle outsb sub mov pop sub fiadd jl lods and addl add cmpsb xchg lods outsl adcl (bad) fwait push mov pop mov sbb and cld add gs loopne mov mov mov or mov or sbb xchg mov sbb sub mov add insb not push mov out or or push or adc lahf pop out inc inc repnz add dec or sbb mov ja xchg into cwtl jns popa sbb add sub leave ret (bad) data16 or or aaa push xchg mov cmp vhsubpd push jp aas add scas out xor rorl sbb mov out lahf pop pushf aam ret sub jecxz sub ret jnp dec lret test repnz dec scas sub push sbb lret mov jmp pop popf jmp ds gs xor cli mov pop movsl dec out pop xor ljmp bnd sub out inc cltd xor mov ret out adc cld lds daa or jo (bad) into ds or xlat adc jmp cmpsl mov (bad) (bad) xor sub push and dec rclb cmp in scas cmpsl lods xchg lds (bad) aam pop leave inc das lret pop mov orl adc and ret ja dec xorl das jmp in out add int jno ds and test (bad) lock mov jl jnp mov push push loope xorb inc ss and ljmp clc jp sti out adc sub cmp mov add (bad) hlt mov mov loop test sbb and adc bound inc add mov sub sti orb mov or xchg (bad) xchg add pop stc xor adcb cmc or out pop mov clc shrb into mov push xlat lods cld les cmpsb repz mov or je lret stc mov mov out es fiaddl xor push mov lcall push mov cmp (bad) mov mov sub push dec enter aaa pop mov jp jge aam sbb jo or pop xchg dec lret xchg xchg xor xor or call cmp out push pop mov iret push inc push sbb xchg sbb or inc push cs mov rcrl pop jg insb push test rcl pop insl pop dec xor sub mov xor rorb jo xor incb mov pop push jle das stos sub jmp cmp inc (bad) aam rcr addl sar jecxz add (bad) int3 andl sub push divl mov mov jns pop imul data16 mov in mov pop pop (bad) mov mov jnp mov arpl adc mov xlat pusha inc cs (bad) jno sub loopne add push jbe pop lock popa add jle add xchg enter xor ja loop repnz addr16 jle sbb lock orl scas cmp or xor push push repnz stos das jne jmp add pop data16 jmp mov and cld mov cmp sub mov das or popa lods adc mov sub lret push add dec or daa divb cmpsb sbb add leave xor inc cmp sti je push dec div iret sub test call lahf test fldcw aad and sbbb mov lods mov js (bad) or and or std push sub pop add xor into dec mov lods loopne andw pop push shr jl add ljmp dec (bad) fdivrl call sbb adc pop cmp cmp push daa (bad) pop xchg add or fdivr stc movsb jmp adc jmp scas (bad) sbb mov adc lret jl ror mov jne mov test (bad) (bad) sub out pop pop inc push mov shl outsb je mov in mov adc (bad) sub mov fbld pop sub pop jp popf or cltd lods (bad) xor lahf test sub popf mov loope cmp loopne jno jmp fsubrs sub lcall push into pop mov push out push mov jmp pop adc prefetch ljmp jns pop lret sub nop clc imul ret les fsubrl pop jecxz out mov cmp xchg leave insb push pusha (bad) and jg (bad) xchg stc xor ror ret fpatan and fisubrl jmp add pop xor lods gs push or jge cmp and xchg xchg cltd bound or adcb sub cwtl sub xchg xchg lods and xchg mov add lret xor adc push add dec enter pop rorl (bad) sti shll inc (bad) (bad) jnp (bad) mov sub enter (bad) mov xchg or mov fdivs and mov sbb aaa (bad) out add adc test pop jmp mov cmp test push out cltd sub fsubrs dec mov xor iret adc adc aam repz xor push cltd xchg mov cmc ret inc sub (bad) aaa out test cli hlt xchg mov or pop (bad) rcl pushf jmp mov lods addr16 mov sbb (bad) (bad) mov inc sub pop xor add or mov (bad) adc fistpll push mov cmc adc lahf pop push cld pop and fcmovu mov push add sbb push and sub pop aas sub and pop jbe inc inc inc mov sub cmp mov jbe ret add or jle dec dec (bad) negl jmp scas cld mov pop cmp es mov movsl lret or or mov iret pop mov (bad) out inc mov adc sahf icebp add adc fs fstl stos add jns (bad) add out push mov lock notl fsubl lods popa jbe push out cwtl sahf add push (bad) mov stos fsubrl ret std jnp lods cs in add in cmpsl (bad) fildl pop ret push out mov rcrl jg xor pop inc sub (bad) cmpsl jg dec and js push xchg ljmp adc dec push and xor sub mov mov and add adc mov lock in xchg int3 mov arpl push dec cmpsl loopne mov sub mov adc mov pop jbe les test push cmp out lcall pop or or inc cmp or adc xor xchg div mov int loop xchg lea or mov lock clc push xchg out or sbb mov sub and sub fisubr sub mov mov jno scas cltd cmpsl pop out xchg mov or mov inc int3 fsts sub mov in ja mov scas movsl add xor scas and mov add mov into mov xor div and rcrb add popf divl enter mov or (bad) adc dec mov xor not das push in (bad) xchg aad mov push leave arpl sbb inc jle test scas cmpsb les (bad) stos fstl adc mov fnop test push pop adc out push hlt mov xchg and cmpl fsub add dec test sbb push fnstcw jecxz mov jecxz adc xor xor cmpsb or shlb movsb mov jno imul les pop out out mov test mov sub pop sbb and ljmp add pop jno popa lds mov inc repz jg push mov bound and push mov out sub aas xor sbb icebp out sub imul jmp cmp sbb add add lret ret jb cwtl jecxz sub out mov xor sub pop and sub push loope repz mov and or imul loop rcrl inc mov daa fldenv mov cmpb pusha ret imul sbb xor push orl add cmp (bad) pop and xor pop loope and jns inc test shll adc mov mov push add mov mov mov sbb idivl rcrb and stc nop mov loopne xlat add les cmp mov ljmp xor or dec cwtl push rcl fistpll add and push loop loop,pn sub add push into out subb lea (bad) mov or rolb enter cmp and push mov stos insl pop or sahf negb out add (bad) (bad) icebp xchg inc mov mov movsb dec hlt dec mov xor int3 (bad) xchg jp mov lods lahf jno subl add ror cmc rol inc out and loope pop clc mov sub repnz je push and bound je or mov and sub mov std xchg mov imul stos (bad) mov push (bad) iret test mov mov js out stos in aad (bad) sbbl sbb (bad) mov scas pop pop mov pop call daa add push into mov fildll aam xor push pop adc ljmp not sub and xor ret out popa dec and adc ud2 pop mov or outsb nop lahf add push mov xchg enter ret push cli mov fistp mov add jge dec and pop xchg sub (bad) lret (bad) xchg stos mov dec jns cmp pushf stos mov pop jmp std and jb sbb cmp add (bad) pushf and xchg adc in movsb rclb icebp xchg cmp roll inc mov xchg fistl sub aas mov mov xlat rorl jbe and popf push xchg mov (bad) lock mov inc gs add mov mov mov je imul add (bad) xor and jnp outsl ret test mov push jnp mov cmpsl and jmp xor daa out aad add repnz pop imull jmp pop and dec divb ret cs or stc ret jne sub xchg call arpl xchg and adc fs scas test sub xor repz jns mov das out leave out inc bound ficomp decl (bad) dec and mov mov pop push xor dec aad inc sub fnstcw (bad) ss leave fcoml mov (bad) stos mov inc jecxz mov repz cs inc inc or adc adc pushl xor jp mov xchg dec mov shrl stos into push add repz sarb mov (bad) aad ret mov dec xchg jae xchg adc mov scas or mov leave push enter push lret sarl popf mov stos and in sub pop or dec xchg stos popl fistpll mov sub out sub lock mov dec xor int add rcrl mov mov mov cmp movsb or push insb fidivl xchg rcl mov (bad) cmc test scas divb sbb xchg daa ljmp mov dec jl sub das rorb lods leave aam fdivrs test xlat xlat xor insb jns (bad) mov movsl sub cmp xor mov call loop jg stos dec ret movsl adc mov repnz push rcll or lcall push scas adc sub mov push sub enter fild divl lock sub inc sub sub adc sbb shrl out int3 test add (bad) mov clc push das sub test mov sub or pop fildll or push mov pop inc sbbb psrld (bad) cmpsl call or inc (bad) sbb lret aam and lea jb dec (bad) lret rcrb daa outsb push xchg inc sbb sub ficoml pop aad aaa pop repnz sub mov test and neg in movsl insb xlat inc or mov lahf mov leave pop pop popf fldl2t test nop daa nop inc mov outsl push mov push push pop xor loope sub push jl es jnp sub xchg fisub sete das mov scas mov mov (bad) jae leave or mov rcll lret scas lret rcll or push sahf roll or std add fistpl inc and xchg add divl push call arpl pop or sahf movsb (bad) push cmp ror sti out dec cli mov pop pusha daa mov sub into les sbb int movsl hlt xchg adc add into insb popf jae das hlt xchg js xchg adc lock mov stos in arpl (bad) add jmp rolb test movsb mov fadds lret mov rorb out add push inc mov push ret arpl sub push lods jne or popf icebp push imul add push lret pop add loopne popf push outsl fnstsw sub inc cmp xor xor adc cmp pop mov scas jmp mov in mov jb xchg mov (bad) and test and call mov or jae sub add into cmp pop mov imulb fcmovu pop cli ret (bad) push pop lret movzbl mov mov adc jp pop mov aam sub icebp pop and and cmp imul lret xor in jmp mov ljmp daa pop lcall imul cld cwtl jo repnz std insb or add and bound dec lds mov and pop ljmp jb pop into out cmp js (bad) enter out cmp subl aam imul jbe sub ja or or mov cmpb and dec sub or sbb push dec xchg mov and ret sub negb cld lret dec xor lret cmp shrl fist add cmp scas jmp ja scas cmp cwtl fwait (bad) mov imul out cli dec mov sbb cs fldpi add sbb outsl pop and cmp push aad push add into sub mov push mov aas ret fs pop xor call js inc cmc ret mov ljmp mov or and ret outsb adc loop sbb cli fsubrl dec push mov shlb mov and add dec jno jp adc in and lea mov dec cltd lret mulb adc mov mov rcrb test sbb rcrb or aam movsb inc add mov scas inc adc xor out pop pop jne or xchg xor fs push mov loop xchg int add mov jl shl push (bad) mov lods push or popf daa push out scas push xor ljmp push (bad) out push sbb stos mov dec call xor sbb ds sub repnz cmp or sub jbe mov dec aad outsl mov pop lods shr imul loop xchg test das test mov inc rorb xchg (bad) insl cmp in inc loope sub jle es ret jmp or or clc daa dec idivb and loop sub pop test cmp ret xor pop (bad) sbb in sar (bad) add lods sub xor pop xor stc cmp imul std inc dec jnp push cmp sub inc jmp fldenv sub addr16 gs add addb mov sub movsb mov add dec (bad) fnstcw xchg je test das iret call mov repz or cmpsl jge std jno dec pushf cli lea sub ficompl (bad) mov aad adc add dec cwtl out xchg popa dec ret or mov jmp sbb int3 mov push dec shr mov mov or aam xor bnd xor sub aaa push or clc sub pop push sub add and push pop sub and and add sar mov jb mov xchg fistp cmp xchg inc add loop pop popa mov fistl cs test cmp adc mov sub sub bound mov loope (bad) cmp cmp xor test mov inc jbe xlat adc pop fsubrs mov out (bad) jecxz cmp mov mov adc fnstenv movb mov mov pop icebp mov add add (bad) idivl pop stos cmp sbb out lcall xlat test sti cmp add mov cmp je aaa mov adc int add cmp pop push (bad) imul jmp and scas xor imul fld jp push lock xchg push push idiv cwtl push loop inc pop dec dec dec repz mov and pop jne mov inc add loope or test mov jmp fdivl sub jne push pop sbbl pop mov sarb loopne fisttpll data16 repnz inc movsl push dec cmc sbb mov and mov mov test (bad) lahf ftst bound push pop xor addr16 pop jmp xor sub push enter stos bound mov mov rolb inc sub rcll dec pop in or or call imul fdivp mov icebp mov (bad) call jnp jne out fstpl bndstx cwtl (bad) mov clc cmpsl data16 (bad) (bad) xchg xchg xchg cltd inc (bad) fs cwtl notb jne jb jnp and push into repnz mov (bad) xor xor movl repnz xchg adcl or lock sbb loopne or pushf sub and or repz or int cs and sub cli cmpsl std orb iret mov push push leave jo pop xchg lcall test enter xchg in or call and dec and cli jne mov shrb rcrl xchg mov or out clc fisubl cwtl aad sahf jns ss fcmovbe sbb jl cmp mov insb imul testl inc cltd mov or insl sbb fs mov cwtl cld lock pop cmc (bad) fdivrs ret dec mov aad push xchg sub mov negl mov xchg mov dec mov mov add js dec fiaddl bound cmc scas mov cmc xchg sbb sub or adc in inc sub pop jne,pn decb dec ljmp lods mov cmp jns cs je push jne call cmc cltd out jmp ss push sti sub mov inc fidivrl push cmpsl out add or out es and call int stc repz repnz fbstp mov pop ret push mov pop push push ljmp xor enter loop jg sub or jo or cmp pop sti test fistl lahf repz adc xor aas sub jne push bound lea and mov pop sarb test or sub popf mov push mov sub jnp sub (bad) and inc push std jnp and mov xlat sbb add lret lea mov ret (bad) (bad) xor lret sar pushl (bad) xor jne or in cli ljmp and out jnp jo ret mov js jecxz and fldenv push daa (bad) push pop adc decb nop sub sti cmc adc push shll and or mov and roll and xor inc jecxz mov das mov enter notl jno sahf icebp xchg leave out fistpl ljmp dec add fcomps xchg cmp add cli cmc cmpsl bound sub stos out dec mov rorb adc or or xchg pop das bound rcll lahf xchg jmp mov addr16 add cmp call inc or cmp lock daa adc push add xchg out add cmp and cli jecxz test add mov mov cmp or mov add push push (bad) fcom into sti test loope leave fmuls xor adc xchg ss test push xchg (bad) push stos cmp int3 pusha out sub xor test mov pop pop add movsl pop ret (bad) imul fldcw stc mov push push sub and inc adc mov xchg pop scas pop pop and xchg icebp sub cwtl sub xchg push bound neg xchg fs imul mulb hlt push popf hlt addr16 push das and popf ret int3 popf (bad) sbb test sbb jno inc dec gs mov dec and in xor xor outsb out pop add xchg push or movsb clc jmp cld push leave xlat xchg out dec data16 mov ficomp inc (bad) je in mov roll sub fiadd jge mov je pop or jge and aaa hlt (bad) fwait pop and push (bad) mov add shll xchg icebp (bad) sub mov add (bad) pusha vmovddup lds mov sarl xor and pop push xor ja jno stc scas mov xchg enter stc dec icebp push jno adc out cmp adc fdivrs mov mov mov dec push sbb scas mov or orl cs adc xor pop cmc iret ds xor call xchg adc or imul lods dec out mov in scas int out push jl jae or jmp jmp push cmp dec push inc pop ret jmp mov cmc pop push (bad) (bad) jne mov sub mov inc or or xlat cli je xor mov sbb pop movsl xchg subb loop roll (bad) lret test pop test adc mov adc or jmp fiadd cmp in pop dec cmpsl adc or movsl roll fdivrp imul mov pop pop test ret fstps lods loope (bad) pop dec mov inc pop xchg out mov push cltd dec mov sub sub mov pop sub jno ret push cmp inc mov xor jae push clc sti int3 sbb daa call mov and or lock fidivl inc loop mov push jmp xor ja and fsubrs (bad) mov (bad) and into jg and and jg lds (bad) adc mov dec mov (bad) in popf lcall xchg xchg sbb mov xor xlat mov aad push pushf notb jp add mov inc imulb lret rcll pop jl mov ljmp test dec clc push mov loope outsl pusha and sub dec push in pushf and dec ljmp leave add lds mov xor xor movb or xchg and xchg mov out pop pop das fmul notl repz xchg cmpsl mov mov mov cmp sub in icebp pop jnp adc jecxz adc fsts imul xor jl sub das mov (bad) ret cltd out pop push mov xor shrl ljmp fsubs divl and pop pop sbb rcll call xchg xor push sub mov in sbb mov repz ficoml pushf mov pop mov cmpsl xchg adc shrd sti dec (bad) cmp sub cltd (bad) mov mov mov sub xorb and dec mov cmpsl stc xor sub xor jmp loope jb test stos cld shlb xor loopne jecxz inc lret cmpsl cmp hlt ja mov jne pop out cli repnz cmp andl add xor andl push in inc fidivrl and cmpsl sub scas ljmp add icebp and xchg inc pushf mov testb push mov mov outsl out leave xchg outsb cmpsb push add xor jmp fisub lahf out pop leave ljmp dec mov sarb pop fldcw fsubs arpl sub aas notl mov test das icebp push pop push add divl pop clc xor mov and mov push loop fld lea pop daa mov mov (bad) sbb push adc out or adc (bad) lret movl cmp iret pusha sub add and loopne (bad) xlat mov xchg mov pop iret fldcw arpl cmp jae inc roll jmp sub inc jb shr popa adc cmpb mov cld mov test lock fdiv sbb mov aam pop insl and jb aaa jno jnp push scas jne out mov xchg int3 ljmp sub ss das out inc mov sub jmp cmc mull sub pushf xchg add dec xchg test inc push outsb stc and add std and push inc cltd out es subl arpl lret ret jp ret iret add lods mov or jne (bad) (bad) bound cmc daa jle iret (bad) mov adc pop movb pop iret fsts (bad) mov bound repz and idivl mov sub xor repnz and xchg sub rcll push pop pop mov and call mov fwait out mov add mov sub cmpsb jmp mov xor pop clc test loopne xor mov pushf or xchg int3 addr16 sbb xlat mov loope (bad) or fcoms ret xor xchg aaa ja push aam jmp (bad) dec cmp or sub test arpl rorb into xchg sub mov mov and fldl mov and pop mov mov rorb jle adc push or sub gs ficom sub gs cmp mov add or cmp into pop scas pop ret and loop xor les in repz es shrb imul mov test add add aaa ret aas adc mov inc pop mov clc xchg jg scas ljmp loope jne cmc xchg or adc pop adc (bad) lret jl aam cltd test in dec xchg mov or sarb call pop call fimull loopne out pop subb data16 aaa sub pop sub stos add push xchg stc pop leave loop mov imulb or push popa add push cmp jecxz orb jae push popf inc add xchg lods mov pop movsb icebp pop sub repnz add es pop xchg (bad) out lret cltd daa mov mov add mov ret push adc mov inc fwait repnz inc jnp lret add xor xchg sub lock ljmp pop dec sub pop add dec ds add mov arpl leave cmpsb xor and ljmp pop idiv and scas xor and movsl je loop and movsl push inc bound ret push das fmull cmp sub ds insb das movsl mov mov mov data16 je and xchg loope jmp mov or fwait imul jmp pop or and and test icebp and pop ret sub mov in stos jne cwtl test inc (bad) or (bad) xchg jecxz add loop pop push ds xchg jle imul mov inc lods adc push (bad) jne leave cmpsl jbe cmp mov cld bound dec jbe xor mov mov jne scas dec sub in lahf rol adc decb pop lcall jne push mov jae sub fucomi push mov or les mov fprem1 jmp and adc aas mov sub adc test mov (bad) mull adc sub imul or mov in call test shrl sub mov push push and adc adc pop lcall mov lods inc cmpsl xchg idiv lret sub sti cmp sbb mov and sub cmp test out pop mov adcl fildll iret xor stos mov das repz add fcoms (bad) add mov or insb xchg je add jge pop push xor fdivrl jl push push mov (bad) jp jg inc jns lret out out mov adc sub mov push push pop dec xchg pop into mov mov outsb cld imul movsl dec sti addr16 mov dec pop dec aad dec cmpsl xchg adc notl orb dec push fnstsw mov notl xchg movsb lods sti sub fsts mov jnp cld push jmp cmp stos mov jo cwtl lahf xchg adc jo mov dec jbe adc lret dec daa xor fucomp sub mov ret and xor mov mov jecxz mov xchg ja jnp jg jge xor es pop in pop test sub loope das ja cmc repnz pop aad imul cmc sbb mov xchg and mov or fidivrl (bad) sub add sub and add loop out fistp pop ljmp sub (bad) mov in xor mov insl sub xor sub lahf inc mov push int js das xlat fidivl xchg xchg std push (bad) test lret ljmp pushf pop clc cmp test cli sub and and cmp jmp push cmp cmp cmp js mov imul dec mov les or fistpll ficom fidivr jge mov xlat lds jno mov mov into out inc (bad) jo or xchg cli jb add test (bad) push inc lret fistp push imul xchg adc aad scas cmpsl in loopne repz push or push (bad) ds bound mov lret mov dec lret outsl stos or out popa jmp lock push inc push iret sub inc mov pop mov lret jg mov out dec mov push movsl fstl mov cmc push movsl inc loopne cltd fdivrs mov mov dec adc xchg mov mov (bad) xor fmul loop clc ds (bad) (bad) je pop mov ljmp jl inc or push pop xchg icebp scas cmp mov imul cmp cltd jmp push adcb pop mov jmp push in mov mov xor or in test and xchg in xchg loope jg out sub dec lea leave popf jae adc xor mov cmp out mov lds je fstl jns repz xchg or imulb leave dec add mov shll fwait loopne js sbb fnsave enter pop outsb mov gs fnstenv add dec fmuls stc mov (bad) cmp push fcoms aaa or sub pop adc dec or test (bad) mov outsb int xchg or dec outsl pop fldcw sbb out stc push imul lret leave fldl loope sub aas imulb or dec rolb mov cmp sbb jmp fistp mov out nop jb les pop stc scas push add shrb adc sub xor add dec dec lahf (bad) sti sub add cmp pop push add sti jecxz adc leave fnstsw pop xor test add ljmp pop pushl mov repz stos pop movaps mov scas fadds ljmp push pop adc movsl ret jno scas mov cmp and adc clc leave or pop jg (bad) pop stc dec dec mov imul or into mov mov xchg xchg xchg mov mov push stos mov and add repz (bad) ss jmp aaa cmpsb in push mov flds adc cmp hlt xor add movsb clc popa das aaa repz add and stos xor xlat xor rorl push in outsl (bad) mov fbstp dec stc mov mov cmp ret push jbe cmp mov cli cmp aaa mov push jecxz mov mov pop insb and cld loop fs push pop enter sbb ja out xchg orps lcall lcall push push xor lds add push mov mov rcrl fstpl fs push mov fsubrs jnp push mov popf push ds outsb in jnp lcall cmp decl jae dec mov (bad) push mov sbb push rol jmp pop call or pop (bad) and pushl pop jg adc push push sti mull sbb adc push mov jb add jns fs pushf pop xor push jbe sti jl add sarb pop jnp and orb andb push mov fdivs lret jp jne mov repnz rcll add mov or add gs xor pop inc repz sub (bad) sub int and cmp das and leave nop (bad) in push dec movlps mov pop mov mov pop or cmp dec out mov pop mov pushl jle or out es iret adc dec push mov roll add xor or push (bad) jne bound ljmp ret lds pop xchg stos jae out add int3 sub mov add add push sub dec sahf loopne or out xor cli addr16 add sub stc roll int mov sbb add out push jge rcrl jnp cmp and fwait and std pop popf push sahf bswap mov push sub pop push cwtl adc pop push dec push cli xchg fs push xchg jbe xchg cmp and leave sub ds js das mull mov popf xchg (bad) mov shrl pop mov inc and ret push sti shlb daa lahf bound fucomip rclb (bad) mov divb pop sub mov pop mov sarl sub or test stos xor push outsb sub or and (bad) lahf sti jno cs lahf lret (bad) or (bad) call repz xchg inc mov (bad) sub jl,pt out add popf sarl pusha xor and fild cli idivb ss pusha cmp repnz pop jbe lcall shl mov mov and dec pop jmp xchg lods jge add fldl movsl out ror inc adc call dec jmp mov and mov sti dec adc movsl xchg daa cmp jg lahf xchg nop shr into or cmp lods adc and call cmpsb cmpsl lahf xchg nop ret pop imul sbb scas mov inc test out xor ljmp sub or mov insb daa fisttpl imul pop (bad) dec add xchg out pop xlat xor sti lds mov push lret xchg or test pushl pop sub add xchg jl and or out popf mov jmp mov mov shrb mov fwait data16 ret sub mov sbbb sub out addr16 xor and out mov dec or lahf shll scas addr16 test or or sub call (bad) out std or stos and call sub sbb sub push daa (bad) cmpsl fnstcw inc dec enter sub adc lret stos xchg imul mov cmc imul mov cli sub xor leave lret aas std ljmp dec dec push daa loope gs mov push and fwait repnz cltd out or shrb push xor push push test (bad) inc call in jmp xchg add pushf cmpsb inc mov add inc push (bad) pop divl pop sbb sub and push pop add xor cltd int mov jp xor xor lds sbb xchg aam jmp mov sub scas xor mov sbb (bad) jne mov and icebp dec jg das push mov dec fstps sahf test inc adc or loopne and icebp lret mov mov sub xchg bound lods (bad) insb cli pop dec mov inc pop sbb (bad) arpl sub cmpsl push push sub (bad) or or fidivr ss rolb mov movsl clc jae gs inc lock jne pop xchg fbstp or pop add or xor jle xchg mov dec inc rcrl add (bad) call gs lods or lea scas mov daa iret stc stos cmpsl pop xor or cmc lahf movsl in xlat mov push push leave push add ljmp pop je ljmp (bad) bnd ret xor pushf imul adc je adc sbb dec adc jecxz cmp or aam das pop mov adc dec mov outsl jb sub sub les stos jb adc lret repz add add and sar das lods adc pop and pop into xor jbe push (bad) (bad) mov mov inc xor mov clc mov pop sub pop and in scas mov stc xor cwtl push (bad) (bad) fbstp fisubr cmpsb and pop imul nop outsl popf (bad) lret push inc sub and sub ljmp ficoml sbb add pop lret fidiv (bad) out inc pop sub xchg ljmp ret cld xchg (bad) xor mov jno sbb jmp sbb into (bad) in lea or sarl push add cmpsl adc or or xlat pushf pop xchg jns imul push repnz movsb (bad) xchg es icebp jo and dec add test (bad) out or repnz sub mov cmp fcomps repz mov mov outsb pushf xchg (bad) mov pop jb enter imul fs scas lods fcoml inc (bad) (bad) jbe add cmpsl cmpsb mov ret dec test xchg pusha imul jbe ret jg push (bad) (bad) add sub ljmp xchg xlat and clc (bad) lock add popa adc stos aam dec lods fadds xor mov pusha xchg mov sbb sbb fisttp movsb (bad) mov sub adc mov push lea sub fldenv icebp pop inc sbb movsb cmpsb mov outsb imul lahf or inc test sbb push fldt jl pop out xchg notl jae sub cs lret dec and movsl in dec push out jb or push mov das fcomip jmp lds push or popa rol sub lods mov test fimull fldl iret xchg clc xor jnp jl in sub fcmovu push jecxz popf push or dec ret cltd pop mov jmp xlat scas fcom comiss ds cmp mov js test mov fld (bad) out loop xchg (bad) sub push dec pop (bad) in jg add sub pop jge mov inc lock push xor push mov mov xlat cmp mov outsl aas jne jno or xor or push add (bad) out jge loopne add jno (bad) movsb mov cmpsl or stos in or rolb lahf icebp inc inc push mov jg inc (bad) rclb repnz out add sbb out scas dec test push flds or push ret movsb jge (bad) pop xor pop aas sub scas sbb mov jo jno repnz mov test add add xor std pop sub xchg (bad) aas dec push das psadbw mov loopne sub add (bad) pop insb nop sub fcomps mov fisubr mov test mov adc pop push in fst mov ja lcallw add push push das ss add pop inc rolb sbb addb nop pushl jns mov cmpsl push jnp adc add and test (bad) dec gs sub lret les jae outsb repnz adc jge or movsl sbb pop push mov adc lock mov dec aas xchg or adc fs xchg cltd inc pop sub repz (bad) mov flds mov movsb in mov pop push push outsl or mov ss inc dec (bad) dec (bad) jne mov pop xor push jg lock clc fs mov mov loope push movsb out mov sub adc dec ret pop fbld scas lea test mov push or imul sub xchg add push and or jne cltd jmp out mov mov movl cli iret jb call xlat cmpsb or xor push adc or dec cmp je stc mov cld (bad) cmpsb sub sub push cld shlb and test test dec lahf leave out jge or lock insl enter jp dec adc mov push sub in jae xchg idiv iret xlat test daa push (bad) repz (bad) out mov repnz aad (bad) and ret jno inc loop test cmc (bad) jecxz dec cli lret adcb cli fmuls into test ret or xchg fldl dec lret xchg jns jnp cmp cs and pop cmc into lret xchg mov lds test pop out je stos clc shl sub fdiv fld1 fs loop cmovns das or hlt pop dec xchg ret stc jmp dec aam jmp enter (bad) int lds sub gs test mov call inc and flds pop cmpsb bound xlat fistpll pop out loope xor or lods jbe out icebp mov sub xchg pop xchg xlat sbb ret add pop pop das in cmpsl and sarl test mov add xchg mov pop mov int3 sbb jmp xor or ljmp les mov testb imul aas repnz xchg lods or outsb dec adc xor jb fstpl test mov inc fist mov fs stos adc (bad) or xchg inc (bad) cmp iret sti xor out jmp or test rcll imul inc pop pop ds dec daa mov adc loopne lcall pop or enter jle add mov bound adc push sub popf dec add cwtl pop xor xchg xlat sahf pop mov sub push adc (bad) jecxz jmp bound cmp dec xor sub push addps fsubs push lret ljmp push out jnp es mov mov das call dec mov inc leave jle fs xor call lahf das js xchg clc mov in fs cwtl or ret decl (bad) dec xor sub ret rcrl imul jp into ret jl push cltd push sub icebp adc mov pushf mov cmp into pop adc daa and jae cmp fmulp ffreep inc push cmc shrb in cmp popa xchg out adc shr xchg or add ds cli iret jne cltd cmp adc jmp leave mov imul push dec dec (bad) mov sub xor lret test ret test ljmp outsb stc test popf mov pushf repz aad cmp jmp push xchg push fdivs rcrl pop stos je arpl mov mov jle dec inc cmp scas repnz xchg outsb and adc sub loop mov cmp push xchg inc idivl cmp and cs sbb mov cmp jns mov test in (bad) dec pop shll into mov sbb mov cld mov sbb sahf mov sar iret scas mov aad add data16 jmp (bad) mov pop adc fwait mov je jp push xchg sub and out scas imul xchg add fdivrs shll add inc xor sub decl fnstsw jmp adc xor jg or dec sar xor clc dec stc mov sub jmp lret pop push xchg aaa fs mov das add dec ljmp cmpsl leave add rclb add iret pop xor add xchg adc cmp add sti adc mov icebp inc rcll ljmp les dec btc adc mov xchg adc mov iret xor lahf lods jge jmp les into jmp lret cmc lods pop fistpll inc fstps pushl popf (bad) sbb mov imul int3 addr16 xlat xor movsb cmc scas sbb dec adc das mov push lahf aam outsl stos sub or stc rorl jo decl add sti and or inc cmp fdivs stos mov xchg test repnz nop shrl pusha xor jmp cmp pop mov sbb ret and push or push cwtl sub and pop outsb (bad) jnp jg sub pushl jns imul fstl push sti roll std sbb imul test pop dec (bad) inc (bad) push cmp xor ja cli bound pop ljmp xchg adc sbb sub add adc add push jno cmpsl std add adc sbb dec icebp loop enter (bad) or scas push (bad) push fsubrs and pop cltd addb mov jo pop aas loopne (bad) js popf dec or dec out incl mov ret dec lahf xor test mov fidivrl xor or push sub push inc xchg xchg pop jae mov jecxz (bad) or pop jge ss outsl test xorl test lods mov sbb mov lret movswl ret idivl and scas fs stos fcmove push and std xchg leave arpl jecxz xchg ds pop movsb or and adc sbb shll leave loope gs adc jecxz and fwait shll stos repnz lcall fildl inc dec gs add sub cli imul push call or fs (bad) std ficom pop lea les fistpll cmp push in push (bad) icebp inc jmp repnz mov xor data16 out inc xor std push lds fstpt mov pop rorl pop xor mov std xchg push lahf add call je mov aas call and std shll sub push movsl pop aaa (bad) not cli jns jg mov or fs lods pop pop sub xorb dec jmp and cmp clc (bad) div es cltd ss icebp cmpsb push mov int3 dec daa sub jno lods xorb ja wbinvd mov loop xchg xor xchg jb cmp cmp lret popf and clc mov push cmp or or push pop cs push mov ret (bad) mov cs loopne ucomiss out mov add and pop ljmp or (bad) sahf mov lods push adc cmp sahf mov cli call (bad) xchg flds mov fnstenv jg daa lcall in sub lods push mov lret xchg icebp jmp (bad) aaa jbe repz daa mov xlat nop push fbld in dec add mov mov cli add mov pop lods adc add (bad) xchg jmp and pop icebp inc xchg xchg addr16 sub nop popf nop push xor popf dec cli push add xchg jmp repz xor sub lret cwtl adc ret push xor decb xor sub sub adc mov rcrb and sub movsb test push (bad) leave mov push jg js cwtl (bad) mov popf jbe das (bad) ljmp mov xor xlat out mov add add pushf cli pusha mov imul lret mov ret imul push pop jmp fnop add xchg jle push pushl jno inc fmuls out and mov add daa loop jmp jnp stc xchg dec add rcrb xor enter or pop sbb shrb sbb lret out cmc in movsl ja cltd jle push and dec decl inc jg sarl push or mov fistpll rcr mov fmulp fchs add lret ljmp lret and ljmp dec mov imul jmp cmp xor insb orl sub popf xor shrl les mov and test xchg jmp (bad) sub push fisubrl or mov add sti push mov inc cli and pop pop pop lds push loope jge pop sarl call ret imul pop jmp shll lret addl das (bad) sti (bad) push (bad) jmp mov repnz iret mov add jg lock mov or inc gs and leave xor and mov out jecxz ljmp pop imul mov ret jbe push jnp daa lcall push cmp jbe mov dec (bad) or int3 mov std and mov sub mov lds shrl rcrb adc push jecxz sub push mov in mov jnp fsubrp jmp cmc cmp js mov lret (bad) jo jo and ja cmpsl fnstsw dec (bad) mov mov das sub out xchg clc sbb push cmpsl adc cmp inc mov pop orl sub call lret ss pop add mov mov xor in jb mov insb insb dec add xor js rcll out sub mov adc cltd xchg mov (bad) pop mov hlt add push jge fcmovnb cmp popa cmp pop cmp sub inc lret mov cltd push xor imull popf shrl leave push lcall (bad) jmp call aad push lcall das ret mov pop mov push xchg mov mov push inc inc adc jge scas mov lock lea fmuls lock sub lret mov rcr mov inc leave jp adc xor dec enter push cmp push or out fcoms xor inc xor dec push push out scas in add and xor sti lods sub bnd mov lahf cmp cltd and ret xlat dec xor sub push or add sub pop xor sub fsub dec add mov push outsb sub add push cwtl inc xor mov add xchg jecxz dec jmp mov (bad) sub mov es ja popf jmp out push test fimul (bad) stos mov sti ss cltd xchg test fadds pop test enter lahf stos daa push outsb pop xchg sti lcall cwtl and adc je or test pop scas sub dec (bad) decb fisttp dec xchg fimull into push js sar xor cmp insb (bad) icebp pop cmp sub cmp lds mov into mov loope sub es dec mov test ljmp rsqrtps cwtl mov gs repnz or ret out mov sbb out cmp push loopne sti add dec daa call ret cs sahf movsb test lret or mov cmpsl adc mov test push pop mov ljmp push imul clc xor pop bound mov in mov sub and mov pop mov jno movsb push lahf (bad) ret das les (bad) sub adc mov cmp dec out xchg sub and mov push pop hlt fsubr adc in fidivr push xor dec stos je stos loop pop xchg cld pop div leave cld in cmp and add or sarl inc push fcmovne cmp dec insl cmp in mov mov xchg fidiv xor insl in dec repz pop and inc out push mov sbb push stos popf repnz or jge je pop xchg pop inc orb cmp imul add popf (bad) push lds push sahf push popf push shll mov lret adc xor pop scas (bad) or les push shlb push push inc or insb fldt inc pop xchg jne fistp or xor fs es jns sub and or fbstp cmpsb adcw and fimul lods (bad) push lea push mov neg cmp rorl mov nop and in pop stos movsb (bad) out das sbb sbb or test sbb or adc push mov aad loope mov xor pop dec or insb adc or xor mov das cmp push sub inc or sub imul push add cmp mov imul incb test shl inc dec mov clc dec int rclb xor xor adc gs out dec push sub mov sti xor test sub roll add repnz sub aam loop enter and daa out aad inc dec xchg xor scas insl sub xlat push xchg loop jae movsl xlat inc pusha dec adc add (bad) (bad) mov dec fsubl sub jp inc mov xchg cltd lock lret rcr mov push pushw daa inc xchg jo or shll repnz jbe icebp mov add outsb stos sub mov dec out (bad) into test fiaddl adcl cmp icebp xor pop sub outsb ficompl pop inc repnz rolb sbb inc add jmp mov xchg bound clc loop jg jle shr jmp test jb iret jb fdivrs call push adc ret stos inc add sub sub addr16 or jg scas sahf fsts out mov jae adc mov mov add dec add stos repz cmp or or (bad) lods jbe popa ljmp sub xchg dec je imul lahf pop adc mov lods dec rolb aaa mov mov lods pop xchg or push jne orb mov test push sbb in sub popf fadds cmp dec rcrl jmp inc iret mov mov gs test push xor lret xchg pop test mov add pop mov (bad) repnz mov xchg shlb xor lahf (bad) push (bad) and mov jno lods ret test mov sbb mov inc lahf (bad) scas lret mov inc in or ficompl les cmp lret sub xchg jne push loop lcall test mov pop shll clc or aaa aad je jne or bound pop in sub mov fxch aaa and loope out fisubr pop jecxz frstor clc dec jns cmpsb aaa (bad) aaa hlt stos cmp repz ficom xor cmpsb mov sbb xchg test mov push cmp jl add lock xor lret or fimull push push sbb inc add testb das sub cld jg push shrl pop sub or repz adc mov arpl ret imul (bad) or das jmp cmc xor add xor and mov fs ficompl (bad) jle or into scas lret push int3 cwtl (bad) cmp sbb jne mov mov cld stos pop je scas popa lods jmp ds pusha fs add xchg test mov mov pop dec sbb into es cltd aas jp (bad) shrl pop or mov dec mov je pop and fwait repz (bad) out icebp fadds ret outsl xchg pop jmp cld in xchg stos test mov adcb or jle daa gs adc pop and test pop sub iret imul loop mov (bad) popf aam daa out mov das sub stc js js sbb lock rcrb cmp aas jne jmp rcrb mov sub xor popf push dec dec cmc and out mov or out mov mov test cmc dec scas pushf push call pop push and mov call sub sub ror lahf stc fsubs or fbstp imul sbb call repz and scas push lock pop and out test into xlat push xchg leave jne xor clc xchg loopne add das or decl (bad) mov movb dec out test aas ret and daa pop test adc (bad) out cmp sub ret shrb sbb push mov pushf sub negb jmp jmp inc add sbb lret icebp idivl xor in insb jae adc xchg pop push (bad) inc add xlat pop mov out aad sbb pop cmp call sub push pop in stc mov or jae dec push (bad) (bad) sub fnstcw outsb mov add inc cmp setae insl adc lock or fsts sub daa fild or mov jge scas push xor sbb and cmp or xlat rcll movsl clc insb pushf push push movb fldcw stos imul push mov pop mov inc push mov mov sub nop push push sub mov dec call outsl out je push or xchg xchg pusha pop xor add xor sbb mov xor scas sub lds es repnz fucomi stc mul jge add mov sub and dec adc add (bad) or jbe push xor out or mov push rcll cmp xchg mov roll or scas pop out (bad) jmp mov push push enter les lods movsl aad (bad) push jb pop mov (bad) cld or add fnstenv push in daa std pushf jae xchg cmp mov inc or leave adc cmp sub mov rorl add or lds and (bad) xchg in jge (bad) mov jo daa (bad) or mov sahf (bad) daa lds bound jle jmp pushl lret and push add pop add xchg test leave adc pop lods ret (bad) and mov out dec shrb cwtl aad lahf push es sahf out out push ret add addr16 imul pop das dec push mov daa mov jno mov xchg insb dec rol cmp xchg leave idivl loopne icebp xchg in xchg pop shl test jbe stc jmp mov lock mov mov scas adc sub repz stos sub pop jns adc (bad) xchg std adc inc mov (bad) and mov leave test dec mov pop mov pop aas dec sti cltd mov push lods ljmp out sub pushf aam in dec iret cmp xor sbb pop jns dec push ret mov dec mov rclb pop dec insb dec xor sub ja js and fnsave insb insb test aam (bad) jmp popf lcall mov mov mov jns je inc ljmp adc pop (bad) mov idivl iret pop shrl push pop in popa mov imul loope sub clc xor pop cltd pop repnz dec dec clc std jg jg xchg push push mov sub div push into aaa xchg dec fisttpl push inc adc mov mov stos sub popf jbe ret and rorb xlat mov pop (bad) stos aam pop jbe aad repnz loopne sub mov jg pop loope test test addb insl or adc push pop pop xor (bad) sub mov add xorb aas rcll outsb loop xlat clc (bad) imul clc (bad) inc push iret and or add mov fadds jo or add fsubrs divl adc xor mov into or das out and movb push loope in or pop xor jb aam add in sbb and cli popa push out xor test xor (bad) xchg lock xchg fbstp shr (bad) stc ret pop repz lods or ret lahf mov or (bad) imul inc add xor fldenv and jne push or mov sub ljmp or push adc test ss mov dec sub iret hlt xor pop pop cmpsl ja negb mov mov jne lods in jmp cmp jmp daa xor fnstsw lahf inc mov ljmp add fbstp mov or pop mov xor rcll int popa lea in mov xlat ljmp mov sub cmpsl xchg pop stos xor adc mov jne ss ret push rcrb in pop addr16 and out shll and push test xor std dec cmp mov push je les scas adc pushf (bad) out cltd jns push push inc mov jae sbb lret lock jnp cwtl fs pushf and or push int3 adc ret dec or movzbl daa add ja push jmp mov xor das arpl xchg scas cmp adc add inc pop mov addr16 inc lock (bad) in and fcoml add pop cmp out popf xchg and les (bad) fsubr and ss ljmp mov fnsave mov pop jbe lret jo mov (bad) or es scas push mov lret or (bad) pop push icebp lods stc xchg out inc sub adc rcrl ficom mov int imul cld inc mov (bad) mov loope sbb ret add sbb mov cmp add movsl sbb loopne (bad) xor divl add das rep mov push sti and lahf jae out or push outsb rorb adc movl cmpsl fimul and mov jno dec cld pop es pop jno pop iret lods mov add mov loopne cmp ds notl ljmp dec push (bad) mov lret or add popf iret dec popaw jmp cli popa mov into ror mov xchg adc test jp call daa gs mov movl in cld cmpsl jne jmp dec bswap addr16 ljmp jne jne aaa inc pushl lock add dec mov test fcomps pop jmp addr16 dec mov add add aam or loope gs sub xor adc add mov imul fldcw sub iret iret jg lods and jg pop dec jmp adc repz push mov or pusha cmp dec xchg daa xor repz jl das jns fs add mov xchg jle cmpsb inc add jne insl loop or sub mov out or bound sub and jl add and notw cmp push icebp and sub test pop cmpsb rcll xorb xor push pop mov loope inc mov mov mov (bad) lahf out cmpsb int loope shrb pop outsl stos and shlb sub dec inc push add cmp push stc and icebp aad pushf dec aad or stos daa xor test ret fs int jp movsl dec loopne (bad) icebp jnp add mov jg push das imul out fxch inc mov xor (bad) pop aaa loop add or sub mov repz cmp cmp cmp (bad) sub lret icebp les mov sti xchg pop cld add xor or (bad) cltd cld jnp inc loopne push and out and call das jmp xor imul mov sub push pop sub (bad) (bad) decb icebp push (bad) imul jl push nop or xor sub jle daa daa (bad) pop push pushf mov es lds repz inc das (bad) lcall sub adc mov ljmpw inc dec ficom xchg push or pop insb inc mov negb adc mov outsl xchg (bad) in out out int aas cmpsb pop add je xchg insb fiadd ret adc push pop lock lret mov sub adc mov aaa repnz and cli (bad) cli out jne pop ljmp xor sub mov pop lret push pop int xchg into push or sub pop or sub xchg mov dec shrb push dec enter int3 pusha out idivb cli mov add cmp sbbl fidivr je mov repz push and mov aas add or push push rcr int3 dec xchg stc dec scas push mov fnstenv mov cmpsb or stos mov sarb lret lcall sub cmp cmp xor cmp sub jmp outsl add push mov and xchg add mov in dec or and mov and ret sub mov or ljmp adc or stos and repnz incb push xchg scas popa (bad) mov ds in pop xchg mov adc (bad) pushf xor dec mul xchg dec fsubrs sbb repz std inc and lret (bad) xor pop fistpl clc sti test xchg lods mov gs pushf push xchg sti jns lock inc jle jle add cmp clc mov in stos imul addl je push sub jp jge mov sbb out daa sub mov inc fs mov leave and push lret ds ja and out icebp cld movsl faddl jbe pop and push sub add xor cmp gs mov add mov mov dec out cld inc in pop push add fs shrb popf out push push popf sub jae,pn and outsb xor pop xor add sbb out and test incb js xchg clc mov das stos fs mov pop shrl in inc pop test jecxz test cmc rclb jne (bad) and jae leave sub mov rcl test jae add jle (bad) popf aad das popf movsb imull lret mov icebp das mov xor push pusha fs and imull notl addr16 push call jmp add sarb aad mov pop mov cmp ds mov (bad) arpl sub mov (bad) fcomps cmp sub pushf jg mov xchg or push movsb pop in cs add jg pop aaa mov ljmp mov mov jno stos jo and cmp movsb sbb xchg dec addr16 mov jle jge lds and push scas loope addl ljmp pop push push push xor xor add sbb rorb mov sbb pop push jl cs cmpl add mov lcall mov aam ret adc push mov push popf inc or pop push push je and out mov pop lcall add test and xchg sbb aaa fs cmp pop outsb jae sti call es or add int3 jle xchg xchg cld movsl mov push (bad) ja xchg xlat mov das mov add add push add xchg scas xor push mov inc fnstsw pop mov push add dec dec add fldt int3 mov negb pusha dec push out xchg cld adc stc pop test push push pop add ficomp xor int adc loopne outsl ja cwtl (bad) mov inc xor add repnz xchg adc aad pop inc xchg jnp test or mov in sub daa adc push ss shll or rcl movsl mov dec push std (bad) into adc mov (bad) dec pop inc aam dec mov pop addr16 push sbb negb xor jbe pop fcompl fildll pop fnstcw fcmovnu jns dec push cmp cmpsb sbbb lahf inc push xor xlat mov pop scas sub lret inc dec jmp inc or cmp ret or mov aaa adc xchg xor cmp pop xchg adc mov push mov loopne test iret decl mull pop push stos sub and sub pop jl xor jge mov in mov xor enter loop adc repnz js adc loope rolb sbb push cmp call push in lahf push adc push pop pushf cmp popf arpl and jle jmp xchg inc and dec xorb cmp ret and inc ljmp loope pop xchg fidivl mov sub sub xchg xlat (bad) dec sub in adc mov das bnd push mov call mov xor ret lcall clc (bad) movsb out mov adc pop jne mov xor pop add mov or pop cmovp and out movsb icebp fstpl test mov jae mov add dec out popf inc insb movsl push (bad) clc dec fsubp repz add lods adc ljmp sub add mov mov aam fadd and jbe and cwtl shr pop sbb insb imul orb mov mov mov ja gs and cmp movsl out and sub or add dec icebp test dec out fnstcw fs test add or fild sub xchg cmp lret das in xor xchg or pop or jg inc shll mov sub popaw dec inc jae jmp xlat dec mov repz sub xor in adc and mov sub jge or and icebp mov xor arpl fidiv xor (bad) in dec and repz jmp pop fcoms imul roll ret dec fdiv xor int3 sahf sarl mov scas (bad) stc iret (bad) cmp outsb mov pop negl xor cmp push icebp jle or dec lret mul daa lods fdivrl cmpsl xor xchg pop hlt xchg daa fist push xlat ljmpw es mov or icebp jge push das sbb pop icebp ljmp ret add cli xor ljmp out pop push or test scas cs cmp cmpsl (bad) sub in lods into push pop call (bad) xchg pop and jnp ret and sub pop divb add sbb (bad) (bad) adc punpckldq stc jge or adc jg test stos sub addl sbb sub sbb xchg sub stos dec sub xor dec sar pushf movsl scas mov orb divl icebp (bad) dec pop mov dec icebp cmp iret pop test stos mov icebp sti je xlat sub xchg loope out mov mov bound inc mov repz sub lods sar movsl ficomp fs call sub lret sbb mov sbb cwtl xchg rcll mov (bad) or pop popa push mov cmp loop,pt (bad) jmp (bad) sarl mov xor clc push dec out icebp notb pop mov dec fsub (bad) lock lds mov clc cmpsb mov pop ror xchg ljmp loope leave xchg fiadd or clc mov sub sarl and sub jmp cmp (bad) mov out faddp xchg jmp and leave push sahf out or dec adc repz mov and ror insb adc or jecxz seto cld imul ret gs shlb (bad) add mov and and add jb inc es stos (bad) (bad) gs and and jg pushf or ss push add test (bad) lret inc push out shrl clc iret sub xchg cwtl imul dec mov shrl ljmp je int ds xor jle pop mov in mov xchg into popf insb cmpb mov inc aaa push cltd and cmp insl not mov cmp mov clc outsb and add in cmc cmp inc xchg and sub popa loope cli and xor not sti scas scas out and and xchg cmp jnp cmpsl cld push dec adc jp ljmp cltd jmp adc fstps cs lods mov dec out sub sti gs adc les ljmp (bad) loope push and sub pop dec jecxz dec in ljmp insb repnz xlat mov adc push jmp and flds decb mov (bad) (bad) xchg ja mov cli popf rcr imul dec scas mov test pop and stos cmpsl das sbb pop and cld loop jle push or xchg in adc popf ret cmp dec mov mov add clc add or jg mov sub push sbb in add xchg je movsb iret in test cmpsl out pop test mov pop (bad) (bad) dec cmp adc add add push inc mov xlat lods sbb sub (bad) xor mov imul stos mov sub jmp sub insb out loope xor sub push fildl addr16 mov sbb std or aaa sarb repz repz push xor pop mov adc mov loopne divl lret xchg dec stos pop out cmp in mov in popl je lds sub out mov xor idivl mov ja mov (bad) pop cmp aam pop out inc sbb sub adc pop out std or sub sahf sar mov lock xlat pushf (bad) xor adc ljmp add xchg icebp je push mov pop fdiv push mov mov cmp mov add fs (bad) int push ds in sub sub cmp das fidivrl jg (bad) into insb testb stc or xor add bound sub bnd test xor das and test pop mov mov xchg ret jl pop rorl test jmp int3 jmp xchg cmpsl daa and jns xchg mov fs (bad) imul imul fiadd add std call cld sub dec or and sub jmp and cmp fbstp push out jo adc subb cmpsl (bad) iret mov mov fbstp test push xor and push jmp jmp xor xchg mov sub into mov or jae (bad) ret stc or test pop (bad) std jg lret es dec and imul xchg cmpsb xchg int3 mov fcoml adc stos ret fstpl dec mov sbb pop inc pop fnstenv sub jne stos or cwtl imul jl pop inc sub push cmp push loope outsb jecxz,pt dec stos (bad) fstpt cltd and in ljmp mov ret movsb out mov and xchg push push mov pop dec push add mov div sbb les dec mov and sbb dec cmp je mov mov xor dec imul cmpsb jne inc (bad) ljmp jno xor jp dec test test test int3 adc xchg cmp mov (bad) push call jl rorl loop and xor fs repz fxch outsl xchg mov (bad) fldcw insb mov xlat xchg and loop dec or add push ret and rcr scas jno movsl dec inc mov xchg sbb andb jge in pop jmp inc jle lret jb add add cmpsb cld cmp aam dec mov pop xor (bad) sub sti push repz push into mov inc scas daa divb pop cmpsl xlat xchg adc cmp lret fldcw push jmp add or dec ret or or fs push mov (bad) lahf idivb jmp push notl movsb mov xor div xorl mov sbbl out icebp xor adc sti dec les push xorl add xchg xchg inc (bad) add pop loope add inc xor icebp (bad) or inc aas fiaddl scas sbb stos dec (bad) or add jg in add insb sbb pop mov adc (bad) aaa or dec out out or sub pmovmskb pop sub mov (bad) lock mov aas mov ret adc jp cmp jo push mov inc xor daa fist rcrl xchg pop dec mov or add mov sahf add push lods add add jo mov cmp gs inc iret cmp mov into mulb mov stc nop or cmpsl in mov mov sub dec vcvtsi2sd rol adcl push push inc inc mov js mov mov ljmp andl pusha mov xor push into adc mov rolb jl dec clc (bad) cld sub jge mov pop aas pop add dec into out daa rcl in inc faddl jmp movsl lret movsl fwait stos adc out mov lods je fs mov stos adc lret icebp dec adc scas mov subl stos ret adc ljmp mov cmpsb push jmp popf sti lock xchg scas adc cli scas or je iret xchg or push pop xor xchg rcll mov and mov push idiv jno dec xor inc in mov pop ja enter (bad) cmp dec out sub xor pop sbb or xor xor (bad) pusha hlt mov dec mov into mov scas sbb or cmpsb sub into sbb insl mov lods pop pop dec mov jmp mov or sub subl fldenv xor xchg mov addl or orb into fdivrl pop and xchg push imul lock sahf out sub mov xchg adc and pop cmp lahf out enter jle dec mov lret test in adc lea jg dec leave hlt adc sbb pop and push pop cs rorl mov xchg scas lret xchg test movsb nop sti out test stos and test insb dec clc pop loopne out or (bad) sub icebp mov or pop cmp xchg arpl xchg icebp dec repnz cltd shrl leave in sub cmp cld popa cmpsb or dec outsb sub mov add mov in mov daa insb pop mov push leave push adc xchg lahf mov shlb (bad) out in or (bad) ficoml addl mov into xlat pop jno punpckhdq popf test and (bad) mov shr lahf push sub mov sub ljmp mov lret sub iret pop mov call rcrl sub xor sbb fnsave popf enter loop dec icebp loop stc ss dec pop mov repnz fistl xchg add jb lret mov push loop cwtl dec jmp jae jmp sub ffree data16 push inc push pop leave mov or and lret shll jne sub xor mov push dec call in mov decl loope xlat cmp lret imul cmc mov xor das dec (bad) mov hlt (bad) jb push cmp adc les xchg (bad) into mov adcb pop mov rcr decl inc xorl sub jle (bad) in stos dec leave int scas cmpl and mov cli sub ret sarl mov sbb dec mov dec lea lods sub ret movsl inc add aaa dec xor inc je movsl add sub push cmp cmc das push in iret or dec xchg jp popf incb xor mov mov stc dec ret mov inc or mov jnp les idivb (bad) cmp mov xor testl jmp mov adc cmp add mov jb mov push push mov and idivl xorb (bad) cmp testl mov aad divl pop dec sub pusha or rorb iret lret test xor aas or jp adc outsb dec add fnstenv jmp in and pop sub rcll out jl xor pop inc clc das shlb cmc xor inc js icebp jecxz,pn mov cmc inc inc or pop pop sub and dec jmp xchg daa out ds push loope sub dec mov test (bad) fidiv and (bad) mov inc xchg xor add lods (bad) adc in pop jge iret and repnz sbbl loop ja add les into mov rcrb ret jbe jo fdivp jmp jmp and fsubrl in inc mov add negb pushf sub lods and mov mov or adc cmpsl leave or jb popf hlt sbb cmp (bad) fisttpll lods adc xchg sbb repz dec rolb sub lods push faddl cmp or xor sub dec fisttpll push lock iret mov or push insb pop cltd push pop ljmp lret lock daa add jl shr fwait adc inc mov dec xchg jl cli cltd fisttpll sbb jg in (bad) mov push leave jo jbe leave add movb repnz int3 loopne sub aad jb mov lea orb sub mov mov push lock mov dec and leave fcmovbe add sub xor scas adc mov sti loopne adc clc pop and pop enter popa imull adc loop call xor add pop sub fstl or push xchg notl xchg xor add pusha lock movl pop push fcomps pop jbe jl imul adc adc pop inc xor sahf cmp lcall in addr16 sub sbb mov icebp call sub shr adc inc imul (bad) out sub xor cld mov into (bad) repnz repnz sbb mov idivb int3 push mov dec std lds pop mov fidivl iret mov or loop adc pop (bad) sub pop cwtl icebp idivl mov not push and iret xchg in in xchg ja inc and movsl jbe xchg out repnz test and jb test push ljmp (bad) mov xlat push cmp xchg nop ja fincstp dec xchg xchg enter cmp jl rclb pop (bad) mov cwtl popa and cltd rolb in or or std pop aaa sub int cs fist in mov ss rorl lods adc mov ja (bad) mov aaa jno sub imul xor jmp clc mov mov jb dec xor xchg mov sub test mov scas mov jb (bad) das imul add mov pop sub mov das or addb fldlg2 sub inc add adc jmp mov sarl sub push cmc arpl in repz dec xor inc add mov xor and jne mul and xor cli int3 test mov imul sub sub or pop sub mov ds mov cmp cmc (bad) aam test cmc popa inc add das xor xor jge adc mov enter popa fldl2t add push out pop inc or mov (bad) fs dec cmc int3 cmp out sub cld add frstor push gs sub (bad) xchg sbbb stc add dec push mov sbb icebp test inc daa mov or jecxz,pn push jbe sbb or out fs mov jns xchg jmp adc rol lea xchg cltd xor bound cmp cmc in ret mov adc fistpll cld push in or out incb or cwtl adc mov sub test aas add mov and jge sbb push or push or addb in popa imul push lock xor jbe push pushw xor or inc fidiv mov sti lea ljmp ret test scas inc subl xchg mov cs fcoms sub and lahf lret jb insl xor pop add mov mov out sub notb test icebp lret xchg ret not scas and or cmp sub stos mov dec jae or jge in mov cmp aas int3 cmp and push cmp push ljmp imul sbb pop inc aas fcomp xor clc add mov aas gs cmp xor and gs cmpsl leave and clc das fsubl insl pop ds adc xor pushf inc adc popa daa cmp pop stos xor dec inc jnp pop cmp fisubl sbb and adc mov pop mov or cmpsl pop push sub mov and and jp jmp lods pop out adc ficomp and dec add xchg sbb or mov popf (bad) ret (bad) dec adc cmp inc hlt leave jne pop or inc (bad) out or dec mov and mov sbb add xor adc cld call and mov ja xor jo mov hlt in or roll sub mov insb dec pop xor or imul or and pop hlt cmp loope and and in fistpl bound lods repz roll ud2 lods sbb adc add leave mov in xchg cld (bad) shrl or fwait cmp lds mov (bad) jmp dec mov xor mov cmovp mov fisttpl push addr16 (bad) jp pop pop mov dec mov push pop mov roll push test int (bad) (bad) or test mov lret add aad mov inc and jne cmp or mov ret imul or out fisttpll jne dec sbbb pop lcall aad fistpll jl (bad) dec sub sarb cmp add sbb adc test jnp lret outsb xlat pop xlat fs mov test sub and mov mov and loop mov add xchg scas xlat mov or or or inc subb shrb and adcl mov popa lds mov xor dec ja mov mov adc out ja fwait push out mov mov sbb lcall jb fsubrs add leave daa add notl jmp cmp mov or cmp xor and cmp ret push lret add popf test clc fmul cmp (bad) shr sub xor pop in sti sub ss and lock lahf pop xchg arpl fistpl mov sub cmpsb mov fisttpll jmp loop ljmp decl rolb xchg adc cmp and xor lods leave mov dec (bad) pop add xchg iret pop jmp neg outsl xor push insb mov jo (bad) mov sub sub aas movsb (bad) aaa push shrb jne ds mov cs clc pushf frstor push sbb sbb ja mov ror notb jne or (bad) stos scas xlat xchg jp int3 sub and fistpll (bad) leave push stos int push mov lret push shrl js jb dec ret mov imul ret int inc test sbb sti sub xor (bad) and jl in int3 aas ds mov pushl dec fsubrs ss xchg lret xlat xchg hlt or ljmp mov shrb xchg add stos insl jo cmp jp testl call mov sub shrb leave daa ja xchg inc jle sbb add dec push sti pop das push mov jo loope mov bound lcall in mov test pop mov gs sub mov outsl mov sub dec mov jmp inc jmp pop mov pop or movl push (bad) bnd pop dec stos xor sahf sub cmp and add mov out lahf jecxz les leave pop sub pop jg add hlt lret mov or shll adc jne push jge jae add (bad) jo (bad) mov sti xor adc ret sub ja mov and sub loopne or mov loop sub stos movl insl sub and stos cmp sub divb jns aas cmp dec cld fildll cmp insb ljmp les imul jb push ja bound mov inc loop xchg fwait mov push pop into add (bad) call cli mov mov xchg dec stos sub dec xor and mov adc scas pop adc or pop jno or cld inc movsb add gs and stos loop xchg ljmp stc mov imulb fcmovnb (bad) pop mov sub in pop mov mov out (bad) jno add je into stos xor stc mov jne jnp (bad) mov popf outsl push leave flds sub cmpsl loope xor cmp (bad) sti into cmp add rcrl scas xchg pop dec xchg mov inc and into (bad) dec cli popa jmp ds cmpsb push mov adc push and dec scas popf mov repnz adc dec sbb jnp repz (bad) mov icebp ret nop push mov or addr16 or pop cmpsl repnz xchg jmp loopne out stc int jge js enter sub pop fisttpll push jno adc clc lea mov mov test mov test inc lods push dec (bad) adc xor sarl sub ret movb aad repnz push movb (bad) lock mov and cmp mov lds cmp lods gs add icebp sbb sub push jle mov mov stc mov and (bad) xor cwtl lods out popf (bad) and out and iret clc and xchg ret push jle inc pop sahf cmp or (bad) mov (bad) mov push push pop sub or sahf mov sub xchg xchg in fs ficomp push jo xchg in jne dec gs add push cmp xor outsb mov stc add gs sub mov or add sti lea sub mov dec fs xor or or pop in cmpsl fwait or mov fsubs int3 sahf xchg rorb icebp cmpsl icebp mull sub fnstcw sbb mov dec out ss xor ficoml jo xchg dec dec jge test testb xor xchg adc in outsl das add mov bound mov sahf sbb xor pushf in sti sub notb (bad) or sbb xchg cmp pop or xor (bad) push xor rcl xchg repnz popf dec and mov xchg fcomps ret pop ja imul mov xchg jge cmp inc xor lds sub pop xlat adc mov mov std dec xchg out (bad) lret add fcoml pop push arpl mov mov xchg mov leave add mov imull ficompl (bad) push inc adc push in jg dec out xchg lds fisttp out jl pop add add fs push mov lret mov sti lret icebp dec rorb (bad) xchg pop pop and mov mov jmp and lret push jp mov add jne loopne cmp test xchg xchg insb pop dec fldl2t dec mov or aas push pusha js mov lret inc sbb daa (bad) hlt mov and cmp xchg (bad) jb or xlat out or xor nop mov ret pop push insl mov jnp xchg add stos sub xchg and jle ret fild xchg mov imul stos sub movsl cwtl push add std cmpsb inc pop in mov mov xor (bad) sub test mov pushf icebp sbb fcmovnb add repnz insb and scas push hlt pop mov std daa imul dec negb call cltd fdivrs pushf adc lea dec add and stos push les add out popa jne cltd ja sub (bad) cmp lret inc add mov add xor mov iret mov repz adc mov sahf sbb sbb (bad) mov jb out bound (bad) or fisttpll (bad) inc dec sub push inc mov (bad) xor and mov fsubrp mov mov iret and aas jb out push icebp movsl outsl mov push pop js sub and ljmp mov push cltd bound (bad) stc adc dec or or cmp iret sub rcll out mov mov cmc test test movsl sarb cmp xor add push inc xor mov loope repnz lds decb outsl popf and imul jmp (bad) cs clc mov pop repz and sti loop xchg out adc pop fcoms and cmp fimull push mov aas adc pushf loop or mov adc cmpsb mov daa in inc adc imul (bad) outsl mov call push scas bound jmp add fstps mov and test ret xlat mov (bad) pop mov jg mov jp add dec clc push daa push jge sbb fwait mov cmp andl scas adc scas mov enter clc and and sarl arpl dec lret stos cmp jnp ret clc pop push fwait popf cltd outsb mov add sub testl mov ja push imul mov cmp repz sub or call (bad) mov xchg or xor inc sbb sahf add mov lret lods push pusha push mov push leave cmp ret leave push pop aaa mov mov sbb add test stc and repz xor lahf jns xchg out cld lods cmc clc sub out ds jne xor ret cs (bad) mov xchg xchg outsb sub inc icebp (bad) or pop jecxz nop xor and jno xchg shrb iret push (bad) out pop (bad) ja and fptan sub mov cmp or stc pop xchg leave pop stc roll sub cs lret sub and pushf jno jle fisttp fs xor jmp sti and daa fdivl push (bad) jae ss jp pushf sbb negb outsb repnz repz sub adc jnp das inc adcb fisub push xlat sub test and ret bswap pop mov mov push stc mov out clc (bad) scas icebp lods cmp mov sbb add mov push ret iret sar bnd stos test mov das sub sbb pop sub idivl (bad) mov add out addr16 pop inc (bad) sub cs mov out pop cmp sub push fwait pop ror popw jns iret add inc mov lret (bad) cmp push ret inc jmp aad lods mov sbb xlat jecxz aas ret mov (bad) mov dec aas test repz loop shr mov lcall out cmp (bad) cmc sbb imul and and and cmp and daa pop gs shl cld outsb mov xchg out out inc cmpsl adc movzbl dec and aad icebp mov add pop sub dec and mov jb jmp sarl mov jmp popf (bad) jp clc cmp cwtl dec and ljmp lcall pop mov lret and mov lods jne mov xchg dec sub sub dec dec stos xchg xor imul sub jb pop sub (bad) and push lcall inc push push push jl das xchg lret dec icebp jecxz or push mov sbb sub mov mov test mov sub in stc adc out loopne sahf dec imul push inc sub mov divb iret inc jmp and fdivs sub imul daa jns les mov add sub popf sarb pop enter and dec sarb cmp mov pop pop push shrl jo out sti dec xchg sub fucomp xchg and lds dec je stos dec mov fcmovne or add sub and sbb xorb add xchg daa mov push adc mov sub inc cli das adc push jl lds test xchg and jae mov fadd notl cli into sbb or cmc loopne and fdivs sub (bad) jle and jno enter mov xlat sahf sub cld jmp aad lret and mov sub xchg icebp mov pop out cmp dec mov fisubr dec aaa (bad) jns leave push (bad) ja or push cmpsb loop movsb xchg sub pushf push add xchg dec push mov ds push (bad) (bad) lcall xor jge mov rclb inc inc jecxz xchg jbe inc cmpsb or xchg call ljmp movsl pop in adc adc xchg jmp add dec mov mov loope mov xchg out sub and ret xchg int cli sub add xchg sub data16 mov sub data16 xor push jmp (bad) adc (bad) xchg fstpl mov je inc xor jl push push jns lds add repz or aas pushf cmp xlat add inc out loope push inc adc cmc push jg adc pop and mov jmp or mov add sti and gs inc sub insl jo mov (bad) xchg fwait xchg mov pop lcall sbb scas mov inc addr16 ret xlat inc xchg push out sub add or (bad) mov and rol xchg add (bad) rcrb idiv pop or xchg pmullw decl sahf sbb push dec jmp jl xor out int3 out mov cmp enter adc int3 mov (bad) sub stos addl sub inc leave mov and pop add add pop addr16 jns xor int3 mov (bad) out (bad) stos dec pusha leave sub (bad) mov cli mov inc call sbb leave pop cmp fstpl lock sti mov cwtl add (bad) inc hlt sete in or and or movsl sbb adc shlb (bad) das mov cmp orl sub rorb sbb push rcrl push adc sahf adc flds mov js pop lret inc testl and jmp lret inc add xor daa sub lea sbb push lret cwtl and sub add scas jb ljmp cmp pop (bad) mov cmp incb bnd lahf popf adc sub sub ficomp lods ret xchg pop call daa cwtl fucom and xchg push xchg aad lock or push push (bad) cld repnz (bad) fld aas lods stos lahf and daa lds lret fldenv cmp daa inc out lock mov daa pop xchg loop mov mov mov jmp outsl js dec add (bad) push sahf sbb pop mov bound cmp test xchg daa repz xchg jmp mov notl lds fdivp mov jns iret fsts jmp fisttpll push mov add or orb enter add xchg (bad) adc or outsb dec mov sub (bad) out sub ja fdivl jae das sbb lods adc cmpsb incl mov (bad) lret and push call jl das mov add jmp cmp scas std test and vmovlps into gs cld hlt daa adc cmc mov and or inc xchg mov movsb push sub or xlat lret dec add movsb ret rcrl js mov or lret je stos mov add cmc push loopne repnz fistp test sub mov movsb mov cltd inc std add vpacksswb mov xchg fstl lahf hlt movsb push repnz (bad) pop lods (bad) xor add xor ret mov dec sti sub aas and mov push cli jecxz lret push out push ret sub jl movl orl daa out push pop cld and fist xor (bad) xlat out (bad) xchg stc push dec lcall mov pushf lahf jns fs sbb mov rcrl icebp ljmp mov fbld xor or push (bad) xor loop enter gs mov sbb sub or jno dec cld lcall aad sub xor push aaa push (bad) sub rcl and jg add or mov pop imull in movsl jb dec add leave xchg pop scas push popa mov repz pop xor pop pop cmc leave bound in adc int3 lret fstpt (bad) sti xchg and lcall repz and testl mov dec push jg leave (bad) jbe js jnp cmp (bad) jne dec sarl or shrl cs imul xchg in mov mov hlt loopne das add imul pop hlt pop dec pushf lret push test sub push test add cmc popf dec mov and movsb and push mov dec jle mov jp loopne or sub lcall sub adc mov sbb cmpsb mov add jns das icebp sbb fsubrs cmc cmp mov push imul xchg dec ret stos sub jo mov ficomp add pop xchg dec push xlat sub add jbe jp movsl out mov imul dec repz (bad) addr16 cmp add pusha mov (bad) sbb adc mov mov push out pop loop sub adc into and imul (bad) mov and xchg scas (bad) hlt (bad) shlb dec out mov mov push in jbe loop sub or std mov jecxz in sbb mov out fistpll dec mov xor cld aas daa neg and into pushl aaa add pop ret repz xchg enter call (bad) popa lock data16 xor xor insl sbb sub jnp push cmpsl in mov fnstsw mov or lret jbe je cmp sbb fisttpl jnp lahf int3 or or pop sbb or aas xchg scas fadds leave mov sahf ret out fs int3 movsb sub pop aas push mov dec push ljmp in pop mov or rcl mov into rcll dec mov repz fldt mov xchg mov add fcmovbe notb out lods cmp cmp xor mov shr (bad) jno pop push out dec pop repnz jge enter sub or cli iret das sub ret dec push icebp loopne inc mov cmp mov (bad) dec adc mov inc lods dec add icebp xor sub cmpsl movsl or out push mov fsubp aam loopne out mov (bad) gs movsb push imul mov sub dec stos dec ss jge xor lods mov lods outsb push pop mov cmp add and mov cmp xlat mov movsb pop repnz and xor sti fldpi xor pop mov adc cli sub mov cmpsb or sarb and push pop cmp dec movsl dec aad subb ficom (bad) mov or sti adc pop mov ljmp daa mov cmp jae cmpsl cwtl in or pop mov push jl jmp mov mov ja gs out or imull test sub fsubrl ret push adc sub (bad) or pop into push (bad) stc lahf aam js sbb pusha in sbb cmpsl ss xor aas mov xor fcoms icebp xchg or add jmp imul lock cld add and (bad) adc pop movsb mov inc gs push push in iret xchg inc lcall xchg call jg into mov out pop jle iret mov mov add mov out dec xor add sub mov dec cltd mov inc jg mov sbb repz into jbe push jmp mov jnp push ss adc daa dec mov in pop sarl push movsl in sti jecxz dec repnz and pslld sub rol insb dec in push sub xchg lds xchg mov rcll scas mov out test pop (bad) cmpsl dec jmp (bad) sbb int dec sti idivb stos icebp mov lret scas sub mov je (bad) out sub sahf popf fnstcw outsl rorb sub std lds xchg mov cmp sub xor insb mov and hlt or ss sub and je int aas rep xlat jmp js das and fstpl (bad) xor mov fwait cld xchg out or dec cmpsb in (bad) fildll xlat mov and icebp push xchg sub popa outsl mov lods sub loop icebp stos sub repnz sub movsb pop cmpsl jbe pop aam push (bad) je out divl mov decl xchg imul test les lahf in xor popa lret sub mov xlat jns insb call jmp inc pop enter xchg cltd cmp xchg cld xor into and fwait movsl incb push ret fild movsl les scas pop jbe mov inc sub mov loope cmp jno mov push adc push mov jnp daa icebp xchg xchg and mov and incb mov lret add and es daa xor in stc xor repz mov xor pop jecxz je sarb sub cmp pop sub testl jl mov movsb jmp fs xor and lret addr16 or xor test dec pop repnz aas bound fnstenv push icebp pop xchg in xchg leave cmp cmp mov or jle (bad) ja stc hlt pop push fcoms ret divb ffreep ss out jg icebp inc data16 mov push mov mov lock pop fldcw jle aam lret push xlat (bad) je,pn mull dec xchg pop cli xor xor mov int mov enter enter cmp adc mov aas mov sub into sub pop adc jp shrl adc mov mov pop je push in adc pop or push fisubl xchg jge movsl dec repz lret cli into negl rorb mov les scas mov dec in jno xor mov jecxz lret sub sub inc cmpsl in (bad) fsub sub jl xchg in movsl daa loop mov or (bad) mov (bad) mov lret push push rorl (bad) or jecxz push inc test ret repz xor push mov lds sti fwait inc mov sub outsl and xchg sbb jb ficompl add rol shlb mov push clc dec xchg push dec popa mov sub movsl cmc adc ds xchg (bad) cmp fildll ret (bad) mov mov mov je leave fucomp mov jb enter ljmp not xor mov add jnp push xor addr16 jl ret fwait imul sub mov mov inc sub ljmp push adc mov sbb add movsb shrl pop sbb xchg (bad) mov repz popf out movsl test pusha push loop xchg movsl (bad) (bad) mov push icebp mov iret inc pop adc mov push lret fdivs pop repnz sbb xor mulb adc ds mov addr16 inc sub test add mov pop adc dec into lahf xor xchg mov mov xor push cmpsl (bad) lds scas adc xor push mov dec test into sub push imul aaa orb xor and mov cld add out cmc lahf jne (bad) repz and pop stos xor jmp dec aad (bad) call stos fadds mov jnp sbb and push jne ret or flds aaa jg xor mov pop enter xor mov mov das sub fwait (bad) add sub cli pusha scas xor push fwait cmpsb or dec cli mov xlat dec daa lds push xchg ljmp idivb fwait sub divb hlt cmp scas jno lret inc cmp and jl in lcall loop (bad) out add ret enter pop repnz pop icebp icebp or fnsave or and and xor call inc jns (bad) lret and sub or je sarb (bad) imul rcll dec pusha and addr16 fnstsw repnz rcr xlat sub push (bad) cltd scas in jbe dec test in ret mov or sub push lods adc sub enter dec jno fnstcw dec ret bound jmp pop push ja adc test adc fistpll ljmp out test fistl add aas test scas lret push dec or mov lods jnp daa inc out fldenv mov movsl adc aas stc sub pop jnp pop stos lea mov inc ret loope inc sub push movsl sti sbb stc mov pusha and cmp mov leave loopne mov mov inc xchg jecxz or mov cmp sub imul loop lds shl addl fidivr jge daa add pop xlat fldcw dec jno dec mov ja pusha pop sub mov and loope (bad) fcmovnu ljmp mov xchg xlat lret xchg adc cs xchg and ret outsl push out adc andb pop loop jge js jecxz sub clc sub jle pop daa and repz xlat xchg (bad) scas cltd jae clc ds lret adc mov mov and and or aaa ret fs lret js inc mov data16 xlat out or insb rclb push stos sti lret mov das (bad) jg cmp pop in push cmp sbb or push icebp inc xchg sub daa and dec sub repz fcmovnu mov xor cmpsl xchg je and loope sub rcrb and test lret fucom mov sub movzbl out jmp jnp xor cs loop xchg adcl adc jecxz (bad) mov cltd and stc notb add xor pop xchg mov in popl or out loopne and sbb mov sbb xchg (bad) mov mov xchg icebp push (bad) ja std ja cmpsb adc ljmp icebp mov les shl jge mov lret movb jb out mov and (bad) mulb ss sarb pop (bad) int3 ja icebp leave shlb pop mov popf adc jecxz mov lock negl loop repnz dec add popa sub sub sub dec mov jae and sub dec test pop mov sub and adc testb or add fstpl adc clc in and dec repz jmp inc mov sub add divb sub rcll test shrb call jb jecxz dec mov and mov cmp insb ja pop xchg dec adc pop popf sbb add out rep jne xor sub mulb xor out or pop pop add sub jnp adc (bad) pop dec jl fsubl pop mov mov repz pop gs outsl jne mov repnz dec das std xchg lods mov add hlt std pop dec and out inc xchg and aam push add adc xor jge scas mov mov lahf xchg out xchg or add out xor sarb int3 push sub or xor ret test cs dec in insb shrl lods mov jno adc xor add (bad) mov pusha or sarb in ljmp jne cmpsl imulb jb mov pop push lahf fstpl clc adc adc xchg bound xlat and mul mov lret arpl fistpll cli repz loopne or sub std gs and xchg or in loop xor rolb fcompl jle xchg (bad) test mov mov pop push stos mov decb mov jne dec jmp jg jg aas jle cmpsb adc fdivrp into ficom (bad) call icebp sub std jns pusha xor daa mov lods dec mov mov shrb mov into pop or dec push shrb mov and adc jne test inc xchg xor ljmp or jb test movsl inc mov scas in fadd xchg mov and inc adc push sbb push cli cwtl jle lahf push or aaa mov inc pop movsl fisttp cltd xchg jl leave pop cmp inc adc aam rclb test mov sti xlat stos sti jns dec fs jns xchg cld or into jmp mov lahf push or (bad) pushf out mov dec shrb bound scas bound cli fimul xchg stos js pop xchg jnp adc mov loop inc push int3 sbb out data16 mov imul dec and mov test push shrl (bad) jmp data16 ret repnz mov (bad) add cld inc jmp stos or lods sbb adc cmpsb mov xchg lods fisttp lret push and in popa and jnp add lret add pop out das xor lcall stos idivl int cs mov push or push sbb mov sbb jo jo iret lods test add lods jbe add fidivr push pop out popa cmpsb xchg das or jo and mov lea add out imul xor pop mov leave daa add rcl cmpsb xor xor dec sbb scas cmpsb jnp roll xor jle push pop mov dec pop sarl mov (bad) jno xor jp jecxz and js add dec inc sub fs stos lods (bad) xlat loop sub lds daa mov idivl jge mov ja lcall add mov rcrb inc out or loopne cmp add push jno cmp out jns icebp repnz std add sar insl leave sarb mov pop lret (bad) xor cltd or mov xchg dec xchg or xor mov in mov iret and jbe (bad) push adc inc push sub and pop xor sub lcall mov ss arpl xor rclb sbb xchg jbe pop push into movsb daa sub xlat dec mov xor lret jbe adc sbb in mov lcall jle add xchg lds xor ss daa dec aas cmc xor xchg mov ds pop lock fstpl jle ljmp xor cltd dec push or mov xchg out cmp xchg jge ljmp mov call push push add dec xor and xor inc mov insl jl lcall repz jnp sub sti xor movzwl ret jmp mov lahf sbb xchg std sbb and ljmp inc mov aas dec ret movsl mov adc add ret mov out cmp cmp and pop dec pop ficoml jmp fsub add ds out popf adc popf sarl cld add push sahf sub pop and in or jmp sub out fstl mov xchg outsb dec out dec sbb mov add fisttpl jo stos inc popa inc fisttpl repz mov test mov out xor lahf rorl adc je ljmp and stos out dec int and and scas (bad) je sbb imulb cmp stos adc icebp scas mov push out push repz ja jmp adc bound cs outsl ljmp pop xchg cmp cmc scas fs mov loop mov inc lret cltd inc jno bound les inc (bad) dec lret repz pop mov enter mov jmp jno add jno add lcall ljmp gs xor mov and mov or (bad) pop adc iret xor lock inc imul sub test and inc sti outsb fdivl xor push dec and mov rcrl fisubrl sub adc test stc jp xorb mov and dec jecxz sub ret jmp pop xchg ljmp out das lret faddl cmpb sub lret (bad) fstpl (bad) icebp aaa sub mov xchg sbb jb adc dec icebp dec and dec (bad) movsb xchg sti lea int3 adc xchg mov lret call ljmp ss add and orl push add test push je and push sbb pop mov fnsave int3 decb popf cwtl cltd divl divb adc sti fldcw (bad) into dec jmp mov mov adc mov sti sarb rcr scas push mov adc stc pusha sub add (bad) or mov fisub ss jmp (bad) pop push icebp outsb aaa test push test aad aam jmp xchg scas xlat adc dec or ljmp fisubr int loopne mov cwtl push iret pop sbb flds xchg and cmp clc adc aaa or add iret or popf push das clc mov add sub xchg mov pop fsts xor and cmp in outsl clc loope mov cwtl inc movzbl addr16 pop jmp (bad) xor lods andb outsl (bad) sub leave mov int xor js pop repnz xchg mov xor scas jns jnp sub iret mov xor aaa ret outsb mov (bad) mov call sbb jl or and or xchg pop lahf push push cmpsb mulb ljmp cli stos mov out sub out daa add (bad) fcoml dec popf repz ret jg loopne loop xchg sahf rclb shrl add sub mov imul int dec and popa pop xor imul add popa sub nop add pusha mov aas loope jae (bad) sub add scas je dec das fidivr out xchg into stos mov test mov inc testb xor scas imul popf adc add mov test xor addr16 push lret or (bad) fiadd lods pushf clc mov xchg popf insb mov pushl (bad) xor and notb xchg adc push mov xor xor scas mov xor test add stos adc data16 or ljmp movsb lods gs inc (bad) mov pop out test push out imul gs rcrb dec xlat pop shrb and rolb cmpsl aad fnstcw add and fdivs sti ret jae inc out out aaa bound cmp sub (bad) push mov cmpsb jp push mov mov daa call (bad) and pop push mov int3 add pop out das out icebp and dec mov out mov cmp push repz scas push insl dec negl mov jae sub aas mov aad xorb nop xor mov nop jne xor ljmp push nop insl mov xchg jb mov jmp sbb jge clc and add stos ficom ljmp add jg push cwtl xor (bad) mov xor mov sub sarl cmp sti mov and (bad) stos idiv sub repnz pushf fisub cmp out mov lret repnz xor sub dec sub dec ret push (bad) pop out and sbb xchg loop inc popf sub push pusha push xor scas aad insb mov sub sub mov mov ret mov into (bad) outsl aaa and cmp lock cmp mov xchg pop rorb ss jp stos movsb xchg sub jmp addb dec sub jmp out imul lahf (bad) jns popw mov nop imulb cmp cmp inc sub jne aaa add idiv mov cs adc loopne fbstp and ret mov xchg stos aaa sbb iret stos mov xchg adc pop xchg lods jno jmp mov mov xchg pop data16 cmp mov call and mov shr (bad) lock xor (bad) mov lds repnz mov push lret jnp xchg mov stos mov sub mov xchg cltd push and fimul sbb ds sub pop jb movsb cmp out cltd jb pop xlat out push iret and decl mov lret pop cltd mov jmp fs notb popf je adc and cmp fwait (bad) or pop pop shr (bad) jmp xlat and clc xor xor push sub or inc xor enter xor sub subl xor fsubrl cltd out outsb lods jae pop fcomip lods pop repnz add fbstp lods lcall and xlat add mov repz pop loop jb jns cmp adc xchg shrl (bad) mov cltd xchg leave jnp dec add loopne or mov cld cli mov jge cmp jg iret stc mov hlt pop sbb adc jno xchg adc and stos sub push out adc (bad) add jge cmp out sub sub jl leave push jbe dec stc mov out and ja and scas into dec dec mov inc lds pop sub lds out push (bad) mov mov cmpsl daa bound xchg mov mov cmc jmp (bad) add mov sub xor cmp pop fs sub xor jae adc mov pop das pop cmpsb push icebp push icebp add cmc jns daa jle movsl adc pop (bad) je mov pop int3 aam repnz sub xor rcrl fnsave cli and subb roll in mov mov popf pusha insb fisubrl in pop pop lcall gs or lahf adc fwait (bad) xor and and mov mov cwtl lea icebp mov imul or enter fdivrs xchg xor pop outsl lret xor xor or inc push add mov push jns dec je (bad) xor mov fldcw idivl shr gs or out js dec loop imulb jne sub fwait or mov ret out or mov jecxz repnz cwtl shlb nop fcompl push lret das mov je mov loop lods push les outsb sub push sbb xor push pushl mov mov int3 icebp and push call jmp add out or outsb dec xchg cltd xor cld sub pop pop add inc fimul jp adc int3 cmp call fnsave pop mov mov cli lret jne cld mov (bad) jbe ret and inc jne dec ss (bad) mov mov and jne outsb xchg iret out mov and jg ret out out adc fs ret xchg (bad) push push or rclb clc scas push scas repz pop repz or dec sbb clc dec movsb cli xor (bad) jns cltd and pop and jnp inc loope test repz (bad) aaa fs cmpsb in push repnz xor add lods sub pop shll adc mov inc idiv js in cwtl prefetch jp mov fadd imul aaa cli sub add cmp pop mov pop sub pop pop xor movsl repz (bad) and xchg divb (bad) ffree dec retw inc mov add clc or call loop clc cwtl mov mov mov add mov cmp call jecxz add lds gs pop sti fsubs fimul sbb (bad) xchg mov dec or stc push fild xchg call pop push gs push call add add sarl leave mov sbb test rorl cmp jp jge mov xchg in jo int mov icebp sub sbb sub xchg divl popa nop push pop xor inc std dec jg pmuludq mov fcoml jno adc jmp out add cld sub lahf sbb sahf movsb scas pop xor sub jb addb add mov sbb push add sub jg dec jns xchg adc push add lods xlat mov and mov imul mov rcr jle outsl (bad) or fisubrl jecxz sub jp pop fistpll repnz inc fidiv rclb or repnz ret (bad) push mov xlat add mov pop and or es rorb ljmp popf lock fs das cmpsb lcall andl stos (bad) loope testl pop mov mov sub lret int3 mov shr pop ret xchg aas sbb push jo test sbb aam pusha pop negl mov mov xchg add sub ds nop loopne mov sub ja sbb nop mov adc stc jno pop xor add in push jge push aad mov mov lret push and mov lret xor loopne scas sub pop mov pop lock fs add test mov cmc adc (bad) mov ljmp mov adc adc ljmp mov jecxz dec mov add jne data16 add daa push xor xlat out cmp adc xlat push mov ret mov popf and xchg rorl add inc shll jb mov pop xor rorl int sub repnz (bad) sti push jge scas into shll push add or lods xchg test stc repnz and sbb pushf popf bound iret xchg inc add and popa and movsb cli push cmp (bad) mov sbb add jecxz cld inc jmp jmp ret jle (bad) inc je inc mov rorb xor les cld andb pop lods xrelease fisubr mov aaa inc ss mov bound inc cwtl subb mov lds ret add sbb jb mov pop adc ret aam dec cli in aad neg in scas lret jns enter stc cltd pop stc sub pushf add xchg inc add mulb into pop loope sbb popa inc ret pop jnp inc (bad) clc jae idiv ret out bound pusha jb dec stc mov dec lret std rcll notl call mov mov ja add mull xlat inc dec xchg out int push insb das (bad) ja inc inc sbb test cmpb sub mov cmpsl fnstsw fmuls ja movsb popa jmp mov das stos into add outsl sub mov mov mov fcomps dec fld jg das cmp xchg data16 pop jmp popf lcall mov pop lret xor test scas loop orl in std repz jne (bad) xor xor pushf loope xchg cmc push loop cmpsl loop (bad) xchg inc lret movsl jno dec mov int3 je dec pushf mov insb xchg adc popa xchg (bad) sub mov daa (bad) add shlb negl js das xor fldcw (bad) and (bad) rcl pusha sahf jmp xadd sti aam jne xchg inc fist sub aas mov or xchg inc cs jnp cmpsl aam jb add inc mov leave inc ja cmpsl cmp adc push xor sub xchg push sub (bad) fisubr mov stos into inc cmp cmp cmp xchg ja mov mov imul sbb icebp aas lret je das jns scas pop scas out into test (bad) lods cmp sahf cld imul adc dec add cltd leave sub (bad) sub ret mov ficom aas mov rcll inc mov iret cltd pop imulb scas rcl dec xlat cmpsb and ret or lods mov lods loopne inc test out sub mov pop mov mov xchg or xor les jmp (bad) push pop scas (bad) cs and pusha test cli xor add stos xor inc and cmp add (bad) std pushf pop dec jl xchg pop loop mov jge xchg push push subb gs loope dec sub lods mov fistp movsb out sub mov fistpll insl out mov aaa sub notl pop addr16 xchg (bad) mov jle idivl or add sub mov out (bad) leave jmp andl repz mov cld dec push movsl push cmp push push rclb dec mov negb fldt das mov jno or jp add and and mov mov mov cli cmp cs dec pop or mov outsb jne leave jno shlb push add or lods jb inc or cmp (bad) pop mov xchg cmpsl sbb cs pop adc lahf push inc push sahf xor push inc addr16 inc (bad) xor call daa arpl repz js in mov xor aaa mov movsl (bad) pop lds push cmp dec enter xchg mov xchg ret aam adc int popa cmp sub adc sti (bad) add push inc ljmp sub mov test xor xor adc (bad) mov and (bad) pop add cs xor stos sub gs das je les scas mov into push pushf fnsave pop test stos sub cmp mov (bad) sub ret adc inc adc out push cs ljmp mov push sarl push or clc push add pop cwtl and sti mov (bad) dec pushf incb xor stos mov mov sbb pop pop cltd mov mov notl pop loop xchg lock (bad) cmc jmp mov adc and xchg (bad) mov ljmp sbb hlt cld imul popf sbb daa and fnsave out jmp push mov mov (bad) in mov fstpt mov xchg mov fildll xor fsubrl imul xor push xchg jecxz pop lret sti add clc and out or cld lcall out xor cld not push dec sti cmp adc pop push pop push push mov out pop testl in in lret and std andl (bad) int3 inc adc jo addr16 ja scas cmp push cld mov ret jmp int cmp or add (bad) es movsl jnp mov fbstp jmp pop lods sarb sub add push jne jnp sub add sub mov negl xchg fnstcw sub jmp push push add scas mov add mov and mov jmp mov add pop loopne lcall fsts cld mov call pop pop dec add out xor test stc mov and int3 pop (bad) xchg pop out jae outsl into leave sbb (bad) push push rorb pop sti mov dec out pop idivl mov dec loopne push ret int3 out daa sub or adc daa icebp and leave sbb test xchg inc lahf loop fist pop sbb lods sub xor repnz xchg cld push fs mov fdivs xor dec or add jnp pushf mov and nop xchg cli cmp daa jle dec mov sub mov aas sti sub pop mov repnz lahf xchg jmp out pop mov fstpl inc push jo or adc xor mov movswl xor pop sbb dec lock and push icebp mov idivl je scas cmpsb sbb jl pop (bad) mov ljmp in fwait jmp xchg bnd mov or stos pop ffree dec xchg add out (bad) push jne daa sti push xchg andb push and mov or mov sar movsb fisub pop fwait or lret scas popa rolb fidivrl aaa push (bad) inc push cmpsb dec dec mov in lods andb dec xchg divl (bad) mov ret adc xlat mov xchg dec sbb fs mov mov (bad) fcoml and sub cli xor lock jnp adc cld jp (bad) mov xchg in or rcl pop pop mov xor in sub and aaa dec iret in xlat mov jg js inc adc jns mov pop fisttp sub push dec in adc mov out negl sar stc outsb sub inc push in adc mov dec mull pop ret sbb and out stos cwtl fs rcll mov xor lret xor mov mov or push xchg adc adc insl xchg ljmp (bad) and and in jmp repz adc add mov emms mov popl mov ljmp sarb je mul cmp bound es ljmp daa iret xor push xchg dec jne cmc mov mov xor imul push mov popf out es movsl hlt push ror imulb xor lahf lds mov int3 mov dec sti (bad) cwtl loopne dec or fs std pop dec mov das lret jae mov xchg add add lahf and js cltd mov mov mov mov int adc stos out (bad) mov dec xor test jb ss and dec test popf stc das test cmp out xchg cli fsubs lds lahf lea into sub movb mov and or fistl mov push or adc ret add push cmp leave out daa cmpsl inc lds pop loope sub (bad) xchg push and add mov add dec cmc out loope jae and lret and jmp enter outsb and repnz stc cmp lret or outsb mov call push push add pop loop stc pop inc xor cmc outsb test popa and dec jmp xor (bad) int3 pop iret mov add xlat cmpsb push xchg aad pop ret int3 mov ret sub or or ret in xor push fsubr pop add mov xchg lcall idiv dec cld out lock push lock in xor lret ret lahf inc (bad) mov jo out jno mov cli xlat loopne or pop fnstsw cmp cmp mov outsb push push mov shrb pop mov mov loop push out add (bad) mov mov xchg sbb adc or sub xchg mov mov push jp adc stc sbb push cmp mov jo mov xchg sti mov into pop sub out push out cmp cmp xor cwtl mov push adc bound mov pop sub lret jecxz dec icebp cmp jl mov (bad) jmp adc loope mov test dec cmp movsl cltd dec pop mov (bad) lret xlat in inc dec fcmovnbe scas jle scas lds xchg sti in outsl leave sub mov add jecxz daa sbb cltd stos into cmc ret sub sub stos out dec mov fucomip sarl aam push (bad) out pop push pop lods enter addr16 mov nop mov pop les push jno xlat stc mov repz mov push out jbe cld xchg gs das push fsub imul pop or dec xor xchg (bad) (bad) lret and pop jnp add lret cwtl and jno loop inc pop mov xchg jno out push pop (bad) xor movsl call adc jecxz dec decb cmp xor mov (bad) xchg idivl or pop bnd daa movsb xchg jmp pop (bad) (bad) leave (bad) cmc insb pop lahf inc into (bad) dec push or pop sbb pop lret rol fisubl mov fsubrs popf inc inc aaa pop daa lods xor outsl mov dec mov mov dec imul pop test (bad) and pop test or shrl add iret xor pop cli clc loop iret mov add pop out sub cmc cld cmp adc frndint rcr adc leave sarb add add adc adcl pushf loop (bad) scas cltd xchg xchg cmp cmp push inc je pop jns mov sub cmp mov call push lcall stc and mov adc and or jno lret sub push test data16 and cmpsb jae xchg inc xchg faddp and fimull fbstp and imul sub and inc ret lret xchg sub pop dec jg in (bad) div inc mov stos add fbstp or out xor sbb mov and add daa sub rol jae sbb test xlat scas push test mov ljmp (bad) notb xchg stos lea jge scas adc scas xchg call and pusha add sub jnp (bad) repnz inc adc pop adc div lcall testl jecxz idivl pop jo loope cmc ss jmp xlat or mov sarb cmp add cmp and dec push cs inc loop pop sti xchg cmp scas lret mov aas enter mov sub push stc adc push (bad) mov sub and mov sti jo push push rcrb inc out dec lret aad ficoml scas loopne aaa dec mov inc test lahf hlt fs ficoml push inc cmp pushl adc pop push jbe push mov add cltd mov mov pop out sub xor mov movsb out stc ss scas push pusha scas lret mov in adc fcmovnb cmpsl cli outsl and ficomp adc sub mov imul cltd push sbb sub in sahf outsb jmp mov or (bad) sub sub sub js ja jg movsb mov mov mov call test out dec jecxz sub lds cltd xor adc push test inc xor aas mov jmp sub out mov dec ss paddusw sub push mov ret jmp andl pop or out movsl rclb inc or add jmp dec xchg test mov ret cwtl dec (bad) icebp fsub dec fidiv sbb into push pushf scas adc ljmp add xor dec sub xor mov sahf jmp cmpsl pop cmp stc jo popf xchg ret jmp mov sub push sub inc pop mov adc imul movsl das (bad) aad fild gs mov loope lods aam out xor add jle addr16 iret inc cld fisubl sarl repnz pop push adc pop dec push call adc mov aad cmp (bad) push dec fstl add cmc dec push adc xor pushl or enter (bad) das jo (bad) aad jbe inc add bound rcll sbb shll fisub loope stos sub dec mov pop push sahf insl push xchg xor or imul pop or xlat shll (bad) cmpsl out xor push or mov xor xor outsl out cmp dec fistpl sub sub add aas push int3 pop lods cli popf jae lods int3 add repz jne icebp jl mov test sub jmp icebp test fnstenv test leave pusha ja pop popf and int daa pop xor push or lods push inc ret sub lcall add clc sbb push and sub jl sub mov jle mov ljmp aas push cmp jmp out pop popf (bad) movzwl and cmpsb xor and test push insl push movsb fnclex mov pop xchg cmpsl js das idivl cli pop mov push pop fs push add sub xchg gs sub out mov andl leave sub das fmull es inc mov pop scas and fdivs cmpsl jo xor adc dec rcrb fimull addr16 lcall and pop daa or lock mov and dec push cwtl je mov out pop push jbe ljmp sub movl dec mov or mull dec stos sub and cwtl jo pop repz inc sbb lcall fnstcw int and sete dec push dec mov dec pop xlat sub stos jne mov jmp sub ja add pop in mov fbld lret xor out (bad) jmp iret and stos gs adc (bad) dec ljmp bound xlat pop pop sbb mov xchg shrb out jl jne scas push gs mov cld jge push or push and lahf cmp (bad) push and stos int3 xchg repz out aas or or inc cmovp cmpsl punpckhdq sub (bad) mull push mov les cmp cs sub mov loope jne,pn adc mov hlt push (bad) (bad) lds hlt mov add push or popf mov loope add xlat inc mov dec mov or push dec adc xor out dec adc mov dec aam leave cmp flds and push inc push call xchg fildll stos jb add jae xor pop pop out cli cwtl cmpsb jmp movsb nop aad mov mov mov cmpsl dec pop xor or add ret in pop cli jecxz pop in int3 das (bad) std adc cld icebp lahf inc call lret (bad) fcoms lret jns cmpsl cld cli inc pop add iret mov cwtl lcall fcmovnb cs xor lcall sub jmp aad adc daa push daa std outsb sub sbb inc push sub pop xchg xchg cmp push jmp imul mov dec push pop push adc inc ljmp lahf mov loopne enter bound or mov scas (bad) (bad) lea xchg xchg stos (bad) or fs dec add xchg stos je scas jne xchg mov lods mov sahf xchg or mov lret popf add xor fbld mov xor mov sub cli mov mov pop mov jmp xor in scas into ds mov sub mov mov jo loope dec in pop leave (bad) mulb (bad) lea inc jp mov (bad) aaa xchg test negb cmpsb mov (bad) dec mov cltd jmp lds lods (bad) pop leave aad lea pop divl push loope fnstenv in sbb ljmp (bad) inc aad or popw xchg inc add mulb mov shrl push sub xlat jno insl pop xor jg or mov loope test fldenv sub daa sar in add out ljmp out mov out shrb sete adc add adc lds mov mov lds xlat mov imul ret das adc test daa pop leave pusha push and add shrl (bad) xlat adc sub pop out pop xlat jbe mov sub pushf xor xchg mov loopne ljmp mov pop or das shrl es arpl clc out popf shrl ror js dec add sub ret insb fdivr and inc inc jmp xor lret jbe call mov mov push lret loop add mov inc jmp roll mov xorl jle and fstps pop push sbb sbb stc cmp les fisttp fiadd or xlat cli or add mov ljmp test enter (bad) xchg rol mov out add jbe pop dec or sub cld jge cmpsb (bad) daa jecxz test mov jmp imulb sti int3 or and adc pop xchg in fimul pop pop mov push push pushl cwtl bound sti xlat in push pop roll ljmp int fnstenv push mov pop mov rcrl lods lret imul fsts cmp mov mov hlt jmp jmp ret (bad) das mov jg repz push and repz shrb xchg (bad) scas divl sub into int3 std sub das out gs xchg jge add dec je lds and (bad) addr16 sbb mov push dec stos sub jmp mulb iret sbbb call lret adc iret xorl (bad) cmp sub lret out std push sub sub ds imulb fnstcw mov sub sarl out adc push add sub enter xor inc sahf popf fsub sub xorb jne xchg dec or leave ljmp js out or mov shll jg clc sub das mov lret scas sub ds rorb in mov adc xor cmp mov jp (bad) or pop xchg xchg push xor inc roll inc push movl inc movsb sahf dec sbb shrl mul das jo jmp mov cmp push cmpsb push nop aaa dec xor sub jns mov scas outsb mov mov add mov mov (bad) icebp mov stc dec cmpsb cmp into jle leave test add sub xchg fisubr push ds pop ret nop jns adc sub push test adc mul popf gs jle in call rcl mov jl jno dec push cmpsl (bad) mov mov pop scas sub mov sub inc fstl fadds testb or mov push movsl (bad) cmpsl loope mov add xor sub push iret mov mov pop sbb (bad) sub push vmovaps add notl push or or mov mov movsl cs mov rolb mov and aad inc iret sub mov mov mov adc pop dec fwait in and or pop push (bad) lea add mov ficompl inc sub mov movsb out enter pusha (bad) imull fxch lret std xchg je insb or ret fadd mov push outsl and outsl (bad) enter fldenv add icebp mov or ljmp xor add inc aaa jns mov stos mov pushl adc xlat or ljmp icebp or les int3 and pop out inc mov loopne les mov xlat add scas jne mov fmull adcl sub and sub xchg (bad) mov pop notb push addl ljmp dec pop pop out js and dec and push push and out xor push pop loope jg ja in push nop in lahf xor test ja iret add rorl rclb and add add mov add out xchg jle adc test mov aas pop daa out jge ds andl popf lea mov and jecxz daa inc cwtl mov and push pusha and sub cmpsb popf sub mov sub xor aam push (bad) dec dec and ljmp fwait cld cli sub jo sub in movsb and sti shrl lcall cmp js popf pop mov in sub fimul jmp dec (bad) pcmpeqd scas notb popf fsts and add mov add pop adc push cmp mov or push enter add or cwtl ret cmp sub mov adc loopne daa add add or xchg cmpsl push xor dec (bad) data16 sar push test loope xor out mov push pop sbb add mov stos jb loop lods xchg add or test xchg aad (bad) ror outsl mov push or jg cli jbe das dec call jbe in ds aaa outsl popf out jecxz nop inc lret lret sbb (bad) ja cltd ja fdivrp mov arpl cmp adc imul mov (bad) cmp sbb push dec push aas bound adc xchg mov inc or sti xchg push ret test mov insb push sbb jno mov cmp or pushf push pop aaa adc pop xchg fcoms mov cwtl adc (bad) mov (bad) jmp mov jo fsubl mov jbe out lret fstpt mov jle test shll in cmpsl js leave and pop fwait mov jnp cmp stc xchg mov and pop push sub fs into pop ja xchg xor stos mov xchg test mov push testb pop jnp mov insb mov lahf repz sbb mov inc sti and sti mov dec mov or xor (bad) imul imul and add js xchg bound adc dec mov xor cmp push leave mov dec cli mov adc and jge sub insb and or mov adc mov fstpt (bad) js lds ret cltd jbe shrl adc clc data16 xchg push iret aas (bad) mov cmpsb in mov test push dec dec outsl addr16 rcll and popa inc mov lods (bad) dec mov cltd test xchg cs mov pop sbb sub adc sti mov test add mov adc mov add pop dec int3 mov (bad) adc pop push aas mov jmp (bad) pop sub bsr push or fxch leave test pop pop movzbl call pop inc xchg mov and pop and in (bad) xchg enter stc and lods cltd in ss es lret loope (bad) loop inc xor cwtl insl notb cmp jbe jb (bad) xchg pop jecxz adc and xor xor test es sbb push mov (bad) jg jl inc fs stc lock pop mov stc add clc xchg icebp stos or push subb cmpsl movsb int3 cmp dec (bad) mov aad (bad) (bad) jbe add and xchg add mov pop jge jae ret pop jne repz inc (bad) and xor cmp mov push popf lds mov push jmp pop or mov mov (bad) xor mov sub lret and push sbb (bad) inc in call inc add sub hlt or adc push mov or les add push xchg jb pop xor cltd nop std (bad) jnp aaa (bad) jecxz (bad) pop mov or (bad) cs mov sub je pop (bad) loop fist iret jmp sub fnstcw lret pop jno dec xlat inc mov pushl mov mov inc pop push outsb add out push repz (bad) outsl mov (bad) out loop fist sub sti mov xchg out lret bnd hlt mov dec decb pop lret loope ja rdtsc stc add add test sar cwtl push ret out call pop cltd in and stos lods adc lods loop xchg mov sbb stos mov shrb test fldcw cmpsl or push push and push scas inc aas push rcr adcb or xor sbb das cli mov xor pop movsb pop or mov out xchg xor dec inc jl andl cmp xchg cld push rorb fdivrl mov (bad) and push xchg imul movb (bad) fcomip xchg imul or mov mov adcl fld flds cli mov sub out adc test xchg out and xchg push ljmp or cmp adc mov mov les inc mov jmp sub shlb addb xchg lea fistpll shll xor and mov mov inc dec das ljmp pusha ret cmp or cmp sahf incb mov xchg (bad) sbb or push stos std cld roll dec xor push inc lret loopne mov mov cmc add mov pop push (bad) and xchg std mov aaa inc dec lock mov pop lret mov cmp iret sbb ljmp fsubrl in mov shll sub mov fisubrl jp push mov mov add push mov arpl inc pop addl jbe fbstp lahf cmp mov loopne pop and rorl and dec adc scas xor add and dec stc out jle cld sub xor hlt dec (bad) loope (bad) push xchg (bad) dec cld pushf cmp mov xchg add mov (bad) xchg adc lds add xor pavgw imul aam sti jg minps sub add add jg add lcall xor jbe inc subb push add shr mov ja lahf in sbb scas jle add and (bad) fisttpll add and or pop sbb pop xchg push push pusha mov roll push sub aam cwtl add sbb inc loopne dec add jne mov push pop idivl aaa or sub in dec (bad) pop push mov push (bad) dec inc popa mov sub xor push pop mov icebp pop add pop xor cmp (bad) stc sub push roll fs jnp xor inc std and sub pop push mov jne and mov imul scas mov enter jg int mov sbbl scas sbb push jmp push leave sub push inc lods jo jg push mov bound sub (bad) sub pop xor and fbstp add idivl pop in mov jle in mov adc call aam (bad) or add add inc xchg mov test jo (bad) sahf add out popa std pop (bad) xor push push in scas inc aas inc call push pop out fisub shll push leave jne jmp add or mov test js xor mov lock das pushf mov push addl dec jbe xor jecxz push pop in and hlt jne mov push shrb popf icebp sub das push in pop loope popa xchg test aam xor clc movsb frstor mov add sub stos jno or sub ficom lret cld ror push cmp hlt inc and dec ljmp mov push ljmp xor nop dec adc (bad) jne or push jne insl test xor lret out pop fstpt sub lods hlt sahf or mov bound in xchg (bad) icebp fcomps or adc add mov jp idivl mov (bad) pop mov cmp hlt xlat repnz and daa and cmp and les popa dec rorb mov mov push (bad) and add clc sbb clc jne loope cmp ret dec outsl in add pop int ds push dec push dec dec push dec subl mov leave icebp pop addl pusha xchg mov cmp iret inc pop sub dec sti sub sub xchg mov push mov repz loope sub adc xchg push gs ljmp (bad) mov mov add mov out stc mov out mov lds jmp popa fisubl clc or xor cmp das imulb loop (bad) movsb pop sub xchg insb push or and add mov (bad) cmp ret fldlg2 dec push (bad) and addb out sub cmpsb hlt mov add insb or lret movsl pop lcall or mov mov add mov ds call pop jo sub and aam shrb mov pop lahf inc jmp inc xchg call xchg xchg mov shlb and inc ds inc xchg xor pop mov xor sub cli repnz sbb mov ret mov jb js mov stos push sub ss push cli push xchg mov iret cwtl fdivp stos data16 dec or mov add into jle mov dec enter mov out ja hlt sti repnz adc push cld dec dec clc mov xchg inc add sti jbe ljmp dec cmp shll scas bound and add xchg repz in sub pop cmp and (bad) mov dec add outsb ficom pop pushf fidiv pop push jbe mov out pop test mov ret jmp adc xor cltd insl push jle popa inc mov es dec push and lahf xchg fsts xor int3 das xor dec shrl aam adc ffreep add lret jp lock popf xlat xor das mov jne sahf in mov out push das pop dec mov adc scas mov mov adc das or cld pop (bad) leave and fnstcw pop test inc and jne pop pop adc inc sub movsb shrl mov fisubl mov or inc mov (bad) into repnz cmp push or into mov mov lret inc push pop xor and (bad) enter in push xchg ret test push clc xchg inc and or mov hlt mov jbe loop (bad) cld xor lods scas xor pop sarl adc out das out inc xchg enter or xor fcmove into and fisubr les cmp hlt xchg test in aam (bad) jne cwtl (bad) repz in cmp clc mov sub mov mov (bad) xchg ja push pop out out mov ja jecxz pop sub push adc out lods dec mov push mov dec dec scas jbe or cmpb xchg push sub outsb xor iret clc (bad) xchg pop mov dec mov out cltd ret (bad) xchg mov adc pop dec sub stc out cwtl bound jnp cwtl xor push fnstenv push ret cmpsb xor divl dec xor fisubrl push (bad) gs mov and and mov xchg jno xchg mov push je daa xlat xor stc xchg dec insl imul gs xor or xchg in stos imull push push bts sub aad mov push push adc sti ja fs push mov repnz cltd xchg enter jb lret mov or popa mov mov add aam xor mov arpl mov jecxz and add lret (bad) mov stc imul sub movsb je stc stc pop pushf jmp dec xor mov or out sub inc jb sub pop and sub repnz sub pusha dec sub leave fnop arpl and inc mov movsl cltd add sub or sar or leave inc jns inc or cmp (bad) xor cmc int3 adc clc ljmp mov xor icebp xor aas je cli xor mov popa mov jo xchg lds jmp push xchg fs loope adc mov mov clc xor add jns mov ljmp movsb and shrb ret out adc jne mov rcrl mov dec fstps lcall je movsl mov loop add sub (bad) fs das xor js daa rcll adc imul sub ret fstl xchg enter idiv arpl notb stc jmp mov aaa sub sub out mov sub sti bound into mov add xor lret ret cmc xor xor pop lock add and sahf lret jns cs jp sti fstpl push jg add out notl idivl mov scas andb add sub insl popf adc int3 push push ljmp xchg movsl push loop xchg inc xchg sbb pusha ljmp icebp or push and inc xor sub xchg mov or mov pop lret into xlat lds test and sbb add mov pop shll dec and ljmp ret loop xchg call push inc xor pop add jp test mov dec out leave or add cld cs leave add les adc cmp adc (bad) out lret mov movsb mov repnz mov jae cmp loop push das push push jo cmc (bad) cmpsb xor inc and mov mov mov stos gs or out or aas mov push jae adc jg aam sarb lahf fldcw out iret add and enter xchg mov mov movsl pop jg push push out scas scas pop push inc ret aam push punpckldq call cmpsl es or and push sar cmp mov dec xor lret ror cmp mov shll add out pop push or sub fiadd lret mov or enter xor mov stc clc imul push scas ret and xchg (bad) mov xchg xchg test sub cs adc mov sub bound dec scas xor (bad) aad cmpsb pop and add clc inc mov (bad) dec push loope sub xor stc nop and int cmp leave xor jb pop ljmp xchg pop sub mov inc je arpl mov (bad) ja xchg pop sbb mov shrl push mov out mov (bad) push and fmuls inc adc or pushf jmp xchg push mov jns and cltd lds outsb push shrb stos loop xchg xor scas sbb ret pop out and mov mov (bad) pushl inc push add cmp mov lret adc sbb pop sti das mov adc or and push dec add mov ljmp and fcmovnu and xchg or mov jge cmc xchg lds pop and fadds idivb (bad) jne mov (bad) addr16 adc xchg inc daa icebp cs pop (bad) xor push push dec std mov aas inc lret nop rclb dec out insl (bad) lret js orl mov and loop (bad) leave sbb add xor jno out pop loope loope jp out mov movsb dec cmc dec jne mov adc cmp clc (bad) lods pop inc daa pop (bad) adc (bad) mov (bad) sub push jg jns scas bound icebp fbstp adc cmp sub fnstcw call js sub lahf sbb inc mov xor leave loope jg aam leavew pop lahf loop jl push adc lcall icebp dec (bad) cmpsb pop sub xchg shl cs sub push or mov fisubrl into add adc sbb (bad) dec (bad) repnz stos ret pop insb nop add mov and mov cmp out sub aam loope xorl or (bad) mov loop (bad) stc cli imul fs bound xor and lret fiaddl and adc cmc jp dec out sub leave clc sbb mov lock repz stc popf gs and push ret inc or sub mov ret push hlt push sti (bad) or push sub lcall test imul les repz mov popf adc test xchg push sub cmpsl imulb (bad) divb push sbb in or xchg (bad) in mov into xor movsl mov mov mov roll push jmp push out sub sbb sbb std pop std inc xchg test and insb cmp das and aad jnp sbb cmp jge js sbb insl adc lds jmp nop leave jecxz inc addr16 and nop (bad) repz xchg into out (bad) inc pop repnz shrb adc pushl iret aas mov push and sti fs scas xor mov icebp jle and out pusha arpl movsl xchg movsb (bad) lret sbb or mov lock mov out or loop das arpl aaa call (bad) mov shrb push (bad) push and sbbl into mov pop in push daa (bad) cmc adc sub pop enter shl pop andl scas xchg and rcll or add out jo sbb push adc pop out cmp mov mov aam (bad) adc xchg idiv cmp add xlat add inc lahf scas mov int3 daa (bad) sub dec add mov xor (bad) jmp xchg lret or mov cmp lret sub cs pop fist lret pushl jbe lods xor jecxz xor push push lret pop mov jg pushf jae cmpsl jbe loopne (bad) cmp cwtl jne fbstp xchg shlb xchg popf fist sub xor pop (bad) xor dec jb xor repnz fs fisubrl fsts inc sarl clc out bound pop adc nop (bad) nop push (bad) stos xor lds push lret and xor dec repz leave push mov in pusha into popf rcrb cmp out pop test test or lret out lcall in or push mov cmp dec scas sarb icebp aad lret lahf add idivl gs xor out mov adc mov xor or and es push jnp (bad) mov cwtl sarl outsl inc push mov fsubr fs stc (bad) ljmp ss into fimul sub xor jle les mov add fnstsw xchg xor xor shr je inc xchg mov mull mov js das push xor pop divl push sar fsubrs clc adc xor and sub sub cmp ljmp inc or cmc daa jae mov loopne ljmp lahf push pushf sahf mov push push pop inc dec jg setno jle mov (bad) insb inc mov dec sti xchg mov (bad) jge xor ficompl sarb fidivr popf sbb cmp imul pop xor cmpsb inc push out or movb mov dec pop test jmp rclb test addr16 mov pop repz das (bad) insb xchg dec cmp add sahf push and mov pop aaa (bad) jmp add dec jne (bad) test jb mov jp add popa shll mov xchg imul leave xlat lret push and pop xor push bound dec sbb adc pop outsl sub leave xor (bad) test icebp mov mov (bad) xor int jl xchg (bad) sbb into cld sar shl lods mov xchg out mov push dec (bad) scas fldl mov dec scas jno add and dec sub dec pop push adc or pop sarl pushf and sbb (bad) imulb mov std ret cmc ret les or add adc cmp insb pushf jecxz jmp dec jbe pushf out jo mov imul add das or out adc repnz lret cmp (bad) nop mov sub sub mov cli mov movsb add mov sub dec lods jae and test push add and scas fldenv sbb arpl test in in dec xor push out mov mov push in mov lret xor je mov mov dec fbld lret out mov dec negb loopne out sub loopne xor sti push adc jne mov sti aad clc and push xor mov (bad) xchg jae jp dec jmp ret in xchg mov push addr16 mov jb xchg pop mov stc xor (bad) scas push es loop mov jecxz add stos int3 adc mov repz mov aas pop out dec add push lret decb imul es lea ret or jp lods push jp mov test (bad) js add mov pop mov or xor mov movsb xchg scas gs xor nop pop push fistpll enter lcall xchg mov add xor sub das sub adc dec jmp (bad) (bad) das pop clc dec sub mov ret insb adc (bad) sub sub mov add add push sbb pushf sub or or xor shrl iret xchg jg inc pop inc push jns inc xor and hlt es out les aad mov (bad) mov loopne decl jecxz jl out mov enter adc ljmp mov cmp mov sub lahf jae mov (bad) lret mov sub sub fcomps mov pop xchg adc lret push aad mov scas add pushf inc mov sub stos xchg xchg imul mov push mov ret push fsts fs or xor imul or pop mov (bad) dec in xchg push sub ja (bad) jbe pop cmc repnz pop test iret icebp loope jg stos xor pop out jne xchg pop sbb out stos fisubrl pop lods das test icebp sbb push fucom jno push push adc call fldcw dec rclb out push and call sub xchg jmp and clc sub jbe daa add scas adc in imul or and jecxz movsb cli loop (bad) ljmp fbld inc aam jecxz fcomip out popf fcmovnbe adc repz fldcw xor mov jo js adc outsb dec movsb (bad) pop cli push lds mov inc pusha sub and lahf rol adc dec add or push pushf add mov js jle jmp ljmp push dec cs sbb imul roll imul add mov iret ret testb jp add add test cmp out lahf (bad) jns sub lret push fldl2e ss (bad) lret daa (bad) ljmp pop sub faddp add cmp pushl std outsb shrb popf incw pushf fdecstp and pop lret mov out pop neg cli cs jle inc fsubp notb xchg adc sub mov (bad) rolb dec jns xchg call hlt adc xor or arpl dec mov fidivrl stos cmp int3 adc (bad) daa into xlat xchg mov icebp dec pop jnp cmpsl lret lds test rdmsr mov popa psubsw dec out dec add xchg imul loop cmp add push and jmp mov clc xchg mov add dec cmp (bad) xor sub das scas sub out sbb dec mov dec ret inc push push mov push pushf dec pop out mov movsl jns jno xor jnp (bad) jnp (bad) mov xor popl add cs dec clc dec lret out test inc pop inc add jne mov insl fimull cmp pop addr16 testb icebp sub test lcall lret outsb daa cli jbe jmp stos icebp xchg addr16 sbb stos flds jp jp mov (bad) notb dec imul lret mov dec cld (bad) mov mov mov cmp xor or (bad) icebp jb and ds out dec pop or xchg out pop mov lds repnz pop jbe push lret and adc dec mov out divb ret mov mov xorb jnp das xchg sub mov mov ljmp push add sub popf movsb js push hlt (bad) notl hlt adc fsubs jnp cld jae mov mov lea mov jb mov mov jno mov xor mov mov pop test lret out pop icebp or clc push sar mov pop fs imul insb fxch lods rorl jmp ss mov fcoml push push pop icebp cmp mov and sub sub daa cmp pushl icebp into or in cmc dec (bad) xchg vcvtss2si pop pop (bad) or (bad) int mov pop or int ja mov das add xchg add mov mov outsb scas cld call cmp fdivrl or ljmp inc ret or cmpsl sub xor test jmp add pop jl dec mov mov sub jbe add pop adc ds out sub jle pop out sub aaa cmpsl lds xor incb out inc in adc cli push cmp sub sub mov mov push add sbb pop xor das fisubr adc add (bad) push cmp pop fwait in in jg outsb repz ffreep dec pop fcomps test idiv mov add out jmp push xor scas cmp bound ret sub out outsl mull mov xor and xor jb iret out xor mov cmovnp add xor and out cwtl mov in pop mov outsl fist sbb das and pop dec adc scas mov ds or sbb scas jg repz int3 mov mov mov add repz rcl repz adc stc xor das xor mov je mov mov cmp mov fnstcw aam ret inc nop dec lahf add (bad) mov inc lods dec inc daa inc pusha pop xor and pop pop jo sbb idiv jae xchg cs leave mov fimull mov mov ljmp fidiv icebp jge pop je xchg xchg lods lcall mov aad pop pop fdiv push in xchg iret pushl fcoms sub inc inc ret and push pop lock and (bad) mov add add (bad) test xchg out daa xor cmp sub (bad) add out mov xchg or push icebp push lods pusha jno,pn dec sbb ja pop fbld call js popa shlb add sti dec add sub cmp decl jmp mov jb out and loop sub in cmp mov mov dec test rclb jge (bad) popf jbe leave stos mov fsubl outsb sbb push (bad) or iret or xor repz and xor fistl xor pop in mov jmp sub xchg jle push and mov daa ss dec (bad) in push add sbb pop lods jl pop lods cmp push xor aaa (bad) jb dec pop std dec mov xor ret pop and mov dec sub push sbb xchg sbb test es pop xchg cmp iret mov or and mov insl mov lods mov inc ret (bad) xor cwtl cli in xchg (bad) sbb in and dec (bad) ljmp push sub outsl gs cmc cmp gs mov inc repnz lahf pop lret sar push ret or cmp inc push xchg pop dec dec ret movsl mov inc cmp mov repnz cltd push lret (bad) or out mov aas cwtl bswap mov jne adc test loope and mov cmp cmpsl int3 dec lods inc mov ljmp add dec and loop cli decl pop (bad) sub inc jl or loop test (bad) pop (bad) mov pop (bad) call or mov imul push stc nop cs xchg push add mov sub nop (bad) jo pop repnz dec ficoml push icebp mov dec (bad) xor ret out xchg cmpsl cltd jp pusha cmc stos fnstsw std or jne stos mov pop imul sub (bad) and adc rorb adc lods mulb leave dec iret lods sub stos xor jg in mov lcall pop leave flds cmp lock movsl fadd pop (bad) xor pushl lret cmp inc mov jne inc fstl or (bad) and xchg int3 inc mov (bad) xor cmpsb shrb negl sbb and fs ret dec mov xchg sbb xor mov dec ret stos sub notl adc mov sti mov ret in mov mov imul mov push sarb je pop push cld (bad) pop out jnp jae push lahf insb aas xlat jbe ja out pop (bad) loop pop jmp xor loop dec scas jb jbe xchg sbb cmp lahf pop mov fimull stos dec lods neg (bad) mov adc je mov jle stc add test cmc sbb jne std mov mov sub insl fisubl inc inc daa pop test or fnstsw imul xlat xchg and imul jne dec ja outsl sub fcmovne and dec or fs popf inc popa xchg jge mov xchg lods fisubr push push stos sub jmp sarl imul jno imul xchg lret pop cmpsl xchg add lds jecxz dec mov jg cli mov loop (bad) and push jp mov jo push insl jo pop negb fs scas clc xchg movsl mov dec jmp (bad) pushf lret cltd sub cmp or sbb sub and pop mov xchg inc xor (bad) leave ljmp in (bad) mov fist ss (bad) xor inc cltd dec orl ljmp dec mov mov into cmc sarl mov jmp push sti insb cmp test or adc push iret test cmp popf rorw xchg jnp adc mov cmp cmc in loopne and movsb pop push out mov xchg (bad) inc and pop push pushf in fsubrl dec adc scas mov mov and xchg mov add lods fcmovne aaa dec dec pop ret inc push mov jmp and scas (bad) add out jmp pop dec xor pop (bad) jb iret call in imul inc sub shll daa insb cmpsl and and pop pop dec cmpsl inc add outsb out jnp fsubrp jmp aad add fldt imul jne (bad) jae pop stc pop lcall sub jns enter mov fiadd fnstenv icebp test (bad) rcrb sub inc mov arpl push sbb and add sti lret scas dec or in xchg packssdw cmp xchg fiadd pop in ss mov cmc std push test into push push sarb add rorl es add sub stos push sbb clc popf fs ret adc adc add jmp push xor pusha adc cld sub push pop lock mov outsb (bad) fbstp lods les or mov push ret pop lds leave in das in xor add mov dec and add add mov out mov push in mov mov fs fisttp jae sub jmp xchg pop mov out ret xchg leave jecxz or mov int3 mov jne es mov sub pop cmp jle ljmp aas dec push inc add pop fidivr ss dec mov repnz sbb (bad) jne or dec stc clc das push xchg sub pop aam jp mov push out mov jge mov mov jecxz xchg pop lret mov mov add sub pop pushf sti jmp adc sbb fnsave sub (bad) adc sti mov push push sub sub pop sbb pop xor xchg pop in and and mov jne sarl nop xor orl inc mov adc dec lret inc push ret jns inc xor push mov insl out ret cmpsb dec mov cld fucomi ficoml jecxz cmpsl cli dec dec daa inc push andl add xchg pop xchg add fcoms ret mov jne add (bad) dec enter pop fidivrl stc in and stc or stos outsl mov mov dec pop cltd jmp (bad) aam leave cli mov fnstsw jl cli loop pop jbe rclb dec mov int3 mov or into mov ss inc in (bad) mov xor scas mov loope (bad) shlb fisttpll (bad) leave pop fldenv and rclb (bad) and mov clc (bad) movl push xchg arpl sub xchg mov jne aam (bad) lret clc cli les ret and outsb or icebp data16 or cltd add imul imul mov icebp stos xchg fiaddl test add inc xchg cld int3 insl js mov test and push xor outsl ss popf adc popf pop sbb mov push xor movsl pop lahf lret jne pop repnz lea fsubrp pop rcrb pop push std mov fisubr movsl icebp fisubrl mov pop (bad) mov in pop mov adc pop je mov pop push gs loope data16 xchg jns jmp popa shlb pushf mov shrl sub rcrl lcall dec jnp pop add push outsb (bad) icebp out jecxz aam add and mov in mov cs xchg in mov dec jecxz adc sub cwtl (bad) and sbbb mull push popf mov xchg int3 data16 jmp in add jmp pop scas inc and add pop repnz clc movsb out int3 (bad) repnz hlt in (bad) js push mov std imul add shrb xor (bad) daa popf imul mov pushf daa inc in (bad) fstpt push jns inc sti stc and stc adc fninit mov fucomip call enter cwtl mov pop repz mov (bad) imull push iret push and das or enter pop mov cltd jge loopne and add and sti into fisubr out ja fistl xor cmpsb shr sti mov enter xchg adc cmc or (bad) out push in (bad) sub imul daa cmp xchg mov jae sub and sbb jno mov icebp sbb (bad) std icebp pusha inc and or fildll sub (bad) loopne push mov xor sub cmp stos cmp ljmp ret (bad) (bad) rcr add sti movsb cmpsb add pop mov cmp jns rclb add clc xchg loop cltd stos repnz shr xor or gs lods push inc mov mov iret or sbb pop or ljmp dec add or iret sub adc dec jge fiadd hlt mov imul iret (bad) mov inc push pop enter or pop mov (bad) jmp stos mov sub jnp jmp cs and hlt mov test imulb push into mov into sar es sbb cmc xor xchg sbb adc outsl xor (bad) jle jno ret push cwtl (bad) out mov rcrb mov mov ss xor sbb cmp add mov jmp xor jnp pop jmp add pop mov xchg std push clc imul mov pushf jp imul mov lcall lcall push cmp ret mov fldcw push and neg iret add mov jnp adc jne push shr movb jne fistl in lahf loope fidivr cli testl jg mov jmp out dec jg lds sub adc cmpsb call ret pop lods imul shrl sbb jb fiadd test outsb loopne sbb cmp sub mov mov xchg out pop jge or imul imulb jecxz lret test xor sub fidivr fstl xchg add pop pop ja lds in decl call ret jp or mov mov cltd stos popa sub loop bound xlat movsw mov xlat scas xor lret (bad) sub xlat das lds (bad) dec add mov dec (bad) int3 jmp (bad) and enter or cmc (bad) mov (bad) jne jns and stos xor lods jno into adc clc dec xlat cmpsb cs lret and sub add dec sbb cltd pop idivl stos fs mov out or inc xchg add cmpsl jp xchg dec xorb test popf pop jbe ret push jnp mov sbb adc add scas fs sub pop pop or insl add imul pop (bad) sub add sbb pop cmp sbb mov jno ret and sbb jne pop scas loop std int sbb ds je loop dec scas mov mov into xor pop repnz das cli mov test fiaddl pop jecxz jp out mov lret add (bad) pop stc insb in xor fcmovu insb pop hlt lret shr (bad) mov xchg cld xor push mov jge into mov xor out (bad) mov std sub ret stc (bad) repz ret push adc mov ret inc insb cwtl leave lahf push mov (bad) sub loopne mov add mov data16 pop push cld dec popf rolb test pushf popf dec dec (bad) jo lods cmp pop xor scas arpl cld pusha pop sbb fisttpll adc stos enter inc adc inc and addr16 mov cwtl jle cltd fldcw mov jb inc dec fildll into sarl cmpsb dec pop pop cmpsb and (bad) and xor adc and sub int3 xchg cmpsb jp sub dec mov or int3 push cwtl loop jne icebp sbb cltd add sub loop das sub pop lods mov mov dec lock (bad) dec mov inc dec (bad) xor pop ret and xchg stc out dec (bad) xor movsl dec mov js xchg in daa insb pop pop out in xor pop invd out mov mov in icebp adc fmuls ja jmp loop pop push pop jp testl push and dec mov mov loop pop push int3 inc sub pop insl xchg ffreep loop pop in js,pn pop iret sub ljmp stos cmp (bad) (bad) imul in test adc mov sub jmp fisttpl stos in test mov fcomp jns int3 mov inc lea sub outsb sarl jne std ss push pushf mov test add sub mov ja inc mov pop lods test icebp mov inc mov enter add clc ds and and arpl es and mov jge ljmp push xor jecxz mov dec addr16 gs mov pop mov data16 sub mov mov cmp jecxz xor (bad) jne dec push push insb sbb dec pusha (bad) cmc mov mov (bad) push sti les pushw fdivl repz into mov lods jle mov lock push cmpsb mov fstl cltd rcl and (bad) movsb stos test fadds xor orb out pop mov jp sub lahf sbb pop jecxz sub imul inc push test cmp xchg adc aas xchg scas int jle add stos and (bad) push decl out lods jle add pop mov lret lock or sub imul out fiadd dec scas mov popf xlat sbb or mov ss adc rcr xor mov pop and xor push pop inc outsl jne icebp cmc stos or aaa push sbb xchg or inc mov int pop andl xlat mov ficomp js xchg insl adc push adc fwait push xchg out out movsl jmp and push pushl inc xor cmp push mov addr16 icebp jge jns xchg out stos lret and ret or pop push xor rcl inc jae mov and out repnz in and daa sub pushf xor movsl or pop cmp jnp xor adc push aaa scas jb mov lods lods outsb je sub jns sahf ss and xchg inc xor cmc sti jecxz push cmpsl mov pop adc (bad) and lret jne add test pop sub cmpsl icebp cs inc mov fsubl out cs push insl lahf rcrl shl mov pop inc push fsubs jl enter sub mov mov jo dec sbb dec sbb lds cld pop ja and dec jne es stos xchg mov jmp sub mov xchg stos lret jbe leave notl jb pop mov push repz mov int and jns pop les mov dec bnd iret dec inc sub iret lds (bad) mov dec out pop out pop mov cmp popf (bad) jge dec adc lcall adc mov push mov mov and sub cltd std cli cmp outsl int3 lods loop (bad) fs dec aam dec stos lret out push mov push pop sub ljmp (bad) mov cli sub jns xor leave add in pushf mov mov repz call adc sub movl add insb lcall dec aad pop dec push add xchg push cli bound xchg and das cld mov and or into in loope lret xor aaa mov and lds ret jle push jge jnp jmp mov int ret or xor fldl dec sub jnp xor xlat (bad) mov dec or mov add out js ret in rcll ret pop fs out imul push xor push (bad) dec into sarl stc sub sub aad (bad) in and repnz xchg adc vpor cmovl mov pop movsl mov js shrl cs or push gs push inc ss push mov add add int bound adc mov add in clc dec xor fmull mov or mov aas pop repz adc pushf inc adc andb (bad) hlt out fsubrl das lds add pop sub icebp mov std mov cltd and push icebp leave flds xor enter fsub mul fwait daa pop dec xchg fidivrl adc add (bad) sub sub ret aad push xor sbbb mov in out push fildll ret and mov pop pop pop vmaxps rcl adc les jnp daa mov loopne negl lods sbb idivb imul xchg mov inc pop and decl or repz lret leave (bad) ja push (bad) inc (bad) dec inc insl or pop push add pop das xchg loope xchg jmp lods jo dec push mov xchg mov add mov rcrl or (bad) pop cmpsl (bad) jo add add rcrl pop cwtl or mov imul popf or and xor mov jne imul lods ficomp stc mov jbe (bad) pushf test test (bad) (bad) mov xchg cltd stc idivl sub jp lds jb cmpsb xchg xchg lods movsl jl shrl mov mov xchg push sbb imul xchg inc std outsb gs stos pop mov testl aam sub out jbe dec pop adc mov ror enter sub or xlat (bad) cmc pusha xor add mov cmp adc out jg xchg or mov xor pop xor std outsb loop cmpb in daa ja call xor pop xor pop mov out add cs and iret mov stos xchg loop xchg push pop mov and out or inc push and cmpsb movsb add mov (bad) xchg xchg jge jle js xchg cld (bad) push dec fdiv rcll mov outsl jmp xchg loop loop shll icebp stos or test xor xor data16 (bad) lahf jae add xchg cmp sub sub fild repnz and lret mov imul sub or fdiv pop pop loop mov pop mov imull in or ret dec cli mov inc pop incl jecxz lds dec pusha (bad) bound or mov rcl in scas jb add xor push loope push js mov mov (bad) dec xorb repnz xchg psllw xchg mov add cmp fs (bad) jmp add mov pop mov repnz add mov mov dec and (bad) lods dec clc xchg pop lods jg fsts sub mov jmp pushf out enter inc fs pop outsb mov mov (bad) jg (bad) sub js fnstcw fimull mov xchg inc mov ror sub cmp inc enter (bad) jno movsb sbb stc cli or ss aam push push inc imul pushf repz scas imul xor cmp movsb lea cmp sahf ret push sbb cwtl loop outsb pop dec insb dec lcall in push movsb or xor jmp mov or sahf sub aad sub cmp adc mov into sbb sti inc adc xor fldl or sub and sbb cwtl add or mov ficoml ret shll out adc mov out jge mov mov sbb xchg jmp test jbe leave fnstsw in das inc or (bad) lret (bad) dec jno xlat daa inc rclb dec pop and xor dec pop out daa loop fisttpl daa js dec lock das out ret jmp fs add jns pop pop sbb scas repz shlb add ss jns or rcl xchg dec loope cmp rep gs inc (bad) or add jns test dec sub mov mov repz cmp notl xor xor sub pop cmp cmpsb out sub in pop bound push sahf and cmc sbb dec sarb das mov lods fwait mov jne scas mov test movsb mov dec cld in mov and lret test rcrl add jp xchg outsl push icebp outsb sbbl ds popa mov or xor jo movsb fs push popf pop xor pop add (bad) mov cmp daa out lock (bad) flds repnz call out cs xchg call xor mov test dec repnz repnz fidivl out add mov adc out movsb out xor ds fnop mov and sub pusha in xchg out push cld es jmp dec dec clc addr16 mov mov inc out add jge sub xchg sub push ljmp or push dec push in imul xor jge sub jmp mov jp fidiv mov mov cli cld (bad) xor gs inc cmp pushf or add sti jno insb xchg movsb adc pushf out add mov enter sbb aam and or and scas xchg idiv cs jno imul jnp movsl ficomp and movsl aad data16 mov cmp decb (bad) out jo sarl mov cmp sub stos cmp sub mov scas jno add imul xlat xchg ljmp sub mov mov mov and pop xor jo sti dec xchg xor popf cmpl add sarb or (bad) and sbb sub out cmpsb rcrl sbb shrl sarb push mov loope jmp push dec (bad) aas or push out repz cmc lret pop or testl outsb mov mov cwtl nop ficompl adc inc hlt out mov fcoms sub and push stc stc sbb pusha xchg fidivrl dec mov fcompl mov xlat sbb add outsl jmp xchg mov cmp sub mov test inc inc xor or mov loopne cmp mov or cmp dec xchg mov pop ljmp xor fdivrl or mov scas imul xchg pop mov add add or xor cwtl jae pop xor or xor and mov out out push shrb sub jmp in push and cmp bound dec icebp aaa xor dec inc shr fs int cs xchg xlat sbb xor push stos repnz xchg dec aas jae xor outsl or sub xor push cs dec pop mov lock mov mov fild jmp loop out cwtl test push idivb out cmp push jle mov mov add repnz mov mov repnz sbb xorl mov mov loop xlat stos adc mov lcall out notl mul mov xchg push jl leave incb pop cmp popa or jnp cltd (bad) mov jge push (bad) (bad) push fbstp (bad) leave cmp cmp stos and lea loope ds (bad) mov mov add mov enter cmp (bad) inc inc sub pop mov ljmp and leave ja nop movsl add and push daa dec (bad) repnz push pop push cmpl cs scas movsl adc mov add out loop (bad) mov xor xchg mov jmp mov out push push ret sbb jnp add jnp push divb add or outsl cld cs out dec xchg xchg enter mov ret xchg inc mov sub repz pop (bad) push shll add cmc jae lds stc dec out imull sbb (bad) outsb adc push out imul pop shlb or lds xor jmp fist sub add sub mov stos in cwtl xchg sub out add jb push test xor lods inc inc ficomp jns xor xchg (bad) scas bound jmp push movb adc ljmp jnp jecxz test out adc in dec gs rolb ljmp and pop xchg xor mov inc loop jns fnstcw das in inc pop out cmp or mov testl or das std mov repz pop icebp and and pop push cltd cmp cmp insl xor dec xchg (bad) inc mov adc push or mov bound cs or or adc mov jg mov dec pop (bad) fnstenv mov mov mov jg or inc push sbb xor fisubl outsl mov dec cli inc in xor sub jle ret or (bad) mov enter push and pop test and (bad) xor sub cmp xchg test pop sub jmp and out enter lock xchg sar leave out jle jp lahf faddl lahf inc cmovnp cli jbe xchg xor outsb sbb mov mov mov (bad) jae mov addb std xchg sbb or adc test xchg add push sub idivb xchg adc xchg and mov fmull (bad) push push (bad) sbb xchg jno out or outsl xchg outsb out imul (bad) repz leave xchg sbb pop out push addr16 xor repz sub mov jg popf pop push idivb push ror jmp adcl mov mov fs jmp xlat lcall xchg daa or pop adc cld lcall sub or add sub (bad) sbb dec jmp lret stos into push dec push pop je push bnd js dec or push lds mov xchg aam in imul mov ret hlt out push dec add jb or add push pop mov fstps mov das stc jge out pop pop pop add in jle xchg xchg dec sub stc (bad) sub js pop sub and add push and sub es and fmuls sbb stc jecxz sti test mov frstor popf enter daa push add (bad) jecxz adc mov mov mov mov push rcl mov xor dec jnp and sbb sub or ret fidivr data16 xor pop sub mov xlat sbb xor jne jns insb and inc mov gs pop adc cs add or mov loop fimul push scas hlt notl jns or sbb mov pop mov add aaa icebp in mov (bad) sbb mov test hlt sub into push dec push pop or sti sub cmpsl aad movsl dec fcompl and das or fs dec (bad) ljmp mov add scas sub pop push (bad) sub sub outsb sbb pop xchg idiv loop (bad) out cmpsl pop pop test (bad) (bad) jp loop jne leave pop push ljmp xchg push fucomi pushf pop jmp mov dec dec adc xor adc lret bound fisttp adc or inc push and and adc das xor push pop fstpl divb (bad) xchg and lcall cmp adc stos sbb fsincos jbe jns xchg call jl cmpsl cmpsl testl fiaddl shrb pop xchg ficomp mov pop xchg pop pop mov mov cmp movsb loop js mov add ja mov fstl inc pop xor dec lret dec ljmp lods jle iret push shrl out popf out bnd push idivb test pop jmp mov xchg (bad) sub sti ret test xchg mov (bad) (bad) xchg lcall inc test and or (bad) dec (bad) insl xchg ljmp cltd clc mov daa xor inc ret add lock stos ja adc mov mov dec into fadds shrb inc and repz (bad) gs bound fucomp lahf in dec sub xor jmp leave mov cmp shrb lret loop inc sbb adc or inc xor xchg fbstp data16 jmp repnz mov dec jnp not lret aad cs test js loop dec adc (bad) dec scas pop lea push aas jecxz pop mov or cmc jle add or sbb mov sub into incl mov add lea mov movsb out xchg pop push int xchg loop add or repnz xor stos xor out dec repz jmp sub cmpsb rolb and aad out adc sub divb pop dec cltd test pop out push out repnz lahf adc mov dec fstps xchg jb sub popa xchg and cli bound or jg jg (bad) lds aam imul push or xchg scas sbb dec aam into jge or aas jmp das xchg insb aam daa push inc jne out cmp ljmp sbb iret mov pop (bad) les fdivrs pop imul dec xlat xor push jge fist loop sbb xchg pop jg std jno (bad) jmp inc xor pop fstl jb xor call lcall or cld daa leave (bad) in sub and mov hlt xor cmpsb cmc lock dec lret or lret mov aas add (bad) sbb sub adc jecxz push xchg ret gs lret cli cmp clc mov shll add inc and out jo sub xchg mov hlt jbe lret dec outsl stc add testb lret inc sub ret xor gs cmpsb dec in cmp outsb aad mov divb clc sub cwtl fistpl idivl and inc call cmp frstor (bad) jmp lcall pop std cmp sbb fistp test sub mov mov rclb fsubrl xchg rcll (bad) jecxz jne and repnz cwtl push lret mov push ret aaa mov test pop call cmpsb daa and pop mov jle (bad) xor movsl enter mov out xor scas cltd pop fstps inc sub sbb and pop push notb mov sub and mov lret (bad) and sbb mov fldl je daa jno dec xchg sub cmp cli push lods scas lret or int3 aas and in sub cmp xchg sub or ret pop iret dec push xchg das inc cmp test inc mov out es or or xor or test mov pop idiv fbstp xlat stos lds mov lcall cmp (bad) arpl jge clc enter ss imul scas les add data16 push xor mov or jo push lock cli cmp adc cwtl stc imulb mov dec (bad) fs jmp fimul pop (bad) aam mov mov das out pop lds (bad) imul mov out int cmp lea repz (bad) in bound xor fisub and mov xchg mov ret outsl add cmp int3 enter xchg ss mov dec sub out or outsb rorl ja in push rolb jmp pop sub rcrb mov jle jmp inc lret mov mov lahf mov jl push (bad) into inc das add pop xor insl xor or pop push jmp mov (bad) data16 rcl (bad) mov sub or jae cmp or mov sbb repz push mov jne in ret jne imul mov insb stos adc (bad) repz fldenv lods sbbl and mov repnz pushf lcall push lea sbb cld push test inc push call aad movsb call push mov clc add push inc push mov lock pop rcrw add xor lea out ss cwtl jmp pop pop pop add clc sbb dec pop pop (bad) push inc insb or pop sub jb mov ret inc das inc mov cli fistpll rcrb loopne jns sahf sub push ds es outsl cmp and lcall scas orl out sbb insl push shll mov mov (bad) stos mov xchg call add mov or dec and sbb scas aaa je push ljmp movsl and mov push in repz decl dec dec or mov add pop sbb sbb mov mov iret std or shl movb mov mov js sub push sbb ja repz pusha ss jae xchg adc int3 dec cmp int3 aas jne scas mov jge or adc mov jmp inc jbe enter pop mov (bad) adc adc cmc pop cltd lds xchg or or adc add jb dec ret dec lock in in stc mov in jecxz dec out mov test dec cli sub xor pop lods mov call data16 ret cmpsl std lcall into mov inc negl xor fdivs loop lds ret test mov lret sub fisub daa and jp lret ds dec and cli cld aaa xor lret pop ds out push xchg sub xor pop lea push fildl sarb and das out mov dec shr xchg push push push push in and lock out (bad) mov iret mov sarb add mov ret sub imul mov shrl push jge lds popf cmc mov out fistpl call and in adc call adc rol lods cld dec inc add pop dec fild pop movsl jmp push shr repnz test scas mov add cmp jns hlt ljmp repnz add mov imul push jecxz push (bad) bound sub (bad) repz add rclb jno (bad) out pop push std out imul or paddusb popf xchg cmp shrl iret (bad) mov xchg inc ljmp (bad) cmp or xor push xor bound dec popf je jb jno dec pop and lahf push cltd in (bad) cmpsl push xchg loope sub mov push adc adc lds adc push je and cmp xor insl daa fstpl and jl pushl push lods loope stc cmp cmp (bad) cmpsb loopne or add decl addl mov push out pushf mov call aas daa jns push sub shrl adc stc hlt lods (bad) add pop jno imul xor sbb jmp and (bad) lret fcomip push add iret flds daa stc (bad) movsl jle lods cld pop call sub ja sub xor in xchg adc mov out cmp and cmpsl sbb sub pushf movsb test cltd das or push xchg in pop loop lret loopne inc sbb or mov pop and sub jg mov in cli leave fdivrp xor dec fisubrl and (bad) sub xchg imul jne test xchg mov loope rcrl popl cmc mov cmpsl inc mov hlt ja and pushf mov lock add sbb add scas mov pop roll mov scas gs popf sub dec mov arpl xor mov and divb or mov and popf ja jbe rorl or insb or mov add mov sub aad std sub mov fdivrp add fsubl ffreep cmp jmp (bad) mov and frstor mov adcb or sarb cmp mov ret test (bad) sub stos mov adc add jb mov das or pop idivl mov cmp jp or sbb adc in gs out (bad) (bad) and mov xchg push scas jmp mov jmp (bad) into rol dec sarl xor std sub dec (bad) mov jnp aaa xor lods fstpl xor add icebp or mov xor xor leave es iret jo fbld dec out adc sub mov sub xchg je mov adc adc mov mov or (bad) mov enter aam (bad) dec jns sahf xchg lea and scas es cld sub mov adc aad inc das jbe adc je leave ret jno movsl push and std insb into mov cmpsb push out inc cmp lock jg add sub xor add xchg mov or outsl sub mov sub push or out add or (bad) dec xchg sub pop pop push das mov add shrb dec stc mov pop lea jmp pop leave fdivs notb and movsl mov aad loope mov ljmp fisubr mov adc lret or loop mov sar lds mov test clc out or rorb (bad) aaa xchg xchg xor push and ret jge jo outsb outsb push mov mov push lcall jae mov add mov lea aaa int3 pop lret ss bound fcmovnb leave sub pop jmp mov sub mov adc cli xor fnop lcall outsl inc or lret (bad) scas enter into cli pop int xor shlb inc mov pop test nop loope jb cwtl imul mov inc adc sub and adc andb fbstp mov into dec dec dec jbe xor and xor cmpsl pop aad sbb mov xchg or das (bad) dec mov xbegin lock and scas mov sarl mov div lret lahf jle,pn xor push shll sub jb shll pop (bad) std in sub add cmp cli (bad) outsb bound pop out aaa movsl inc stos ja pop xor decl push sarl sub addl jo xchg jbe loopne mov mov int3 and add enter pop xor sub in lds std adc cmp jo mov imul std mov addl pop shr ljmp inc fcmovnu loop cmc stos inc test xor pop inc push or or shl lret cmp mov ja enter pop xor rorb (bad) jmp test push rcl mov or push aas pop andb or mov add pop push std in pop mov mov loop in add add lret es pop repz push mov (bad) push add (bad) adc out and sub push pop xchg neg inc sarl pop cltd out push add jae icebp (bad) ret stos imul and or nop cs xor test mov fcoms es outsl xor adc or data16 xchg std add inc das movsl and pop cmp and jl add cmp out inc std outsb sbb (bad) cld or cmp add lods mov pop push push push outsl pop xor sahf cli mov or jecxz xchg and sbb add leave xor in cmc xchg or movb jle daa cmp push inc mov fimul push pop lods inc dec cli std pop add xor test jge orl jmp lret dec int3 jmp xor or aam pop push movb push pop scas and xor xchg daa or rclb or or subb das xor adc idivl add xchg or cli dec popf arpl cli fs in xor pop jmp outsl out jnp or dec or clc xchg mov ret inc mov movsl (bad) mov clc and jbe mov stos js mov or push or out pop mov mov cmp adc xlat rcl pushf pushf xchg push inc adc dec stos sub add or (bad) mov idivl pop pop in xchg push (bad) stc dec mov jle addr16 les jb pop (bad) cmpsl jne mov mov sub mov inc scas movsl dec cld daa lret sub and scas leave add and and or and scas lods arpl lock mov pop dec jae repnz shlb cmpl inc mov mov mov push icebp mov mov stc cld das xchg cmc mov inc sub shrb ret ja sbb fcompl cltd ret xchg ljmp cld out shrl jnp mov fwait int out ret mov sbb dec xchg gs das fsin jp mov mov das pop push mov pop inc ds sub in repz neg push in (bad) mov and xchg xor or add sbb lahf (bad) dec xchg (bad) xor aam cmp dec mov pop test lret xlat dec jo cmpsl cmp jl iret jg ja mov daa adc dec and jbe in xchg xor scas sub addl and mov lahf dec stos in cmpsb in cmp xor repz cmpsb mov out pop xchg mov bound test and fwait pop das jnp and into leave sub jne (bad) (bad) adc or mov imul mov fcom lret mov rorl pop and mov mov cmp add mov push sarl sub int3 dec and xor lret dec sub ss dec out inc mov add ljmp xor push mov sub sub mov mov pushl cli je das push sbbl xchg pop dec mov ret lds std pop sbb imulb movsb push imul sub addr16 test enter inc into gs or idiv pop (bad) ret xor repnz push repz and lret in (bad) in cmp pop sbb xor out dec xchg jbe out lret xchg shrb (bad) lret pop pop in mov sub fistp lahf hlt mov lcall ret int icebp or mov lret movsl sbb cmpsb push js sti and sub or (bad) xor stos mov pop xor xor push call push popf into xchg lods in dec int3 add loope call pop jp jmp sahf pop jge xor or insl pop out and pop into scas pusha (bad) xor cli negl out dec (bad) and pop adc lods sub add or daa aad into mov das pop ret mov das xor leave sub sub (bad) pop or mov jmp loopne add hlt inc mov jmp dec inc incb stos lods (bad) cld inc mov das inc jo pop ret cmpsb mov mov in je add push cwtl std or dec and (bad) hlt dec jb das es push ja les push sbb (bad) (bad) jge push add (bad) loopne pop (bad) fdivrs cwtl mov test push adc (bad) or pop in ja mov add in cmp repz mov sub out gs bound movsb xchg push (bad) aas sub repz lret cmp into outsl mov or jno lret inc push or daa jne cmpsl and adc xchg and in sarl mov dec pop gs push aam jb divb add xor lcall gs mov sub sub mov jb lahf push idivl jne adc adc lods test sbb add out aad int pop (bad) fidivl test xchg movsb stos jmp push adc loope push les sub sahf add add (bad) push xchg dec ds inc dec mov jnp and pop pop dec test or mov les sbb xchg inc test mov in test dec sti je in daa pop stos jne clc lods pop in cli mov das scas mov out pop add pop mov push enter lods inc (bad) or popf out sub cmp sbb push das fdivrs mov and out repz xchg fwait jp popa lcall mov aam (bad) mul and push or ljmp (bad) push sub fcmovb xorb or test sub sub lret push push out (bad) popa outsl testb and pop xchg lcall or popa mov mov sub jo,pn xor sti fbstp fcmovnbe mov imul mov sub mov hlt (bad) cli (bad) cmc pop or cmc mov cwtl mov fdivrs (bad) fidivrl addl (bad) aam clc jge decb xchg push pop push and xchg adc cmp jb xchg fidiv cmp lods fisubl jge mov or adc sub add (bad) adc gs mov xor arpl pop in mov and mov fbld xor push fucom push dec xlat sbb mov cmpsb es mov sub dec dec push (bad) mov lock negl jae add or xchg pop push mov adc and and sub (bad) insb scas mov pushl and sub jecxz sub repz sub pop xor into dec divl xchg or je add sub popa sub loop jno dec or movsl (bad) cmpsl dec das mov and pop sbb scas ljmp clc daa push or (bad) jnp mov pop jbe leave lcall push cld pop or dec xlat xor iret or aad dec and decb enter bound aam outsl or mov xchg jg jo fdivl or xlat xor xor mov pop or sub mov add pop mov jno mov repnz (bad) insb mov inc mov stc push imul fs mov xor pop or xlat (bad) mov test in and and lods mov xchg mov sbb jmp dec cmp add sbb mov dec out mov mov jmp sub int cmc (bad) sub sbb add mov sbb xor icebp jmp push pusha add das add ret call jbe jle push xor sahf pop (bad) push inc or push adc sbb xchg mov out dec lds jnp stos mov xor pop jle into shrl (bad) xor adc out xor sbb adc out or mov aam repz dec test test (bad) xchg jmp pop sub mov mov popf popa (bad) jmp push xchg jb dec sbb fbld sbb ficomp (bad) decl ficom iret jmp les ret loop ja jp stc mov pop (bad) cld adc or jp cltd mov xlat sub lods aad cmc push ljmp mov movl xchg test (bad) call imul or cli iret in ljmp (bad) cli ss imul jmp stos xchg clc lods imul mov cmp sub mov out mov mov add ja js xchg gs es repz push out test sbb ficoml pop test test add int sub xor xor and inc fild push in inc pop popa das add cs fdivrp xchg rcll push add dec push inc pop mov fmull (bad) jmp popf and leave pop inc sub cmpsb dec (bad) mov vshufps (bad) lods xor loop das enter jp test cmp xor push dec cli lret jbe xor sub mov jmp pop int3 std pop fbstp loopne xchg sti push fsubrl pop adc shll push and inc pop (bad) mov fyl2x decl mov or into divl ss or dec or lock xchg icebp repz mov fistp fwait out test movsl ljmp ret mov dec sbb add mov fidiv rclb mov and into mov cli push and xlat mov cmp mov stc mov jno jmp ret xchg fisubrl dec fistp dec ret (bad) iret jbe repnz xlat lods int3 lret cli pop out pop mov aad das out mov and add gs pop lock fisubr lods push (bad) (bad) notl cmp hlt sti popf (bad) (bad) mov sbb pushl mov loopne stc xchg pop cltd mov out sub or (bad) pop cwtl mov cltd xor sub jg (bad) into mov cli in fimull icebp inc push cli dec and add icebp (bad) je rcll mov dec push loopne or push test movsb ds xchg sub (bad) stos mov gs pop shl bound mov or out jl lock enter adc jne fwait sahf sbb icebp inc mov lret xlat test add xchg negl nop out in add and test out pop xor xchg or or pop repnz test (bad) ljmp repnz lret int sub ret add mov mov mov xor or neg jno jg mov into roll mov test in test leave sub leave sti or jp mov jae and (bad) aam push xchg ficom or js or mov fnop ja push mov popf pop xor enter sub gs cmp popa mov sbb xchg (bad) push aad fdivrs sub mov dec test mov xchg mov sti xor sub pop push sahf dec iret fcmovnb lret sub push push or dec (bad) ljmp stc test (bad) xor or mov dec test xor sub aaa add out cmpsb dec cltd daa in sub dec push pushf int3 push ret cmp leave lret aad and jo mov das je adc in mov test mov jne push mov pop xlat sti mov (bad) repnz mov mov and sub jnp (bad) mov fsubs dec add fsubr xor stc aam dec push ljmp movsl rolb mov dec rorb outsl dec push ja out out xor repz mov or shrl in in inc repz add push imulb sub mov das xor fldenv xor scas xor sub dec xchg sbb lahf adc xor or push push dec and xchg pushl pop (bad) xchg inc mov push xchg test mov inc les mov subb cmp xor scas adc jg mov pop jle ret cmc push adc push incb or fisubr stc scas mov jle sub add ficom push pop pop dec roll add arpl jge xchg repnz out xchg pop mov push mov push mov jb mull add sub int outsl jno jge and lods add (bad) sub rclb (bad) pop sub cli nop pop add pop shl sub inc sub jmp pop repz add aas push fdivl or mov push dec enter fiadd jnp es shr push aad stos call fiadd dec repz pushf orl mull sub mov pusha and aaa lods add out pop add icebp lret clc lds pop or push lahf je dec mov mov push mov repz xor subb mov ds rolb ret pop shr enter out push (bad) dec divl cmp mov out sub pushf dec imul pop leave add sub cld sub stc xchg adc jmp jp cmp popa scas sub push je mul pop mov repnz dec lret jg pop daa clc xor sub lret mov add jg xchg cld lods lret fstpt imulb icebp xchg dec lahf or sbb cld pop out ret mov cld lret jnp jl mov cmp xchg imul push pop pop sti stos xor into xchg cmp (bad) jno adc xor add (bad) mov xchg jo cs daa cmpsl cmp inc sub jne rolb clc push pop or lret mov sbb stos out dec adc (bad) xor ret (bad) xchg sbb sub mov and das or inc jle mov mov xor jmp lea sub out test repz push xchg arpl dec ret inc movaps imul or out iret sub mov shll std cmpsl push gs xchg rep mov xor out rclb in repz jbe lret and lods daa (bad) ror cmpsl sub mov add je sub popl cmp fadds decb (bad) test stos mov or sbb add push out loope das icebp jg mov sarl iret pushf pop ror push dec push lods subl lods and (bad) push adc cld add out fnstenv xorl fstpl aas push cmp das jecxz push mov movsl adc mov (bad) xor xor iret pop icebp push dec lret (bad) (bad) sbb dec mov adc std in rol add (bad) call lret in lret push cld inc mov ja (bad) rol imul sub dec leave cmpsb jb aaa bound lds (bad) lods int3 daa mov sbb jmp push mov adc and ja (bad) mov xchg pop loope lcall loope cmp pop or mov inc sub jmp xchg mov xor xchg adcl test inc cmp mov or cmc mov (bad) mov shr out sub popa pop push int or add mov movl outsb adc mov mov jecxz addb scas sub repnz popa jb cmp call xor outsl jmp add mov std mov les push data16 lret sub pushl jnp pop leave ss jae and stos sub cli and mull out out jmp inc enter (bad) mov scas mov and mov pop mov das fs cmp sbb (bad) jg loope xchg hlt cwtl decl lret push imul sub out leave insb dec add adc cltd pop and adc (bad) mov dec fnstenv xchg test and sbb popf out pop (bad) notb lcall lret (bad) fcoml and lret mov test mov xchg mov sarb gs adc ficomp stos sub dec repnz shrb icebp pop les xchg das cmp inc nop or pushf je xlat stc bound lret cli fiaddl push out pop dec adc push (bad) xor jge mov mul jmp mov cmp add dec scas bound pop mov cmpsl mov clc aas xchg sub mov or xchg iret imul lods dec cs repz inc dec xor stos lret fsubp rcl loop adc aaa mov fisubr shrl pop mov stos mov mov inc imul fbstp inc add xchg mov sbb sub mov mov mov movsb inc pop sub mov and xchg mov (bad) fsubl clc faddl out or pop in das aam adc call inc add mov inc loopne xor adc xchg push mov divl addr16 sub pop into cmpsb adc jecxz loopne test cmpsl xor and jl xor cmp call popa xor add les or jnp into icebp lahf sub in or rcl push insb sub jmp dec movsb leave fcoms jecxz daa insb loope inc sub xor out cld sub outsb pop (bad) lods test stos mov mov ret mov mov push sub fst movsb push adc icebp xor in mov fstps je fucom mov sub das jns or sub pop inc inc dec icebp out jb or xchg sub pop sub test repnz mov repnz jle mov pop shr and (bad) imul or add rorb xlat mov jb and inc movsl (bad) negl into ret mov in xor mov mov mov and nop bound shrb fidiv sar or pop pop mov mov ret lret lcall dec cwtl inc xor lahf pop sbb fdivr xchg dec and ljmp dec mov add push mov mov dec out xor pop (bad) mov xor or xchg pushl into sub add pop xchg xor jl jns test or repz lcall out jb popf sub add add sub mov ret jge xor pop hlt xchg add push leave jg repnz pop lock scas sub repnz jbe cmp or mov jge into mov xlat pop loopne and mov sub shlb xchg push pop xchg xchg rcrb fstpl pop mov adc add jle gs fstl imul push sbb cmp (bad) jmp push or mov addr16 dec sub mov shrb dec mov mov dec sti mov (bad) leave (bad) stc sub mov add (bad) sub and xor jmp ljmp sub mov jmp lret xlat mov push add mov push jo scas adc out sub add mov std gs movsl je leave jne dec xchg (bad) jecxz js (bad) jge movsl imull lods dec imul xor lahf je rcl xor lahf inc sub cmpsl (bad) das out cmp mov aas idivl ret push sbb cs loop ficoml scas and (bad) decl rorb jnp or jecxz mov inc xor fstl and scas shlb xor or pop push jo loope insb mov and xchg hlt test aas jle add cmc call push imul stc lods inc out mov add adc push cmp jle push add mov movl sub adc idivl (bad) std nop or mov cmpsb jae into pop out sar lret inc je adc scas testb pop and test dec mov bnd dec mov lret add cmp xor (bad) xorl jle into push push pop pop ljmp out fsubl movl mov fs mov into cmp xor inc mov bound sub in push mov stos inc fucomi fsts jnp fstpl jmp or aam lods ja lret push push jae idiv cmpsl int stos xor rorb sub sub xor out aad adc add sub call cmpsl (bad) ror (bad) out dec inc sub xor aas lock jle daa inc mov xchg jle (bad) or sbb push cmp cmp cmp daa cli push out and pop in sub mov jmp mov jl test push ret imul dec push cmc mov adcb pop ret adc pop mov test repnz movsb scas adc inc sahf or mov mov imul inc fild (bad) pushf xor xchg fsubl mov repz cmp pop cmpsl push ljmp out jecxz or repz ret fstl pop push lds outsb mov push mov xchg and mov adc (bad) mov out insb sub mov cmp insb cli jge and rorl inc cld pushf add lods pusha xor out jbe xchg fldt adc mov loop xchg mov dec sub and mov cli jne adc mov pop cmc xchg ret sub aad xchg loopne aas mov notb pop adc (bad) mov pusha sub mov sbb dec rorb and and mov and sub inc mov push addl inc or push pop sub aam lods repnz lods pop (bad) cld and cld std push outsb pop aad pop push mov xor mov mov call xchg sbb scas pop adc jne add mov jnp fisubl mov cwtl mov add pop add ljmp inc clc pop jg lock inc pop lret push mov mov (bad) cmp add iret adc lret cmp shrl mov outsl xor mov test jg add int3 stc js clc add adc add sub pop add xor fist mov sbb or sub lahf or pop mov add adc jg or pushf test movsb pop out and js cmp aas sbb add add mov dec cmc pop dec sub lods lea pop push mov jmp loopnew shrl mov push pop (bad) jmp mov fisttpll mov movsb push inc pop dec mov mov sub popf jns xchg lret jecxz dec mov sub mov inc jle jns cmp mov das add fnsave rorl lret mov unpcklps mov cld push dec lcall add mov jo test cmp sub xor sahf je push aaa leave stc jecxz sub mov ja sub or adc pop div sbb or sub dec andb les cmp xchg arpl (bad) dec pusha xchg mov dec lret (bad) mov insb mull adc clc mov adc imul ljmp push or cmpsl push push adc cld sarl mov xlat ljmp std cmp movsb stos std cmp jne jns xor movb jle in sti cwtl cli mov jbe dec push into adc (bad) mov sti into aad rclb (bad) std loop gs lods std mov add add mov pusha or movzwl jmp mov mov jl push mov jmp fimull sbb fcomps dec jmp or idivb daa pop (bad) fwait push adc mov mov frstor and sub movsl mov scas mov in add mov loope cmp mov mov dec mov cmp sub idiv jb or dec loop rorl lea cmp xchg cltd andl bound cmp cmp ret ljmp ret sub lds popa jp into sub xor sub lahf sub std stc movb into jp and jmp mov icebp cmp sub inc sub and mov push call xlat stc cltd xchg clc push xchg scas or aam pop in and push sti mov ss inc arpl fist mull fisttp and push or pop sbb mov inc add inc adc repz nop mov mov leave or icebp mov sub mov aam xor es stos jmp jg adc decl ds ret dec or dec cmpsl inc cltd and lods or push pop sahf jl push sub pop lcall shrl idiv lds scas push fisubr loope sub add mov inc xchg fnsave or sar test sbb sbbb int3 sub xchg and ljmp push call push or or pop loop sar add not xlat ljmp cli cmp or fdivrs ljmp mov dec daa xchg lret std call add xchg leave sarl mov push sbb and lcall and mov adc aaa mov pop (bad) inc repz out xor push jae scas fildl or cmp maskmovq imull inc pop cmp popf push lea icebp mov cwtl add xor push addr16 (bad) xor lret pop mov test xchg ret jbe jmp sub mov iret pop sub mov (bad) imull shll xor repnz or icebp and gs cmpsb xchg push movsb pop mov daa or jo jns scas pop adc add sub sub iret insb add mov ds xchg xchg cli test aaa das cmpsb add inc add int or adc inc mov or lahf gs add outsl call xchg push pop icebp dec dec jmp or pop and shr cwtl and daa cmp jge pop aas sahf and fildll or push cmc jmp mov fs and divb dec mov mulb or jnp sub call shrb jmp sub pushf lea lret jle rol loope jno or dec xchg das (bad) add and mov cli mov add rol test dec test lret imul cwtl or xchg pop stc add jns mov mov push roll and aaa (bad) mov ret or mov xchg (bad) fimul testb add add mov jp mov xor pusha cmp pop jecxz mov xchg fs test movsl pop mov push mov push cmpsb dec adc sarb test and sub pop into mov repnz aad pushf adc lret xor out sub fldenv mov and fiadd xchg jo dec pusha add stos jb fs out lea (bad) and (bad) push xor inc mov rorl imul pop imul mov jecxz mov movsl cmp cld stos cmp das out mov lock mov frstor and jo rcrb enter sarb or xor xchg or (bad) mov lahf xor or pop add call mov mov out call pop fadds ficompl repz add mov in xchg push jecxz (bad) jno es test xor rclb mov xor data16 leave out movb fistpl ljmp ror pop clc bound sub stos fstl xor sub push add jmp adc push and cmpsb sti icebp inc pop inc aaa and int3 inc add inc repz xlat imul pusha insb xor and xchg cli sub daa adc lahf test xchg sbb dec xor mov xchg sahf ficomp xchg sub push ror insl add lock jae jne out jbe inc sbb cmp outsl into mov stos sub add xchg lods pusha das add jmp lret cmp or xchg (bad) test stos pop lods push testl (bad) or dec and push or out pop push mov test xor (bad) movzbl jo lahf ljmp mov add adc mov inc sub xor flds ret les (bad) mull sub fsubs mov cltd add cmp adc lock icebp add push arpl icebp xor out cld xchg xlat stos xor repz sbb mov pop pop push mov jp in sub add mov inc mov das inc mov and popa fwait lret and or sti clc pop enter jbe (bad) mov push dec iret cli popf (bad) in sahf aam push mov arpl lret lcall mov mov jp into movsb dec call dec pusha sub jns ljmp push push jle in mov mov cwtl sahf lret jecxz pop mov add les xchg das sub mov fs sahf leave out adc mov jl and mov sti fcoml xor rolb inc fwait add out xor xchg cmp insb mov outsb add or inc pop mov ds out das mov insb and mull xlat mov add xchg mov decb and popf fsubl jp fsubrl mov add mov lds xchg mov aad test fimul add xor xchg sub sti sbb dec ret mov out pop daa sub ficomp out mov mov sbb loop mov push (bad) cld out ljmp add dec stos mov daa loop pop pushf ja idivb and dec fistpll dec sbb scas xor push repz mov xor cmpsl add and sub jb or (bad) and es sbb fimull inc adc das mov adc mov fs lods dec into xor sbb cmpb int3 cmc mov sbb xchg rclb pop mov enter decl push fdivs movsl add test sbb cmp mov xor out popf dec sub leave (bad) pop push fisttp ss std repz or movsl jge test mov xor vunpcklps push rorl mov outsb add mov push inc mov cwtl mov xchg pop lock mov add sub icebp lock push inc xchg pop stos pusha mov jle imul pop lret mov add scas mov xor (bad) jl xor or xor xor cmp sub ret mov and jmp sbb jnp dec mov sbb mov (bad) adc in jmp lds test stc push xchg repz je test lea aam xchg mull fdivs adc ljmp xchg mov fdivrl xor jbe (bad) push pop lret and sub mov imul iret mov insb cmp mov sti ds out push cmpsl sbb and cltd pushf int3 lret mull stos mov dec sub fcoms add and mov mov movsb pop and xor adc enter push repz cmp mov iret and pop or push iret pop scas cmc cwtl dec xor dec pushf out jl pop loope cmp adc aaa sub into fimull leave jge das popf lcall mov and in and pop mov ljmp mov add dec es and in adc divb aam xchg dec mov xchg mov loop pushf dec or lods dec ret test mov xchg outsb add mov test leave cli std popf xchg mov std outsl shrb pop and sub lret add outsl ret push push jle push (bad) sub xchg (bad) cs in adc addr16 maxps mov sub bound lret sti push push rcll scas fsubr cltd test add lret sti lret nop sub jmp bound xor (bad) mul inc adc movsb mov popf xchg std pop mov (bad) or mov dec shrb jb test inc or jge dec gs mov cmp cmpsl cmp popf mov sbb ss xchg fistp xchg dec push std pop int add popf andl cmp movsl sti mov rorb std (bad) in divps sbb gs jl jmp sti mov pop stc push into inc push out cs mov test flds repz adc lret sub mov or add and ljmp adc cmp and sti int3 out pop cli sub add jecxz or shrl mov cmp (bad) aas pop adc pop mov ja cli jecxz pop hlt add mov pusha (bad) ja or arpl out mov aad cmc in fcmovnbe and mov dec in jmp mov sub popa mov mov xor sbb xchg imul int3 adc sub add push jmp cs jns jno mov sub adc les mov out arpl jecxz push stos inc dec sub dec push icebp (bad) sub aas xor xor xchg push lods fs mov iret popf jnp cmp sbb ds xor ja daa (bad) sub ret adc cld mov inc inc dec test test clc ss xorl cmp mov fwait ret push push mov or sbb lds xor es pop push jnp roll into dec sbb pop (bad) popf jmp jae mov dec push sub or add enter push sbb dec stos (bad) and mov aad xchg ljmp jo testb dec lret ja inc cwtl fildll mov arpl stos imulb inc movsl cmc push jl (bad) outsl dec cli stc xor pop push jmp pop inc sbb pop sub add dec add xor ret lret jl loopne or (bad) int3 cltd mov (bad) cli (bad) std xchg call ljmp add pop jl xchg or test mov xchg out add inc in inc lods pop leave or repz push jnp sub shrl xchg popa inc sbb (bad) pop jecxz xchg xchg (bad) xchg js dec loop sub fs xchg xchg and and or push push imul rorb sbb cmp mov fisubrl mov jne push dec iret pushf xchg mov push and pop mov and sub add ja das push aad mov call sub inc mov sub add mov cmp sub ret pop xchg jg das aam out jp cmp out popf push xchg inc (bad) mov inc mov mov das push sbb mov lret xchg dec add or lret in clc add xchg mov out jg dec ret ja xor jecxz dec adc call cli leave xchg ss int3 nop mov shll pop push int ret ljmp mov sub test jne jmp mov inc movsb and les add xor cld ss jmp negl xor adc (bad) out mov in adc ret scas fnstsw push inc push call sub sbb popf (bad) mov ret (bad) jo adc out mov insb jne icebp pop mov xor jne notl stc jg dec pusha cmc cmp test and data16 xchg dec pop add jne mov sub dec out inc or rcrl out sub jae cmp sub sub dec (bad) mov adc andb out push fildl xchg hlt popf test xchg (bad) in push xor out into imul sbb and movsl adc pusha add jg jne into lret loop sbb fistpl es addr16 rep sub out imul mov cmpsl popa pop and fnop sub fld or jmp (bad) mov push xchg mov outsl cmp dec and mov jl (bad) scas je test das rcl or fnsave (bad) push js dec pop sub mov push lock jnp jbe ret aad sub mov pop sub push adc and dec sub inc pop sub fsts inc out pop jno push jmp test cmp inc jmp mov or not out aad je pop jecxz mov push adc icebp adc and and adc popf hlt xchg pop idivl sti sub jecxz push xchg cmp xchg das adc nop jle and xor pop lret mov cmp bound and fstps push push xor pushf mov mov pop sarb rorl xchg sti mov pushl push test mov adc cltd (bad) js dec jno and cmp in add adc pushf pusha adc lods jp ret adcl into pop cwtl cmp leave lahf pop out lret push call subl adc mov xor jecxz adc fistl out xor xor mov (bad) mov mov rolb push ja pusha mov in push test sti loop xchg in and repz movsb call mov lret lret push data16 xchg std adc daa or jne pusha pop ret repnz notl mov xor jmp xor and fidivrl adc mov cmp sti scas int cmp push dec mov dec lret icebp push inc jmp fdivs push ret lods dec xlat mov call pop sub and xchg in test daa xlat lods mov flds adc clc sahf push inc and scas xor sbb out aad mov xor sub lods addb flds faddp push mov dec jmp jne ret (bad) push lcall repz jb repz xchg stos xor popf dec (bad) jmp xor pop sbb popf shll jmp xchg call mov into and (bad) (bad) sarl sub or aad push stos or add push dec jne neg loop pop icebp dec inc adc mov lds daa (bad) sub imul mov notb loope xor lret dec jae pop out xchg jecxz sub aas mov jg in test and adc jne lahf xor cmp icebp jns adc add lret imul add and pushaw dec mov (bad) xor (bad) ljmp outsl pop stos sub test enter and es decb mov sbb sbb ret push ret adc (bad) adc mov das jmp xchg pop mov xchg (bad) (bad) es and and sub mov pop or mov sbb ljmp test in scas push dec adc clc cmp pop jnp mov mov fimul movsl adc mov mov xorb loopne mov cmp fwait add test xchg push push lods mov mov repnz push mov je jp xor jbe push sbb ret sbb fbld movsb cwtl inc add push mov div pop sbb popa or (bad) jnp movsl (bad) cli push mov mov sub test (bad) pusha sti out mov mov sbb dec fidiv pop js pushf sub icebp loopne lea jmp sub xor adc (bad) mov js xor rol and addr16 (bad) mov dec sub push lods adc stc cmpsl xchg cli mov add shll sbb iret mov (bad) mov leave mov adc xchg iret push adc (bad) popa out jmp adc lahf repz pop loopne and into fsubrl enter add shrb mov xchg mov jnp in xor mov mov jp clc push lods add scas and and out les or mov call stos sub decl mov mov movsl or fstl ja sbb iret xlat int3 gs rep lret int3 push or idiv and xchg cmc pushf rorl mov jmp jne lea cld dec mov std mov mov jns jmp push lret add ljmp pop mov mov fwait cmpsl rcll sbb push cmp dec and jmp aad xchg fbstp das pop push call pop popa movsl inc movsl cltd enter rcl (bad) dec and test out daa repnz sbb repz mov jne push xchg xlat mov xor insb sbb and (bad) lret jmp pop lods (bad) or mov xchg (bad) jg js or movsl pop mov jae and ds fsubp int3 aad lret and inc sahf mov aaa xor aad je icebp cmp jne jbe push pop sub xchg mov xchg test adc or push in movsb movsl dec cmp rcr jnp dec jg mov sub dec sub or lret cli sub push xchg test movb adc (bad) dec pop jmp push pop lret push out mov add outsb das sub iret test (bad) pushf push (bad) mov cmp mov das and pop xchg sub imul sarb adc inc repnz xchg cltd push ret dec lret mov mov jns dec rolb aam dec lahf pop mov add stos out nop fisttpl icebp push fdivl jmp lcall xor lods and xor mov xchg mov adc fld les push scas out dec and ret and adc test xor jecxz xchg cs mov sub xor imul cmp lods sbb (bad) dec or fwait jae push in xor int addr16 xor fadd jo add or or and fsin xchg (bad) cmpsb arpl into sbb mov out mov int3 dec sub mov leave jp aaa incb adc mov inc add add inc hlt mov lret pop mov adc add lds (bad) stos mov js mov lods addr16 lods xchg push pop sbb xor cmp jb sbbb xor xchg scas and mov lock outsl push mov cld scas adc lret mov stos sbb aam repz lds leave lds sbb jmp shll inc push jg and cmp das pop mov pop mov aad out ret or xchg lret push jns xchg leave and outsl in cli sub popa dec frstor icebp es (bad) (bad) adc jmp lods dec lods dec pop mov dec cld sub loope sub cmp jno mov pushl jg mov push inc cmp xor rolb mov imul mov (bad) dec and xor sub fbld pop fs xlat mov and add adc je and (bad) ja adc sub mov test mov ljmp xor ljmp lret dec jmp sarl in xor out pop aas insl jb mov sub xor rcl cmp and cmpsb lea aad xor pop ret out push jl pop stos mov mov jle push lret dec jmp lea xor outsl add jno xchg rcll repnz jmp xor call or mov (bad) dec mov sub add and sub int cmp movsl imul dec pop enter add (bad) push cltd mov ficoml inc sub (bad) mov (bad) cmpsl pop jne negl cmp shlb mov cmp out stos fnsave add popf inc inc mov xchg mov das xchg hlt (bad) cmpsl jp xchg in xchg push xchg scas and xchg cmc push sub or aas dec cmp cmp mov adc push add inc or adc loopne push call pop dec push aaa mov sbb pop pop in push sbb test gs sub or inc inc (bad) leave imul lret idiv loop xchg clc clc mov idivl call rorl xchg adc enter inc mov inc aas repz sub push dec ret ljmp add or gs ljmp xchg inc das inc mov or push push das std xchg xchg and ljmp jl out pop (bad) imul jle les stos and stos aas xor add add pop push fcmovbe xchg (bad) mov add test xor cwtl cmp mov cwtl sub aam dec sub flds scas cmpsl pushl fs pop das dec not xchg dec decl mov xchg int das push mov pop cmp pop dec and mov je mov dec out xor and jg mov dec jecxz and pop int outsb sbb dec pop mov push cld mov divl test add and mov cmp sub fst sarl or jb dec xlat mov add scas xor sub and mov cmpsl cmp cmp push and mov (bad) mov (bad) add into add bound push xlat data16 add pop inc mov dec adc and dec mov and enter and sub mov xor adc mov or lret cmp enter out test mov sub ds mov loop pop pusha pop or add adc sub lret jae adc mov xor mov pop gs sub sbb ret mov mov test dec notl inc inc push sub out xchg in and dec rorl scas dec scas popf push jp je popf push push push sub sbbb lret in aas mov cmp fistpl cltd mov loop xchg icebp mov fdivr into lahf shlb pop dec mov decb cli sbb push and (bad) stos ret stos imul lea xchg lods dec movsb aam mov or test push mov jns ret mov icebp mov and cli lret adc ljmp mov pop mov cld cwtl push out sbb adc clc out xlat sbb pop mov ror jbe pop inc mov aam test mov dec mov add mov (bad) cmc and and lcall (bad) jmp mov jo repz mulb outsb or mov cmp lret popa dec add mov push leave push (bad) je insb mov ret test inc out sub imul push push mov sub out ret movsb stc dec and ljmp ret jg jne jle test push mov rcll and outsb sub sar repnz mov sub popf push rclw in xchg hlt adc pop pop xchg cmp adc mov jp int ds lret out mov jae lods mov jnp dec push lret and add (bad) rol or call imul (bad) dec lret xor sub ret push ret lock ret jo nop fstps or mov push sub and sub push lret daa out outsb or out mov dec xor enter ret cli shrl out xchg add or push sti sub jg jg xor sub xchg sbb xchg fdivs dec popl pop dec je cltd les test stos mov or xor ljmp ret xchg pop mov stos jecxz scas sub ret pop jg clc mov dec jmp jno dec (bad) add imul data16 sub xchg hlt pop push ja xchg sahf into (bad) xor fbstp aas movsb cli scas in sub call sarb lods push loopne sub (bad) xchg (bad) adc sub add imulb clc xor inc fist insb fs or das sub lods call lods mov mov (bad) sti callw mov mov dec push insl popf xchg dec aaa mov xor out test lods scas hlt lods cwtl add imul sub pushf cmpsb xchg inc pop fucom lods and pop into and sub pushl xor xchg (bad) push jecxz mov adc pop andb pop xchg push pop lret jecxz cmp js int3 pop jge stos clc mov (bad) cli mov std dec repz popf lcall and in es xor add pop cli sbb jmp inc push pop pop mov iret dec in jb (bad) mov xor add out daa sub sbb sub test cmp mov mov sub sub and add add pop inc push in push fstl sbb jne call fcomps out idiv pop imul imul (bad) out lea int3 mov (bad) les leave and fdivrs xor icebp (bad) push push (bad) mov pop cmp hlt (bad) or and test shrl mov sub and jno lods add mov mov pop ljmp mov test loopne push cld mov jne cmp mov lret fnstcw push outsb jne,pt aad fcmovnb ljmp out inc je shr imul xchg imul sub mov dec xlat (bad) ja add ljmp mov xlat pushf enter push adc std xor sub jo (bad) mov mov inc mov dec imulb sub into xchg jle push jg add jnp mov idivl in (bad) mov sub pop push cld mov sub out inc and loop push out jle mov adc cmp lcall sub scas jbe pop push jne xchg iret out lods pop mov hlt (bad) mulb pushf movsl lcall pop fmulp dec pop or subl push xlat adc sub lahf in cmp push sub cmp lock adcb sbb test clc mov pusha adc push and xchg loopne (bad) fnstsw xor sub xor repz frstor aas call loope and mov xchg or jecxz imul adc and xchg in jecxz test test xor xchg mov dec das das ret push icebp xchg (bad) mov mov dec pop lods int cmp mov jo lret pop mov mov jle and mov mov push test jo scas arpl pop xor sub inc notb (bad) xor mov jle popa xchg je mov in fistp mov dec lret push jae sub jno jb pop jg push sarb mov (bad) or pop sti sbb repz sahf in (bad) sub pop mov sbb popf pop call jmp das cmc mov pop jle lds lods sti test test iret neg (bad) jmp ds or (bad) cmp cmp repnz adc xchg stc mov or push out sub pop mov flds ret div and mov gs cli mov mov roll lret sub mov dec jbe gs loope popa in icebp cli jle ret pushf ret push mov fisub aaa mov sub mov in ss ficomp and sub mov daa lcall repnz sti arpl sub leave pop sar or and mov inc mulb sbb sbb push jg xor jmp les sub pop out pop mov shrb mov mov dec (bad) (bad) xor clc jns popf cltd arpl aas cwtl out loop in scas pop cmp cmp mov call xchg sub jmp fstpt push (bad) cltd rcrb push sbb out sub (bad) sub fimul pop cld std mov roll rorb imul bound subb push pop rorb movsb jno mov jecxz sub in mov fildl fbstp or test mov push add push and sbb jb sub push adc ret pop xchg push mov inc daa add push sub repnz mov and aam xor jmp xchg je push es stc (bad) mov aad ss adc lea add xor cs sub (bad) (bad) fild push ja out dec or lahf mov pushf sbb cmp xchg cmpsl ja dec and out push dec dec mov into xchg test ret push xor into mov mov jmp xor repnz sub test (bad) jne sti je fnop cmp jg imul xorl imul xor int3 lods add cmp loop (bad) lcall xchg ret loop rcrb sub in and lock aad or test jae sbb jmp stc fxch pop sbb ret xchg lret xchg sbb in and lret mov push mov cmp and cmp adc mov or pushf xchg (bad) sub aam (bad) idivb das stos lret xchg pop pop dec fdivr (bad) mov out inc ret imul lret xchg pop pusha cmpsb xor je xchg xchg bound cmp or popf push sub xchg lret call sub push and ffreep xor ja out das xchg repz loop (bad) lods cwtl pop mov pop sub mov push xchg aas pop add mov sub push (bad) or push mov (bad) aas lret pop push stc and cwtl pop adc rorb ljmp into movsb stos clc out movsl mov enter aad sbb mov lret ljmp dec imul loop int3 xor popf mov xchg push mov fbstp xlat fidivr and xchg sbbb jne imul xor xor mov (bad) xchg das add repz popa fsubrs clc sub lcall add shll mov dec cmpsb test or add mov popf xchg xor adc int mov sub inc (bad) xchg mov or xor das scas sub (bad) inc sub push sarb lret mov mov push jo loope in test aam cld loop push adc movzbl pop push cld mov inc cmp sub xchg jle lret std xor jmp lret bound xor into jecxz cwtl loope xchg scas imul imull and add les repz and and xor sub sbb push sub mov dec in xlat sub inc or pop cmpsl test divl dec sub sbb call xchg cmp repz aam cmp and out insb sub mov sti rol lret and pop mov (bad) stos sub leave lock sysexit jno adc pop and mov sub ljmp cmpsl mov jnp xor sbb aas mov sub inc or int and add popf push push xchg test jg setge xor push repnz xlat sarl scas mov sbb sub push sbb int3 lcall icebp cwtl (bad) pushf in in pop mov pop fs mov xchg ja mov loop xlat in jmp ljmp xor fwait pop pop jbe hlt add inc jae xor cmc mov add fs mov jge fldenv sub dec xchg jp xchg add outsl rcrb mov fadds in dec dec fldl and sub xchg jl pop inc fcoml lcall into insl inc pop call (bad) loop xchg mov hlt iret or mov jbe and mov les adc std pop dec out mov dec and cwtl fildll or dec fdivrp fdivrs push out and inc andl adc xchg adc inc add imul xor stos popa or pop mov sbb ljmp mov lods jo and rorl cmp mov jno sub cs mov push push hlt dec jnp or mov out or (bad) push (bad) fidivl dec or pop rclb mov lock mov adc inc mov (bad) mov sbb adc dec add dec cmp leave movl mov out (bad) and movb shl jp mov (bad) mov or mov pushf cmpsb pop xchg dec pop (bad) push mov xchg dec jecxz lret std add xchg or adc bound shll fucomip jecxz (bad) push cmp loope sbb imul cmc xor movl test xchg repnz (bad) cmp and (bad) pop div js pop mov mov sub mov push stc (bad) gs jmp loop xor inc insb mov scas lds pop ret mov mov pusha ds test push repnz jecxz xor lds ret das stos clc sbb pop vucomisd and cld dec imul jg sti mov ljmp (bad) scas mov pop mov aas jmp int3 mov pop adc popa xor into push cmpsl shll iret test add rolb into mov sub call nop sbb add or das or leave pop icebp jno loop xchg and and mov stos mov iret ljmp inc adc out xchg jg rcl mov cmpsb (bad) dec inc dec sub jb loope insb mov iret lods mov mov jmp add scas xor test dec push out test sti ja push inc or dec imul andb es mov mov pop add out mov nop fucom add mov adc push loope jl mov pop xor test (bad) lret idivl dec divb sub fidiv or aaa pop das ror mov push push daa (bad) fbstp aas test shl aam mov shll mov and imul rcll xchg roll (bad) sub xchg (bad) jl imul jge sub xchg dec icebp scas lret aas dec mov test movsl mov (bad) add loopne icebp lahf (bad) ljmp in inc push push adc xchg stos mov pop jecxz xchg test jp sbb pop js adc scas popf aaa xor inc aaa mov sbb push pop jmp or adc (bad) xor dec jmp mov out fistp faddp cs rorb nop in xchg gs xchg inc adc ret stos mov cli adc or xchg leave mov adc push cli jb or ljmp (bad) repnz xlat into imul and cli sub or nop adc rcrl leave in sub mov das sbb jnp es ficom adc test popf int push jno inc sarb cmp adc lahf push fwait dec adc ljmp sbb out xor stc cmp std or xor aam ljmp mov in push inc mov cmp add pop mov (bad) sbb xor xlat ret mov (bad) xchg jmp ds mov push pushf fs push addl pop daa insb xor into cmp aad and lods pushf mov cmovb sbb mov pop jne mov adc xlat out popa adc (bad) cmp into es icebp out mov stc (bad) in adc xor and and xor stos hlt clc mov pop xor inc inc xchg aas cltd imull fldz popa (bad) fistpll sti jo out sbb frstor xor or out inc mov mov adc xor xor popa or cmpb push mov ret out lods pop js sub icebp out popf sub pop or cmpb inc sub push pop sbb xor pop test mov icebp ret xor adc mov pushf ljmp sti popf adc or cli add inc hlt cld fcoms push stc call mov dec jbe push sbb fsubs jle int fdivrs (bad) (bad) dec aam mov idivb cltd push and dec sbb pop jmp push mov jmp dec gs fs push dec mov (bad) adc stc les stos imul inc movaps fs pop or xchg inc test add popf out pop fisubrl in or add dec mov das lret and adc adc mov adc sti scas loop xlat movsl out lods add imul xchg jge mov cmp pop hlt xchg repz lret push (bad) pop cmp jmp jno add cmp mov mov inc push sbb ljmp xor pusha lahf neg pop aad sub pop ja out xor xchg pop dec sbb sub xor lret pop out adc stc nop sahf adc std pop ljmp dec int3 repz jl aaa jae popf rcll faddl (bad) icebp sub je stos mov mov (bad) cmp in movb dec pop lret jno lret pushf aaa call mov cmp sarl push or pop xchg sub mov (bad) dec or mov cli sub mov scas cmpsl inc mull shrl jne mov cmpsl sbb mov adc out fstl push add jle inc add and sti int jp cmc mov repz lcall jl adc xchg pusha xchg sarl mov inc inc jb stc cld add sub daa out jl ror cmp sub xor adc movl in out pop or aad mov subb mov scas push ret fwait mov shrb rorb sti and mov fs iret mov dec xlat inc mov (bad) or add pusha pop rcr out dec xor pushf pusha and or into (bad) bound pop ja push leave push jae or (bad) in loop xchg pop xchg mov test mov enter mov jp test mov (bad) repz lahf pop add push inc inc xlat push add jle gs xchg dec lret mov sub lods mov (bad) jle push (bad) xchg cwtl out aad daa leave out into push mov pop mov leave adc xlat mov pop iret loop mov lds inc pop out daa pop xor mov (bad) into jmp xchg scas sub xor mov ret add repnz nop jne mov or fimul sub pop mov lods push movsl scas xor jle adc ret sub data16 lds daa or push fstl or sub cwtl xchg adc das jmp (bad) repz lods adc cmpsl pop inc adc or xchg gs push sarl imul adc sub divl adc adc lret mov or push xor loope and ljmp out or jmp jo fidivr dec bound mov stos notl adc xchg (bad) fs mov int3 (bad) out mov dec sbb cld (bad) loope sbb mov and and imul jge add pop inc adc lods aaa movsl cld jbe out out mov repnz (bad) mov pop lret lret pop lcall add repz nop cmp cmp push adc repnz aaa ja stc stos (bad) jbe jnp mov pop mov jecxz das and sbb mov idiv pop sub jno js mov mov inc inc adc and fstps xor pop shr mov mov (bad) mov imul daa jno cmpsl cli cli popf int3 xchg xchg notb imul (bad) out (bad) ret je mov dec xlat bound xor out add fild mov (bad) subb fsubrl sbb pop xor xchg out xchg and rep pop or and lahf iret or (bad) movsb rcll adc mov cmc dec jno out fnstcw mov dec push testb (bad) mov sub and add aam jmp sti lret out lahf lods fild and into pop add pop adc push scas adc mov push push mov imul pop icebp outsl mov notl or push adc dec add cmpsb shrl or ds ss out or mov lcall and jmp pusha sub jae or add jmp pop in stos push int3 popf insl rcll mov cwtl xchg push push fstpl add sub jle xchg and enter stc (bad) xchg ss xor xchg mov sahf stos insl jge jmp mov add shrb pushf inc push rcll stc and (bad) and sub xor lds and xchg adc jmp cmp outsb cmp sub mov jnp lods shr xchg or insl adc dec jp lcall into lahf (bad) popf push lret dec push pop inc xchg daa jmp mov dec sub adc std inc sahf and aad and pop push push push or cs add or leave fstl cwtl push mov add add (bad) movsb idivl mov dec movsl sti xchg test mov dec hlt pop push mov sub cmpsl ja insb sub mov fstpt in test push dec jl loope xor and sub (bad) adc aad cld das mov imul inc sub pop test mov push inc (bad) mov (bad) jnp xchg mov push mov mov lret mov inc in xchg rorl and and jecxz push mov mov mov sub jo rclb jmp mov mov or in iret sbb jnp gs andl mov into es mov mov or mov das or (bad) xlat daa sub jg loop or jae js cmp push movl sahf xchg sbb sbb popf xchg ret test sub xor xlat (bad) mov lret adc add gs test jb rorb add and xor out xchg std xchg xchg mov imul xchg push adc mov xchg (bad) mov add imul cmpsb jns and cmp cld xchg scas decb push sub das test jg clc lret andl pop (bad) and fsubrs xchg jle push pop mov sub adc cmp scas pusha add jne and pop add jbe and call out add pushf inc and test push fisttpl sub das fnstcw dec and xchg sti lret and xchg sti add and jo repz sub std (bad) nop sub add jecxz dec (bad) mov std add sbb xor out cmp mov xor xor in xchg and dec sub stc lods mov mov mov aad adc jmp js dec idivb push stos sub sub push jne sub cmc inc push cmp add xchg xor mov cs push mov outsb sub or xor aaa and std cmpsb imul mov iret sub jno pop sbb xor cli mov js dec pop fld gs jp cmp (bad) scas gs jno lock xchg cli push mov in es pop idiv lret sti pushf jl dec add lret dec and cmp inc subb or sub xchg mov dec push stos fincstp insb leave leave push decb repnz pop dec jg nop fwait (bad) push loope sti (bad) out adc out pop sti xor mov rol xchg mov inc and aas in push cmpsl vcvttss2si rcll mov sub loopne (bad) xor jl push dec dec xchg test xor mov xor cmp xchg pop mov daa into hlt in jb push adc mov add roll notl and das iret pop cmp dec adc cltd std dec or ja pop sub mov fs les lcall cmp ret cmc mov or and xor lahf xor stc jp adc ljmp orl dec fisubl jge xchg dec test fcmovb dec ljmp clc sub mov out pop sbb sub or das pop sbb vmovaps out xor ss adc add ljmp rorl roll add push pushf stc mov mov (bad) lods pop mov add (bad) lret cltd dec jecxz repz je push push cmc scas gs mov fist dec bound (bad) xor (bad) loope cli jne stc jge sub decb cmp inc test cltd jae mov xchg ret cmp ret fdivs jns xchg xor xor or leave xor add mov notl xchg lret int3 adc mov jecxz sbb cli sub xor in out loop rcl repnz stc imul (bad) fidiv mov nopl clc orl xor mov loop jbe jb mov and rdtsc (bad) je decb dec fisubr aaa inc adc sbb xchg addr16 in out xor scas cmpsb mov push jns dec push jmp lods ss mov pop adc and add mov pushf xor push dec out (bad) loopne xchg (bad) orb mov (bad) jecxz xor adc popa cmpsl out pop in inc cmp (bad) xor ljmp mov lahf pop sti (bad) jmp mov push cli or (bad) ret out mov dec sbb xchg call adc inc repnz mov or scas out sub out dec jmp inc outsb sub lea pop sbb scas test lret xlat or pop pop jp cmp repz lods sahf mov test (bad) gs and dec push repnz xchg in cwtl stos or xor imul out (bad) adc sti fsts imulb and cmp cmp icebp or sub ljmp pop and pop or fsubrl pop sbb push inc jp decb push adc (bad) mov vmovaps mov out push push sub xor out mov inc sub (bad) sti (bad) dec dec xor out add xchg lret inc xchg ret sub mull out lds ret lret sbb mov fdivrs fistl ret sahf daa subl sub sub add add cwtl adc pop repz cs or add xor into sbb cli dec nop add test out xchg adc sub ficom xchg jb ljmp rcll cmp dec xor push cli ja andl stc or lret or jmp rcr cmp dec jb test pop inc push pop add mov ss aam (bad) lcall fstl inc movzbl sub dec jns lcall fcom dec mov sub inc mov jmp (bad) push and sbb jbe xchg add mov into or or jecxz mov xor adc leave and mov and xlat sahf into bound sbb sbb mov scas daa jns adc add scas mov sub inc adc adc pop arpl sbb dec mov loopne movsl push add popa dec or fisttp fmuls push lds xlat mov mov lea xor pushf jp out fldt adc pushl mov add rorb pushf test push jns pop cmpsl jo dec icebp test mov xorb ror pop cmp mov pop rcll in pop push or or fsubrs mov sbb pop pop and hlt sub or divb push ss loopne sub loopne xorl mov sbb or mov dec fdivs fstps jbe out xchg xchg (bad) and (bad) add mov dec mov xchg cli fnstcw sub mov sub icebp and jl and cld xor mov add out and xor add jg cmpsl sub push sbb popf inc xchg loopne sti mov lahf push mov push loope jns mov fs cmc add mov mov sub push daa cmp inc add lods imul adc and sbb or push mov dec mov adc pop pushf out lahf jp push jo test dec dec and or ffreep or out mov push xchg push cmp adc das mov or push adc adc mov mov nop mov lds loop xchg out arpl (bad) out dec icebp pushf sbb ret xor pop fnstenv push mov adc and leave adc xor mov mov add fildll sbb lods scas fldenv and cld add xor or mov testb jbe loop jo stos add and jl call lret cli fs enter mov xchg jp les fnstsw mov test loop jne imul adc or insb dec add pop dec pop into pop adc pop adc inc (bad) add sub add adc (bad) xor cmp sbb daa rolb repnz add mov dec sarb adc sub cmc and mov icebp int3 dec (bad) mov lods je and insb jmp xchg gs inc dec test push add jne mov negl dec pushf decb and and or jns shrb jnp xor mov push xor and lock add adc in xlat rorb push pop pop idivl and fcomp mov icebp mov mov dec mov outsl sub sub xchg stos jecxz dec push in popa outsb and cmpsb pushf adc inc imul sahf xchg and jmp fisub dec les jne jo add faddp mov adc xor test pop add lret mov out das mov outsb mov out fldt sub repz lods ja ja mov (bad) push bound xor sarl ret fimull int fimul loop mov repz add sahf das or mov fsts ret rcl mov leave inc fwait dec and add xorl jp mov and into xchg nop cmp addb ja loope gs test stos mov jno imul jp xlat nop (bad) pop mov stos and stos (bad) lods sub push lods dec dec ret mov stc pop imul fldl adc mov mov lea outsb (bad) mov (bad) je mov fwait xchg dec dec fistpll in dec test pop dec and or add cmp fidivr sti lahf rol sub jnp shrl mov jbe sub test xor les fisubl out push sub dec scas test mov inc mov (bad) mov sbb daa xor lcall outsb push mov out xor out cld cli mov jecxz dec xchg mov or imul xchg scas xor add lret stc mov lock movsl int3 hlt lahf push in mov mov cli pop lods lret or sbb in xor adc sub xor add sub jle clc and idivl inc cmp mov sub mov cmp idivl mov (bad) adc ljmp cld inc addr16 lahf sbb pop out xor and xchg mov das pop sub add sub xlat orl aas mov or pop cmp repnz jle mov divl or sub mov (bad) testb and repz ret sub xor sub add mov mov push mov mov fldcw xlat int3 (bad) pop sti or lcall lock dec xchg fs cmp pop sbb cs gs fcoms (bad) xor or cld xor mov jmp sbb mov cltd pop xor mov lods adc insb ja dec cmpb jge outsl mov lea leave jmp jno nop and loop leave out fwait lret cwtl lods mov nop stos and inc jle xor hlt clc lods sbb inc or (bad) and (bad) xlat fcoml divl inc pop pop push and stos bound mov imul repz leave negl xchg pop add mov jae popf jne jle loope mov xor mov add pushf les sbb int inc pop fabs outsl cmpl pop jp sub jg (bad) sbb jmp or or div jo into aas sub xor and push lret arpl add xchg aam or jae das push ds xor test sbb mov xchg push enter scas jle sbb adcb fisttpll xor jmp (bad) jp or jmp pop inc fstpt pusha addr16 push and and lahf xor pop (bad) notb add out dec mov xchg pop fucomi sbb idiv lea xchg adc and lods inc mov push adc push adc lret (bad) pop insb add in mov stc mov test mov or scas sub mov test les adc addr16 ljmp pop idivb mov jmp into fbstp les sub out push jmp mov sti ja (bad) iret fistpl lahf pop xor xor rorb fldcw mov lahf cmp sub fs aaa movsb lret (bad) pop pop jg add adc cmpsl cmp (bad) das and dec insl mov cmp sub aad sub sub shr gs cwtl pop xor or add lods out inc xchg pop es (bad) (bad) (bad) ret lahf stc aas into shrl xor ljmp scas mov daa (bad) negl lock mov xor jecxz xchg jge adc ret or xchg lret repz mov leave add push das mulps leave sub inc dec xchg cld es (bad) xchg lret cmpsl xchg pop xchg pop mov jno fist or cltd adc mov pop xor ljmp shll popa pop cmp into (bad) aam push (bad) (bad) mov add sub jecxz mov andb push cmp xchg cwtl xchg rolb wrmsr leave sub (bad) cltd pusha push mov je inc ret xchg scas xchg int3 pop je mov add (bad) stos xor out mov stos (bad) sti gs daa jne xor add das test mov push mov call dec iret jnp jle push mov (bad) aas clc sbb jno hlt xor pop adc sub inc fcoml sti xchg jg cmp jle fnstenv jge pusha pop mov mov sbb mov push cli lret sbb sub push repz adc pop mulps ljmp inc mov jp ja inc outsl fstps movsb roll shrl stc popf push jbe cli aaa test test cmp add push mov scas decb mov mov pop in pop pop pushl sarb nop push sbb sub pop nop lds decl pop shr and mov pop je pop pop sub mov int3 loopne push mov lahf adc push mov pop test pop push fs cwtl ret push ret push sahf lds pop or jecxz dec cmp fistl pop add fstl (bad) das and movl daa or xor xor or inc push mov push stos mov xor repnz cs notb add inc enter test leave pop aam imul add pop xor mov dec jmp adc enter jnp fildll mov ret (bad) lcall pop leave lret pop ja and jae or xor pop add mov sub push xor sub jmp mov push hlt and mov xchg cmp xor (bad) push stos popf mov xchg sub mov imul popa gs sbb rorb and and xor (bad) fsts adc jmp mov stos jecxz in or fidiv icebp loop negb adc out dec (bad) scas fs xchg cwtl out pop mov adc adc outsb pop sub shr sbb ds xor das mov bound sub jns popl stc test mov pop mov and (bad) movsl shrl (bad) fnstenv lods dec add ss mov cmp out fs out xchg xlat mov pop clc jg fcomps mov push xchg mov jae sub in leave div into add pop (bad) and inc or push push stos dec imul pusha leave ljmp into pop in and mov lock insb cmpsl mov test jp into (bad) pop sub lcall pop or xlat xchg push xchg rcr dec ss adc or test roll aad xor jne xchg push aam push sub cmpb lret sub dec roll inc xchg cli pushl fwait leave das sti sub xchg adc loopne int cmp jbe pop in and push xor and lcall sub iret lahf (bad) insb pop shrl xchg jg aas push sbb cmpsl and rorb mov sub decl dec pop sub loop push pop pop sub jne,pt movsb cmp push add and xchg adc xchg (bad) cmpsl sub adc xchg pop les xchg mov jp adc mov stos sub sub xchg jge sbb mov pop fwait jg lock cld xlat mov mov push iret push jno fst mov sti popa cmpsl rorl sub lods sub test push push test int3 das negl fistl add (bad) cmpsb push and ret aaa pop int3 sti js dec out sub mov adc lret sarb push or adc push cmpsl xlat insl push xchg out cmpsb lret ret xlat adc add (bad) repnz lret mov cltd add lret std push push mov and insb daa loope gs mov std push hlt sarl pop add xor and push arpl loopne in movsb out xor xchg (bad) mov xchg aad sbbl je lods in xchg inc push ss sahf add cltd imul mov pop stc dec lahf xor sbb aaa mov sub xchg cmc push inc mov fucom dec or bound ja mov sbb shrl movb jmp out mov xor sub xlat mov popf popf sub or pop jae (bad) jo pop pop mov cmc pop scas loop das and (bad) rcrl out dec sub pusha dec cld imul jo pop cmp cmpsb stc and sub cmpsl push es lea and pop mov outsl pushl sub leave dec inc sub test or test adc sub sub in imull add ja (bad) sbb jg loope (bad) sarb mov lret dec xchg std sbb call insl lret push xchg mov xor out (bad) lods cmp pushf or out mov (bad) xchg cmp jle push mov adc scas cmp sub lret cmp xchg and mov dec xor adc xor mov push (bad) and stc pop lea sub jp lds not jnp dec xchg in dec cli icebp pushf icebp jmp imul push dec jo dec sbb shrb inc pushw and lahf jl sub jo xlat xchg adc jae xchg or pop or into stc nop add sbb idivb sbb inc jae jo cwtl xor lahf cmp inc or mov mov cli push adc fdivs jp out cmp and cs or sti pushf push or popf addr16 pushf and mov add stos sub adc push dec repnz xor scas test dec out push and sarl lods gs jbe push xor popf sti lret (bad) sbb xchg sbb lock pop out repz ficom sar inc loopne push stc scas dec clc repz xor push jmp nop push mov cmp and lret push and add xchg sti sub sti into mov fsts jns cmpsl hlt xchg es (bad) pop iret gs cld int popf xor clc mov or cli add (bad) cmp ret or fimull or sub jbe ret scas dec mov jg stc insl ss adc or dec pushf add fisubr mov ficompl cmp sbb or leave jmp mov leave add dec ret std xor xor cmp adc lods movsl inc adc es or in (bad) popf insb out popa cwtl or xchg inc xchg xchg rep jl mov sub sub dec fucom nop (bad) cli gs mov daa sti jp dec adc mov lahf in add rcrb lds mov mov mov mov dec push shlb sub sbb in mov sub adc and stos out mov mov push subl jmp mov xchg in cld fs jmp fisubl cld xor sub test sar or fmull lahf int3 mov sahf mov or cld repnz sbb cli aaa jnp ror jne push fidivl pop fdivrl shrw xor sub pusha xchg xor jmp mov inc and or mov loop lds cmp test mov jno mov cwtl icebp loope and mov pop add scas xchg adc call imul add or xor jbe lods xor xchg cmc mov cld std leave test nop mov fimul push pop daa mov pop mov in adc std and outsl mov sub cmpsl out push mov (bad) enter out inc cli movsl imul (bad) insb pop daa mov testl sub xor pop and jmp repnz mov and cmp out add jg sub add daa xor push cs mov adc negl (bad) push jp aas cmp jo rcrl ret out xor sub (bad) repnz imul and movsb test sar das (bad) loop (bad) icebp dec dec fdivl and bound ja dec jmp cltd repnz scas cmpsb xor push dec xlat test fmull sbb mov jp xor and lret das je ret cld add pop dec or pop mov add leave fbld subl gs jns dec inc pop mov sub push pop insb out pop out lret push pop loope or cli xchg push xor dec lods push pop loop xchg fyl2xp1 cmp ljmp and mov mov fs inc rcrl les stos gs sub movsl in or cmc outsb and push and dec jb add ret stos call adc fild mov cmp sti aaa jmp cwtl mov std cmp jne (bad) (bad) icebp and pop dec push in adc inc leave push call in adc cmpsl jle imul adc repnz ja imul incl lahf pop fsubrs cmp inc jmp fbstp dec or add and movsl dec (bad) mov xlat pop iret lret mov fmuls addr16 xor (bad) (bad) push inc js push es cmp dec sub leave pop mov adc fdivrp and pop and sub and subl fucomp ja repnz aas jge icebp in sub gs or and pop imulb jno inc add jnp xchg idivl jb fcomp call int3 into lret pop jns scas pushl leave xlat and xor xor jge add insb mov mov clc dec idivl mov and and movsl and or or inc imul or push insb arpl mov xor popa movsl out repz (bad) push push jno mov mov and (bad) das lret in cmpsb dec push xor xchg data16 pusha out sub lret or cmp ds ficom mov movsb dec sub pop xor pop (bad) mov xor fwait xor icebp xchg enter sub and and mov xchg mov push lea jge xchg xchg lcall cmp mov mov data16 mov std bound out inc xchg or mov mov push mulb stc ret (bad) pushf or jo pop and ljmp loop mov ficomp push fild mov nop daa mov xchg jo cmpsl daa mov mov repz adc push icebp cmp jb sub iret mov push mov pop xchg out loop push sub push push push jns xor inc add push add call sub sbb sub xor inc aaa mov pop sbb xchg add jecxz ds add fst mov shl fdivl pop test bound (bad) or outsl das push dec mov push push push (bad) (bad) add rep pop neg pusha xor pop icebp dec js in or les icebp push push xor push add cld jge arpl in dec call (bad) inc xor pop lock mov imul sub neg add repnz xlat and add add jmp (bad) cmc adc cli sub stc sahf add fsubrp xorb mov fcomps mull loopne push dec je js add pop fucom dec mov aad mov push jecxz cld jecxz or dec outsb and pop or push push add push cli cmpsl xchg (bad) and or pop fnstsw negl es inc inc push mov enter pop sub ja sub sub jno ret aad mov push sbb aam pop lods sbb imul cmpsl sub sub ret pop and push imul push outsb adc mov mov push jmp fistpll fdiv pop lret xchg inc inc popa add bound popf lcall out outsl jl pop std rclb mov push daa or push inc incl cmpsl loopne scas data16 sub jbe,pt fiadd in add insl pop xchg mov test test sbb or xchg cltd push sti test add pushf push inc sub sbb and adcl push sub cwtl push push mov int3 imul or pop in mov out sub jge pop out jns and (bad) jne int3 push pop mov sarl xchg stos imull and loopne mov mov and and sub dec fchs dec jmp loop adc movups mov cmp jno cli xor into xchg jb push pop sub pop mov andb pushf popf adc jecxz add cmpsb loopne and dec sar jae xor lret outsl or fstpt sub inc push adc mov arpl pop xchg adc mov and outsb daa or pop imul inc imul adc mov (bad) cmp xor mov rol jge rcl pop sub jns arpl or test scas (bad) stc ret mov sub dec negl enter imul or test pop test ljmp ret mov push ret not loope out and sub sub lcall fdivrs and stos inc (bad) sub fs dec and push lods das (bad) mov (bad) or sub cld adc add jns xchg lret mov cmpl test cli popf inc mov xor pop lock das cmp xchg mov dec mov mov dec mov push cli sub mull jmp out jmp push jle and sub mov adc add dec inc pop push fsts inc sub or pop cmp lret mov pusha mov dec pop mov and loope jb iret out xlat pop mov lret (bad) mov aas test gs sub sub xor mov daa fdiv fidivrl pop xchg rorb mov mov test xor mov xchg and lret xchg idivl sbb lret in clc mov jae idiv (bad) ds xchg test xchg out mov jle ret loop jl push mov or das ret sub jb insb and lahf jle jmp into shrl adc xor xchg shrl add mov call idivb pop pop sub andl adc shr xchg and cmp xor xor jnp and mov dec mov cmp add xor mov adc mov popf xlat xor pop fdivrl rclb jne xchg ret mov xor jmp mov mov fildl fldt cmp adc xor add push sbb das call out test mov cmp into jne cld xor mov adc push sub add or cli mov cmpsb or xlat mov xor mov sub decl adc (bad) xlat jmp pushf js dec out and aad in push add (bad) pop es and and dec in dec mov mov or shlb das add nop adc pop xchg sbb add test and mov dec pop push lods push lret mov mov popf negl subb out repz xchg mov orb pop add (bad) (bad) mulb mov adc xchg or xchg fcomps popa lods loopne xor or leave pop inc dec ss in fldenv into jg int3 dec leave mov aad add sbb xchg and out xlat mov ret aad enter jno test das adc sub iret push xchg insl dec loope cmp cld mov stc pop (bad) sahf movsl inc mov (bad) pop pop scas mov (bad) adc mov (bad) cmc fidivr mov mov dec roll lods pushf pop ja ds daa (bad) dec pop orb cltd (bad) cmp fmuls cwtl outsl roll cmp mov jmp out add mov in or jae mov aad rcll dec mov cmp leave into jge cwtl das cmp mov cmp movsb cld imul fdivrs lods loop out pop sub out (bad) or test (bad) cmp stc push scas pop pusha and add pop jl inc xor and hlt lock ffreep repnz inc adc ss lea sbbb xor rorb repz sbb es dec inc rolb or jae mov or ret test in sub clc cltd sub pusha rorl (bad) adc ret xlat push add (bad) js pop xor add (bad) jno mov (bad) add pusha dec jns and add push pop add jae (bad) push out shr adc mov pop dec jle adc xlat mov push faddl push pop pusha lret ljmp clc popf lcall insb sahf cli xor jb dec fidivrl add cli dec push test dec xchg negb push gs xchg scas xchg sbb jnp push add or adcl repz stc pop xor pop push mov push pop mov pop xchg jne loop sub pop out dec jno in add sub je not sub cmp jle sarb arpl sbb dec daa addr16 mov clc or or pop out (bad) aas (bad) add scas or pop push rorb inc fimull ds scas ja adc enter push negl pop xor lahf push lods out cwtl rcll mov push mov nop add inc call out addl or mov int3 jmp add orb sarl and xor pop sub add pop repz ja push push (bad) mov push mov hlt clc mov inc int3 enter jne sbb ret xchg adc xor pop pop cmp xor notl rcll dec mov jg xchg mov mov dec mul (bad) inc push js fwait inc and dec sbbl fcoms ret cmp sbb push popf movb pop pop sub cwtl (bad) aaa or add stc adc or sub push jmp stc jp les cmpsl (bad) or cwtl push fsubrl pop mov dec lods (bad) lret sti push lds pop mov pop div mov jecxz sarl sub sub out notb (bad) in and xor mov push jmp sti sub mov adc xor push fmulp fisubr adc xor jmp test (bad) out lods jb mov not cwtl mov fchs push cmp sub lods mov enter fldenv push mov push push cwtl pop sbbl sti inc sbb inc sbb sub cmp dec jg rcl sub sbb and pop rol xchg push imul jbe push sbb inc push push call mov aam enter jnp and ret lahf lods fstpl add ret mov or pop roll inc cmpsl xlat dec fidivrl fidivr daa ja sbb das fcmovnb or push jns dec (bad) cmp xor mov and out rclb xchg repz and outsb fdivrs push pop inc fs mov jmp and (bad) mov jl dec loope mov into mov lods ljmp sub jg mov loop shl mov dec pop fldt cmpsb push inc adc rolb push pushf add xchg push icebp pop push fldcw (bad) ja pop cmp adc lahf inc pop pop mov mov jmp mov sub mov sub add ret out mov mov mov cmpsl pop cmp gs push into bound or cmc xchg addr16 sub mov xchg sarb dec lods (bad) mov xor cmpsl add fisttp xor iret dec out cmp xlat add (bad) aam push add dec jge js loope aas mov jno inc mov mov sub (bad) cmc jecxz xchg dec and lahf cwtl fdiv and sub aad jmp jmp outsl and pop and pop out mov in daa jmp in mov or fs jg lods arpl pop lock jl xor or leave js movsb lds stos arpl ret icebp mov xor cmovnp mov pop enter xor jno xchg xor iret or sub push jb xchg in xchg mov pop push aas pop pop push rclb or mov xlat and dec aam insb xchg xor mov arpl icebp xchg (bad) ja test ja,pt cwtl and aas sub iret sub mov add mov or push (bad) jns pop push mov and and or test stos sub pop xlat enter in mov push xchg add adc jp icebp rol adc or mov notl mov dec add xor mov addl aas xchg mov inc (bad) dec test (bad) int cmp inc fistpll xchg pop or inc add jmp xchg addr16 dec inc test and cli test stos sub inc jge lret das out addr16 test lock dec ret cmpsl idivb daa inc and iret add leave (bad) sub adc popfw pop xchg call iret inc dec jmp mov mov fstps rorl adc mov dec das mov push pop xchg sar xlat mov (bad) rclb stos or pop fsubrs lcall movsb scas lret into dec adc sub aas call mov pop scas cmp xor mov jg and cmp inc frstor mov pop and add mov hlt repz pushf dec xchg jg outsb xchg ja or fiadd call pop ljmp ret sub xorl pop pushf pop cmp enter mov or and (bad) scas and xor pushl fs adc (bad) xor add xor in inc mov or cmp jg dec sub mov cmp pop in (bad) lock loop daa sbb pushl ja leave and (bad) (bad) push cli pop jg jno movsl push mov mov mov sti bound mov sub movsl jle movsl (bad) jne push sub sets xchg jge xor ds inc pop in lret (bad) mov sti pop adc pusha adc xor stos sub mov ficom data16 pushf test mov jmp jge out dec cli into movsl pop mov adc repz hlt mov add and mov dec mov xor ja mov jmp xor xor fbld fist ljmp lods (bad) repnz fadds xor mov (bad) fcmovnbe mov subb rclb lahf jnp dec icebp xor das repz stos clc sbb ljmp fistpll lods sub jns into cmp lds (bad) or xchg sarb push (bad) adc mov or sub sub lret (bad) mov (bad) dec mov inc jns or cwtl (bad) xor clc mov cmp cmp std mov xchg xor out ds stos xchg mov pop jb jns sub or cmp loop or xchg mov mov int3 (bad) lcall or mov cmp xchg repnz insb push js or cmc pop push push push fdivrp push mov pop add into lret dec loop sub jecxz daa push push inc and or scas fistp dec push mov xlat mov ja das ret stc sub sbb movsl jle bound xor sub inc fcmovne add mov mov pop cmpsl xlat lcall pop imul jo (bad) mov loop movsl stc sub add out mov das (bad) hlt clc pop push out cltd mov and data16 or mov mov and cli (bad) stc inc fdivrp mov jle push jne sub dec sbbl scas popf popf cmp dec pop cmp ds mov dec outsb add mov idivb fucomi lea repz test pushf stos idivb out xor add mov xchg jbe sub sub out sub push sub sahf or push loopne push mov icebp out mov cli fisttpll sbb sub pop out ljmp rcl sub mov (bad) dec out dec mov add mov leave dec sbb jge xchg pop mov push jl xor rcl mov pop mov (bad) or aaa out xchg jbe and out dec xor or mov sub addr16 movsl jg sub sub or lds xchg out pusha bound (bad) mov rolb mov iret scas fdivs add dec xchg (bad) push enter jl,pn add mov ds lret popf push and mov cli adc lret loop subb mov cli pop jae xchg mov aam roll sbb and mul inc out pop mov cli xchg and fldcw sub xor and and (bad) cwtl mov mov cli and sub imul mov test cmp test fildll movsl jp and jg jnp addr16 sub out shrb insl ljmp and sbb sub pop mov insb jns out mov push sub or and cwtl push xchg and leave mov (bad) jp (bad) jge push xchg jno lcall and in mov out xchg jg fdivr test test cmp and or and mov xchg lock lret push or sub sub pop lret mov push cmp loop cmpsl (bad) mov repnz jno xchg (bad) mov adc in jmp mov add adc addr16 popa mov mov cmp mov aas mov push popa add mov out mov push jmp adc sub shrb (bad) mov xor sahf sub add xlat mov mov scas or idivl (bad) fldt pusha push mov gs imul jmp adc sub mov push (bad) lea mov idiv add mov or movl clc add push mov adc dec adc das push xor add pop movsl call pop jl (bad) push (bad) scas sub sar and sub loopne xchg xchg cmc mov loopne jmp (bad) push pop mov xchg sti (bad) add xor mov fdivrs bnd cmpsb repz add and outsl clc pop rolb jne test mov mov std mov aad lcall push xchg ret xor in cmpsl add iret pop mov ret ret test push inc bound divb arpl fist shll and xchg repz ficom fnop mov data16 push (bad) jno shrl (bad) popa push pop test fsubr (bad) je into jle clc sahf in andl (bad) xor xor repnz mov or inc mov int3 popf addr16 inc cmpsl or cmp cmc cli sub lods mov jge add dec xor iret mov jge lea push sub ja lcall rolb add xor dec pop inc and xor and sub sub in (bad) mov pushf in jo xor rolb sub fdivrs sub mov rcrl idivb adc enter xchg lods and pop mov ret flds dec sub sbb jp out fs fistpll add les es shl movsb push xchg mov push xchg test dec inc jge (bad) ja std ret adc dec mov or pop mov cli lret out gs fwait add jnp js (bad) sub jmp xchg cmp and xor rclb in adc mov sub dec cmp call mov das outsb je (bad) mov rorb pop jg addr16 pop inc add lahf cmp add gs imul icebp push and add mov call mov fwait xchg stos out xchg pushf popf xchg push movsb fmuls xchg mov lods pop mov jno cmpsl xchg lods ja pop leave loope (bad) icebp lret sub mov xchg jne scas mov add mov repz and dec sub ret sti inc lock sub sub sbb loope cmp jecxz sbb inc cmpsb push sub sarl or test dec mov or mov dec pop mov mov jle imul (bad) mov leave loopne xor inc out jp jne lock pop repnz loope sti mov adc mov addr16 lock mov int3 xchg sti lods pushf mov mov mov push neg lret inc xchg or (bad) lret test scas adc or mov sub ret xor stc cli mov testl movsl push add xchg adc movb mov aad clc imull mov adc loopne ret lret lea add cmpsb push (bad) xor mov adc cli mov iret int sarb scas xchg mov sub xchg xorl add xor mov idivb add (bad) lds out push in adc xor mov mov mov jo xchg jg jb sub inc into and jae out jbe cmp cmpsl cli sbb rcll in pop es pop bound jne dec es dec aas jmp ret popf jne add dec mov push in test stos lods jns cli mov les iret (bad) fldcw adcl loope sti cltd xor dec shr into orl push (bad) cli fnstenv lock pop std stc sbb jmp cld xchg mov mov daa idiv into pop jg or faddl xor dec sarl mov leave or or cmpsb sbb and mov inc add ja xchg cmp push inc (bad) mov popa mov adc out (bad) std lods jl mov or mov sub push je lret icebp dec scas (bad) adc push and cmp lret pop les imul xor repnz xchg or mov pop xor ja (bad) bound fistpl (bad) fsts xor sti sub ljmp roll xchg (bad) jo and jae data16 bound neg in mov das ret push sbb xchg sub int3 mov lock mov int3 pop popf insb jge adc into fs jle xlat add sub ret mov aas (bad) lret loop les or loope nop or sub mov cs cmpsl xchg (bad) ret leave jo add jp xchg shll popa pushl enter xchg in pusha mov lds pop xor xor lds inc fistp mov (bad) push in sahf dec (bad) in lcall jle imul inc addr16 push adc mov sahf push sub clc rcrb loop xlat stos jne scas mov dec scas fs out aas pop daa jecxz adc pop jmp jbe dec mov add xchg cli dec push out repnz adc mull pmullw mov frstor jnp std lret adc (bad) rcll (bad) in scas ds mov push pop movsl or jge in daa push add sub loop dec mov (bad) lods bound pop and xchg jno ret jg sbb jmp or or xor pushl xlat push jns xchg (bad) mov push fwait inc mov jmp mov jge sti mov push adc mov test lods jecxz stos int3 xor std sub shrl sbb mov dec lret iret push lock or xor xor pop negl mov pop jmp mov sub add clc xor adc mov dec xor sti icebp pop cs mov (bad) add cmc fnstcw dec cmpsb pop add add in adc (bad) add mov and dec pushf adc ret in mov and cli mov dec or cmp rcll sub and dec lret adc int imul and xchg sbb lea pop ret cld ficom adc adc mov xchg incb ret push lods xor adc xchg adc jle or dec add loope mov pop icebp or adc jmp inc pop push and adcl pop push inc lea in mov mov leave leave cmc push push xchg mov inc rcll pop (bad) fidivl mov and push push arpl ret mov mov add out cmp jne js decb xlat lret add icebp mov adc and mov push out test mov sub push sbb mov mulb cmp add adc fistp sbb xchg mov push lds mov popf fsubl lds jmp dec xor pushf arpl out inc fmull divb loop mov mov mov es adc mov outsb xchg lret movsb cmp in lds test movsl in pcmpeqb fistp in aaa outsb and and sub jp cmp xlat out gs rcr cmp in jle pop jo rolb sbb jmp out mov test pop mov sub push in push xchg xchg jns mov pop push or xor addr16 out lods and cltd pop cmp hlt jle loopne leave jno or out mov movsb sbb fcoml mov stos je mov push xchg sarb jge pop out daa stc repz call int3 pusha mov shlb popf (bad) pop mov and jae lods jmp enter lret sub or jno dec fucom ffreep jg xchg rorb loope into mov fisubrl jmp sbb in (bad) or out out adc test mov ljmp mov cmp mov cmp (bad) fnstenv clc jnp shrl cli leave pushf or or push (bad) xchg loop rorb aam in repz and or mov cmpsl dec fstpl es sub sub jnp inc and imul cmp iret leave lret aas lea cmp jne mov pusha push mov jmp rclb stc mov sbb lret (bad) cmpsl jne lret push (bad) sub icebp test mov pop ror leave pop xchg push add (bad) inc imul push cmp and and es inc std (bad) in jp sti lea test push dec jno add sbb mov cli dec push int3 mov adc mov pusha mov scas pop je adc cltd mov call mov mov emms rcrb jnp mov fist call ljmp dec jns inc push fidivrl call xchg push sbb mov sbb pushf xor jb repz sub xchg mov push lods cmp and cmp movsb sub inc sub cld mov fs jmp sbb lret adc dec test mov imul out cmc xchg push out nop push dec pushf scas sub (bad) movsb jge pop and mov aad mov mov add call loope xor push jo cltd and aas mov out insl fisubr adc xchg (bad) sbb hlt mov repnz xchg cmpsl sbb jmp add and sbb adc add out dec xor int aas in mov addr16 out ljmp mov call shr xor mov decl ds pop mov test add rclb mov sub scas repnz rcr cmp sub (bad) ljmp shr out pop mov mov fsubrp loop (bad) in mov adc and popa daa shrb or out push jmp cwtl xor loop ror stos repnz jmp mov cmp xor out dec (bad) ror mov mov xor jnp (bad) scas (bad) pop icebp jge stos inc or clc in (bad) mov mov imul fild cmpsl test ret and add cmpsb in and stc jp xor pushf push loop outsb movsl jne mov lret repz add mov ljmp add or xor fistl pusha dec sar lea std es js xor out dec repz mov jae and lock sbb cmp mov pop aas pop cli jns inc icebp out out cmp loope mov adc stos jmp ret jmp xchg jle bound loopne push decl dec xor jo xor mov es cltd ret (bad) or cmp out or (bad) and jns movsb jae mov lret adc push sub int3 push out inc cmp lret cmpsb test pop aas aad mov repnz scas pop or xchg (bad) mov push pop mov scas repz adc sub mov add imul imul lret test test scas je call cli bound mov notb in xor mov push xchg push (bad) xor mov fs lods lea leave xor daa lret daa cmp in idivl sub inc mov xchg mov bound jne (bad) out rorb rcrb dec mov inc cmp fcmovb xor stos repnz mov dec out jo (bad) hlt sarl mov and cld aaa daa xchg cmp mov pop imul dec out lret sbb inc lret (bad) inc out jns and js pop (bad) (bad) addr16 lret sub test data16 stos cmp mov aaa mov sub neg sub fcompl pop sti sbb sub movsb decb out or jg mov cmp dec xor cmp movsb inc adc (bad) mov xchg xor xchg shlb out mov out mov pop aam les ror iret test push pushf ljmp xlat lds movsb in sbb (bad) incb fnstcw leave jnp or (bad) repnz nop inc test shll scas test mov or mov mov in sbb cmp xor (bad) cmpsb xor out out pop lods add (bad) sub mov pop repz sub lods xchg cmp cmp sbb test lods push jno inc or pop (bad) outsb jns adc imul sub dec aam (bad) push jae add xor inc dec dec sub sub inc (bad) jns xor jbe mov jbe rcrb xchg outsb mov fcmove addr16 dec fucomip mov push xor (bad) jns sub push xor inc or sbb arpl push ja cmp test loope xor jp add inc pop pushl ret add call pop xchg adc test js lahf fcmovu clc bound sbb push xchg ret add aas sub scas pop sub jl jmp pop or cmpb pop sub xor mov dec add rol dec xor xor icebp and ret lods daa push icebp jae mov ret fisub loop sub or sbb (bad) hlt dec add inc leave pop (bad) xchg leave or push xor or sti ficomp xor ja pusha cmp cmp sub push pop mov push sub dec out cmp mov stc fs jle lahf jno gs dec das out push cmpb mov push scas fcompl add and popf daa fptan and adc int3 mov push push or pop jg jbe inc add clc mov cltd mov sbb divl sub pusha cmpsb or or test out das clc xchg (bad) xor enter mov cmp cmp adc aaa mov or sub xor mov enter cs pop xchg mov and repnz cld xchg outsl sarb movsb cld vpandn insb fisubr dec push push push mov test decb test sahf shr out fldl jo ljmp and sbb (bad) xor fcoml pop push add sbb out aaa jl fstpl sub xor cltd xlat in xor std clc das (bad) aad push cs push movsl add divb pop aad movsl into mov outsl dec lds cltd adc das decb cmp jmp les dec jns popf inc sub sub or sub or add leave andb jge scas movsb adc daa stc pushl adc das sub pop mov xor icebp push mov xchg or mov mov jp mov vpxor sub ljmp (bad) hlt pusha imul sti sub fisttpl mov stc cmpsl cmc mov sbb mov lcall xor rcrl hlt in push ret lock or and xor mov test in das pop mov dec jmp mov dec push sub lock out ret mov xchg sub (bad) jnp or imul leave bound sbb mov outsl mov and mov divl jg sub loopne sti and jecxz fist ss fnop or or mov jbe xchg pop bound xlat aas mov mov and and adc imul in jae adc out das out fidiv ret mov or or gs dec lcall push push xor cmpsb mov xor bound pop pop je jb mov lock xor jecxz mov stos (bad) mov xchg fucomp dec xchg lret dec add mov stos popf out inc mov (bad) mov comiss add stos stc cmpsb fstl scas (bad) mov pop adc jo aas xchg pop repnz cmp das arpl and mov sub insb sbb xor jns mov mov orl mov mov leave scas ja fimul mov and jo dec aaa jmp pop lcall clc negl and push push loopne pop push push cmp stos sbb inc xchg test in add push sub push push cmp gs jno shrb jg orb roll pop push mov xor jge pop ljmp inc outsb adc loope mov jg iret cmp mov jmp sarb push mov pop sub push sti jg or iret in pop je (bad) mov call (bad) pop out mov popf test nop orl lea xor rclb or xchg or xchg ret sub movsl inc push add xor cmc rorb pop sbb add in subb movsb pop mov lods sbb adc stc cmp sub or (bad) or (bad) and xor pop xor push std cs fs cmp push add pop insl testw jl add pop push add or pusha mov callw in add jg rorl mov push push cld gs add push mov inc sub (bad) jbe or dec dec push jmp addl cmpsb fistpll push xchg sub sub xor push pop push daa push xchg pop stc std adc roll sbb test lret arpl idivb pop shl add lret sub adc in dec ja xchg sbb movsl mov test rcrb pop mov push addl ljmp dec (bad) mov sub push mov or cmp rcrl add inc cld and ficompl or or adc add cli pop dec pop xor adc or cmp cmc dec mov pop push (bad) mov insl push cs or jo jg push cwtl in sbb mov dec add add popf nop andl sbb test ret sub rcrl sub sbb add or jno repnz pop lret (bad) scas mov pop loopne add lret cmc inc imul pop rcrl pop sub lods push (bad) sub cs push xor popf xchg out push push sbb sub out cmp aam mov or out adc ret add add jbe jl in pushf mov int3 pop sub daa (bad) sub cmp sub pop xlat gs pusha imul popl out inc dec jecxz pop je repz jmp pop mov icebp pop xchg aaa adc add xchg dec mov jb,pn xor add pop mov dec sbb adc or or (bad) cmp and adc mov mov mov out sti sub jp push lcall call push sub dec dec mov clc adc add inc shl int3 inc test loop push xor out xchg out pop hlt lods push push dec js scas mov aas xor mov pusha adc adc dec fist mov or mov lahf push xor dec call fstl dec test cmc mov xchg stos (bad) fildll (bad) out pop mov mov add gs mov xchg decl (bad) daa pop das (bad) xor roll mov loope push loopne sbb scas jmp jb loope jmp (bad) cwtl push fdivs scas dec repnz sti inc inc loop mov mov ss and mov (bad) popa and mov das insb adc mov mov xor mov sti and mov ss test pop mov (bad) push clc stos int xchg jl mov scas mov aaa mov fnstenv into mov and lea xchg mov (bad) popf adc jmp lahf jle jp pop inc adc push and mov lock or scas mov adc (bad) or bnd test sbb xchg lret sti sub out mov cmpsb negl enter or xor (bad) mov out or lret inc fscale sarl sub sub icebp jnp xor mov xor ljmp pop popa add and sub jecxz daa (bad) leave cld push pop and sub divl mov (bad) outsb push jg mov xchg pop int3 add xor or pop mov pop push sbbl adc and push and lods mov cmc mov and divl (bad) cld subb xchg call mov xchg test ds cmc inc loopne iret or scas jo dec xor roll pop mov xlat dec ficoml cmp scas push subb dec xlat (bad) (bad) repz sub ljmp movsl jge sbb shlb xchg movsb pop mov xor popa test add lods or dec stc mov mov lods scas sub xor sub xchg leave add or repz cld ret faddl leave cmpb insb xchg pop pop and enter cs sub mov pop cmp sbb cmp int jnp test cmpsl lock sbb mov dec in jne (bad) or push fdivrl out sti negl pop das sti jle mov sti lds ss stos in cld mov dec outsb xor and ret pop jo push sahf add pushf mov retw pop inc sub mov mov dec int jne adcb xor jo push pushf lcall in sub jg cmp jo dec and cld pop or cmpsb cld addps pop nop bound cmp and and xchg xchg jne xchg pop mov iret adc sti push sar mov out ficompl push fnstsw std gs and jle aas sub insl aam loop xchg xor add sub fnstcw loope add inc dec repz mov xchg aam pop add mov or pop cwtl mov (bad) lahf dec or hlt adc inc repnz shr bound push jb pop cwtl push jno xchg mov xlat adc adc les int3 mov sub int3 ljmp imull into std lds xchg add dec les popf outsb add loop test fucomip fcom adc (bad) pop ret mov decl daa movl push insb ret ret dec mov (bad) xchg out (bad) mov in mov mov (bad) ror dec repnz sub mov popf mov xchg jne fstps fs add loopne pushf test cmp lcall xchg leave push mov xlat in movsl (bad) adc call outsl rorl or sub sbb xor mov inc (bad) mov xchg (bad) loop dec int3 loopne or cmp add sub mov rclb add fisubl mov sub daa adc mov xchg insb sbb mov shrl xor push dec mov lods jno mov and popf mov test sbb sub mov inc cmp sub jbe (bad) leave movsb loope cmp sub aam push dec ss mov dec ja jle sub aam add sbb pusha cmp leave inc sub jnp xlat neg fisttp sti out pop psrlw cs mov popa and repnz hlt ljmp dec bound sahf sub sbb repz iret or jne jge or pop cltd repz (bad) int add mov jmp out stos popf mov fcmovnbe dec mov add add test imul push xorl cwtl ljmp adc popf push mov fs cwtl hlt out sahf lds mov jp mov insb pop out out push push les iret add loope mov jmp fnstenv sbb and add sti or into (bad) sti leave (bad) aaa jle mov push inc in xor imul inc mov loope sub leave and pop push adc in and mov pop fdiv loope add pop gs and outsb fcompl cltd xchg cmp jne sti mov out mov addl or cmp xchg movsl mov lret dec mov mov out lret mov je mov sub fidiv and in mov push xchg mov push loop push jecxz sub decl jle xor test (bad) mov pop cmpsb roll cs sub popa dec or lret test lock das sub mov jge addr16 lret add push popf pop out aad in hlt lret xor outsb das inc cmp push sub cmpsl (bad) cvtpi2ps daa movsb inc test movsl scas xor jge arpl fsubl jmp repnz mov pushf add insb push repnz push sbb add clc adc or jge pushf sbb cmpsb mov rcrb lret xchg push mov jns inc mov sub pop push loope nop mov or adc mov mov mov std xor sbb or mov xorl or xchg mov fistpll adc mov mov push pop into mov adc xchg rcrl std add cli cmp or pop shl pop nop mov sub mov divl mov ljmp mov push pushf or lahf sbb push and mov cmp lods inc (bad) jbe mov xchg movsl (bad) dec adc mov add cltd jmp pushf or jno rolb and lahf insl lret xlat sub idivb cs push dec xor push add sti or add (bad) dec or inc fwait jne push and add mov jmp push daa (bad) dec gs out imul out inc sahf inc imul xor dec jecxz sub repz xchg and cmp das rcl pop and mov xor out fisttpll cmpsl scas pop xor rcll inc push pop (bad) rol push pop mov push in jle push mov movsb push repz inc and xchg jbe (bad) xor add mov (bad) lahf ret push fsubrl add mov and or xor loop decl (bad) or cmp outsb sub pop xchg mov iret dec (bad) push pop daa inc stos stos sub push and mov pop mov dec lahf push fldcw jmp rcll fwait std stos xor add mov push mov lods ret jno icebp (bad) pusha xor fcoms das int and sub sbb and rcll lods out inc sbb jmp push into jb ret jg (bad) xlat cltd cmc mov xor xlat xor xlat cmc push cmp push cltd ret sub sub les or or icebp in call jno (bad) (bad) scas test xchg inc popf sub cmc (bad) jae (bad) fs mov fsubrp jo sub sahf xchg divl mov dec lods sbb adc push daa test push cmp icebp daa mov xor mov ss adc sub in lahf movsb push test pop nop (bad) popf sti pop mov aad sti sbb fadd and mov push repz sub jg jno mov dec jg mov sub mov push sbb jle jb dec in lcall sub and dec mov and dec and clc ficomp fs stos into outsl imul xlat insb mov jecxz or push sub push mov int xor sub lahf mov pop cmc int3 xchg and dec stc (bad) flds (bad) call mov test (bad) (bad) fldcw inc (bad) or mov das testb sbb adcl adc xor decb mov pusha addr16 cmc xchg and out das xor adc bound out fisubl stos mov push pop bound sub ja mov pop xor bound negb rorl xor pop (bad) xchg (bad) gs sbb xor mov and push inc lahf dec jge sub cmp loopne iret mov pusha pop mov roll out sub or out call cltd mov xor mov pop dec inc ja cmc rorl mov sub movsl xlat adc mov inc adc jmp lret sub loope cli jnp jae mov fstl fs mov rcrl in aaa adc jo icebp scas repnz fldenv dec or mov das dec mov aam push or std je ret jne lock xchg (bad) out inc mov jne fcoml pop mov insb mov sahf pop leave aad push mov idivl mov data16 (bad) movsl xchg pop sahf jmp orl cmp jb enter lret and test sti mov sub (bad) mov sti daa sub fsubrs fstl push in nop das fcomip add mov xor gs inc add shll (bad) mov inc daa fnsave jle dec fistpll xchg mov call inc add jle cmp arpl adc and xor (bad) sub cmp jns xchg in pop mov push out xor aas cmpsb (bad) aam mov add fstl pop xor sub sarl ret pop sub sub xor out in movsb cmp add adc add cld enter inc cli add lcall xchg lods mov xchg cmp push sub pop idiv gs stos mov dec (bad) (bad) cwtl and push call pop and (bad) cmp rcr dec scas les ja pop roll into mov data16 stc mov push sarl outsb mov jns xorb and inc rorb std mov pop mov mov xor jmp inc sub xchg (bad) out les (bad) mov and mov pop stos pop jnp xchg or and mov dec icebp imul cmp scas bound loop xlat int3 movsl xchg shlb inc scas xor pop decb cmpsl into (bad) mov xchg lcall dec inc and adc mov pushf ret dec inc inc sbb add (bad) push xchg shrl jne fisubr out in hlt mov pop pop outsb sub clc inc mov enter sub pop inc mov xor mov mov sahf pop xchg sub out aas jnp scas lret sub ss adc out jl enter repz inc ret mov and es das repz lea xchg mov call clc pop and mov adc sub inc cltd xor jecxz pop mov pop mov nop pop popf adc cld shll das add cmp fucom cmpsl and sbb sbb cmp enter sahf pop lret xor jae pop out pushl push sub mov scas jno dec int3 pop add or sub hlt mov jmp pop cli movsb lret mov dec xor cld test or fisttpll dec jmp je mov das test xor fcoms fldl sub push xchg dec (bad) dec and cwtl cmc xor mov dec mov sub bswap mov imul arpl cmp dec mov int imul int3 lock mov xchg stc cltd sub pop fldl mov inc push sbb xor addr16 int3 test and loop push gs das not jns cs cmp sbb adc call icebp jmp fnstenv sbb stc sub das xchg cmp xor pop shl jns test insl cmp lret and mov pop ret or sub cmp mov dec xchg cmp cmp mov call ljmp mov sub mov adc iret mov icebp mov stos loop mov xchg or call and (bad) jbe pop and mov popf and lock add jmp mov in mov das sbb lahf push or in call cmc inc adc push pop dec ret dec sbb repnz ljmp mov add xor cwtl ret repnz jnp test add sub sub cmp push repz in fnstenv cmp icebp add ret test mov sbb push pop xor push insb push add in push mov clc aas in or sbb lcall fildll adc and add cmpsl adc pop or xchg notl xor stc jb mov mov cmp cli fs jmp push movsb scas mov add stos sub stc push leave mov jp pop and lret shrl rcr push sbb lods pop lcall add cmp inc dec sub mov push scas int xor aas mov xchg daa popf push js adc lret mov outsb les daa sub std xor (bad) sbb sub mov out dec loopne push lahf adc mov mov stos js add divl jne xchg sub das xor ljmp div daa lret fistpll dec cwtl in xlat sub test incb popf push push sbb jae loope add std pop xlat cmc mov out cmp pop (bad) (bad) popf pop push xchg add and jle mov inc fcomp mov (bad) sub sub xor adc ror sub mov jae lret fistpll inc and push xchg sahf pop out jno mov cmp shll ret and cmc dec and add xor inc mov jae xchg add lret inc lret imul jg hlt cmpsl fwait mov int3 or out mov mov cs mov pop fldenv (bad) into push inc pop mov les mov mov fild mov addb add mov adc fmuls sbb push inc mov push dec sub fldenv and xlat cltd xlat out jbe xor fdivrp and dec (bad) mov jmp popf sbb push jo mov dec xlat dec mov lahf addr16 out add add sub mov mov xchg adc mov (bad) negb dec or sbb iret cmpb fildll dec add mov iret scas test cmp aam pop bound jno or lret add mov leave (bad) cltd aad ljmp fdivr cltd push cmp or leave inc outsb sub int jo dec push sbb insb cli lret pop icebp cli fs sub cwtl repnz inc mov pop int test mov mov lahf adc push mov pop (bad) aad inc bnd lret inc adc dec out fldcw push ret xchg into das icebp pop mov add lods or sti insl je orl push in cmp add cmp rorl pop sub mov rcr lods lret loop (bad) cwtl in or sub dec push lret xchg mov adc fldt scas sub xchg loop push adc mov dec and incl or rolb into repz movl adc mov scas sub imul ljmp cmp mov add pop pop fsub add fnstcw mov pusha ss test out pop in mov pop icebp cmpsb cmp sub repz and mov repz jmp test pop mov pop cwtl fisubrl into mov repnz (bad) fldl stos call fistp sub jns dec int3 lock ja mov aaa and adc cwtl sbb daa add xor ret push (bad) out mov out das or or cs jle sub call sbb lea add call cli jb push adc and ss xor pop aas mov push in sub in pop icebp mov xchg daa ljmp imul fnstcw imul adc adc out dec and fisttpl add aam loop push gs scas dec cli jne mov pop loop (bad) add sub and lcall addr16 (bad) cltd xchg adc imul and xor mov aad jae daa push ds sub xor lock sti idivl push mov mov mov fmuls or mov leave push insb add shr xor mov xor gs rcrb iret add add scas fdivl loop and mov icebp ds ret (bad) mov mov rcll adc sahf jnp sub push dec mov test mov (bad) xor (bad) jns cmp xchg (bad) push mov (bad) cmc mov add sbbl pop inc movsb or xor icebp mov cmp sub mov jg (bad) movsb adc out loop enter js scas pop jo je scas mov push lods and lods loop jg (bad) mov mov aad pop in and sub cmp push sub mov mov push repnz cld lret push push (bad) cmc stc movl test pushf hlt dec sarb data16 adc or pushf das jmp and bound stos adc repnz xchg adc and push push (bad) fldl sub jne mov ss xor xchg popa sarb adc and shrb cltd push ret cmp shl lods pop (bad) popa notb xor cmpsb cli jns out cld xlat mov sub ljmp pop and (bad) mov push fldt xchg add sbb (bad) jbe dec int mov mov mov sub jg out mov pop inc jo add (bad) pop sub ljmp sub push pushf add adc cld xchg test (bad) ficomp pop push imul insb mov push mov fs out xor sbb mov stos mulb sub insb sbb cmc jne mov negb push gs movsl mov xchg pop in sub xlat movsl mov les repnz sbb lret mov jbe leave bound push adc lahf jle ret pop hlt inc xor mov push (bad) or pop (bad) call nop mov or mov xchg or out std mov or stos push stc ret leave shll into popf lret adc mov xchg fstpl mov out pop test dec mov push adc or push xor lret sub popf loopne xor mov rep xor jo setne push into scas cmpsl lsl cmp or test leave in decl das stos pop add mulb dec dec sarb mov or not pop icebp xchg jle (bad) pop sub idiv adc mov sub ret andl (bad) sub and pop dec xor stos mov jb xor or inc push or clc mov (bad) clc dec stos clc jl jmp jmp sarb roll fisttp add imulb icebp pop sbb out xchg mov test push iret cwtl imul sub add jns popa lock cs or mov push or fidivr pop (bad) movsl testl sbb pop in jecxz inc loope mov ljmp pop out pop add mov mov jb jl and pop mov jmp dec movd (bad) or cmp or xor dec and sarb dec xor daa mov lods (bad) gs adc loop mov fistp adc divb fwait pop add repnz daa std inc das sub loopne sub imulb imul cmp lret and mov pop mov inc push sub lahf pop dec cmpsl fwait (bad) or mov lds sbb xchg cmovs mov lods mov cmpsl jl out jge and xor add hlt pop (bad) imull clc sub lahf rolb ffreep loop or mov add xor int test sub hlt shrl sub test stos bound das movsl jnp daa fstps icebp into mov and pop je scas stc rorl icebp push xorl cmp cmp mov fldcw mov (bad) stc and or dec and cmpsl movsb (bad) out jmp out movsb push in loop xchg xor sbbl or dec leave aad mov out sbb out frstor adc cmpsb subl data16 (bad) daa ret stc test or lret pandn adc jnp mov push cltd out sub ljmp fadds or add mov jne mov add js pop gs sub cmc jp dec sub movl jnp sub xor test push xchg xlat pushf push lahf leave inc or sub xchg and iret mov pop faddl (bad) adc ret xchg or cli mov mov jg popfw arpl int loop popf adc mov daa ds pop mov xor or ret jbe outsl mov mov cmc in pop push adc pop adc scas adc fmuls in stos out dec mov rol dec jle popf adc xlat in aas mov inc test cltd xor push cmp scas lods xlat xor pop push dec in (bad) sub and into push sbb popf arpl les scas cwtl in repnz xor repz out lds cld xor sub aam sub mov rcl mov mov dec std dec cmp dec mov pusha sub (bad) lret inc push cmp xor xchg xlat ljmp mov rcrl xor cmc jae and stos loop test iret scas addr16 in jle add sub bound inc cld cwtl (bad) imul fistpl test pusha or data16 mov xlat mov les (bad) out push mov and ljmp mov sub xchg or add (bad) mov jbe out pushl sub xor mov pop add das sub pop mov add xor insb js sub jp jle test (bad) (bad) popf test dec lods sbb and daa stc mov ret push lods pop insl sub gs mov adc xor xor xor fs mov sub mov imul push pop adc dec pop dec enter pushf mov mov push popf fist mov or mov pusha pop mov xchg and jle fisub adc fbstp (bad) jge icebp call into nop sub cmpsb mov pushf push push dec sbb lret aam ljmp pushf mov hlt cli out dec clc ljmp push cmp push push mov ljmp sub shll (bad) loopne cmpsb out test mov and std xor sub mov or shrl or lret mov repnz cmp inc push call mov or ja cmc sub test out cmpsl cmpsl pop cmp cltd fadds jb xchg test dec adc scas repnz loopne repz sub dec sub mov push ljmp ds pop in mov add shr div sti repnz inc mov loop sub sbb (bad) add dec inc pop dec mov sti test cmc push mov and andl daa lret inc mov jns (bad) sub push in sub push scas lcall jne lods sub dec int push jne sub sub aad add cli cld xorb in mov xlat jno (bad) js push inc jge sbb shl add xchg jmp mov outsl pushf mov dec sti mov push out sub dec sbb dec jns int (bad) insb bound bound adc pop fnstcw jp xchg xchg inc (bad) out popf push mov mov rcrl mov lds cmp jl shufps and cmc outsl dec mov sahf push mov (bad) sbb mov push je lret sbb jmp mov leave rorb lahf xchg inc mov dec or xchg aam leave je lods je jp ljmp inc adc mov pop push lcall dec xor xor ret inc imull jge loop jno bound into bound mov push scas shr add sub mov addb xor movsl icebp in lods fldln2 xchg jmp negb or mov out lds lret (bad) test or out leave (bad) sarl popf je loop rclb add cmp push xchg sub fistpll addl dec xchg fs mov and push popf (bad) fstl sub movsl adc pushf xchg sahf xchg dec mov add pop andb not push jnp or cmc aad fsub sbb in mov bound iret pop imul mov cmp scas lret ret (bad) repnz jnp mov jmp mov mov ret push stos gs into jmp (bad) xor mov data16 cld push aad ss negw mov and mov iret pop mov (bad) enter (bad) mov push pop iret scas sub cs scas lret mov dec int das mov jmp mov or cli adc sub test sbb jle (bad) ss push pop lock mov fldl2e scas cmp stos cmpsb orl and test leave mov mov jmp lds pop cltd push dec push push xor lret popa pop lods test in adc enter rcll out sub shrb ss ljmp push shrb (bad) xchg lea adc and dec xor out in xor icebp sub jle jmp xor inc xchg out mov fstl popa push or xchg xchg cli xor shrl lret mov inc cmp dec and mov mov (bad) popf (bad) lods loop sbb out pop and pop cmp lret movsl clc dec mov push inc int3 cmpsl std sbb and cmpsb rorb movzbl mov movsb or sarb pop fsubrp add add sub aas call add mov clc fidivr mov and (bad) push cmp dec dec stc jecxz inc test cli shlb test data16 in test add sub xor aad dec lods negb lret add (bad) scas fsubrs bound notb loop pop out cmp inc incl sub dec jg push (bad) jmp push pop adc sub pop add mov mov jo out or sub mov je fwait out lock xchg pop and jmp lahf xchg sti arpl sbb das sbb and pop cmc jnp and push cld sub sub pop jp xor inc insl jge insb add imul lret bound pop cmc fldenv jnp push adc ljmp xor cmp mov inc jns or dec and sub clc scas mov mov or repnz outsl in leave jmp jmp loopne in jb sarb jnp xchg shl jnp test dec scas mov push sbb repz jnp adc out pushf xchg clc icebp mov std inc sbb les or dec and xor xor xor add and adc xlat sub out push loop and int3 cltd xor and in das or and loop out dec stos popf insl add mov int3 cwtl dec mov fildll lods (bad) ret icebp pop xchg div or out jno dec test cwtl mov xor cmp in inc xor add and cmp xor shr rclb or mov xlat out mov les sub xor into mov dec xchg xorb push mov mov xor jne jo mov jne fisub sub cmc mov daa and scas dec mov clc movsb fiaddl mov js int stos ret jne ss outsb sbbl scas pop fildll cwtl lods fcoms stc fsubl pop adc dec or mov test cmc insb cmp mov out insl mov inc xchg add (bad) xlat sarl scas xchg mov dec not aam or (bad) mov dec xor pop and (bad) mov cmpsb mov loop add (bad) mov in loop xchg xor mov stos xor and mov in hlt mov jno ss and xor arpl fsubrs ljmp (bad) sub push sub mov call imulb leave out outsl out adc rorb mov imul push xlat in (bad) mov sbb in inc cmp jne mov push dec mov push ret mov or pop lods fs sub inc cmp pop lret mov (bad) mov add pop dec cltd sarl std fiadd mov aas cld out out adc aam xchg popa loope bound roll lahf (bad) jbe cltd adc aas mov loope repnz test or call sbb jb stos dec icebp icebp int3 loope call leave inc mov mov call stc mov xchg stos adc ljmp xchg cli xor rolb xor fsts aad (bad) call mov jg inc dec jmp jno sub data16 in jbe test (bad) xor and cmpsb adc add mov icebp shll ds cmc xlat icebp sbb mov js add imull pop add test xor pop inc test cmp and xchg in xchg popf or aad mov xor push repnz mov fstl adc dec (bad) (bad) (bad) ss (bad) pop sbb mov jge or push lret mov adc and std push mov mov lret nop fiaddl xor push jae xor jg shrb mov xor lds (bad) adc in and lret loopne lock sub (bad) fs scas mov (bad) cs (bad) loop imul inc mov mov xchg jg jmp sbbb sbb and lahf push mov or leave aas jno sahf add adcb mov mov or or stc lock sbb jno mov mov push push mov push cmp shrb int3 roll jl pop shll add adc sub addr16 (bad) mov in icebp lret sub les idiv sub push test aam add ss into cmc xchg fmull loop xor imul jo xchg in and lahf push pop xchg dec mov daa mov fs cmpsb xor xor xor xor push inc iret dec mov mov imul imul sahf push sub xor pushf inc sub stc ret aad cmp sub sub das inc add mov push aad or cs pop mov pop loop sbb jae mov sub out adc call (bad) lock popf jl pop out dec add ror dec ja popf or popf push pusha or mov orl aad (bad) scas jns mov sbb fcmovnb lret lods mov ljmp test jle loope cmp mov ret push inc dec clc xor mov (bad) sub cmp adc and jge jg add in inc add mov in test and mov jno movsl jo pop fdivr aad ss repz add inc and xchg es mov icebp divb and jnp pop (bad) shrb (bad) mov jge clc into sub stos aam xchg inc repnz loop adc lcall mov mov rolb test mov xor shll add mov mov or pop aas or and add shufps cmp xchg arpl stc add mov mov cmp aad adc mov pop call pop stos mov dec enter cld into addl cmp push in (bad) xor jae xor pushf out sub mov mov adc les mov out addr16 pop mov clc ja stos insl ret test lret mull mov test sub adc rol (bad) jg ljmp xor mov jmp mov popf jbe push pop mov (bad) xor inc (bad) outsb xchg mov mov pop adc aas pop mov push pop lds in xor into inc mov mov pushf cwtl mov cmpsl les out sub sub out sbb push ret stos dec pop movsb scas repnz adc (bad) xchg cmp dec mov (bad) jmp (bad) dec pushl pop adc and dec pop sub (bad) mov sub mov popf int3 pop xchg pop outsl sub hlt cmpsb rolb mov mov or pop ljmp dec div pop mov dec (bad) cs adc popf and sarl and cmp sbb ja push call pop fcoml push cmp pop iret test mov mov dec sbb loope xor xor loope xor add ljmp jge pop movsl mov add cmp add or std or lods addr16 cmp sahf or in pop mov cmp jle lods out jae les fsubrp xor pop xor dec mov adc mov mov push fs xlat push iret sti sub xchg cwtl xchg cmp lahf sbb (bad) mov pushf pop add loop inc insb dec pop call lahf in pop repnz and in mov enter (bad) pop (bad) sti pop lock pop loope inc pop and sub leave sub or std inc push xor testb hlt add cmp aas (bad) lret clc and into das xor sbb rolb mov ret inc push repnz xlat mov (bad) ficomp (bad) aam mov pop inc cmp and repz jo jb dec sti sub mov into outsl mov (bad) pop out jb ret push inc test stos lds out adc bound mov sbb insl add and cmpsl cmp jl cli adc mov jmp nop sub inc jo jg int3 jne shr ljmp mov pushf mov adc mulb pop or testb insl (bad) sub add lea sarb mov or enter fidiv sub jl lds ficomp clc loop ja movsb (bad) call arpl pop jl push add das or jnp test repnz add add sub push push sti and (bad) mov out pop ljmp leave adc ds test loop xlat call call mov adc and stc push mov ret nop inc mov orl push out jne jns cmp cmp in pextrw or popa (bad) mov loop jge into test push daa popf roll out out in bound outsl xchg test les (bad) pushl into ja adc mulb loop das add mov xor lret lret fwait rorl mov movl or stc scas and test idivl mov lods (bad) dec sub and mov std mov pop jecxz jne xor xlat or jns imul xor xor lret sub scas sub outsl call mov fbstp and das push aam mov enter iret gs mov sar cmc xchg lcall mov push sub inc daa lods (bad) pop and (bad) negl les jno das xor xor xchg popa add stc repz les pop shl dec sti sub scas push aad in mov fistl (bad) push ja inc mov sahf hlt push or repnz (bad) sub loopne lods ret sub dec jmp gs jle repz (bad) fcom or fisubrl and xchg fstpl cwtl mov mov add xchg mov pop xchg jmp rclb jl (bad) out and iret shr xchg push xor (bad) xchg adc std dec xchg mov cmp xor push stos loop sub mov lods xlat in push mov jp pushl fbld jbe push (bad) cli sub iret cmp add and and (bad) hlt ret sub lret test cltd mov ss and sti mov cmp xchg xor hlt imul dec cli pusha insl (bad) test stc lea das xor cmc aas in ds js xchg adc sub xor or jg int3 leave mov pop pushf out add cmp ds mov sub popf gs cmpsl js dec mov cmpsl xor jp out cli frstor (bad) not pop sti xchg inc cmp fadds adc mov xor inc cmp stos stc mov xor inc lahf cmp stc das sub jo xchg inc movsb mov add add fnstenv ljmp cmp mov or mov inc push mov fist sarb ljmp mov (bad) pop sti mov rcll sbb jmp and sub xor push or mov mov jmp inc bound rolb cmp neg push dec inc sub loop iret adc out jno (bad) aas cmc repz ja popf cltd imul xor cltd js xor xlat add cmp lret pop fldz leave cld clc push lret mov push pop xchg cld rcrl sub lret sarl and cmp xchg push fmuls xchg fstl mov out rcrl push jne push pop cs fbld inc jecxz cmc or test mov cmp rorl xchg cmp xchg mov xor ficom xor push add mov and call (bad) sbb adcl enter iret pop scas sub icebp jecxz (bad) repz dec xor sub ret jae xchg out adc add inc outsl mov jno out mov mov repnz cmp mov pop cltd fsubl loop imul popa xor jl dec loop sub or and mov hlt mov xchg mov add fcomps iret dec rclb jne movsb pop push cmp call and mov xchg aas scas bound shrl add push icebp push inc xchg int3 popa lret cmp test pushf sub iret and dec sbb and xor push and sub cmc (bad) movsl pop lods daa mov push imul ljmp xchg mov mov xchg in add sbb scas sub pop xor mov sbb (bad) mov jo pop pop dec fsubp mov and ficomp xor xor out outsl clc sahf movsb sbb lahf repnz or cmp shrb lea iret sbb negb add xchg pop xchg xor fistl mov xchg and add lds and rcrb jl pop rorl insb cwtl and xchg add xchg das notb dec fisubl inc pop push sbb or orb scas mov mov stos test scas cmpsb (bad) lret push xor pop jnp cmpsb mov repnz xor xor das mov mov or (bad) cmpsl sub push cmp cmc (bad) jae cmp mov xlat imul mov xorl das cmpsb add lock test mov jbe push test out fcomps or bound jne loope xchg out jo xchg mov lds and into ret xor mov xchg pop and mov or out xchg xchg mov inc xor mov lds fs sub jae pextrw aad sub int3 xlat fidiv imul iret outsb jmp cmc adc jle pop jge les js xor jb not pop imulb movsb push sbb mov xor pop ja mov int3 ret inc jo pop xchg mov pop mov sub lret pop outsb mov ret xor push inc mov leave idivl pop leave rolb lahf push rolb (bad) dec mov mov ret mov out and (bad) enter (bad) ljmp adc fimull mov inc movsl push inc xchg dec in mov jl sarl pop or scas fisttpll testb popa xchg mov sbb ljmp cmp inc repnz xchg sub xor ds iret or aam jno outsb (bad) lock or stc or std inc scas mov scas insb ljmp gs stos int3 pop (bad) lock test nop pop add xor stc mov jo mov aam ret fs and in sub and or and loope sub test jp sarl mov insl repnz mov push inc mov inc arpl inc xchg adc rcrl pop in jnp add mov (bad) jns fstpl jmp (bad) xchg xlat xor cltd clc shr sahf mov pop mov pop out (bad) xchg pop nop dec fstp xchg mov pop sub pop repnz sub mov sub or mov stos sub pop pop mov and inc shll mov mov push jecxz lds pop ds inc test mov sub push xor mov ret shrl dec mov dec xlat dec sbb mov jg icebp leave call repnz fistl loop pop int3 xor sub pushf insb cmpsl dec mov jno xor outsb popf or loop (bad) xchg sbb div das mov cltd ljmp jg adc dec pop add (bad) jmp fidivl sbb mov sti cmp leave xchg cmc jns daa fild int3 (bad) xor enter outsl and xor pop std dec lods loopne enter std pop lods jmp into add (bad) pop xchg bound and js cmp pop mov dec scas lret sti sub mov sti xor mov adc gs push and ljmp jmp dec loop dec fidivr xor leave out gs jne sbb adc arpl repz fcmovnu mov aas sub cwtl or mov lods push pop ret add and mov jnp xchg ret mov dec (bad) and cmc cmpsl dec mov cmp pop dec and scas dec test mov cwtl (bad) repnz or (bad) mov xor idivl add mov outsl gs leave insb xor adc aaa sub mov push dec fisub jo scas mov or daa inc xor push pop scas sub sub xchg push test aad dec ret mov popa mov mov xchg bound xor xlat in inc pop iret mov out das notl add sub xor lods fcomp sbb push xlat or jl pop ja icebp mull cli cmpsb sub outsl push cmp cmpsw push imul inc xlat addw xchg cmp xor lods and rorb mov pop jg dec insb mov mov stos into cli dec mov sub xor push mov (bad) and mov pop xchg test scas jne scas popa jle and leave or add mov ret jbe pop push dec inc or mov lock xchg xchg into xchg cmp xor (bad) mov mov or lahf push cmpsb gs aad out int xor mov or ljmpw scas movsl pop sub dec add push inc xor cli adc decb or pop and add xor or sub sub aad ja aad stos mov sub ret iret fnstsw gs jecxz and mull pop repnz jecxz shrb inc mov mov mov fiadd inc (bad) xor dec mov or and add dec rclb cli sub jecxz,pt popf addr16 mov sub cmp cld dec loope aas sub and push xor dec lods (bad) dec mov int3 icebp repz xor and mov mov mov shl mov jp sub inc outsl and adc push or out out sub jno das clc (bad) mov cmc jmp popf xchg sahf inc jle addr16 push inc (bad) out dec icebp movsb jp les pop (bad) mul or sti sti imul sarl and mov int3 jmp fs or nop stos in out popf sbb loope fdivs xor push and xor push pop ljmp push mov and movsb lret mov add sbb out jns mov cli push shr cltd movsb enter or xchg in (bad) mov out fdivs or inc mov std imul cwtl fsubrl fmull test cmp or jg jno jne and les sbb clc adc pushf mov dec call pop icebp mov xor pop int3 sub sub ret mov js jae out pop mul fstpt inc mov sub jne mov retw mov call or scas xchg (bad) mov imul cmpsl dec lret xor sub repnz mov push and repnz dec les shrl sub or xlat in das fldenv stos pop inc jmp cs mov sub hlt fwait mov mov push add dec xor mov sub fmuls adc (bad) mov daa sar imul inc dec adc loop lahf adc jmp rcrb xchg pop lea sub stos js push call push or clc sub cmc mov xor pop fbstp imul pop cli xor add add xor das lods ret ds out pop sti adc lods inc sbb gs outsb jnp mov xor les push cmpsb add mov stos in and mov sub cmp sub xlat push aam inc mov out aad adc or sarb xchg cmp and pop xchg jns imul bound sbb (bad) ja sub mov loop xlat lds scas dec dec mov xchg sbb movb loopne and mov dec mov fdivrs aam xchg stc movsb lods lock dec or gs movsl jle dec push out push jbe fstps lds inc nop add dec sbbb jne mov pop (bad) jb mov aam xor (bad) sub jno sub push inc mov lahf sbb xor ret push dec stos jnp jbe adc add shll pop sub fnstcw bound cmp (bad) ss fs and leave add sub xor or add push ret jns jp out xor es mov cmp in xchg in add (bad) mov fist dec xchg stos hlt xchg ljmp cld jno mov push fmull iret jmp cmc and xor notb imul ja dec ret out pushf fsubs dec daa (bad) loop mov out fist pop jecxz dec sub sub ljmp into test pop pop ljmp xchg pop dec push mov sbb test xchg xchg cli mov inc or xor mov enter and std lds pop adc xor dec aaa mov or (bad) mov add mov scas lods or icebp ds ljmp fist std sbb ja gs cltd mov out das icebp aad aad mov notl ds out or stc lcall lods movsb push hlt mov shr sub mov xor (bad) adc cmpsl mov enter jb (bad) iret sub push pop or into xlat in add and inc lock mov cwtl xor cmpsb pop and imul popf cmc fs mov cmpsl push push test or xchg or and mov in (bad) jmp jno jmp xchg sub jbe shrb push clc imul add lcall pusha (bad) divb call sbb xor xchg fnstcw fmull pop in cmp adc mov mov das jo push sub aas xor pop sub xor cli jno and leave repz sub cmp pop (bad) lret dec scas mov pop or and int (bad) push xor adc ja fs fwait add jmp in jmp movsl stc or lret imul xchg nop cmpsl mov stos movsb aad jecxz pop mov leave pop inc xchg mov dec stos jb cmp scas (bad) pushf idiv outsl outsl mov stos testb stos mov ret cmpsl je sbb adc lcall repnz mov sarl div jmp ds out icebp dec (bad) imul arpl inc imul sbb pushf mov xlat jae scas add push jl push cmp (bad) pop pop mov inc or nop in imul dec popa or dec leave aas cmp adc cmp iret push cmpsb daa pop fldt dec lret mul jg jnp push sahf fs enter (bad) push cmc data16 fistp mov xor xchg sub xor and into mov repnz lods cmp sti daa sar cmp pop jns pop jnp sbb into push mov in rorl and mov outsl mov xor repnz test sub fcoms ret pop or aad call notl cwtl xor or pop fstps dec std xor and cwtl in cmp dec aaa mov lret mov sub dec pop das stos xor push cltd loope shrl fs cli in cmpsb pop out jne (bad) mov xchg cmp adc sbb imul not cmp jl xchg push out dec idiv push ljmp xor sub leave outsb out and pop add sbb add or mov sub stc sub daa and orb pop xor sarl movsl mov cmc inc int3 and mov test ret jg sti lcall (bad) mov mov pop push sti dec mov fdivrl mov mov mov cmp mov and popf cld frstor std daa ret sub xchg xchg cltd les (bad) scas cltd mov fcompl push rorb inc or fimul mov adc faddl leave jns dec jmp shll decl mov (bad) mov addr16 push or sbb jmp pop shll dec lret adc aaa push mov lret (bad) or push push mov faddl lret pop jnp repnz ljmp jle xchg cmp dec mov js mov lds mov iret dec in mov sub fld sub and jno divl insl popf (bad) mov cmp out popf pop sbb dec sbb fsts or mov pop leave mov pop or cltd mov cmp dec mov jb mov stc es aad dec inc or clc xchg test fcomps loop outsl cmpsb dec dec cwtl ja mov (bad) xchg or testb jnp mov lret mov xchg cmp fsts or mov stos pop push dec (bad) inc arpl add xchg in out stc and adc std and or loopne xor stos lret and repz or dec push pop mov or (bad) testl imul imul popf fnstsw dec lahf pop cltd xchg pop ja xor mov icebp mov mov das jno outsb ffreep movsl popa idivl and cmc add push imul push mov jge (bad) int3 out add mov sub push cmp mov xchg jno cmpsl pop mov jae ja cld sbb push das fcmovbe mov lock imul movsb xor push cli popf xchg sub fwait mov mov sbb adc aad daa sub jmp enter repnz leave out push out mov inc movsl jo scas bound (bad) mov xlat lods jmp stos leave pop jnp out daa out sbb fldenv mov mov rorl dec or mov add clc sbb fimul (bad) pop sub xchg cltd cmp add dec push or xor (bad) clc repnz mov pop jl repnz leave (bad) jg jnp lret add mov insb repz loope jmp aaa out stos inc (bad) mov push dec xor mov jne jle sub sub fcompl (bad) idivb (bad) jae dec lock mov adc lds gs mov aad xor movsb push xor flds repnz sub or xor js (bad) push loopne xor (bad) in inc sub jmp inc cmp std xchg les repnz mov mov cld fldt into fwait pop rcrl (bad) repnz jbe push movb add jp pop xchg cmp jmp sub daa imul cltd stc inc inc stos rcll and jnp and into outsb scas pop lds es (bad) cmpsb cmc addr16 or leave jl aam subl cs sub cmpsb jns cmp xor loop mov sub and (bad) rcll mov push (bad) push in test dec and movsl cmpsl adc fcoml aad mov fs xor ficomp push mov or sub and and cmp or fnstenv mov incl mov daa mov pop test or mov pop and dec pushf push into pop in mov test mov std pop dec dec xor test sbb inc fdivrl call adc (bad) cs add push fwait pop ss sbb je add sbb loope test shr arpl movsl adc idiv pusha xor call nop sub mov call rcr adc cmp sub mov loope testl orl das outsb or xor popf cli icebp test andl sub icebp and xor adc je aad test mov pop sbb ficoml add (bad) iret xchg icebp aam jbe sub inc pop shr repnz xchg leave mov pop (bad) adc nop rorl jne iret inc ret inc mov (bad) mov shll mov sub push clc dec ret shrl test inc popl mov or (bad) test cltd push in dec sbb or jbe iret push sub stos cmp jmp test cmc add jmp mov fabs sub fnstcw jmp cmp sub icebp push jbe push data16 xchg xchg gs popf jbe rclb std lahf adc out iret adc or pop out dec roll dec sub das fist mov jb jbe ljmp call adcl and sbb repz cmp imul ret dec (bad) sbb push gs cmpsl fnstenv enter fs inc or add test mov xor negb (bad) ljmp cmp fldl xor inc jp loope adc dec xor and test xor mov pop xor stos mov cwtl ja or mov inc push or imul jle push shlb lret adc sub enter leave outsb dec mov dec (bad) imul sahf sub (bad) xchg (bad) imul js imulb xlat xor setg mov das iret in movsl jne movsb nop and jmp mov push fxam idivl aas sub xlat dec (bad) dec sub (bad) add lock andl sub mov push out es inc sub popf jl out and popf mov dec jno iret xchg jb inc data16 lahf inc xor imul lret pop repz xchg dec xor mov jne cmpsb lretw fimull add or pop (bad) (bad) mov add jecxz dec in ror pop adc mov aas mov mov adc imul jb mov imul adc out lahf bound (bad) cmc (bad) ja das lret aaa dec test mov scas test add mov je (bad) push out aad xchg das (bad) pop imul scas popa adc ljmp testb (bad) mov notl pop sbb or insb in xchg inc (bad) mov repz and xor scas gs dec mov xchg es add push jmp flds pop test xchg mov js movsb icebp pop jl mov jle push add lods xchg dec sub cmp pop and iret and jle mov hlt das mov fldenv adc or cmp lret mov enter lods movsb loopne mov add dec popf dec outsl loopne cmp cmp xor add fs push ret fistpl mov mov or xchg adc cwtl xor (bad) sub loope out in jp mov or ret inc fs (bad) loop faddp push inc sbb ss sbb icebp cmp add add imulb and out mov icebp std out mov (bad) cmp sarl ds shr jbe or pop jmp and cmpsl sub sbb sub aas sub xor cmp inc mov pop stc sub (bad) and add aaa scas xor xor adc lret push outsb daa aad add roll add push ss das xor (bad) mov and mov mov xchg add (bad) xor out mov jnp daa inc add xchg hlt (bad) mov push cs add cmpsl scas sar dec ja stc cmp pop daa fcomp sub push out adc flds dec xor pop and pop mov test and mov movsb gs xchg or ret lahf shl jmp ret adc xchg fnstenv push and and mov cmp sub int je test cli loop (bad) sti pop cmp jecxz mov into dec sub pop ljmp cmp xchg (bad) cmp ret lcall fmul fdivrl add repnz mov mov (bad) (bad) pop mov xor xadd subl loope (bad) mov out pop fnstsw xchg lds and adc jb out (bad) ss iret outsl xor scas mov dec scas mov adc ret adc or add icebp inc and mov in cli nop cmp or jecxz mov cs xor dec loop sub clc xor je push shll (bad) ljmp xor and and xor pop xchg (bad) andb mov and imul call repz movsb leave xor or jp mov mov (bad) pop lds mov and daa mov into outsl lret jecxz mov das out in mov lahf push (bad) jo sbb imull xlat (bad) sub sub jno or out mov out jne fistp jle cmp pushf jecxz das faddp jne xchg in push outsl cmp sub sub mov sub leave mov mov cmp add (bad) xchg (bad) jecxz push js inc jnp loop ja arpl fldl das inc cltd xchg pop mov jno sbbl jmp int3 in sti imul iret jmp xchg (bad) dec and iret sub cmp lods push xchg inc popf rep adc cli push scas pushf in hlt clc push sub mov mov xor xor lret and fisttpll mov mov mov mov gs bound cld and je mov mov cmpsl xlat sbb and xchg mov add mov fsubl (bad) repnz pop in pop mov or cltd jge pushf pop xchg (bad) notl inc fbld adc das leave ret dec aas or repz lods lcall flds mov dec cmp fisubl gs and push movsb sti adc push mov cmp das bound loop shll push (bad) mov xchg add loop xor pop neg dec mov mov (bad) xchg dec xchg dec cli mov push mov lret lret and xor sub dec inc and imul movsb lds (bad) test shrb lret in sub mov or xlat pop dec jl lods mov xchg popa mov fdiv movsb inc clc jmp mov std jns cmpsb mov pop mov pop in jecxz inc xor popl mov das cwtl push or fiaddl (bad) repz iret sbb xor popf jbe pop mov loope lods ljmp mov out sbb push mov aas adc pushf mov out cmp jecxz or push les loop sbb cmpsb daa lret je iret adc bnd les push ljmp push testl jg daa xchg stos int3 mov xchg (bad) movsl pop in sub push imul fiadd aas jp jecxz repz jg or mov xchg loop int jmp shr lods lds (bad) cwtl xchg test mov dec jmp mov movsl das cmp dec sbb arpl pop lret jg cmpsb pop icebp xor lret int3 outsl push out imul clc jb loop ja push inc sub (bad) cmp inc push enter pop aam inc (bad) dec xchg dec stc cmc sahf push shr mov pop cmp and mov imul pushf cwtl or mov in fsts xchg jg pop (bad) enter stos jno loop das sub (bad) cli mov cmp xchg aam jae ljmp pop std enter sbb jns cmp and xchg sub fldenv and push out in iret pop mov dec xor xor lret daa cltd push mov xor aas daa pop cmp out sbb fiaddl stc ljmp mov mov lds fisubr ret test cmp cmp cwtl iret movsl push cld mov sbb sub mov cld mov adc inc test mov (bad) mul ret shlb sub mov ljmp in cmpsl sti inc adc out mov adc rorb test int3 int repnz sub adc mov out mov cs pop stos adc (bad) xor fstpt je enter loop aad jno or shrl xlat xor inc jae sub mov jo add int push sub or pop stc loop test leave fist leave jns das add ret sub mov and sub mov inc inc xor ja int jno (bad) ljmp push loope clc sub push xor xchg decb test lods mov add sbb cmp notb pop cmpsl cld push jb mov sub (bad) pushf (bad) cmp lea or add pop push jl jb push shrl xor jbe leave ja cmp cmp pop or stos and cmp ret jnp and or pop and sub adc mov aam (bad) mov nop repz aad sub push xor stos pop sub sar repz test mov idivl pusha xchg je cmpsl or jecxz jbe adc shrb dec mov add cmp outsb adc loopne out add jmp adc bound push sbb or rcr icebp mov ret sti mov out daa inc pop mov out idivl (bad) dec dec test sti scas mov cmp xor mov pop repz xor fnstsw pop out cmp (bad) and insb adc (bad) ds or jle call repnz fdivrs dec mov repz lret dec and fwait ret mov fldcw cmc out in sub push dec adc out mov lahf xchg sti scas pusha mov xor test adc dec sbb inc sti mov sbb (bad) mov add mov jb or xchg mov in sbb sub push mov fldl sbb mov lock or lahf lods add xor mov leave cwtl ljmp mov fwait mov ret jge jo icebp sub lahf cmp pop dec loopne (bad) sub dec pop xchg pop adc sub cmpsb fst jb rol mov add push lahf mov nop jbe jmp cmp pushf sub sbb (bad) xchg pop lods pop mov call xor pop enter xchg rorb jg xor cwtl lret fcmovbe add rclb pop aad sub in sbbl (bad) pop and cmc gs xor and (bad) rolb fidivrl mov sub sbb iret (bad) sub add data16 add clc iret ror loop (bad) mov sub push mov mov jle push jmp inc ret or mov mov xlat and sbb xor pop mov (bad) xchg push mov xchg loope (bad) sti mov cmp adc add daa int3 loope mov into outsb push mov or mov or into sahf mov pop pop mov xchg mov xchg fsubs mov sbb lret loop mov daa repz gs into xlat dec mov sbb inc cmpsl xchg sbb int sub test or xchg fistp (bad) shll sub mov jg mov and insl out test stos iret jns adc loop mov rorb std xchg lahf xchg (bad) mov lock mov scas jbe repz xchg in test mov or jb cltd xor lods dec mov dec inc mov pop stos cwtl add dec lods outsb loope les mov call mov mov and push or add in inc mov sub or ljmp repnz shrb shll fs and fldcw fsubrs das jne (bad) bound push sbb orl iret dec fsubs and dec xor (bad) sub arpl in int3 (bad) fstpt mov cmpsb cmp rorl (bad) repnz cmp mulb dec (bad) ljmp xlat mov lret xchg adc lret movsl mov pop pop ljmp sar int jmp in fldl2t aas lods jb push push das add imul shr xor inc les leave icebp outsl sub cmpsl push mov push loop jns inc add outsl mov mov ljmp daa ret fild into stos mov daa call (bad) xchg test mov outsl ret outsb jae add sub (bad) adc lea movsl push push iret movsb call and stc into cwtl mov pop mov push jnp adc mov pop sbb sub sub xchg ja test push pusha mov dec shr bound xchg rcll adc inc pop and mov mov add pop jno or mov sbb mov test cmp loop fidivl sub int3 sub adc mov outsl mov pop movsb mov jge dec jb repz adc lret cmp push mov add cmp cli into xchg dec mov pop mov les gs jno fsubr xor repz adc jg gs je enter daa shll clc add push (bad) les ljmp lock mov mov add and enter mov sub pop dec dec imul jno jecxz jge roll (bad) popf nop push lahf xor leave int3 ljmp pusha jo xlat jo leave leave pop sbb mov cli mov pop sbb lods mov pop jmp jmp pop add mov push test fwait lods daa les fildll push out cli into jecxz xor repz aas xchg mul dec push into xor mov mov sbb into sbb aas lea mov incl sub jmp cs jae add jnp repz ret ficom mov add call (bad) mov dec and jbe imul push push jo movsl out adc out inc mov adc xchg and std or out pop (bad) scas xor mov dec and jmp and xchg cld aam mov add repnz nop in jnp and mov (bad) icebp mov cli mov add sub xor push jge lods aam rcll mov cmpsb rorl mov push push mov add stos je stos xor mov ds inc aad rcll dec xor fldcw imul push sub (bad) mov mov leave xchg push leave xchg js std dec ljmp xchg cli test push (bad) sub out clc jmp xchg mov jnp mov lea test sub inc sub jp xchg (bad) sub insl std mov imul loope sub cmp fs mov mov nop pop xor xchg cld pop int das imulb pop loope insb sbb das (bad) xor icebp sbb out dec xor dec and ffree ror cli sub xor movb stos sub sbb mov pop stc movsl adc fnstenv (bad) loop inc xchg and pushf dec (bad) mov dec jp jmp rcll andl sahf test mov fdivr adc repnz xor push lcall xchg pop push aas loope cmp imul xchg (bad) out dec jno or dec int3 popf pushl inc insb das aad rclb mulb mov aas adc sub add sahf ss hlt mov pop adc int outsb (bad) dec shr push hlt stc popf sbb mov xchg lret out jb fdivrs sub pop (bad) sbb adc and jmp scas je scas int outsl in pop xchg js pop lds (bad) mov mov dec adc lret mov push jmp in and mov mov out and scas sub sahf or inc lret mov mov lock mov lret jbe dec (bad) sub (bad) mov or into cmc and dec sub inc (bad) mov mov icebp cmc inc ret lods stc addl and lock fs mov (bad) mov test sbb js xchg or clc sub and cli xchg xchg dec daa add imul push jmp inc xor pop mov or pop mul sar xor xor and loop (bad) adc push lods popf dec popa pop dec pop imul push mov sub mov dec inc push out sub mov xchg cli lcall xchg adc mov hlt clc adc and push push or out add mov (bad) ficom xchg sbb std push ret lcall outsb imulb sub inc aam push add inc iret add (bad) sub jmp cmp cmp mov push jb pop ljmp fadd xchg jecxz frstor and mov or and outsl call mov pop repnz xchg xchg dec lea (bad) out mov xor int3 dec mov cli pushf jbe repz in cmpsb fstps (bad) dec test or out cltd sub mov add pop aam push cmc sbb rcr mov push mov (bad) fcmovu test dec pushf repnz mov adc add aad mov xor jle loop push push aam pop jo loope jnp add psllw inc pop loopnew pop jno pop and jo jg outsb mov add jo dec fsubr inc xchg mov add in xchg cmc push cwtl xchg inc push xchg ja scas out outsl in cmp mov outsb gs out nop inc sub mov xor stos mov daa mov dec cmpsb dec pop aam out std pop pop jecxz test andb addr16 lret sub pop cltd push add xor and mov jnp (bad) negb icebp sub (bad) mov mov cli mov mov sbb pop and movsb lret loope out icebp dec mov jne jg push inc push out dec mov sub out in (bad) mov sub into xlat mov cmp pop xchg stos pop jns subl cmp clc mov sbb push leave pop push lods stos shr (bad) pushf add insb lcall out dec jmp into adc xor test jns imul xor movsl cmpsb push xor xor add mov push mov dec dec mov adc jmp or aad subb or clc mov cld out pop rcr mov pop dec out push mov pop lock shrb push data16 push adc mov notb fs mov insb popa xchg sti xchg mov (bad) jmp dec jp adc testb rcl dec pop sub adc mov (bad) mov stos ret push push (bad) nop or mov repnz sbb inc dec arpl and mov rcll fdivs loope jecxz sahf xchg ret fnstenv (bad) add dec loopne lcall push xchg or mov push hlt mov out jnp aas repnz insl dec icebp ljmp push (bad) out lret sub xor mov imul (bad) adc mov cmpl xchg int push lret dec decb or jnp dec cmpsl inc pop xor push (bad) rcrb and cmp add (bad) ljmp xchg sub pushf mov leave xor or je fstpl mov jmp dec push leave xor xor mov or add sbb xor cs inc and inc movsb pop leave push sti cmpsl add sti inc lahf es subl out push flds out icebp dec dec not jmp push popf pop inc cmpsl and adc push sub shrb iret xchg scas (bad) fsubrs mov push cmpsl pop je add sub xlat jmp sti xor pop mov push mov out push repz ret cwtl je repnz sarl and dec add jno push pop sub jb and ds xor mov std into stos jle sub xchg adcl pushf xor jne mov push adc pop out sub ds jbe sbb lds mull adc xlat out cwtl mov movsl mov stos daa imull lret xor outsl fcompl push ficom inc mov pop add ret lds push dec stos or pop pop int3 lret xchg pop pushf cmpsl jg inc (bad) ss mov xchg push sbb in lahf rcl mov or dec pop add add mov xchg ficoml sub lahf dec push std cmpsl (bad) or hlt sahf jb stos xchg fild or dec jge push cli lret xor mov jl sub jb sbb sub mov in dec leave not push in icebp loopne rorl jge pop sub sub inc pop and jmp mov lock lea jg lods jl rcll pushf sub popf xchg pop pop bound subl jne push jmp test mov push dec push scas adc mov adc sub jmp sbb jmp mov stos gs mov negb sub outsb push outsl jge add loop mov test adc jmp into mov xchg push pop (bad) push mov pop mov lcall scas pop in lret test std sub push scas mov sub js (bad) xlat insb xchg mov stos adc call jne add das dec or jg mov and dec insl inc mov and push dec mov outsl jae mov or dec (bad) lret pause sub xor add xor dec jae testb fmuls icebp test sub stos je mov add sbb mov mov sarb lcall fadds stos push fadds xchg add andl jge lds rorb out inc dec addr16 jno stos or mov cs das test push mov ret movsb push add mov xchg push sub call or pop sbb sub mov ljmp sahf xchg add lock negl mov add cltd mov jge cmc xchg push (bad) cmpsl pop adc fdivs (bad) mov (bad) mov push pop pop mov dec push pop add mov jns cmpsl push lods sub mov negb ljmp cmp rolb stos test (bad) cmpsl sahf pop mov dec les mov add sub and push arpl pop add push push adc cli pop test mov lahf xor out cmpsb jle,pt lret lcall inc imul inc sub ja int3 lds (bad) mov hlt out push mov cmpsb jl xor jmp call jns idivl int3 dec fnsave inc imul fwait bound add cmp fxch dec add out sub mov push jno ds sti faddl jmp or adc xchg xor out jecxz js leave sub sbb pop out clc movsl pop sahf sub out mov and jmp cmp mov xchg repnz addr16 mov pushl mov cltd and adc dec jmp xchg mov push and repz (bad) pop ret mov adc sbb sub lret pop jno sarb in das mov fidivrl repz and mov repnz pop mov mov rolb rcrl cmp pop and rcll mov sbb fstpl fs adc lret xor or mov cmpsl orl out js jno mov sbb mov jbe sbb cmp mov popf dec adc mull adc notb popf ret pop notb jnp stos mov popf push dec jbe cmp jge dec add add xor lcall add test iret sub out repz cld add (bad) mov or ret lahf sbb cmp out mov add inc pop add or in (bad) sub jo or pop xlat ret in cmpsl fs sarb clc mov enter mov mov and jge out push jg sbb pop sub jle je or rcrb mov das mov inc popf (bad) es iret mov inc iret jmp jge out jnp mov leave fmuls movsb push push or mov lret inc mov int3 scas mov add clc leave daa or fidiv imul jno or sbb pushf and (bad) mov cmp (bad) xchg js mov shrl adc pop add mov xor or inc mov stos (bad) std xor out imul xchg std popl iret fwait xchg ss je out (bad) pop popf insb add and fnstsw mov or out ret out adc clc pop jmp jb sbb lret xchg inc out cwtl inc mov cmp and fldcw sub adc mov into aad pusha ja push lret push outsb jp (bad) lcall leave add xor jb and mov cmc pop fwait and leave fmull daa popa hlt add mov outsl das stos (bad) add add mov cld (bad) mov out xchg fisub ret lret xchg mov in mov cmpsl fisttpll sarl jmp fild pop test ljmp out dec loop jns dec or jne test fistp mov cmp push int sub xor inc sbb into cli jecxz cmp adc pop sub mov repnz or mov and stos jae rcr jo in mov pop xor xchg lret jge cltd bound pushf out test and mov sar in push mov fnstcw ja lcall push add mov xchg stc mov mov add jecxz mov out ret das xor sbb pop fucomi lret not out enter fldenv add pop sbb dec and dec daa ljmp iret (bad) mulb mov jge jnp aaa cmp rcll roll mov add sar sbb movsl outsb mov xchg push into call lds rcrb movsl push int cmc xor jne mov cld (bad) jmp (bad) rolb push add mov cli pop jbe in dec std lock das test xor lcall mov ficompl (bad) lret jmp add add sti das inc pop hlt pop leave push xchg inc sub test push xor and out (bad) divl enter cmp (bad) pushf sti das jns push (bad) stos cli or rep rcll sub decl xor and ds push pop adc sbb test jmp push jmp insb out mov das pop push stc movsl dec sarb test sbb push imul push out setne jno cld outsb push mov xchg mov lret and (bad) out sub cmp notl or jb mov cmpsb or fsts adc mov cmpsl mov mov xor aam rcll call adc arpl bnd adc into xchg pop cli scas fs ljmp mov mov jmp xchg xor add std in inc add adc xor dec and jb icebp int3 cltd inc or or mov std dec inc and daa push jae jno or push pop dec sub pop addr16 xchg shrb xchg jae xor add sahf pop pushl ss cld sbb je test push inc xchg cmpsb mov fmul push push inc test mov gs std icebp mov fdivl push sub aam cmp fstl inc jne in sbb adc movsl pushf outsl sub xchg popa inc outsb mov lods or out idivl out xchg pop daa push add pop out mov dec cmp pop adc ja clc iret idivl ljmp shrl jb lds es fwait and mov fs repnz or sub pop es outsb adc cld bound (bad) mov sbb incl es and shrl jmp push xchg fs mov mov inc dec test sbb push xor sbb lcall jl in test mov push cmp iret popf or mov jecxz xchg stc lds ljmp imull push xor addb add and mov cmpsb push mov lret out std xbegin shlb pop jb jmp push in jp enter ftst inc sbb mov cmp icebp and mov dec clc and and xor (bad) (bad) or cmp in shl sbbb rol sub out jmp aaa inc xor cld mov enter adc cli mov sti clc sub and jmp xchg pusha and sub xchg xor push icebp shrl cmpsb jmp and adc mov and sbb add jp shll in jae add dec int3 xorl test mov ror and cmpsl repz pop test jmp sahf mov sub or or jg inc add popf add push sahf push ret pop lods mov cmp jo xchg inc xor jns imul or fbstp xlat fidiv add out mov scas sub cwtl push mov inc pop jae adc scas mov pop out inc or ljmp mov inc frstor cmp and mov jae mov inc mov pop add cmp test out xor mov add cmp mov dec sbb or jae cmp adc inc xor cmp mov in lods rcl daa xor insl push mov xchg jge add sahf lds pushl xchg (bad) xor jg ret and and push push xchg and pusha and xor mov andl fistl sarb or mov (bad) jbe or inc out xchg jg xor lcall sub out sub add pop adc lea and and lcall cmp fdivr cmp sub push sub mov fdivs lock pop sub mov sub dec out push inc sahf or pop shr sub and or inc sub mov mov call popf adc fldenv fidivr sar stos sub push mov jnp fcmovnbe test scas loope sub daa (bad) push sbbl sub lods mov and clc fnstsw jmp pop pop xor stos gs (bad) and decb ret mov fdivrl sti std mov stc into push (bad) rol popf mov mov mov xchg out into clc xor fsubr (bad) movsl xor pop jecxz das out hlt or ds cwtl mov lock lds pop mov or xor mov scas xchg add pusha add mov shlb or fpatan jle xchg rcll pop int jle mov pop pop bound mov sti add sub imul ja loop mov movsb push xlat mulb and inc pushf jge fcoml adc pusha pop iret aad mov push lcall adc les jecxz rcl mov cs std comiss lret sub pop xor inc outsl pop imul inc es loop scas sub mov push push cmp adc ror xor push jmp lock notb dec sub (bad) ss lcall mov dec out lcall loopne or js sub sub pop mov std adc shrb and push xchg lret mov push mov jb mov inc push and hlt call scas repnz jecxz das or lret xor xor sti push hlt scas ja sar add dec xchg mov insb add lds in sub andl jbe push sub repnz and int3 subl push add mov jmp adc mov (bad) dec ror (bad) sarb jno inc and hlt xchg lret push jmp movsl (bad) and adc or or and mov shll scas test sbb mov cmp movsb lods cltd shlb mov mov mov stos test pop mov push xchg out je push or xor push add je push jg insl mov add in popf jg xchg out lahf jo or movsb mov movsl repnz jge push repnz adc jmp mov or cmp lock int3 mov push les gs je sti lock mov xor mov sahf jae test clc rcll enter int3 ret pop push daa mov out cs and or setb adc (bad) fistp jae ret and xor int3 insb cli movsl fs repz push daa jmp in and repz mov daa jne int sahf icebp add in sti mov into jae or sbb or push push inc movsl inc push (bad) and mov push clc scas les cmp movsl js fidivrl mov sbb out add mov in scas jg loope mov pop (bad) sub push sub inc cs mov pushf add mov fs out sub xor test std nop push out pop mov dec scas jmp inc cmpsl sub iret adc mov and add call jae (bad) mov mov mov pusha xchg or push pushf bound je mov jmp pushf sub sbb mov clc in adc sub adc cmp or push loop adc call jno lods pop (bad) fiadd pop test sarb push out xor jecxz sub add pop repz and cs pop push adc leave adc fldcw loop pop (bad) or sub andb and idivl inc jnp mov adc sti xlat lcall sahf negl ljmp cltd inc jecxz ss lret das clc sbb cmp mull sub leave xchg punpckhwd sub dec mov xchg enter xor ds lret fs out and jp cmp dec fisubr pop mov lret ret test add mov ja cmpsb push (bad) (bad) dec mov mov bound mov loopne mov test xlat mov push and add pop mov pop or sub jne bswap jno aas gs scas mov test iret cld in fisttpll out and lods aam pop jbe into das lret inc mov das std xchg xor mov pop (bad) icebp icebp add ds sub add lock mov add js cmp mov repz fistpll loope add clc popf daa inc xchg pop sub imul mov cli js jmp dec stos mov rclb or mov adc popf pop xchg ja stos adc rolb inc or (bad) fmull or add xchg sti push inc movsb aas lret ret test jo rorb (bad) xor je bound rcl iret scas (bad) jmp mov mov daa add and xor jbe add fsubrl push shll push jbe sub dec sub lcall scas loop mov out add xor (bad) or push lods rcrl test sub jle inc mov jbe (bad) into out sub mov xchg cmp sub aad into push dec jecxz lret xor cld out push movb (bad) mov outsb jb icebp test out fldl mov mov rclb mov lret jae sub cmpsl push pop das xchg sub (bad) and es inc lret out stc les call mov add loope mov add scas pusha mov sub xchg and mov jmp and or sbb and or push es imull mov or add sub mov loopne clc fisttpl adc out push stc mov xchg aam (bad) sub xor mov inc xlat xor pop sbb mov add jmp je cld or out mov cmpsl fsubrl sub add aad push rcr cmp sub das repz pop popa mov loop es lcall xor jne xchg into add mov icebp mov sub push mov mov cmp dec mov test rclb mov imul inc sub jle imul popf pop mov and jmp into xlat out sub sub and sub push mov or lock decl jns movsl fstps scas aad xchg or add mov pop repz pop and dec inc add aam (bad) ret or mov jecxz dec push fs push cmp and mov or dec (bad) leave loope pop dec inc mov mull dec add xlat out out notb inc xor cwtl push cmp into jl (bad) cld jnp sarl pop repnz or mov ss icebp ljmp (bad) fsubrl or jb inc inc add adc and xor pop and pop negl xor (bad) jecxz out cmp xor cmp inc pop ret lods pop mov aas idiv pop add and ret add pop cmp popa loop test mov sub sbb dec pusha in pop mov je push scas inc lock jne mov xchg ret and lret inc push pop flds cmp es jns cmp and adc das mov or cmp das notl dec dec mov sahf and push jg xor add jne fisubr gs xchg cmp int3 mov cmp fnstenv sbb lock mov jl scas push mov jnp cmp orb sub ret int3 dec lahf adc rcrb leave lahf xor sub pop xchg test mov xchg popa jmp adc (bad) dec push xor mov xchg scas je mov jns lret jecxz imul in cmpsl fldl pop mov mov pop mov inc lds repz scas neg daa jmp loop cmc cltd pop repnz mov ja cmp iret pop jle mov mov movsb (bad) mov pop movsb test mov jno (bad) dec das mov pop sti sar cmc ret pop out repz fcmovb push outsl dec jne fnop (bad) imul rcl xchg outsl adc and (bad) mov add mov add and test or mov or or mov leave fadd gs mov mov les jns addr16 jmp movsl dec sti xchg das xchg mov or mov push push cltd cld mov jecxz sarl pop or or sbb imul sub jne push sub xchg xchg cli out sub shl inc dec repnz sub pop subl cmpsb (bad) pop jno loope mov mov mov rcrl cmp mov das push jmp hlt addb dec rcrb dec and mov sub mov cmpsb sub adc ja dec iret jbe sub and in mov jmp negl mov mov pushf shlb shll mov inc imul shlb sub iret jmp loop fucomp cwtl (bad) sub xor cli mov dec adcl cld cltd cmpsl xchg enter out fsub push jge pop out adc adc divb jecxz jbe repz jmp jmp mov cmp or lds (bad) das jns cltd ret xor pop mov and add sub out js jno mov ret lret add add pop cmc xchg push push imul lcall or sub or mov adcl lcall jge dec add mov xchg dec dec pop sbb inc mov sahf test cmp push dec cld xchg fiadd sub fs fnsave pop mov out imul sub fild cmpsl (bad) add jle stos mov pop leave aam (bad) or lods pop dec mov xlat mov jge loop push jo mov mov fbld into lods in outsl mov inc and sub ret adc mov inc xor pop ret add add mov fiadd cmpsb pop mov inc mov aas sub jp pop lret push fist push sub icebp imulb in icebp mov inc dec push lret or fisub lahf jmp sub xlat mov out popa rolb dec sub inc les mov out xor daa sub jo xchg jne jns fidivr xchg out cmpsl xlat insb ss xchg fwait mov pop ds adcb xor repnz dec push xor clc push or fimull jge aas jmp push inc sub push adc insb add mov pop push mov loop push push mov fsubrs mov das add xorl pop xor decb xor pop lock mov movsl cmpsl adc dec adc (bad) jmp test sub push push add stc imul hlt in or xchg neg push rorb xor sub pop cmp add cmp push sbb cmpl inc mov outsl jle fisttp rorl mov (bad) add jb or mov ret shrl and rol mov enter jecxz dec pop jecxz lods nop fcoml cs or call adc stos mov test add dec pop cwtl sub pop aaa daa rclb mov jae icebp hlt push pusha xor mov mov addl inc hlt ljmp add sub pop xor lret xchg or pusha les add inc or nop cmpsb mov and push mov cmp sub jae pusha pop or mov ficompl adc jns mov scas push sbb xor xchg jbe adc push pop cmp cmp mov daa push gs mov xor mov inc shrl sbb test loop inc add sarl scas mov lret pop mov (bad) cmp and ffreep adcb (bad) (bad) add adc pop add mov mov jmp adc inc push push (bad) fiaddl nop sub xlat repnz xor aas lea mov xchg push jbe fldl call or ss repz jge xchg dec mov and ret outsb gs mov pushf mov (bad) out lods daa mov jg cwtl jo stos and hlt pop xchg pop loop mov dec leave repz xchg (bad) xchg cmc xor cwtl lods jecxz mov stc jns xor mull xchg (bad) bound sub push pop fcompl sub jecxz adc clc lahf push out or jo dec mov mov ja or pop push adc jmp dec int inc dec std iret add sub and cmpb sbb xor sub pop or scas fs ljmp xor movsl adc lods sahf mov adc and pop stos mov jl adc jmp std bound notb repnz lock or pop sahf cmc push loop adc in sub je fs fcompl mov cltd lds lret dec jle pop push sub or shlb dec out adc insb into (bad) pop mov adc aas mov popa sahf xor les lret dec daa (bad) in adc arpl xchg ret lahf jo push into mov int3 wbinvd adc mov add sbb (bad) mull call aad rcrl sub jb int cmp mov cli mov and push ds out jl ljmp jg mov in fdivr cwtl dec iret movsb scas clc xor out (bad) (bad) pop xchg sub mov negb pop xchg xchg daa lret jmp add cli mov push (bad) xor clc ljmp out out sub sti lahf mov (bad) xor push out push add lcall push jle inc movl inc sub (bad) insl gs mov sti lret in pop sarb leave xor icebp sub mov (bad) mov insb rcr jl sub cmpsb xor fcmovbe ret sbb scas sbb imul clc ror sub fstpt cli push push adc mov xor xor mov add ss rcrb mov ret fnstcw inc xor test scas sbb add mov rcl leave jmp scas or inc fsubrl fs into repnz mov or insb rcrl mov mov push jle pop mov add xlat int3 add cltd cli sub inc push repnz xchg mov movsl xchg out cld xlat movsl (bad) divl les mov jnp or dec sub xchg dec inc xchg int3 cmpsl dec jmp fstps cmpsl jle movsb adc js mov dec xlat scas push adc cmp jmp repz iret out popf ja fdivl pop and loopne ret sub scas movsl lds sbb ffreep negb mov mov mov insb lds sub imul pop stos mov lock into in dec adc mov lds test (bad) testb push mov ret clc lods hlt sbb inc xchg dec imul sub cmp sbb adc and jecxz dec push sub mov imul push xchg mov sbb add sub xor sahf outsb mov xlat inc add add or bswap scas sub or mov imulb or (bad) sub in stos lret add inc mov ret mov and cmpsb mov dec add sbb roll add scas popf jge lcall jmp adc inc add std push cmp push fidivr mov rorb (bad) popa imulb push adc pop mov pop gs xchg and outsl or shrl fisubl rcll add aad sahf call stos sub mov lret cli int cmp out mov dec (bad) (bad) xor daa sti and jb mov push sbb je mov pop loop add mov jb lahf ficomp pop out sbb pop or ds mov mov xchg push add dec aam test lret sub pusha out icebp in and movb sbb das loop cltd cmp mov imulb es rolb in pop (bad) stc mov aam imul ljmp popa add ds cmpsl mov xlat pop lret imul or ljmp mov push (bad) cmp mov sub ja and ljmp sbb mov or ja and stos dec lcall pop pop stc loop pcmpeqd aaa adc (bad) jne mov xor mov and xor nop sbb cli mov xchg fildll push neg rcr dec and sub rolb jmp shlb and lods idivb dec fwait insb or cli cmp int3 jae rclb cmp sub lret or movsb aaa mov mov xlat cwtl jecxz andb sti inc pop ljmp pusha mov sbb push xlat jecxz pop leave pop sub mov cld pop into jl rol xchg or push inc push (bad) std ficomp (bad) jmp ds mov mov pop mov dec cld insl and mov pop mov push xchg or lret fdivrl or mov lret in jge xchg sarl std stos mov (bad) ret imul sbb popa inc sub mov sub mov stc dec dec or jecxz mov or loop and mov repnz mov outsb cltd xor shrl aaa add jbe and jmp sub jmp push popf aad lea or add loope popa dec add mov je icebp pop xor int3 sub hlt loop sbb mov sub js fstpt clc shlb sbb stc dec dec lods arpl pop pop jecxz js add cmc das cmc mov and imul sub mov lret shrl daa mov leave or test (bad) pop data16 sbb jp je push or loope xor test iret sub jmp lret mov or aaa mov scas push out ljmp jne cld and cmc sub repz pop xchg xchg fsubrl push add aaa and sub and repz xor sub mov lahf push adc daa mov ja ss test iret idivb inc and pop pop push push out clc xor jbe inc add mov and mov push popa xorl dec rcrb jb ljmp and and notb mov shl pop lea adc sbb pop push popf sub pop jbe enter aaa pop push push mov add stos ja neg and aaa inc push mov sub jg enter pop rclb call dec push push loopne das fisttpl ret mov mov add cmp stc daa xchg nop add pop clc xor mov pop adc jmp scas inc fcmove mov in pop sub movzwl jmp mov rolb lret in and xor push ss pop jle jg mov jp or into pop pop rolb pop outsb and sub adc js push push push nop adcb jl xchg pop sub (bad) pop jle add cmp push mov xor pop adc dec mov lret insb cmp pop out jo jmp imul or sbb sub pop fdivrs mov aad or out pop lods leave in jl ret mov adc or shll jmp jp nop repz js pop xchg scas sub fsubs out in fwait out das je adc adc loop jmp sub inc or shrl pop xor xor or (bad) mov fbld (bad) add ds mov pop add mov add mov out add sbb xchg daa sbb push daa fcompl movsl ljmp pop dec dec sub jecxz test mov jne cmp movsl pop mov shl ljmp mov sub fisub dec je push mov cmc (bad) sbb pop cli mov ret mov add and scas mov push orl cs lock add push sbb sbb dec stc push imul movsl scas repnz xor xor cs lret sub mov pop out rcrb sti cmp jae pop and stos xchg xlat jmp addr16 cmp neg dec aaa repz rcrl fs out fnstenv fcmovbe mov (bad) mov xor fildll mov ficoml push push or adc inc pop sub push xchg outsb push add adc sbb cmpsb push push mov adc stc or (bad) je adc daa cmp inc add mov dec mov push adc aam popf ficomp push xor (bad) in mov inc and repnz jbe push or and inc mov cwtl mov leave add push add loop jns push scas cmp stos and dec mov fcmovbe and sub jp xchg gs aam movsl out movsl adc stos negl jae jg lock or fimul or xor aas dec push imul jg mov xchg dec stos sub push and adc (bad) (bad) sub iret mov sar xchg cmp jae adc mov adc jecxz test mov adc cmp mov push test ds jl sarb out mov sub inc mov jl shr cmpsb jle decl pop jbe pop jmp mov test cmc inc lods jg mov rclb jns scas aad rcrl inc hlt stos fadds push add nop sbb gs cli mov and cmc out cmpsb mov fsts add addr16 shrl loope mov dec jle xor bnd add out out mov imul icebp dec push out mov mov xchg push vextractps ljmp xor adc out aad leave movsb and sub cbtw xchg fs (bad) shlb imul pop push pop xchg outsl lret loopne pushl xor pop xchg test outsl mov outsb mov ret mov js stos mov pop out stos mov dec adc inc jno repnz int3 cmp stos xor repnz mov cli int3 lods leave dec and jge (bad) (bad) std dec (bad) jmp pop int3 aad mov jg ret push pop orb icebp jle (bad) movsb stos stc setb int ljmp cmp xor xor movsb xor mov sub (bad) (bad) jns push cs cmp xor pop pop into sbb xor outsb test es enter adc add adc inc and inc pop das cli cs add dec hlt mov pop repnz pop xor sub mov iret loope (bad) icebp push pop test sti popa stos xlat xor jne push ret incl jmp mov xchg push push mov ret push add dec call popf sti push popa push xchg xchg mov es jg and jb imul dec sub popa lahf shll mov das and push sbb xorb insb movsl cli or fcoms xor test xchg into xor mov cmp cmp sti into xchg pop xor icebp cmp mov adc insb jle push jecxz bound pop repnz mov popf stc out fiadd jmp mov (bad) das inc lds mov (bad) mov pop stos xor frstor jle lahf push call lret lods aas addr16 sub jg (bad) jg xor dec out mov jle inc mov out adc roll pop stc lods cmpsb push ret xchg mov movsl jne sbb mov insl data16 xchg fiaddl out mov ret stos mov dec stos sub and (bad) xlat cmp adc push pusha ljmp pop call inc xchg lock data16 (bad) mov pop sub lahf push cwtl xchg test mov hlt lret imulb and cmp or and xor dec (bad) xchg adc bound fsub jno inc movsl sub std mov aad sub pop jno adc or out pop inc sub pop popf ficoml das int3 bound or jmp imul and ret inc jne sti leave adc pop out xlat cli in popa andl leave xor jp repnz lret jmp mov stos (bad) data16 test repnz dec or into out je and add cmp (bad) fbstp jle and add cmpsb fidivr pop mov add dec out dec lock and sub cmp popf push mov xchg jge (bad) xor mov adc xlat out fldenv insb inc dec lret add push lea jp and pop mov leave inc jmp sub icebp lret add aas push ret dec (bad) push adc mov xor pop sub out (bad) repnz in leave dec and mov fs sub xchg divb or sti cmp jge sub jge shll repz add lret or xchg test (bad) cmpsl or lock (bad) xor add loop sub out cmpsl xchg aam mov add shlb rolb fmull test icebp cmpl add mov dec notl push mov sbb push mov jno dec inc (bad) xchg cld mov pop cli push cmp clc mov (bad) mov mov ja inc or jmp sbb and dec rorb (bad) xor int3 sahf mov sarb dec fisttpl xchg mov out scas ja dec xor sbb and loopne (bad) dec data16 out xor jmp xchg ret push hlt (bad) pop sub aad push xchg xlat xchg mov pop pop dec pushf cmp cltd mov sbbl add adc or jmp push xchg and sub add daa push dec inc and and cld jnp xor cld sub rolb mov mov ds cld and pop add loop push lcall add fwait and push lods or push (bad) mov add sub mov jno dec jb mov shlb cmp rcrb mov mov push (bad) rcrl clc clc orl jg (bad) es add add or nop pop cmp cwtl xchg mov sbb and stos (bad) push jecxz or test sub and ljmp mov pop mov stos jno sub das xor (bad) and sub pop sbb rcr out lret stc fist xor and lods dec (bad) or cld ficom lock (bad) lds lods mov jg ret jns sub lahf insb or add add adc (bad) push lods jo adc add stos mov xchg stc call mov push or andl xchg jae or pop push mov popa xchg jge movsb dec sbb mov sbb mov popf adc ret and push ret pop and and pushf pusha pop push cmp outsb dec (bad) jl add ret cwtl imul in push (bad) mov sub bound sti aad xor out or mov or and push jecxz and pop jl xor out sbb pop mov jg enter lock or adc xor (bad) mov adc jmp shrb gs and mov pop push push push push sti test jne and mov or mov sub jg cmpsb inc dec scas gs xchg push daa ret jne int3 mov pop test and fldenv adc mov adc int aas call cld mov mov dec outsb shll add aaa pop daa lret xlat gs sub add xor mov neg imul mov add add mov in xor scas out lds xor mov (bad) sbb xlat xchg mov clc pop add int3 mov jo xchg (bad) sub incb ret jle sar shll mov dec push xchg adc xchg jne pop aaa adc or adcb scas sub leave add cmpsl and sub push shr jl lret pop push lret pushf mov mov xchg pop jns cmp sub sbb inc sbb out (bad) dec ljmp add stc in sub mov sbb icebp aas movsl jns mov jmp push neg in inc mov jbe or or call mov popf imul dec lods int xor pop popf pop cmp sub inc jbe xchg sub or xor sbb stc push mov jne mov pop (bad) lods addb leave mov pushf push icebp insl push cli loope push sbb xor imul rcrl xchg add push xchg jmp test rorb mov xor jmp jle pop out out inc jg data16 mov mov in call mov and pop stc add ljmp mov enter or sub and imul pop mov xlat cmp call inc das faddl add cmpsl out adc or stc jmp rorb inc stc (bad) enter rdtsc into jmp inc out jecxz dec je rolb pop and sub mov scas sub sub mov fcomip repnz sub mov push cmp or cli iret (bad) xlat xchg cld mov xchg mov add mov sbb lret sar fiadd leave sbb or test lds repz sub jns dec aad cmpsb ljmp (bad) xchg ja ljmp inc jmp mov mov out push push push cmpsl scas js adc cmp ret shll adc jmp mov (bad) inc xchg das mov or adc out sub sbb push and and push shrl pop in mov testl mov jb sub insl and dec add shl dec je test mov jns jbe jbe add mov mov pop loope das stos sub xor jns (bad) lock jmp stc xchg imul leave jne fstpt sub mov add add lods pop and push xor mov sub stos mov les fimul daa rcrb popf outsb cli dec xor cli adc push mov adc ret js sub aam fcompl repnz loope jnp or add mov stos stc add test push and negb lods sbb fsubrs push outsb out repz insl adc cmp sub push xchg or test ret ret aam and pop lret rcrb ret sbb daa fisubrl sbb inc inc add push mov out fs and adc mov clc mov mov xor cs sbb jl jecxz stc sub sbb or cmp or popf jmp das push aaa gs and add mov add mov add daa ljmp xor test mov in stc pop dec and popa jge xchg mov fiadd divl pop lcall and shrb imul xchg adc clc mov shr mov sar gs rolb lret pop fisttp pop push loop fisubr push call pop jmp jb je,pt ljmp adc test ret inc mov or mov lret test pop mov pop mov (bad) cmc sub sub add jae imul lods dec enter test push dec lock inc pop clc sub and (bad) sbb icebp outsl sbb adc push or pushl dec add push fbld ds xor fcmove aad add mov mov ja jmp sub out xor insb rcl lea pusha mov lock mov pop jno dec pop mov inc imul in fcomps shr xor ljmp push add mov jmp testl pop pop xchg cli sub or enter scas add in cmc (bad) jnp cwtl clc pop rcll lods (bad) (bad) (bad) xor mov push lock mov int3 jne pushf xor xchg mov out pop xchg cwtl xchg ja lds aas fmulp out sub xor sub and add jmp out cmp push nop out lret and add sub sub test mov das out xor loop mov lret mov mov cmc jmp iret ret stos lds ror inc xchg sub add xor or repnz aad notl adc jmp dec outsb sub movb in lods push pop imul in (bad) (bad) or into popf push adc push push inc or sub lock push or inc jno jne,pt mov sub dec repnz push fs add (bad) sti dec xchg or daa ret mov out popf inc lods mov lret fdivrs aaa and into sub push sub add xor imul roll dec ljmp sub cmp sub out dec mov lea jge icebp cld adc loope sub lds or out jp and mov popa inc adc repz or mov xchg aaa cmp lahf push test mov or and xchg les xor jns movsl fdivrp inc out pop sub mov jl inc add in sti repnz shrl add ss mov mov pushl imul pop mov or xchg xorb sbb xor jg xchg or add divl imul jno arpl lcall mov stos daa pop xchg and sbb push pushw pop fisub not in and repnz scas dec mov (bad) mov idivl jns imul push adc xchg jmp push (bad) repz dec out jge jecxz ret mov mov xchg fsubrs cmp add pop movsb out sub and movsl jl bound popf cld loopne icebp cmpsl sbb cli jl in stos cltd shll mov popf pop cmpsl jmp inc das (bad) loope jo mov pop cltd leave push daa sarl lret push jbe gs or mov flds daa test sar popa mov add mov aad in xor icebp icebp sbb fmull or (bad) sub pop fisub jl push add in popf pop pushf xchg pop adc jnp mov cs repz aas (bad) xchg daa or mull fcoml lret or and dec mov push xor sub (bad) push pop xchg loop xchg ficom xchg repz daa fsts xor int xchg movsb fldenv push hlt pop bound push push adc mov push cmpl repnz outsl mov or sub mov icebp push adc addr16 adc clc popa mov cmp dec repz add cmp mov jbe (bad) cwtl sbb mov sbb add push jnp shrb fisubrl (bad) mov fsubrl daa mov data16 ja pop out int3 jb es adc add notb add or ss xchg push das sti sub rclb dec and xor cmpsb enter inc add mov xchg in xchg js mov repnz test or stos mov xchg scas xor xlat jae lahf ret in (bad) sub (bad) jnp adc mov out idiv mov clc mov lods rolb sub mov rcll and push mov enter fwait addr16 pusha ret ficomp imul inc test ss push and (bad) and mov pop xchg sbb pop sub or add jmp in xor sti mov sarb jle roll mov dec stos int3 in xor in pop cmp fdivs lock aas push sub movsl sti cmpsb (bad) and and bound paddsb ljmp (bad) xchg out std loopne ret pushl xchg or cmp test stos xor cmp daa mov mov fmuls mov lock and aas and je push into lods lods mov push xchg test movsl add jp jne push loope sbb push test loop jo mov jbe or fist or mov and pop cmp lret out pop out add sti aad jbe xchg and into pushf sub add pop test pop mov cltd enter imul add lret xor sub popf fsubrp fs jmp int imul xor jmp stc fmull lods mov idiv inc fldt cmp inc and and and push and aam sub std push and push or das out out imul xchg sbb pop cmp and dec iret mov push enter stc jg jmp bound sub sbb mov push dec outsl imulb jge jp ret inc (bad) incl fild sub stc adc mov inc or jle (bad) imull mov int3 and lahf adc mull pushf fimul ss loopne div or fcomps mov into add dec stos int3 cli sub pop icebp scas sub jmp stc (bad) sub add gs xchg ret adc mov sub ljmp pop adc sbb mov movsl push cmp mov mov cs (bad) data16 xor inc sub das int movsl inc shrl add dec int push push into pop xchg int3 loop sub lret repz and cli loope lret out mov pop mov push sti mov mov mov dec imul shll ds (bad) dec iret sub sub mov sub sub and cmpsl sub jbe sti push (bad) lret or sbb shrb push out xchg rsm cltd add mov sbb lcall inc xlat jecxz pop rcrb repz push xchg pop sub (bad) fiadd xchg (bad) lods push imulb imul pop shlb sub lds in icebp cmp test ss fadd jmp rorl push mov imul cmp sub mov fisubl repz movb fcompl pop std push ficompl stos mov dec fsubs pop sbb fdivl mov lds mov icebp repnz popa push mov jmp out cmp mov or sti cmp sti aam sti mov dec data16 dec icebp xor sarl scas enter les adc push inc out or loopne jge bound cmp (bad) and adc cmp mov and test xor mov ja gs loop xchg out pop sub loop dec mov sbb sbb xor loope repnz jecxz mov cmp and movsl aad (bad) stos sub in popa jmp lea inc jno cmp add sub add or add sbb shll orl daa (bad) mov or pop scas ljmp stos mov push push shl sub xchg (bad) mov add and imul je outsb repnz sub pop mov inc push or inc rolb int3 sbb (bad) pop (bad) out sti fptan add rcr sub pushf add pop mov pop pop repnz pushf push out sub cmp push sub (bad) jbe mov push outsb fsts repz pushf or and aas fxch ja aaa dec jg cmp or cmc fstpt test movsb stos mov repnz push cltd ds push das cltd xor fildll mov sti arpl mov stos or fidivr outsl lret (bad) (bad) xchg mov pop (bad) push into sub (bad) sub movsb sti cmpsb add sub pop jle and mov divl adc cli cmp (bad) mov cmp bound lods dec movsb mov (bad) adc mov mov loop xchg mov (bad) push xor aad clc push mov xor mov mov leave (bad) loope (bad) sub and add (bad) int xchg dec dec fldl lcall out xor pop sbb xor imul dec out fmuls out pop mov jo popf xchg adc scas popf rolb mov fstl mov mov dec out lods mov sub clc mov pop rcl ret loope push push inc adc adc rorl xchg dec jl (bad) xor and mov and lret sti mov sub dec icebp out cmp lret add mov and sti out sub xor lock push setp and mov jle sub in cmp mov xchg jge shll cmp jecxz and sub xchg cmp jg mov xchg (bad) add mov popf aad mov cltd sub add in rorl and mov (bad) jmp or cmpsl add iret mov jg dec mov push xlat cmp mov sub mov dec pop pop xchg lret int3 dec add (bad) mov dec xor mov inc and js mov arpl jl pop mulb xor push outsl leave fistp into push lea add push xchg and and ljmp mul pusha cmp inc mov repz sbb jnp cmpl xchg ret xor lcall stos bound loope mov pop mov scas xor jl fstl add iret mov stc cmpsb xchg pop (bad) sub rorb mov or xor mov sbb sbb jg push repnz and sub cmpsb xor (bad) adc lock mov pop push push inc cli daa pop push push repnz cmp pop pop ljmp rclb out and aaa cmp mull push xchg out or xlat pushf and fistpll movsl jmp mov (bad) lock leave cmp mov (bad) dec adc and movl mov pop dec scas xor lods mov (bad) lods aas scas (bad) imul (bad) lcall cld movzbl clc lea test notb roll xchg pop icebp xchg movsl push xor ret ja sbb jg push repz aas add out ljmp push add sub out das (bad) sub push inc sbb mov (bad) and test movsb stos lds dec jl data16 aaa in inc (bad) test lds shl pop mov jno (bad) xor push test ficoml jp mov push pushl push jg je outsb and add out push ljmpw repz (bad) test popa xor sub sbb inc sub mov test fsubp push jmp outsw mov addr16 adc sub icebp rorl rcrl testl jmp ret jge and mov (bad) lock mov jns dec flds cld push les mov ret pop mov pop xor in xchg (bad) jbe ret (bad) jle repz stc bound push mov popa pop negl dec movsl cli sub mov add je pop fbstp cmpsl mov std or lret shr (bad) push (bad) jp pop iret jb bnd inc or dec push mov shll inc negl lods int3 pop mov cwtl adc fisubl pop inc ficomp pushf pusha cmp pop sub loop xchg iret adc cmp adc mov imul pusha xor or mov mov leave stc (bad) adc adc mov and pop sbb test (bad) xor subb xor and sarb mov mov test lahf xchg (bad) jnp mov pop out mov mov addr16 fs mov xor nop or pop test xchg out fsts mov pushf add mov add mov imul pop lret xor sub scas sbb or xlat (bad) adc pop dec add mov dec or xor ljmp sub mov pop stos int ficoml push xchg (bad) jb push mulb mov jg pop add sub push add pop add lahf push cmp ljmp pop in mov icebp and and xor adc sti cld out add cmp lods push mov pop and cs xchg mov sbb daa sahf lods aam dec popf ret jnp push (bad) jmp into imul push icebp sti aad jle (bad) cltd scas jle lods add scas cmp (bad) push sbb das (bad) repnz fdivr out aad (bad) ja clc push mov mov pop push in scas aaa cmp mov dec mov dec out xchg mov je fbstp fcom rolb sti fmuls out xchg fnstsw ficompl shlb jne push xchg pop xchg les xlat jg clc movsl aad cmc xlat fwait cli jb or inc dec lcall sub add dec jne nop sbb out imul cltd and and xchg pop mov les xchg icebp les sti sub jb mov shll push inc fxch (bad) outsl (bad) jmp inc mov sub pushf mov fwait mov ret int or adc adc mov cltd in xor fsub sub scas lret or je jno sbb or std jmp push dec lods popf js pop out test in xor flds popf push jg das (bad) (bad) fs lods fisubl ds js iret stos or sub pop mov lahf adc (bad) xor sub sub shll jnp clc push push sti xchg call xchg dec cltd push jbe das push push push dec or sub inc rcl sub icebp gs push movsb call pop mov lods mov ret iret mov push dec std pop or xchg sbb push dec ljmp mov test dec ja pop frstor or fist (bad) int3 xor nop ds rcll pop dec cmpsb je int hlt mov in enter mov sub lret div (bad) add push and into sub mov mov and and pop and sub and sub imull cwtl into jmp sti imul cld cmp cmpsb aas movsl adc lahf movsl shrb lret jle mov stos fs inc bound into and stos pusha jmp je sbb cwtl push or xchg adc xchg and cli imul popf out popf loop cwtl inc or mov xor test movsl xor and pushf repnz dec push inc xor add out and push add fmuls lock hlt movsb sti test sub sbb cwtl sub add in orps cmpsl cmp sub gs loop (bad) xor adc jbe push cmc fwait xchg hlt sti xor cltd mov ljmp jae test cmp dec sbb (bad) mov xor ljmp pop es pop jno test (bad) mov loop push js pushf leave cmpsl jge or movsb push hlt cli lock test xchg or push adc (bad) pop mov xchg cmp aam cmp int3 mov imul xchg icebp dec mov aam jo inc lods and dec (bad) pushf icebp loope inc int3 adc lcall and mov pop sbb pop in pop jo and out dec mov popf xchg call pop jae adc mov or shrb fsubr ret lret xor jecxz cs mov fs stos dec or cmpsl lods pop in and sbb out mov and fsubs ret sti mov into (bad) aaa clc or bound lret stc in bound push fstl aam adc lret add gs mov adc mov rcl movsl bound in repnz clc iret shll data16 mov push fnsave int bound mov xor xor or push imul add incb repz inc outsb ret or xor (bad) fimul in mov imul inc fxch fdivr pop out jge push lret xor mov xchg stos mov mov cmc mov mov push cltd js scas add push sub xchg mov stc cmp jae clc leave mov cmp inc inc pusha xchg rcr mov sahf jmp mov call jmp inc pop daa inc add push ret mov cmp cmp ljmp sub das out movsl jnp cmp sbb sub add push cmp repnz or out mov js mov ljmp lahf push sbb dec test gs xchg adc sbb xlat xor and and or sub jnp ss daa push hlt scas jb (bad) lret mov push iret jmp sub fsubr cli sub mov sub jmp enter or repnz ds popa mov xor mov dec aaa sbb or repz cmpsl imul ret sub int aam das xor push stos adc stos gs out popf fnstcw ljmp fistpll dec mov mov daa or inc lock arpl repz icebp xchg cmp sub (bad) mov pop ss push test mov mov pushw and dec ret orl je pop dec (bad) mov or or or pop xor rorb daa xlat popl sub add push shll inc push and xor push or push movsl aam rorb test dec gs push rorl xlat into cwtl mov into xchg ds dec scas and inc mov sarb hlt xchg sbb xchg or iret dec (bad) sub xchg sti cmp and in xor dec and (bad) dec mov aam xor dec call lret dec and scas or jecxz sub dec (bad) jne pushf rorl out fsubrs stos inc divl sub pop addr16 sub pop pop xor xchg xor js mov popf shlb inc jo cltd cld push jmp jp ljmp mov lea jnp cmpsb movsb imul jne mov out or mov cwtl loopne sub mov jle add into dec pop cmpsl rorl cmpsl mov dec icebp xor mov fidiv (bad) hlt inc (bad) iret sub mov pop scas mov (bad) iret jle push mov mov adc mov pop les imull (bad) or mov push add pop (bad) mov movsb fs clc push movsb mov sub rorb (bad) testb sbb jmp stos sub mov push out adc repnz (bad) or xor jmp push out icebp gs push add jns ret (bad) lret dec (bad) fxch push adc sbb dec lcall call mov pop jmp lea add sti loop xchg mov push push dec je scas cmpsl xchg pop lret mov popa jl add jbe adc and sub aam les sbb pop jns leave jge call pop sub cmpsb rcll daa xchg bound sub dec mov jbe xor test sub sub (bad) loop dec fdecstp outsl cmc dec push add sbb mov (bad) iret mov push repnz jns dec add ljmp mov sarl repnz (bad) mov outsb mov pusha data16 (bad) dec popa lret daa mov in gs out scas (bad) (bad) fadd out dec sub push repnz and jecxz dec icebp dec cmp xchg jmp xor pop mov ret xchg mov sbb pushf mov test je xchg xchg test or (bad) hlt imul mov (bad) jmp xor xor decb clc xchg sti data16 js pop pop mov mov mulb stc aas imul pop and push pop out inc or jnp pop push js jmp push pop dec jae push mov pop push dec out xlat mov out adc or xor mov xlat clc xchg push cwtl jl mov das or mov fs jmp in adc adc shl cmp ret mov pop mov int3 cmc pop daa xor sti lret lret cltd bound cld sbb mov shrb outsl std pop pop in dec sbb (bad) (bad) mul jp push into jp jo pop or dec fiadd mov (bad) sub pop clc call imul mov lcall sub cli push leave and jmp xor lods aad call fdivs xchg mov dec (bad) xchg lods sti fs out stos lret and ret gs and mov push mov daa mov or mov loopne cli in cmp pushf hlt inc in lods aad and lret loop repnz clc pop mov fimull dec roll add mov or xor mov mov dec mov (bad) mov xor push popa add dec jle lock jecxz push icebp add cli xor add loopne (bad) xor pop enter dec mov xor or sub in add cmc fldpi dec les cli mov (bad) mov add sub popa jg movsb (bad) mov xchg inc mov or sti fs andb sahf push or dec mov (bad) jmp out add mov rolb je add scas sub xor scas into addr16 mov fidivr (bad) (bad) sub xor push roll xchg stc into leave (bad) jge call out xchg data16 dec xlat lods pop fs push adc ljmp cld push push call dec out xor out (bad) sti or dec or loop bound lds (bad) call lods fs mov pop lret add push insb xor push jno (bad) negl mov es xchg dec in lock sub and scas pop ljmp lret mov test lahf (bad) cmpsb loopne ljmp loope and sub and adc sbb add mov xor add xor das movsl fist ret and or mov cltd das (bad) sahf leave mov adc test in dec adc mov leave and sar imul pop dec stc jnp scas jecxz daa xlat aad insb mov dec adc dec adc xor dec inc sub cli xor cmc sarl sub push dec and xor push mov adc sub xor imul aam lret movsl pop insl xchg dec mov push inc add add lock xor push sti popa int and sub aaa cmp add pop pop add ret jnp xchg movsl fs cld push pop or test pop add jne cmp in cltd mov loopne pop cltd dec dec jno xchg (bad) int jle test std push jecxz mov adc xchg ret ljmp das test add cltd pushf aas in orl test and repz popa cmp inc jg push cmp cmp and sbb push imulb push or test repz jmp and or sub add pop mov and aas incl sub dec jne loope sub sti dec adc mov mov dec insb cmpsb je out cld sbb (bad) pop inc cwtl mov push ss and add (bad) and and cmp xchg out jmp insl add xchg sbb iret mov push adc or gs add fsubr leave fbld scas sub xchg jl push pop fisttpll ror jmp adc mov sbb (bad) jp in icebp outsl bnd and out aas popa pushf lods and or mov mov cmp scas pop pop les jmp pop sub cmpsl sbb ljmp or jl xor pop push out jo clc popf xchg (bad) cmp xchg jns adc cmp rcl mov enter jbe xor ror fcoms adc sub mov clc negb loope jmp lock mov clc xchg mov mov mov pop test push or sar jle push or lret pop adc lret popa (bad) out jecxz sub push lahf adc sub fs push cltd lahf and pop mov cmp test dec and mov jo pop jmp jecxz insb xor adc mov inc mov mov sub shl jecxz pop xor std mov notl fisubl adc add popf jbe gs dec add call mov mov lea out add or jg scas sahf popa push add dec mov dec mov stos daa jo sub fs pop mov sbbb ds out fldl push out or dec cld and dec or add add or adc push std inc sbb sbb cmp sub (bad) mov add lahf fcompl xor push inc mov adc push add shll ret xor in push mov or mov sub fist das (bad) sub fisubl imul inc popf (bad) nop push decl xchg cwtl push scas imul pop fistpl cmp mov repz notb xor inc and xor andl or xchg repnz gs das mov or sti lock push mov inc mov and or lret and je shlb je xchg jmp shlb lret mov rcrb leave ret push jmp imul jmp js daa les mov xchg cmp mov imul lret pop pop (bad) sub out call and pop pushf cld scas jge cmp pop xor call fwait rclb dec mul test das in lods lret mov rclb xor loop sub xor sub push mov cwtl outsb sub ja add and lcall aad imul push (bad) mov scas cmpsb mov mov mov jne push xor pop cmp loope ljmp cwtl add nop addr16 fistpll insl pop daa push leave js sbb loopne dec aad es push xchg mov pushf test push (bad) loope bnd repnz add mov adc fild das aam daa push lds lret xchg adc mov push testl out divl sub push pop or pop and icebp leave lea scas jne out int3 or jl stos cs jmp popf add jg es test stc ljmp ss mov sub adc push xor push mov enter push xchg mov pop cld inc mov jp dec ret or shrl push (bad) test lret add adc xor das fs mov dec fist aam int xchg jmp repnz push push ret fbld cmp movsw bound add stc xor call (bad) scas fnstsw inc adc mov lret and test fidivl cmpsl gs test stos xor cmpsb cltd pop push sbb mov inc ret jge mov sbb jmp mov fs mov or xlat loop push fisub out imul loop fnstcw iret pop inc adcl or ja sub add mov dec loop (bad) ja mov or inc mull dec adcb add mov out bound lock mov xchg cmc xor xchg imul popa pushf ret out ret test mov adc sub mov ljmp test lret push imul icebp pop pop aas out dec cmp notb add ljmp (bad) lret xor aam mov sub jo pop out xor hlt push add cmp add pushf inc push xor add lret inc xor adc adc lret pop cltd xchg mov scas inc (bad) sub xor in jnp or push stc gs jle fcmovne xor inc xchg jae xor notb (bad) out sub fcoms imul mov dec pop clc adc int3 and mov xlat mov mov jp (bad) jp repz out push adc push repz test and pop int3 test pop dec push xor pop mov (bad) xchg dec cld mov xor fimul les (bad) sub mov cmp mov push dec mov out mov cwtl or sub add daa dec jg add sti rcl xchg or les mov add lcall sub cmpsl jbe adc repz xchg je dec mov icebp test ljmp lret mov pop mov dec dec adc or ror rcrl inc mov cmpsb xchg in cli mov cmp loop push push push out dec inc or loope ljmp lret subb sbb lcallw push cmc fnstcw into sub into pop xchg mov mov ja call push and movsb lods cli mov mov pop aad dec scas aad stos adc fadds xchg jo jne aas jb test mov add cmp arpl sahf je sub sub xor add mov fmulp push mov adc push xor popa cmp lret cmpsb xor out cltd insb cmp and (bad) sbb adc mov std test enter or or mov jecxz out cltd add (bad) ljmp les push loop inc sub sub sub (bad) insb add (bad) out mov aas mov mov sti mov xchg fist out fld and data16 mov cld or add mov cld pop rorl pop mov loop lcall push sub sbb push jbe (bad) scas sub mov mov movsb jge mov xchg addr16 mov cmc jl,pt or int3 mov movsl adc jg jge (bad) sahf sbb inc ret adc jnp (bad) xchg ljmp stc imul daa mov insb mov jecxz sub xor cwtl es add pop cmp repz push flds xor aam bound xor into out in pop mov mov lret fstpl dec mov sbb rorl and inc dec loope popf js mov xor aam xor sub ds and mov into jmp fdivl add xchg dec cmc add pop test sarb xor sbb inc leave into push xor fadds lock pop (bad) add clc clc cmpsb push xchg jns gs dec sti pusha lea and push and xchg dec mov dec sub pop mov jmp xchg hlt ficom inc lods lahf add sbb popf gs pop lods rol movsb and adc mov or mov hlt add pop adc mov repnz sti daa ret data16 aaa loop popf rcll pushf mov adc xor out inc xchg sub aam lcall push add sub sbb pop mov divb roll cld cmpsl and add inc mov lds ljmp jne push sbb xor dec inc jg mov jecxz push mov add dec sar fldpi pop call sub icebp mov pusha pop add hlt jmp sti mov mov push into add cmpsl (bad) adc and jbe pop adc (bad) mov mov call mov les (bad) mov sub sbb xor add mov xlat out imul into ja mov mov push and (bad) std and mov xchg ljmp lret cmpsl les ret jmp xchg cli (bad) sub repnz fucomp pop xchg lret inc sub mov sbb repnz pop xlat lods mov clc mov inc repz aas int cmp orb xor mov das adc cmp push sub jno imul xor inc push pop ret adc xlat out sub cwtl or mov jno and jg and xchg (bad) xchg xchg fist mov sub mov lret insb daa icebp insb mov mov dec std sti lcall cmc pop fsubrs out push add cld cmc sarl test (bad) xor insb jecxz invd inc test repz mov loope das scas sub repz inc sti cli repnz xlat lea cmp jne xchg jge enter and mov add rolb rorl out mov pop stc mov sti mov xor and jbe and pop (bad) mov jae ds push cmc sbb je outsl roll sti rorl iret push pushf mov mov cmp mov xchg (bad) ljmp mov frstor clc imul or and jmp int3 adc ret or lods imul bound push inc pop es xchg cltd push leave sbb loope pop xchg inc inc icebp dec stc (bad) xlat mov jae and xor mov adc daa icebp pop cld movsl push and and push scas xor jmp inc movsl jmp leave sub rol sub sbb sub pop inc stc mov mov das stos sub cmpsl and out mov push jecxz gs loope push pop in (bad) mov rorl xchg jmp add ljmp jbe out mov push sbb push jl mov xor jno cs cmp (bad) call inc mov sub pop mov stc popa add mov ds xor jne outsb jne sti sarl xchg repnz xchg fsubl jae adc xor xlat sarl loop rorb dec sbb mov push jge inc push mov or lret jp subl in les sub addl and (bad) (bad) testb mov (bad) xchg dec ja pop shrl or push xchg jne lods cld lock jne lea and push or mov sub cmp lret and fisttpll fstl mov cmp jmp cmp xor movsl pop xchg ret lret aad xor add faddl fdivl inc into test cli call jp pop xor mov and or push adc add or xor (bad) mov dec shr (bad) scas push sub inc lret xor cmp sar mov mov jne sub add dec sub jle (bad) pop pop pop stos addr16 sti xor repz pop jg sbb rclb sub pop add ljmp lcall je outsl or fldt mov and std out sub fcmovnb inc stos and push mov pop or inc icebp fwait scas xor iret mov test cmc push mov mov or jle lods jnp push xor repnz mov dec into xlat mov xor idivb or dec sbb or (bad) stos xchg stc in xchg test cmp mov pop mov adc test mov push loope insb aad and add nop cli sub and lahf rol xchg pushl jp (bad) imul popf push pop xchg in and leave lcall rcrl dec dec mov shrb or out mov imul cmp pop rol mov (bad) rcl mov mov mov pushf jmp and mov lcall iret push leave sub out inc inc add popa orl popf jno push jle in scas sub jae adc inc dec and ljmp pop icebp aas inc xor add sub jl fcmovb add movsl cltd std iret sub enter or (bad) (bad) jns mov idivl jle (bad) xchg dec mov sarl jmp loop jno inc xor out or sbb add lahf inc rcll call or or pop aam pop and cmp add jo sub test mov (bad) out cmpsb ljmp lods fs and add jmp (bad) mov iret inc test or sbb xor add cli xor jg daa insb or repnz jp (bad) daa data16 and jmp call movsb mov out jne pop cmp mov adc sbb and fidivr sub ret adc repnz aad xchg loope jg clc jecxz dec mov iret stos popa mov lret push mov mov lret (bad) loope mov and and imulb fildll sbb iret mov pop xor test cmc push jne hlt fadds scas mov into sub (bad) or or testb icebp mov in fmull test shrb mov scas loop or add lods icebp loop fisttp and or cmp lock test movsb out (bad) xor and lret fldl insl mov lahf mov dec xchg (bad) jge pop jbe push add mov sub mov jmp push repnz imul push (bad) stos test jmp mov push pop ja jo (bad) fadds mov cmp push and pop gs mov fistpll lea sub pop mov mov add hlt dec repz js mov mov pop daa dec mov xchg mov iret xor idivb mov cli pop popf (bad) xlat out daa and sub pop out lret sti xchg hlt or adcl push hlt arpl mov dec pushl (bad) push jns push mov push jae or call add xchg pop jmp pushf mov (bad) mov adc sub lea pop (bad) xor outsb out stc ficomp cmp divb sbb (bad) push push repnz or and fildl pusha daa pop cli xchg xlat cmp ja clc pop or push mov int3 sub das xor fwait mov push xor das sub xor cwtl mov dec rclb cmp outsl in mov adc cmp pop jge sub and sub dec shrl or mov es sti gs xchg in jg jns (bad) sub imull pop push mov fsub stos insl xchg int xor stos xchg xor inc idiv sub pop and jmp rorl cwtl xor loop push decl (bad) push pop dec pop (bad) out mov ds xchg out sub xchg mov dec loop in mov flds idivl jmp scas and push xlat dec loopne in push mov ss push xchg (bad) push cmp xor add dec mov lods and je add or push mov sarb xor push movsl les ss jle stos imul movb dec pusha pop and lret mov faddp daa sub fwait cwtl lahf icebp mov div push insb xchg imul jecxz pushf test fstl stos mov xchg mov jns xchg add fadd dec stos mov cmp pop fimull or repz cwtl and sub pop jmp out dec rdmsr shrl push jno dec xchg sub cmpsb imul push into (bad) (bad) clc mov push fldenv jns inc loop lret jmp pop repnz fwait sub sub lock (bad) dec mov mov jne rorl gs jmp cmovae dec mov adc or dec lods pop std mov jne in xchg test cmp rcrb xchg idiv bound (bad) outsb lods clc cs (bad) (bad) xor lcall shll pop push sti popf sbb int3 inc lret nop push aam or push (bad) push (bad) jbe inc hlt and ss fcos repz sub sub and sub pop lret sub jmp fldenv push jmp sub xor cmp add mov jb jne pop push fsubrs or icebp or adc dec pop pop stos loopne scas rclb lods mov jg imulb adc push adc or cli push add add fiadd mov mov loop test mov shrl js inc push sub xchg negl in dec mov xchg ja (bad) (bad) fldcw (bad) in dec pop (bad) mov ss mov add mov scas iret inc je cmp (bad) cltd push and les enter and cmp repnz pop fs mov lds sarb (bad) dec cli jno inc inc jo aaa and mov fldenv dec jno (bad) jecxz and lcall mov stos int3 mov adc dec ret outsb inc and or xchg pop fimul push (bad) ja not adc xlat cld mov iret jmp out fisub (bad) (bad) cmp (bad) out and sub pop pop sub imul popf (bad) add and cli (bad) mov in mov adcl xchg sub icebp add inc mov cmc outsl sub daa adc je lret clc test cmp xor repz lods fdivrl imul imul and mov lret gs (bad) mov out dec (bad) jne fldenv cmp sub into lahf xchg mov in scas mov leave (bad) dec test inc popa fdiv jmp xchg mov cmp (bad) lods fdivs mov xor pop cld and cmp mov imul pop mov xor dec out pop or clc daa mov xor mov je test (bad) test sar xchg sub shlb gs fldt pop out (bad) mov test lret sti pop fst push adc mov adc mov mov (bad) xor imul and pop push sub jmp sub xlat mov rorl dec leave in iret mov dec dec ret dec push sbb xor xchg mov hlt adc sbb cmpl stc ljmp hlt push loope add stos xor in dec popf add mov pop inc fcomps mov insb jb repz loope or out dec dec xchg js and sarl dec pop jp (bad) lret (bad) repz lock leave fldcw add pop pushf fcompl (bad) lahf (bad) xor aad pop enter pop inc pop mov pop dec mov lcall push mov jnp xchg add es jg mov dec pop mov mov xor xor inc es push adc loop pop movl or sub push test shl inc jo mov cmp leave test pop pop sub popf jns cmp stos sub (bad) lahf orl ds aaa xchg sbb xor adc movb jbe and cmp or dec ss dec jmp xor xchg pop jge pop ljmp adc xchg aad adc sysret leave test and pop out pop cs mov (bad) mov repnz in daa jnp es sbb bound push imulb and lock repnz inc fisubr mov inc fcoml fs iret lods aam (bad) bound sub in test stos and inc sub sti xor cltd cmpsb adc fstpt scas adc sub clc leave hlt div cmp std out movsl jnp add mov xor xchg popf lahf insb xchg mov dec ja sar or jnp shrb sbb cmp out sub sub in mov ret sub push ds ret mov (bad) adc cmp fbld xchg push mov loope push xchg test xor cmpsb decl sub cmc xchg jo xchg push push inc mov inc mov push addl fs loopne lcall iret sub sahf mov push mov mov sar push jne or sbb test xchg dec and and lret mov dec inc mov pop leave jge fwait lods imul push push jno push cltd sti fs sub nop lret aam sub fisttp divl jge iret (bad) shll jmp mov outsb push iret xchg dec ljmp jo mov add ljmp dec lret adc outsl test movsl jmp nop cmp pop jmp out dec pop call adc mov ljmp pop pop add sbb sub mov jbe sbb pop (bad) iret add mov daa jmp shrl add fisttpl dec jge stc adcl mov xor stos jmp mov mov hlt jb add xlat cli sub jecxz jns sbb mov aam mulb xor pop jmp pop jmp test les adc popf loop negb push jbe jb faddp out add mov sub mov adc cltd sub jnp movsb push sub mov mov jge sub inc mov in stos adc adc jmp (bad) cmp out or cwtl mov fiadd push pop push lcall int cmpsl jae push stc arpl data16 push cmc fdecstp jmp loope (bad) (bad) out fs or insl sub je out leave neg xchg lods dec call fs call pop or in and jle jmp mov cli (bad) xchg adcb inc jge xor push imul pop lahf pop push inc fldenv jle inc stos fcoml aam cmp outsb scas jp outsb mov dec jbe cmp cs lock test test mov imul adc add insb and and cmpsl icebp (bad) adc mov dec (bad) ja inc push mov sti cmp jecxz and call mov dec pushl mov or popf mov xlat (bad) outsl adc cs packsswb ss test idivl out dec aas mov lret daa jnp sub xor negb daa lock jl call aad dec scas popf push sub mov sub notb sar and pop fwait xor enter ret clc or cmpsl movsl icebp sbb add cmpb add pop xor rorb fs xor nop fisubl out adc push ret test (bad) dec into or xchg and popf into xchg pop jecxz mov shrb pusha or arpl shrb push in mov mov idivl adc add lock xor xor add mov ja pop inc sub insb imull add jbe das mov negb sub test jae daa jg sub jg ficomp (bad) pop popf push push mov pop adc and cwtl xor pop popf xchg enter sbb daa xchg xchg nop or push mov lds mul lret mov push outsb dec mov lods pop mov xor xor push sbb xchg insb jp or adc xchg insl in lahf jle sub outsl or mov cmp mov add adc gs out xor mov pop lret (bad) inc and std jo and daa bound in adc inc cmp (bad) ds mov cmpsb cmp dec mov out mul sub sub dec push xchg fs ljmp gs add add lret call popa xchg lret xor fcmovu xchg fidiv ljmp repz jg aad aas mov es cmc and mov add loope mov dec shlb (bad) dec divb hlt sub movsb stos and ljmp stos cmp sahf lahf out daa in scas popf dec scas les mov cld repz ret (bad) mov push adc es gs pop (bad) aas mov fldcw dec and (bad) dec jge xchg push push aas pushl push std cmp adc sub xchg cli or jno mov jo mov mov mov out stc push sub push shlb ja sbb push push jge das mov adc jle inc aas popf (bad) jb push xchg ss pop mov add push push mov add and popf jle xchg add fld add jmp repz pop sub xchg adcb aaa adc out add push pop int jns or add lcall or ljmp push pop sub orl sahf mov and loop mov pop gs push jge cli xchg push and jl or out outsb mov pop and sub out test xor push or je add ds push mov sub fcmovb pop out out pop inc shr pop aas jl xorb pop nop arpl jg mov sbb nop shr jle xor (bad) sub out ds cs pop xchg pop mov test add int3 push aaa push push pusha stc jne js enter in nop shll mov push jmp jne fbld rclb or mov test mov (bad) jge push scas push lds scas mov repnz mov cltd cmp cmp push push (bad) div pusha pop pop test fldl or mov jne in or adc add andl pop mov adc jnp scas ret push lods addr16 mull stos mov sbb jo hlt (bad) mov push mov and mov pop or jg xlat push divb decb jne mov loop das lock out in lahf (bad) negb xchg leave stos sub sub xor ljmp jle cmpsb out cmpb dec xor and mov test add dec loopne js or jg fldcw stos sti fsub out push and jbe into or xor push (bad) out cmp bound adc rorl aaa xchg jne and test sahf shl in and imul call xchg bound icebp jmp insb ds push mov cmpsb ljmp addr16 pop jmp popf fmul pop or push (bad) push cwtl xor faddl jmp das xor fbld push lock ret outsb dec mov dec (bad) repz dec xorl xor repnz cwtl xchg stc add repz push jecxz add mov sarl xchg adc cwtl faddp mov sbb stos movsl pop mov pushf sbb cmp xchg testb leave mov pop xchg lahf notb push jle fs lea lods data16 mov mov or jnp add sub aas adc and stos or out sub pop xor and jg xchg xchg jge movsl add jle stos adcb fbstp stos pop mov pop and push push lea inc xchg and fxch cmp mov mov gs or repz jb lcall mov xchg out jge idivb js dec fstpt push sub push lock loop cmp loopne ret cmp rorl and mov leave icebp inc xchg sarb (bad) mov dec cmc adc shl sub test xor fimull subb hlt repz out mov xchg mov enter out shll jg aaa jmp lock and sub cmpb jo or jg popf push mov push mov fidivl inc shr sbb loope mov mov incl dec (bad) mov jecxz in adc mov stc xor jle or pop cld lret hlt js hlt fwait ret jl push dec sbb fs stc xchg lcall adc out loop mov sbb xor sub sbb sbb or (bad) xchg icebp stos mov sub xor pinsrw aas test leave mov xor ret scas or mov call xor add jae push adc mov mov icebp jl in int3 lock mov outsl cmp into jo xchg mov or jnp inc jb fldenv jnp mov pop adc cltd or ljmp xor mov outsb mov mov ss jp jbe sbb push add push dec pushf mov or loope cmp xchg rolb pop mov dec mov pop test dec cmp mov jmp test leave lds mov mov or sbb or add dec sub scas dec das and daa imul movl xchg sub or (bad) push lea adc push push adc (bad) call movsb clc jecxz and mov sub test (bad) mov jmp in xor mov xorb mov stos lods pop mov pop sub mov jg mov mov fadds (bad) and (bad) icebp xor xchg add mov scas mov xor cli lret popf dec loope scas test add sub cli mov movl and rclb mov ds push clc out ja add adc add dec out mov ret xchg in dec add cmpsb dec movsl repz jg xor into mov addr16 bound jae jmp test (bad) clc das mov sub aam dec push mov mov sub nop iret sub jmp push dec xchg lret sub jbe test ss fimull ret cmp push adc cmpsl inc xchg out xlat cmp shlb xor xor mov mov xor lret scas xor lods adc xor push (bad) mov inc jbe jb imul (bad) daa jg mov out daa xor adc push and sar (bad) adc fcoml and addb adc decb cmp fsubs (bad) cs pop fwait leave push jns jmp xchg lret iret mov dec jmp or ds push fildll popa lcall out movsb aaa sti in sarl cltd aas mov dec and cmp mov in sarl pop (bad) sti fucom cmp bound popf js dec sbb xor ljmp cmp cmpsl mov cli pop sub inc push popf rorl pushf pop mov or loop das into mov and pop mov stos xor scas mov inc popf (bad) mov outsl mov clc (bad) xchg jg cmc xchg jg push dec lcall (bad) jp sub ds mov jg in into mov or push ds add cmp and and dec rorl xor lcall xchg popf push cld stos repz xchg in popa mov (bad) mov jo pop add icebp ret insb jne mov jae daa fistpll pop loope cltd jg ret ret sub ljmp insb call xchg adc push lahf cs imul sbb mov sub in ds dec sub or cltd das push jmp and add (bad) or test imul lock or data16 cmp out pop adc fcomps push or add into and bound movsb pop cwtl subl jmp add (bad) push fstpt cld jmp mov dec ljmp mov xlat xor and scas ret decl stc fisubr lahf cmp or cs test fldenv (bad) lock sbb (bad) mov cmpsl jle push out scas flds and mov stos faddl (bad) mov aaa pop stos cmp jge or jge push push out and add add sub dec add int3 sub add (bad) dec lea sbb xor and mov imul or mov rorb pop push lods mov ds xchg and dec lret fwait cmp xor shrl sub pop dec sub ja pop lock outsl or push call cmp sbb orb das (bad) fsts push pop mov xchg es dec or sbb lret jecxz in movsl push test out scas repz test ficompl neg in insl lret hlt and ljmp in and sbb sbb lret cmp outsl xchg (bad) mov shrb lea sub inc xchg fcoms fist into mov push and dec mov push xchg pop lret mov rorb mov in and xor push jnp jo test and stos fwait xchg pop dec pop pop dec mov in cwtl add push mov lds sub mov orb push xor push outsb icebp and mov test iret out xor pushl xlat lods xor ljmp mov (bad) sti mov dec adc sub mov (bad) jns mov cmpsl (bad) mov in imul sub lods (bad) lock dec mov or std lds (bad) pusha sub mov in fldcw (bad) imul push fcoml pop out popf imul lods movsl lret lret push repnz xor mov popf adc mov mov (bad) adc popa roll ljmp and loop aad dec leave cmp fdiv frstor lds cmp incb push fildll in sahf outsb repnz pop test and jecxz sub push or mov pop push cmp stc sti imul fidivrl pop vpsubsb leave add adc mov into pop pop ds adc pop cli (bad) mov repnz in in push jg sarb stc pop dec push fbld incb cmpsl push and es add or fsubrl mov pop into adc repnz adc dec dec jecxz das lret xchg jg fdivrl outsl test pop mov scas xchg loope sub fmul add inc cwtl and into dec mov and out jg out mov shr repnz sti and mov sub lds mov stc aaa mov jo mov pop jns mov sub pop sub xor push jge push dec sbb inc das out iret leave adc stos testb ds sbb inc push loop push (bad) ds pop push sub lcall dec mov jle push cmc jnp movsl sarl movsl cmc xchg or cli jp fld test repz fstpt jp,pt inc dec mov stos mov push jnp push (bad) xchg jmp push adc mov dec icebp lret les mov xchg lret icebp mov xchg rcl addr16 imul inc and mov xor mov jp inc and pop xor decl cwtl fcmovb cmpb xor push sar lret mov dec mov dec mov mov xchg popa clc sub imul clc xorl mov jbe lret (bad) bound push push lds push dec xor lret mov xchg fiadd ret mov dec loope jp xchg xlat mov jp setne js push sub xchg mov aas or xor inc cmc dec adc mov ja fs pop int3 icebp mov and aam or or clc or cli popa out xor icebp add lret pushf cmp sbb out out xor mov ja pop add pop loope mov bound pop xor loope das loop sarl sti xor ljmp or and dec pushf adc jne mov fsubs adc inc and les fs sub sub and bound sub adc lock mov push inc dec lret hlt mov daa add ret sahf xchg add scas xor (bad) decl and fs lock in pushf in loop pop mul sahf xchg call rcl stos cmp (bad) pop sub out loope stc xor ja pop mov outsb call insb (bad) popf jge je mov fistl loope loop lret leave ja adc and mov push sbb aas xchg cli int3 clc jmp repnz mov sbb mov int popf hlt rclb pop dec enter dec or call ret jnp push dec xor (bad) xor mov sub rcrl xchg jmp lret sahf pop mov out lret dec test movb add mov ret test mov xchg mov loop or cmpsl (bad) dec (bad) into rcrb rorb sub push lods dec movsl mov jb sbb shrl ljmp jnp or or hlt push cmpsb adc or mov loope cmp (bad) sub icebp cmp notb daa jp jns fs push or iret cmpsb push lret xor inc add jmp sub mov call or xor icebp ss lret shll sub mov dec push arpl aas xor gs jns sub hlt sbb xor test xor negl xchg popa iret adc mov test leave lahf cmp das les mov mov dec rcll mov pop (bad) out je shrb lahf pop ljmp ss fistp cli cmp mov dec or xor or lcall inc push loop aam lds aad into mov inc das and fwait mov push out xchg pop lods xchg inc sbb negb aaa mov cld mov pop or and xlat lcall add push pop xor push pop push mov leave mov lret add push mov cmp iret sti es mov xlat xchg jmp and loop xchg inc dec in push cmp push popf nop mov lods sub fnstcw ds sub mov cmp sbb lods jp or add mov jbe das jge inc jne repz mov xor out and cli mov loop pop loopne sub mov and imull loop lret sub hlt cmpsl xor or test call in inc sub or lcall and mov movsb test xchg push inc pop and sub mov ret xchg fdivrs xchg dec inc mov (bad) iret neg adcl pop divb in lds test add push mov shll sub pusha into sub test aam or add lock ret fstp out sub and repz lock fimul call pusha pop and push and sub je push insb out adc adc icebp and popf icebp fmul sub xlat jns dec int in push ret test shr jb or in push (bad) xor xor dec (bad) lock pushf dec scas xlat cs ret cltd add lret mov (bad) xor xchg out scas mov jle inc push pop dec push xor dec or and xor cld pop les sbb xor xor repz sub inc and mov push pop sbb mov xor int sub mov inc scas cwtl mov lock adc push adc nop stc dec lods jmp scas adc fnstcw bound add push jmp cld xchg push mov bound xor fstps adc cwtl fs and mov mov pop loop pop (bad) fsts adc mov das push fist lret pop cli xor js cmp mov repnz xchg jg push ror xlat mov pop mov rolw push mov or leave (bad) mov pop add dec and xor and or xor std cmp push and jl sub insb aas jo inc cmpsl pop pop jle fdivp pop pop repz dec clc out sub cs adc jns out jbe aaa les out stos lods bound icebp xchg sbb loopne out (bad) mov ljmp cmp ret mov ret or push push addr16 dec sbb test dec push (bad) mov mov ret push pop jp xchg enter fdivrs ret fs or xor fcoms bound inc leave sbb xor push dec or sar cmp fucom jle pop repnz jle push push push jmp mov xor (bad) pop aaa loope shlb setne push sub and repnz push sahf dec call and add mov adc movsb add cmp gs stos (bad) pop inc lahf enter xchg pop lret mov ret insl movsb cmp xor insb out adc mov cmp dec jmp mov js mov sbb cmp fbld add mov xor rorb mov leave mov dec fcoms ja ret pop or cmp aad in or mov fnstenv scas push xchg lret (bad) cltd mov aas aaa sbb fucomp lret gs adc fadd (bad) stos loop xchg mov xchg dec mov idivb xor (bad) mov hlt cmp sub je das pop lret (bad) rep lods pop mov pop repnz daa sub rep daa xchg jns add sarl aam jmp mov add into mov idivb mov xor or add or divb push loope and outsb and and out aaa stos jb ljmp cmp add aaa cmp dec test xor outsb mov adc xor jmp push xlat (bad) jb dec (bad) pop fsubrl sbb pop cmp or jne xlat mov call dec je push out repnz ljmp gs xchg jnp int3 movsl dec (bad) cli jo repz xchg notb je cmp jbe ret cltd and bound ret in add (bad) nop (bad) dec mov cmp sub icebp mov fcoms lret mov pop rclb daa pop xor add mov mov decb jnp adc ljmp xlat pop std lds push xor add pusha (bad) loopne sahf xchg (bad) out and lret xor mov sti movsl push cwtl loop xchg test cwtl jg xchg (bad) jge fsub (bad) bound out sub pop imul pop xor hlt aam pop lods mov loop or cmp sub sub lret lods insl les cli int add rcr (bad) lret in mov mov fsubr mov movsl inc pop pushf bound mov cmp lret out iret scas dec int3 leave mov adc sub sbb mov pop push push and or fnsave nop or xlat lds sub and out dec cmp sub mov (bad) ds out mov or lret dec sbb mov and pop jle test sub popf push aaa dec adc mov sbb push es sbb dec adc mov fcmovbe push pop or test xchg dec xor test shl mov xchg push int fstpl (bad) xor mov dec out pushf add push cmpb xchg mov sub addr16 (bad) mov dec sti jne mov sub xor (bad) or int3 cmc or cwtl aas and daa pushl inc rorb incb pushf testl fldl in fs les or mov mov lods pop pushf and mov jp loope outsb dec jecxz xchg fsubrs xchg lock pop ljmp out je decl sti fwait jecxz mov iret fs stos xor dec pop insb or add aas int3 pop sub iret cli cmp fstpt pushf scas mov and xor aas mov dec adcl lock test or jns dec (bad) and mov cmp hlt mov jo loope das jmp push leave mov push sarl das repz rorb fild mov mov lret xlat lcall sub push add xchg mov xchg mov cli insb fnstsw lret add jne inc aas and das fdivrs popf sbb dec mov pop mov mov lahf pop mov add dec (bad) test xor mov icebp pop sbb fidivr insl push ljmp dec sub sub daa lcall and mov or repnz and fcompl xchg repz xchg sub cwtl pop (bad) rorl fnstcw loopne pop lock test lret cmp xchg mov data16 je xlat out sbb loope cmp int3 mov movsl icebp rcrb cld xchg inc jmp sub and and test sbb fiadd xchg pop insl enter mov and ret dec (bad) jmp das loop rcr leave sub scas pop xchg jmp xchg inc enter movsb ljmp out mov inc imul pusha aad pop clc cli sub sub dec pop cli xor or and test shll dec fsubrl pop mov dec out daa ljmp pop jo dec jecxz dec lret dec decl or pop sbb ret adc jne and pop mov js adc cli popa pop fisub shrb dec iret mov jbe popa enter jne mov clc cwtl jae pop shl addw jo popa shlb (bad) xchg mov (bad) std and jmp into xlat out pusha xor push sub sub into pop and mov mov cmpsl xchg (bad) out popa mov jg,pt jp mov mov mov mov push and jmp into mov pushl or insl (bad) aaa in push sub cwtl ja pop sub sub add mov aas dec shl or lds pop fldt cmp or jg out and and add dec outsl xchg addr16 mov outsb xor divl jge rorl xor and mov add pop jp jns (bad) out stos cwtl push shrl ds pop jl pop out test ret cmp pop lret (bad) dec repz and mov fdivs mov jmp jno push mov mov jle idivl mov add jle pop rolb pop xor sub add xor enter repnz loop daa add adc (bad) pop loop adc jg scas push loop add xor sub pop push mov enter dec out push jmp pop add mov sti inc mov pop jmp loope mov test inc sub pop and jp jae roll cmp mov sub xor stos mov and pop mov adcb push mov jns ljmp stc mov add mov sbb pop sub popw jmp mov jp repz or pop jne pushf and push lods and das (bad) pop push pop dec das add fbstp leave ljmp xlat inc lock pop cmp adc lcall pop repnz xchg xchg inc xchg add mov mov addr16 lcall xor jp incb push out (bad) sub add clc pop sub arpl inc jno (bad) imul dec add jmp dec ljmp loope adc aam add enter adc das mov int jne adc adc out or orl mov mov xor xchg hlt push outsl repnz sub mov pop inc and or or mov mov fsts imul mov jmp sbb jb push jne sub lret dec pop les mov pop jno div and fstpt inc and and mov mov aaa pop call inc fwait popf fildll dec sub mov jg insb mov fstpt jmp xor mov xor dec (bad) hlt movl int (bad) ss mov lahf sub mov mov notl add scas mov std icebp in cld sub or dec test repnz mov cltd int dec and mov test mov loope imul dec imul data16 flds call sub mov in dec or xor xchg inc lds cli cltd add outsb cld movsb cld cmp adc stos jb mov push xchg ss (bad) jno ret jne mov daa jmp push push or or mov jmp add cmpsl daa push jae adc pop dec mov ds test mov sahf aaa xchg icebp sti jne mov mov and clc xchg push call push cmpsb cmc dec je out test jge mov add jne and insb enter xchg rcrl or mov and push gs xchg add mov sub or push pop test cs and xor adc sbb test mov cli (bad) (bad) mov cmp lds dec sub dec or divb jecxz pop lods pop mov (bad) cmpsb nop dec mov mov repnz bound sarl lods xchg decb or das mov jnp xchg dec ret mov inc fsubrl push pop xchg rep adc in test xor lds xchg inc cmpsb add loopne icebp jnp aad xchg pop mov jmp imul out mov adc rorl dec sub dec lahf jb xchg sub fsubr push fidiv adc adc add and in push cwtl mov push dec and lret adc int lods sbb stos mov sub ds push or (bad) mov sub gs lock fdivrs push and pop push push push jge inc jle add mov cmp inc cs sub cmp pop negb jp mov adc push jl jb into pminsw push lods ret mov std xchg cs xchg (bad) fbstp nop jbe ljmp icebp (bad) push mov in stos leave mov cltd jno inc push adc imulb push mov xchg (bad) imul sub jg movsl leave negl mov test into and inc xor pop ret mov cwtl sub mov mov fsts cmp mov aas into icebp mov ljmp ret out test xlat mov mov jne push stc popf int3 seta pop loop idivb push mov repnz sbb mov xorb sub nop push pop fcmovb das ret adc pop loop std mov fidivrl push push jmp stc mov mov int outsb xchg (bad) mov jecxz and inc daa push inc int3 xor mov adc movsb push cmp xlat and add das jecxz inc addr16 dec aaa push cmp or mov shll and sub add sbb ljmp outsl jmp xor adc xor fwait or cmp add push ficom out or cli jae jne (bad) leave add pop jmp out jb adc imul lret jno lea popf into les arpl sbb mov dec lea je jno stos fadds sar mov adc push stos sar adc icebp jmp pop xor dec sahf je xchg pop (bad) jbe jmp or pop mov outsl pop and sub fdivr add jmp mov gs jmp (bad) lret lea ret pop mov test dec fadd or add sub aam pop add (bad) mov lods icebp (bad) push repnz out movsl pop dec movsl aam and pop or jl std popa lock cltd iret or add xor mov cmpsl int3 in and mov mov adc cmp pusha lret divl xor mov divb sbb push int test push mov jnp cmp and into out test imul dec push out mov cmp or and std xchg iret and jmp sub and push adc ret sub loopne sub ds or sub pop out jp and inc repnz pop ret lahf jbe pop ret outsb add mov and out outsb sub jb dec imulb enter cmovg sub in (bad) push orb and dec sub (bad) jae adc dec xchg mov mov flds jmp mov out sub notb fs jo or cmp (bad) je mov pop gs ja mov push and lret icebp xor das aaa jecxz adc mov mov in mov stc push imul add mov push lret sub add pop daa mov loop cmc lcall cmpsl fmull daa inc stos cli mull mov jp fcomps inc insb imul fisubr gs pushf stos mov dec test notb pop pop sub negl or mov (bad) jno xor leave push movsb and cmpsb mov testl ret dec sti cmovne jle jbe pop pop push lods sarb adc test mov sub (bad) mov push sbb loopne xchg ja adc sub xchg adc mov stos xor aad mov lcall ljmp pusha mov sub daa cmc mov add xchg mov in (bad) sahf push into scas lea clc jl and push mov aad pushf out loop rcrl sbb (bad) sahf adc clc mov cwtl push add out pushf xor leave das out sub or fcomps sbb pop test int3 pop jmp mov xor lret daa stos and addb popa pushl hlt out xchg or fistp xchg mov fs inc inc stos jbe jle sub roll loope aaa dec or mov mov int xor lret jmp cmp sub js mov (bad) mov aaa dec mov loopne (bad) pop notl mov mov sbb sahf pop mov cmc popw mov jp fldcw pop adc in and cli pop test inc ret push push adc in jns mov sub gs imul out xor icebp xchg rorb xchg mov leave out cld sub leave pop mov adc adc jno pop fildll outsl sbb adc or or jmp lahf scas aaa lret icebp rclb mov imul (bad) mov mov xchg out into popf das loop jp adc addr16 fldcw inc out cli mov mov daa xor fist and mov fs cmp xor cwtl mov insb stc insb pop jb pop mov xchg push cmp xor sbb jg mov push mov xor push cmp xlat cmp and fstpt (bad) scas mov sar add leave adc lock and es and das sbb jnp mov test jmp fimul cmp sub adc xor mov stc xchg jmp mov cwtl fadd popf fpatan leave inc push xor xlat sahf int jbe dec mov xor and std mov push movsb adc dec hlt xchg sar xor cmp inc faddl lds cli jne call dec or pushf mov fnstenv add int3 sarb jnp test repnz sub dec xor mov aam mov jnp pop ljmp xor mov push lret into xlat mov add (bad) mov lret jns lds or out out xchg icebp push sub sub scas sbb xchg add std iret sub xor out jne pusha mov xchg jle das inc fs into dec (bad) jge pop xchg jne mov fdivrs or inc jmp cltd xchg fs add test mov or iret lds (bad) mov (bad) mov add cmp xor cs jmp jbe (bad) leave mov outsb adc sub into cmp mov repz xchg add inc into xchg daa popa mov jmp or cltd dec hlt dec outsl dec (bad) push scas pop bound mulb cmp divl (bad) aaa in mov js xchg outsb jns pushf xor mov and mov test xchg xor xchg or cmp fisubl out mov cmp leave out stc cmp push js cld daa dec lods pop repz mov fbld enter imull lds int3 xor mov mov rorb pushl push xor rcrb sub jl xchg push int3 cmpsb das add mov mov sub in cmpsl pop sti gs push sub adc sub bound jg inc adc fstps cmc mov push xor bound add pop shlb sub mov push xor lock sub lahf clc adc stos loop nop push and and je in ja roll ret pop mov scas bound fdecstp mov (bad) pop and mov jne call sahf das mov pop inc sti pop xchg jge leave mov scas sub jnp (bad) movzbl push add adc jmp arpl outsb lret xchg in adc cwtl movsb lret mov add ss push repz cmpsl mov or dec push mov add xor notl jo xlat jbe push add sub mov repz movsb mov xor jae dec arpl sbb cmpsl test mov ss jl lret fs cli cmp or cld into pop dec mov stos sub movsb jle and fsubl sub inc sbb sub xchg fsubr cmpsl adc fiadd or push ret leave lock (bad) xor dec testl leave dec out lds mov fistp add jns mov fstps mov inc cmp rol push jbe mov inc arpl cli fnstenv mov fs mov push ja loope sahf mov std sub in ret das cwtl xlat and decl and inc data16 sub mov test and fmuls icebp outsl sub popa mov xchg sub xor cwtl lret fidivr je jmp lret mov shr daa rcrb out and or repnz scas inc xchg ljmp loop push mov push sub lods sbb xor (bad) (bad) xchg mov repnz push shlb cli lahf cld mov shlb mov in cmpsb cmp jb inc push mov xor ja jge jmp jne stc add dec xchg or xor adc pop rclb lahf and sub out out add subb loopne sub xchg dec pop pavgb mov shr test sahf xchg or fstl mov lock lds daa cmp faddl and idivb fmul insb inc add lret outsl leave (bad) mov ljmp stc sarb ficomp lcall (bad) sub (bad) lahf sbb sbb dec add cltd test cld mov sub mov fs stos (bad) cmp mov xchg mov add or out sub xchg stc nop or ret shrl inc mov mov ljmp std movsl fbld in sbb pop fwait (bad) mov mov andl (bad) repnz pop inc mov call enter lcall std and daa test out out mov xchg sub pop adc or (bad) and lods pusha rol xor stos mov rclb into popf cld mov notl addl lock mov clc daa add push ret push jbe outsb xor and inc xor sbb jecxz lds and and and cmp xchg fcmovu pop gs incl pop or (bad) or out test adc mov aad cltd sub push and mov cmpb and or pop mov sbb sub or aam pop sub mov iret or xchg loope jl push imull jmp jae int3 arpl sub (bad) movl jle (bad) (bad) popf push scas push pop push pop mov clc add cmpsb ficoml insb pushf sub stc add jae sub push xor repnz repnz fcmovnbe loop mov push push scas fdivr rcrl jo outsl xchg in sub inc leave leave and cwtl pop push mov (bad) jnp xchg dec push push sub std gs xor mov mov add jbe add xor ljmp gs sub or push dec or cltd lret jb xor lods jno enter or cmp or (bad) xchg dec repnz gs dec popa add scas or add cli fisubrl push add cwtl je xchg data16 xor inc fnstsw lods jmp lcall nop adc mov ja push jmp lea add xor insb call leave lret je in fwait test cmp mov lret jmp test (bad) jo xlat pushf aad pushf fs mov xchg or sbb dec leave mov mov aaa mov xor pop mov ficompl inc xchg jae xchg cmc adc fdivrl dec loop fimull je push adc pop fmull pop notl in dec or mov aad pop mov fucom jecxz xchg push xchg sar lret push dec and sahf and pop push jbe ret mov add lret mov pop mov push dec jbe pop pop or pop mov cmc cli fnstcw mov ds push pop ret stc jp jg scas (bad) into pop xor adcb fcos sub imul imul cltd sub xchg fcomps mov and sub cs movsb dec ljmp xor mov in lods jns lds cmp loope mov or cmpsb push push push in daa add jae adc or mov inc or addb inc add cmp orl les mov dec call inc jmp pop dec ret push je jp pop push mov (bad) cmp mov das hlt outsl dec jns xchg icebp mov jge xchg cs or pop test fadds mov and rcl xchg sarl (bad) jb jnp test icebp and lret ficomp push aad or xor sub add mov mov sub popf das imulb pop mov adc or leave mov pop and das mov icebp aaa inc and int in pop mov or jno xchg jmp fdivrl add adc lds (bad) adc (bad) sbb cld or daa test dec test mov aad adc mov cld cmp xor jecxz,pt adc repnz lret or negl bound push and rolb loopne xor cmpsb clc lods pop sti adc repnz leave push inc mov dec xchg popa pop jb (bad) add push mov ja mov mov ljmp jle ror lods push mov gs sub adc (bad) pop in inc (bad) add add and pop jns ja fiaddl adc sub pop imul (bad) xor iret mov leave fldl cli mov xchg lret add xchg adc dec popf jg push mov ja test xchg and ds add xor cmp adc xor out mov lds sti sub xor notl pop or xor sub das je add or add jnp mov mov xchg dec stos into adc mov dec xchg xchg sti aam call inc add lods and xlat movsl (bad) imul and loopne add pop mov jmp movsl dec push dec into cld xchg out mov clc lods cmpsl inc clc ret divl (bad) imull mov sar pop cs das lods inc add orb mov push xchg or mov adc leave xor dec mov cs jo pop subb aas xor (bad) xor jne adc sbb dec xor test (bad) xor lret or sbb clc cmp sub xor fs lahf sarl cmp sub mov insl dec imul sub int3 mov xchg in cmp fbld data16 or loope les out cs mov stos sub not sub retw mov rclb mov or idivb push cmpsb es jno add lret jno xchg shr and xchg and je,pn cli (bad) lret or mov lods decl call imul sub shll push cld movsl pop int3 aam iret sub mov or adc xchg dec jle mov adc int3 and xor mov je pop cld sahf cmpl cmp jl push xlat ret mov add jne push mov and xchg add lret mov sbb push test mov aam push dec push xlat scas lret lds and stos int3 or and data16 or sahf pop pusha das jnp inc pop cmp and sub pushf or cmp pop cli lret adc mov mov popf leave push adc adc out aam test fs fcoms stos dec jge hlt mov int3 mov dec dec (bad) pop test dec sub (bad) or or fbstp mov maxsd gs pop pushf mov aaa lods std mov iret out cmc in lahf mull in inc mov mov imul stos arpl bound sbb out lret jle sarl popf inc push pop loop jg cmc test hlt call pop les jmp test into and add or dec mov sub hlt out mov dec negl mov ljmp stc mov insl mov cmpsb fbld sarl mov pop loopne add icebp mov dec call fisttp imull (bad) shr (bad) (bad) jmp pushl popf cmp adc in or (bad) sbb inc or inc push lods repnz sbb pusha dec sbb mov add lahf push mov pop adc xlat imul xchg js mov sub nop imull jge aas push xor mov pop jp pop pushf jg push shl out call les add pop pop das jecxz dec mov call test push clc jl xlat push scas leave push insb repz lods adc repz adc mov mov sub pop pop add adc and mov dec subb add dec mov jae xchg sub xchg mov daa xor push movsb jne fdivrs sbb cmpsl push and into mov cli pop cltd xchg xor rolb xchg mov sub xor aas xor xchg pushf inc or jg aad jno or inc and popf ret icebp fwait lods (bad) mov fdivr xchg jg cmp loopne aas xchg std mov pop test int3 in lahf or jge (bad) pop leave leave ja or pop outsb fs sarl mov add pop or push int3 sbb leave sbb sub mov call mov and jl adc or sbb cmpsl xchg sahf (bad) fdivrp sbb dec pop shl imul mov dec xchg add sti push jno dec xorb hlt and popa out jnp mov adc mov arpl icebp dec lds dec xor adc jmp out lret mov or inc push inc stos mov (bad) mov insb stc lock add or pop leave (bad) aam loope cmp xchg cld jns adc out xchg mov movsb cld sub lret test scas ljmp (bad) sub fcoms stc xor imull push sub adc dec sbb pop xor daa xlat aas lcall and fidiv jns (bad) (bad) jmp mov xchg mov fldt fist lock pop ret aaa push pop das icebp mov popf icebp adc ret test repz mov testl xor test lret stc pusha push adc mov mov mov cli add jnp and cmpsl outsb xlat mov dec enter xor test in bound aam pop cmp rcrl pusha add mov out xchg or int3 dec xchg shr into rcrl (bad) into or cmp adc leave ljmp xchg rcrb loop mov ljmp mov leave pop hlt xchg jmp xchg mov imulb adc xchg jle lock push xchg mov fdivrl jp adc sub pop jle cmpsl push xor push mov sbb scas cmp and xor adc es cmp xor and or cmp shrb test (bad) sub mov fildll pop cmpsl aad jle jns sar hlt cmpsl mov push push dec add dec out xchg popa iret xor ljmp push mov cmp adc cmp cmp push xor push lods aas mov push mov jnp adc add repnz test pop fldt lret pop (bad) sbb nop imul pop lods mov loope aam pop ret mov jmp mov sarl ss xchg aad cwtl inc (bad) xchg xor add adc int3 loope cmp dec sub inc push aad stos mov pop repz gs jmp inc mov dec inc add sub jnp mov jle ljmp mov in mov in xchg mov test scas repz stos insb hlt bound outsb dec pop mov pop pop loope scas lret and fwait das call or ficomp test jno pusha pop fidivl mov adc mov mov jl mov sub rolb and mov or scas test push fsub mov lret jae mov lret jb inc push dec lds adc mov pop leave iret and bound sahf loope and lcall outsl or push xor imull loopne ret mov cmp xor xor frstor imul into jno sti (bad) jecxz xlat jmp lock add mov les fdivs cwtl ret pop ss cld cmp les mov adc cmp lret (bad) pop jo out into stc sub neg stc xor sub sub call jne loopne fisubr mov icebp add ja mov sub sbb ret sub sub js (bad) sub and jecxz mov push add inc les and mov ja and or fstl or or cmp outsb xor (bad) mov stc add mov neg mov out les ficoml mov inc cmp test out sbb lahf pop pop inc mov dec pop clc out popf inc ss mov je cli mov into movsl inc in and out mov push imul stos sar mov mov or sub add ljmp out mov (bad) (bad) dec rorb scas jne pop adc imul jecxz ret mov sub (bad) daa inc movsl stc or int packssdw xor leave (bad) lods inc mov xchg jle and xchg sarb movsl scas sbb adc or mov sti xchg inc add adc adc je cli push inc jb je mov test mov mov das out inc add out push cmp mov lds add jbe adc or leave dec addr16 mov lret aad push insl dec mov push mov xor add dec mov push cmp inc test xchg out lret ss ljmp fsubl mov mov jle icebp jmp and xlat shll adc push add scas jecxz xlat mov dec xor loop sbb loope fist repz outsl lods sub ljmp xor ljmp sub mov xor dec xchg pop popa ja pop movzwl fcoms dec shrb and sub clc dec mov or out mov sub jg push xor das or leave lock xor push pop sub add repz or mov addr16 out mov movb jne add xchg jg lods pop (bad) shl add ret imul sbb jmp xchg es (bad) cmp sub inc or jle add ret sub push xchg mov out daa into sbbb inc (bad) mov dec stc cmp rorl dec out cltd hlt xor push imul jnp (bad) jp pop mov test pop sub sar sub stc das dec fdivr leave inc lretw outsl mov loope mov repnz sar and ret xchg scas lret xchg sti lret sub xor stos push ror sub pop cwtl cmp mov test mov mov aad out xor ds mov fucom or mov inc in pop dec dec jno sub outsl std mov scas call mov hlt ljmp mov loopne jo xchg inc sbb xchg mov outsl mov cmp out movsl mov test (bad) stos adc mov sub push pop fld pushf repz lds into inc inc fdivrp out js lock sbb cmp inc sahf scas icebp push movsl frstor sub sub mulb mov mov aam popf fist mov push push inc xor lahf (bad) sbb icebp or bound movsl pop xor xor sub popa sub or jnp lods movb ret lret push in mov popf test cmp pop pop repnz sti cltd add sub jmp lret or sub mov xor xchg or fs fs and add sub mov xlat lock and lret bound jle aam leave or pop xor mov xor cmp adc hlt dec fs sets push dec loop pop xor adc jmp mov pop or inc and xor sub xchg pusha sub cs cltd les push das add in push mov xor call xor cld cld push cmp insw adc mov mov jno adc mov mov push jmp lret push dec bound jbe imul cmp pop adc leave xchg (bad) xor xchg ret aad (bad) pop (bad) icebp jmp cmpsl jmp scas sub call arpl jmp (bad) pop cmp out leave sub cmp mov xor xchg popf ja (bad) in cmp cmpsb adc pop (bad) mov or or je bound and fcoml insb jmp push not stc add test mov movsl jmp fnsave and mov sub mov adc jecxz pop mov xor out dec test mov int ljmp push add ljmp arpl mov scas or sub (bad) mov or inc xor mov iret mov mov mov leave inc jno add add pop xchg xchg jmp gs pop test mov sti pop movsb jmp fisttp adc push and xor outsl fstps xor jl xchg gs push jle or add jmp insb sub add das sub lcall repnz mov ret or xchg aad jle jo mov pop sub daa (bad) jbe jmp leave jg jmp sub fldl mov sub hlt call fdivrl xor pop (bad) xchg dec push cwtl mov mov out sub sub lds fisubl dec testb xor daa dec ds dec pop xchg addr16 add mov out xor lret dec imul push scas pop mov sbbl mov je scas add sub out and fcom mov jp or pop and adc xchg add ss cmc xchg xchg movsb mov mov das jle outsl stos ds xor es and fcomps sub mov fisubr pop jo (bad) das idivb push das lret sub sarl mov mov or ss aas inc ss ret cmc jns inc ret stos mov pop data16 hlt or push mov repnz mov loopne fildl sbb sub ljmp mov dec adc repnz aaa dec bound fidivl and jl ret rorl movsl cmpsb (bad) mov and mov test jmp icebp jne sahf push stos leave lahf sar adc mov push movsl fistl mov adc das lea mov std and rcrl xchg repz aam das add inc cltd xor jmp push sub xor xchg inc push mov repnz xlat xchg add std (bad) xor in fs push leave mov scas fist int3 cltd cli test add dec scas fdivs dec inc fbstp daa lret mov mov fiadd inc add ret insb aam xor gs xlat sbb dec leave scas popf pop outsl and lret mov int3 or das or dec add lret add lock ret decb push repz shr aaa fwait in pop cs (bad) enter xor daa xor notb sub sub in pop lahf push lods dec and sbb mul scas xlat cmp testb loop (bad) ror sbb jge fsubl xlat nop repnz or das cmp mov das test lret repz ret mov push insb cld daa sub pop dec (bad) icebp and pop movsl out xchg add (bad) rcrl lahf xchg add out das out jg inc mov rorb sbb mov pop (bad) adc jg adc insl xchg repnz add sub xor jnp pop rcr jmp pop adc (bad) fsubrl mov push cli movsbw jns lods dec popa mov cs dec in dec pop jmp adc inc dec mov sub xor pop dec sahf inc xor jmp sub inc pop mov mov jnp into lret xor push cmp push dec pusha jne mov (bad) mov xor add sub mov push inc mov std mov cmp (bad) pop rcrl shlb xor ljmp push sbb jmp (bad) lret xlat fistp shl add cmp add popf outsl push dec xorl xor push pop pop xor int xchg or call incb and arpl and inc pusha cmp xchg mov jmp pop add push mov jle movsl movsl ja push push pop mov movsb mov xor fsts push xchg dec jle xchg or iret pop aaa out sbb (bad) mov xlat adc or rorl sbb shr iret jnp sub popf pop addr16 xchg cmp jnp add push incl ret dec aam xor mov cwtl (bad) adc and repnz or push push push jg xor sub pop xor stc lcall jmp pop pop int3 cmp jecxz add sbb pop fucom imul push in insl cli cmp ja js add lret pop adcl mov call scas mov push psraw xor pop std add stc fist pusha lret xor xor or popa dec dec ja pop inc or dec movsl test mov cmp push sub pop cs inc push icebp push adc test push mov or out xor sub jbe ret aaa ds sub mov rcll sub jnp pop loopne insb dec fldt or push jge movl insl pop mov cltd sarb dec icebp test movsl incb lret cmp fcompl cwtl ficom mov test push sarb loope add cmpsl and xor xor movsl popa jbe cmp sub loope je test out fst imul divl and adc lea icebp xchg mov xor nop push jnp jl lahf or pop fxch mov mov pop xchg in (bad) cltd and xchg loop aaa or sub out sbb insb lods repnz add xlat aas add loop jne test loop xchg sub movb test sub xchg inc call mov push inc stos loop test fldt mov mov shlb jg pop in mov (bad) adc pop or fildl lret or stc sub icebp jae nop into addl test loop jge popf xchg push cmp cmp loop mov xchg clc dec imul lret xor rcl inc adc decl std nop shrl icebp stc xor push jne xchg lcall mov jnp les push cmp adc pop lret add sub (bad) (bad) jb sahf sahf inc push pop stos sub loop sahf movsl pop in add je jne addb icebp clc rorl jae das addr16 xchg out mov mov or cmp jmp mov xchg aad mov sbb jnp cmp out cmp lcall and addr16 add leave icebp ljmp (bad) jnp lock fldenv ljmp mov lahf xor adc cmp sub sti fwait dec add idivb leave (bad) fdivr out popf pop mov xlat ds mov cwtl popf mov mov nop sahf dec in jno jno sbb das xchg push lods push dec out sub pop sub out fs or push fs mov xlat cmpsl in pop lret mov out out fwait lds and add lahf stc ret mov mov cltd dec lds icebp ret xchg orb test movsl out out loop mov (bad) mov fwait or movsl push das bound xchg lock pop mov pop ficoml shll mov xchg out scas mov mov ret sbb out lods mov dec sub ja int sti jbe bound lret pop jle scas and cltd pop imull repz jecxz pop add mov and shl mov mov mov xor gs sbb cmpsl jle jmp scas xchg movsb cmp movsb push jnp das or in or push or add lds clc jp test jbe mov (bad) xchg sub int3 jns popf notl imul jno call stos mov loop mov out dec push add pusha push mov push sub mov daa push push mov lcall decb jmp xchg and jns movsl testl dec pusha or lret xor pop (bad) jno or scas in lret jmp and mov test adc hlt nop in dec push out sub sub xor in and cmp jbe aas push popl jmp or into mov std xchg repnz push pop cwtl sbb cld cmp mov lds sbbb lds fucomp lret std dec xchg stos mov shlb mov (bad) out shrb movsl push inc adcl cmp cmp jmp into inc dec adc (bad) pop mov xor ljmp add or data16 pop int and sub scas cs dec stos int jecxz,pn push sbb xor divl inc iret push pop mov cmp add scas mov or sarb daa test ljmp fidivrl lods mov xchg incl fistpl and xor push dec add push jae enter cmp mov xchg xchg jmp out int aas xor iret push pop lea repz inc jmp xor or (bad) xor stos jecxz mov aad out lods int3 jb and mov push push xor xchg shr or into xor sub cmp inc push daa or push mov pushf stc mov pop xchg (bad) cli cltd lea adc and ljmp (bad) jecxz pop call rcr mov cmp in mov lret or loope,pt dec push sub xlat xchg lcall call mov dec movsb stos mov ljmp jle pop sbb iret sub loopne ljmp lret test add sub pusha push add (bad) lock and adc dec jecxz mov ja push push or pop ja pop cmp push dec push sub xchg fcoms mov into xchg icebp jns or lock xor pop pop andl or out cmp daa iret stc cwtl dec add add mov sub mov in jge jmp out or pushf jecxz fisttpll cli notl dec dec or pushf pop inc repz daa out (bad) insb xchg repz aaa into je jmp fistl sbb aad xchg fiadd add clc mov push jbe icebp add sub aam (bad) std (bad) cmp jb jecxz dec cli repz pop pusha dec and jmp push xchg popf pop inc inc scas fs mov lods xchg ljmp pop sub in jle cmp mov mov jl and es xchg and jo leave daa adc leave sub in xor (bad) and dec test dec push pop popf fstpt mov and xor ja int add sub add push lock nop mov mov rclb xchg inc add mov and mov stos ret sub fisttp push repnz jbe dec mov sub jecxz pop lea jmp jne jnp fnsave pop or mov insb (bad) mov in loop dec clc adc add (bad) or (bad) mov jmp xchg mov mov lret and xor jnp jns repz push in mov dec jo xor pop cmp fidivrl cmpsl sbb mov cmp dec or mov inc mov popf (bad) outsb sub add cltd subb sub movb lods and pop repz into ds jmp mov sub test aas pop je lcall (bad) jne stos push sbb xchg jmp jne loop inc or dec adc mov pop fsubl mov mov mov sti and lret std mov push fdivl lds mov adc xor mov xor arpl xor out jns inc jmp xchg sub jecxz jg jno mov (bad) fwait jmp pop sarl xchg or ljmp lds push xor call xchg mov push pop inc xchg pop or loope pop clc out mov lret leave dec fsubr notb out repnz shlb cmpsl divl mov loop (bad) into push sub es jp inc cli mov sbb push mov lret adc mov pop cs shll cmp sub and mov popf sbb push (bad) jb addl loopne pop mov fsubr ret push or mov push adc mov sub in test aas popf inc sub or dec dec push (bad) pop mov dec push xlat out pop push push and inc push jo stc rcll push xor mov xlat mov les les cmp pop leave rcl add and out clc stos cmpsb pop mov sbb cmpsl clc mov imul pop and and jno dec test cmp adc sbb in mov rol roll cld das xlat lcall sbb leave fistpll ret scas adc bound and push sub mov aad out addr16 jae data16 movsb mov out and call mov addl in andl (bad) cld mov push iret sub stos sub sub jnp add sub dec pushl mov (bad) sarb dec mull sub or mov imull cld test clc inc imul jo in adc inc and stos inc push pop dec jle sub push cld mull into popf fldenv jns jp repz inc fildl cli bound shrb (bad) sti sub or mov fnsave pop jge lahf xor (bad) hlt xlat scas fsubrl add sub or adc adc fiadd push lret das or push aam stc add je and xor pop leave jbe gs jecxz pop cmp (bad) clc xchg sahf int or jns dec push repz xor sub mov lds and out pop test loop rorb test add add lea sub or pop repz mov lret cwtl inc sub rorl loopne jno inc and mov sub xor cwtl pop call push repnz add lods mov mov lahf sti jge lret pop je jo sub rorl loopne sti hlt out jg push (bad) push out cwtl jbe pop mov xchg fisubrl pop fcoml push loopne (bad) pop jns ljmp std loope sub pushf dec lret test mov mov insl imul repz and loope,pn xchg clc and adc dec push push addr16 out xor (bad) pop sub jge popa jo xchg mov mov rcrl mov gs repnz dec jno cmc xor add jb mov jnp mov jno cwtl stc pop and mov or test aad ret jbe sti ret jno xor ds (bad) xlat jb and and and (bad) nop fadds repz (bad) jns xor lret pop pop pop mov push ror or fs jmp mov pop xor lock fldenv pop mov lret imul mov cmp icebp cmpsl sub loop push push outsb xchg stos inc xor mov lods sbb mov mov push fiaddl cs test imul gs fidivr ret cwtl mov pop push xchg daa cltd mov push mov dec cwtl ds aad loopne jmp (bad) lret and out and sub push mov out pop sarl mov push sbb (bad) cmp (bad) bound shrb jmp add or xchg xor out notl jp jecxz mov (bad) and add rorb xor mov push repz cmpsl int3 stc dec ljmp and lods inc mov and call (bad) mov jg or adc and sub pop or inc adc mov ficomp add sub incl clc mov adc push outsb mov lcall out add cld sub xchg es fisttpll ja enter test ror ret add cs (bad) in pop push and test std xchg mov loopne mov sub fwait imul push ja sbb jbe push push dec adc jle push push aad cwtl cli call leave mov (bad) ret push push cmp dec ret cmc jno inc out clc test sub stc or out dec pop pusha test daa test les pop xchg xor jbe or xchg out lret cwtl or inc in inc cs xchg lahf mov or leave rclb das rorl mov jl ret pop aad out lds mov insb in xor lds fbld cmp insl jle sub cltd dec mov mov dec mov pusha cmp bound iret cmc mov rcrl jl sbb inc xor out mov imulb dec mov mov sub (bad) rorl in and jae rolb inc inc aaa push stos fstl (bad) dec jno xor cs mov iret and into fwait sbb xchg out xor test push pop (bad) in xor cmp movb scas pop mov adc test mov ja pushf push incb and push push fldcw bound or pop cmp mov sub daa sub test fs dec cmp add sbb inc pop popf jo lods mov (bad) and (bad) mov cltd hlt xor das mov push sub pusha test or add (bad) out sub outsl xor call mov pop xchg mov add xor mov hlt daa testl lret add xchg std cmp test dec adc xchg loop jns scas out inc lcall push or cmp inc and xchg dec insl popf leave inc and std movsl mov and sub sahf sub dec sub add and mov mov notl jge test and xchg adc push (bad) je xor xor pop sub or xchg mov add (bad) fstps (bad) adc inc (bad) mov sub cld fstl cmp dec mov int3 xchg jle adc add fmul out xor cmp fistpll lret out pop and aad mov cmp sub out cmp and lods pop and movsl pop jnp int cmp gs daa in push inc xchg imul adcb mov push inc imul rolb mov test mov ja imul push adc and xchg orl dec fistl test mov pop pushl scas incb xchg idiv push lret out jmp mov scas jne xor xchg mov aam test sub fbld es jp mov (bad) (bad) (bad) and scas xchg dec out bound mov push dec xchg push shlb ljmp fnsave push jns clc jecxz push add sbb fistp xor mov push jb les pop or sub mov scas repnz cli mov cmp xchg lahf jmp (bad) test out mov add (bad) lahf dec mov stos loop ret divl je (bad) aaa rorl mov es xchg hlt out ret ja in out mov adc mov data16 rcll xorl pop movsl stos jmp inc cmp negb cmpsb add popf cmc lcall pushf mov and or push adc sub cmp shrb adc xchg push lea cmpsb test and jmp cli jne mov inc dec and adc mov mov push cwtl fimul mov jg loop sub add xor and adc sbb (bad) mov dec bswap cmc inc dec imul je jge dec repz mov pop hlt aam push pop jl push or xchg push cmpsl lds call ljmp jbe dec mov fisubr pusha mov mov jbe cli negl adc imul push inc data16 sub comiss loopne xchg inc add pop fstl fmuls sbb iret imull pushf inc adc jne clc adc mov scas lret and mov sbb (bad) daa in inc popf adc and mov and or in pop (bad) lcall adc mov lcall dec shr (bad) push xchg shr mov test inc scas sub inc lods jmp insb cltd jmp dec (bad) (bad) movsb dec sbb xor fimull stos sub xchg adc add or mov xchg xchg out sbb mov shlb lds cmp rcl out cmp mov call sub xor mov popf mov bound leave jne sti lods jno test das aaa sub leave xchg ret clc xchg out dec mov xor cltd in lret gs fisttpl in fwait and adc js loope (bad) mov test cmpsl mov xchg jl adc add inc scas sub das and ret cmc das repz ds aaa icebp adc mov iret scas mov dec adc sub stos pop push sbb mov test in cmp cmpsl jb les aam adc mov inc adc and mov repnz psubsw sub xor sub ficomp into gs sub stos sub push (bad) (bad) cld fwait dec clc cmp mov incl add jg pop fs xchg push xor fcmovnb and or or (bad) cmc popa test je,pt clc test (bad) mov add mov and adc cmp cmpsb cmp push jp sub lds xor lcall xchg in or and ja and fidivrl shlb pop dec dec (bad) jae loope shrb repz fs fcoms mov lret cmp xor mov cmp insb call mov inc sahf sub sub mov ret cmp and leave cli mov sub mov mov xchg jbe xor or lods subl push ljmp sub mov call pop ret repz cmpsl loope sbb mov out sub into clc imul lahf je push stc add roll (bad) jne cmc xchg icebp mov adc leave inc or inc (bad) stos int3 out sub fdivrs test stc inc adc sbb into mov out arpl jmp (bad) or push xor loop lock pop mov and or (bad) lds lods mov sub adc pop or mov or in loop xchg inc push movl pop lret push or fldt dec and push push (bad) lea push mov xor lahf je popa neg xchg int3 rclb inc sub xlat jge sub xchg mov pop fstl jg sub cmpsb and loop test enter and out sub ret cltd dec mov add sub fisttp xor int3 subb sub sub jb mov and pop int3 sbb mov add lret call stos xor push jb pop ss xchg add repz cmpb fbld dec sub mov fldl shlb test pop push hlt shll fs xlat inc dec jbe xchg jecxz sbb push sti ja or adc xor ds sub mov push stos nop jge sub mov pop dec pop stos inc xor cli lods jg stos mov jns or push pop pusha pop aam test push mov jge andl jb add pop popa and mov pop notl repz sub scas push mov roll mov sbb sub jne and inc add mov cmp dec ja or stos orb mov pop neg inc and cmpsl add popa mov sahf cmp add mov sub xor cmp outsl enter pop sub xchg mov loop push or xor outsl xchg add adc mov cmp push in addr16 neg es xchg popf jg cld sub sarb (bad) cmp jns and rclb lret xor icebp add mov pop cmpsb lret mov ret or into mov xor out (bad) inc add imull mov sarl dec xchg jge cs sti push mov add pop jno xor idivb (bad) fs mov pop clc mov mov sub or cmpb xor mov adc divl idivb in jge add roll xor push mov mov mov xchg (bad) and (bad) push adc xor das daa out cltd icebp out cltd leave movsl and dec stc cmp xor test out out jecxz xchg scas sub fwait and into stos mov cmp lcall jno dec (bad) dec jae (bad) (bad) xor ret adcl xchg ret sub stos xchg leave mov xchg shrb mov lds ret push jns out out lret sub fistp mov xchg das push test xchg mov daa adc bound and push xchg cmp or ljmp or mov pop inc adc jmp fcomps (bad) cltd fidivrl arpl push mov ljmp ss and inc cmp testl xchg adc mov jge xor mov cli sub cmp int3 les daa mov add xor sub mov notl jle lret or sub fistpll xor pop inc rclb add popa js fldt scas and scas std mov in inc pop and xchg shrb sbb xor (bad) push loope lods shr je stos mov xchg cmp out enter cmp mov pop jmp dec mov jge aas add les or inc loop and call jne and jge mov mov bound enter icebp jae bound jmp fwait inc daa push push cltd mov xor out das (bad) imul out dec out lret in clc pop cli dec in cmc or int cmp jmpw jae ss mov push les mul (bad) cmp ds clc dec mov aad add add pop or push mov iret xchg inc mov or inc pop or add add test push xor dec rcll sub mov sbb (bad) pop fild jmp lock jmp in scas nop clc and xchg sbb ret popa or jnp xor dec pop pop scas bound lock sub sub mov sbb jle jb pop nop push das and push jae and mov das cmpsl test pop inc int es mov pop fldcw jecxz ljmp mov sub ljmp int3 movsl out xchg repz roll cli and insb jne add sub push test leave out inc jl pop into mov (bad) xor and or imul pop imul das mov mov pop adc sbb sbb out (bad) cs lds and pop mov and adc jmp out ljmp out pop mov test stc xor jp out aam imul scas lret ret lea pop adc cltd sahf dec cmp push test gs arpl repz in mov mov and inc call or jb sub jb popl xchg ja xchg xor sub outsb mov pop pop xor adc xor das cli mov aaa pop (bad) inc jmp mov cmpsb adc push lea mov xor push loope add shld jb pop jge pop inc loop cmp lahf push lods mov daa or pop or inc jmp or dec jae pop cmpsl popf jle ret fmulp push (bad) sub lcall rcrl push xchg test (bad) sub and mov sub test xor call repnz jp rolb out lahf pop mov incb ljmp or push jno dec mov aad add mov ja mov (bad) sbb push sub xchg adc test mov out jl adc push movsl repnz cmc push (bad) stc mov sub repnz das inc lret icebp ret lret int add sub iret cmp mov jp xor add mov dec dec sti fldl es idivl jb mov inc cmpsl daa daa fcom mov ljmp cli (bad) daa jecxz jmp shlb dec test sub add mov add stc out in adc mov add pop shlb stos pop popa roll mov loopne sub mov pusha repnz sbb daa decb sarb (bad) incl les das fstpt xor sub outsl mov add jg mov int icebp adc xlat mov sub into xor popa (bad) ret jmp and out test adc adc (bad) popa nop mov outsl mov pop (bad) pop sub and cmpb mov adc xchg ljmp mov mov pop iret incb xor decl repnz sub mov (bad) adc ret jne fwait dec inc pop mov dec and lret jnp loop mov jge push xchg pushl mov xchg movsl jle cli shll cmp movsb mov clc mov or out lahf rolb decl jmp sub xchg gs scas xor lret xor inc movl adc sti sti push adc scas sub (bad) mov scas hlt jp mov inc or sar xchg lea call loop xchg dec adc ret je and out ret in xor pop cwtl (bad) xlat mov test mov mov dec push xchg mov pop lret adc pop mov mov cmp push ljmp mov xor clc xor lods test aam das adc scas xchg mov popf mov ljmp roll push pop mov sub adc add nop or fsubrs add adc lock lret jns lea sbb fs mov jg mov out in and pop mov inc (bad) or sbb jg aad or enter repz out imulb icebp and adc mov and enter jnp xor int pushf cli lret inc pop popf jle test out jne and loop push jno lods jle cld ss fidivrl nop (bad) insb mov (bad) jne xor aas mov jne out mov out jns ret jnp lods leave adc mov push std frstor dec xchg popa and xor and cmp ficom leave mov stos adc push ja and repz (bad) leave pop and xchg (bad) push out inc adc or fwait add stc add inc mov adc addr16 das leave pop adc push icebp inc cs sub pushf mov shll fst clc scas pop (bad) rorl push imul call scas sub sub adc push and pop mov ret fistl (bad) repz fisubr xchg loopne inc shll (bad) and mov xchg cs sub cmp aas dec inc leave (bad) dec pop cli push xor cmp inc push cmp dec out cmp adc dec leave (bad) push scas jno adc pusha jecxz or (bad) mov lea push (bad) dec aaa cld push movsl mov call jbe mov jo cmpsl pop movsl mov push mov jge in mov ja mov mov jns add fimul decl incb push loop aad adc lret mov das and sub inc out sub shrl fcmovnu push insl and stos sub das xchg jg jecxz jnp (bad) test mov lret int mulb ljmp xor jnp imul add das jg xchg in call and push mov inc jp lret sub adc loop jl pop je push mulb inc xor pop lock lret sub loop (bad) push sub push xor mov pushf and movsb sbb jno jae add cmp sub add or lahf inc pop idivb adc ret dec cmp lea mov xor mov or out fwait pop dec xor daa enter dec adc push mov outsb sub adc sub mov sub jge ficom pop pop jle xchg push mov adc (bad) mov mov ror test test and mov jmp adc stos sub sub mov packssdw cltd adc loop and in mov xchg mov cmp enter xor jg,pn adc cmp xor mov out mov adc sbb mov adc pop add jmp stc dec sub jmp stos sub stc ret jb xlat mov jnp push out and dec fildl or inc out ss lock sub rcrl lret daa jne add std pushf mov (bad) push jno sub mov sahf dec sub (bad) pop mov pop sahf (bad) incb adc imulb xchg pop or movsl jne inc cmpsl inc push fstpt lods jbe enter add jnp das fs mov test cli adc pushl idiv xor pop jne push adc sub stos int in outsb xor dec and ljmp xorl and fsubr out sahf imul leave or call sti adc mov sub push pop lods cli lret jmp decl int3 jmp jmp mov mov lcall sub jle leave fistp sbb xor pop imul and jo xchg xchg arpl jns test add mov and pop jb leave (bad) scas xor loop stos sub cmp scas mov shr mov and (bad) mov sbb jmp and clc jg enter push cmpsl jle push ds inc xchg bound or into mov test push lahf daa notl and push gs adc sti push pop clc daa shr int3 xchg iret cmpsl sub jmp add mov push adc sub lcall jo inc add xchg in adc mov roll (bad) mov mov jge push iret sub pop sub jp ret (bad) test cmp fnstenv in mov add sti push sub out mov sbb sub sub and shrl inc test mov mov js movsb int3 (bad) sub lea xor adc pop mov fcoms stos ljmp adc jg ja gs icebp repz xor fist xor rcrl (bad) xor jbe pop (bad) loopne mov movsl test mov (bad) cmc xchg fld pop lret jo jecxz pop and fcom mulb in stc rol mov pop pushf xchg loop inc int3 cmpsl leave stos add fs movsl das sub adc xchg mov ljmp xlat sarl cmc (bad) notb repnz pushf outsb imul imul jmp aam das push lahf pushf mov arpl loop lcall inc ficompl and xor pop cmp xlat mov xor call mov test stos mov out pop out sbbb (bad) stos dec push movsb mulb adc rclb jp lret pop popf es adc mov jmp iret and mov mov inc imul sbb mov xchg jmp test fisttp leave xor mov mov ror roll xchg cmpsl cwtl aad repz daa aam adc out xchg mov adc fisubr mov mov loope jae mov sti shlb stc insl mov negb lock pop (bad) mov pop gs loop mov (bad) lret xor mov add sub (bad) pushf and jmp lea inc int3 mov nop stos dec jno add aas cwtl popa icebp stos psubb inc cmp loop div bound adc out push jmp lret add pop lds les or jnp mov adc fildll mov dec ljmp sub pushf add hlt cltd mov mov add adc pop sub xor or and push das push xor pop and dec xor js adc add pop mov add mov (bad) fisubr cmp push pop std push xor mov lret std jno mov sbb inc mov push loopne sti add (bad) call add loop loop xchg mov and ds lock setbe push xor ljmp fiadd lcall add xor (bad) cmp fldt imul icebp insl imul sub cld pop daa sarl lds icebp jge jl fninit scas add or pop rorl xchg lret mov in out xor sub xor data16 (bad) das (bad) cmp xor jnp or inc inc add pop fstps sub cmpsl aaa add loop lahf (bad) shll push mov jne push pusha es mov cltd cmpsl aad (bad) or xchg movsl nop outsl mov sbb xchg xor mov sbb xchg pop iret push push push xchg jnp pop add pop adc test nop cs pop movsb test popf mov dec shrl xchg push pmulhuw or dec pop notb mov mov in or pop mov push push add jl (bad) sub and lret pop popf and fidivr lret scas lods xor into popf xchg sbb imull pop lret mov and rol cmp inc mull cmpsb mov out clc xchg and fsubrl hlt pop jecxz cld cmp push mov mov imul ljmp movb cmp xchg pop xor and pop popa push testb xlat xorl shll adc inc add pop mov inc mov sbb push adc out push xlat mov xor shl push add jmp push push or inc outsl daa pop loope dec rcr cmp ret inc dec mov push pop pop mov push in cmpsl lcall jbe dec xor push or mov mov cmp push mov loop mulb aaa lock fsubl xchg mov mov push push dec adc xlat call adc gs in cmc rclb pushf imul jb int3 xlat lahf or add push rol shr jecxz add mov inc dec cmp or push inc dec and repnz cs mov (bad) cmp je mov xor pushl adc jbe ljmp sbbl lret popa ljmp ret and (bad) sbb mov pop cmc add movzbw add mov je loopne ret dec aaa lret das sub sbb lock push js je dec pushl jmp loop pop jae ja cmp dec xor push push pop inc popf aam push loopne sbb or sub or fiaddl adc xor pop and ljmp add jmp (bad) xor mov add xchg add mov out sub pop in lret test and sub pushf inc inc cmpsl sbbb push (bad) icebp mov repz xchg shr in daa pop (bad) gs cmp push arpl not or cmp or les cltd mov (bad) mov mov daa push pop jns call sti xor xor out sub mov dec mov adc (bad) jnp jl and pop xor pop mov popf (bad) jecxz push je add lods pop mov or add jbe nop cwtl pop jmp push add and xchg sub es sbb xchg pop add clc mov lahf or jns sbb pop pop or inc inc lea xor push sub jge movsb sbbl cmc sbb sbb adc cltd lret push push cmpsb fdivl sbbl inc shr and mov push jle push and outsb fdivr ss add or xlat jne jo orl sbb push or xchg mov test fdivrl cmp int3 push mov pop testb mov add lret dec lret lret dec mov mov sub mov ret movsl dec adc ljmp sbb inc mov dec fcompl iret std in outsb scas inc add adc add xchg shrd fdivl add fist sbb push (bad) cmpl jae sub aam das mov outsb stc clc xchg int3 add inc add pop sub and decb and xchg push nop fadd mov push push lret sbb sub pop cmp mov jno jge das fs out bound add ds lret outsl dec hlt or adc push sub mov iret and scas sub push add pushf mov sub adc aam jbe push test fdivrp data16 pop rol leave pop mov inc push adc mov dec pop mov xor push sub pop ja sub adc mov rcrb dec cmpsb add adc add xchg loope lret mov sbb ss aam pushf cld iret lahf xchg andb call dec imul jg push pop mov stc outsb mov jo or gs mov mov xchg and dec fmull sub into mov and xchg cmc adc rorb mov into xor pushl jmp ret ds stos mov ljmp in mov imul bound lret popa xorl mov and xor ljmp outsb (bad) mov sarl xor pop sub push movsl xchg mov xor cmp repz inc les add and fbld cmpsl loope ret push lret out jl lret or mul fisubl dec out dec mov sub lret lret (bad) xor inc mov movswl adc inc sub adc or std dec popf mov daa pop out mov add pop sub add repz jmp dec dec mov imul mov xchg mov xchg (bad) mov fst shll pop push or sti sbb or sarb pop mov test inc in mov jmp fbld sub clc shll inc dec pop int3 adcb mov jmp adc orb and push pop aaa add xchg sbb movb mov daa sbb ja (bad) lret loope jle dec div cmp ds test sub add mov jecxz hlt push or add dec (bad) and das ds or dec into int jle addl mov rcrl push scas add fisubl (bad) mov out outsb cmpsl adc sub aas mov lret pop dec mov and adc jne push (bad) jmp push cmpsb movsl (bad) sbb and (bad) or add lods ret mov xlat shr sub test cmp add xchg sbb xchg xchg mov sub in add sub outsb ja jns push movb mov (bad) fldenv push mov pop adc pop imulb (bad) movsb gs add int3 pop testb sti lret push pop loopne (bad) xchg sbb and int inc jnp pop (bad) cli sbb std dec add push movsb push test icebp push imul push cld or hlt icebp rcrl dec xchg loop sbb (bad) dec pop push jge mov into (bad) in push push lds xlat jp cwtl dec stos (bad) sarb enter xor mov or add xor pushf sub lret ljmp and out add jecxz pop test xor sar xchg iret out mov dec (bad) xor out orl dec andb adc bound mov mov mov pop notl mov adc xor jmp ficompl popf adc ret rcrl imul pop xchg out pop in lock mov sub cltd dec imul outsb nopl outsl lea mull enter aas in push cltd iret sti add and inc imul xchg sub imul enter inc imul (bad) clc stos cwtl sar lock pop sub lds enter shr sub in leave jo lods es and negb pushf push insb in and and xchg cld push push cli mov pop mov ja sbb xchg mov ret mov loop fmull leave jmp inc xchg jmp inc out lret xchg data16 data16 push xchg or repz xor adc mov and stos in out mov push cld push mov xchg sti sbb loope leave xor ljmp and mov leave cld dec mov jl (bad) xor cwtl cs sub pop icebp ljmp push dec mov into push shl stos sbb hlt (bad) sbb bound testl xorl cwtl leave icebp imul dec sub add lds (bad) xor repz into lret adc dec push rorb fnop ret ret add in xor dec cld and inc xlat push xchg sub (bad) xor xchg aaa scas inc pusha out push clc movsb adc adc add mov mov push xor dec inc mov (bad) (bad) push or icebp into outsl sub out and loopne jbe xlat mov cwtl mov pop mov adc sub push xchg mov leave sub jb and lcallw sub js ficom enter js inc cld loop and pop notl sarl cwtl aaa icebp test xor pop push jb ds int3 cld repz sub out xchg cmc pop xchg jmp push cmp mov inc add loope lods movsb xchg push xchg xrelease and push mov adc (bad) clc gs and iret mov mov scas sahf loopne jmp sub cmc xor xchg imul pop or js jmp leave iret stos push pop int add or clc mov (bad) out and and loop pop xrelease (bad) mov sbb and jge sub std jae clc in stc fimull mov jae aas sub stos scas jnp cmpsl js pop imull mov (bad) mov ds pop mov imul mov in mov xchg and and pop daa stc add test xor ss loope push and sub popf scas jnp je or icebp mov or test les (bad) (bad) push adc popf aam jb pop stos mov or lods dec idivl mov loop out hlt push pop repnz stc mov xchg xlat scas fstpl sub sub pop and nop lods or out mov in cs mov pop icebp xchg (bad) movl iret mov and mov mov jmp (bad) ds std cli jge xor bound cmp xor lods add and fadds push stc push dec jmp (bad) push or pop iret imul aaa sub sub add cmpsb movsb out mov add lods cs mov sub mov aaa aad dec xchg int3 push cli sbb adc xchg testl jp push cli push icebp test mov jb and outsb dec jmp (bad) hlt test push xor push aas cmp and push xchg xor lods mov enter mov mov push dec sub int3 in mov aam and pop insl ss xchg scas mov lds mull mov cs sar cmp scas je cmpsb popf sub (bad) adc inc xchg popa mov mov jmp add lds jmp add adc xlat aam stos lods jmp lret pop adc sbb add cli repz cmpsl repnz xor lock and xlat fs ss int3 jp xchg gs or mov bound inc sbb jno pushf icebp mov in js flds sbb dec test daa sbb rorb mov mov mov sub incl and dec ret mov dec call (bad) les lds xor and enter jmp loop in mull xor insb xor or loope pop mov sub fist adc aas pop mov pop jg mov push mov pop sub std jns xor enter sbb rcrl lods aam push lea sub aas adc decl aas pop (bad) or xlat xchg pop push popa (bad) sub ret inc jmp andl insb pusha loope mov push push pop (bad) xchg add mov jp pop int3 jge xor addr16 out pop and mov sub call or (bad) pop jno lods dec lods pop adc icebp div mov repnz push push pop lods cmp mov push pop mov and pop add ljmp mov mov xchg pop mov stos adc int3 stos pop jle sub or fs outsl add sub add xor movsl cmp roll (bad) mov jne and test test loope sub and pop mov repnz pop jmp xor xorb fimull mov gs adc mov ret and es int pop xor jmp push push cmpsl nop xor rorb xchg arpl imul ja xor or (bad) cli jmp push loop notl imul cmp cltd ss shlb out fidivrl sub sub mov pushf and popf aad into push popa pop (bad) popa sbb stc xor (bad) jno (bad) push adc sti insb das shrl movsl xor add sarl fsts (bad) sub mov enter in loope xorb add imull xor lds out push mov pop jmp mov xchg jp and mov (bad) movsb xor shrb pop and add ljmp and pushf les stos out into or push pop clc in mov and fwait jbe idivb (bad) jecxz into push cltd or inc rorb dec (bad) cmp and mov and cmp leave loope pushf sti daa ret mov addb ja mov icebp pop lock add leave and mov fsub (bad) mov sahf mov imul and stc inc dec mov and movsb dec jmp or and (bad) pop mov jb mov dec loope test lahf rcrb mov jns sbb mov (bad) xchg inc pushf sub daa sub ficoml jl ljmp dec out cli sub ret push imul xor cli rcrl (bad) and ds jle aam jge xor mov add in aad jbe dec adc sub jmp push (bad) sbb ja fistpll push mov lret add repnz push pop and stos adc lods ds and cmc xchg xor or (bad) std ret aam mov push and or add cli cld jecxz xor mov mov leave or dec data16 dec call in in repz (bad) fcoms and call repz fnstcw stc fist lret sub mov fist inc mov mov cmp mov adc mov in lods loop fcomip mov xchg mov fs mov cmp and jmp andb sbb push ds rorb sbb cmp cwtl pop rcrl xchg enter icebp jl out or cld adc lock cs xchg fnstsw in mov in fsubrs ret xor sub (bad) xor in push mov sahf dec push insb test idivb adc dec cmp and fdivrs sar or call stos xor jmp mov sti sub cmp shr (bad) xchg notl dec or stc pop int3 and xchg pop dec xor xlat xchg imul pop mov push popf cmp ret das adc stc es out sub sub je add pushl and push dec imul ljmp pop lods xchg adc and les pusha fbstp mov (bad) mov std dec enter loop dec sub cmc jno gs clc adc mov dec mov insl insl movsl adc cmpsl test in inc pushf sub das nop mov xor icebp mov stos fldenv sub movsl div sub sub fistpl roll popf mov (bad) cmp adc inc sahf lahf (bad) xor das sub jl push inc aad leave and jo pop mov gs lret mov dec mov sub add std dec xor (bad) ss dec dec fs (bad) jb push sbb shl jmp push orb pop fmuls xchg in xor dec add or std sbb imul jbe push add xor adc clc push xchg push inc ss fisubr xor add jno pushf or aas inc jbe or xor loope incl jle ficom lret mov pop or mov jge pop jbe sub push mov push push int xor xor or outsb out push mov pop push mov shrb enter (bad) pop imul loopne cmp or pop push jg mov roll push not push mov push addb iret sti jns roll add mov jmp add jmp inc jecxz,pn mov or jmp testl cmpsb rclb jge add dec lods add jle jae mov sub add ljmp sub add iret pop mov pop and repnz cvtps2pd clc dec mov cli jno out push and fldt les iret adc rclb pop add incl or enter sub scas mov dec subl pop mov add sub ds mov pop push push or mov push sbbb fs cmp xorb push pop outsb mov lahf outsl add mov stc inc pop push mov mov cmpsb add pop ror cmp out mov repz jmp fdivrp push lock jmp or imul adc (bad) rol ja les loope push pop inc clc scas loope push sub sub jg fist and (bad) or repz aad mov mov mov pop inc jbe decl out repz xor jl jp (bad) xchg mov mov or ds add aas loop sahf xchg imulb pop pop sbb push cmp idivb add fidivr andb inc addr16 jmp dec imul mov je mov pop aas aas and lods (bad) ss mov inc and dec out lret dec sub mov icebp insb mov fidivrl mov ret jno dec inc sub lcall je mov inc xchg insb mov test sub sub push jle,pt add int3 sbb dec mov stc cmp out add iret ss scas fnstcw call pop mov fstl (bad) or (bad) popf icebp jecxz dec or pop in dec jecxz mov (bad) lock sbb push pop add js pop sub and sub lret sub mov pop pop pop in (bad) shrl (bad) cli outsb clc or loope out outsl cwtl shr mov imul push xchg jmp repz dec lods adc into inc add push sub ja or shlb (bad) mov mov daa loope push fs mov mov cmc cli lods sbb push outsl mov test push sahf mov repz in mov jae pushf imul (bad) mov add mov xchg int3 jae ljmp icebp ret xor lahf push and inc push mov mov fisttpll cltd pop lret mov fs icebp adc addr16 push lret pop test test mov ret jns mov lret (bad) jno mov xor (bad) aad ljmp bound xchg in daa and out add push cld dec (bad) call cmp push inc mov sub int std lds outsb clc push cmpsl (bad) xor lds fs push sub jb and sub cmpsl jg add loope outsl mov xchg sbb test mov frstor pop sub xchg sub add pop fistl subps frstor (bad) in pop adc pop loop xchg ljmp into cmp sub dec mov sbb adc scas lret sbb loope int3 dec dec outsl in lods push dec pop shufps ljmp fistpll loope,pt jle clc xchg decl adc inc fsubs pop gs sahf imul pop jecxz xchg out mov mov and cld stos sub fs sub xchg push add les xor dec xlat out cltd mov (bad) sub fdivs cmpsb mov icebp xor xor push adc mov xrelease mov std imul aad push xchg sub cmp cs loopne xchg sub cmp dec xor jecxz,pn dec aad xor mov fsubs bound into movl mov popf movd pop inc (bad) push in aas lret lods mov mov mov jge and subl test test stos lahf ret and sbb push jle inc sub outsb (bad) enter and pushf jg xchg imull mov pop repz and mov cli cwtl xor lahf fcmovnbe aas sub (bad) and cld jp mov inc leave xchg popa pop (bad) arpl stc lea inc xor mov pop add fbstp icebp or and ror scas mov dec pop cld fucomip int push pop jge rolb pop mov pop mov sbb aaa sub fcomps mov pop or sub loopne jle lret cld in imul push bound sub sbb insb and test xor out fdivrl stos mov loope mov cs sub pop insb push and sbb jo stc mov mov lods out scas nop mov pop les or rol jp jo daa lods adc lea (bad) sub shrl dec xor negb xor mov and (bad) or sbb clc fdivrs dec idiv pop pop ljmp xchg dec xchg xor jne xchg rclb mov out pushl mov lods lds fnstenv pop jbe push and popf fidiv xchg enter imul sub repz cmpsl jne mov cmp movsl in test jecxz test call jle stos ret jne clc inc (bad) and xor xor inc xchg bnd daa inc sti hlt setne mov jmp push push mov mov xor (bad) imul jbe daa mov mov inc test ret add push stos mov clc int jbe add clc cmpb inc (bad) bound popf js movsb pop fld and and sub dec (bad) std lea mov cmp mov push mov into dec aad dec mov mov cmc inc fnstsw (bad) in imulb sub add xchg sub jp lds les shrl push dec push imul xrelease jnp adc dec lock into add mov test (bad) movsb loop pop mov movsl icebp xchg in jl fiadd repz je cmpsb (bad) pop iret fidiv and mov (bad) push jmp mov negl push pushf (bad) bound adc iret test adc push xchg jns hlt mov loop test and or or frstor sub xor iret sbb mov (bad) xchg (bad) xor fimull or das divl imul rolb dec (bad) (bad) ljmp int xchg inc (bad) loopne call scas jmp lea icebp pop mov mov arpl ret mov dec loop lds lods mov cli int sub test sti call lret stc push sub add and jmp lea cmp clc sbb mov ret push inc (bad) sbb sub mov cmp nop mov dec imul push popf mov aam push lock pop cwtl mov inc daa mov lret loope mov les aaa (bad) pusha ffreep mov xor aad pop mov lret add ret fmulp aaa inc lret jp movsl repz mov lea bound test mov inc imul daa fdivr outsl inc add cli jecxz cmp iret xor fsubs stos pop hlt test jae das pop xor jle add out repnz sub ds addr16 dec pop test scas sub adc or call dec xchg loope sub scas adc sbb in daa mov pop cli sub lods fist xchg pop sbb push sub lcall add jp dec aaa repz test or adc jl fs mov xchg xchg out lea pop cmp pop test add (bad) out push cs sbb and pop sub or jne mov lods rclb ja imul lods out sbbb jp dec idivl mov adc daa rcrb push pop mov mov aam ret pop daa ja pop pop sub xchg or cli (bad) push int3 (bad) (bad) mov lods or push mov xchg fmull mov test xlat mov push mov addl cwtl inc (bad) mov ret cmc dec mov mov dec xlat xor incl dec mov sti not pop mov jb and loope outsb test imul push xor out dec stos fld1 cmp lret pop test test (bad) pop dec xchg sub (bad) stos fnstcw xor mov mov mov out jg stos in dec cmp adc repnz and pop fisubl xchg dec icebp icebp sub xlat xor scas in xor inc xchg aas mov xchg clc out test icebp push lods sub and sarl nop dec push pop xchg int3 (bad) cmp addb dec adc aad mov jno add jmp arpl jbe arpl shl (bad) data16 add dec inc pop mov out bound out jae sti jae dec cs jmp add aad jle cmp pop mov cmp (bad) mov adc stc aam rclb out jb add lret dec sub stos iret popf sbb adc and cmp jae idiv xchg pop mov aaa push mov int3 adc bound add push dec sarb roll pop aaa jge out inc push hlt fdiv ret pop mov mov shrb add jae and mov mov push mov cmc push fisubrl adc mov aaa push push push cs or subl cmp stos push or shl not jp std add push mov insl pusha cmc inc sbbl push movb jg fisttp push bts stc and cld mov add es add shr add fld pop inc mov jg sub and add mov lods pop adc jo mov pop rorl add fnsave dec add and add jno push push movsb push xchg sbb in ja insl pop add stc mov mov lods mov jecxz negl cmp ret xlat addb shr add aas daa add sub rcll (bad) jge and mov cmpb push lar popa (bad) xor pop sub test pop sar scas negl or or cltd xchg fimull lret pop pop pop out dec adc jno add mov es sub je dec mov cs clc shlb add cmp das mov add notl pop dec adcb mov inc or sbb add jae jne aas jmp push cld and inc sub and out imul cmpsb mov mov inc sbb rcl add call sub and sub (bad) leave or scas pop add mov sub pop or icebp aad mov adc pop stos or out mov loop jp push aaa aad out mov add mov or or push loop lds sbb int3 aas mov pop das (bad) cmp jb stc mov scas xor rcrl inc (bad) imul sti je stos rcr lret add test leave sub add loop push pop or lds jl movsl pop xchg push jne icebp test out (bad) leave rcl mov xor ja mov lds movsl fsubl notl cs shrb push dec mov push jbe lret and lahf sar imul mov (bad) (bad) test xor sub pop and data16 popf hlt stc in ljmp adc lret mov jge lcall mov fistpl repz and jno test popf fdivrl inc push adc clc movsb mov int cmp inc and or sbb repnz in loop aas shrb sub push xchg jecxz sub sub xchg mov xchg out or roll dec pop pop and pushf mov sub test xchg or roll jge frstor ret dec adc lret push sub jle bound negb add gs mov jno or cs das call loope mov push hlt (bad) mov pop jl push fdivrs jmp sub sar mov ret in sub (bad) pop lahf aam pop add add pusha andl ret inc push jle pop shrl cmpsb cli lret iret or mov loope sub popf das hlt pop pop repz mov mov cmc sbb outsb lods pop mov int3 popf add call mov mov lock lret in add scas mov sub cmp pop push sar daa out mov out jbe (bad) imulb mov jne test mov dec out xchg cmc repnz mov inc test les shr cmp cmp adc and sub add cmp xor xor cld fimul cli mov pop int aas aam incl mov mov aam push adc pop adc fwait hlt das fnsave jle push out mov inc sarb leave mov jmp or int add and xchg jmp les cld mov (bad) sub scas arpl jmp dec jmp (bad) sbb sub push mov xor push dec arpl xchg out scas fmull pop xor ret rclb lret and mov mov and pop xchg movhlps jb lret dec jmp xor in mov in mov cli pop mov xor add out andb je jns or mov xor xchg lret (bad) push mov clc aas gs lahf inc inc out jp repz and les mov dec add (bad) add loop out aas adc sbb push cwtl adc inc cmp das add push mov pop sub cmc xor jne push dec cmp jmp negl dec mulb mov mov jl stos sti out dec clc adc xchg mov mov (bad) jmp popa icebp stos dec push mov add mov push fistp fldl or scas out std daa rorl push imull movb xor fcmovne adc xchg inc (bad) (bad) (bad) cmp call dec addr16 test ljmp push rcr inc movsl sub stos push sar gs adc orl cmp leave cmc add stc icebp ds arpl shrb shlb aam incb lahf jns (bad) lret loop nop das xchg ljmp dec stos sub stc xchg xchg out repz daa (bad) std sbb and (bad) popf into cmp les mov lcall cld cmp idiv aam push dec mov shlb xchg fsts fstps jns mov sub or insb cld dec add movsl mov dec pop loop adc adc cwtl mov aad int or out popf mov out pop push test jmp in sub and adc mov adc (bad) cltd add dec mov push into xor xor daa enter pop fistpll mov sub sub push mov adc sub pop (bad) aam scas mov pop mov in es push pop fdivr ret mov mov into mov or out psubsw sbb xchg jle cmpsl pop (bad) jns movsl ffree xor cmpsl (bad) jae add cwtl lds stc mov jmp or xchg iret add (bad) into sub and or sub fsubrs pop dec cmp aaa addr16 add xchg (bad) mov inc pusha sub xchg aad jnp (bad) mov std fist out mov inc xchg and xor jmp movb iret es out pop inc rorl pop stos icebp pop adc fwait adc mov ret mov cmp pop in mov jbe pop addr16 or cwtl rcl rcrl sub mov jmp mov (bad) mov add jnp mov pop mov mov sub mov dec jmp mov push push arpl sbb lahf adc test dec out ljmp mov mov mov sub (bad) xchg fsubp mov adc inc (bad) sub dec cmp jns jns push inc movsb adc mov lds idiv pop movsl pop cmc lods push pop and mov ss sub or mov fsubrs pop inc sub xor inc lods outsl cmp out fbld inc adc aaa jge test xor loop movsb inc fistpll xchg add cmc arpl adc mov lods outsl mov dec push idiv jmp xlat out test mov out and and scas mov das jmp add aam sub fucomp es mov sbbl push sub xchg fsts pop out dec inc les (bad) (bad) enter fcoml inc bound test pop ret (bad) adc ljmp jo out jnp add fisttp fnstsw xor leave mov xor xor in adc mov je dec mov dec mov adc sub xor data16 (bad) (bad) mov push dec scas lret ret pop outsl clc lret cs clc movsb lcall lds (bad) push movsb or sub sub pop mov or xchg inc dec ret sbb dec mov sbb mov addr16 mov pop pop lds xor add mov mov sub mov sub repnz dec mov roll or ljmp xor dec scas fnsave das cwtl push lret lret daa ljmp pop xlat sbb mov xchg and jmp dec (bad) xor sub fcmovnb fcmovb lcall lods mov adc fiadd sbb mov movsl push rolb fdivrs push imul ret adc mov lret xor mov pop out (bad) adc pusha sbb loop cld addr16 push mov push test (bad) aaa mov xchg push stos fisttpll mov mov pop call setb insb mov mov icebp sbb aas add rcll mov roll sub mov ret push shrb lret cli cmp rcrb outsl cmc in mov mov cmpsl jg sbb and xor or pop sub mov sub rcrb fs cli cld add out xchg pop mov mov movsl enter adc mov iret inc xor fist out out mov mov xchg mov dec mov sbb jp mov sarb push pop push mov dec not shll add ljmp dec pop out pop jmp dec insb mov ficompl jg aaa add inc and jle insb rcrb xor je push sbbl cs add lds sti jo jle mov rorl add aas xlat ds mov lret test (bad) out mov inc addl incb out sar jl sub test in inc sete (bad) mov dec out mov addr16 sbb push or mov (bad) push and push push xlat xor xchg jl cmp sub fidivl das aad mov pusha pop mov or jg cli jo clc imul push ljmp fwait stos adc (bad) pop fiadd stc add pop xchg fnsave (bad) aaa insl mov jbe push cwtl pop inc jle jne add insl scas sub pop mov cmc cltd bound push in inc push sti in (bad) dec (bad) mov xorb xchg (bad) pop and add add popa jg rorl mov push cmpsl and dec pop xor pop push push mov pop xchg push xchg notl cmp mov iret out fidivrl sbb loope repz mov stc iret sub jge (bad) hlt rolb and or pop inc sub outsb add push jle xor add aas add std inc xchg mov or divl lds push mov push ja std decl (bad) sti adc xor adc jge push cs and xor dec push int3 pop and inc adc lea cmp dec (bad) inc add jmp test dec cmpsl movsl (bad) dec xchg mov leave ljmp rcll movzwl repz jb sbb orl div mov mov add pop add clc jbe out or cmc in daa in repz shlb out push lret into sbb or cmpsl out gs xorl cmp jbe loope xchg sub daa notl xor xchg inc xchg jno adc and out xchg int movl sbbl mov jl or ret das stos iret fidiv push adc popf lea cmp cli jge imul sub out adc xchg fist daa (bad) jl pop in xor hlt mov out imul imul lret and push fdivp push or push imul bound add inc loope cmp xlat out adc sub sub test ds mov das adc std jo adc add leave loope jae cmpsl pop xchg sub fnstcw push mov dec sub outsl xchg push dec popf dec and into daa mov jge notb lret and jecxz gs (bad) lret push out popa ljmp iret ds mov bound das push lock add scas mov and or push adc add scas je fadd or daa pop lcall adc cwtl pop out push and dec xor test xlat int3 cs xchg pop xchg stos and out popa mov out cmp rolb jno mov jbe xor lret or fldt mov pop sbb xchg icebp dec lods mov imul mov add pop sbb decb call mov sbb sub push out lret mov xchg jns popa and pushf cld leave jb es imul jb cmp jo xor out gs jne lea or lret pop jp sarb add mov or dec mov xchg mov add or call stos (bad) into cmp or ret xchg pusha or mov cmpsl das fcoms xchg mov sbb fidivl add aas cltd inc clc sub stc ret xor cmp pushf pop mov aam xlat jmp movsl sbb arpl lods pop loope and test push dec mov jo mov xchg dec sbb mov xchg stos sbb cmpsb ja stc imul insb push xlat push loop lcall dec call jle push daa mov xchg pcmpgtb mov mov jo xlat mov jg (bad) xlat sbb add jle ret (bad) pop shl mov gs jmp and ret mov xor mov lret fisub (bad) and daa dec cmpsb dec loop lret sarl mov pop mov fldenv outsl andl dec int and ret xchg push pop jae or jge cld lahf adc xor pop lahf xchg fisubl neg movsl and loopne xchg dec push and sub das and adc ret mov lea cmp rcrl pop fidivrl ficoml mov call ret popa xor add (bad) scas (bad) mov aas stc add sub js loop fstpl movsl cwtl pop sub xchg mov imul mov push sti div ljmp clc jge add (bad) aas sub in into sub (bad) leave or sbb mov cltd imul mov ret sub sti sub gs out cmp ret repz sub sub test stos mov pop sub lods enter or ljmp push jbe or pop xchg sub or lds xlat inc fldl das and aad sar scas adc inc cltd mov lret sbb bound dec test fidivr mov and dec sub dec sahf mov add fidivrl pusha cs jmp adc mov xor add cwtl dec out gs loope add in popa add out xor or or jge xor inc insl mov sub mov pop push or xor cmpsb xchg das mov out movsl pop jle sub cli test mov xor leave and stos push sbb inc cmpsl pop cli xor sub fsubs push inc push push (bad) jmp div push push lcall ret hlt mov sub lret mov sahf insb inc pop mov or inc lahf frstpm(287 jno subl and xchg push jge cs add mov cmc jno outsb leave and pop fs push mov (bad) fiadd mov pop mov subb xchg push or sub lret sti (bad) nop pop cmpsl outsl loope cmp ds mov std out mov xor xor decl sub sbb lods enter mov imulb pop fnstcw clc and and outsl les int sub ljmp mov es data16 xchg lret sub inc xchg adc pushf add test aaa outsb mov cs sbb (bad) jg rcrb xor es inc imul cmp shl data16 xor and lea push push sub aaa xchg imul adc add stos sub sbb fldl fldt mov fsubrl sbb loopne and fucomip adc imul jns popf lock push xchg dec xor popf jo test fsubs sbb or mov rcll lcall pusha ss aam jge bound jg cld dec or mov jne data16 std test or ja and xchg mov cld mov cld popf in mov push or int3 sub dec out ljmp mov (bad) xor bound xor mov (bad) cmp mov xlat mov cmp int3 repnz mov repnz pop std vcomiss daa icebp xor movsb aam and repz mov sub push in in lock sub push into out xor rorb mov xchg in cld lret xor cmp lock std cwtl jno divb dec dec ljmp shr cmp sub shrb xchg jg dec mov mov sub adc inc xor mov data16 (bad) xchg dec bound lret or cmp call (bad) or addr16 insb sub jb ss add mov cmp mov sub imull lds (bad) mov push cmp sub loop push sbb mov into mov sub mov mov mov xor or jp inc into push int3 and xor mov stc jecxz scas cmp pop xchg mov dec push mov and mov es ret sarl iret cmpsl aas dec popa cmp ret repz cmp out pushl mov xchg mov mov rorb cmc sbb jae or and or add inc movsb stos mov jb and sbb pusha mov mov adc mov stos cmpsb jo iret xor ss in leave repnz jge pop out xor or inc (bad) jbe sub cld cmp xor pop nop std pop out and or lock fs dec (bad) mov gs mov (bad) pop or mov mov jmp fsubl ljmp in cmp push cmpsl hlt pop push sti xor sar and pop pushf clc add mov mov mov fnstcw xchg rorl sub mov pop das mov push repz mov dec mov outsl jmp imul jne dec dec dec out ljmp and test pop pop pop dec movsb ljmp dec xor mov (bad) decb xchg push or dec and sub movsb sub adc test icebp lahf jg test xchg fist and mov mov ja cmp int or and mov popf push dec xlat sti fnstenv cld into movsl (bad) pusha (bad) ss iret xchg sbb cwtl or pusha pop repnz cmpsl inc jmp and lds push xor jecxz xor pop mov sti imul ret fs ja push jb sub inc adc jge jmp xor pop or scas bound repz xchg mov out inc icebp lds sub inc js sbb aad lahf jle dec loope jns and sub fdivl imul mov jb dec sti cld and test scas mov into lret rcr add sbb mov and push or mov adc std aas fadds nop (bad) pop mov sub (bad) das sbb mov xor pop jecxz (bad) sub mov mov in lods mov cwtl dec and add mov and lahf fneni(8087 adc lods ja enter mov cli or push stc inc mov mov add test orl xor out and add and lret jge fs adc adc mov sarl ret test dec push (bad) pushf push mov mov or jmp andl inc inc sti out add or mov imul pop lret fidiv pop (bad) jae adc adc pop call xchg adc xor pop jp cli out mov scas out add fbstp adc jbe aam fdiv push add adc fsubrs out push add sbb jmp xor popf xchg call ret (bad) sbb sbb sbb jbe push jbe mov xchg (bad) lcall jp out pop fmull sub out in scas xchg mov dec (bad) adc mov fsubl (bad) sbb imul add push (bad) mov pop adc pop clc jns lret pop aas jmp push xor xchg int3 mov pop loop jl push in sub popa dec and movsl test xchg lock icebp xchg pushl mov adc loopne sbb push mov lahf push stc adc (bad) or xor (bad) xor ret cs lret js pop out adc push clc enter outsb adc xor or fiaddl (bad) dec scas adc loopne ret or push push jbe add bnd pop ror mov and data16 lret sub hlt enter pop and std mov je inc shlb rorb stc repz jmp loope inc ss stc mov divb sub lods bswap add lcall pop (bad) push (bad) dec push and mov clc out mov inc sbb or add push test lock dec add sub add xchg clc (bad) dec out pop jl pop insb mov repz jmp pop xlat mov mov push xchg js xchg pop xchg fwait lahf jle imul aaa scas cmp sub sbb adc push in xchg imull (bad) and rclb data16 xor xor jno sub mov xchg or jbe pop xor jmp adc cmp movsl cmp fldcw cmp dec rcl inc scas or push mov fcomp mov xor xor lods xor scas dec test dec mov jnp bnd insl jne faddl xor fadd mov mov clc (bad) xor out cmp arpl and or (bad) pop cld or sbb or or lcall and pushf cmpsl cwtl inc or rolb xor push pop stc push icebp push insb lret or ds or sub mov add push ljmp lret or lahf sub aad inc lock push call jne ret jo cmp popa icebp jmp stc mov pop (bad) sub jle bound mov xchg roll mov bound pop rcl outsl mov add jecxz dec or sbb jmp imul mov ja testl add xor pop bound pop xchg sub push mov mov mov daa xlat out jnp dec lret popa (bad) pop adc ljmp xor shrb mov dec movb nop and mov pop mov sub pop sti jmp test xor mov sar lea or add mov ljmp int3 jmp lahf daa idivb lret jecxz pop mov test dec or in pop mov in xor mov pop and mov enter cmpsl pop push adc test push and push mov mov mov xchg sti jecxz pop pusha cltd sub mov cltd add add mov mov js fisttp enter xchg stos je scas jecxz dec mov xor push gs inc dec xchg sub sbb dec ja clc cmp xor xchg dec mov and jecxz or loope into push imul cli out fsts loope ja bound adc ljmp sub into inc aam dec add movsbl insl cmc dec xor add clc stos movsb stos imul fcompl lret or xorb stc (bad) xchg dec js xchg ljmp xchg xlat scas sti and push jmp aas sub mov inc dec pop pop cmp or mov pop stc negl pop add mov lahf add jmp rol lahf jno jmp imul pusha imul jb mov push shll enter pop or xor sbb hlt inc adc cld sahf add cs mov insb nop jbe xchg adc (bad) out out cmp adc sub adc or fdivs fwait shll loop jne adc int3 imul or inc cmc orl pop add popa je or dec adc push push adc sbb xchg movsl out (bad) cmpb std push js pop in cmp xor mov xor mov mov jno (bad) (bad) into bound in fnstenv or mov aaa les add cmp push inc imul jb jb pop ret scas sub jns dec mov xlat in call add (bad) mov mov dec lods sbb add aas mov lret dec mov movsl xor je gs leave das push xor sub repnz fistp mov inc iret incb sub mov xchg dec mov les cli stos push shrl cs pop push mov dec aam sub out in rolb (bad) or sub das and stc popf je lret cld aaa and pop inc imul int3 push mov fldcw (bad) and cmpsl dec pop stos xor jmp aas pop adc mov or jge cmpsb outsl inc lret mov mov into sub das and add add dec std out (bad) mov mov sbb ljmp add fist out push adc xor lods aas jnp out ret adc or ss stos into push mov inc and pop mov loope sahf xor out sub cmc lds hlt bswap stc imul fsubrs mov jg jnp popa jbe imul pop in cmpsb jb dec or sub mov and mov mov dec stos xchg pop out bound (bad) (bad) push leave adc add (bad) mov loopne fsts sub dec sbb pop add jne out test dec test dec in adc xor scas loop mov inc or or xlat xchg or ficom add xor out mov mov (bad) loop imul add stos clc cmp or xchg aaa lcall push imul xor push push push pop cli or popf imul fs dec addr16 mov scas xlat xor cmp xchg into xchg add repz mov adc aam test mov aam ljmp lahf stos mov inc daa pop or out push mov jmp or rcrl scas (bad) dec mov dec call negl dec mov jp pushf sti mov pop fs loop xchg push fdiv sbb testb or mov add or push fdivrs fcompl jle leave loop adc popf aam pop rorl aas or and jno or (bad) (bad) mov cmp mov ret jne xchg xor das mov dec call das adc lahf push add lret jae clc out dec cld sub shrl dec lcall jae jp insb sub jp adc jecxz call jecxz cmpsl jmp pop leave push add or and mov inc pop jmp inc lahf mov and sub sub dec lret clc xchg cmc test mov jecxz push pop pushf inc mov add or out insb push movsb divl push leave jge mov in or and imull and je dec leave sbb (bad) imul sbb repz popf push xchg (bad) xor iret sub mov mov inc dec cmp mov pop notb lret lds add adcl jg mov ljmp aam iret or pop icebp pop dec inc dec gs fcomps mov dec sbb mov pop mov repnz or test dec sbb mov add pop rcrb mov outsb add out mov test sub sarl aam pop dec jecxz in or mov jg xor out lret clc lods jns mov sub ljmp xor jbe push je push scas push jg and pop inc sahf mull cwtl or leave inc adc (bad) cmpsb xchg pop jecxz sub fwait pop insb fdivr pop mov sub cmc fisubrl dec mov popf shl rcll sub inc sti fsubs sbb ret je es and pop sub dec test imul hlt xor mov pop mov fidivr mov xor push mov inc lret mov je popf stc leave imul loope mov adc and sahf enter bound stc pop jmp or cmc inc cmpsl nop lret add fbstp ficom or loope into push add jle adc int3 insb sbb or jbe sub cmc dec push dec add add inc xchg ljmp pop mov fstps out cwtl sbb decb loop repz inc enter out (bad) (bad) sbb mov sub mov loop aam mov sub mov mov and and add test add xor dec jg ja add aaa inc sub cld jmp inc pop out dec repz add mov xchg xchg push adc leave sti repz inc lcall pop xor inc adc das sub jbe cmpsb sub cmp fnstcw adc leave or into xchg mov dec xor inc jns imul and dec cmpsb imul xchg mov sub test add adc popa test sub (bad) or daa sub mov ljmp comiss dec dec pusha insb imul incl (bad) out dec mov repnz mov jmp push xor mov pop stc ja lahf in ficomp sub test test testl jnp mov sub xchg call daa inc mov adc mov das pop jae test and mov test movsl sti jno and sub push (bad) gs mov loop jmp fildl movsb les jmp mov or pop sub sar fmull or call or xor add leave mov jle sub mov xchg fcomi or cli (bad) leave incl mov sub sbb xor inc shll jg sti xchg loope test mov lahf xor add jo mov push adc ss pop mov xor dec dec sub popf aam daa cmp xchg jg sub push mov add das fistpll sti dec jg loopne sub mov xchg icebp adc lds repz fs je mov dec add add inc int cli xchg ja pop jb les pop add (bad) stos gs cwtl lahf add pop cmp (bad) xchg ret xlat fldcw or and adc mov or ja (bad) sti mov enter lret insb inc loop ja call (bad) or xchg call xchg shr test or xor xor popa outsl sub jnp aas sub popf (bad) out cmp dec push addr16 aaa outsb pop mov insb insl nop push pop dec mov ret xchg icebp imul (bad) lcall mov add mov mov jge jge cmc scas (bad) and cwtl shrl cwtl loope (bad) shr data16 sarl sub out xorl push push mov or bswap test sub jno dec push dec inc cmp mov ja ljmp repnz adc adc data16 mov push sub aaa and mov inc push (bad) pusha add pushf ror repz adc dec mov lahf outsl jno add mov or pop pop stos adc sub mov mov inc mov inc jge (bad) xor sti aam push mov jbe cmp pop leave out mov mov dec imul jp adc mov inc (bad) mov sub or and stos repnz divb loopne add fnstcw in roll fbstp fs out mov test (bad) mov and xor (bad) and test out flds jmp lret jle jb adc xor ja xor jbe dec mov sti sbb adc jge clc mov dec jp cmp dec cmp lock xor clc xchg icebp add cmp xor or and ror and fstps mov dec loope cmp mov fs mov bound cs xor xchg xor fnstsw mov xlat loop push sub popa mov into cmp (bad) dec pop roll mov adc pop test sub push jb (bad) inc lods push std sbb insb lock mov out push push jns dec std add jbe ret or and je inc sub cld pop push push in sbb jge xor adc xlat pop (bad) mov cmp scas xor or cmp test adc xor fcoms xchg jmp insl mov loop xchg stos pop lret sbb out mov push out dec icebp popf cmp pop call je jno ret cmp dec (bad) mov push or cmp les jge push aad xchg iret mov cld lret mov loop int3 or and mov cli dec add aaa fsubs das stc (bad) fmuls icebp push jnp mov ljmp xor dec je sti mov mov aad in dec out cmp push out mov adc mov pop (bad) test notl mov xor jnp mov mov repz jmp cli dec (bad) outsl mov ror ficom sbb jmp push sub mov idivb cmpsl xor rcll push and movsl jl cmpsl sti orb inc gs add in sub dec sahf xchg push sub arpl sbb repz daa rclb popa mov outsb sub inc aas pop sub int3 outsb xchg shrb dec lret mov out gs mov bound pop in and or pop pop sbb pop mov xchg xor xor rclb incl xchg xchg push xchg addr16 dec (bad) int xchg mov pop iret dec in es imul cmp iret mov sub bound push adc lcall (bad) std mov decl repnz mov jmp test mov sti mov mov xlat mov int3 insb popf fcompl push loopne xchg test aas ss (bad) jne or fnstsw gs mov mov and xchg or sub or test repnz movsl stos fnstcw jle pop stc xlat sti mov push push call rorl iret xor ja or lcall xchg icebp push lods (bad) ss outsb lret mov roll ret add (bad) imul insb adc xor adc xchg mov call add cmp mov xchg (bad) sub mov push sbb push sub push add jbe push fsubl dec call and test sar outsb js mov pop mov ljmp inc lds xlat (bad) sub add mov lds xchg loope popa mov jne push xchg xor xor loop cmc (bad) jne mov add push add cmp out arpl sub rorb stc sar ljmp mov loop ds add lret inc push adc cld xor jmp jns imul into mov pop rorl or mov cltd lock jl in mov push push xchg das les cmp notb insb es sub pop add in sbb lcall out push dec jecxz pop mov outsl pop inc add dec mov mov mov or int das cli sub call rcrl ret das mov jno inc shrb in xchg idivb fcmovb and xchg and divb inc xor mov dec xor out sbb and or lahf dec mov push shrb and xchg repnz mov cwtl rorl push fwait fs loop sti mov mov dec xor lret icebp xor or (bad) jl fidiv test dec mov push and (bad) sub and push test jns dec icebp adc sub aas sub rcrb out scas lret int3 sub adc clc jae inc imul sub aad sub push adc sbb cmp cmc cmp xlat mov stc sub pop mov jle into pop test mov sbb add stc jnp pop dec add out add mov add scas sub cmp repz enter ds cmc fwait pop adc out mov xor sbb fimul pop mov (bad) jmp pop ret jno xchg and in push movl push jge ffree xor jnp sahf mov push jns dec in das add adc cmpsb aaa popf popa push pop sub rcr sti cmp and push push mov scas bound lods mov or lret and clc jmp add pop sub mov pop sbb mov mov push mov lods leave test nop cmc in dec mov sub in xor call jno push inc pop mov xchg pop sub xor fmuls sar in fisttp mov repz out stos sub scas divb js sub push pusha xchg aaa add test popf ljmp mov pusha xlat and mov add xchg call pop cmp icebp xchg pushl nop lods paddusw jnp notl jg xor jnp rorl dec repz mov push push gs xor dec lock push rorb adc out push add mov cld movsb pop pop fadds scas jg dec pop cld adc or pushf or addb out out es stc sbb es fwait orb call mov lock ffreep icebp stac pop pop inc or fidivr inc push push mov mov jge adc ret pop add nop push sub push dec cmp sub jb es pop or call jno (bad) push push mov lcall or push xchg push repz jg sahf push in aam push (bad) cmpsl sbb ja mov pop mov xor pop shrl add and rcrl cmpl push lret push es push pop stos xor rcrl mov iret mov push adc sub sub push add add les enter ljmp mov add outsl cmp sti mov lock pop ror loop mov or mov dec lcall dec scas xor mov mov pop notl iret lea and dec (bad) sti jns xor cmp mov sub and cli pop test loop aam jmp xchg xchg js minps (bad) lcall cmp jge xor jge pop push out cmp cmp ret sub ret clc lahf shrl mov lret xchg aam or test dec push push sub mov xor lods sbb add mov push shl add test pop jecxz fwait dec mov test sub or jp push (bad) je movsl adc mov repnz xorl or sub into pop mov sbb ret push cmp or mov jne mov cmp jmp mov mov inc jg dec mov popf mov mov jns das jbe js (bad) daa push sbb sub jp xchg je add mov pop pop push and xor add daa ret or pop push (bad) sub mov sub xor je mov or idivb in mov add mov das add lock test (bad) mov add mov ja in mov or xlat xchg inc jp in mov push xlat mov pop mov mov hlt sub mov das iret jg inc (bad) push mov insb clc dec mov adc loope jp roll push pop push ja mov cs inc aas or leave and incl or jge mov sub xchg in ljmp sub sbb jne lcall loope xchg icebp sub xor and add mov inc ret imul push or push sbb loope mov stc inc push inc negb (bad) daa notl sbb (bad) fidiv or mov sbb sub cld jne cmp movb xchg push mov inc and daa mov jmp xchg mov or sub mov pop and pop pop (bad) fdivrp pop push mov xchg les pushf cmp roll or stos imul dec (bad) cmp jmp mov mov cmp adc sub and stos clc add pop push bound cmp insb mov das out and inc mov movsb mov sahf in push xor jge aaa pop (bad) bound (bad) lods aad sub mov inc ret stos cwtl pop ror mov mov pop lock push out mov cmp cmp fisubrl icebp rcll dec xchg dec shrl popf cld (bad) aad cmc pop out xor and mov mov out loop xchg xor shrb mov subl movsb inc into mov inc fucom cmpsb and dec dec mov lods rcll dec clc xlat movsb sti jo adc xor lods popa xchg xor sub lahf (bad) jo pop inc leave push clc inc add push jle icebp xor xchg ds push or jmp and (bad) push pushf cmc fistpl test stos mov mov add addl or mov out xchg (bad) int3 pop subb popa push lret pop adc flds out (bad) pop inc and repnz cmp pop popf in sbb shrl int3 jg pop sub imul or jns xlat stc lods rcl add hlt jl (bad) mov or jb push inc push popa lcall (bad) sub dec mov or dec sub push aad xor div cmp dec push bound mov lds inc enter sub cmpsb pop (bad) jmp test mov hlt or xchg call fsts rolb xchg and bswap popf (bad) jecxz and jno push mov and or jg lock pop leave aam fidivr dec mov inc insl push xor sub out cmpsb lret imul sti movsl (bad) (bad) fcmovne rclb or adc pop mov cmp movsb and icebp pop mov das mov imulb lret aam cmpsl (bad) enter outsl mov push jne pop mov mov push mov mov xchg aaa dec fldl and inc (bad) testb or xor add std jbe pop fstl sub cs (bad) repnz dec xchg sbb sub shll es adc fstpl mov in cmp fdivl add ret sub call pop and sahf out adc mov mov sub xchg ljmp mov stc movsl test sbb sbb push jbe dec or adc jmp xchg dec bnd jmp sub xchg xor mov adc pushl jmp sbb push rorb add xchg loop mov jg pop insl sbb dec mov into push sahf sbb popf and cmpsb and lret and push lods jnp test mov sahf dec sarl bound movsl lcall and add (bad) fistpl dec pop sub mov mov or jnp xchg iret stos lret sti xor clc adc or (bad) cmp (bad) lahf inc frstor std pop sarb add mov cmp sbb cli and mov push mov mov (bad) mov xchg mov fsubs jo mov das xchg add (bad) (bad) mov pop add xchg iret or pushl push movsb test or (bad) cmp les repz hlt jle mov xchg negl insl push sarb mov mov sub popf idivl or lret out adc in movsl fs (bad) fldl icebp out mov and pop mov frstor out and subb inc (bad) xor xor ret iretw add and add das xor cmp leave movsl jmp and popa dec lret cmpsb lods sub push int3 push (bad) dec sarl popf xchg outsb pop cli jb cmp xor hlt in (bad) mov daa into jne mov fistpl cltd iret das mov mov in je fnstenv stos push adc adc add stc mov (bad) mov mov scas bound (bad) or cmp (bad) lods bound dec std rol mov stos mov cltd fdivrs call movsl mov inc (bad) out xor jo cltd js jo daa out sub pop or (bad) loop mul mov mov mov inc pop sbb xchg and and in daa out je pop ja movl les xlat add cli mov lahf dec lcall fidiv push pop (bad) push mov mov scas pop ja addr16 stos (bad) adc out add lret xor jle (bad) ljmp pop mov mov rclb xchg xor and xor inc movsl scas lods dec mov mov add icebp out cld sbb cltd out inc add and push mov scas cmp and lock sub xor stos xor lock add jmp and shl cmpsl xor imul mov sub jnp mov (bad) jmp (bad) sbbl adc int cmpsl dec jge push (bad) mov addr16 or mov inc mov fimull mov inc (bad) fbld test mov pop sub stos sub dec adc mov cmc fbld lds push sbb mov or scas aad cli repz popf mov add scas cltd lods loop pop (bad) dec lret xlat ljmp cmp dec out out adc and shl cmp sub xor imul mov pop dec xchg jmp mov popa lahf jle iret das (bad) push add ja adc inc adc bound inc out mov jl adc stos lret lock test dec sub xchg cs jg rorl lret ds sub or adc lods shlb sti jno and cmp mov pop sub (bad) cmp sub xor push xor push out stos cmp icebp mov imul pop mov pop or jmp movsb push xlat xor mov data16 test mov mov push pop add insl data16 mov lods not std xchg out inc push add mov mov mov mov aaa xchg xchg notb mov add repz or pop sarl add (bad) sbb test and xchg ficom xchg movb xchg add jecxz sub xchg lahf cmp in xchg fbstp int mov xor push (bad) dec pop sub jecxz pop les sub sbb or es add push data16 std cmp xor lock js dec lret sub frstor daa adc jge dec incl je dec sti scas lea sub or cmp js jo popf mov mov xor lock fs stos mov jecxz or add adc cli mov sbb sub fistp ret push mov add insb mov inc out cli out adc jno xor das mov cmp sbb jp fld jb ja push inc sub add mov rcrl sub inc loope jmp lret mov push dec bswap jo mov dec repz movsl outsb mov lcall xor add adc dec add popf scas imul enter cmp sub fs fisubr add not repz repz dec dec cld adc adc fsubl mov ja fisubl cmc (bad) ljmp (bad) aad stos dec fcompl pop xor negl mov repz stos cmp or mov inc (bad) sarl (bad) xor add and outsb subl inc lcall dec pop push into in jmp notb pop xor ds int xor sub push fs cmp inc dec sti cmp or pusha stos push gs add and sbb and add bnd push fsubr repz adc xchg hlt (bad) xchg dec pusha sub mov lahf fidiv sub cmp pusha pop lods out (bad) ljmp stos sub mov inc leave jne in aam jmp loope mov or fwait xor xor (bad) push imul sub and fwait adc cli cmp pop mov jne aam ljmp insb adc leave jns dec mov mov sub inc and dec pop add mov xor lock aam cld jb scas loope push adc sub xlat xchg mov insb or mov icebp push pop repz xchg xchg mov clc dec sub dec movsl push clc imul dec or xor fadds inc inc xor call loopne dec pxor xchg cmp mov inc lock out xchg mov dec icebp sub mov (bad) out imul pop lret xchg sub xchg adc push outsb cld xor pop mov cmpsl xor sti jg dec stos sub lds and mov int icebp xchg jb xchg mov and xor cmpsl enter or add int mov sar cmp xchg push adc ljmp call adc inc movsl roll mov or movsl sbb adc or mov push lods movsl dec call cmp int3 jp addr16 pop sub cmp jae test inc loop in sub pushf pop inc xor xchg pop faddl out sub in pop xlat jg fdivrs mov jno mov adc mov jb,pt dec ss inc sub in scas sub and or add movsb sarl iret xor mov jg and dec les test dec mov js sbb in or dec lret lods lock mov pop into das aaa hlt (bad) jb or add pop push fucomi sbb add adc or xlat movsl sub jae xchg sub add xlat in dec aas rcll or popf lds xchg lret out jo and cmp mov mov add ljmp enter xor adc and notl mov xor (bad) cmp and test xor mov in test and fsubl and sub fsts test out dec enter or sbb sti mov (bad) pop mov mov (bad) imul pop mov mov pop pushf inc or int3 scas pop mull xor js or mov jl stc mov cwtl and dec mov push (bad) lock or dec add push aaa xchg adc jle fstl inc dec scas (bad) cmp jo mov mov mov lcall or jl call fildl (bad) mov mov inc icebp (bad) adc mov jae neg cmp bound jns mov mov or fs and aaa cmpsb xor ret mov xchg adc jns dec js inc dec jge jge and lds mov cmpb and out xor ljmp mov mov push add add cmc js pop xchg jmp popa pop sub sub nop (bad) push bound add (bad) or movsb mov dec aam pop add mov popf in adc jmp mov sub rclb sbb inc (bad) xor ljmp out sub sub xor fdivp push dec icebp lret aas out and xor out das jmp xchg aaa daa add push mov rcr xchg add mov xor or xor negb daa cmp sbb pushf in adc adc add scas pusha roll fisttpl insl dec and push and cmp sar mov xor or mov mov mov cmp (bad) jmp mov (bad) mov cmp popf cltd jl sbb xchg cmc adc xchg add frstor sub and (bad) or aaa push (bad) lcall pop test sbb out push ja xor divb movsb in xchg negl mov xlat and add outsl (bad) vminsd sbb xor jecxz imul imul mov sub es or push in arpl xor cmp cmp add fcmovu loopne adc cmp mov loope negl iret xor and cmp pop push mov pop dec out dec int repnz leave test inc dec sub imul add mov xchg sub dec mov jne ja pop fcmovbe inc sub (bad) push dec leave fnsave fstps dec mov jl xor test mov cmpsl cmp mov add loop dec mov push mov adc push mov mov add xchg in mov adc xor stos mov push xchg pop movsb push adc fistp jo jb dec lock xor shll leave popf std xchg (bad) mov mov or loope and addb bound xchg mov je jmp icebp notb fcompl scas jecxz fs scas idiv push imul jb xchg mov mov das rcrl pop sub xor mov xchg out (bad) dec pop mov jg in and and test cmpsb sub and xchg shr shll cld push mov sub inc mov or sidtl ljmp mov mov popf pop aas or das mov or or shll or aam fist cmp scas and inc (bad) fmuls adc rcll push pop xor shlb add rclb pop dec in sahf push ss sub and push cld mov call imul (bad) int3 iret (bad) mov cmp sub andb test mov std mov dec or fidivl jb mov sbb (bad) repz inc out or mov lret fcmovb add call xor das out sub inc adc cmp sub sub ds ret xchg mov sub es ret mov shrb orb (bad) adc inc ret repz lcall lret jmp push mov cltd loope adc push in cld aam outsl and pop or cld mov cmp push dec scas sub mov iret sti jb out fldcw dec les adc adc adc dec sbb ret ja arpl mov add lods xchg or imul dec shll xchg cmp jl push clc repz mov add repz js (bad) pop cmp sub out and and or push in xchg js mov mov xlat jb shl hlt aam push inc rcll ret test movsl cmpsb lea jbe pop mov gs and movsl cmp sub ret test cs fistpl inc xchg xlat loop add ret lds pop push mov jo push or popf push push sub jmp add jmp mov fisubrl fild adc loop xchg fstps sub cs dec pop and icebp stos gs out sub icebp mov or ficom das sub mov sub and dec in jl sarb push jmp sbb fwait (bad) orl xor xchg leave mov jno sahf xor ljmp inc adc mov test dec movsb test adc sub and pop in mov inc adc mov fsubr cmc je shrb jmp push add and bound adc mov inc sub lods cmp sar (bad) testl jg aad daa daa icebp and fwait rorl jno repz dec lods xchg mov leave scas dec ds and push addr16 outsl push mov dec cld call cmpsl in push cmp inc pop mov cmp add pop push xchg adc mov jne adc sbb ret shl out jge shrl pop lock lahf bound adc or ja xchg pop stc mov dec lds sub add imul add insb pop sub imul jl sub mov hlt mov imul rcll sub add enter pop sbb shrb incb lahf push stos sahf and xor jno and sbb fs mov icebp jecxz xor or and sbb loope icebp outsb mov jns iret sti mov ljmp cmp mov jns bound xlat (bad) int in sbb mov in sub sub mov and (bad) imul in adc mov xor test (bad) add pop (bad) xchg gs or repz push das pop ljmp stc shrl add adc mov mov in pop jl bnd lods test sti mov mov and mov lahf cltd mov mov jbe outsl sub and fild es rcrb push push dec add xor pop jae lods lcall and scas (bad) jmp test push add mov mov push test dec xchg idiv js dec lock xchg bnd in (bad) rcrl mov pop cltd sahf (bad) leave clc pop dec outsb (bad) (bad) and xchg les push or pop sub popf fstl mov jbe jno inc sub cli clc push jb jle inc mov mov xor jmp pop inc test mov adc sbb ret mov mov aas (bad) test add out pop out sub push arpl mov fldl (bad) mov cld mov repz pop clc sub int push out std mov sub mov ds dec sub ret push jbe lret (bad) pop idivb nop pop and popf rolb (bad) jp cmpsb sahf adc cli xor jmp dec aaa cmp xchg mov sub aas lret jmp (bad) fcompl leave pop dec mov jne pop or (bad) pop pushl (bad) aad xor push sarl mov jg dec lcall sub shrb outsb cmpsl std js ja in pop cmpsb cltd push add adc xor fs notl ficom test add fildll repnz pop bound add in mov lret cld pop mov bound pop jbe jle (bad) aam jge lret mov es cmp mov das pushf (bad) imul ret test pop pop add sub mov and sti adc insb mov mov fcoml sti repnz sub fbstp scas popa or shrl dec or mov dec imul ret lea shl shrl sub add jmp out jmp push inc repz outsl (bad) ror sub shll add xchg gs movsl pop out dec shrl cmp pop xchg ljmp xor mov mov adc (bad) sub xor sub rolb leave mov iret mov push icebp add das loope inc movsb and cmp dec imul add jmp stos mov adc and ja sub je clc jnp mov (bad) add mov out dec lret inc sub (bad) pop call or out cmp repz jne jecxz sub scas gs xor les or xor (bad) icebp rorl ljmp add jmp xor (bad) sub jno mov add dec pop pop jmp and sub sub loope enter push insl lahf stc aaa in mov roll sub das dec mov das je jnp mov pop or mov xor xor add mov adc (bad) push xchg inc jl mov loop dec stos mov insl or lock mov icebp daa rcr or xor bound and (bad) arpl dec dec pop dec mov loop daa sarl scas xor not jno das ret aaa ret mov mov pop sub mov fsts jge mov and add mov mov bound add cmp jecxz pop out mov add push cs xor pop fdivl adc imul dec clc mov test mov sub (bad) je or jns jmp fstl dec jae or xor jb (bad) loope mov stos mov jmp stc call or repz jbe flds cmp xchg mov sub sub das or mov loop in movsl divb lock data16 dec and mov je push lods push adc push mov hlt test imul (bad) out add sub mov and adc call fs xor push push mov stos imul or adc iret rolb test add shrl imul jge nop push xchg cli fs mov dec lods mov neg in jmp jmp sbb inc sub jmp ja sub add popf sbb sub mov mov and adc aaa jnp dec mov leave mov repnz pop shlb shld nop adc sub fadds mov lcall mov cli int3 jne xchg or cld (bad) loopne sbb fisubl dec popa (bad) imull loop data16 test gs ja dec out fs xor pop rep loop (bad) push xchg mov and in jp push pop mov (bad) mov (bad) or sti jns mov and add mov add xor sub movsb jnp cmp ret jg insl ja adc push sarl inc xor mov mov jge test sub scas mov shrb xchg out and or and push dec push mov scas lret xchg mov xchg lret aad and fs stos stc jne into push push (bad) popf aad (bad) add and jle lret inc hlt sub xchg (bad) sub sar cmp add leave and scas pop arpl xor jno dec jg scas cmpsl cld xor stc cmpsb sahf pop imulb push mov fcompp add into stos xor xchg jns rolb sbb repnz mov add add jecxz pop nop repz xchg daa sar pop inc xchg push testl push mov aas xor out dec mov aaa adc cwtl push sub xchg or add sbb inc mov test enter jmp insl mov mov mov jle ja jmp out and inc icebp jmp jp mov xor dec mov dec pusha outsl pop hlt sbb fs jmp mov or push mov mov pop (bad) xor add in aad enter clc fstps clc dec movsb (bad) xor fnstsw mov jmp push and mov fcoms jmp xchg push add inc xorb decl into mov sbb scas (bad) xchg aam jmp pop and dec movsl mov jge mov rolb mov mov and sbb pop imull mov add xchg lea jl push sub div sets xchg insb push daa mov mulb bound fisubr sahf pop mov (bad) pop mov pushf and sub push aam mov fidiv (bad) leave jge outsb dec icebp xchg pushf rolb sub pop sub mov mov sub xchg mov jae cmc sub mov cmp mov and inc add out cmp sti jne cs and (bad) (bad) push push mov dec repnz mov xchg fstpl pop dec call bound out fnstsw xchg fisubr aas dec xchg pop sti (bad) add sub ret decl stos jno xor and inc jae fcom jmp idivl inc lret into or or add add cmp add sbb inc add idivb and jb notb dec and sub pop or out add in je negb pop fcomip jo (bad) icebp pop and mov cmp movl or mov (bad) in cmp mov mov add out cmc or and mov jae outsb mov andb sub mov out sub or insb in dec add (bad) jl insb or mov les (bad) aam out mov es and mov mov add xchg and mov cmp lds into scas xchg cmpsl mov fdivrp dec xacquire adc sub test outsb pop mov jecxz xlat lahf mov mov not push dec add inc cs (bad) push mov mov xchg ljmp popf (bad) mov or test (bad) xchg popa jmp push push or ljmp and sub and lods ret sub xor cmc in lcall ljmp call sahf sub sub inc pop je loopne icebp dec and add ja cmp sub sarl ljmp fnstcw xor add leave enter mov and inc add bound imul jp insb leave xchg push mov adc and pop (bad) daa popf inc (bad) je or push dec mov cmpsl jno movsl lock mov push mov icebp push sub xor sar outsb fsubrs repz sbb notl shll jmp xor jl rcr dec je mov push repnz lock pop movl mov lret jne cmp fcoml inc dec outsl loop adc inc in xchg movsl out dec mov xor mov push push inc or xor adcb xor jg cwtl sti inc xchg cwtl dec lock pushf mov (bad) cmc push jno pop (bad) je stos adc rcll sub sbb shll call lahf push mov and repnz ror mov jecxz dec stos roll movb mov mov call dec add sub cmp push fs bswap sub cmp insb mov aas mov cmp out push mov lea mov lret and mov mov sub inc scas xor pop mov in cs jmp mov stos int3 xchg mov fs pop adc pop outsb xor xlat out pop sar dec fist std dec mov sbb icebp xchg imul mov clc add fnstcw pop leave jmp stc pop je pop (bad) cld xor in jnp add add stos sub jg or mov dec cmp pushf and mov sbb leave xor in daa jnp sub jmp dec dec out in add add mov fs leave sahf jmp mov lcall jge mov sub data16 mov into in pop xor cli adc sub sbb xor in inc pop daa sub xlat mov or mov lods dec fsubs sbb jns mov lods jo mov div out scas fs xlat lea leave out cmc insb xor lahf aam (bad) lock pushl sub ret in mov pop clc xor ds dec mov xchg push (bad) js or lods rorb adc ljmp stos std fnstcw xchg iret (bad) popf adc and (bad) dec popa sub xchg out or ja fcoms sub stos pop mov shrl push stos and mov aam fdivr mov xor mov push dec inc adc (bad) aas mov cmc je mov mov insl sar repnz (bad) test (bad) xor sti cmp shrl xchg lods xor movsl push mov pop cmpsb push sub sub sub popf sbb jmp mov pop jg sbb mov add test xchg sarb mov add mov ret (bad) push mov flds sbb aad mov insb iret ret fiadd ficoml nop cmp dec add mov cmp loop xchg mov call or aam loop inc or dec xor pop push mov xchg push push rcrb bound push in xor mov sbb dec icebp ds mov movsl jnp jnp out sbb inc es push push ljmp xor push ret mov dec dec out adc dec repz cmpsl push mov je out pop shll fxch dec inc fldcw adc (bad) jbe testb das hlt xor (bad) mov mov ret jge inc iret icebp lret add mulb jno add (bad) xor inc xor inc push fildll sbb push push inc dec jg lret pop insb sbb test xchg test mov xchg jno jmp scas xchg out (bad) jmp (bad) (bad) stc xlat inc test ret pop pop test jmp mov sbb sub jg leave adc movsl mov lods mov repnz (bad) mov jle imul mov xchg je push test mov daa push xlat into sub iret stos sub fcmovne sahf fidiv lcall mov and mov dec inc sub pop cltd cmc repnz (bad) ds xlat mov pop cltd ret cli rcll divl addb popf push cmp cltd xchg xchg pop fisubrl xor scas dec (bad) cmp add fs sbb pop push insb mov mov jne cltd (bad) or cmpsl and sub scas cwtl jp lock in das movsl sbb enter aas int3 mov push fsubl add dec lret pop pop pusha mov icebp dec ret mov data16 dec mov cld test push sti xor inc or (bad) cmpsb fld mov or jmp lret movsl int3 jmp into rcll and jl xchg adc mov out pop pop lods fcoms (bad) jns movsl into and popf negl cmpsb sub xchg mov (bad) mov ficomp leave push and sub test arpl leave add out add out je stos (bad) cmp pop sbb pop rcrl xchg add mov jecxz out imul add mov add jnp lock push addl push or jns popa jmp sub add sub or icebp xchg or lock out ret mov jae dec repz xchg loop sub xor stc (bad) xlat adc lods mov sub repz cmc xchg mov push jecxz mov sbb xor mov xor xchg adc mov xlat dec repnz dec cld jmp (bad) dec mov xor bound xor scas adc (bad) cli sub xchg pop pushf stc out aaa sbbl repnz mov ror xor or adc sub mov les jp push (bad) mov adc push or ret pop mov rcrl adc push mov xchg pop mov das and pop and bound imul test and cmp andb xchg lahf add dec mov popa mov gs test das leave jle pop data16 aam psllw xor mov aad add mov aad lret in push xor icebp clc xchg sbb outsl pop mov push decl dec sub (bad) mov xor inc movsb test daa icebp mov cmpsb stos lods sahf cmpsb fistpl scas sub loope xlat (bad) in ret mov pop leave mov xchg mov inc adc stos faddl mov push jae movsl mull ja daa push (bad) pop shll xlat mov (bad) xor jg stc and movsl push sti loope dec outsl aas call sbbl in dec (bad) inc leave sub push ja lods inc mov (bad) mov fs jno out int3 icebp or int mov cmp (bad) out aad ret add (bad) daa push addr16 mov push gs add cmp (bad) mov adc divb rcll scas sub push inc add ja (bad) push test and mov jbe sbb fsubrl pop or inc sbb xchg mov mov andl es jne jp ljmp jp jns mov xchg push adc int3 sub bound (bad) aaa in je stos mov roll rclb (bad) mov mov dec jb pop inc xchg scas hlt in push test sub scas in mov lcall jmp add out mov mov xchg gs jno mov div jp sbb cltd push xor or jne cs add aaa sbb xor test and add jns movsl int das push lret bound ja xor jg lret (bad) mov rorb sbb aad and add xor into jl out dec shll stos in sub mov clc fadd notl lret mov out pop jl fs ljmp cltd lods jmp test mov xchg adc dec ljmp shll and sbb rclb sub and out fisubl (bad) mov jo adc xchg sbb mov lahf (bad) adc push jmp mov fcoms cld out divl or add test push adc movsl pop (bad) fisubrl xorl mov pop decb mov or push in test adc mov xor inc mov fstpl jg jecxz incb cwtl pop mov mov out in call mov fidiv repz inc dec ds push enter insl fimull (bad) repz pushl inc outsl pop add (bad) xlat out fcoms mov xchg out xchg out lret xor sub pop popf (bad) jae jns or mov das push pop inc sub add lcall xchg das pop mov decl mov pop cmpsl pop and cmp pop je adc mov pop mov int3 mov pop bound movsb mov lret fadds popf inc jns push lret leave and mov push outsb dec test push xchg arpl (bad) neg push mov and neg sub add hlt stos loop sbb dec push sub fiaddl fmull push push dec insl mov lret out jecxz pop push cmp inc and (bad) fs int3 loopne xchg add in test mov sbb and testb fdivrs or cltd jne and sub sub das iret in es daa mov fisubr sub repz xor movsb mov mov xchg stos push jl dec loop sub sub and jno out andb sub push into vaddss in mov adc jmp popa mov sub jl mov inc (bad) lods and xchg adc (bad) mov pop outsb pop xchg popa push fidiv lods xchg (bad) mov add dec lret and std cmp repnz stc push push leave (bad) mov inc cmp out xchg mov fcmovne clc and mov dec xchg iret sti je jecxz pop movsl mov jmp hlt jmp movhlps sub lret test mov ret mov push stos xor push or cmpsb xor out cld cs repz (bad) dec mov adc out bound xchg add and int3 (bad) lcall cmpsl lcall inc mov or (bad) mov add dec push insb jge nop repz mov mov fmul (bad) and fist inc sub xor loope cmp movsb adcl push stc push xor lret and mov dec mov lods push lahf jne xchg js (bad) xor (bad) push cld jle (bad) mov mov scas mov xchg push pop movsl add lret adc jmp jle movsl jo,pn movzwl lahf cmp iret aas mov inc call mov push mov gs ljmp in icebp dec out decb and insb (bad) leave xor cmp outsb jecxz xchg cltd (bad) stc mov xor out push cmp pop cwtl lds mov xchg movsl xlat in aam add ret mov add lcall push mov fcoms or add push int3 xchg xchg sub add mov pop xchg test rcl mov lods dec jo push fnsave sub and add and cmp mov sub add popa popa add mov icebp sub mov addr16 icebp jmp hlt ficoml inc lcall jns data16 add cmpsb mov push (bad) mov ficompl push dec xor mov mov xor cmp out popf push adc dec repz scas mov xchg pop ljmp xchg (bad) ds jo loope incl sub or push cld imul xor fbstp pop mull insb (bad) mov shrl xor fmul ja repnz out cwtl xchg leave xchg push and xor mov inc dec ret mov (bad) popf testb xlat fistpl js xchg lods imul push jae adc xchg out bound enter mov add add add inc lcall sub add pop fnstenv aas jb and loope iret lock out ja add lret cmp mov adc gs repnz and sub mov mov sub jg jne out mov (bad) int cmp and jl imul rclb dec mov and sub out dec imul jbe push repnz popf jl jmp pop movsl fdivp (bad) xor sub push cltd pop out inc lds mov add or or sub fxch repnz rorl imul sub or mov add xchg xchg sub cmc mov repnz dec xchg mov cmpsb aad jle push mov ljmp adc or xor (bad) mov lret ret cmp pop std jb xchg flds (bad) cmc outsb xchg mov lea popa (bad) jbe dec test lock xchg idivl adc repnz or cmpsl pop addr16 daa jp mov (bad) movsl adc mov mov outsb xor fs mov mov repnz dec movsl (bad) or pop test shlb test dec out (bad) jmp jle rclb nop dec iret call or xchg mov mov out mov pop lods jno repz sub idivl mov jne in push push mov cmp fldcw shrl cmp pop xor sub xchg jb in push ret mov mov pop stos daa pop sub adc fimull sub movb mov and shr mov das (bad) xlat mov ret aaa jge in (bad) sub dec in add mov jmp dec mov stos inc das push xchg pop xlat mov and mov mov mov dec jne adc sub add xlat test add push inc mov push mov push bound incb shll mov popf cmp out iret movlps push leave call jle push inc fwait and data16 (bad) fistl (bad) call ds lods sbb ss push notb scas pop sub divl sbb lock pop test dec xlat mov cmpsl inc push xchg push ss mov sub push pushf ret mov ret fdivrs xchg scas xor out dec (bad) cld sbb mov mov jmp mov (bad) dec mov push and push fs scas fxam sub sub push stc subl lods (bad) ret jmp out insl enter push stc movsb dec ja cmc in mov push fs xchg dec gs ret add mov cmp aam push gs and sti int xchg sub pop test cmpsl dec clc adc call decl scas (bad) pop or mov lock repz pop xchg cmp rcrl cmp inc or out jp and stos cltd loope xor adcb movsl (bad) repnz inc pop mov out pusha and pop orb jle sub cltd imul jne mov dec imul inc adc jl push loope xor mov or cmpsl repnz inc sub mov xchg imul frstor imul mov rolb pop (bad) mov and daa rcl fwait add pop mov cmp lds add or pop idiv (bad) daa into idiv and out lods cmp cmp fisub pop leave rorl xchg out mov adc (bad) (bad) daa paddd ljmp les mov test incl jecxz aas sub aad sub xchg pop mov cltd sarb adc in mov mov or in adc xor shrl adc push movsl fild and sub enter fs fiadd jns or sub mov test mov inc add sub jb je xor outsl cmp nop mov clc ds cs pop dec fidiv xchg mov push scas cmpsl fsubrl leave jle lock mov pop lcall pop aas push add in jp sbb mov dec xchg cmp sub cmp push das inc out xor dec rcrl jmp jge (bad) not in jmp push ficomp ss roll dec push add ror test adc lods (bad) loop xchg lods fsubs pop adc inc loop or push repz cmp mov fadds (bad) mov push push inc mov mov xchg jbe pop ficom push push mov mov jmp cwtl dec xchg les cmp or out jns repnz and mov add xor xchg and jo sub movsl jne mov daa jg in and mov loope dec jbe mov out in (bad) mov pop mov fmull js fcomps adc ds out test clc cmc dec into jmp push xor mov sub ds sub mov mov jno mov outsl in dec lret push jbe out shrb inc icebp sub movzbl lret mov out hlt bound stc jmp adc adc mov xchg lret int insb mov mov xchg scas cmp clc call pusha and jmp mov lock outsb (bad) jmp into mov cltd bound std clc sbb cmpsl ficom and jmp shrl pop lea addl insl bound notl loopne push out pop push int sub cmp sub push adc jmp xchg out lds orb pop mov cld idivb xor (bad) fwait bound rcr xor (bad) icebp push les call jb push and (bad) lret mov mov push imul and or xchg lcall out cmp cs hlt rclb cmp or or pop gs nop inc mov loope sbb xorps push mov mov push dec lods sub pop test add or mov cmp pop dec cmpsl fimull lock iret sahf and xchg push into mov pop mov xor push cmp rorl aam sbb mov in add aad and jnp dec dec sbb sub cld rol testl lcall cmc jnp cmpsl cli clc mov sub jns lret (bad) jmp sub pop jnp mov fxch or rolb popa loope jg shld and cmp sub add dec outsb dec pop pop inc scas push xchg pop (bad) mov sub (bad) add shr xchg (bad) pop aad jecxz fild jb popa mov xor xor cmp inc addl cmp (bad) push testb cmpl jb inc aad xor and xor sbb aas repz out dec push xor ljmp lret stos mov dec (bad) mov and loop xor out add int gs das popa mov sub and out fs icebp outsl push inc xchg fwait loope (bad) cwtl push std push mov adc lahf dec or xor mov movsb lret cmc in cmp add mov xchg mov out cld fstl insb mov clc pop dec call imul mov jo mov xor cmp lock push or rclb pushf iret dec icebp xlat inc cmpsl adc scas lahf pushf cmp jo push mov adc repnz outsl jecxz fimull and insl ret das or jg or daa xor in dec mov pop push pop insb dec hlt (bad) mov imul imul cmp pop sub jp push mov ret aam push data16 dec xor lock (bad) ss fldt stos or sbbb popa test repz jbe jecxz lods (bad) sub jmp sub iret mull and ret and lea pop sub lds movsl add inc push jo push jns mov adc cwtl xor cltd and sub add repz ljmp dec loope sub inc xor loopne or les dec add mov negb inc and imul push stos fsubr and clc inc mov ret or test testb fisttpl cmc vmovsldup sbb sub sbb push or mov loop,pt ret mov add fild xor lcall cmp jmp ds iret and (bad) mov std push dec cld in idiv pop or fisttp sti js movsl in aad ret nop and cld insl lret jmp dec (bad) daa add repz daa negl inc test adc cmp mov (bad) hlt or lea mov addr16 in cmpsl icebp daa or add mov cwtl enter gs lods into pop jmp out push insb cmpsl jg out sub out dec add nop out sbb xchg and cmp xor mov cmp mov cmp cs (bad) sti xor sbb out jns dec push cpuid ljmp sbb add fist add jmp push (bad) lret dec insl add dec (bad) sub and mov or roll and xlat lcall xor xor and (bad) out fnstenv push cmpsb inc sub ljmp test loop push xchg mov (bad) mov and hlt scas addr16 (bad) or rclb outsl test repnz orl icebp les and aas icebp xchg out cmp jns inc insb call xchg add (bad) dec fs mov mov add and xor push mov add push xor and cmp loop hlt push js pop sahf shr repnz int out mov (bad) leave add push data16 popf (bad) ror lahf lods push mov mov out push repnz (bad) aas lea (bad) fistl clc lods mov idivl out ja dec imul push je or sbb popa push and fcmovbe shrl jmp movsl mov and mov (bad) xor mov pop mov stc fmull pop les mov lds (bad) cltd cmp loope sub movsl dec outsl shr fwait cmp add negl repnz sti pop mov popf (bad) cmc lds or repz (bad) and sub sarb (bad) icebp sub mov pop jmp mov xlat xchg and jmp and jecxz pop cmpsb lret mov xchg pop mov inc (bad) lret call mov xor inc repnz imul jmp fist pop or clc enter negl xchg and sub add dec xor (bad) repz scas cltd mov out sub sub inc sub (bad) push movsb jne aad pop adc js and xor pop sub jmp negl test aas (bad) adc test mov and pop and aam je inc sub mov (bad) sub mov or xchg adc stc je inc add dec mov xchg jae lods push sbb test out lds or mov xor adc insl fs pop lds mov enter inc pop jg inc lret pop popf (bad) ret or or xchg mov in pop mov mov pop inc je push pop jg les fldcw inc nop das lcall scas or ja sbb ljmp shr xor rorl ret jg xor andnps inc cmc inc outsl popf addr16 leave lea adc cmp jbe dec and sbb sahf addr16 mov cmpsl js xchg js xchg int3 and loop pop or mov fisubr cld ss pop pminsw popa cmc or xor jg adc and test mov out pop and jmp out imul jb in add mov dec jge mov adc into cmp pop mov loop movsl push sub xor sbb xchg bndldx xchg mov sub push insb xchg popf shll nop loop stos and sub xchg and xor movsl cltd cmp repnz jl fs aas ret dec sub jne mov add imul jmp add dec sub xlat push imul stos popf and iret or jle jne call sbb jns xor mov out pop ljmp xor std rcll idivb add push fsubrp push inc jp jae adc dec loope cld mov pop push dec xor and xor out mov xchg into adc add jge sub lock sti and loop pusha pop aaa les sub mov mov inc jmp push sub jns jecxz pop lock cmpsl dec daa (bad) aam outsb dec fdivrp push sti scas fwait nop cmpsl mov dec lcall dec inc mov and and (bad) or inc fisubrl or insb jg repnz xor inc xor adc push mov sub dec adc das xor sbb notb mov add jle pop add js or add jg fsts std xlat test (bad) mov rorb (bad) stos push lock (bad) jno inc sub sbb xchg out cli mov xchg mov (bad) dec sub ret test orl aad lret neg imul jl,pn leave sarl adc and sub and inc push or sub loop push xor mov dec out sub scas jae lret or andb icebp cli or fcomi in fs clc xor rolb out push pop pop jbe fnstenv (bad) ja call test xlat arpl test xor ficomp cmp adc out xor or inc jp pop ret imul dec mov mov mov lea add sub out xor divb fcomi and out xchg mov loop jbe push pop fimul jns push xor imul lret or stos imul xor adc stos xor mov pop jae popa dec rcr out jo into add mov or cmp test rclb pusha add inc daa jb repnz fldt test sub divb cmp pop xchg fldenv lahf (bad) pushf cs fldt jno movsl or loope (bad) cmp leave (bad) idiv sub daa sbb loop push jmp leave mov mov cmp or fcos jns lret cwtl adc fidiv inc jge adc add xchg inc xchg fdivs lods out and jg xchg mov adc pop das dec roll pop mov jg adc mov loop jns imul aam clc and into fisub add add stos cwtl dec adc xor mov mov sub xchg and subb xor and popf jle leave pop pop mov stos out pop and mov push add sub int3 (bad) mov inc mov jge scas mov pop cmpsl dec das pop mov sub pop pop xor pop mov dec (bad) or rcll leave in inc jno cltd xchg xchg enter popf aad inc mov iret leave jle (bad) shlb stc enter popa aad or loopne sub or stc xchg (bad) dec sbb and add pop or sub movaps das shrb xor cli ja mov mov shll mov les push cld adc cld add idivb dec iret clc call sub mov jmp test inc shrl add or idivl (bad) jge push xchg fisubr ret (bad) sti xor cmc rcrl xchg xor sahf dec mov pop xor in and or pop stc jbe mov xor mov fisttpl and push mov dec adc lea xor xor add and out mov lds sti data16 fnstsw inc dec jo xchg add pop popw call sbb or int3 xor inc lahf push (bad) call das push dec ret push jns lret scas mov xchg or sub stc or sti xor aam adc dec sub mov cmp leave xchg adc mov mov mov scas cmpsb cld or lock pop mov dec je pop (bad) lret bswap fldenv jb out xchg popf fstl add scas rcl and movl js mov jmp fsubrp mov mov imul sub mov lods and lock popf mov iret icebp call adc adc inc inc xor mov and xor cli cmpsl notl daa xor test aas popa sub out jbe push sub cmpsb cmp pop fmull ret sub add mov xchg sub imul xchg repz sub mov inc jno lret testl xchg aam arpl inc nop scas xchg in loope jmp xchg sub frstor xchg call repz adc scas cmpsl rcll and dec ret out and jecxz dec aad pop push pop jne xchg mov sub cmc jmp fildl add jg call sub mov adc dec mov jmp jecxz cmc dec ret jae nop or xor mov or lcall clc lret inc pop xlat mov js jecxz inc lds (bad) jmp xor divb int3 adc mov es notl imul push sub (bad) jmp push and fcmovne and add int3 or icebp add sub mov fwait add adc push or dec sub jl xchg mov test imul push xchg or std xchg xchg lods stc leave into pop test xor push xchg fistl pusha repnz test sub invd fucomip out jne dec mov jne pop pop (bad) xor das iret ja repnz lods cwtl (bad) jae pop adc ja cs dec xor xor stos xchg sarl xor add movzbl inc mov ds cmp dec test cld lret lock mov das lret xor xor (bad) cmpsl mov push push dec mov fxch outsl dec (bad) repnz xchg call test data16 inc pop mov xor and pop pop add ret push dec adc scas pusha xor push out and scas jg iret jmp fldenv sub test lret (bad) aad in add and (bad) in pop xchg test fsubrp push xor popf jae cmpsb jl fistp mov fsubs inc add jle enter xchg pop enter sub inc pop mov aad inc xchg shr mov push les xor in sub lods mov iret or xor mov scas xor adcl test jbe mov call pop sub push xor xchg sahf popf out dec jge mov lods jp (bad) movsb scas mov dec divl pop cs stos lret scas test (bad) dec sub sub hlt (bad) xor cld je mov push movzbl imul push or xor mov (bad) sbb aas xchg lahf das popa pusha inc sub mov pusha sub call mov pop jb mov repnz mov (bad) js leave mov ss fwait and popf jno lret inc jnp or pop in fcoml cwtl cmpsb repnz jmp daa and push or mov mov out dec or es aad leave xchg repnz lret cld pop pop sbb add int push stos xor sti jg mov fs inc xchg out xlat inc aaa mov mov mov test jbe loop int jg xor hlt stos push bound mov push ret scas pop ret xor and or sub lcall rcrl add lcall add out sbb or sub in jnp (bad) add lret jmp movl lret (bad) lods pop jne and daa cld mov adc cmp lret fbld xchg jg std xchg xchg cld mov add lock repz jns in out stos lods jno or and std pop lret xorb fildll (bad) das loope or je scas mov jp pop dec xchg xchg imul jbe pop jne test sti data16 push icebp cmp (bad) out adc pop outsb (bad) jmp xor dec (bad) out daa (bad) or xor xor sub xor adc push lret jmp mov xchg (bad) jmp mov sub jl dec jns or (bad) int3 or jle dec inc cmpsl fist add lea jg fs xor dec lret je or and nop or push push push in inc ljmp sbb enter loopne out lret fsub sbb in mov mov adc and lock dec orb fsts addr16 test das ljmp addr16 leave dec sub lahf jl in in sbb cmp push cs pop or sbb (bad) jge xlat repz jmp push lcall xor adc sbb xchg push test icebp sub push sub jg test mov mov jbe adc scas out nop sub jmp xchg imull cmpsl and inc xchg or gs loope dec or inc popf call and cmp push add bound push jl xor jno das jl (bad) into dec fldcw sub mov sbb cmp jne push add sahf popf push push sub daa xchg jmp jle jecxz cld gs mov adc inc add pop xor mov js and call (bad) or push mov xor movsb jmp adcl ret mov in aad and add loope loop (bad) mov gs out mov add or cli dec dec mov out subb jbe dec fmull icebp int3 pop test and ret out ret cli mov cltd enter jmp sbb pop aam daa outsb jbe jb sub mov or pop fcomi movsb repnz sti sub out jo cmp sbb fstl or cmpsl mov fcmovbe cli fcoms out adc sub icebp inc shrw pushf sub dec jle fidivr sub dec mov fidiv clc into mov jl mov das mov (bad) jg pop divb pusha xor pop insb stos sub add out xor mov ljmp loope jle fldcw stos inc jge dec mov hlt bound lock push ds sub pop jnp adc into jne xchg sbb mov jl push push std fldcw test add in ret inc sarl out stos (bad) imulb pop mov push sub jbe sub lds mov out pushf xchg push mov cli hlt cli jmp mov das cmp xchg cli mov dec into ja adc stos popf int dec or std push mov loope jmp cmp les pop sti cltd xor (bad) mul xorb repz sub fs xor stc int ds (bad) (bad) dec sub jmp and xlat jbe rorb sbb dec loope gs notl pop mov cmp add push mov daa and ljmp bound icebp sub xor jmp fwait leave ret pop bound (bad) imulb inc incb pop insb ss xchg mov leave scas popf mov cmc outsb loope imul cmp daa out gs xor out std jns dec push sbb mov xchg out jne clc mov test les push test push les (bad) mov and push insb inc xchg cli out mov or xor mov pop and sub daa sub and cli clc and jbe adc imul cmp cmp test xchg aam pop ret push cmpsb mov or (bad) mov xchg je push dec imul add push pop lods push (bad) xor fdivrl popf pop call stos mulb and mov xor js sahf mov movsb mov mov repz rcll xor (bad) jmp and jbe icebp push or loop or jge das mov or pop lods adc lds jae and add test mov loopne leave xlat rcrl jmp mov scas and scas mov and add repnz mov pop xor daa je das xor (bad) das popa pop and leave (bad) cmp jne out adc lods lret in (bad) cmpsb mov adc fisttpll out jns dec roll xorb fs push inc ljmp insb rorl lods cmpsl shll dec mov inc mov cli divl shll cmp mov adc pop xor xchg and pop mov sub in fucomip scas cmc dec (bad) mov das lret imul mov xchg test and mov clc call sbb push or lret xchg frstor out sub pop aaa mov dec mov sti test and jl sbb and out and icebp push add inc clc adc rorb fwait sub rorl push shrb aaa jecxz xchg fstpl sub xchg (bad) sti sub pop adc clc sub pop xor cmp jp fstpl pop dec rorb icebp push push push adc rcll es lret fnsetpm(287 mov xchg call or testb pop popf xor (bad) sub fxch enter jmp movsl mov das mov xchg cwtl lahf pop stc mov (bad) into fldcw popf add xor les add dec dec push (bad) push push sub (bad) gs sti dec das xor movl icebp jb pop mov shr (bad) aad jge or mov shr jne lcall pop adc fnstcw and and ljmp cmp mov or cmpsl mov push bound sbb pop ficoml dec inc dec clc mov pop ljmp pushf xor icebp roll (bad) xchg pop out sub or jno dec ja pushf add out out jp addr16 gs mov mov cmc sub sbb pop adc pop jecxz je icebp and sbb fildll cmpsb pop inc sti sub mov inc rcrb in cs mull sub push movsb adc jp (bad) cmp jo mov ret lret fisttp jmp and xchg add or fnstcw push mov jno cmp in dec fisubr pop push in adc sub mov not stc jns shll add or cmp mov lret cld push negb sbb out sub sub lret sub out fs add (bad) lret daa or inc lcall mov cmp sti sbb sub cs iret jb mov rcrl das icebp cmp add pop dec (bad) fcoms outsb je mov sti jmp jo add decb pop notb into cltd cmpsl (bad) cmp (bad) mov mov enter mov mov and sbb cmp pop (bad) adc shr cmpsb jns imul out mov repz pop mov in arpl push inc gs and jle or fst lahf (bad) adc (bad) mov sub jne mov mov pop or fs shr test sahf loopne (bad) outsl test dec ljmp mov push stc mov sub loope sti aam inc fdivrs pop dec js cmp pop inc imul mov xor out popf aad xchg xchg movsb or dec sub or cld pushf mov icebp and aas sub sub (bad) mov sbb xchg xchg mov and subl js and sti call jnp or testb dec out xchg pop (bad) jmp into inc jb les mov jg push dec sti lea fistpll inc pop (bad) frstor loopne and orb pop lods add (bad) int3 cmp xchg rcr adc mov sbb xor sti bound icebp or inc cmp mov mov xchg pop fisttp xchg bnd cmpsl adc rorl jecxz jg and adc insw ja popf aad cmpsb popf mov dec push rcrl (bad) push pushf fildl (bad) xlat out pop into movsl test mov inc dec icebp ficoml inc xor xor sub pop in lds notb ret ret inc xlat adc sub cmp mov and jecxz lock mov gs mov call roll jae ljmp cli xchg inc not movsl dec lock cwtl mov scas pop cwtl popa add hlt cmp (bad) aas in pushf test push lods daa (bad) and ss mov mov addb mov imul adc cvttps2pi pop pop inc and cmp pop or out push addr16 lods sub pop cld repz and or push push cmc xchg sbb fisubrl orb and dec push cwtl (bad) into dec add pop mov and test jp and push pop fimull test mov xchg inc lret test pop add ljmp and loope mov pop push inc int lods cld push push sti fist and lcall mov jl xor pop mov cmp shrb les loope aas gs test mov jecxz (bad) push or mov mov icebp out jge or mov repz adc lret fstl add jbe or cmp mov pop sub dec push lods pop hlt jmp mov mov jmp outsb cmpsl in test mov leave push cmp jne in cli fidivl and mov xchg and testb jle push push xchg cmp repz (bad) inc mov add dec or and ret dec jae pop stc or stc fsubl gs push faddl and xor jle mov lret cmp test mov jge jle nop add sub sub jp,pn fisub xor sub adc dec and (bad) sbb into fstpl les rcrl (bad) icebp mov push mov jae pop inc mov fldl jecxz xor sti add divl add jns lods pop or mov clc mov jns xchg stc scas add lret and popf sbb mov sti negb add and aas stc and rol subb notb lahf push (bad) stos insl cmp mov mov std (bad) es adc fs adc adc or mov mov stos mov push lods add bound pop shlb push push jno repnz sub out xchg (bad) jmp jle xor xlat jns inc shll imul cmp dec loop bswap lods dec inc outsl or mov sahf dec or idivl shll mov push mov out lahf push arpl mov repnz sub mov sub (bad) (bad) cli push js mov mov leave shrl xchg sbb mov ss js decl rol xorb call mov push push mov cmp adc inc pop and add ljmp adc enter mov jne pop xor mov mov mov insl jno ja adc sbb sub std inc es dec int3 dec pushf cli xor pusha ljmp dec mov lahf push cmp inc ret data16 fucomi pop popf jge mov push lret push pop fldcw add or out negb inc lock add dec mov mov mov sub cs adc dec cmpsl ficoml leave (bad) (bad) ds cmp leave imul scas mov sti dec mov pop das xor mov or xchg mov xor incl lock stos sub outsb imul xor ret pop jae movsb incl mov adc xchg rorl add mov ss add xchg pusha mov mov hlt idivb mov mov cmp in cmp into cmp xor fldcw out xor mov daa adcb leave pop dec cmp popf push xor jns dec sarb jo pushf scas pop jg loop aam imul data16 loope into out (bad) cltd lcall stos sub jle fsubrp sub and int jg test icebp or cmp mov arpl out pop push jl pop mov xor dec jo mov pop inc jg mov push lods call iret rdtsc push int3 push add insb orl (bad) mov cwtl leave pop repz jle jl pop jg sti push mov ds cltd mov sub sti and jns mov lock fisubr push popa cmp scas rcrb out mov add add jae sub lcall lret pop mov push jle push ja add iret dec mov fprem1 inc and xlat insb je sbb mov jp clc jnp lret fidivl xor and (bad) pop xor pop lret fcoms mov ret sbb stc and or ret add je adc pop test jmp lods in mov loop rorl sbb hlt dec bound xor xlat pop stos and ret mov pop mov or mov mov popa or imul subl stos mov fs push adc add call mov or ficom or pop xlat mov fist push mov ret add (bad) push xor add loope (bad) dec cmp ret xor lds xchg loope iret sub sub aas les push lods stos lret mov dec lret in sub jno xchg fisubrl inc sub mov xchg inc (bad) push sub out int3 ljmp push pop xor in mov cli sub rorl dec mov mov or and cmpsl mulb jle into mov ljmp sub (bad) pop add cmp rclb (bad) cli (bad) lahf and out stos sub dec test or push sub enter ret fdivl iret or inc and mov lods and fchs ret int3 es push xor push bound rorb nop cmpb inc cmp mov (bad) lods add inc cmp and xor ret inc and ss cmpsb or pop xor incl outsb mov mov sarl xchg hlt xchg pop lock (bad) xor jge sub sub pushf insl mov add aas test int sub js popf cmp stc rolb gs scas mov cmp das xchg insl add (bad) ret jecxz outsl (bad) jp std icebp lods inc call add xor data16 mov cmc (bad) mov ja mov add aas add icebp xor popa pop sub inc inc rorb shlb cmpsl inc pop in sub andl loop ljmp xor popf lock pushf mov scas jbe lret (bad) icebp add into xor or lahf push xchg lods mul pop jl leave jle inc mov ja mov negl cmc in and mov scas mov push idivb addr16 sub mov les (bad) sub or lret lret mov into test mov (bad) adc xor dec jmp mull xor mov (bad) fsubrs in repnz xchg adc scas bound rcr movsb std aas mov inc imul add add sbb lods insl (bad) repnz pop xor xchg stos cmp ljmp adc mov pop lret test xchg mov iret jp xor pop dec insb xor (bad) popa and sbb cmp das jg aad push cltd xchg adc cmp mov sub loop out ja fisttpl sub dec cmp mov xchg inc adc ret aaa and and data16 aaa mov xchg sub add pushf mov imull bound or dec mull lret (bad) (bad) lock adcl ljmp not pop movsl aam leave mull and out and mov or in test inc mov pop addr16 or xlat mov into dec add (bad) lock lods push dec mov pusha ds test push add mov mulb fucomi cmp mov bound and mov inc cmp push mov iret and pop jns inc xor cld sar xchg mov jmp out scas and das pop ds inc lret rorb into jmp stos dec xchg flds je cmpsb scas pop mov das loop arpl push xchg push pushf pop enter scas pop loope xor fwait mov add mov mov je pop sbb gs adc scas adc cmp daa sub add inc out test mov jae (bad) nop testb cmp cmp int lret cmc dec rcrl push add mov mov or ds jns inc mov mov dec subb daa dec and or pop jae cmpsl adc or pop mov dec test and cmp mov add cmc or mov enter lds and mov andl test mov (bad) sub xchg dec jmp sub mov loopne and shr aam clc push mov ret dec xor jle loopne and and and mov out dec iret test ret push stc iret dec lock add dec fmuls lret sahf add mov push and sub sarb xor sub popa fnstenv adc shrb les aaa stos bound jmp loop fst (bad) dec sub pop decb leave push jns (bad) (bad) aaa test ds (bad) mov out call sbb orb xor mov icebp sarl aam fbld stc mov popa flds call aad push push push outsb jo mov push dec aas add or push fidivl adc int pop xchg lea push mov mov fisttpl jb hlt mov push adc in into rol lods pop pop mov repz sbb (bad) cmp push mov pusha push push or mov mov mov aad outsb sbb push test push cmp jg sub sub enter mov xchg fwait dec imul add lret add cmp lret sti lret xchg inc push push push mov inc add jae mov pop cmp pop xchg or fsubl mov ficomp pop mov loop xchg pop push sub dec data16 adc and daa out push int nop xor xor or scas fnsave repnz imull (bad) sbb push mov scas lea add lods (bad) add pop pop jbe push mov sbb push popf pop mov push andl lcall sub sbb fcompl add jg xlat push outsl inc adc mov daa sti pop sbb push or xchg sub iret add push xlat jno pushf andl iret push out mov movsl lcall mov mov fnstcw push add sub add cmp pushf adc adc out jbe sub and dec aaa dec fdivrl or xlat sti inc adc or fsubs fmuls inc mov adc fildl loop jle jb inc pop mov test mov jg pusha fxsave or jne pop mov mov lret bound (bad) std cmp push sarb or aaa cmp imul and push movsb leave pop cltd dec imull stos fisubrl push xlat icebp pop adc pusha sub jge xchg (bad) cmp jb js xor scas repz (bad) mov sub hlt or xor out (bad) push xlat jl mov test mov xchg fdivr clc mov daa imul call mov cmp mov rcrl mov cmpsb test dec and lock ljmp sub movzwl adc sbb mov ret cmp cmp movsb cs faddp aas sub cmp mov cs mov outsb or mov sub loopne xchg pop and into divl add mov iret and add or lods outsb and cld repnz mov shlb pusha xchg push loop jo mov mov cmp mov daa aam adc sbb xor mov and imul push or jns or sub and xchg cwtl push mov (bad) and add mov out call cli imul repz dec call (bad) adc cmc bound rcr lods jge mov push in lock movsb xor test mov bound repnz (bad) push fimul pop pushf mov xor es sub bound mov mov jp pop sbb shr jne and jle int3 fcmovnb movsl push inc mov lcall adc movsb xor sbb mov and idiv mov add movzbl int sub enter sub sub mov repz xlat pop xor lea add jmp jb sub loopne and jbe gs xor cwtl rcll mov pop inc sub out jns push popf lahf int3 mov (bad) or fmuls andb push pop idivb test and dec jbe and xchg imul test fsubrp (bad) aad jne fcmove and xchg popa cwtl (bad) pop repnz in add mov fnsave add dec rol (bad) pop xchg cmp or sub ja mov xchg insl subb sti adc aam sbb ret and icebp rolb and mov test rorb jl xor push mov inc jmp mov leave jp or jmp sbb cltd ljmp lock lret icebp jl ficom fldenv rcrl repnz fidiv cmp inc adc clc xor data16 out sbb int bound add pop jno in lods jns xorl cld mov adc or jl or ret and std addr16 dec stos lea stos das mov inc stos pop test jmp mov xchg cli divb lds iret pop sub (bad) xchg add sub add lret in cltd cmp and sub jle (bad) iret int3 out pop (bad) jmp jle push adc mov add push ljmp xor in lret shl add aad lea sub and push add sub stos mov das or lret mov loop xor scas lock xchg lds pop mov (bad) mov mov lret fstp xchg pop rdtsc repz in sbb lock push rcrl lret mov cmp in and jnp or sub arpl repnz mov ss lret jecxz sub loop mov mov jns xchg clc and xor xchg arpl or ljmp pushf cmp imul mov and lock pop in popa cmp mov pushf jno dec inc fs mov xor xor mov insb dec mov push iret mov (bad) mov arpl loope lods out rorl test push call dec mov cmp hlt cmp loope,pn pop movsl pop mov cmp mov dec shr aad stos sahf pop adc (bad) ja and add mov cli out xchg stos lret repnz (bad) mov mov popf fistpl je mov push ja xchg or pop sarb xchg outsl xchg xchg stos pop repz xchg rorl cmp sub push das (bad) sti sti rorb mov insb pop cli pop inc mov jle fs not pop mov (bad) ljmp into and inc xchg or aam sar rorl icebp and pop iret sub mov jecxz fldenv les dec lods mov out mov fbld sub rorb xor shll mov lods fsubl addr16 mov jne imul adc or xchg popa push orl mov jl mov and sub dec or xor arpl push sub lea decl test iret repz adc sub jp fnstcw or mov jl adc or xchg cmp pop add js into mov fstl dec iret loopne out mov (bad) sbb sub or scas ja lret push cmp out add ds pop loope lds negb adc add ret jbe jno sub dec add xor add gs and jne jae mov out popf addr16 test mov fisttpl xor pop sbb std cs ret dec adc ds ljmp cld fldcw lds clc xchg jbe push out pop ret and jnp (bad) lret into cmp outsb mov in jbe jge les dec sub bound jmp inc mov or xchg arpl sub mov or jecxz xor add push push mov lahf lahf imul stos dec fnstcw jge hlt sahf in inc cmp mov mov sub into cs pushf add xchg add and sub out mov (bad) mov lock or mov imul mov fldcw sbb xchg pop aaa scas imul (bad) fdivs negb dec aas (bad) push mov and cmp shrl dec sub sbb jmp fcomps mov pop pop mov addr16 push cli xchg scas aaa push loope add jnp inc das cmpsl loopne fldt pop add sti popa lods mov repz shll add sub stos mov xchg shl adc xlat ja cmpsl mov lret iret and loop (bad) js cld pusha sub or push gs aam addl mov daa rorl movsl mov into jns mov outsl pop inc (bad) idivl mov fs loop dec sbb xor cmpb aaa lods (bad) sti xchg repnz fs ret aas adc sti movsl fldcw outsl icebp loopne sub into xchg out mov loop jle jmp and jb icebp fs out push adc mov mov and push repz mov sub mov pop (bad) pop imul ds andb rcrb int3 arpl (bad) test mov scas movsb (bad) push inc sbb sbb popa or and test jp fcomps dec adc add dec stc mov cmp sarl std push xchg mov outsb les mov or out imul mov (bad) ror cmp cmc inc lret pop into mov fadd icebp cltd lea loope icebp jg or imul iret mov jne adc test mov or pop fisubr sub mov idiv movzwl inc dec inc pop test icebp mov ljmp or pop mov subl mov imul and inc mov add xlat int3 mov xchg xchg jno inc lret mulb bound call shll jne xchg bound mov xor loop in add repnz (bad) popa out mov fstps jb inc daa js test sbb sub mov cli sahf inc mov pop sahf in out (bad) push mov aas jno and outsb (bad) xor jne test mulb es cwtl cmp call icebp mov sbb mov repz std cmp cmpsl add ret mov (bad) pop aaa lret aam (bad) xor mov sarb pop ret xchg ss add cmp sub or cwtl enter mov xor add push push (bad) addl jecxz cld mov sub mov aas sub or scas push jg jge sbb xchg fildll popl jno xchg (bad) cmpsl sahf add pop push jp push mov imul popa je in mov or sub jecxz push pop push in pop mov or leave pop cwtl jp push mov jg outsb sub mov pop push mov fs shl inc ret jbe incl jno push pop cli lds cmp mov add add sub add pop xor pop testl mov jp ret pop ficom sarb paddd shlb sbb (bad) xor mov popf lcall inc push mov add or iret xchg sub xlat pop pop mov dec out jge xlat mov or pop add adc and cmpsb jl stos lret out ffreep add cmp sub push inc daa mov mov add ja inc and jb (bad) arpl std addr16 movsl in adc sub push (bad) loope adc iret test lcall bound xchg dec pop lock pop aam dec xchg or nop push pop aaa add sbb or sbb push mov mov pop push ja xchg sub or nop and fsubr adc xlat vaddsd xchg rclb cmpb loope int3 xchg mov jg fsts in lahf jns imul ret (bad) popa pop mov mov in int les out xor addl push pop pop loop jg push dec fcmovnbe dec fsubr sub bound dec push or into xchg notl mov jno bound xchg sahf jno and mov lods cmp mov out stc mov jge aas push ss xchg add ret hlt push rorb add ljmp outsb cmp adc sbb and rcrl cmc sbb jle out dec fbstp xor mov cltd pushf push mov repz sub leave aas and xor mov adc add les or add sub and xor shrl fisttp lcall ret imul and (bad) mov xor iret mov out mov push mov (bad) jp fstl pop and sar data16 test int3 movsb xchg and or shrl leave mov pop mov je fnstenv (bad) sti cmp mov or mov test push jns dec or push pop and out nop mov pop ret int3 add push mov sub addb divl mov jne mov mov mov and add stc adc add mov cs inc sbb jns mov call dec push pop jmp mov out cmp shr mov xor inc sub in into lock cmp clc sarl sub aad repnz mov mov adc pop add sub mov dec sbb push push bound dec fs xor out adc shlb js add mov out lods or negl mov pop testb icebp pop xchg xchg dec icebp stos arpl mov jmp imull ret cmpb lods lahf (bad) movb ret popf fist (bad) sub lret dec jmp (bad) or and inc into sub mov cltd pop shr mov mov inc add xor sub push xchg movntq jmp push aaa inc mov mov daa and dec mov lret repz ret sub sub mov xchg mov dec test and out ret jle push aad stos imul popf sarl ret adc ljmp cmp adc addr16 into pop inc pop and daa push sbb cmp jecxz addr16 test mov xor mov mov je adc lods adc ja loop add stc xchg mov gs push (bad) sub fbstp (bad) test xchg addr16 adc test xchg cli into pop dec and sbb stos jg jg sub aam in test jmp imul sub enter cmp ret sub dec rorl out test in pop in add mov jae int3 xlat ret xchg js jmp mov xor lret out sbb add cmp sub mov test dec dec mov or (bad) pop cmpsb sub push idivl stos sub out sub xor xor xchg cld jbe cmp scas ljmp cmp (bad) ds pop out (bad) bnd out cltd je repnz push xchg sbb mov popf rorl lret xor fisubrl adc and xor pop jp lds fldt or cmp mov cmp mov jbe (bad) jo xchg push push cli sub add jg aas clc jecxz mov add int3 sti lahf mov jb fbstp or fwait dec test fadd pop add xchg sbb rorb clc mov aas xor jle cmp dec xchg call (bad) xor xor imul es push stos or add mov ror (bad) mov cmp sti pushf inc xor or add jns imul pop aas sub push rcrl xchg out pop lds adc (bad) xchg jno sbb repnz pop stc (bad) push mov orb fidivl jle jae and stos pop (bad) imul cmp fs and mov iret shrb outsl mov jmp into jbe xchg hlt (bad) pop sbb and loop mov fiadd cmpsb daa xchg (bad) xor insb xlat mov pusha mov jmp mov std int3 mov imul mov mov push cmp out aam push dec (bad) xchg push jb cmp jle or aad adc test mov dec loopne add (bad) cli xor mov setg adcb xor jg xchg das inc dec dec aam andb pop xor mov cli sti lcall and pop sub mov js add mov mov (bad) jmp aaa pop xchg je sub xor out sbb lahf rorl sahf xor test popa inc sub mov cld xor sub push fidivr repz cltd pop repnz push leave and pushf jmp in (bad) mulb xchg pushf xchg lds hlt or jbe aad icebp fldcw daa jg insl shrb sub xchg adc adc dec mov inc (bad) negl dec shr mov sub dec xor ljmp sub decb and sub fwait adc cmp cmpsl dec out mov jl push stc and mov jne (bad) mov outsl pop mov cmpsl fcoms mov imul dec ljmp and mov jg xor lret shlb sub clc xchg mov lods add or pusha pop mov cmp push pop add call add push mov rorl sub das inc popf mov mov das push dec jns xchg lret jnp mov sub mov aas out ret mov pop sbb rcl xchg out fs sti enter cmp ret (bad) jl bound movl xlat or xchg psubsw pop jge cs mov xchg leave rcr jp cmpsb idivl lds mov lcall jmp mov in jne je mov cmpsl jg out lock lcall sti xor pop aad sub push jmp (bad) jge mov fldcw pop clc adc into jnp and ljmp iret jmp out xchg aam cli push lods and lret ja adc mov test (bad) ljmp mov mov dec mov push jp sbb pushf iret mov and or and push pop aad ja fnstenv sub or pop xchg pop dec pop mov lret out jl xor and jle fs push mov sub adc xor mov xchg dec int3 in daa xor sti stos adc out adc mov and (bad) mov xor sti xchg or add dec repz ljmp mov ffree push icebp leave pop jbe repnz xor mov rcrl out xlat mul cli dec (bad) test mov push test cmp sub jo lahf repz pop lea int inc push sub pusha int jle das xchg cmpb sbb sarl divl mov test dec in dec mov xchg xor test mov lea mov sub mov inc leave (bad) pop cmp (bad) mov jbe das and push push mov addb leave mov in pop or mov xchg sub add out and dec pop bound out jg adc inc add cmp stc rorb xchg ljmp iret mov out gs mov dec pusha sub push or (bad) ret pop rclb mov divb out shll idiv fcoms out mov sub sub xchg jne ljmp (bad) cmp lret popf gs movsl push push jo or stc call sbb fstpt in shrl lods jmp movsb xor loop pop cmc inc sub out lret jns stc stos imul adc int3 push xchg fnstenv or (bad) inc idiv mov adc in inc add sub and daa (bad) xor and cmp scas mov cli mov jb mov mov or repz adc inc or add (bad) or inc ja or mov push dec sbb xor inc xlat out rclb scas cwtl fisubl sub xlat or ja push dec xor push ror fsubrs inc outsl sub lret push ret gs and mov ficoml xor jge mov in adc jmp adc mov scas or mov inc imul xchg rorl and sub lods je lret cmp repnz mov std xchg xor xor fstps fstl add cmp imul popw daa call cld xchg and shr sub movsb jne pop in pop stos aas push jge lret movsl out cmc in movsb mov dec imul fidivl cs jns pop jge rcl mov aas xlat into or je or xor iret xchg pop push mov or dec sub stos mov xor jmp or lret arpl lods xchg jl push imul or cmp popa fisubr aam imul xor cmp addr16 push int sbb pop bound sub std mov adc fistp mov pop xor sub loop xchg push adc popa jns xor or or cmpsl xchg mov shlb inc (bad) and mov add or sub aad cli fdivl xchg fdivl clc sub fild xor popa sti cmp jle cmp jo adc mov sub ficom jb ret sbb xor xchg adc mov popf adc repz mov jne ret sbb test sbb insb out mov fwait push xor xchg jmp lret leave pop out bound pop ret and and or xor imulb mov jne cwtl mov mov push xchg sarb outsl sarb bound or jg and mov or aam jmp into lret lahf pop scas inc mov mov cmp mov pop push mov sub jp pop aas mov dec and jge out je mov xor inc mov pop lcall dec mov mov sub insb jb inc inc push mov sub xor jns test mov pusha adc gs decl mov imul mov scas or repz mov and ret es and icebp out sub ds scas or ret push lds sub sub outsb pusha fisttpl popf cmp ljmp cmc adc xchg inc test cli xlat icebp pop sarl mov mov clc lods in add push mov adc mov mulb dec sub add in loop fdivrl jmp mov xchg pop imul dec dec mov ds or sub fiaddl push insl sbb (bad) add mov mov sbb sbb push sar lret clc dec (bad) mov addr16 fadds sub enter div mov lcall mov sub int xchg aam inc fstpl ja popf jge mov push mov int3 aas test int std mov jmp lret xlat xchg jne fsubs out and adc lcall mov or adc xchg adc lcall dec repnz xchg imul cmp les mov ljmp pop je fldcw jl cmp dec jne xchg test notl push xchg ja int3 dec call pop mov aad xor inc jo dec sub lret or les mov dec xchg push call inc sub daa dec sti xlat inc aad mov lcall jmp or mov jl inc out and mov jmp and mov push dec mov dec and lret fdivr into mov sub mov xchg pop or push xor mov nop (bad) xor lock or push test ds jecxz icebp movsb cli (bad) mov pop adc enter sbb xchg outsb cmp xchg stos repnz in aad das pushl nop xor icebp repnz inc push and clc mov and enter ljmp mov xchg mov mov repnz ror jmp icebp int fstps xor sub mov xchg insl pushf xchg push lret pop pop adc mov fs push fadd lds xor and mov dec sub jp xchg mov aas pop aam leave xchg and js xchg push inc imul or jns xchg jmp push or sub sub xor dec ret mov sub xor mov into inc lret inc jg lea (bad) lods xchg bound stc jbe ret sub push add xor dec mov loope inc push movsl pop pop inc (bad) and or fisttpll inc outsb adcl xor cli xchg xor rorl sub cmp push xchg lcall bound leave mov imul cli and mov sbb clc and adcb dec inc push mov xor sub fcomps pop loopne div sbb repnz sti (bad) adc aaa (bad) icebp mov pop (bad) xor mov xchg adc scas jecxz jns aaa imul mov cli cmp lret lods jle sub push ja pop idivl fidivl out cwtl daa add decl cmp ficoml les out in mov and repnz (bad) out or cmp repz mov (bad) sar dec jnp (bad) shrb pop shr xchg mov dec (bad) mov or (bad) dec jb inc adc cmp jp (bad) cmp inc sub dec fimul sub inc (bad) jne cmpsl add push lahf xchg cmpb ljmp mov popa stc xor push insl daa (bad) ja mov cmpsb mov ror jmp sbb pop mov pop add mov sub dec push scas fcoms push mov icebp push movsl inc push add loopne ja or mov push add in mov sbb ja xor dec inc loop add and push out outsl into aas pop push pop push push mov (bad) lret (bad) pop or outsl les sbb add push ret jmp push out xor adc je lock mov mov push sar mov mov mov inc adc push outsl add push mov jae lcall lock xchg or jnp xchg adc or shl (bad) and jne mov mull push (bad) or ret imulb sub mov dec (bad) mov es and insb adc mov jmp inc mov mov dec add jns rcrl loop and inc fimull lods and rcrl adc push push xchg push sbb xlat xor xor pop push and fisttpll test or or call aad push or add loop jmp push cmpsl jmp add outsb les ficompl nop and inc loop jnp cmp fwait push add dec jmp emms outsb das rcrl call jns jle adc out xchg dec mov dec xor xor enter sar pusha stos lret push cld out bound add xchg jecxz and call mov pop add loope es mov jl orb jmp (bad) pop shr sbb dec test out icebp clc loopne cwtl push add stos fist roll flds clc int3 (bad) clc and enter jmp shrb mov xchg jno inc inc andl pop pop ja mov mov ljmp popa jle add push push push mov leave sbb jno inc or jmp pop mov and sub or neg outsb (bad) (bad) loopne stos xor stos lock xchg out cmp iret jne push repz rorb stos sub or aad ja pushf lahf xchg inc add push sub cmp jno in pop adc adc cmpsl add cmpsb insl dec or stc mov push dec in add es push out (bad) leave push sarb leave call inc jo sub ret cltd or and pop ds jnp pop push jmp and je out xchg fild daa or push push repz lret leave inc repnz xchg add clc sub je pop mov pop sub in leave jle pop (bad) imul ret in lock mov push pop cmp (bad) mov dec ljmp loop jns (bad) dec insb notl cld pop push add lds daa or pop pop mov and movsb (bad) stc int3 fwait xor add pop xor jno or cs imul inc add mov rcl orl xchg lods push (bad) ljmp ja or xor jmp jno ljmp pop jecxz sub add loop jae movsb out bound sbb pop imul and or mov mov add add inc ljmp lock mov rorl clc inc and jl pusha and hlt xchg sti adc lret xor repz sbb lea push and je fs cld or xor out jg bound test shrl daa xchg sarl loop and fwait andb sub std and ds cmp in sub into adc fnop push adc xorl lods cmc movsb jmp into scas cwtl dec out icebp addl in divl sti imul repz mov pop test fisttp dec (bad) fldenv (bad) sti mov stc pop pusha and push pop pop mov push add or notl and das pop xchg aas dec mov ret cltd notl das and cld pop add js mov das fdiv into (bad) out dec mov fsubrs into xor xchg int3 dec js dec leave cltd movsb add out cltd jge and repz repnz loope loop sub or ljmp scas aad daa addl pop stos cmpsl cwtl dec mov mov (bad) jb call jno imul push cmp cs mov lret pop pop push ja stc or push popf cmpsb fsubs mov stc jecxz xchg (bad) scas jno jmp jle xchg roll ret insb sub fbld test mov inc enter scas push push pop cltd and and add mov mov adc loop out mov mov decl add hlt (bad) cmp aam jns or sub push roll inc enter dec mov xchg out cmpsb fcmovu adc clc hlt mov push adc add and and sub jmp in enter arpl jmp roll mov insb cs pop push clc sub out ficompl fcomps push mov int push in dec repnz cmp add popf or or (bad) push jl leave daa (bad) notl ret add test jmp imul mov data16 js mov jle push ret xlat jb mov and lret test mov pop mov (bad) mov add mov sub pop iret loope jp les push xlat inc jo push test stos insl repnz fs mov sub jne dec adc lds mov (bad) ja daa leave test mov bound and out pop imul iret or and adc sub add stc mov push add mulb nop dec fistp ljmp adc pop jmp jmp pop mov gs or inc gs bound bnd hlt pop jb xchg sub and cmpsb xchg mov cmp xor hlt scas gs test mov xor jnp fucomip mov loop push xor push loop push je pop fdivl rolb sub mov repz dec ffree add and ljmp repz mov pop push rep int cmp sub lret sub test repnz jp ds clc rorb xor scas push mov ja leave push xchg adc movsl sbb pop (bad) adc outsb cltd cmpb adc data16 repnz and daa fsubs pop add and loope mov call daa (bad) xor mov (bad) in mov and scas leave test dec loope cmp sub add es lret sub aad jnp or xchg scas cmp xchg xchg and cmp or das mov out xchg ss lret sub aaa fstp rep sub out pop pop mov pop test repnz xchg loope je adc stos loop lds (bad) fsubrl icebp popf cmpsb sub das jmp (bad) repnz mov movsl mov bound iret jb mov jle cs pop dec ds lods jecxz dec push fnstsw add push or xor cmp fs outsb xchg push inc test popf (bad) mov xor dec push jns das mov shr lret ss lret and push jne cmp ret adc xor andl mov or and mov xor fsts pop cmp fmuls lock and push sub xchg pushf jns adc orl aad add hlt (bad) js (bad) mov xor mov or int inc stos and or fsubrs stc sar push outsl sub mov lret cmp or (bad) clc imul (bad) lret pop and scas fstps outsb sub add cmp lods int3 cmp ja mov fwait mov sub daa push mov (bad) fsubs and xor adc inc jp lock loopne jmp out xor or cmp push in les cmp (bad) ds dec sarb fucomip aam rclb or xor sub jb loopne xchg inc pushf fbstp inc sar adc push mov sbb pop loope out loop (bad) loop nop xor push inc lret adc cltd mov imul arpl pop push aam lcall mov or xchg fnstenv mov adc lock rcrl outsl adc xor das out mov cltd mov sub sub adc xor out sub push in fs jmp in fst jmp pop jmp cmpsb ret and adc stos mov dec mov pop push fmull adc sub jns movsb jg pushf jle sbb (bad) dec (bad) sub mov or in xor insl pushf leave or mov adc ret cld ret scas (bad) out lret je xchg jg bound pop cmp lret pop icebp and jp cwtl adc nop cli or leave or lret mov in movsb out push pop mov dec lret pop daa mov lods loope mov inc repnz sarl and lcall sub aas pop jge and cli cltd int3 (bad) jmp xor or pop arpl ljmp push sub out sub cs cmp adc mov imul push pusha mov out mov adc stos bound jmp push (bad) leave xchg pushl pop fisubl pop cmpsb movsb inc pop xor leave outsb mov (bad) and cwtl imul (bad) push stos sub and or sub or push das add enter dec push (bad) fildl daa mov mov add cmp and mov mov lret add mov xor mov fistpll jecxz dec int xor scas gs push xchg ret ja inc dec cmp cwtl xchg data16 arpl ljmp call das pop xchg sbb jp cli sub xor mov sar jmp ror pop out jne fisttp into aad lahf xchg or xchg push sar xchg sub xor xchg ja pop popf push mov fdivrp pop and lcall fwait inc sub push fisubr mov add fldl dec and mov xchg jmp inc sbb jecxz pop cli and or jge add rorb mov sub mov popf out (bad) leave add hlt cmp shl or repnz fdiv jmp and xor lret push push sarb stos ret pop (bad) push and push aam cltd shrb lds xlat mov and arpl dec push xorl and sar in out sub xor xor (bad) xor xlat les jl ficompl nop fild jmp fcoml or pushf and sti cmp ss jo fstl jg jbe xor roll and sub mov ret or insb das lock ficoml mov sbb mov stos mov neg adc ret movsl aam jmp push xor mov clc mov imul ja clc dec in cli mov add lahf pushf out or mov imulb sub stos iret dec pop sub in mov lcall jbe push dec sub mov idivb and and (bad) mov xchg loop jb push xor ffree cli xor clc stos movsb mov (bad) xchg adcb sahf sub add mov mov nop cmp xchg ljmp jbe pop repnz fisttp fidivl insb fnop mov into adc sub pusha pop cld push and pushf mov add popa pop or icebp lcall cmp repz ret mov add push jb sub rcrb jg cltd mov ficompl icebp nop xchg add inc in and jl dec out jne popa push out jbe push testl cmp xchg (bad) xor lea xchg or mov mov sub aad mov fbstp dec sbb dec adc idivl shrb fildll popf bound in mov loop (bad) and into loop (bad) imull dec pop jge aad cltd adc mov pop pop jp or insl and inc and dec (bad) bound xchg sahf xchg insb inc daa mull xchg cmp in jl adc xchg pop jno gs push sub (bad) mov outsl into (bad) mov xchg cmpsl shlb push aas xor cmp out inc add sbb jmp je std addl mov sbb cmp xchg xlat sbb popa call cmp rorb inc push (bad) or cmp and jp add std sbb fsubrl sub mov (bad) gs je lods decl cmp cmp movsl popf pop mov mov sbb mov sub ljmp and sub xor cli mov dec int3 cmpsl mull clc add xor scas in and cld out repz dec jno mov (bad) sbb pusha mov ja cmp mov adc fistpll dec xchg das add gs sub adc cmp xor ds and cld lock loope out lret ja lods (bad) lret jecxz lea mov movl or inc cli mov dec xchg xor cmp cmc sarb sub pop or adc repz sub pop insb inc sbb lret sub popa orb mov cmpsl (bad) pop daa cwtl push sub mov jbe (bad) scas mov ljmp out push sub mov cmp push jl lods add push ljmp sub sub xor fimul pop mov xchg lahf mov enter lods aam jb repz jno movl notl mov jns pop add xor (bad) dec ljmp or lcall sti pushf mov jnp or pop out mov (bad) xor mov mov mov xchg ljmp insl sub imul int3 roll (bad) pop add inc mov mov dec mov adc or fnop and cli in out (bad) out dec pop sub pop or call add fyl2x test add fnstsw push test cmp push sub add (bad) jmp ja dec aas sub lahf icebp shll mov bound pop jno sub xlat in ljmp jmp cli xor inc aaa cli mov ss push pop or into push lret xor int3 mov ljmp mov or int3 mov lret mov (bad) and ret push (bad) xor scas imull fldt mov and sahf lods ret push stos dec pop out adc and imulb sub and cmp daa inc jb stos pop inc jmp fidivrl out es pop add shll (bad) cltd subl incl cmpsl nop aam sub in xchg shll mov or or (bad) xchg push and or sub outsb lds nop adc jae xor xor fidiv pop test fidivrl bound outsl pushf sub push inc cmp sbb mov cmp mov daa pop insb mov lds jae push mov fildl lods stc jg xor jno imul ror jge inc fs mov inc add mov and adc lret and mov je fisttpl adc idivb test clc fwait pusha sbb pop cld mov fidivr mov insb bound cmp imull cmc sub xor int3 adc mov add sti cmpsb inc or adc test mov jne outsl (bad) dec aad adc and les push or push into jle adc xor ret add cwtl push sarb int pop dec jmp out ret ja xchg dec pop iret (bad) lock mov lods inc add pushf loop fstpt mov sub fprem xor dec mov or cli add lods sub add push jmp jne mov movsb out pop add jbe (bad) cmp ret lods mov fisubl sbb push fsubrs xor mov pop and push aas sub add jne pop jb icebp lret push xchg stc mov (bad) call jb lcall dec ret sub adc or add sbb lret mov mov inc mov inc mov data16 push imul sub sub dec fist cmpl leave fstl imul sub (bad) outsb das jl mov cwtl es adc sbb shr mov ljmp jmp cltd mov out mov jle daa into cmp je xlat mov push push mov aas test and (bad) sbb outsb mov aam (bad) sarb mulb and es pushl aaa gs mov xchg out fnstcw dec fxch cmpsl rcr out or xlat roll popa dec mov negl and sub and std cmpsl cmp and lods inc mov daa fcompl push adc or dec xor pop pop xor add in fwait je jle sub pop imul pop (bad) repnz cmp pop cltd inc in sub push mov sub (bad) cmc loop cmc loop cmp das (bad) sub cwtl sub add ret mov mov and into scas pusha cmpsl xor (bad) out vmovups add add mov pop cld jg xor mov (bad) stos gs mov or jp scas movsl push push sti fdivl xor rclb add mov xor xchg enter leave outsb (bad) icebp lret sub mov aaa popa add pop cmpsl stos sbb push and sub pop gs and mov sbb inc mov push add out je lret or mov inc jle xor notb shrd add (bad) lcall fsubr push scas loop xchg scas gs push imul sub stc movsb sub push jecxz push insb jbe dec inc lret adc and mov mov adc stos xchg xorl into pop shrl mov or cmpsl mov add cmpsl ljmp fcmovnu inc (bad) sub xlat popf push (bad) gs pop jp xchg hlt adc xor add mov enter mov into dec dec ret idiv decb adc cwtl sbb mov std adcl add in push mov sbb cmp mov arpl pushl stos or add pop mov xchg rorl jmp notl das mov mov pop inc sbb and sbb cli ds (bad) test test and cmpsb sub xor add fs call cltd mov push and ljmp inc enter cmp or xchg add pusha lds cmp xchg fdivl sub sti mov and inc lret adc pop jl pop adc cltd test cld mov cmp daa outsb mov or mov out xor xlat cltd mov daa lds push lcall sahf out lahf cwtl cwtl adc dec fildll xchg repz adc add int3 xlat lods mov stc loope and inc shll adc roll int std imulb mov jle mov or mov leave icebp loope out outsb mov pop fsubl ret sbb push push lret movups xor xchg mov in popf dec jns or pop faddl test arpl add scas xor jmp arpl xchg (bad) ja and loopne (bad) mov xor xor jle out dec (bad) ja ss les sbb mov xchg push push push pop shll out dec and pushf xor (bad) xacquire movsb lock fidiv je sbb int3 outsb daa and or inc lcall jbe dec stos (bad) div lret lea scas jbe push jno xchg or or incb lods adc fsubrs and mov imul adc xchg pop (bad) testl fimull sbb std pop xor lods jnp adc mov dec lret gs cmpsl push pop daa adc test into aad and sub stos (bad) xchg pop mov (bad) bound into pop mov lret lcall pushl scas clc xchg mov jae rcl arpl mov push shlb add iret rol push inc or dec das sub jo xchg pop or iret (bad) mov cmp dec iret subb cmp dec jmp or cmp mov lods mov xchg insb xchg sahf sub add js (bad) fadds call repz ss and xor aam pop fldcw push dec sub fbstp cmpsl jne std xchg push dec push xor outsb mov inc shrl aad mov inc cmp and outsb cmc xchg decb sbb mov (bad) inc push and lahf push xor loope imulb mov sbb mov xor aad aaa pop cmp data16 mov daa loope cmp aam fs cmp int3 sub mov cmp ret sub and adc loop xchg loop mov push arpl divl jmp cmp scas test mov push ja iret add lea ljmp mov mov jp lret xor js movsb dec test ja mov xor enter pop sahf aad inc sbb pushl or popf data16 adc enter sub sub cmp les sarb in mov xor cmp pop jo jne mov cmpsl push mov cwtl leave ljmp mov mov adc cs sub mov jg cli jge mov loopne repnz mov lret leave xchg test lock daa aad loope or outsb aad jl xchg mov sbb cmpsl xor (bad) mov pop mov pushf jge xchg add inc scas cmpsl push shll sbb jmp xor adc scas lret out popf es into rolb test repnz fucomp stos dec dec movsl fist sahf add cli dec mov jmp dec es mov jmp mov cmp mov inc push adcl cmpsb call xchg addl mov mov dec and lahf xor dec (bad) xor and cmp sub pop lock popf push push pop mull add add incb sarl cmp pop push pushf movsl icebp dec dec xor jo lock jle pop add lock mov pop adc xor orb and fsubrs push lea jp mov and int3 scas mov (bad) xor lds add rorl dec movsb pop fmull into stc pop int3 push loope stc mov (bad) mov les cmp sarb in jg dec out (bad) fucomp aad imul mov ret int3 test xor jmp scas cmp add popf or xlat lds adc mov mov pop popf rolb ds popl sbb ds je pop and push and mov es cmp pop cmc out les sbb lahf movsb repz sub pop outsl adc stos mov repz movl fwait adc mov dec mov jnp adc xchg aam jmp and loopne out into dec and add push cmc loop push pop test and testl adc fs sar shll jne jp and dec out fs pop mov jno add fidiv ret (bad) cmp aas outsb pusha mov mov popf vmovaps scas fsubrs pop lret cwtl pop (bad) mov sub mov add sti jnp aad pop and mov or jge pop dec sub popf hlt mov (bad) jmp les in xchg mov and stc fildll in fldt jmp sbb pop xor dec xor leave cmp ret jl push repz dec int call (bad) bound inc lret push (bad) xor fiaddl leave pop adc lret mov lock cmc cmp pushf lea (bad) bound cmp cwtl push sbb fnstcw ds mov pop iret lret jae and adc mov jmp es imul add aam int3 ja imul pop jecxz lods pop (bad) mov roll cmpsl pop cs push inc (bad) cld pop push add add rcl adc dec xor into inc dec test stos sub dec mov pushf loop sbb lods push add repnz mov sti pusha mov inc ljmp (bad) imul insb (bad) mov outsl jno jmp cmp jmp push jmp data16 sahf (bad) fdivr inc push sub jb popf sti fs shrd add lret test daa iret push jl or imul fidivr and test jmp and out lods add and jae mov mov adc (bad) mov ljmp dec (bad) push cmp imul mov mov and pushl or fbstp cmpsl jae add lock jge xor es mov push or test add mov pushw and or cmpsl jl push lock loop rol mov xchg jg lcall sbb cmp into add pop mov xchg sub outsl fxch cmp test sar jo mov inc ds adc dec inc and sub les stos sub pop inc pop shr lret sbb es sbb pop int3 int3 arpl in ds cmp sarl arpl mov lret add jns xchg negb leave sub sub jg or adc (bad) jecxz pop add mov daa (bad) fsubl lret outsb ja lret xor mov mov adc (bad) mov adc lea push and sub out (bad) icebp inc dec pop jnp push jmp inc rcl mov cmp and xor xchg mov stos sub or loop xor ret xchg fisttp movl imul pop stos pushf pop insl dec or std in dec pop inc lods push dec pop data16 push out sub (bad) xor jae or adc (bad) sub cmp xor push inc rcrb into push mov jo mov and sarb jne (bad) and mov add cmp sub push push out xor inc (bad) popf fnsave mov cmp roll dec cli jmp test test or mov push test sub jbe rol add sbb shr mov mov loope and xchg popa mov sub repnz and cmp and mov pop negl (bad) call fistpll and ljmp cli lahf data16 fstpl xlat and xchg jae lods incb cwtl std mov out dec jae xor xadd push test ficomp repz mov sbb fistp mov ja test cmp sbb out xchg sbb mov lea dec call ret jnp adc mov sub mov (bad) mov in daa mov enter add xor xlat mov add xchg loopne out notl dec sub (bad) mov pop aas cld data16 mov inc sub idivb notl ret dec mov adc repz ret mov sub lock stc adcl fildll adc nop call jns imul sbb jo pop (bad) stc (bad) sub mov mov push push and adc adc lods out mov mov jge popf das jle leave or (bad) shll rcrl mov mov dec in xor mov in fdivp push push stos xor add adc pop (bad) jnp pop jl jno push aaa push mov addr16 (bad) mov pop or xchg gs mov and mov aam call cli ret sub shr movsl ret push ret pushf (bad) in or mov add mov outsb rorl ret jns mov mov sub or mov les test mov ds (bad) leave subb ret or enter jge ret xlat or adc daa adc shrb (bad) sub jns dec push mov icebp cmpsb add sbb fisttpll mov mov sbb lahf cwtl in and mov cld lcall cmpsl popf adc mov sbb popf push and add jnp fs decb xchg lea add jo in ds mov mov xor cmc dec push push out movsb pop cld cmp ret enter or mov test or cmp pushf jne adc cmp cli pop or movb ficom (bad) loope cmp cmp or pop mov into and lret dec das sti das test push push sub in aaa adc jmp jp push pop icebp lcall fs xchg das lret (bad) mov and in mov jae adc repnz xchg mov aad stos movsl ret xchg sub (bad) repz jmp pop sub adc mov int3 push or sarb jae ss insb xchg test xor repz cmp dec and leave (bad) inc mov test mov xlat jb stos mov arpl sbb xor sub cmp sbb or data16 aad movsl dec push cld xchg lock and mov pop xor (bad) mov pop cltd outsl inc add sub les xlat (bad) cmpsb pop dec test cmp and (bad) lret scas xchg xchg cli push sub (bad) jge and xchg shl movsl loop fisub sarb fsubs jmp mov jno popa dec xor fist loope imul and lret lea mov inc and pop add cmpsb mov mov and les mov neg mov ret jnp nop sub out pop xchg mov inc mov fsubrs dec loop mov dec jno adc lods addb add das (bad) jo popf or mov pop jmp mov mov sub sbb ret (bad) lea repnz xchg je mov adc cmp fwait out mov and mov bound fistl push jns scas inc outsl and inc loope out push mov push gs pop fnop sbb sti ja js pop ss mov mov and leave jbe jmp push mov pushl imul adc rcrb sub cmp (bad) dec and leave or mov aad cmpsl xlat mov xor pop adc xor jmp rorb cmpsl jmp lds ffree adcb push sub mov out cmp mov push xor jnp je or sbb and xlat sub lret xor lods aas xchg or dec mov add and mov cs sub ljmp or xor xchg mov and push and xor icebp pop adc push mov mov add xchg pop cltd rcl sub cmp js xlat mov lret push or lea or jle das mov sub roll ret dec ss leave shrl adc sub mov sti xor test jge mov push xor xchg inc push xor jae popf adc scas mov jg sbbl cltd cmp pop mov xchg dec cmp adc out dec orl pop les jge pop add and cmp das call xor decb adc sub push pop cwtl movsl and jb adc mov cmpsb out xor cmpsl lock sbb xor cmp popf cmc xchg push add shll (bad) in sbb push push ja int3 push or enter add mov jg (bad) outsb lods jl xor repz xchg pop out adc stc test and adc xor pop gs out (bad) insb mov and dec mov mov das repz ss hlt jecxz xlat cltd test (bad) jmp jmp clc daa and sub or fnop jecxz mov sbb and dec pop int add cli iret outsb inc mov roll mov pop mov add sub mov mov mov cmp negb cmp or inc faddl push out and outsl and negb xor pop loop nop orb ret dec in repz xchg mov sub lds insb xchg call cwtl add inc add jmp jb push sub add push repz popf jb lcall xor jmp pop sub lret xor insl or or lock mov ret mov or inc or (bad) xor paddsw sub sub scas mov sub imul out cwtl popfw bound sbb lahf push iret scas sbb push inc push pop leave add icebp aaa or out fnstcw xor (bad) xlat jge (bad) dec (bad) adc sub push pop xor icebp push ss dec pop pop (bad) pop addb iret lods adc scas mov loope in and lods aam jmp (bad) incb insb (bad) popf std xchg vpsraw cmp mov pop sub mov hlt (bad) cmc jge test and mov mov pop stos jb adcb pop jmp lret add (bad) xchg out (bad) mov (bad) scas xor adc lahf (bad) incl ret jo sbb jg inc mov mov (bad) (bad) out imul test mov and xorb pop fsubs dec adc sub sarb scas lds sub mov jp or cmpsl mov jmp iret mov lods orl adc add xor mov loopne add xchg aam sub aad adc xor sbb sub mov imul inc sub add mov fdivl dec fidivrl pop fadd icebp mov int xchg jns fs mov sub mov xor mov lret push xchg bound div inc pop lods pop inc lcall jle leave cmc movb fcomi push ljmp jno aam dec (bad) xor sub bound cmc repz mov add (bad) into inc mov add mov lds dec (bad) mov mov and stc test sub jnp mov fsts ret dec movsb (bad) loopne sbbb pop sbb jbe xchg cmp inc js mov call add orl xchg clc js int push push xlat jb mov push mov jge js fwait cld mov push or xlat out (bad) adc loope test jmp xor cwtl movsl (bad) test ret xchg out test mov das push push daa test xchg fildll xchg popa xchg and mov mov push pop jo lock ficom push mov jp jge rcrb sub and aam cmpsl fsubl jno dec int3 cmp addr16 cmc out call aas imul and push adc in add jae das bnd ss dec push or cli ss fwait add or xor mov dec adc stos int cli icebp mov out gs push pushl inc or or fnop cmp jne sub mov jmp jmp push nop imul adc inc dec mov mov pop sub dec lds (bad) stos mov mov notl dec sbb jmp push popf stc sub out negb outsl cmpsl add hlt sbb fucomp jp xor push (bad) mov (bad) mov rol mov pop add test xor leave mov push iret daa push outsb and and dec jmp mov or inc add xor jb lcall mov mov sarl jno dec lret daa jg sbb ds xchg cld mov gs cmp mov cmp mov pop out gs xor sbb dec sub ds popf dec mov mov das sub cmp into les mov inc mov ret push xchg nop jne and (bad) push dec sub xchg (bad) daa jmp test je (bad) xor scas mov push sbb cmpsb daa jbe in movsl cmc bound negl dec lock adc std inc add std add cmp jnp mov fdivrl inc lahf out and pushl xlat mov sarb pushf sub and imul repz daa jecxz shr ffree ja mov xor push rcrb xchg out inc mov sub or mov mov (bad) ds xor push (bad) fwait inc pop repnz (bad) hlt inc jno cmp jb lcall hlt data16 jmp (bad) ljmp pop mov aas call jns les jb pop aad jbe sbb ja lahf jo push xlat mov or xchg sbb es es inc into leave ret pop imul xchg out imull pop mov pop jb in inc xchg adc stos cmp add loopne mov pusha scas stos mov xor (bad) push dec mov fbld js lahf icebp ja leave xlat pop insb scas pushf and ret aam jge mov test out xrelease sub pushf jne test mov lds jne push mov ljmp sub jg cmc pop dec out in out mov ds je cmp push jae sub adc add test pop lret cltd bound xor ljmp mov jp js call sti mov lahf xchg iret cli addr16 lcall push int3 icebp sub cmp ja imul je dec aas ljmp pop scas dec pusha aaa jno ret leave cmp inc movsl not out xor ret jge jne add pop mov out das mov xchg sbb and sarl jmp push rcrb jecxz into ljmp mov mov push push bound cmovle imul movsl xchg xlat clc lcall mov sti repnz xor pop xor fwait mov ds popa sub test rorb mov pop (bad) repnz addr16 (bad) sbb pop sub pop dec jecxz cmp lret jae jg call mov xchg jecxz dec (bad) fstps scas xor out add arpl call mov or inc pop and mov fild mov or sub lcall lahf fcoml sub sub ja aam xor insb cmpsb pop repnz pop lret xlat daa ret (bad) nop les shrl out popf ja out lahf push xor cli pushf mov stc pop add or fwait mov adc (bad) xor icebp cmc into sub inc mov imul add push imul mov rorl mov inc cmpsl push movsl jno sub sub jl add ret (bad) lret jns xchg or pop repnz les push loope ds mov and cmp dec xorb or into data16 lret ds in movsl xor ljmp xchg ds mov mov pop mov push (bad) stc adc xchg mov (bad) imul add in and scas sub pop pop and mov movl mov das add pusha push ret xchg mov add push push imul and and outsb mov jne out push dec pop mov cmp (bad) xor lods (bad) jns mov into jg xor sbb push mov mov mov aam sbb xchg test sub lret cmpsl test stos pushf test adc cmp stos jno out dec test stos mov negl sub pushf xor mov lods ret jg inc and push gs sub imul iret repz and jbe icebp mov cmc pop dec out aam pop jmp stos mov push loope sub mov int inc ja mov out sub add push push pop loopne idivl mov sbb xchg mov mov push into rol xor xor or jno push dec int3 or inc add out xor pop sub outsl mov test push sub cmp and subl cltd and dec iret sub and add fisub adc shl jns mov or add pusha mov xchg mov inc sqrtps das stos cmp xor sub mov hlt rolb iret add inc xor push xchg xchg jo je pop rcrl mov ret or fidivr dec mov cltd fsubr aas clc sub jmp jne adc shll xlat add in movsl jl ret nop adc and insl test pop mulb dec int3 xor dec sub ds push shrl or rcrl jp mov outsl adc lods jne jne mov (bad) jb adc mov inc add adc stos lret in or out (bad) pop jecxz divl add pop sbbl rorl jle jmp and xchg sbb adcl addb sahf nop lret add jb mov out mov mov xchg and sti mov leave sti mov xor mov adc daa jmp stos bound fimul dec out notl dec (bad) scas nop bound movsb inc stos mov xlat out jo xorb and imull xor xor pusha add pop add dec jmp push dec push sarl leave (bad) xchg or cli std push adc in imul into repz sub (bad) gs lods mov (bad) sub dec pop mov popa xchg fsubl dec sar cltd push or imull mov fisttp (bad) mov inc adc adc add sub cmp sahf lods test mov (bad) sbb mov pop mov and mov jg cmp jecxz sub mov mov loope jp inc mov mov imul sahf and add pop leave pop insb jnp in mov scas bound or stos dec fdivrs sub push cltd adc es loop add (bad) xor popf push xchg ret int3 pop xchg fmuls out xchg xlat stos fs (bad) pop jbe pop pop inc (bad) or inc or test mov icebp fdivrp xchg lods sahf (bad) sub pop pop aas xor xor cmp mov rolb es or push (bad) in in leave loop pop mov ret jbe call int and xor lock lods and hlt stc mov icebp jp mov imull jle xchg insb inc dec sti sti cltd inc das xor dec out cmp outsb xor xlat pushl mov mov imul leave xchg stos xor jl jmp mov flds push pop fldt push cmpsl dec jmp test stos lods shll dec xor loop and and pop cli sbbl cmpsb mov cltd sbbl add sub jns mov mov jmp push xlat jecxz or pop fistpl sbb imul fistl xor adc ljmp je lahf aam push xor push pop mov imul mov rep mov pop mov jecxz pop pop sub movsb es or cli sub cmc push sbb cmpsl negb jp aaa xor sub out mov mov inc out (bad) in xor mov or adc jecxz cmp sbb pop pop pop pop add ret xlat ljmp cld lahf mov pop xchg mov cli and out daa ljmp mov mov adc lods dec out sub mov dec mov xchg xlat xchg xchg add jae sub jecxz push sti sbb and jmp mov (bad) and xchg rcrb mov dec lret pop mov pop mov lret or mov xor int (bad) dec push mov mov fcmovnb sub push cld inc sub pop pop jp out cmp inc or and clc xchg xlat test out mov mov mov pop cwtl or lahf push out lock mov or adc je and dec stos sahf cs lods loopne lret imul cmpsb jg mulb sub or cmpsb add pop iret add add mov cmp into movsl test ljmp xor cmpsb stos dec shll dec icebp scas lret jecxz cli jb leave aad jge nop ret sahf adc call inc div push pop xor jns mov xor (bad) xor jne push push add in sub inc insb ja add pop hlt sahf sub push mov fst ds lret scas xor out xchg int inc jns mov sahf (bad) rcll jb addl dec sbb adc test leave pop jl (bad) (bad) test fcomps lea jmp mov (bad) int add pushl push mov repnz dec stos and pop repz sub and pop inc aaa add arpl (bad) jne in roll push sub mov scas add push mov sub lds sbb mov movl clc (bad) or or ret fbstp je mov pop ljmp stc (bad) outsl call into jge hlt jnp and ficom sbb push sbb (bad) aam push or cmpsb mov or test inc shrb mov mov mov pop pop or mov jmp lock ja scas xchg fstpl dec and (bad) imul inc xchg loope call fucomi dec add pop add icebp jo popf sti cmp test cmp add sub rcrb or mov mov repnz and inc addr16 movsl cmp ljmp adc daa in sub aas loop popf les inc orb imulb insb push fisttpll lods push into and lds scas xor add ds lcall mov cmc jns lcall sub xor cmp adc popf dec (bad) pop xchg mov mov (bad) lods shr cmp into negb push sub adc and andl mov incl push jno dec lret push cmc dec mov cmpsl jne mov adc jp or xor dec push jno or rcr cmp icebp pop jmp inc mov and xchg push dec or add out (bad) xor lds out xor (bad) mov stos in and mov adc xchg jl add scas fstps test mov xlat adc sahf loope ret adc mov inc pop xchg data16 jb (bad) scas fstl loope cmp xchg fisttpll xor out push popf lret sarb lret inc ljmp and push mov popf inc (bad) jmp lret mov adc cwtl add inc add ja xor mov mov rolb rcrl pop std dec fnop pop (bad) mov fs pop sub fadd dec and push sub pop fnsave ljmp xor popf pop mov push add xor mov sub les nop xorl sub xchg into mov xchg out jmp xor sub jno out sub fisttpll imul mov mov rcrl ss leave stos popf pop call and cli and mov dec sub out leave rol sub or xor jno repnz xor (bad) call cmc data16 (bad) sub mov mov lret movsl push std shrl cmpsl sbb sbb std sub ss loopne aad lods mov xor sbb call jge call cwtl pop insb popf leave add dec scas pop push setge inc mov add sub mov gs mov ja xchg (bad) dec xor mov inc cld das (bad) push adc (bad) in outsb and xadd cwtl and pushf push repnz xor add adc dec xor push mov (bad) pop jmp and lret xor int3 jge adc inc jp fdivr enter sarl and or add lds or ljmp pop or mov fs insb loopne xor imull aam pop and pop repz pop icebp xor lret sub xor adc (bad) sub out sub sub xor cli fcompl sahf sub push xlat cmpsl sbb std ret inc jg and adc sbb fdecstp es pop fwait pop mov leave pop cmp xchg (bad) adc lahf push pop mov xor jno add outsb mov push imul std jmp dec popf (bad) xchg fwait add push jbe push and add adc pop adc imull mov or push (bad) mov imul das and xchg stc sti (bad) fidivr dec out mov into xchg scas jne xor shll dec and mov jns popa mov mov cmpsb sbb pop aad inc ret adc mov movsl ss cmp sbb lock xchg in cmp xor add dec push pop or push mov mov iret mov cmpsl out clc leave dec sub sub repz mov aad sub (bad) add xor sti dec daa les lahf incb cmp xchg push aam cmpsb lods pop push cmp xor stos cmc push sbb ds cmp dec add xor inc test cmp shr push sub xor outsl xchg int3 mov dec add adc mov stos fbstp cwtl rol inc push xor lea sub push lret iret dec repnz or jmp mov (bad) add and ljmp adc push pop or out das or push cltd int aas mov cmp fist inc sub ret cmpsb and or push xor loopne sub (bad) mov mov pop in push and (bad) test push orb (bad) clc inc add popa mov pusha cmp mov and lahf dec push aam icebp scas bound bnd lea sarl pop jbe leave fcompl out sub cmp dec aam mov imul jmp repnz scas cmc sub popa and add stc int sub dec icebp push sub and lds mov out repnz imul into data16 cmp push push jbe leave push js dec into out sub ret dec imul scas xor int3 ret jmp dec (bad) cmpsb inc and push sbb shr ret in push cli aam pop movsbl dec repnz dec inc mov mov mov addr16 aaa scas sub inc jg or fildll sub or std cmpsb adc inc add mov mov lcall add jecxz push popf je add imul cmp rol ljmp cmpb pop in rorl pop sub pop jmp lahf negb (bad) push ret dec sbb (bad) jge mov jl push mov push mov loop push pop mov or or push decl mov xor pop mov push xor divl leave sarb cltd lods das jecxz add daa stos jl cmpsl sbb add iret not rorb fstpl nop dec xlat arpl add jle notl rcl or and or (bad) jnp jl push inc or pop sub mov jmp pop test or pop movsb or (bad) daa cli ja pop cmpsl (bad) gs dec mov mov mov xor testl aas inc push add cmp pop push mov (bad) jge sbb jmp pop and pop jg xor or sbb push push push and in or lods cmp ja adc cs repz push (bad) mov (bad) cmp sub inc xor fidivr ret pop add mov xor jno outsl neg dec inc inc shll mov xlat dec int add clc push (bad) mov jge push (bad) and inc push lret push adc imul add pop xor jmp lret dec push shl mov add or insl or inc movsb xor xor sbb sub jno xor adc jge call adcl pop int xor cmpsl pushf and bound (bad) jne rolb pop push movb bound pop (bad) movsb jno jb (bad) mov cmp ret pop ret mov mov pushl inc pop in xchg loop loop lcall sub aas gs cmp adc mov jmp imull mov or stos in sub cli je ljmp jmp aaa dec test dec jmp repnz ret and or or lods push xchg xchg mov retw push mov test xor std outsb into or icebp in mov xor out sub movsb cmpsb ret dec mov movsl push adc test xchg pop int3 sub or mov enter sbb lret mov add js cmpsb push cmc js movsb jmp adc sub pop call jbe sbb pop test lock mov cwtl (bad) (bad) mov in jmp and jp stos jbe add mov or cli xor xor mov inc aam in hlt inc sbb ja mov mov lock cli cltd int or mov adc test dec fnstenv addl sub mov jne and (bad) ror fnstcw out jnp xor test scas jo and cmp push mov add mov aaa test mov or loope jbe push cli inc dec out scas mov inc jmp lret or into or pop pop sbb lea pop call push js inc xchg adc clc lret mov inc inc fidivl dec lret aam pop push mov movsl inc and push xor dec mov mov mov add loop xor jae pop repnz cs scas rorl fnstcw popf mov jno dec mov jge mov mov inc sub imul xor loop lahf pop xchg ret jl xor mov in scas je push sti aas test sbb cli sbb and and aad push or mov jg cmpsb add cltd pop mov icebp neg sub or cli add jge pop xor or xchg inc (bad) push pop data16 mov fnstsw add js xchg lods bound neg xor dec imull pop divl inc jle inc mov shlb loop cld std push and je push aam push inc pop je push sub dec mov out inc adc push je or jo dec int loope pop push sub inc scas pop adcl addb push mov push mov outsb dec push mov jle fadd loopne jg sbb stc pop adc add out lds out add imul add nop add out pop orl push mov inc push push out (bad) outsl or adc roll mov lahf popa sbb push inc xchg add pushl (bad) mov jno or sub sar jns fcos inc fwait add and into std imul add in pop fbld and inc add jns push pop pushf fcoms push test hlt arpl jmp push jns fiadd sti xor outsl cmp mov adc sub pop push (bad) mov adc mov sub pop cmp adc lret jno push or adc jp sub pop push add jmp push pop or pop add aas sub xchg push push scas lea sub sub ljmp or pop shrl push cmp jmp dec adc shr push insl je xor sub xor sbb or nop outsl or xchg push xchg push push inc and jno wbinvd shrb mov xor fmulp or sbb and out sbb (bad) and mov push stc jl mov xchg mov mov add lahf push mov das xor jle sub adc test pop div sub push pop gs xchg mov ss inc mov pop jecxz mov out mov in pop sub push jge lds lods mov adc cli jno (bad) pop sub sarb nop push sbb sub les negb lds and adc hlt enter sub push mov cmp sub outsb add xchg and add pop xor mov (bad) dec jbe cmc in or jmp sbb xor testb xchg into das (bad) aas dec adc xchg add aas sub or stc push movsl jg xchg (bad) dec xchg sbb dec dec test test pop pushf ret stos pop add xchg xlat call in dec movsl mov pop clc jg out test dec fisub lock add mov daa js sar mov jmp dec jne mov pusha pop aad aaa jge cmp pop inc rorl out lret punpckhwd (bad) xor pop push xchg mov aad pop mov jmp add lods and mov clc push mov aas add lret cmp cmp hlt int3 xchg mov jbe roll lds stos lret inc mov and outsb leave sti fistpll pop push push mov lods test and dec into jecxz clc add cmpb mov cmpsb out ds rcll cmovnp stc jns or mov pop mov lock dec out int3 cmpsl (bad) sahf sbb pop xor fimul mov jno aam mov (bad) ja idivb call pop loop sarl mov sub ss mov stc xor xor jp clc pop mov test sti mov iret jbe imul jmp sti imul dec pop sbb cmp adc daa and icebp xlat (bad) mov cmp notb dec push sub xorb jno mov (bad) mov loop jle inc (bad) push push xchg push jl push push adc mov mov pop pop xorl int cmpsb sbb add jp inc repnz sbb mov pop jns lds jp in adc in inc mov rorb mov dec and fist dec jno or iret mov movsl fdivrp nop add mov push sbb mov ljmp inc jnp jne sub fscale inc add mov xchg (bad) movsl call loope mov (bad) or stc and xor add pushl mov adc add stc and push aaa pop mov or aad push xchg ljmp jmp and pop aaa mov in add lcall sbb and stc nop sbb mov fdiv rcrl jmp jae mov or xor imull mov (bad) mov sub or xchg fnstcw xchg orb xor pop repnz test sub sub dec jns push and mov aad ficom shr adc sub pop notb inc sbb jb out inc (bad) cmp insb aaa push add mov arpl push pop sub dec cwtl je xorb fmuls add sub cmc cli add push jns lahf imull into inc iret dec lret sub pop mull out inc shlb jmp adc and shrb sbb push pop dec or stc xlat fs test lret (bad) lret and sub xor jmp jne mov jns scas fldenv repz mov fmuls mov lret imul sub push mov mov cmpsb popa mov fisubr adc (bad) xor add incb (bad) add ret sub xchg ljmp je cli repz adc and sbb dec cmp (bad) xor int3 or movsb add or mov loop push pushf jp pushf jmp stos adc dec mov pop shl cmp data16 enter ret or jnp and out mov test pop mov iret es push or mov (bad) and scas jb lret xchg jg xchg jl pop (bad) push nop insl mov sahf mov mov daa js cltd addr16 push sbb enter scas lret test hlt and mov out mov ror mov (bad) fwait loope imul ficompl and (bad) out ret push stc sbb bound addr16 repz xor mov or iret iret inc sub sti fdivs ficoml popf push push pop ljmp pop int sbb mov into and in mov ljmp pop icebp idiv adc ret leave cmp test sub mov sbb mov mov and or jne out sub sub daa inc fiadd add xor push cltd sahf std jb shlb ljmp daa insb repnz jmp inc cs stc std andl imul sub inc jo add into movsl mov pop and sub les sarb arpl mov ds and sub out (bad) gs jge std mov push cmc lds and xchg sarb inc and nop and aaa dec mov sbb or lahf mov fcompl jae add fwait (bad) fisttp xchg mov ret pop inc add or bound prefetch adc je push dec cld imul sub cmp inc lods adc daa rol int3 adc jl push sub adc push ljmp fsubr and repz lret or push mov or out data16 xor cmp or mov adc aaa pushf xchg mov ror cmc fisubr mov pop in movsb push rolb lods mov pop jmp lret dec lods je lods stc movl mov sub push aam (bad) daa add (bad) and xchg mov dec cmp mov gs adc cld cwtl imul (bad) xchg sbb into push cmp xor jl push in jnp sti add std sbb or xor (bad) test leave pop fnstsw and adc idiv (bad) leave divl call pop mov les sub push and dec sub cltd jmp mov (bad) xor add test neg xor (bad) sub push pop sub xchg inc dec (bad) mov pop xor rcll jmp fisttpll movsb xor jmp mov jmp das clc mov or xchg push add mov ds push cltd inc shrl popa mov pop (bad) in (bad) adc and xchg dec mov and xor mov dec std insb and push mov and add (bad) dec insl stos sub ljmp lods xor jne sub (bad) jae loopne rclb das jmp jg movsl xchg les sub iret pop in ja lret or or leave add and xor mov inc dec pop jg icebp sbb cmp cmp inc pop adc sub loop push imul and and xlat sub clc mov mov mov lret mov das mov lock shrl add and js sub dec test imul ds jae and add (bad) dec mov imulb adc add dec mulb dec fcompl sub add fsubl enter or xchg fs mov sub and out stos call (bad) int sub xchg das idiv mov push loop push lds add sbb (bad) int3 movsl cmp sti pop outsb mov cmpsl out dec push ret test fstps sbb cmpsb enter (bad) jmp xchg xchg (bad) in (bad) lret (bad) pop cmpsl lods nop lds mov xchg cs fs ljmp xor inc stos into pop pop lock pushf cwtl add hlt cltd stc or pop cltd in dec mulb out jle sbb out cld movl negl rol shl jmp call mov repnz (bad) insl daa (bad) mulb xchg jmp lea jg jp mov mov push or int3 cli sahf mov std dec mov imul mov lcall out mov fbld pop or clc and xor loop jg mov mov out aas shrl sbb mov ja jmp pusha sub inc (bad) or mov test xorb lret sub sub lahf dec fisubr mov sub add movsl pop clc movsl cmp adc xor call jae pushf push cmp mov adc sub push rcll out sbb inc dec ficomp or pop and xorl lds fsubrp mov adc idivb dec sub mull pop jno repnz outsl imul loop xchg sbb xor (bad) (bad) cli stc jle into aad cs sbb pop mov push lcall add lds add cli ja out pop or cmp sub jnp nop repnz push xchg mov bound ja add and stos or mov mov fstl rorl mov daa rcll dec test arpl mov ljmp shrl enter sbb ret or daa fmuls out daa and jne or imul sarl jno fisttp shrl mov aaa mov sub dec sti bound out jl iret (bad) repz jp (bad) ret or test jmp xlat or cmpb pop mov jns mov test loop or and xlat or dec cli xchg jge xchg mov push jmp jge sub scas sub add lock popf dec ss push cli sahf cmp xor clc jo out mov sbb push cmp std nop lret into pop cs bound aas adc imul (bad) lods and enter lods push ds dec insb lret mov loopne and aas dec in push loop jge adc sbb or nop sub add lea lret (bad) mov push aad test ret insb and mov out cs cmp jmp enter int3 sub cmp stc mov xchg jp int3 adc int scas push bound lods xor xor pop push mov xchg insl out pop cmp xlat add mov out add mov and shll arpl xor cli mov pop adc add cmp cmovno jg jmp adc or add pop sub xchg fldt popa adc add hlt imul imul add dec stos jp daa or data16 out es pop mov fistpl jns (bad) mov aaa push test push mov or cld jns xchg shl add mov xchg sub imul jge jae push mov (bad) xor pop outsl jle add aaa insl sbb push push add fildll pop and loop fimull add les mov jmp pop mov sbb add out orl sbb pop mov mov xor and add push push push nop outsl mov dec mov outsl xor mov (bad) dec stos mov pop int3 popl xor push or push mov test push push jge xchg add jmp xchg or lret movnti test sub loop xchg scas addb pop inc sub or pop mov pop add jg xchg push xor cmpsl std xlat push add aas mov push push jle push mov les xlat pop rclb stos mov jo out (bad) (bad) idivb add (bad) jno and aaa mov jno mov xor pop sub dec add jne dec push dec add mov shl add pusha mov mov aas pop inc sub add and add mov lahf push or cmp lcall pop add and push sti mov xchg icebp or es xor lock (bad) and scas push out loop hlt lods cmpsl bound or (bad) mov stos push push jae scas push popa cmp add or sar movsb cmp xor jmp (bad) mov test jle rcrb mov fidivl jle dec add ffreep (bad) fisttpll sbbb dec (bad) int3 pop add stc jg test mov movaps rorb rclb inc ret scas (bad) cmp add sbb xchg repnz add xchg loop pop jno dec adc je (bad) xchg (bad) dec ret mov sub stc pop testl call cmpsl movsl imul cmpsl shll push test mov mov pop fwait jmp testl lret test repnz or sub sub pop rcr mov sub retw sub mov and lahf jb mov aaa and mov aam sub xor pop cs jl lret and test pop rorl hlt sbb imull or push test (bad) or aad js add lock aam adc div pop ljmp pop call sub sub sub int xchg mov iret loope add lahf sbb fstps ror dec mov mov xor dec lock clc fcoml xor jnp sub cwtl repnz sahf adc mov sub into call pop in js sbb mov mov dec lret (bad) mov scas mov cld out aas repnz leave mov or jle jmp mov ret adcb lock (bad) out fidiv and sqrtps and insb xchg or xor out (bad) mov xor lds outsb sbb jns xchg (bad) daa mov daa repz and add xor (bad) ja dec lcall fs inc in out add cmp mov and xor ja pop push lods jnp xor cmpsl imul (bad) push lods sub mov pushf push jmp hlt enter ljmp sub and cwtl add xchg push in jnp mov gs out mov adc jp dec inc pop sub fsts xor cli sub pop pop pop repnz hlt aaa cmpsl push add sub leave test ret xor cmp out loop sarl and mov loopne add pop mov bound mov repnz add sbb (bad) sti (bad) inc scas pop fwait or jmp dec loope repz pushf insb stc lret mov sub test stos lret or arpl pop or dec adc mov dec je xor mov dec ret insl inc xchg sub dec shl adc mov cli mov leave jg scas sub sub lret mov int and fistpl or std in mov outsb mov (bad) mov adc push cmpsb add add mov sub out mov mov mov inc hlt and push xor imull mov (bad) leave rclb or popf push adc dec mov mov ffreep cmovle xor add sub and sbb sub xor int lds push dec iret pop repz (bad) add out pop push fs lret lahf mov xlat cwtl xchg push jno dec arpl test fs cld dec (bad) (bad) mov mov pop lods pop and inc xor mov icebp mov adc dec enter and popf ret loope xor ret push jne xlat sub movsb xchg leave push movsl data16 les inc out sbb inc push xor cltd push sub (bad) mov push mov test cmp in push xchg pushl inc jg stos dec out sub rcrb mov jo hlt and hlt in in cmp lret and jnp add shrb xchg je test sub sub orb shrb iret dec idivb aas jne mov iret xchg xlat mov fdivp das inc adc leave (bad) pop mov out lret call repnz pop and sub cmpb inc xor or leave std cmpsl inc lret and xor loop add in dec lret stc and mov std cmp out sbb or test xor ss loopne stos xor pop mov lret hlt pop mov fsubs mov fbstp inc lods shrl icebp enter lds test dec (bad) int movsb adc inc pop push dec inc mov lods xchg (bad) ljmp xor xor ret mov lret xchg pushl sahf adc cltd stos sub (bad) mov xchg leave push je push sti push lahf xchg xor cli dec maskmovq add aas lock lret jmp xchg xchg sub gs les jbe dec (bad) repz or sub (bad) mov push mov pextrw jno jne xor (bad) movsl test arpl mov nop xor insl ja je cli stc popf hlt mov sub data16 add lahf pop xchg test lahf jne test out or jbe jb out stos add dec repz sbb out imul sbb push mov dec add push sbb xor leave (bad) data16 mov movb and inc clc mov jmp mov xor (bad) dec lock pop sbb xor push add mov inc imull sub out or ds out test loop mov cli fs pop (bad) push xlat or lret in and pop mov sbb (bad) mov int jp mov into daa adc adcl mov test stos bound ror shrl push sahf sub mov sub cmp mov lret ret enter xchg dec cmp stos into imul jecxz adc mov cmpsb es or dec jbe popf daa je pusha jmp fldenv pop enter inc rcll adc stos or pushf push push and mov xor fldenv sub cmp jmp call sub adc addr16 mov and or add push push xor popf push mov push or cmp aam add cltd mov and cli xchg push stos arpl movsl sti fmull fwait imul fs sub or rclb xlat mov shlb mov xchg push mov fs dec or dec sbb dec scas jbe jmp or or (bad) mov faddl and xchg scas xchg repnz mov adc cmp cmpsl outsb add xchg sub xor cmp cld and into cld mov pop lret rorb xchg je cmp lds adc (bad) mov and pushf fs or icebp lock add mov mov out lods outsb mov inc lods inc ljmp xor mov icebp adc and mov adc ljmp test sub lret mov mov xchg cmp and and ret add add (bad) sarb shr dec repnz sub cs repz mov sub cmp orl xor lods push or and dec fucomp cmp cwtl xor jne dec or stos sub dec rorl cmp aas cmp and inc mov frstor decb stos imul (bad) (bad) cmp pusha lret fs xor ja mov (bad) lret pop iret mov lea repnz outsb xor cmp fbld sub adc and mov into mov push dec (bad) xor out mov adc fbld pop ljmp dec stc and mov jbe lock xor outsb mov repnz pushl sbb mov repnz xchg jno sub jecxz or je push aad cmp cmp sub dec dec sbb sub inc inc lds mov xor ret mov popa popl fistpll jb sbb jp cmpsl dec mov sub and add repnz cltd push and sub pop adc sub ljmp sub les xor push jmp pop xchg gs xchg add push mov add pop mov outsl (bad) daa cmp dec cli sub lret mov fist daa imul in xor mov adc or push xor push lods and dec repz push inc pusha pop mov dec xchg nop pop lret jl notl popf fsubl push sti add rep pop sub sub jmp (bad) or in sub test iret add dec repnz mov mov test (bad) cld push and sub fstpt add into jne (bad) jae adc ret int scas sub add jmp mov movsl call xchg inc mov sbb out loop push mov adc icebp xor xchg lahf xchg lock xor mov sbb outsl xchg dec jmp sub mov mov sti xchg das (bad) fucomi cwtl loop mov (bad) cmp (bad) stos adc xchg xor cmp and in popa ret stc out xor scas movsl aad (bad) jg repnz lock lahf shl mov imul mov out push cmpb cld sub mov notl mov cmpsb bound xor es inc and mov xchg inc xlat sub xor sbb dec out mov dec sarb pop mov pop adc xchg sarl push daa out add stos insb gs das jle xchg inc mov in jmp cmpsb push and sub negb xor test mov and (bad) xor add decb jecxz mov mov sub lcall scas adc iret or cld and dec subb push ficomp xchg xor mov jae sub fmuls repnz stos sub xor or jp cmp sub jne jmp dec call call jge or sbb xchg out sarb push pop ljmp sbb int (bad) sub dec mov cmpsb cmpsb lret xor bound jb jge fwait ljmp and add xlat test xor cmpsb sub loop pop pop lret gs jmp mov jne (bad) dec inc xchg (bad) loopne push aam aas (bad) or std xchg mov (bad) ja ror sti aad dec xor jmp or pop clc (bad) sub shll jp jne xor jle imul aas pop (bad) xor xor jne jb pop adc ds scas adc mov lods sbb jmp mov lea jno jmp inc sbb sbb mov stc dec add das dec stos xchg xchg mov dec and into xor lahf stos jo rcll (bad) out stos mov out sbb out daa mov scas pop outsb pop das movb js ss fstpt and ljmp ret xor pop push xchg out out mov dec ss imul sarl pop mov push mov dec jge pop cwtl daa xchg std sub adc jne dec movsl pop cmc push adc int3 xchg and outsl je mov stc add aad cs imull (bad) imul clc add mov jbe les and dec or jecxz les aaa out xor or aam cld sbb sti mov lret xor xor mov and stc cli aam and mov and sub pop cmp sbb inc mov (bad) movsb loop pop xor (bad) cmp repnz popf fcomps cltd fdivrs es lods and lea push xor jl in cld cmp add pushf xchg out or aad test adc adc xor arpl loopne add popf lcall mov add jne jnp adc push adc sti scas repnz (bad) mov negb rcrl test xor mov loop (bad) dec dec testb stos mov pop repnz jp stc and add repnz dec not sub push dec sub das lds and sub int3 cmp mov dec mov pop pushl test cmp fnstcw pcmpgtb (bad) dec adc mov xor mov pop sub sub js xchg pop gs ljmp mov mov xor mov cmp (bad) sub xor sti arpl rcl add add out jmp sbb out pushf or dec push out cmp dec pop mov sbb jmp adc dec out aad mov inc sub test lahf rorl mov and das mov sub cltd xchg (bad) or into adc mov mov and push and xchg pop (bad) js mov jg jl rcrb push bound loop push stos dec pop pop mov push jecxz imul mov sbb dec push int3 xor xchg clc mov into data16 pop rcrl push mov xor insb adc imul inc movsb mov imul or rcll pop sub ret push jae mov add mov jle dec (bad) loope pop pop insb je push push xchg jnp fisttpl sub push aad cmp ljmp jnp and sbb adcb cs add inc jno loopne repz fwait (bad) jns inc pop adc call dec and sub inc stos xor mov inc inc mov jecxz adc jne xor dec jo ja sbb xor jbe mov jmp add mov sub sarl and or cwtl std ja ret or pop pop adc inc or push lret push push mov xor pop shl push add sub notb push push lret fldl push cmp xor (bad) inc xchg pop pop out pop jmp or jl shr pop fistpll (bad) jecxz pop and push fistl push lahf xchg pop aaa das fs push mov pop int3 fcomip hlt lret xchg cld mov xor test inc mull push cmp push lret inc mov roll imulb movsb cmpsl stc jp mov mov mov or lods fstl and in mov inc jnp (bad) hlt adc add mov loop push sub xchg ljmp sub or lret vpminsw mov and mov (bad) cmp pop daa ljmp mov movaps js (bad) mov lea ret jno pop push xchg leave clc fst test mov sti mov push in xor dec in addl xchg je repnz fstps ret xor ja push sti mov jae (bad) jnp sub push or das xor loop pop xchg jmp sub jmp pop pushf les adc fnstcw inc lret ficom xlat mov mov dec mov xchg sti xor sub ljmp (bad) dec or mulb and sbb adc cltd aaa lods popa xlat xchg insl mov cmpsl rcrb fbstp in (bad) aad out add mov je or push fsubr fnstenv pusha adc and mov out fdivrs out xchg push pushf inc std loope outsl sub adc adc out rorl dec repnz dec mov cmp in and je arpl mov repz pop or adc adc pushf mov pop repz cmp sub xor jmp iret inc pop xchg pop and sub outsl inc sarl test stos gs gs adc jno lret sbb hlt rcll pop mov les xlat mov sub stos lret add bound mov fsubrl fs pushf test scas xor mov sub fcomp xor fldenv and mov dec push call movsl push pop adc out out and dec push add popf jle jp pop sub dec rorb popl imul inc xor jge decb dec jmp enter or sub pusha add sub lahf into cmpsb pop xor mov (bad) test (bad) mov adc loopne add (bad) mov into mov (bad) mov push jg mov andl mov and js mov or mov (bad) mov in mov cwtl ja mov cltd idivl cmp add fimull arpl jmp xchg out loope sub hlt shl fistl xor mov pop ret inc daa das (bad) (bad) daa rol enter mov and repz pop lret mov mov sub iret icebp aas mov mull dec push dec pop mov (bad) jae add cli add mov fsubs repz mov mov sbb xor or pushw add sub xchg int fwait lahf pop mov and pushf mov sbb pop out mov enter xchg mov fcomip int mull jns dec push fs out mov sub jae add shlb (bad) pop jbe mov daa iret add xchg std adc popa mov lods in enter xchg (bad) mov and dec pop shll jl cmpsb mov sti xchg xchg add xchg mov pop adc cwtl or add or ljmp xchg pop mov pop cmp rcl imul shll mov pop sbb das into ja bound fs fs sbb push std inc mov mov push adc push dec into sti lret test (bad) cmc lds adc mov or or adc (bad) in cmp push add insb and fs adc and jg in or jmp or add bound lret jmp sbb (bad) xchg hlt psrld cmp push xchg sbb mov adc and xchg mov adc or std adc inc mov das sbb stc jns mov jne mov lret clc idivb into mov cmc lods cmp stos mov xchg sub push xchg call iret sarb add movb rorl dec jb into in adc nop fwait dec mov jp pop jmp add sub and (bad) cmp fistp jno out mov lds call mov idiv insb and lods and loope or (bad) sbb and lret (bad) jecxz sub push ds ja jmp cltd xor cmp scas jecxz test (bad) jge rol jb mov repz fistl add repz fiadd fidivrl xor add or shrl pop cmp jle ss add inc arpl jns cltd mov xor (bad) pop sbb push dec test mov js (bad) mov push inc dec xchg inc jnp add mov xchg pop cltd pop push out imul and xchg ss xchg add lret mov dec mov mov dec lods rcll bound jns mov fs push mov call popf movsl adc test rol dec ljmp ja push lock les jno js adc negb aas cmp ljmp xor add popf pushf adc je ffree sbb jmp xor scas xchg in lret test add or pop sti cmc adc and and fs mov das sub dec or das push adc popf js es pop push add in xchg ja sub sub jae add pop pushf fsincos inc and loope and stc jmp mov push jmp test dec cmp lret repnz add mov mov xchg sub pop inc push icebp fisubl xchg lds into push out jne fidivl (bad) sub jmp mov dec sbb sub sbb pop or pop sbb push push mov dec into add data16 (bad) test iret push push push repnz das cld mov loop pop pop ja ljmp ss loope sub pop cmp sahf aaa add repnz dec jg pop cld and pop and sub mov inc xchg pushw adc rcl push jae adc inc push add sti cltd sbb (bad) add (bad) and aas testl xchg inc aam testb ficompl adc lret cmp ljmp xor push ds pushf sbb xor pop cmp inc loop sub jmp cmp push inc (bad) xor or pop flds cmp sbb xor xor inc push dec callw sub adc add test out repz aam bnd push xchg insb xchg and stos rclb cmpsl rorl popf gs shr leave or xor sbb mov or sti fsubrl or pop sub stos mov cltd adc cld inc pop mov xchg stos bnd es inc sbb mov mov or in add (bad) push xor jns imul loop into sbb push push (bad) mov jo cmpsb rorb lret mov rcr stc jge lds (bad) mov ja sti add repnz lret stc xchg jl into adc add mov and loope pop insl dec pop nop daa jecxz xchg stos mov mov mov xchg cld dec sbbl xrelease inc nop mov or add mov and add add cwtl std add lods dec jb mov ror cmp mov shrb adcb leave inc xor xor add mov xor adc cmp add fstpl (bad) mov mov pop mov (bad) loop push ja mov and xchg inc mov sub pop inc arpl fbld (bad) loope adc push (bad) pop cli nop je (bad) mov out lret dec sbb cmp in or (bad) notl xchg test gs adc scas sbbl icebp lds mov cltd mov decl sbb je ret push leave jmp and movsl xor dec add inc mov call mov mov repz ret mov enter clc (bad) iret adc adc push jle shrl adc cwtl popf shrl fcompl dec pop xor lcall adc stos repnz rclb inc fldl mov divb inc push add sub xchg out les or push mov fist or data16 sbb mov push push sbb roll out das add sbb push sub out sub stos jne mov fst repnz gs cli jb aas fbld and insb jp push mov or pop insl inc inc xor roll dec loop nop daa roll inc leave clc sbb mov daa and add sub mov ja scas sub cld cmp cmc scas cld dec adc and sbb sub fcomip jnp mov or dec pop push movsl xchg sahf ljmp insb mov mov das push add and jge and mov test ds or dec loope inc movsl stos push adc dec out fldt daa pop ret sahf loopw inc sbb lahf pop adc pop and or jp xchg push cmc popf push bound repz mov mov in and outsb mov pop int3 mov mov popf pop pushf xlat xchg push sbb mov test stc dec mov add xor jp pop ss outsl mov adc pop pop mov fldenv pop mov jnp daa inc jg sub ja loopne mov lcall cmpsb nop pop test leave repz or lods flds and (bad) notl sub data16 push in jg push inc cltd xchg fist mov dec jp xlat push jo or sub (bad) out ror fld pop add cmp sub pop and cmp sbb fbstp loop lret adc out pop sub add loopne repnz sbb lret fstl sbb into dec jmp mov daa inc aam mov lods push cwtl je (bad) mov aam cltd sub dec mov cmp pop dec mov aas out (bad) add xor add adc and fstps pop add or incl ret push xchg scas mov xor sbb popf insb leave dec or cmpsl sahf adc dec fidivl sub sub mov mov xchg cmp mov bnd cs dec sbb xor aas ja in sti cmpsl mov xor xchg lea je dec push adc push out cmp iret pushf fiaddl mov repz xor mov cmp bound sti jge sar in xchg das push pop in mov mov inc (bad) mov icebp cmovns add gs cld movsl jle bound pop lcall or adc in add and push (bad) lret stos into sub pusha pop sbb mov inc and and mov fisub das lret (bad) pop int3 pop ljmp into or pop scas clc rcl mov sub shll dec push lock leave jecxz xor push sub test leave (bad) cwtl in xor xchg inc (bad) lcall fsub bound idiv cld movsl inc loope loope xor call lock dec xor xlat (bad) fcoms sub lock ret pop hlt lret int3 sub (bad) mov inc or mov or testl les fbstp aas mov imul push xor imul int3 shrl add xchg jae stos imul push or sub xor sub or pushf fiaddl mov gs in or mov (bad) sub lds ret popf ffreep xlat fisubl (bad) mov inc outsb (bad) adc sub pop xlat mov sarb daa adc sti vpshlq lret mov out popf rcll jmp mov sub (bad) test and and xchg jo test xchg jbe cmp idivb sub sub dec fisubrl aas sub in mov ds pop push aad push divb jb lock add pop pop popa testb sub mov repnz dec ret push je mov push pop nop sub out mov pop loop dec ljmp fs iret repnz cmp es adc (bad) into sub or lcall mov fist or pop xchg mov jmp mov adc setns ljmp mov aaa pushl or pop data16 mov or add mov dec shll repnz dec movsl jno in jge cld adc (bad) or mov add inc xor sti bnd test divl jae jmp xlat sbb jno loop xor xchg adc xor negb jmp clc (bad) xor dec sbb stc cmp outsb push mov xchg adc mov das cltd out inc bts mov fucom ret xor outsl sub in int (bad) cltd mov mov das rep or or jl icebp ja pop daa push popw mov mov les and jb mov sub pushf fs add es adc add negl pop movsb xor aad movsb mov arpl (bad) pop push and push xchg lds imul std sub in cld dec ret and inc inc je imul push xchg jl imul sub cmp fwait mov popf mov xor loopne (bad) lahf push cltd enter add mov lret ss or mov das sub pop mov xchg push das repnz inc and fisttpl (bad) pop mov dec popf ja popa daa out outsb stos mov mov cli sub in jge xorl shll out ret push (bad) xor rolb arpl in dec test clc xor into mov inc jmp cmc mov or fwait lret add jle inc mov xor xor push (bad) enter leave jge sbb ret pushf jmp pop pop iret insl push (bad) fadd and cmpsb enter enter adc jae and mov push jne jp mov mov push and les shr cmp push dec jp iret dec sbb sub out mov in in aaa fistp pop mov jae cli in jle mov in xor (bad) fld and or mov jno,pt sub sub (bad) mov pop out loop xlat mov daa pop and xor fsubs aas pushf or mov and mov (bad) mov jg icebp sarb clc or sub mov (bad) gs mov sub or sti popa jne sbb lea sub or scas (bad) cmc mov leave loope push mov imul pop std fistpl lock lods ja test fnstcw mov in mov div das stc pop xlat les fmuls shll jmp sub jg xchg cmp mov inc (bad) add aam scas fsubrs (bad) or icebp sub jecxz mov loope push or sub sub xor mov adc enter dec cli das sub pop sbb out or cmpsb add stos pop lret inc or sub pop mov stos popf xchg imul icebp inc gs mov mov adc sub repnz mov mov inc inc pop mov jg (bad) mov pop jo (bad) mov (bad) dec mov stos lock xchg (bad) (bad) or les movsl add lds into insb dec lods scas pop cmpsb fimull nop mov cmp inc mull lds dec mov lds fs xor (bad) ja jp push outsl push and dec loope jnp loop test repnz divb lds cmp jno and outsb jae mov mov xor xlat into fmuls mov mov imul sub inc fnstsw push imul sub jg cmc cltd xchg cwtl data16 sub je insb push negl in cmc and iret xchg jecxz dec incl mov ljmp adc sbb or jl (bad) mov loop xorb mov pop sub or adc adc and imul in das clc mov jg xchg shlb lret je mov cmp sub mov idivl insb (bad) lcall out adc sbbb test xchg mov or lods loope and test sub rorl gs loop xchg mov pop popf mov ja and push int3 sahf sbbl cltd push lcall push mov bound flds nop jecxz cmc sbb jmp mov push sbb mov dec (bad) xor mov xchg jp dec push out ljmp subl and sub sbbb jle xor xor add mov fisubr adc dec pop mov push xor sbb dec imul cmp rcr popa int3 add shlb push jmp rclw repnz (bad) mov js pop loop call mov pop pushf jle loope mov add push xor mov movsl pop mov pop xor out dec xor into dec loop mov fiadd inc in or lock pop mov pop jge fdivs pushf into int3 stos in or and push xchg xor ss leave inc lds pusha lret into pop sbb testl sbb xchg or adc mov adc add push and ljmp fst jle push repnz leave adc add fs lcall out xchg movb fcomps sbb testl lret test xor out mov or sub dec inc add inc scas aad out popf mov mov hlt mov inc mov cld test jg jl inc lcall push fistpl ljmp and xchg mov dec sar adc aas insl (bad) xchg jecxz push sub mov adc fstpt jge ss stos xor ljmp add dec cmp (bad) popa lock dec sub data16 jne or mov or lret inc movsl rcrl mov fstpl sar fimul ljmp dec xor daa insb addb mov fsubp xlat mov (bad) (bad) xor sbb cli mov stc es ret mov xchg sbbb adc cmp aas les scas test cmpsl cs pusha pop mov push xchg cs leave js pop fmulp inc or test jle loop push ret push mov sub insb sub and mov repz sub xor pop mov inc cmpb test in icebp xlat stc jne jg sbb fincstp inc movsb aam rcrb fmul ret adc xor (bad) icebp xchg aad ret dec mov jns subl and movsl stos pop push ljmp jmp icebp das shrb dec je adc ret inc jbe out inc sahf sbb and outsb gs mov outsl cmpsb and inc ds dec stc dec sti lret repz jecxz push cmp push scas or dec mov ficom stos sub mov imul add push xchg mov dec sub les push clc mov aam (bad) mov orb adc outsb mov xor sub mov jbe or pop je add lret mov mov je lret push cli lods idivb sub cli and mov mov mov push gs mov and fbstp repnz aad jmp and lret in lods pushf cmpsl insb xchg xor lea mov push imul daa and ret sub pop pop jns or mov lods or repnz cmp mov inc (bad) loop pop mov ljmp (bad) clc das call insl mov inc loope mov int3 sub out dec out je lds das rorb iret lret neg inc (bad) addr16 and sbb lcall or rcll jecxz hlt out sub xchg xor rcr bound mov negl sub inc and mov mov pop ret and addr16 push shrb (bad) out and rorb pusha imul mov push xchg mov adc int3 inc xor mov dec adc sti sub pop movsb stos xorb daa ret fstps jnp sub div out stc mulb aas dec cld cli pop rcl jmp in (bad) pop mov std inc dec mov push (bad) testb dec rcrb les dec (bad) or fmull fistpl out push lods (bad) (bad) push int3 inc or xchg jns dec ja add es and adcl add mov test mov mov sub sub das (bad) cmp or popf cmp adc stos je out aad stos xor mov aad or fs mov pop push inc out (bad) test flds cmc or jo dec iret test mov repz test dec xor (bad) xchg jg jbe fistp outsb jp test out adc lret sub repnz dec ret cmc dec stc mov and push sub test adc loope popf jecxz mov mov loopne jns lods pop or (bad) lock inc shlb shrl pop mov adc fbld sbb cs std push dec and (bad) repnz je mov xchg icebp sub inc shll fldenv scas pop mov mov dec dec daa xor js movsl mov (bad) sub lcall movsb cli mov leave pop jp mov jl pop jno and adc xor add (bad) je std mov lret jmp sbb clc scas icebp test aam scas fwait inc and push ss call loope cmp pop or sub xor or sbb into dec iret xchg jg (bad) in xchg (bad) dec pop jmp decb mov inc lods call cmp add and xchg imul gs inc sbb jge sar mov cmp jecxz sub repz pusha daa outsl mov cwtl mov sahf push rorb stos mov (bad) rcll pop sti lret (bad) jae push inc push int push dec cmp xlat int sub sub aad sub xor mov xor neg loop (bad) bnd mov mov mov sti jmp daa popa js lds fstps sub adc rol mov (bad) sub orl insl das leave (bad) fcoml pop add fsts sub cs sub pop clc xchg movsb adc mov jno mov data16 pop mov rorb dec (bad) adc fldcw and testb int fnstenv cmp mov lds (bad) cmp mov xchg fbld cmp push cld pop pushf push rcl into adc fisubrl push adc lea stc jge les mov dec addr16 xor addr16 nop (bad) lret into aad cld cmpb (bad) loopne mov scas lret jmp push scas pop jmp mov pop push xchg jnp sub jnp movsb popa mov and imul lret test call fstl dec (bad) push leave test jp push popa pop dec in cs scas adc lds adc adc xlat test jle and mov xchg fcmovu xchg ljmp and add sbb fidivrl add and scas test out push xchg mov out and stos popf lret cmpsl xchg or inc sub insb or xchg push or cmp lret jne in add clc imul or loope shlb jmp leave nop push sub sub jge ret ds dec mov mov jmp and add imul jmp ficoml cltd mov dec aam lret je rorw inc mov or (bad) fs mov add xor subb pop mov adc loopne lret mov imul jbe jo sub repz sarl cmp stc cmp lret or fmuls sbb mov out movsl mov or inc xor add dec cmp inc mov sub or icebp std mov stos div xor jmp aam jno xor cs mov push dec stos or stos mov mov stos jne cli loop mov push das addr16 movsb movsl rclb or iret cmc cmp add or es in stos push clc mov pop push hlt mov mov out imul mov iret adc gs pusha jnp inc xor shr dec lret loope jecxz sub in mov out xlat ljmp mov or (bad) pop cmp push lret les xor mov sahf jge dec enter xchg enter das lcall insl or and inc (bad) aas movsb cli lods scas fisttp xor aas xor pop adc xchg jns mov pop pop sbb xor out xorb lcall fs sub in xor pop xchg mov and jmp dec lret mov inc cmp bnd xchg cmp hlt sbb add (bad) dec scas sub add pop pop pushl fnstenv or rcll testl xor fisubr enter jns cs push and mov xor pop insb jne shlb add jne add add repnz cld leave pop (bad) cmp sub cmp idivb sub fiadd mov mov roll jl pop idivb pop out sub sub fsubs (bad) (bad) ss gs xor mov scas cmp or mov and pop add xchg repz push sbb xor ljmp lret xchg push xorl aad cli repz clc movsl push push ds stos mov lcall fsubrl lds xor (bad) es xchg ja push ret pop mov mov mov lcall in pop pop cmpsb push pop xchg and sub scas cltd out jg jae mov in movsl and fnop cmpsl inc pop nop pop fwait mov ds and add repnz or imul xor sti jmp pushf push dec or rcll sub (bad) xor roll scas mov leave jmp repz fisttpl sub pop rcrb test cwtl jb pop fwait dec push (bad) mov lods iret jmp shlb push cmp icebp jle dec xor push cmc out test ret xchg scas mov popf cmpb pusha inc xor popf xchg jnp xchg xchg outsb aad cmp lods stos dec jmp movsl fidivl or mov push sbb xor lahf push cmp or pop push mov mov xchg sbb mov fidivr mov das idivb dec jo movsl fidivrl in and ss xor push or ljmp jle imul movsb jmp xchg mov mov test cld lahf dec cmp cmp lea shlb ljmp or dec test out ffreep mov fsubrs cmovne out cld cmp dec enter xor lods (bad) xlat scas pusha push mov ret adc ficom idiv pop sbb push insb je fidivl outsl add sbb sarb pop sub rorb adc lock aaa mov jno mov jmp mov and sbb jo insb mov neg xor and stc popf jl pop loop push cmp jl daa out aaa jne mov inc and jne mov pop mov cmp mov jae adc xor add dec lret push sub leave xor ds add or out out push push or xor fnop dec pop bound in mov je pop inc incb rcrb mov or lods mov jne push lock and jb lcall out cmp clc mov dec (bad) jb out test cmpb ljmp xchg cmpsl int3 cli subl add jp out cld (bad) pop lods insl dec lret pop pop add ret push cmp (bad) mov xchg mov xor dec icebp out das sub xor ret lods ja ss push leave mov dec mov imul shrb xchg dec mov add or enter and adc cmpsl xchg push sbb cmp pop rorl lret repnz lret add popa scas jle and ret aad je inc sub (bad) mov mov jmp (bad) xlat mov ret mov int add out adc push push pop sub (bad) data16 dec daa push adc mov xlat imul push iret sub jp jo adc idivl sub xchg orb inc adc inc sbb int xchg sahf mov stos add loop lret add inc mov ret xchg test push cmp xor movsb or mov lret pop mov fist shrb pushf and jmp clc bound test out mov daa sbb add or cli xchg (bad) push adc dec loopne inc adc fst mov mov xor pop mov out cltd mov div and push subl xchg mov in jle mov ljmp pop and jmp loope (bad) and orl lret xchg mov jmp test sbb pop fdiv adc int inc pop iret mov (bad) cld mov inc sub pusha cmpsl xchg (bad) imul push jo mov sub loope jb xor xlat pop push scas mov sub cmp test out repnz lahf adc out out sub shrb out pop (bad) std (bad) hlt in fisttp jl push loope cmp adc or or fdivl jns push sbb mov push std mov es xor pop push out pop push pusha push push mov sarl mov dec jmp pop les in push (bad) mov push sbb lcall push sub ret xchg sti mov std daa mov and clc cltd mov push in scas test movsb adc clc std mov pop mov push sti aad (bad) xchg test push test (bad) daa cmp pop js xchg lock scas rolb sbb rcrb hlt xchg jg jl xor jl lret fidiv adc mov pop lahf push lock in push (bad) stc or idivl or lahf sub (bad) ljmp push adc pop pop xor call sbb mov leave push push lret mov fldcw inc (bad) mov xchg xor (bad) flds movsl jl repz test dec sbb xchg mulb jmp add jmp add xor mov push popf (bad) rol scas gs mov (bad) lret add loope jno mov pop xchg enter ds das pop test stos mov xor rorb daa pop adc adc jns popa and mov stos in fisttpll mov push out lods aam and aam fmull inc jmp gs jne in repnz shll jnp inc lods fstl (bad) js cwtl mov or jb pop rorl adc dec gs push jecxz rep in iret fninit adc ret sub add pop adc cmpsb movsb dec mov jne (bad) jg jnp sbb popa and sbbb fs cs (bad) fs out pop or mov or mov xchg sub lods lods (bad) (bad) fsts dec or out rolb jnp push lret (bad) rorb popf out movsl pop push dec rcrb inc adc sub dec (bad) sub clc ja jmp adc inc or data16 bound popf ret jns sub leave idivb outsb inc and loope or pop add jnp (bad) jno push les in mov adc hlt jge mov mov add into push dec mov add lret (bad) mov leave fisttp adc loopne (bad) jle pusha ss sbb insb sub aaa mov push je mov pop es add aad (bad) rol aad dec inc or leave jecxz into mov and pusha mov mov outsb test enter sub jmp aas out pop mov les jecxz dec test stos addr16 aam test movsl inc mov xor rol sbb daa xchg jg or push and add push inc push mov mov mov imulb (bad) push push pop lock cmp sub lock pop or (bad) mov rorb popf pop mov pop gs (bad) and inc mov and pop sub lcall daa into xchg lahf (bad) jl scas or cs mov sub ja outsb roll xchg (bad) mov pop (bad) and out les out rcrl or sub pop mov xchg andb fwait in lock mov jle das je cld pop leave or xchg push xchg rolb xor sub and sub incb inc adc dec into pop (bad) add incb stc aad mov or aam push pop jb or es js ja cmp mov lds into stos cwtl test mov fs dec mov sbb mov lods ds shr sti (bad) mov jp out xchg jg in subb or pushf push sahf insb dec imull adc dec push loopne into mov or (bad) push and xor sub mov mov mov gs mov jnp and sub outsl xor (bad) sti push imul jp dec stos mov int3 push outsb popf fldcw and fidivr dec xchg pop xor sub movsl dec push (bad) fnsave outsb leave test adc add inc xchg push lods cli fidivr dec lea push inc cli mov inc aas sub test cs jnp scas repz imul jnp xor xor or sub mov idiv movsl je and lret push into decl pushl out bnd xor ljmp je mov enter incb jmp mov jbe xchg adc mov clc add nop and rcll bound mov call (bad) ja dec rorl fucomip data16 jge (bad) ljmp pop movsl xorl jne adc stc ja loopne add stc or push jns xchg test out mov adc adc stos sub cmp jo and xchg push adc popf ja and loop xchg dec push add mov pop mov sub xchg dec pop mov pop repz jp mov push sahf arpl pop stc jle add popf in xor dec (bad) aad out mov and cmpsl sbb xor mov cs sub push mov pop sub mov pushf xor inc jnp jge clc xchg ljmp adc xor and insb ss inc mov jle or sbb cmp pop xchg int3 pop (bad) pushl or sub fsubrs pop sub out repnz lahf xor (bad) sub sbb cltd mov jle mov xchg mov dec adc lret subb nop pop add enter or aam rorl mov das inc push xchg movsb mov jae rcr out sbb rcl pop ljmp stos sub pop repnz pop jp lahf clc xchg mov push or sub out das jp push and les add movsb repnz jne repz jge mov sub ret (bad) cmpsl pop insb ljmp icebp dec xor add aas sub fisttpl lds sub cmp popf fnstenv sub movsb ret rcrl ret rorb xor add mov inc adc cld fstps sub sub add and push add or adc adc mov jo mov mov imul data16 cmp mov add dec sub stc insl imul mov outsb jno inc and iret mov (bad) sti gs in enter dec or xor test mov loopne and jo jmp and rcrb sbb jo bound push add cmp xchg jo dec out (bad) rcl in adc call inc scas sub out push push mov mov ljmp dec pop jbe out or (bad) enter adc jns hlt push add mov in dec and lret fldenv or sub mov aas repz enter xchg stc pushf dec popa aaa aaa cmp (bad) mov aad (bad) fxch adc ret cs bound inc stc (bad) std jnp mov xchg or xor cli sub and lret add cli lea sbb adc and call cmp or insb in fldl jmp add notl sti fiadd jle jmp stc pop xchg xor mov jmp stos mov into push pop enter pop not inc ffreep out add sarb push mov outsb not add andb or push pop pop cs push idivl aam xor hlt jne xor or add es iret cmp mul std or add add test jecxz cmp mov sub xor call and arpl sbb cs mov js cs mov or pop add and mov mov push push pop fldl test notb jecxz dec mov push lock pop jmp in xchg lahf (bad) push imul std mov mov mov ret cmpsl pop xchg popf inc pushf xchg ret out lret mov add enter xchg push or xor cltd lock sub sahf repz push mov clc and xchg cmp lods pop jmp jge xchg decb mov xchg inc or sub shl sub cmp call xlat sti je mov jbe mov adc lea mov addr16 mov sub sub jb leave sbb pop insb lret pop mov out std out push cmp stos int3 stos push clc lahf dec pop sbb adc scas lret jnp shrl xor sub mov cltd mov fildll fidiv xlat lods jp dec repnz fsubrl jmp gs cmpsb and adc xchg cmp mov xor mov jl jmp or out lret inc jg cmp ficom pushl out (bad) mov (bad) sub mull sbb (bad) addr16 adc xchg inc ret mov mov jno dec ja outsl mov subb dec leave sub adc jnp std mov sub inc xchg mov dec pop sub mov (bad) fs push scas rcll jmp jmp dec out stos lret pop dec int iret out lret sub mov clc ja movsl or mov (bad) daa adc hlt pop bound stc mull xor add sub lret lret add cld mov add fcompl sub dec test sub sub incl push mov jmp mov cli jne sub pushf jnp push inc cmp pop inc dec jne cmpsb (bad) ficom inc push ret call test imul push je jb (bad) jno dec test sub xor cmp add je xor jecxz sub aaa or pop or ret rorb adc lret out pop cmpsb xor repz dec leave (bad) ja adc mov xlat shrl repz xor rclb (bad) mov movswl push mov insl mov fwait sub sub ficomp pushw daa mov jl adc shr enter daa cmc fwait jmp (bad) lret das inc iret lahf sbb fild ficompl cmpsl cmc sbb mov cs (bad) in sub xchg jle jp clc dec (bad) ljmp cld push imulb mov lea or add cmpsb lods hlt das outsl mov scas adc test in out imul pop into dec inc add (bad) das lock push sbbl add out dec sub dec or ds jge shrl pusha lods adc shrl pop xor nop mov pop fild push mov rorl in adc sub out mov pop std int3 lret iret cmc xchg pop lahf (bad) jl lock xchg jg mov int3 sbb mov cmpsl pop adc out sub mov divb mov lret aaa pop add cmp mov xrelease das jge dec jmp sbb dec ret or add testl mov xchg repnz sbb or adcb and std xchg push xlat push scas or lret mov clc andl xor lods add jb or out cmp cmp jmp cmp adc jae sub cwtl (bad) repz stos sub pop or cmp hlt lahf rclb and ja mov jno das loop shlb inc aaa or (bad) dec or lret popf outsb push das xor cli decl in or imulb mov add xlat xchg rclb adc (bad) out cmc int3 cld mov daa adc cmp in (bad) cli and pop lret (bad) pusha shrb or sbb inc idivb adc popf int3 arpl stc enter dec clc out (bad) repz xchg push inc or jle xchg (bad) xor push xor mov mov adc mov cmc cltd pop cmp bound call cld or shrl add test mov jne icebp mov scas pop sub xchg (bad) cld ljmp das in ret sahf out xor bound idivl ret stc cld loopne push or dec jo call into and dec lret fldenv out sub pop mov cmpsl or pop sbb pop mov lods inc into add inc push incl fwait mov daa push (bad) sub mov lock out mov mov pop scas xor lds cs mov add mov mov sub pop les jp mov xor mov jns inc sub out xrelease sbbl rcll mov mov add add stos arpl sar pop pop es inc xchg push sub mov test nop pushf mov ret stos push jne dec xor add mov (bad) and add lods push push pop lea mulb lock adc (bad) sub rcll cwtl aas ljmp lret andl xor les je les clc not scas daa lock dec jmp xor jmp add add mov lds fisubl stos xor mov pop ret and idivl xchg and push xor push imul cmp out xchg push push mov sub push (bad) jcxz cmp in cmp sbbb test negl push add fwait mov xor jl xor je les add cmp iret mov cmp js dec dec jne stos sub lock fstpt jl xor nop xchg xchg stos sub add call mov sub stc mov adc bound into jne jns sub nop push sahf sub sbb xchg mov je mov scas lret les lret lea out inc notb mov cmovle inc daa (bad) dec in xchg insb es shr cmp rcl and sbb xor sahf lret imul cwtl shrb add dec mov in es imul adc mov sub (bad) sub scas ret jns imull repz sbb mov dec inc cmpsb cmp ljmp in mov test add loope ja or mov mov sbb fisubrl inc xchg lea adc add xchg pop push pop iret jle call loopne sub xchg fildll dec xchg mov or mov inc xlat popf (bad) ds mov adc cltd les mov cmp jbe push repnz test sbb int3 push je pushf adc xchg pop push ljmp dec adc rorb pop or movsl pushl gs adc mov das daa dec fs push outsb push cmc and fstpt (bad) mov rol push mov jg fstps mov insl or pop addb add pop orl fbstp and jle aaa jmp push clc scas mov in popf mov ja dec loopne push mov ja in mov cmc popa sbb idivl (bad) ffree into add in sbb call out pop and addr16 arpl stos fucomp adc pop shr neg lods loop cmpsl (bad) adc xchg or pop xlat adc flds pop mov dec scas pop add pop nop test js sub std popa mov cmp jge dec lds dec shll icebp and js daa push push data16 shrl lcall out jge push fcomps pop in sbb push mov mov cmp mov jmp sbb jp lcall xchg inc std dec jge pop pop rol dec idiv mov shrb lock add xor sbb pop shlb in mov sbb and pop jnp pop loopne gs loop loopne dec xor sub cmp pop inc lahf inc jl push cmpsl push inc arpl or or add push std pop and xchg sbb ljmp loope mov in add sbb pop shll fistpll push mov cmp jle pop pop sub inc (bad) mov xchg sbb sub outsl addl jl lds fldenv fisubr jb jecxz pop orb ds in dec mov lahf pop fwait xor sbb xlat jns scas cmc cmp lock add (bad) (bad) outsb repz and (bad) fcmovne xchg adc lcall outsb loope cs jno sub outsb fdivrl mov xlat and jmp mov inc mov pop repnz sarb cli pop xor push popf lret xor in jg sub add pop xor pop pop les scas popa (bad) sub aas mov sarl daa loope out fdivp or and and inc cmp int3 xor mov aas inc (bad) scas repnz mov mov shrb dec rorl xor xlat mov jne add in cmc test (bad) loop sub roll mov sub and mov push push (bad) jb loopne repnz icebp mov add dec (bad) jg movsl in pop push sti sub inc sbb ss fmul cmp out push rolb insb and cmpsw daa sti mov (bad) or inc pop add mov outsb out daa lock lret or divl or sub dec jno xor jl shr popa mov sarb fidiv pop bnd mov xor gs sti lret fwait icebp les sbb xor sbb xchg dec mov mov repnz gs and push aas fs adc inc sbb xor mov mov xchg ret mov out inc jbe ljmp fcmovbe sub sar mov dec daa enter sub mov cltd ja push or rorl pop pop stc pop dec stos xchg loop sub out xchg or or pushf push jnp imul fsubr leave sbb xor cli add pop mov std mov sarl adc das mov and in sbb enter xor lea adc jbe icebp add (bad) ja stos imul rcll dec outsw and les and cwtl ss xor mov sub push adc cli xor sub repz int xor sti pop add test leave sar adc lret loopne add jmp adc shrb bound mov pop fidiv outsb in das mov lahf jg push rcll pop test pop dec dec hlt push adc mov sarl push aam fcmovbe dec loopne,pn adc pusha stos sub nop add js inc iret out jge mov mov push mov sub jp out in xchg cli dec xchg adc out imul fucom call int3 lock mov jae es mov jmp movsl je dec dec mov ret in push mov sub rcll (bad) mov test rep or dec ja fisubl pop cmp push hlt divb stc xchg jbe lret loope push add jp and test (bad) mov mov add jno cmpsl aad or fs jnp das sub cld mov testb gs (bad) aas shll lret (bad) negl push jns dec je (bad) imul leave lcall add lds out mov adc dec repnz xlat and (bad) aaa ljmp pushf stc mull sub mov ljmp push mov sbb xor mov jb inc insb mov push cmp ja les xchg daa add xor mov data16 jp int3 jp jns lods shll jno sbb and iret lret lret inc pop sbb sub or pop mov lret or xor dec sub jmp mov mov xor push out sub sub rclb xor gs pop imul or imul sub jmp push cmp dec ret add xor insb mov pop out fwait dec push movsb add cmpl push pop (bad) in pop pop call gs (bad) aas loope xor fisubrl xchg divl repz imul fstpl lods dec dec cld jge mov or and cmp mov mov push js lds xchg iret jmp xchg xchg out mov cmp dec sub data16 xchg in nop pop lret or xor xor add jmp xlat xchg pushf insb sub bound sarb xor adc jb jmp fstps dec shrl cmp dec mov test lret gs add xor mov inc pop out seta std in sub push jo mov in icebp sub loop push push mov int out jle into mov push aas sub leave mov pop (bad) mov (bad) (bad) das testb and lods xchg mov aad (bad) xor push outsl pusha xor sub in xchg call (bad) mov lds data16 (bad) adc xchg mov es andl inc cld cmp cmp pushf std xor out popa push aad pusha (bad) xor mov sub sarl fdivrs leave sub pushf pop add pop xchg in out xchg scas dec mov pop mov sub mov xchg ja (bad) pop pop push push fs cld (bad) mov loop xchg mov aas idiv rep (bad) iret xchg cld sub (bad) jb sarl js loope outsl and jbe sbb jns dec cmpsb lahf push cmpsl or mov add mov std push rorb push adc (bad) fs popa inc xor iret gs mov adc mov icebp or jne cld push pop mov insb pop mov add jmp test sub mov jo popf pushf inc pop cmp lock stos pusha add insl xchg cmp push adc test and das mov loop fnstcw sbb ret insb (bad) les dec (bad) and stos mov push mov fsubs daa faddl and test and pushf mov rorw outsb shrb pop sahf mov je or jae xchg add mov stc fdivs roll pop jae sidtl sub pop push mov sub std in sub out dec jmp mov mov cwtl (bad) sub popf jge jp dec and out daa out pop inc and cmc pop cmpsl popf pop add aas in (bad) div push ja and jne pop pop (bad) data16 and xor adc rcrl movsb (bad) lret sti lret inc pop mov (bad) ja pop cli sub cmp lods jmp cmpsb test and dec loope jl scas in sbb xor loopne (bad) mov popa add sub stos and cmp jns aas adc adc xlat mov push pusha push mov xor test xor and loope cmp in cmpsb imul pop call cmpsl cmp push jne dec fisubr cli push or fistpl xchg ret bound lahf out pop idivb rcl (bad) dec pop ljmp rcr lret lcall jg cltd mov add stc add dec addr16 in movsl (bad) mov ja add int3 aad mov and imul mov loope cmp mov pop test sub jbe in xchg mov lds mov inc mov out mov jno inc push mov shrl and cmp xchg and cmp push cmp mov pop (bad) mov inc cmp (bad) bound push mov xor jg js aam push neg cli xor fistpl adc mov icebp jne mov lret movsl movsb rol adc push pop aas stc jl jmp jecxz cmp inc insl sub pop (bad) (bad) test testb add jle and mov ret pop mov add ljmp push adc daa sub fisttpll pusha xchg gs movsl and or jge (bad) and xor orl adc roll xor cmp (bad) jb into mov shr or clc lcall and mov insl sub cmp nop imul clc pushf mov dec outsl test leave sbb out imul jne xorl xor jp dec loop aad sbb (bad) dec shll mov or and xor xchg xlat mov das test push clc call sahf mov add mov xchg add out push iret xchg sub loop xchg les add sub xor bound ret and add mov into adc mov xlat sbb push inc jle sub dec add sub iret jle inc mov cltd or std and cmp rcrl push fcmovb mov outsl std jbe adc add mov xor fnsave lock cmp and adc fildll mov lea data16 pop into mov (bad) popa xchg pop outsl test xchg (bad) push push adc aaa popa aas movsb push insb mov sub or mov xlat rclb xchg je lds ljmp add testb mov (bad) jmp add mov pop xor cmp jmp dec mov pop adc out cmp jmp mov movsl push out xchg aam les out sub mov (bad) and sub icebp shr mov sarb paddsb mov lret jb jle jb nop fnsave dec je xchg enter push inc xchg rcrl lock es lods lock inc push lods inc pop push dec sub xchg shl cmpsb sub ret sub jb ret pushf lods cmp push xchg or add scas test movsb xor mov cmpsb inc pop or pop push test mov xor jge iret pop lds lahf sub jle (bad) sbb test adc mov sbbl popf popa pop adc (bad) arpl cli std movb xchg add inc movsb mov das int3 push and je push ret lods sbb in push loopne ret rorl fstps stc or mov rcl jno xchg icebp sti bound stc jg push fs add mov jp mov shrl mov fdivrl jo cmp mov mov sbb push add mov and and out and push pop adc add dec mov xlat and test lds repz enter aaa mov adc adc sti fdivrl pop lds out (bad) dec ja pop mov sbb cmp xor sub pop xlat dec data16 sub pop jnp fnsave push outsb push ret decl dec xchg dec mov and jmp testl and sub in pusha xor mov test lds idivl jno xchg shrl inc xor or repz (bad) fstl cs das cmp pop xchg jbe pop fmul jmp cmpsb je leave mov push add jecxz xor sub mov cmp pusha (bad) icebp lahf push mov xor ss add sub (bad) (bad) sub xor cmp rorl mov jg cmp sarb pop test inc sub cmp sub add push and cmp mov mov movsl jo in dec and dec fwait sub lahf sbb add imul ja test mov out aas sub mov sub add mov popf add or repz out dec out int3 fisubrl adc cmp add gs jge in mov cmp test dec mov push mov lret cmp sti cmp adc call loop leave negb sti dec insb rcll fucomi xchg fstl jg xor sub test adc sbb jns jne stos repz mov (bad) cmp jle fcoms test xor add in push fidiv dec rorl das pushf mov add (bad) sub pop sub bound jge cmp es mov (bad) mov nop or pop in sbb daa enter xor mov push mov nop push sub mov lea lret mov lret inc lods lret xchg dec cwtl (bad) in add jnp mov or jbe jne push jne add xchg scas test aaa fild imul repnz bound mov pop aad mov pop mov fist pop xor shrb jl push jle scas mov mul jmp call push add pushl lods mov push inc xor xor xchg sub push ret lret aaa lods arpl aam pushl mov cmp aaa andl mov jecxz popf das pop mov frndint test (bad) xchg cmpb std push jo mov cmp pop das and frstor clc mov lds jl pop ret xor sub or (bad) stc and ret into push sub incl cmpsl loope mov pop das sub mov out arpl and adc mov fs sub loopne sub xchg lahf mov and bound push adc negb (bad) sub push cmp bound hlt out hlt sbb and and sub adc cli mov dec mov shlb cmpsl (bad) push sub leave jg loopne add add or cmpb inc xor mov jge jns and and lret adc call mov decl mov pop mov aaa xchg out jo mov sti in jo mov dec pop add pop (bad) leave mov push or cld sub cmpsl or mov ss mov mov xchg pop not push or std push pusha flds ret ljmp fsts shrl movl repnz sub xrelease sub imul scas fs lret add pop push bound xor lods cmp cmp ljmp and xchg dec adc pusha imul cmp sahf imul out xchg rcll (bad) mov rolb cmp xor jmp pop stos out jne repz ljmp stos mov xchg xchg and mov xor aad aas sub mov sbb (bad) mov leave aad bound mov test jg push stos xchg inc andl aam jb and jmp inc add xor push mov jmp rorb mov mov push out mov rcrl mov enter jg add mov mov push dec stc imulb stos insl fldcw push mov lcall imul inc or mov daa cltd push movnti mov mov add mov or stc adc adc push add ljmp bts lds (bad) or sub xchg fidiv scas mul and clc sbb rcll scas cmpsl sub dec add mov or daa loop sbb and and mov (bad) jmp sar stc lret dec dec notl inc cld (bad) in or sbb lds out add jle test mov sub push lret (bad) stc inc dec fldenv mov xchg xchg ljmp leave stos pusha ljmp sbb mov xor movsb test pop pop out add hlt repz pop sti repnz in std xchg cltd pop lret popf out mov xchg gs dec es jnp lods push pop daa cwtl sbb rcll mov xor lahf mov lock dec sub call int mov repz jle (bad) xor mov out adcb cmp xchg jle sub or mov shrb jnp push in push inc popf shrb and sub sub jl movsl mov sub or mov sub push pop jl push bound push shlb mov fimull outsl mov sbb jo pop aam xchg fadds (bad) fimul inc pop dec popa test cmpb jne pop mov push pop repnz jno iret sbb mov ret push sub adc pop and jbe pop sub adc clc dec ficom movsb dec and sub push cli lock add das mov jno or rorl inc loop inc push mov adc out pop test mulb mov push das jb or add jg sbb (bad) lea into (bad) sub bound push add lods cmc jecxz jno ret imul leave mov cmp xor bound xor mov lret cli pop repnz sub lret out add fmuls cli mov jb xorb das out sub and push adc inc mov (bad) jnp jb icebp pop mov out int jnp inc ds mov add setle lods ret lods test sbb inc pop ret dec or or inc push fld test push test mov (bad) pop adc xor and nop sub cli bnd jecxz jl addr16 dec icebp out lret push daa mul or call imul cli les mov xchg insb mov mov mov mov push adc dec or out push pop push pop or out xor jmp xor imul pop lret sbb (bad) sub or mov repnz mov rcll jmp cmp test pop ret pop sub arpl iret mov outsl mov xor neg push dec xchg push and daa and pop popf lcall (bad) fldcw fidivrl in and or or pushf ret push call stos lret shl lcall xor outsb dec shl mov and lahf bound sub lock popf fistpl enter mov jns outsb lcall cmp movsb xor ljmp daa shr mov mov lcall jge stc bound sbb cmp sub jg mov mov iret or fisttp cmc stc packssdw jno push jge test ss jg pop std outsl push pushf or inc xor push popl dec add xor fstps inc push fadds xchg mov sbb add jmp loop out insb or pop sahf inc pop (bad) dec sbb mov loop fisub mov push aas mov dec mov psrlq lea aaa (bad) mov jmp rclb rorl mov mov jno (bad) xor adc sub mov mov sti std xor fisub or add cmp sbb mov dec decb sub (bad) stos inc xchg or (bad) fdivp or (bad) bnd mov (bad) aam push in cld add add adc (bad) inc xor ds mov stos xor stc jle sbb push fs jmp std fistpl push inc mov add xor mov shl lret sub cmp dec rcr test dec mov enter (bad) dec (bad) fucomp or lcall push cld mov cltd imul or xchg out pop adc add icebp into push mov mov add cld xchg add cmp stos ret push and cmpsb dec les stos sub fnstenv and imul or sbb fisubl jbe icebp mov adc insb (bad) shll fs rcrb jmp das add stos and leave xor test das (bad) (bad) mov sub pop lret and ret fs cli pusha add ss (bad) xchg and ficom lahf in aaa mov (bad) xor add movsl loop (bad) mov rolb or popf pop dec (bad) mov push xor sub mov mov or (bad) xor and jmp lret sbb icebp (bad) sub add xor das sub (bad) fsubrl jmp push sub pushf mov nop inc sahf add jns mov mov iret add ljmp xor xor leave sti aas jb or lcall pop push jae dec pop out mov dec aam mov nop leave aas cld push fs inc pop popf in mov pushf mov mov dec mov xchg adc fsub rcrl gs aam mov cmpsb stos das add sbb pop xchg vpshlb mov iret mov jno inc cmpsl xchg lods lret pop js rclb in (bad) adc ja (bad) popf push outsl xor stos (bad) xchg decl je jns lods fistp or cld xor in iret sahf iret bound repnz out add push jbe lret popa xchg out push movsl push lods mov lcall mov test mov sub scas psrlq sub lds fimul movsb jmp mov das inc jmp and pop pop pop jmp repz inc dec aas ficompl mov add pop in xchg adc shll stos and add dec ucomiss lahf inc xchg xchg push pop fdivrs ljmp mov mov les lret add pop test jl pop xchg bt leave out flds imul iret mull add fbld arpl mov nop cld add lock ljmp leave les or xor shlb lahf xchg jns fwait xor xchg icebp lock xor mov pop in add out out lret mov divb stos sbb mov sbb idivb leave daa out lods sbb ja orl sub pop pop and out and icebp pop jp rcll mov or cli mov jp icebp movsl int3 xor pop cmp repnz lea scas or aaa nop sub ja jp (bad) pmaxub enter cmp sub pop adc lock push scas imul or mov aas cmp int call out adcl sub and pop aam shlb cmp dec dec or pop out out ss xlat mov inc xor lds mov mov push jbe adc ret mov and or mov pop test jb xor (bad) mov adc cli fstps inc push mov dec or hlt push dec jl (bad) xchg jbe jne add add mov xchg comiss movsb leave call lds xchg push xlat lret repz (bad) mov xchg shr mov clc pop mov pop inc in mov sub cmp fs jmp adc push das xor sub and inc mov cltd lret mov jne cs aam jno in mov lods dec pop mov (bad) (bad) gs rcr loopne into lret clc ja sub (bad) add repnz mov out fistp clc push mov add push and inc or xchg xor bound out xchg aad and pop mov adc pushf jmp jle test mov dec lcall es adc das (bad) jl pop into faddl ret cmc xor dec scas jmp cmovp out mov pop xchg cltd or shrb or pop inc dec dec mov cmpsl imul ja jg ret or mov cmc pop mov adc adc xor jns (bad) cmpb inc jg xchg leave out adc pop mov jbe jmp ljmp push lcall adc int lods fcomps mov sub sub in jle iret xchg out adc cmp push cmp dec cmp addr16 into dec jo xor dec add (bad) cmc shrl xchg lret lds jge lret mov jns leave inc cmp add addr16 (bad) dec ljmp mov pop pushf imul cs push xlat test mov (bad) mov std das (bad) mov cmpsl movsb shrl xor fucomip js loop mov mov sub mov out xchg inc xchg pop mov test xorb push or es das mov nop das repnz jbe das loope or add ljmp fsubrs cmp push clc in test in xor jecxz and ret fnstsw loop icebp repz push xor mov (bad) repnz mov lret xor cmc outsb lea outsl cmp pop jge pop add mov ljmp popf mov leave jge dec ds je in jmp xor jecxz shll mov mov xchg pop xchg pop pop pop (bad) mov push fwait cs shll sub jmp dec jge insl inc sub outsb aad xlat mov adc shll test cmp icebp mov sti das and add sub sub or shlb push inc mov repnz add mov sub cwtl cli lret repz mov test ficom stc xor cld mov call jmp lods rol xor mov mov movsl bound or movsl ljmp xor cltd cmp inc hlt and mov mov fs js aad (bad) fsub pop ret div mov ja xor push hlt imul rcrl pop andl adc out daa xor cmp iret mov mov insb xlat je movsb mull imul push adc mov jg xchg sbb ljmp cld jo and in movsb dec mov sub hlt mov adc ljmp cwtl or xlat sbb ja dec testl push cmpsl leave pop fsts and imulb pusha jmp je dec das jmp jae sub jne push jb aaa inc mull sbb mov cli lret sbb add dec scas repz imul or andb gs mov (bad) sti pop movsl fild mov in stos popf (bad) jge adc mov fs add test aaa mov add decl dec cmp or jp mov inc (bad) push sub adc pop push dec loop push fstps mov xor push lret mov dec out and push push stos mov sub lock inc pop pminsw sub (bad) jno dec cltd xor fldt (bad) mov jle ja repz leave movsb popa xchg or xchg jl push xor xchg (bad) cmp pop scas popf jmp or jg push mov push mov je idivb icebp jae std cmpsl mov sub icebp aas mov sbb ds outsb mov sub mov into imulb repnz adc mov lahf daa push loopne ljmp and add ds (bad) repz popf and xchg xor imul or fcom rolb xlat (bad) jne add es nop and and scas cmpsl push lds cltd mov lret std add dec cltd mov (bad) in pop movsl push adc cmp xor mov (bad) test aas (bad) and jne jge into sub clc movsl clc mov aas lds gs sub and jecxz sbb mov pop lret imull xor dec imulb ret add xor shll cli test addr16 loopne or daa ds jge ds popf data16 xchg in add roll xor fwait xlat or fcomps (bad) and imulb xchg mov out ds pop (bad) mov daa pop push insl sub push add mov push jns fimul scas frstor pop and rcl into xor icebp ja ljmp pop arpl and sbb cmp pop (bad) addr16 or lret fnstenv loope notl jo es outsl fs jecxz dec stc mov mov enter xlat (bad) out mov adc mov mov negl xchg xchg mov adc sti mov lret jl or pushl add push sbb mov stc jne sti fcomp and jno fnstenv dec aaa fdivrs (bad) or push popa fld and mov cmc jno mov mov jo (bad) jbe jmp lock jge jnp ret mov jg and imulb inc (bad) stos (bad) push or rolb ja push mov xor fs pushf ror cmpsb scas xchg pushf mov cs inc movzbl sub sub lds ret mov out mov cmpsb or std call sub mov sub jg pop adc (bad) xor (bad) xor push xor push data16 mulb or scas enter cltd out xchg icebp sbbb (bad) lods pop mov mov pop dec pop xor jmp jno xor aas fsts pushf xchg lock or xor data16 and sub cmpb cwtl jb xor in stos in add xlat add cs dec jle imul aad loop negb sub push arpl (bad) lahf sbb jp bound sub mov call xchg (bad) cmpsb push js and sbb lahf ret mov mov push movb shrl push sahf add adc push lock aas cmp cmc (bad) sub or imulb fdivrl add (bad) mov test gs cmpsl clc mov and jl and aas mov popf (bad) jne stos out dec stos lret dec leave (bad) (bad) aas out dec ljmp (bad) mov std std and fstpl cltd (bad) jno daa mov adc mov push jne and test out mov and jne and adc stos mov dec and iret aas add mov jle fildll and stc xor jmp sti pop mov fucomi and jge or add call inc scas popf cmpsl dec inc or std fwait test inc fxch jl xchg mov test adc (bad) fs mov popa lcall push jg icebp or adc dec out loop xchg mov lret add sub cmp xorl cmpsl pop and pop je lds stc mov mov mov (bad) loopne cmp pop idiv bound pop hlt jg adc bound ror data16 add fidiv and push sub out dec mov lret idivb popa lcall pop adc imul popw add mov pop mov out fsubrs mov cltd movsl xlat inc xchg xchg xor mov push mov xchg jnp sub repnz ljmp inc repnz ret pop dec ljmp sub arpl roll mov or add out hlt (bad) xchg mov (bad) dec loopne mov rcll dec push sarl incl and mov lock je popf xor imul cwtl pop sbb mov cmpsb fimul jmp inc mov add fldenv mov mov pushf ret test mov xor mov mov fsubrs add or rcrl cmp jge insb imul sub pop inc ljmp adc xor std inc push lods push lods push cltd inc fiadd lock cmp sti add pushf mov outsb test adc and stos nop cltd xor cmp shll or call es lahf pop stos bound dec xchg or mull mov mov jno dec (bad) ss mov ret xchg inc pop mov mov arpl sbb or lea repz cmp xlat mov mov out inc lahf push ljmp fldl sub lahf insb cmp push add popf fs popf mov in mov or loop sarl dec sub pop ret lret sub lcall movsl jnp daa repz push (bad) call sub jb add (bad) mov or dec and and jmp (bad) mov jne sbb cmp cmp scas cmp xchg out mov sbb pop (bad) cmp enter dec into stos mov push adc repnz call shll (bad) lods lret fbstp push fcmovnbe pop lods lock dec shrb and popa stos ds into ds jns leave sub icebp or xchg cli jne adc (bad) lods pop imul dec lret xchg push mov pop adc dec mov pop mov clc pop mov pushl inc repz cmp popw xchg sbb fisttpll ja push xor dec scas lret es (bad) mov rorb test push out jb or and xchg push ret pop leave loopne fisubr mov sysexit and lcall jmp jno push xlat adc scas sub lcall or (bad) add xchg inc mov scas adc sub xor lods cld mulb dec lods call loope dec inc popf ds mov and arpl or mov mov out icebp cld test mov dec out in mov rcl jecxz push sbb mov addr16 jmp ret inc or pop and icebp movsb scas fimul push shrl das jmp sahf xchg xchg rorl jmp out xor mov lret (bad) mov dec stos mov add out dec lret dec sub lcall iret sub ret pushf sub xor cmp scas (bad) cmp jo jae pop negl sub mov mov xor push (bad) or dec pop out fs push les lea mov out and into mov jle leave je sub dec je imul adc into push leave jmp mov jno nop sub and mov and movsb loop mov (bad) inc aam in rcll sbb xor and sbb rorb in (bad) xchg out add xchg mov jl (bad) xchg sub mov lret iret and mov push push in pop jmp cmp mov sub and sub pop pop dec mov aad out lret enter or pop and rcr repz xchg fnstenv (bad) and scas mov sub into gs push jl and fldcw je push jne aad imul lods mov jne mov or pop flds add xchg xlat nop sub add lahf jb mov dec push jno mov sub add stos (bad) mov and je pop (bad) push and fiadd popa movzbl sub ret out jne or fdiv lret fwait movsl cmp lret lret aas repz mov ffreep pop lret ret fildll and pusha push ret rorl lahf push out jg fwait cltd pop rcll nop lahf mov sub shlb (bad) xlat or sub and jl les lret test cli popa (bad) repnz roll inc ds mov lods inc xchg fs call xor icebp jg inc adc lret cmp mov dec mov and notl and add sub cmp xchg out xor aaa outsl outsb inc sub rol sub or adc popf cltd jl sarb into std gs sub push push push pop hlt (bad) push push daa inc (bad) mov pop (bad) jbe into add xor aas sub adc mov repz push cmc mov sub pop das repz xchg cmp and mov push mov or jne arpl ljmp cmp add inc pop int3 add pop mov outsb push mov pushf sbb or mov lret repz das fdiv inc xor sub lahf push icebp dec shrl mov stc and push fs flds cmp cmp add (bad) push xchg pop xor test cli out mov sahf push sub fs pop adc pop inc cmp sub outsl mov sub mov pop and sub mov imul xor push ja mov sub stos sub (bad) loop inc xchg inc icebp rcrl dec sbb cmp mov cmc out mov push cmp mov int3 and sbb xchg loop cmp out std rcrl sbb incl cli fadd negl test fnstcw jg ljmp pop leave test jnp xchg lock fs pop out popf cwtl out or mov and mov xchg loope lret std rclb sub sbb pop mov and rcrl in sub mov lret dec cmc and jne lahf cmp ja jecxz call notb ja adc push adc lods andl inc jb inc pop loope into xchg push sbb imul insl push jl stos lea push dec cs mov aad test outsb repnz xchg mov shlb dec aas xor neg pop pop hlt adc mov mov (bad) cmpsl push and mov addr16 add lret and or sub ja mov in sub and into shl pop idivb or lds shrl test push imul mov xor sub pusha ds (bad) mov and add and not dec das xchg xchg cmc icebp rorl (bad) out out clc les cmp aaa and adc dec stos fiaddl sub mov ss ficoml push xor lea clc sahf outsb sub addr16 add sahf and shrl pop sahf or push or out fwait xchg push mov and inc movsl aam shlb (bad) test out js movsb test pop ljmp fild iret dec mov cmp shr push pop ret das mov adcl xor mov dec push in sti ds (bad) mov cmp lret fs pop inc jb adc ds lret pop pop jecxz test (bad) int sub ja mov xchg out mov push mov xchg dec mov (bad) pushf add lds repnz das lock or push and leave cmc rcll pop fidiv adc sub int mov dec out push lock xchg cltd xor lods xor push pushf cld jg xor imull mov dec out xor stos in lret xchg in cmpsl pop data16 and mov push (bad) mov push sub sub xchg sar cwtl stc mov pop ret inc jmp out pop push push jne push xlat in adc sbb fldenv jne mov adc test sub inc mov sbb cmp pop ljmp out mov dec sbb mov jae adc jecxz mov mov and mov push mov adc or xchg push sub mov mov rorl inc mov pop push push pop or incb and pop or jno mov (bad) push push das xchg push pop xor test bound or negb mov xchg lds mov push mov clc outsl mov shrb dec fucomi rcl cld sub sub scas mov sbb stos bound (bad) cmp popa add sub shl and xor mov sub xor mov rorl dec push sub jl lret sub ljmp dec add icebp xor push xor mov cmc (bad) jp nop fimull push shrl es xchg jae mov out jno imul and aas push sbb les or and stos mov int inc sub mov ja repz pop in fcmovnbe mov xchg jmp in push cmp sub idivb xchg mov pop mov hlt ljmp outsb sar mov xlat xchg test sub pop pop ss out xchg repz pop popa ljmp stos stc fwait jmp or mov push push imul mov icebp cmp xor push out aad aaa dec cmc push pop add sub cmpsb push sub sub adc sbb dec dec stos fcoms xchg dec mov sub mov ds xor mov idivb ss out imul stos dec or movsl xlat and das cltd cmp vcvtpd2dq fistpl daa dec or push in cmp aas into scas xor mov mov jne mov repz pop push scas test (bad) jl pop and in das mov pop movsl aaa imul sub xor popf cmpb mov xchg jbe stc mov inc mov mov jmp fxch dec fdivrs jle loope sub sub xor lods jbe sbb ficomp inc imul cs and lret cmp bnd sahf xor js mov pushf mov jecxz xchg fistl and push inc mov ljmp dec cmp jae adc idivb cmp xor ret mov pop shrb or repnz cmp fimul das sub mov dec mov sub pushf add outsl xor (bad) jno daa sbb mov (bad) hlt (bad) in cmpl sub das cmp fdivrl xchg pop xchg or cli xor cmp clc cmpsl xchg pop cmp sub cmp mov leave add xchg add sub jecxz add xor or mov adc or scas push jmp popf mov mov cli mov jmp outsl es out sbb xchg xchg test (bad) or repz push push or sub mov sub (bad) xor pop and jmp (bad) addr16 fsubrs arpl shr (bad) ret jg imul test clc (bad) icebp subl mov or aam std and int3 push or xor fimull mov sbb inc pushf loopne mov mov cli (bad) jne incb jns mov out pop push (bad) cld (bad) test lret and and std jnp sbb lret mov jg shl pop mov loopne idivb inc and and cmp sub mov test cmpsl mov or push sub sub adc jne xchg xchg pop lods sbb cli pushf push jmp imul pushf cltd push je das xchg out into push lret jl repz mov inc sbb xor xor or (bad) cltd mov mov ffree loopne (bad) push movzbl mov movsb cs and xchg repz fild push and (bad) insb sbb sub mov dec adc and cli call add cmpsb jle imul sub fisttpl jne testb outsl pop (bad) sub xor ljmp aaa (bad) mov and jno jg add out ja xor dec (bad) insl in into outsl std mov (bad) pop fldl2e inc inc sub movsl fldl dec rcrl imul xor xor dec sbb stos or push aas push or int cmc insb jecxz out popf pop push imul ljmp push mov add or adc add push outsl iret pop cmp jb dec (bad) cld aaa and xchg fist orb mov gs cltd dec mov ljmp sbb mov rcrb stc inc adc or and lret mov pop add out mov dec xor pop insb les lcall lods mov dec mov mov lret movb cli frndint (bad) sub mov (bad) mov (bad) xor pop pop push mov inc (bad) ljmp cld js cli xor push pushf aaa pop (bad) mov cmpsb add push shr and mov xchg or xchg pop mov mov cli jmp push jmp and mov inc or ffreep dec adc mov cmp dec jg mov roll test xlat mov data16 call inc or or lcall pop jg xchg arpl sub lret sub popa cwtl mov jp mov (bad) bound pop (bad) (bad) mov mov dec sbb push jne mov sbb leave pop stos outsb ja aam test pop lret in sub jp push pusha fs xchg jns leave mov out cmp xor stc xchg int3 mov sub mov call mov mov xor leave fisttp dec push je dec push (bad) jo sbb mov ss test sub iret cmp and sti insl cmp leave xchg daa divb pop movsl (bad) xor repz out stos sub add sub pop add repz inc dec lret sahf bound inc (bad) mov into cs aas pop mov jle pop push idivb mov sub lock cwtl fisttp mov cmpsb cli xor ja jecxz cli movswl pop stos cltd (bad) push cmpsl pop sbb sub or and lock pop and (bad) mov cld hlt xor cmpsb movsl mov popa mov push leave movsl out adc or dec nop insb jge dec adc or add test aam jne cmp fsubs cs pusha push int inc pop sub setge fdivrl mov inc or sub inc cld sbb test les jp jl inc xor movsl idivb push popf pop cmp js or leave popf gs pop or cld jno shrl dec pop popf push sbb rcl lret jnp adc stos cltd add fucom repz outsl and sti arpl pop push cmp and sbb sbb or in inc mov fnstsw push dec push sbb mov adc ljmp or shrl mov xor sti fwait pop add cmc adc cltd fimul sbb and sahf cld gs (bad) mov sub insb dec sub and and add scas (bad) fiadd pextrw xor push sbb sub fldcw dec aad dec mov jmp push dec jge dec test mov (bad) in daa mov mov adc clc cmp jl dec or cli pop push in sub hlt lret (bad) mov pop sahf lds mov sub and jmp sbb cs mov add in mov xor adc (bad) iret add or pop push std sub add sbb ret into int sub fs xor and orl dec mov in adc imul shll xchg pop pop mov out and notl mov stc adc mov lea push lods bound testb ljmp data16 adc dec mov mov sub dec clc lods jb icebp xor loop pop jecxz jns cli pusha cmp jmp out xchg iret je scas repz cmp dec mov pop (bad) enter push cs and ret scas daa sbb aad and sahf jg xchg nop imul lret add sub adc in pop cmp sbb cmpb or (bad) mov int3 test or repnz cld mov icebp and cmc fs out (bad) jo jmp jmp iret les (bad) cmc test cwtl cmpsb sahf mov or cli idivl cs jo (bad) and sub jmp xor scas gs bound fcmovbe add repnz sbb push or outsb add and cmp into lret push out bound or lds je push sub add fsubr xchg mov jne lahf hlt mov jecxz xchg ljmp sub aam jb (bad) jne mov in aas mov or rep cmpsl pop push fucomi lea popa mov sub xchg lret decl xchg mov dec imul and jmp and fdivrl dec bnd add push sub and pop movsl xor mov cmc lock scas jno add pop repnz xchg jbe bound (bad) mov sub mov add or enter sub cmp xchg in bound (bad) nop aaa sub dec or add fsubrs xchg jo mov pushf stc outsb dec sub out mov sbb sbb into scas jne mov sub xchg mov (bad) (bad) mov mov jns jge sub dec mov (bad) sub cmp xchg fldcw and jmp pop xor sub cwtl push or adc mov cmp dec jle cltd fs mov pop int3 sbb sbb jle es mov and mov mov cmp aam adc dec push pop mov insb inc inc (bad) hlt or (bad) roll and stc add fcoms and mov into dec cli sahf or test aas push (bad) mov push icebp bnd pop sbb jno lahf sub dec add push add xor std pop daa add jmp (bad) mov lods test and into jmp pop cmpsb sahf jns mov mov (bad) ja sub mov data16 xchg mov out lret pop or lahf gs dec jl push movsb or push icebp popf fdivrp lret iret out add cli data16 mov pop or and sub scas push xor sub push mov pop push mov jnp mov addl jae pop mov pop and insb (bad) cmp add pop adc ror push push data16 outsl jmp push or pop out pop inc arpl rol adc jnp or adc jg std inc js push add neg mov mov push xchg cmp xor cmc pop pop jmp adc addl mov xchg rclb out mov push (bad) fnop or add or sti inc lods pop sub or sti jg inc insb push mov pop icebp (bad) xchg and lret out leave push dec and neg les dec xor xlat sbb cmpsb addb or inc inc sbb push xchg sbb cmpl mov mov lret mov outsl psrlq and fisubrl cmp xor add sahf mov or xchg adc push adc lock xor add xchg in xor leave fisub mull mov stc fs inc fstl push xor jbe add lret sub pop pushf mov push adc push jmp in addl or sbb dec mov xor lea push jg rolb sub rcrb mov push add inc iret cld outsl inc hlt loope out jnp clc jle or push jle mov rol and loopne,pt fwait and pop xor sti lret pushf mov push push cwtl push outsl je bnd ja adc cli push push mov jle stc pop dec fs lret pop and (bad) outsl add jge int3 jecxz xchg xchg scas dec (bad) out lret mov or jl or cld mov jns imul fbld xor stc movb dec clc dec pop mov push addr16 or pop negb pop pop and xchg leave fistp xor loop in add and (bad) fs and push mov lret xchg and jl sub hlt mov aam and mov pop push push rcr outsb shlb mov out sub mov daa (bad) in popf pop mov js mov mov mov dec add dec push mull and push outsl mov pop sub clc clc pop cld mov mov pop sub (bad) mov jne imul stc shrl lock mov and scas fsts and xor js (bad) loop xor xchg sar or sub repz pop adc repz cmp (bad) fiadd (bad) adc (bad) movsb mov jnp add out sbb lret out xlat outsl xchg sub dec into cmp mov and scas sub fisttp into call xor xchg push xor pop aaa pop push imul add icebp movsl or fcomi movsb scas xchg jmp pop jmp xchg (bad) dec jae icebp sub xor adc mov ret dec xchg mov add or (bad) mov cmpsl fnstcw pop idiv dec jne loopne or adc int3 popf xor jne jno inc fcmovnb push push movsb add testl in (bad) sbb jl out sbb mov out and sub jns inc jge jbe fs nop loopne cmp sub mov inc movsb das xor sbb popa adc xor stos cltd xchg sub add push (bad) daa and adc orb sub push dec (bad) cli sub call in and xor testl jne and lcall mov scas aaa insl test sti les (bad) aam addr16 loope pop lret rclb test popf ficom push rcrl mov out jb add icebp imul push jecxz sub insb jg or daa add jbe leave or out mov push and sti jo popf xchg ljmp sbb add ret movsb stos jae idivb les orl add sub mov popf fdivrl (bad) pop rol dec pop jg cmp and add orb (bad) jb lods xchg mov xchg push fsubrs xchg lret jns adc jno add repnz leave icebp ja or ret in mov adc or js mov add xor jp push scas sub (bad) xchg push sbb pushf push negb mov shr ljmpw cltd je jle popf test (bad) lcall sub push xchg lea repz xchg xchg jg dec and cld shl add leave (bad) push xor dec xlat fadd (bad) mov fsts das mov jp add mov lret add dec frstor fsubrp out adc sbb adc sub cmp rorl pop xchg xchg mov and mov mov mov stc mov test mov and (bad) xor adc or daa jae mov mov adcl notb pop mov or jle repz pop push xchg enter jg jg push xor hlt inc push pop sbb push fimul stos sbb push mov cmpsb push push mov or pop loop push jbe nop imul icebp add mov xor or ljmp notl jno popa inc push jno cs jnp movsl std mov addr16 adc ljmp cmpsl pop adc dec iret add imulb mov lds (bad) vmovsd ljmp mov and sub cmpsl (bad) mov fild fistpll (bad) jae cmc xchg gs loop mov pop (bad) negl pop pusha add inc mov repz mov sbb push daa or mov adc ljmp (bad) jle and mov inc xor in pop lds push (bad) div dec out inc rcrl insl xor or (bad) mov xor and out mov inc daa out je pop loop stc xchg xlat (bad) stc out dec mov icebp fld push push mov pop das in cli sar push mov inc shl add adc xchg jnp or sub jae sub imulb ret (bad) repz mov mov jg shrb sub ja clc and dec es pop pop cmc dec (bad) fcompl add pop loopne shrl add jae fistp or push idivl jbe push mov dec repnz jmp cwtl pop add fistl rcll jmp dec call push pop pop xor inc je cld jp dec xchg jg sbb push or or pop push pop push (bad) ds bound jno sub and loop es aas push andl or outsb data16 sub or pop mov repz or pop pop jecxz pop xor ja shr les adc adc or (bad) in mov mov adc add in and pop and ja in mov adc and pop inc sub test xchg (bad) addr16 xchg or mov bound and (bad) icebp lret pop xchg shll adcl dec lret clc sbb scas movsl loop mov lret add stc mov cmp dec int3 dec sub leave mov lret jbe inc (bad) or jmp mov (bad) testb leave dec les jmp ficom cmpsl xchg (bad) mov jecxz sub inc jno aad nop lcall sub add fnsave cmpb imulb in push andb iret mov and cli pop jg jmp lea dec movsb adc cmp in scas (bad) (bad) repnz mov inc cmp movsl daa cli jbe ss mov outsb call in daa cltd je sub ficoml add popf insb jmp repz sbb aad and push out xor sti sub lock jo mov sbb test or pop mov push dec jmp sti cmp pop fistl xor xor jne jmp dec jmp mov lcall divl loope jmp lock iret and push jns in dec pop or ljmp (bad) pop rorl adc jbe repnz push xchg hlt mov pop mov or push leave mulb push sbb icebp cmp out cmpsl xlat out sub add cmpsb std and mov adc mov imul jmp frstor jae fdiv aas cli or pop inc push std dec mov rclb dec mov sub xor ret pop mov xchg mov jg pop and or (bad) mov call scas adc icebp pop or adc dec lds ret add into in negl mov add popf dec das jmp cld sarl sbb das out adcb dec ret rol bswap aas imul mov imulb dec cli mov or mov sbb and lret lret pop dec pop out xor pop mov adc sar (bad) mov cmpsb ljmp jns and mov mov clc divl push stc mov leave push sub daa pop sahf inc (bad) add mov fucomp dec (bad) dec push and and stos xor add mov xchg cli pop mov adc mov dec bound cli test adc arpl mov std jmp les test jle push aad sbb sub mov out repz (bad) out lahf lahf xchg (bad) add xor mov or mov cmpsl mov imulb iret jl mov leave imul jp jmp roll push loope fnsave jnp inc cmp out repz jecxz cwtl and repz add popa and das lods cmpsl mov testl loop pop push ret test add xor stos mov xchg xchg pusha repnz imul dec test mov ret nop jle pop jb mov mov sub push jno push stos fxch adc cli test call pop adc dec mov jl mov sub xor out sub push sub stc lret push sub mov pop je stos adc rcrl cmp sub testl out dec add mov sub out lock xor add or (bad) sub mov stc icebp js (bad) scas cltd xchg cs fistpll jecxz mov and inc loopne xchg hlt movsb pop adc call or jbe push push cmp out outsl addl jnp mov repz jle ret xor repz push pop (bad) sub std jae mov dec sti pop jge mov mov pop mov jmp push pushf xchg push inc add frstor divb repnz aad xor (bad) jnp aam adc push dec xor repnz pop xor add popf les daa add mov jg (bad) sub popf mov jp mov xchg dec sbb bound mov jl lahf jno outsl jbe mov mov mov mov xlat mov gs and test imul mulb sub bound adc xor sub mov in lahf aam push xor das xor (bad) loop and sub js jbe jb fs inc test in cmp sub nop cwtl dec mov add or (bad) pop scas jne clc inc (bad) mov outsb lea pop jmp push call or xor dec mov cvtps2pi js cli sub add xchg push lret jne arpl pop adc lods xchg mov adc fiadd xor jmp (bad) pop je stos lds mov loope popa inc jb xorl mov imull xchg repz sbb mov xlat jmp cld cmp hlt dec stos xor mov dec rorb loope lahf mov xchg mov xor into jne jecxz lret and imul xor push popa pop xlat cs inc aas mov xlat out push push sub pop xor push add je in add mov andb push ljmp or mov pop xor mov cmc addr16 daa jae and mov (bad) scas jge insl and xor ja movsl push sti sub sub add aad and mov lcall sub (bad) fstpl add inc mov (bad) push fs xor jle inc and pop and lods cs add cmpsb push call test lods mov sub jg data16 ljmp orb xchg add push (bad) ret (bad) je add xchg shr dec lods lret mov leave jmp jmp sarl test and sti pop mov pop dec ror hlt js bound mov add sbb or add push inc rcrl xchg mov int3 lds cs sub mov pop adc mov jns jle leave push insb ljmp ret imul xor out dec fdecstp adc xor push stos cltd sub pushf xchg stos adc scas mov aam jns xchg push inc test xchg push or pushf and andb push add popf push and jo xor shrb loope adc (bad) loope xchg enter scas ss xchg jecxz je dec xor add push cwtl xchg out and cld and stos xor (bad) adc mov push mov adc out pop mov adc clc jmp xlat adc popf fldenv scas fs lea xor mov (bad) sti xchg push cltd dec ficomp add inc mov scas sub bnd fstl ret shlb icebp xor imul pop and mov jle out in xchg ja sbb mov enter test insl nop adc lahf (bad) jecxz (bad) test mov adc sarl aad ja (bad) scas mov into ror scas mov cltd pusha shrb lea xor xor in imul pop rcll sub loop jp mov mov in or fldl lods jae lods cltd mov sub popf jno mov js sub jnp jmp or adc scas sub test cwtl sahf and sarb jg and mov in sub jge mov jns bound (bad) cmc (bad) xlat sub jge sbb jb out repnz mov mov imul xchg push inc loop lret mov cmpsb lret xchg movl inc std inc xchg sti pop jbe cwtl lods xlat mov ljmp jb push gs (bad) mov es lds pusha aam lret cwtl xchg push mov and cli pop and sarb sbb xchg repnz fsubrs sub int scas out je in scas stc test out mov negl and (bad) xor leave or or mov push dec mov xchg nop repz jmp push out popf pushf out (bad) lcall stos movsb mov outsl and sub bound stc movsb pop aas adc xchg mov mov out cltd ja mov mov xor stos pushf pop out jg sub fdivrl cmp imul xor jge push fild sub pop enter pop imull mov in add push push adc call pop sub mov loope leave (bad) in rol aas lcall push addr16 lret cli cmp push pop mov mov repnz aaa jae divb addr16 add jg jb or data16 popf inc fwait or pop push rcrl iret add xchg pushf dec bound mov ret ret insb mov repnz scas xchg mov in das mov mov imul xchg sbb sbbl and pop mov imul (bad) test dec mov pop (bad) jb movsl movsl incl sbb shlb xor sti sub das and mov (bad) or rolb inc out movsb nop or jg inc mov out or mov and mov in pushf mov or mov aas shr stc mov xchg xlat inc sub aam popf xchg sti cwtl dec cmp leave fucomp dec (bad) mov (bad) xor cmp ret aas add xor test test sti mov sub or add fistl out fnsave cmp lret data16 push nop out add push int sarl sarl inc popf jle scas xchg bound xchg das pop out sub stos mov test out xor je pop push test sbb lcall push dec jno xor sub mov xchg shr pop mov sub push shll scas dec sub das mov dec or xchg in int mov add ds mov adc lret scas mov (bad) pushf lgdtl jmp clc and mov and lods ljmp decl and xchg rclb xor xor stc sbb dec stos (bad) or sub xchg sub push repnz xchg repnz lret enter sarb mov cmp in stos sub das mov das call xor mov dec out xor add xchg loop sbb and adc shl outsl out sbb icebp sbb xchg out aad cmp and (bad) push dec icebp jge adc loope mov jno outsl xor xor insl cmpsl stc gs adc cld sub jmp cltd sub pop mov sbb add jmp jg ds push cmp cmpsl mov inc mov jne add cld mov call ret pop jle roll movsl pop (bad) fistpl jp mov mov add mov je push fdivp and or stc cmovs or sbb cmp js sub imull pop mov push loop idiv cwtl nop iret popf jno enter inc add jnp or sbb sbb add mov or ficom mov jle imul in lock ds mov cmp xor testb pop jae repnz push adc inc pop lock xchg std adc push mov pop push mov xchg cs mov xchg mov lret sar push xor in or inc and mov pmuludq pop popf call jae pop adc not rolb jg lds sti ds jg fstl in fstpt push pop jge mov sbb fsubs lds dec jne pop ja cld mov jo clc sbb sub fs repnz aaa rorl popa mov inc add imul rcrb lock pop sarl stos jle pop cli add jge ja jae loopne mov (bad) jnp xor ja test push jge sub pop inc push int push das lods push call or xor mov mov inc (bad) adc repz insl jge test and arpl outsl dec nop add pushf mov hlt mov (bad) mov rcrl inc and pop mov mov xor or sub scas xor stos inc cmp push popf cmc xor ja subl inc lods jne dec (bad) scas or jmp aas iret mov xchg icebp mov lret das xor enter outsl rcll push lods ss mov and jb jns add add mov testb int fistpll div test adc (bad) pop mov clc pop in (bad) xor add inc add pop sub jns movsb vaddps mov pop nop push mov icebp leave fstpl sub mov stos mov lret sub jle xchg dec stos int addr16 xor or sub fisub (bad) in or jp sub mov imul lret movsb daa xor scas daa push dec stos dec cmp pop xlat mov loopne orb sub sbbl mov inc fnstcw sub out add das mov mov and (bad) cmp stc gs aad lahf jle daa imul dec jo xor mov jg repnz dec cli mov pushf inc push hlt lds xchg add scas gs test repnz add insb pop xchg fistl add xor aam push js xchg fnstcw leave (bad) push adc or sub adc xchg lahf fucomi lea add dec cmp mov (bad) ljmp test adc add mov xor fsubrs xor add dec ljmp jg cwtl mov inc jne sbb sub aas mov into pop ffreep (bad) ljmp and lret cmp jmp push repz dec adc (bad) lods sub lock pushf dec mov cmp (bad) or xor cmp ss or mov ljmp das mov xchg (bad) cmp lret jmp inc mov scas xor scas call xchg mov mov inc or sbb jmp divl sub js xchg ret sbb pop jl pop inc data16 mov add or or testl add fwait cmp pop or pop pop fwait lods shll jmp add add xchg jns dec div adc decl dec ret xor xor jle xchg mov iret mov ljmp and xor pop sahf scas dec loop jb aaa jg jg testl cmp mov mov xor repnz push jge test pop mov add sbb and popl leave push imul movsb aad stos popa xor pop push or clc jbe imul xchg aad add xor cmp out pop subb or leave add jg pop dec mov movsb mov bnd xchg in test mov cmpsb mov jne sub pop (bad) xchg lahf and push fldt addl int3 icebp pop pop pushf cltd pop xor test test ret mov pop jnp push push dec mov sti mov daa and pop pop jl push push xor nop divl jecxz jne aam fnstenv andb mov ficom leave decb or cli mov xchg and mov jg xor add dec sub loopne out pop ret mov test inc sti xor into mov push cwtl iret sub mov pusha xor xor mov xor and stc stc daa shll out out dec mov lcall sti xor enter push dec sub dec enter or push ret popf xchg loopne or mov sub aad adc sub loopne push repz xor out clc sbb adc add stos mov pop hlt adc in ret mov data16 or icebp sbb loop xchg scas push nop rcll (bad) cmc dec dec data16 push pushf mov adc lret (bad) sarb dec or aam (bad) sub popf mov sahf xchg out jno mov cmp jne mov out inc push test stos mov into xor xchg ja push out adc ds es fisubr mov jne div (bad) cmpsb sarl and (bad) mov mov aas xor sbb lds mov scas cmp pop (bad) shrb mov dec insl sub (bad) lock mov push mov jmp pop sahf cli inc fild (bad) sti or stos into xchg fidivr iret addb (bad) fisubrl in sub cmp outsl repnz or (bad) dec out out and mov sbb xor jle push dec mov sub pop or out or call jcxz xchg incb cwtl xor or out xor fcomps daa fsts lahf flds mov fnstcw cld ret in sbb outsb xor sbb (bad) or loope jecxz push adc cmp mov sarl inc in cmpsl shrb cmc mov inc rclb aas imul lret fdivrl pop movsb inc gs fmul repz popf jge ds stos pop imull add fisub (bad) dec repnz adc push jne addr16 rcrl shll or lock dec xor ja jecxz xchg xchg mov cmpsl sub aam push int3 xor mov test jbe mov ret pop mov xchg (bad) and iret daa or mov xor ret sub mov inc out sub mov lds mov or insb inc pop xor mov and lahf mov idivl push lcall xchg mov stc insb call and jle jmp mov or jbe pop or jno mov clc icebp fs jbe adc test mov imul rorb int3 sub mov mov push stos fwait std in mov data16 imul mov inc jmp push sbb add mov push in xchg (bad) pop pop out insb mov jg daa test in jbe sub xor outsb popa hlt repz or (bad) repz pusha xor sub xchg cld sahf gs test fildll (bad) (bad) mov imul repz add and (bad) and adc pop xor mov mov sbb popa xor loop mov inc fwait inc popf shll shr cmp push xchg jno gs push xor in test mov test adc stos cmpsb dec xlat mov rolb pushf and in mov xchg int jno dec jle (bad) sub pop dec xlat jmp mov inc xor out and stos mov dec jmp xor test mov inc mov jmp mov inc dec xchg lahf add loopne pop imul mov gs stos enter jns subl sub dec sub mov (bad) adc adc mov and lret dec push cwtl mov and push or repz inc jae pop ljmp cmp ds jecxz pop jp mov push loop sbb outsl test inc loop and xor stc fs clc (bad) jno shrl ss lret mov cmp inc xor repnz in xor imul arpl xchg push sarb add xchg mov daa daa jne xchg fcoms and push cltd ret jo loop dec and sarb inc scas lret fwait xchg cmp es xchg push add sub sub ja and or aaa in cs leave push int3 stos mov les (bad) popf cmp lcall cwtl daa push adc mov inc xor (bad) lahf gs gs icebp or (bad) insl mov push das out dec gs sub (bad) adc push out gs into inc pop scas leave push mov dec sub add (bad) mov or push cmp ret add pop mulb (bad) testb fistp mov loope sub inc or mov clc push faddl lret mov adc adc dec montmul cmpsb inc adc sub jb jecxz mov or pop addr16 sub daa xor pop ds pop iret xchg out (bad) repnz cmpsl fsubp xchg insb mov add xor xor jmp addr16 jmp adc and xor mov push add jmp push add addl sbb jbe ljmp mov out (bad) xchg std addr16 std insb adc inc push inc repnz xor into jle push dec jae loope mov push stos je lea int3 sub xchg xchg je sub mov sbb add lods out or xchg cmp jge movsb cld adc dec bound cld icebp push sub cmpsb sbb jae in fs cmp mov repnz enter mov in (bad) ljmp scas jp xchg jl jb movq mov (bad) dec pop add push je sahf or sub pop xor rcl clc xor sub or aaa mov inc and fmuls push fldcw aaa sbb and xor add (bad) arpl fld das inc int3 or xor xor xchg jne scas and or idiv test jp push addb fistpll jne or and xchg and shr aas adc lock ljmp mov inc jno fs and xchg xor pop daa insb sub cmp inc and popa add lods pop iret int insb negl pushf loop ja loope lret bound notl mov scas xor ret std pop pop dec jg sbb xchg repz fs sub dec (bad) js mov out and je dec jne imul repz xchg cmpsl test or mov into das mov fisubrl push lds fidiv fsubrl xlat xor lods leave sarb bound mov mov jmp jecxz data16 pusha pop pop ret in mov loop jge adc mov xchg loop pop xor icebp dec sbb push insb lods lahf js pop lret stos cmp xor jg insl cli popf cmp in mov out sub call cmp add adc sahf insb inc xor mov or (bad) scas mov mov xor repz pop shlb pop cmp jecxz dec scas fcmovnu dec int3 and das mov cld stc jecxz ret mov pop mov pop (bad) imul and pop push lds xor (bad) (bad) xor jne jp sub ja popa movsl (bad) ljmp les xlat add add fcompl jmp repnz sub sti mov fisubr pop ljmp fsubp imul std rcll inc daa adc and flds jecxz add gs out or mov sub mov lds add test mov test dec and jg sub andb sub das mov push outsl cmpsl mov jns push dec xor dec and and push xchg inc cltd sbb shl mov aam imul (bad) dec mov pop lock test mov jo ds lahf pop cmp fs out mov mov les sub mov xor outsl cmpsb jge (bad) (bad) and sub (bad) add xor mov and push hlt lock call notb jecxz push xchg jmp ret lods arpl loop into mov or and lahf shll xchg adc xchg sub xchg imul sahf and pop outsb mov jmp jns loopne clc add sbb aas sub mov (bad) sub mov jne mov sbb scas adc jecxz inc les jl sti xor xchg inc mov mov stc gs sbb test jne mov sub sub jmp mov adc (bad) adc sub test mov lret dec cld jb (bad) or dec sub mov shrb sbb loope sarl mov or adc xor out xchg (bad) loop fcoms daa nop icebp xor dec and xchg leave repz xchg cltd mov nop or call cmpsl add pusha cmpsb or adc sub or shrl push mov insb dec movsb test pop adc fucomi mov mov (bad) mov mov pop enter enter sbb sub aam icebp insl daa jns jmp std xchg push scas andl fs repz push mov inc pop push jbe jmp pop push inc out sbb inc lock test bswap mov mov pop adc jle test or sti out daa push ja and shrb push jge dec out mov insb pop mov pop push dec jmp movsb or stos cli mov dec fxch lods jno (bad) lods push jge (bad) pop mov jnp movsb out clc cld dec xlat mov stos sub dec jmp ljmp dec ficomp xchg popf push aad mov mov push add aaa jne pop xchg adc jmp pop and imul movsl or (bad) out imul scas mov pop int mov push mov adc jno cmpsl xchg mov test fldcw mov iret scas test movsl push and sbb (bad) (bad) aam sub pop and push cmpsb adc (bad) lea adc repnz dec daa rorl cmc sbb xchg dec push push xchg outsl (bad) and sbb and push (bad) and xchg fnstcw mov lahf jl loop sar out and cmpsl push scas addr16 fdivr pop xor lahf fldt adc jecxz push add cwtl stos push loope xlat aam int3 inc fnstcw inc shrl ret sub add pop mov (bad) adc (bad) popf sub rorb aaa mov mov pusha ret ucomiss add or xchg inc and rorb out addr16 popf pop gs or push mov mov pop pop dec fmull shrb dec out lret dec mov mov das imul out xor xor and or xor popf icebp subl pop lods cltd fcoml dec push add inc pushf sti dec jbe shr (bad) outsl cld push std loope call pop bound add jno mov push sub lret lock fs xlat mov ja gs and std pop pop (bad) lock (bad) adc (bad) jmp dec scas sti (bad) pop test das push jmp enter cli dec lcall notb mov or ret cmc xor in mov push (bad) sub push ret leave pop and mov test mov dec into cwtl jp xchg jecxz dec insb sub pop sub and mov mov xchg sub lea sahf pop ss cmp clc xchg jl sarb lret fldt call dec loop sbb ljmp xor push hlt lds push ret dec sbb loop stos sbb cmp sub mov out iret mov or dec dec xor sahf dec and inc fdivl outsl adc ds (bad) sbb dec out iret fild mov sub lret (bad) lret fisttpll mov dec lret push push add sub pop test push aam (bad) sbb xchg or push pop mov jns mov cmpb and xchg pop jmp insl add js sub xchg icebp jg loope ret cmc gs xor add nop mov jmp push mov dec sub int3 sub cmovs shr mov and adc dec loop xchg ret sub shr neg roll iret add mov jnp in iret add fldl outsb rorl jg lock add pop push mov bound rcrl call in cwtl or shrl cmpsl add cmpsl push cld addr16 lret inc sbb mov mov sti pusha or outsl ljmp xor cmp pop sub push cmpsl push clc orl ss lcall jmp mov ss inc and rcrb jmp lock push add sub aad push pop add push inc mov mov jo or gs pop test or nop fnstsw loopne decb shlb fiaddl dec mov sbb add sbb jnp sub je pop frstor adc pusha pop mov popf (bad) lret sahf dec dec xchg and scas lret sub or push adc inc add loopne (bad) out sub push mov inc cmp lret mov cmc rcrb jecxz xor mov lock out test std imul mov repnz movsb std push jae clc out pop cld pop xor mov cmp xchg mov out out pop mov sub repz pop add fisttp div int3 mov arpl scas mov pop test sbb clc pop xor loop pop mov ds and dec or dec push sub cmp and (bad) cmp xchg push and stc je mov call ret add xor jne test pop sarb or loopne jle popa mov pop imul sahf and mov pop stc and jmp jno sub push push lock pop rcrl xchg out cli loop mov fsubrs mov jno rorl incw jbe jns pop test in push leave cmp pop lods daa cmp add pop and (bad) adc push pop or xor push iret cmp in mov push sarl add scas xor adc adc mov xchg out bound (bad) sbb mov repnz (bad) cmp je push daa cmp pop sti dec (bad) mov or cmp sub ret jne or int push sub adc loope sub stos push adc xchg loop adc mov popf mov repnz and movl js mov jnp rcrb out pushf push negb repz iret add cwtl adc adc cwtl (bad) xchg xlat push mov mov mov mov sub push mov dec les es sbb and neg inc dec push jns cli mov mov (bad) mov xor xlat leave cwtl or push rcr push sub mov shll out clc adc sbb sub dec fildll mov lods shlb pop insb cltd and inc push repz mov inc and in mov out ret xchg repz das dec and (bad) cltd cltd mov lret adc xchg ljmp fcoms nop jmp (bad) lock dec or push jns std outsb les xor sbb add mov push pop xor adc cmp daa repnz sbbl pushf push jae int3 lret or push push mulb pop dec aas popf adc sbb push lods pop mov inc ss and movsl sti adc sahf add (bad) mov mov mov lods mov fist sbb mov or inc jl dec and rorl leave pushf (bad) pusha imul jmp xchg jl xchg cs mov push push and push adc (bad) aam jmp lret mov clc pop leave (bad) xor xchg fucom jnp bound (bad) mov dec cli cwtl sbb mov push (bad) and sub ljmp dec stc sub (bad) dec out jno dec push rcll dec mov fstl inc mov mov lock (bad) loope (bad) mov sti mov inc dec outsb push pop lret les push (bad) icebp or sub iret jge dec inc xor bound pop repz jb fdivs or fistpl (bad) ror (bad) in xchg xchg aad repnz inc adc mov in or push jge test lock dec sarb push add mov push adc lret cmp (bad) adc lods pop movsb scas mov ret stos lods sti daa mov sub cmp pushf les and mov inc js movsl push cmpsb repz mov sub fdivrl add mov lret cmp ja js mov in out jecxz adc inc jecxz and and imul (bad) shr dec push iret push cmpsl jne sbb add xor mov in ljmp inc leave or mov stc leave (bad) je ret jg popf pop add mov cmp mov adc pop dec test or inc cli gs (bad) mov aad repnz mov xchg push pop pop loop in enter idivl test movsl inc pop sub fwait push sub jp xor pop cld mov dec xor ret idiv (bad) (bad) and adc push in fld ficoml movsb mov add push sub sub ret cld mov inc fwait hlt stos stc sub mov add or mov or mov sub das xor into mov or decb inc inc test gs ret xor (bad) fnsave push fdivp ret inc adc mov push cltd dec aas jle mov dec mov or cmp push mov mul sbb sub fidivr fnstenv int jns pop scas sub xlat mov sub loop rol jp mov mov dec loope outsl fstps jmp cs data16 mov mov mov mov arpl ss fwait xchg add imull leave xchg or out repnz (bad) xor mov mov cld xchg xchg jbe push push pop pop xor loope sub ret (bad) or xor bound xchg out xchg xchg out or hlt int xor pushf nop jp cmpsb lock adc xchg dec and decl fidivrl and inc mov mov mov stos jbe arpl add cmp mov or popl cmc pop mov and stos (bad) jno ret pop (bad) or push inc or (bad) mov mov inc or adc dec adc mov mov xor mov pop in mov inc imul cmp push pop mov sbb mov adc (bad) sbb in push daa notb and pop lcall jmp or orb xor les sub mov fnstcw jne les and xchg clc cltd into sub pop jge pop (bad) loope jp fnsave sbb lahf or mov pop inc xchg repz cmp fs add fldcw (bad) stc fcom xlat sub and std cmc ret scas rdtsc shr iret std xor loop dec sbb out fwait jne in stos push stc data16 mov sti ss call push or lret jg inc pop (bad) or notb fnsave add (bad) mov pop pop insb rorl in leave mov sahf loopne sub and scas sub sar loop cld rcrb lods dec pop cmpsl adc push dec (bad) repz cmp xor inc jno imul in sub sbb jmp jmp sti xchg loope aaa (bad) jns (bad) or xor mov into imul mov jmp xor mulb pushf pop xor stos mov xchg mov fistpll in mov pushf lcall mov fwait mov jp sbb arpl aas hlt mov sbb xchg adc jge dec repnz sub fist adc int3 mov add pop (bad) dec mov movsl or or sbb out imul dec ret pop test pop inc sub cltd nop outsb (bad) fmuls sub jbe mov jmp fs adc cli pop sti int3 jno xchg jg sub and xor mov fbstp sub xor and in or mov into and mov mov ret (bad) loop jg dec and rcll daa xor push insb fcomps or and pushf pop ret mov mov pop cmc fcoms movl movsl adc aas dec pushf cmp pop (bad) pop ror add or add stc int push outsl lret into cmp aas cmp jb inc fsub cmp and pop add sub add mov mov xor (bad) int idiv cmpsb adc prefetch or (bad) cwtl jno mov lret adc sarb std xchg ret repz daa fcmovbe insb sub mov into cmp call mov lock aaa push sub pop cld sti fistpl mov adc sub loop push add and dec cwtl fimul inc je sti ret imul movsl out repz or popa inc and cmp leave add repnz lds push int3 pop add cmp lea mov jl out pop mov mov mov mov rclb leave add dec mov out sahf push mov scas ret push pop fmul rcrb mov mov add adc adc xor push dec dec out nop dec adc fstpt or ret frstor daa fbstp fildll js sahf fmul es movsb imul xlat inc and ljmp xor jns fsubl mov sub push stos iret and mov repz adc pop xchg mov pop dec sub sub fs les cwtl mov (bad) aad outsb pop push jg xlat imul popa roll xor sub cmp data16 xchg das xor mov popl popa sub movzwl sbb push out outsb xchg adc outsb gs imul outsl andl int mov fild rcll mov int3 mov sub cwtl and sub sbb and ret je adc or jp out and ja fmul add mov jle insl or repnz xor and mov icebp dec fs xchg sbb adc jns mov fstpt aas cli (bad) ret in ljmp push inc pushf push push push clc popf shll cmp orb popa inc shlb mov sub xlat or jmp fldl2e dec dec jmp and sub (bad) out call mov add pop cmpsl xlat xor fidivrl pop fsubrp push mov and ret jnp adc mov (bad) mov cmp cmp sarl adc pop pop push ficom push push mov or ds insl (bad) xchg mov cmp mov inc xchg bound add aaa xchg loope push stc and and adc jmp out lods push fs cmp fisttpll and xor scas lret lea movsl xchg daa fcompl leave icebp aas adc sbb fnsave dec and and test aas xchg call and sti movsb in jno sbb popf inc xor add jno es into mov adc shrl ret (bad) mov imull lods xchg nop mov push je lcall (bad) dec ja dec pop (bad) push sbb xchg stos pop jge jecxz add inc dec mov mov xor fistpll rcll xchg lret leave inc nop and xor (bad) and and test ljmp cli cmp shr xlat lahf gs stc mov icebp push xor mov pop gs dec push test mov push stc adc adc lcall mov mov pop mov out push dec lret stc enter and or inc shr repz pop cld sahf in xchg scas xchg int3 hlt push sub add enter or sbb or das xchg sub pushw cwtl push mov pxor aaa pushf sub mov xor inc std inc mov mov repz clc lret dec mov mov dec sub fsts (bad) sub jp add out pop jg cmp nop mov and fiaddl stc xchg in pop or lret jno push or psllw stc hlt (bad) popf in cld test xchg sbb (bad) mov popa mov stc pushaw imul pop cltd fidivl outsb mov mov dec or dec into sub mov pusha outsb xchg popf arpl pop sbb inc mov xor (bad) mov pop icebp mov out sahf or negb leave ds cltd mov les mov stc imul std sbb add sub enter push add cmc popf inc xor xchg idivb andl add lock xor cmp inc js ror loope pop cmp add repz push iret mov mov push inc and jecxz hlt xlat sub push and add pushf lar popf (bad) icebp pop (bad) or or xlat xchg in out testb ret sub pop imul (bad) stos add fwait jl cwtl or lret mov divl stc ret jno xorl imul or and push das test mov cmpsb xchg and ret fnop mov dec ljmp xor mov pop out insb aaa xchg test mov out std mov clc mov pop sub xor dec mov inc jmp nop jns add shll cmpsl push pushf and push in les lret imul dec std mov xor shll sub and outsw push mov daa pop outsl movsl jg adc sub aas in lahf push xchg pop mov mov inc sbb xchg (bad) mov inc push dec iret cmpsb mov cmp je mov (bad) frstor mov mov shr push in lods xor pushf mov push pop mov mov cli and movsl sub pop xchg dec enter add mov push inc out pop in sbb rcrb xchg bound xor scas xchg faddl clc sub pop jbe leave fldl es out loop repz pop lahf cmp dec out divl add push gs and fisttpl movsl jae dec sub lds jbe out sbbl loop (bad) mov pop sti xor push std idivb bound fisub xor out fsts test stos sub dec and sti repz sbb push mulb and icebp lret inc arpl jg aad fcmovne lea pop shl adc repz jp push sub sbb push stos xchg dec push xlat sub xor jg jb aaa push ja or in xchg cs lock mov mov sbb fisubrl xor gs mov cmpsl push ljmp xchg fisubl mov xlat inc and inc xchg loop bound or xlat outsb sub jg dec test pop out pop add push jmp or inc movsb cmp mov xor std inc sub jns cmp mov sar enter jne push or xchg push xchg les mov adc (bad) lods jae bound dec xchg test ljmp or decb shrl mov xchg sbb outsb fsubrs test mov mov dec mov jp add daa jle pop neg lods icebp repz sub jge add xchg adc inc (bad) jno dec xlat mov fnstenv imul je push aam mov mov jmp roll rol add loopne fisubl xchg (bad) sub add xlat lcall divl ret (bad) add pop push and mov sbb mov daa sarl stos (bad) inc out ja mov out stos pop fidivr push jne mov xor clc in sub mov cld ret inc jmp movsl popf mov push xchg int3 scas cs or mov sub cmp fnstenv cmp (bad) lods jmp jmp insb aad xorb mov and loop adc push pop xchg xor test test mov sbb xor inc xchg sub pop lods sbb and xchg mov insb out movsl mov cld sub icebp cmp cmpsb cmp fnop push add or and or cmp dec dec out mov mov in push test xchg ljmp xchg jg ds and fist (bad) out cmp repnz (bad) jns je cli and ffreep sbb dec add int3 scas xchg shll jns mov xlat jne add and add out mov sub pop cwtl leave or fsub xor sub push jmp lods pop xlat mov sbb pop pop hlt pusha loope (bad) push adcl cmpsl mov outsb push adc movsl mul mov jnp cmpsl push out cltd push in and mulb cmp dec push push sti (bad) out push enter mov (bad) or mov pop (bad) sub hlt push call jp dec icebp jmp dec (bad) jmp dec sub push cmp pop stos and xor adcl pop in (bad) ja test scas mov add or movzwl mov sub in add xor mov inc pop mov mov mov sbb xor repnz leave aam inc lcall mov sti stos gs pop pop xor mov xchg repnz pop fimul shrb clc outsb mov ja subl pop scas arpl xchg scas lret sub test fcoms scas mov sbb jns jge sbb mov rorb iret test jecxz dec mov adc and loope and lods cld mov es push out or push movzbl mov rcrl jge aad add sub add adc xor sub (bad) adc out or leave (bad) dec iret adc pop or dec andb data16 and fstl sbb in das pusha sub or push hlt add mov push outsb les push mov pop xor xor (bad) bound into and pop jbe jo icebp sub jmp mov mov mov push int3 outsb mov jno or dec pop std pop mov jns mov movsb mov dec call shlb jo dec repz dec movsl pop cli jb ss xor dec pop adc sub in in lods pop in inc sub out fdiv pop jp xor push (bad) inc out mov cmp mov les lods xchg and into ret jle bound push sti mov cli push xchg (bad) sbbl lret je loop into xchg and add test pop pushf rcr mov mov pop imulb stos jl add fsts pop cmpsl inc jl div test (bad) ljmp add inc shlb andb sbb xchg rorl ds data16 enterw mov clc adc cmp sbb pop and outsl jo (bad) lcall aam and mov fnop cld enter pop jns dec cltd pop mov pop cmpsl or push icebp pop add lds dec das mov (bad) fcmovnbe xor test inc inc sub test les aam ret mov and cmpsb shll leave sub mov nop popf adc into test push out ds lahf ret mov mov jle gs jmp xor xor ret rclb out out out push clc ficomp imul mov lret xor cwtl pushf pop icebp mov xchg scas fldl int3 cmp dec shr js (bad) imulb test ds int mov rcrl or pop addr16 rcrb mov dec sahf out int cmpsl popf pop dec sahf loop mov push xchg mov xlat scas jnp or and fimull cmpsb test push pop mov sahf pop ss add mov pop daa and push into out push (bad) xor push fcmovnb adc leave sete les sahf scas dec sub mov jg lret mov xor mov ret xor ret xchg sub sahf mov push xlat or shrb movsb add and xor sub enter mov or or ss test roll pop push and jmp jle clc cmp sub loope dec aam xor imulb (bad) push jle (bad) mov rcr out add ljmp lcall cmc jp leave xor xor lret cmpsl in cwtl mov ss mov adc push icebp popf push sbb mov pop lods inc dec mov (bad) loopne popf xchg or sub mov mov add mov or lret dec push inc mov and les mov ret push mov sahf (bad) xchg jno jmp movsb xor adc cwtl dec loopne rcl cltd rolb dec mov adc and sub pop mov mov test sub ljmp jno mov and dec push and das push xchg adc pop dec and ret add dec dec inc inc mov lods lods pop shrl inc jg orl or jmp pop inc mov mov add push leave mov and ja scas (bad) sub decl sub out dec int3 and incb std sti lea cltd sbb imul mov daa clc cmpsl pop loop add dec mov inc scas jns dec mov inc add ret jns leave pop push lods stc repnz fucomip cmpl dec inc incb mov mov jg dec inc lret lret sbb ds fs mov test add mov (bad) loop xlat adc xchg adc xor xacquire in movsl pop aas fadds clc cmpsb out mov movsb and sub mov loopne inc adc xchg mov out sbb push dec add shr repz xchg out fucomp or xlat test mov ds dec mov dec insl iret sub ud2 out mov in mov mov sub jb sub and std xchg test and mov xlat in sub xchg add mov fldl mov loopne push cmp mov fst shlb jp sub daa dec add dec popf into xchg xlat push stos popf add xor out xchg fistl lret fidivrl and jmp and fcoms icebp int das pop mov mov iret jle jmp sbb dec je ljmp and (bad) int3 jne iret adc jae stos mov in mov sbbb dec call inc fsubrs lock sbb or das divb mov das (bad) xor jmp repnz mov cli xor xchg ret sbb sub jg dec xchg xor data16 (bad) jmp popf fnstcw mov xchg jge sub and and fcompl gs stc xchg dec pop cmp mov jno inc cmp dec loop push jp out std in pop and int cld lret or ja pushf fs loop jbe (bad) idivl pop add and mov push mov mov and and add sbb xor adc sub push push arpl xchg out bound pop test or pop insb and dec pop das mov and rcrb cs push les add adc call cli rclb ljmp out pop and mov cmp cwtl fisttpll push inc or pop stos dec ja jl push mov add cmc pop popf imul xor movsl lea (bad) hlt sbb ds pop int into sbb test (bad) sub stos popf fistpll je test add inc mov into add aas xor xor jae (bad) xor cld adc adc movb inc repnz int jl pop scas cmp std sti jnp arpl push inc jp stos cmp mov adc (bad) gs push pop and mov pop in out xchg les out lret sub loopne push xor xor shr jl mov jl push ffree ds loopne sbb pop enter lock test scas or repnz frstor imul daa sub cwtl lcall sub and aam mov xor lahf (bad) ds mov and and repz insb mov out pop icebp out mov sub ret pop jb pushl inc daa mov lahf pop mov push pop sub out xor inc mov lcall lcall cmp ljmp ficompl aad in fisubl test pop scas sub ds xchg pop aad jp xor lcall adc loop lds xchg iret stos popa loope ret add fld xor mov aas inc or int sub mov mov stc sub mov mov mov jecxz,pt xor cld decb xor loope push push icebp pop loope mov jb ret sub (bad) mov lea pop iret pusha pop in adc cmp (bad) cwtl dec dec mov mov into cli jmp sub fs ret dec sub leave cmp pop fistp pop and into jne jmp sub add xor shr into pop das into pop push imul cwtl roll and add stc mov leave xor sub sub push sbb or mov lret (bad) out (bad) popa sub mov popf imul lahf fsubp shl adc sub je mov in and xor pop cmpsl jbe bound or gs pushf mov negl out inc pop (bad) mov mov xor inc leave cmp jne xchg and dec icebp adc add ja fstpl iret jge pop int3 pop insl mov xor mov mov xor stos or inc jnp mov or outsb and and sub adc or mov push (bad) out pop mov imul movl mov xchg cld adc call das ljmp pop inc sarl sub xlat lret push aaa cmp or mov lods fist dec add cmpsl mov add sbb lods icebp sub arpl mov cmp bound adcb xor pop or mov mov cmp jmp xchg lods fcoml push xchg dec div and ja push xlat inc int3 or sub push mov loop push jne ds ret pop pop push pop lret jns pusha leave (bad) int3 push daa out mov and divl lods dec or jge cmp scas mov cltd insl stc push insl mov repnz mov push fs jl imul adc stos repnz fdivl and daa cld ss and jmp lcall jo loope out (bad) adc push fisubrl mov pop lret sbb jg mov mov push push aad mov femms adc sbb sbb mov movsb lret push hlt xchg rcrl divb mov push mov jo xchg sbb pop pop movsl push cli xchg iret stc add ret fsubp pop pop mov push add (bad) int3 mov or mov hlt lret jo rcl push bound add cmc pop imul sub test rolb push mov dec leave data16 dec loop (bad) mov pop push test xorb or mov cltd fstpt jecxz fldcw mov push gs mov cmc data16 or sub inc in mov (bad) (bad) pop popf xchg inc adc roll enter dec add or leave cmpsb push popf push cmp push mov gs scas cmp ljmp call jb xchg sub or sub out mov sub jne leave xor testb sub repz and sahf ficoml stos mov ror mov icebp and jns movsl inc out xor je test imul lds pop xchg dec jmp aas mov sbb fwait cmpsl or cmp lods pop sbb std loope pop cs into shrb daa lret lods pop add lds adc jg outsb lock ret int lods rorl push ds ds sbb or call pushf jne xor mov popf sti or pop fs xchg insb sub jno inc ljmp inc pop inc call jg fdivrs or movsb loope mov cwtl push (bad) mov (bad) mov into sub sbb jb push and mov das repnz shrb lahf ja pop (bad) mov sahf sub jmp loope pop xor cmp xor mov js ds and mov inc add shl dec rorl aad jecxz add sub inc (bad) ljmp enter out add cmpsb push das div xor mov xlat das bound cmp call sub sub sbb sbb mul lret pop mov mov sbb inc movsl jg xor js (bad) movsb daa mov clc xchg pop sbb sbb enter dec into mov and or pop adc fimull xchg subl icebp add mov dec test or mov daa adc pop adc and lods ficomp je mov call xchg out (bad) jae adc subb mov add mov aaa pop les inc mov cwtl mov xchg xor and cltd push sub sti jle pop movsb and mov popa cli out pop in add (bad) fnstenv test sub push pushl cmp and popf add push mov adc mov inc out mov push pop xor loopne xor adc mov hlt xor sub stos sub dec inc xchg stos mov (bad) call pop call ja sbb jno out sub mov into negl cmp insb rolb adc popf out daa jge push iret mov adc push scas cmpsl inc adc mov xor cwtl sub mov inc sub xchg int imul and dec dec lds gs ljmp data16 repnz fwait xchg sbb or sbb loop mov inc pop imul and or sub sarb xchg ret daa repz push or or xor (bad) test push sbb jb in mov sub ljmp (bad) lods dec mov cld shrl inc adc push mov cltd mov daa mov add push jle imull cwtl inc dec ret dec (bad) pop jns dec sub gs fist dec sti dec iret mov pop cwtl lods bound gs adc xor xlat mov adc dec mov mov sub or mov setle mov lock mov pop pop sbb subb mov mov rorl lock iret stc js mov push outsl outsb pop pushf mov adc add push mov cli jecxz das push lds add stc xor mov je dec jne notl add stos (bad) (bad) pop xor stc or pop in scas ss inc lahf (bad) add dec dec lret push add dec mov sub sub inc inc and cwtl and cmp mov add mov pop lds es iret aad xchg movsb stos cmpsb sub das mov in imul lods std mov jg daa out ljmp jae adc and xor mov sbbb mov sbb (bad) mov cs jno leave fnsave mov push inc push and sar (bad) pop aam movsl hlt and out mov xchg (bad) movsl and dec sahf xchg xlat loop jg shll push adc leave and das xchg out cmp ret (bad) ja loope xchg cltd incl xor pop mov fadds xchg mov mov pushf hlt cwtl (bad) pushf pop insl sub nop mov es adc mov cmpsb loope dec mov inc or stos in dec mov idivl xchg ljmp shrb or mov pop or daa cmp jbe enter mov rcll inc mov mov mov repnz pushf mov add out test pushf push out jmp push or add jmp lret jo add or pop mov outsl adc pushf xor xchg adc push xor jle jle jb sti ds not mov mov mov repz sub rorl (bad) sarb push pop pop int push cmp in jl hlt xchg out push out cmp lds js (bad) pop enter (bad) and and neg lahf pop adc (bad) or out call push adc sub lods stos adc pop sub cmp movl cmpsb nop daa xlat int3 sub jmp inc dec movsb xchg repnz mov lret out or mov ffree outsb lods inc addl jne icebp jge (bad) dec ret (bad) adc stos sbb add mov cmpsl push sub inc rorl (bad) sbb xchg popl es cmpsl sub daa sub hlt sti jb add or sarl scas sarl push mov cmp pusha add (bad) add std mov cmp adc sub sbb cmp cmc (bad) jmp add xor sti flds xchg (bad) mov shrb enter stos sub mov xlat leave je aas lods fcoms sub loopne repz lds pop mov imul jmp aaa lahf pop jl out out imul inc xor test rcrb push push in push jbe bound fldcw dec out cmpsb or cltd xchg sbb cs or mov loope dec bound jae sbb bound xchg bound sbb (bad) adc mov fstps stc dec icebp jmp not jl mull pop push add enter dec int sub pop stc addr16 enter dec aad dec dec shlb scas and lds add jle jb mov aad leave fdivrl ret loopne or pop push test mov (bad) imul pop loop fistpll in repnz sub lahf icebp inc and pop leave dec hlt fdivrs mov mov pop pushf lea mov mov pop push pusha xchg mov and lds and mov jle cmovp (bad) cld cmp add call xchg cmp jne inc inc int3 pop cmp insb repz aaa adc cmp mov (bad) pop rorl fidiv les jecxz sub xchg pop cmp push xchg dec (bad) jmp mov jns dec test inc jle add push gs add jmp into pop or jmp adc imul decl jb lods pop xchg enter in xchg fbld pop mov cmc mov push pop cld (bad) pop mov dec xorb xchg sbb mov mov mov (bad) adc and and inc and (bad) div in xchg imul leave jno rcrl and jl jg ficomp fnstcw movsb mov mov adc add adc ret out ret xor ret xchg fcompl mov test sarl mov cmpsb (bad) mov mov divl fwait ret mov adcb leave neg inc rcll das fsub cli in xchg (bad) mov xor (bad) mov jae mov mov xor mov adc inc dec out sub lods pop mov repz ret cmp out push add lret xchg jmp xchg and cld dec out inc dec jl rsm es pop ljmp mov inc stos jne call mov movsb mov jbe push sub pop mov (bad) or mov testb out xor sub mov mov ret in sub rclb sbb and mov cwtl nop lock dec and inc xchg xchg rorb lds cmp aam push add stc sub shrl lret mov push push or dec add das notb dec in in push add cmp lock sub test gs sub xor stos popa ja mov inc ds mov (bad) aas dec xor mov pop xor mov std push jge fisubl fxtract inc sarb mov xchg mov cmpl add repnz cmp aam jne call jno ja sbb xor mov dec fcoms dec repnz (bad) and imul out mov or into inc and lret out dec xor add ret or loope or or aas add (bad) sub scas mov pop ja add (bad) sbb pop mov inc dec mov fimull inc aad repnz lret (bad) pop mov and lock mov outsb imul cli add or inc decb movsb pop leave jge push leave xor icebp out mov outsl sub in into mov cmpsl xchg dec cmc inc push xor in leave rolb decb not enter lret jmp xchg mov notb add mov or pop pop dec pop std dec xchg mov mov ljmp ja sbb out testb mov add enter lods jmp and ja scas daa dec pop xchg jmp adc inc inc inc xchg mov movsl (bad) imull pushl ret pop popf popa in imulb lcall (bad) cmp and xor ljmp ret mov clc out xchg jle pop pop and loop fldl das cmc cmp jge cmp popa mov pop scas add fldcw inc (bad) fincstp icebp repnz add gs mov shrl ja and pusha push repnz add data16 or mov mov test xor dec mov (bad) xor ljmp xor jo lahf adc pop mov sbb arpl add ret mov xor loopne or cmp dec xor repnz push jnp addr16 lock xor popf pop das gs mov lods add or in xchg imull (bad) not dec clc jg mov (bad) inc das push call xchg mov xchg cmp inc sub popf sbb or repz test (bad) xor mov add fldenv and xchg sahf xchg incl mov fistpll sbb and pop mov movsl pop stc adcl or mov lds jge jnp or add mov ret aad mov test adc adc int lods sbb xchg arpl and roll dec fbld adc ljmp mov xchg xchg leave jmp fstpt cmp dec and repnz jae sub cmpsl mov in stos out dec repz xchg push jbe xlat loopne sbb xchg jb xchg rorl mov mov sarb out pop xor test lret mov comiss cmp pop sub ret je rcrl mov out mov hlt ja push sub jns add aas dec ss les scas popa adc pop cmp je xchg icebp jne mov adc (bad) xor imul dec mov add outsl out push push dec xlat hlt sub cs mov mov and add or aaa shll leave jmp push xor inc jno,pn push das mov inc sub push ja dec cmp xchg cmp and fsubrp (bad) (bad) lea adc jne adc dec cld fnstsw dec lcall stos notb test pop out jne in xor outsl icebp push imul sub lret jg sub out xor mov add dec ljmp repnz inc decl and (bad) add jb sbb es sub mov ja inc lods in or or in push sub push ja,pn pusha jbe pop xlat divl jle (bad) pushf lahf test and mov daa sub sub cmc adc mov sbb xchg cmp mov cmp mov sub jecxz std mov (bad) jmp cmpsb xchg mov ds pop mov fldcw fimul jle inc cwtl and pop mov pop (bad) (bad) cmc fstps or jmp test out fs dec out pop fcom iret popf int3 inc dec out jmp push into pop sub scas xor (bad) insb jnp out rolb and push sub xchg sti divl pop adc xor mov leave leave (bad) mov xor ficompl xor jbe pop movb jo xchg xchg mov mov add jmp dec out cld pop push sbb imul aad xor (bad) jno call pop repz pushf bound adc cmp sub outsl xor repz sti fildll xchg shrb das ds mov les fxch fstl loope pop xor fstps aad dec daa sub xlat into cmpsb dec loop jle add mov sub or sahf sahf rclb sub cltd stos dec and sahf mov add lods push sub clc js es or mov imul scas rclb incl (bad) addr16 leave jg addr16 ds daa pop push push add lahf mov jo xchg xchg sub pop or mov adc mov loope xor xchg stos push das mov test shl jmp in adc cmp std cmp test fmull adc pop and imul in jne sbb popa adc int3 xchg ret xchg scas scas push mov dec (bad) dec ljmp xor jl xor movsl jne mov ljmp addr16 lret push popf in out in push mov push dec push push ret mov mov out cmp out lcall scas lret (bad) sub cmp movsl fsts add gs loope inc mov sub ret ret add ror push pusha rol xchg inc pop and pop sub (bad) (bad) outsl push out lret mov js fmuls sahf or inc cmpsb xor lock xor iret add adc fcmovbe jp mov cmc mov push xor and mov rolb pop sbb stos mov loop bound fidivr push leave pop (bad) pusha add mov push (bad) mov in xchg (bad) xor leave das mov jmp out add jo insl stos test sub mov jno dec mov imulb push xor fs dec idivl xchg out (bad) outsb jmp pop cmp data16 xor mov and dec xor adc sub cmp cmp iret jns xor lods pop xchg stos enter cmc push cld and cmp cmp (bad) leave (bad) ljmp aaa ljmp sbb push shrb pushf shrb mov std lods mov pushf jne repnz push push inc jns jbe push cmp stos fdivrs pop or lock jbe fidiv or pushf sahf (bad) dec sbb mov push or mov and xchg adc nop xchg xor repnz xorl xor pusha popf sub lock push pop jmp cs cli movsl jg (bad) adc xchg cwtl or sub pop jle push fistl (bad) dec leave je mov cwtl (bad) xor shrb clc fsubr push out or out and xor decl mov adc pop loop rolb xor ljmp mov push xor insb clc out mov test or (bad) mov testl lret ja in xlat in pop sub das lock mov stos ds or or mov sub (bad) push xorb sub mov lret mov or enter pop fsubrl mov ljmp ja (bad) sub out sub cli (bad) outsl dec add xlat lods scas dec mov pop inc dec mov in lock (bad) sbb ret xor pop xor fild push mov sub fist das shll pop add mov mov pop in adcl mov mov je push scas fnsave ljmp repz cmp mov into sbb pop dec and cmp jnp invlpg push cltd mov lock dec and icebp insl mov sub push push clc popf or push or sub sub xlat xor xor jmp xchg testb cvttps2pi call lods ror xchg aad icebp (bad) and (bad) mov scas ret mov out mov cmp imul xor pushl jp and jmp addl mov daa (bad) jne aas fnstenv or push in divb test int3 pop sbb clc int3 dec mov imul mov loope pop push fcomps (bad) dec andb inc add pop into dec pop cwtl bound push lds and mov adc jne ljmp daa divl mov in pop enter sub int3 push mov clc fistp xchg fisub jmp sbb push cmp stc popa daa xor hlt fidiv movsb cmp ret xchg lret mov xor mov pop mov ret popf cwtl clc mov (bad) test scas addr16 ljmp or insl lahf in sbb insb xchg mov add or mov aas scas or std into (bad) popf jle mov stc mov hlt push dec scas (bad) sarb mov add mov lret or dec (bad) sti (bad) (bad) ljmp push adc mov pop adc stc sub xchg cmpsb sub push push mov add sti jecxz sub jmp adc bound sti lret adc frstor icebp jmp cwtl daa and adc fiadd pop in (bad) mov (bad) cld rol or sbb and sti push int3 fmuls lret xchg lds push (bad) pop incb xchg sarb insb mov ss loop and fucom sbb (bad) xor lea fistpll dec xlat dec stos pop iret call cmc addr16 adc push cmp or and sbb sub add je xor (bad) mov dec jg loop,pt sbb pop pop fimul or xor (bad) adc cmp ret mov xchg je adc ret sub out sub adc movsbl and cmp mov and aad xorl (bad) std inc mov mov dec decl lret in cmpsl dec mov test mov xor pop push inc jmp ja dec iret scas lret jp xor add cwtl aas mov inc jmp lods aad inc pop mov mov arpl push xchg stc mov xor xor and mov (bad) mov ljmp mov rorb out outsl and decl or cmc lds rcr pop divb mov cmp sbb xlat cmpsl jbe lods decb mov test into test pop mov fwait pop hlt mov pop subb sbb dec xchg testb xorb (bad) cmpsb popf or and adc and (bad) ja out mov std xor pop int3 aas mov mov pop push push mov pop add daa sub jne jbe pop add mov and test lahf pop mov movl jle leave aad hlt push add fisttpl stos sub xorb mov inc and add cmp sti sub xor adc stos test xor lock jmp ret xor xor mov out cmp dec push sub js dec xor das out adc xchg sar mov mov (bad) inc mov or cltd dec (bad) or mov popf hlt mov add xchg xchg dec (bad) cmp decb xlat repz jae or inc lods shrb cltd xor jl leave sub scas movsb popa and cmpsl pop lret cs adc fwait in ljmp popa sahf insl jns sahf nop out jg,pt xchg cmp divb and lods adc in ret jecxz sub stos xor adc rorb pusha out aad pushf sub adc add (bad) mov popa or jge add pop mov test int3 jl test sarl adc cmp mov inc out and add ljmp xchg adc (bad) push out push test nop adc lret xor test rol imul sub or cmpsl movsl jns (bad) out pop push ret je push sbb fwait xchg lea jecxz push xor je cli jmp or sbb mov dec outsl xor idivb mov idiv repz scas xor and cwtl push xlat sar jmp icebp shrb mov pop test mov inc das imul mov xlat xor iret in mov fs mov clc jbe fcos les dec leave xor gs or (bad) adc frstor daa stc pop test sub mov sub ror mov pop pop push (bad) xor rcrl pop iret mov push (bad) pop push adc push stc lahf fdivrl je sahf mov xlat inc add mov xlat (bad) int imul gs rolb aam rclb test cli call mov into xor or sar xor and pop push out push pushf dec mov bound mov (bad) jmp push mov mov xchg imul inc into xchg and movsl push xchg pop pop cmp aas loop xorb sbb xchg clc mov jp mov mov orb cld shll and xor (bad) outsb (bad) in in sbb sbb xor and daa pop gs test cltd inc (bad) push loop add xchg or idivl lret pop fidiv pop push cli jb inc add lods int3 andb aas stc ja movsb xchg ljmp mov dec or xor fcomps loop ja add scas (bad) (bad) xor cs inc pop out icebp lds xor push jmp addl test xlat enter (bad) out aaa xor mov pop ficomp sub addr16 stos stc or (bad) jg cmpsl sub fwait xchg or pop (bad) mov std ljmp lret movsb push mov pop lret pop lcall std sbb sti dec xor jmp lock and dec or add xor jbe pop icebp imul mov sbb dec lahf sahf pop dec divb rorb rorl lret jmp xchg inc mov add mov test test jmp dec jmp in sbb mov adc mov pushf out loope ja inc xor mov sub mov fbstp jp sub mov sub in ret loopne loope cmp movsl mov xchg and in cmp dec adc and or mov icebp cmc cmp leave mov in push loope aaa pop push mov ljmp mov jp jns dec cwtl pop sub popf mov (bad) xor add xlat xor fild out mov pop lea dec dec mov jo xchg in mov mov jp xor ds sbb xchg lcall (bad) ja sub shrb lods dec adc clc mov adc sbb movsl push aad xchg or jno mov fwait cmpsl ljmp sbb xor xchg dec sub sub jp and mov sbb sahf sub pusha nop sub and inc (bad) clc pop xchg popf sub (bad) cmpsb inc pop adc repnz xchg call addr16 push sti mulb stos sub sbb add sub (bad) aad jle sbb inc xchg fstpl and or and pushf std in fbld ja pop adc mov cmpsb pmullw xchg mov sbb add mov push adc mov mov sub jecxz je add test mulb sub call sbb idivl inc repnz (bad) xor mov push xor or sub scas ss cwtl lahf repz sbb bound fs lock sbb xor pop push lahf pop xor mov in mov iret mov fmull (bad) lahf dec ret mov jo pop (bad) test movnti pop repnz sbbl jmp pop inc sub jmp cmp into xchg push jle mov jg xchg pop iret mov adc pop js or sub (bad) adc and cltd lods jecxz,pn sub out mov rcl adc and pushf cltd xchg stc xchg adc sub xchg inc aad jg fcoml jg sbb mov leave and out sbb icebp rol mov xchg int3 inc and lds mov out jb lds ror xchg or sbb mov sub cs jns jbe fs scas lods test int3 (bad) or jmp xchg imul fnstenv mov lock xchg jno sti leave jge sbb movsb in add imul lods and imul sub jbe mov in and loope xchg add add add push nop mov xor lret push pop clc xlat pop out js add sar scas xlat sbb sti or or pop inc mov cmp inc pop lods cmpsb mov jb test sub mov jb push adc mov pushf cmp loopne clc dec add fidivl enter ss call test pushf je outsb adc sub dec fsts cs mov jle and mov inc gs and stos (bad) mov pop or mov test incb add lret mov test or cltd xchg mov neg mov (bad) aaa sti and fsubrl je jae sbb into mov add mov dec sti fnsave mov movsl fild and jno inc add pop and xchg push inc lods jmp dec leave xor lahf out push rorl jp dec out int3 loop daa sub cltd sarl xor sti fnstenv negb daa jmp icebp daa add pop mov mov icebp sub imul aaa mov pop adc jno xlat and arpl das (bad) in rcr dec rcr outsl xor jnp icebp pop and sub inc in call cmp jmp xchg in movsb or ljmp into pushf (bad) mov gs xchg add sbb mov imul pusha xor sub daa add xlat addr16 pop out push rep lret sub pop divl mov add adc inc push mov pop xor lods ret lret pop cmpb daa out int cmp dec das xor jmp leave movsb stos popa lds (bad) das arpl pushf xor das (bad) ljmp out sub fdivrp jb (bad) imulb dec xchg arpl cmc inc jle add push lcall push ret (bad) rcrb inc mov sub repz daa and cmpsb bound add sub repnz cmpsb out sub xor adcb clc push stos adc inc mov leave jmp in cld ret lahf xor ljmp mov sub stos idivl push dec jmp sahf rorl pop or outsl or fist arpl xchg pop inc out gs je and and xchg sti dec inc mull inc clc mov add dec shr fstpt add cmpsl (bad) dec jbe popf cmpsb sub hlt iret or adc lock xor mov aam push jg data16 xor push pushf cs das (bad) pop push cld hlt dec dec das inc pushf or jecxz sbb mov loop ja arpl xor inc lret out adc add insb test pop notl dec out xor call sub fisttpl mov xor lret xor out lock repz in mov ret inc je xorb movsb in (bad) mov mov xor call dec movsb lahf sub inc pop or mov jl pop mov popa mov lret cld (bad) lds negb pop ret push pop pop or and and or pop repz lock xor ret xor mov mov repnz test sub adc ret ljmp ja mulb push jbe push jl push (bad) imul rolb mov (bad) mov jmp push jns cmpsb popf sub fimull jmp dec ds and adc or test jecxz lods mov sub (bad) adc mov push mov test ljmp aam mov pop jmp outsl mov and cmp movsb cld mov pop inc arpl dec (bad) repnz sub into add xchg leave adc test cwtl mov jl mov sub inc xor add jo xchg addb imul mov aaa push stos cltd xchg imul xor js mov std jno inc ret or (bad) lock lods lahf push lock pop leave mov xchg xor fsubrl or jb mov xor xor ret adc jns repz xor cmp push icebp inc and adc xor mov rorb or xchg test inc sar push bound enter or aas push add sub pop mov jne add mov scas mov sahf xchg push mov jb leave lods cmpsb mov std outsl xchg out cbtw mov sub imul sarl sub mov xchg (bad) jnp dec or sub xor and data16 mov pop daa inc push out mov xchg stos sub add mov and out adc imul push sub xchg jle in jmp andl push push jecxz adc ljmp push and cmpsl je (bad) mov movzbl stos adc mov cmp or jl in in shlb add cmp hlt aad xor cmc inc negl push mov jno je add xchg sub aad pusha push dec adc mov push jg pop cmp mov roll xor inc and mov subl inc in cmpsl pop or dec ficom mov enter add aam mov mov pop addl mov in insl sub insb or adc sbb add das dec dec push pop pop mov xor xor cmp je mov test mov jne pop out ror pop pop pop movsb xor fistp stos sbb xchg imulb add push sti lahf inc stos or pop add ret add adc shrb sub or popa mov sahf inc xchg mov outsb clc inc inc jecxz adc sub into repz nop decl jmp sbb fiaddl rclb cmp (bad) int3 loop rclb hlt jns xor push stos xchg ljmp xchg xchg add mov fdiv pop popf incl (bad) gs outsl sbbl ficom or push inc xor adc xor mov sub inc sbb mov (bad) push lahf fsubl cmc adc xchg pop sub mov push push stos and stos dec fdivs (bad) xor lock cmc mov add cli push cmp cld sbb pop mov inc push xchg jbe rorl in jl sub or jns adc in add ret gs and (bad) mov dec shl jbe daa into iret pop mov dec (bad) mov sbb adc or sbb add lret dec lds push aad pusha jnp sbb iret jg cmp (bad) icebp or movswl pop pop fs lret cmpsl jb or adc and xchg adc sbb inc fnstcw pop repnz lret or sti gs push out fwait jno ret add adc mov jl out mov sub jmp or jge or adc cwtl adc ljmp fisubr mov sub repnz cmp cmpsl xchg add fadd jmp mov repnz test sub rclb js pop test push cmp mov lds pop xor dec xor aas test shr out jns jg add mov push lods lods mov cmp sub bound pusha or xor lahf (bad) (bad) xchg fisttp fisttpl divb sahf dec int3 mov mov xorl fmul sub ljmp push sbb rep xor out sbb (bad) add xchg jmp pop in xlat inc xor mov jmp repnz aas mov cmp sub (bad) lret out out and push repz jns dec (bad) xchg dec jge jno fdivp add (bad) iret mov stos mov dec lea jnp in and popf lcall ljmp movsl data16 or pop lods arpl mov call std inc test add jmp mov mov xor sahf pop aas in cmp adc sti sub mov ljmp in in es outsl dec add inc out in push mov and fadd or into mov fld roll in je cmp mov push inc xchg pop sub scas sub jmp xchg stos mov dec mov bound enter or add jnp jmp sub arpl and inc xor jne sub outsl test inc sub pushf fisttpll ljmp outsb jne cmp dec inc test inc xchg and lss mov cmc stc and mov dec insb dec out mov push vprotb xlat inc xchg aas outsb popf imulb mov divl (bad) adc xchg in leave mov gs mov pop sti sub sub div xor rol pop out pop stos sub adc xor and mov mov ljmp sbb cli icebp lods test and dec and lret stos jne jmp fs cli xchg or faddl je dec add jae mov pop ja sbb inc dec (bad) mov cmp pop imul mov add pop add xor ret into cmc inc vmovaps jno,pn sub sub ja cmp andb lret cmp xchg (bad) inc in arpl or in or dec dec mov imul push mov out ja into aam gs xchg pop jno stos mov sub shlb rorl dec loope in cmp rcll sti mov cld popf sbb (bad) ljmp (bad) aam pushf mov jnp sbb out pop pop aam sub (bad) cmp mov (bad) sarb das mov cmc adc call and mov push or add or push xor fcomp xor test dec pop das cmp lret mov lock sub inc xchg out jb (bad) pop into sub fidivrl pushf sub sub pop sub fwait sti mov imul movsb mov pop or cmp popa fildll and or jl iret mov int3 addr16 sar mov pop jno imul fcos test add mov (bad) fldenv and xor je pop mov hlt (bad) sub lcall negl dec mov leave lahf inc mov (bad) push dec mov repz sar ja in in push mov dec pop cmpsb sub push add es mov push inc leave jne mov cmp call xchg fwait leave jmp sub cmpsb push sub jo outsb (bad) std or or rcl call out cs movsl iret or pop adc daa jmp popa jnp inc dec adcb test xchg xchg jmp (bad) loop add mov add xchg int3 aaa js and and dec sbb jns enter sub cmp push bound mov xchg imul out repnz lds xlat out xlat pop imul dec fucomip lret cld in lret into or call push mov xlat push jp inc sbb pushf fnstsw mov mov movsl pop stos sub repz leave xor pop cwtl inc lock movsl stos bound popa jbe imul xchg jmp push add add adc (bad) dec pop idivl xor decb pushf rcr movsl xchg out cld pusha movsl jmp add scas xor push dec leave fildl jp xchg jp push xchg fwait cmpsl push sbb xor out negb and (bad) mov roll repnz (bad) push jg adc or jno iret popf mov jg inc movsb mov fldt leave idivb push or lds xchg push fstpl cli sub imull and (bad) inc testb sbb mov sub call aaa insl and sarl jb clc popf sahf xchg lret pop jmp adc (bad) jmp inc mov into lret pop xchg push icebp add leave pop ds dec mov and (bad) jne dec xchg icebp mov sub pop dec loop mov jmp adc data16 dec cmp adc adc push es sub jne add pop cmpsl int3 add and add scas or mov or ja cmp sarb das shr cltd push div sbb movsl cmc insb fimull xor jmp push leave out xlat push add loop test or mov xor jno clc enter dec mov mov jl pop sbb push andb mov dec pushf outsl out push pop dec negl fs test movsb test iret mov xor xor imul lcall xor call leave into jne xchg or jg in dec dec das (bad) in jmp push push lock jp pop xchg mulb adc loop xor ss jnp scas cwtl ret sbb pushf fstpl add and xor in push ficoml gs or fildl jecxz xchg adc xor ljmp sub leave ret push shll sub insb popa pop jecxz insl xchg ljmp gs push shll lods inc adc xchg (bad) lods dec and mov dec lock sti xchg sub dec mov mov sub lret xchg repnz stos jns and adc mov stos and pop movsl and cli push insb pop mov xchg lret shll add (bad) pop mov mov rorb cwtl in repnz orb pushf or out je push mov repnz bound call cs dec aas jecxz in outsb mov cmp xchg leave mov cmpl jl cli cmp out push icebp xchg sub add out xor stos ljmp adc dec (bad) lods mov xor xor and mov pop lahf pop aas mov push lret xor cmp mov inc lret add movl jg xchg inc or cli xlat mov dec imul adc (bad) lods dec xchg repz pop and ret ds test and stc repz dec clc sbb leave xchg mov push test movsb std (bad) pop test mov push test add cmp iret sub add cmpsb pop sub das xor sbb popa and inc js movsb mov sub pushf push stc cmp bound push jg sbb outsl in ss sub loop std inc pop cmpsb popa or xlat mov sbb and add inc jo sub jnp add mov pop out dec xor jecxz mov dec lret in mov pusha mov xor stos mov cltd xchg xor jnp (bad) je jmp dec js xchg rorl jle mov and mov adc sbb mov lret sub ficomp push pop ss pop mov adc add rorl xor fnstenv movsl aam adc mov es bound adc jne fistpl xchg (bad) (bad) js idivb in cmpsb dec jp pop repnz fildll mov mov lret cmp ja shrl xchg jb xchg lret lret popf pop nop pop clc or icebp jbe lret imull or mov je mov cwtl insl (bad) mov in (bad) add pop push push cmp add bound cmp sbb or inc cmp sub push pop jmp cltd push fisub cmp movsb loop cwtl lds cmpsb scas and mov push and xor rorb clc out mov mov repz jge mov insl aam negl dec push aad (bad) dec in inc xchg mov stos repnz xchg mov sub or add sahf outsb popa out dec cs add scas or xchg pop mov jle lahf in mov xchg or in push loopne mov stos pop jle sub mov sub stos pusha (bad) push sub mov adc inc or aad adcl and and inc (bad) xchg xchg xlat lods sbb nop and pop or xor sub and ror dec cmp xlat or fdivrs xor mov and movb fxch cmpsl les dec aaa comiss add jmp fadds mov jecxz push repz sub dec stos sub shr fcom decl jno xchg xor fs pop xchg loop xchg scas (bad) arpl sti or mov aaa jg dec cwtl out sbb lret lahf push in out push mov inc and and or lds jae cmpsl jne add icebp dec and push dec stos or jmp adc adc fisttp test les adc xor mov xchg mov push call cmp adcb cmp aas (bad) mov sub into mov mov icebp in xor ret xchg mov (bad) xor xor hlt shrl sub push cmp sub sub dec xchg (bad) lea popa fisttpl call adc fnstsw repz daa ljmp xor popf and cmp mov (bad) pushf pop jp and mov lods inc les (bad) dec or mov jl mov js popf xchg lret pushf adc out ljmp setbe movsl push inc cltd cld sub xchg and pop lods adc mov addr16 xchg pushf call inc (bad) push add lods into xlat mov cwtl jle add lret jno std adc xlat jbe pop std pop into jp sbb push outsl lock lahf push mov push push and ret ret icebp lret fs (bad) popa push jbe adc sbb or lret mov xchg stos and pop shr lds sub (bad) or pop lcall xchg inc add into mov imull gs pop jle and stc pop mov pop sbb sub out dec pushf adc fsts xchg xor fstpl xchg cli mov xor mov imul and mov loopne ljmp pop loope jecxz xchg scas lds xchg cmc push push mov jb lcall test sbb loop push outsb mov (bad) mov push push dec dec stos int3 sar and flds xor fidivr daa adc fisubrl pop jecxz imul cwtl hlt popf shlb pushf mov popa incb sub outsb mov shrb bound lds or pop xor xchg and sub gs dec loope mov int insl jmp mull enter and leave enter and push hlt clc xchg scas sub shrb jecxz dec shlb std stc sub std scas mulb lret sub (bad) xchg and jl and jo adc lods sub sub push (bad) cmp add mov cmp stc xchg push pushf xor mov xchg or pop ja dec aas ror pushf jle lcall out add ret int3 (bad) mov leave cld lret popf pop mov mov xchg sbb sbb sub js jo mov loop imul cmpsb xchg ret sub rorb ret sub mov bound inc mov push sbb xchg int out imul add push cltd cmpsl mov sbb jb or push xchg daa cmc mov into or mov dec stc das insb aaa dec (bad) call ja les loop mov push mov stc out pop add mov sub out pop sarl ljmp add lcall popl mov test test mov mov int adc mov xlat in lret addb inc push sub (bad) pop push (bad) cld (bad) call test push clc jge xor in decb sub movsl fistpll adc sti imul fimul (bad) lock insl sub xor rol and cmp xor cmpsb loop into sub lcall push stc adc pop cmp ret xchg adc add cmp pop (bad) jmp pop pop jecxz lock lcall or and imul pop inc push gs scas dec inc pop sbb sbb lcall ret sub and sbb or fistp push jp sbb and xchg mov sub xchg in jne divb pop mov mov mov mov jle jb in xchg add or xor push and sarl xchg pop pushl hlt sub outsb push ljmp cmpsb (bad) xchg jb dec and loop sub dec pop cmpsb and inc int3 notb sti xchg xor add (bad) xlat xor inc xchg ds iret mov cmp addr16 rcll insb mov mov and sub (bad) sub (bad) leave lret pop popf jns imul lret xchg (bad) (bad) jns push add ja dec adc jmp sub loop mov mov mov xchg call js hlt out fnsave adc jl cmp add or pop jle out or or imul fidivrl pusha push sub mov jmp or add and push out gs mov dec ficompl es mov xchg (bad) push dec mov pushf sub sarl test mov cmp mov pop ret add cmp xor pop (bad) lea cmpsb adc lret jg les cltd popf decl pushf fwait cvtps2pi gs out inc test mov xchg jecxz pop push or pop mov inc mov rcrb leave shll inc and push shll push imul lret mov ret stos (bad) cmc movb inc shr push xchg stos adc fcmovu fdivr and (bad) lods testl mov test int3 outsl sub lds pop mov push test mov and xlat test cld sbb icebp jp xor iret jne mov popf popf cmp sub add test mov or loope cs sub repnz xchg ficoml mul pop lret imulb jno dec scas push out sub stos mov add mov out mov (bad) (bad) cs lds push mov daa and add cld and fistp ret hlt ret movsb pop mov dec icebp dec xchg mov sub aas sub ret and cmpl cli sub push lahf je outsl daa fidivrl jp ret xchg out mov or out aad xor mov xchg sub adc getsec in lds pop ljmp mov sbb ljmp cli ljmp rclb mov dec xchg mov rcrl pop loop dec (bad) cmp jecxz dec cld cmc and ret out les into aad push gs hlt into lret ficom jg sahf xchg mov mov xor and stos pop cld test dec sub sbb ret psubsw gs icebp dec loop mov mov mov lcall fldenv mov out lret push ljmp adc lret leave add or xor ret test lock mov lcall or xchg cmp mov hlt push push (bad) push repz out cmp mov jb imull push mov add fisubrl dec mov testl out and pop in jmp add hlt push int ds add out pop pushl sbb sahf xor push (bad) loop mov xchg dec cmp sbb lods push out xor stos hlt add sbb mov (bad) cld xchg add mov (bad) arpl mov data16 call lret cwtl sahf xor pop mov idivb jmp pop or jno imul cwtl and mov sbb mov dec and leave nop (bad) dec lret sbb mov in fmull push jg scas or ret sub dec imul fsubr mov sub fldl test (bad) and pop jle mov lds and or add sub pop notb ss and mov shr fidivr xor xchg sub mov pop add cmp inc dec mov push (bad) (bad) jle push add sub dec cmp scas adc push ret (bad) inc push (bad) pop and in inc loopne sbb xchg sarl xor mov lahf (bad) cmp hlt into add ja inc or mov dec push jno mov xor jne mov xlat xchg in loop jne xchg xchg jge or shrl add xlat gs sub (bad) xor cmpsl mov rcl in add mov sub add pop xor sub dec pop xchg roll push pop (bad) (bad) idivl daa out and lret or sub vcvttss2si bound into dec sub dec pop or cmp lahf pop adc mov cmp out cmpsl shrl out and stc iret inc and push push mov rcl ja (bad) mov and out or sbb ret out cmp stos repnz int3 xchg fadds xchg mov scas adc addr16 pop popa jno xor popa mov mov mov or stc inc pop mov xor or fisttp sub aad xor sub and inc or xor sti lcall fdivs cmpl dec mov jne icebp les call addr16 icebp sub mov hlt dec pop js add jle lret fmull xor fbstp ss aaa loopne pop cld repz flds div rcl imul inc add or mov in xor xor jecxz fldl add into fs push cli mov mov movb test cmp imul cmp loope inc daa int3 cmpsb push or adc inc lds or in loop in mov add movsb mov repz mov test int sub inc mov lock push mov add fsubp outsl or inc push sub jge pop dec mov cltd push fimul je fs dec test fcomps bound and pop dec adc lret xor and imul stc mov pushl jg pop popf ret hlt int inc rcl lret scas xor inc test or int cmp xlat loope and push cld fimull mov idivb inc sbb in or cmc cwtl loop pop lret mov das add or cmp lret test ljmp push (bad) sub sarb push daa in iret lahf stc std leave jnp and cwtl mov shlb int3 das sarl ret (bad) gs or aad push jbe inc mov mov pop inc xor or dec cs ret or sbb mov enter das jmp xor loope xor sbb cmp mov je mov lock hlt fsts push mov xor jne or into xor mov das mov cltd movsl jl addr16 mov pop inc cmp (bad) mov fistl cwtl adc add insl xor jge jge jmp xchg das sub pop inc jb (bad) xor xchg or lret into inc insb pop popf out xchg cld xor and je fs mov imul mov mov jne mov and ljmp or icebp cmc jae popf sub cld aam push sbbb mov sub mov daa int3 jecxz mov fisubrl insb ljmp mov mov mov je push cmpsb xchg mov into pop out mov (bad) and cmc pop lahf insb jae iret sbb in inc xor mov push cmp sub (bad) lea movsb adc daa dec hlt shll lret mov and pop das pop in mov xlat jl xchg (bad) mov mov ret popa out ljmp mov dec lret cli adc or jno sub loop,pn and or mov add or sub add cmp adc xor mov (bad) pop sbb test add or pop mov cltd push imul jl lahf jle imul fs out loop cmp cmpsl mov cmp jns lahf adc mov movsl shl add cltd jecxz call cli loope inc leave mov icebp adc push or ljmp pop int movsb call adc fadds repz cmp rcrb mov adc or sub push out sub xchg in inc daa mov jne sub or adc mov das push inc sub sub sub fld call sbbl xchg icebp xor out sub ret push fwait sahf mov mov ret jne pop push (bad) mov mov (bad) hlt stos mov shrl in pop push js movsl cli xorb decl mov or int3 sbb jmp repnz in push roll jmp or jnp pop out mov and xlat outsb jmp cmpsb jmp push mov mov add imul (bad) fbld sub scas sub test dec sbb jg mov xor cld dec dec mov sti cmp ss mov icebp xchg fdivl imul hlt ds xlat cmp push out mov jnp fstpt adc cwtl xchg xchg inc and pop mov pop xlat pusha int or pop aaa cmc icebp dec dec inc mov xor dec xor fdivrs mov shll pushf mov and scas test popa dec gs les jne mov add cli sub jmp repnz out rcr stos je clc fisubrl bound jno pop push mov lret daa dec mov or divl xor push (bad) imul test jge test std loope sbb cli xor inc pop inc and or xchg cwtl sbb pop cmp jmp dec jne cltd or mov mov inc jo pop xlat mulb jmp jle or sub xchg lahf dec int ss cmpsl lds pop inc xchg mov mov daa adc mov or xchg icebp push icebp adc rcrl hlt add incb jmp pop push mull sub add ljmp jmp and (bad) add jne jne mov cli sub cmp mov inc xchg scas (bad) (bad) cld push push sub xchg loope rcl inc adc xchg push mov out daa xor sub adc and lahf (bad) xlat fs test or mov test iret mov add fsts and mov aam daa push add test sbb stos dec clc xchg imul lods je push pop xor pushf or hlt or sub cmp lret divl or mov sbb icebp mov mov xlat into sbb sub cmp dec or pop fnsave lahf (bad) nop in mov out sti sub notl jecxz xor sub dec aam jbe pusha add sub mov push gs adc cmp push (bad) pop test fiadd jmp xchg and and fdivp das inc xor inc mov aam test mov (bad) (bad) cwtl lret pop loope adc dec inc push (bad) das scas sub stc rep xchg pop pop loop cs inc lds mov mov (bad) gs jp mov pushl jmp test or iret adc out jne enter adc adc (bad) mov mov sub or mov (bad) mov inc mov fs jmp inc das jecxz sub and out mov repz cmp mov mov add call repz in stos sub pop mov xor mov lcall scas cmp push sub xchg lock adc add mov pop mov dec mov pop xchg clc mov ss mov xor add ffree xchg adc (bad) leave icebp (bad) scas fs mov sub mov aam outsb outsl jo mov inc and jge mov or jle (bad) repz and pop js in inc out into (bad) and pop test jg fdivrs fld leave cmp sub lds xchg jg dec enter cmp dec lret sub mov ja cmc and daa ret cld jp ret inc xlat lahf test repnz pop cltd jecxz in out mov inc push jns and daa mov sub arpl dec lds fdivrl mov fisttpll sub sub (bad) sub test cmpsb rolb lock sub xor pop iret sub mov dec and inc in cli mov push inc sub xor push pop in mov test pop lods push xchg mov mov push mov in fistp stos sub out lahf pop adc dec leave mov jb rolb out dec cs (bad) mov jb out js loopne push aam add (bad) ss out repnz xor icebp push jbe hlt jmp or rorb or stos xor fsubl cmpsl cmp xor ja push xchg or (bad) push xor repnz ja xor inc xchg xchg (bad) cmp cs sub jg lret inc or mov js pop or adc jo add sub dec cli cmpsb repz xor xlat popf (bad) clc into push mov adc sbb repz add xor std jno mov loop das mov pop sbb dec and lods mov cwtl loopne xchg insb pop mov jp dec ret scas mov into repz sub add and imul adc mov lret dec std sub sub adc cvtdq2ps out xor and and cmp mov fild dec jge push mov jne dec repnz (bad) cmpsl fidivrl xchg (bad) mov mov cmp out scas mov fiaddl sti jp push pop and or pushf out sbb sahf inc ss xor ds mov sbb xor sub pop and push pop push pop inc inc mov aaa xchg aam je rol cmpsl (bad) or fldcw pop sbb and xchg adc fcomip mov sub push cwtl mov adc divl movsb int3 gs sub std insb loope (bad) dec jmp dec mov repz sub movsl jno scas push lds cmc jle rorl jns cmp mov cmp ret mov push pop dec jb test jne gs inc mov in repz gs sbb sbb fcmovnbe jmp or out adc aad aam fstpt call mov js jb dec clc std sbb lods inc icebp inc mov xor gs add push je or (bad) icebp cmp sbb jl adc add (bad) sbb (bad) or jmp and mov roll push adc pushl jmp stos sub popf inc jle add mov mov sbb cmp mov sub xchg xorps out popf lds pop mov and js and push daa or lcall adc cld clc mov adc pop bound leave clc (bad) pop or xor jno dec xor mov cmp lret idivb movsl sub xor and loope sub xchg sub cld repz in and jno cmpsl ficom insl pop xchg scas sub hlt cltd mov mov jbe sub das test mov xchg test decl xor add xchg sbb push or iret out aas clc jbe loope sub jno sub fs cltd repz pop mov call xor add cltd or into pop dec sub sti in or xor cmp mov mov incl cmpsl jg sbb pop imul add icebp lret mov popf xchg and repz sub sub sti test mov js adc and or test push sub stos out and cmp cmp sub (bad) cmp jnp mov ljmp out jno add sub into cmc fwait std dec inc cmpsl jb xor leave sub test mov dec int (bad) mov jo xor arpl cs lea ss xchg or and or or ljmp data16 or popf (bad) mov pushf mov add xchg mov or out inc add fucom or dec (bad) xor stos mov or mov sarb je pop jmp mov out dec stos (bad) cs fidiv fstp sub add clc js pushf adc lods ret sbb mov enter jne add (bad) dec sub std outsb popa jmp imulb test ret sbb push push jns das jbe (bad) adc mov pop (bad) decl (bad) fiadd adc (bad) push mov (bad) mov rclb inc mov (bad) adc dec push pop gs call and adc jmp xchg movzwl (bad) or and popa inc add leave out aad loop ret mov mov loope or sbb repz ljmp cmp push or mov mov idivb incl or fcmove lret jne lcall (bad) leave repnz int3 xor mov pop pop out or or push jae add ret mov into adc cmp in sbb mov jne push mov cmp rcrl adc jmp lcall add stos sub or int3 lods ljmp lret sub push sub push mov negl xlat mov lds (bad) xchg sti push mov lret and (bad) mov push pop mov repnz (bad) jbe lret mov (bad) and fstl (bad) (bad) bound das ja mov into (bad) loop (bad) mov pusha add or fldl mov repz xor cmp das push sti fsubrl out sub lret cmp pushf push mov icebp mov jae and add pop shrl adc mov or mov or push and stos daa pop lret test mov mov daa adcb push fs push inc lock mov sub sub divl push lea sarl mov cmp push sub xor iret xchg imul loope sub into jns das or out repz fstpl adc or orl jmp gs pop js fcoml mov push and jmp fwait xchg xlat xor xchg push mov mov iret in dec out fldl das cld (bad) dec sub xor rdtsc fidivr sub roll clc pushf add or ds loop adc ret or scas sti add (bad) dec pop mov icebp jmp pop sbb mov jecxz cmc push out out imul nop xchg jmp jl popf cld aas jb xor jle adc dec pop imul push adc idivl inc repz (bad) jne and out adc lret xor lahf add les mov pushf and mov and jmp inc push and push cld leave pop (bad) mov (bad) jae sti xchg adc pop gs call repz sub pop push stos fwait clc pop mov jge lahf je int jb lcall cwtl jne lods mov repnz rcll lahf inc pop pop repz arpl ds loope mov enter xlat fs adc mov cmp jg arpl or push fidivrl (bad) (bad) mov out pop repz xor mov jbe push mov mov std test and loope dec cmp jno add je (bad) and stos xor stos cwtl fadd dec sub lret les inc lods sub lret pop add cmc xchg fcoml inc or test sub inc rcr (bad) fsubrs lret mov lea sub or pop out xchg add mov outsb mov xor cmp mov jmp insb mov leave fstl addr16 (bad) mov pop lret ret (bad) idivl or mov stos into xchg sub or sbb clc pusha push out and ficompl mov jo (bad) cmp mov push push das push xlat sub adc (bad) mov repnz inc das add cltd bound outsb mov adc je mov adcl or jecxz lds daa out push dec pop ja insb lret roll cmp push dec cltd and mov popf pop iret outsl and imul cmp lret ret leave pop out mov pusha add mov sub es adc enter inc and pop std adc xor cmpsb insb dec xor idiv xor (bad) call negl adc insb xor push movsl test pop jno xor jle sub dec inc lret int sub and iret int3 sbb xchg iret stos xchg dec jge out lret and mov jnp or mov and notl mov inc (bad) jmp sub or add dec cmpsb or repz and out pop cmp add rclb into scas inc pop jnp push jmp movl or iret or push jo repnz aas daa aad pop fldlg2 lods clc inc dec out jmp divb rclb push pop imul pop out xchg pop xor out add xor sub stos aad pusha push xor inc mov sar mov aad lret rdtsc shrb arpl adcb mov mov dec movsb iret ja rcl or inc dec sbb sub (bad) sbb adc stc aaa mov aad dec ds sbb or push xor das mov in mov and mov lea cmp push rep sub sti and ror add popf push mov (bad) aad dec or or push cld cld pop dec xchg or mov dec rol in stos mov das addr16 and jbe popa pop or xchg daa (bad) rclb enter mov ret neg addr16 push mov sub jo icebp imul lock fstpl mov popf sub xchg sub mov test das arpl cld outsb movsl lret dec inc or jo test fistpll or or movsl aaa das mov fistp sub xor rcr sbb mov dec int3 and ljmp rcll xor mov add pop je imul dec rcrl je out fmuls ss ret scas fcompl pop aam jecxz xor ret sar ds xor and sub sub mov sub repz lahf add leave and dec out dec mov or icebp push in xor mov call cmp mov (bad) mov dec mov in dec (bad) mov fisub add movb clc xor sub sub ja ja sub cwtl icebp xor xchg mov push push lcall adc and adc adc fstpt fxtract xchg fstpt pop adc out in xor sub sub mov popf or arpl test sub cmc adc pop pop cwtl scas add mov test mov xchg xor fsubl xor outsb aaa mov pop vmovhpd stc (bad) pop scas sub outsb repnz dec mov sahf dec popl incl clc aas popf pushl (bad) mov cmpsb nop insb lds icebp ljmp push add inc mov int3 test jle and pushf push leave push pop mov xchg sub cmp sbb stos sub xor dec jnp push pop push fldl (bad) xlat or shrl xor data16 sub dec testl test mov fs sti lret xor ja xchg xchg into cmp sub mov mov sbb das mov into fstp cmp dec lret sub pop (bad) dec dec test fbld stc pushf dec mov xlat inc dec pop negb lret pop cmp cli mov dec and in mov inc push mov inc sub dec rdtsc mov pop sub imul mov push cmp jl iret xor dec incl adc push sub sub xchg rorl test and or xchg fist xchg (bad) push mov sbb icebp cmpsl xlat sbb lret leave fisubr stc adc movzbl out cld mulb and sub mov push pop or out (bad) insl and ljmp mov dec iret aaa ja (bad) mov adc or pop push lds dec imul popf movsb out call rorl push push test shrb icebp lret subl mov adc mov insb cwtl push pop subl out (bad) stc or sub push add ja outsl bound aas aas mov inc js sahf lods loop ret test lea sub adc loopne sub iret mov out mov add push out pop incb into or mov mov stc lcall loop (bad) repz stc inc xchg call sbb push pushf sahf add mov pop rorl sbb in lods push push add push add pop mov pop outsl xchg cmp add and psubw and bound std insb mov mov leave pop pop sub cmp jge adc add js les ffree outsb in jnp outsb call mov cltd xchg jp inc ret dec inc xor lret pop sub cmp push out call ljmp add pop fprem fistl jmp cmpsb (bad) lods pop push pushf enter stc inc clc clc xor decb inc loopne cltd xchg loopne lret fimull dec (bad) jl divb sarl fidivr push lahf push cmc xor hlt jb lret sub mov into xor stos les rcll mov pop mov and (bad) xchg mov repnz adc lahf xchg sarb xor dec lcall out je out (bad) fnstenv sbb sbb xor fsubs or fstpt add cs mov int negl pop xor sub push (bad) xlat addr16 mov rol adc or sub fidiv std out lods jp out fadd lret xchg sarb lds out das (bad) lock jno inc xor repz mov mov maxps pop lret movsl inc in mov sub data16 and or negb adc loop xchg test pop outsl push pop out sub call loope add ds out test adc (bad) pop add int3 mov jp loope add jo or ret sbb lods add add cmp xlat repz idivl repz imull jne stc pop imulb mov xchg lea and cmp and ja pop ret leave std push pop inc (bad) dec cmp into or insb lcall or ljmp aaa sub push out fsubl mov xchg jmp inc xchg xor xor data16 fs insb jne das cld test cmp call sub popf cld loopne mov (bad) lret xchg cmp mov (bad) and jmp pop xchg fimul out cmp arpl daa loop ss jo loope movsl and or sbb xchg icebp mov add mov out incb clc xor test inc mov adc adc stos int cs pop cmp and out dec adc pop jnp mov add mov sti fs sarb push sub (bad) xor cmc insb lock mov std lds jns xchg fisubr pop lods sub cmpsl std sbb mov repnz mov adc push loop mov add aam sbb repnz xchg out fs mov inc or sub jb out (bad) and js xchg outsb lods jl jns arpl or mov pop ret lds adc test mov (bad) jmp (bad) scas ret mov inc mov pop aad dec sarl hlt (bad) popf out lahf push js push xor sbb or out and and dec loope add test inc and pop pop xor popf push rcll ret cmpsb pusha sahf lret addl outsb mov pop xchg (bad) rorl ret std add repnz iret fs push jnp lret jmp jb subb arpl test adc mov sti pop mov rcrb or faddp xchg adc sub sbb inc cwtl jp pop adc cmp (bad) mov mov ret adc mov test test int3 or sub pop ror bound sbb jnp das icebp loope pop scas xchg pop aam pop or (bad) mov mov adcb je sbb jne sahf arpl loop sub xchg fimul mov (bad) fldt les add pop dec jle loopne jle int add (bad) int3 imul scas cwtl xchg ret ret xor xchg xor mov xchg orb push lahf (bad) jecxz sbb or lods cli mov lock mov pop lock cli popf mov popf cld cltd lret push sbb mov inc nop xor sub movsb inc add sbb pop stos mov pop rolb cmp rcl shr aam sub data16 jno das mov and push jo outsb push sub movl scas jmp ret inc mov add leave mov es inc mov leave pop jno and jns adc add or bound sbb push sub inc mov repz les or xor stc bound idiv jo jns ret fmull (bad) and jmp xor push test sbb jmp jle jb in sub cmpsb pop push (bad) (bad) sub imull rorl hlt (bad) aam dec lret ss add xor loop rorl xchg add dec mov or mov fldcw pop pusha lods xchg out stos cmp xor mov in push dec push mov or (bad) leave (bad) in sub pop mov pop test lds repz pop testb push gs bound xchg adc pop test in repz mov push add inc jb sub popf jae or fldt pop pop les por pusha and das dec push ja in push push lea sub jecxz fsubs sub jae sti dec call and fmull ficoml icebp xor call xlat in adc in add pop repz fs xchg mov fldl2t aad enter inc mov (bad) fldcw scas ja imul (bad) loopne stc xchg lcall mov mov adc imul leave into shl and adc sti fmull into xchg mov dec je out push test xor xor shlb ds test mov and outsb icebp call (bad) sub jge je mov push push test or test sbb xlat mov (bad) mov dec adc lds mov mov lds movsb pop push add and jp repz (bad) jno les cwtl adc inc adc sahf sub jb out dec lock pushf dec mov inc sub and mov imul dec scas test call repz mov pop out jl aas sub and cld daa lock and xchg ret std push fs stc shll jno cmp mov loope jecxz adc cli andl dec lods sbb rolb adc mov and fs sti test loop les fsubrp fstl pop lret ja xchg adc (bad) test and xor pop (bad) out pop cld dec xlat scas popa iret cmp sub out and add icebp fsubs call fcomp ret inc test pop scas addr16 push pushf (bad) dec in add add lret pop xor stos clc sbb xor xor lods loop xor ds mov mov lock pusha and ja mov test pop and mov out dec push mov mov fnstcw and mov fsubrl mov jecxz cmpsb jmp ret (bad) dec xchg xor out stos pop add and fbstp jne cmp pop popf clc adc sti sub pop mov cmp loope insb mov jmp jmp hlt dec test stos pusha imul sahf movb xchg mov fistpl and insl xor addl lods xor and (bad) and adc sti or cmp outsb daa pushf jne mov dec out pop jmp cmp sub (bad) stc (bad) dec ss insb cld xchg into dec daa icebp inc mov or mov lea jne fisubl es out xor mov outsl mov std lds add mov aas loopne or and movsb cmpsl in sub sub je (bad) jmp iret cmp adc xchg ja push stc add push (bad) lock pop imul pop adc xor not loop adc or repnz pop fmuls xchg ret add test dec mov dec mov jg sub jmp pop test and mov sbbl add rcrl push push or xor mov lcall leave jmp jns imul int3 mov es test test lret (bad) inc and and mov dec test inc mov xor or and inc mov into stos je mov mov inc jmp jb xor lds mov aaa push imul xchg das add fs pop jbe loopne stc add das je scas xor outsb mov jns pusha sub lcall mov pushf daa xchg aas xor xor inc mov pop movsb mov loop rcrb stc data16 (bad) mov lds sub call pushf mov mov (bad) call mov mov out push pop mov arpl dec or imul mov mov movl in and lods insb sarl or and out pushf mov dec divb adc (bad) mov or ret mull sub es push dec (bad) xor fldt int mov cmpsb shrb call and hlt add xchg cs sub add mov test repnz jge loopne dec mov movsl bound outsb mov mov ret or or sub adc cltd xchg repz jmp in mov idivl add mov pop std lret add ljmp cltd lahf sub xor pop xchg sub mov in add sbb dec inc adc lret out cli pushf enter nop adc jmp shr (bad) adc scas pop fcomps mov mov (bad) mov sbb push stc sbb into (bad) sbb sub fstp pop add fistpll xor enter cld out in jg sub jb mov lock lahf jnp xchg (bad) call ret pop mov lock cmp sub mov bound push neg pop xchg push push push (bad) mov fbstp dec mov mov cld xchg enter mov daa out inc sub (bad) or mov imulb or test cli repnz pop mov mov sub les cmp std lret les outsl mov adc mov cwtl or sti mov mov adc inc (bad) jmp xor mov testb (bad) xchg je int3 mov (bad) xchg gs pop sar mov pop adc cmp lret imul cbtw dec mov pop cli add movsb mov andb les clc mov mov aas mov mov pop f2xm1 outsb ficom cltd push jg mov negb push fnstsw orl sub lret push fdivp dec or fs mov lods leave std xor or xlat and and (bad) aaa or sbb add jecxz pop or out mov outsb fsubrs roll xor daa icebp ficom cmp dec cmpsl in adcb sbb stos adc fdivl sti fs sbb out adc ret (bad) out add and xor lret in pop iret int3 add fdivl into mov lock lret pop enter insb data16 add xchg add mov les push das pop push mov adc ficompl enter ret sub sub popf stc inc inc cmp popf out pop pushf mov inc fisubl mov sbb scas jle in mov mov ljmp scas fs mov sbb sub jle xchg xchg xchg imul mov test and xor cmc pop xor dec sub xor out or inc (bad) jge stos aam scas jle jb pop pop pop mov adc sub (bad) scas leave xor imul inc pusha pop jmp jno test xor sub out xor sti les xchg mov imull repnz sub das cmpsb inc add mov push (bad) aas jmp lret mov cmp mov mov lds cltd mov or into orb inc lcall cmpsl outsl jge xor lds daa pop mov (bad) sub icebp xchg xchg mov subl arpl dec test xchg loopne xor (bad) sti int outsb in inc dec xor sar mov loope mov adc (bad) out cld xchg loope sub cmp and xchg jnp pop rcll repz cmpsl push adc sbb mov (bad) mov jp adc sti cmp pop gs test mov adc mov outsl xor sub adc or push pop jne das mov insl sub sub out sub repnz rorl push sub or (bad) (bad) dec pushf in out xchg pop xchg or pushf js (bad) cmp clc decb int popa dec cmp out dec sarl cmp cmpsl jae jbe add dec jle imul sub add mov mov mov lret pop jp cli dec into lret xlat lahf sti std xor dec adc lret xor (bad) mov repnz lret and je gs into add mov (bad) popf inc enter cltd xchg (bad) rorl in mov xchg xchg push nop dec popf in es jmp jb push and cmpsb sub sti or hlt psubsw jg repnz xor mov and mov pop mov mulb (bad) jge sub (bad) mov fs add sbb fucomip in mov (bad) cld fxch cmp ret push sub push dec mov andb ret (bad) xor mov scas sub jne mov repz repz in xchg rorb dec ret mov (bad) mov lret or imull jecxz and fdivrs cltd ds and dec cmp xor repnz (bad) ljmp lret sar mov pop mov ret push (bad) leave ret imul adc pop pop bnd lods out push adc jb mov lock mov jne inc in pop xchg xchg add fstps push sub xor pop pop push cmp ret mov mov dec lods pop push mov xchg adc jbe clc fsubrp test or movsb inc sub pop mov dec mov jg fstl (bad) lds xlat add xorb cmp nop test jae lods dec imulb add pop and xchg idivb shrl popa xor std jb icebp push icebp (bad) (bad) out (bad) or xor or inc xchg lret lods dec je and scas ja and (bad) dec mov sub inc pop fist mov aaa jmp sub dec add sbb (bad) aas xor aaa push jmp xchg imul dec xchg movsb sbb and sbb ljmp arpl outsb and rorb sub xor ja addl inc and out xor (bad) call ja jecxz pop xor mov pop cli jno loop push or xlat push ds or cli lret inc pop rol mov jl jb sub popf xchg mov fstps movsb decb xor jge stc fisubr (bad) cld mov (bad) mov mov and jl (bad) neg popa inc add mov shl sbb jp test push imul repnz jns outsl test mov mov leave mov stc cltd pushf movsl adc icebp xchg push dec out push mov or or sbb mov and sub orb and dec enter outsl testb stc and xor imul aas sub and jmp sub and scas popf xorb es ret xor xchg clc sub and js lds shrb xor push mov mov daa int3 push mov xchg dec (bad) jae lahf adc fwait enter mov and idivl inc cltd in inc xor sti cltd orl das cld push mov add sti mov jp mov mov in sub mov or pop (bad) mov mov or jle push xor sub jg daa and pop adc sub in scas je gs fsubs testl daa push loope iret lods add test cmpsb pop lret dec aaa stos xor test sub out lret mov jle pop mov rorb sbb lsl adc fldt push ror imul aam scas cmp cmp fnstcw dec bound (bad) adc ljmp push scas and sti pushf cwtl xor fisubl jb dec repnz and dec sarb es jo lock fcomip pushf inc add enter push mov jg imul sub mov xor push ljmp sub cwtl mov or mov push ficoml pop ret inc pop or and call cld add jo xor mov scas addr16 movsl (bad) leave xchg push cmp inc sub or (bad) push mov dec mov jno dec ficom orl das adc xchg ja std xchg push mov xchg jae and mov dec mov and cmp mov or sub sti out out and jle ret xor lods sbb repz shrb lret je rol les stos into jne push (bad) out adc ficom pop testb (bad) int jmp mov stos mov sarl mov out das mov stc sub icebp jbe xor push fwait jns stos mov inc aad pop sub jnp mov jg add adc mov and jge mov fdivs jb imull mov mov add pop mov gs pop lods mov mov roll mov movsl fxch lods fsubl pop test pop sub mov mov pop mov cmp mov data16 pop ret pushf shl out xchg and lods adc addr16 push push out fsubrs sub and adc ljmp pop lods jns sub push jbe repz xchg mov xchg in sub stos or cmc inc pop mov sbb dec sbb push pop and mov into inc popa cld testl mov inc xchg adc jmp repnz data16 ret jbe lahf mov add sbb ficoml (bad) dec test pusha incb into mov std (bad) mov sub loope jmp enter dec xchg push in bound ja,pn and mov mov xor and cmpsl cmp (bad) adc in cmp sar sub cmp sti (bad) pushaw mov aas ret mov inc or fisub and xchg xchg or psrlq mov and (bad) inc lret sub and jb test outsl sti mov bound shl push mov inc and inc and scas sub mov dec ljmp sbb push jae test xchg inc ljmp orb roll mov and es push or sti cmp sub mov mov jl jmp jmp lret mov mov negb call push cmp push fidivr ret (bad) xchg hlt rclb sub jmp popa imul sbb lret cwtl push (bad) popw sub imul mov out cmp cmpsl movsb or repz or enter add pop in lods cs push push daa int3 sti cmp rcll and movsl sub fistl add rcll sub push adc clc jmp jae adc arpl pop push sub mov mov lods enter mov xor nop inc or (bad) or sti sub pop movsl jne inc jmp mov jmp jb xchg scas (bad) jmp push icebp sbb and jle ret sub or pop pop cwtl mov inc mov push ret push out mov in sbb mull into and es lret jle lret jge (bad) add dec cmp pop ret mul mov lcall mov (bad) push insl pop mov pop in ret loop std test cs add jge lods hlt std pop enter mov cmp dec sub xchg cmp ss xchg jle stos cmp jl test mov fsubrs out test mov iret or push cmp dec inc xor or pop xor jb (bad) xor or leave enter lret xchg test pop loop xlat push incb push pop pop cld jns sub inc aaa sbb (bad) mov xor sti mov and add mov incl pop ret mov cmpsb aam fst (bad) pop daa iret repz fucomp jne shrb pop (bad) xchg outsb in mov cmc bnd leave xchg std sbb fldcw jmp mov fwait xor pusha xor add vmovaps (bad) cmp mov push or dec mov push xchg mov xor cwtl aam enter in loop std push (bad) xchg xor daa cmpsl stc xor or xchg add mov sub pop shrb (bad) scas pushf push xor ja sub loopne addr16 mov add imul and imul (bad) mov daa orb jmp orl mov arpl mov aad aaa int jns,pn movsl sbb add mov dec mov or jns jbe jmp out xchg aam pop lods cld ret mov pop jnp push and jl pop in iret loop adc jne shrl das mov fistp xchg add (bad) out bound pop pop mov data16 add mov std rorl iret sub sub sbb inc jl leave stos sub stos jns or xor xor leave pop jne jne xchg adc stos adc xor ljmp pop or push cmc sti insl aad cmp in leave movsl cli mov xchg mov cmp mov jae (bad) lcall repz pop mov pcmpeqw mov loop (bad) lods cmp push xor cmp sahf dec mov mov pop les (bad) jne sub jne in add mov pop das stos je stc sub xor icebp sub pop shrl loop repz sbb add xchg (bad) sub xchg push (bad) jmp rcr and inc sarb pop sub dec xchg add dec shr jmp testl insb adc add scas je stos mov dec push scas test in popf or fimul jnp xlat fimul push or std sub mov sahf movsl xlat inc dec add adc pop add jmp in and aas out popa scas sub in movsb (bad) repz leave jb dec fiaddl leave or sub aam and jmp rcrl sti mov sub jbe inc popa lea xor das or and mov stos sub sub divl repnz pop pop mov outsb pop int3 pop pop sub push daa popa clc sub push in inc out mov lret fist (bad) imul aas push or dec notb pop lahf pop adc inc out inc dec jecxz pop std stos sub mov mov mov push cs cmp mov jle or xlat jmp mov pop sub sub jb pop mov iret mov in xor inc and pushl leave pop icebp push add pusha movsb cli cmpsl jno jmp adc sub and mov sub lcall or iret pop pop push lock in nop rcll sub jbe pop inc add xchg mov push stc add in jmp fldl sub dec popf lidtl dec cmpb fsub pusha (bad) push lods sub jle jmp imul inc repnz xor mov or mov or xchg cmpsb cwtl bound or pop rep cwtl addr16 push push pusha mov push mov mov outsl lret mov xchg (bad) scas loop (bad) icebp bound pop mov pop inc cmp cmpsl adc mov pop shrb sub and push dec push xor pop mov imul addl push sbb mov lcall cs jbe xchg (bad) jp repnz mov loope xor lock add mov pop mov sub das shlb sbb mov lret jbe outsb xchg mov cmpsl es mov fsts repnz dec mov idivb and jle add imul rorl inc xchg mov clc xlat inc push xchg shll test mov cli sub lods imul xchg enter dec mov popa leave cmc shll sub and mov aaa sub std or into subb popa sbb popf jg cli and decl in pop dec cmp aas mov add push jp sub pop adc lret pop scas dec and fld les pop lods jecxz decb sar repnz push dec cmp and add mov cmp sbb xor daa fimul push cmc imul jl sbb test (bad) mov ljmp andb adc lcall daa jmp inc adc cmp test movsl mov fist ret push int and movsl push add rcrl sub adc sub leave lret xlat sbb cld out and and mov idivb ret iret test lods inc mov adcb leave or dec push (bad) jmp mov and sub mov xor repnz jae roll push (bad) push pop (bad) (bad) idivb lcall adc sub bound cmpsb pop insb cli jmp in or mov (bad) cmp stos pop pop negb dec and jo dec out push adc sarb out insb cmp lahf pop mov jo loope pop xchg popf das xor out lret and add cmp rcll add fnstsw stos ljmp arpl into (bad) or push (bad) loop fist mov cmp vmovapd xchg das repnz (bad) dec xlat mov bound sub add xor add mov xor out add leave pop jle daa fisub stc mov test jmp clc bound mov cmp rclb inc mov out jg cmp pop pop out cmp mov cmp mov mov mov iret pushf inc (bad) xor xchg pop inc imul int3 inc rclb sbb int insl sarb pshufw pop dec (bad) out sbb dec test mov and xchg xor stos sub mov dec stos ja test add sbb js mov xchg pop mov push or loop test and je sub and or ljmp xor sub fimul dec ret pop fsub ljmp lcall loopne into sub jmp out sub mov xchg fs test push cmc (bad) dec ljmp or hlt and dec mov rol mov fidivr lods push xchg mov or popf mov add divb out jo pop push sahf or bound fcomps push and shll cli and mov lret fnstsw xor idivb mov sbb fistp aas (bad) jnp out push adc mov aad dec sub jne,pn and inc sub jp add call out sub jb rcll and lods add sub and ret jge rcrb and xlat xor int3 daa push lret pop (bad) mov inc int3 sub sub push stos in stos jecxz xchg xchg xlat add add lods xor enter mov fidivr in xor stos je in add iret lret ret jne popa lods lock xchg xchg sahf bound mov into jge fistl cmp movsb int3 bound popf ja shrl (bad) nop pop ss fs jno cmp mov jecxz push jmp addr16 push lret push add pusha and je bound (bad) jge fdivrp xor jl (bad) sub xor popa and and pop xor or rcrl dec mov or insb gs mov mov (bad) lods sub outsb xor pusha jg mov xor call add mov mov (bad) flds jno or mov movsl rorl sub cmc xchg data16 add jnp cmpsl dec xchg push (bad) mov add xchg mov sbb sbb popa bound or pushf lahf imul pop das jge invlpg out dec mov mov or cmp sahf push cli adc test test mov and jb mov cmpsl pop add mov mov shrb sub xor out inc cmp add push lret xlat test sbb lret cmpsb fidivrl sbb addr16 mov mov xchg jle jmp add repz mov insb or in (bad) xchg stos int3 popf and sbb ret fsubr (bad) push xor push jl pop in scas sub cmpb push imulb pop xchg xchg lock mov test mov fcmove std adc nop std mov cmp mov imul pop mov pop icebp popa push xor (bad) call and sbbl mov popf mov loopne or sub out aaa mov stos jl add ret enter (bad) (bad) pop inc mov jmp xchg mov fidiv jle,pn cwtl push jmp fdivr adc push sub jmp dec adc jge daa das shl adc stos je xor mov in adc sahf aad adc push adc pop or divl (bad) cld jmp fwait pop in (bad) mov fistpll mov jns cmpsl icebp in repnz mov repz sub mov dec int3 int and sbb and jmp mov sbb jp mov jge (bad) std ljmp jnp decl fidivl fmull notl (bad) and fstl je mov movsb daa (bad) cmp imul add inc sub daa mov and dec arpl dec mov cmp or and (bad) mov shrb ljmp or out (bad) mov dec repnz or inc dec xor call iret xchg dec shlb fbstp ss push dec out jbe leave dec loop ds sub rcll daa sub jge stc mov lods inc sub sub xor loop inc cltd mov lods lret sub mov fnop mov mov pop lds imul jge pop pop cwtl lret daa jge ja gs dec sbb push fldl pop psubb xchg rcll xchg stos bound std in adc cli mov pusha add hlt imul push ret loopne out dec sbb ret rcrl sahf mull mov push aad sbb xor cli jmp xchg jo sbbb lret mov jmp adc mov test sub test mov adc sub xor bound xor jne xor sbb imul sub lahf (bad) mov repnz xor push xor sarl out jg out inc sbb mov sub xchg out (bad) cld inc mov pop outsb neg pop xchg lahf pop movsb push add scas setno dec lret pop inc loop jle scas jbe leave icebp jne or fist pop fidivr mov adc push push mov jnp (bad) mov and jb ljmp leave lahf jae and xchg insb cmp aad stos adc iret leave iret cmc inc inc and aad pop jne pop push or lret cmp ljmp jnp cmp xor jmp adc xor push add dec xchg sarb pusha xor sub popf std push pop hlt loop pusha adc mov add (bad) mov jmp movsl (bad) ljmp icebp fsubs mov lret or outsl lods pop cs add sub mov add pop out mov dec je rcl sbb lcall dec or and das push jns lods bound cmpsb mov (bad) pop das pop mov (bad) xchg xlat adc lahf pop push leave ja mov enter sub lods lcall cli jmp test mov and cwtl cli and sub out cmp jo popf fist fidiv lret repz xchg leave sbb and push in idiv mov push fcmovne out push adc imul or ret stos enter jle jmp pop stc (bad) mov sub mov dec loopne notl (bad) push call xor cmp sub jo and push xlat into xlat stos lds icebp and push mov (bad) std mov loop xchg lds out sbb std jae cmp call gs movsl inc xchg mov out xchg sub stc outsb mov in scas call in lcall and and cwtl call jb dec jle (bad) add (bad) mov repnz cmp mov mov mov cld (bad) (bad) adc data16 stos jne stos lock sbbb or ret (bad) fsubp dec mov inc inc fistpll lret add hlt rcl loopne mov testb pop sub mov movsb cld xor paddusw add add dec nop and (bad) data16 inc xchg jle loop xlat int3 and mov mov das lcall (bad) pop iret stc sub sub inc jne mov fsubr arpl loopne movsl test (bad) cmp pop add ds adc repz or cmp aam (bad) aaa jp push imul cli lods sbb es jnp or neg inc jecxz aas rorb jb out icebp imul pop sub fbld cs sub das mov lods out dec call mov xchg or and xchg sbb cmp jmp dec js cmp push push (bad) (bad) sbb cmp add in cmp hlt jecxz cmp loop iret xchg pop scas pop stos lods push push and sti xor stc negb out cmp gs mov (bad) ds dec bound xchg mov mov sub leave rol (bad) loop sahf iret pop mov jns xchg scas mov popf rcrl stos sub loop dec cli sub cs fstl mov mov lret mov fmuls icebp cmpsb xchg dec stc jmp outsb dec xchg push push sub lds or stc aad mov push fmuls insl add mov xchg jne (bad) jb add xor push sub xor fstl mov sub xchg (bad) (bad) out and mov inc cmpb jnp add inc flds mov sbb adc mov jns ficompl mov decl (bad) pop lcall adc add push dec jecxz shrl fmulp pop lock and dec ljmp scas xor cltd clc popa pushf jnp mov or inc cmc mov or es and ja out dec (bad) fadds pop mov add jae movsl ffreep cltd lods je cmp push daa lret jb dec add pop mov (bad) jno sub mov push mov loopne (bad) push rcrb nop adc out cmpsl pop je cld enter ficoml push test icebp mov inc sbb mov ds sub ret xchg notl push mov idiv sub and cli fadd out int3 mov xchg idiv push inc sub popw xchg lock mov leave jecxz cld mov loop adc icebp scas cwtl lds mov xchg adcb imul int3 inc (bad) dec xor push in inc and xchg dec lds and and es sbb repz in cmpsl inc movsl pushf sub out sarl mov jne adc decl ljmp adc (bad) xlat pop push jge ficom bound popf xchg ret out mov subl pusha jg xchg push das push push pop scas ret cmpsl pop stc hlt jmp stos adc sub sub dec loope or (bad) push out xchg sub mov sub test decl nop or out mov das pop repz jae inc loope xchg fcmovne xchg or mov xchg mov adcl xchg flds push mov iret repz xchg aaa cltd imul daa divl lahf jbe fs and add mov mov jns clc (bad) mov mov icebp mov rol and stos sub pop scas push jecxz jmp ret jne mov (bad) out bound js leave pop ljmp and ret push scas push xor sub push jne mov sub add (bad) mov and andl mov jecxz pop lret (bad) out xor push sub mov dec xor movsb stos fdiv xor stc into test pop stos sub out out cmpsl daa add adc pop iret out dec (bad) push and jnp add aam cmp (bad) lahf push push jg outsb lret cltd ss cld addr16 (bad) xchg push out add sbb xor jno dec push loope or fnstcw (bad) (bad) test hlt xchg inc ljmp or jne pop popf roll mov imul (bad) pop loopne mov push dec sub aas pop mov ja subl pop mov jo repnz jmp (bad) sbb push das xchg pop dec jmp and sub xchg jg cwtl divl pop ret fsts xchg imul mov (bad) mov dec ret mov mov xlat pop out cmc mov push push cmp dec inc (bad) daa or iret imul sub mov out and mov sub adc int ds xor mov and adc aam les lahf cmpsl vpxor (bad) dec out int jg or mov xchg imul out xchg jmp lret outsb mov sub lahf out out icebp popf ja mov outsb ficom pop repnz ljmp out and bound repz sbb and mov rolb loope xor mov dec mov cmp js or and mov add cli add fimul repnz (bad) push fcmovu fsts mov sub call (bad) test lods mov daa push (bad) in sub mov push insb mov test inc (bad) jns lret ret ja inc das push cli pushf ljmp push test push test mov sub jmp dec mov pop hlt mov movsb adc mov sbb daa mov mov ret sbb sub lahf or inc lods or cmp fidivr pop jmp xchg rcll jbe push sti sbb adc mov xchg shl or sub gs lock push bound sbb in into insb dec enter movb mov outsb (bad) in (bad) jno cmpsl pop adc dec or into add icebp xlat mov mov pop in jns sbb xorl fdivrl mov scas push mov andb fcoml or or mov stos mov clc lahf (bad) dec dec mov mov repz cltd pop shrb fs shlb ret repz out cwtl or pop or pop popf (bad) cmpsl loop adc cwtl into lahf fnstcw ds pop xor push push or push (bad) lahf xor jo das and (bad) dec dec or (bad) xlat xchg and (bad) (bad) mov dec xor sub pop add scas xor add ljmp das xchg adc lret stos nop leave shrl outsl mov and jle or inc mov jnp xchg mov dec (bad) fist push fistp dec push lods pop fdivrp xor mov mov mov or enter or inc jmp aas into cld pop arpl dec pop mulb jne (bad) or movsb jg dec test and mov or or fcoml int3 sbbl lahf adc ljmp dec orb hlt jl mov insb inc mov and fs lret cmp jbe rcr and popf icebp stos bound pop stc nop mov mov lret mov out sar jmp push push sub cmp outsl (bad) icebp push cmpsl sub mov cmp repz out out sub and pop add inc xchg pushw (bad) dec cs adc or pop in or sub ret gs xchg mov mov add dec scas xor lods popf leave int3 lret daa xor pop (bad) xchg pop cmp test add xchg out jo add cmp sbb gs sub xor sub ljmp shr jo add sub fs sbb inc into (bad) mov leave into jge push dec out mov pop push insl leave push cmp push mov (bad) mov jmp add call test stos sub pop mov sbb lahf dec and xlat out mov ret lret in cli fbstp (bad) int3 xchg and push sub jmp stc out loope xor stos mov shrl adc mov into mov jo add shl dec dec jp aaa mov in cmpsl (bad) mov repnz dec call xchg or (bad) (bad) sub stc mov mov mov dec clc out mov sarb enter pop xchg mov or inc mov sbb fildl std rcl fxch cmp (bad) jmp stc or inc jecxz and insb xchg xchg push in pop in daa (bad) pop lret xlat lcall imul fnstcw into (bad) in xchg cmp repnz dec dec or mov notb (bad) clc int3 into mov pusha cli out mov dec es mov and or (bad) jo add push sti push cmpsb pop movsl lds pop jecxz cmp and add addr16 and (bad) sbb inc adc (bad) enter add and adc xchg sbb or push pop les sti mov inc sub add sbb movsl cmpsb lods jne cltd sar inc mov inc adc jmp lcall das and sbb incl in cmp xchg mov xchg add xchg and or sub adc mov fwait adc pop bound das adc mov mov inc outsl sub mov pop bound rep cmpsl repz pop int3 sbb pop test sub in sub or mov (bad) or and xchg mov (bad) mov cmpsb dec sub or cs sub dec ret incb insl ret iret mov ds lods (bad) sub leave add ljmp adc popf adc cmpsb sub (bad) imull jns dec inc xor (bad) sub and out out mov pop add xchg jnp pop nop xor lret negl lret pop or pop xor and jg,pt nop jg in jno test xchg std push out or mov jge xor ret adc and mov hlt inc inc hlt lret xchg dec sub call cld dec mov or and aaa das jno inc stos lret sbb xchg test jge sar jmp sti cwtl mov lret xor ja test enter cs insl popa inc outsb jecxz nop adc icebp add or cmpsl into incb lret shrl movsl fwait out dec out cltd xchg inc test cli ret lahf inc pop add cmp repz cmpsb decb adc mov cmp push adc bound sub pushl leave jecxz scas je stos and mov add lods ds test fisubrl jg mov sbb gs fsubrp in mov rcll add pop or xchg pop cmp fsubr xchg incb repnz repz mov stos popa xlat mov fdivrl sub pop mov mov push push clc repnz mov loop cltd mov imul mov sub cli lds adc adc pop mov lret data16 inc mov mov or popf push pop pop add mov lret inc add (bad) and inc jle in and cmpsl je ja mov sub xor shrb dec inc adc jecxz lret ret jl sub dec push clc mov pop aaa xlat rcl add xchg mov inc dec mov in inc pop (bad) addr16 inc push or stos call notb sub dec movsb insl sub adc jecxz push inc cmp sub xor xchg pop (bad) stos mov notl sub xchg mov pop in imul pop sub add sub pop add inc mov mov sub aam pop pop (bad) mov pushf mov cmp into inc push push scas mov cmp mov dec sub inc (bad) lods xor aad test cmpsl leave pop sub pushl fidivr dec lods mov in popa movsb cli jne test leave out xlat jae ret jge sbb push adc and inc lds divb movl cmp xor mov inc movsb arpl stos insl xchg jp idiv pop js xlat sti stos lret or in cmp pop xor inc xchg sbb xchg or jg or outsb cs cs scas ja pop or sbb mov add or lsl or push cli ljmp in dec sub movsb (bad) pop push jae in cmp mov mov jg pop (bad) pushf jns lahf jle push pop test je stos jecxz adc pop (bad) and enter repnz mov rorl adc mov data16 mov dec test popf mov xlat out adc sub stc ret or mov cmpsl xor stc mov aam pop into outsb sub call ljmp dec xchg in popa shrb sub pop cmp scas lret aad push fdivs sbb xor push mov cmp sub and and (bad) pop dec push push mov mov scas pop adc (bad) mov pop lods mov cmpsb dec sbb fiadd sbb push lret sub (bad) fs push mov xchg sbb es mov xchg repnz cs push sub mov leave push or (bad) sahf sub adc call xchg sbbl cmc xchg inc xchg loop push lods cli inc popf adc mov popa imul or jg push dec scas gs repz sub enter fcomi test jg dec xchg inc arpl popa cltd frstor ret push push add in outsb cmpsb scas pop ret or sub in and notl icebp and pop ljmp inc (bad) pop outsl ljmp loop test pushf xlat adc cs pop clc cwtl jle ljmp ja imul loopne outsb sub cli loop incl adc mov mov out xchg mov out jne in cmc cmp and dec or scas test cmpsb mov lea cmp xor sub jmp cld inc (bad) dec add pop sarb xchg mov jmp pop jmp je dec add stos push mov mov aam push ja mov fisttpll mov mov scas cltd shll jbe xor in pop (bad) and or inc sbb cltd mov mov push jns xchg lea sub push das lret repz fstpl push sarl adc clc stos mov pop (bad) (bad) adc push lret icebp call push push dec jle sub bound sbb (bad) lcall out lret (bad) sub push into fsubs xchg xor call pop inc xor stc mov ljmp mov sub rclb dec sub out mov mov xor xchg jle push les int3 and imul (bad) fld1 notb into dec jle fisubr test sub mull aad (bad) and aaa fimull add leave jmp or and sub (bad) pop jle scas iret jns xchg (bad) fs call lods add and or cs jbe pop ss loopne sub imul add mov (bad) mov mov or mov add (bad) scas ret jno leave fstpl and xlat mov fstps (bad) hlt mov adc lds sahf add out pushf dec adc out push mov sub fisubl jecxz add cld int mov push inc outsl (bad) bnd push dec out xchg test pop jge repnz mov (bad) shlb xchg pop and mov outsl lea sti and scas test in cmp pop fdivs rclb test (bad) mov clc sub push and xor sbbl pop mov dec add pop mov clc jl sub jo icebp jo pop xor scas push sub xor test pusha jne clc add das cmp scas xchg stos dec sub jg and mov push (bad) dec pop fsubl xchg nopl push daa out jmp (bad) into ret mov idivl iret xor cs shrb xlat aam iret rcrb rcrl aad push cld mov shll lret mov sub mov mov pop fwait movsb in sbb sub dec mov pop out loop mov pop lock imul pushf int3 stc xchg divl cmp outsb call push push scas call sub xor cli aad gs rol mov mov xchg ret dec out xor jmp mov fprem1 (bad) cmpsl pop daa and in fadd xor or and push push test ret lret loopne loope rclb or xchg push pop jae dec dec inc adc cmp fstl loop,pn rcll out popf or sub push push xor xor lret test mov fisubrl fnstsw jle (bad) (bad) mov ljmp fdivrs rcll fld jbe pop pop xorl std sti inc lods es stos iret or mov add aad mov sub jno cmc sarl cwtl xor mov movsl in cld adc into dec add or dec sti lea decl pop (bad) int3 jae imul jnp pop add icebp inc jnp aaa add enter sbb jecxz sahf and and sahf xchg leave lea push (bad) das sti sub popa push mov (bad) scas push xor leave ret std adc xchg cmp or lret pusha dec xor mov test jnp adc aam mov add push icebp mov imul mov push and adc mov jle (bad) (bad) lcall jb push adc mov inc or and pushf xchg test adc orb mull xlat inc push mov test push inc sub sub xchg outsb fist adc pop ret mov rcr cmp into cmp lret cmp xor push xor ds and and in push repz xchg pusha lret test stos sub or fbstp and fiadd clc jne cmp mov insb or movsb cli pop int xor xlat xchg jno clc ja stos push or sub pop notl adc scas out cmp pop sbb pop adc dec add loope inc lds mov insl xor sub mov stc int or add add (bad) mov loopne sysret cmp dec out daa fnstcw into pop clc xchg popf loopne xor mov xchg repz sub scas xor repnz popf jmp or fadds (bad) bound or (bad) icebp push sub addr16 cmpb dec pop hlt jle lahf xchg mov call mov out jmp aam and pop popf daa (bad) daa ss stos (bad) int add pop adc sub lods adc adc dec mov aad rolb xlat loop aad inc sbb sub or mov ljmp sub adc repz js icebp mov push pop adc stos xor or cmp sti mov sbb push push jge sub mov faddl mov xor add sub jg cmp ljmp xchg lock pop repz mov in pop jno sub dec cld jae lods aas test pop sub loopne lcall jg mov adcb inc mov mov or and outsb xor out sti jb or mov fdiv pushf mov sbbl and lods push mov jp (bad) xor mov push sar or cmpsb add and out in cwtl outsb push and cmp push repz fstps call pop and scas jecxz or mov push fldenv mov sub pushf sub push or test int3 mov mov daa out adc and jmp pop push ret test shrb add in stos sub test adc sub mov in movsl dec and in or mov pop jno imul xchg ret sbb lahf pop adc jne mov stos lret rorl outsl sub sub les cmp add or sbb sub jmp dec xchg sub dec sti sub icebp out xchg (bad) inc inc into subb mov out fimull mov cmp pop jmp dec mov cltd xor cmp add ffree mov jle cmp mov loop push inc test mov outsl movsb stos jmp fcomps and cmp sub and stos mov dec jmp ja cmp jne cmp movsb rcll push cld out xchg in cmpsb sbb cmp and ret xor rol push xchg adc add inc test jmp ja imul jne bound fist out pop mov xchg jge add pushl mov inc mov mov sub xor fistpl fld insb jecxz imul xchg mov jecxz or mov shl cmp sbb fisub push cmpsl data16 mov jge pop (bad) popa push aaa (bad) das lret sub xchg popf mov rorl in jp lret cltd lods addr16 or (bad) notl out xchg fisubrl add pop daa push aad jmp ja adc cli scas cmpsl xor mov outsb inc mov inc mov fs add arpl jbe rcr xchg add xchg xchg mov gs push and xor push rolb les ret cltd jge gs das ret inc sub pop leave xchg xor cmp in mov je push icebp mov call mov add push or pushf testb cwtl pop fs xor lds (bad) and add sub icebp inc pop test pop xchg ljmp jnp nop jbe dec fdivs (bad) adc dec loop sub or (bad) dec push loop lret into adc cwtl pop popf int3 inc xchg add push cmp scas xor push adc (bad) mov out out pushf add es sub and popf loope or sbbb call daa loope or mov int3 push call repnz sub sub lea mov lds leave xchg aad (bad) ja push pop add xor jge dec stos sti cmc xchg mov sub in call hlt daa iret fist mov or mov clc cwtl jno or mov imull xchg xchg dec mov out stos jbe rorb jnp cmp std xor jmp ficom (bad) add mov add mov das je jmp pop (bad) xor adc dec out mov and fimull clc nop decl decb fwait xlat jo inc lret icebp and loope cmc in daa cld or or jg push dec mov jae or mov stc cwtl fs push js in clc into mov mov pop mov fldln2 dec out pop add inc cmp push movsl mov jae pushl cmp test jg lret and adc mov mov xor and and aad sbb orl cmp inc adc dec lock inc imul out mov jg and dec jmp xchg (bad) dec out mov pop test mov sar xchg fdivrl into das sub xor inc fwait dec lret sub add and push out or lods add cli add mov xor inc rep sbb call rcl fisubrl ret mov dec adc movsl mov pop loopne rclb add shll or ljmp pushf mov adc push cmp mov (bad) loope add jmp bound mull and mov xlat pop out out das pop fcomps adc fs cmpsb rclb imul dec rcl add in in sub and hlt mov jecxz jnp cmpb sub movb movsl subl add cmp out (bad) gs xor iret outsl sahf jge sub out aas mov fdiv mov ret iret dec ficomp stos sub lret xor mov pop stc inc xchg stos cmpsb sbb mov mov jmp add or xchg (bad) ja imul lret sbb lret (bad) mov mov pusha jmp mov xchg mov dec in mov pop pop inc loopne into in adc mov jmp xchg xor mov (bad) mov sub mov xor stos repz leave lret jle fdivrs lret es mov fdivs push fistpl cmp into mov sub mov dec sub aaa mov cmc (bad) in dec ret test out cmp add mov xor pop lds push out xchg pop mov pop jmp inc jg sub (bad) fisttp je mov pop push lret adc jmp jecxz in inc add adc (bad) (bad) pop or gs je outsb mov mov lods bound jmp jb xor or (bad) sub jmp mov into sbb dec test jnp fucomi test mov adc jge lods scas lcall or add and flds fprem1 outsb sbb mov sub in adc jnp ret inc outsl mov (bad) idivb ja dec and sahf bound test imul sti loop in daa add pop inc adc mov daa mov xor adc cmpsl dec (bad) xor ret sbb ffreep adc fisubr in enter add cmp in cmc pop test dec mov hlt mov jmp or repnz (bad) xlat pop insl movsb mov call les cmp out xchg lret scas cmpsb mov test clc es xor movsb (bad) ljmp and ret sbbl cmp adc or dec mov icebp and fiaddl jmp push repnz and push add and or loop lcall lock mov sub cmpsb dec mov enter or adc lcall add data16 sub cmp mov les dec leave enter ljmp cmp shr stos (bad) mov rcrb rcr adc loope cmp pop sub std shll inc or test adc stc sub leave push out inc ret add adc mov inc aas (bad) imul mov jp cmp sub aad addr16 sbb push cmp and xchg repnz xor je outsl mov cmc pushf testl pop push lahf movsl sti cwtl stc push mov mov pop add in dec mov es or jne fstps mov push fs decl mov mov mov xor and cmpsb push in inc sub mov ret xchg mov fadds les jbe jp das mov stos popa mov sti jbe sub and leave mov xor jle adc mov adc add test (bad) test (bad) pop add dec test repz xchg push sti add mov fidiv scas hlt icebp iret div sub std xchg stos mov out cwtl pusha out dec (bad) mov jbe jle mov mov adc inc scas xor xlat dec mov cli jne xor mov pop int3 inc xor xor cmc pop insl jo jmp inc cmp fucomip xor add movsb inc daa sub pop xor sub mov xchg adc or ljmp add push ljmp out jno test mov fimul mov sarb adc std daa out push mov (bad) sarl ds pop pushf pusha add pop fisttpl dec ja fadds lock mov lods fs xor ret mov daa (bad) stos gs fadd mov bound dec or (bad) cld push sub sub mov fmuls popf out jge push (bad) push (bad) jg pusha sub push notl and add stc pop pop push ds and leave movsb test outsb add out adc mov pop ret (bad) push cmp loope sub pop popf insl int3 push xchg negl pop scas pusha das out sub xchg mov xchg gs daa iret pop inc dec sub adc enter fstps scas or jge lahf das fnsave fist rorl out mov popf gs fildl mov sub sub adc fildl adc subb aas xor call pushf std mov add popf sub je call (bad) cmpsb pop inc test and jno icebp jmp ret mov mov mov pop add sti pusha ja sub movsb sub jmp push xchg add jecxz divl and lret das scas sub dec scas inc gs das out pop imul aaa mov push mov jecxz cmp sub sbb sub ret push gs adc scas lret mov xor repnz frstor push in and stc and sub cmpsl js mov push scas int3 pusha xor js popf icebp mov loop push cmpsb mov xchg and or lahf stc stc lods hlt adc xor cmc mov (bad) or pop idivb xor lcall xchg loop mov xor bnd add lods test loope sbb mov and ficom das and add dec mov test pop sub push lds clc push std xchg dec add divps lock loop sbb mov mov dec mov pop ljmp insb rorl sub xor pop repnz xchg push sub mov js mov (bad) and add sti xchg repnz (bad) ss pop dec (bad) out and nop mov ds xor mov dec ret aad mov rcll push push sbb adcb and cs xlat aas jmp dec jo add cmp jmp jecxz cs mov add and fsubrs sub fdiv add lock push ret ds insb xor pop fnstenv int3 mov mov mov cmp repnz cli imulb (bad) sarl std in subb xchg pop mov (bad) pop icebp jge sti push mov mov pop loopne out fstpt add jmp lock mov mov xchg lock jecxz add xlat ja scas pop clc imul gs lds inc xchg imul sub and mov call sub ja bound imul push adc (bad) xchg push xchg mov je push dec fbld lret xchg pop jl push pop xor mov ret in mov dec mov popf push ret sbb jg mov std stc (bad) mov dec mov pop leave imul and xchg adc xchg ret imul and xchg test mov mov call sub daa xor lock outsl test andl and jecxz sub mov and call add loope mov cmp lds push call fstpt loope or mov sbb pop (bad) popf jns cwtl stc into dec add insb dec pop popf xlat pop jge dec scas ljmp (bad) aaa cmp xchg icebp rclb loope ret (bad) and mov mov gs fldenv and sbb loope ret sub xchg jg rorb mov insb psrlw dec xchg and pop out push adc mov pop xchg sub add push push pop push mov jns push sbb cmpsl jnp test add std add pop cwtl pop xchg inc pop push push mov cmp pop jne add sub add mov add adc out scas mov push push aaa adc push scas mov jbe ret xchg pop push int cwtl fstpl neg sbb out add cmc xor xor pop ljmp xor cmp inc xorb add push push mov push sub sbb push mov vpcmpeqd insl rcl fs xchg add xchg (bad) aad loope inc (bad) mov (bad) into cmp ja or cltd add inc push subb rolb (bad) insl xor mov into pop dec divl nop fs cmp subb (bad) and xor repnz std push in or out test popf mov fucomip push add shl cwtl cmpsb or into pop in cmp (bad) imul jae (bad) and sub sti jnp jl and xor xchg (bad) push and mov shr push jle pop lods and adc shrl (bad) das push mov mov addl push mov push ljmp addb aaa imulb add fsubrs mov cvtdq2ps cwtl mov lea xchg cmp (bad) jmp jp mov sub jl mov jne push iret aas loop shr sub mov push sbb sub bound xor shr lods push fsubs fdivs sbb fs scas lcall mov mov mov add sti scas mov mov int pop mov xorl mov jge and xor in sbb or lahf push pop inc cmp xor dec add or out cvtps2pd daa mov sbb outsb jle leave and rorb lock scas das jns mov add or jnp mov pop dec loop lret vpavgb popf inc das mov adc or sbb (bad) push loopne xchg scas pop mov lret jne inc inc xor enter add adc sub sub push dec int3 mov rcll in out inc add fsts mov dec mov pop int3 cwtl and dec sbbb pop push adc xchg push xchg inc dec and jecxz sub lea cltd mov push push and (bad) xchg xor jne fisttpl out inc out push mov (bad) jmp push pop mov gs mov in or mov mov inc lods lcall lret mov xor dec mov pop and adc ljmp imul mov push lret sub mov lods bound pop lds cmpsl jg mov push mov shll dec and pop xor inc lea rcrb adc sbb cmp or mov sub leave sahf daa jno xchg jmp pop (bad) mov lret ret jb adc sub loope dec or scas and scas jmp xor push push xor dec shrb call shrb inc adc add sub repz add xor pop sbb jnp scas lret mov daa jecxz mov push lret mov dec out repnz mov lret clc fs stos sub mov fsubs fcoml mov ret mov jbe fcomi mov mov mov pop pop out add xor enter cmp in or clc ljmp and pop mov sub leave sub sub movsb stc das gs and add xor pop or or jae sub add icebp adc fistpll data16 jmp loopne shll cwtl jnp dec and or sub cld mov push pop ret mov xor cltd mov sub outsl cmp gs pop xor in add call adc mov sbb (bad) mov hlt push push subl jne insb adc or aas push bound mov icebp das mov and sub outsl pop sbb or test push push inc push cltd scas mov cli fxch outsl and mov (bad) fsts icebp lcall sub lds ljmp adc mov xchg bound int jle mov bnd xchg and and lret push cmp int popf fdivs push sbb scas cmp icebp adc push push mov add mov pushl pushl sbb dec int3 or pop adc sti xor mov fsubs aaa daa mull imul inc xor pop cmp adc out and stc xchg pop sti cmpsl jne orl and or nop in and mov mov xor pop cmpsl call sub enter push inc loop add repz pop adc jecxz (bad) jge stc scas add xlat sub dec stos popf hlt or mov mov sub gs mov pop pop (bad) mov mov or jbe jmp jo,pt add mov lods sub sarb or jne sahf ja xchg sti hlt in mov cmp mov xchg adc or mov and scas lret xor sub fisttpll sub fstl mov test cmp fcmovnb xor add cmp xor stos repz dec call cwtl inc and scas dec pop das or std dec xor mov mov sti push fist jle and daa cmp pop rcrb scas and adc push sti cmp stc cmp stc mov adc mov dec mov mov adc jo push out pop adc int3 scas (bad) mov or push jl je (bad) mov push daa inc nop les xor pushf jge mov sub mov repz jno mov nop xchg popf in dec pop fldcw scas sub movsl int3 std negb faddl adc or stos xor cmpsl ja fstl pop pushf into pop push mulb call es lds mov push jae repnz jne mov arpl lock mov dec notl pop test stos mov inc inc cwtl in xchg jae movsl pop push dec divl dec xor push inc mov xchg leave mov xchg dec out fsqrt (bad) sub and mov and clc and sarl xor xor int loope jp jge aam sub stc inc inc and mov push add imul mov std mov mov pop mov sub (bad) insl sub jne pop adc and sarb popa outsb loop aas sub ds fs rorl inc jmp and loop add lret xor fstp dec pop daa cli sub negb mov adc cmp xor scas icebp push mov mov cmp xor leave lret imul pop mov daa add scas jle push mov mov pop pop sub popf jl push jle pusha add mov pop or stc int push (bad) push mov mov lret sub sub jle jnp outsb sub lcall jb xchg bound pop push insb (bad) repnz jno outsl leave (bad) xchg das fsubrs mov sbb and cwtl pop shrb pushf push adc dec mov inc ljmp lods jp mov jmp movsl imul out cmc push icebp (bad) dec inc jne out pusha movsb mov mov (bad) mov inc xchg test loope mov lcall push dec mov pop push mov push lret mov les add gs stos cmp fs sbb mov js jmp call aas cmp add mov mov into sub nop lods xchg cld lret and cltd (bad) inc ds jns mov into mov fimul xchg imulb jl and movl arpl pop mov cltd ljmp cmc mov cmpsb aas dec test lds fdivrp out xor mov cmc and fsub dec out xor or and push push popa and cmp outsl add int divb iret lcall bound in call sub and flds outsl aaa jns fucomp sub mov mov xchg stos loop xchg daa hlt jmp adc mov lret loope jp int3 add adc fnstcw ds leave sbb xlat mov cmp rcr and mov mov ja outsl jmp mov ret iretw and cld xor lret addr16 xchg call ret mov test lret shlb out jmp cmpsb mov repz pop push (bad) adc ljmp xchg mov sarl out xor in sbb dec ds and dec mov sub mov pop fsubrs cmp mov lret das fdivs (bad) cmp imul ja fs lret (bad) adc cmp and xor loopne imul xchg movsb jae mov or pusha jne jb adc push aas cmp pop pop (bad) pop add es mov insl aas sti mov push (bad) adc stos mov dec sbb leave negl inc (bad) aaa cmc out push add fs daa inc shrl and pusha pop pop pushf pop adc ret sub pushl lds dec cmp ss imul xchg xchg pop mov out lret les dec mov stc outsl mov push dec add lret add cmc (bad) adc negb sub mov sub and push inc pop jnp xor ljmp mov sbb push xchg adc popf jbe scas ficomp or xchg pop mov roll aaa sub and dec cmp lds pop test mov pop jecxz inc test xchg push jo ret (bad) push or imul jae cld ss (bad) and mov data16 xchg arpl pop jnp movsl ror inc or adc ljmp ret or add mov mov add push sub cmp repz mov push mov mov push adc dec aaa stos fwait sub adc repnz fnstcw das stc cwtl mov lds xchg mov iret xor dec mov cmp dec adc dec or or mov int3 imulb xchg ljmp xor xor sub dec out lret out push cmpsb pop (bad) sub ljmp das mov imulb imul push repnz icebp push dec jne push aas xor sti push jne cmp pop push sub test lret icebp pop xor inc and mov fadds push jnp loopne xchg jno test pop sub jne mov mov sub shrl mov aad enter stos add mov jns inc into sti lods ret in jno popf sbb (bad) aas das and (bad) stos loopne mov mov jne xor out test pop sub fmull xor (bad) ss outsl out daa rcrb push xlat je js mov incb jmp or popf dec (bad) idivb add sub xor adc mov lret dec out sub xor mov push mov push loop jmp int3 rolb inc test pop dec stos fstl int icebp ret and mov pop iret insl out lods sub add sub mulb lahf test dec not mov jge cs cmp jle leave cmc (bad) cmp mov or lret sbb mov (bad) mov push mov sbb xor jns adc add sub sub cmp out (bad) mov xor ret push (bad) xor add cmpsb fisubl jmp pop out fs int3 jne hlt (bad) xchg leave adc push leave cmpsl xchg inc xor push adc mov sub and sub std add repz pop push imul bound outsl mov movsl scas or lods add ret jno add (bad) sub mov imul icebp (bad) jg sbb mov in stos pop (bad) dec mov aam push fcomps mov out mov or and leave call mov ret repz inc or mov add jp adc fildll test rorb ret aad ficom rcrb mov (bad) jb mov ds pop shr mov rcrb and and add jno test jbe mov fidivrl std icebp add add xor cltd testb pop push (bad) add jge outsb jns xor arpl (bad) loop and sub or dec lahf lds or xchg fild (bad) pop mov add call scas lret scas cwtl jmp leave cld dec (bad) xor test sti mov xlat mov icebp and xor or inc or (bad) popa pop icebp and xor dec sub rclb in cmp nop and xchg imul mov fisttpll rcrl (bad) jmp add ljmp xor lock mov and push loopne push mov and inc jae xchg jecxz cmp pop int3 std rcrb stos cmp push mov xor push jecxz inc add out pop mov pop aaa loop pop push pop (bad) push cmc sbb lock rcll mov imulb es push inc or xor pop push repnz xchg lds into je mov arpl enter test xor push fisttpll dec fidivrl fchs jnp addr16 mov jns sub or xor add dec mov ret push cld dec sub out inc pop and adc mov icebp out xchg repz adc or xor push inc addl js rorb pop adc rcrb andb jb pop lahf lds (bad) outsb jl dec ja xchg rolb jne fistpl sub aam addr16 add into loopne inc les negb scas xlat mov mov arpl or jmp lret sti mov xchg cmp (bad) repz je inc lahf sbb negl jp inc test test sub mov xor xchg fbstp sub cwtl std push lret adc mov mov and add xor or xchg mov pop jp rorb xor mov repnz in adc out bound lock ja iret mov push inc shr mov jbe mov push scas in ja sub scas icebp fisubl or rol and out iret mov xchg daa jle les mov call push xor mov fmuls out sbb xor xchg inc push aas add ret cmp aam repnz (bad) pusha out icebp or jo xchg xchg and imull stc mov into cwtl lahf xor dec cs jmp mov imul scas aad inc or xor sub inc cmpsb test mov push (bad) pop daa js adc adc dec iret test cmpsb popf mov icebp jbe dec mov mov rcll or not jns leave repz or sub iret or sub aam imul (bad) hlt mov sub leave ja in pop mov repnz xlat repz pop (bad) into add xchg insl sbb movsl (bad) pop xchg inc mov int js dec mov cmp (bad) fldt out xchg dec xchg icebp mov xlat dec sbb cmc inc neg ljmp mov scas adc ljmp xchg dec out xor add jl iret (bad) sti pop ret dec sbb sbb leave je loop add sbb adc fldenv clc sub cmpsb scas cmp int3 mov arpl cli repnz aad sub push insb fnstenv into (bad) adc (bad) xor out sub or nop xchg jecxz mov mov out push adc cli mov scas adc pop mov pop addr16 out pushl sahf (bad) imul psubusb mov icebp lea pop sub add xor fucom mov cmp xor std add ret fs jmp and or push push push lods mov dec stos ret mov cmp push bound xor push jbe push pop lret dec (bad) mov rcll inc push lret cmp popf fist fstpl add sub sub add loope in add inc out mov push xchg jbe pop sbb or jnp shrl stos sub pop mov jbe or lds inc into and mov (bad) pop mov (bad) loopne inc xchg int cli and cmp div (bad) movsl pushl jge ds sub enter arpl fsts dec mov and clc lret fisubr out jge xor popf lock repnz enter add dec and int xor xorl stc dec add dec mov mov mov pop mov leave mov pop push mov loop add xchg or pop cmp (bad) xor mov sub loope xor inc (bad) les sub mov xchg jg push add fidivr and fist pop notl outsb loop xor jne inc jmp xchg and rclb das cmp test mov add xchg and mov xchg scas xor push sbb loopne and int icebp mull imul jle pop test pop xor (bad) gs mov inc jns dec ret ds jb mov js dec mov mov mov mov xchg or testb (bad) lock ljmp push in das mov (bad) xor xchg stc and mov lahf sub (bad) out fist ljmp movsl pop cmp jo nop nop add mov in xor hlt mov mov fisub cltd icebp leave iret cs sub decb xchg mov jno out repnz idivl mov imul mov std mov inc pop jmp sub ret xchg and adc in ljmp inc push scas add fisubl xchg jo fistpll mov iret jno fbld cmpb dec fs clc cmpsl mov fisttpll jns mov push sbb hlt and cmp push push xor call notl enter adc lcall mov loopne sub xchg push push out push (bad) push dec in and mov pop xchg (bad) mov in mov aaa jns dec jnp,pn orl insl jle repnz add pop pop or ret add jg mov stos frstor sahf lds cmp and cltd aam (bad) stos idivl sarl push or imul nop mov adc (bad) mov (bad) cmc xchg jp xlat or (bad) mov lret cmpsl jnp mov push aaa mov sub push pushf add inc add sbb dec or fnop addl dec stos xor push adc push or pop das mov ret mov pop or mov jmp sbb jnp or loope in lret add pop add pop outsb (bad) in jmp push xchg test incb into pop cmp and jbe (bad) repnz int3 inc xor xor (bad) imul ret test sbb lods movsb mov push cli enter fildll shlb adc fcoms sub mov aas xor mov and and mov inc not mov ret inc daa mov xor ds aas popf push add (bad) push pop jbe test not pop inc ror mov nop xor xor loopne or clc pop pushf sub push test aas stos daa repnz cmp push add sub inc cmc fadds cmpsl push push cltd aaa push jg and cmpsb adc jp loop mov out push add and pop add sub jno das add add mov outsl sub jg clc adc test inc adc mov sub decl push pusha mov add xor outsl pop push inc inc push hlt pushf mov dec pop xor mov sbb mov mov pop lret add mov jns in sub pop xor lahf jmp roll std scas sbb aad cld mov xlat ffreep test or add xor orb jg in cmp in clc mov cmp arpl add push (bad) jge fistl sbb pop xor fisttp pop pop dec cwtl push mov xchg cmp sbb xchg inc mov loopne xor fld and stc shlb jb xchg stos mov bound outsb repnz shlb stos pop mov lea cmp inc xchg jno inc pop mov ljmp sub jg cmp push xor cmc xor ficoml inc sbb add xor (bad) out push das loop xchg addr16 cli fnsave inc mov mov out or sbb sub dec shrb push add cmp lret jg lods xchg mov cmp in xorb xlat sti cltd fwait (bad) leave adc push call xor notl xchg and pop lods cmc xchg cld mov lods xor sub bound (bad) jnp push iret mov xchg push fldenv dec (bad) jecxz loope icebp das repnz rcll rcr call loop test inc inc and sub imulb mov xchg cmp int push sub inc faddp pop xor lret or mov icebp jns imul mov rcrb push leave lea mov aam ficom into mov fcomps or xchg lret push add xchg xor shrl cmp inc fwait stos lret mov rcr and pop inc mov (bad) jecxz test dec lock call add sub roll xchg test mov popa shrl add dec sbb in adc sub inc or icebp pop (bad) ljmp cli cmp imul xor xor stc jne or insb pop mov mov shl fs rcll fsubr bound cmpsb jb mov js xchg add xor adc pushl mov test shrb in mov stos loop xchg cli push xchg imul add dec das test daa fsubr imul bnd jmp movsbl mov imul add xchg cs push repz and out imul cmp sub pop gs sub mov stos leave pop idiv cmovnp js push stc roll xor or rorb lret lahf jle mov mov sub pop test movsb or mov sbb jecxz mov and adc mov jle mov xchg out fwait pop js push sub fcmovnb daa jne test sbb and and lcall dec cli xor test ljmp es xor sbb xor daa or sti loop jno add fisubr sbb ljmp out xchg push dec sbb xchg ret repnz mov fiadd xor bound shlb cmc xchg inc bnd sub cwtl ds ds push lcall pop jecxz pop std sbbl (bad) mov cli test loop xlat fcoml xchg jle rorl sub push cmp in or xor dec push lds cmc out push call les (bad) mov test jle cbtw sub fidivr sub jecxz dec insl pop test out fcomps cmp rcll leave lods cmp dec fisubl cmp loopne xchg pop dec bound (bad) push aam fs hlt shr lahf in imul xor test clc lahf mov mov (bad) aaa gs lods cmp aaa mov dec in and pop dec loope sub out sbb cmp loope negb xor mov pop loope push stos lcall sub test mov cmpb dec repz sub jecxz dec out adc inc sub sub out mov shll sbb jge notl dec mov mov xor jmp cli mov test fildll sbb push mov (bad) stc fstps mov adc dec out ret dec xchg ret adcb adc cmp mov aaa mov aad push (bad) xor fildl mov (bad) sbb xchg sbb (bad) xor jae fnstsw xchg add xor scas pop dec mov dec push mov dec fidiv iret mov mov daa xchg jo dec mov jmp loop test iret xchg mov movsl cwtl mov and movsb or add push jp (bad) or scas daa loopne lahf fidiv push (bad) mov push mov iret repnz sarl add adc pop add ljmp (bad) jne adc inc (bad) pushf push pop cs push xor cmp fs or ret xchg test sub or bound xor out es push add inc adc inc lret test cmp add push lahf mov pop roll pop and out loopne (bad) shr jnp mov mov popa pop inc gs sub jb mov mov jp pop hlt ja nop arpl aaa push jle rcrl adc and outsl sub stos gs add pusha pop push lcall inc scas add mov in js mov and xchg cmp mov cmc fistpll inc ret pusha and (bad) or sbb push movsl mov int3 cli sub cmp lea adc movsb jns out add pop push pop mov push push xor stos add add shr sbb in mov out or or je in push rcrl mov push add mov or add and out dec xlat lods mov cltd int es lcall or jo (bad) jb xchg and xchg xor outsl push jo jno sub dec pop adcb xchg subb dec in push out pusha pop push ds ljmp jnp fcoml add std pop and adc add jnp cltd fsubrs add xor xchg xor and xor in sbb stc ret pop in mov xchg dec or pop add mull loope out ficomp into xchg adc adc jne pop je lcall (bad) jo loope sub mov movsl mov push xor out jb rcll jge insb das and sbb pop mov adc mov adc add xchg mov push push stc mov sub pop xor movq mov pop cld mov lock lahf dec inc xchg ret popa or xor in mov (bad) rol mov mov xor xor lret mov movsl mov (bad) in xor dec push idivb push xor dec out jl (bad) repz sub push sub sbb pop mov jl lret repz (bad) (bad) mov loop xchg ljmp movsl add (bad) ret les imul and (bad) pop ret pop or stos adc mov dec cmpsl addr16 mov dec repz lret (bad) pop cmpsb jg fsts (bad) out cmp shrl dec stos cmp sarb dec mov dec inc push xchg adc mov mov mov enter aaa daa (bad) jbe rol jne xchg adc pavgw imul pop repz push lret adc xchg pop mov cmp adc and cmp rcrb xchg data16 cmp repnz mov push mov test mov idivb imul add pop sub out cwtl mov mov inc ret mov out jno lods pop push pop pusha lret sub cs sub enter out and pop idiv das (bad) bound cmp std add movsb or pop push insb dec mov shrl aas loop lret jmp add lock jle in fstl aaa cmp push jp add fidivr out jg add frstor or imul push jl movsl (bad) (bad) rcll mov int sub and mov push lret ljmp hlt adc sti mov jecxz sub out mov cld jb or sub xchg push sub out movsl stos xor ret mov xor mov sub and lods jecxz add popa xor sub push daa notl mov sub cmp mov mov cmp idivl scas sub mov mov push jp (bad) mov loop ret push fstpl scas pop mov cmpsb sub sbb iret or push (bad) (bad) int data16 cmpsb mov and cmpsl push and push pop jb inc and push popf arpl lock mov fs xchg xchg aaa xchg pop stos std cmp xor bound mov (bad) addr16 (bad) jo sub shll ret into jmp cmpsl push dec mov push in test dec fnstenv or lods adc mov or bound pushf sbb pop add lods xchg mov add bound sub out mov hlt jp test addr16 adc test xor out pop (bad) mov sub call loope test add out rcr loopne mov inc jge movsl pop jp dec mull sub jle and inc xor mov das xor data16 jo add (bad) pushl mov or sub adc inc outsb fcmovnbe dec sti xor mov ds and lahf cld test data16 aam in xor loope xor cld roll xchg sahf and jne cwtl xchg into pushf jo rorl jge repz addr16 push adc iret cwtl (bad) popf pop mov scas mov xor test lret repnz sti mov test mov sarl dec js dec mov mov pop or int3 lock xor negb pusha sub cmp sub xchg enter fadds popf sbb or mov or iret and (bad) xor mov dec rcrl dec std (bad) jle xchg sbb hlt (bad) dec inc and push loope pop clc dec test xchg hlt dec push ds or mov cmp in cmpsl jne sbb jmp loope movsl enter ret testl sbb les insb jl sub mov dec mov adc je and sub sub imul sub les rcll lahf add xchg pop scas bound dec lret popf pop push mov mulb mov out popa xorl jge push imul add jmp pop xchg flds or pusha idivb lods ss xor cs (bad) ljmp xchg add fadds arpl mov je loopne push cmp mov cmpsl xchg xor sub jmp stos pop add mov bound ja rclb jmp jne mov sbb xor (bad) xor xlat push xlat xchg mov or repz and fwait cmp ret sbb xor in dec dec (bad) gs loopne mov xchg xlat lret dec repz nop ljmp add mov je cmc inc es jno imul pop shlb push mov call scas cmpsl adc leave fs mov cld loop mov in cmp ja sbb sub jecxz or sbb scas cmc pushf jle or icebp jmp jae mov and xlat rorb add add push ja aam out push mov mov fldt je scas mov push pop movsb rorb pop fdivp scas push ss fistp mov xor mov jae loop mov sarb test outsb leave or push pop iret lods xor (bad) and sub or mov adc xor push cmc stc fimul mov and xchg loope lret fcmove sar or ja ret xor lret cs (bad) sti into in add test stos repnz mov jns xchg pop xor fbstp (bad) add and push xchg gs or push jb rol jbe rcrb inc sar imul or cmp and imul cmc fldenv rcl cltd test mov testb cmp push sbb sbb cli fdivrl mov ja cs ljmp push inc jae jg jbe repnz and ja push shrl and sub and scas xchg sarl mov add inc mov dec mov and cs or (bad) aam push and jbe outsl das xor sbb or cmp sub clc daa (bad) test sub and mov ficom add xor jnp pop (bad) stc stos mov push xchg dec icebp adc popa mov out ljmp int3 in lock lahf gs sub into pusha mov xor das mov mov std sbb movsb into lock stc jbe addl fnstenv push out ljmp mov (bad) xchg in push pop add or les les mov xor jnp iret cmpsl adc ret cli int3 jnp push pop je mov movsb outsl pop iret popf xor cli jbe cmp lret ret adc test (bad) repnz (bad) mov or xchg mov cwtl adc and pop mull cmp xchg inc lcall lret xor xor ja cmpl and inc (bad) out loop (bad) mov mov cmp rcrb stos imul leave jno sbb xor xchg mov adc lret imul test daa xor jg loopne imul daa sub out out push scas push xlat sbb dec sbb icebp jnp inc xor or addr16 mov jl pop add orl sub fidivl dec jo sub idivl mov cli sub sub push in dec xor mov in out pop and fisubr popf push jge sahf dec insb cmp in push jnp adc sti push push ret das notb and push cmp repnz dec jecxz sbb and push movsl adc sub (bad) push jecxz loop xchg xchg mov dec and mov and xchg (bad) mov jp dec icebp ljmp les (bad) clc (bad) xor mov or adc jae mov add mov mov push movsl jg sbb or out and xchg add and les or int3 dec fbld or jmp mov dec mov fistp push sbb mov xor xchg test pop stc pusha pop xor (bad) mov jo jae mov mov mov (bad) pop ds loop or gs das mov (bad) popf push fmuls adc xchg mov lahf adc mov xor stos gs jmp jecxz cmp repz repnz add cld jbe lret mov fisub xor movl sub and xor push ss sti jno repz lret mov icebp out jne stos and xor and inc mov aas loopne and mov imul dec xor jge shlb cmp sub xchg lahf rol xor mov rorl jo or int3 lock icebp test sub out add xor sub fldcw cmc iret das and stos stc cmp dec push push in and mov ss mov (bad) cwtl sub pusha daa jns mov mov (bad) pop int3 jae dec sub scas frstor iret (bad) lret sahf cmp lret pop ret mov pop mov loope flds dec add and je sub enter mov shrl mov imul xlat sub lods sub push xchg aam xor movsl cltd (bad) jmp xchg cs das or and popf jns insb out add fisubl push jns inc leave scas fs out cmpsb ds repz jge mov cli lcall push lcall hlt sti pop (bad) fsts jno add mov push push adc mov pop sbb std mov adc sbb repnz mov cmp fsub fidiv popl mov sahf insb push leave jae cmp dec add push and mov outsl xor scas fucom push daa sarb jecxz inc lret or cld ljmp sahf (bad) and add movsb out mov and dec xor inc dec jae js fucomip (bad) mov and jg in sbb ret call pop gs pushl xor xlat pushf mov arpl lods test push xor stos ds jl adc lods push mov aaa dec jge ret fldl (bad) push aad enter push pop testl and adc pop scas xor pop fs lock test mov push out sub rcr (bad) sbb adc mov das sub dec pop xor aaa xor pop push ja cmp mov xor jmp mov xor push clc push sub scas xor data16 mov fs dec mov xor sbb pop xchg out orl js add jnp test mov insl fadds sbb and sub out mov ret jns mov (bad) or sbb iret jno pop mov lret cs push xchg shll test and sub cs inc xchg loopne wbinvd jp pop push notl inc or mov cmp subl les and pop test add rcll rcrl or mov mov adcl popf pop test mov cwtl jbe mov pop lret shlb popa sub mov imull out inc cmp or xor pop outsb add scas sub cmp test (bad) jmp roll ret push int3 cmc (bad) repz mov fldenv (bad) les pop or push mov notl xchg xor xchg dec mov sub stc jmp popa pop and push xlat add add in pop xchg aam xor leave out push push adc stos lret aad clc sbb mov sbb push (bad) sub dec arpl mov mov imull repz clc inc add add adc (bad) jnp xchg xor (bad) ja jns push mov sbb push inc sbb xlat mov cmp mov out pop and pop dec cli lret outsl pop jmp movsb out lods out dec pop dec or mov cmpsb imul pop sti xor ljmp mov sub adc push mov xchg pop int rolb xor lret (bad) outsb lock add es fs pop mov or push mov xchg jns in mov (bad) push xchg adc rol lods test fnsave int3 test sub testb faddl daa xor push xchg and pop out mov sarl inc fisub push add and movsl sub cmc cmp pop (bad) push lds pop mov popf out xchg sbb packssdw or xchg aad xchg ljmp pop fsubrl mov xor in imul and loop xchg repnz sub jmp push stos arpl fxch stc xor adc (bad) mov dec mov mov adc mov into (bad) lock push inc rorb icebp sub jbe fcoms idivb cmp (bad) mov out xchg sub sub or pop (bad) xor pop xchg sub or or (bad) gs ds leave cmc cwtl xchg lret in or mov add mov sub and inc mov popf cmp adc lret mov jnp inc and mov pop or dec loop lret lret aas sub adc int fcomi inc xchg pop sets out xchg mov pop in push sub lea loope iret jno ds ds std and ret shl dec jno movsb and mov js icebp out dec mov mov and ds jbe popf inc jecxz,pt pop loope ret and ret add sub add ds sub xchg jmp cmp mov loop dec pop imul nop lret mov aas jle sub and or repz loope sub lock mov icebp mov cmc in ljmp sub cmp cmp push ds cmpsb iret or add rclb ss and mov mov xor lods or ret cmpsl lock (bad) or xchg sub and in mov inc je adc ljmp adc stos mov sahf pushf mov add mov xor jmp or in fsubrs faddl xchg imulb mov roll repnz mov xor jg les sub stos iret push (bad) xor data16 xor push mov xor mov xor pop jg das ret outsb push jbe jne fdivl shll popf pop dec pop sbb mov mov mov cmp movsb fstps bound mov or (bad) sub jne fimul movsb (bad) out stos mov mov xchg dec jb repnz lods jbe mov femms imul popf (bad) movsb push bound clc dec xchg xchg imul and inc rclb daa sub in xor sbb sarl sub jmp sub xor incb int cmp add jo dec ljmp inc out xlat in das inc add dec cs push jmp repnz lods push std lods push mov add mov xor jmp mov pop mov loope and and es rorl les aad push mov mov mov push cmpl inc mov insl xchg sub scas and jmp xchg push repnz add scas add adc mov xchg leave pop pop stc mov pop inc xchg mov mov test push les or cmp mov cld sbb int3 ljmp xchg lret (bad) mov iret ljmp bound shlb sub (bad) ds mov pop lret sti adc call lret sub sub dec jg cmp fstp push dec inc cwtl fistp or xor mov dec dec jmp imul xor (bad) xorl push out ret dec pop xor loop lcall cmp sub mov das sub stos push dec xor out sbb loopne stc add dec or test mov idiv loopne fstl sbb inc aas daa lds xor scas std dec mov or lret jp sbb divl cmp imull jge mov imul sbb das insb sbb faddl or ljmp bound cld jae rorb xor icebp mov or mov pushf pop inc and test adc pushf jmp out mov lcall mull xchg out mov sar cmpsb jmp mov cmp inc push dec ret aad (bad) and adc cmp sti fcom xor inc scas or push fucomip and in dec dec cld es lret scas js xor scas xor arpl add or sarb jbe sarb and lock adc mov or adc jmp (bad) mov pop outsl cwtl cmpsb xor loop mov testl dec aaa inc cwtl push daa or dec add add lahf adc adc jb and (bad) mov outsb adc and jl leave ficomp (bad) hlt rcrl sarl cmp (bad) ljmp and jle int cmp das mov pop cmp inc daa push iret pop pushf add inc inc loope mov je (bad) into das cmpsl enter repnz shr popa dec int sub inc pop xchg out enter xor mov xlat mov pop mov jle jg pop shl xchg mov adc dec out mov dec popf rcrl icebp pop ljmp aaa add bnd mov pop and sub xor mov cwtl jge jnp je or jmp sub sti in mov add (bad) lock imul inc call and or mov bound inc je lret mov insb jb push lret xor jmp gs (bad) imul fidiv in out inc daa ljmp inc loop and jle xchg and ret ds in ds lea sub mov rclb add in jg pop or icebp cmpsl lret cmc jmp aad cli fistp xchg out mov add lock into dec mov xlat gs push out out imul sti dec icebp pop or fimul cli adc push mov jbe decb out inc inc movsb push lret clc cmp mov lahf (bad) jge adc out dec xlat pop mov dec mov test mov mov lret lock rclb popf cmpsb aas call addr16 sbb xchg mov lahf dec stc mov push pop insb sub dec adc daa lods push lods mov jae sbb sbb mov sub mov inc lret lea push sbb and inc inc rcrl dec (bad) xor movsb and ret ja xchg sub mov lods dec dec (bad) leave ljmp xchg pop jecxz mov push sub mov ja (bad) push std in xchg add xor scas sarb cwtl xor or xor fidivr dec dec or movsl jb aad in xchg mov xor inc mov enter in sub pop mov inc jae sarb xchg clc or andb mov mov sti mov jnp notl adc add sub out gs sti xor leave orl pop or into insb pop mov jp pop (bad) stos sub xor loopne jmp push iret mov cs push pop sbb cli not jno sub sub out (bad) and or push repnz jno bound (bad) jne cmpsl imull push pop and lods lret jno xor jmp nop xchg xor xor and scas iret in add ljmp cmp push dec push or call movsb lock sti iret lcall (bad) jmp repz and leave xor insb mov popf push out sub clc inc je rolb and cs or mov mov lahf bound (bad) mov adc or loop push aas scas in fcoml or and pop lds jp mov out cmp loope pop loope jmp mov in lods out scas cmp icebp jp dec ret sub rcr add mov mov mov mov imul daa testb adc stos int aas (bad) jmp dec (bad) mov ja lea xchg jl popa or add mov sub dec sub ret cltd into cmp push mov imul dec inc movsl je in into xorb nop add stc outsl mov xor cwtl mov inc or mov pop popl jnp push lahf lret ret ja dec xchg jge inc bound loopne lret push mov ljmp mov xor push ficom lea std sbb je xchg pusha cltd int call rorl xchg (bad) gs movsl clc lods dec stc pushf mov (bad) jmp push mov ja or push cmp cld in bound ror pop (bad) cmp or (bad) fsubl test mov jae adc jno dec and cld mov stc lea dec loop xchg orl int in xchg (bad) repz mov dec dec dec inc ja push mov bound repz xchg xor mov add sbb mov aam sub dec pop popf jne je fldcw cmp dec mov dec stos fsubrs gs xor roll mov (bad) and and sbbl notb xchg pop dec gs mov das ret lods fwait notb sbb sub stos in loope mov in mov lods dec mov arpl ljmp mov (bad) stc cmpsb jge lea movsb shr mov mov mov pop mov std sub dec mov lret mov stc bound mov stos insl je or mov lret mov dec or dec sub and mov cmp out sarl mov pushf lret push mov sti and add xor pop movsb test and push or dec shrl notb imul mov in mov push mov stos xor (bad) leave (bad) cmp cld lret je pop pop leave lahf jl mov jno movsl inc ds mov xchg aam sub inc xor or dec cmp mov sti pop icebp (bad) aas inc add shrb sbb bound iret push pop adc (bad) mull push mov sti sub and sub aad clc push pop into and test cmc repz inc sbb inc addr16 add jecxz fs cmp add or call sub movsb push or test xor xor push call (bad) ljmp clc lods popf ret (bad) mov sbb dec icebp pop sub ficomp das (bad) mov int3 mov out sub xor repz rcrb icebp pushl add mov pop mov das mov add mov mov add in mov testb lahf xchg std repnz sbb jg pop sti xor adc sub aas ljmp cmpsl jle loop imul or add mov or pop mov hlt adc ret adc or (bad) mov fptan inc mov enter loope cmp cmp pop inc out scas loop lret not lds jae adc cli fnstcw sti sub add lds or hlt dec leave pop fcom xchg gs add clc sub cmp lret incl test adc sub inc test leave scas clc cmp cmpsl lods add mov in scas sub dec cmpsl jp sbb mov or inc loopne sbb xlat mov repz sub sbb and adc pop (bad) (bad) fiadd std stc (bad) scas gs test sub inc sub add repz and call jle pop (bad) cmpsb fldt jecxz jle and add test jmp mov mov dec negb inc rcrb adc orl mov sub xor ja cmp into je adc fcomi xchg mov ljmp jb js xchg out bound ret dec shll fdivrl xor lods xor mov (bad) aas mov adc test mov ljmp insb daa icebp inc test cmp out adc push jl dec jmp ret mov cmpb icebp xor repnz adc mov push xlat lods shll int3 fmul mov xchg mov ret notb lret lahf into std mov or xor mov xchg sub mov fldenv lods add aas shrl ja mov sub inc scas pop mov add mov in cmp fidivr dec scas mov and lret sarl dec mov cmp mov xor push mov cmc cs stc movq pushl roll pop test stos pushf in or (bad) cld add and sti sub mov pop outsb cmp or pop out fmuls fcmovu xchg push lret push stc xor sub shrb xchg or lods mov es cwtl shrb out adc or inc jg add mov xchg xchg xor jmp hlt push push adc and xor mov cmp pushl ud1 ljmp ljmp jg lahf je push dec jecxz lods jb mov lret shrl lock mov sub mov sbb (bad) popf cmc lcall aam clc rol pushl and mov pop (bad) cmp mov leave call cwtl lods and sub or sub (bad) push out pop ljmp fadds jl inc call jge ljmp jne mov repnz mov (bad) jne (bad) mov mov xor or repnz fistpll aaa inc inc ljmp fsubs popf fnstenv mov jmp sub hlt dec imul mov mov adc and sub lret pop mov and mov xchg jbe inc pop xor cmp or fidiv lock sti pop jae jmp push push adc pushl xorl imul std loop cld imull jmp jg cwtl xchg fidivr gs jmp (bad) out dec or out and sub add xor and (bad) push xor jns scas push lahf dec push scas jb into ja (bad) das leave cmp xchg dec lea jg fwait adc ret jmp stc and stos lods outsl rcrb fldl iret xchg pop mov decl mov add xor cld cmpsl mov popf pusha jg sub xor in mov ret mov push sub test dec daa data16 sub lods jo sub xchg add and sub pop jmp or inc pop lahf in mov fdivrl jmp lds sub pop push sahf ret pop in je cli cld sahf sarb sbb (bad) popf call cmp imull and xor jae daa ret pop lret vmovaps jmp inc push mov fwait pop imull repnz iret ljmp inc repz dec add sbb inc inc roll incl ret icebp mov lcall and or or out add pop cli mov jnp leave lea mov push out pushf (bad) pop ljmp mov lret cli xlat int movsl jno dec std mov add dec inc mov mov (bad) ljmp cmpsl jge stos inc aaa pop sbbl sub sub jecxz or fidivrl mov add cmpb xchg mov ljmp test ds sub mov movb xor mov xchg daa inc push xor jmp cld mov repnz sub fldt push push and scas inc xchg mov sub ja cltd jbe cmp call or ds sub dec sub or jmp dec shll sub xchg xchg (bad) shll negb mov and ret add mov fmuls aad test lds lds (bad) lret pop in inc mov push mov mov clc icebp aam mov icebp out push xor jbe adc add xchg or add and push add sub or sbb cmp dec pop les divl ficoml pop out dec loop dec clc bound test (bad) mov cmp (bad) adc shrl divl enter fsubp inc xor rclb int test push (bad) mov ds pop or dec push loope mov out lods inc xchg jecxz and sub negb imul or jmp loop (bad) xlat movsl roll cmp aad loop jne cmpsl fs ljmp imul sub in shld repnz inc xchg or pop les notl dec xbegin jbe pop mov mov divl das xchg mov mov push pop popf pusha aaa jno dec dec add rorb mov xchg imul xor dec in xchg dec cmp psubq jae xchg and add movsl sti cmpsb iret inc pop sub push mov and stos (bad) leave gs test jge (bad) nop add mov std adc les sbb fildll jp popa lcall call mov dec push (bad) sub jne scas mov or scas mov imull push mov lock adc jnp xchg icebp into sbb mov daa divb int inc fldl leave out adc lods jns or mov push cmp sub xchg std xchg xchg enter icebp mov test stos test mov mov data16 jo stc imul jg push xchg (bad) mov leave mov test sbb xchg lahf and or pop mov jno dec repnz pop popf mov dec stc xlat add fs jbe fcom push daa mov inc cmpsb (bad) bound lock add sub mov pop pop pop jl push mov daa hlt lahf gs adc mov xor imul push jo cli ljmp sub (bad) pop push or ja faddp (bad) adc aas outsb inc push mov xor inc pop fstl mov in lock add rclb pop (bad) jb mov push cmp or stc das and pop clc (bad) or call jg sbb test or add das add pop mov ret push aas mov (bad) ss ljmp mov ret pop (bad) cs add xchg leave push aad cmpsb add xchg pop jo test in outsl pop jnp pop push push push mov adc pop (bad) jle (bad) daa dec push out hlt xchg sub data16 xchg rorl xor mov gs push add dec pop in lret inc cmp dec mov aas shr aam mov neg outsb xorb ds jnp sbb rcrl test push jmp or jnp sbb mov and jle inc into pusha xor jns add xchg sbb icebp test rcrl dec adc xchg cli and out sub iret xchg cmp gs stos push mov cmp mov popa test sbb ljmp mov mov dec lods add pop mov das mull xor out pop out dec mov dec jnp ret rol stos test movsb std jae repnz cmc decl pop add xor data16 add adc mov orl icebp sti cmp mov lcall aas int add scas (bad) cmp popf out stos jno jp jmp rcrb scas cmp test cli bound inc dec xchg add pop sub imul dec mov pop adc pop out mov ljmp mov sub jmp pop ret or scas or rcl sbb and hlt notl jns and sub movsl xchg adc pop adc pop lcall imul sub movsl (bad) movsl aam pusha xor inc lret pop ret cwtl clc xchg enter (bad) pop aas xor xor and ja lcall add inc or inc or push push dec or inc jno imul jbe push sub lahf stc inc xchg and icebp jl dec mov mov pusha (bad) and das data16 lcall sbbl xchg scas lea cmp mov loope pop pop repnz sbb fs xor out test mov in add and cmpsb push dec add ret sub adc ret sahf into into ror jo xor push pop mov xchg les scas flds imul inc jne shlb lret negl stos or sub push lds push (bad) repz mov fdivl adc cwtl inc ret das mov push stos aas jne cwtl push jmp pop or sahf cmpsl (bad) jecxz fist xchg ret scas and or or mov jae xor add pop jecxz mov xchg adc pop repz add xor inc hlt push push push icebp mov and loope mov sub mov in in in inc mov leave xor add sub int3 xchg and xchg lret int sub or xchg mov mov ss xor mov xchg rcr loope movsb mov ror sbb mov or or cmp sub out loop aaa lock imul in lods bnd aad jnp add cmp ljmp adc cmpsb data16 jne inc mov hlt fsts add popl mov test mov push mov lret roll sub out jbe icebp inc cmp mov lret sub add repz fidiv in cli gs and fsub movsl mov (bad) mov dec lret into fild mov inc icebp (bad) add icebp push cmp dec sub xor push lds jae and dec xchg sub and dec mov test jp int3 lods mov rcrl lea mov inc idivl mov jg mov xor test popa mov add repz or add test mov bound pop sub add adc jmp inc add (bad) lret lock push ret push jae mov stc cmp ret jns in (bad) fnstenv insb mov jne out or sub std in mov sbb jmp repz fwait sub xlat mov pop repz adc pop loop iret push lret ret lret xchg jecxz push sub adc push xchg mov push jg mov and xchg or ffreep ds rol mov xorb add pop out xchg (bad) icebp ja xchg and mov mov sub xchg and leave ja sbb mov mov shrl jne sbb add sub sarl cld in mov jno mov dec xor cmpsb dec or sub fwait daa push rorl push icebp mov ret pop insb movb mov rorl dec fsubs andb mov cmp mov jo (bad) push add xor xchg adc fisubr mov dec inc push jb inc shr xchg mov push xor (bad) xor int and xchg jg push mov lds leave (bad) incl pop sub scas outsb xchg xchg mov ja hlt dec test and mov outsb and mov jmp mov das clc push sahf lret aad sub arpl add hlt sahf and push cmc nop xchg out popf cmp cltd push or (bad) dec fdivr sub mov inc xor cli sub or push sbb shll add call dec mov dec and out aaa mov mov mov adc cli ret vcvtss2si dec call enter mov int3 cmc and lods cmpsl in pop add call jns inc and data16 mov jle dec ljmp pop xor ja dec dec out (bad) (bad) mov mov lret mov lods fwait sar xor xchg (bad) mov mov inc lcall jmp ret push jno xor imul mov out sub icebp mov stos into push daa sub xchg adc (bad) mov sbb jo xchg pop xor stos lret mov fiadd jo add jecxz test test ret imul or cmp xor out pop jae (bad) call xlat xchg hlt add cmp ja adc dec jmp clc mov into xlat xor inc out jnp jbe xchg or jbe dec cld loope enter (bad) shrl cmpb (bad) and jne or out add push lods imul inc xchg cmpsl push dec sub sbb push ss mov fincstp jp adc add sbb (bad) pushf push popf leave ret fbld popf jb dec lret out sub add out add mov jmp je shlb cmp xor pop add pop dec in xor daa jne lods ret inc xor sub fdivs sub sub in test push ljmp rorb sbb rorl stos imull add leave cmp cmp popa and pusha dec aaa in add rorb sbb and repz (bad) scas push (bad) lods aad (bad) fsubrl mov push iret imulb icebp sub mov ljmp xlat bound pop int jo and sub iret imul loope xlat lods xchg inc cmp xchg (bad) mov mov mov pop add mov js sub pop out loop xchg out pop popf fwait js sub jnp cmpsl cmc lcall fcoml dec les sbb jno (bad) or mov sbb addr16 xor mov push daa gs popa mulb add lret or popa (bad) adc adc jge sub hlt out repnz jp gs push lcall rcrb xchg and mov jnp and inc jnp mov mov test cli mov xchg push jmp cwtl pop xor (bad) jge mov cmp mov fsin in enter and (bad) mov test sar mov ja enter jae cmp xor call lods sbb or and push (bad) cmp xchg jmp (bad) out inc xchg ret jbe add jbe pop scas or cmpb or cmpsb jo gs push mov std adc inc jnp mov push aad jmp lret xchg insb pop pop std aas sub dec lock mov push push std imul das ret push sub dec mov stos inc or xchg rolb fsubl adc and xchg xchg mov and ret sub jnp add sub sub jge out cmp fistl pop (bad) dec mov stos and ljmp dec test adc mov es fs repnz out pop enter or and in fdivrl cld push mov xor popf stc popf push sub or repnz aas stos cmp mov cli xor dec jge js mov or push in inc pop repz dec mov mov lods push adcl cli lea sub mov adc sbb adc add flds dec xlat das testl xor loope add and push test mov xlat icebp mov adc mov fcomps nop arpl (bad) nop xlat mov in sti or lock (bad) int3 scas out dec mov or pop loope cmp xchg out pop mov cmp dec mov pop push adc mov mov and push jns imulb mov xor mov out pop sub mov enter jge mov push inc sti popf pop mov mov pop mov incl inc test mov adc in and sti xor daa push add pop mulb sbb jb (bad) mov sarb lret dec lret clc pop iret test loopne cmp call pop sub lcall int jb (bad) xor mov mov sbb sbb mov xor cwtl sbb jo jmp sub loope test rcll jmp sbb cld rclb bound adc mov das ficomp pop jbe outsb mov cld sbb lock pop out mov xchg mov xor or xchg cli mov jg (bad) enter add push rcrb xor (bad) sub out xchg jg ds xlat xor or pop ret into (bad) aaa push jbe data16 pop mov pop pop mov in scas hlt cmp cwtl enter cmc push aas mov loopne mov push in leave push aas std mov jo in sbb push stc loopne mov jbe xor push mov or (bad) mov inc xor idivb and insb cmpsl loop jae cmpsb jg and clc fucomp cmp jbe mov push repnz in cltd sub aas jns cltd call push (bad) cmp adc mov sub xchg lret pop cmp or xchg jno and (bad) and ja adc test mov jbe jno or xchg jge lea pop mov movsb xor (bad) sbb pusha sbb rorl or out lock leave sahf rcrl cmp xchg push mov dec je jg in lock xlat and test cli bound in jg xor push (bad) xchg pop idivb lods cmp inc sbbl sbb aas sub iret dec and pop movl roll movsb pop lods cld pop fdivr sar sub inc (bad) mov sub incl or mov lahf lcall jp int3 mov sbb pop or dec mov and imul xchg mov out sarb in mov imul cmc mov push ret jnp mov out sub rorb popa mov mov xchg lods pushf xchg mov pop lret (bad) lret cmp push int or mov jl inc or mov push out and cmpsl pop in push jns (bad) add (bad) insl mov add fs jmp gs adc and jne stc xchg push xor mov data16 lds cli adc int3 and pop push push sbb sub repz push ljmp add rcrl loopne sub out xchg mov jne sub retw lock and mov (bad) cmc xchg sub xchg sub xor call jg sub cmp push shr movsb dec mov xchg imulb ret xchg inc out and stos mov mov lret sti push popa xor pop mov into and gs stos mul push in cwtl sbb and sub pop mov repz sub pop ret inc jno cs mov xor xchg push ret mov mov movsb pop xchg fild sub icebp pop ja pop jmp mov jecxz pop mov jmp mov mov xchg das out sub or testl pusha (bad) adc sub mov int fidiv adc or push out popf pop mov div pusha xor stos dec inc andl subl adc movsl stos out ret jl add mov out dec xchg pop (bad) icebp fildll stc les inc sbb mov ret mov jl leave sbb je mov mov and lods push mov sub xor (bad) and and pop cmp jne out rep mov mov ljmp dec lcall sbb sbb jbe dec mov call pushf dec into and dec mov xor add mov sub mov xchg jae jmp ds scas xchg xchg mov jg xor int xor clc sbb jnp imul fisttpll insl (bad) and pop in mov lret xchg mov xor mov jo adc movsl fsubrp ret icebp and pop lcall mov iret mov fs clc sub scas fdivrs add xlat pop mov xor sub mov xor imul or (bad) xor dec fwait sub or aam xchg cmp xchg daa xchg jbe leave fbstp (bad) test stos sub inc (bad) mov jno pop sub cwtl cmp clc or cmp f2xm1 jmp pop mov push jp mov cmc cltd outsl lock ljmp lods inc sbb ret and xchg dec pushl push fcoml sti fnstcw inc fsubl outsl repz les std in js mov mull in notl pusha xor test test scas bnd push jg sbb cwtl scas or mov cvtdq2ps popa jmp and data16 fiaddl mov or stc fisttpl or ficompl mov mov pop (bad) leave fnsave aam xchg mov pop inc pop iret aas cmp xor add lret aad sti push mov jle loop pop aam ret add sti call xor fnstenv shll in data16 loop dec mov jl pop (bad) test rcrb add aaa mov into xchg or pop sbb shrb sub leave and xchg ret ljmp xchg cli incl xchg push mov fistl sub dec repnz sub call jb in push cli (bad) mov fidivr test cmpsl movsb call in stos push dec scas mov fisttp adc dec cld adc xor mov repz fistl add or out sub cmp cmp (bad) xor ror and stos ljmp icebp cmp pop xor push movb xlat pop popa fdivrl or (bad) jb (bad) imul std (bad) (bad) addr16 adc mul mov out fildl (bad) push xchg enter mov test outsl repz roll jmp dec stc loope dec repnz shl leave mov sarl xor pushl (bad) cld cmp sbb repnz adc jne xor lock pop add dec dec jb loop mov pop jno xor (bad) outsb outsl enter lret jmp inc or rcrb (bad) out and cmp adcb ret (bad) mov fmulp (bad) imul gs or xor sub ja adc or inc pop jmp or jge andl add cmp xchg pop fmuls (bad) cmp ret adc adc movsb and (bad) lret and pop pop mov mov pop cmpsl in js lret loop push (bad) and mov pop cmp mov jecxz jle (bad) mov lahf aas insl pop pop cmp mov test mov inc or fnstcw mov ficompl inc sub out (bad) je cli lods jecxz xor cmp pusha leave mov xchg sub mov lret scas mov cli and outsl dec leave mov pop fcmovnbe scas jno rol mov stos sub aas cwtl cmp push sub jle mov ror xor nop fs dec and mov sti dec call and fmuls jno push xchg rcl xchg sub ret or aaa and mov or jmp xor stos mov and and xchg mov pop outsb jmp ljmp mov call add dec div inc inc pop jg mov stos lea jno ds ljmp iret sti divl popf cmp lret iret mov add fxch xlat push aad in jnp sub or jno dec jge mov inc out jae add aam loop subb cs sub inc sub ret mov mov jne loope sub inc sti aad repnz and xchg sub dec fisttpll pop xor dec mov xor pushf and outsl mov test pop into add dec pop ljmp xor pop rol lods inc enter daa (bad) and xchg (bad) sti shll daa lds add xor inc inc and add pop and movsb js mov ja out and xchg mov push popf cmp xlat pop xchg mov jnp xchg and mov mov repnz fistpll pusha and sub cld daa or inc pop lds add cmp xor sub aad or cmp imul xchg or cmp mov les (bad) xor add pushl call push xlat add icebp jmp xor aaa (bad) mov ja add sub ret dec cmpsl and (bad) aad sbb add mov cmpsl (bad) pop mov mov data16 sbb pop pop ret mov repnz pop clc rcr pop or dec pushf cli cltd cmpsb leave iret ds or (bad) out bound jno imul pop js adc mov xor mov sbb xor out (bad) out push (bad) sub gs pop add sub xlat out pop shr cmp clc inc lret imul adc inc icebp subb ret hlt mov mov outsl inc inc leave pop mov icebp sbb mov push jno mov pop pop push push daa inc flds popa das push jle stos push push xchg je in stos into adc sub mov ljmp clc mov or sub sub and loop mov push and mov pop sti and dec add adc adcb decb (bad) and or lea popa ret outsl cld push and out mov dec xorb pop xor mov pusha sbb pop cmp int adc stos pushf (bad) sub dec loop ja aam stos mov adc clc popa (bad) (bad) sub lret inc mov adc mov xor std insl ja jecxz std fiadd jnp,pt movsl jle dec cmc (bad) in or mov push test ret ljmp and sub and mov push aaa or xchg sbb sub and inc sbb aam decl hlt sbb sub icebp outsb in sub dec in mov pop rorl mov inc sbb cmc mov repz push repnz ret sub mov cs add cmp sub je popa movsl and pushf in adc lret leave das aam jns sbb dec repnz dec das divb or cmpsb pop pop add mov cmp xor sub xchg aas iret and in sub or pop das faddl call xchg mov mov inc sarb (bad) dec add jbe imul imul xchg push mov cmp popa xchg mov lahf test xlat (bad) lahf push push movsb pop push pop mov xor lret out insb xor pushl and inc mov xchg out pop subl or neg push mov and mov inc xchg mov jp mull jle ret std jnp cmp adc lret add lds pop pop mov add mov sub xchg sub xor inc daa pop ret pop outsl loop lock cmp loop pop iret push movsl idivl fstpl xchg divl jmp flds jbe push nop xor dec movsl jbe mov or gs mov mov fucompp jg sbb cli test mov lret pop lret mov lcall (bad) mov pop xchg pop frstor xor sub cmp xorl das mov fcmovnu (bad) xchg repz add icebp jb shrl pop xor mov xchg sub stos daa jbe loopne jno pop dec adc sub jb lahf idivb xor aam mov xchg pushf inc push xchg sbb cld add and cmp mov pushf in into mov mov adc lret test popf xchg inc adc leave out push in lea fistp lds or (bad) and js daa (bad) mov into mov insb jge push add rcl dec mov xchg lea inc fdivrp push ljmp jbe (bad) adc iret xchg pop or ffree mov adc outsb mov sub fildl es (bad) jmp clc mov push pop enter (bad) and orb nop loope mov mov mov mov sub fucomip js mov cmp iret std sahf xchg jmp or pop (bad) dec sub dec adc push lcall cmpsl add out mov mov and mov scas push add sbb sub sub jg mov pop mov or pop xchg mov lret lret (bad) xor push cmp mov fdivrs ret or xchg aas inc or (bad) or add fdivs cs dec mov jmp into pop dec jb xchg jmp gs mov daa out pop sbb dec xlat mov enter cmpsl dec mov mov dec imul les or push xchg ljmp xor add mov aad pop mov cmp dec mov or mov ret pop add lret mov in stc imul cmp mov pop loope hlt cmp or and sub jmp test movl pop or aad pop mov pop lret add sti lds sbb sub and jmp call movsl mov inc adc xor xor sub mov daa or add jmp cltd and fsubrl sbb arpl jle jae adc fstps in push ficom (bad) test das sbb mov movsl imul sub and dec and adc push mov mov ja cmp lret xlat lds sbb add pop xor add adc fs gs andl sub adc out jb adc fsubrl sub inc loop test mov jnp pop mov fsubrl inc ljmp mov push adc mov xchg imul dec fstpl pop imul jnp cmp and cwtl sub outsl or rorl pop push pop cli mov add jmp or out dec out addl push loope sbb cmovb add xchg sarl xlat mov fs mov aad in fcoml add test cmp add xor cld jbe push mov jns dec dec into mov (bad) add jae sub mov std mov pop icebp mov inc ja pop xor jns fldenv xor (bad) ljmp sub mov lahf int (bad) mov and inc ret js repz pushl jbe jg xor stos add mov fnstcw push mov and icebp loopne in js and lret mov clc (bad) mov mov xor decw mov mov ret mov test lods adc stos in mov adc int3 xlat xor add into out aad mov sbb repz push mov sub jbe out and lahf add sub sub push shl lret or xor insb jne or ds hlt es jmp dec repnz xlat cmpsb movsl or sub popa xor jle test lods (bad) inc test out and dec rorb cmp out jns adc ja in stos sub cmpb ljmp aad sub in or push and xchg mov (bad) mov sub stos call adc sub ja cltd pushf inc inc jmp pusha and adc and std and mov shrb pop leave mov out push adcb sub cwtl add mov xor mov pop (bad) fs ss aad (bad) and jae adc stos jecxz push (bad) aas cmpl repnz sbb cmp out sub xchg xchg xchg push scas sub jnp mov mov dec testb add xchg stc mov aad jp or sti sti movsl stc fsubl inc fwait jecxz and inc lock mov nop lods cmpsl xchg cld out xor xchg nop push pop or outsl lret or sub add cwtl cmc movl repnz (bad) push loopne mov test and mov aad jae xor cmpsb shll xor nop leave sub or fsubs push mov shrl or fildll (bad) jae adc cltd rclb cmp xor push mov mov adc sub fstps mov ret xchg jmp sbb enter pop ja adc push test fs mov and jns cmpsl pop cltd icebp (bad) mov sub pop or das mov pop xchg out mov cwtl push add xor xchg pop push push mov mov mov or or mov adc insl fnop (bad) lahf push xchg pop loope call jge (bad) mov gs lock repnz (bad) jecxz add mulb movsl cmc adc pop xor sub repnz xchg iret lea cmc cltd jb repz lds (bad) mov xchg sti loop shr fadds pop movsl aad dec test jg cmp mov std or xchg xchg mov clc add stos sub sub xor sub cs push orl aaa out cmp imul (bad) mov ret out andb add adc pop mov repnz iret push xchg adc push paddw aad or loope lock inc ljmp mov cmp xor nop imul daa xor cmp jmp stos in fbld icebp push int3 and and loop rcrl mov mov xchg pop test mov push rclb sub bound push or pop popa or and fild push mov ljmp cltd movsl sti cwtl sub cmc pop aaa mov xchg mov (bad) popa pop mov lea jbe pop sahf dec pop out xor fst leave dec xlat outsb jns mov loop (bad) ljmp clc adc data16 int3 psrlq xor out fisttp or (bad) adc mov sahf (bad) repnz les stc out hlt push lret loop xor faddp mov repz mov daa ljmp sbb or or icebp sub cmc xor lret dec es sarb insl inc jg ss insl inc scas fs (bad) jecxz dec test lret fstps and mov xchg pop ret add sti in daa faddl cwtl or fistl add movsl mov mov mov xchg stos inc (bad) out sub sti mov fs xorb add mov ds out mov push xchg sbb adc mov mov xchg sbb jmp clc leave adc fwait sub into push jno imul cld repnz push dec idiv fdivp syscall inc sti mov pop lods rol jmp out and sbb fiaddl loop lret xor or pop pop cli jbe cli pop or xchg dec jmp lret in fdivrl mov xchg mov in loop pop xchg inc ror sti dec mov xor sub xor mov sub mov daa fdivr xor sbb xchg push and or pop mov fist xchg lds mov outsb or jmp jbe (bad) sub pop std test loop xchg cwtl pop sub xchg fstpt sub add sub into mov pop ret add scas ret push test idiv sub dec adc ret xor test std sub mov outsb cld lretw fcos add out out xor and sub pop dec shr fs add daa and push in pushf mov (bad) movsb repz mov xchg clc icebp leave out sbb (bad) xor int3 cmpsb and sti add out popf or shlb movsl repnz mov subb or movsl pop jbe leave pop lds repz flds dec inc loope cmp cmpl xor and mov lahf pop aaa js daa repnz shrb repnz clc mov xchg pushl js cltd add popa addr16 lds inc push xor into cmp ret scas (bad) mov add xchg lock mov push dec fcmovnbe movsb pop ret jmp xor mov pop stos or add xchg adc mov adc xchg or cmp leave (bad) and sbb or stc xor popa (bad) xor imul ret rcll pop or int3 xor cmpsb dec lods enter das push sub jl mov sbb mov lock sub push lahf push adc inc push or jno (bad) stc inc ret pop mov push inc mov sub mov pop fs lock dec add and xor mov mov mov mov or call sub xlat cmp sub repnz inc icebp sbb pop movsbl mov inc or jg pop daa pop sbb jg inc push inc mov mov push sub push notl sub mov lds mov (bad) data16 inc dec es mov (bad) jae mov (bad) stc int3 inc mov mov insb (bad) mov andb pushf jmp or cmpsl push ja loope inc mov repz (bad) jecxz pop pop pop popf frstor pop lods mov (bad) loop mov push xchg in sub dec jl std inc movsl lds shll and pop add jmp jg out dec jne fstps adc jmp imul cmp mov iret aas sub inc js enter push dec jmp fndisi(8087 pushl cld fidivl daa pop (bad) negl aas mov dec cli xchg pop popa mov leave das mov mov out add fcompl sbb xchg cmp push movsl pop sub icebp int pusha jg push add mov lret (bad) (bad) andl mov mov adc rcrl xor pop jecxz dec jbe add jmp add sub outsl aam lret popa lcall ret jge push and push cmpsw jp insb cmp in lods aam dec and (bad) fildl push loope sbb jae push icebp mov push dec adc gs lahf js dec or mov adc lcall cmp adc mov sub add mov mov fidivrl fnsave je in in adc mov and or push leave and imul add stos mov test flds cmp outsb lret sbb pop aam push int3 notw cltd mov (bad) out xor fcom rclb sbb or sub mov cmpsb fs push pop jle dec fs shl rcll pushf orl insl add loop push sti sbb and inc jbe mov leave fildll mov dec adc aam out lcall mov xor movsl (bad) ffreep sbb repz xchg bound fnop stc out add sub xchg adc imul adc clc and cmpsl jo push sub cmp (bad) mov ljmp pusha and and lods in out das mov fimul sti test sbb and pop out cli notl mov lock or js fidivrl pop xor in cs xchg jns dec inc das sub out (bad) cmpsl cld dec fs sahf pop mov mov pop or repz stos aaa jge hlt dec (bad) jmp mov fildll mov mov mov loop and (bad) mov pop mov sbb adc xchg inc mov mov jo int3 (bad) and out daa sub push cwtl insl and push dec in popf sahf cli neg out loopne push out and outsb clc mov push jecxz repnz fldl xor daa push hlt mov stc fs or mov or insb cmp and mov fucom movsl and jl xchg cmp icebp sti fsubs inc fmulp push jmp repz stos lea imul fbld idivb pop daa out push out out nop imul jg das insb sbb jbe ret shrl mov xchg mov push jg jno sbb cs (bad) mov dec dec (bad) xor sarl pop (bad) adc jl and push outsl das lds mov jne mov sbb lahf js movsl nop or adc lret cmp add out mov xchg stc sti sarb icebp idivb mov mov and rcrl push pop sub stos inc test adc rclb lcall or std dec pop ds ret mov aad pop push mov inc (bad) pusha lds (bad) add std push mov sbb (bad) cli sub aad pop scas and dec cld or sub push leave jne xor rorb jg push mov lret mov jno push lcall sub mov mov xchg pop daa or push insb jg xor ficomp jmp jns mov and and ret adc aam adc out psllw cs jns (bad) cmp mov ljmp jge xor (bad) daa push fcoml jbe mov addl dec sub jo adc sub pop pop pop and add mov and push jmp adc lcall pop mov js (bad) push push cmpsb call add dec cmp insl neg nop jg add push sub fisttp cmp jle add (bad) pop dec push ret in (bad) jae xor push dec (bad) movsb inc std xor pop rorb sbb (bad) jne add out pop cmpsl fdiv (bad) xlat jno stc fdivl repz mov push ljmp push ret inc jmp sbb std sbb das loopne fsubs mov xchg scas mov rcrb push push mov mov loopne int sub ljmp xchg inc mov adc lcall push jle dec ret cwtl outsb mov push das mov (bad) (bad) mull cli jg mov mov and adc jbe fs mov xchg lret cwtl fisttp mov push cmp imul mov add and dec push subl clc jg pop sub add dec mov adc xchg mov roll xchg data16 jnp or fsincos mov or push out stos sub mov add (bad) jbe pop jmp xor or (bad) insb xor or test call add adc into int cmp adc movsl decb sbb ja test pop scas pop sub xor sub pop data16 xchg fdiv popf mov (bad) test push test adc int mov jne ficomp in xor decb inc fsubrs mov or mov je out pop add shr or and inc sub add fsts imul push aad popa inc push mov adc pop mov push je mov cmc movsl jbe jno aas jb (bad) xor cmp pop sbb xchg xchg xor pop lret leave pushw pop mov dec adc cmp jb pop (bad) dec mulb pop mov adc inc popf mov iret add xchg push sbb push repnz push (bad) out sbb aam shll fs add into sbb jge sar (bad) testb js (bad) jne mov dec sahf mov jbe aaa cmp push inc pop sub cmp in (bad) subb pop (bad) cmp lds mov pop xchg in sub or lods jge mov mov and jge push mov ret jmp jns xor xchg leave fst int inc std dec jmp sub add jno bound sub cltd dec cmp xchg inc cwtl and pop xlat add add test imul pop mov (bad) clc adc mov loop pop xor jmp sub fisubrl or out ljmp stos lcall stc mov fnop insb (bad) mov dec out sahf fwait push movsl cs mov out and or icebp pop xchg pop pop loope mov fdiv jmp (bad) pop xor (bad) ficom ret sti xor xchg or sahf fisubr xlat xchg add aad into je imul push push sbb add pop adc addb mov or mov xor out or push lcall lea popa jge nop or mov mov sti insb test shll dec bnd mov cmp scas xchg scas fdivrl mov adc pop jno into add fsts aaa in cmc imull pop lret std adc xlat popa aam leave and iret xchg in xchg jmp in out mov push sub int3 add lods not adc mov fcmovbe inc shll fs push xor xlat xlat and and out sub bound add mov shlb stos sub and jb xchg notl mov mov dec ljmp adc mov cmpsl jno sbb int popf std fwait ljmp sar mov inc sti clc or xor jecxz data16 xor cmp jmp mov in das out mov xor xor fist aaa mov out push cli lret out adc mov sub icebp push inc (bad) push adc lret xchg fnstcw jne or inc addr16 test out lret pop imul inc in ljmp dec rclb and das gs pop jnp cmp push push or add das (bad) fnstsw ds (bad) mul dec adc divb pop dec pop jno aas movsl out addr16 adc inc das add mov and cli push mov xlat jmp push ljmp mov xlat mov das hlt add sbb cmp mov adc je adc push sub cmp lods cmp jl add mov and lret pop movzwl mov mov sbb stc shr int3 push mov jp dec mov xor jmp add int in sub (bad) sub aaa (bad) sbb loop xchg ljmp lock sub pop hlt fcmove daa lods (bad) dec jno imul ljmp mov xor mov fsts cltd push mulb mov stc pop insb fidivl mov xchg push add pop mov imul (bad) fnstsw mov jne jnp das icebp ret movb mov mov jg inc inc adcb sub xchg mov cmp out inc and in (bad) ret lcall xchg into out mov adc add (bad) xchg in leave popf push pop bound ret jl sarl xor imul mov in shrb (bad) jo mov outsb mov jo sub inc leave dec nop push jbe xchg adc rep mov push loop dec push xor stc xchg pop loop rorb outsl imul and jmp xchg jmp jmp gs xor repnz sub das pushf ds fadds scas dec add pop pusha sub inc mov clc pop or adc notb sbb lret test sbb call inc push fwait das lea pop pushf std lcall out pop dec lods mov xchg fstl fidivl std push out stos lret int add sub lods sbb inc out lahf xchg add stos mov push sub sub add push xchg jmp mov add sub jns push hlt dec clc dec stos fldcw adc inc mov negl inc xlat scas int3 jbe iret pop mov mov movsl popf cs je push insl add lods mov arpl test (bad) xor hlt repz and int3 jecxz jmp (bad) pop movsl jae daa ret cltd pop je dec mov movsb cs icebp ljmp adc lret push out xchg idivb (bad) mov pop push loop jo or and mov shrl push enter jmp inc mov pusha push or stos dec lods add add ret inc and adc jge jno ds mov or rorb (bad) mov dec out out dec sub or repz jge mov cld pop in xor sbb cmpsb jns decb iret mov pop icebp cwtl cmpsl fistl xchg and mov mov out daa sub jle push add div xchg and (bad) mov push lahf mov xchg mov imul dec mov adc mov dec sbb mov data16 cmp stos mov xor leave push loop divl aaa pop aaa add lret fidivr lods sbb in ja cs lret faddl and push iret xorl addr16 xor push pop (bad) test add push mov mov call mov (bad) mov push fxch daa jl add mov jg jns sub mov xor adc xchg cld aas arpl fistpll das push fistl lods cmc sbb cmpsb mov inc mov sub out mov pop fcoml mov adc mov xchg clc cwtl les mov sti mov jo mov sub push ljmp mov into lret in lcall sub inc sub dec sub mov test and (bad) insl and add and les sahf imul stos jnp nop push bound push daa orl xchg mov mov lods loop cmpsl jp in push es push dec scas jne stos out pop mov and push repnz jae adc sti mov pop repz mov test lods (bad) (bad) flds repz pushf loopne hlt addr16 inc xor or aas test fcompl push mov fstpl push movsb mov mov shrb push test lds dec mov jg fistpll sti push lret sbb or mov mov inc cmpsl fldl test cltd stos adc sahf dec js or sub mov pop dec imul inc out shll std dec call push imul mov xchg popa popf into and mov into pop insl in xor pop ret push mov negb xchg xchg mov inc push add loop xor aam sbb sub and rclb ret adc push xor popf jnp lret jg inc inc and dec mov add jecxz mov sub mov xor imull or jo int3 jle daa or ja shll xor cmpsl ds xor mov fwait cmp sub int3 es data16 leave shll fs pop pop dec leave hlt cmp jge add (bad) (bad) and mov orb scas xchg shll sti and flds imul popa push cmc outsl sub push jbe and pop enter sub daa cltd push xlat push push movsl pop jno shrl cli mov xor or insl mov sbb data16 mov rcr or xchg loopne leave sub outsb sbb into sbb xor mov out stc mov xor das lods jno (bad) jnp notl (bad) fnstsw mov sub (bad) out popf sti cmp add dec or add mov mov test push pop mov ljmp (bad) cmp and push xchg mov push loope decb dec or jbe jmp (bad) xchg cmp or and mov and and push sahf fwait push cmp cmp loopne movswl sub sbb dec or xchg add dec shr sub or sahf or ss push subl pop sub xor inc out sub lret jge mov rclb insl pusha add sub xchg out nop fstps xor pop xchg inc inc and mov xor dec rol aas (bad) daa repz cmpsb nop jno mov or mov push (bad) ljmp sbb (bad) scas mov dec nop iret add daa xchg repz and xor xchg shrl sbb add mov push mov movl (bad) in movsl dec loope ret sbb or stc mov xorb shrl sub test cli popa mov add pop or add mov inc and outsl loope js fmuls dec jne jbe sbb imul sti mov xor dec stos cltd lahf outsl out inc shrl pop and jne leave cmpsl xor sub (bad) ljmp mov cmp sbb xlat pop (bad) lret dec dec and movsl clc mov out cmpsb jb xchg push mov stos or mov xchg aas test cmp sub fs (bad) out xchg adc lods pop mov dec sub adc mov xor sub xchg pop jle push dec and xchg out lods call cmpsb shr adc jp rorl lret and push daa jmp in or ret add xor sub stos or and mov popa dec testl xchg fs lea and or push and xor xchg and fcom jo mov dec inc and cwtl dec out fdivrs dec std adc mov pop stc roll add cmp push std outsl xchg or adc dec dec dec push dec cmp mov dec pop lret scas sub jb dec lret decb out imul fwait xchg js pop push pop push mov (bad) dec (bad) testl out daa add inc pop movsl adc in push and or int3 mov jne adc stos std aaa xchg mov dec or iret cld rcll xor mov sub push mov xchg mov fisubl (bad) xor pop adc sub negb sub (bad) mov mov (bad) and pop mov lret mov cwtl aas popf cmp push xor repz adc lret push test cmp push icebp pop inc mov imull xchg dec dec fwait sub jle les scas sub add cltd jne or lea mov xor lret (bad) xor sub jne sub shlb push iret stos and loop jle movsl jg stos daa adc cmp or in and mov es cmp pusha sbb or stc (bad) lret add pop scas mov (bad) sub cld (bad) mov aas (bad) sub enter and (bad) arpl js int push push scas lret inc push or xchg push pushf cmpsb mov jle add stc test fimul hlt dec imul mov push jge add and push ds movsl ds sub test or mov pop ljmp je mov in adc (bad) stos sub or into jg add out pop in cmpsl adc addr16 xlat sub mov sbbb cmpsb call push repnz mov into scas jne mov mov jnp sub (bad) lock sbbl add cld icebp xchg fstpl addr16 or and mov mov (bad) lock dec fnstcw aam ret test jbe sub xchg rcrl fwait iret add push shll out cmp lods sub jmp xchg sbb cmp xor insb sub jecxz outsb cli dec icebp mov sub mov vpaddw test and in bound dec int3 cmp mov jmp mov std inc into mov cltd sub mov dec pop mov add and mov movsl push pop (bad) int3 icebp sbb cmp jbe cmp jmp enter (bad) adc mov push sub movsl pop jmp mov push xchg jbe flds ret test rcrl mov cld fwait xchg xor or cld sbb clc jg test mov mov push mov mov xor xchg ss aad scas pop scas sub fwait push ja imul or cld cld leave sub stos jb cmp and push roll incb fdivs xor mov insb xchg or andb and adc loope and icebp sahf cmp push lods xchg push add xchg mov push out and pushf scas jge fcmovbe loop daa xchg je out or jne jle inc adc ljmp (bad) mov xchg jne sarl testb test aas lret pop fsubrl adc push xor divl loop xchg or out push dec and add xchg ja int mov lea fs lods icebp or fldenv sub pop or mov out mov dec negl cmp ret mov imul mov xor and add lret mov add clc adc dec (bad) cwtl cmc and and loop adc repz dec popa mov popf push sbbb arpl loop daa xor sbb mov int3 push and lcall cld cmp popf sbb jne cs (bad) sub in aad icebp mov push or jmp push sub mov inc mov stos icebp jae mov xchg call mov mov test ret shrl pop push jmp inc lds repnz xor clc sahf into ljmp sti sub mov mov mov mov pusha xor add inc incb mov cld mov int3 lods and nop outsb cltd stos dec jno mov shrl push add add dec into int and daa stc cwtl lods decl push dec leave inc cmp jns das out cmp out pop mov pop jmp movsl fwait inc ret pop std out loope cmpsb cmp pop ss nop mov and and push mov push movsw clc xlat (bad) f2xm1 add mov out dec out lret lahf dec push (bad) and mov mov push repnz or dec (bad) xor mov movb xchg jmp iret ss push fidivr cmpsb lret xchg lret mov dec jbe into aam and mov enter jmp adc sbb scas adc mov test ret xor out xchg push cmpsb push and or shrb xlat push lcall sub jb icebp mov stc xchg mov sbb sub and adc and out sbb sti or or add jmp lods int3 dec mov pop pop cmpsb mov mov rclb mov loope push mov inc pop jecxz loope cmp ret in ss idiv cmp dec or dec daa push xor cmp fcomps dec or mov adc mov sbb adc mulb out sub sub cmpsb pop dec inc dec add nop jmp inc arpl sub add lahf add inc cltd adc jne push and mov fidivl mov loop mov cmp push dec insb mov lcall dec sub sbb push cmp js and daa mov test and dec sub scas adc mov cltd out sub fidiv (bad) mov popf fdiv and sbb add add and dec mov xlat cs (bad) imul shll push push push rclb push fisubrl cmpsl ja jmp in push das test pop repnz pop (bad) fistpll bound rcl mov out das cwtl fmulp xchg movsb and push or out fsubrs jg dec arpl xor (bad) sub adc mov imul fdivl cwtl scas and and leave xchg mov mov loop pop outsl push pop jl popa mov cmp loope and or fiadd dec ficomp fs in add rorb pop orl loop mov fs add jle das roll negl add push repnz out adcb (bad) mov push mov push mov xor dec and or dec fisttpll icebp push push push aas mov or not sbb in mov lahf or lret mov pop pop push mov push adc add dec or imulb mov or and cli pop jmp xor jg adc push and push fbld shrl mov repz mov cwtl loop ljmp int (bad) jns sub and hlt cmpsb add push add ret mov and pop fstp cmpsb dec mov sbb jne push and or pop pop bound fwait dec psllw shrb iret pop nop jae,pt xchg sub dec mov jge push xor sti dec cmp inc xor xchg or out std add pop pop pop xor daa sub or cmc aas cmc gs and push jb add mov pop mov pop loopne lds push mov adc int pop mov adcl push mov test xchg cmpsl shrb push push adc mov xor (bad) add add or dec negl jp mov pop push mov outsl or pop xchg add neg inc inc xor mov xor addb lcall push fistpll daa pop in movsl adc jp popa add sbb mov inc sbb icebp adc pop dec les mov add add aas jns pop cmp loopne cmp popf jle insb inc or mov or xchg notl call jge test and inc xchg test sub pop push pop xor test inc and xchg lahf pop push pop push xchg icebp pop adc enter lock jge ret out or daa mov fsubl mov push dec mov mov ljmp retw leave or sti cmp push push stos lret mov clc fld add sub sub or adc clc mov jecxz es flds xor add pop jbe insl sbb mov bound pop xchg mov and and add cli xchg mov (bad) mov jl cmp jns fwait add inc push faddl lret (bad) and mov pop dec int3 das std test (bad) jle iret push call ds ficomp and negb or mov and push aam js cli lahf pop lret sbb mov sub jmp shll test or mov loope mov xor and std scas psrlq jb dec repnz cld mov popa add mov movl pop pop int sti lds mov jecxz hlt mov push sbb xlat lret shr pop and jge aam icebp push sar or cmp aas daa xor (bad) xor add loop pop adc cmp jg xor insb iret xchg xlat mov inc addr16 fnstenv scas mov push add mov popf cmp sub scas loopne add rorl aas mov popf inc add sbb jmp or or inc jecxz jl sub pop or cmp or iret aam dec jmp xchg jecxz sbb cmc mov lods sbb test out cmp ljmp cld (bad) xor sub and fwait xchg and xor sti mov inc pop add (bad) xor push push pop sub shrb mov and xor call sub adc lret or lods pop aad sub das jmp ljmp xchg mul xchg lods mov sub or xlat outsb mov lcall jno leave pop cmp (bad) repz add nop out (bad) sub sti mov cmp loope repz es xlat xor lret gs xchg cld std shr or mov mov cmp neg push push jp mov (bad) xchg cltd hlt push lods aas push mov jmp mov pop sub sti or mov ret push leave (bad) hlt and jne push push cmpsl test and push pusha cli ficom out jb xchg cltd idivl fs pop mov inc jge xlat lcall out stc jge pop repz xchg mov mov cltd test les pusha subl adc mov lret movsb in mov xchg jmp xchg call sub int3 and shlb jmp pop xor ja in dec adc dec xor (bad) fsubrl leave cmp fistl ds jb push negl test dec push popf push jnp nop xchg xchg cld les cmp loope mov ljmp shr lret jno or dec lock das xchg ficomp fs mov es and jmp insb icebp dec popf sti outsl dec xchg fnstcw (bad) lret mov hlt (bad) (bad) dec call add xchg stos cltd sahf sub xor jmp dec stos mov cli mov or jnp in out cmp cld mov jmp (bad) and sub xor fiadd jp lret mov (bad) cmpsb mov testb lret sub fmull fcomp sarl jbe loop fcmovu (bad) dec and or and jle ret stc imul (bad) mov inc mov in dec mov dec std int3 cmp int3 mov imul push sbb popf call xchg lds sub jg or pop inc sarb mov cmp xor call inc daa in sub mov js sub inc test icebp mov jno pop sbb mov test insb lcall pop lcall lock add pop jo sub cmpsb or notb dec dec sub xchg es jno add jg xchg rolb xchg mov xlat xor lahf (bad) mov sbb jg cmc xchg fstpl pop ljmp push mov nop xchg xchg sbb movsb sub daa mov das cld das pop ret mov or test (bad) xor mov outsl pop mov negl shrl add mov iret out je push mov test fadds into dec sbb sahf and xchg repz loope cs dec pushf or add andb dec popf mov mov dec add nop pop imul mov sub pop lahf cmp xchg loope sub pushf mov cmp pushf jecxz enter jne and lahf adc test push into xchg cmpl mov adc mov add xchg rcrb inc lods jmp mov std xchg scas mov mov outsl call mov cwtl dec leave ljmp (bad) into fwait push mov mov dec les cmp icebp pushf and push mov push dec in mov (bad) mov into sar out cltd cmp or sub dec add and outsl mov pop xor cmpsl pop fs stos lret or das test stos cmp lock adc mov cld pop xor xchg pop cmpsl adc std lret cmc insb push sbb pop cwtl std xchg or fnstsw mov divl pop pop xor jge lret (bad) iret in movb cmp xor jecxz inc xor jmp add pop mov add repz cmpsl sub sub xlat jnp mov xor and jno cmc xor popf sarb sub or fsubs fiadd sub in aas and jecxz and jp pop lret xor lods jmp dec lcall adc xlat loope imul idivl leave js mov pop lret insl xchg std push test shr cmpsb cmp lret pop jbe jge mov jmp shll cmp pushf mov push sarb rep jo xchg in add cmp mov pop mov mov loop clc and and in (bad) mov nop call lret push jnp movb mov dec pop xlat adc lock loop aam inc lea mov jno (bad) outsb add sub mov sub xor pop daa loop xchg clc data16 sub lock dec mov cmpsb outsb daa repnz in pop xlat dec sbb pop inc stc jne loopne cld in (bad) flds pop (bad) cli ds out lcall inc add (bad) aad add mov mov fdivrl loop (bad) xor sub mov ljmp fdivs jecxz or or pop and out and ljmp inc add idivl repz dec sub lea cmp insb lcall mov movsb shrl mov mov sub and cmp jns neg dec push outsb mov ds imul fild dec cmp mov mov push xor push jae and das fsubrl (bad) sar mov stos stc out (bad) push lret test sti jb pop insb test cli movsl push add or dec icebp inc cmpsb xchg push (bad) mov fldenv stc mov outsl imul loopne leave scas lret ljmp mov add es and stc push xchg leave adc pop or bound jbe adc xor mov sti cltd push ds mov shr mov rcl (bad) jmp pop out in and sub add ljmp xor sti fbld dec mov lds push dec cmp flds (bad) cld mov mov loop test rcr mov lock jo dec mov inc pop loopne inc fs ror xor adcb mov and add mov pop stc xor cli jge test inc aaa aad ret mov (bad) xor inc adc add stc jp in into cli pop repnz jnp (bad) cld inc rol mov jecxz orl mov ret (bad) out (bad) int repnz cld outsb push or xchg or push jmp and int3 vmovdqa (bad) mov repnz pop mov push pop pop ss add add jno sub sub dec jl mov xchg xchg fs lret cmp sub loopne jecxz xchg pop xchg nop in xor cltd std movsl (bad) int3 lret in xor cli leave fidivr dec out (bad) and int3 add test jmp sti mov xor invd loopne mov sub or in (bad) lret xor rolb xlat or mov cli mov sub icebp jo arpl jmp push push js aaa into movsl sub mov (bad) mov flds adc mov xchg adc out aad int3 xchg scas cltd int3 sub cmp leave popf outsl xchg lock es mov push orb cmpsb and push mov fwait aad adc sti mov and inc (bad) add cmc push jne lret mov ret jns dec aam lret add jge mov inc test jne dec inc sbb push inc cmpsl jmp xor and mov cmp or push fcmovnbe daa movsl mov push adc sarl ljmp pushf adc out sub out or andb xor dec cmc mov mov pop ljmp and sbb in sti xor lret mov or lock mov iret push test (bad) xor pop icebp xchg sti dec xchg ret imul imul fbld xchg mov sub add and mov sub or test mov mov or mov mov and repz mov push dec mov out rorb shrl sub andl jbe push pop jns dec testl push mov dec sbb sub jmp add loope stos jne scas repz and in sub jle imul cli fs jp jb dec stc (bad) fnstsw inc dec test shrb insb push xor andb insb jecxz (bad) out mov std sbb call mov repnz test sbb clc inc inc cmpsl imul mov xlat or inc call lods cli push add mov (bad) and mov adc sbb cmp sbb (bad) xor xor data16 dec mov pushf push loopne sub pop mov clc ds bound jno inc jne push dec call mov adc in adc mov arpl pop jne mov lds or cmp je lock mov call inc movsl cmc in mov sbb and fsubs sub sbb or daa iret adc std das pop scas xor fdiv xchg add scas push std popf fist inc mov cmp inc dec jge jmp clc adc mov add lret not jb icebp sub loopne lods sbb mov adc xchg pop nop mov (bad) or out scas loop or ljmp ja inc push call dec xor lods in dec pop fistpl pop cltd sub cmp sub imul loop push dec enter shlb mov fiadd jmp hlt cmc adc not push repnz and mov jnp push push mov test mov pop mov call addr16 in bound adc mov pop sub imul xor sub and sti ficomp xchg mov mov mov push pop out std mov ljmp out push arpl movsl out repz int3 sub clc in popf mov push jo dec stos mov mov push mov sub fwait cli and mov bound add popf rcl vmovlpd ljmp jge int xor pop mov mov fcompl lcall sub mov dec add jne cwtl ja das xchg fnstsw mov daa or add add pop pop mov flds into xchg dec xor sub cld out icebp lock jp in in sbb xchg add ljmp pop outsl leave das push mov loope test adc lds (bad) xor xor sub and jae jl push mov lret dec xchg fdiv pop aam das or add jl (bad) call and les sbb out imul sbb pop call aaa mov sub dec or in fnstenv adc inc pop mov mov sub mov or sub notb aas pop loope movsl (bad) clc insb mov pop inc or mov addl jae dec loop shl cmc add and adc jle nop xchg jmp mov es repz add sbb push ja mov jle in mov push lret pop adc xlat fdiv ss push sub ret xchg int ret imul leave ja jg push js mov jne stos mov jbe mov pop test divl clc pop mov mov into inc inc pushl xchg stos cmp pop adc or xchg mov arpl and pop push fwait sbb pop mov xchg sub scas aam push inc adc jmp lds imul lret sub pop sub pop push ret ficoml aad sub add std sub fwait lods mov cmc xchg and ja cmp int3 in lret rclb daa sub or (bad) xor pop dec sub loopne divl mov or aad pop dec mov and xchg mov and cld jno inc or sbb push and xchg xor jnp ljmp mov test dec decb pop jg bound push pop xlat bound jmp ljmp fisubrl aad pop xchg inc or shrl lock mov xor sub out xchg xchg dec mov xor xchg inc aaa adc idivb mov mov adc sbb push in fwait sub mov cmp add add xor cmp int3 movsb test pop call nop popf aam imul sub add sbb lahf pop ljmp adc inc and enter xchg out inc pop inc adc das jg mov dec jne lds scas mul es bound dec idivl or rclb repnz jecxz push inc pop enter mov xchg mov test repnz sub cs mov mov fnstenv fucomp insl (bad) adc leave lahf sbb pop sub push fs push out lret sub sahf fisub inc lahf xchg xrelease ljmp aam imul bound pushf xor add aas int cmp pop push adc inc or sbb xchg mov out fcoms xchg es icebp mov into enter mov fucomp movsl xchg mov fiadd pop call and inc dec popf and cmp jno dec (bad) push xchg inc mov aad jbe inc pop sbbb repz push sub adc lret test dec lret and adc fdivr xchg lock xchg push mov dec mov stos mov mov cltd or in sub movsb xchg or ficom sti loopne mov or pusha fldl cli mov call ds rorl jo push jno dec push stos and mov inc xor add add data16 lret fisub (bad) push mov (bad) pop mov pusha imul sub fldcw fistpl push adc xor out out (bad) scas int push pop xorl test es mov and sub push aad mov xor (bad) cwtl das sub fnsave push xchg neg jne scas repz mov sub std or in xor mov fld1 aas mov xchg push sub cmp push popf das inc xlat fadds sub dec lds adc mov dec fmuls xchg or pop outsb mov sub xchg push xor jmp cs xchg pop daa sub cltd jmp xor dec jecxz js ret mov stos dec (bad) push dec out cmp in movsl dec cmp adc imul xor xor (bad) test push and inc mov scas pop or fcmovne sub cmp jno dec mov loope push add out lcall fsubrs cmc xchg test pusha xor ds les jnp and xor mov jmp in dec int3 outsb sahf dec (bad) stos lcall xor pop xor lock sub out scas je push add xchg bnd cmp xchg or cli sub divl repnz pop inc fwait (bad) mov rcrl cmc sbb negl pop ret sbb cld adc das repz jnp mov test repz lcall enter clc xor push push xor (bad) jmp outsl in test repz inc testb and xlat xchg and and cs inc push xor dec pause daa push lds mov and mov pop int3 lea mov mov jns cli into lds or pop xchg mov inc pop cmp mov ficoml (bad) sub loope mov je test jecxz xchg mov cs add pop aaa test sti jne push fsubrs dec and loopne jmp insb pop sub lahf lock aaa gs xchg push mov sub mov and cltd arpl andnps ds outsl xor aas cltd mov add dec mov cmp repz dec out pop pushl test (bad) jmp cs mov nop test xchg mov cmc mov mov pop pop ret push in lods pop jg ret inc cmp adc sbb xchg pop test jb ret inc mov jp add (bad) xor mov xor clc lods and fdivl dec xor ljmp push add jecxz cmc (bad) mov dec mov cmpsl and pop lret mov inc adc stos repnz pop loop xchg mov jp popa mov lds sub fadds mov lea daa jae pop repnz mov aas test (bad) cmpsl xchg es cltd (bad) call fistp ja adc cmp mov pop xor lret aam or inc scas insb push xor stos repnz aam pushl push xor and or push adc mov fistpll sub pushf add divl inc sub out pop test lds xor sbb pushf inc jmp jp mov aaa adc scas into stc sub and mul call inc daa aaa pop xchg xor leave sub mov sbb in push dec sub (bad) mov inc or data16 mov ret inc jb test cmp inc xor call dec andb ljmp (bad) xor jmp add xor cmp push cmpsl in and xchg sti jmp shrb cmp mov dec jb xchg ret and les sub pusha xchg mov repz (bad) push int3 fadds cmpsl (bad) mov mov cmp ret movsl push adcb (bad) and and popf sahf xorl out and and nop cmpsl and pop idiv sub enter xor mov imul les (bad) jne mov ss pop or sub rclb imul in adc jmp (bad) push aam enter xor insb fimull ljmp pop xor sub inc rolb mov mov js mov cmp xchg decb insb std mov xor outsb cmpsb xchg dec mov lea mov sbb and adc fildl sub cmp jo xchg (bad) mov inc jnp repz mov cmp push mov andl les aad out dec mov stos xor loop das negl adc addr16 lds daa out sub adc mov mov std dec ja daa jmp mov lahf push (bad) call sub add ficomp push sbb and xchg adc sbb dec into out pop cld out cwtl push int3 sbb std mov adc mov sti sub fwait pop and push popa (bad) sub inc leave mov mov fcoms pop mov imul dec enter std (bad) sahf sub mov fisubl adc out xor push in inc loopne sub mov lods cld and sub out fsubl sub enter xchg jecxz (bad) xchg xchg test mov ljmp js sbb add lret aaa adc add or negl rorl sbb psubb pop mov add int3 or gs xchg out out mov les icebp mov push jmp sbb popl fs push cmpsl push pop sub push loopne mov mov ret imul inc movb fwait daa lret (bad) xor ss in lds (bad) mov hlt fld1 or mov mov leave cld xor js sub int3 jno stc xor pop mov mov jg add cmc adc rclb jl xor outsb inc and aas loopne rclb (bad) cltd fisubrl mov sahf mov out add mov les sahf in fcoml cmp (bad) pop in cmpsb inc movsl push fcomps (bad) aad add sarl scas pop pusha stc loopne daa xor push mov fidiv fucomip add jmp sbbb sbb mov adc (bad) pop pop dec pop push sbb fldcw mov push test (bad) ljmp ficompl fisttpll and add mov or sub ds stos in xchg xchg (bad) fs jmp aad and andl sub add push mov inc mov cmp pushfw sub push add sbb xchg inc add sub dec lret divb sbb jo lahf pop xchg gs (bad) jmp or out ffreep fs ljmp cmpb (bad) jns and mov leave mov jg cli lret xor inc int3 pop xchg adc or mov or call xor sub aas lret in cmc rorl sbb and and repnz enter push (bad) xchg xchg cmp or ljmp mov cmp xchg stc or jecxz inc rorb mov add cmp ja xor pushf leave sbb test js test mov scas out pusha sbbb (bad) sahf and ds push cli add in mov loop xchg cmp push and xchg test test xlat mov test sub xor adc repnz (bad) push mov mov mov mov std cwtl pop sub xchg push xchg jp jbe das dec xor fwait jge pop push or popf cmpsb popa mov das rol popf dec (bad) rorb popa cmp dec push repnz jne scas fstl arpl jns iret adc (bad) adc or mov int mov pop adc rcrl cli lret scas xor rcr mov inc xor sub bound fnstenv imulb data16 leave lret xchg test dec je ljmp pop int ds sub rcrb fildll clc ss mov sbb push adc mov sar mov sbb imul and xchg out mov loopne into xchg or sub add rorl xchg xchg xor pop inc mov push inc fnop xchg sub push adc sbb add mov pop jo in lahf and mov icebp das mov and jle (bad) ret fistp sub aaa ret cmc test cmc sbb xchg pop das mov xor dec out add push shrl and imul inc fucom mov xor aas dec loope sbb cmp xor clc leave fcmovbe adc dec loop dec mov loopne (bad) daa or jne xor push lret jmp into aas inc and imul int3 or sbb push dec (bad) out cwtl div xchg stc inc imul dec push jmp add inc arpl out pop lret cmc xchg scas xor xor sub out fist jecxz sub ss outsb pop adc movsb sarb aad pop xchg hlt mov (bad) sbb and xchg pop adc mov dec adc nop shlb jmp ljmp add jns lods hlt int pusha insb (bad) stos scas inc xlat mov jmp adc mul push pop je pop pop or gs or and lods mulb addr16 fs out xor dec pop iret xchg fbstp loope push inc xchg dec loope push push dec stos int3 cmc jno popf (bad) cmp int3 inc sub out scas jp and mov mov daa or test sub push (bad) call mov test mov dec pop mov rorl lds adc jecxz and loop (bad) rorl lods vmcall xchg and and jns test mov cltd outsl notl lret inc movsb jnp or cmp dec clc imul (bad) lods loop jge jg or add (bad) jne out mov ret mov aas subl int sub lds add xlat or mov iret lcall sahf popa (bad) xor ds or or sub push pop jno ljmp sub test pop (bad) or leave repz lret nop sub leave mov in xor xchg xchg daa dec out xor mov jg jns imul (bad) iret leave dec ljmp xchg xor andl mov repnz xchg lcall scas mov lock add mov cmpsl movsl jmp pop enter aaa push aam push dec ljmp pop mov test in (bad) rorb push pop push and repz leave cmc cmp jne sub shll fcoml push pop leave push or lds mov cmp lock mov and mov in loopne call imul or ror jns mov mov xor fistpll jl outsl nop daa adc repz or push lahf dec dec in adc fcoms notl cmpsl daa call icebp je divl sarb mov cmpsl jne jae imul dec out pop pop ret adc mov sub or mov lret lret add sub stos sub mulb stos xlat mov loop sahf dec jo or fidiv fbld mov enter add stos fnstcw loope test pop pop ret push jno jns jnp dec (bad) jmp enter iret push push cs jle pop into cld in aas dec xchg and inc adc jle stos arpl stc cmp cltd (bad) xor add fdivrp or xor (bad) ja lods daa lret sub dec mov jns in sarl pop pop mov inc cmc mov and sub in jg mov popf int3 int3 xchg fidivl nop imul mov jnp dec or jmp int3 sub or (bad) xor scas xchg push aaa pop sarb outsb cmp sti fsubs stos fs sub inc xor divl cmp jae popa repz or adc push adc mov jge imul call and out xlat scas inc lahf out add aad xchg and jns aas lods xor ret xchg mov jmp cwtl add xchg inc mov mov dec dec or imul das shrl pushf aam adc dec fnstenv sub movsl sti mov imul jne out jne lods imul aam lret fnstcw xor ljmp int3 dec fsubl adc add movswl mov gs scas aam mov xor cli sbb outsl xor and dec mov movsl hlt nop add or iret dec and (bad) jb and add ret push jp fsubs mov hlt addl mov pop push sub xchg movsb dec lds cld xchg mov adc in cltd xor inc dec or (bad) jbe movsl loope enter jbe or cs icebp push (bad) xchg mov sbbl xchg rclb pop test (bad) mov (bad) push js pop push dec push dec cmp pop add mov xlat clc push dec pop in inc ret shr fdivrs push or pop push cli cs (bad) outsb lods gs push (bad) push cmp add repz push add xchg rorb mov (bad) stc cs inc gs js fistp jp pop or jle lcall f2xm1 add sub cmpsl repz or push push outsb repnz xorb mov into or add call stos ljmp mov add rol loop push mov jnp ljmp or ret dec push push pop (bad) xor ja xchg inc mov ja cmp add xchg aaa inc or mov test out add push xchg daa push mov add or or jne cmpsl movsl fidiv mov or add add adc leave mov sbb push push pop lods leave pushf out add aam jle (bad) mov push jmp dec (bad) insl aas dec or fdiv add cld push pop sub pop loopne adc jg pusha push out or jge imull push push sbb nop push pop and (bad) aaa inc (bad) lock scas testb xchg hlt xchg jge mov sub adc icebp pop mov and mov pop xchg pop add sub add cmp cmp dec cmp adc or mov jae iret ljmp cmp pop icebp sbb lea sub (bad) cltd cmp icebp mov xor xor daa dec push and dec imul lret ss xchg fildl adc shll mov pop cmp lret in roll into add add and rcrb jo adc in cli mov inc arpl jmp mov mov dec and pop xor or mov pop fs fstl stc fsubrs xchg leave jg mov (bad) mov mov decb rcrb dec jo sahf mov stos push pop lcall imul mov and movsl fs push push mov adc stos test push inc mov in int das fs push xchg loop inc push adc daa mov leave pop pop xor adc jmp and xor insb add push mov repz imul and leave popf push push mov lret push add xor in xchg mov cmc dec fildl dec test adc pop addr16 scas je pop pop push cmp pop je mov sub xor (bad) mov dec add dec aas dec xor pop mov fs mov shr divb cli out popf out cwtl and jmp xchg std xchg stos pushf test xor adc (bad) and repnz sti xchg sbb mov jle (bad) mov cmp bound xchg and jmp daa fidiv (bad) lods jno and inc or xchg out int3 pushf adc ret mov xchg fsubrp imul pop inc lret daa bsr sbb sub fs push cltd ret test popf aad lods mov mov or push cmp jo xchg cmp sbb and (bad) mov xor or sti xchg gs lret std cmp xchg inc dec ja sub adc add xchg movsl xlat cmp call pushf xor mov ret dec sub xor aam stos idiv popa js stc mov pop ja sbb sub cmp inc jle cmp jmp call fucom repz cmp jmp xor iret xchg sbb pop xchg inc notb pop in das add mov inc fdiv ljmp sbb mov push or sbb xchg inc cwtl cs and inc push fwait sbb inc in in daa aam jb jecxz (bad) mov jg dec push rclb jecxz lret sti jo icebp lock xor pop rcll jo je je push sarb mov and and and cmpsb pop jp (bad) aaa push mov mov ret cmpsl pop xchg stos bound movsl std adc xchg jae imul xchg mov mov andnps inc test lret cs daa cmp stc stos cmpsl stc and movl mov or or inc adc xor adc arpl sub cmp scas and pop out or or cmpsb aas dec mov and mov dec enter jg and in dec mov adc xlat and add sub sub mov mov test stos jbe push pop insl je pop sti stos jge jle pop stos inc inc mov insb aam add mov mov call sbb inc adc frstor mov xchg decb scas repnz inc xor mov add int3 loopne pop lret cwtl dec and inc pop mov mov mov iret stos lret mov dec jecxz xlat leave or into mov js mov data16 daa adc mov clc popf pushf cmp repnz add cmpb popf inc adc sub sub xchg push mov xchg push jmp jecxz lret les (bad) scas mov das jmp jae sub fdivp xchg into outsl lahf mov mov mov (bad) dec xchg (bad) xchg mov push nop int sub add dec ret int3 cmp mov dec inc xchg test pusha xchg add inc adc push adc fisttpl pop add aam int3 mov mov dec sar mov cmp ret or push mov or pop lock test mov and or roll fsts ds div cltd mov fidivr push testb fidivrl cltd dec (bad) and rorl sahf fisttpll mov xor int3 call sub mov xor jbe (bad) dec sub mov xor (bad) xor lods ljmp mov inc or (bad) or into xor popf jg or mov (bad) jge aad ljmp pop mov dec jne xchg push jnp (bad) mov xor pop mov out call fdiv and or lret pop sub repnz frstor loope cmp pop or sbb cmc (bad) jne dec jo jmp ds mov jmp push mov jmp mov mov popf or sbb push lret or add mov inc je cltd inc push sub xchg iret stos repz jecxz out sub jl mov xor or mov and in mov std pop add ljmp sbb repz pop pop mov and push imull push fist sti mov push sub gs jmp mov mov shl sti adc sub push std lret pop addr16 (bad) jns repz rorb push and mov call jge xchg popf pop mov xchg xor cmpsb stc add pushf enter aad jg push push push sbb or mov push inc out je imul rorl sti jge cmp gs cmpsb cmp mov das mov mov xchg mov flds push sarl imul jno add jmp lock or and lret test mov cld out mull cmc xor inc cmpl imul jb lahf pop or add and dec (bad) repnz mov shlb repnz xor push mov movsl mov pop gs mov fs lret pop jmp lea and pushl insl mov cli xor push mov aas jmp cmpsl xchg lcall (bad) mov push daa xchg push pop xchg lds (bad) inc mov push inc xchg xchg jbe pop mov adc (bad) mov dec loope js mov hlt mov ret (bad) or fbstp imul and jmp (bad) out (bad) jno fist test stos add and xor jge addl mov jmp in xchg loope mov rorl fdivrl jp enter icebp loop pop int3 or xor ret add xor cli mov aas arpl stc dec xor mov in push sbb xor int cs push xchg insl bnd add out xor (bad) fdivs ja cmp das clc inc lret (bad) jle leave jle das jbe pop jg mov cld mov rcll jb sbb sti insb shl xchg icebp inc pusha mov mov into gs mov or ja sub mov sub jmp cs mov mov jbe jb mov jnp mov dec movsl call pop xchg xchg dec pop daa mov hlt or fiadd or xchg fsubs daa out inc mov adc xchg cs sub push sbb outsl jmp mov add popf rcll xchg (bad) adc out inc mov dec adc mov xchg out ret jg outsl mov xchg out add movb cmp xchg ret jp mov and orb push and xchg or mov jge (bad) pop cmp xor mov mov ficoml mov hlt cld dec sub fs and dec popa add out xor pop repz inc dec outsl lahf je fs out lods sahf hlt pushf cmp out mov dec add mov mov and mov dec add cmpsb or cmp or outsb and xor push jo popf mov xchg fnstsw sub mov scas cmpps sub std jno mov mov loop out out xor xor push fisub jg mov daa jle rorb push mov adc dec sbb jl add xchg clc dec ret xor and ja pop mov (bad) jno bound (bad) ja xchg xorl add jae xor mov dec xor loope cmp cld pop lret rcll rorl pusha and sub mov call imul sub xor leave add gs mov imul sahf adc in enter mov es adc stos je push call add or inc push sub jo (bad) das gs adc lret add dec mov (bad) addr16 movb xor dec xchg push xchg xchg lods jge dec inc jne adc mov adcb fiadd add adc rolb (bad) lock in ret and sub lds daa (bad) into sub loope push dec lods or mov sarl or mov mov ret stc daa popf xchg stc inc or rorb (bad) pushf mov push adc or pop (bad) pop jp add sbb cmp aad dec push in sahf xor adc (bad) jne mov sub jmp adc mov push or pop movsb adc jae mov (bad) aad push sbb push es sub mov sarl push mov inc add mov add add jge add sti xor idiv pop ret xchg mov ret sub push cmp cli popf mov push pop arpl mov xchg lcall dec popl mov mov (bad) sbb sub jle loopne (bad) or cwtl and jg and add ljmp xchg divl fwait int3 out dec imul xor scas sub pop add pusha and and lret or fisubr mov call ja frstor sarb aam pop jg mov (bad) adc fstpt (bad) data16 xchg and scas xor pushf jl imul or and cltd out cmpsb or lock icebp jp idivb sub pop or adc (bad) jle pop insb mov pop lahf cld nop addr16 or jmp pop pop rcr syscall lahf data16 sub add sub imul cwtl cmp sub shll cli repnz frstor in jnp and push ret mov and movb xchg shl mov ljmp scas fnstenv mov (bad) add add outsb pop mov es pop mulb ret inc or (bad) jp loope sbb fs pop lea aad dec mov cmp mov cmp shrl xor arpl (bad) and out jb leave mov inc loop notl mulb shrl mov push cltd mov push (bad) out icebp inc inc sarb leave stc and movsb lret out (bad) pop cwtl adc aas xor shl mov jo sbb xor aaa sub add and adc xor fcomps rcrl bound pop (bad) stos sti notl shll sub and stos mov pop repz pop jg xor push lret xchg pop cs ljmp stos push sbb mov lret xchg pop out cmpsl sahf call sahf pop into out jnp jmp fisubrl jmp sbb movsl adcl aas lods fldz mulb add ja repnz pushf repz sarl jmp adc cmpsb (bad) xchg lods mov mov repnz mov cmc push icebp mov ficoml cmp inc repnz and (bad) xor mull mov movsl adc lds xchg adc repz addb push test out pop or mov dec fnstenv jle cli add sti addr16 inc xor xchg out sub aad cmp test lods cmp push pop sbb and xchg jmp fs aad minps rclb call or in xchg mov lret or sub jne ret lock xchg cmp ror (bad) xor jne jno pop mov popf outsb test or dec push sbb loope xchg push out push xchg adc fstps in push mov mov sub (bad) xchg (bad) pop pop sbb jle pop out jl cmpsb mov xor and jg out push into cmp pop push ja lock xor and sbb pop imul push sub loopne sub rorb push cli add idiv daa lret sub repnz mov pop pop mov out rclb mov or iret pop xor sub cmpsl dec pop fcmovnu xchg mov mov xor sbb jbe dec jp ljmp sub out mov repz jge fptan popl pop leave jecxz repz mov or mulb out push icebp sbb lret jp (bad) (bad) lahf pop hlt push fldenv xchg sbb fcompl mov fiaddl enter xchg pop xchg pop adc negb jecxz inc dec out sub jae jo sbb out add lret and int3 jg dec (bad) cwtl push idivl movzbl scas mov cltd pusha cmpsl jo pop out (bad) mov mov mov ret (bad) inc movb push jnp adc out mov inc push push cmp cld cs mov stos and scas sub cld sbb jl cmpsb pop mov jl and and repnz adc mov out mov fcmovne sub (bad) (bad) xor mov xchg mov sub pop mov inc scas lret mov sarl andl in shrb mov inc xlat outsb or (bad) or sub sub stos inc sbb xchg mov fcmovnbe out jg punpckhdq xchg (bad) les les outsl cmc dec sbb movsl inc and mov xor scas xor aad cmp in adc mov idiv dec rorb mov jmp add lahf (bad) subl cmc daa jge fisttpll or pop jp sarl and add stos add mov sti cmp jno call add leave jle mov adc and aad xor test adc subb das loop xor adc sub push or fisubl das mov sbb call sbb test shr sub cmp jo xchg push mov sbb loopne xor adc xlat les sub pop jo xchg fbstp push sub mov ret adc sub sahf lret ss push outsb adc test xor sti jg jge loopne ljmp decb mov push in (bad) into stos loop test xor mov sub movsl leave repz pop rcll adc fistpll sar xor pop ret or xor imul clc add into or popa repnz mov mov mov push cmpsb inc or inc jmp aaa mov clc dec jmp sbb sub jno inc shll mov cmp cmp (bad) sbb sbb mov repnz icebp lods jl out das sub mov sub mov mov movsl jmp push std lods lahf mov dec mov and xchg lahf xorl daa lcall and std mov cld xchg (bad) les (bad) lock xor daa sub in ret fbld lea daa lret (bad) mov jo clc jbe mov dec lea popf mov loope sbb out and jle (bad) mov (bad) dec out (bad) ja pop xchg sbb mov aam fs adc cmp sub (bad) xor out mov and adc loop pop pushf cmpsb mov sub pop xor xabort (bad) or fnsave or mov shrb bound mov lock mov cmp push xchg pop into xor mov cmp je (bad) enter (bad) cld dec loop stc rcrb add add add sub sub pop dec dec popa pop add cmpsl hlt or lcall xlat and loop xchg repnz dec jg adc cmp pop pop test mov mov jg outsl leave inc (bad) aad pop dec loop pop xor sub ret mov out aas in pop sar les push lret out sbb xor es mov pop out pop pop and mov insl cmp push mov aam lret jne mov jg or ds mov in pop xlat bound sub and and in (bad) rorb and xlat or add push sbb inc out aaa add push fcom idivl mov jmp call and add enter push and (bad) jne popf xchg lahf xchg or push shrl push imul xchg into mov push sub dec lds jmp out in sbb (bad) test icebp adc fcoml fs push mov aas mov jb mov xor or loope insb dec movsb push mov stos fcoms imul jne mov popa movsl mov js pop (bad) aad lea mov mov xor mov xchg push jmp imulb je pop jmp ret movsl out pusha sbb test xor popa ljmp mov push (bad) out mov in mov mov cmp sub pop xchg inc ret add (bad) icebp and jnp fs lea repnz sub gs sti fstps cmp dec out lret in xchg test sub and sub (bad) pop add enter rorb daa jmp mov je dec add dec rcrb mov lret jb movb out lods std push bound xchg mov add sub lea inc jo pop jns inc or mov xor in jb mov shll jne lea fcomip sbb jb lret pop pop ds stos in xor (bad) jno xchg lret xor cmpsb or inc mov lret jne sub jecxz rorb mov and scas mov icebp inc xor call popf add dec mov add fcomp jbe leave dec (bad) ljmp dec or imul mov popf negl xchg dec dec ljmp mov xor xor js mov ss xchg insb mov push sub les mov xor ret mov sbb mov data16 sub and adc in add xlat (bad) cs push stc push jmp imul xor nop push lahf adc das mov xor out dec ret jo sub loopne gs pop sub jmp push mov mov lea and pop fdivl test mov sub xchg clc push cwtl popf xor imul (bad) arpl add loop les iret mov jns sbb cld jno sbb test add idivb fdivp jmp pop mov ss test sbb (bad) dec cmp test sub adc mov dec (bad) cmp loopne movsl dec xchg rorb and mov loopne xor dec pop (bad) xchg dec jmp outsl sub mov (bad) sub ds daa dec mov ret xchg pop mov test push pop in mov loopne (bad) sub mov push adc out dec cmc pop lret cltd cld outsl shrb imul dec adc test cmp in sbb mov cmp lret aaa pop jmp jle add fst sub das fisttpll cltd ja mov call daa rcrl ret outsb lret and push mov pop test xchg out add add or leave (bad) adc int3 jl inc cli ficom dec push pop mov ret mov test sbb sbb bound jmp cli fdiv xchg decl inc lcall adc stos jne push clc lret jmp ljmp ror and loope out xchg inc jmp add pop (bad) mov dec adcl iret out dec fcmovnbe cltd mov jg pop pop mov add leave inc mov xor xlat addr16 mov ds pop sub lahf sbb leave cmp dec or rclb pushf sub add test mov xor mov xchg push add sub jno das jmp xlat add call jl lds rol push add mov dec imul xchg ret mov shrl lods fwait mov out push jmp cmpsl inc inc test dec pop pop dec shl dec enter add adc fnsetpm(287 fst call push pop icebp mov lret call pushf in dec sti (bad) lds ret pushf mov xchg pop sahf icebp gs in outsb (bad) mov mov lret (bad) mov gs xor (bad) out shrb sub not push pop cmpsb adc out xor dec decl nop mov sbb xchg and xchg dec clc (bad) mov imul xchg (bad) jmp xchg jno (bad) mov and pop mov call inc pushf rcrb fidivl (bad) scas mov dec ja push sub lea and std pop push sub jp dec fld rol das cld cltd leave aad idivb scas loop xchg sti xchg push gs scas adc and rorl stc adc push push mov add loop xchg pusha popf push faddl xchg adc les stc cld repz jg push fadds pop shrl mov or (bad) call fyl2xp1 sub (bad) icebp lcall mov mov test sub out inc push push lea mov clc mov mov in ficoml ret inc and push shrb xor pop and fcmovne jmp dec les mov xor dec lret jbe loope xchg mov movl repnz dec xor sub add jmp xor bound rol jae dec mov (bad) push dec add add out push (bad) gs xchg add xchg fwait insl test lea subb test mov stos clc push movsb clc (bad) xor inc push lret clc stc xchg lds mov hlt dec sub frstor and das negb cmp mov add mov push mov mov or jno xchg sarb shrl sar dec xchg call xchg stos jbe and loop shrl pop mov jnp fwait xchg std gs icebp mov xchg movsb icebp fstps xor cmpsl mov sbb jmp fdivrl xor push aam loopne data16 icebp xchg into pusha mov or mov pushf pop (bad) xor out fidivrl mov ret sbb dec pop sub pop adc xor inc test divb mov (bad) pop test daa xor (bad) out or jle xchg stos lret mov push iret or inc lods daa push in or (bad) imul dec add ja inc idivb pop (bad) negl sub push xor sub stos sub sti cmc xorb jmp inc cwtl add add daa clc bound in mov sub leave add sbb ret hlt adc das je into push inc pop and ret lock lods pop std mov jecxz xor inc mov jmp sbb and adc jle adc jmp xchg sar jmp dec add loop adc repz (bad) repnz lds dec stos test icebp imul jbe add (bad) jbe fldcw popaw push icebp sub jecxz es cmp push (bad) cmpsb pusha add rorl mov jmp mov ret call stos adc loop xchg repz std xlat mov sub ficomp pop adc fcmovu repnz cmpsb cwtl das (bad) ja cld les cli ljmp lret mov push rcrl rorb lcall ljmp iret xor inc push incb (bad) pop add push dec (bad) (bad) sub jp or jns dec push inc divb clc sub adc dec jo inc dec jns or sbb test dec fstpl or out lock cmc push (bad) cli ficompl add and mov (bad) cltd and mov pop ljmp and cld inc movsb mov cmp scas xchg std xchg add and in mov loop jno imul in cmpl int3 das and cmpb xlat mov cmp cmp mov popa aam mov (bad) pop xchg lea sub (bad) cld out fldcw inc add sti sub (bad) ljmp mov mov jp xor das sub (bad) or dec (bad) into mov imul lods pop movsl xchg add pushf ret adc js pop loope in negb mov nop sub or testl or fwait xlat repnz ffree mov and in int out lret (bad) pop lcall push data16 mov cmc gs aas test mov jle leave pop dec jns adc repnz and push mov out cs popa (bad) mov scas outsb (bad) jae xor stos sub mov cmc xor push add adc pop or push cmpsl add mov mov xor adc xor sub fs stos mov mov loop push add and fucomip jno sar and push and daa decl inc push (bad) das std xchg xchg jbe cltd lea in mov aas bound or pop out mov add pop jmp ret mov out add inc es into pop xor mov adc sub mov sub or loope pushf push test mov dec ret call xchg adc fiadd ret push je gs sbb jmp xchg repnz into or pop add jno and cmp daa out mov pop je mov into jmp ljmp adc repz inc icebp cli addr16 add dec imul add inc mov (bad) pop xor and xchg push das mov imul inc lcall (bad) stos mov rep sub repnz repz push lock repz aaa in sub jmp sub into mov adc rcll addr16 or or add xchg jnp movsl bound dec dec jns mov mov (bad) cmc cwtl or cmp ret notb cmp (bad) imul (bad) pop das or pop mov loope inc cmp lahf xchg jmp xchg mov cmp adc cmp cltd pop or leave jne cltd das dec sub sub xchg adc call xchg adc sub rorl mov and dec dec sbb (bad) mov test popf movsl in jmp lea cli and add xchg cltd insl inc movsl int3 xchg loopne jp xchg les orb dec sbb sqrtps mov mov add sub je xchg and xor mov push in cltd shrb jne in and xchg push and fsts mov push and mov sub mov daa mov imul mov fnstsw out fldl2e xchg xor jne add add shl sub and sub imul aam inc ret add pop sub out out lret and movsl and or xor pop shl jg iret movsb mov fucomip imul pop jmp rcl repnz inc mov aad jmp or jl (bad) out jmp sti iret adc repnz jmp cld push (bad) mov xor xchg adc ret loop ficom (bad) into inc add sti xor mov xchg loopne aam sbb xchg out out sub sub mov jmp les xchg and lahf push mov dec enter or mov data16 jmp pop imul repz sti pop push pop xchg call gs xchg mov and fcomi test sub mov or lret mov fs jmp inc push jl and je push call cmpsl mov inc jecxz dec mov dec sub adc adc xor insl mov cld xor das out cmp les jecxz push test fiadd pop sub jg sub inc dec sub mov mov pop inc nop out inc ret adc ss jbe and inc and stos ret jg inc dec or arpl ret std xchg or test push inc out push and ljmp push xchg push orl sub and xchg out sub pop mov dec repz in aaa xchg fistl call fwait (bad) enter dec (bad) sti inc lahf xlat mov fist cmp add popf or push dec sub and xchg inc mov cmpsb cmpsl pop sbb movsb dec (bad) jmp adc sub lret jo aam bound rcrb pop out mov into jge lret mov sub xchg adc add adc xchg es or push pushf xchg movsl jle loop xchg and cmp stos mov ljmp cwtl xchg cmpsl jmp movsb cmpsb int sahf sbb aam sub push jl inc xor lahf sar mov inc xchg jg ret lods fistpl mov test pusha je dec orb insl rcll das stos lret pop lock loop aaa cmp push shrb push jecxz lock jb lea loopne mov shlb and nop pop lahf data16 and and dec cmp xor fs or inc jo sbb inc ret repnz cmp movsl imul pop fstl add sub iret xor mov shlb jg push es push or pop mov ret sub (bad) sub mov push sub dec sub out (bad) xchg jecxz movsb and mov je pop loop out mov and inc aaa xor mov jae aad cmp test and inc jmp and (bad) mov scas add dec aaa mov mov (bad) dec jno cmp pop xchg hlt sbb cmpsl (bad) xor js ds roll adc add pushf repz in fsubl cltd mov mov repz es cltd data16 mov pop ljmp mov add loop cmp sbb dec scas adc pop xor or pop enter xchg aas nop pop xchg icebp pop jp sub or sub cs daa ljmp dec bound (bad) dec inc sti sub sbb push cmp dec data16 lret inc dec bound imul cld mov shrb sti push sub jb or xchg mov cmp xchg fdivrl (bad) jge push pop stos cmpsl jg xor mov dec repz shll aas sub test mov inc aad enter movb sub ljmp xlat mov jecxz cmp mov nop push lahf jns inc sub (bad) fist call or jge lock push adc and sub sub xor fnsave mov sub add xor mov ja je push test xchg pop and in push (bad) scas mov incb mov ficom leave hlt cmp push std pop call test movb stos bound xor sub cmp incb loope mov test cmp sbb insb insl (bad) bnd mov std rcll jbe test jge leave mov adc push pop push sub and scas jne sti and (bad) cmp and popf sub lods xchg sahf addr16 xchg test cli mov jmp clc jmp je dec ret loop jne stc jge mov (bad) cwtl cmp mov inc cmp and xor xor xor jmp aas add push mov mov stos pushf or pop gs xchg mov and ja jnp rolb mov test test mov rol adc sbb push (bad) or push add imull aas je int3 aaa sub adc or dec or mov jno inc mov xor shr imul dec mov jnp cli mov push (bad) and out int jle (bad) icebp ljmp popf add idivl and shl xchg lods (bad) (bad) lret pop xchg adc and lret stos iret sub mov mov dec push xchg leave sti pusha xor divb stos ljmp inc cmp sub lds mov inc into xchg fstl pop jmp rorl xchg push imul dec int3 rorl scas int jl xchg clc scas adc xor scas testl scas jmp and out ret js sarl int das cli adc mov sahf dec stc cmp and popf and int xchg cmp cli mov imull lods enter fdivs inc mov mov mov pop les jecxz adc out cmp and pop out jae add enter adc sub lock test add jg,pt dec leave paddusw push ljmp ds pop cmp pop gs or pop push addr16 adc (bad) icebp and test mov mov mov loop shrb ja sbb dec xor or fisubl push cmc dec mov jo (bad) or and mov les ret pop adc sub arpl mov repz lret stc fadds mov cmp popf je adc pop test xchg push sti mov push push xor xor int3 or pushw xchg pop xchg jmp push cmp push mov inc test loopne jg maxps sub sub sti mov add imul pusha enter fsts add jg xchg loop jne adc rcrl cmc scas (bad) fidiv add jae hlt add pop int3 jmp test jg sbb inc push (bad) lea test push mov loopne mov mov mov dec add add xchg push iret rclb push movsb sti dec loop pop xorl xchg add jle shrb lcall push sub and rcl or mov add pop sub scas ds aam add cmp sub neg add add xchg repz inc xchg out mov sub std idivl out or jne add imul lcall shl xor xchg (bad) outsb ja fnsave xor pop ret sbb fsts jle ja aaa les mov xchg gs lahf sbb pop not pusha ljmp (bad) pop mov out loope (bad) icebp lret movsl stos or xchg divb das cltd pop and or mov jg jbe xor aam and and pusha sub or mov xor xor in mov sub fimull sub pop and (bad) or adc and divl in jmp popa lret sub repz push imul mov pop mov pop mov repz and or sub push cld or imulb mov mov mov xchg sbb out and pusha (bad) mov jnp xchg das add dec je xlat (bad) fs das not add in ret jmp or repz mov push loop sarl inc cs sub popf (bad) inc add jmp popa test mov dec (bad) fstl mulb sub or mov pop sti scas sub push in pop pop out mov dec loope or xchg push adc (bad) xor mov push aas xor xor ss in cmpsb sub shlb inc mov mov fbstp xlat stos mov dec mov clc sub dec push popf pop orl (bad) sub test lret mov das into push clc out mov aad sahf pop shrl pop rcrl pop daa sarl lods (bad) (bad) pop and jge inc fist into decb or repnz and mov fdivl push clc pusha das into and xchg pusha cmp and xor ret pushl dec movsb cli sub adc es js (bad) stos pop imulb icebp push loop cmpsl xlat and mov sbb or loop jns jmp popa xchg add leave lret and adc xchg adc adc test dec mov pop cmc jns (bad) sbb adc jg fldl (bad) in lods pop cli lret (bad) fstl mov iret out dec xor in jle sub pop sahf imul cltd push (bad) mov add ljmp test mov xorb lds add into jge cltd push push mov xchg test mov mov lods and mov (bad) sub jno xor or adc repz pop jns leave (bad) test mov dec sub and jg mov add iret std xchg xchg mov stos int add (bad) mov shrl das cmpsl int sahf xor push fstpt scas rorl mov push fstl out push adc mov es adc and add mov ljmp or test inc mov je adc push jmp xchg jg xor scas gs mov mull pop vmread mov ds aas lret fstps lret fnstenv es fisttp test fnstcw fucomip test mov (bad) test sar add lods pinsrw scas adc sti into pop jmp and test mov sub mov add adc xchg mov mov popf (bad) idivb push repnz icebp add add or sbb test in sub leave or jle jno dec mov insb jns jmp test push push adc xlat in and cmpsb lret cs or (bad) fcoml icebp test cmp loope sub xor xchg mov mov mov idivl xlat jmp mov add fs idivb fldl aam dec rep imul dec add dec jnp sub dec push push jg xchg mov popa add bound pop pop outsl adc mov lret loope push mov cltd outsl mov sahf add add cli mov or lock (bad) or cmp mov rorl negb sti mov pop stos cltd fldt imul jae xor aad mov insl mov (bad) (bad) hlt sub inc xchg mov ja push addl adc ret inc jnp fsubrl std xchg pop mov mov xor stos sbb pushf pop jmp mov repz and daa xchg sub cs mov pop fldcw rcrl mov jecxz pop fiadd test sub stc pushf add jecxz jno dec add mov popa imul punpcklbw sbb push mov pop push push pop popf lock push xchg hlt jmp and adc push mov (bad) cmpsl add mov outsl call das inc loope frstor call inc sub pop outsb shlb adc cmpb ljmp cmp ljmp cltd sub lret mov mov imull mov stos xor cld frstor (bad) rorl out mov dec dec jae je shr rcll and push dec cmpl dec fs in movsl (bad) or mov jl mov andb push das in lea cs data16 lahf push lock xor push push cmp nop hlt xchg stos cmp dec sub clc in nop dec cs and out xchg xchg (bad) mov adc frstor sub cmpl js iret jns push (bad) dec xchg cmp stc jno ret cmc (bad) jb mov xchg pop mov ret adc jbe mov adc dec decl (bad) mov push sti bound cmc mov (bad) mov sbb pop mov add insb xor lds fcmovu add decb insb into sub mulb sub push pusha jo jmp adc push and lcall dec mov xor repz out sub push cmp cmpsb push add aam into shlb mov fisttpl jge jne push pop and mov imul jb add fidivr out ljmp dec popf (bad) mov loop cmc inc and data16 mov jl loopne popf int3 into sbb or cld pop aas mov and mov inc cwtl xchg ret xchg aam push lret inc and gs stos lret dec xchg mov (bad) fcompp or test mov and inc int3 jae mov fcompl jg dec xchg std mov in xchg (bad) xor jb cltd pop out sub in lods pop mov sarb es and push imul (bad) jmp mov and inc lahf (bad) shrb add les jecxz or fadds push int3 dec das xor push or xor or popf bound (bad) sbb int3 xchg repz subb (bad) stc scas pusha and bswap pop popa mov leave push push in sub int3 jb rorl push pop and cli or mov scas mov dec mov daa push pop ss push sbb aas fstpl jp or daa sub pop cmpsl cmp fstps pop test out scas pop pop mov (bad) dec sub into lock or push cmp sti sbb cwtl imul pop mov mov dec jmp mov xlat fs sub or int3 mov push fcmove add sub arpl push imul stc add sub das lods ljmp in push adc xchg cmc xor aad (bad) xchg fsubrs jno daa push jmp cmpsl push and fldl sti adc loop xchg stc adcb clc pop outsb adc xchg pushl sub sub or xlat mov fs leave lock lret or mov xchg adc inc movsb dec mov iret jb lods shr test in xor dec cmp lock lret mov jl aaa add call repz mov (bad) mov xor loop into jno (bad) pop test sbb test mov xor pop xlat std cmp push fistl cmpsl fs mov sub jae cmpsl stc cltd inc mov jecxz inc mov fcomp adc xor movsb inc mov fcomps in sub xchg jae test sarl jne enter xor daa xlat (bad) cwtl outsb mov lret rcr add cmp and das jp cmpsb data16 rcrl mov mov into test mov mov loop decl xchg and rcll imul mov leave cmpsb cld popa cmpsl inc dec and xor xlat add imul mov dec enter lea popa fisubrl and xchg xor pop icebp sbb dec mov sub pusha or and dec mov imul dec scas xchg sbb mov lret icebp cmp leave lds js sub aad jmp outsb mov (bad) cs jb imul (bad) ffreep sub (bad) stos sub xor mov imul xchg test daa (bad) cltd clc xlat outsl divb cwtl inc ret and xchg repnz or mov cmp lock bound adc repnz dec cli popf pop cmpsl sub pop push (bad) scas jne out (bad) out add add pop imul add fs insl out or cmpsl mov fdivr xchg adc rorl mov or not pop lds mov cmp pop pop xor mov icebp mov push jo lods jbe cmpsb lret notb imul out (bad) in div int3 inc jns dec (bad) jo fs dec xor add xor or fdivr jmp push push out adc cld jnp mov mov stos int sub jg and lret or fistpl xor xor jmp mov mov push sbb int jne lret (bad) testl sar icebp cmpsl sbb push add (bad) (bad) pop jecxz adc repnz repnz xchg loop xchg lods shrb xor mov cld add push push or pop mov ds nop inc xchg push ficoml cld fs lods ja mov test inc pop xchg push cli mov pop out xlat bound ja or xchg inc jmp sbb mov mov push push repnz sub jne jle dec fdivrs inc mov stos subb add ss in (bad) add ret jne lods add cmpsb mov stc xlat (bad) xor mov jbe imul out and negb cmpsl push aad inc lahf (bad) xchg iret scas mov or enter xor cmpsl mov cmp clc jg adc and lods js sti pop add add out fcom jmp mov mov mov sub dec pop imull sub pop icebp aam sub xor sbb gs aaa in fsubs push xor inc sub or int xor mov dec addr16 (bad) mov jg dec lods sti cmpsb mov add roll sar popf inc out ds dec (bad) mov out (bad) (bad) mov mov jg jl inc mov lret mov rorl stc gs xchg xor (bad) and sub mov jg outsb push cmp or mov clc push pop push sub push or int xor scas and cs in aam lret fisttpll adc sub insl or pop sbb ds sbb xchg push sub cmpsb (bad) enter add dec add xchg xor (bad) cli sbb jmp fsubrs fmuls clc sub sub jecxz push fisubrl ds jge cld iret inc (bad) and bound (bad) aaa aaa mov dec add sub into pop repz lcall in inc sarb stos fxtract sub mov fistp lcall aam movsl sbb xchg not push adc dec leave or inc ret dec ljmp push mov dec push or and push add popf mov insb lds loop mov dec push inc add cmp cmpsl xchg out or jnp sub dec sti sub popf sub or jns mov (bad) sub dec or mov or xchg jle leave shlb stos or pop gs sub popf je push jl movsl mov neg bound daa out jecxz and xchg ficom (bad) arpl (bad) leave call scas cltd pop fdivrs (bad) das lods cld mov jmp dec leave or mov and repnz call adc pop test cmc sub scas movsb (bad) int jo or cmp sbb adc (bad) mov gs bound mov test subb or push lods clc pop xchg gs lcall pushf in mov daa ret mov loop cli (bad) xor dec xchg mov mov push cs decl xor sub pop dec jne icebp and xor or fs sti sub mov and decb or test mov mov pop cmp or xor (bad) repnz (bad) aam mov push push mov push sub clc stc mov (bad) xchg mov scas cld insb mov mov iret imul push mov in cmp out dec and test leave adcb ds pusha mov push mov push fadds shrb test lds movsb mov movsl mov jp outsb xchg int3 repz clc imul pop ja xor outsb mov push icebp inc mov imul or jecxz or dec push mov nop xchg decl jno mov add jp std (bad) jne pop lret and ret stc (bad) mov xchg shrb fisubl push shrl and inc in sub (bad) and mov sarb out jbe add cmp sub push jmp dec call mov data16 cmp (bad) and or cwtl pop shr (bad) aas data16 int3 xchg sub add mov fist jle pop out lods fdivl mov cwtl lret mov aad ret aad out lods or out ja mov adc xorb inc add insb out popf pop outsl jecxz (bad) or mov rclb mov sti cltd test lea adc inc lret cmp mov jb pop add dec stos sub cld dec loopne mov xchg repz mov rcrb outsl sub ret lret lea jns imul dec sti popl fmull notl stos (bad) mov into lods jbe sub rolb pop imul lods add mov clc add clc and test clc fistp icebp xchg sahf lock (bad) dec mov adc xchg sub faddp sub xor inc xchg xchg enter insl aam out ja mov addr16 aam sbb cmp (bad) bnd jge sub ljmp lret xchg (bad) lcall sub mov mov xor sub sub addr16 xchg sbb push lahf jnp or sbb xor sti xor inc mov in lds mov pop pop fs out dec pushf ret mov sub mov or rorl aam popa xor mov inc test adc subb test xchg int jmp mulb jle pop (bad) mov xor mov and pushf sahf adc mov sbb notl notb jne mov bound in add add mov mov in dec pop mov stos or add repnz gs fdivrp mov ret xor push push adc mov ds mov or mov movb mov and movsl pop repz mov mov inc mov push and pop loop aad mov mov (bad) fidivl pop bound adc lahf and cmp out (bad) mov cli mov sub popf and push mov xchg std push adc mov inc cmpsl cmc in lods (bad) fstl mov pushf roll lds mov (bad) jge jge or jmp add ljmp xchg std sbb mov xchg push lods loopne xchg pop ljmp ret sub add xchg out pushw (bad) jae dec (bad) dec xchg call repnz stos sbb jne out popa xor adc xor sbb jo stc push leave nop (bad) dec scas mov add xor sti int3 mov xchg out incb inc popa add das fcoms xchg dec or or lret adc ljmp xchg js lret addb pop cmc jae mov std insb xor or inc leave push lahf mov xchg sub or cmp in xchg cmpsl lret jmp sbb scas cmp xor daa xor mov mov scas fs add add imul ja test dec in dec ljmp into ss iret daa push xchg mov daa xor out xchg clc ficom xlat shlb jno das or stos inc jge out popfw jbe es in adc pop scas and (bad) sub les cli ret push xchg les ss orb pushf mov mov or aaa xchg mov push mov lods mov pop and test add or pop out mov push or sub jg cmpsb adc pop mov mov sbb add lea (bad) mov idivl movsl or ss pop (bad) xor add icebp js leave ss dec mov repnz flds mov xor lret adcb or mov (bad) outsb addr16 loope into jns rcrl mov aam divl mov dec mov scas sub add mov (bad) adc or inc es cli aam ret std push hlt mov pop pop sub or jl push into scas icebp pushf outsb mov mov xchg mov jecxz ficom push pop mov and push push iret sub out scas fs mov pushf enter arpl mov or stos xlat scas fs lea fildl inc repz dec add lock nop mov cli cmp aam or xor inc out movsb iret out (bad) fcomps xor push dec movsb push xor adc pop int sub das repz jge add movsl cmp pop dec pop pop pop cmpxchg mov repz pop lahf mov loope lods xor int3 mov mov xchg or incb pop test notl lds dec (bad) sub mov xchg outsb dec out lret add pop out fstl int3 enter divb ret pop cwtl faddp sbb iret addl pop adc popf loope shr sarl shr dec into into repnz pop stc inc xchg sub sub pop push mov push fdivrs push call aad dec xchg push jle or pop pushf cmc push mov mov lret out pop xor shrl (bad) pop pop adc sub pop inc gs inc loop rep pop mov xlat mov repz test jmp dec fucomip xchg das leave ret push scas inc xlat nop loope push and cmc sbb push inc push leave fistl xor and and mov cmp shll lods adc push push jo dec push xor mov mov push fdivs jl jne in jmp xchg mov dec cmpsl or rorl xlat cltd push add mov add xchg ss xor and fcomi dec fmull pop in mov mov sbb add jmp insb ljmp cld (bad) mov inc add (bad) fist add sub cwtl xchg repnz pop test in inc sarb add cld (bad) ljmp pop out mov lods push lret imul flds mov pop adc pop bound cli xlat xchg and lret push mov pop je mov xchg pmulhuw mov push inc mov mov push sahf mov dec scas dec lret xchg movswl scas sub dec rcrb cmc in fldt xchg sti pop or sub fs scas sub jnp xlat into ja dec or cmp mov or std insb dec mov (bad) lds fadds lret pop loop lods xchg cmpsb test loop mov inc out leave ljmp mov ljmp add lahf jle in mov xor lods jns das out cmp xor mov and push pop mov dec ret fcos dec (bad) outsb in mov xor aam enter dec sub rolb test daa loop push bound enter add shrb sarl pop out and push or stos or stos popf insb idivb mov mov rol add enter inc xor data16 inc mov mov cltd mov int add and adc jne sti xor data16 movsl add add jmp das dec inc in test test cmp xor xor test fs mov jle or jne mov and inc and cltd std push jno xor fidivr cmp (bad) test rcll inc repnz mov jbe xchg inc mov leave out in xor repz push push mov sub lcall xchg push sbb test or mov jle aas pop out sub mov mov in sbb jecxz push cmpsl mov or sti icebp subb lahf scas cmp sub inc in cmp idivl xor mov adc (bad) std jl ljmp test jg or mov out testb jmp jo mov fcoms cltd push xor les cmp cwtl jnp ror adc shrb add (bad) mov call mull fimull mov insb outsl pop repnz cmp int mov test pop add xor sti test xchg or movb xchg pop gs jle repz xor sbb scas bound data16 dec leave sub (bad) aam add jno fwait adc mov cwtl pop pop lahf xchg and add cs xor mov jns aas in mov and loop loope and xlat in mov mov insb out cld and ja cs dec mov inc push adc xor or add mov insb or (bad) jbe call int outsb int3 (bad) and neg mov imul add cli icebp fsubr (bad) (bad) (bad) mov neg (bad) sub mov data16 sbb dec and ret dec sub pop cmpsl add jne stos mov inc xor lret xlat movsb les adc (bad) je mov jmp cli sub xor int push out popaw fs sbb cld imul jo dec sub cmp jmp or jae (bad) repnz or dec mov sti dec adc push pop adc sub (bad) sub push mov cmp cmpsl fisttp (bad) movb dec (bad) stos fs (bad) mov ds xchg nop dec mov mov dec out xchg rcrb loope dec pop jns fsubs fsubl mull daa subb pusha mov mov add and clc mov lea add cwtl mov addl add lock jl out inc adc ret xchg or ljmp aaa push push shrl scas or lret cld adc sti and cs sahf dec lahf je pop and loop xor jnp fiaddl xor xor jle push dec dec push xchg lret in mov pop adc (bad) dec shll sub leave xor in ret xchg mov dec xor (bad) outsl adc imul xchg mov ljmpw pop lds cs mov jmp and mov movl mov cmp inc enter out daa xor lock lahf mov aam pop push xchg popa lret icebp mov outsl or (bad) in out test std pop jmp mov cmpsl (bad) lret sbb les sbb test or mov mov pop mov push lea and addr16 mov in fs repz ljmp add and loope (bad) dec xchg dec call enter sub add in in enter and gs cli repnz iret dec je loop dec mov jns jmp inc arpl mov mov pop sti fmulp push cmpsl cmc xor into stos pop mov jmp add notl add mov or repz sub add mov cs jle mov sub das add int3 xor lods out mov dec jmp mov adcl pop loop mov push sbbl sub bound dec sbb xchg mov repz imul rclb jae mov xor push repnz std push shrl in das int3 lock and jecxz pop adc fsubrs mov (bad) pop test adc sub and sar loop dec xchg jnp (bad) xor loop pop add adcb (bad) xchg aaa xchg incl les out push jmp push clc cmp in push adc lret push clc clc push lret or repz mov pop mov jno pop xor sarl xchg pop xchg sbb call or pop mov add fildll fidiv bound xlat roll fs and (bad) ss inc xchg dec pop mov push test das leave loope in cs cmc push sub jp pop shll ret xchg js icebp lret divb inc dec (bad) out sub sub test and in and loop (bad) push (bad) mov or notb imul and call sbb cmp movsb or (bad) fistpll fs outsb xchg loop dec clc fwait dec int3 test dec into inc mov sbb shrl cli adc mov mov scas imul xchg idiv lret out in out cwtl and (bad) or jp mov xor (bad) jnp jg out syscall xchg pop dec jmp mov mov das stos cmpsb sub xor (bad) xchg jp mov test cmpsl shlb jmp imul idiv xchg or pusha add lock xchg or (bad) (bad) mov iret pop push ret xchg out sbb jne pop or dec test fstl dec sbb ficoml pcmpeqb mov add lds scas adc lret sub jge pop popf cltd sbb (bad) lret add lea sbb mov cmp repz sub enter xor lds xor dec mov push sub cmp sub rcl flds mov cmp aam mov xor out jmp add (bad) daa sbb icebp and test out mov xor and pop and sbb mull pop ret jmp cmp mov (bad) arpl ret gs bound sub sbb push lcall inc out (bad) pushl mov sbbl in and imul pushf sbb (bad) lahf jae add mov push cli mov jae pop or pop adc mov (bad) inc lret push sub lods rep mov cli jne scas bound lret bound cli fisttpll fisubrl xor jnp sarb add cmp or mov imul jbe mov aaa and and addr16 push (bad) fistl sti xor xor pushf nop dec subl je pop scas sti jae adc or jle inc je bound jo dec sub in jo or adc frstor pushf jmp cwtl inc pop (bad) movsl push adc sar dec movsb dec add mov xchg popa sub cmp repnz pop xor push sub repz xor loope sub jae jge sti xchg test add add (bad) xchg loop mov inc out popa dec add ss dec mov mov movsb (bad) push mov or mov xchg or stos (bad) jmp ret adcl sti mov jno jg xchg pop pop (bad) dec call add adc (bad) stos sub out std adc and sbb mov inc mov push adcl sarl mov sti lods shlb jp nop mov sub push insb iret test aam imulb pop into inc mov inc xchg sbb int cmp scas sub sub xchg add mov pop movsb inc mov push sbb fnstsw daa push in xchg sub inc xchg stos adc psubusw out sbb pop popa sub adc sub scas jl ja int3 pop scas xor fidiv (bad) js imul and and jae xchg xor std lods std xchg dec call sub add mov pop ljmp fwait (bad) and inc flds sbb out xor daa mov or jbe sbb add sbb or pop mov sub pushf jne dec std gs cmpsl push pop dec sub icebp mov iret outsb or data16 lahf push leave cmpb and daa and mov inc (bad) push sub ljmp (bad) pop mov jmp or push pop pop sub and in out pop jne clc in les fsubrp out and (bad) call inc pop pop ret stos mov popa jns sbb adc xor jp push scas popa pop testb movsb sti xor testl fpatan lret or in test dec mov ret addr16 (bad) out xor mov sbb ret (bad) mov out xor insl dec insl dec xor sar push jmp cmc in (bad) sub test bound jae dec jge jb and enter out xchg pusha mov imul (bad) cmp loop push push xchg adc add mov add idivl sbb xor add sbb mov jp (bad) lock out lahf push sub sub enter xchg daa cmp pop pop loopne out xchg inc push xchg pushf mov clc xor fiadd push rcrl das sub push mov movzbl mov mov je imul xchg iret scas mov mov mov and jge lods movsb sub ljmp add xor sub cltd sbb cmp or mov jae imul insb int js mov adc ljmp and or add push inc fsubrl fdivrl (bad) lods xchg imul dec xchg ljmp (bad) push insb out (bad) idivb jle push jg push or and sbb adc scas sub pop or cld sub jne ret fidiv stc (bad) ljmp loope lret push adc sbb lret or negl sbb stos dec mov sub (bad) or lret ret insb jmp lods xchg popf xchg adcb xor sbb and imul and inc and pop inc mov ffree shll xor mov jno call and stc popf fistp adc mov popf mov cli hlt xchg call mov sub cli mov adc ds and sti out mov hlt out pop xchg ljmp mov sti sub xlat lcall pop add fstl ficoml push popa or lock adc lea adc lret mov test bound clc jne jbe xor hlt lock xchg mov clc mov stc add or mov or out notl mov lahf daa lcall sub dec imul push leave insl in jns les push mov jb (bad) jb pop mov lret sbb clc cmp clc nop sarb int3 mov inc subb push inc ffree and sub cltd mov bound popf xorl sub je mov pop ljmp jb adc imul dec dec cmp and setbe lret jg mov sub mov xor ds push xor fild iret add mov dec or push inc inc cmpsl jae and and sbb in or in aas std pop xchg repnz and cltd mov fsubl aaa call sbb or sbb jmp stos or and sar mov fs insl orl cltd and mov daa sub aad rolb pop and mov imul cmpsb movsl jle inc pop mov aaa leave or xchg dec mov sub scas inc add mov xlat dec pop fwait iret push (bad) out mov ljmp push movsb lock lea push mov (bad) arpl ret insb in xchg sub in test mov or fidivl scas sub mov xor cld and (bad) cmpsb lret inc (bad) jbe push ret stos pushf ficom sbb or jmp inc pushf pop or add sub xchg push mov repz pop int daa sub jmp and das ret test adc jecxz sub or repz ds dec aas lods (bad) fidivr mov and and popf mov inc add mov push pop xor xor fstl dec cmc push inc or stc sti mov fs cmpsb adc mov std fisttp lock notl push repnz lea adc add das xor cld in movsl and mov test push es mov inc cmp dec mov inc push orb stos test pmaxsw iret ds pop xor out jg sub lret cmp or imul popa xchg cwtl int add cwtl jecxz add fwait gs call out out sub mov xchg sub loop add xor pop (bad) lahf in (bad) out mov pop test xchg dec mov std inc outsl sub pop push in and and ja adc push scas sub mov or lods jp xor ljmp pushf lods test sub repz pop mov lods insb add test out push cmpsl xchg shl lahf adc push xor mov push and pop mov add xor and add jmp jno and pop in jmp mov adc mov aaa jmp pop add stc push imul cmpsb or cli daa mov stos inc out sub inc data16 cmp ss and and and pop mov cmpsl mov adc xchg xor aam stc orl add pop xchg mov jg stc ret lcall dec mov pop push fstpl stc push (bad) xor mov fdivrs sbb ret pop mov xor pushl adc fsts out in sub adc inc pop pop mov sub xchg pop mov xchg push fildll mov inc push decl xor mov pop repz std pop jle pop add das or jno lcall xlat or pop (bad) stos pop inc mov mov sub std xchg jmp or cltd test loopne push pop mov xlat jno xchg loope jecxz and lahf icebp pop cmpsl pop iret or pop in sub std sbb hlt push pop add xor adc cmp push lahf pop test push in xor mov mov dec mov push pop hlt inc or (bad) rcrl movsb hlt out aam (bad) or pop xchg xchg or repnz arpl or cmp mull inc (bad) jle jmp add jae call sub inc mov daa sub hlt das push sub xor add inc sbb or pop xorl dec inc sbb sub sbb sub sarb shr pop mov push sbb sbb lret pop xor dec pop jecxz pop sub (bad) push dec int pop fdivrl or loopne push xchg dec mov or mov fbstp into ja and inc or adc or mov push int3 gs bound mov in mov pop push mov pop xchg cmp daa (bad) push hlt cwtl inc jmp mov xor pop add mov add mov sbb sarl and mull adc jp push in push push pop push (bad) pop and xchg jnp daa pop inc mov popf sub push mov or push push adc call neg insl (bad) hlt adc cmp outsb or mov negl fdivrl cs cltd cld lods or cmc pop mov pushf out add sbb xor fldenv icebp pop mov lret inc pop daa inc add into xchg dec xlat cmpsb (bad) dec ljmp cmpsl pop pop or mov int3 das iret movb mov ret or add repz fnop push sahf pop lock enter out and fistp lods daa das cmp les mov xor ret pop sub and das or pop cmp outsl sub xor mov out in idivl es aaa repz testl lds push rcll das push das or js fcompl imul mov push jns daa fdivs inc and add incb ja ljmp mov test sub xor fsts flds sarl mov stc jge js adc pop pushf jecxz pop mov and aaa xor jmp pushf jne push loope (bad) stos xchg cmpl jbe sbb into mov adc push cmp cmp enter dec xor (bad) stc sub loope add jg mov mov lret into dec mov imul cwtl jecxz (bad) stc loop mov pop pop mov jp mov arpl fcomps ds mov and (bad) cmpsb sbb xlat leave xor xor ljmp xchg dec add loopne push inc das ss cmp ret and inc cltd jno pop clc scas jns das repnz xchg mov mov xchg out lret sub and call iret cmc out dec sbb mov sub jle cmpsl cmp jns imul lahf push sbb out clc shrl aaa das ficompl mov adc data16 loop fbstp cmp in jmp rorb jp dec pop cli sub mov sub add lret and std or cld push (bad) (bad) mov or and or (bad) loope pop fadd or out int (bad) jo add scas lahf inc jo ret xor scas out imul scas and mov add rcll push pop imulb pop hlt adc xor add imul and ret xor mov ret pop (bad) repnz mov push ret and out push push fisttp lahf jns in mov testl add stc add test inc inc xchg insb jl lret aaa fwait and adc daa insb xlat lock ret sbb insb (bad) stos mov loop repnz aas inc or mov hlt (bad) or ljmp jecxz push cmpsl bnd pop (bad) mov vdivsd pop in scas sub xor or aam and add (bad) mov push xchg jmp jb push or and ret mov pop mov ret cli loopne mov pop mov ljmp leave in adc rorl mov add scas lea mov pop shr mov jmp in out mov and cmc ljmp adc (bad) imul fimull push repnz xor fcomps popf dec mov rolb scas inc shlb lret inc icebp dec add stos cltd lahf stc shrl inc dec lcall cmp xlat movb inc in or pop pop imul gs pop int3 clc fsts sub test inc mov stos xor mov loopne sub mov mov or shll adc xchg xor cwtl aaa negl mov push xchg pop xlat cltd mov fnstcw iret xor std xor or ds and adc lahf pop fldt arpl icebp xchg fstpt in cli sub icebp popf cmp sub adc mov dec clc (bad) das loop inc dec (bad) dec sub inc loope lea xor and aad test mov mov fnsave outsb fstl add ljmp or mov aaa push xorl cmc shrl shr jne pop movsb pop and cld test insb das dec inc fs loope movzwl cmc adc jmp daa cli (bad) sub rolb mov dec ret mov and mov popf stc fptan cmp out shrb add lahf pop (bad) daa jge xchg xchg hlt fsubr mov pop jb jb lret mov dec xor inc dec cmpsb pop adc sub cmp (bad) jae lods jbe mov loope movsb mov lret addb imul push mov xchg jbe sarb ja and xchg sub loope sub in xchg xchg mov sbb xchg add mov xchg (bad) imulb pop clc lcall rcrl fistp sub pop cmp jno test xor stos sbb in push lock xor addb ljmp mov pop add adc addr16 daa inc sub lahf add mov movsb out (bad) (bad) (bad) xor sbb das lds jbe sub push leave add sub (bad) cmp icebp pop cmp sub dec (bad) stos dec mov add repnz push sub cvtdq2ps in lock mov mov (bad) dec jb fnstenv inc mov gs xor or mov inc jle push cs push xor jo lea cmpsl sub addr16 scas jne clc sbb push aas loop xlat loop cmc (bad) out pop mov ror cltd and xchg fcoms and int3 fwait mov sbb das and or sbb push xor and mov xchg add jmp inc aad stos cltd mov pop div rcl inc sub jmp andl pop imul inc in int3 mov insb sbb mov or add sbb add icebp shrb std push and push jl push xor xchg sbb jbe hlt cs mov push xlat mov mov sub jns or ret or es inc inc shrb rcrl jp clc xor add out shlb out stc sbb or call rcll stos push pop mov dec xor rcrl popf fist push dec inc cs out pop mov mov mov mov mov cs sub dec or jb iret jg mov into into shll (bad) and loope outsb into aad (bad) push popf push dec lret shr mov fs fninit idivb test repz mov dec sub xlat xchg inc std or sbb inc out mov jecxz push repz ja repz jecxz in lret rorl (bad) mov clc mov ljmp sbb rsqrtps jp add ja xchg arpl jl xlat adc ret and in fisub jo add out and aas fadds cmp mov jg adc popf ret bnd or out mov cmpsl lods fstl outsb pop mov cmp jle and out push mul xor jge dec sub ret mov pop ljmp mov lret stc mov pop mov dec out scas iret or out sub mov push xor (bad) or cmc enter sub cmc xchg adc jmp add jp mov ljmp sub mov push pop mov es jmp ret hlt sbb adc sub insb or ljmp mov out cmp sub mov into push adc lret sbb and add cmpsb addr16 pop push rorl scas push out push into jmp dec je push (bad) jle or cmp jecxz xchg lods loope test mov mov sub jno lods ficomp jge xlat das into inc gs ljmp and inc mov les repnz xor int push sahf mov push cmp or lret add adc and pop mov repz xchg or cmp xor data16 repz cltd cmp iret pop or rolb push scas insb xchg inc enter icebp push adc lea and cmp sbb add out into mov jb mov movb iret jmp sbb jl gs sub mov jnp cmp xor imul dec int ficomp in iret mov (bad) loop dec adc jecxz test and push xchg or ret xchg rcrl add ja jl cmpsb pop sub inc xchg cmc mov or inc in xor push fdivrp mov out sub inc mov bound inc loop iret in sub and data16 or and call sub dec jmp outsl xor divl (bad) cmpsb dec pop shrl ljmp mov jb pop xlat fdiv ret mov clc (bad) rorb fildl sub lret imul mov popf cld mov fs mov cli jns movsl fcomps ret mov sub hlt int jae subb sub mov mov push jp xor rorb out and push xor mov std cwtl shrl xchg and into mov imul mov mulb (bad) fisttp test sub push popf negl popw adc pop mov add dec fistpll into pop repz add rorl xor jge xor imulb add sub or add mov repz movsl or sub repz daa js mov cld bound iret jnp xchg push fs mov sub adc add xor cltd sarb mov push add adc pop ljmp daa adc call push cmpsb nop das (bad) push mov cmpsl pop mov popf repz cltd inc add push lods mov (bad) dec in cmpsl movsb dec movsb cli imul cmp test mov out das sarb xchg add push cld shrb mov int3 fs and or notl mov or stc cmp cs popf xchg cwtl mov (bad) cmp push imul push mov repnz ja inc mov scas xlat push popf cli lcall jge outsb sub mov adc dec ljmp pop push lods call imul cmpsb imul push loop inc fistpl jg sbb xor push (bad) in cs mov or aad ret out and daa lcall clc mov lret sub fiadd sbb add ja ljmp inc adc (bad) fstl adc mov xor xchg mov out jg pop jmp repnz jo dec repz ds stc lea repnz gs mov ds nopl sarl dec mov cmc out xchg repnz or add jle (bad) out mov push test cmpsl lret insb daa adc daa movsb push or add cmp mov loop cmpsl sbb loopne scas lock sub les lock in mov and clc and imul enter cmp jae adc mov inc cmc das gs mov inc dec cmpsl notl shrl mov push mov pop xor lods gs dec dec sub sub cmp xor sub and and mov and xchg adc adc dec fsubs (bad) jmp xor das adc (bad) push jns xor inc sahf sub fdivrs xor cmp fldl cmpsl in cmpsl sahf dec gs jmp xor adc gs out jg das cmp cmp outsl loop rcll (bad) ss xchg fcoml add in or and mov loope mov and mov cltd dec mov rep mov xchg cli idivb cmp lds add out jbe pop adc dec into mov aam leave push push dec popf jge mov xlat mov ja push int3 ds jl and roll daa add push inc or inc ror dec mov fnstenv push push loope cltd out inc and hlt in lcall addr16 out xchg push pop dec pop sbb mov leave cmp xchg add mov push ror stc push cltd add add (bad) (bad) and xlat cmp cltd pop sub mov icebp (bad) rorb rorb ja (bad) movb test dec imul testl sub ljmp lret (bad) dec nop pop mov daa call push rorl popf (bad) in (bad) lds movsl inc outsl js xchg fisttpl in sbb jmp div dec sbb cltd and xchg jo dec sbb xchg dec lret stc rcrb xchg inc popa mov lods and adc outsb push mov hlt sub push mov repnz xchg mov sub fsts push ficompl movntq xchg xchg mov add jnp mov test mov and sbb xor xchg mov push fcoml xor inc inc enter sahf test cmp and xchg mov pop ret push mov and cmp or sub jne xchg dec mov lds jg dec popa jle std mov test add or or push cmp sbb add and lret mov idivl loope bnd imul or loop test cwtl jo or push and or and or mov sub sub pop cld addr16 in pushl jl xor and mov xchg xor cmpsb fwait dec (bad) xor (bad) jmp or xlat mov xchg icebp in cmpsl lret aad mov pop insb or (bad) ds dec and out dec lea sti rcll enter outsl ljmp fist or mov fdiv (bad) mov xchg pop sti lret mov mov push pushf std xchg sahf mov decl out in out ret jnp icebp imul cmp sub (bad) xor mov out cwtl sti repnz fcoml push pop cld lock sti lret xor popf dec stos xor dec mov repnz test lret push (bad) fucom push push call cs mov or or dec ds imul (bad) clc (bad) mov push outsb add pushl inc cmp lret inc loop test or xlat clc (bad) icebp add cli scas add aas add sub std das scas adc mov fld jg dec or sbb test out push or add push jne dec pop jo out or mov bound lcall mov imul pop repz addr16 dec out fcomps imul popf jg sub pop jne and push sub mov loope mov and jl mov push (bad) insl and fidivrl leave jg mov enter pop stos xchg and rorb daa adc mov mov int3 push fmuls sbb inc pop xchg adc sub mov in mov dec test call das (bad) and add jle pop sub scas jnp mov pop sbb dec scas mov and add stos imul daa pop pop out xchg ljmp popf decb or add dec shr dec mov fisttp lret and lret mov mov cwtl gs das xor lcall lods jns popf add loope push mov cmp icebp popf inc mov pop lds lret or and and shrl xchg out mov lds jbe vpaddsb loop and stos gs stos xor idivb das push mov jno test xor and or jle leave das xor clc ja sub fsts popa mov and pushf imul pop dec inc fs jmp pop lret mov imul shlb sub and push and imul or mov scas ja pop pop xor fist mov loope fidivr mov sti xor mov movsb xor sub mov or popf push xchg icebp xor notl (bad) add pop ljmp add ljmp or sbb xlat or imul into (bad) lcall std fcom mov mov sti mov sub cmc stc fildll popf adc add bound (bad) in (bad) lock and mov test mov cmpsb xchg sub sbb mov push repz nop or sub mov sbb popf mov lock jp xlat dec add or into lret into cmc adc push add mov xor cmpsl sub scas cmp add mov jnp inc sub cmpsb add and loope sub push cwtl sub push cs adc xlat jecxz cmp stc xor stos mov dec mov sub divb lock sub sbb adc xor sub mov fistpll adc xchg in inc (bad) ljmp imul scas sub inc pop add pop fcomp lret stc or inc and adc mov push push imul addl call call stos and mov lret pushf leave fistpll mov fnstcw and mov jg ja mov mov (bad) and pop std adc pop out mov pop test push push xchg (bad) das add pop dec pop imulb adc repz stos mov push scas aas add out sbb cmp mov cmc dec inc fdivrs cltd dec mov lret int sub test shrb inc adc and setl mov xor mov pop mov je stos fstps lahf cltd and ret or or add outsb adc push pushf inc sub bnd add loop (bad) cli cmpsb push dec and lds cmp and jne (bad) shrb and jmp add cwtl fcmovb dec sub or mov adc rep gs int3 and pop lock in mov sbb cs sub add xor add push std addr16 cmp fldcw jmp mov jl and and jge pop stc inc mov dec mov fdivrl cmpsl lret imul daa pop dec icebp ja mov roll ss (bad) or inc pusha add mov or fistpll dec lret mov sub xlat hlt lea xor dec sti mov dec sti scas cmp notb out adc out je push xor and or xchg pop clc push movsl mov adc pop ljmp sub addl push out push add test (bad) adc dec daa call loop test cmp mov lods xchg pop mov add dec call mov (bad) xor and ret sub imul xor aam jg sub into xchg xor push in negl xor or jecxz jbe divl jmp hlt or mov mov fnstenv ret lcall insl xor int3 aam repz pop or sub xor jne cmpsl pop stos xor sub add xor mov sub cs dec push jmp and jne gs repz aaa jo out mov (bad) ret dec out lods sbb int jmp add js loope xor orl mov dec (bad) (bad) mov fnsave adc mov loope fmulp int cmp add iret mov frstor push mov and clc push add js jo loope mov sbb xor (bad) jne jmp fild push out repnz (bad) sub add dec jnp or cmc das sti sub xor out bound fnsave daa jp dec sub lds repz loop mov test leave sti xlat push add ljmp rcl xor dec pop js (bad) in and jmp and lret mov push je (bad) leave stos lods or lret icebp sbb mov mov std jno lods (bad) mov lret test push in mov xchg testl mov cmp imul jecxz and xor ds cmp jne scas pusha pop adc cmp scas or xor stc push dec jo dec aad mov scas outsl das aas inc mov data16 daa or jbe js (bad) popf mov out lods int3 std js popf movsb enter sub xor sub sub repz (bad) mov aas out pop jecxz sbb (bad) xor mov lcall lret lds jecxz mull xchg std xchg mov mov and mov cltd mov push jno mov jmp sub (bad) call add fwait xchg aaa repz mov xchg leave std xor cmp and sub lds (bad) fadd lcall mov mov mov xor insl insl cmpsb mov push sahf fld jl adc das iret and pushf and and scas mov sub cs push and xchg inc sbb sub call das out xchg pop sbb incb jmp lods xchg enter mov gs (bad) divb and xor call movsb aaa imul mov dec (bad) ss ds cmpsl mul push fdivr test shlb into dec xchg adc cmp repz pop ljmp out adc dec mov and xchg cmp pop mov leave mull pop fcompl (bad) xor scas mov mov ljmp icebp lret cltd out cmp mov ret fsincos insb push xor (bad) in (bad) shr leave mov pop insb push dec lret sub insb shrl sti aaa ja icebp jmp imul adc mov xor push adc (bad) repnz inc push icebp sbb adc mov push dec sub xor rolb (bad) adc add jno pusha and xchg add sub xor jge dec ljmp mov imul mov out dec cltd jg loope mov rclb gs mov add fisubl nopl rorb jg (bad) jb or and add loop add movsl cli cwtl push jmp je inc ficomp add xor out pop push rcr (bad) sub mov test fsubrp inc roll pop lods cmpsb add xor hlt shrl xchg int xor jg add or orb movb movsl add ljmp and addl xchg lret cmc sahf adc inc sarb sub nop cmp lret add test out push adc lahf inc repz repz cli scas int3 mov fwait and out dec scas jo xor xor clc mov add stc in daa hlt sub movl mov or or push sub popf notl out mov jg adc adc cmp pop sub or lret add int3 xchg inc push and daa fnstsw mov add cld adc mov cli jl or ret push or pop sbb add mov sub (bad) out dec test ret sbb sahf repnz popf jns imul jmp rorb jmp stos je scas cwtl cmp xchg mov xor and int sub fist das xlat xor and int3 xchg sarb sbb aaa fcmovnbe lcall dec adc or fiaddl js std and xor mov (bad) leave (bad) or rorb dec lods inc lret jmp lds cmpsl or or out fmul into xchg ja add mov fnsave xchg sbb dec dec cld mov pop dec push mov mov aad add mov rcll imul xchg mov dec cld js push pop add cmp sbb mov or mov stos fucom movsl pushf push sbb pop push idivb jo pop xchg mov dec (bad) xchg sti dec sub adc flds mov inc daa cmc adc fwait daa add (bad) loop not test in or mov aas sub les fiadd inc popa sub leave (bad) sbb pop adc dec mov or popa imul cmp data16 jne inc nop imul mov push dec dec mov aam dec rcll adc mov fnsave dec mov push in es jp mov test imul mov pop leave (bad) cmpsb mov jbe pop sub cli call outsl aad mov repz xor pop int3 or addb mov xchg outsl mov mov cltd mov aas lea ja inc in fsts daa lahf pop mov pop aam stos sub mov jle fs addl and aad lret dec (bad) int3 xor idivl mov jae (bad) push push or mov stos push jno dec pop xor ret test mov lods pop sbb xlat out pushf and xchg call and sti sub sub adc adc and inc xor dec xchg xlat mov ret push (bad) push ret clc aad xlat xchg sti (bad) push enter cmp iret xor mov mov bound ret imul add xor sub aaa jge decb push ret inc and dec dec cli push addr16 daa xor push and mov popa xchg aad dec inc xor aam push mov mov lahf fcmovu push ja sti push add or xchg sbb daa dec test aad clc insb pop xor and add add dec inc sub or add mov push jl rcll cli sbb call mov nop and icebp pushf shll push and mov or push mov (bad) cmp xchg xchg test and sahf (bad) inc or (bad) daa sbb out cmp xchg inc sbb bound (bad) push in and pop push or fbstp push lods aad cmc fstps (bad) push and jmp scas sub sbb mov lds insb dec leave imul das int and imul shrb iret mov dec push (bad) into and xor jge adc jns lret stos sub add cwtl xor movsb mov or es push rcl add cs ret or lahf push mov daa repz dec or or jg loope cmp and mov push adc pop mov stos fisttpll xchg ljmp mov lret pop cltd pop loope insb sub push ljmp lods (bad) lret icebp cmc push ja or icebp sti xor add push sub mov cltd push add cmp sub xor lods lahf fdivrs xor push mov daa add push mov dec cli dec pop dec mov xchg xor aaa sub cmp fistpll mov sbb xorl mov int3 pop xor pop jmp pop mov jle pushf aaa and mov jmp pushf adcl add (bad) mov icebp jecxz jge xor mov mov stc push (bad) jmp sub xor xchg jmp jae pop mov mov lret and pop stc nop insl shlb je add xchg (bad) sti imul insb mov mov iret mov bound leave push mov shrb (bad) outsb push or sbb push or cmp dec jmp sbb xor popa mov (bad) and out add push inc xchg pushf jp mov dec pushf xlat pushl mov gs sbb sbb nop jns xchg pop push popf adc ja out pop hlt mov imul jb or mov dec iret mov scas cltd adc mov lret bound mov (bad) aam aam ja (bad) mov (bad) xor (bad) sub pop (bad) adc mov std dec aam jne mov out pop pop jno add jno cmp mov mov leave fstp or icebp jge in repnz movsl mov movsb out adc and mov idivl das pop jae popf mov or loopne repnz popa xor mov xor and icebp stos pop ja xchg rcl jg int3 enter push dec inc push push adc mov mov and ret and pop xor cmp xor pushf mov adc aam je jnp test in mov mov imulb inc sub and and and pop add das xor jge nop sub popa add mov stos or scas xor xchg mov inc jp lret mov jnp clc out pop mov push mov lea popa inc sub cmp pop pushf jno dec lock or jb jno or rcl (bad) fs outsb sub cli popf add cltd lcall or les add pop pop out lods dec add int cmpsl je push and lods dec ret add out mov call fucomi into xor test and inc leave mov in xchg add sub xor sub push add clc imull jmp or ret arpl cld fs (bad) fist mov cmp data16 mov arpl fcoml sub sub add dec jmp in scas int fimul fnstcw lahf out mov subl (bad) and mull scas sub or xchg rcll es lods les std mov push jle sub push add dec add and sub (bad) sub dec dec leave test mov adc ret icebp stos jmp pop daa adc inc mov leave and cmp fisttp scas xlat outsb fist mov mov (bad) jp mov in adc mov outsl mov dec enter push js or stos lret lret add sub (bad) jge or mov xchg mov add push popa sub and mov or jbe and mov mull in cmp pop xchg inc sub cwtl mov dec jecxz popa pushf sub outsb call into das dec cld pop xlat clc mov sub pop and fstp jg jo xchg jns iret sub xor cld fsubs aaa and sub jecxz xchg imulb dec loope cmp loopne mov pop insb mov dec scas and mov sub shrl mov (bad) mov sub xor fldt shl aas cmp fstl or xor ret sbb add scas jecxz pop jecxz and insb aas aam jb aas inc dec mov sar movsb jo mov js or popa or jmp lret cmp push add pop fwait mov mov cmc xor rorl mov imul xchg dec inc pop repz dec int3 les push adc jb ljmp aad dec fucomp mov scas mov push xlat das jg xor sti xchg mov (bad) dec sub or mov fidivr pop int fs mov cli push or pop dec cmpsl inc rol sub mov or or ljmp fcoms lock and fs ret jp (bad) xor jecxz mov iret imul push mov mov in add adc pop fisubrl popf aad add dec iret sbb es repnz or adc scas repnz mov aam loop mov int3 xchg dec repz dec cli sub xor or sbb repnz pushf pop sub xor lret pop mov jno sub lret cmp add lods mov cmpsb dec and (bad) loopne dec or fstps or into imul push fs scas into iret inc dec flds inc mov leave dec mov mov sti xor xchg mov aaa das test ljmp rolb bound cli fcompl push xchg dec mov push gs lds dec out lret jns sub fcoms stc mov or in ror movsb jnp xor and sbb pop xchg jns enter movl (bad) mov mov addr16 test push ljmp das pop aaa xchg imul (bad) mov xchg inc enter sbb xchg or jne xchg in add fist je out mov and out push cltd push sub fs scas push mov adc add mov mov inc mov cli mov into clc stos mov (bad) cld inc sahf jge lret (bad) pop in les test loop lcall and adc and sub lods push and sbb mov daa mov faddl repnz push imul xor sub mov adc or pop push call int sub lret test daa fldcw cli mov ss xor mov xchg pop or push inc adc mov push xchg cmp or ljmp mov fcmovb repz push mov out repnz or jne cmp (bad) dec leave lods or out mov test negb mov leavew imul xor and sub mov pushf es mov pop dec outsl in sarb push cmp mov rcll mov or cld lret add xlat outsl sub es sbb dec (bad) and pop and (bad) repz dec ffreep repz test fs pop sbb push sub in sti jle adc adc and in movsb out mov inc dec dec jmp inc int mov add pop push xorb dec jecxz push add add push mov pop add pop rolb out lods jo sarl add mov xchg (bad) mov mov shr add loop jnp dec std mov in cs add jne jmp sub ljmp inc push mov jg fisubrl lods inc add inc sbb dec pop push cmc dec aam push and adc sub sub sub or cmp pop and adc pop push ljmp sub pop push stos sbb and aad jge (bad) aas xor lods cmp xor ficomp dec adc notb mov (bad) popf mov loop or (bad) mov sti jno scas inc scas popf in lret dec and jne mov xor jmp lret into daa pop dec cwtl pusha xchg divl lea jmp sarl ret rcr inc divb mov xor xchg inc (bad) mov (bad) mulb and ja cmc mov call dec (bad) lret xchg jle leave jo mov cmp adc fdivrs popf jle push pop mov pop cs ljmp lret (bad) fist imul cltd in outsb mov xlat ljmp lds adc mov ret test int3 imul (bad) push jnp scas in mov pop in xchg loopne add sti addr16 fcomi lods ljmp dec inc mov and xlat flds dec push cmp and popf cld or (bad) nopl mov mov notl inc mov dec add les dec iret mov add adc jl mov icebp push mov and jecxz negb push arpl lods pop jno das call mov (bad) xchg or dec cmc mov sti int lds pushl shr mov mov popa hlt adc fdivrp (bad) xchg out xor fadd insl sub sub loope sbb and or imul or (bad) xor mov mov sbb lds sub mov cmpsl pop ret add add add mov adc shll pop or jns loop ficomp pop mov cld lock xchg push (bad) cmc push cmpsb insl and sub ja idivb scas fnstenv xor cmp dec sbb xchg or adc mov es mov xlat sti mov iret test sub sub adc pop je fldz das mov jo mov divb pop int out add stc inc pop popf in xor inc jne adc pop jns ret sub or sub dec cmp pop fdecstp inc pop adc sub lea inc test push ljmp in cmpsb aaa call jne hlt jne jne push and and mov rcll cli cmpsb movsl test enter (bad) jle jle fbld and mov pop xor or fsubr imul imul in cmpsb shr enter xlat xor fldenv jns push jns icebp adc sub repz popf pushf push mov imul mov ret push pop push repz divl push lods or mov add dec mov sbb loopne pusha push ret addr16 pop shrl scas fisttpll or sarl scas jmp mull imul fldcw add add rcll pushf mov loop dec jp dec add outsl out sub jne add scas add pop mov pop repz push (bad) gs pop mov jle and test xchg jne fwait into (bad) aam pop (bad) mov lret outsb in cmp iret add loope lcall scas adcb pop sub (bad) iret negl cmp sub mov push mov clc enter mov xor ljmp popf sub sub add stc push rorb insb (bad) sbb and ljmp data16 pop jmp add ud2 xor or ja sub fdivr sub pop stos or or cmp aam xor cmp fcoml mov sbb add lods mov (bad) aad mov (bad) xchg cmp jae pop and mov sbb mov fdivs xor cmp (bad) enter add addr16 cmp stc dec enter sub jl xchg xor jnp mov (bad) mov and divl add and xor decb sub or negl pop sub (bad) jo mov add adc repnz ljmp stc iret int3 pop add jge or scas lret inc mov pop pop imul xchg fsubs pop lock rclb pop inc mov xor rclb add mov enter (bad) mov or sbb sarl push mov adc sub mov lahf sbb pop dec cli pushf xchg xor jb xor pushf xchg xor cli push sbb es nop sidtl dec xlat cld negb loopne add mov ret sub mov sar mov shr mov dec sti and jmp adc repz inc xchg test xchg pop mov and fimul divb cmp lock mov jbe xchg lcall sbb add xor (bad) xchg mov inc fldenv loop add inc adc mov stos arpl out and fcomip rcll xor push sub das insl insb repz or fisubr mov jg xchg daa pop out cmpsl adc jp addr16 and cltd cmp cltd and push dec es cs mov mov xchg xlat cmp fisttpll sub sbb fidivl ret mov fadds mov sub push push out repz cltd jl sub cwtl test sub cltd add (bad) mov notl (bad) in daa inc rcll lods jmp pop cmp repnz fsubs in mov lea js cmpsl movsl cli jmp lahf or xor xlat inc and dec xor inc sub sahf test xchg test dec icebp mov cwtl jns xchg jge ja mov mov adc mov and add (bad) addr16 push and sub movsb ljmpw xor dec or rorl lret incb (bad) jmp repnz mov push push cmpsb dec push ret inc mov lret enter jge jnp adc jmp and sbb jmp mov dec mov hlt mov push dec popf sbb or andb push (bad) xor mov pop pop in jo cltd xchg imul push xor out fstpl (bad) xor testl (bad) iret push add push pop xor push mov aad push cmc lds mov outsl mov pop bound xor dec call bnd inc add add daa repz popf adc mov adc jg mov into repz mov pop out das cli pop sbb shrl sub mov sti (bad) out iret (bad) cmpsl dec push xchg in daa xor std in sahf adc or or adc push dec fbld leave notb aaa pop push and ret xor mov gs push pop mov sub push adc pop cmpsb cmp sbb or xchg lcall cmp jge ljmp out xor clc or cmpl adc scas aad mov das repnz push push sub lock pop xlat ret scas adc and jmp sub lea in cmp (bad) mov xorb cmpsl das jge fnsave (bad) or xchg pop xorb sub xor xor and repnz jg cld loop mov jno sub loope js fxch ljmp adc pusha mov mov adc outsl jnp,pt das out hlt adc push bound lahf xchg pop sub call cmp out xchg mov out sub mov mov jne dec xchg add rol pop adc (bad) cli (bad) dec dec cld rol repz or or mov adc les aaa test push mov fidivr push sarb pop bound (bad) popa or cld decl xchg dec sub sbb ret dec xchg sub and sub inc xchg clc mov jmp (bad) xor out lcall pop data16 lock mov aas jecxz daa adc (bad) cmp (bad) mov cld dec data16 jmp jno fs pop popl mov mov sbb mov push loope adc or jb ljmp or in insb adc lret pop imul xlat dec aam fist mov test and sub fs int sti cmp jle adc out lret mov mov sti sub idiv xchg loop sub xchg dec jae xor scas mov arpl and add cltd cs icebp mov int adc imul aaa sub outsb stc test sar fs ljmp dec jg and je mov popa addl sbb adc add jmp mov pop out (bad) gs jecxz adc (bad) idivb add xchg cld sbb and sti lret jmp or mov and adc inc cwtl mov sbb lcall pusha or xor in call rclb (bad) xchg test rcll jnp mov scas push sub fnstcw cmp daa push mov adc push and inc xchg xor out mov or sub repz outsb es xor aaa push sarb xchg pop adc clc shrb xor icebp addr16 push pop iret xor iret add adc bound pop aam push add arpl icebp ljmp inc adc sar cmpsb out mov xchg jno jmp lods pop ror das inc cmp clc pop mov xor and rolb cli cwtl mov rcll pop stos pop ljmp jnp mov fist ret push dec sub pop xor sbb (bad) jmp dec ljmp cmp add cs dec push xchg (bad) jb popa dec mov das and ret xchg daa dec out push pop inc xchg pushl add cmp sub test lret and dec cmp sub mov js fadds lods je stc pop jnp add pop dec les mov dec bnd ljmp pop mov sub mov jge sub int3 (bad) push pop sbb mov scas dec jmp jno mov jne or push adc mov ret (bad) icebp imul movsb jbe mov (bad) js mov inc jne fs xlat nop repnz sub insb notb iret pop add xchg sub push xchg sub aam inc (bad) mov test sti stos cwtl das call cli mov (bad) fptan cs add mov sub sbb cwtl and cmp fild (bad) xor out sub xchg bound push cmovbe mov in loop pop (bad) xor jg arpl sub (bad) lods les rorb test movsb in pop xchg lods hlt dec scas cltd (bad) jae pop push pop lret ret inc cmp rep and and mov xchg pop push push enter push jmp xchg push cmp sub xlat xchg mov loop,pn test fidivl mov pop in adc sub pop out jp ret pop add cmp (bad) (bad) repnz mov (bad) mov (bad) xchg mov movb ret mov lret ds sub lret pop inc push fstl ljmp push shlb and mov loop pop (bad) divb dec loope cs bound pop jmp pop inc addr16 lret sub xchg pop and dec mov jge or jp xor int sub xor sti xor ljmp movsl or int3 cmpsb into cmp jae sbb mov dec repz lea xor roll outsl sub pop imul cmpsb orl andl dec mov xor xchg fwait clc loop icebp mov cmp cmp xor dec cmc fisttpll xor imul jge mov imul mov insl out push fistpl or ror or adc imul pop int3 imul in pop in lcall push call ljmp dec lods out bound dec in xchg mov in dec divb and stos cmpsb ss sub test pop mov (bad) or in push (bad) dec adc xor dec dec idiv xchg add adc cli xchg jbe and int3 adc mov (bad) cwtl lds testb sbb xor jo fbstp or xor jmp hlt shll or cmc daa fpatan jp xor dec popa repz xchg or add dec mov pop (bad) icebp mov or rol test repz add and mov pop cwtl test imul loop mov out leave les call stos das andl gs mov iret leave (bad) idivb or adc rep insb sbb test sbb pop loopne add loope (bad) in xor mov jp add stos mov adc jp xchg daa call adc insl aam push add mov jle orl or jbe imul call inc sub mov adc fyl2xp1 jno sub loopne sub icebp jno pusha into (bad) cld daa xchg or int sti and and out gs stos mov daa fdecstp push ret (bad) pop in mov popf loope mov (bad) mov rep bound mov leave mov xor or icebp jp sahf enter out in je lods lods dec mov adc (bad) out mov stc dec mov js cmpsl sub inc sub bound sub rcll sbb (bad) push xchg add mov icebp jg fsubl cmp pushf mov xchg movsb mov test fwait and dec or fistpll and mov dec and sub cmovnp int3 mov sub mov dec shrb xchg xchg push sub cli mov test in outsl push repz das push (bad) scas fildl pop adc xor and and add or xor add pop mov xor cltd mov lret push dec gs call mov cmc lds iret fsubr ret leave icebp inc addr16 sub or ret mov inc bound notb std mov dec popl push xor into jae daa stc mov fcoms mov in lret ds or sub inc jle add or ret pop push aad (bad) sub push inc sub cli mov lods pop fldl lock ljmp jg mov test ljmp fldenv mov xchg ljmp push dec es loope cmp xchg push ljmp pushf (bad) dec out (bad) jbe push mov outsb push jge mov pop and testb inc jbe shll (bad) sti fcomp add aam ror scas xchg les out xor cmpb (bad) xorl inc repnz (bad) add jecxz or repnz pop jecxz or and cld ss jmp mov xor or popa and ds lods pop and cmp xchg xor jns jp add adc sub dec xchg sub jne xchg xor js (bad) sub dec jle pop mov mov push mov repnz repnz movsl sub jb jne pop push cwtl sbb lock fsub jmp inc cmp mov or add lcall and bound repnz je adc sti or or out jns cmpsl jns popf imull mov out loop mov jge mov test jmp push xor icebp int3 insb push sarb (bad) mov pop in mov jb test adc or mov icebp (bad) cmpsl lock xchg hlt push pop and pop sub xor mov sti rol mov popf imul xchg dec mov pop cmp dec push mov outsl mov clc iret pushf rorb pop mov pushf lds xor scas movsb in add (bad) cmpsl mov imul dec test and out dec sarl cmp inc (bad) dec add data16 mov test and mov xchg sub call mov pop push inc popf sarl (bad) jmp pop loop test and ja adc clc sti ss jg fildl cmc xor add lret or sahf xchg int repnz lea dec or test mov mov rcll push scas daa adc cld mov faddp pop (bad) out cmp gs xor (bad) or pop xor pushf mov loopne and mov mov iret pop bound in lret test loop xchg sbb in f2xm1 dec sub enter (bad) (bad) xor sbb mov or jns inc ljmp push sbb sbb adc or jmp mov jmp mov icebp lret dec fldt cmp loop inc (bad) cmp mov lahf xor hlt lret (bad) mov daa or aam leave (bad) aaa imul js xchg in mov and and xor test cmp sub hlt rclb push das cmpsl movsb and or into stos sub outsl fnstenv mov inc push std stc pop imul cmpsl mov dec dec cld inc movsb fisttpll mov xor sti push mov and fucomip dec or hlt clc in xlat mov or push jg or push cmp (bad) xor xor in fldenv sub mov adc sti mov inc imul scas test xor jae xchg or add mov mov nop fistpll or cwtl popa into pushf mov adc xor pop mov mov jecxz adc xchg pop pop call mov or sti jmp dec test cmpsb adc das xchg push pop inc or das std pop repnz stos pop or jno popl push sub add add sbb ret inc lock mov xchg les sti fild (bad) mulb and sbb inc adc dec call or pop out and xchg mov pop lahf xchg sub jns xchg aas jmp imul push movsl xor test movsb mov sub lret jmp loop sub pop rorb jno imul mov sbb xor lock jne in loop rorb adc gs into cld (bad) mov sarl dec pop mov mov jmp pop add outsl adc sbb jno fisub cwtl xlat pop sti dec xlat inc les xchg out fldcw mov aad gs push adc sarl negb int3 nop push xor and (bad) mov insb nop push xor fs jae clc xor ds pop sbb std icebp ljmp push cmp jae mov stos std lds push cs call jle in pop out scas popf ds xchg sub inc mov add mov dec jb mov (bad) decl jne pop je inc jbe dec jmp movsb push repz and jmp inc data16 addr16 cmp or cld fimul ljmp out sub pop lds pop sarb mov push icebp or clc in loope sub je adc push test sbb inc dec (bad) loop ret mov cltd and dec pop jno mov and xor mov inc scas (bad) shrl scas out cmp test mov les add sub xchg dec sub aas fldenv (bad) pusha (bad) jne add lds mov shrb dec into or stos jmp lret aas and mov cld in sarb and imul push (bad) fucom test (bad) leave mov jns dec je push sub mov pop scas push mov in jno call lds sub ds push jg adc (bad) mov inc push ljmp add xchg cwtl xchg xchg std cmp pushl cli (bad) push cmpsb pusha cwtl (bad) mov scas repnz stos add mov xlat mov std in sub xor iret add xor popf call and xor (bad) stos pop out cmp (bad) mov mov cwtl xor pop jmp push lods sbb adc dec ljmp and shl and int3 repz xlat bound ret jbe jb sti sar jg push sub xchg fucomip push xchg stos or shlb sub jge sub sbb and jmp daa sbb out adc xlat je popa jb sub sub cmp iret das psllq mov stos mov (bad) enter xor decb lar in stos push ds jne lods jnp add enter sub pop mov xorl dec push push adc mov mov call jmp cmp rcl jnp cli jbe cs add or mov and shrl mov iret fstl movsl notl pushf std mov ljmp ljmp push outsb xor sarb xchg icebp xor stos add pushf cwtl inc out push das out inc jl and xchg movsl js sub sub or test fs sar les cmpsl ret mov jne (bad) shl pop push insl jno ret lret cltd and outsb mov mov sub push mov mul or adc mov push sub jl dec pop cltd pop out ret addr16 add xor xchg inc and inc roll inc mov push hlt and push xchg inc xchg or loope out scas mov mov aad jl cld cmp cmpsl out cmp ss stc mov and jne fist das je leave jge lods shrl sub stc ja mov sub or sub dec mov gs jnp test dec sub mov test mov loop jge jmp adc xor push dec xor lods inc scas stc push adc mov add xor inc cltd sbb or rcll movsl xor (bad) mov into push mov scas js xchg xor pusha push or dec sub daa and inc into add enter add sub (bad) and in popf (bad) xor (bad) (bad) mov rorl and or fsts out xchg adc in sub mov pop cmpsb mov into aas adc popf xor push into data16 mov rorb mov jbe pop shrl stos xor jmp sub cmpsb xor push xor pop mov mov xorb lea test mov (bad) dec pop push imul add mov pop cmpl lods sbb xor mov aaa or rcr push hlt fist loope les jp arpl pop or daa cltd fcoml push mov (bad) mov (bad) cs outsl dec (bad) jmp mov fsub sub mov inc imul iret js or or ret stos in or clc mov xchg jae test (bad) mov xlat out stc notl movsl xchg xor or cwtl sub xchg add pop mov add mov jle mov mov pop dec clc inc add and push daa stc jnp aas xchg and rcl mov and add jle inc mov mov push ljmp nop (bad) daa and xlat sahf fmull cld outsb test loope xor dec inc or adc ss push dec mov sub lret lea adc fsubl sub icebp mov leave mov xchg pop xchg icebp mov sbb into and pop xchg fldenv (bad) aas jno xor cmp lret and xor push pusha movsb xchg sub mov sub icebp sahf jnp pop mov and popf push scas pop lock xchg pop xchg loop push inc cwtl scas in cmp iret dec mov aas cld jle mov loope (bad) mov xchg into dec loope sub mov pop jno inc lret mov jo repnz xlat push test wbinvd std enter xchg and ljmp or pop out inc pop and ficomp ds loop inc dec sbb test xor test pushf dec ret xchg pushf dec shrl pop mov or sti popf pop test sub movsb cltd mov loopne fwait dec add out out mov data16 xchg ja neg insb pop sbb jmp jge movsl repz adc (bad) push push repz push sub fdivr clc xchg sbb push divl xchg aam pop into ds ficom sti xchg lods add xor sub pusha inc ds add pushl push daa dec or ret mov xor jbe push out dec adc mov mov add ret sbb cli xchg (bad) cli fs mov sub xor scas dec jbe or test fsub push iret sub jle,pt mov mov xchg mov imul mov inc lidtl scas adc dec jmp mov jmp xchg xor add cmp add push aam sahf or (bad) and or sub jae jl pusha sbb fistp icebp mov das jmp sub dec mov jp push adc rcrl mov ds lret cmp pop xor push jp lea push daa vrsqrtss cmp ret xor mov adc sub (bad) insb cmc les (bad) dec ret and xlat xor lcall test addb scas jecxz leave notb lret or fdivp inc push lahf jl lods rol mov adcb mov loop in xlat int push call xorb stos lret sbb dec repnz mov lret sub dec int ror cmpsl lods jne xchg xlat bound arpl sbb movsl xor mov and movl repz inc mov xchg gs or ds addb repnz cmp or repz mov ja pop mov test or repz pop push inc mov xchg pop push xor ret aad fdivrs push daa inc leave or mov xor dec jae lcall rclb dec stos (bad) (bad) and xchg aas mov add xchg ja push or ljmp cli iret jmp mov mov scas fstpl inc or xor testl or sub (bad) ja xor mov imull mov loop mov push outsw inc into jl pop mov mov out imul pushf int3 xchg inc jp and and fld xor adc sbb adc pop repnz mov xchg shl pop (bad) jge adc and cli mov dec in imul xor xor jge imull sub testl sub pop jnp cmpsl testl sti mov (bad) mov pop push loope adc loop iret incb (bad) (bad) mov xchg xchg fist in push mov or mov sti and jmp jb js dec sarl jno xor mov and push adc int push push xchg dec aam incb sbb xchg pop pushf in sti loop xchg mov jnp bnd mov cli sti popf jno adc idivl movsl ja xor stc sarl hlt jmp dec stos mov pop cmpsb lret xchg sub and mov xor ret js add sub or and pop xor leave push push call push and (bad) push insb iret (bad) data16 (bad) cmp push gs adc bnd cmp adc mov and pop mov dec cmpsb xchg (bad) pop imul dec mov pop mov mov mov or neg gs lods (bad) fdivp negb stc mov sub fbstp cli jecxz daa data16 inc js mov push sub and (bad) (bad) fs aam shll sub sub int3 push mov pop cmp push sub repz test sub dec pop stos mov outsb aad call out push pop out ret insb mov fidiv adc mov (bad) add xchg (bad) (bad) pushf xchg add std movsb sub dec lret out imul icebp daa and loop fsubl push or popf jns inc sub pop lods fnsave cli cmp (bad) mov inc pusha sub add xchg data16 mov (bad) loopne xor add add ret pop push mov or data16 add inc cmc push xchg cli lret mov adc xor cmpsb imul xchg or fistp outsb pop imul mov sub loop ja repnz test leave mov arpl dec ficomp dec sub icebp (bad) push js and out cmpl repz cmp aam daa (bad) mov mov sub cli lret outsb lds clc xor sar int3 mov inc inc sub pop mov fldenv sub adc dec shlb rcrb push out shll inc test das ljmp (bad) push pop shlb ret imull stc ljmp add out fcomip (bad) push out mov daa out jle jmp scas int cld adc cld push pushf add cld lret mov sbb mov sub cld outsl repnz xlat pop mov cmp pop mov outsl adc pop push add push or fbstp xor stos sub mov (bad) jmp test lret and (bad) (bad) jb adc cmp mov mov das out xchg jne les dec or dec scas sbb ret sub mov mov and mov iret test sub int3 dec mov leave and jg cld (bad) mov loop repnz faddp cs addr16 add das cmpsl push push pop pop dec push inc (bad) mov lret mov add loopne mov rorb dec scas cmp cmp jae inc adc push jmp cmpsl pop pushf adc sub pop lods pop mov push int push xchg mov jecxz pop push in mov dec pop mov xchg loop xchg call mov lahf je cmp pop ljmp xchg adc data16 das rcrb pop repnz fstps jnp push scas out pop and (bad) icebp or add (bad) xor mov addr16 xor imul dec (bad) push out leave icebp xlat or cld push imul mov mov or mov neg sti adc mov inc mov idivl xor rol mov cltd or lcall (bad) dec push or dec cmpsl dec jbe jno movsl jo adc repnz in out push push pop adc cmp test lret or add fs scas loop xchg jecxz daa xor sub inc cmp std mov push in xor repnz push mov mov sub loop (bad) (bad) js das lret push cmpb add aam mov into adcb btl dec jmp add add lock mov fisubl push cmp mov push push mov inc lods and (bad) sahf mov fistpl and push loope repz cmp sub loop ret ss adc or or or daa fsubr pop push sbb jmp dec aas icebp pop je mov sbb or xchg jge mov cmp out inc cmc sub xchg add pushf cs add and xchg jle push repnz push mov repnz jg subb test sarl into jbe ret stc arpl mov or loope and mov push mov xchg dec cmp (bad) movsb inc and jo jb xor int repz inc add cmpsb dec pop mov cmp pop in push lret (bad) rcll mov (bad) push push xchg iret (bad) call outsb pop aad add add out out imul lea xchg pop into test out test xlat clc cmp in or mov icebp mov scas dec or xchg rclb or ljmp sub movsb out in mov popf push out pop cmpsl cli dec stos sub out stos fnstsw mov movsb test jge out mov out sub mov dec iret imul scas stc or ds aam sub sbbb cmp (bad) pandn sbb push and pop roll or jmp inc (bad) (bad) and jle repnz std int3 pop push sub lea inc push mov xlat pusha mov add add or mov mov pop push mov (bad) flds push sti fdiv (bad) push sub xchg addr16 or or inc or push jge push xchg lret pop lret inc xor loope cltd mov iret mov (bad) xor mov pop push pushf daa les or popf por dec enter xor ljmp push lea (bad) lock aas in xchg dec repnz or mov sub mov jne nop jne inc adc stos mov lret xorl cmp sub cmc cs push xchg (bad) mov (bad) lret test xor mov (bad) cmpsb leave pop mov icebp outsb mov lcall (bad) (bad) sub pop bound jmp add leave pop pop mov std jmp inc cmp adc or jbe fnstenv inc movb (bad) leave inc in cmp std cltd mov pop stos loope imul lret fldenv out push mov leave fbstp inc sub (bad) (bad) or fstpt or sub shlb leave cs jmp sub dec daa jg jecxz out andb add xor mov test iret jno sub out cltd xorl xor mul cmp push and sbb bound fcomi mov jmp arpl xchg fsqrt bound ret int3 out and xor or pop push movsb xchg add push adc jmp ret mov lret mov sub add add mov push pop xor (bad) int3 testl jecxz adc out repnz (bad) and push lods (bad) jns push lret xchg xlat xchg js pop xor imul add out and ljmp loop xchg and mov inc ja pop cmp out or in mov movsl (bad) cs rcll fisubr mov add sbb popa cmpl lods clc inc cwtl jl repnz rol movsl add and ds mov cmp xor (bad) xchg pop xchg es lods js xchg gs (bad) aaa sub notl and lods cmc inc add xor test mov add inc jg jbe cld loop mov push push out sub jo push add jns mov cmp cs sub das stc in shl out outsb jae and sti mov add inc mov insb ds pusha push add nop or scas test pop daa jg imul xchg mov mov push jg add inc out cmpsl jl lret lds add xor cmp push mov inc rorl ret or rol push lods ja jle lock or shrl add sub jp pusha add (bad) punpcklwd icebp fucomip inc mov iret pop and lea xor sub or mov dec outsl scas mov das jge lret stc adc (bad) mov (bad) outsb and pop shl lock xchg mov lea sub das sarb mov repnz mov ficomp jmp push (bad) mov fistpll and pop inc daa sub inc cmpsl jg mov fwait sbb push push lahf pop clc rclb add push pop xchg ja xor pop or sahf lock inc data16 enter not add pusha rol js jae sarb pop (bad) test test ja dec fmul call test inc sbb lock pop cmpsb pop pop les (bad) shll outsl popa jl mov xchg mov xchg jge (bad) push sub lods xlat lea jp outsb mov ds aas dec xor jnp mov fildll daa and add sub push clc lret pop and (bad) pop scas (bad) or jecxz jmp rcl out jb call ja mov in xchg das stc enter cltd pop cs and pop scas lret in ja mov mov pop dec aam ret jnp pop ret xor push cmp ret cmp sub aas mov scas jecxz xchg ja bound mov or data16 ds jl jnp jmp dec push in aas mov sub jbe daa push cltd push add icebp adc sub cmp xchg scas out sbb lcall dec add add xchg cltd lret add push pop pop loop fistpll or call add (bad) cmp push xchg jmp out pusha fisubr xchg je sub or mov sub outsl adc push jmp sub dec sbb shr aad sbb daa xor xor hlt mov (bad) ss fsubp adc dec sub dec lret mull sbb data16 pop pop inc out pop jmp (bad) sbb ljmp sar lret (bad) jbe or sub push ret cmpsb icebp xor and shr inc (bad) sti lret cmp add iret sub or xor mov pop into jbe mov in out mov xor mov pop xor daa jno mov mov push ljmp sbb push clc leave push pop gs jmp xchg daa mov or fildll in into mov fbstp aad inc xor adc fild aam arpl mov add jbe imul jne pop xchg sarb or and xchg into jne test loope add pushf clc mov and leave mov icebp dec dec movb adc bound and imul mov ret xchg pop mov xchg clc cli fcmovb fdivrl adc call cwtl pop scas ss cwtl jmp pop scas addr16 ja adc aas adc popa dec sub xor jmp pop jp test xchg or mov mov mov out adc scas mov shlb stos rol sbb and fucomp jl and mov mov andb lret out dec xchg mov pop cwtl or divb and pusha dec or daa rcl cltd mov movsl sbb or cmpsb adc xor sub cs out popf jbe jb loopne out mov (bad) or dec (bad) ds ret cmc gs out int and (bad) pop push lret es cmp push add out mov out jb repz rcll movsb sub jbe cmp dec mov pop leave and dec ds mov lds and scas lret imul sbb out mov loop leave sbb jb and sub mov adc lock pop out pop rcll xchg loopne xor and jg add (bad) mov and dec mov dec inc sbb out leave divb das dec hlt dec mov sbb aaa jle (bad) mov ja shrb bnd push (bad) dec lret ljmp jne test mov pop test mov jg (bad) mov pushf dec adc movb add mov sub sub pop mov and mov pop movsb (bad) cwtl inc ret mov shll nop test xor out mov adc mov and pop rcll pop in (bad) sub xor pop (bad) enter cli stos xor pop icebp adc mov add jbe mov pop adc stos lret xor loop mov pop lahf lds stos jnp mov mov inc sbb pop inc cmp ret inc jl subb cmpsb pop add sbb sub bound lret dec lahf les stos test loop cmc xchg gs mov (bad) push dec add mov push sub into inc sub and adc add stos int3 jg popf ret fcoml add push or (bad) or sbb sub adc mov push sbb cli cmp adc jns xchg (bad) mov cmp sub pop int jnp ret xor xor jp enter sub clc clc mov into hlt xchg inc ljmp or repz idiv in scas jl les ret clc pusha xor and (bad) dec sti lret adc jp int mov xchg repz jmp scas cmpsl out lahf push xchg incl jle in clc xlat sti nop sub sbb popf hlt jns ljmp icebp push mov (bad) mov xchg cmp pop sbb (bad) ss pop cld aad ret cs inc mov and mov xchg insb add out mov mov cmp adc adc test mov adc (bad) stos out push test pusha mov arpl rolb fist mov push int3 push mov sub test lods push movsl jmp cld mov fldt test clc jecxz push js xor mov ret pop pop vmaskmovdqu add push adc jne daa imul gs jb movl and and jno or lock pop cmp inc test xor xchg jbe imul sub pop lret xlat inc rorb xor icebp mov sub xlat push cltd pop mov popf stc add jle inc and insb add out clc hlt movsl stos jecxz mov or jne loop stc push pop dec mov es or out dec mov xor pop or and int3 je push push inc inc push leave repnz sarl lret or xor bound sarb jno pop xor or ror daa jle and adc jae mov or jae scas jnp xchg adc das xlat pop aaa insb jmp push or aas das repz out xorl xor movsb sbb sub loopne,pt ret std dec xchg das sti (bad) dec mov popf pop and aas repnz pop cltd cmp es push repnz rclb and lock outsl push and ret jecxz lahf mov das out mov add push and jle (bad) (bad) jns inc jmp pop cmp xor xchg sub push subl mov stc mov ror (bad) icebp cli movsl jl push (bad) scas into fimull (bad) divb in mov (bad) mov scas loop aam inc mov dec and into mov pop jnp pushl sbb and cmpb out and sub and fistpll hlt mov mov pop inc dec and inc sbb inc mov add sub and mov fldcw repnz xchg push adc and out daa mov jnp sub pop xor mov (bad) sub and in dec repnz (bad) push add pusha adc xlat outsb xchg stos (bad) loop mov add sti cmp dec outsl lds inc movsb mull or pop cmp jg jle (bad) sub sub arpl push cltd ror fstp dec jne orb clc dec cld in xor inc xor nop and inc and repz mov insl xlat mov (bad) jne add ret mov inc xor sub inc push mov sbb xchg sub popf pop adc sbb xor sbb and es mov mov (bad) sbb pushf and and popa mov repz or or das jne push jg mov int (bad) pop mov push xchg movsb popf cmc sub pop stos lods pop pushf lds stos fs call aas scas mov gs imul divl shrb mov mov scas dec ljmp ret mov movsl sub enter in test and cmp shrl (bad) jne jmp pop pop push mov and lret and rcll imul data16 sub daa into push loop adc jecxz loop xchg data16 in pop mov lds clc add stc xchg idiv xlat xchg push dec out jo and mov add and lret daa aaa pop add xorl jnp lret rep je pop inc out movsb stos stc mov and pushf push shlb or and jmp cmc insl inc cmp (bad) mov push xor cli fdivs (bad) mov fist daa pop xchg insl ds fldenv icebp ljmp das sbb mov lret popa dec mov inc and jge mov stc xor add (bad) enter (bad) add jo lahf adc (bad) xchg popa int xor scas mov notb pop mov int3 sbb xor out insl ds pop mov into and mov xchg dec jno xchg fsts inc lret cld lret arpl sti push push mov cli fstl or and pop stos lret mov add leave clc fldl je cli mov (bad) sub test dec adc jbe sub lret xchg ret mov xchg mov push lahf ret cmc sti and mov (bad) xlat or stos jge inc jmp mov or pop (bad) test mov addr16 xchg out adc inc fldcw icebp mov mov xchg sbb rcrb out ss mov mull cmp push and dec test out daa fidivrl in pop loope shl nop mov and sub out ljmp sub jmp push inc mov or jne and mov call adc xor repnz sbb mov int nop cwtl ljmp and test das int3 ret mov xchg mov and jp ljmp test jl pop cmc or int idiv xchg lahf rcrl lcall and dec pop dec jecxz inc mov mov sub test push mov sub sub arpl jp nop cld out or mov sub imul sbb xchg ds mov mov aaa and or stos ficompl stos lret mov pop or rcrl push xor sub imul mov inc mov xor push mov inc ljmp cmpsl cwtl push sub cmp ret mov add dec loopne subl scas xchg (bad) jae (bad) sti mov xor inc test and stc outsl dec or mov addr16 pop repz subl repnz test xchg pop push loope sub test pop add mov rorb mov ret mov hlt mov mov ret add mov adc es xor dec les bnd cmc sub pushf xchg fldenv jge (bad) repz and push dec adc xor mov add pop add rclb mov inc ret pop fs dec push xlat cmpsb mov xor ljmp repnz movsl imul xor push lret rolb sub and cmp sub call sub shrl enter xor loope and add repnz pushl test aad xor sub cs pop (bad) rolb stc dec mov mov loope xchg addr16 dec cmpsl neg dec pop mov adc repnz adc loope jmp xchg xchg ret (bad) nop lods xchg dec jmp and shll xchg push adc or push aam sub adc mov pop and mov or aam mov xchg (bad) xor inc push sub and mov popf int3 adc push sbb xor sbb mov and test push gs mov sub add cltd xor or roll cli fsts inc lcall imul cmp repnz inc mov cmp jmp ret or xor mov cmpsl (bad) arpl (bad) jb mov mov out mov and ror jecxz es and cwtl jae (bad) jmp fsts dec push add lcall xchg jg arpl loop sub dec ja xor jno dec lcall pop icebp bound aam sbb and push decl push ss lahf jae or or aad and adcb scas stos addr16 add adc adc xor mov ss cmc mov fucomp sbb aas clc icebp movsl xchg and fdivl lods sub out dec mov mov pop mov sub dec mov and hlt test out js imul cmp sub mov ret pop push mov pop jg push xchg lret adcb inc jl lret out popf xchg cmpsl daa sub fistp cs stc ret arpl push ret push stos mov fsubp add rcr cmp add mov sbb xchg dec (bad) jmp fcompl xlat ret jbe mov mov cmp add push mov jne adc push mov jns aas out adc mov mov icebp cmp jae das add ljmp cmp jo adc or es mov jg out cmp dec cmp pop mov (bad) mov aam jae xor out xor ret mul mov es xor sti pusha and ja fisubrl in adc out leave out (bad) repnz jg mov (bad) xor xor mov xor das mov mov int3 shl shlb fildll jecxz sbb inc cli xchg je push fnstcw cwtl outsb (bad) xchg add cmp jbe es (bad) or mov lret and test or pop out mov mov dec aas jp xlat jo fstl iret jns or inc (bad) xor inc xor incb dec lret bound mov dec (bad) inc (bad) ja add pop out xor xorb or bound or out loop or scas push push lods push daa aam int3 in mov cltd mov popa lea push enter add int test push cld jmp je adc or dec jmp or fildll sti mov cmp jg push (bad) sub or rolb push pop mov clc sub sub sub add sub pop mov (bad) (bad) fnstcw dec in mov repz mov push pop dec push shll negb xchg adc add and fstpl daa loopne jmp add jmp dec lret scas jns stc sbb subb pop les btc mov xor movaps imul pop (bad) lock lahf jle pop pop mov (bad) scas fdivs xchg (bad) (bad) ret push jno xchg (bad) sti mov sbb gs sub pop cmp gs jle push adc sub fiadd sub cmpsl jge xor inc push adc psllw fistl cli pavgb jl and mov movsb and arpl mov xchg (bad) enter xlat add add mov lret icebp mov (bad) call scas mov inc ret mov or and cmp jecxz test movsb out cwtl mov mov xor jnp cmp mov popf jb popf in sbb dec adc lods and xlat pop scas sub sti mov test ljmp jecxz inc dec mov adcb xchg pop aas scas stc (bad) pusha sti or sub stos gs outsb mov inc inc das or jbe add xor jmp jl add xor fnstcw test jecxz xor hlt test mov lahf mov mov jbe arpl cmp pop or pop adcl mov or iret sub daa pop inc push push push divl movsb mov ljmp cli out daa (bad) out jmp ja push movsl popa repz fdivs repnz and push jmp ljmp sub push mov cmpsb insb and or lret mov or pop shr (bad) cmp iret jmp sbbl xchg mov addr16 adc push xor stos pop mov sbb out inc rcrl std fwait mov mov into jbe shl push lret ds icebp dec inc je test dec mov xor cmp cld fsubl add in hlt fisubr lret jecxz inc jmp cmp stos jo mov mov int3 and out xrelease inc xchg sub and jmp adc bsf movsb dec mov shll sbb loope or icebp sbb xor stos mov das lret add and out jbe in movsl iret mov andl daa sub ja jle xor xchg add lret out sub popf (bad) (bad) lret fistpll xchg iret xchg out cmp dec mov jle pop daa xchg pop dec xchg mov sub ret das cmp cltd das (bad) cmp lods xchg and add mov arpl and push pushf sbb cld push cmp pop xchg out inc dec ja imul ljmp and add sahf das jl jns dec es dec inc test (bad) (bad) and cli pop out mov stc imul stos sub dec mov insb jns movsb xchg bound (bad) mov cld jp pop loope ret add mov (bad) ss ljmp repnz xchg mov add idiv lds test mov imulb cmp xlat cli inc pop lret and aas or xor jge and repnz xchg int dec jl or ret jmp sub scas data16 mov cmpsl hlt inc and das xor jmp push outsb add mov push sbb dec cs jae xor fcoml push (bad) xchg icebp adc lret jmp adc ljmp js sub lret sub jmp inc mov out mov (bad) iret add fsts sahf dec sub aas mov dec adc cli xlat mov or add adc lret pop and mov mov insb dec ret jmp push outsb mov leave ret ja sub cmpsl ret das out aad scas negl mov ljmp mov or arpl in cmpsb shrb or or xor sub pop lods ds in fadds adc imul mov sub lods loope clc leave or add and scas aam jmp pushf dec sub push dec gs mov or fsubrs adc data16 lods or pop or les mov repz mov popa test push lock stos sub out sahf and lock dec sbb outsb xchg stc in add mov and gs mov lret pop dec cs push xor jnp mov pop jge sub or int das stc fidivrl and in pop loopne icebp dec sbb shrb pop jbe (bad) out sti ret ja cli mov negb mov push mov sbb popf data16 or inc mov das xor or movsl inc lcall xchg cli inc xchg and mov in push testl dec jge push sahf fs cltd fcmovu jae scas inc xchg pop sti xor sub sub cmp stos cmp mov xor imul mov mov dec sub or add jg mov stos cmp or ret test or out mov inc out add and add or and jl jo shlb jmp cmpsb lret xor lretw xlat dec xor jne push ret imul sarl add lcall xor fidivrl (bad) mov push sub xor push outsb and xor sub mov add add loopne sub xchg inc sbb mov arpl xchg lret fstps fild punpckhwd in pop inc (bad) test add dec adc jmp adc sub add mov or sub out jno repz pop inc das pusha std sti mov xchg push or (bad) (bad) into pop mov daa ja outsb mov (bad) imul sbb push sbb outsl mov mov push insb inc pop out xor shll mov loopne popa dec fmul icebp and mov sub je jmp mov xchg imul xchg fnstenv stc sub mov ret or or or (bad) iret rcll imul mov call roll fucomi shlb pop pop xor sub mov repnz (bad) xchg sub push jae xor aam lods sbb fsubr out adc sbb mov jge mov mov ret xlat addr16 mov test sub push (bad) cmpsl mov or daa mov jp sbb cmc mov aaa cmp or daa ja ljmp pop add (bad) sub xchg and jne cli loopne stos mov xchg add mov pop clc mov cmp pop xor sub jb add pop repnz dec cli les push jl or push int sub pushl cmp sub call mov dec push lret xchg loop out int3 xor (bad) push adc outsb or sub jo std adc add pop adc imul test cld call mov and and mov pop jbe push orb pop pushf mov adc lahf fdivrl outsb cwtl or cmp push fcomps push test mov xor test jmp mov mov pop mov repnz inc jb or icebp push inc pop mov call lock mov jno aam ljmp popa (bad) outsb pop rorb mov mov mov xor shlb push add jl stc or mov test mov call mov xchg dec ja rcrb scas js fsubp push insb leave fsubl (bad) sub lret pop fld je (bad) sub mulb (bad) cmp aad dec iret mov stc aam mov out stc pop cwtl sbb sbb inc and stos mov fisttp or mov jns (bad) mov inc sbb mov cli and or sbb and add sbb mov sahf mov lock push sub jb push adc push lret jb or sub mov inc cwtl pop popf cmp or adc adc mov leave and push mov call and mov mov or roll mov imul fbstp mov lods in into mov call xor insb jl inc adc dec in outsl movsb (bad) mov pop movaps inc and sbb sub pop xor das mov jp fidiv (bad) mov and mov movsl jmp hlt dec (bad) aam loope sub movsb sti xor xor hlt xor xlat outsb push out lock jbe loop pop mov jne (bad) leave jno mov into aam out dec sub lret adc call sub mov jae sub in jge lret inc sti in test testl mov pop cmp fmuls ret xchg mov jns pop add inc jnp sub sub or loopne add adc pop out mov xchg lret sbb sub decb call pop adc pop ljmp jnp xchg imul xchg mov jnp jle mov out xor in out inc sbbl mov xchg (bad) dec shrl test or das push hlt add jg sar addl mov pushf arpl mov test push negl loop mov jne and hlt jbe (bad) fsts and or dec or daa call mov fcmovb leave mov imul adc imul cs sbb pop mov enter mov jmp cld stc cmp stos lret lret xchg gs clc jb je mov mov out je (bad) add dec daa outsb xor add push mov jbe bound adc jbe out add repz and (bad) das (bad) pop xor push mov or (bad) cmp scas pop mov es (bad) xor push fcmovu pop jl pop into insb es xlat jg lods or repnz in mov (bad) xor dec divl jmp push sub mov roll imull and popf into dec std das repnz sub stos adc movsl into hlt jnp lret lea cmp mov mov xchg (bad) xor mov and gs dec (bad) mov loop jle xchg mov fstps lea sub icebp cmc mov rorl ret jg push stos pop pop push mov scas fs fldenv push bound fcomps inc movsl js test lods lret bound ficomp iret mov and mov xlat jmp push gs dec out daa mul add or stc fcmovnu sub je popfw outsb xor insl mov mov xchg (bad) in lock out popf jl leave jg pop das or dec out xor stos clc imul jbe out (bad) sub std mov std mov notb add xchg sbb mov scas cwtl imul test cltd data16 or icebp dec dec inc add rcrl jg xchg mov lcall ljmp stos adc mov mov arpl xchg jle adc stos jecxz nop push das add (bad) neg stc scas js mov repz stos iret inc imul cwtl jo loopne mov sbb mov (bad) call sub mov jns and loopne out sbbb ds loop ja inc inc xor pop in sbb xchg je leave neg sub and dec call notl lret test pop mov stc pop aam dec stos sub (bad) jae mov xchg or pop mov out sti lods daa movsb mov cltd (bad) adc xchg xor gs pop sbb pop (bad) xor mov cli (bad) cli cmp add jmp push in pushf or inc out (bad) sarl jmp fnsave out cmp call jo loope pushl cmp (bad) jb mov (bad) stc aaa popf movsb lret cmc adc push mov push sbb pop xchg dec iret gs fmull cmpsl adc add aaa decl loopne inc push or sub sub cli jns add cmc jne push dec ret outsl or push fbld scas mov jg enter mov (bad) sub aaa and inc cmp pop (bad) xor xor stc ds and enter mov mov jbe pop or add mov cmpsb pop and or imul (bad) xor dec idivb adc adc mov adc add (bad) sub lret in jo loope and cltd mov lods aam push push jno dec jl call les push (bad) adc xor aas pop or sbb loop data16 cmp jle dec pushf xor in leave mov gs paddusw or subb cli mov test aam jae jmp inc mov xchg pop out cmp push xchg lahf movsl jbe iret f2xm1 pop xchg aas idivb xor cmpsl ret push sub data16 lcall mov sub rcpps mov ret je lds cli sbb jnp aaa mov sub cmp mov daa xor movb sub pushf and sbb xlat cmp inc xor dec mov add pop jns (bad) repz ja dec lock daa negl adc cld lret enter test repnz jecxz xchg leave push repz xchg dec ret add mulb stos out hlt add daa pusha cld or popf dec pushl adc and add (bad) xor sub pop mov ficom loope sti lahf xor lret and sub imul cmpsl push js xchg repz and leave addl adc mov stos mov inc pop mov aas out fsub adc imulb sbb stos pop aam stc or mov (bad) mov loope out cmpsl movsb pop cmpsl push xchg push or jle sar sub mov cmpsb sub (bad) out xor inc scas notb add (bad) xor out dec stos sub xchg or decb daa test (bad) out and lods dec mov add jge in mov lds rcl mov and outsb mov jb mov in es shlb mov fstl ret sbb fildl and ss xchg mov mov mov push inc int and sub mov push int3 mov rep stos mov cmp bound decl clc mov mov jo dec mov inc mov ret adc mov lds adc sti (bad) dec negb xor ds ret popf pop mov mov ljmp xchg push ja std dec mov mov dec xor xchg sarl jb loop mov in mov mov pop and jmp (bad) xor lret (bad) adc adc sarb fdivrs mov icebp add mov xor add cmp add mov mov jle aaa sarb in push (bad) add insb jecxz inc cld idivb mov jmp repnz cmpsb mov loopne pop rcr inc mulb stos sub iret jge inc pushf imul xor xchg cmp inc (bad) (bad) in xchg out dec mov and lods orl mov xchg mov inc mov in xor xor or dec loop sub jno bound add xchg jbe gs xor div ljmp mov sub aad lods jmp xor cmpsl imul pop in addr16 mov or inc mov dec add add fiadd dec mov jae dec jmp clc sbb jmp push xor out xor add sbb adc sahf and cmp and out cld mov cmp imul and sbb les mov stos sub idivl cwtl aas push xchg repnz xlat rcll xor sarl or mov adc (bad) addr16 mov and adc iret pop negl and lret movsb cld and ljmp cmp inc idiv xchg jmp out mov sbbb sub and jb into repnz mov dec push mov aad test mov call jp push add icebp fdivrs xchg pop and (bad) pop inc pop mov dec mov cmp and mov movsb lcall xor loope lock jne pop ficom and pop loop enter xor xchg jl arpl lret das pushl sbb add das sub aas in adc or push fstps pop or stc test in lods jbe adc repz adc stos mov lds dec insb das add inc push mov cwtl dec mov xchg cmp push xor ljmp sub and and xchg mov ret insb daa push sub lock and stos dec jo or add jno xor adc mov pop sub div ret dec xchg or sub pushf adc push jb jmp icebp mov inc sub lds insb popa xchg jg fs loop lahf add xor sub dec (bad) in jno inc icebp stos (bad) inc pop std inc lock pushf dec jne push repz dec and push mov pop push xor rcrl clc dec leave ljmp aam mov or movsl ja jg iret adc cli adc cmp ss pop xchg fsin push insw xchg clc cmp sarb and test mov idiv int3 pop and push cmp outsb lret sub push pop jae in mov jno jo xchg dec repnz dec xor sub and mov leave mov roll sub sub pop inc fbstp out (bad) xor jg loope jns inc imul xchg xchg push lds add cwtd dec sarl call jmp adc jns mov add addr16 out in inc loopne mov loop sti adc xchg pop aaa xchg xor mov arpl cmp jnp mov and add (bad) pop sub xchg xor xchg shl sub div or jmp inc mov out jle jb aaa mov (bad) outsl push jmp mov xor std or xor sub aas in mov mov notb out jno dec aad mov and sub std mov push test cli mov adc mull add rorb leave inc addr16 xor lds and in xchg mov xor and xor mov pop out xlat xlat inc ljmp movsb push pop mov sub mov or ljmp leave xor jmp (bad) movsl or and adc or push (bad) in data16 rdtsc add push add lret pop mov sbb test sub subb loop mov hlt lds mov repnz xchg fdivrl into adc pop add (bad) icebp mov jg stos jp lds xlat push lds lea sub sub xchg jmp or push jnp adc repz or mov cmp push lea cmp out popf push aad xor xor lret push pop xchg (bad) xchg test mov jmp pop dec lods jno mov fidivl leave not lds fcoms cmp iret adc leave neg cmp sbb inc (bad) mov fstl std mov and fist pop push leave jne xchg (bad) cmp pop stc fldt xchg pop scas sub sub add dec shr shlb jmp (bad) lods adc cwtl mov ja jne cs mov sbb add and xchg jge popf imul jbe dec out mov push out adc mov jmp or add pop iret push and add adc (bad) int fsubrl into aad and pop cmc cwtl pushf clc mov sub adc cmp mov ret leave or add imul lret cmp sub mov xchg xchg popa xchg (bad) mov fsubrp pop adc aam shll sub dec inc cmp add add mov add sub dec rcrl adc enter das test (bad) les jno or leave iret jp dec xchg decl xorb (bad) inc int stos cmpsl mov jb sub sub inc and ret into xchg dec loope dec mov daa cld mov pusha aaa ret and jecxz jnp loop lcall mov stos inc inc ja push xorl aas in push (bad) mov into jmp clc outsl pop cltd jge int3 mov lds mov xchg push into mov scas out imul sbb mov insb popf fistpl and mov movsb test inc or (bad) cmpsb fnstcw movsl cmp mov add xor out jb in inc lahf push (bad) aam sub push in fstpt or aas lret enter dec bound ss clc fidivrl lds xchg sti movsl bound xor popf mov scas gs pop mov jns add mov scas mov (bad) mov cltd jp cmp mov mov mov xor shrl movsl stc rorl fcmovu pushf cmp mov or enter (bad) ja jl outsl ljmp dec adc mov pop addl add stos jecxz xor mov in addb mov mov lock cmp jb (bad) push push cmpsl push push cmp push mov xor mov int push jp jecxz dec xor and mov cwtl mov pop cli call lret mov push xor shll pop test testb rclb dec iret cli mov or pop mov cmp and inc stos xchg push lcall lods push movsb mov repnz (bad) shl sub out mov mov adc and add dec mov xchg repz push call lret and subl or daa popf inc cli xchg add dec or xchg adc adc pop jle ljmp shll jle fisubr out mov jmp push subl or pop ret fisubl arpl and dec pop in call out daa add push or inc xor repz mov pushf mov sub add push lds pop daa mov lcall lret clc ds out ret push sub mov sub or pop lock lcall lret sarl jp push aas dec les mov pop ret add cmp loopne in imul flds std ret llwpcb sti repnz push imulb sub dec dec movsb mov (bad) cld cs repnz (bad) out sbb xor icebp push outsb je pop mov movsl xchg push scas imull xor sub sub (bad) sti dec fdiv and mov or test sub jecxz sub lea ljmp movsl mov sub sbb and inc mov aam scas in push in je dec sub faddp leave loop ficomp jmp pop pop lea xor mov mov fisubrl sbb sub mov out xor flds (bad) push dec jge adc sub pop push mov xchg mov nop movsl enter xor and add inc pop mov std repz fdivrl xchg mov lds and add faddp jb inc cmpsb sbb dec shrl or pop dec imulb mov out sub mov mov sbb dec mov xor cli divb inc repnz xor testb mov repnz (bad) and mov push mov test pop lret mov cmpsb jp imul movsl stos xor jecxz out or cltd and inc add lcall jb jle loope nop movsl loope adc out aas (bad) (bad) out in cmpsl jnp lods pop ljmpw xchg movsl push repnz sub xlat and mov adc negb cmp and je sbb outsl ljmp adc in adc repz mov mov sbb xlat mov sub mov mov dec sub push das xchg dec jp lahf mov pop push push hlt lahf xchg nop cltd jmp in mov jmp daa popf push nop push add and add (bad) sbb shr jmp cmpsb daa or push icebp mov nop (bad) test sub into pop push xor dec or into mov or or lret or dec into stos int imul imull pop push sub lods mov fistpl aas pop sti push jmp stos (bad) adc push dec add aad out imul inc jbe out sub xchg out lods inc cmp sub inc movsl out lahf mov daa push cltd orb jo xchg out or mov popf pop mov int lcall or cli jg movsb dec movsb push lret popf (bad) test inc push cli inc fcompl jbe sub inc pop dec or fs out mov dec or ja and loopne adc or mov pinsrw sub jno testl adc std ds inc sahf sub les rorb xlat fbstp ljmp movsl cld popa dec mov pop mov leave out push inc sub imul scas ret sub mov inc xchg outsb sub out pop cmp lahf hlt push pop mov inc repz add scas sub rclb push std movsl jb mov jl inc cmp sub incb pop ljmp pushf mov sub xchg mov and mov leave sub lret pop pop andl push xor imulb iret mov and jmp fidivr sub cmp es xchg cwtl lsl xchg insb lock sbb xlat imul stc cmp pop and iret dec movsb mov mov pop xor movsb adc imull (bad) mov mov decb jmp add mov popf insb xor sub std or xlat out es enter xor and xchg imul lahf hlt je lret adc cmpsb into popa pop xor or add shrb inc rcrl push out std cs xor mov or movsb int3 push gs out pushf repnz jmp hlt adc sbb iret jnp or and (bad) dec shlb mov (bad) cld leave xchg push cld dec in pop dec sub mov out cmp fist or out pop lret pop (bad) cmpsb xor adc pop bswap jle xor nop sahf dec scas imul outsb inc out out fisttpll dec sub ljmp mov sub xor mov push xlat sub out add add js xor jne sbb or pop fdivrl fsubl jmp pop imul lret and insb (bad) fucomip (bad) rclb test mov push mov aam dec (bad) sub out or jge popa daa cmc xor scas mov imul fist mul push into shl cs xchg (bad) popf jg pop mov mov sahf sub mov mov lahf push cs sub and xorl cld out mov das out in mov or jmp das (bad) aad mov out mov rclb insb and jb push sbb cmp add sub pop fdivs xchg adc lods xchg xor sub add push shrl sti sub jecxz sbb hlt and addb movsl xchg cmp inc (bad) in rorb pop repz movsb jl or cli xor xor data16 xor imul in imul push pop shl out xor mov cli daa push mov or or jae sub lods jle std jmp or out xor stos jno or outsl adc pop rorl mov and aad arpl daa out xchg (bad) stos out sub cli jns xchg add cltd adc and mov ret jg cmp fdiv mov stos xor mov pop add adc out mov pop stos sub and push jg or shrb loop clc call clc add add pop fiadd ret jno lahf jmp sub pushf insb ret imul fs cld scas (bad) fidivr js jecxz jns cmpsl xacquire fs adc xchg std xor inc aas sti mov add divb lock rcrb sbb cmp mov inc xchg jnp sub and test not pop icebp xlat cli or add xor clc and sub xor mov sub lahf add jne repz incl mov shlb pop fadds cmp dec es adc out add xchg dec push out cmp and dec or jmp jmp cmpsb test out inc jp push dec sub cmp mov dec popa dec in rorl mov cmc repz mov fnstsw cmp jae enter cmp lods imul popa ror and sub imul decb out mov aam loop lret lret xor loop fimul dec dec outsl cmpsl jae adc mov ljmp xor jno or ret xor xor jge or outsl mov ja imul xlat lods pop les xor rorb jno pop insl lods dec (bad) je test clc adc or fldcw jmp push icebp jbe imul stc sub leave sbb jmp call loopne jne scas or leave push gs sub shlb sub sbb sub (bad) jmp in (bad) mov xchg inc and mov jg add mov jecxz mov sub adc jo jge fmuls sub xor jae sub add pop and dec or adc test sbb mov sbb xlat push pop aaa jae stc adc add mov jge bound clc (bad) or ffreep mov xor or mov pop and data16 lds sub pushf ret (bad) fwait jl (bad) shr imul xor fwait push hlt jmp jae xor cli loop xchg lds incb and mov push rclb aas mov xor test and add clc push sahf ds xchg movsb push enter xor jbe push jns mov xlat push push mov sti inc adc xchg fiaddl dec cmpsl cld push jnp adc inc lcall daa mov dec jne call jo popf adc and add pop xor xchg push sub rcll jne pop dec stos mov call adc jo popf mov push xor sahf and cmp pushf cli xchg test stc sar push dec je and sub add sub das mov sub sub std or test mov xor add sbb fildll jge std dec pop sbb push jp into imul popf and lret stc jno lahf or inc cwtl fistl test mov mov or les mov mov outsb bound negl cmp mov mov and jb xchg or or ror es add and and fild sub and int3 inc pop out int3 pop xor mov jne ds pop dec push out dec add pop ljmp out pop jp push loop sbb rorb ret pop sub insl inc inc xchg outsb gs mov mov push fisubl sub aaa dec test mov cli stc sub dec ret sub cmp (bad) mov pop xchg test dec jne insl and iret sub sub ror add loope mov idivb pop mov add int3 sbbb ljmp xor lods insl scas cld mov mov jns and sub or (bad) adc test cli push icebp stos xor sbb fdivrs sub cld lcall pop jle push jg dec sti stos sub sub mov cmp pop push mov mov sbb dec sbb sahf out or fsts dec mov xor jne lret mov inc stc or jl cld sbb xchg inc xchg daa or aad mov jo sub je clc sbb inc incl or mov add sar mov cmp sub and lods inc xchg loope dec (bad) daa loope shlb ret bound push insl rorl sub jg rorl lods xor das scas sub ds and mov outsl dec cli into ret dec mov or ja in lahf icebp mov and jne insb push (bad) ss dec xor mov push jbe loope pop sub outsb xchg lret lret jge xor xor xor xchg jmp and sti push cmpsl aad lods push mov icebp jmp mov fstl mov ds pop xor mov fldlg2 cmpsl hlt notb (bad) cs ret pop ds push sbb stos mov add movsl jge test adc sub insb sub jno and call and jg jae movsb sarl leave push xchg xor out mov add mov das pop das cwtl pop jmp test jmp out pop test pusha sub xchg jae adc out das mov dec test repnz lret adc mov icebp cmp popa in cmp mov mov hlt shr negl sti sub sbb adc ret clc ficomp push push mov pop mov add or push orb add or shrb sbb stos sub jo sub out ficom cmp and out cwtl int cwtl mov adc mov mov cld imul dec cltd call (bad) mov xlat or inc jno clc mov mov scas repnz xchg test mov test idivl ret add cwtl sub (bad) mov ret xor mov push mov loope xchg mov and (bad) cmc leave (bad) ja add imulb out or mov add pop lret stos sti data16 and dec (bad) mov mov lcall aam push adc sub xchg mov in dec add pop dec lock and cld xchg lock mov jge mov sbb pop inc adc repnz adc out lret and add outsb in add mov pop jl and pop mov pop xorb cmpsl adc fndisi(8087 dec bound inc xchg mov insb xor cmpsl xor clc mov sbb cmp sarl gs repnz and mov stos pusha outsl or mov add data16 sti das and lcall sub ja (bad) dec xor ret adc mov ljmp pop adc test je adc cli mov (bad) and add mov loop mov sar xchg push sub pop pop loope ljmp addl sub sar fdivrs xchg xor add mov hlt test jmp sbb ficom sub add push mov xchg icebp stc xor into sub and sub jle (bad) jns sub sahf dec mov ret or lahf in pushl sub pop mov push mov sub in add dec ret xchg push dec negl dec xchg mov pop sub add adc jecxz xchg add xor cltd inc loop mov cmp jbe test jbe pop xor mov lret (bad) popa repz jnp pop repnz icebp cmp (bad) rorl jmp fdivr pop js shrb pop push xor mov testb mov xchg dec push mov mov dec sub out sbb ret std in das aad je aad cs pop jbe jmp addr16 adc or (bad) leave jge push cld xchg xlat ret (bad) mov mov pop xchg push pop adc data16 push pushf sbb mov subb add movzbl dec (bad) or push xchg mov lret xor dec (bad) jmp repnz loopne add jb pop dec inc xor fidiv push rolb (bad) out xor or mov mov inc ret mov ret fisubl adc push daa sbb fs cmp lods cmpsl fnstsw sar or aas xor hlt xchg lods inc data16 sub imul dec sub jl xor int3 out mov shl clc push adc xchg std cmp sub cmp cmp stos mov inc push cmp (bad) mov pushl pop sbb mov dec arpl mov and lods cmp js push push adc and jmp andl gs lods add leave stc clc scas jns xchg sbb sub dec inc and xchg and fild adc imul adc dec stos fs out mov push insb aaa (bad) sahf or sahf pop (bad) aas jecxz sar pop (bad) (bad) or pusha lcall mov jmp jae push out jp pop bound inc lret mov mov incl inc push (bad) lret adc iret (bad) cmpsb dec jno xchg push and push mov into mov je cmpsl push adc daa ret aam sbb push (bad) xor add mov outsl sub into pop add xchg pop sub dec pop ret test mov mov jle test or cltd scas jmp pushl lods out and cmpsb adc into mov test repz or test sub imull shr dec mov sarl pop or pop stos movsl lcall adc mov fs popf push (bad) aas cld pop mov or pop test mov mov pop jg in fisubrl sub fmuls test pop push adc sub out inc xchg inc inc pusha mov add dec popa xor pavgw mov shr repz pop rcll fsubs or icebp xchg jno mov mov adc and rclb add mov inc jne or pop pop sub pop shrl xlat xor or cmp imul xor movsl jne inc inc loope (bad) pop mov fadd imul mov fcmovnbe movsl inc pop xchg jmp xchg in push lret add pushf repnz es icebp gs rol mov add xor dec mov sub sub lods inc mov mov das sub out insb lods lds ret test sbb imul icebp adc mov dec stos imul xchg rorl inc or gs cwtl loop or mov cmp stc rcll hlt pop mov mov out xchg adcl notl cwtl in lcall push pop (bad) outsb adcb ja nop push leave test cmp xchg mov (bad) mov push mov lea in mov and or ret cmp repnz or fs push ljmp xchg imul or sti roll add cld stos ficom repnz xor into (bad) lret push addr16 mov cs shll jbe outsl add or push dec pop push outsb fdivp cs mov pop (bad) (bad) mov negl pop push and movsl ficoml dec aad sbb enter and mov movsb dec lret push lcall nop sbb sbb gs and mov ja (bad) mov test xor mov dec cld arpl sti or mov ss xor scas mov enter repnz push dec sub popa lahf cs or movl pop testb xor in push mov or xor aaa and and ret repz stos sarb iret stos outsb pop mov in cld jnp cmp dec subb xlat comiss (bad) sub cwtl fadds push push pop cld sub sub mov cmpsb fldt leave gs or rorb xor data16 lret and jge (bad) push cwtl cmp xor or aam (bad) xor sbb jge ja int3 gs mov jne enter xchg (bad) adc stos shrl repz pushf pop arpl adc xlat push repz mov into mov scas into mov add enter cmp cmp rcll jnp mov out add mov out call push inc xor push xchg mov int3 ret xchg jle imul xchg cmpsb rol stc cli xor jl xor in clc xchg push mov and icebp push pusha leave jne flds push lahf and sub pop xchg xlat ljmp neg lods leave lahf inc push sub pop rol mov pop cmc inc pop sub aaa cmpsb inc aas mov and sub lds xchg pop mov xchg adc jbe fwait sub test lock push ja cmp mov add cli sbb or pop mov xor je lcall outsl ret dec rorb sbb scas adc jnp pop mov mov int3 xor ret add (bad) notl sub popf pop adc and out xchg mov pop rorb pop rcrl push sti sub out and or mov push pop outsl pop sbb mov sti das addr16 ja (bad) std xor pop repnz and gs ljmp (bad) mov jne pop aaa xor int3 and xor sub pop or (bad) sub dec mov jno (bad) sbb pop scas pop dec sbb sti pop scas xor ret jmp sub or jl jg mov cvtps2pd lret xor lea loope ds je int3 mov mov inc add adc clc or std sbb test (bad) mov bound das icebp icebp int3 pusha or lock mov cmp aaa (bad) pop stos sub xor cmovl and mov test sarb int3 xor inc xor mov test adc mov pop test gs iret jmp jo mov dec (bad) (bad) out dec xor sbb or rorb aam xchg imul pop and sub push dec push rorl jge and lods adc xor and cmp mov out dec enter push cmp mov shr outsb xor ljmp insl pcmpgtd xchg mov adc adc cmp xchg ret or inc mov xchg and or (bad) std push aam leave into ffreep lds rorl out push and add pop mov sbb notb ret rcll mov dec loop xlat stos cltd shll mov rol jae ja into push or ja repz aas daa xor xor xlat add ret add mov mov dec (bad) fucom repz cmp (bad) jl ljmp jb adc and cmp add fild lods push or gs daa sbb ret add pop xor imul movsb ja dec and in mov sahf movsl cld cmp ret xchg in add fidivr (bad) cmpsb adc sub jbe push fdivrp dec ljmp clc mov sub in iret cmpsl test jecxz loopne xor sub movsb inc out dec pop add xchg lods push inc xor cmp int3 add out (bad) xlat mov fmuls lahf and aad jae sub scas mov lret sub dec sti sub pushw adcb sbb sbb sahf into push sbb pop (bad) adc ljmp mov xchg adc xchg idiv jge ret sbb jbe dec (bad) lods xchg test popf call es jp and (bad) sti push adc push xchg jb sub loope jno xor imul leave bound stos lea in and enter adc loop pop clc daa data16 jmp push shrb cltd pop xchg adc mov push xor orl dec out mov ret lret loope (bad) mulb psrlq adc js stc xchg cmpl ret mov gs cli mov insl xchg movsb out (bad) pop jmp add jp xchg mulb or sti add dec iret mov stc push add fucomip mov repz pop push pusha mov sub jecxz (bad) jb sub jmp lock mov mov dec cmp inc adc out cmp lcall ret rol aam popf notb xchg cld jl xor mov call clc and and stos adc sub out jg insb lahf je scas ret jnp ret fnstcw int3 jmp ss jl icebp inc xchg jle xchg mov icebp fist inc int3 inc (bad) mov lret xor stos sub pop or mov sub shr rorb pop jg loop out dec fimull sbb dec lock mov (bad) jmp into cmc stc in xchg out imull lahf cltd xlat loope push ret push js or sbb fist sub mov ret add jp jp ja mov pop mov sub and sbb lahf (bad) iret rorb jle inc in xchg fcmovnu sub daa sbb sub add pop sbb fidiv sbb iret (bad) les pop pop inc sbb lcall and notl rolb xchg clc jge dec xchg push out sub sub pushf aas test sbb (bad) call and testb (bad) cmpsl push pop mov out sub push pop repz pop ret pop push inc mov (bad) neg jmp mov jno lret sbb sub sub jecxz dec rcrb mov mov repz add stos sbb les leave push sar push or iret cmc ss mov sub sub mov shrl mov mov dec out pop mov mov stos lret enter fs jne push inc mov xor or (bad) mov loope lret sbb and cmc pop or sub int das mov push jg or add pop jmp aas jnp fdivs or push pop std jnp shrb imul das add add push push mov shr pop test or movsl sbb push push cmpl mov pop inc push mov jle add adc xor pop sbb mov test pop pop cmpb into rorl lret pop sbb andb insb (bad) mov pop cmp mov sbb sub xchg ficom dec add or add (bad) push push push mov pop dec fisubrl or out mov aas dec clc push aam mov adc insb fsin add in mov mov test cmc jae and loopne,pt xchg daa scas outsl add rorb aaa sub sub pop push movsb (bad) mov or mov inc or pop push mov sti cwtl clc fisttp push pop cld add xchg pop mov push mov pop flds js mov pop fstl out mov inc fldcw lock iret js or loope ja je add mov push mov dec loope adc pop inc lahf inc aas (bad) jp mov pop repnz pop cmp ljmp les addb mov pop or adc cmc ja add add jbe cmp inc mov cmp add cmp ret clc add sub add shrb pop enter pop fildll add popf cld pop mov dec pop scas cltd or and jns sbb aaa sbb inc fildl inc loopne into addr16 push xchg jnp mov add xor jge and add aaa push mov nop int3 dec pop sbb loopne in pusha lret pop cmova out xlat test adc sbb add sub cmp pop lods loop es push sbb pop sub out mov ja rolb enter cmp pop in jns testl xorb mov sbbb aad movsl mov cmc and xchg cltd cmp mov (bad) int or xchg xor out sub jmp mov jl push int3 xchg xchg jl inc ss rorb lock leave ljmp sub rorb xchg add (bad) sti repnz cmpsb cmpsb imul scas dec lret test cld test jl iret push in push mov (bad) iret incl inc mul jo addb add scas sub je idivb jl adc cmc lods out inc or fdecstp jbe dec mov (bad) fsubrl repz std movsb daa xor in repz sbb data16 dec stos lea add sub jnp jbe lahf xor rorl cltd sarb lds or cmp es jmp fwait jmp sbb fidiv pop mov neg lcall mov jb loop or (bad) (bad) pushf sbb sub (bad) pop (bad) dec jmp mov sahf cs inc jbe push or test daa add stc or pop sub xor jbe and sarb pusha push cwtl xchg add mov ficomp (bad) jmp in xchg loop sti out inc (bad) sbb push (bad) arpl sti jge cli pop add xor les pop and cld (bad) pop sub lahf jo pop jmp loope cli pop adc mov mov es or fs mov sub mov push fcom jmp mov xor cmp dec inc mov clc pop adc mov mov scas movsl cmp pop pushf push mov (bad) je gs adc lret or fldl lock in or int3 cmpsb mov and add jmp or xchg out mov inc js sbb fsubl mov xchg loope sub sub je inc ss push in movsl adc sub mov adc (bad) ds imul rorl push not add shrl dec jb (bad) fisubl push iret (bad) jp fcom jge test ja jl sbb loope cltd jns mov (bad) loope or push push dec cltd ljmp call sbb shrl out fs mov jle mov je icebp sbb adc int outsl lock and mov jmp inc loop test and fbld sub and stc sub mov pop sbb xchg mov adc add fdivrp xor jns or adc jg push arpl sahf inc or add jne shlb cmp sub scas and push (bad) or test inc cmpsl or lods pop ja pushl push loop add push cmp bound adc negb aam lds mov adcl push xchg sti add push aaa inc out pop mov xchg imul cmc int3 pop mov sbb pop dec test aam dec sti jne mov sub dec lds pop mov test jns loopne cmp fcoms movsb stos fdivl movsl ret inc push jnp pop jmp out cmpb ret inc or pop icebp mov cwtl dec out loop out pop arpl rorb mov sbb ljmp (bad) pop mov in jno dec into arpl pop cld adc jbe dec cmc mov xchg repnz lret roll sub xor movsl movsb fucomi daa fnstenv or jecxz xor push cmp lods dec call mov push int3 and mov pop loop aad mov add adc pop inc add mov test sub cli int adc iret cs fsubr loop jno inc loop lret js mov xor adc add je adc cli sub jmp data16 (bad) xlat xchg adc fildll push ds test idivl ss sub arpl lds lahf mov imul aad fcmovnb add inc out inc xor ret dec stos xor add sub cwtl cli pushf jbe imul add ret repnz mov (bad) popf inc jecxz sub mov test leave notb inc and sub popf insb mov stos rdmsr sub inc push repz in enter adc mov mov xor mov sar out cmp pushf dec pop pop sahf mov nop add mov (bad) xor divl cld test cmpsl mov movsl jg dec loope jb mov dec adc insb popa and add sub bound aas mov je,pt out stc in (bad) in mov ljmp cmp cs pop and out lea rcll push and xchg mov repnz sub out add rcl daa and fildl or clc xor and push sbb xchg (bad) out rcll in and xchg fiaddl es push mov cmp into jecxz daa leave js dec idivb lods sbb sbb inc jp mov mov jg xor icebp sub push or push xchg pop or call inc sub lods jg cmpb sub repz test stos je xor sti push pop fisubl mov (bad) and adc push pop ljmp std add mov cs sub push (bad) std data16 clc pushf cltd or mov lret or in mov scas push dec imul popf push adc popf aad popa adc (bad) int popa jp roll out dec mov (bad) xlat mov je lret subl pop mov sub cli inc mov cmc (bad) push and mov gs xor add sbb xor cltd cmp add shlb xor push test pop icebp push mov or mov rorb sub cli int3 repz mov mov push ss gs xor add mov ret (bad) leave jl bound xlat push cmp lret pop dec pop push push and adc cmp xor add test sub mov addr16 aaa inc and mov bound call push hlt xchg add push lret das xor mov push andl jne pop rolb mov lcall out and sti mov dec repz cmpsb xchg add and lret sbb dec fdivs loop arpl jb out (bad) pop xor push (bad) pop in int3 add mulb fistpll push (bad) push pop mov stos popa jno xlat lock test shll sub mov stos mov (bad) out int3 or or ret push mov (bad) cmp mov outsb js lret jmp mov dec sbb sub dec leave stos sub adc or xor rcl dec dec mov pop mov mov je push push lods fwait mov call aam pop shr mov jb rol cmpsb popa sub ffree sbb (bad) or mov add sub mov ss adc (bad) mov and (bad) out int jle daa xchg out fnsave mov adc in sub rcr sub icebp mov cmp or je jmp (bad) cs xor add pop mov xchg dec mov ret out aas dec cs mov add add cmp adc (bad) xlat jmp pop das add cmp mov and adc sub dec rcrl adc stos je rorl pop cmp aam inc add ret mov fbld pop add ret sub aam dec add xor push pop add mov mov popf iret js daa pop icebp imul mov sbbb aad dec dec sub xor sahf stos bound lret push (bad) push daa cmc sbb fldt lret and cmpsl pusha imul pop out add insl or (bad) cmp xchg sub push mov jp dec inc pop cmp push adcl int3 or clc in add ja xlat add jecxz xchg push mov loopne jo add dec push mov into xor repnz dec add push xchg or xor cmp jo add pop out jl out ljmp fstpt inc fucompp push addr16 pop notb push push mov daa and std test mov mov aaa pop push mov push push push pop add loopne xor (bad) sub int3 push imul movsb pop call shr push mov cmp sbb or ret jns mov adc or mov pusha or je idivl daa xchg popf in sub add sarl mov pop push mov addl add les (bad) fcos dec inc or ds ret pop lahf pop cwtl popa test jne out lret or fwait pop sub mov decl add pop push push in cmc push daa push bound imul ljmp push mov push push jp push xchg jno aam cld lods mov rorl loopne jb add jg out ret stc xchg fstpt mov (bad) adc addr16 jnp mov mull sti insl shr mov xor shrb push jg add dec mov sbb rcrl ds pop jbe mov inc add sbb pushf jo cli and pop jge sbb sub push in das sbb mov push mov xor push mov sub test push mov std imul pop mov aad (bad) inc (bad) out repnz pop lret push pop adc jno jmp mov pop lahf cld (bad) jb jle jmp les add lods xor mov sti sarb mov jg inc push xchg in add jl (bad) (bad) mov test xchg imul push push push pop inc outsb pop leave ss in xchg adc loope sub or adcb cli flds sbb xchg in (bad) mov shrl pop in mov mov das mov fcoml xor movsl fsubl pop popf lds push sbb inc rcrl nop jo icebp push pop and xor outsl (bad) sub or lret pop rcll push jne stos mov and adc jl add inc rclb dec pop mov bound stc cmp xchg cmp insl cmp lcall (bad) int std push aam pop mov (bad) sub mov aad sub or pop mov cwtl in (bad) cmp das jne mov mov sbb or sti jnp clc (bad) push fwait sti int3 and stos or loop rol int3 (bad) mov mov out sub bnd and adc xor addl adc iret mov lods add push xor scas xor sbb push xlat ss mov fdivr xchg adc cmpsl or cli pop xchg pushl and popl leave push cs jle sub fidivr lcall pushf mov in movsl ja iret xor popf shll inc out mov mov adc (bad) mov sahf repnz and mov leave std push popf add pop sbb in and jnp cmp aaa loopne inc dec out dec es inc leave (bad) xlat inc call mov jnp jmp shr push cs add add push cmp mov jbe rcl ret inc popa cltd cli cs ret xor mov insl into add push icebp jg pop gs sub outsl mov stc push mov movsl push cld mov sub ficom mov mov (bad) call dec out xor fxch out leave out push fimull dec inc ficomp xor lods call jle data16 pop mov lock fisub (bad) mov imul in mov popf mul pop or and jmp sub sarb add daa or (bad) call fdivs popf push cs inc movsb add or (bad) out in (bad) mov sub xchg add dec sub xor xor incb lret jp sub cmp jmp mov fstl aas dec cwtl jne test lret push adc or cmp mov mov (bad) out call addr16 mov mov popa xchg imul out inc cmpb leave ret push stc push fsubr in pop out fs cli cmpsb jno rolb push int pop fdivr sub xchg std adc xchg jns leave fmuls pop sbb daa xchg jbe push fstl int push mov imul inc inc or pushf xchg insb fstl movsl movsl stos repnz call test imul (bad) adc jmp imul xchg in outsb pop mov ss pop or enter xor and ja (bad) out in mov xchg sarb pop lahf repnz xchg loopne cli stos cmp pop add mov mov addb lds (bad) (bad) or inc xchg leave (bad) cmp out sbb jno jnp xor iret push pop sbb je jmp jo,pn xchg inc mov movsl fiaddl pop imull or xor es mov aam mov pop xor aaa or adc ror call sub test dec push bound fildll ret sub pop in cmpsl jne insb add (bad) insl push jl push leave es cmp mov xor cmp pusha cmp popa test pop dec jno xor lret and add or sub xor mov mov push imulb cmpsl mov sti mov loop adc mov mov pop xchg mov inc mov repnz pushf out fld cli fldenv inc or gs cmp ret mov xlat jnp xchg cmp or (bad) mov daa (bad) out fs hlt cltd pop push pop xchg rol xor mul adc and ljmp insb bound repnz imul or xchg sub stos mov mov cmp or icebp stos imul lret xor add xor clc mov cmpsl nop mov or mov (bad) repz out aad fisubrl and sub (bad) cmp push std or pop repz sub xchg leave clc or cmc dec rclb mov mov cmpsl adc push mov add das mov mov sub aaa adc or test pop out and mov ret pop fucomp xor or jbe call std inc andb mov xchg sub add inc mov xchg xor sub or mov cmp inc push lds std leave ret xor push shrb imul sbb fwait pushw into test adc pop mov gs fidivl lret add mov out ja int mov sub add repz sub outsl xor repnz div cmp insb repz add sub pop movsl stos xor pop mov adc out stos adc scas sub xchg test xor test pop sub pop roll pop dec inc and add cmpsl clc mov aam ret (bad) adc (bad) adc cld pop mov push lods (bad) aas out das lret aas hlt into inc and daa jecxz ja testb cmp or add (bad) shlb dec push mov jmpw ret pushf repnz jmp in adc push (bad) cli lret divb mov adc xor add enter or sub lods ror js and xor mov push pop and fldt imul cmc or jo xor divb and and jno and mov cld popf lods fidiv icebp mov and int3 pop ds sbb clc dec sub xchg jg dec ret cmp movsl hlt jnp (bad) cld test xor mov adc mov cwtl sbb pop inc aaa leave mov mov add dec mov leave into jns pusha icebp cmp cmpsb (bad) test cs in movsl decl repnz pop movsl mov fbstp test adc repz and lods push jmp inc aaa cs inc lret or pop imulb add sub gs xor push xchg or adc adc jg pop int3 outsb enter or (bad) fucomp cmp xchg in mov push leave push mov inc and (bad) movsb pop iret (bad) adc mov add push out dec add add icebp add xor dec fsubl test sbb lcall insb lahf dec mov cld jg pmaxub push mov shrb mov enter andl or out mov jle cld cs jge sub xor or and sbb and les mov mov xor dec xor pop lret adc stos mov ret add adc in scas lds lret or jp ja daa mov (bad) into inc (bad) aas push xor (bad) cmpsl movsl (bad) repnz popa mul pop cmp mov cmp (bad) repnz aas in pop movsb out mov bound adc xor repz xor mov sti cmpsb xchg dec mov lret inc fdivp test or push enter adc cmpsb sub out dec loop push pop popf out outsl int3 aam mov jae push xchg les cmp movsl mov sti cltd das mov (bad) or cli mov orb test stos je call pop mov add push and jecxz mov lcall mov xor out sti negb xor xchg mov lock lock mov rclb add in jb mov xchg out jl out inc and dec iret add xor add je imul pop daa fdivrl push jmp pop adc add mov adc mov push adc mov sub mov jmp xchg adc out int3 ret imul sub in clc lds ret jne enter push and mov fcmovne pop mov out rep jo sbb cmc push je inc cli mov and jne mov dec push dec jmp fidivr and (bad) mov test pop (bad) mov test push sub dec (bad) test push lret jg (bad) or pop mov mov pop inc fnclex inc les repnz and mov inc notb idiv sub nop inc addr16 (bad) mov lods imul ret adc (bad) adc icebp and dec mov add (bad) sbb cwtl add mov arpl ret out pop sub xchg out cltd xor mov dec movsl (bad) mov mov shrb shlb sbb mov fidivrl or repz xchg push lcall xor scas je cld pop in das xor mov clc sub cld inc daa call ret shlb shl out cmp sub mov dec jmp gs ret comiss push out data16 adc lret out repnz fstl rcll mov cli jno xor stc jmp inc (bad) movsl inc cmp sbb test mov push test mov adc loop mov sub cmp push rolb push scas neg inc and imul xchg pop (bad) bound into ror or sbb dec pop out mov and or sbb int sti adc sarl frstor sub clc ja call into pop or mov adc lea fildll das push xchg insl aam rorb iret pop push xchg xchg test (bad) fnstcw ret rclb xchg inc inc test iret mov orb leave xor rclb outsl and mov and mov stc dec adc clc adc lret inc mov inc and push loope or aam popa add das in cwtl lret out cld aas lret sbb imul sti subl mov imul mov movsb or test xor xchg adc repnz jne push fldl or (bad) push fildl or fldl daa inc in (bad) xor (bad) mov lret pop jo mov push inc add xor ficom add inc push movsl lret sbb shrl xchg jb iret lret jbe push out mov fisub xor stc mov fwait iret and daa mov les xor pop cmp adc and xor xor sub icebp jno iret and inc add jno dec fdivr sub sub les imul push pop into fisttp or inc cltd pop imul mov dec jnp (bad) ljmp fistpl sti dec lret lret pop pop jmp xor and (bad) cmpsl push in gs repnz xchg mov ss mov andb jp push xchg jnp or andb nop loopne sbb inc imul sbbb shlb xor scas mov jbe es (bad) sub push aaa xor out das (bad) notl rclb dec ret arpl fsubrs and dec jecxz sahf sbb add xchg ja xchg mov imul ret mov out mov adc mov or xor aam sbb add xchg and and xor sub dec int3 or cmpsl push in into and sub mov sar xchg mov inc or into sub jp test jmp xor popf mov je aaa dec mov cmp test pop sub (bad) scas xor popf and clc and push sbbb xor adc fcom inc push push xor dec xor sub and add (bad) gs jp bound mov push ja ret or jo cltd jge jnp adc fdivs movl lret or inc (bad) mov notl ror out sub lds rol dec stos sub cmpb adc clc int (bad) outsb icebp adc mov sbb and mov add dec ds mov imul (bad) xor and std (bad) mov lea push or cli ja pusha out and scas cmp add sti repnz and push dec shrb clc shrb in sbb pop sbb xchg cli int3 movsb mov pop test test mov push idivl push jg jb pop push xchg fwait lods xor repz dec mov and test push out sbb add mov or ret sarb mov lds cmp mov or adc pushl mov fmuls iret ja nop adc out pop push leave adc shlb test in addr16 lock lds xchg or sub lock mov into scas mov add adc push add cmpsl push add decb iret cli fs push sti popa test sub imul dec xor iret shll push jle ret (bad) mov pop inc push push jno xchg pop call push ljmp jne xchg loop jno test lock add sub mov scas xor mov pop cwtl sub mov xor (bad) je push cli (bad) jno or or insb adc inc push orb (bad) imul ds shll mov jmp outsb leave sbb adcl dec call rorb xchg jns xlat dec sub inc sahf ds and mov sbb mov cmpsb xor arpl je push mov jb xchg repnz cmp imul mov sub pop dec pop stos and mov loope fsubp push aaa mov mov xor scas je repnz dec or ror mov pushf dec notl loop leave pop adc lods push fs (bad) sub test cmp lods sub mov jge enter push lret push stc test stos xor loope xchg mov add jmp pop sub cwtl adc xor add jecxz push add jp dec leave stc aaa (bad) pop sub or push and mov add mov mov and pop xchg scas push imulb test loop scas mov notb loope in lea mov ds or sub aaa adc jb test inc (bad) mov shlb sub cmpsb and xor and decl xor sarb mov mov xchg in add jnp cmpsb scas dec repz js aam into xchg jmp not insl mov adc xchg stos dec or inc inc add ja add aas jmp and or sbb fistpl mov inc and lock xchg jle int push aad and xor fstps aaa (bad) and daa ja xor adc pop push mov xchg pop xor popf xlat cwtl fwait add in call les jmp sbb adc sub jmp adc addr16 adc push ror int3 sub imull (bad) push (bad) push aas adc dec out addr16 imull mov test sub mov jge push adc mov fwait xor sub mov mov jmp adc clc popf mov jecxz pop adc in push jno xchg inc scas adc inc mov push push in sbb sub mov dec cld jg mov push sbb add jae add adc pop adc scas bound mov pop sti jecxz,pn dec cmovp jne js xchg fwait in pop pop sbb outsl jle sar or push pop icebp in test fwait bound and and testl or sub mov mov adc mov ret xor push iret sbb xlat jp xchg bound out das xor mov (bad) dec sbb les cmp rcrl mov fcoml pop in int3 in or in cmc dec xchg into pop xor dec data16 jns lds das jnp inc or je imul pop lret test in cltd mov dec les push push push pop jl push stc sub shrb xor xchg scas sub and or out jmp and fldt mov mov push aaa int3 movsb xor lret mov jg fdivrs int3 xor mov les or stos sub xlat mov fsubr aad mov dec daa loope push ds ret mov mov add mov mov movsb inc xchg cmpsb cmpsl fist cltd sbb out popa inc sarb xchg into scas mov sub out into xchg xchg push sti dec and adc decb js into ljmp rcrb into pop enter adc mov je mov sub inc das xor jle repz notb pop adc push aas mov push jno dec or aam jmp push lcall (bad) ja xor aas jecxz and jno pop into test mov jne sbb orb mov cmp jmp les rorl and mov xchg pop xchg fistpl fwait stos lds cmp push dec call sub add repz rclb mov add fdivp jg rcl dec (bad) dec mov pop dec push mov add (bad) xor add fcmovbe xlat cmc enter (bad) jmp jne dec imul pop (bad) outsb test out adc leave repz sub cld sbb loope mov mov or sub mov and dec mov cmpsl mov leave sbb fild add sbb negb push call orb arpl sbb std sbb mov test es (bad) dec dec cmc cmp lret les mov add jbe fdiv int push sub loope mov xchg mov and call sub cmpsl (bad) dec push inc cld pusha movsl pushf mov mov (bad) mov mov sub cmp repnz jecxz int das test jmp cmc dec ljmp inc subb ds dec in pop mov push dec scas cwtl mov jp and fldcw out mov push sub sahf sub sbb lahf pop cmp adc jbe repnz xor xor adc out pop xlat mov lods push pop or sahf or mov mov xor data16 out add sub mov sbb ljmp sub cs (bad) stos rclb dec adc and add fsubrs (bad) cmpsl adc movb mov sub lret imul mov pop adc cmpsb imul aaa push enter push sub int cs pop mov mov (bad) mov jmp daa call add inc (bad) pusha and push (bad) add xor nop sub add mov bsr idiv add push repnz fidivr mov jne or enter test pop sub and ds mov es add mov or mov xor xor out pop mov push jb push mov cmp jbe add pop mov or jge cltd sahf cltd and xor pop loop aam add or dec adc jns out outsb lret mov mov inc pop fdivrs jns inc mov jae loopne pop sub push sbb push dec xchg push pop add fcomps jne inc cmp pop imul pop sti pop add add sbb inc in pop push in stos mov test pop (bad) xor pop push add or in cmp aad or sahf sub inc lds push cmp jp rclb push sbb aad adc pop add stc mov shr outsl inc adc (bad) das jnp cmp arpl test add xchg add push pushl pop pop out pop push push pop cmp mov sub pop xchg xchg pop and inc mov push loop mov xor std (bad) xchg xor or push hlt push outsb push insl ret shrb push pop push mull add mov pusha adc mov or jge rorl pop jle and mov push pop pop mov jle adc xchg jmp cltd gs mov je das pop sti imul xor inc test mov stc xchg std adc lahf jle lret sbb mov mov or lds negb out popf mov ret imul jne mov pop mov lcall sbb aad lock lods (bad) rcll out imul mov sub repz std xorl aas out dec lea mov dec mov pop aaa push mov stos pushf push imull push pop push lock lret dec decb pop add lahf call pop mov push ret push push jle imul icebp aad push xor out pop or cwtl adc popf je pop icebp out pop pop mov (bad) dec jo sbb mov or adc inc sub pop shrl shrb mov popa dec and mov dec or ficoml dec cmp out xchg hlt iret ljmp pop out lods imul iret or mov (bad) sub andb shlb adc and add sub add mov mov sbb inc jl adcb lods lret push sbb dec iret test mov fs adc insl aaa pusha add sub dec mov xor movl clc negl insb sbb and sub jp or into fs mov out dec sub ss into inc (bad) xchg jnp sub add test cmp lds sbb stc out jecxz and push jno mov xchg xor xor cmp out dec iret mov enter push shrl push cmc in test cli lds sub and cmp sbb dec jmp ret push inc movsb sub mov dec ja sub push div aam cmc cmp mov out test mov sti arpl sbb push dec jecxz outsl add push xor out ret pop push in push dec scas repnz xchg mov mov xor inc dec mov mov pop insb ret test cmpsb cltd dec dec ds fs mov imul or cmpsl mov fs add cmp mov sti loop xchg repnz out xchg mov push cltd cmc not popa jecxz push adc add out mov adc pushf mov or adc add daa sbb cmp sub cmp jo aaa push push pushl (bad) sar cmp scas xor (bad) fildll stos sub movsb mov incb stc mov daa jno xchg (bad) xor inc jle dec cmpsb dec cmp push sbb dec loope leave (bad) insb sub and pop leave mov fildll mov ret and mov repz mov dec mov xchg inc or out ret fstpl mov cltd add ss sbb popa pop add imul push insb xor add push out rcrl jns (bad) sbb cmpsl (bad) mov add pop jle lret fsub mov pusha test add rcrb pop flds imul out movsb cmp xchg mov or xor repnz cmp mov sub inc in adc idivb fstp push aas in pop dec lret out stc ljmp (bad) mov lock mov cmpsb mov lcall sub fidivr push and and dec mov push divl sti scas xorl cmp dec add mov mov insl xor sub out and fiadd out pop or pusha ret adc or push add pop push imul sub push mov (bad) push shrl lds ds dec in push mov add cld pop xor rcrb aas sub mov inc dec sub out pop add or aam or jae and mov mov neg push xor stc ja dec pop arpl shr stos xor pop pop mov in push mov jnp (bad) pop mull (bad) inc add fimull cmp movb lods daa std pop push xorb cwtl mov ja add pop aas mov test fdivp mov adc sub inc add std shll xchg cmp jge sub xor or (bad) pop jmp pop clc add popa fildll mov daa mov add pop ret ds popf xchg add pushl lds sub dec sub cmp xor bound pop fdivrs shll sub popa mov adcb jg cld jne or ds push pop push push bound xacquire mov das push mov mov push push inc fiadd pop xor mov mov mov mov or popf or dec and stc xor fsubs loope and cld and leave add pop inc pop test out jmp aas in pop leave iret je push add adc jg je int mov inc pop scas sti push daa fistp aas aas or cwtl aas add cs pop and (bad) sub push dec jnp cmp dec scas adc push xchg mov repz mov mov ja js (bad) out cmp push (bad) push (bad) in mov out cwtl and lock xchg and push inc jmp das jle (bad) or out jnp pop sub dec or mov xchg ret inc xchg jp (bad) mov sub jns leave lock clc xor stc std xchg add ljmp push xchg in dec xchg movsl mov sarb or sti sub push mov mov pop out or ret pop insb mov imul sub mov fcmovne lret jne sbb and (bad) negb dec mov xchg fstl in jecxz fsqrt imul fmul inc (bad) leave jge inc sbb fcoml movsb clc not mov pop ret sub jae xchg out bnd movsb lcall icebp sbb icebp jmp push shrl push out adc (bad) lea jecxz inc hlt imul ficom pusha cmp or or and mov sarb dec xchg sbb push and popf pop rorl faddl jo sbb (bad) xchg in and (bad) or stos xchg and sub mov repz lret es pop pop out sub mov je ficomp fs jle (bad) xor mov sub sub out mov pop (bad) and jo and pop xchg js pop xlat xor mov jno or adc mov xor mov mov test adcl arpl jmp scas sub sbb mov aas or in imul push fiadd lret icebp in (bad) or and movb push fstpt mov jmp jmp icebp xchg dec or out fsubrl jne call cld sub movsb push rclb jmp out ret jl (bad) (bad) in xor xchg push mov and std inc mov xchg add out jmp sub rcr mov pop pop mov sub jg pop add notl sbb iret mov xchg dec jmp lods mov test fiadd pop mov mov xchg ret iret out movsl cmpsl pop cmp sti stc sub xchg inc mov mov lret stos cmp xor dec dec xchg dec shll je,pn flds push adc or mov pushf ficom (bad) lahf lds sarl insb popf sub jl and fcoml add mov les mov daa stos loop mov push push loope jnp mov sbb movl stos sub sub (bad) and mov jle mov lock das lods int3 mov subb jns ss lcall xchg xlat jo call adc jnp push xchg bnd (bad) dec xor cli pop mov jmp cmp sub sub mov mov or and out xor pop inc lret xor adc out xlat gs mov inc fisttpl or shr inc pop mov xchg lock lret lods mov mov dec (bad) and sub xor sti mov jecxz dec loop cmp pushl fiaddl ljmp mov push mov dec shr xchg mov mov dec int3 dec adc lcall decl xchg pop cmp xchg (bad) push sub xchg sbb ret pop mov popa out mov sub mov add xchg sahf push (bad) ljmp clc jmp leave ljmp loop fs stos fs mov add inc fldcw pushl popf push push (bad) or aaa mov mov xchg sub fimul xor mov and push pop daa repz fwait inc dec scas sti sub xlat push mov jg sti aas xor test mov xor jne sti icebp icebp bnd orb xor dec jmp push loope (bad) xor add out es mov pop push out lods out cmpsl pushf and cltd adc push js ret (bad) sti mov push mov stos xor pop xchg pop shlb or jmp mov mov push add das xor xchg xor and in (bad) dec es outsl lods je cs mov leave shlb sub dec sbb xchg mov test sbb xchg fnstcw jno leave xlat or and sub mov movsl fmull popf sarl push das jno mov cwtl daa ret fnstsw or sub subb xchg mov and fisttpll fnstsw mov mov loope xor aam clc add decl mov jp add xor lock ret cmp fdivs mov into cs mov clc loope xor dec or movsb scas test dec test fsub mov pushf dec les and push push out ja add or mov lods xchg fisub or and mov and mov pop popf in or scas fldcw roll bound into mov loope cmp sbb lods insb jns sub mov daa push dec and xchg add dec stos push test fmull and pop lret sbb loope ljmp andb fdivrs and fbstp cmp and xor jno xchg xabort fisttp or loop popf or mov in cmp repnz loop mov sti cmp lahf insb sbb call dec and outsb push xchg ret add mov loop xchg cmp ja test cmp ret repnz ja shlb pushl push fimul (bad) popf (bad) jae add push sub mov jge rclb sbb mov les adcl in mov inc add loopne daa cmp dec insb cld clc xchg fisub and sahf or or push cmp pop xor call mov push and test leave jmp adc sub or mov pop rclb dec dec je dec jb in or in sub mov sub (bad) rcr repnz rol sub and loop inc int xor xor mov pop lret xor mov and lret (bad) xor pushf sub xor (bad) sub fcomps cmp das test lret iret pop in (bad) cmpsl dec les dec or xor das call push hlt icebp fldcw stos fs push ljmp adcb push cs pop and or mov xor mov or mov sub push mov ljmp mov addr16 les jo mov push (bad) divb ret pop push daa push or cs mov call subb add leave (bad) cmc lcall push outsl lods repnz call cmpsb sub or add lock idiv push cmpsl pop aam pop out xchg sub mov repz and xchg loop (bad) mov out (bad) (bad) adc (bad) push lods (bad) movsl call sub cmpsb sub xor enter lds and test (bad) aaa jmp cmp imul shrb lea and sbb or dec repnz jmp sub xchg and dec sbb jns loop std jno inc add dec (bad) negb sub push jp inc pop dec out (bad) inc lret gs pop in roll mov stos dec mov or cmpsb cmp (bad) jbe imul daa out out ret test push rcrl es mov xor out aad mov and and jecxz es test cld jne stos xor (bad) jns lods push sub or and sub jmp into inc xchg mov jbe cmpsb stos push (bad) cld jg sbb sbb (bad) ss fwait xlat dec xor mov xchg idiv leave fldcw imul jno or push ret (bad) ljmp idivl cmc iret cmp fisubrl pop loop xor lret mov or (bad) ljmp ljmp ljmp fstl imul pop (bad) fiaddl (bad) push sub sub mov mov ss dec push into jns stos push ljmp xchg jnp loopne lret dec push mov sub nop add and stc loopne fdivp das push mov daa sbb push push je jb cmp or xchg add jns mov mov sub jno cmpsl aad call mov jmp mov vrcpss xor adc out fidiv (bad) bound xlat out add mov adc lods into movsb cwtl mov fcoml daa (bad) jae adc jmp pop shrb pop sub std repz pop stos mov xchg popa or sbb pop pop mov dec cmp mov cltd (bad) xor stc mov ja cmp loop dec das xor les pop sbb fs add add sbb lret hlt test (bad) cltd jle mov (bad) cmp mov dec hlt ret fidiv js (bad) popa and sub (bad) leave sbb fisubr dec (bad) cwtl (bad) leave xchg xchg and cli scas fldenv jno jle sarb sub dec jg add and mov shr mov jg (bad) or and movsb add sarl mov imul (bad) mov xlat outsl ret mov imul xchg pushl imul cmp add add mov push and test cmp shrl (bad) mov daa push insb add gs orl jnp xchg movsb mov and mov cmp jg cld cld sti push and testl mov jne xchg sub lret bound ljmp xchg push stos dec repnz loop sub push mov and test sub leave out icebp cmp cmc sub call push ret dec pop out cwtl test loope pop pop mov mov pop lahf push or dec pop andb push (bad) sub scas and sub outsb jp push loope mov ds or sub mov xchg jge cmc adc ret sub jmp aaa into pushf mov sub daa dec sti push into mov sub jo pop mov pop mov pop or sbb sarl inc push adc mov (bad) mov (bad) dec orb lods rcl ds and jne repnz fstps lock fisub mov xchg into cmpsb push (bad) mov xor das pushl inc push daa popf (bad) hlt push pop and dec fist adc pushf (bad) lret inc add or sub js rcll (bad) mov dec decl movsl jmp es into push or ret (bad) (bad) sti xor mov out xor push shrb in outsl xor mov jg lock lahf pop push ljmp push sub pop mov push mov mull ds xor push mov add sub mov pop mov es imul push jnp cmpsl aam icebp cmp pushf lods or ret add (bad) data16 or fsubp testl sbb push mov dec movsl sbb inc lahf pop movsb ret adc lret adc mov sub mov loope iret sub sub negl mov and divl lods lds div xchg sub jnp dec jmp lret cltd dec das out sub pop or dec xchg movsl push xor ret sbb mov (bad) dec adc test in push pop add stc cmp das out cmc mov cmp xor aaa or mov jge scas popf jno dec jge shll or jge xchg das xor dec jecxz fwait enter xchg stc mov and mov sub aad loop out stos ss enter dec jnp adc adc (bad) out mov icebp and inc mov fucomip into xchg insw add daa mov loope pop xchg adc in call xor cmpsl mov sbb adc insb outsl (bad) shlb xchg fnsave pop stos xor add mov sub test aad gs mov cltd (bad) mov and mov stc cmp movsb mov jmp iret xlat xchg jge int lret xor in dec movsb repz push in push jb push fldenv mov jle jmp adc push pop lods fcompl pop xchg cmp sub ret cmp (bad) pop push mov add cmc int3 jp mov call aad xchg icebp pop xchg popf push dec shr repz cs icebp and pop (bad) mov cltd sbb sub cmp leave movsb xor (bad) cli out aad ret iret leave ds lcall leave jno inc sub in in push jl xchg fbstp mov ljmp aam (bad) gs test pushf popa add stos xchg loop push shll out idivw sub jbe pop divb sahf inc jmp sub xor add icebp and repz push sbb ss es or sub mov (bad) sahf pop call imul cmp mov call ja adc popf fnstcw fs sbb pushf push sbb and pop mov cmc dec dec cmp push push pop pop (bad) fadds sub inc inc or in es aam daa gs ja nop mov jns inc idivl push lds bound mov cmp adc cmp mov mov sbb jmp and mov or xor hlt movsl leave inc adc in mov pop (bad) pop xchg loop nop repnz mov jle mov fnop pop call rolb xor out insb movsb xchg (bad) ficom sub xchg xlat mov das insb dec (bad) lahf add mulb fmuls fwait sub add jp mov mov jge enter bound adc or mov mov push imul lret ds cltd clc cmp notl dec cld sub and and inc jmp int sub mov push call pop das adc inc sub xor add pop lods adc fs jne popf and ret jge mov mov pop aaa mov adc dec cmc gs and dec sbb lock sub and dec cmp mov and mov aas stos bound aaa imul ja lcall mov xor push xor dec fidivl and popf and mov ret xchg sahf xor adc add xor mov inc or push outsl or inc jnp add popa imul mov xlat lea (bad) negb xor pop popf lcall fist add movb mov fnsave adc cltd sti popa insl movsb sub mov mov ss jg xchg stos (bad) mov mov inc dec mov or jno mov mov push xchg movsb dec aaa ja outsl loope int fs out sub jb dec or mov aam jo dec imul mov dec add sub (bad) out cltd inc (bad) jp or sarb pop (bad) lods rorb lret repz push inc xor xor jne stos xor xor aaa lea cltd shr (bad) pusha test pop fwait push in sbb sbb fbld pop into inc (bad) js push pop xor or or stc scas jae pushf ss out lods fisubrl je jo pop adc fildl mov sti cltd pushf and xchg xchg sarb hlt stos xor xor mov scas mov and and add or sbb repz cmpsl out call dec popa cmp xlat mov adc cmp jp aam jb (bad) iret jb pop (bad) mov shrb call sub das adc cwtl mov cmp cmp daa mov adc jbe pop sbb dec sbb adc out fnsave scas imull sbb mov into dec pop (bad) repnz dec sub cmp add mov xor xor add cmp rorl subb sub movsl pop out mov pop sub lret dec in push dec mov sti cmp test jmp das mov mov mov mov pop jmp mov xchg idivl loope addr16 leave rcrl or pop call (bad) dec fild add mov xchg mov sti jne mov aaa pushf lcall sub cltd arpl mov leave ret fucomip or add cmp movsl hlt mov icebp fisub into into jle cli sub mov mov inc leave repz dec cmpl push add fisttpl int3 lcall sbb fisttp xor add inc sahf leave idivl xor mov in pop loope or mov enter sbb adc xor or sbb outsl stc jg jns aas dec xlat loope loope in mov mov and mov aaa jle (bad) jp nop jl dec stos fnsave shl or insb add xor or pop outsb cmp and rolb dec jmp pop push jno add adc or (bad) fsubrl je jbe push jmp or lds mov push and shl mov (bad) (bad) push mov ljmp push add lret out hlt bound bnd sti sub lock lds add scas sub sub sbb mov outsb das pop mov sbb push shrl repnz jmp xchg andl enter xor xor stos dec std pop dec add sub push clc jo mov incl xchg pop adc push add sub and idivl inc pop or add add cwtl clc pusha pop cwtl je pop jg add pop add ret xor fstpl xchg mov push int mov mov jg mov and hlt aam adcb es nop sub push pop push shrb lret sbb jg je push aam pusha pop movb loopne xor xlat daa mov push or add loope aaa pop ret in or sub rcll mov adc sti ja push cmp jae adc push push popa idivl hlt add lret push icebp sbb mov lock pop pop push push sar daa iret cmp loopne or (bad) ds add mov inc push sbb push adc je fdivs dec add push push push push cmp sub push fsubl push add enter jbe jb inc fwait mov mov cmpb or inc cs imul xlat mov push hlt (bad) or das mov cmpsb repnz jmp stos push hlt mov int xor pushf aas jle sti sub scas xor bound dec pop dec cmp addr16 mov stos popf sbb and or sub jne sub test (bad) (bad) cs jne mov mov and or jb sbb jmp out adc sub xchg daa push mov cld (bad) and mov mov push sub sub and (bad) push inc pop mov adc add lock mov into xchg xchg hlt push inc fsubrp mov cmp xor push mov or cmp inc dec mov movsb mov (bad) cmp inc lods ret pop sbb dec cs insb push mov mov out pop mov cmp xor xor (bad) fwait push xor jmp mov incl sub rorb mov and push sbb ljmp sub data16 adc push xlat test mov dec les adcl int sub adc xchg push mov divb idivb mov add int sub cmp mov mov mov add and mov idivb push adc jmp or sub push or mov dec test jnp jmp xchg ret test jae cwtl int mov ss sub add sbb mov cmp pop sbb adc lea (bad) cmp sti popa (bad) xor ds adc mov mov lds fwait jmp push les cmp add mov ror and sub adc outsb cwtl xchg sti nop inc dec or jge dec sub imul mov adc sbb jge mov sub clc call xor pop mov ja and rcrb bound lret cmpsb enter cmp sub (bad) lock xlat dec xor mov add mov out mov stos stc push arpl data16 sub push mov adc cmpl sub mov paddd push das jne push cmpsl in xchg pushf or je jmp add (bad) loopne pop std cmp fcomps cmp les cld int mov sub push movzbl mov and xchg lods test xor xor aas mov sar push mov lds mov add sub dec push jmp push ret clc mov or xchg addr16 cmc cmp mov (bad) fisttp std sbb in pop adc idiv adc xor mov fisubrl xchg jbe mov rclb mov roll pop dec mov data16 mov push sub add rcl push xor popf and xchg js lahf sbb pause mov mov xor ret xchg xchg (bad) jbe or sub xor insb jp out mov ss mov cwtl mov fld sub and (bad) mov cltd outsb and imul (bad) adc jnp or cmp scas idivl xchg add fadds add cwtl mov jl je adc mov push mull mov (bad) notl in pop in mov dec xor or out int3 dec pop jns pushl push push xchg cltd adc push push xchg and out mov push jge sub push icebp aas adc and lcall in mov pop sahf lds sbb ss push daa rcr lahf cmp fistp mov aas jne sti popa lret imul mov jno mov inc mov out fcmovu xor xor test push enter das jmp shr pop mov outsb addl sub outsb cmc and es jle pop sub bound cmc (bad) out int xor rorb addr16 mov xchg mov out mov fdiv jmp mov fisttpll cmp pop add leave jg jns mov sub xchg jbe into stos mov outsb jl ficom mov mov jo mov popf sbb pop out adc xchg icebp mov loopne repz inc inc das (bad) lcall add sub xchg pop imul rclb mul mov mov ret mov xor push jb icebp sub and insl pop aad mov loope aad adc push jnp lods mov adc mov or inc lret adc (bad) fnstsw popf push outsl lret ss jl bound call xor imul and out testb les add (bad) inc xor iret or scas repnz call mov mov cltd mov ss adc in scas lret mov xchg adc or stc push stc daa std fwait push outsl push loope cmp icebp mov xor icebp inc faddp aas repnz xlat mov and leave jge and shr mov add jle pop mov dec fadds out mov xor inc and sub das (bad) dec push iret adc and add xor imul (bad) iret dec mov fnstenv in lahf (bad) xchg lret je dec jg rcrl and scas in nop in jo xchg sub sub icebp leave ss icebp fcompl and push push xchg std adc mov dec or sub mov push call sahf aaa push loop std inc xlat inc mov cmc xchg fwait mov enter imul std xchg xchg mov jl jno ljmp xorl jp es push lahf mov pop in or pop push xor movsb xchg xor mov popf xor jge outsl pop addb repnz lods negb cmpsl mov mov xor and pop xchg xchg add jle lds inc (bad) in and out jb mov pushf sub imul inc and andb add sub mov adcb and mov frstor add es mov jmp sbbl sbb pop or mov mov hlt xchg (bad) je and xor cld xchg (bad) gs call cmp adc xlat dec dec ret sub cmp arpl es sub jmp (bad) adc and fs cmp mov loope into fwait fwait dec pop add ja xor jg adc push and xor repz das out dec mov jne fldt cld daa mov mov (bad) mov dec icebp jb cmp mov xor mov jnp mov cli lret frstor lods xor or push push mov loope cmp stos xor inc mov add scas repz xlat mov mov popa (bad) mov daa mov (bad) xchg or ss mov sub jle and call mov xchg push adc iret xchg xchg mov fdivrs or sbb xlat xchg lds idivl push and mov lock sbb negl pop dec jmp jne add xor mov (bad) cmpsb cs jmp inc sbb repnz ljmp std das mov inc adc push (bad) push and sub call xchg and pop pop jle repz cmc lods test movsl push adc lcall leave sete (bad) fistp jne repnz je mov movsb push sub dec outsl repz ds sub outsb sub jmp cli shrb and and jl inc out in imull sub movsl adc into clc test clc popa movsl out pop xchg inc sbb jns mov xor pop add jns,pt movsl xor icebp jno xor out xor data16 push add fs mov test insl ficompl pop (bad) adc loop cltd outsl or lret in insl loope repz mov jmp jne arpl rorb sub adc adc sub scas dec dec push jne or push and jmp call (bad) mov dec dec pop cmp xor mov jns xor out mov jp call outsb call jl les (bad) mov sub ret mov daa dec add sub and xor xor dec (bad) cmp sub lods and add jl leave inc sub sub add dec sti jbe pop or sbb or jbe dec cli (bad) mov pop mov or xchg outsb xchg sub test sub or inc lds or lret xchg xor fstpl xchg add das (bad) popa mov xlat cmp inc or fnop imul xlat mov scas in es test inc cmp sub pushf out xor imul xlat jmp or (bad) fisubr push push jp stc cs xchg sub dec out mov jmp sahf jmp cmp xor mov jg (bad) push pop jle (bad) int sub xor add sbb push sub dec (bad) lea jnp inc sub push imul push or imul pop (bad) dec adc and aam push bound and (bad) sub xor movsl xor sub xor mov idivb sti fstl iret aad ljmp cs fs fwait cli cwtl jnp jb cwtl dec pop into sti sub cs rorb jb sub pop lret scas lret push sub cs into and popl jnp (bad) popa repnz inc pop xor xlat decl fwait (bad) dec xor in into sbb ret andl xlat clc jl,pt cli lock cmc mov or dec cmc adc jecxz out cs movl cltd std pop xchg push adc sub dec jno sub cmp ret sarb inc mov test jge enter sub xchg push iret pop or aad insb mov mov lret mov je (bad) jnp leave mov mov js das sub adc ds jo mov xor pop mov or mov and dec xor add jge imul adc add pushf loop fsubrl ret repnz stc mov and pushf push or popf jbe outsb jmp fsubr jle pop sub cmpl xchg fcoml sub cwtl inc mov or mov add (bad) add cmpsl fs add or mov push xor fnop es mov pop jecxz adc neg frstor test adc mov les dec repnz out lret movsl pop jb or xor and (bad) mov xor cmpsb push dec rep xchg push jg rol sub add std lret fildl in jne add outsb mov xor loopne or xor lcall inc lods pop jns or sub xlat push jle fldlg2 imul and xor jg xchg or mov or pop mov or repz incb jno dec sub or ss test mov sub pop hlt jbe ret mov inc or shrl lcall push in scas sub aas sub xchg mov lret mov mov imul xor stos mov adc jp dec adc stc pop mov jg mov mov or repz dec ds or push loop sub push lods mov or imul add mov scas fdivp cmp xor xchg out push pop xor sbb das pushl add (bad) icebp add jg sbb cmpsl (bad) add shr sub out mov fsubrl cmp repnz xchg push adc aam js or leave std push leave out jnp mov pop jge hlt mov mov jbe mov mov mov xchg out dec inc push incl add sbb xor sub into or aas data16 xor rcr and pop inc fisttpll cs rcll xchg xlat push aam add (bad) das fsubrl sub jbe xor add or pop out (bad) call (bad) ljmp adc repz bound inc mov icebp cmc sarl stc scas inc or sbb data16 pop and mov jmp or xor lcall daa add imull xlat out sub mov xlat mov mov mov adc xor or or ficomp lret stc sti pop lds test adc dec inc dec scas lds bswap push or lahf dec shl jp stc xchg mov and addr16 inc gs xor mov cs int3 rorl lds (bad) in push jecxz in adc data16 (bad) adc fisub add (bad) test loope cmp or ret jnp xor add in jmp dec sub aas fld mov pop mov pop in mov inc adc dec (bad) divl test fisub shlb ljmp daa push das out lea or xlat (bad) and leave dec ljmp inc repnz pop mov xor mov xchg push scas lea repnz jo ss icebp sub push out mov (bad) or shrb dec jle push add pop out push cmp pop ret mov lods sbb xor adc sub jnp sub call test repnz mov mov mov lcall negl addr16 in cwtl xlat into stos daa push add aaa sahf jne scas repz into incl mov mov mov daa or xchg cwtl push sbbb pop xchg cmp dec xchg into mov loopne sub lret scas mov adc out cs out mov adc fnstcw sarl in fs aam jmp popa mov sub push jno pop (bad) cmp pop or (bad) popf (bad) pop das adc and das add pop lods add fnsave dec mov ret pop mov sub mov negl lret fxch add dec (bad) xor leave inc movsb mov icebp dec fcoms mov roll test and pop lds and mov fisttpll lret sub pop adc pop test movsb scas es and fs adc mov mov sub aaa cmp cltd fsubrp rorl sahf insb inc add das idivb cmpsl ja sbb or pop and push dec stos iret or adc inc cmp (bad) jg leave fildll cld popf jge add mov stc mov (bad) addr16 cmc adc lahf nop pushf add cltd xor popf insb cmp mov outsb (bad) repz inc popf iret cmpb bound fistpll lock or or mov (bad) cli (bad) inc jbe sbb imul dec ljmp and sub jne cmp xchg sbb xor lret lret adc (bad) cmp add ds jmp loope movsb pop in outsl imul insb xlat xchg sub call imull mov xlat jmp sub jb xor xor xlat out sahf xchg imull push in scas pop sbb stos sub or (bad) xchg ret gs mov sbb add mov in clc sahf lods shr adc insl push mov xchg cmpsb mov cmpsb inc mov lock shrl dec movsb int3 das or mov push (bad) mov xor jno movsl mov or mov (bad) enter inc mov add fisttpll mov lcall xor test mov mov fcmovnb cmp imull inc mov clc jmp bnd iret push inc adc xor out mov leave or or ja mov push lret push fldenv adc jmp inc adc stos mov shrl sub cmp testb jecxz loope ds lods sbb es (bad) add sub dec mov insb (bad) or (bad) jnp mov cmp pop jl dec sub and mov jle (bad) or jmp fist jnp scas aad aad fstps xlat loop pop xchg loop subb fmull mov inc jmp das xchg out imul mov sahf rclb repz ret adc mov mov dec lods jno xchg xor xor sub sub mov dec imul mov dec mov xchg out mov inc movsl dec in fs mov sbb ljmp mov jmp rolb sub or xor and out scas into pop into lods dec movsl fdivl jb fnstcw or scas mov daa leave add xchg xchg pop dec jg jl pop imul sbb lcall cwtl pop and push mov cld lods mov call nop cli outsl lret enter popa jp das cwtl (bad) sbb js adc inc xor dec outsb std xlat push loop mov or cld or cmp inc mov hlt mov inc inc add sub pop xor xchg into test mov out sub mov mov ret or jne dec sub xchg dec imul sub outsl mov and lds mov lcall xchg push cmp sub sti stos scas push sbb mov arpl jnp inc loop (bad) lcall mov cmp add repnz mov or mov jbe push mov sti (bad) mov jp pop lods inc mov in stos adc jmp cmp xchg mov mov sbb cmp out jl xor push fidivrl out cli popa das movl ljmp dec mov dec and cmc rcr xor (bad) or and or lret dec and leave je cmc sbb mov pop sarb repnz dec pop daa sarl orl cmp sbb add std out rolb ret and lock xor lea aas xor cmp insl mov or sub bound dec in push cmpsl test mov xchg inc clc negb loope sub lret fwait jle sbb mov loope xor inc add in jns imull mov cmp pushf jge xchg ret daa or add mov and cmp mov adc loop in xchg ljmp cld in test test xlat mov fdivrs ja mov cmp idivb imul in ror xor enter sbb repz adc test sub mov xchg pop mov bound adc inc add jl adc stc hlt xchg ljmp in jge test or (bad) dec sub mov dec sub sub jmp xor push adc ret fstl xchg or pusha xchg fistpll ds jne fcomps lret in jp rcl popa xchg cmp out xor repnz jmp inc dec enter mov popa push ret sub out dec or out xor outsb lret or lret outsb mov icebp orb scas and outsl icebp xor xchg cli dec mov (bad) ror or aas jmp ds jl cmc xchg and test mov es xchg mov outsl cmc mov push and pop stc cltd mov cltd sub data16 dec push ljmp cmp dec push outsb jb fcompl sub or rclb sub pop (bad) xor stos or sub iret jne xor stc push ljmp loop fldenv hlt xor mov shll stc mov pop inc xor addb jb or sarb pop push mov and mov loop mov xor lcall dec shr icebp cmp (bad) stos sub ret jle sub sub xchg ret xor dec jbe xchg popf sbb test adc out add mov imul jle cmpl mov xchg adc loop sub xlat fbstp jg xor inc leave jne (bad) movsl je imul cmpsl dec xchg hlt jb ljmp out cmp sbb test cwtl mov sbb ja push cmpsl jle (bad) cmp push pushf mov xchg adc sbb cmp int3 scas dec add test adc xchg and pop mov test pop lea lret xor dec lret mov pushl push lcallw (bad) push pop leave jle stos xchg add or (bad) (bad) lahf je gs cmp mov cmpsb adc call cmc popf cmp or imulb insb rorl mov mov push cmp and and sub sbb icebp jmp or mov incl sbb hlt add add jns mov and xor inc xchg flds mov and fcomp pop orl ss or call sbb bound pop sbb leave jnp adc (bad) sub sub inc xor sbb or fstpl (bad) adc fstps bound leave pop test xor imull rcrl jo pop mov xor (bad) and decb lret add xor jmp icebp je ret jns pusha pop inc rcl pop and mov inc and push lods cmpsb cwtl or fld1 dec xchg (bad) xchg gs das cwtl xchg repz adc mov pusha jmp add daa (bad) je sub lock inc sub loope mull cwtl push add cmpb mov fadd out pop pop ja mov das clc mov pop push or movsb adc scas sub out pop jg lea loope and mov xor and iret hlt clc pop je (bad) into mov xchg ja or and into mov push and pop mov push sbb rcrl pop jp and pop sahf imul loopne movsb pusha push mov xchg mov mov call sbb testb mov popa xor add icebp cmp je pop icebp sub add sub mov dec add lods (bad) movsl scas mov test and dec sub xor cli xchg add repz outsl fadds jp lods shrl and inc bound cmp dec push popf subl lcall lret ret fidiv sub jns inc and sbb scas adc jo xor mov shrl dec and sub jne jmp fisttpl and push divb inc xor sti in leave mov or imul sbb lds scas mov fistpll outsb mov sub aas adc push cwtl adc mov in push dec adc jg fisubrl scas push scas inc data16 dec pop sub push push xchg aas popf orb sbb dec sub movswl ja fidiv sub inc or mov movsb setle ljmp rcr sahf xchg (bad) (bad) fistl ret test sub pop inc daa ret stos and add mov inc cmc lret mov fstl cmp fistl cmp mov or mov fs repz addr16 and push jge xchg jb add xor jecxz dec dec das loope (bad) das lods pop lcall push jecxz adc sub insb leave cli cmp (bad) repnz push pop out mov jle jmp push mov adc cwtl (bad) jmp mov xor push in lock adc mov (bad) dec xchg imul pushf movsl negl dec mov mov pop xor int3 mov mov xor (bad) cmp pop lods inc ja xor xor and (bad) sbb mov sbb lods push cmp mov repz sub add add mov sub mov (bad) push (bad) pop or adc push push add sub stos mov repnz lret jbe imul in add push or scas adc push sub and ret xor or add jg push out mov sti mov inc out push cmp mov mov mov jg push mov push inc fbstp sbbl repnz xchg mov ret dec sub inc jb mov repnz mov xchg add push dec cmp out mov or fisub stos or sbb test in jp movsb or push fnsave in (bad) sub push mov notl mov jo mov pop sub xchg clc test clc fstl push pop xchg mov sbb enter std dec jno jno sub xchg mov hlt (bad) out dec divb jnp popf mov aam leave cwtl mov ret pushf xor sub (bad) into dec push inc out mov mov lret fstpl out cltd sub or add mov and je insl movb mov mov (bad) stc or (bad) sub xchg or mov dec xchg lds ljmp pop pushl dec sub ja dec (bad) mov jg jns (bad) (bad) jecxz shrl or xchg in cmpsl mov aad sub mul inc pop jle (bad) das test sub and mov stc pop sub cmp lret (bad) and in sub cmpsb imul mov call scas mov (bad) (bad) sub jo mov (bad) icebp leave pop pop inc fcomp add ss movsl mov lret xor and int3 or dec repz xchg dec imul clc test negl sub mov and or repnz inc ja in daa aad sbb pop cmp jns jg jno aaa jns xchg pop mull or das mov xchg out test adc sub sub leave (bad) imul mov inc rcr jmp mov ret or or sub in and fidiv jecxz xor in jne cli and mov push imul out or mov gs nop out xchg cmpsb (bad) negb std dec test test xchg mov daa jge (bad) adc scas fild or daa jle bnd loope roll fnop push dec cmp sbb push push push pop push flds out pop xor call cmpsl push sub mov cmp mov jae loopne add bound dec rolb (bad) out sbbb and aam out ljmp mov add icebp pop sub pop mov jnp mov leave and or mov pop mov out insl jne dec pop xchg jae in lea (bad) repz jl (bad) test xchg pop mov or scas (bad) jb xchg mov cli fs mov inc call cmpsl or jecxz (bad) push add arpl (bad) aad nop push rolb dec push fs dec mov mov xchg jmp loope mov std sbb xchg adcl jg and (bad) test repnz jmp cmc out sub mov xor dec adc out popf push and xchg mov sub mov mov xchg adc adc (bad) lahf dec xor shll push jb nop lea or push inc stos and cmpsl popf pop sub lcall push push hlt or sti push jae adc dec out dec mov (bad) pushf mov out mov dec dec push or sti fldcw push adc fmuls js mul pop sub scas mov (bad) jbe jmp push adc aad loope das into xor pushf or dec and into xor fistpl std cmp inc enter push cmpsl xchg push out lret iret insb and pop daa and fistp sub movsl into ja lea and test cmc cmp out or fdivl adcb mov inc or mov push pop sub push fdivp imul and daa loop adc ja jno in xchg mov push xor jecxz mov lods and jmp jmp jmp jecxz cmp pop mov je push jno inc notl add inc pop fdivrs xor sub xchg pop shrb xchg jle push mov in int adc mov xchg inc fldl inc insb mov push dec pop sar int3 aam leave ret sbb stc into cli dec cmp push neg push and repnz rol into jmp xchg in push icebp outsb clc sub lods jmp in test and and and je mov dec in js std test mov add loop sbb xor movsl add les mov xchg mov dec (bad) sbb fistpll cmp xchg push and jae das jmp or sub sbb inc mov imul sub insb dec mul mov mov sub outsl jmp repz push add mov sub sub cld call mov and lahf pop div (bad) mov pop lret xchg (bad) sub dec sarb data16 mov lods mov mov or iret add xor dec adc sub call out data16 out pushf stos cmpsl icebp dec mov mov cmp out stos lock xor gs ret xlat rol inc (bad) and jbe sub jbe sub sarl lret and xchg lods xchg std sbb sub movsl inc dec out sbb xor or adc (bad) data16 mov pop and in xchg adc add (bad) fs jge in adc jnp pop mov jmp std cmp fcomps popf cld insb iret pop (bad) les sbb sub imul or hlt addr16 mov rcrb mov and pop (bad) ja ja or mov and stos inc mov movl add and rclb das jl leave notb xlat mov and (bad) cmp jb aad xor in mov xchg xor (bad) mov out mov mov out sbbb push sbb and das fcmovb mov cmp enter gs out sub xor repnz jno mov sub scas jmp out xchg hlt push je outsb pop mov xor outsl ss adc add je sub pop lock adc add cmp mov mov pop adc das mov cmp mov push mov fcomps sub sub cmp push sub cmp jge scas mov pop cmp or add scas lods leave cld jecxz mov aad push dec loop outsb jmp xor mov xchg cmp mov lahf enter imul mov ret sub pop movsl sti inc xor sub add in mov das addl xor pop cmp negl (bad) test and and cmc mov scas xchg and mov xor mov xlat pusha ja mov fnstenv out div shr inc and push lods (bad) loop (bad) aaa (bad) xor cmpsb nop pop lods xor adc cmp loope sub mov cltd mov (bad) lds sub mov lret rol pop ja or and push gs adc cmc out imul mov dec aam (bad) popa xlat sub leave xor mov or mov inc sub addr16 bts mov je mov sbb rcll scas adc movsl pop repnz push and pop out into mov out call lret das repnz lahf dec sbb pop or jl loop fildll pop cmp push xor rcll icebp mov and (bad) out lahf test jmp inc (bad) stos lret insl outsl xor ret push lds fstl rcrb (bad) cs (bad) std dec stos adc scas frstor mov leave mov les sub jbe adc call movsb (bad) pusha popf lcall ret xor daa push gs movsl push sub mov shrb movsl fldcw jg mov push adc int3 cmp mov pop jnp mov xor and rorb fisttp into cmp dec stos sub rcl mov xchg les push xchg ret mov shll pop sub stos lret stc fmuls xlat insb ficoml movsb dec ret push push sub mov out or cmp dec out lret sbb sub and mov add sub fucomip mov idiv loop leave mov cmc (bad) enter mov cmp add sub fstl xchg and inc jb fidivrl lea pop mov das dec adc rorl sub jns rcll in in sbb mov fisttp inc mov or dec mov fucom push mov (bad) lret scas in in leave jecxz (bad) xor cwtl pop ret pop xchg in jae or sbb movsl dec pop jae adc add leave mov stc daa (bad) and ljmp pusha add inc mov icebp mov sbb xor imul and sti mov sub jmp ljmp mov push or movsb mov mov test stc mov sbb mov adc push or mov push adc pop mov pop repnz pop xor and mov aam mov cmpsl push push inc push add adc xchg inc js cmp test imul pop pushl aas divl rclb adc and dec aas loop in mov mov sti lods cwtl sbb xor (bad) dec sqrtps das cmc xchg push icebp shll (bad) sub sbb jmp stos push pop pop adc sti lcall mov cmp gs mov jno dec mov xor shrl call cmp (bad) sub jle insl pop inc fs push adc push mov xchg fxam add fdivl cwtl push (bad) cwtl mov inc jbe dec xlat sub mov jmp dec sahf lahf ret cli push jge rorb loop sub push inc pop iret sti negb inc sub mov (bad) or icebp (bad) iret movb or and sbb hlt xor fcomps repnz and dec or not bound sub scas jb cmp xor sub sub lea outsb mov xor roll jg (bad) dec cwtl sarl jo mov inc or and movsb inc xlat push bound cmpsl in nop ret (bad) repnz xor insl or notb sub fimul inc imul fldt out inc sub mov cmp cmpsl fs stos mov dec mov cmp out mov shlb fist (bad) stos sub jp shld (bad) ljmp sub aad cmp sbb or scas cwtl shll (bad) ljmp xchg mov add icebp xchg sbb (bad) ljmp aad mov ljmp add loop mov push fisubrl jle jecxz mov lds inc jbe sub pop data16 xchg jp (bad) data16 or cmpsl neg cwtl cmpsb cmp (bad) xchg sbb jnp sub xchg ljmp sub cmpsl shrl (bad) jmp lcall dec mov pop sti je sti mov notl rol inc sub fs jmp or notl jge loop call adc xchg mov pop mov mov jmp push cmpw mov push cmpsb sub jno xchg test je mov scas test cmp mov jmp cld je (bad) mov pushf pop imul mov lods lock mov testl (bad) or bound jns daa notl jle mov fcomp sahf clc mov into and out into faddl in xchg pop mov mov pop call inc dec (bad) xor iret mov (bad) mov popf adc enter lret repnz into mov xor fdecstp cmp pop test mov sti repz jecxz pop ljmp push add jge mov cmp add and inc sub mov test ss (bad) jno add cmp movsb inc aas xor aaa xor (bad) cltd cmpl sbb pushf lret jns sbb or mov push xor dec mov cmc xchg adc out dec (bad) sub outsl xor rclb insb inc loop and add pop arpl idiv xlat mov aad pop sbb mov daa into push ficomp cmp clc jb jp gs cmc cmp in xlat sar popl sbb lds jbe sub mov pusha mov dec scas mov mul pop mov lods push ror dec imul mov xor inc lock imul mov or (bad) movsb jge add or loope inc sub div out dec outsb pop cmovns das and sub jge sub iret addr16 scas movsl cld pop lods push mov jle adc jle xchg lahf push sti xor int sub gs mov sub mov leave and mov ja push das sub (bad) or xor lahf dec lds mov nop mov rep cld mov addr16 mov and (bad) adc popa add push icebp clc dec xor add shll ja adc aad push push push dec pop push out (bad) lret sub das hlt jge into gs stos mov and movsl pop int3 movsb xor push pop xchg or lret mov fldcw adc mov test or (bad) jno leave sbb sub call (bad) push sub std pop and scas cld call xor fistp pop ljmp stos lock loopne loope xor icebp pop xchg mov (bad) cs stos test sub add push pop xor xor ret or es mov out add push leave mov push push mov push sbb cmc cmp gs push popf cwtl js (bad) rcr pushf mov sub nop or xchg sbb push test or fisubr add mov xlat push adc (bad) adc inc sub push inc lret mov xlat lock fcmovnb rcl scas inc mov fsubr pop sub xor sti push testb push roll sub and add xor push loopne fstps and scas cwtl jge pop or pop mov das flds das and pop or add and mov jl addr16 and or js or adc push aad and mov and mov (bad) xor xchg cmp cmp inc and orb fcoms pop pop adcb xor add add xor test xor jb jbe sarl aas jg je add and mov and xchg and and and and cmpsl and lods and and xor ds and shlb ja and and fbld outsl out ljmp addb mov cmp add and and and adc lret sbb sub and stos das sbbb cmp inc addb rorl int xorb lcall stos pop subb adcb rcll imul jno daa je mov add add add xchg sub pop nop nop pop xchg adc adc lahf adc mov lea push mov inc mov sarb jne adc leave adc adc rcrl sti (bad) jmp add add jmp (bad) testb cli add incb (bad) add int3 bound mov add add sbb out add and xchg sub or add cs xor xchg add and and inc and dec and and push and push and and and and sahf jo adc sarb jle (bad) add xchg ljmp xchg and and popf and mov sbb cmp ja subb repz cmpb popf xlat cmpb xor or or jmp shr (bad) repnz negb cli andb jg dec jo or adc mov or sbb cmp dec pop and xor cmc xor mov add aas add inc xor inc sub stc dec add add add add pusha add push je add jns sahf jge pop andl mov movsl xchg and and and mov xor hlt mov repz mov and bound in add add fisub push loopne fsub and add and xor icebp sti add add add and or add pop push ja and loop and sub add xor outsb aas add inc add inc add dec add dec add push add push add pop add pusha add fs addr16 insb add jo or pusha jns inc jge pop (bad) xchg inc mov inc mov vprotq xchg add add add add cmpsl add add add add add ret add adc into adc adc adc adc loop inc out inc in push inc icebp jl hlt pop inc stc mov inc inc (bad) in add mov bound lods clc or aad or sbb andl jnp or or sub int or cmp (bad) or inc cmp and inc push test pop cmp icebp inc bound inc imul xchg push jg jne add xchg mov mov inc xchg dec inc pushf jle mov cmpsb xchg stos add scas add mov pop mov push ret lds leave add rolb aam (bad) fadds faddl loop sub sub jg lock inc repz clc jns sti pushf inc pushl sbb or adc add adc jo add adc ja sub inc xor cmp inc inc in inc mov fiaddl int push movb inc pusha dec inc les sub jno jne bound fs addl add popl add sahf add mov inc test inc mov inc mov ret adc (bad) adc lret adc adc rcrb pushf xlat leave fldl js add add add in nop push repnz adc decb test adc mov or ljmp cld add sbb sbb dec and and sub add xor out mov or or or dec or or push jno subb pop adcb addb sub or orb adc or sbbl aas lea lods nop add xchg add xchg add lcall add cmpsl bound add mov mov or or lret iret or rorl cld fmuls mov or loope call or out adc testb sti add arpl sbbl es or add sbb xchg pop add add and sub add sub xor fnstcw add cmp leave inc pop add add dec add push add push or xchg pop or or or jno mov or test sbb andb sub add sub and enter mov or pop inc pusha and and and and and and and out fs jmp and std pop fisttpl or push add imul cmc push and and and sub stos xor cmp mov or aas dec and dec and dec and and and pusha and and push daa je xlat ja jnp loop add test xrelease outsb lea jno and dec pushf and mov test jp add add add mov sub add and and (bad) jns addb loop inc out ljmp repnz add add or or push add adc ljmp and push and cmp adc sub mov adc aaa adc adc enter inc dec bound fs push xchg inc push lods fs sub icebp popa add addr16 insb add jo in add jp leave jge inc sbbl and out enter add or movsb or movsl or or scas or cmp jb add enter shll inc shlb jmp jno cmpb andb addb sahf cmc subb and subb pop (bad) xor or or or xorb addb mov sbbb xor adcb fs enter add push xor adcb and ret arpl insb andb in jbe push jnp xor mov or test mov and mov outsl xchg and test add add add mov or movb lret or adc inc fadds mov add fild test add inc pushf out add lock repz stc add incb mov or sub and sbb negl and daa and mov cmp push cmpb addb pop xorb imul outsl sbbb movsb jle or lea xor or or or test mov repnz lahf mov cwtl ret enter mov or rorl mov or loopne out sbb or or icebp or hlt or clc or cld or incl add adc aaa or mov adc adc add adc adc sbb adc add add add add add aas add add dec add add add popa dec dec imul andb fnstsw mov adc and adcb cltd xchg orb sub cmp test adc xor mov ret add add iret add and and and jecxz push out add and out bound sbb add sbb add or or cld inc andnps and sbb rolb incb mov sub inc das js xor inc ss inc cmp aas fs inc pop inc dec pop inc dec and ja pop fdivr add add arpl pop add in add jo jl add js mov adc adc in mov inc lea or add jmp sbb pop mov adc adc adc adc aaa mov (bad) fildl int3 fiadd jecxz inc out inc in incl or (bad) lret jne shlb add push or inc aad inc push mov adc inc pop and add pop add add sub xor and adc cli inc add inc add and or adc adc adc push js push jl sarb jle and adc xchg add xchg add push movsb fldenv cmpsb scas add mov and outsl rolb add movb add roll adc data16 leave inc out inc call inc icebp xor cli add incb and sbb les mov das or repz xor rcrl add sbb and add sub inc xor inc ds inc inc aas inc inc or push inc dec adc insb inc push add inc inc pop ds pusha and inc inc addr16 inc jae inc jbe inc jp inc jle inc adcl or adc push inc xchg stos inc xchg sbb xor cmpsb cmp mov pop mov repnz pushf ret les lret incb loope aam inc ficoml popa out push in add lock repz clc add cld add incl and mov lahf or rcll or push adc cmpsl and sub adc adc scas aaa adc cmp testl adc iret pop adc adc adc push movsb outsl adc jne cmp mov fiaddl insb mov add and pushf sahf adc cmpsb adc stos adc sbb sarl les aas (bad) ror add add flds sub adc adc jecxz pusha jmp das lock adc adc push push je or in and and cwtl mov adc or and dec sub push xor test or cmp push inc or inc cmp and and and and pop xor pop mov add add add and and jge int3 (bad) and xor mov xchg add xchg add or xchg inc cmpsb cmpsl lods sbb out or jnp enter jmp push fcompp pop inc fisttpll loopne inc in inc call inc lock inc hlt inc inc stc adc add inc sbb or or cli push (bad) ret ja or sbb iret rolb das inc sub inc xor cmp add add add add add push out outsl add je stc jp mov adc test mov inc lea xchg aam adc adc mov cmp in icebp mov mov add add les mov add add add dec loopne leave in and or or cmc or cli xor xor add or or shlb and ljmp sub stos xor mov jno xorb push xorb (bad) pop orb data16 add andb pop jl adc and enter add or sub or mov stc movsl andb lods add add mov add add lds lock into sbb lahf flds jbe pop xor add in mov add hlt add testl or jnp push sbb lret inc push test lahf or and and push and and and and jns add add psubsb xor or sbb xchg mov or push sbb push pop sahf push into xor pop and mov jg mov adc iret jle mov push jae js hlt pop pusha subl push push mov xor roll jmp jns enter jae sbb sbbl pop xor pop pop sub repz jae jb push mov and pop push add add fdivr or jb or int3 xlat pop nopl in or cmp or test lcall adc dec adc iret jo movsl pop in push jmp pop push jnp cmc in push mov je pop sti lea adc (bad) dec in outsb jbe or or mov adc icebp pop out pushf mov fnsave xor icebp rcrl mov fdiv out push mov pop negl mov iret jae mov adc jmp or idivl lods orb into (bad) or pop pop mov cmpsl adc mov inc add sahf or pop push ja bound sbb outsb lock inc test mull ss ljmp xchg push push sbb sub stc xor cmp mov mov je in xchg xchg inc pop lds jmp ret mov jge dec sub jecxz aas rcrl icebp jg sbb dec fistl mov sarl cmp inc add mov pop add and inc mov dec loopne jbe popa clc pop push ds add xchg ljmp in sbb addr16 xchg push insl cmp enter fistp jmp jg dec orw mov arpl addl push push leave pop push inc xor leave cmp or cli imull add test hlt lock or adc in mov shl or loope xchg cli cmp add stos add adc xlat add aas sub sub (bad) mov sbb jnp ljmp fs push sub not inc sbb push push push pop mov cld gs inc loope mov mov cli pop sub out and neg dec add inc or icebp mov add jb sbb stc sbb or adc dec push incl lods lods shrl ja loop sub inc test sbb orb incb bound (bad) ss (bad) mov cmp shr inc out add cltd mov sub push mov mov dec push bound shrb lcall or cmp jle cmp int sub and inc cmc bound add sub addr16 aad pop add add xchg pop mov les or sbb or nop es xchg xchg pop xchg and xor push cmpsl fistp add xor mov js mov jmp adc cmp loopne fs movsl mov fs ret xlat or add cltd test mov pop cmc inc (bad) in xchg loopne dec add movsl leave and push or xchg scas pop sbb dec jbe add xor mov fucomip add fidivl daa (bad) enter sbb adc jg jge aad movsl or testl jge push jecxz data16 (bad) and adc jecxz jmp mov inc xor or push aam mov jp xor pop neg inc orl mov adc clc popf jmp clc outsb dec imul fucomp add mov sbb cmc sbb or out pop sbb push and pop mov nop mov add lret add jmp jno in xor fildl testb mov sbb sahf adc add add jecxz pop std inc xchg push xchg addr16 mov mov or incl pop dec push popl push cmp mov neg add das xchg popf inc repnz or (bad) shrb jmp fistp icebp sbb pop xor pop negl pop inc or pop adc lds sub inc loopne movsb cmp out mov test adc ret fisttp pop shr cmpb rep cs fcomps or add out and pop rolb iret jge push rol jecxz stos fcmovnu add cmc pop push add jmp adc pop pop jmp xor mov or ljmp fbstp aam add pop mov dec mov sub sbb xor pop or movsb push push push and shr pop push xor or dec push add inc int3 pop push inc in xchg pop fwait and push imul fsubrl sub or sti add repnz mov ja push nop jne cmpsb cmpl aam push mov adc ss push add pop xchg es std add inc test ficompl sbbb rorl jnp scas pop inc out out roll outsb dec sbb test hlt lods inc das lret insb jg jb push push and dec pop or pop sbb push push dec out sub (bad) mov dec mov and pop ja sti test jp lcall inc mov dec inc (bad) icebp popl loopne sub pop out and rorb aam dec jecxz lock or add pop sub xchg out xchg fistpl insb rcr ret push pop xchg xor inc xor xchg add push xor or les xchg fwait pop push push ret pop mov into inc dec push push insl lds xor dec add (bad) mov inc outsl repnz sbb pop adc add (bad) or shl push test or push and add pop pop cwtl jb cltd mov pop lea gs xor clc add pop mov mov xchg mov mov pop ja dec scas sarb add inc and movl ret leave push mov (bad) insb or les or adc cmpsb mov cmp cs adc call pop and sub xor pusha dec int pop add sub dec pop pop sub mov sbb pause jmp shll adc rorl adc in xor stos loop dec add or adc mov cvtps2pi xchg sbb sbb sbb xor test push imul push inc mov jg std cs push lds and adc xchg jg jge pop sub mov ljmp add cli aam dec inc aad cltd pop push xor push mov mov gs imulb mov add and inc cmpb test lock sbb ret mov jge cmp jmp lods push push mov enter add sahf popf sub add fnstsw inc subb fldenv cltd pop add jmp call adc or iret pop mov movsb in incl xchg mov enter cmp push out jg repnz repnz je out cmp divl leave mov ja jmp or in or mov enter inc push or pop out jge xacquire mov adc lret arpl daa repz adc inc in loopne fisttp jmp adc push push (bad) sub repz inc fiaddl enter sub lcall pushf sub mov imul (bad) push mov fidivr and ret inc mov ja (bad) mov aas (bad) jg push sbb jno push je and mov sahf mov pop pop inc in cmp popf adc pusha dec or pop call push inc push cmp jp (bad) xor rcll testb mov or ret (bad) scas add sbb fistp sbb pop push cltd dec mov adc stc aaa (bad) cmp inc (bad) aam addr16 pushf aas test sbbb adc sub or add sahf imul gs push mov inc stos out dec add scas (bad) or pop adc shlb cmp push push cmp pop pusha push and xlat jns enter (bad) xchg mov jno pop rclb push add push mov repz fidivl aam pop pusha pop add outsl adc lock push (bad) fisubl and insb in cmp sub ds jle adc testl cmp xchg daa (bad) es dec or sbb loope pop push pop xor or dec not and jge jne,pn inc sti test fadds push pop int3 shrb push clc scas add inc les pop push and (bad) sub fsubrs push je mov daa jle or icebp sti sub jne add cmc cmpsb pop mov or jg push sbb adc leave push jl mov cs daa push jns mov push and and xor push js mov cmpsl daa xchg mov shl clc push mov inc mov pop ret stos or sbb mov add das xchg mov cwtl mov jae cmp (bad) enter fisttpl lods fild lds in pop lahf push call ljmp iret add fmuls and add lds inc pop rcrl dec sti push mov (bad) push sub ljmp add dec mov loope aaa fistpl push sbb sub xor sub xchg je shrl pop repz and adc cmp mov hlt aaa xchg xor shrl cmp push pop or jg push shll (bad) int mov loope test mov int3 push add mov test mov dec mov xor add sahf pop dec mov movsbl loopne stc test enter imul mov stc sub pop mov clc sub jns inc or faddl add pop cmpsb push mov sub mov cmc push mov push xchg mov push push shll cld inc sub sub sbb mov insl shll clc cmp adc addl je inc inc or xchg repz lods and jle add lcall call xchg or int3 sub xchg and dec test shlb cld pop push jno add ret aaa lods outsb or mov or xchg mov cmp ljmp out andb sbb cmpl add sbb push incl pop mov iret mov push aas subl push test movsb add sti hlt jg ss dec pusha and xor lret pusha xor push cmpb sub push and mov cli icebp pop push leave movsb lods aaa aam adc cmp add (bad) push mov sub popa push cmp mov stc cmp int adc add adc imul loopne inc pop sub outsb imul add mull (bad) jo and cmp sbb dec dec xchg pop ljmp cmp push mov mov mov rcll xor pop orl jecxz loopne mov aad xchg sahf jb push pop xor shrl nop or js sub jecxz mov dec lea fcmovbe repz test add xchg adc push cmc loop,pn adc mov out push loopne pop repnz pavgb jns inc mov push add (bad) ja jecxz je mov mov mov sub jo adc push out fwait add (bad) pop xor loop (bad) (bad) andb (bad) cmp ret add push push inc or pop adc mov pop ret add loope int3 mov mov cmp sbb inc sub add sub (bad) repnz pop loop dec cltd jbe stos jge pusha sbb mov xlat (bad) mov mov inc add dec xchg jnp ret sar sub pop mov pop inc xor imul push xlat jns sub or add (bad) adc clc add cmp cmp call movsb sbb cmc test stc mov sti sub add lahf pop mov daa dec inc push (bad) sbb adc incb adc loopne andl sbb (bad) hlt or mov cli aas jl add jmp mov xchg cld popa dec rcl mov mov xor lret and in imul fisubl jmp cmp push sub inc and sub xor add decl mov or lds cmpsl into pop add inc enter push dec fistpl jne shll add sbb dec sub dec xchg notl (bad) mov dec cltd dec push cmpsb push roll outsb imul lret cmp lds shl pop das mov or or pop je pop dec psrld jle rcl mov add rcrb push das xchg push inc addl push fisttpll and mov push lcall mov rolb mov pop les dec mov cmc pop sub xchg fnstsw pop popa adc sub iret adc fstps mov push xor lret or jl insl dec jne icebp enter roll nop fwait in jb dec xor xor jnp repz mov or adc xor fnstsw jnp hlt mov int call aaa sub (bad) and int3 push das inc scas mov out xor pop jecxz dec wbinvd fimull jo or ja add (bad) sahf negl rorb push or push pushf leave into jp lock jmp lret or cmp ds jg xchg in mov mov out jg inc daa adc and imul nop cld pop cmp jbe cmpsb inc mov sub out xchg pop add insl in or ljmp adc add dec mov or push hlt jecxz add addr16 mov shr subb adcl sub add enter lock adc and jae inc cwtl imul jle add call push push and jecxz sti pop test test jmp lret pop dec push jne je divl lods cli push pop imulb out pop ret cli jle (bad) popaw sub lret ja cmp stos pop or lret pop ja and dec or pop xchg push jae insb add sub test ret fmuls jo ret pop mov jle lcall out popf enter inc jbe cs push and ss test inc jnp sub ljmp push cmp add into mov mov int push mov push push push sbb sub sbb jl int3 sbb fmull shr cmp imul or adc cmp test je push sbb mov int3 mov mov xor dec sbb inc aaa shl push push jbe cli push pop loop int pop mov add out mov lds mov lret sbb add add adc mov test leave insl push mov (bad) fsts pop xor pop pop inc jmp in pop jb rolb lret call cmp popa jmp frstor add pushf mov int push mov outsb sbb or xchg (bad) add adc addl fs push jl jl push add sbb out out sbb imul lods jmp pop and add mov insl in add mov xor or pusha sbb sub adc (bad) mov fstpt loope cmpsl or cwtl sub pop gs sub inc pop mov addr16 pinsrw mov negl andb cli push xor insb test pop add (bad) sarb std add lods cltd or inc pushf add shufps dec aaa or or inc adc add adc or (bad) push sti sarl pop pop jb pop sub lret push push movsl or inc pop sbbl add subb pop dec outsl loope dec scas xlat enter xchg push dec mov inc insb cmp rorl dec dec cmp pop bound fldl push push outsl mov and enter xlat aaa sti jge loopne (bad) mov clc sahf es movsl iret outsl rorl adc xor call mov (bad) mov push cmp push outsl and cmp sub xchg pop xchg lea pop daa pusha scas pop imul in jns lret ret sbb fsubp dec cmp mov lret push je pop andl fcomps cmpsb sbb add push enter push or and add ja cmp jbe jo mov pop push adc push pop pop jbe in repz imul out sbb jg add xchg pushf sbb and add push (bad) pop and out pop mov out add fsubl inc fadds (bad) or lahf add ficompl xor inc add pop mov int3 out xchg (bad) in pop mov push fcomp add rcrl cltd pop fstl pop and dec or sbb inc mov dec in adc push jb rcr dec nop fcomi jbe mov add dec mov repz add and xor in (bad) jnp ret push inc negl dec xor or sub and leave cwtl nop push imul ret push (bad) and adcb pop push fs ja fild (bad) jmp push enter pop pop or out es cmp xor add movsb push or test inc xchg and mov xchg push or or sub cmp cli adc xchg test sahf and add nop push dec ja mov lods pusha mov push pop xchg add dec inc lea push inc add jne sbb hlt or pop push fs std dec cmc stos mov sub inc rcl (bad) inc or sbb ret mov sbb daa fbstp adc (bad) imul pop and push xchg out add imul push imul dec fscale in popa (bad) jbe pushl in mov daa sbb jnp bound es addl jge pop popf cmpsl leave add iret call addr16 lret std cmpb fimul rorl mov cwtl call sti (bad) into add aad or stos stc pop pop into subb xchg push mov and lods mov sbb dec xchg pop cmp jp rorb inc sub jbe push std mov mov subb adc xchg add insl ss dec or lahf leave sti jnp pop nop (bad) nop in aaa xlat or out popa jge arpl cmp jae clc add in dec xor shrb cmp mov pop and sub xlat clc mov push mov push jecxz lret fiadd sub jmp (bad) cwtl pop aam fs (bad) dec fist lods lock inc add pop jmp mov jp sahf movsl gs js incl fmuls dec xor adc xchg dec adc inc add add mov sbb add or rorb sbb (bad) rorb xchg inc lea cmc (bad) mov push or jmp loopne jg and cs incb leave jb push imul sub push dec test adc mov dec dec add fnstcw push rcll push dec movsl xchg fnstcw mov xor adc fs sub sbb in mov cmp rcll fild pop outsl add pusha push adc jnp add cmp adc dec shr xor push push xchg xorb addr16 fs (bad) icebp fisubr xor jg push (bad) or add xchg sub inc rorb or int rcll jbe (bad) push push cmp cli lods pop out add dec mov ret aad std bswap fild mov fist mov dec pop push sti add pop sub inc test mov scas mov xor mov jne call (bad) lcall int xor rcl leave and sub fdivl push push push insb pop xlat or mov jno xor mov xor nop cltd push push outsl idivb lock or (bad) fcmovbe push dec out lret ficomp aaa or iret add out addr16 dec jnp jmp lea dec mov push aam js dec push jbe inc cmpsl inc add sub sub xchg push cmpsl repnz mov xchg repnz xchg mov push push cld gs push sub add xor mov adc (bad) imul push sbb testb pop jne add popa hlt out cmp xchg loop je dec insb dec lahf pushf sahf stos sbb jle shrb xchg decb js popf das fild das adc sub imul sbb mov jmp jp lahf xchg rcll dec mov push and mov test lret push js lahf adc cs push enter inc call mov sub inc push push nop mov sarb and ret or lahf or imul movsb sub (bad) int xchg insb inc stc pop das and add add aad (bad) or mov push cmp inc loop xchg out add adc pop dec cmp jmp xor outsl loopne ret adc incl jbe add xlat cli pushl push mov ja dec psubsw pop xor lret fimul sahf js pop and inc cmp sti jg dec xor mov pop ss out mov outsb mov adc push pop (bad) jbe mov xor shll pop mov cwtl xchg jp xchg xorb popa out pusha push lcall jae cmpsl loop push daa add ja out out push in sub lds es call or inc jge jae xor add daa leave push and adc jbe dec pop cmovle jg (bad) in add fdivr jae and cli outsb fs repz cmpsb cmp pop push in sub gs rclb mulb add and lods inc sar xor mov out jmp das push add pop testl nop mov xchg int3 (bad) dec cmpsl iret inc inc xor xor push shr lahf or lock adc lock push or adc sbb rorl inc jo xchg pusha scas in push pop push push sub int add add sub and stc out inc xchg ljmp mov (bad) idivl nop lea dec xor pop mov ljmp pusha ds loopne sahf rolb jmp aad add add and jp (bad) mov scas mov add data16 addr16 mov dec outsl lods jp adc xlat or cltd mov mov sbb out xor outsb (bad) pop test or pop sbb or std pop mov or rorb xor sub pop push rolb xchg xchg loop jp sahf jo nop inc ret ret jmp movsb iret nop xorps push push mov sub aad das lgdtl xchg loopne repz cmp xchg adc and lret lahf pop mov out fildll in add jne or cld dec shlb adc int3 and jge fdivrs pop leave pop shrb xchg push add fisub mov cs repz add je jp rcll (bad) xor xor test loop dec add mov mov aaa fistp inc das mov movb inc jbe cmp data16 dec dec pusha pop mov movsb push xchg cli or (bad) insl jge sub xchg pushf adc xor mov fisub dec fistl das mov imul jle lods cmc pushf in xor sub push arpl pop in rorl jecxz int push push pop cwtl arpl cmp cmpsb lea mov mov pop out and stos cmp pop das mov int3 jns adc in sub ret jge sbb mov dec add cmp fdivr inc pop lret xor enter outsb pushf sbb (bad) xor dec aas and xchg outsb inc inc in jbe cmp adc ret mov ja jb adc lods in push es pop cmpsl movsb mov mov push jl add jl and iret repnz dec pop test addr16 xchg imul dec icebp scas pop mov fsubl fnsave sub add mov rorl cwtl pop push sbb adc mov jne or pop xor mov movsb lret dec dec mov sub dec pop mov pusha add pop lock dec xor fstps popa test sub or sub jmp stc inc ljmp push (bad) or xor xchg add pop jne ja push xchg out and mov or (bad) pop cmc fildll popf inc jmp mov int shr jle push cmpb inc (bad) cmp sub or (bad) sbb add pusha jb or (bad) clc mov adc jbe sub out adc aad jmp pop pop push je loop add adc push push fisub add push test inc cwtl mov dec cs fstps jb fs movsl pop stos jl pop push sub mov movq inc xor add sbb or mov divl ret and or inc clc and dec add daa push rcrl ret sub in mov add scas negl xor or dec push adc aas jmp mov int add loop xchg inc adc imul pop or pop add (bad) lea notl sub movsb cwtl (bad) or ss mov fisttpl int stc dec cmp adc mov shlb rorl arpl pand (bad) pop jecxz sub int cmp in or and into sub cmc cmp cli or lcall add add push add outsl inc pusha into les pop nop jmp sbb jle jns test and das pusha sbb lcall nop pop ret daa inc loopne sub idivl dec mov push fisubr popa pop ds jp out mov ljmp ljmp jno rol dec mov dec push push inc dec movsl data16 mov push push mov addb stos and test repnz xchg dec add rcrb cmp outsl inc push jge add sub push sub jae cltd popf in mov add pop sub or pusha ret je or jle mov sub lods push out inc push pop in mov xchg mov imul mov (bad) and rcrb in aaa pop or leave or lea mov mov xorl ret adc (bad) rorl add loope sbb and out cmp ja or je or pop not inc add adc aas xchg aam cltd or xor dec repnz jbe mov mov pop adc jg cmpl enter idiv (bad) pushf and mov sbb sub fstps fstps sbb maxps divl lret mov or sub push pop enter outsl rcrb add jle lret mov inc mov adc add shrl daa sbb shll add add das lea adcb mov xor mov out lds dec test repnz push mov popf ds das jmp pop push cmp addr16 leave pop jae pop cmp stos bound push push pusha push push jle mov jno jmp cld or cmpsl daa shr dec js or das not add xor leave in pop test xor sti cs cmp xchg cs cmpb (bad) add ja mov sub jnp xor aam insl pop jo xchg not xor add es jo out add xor push sub not das (bad) call or jl int jp pop test mov pop dec push push push cmp mov push jl aaa mov jb je or lret and adc or sbb pop inc icebp pop xor pop jl lock shlb add out cmp sub jns pop lock loopne push or cmp lds xor ret jo or jecxz cmp push popf ficom jg mov inc and and (bad) orb xchg scas push sub and mov push jmp je pop cmp lods push jno inc push insl pop add in test scas adc ds in add cmc jns cmp nop cmp js and orl or add in ds fsub ret adc lcall icebp mov cmpsb iret andb das pop pop fiadd add lods lret fimull mov insl sbb into fldt push lock and push (bad) sub mov fwait scas pusha mov idivl mov adc lock jge mov and or sub roll jnp outsl loop ret or stos inc jmp pop call xor das add movsb jg dec cmp int3 add sub mov ret inc or imul pop xchg fstpt sub or call and test popa fbstp test js sbb push test lret insl mov mov enter dec or int3 mov enter (bad) lock dec dec dec lret loop adcl int cs adc jle pop insb cmp mov pop pop pop repnz fwait subl jns pop jp (bad) (bad) mul push push push push (bad) ss xor out es nop andl mov dec ret sub inc arpl jb pop mov jne enter in add aas subl lds adc test sub icebp and jge pop (bad) or push ret push cmp scas and jno (bad) push adc jg pop shll or scas mov (bad) ds inc pop (bad) xchg cmp xor add inc popf std jnp dec cmpsl js movsb test repz push fistpll jnp adc or pop inc sbb mov mov aas cmp mov mov adc cwtl sbb aad cmp divb or ret jnp mov inc (bad) sub adc push cmc mov daa imul mov xchg lret mov ja pop mov (bad) adc (bad) sbb or or roll icebp adc jmp cmp std dec stos daa test mov push add cld scas push xor inc mov cmpsb movsb push dec push jg mov decb sarl or out rorb (bad) pop xchg test jle or movsb push xor add mov scas loopne ljmp push add and fadds push jns test sbb push call arpl enter or arpl push aas jmp movl sbb jcxz psrad aas outsb inc pushf sbb bound cmp or pop add xor pop jl sub ja pop pop nop pop fpatan add repnz cmc lds mov cltd xchg inc sub or dec cmp sub andl aas push mov add ficoml lock shl scas push mov popa pushf pushl inc fdiv test enter icebp mov mov lahf ljmp sub mov xchg xor and pop pop lods aad les push jne ss (bad) push imul pop or not or sbb cmp lock mov xor shll out iret sbb (bad) xlat or jbe dec inc add cli add rolb push adc mov dec clc push mov push insl (bad) decl lock enter sub (bad) idivb loop es mov out das ds (bad) orb fstpt and out sub cmpsl insb call out outsl sub push and in shrb pop pushl inc fdivrl sbb lods (bad) jae lret sti mov ljmp add mov dec leave repnz fimul shl cmpsb mov sbb pop sbb fildll inc loope cmp cmp jge aas pusha and popa jae push and inc add add neg add rcll fwait mov popf (bad) xor dec xor adc movsb mov sub ds or pop pop pusha sti jb adc sub iret or push or stc xor xor push xor arpl scas xor out aas pop int test pusha in (bad) lahf arpl js mov and jbe add pop (bad) test sarb out enter pop or aad pop cmpsl mov pop xor jg mov enter add into cwtl add fs pop pminsw lods aam ret stos xor sub pop adc pop push mov ret jbe in data16 add iret (bad) cmp cwtl adc (bad) cli rorl cmc sub movsb adc sub add ja scas bound loop mov mov (bad) ja cwtl mov xorb dec daa jecxz orb jns dec dec mov (bad) test or cwtl pop xchg pop sub or adc cmpsb push adc fsubrp or xchg mov fisttpl and repnz ret sbb xlat cmp movsb push shll pop into fsubs pop js mov mov add mov (bad) imul lret pop arpl ror mov pop and loop mov and cwtl lds daa dec addb lea aaa pushf pop (bad) fs ret jmp or std add lcall int xlat cmpsb jns inc sbb scas stos ret in sti add adc gs push test inc (bad) leave push jle sub mov cltd and pop pop sub jg icebp jle dec rclb loop lret push push sub lods repnz pop push lret dec and dec pop xlat mov clc js orl jnp fst xchg xchg add (bad) outsb or xchg imul sbb popa xchg inc repnz lds cmpsl frstor imulb (bad) hlt pop imul mov pop addr16 and and ljmp cs cmp mov or ja xchg out roll sbb mov arpl testl jg xchg in add pop push push push ds imul sbb out das mov jae push push sbb jno sub shrb adc icebp mov aas mov sub add iret jnp mov ffreep jnp add rcll cmp mov and pop in imul mov xchg mov xor aaa cmp push push or sbb stc sub mov pop cmpsl jle test or adc mov in gs sub pop in or pop and ret push stos add and ja inc clc int3 xchg mov and and jo sti adc test sbb xchg ret push adc mov pop mov push cmp add loopne lods ja sbb loopne push add pusha rorb xor insl or adc lea push out dec (bad) clc or xchg subl push jae dec mov iret in (bad) pop add nop mov cmp jl test add scas std outsl not stc sbb push (bad) xor add and xor mov cwtl push xor pop cmc scas cltd mov jg and (bad) std xchg inc push jbe sub or inc out (bad) sarl add orl mov test dec cmpsb xor and xor fcmovnu push add cmc pop imul ret lahf inc mov jae xor push pop pop fwait mov in add jle add test add pop push push pop das (bad) sub ficomp (bad) xchg mov aam push add and outsl jo nop push or sahf ret js (bad) xor out and and or mov insl pop shlb loope (bad) imul push add ficompl push mov fisubr lret test mov jae and les mov aaa xor sarb adc dec mov cmovl enter jg cmp dec add clc dec call and mov jp dec jbe mov lea sbb fildll or push pop pop sub push push mov push adc movsb or pop test ja xor in jg push out jne mov repnz pop xchg push and addb mov pop pop push movsb push jl and jbe pop rclb or and cmp sub pop lds cmp sbb dec dec fld1 lahf (bad) jp push das mov xchg das push pop xor xchg mov outsb mov push das or decb in fistpll lods xor push push cli adc cmp push add push mov addr16 add flds add pop mov jbe sarl mov inc or aam outsb je and add ljmp je (bad) movsb mov shl add into jb mov cmp rorb cmp sub popf in nop jmp xor je pop sahf or sti es add mov inc out xor sahf mov add ja testl (bad) cld cld add jo bound xchg xor or in xor dec pop mov adc push xchg dec gs stos xor push xchg into pop or jl fild jmp (bad) imull mov jo cmp sti fbstp cmovge inc xor out cmc mov sbb push xchg (bad) jns test or or cs arpl mov add add pushf iret xchg loope pop fisttp lock lods das ja pusha js lods aad lcall stc mov mov mov xchg xchg aaa mov dec test jo pop mov loope pop (bad) adc lahf dec adc jp mov jle data16 sbb cmp mov cmp inc (bad) pop or loopne out cmp jmp sar add mov inc outsl idivb js fdivrl stos push cmp movsl cld and test test loop pop movl sbb add ljmp pushf stos pop mov add ret inc adc add pop sti ds fcoms xchg out mov adc test jl push jb or sbb fdivs inc cmp dec inc xchg imul lret mov mov nop xchg in sub insb mov pop out and or aam push pop push dec pushf (bad) shlb add sub cmp lret out outsl xchg call dec push gs or jnp movsl jo add fsub ss test pop sarb inc mov fwait lods and push sub add clc movl fdivrs add aas test xorb les sbb je and and psllw xlat jg xor jecxz (bad) inc insl xor jge icebp call pop add (bad) and mov xor ljmp sbb jmp push sub test inc mov xor fbstp or adc out inc sub dec dec sbb icebp sahf aad lds pop sbbb scas imul fdiv aad adcl mov push ds enter aaa test in scas test movsb add lret and (bad) in mov adc es sbb or dec cmc insb xchg xchg or (bad) jg pop or addl pop repz add add ja push movb int push add rol movsl pop and push and fs lret and (bad) mov mov pop dec xchg push inc pop mov add ljmp loopne cld mov sub stos lret jb xlat xchg clc mov repnz xchg push xchg js jae sub mov mov ja jl stos insl stos (bad) mov int adc push jge sub sbb mov or push or jno dec imul and loop xchg mov sbb das lds jbe lret flds loope clc sti arpl cmp or pop jae movsl xor push adc test test pop add jle inc and sti push lock add ja sub jo adc push mov push mov dec or adc imul (bad) pop add sahf mov dec xchg ljmp pushf and xor pop xchg mov leave or xor xchg add imul inc mov and mov rorl aad xchg lahf sub and insl xchg sub sub sub sub add jo js cmp cli fmuls mov faddp sub mov dec jl in mov in dec mov (bad) dec (bad) and xor mov cmp pusha xor xor incw xchg out pop cwtl sbb mov in jbe inc sbb pop push push das or dec imul mov fist add call lret repnz pop or fimull ss cmc jg sub pop popa dec loopne into insl sub or sub in daa mov push jmp lret lock and or or and inc (bad) out jp test or pop pop (bad) xor fldln2 outsl jo add leave cwtl jb push sub xchg mov push incl xor push mov pop in dec sub popa insb push icebp ret stc (bad) sub add mov cs das daa sub mov mov cwtl mov out push pop in test test cmp jo jp idiv fs inc push call sub lods out mov push cmpsb add xlat popf or loopne add daa pop push pop cmp pop lds ljmp cmc adc and push movsl mov shl stos xchg or cs jae dec sub mov outsb xor cld lahf test add mov outsl mov jmp xchg (bad) movsbl fwait int sub fsub add dec push and push mov sbb loopne mov add jo popa and mov or jb xchg mov mov pusha stc fprem adc or decl dec clc ja mov and push pop adc push xlat add adc pop sub sub adc inc inc int3 add adc and popa scas and (bad) insl outsl or rorl ljmp mov pushf ret push mov aas dec add js jmp sub mov pop scas push sbb dec fbld dec fcoms adc stc test sub shll dec or jne iret cmpb dec idivb add mov pop fist aam cli std jns leave call bound rcr or roll (bad) loopne and ja pop jg mov add bound mov push cli jno add std pop and jns scas (bad) jl mov cmpsl jmp or mov push je nop into xor pop mov xchg std je (bad) pop loopne sbb cs ds add and mov dec out jo ret sarb mov add in jecxz add push negl or and xor jbe sbb not std pop loope cld mov (bad) aaa imul ret xlat and pop aad jmp fbstp sub dec aas (bad) lret imul repnz loopne jge ror inc mov ja stc call mov outsl and cmp sub push mov xor pop push popf pop pop gs (bad) shrb cmp xchg add and push bsr jle aas dec (bad) jno mov addl add pop lret (bad) call fs repz daa fnstsw loopne or jg jo xchg pusha add push pop iret sub and pusha aas mov add cld xchg xor stos sbb ja pop nop mov add fdivrp xchg and in fidivrl movsl (bad) (bad) mov pop mov pushf add ljmp jns lock dec (bad) repnz inc iret cmp or sub inc sub push xorl xchg mov insb ds cmpsl add pop sub sub and das test dec dec and test mov sbb inc popa xor mov insl (bad) xlat mov dec adc adc enter mulb call clc mov sub out mov ficoml pop loope out xor das jb test in xchg pop pop ds cmp repz dec jge rolb and pop ljmp aas mov mov add cmp fistp aad (bad) mov pop inc jg stc push movsb mov lret push xorl popf jge pop push xchg not or dec sub inc inc push jae clc pop (bad) cmp cli or icebp jg lds inc push jg and push adc mov pop mov sbb pop mov jl idivb push jb orl push mov jbe daa mov lret xchg call xlat pop jg mov cmp mov or add xor sub out xor sbb daa (bad) js jmp pop mov popa adc inc push cmpsb push into gs adc cmc sub out xchg and xchg adc push pusha loop pusha push sub cmp adc jp cmp pop adc loop sbb cli sbbl stc push dec and (bad) ljmp adc add cmp fistpll in sbb xchg daa and adcl mov jg cmp push push (bad) lods cmp pop iret addr16 and movsl push lret dec lcall mov or in sarb and add add add mov fs pop or mov inc jl iret fwait repnz cltd lcall sub xor push jb fisub push xor stos pop xor int inc push add cmpsb (bad) das daa test in push pop sbb ror sbb mov gs xchg or sbb add insl jnp or xor add add das mov sbb loop repz inc and or ret push ret ret pop mov cmpsb sbb cmc sbb sbb adc inc ffree push or (bad) fildl mov mull movlps pushf dec pop lods xor add cmp sub fnstenv jnp or addr16 push loop add (bad) fisub pop add xchg icebp mov sarb fadd jno movsb mov push fdivl cld adc js inc xchg gs jnp hlt adc fsubs imul aaa movsb out add mov sub or adc and inc loop push cli xchg mov pushf popa pop xchg cld add push jecxz dec stos add (bad) jle not out or es sarl mov pop loopne cmpb inc and loopne fadd ret aaa pop and mov adc cltd pop addb or push das aaa add or sbb mov or (bad) fildll cmc mov add add (bad) pop jle test rcl das sub fs cltd iret ja out (bad) push popf stc add xor imul lret out stos jl add sub jo or pop popa sub (bad) mov pop add jmp icebp aaa cmp xchg rol pop scas pop jno lahf addl inc and (bad) outsb clc cmc pop push shll test mov jmp loopne push mov dec or jnp jge test fcompl scas dec xlat lock or fisttp dec and call pop and incl add xor sti jae ret fnstsw inc (bad) pop pop inc rcr (bad) jnp sbb aas dec push mov xor pop loope sub xor or cli jg out inc not add sbb (bad) repz shrb mov pop pusha leave pop xor out xor incb stos jae inc sti fs lahf cmp dec test imul push mulb rcll cmp add mov out gs push rol jns cltd and add pop mov lcall int sub or sahf mov std add cmc and mov push idivb xchg inc ffree in xor aas sub cmp jns enter hlt jmp int dec repnz sbb mov jae jne cmp jnp popl add jns aaa in xor or sar add push push sub cs add push lret push or call imul inc sub popa add in inc into pop or aad mov in jbe dec sub or les lahf imul cmpsl inc jb lret sub divl enter sbb loope dec ljmp jnp or add sub lahf in push pop fdiv cmovns pushl push cwtl mov jg (bad) in std outsb xchg rcrb push push jl rolb inc pop push dec mov pop popf call in mov pop out inc and push dec fdivs sti mov dec add inc fsubrs sti xchg and scas out sbb (bad) (bad) sub loop adc pop mov es push or mov jg flds rorl inc inc ret cmc pop adc cmp out sub mov pop repz jns add adc addr16 mov fmull mov imull in incb ret and fwait notl cmp (bad) mov inc sub sbb das mov or lds in es negl or pushf jle pop cli sub inc push add out or cmc push xchg add mov aas sub loopne add add fadd outsl push and inc cmpsb sub add add push inc or xlat movsb cli (bad) add xor xor enter ret inc sub lret out and sub dec mov mov sub das lret jne jno jle lods jo jno inc hlt sub pop or jecxz push jp stc leave mov xchg or mov pop (bad) xchg sbb pop cmp add std adc ljmp sub pop bound pop jnp daa loop push cmpsl push dec std fdivs data16 or adc lods jmp fmulp xchg int3 loop sbb mov adc aad add clc adc cwtl sbb or sti pop inc sub or jmp stos mov pop ljmp ror and push and mov pop aas ret add jp and loopne pop or mov pop test jge mov fnop mov sub pushf test arpl je add les dec sarl pusha outsb xchg dec xor daa push pop nop and in push (bad) jg orb fwait push and sbb sub js xchg lea xchg pusha out sti cld lahf loop push (bad) iret mov lcall lock adc loope mov cld dec xchg cmpsb adc mov pop sbb dec inc movsb orb or (bad) cmp pop popa aaa pop (bad) xor push inc outsl lods mov push pop sub push cmc pop pop rclb jmp ljmp mulb push daa out jge xchg js xchg repz fmuls fstpl inc or incl jmp fistpll and outsl jg pop sbb loope sub lea clc push pushf sti inc mov fbld sub inc cmp (bad) pop add sbb push inc mov cmp pop and shlb (bad) lock mov add das out daa jb adc add pop pop (bad) in mov mul push inc jle jae mov mov mov popa mov testl pop jl and lods adc add (bad) jne pop xchg push pop mov or daa jp lret jne les pop das push or sbb xor mov and rcl and jns xchg xchg push psubq iret push repnz sahf inc mov addr16 daa push call jg and lret push add jecxz push aas add je call mov pop mov flds ljmp pop scas das add lods or (bad) dec push addr16 into mul pop xchg push lds and outsl dec cld pop mov mov shlb adcb cmp cmp dec push sbb (bad) xchg push nop lods ds imul and xor ja adc mov and dec dec add ds subb jmp sbb add ret jbe or outsl jmp xor adc mov mov (bad) outsb add enter fbstp and pop pop fucom mov and enter mov es pop mov xchg jno (bad) dec push mov das cmp dec cmc jp xor xor mov inc jae pop mov push push aad xchg cmpsb xchg dec mov sub call sub pushf mov pushl fsubrs adc imul movsbl mov in sub mov mov push roll fmuls xchg shl cmp mov xchg add xchg xchg dec add add sarl cmp je jle out push es out and jmp pop out and outsl rcrb in add scas mov loop xchg pop sub push std jg or cld adc stc pop ja popa or jmp cli lcall push pop dec pop mov icebp test sub push jae and add out nop fdivrs mov in or test test pushl cmp push adc cmp sahf pushf xlat mov or out icebp push scas pop loope jge or imul outsl das xorl mov (bad) mov adc pop (bad) and cmc mov sub cli idivb aas test mov mov dec leave jg push cs pop and (bad) and shl inc icebp add xor lcall push cmp adc dec (bad) into ret fistl mov add aas xor add arpl out scas jmp dec aaa add test or (bad) mov (bad) mulb pusha mov in jle mov or negl xchg repz ror daa inc addl jg mov mov pop push aas nop mov pushl std push add jo cmp pop mov mov (bad) rclb jecxz (bad) add adc or and pusha xor adc mov out add mov xor add mov xchg pop iret cld push mov outsb jne mov and or sbb je test or pop lock shrb xor mov jp jecxz or das movsb lock jp rcrb insb xchg dec push ret or lea jp sub mov sbbb bound iret dec pop lods mov clc scas nop jnp mov rcrl xchg lods mov push cmp mov cmpsb out jbe mov (bad) in pop test add jge mov lret dec insb enter add jg push scas cmpsl imulb xchg repnz add aad mov mov lcall ret cwtl call mov dec push ja lods inc nop (bad) (bad) jns mov sub inc loope lret shrb fild pop add push dec xor repnz jp xchg inc into outsb dec push inc adcb fldl mov sub aas xchg stc jmp xor call lahf dec in adc adc push push push sbb xlat pop insl cmp fs rcll aaa mulb inc or jns ljmp roll jns ret repnz mov push sub out (bad) sbb xchg sbb in into out aas sub push int mov cmp and push xchg cmp shrb jge loope or adc rcrl adc andl (bad) sub mov popf dec adc popf inc and cmp iret sub in push jnp pop jp mov nop jo push ficompl fadds mov mov fadds mov (bad) ja inc or lods push das inc or dec sarb lret or pop pop xlat insb jnp aas jns add push sub add rol or (bad) (bad) jns sub push add pop add mov out mov lods test negb sub mov (bad) pop adc je mov or mov arpl jae sbb mov lock fistpll or cmp and mov mov cwtl mov les jge inc mov adc gs jle scas sub add or jl jp out std lahf dec dec pop xor mov jg les in pop std outsb ss or loop fsubl push (bad) sbb or cmc outsb mov cmpsb xchg and mov or xor sbb ja or frstor lret mul pop es fwait push xchg mov mov lock (bad) dec dec sub mov testb push dec hlt sbb out push movsb inc mov cwtl mov sbb incb into int mov mov sub add mov mov jns daa incl jo ja jge pop or push and add jae or cld incl or aad inc inc sti popf scas ret mov cmc ret pop outsl cmp cmpsb fidivrl adc das mov pusha and pop mov scas shlb push push in or cld push lret jg rcr sti aas outsl add or push adc not inc jns pop lock dec test sub lret push (bad) sbbb test gs es mov cmp pop push rcrb into cmp xchg jo pusha (bad) cs jbe daa loope (bad) fcmovu pop pop clc push push xchg dec stos fimull xchg lahf clc push mov aad arpl out out jb in jl cmc das pop xor inc loope ds push and inc jae mov imul adc add jmp jbe lock das iret and push xchg push xchg sub add imul mov adc inc call sub cmp repnz fmuls repz inc ficoml in add clc and push pop pop movl or loopne push jns jl push jnp sbb (bad) fnsave cmp sub rclb push out ja mov jg int cs add addr16 rclb mov add (bad) add pop sub pop add push jno test or cmpsb xchg dec pop in cmc add cmpsl (bad) popa add and jge jmp addr16 push jg jno or inc stc (bad) pop mov nop nop jbe fnop xor push repnz xchg pop lcall push loop jbe mov insb (bad) add pop scas sub sub adc popa cmp xchg mov dec aam lods adc in lfs loop js shlb mov jle push inc in push repz pop xor jle mov pop and push rorb jo pop jne push add xor add aam pop lods cld iret lock (bad) dec insl loopne xlat dec stos (bad) dec loope dec icebp fidivr sbb (bad) addr16 scas ljmp add in iret scas leave clc add pop xchg mov add push xor mov cltd xor or add fild inc xchg dec add and cmc or cmc xchg insl stos test push loope aaa dec jmp push clc xchg dec bound cmpsl daa inc out repnz pop aas lcall xchg inc aas shrb push xchg pushf sub and dec imul testl lahf pop xchg divl mov ja xor shlb dec or repnz push imul cli hlt xchg lret insl pop cmpsl xchg faddl sub push jp stos cmp push xchg push lock into push pop add dec xchg jb sub add or aam sahf lahf bound inc cmpsb push pop mov pop int cs lods loope (bad) cmp outsb sbb add out cmc xorps lea jl sub jp cmp add js stos or jg pop mov sti insl add sub jbe js hlt das add stc ja orl iret xchg out je jne dec add imul call or lahf int3 stc push sub fnstenv jle mov imul fsubrs roll popf inc mov dec hlt out out push jmp adc test in sbb jnp sub mov jp mov jmp add rorl pop push movsb loopne rorl (bad) jl add pop or pop icebp popf dec pushf or pop (bad) push ret jge push mov mov jns in cmp lods shll shll sub fmull push push push push jl (bad) add repnz ss dec leave scas add lcall jns or in mov imull pop push (bad) fnclex lea push add pushf (bad) pusha add mov jns dec pop cli adc loop fildl add addb popf jmp jg mov mov pop add mull lods sbb rcll sub push or sub stos xchg pop or sahf push sub push insb adc rorb mov ljmp iret sub add outsb dec inc fidivr daa faddl nop xor rcrl pop jl push (bad) ss push fistpll call (bad) std jnp test sub adc mov clc xchg std cmp movsl sub and sbb hlt and xlat push daa stos xlat jne insl mov (bad) jp ljmp xchg mov add sub imul jns movsl repz push lahf pop cli (bad) cmp pop push sub jmp bound dec test cmp sub or or test outsl cmp movsl in sahf mov pop test jne into pop push sub inc sub jg xor dec push xor push insb fdivp sub fisttp sub add loop jg int pop jmp and repnz and daa and cmc loope mov lea add mov rdtsc lret lock or gs cmp xchg lds and out adc (bad) test sub xor push or or stos jecxz and lahf aas psllq mov scas leave and dec out xor test or dec hlt les movsb ss sbb jbe mov cmp loopne adc mov pop sbb fdivl dec pushf (bad) or scas loope aas scas jg in push or and pop mov lods mov mov imul mov rol std xor mov (bad) mov cmp sub and pop xor and test add push shlb shlb pop imul stos sbb ljmp lahf and push (bad) dec or rol shrb roll rcl imul dec cltd (bad) cmp out (bad) cs add lods sbb pop push add mov mov les xchg mov gs jg aas inc or mov lret jmp or ficom pop pusha jb dec dec jge push push pop mov add mov inc (bad) out dec mov fsubs push xchg cmpsb jg xchg ror imul push pop xchg jl xchg push ret add jns inc mov cli mov sub push addr16 add repz cmp (bad) call fnsave lahf dec dec cmc pop jp and adc jg mov out fnstcw cmp lock add cmpsl xchg dec fnstsw imul mov mov loop add (bad) (bad) jne cs test adc sub push loopne jle repnz or mov inc cmp mov lret orl or xchg and or xchg test push cmc cmp add cli add into (bad) outsb cmp popa add jl add mov jge xor loope mov imull in test popf jae jmp dec push add (bad) mov adc das push cmp pop mov adc nop mov gs ret test cmpsl jmp fdivrp pop mov jnp cmp push jnp pop dec xor ds rorl (bad) mov mov gs xor jb ljmp movsb lods sbb stc cmp xor adc daa jbe repnz negl std xor es (bad) or jge sub iret adc sbb out jbe dec sub xor hlt lahf push pop cmp cmp xchg outsl (bad) push test inc push lock mov cmc mov arpl je int pop dec xlat out addl mov xor sbb mov cli add ljmp insl (bad) jge pushf movsb push jbe jnp stos or adc push fstpl xchg inc dec jecxz (bad) mov xchg push lahf xchg mov pop inc pushf push (bad) cmp pop lret js pop pop inc neg stos xchg and clc jl push (bad) sub mov xchg add jne ja jb xor sub stc pop dec mov aam pop cmp sbb inc pop or pop in add push add push mov cld jle add xor and cli adc sub mov je add mov fisttpll dec out popa add js pop pop inc repnz cltd sbb push dec lret sub aaa icebp jg lret cs cmp mov sub cmp mov or push push inc mov jg imul pop sub xchg bound add roll or adc lods add out sti addr16 notl xchg rcl cs aad fdivrs jmp xchg lret or fs sbb or add lea and test sbb fildll out inc push cmp jg out pop pop push mov outsl out movsb and in gs out test roll jl fwait imul jmp or jae je (bad) or sahf mov movsb mov nop push mov insl and dec add sbb mov inc insl pop adc popf push out popa cmpsl xchg or push mov cmp sub (bad) inc fs jmp loope stc ds dec pop (bad) jno pusha dec shrb stos sub inc dec sti jnp clc gs enter push mov mov in pop pop mov xchg push pop pop in mov jg inc cs (bad) mov call fbld aas push aam das or in daa push ss pop scas popf adc aaa (bad) jbe or idivb push add movsl and mov dec repz leave push jle loop rcrl call pop scas fs mov or mov mov movsb (bad) push and mov inc jnp dec into mov cmp jle (bad) and js subl push sub cmc scas add scas orl lea cmpsb popf sbb cs mov push and out ss mov mov div ret xchg movsl cli and shll push adc pop pop int3 xchg and xchg inc push xchg and loop xor int and and cmpsl mov nop mov inc mov inc xchg test dec ja dec lods je jo add es cmp jmp pop out das push shl push cmpsl pop into mov cmp orl jle push pop xchg mov or jb gs push or repnz out (bad) xlat loop pop ja jmp mov push loopne sub pop push push adcb clc lods or idivl mov xchg mov dec fsubr sbb xchg out ja movsb cmp inc xchg xor or aad out and or pop negl out setno dec (bad) aad jae jg pop mov (bad) xchg fisubl dec mov pusha pop test inc dec lds cmp xchg je stos inc into cs cmp out add rclb lock faddl (bad) dec mov add (bad) jg insl xchg in or mov add xor popa mov arpl inc mov inc inc sbb jnp add outsb daa jbe add lret ja movsb sbb cmc jno incb cmc enter push imull jg add push sub add lahf pop sub jo fs and xchg dec push mov insl cmp sbb adc dec pop cld lods adcl mov or pop mov sbb add (bad) mov out xor cld outsb xchg add jle daa push les push or add stos sbb mov fxch add ret jle xchg pop sbbl pop nop or test iret jle push (bad) test adc jnp out cmpsl or mov jp jb or cmp ja or (bad) sbb sbb dec pop xor sahf push out cmp push inc mov xchg xchg std pop dec pop test das cli icebp adcl mov fld icebp bound xchg sub cli pop and in mov push gs (bad) aam pop iret cmp dec sub xor xor cli popf push add jp sahf push aas xor mov fistpll cmp mov dec cmp inc hlt xor cmc fistpl jecxz ss in hlt jl add pop or shrl mov idiv mov sub stos cmp push mov leave out shrb xor cmp push test push mov jne mov cmp sub cmp mov add push inc or mov sub mov pop push xchg add xor sub cmp in imul xchg sub test jnp bound cli add add rorb inc xor cmp pop jns mov add mov jbe pop xchg adcb push jmp inc mov js mov dec daa (bad) jnp xchg addl test add arpl sub mov subl push sbb and dec (bad) pop push js mov das out cmp pop sub and add cmc aaa (bad) int add les add ja sub mov add clc imulb out das enter sub sub movzwl jecxz (bad) insl or push xor or pop mov jbe push scas xor pop pusha sbb and add pushl mov pop clc dec mov jle rol into fist or push nop repnz xlat test fs ljmp mov jl sti pop push adc call jb sub mov push lahf jne daa xor mov inc fcompl sub rolb jg pop add mov jmp mov inc popf stos icebp (bad) imul adc sbb dec js and push jg xchg xchg xor inc push in call sub sub push push repnz jno pop dec out sub rolb aam mov sub pop out aaa push imulb and cwtl jg jae dec (bad) repz out js or (bad) popa mov jo repnz dec lahf imul cmp jnp sbb jl pop in in jle pop cmp dec push subl fisttp das xchg call cmc arpl dec loope and add push push inc nop jmp in mov aad into pop fisub aas sarb cld lock mov sub xlat or sub enter jo cmpsb add pop mov push fisttpl xor cmc add adc sbb adc (bad) jne ret jnp das sbb std (bad) cmc and outsl pop jbe pop xlat test stc or or add rcrl out sub xchg cs outsl push add mov hlt pop aas mov rcr jnp addl push push daa push or dec enter lea pop inc dec pop xor xchg popf mov imul sub or add mov pop jle sti pop fistpl cwtl add fcoml fsubrs xchg cs pop inc pop stos xor add scas adc pop das pop jbe add fildll inc or dec aad fwait mov dec clc loopne scas or into add inc leave pop xchg out xor mov gs daa (bad) xchg add add clc call add icebp mov es pop das push call sub dec mov ret mov (bad) sub xchg ja pop jmp jg inc hlt imul test sub mov aaa jg int jecxz ds add neg mov adc scas scas pop or mov push jg sub icebp rcll pop cld adc add xor jp inc daa call xchg sarb icebp repnz cmpsb dec call jmp cli jge nop into and pop shll je xchg jl mov jne (bad) aas pop lods mov aaa adc jnp inc cmp (bad) and jg inc data16 outsb call sti cmp dec js push mov add shr fnstsw and or pop jmp jmp in testb push add in aaa adc xchg sub push dec dec mov pop movsl jmp sarb inc test mov out nop iret (bad) mov or or xchg pushf sub sti pop mov insl sbb (bad) xlat jl rcrb push and mov mov jl push (bad) push pop mov jge cmp push push push in inc jb and xor fisttp out sub pop (bad) and (bad) or dec lock outsl nop or adc pusha imul add nop mov jbe xlat mov out dec fs lahf call sarl mov cmp es mov jle fcoms (bad) or (bad) add adc xor adc add pop pusha sub lods sub ds insl mov fsub xchg xor stc push jmp jge mov rorl scas push inc das out adc pop outsb xchg xor test mov add inc jo (bad) pop loop or mov rorb stos outsl nop adc mov mov inc adc pop jg in sbb mov movsb movsb xor push inc dec fsub pop enter xor ret and lret jno push lahf jg faddl dec add cmp daa sub adc cmp jle inc mov jp pop lods mov ficoml cmp pop shlb cmp pop pop or jl adc out mov out fisttpll ficomp or push pop (bad) add sub sub lcall jl jp inc mov mov ja mov adc jae movsb ret clc incl xor ret adc inc dec add push add ja xor jmp xchg lock cmc mov sarl or rcl ss mov cli sub out fild testl push test add (bad) or cmpsb mov cld dec daa jae xor push mov xchg (bad) xorl mov roll xchg push std cmc and xchg cmp mov mov js mov and inc jp adc mov add test inc cmpb nop ds andb out das mov outsl ficoml lahf add das loope jns inc or outsb mov lods (bad) inc jp sbb jmp out adc cmp pusha loop xlat test or add xor data16 add jmp and or push add loope cmp mov fidivr push sub clc fwait adc pop shll jne xchg jae sub movsb fadds mov jp bound pop and add mov cmpsl leave and add push lods andb xor jmp and daa rcrl xlat pop leave movsl outsb pop ret out push push mov and xchg sarb dec popa add subl (bad) mov das mov push sahf mov add mov jnp testl fwait lods and pop mov jne and outsb sbb imul xchg ja or dec out or sbb out lcall jg mov mov xor int dec out fwait add scas daa lea pop or (bad) lret scas inc data16 adc push pushf shlb dec xchg out add ret or and dec inc sbb decl push pusha jne out add imul push adc rcl push adc outsl dec in mov (bad) xor dec das pop or outsb (bad) int3 idiv add lret ss mov push (bad) leave sti dec jbe stos add xor add mov push push add outsl (bad) or fstpt add pop or mov cs popf test mov lret (bad) push int3 cmpsl dec sbb push lret icebp negb jmp jecxz stos pop pop push mov dec fcoml icebp and lahf mov lret push add pop push jg call inc gs pop (bad) mov and lods insb inc mov and sub dec data16 add mov cs in jne sub push jl jae pop popa cmp dec pop or rclb (bad) fsubr dec sbb inc adcl aad daa add cmp push xor xchg adc mov or jmp data16 dec push and or jle sbb mov outsl pop and js out sbb or mov push pop mov adc xchg std in pop adc mov add xchg sub cmc adc mov pop gs shr push jg xor pop pusha lea pop aad mov aam rcrb dec sub xchg pop (bad) icebp js push xchg mov js (bad) imul pusha dec cmp sti das ret xchg fbstp cli sbb jecxz daa sub add loopne push jg mov adc scas pushf int3 pop and jmp jg stos lret xor mov xchg push in jecxz cmpsl push fsubrs cld daa es loop ret loop push iret imul push daa in cmp adc ja xor cmp jno lret lret repz jmp inc push push in dec roll push pop rcrb fdivr pushf in jae dec inc out sub dec and lods je cwtl inc cmp pop ljmp mov push pop jno scas pusha cs or lods sbb lock pusha je std cmp inc pop sub rolb aaa idivl (bad) in sbb push push xchg add jae scas dec mov adc aas add in (bad) jmp mov stc mulb sub fmulp add stos repnz pop ss push push or xor test loop bound inc mov push mov xchg scas aam add jp out loopne outsb sub pop mov std jp jns xchg orl fdivs push xor push lds cltd or clc and and adc jg scas sarl fs orl or das add and mov pop jg or mov mov cmp imul loop dec inc mov pusha lds inc xor adc mov pop pop inc icebp cmpsl pop sbb jb jne pop cmp test jne dec icebp fistpll mov pusha dec into fsub jmp stc loope pop pop mov scas in in pop jp or movl push pop xchg faddl push sahf outsb (bad) jle or inc ret xor fmull xchg mov sbb or loopne mov in add mov xchg movsb lret or (bad) xor and push push or push pop ja out mov flds push test out pop clc jmp in test outsb add lret (bad) cld stc add push cmp mov (bad) push fildl sti (bad) xor jae bound mov outsb ror xchg (bad) jne dec cld in adcb sub xlat inc add mov ss je std push xor mov mov push inc repz movsb sbb inc or push xchg arpl add stos je jp nop fwait pusha int3 or mov jl repz iret inc fisttpl pushf push pop xor sarb sub cmp jnp loopne xor fs or xchg cld xor arpl xor (bad) push add ret outsl mov js inc pop (bad) mov mov notl in xor or cltd mov pop jg cmp pop aaa dec lcallw jbe xchg fiaddl push pop insb out pop das out push (bad) adc scas and rorb scas jg pop subb pop outsl pop xchg ljmp jns sub adc push add pop add int3 mov addr16 dec mov les movaps pop mov movsl hlt out and mov aam je jne mov das fcmovbe sub lds out int3 mov pusha call cs mov mov mov mov out or or push fcomi jg xor or and fsubl cmc aaa (bad) cs test mov mov aad ljmp jecxz,pt pop push fcmovnb das mov push ljmp das cmc xor and outsl ret inc lret fildll sub nop jg jge jb cmp loop push xchg cli int or out cmp or scas pusha adc daa lock pop (bad) mov pop push sbb lahf fcmovu add jl sarl insb push add call mov sub (bad) cwtl leave push negb std in mov mov add sub cmp jb lods adc or push lcall sub outsb (bad) js push mov imul mov (bad) xchg and lcall dec imul loop lock rorl mov push mov lock sbbl add neg adc or push pop js mov or push cmpsl (bad) sub sub push addr16 xchg out (bad) push push add xchg scas dec not loopne lds sahf mov jle aam or pop push outsl or subl push pop in outsb aam inc cltd scas ffree movsl jmp and stos add repz jb bnd add stos dec jne and shrl or fcmovbe pop imul pop mov fs (bad) pop insb stos aam or pop movsl add sbb push adcl inc push jg sbb fdivs and sbb idiv jle fdivs daa xor add and jg sub xlat aad push sbb out ds and daa cld or test cmp std lea (bad) jo rorl fdivr cmp ljmp iret les add pop pop addr16 mov (bad) or stos cs subl xchg les mov xchg xchg inc add test xlat adc clc xchg mov shll push xchg sti or call mov mov in adcb jbe xlat nop outsl or jge pop add cmpsb cmpsl out push mov movsb test scas or pusha xor fildl pop sbb (bad) jbe fistp test dec adc incb adc push loopne in out mov sub and shrb push or add aam sub aaa popf rcr (bad) pop add mov mov and adc jno add xlat insb add das push cmp or push fisttpll pop mov xchg clc and loope inc movsb or std lahf inc rorb fidivl cmp push add mov (bad) jg pop andb out jne or jmp mov push mov sahf and in inc xchg or xchg (bad) (bad) jp mov adc push push ljmp add (bad) shrl xor pop sahf ljmp pushf clc sub das cld xlat loopne and outsb push faddl fdivrl inc cs bnd test mov sub xchg push jg mov es pop lahf or and xchg stos fisubl mov roll rolb dec cmp mov dec (bad) xchg add cmp xor inc jbe pusha jge mov in mov dec call cwtl test jns (bad) sahf sbb xor out pop clc test inc sub push add adc mov ret fwait loope outsb jae outsb sub add mov idivb jge arpl neg stos push xor mov adc call pop test je sti push (bad) pop xor cmp ljmp hlt cld jne,pt adc or loopne add adc push test or inc xchg pop and addr16 enter adc pop stos add mov mov xchg push push pop lcall aaa sub jge repz inc ljmp jp cmp xor jns pop mov insl pop inc hlt clc pop imul movsb in stos mov add jl push mov dec and mov shll add rcrb or mov inc cmp xlat aas mov pop mov add pop pushf push jp sbb rol push jnp mov call cld mov ljmp jge sub pop mov or (bad) sbb sbb imul jg in and pop mov push fbstp movsl sbb fmuls sub lahf jne lahf mov lods pop gs sahf and push iret mov jno in jle push jo mov mov loopne (bad) leave xor jge dec nop adc xchg sti and or out outsb mov pop sar (bad) cmp mov pusha pop and jns xor lret mov js je in into add ret arpl lret cmp cmp and push mov fidivr popf fstl dec mov cli testb lds adc xor mov std loope mov leave jae fistp cs xor mov mov xchg jle daa mov or ljmp and xchg int cmpsb shrl ret cmp jecxz outsl ja mov pop xchg gs adc mov jecxz je cmp mov xor pop mov insl in pusha fwait rorb or and rcrb nop push mov insl add mov push mov cmp cmovs dec bound test repnz hlt add jmp dec xor adc xchg into pop sbb inc jmp xchg or js adc jo repnz jl add repz xchg cli and test or inc pop inc in (bad) xor div push (bad) mov fcmovb adc out lret outsl test pop pop (bad) jp dec adc stc not pusha or pop jne (bad) and inc lcall mov adc or insb and popf and jge sbb rorb and ffree mov jno xor cmc add xor pop xor cs scas movsl mov mov dec ret xlat xor adc dec jg insl sbb mov cmp daa xchg ljmp es mov and ja,pt push xor cmp call daa xor stos (bad) das out dec jge jl,pn jmp hlt xor daa mov and test sbb push xor enter dec xchg or xchg add (bad) jg cld jl pop fild add push push (bad) cmp inc or fwait pop cld pusha push jo loope jg or inc cmpsl or mov jo pop inc in jo repnz scas fisttp (bad) or pop push out xlat pop xchg dec testl negl add aas mov pop shrb pop (bad) daa mov xchg push pop mov dec pop and int mov pop xchg push subl mov int3 js mov (bad) push push mov mov (bad) mov ss rcrb rep mov (bad) cmp imul mov and pushf stos ficompl push xor sbb stc rorl cltd mov test adc test add xor imull or sbb or cmp mov inc arpl bound cmp pop fisttp fistpl xchg bnd pop std sub pop dec xor addr16 jmp push push jnp xchg push iret jae push outsl jp sub das or pop pop pop mov hlt loopne mov add popa es aas aam mov orb enter jnp adc shr sub xchg jle movsb mov sub shll (bad) (bad) popa push jmp mov mov cwtl aaa push push add inc jb jbe inc popf ficoml sbb jmp ret add sti xor and cmpsl adc pop scas lret jg pushl or fwait dec pop fcmovnb fldenv xrelease sub jge fwait adc mov jmp push inc icebp mov adc sbb or movsl xchg push std xchg xor sti add hlt cmp xchg mov pop sub test repnz or (bad) sub mov mov mov out xorb jg push lahf cwtl fwait jae daa arpl pusha jg pop pop aad ds adc and mov add cmpsb dec sbb clc pop add mov sbb jle ds add mov pop mov sbb flds out test fwait sbbb (bad) mov adc mov jae pop jle jmp iret ljmp into add xorl fldenv das ret jbe push jmp xorl icebp mov push inc cli shlb (bad) cmp mov lds ja add jne pop sub cmp dec test jg pop cmc sahf xchg imul pop movsl dec aam add adc sbb mov pop sbb xor pop dec mov jns not adcb ret push pop aas test lods push (bad) push mov pop dec fisttp pusha hlt negl xor lret push outsl mov roll pop pop call add dec push mov jae sub sub xchg jb das fstps dec cmpsl icebp jo fcompl jl xor ds xchg das add fmulp push mov ud2 adc mov pop and repz cmp mov scas outsl sbb popa jle jl or frstor sub push add scas fnstcw cli in mov (bad) push mov dec mov sbb pop jg popf fnstenv dec add pop hlt rcr add push add fidivrl cmp jle push addl xor xlat cli sti (bad) ja jge mov cmpsb out push (bad) jg in icebp pop loop movsb loop lds lods test add aaa mov cmp scas inc cmp (bad) adc aaa pop cli je dec pusha jns cmp ja sbb add fstl pop xor ret mov push cld aad adc in lret or or sub divl xchg out (bad) les es dec clc cmp iret lds mov push and or pop pop push int3 xor cmpsb in and scas push pop shll jle jns mov out add pop sub out inc pop jno (bad) es mov inc stos jp inc pop mov xchg ljmp push loopne imul mov pushf xor push in mov imul scas and mov fistp lcall call pop jbe add push enter (bad) or fldcw mov aam push and xlat jae xlat add out ljmp inc je jmp and xchg push xchg adc inc subb js mov adc and imul lods dec leave push enter jnp sub xchg jl inc decl test or sub dec jno mov or jae pop jne sbb sbb in orl (bad) adc cwtl negl mov fidivl sbb pop lods sub mov (bad) shr aas or sub sub incb and pop (bad) dec bound roll xor imull fndisi(8087 mov jno jg and mov xchg lds (bad) push in daa fsubl mov pop sbb push movsb stos out pop cmpsb mov out sub dec loopne ret outsl add insb and or pop sub add jecxz add add adc xor xor sbbb out mov (bad) cs sahf sbb xor dec push push jg adcl mov adc jp movsb pop out jl addb or repz or cli xchg or test push pop pop mov fwait jmp xchg push or fisubl or sub mov sti (bad) in inc jo xchg loopne cmpsb rcrl add lret ss bound push xchg std je sarl inc mov jle fnstsw dec cmp inc xorl push ljmp pop jge hlt daa (bad) (bad) popf dec testl test dec push push lret jmp loop add nop fwait repz add mov jg xchg cs jmp fistp fldl ljmp out pop cs push (bad) jmp or out cmovns ret xchg sub cld mov pop and imul add jmp mov fisub stc aam add lods (bad) jb push sbb rolb icebp or inc sub test hlt sbb or sahf mov push enter sub and adc aad sarl jle push xor push test (bad) frstor lcall adc pop or pusha sub dec pop xchg aam dec fstpl jno xchg push test push std mov adc out test pop pop add rcr pop add pop and jg rorl imul pop repz mov es push ret mov xchg in pop pop jb test or int aas and clc es dec test jg repnz pop loope push sub lret xchg (bad) mov add jle xor loopne imul (bad) cmc sub inc (bad) or pop add and xchg mov jl (bad) les fs and les xchg lret insl push shl (bad) jp outsb push xchg and aaa jae jge fisttpll fdivrs dec test sbb in mov sub mov adc clc or add xor push stos loop pop xchg daa mov ss xchg mov xor adc ss dec mov cltd mov adc fwait aas ffreep xchg stos xchg or pop rcl inc subl pop adc jbe push pop hlt imull gs pop xchg jbe add scas (bad) jg inc xor pusha or (bad) and cltd xchg add test loopne in push add adc das inc pop add negl movsb sti adc popl sti mov icebp mov nop or js inc cld out inc xchg fstpl repz pop xchg stos mov adc dec sti and fmull xor xor (bad) repz jne std (bad) or fdivs pop cmpsb lcall lea int3 cmc sub mov cld dec cli jl dec (bad) std mov inc pop sbb daa jle aam dec pop outsb icebp push cs inc or (bad) cld inc ja mov xchg pop aad jne dec add mov sub push jl mov add and xor push and sub in sub les rcll jg jno idivl mov bound js fistpl fidivr jb inc mov or xchg imulb xor push cs test int push dec repz test addl (bad) cmc and mov cmpsl inc aam inc or push or push mov sahf aam call jne sarb mov (bad) repnz push dec das inc pop mov nop sub jg dec cli add ret aam push dec fistpll mov sub cmp pop lret lds pop pop mov sbb fwait (bad) xor in scas test sub pop mov (bad) jg ja ret xlat pop sub sub pop in adc sub push ss or or (bad) mov mov jne adc aaa fucom inc push out pop cmp scas (bad) andb repnz fwait lret loop push jg push pop or mov push ret fbstp and xchg xor out push sub mov mov xor or hlt xchg push push icebp jl ja decb mov inc mov adc jge jae in cmc pop fwait push icebp sub addl jmp aas cmp push pop pop sti add das xchg jle imul mov pop push es popf ficom push add bnd jl mov jp pop dec pop jecxz lret pop arpl xor jg lahf sbb lret fnstsw and pop scas es mov cmpb loop cmc movsl sub (bad) movsb fldenv pop fwait add popf cs pop xor add jge pop add push xchg xor xor ljmp (bad) movsl cmp push sub cwtl dec outsb push push (bad) add sarb ret sub repnz das fstps js in or test and mov scas add lods orb sub jl pop pop and and dec sub out jp inc clc add push ja push daa in pop and mov imul jmp sbb aad sub jo or inc (bad) xor lods or mov int pop xchg insb jbe sub std add out sub cmp lods clc ficom outsl aas or dec mov cmc sub test add in sub cmp sub aam or pop jge ss mov push inc call dec xor ret mov mov andl loopnew add and adc ljmp test out addb idivb or lret into xor adc cmc cmp adc push add scas pop sub cli inc shlb mov or mov jl (bad) push mov arpl inc xchg add mov (bad) not (bad) dec lods jbe bsr loope aam int (bad) push in mov (bad) dec (bad) rorb cltd jge push pop mov and cmp (bad) std clc pushf test inc pop cs emms mov fisttpll or xchg push xchg cwtl or cmp dec mov sub mov int mov fsubr sbb sub or scas cmp or add lock jg push sbb addr16 pop movsl xchg das leave adc mov idivl daa es shrb jg adc insb cwtl (bad) pop mov mov scas ljmp jg sub pop or fistpll adc push std shll mov add sub cmp add add jbe out jae sbb jecxz out out jb mov ret jmp imul add fsub daa jne not adc or mov add stos lea mov lea xchg in call or mov int sahf add cmc jg add mov les add xchg xor and imul sub dec ret add shl mov daa jb mov dec sbb pop jl dec mov cmp dec adc xchg (bad) sub outsl sub xchg hlt gs movsb push and mov or add aaa dec sub xor xchg dec or adc xchg roll in cltd jno jge push xchg (bad) or fs xor mov movsb jmp pusha and push push mov jb out dec fild push lcall push mov add arpl repnz fs adc sub stos leave dec call mov mov jmp mov idivb sti rorb inc daa mov push stos mov and push add cmp pcmpeqw push xor into lock push test out sub (bad) jb std loope,pn test nop call and inc xchg fidivr adcl pop roll out (bad) jge mov xchg jg dec adc (bad) and rcll jg add adc lds outsl cmp out pop sub clc (bad) mov cmp dec xchg dec adc jg add mov dec add jmp inc or outsb mov lahf add stos cmp push sub xor push stos xor fcoms cmc mov and ljmp mov aas andb cmp mov xor cli sub loopne in mull stos js and rclb push push jne adc jnp mov pop xchg pusha mov mov fildll mov lock jmp sbb inc push popa vxorps pop (bad) std sub das lret fsubl (bad) adc outsl xchg insl bound pop pop fadd push push mov (bad) dec repnz mov frstor daa push rol cmp fstpl or add jmp jo idivl push push mov mov cmc and push mov cli jns pop loopne xor loopne mov adc cwtl inc jne jl ror jg daa addr16 sar cmpl sbb icebp (bad) lcall mov push add mov mov (bad) push sahf or jge adc into mov pop in add gs cs fldt mov pop xchg (bad) or scas xor insb pop das fdivs pop sub push pop mov jns push cmpsb mov push jmp enter or and cmp ret xchg test in inc mov iret jg js aam pop push add push push outsl lahf cli sar imul mov test aad add dec xor dec jno xor lods bound pop cmpsb push dec (bad) xchg and cmp fbstp frstor (bad) add mov and popa or mov addl dec outsb stc sbb mov mov pop stc cli dec lock push loope cmp fdivrl jl enter add aas mov jmp mov add mov aas popa mov pop push dec pop pop mov add outsb lock and jno cmp dec negb cld sbb add mov and push (bad) in bound lret sti imul inc testb rolb sub add mov or idivl inc pop pop sub sub icebp out test and mov pop pusha cmc incb cmp xchg pop mov lods test or add sub jl mov call scas loope add test adc inc pop xor push daa call inc (bad) ret pop aas hlt cmp add popf xorl or dec outsb or shr push outsb jg rcll ss mov cmp andb test push inc jbe cwtl bound (bad) cld add xchg stos cmp (bad) or pop add adc xor xchg xor sub jle jmp jg mov push mov pop mov add ss popf inc ret adc std and cmp cs inc adc fs xchg mov mov add outsb adc mov outsl in add mull out leave and mov push jmp mov xor jnp dec movsl std cwtl adc sbb clc dec push lods pusha inc or inc add not scas and imul dec pushf adc mov or sub adcl test sub xchg or inc fdiv stos and pop add les gs inc loop push xor mov out loope sub orl (bad) insl sbb fs aad jmp div mov and outsl mov jge lds dec js or mov push popa inc mov jg xor and out xchg pop js in addb in jmp dec fcmovnu cld movmskps push stos xor call decb mov and dec sub push jb add int3 mov dec movlps std jmp aas stos mov ret sti jle xor and xchg mov cli and xchg sti xlat popf sar push push add cmp dec and out add test lods mov push or pop (bad) (bad) lock mov jno or out dec imul inc decl repz out lahf in xchg push stc leave rolb dec jmp (bad) aas sub and dec imul rolb repz jp sahf or test dec xorb sbb fisttpll fimul inc lret bound or js inc add hlt jmp (bad) jns imul ja dec js add out loop xlat ret mov (bad) insb push incb outsl or (bad) dec sub or lds add in sub add inc adc outsb sub xor fs lock push into das jl mov push in cmp or or stc rclb add jnp lahf push xor loop jge ror jb push jge insb sub xchg mov shrl xchg (bad) or or fldenv sti jg out xor das ret stos or add arpl cmp lret into push or jmp and jno mov flds repnz push cmp aas and not mov fimul pop and sti das pop shrb lea fs rolb repnz inc fidivrl and lods ret jp leave pop pop inc adc push xor mov lret dec adcb inc lret das scas jae sbb pop das sub mov aad cmpsl js dec add push adc (bad) shlb out add subb in sbbl jae test mov mov cmp mov cmp jg lock test sub addb scas in pop mov mov jmp out movl push nop mov jge jb mov and xor adc push or mov sub sub add dec or mov add popf rolb xchg mov pop mov rcrb (bad) mov clc xchg push cli jb sub int and mov pop es push ja sbb push mov mov cmpsl or push ja pop (bad) push cld pop imul mov outsb push push rcrb or mov inc fwait jmp pop adcb sbb jo mov mov nop cltd sub rcrb das push gs lds (bad) mov je cmpsl jne aaa mov das addr16 ja add mov pop lods or mov mov inc aad mov pusha jle stos aam test addr16 aaa add add sbb mov call stc and call (bad) out push xchg mov movsl sbb inc rclb mov (bad) aad das test lock lds jg cmp sbb rcrl or adc pop jns jne mov add and sub add sub outsl add sub jo dec pop ljmp cld dec aaa xchg push inc mov nop sahf cmp pop pop sbbl les and jle add (bad) xor mov mulb pusha pop add fs pop pop call jnp mov ds insl sbb adc mov hlt push loopne push inc pop cmp xor jl add flds inc shl jne xchg pusha jmp out mov adc cmp jg sbb pop pop enter mov pop xchg pop sbb xchg mov ljmp xchg ds insl add and inc adc xchg fs pusha xor out jbe stos pushf fiaddl insl add ret mul pop std (bad) and xchg jle mov sub or mov or jl push push xlat pop mov dec inc add (bad) aam push pop sub push lcall mov xor out repz add or lods ja sub aam jmp ds mov clc lock leave mov rcrb inc sbb xchg pop mov or repnz push divl jp jo das mov icebp cmovo jmp push jecxz inc lret xchg push push mov jb jne aad pop mov dec or bound xlat setb mov sub push jo push and scas lret rorb mov push push and repz jmp (bad) fwait clc jmp pop xchg not movsb sub push pop pop inc add or jge and pop sbb (bad) cmp pushf das outsb or and cmp dec inc inc or or sub movsbl ja or insl and mov push or (bad) cld fdivr jle cmp pop mov pop sub sar fisttpl mov inc mov sub call or jbe mov inc adc adc test jge cmp push and lds dec xlat sub das pop pop adc stc jp adc in push shrb xchg or push mov push jno jg push insl pop iret ss xchg inc popf and fstps push into pusha in fldenv roll cwtl bound out scas sub clc cmp cwtl std outsl in push jg lret jmp jecxz and add inc mov add clc jmp enter insb lret outsl enter jp or jle xchg pop cwtl (bad) mov xchg arpl and adcb fcmovu push jne lret leave xchg lret xchg call push jg enter cli aas es mov add stc sub addb iret ret push stos push inc mov mov jg out jmp pop lahf in jnp jns popf rorb or or repnz incl pop push pop push jmp push arpl lock pop pop xchg pop jo mov add cpuid daa idivl xlat gs adc sti pop pop push push out xchg xchg add push pop inc aas xor push stos dec add jge xor sbb dec jecxz ffreep sbb pop clc pop add mov inc insb aad mov cmpl sub outsl mov pop mov outsb stos inc (bad) mov xchg in lock push mov mov push rolb adc movss fistpl leave mov aas push mov mov mov stc or pop push push mov test push pop pop mov idivl adc in pop imul cmp shrb xor into cmc jg hlt (bad) mov (bad) pop nop pop mov mov loop shll or xor add dec ret mov test aaa push push aaa xor test pushf sub or out jnp or pop xor (bad) cwtl cmp rcrl xchg xchg and aam insb das mov lret jecxz in cs xchg loopne inc rcrl addr16 push out inc imul nop mov fcmovu pop sub add and ljmp imul sub gs add jnp pusha sbb or push or adc aas and fs outsl adc enter jecxz push (bad) cwtl aaa add inc in test out stos nop adc int3 jle mov dec or or out call (bad) icebp sbb loop enter repz mov mov add sbb mov stos daa sub std imul add jg add rclb jecxz fist jbe push pop or (bad) mov sub les mov (bad) jg lea push sub add cmp testl pusha inc sub mov pop push addr16 xor push push mov mov daa lods fchs pusha push ret nop and stc lock push mov or pop push adc and push gs hlt insb inc or mov fmull inc add sbb cmp push pop fistpll jo test mov in cmp bnd int3 movsb mov cmp (bad) mov cmp xchg jb mov pop mov loope daa sahf add je inc inc and dec and cmpsl cld icebp jnp cmpxchg loope jg jmp shrl enter and lods jbe and jg and push add cmc fildl inc arpl sbb pop push inc jo addr16 pusha push pusha mov out aas dec mov pop call pop add mov add jp adc push out push xorl or fs pop inc jbe dec addr16 and add call fmuls data16 mov cvttps2pi add xor neg pop inc mov rorb jg stc imul jle jo test loope cs or mov imull (bad) (bad) lcall jge dec mov mov mov mov rcrl bound mov leave lret jle pusha push sbb cmpsb cmpsl loop fisttp cmpsl mov xor roll cmpb je pop pop movl jo or fstpl pop add in jg lock clc sbbl leave mov mov xor mov xchg dec sbb inc aas add cmp jo pop in (bad) dec in test xor mov mov dec data16 push add sub jns xchg addr16 sub lret mov decl inc xchg fnstcw (bad) fisubr das xor (bad) or and aas and mov out dec lods and fucomp xchg xor decb xchg emms add dec sub repz inc inc in xorb mov je stos pop dec push mov icebp in add xor das in clc jle xchg lods or pop std sub xlat test lods and xchg jns sub push ja jnp je lret pushf dec fstpt mov gs jge (bad) dec outsb aas mov je inc (bad) (bad) or test xor cmp cs sti jmp inc push jg sub icebp and push (bad) mov mov and jle push and (bad) pop (bad) xchg inc mov add and (bad) negl add push daa mov jp mov shlb xchg and push addl lcallw sub cmpsl sub hlt bound jmp or sbb jge dec iret cmp adc ret add or cmp mov outsl repnz scas mov xchg out (bad) and xor lahf ljmp nop je sub ret xchg pop popa (bad) jne,pn clc jns pop repnz insb cltd mov syscall loope mov sbb add mov sbb iret xlat add dec stos jge loop push push jmp dec test stos add aad add fs push dec lods aad sub sub adc sti nop jle popf mov jnp push (bad) xor loop nop push pop je mov sbb lret mov lods je (bad) mov inc cmc dec cmp dec (bad) iret in imul out cmp push adcb dec (bad) jbe cmc or push xor push add push mov xor leave and pop jmp roll fisubr divb mov mov popf mov push add adc fstpl out dec mov push sub out sarl iret push pop mov lods sub or movsl (bad) jge adc jg mov mov adc sahf ja mov jl jb dec popa dec dec dec add inc es outsl hlt dec jns mov es std int daa rcr dec adc mov mov jle push pop paddb jg jge xor loope dec mov push and push xchg inc mov (bad) mov xor and stc adc jge out shrl lret jae ljmp pop sti repz movsl or mov lock pop push mov roll addl lcall xor adc stos lret loopne cli jb out jg mov jp fsubrl ja fwait imul out lahf jno inc (bad) aaa out loop pop xchg mov test sub popa enter xchg roll daa out adc sub mov sub jmp out push inc or pop mov nop sub pop jns mov pusha dec cld dec sub decl test sbb push rcrl sbb push push ja sub xor testb pop inc or sub or sbb jb aad add test sub mov push push pushf adc add fstpt mov mov mov mov cmp adc or jecxz nop test add sbb xchg pop lock repnz pop pop ret sbb or inc mov pusha stos movsl icebp and mov mov add sub cwtl add fimull (bad) ficompl aad stos xchg jbe jp lahf push pop std mov pop push lods or mov neg jno jle pop dec inc and (bad) das mov cmp insl push in mov lretw stc sub and sbb dec daa xor or negb xchg daa int nop add pushf push or out js pop fildll push add adc imul mov mov and add push clc push dec repz mov xchg mov jnp add cmp xchg ljmp lea adc push push push pop xor scas popa shrb add jg xchg inc jbe push inc cmp pop test jg repz xor push xor (bad) cmpsl mov mov into add cwtl inc or fcom sarb xor jge xor add stos lret xor cmp jg mov scas pop and adc dec leave jno ret jbe data16 daa sub shll xchg loopne jnp push jmp push push sahf test dec out xchg test in ja pop jl cs jbe mov loope jle jae pop and nop icebp fwait cmp mov (bad) push inc add sub aaa sbb jp and std das inc incl bnd std add aad pop das cld xchg mov lahf push jmp cltd push sub popa mov xor pop ljmp cmpsl es nop les push adc push mov je ds arpl pop xor test lods mov sbb add cltd mov push out inc jle fisubr and pop mov sub dec pop xchg push jecxz add jae aas inc and jp sbb rolb jb cs fldenv jge push adc arpl testl dec addr16 loopne out mov xor dec pop les jns cmp push (bad) in xor outsb insb das jl and jmp outsb mov sbb push test cmp popa xor sbb lret cmc dec push xor fsubrs pop cmpsb mov cmpxchg jecxz push add mov orb add mov sti add jg xorb call pop jne adc (bad) sub shll dec dec movhlps ljmp iret pop jne pop es cmpsb pop pusha mov mov push sbb xchg add ljmp and les cli add push mov aaa jl pusha mov mov (bad) loopne dec outsl roll ljmp add das test xchg scas sbb fcoms stc push add push mov insl add dec fistp rcl mov (bad) sbbl ljmp cltd aas push dec dec mov fbstp inc rclb inc pop fnstsw add sbb cld jnp nop push loope mov push mov pop push test mov dec stos imul cmp insb imul clc mov add clc or in xor and push jns sbb or (bad) pop cmp out into sbb jge (bad) out lret icebp adc xchg inc mov loop and cmc repz ja mov nop xchg add cli icebp jnp (bad) das movl push cmp push mov sti mov fcoms or cld push (bad) fisttpll or xchg add sub scas into mov dec mov xor loope push inc mov xor add out (bad) popa ret xor fucomp xor in or jp xchg dec jg push pusha push aad addr16 dec jl add mov push add stc xchg je jmp jmp jbe or sbb pusha add hlt add dec sbb fldt fidivl outsb pop das in inc loope adc mov add scas cmc cmp in inc dec cld in push adc xor sbb test imul stos pop in sbb sub lret cmc dec aad sbb and dec mov mov insb dec (bad) jmp sbb loope mov push add lret data16 inc fwait inc xchg jg ds jecxz int3 lods sbb and xchg dec mov pop xor cltd jmp xchg and iret imull fldcw mov sahf jge or add pop (bad) cmp sbb cmpl (bad) or and jbe sub movsb negl pop sub je push bound jecxz test sarl adc sub daa outsb jle xchg into jmp lea push in dec out mov les jl mov push daa insb out pusha fwait icebp mov (bad) gs jmp sub in imul lock outsl cltd add inc inc (bad) jle std mov (bad) jp aas daa sub sub ja fwait adc call jg shll test jl dec xchg push lcall push dec rorb push pop popa arpl or xchg repnz mov push dec mov xchg inc sub jae outsb cld jle add pusha or or rorl rep add je pop mov inc lret data16 add mov fdivrl pop inc and add imul repz and lds incb (bad) mov fistpll nop mov or (bad) sub xchg or add xchg mov mov mov mov sub mov adc xchg add insb ret dec mov adc aam add mov or fiadd les cmc jnp lock or (bad) daa or aas bound pop mov mov push xchg jge push pop mov inc dec mov dec loop or inc push add mov and jbe movb je daa jl sub sbb int3 and sti rorb out lahf xor cmp aaa dec (bad) (bad) pop rcl pop pop lds sub mov iret das sbbb mov icebp jp mull adc pop cld fsubrl dec push sub icebp pop lcall insl push std fnop insb lahf fisub jmp push sbb pop dec push push repnz imul xchg jbe out pop daa push xlat rol xchg xchg push push sub lock adc and movsb hlt jl adc mov into jnp add mov outsb jns jp cwtl inc adc dec rclb sbb out jmp mov add pop (bad) nop es insl sub add xchg cmp jns scas sar jge xchg xchg jl mov int3 loop std orb dec pushf out sti cs or pop xor jns adc mov pop aam and inc or popf clc pop cltd sbb hlt scas dec outsl (bad) and out add sbb adc or psubb (bad) dec idivb add sub repnz mov jne (bad) cmp push push push rcr push cmp push in mov int mov inc inc ja fistpll ret (bad) mov add repnz inc std lret and inc dec add add dec out push fbld in add jg fs jmp add push aam popf pop xchg push adc add or mov xchg sub leave jbe cmpsl pop in outsl icebp lds dec rcrl roll fstpt xchg jmp jb adcl mov shl mov dec sub mov cmpsb mov sub cmp imul rcrl aam pop xor dec mov pop add iret movsl fdivrs add frstor loop xlat in rorl adc add addb pusha jle lods cwtl frstor out xchg icebp sub das hlt loopne lret sub shrl into xchg inc (bad) pop xlat push (bad) or repnz or mov xchg ret shrb jbe or xor add notb (bad) rcr ja jg push add pop loopne mov popf in sbb loope xor mov add fldt dec ret (bad) shrb cld jmp shl scas dec pop push add mov cmpsl hlt jnp push mov pop pop xchg fistp dec pop les adc rclb into sti lods lea iret cmp dec inc xchg adc mov xchg rclb or sti sbbb loop,pt ds (bad) xchg xor lret jg sub sub aas and and imul cmpl les inc mov cmp push bound adc bound ljmp mov cld jmp pop in pop into sub aad push mov test jae call push rol fistpll push into repz xor dec loop add push xor das (bad) dec jle add inc pop fistpll pop outsb das mov inc pop pop and cmp hlt popa cli and jmp fcomp (bad) mov inc or jg fisttpll adc lcall inc in add (bad) and (bad) sub pop or fstl inc cmp out inc test icebp mov lds daa jns add lret xlat in pop lcall push inc add rorb adc std sub icebp cltd dec jo mov negl fsts or pop adc dec stos or push enter add popf sub xchg ret fs aas jbe ss mov (bad) jg lcall xchg jo dec xchg xchg push pop adc in imul xor mov cmpsl subb jmp dec pop push scas test (bad) xlat jnp sub ss out mov xor and sub aaa les mov mov cli les mov push add jge pop (bad) movsl mov ds mov add (bad) jbe leave nop adc and pop rcrl or (bad) aas jne das (bad) fldcw fisttpl add inc fnstsw sub push cli xchg push inc adc cmp inc cmp push lock adc sarb loope sahf add ret lcall or and push cmpb loopne xor pop xor dec pop push cwtl dec mov out das jp repnz push sbb mov fmull add push sub pop in das pop aas mov jmp mov mov cmp in and mov gs outsb cltd push mov pop out and negl or dec pop lahf dec or jns subl and lcall mov cmc mov dec dec ljmp ficomp mull rolb mov sub jns sub push push add push mov sub mov mov sub das das loope subl push loope fistpll std add cli and shll jle (bad) add push repz (bad) xor sarl jg dec pop mov cmc inc pop sbb push pop gs cld mov andb aas lcall popa repz mov xor or gs stos adc lods mov ljmp mov lret or pop mov mov test add int and lret mov push neg cmp push or and pop add or sti dec sub push incl sub jecxz inc or lds sbb xchg ja push push lret bound mov sbb mov jle popf inc lods hlt andl mov int3 js ds or (bad) push (bad) xor or mov int cli outsb push push repz lret ret push adc ljmp and dec outsb dec add das add rcrb ljmp sub popa mov mov cmp push pop sub jb pop cmp jbe sarl mov jl (bad) sub shlb adcb nop mov mov bound jecxz xchg add xor add fidiv cmp or inc push cmpsl pop xor in jg int3 jo mov out add lret test push or jmp clc addl cld ja jmp das push push data16 adc sub push daa jge xor jle push sub mov dec jbe daa fdivrs or pop inc fild int dec or jp pop pushf pop sub add sub (bad) fistpl pop sub rorl jnp cs call xchg mov push xchg push xchg fcmovbe fxch cmc sbb pop push in jg int3 repz cmp dec jno jl pop in adc and push loop,pt lahf sbbl cld or xlat mov dec pop adc or push push sbbl (bad) jg jl es xchg add lods (bad) jge cmp push sub xor sub fistp lods and js icebp jle pop and xor into popf scas fs pop rcr in out mov dec fs xchg push push ja das fs push xchg pop mov add icebp adc mov jp fisub roll jmp push jno mov insl lock out xor adc sub fwait das pushf inc adc mov jge mov ljmp sbb (bad) or loop adc add mov or cmp call enter mov sub shll add xor or shlb jl (bad) out incl das cld mov out stos mov shll sarb sub xchg jge loope and mov dec and sub sub mov add xor dec or jbe pop fidiv jmp push in and daa xlat mov out jmp add xor sub and mov mov sbb push add xchg inc enter negb (bad) imul rolb into mov adc cmp xchg int3 les les xchg fidiv repz inc jg adc (bad) lahf repnz cmpsl call mov sub test jo xor push (bad) aad sbb jmp arpl repnz xchg pop mov aaa mov sub (bad) stc sub add lods pusha pusha inc sub or (bad) hlt addr16 (bad) out adc mov or push jo pop mov ds dec nop loopne add cli xor aas cmp sub scas repnz push push xor bound inc movsl stos movsb inc pop outsb add push insb ds push and mov add add out call (bad) nop pop or sti das sbb cld imulb xchg xlat dec xchg or mov popa loope mov push sti nop jge and aam psubusb ss cmp mov push fs dec pop test scas sub test jl jb pop mov sub xor pop or (bad) shrb jecxz dec push jg (bad) mov or (bad) icebp jp iret std cmc inc sbb adc pop adc insb push pop pop dec xchg mov cmp nop xchg jl xor in fmul add shrl fisubrl adc pop dec add mov out pop xor add pop sub (bad) jg out pop add push jmp ficom and add lret shl sarb dec xchg je and mov push cmp aaa dec jge cwtl xor jae add lods mov mov add cmp aas test lods and or lods outsl add and dec mov sbb or add (bad) and leave inc aas pusha mov jb sbb (bad) in adc pop push ret adc xchg imul ss jbe cmc outsb popf nop add movsl and mov or lret test xchg inc pop ja mov or loopne push aad leave push jp push stos scas fistp hlt adc and and jle or pop sub cwtl add dec mov jge dec cli call mov jne cmp jmp mov push xchg stos sub push imul sbb add cmpsl jae,pn cs gs lods les shlb daa or jge bound pop rep add xor xor xor fsubrl dec jp rcl mov add inc jl rol test xor repnz sarl rorb jo ds jnp int3 fcompl push xor sbb ja pop (bad) in mov (bad) incl test in sti jae sub inc cmpb xchg insl dec sahf rolb xor bound std xor rclb ja (bad) sbb aam pusha loop mov inc (bad) cmp mov jne movsb pushf mov add movsl daa adc ljmp repz mov icebp jns mov (bad) repnz pop mov pop xlat dec in pop jno jmp and inc cmp call jecxz add loope adc cld iret add pop xchg xchg pop scas cs add dec jge push (bad) xor lret pusha or (bad) dec jnp add inc in or pop jp ljmp cld test das outsl sub test xchg leave jnp add das pop push fs mov xchg xchg push bound loopne pop xchg jmp insb jl sbb push fisttpll faddl jg jge push out daa xchg pop fidivrl pop sbb adc and pop dec push sub or push call idivl ds push addr16 xchg push scas fldcw xchg and sysexit call ror das push ja pop sahf lcall push add in fs jg xor mov int3 push mov fcmovnb cli aam mov mov lods or push mov xor enter dec and les xchg (bad) stc daa cwtl mov (bad) pop int bound mov das jl cli (bad) test or ja dec in or sub dec sub mov or mov (bad) cs lock push dec xchg daa jge sub (bad) mov push inc into push movsl jle scas add mov mov add jmp inc fisttp and jle mov sub mov jecxz test aam adc inc jns iret daa sti jle addr16 xchg cmp adc or pusha cmp adc mov mov test fbld arpl daa idivb jl dec jne movb jmp push or jmp mov mov jmp rorl and lahf pop mov (bad) (bad) ds repnz sarb xor daa pop test mov jns push jbe cmp mov inc pop adc (bad) push push inc lds lods lahf lods mov add add cltd (bad) in cmp xchg (bad) jg shrl cmp add fbstp or loop adc aas out dec inc mov in jle mov jge (bad) leave mov and pop jae cmp dec push sbb lods fwait movsb jmp cmc das pop xlat xor cmpl stc or (bad) jnp xor jmp or lea fistpl lods sti in repz mov xchg outsl mov fwait xchg adc pop add mov mov call jl xor jae ljmp xor add repz ret pop jo nop adc cmpl mov add add mov pop add and push pop mov xor sahf jae mov xchg cmp js in or adc cmp cmp addl (bad) stos rorb insl dec push mov out push xor insb xchg test pop mov fsubl dec mov lahf xchg in sub sti or (bad) ljmp fcomps aas mov add jmp jle,pt sar inc pop mov insl in das xchg scas int3 loope es jle in mov inc jb sub sar lahf push inc and dec pop scas insl sahf test jecxz scas out mov xchg (bad) xor adc push int and jmp in mov push xchg cld cmc push push push orl pop bound fs cmp jl xchg mov lahf (bad) mov push hlt xor je incb (bad) negl push scas fldcw mov add push arpl dec push xchg mov and and jg out xchg mov pop dec and push fnstenv xchg and mov rorl sub sub adcl outsl pop call inc sub ja push xchg (bad) pop adc adc or xor or sub (bad) push xor pop jns add insl mov sti fiadd cli or loopne sub (bad) outsl xchg add shll iret dec lods hlt sti sub test movsb nop xorl add (bad) jle mov jmp aas std enter sub or xor and gs nop push cmpsl push popf rorb rclb aam stc push std insb ljmp pop fiadd dec pop push testb int3 (bad) jle jmp or ljmp dec repnz mov mov xchg pop lcall mov pop add sub pop (bad) push out fdivp and sub pop sub adc push sbb pop xor inc fimull xor sub mov mov mov xor ja mov cs mov cmp dec incl and test mov sarl mov stc nop in popa das andb adcb push push mov imul and fwait in mov test push ja loop hlt and mov cltd int3 xor push push pop jne jmp sub pop jg lahf and push mov divb subb inc in pop fs jns flds xchg add adc xor jnp cmc or ja xor push jmp sbb fnstsw popa adc ss cmp mov pop xor loopne jbe xchg or and pop test xorl (bad) push loope pop outsl inc decl inc aad lock jp lea nop push adc cmc jae xchg add stos (bad) daa das test mov movsl out stos fdivs or add in jnp pop rolb adc pop daa inc mov fildll cmp out pop pop in in aam jg scas fucom aad mov fnstcw lods and (bad) ja int das mov shll add rolb js cmc or or pop mov insl pop sub or clc add pop into imul pop jmp nop stos sahf mov sub loop out sbb push cltd cmc movsl repz pop push mov (bad) hlt mov dec sbb mov xlat repz add xchg xor sbb jns pop stos and mov lods adc fstps push adc push cld pop in insb fwait pop out push pop loopne adc jae jae add ret dec or xor sub roll push mov pop and popf sub add mov xchg mov leave mov popa jg test cmp sub insl and push leave js sbb pushf pop ss ss sti outsl mov scas lock clc and mov dec mov mov xchg jl and push imul cltd jg outsb (bad) out or outsb mov push cmp add jge lret lods dec push sbb xchg ja out cmp adc imul clc xlat xchg repz aad das pop dec push test dec xor cmpsl fidiv lcall adc add sub add add and adcl sbb mov shr push add test les fist add sti jnp or push in xor sbb dec fisttp cmc lcall pop push popf dec jp inc lds int3 mov xor mov arpl mov mov test mov je cmp mov call push and sub lret sub test ret out jmp xlat pause lods cs push (bad) fnstenv pop jg push xchg xor sub in mov into and mov jg xchg loop jle mov mov lea jae scas adc int push mov xor push or and loope lock cmp decl (bad) push push mov sub ja pusha or push (bad) in jmp mov cli insl arpl in lods xchg lock add mov (bad) jns push add fistp add leave xor mov (bad) adcb (bad) (bad) jne test mov jge (bad) dec and fnsave dec std mov rcrl pop add fwait (bad) jge pop ret add sahf pop and sbb je cld in jb mov std mov push cmp and es rorl adc pop xchg sbb fmull xor mov push mov pop ja pop or pop jmp mov and out popa hlt shl inc mov mov sti dec imul jge pop ret xor jnp out insl mov scas orl sbb pop xchg data16 add fbstp push sub xchg test hlt jo lret test push jo shlb mov cli sub push call enter std push mov push inc nop lock jae push popf rcrb or adc push push shr mov push mov leave pop orl sub aaa lea push add inc or movsb mov jne mov repz mov (bad) cmp or ja roll scas inc add fstpt lret xor fsubs or std pop stc cmpsl int3 xor mov cld cmp mov xor ret rcrb fcoms sub fsubrs add shr out sub adc inc adc lods adc (bad) jge in or pop jle cs imul popa das mov shrb pop pushf pop shrb sarl sub das (bad) out add sbb and imul dec pusha mov out repnz inc jle pop push ja and iret and mov es add add lret (bad) (bad) cld cli mov shl mov outsl sub xchg es aad cmp xlat mul jo mov mov xlat mov or sbb dec (bad) push loop pop sub imul xchg xchg sti fmuls add jp shr and cmp push mov sahf push adc jp or pop mov add sahf scas pop sbb out rsm dec pop add jp jae or push std jnp ljmp inc add mov adc xchg jecxz xchg test pop sub imul in repz in jb adc scas sub jne adc mov sub mov push in jae xchg sti add and dec ss sub push and lcall out or add imul push (bad) daa sbb pop movsl negl pop jnp cmpsb mov jg aas lahf and addb push xchg (bad) sub cmc nop or lret test sbb popa add fs add shld fcomi mov sbb dec add outsl aas in outsl jg adc jle dec sub out pop ficomp mov fxam mov mov lret je movsb pop jg daa push outsl or dec ljmp push adc adc or lds test ss nop sub test pop inc jecxz add and xchg pop mov push inc ja je in lods dec and scas insl mov mov pop in xchg (bad) popa sbb (bad) add fidivr xor pop bound rcr adc xchg dec xchg repz add sub das imul test fldpi jp mov imul jns outsl lock movsb add enter lds dec mov int outsb push pop and pop cmpsl (bad) es out mov ror add or dec pop push pop fiadd pop sti push in emms and insl fimul mov movsb xor pop and jge or rcr das add scas adc daa pop add out scas push fcmovnu pop dec mov jno cmpb jnp push repnz jg sbb daa lcall stc dec jg out shlb pop jae (bad) pushf mov sub ljmp and xlat movsl pop lcall addl cmp xor jp cmp loope je mov jg cli into das hlt jno pop dec xchg out or pop mov and pop dec gs push push xchg adcb mov xor sub mov daa xor cmc adc sbb jnp mov inc or mov insl mov jle fcomps iret (bad) dec out jns inc in subb pop sbb call cmp ja pop add jae push cli adc (bad) out in add xor sub or lret pop jg pop rorl xchg xchg out jp lahf mov xor cli jo lret adc push outsb mov cld or mov (bad) lret fisub negl aam sbb sub pop push jbe push popf cmp ret ljmp inc or out insl dec cmp cmc xchg mov xor add add shrl cmc cli mov push add daa mov adc es scas out dec lret mov movsb pop sub iret (bad) cli lret fldt stos dec inc test push je jo fild jmp push adc aam fdivrs stc ja adc or ja sub sbb cmpsl (bad) das pushf mov and into dec imul lcall decl adc or mov add sbb subl (bad) sub cld or mov dec (bad) icebp scas dec mov ss stc sub or (bad) popa push bound push mov or hlt scas fldcw cmp ljmp js aam pop push mov inc leave pop sbb mov add test and pop sti or out inc mov push push icebp xchg cmpsl js je je jnp sub inc sbb push shlb fdivrs inc cltd push in js dec fildll jmp rcrl bound out (bad) jle (bad) mov sbb inc cmp pop icebp (bad) lcall xchg (bad) lret in pop aam aaa mov push sbb mov cmp ja lods pop adc mov sub mov ljmp leave or rolb out lcall sbb pop aas mov xor jns jg popa iret daa inc jl aad pushf (bad) and push aas cmp cmc push xchg sbb ret into outsb xorl push add or xor jle mov xchg shrb xor popf cli push lahf icebp jo sub push push fimull and push or ds xchg or jl sbb fbld std push aam in inc add (bad) jb adc stos lea or push mov lret adc sbb and cmp fdivp jl add decl out fs ja dec sbbl xlat pop or hlt fptan dec loop xchg enter pop insl cmp stc xchg call cmp lretw mov or mov out add sub lea mov ss pop pop push dec mov mov outsb lods xchg sub addr16 and push adc mov mov pop cs scas xor icebp mov rolb aad ret or cmp popa stos sub push pushf gs es mov andb std aaa add enter sbb jno xor xchg aas push ficoml and jg pop xchg (bad) int pusha mov test (bad) repz mov mov in cli add das cmp jg or xchg xchg repnz xor push sti push rcrb pop test outsl and or jge fisttpl aad in ljmp cmpb or stos add add stc cmp out cli add jl push and ja gs xor or adc daa les in sub hlt (bad) xor shl add pop push dec ja lret dec inc jmp jge jl jo fdivrp xor mulb xor adc movsb (bad) jnp push (bad) mov cmp aas std aas sbb dec subl jp icebp push jp js or add xor jmp push loopne dec (bad) adc push sti cmpsb pop movsb stos add jge std jnp daa rolb faddl and sbbb movsl and inc int decb add outsl xor frstor dec shrl adc movl pop jp sbb das pop mov mov lods pop sbb sub ret xchg jne pop mov push test fisubl mov minps lock fimul pop sahf ja xor push inc pushf subl (bad) xchg out aas inc call mov cmp into js das fbstp jmp pop mull pop cltd dec ljmp shufps (bad) std jp in push iret scas jl mov inc lock add jg jo cmc add adc push dec mov out adc lret bound push or dec jge stos sub or or daa pop cld dec add cmp es jnp mov jge pop ds pop cmpb or mov sbb dec push mov or jmp out insl nop sub jbe fisubr call mov sub das clc jg mov or push mov out mov mov fdivs dec test or int pop rcrb mov mov add es push (bad) scas imul add mov shll in or sub fiadd imul jo (bad) mov push test sqrtps lahf xor outsl cmc push push pop pop hlt rorb popf not mov add xchg aad mov bound push jo ds mov je insl (bad) cwtl dec insl test xchg and sbb cs xchg jp clc mov adc mov mov fdiv in adc mov insb fildl mov scas lcall popf out je sub aad sub es mov jmp in (bad) scas lret in cmp pop fnstenv dec nop adc pop jle outsl adc sbb cmp inc mov ret adcl add mov jg loopne mov add adc rclb add sahf xor jge xchg and jg arpl cmp cli jno stos cmc andl pop or lcall je or xlat test xor and lds test repnz sbb mov divl inc pop adc or jg push pushf inc add push xchg ja sub cmp xchg jl lret ror xchg jl pop push fildl dec fxam jg pop pop push bnd loope pop push push jo adc and out aas test lock int cs and ss xchg jns jg or cwtl insb dec mov lock arpl fwait out xchg fnstsw rolb mov jge mov cmc xchg loopne xchg test icebp push xor (bad) jl jg rcll xchg fstpl jmp rcrb rolb dec daa mov (bad) or pop adc sbb imull ds lods leave or adc ja cmp das mov call scas and (bad) fbstp gs sbb add xlat ja dec adc dec pop call (bad) cli mov out push pop cmpl (bad) push (bad) mov and cmp (bad) ja add jmp xchg fs mov inc leave push jl dec cmp mov fimul push decl mov test pop das (bad) jbe repz imul leave mov hlt rdtsc xlat aad sti add sub lods xor ljmp adc mov jne mov ds test mov inc (bad) push and or in pop stos cmpsb (bad) inc or adc sub cmp cmpsl sti frstor cli adc mov sbb out nop or icebp rclb xchg cmpsb mov mov mov lahf test mov rcr and inc jl or add dec call out repz pushf rcll aas and clc sub sar or inc (bad) add jbe inc add jnp push bound mov xlat add xor or dec stos cmpl testl push mov push cltd and outsl add jle sub rorb and or int3 pop jns (bad) loope std xor fstpl in cwtl in sub dec mov pop xchg mov shrl imulb lock mov add mov cmp push mov es cmpsl mov rolb add out decl out rol xor mov (bad) pop push xchg in or pop pop inc mov jae xchg push pop je fcomip xlat mov push push scas gs add shlb outsl mov lret sub push xchg ret adc mov std pushf lock adc lock leave int addr16 sbb add fs dec aaa mov stos das sub cmp push popl movsb ljmp pop cwtl ss incb cmp aas mov xor loop push pop mov das pop fnsave fisttp push pop mov xlat repz jne loope mov cmpsl jnp fisubr mov sub mov or mov cwtl inc add ds fildll cld (bad) insb cmp loope jp arpl pop pop mov mov add dec in std pop inc dec mov add popa fcos mov mov xchg push cwtl std cmp adc (bad) aas sub fistpl xchg fsts movsl pop jg imul push sbb loop out push sbb jg pop mov in mov add out inc jne mov mov jle neg xor xchg or popa sub xor dec pop mov repz ret sub push sub inc add jmp inc dec sub pusha fadd fs xchg lret mov and repnz cmp ss jnp fs sar mov imul push push mov mov in rcl sti and stos std jl cmovo xchg or adc push xorl jg inc (bad) jmp xchg inc and inc mov ljmp icebp sub test sbb sbb mov jne nop dec add pop pop add pop jb lcall call pop and fsts jno pop data16 dec or clc or ss (bad) xor adc scas cmp push aas add xchg fistp test add movsb shrl mov pop adc adc stos shrb xlat dec pop mov mov sti nop push loop xchg emms pop push or insb aad jecxz lahf fdivr aas es jl add pushf ret pop inc xchg jg test ljmp idiv cmpsl pusha notl push cmp jmp inc js mov inc or adc jno inc sub jge call mov pop mov stc push mulb mov divb loop or mov mov jnp (bad) cltd jg (bad) sbb insb and xchg movsl jo dec xor ss jg addr16 mov cmp dec ret mov andb test cmpsl fildll scas add sbb and mov sub or sub dec out addr16 sti (bad) push jne out lahf xchg inc aaa sbb xorb lock iret inc or jns popa jmp jmp inc (bad) std mov (bad) out rorb aas (bad) jl pop loopne hlt pushf test (bad) stos and hlt cmp or jp andl call nop cmpsl mov mov adc in ret std lret aad sub mov dec mov pushf jb pop popf push mov (bad) lcall push xchg pusha sbb lahf pop fisubl mov stc ja dec mov jae sub (bad) (bad) idivl fnsave ret icebp add shrb mov bound pop dec int3 mov adc aas push mov fcmovnu adc push adc sbb mov inc mov mov and inc das jg xchg mov pop sub jle sub in push sbbl dec and out ds xchg fldt or push lods ror xor add imul xor xchg and adc repz sbb dec inc popa xor mov sahf (bad) movsl scas mov aad test push push jg mov mov add outsb idivb xor push mov lock dec push push xlat mov xchg bound push pop xacquire xor cmp add jg push std imul push adc dec jmp call add (bad) dec rcrb add shll sarb (bad) or movsl dec enter add in ret inc pop lock sub or fucomp aam sub icebp imul push pop sub leave push out lods (bad) std add ds xor jnp jmp aam inc add mov cmp aam daa jle fistpl inc pop push test movsl scas mov idivb push dec cld pextrw sub push icebp in das jle scas adc popf pop or jge in jmp add mov imulb rcrb or xor add push pop xchg fsubr jbe das pop push clc cld pop push repz xchg mov insl mov (bad) hlt pop add lahf cmp cmpsb ss scas adc repnz setl dec inc pushf cs or (bad) aam loopne roll push jecxz aam and jmp adc int cmpsb call iret adc jnp popf movsl cli mov imul push inc add popa mov inc rcrb and int inc mov cmc mov push sub mov mov inc clc lcall jmp adc shlb pusha or rorb adc (bad) jae decl test mov adc mov and mov test pop mov enter cs mov xor pop mov xchg in jmp xlat loop aas dec and sbb ja mov je pop dec pop lds cmpsl (bad) nop jmp or adc pusha xchg lock jl mov xlat and scas push icebp cli jo sub pop aas add not add sti bound adc mov jmp and add es out (bad) mov inc mov adc sti jo pushf cltd dec or jmp dec arpl dec add inc in cmpsb lock aam addb cmp mov int3 jle or aad mov ret cmp call (bad) jne inc pop test add push mov xor rclb enter cld jne push adc cmp stos dec bound push jp cmpsb movq xor loopne cltd das ljmp js fistpl jmp sbb outsl inc popl (bad) sahf stos mov mov mov mov popf cmp leave xlat mov or mov (bad) push rolb dec push fimul jp das jg imul xchg clc mov js jo xor and push jnp imul push xchg jno outsl xchg pusha or pop fnstsw scas add das mov data16 dec pusha mov scas fld sar dec pop mov dec push ljmp std or call mov ds in mov stos jae lds or (bad) xchg push push push jl pop pop pop cmp jne cmp dec ftst or jge jg les adc stc add shrb xchg sti mov sbb jnp add iret inc movsb lret mov dec inc sub nop cltd add mov nop cmp scas nop outsl pop ja or push push jmp mov cmpsb mov lret movsb jge subl loope loopne ret pop sub lea fnstsw xchg jl leave aad pop or xchg mov lahf cli jge (bad) xchg or jecxz test jle lcall das jg mov cmp pop adc mov in mov es inc xchg or pop cmpsl addr16 fistpll xor mov jne out in sarl lahf (bad) push sbb sub jb mov repnz int cltd dec cld icebp mov scas and imul add cmc or daa test std jae inc and mov cmp jp or push jp imul outsl push adc aad pushf or fistp and push jno popa cwtl mov inc scas arpl add loop lcall and pushf jl add pop lods loope jmp (bad) leave xor xchg stos and pop sub data16 lret add pop std mov jmp adc jp cmpsl sbb es loopne add add push jb cmpsb ret add pusha (bad) jge (bad) xor out ja ljmp mov inc jecxz push pop lock jbe xchg int cmp xchg andb fdiv dec dec loopne loop add out jmp out (bad) cld pop in jle shr std into or add pop jge jnp inc cwtl add mov scas jbe ljmp out sub roll cmp push or xchg in xchg scas aam inc sub outsl add aam pushf add jl cmc js out inc mov imul stos (bad) push pop mov fcoml (bad) stos push (bad) nop jno push pop mov add psadbw decb add push inc and jmp fsubl mov mov dec js and rcll adc xor sti bound jae orb iret adc dec cmp jno outsb mov roll push aaa adc js jmp and mov mov mov pop pop sub loopne repnz aas insl xchg inc push add (bad) fimul clc mov jns push hlt add (bad) daa mov jmp int3 std mov push cmpsb (bad) shlb add mov pop or dec xchg xor test sbb mov int cmpsl (bad) jl adc pop sub dec lds jmp and lahf xlat sahf ds xlat cmp dec cmc inc out cmpsl inc dec (bad) loop cmp into fmuls adc jb adc (bad) lea fistpll xor jmp cmpsl jecxz in dec mov cltd rorl push cld push sbbl xchg dec stos lahf and jmp ja aam xchg push pop push (bad) jo gs call mov orps or xor addb cli popf mov xchg (bad) mov sbb push mov dec shrb push pop (bad) jp jno add or insl rclb cmp and push jbe xchg push stos add mov sti jle jmp push push add mov in pop lret jmp sbb stc or aad dec push inc jb popf pop into xor or lods ret xor adc xchg inc aad lods pop add es sub push fist pop stc xlat inc mov sbb add lret int3 cs jge movsb adc out and fld pop pusha jg ret jge daa sub xor or adc adc pop pop mov jmp adc inc sub divl pop or pop movswl lret jae leave dec test xor out scas jne mov adc mov pop push push in cmp pop mov je call sub das loopne push xchg cmpsb lock push push dec add icebp inc aad notb out icebp jg cmc push fstps xchg jle or aas f2xm1 imul dec pop rol jg and fs sub pop roll adc sti mov arpl add subl loope (bad) repnz dec inc cmc test sbb xor jp dec push fisttpl scas clc and mov push cld mull out add test and jmp sub idivb or insl popa outsl dec push mov push mov testb into xor and popa inc push enter notl xchg popf sbb sub test cmp and mov testb mov and mov adc rcpps rcll push adc shr inc mov pop test dec incb ljmp pop or sbb sub pushl add ret push sbb add arpl arpl pushf sub cmp popa or jg mov daa cmp test or hlt insl jge dec or mov ret pop arpl push sahf inc rcrb out push pop push push adc adc sub or je add pop adc xor (bad) pop out push lds arpl adc dec mov adc and push jno push mov cli xor jnp test fcoml add inc xchg xchg sub sbb pushf dec orl add bnd cltd out aam add adc push pusha mov sub mov mov jmp mov push sbbl out (bad) mov sub cltd xor loopne pop add push add sbb push inc mov psrlq and xchg mov sbb je mov mov cmp push mov add push cwtl pop test pop cmp cli inc stc andl pop insb adc ja lods test mov adc push jecxz pop loope and in push or jge mov adc (bad) push movsb xor or lock jmp lods inc sub loopne sbb push adc xor cmp loope and or cmp pop mov out mov mov dec inc fs aaa lret mov sbbb push mov call lock mov fisttpl sbb sub addb jg mov lods loopne or cmp cld push js pop adc scas test xchg adc sbb jo mov jmp jb pusha adc out nop sub insl add and jmp aas xchg cmp pusha mov dec popa lret adc xor cwtl sub (bad) dec push add orl mov mov adc jb and pop dec mov cli add (bad) pusha cmp adc mov mov sbb add sbb vpsubq fdivs or fs sub test or aam leave lret xchg leave pop push mov and clc (bad) cld sbb dec xor int3 xchg (bad) or xor sbb stos jne (bad) (bad) adc mov sub xor or repnz mov mov mov insl in add rcll push mov adc iret notb into xor ds lods imul notl insb pop and sub lock sub pushf add jae loopne adc sti stos add mov in mov xor push lea pop rorl inc mov and xor je xor sbbl sub das xor adcb into mov call jle repnz bound mov and push out popa inc push fs sbb test sub dec mov into jns mov shrb imul bound (bad) mull inc ds add sub and mov rcr mov cmp js lods and adc jg sbb sbb and jmp mov mov and mov mov dec (bad) mov jne sarb popf clc push mov fdivr inc test mov inc call xor adc or dec push pop scas xchg pop push (bad) cwtl pop (bad) fsts subb bound int inc xchg cmp adc adc in js ror (bad) mov (bad) aam test jecxz mov dec test dec xchg add jecxz push adc xor xor mov xor dec cmp leave and test sub popa movsl test ja arpl mov adc mov jl adc pop push push in dec dec add cs sub inc insl imul push dec pop popa es xor add dec push xchg sub add jns mov mov shlb dec lcall sbb sbb mov or cs mov sbb and data16 or out cwtl out push push xchg mov lods pop bound mov test adc mov cltd push ds jnp in leave sti and or addr16 dec cwtl push mov fs xchg mov or les inc test mov add pop jb mov mov sub fcmovbe inc icebp cwtl fmull pop pop adc aaa inc sarb nop andb (bad) imul cmpsb inc inc xchg cmc pop addl clc (bad) sbb xchg in sub adc push subb fildl mov lds mov aad cli push rdmsr xor dec mov lock sahf sub mov and push jp popa ja xchg adc adc insb jle stos nop sarl cwtl cmp in cmp orb in or adc nop adc xor adc mov xor sub gs xor (bad) popa and outsl sbbb pushf dec nop hlt adc inc js sbb insl mov mov cltd sub es nop in or adc rorb push loope in or sbb xor in xor scas mov inc push lods pusha pop inc lret (bad) dec ret lock mov loopne mov inc loopne jle and mov mov fcomps leave push pavgb mov or mov (bad) and xorl pop add sbb gs mov into push mov or sahf adc xchg and adc inc stos xchg add and adc push out sbb dec pop add dec sub mov enter jbe sub add pop outsb fnstsw mov js mov ja mull fsubp or sub adc xchg pop ja rclb hlt in addr16 or insb or xor adc mov stos in mov push and and dec mov sub shlb jo and xchg ss mov subb clc bound push inc andb ret dec xor cmp movsb xchg add push dec inc test and jecxz mov dec sub or in pushf or nop clc (bad) sbb popa mov cmp mov and mov push lods mov xor and dec enter cld ss test sbb dec xchg xchg or push and mov xor sbb mov pusha sub lds hlt and pop adc sub pusha and ret mov adc push clc (bad) inc adc in inc mov test mov (bad) clc adc or test inc dec lds push xchg lock cmpsb cmp mov mov fldenv nop (bad) stos popa fs rorb sahf dec hlt fnsave pop mov dec xor mov fstpt test or (bad) int or add mov push push dec and mov mov cmp enter lea pop test adc sahf or dec mov add or and lock adcb cmp lock adc in ficom push cld push test rorb cwtl and sarb dec adc pop fdivl jns sbb xor push push (bad) sahf rolb ss xor addr16 or ret movsb imulb scas into mov icebp cmc icebp cli lock pushf jg add xor aad mov std mov bound pop push mov ss add pop repnz inc sub ds hlt add mov inc shlb cmp cwtl andb lods mov inc add mov cmp dec cmp jne mov jns cmp fisttpl adc leave push out test push cmp and imul addr16 push push add (bad) stc imul sbb mov mov sahf orb pop mov jl fdiv mov push and orl loop mov int jo cs add (bad) in rcrl sub je (bad) pop (bad) movsl push and pop loopne enter mov push call subb cmpsl enter mov lds or pop jns push cmp mov icebp je mov sar xor rolb mov insb inc adc cmp sub aad add inc cli cmpsb ret pop add fcompl mov clc stos or add lret lcall add pop fnsave cwtl js adc mov sahf fwait mov and xchg inc lods inc test or decb mov add adc mov adc add mov dec (bad) push push jmp xor sub sbb push andl sbb or sbbl mov rclb add jmp xchg pop mov sarb adc push (bad) ljmp xchg ja xor ficom or sbb popa dec jo outsl leave and and sbbl push loope icebp sbb mov mov sbb add add and cmpsb imul std sbb jne push sarb loop int aaa ds mov mov orb loop push cltd add sbb sbb adc inc daa dec loopne add push pusha dec insb lahf sub xchg xorb mov stc add lods push jne cwtl cmpb add jg ss push repz push sbb ud1 push inc nop or rorl add adc push aam push add dec jge xor push mov leave rcr mov mov aad lret hlt imul js pop ficoml add inc and add stos pop mov nop xchg stc gs pop lods and inc adcl mov jp loopne dec sbb data16 ret xor in pushf sbb dec inc push dec xor sub rorl and repnz and nop popa or jl sub pop or mov adc fstpl or (bad) test mov pop and jns mov nop (bad) add fwait xor push adc lret xchg sub clc nop cmp test pop dec sub mov or adc xchg enter rolb or pusha insl adcl mov test and mov push cld (bad) jae mov push (bad) add xchg outsb sub inc push test jo dec lret cli fidivl inc cmpsl add call add js test dec cmp f2xm1 adc jo add xor mov cmp push add sub xchg scas leave mov cmp outsl sub cmpsw mov adc pop jl adc cld out pop or sub dec bound mov add dec mov sbb stc add jne mov or add mov or out jb (bad) ss mov daa mov sub sbb mov pushf pop cmp or imul adc cmp push es loopne cld or and movsb jno and cmpsb jns xor or js ror push or decl xor pushf lcall push sub popa nop adc daa in push push mov dec insb adc (bad) jno mov and lahf into cmp jmp mov cmp repnz fwait xor jo (bad) sub inc in (bad) mov stos data16 lea enter dec sbb jno or and xchg out sbb xchg inc inc xorl hlt or or mov aas cmp xor push mov lcall shrb lods lret cwtl lahf cmp scas push push fdiv mov or mov sub inc inc (bad) mov addb test pusha sbb xor (bad) or sarb push cmp dec xor pusha add aas cld orb xchg cmc add pop lea dec aaa dec das test inc push lock adc push mov mov and mov pop sub jo fistpll sbb test and hlt cmp cmp iret dec and hlt cwtl xor sbb fisttpll ret scas pop adc jp loopne xchg add xchg shlb pusha sub call ret sbb mov dec (bad) pop sub movsb push pop push cmp ret enter pop jns es fld or jns stc sahf and js aaa xchg in xchg iret inc nop cmp pusha and addr16 jnp xlat inc enter mov dec adc push imul pop js adc cmpsb sub enter sbb mov add clc and add aaa add insl rorb (bad) jo sbb dec bound scas or push nop inc mov and cmp xlat and fnop (bad) mov out and sahf mov sbb xor pusha (bad) sub cmpsb jp pusha xchg push add les add sti outsl fisttpl das add les adc mov inc mov pop loope dec rorb loopne lds add pop clc ret push lret add std sbb or adc jo mov aam sub ret cmpsb cld aaa sbb movsb lahf and outsb xor cltd sbb xor aam fs nop popa and add mov or fsubrs dec adc xor aam scas sub cmp cwtl mov jb loopne sbb (bad) xor add test je adc fadds jl push rclb dec dec imul adc rclb or movb arpl inc or mov jno xorb popa insb mov add or mov out push xor in push mov repz mov cmp xor inc dec shll pusha xor and inc sbb mov pop pop mov sbb xchg mov sub xor dec lea mov sbb and xor xor test dec leave pusha stos adc or push and cmp mov xlat in push lods test les mov stos mov sbb mov cmp dec gs mov mov ds aad jmp mov add or lret add mov cmp mov xor jo push or (bad) test pop sub fwait out add cmc mov aas (bad) mov pop sub fs add leave inc xchg or xor cmp mov fs jo and jp add cmp adc jns clc push pop pop add add dec aaa shrb clc push inc add imul call (bad) mov popa push leave in add adc or pop cmpsl inc pusha cli mov pop cs pop sub cmp xor cwtl enter daa pusha jle xchg xor cmp adc lock ret pop lret mov pop cmp pop inc rcrl sub hlt fildl xchg mull add arpl test leave imul (bad) xor imul es aam cmp (bad) jae stc mov (bad) sub stos or les clc das inc rcrl int3 (bad) cli push lock (bad) inc std jno push mov sbb pop xchg sbb mov mov jns loope xor adc mov (bad) jne dec ret pushf xchg or test nop sub push xor add inc mov (bad) cmp (bad) pop (bad) rcrb add repz ret lock cmp mov adc sub cmpl mov mov es popf add popf push inc xor add mov sti imul pop sahf jo loop dec or push (bad) cltd mov mov push (bad) xor mov mov (bad) flds leave sbb dec fidivr jg cld pushf or mov das xchg xchg add and sbb fldl arpl dec or mov stc xchg cmpsb pop sub insb pop lahf lds xor or mov inc lock cmp sub cmp pusha nop push mov add (bad) mov sub inc out aam sahf sub xchg mov pop cld add nop outsb xchg mov xchg lahf orl in loope xchg loopne mov test xor addr16 xchg push cmp (bad) hlt cli sub ret fs icebp push movsb mov (bad) push add jge addb push adc add pop call cmp push jnp mov in add int cwtl xor push add jae call adc hlt xchg fldl sahf sub xchg fs xchg idiv add push leave and mov test lods inc pop js adc fnstcw pop stos or xchg and cmc outsl or daa cli int3 inc xor jbe and in and das adcl sbb cmp xchg int xchg add dec add ret xchg movsl xor out andb xchg stc push pushf mov push arpl adc insl push and rcrb inc xor mov xor enter add add push stos loopne fcomps cmp aaa push sbb sub dec inc xor inc mov hlt dec pop jg dec push sbb bound sbb add cwtl mov inc dec and sbb fdivrs leave xor cmp es jge or ret add mov inc movsb xchg in push inc and rcl or jae xchg add aaa xchg mov enter push lret data16 pop int cmp loopne stos test inc out sarb pop pop xchg dec popa inc call aaa add cmp push stc dec and icebp js add cmp jg cmp dec xorl pop mov push jnp mov imul inc lods adc movsb add loopne sarb outsl add push fisttpll or xchg dec and sbb fwait cmpsl xor dec (bad) mov cmpsb je pushf inc jno mov cmp and xchg faddl popf add subl xor xor or orl leave push fadds xchg scas cs pop shrl mov adc add cmp mov or and scas repz divl ss jns stc push mov sbb cmc inc dec cwtl jle add ficomp popf dec test xchg cld pop fwait and push sub je push push add icebp aaa ja push jo dec loopne add flds dec aaa je in jp sub inc pop xor outsl and fisubr pop cmp pop repz xchg lods addl mov cmpsl mov push iret sbb add lret daa in scas xor sbb fs adc lahf rclb add sbb xchg add test jnp test push and add nopl les (bad) cld test add sub in (bad) xor ljmp lret icebp xor pop or sbbl inc dec or scas es lret rclb xlat add and push sub add gs cmp je,pn mov test int3 or loop push xor cld sub xchg xchg sub rclb dec add je or sub push hlt mov mov push das jne mov fld leave das jno add call mov cmp xchg ss loop in lock xchg push in fidivr push mov loopne fmuls and and mov xchg pusha mov xor jecxz sub pusha add aas or leave out sti cmc and mov push popa rcrl cmpsl push call jbe (bad) inc add mov test adc push add sbb sti popa jl pop or cmp adc inc sbb daa mov or sub call outsl xor xchg sbb cmp loope xlat loopne cmp imul arpl sbb xchg (bad) jbe fcoms push clc add cmp ret mov je sbb dec aaa das icebp call sahf xor add out popf sub push add fsubrl pop jo add and lds mov cld jg push or mov or adc dec (bad) in call fistp inc adc inc mov jne sub push dec jo dec mov cld ss and mov inc ja lret mov and add push add sub sub jnp mov daa and xchg int andb or adc shlb ret mov mov stc sti loop pusha mov jbe mov pop test cmc outsb push mov sub or (bad) lds push movsl leave inc ds repnz pusha add or and pause flds jge mov mov xchg push mov ret out pop in dec sub jl in dec dec dec shlb movsb jp les js pushl lcall jns cmp add aaa shrb push inc or add les fcomps sub adc popa cmp inc lods xor inc inc mov dec add mov rolb dec xor pop add rcl xchg stos adc push mov neg enter xor mov mov in add pushf imul sub lret addr16 mov lahf push jbe (bad) jns add or adc mov mov and adc xorps cmpsl cmp mov push xor mov xchg add hlt test aam lods pop mov add jmp xchg paddb ret mov aas push divb inc jae in and jb xchg pop push push shrb xor and sub pusha push or das fs jne push pop repz xor jl fdivr pusha (bad) sbb shrl repnz cmp add lock repz push adc orb sbb and push out cmp and inc mov out pop jmp sar cld push outsl dec adc popa pop fmul ljmp mov sbb popw mov insb xor stos incl inc in out sahf pusha mov outsl pop aaa es in xchg cmpsb ds cmpb push popa cmp cmp push (bad) les cmpsb jl adc xchg je clc dec lcall push xor and dec push xor sbb les out mov (bad) lret cli adcl and (bad) test sbb sbb addr16 notb add les in push add loope adc dec jmp inc (bad) xor mov xchg in outsb push cmp jns sub jmp add dec ret or repz adc fadds pushf fwait ds aad inc or push insb pop stc inc insb inc push xchg arpl cmp sub mov inc pop add or or xchg cli mov pop adc ret movsb cmp insb unpcklps jmp pop cs jl add lods imul and adc sbbl jae pusha cwtl inc xor cmp mov icebp or xor addr16 fwait test adc faddl stos stc roll inc cld pop scas (bad) in mov xchg inc inc cwtl sbb movsb mov add stc sbb push nop arpl lods imul in push pop jns mov cmp pusha adc mov xchg xor inc pop inc loopne add mov hlt or mov outsb xchg jle lahf lret mov jnp cmp enter pop inc push adc adc and or dec push mov mov adc jmp test fxch movsb sti cmpsb rorb out jbe pushf test or shl shrl xor pop dec add sub lock fsubrl adc shlb push imul lret mov add leave mov fsubs in push push push into xor jg mov popf mov jae aas cmpsl (bad) adc adc rcll lods addr16 and imul nop cmpb add push inc lods mull pop xor fadds jo pop adc xchg enter mov add ret and and out mov push insl (bad) mov cmpsl mov test jp bound sub call inc in scas adc inc (bad) mov pop gs in movl mov popf add popl push cmp push enter and gs add out call and and cltd pop xor jmp das sub mov lcall nop dec (bad) or loope xchg fsts sub lods lods adc rorb mov adc mov cmp (bad) iret rcll xchg addb aam les inc dec test mov push nop fldt shrb les in adc outsb and xor test mov roll xchg jg hlt xor dec and (bad) cmp lods repnz inc jno add mov test sbb or shl sub xchg cwtl mov xor popf sbb int3 mov pop sub sub movsb xchg add cmovg push dec xchg movsl xor enter fs inc shrb es add cld sbb js cmp push je (bad) int3 mov js pop pusha pop int3 push (bad) insb mov inc sahf lods int3 dec push nop ja aaa inc jecxz nop xor in test push sahf push mov xchg adc scas inc int3 xchg mov enter mov jp adc add cmc inc adc adc mov lret inc jle loopne inc mov das dec mov sti sahf mov adc data16 add pop in out sbb movsb cmp lret dec add pusha test out lcall arpl enter mov inc inc test push rorl subl aam nop push cli lds lcall mov iret adc cmp in dec nop rorb imul xchg pop and pop rol dec push mov std xchg mov ja fs mov xor iret mov hlt mov xchg inc das mov dec je add jle mov frstor push add xchg sbb inc or adc mov add and adcl test xchg xchg pushf stos xchg stos outsl cli xor (bad) pusha push sub lods minps iret fiadd pop xor cmpsb nop and mov xor jbe push cld ds xor out (bad) (bad) int3 cmpsl mov push xchg or js fsub fs fs sbb scas sbb test add repz xor call add mov (bad) in subb or lods sti call (bad) cmp pop mov inc mov in mov mov cmp push insl nop and sbb loope cli xor and sbb push aaa adc xchg scas in pop jl or (bad) mov iret outsl dec shrb cmp and (bad) mov xlat bound stc xor or in or movsb cmp cmp push xor insl jl dec popf movsb sub jnp cmp push lret cmp je sub and ss das push leave pop pop inc xor and stos add sub int3 std es psubsb sbb pusha xor mov or pusha or scas popa stos movl push dec sub es pop add mov das sbb nop add gs ja or add xor in js dec mov test adc sahf pusha push add roll mov push push in pop or pop cmpsb mov ja pushf bound xchg mov test stos adc add xor and or enter mul cs dec adc mov (bad) hlt bound mov es sarb push sub das (bad) add sub or or and pop xchg (bad) adc cmp loopne add (bad) push xchg and pop cmp cmp mov mov fs int3 adc mov jmp sbb hlt sbb test mov (bad) fstpt mov in adc cltd or jp xchg xchg add (bad) and (bad) test movb sbb pushf (bad) add cmp test sti xor aaa pop mov and repnz pop mov lret add add add lods dec popa imul sbb and mov std push int3 xor mov cmp test push mov scas xor mov sbb out push xor cmp or jmp aam add push mov je bound pop imul enter and xor arpl movsb xchg es movsb sub subb pop dec repnz mov les inc mov push cwtl gs std add cmp aam mov push inc mov sbb hlt add popa test rolb gs out clc (bad) inc call sub xchg inc mov loopne repnz pushf adcl xchg push jae add jmp cmp gs mov xchg or jge dec or mov push (bad) hlt push cli xchg xchg sbb cmpsb dec jmp jns and std loop adc scas inc or xor jns sbb pop mov add sbb mov add push icebp in (bad) and leave cmpl pop jcxz rclb test je outsb inc push adcb mov cmp sub jo or nop sbb jbe inc mov inc cmp xchg lock push mov push daa mov int push mov xchg pop imul xchg inc pusha pop adc mov and adc or daa cwtl inc xchg add jl hlt add mov test mov mov mov pop mov (bad) fcmovb cwtl enter xlat pop cmp lods imul aad popf loopne cltd pop pop mov or rcr cli lea clc push sub dec shlb fdivl les call daa sub loopne lods xchg mov movsl sbb and adc pop mov mov hlt add ror (bad) xor pop mov enter dec xchg xchg nop popa jnp pusha ss aas and mov xor shlb inc (bad) xor adc mov test insb xchg sbb mov xchg push movsb mov add fisubl js sub test adc cmp pop or add enter clc add pop xchg dec push cwtl stc js or (bad) in (bad) xor jne and (bad) xor pop mov cmove pop cmp mov push aad ss or push lds cmp aas xchg loope sbb test xor sbb jmp (bad) gs ficomp out enter add lcall inc push out jge pop add xchg sbb (bad) jno popa sub subl sti sub push mov push sbb adc add fisubl je push xchg js mov adc insb ja dec inc js pop pop push mov clc push clc les pop lahf inc movsb clc popa fs sub xchg push lea sbb pop mov les or cmp aaa jle add pop loop sub dec mov mov and int cmp cltd jg and jmp push aas dec pop (bad) clc xchg pop psrld pop (bad) or mov enter test mov add faddl xchg dec or (bad) mov adc adc sbb xchg mov mov lret clc xchg jle push xor ret push dec inc stos add sub xorl xor aam scas pusha enter jmp or aas faddl dec popf and or adc push adcb dec mov mov xor test fbld sub pop adc jo or pop add bound lcall sahf je js adc out lods mov mov cmpsb add imul js imul sbbl mov in jmp xchg add jne pop aam adc add mov mov fsubs add int cli rcrl add mov add icebp out dec dec cmpsl inc add lret js or sub or adc mov cmpsl stc clc sub mov add mov xchg lahf ljmp mov pop mov and cltd mov cmp mov dec mov dec sub test mov pop cmp mov sub add jecxz cmp push int3 sbb mov pop xchg int3 push mov lcall sbb dec les mov push mov loopne add xor (bad) xchg inc cmp imul push xchg std aas test mov lods inc or and push repnz pop push xchg adc lods aaa sub mov jl hlt push leave cld fdivrs mov out mov push fiadd add imul in daa (bad) dec ss push mov or fs (bad) (bad) sti mov pop pushf mov in add mov and sub ds dec test push inc arpl cmp mov test lods test jbe clc in es push add lret inc and cmp in xor xchg xchg mov cli (bad) push mov stos cmp jo into mov adc dec mov dec and popa xor xchg inc fmuls push cld out push adc cmp adc add imul (bad) push inc loope adc jnp daa adc test mov sub int je adc das xor and popa jne je ret in int3 out xor push mov and les add inc out pop pop and rclb pop idivb dec inc adc out mov adc and jmp xor cmp out sbb push sti out in sbb add fs cs scas stc inc fdiv pusha lods sub pushf es lcall sbb dec push mov iret jns mov dec jno mov pop popa and xchg or rcl push ret fcompl mov sbb aaa adc in aam add scas out nop xlat add sub add xchg aad cmpsl int3 dec cld dec nop rorl mov adc pushf mov and add rorb cwtl add jl test or andl call lcall add mov movb sub or popa js jl out jl xchg push push jl mov adc pop mov xchg sub lret popa push push bound xlat sbb mov mov pop loop (bad) cmp cmpb mov push adc pop xchg mov pop test add or enter cmp mov inc test or mov mov lret lret xor je cwtl call or inc mov loopne xchg call je pcmpgtw mov adc mov push fnop jnp int3 push arpl mov cmp sbb xchg add pop mov jl dec loop dec outsb sbb pusha add mov movsb xlat cmp pop xor fistp insl subb add (bad) sub lcall and gs nop nop mov mov jmp out daa cmp idivl mov sbb adc xchg clc (bad) mov cmp mov popf lock add stc aaa cli in xchg dec daa cwtl adc out dec adcb std jge icebp nop mov rcrb and adc or push sub add ds stos mov pop mov and jl mov pusha pop mov repnz mov roll insb aam (bad) adc and cmp adc mov jle out cltd enter sbb mov xchg mov jo pop mov aas adcb and pushf jg mov cli add pop pushf es mov call ret cld mov daa jbe test push push inc lock in adc sbb push push rcrl clc clc sbbb popa mov pop push andb push and mov arpl cmp mov enter sbb inc pop mov push cmpsb pusha push push out pop outsb pusha js jge in orl cwtl mov mov jo sub xchg fdivl and das (bad) pop mov inc lahf mov sub push pop popa test jmp cmp pop gs scas bswap test xor sbb xchg mov add mov add stos inc sbb pop (bad) mov jmp pop cmp mov aam mov and jmp insb fucomip (bad) push iret fidivl lret sbb or pop rorb push jnp mov adc int3 test and pop enter daa push xor and or cwtl sub fadds or lret fs in ljmp or mov aam and xor pop push inc lods test xchg mov in pushf sub adc imul mov dec sbb mov imul mov adc mov shrl sub or dec in inc mov dec out cmpsb pop mov pop cmp rcll std mov call imul aaa mov ret adc dec and cmp sub xchg pop mov mov adc or mov pop or jbe inc jp data16 push loopne clc sbb ss pop adc jle loopne loop inc mov jle cmp out xchg daa ds ret test lcall sbb pushf aam mov sti jno scas mov ja push mov xor adc pushf fadd imul or pushf dec push dec jo push dec stos leave int3 data16 rcll jl outsl or (bad) lock cmp shrb xor adc testb xchg mov dec imul (bad) mov insb ret fs mov lret pop adc mov stos int push jecxz or add mov mov in jp dec inc push scas mov pop outsb faddl jecxz,pt pushf inc pop aam lock loop mov inc jb mov pop xor stos imul fildl sub pop mov insb rolb ja xchg xor xor sbb mov (bad) push adc sub fstps pop loop dec xor adc popf push inc loopne lahf push push mov loopne rdtsc shll je sbb mov push call mov adc xor add mov xchg loope push mov leave pushf dec and in cmp jmp lods adc pushf jp and push (bad) fsubrs push sbb pop aad mov jl mov test faddl cld dec dec add dec adc cmp dec adc movsb xor add lahf out jg or xor jnp push lret pmulhuw mov cmpb dec adc xor stos popf arpl lock or mov aas jg and push punpcklbw xchg clc sub das (bad) arpl clc pop xchg xor xchg xor pop rorb push jge mov jb jmp sbb sar adc nop fcom in pop add dec and addr16 and cli dec iret push cmp add pop repnz mov dec push add ret test jo or add outsb xchg les add or jg mov stos es rclb jo xor add bound adc test clc pushf movsl mov enter add cwtl adc cmp ja sbb int3 sbb push and pop xchg mov das pop add push (bad) stc call inc xchg xor das enter sub and push add loop cmc add sub and int3 mov lods (bad) xchg push mov adcb sbb sti and leave mov mov mov cmp (bad) fs push mov sti popa imul push mov (bad) fcoml cld sub mov std ret fistl mov mov pop loopne ud2 mov aam jo pop push add fildl pop cwtl inc pop js jmp adc mov js (bad) mov andl loopne movsb pop mov clc dec lock cwtl clc add mov test pushf rclb cmpsl mov lock add mov mov mov or bound ror add sbb fadds pop (bad) cmp sbb sub movsl call cmp pop push or adc mov (bad) mov fiaddl loopne adc add jbe xchg xchg out xor loopne mov mov icebp push pusha pop jbe inc push sbbl dec xchg jp mov lds mov (bad) sbb mov or out sarb mov icebp es mov daa icebp in jmp fsubr push adc inc xor mov mov cwtl mov xor sub dec out adc xorb mov sbb (bad) and push xchg out and aaa inc lahf lock push jo sti fst adc adc lock cmpsl mov lock and loopne adc lock add sub or das mov adc scas jo mov popa ror cmp adc lods dec mov lret cld sub je lsl push rcrl or jge lock add pop add lret sbb insl cwtl aam shrb xchg adc xor adc jno pop jmp pop and outsb mov add inc xchg jno nop pop pop lods and cmpsb mov or push mov add in add fwait in inc (bad) out lock adc xchg mov pop (bad) js jp ja je ljmp jle cld add and sbbb imul in add out jmp mov in push (bad) popf pushf (bad) xor mov xchg xchg jae sbb jmp mov repz pop dec and adc sbb inc aam fadds inc scas xchg mov test add push les stc sub jae popa add into shl lock lods sahf or sub sub adc mov cmpsb xor lods mov cmp adc inc subb or inc int3 inc sbb dec push aad cmc pop repz mov pop insb add and mov push popf add add inc xchg cmp adc enter or pusha adc outsb test push addb add or mov xchg les or mov orl lods aam sbb xchg push (bad) or push adc lods dec or add sbb in and push jb push mov jo push add sbb adc pop add adc sti cmpsl fsubr mov in add sbb mov pop insb sbbl int3 jg cmp and and push call pop pop jo push adc or (bad) pop jne ja es nop test int push decl add stos popf cmc dec fisttpll mov bound and test mov and or mov sbb nop outsl cmpsb xchg jmp mov or ljmp and jne orl icebp ljmp cmp lret mov mov mov cli in sub mov ficoml mull iret hlt sbb lcall lss pop adc xor call jne mov xchg xchg test jbe adc mov cli or data16 mov and js push xchg or test pushf push mov out fisubr adc dec dec jg mov mov decb jns or adc dec sub adc xchg xchg rcrb call and cld jne inc in (bad) incl xchg test pop cwtl sub xchg xchg cmp add lods add mov std repnz ror out sbb popa daa xchg inc stos add es into inc or adc and lcall fdivp popa add xchg mov in std inc xor xchg ret fimull adc adc js (bad) jge popa add dec add rorl dec nop add mov adc inc cmp mov adc add lret jp (bad) cmc adc push rclb sub inc pop fwait insb dec push xor fildll lods xchg cmp mov pusha jo dec add cmp adc iret pop mov lds nop rorb inc sub adc adc or loop lahf cmpb fsubrs sbb xchg mov or movsl add jg,pt sbb dec ret pushf pop mov repnz les inc je add fwait rol testl xor sub inc add jp adc mov xchg (bad) inc or xor aam mov mov mov repz sbb ret aam sbbl les cli mov and jle cld mov adc imul and mov and pmaddwd push js inc pop adc xor pusha inc and cs dec call lock incl sahf ljmp or call js movsb cmp mov insb push pop loope pushf push fisttpll sub pusha or in pusha dec les js inc (bad) pop pop dec adc lret stos sarb cmpsb dec adc ret push sub mov je add push push cld mov push aam ds pop jo or mov mov adc mov cmpsb movsb mov dec mov sbb push cli in ljmp pushf pop scas faddl mov sbb les xchg stos fadds inc xchg rcrb pop dec std lahf adc cwtl mov loopne push shl clc sub mov and jbe sub and pop add mov std adc pushf and sub test push (bad) sub inc lock (bad) jmp mov rolb into adc mov popa dec jbe push mov lods js pushf mov icebp pop adc push add dec sub cmpsl mov and fwait loopne or mov fiadd jb pushf push or les or add stos cwtl xchg jl mov sub jmp pop mov xchg icebp inc mov xor je test rcll inc add xchg add lcall cwtl xor ret faddl mov adc test lock jp les int3 xor sti dec pop sub js xchg add lock jl inc stos popf je and and pop push xchg pushf sub rolb pop adc push fdivrl adc test mov jmp add into divb add leave adc stos cmp adc sbb adc dec sbbl orb sbbl enter dec je mov popf adc or adc and leave push adc mov mov (bad) js andl push fmuls call and xchg adc pushf sbb outsb sbb orl inc popl insb push (bad) loopne and jl je add imul push sub xor insl xchg nop lea and mov mov sub xchg sahf and je cmp adc lcall dec xchg nop jo aaa cmp cld dec int3 add push hlt or xor push imul jb push jne sub inc xchg xchg adc pushf rolb or enter sub mov push and push sbb and enter cmp lret movsb pop jp push je push call cmp push cwtl jp xor cli xor pop pop lea and pop pop xchg es sbb sbbl inc dec loop loopne or call pusha inc xor scas cmpsl sub pop into or push mov lcall pop shll sbb aaa xor push fsubrs movsb mov pusha sbb push inc dec or es xor mov nop dec jg cmp (bad) rolb pop shll sbb enter sbb mov stos inc pop mov dec dec or cmp xor mov inc mov nop adc push lock cltd push nop sub pop shll jecxz cmp lods sbb dec mov cmp add adc mov or mov inc add xchg jp or cli test adc hlt lods pushf sub arpl pop mov inc mov mov mov mov insb sub and stc mov (bad) and movsl in call or cli push frstor adc xchg aas push les mov dec or mov dec push enter add mov aaa loopne cmpsl pop jecxz adc cmpl dec mov pop orb cmpsb mov add movsb ss mov and push and sub test inc sbb dec call mov and pop mov xor nop insb pop pop lock inc lock cmp cmpsb jl ljmp inc sbb bound mov in dec inc lods stos adc push test cli cmpsl or pop inc movsl inc and dec and mov and movsl dec insb inc xor and scas sbb push dec push push adc push mov in push pop aas mov (bad) pop arpl pcmpeqd xor addr16 push mov xchg sub mov xchg mov inc inc popa mov and add mov inc add sahf push adc into in std fs ds push stos sar push xor push push rcll pop push push andb inc inc and loop scas nop nop jle add inc pushf repz sbb xchg (bad) xchg bound adcl mov test lcall cmp add jmp loopw xchg fild cltd sarb dec iret mov xchg xor pushf push pusha call push mov pusha data16 mov stc std push (bad) xor gs pushf jae add mov imul push std inc add adc jno mov test in (bad) fwait add and inc jl add push mov mov cltd popa dec mov imul mov insb jl in xor mov lahf icebp mov fld fsubs and in in das push adc clc inc pushf aam add cmp daa adcl push cld mov js mov or pop push and and mov jecxz rclb aam mov mov pop js stos sub lea add xor cwtl cmp lret fiaddl jb adc mov mov or cmp lahf mov lds xchg repnz ljmp and push movsl in cmc inc loop xchg mov jno add (bad) (bad) mov mov sbb and in xchg xor pop cmc pushf iret sarl mov or in pop mov icebp mov add push xchg inc repnz or fildl xor mov int orl and xor ds add lea push add outsb inc xchg pushf fsubs sbb pop cmp leave loopne sbb add dec addps int3 nop add popa mov stos je repz call scas cmp pop xor sbbl adc hlt shr dec jl push clc add stos mov push add push repz popf pushf dec mov es cmpb pop cmp adc or mov dec pusha bound gs jo push xchg mov mov inc orl or sti lods movsl jno xchg dec add stc push inc mov pop jle in mov mov push jl mov dec mov rclb mov pop je jp call inc or dec mov push cmp fsubr sbb pop and arpl adc push cld insb push loopne in add rorb out xchg (bad) jmp pushf or nop js popf data16 adc adc daa push xchg mov xchg or cld inc xchg add lods inc (bad) cld jo movsl pop xor inc adc nop xor add push push xor inc sbb or xchg fiadd (bad) mov pop xor adc or cmp inc js mov stc xor in mov dec add dec xor cmp cli mov imull jae jle enter add mov inc mov lea cwtl call sbbl mov or addl push outsl adc dec mov mov dec call mov xorb adc inc out sti add jg call mov je dec std jp or dec jbe or pop cmp sbb push imul mov fsubrl pushf das inc cmp and add and add pop pop cmpsb rcll mov clc dec adc sbb fmull inc dec mov mov loope xchg pop and es add call adc or and int3 sbb repz (bad) xor (bad) cmp nop stc cmpsb jo adc insb stos test hlt xchg push dec sbb std dec pop aam (bad) and add adc jno dec jg add fild cmp add add popf repnz dec (bad) mov ds xorl lods or jg xor adc sbb out pop mov sub push (bad) popf mov or idiv sub stos add push popa (bad) xor mov daa movsb movsl pop cmp insb xor xchg mov movsb imul insb fisttp jge add hlt out and add popa mov (bad) jl jge mov cmp inc testl add loopne adc dec inc out test mov xor xchg dec push inc addb andl add adc pop pop fistl sbb jl add loope adc xlat or dec sbb pop adc sbb sbb mov js jae add fdivl mov mov add imul xchg int3 js cmpsl lds push add fmull std ds lock or pushf xor add bound xor das int3 jo dec push loopne inc in lods pop cwtl dec jg test ds daa jb in mov addb mov push in or inc incl or jl out cld pushf cmpsl loopne in sarb popf inc sbb jmp (bad) enter arpl pushf rorl or call ret xchg stos mov sub add lock or (bad) and xor mov insb popf cltd xor mov dec dec clc add dec aas out repnz (bad) shlb push mov jne and pop test lret adc and mov test arpl pusha dec mov add (bad) lea fmul add mov inc add clc out adc pop add push hlt rol mov movsl sbb push outsb mov and daa movsb pushf sbb hlt mov add lock mov add scas dec in jl or xor adc or stc mov popa outsb js mov sbb push ss dec negl enter sub and jecxz js add insb insb cmp ss inc pop (bad) hlt loop pop outsb shr mov add inc sub cmp mov (bad) call cwtl dec lcall lds adc orb test inc in popf je add pop mov mov jle adc push test lahf add pushf push xor adc and add mov cmc xor aad inc sub (bad) and pusha and mov into loopne in push ret aad leave adc mov mov lret jns pop add add dec (bad) jne adc stos mov mov cs adc xchg bound call pop js lahf in je (bad) (bad) in jo sbb (bad) (bad) dec adc sub mov dec add cmp (bad) mov stc imul and push in mov inc rorb mov jp and mov xchg xor pop push sub xor jecxz sub fcmovnu shrl dec bound (bad) mov scas add xor dec out adc add xor test dec sti cvtps2pd mov adc mov xor mov ljmp fdivrl add xchg cli seto adc sub int3 adc or cmpsb rorb rcrl in xor and mov js adc rclb nop mov adc sahf or dec inc int sbb push inc mov dec icebp ret movsb addr16 pushf popa xchg mov (bad) faddl sbb (bad) push pushf and aas push mov sbb inc adc out pop jecxz (bad) std add inc mov cmovg mov clc sub pop jne outsb test xchg or push cld pushf mov push in les cmp fwait push movb adc inc stos jp sub and ret and clc call adc push dec jo dec cld out in push xlat loop es cmp mov push jecxz mov dec je cs and or push and imul xchg mov dec inc mov jle and call jb xorb mov or xchg lea jns add ret je pop cmp adc mov cmpb negb inc pop test ja jmp mov push push sahf pushf mov rorb push loop cmp call cmp rclb jl add (bad) xor add adc and dec xchg mov add ret add jno dec jnp jp add clc notl insb mov pusha addl loopne push push and (bad) push jl add mov cwtl or and jae mov pop xchg popa or add loopne call jp inc jbe xor sahf leave stc add jno fucom stc sub cmpsl mov (bad) fild cmpl jno pop or sbb inc movsb cmp in cmp inc fmuls add inc dec dec js pop shrb loop push popf push mov lcall insl repz add imul sbb lods loopne mov mov add pop std jmp (bad) lret cmpsl mov xor icebp rcr sub clc and add popf push scas sbb test pop xor cltd cmp add call and test cmp insb js cmpsl mov insb and popa add icebp jo movsb cmp andb es jmp aaa pop enter pop test xor add mov sub xchg adc jp jmp repz xchg add stos inc subb mov xor jl push adc fisubl adc add out adc inc push jp testl in cmp in test rorb ret mov push out sub repz and scas push jno adc adc test leave inc sbb mov push pusha xchg sub mov inc arpl add cmpl push and (bad) mov jo push dec or bnd js scas adc xchg jb xchg sbb xor push je lods adc adc fwait cmp fldcw sbbl inc jge insl inc and add or jno test jg mov rorb andb loopne jecxz bound pop jno mov stos (bad) mov (bad) xor and xor and sub out les add (bad) in sbb rolb insb add fbstp movsb mov popa mov xor xchg (bad) icebp sbb test xchg fsubrs xor mov sub sub push (bad) mov divb add xor sub add adc scas push inc xchg xor inc adc or add push adc jns adc sti dec mov pop shl test clc pop enter add call inc loop mov xor or lods cmp aaa inc popa cs xlat scas dec push adc dec push sbb dec fcomp and test cmpl pop and add push lods and cmp pop test or cmpsb imul or lret inc or adc test outsb adc mov imul inc pop push xor sub xor and push add push fistl call sub iret push add insl lock sbb xor inc shl push mov out (bad) xor mov les sbb mov fsts mov insl dec xor lods xlat icebp les adcb into popf pop ffreep dec insb and mov lahf jae leave (bad) fmuls je lcall xor push (bad) arpl adc loope (bad) in inc add xor add je mov fsubr or sub xchg fbstp adc icebp mov or loopne cld std add stc ja cmp jmp daa sbb fwait shrl mov add cld ret out adc mov adcl test or movsb or mov adc rcll test and int push cwtl jl jl adc lea cwtl andb sbb cmp add je js (bad) cmp sub push mov mov jo or mov pusha rcr or add inc dec sub jne push out mov in or add stos fmuls idivl loopne cmpl bsr imul addl and xchg sbbl lds dec cmp push scas stos pusha push icebp mov and in ljmp jnp adc sbb lods ret and push out pusha push dec dec adc movd and test movsb sub jnp dec mov leave mov test je sahf loopne cmp or jns and pop rcr sti pop add xor cwtl js subl mov imul jne int jbe jl jle xor jns call fcomps (bad) data16 ret test fs cmpb add sbb int dec sbb or xchg mov mov or sbb cwtl add pop sbb and or add and lret (bad) arpl and inc xor inc ss arpl pop xor sub adc mov dec push and sbb mov xor mov dec sbb adc push or jecxz movsb sarl fcomps xchg mov xchg mov dec xchg cmpsb pop loop add or sahf test (bad) cmc add popf push add push xchg dec mov jns cltd pop xchg das jo add add or sub push lods sbb (bad) ds rolb popf rorb pop outsl push js jl pop xchg dec mov xchg cmpl xor add add mov jg sarl fcmove cmp mov stc mov stos xchg add xor inc daa mov xchg pushf add loop pusha xor add jecxz or ud2 push mov add (bad) mov inc cmp pop out orb aas sbb and ret ss ds mov sbb roll les or je mov sub daa cmp movb loope mov inc sti cld divl bound lods movl lock add sarb adc jno mov jle fisubrl jecxz mov and jae cmpsb fldl2e (bad) cmpsl mov sub xchg add push mov stc dec add stos add sbb aas mov push ja and addr16 test add lcall mov jg xor jl xchg add pushf jb and arpl (bad) and cmpw xor jno sbbl cmp mov aaa mov cwtl pusha jl xor test cwtl outsb sbb jle cmp call xor arpl cmp xor xor xchg ds xorb lahf jno and xchg rcll sbb mov and xchg jnp es mov mov scas pop jle sub outsb rclb iret je stos jl sbb xor (bad) loop cmp adc mov push out inc dec push (bad) xor and xor add and jmp push add push (bad) xor ja testb cmpsb sbb loope subb push mov lea adc mov mov mov xchg push and rcrl cmp shr adcb and inc leave gs adc dec js cmp lods add ret ds adc push inc es xor push fdivl push push loop sbb adc imul je or sti push sub loop pop mov sbb clc sub and pop push fadds pushf rclb adc add mov or std movsl push jo inc pop sbbb mov push ret mov xor adc fidivl cmp push or sub pushf pusha jno xor (bad) jo loopne test sub (bad) sar stos inc sbb call xchg sbb movsb aas ja sarl jl bound sbb dec (bad) pop mov les ss sub adc test test aas adc lss fs xor movsl sbb and or inc jno push cld and sbb and adc sbb les inc (bad) mov (bad) mov push and inc xor outsb push add mov aam dec sub mov nop fmuls movsb cltd int3 mulb and mov push jns adc lods xor fistl dec push pop sbb inc add add faddl jae les or jo mov sahf push jge inc jno in loop and je push clc mov fisttp add aaa adc pop (bad) adc fwait rclb and bound test enter mul in push push xchg icebp ja (bad) jl and es xor push fldt sbb mov cwtl fwait mov or ret and fstps movsb add jo and push and shrl inc and xchg dec cmp add popf xor mov js jmp inc sbbb rcrl (bad) mov adc xor sub jmp xor inc dec sbb cs aam andb nop test xor (bad) push xacquire test ljmp lods or loop add mov sub mov imull xchg movsb popl cmp test scas dec and rorb lock out js xchg in jge or sarb sti movsl add das js jno pop gs push dec clc pushf and pusha inc sub and and (bad) sub in popa out add icebp sbb and jb daa leave (bad) dec cmovne mov mov inc mov arpl call add inc xor ss out sub icebp imulb fnop adc les add sbb lcall mov loopne add aaa and add sub movl mov and push push pop js mov adc inc shl push (bad) push call insb arpl inc es jo mov ds (bad) push cmpsb fcompl js push hlt add lds push xchg jl dec out (bad) cltd insl push cmp jno rorb sub pop pushf add mov pop add mov sub adc jl stc adc rorb push and cs (bad) sub (bad) or dec lcall inc dec add loop insb and stos jne mov and addb add xor imul xor cmp xchg jno leave mov mov hlt ret test push sub shlb and in add out or xor and pop and in test sub add and push out inc or dec jmp push orl je sbb subb xor popa mov push add sub jns sbb daa push jecxz sub lods sbb add or inc nop ret dec mov sbbl aas pusha imul add or adc orl in movsb inc js push and (bad) push sub add mov out lds add lret add andl andb mov cs sub out cmpsl pop pushf addr16 les jo daa out mov dec sti mov sbb cmp pop inc inc jns loope rclb test mov test sti rolb insb in or clc ja sbb cwtl add lds jge add clc sub mov mov mov mov mov adc in push push mov cmp out lahf ret divb sti in sar xor test fcmove gs mov lea push mov push mov add sub sub sub sbb fs push out mov clc andl add call xor ficom stc enter or or add add xor bound lods adc jmp add clc cmpsb popa xor jae notl and xlat xchg addl add (bad) out add jno cmpb add orl (bad) and cmp dec add (bad) rcll add fsubr lret adc sub and push sbbl dec rolb pop and aaa sub push or sub push aam dec and jo fimull sbbl push mov push jns push push mov and (bad) xor mov inc cmpl mov addl mov xor faddl dec xor cwtl mov subl or sbb inc add fildl inc (bad) fldenv inc hlt je pusha mov adc or ds mov movsb lods and (bad) loopne cmp push add pusha cwtl mov out add (bad) adc pop sub push mov xchg and js pop bound lock test lods rclb orb inc mov sub decb add pop bound push and out lods in xor mov pop push int3 push mov pop jb sub xchg xchg pushf lock mov rcrb cmp loopne or in cmp inc mov push out and mov add js sbb and sub add rcrb shl pusha add adc dec add movsl enter add shlb mov jle mov (bad) pop and or adc (bad) mov (bad) int3 or inc lods mulb scas addl mov or xchg cwtl leave add xchg pop adc iret shr (bad) dec mov pop jae (bad) mov mov add in push sarl inc sub push sub mov adc imul das lret sarb inc outsb pop dec and imul inc (bad) jno push or xorps jo cbtw sbb gs cmp lret ret add (bad) mov add cmp cmp test or pop push sbb popf (bad) lea cwtl or mov outsl cmpb ror dec icebp or xchg jo mov (bad) jns jl inc mov inc rclb setg out shll cmp (bad) loop inc insb mov push push sub lcall dec push xchg or scas mov sti pop hlt or pop (bad) stos dec or test nop fs mov out pop outsb orb negb pop mov add xchg xchg mov adc dec add xor pop pop dec fcomps movsb cmp push xor and mov xchg add cmp bound pop adc xchg lock xlat dec add add sbb js xchg arpl mov out cltd add pushf inc jo sbb adc cmp sub ficom mov mov int3 add mov (bad) pusha mov es add outsl xor adcl lahf test in pop dec fadd adc cli push enter fisttp pop inc cmp jmp sub dec mov fimul jbe add test mov lds imul sub or jge cwtl mov sti mov mov scas add dec dec lock sub adc adc data16 dec insb mov cmpl out mov mov icebp mov inc addl popa loopne jp pusha fild xchg add out (bad) aaa or pop sub mov mov mov pusha cmp jno enter sub add jae imul in or pop movsb inc push out mov in adc xor loopne xorl lds jns pop push adc push add mov adc ficomp addb out ret in add cli push or jmp jbe add mov jg fsubs add gs adcl lea lock lock pusha xor pop sub je cmp push nop push shlb cmc test lock (bad) scas pop sub and pop mov adc jp add cs out pusha or mov addl gs xor dec pop adc stc pop inc js mov lret mov and (bad) sbb push scas jge add data16 iret lcall pusha addb mov jns and pop rolb int out es xor mov sub enter lock push popa xchg adc lods adc clc add shll xor jge sbb xchg push bound test hlt out fldl mov xor push movsb or rcrb sti or and sub pop add lock xor dec xchg adc fcmovbe jl scas pop pop mov or cwtl loop sub sbbl mov and cwtd xchg loopne idivl push push std dec outsl inc xor jns fwait insb mov mov sar jecxz addl inc or lock aaa dec xchg sbb cwtl mov mov push fistl hlt add adc xor add push (bad) cwtl pop inc pusha push (bad) imulb push popa pop mov sbb clc outsb in mov push and lods xor and std or mov test or pusha xor mov lods adc idiv mov pusha xor xorb out icebp sbb adc aam push mov lret inc ds out stos xorl push dec push movsl inc adc callw and push ficom sets lock js add mov push add out movsb out data16 in push mov adc icebp (bad) es or in sub push jno or add push out ret xchg mov adc aas adc and pusha mov je lock or adc enter cld inc mov cmp dec add and jae movsl lds xchg and mov ret push (bad) rcrb fs lcall jl xor xor shl loopne mov daa in mov add icebp pop mov insl mov js or pop push ret test popf dec lea je mov into in mov sbb js pop test mov pop (bad) sbb push rorb int cld scas sbb movsl cmp jmp xor (bad) repnz inc imull adc cmp push lea cmpsb loope and xor mov mov rcrl pusha jmp fucom std shr mov popf push sbb rol imul inc int and movsb xchg (bad) mov out add in add cmp cwtl sbb cmpsb pusha setns call js addl inc add std repnz cmp add jg inc or sbb jbe addr16 and sbb lret xor and mov or lock push in in pop inc mov loopne outsl mov sub xor mov lret inc mov mov popa ljmp jmp add cli and push adc in cmp xlat dec test lds xchg popa adc repz cmp jb sub lods mov pop push mov jae cmc iret xchg out dec rcrl push push mov add (bad) pop push pop fistpl sub xchg xor scas jmp ret shrb je jg das in pop jbe dec scas insb adc outsb test adc in push add les insb push cmpsl call mov addl sbb add out adc outsl pop movsb loopne ljmp pushf xor (bad) xor mov ljmp inc mov fld leave pop sbb dec xor fcomps add add ret push shll xchg sub cli out call in daa nop xchg ja insb clc inc add xchg mov adcb sti add subb cmpsb nop push push fsub fsub inc mov and fs lock lock enter (bad) hlt mov in cmp inc icebp leave and movsb hlt add jno sub cmpsl cs ret inc mov sub and rcrb subl cwtl pop jns add leave add (bad) xchg test cmpsb mov test out xchg clc mov and sbb ds dec mov inc test push cmc xor sti or outsb mov jmp jg sub es adc inc cmp mov adc adc adc cmp fdivrl pop sbb or rcll pop inc cltd mov sbb or imul nop add push int mov and nop pop dec repz in push adc jg add outsl dec inc dec iret mov lret in pop dec icebp adc fldt lahf sbb add or test push enter mov cmpsb and add imul jge fs push adc push daa les cld or aad test mov pop mov pop add mov in mov add push push cmp sbb mov mov or jecxz (bad) inc stos leave and aas fildl cmpsl ljmp sub push sbb outsb repnz add loopne scas push and or andb data16 icebp pop mov pop or shlb cld fmuls sub popa fadd dec or mov xchg cwtl imul aaa xchg xor mov call rcrb loopne popf mov (bad) ja pop add loopne push in jno fwait xor addl daa inc cwtl mov addr16 rorl js add cld or incl hlt xorb add out sbb ja pushf push dec insl cltd test leave mov test (bad) testl add mov mov pop push xcrypt-ecb cmpsl or fsubrl jmp xor enter pop xchg xchg lahf and add xchg mov cmp popf add ss xrelease adc fdivrl (bad) push (bad) jbe add jb lret jecxz (bad) rolb xchg xor andl andb addr16 add pop add outsb ficompl add and inc xchg pop or cmp jno (bad) jns sub nop add xchg xor jns mov dec rcl lods lock adc loopne nop sbb stc and inc mov je xor sbbl scas and rorl sub movsl imul mov add xor xchg test icebp add mov pop in dec lea push mov xchg add lahf sub inc mov repz mov or add std pop push ret or mov and add sub push dec inc popa rcrb and stos xor shlb clc imul adc rsqrtps push jne or sub xor and or cmp push cwtl lods add fmull push gs shlb or xchg pop pop sti (bad) dec (bad) rolb inc push pusha jmp jno (bad) daa mov cmp mov adc inc pop rorl bound cmp cmpsb jmp or jne cmovns leave and gs and add insb test clc pop or mov xchg push jns in add sbb lcall fbld adc jbe loopne sbb (bad) jb lret (bad) fstps movsb sub sub or js fstps fadds (bad) cmp jg inc in int3 out test mov (bad) cmp inc (bad) mov add add outsl cmpsb cmp xchg push (bad) cmp inc xlat dec test inc pop add fbstp (bad) xor fisubrl jbe fisubr jp loope mov sbb cmp out dec inc popf repnz mov loop push daa aam xchg add sti push jle (bad) loopne jbe je add push fisub (bad) int lods and lds or cmc leave xchg pusha adc popf pop adc rcrl push lds mov cmp pop mov sbb xchg test js mov xor out push (bad) lock loopne enter outsl pop sbb jo addb in adc movsb mov je insb cwtl and or scas outsl push inc ljmp or je mov cwtl into repnz (bad) xchg pop inc sub jae xor cs sbb lds loop pop lds mov int daa dec stos xchg adc rolb mov rcl int3 loope (bad) sub adc inc sbb adc inc pop adc rcr popa stc ja popa lea cmpsb inc sub icebp dec lods dec dec sub iret fdivs push adc addr16 int3 add pop sbb inc add pop or or les lret rol xor hlt arpl push mov dec int3 mov enter rol les imul fadd aaa rcr and call sahf or or test popf sub orb lcall scas ret jne hlt cmp mov cmp cld inc xor dec cmpsb sub clc xchg nop notl cmpsl or pusha xchg iret xchg sti push or (bad) or (bad) xor fnstenv adc push stc popa mov sub in inc cld push pusha xor hlt fs adc inc (bad) push xchg sbb inc inc xchg test mov mov pop out cld xor cltd into test dec test nop fmul rcl lret adc fs lahf inc inc insl mov xchg inc xchg mov or sbb inc loop call mov inc movsb push (bad) fcomps ret out and (bad) enter mov mov pop dec sub test arpl rolb lock inc add int insb mov ficom (bad) and pusha popa test push cmp out jge jo mov dec ret pop stos clc arpl and sub iret outsl inc pop ficompl add mov or push add js sbb dec out negb sbb ret out stc pop into sbb inc xchg xor nop xchg add xchg ss sti aas mov xchg and ljmp inc and (bad) mov xor push mov (bad) pusha mov adc nop cmpl stos punpckhbw xor outsl inc je popa sbb mov cltd nop mov xchg adc test popa push bound (bad) cmc adc dec call inc fsubrl (bad) inc pop dec sub clc stos mov push push cmc add push iret mov mov lret cmp push ret enter imull xor pop add ljmp je hlt add push push aam xor xchg ret (bad) sub pop or loope nop subl lods add shlb lea and push stc sub add addr16 (bad) call add daa lret sahf adc repnz add test fldl and nop mov add sub dec jmp ret add pop rcr scas mov cmp nop add push add subl ds push sub ret ljmp je ss pop bound sub lock mov inc cwtl enter cmp mov enter stc jb add movsb cmpsb rclb mov outsb and mov imul (bad) or dec or sub out jg sub pushf jl,pn inc dec rcl xor cltd mov aam sub fldl movsb xor push in or je addr16 fs or push xor or add nop add pop cmpsl push rolb rcll inc das add outsl xor (bad) cmp or push push hlt adc sbb pusha mov icebp jb mov sbb lods cmpsb cmpsl jmp (bad) aad jmp inc and nop mov ljmp cmc jns mov stc gs pop lock jmp jbe push scas subb inc into mov xor pushf pop xchg int xor in dec mov add push add jle push mov mov in cmp add out sbb and adc xchg add rorb sub in mov pop and test adc and mov lret sub lock add stc push (bad) sub cwtl and lret je xor dec cmpsl stos stc add outsl mov test cmpsb push pushf imul pop movsl dec cmp subb into push sub sub mov gs ljmp adc hlt or and bound les push mov in int3 pop test addr16 icebp hlt xorl adc xor jmp push (bad) ljmp mov cltd je leave aam rolb fildll rcrb cwtl add sti cltd fiaddl jmp insl xlat mov notl xor inc in mov add mov mov cmpsl add and mov sbb hlt jnp add imul pop xchg movsl adc loop sub cmp loopne add imul add call imul (bad) push sbb (bad) xchg mov or mov sbbb loopne pop mov mov addr16 nop add imul les hlt xchg outsl push mov mov jecxz mov inc repnz xor sbb mov mov faddl popa sbb dec xchg dec shrl (bad) sahf mov movsb or popa adc push (bad) mov pusha loop or scas popf xor outsb and xchg loopne jb cmp lock cmp nop inc enter fbld xchg lock xor and pop xchg enter xor sbb mov inc sbb mov sti or mov pop or imul pop cmpb jns gs sbb push jmp inc sub mov ds in add add sub inc or pop push xor dec fsub sub mov cltd sbb push jo add fldenv movsl cmpsb cld icebp lahf push imul push lea dec clc daa sub loope js inc nop rdmsr shrb nop add jg inc xchg test add pop lea sarb data16 pop dec mov fimul mov and xor daa movsl leave loopne lods or or jbe dec nop mov js pop iret hlt add addr16 pop lock ljmp dec sahf dec ja rorb jo adc mov adc imull clc mov adc stos (bad) lock cmp imul mov and xor ror (bad) sub or mov lcall xor cld sub orb jno mov jbe out je int3 mov adc lret dec mov inc mov xchg xchg mov in and (bad) lock push in adc ret dec andl push and adc mov fmuls inc dec jns xchg dec les add rcrl inc sbb xchg xorb mov dec loopne ffree scas mov add mov add jbe shlb and mov mov cmp shrb sub pushf adcb or repz lods js xor push pop aam adc in mov sbb subb sub in lock ljmp adcl push addr16 pop insl push das add inc push mov sarb and sbb test aam add pop (bad) cli xor (bad) lock mov inc aad loop dec xchg pop push mov cwtl add inc and fiaddl fs xchg xor test rorl push or push movsb jge sbb mov icebp cld add testl push and fadd loope cmp fisubl nop je lods addb test sub dec or or push or lods or inc outsb iret jp push inc mov outsl add inc mov or mov or sbb mov ret rclb cmp (bad) xor movsb ja rorb pop dec (bad) je loopne xchg mov cs or fisub addr16 int3 cmpsb into adc cmp fcomps adc je lock mov push sub and cmp sahf and add sub jo or xor mov fiaddl adc cli (bad) test mov add mov outsb pop adcl push fldenv sahf sbb imul dec xchg (bad) jp sbb ret sbb push js insb gs add xor rcr in data16 movsb incl mov jo (bad) outsb adc and mov insb mov dec xchg pop add test daa repz adc fldenv cmp int test jo lret lods inc dec nop dec pusha mov xorl push xchg lret inc jmp jg cld xchg faddl or sbb pop rcrl pop shll ret inc inc call lcall or rclb cmpsb loope add cmc pushf fnstenv jl xor xor mov cmp fsubr or loopne pop mov add jmp jmp js add insb mov jge sbb mov insl mov shll iret ret and mov dec int3 jl int3 add outsl mov xchg ret sti inc xor cmpsb or shr push (bad) push sub fwait inc adc dec lcall sarl or rcr mov clc std test mov insl mov push mov sub lock push mov dec (bad) cld add popl hlt fmul sub lret and out dec repz js dec cmc mov xor dec das ret pusha pop in add sbbl loop aam fildll jl mov or les pop pop xchg dec (bad) jns add (bad) fidivr movsl gs cmpsl (bad) fsubs cmp mov and mov dec adc sub mov les je loopne push push cmp or pusha mov shrb addb shll test ljmp dec or mov rcll inc sub mov out mov pushf adc stos sbb inc xor push mov (bad) mov dec stos jle mov inc dec scas mov gs mov subb xchg sahf rcrl lea pop popa xor dec (bad) mov rolb (bad) ret jo out and test cmp mov pop dec xchg es repz ljmp outsl pop mov shlb rcrl nop add imul mov sub icebp lods inc cmp push es push test xor cwtl add inc pop clc jmp cld push sbb sub loopne int inc push adc stos lock sahf add int cmp mov cmpsl cld mov int xchg bnd mov js stc insb mov cmpsb inc icebp pusha or sub inc hlt sub dec sub mov xlat pop outsb gs or enter xbegin push jo nop jmp cmpsb push sti mov add mov bound addr16 inc int3 rcl fs test loop pop add cld xor cmp cmp fldcw stos and sub pop mov insb scas sti test mov cmpsb sbb cwtl imul in ror int3 addr16 roll pop inc cmp mov xorb jae adc fcmovnu xchg icebp add pop cld in or dec (bad) mov push pop mov std or out jo mov outsb cmp mov dec sub push add jo lea or ficom fs ds ret (bad) call or sub adc popf and cmp int3 iret js add (bad) cmp repz dec neg je pop and add mov gs mov inc das enter adc push sbb sub jl in add fstpl test mov out adc lret bound dec js and pop mov rcr hlt xor jbe mov add cmpsb inc add (bad) mov popf push push aad inc pop xor lcall pop or push sbb orb or addr16 clc (bad) loope fcomp sahf int3 inc iret adc loope adc sbb test movsl daa rcll cmpsl mov pop subb aad pop and or sub pop adc xor rorb incl out and (bad) and dec and mov bound or in cmp xchg sub (bad) dec cmp or mov dec or es or jmp mov xor call and and push jne pusha mov ror loop bound mov movsb je mov test data16 push (bad) xchg inc daa (bad) int3 (bad) dec das pop ret lock mov or xchg repz lahf adc pop enter xchg movsb fdivr hlt sbb repnz mov lods clc pop ret je (bad) mov test mov rcrb cs or add aaa or add lods mull xchg repnz adc (bad) (bad) pop addr16 mov aam (bad) sub dec sub pushf adc rol dec cmp in bound mov cs cmp fs xchg adc (bad) dec stos pop add dec mov ds dec stc jecxz push fld1 add mov push adc mov ret outsl jns cli or movl (bad) push lock mov inc outsl sbb (bad) mov or adc pop orl inc or inc sbb or (bad) add mov int add addl jmp and push pop add fistl ljmp and or dec adc sarb cmpsb lret pushf dec or sbb jb and add sbb jecxz sub cmpsl stos mov lret out cwtl jg inc cmp cmc push movsb cmc (bad) repz jo lcall add adc outsl xchg push pusha pop cmp or push cmp xor lret ja add lret mov gs stc or add cwtl mov pop (bad) mov syscall bound subb xchg sub sub adc inc sbb clc add mov (bad) gs mov adc jb or xchg mov aas test fcoml inc push xchg cmpsb hlt je add jbe mov mov outsl push and or repnz stos cmp mov fldenv cmp inc jl pushl clc and jae xor inc inc fmull repz and pusha aad inc lock mov push icebp test popa cmpsb sarl int or aad lret ret dec and and inc testb and decl in bound lods in scas fs adc or xor pop push fsubrl xchg js dec mov sbb testb inc ds push push cwtl loopne mov xchg and mov dec or or inc mov dec mov push push add fdiv mov adc jl lods movsb xor loopne lods fildll test icebp push jmp pop (bad) sub nop les add push mov fiadd add nop test outsl pop or rclb fild adc movsl ds lcall aam sub dec sahf cld push dec mov sbb sbbb jecxz sub pop push adc inc mov inc sbb pop enter or cmp (bad) in cmc or xor add ds cltd mov adc fadds push movsb ds inc adc les or cmpsb orl inc cwtl xchg mov sbb push sbb or sti push testb aam and cmp (bad) int stc jo test sbb dec scas clc mov roll lods mov iret jl out ret jmp mov fisttpll insl sub mov mov jg sub (bad) xor lock pusha sbb sbb imul pop xor inc sbb sar or stos insb xor adcl decb scas pop sub mov cmpsl jae push and pop stos je pop into inc xchg stos pop pop cmc test pusha mov pop and mov push mov scas add or pushf fldl2t mov test pop (bad) int (bad) inc jmp cmp sti imul adc inc add (bad) jb xor mov data16 mov add in fisttp xchg cmp outsb pop inc or mov xor sti scas pusha pop cld push push xor add xchg push pop xor loopne inc and insb push sub push call push add and mov jge repz add sub cmp enter test push mov inc sahf in popf insb inc pop es jmp int3 maxps jmp jno sbb push dec adc sbb mov jae cmp dec mov xchg and cmpsl jne sub mov cmp mov (bad) sub mov and lods xor jne or insb pop sub sub enter mov jl jmp push add insl sub jmp pop xchg clc push sub repz add stos ja fistpll cmp pop sbb sub pop je adc call push ret (bad) jbe jl pop pop loopne pusha adc sub inc add mov les dec sub in dec lods or sbb mov fsubl jmp jecxz or (bad) les sbb stos or sbb lds xchg add test adc sub jns pop mov sub add or insl pop ret xor addps pop sbb mov repz jns cmp add xlat mov or cmpb pop mov outsb pop cmpsl sbb nop enter adc stos pop push fisttpll inc add jle sti iret jg dec repz jl or subl subb mov test jne or test sub pushf add xor rcrb (bad) add es xchg sub (bad) je xchg xor add push lea or adc sbb add jbe mov ud2 pop (bad) fadd jne mov jno add add sub enter dec lock (bad) jbe and out ret pushf sbb jne sub int mov (bad) rorb pop mov int3 jb or clc loopne insl xor nop add in fistl push sub pop sub mov sbb dec and mov das adc in xchg test sbb (bad) sbb sahf push mov sbb es cld mov les jbe inc or in mov mov xor mov (bad) adc fdivs add push fldenv test sub je xor mov sbb add pop cltd lock mov sbb imul es mov hlt outsl hlt js pusha sbb add in loopne sub jl data16 xchg rolb inc ljmp adc xor cmp scas cltd sub and add cld cmpsl jno repz jb repnz lcall sbb jg and and ret clc add add js mov xor jmp and dec je pop cmpsb add out or insl gs adcb mov push ja mov jp pop lret cmp cmp and mov sbb lock cmp cmp jg jl (bad) dec (bad) add shr sti add mov cmpsb sub fcoms (bad) fsubl add sub push mov dec lret lahf adc daa popa lods push mov inc ds aam std add mov cltd pop inc cld add cmpsb cmp cld les or inc inc inc (bad) test add fwait lock mov clc testb (bad) popf into sbb sbb int jecxz add mov hlt sarl adc and inc xorl cmpsl pusha shl leave loopne repnz pop and (bad) dec or nop add jbe outsl xor add jecxz jl push les cmp mov sti ds ret insl push lret jo mov ds loopne stos cmpsb in mov push adc sub xor cmp push cmc icebp lods xchg je jecxz enter leave push lret adc xchg add xor adc pusha aad push dec movsb sarb rolb andb xorb aam xor mov pop push pop mov mov in dec fidivl xlat sbbb push mov push and mov fmul hlt or or int cmpsb pop mov dec (bad) cmp mov stos dec ja add sahf dec pusha add fs mov add inc sbb decb add pop loop cmpsb push loopne dec cwtl sbb mov testb and lahf mov or sbb test cmp dec jp push int3 pop rorb adc mov jp shrb mov and sub push inc ja ss jmp and into push popf sbb jnp add lret push xlat mov (bad) mov dec mov in or jl lahf loopne mov les add mov push sbb cmc mov and fdivr mov and out add dec jecxz xchg cmpsl sbb inc je xchg insb cmp (bad) inc add and (bad) and push out or add out test sbb lock sarb push cmpsb jnp movsl inc add mov add cmp lods cli xchg test lahf mov movsb int3 (bad) dec lock test sarl ds nop aas add or mov jp punpcklwd sarl cmp andl adc stc bound and sub or xor ds pop xchg enter mov mov lret fdivrl jl adc test sti sub mov jle notl pop ret inc cmpsb mov rcll lock jecxz stos inc mov jg das add outsl mov jo or sub pop or jle mov test (bad) cmp shll xor sub add hlt sti js ds jne jne xor pusha or mov add cltd sub or aas cmpsb mov addb lcall jle lock and xor js jo add movsl orl sarb ds repnz mov cmpsl push rcr clc mov and push pop or or rorb xor add add std jl cwtl xchg pop xchg dec or popa push int or mov push loopne adc sbb sbbb dec pop mov inc repnz add cmc jecxz xchg pop push (bad) fdivrl int adc push pop and dec sub insb xchg sub arpl xchg adc or cmp mov repz enter and jmp inc and sub fisubrl mov add or call cmc ljmp jns mov icebp add cli (bad) fstpl cmp and lods test or or fistl jae pop inc ds and into or fild cld add pop add enter push stos rolb lods sub call nop les mov pushf or xor cmp lret mov jl nop test repnz add inc cmp xchg cmpsb xchg out mov cli (bad) fimull push in das rolb cmc mov and dec movl cmpsb xchg mov and gs or es fbld mov pushf std lcall cltd cmp sti mov lods or or iret lahf push mov shrb nop and jl les aaa mov adc xchg mov adc mov adc hlt movsl addb mov jbe in mov pushf xor add lcall pop xchg loope sbb add std fldl cmp and (bad) mov fnstcw inc addl hlt or enter add xchg pop add sub lods mov pusha mov outsb sbb pop add aaa push dec xor mov aad push xor xchg add push push dec mov aam push subb hlt aas cmp inc jo add push and call cmp xor notb nop pop fcoml (bad) push cltd mov sub add insb loopne loopne (bad) push rep pop dec repz sahf stos adc gs rorb sub mov xorl enter cmp push sarb push lock sbb add stos popa push faddl loope xor nop mov jge inc sub push inc (bad) or notl insb lahf addr16 add cmpsl lret xor test enter or lea xor or or adc lods cli xchg mov inc adc or cmc das in js out and (bad) jo movsb mov aam nop test mov loope mov inc sbb lods dec lret add adc rcl jo sbb ljmp not pop cmc xlat lods push and in mov add adc adc mov test add xchg dec popf movsl xchg and lret push sbb mov or push xchg (bad) xchg add push or adc cmp aad je repz or mull mov and sub push cmpsb leave ret fdivs sub adc fsubrs sbb test cmpsb inc mov mov sub in inc adc inc (bad) rcrb in repnz (bad) cld sub cli inc sub stos xorb cmpl in add movsb cltd mov jecxz sub lcall rcll push shrb pop dec icebp ljmp cmp xchg jb cmp xor mov lods mov int3 clc sub addb xor sbb repnz cld or dec and xchg fdiv adc push inc pusha loopne insb repnz js inc lret mov cmpsb sub shrl test xorl push lcall pop ja stos mov pop popf sub jb jno ficompl lock mov daa push shrb xchg add or or jb add jae test dec mov add jmp cmpsb and stos mov cmp fldl xor lret faddl (bad) push cli hlt loope add js sub ss cmc cmp rolb cmp xlat jno movsb and orb adc and inc jbe push xchg push xor and mov int3 add push int3 add mov add movntq pushf push in jbe aam adc aaa lods pop or push adc cwtl mov (bad) sahf clc dec mov or clc loopne pop mov int xor push cmp notb pusha xchg fdivr and jne aas pop mov flds cld cmpsb and or add add pop mov cmp inc lcall adc dec pop mov ja ds pop rorb adc je dec mov sub adc sbbl rep lret andb loopne push push adc add adc rcr mov xchg or int3 add adc out mov and or and test add cs mov (bad) sahf sbb and out andl or push sub clc add add mov rolb negb faddl dec adc (bad) loopne and rol cwtl enter fwait cmpb and mul jecxz scas and in xor xchg rclb sahf subb add mov adc push aam cwtl test or and in fidiv lods repnz adc xchg loopne xchg mov xchg (bad) xchg orb and xchg jb mov inc mov lcall push fninit push test and inc addr16 xor adc int bound xchg inc or xor dec xor add daa fidivr es test sbb scas mov jp mov mov js pop push pop hlt mov push jb mov xor lds cltd lock xor xchg dec sbb cwtl push out mov lret cmp adc dec push out in add das out add mov dec pop add ds scas mov mov and or or jge push aaa popf out dec mov and mov (bad) cmp pop iret inc or cld xchg cmp sbb jge,pt imul push push xor sbb mov jo sahf add and addr16 or das mov push faddl mov (bad) adc mov push nop (bad) in pop sbb cmp out addr16 loop fcompp or mov subb jnp cld (bad) cmc xor js in push (bad) or bound pop dec sub and sub fbld dec enter loopne mov and es insb xor popa jo cltd add shrb test push xchg je or cmpsb loopne pop aam add or cmp inc sbb test add cwtl aaa iret lea adc xor mov ret inc mov sub cltd fdivrs js or and fimul pop mov les cld mov dec rorl pushf adc pop ret aam mov repz dec inc xchg les add mov mov jecxz cmp pushf add lods insl xchg mov mov pop pusha pop fisubl sbb jge add ret test push dec (bad) pop adc and cld js add adc cmpsb cmp or add xor jo and movsb xor fldt xchg sbb enter bound ds push js enter sti bound divl stc pusha test and jno inc (bad) (bad) cs or jns test push dec and mov pop sub lahf mov into mov dec mov adc test daa adc inc or rolb icebp sub ds addl test mov insl pop push mov test inc inc or xlat les sbb hlt (bad) dec adc rol mov sub lret jl xchg js pop and orl dec aas dec add jp loopne lods ficoml mov pop add cmc aam mov and add lods xchg cmp mov inc nop mov inc sbb in mov add test hlt je mov lcall icebp jle xor mov mov js lret enter rclb inc fsubrs mov add add dec jmp add cwtl mov cmp sub inc xchg xchg push cmp les dec lret and arpl jae fsubs test daa cmc arpl loopne pop cltd mov (bad) jbe push or ja nop daa adc inc sahf adc cmc ret je ljmp cli stc mov xchg jl (bad) cld xchg cwtl dec shrb cmp out enter ds jno inc lods ret push pop add outsb inc and faddl and cmp out cmpsb jp mov xor pop (bad) sbb jmp (bad) lret ficoml mov (bad) xchg fsubs mov and cld and adcl aam orl cmp fadds add (bad) mov leave lods xchg xchg pusha cmc sbb dec inc and arpl movsb out mov mov mov push cmc fwait mov or inc loop fsubl mov loopne inc inc cmp jmp (bad) repz xor test sbb or or sbb inc cmpsb pushf dec push or popa inc insl out adc in xorl or sub cmp xchg incl add pop (bad) jl or and fadd lods (bad) je sub and aad sbbl xor clc xchg out sub cltd mov and (bad) mov dec les ljmp psrlq or mov inc shll lods push sahf lods dec or adc fs push sub push les jo jl sub mov inc fnstcw (bad) cmp das dec fwait adc call int push mov insb test roll lods xor sub cmpsb das std movsb nop or push pop add nop push cmp andl inc xor in out bound cmp mov push insb test and and repnz xorl add pop popf pop sbb mov ficom mov push les cwtl push inc hlt jp push inc xchg ds cmp rorl add orb icebp mov out jno bound rclb fimull add mov push cmp lods and call mov add adcb push sub jmp shlb sar add mov repnz inc jnp jl cmpsb pop (bad) and cmp loope mov cltd adc xor push mov jge jo fs hlt faddl cmp add and in imul inc dec jnp and xchg or push xchg inc je and (bad) cmc lock xlat orb leave js add andb out fldcw aam ds movsb add add call add lods jl mov add xchg and jne mov and icebp lods cwtl stc add dec mov outsb lds addb cld dec test shl out xchg sbb fadds sub lret mov bound icebp and dec adc add sahf ret xor addb nop cli pop lock inc add mov rorb add add in xchg and and push je adc mov dec add shrb add cmc mov lods cwtl popf lahf xchg jl insl cwtl adc and test nop sbb or (bad) (bad) jecxz push sbbl subl mov inc xchg jno mov lcall jg adc inc int3 add icebp hlt sub cmp inc sti addl (bad) call pop add cmpb mov add stos loopne jle popa sar adc int3 or add test add stos mov push fstpt lea adc add ds add je dec dec jecxz add cmpsl push iret mov jl push xor popf and sbb xor add mov es cltd push sub (bad) mov dec and mov sub mov xchg mov (bad) (bad) int int3 test add xchg add lock stos jae arpl js (bad) fsubs (bad) or insl shlb adc adc add bound mov xor cmpsb mov or sub sti fimull ret add out mov movsb test pop and ljmp les cmc inc mov (bad) jno mov lods add cld push aam aas xchg add nop or dec call out mov aas mov mov pusha mov lcall push js inc xchg jl add icebp (bad) in jbe loope xor int imul cltd test and adc xor push push mov push lds enter mov inc pop mov sarl lods shrl inc xor inc (bad) cmc mov bound sbb inc nop pop mov int3 in add xchg and cmp or cmp in addb cwtl and ss lods jo mov push jmp lahf sbb adc sbb push mov pop dec loope add mov lcall pusha sarl daa xor dec adc mov pushf pop movsb fsubs in rol cmpsb mov in xlat js add int in sbb lret jmp call push inc sbb gs lods lds and or clc (bad) lcall add fs xchg inc (bad) sub dec adc je jge ret popa jl xor (bad) mov cmpsb mov sub jge xor sub sbb mov jo add jmp shr and aam mov lret loopne push movsl or pop subb loope test mov js xchg add js int3 jbe push adc cmp loopne push rorl inc div add enter inc bound (bad) (bad) stc hlt je cli lods cmp loopne push pop adc mov pusha cmpsb fldl push mov stc adc ret loopne jno sub inc (bad) cmc xor loopne andb das dec sti test jl or and cltd cmp xor daa hlt add pop in enter or xchg loopne ret pop rclb into outsb mov xchg pop cmpsb add ror test sbb or lods pusha in mov xchg cmpb cmp out fdiv adc out loope cmp ss lret sbb xchg add cmp loopne mov daa or bound cmp push sub mov imul and inc mov or lock mov or xchg lret orb mov loopne push out add hlt les (bad) sub arpl repnz dec push nop insb fstpt loopne sub or add mov jns nop lods pop (bad) cs sub or loope in push or (bad) lock lods push mov in push push mov push mov jle xchg fmuls fnop lds stc mov mov lods xor jb lods mov push pop (bad) dec inc dec inc shl js jbe repz cmp push xchg mov mov add test xor js int3 stc adc sbb mov and lods pushf subb sbb push mov add imul psubw hlt push inc cmp inc mov and das cmc ljmp sub divb cmp in jne iret or jmp pop and movsl stc sub fiaddl mov nop ss sub dec sbb movsb cmp aad test and cmpsb scas jecxz push fildl stos mov dec cs jl xor cmc dec adc jl push lods inc std mov push cmc jb roll fiaddl adc ds dec inc cmp aad les loopne jno pop push neg and and or (bad) cltd addr16 (bad) push mov sub faddl out sbb or cmc faddp inc rclb dec add mov cmp and sbb lods ss daa cld negb or and clc nop dec xchg add fnsave inc push or repnz inc mov dec fs sbb push in cmp inc xchg push add mov in divb xchg call lret into push enter inc (bad) cwtl push enter (bad) mov testb jns loop add fstpl dec leave and pushf add push mov push and push push and xchg idivl enter (bad) mov dec dec adc mov mov add pop mov stc in add cmp mov cli test jo mov cmp adc add repz mov sbb mov sub push movsb bound mov cmp mov push pop mov lock add lods stc pop sbb xor (bad) push mov xchg mov push mov add fcoms cmc add cld and test or es and pop (bad) repz ret cmc add mov (bad) mov add popf nop mov push jb fwait mov imul loopne xchg mov xchg xchg cwtl sbbb add lea add (bad) cmp repz icebp jno or and add adc pop fdivrs aam sbb dec lock add add aas cmp pushf nop cmp (bad) mov add push fwait test and mov out imul bound fsubs out and pop push push add xchg test loopne ss popa cvtpi2ps repnz cmc (bad) cmp out shrl aad pusha sub inc js sub daa sub dec icebp cmp cmp ret mov call inc xor ljmp es sbb (bad) lahf inc jle dec pushf push pushf inc test push cmpsb fnstsw inc movsl movsb mov cmc pop adc adc push (bad) or lock dec or rol push inc adc fs les (bad) add lds xchg das mov lea ds ror inc adc (bad) or orb mov mov push lock in cmc iret subb out lret sbb pushf pusha enter jl loop cmpsb popl add jb inc mov push insb xchg (bad) pop (bad) andb fcompl and cmp inc out popf inc pushf (bad) jae add iret in inc adc les stos fist sbb shl and aam mov or adc add jnp cmpsb xchg loope inc les and cmc (bad) lods mov idiv add and pop pop rcl hlt dec ficomp sub push stc inc xchg inc xor push into shlb rolb fldcw add call xchg jo or add ret xor std and xor push mov aaa (bad) int3 mov push out mov sub ljmp pop inc fs pusha sub pop cli inc stc ss je inc clc pusha jb jge xor sub adc mov mov mov mov and es das cld mov or icebp jge in pop add cwtl xorb cmp daa and sub loope sbb or push mov nop cmpsl insb inc mov imul fcomp sub or lods lds and inc pusha jns add test sbb enter cmpsl test pop push adc rol jmp clc cs adc sub fnstenv stos fdivs clc adc xlat add inc popa es iret sbb cltd add (bad) shl in add pop xor sub jg mov sub fsub sub add in movl nop adc add fcomi ds add add test jae ds cmp test dec das cmpsb arpl enter jmp sbb test mov cmp inc mov lock addb xor push push jo add or int das pop leave jns sub mov mov rorl inc adc cwtl add clc mov add jmp dec or aaa ljmp inc loop add (bad) push (bad) cli sub mov xchg enter or or mov mov mov leave add lods enter stc add adcl lods dec push or xchg mov jns dec sub add inc wbinvd shlb xchg mov dec sahf mov adc js sub (bad) push jmp push call mov pop cmc (bad) xchg andb dec xor mov inc out shrb out fstps adc push cmp fcompl push adc mov add xchg push in jl pushf mov inc test push andl sbb stc add stos lea inc sub cmp ds mov sti mov mov icebp xor xchg pusha cmc (bad) dec inc jle cwtl adcl and cmp mov cmp sbb jo sub xchg xchg sbb mov add mov push adc rorb cmp cmp into mov test mov pop push cmpsb call or mov add loop callw (bad) cmp dec movsb int3 dec ror inc and dec sub stos or mov loopne dec and (bad) popa or and add fs das xorb xchg cmp iret add inc pop cmc jl cmpb out repnz nop cmp jns push bound cmp push or in (bad) jae sbb pusha push xor ret add jmp cmpsb jle aam mov mov add sarl mov addb and dec nop js fisubl les ret or clc hlt popa iret add mov xchg or or arpl mov mov stc and (bad) mov jno test mov xchg jo enter (bad) cmp mov and pushf int3 in mov xchg fistpll clc xchg sti fs mov lahf add ds or and imul call jp jl cmp xchg and and dec mov rclb je rorb aam leave clc roll aad lret cmpsl addl leave out and add jle jl lret cmp (bad) mov push cwtl cld jns (bad) jl lods or sub mov add popf inc lods and ficoml mov test lods sub pop or repnz das jg adc neg pop aam push test mov pop inc cwtl mov xchg pop add in mov sbb sbb lods cli jns inc loop adc push dec daa pusha call or add pop add mov and insl mov xchg jge inc push loope rolb sbb xor mov adc lock and inc jbe movb push push and (bad) or adc out mov cld sub mov add test pop (bad) and lock xchg adc jb and addps mov adc push sub pop hlt jo lds vpshufd cmc xor cwtl aas inc and test mov adc xchg adc jl push add cmpsb icebp int3 mov mov cmc sub xchg movsb xchg add push sbbb and hlt leave (bad) sub es icebp add (bad) lock loop mov or cmp repnz je in fs xor inc arpl loopne pop add push inc addb dec repz mov hlt test xchg loopne lods add sub cmpsb fdivs loope popa out add cmp daa push mov push mov add xchg sub mov sub cmc inc jo and cmp xor add dec or adc (bad) mov rcll xchg xor and (bad) in add inc test aad ret cs dec dec pop loopne shr push lock or hlt sbb sti movsl lods push loopne lods dec xchg ror jg push dec dec sub add idivl in cmc lock push mov test lahf mov push loope adc js mov adc mov fist pushf adc mov and jmp mov jecxz inc and add adc mov mov inc nop pop or fcompl lds outsb mov rorb out add in add (bad) cmc jecxz lods cwtl aaa test out in shlb xchg aam insb cmp je lea les or leave arpl cmp lock jge js xchg loopne pop mov js lahf or xchg xchg sub adc or lock add inc mov add fmull jl jo fs rcr cmp mov mov inc mov xchg scas popf lahf add cmc or int3 pop mov mov or incb or add cmp push sbb (bad) out lea cmpsb push mov fs faddl dec push add cmp mov dec out inc xorb pop mov push inc and mov pop sti sarb cmpsl add mov fcomps push push xchg xchg jl lds pusha rcr and ds test js les xlat add cmp scas xor repz add xchg imul ja xor icebp call xor and mov cmp mov nop push adc out push loopne pushf pop or adc fadds lea loop repnz or ja aam dec adc pop jl mov sub jge hlt scas and push mov add mov dec xchg dec add lea jg adc daa and and mov and and add cli mov dec mov addb das pop mov xchg add hlt daa jnp leave pop push andb or aam xorl and or gs push push sub xchg and lea clc xchg scas adc or add jmp and mov push lock andb out fisub je and cmp sub pop pop fmuls or adc clc xor js add fcom rclb mov aad mov icebp stc inc loop into add mov sbb and jo xor push cmpsb negb dec dec push xchg in and inc fdivl inc or cmp pop add jl pop cmpsb and ds dec and loopne inc xchg movsb pop scas xchg xlat rolb add int3 sbb mov or sbb sarb or jl pop into inc clc lcall adc test mov dec ret loopne loope and add jbe addl int xorl cwtl add push xchg dec gs loopne jg xorb xor cmc fmulp inc lock mov cmp adc xchg lock pop push cmc and cmpsb pop cli and out inc out das xchg (bad) rcl cmp call ror sbb ret xchg add popa in arpl mov add xor icebp mov test aam hlt pop popf bound inc aam ret lods and clc mov int cmpsb insb and shr cmp cmc and adc or flds jg in mov xchg lock arpl inc test cmp mov je vpsubusw and mov cmc frstor mov mov adc jl mov cmc stc sub add aaa je (bad) dec dec push lods and lcall push (bad) in cmpsb (bad) pop jl and jo call stc scas int and jb sarl push push mov arpl addr16 out sub mov inc outsb add cmp inc sub mov push pushf adc xlat add add add add mov pop notb daa mov sbb adc dec rcrb pop sub lock push je lea jl sub lds jne cwtl gs cwtl movsb inc imul (bad) enter cltd les aas add and (bad) mov or sarb enter les mov out nop mov fidivr pusha xor mov lret cwtl add jp jnp testl test dec mov mov (bad) or fisttpl mov xchg andl mov xchg cmpsb aad test (bad) (bad) or jmp adc (bad) sbb rol hlt push mov shl inc push dec add cmp pop rclb (bad) aam pop pop les insb add sub and mov fcompl cld ss and sbb lods pop mov add scas cmp push lock lods lcall sarl loopne or fdiv lahf mov mov jl push pop push mov clc insb rclb add rcl pop mov pop cmc loop daa lods test outsl lcall add xchg sbb sbb les int3 adc mov inc cmp jo or mov or inc int3 cli jp dec pushf push and xchg dec incl mov dec jmp call sub inc aad mov movsb adcb and fmuls mov iret sub (bad) and dec mov fs dec outsl dec test xchg inc dec or daa mov sbb lea pusha xor sbb (bad) pop scas imul cmp mov mov mov xor enter pop out and in xchg adc mov in hlt pop pop dec nop ret and jle fs xor jmp cmp and dec add pop and lea xchg js in sbb lods xchg insb movsb lock cmp pop xchg in push bound faddp inc shlb in icebp push mov rclb sub mov pop cmp in cmc andb cmp test outsb add out test inc xor aam jae adc cmpsb scas loope mov (bad) fdiv pop call lods enter mov imul xchg mov das xchg fadds and push add repnz push sahf (bad) sbb popf inc sbb cmc dec hlt pushf jg movsl stc cli add mov xor cwtl das xchg push shrb nop mov or add lods inc inc mov hlt jle in lcall scas pop push mov mov mov adc sub mov push (bad) rol or (bad) fstpt mull sbb push (bad) or rcrb je jb or jecxz adc add shr xchg adc insl mov mov xor mov (bad) adc push data16 adc or jge andl sbb sub test add sbb push jno or in rorb and push insb adc pop sub mov leave rcrb pop in inc jg cmp xor sub das mov dec pusha imul fs pop repnz add mov int3 mov call cwtl int cmpsb inc xor pop loopne inc xchg es add gs lret add movsl adc test cmp insl nop cmc popf and mov add nop (bad) je xchg jae pop sbb pusha adcb pop loope loopne hlt pushf add ret mov jns rcrl fnstcw lahf mov mov adc jg test daa jle es lods sub dec push adc (bad) loopne mov or fmuls inc cmp das adc and or push xchg (bad) in and in jge xorl lahf and bound dec ss dec lods xchg mov mov les insb mov and pop sbbb loopne iret sbb cmp mov icebp js int loop pop adc in add mov (bad) jo push std jnp mov lods cmpsl in and push pop mov and mov pop or pop lock stos mov (bad) (bad) sub fadd test pop adc (bad) (bad) add daa adc mov push sub cmp push adc insb das pop dec test dec popa enter adc dec cmpl je call push and dec add test add lds mov mov stos mov jnp jl or stos sahf test jo aam int3 clc dec inc outsl aam out pop mov std lock xchg pushf inc in xor call mov push push shlb pop cltd mov pop inc sub adcb lods or adc or out (bad) sub add (bad) pushf inc xchg and daa jmp xchg mov and inc repnz (bad) (bad) mov lods inc add pop or sbb sbb je jnp out jp or mov add cwtl push int inc loopne or dec jae icebp int3 inc in addb sbbb push test pop dec pop add fsubrl nop fldenv and adc adc aaa cmpsb dec bound pusha or xchg lods in push adc hlt add pop loop dec testl inc mov jbe test mov dec sbb out pusha dec pop js and cmpsb outsl xchg adc (bad) clc add adc sbb stos sub sub fild inc test jp adc sub or pop daa mov mov sar js arpl dec push jecxz aas or or das xor movsl outsb or cwtl push inc dec (bad) lods mov and bound lret adc enter loope push inc (bad) cmp pop sbb jge or and jo adc dec rolb add shr fistl jl or add jae test add mov xchg mov aam ret add idivl adc mov and mov sti jp dec mov aas mov movsb insl fmul dec iret in in mov lods pop lods clc mov sub and or lods (bad) pop ret xor xchg loopne xchg xchg (bad) loopne subb push fildl or inc sub or and adc pop repnz cwtl and mov dec push jns or jae add mov sarb sbb enter les iret (bad) xchg sbb xchg (bad) mov dec or cmp loope cmp adc xor cmp pop add cli or push cld lret add lods popa lock add push mov xor rolb ds cmpsb lods iret ror add addb in andb lods insl dec popa inc cwtl aam cmp imul pop mov fs enter faddl repz or and push rorl jl and mov fsubrs xchg lods in hlt lahf or repz inc push cmc pop or xor adc push faddl adc add cld std mov pop jmp cmpsl xchg mov les leave sub mov fdivs sbb adc jmp add loopne pop mov mov cmpsb dec mov adc addl jmp mov repnz nop xchg sbb dec add mov cmc pop rol sbb cmp pushf mov int3 or dec dec std mov add jne movsb inc rcrb repnz lods mov and daa outsb scas cmp inc or push pop movsb add pop aas mov int3 fadds mov fdivs adc cmc jnp,pt add popf xor shlb add inc orb cld inc ret dec mov outsb pop aad mov add adc stos mov add subl xchg mov adc lea stc insb adc push mov fidivr call mov daa inc jle sbb push ljmp add xchg daa hlt jecxz xlat shll mov dec add push ds sub mov sub adc gs mov hlt push push mov cltd (bad) xor xchg and add in out mov loopne adc movsb sub inc (bad) pop inc ja and push pop lock addl shlb xor pop sbb lahf cmpb push test xor push add sahf clc (bad) (bad) jg dec or loopne mov test mov ljmp faddl repnz pop cmpsb or add repz fidivrl and inc in cmc daa adc test pop cmpb fisubr sar xchg inc or std (bad) int3 push or test hlt shll fcoml cmpsb (bad) lcall daa idivl sti dec push lods cmc mov test inc dec lock gs xor add cmp or cmp and mov cmc xor or mov jg out lds xchg inc push lahf loopne dec stc mov movswl inc sub leave inc cmp adc inc and add xor fimull inc add lret cmc sbb repnz shlb inc cmpsb int cld int3 leave sarb add inc mov sub test xor outsb add inc inc cmovle loop push int fstpt iret jns das (bad) lods ljmp movsb orl fs test hlt and mov dec in mov adc add outsb or test lea lods imul test push or subl mov lret sub outsb les cs ret xor sbb mov leave movsbl in push add adc subb pushf ret adc rcrb cmc adc mov pop and sub fstps dec in fimull and popf cmovs popa psubusw and add sub repz int3 jo dec mov int loop adc or (bad) cmp push cmc enter inc into cmp mov xor bound loopne sub or test nop add (bad) in imul cmp xor jo cmc js ret jb mov lcall fndisi(8087 cli add ja adc mov loopne cmp dec add inc (bad) lock or mov mov ds cmp fsubl fidivr add iret mov push or (bad) push add test pop pushf mov les fsts mov add pusha jns ret lcall adc inc push pop jg cwtl and sahf add aam cmp xchg mov call jb mov jns clc test int3 or test das cmc (bad) loopne ds pop cmp sbb or mov (bad) faddl pop or test push lahf fmul or icebp lds cmpsl and push mov pusha cmp push add inc arpl js or adc xorb cld addl push sbb testl push loope cmp and clc sbbl and test mov cmpsb sub movsb pushf sbb fsubl imul adc test push call enter mov and sub and ret js cmc and lods inc dec or call sahf test add inc test enter or pop into add fnop inc cmc push (bad) dec cmp nop test ja dec (bad) les add sub shrl in push push xchg cmpsl jl mov ret push inc int3 mov or and cwtl and or test and sar pop mov lds and xor pusha daa js (bad) mov das mov mov sub mov inc mov cmpsl push add adc sub (bad) fildll pop nop mov sub sbb out cmc movsb sarb cld (bad) xor cwtl xchg repnz and sbbb (bad) inc add mov mov mov js xchg sti fucomp fcomp cmc pop data16 loopne mov mov lea adc dec mov inc add mov lock movsb sar in xchg bound sub mov mov mov test lods sub lahf jno xchg add and jne pusha les cmpsb movsb mov inc mov mov push mov mov sub nop fnstenv or (bad) subb std ds idivl fld mov and hlt jle std pop pop (bad) es loope scas add push cld aam sbb mov or scas rorb sub add add aaa lahf cli pop (bad) cmc jmp roll jnp imul iret inc push decl jmp add loopne push mov neg xor das sbb ret dec push sub loopne push pop and mov stos ret dec sbb (bad) in jge add push push mov and or (bad) add push mov push lret and out test mov scas inc or cli pop sbb and xchg inc sub pop or push ja add push hlt in movsbl xor out notb jp pop lret mov sbb cli pop rcll mov ret push mov in or push push scas mov jbe sti jg or or loopne jmp mov jnp sbb cmp sub sbb lods adc dec loop fisubl in push jo rorb push and pop popf cmc cmp lahf push adc pop pop adc imul fcoml jmp xchg add mov jnp lds dec insb jmp cld xor int leave into and push jge test (bad) sub jmpw sarb movsb cmp mov mov push pusha (bad) adc pop jmp jbe int adcl dec cmp xor insb cs orl mov xchg insb fnstsw mov sub xor mov or inc inc xor out sbb addl xchg mov xor out rorb pop pop sub sbbl test inc xorl je push mov mov test sub pop push push notl jae int3 outsl add jmp enter add test inc inc push sbb jne inc xor sub push pop inc mov movl sub pop pop push push rorl adc or jne js xchg imull push fs (bad) hlt insl adc add jmp sub mov mov stos lea nop das jmp jp xchg orl add or loop xor or (bad) mov xor out lea cmp jne dec push mov or xchg shlb push test movntq sbb cmp and inc inc or xlat push (bad) fsubr inc insl push gs push mov pusha pop pop add pop sub or mov stc xor pop cmp sub mov pop mov inc mov fcomps inc jmp pop or outsb or test or xchg push enter sbb sarl aas mov movb inc loopne and jnp add hlt jp xlat (bad) fldl pop jbe iret loopne cwtl loopne xchg mov fwait je jns xchg negb loope cld test or pop cmpb mov jg adc (bad) add mov inc mov insl rcrb ljmp nop clc lea cmp cmp jmp push test add mov in pop out and push ds (bad) jg cmpsb xor loop popa ljmp xor push movb sbb push dec mov dec cmp dec cmpsb cmpsb dec add lcall dec mov daa sbb adc clc cmp test ljmp add mov pop xchg je aas mov pusha mov orl mov (bad) jmp add pop pop pop pop inc mov adc shll and cld sub pop shl or jg (bad) mov adc lcall cmp dec outsl add sahf fstl jmp test xchg stos pushl jns push (bad) or aaa out aas push and dec cmp lods adc (bad) popf xlat nop push sub arpl pop test jnp loope inc sbb cmc mov dec adc jnp pop jbe fistpll inc mov mov bsf fucomip ss popf aam ds add push push pop add roll pop out push push das pop not inc sarl push jnp dec sub jl pop andl mov mov cmc out stc mov fisttp push in hlt xchg scas subl test je loope test sbb es loop (bad) jno,pn rol or and xor icebp or fnstcw gs jns and sub repnz adc add or push roll xor (bad) or fbstp mov dec stc aas (bad) lret jns icebp push xor mov or cld pop add jmp push mov push jle xor cwtl stc pusha rcl orb repnz sbb fadds fldl push in and and mov add out ficom mov loopne lret push jbe (bad) or pop mov jns push sbb out push pop popf dec fsubrs adc or in (bad) in pushf lret aad push add cli dec xchg pop dec pop mov insb call xor pop push movsb mov push repnz (bad) adc dec adc mov test dec cmp mov stos jle xor enter adc mov push add int mov pop pop push into jne cmp in insl mov popa movsl enter jp loop fdivrl ljmp mov std popa inc mov and loopne je test cmp and push jnp mov adc xchg xchg add pop (bad) jnp in add add enter xchg fisttpl dec add fs lea pusha (bad) mov imul sbb jmp pop std or pusha cmp popa aam jmp sub add fcoms sub sub lcall or lret ljmp aad dec or pop push xor pop mov dec pop rcl xor jmp push lock push pop movsb jle fnsave test mov mov ret mov fnstcw add dec daa mov fs push ficompl push pop ds daa dec dec hlt jbe ds call inc dec push xchg add add dec leave gs xorl adc cld int sbb aas nop movb nop fnstsw cmc inc aam or aad bound dec out call jb inc pop mov xor loop lods bound imul add xor test pop or xor mov and (bad) add std cmp in movb add add loope aad dec mov pusha jbe cmpb and mov ds or sub sub decb mov shrl movsl shlb add jmp dec ficompl pop lcall clc jmp mov jb add xor inc std out and xor inc je xor xchg (bad) xchg or xlat sub push (bad) outsl xchg push or cwtl call outsl divl pop add jb adc mov add xchg in push es mov mov das push lea mov sbb sub pop push xchg call (bad) fisubl jne (bad) mov cmp add xor push jmp xor (bad) add pop pop lock add mov out add jmp xchg push push mov mov cmp ret cmc fnstsw out xor mov xor into or jmp pop adc subl or mov dec inc adc dec jle sub add pushl push xor inc pushl stos bnd rcrb mov adc sahf call dec mov aad mov test mov and (bad) push out sbb cmp outsl pop dec jo cmpsl xchg cs js sbb clc (bad) or jge push je jnp or clc fstl movsb dec mov mov dec sub clc inc (bad) jle jno ljmp sub mov enter out andb jnp push loope cld xchg outsb or xor mov or pop hlt subb add (bad) adc add pop nop and mov jmp fadds rolb push sub adc sbb or es add sub push push mov push shrl data16 or outsl add jg mov jmp gs inc mov xor push out (bad) lock sbb mov add xchg pop mov xor fldcw popf inc pop mov and (bad) (bad) enter add shrl xchg dec mov fdivrl sbb mov pop and icebp cmp lock xchg dec daa jmp jmp enter mov jne mov push mov mov stc ljmp or mov cmp cld (bad) jle lcall push lret jne (bad) and lock lods cltd insb and pop mov popf ja xchg js dec (bad) sti lret call mov pusha dec mov pop (bad) mov faddp lret inc sahf (bad) cld push (bad) repnz xchg push dec stos shl out dec sub xchg or arpl daa call mov pop push inc fwait in add out lcall pop dec push add xor pop dec daa xlat inc mov lock inc fistpl sbb jmp test fcoms push cmc dec add negl test ljmp jg clts pop popf xlat cmp jmp neg push repnz insl xchg pop jmp (bad) and and xor pop orl fistpl mov jg cmp and push adc jb jmp loop xor pop push add (bad) add xor jmp sbb dec pusha mov jo cmp lock and call mov jns movsl ret add (bad) dec xchg xchg jbe jnp cmc daa mov out ja cwtl inc sub inc jmp fldl sub sub jnp sub add movl xor dec popa add pop inc pusha loope xchg xor shrl add and lods es out (bad) mov rorl cmp jmp mov and imul dec pop xchg and lcall cwtl iret mov jmp inc cld (bad) jbe or mov fidiv xor ja or add aad pop adc mov push lret add or (bad) sarb cmp popa jmpw or dec xor sbb je mov push cmpsl in xor sti out jno and les scas fstps iret mov (bad) addr16 jbe cmp add xor (bad) lret or pop lahf jne adc xchg xchg push fs movsb add or imul jnp cld mov cmp pop subb pop das add xlat dec neg mov aas push add pop into mov test jo mov es or ret addr16 sub push sbb adc xchg scas mov test ja pop out lods jp scas (bad) or cwtl test insb add (bad) sbbb mov mov and inc shll sub int3 or repz scas mov push insb add fstpl jb push fwait enter hlt sbb or or les mov cmp idivl jg pushf fisub adc sarl push hlt cmc das ja shrb cmp nop mov and xchg add push push add pop push adc inc push mov dec add jmp ds inc addb push fidivr rolb jae mov inc push mov cmp jo mov rolb ja mov cmp xor notb cli sub lock and loop xor inc push repnz and mov push and ret xchg jno cmpsl dec jbe lock push (bad) push sbb dec mov (bad) cmp and fs pushf lods aas imul out cwtl jg cwtl notl sbb adc add js cli in std cmp stos outsb push imul xor out jne and mov jmp insb jb xchg dec push xor inc psraw pop pop (bad) nop mov jnp jb cmpsb or add push adc jecxz add (bad) jae std enter mov xchg jg out in cli fisttp add dec out mov jne pop jmp test divl hlt fildl and out pop add and pop mov mov adc mov ret add ljmp mov pop test add sub hlt xor pop add outsl popf push addr16 inc mov es push ja push inc les cmp mov jo xchg (bad) cmp cmc ret inc sbb out cmp dec jge roll sub sahf rcl jg xchg pusha and pop mov or in sub ret jne push add jecxz xor pop jmp shl push out adc xchg cmp dec xor pop fs jecxz cmp fsubrl popf jne movsb dec sbb movsb int dec and sarb insl js mov jp lds pop sub cld dec mov cmp dec rcrl adc dec xor stc adc mov inc pop sbb jmp (bad) loop mov movsl rclb les add sub stc dec neg add add ss cmp xor shlb out sub pop rcll into fisubr scas gs push inc push mov dec sub dec and sbb out in jae adc mov lahf push bound jp outsb (bad) add mov xlat outsb jmp sub add gs insl pop xor sub mov mov insl bound jae and rorb rol jmp cmp add ficomp cmc mov add out jmp xchg (bad) or and daa xor jae (bad) iret push ja lods xlat cwtl lea mov dec or adc pop add mov jmp dec insl mov lret xchg not cwtl push jmp sbb loope std push add push cmp cmp sbb jno inc outsl push jb popa or ja idivb push bound dec pop sbb jns test or addb mov fsubrs xor adc push imul mov arpl push sub push pop pop adc cmp js sahf les hlt popf sbb mov dec push sti cmc pushf movsb cmpps mov mov cmpsb test inc and mov xlat leave loopne in push inc cmp pop lock inc fnsave push enter jg pop roll lds xchg dec mov jns inc repnz mov loopne jns push test adc mov ds repz imul dec (bad) stos lret mul pop sub daa lret xchg jo mov mov (bad) js (bad) mov daa adc lret test push test or shl add add mov dec imul cmp xor jmp inc fcompl out lea dec shl push icebp mov and leave adc (bad) jg popf xchg pop add cmp mov pop js add cmovo (bad) les sbb inc jae add dec jbe js icebp pop xchg cltd adc mov and (bad) jns std enter push stos shrl or mov lods push or mov cmc inc mov xchg xchg xchg call gs imul data16 or or adc push mov arpl arpl je out stos push data16 ja jb jl jle jge jns divb ja imul arpl jae mov imul cli jne or add add sub pusha jae inc push push dec jne pushl inc sub bound jns or (bad) (bad) fisubrl sub addl dec dec aas sbb ret push cmp jg mov cmp nop in cmpsl mov pop lret push push dec push dec dec punpckldq je mov js movsl add ss jl aaa sub jmp add xchg inc std lret adc xchg mov mov push cmp repnz push xchg rorl sbb jmp jmp add xchg pop les les or mov mov cbtw es jge add pop lcall mov (bad) mov or xchg add test jo sti hlt and cmp inc push imul loop lock inc mov call sti push addr16 into mulb sbb pop cmp mov add pop and je or lock and sub dec push fmul and nop add ret addl lds scas fstpl adc xchg sbb mov push adc cmp sahf or cmpsb xchg lods pop jmp inc xchg dec mov shrb and andl mov out loope jge das jno sub cmc inc cmpl neg add add sub or rcrl shrl inc cmp add pop js lahf push cmp jo mov sbb ret sub idivl sbb mov pop xchg xchg or xchg cmpsl mov daa xchg popl mov shl call jmp pop aad andl add mov and js in inc test testl lods cmpsl fsubrs loopne cmp pop sbb adc pop loopne add repnz mov mov fist daa xor fidivr jle xchg and jmp adc fstpt mov add pop push mov jmp gs cmp das idivb sub push push xor jecxz adc sbb or inc ss pushl and pop sbb pop sbb or xchg and nop or nop lea inc and rolb mov (bad) pop mov gs jl hlt or and shr loope xor cmpsl (bad) xor test cmp dec faddl sbb (bad) xchg setne repnz mov cmpsb mov push sbb jnp into and aam jmp xchg inc pop hlt jge mov in lea dec hlt imul inc enter pop inc push or and cld jl adc jg add sbb test or shll into std and push into lods xchg imul xor in cmc push sbb sti aad aam jge mov push (bad) cltd mov xchg sbb fldl movsl cwtl lcall cs cmp sub push stos cmovb scas and andb in daa jge inc xchg push jmp add ds push arpl gs int3 testb cmp enter adc stos popa (bad) pop jb aas jg (bad) or xor mov std add scas stos rorl inc and int3 hlt and add pop jecxz repz xor jns and push or add movsb mov sbb int addr16 sti push dec jmp and mov loop mov fstpl mov sbb and push jb in add pop loope jge push and mov push mov jnp lret push fbstp repz les (bad) test push sbb push ja mov push mov mov adc testb lahf rcrl push jmp arpl inc sbb pop (bad) mov cmpb dec xor and sub push dec sbb popa lahf enter sbb sbb loope mov ds adc jmp cmpsb stc xchg imul loopne push mov or pop adc in xchg loopne jmp bound in jne call ja add xchg mov jne push jle push stos mov test rcr scas je,pt inc sbb cld jle inc xchg sbb div pop or jns call dec cmp push ret aam push pop xchg imul pop xor loopne or xor adc push leave movsb xchg push out push and repnz stc das insb pop cltd inc or out jns mov add xchg ljmp loopne test cmp stc mov inc xchg adc mov jns sub cmpsb adc cmpsl xchg or repnz sub xor sarl sbb pushl sub loopne add inc add adc std cmpsb lret out xchg enter jnp pop ja cmp xor jmp push les pop pop and mov add mov push out jno and add mov add and pushl mov jge pop fist sub in jg stos fnsave cmp aad xchg push adc mov sub jge dec xlat inc or dec or cli push fdivrs pusha jae add pusha push mov aas dec ds out jg in xchg add sbb dec adc push cmp lods add pop jmp xchg xor lods jp call andl adc popa cmp pop xchg push stos (bad) (bad) dec or movsl rclb jle pop shr jmp cmp adc movsb rorb ret dec pop jecxz sbb add lret test imulb in cmp sub add xchg (bad) dec add add addb nop (bad) mov int3 dec sub or push jmp repnz imul and sbb add xchg cmpsb pop push test push and push fisttp bound sbb mov ret xchg rcr xchg fsubrs sbb faddl enter push xchg (bad) dec or fstpl sub repnz rclb and mov cmc hlt ja (bad) hlt mov divl xor pop pop mov pusha icebp pop pop stos cwtl xchg sbb jmp dec imul lock loope adc jmp dec push sub aaa xor mov jl or ja mov imul push jmp or push add repz hlt sub or sub xor dec adc xchg or adcb push or sub pop pop stos mov cmpsl xlat dec outsl add bound pop jmp (bad) (bad) cmc cmc pop out xor fistpl shr xlat mov enter jo or add loopne and adc dec and daa dec aas cld push loop sbbb hlt lcall sarb add push adc inc jae pop test cmpsb xchg pusha add or cmp (bad) sti std cmc add jge jge or jg adc mov test sbb in jge shl push add sub notb sbb dec jle gs aaa mov jmp add add daa cli xlat cmp pop fldcw add lahf ret dec jns or daa pmuludq cmp mov and ret (bad) popf ret inc ja push mov je jmp xor push (bad) xor bound test jmp add sub push das mov push mov push pop js scas test (bad) push adc negl fldl xor cmp add lods push mov xchg nop test cmp out add mov or sub mov add dec push pop push ds push sbb cmpsb or xor cmp lds jmp add ret mov mov xor sbb mov iret dec ret test mov pop cmp mov (bad) jp,pt dec sbb xchg jle or cmp jmp scas mov pop add xor out in adc imul add gs aas orb icebp adc jmp mov cmpsl test (bad) clc repz adc jno sub movswl call mov (bad) xchg bound cltd push pusha jne ds jns pusha or es andl addl enter fsubr (bad) or lods push gs jae sub add mov ljmp movb mov xor push mov pop (bad) sbbl jmp sarl shll aas mov fistpll jmp mov add sub add fsubs xor adc aad leave xor sbb testb jmp int gs push mov imul shl jno lods rcpps out adc add inc mov pop add mov pop fidivr pop adc push mov or adcl push or cli add push sub xchg jmp jecxz jg js add cmp xor cmp sbb std add jmp push mov repz cmp add cmp in cmp pop mov in adc dec lret dec dec sahf xor stc ljmp rcrb pop fdiv aas cwtl cmovno and push mov xchg call subb cwtl icebp idivl mov mov ja fiadd fistpll lds andl and jle (bad) xor call or xor jle inc xchg jae je ret or adc xchg in movsb mov add mov or sarb jnp or insb pop add jnp cwtl (bad) xor xchg push mov add cmp dec add gs and pop add jmp sub sub fldl cli js dec jg and add pop add mov mov mov sub enter jo mov inc movsl adc fidivr aam jl dec movsl add mov push push loop sarb js mov cmc mov out das inc jmp fsts xchg and and push test push (bad) push jmp lret cmp icebp push and ficompl xor loopne push sub xchg rorl dec arpl ja and movsl loop cmp sub push push test outsb pop jmp es adcl pop lcall fdiv in in jge add jnp adc decl push rorl push or movsb mov xor lahf cwtl je xchg push pusha iret push and mov or cs je inc pop sub sub jmp pop xchg rorl jmp push push mov orps cs xor cwtl clc add dec je aas lods xchg enter xchg test dec mov outsl jg inc mov mov sbb stos xor daa jo inc (bad) cwtl lret dec add xor sub dec xchg lea cli xor xor es mov inc gs (bad) je mov insb cmp stos add ja or add stc inc mov nop push add dec inc adc mov pop rorl call into out pop adc pushf add outsl xor and jmp or xor pop and out fs ret push ja fisub stos or push jmp fisttpll jno mov pop nop jns jmp add pushf fisttp in push test insl xor aad mov xchg or shr xchg mov shrl je jne decl lret inc dec mov (bad) mov pop mov dec xchg xor mov in inc fs dec out push or dec xor movsb sbb (bad) mov or add cmp jmp test add arpl jnp shlb test cmp pop pop out jecxz mov lret pop repz shrb xor cs subl sub inc push mov aas sub pop add repz leave push or push inc or sub decb push inc cmpl or fnop xor inc das or (bad) ror popf aam cmp mov out jl push xchg mov add or pop sub jns fiaddl out pop in pop pusha inc mov leave push iret or xchg enter dec ret xchg ret xor push fidivr xchg sbb xlat pop test out andb inc add pop sub pop pop pop cwtl popf sub sbb pop or ficomp mov outsl xor inc dec mov inc insl (bad) xor nop cmp das icebp sbb pop das popf or cmp loop stc add jp pcmpeqd jg xchg test sbbb inc daa pushf jl and std (bad) in sbb pop maskmovq (bad) or add add xchg (bad) testl bnd aaa (bad) movb xor hlt push mov sbb xchg dec shlb pop das cmp lret xor ss imul inc jmp out adc add jnp cmpsb imul cwtl ret fs pop int xor inc sub add push cmp mov aas inc shrb dec push or mov adc xchg mov in or pusha push dec scas out aaa adc and imul or pop out repz rcrb dec push sbb inc mov sbb iret push dec aam test sbb les sbb jnp pop cli les or add pop push fidivl push pushf dec sub dec pusha and scas sub xchg dec int mov nop (bad) dec lock cmp fldl mov mov jbe or mov push push or (bad) mov or pop (bad) mov int xor dec or inc add mov sbb pop xor mov sub jb arpl mov push es xchg sbb sbb aas jmp (bad) jmp ret adc sbb pop lock das sub inc and test pop inc add test cs add or inc leave pop jno xchg stos mov (bad) loopne inc or fwait int cmp scas pop adc stc xor jb nopl test or mov pop imul jl cli imul pusha dec dec or out sub push push inc or mov xchg cwtl xchg pop pushf and ret outsl xorl daa js lahf out incl movsl or bound add inc loop cmpsb cwtl sub lds jg and or mov adc mov sub mov aas (bad) push icebp andl xchg adc pop mov push pop cmpsb xchg and sub sub aaa je jg mov add pop or push dec push push pop (bad) fimull mov sbb xchg and xor add mov xchg inc push mov test and andl dec js sarb jmp into ret pop sbb inc pop ss mov xchg pop adc push mov es pop addb mov sub xchg ret lods xlat pusha and (bad) jne in shrl add adc pop pusha lock scas xor push out mov add mov xor jmp orl jb cmpsb push pop notl jge push nop or jmp jmp pop add data16 dec mov jnp jmp movl push jecxz addr16 inc icebp push xchg jmp aas sbb pop fwait int stos sbb outsb jg xchg sbbb out pop pop repnz xchg notb push sub pop push (bad) push in mov pop or push into inc inc mov fucom ret cli sbb xchg fs loop push dec cmpsl stos lea lret nop cmpsb lds sub cs xchg push sbb cli add imul dec jne or frstor or into int3 xor aad push jo push mov xchg out ret xchg inc pop or mov or or pop hlt aam shl inc inc cmp lods pop jns lcall test inc jmp ret xchg (bad) pop scas pop out dec sub xchg std test daa xchg jo push add dec inc push out jne and xchg push xchg and xor push fbld pop jg fcmovnu and lods push mov outsb push enter sbb inc pop lods cmp insb repnz xchg lcall mov loopne adc test lods ret or pop push dec and jmp pop shrl adc or test (bad) push inc jle test shlb inc xchg mov pop pop pushf inc sub movsb dec pop inc sahf add and (bad) lahf inc mov mov pushl dec sbbb jnp out pop xchg cmp pop add test or ret push push xor int sbb (bad) push mov sahf rorb stos jmp mov enter fimul pop cld or dec jle popf pop pushf push or mov sbb clc out imul push cltd loope pop inc clc jp mov cltd repz and xchg push aad mov push les icebp mov push mov popa mov mov mov xchg (bad) fs dec pop repnz jle pushl or sti in sarb jnp jg pop lea push fxch es mov jl fs adc mov pop shr add jg xchg pushf (bad) cli pushf nop shlb int3 out out cmp pop sbbb jg sub mov mov push (bad) mov fdivr pop or and xchg das mov inc mov pop mov cmp pop fmull xchg push sti insl dec jmp dec mov or push mov bound dec andl pop sub rorb adc jp divb cltd clc loopne loop lahf sarl nop (bad) or (bad) lret push cs push add mov add aaa jmp repz pop lahf cs test or pop rolb push add sub ss in dec or fisubl pop xchg dec add add jns pop inc popf mov test dec cmp inc jmp xchg dec cmp rcll or mov xor ret pop mov pop cmp add adc repz add cli jg jle,pt push clc mov push and push cmp xor xor in mov dec jmp or ficom mov inc pop add (bad) not jnp pop dec mov js jmp imul or mov push cltd movsb cld dec call xlat inc test and ljmp add out or xor decl stos dec add adc (bad) xor mov out inc or or jle push jns dec and mov je (bad) movsb push xor add dec loopne jl dec jb cmp aas pop repnz rolb pop jne or and sub pop or jno scas xchg or ja aad int dec xor shrl xchg inc out jae popa std add push and and cltd jnp mov add pop ss mov add jno push push std xor in adc notb not hlt sbb xchg into cmp jecxz out xor cmc ret pop inc ret negl (bad) xlat mov dec shr add jne mov sahf fistp les add pop das aaa sub lahf add (bad) cmp stos or xchg or mov mulb inc push loope icebp xor ss popl pop in push mov cwtl aam or jl in rcrl pop (bad) xchg int3 test add test rcrb sti dec xor loope lcall out lods and push imul inc aad xor push sbb mov mov and loope (bad) insb outsl or idivl lods add cs clc jmp das push cwtl aaa add stc jo xchg push mov in inc out dec popa ficomp loopne push add xchg adc sub pop lcall (bad) (bad) out pop test mov jb lods or ds lods pop or pop test push jbe inc pop push mov mov xchg lret mov add mov iret not xor xor in (bad) xchg and mov sub sub shr mov xchg adc out pop push inc (bad) push jns xor (bad) mov gs jmp jbe push sub popf cmp push cs or imul (bad) insl mov push mov adc faddl mov das les std adc fwait dec adc xlat push scas xor fsub addl cmp add inc and lds xchg and das int inc fstl jge or adc push add sbb and jmp mov sahf mulb outsb insl adc push jnp testb std push dec (bad) mov andl jmp lret in rclb loopne insl pop cmp popf cwtl in pop subl and ljmp rcrb jnp,pt xchg or lods leave sarb loope repnz pop jbe in (bad) mov mov mov test jns xor push push mov add sub mov stos sub in dec push inc add scas and loopne add outsl jg call mov jae popa sub cs outsl and gs cmp push or (bad) ja adc sbb mov mov dec mov aas hlt (bad) pop xchg loope adc jle pusha lods aad jle jo add jbe mov push mov add add xor mov outsb adc test and stos push mov jg out jbe pop je xchg mov or lret jnp dec inc xor (bad) jbe and and xchg das stc xor sbbb enter fcompl jl adc dec add ds or (bad) xsavec dec sbb sbb sub jbe adc out xor pop cwtl mov adc push lods into fadd decb and fstpl jl adcl divb das mov (bad) mov mov icebp das jnp and int leave mov sub and sub daa out cltd push sbb add pop popa lds insb out pushf gs push push jg ljmp push or xchg sub std or call xor cmp addb inc lock jae add clc testb ljmp jmp test in (bad) icebp fstps mov (bad) lret adc sbb add add push push aas inc mov fs mov aad pop fsubrl mull mov test and sub dec or aam les mov or inc and inc and mov sub (bad) enter out mov push out loop xlat gs jge addr16 or add leave add pop xor mov cmp cmpsb test jmp sahf jae inc push cmp jle outsl add addr16 jmp or dec mov and mov scas lds push mov cmpl mov inc stos aaa jae repz pop out add cmp insl sub movsl sbb pop push mov push loope mov add fsubrl out out adc xchg loopne pop pop mov rolb pop cmpsb mov ja xor retw dec or lods pop add lcall add sbb ficoml in inc adc ret aam and dec push int3 or jge xor sti push cmpsl mov xor jle out ret cmpsb mov insb aaa jo or into inc sbb ds lret stc mov sti fadd or repnz outsl add cmc xchg aad rorl stos push xor mov sub enter (bad) outsb mov push inc push and test push add mov out xlat jecxz push xor rcrb push jg iret aaa fs lods lret rclb inc mul mov sub daa dec data16 mov fstpl jmp sbbl jo outsl dec dec ljmp xor or (bad) jb sub sbb aaa inc add mov xchg aam imul in inc jp div in dec adc mov xor push inc mov or inc mov test rorb in or and dec bound sub mov pusha ret and rclb and xlat sub push mov or scas inc ds xor je pop and and pop cmc mov leave add lods push adcb nop mov insb inc xchg jmp out das out cmc inc cmp gs loope lods pushf pop add cmpsb pop (bad) cwtl rorb xchg mov aas mov xchg or mov in add mov ss jne fucomip push push lods mov or mov sub mov or stc stos call sub dec xchg push add inc leave jmp sub imul push xor inc leave dec gs mov into adc inc negl jne leave pop pop test push pop inc jg pop mov add jl xor lods add adc cs jne scas sar fwait inc and jge add pop or xor (bad) jmp inc movsb mov xor flds mov sub imul lock popf xchg push inc jl sar dec subl adc leave nop pop and (bad) mov sti add loop add sbb lret idivl mov mov enter (bad) push jne push xchg dec mov push lret jg sub push adc mov push mov xor clc cmpsb adc sbb sbb insb push push jmp adc mov dec jmp mov jle or ja roll xchg imul pop sub pop mov adcb dec adc decl jl mov outsl mov out rep iret js sub mov adc stos lods lcall out xlat call movsl int and ds push push jp cmp mov sbb cmp pop mov fsub dec cld xlat nop fisubr andl out loopne and add push mov jg loopne stc lahf imul mov inc negb icebp pop push add pushf outsl std mov lock ds adc jmp mov into loope mov test outsb add mov rolb mov call out daa sar jno fwait loop push test add add insl mov add repz shrl add mov outsl loopne cmp mov fnstsw sbbb movsb (bad) jmp add mov stc push inc fucomip add mov shrb add sbb xor mov test movsb cmp fldl loop dec ja (bad) pop (bad) aam jne xchg and inc cld pop mov pusha pop pop or ds fmul lods mov jns add or pop jmp push push icebp add imul cmpsb imul stc push lods sub jg rcr cmp mov lds sub rcll push inc out xor icebp cmp push jae ficom xchg jno leave call xchg daa jmp fstps lock pop test xor pop stc dec loope or out in mov loop sub clc lea jmp xor dec ds mov das sub ss and daa push pop movsb mov push test mov sbb idivb inc std sub xor jmp sub adc (bad) pop push pop push loop cs sub cmpsb xchg push push fprem dec dec out pop and xlat in (bad) lret dec out dec sub inc and sub sub pop pop add rorb sub pop gs jle icebp ja pop push xor popa jbe jb fwait jnp lea mov pop in in fimull stc cmpsb repz stos add aam ja mov adc in ret jne jg int in in out aas dec push and mov jb out das mov stc pop pop push jmp xor add stos cltd pop cmpl xchg insl jnp or push sbb mov stc push (bad) in pop add enter sbb imul loop test lods and (bad) pop xchg dec lret stos xor cmp mov jge ss int popf rorb cmp clc insl inc jmp jp jp push out incb fnstcw mov jp,pn jle lods orb or or cmp xchg lds jne sub push dec je sub jnp,pt pop sub inc jb sbb pop fdivl mov mov dec pop mov (bad) mov cmpsl push (bad) mov dec aad push inc add inc fwait sbb fistpl sub mov js xchg xchg test enter xor add inc incl shr lret inc jge jmp mov aas adc rclb dec fwait push xor xor sbb and xlat dec rorb xchg test mov roll test subl mov pop fiaddl xchg or cmpb or test inc add lds add push push xor fiaddl or jl inc in and cli aam add xlat push mov fs clc mov js loopne xchg add jns mov mov add sti cmp loope inc aad cmp cmc lcall adcl enter mov xchg xchg and fild scas mov shrl jnp xor push jns mov pop sbb add mov test aam jp xchg add rolb cmp int3 adc sub push dec add cmp push mov and push push mov aaa mov test add aad cmp or adc ret cmp mov add add in enter fildl pushf mov push or (bad) std das inc xchg adc pusha es fimull inc scas cmpsl outsb in clc lea or and xchg lods inc lods add inc lcall mov xor push and push cmc push add dec adcb mov aad (bad) cmp (bad) fs sbb cmp ret inc movsl test fnstenv fmul jbe mov (bad) mov icebp or push (bad) adc adc adc lahf ret out int3 fbstp insb or dec fwait push fucomi popa dec xchg mov add add gs call mov dec imul (bad) pop cld xor je add les xchg cld pusha int mov lods test mov add xor repnz cmp xchg pop sti movsl popa andb ret dec imul pop shl aad test ficom adc push popl fs das int xor adc xchg dec or loope mov fildll inc aam int add and inc mov push jge and xchg les addr16 add xor add mov (bad) ds aaa xchg add add dec stc aam adc jp addr16 popa daa push fisubr inc pop arpl stc dec sbb outsl jbe rorb call cmp or or push enter xchg cmp or jne cwtl xorl outsl inc dec mov (bad) aad rorl mov add and dec pop dec add mov and add out pop lds push dec js ret pop repz aas fidiv mov cli adc out das dec push stos add mov hlt hlt mov cltd xor mov data16 lock imul sbbl mulb mov cwtl xor pop mov cmp arpl std lds jmp adc aas adc pop mov jns faddl or dec xor cwtl lds (bad) repz mov sbb clc imul xor popa mov add aad test inc iret (bad) pop mov add cmpsb xchg cmp fcompl xor xlat dec and sub aas sub es add pop fs (bad) sti mov mov cmpl mov mov pop pusha cmp test cmc add add mov mov or sub int jl pop loope mov and rcl test (bad) je push sub dec cs sbb lahf mov jg repz inc and jns ret rolb popf lret loopne dec xchg xor xor jge push dec dec out mov lret jns rol dec sub cmc xor jp and xlat hlt mov in nop inc and pop cmc test inc pop shr inc adc leave mov or lea xor (bad) jno smsw xor (bad) mov stos imul inc cld gs arpl inc insl mov movsb stc rol dec pop (bad) dec add push inc outsl shlb xchg mov mov enter and push push cmp fidivrl les imul mov and cwtl test popf int3 aas cwtl in aas icebp mov fistpll (bad) push push sbb dec mov mov mov sub aaa push add sahf (bad) inc xor dec or mov sub std inc loop sbb (bad) int3 push sbb (bad) aad insb mov pop pop mov push adc mov andl shlb test dec repnz or jns out jmp faddl fnsave fxtract into add cmp xchg pop adc pop test xor xsha1 cmpsb dec mov cltd orb adc xchg loope lahf stos add dec test (bad) ljmp loopne or cmp and adc or adc addb adc xchg incb fsubrl xor cld jnp cmpl sub or leave dec xor push adc scas push mov push or daa add inc subb push xor stos xor pop cmpsl xchg roll mov nop pop mov jae sub sbbb sub or js sti xor out dec test mov int3 (bad) xor test loope jg cmp in add add add rorb mov push mov pop in negl or (bad) loope push push cmp frstor inc lods mov inc mov dec inc push push sti and inc test imul enter dec str add or lret int pusha in pop mov dec cmp jmp pop stos lea mov xor cmpb aad push cmp mov push gs nop divl mov xchg inc mov andb add lods cli fs sahf in movsb sete lret xchg mov xor jo,pt pushf xor jno xor jns bound into (bad) ja movsb negl inc fs jge mov push xor or aad movsb pusha and push mov ss sub dec sti loope push cmp repz mov sub adc popa sub mov xor movsb cld pusha dec shrl loopne movsb mov add cwtl rolb stos mov push or cmp int3 push outsb xchg sub aas and movsb jge add mov lods jl or lds adc decb sbb ss mov clc (bad) sub ljmp mov (bad) pop cli add lock fiadd mov test inc mov test dec into jge xchg je subb xor subl daa xor cmp sbb sub adc lret jmp mov cmp js lcall fldt or jmp nop add test in xor (bad) imul and or xor fadds lods push and add and pushf mov shll cmp shl add and lock push push cmp (bad) lods (bad) xor xchg cwtl je outsl lcall add sub cs shll movsb and inc rolb pushf rorb sub cmp push and xorl xchg imul fdiv fadd add mov pop mov lock pushf sbbl dec movsb fadds ret popa add dec add inc cmp das dec repnz outsb std fsubrs add adc sub bound insb movsb cmp or popa insb push clc mov cmp leave push nop sub mov mov inc cwtl adc mov jo xchg pop and fwait or sub cmp mov js (bad) push lahf add cs jns fwait movsb fsub xor sbb add pusha cmp or loop add (bad) xor xchg cmp xor cmp popf mov stos sbb je add subl sbb mov test push stc and inc mov push dec cli jp jge inc pop adc (bad) mov add ds pop mov lret mov (bad) clc mov (bad) pusha cmc lcall jge aas xchg add sbb das cld pop mov shrb dec add sarb int insb aas gs sub or ror cmp adc jb push fdivs pusha xchg mov cltd int cmpsl in xlat shll shr add xchg add out mov loope notl add cmp enter mov pushf push movsb rorl in add mov xchg test adc or dec loope into add push xchg xchg fadd add popf jge out (bad) xchg xchg add imul mov cwtl pop add test incl (bad) or loopne pusha xor and clc pop jo inc mov clc jb xchg adc xchg mov cmpb jno aas mov add enter stos test shlb fiaddl xchg dec nop fistl pushf xchg jge inc movsb insb adc and fistpl sub push test push sbb sbb add in pusha repz sti lods xlat and pop jbe dec mov stos xchg sub int3 mov (bad) dec inc push pop dec xchg mov mov xor xorb repnz add ljmp xlat stos xchg jmp fcoml xchg fdivrs fistp pop ret fs bndldx dec jecxz jns push jo dec aaa mov push fcomps nop rolb or and fwait and cmc add push inc fcoml dec push adc xchg mov push xor fwait jmp add enter sahf add dec sub inc and movsb leave jmp mov nop punpckhbw cwtl mov push dec pop push jne das fucomi or xchg xor adc xor or cmp pusha rclb mov xchg jl jle sub (bad) adc mov inc repz loope sbb and insl ret mov inc lods cld lea out xor push (bad) push sbb popf cmp lea ret push sbb andb int3 int xor fisttp sub adc sub sbb xor push fisttpl dec out mov ficompl (bad) fisubr push movsl popa pop pop in leave dec cld imul xor sbb rcr or js sub mov nop inc sahf (bad) lock rcr or push fstp (bad) mov mov jno fs mov adc jmp add scas cmp sbb call fs shrl lcall add imul jno add pop gs mov push test sub pushf add popa or mov rcll push jp xchg incb dec jmp xchg sarb ret add inc jmp mov xchg pop add arpl sub lea xor (bad) jge pop inc dec stc xor mov xchg mov test cmpsl mov sbb rclb sbb ret push test pop pusha or (bad) mov fmuls push imul icebp jge xor push or cmp fs mov test xchg and (bad) dec sub sub sub add clc sub or into sbb xor sbb sbb sub mov cmp push fcompl add and rcrb daa pushf int3 mov stc xor imul incl cmp xor aaa fs test cs cmp adc cmpl mov or setbe sbb fiadd mov xor jecxz or cmpsb nop jo pop aam xor sub adc or insb mov call fs roll outsl push cmc cwtl pop enter je adc sub sub cmpb or test repz and mov in (bad) int in inc nop or add lret jp add cmp mov cltd jno add bound push dec or (bad) sbb mov or sbb mov scas or sbb sbb mov lret and or cmpsl adc insb and adc pusha add push popf and mov and add pop or cmp fsubrs xor push push frstor jo inc stos push mov (bad) and test xchg pop or pushf rcll and add (bad) inc adc add rorl lods fcomip add call (bad) dec clc add sbb mov in mov push call loop mov dec call std lea cwtl pop or pusha mov or pop (bad) ss add in or sbb add and cmpsb cltd in inc or negl sar ret pushf fisubr xlat and add xchg mov popa inc (bad) cmp stc jg or setb and loop loop dec mov je xchg cmpb daa add movsb mov sub icebp ds jbe enter add dec dec nop and test out pop pop inc push pop mov loopne shl lret fs pop xchg shlb xor push pop (bad) or pushf inc jne repnz xchg add push lds popf aam pop jecxz and aas int lock orb adc rolb inc push inc pop add in jno xchg lods les fsubs or jo or fcoml xorb pushf add js cld push sbb mov lock inc dec xchg clc lret pop cwtl pusha scas out add push dec je cmp es cmp jmp and adc inc pusha repnz add mov in inc or out and lret rorb jo sahf nop jle int3 push fdivrp divb pusha inc pop daa in out std add jns add lcall cmp faddl add aaa lods mov dec fadds cli cmp lret sbb cmp add fmull lret push dec dec jno add enter out mov rolb xchg cmpsl scas popf in add ljmp mov or xor inc adc cmp push inc xchg and test call (bad) ficoml adc sub cmc sarb inc xchg les cmp pop pop ret ja pop rorb jo xor pop aam hlt js xlat inc inc and rclb sub repnz movsl int and clc push xchg enter sub ljmp stc add pop mov cmp js add and adc push int3 and inc test xchg (bad) xchg mov or xchg jmp mov cmp dec mov inc and push mov and xor sbb xchg (bad) adc push (bad) (bad) jo or or loopne shll and popf mov les and mov dec (bad) inc pop outsb in xchg adc sub and loopne and aas in icebp movl lsl mov dec addr16 mov shl xlat cs mov rol movsb lahf fcompl dec mov and and add sbb imulb jb adc fs pusha loop push or jg mov xor mov jno sbb cmp test ret add lret and push fldl pop sub movsl dec mull mov jge add and popf ficompl cmp lods jne mov cmp inc jae out mov (bad) jne jmp pusha mov adc rcr fcoml les data16 jno pop or sbb dec mov in daa loop pop sbb or adc push and push adc add out int aaa test cmp lods (bad) (bad) mov pop pop cmp inc xchg leave scas dec jle xor shrl out mov inc sahf lock sbb push ja jno clc xchg int rclb jmp lods ret or add jg movsb mov and out xchg lahf addb rcr xchg les xor movsb add adc rolb test sub mov jae or fs xchg int orb (bad) mov stc inc pop inc mov in adc inc add (bad) sub fisttpl mov mov mov mov and jmp dec hlt ret test mov loope je pop add cmc push pop test sub fadds and and movsl cli jno ljmp shl adc mov ds test cvtps2pd and jp loopnew and mov decl add fwait xchg loop jnp jo or test inc jno es sbb mov dec jg sub cmp inc fisubl mov lds fnstsw dec aaa mov rolb outsb les incl cmpsl (bad) popf test add sti mov and mov cld mov push lods fs (bad) xor jbe sub addr16 adc and inc rorb icebp mov add adc inc xor jno mov pushf shrb ljmp mov adc pop jb xchg int bound inc add loopne rcrl cwtl adc adc daa rolb mov shrb movb or dec jge aad nop cmpsb arpl (bad) imul jg push addl sbb mov mov (bad) push jns mov fs mov sub or push or pusha xor adcb stos sti test lahf mov adc int mov add test (bad) cld cmp in das fldl dec and test dec (bad) shrb dec lea sahf pop mov pmaxsw iret jmp out je ret pop subb cmp test aad pop ficom scas add jmp pop sbb xor loopne add sbbb mov fwait insb pusha mov mov jecxz xor lret repnz xor push mov je (bad) mov pop subb rolb pusha loopne pop addb add jne ror pop mov xor xor pop add loope movsl lret lea lods inc mov push das dec adc in and jmp lock pusha fdivrs mov inc mov mov orb fucom rol jl dec loope pushf test jp jmp mov out adc mov pop cmp call sti call jmp cs aaa dec imul lds sbbl mov push ds lock xchg cmp insb lahf nop and cli add pop out sub pop xchg inc add pop in jecxz popf int push and fisttpl aad or cwtl js inc xchg sub cltd enter mov or rorb lea cmp cmp or les or (bad) (bad) mov push adc cmp in sahf sub pop add pop int fadds sub push add and push or lret push je popl xor mov add call xchg and scas jl es and or sbb xor push lock dec and or roll int orl adcb push clc clc cmp push nop rclb rcl push mov das stos aaa xchg add mov xor movsb das or dec int3 pop shlb xor mov imul xchg sub out ror or fimul cli xchg and xchg xor test cmp push mov roll mov xorl push xor pop mov jmp adc push sbb pop es lock xchg mov inc in jle adc xchg fwait movups outsl mov mov call push scas add (bad) sub jle and lahf ljmp mov push xor pop inc divl mov xor sub lods add and aam nop mov cmp push movsl pop or fwait js sub xor inc cmp inc rcll adc sbb icebp call imul adc adc das mov and pop jmp cmpb test adc xchg xrelease pop lods loopne loopne ds or dec and sub xlat jp wbinvd repnz sbb cmp add jmp sarb jecxz sub insl loopne lds mov add pop mov cld and push xchg jl in addl xchg push out test adc pop stos lods xor cmp mov rclb pop jmp or ss hlt add adc rcrl jl pushf dec sub ss add lahf sbb adc jbe sbb rolb or sub aaa cmp sahf cmp lds push sbb cmpsl jge cmp lods sbb shlb stos xchg sbb fist inc mov in sub mov fiadd je add xor or pop cmp adc mov sbb sbbl dec and test push movsb test ss fbld test mov mov mov sub clc dec mov movsl cld jnp lods mov je push dec or sub cwtl jg inc push and pop repz pushf add (bad) jbe sbb mov mov and loopne imul aaa js dec and push rcrb push add dec cmp mov lahf (bad) dec push (bad) mov pop push mov clc cmp and adc popa xchg push into inc inc dec adc sbb ret adc jns out test sarl jnp or or enter les fstpl mov mov faddl repz popa mov push add and cmp and movsl and push (bad) dec add add int3 cwtl inc xchg push fldenv test cmp xchg xor loopne xor fcoms inc or sub adc adc pop lods inc xchg ja (bad) xorl add xchg cmp mov das xchg js xor roll cli or add xor and in push lds testl sub push movsb mov xchg and call ja shlb or adc add scas ret stos mov insb and loop cltd les aad adc stos push cmp add add push js loope xchg lock push lods mov scas int3 xor in je and add mov jecxz pop mov out repz pop mov mov addl imul lock test movsb pop xor cltd jg jecxz cs mov xchg ret push push fstpt nop in fwait mov nop sbb push dec sbb pusha imul xchg (bad) xor add cwtl xor jmp and shll adc andb outsb add cld mov add mov and mov mov cwtl xor or sub test lds out sub mov add call xor sbb rcrb aaa fnstsw andb movsb es cs push push add hlt lods (bad) cmpsl (bad) adc push enter lock rclb push cmpb dec lret popa sbb dec outsl xor add stc jmp repz movsb or cs popa scas push inc test lods jge sbb pop repz sub add mov sub or test sub mov nop pop sub add jne push cltd (bad) fwait xchg adc fildl js fs cmp dec movsb repnz cli mov sub test ljmp adc or cwtl stos test mov stc push push push loope lods imul scas mov sbbb (bad) ss xchg nop adc mov push xchg add in test pop (bad) mov sbb sti add aad nop or loop movsb pop push stos bound lods pop mov lret fmull jmp les cs xor inc (bad) dec xor mov inc inc inc std popa cmp mov mov mov ret fs setne lock es mov mov mov and mov cmpsl lret aaa push (bad) shrb flds add push stc sahf add xchg loopne or fdivrs xor adc dec adc or cmp clc mov and cmp pop mov rorb jnp into mov add cmp out sbb push xor call nop lret and test inc loopne pop add push sub stos hlt ret inc and sub test xor jle loopne,pt xorb pusha mov add outsb int mov orb add es mov lds pop jne pusha pusha and lahf (bad) hlt movsb mov fwait imul sbb cs lock cltd xor or add cmpsb xor sbb fs loop or loopne and lods sbb movsl repnz in pop and inc loop cltd popf mov pusha (bad) pop jl in ja pop add cmp movsb stc push cld cmp in and mov sub and mov pop push jmp aas and jl sbb fist add jo adc movsb fst xor mov mov clc adc push jno sub stos rorb fistpl aaa sbb inc sbb mov xor ret stos jmp movsb or sub jnp hlt push in (bad) fcoms xchg cmp adc sub loopne stos out jmp pop jno es and loop scas inc mov add pop pop cmpsl sub aas cwtl call mov movsl and jl ret je cs fs test mov xor or shrl stos cld test je adc int pop (bad) xor pushf add test push inc cmp inc or push aaa push lods cltd mov push aam dec (bad) les lods mov sub or es leave rorl add xchg xchg mov cmp fsubs cld (bad) and pop dec mov push cmp outsb adcl jmp int3 notb xchg test repz xor lock or (bad) jne pop (bad) fild into push lock mov je pusha xchg mov push sbb push jle and stc pop sub push adc loopne push jmp jo pop (bad) (bad) iret jge add add mov inc addb ds pusha enter inc mov sbb je insb pusha xor pop mov mov add js pop rol hlt mov add mov mov je mov or test int3 inc inc inc jnp cld lods mov sub repnz test xor add cmpb js aaa cmp test fsub add clc cmp pcmpgtb adc mov push adc inc push pop or adc add pop jmp add movsl or nop mov je popa lds add jae mov add (bad) fistp in stc nop pop (bad) xchg insl sub sti pop daa inc xchg cmpsb cmc pop push xchg lcall mov or sbb mov mov mov mov fs xor (bad) xor rclb mov repnz leave movsb scas pop shlb imul sub addr16 xor add push mov int sahf jo clc movl std mov mov addr16 pusha popa add les lcall jmp pusha mov sub cmc ret xor xchg xlat xor pusha adc jp in lock add mov dec int3 dec adc inc sub pop add jo cmp pop es loope lods pop xchg adc loopne movb lahf rcr fisubr in pop sarb je fldt jecxz adc enter jne testb xchg shrb nop dec dec shrl nop aam fildl jo cmp add push inc xor imul nop jbe dec jl push dec jp cs add sbb push xor push inc push or sbb into mov aam inc mov add incl in sub dec aam or test xchg call push gs dec adc inc pop xor add gs mov mov orb xchg mov inc xchg push cmp lahf or dec rolb ficoml push scas add jecxz xor out and sbb add sbbl inc jl mov sarb push mov or add cmc inc dec jecxz es jo xor adc jp push xor js dec inc loope push aam hlt (bad) iret cmp jecxz mov roll scas adc pop xor std out aam push pop and pop inc iret or sub outsb pop cmp enter rcrb (bad) lret pop cmc pop mov fcoml addr16 sub push insb scas aaa pop in or mov mov dec mov je repnz and sti push mov push nop add loope xor dec fcmovnu mov mov xlat aas pop cld pop aad add jl (bad) cltd call arpl add dec sub ss mov mov subl movsb (bad) or add enter fsubp mov jmp mov and or es sbb fwait lds out cs in das mov jbe ljmp movsb fsubs jnp adc shl stos and mov inc and mov pop adc in xchg and push adc inc push or ret xor and dec clc add mov das cltd scas dec aad xchg xorb iret push es (bad) xchg fsub test inc push test mov pop mov push cld mov add test es add mov aam and cmp fsubrp pop sbbb stos mov inc xchg cmp ficoml movsl (bad) div mov pop add adc cmp adc movsl test jns inc sbb and outsb gs cwtl sbb jle inc dec lret jl mov pusha pop pop and cli cmpsb int3 test in add inc xor call and sbb imul inc (bad) ss inc imul lret xchg xor les fcomps jl (bad) test call (bad) cmp dec leave flds jns push jno ja inc push add imul sub and nop fadds xchg xchg mov xor sub xor adc fmuls jmp test or xlat stc hlt insb mov mov in fcmovnbe cmp js out inc mov add shll pop ljmp loopne cwtl add scas mov add xor add test lock dec shld jg aad es cwtl inc jge add dec inc mov cmp cmc pop repz mov xchg sub add movsb lock enter push pushf imul repz add jmp mov les mov mov sub sarb add cwtl cmp mov mov mov loopne (bad) sbb push or lcall nop lahf das inc les sbb andl jns into (bad) ret out call adc sbb out jp xor divb jns test pop push sbb jl xchg rcr arpl adc jl adc add sbb aam jp or lock test pop mov imul loop push push fisub jl jmp cmc mov in test add adc mov adc test loopne adc pop dec (bad) (bad) lock clc dec fdivrl sub je ret pop xor and adcl jmp mov mov (bad) movsl lea out iret adc fs inc insl pop aad fs fcomps sbb gs mov (bad) lret add jo scas sbb rclb hlt insb sub or pop add js enter mov push dec ja jo pusha push lds repz jecxz sbb push push int or add sbb (bad) jmp mov pop (bad) sar jns sub adc xor push lds adc and add adcb push mov dec dec mov and aas add popf push les aaa jae sub dec cwtl mov pusha outsl push insl pop cmp add loopne scas lret mov xor (bad) cmp out (bad) lea sub adc pop imul test push and pop je aad cmc cmp and push shrb mov fwait cltd adc xor add sub fmuls ficomp push mov loopne xchg ljmp mov movsl sbb jl add test adc dec mov adc js jnp icebp add lods push push fildll xorl push loopne sbb dec sub in pushf cmp mov mov test je or jns jae ss xor pusha and adc (bad) popl xor into xchg mov les sbbb inc pop (bad) lahf daa incl mov mov test inc xchg push cmp cmp mulb sub hlt or adc nop sub nop inc (bad) push roll inc enter dec aas mov fdivrs sub sub clc and pop pushf mov xor inc (bad) or add stos dec mov clc and xchg lea pop in (bad) dec adc pop bound dec adc mov pop fs inc sub cmp and adc jne cmpsb push adc sbb dec xor je std mov mov ljmp jo loop subl (bad) xor dec mov sbb cmpsb jp in xorl sbb push sbb or pushf dec cmp pop cmpsb call push popf out test push add inc sub pop fwait jmp in call loope inc add imul mov inc lods xor daa int pop clc xchg mov loopne clc jo lods pop adc test iret add ja push inc loope fs add or dec add dec xlat fbstp inc cmp cltd adc popf jne cld sbb adc mov jno push cmp pop lcall seto xchg jns je icebp movq int3 xor subb or pop inc sub nop add and mov adc and pop pop mov and repnz add cmc push add mov fs mov out mov clc sub xor out fs dec or jbe jl mov push fwait iret sbb sub mov jl mov push mov sub mov addb je push sub (bad) cmp out xor cmpsb call adcl or js cwtl mov add pusha dec pop test fs xor inc out in xorl jp adc inc fldpi cmp xor or repz cwtl fs adc or sbb test hlt sub out cmp add jle fist adc aam nop sar push in rcrb jg inc xor push or sbb mov jo mov aam or cmp jne jl mov adc xchg sub (bad) data16 and divb lahf cwtl inc ss (bad) mov xchg (bad) xor imul sbb add mov dec call ja mov mov xchg add enter mov enter cwtl (bad) mov das inc fs (bad) mov js and xchg or jo sbb mov and fsubrs mov popf ret pop push mov sbb lret sub aam and fsubr mov mov dec mov das sbb (bad) pop stc nop cmp sub sub das (bad) popa (bad) fistpll cmp fadds jns cmp mov rol mov cmp (bad) push mov push dec or dec rol mov push out fs xchg dec pop or add push rcrb cld inc test (bad) lret in loope cli jmp jne int3 ds cmpb daa aad ja sbb stos mov ret pusha lret cmpsb jmp sub xchg mov xorb sub jl mov xchg adc push cmc loope stos adc lahf adc sub outsb add outsb push mov fwait js movhps xchg jbe cmpsl in cmp fsubrl inc ffree mov mov arpl (bad) aam xchg jecxz pop or sbb xchg adc aad and loopne sar daa fadd xor or sub push int and bound jl hlt negl xor mov subb or xchg fucom adc mov jnp test (bad) hlt or cld in fidivrl sbb ret lods cld mov test inc dec repz aaa pop cltd js push add dec test adc test in add xchg adc mov push jo pop xor frstor cmp push xor mov cwtl jp add test or xor in fiaddl int lods jo (bad) mov push andb jge mov jo or and sub test sbb pop cmpsb push clc jmp repz pop add sub call xchg je add fsub repnz mov sub pushf cmpsb dec dec lret sahf xor mov push dec xchg adc mov pop into push pop rcrl or cmp sub popf lcall inc call repnz and in mov mov mov adc pop mov loopne and ret pop mov inc add hlt add insb sub and and sahf mov arpl add call jo test js jg and sub shrl test popa pop and repnz gs cwtl hlt xor popf cmp rclb jmp dec cmp xchg mov adc push test cld cmp jp daa mov pop stc mov dec inc js jp xchg mov scas jle nop sub pop xchg les mov pop push in xchg scas or movsb cmp mov or and jmp push sub add cwtl std in dec sub inc or sub add add sbb jp rolb inc xchg cmp js lods mov stc imul lods cwtl cltd add scas dec ret mov pop mov dec add scas in test xor dec add cltd hlt sbb (bad) pop test fmull adc dec sbb add add popf push and aad rolb add cltd enter clc or dec adc sbb addl and pushf mov in les and fldt orl nop push shl pop mov dec mov xchg lcall adc inc cld add cli test aam nop clc repnz (bad) mov (bad) mov popa xor mov nop test mov and aad lret or sbb mov bound cmp mov and loopne mov das mov movsl js mov pushf sub add adc or sti je rcll inc loope pop pop test in rcl jns mov pop add inc xor fwait xor adc lods test fdivrs or sub xchg outsb fcompl inc (bad) xchg inc pop mov ss je les int aaa pop adc fcom inc out xchg adc pop rorb mov xor (bad) jo push adc mov lock sub mov adc test mov das sub sub jge pop mov pop test add (bad) push xchg sbb shl and cmp (bad) fmull ljmp xchg (bad) (bad) adc pop in imul or scas nop fmull pop dec mov arpl adc xor popa jb nop cwtl mov push sbb insl dec cmp movsb sbb lds sub push jbe cltd fs xchg sbb (bad) fdivp dec outsb push add mov cmp or fs cmp xchg sbb shlb mov sbb test fisub or cmp stos clc xor (bad) pop stc insb adc xchg add leave daa add push popf sbb lods dec xchg sub push out mov jbe cmp ja out fdiv js push das or fisubl and in xchg cmpl cmp or test inc add inc clc orl jl movsl push jl lods movsl aam imul std vphaddudq fs mov adc xor call lahf out dec mov push cwtl repz cmp addb xorl movsl aaa andl dec and lret cmp pop fadd inc test xor fisubr mov in cmp in stos dec arpl das sub inc cmp lods cmp jo fs movsb in add cmpl mov mov jbe mov jo shr imul dec inc test data16 mov push or dec mov sbb pop xorb pop mov inc or cmp out hlt xchg sub in add dec rorb movsb ljmp adc jmp dec subl xor lds rolb bound lods (bad) xor test add scas dec and hlt shrb (bad) loopne mov xor mov and popl mov xor cmpsl and les adc adc mov andl popf add rorb sub mov pushf add push push shrl adc call cs pusha popl cmp ja jo repz addl or sub std add add jnp sbb test add cwtl sub push loop pop rcl add pop scas movsl mov clc (bad) fadd cs inc push adc std loopne push fcomps mov aaa into lret clc pop shrb ds loopne je lret jmp xor add xchg mov (bad) loope push mov dec pop inc addb (bad) cmp popa add scas out fisub or mov push pop dec lock cmp imul (bad) lock xlat add mov sbbl add xlat stos mov stos aam pop ds cli cmp cmpsl test stc add add cmpsb mov cmp push (bad) repnz dec xchg outsb sub mov ds dec mov aas addl das jle fwait xor jno scas cli jne xor sub push or ret movsb aad les int xchg sbb mov js xchg cmpsl sti es add adc lock adc pop dec add sbb xchg (bad) jmp xorl mov lods jmp mov add gs mov lcall xchg lods or dec adc cmp test daa add in push lods movsb add pop pop in pop push adc push xor add lods mov add adc push cmp iret lret inc int mov mov and insb fdiv mov adc insb dec mov add sahf xor aam add lock xchg movsb adcl (bad) cli and aas xor inc lcall xor xchg into popa inc push test cwtl add mov cltd mov adc stos jb add push or cmp inc add pushf je (bad) cld ss mov adc add or cwtl nop call and push fidivrl mov dec push mov fisubrl inc les cmp xchg adc xor sbb lahf cmp (bad) call add adc lock mov (bad) lock add adc test clc leave add js mov dec int3 inc mov lret lock hlt jl mov fsubrs les ja mov stos call add lods loop shlb out sbb add stos pop mov jl push out dec inc lock or sub xor mov in sub icebp stos pop movsl int3 js dec lret jle push add lds push adc enter xchg add mov pusha cmp lret ljmp enter cmp push jno and cli pushf xchg pop or lcall rorb (bad) movntq iret out mov lcall adc xchg inc dec push sbb (bad) int loope xor mov jl fcmove push add adc push and and clc adc out push clc clc jo or test enter test push xor mov in or pop loope or sub add std cmp add fimul pop stos add cmp aam in insl ret xor jae pop xor (bad) sub imul push scas out (bad) mov add mov mov add push ret pop pop je add mov shrl add ret fnsave and (bad) xor sahf in out add xor sub fs adc lods lock out add push in fadd popf add jno loop popf or sbb or es test jo movsl clc jnp rolb nop or sub es push cld cld add xor test add popl mov sub pop in imul mov or add ror ret call mov pop pop inc push lods popa xchg xor jno jle cmp stos add cwtl sbb jge movsb mov icebp sbb xor clc or mov inc push test add or test imul sub aad sti adc out jno or jno mov (bad) mov movsb mov test add pop mov in push icebp test pop fwait push fldcw cmp dec adc pop or rorl lea cmp or int3 repz out sbb loopne jp cld ret xor mov dec loopne pushf sub cltd mov cwtl pop ret fcmovbe add outsl fwait or inc pop add rcrb cmpsl pop jl pop cmc jecxz xor fisttpl xchg cltd push add inc mov adc xor jmp aas inc faddp clc jle movsb dec int3 xchg clc mov add fisubrl dec rcl cmp cwtl sahf roll (bad) xor hlt jmp pop enter pop add sbb in aam inc shrb push ficom fsubr and in out add pop lea test aad enter mov int inc add enter lods add int3 pop pop dec movsb pop push and push dec clc or (bad) jo or cmp rolb loopne jp add xchg cs movsb xchg cli orb jle scas or insb aaa and jp dec adc sbb adc test sub push push out mov fdiv mov adc insb jno and jge cwtl lahf shrb add out cmpsl xchg stos mov and and daa mov inc in test sbb cmpsl nop dec sarb dec or test mov andb and fwait pop dec fdivs mov mov xor push out and and aad sub cmp int3 test xchg mov add push nop cmp cwtl cmp cs in and dec sub leave sbb aam cmp les sahf lock push rcll add ret test push push xchg fldcw ds and inc mov mov adc lods fsts jo push sub lods cltd popf lret test les aam faddl mov mov ret divl and inc dec rcll xor xor in or dec pusha out daa push sub loop jl cmp ret adc lret sub mov loop add sahf jno js shrb movsl inc in jo push mov or mov mov xchg add xchg mov cmp dec push into mov pop inc les xor xor jns adc add gs add mov cmp fild pop adc mov ljmp fwait dec push aam aas push insb nop into daa adcb mov push dec xor shlb (bad) mov sbbl add test add jae loop mov subl stc in aam movsb and je data16 popa insb jg fwait cld inc cmp mov rorl out xor movl popa fsubl sbb mov adcl xor inc xchg push loopne push cmpsl and jb pusha int std push out xchg (bad) cld add cmp adc scas leave cld and dec stc scas ss xchg cmpsl int3 mov xchg pushf add cmp push out (bad) fisub inc jns add xor jmp (bad) hlt pop and jo lock lcall add imul cmp in fstl mov clc dec mov sarb andl adc dec enter out cmp insl int3 lret sbb dec adc cld lret pusha xor pop and mov add in ds aad out add jnp push cmp cmp pop cmp int3 sub push enter (bad) stc dec aam loopne xchg dec negl sbb sub (bad) les pop and add mov sub push out movsb movsb test pushf mov mov jmp jae adc test movsb lods mov rorb mov push adc add clc repnz dec add stc lcall fwait mov iret mov adc cmp (bad) mov lods loop sahf or mov pushf repz rcrl add lock mov movsb test outsl dec dec adc rclb and hlt mov and xchg or lock into icebp and jg pop outsb imul jb cltd sbb add push pusha sbb arpl movsb cs cld pusha or sbbl lods xor push dec inc mov nop enter sbb mov xchg add mov jno stos xor xchg hlt or les push sarl or jo in xor sbb shrb or lcall add cwtl mov (bad) mov mov lods sub stos mov cmp adc xchg lods popa mov mov sub xor xchg leave in sub push fstpl adcl sub fwait mov mov sub int fistpll lock mov aam les sub and mov movsb jnp int3 dec and popf bnd movsb ja les (bad) cmp xor or xchg pop jecxz (bad) or aad lods and in or sbb push mov dec adc daa lods and mov lahf add mov pop and scas or nop cmp pop faddl stos mov pop aas mov mov insb cli jl stos adc ret or mov or jns aam scas enter stc cs or (bad) rorl rolb loop dec mov sti inc dec add cmp lock adc pop cld add lds rorl popa outsb cmp call lods pop rorl or loopne in sub jl jmp mov push sbbl movsb add stos in mov orb cmpsl popl xchg leave fistp and cmp add arpl add mov inc push ljmp mov hlt or adc lods mov mov add repz and mov push aad or es xor pushaw daa and sbb xchg je popf mov fimul sub jbe fwait add sti rcl sub mov jns sbb and jns push adc pop (bad) and mov shlb add aad pushf ret (bad) mov movsb sarb push push or adc push add dec mov xor imul sub xchg add inc cmp push and cmp xchg insl xchg (bad) hlt pop sbb mov ficompl les mov sahf jns daa jnp lods mov or loopne je dec pop mov mov cld adc jnp pushl clc or or mov sub in fcomps inc pusha jecxz add mov (bad) jge inc add sub mov cmp sub mov mov dec sti inc out dec loope sbb or cmp adc push xor mov sub (bad) movb pop daa cmpl pop xchg cmc push mov movsb sbbb cmp xchg pop mov or mov push add pop xchg (bad) test bnd fcomps test xchg mov sarl movsl nop dec subl das lret add lret popa lcall sub pusha xchg sub push fisttp stos popf push dec add xor xchg xor pop mov js lcall push xchg push mov psubusw cwtl popa mov or es xor mov int mov fldl jbe lret cmp repz sti push fidivr mov lret in mov add jae bound jbe lret in mov xchg add iret mov in add aas xor mov std fmuls add xchg cld mov jno fdiv arpl js imul or (bad) lock pop inc negl movsb fsubrs cmp mul mov das add mov add xchg cmp add shr das inc xor push clc sbb jo add mov mov sub sub xor adc sbb cmpsl pop call pop pop gs add stos mov mov lods xor std sub xor pop stc sub mov add aad daa add (bad) xchg xor xor movsb mov cmp (bad) mov scas push nop adc fimull pop hlt or pop mov push addb scas ss add (bad) outsb dec lock cmp dec push stos adc jbe xchg (bad) stos repnz cld mov or sub push rcr cmp (bad) imulb sub push pop in lods add cmpsl test cmp pop icebp cmp xor test int3 or je dec dec je mov movsb xor mov cs inc or cs push dec jl pop or xchg ficompl insb cmp add enter hlt pop mov and add xor xchg aam fs xchg mov sub or int3 dec jns dec int or cmp xchg push adc cmpsl sub mov cmp adc das add fidivrl mov fiaddl fdivrs push sub add pushf mov adc or xchg xchg push pop cmp mov sub fidivrl cmp movsb xlat jae pop lds push icebp cltd outsb xchg fcoml lods fadds sbb mov das cmp cltd jp inc pop les pop ret lods stc scas adc inc mov call cld adc lds aas jp inc add add clc aam nop sahf (bad) pop cwtl arpl imul fstl js mov in dec iret adc fnstcw js dec jbe pop sub nop movsb int add mov sar out icebp or in push mov dec (bad) adc cld add cld add xor (bad) into insl aam popf fcomps add and rorb jae mov loop js testl test lods mov mov jbe inc out scas mov dec add jecxz adc loope stc cwtl mov mov sbb (bad) mov movsl pop hlt and mov or jne test pop sub movsb icebp enter lods inc aaa or loope sbb adc leave movsb fdivs mov popa sti movsl addl loope and mov mov sbb add lods cmc repnz add xor testl lods sbb int3 aam aas lahf xchg sub fildll fdivrs push in cmp ret adc lods mov add mov sub pop movsb add pushf mov and fs mov or sub dec xor cmp jg mov push cli pop add dec ss pusha das xor test xlat cltd jmp (bad) enter add sbb xor sub (bad) pusha add sbb dec ret jbe xchg xor (bad) mov test dec cmpsb jl aaa test je (bad) dec push xor hlt inc das and leave test insb test xchg adc idivb mov mov xchg in sub and dec nop sub and xor xchg jnp loopne adc aaa mov jp push pop xor insb les cmpl pop or mov push sarl pop in sahf mov and xor scas inc mov sub loopne pusha nop fisubrl jle test (bad) xlat adc aam lret mov sarl movsb es cmp cmp add insl std push ss iret jle mov and cmp inc out loope dec cmpl aam xor mov fnstenv (bad) dec ret ljmp add adc pop imulb xchg imul into adc in add pop sbb loopne test mov jo rorb es dec mov fimull mov movsb dec fldcw jnp xchg adc sub inc lock (bad) xorb orb cld (bad) daa mov (bad) xor aam jo jb popa xchg lods cld mov shlb icebp xor sub xor stos das js fs das or xor push cmp (bad) push sub xlat cmp daa (bad) ds mov das add inc mov int3 adc xchg push mov fs jne mov mov add xchg xlat lahf add jne add xchg in leave cmp loop loop mov pushfw je push push out sahf flds cmpsl mov add arpl decl jne addl adc ficoml sub movsl movsb pop cmp ret pop test add in rcrl rclb add icebp outsl xchg add fstp (bad) lock leave push xchg outsb or icebp ret dec pusha inc add cmp lods sbb outsb xchg stc mov adc les pushf add adc mov mov cld movsl cmp mov cmp aad outsl sub lcall out or xchg xchg insl sbb loope in fucomi mov hlt stos mov mov dec push push rorb dec and in add sub scas inc fsts orb mov sbbb cmpsb sbb jne popf xchg push or pop mov inc pop add inc push pop int rep int3 add enter cld aaa xchg sbb sbb add push adc sub fnstenv xchg (bad) js sbb loopne iret and push (bad) in add mov cmp inc jmp mov pop mov or lods push (bad) insb rcl in xchg imul dec loopne jp shrb negl test push xor fdivrp add mov clc pop cld mov stc and xlat rolb fdivrs cltd sub mov outsb cmp adc fs mov paddusb mov jo test popa sti and inc or pop add sbbl add add cltd xor pop inc mov (bad) repnz adc push lea push jge out pop add fwait sti repz sbbl test iret jg (bad) outsb inc in (bad) loop add mov add push rorl mov pop and sbb inc cltd aam (bad) xor sbb ss inc enter push push dec rcrb or xchg push push into dec dec nop xor pop jo (bad) jb and xchg (bad) repz cmp pushl inc test test mov inc std jg cmp jno insb pop imul test jle jmp repz test cmp xchg mov jne cmp add lret jmp and stc aas loop add push jnp or test in cmp ja inc or test mov inc sti insb test and adc adc xchg ret call mov jl xchg inc test sbb cmpsb sbb test fsub mov push adc int3 cltd pusha and pop dec add andl pop (bad) mov mov inc in jecxz jnp add cmpsl mov push insl out and inc mov roll add jo add test xor xor out add cs stos scas fs mov dec negb cmp test xor je outsb movsb sbb cmp out adc push adc fadd mov mov add pop mov loopne pushf and pop sub sub aad insb mov dec andb jp add lods dec test movsb fist test fdivs subps mov xchg mov insl xor cvtdq2ps adc lret out push scas mov ret loopne daa push pusha mov das out ficoml jge add sub jo sub add pop add cmp lret xchg jne add dec mov sub jg mov dec test movsl inc lret movsb jg mov xchg icebp add mov (bad) sub mov ds pop cld mov pop mov mov in xchg and inc cli fdivrl add adc dec cmp sbb pushf call dec mov xchg mov add jne adc add sbb or lods push les sbbl out add add xor or push adc pusha aaa int3 mov push popa xchg cmp fild add and mov adc (bad) cmp jg mov inc int3 scas fwait push sbb popa cltd jg add std sub cld in jnp push fsubrs add (bad) in or pusha popf jp xchg pop mov loopne leave sub push xor cmp jl sbb lcall movsb je add out std fwait hlt mov js adcb sbb repnz lods push inc xchg jbe sbb adc mov (bad) xchg cltd cmpsb xor push and inc pop imul sbbl adc out xchg sar add inc add xor call adc movsb sub das movsl jmp in inc rolb mov nop adc insl and jle add icebp push adc jl add scas dec pop jae xor std enter and push gs data16 mov call and push cmp popa ss add les mov lods sub pop ljmp bound mov push ja enter add add jmp and pop subb cli add gs add jg xchg outsb sub add mov cld scas xlat out pop xor jbe push mov jmp rorb movsl (bad) fisub imul add clc pop xor sub add lods ret (bad) jmp inc push xor pop pop push out nop mov and xchg mov mov fild push mov daa jmp mov pop pop stc faddl aaa push and xor push fwait mov jge imull lret add aas add adc fcomps clc add in xchg jge out add pop int3 cmp add (bad) testl repnz mov jg fiaddl mov test icebp pop jg stc jb sti inc test or aaa (bad) adc rorb push pusha xchg dec add es std inc push roll sbb lahf cmp add popf fidivr in mov sub mov inc lret mov mov lds sub cmp inc test jmp sub sub lea int3 push push rcrb stos mov shr or fcoms rolb aad pop lock add jmp xor jo notl (bad) jmp pop scas test mov mov fistpll repz fistl mov dec stos adc push inc mov xchg (bad) xchg es jge and icebp adc or (bad) mov mul mov push add cmp lds ret insl mov and test mov xor js inc mov sub sub rcrl imulb pop jbe inc push (bad) shlb (bad) aad jns xor jb mov cmp dec jns sbb lock mov (bad) mov or mov xchg mov sub and sub push pop outsb mov jmp mov jbe ret pusha lcall push (bad) ljmp aad xor std sub jge or maskmovq testl cwtl mov fbstp inc sbb daa xor mov sub nop lret adc fneni(8087 outsb aas or imul or sub push cmpsb sti jp lea add outsl xchg jo mov stos mov push adc add sarb add int nop cld das mov cmp fdivrl mov sbb push inc sub and shrl inc dec je add test loopne sub int3 or adc mov in mov add popf add mov int mov in mov mov mov in or nop adc xor (bad) loop jmp icebp dec push scas shlb aam xchg pop xor sub ficompl jne and cwtl test xchg xchg sbb sub and xorl repz push aas test push std xor push pop popa adcb inc lcall jno in mov adc pop add pop out fs jecxz mov add xchg icebp lret sub in or int add push sbb jne cmpl or rcrl or dec xchg cmp and fcmovb sbb and mov push push sbb bound jno aaa fwait in xor mov push cld int adcb sbb insl and movsl and push stos dec and and shrb xorb or jb mov in int3 sub mul mov aaa js ljmp ret xchg xchg leave adc add xchg in dec les xor xor xor sub mov je cld mov pusha adc popf fldl dec adc add out cwtl cmp sbb mov xor push and cmp adc pop jb push xchg loopne inc mov sbb bound and and jbe fwait push sub or and or (bad) movsl pop orl and push push add xor dec push mov out pandn mov or sub cmpsl popa push arpl leave les pushf push mov outsb jmp std inc xchg mov ror jmp (bad) mov cmc dec (bad) out jle push mov pop sub hlt sub xor xor fs aam adcb dec jmp popf (bad) push push inc lcall in mov int3 sbb mov and aaa or pop push (bad) andl lea push cmp rclb push mov test dec or pop ja mov (bad) outsb loop enter add xor sarl jo fistpl subl gs ret push jmp mov pop add dec maskmovq notl add jo jp mov sbb cmp pop test adc (bad) add pop std loop out xchg testb pop stos inc and pop push pop jp inc xlat inc int3 mov hlt or lahf adc add (bad) ja xor dec sbb loop (bad) jmp imul cmc out push pop sub add xorb cld sbb xor push sbb mov andb push sahf push je fs mov daa pop or and jmp stos cmpsb stos js cmp jecxz cmp jg sbbb mov in jmp xor pop xchg push cmp xchg notb iret adc or out jge pop xor mov pop lret leave xlat pop dec add add pop mov xor or xor dec mov pop iret int3 dec add aas out loop and lods mov mov push and mov push xchg pop lock pop push xchg fidivr cmp jnp sub jmp push in out cmp fimull jo mov outsb fimul push les dec pop jg push mov add jb insb inc jmp mov and and add rorl test das xor push rorl xchg pop add and jle or and push push mov mov sub lock mov clc mov push or or call cmc gs sub movsb and daa jne inc jno add test or jecxz sysenter sub push or inc repz pop xor ret bound faddl clc ret mov bound inc or xor (bad) jg cld ret dec pop pop sahf push lret shl and insb (bad) xlat pop pop insl aas add and sarb and pop div pusha ficom lods dec push outsl xchg pop mov jb add aam jno ljmp test loop sub repnz out jp or outsl (bad) jge jo daa pusha add and icebp add lock rorl stos aam sub jnp pop dec pop add iret out sub mov push mov insl and lds jle xchg pop or xchg add lock lahf pop sub inc xor jle std jp adc pop es sbb stos adc cmp das lods negl aaa gs xor xor (bad) pop scas mov mov mov das outsb notl shr movl scas sbb mov pop cwtl mov inc inc xlat inc push ret or add rorb sub in xor and jmp repz pushl mov pop pop popl push pushw or icebp pop mov mov adcb push shl sahf push lcall push push stc lcall mov pop pop pop clc sub or fs sub cs mov sub gs mov (bad) xchg push fistpl push push xchg pop les jmp sub dec std inc dec mov cmp imul lock jns jl add inc mov push js jge mov mov jl mov sub push and pop xor jmp add push jmp cmp adc or sub sub mov je mov push ror jnp adc cmp insl mov cli loopne push xor or test sbb test leave sbb in mov ficompl adc jno add jno and mov pop xchg push jle push xor mov inc inc dec out gs add xor scas movsl mov add mov jbe push jmp pop lcall rcrl cs xor dec and out add sub or andl pusha incl rolb fnstenv enter cmp or mov flds xor ds push push xchg insb out mov into or (bad) adc repnz add xor stos movsl pop sub js dec lds pop xor pop add mov mov out mov pusha loope inc dec stos jne sti aam push das pop push sbb insl pop pop daa or add jb mov inc or xchg or lods push nop push rcrb sbb push (bad) ds xor imul push jg and push std out cmp leave iret lret outsl dec cs cmp mov jns push dec inc jmp sbb mov inc scas cmp dec cmpsl jg xor pop out out and push pop inc sub shll add xchg js pop aaa lahf jbe jo aaa shlb mov add popa dec gs jnp cwtl icebp (bad) push inc mov scas add mov and cwtl bound out push fs or dec roll out adc pushf pusha lods xor sub incb pop push popa dec test bound dec lcall cmp adc (bad) mov test js mov dec add sti mov and add lds int out or inc ret cmpsl sbb fidiv jmp and mov xor out mov pop dec jle sub xchg cwtl in push jne cltd int adc cmp sub scas sub xor (bad) jle inc (bad) dec ljmp jg dec xor imul cmpsl add mov pop push mov sub icebp mov inc jle cmp jnp cmp test enter idivl pop ds push or scas push jle jge or fsubrl das pop faddl sbb push (bad) mov pusha dec pushl pop xchg dec test and jge dec outsl sub add daa sbb sahf inc mov pop dec stc frndint enter pop sub lret pop jg mov push ja add push pusha fstpl testb test adc cld inc fistpll and adc jnp dec sub sub fwait shlb (bad) je xchg push mov jl or lea not cmc enter xor sbb sub inc mov jge cmp (bad) or ret lret push jmp jb adc jbe out mov and pusha adc pop shr and pop cmc std int3 xchg hlt lret pop mov xor or xchg add dec rcrb not shr (bad) scas xlat dec xor mov xor es shr sub es ds and jnp inc cmpsl push adc pop push (bad) icebp ljmp cltd (bad) sbb jno push jmp add push cs and xchg lods in push sarl shll add hlt stc mov pop cmp pop stos in popa mov sub and jge xchg aas test dec pop mov pop and lds jbe pop push icebp dec push pop jo xor lret mov imul in adc xchg iret mov cmpsb mov inc (bad) out sub or push pop add add (bad) lcall call test and add (bad) std cwtl inc pop ja push xor or in arpl xchg inc imul push jns ja aaa fstps pop sub xlat insb arpl imul clc enter mov outsl sbb roll std adc subl sub push xlat fisubl push rcpps push pop pop not dec (bad) dec ret mov adcl iret pop sahf xchg sbb dec push jns ds xor dec xor je mov call sbb sub outsl repnz add divl lahf add movsb in or xor sbb (bad) dec cs (bad) sbb out jo add (bad) cmc stos repz cmc movsl sbb inc cmp xor fldenv add xor jnp test pop loope les sbb mov xchg dec scas dec mov (bad) hlt push jge adc leave adc mov push enter (bad) jle adc cmp mov xchg xor and add pop call in sbb push clc pusha in or pop jl mov sbb dec adc push ret (bad) nop or test mov call fwait sub add jae sbb xor mulb imul cs out xchg mov test mov xor movsb loope inc orl scas out pop incl dec push or push jg or adcl xchg stos add jbe cltd xlat add mov repz div push add test movsl mov pop mov dec adc rclb rclb lock sbb xchg add test and dec das repnz mov mov into dec push mov dec shlb aaa add (bad) insb loopne mov stos imul outsb daa inc mov rcll cwtl dec test fcomps sbb mov and sub xchg lahf cmp mov loop (bad) jo aam in enter test dec orb arpl rcll fs orb les mov dec scas nop cs incl outsl mov sbb add and fwait jle mov cli cmpsb inc pop mov push les adc lods sahf adc and adc imul add mov adc rclb inc jbe cli pusha fcmovne cld addr16 outsb push fsubs push sbb mov push roll pop adcb pop cmc imul nop (bad) xor pop lcall sub push mov jp cmp repz mov add lret cwtl lea and add mov add enter arpl sti jns lret repnz loope les push jl inc push mov add mov inc mov adc push and shlb mov incb ss adc sub daa dec loope and pusha sbb cmp add lret jo in sarb out pusha mov cmpb nop adc fcoms les sub leave xchg inc cwtl add push cmc jp xor subl in mov inc in cmp xchg les xchg (bad) xor test and push popf cmpsb mov pop push xchg test test jg or dec mov out add pop push repnz or sub cmp xor pop addl es int3 xchg nop ja and xor mov push xor xchg and add pop inc mov push ret test and add add mov mov pop mov sub mov (bad) adc xchg jle clc pushf sub dec push test sti jns (bad) fmuls jl stos fcoml add jl (bad) and xchg arpl sbb sar adc xor loopne and enter pushf test add lcall lods mov stos push pop mov divb stos and inc popa mov les popf sub lds xchg out in test jno sbb sub mov inc push push dec adc xchg xchg lods mov lret stos sbb xchg clc lods adc jle nop push jp dec pop fs push fdivs (bad) push pusha (bad) nop push lods mov fwait icebp and add inc or sbb dec nop push in sbb in pop nop mov call add inc leave inc fwait push xor add cwtl inc in dec mov push inc xchg fwait or dec fstp mov lods jecxz std sbb add rcrb (bad) rclb or cwtl jae adc add cmp xor xor mov ret test cs pop add mov or push xor cmp movsl mov jae popf pop inc or iret or cmp xchg adc adc test je in xchg pop or outsl adc mov shrb pop mov outsb xor je insl pushf add and das nop movl cmp add xchg sbb in or daa push mov push sub inc push pop xor xlat lock pop push fs dec int repnz into cmp (bad) jl adc cmp add (bad) mov and stos sub xchg add mulb pop ffreep cmpsl push jle mov xchg mov ret mov data16 xchg pop mov mov xor mov cmc cmp pop lods icebp and notb les add sub mov add sub andb in add jae mov push movsb popf xor inc pushf cs aad or sub and adc cwtl xor sbb cwtl adc push mov orb xchg push dec cld pushf push loope inc push in pop add inc ss jo iret adc xor adc lods dec add mov and jmp lahf mov je push mov outsb ret sahf mov and lcall xchg mov mov and pop xchg das sub adc push mov rorl rcl cmp test pop shrl in mov sub push sub or sbbb or xor stos pusha cmpsb dec xor add push push popa scas es mov pop jno add inc sbb dec sub fs cld leave clc loopne mov xor movsl cmp dec jle or inc mov sbb mov stos fist out lods addb arpl lock or sbb pop xor xor mov mov cli inc iret mov mov add rolb xchg loope pushf jo dec adc hlt add cltd ffree nop fucomip jb push leave and or cmc and xor xchg loopne test sbb stos test add jae aad clc aam and dec fisttpll rcll ss jns aas test pushf lahf dec xchg inc push sbb sbb mov repz xor roll ror push dec cwtl enter jo lret icebp bound mov or dec pop mov dec xchg test sbb int3 inc fnstenv xchg sbb push inc cmc jnp out push add (bad) ds ror test cmp lcall xchg aaa in cmp add callw mov add sti dec rorl inc add dec cmp xchg add pop or or push mov add adc aam adc xlat pushf fdivrs scas mov and adc movl jo popl sub aad and ds fs ja xor xor bound pop in mov test out roll mov stos or jo pop jl dec sbb subb sbb jecxz popa add (bad) rol jge sbb pop jg and pop mov sub xor inc adc imulb mov push jnp pop and dec xchg cmp test or add (bad) cmp dec pushf dec test test push nop clc test insb sub cmp repz add xchg add and adc add cli fadds mov adc aad scas dec xor rdmsr sbb (bad) jmp cmp in mov or or imull cld fs add lret sbb cmc ja imul cltd sbb adc call push inc and sbb adc incb dec xor or ljmp cld cmp bound and push cwtl (bad) mov pusha xchg pop add int push push jne inc mov and sbb sbb adcb mov mov clc inc stc dec push mov daa inc imul sbb or lcall mov or pop test dec mov leave and sub out (bad) cwtl xor push addr16 inc mov push mov aas sbb les lods add cmp call repz cli and shl ja xchg sub or addr16 (bad) stos jle xor inc cld repnz cltd cmp hlt mov add dec cmp xor mov mov hlt add push pop and fnstcw adc adc aam stos pop lock or data16 dec push add pop fiadd hlt push add arpl outsb push loope jp dec loop add and push ret pushf add add adc xor xchg or mov dec add jge into and fdiv dec imul adc cmc pop xor sahf or and ds sub or rcll jno sbb (bad) push push int3 outsl add fwait pop (bad) cs cld mov dec sbb lret fnstcw mov or mov imul add outsb inc pop lock popa add and sbb mov mov add xchg ljmp test xor jns (bad) shlb dec jno orb or and insb cs mov inc jnp addb lret pop xlat outsb xchg inc adc add and add movsl pop mov add add jb adc scas sbb cltd add xchg jbe dec iret or mov xor imul dec gs cmpsl scas xor push (bad) outsb dec and pop xchg inc or scas mov lahf jnp arpl pusha xchg mov into xchg mov sar test mov sbb xor ljmp jecxz dec add cmp mov inc leave xor (bad) mov xchg push mov aas cltd cmp (bad) sub cwtl xchg mov (bad) lea cltd mov adc (bad) sbb add mov mov push jl add mov xchg cmp xor pop cmpl in (bad) imul bound and fs addr16 out add gs addb js and xor ds int pop sbb cmpsb mov xor orl inc cmpsb adc stos addb iret popf jle not pop mov inc xchg rorb mov fldl jbe mov (bad) cld cltd dec pop inc ret cmp int3 aas movsb insb sub inc stos add jno adc andl (bad) enter lcall (bad) push ret mov and inc ja lcall and jae sbb mov add and push mov bound repnz loopne pop adc and jecxz (bad) dec in enter adc es fisub add dec mov imul sbb jbe mov sub adc xchg and adc pop movsb in pop or push add and addl call or sub daa sub pop popf repnz lock jg sbb add (bad) jle,pn gs lret mov sbb push ds rolb jo test xor ljmp cmp fwait jecxz in or mov jae or xchg lret cli jbe push test sbb inc mov push mov adc in repz jno dec or je pop jg pop ret dec xor iret pop in testb lock mov sbb dec fistpl sti jbe dec add or xchg inc cltd shrb dec test (bad) cmp sbb mov xorl sbb jae dec test movsl and pushf fdivrl add jno xor scas add pop dec xchg push pop adc inc shll push jno das call shlb les push sbb jb (bad) nop mov mov cs dec loope outsb das enter adc imul ja pop xor mov mov loop dec dec es cmpl or fs pusha sub jne ret push sarb sub pop pop push js xor insb fs mov adc pushf pop ds rol jmp add mov imul jge lea jo push dec cmp mov add sub subl push inc adc jns add into and mov int adc add pop jbe (bad) sub aam sub sbb adc and lcall hlt jae or mov inc push push mov add add mov xchg inc mov int3 xor or movsl adc sub repnz daa outsb mov sbbb das jge sbb ficoml pop mov adc add add or inc and jns dec adc insb imul out inc fisttpll lock mov das mov push adc and cwtl inc repz imul rcrl (bad) into iret and jnp imul xor xor push xor arpl cmp jge (bad) nop jns add loop dec pusha int or inc xchg or ret add pop roll int3 dec les aam movsb and pop pop pop add mov cmp xor jne dec rclb test frstor cmp inc pop cmpsl push add adc add into pop dec adc bound scas inc adc inc mov jo push fwait test cmpsb out push xchg in mov inc testl mov jae add inc xor mov sti push adc gs into (bad) sahf icebp out cmp or dec mov push subb cmp add sub shll cmp addb jp add sbb mov inc mov jbe xchg dec mov push jg ror pop fwait repz xor or or mov sarl and pop insb and outsl push loopne jne cmovo out xchg push and push lods mov lods movsl call fdivl xchg pop jbe int3 (bad) leave pushf and jb es mov ficom xor inc add aad test ret pop and popf sub or arpl add mov cmp pop cli in dec (bad) jb dec hlt mov in inc dec push data16 push or mov xor sub push add or lcall stos push add das jns pop or repnz mov test mov push add cli mov popf adc shr inc ja xchg lret xchg out jl adc inc movsb in or and pop adc stc out shll loopne das xor in push sub xchg repz pop add cmp pusha andb cmpsl xor xchg hlt add hlt inc mov add cwtl fwait or mov call rcl pop test jae int3 xchg push or lret out xor leave push sarb mov adc xor mov imul cmpsl roll sub xor jns mov shrl inc (bad) ja xor jo mov (bad) sub sti xor or pop mov nop nop (bad) outsb dec dec out ret dec je push adc bound popa ljmp lods stos sub dec dec dec jns jne shlb push and (bad) in ficompl lahf lods pop dec pusha in push sub pop lret in xchg daa in dec xchg or loopne add add test jo,pt xor jns cmp incl mov adcb shrl push inc push test push (bad) lods addl rorl ror push lods stos movsl loopne lret add sbb call adc or pusha pop dec (bad) pop add xor mov pop adc sbb inc ljmp dec add cwtl pusha xor js or lods adc inc add loopne shlb mov ret imul dec pop enter cs aaa call cltd xchg sbb addr16 in cwtl add (bad) out bound ds or stc xchg repz sti and sbb and mov loop xchg fstpt daa in jne add cld add cmp add mov ffreep mov push push cmp test stos jmp std cmc xor clc sbb inc (bad) sbb or iret jle lock clc add mov lds xchg fisub xchg and pop nop xchg and je mov adc dec lcall sti jle or (bad) add ret inc shrb jl inc cwtl jno push mov sub jb loope cwtl outsl ret push jl xchg pop xor push and mov xchg add (bad) jl xchg xor add in or push mov and mov out cwtl test add cmp je movups shl stos add mov mov inc or sub and je,pn jb (bad) adc or and into sbb inc mov mov scas sub lods adc andb mov scas xchg orb les (bad) pop adc or out ror xchg push push pop lahf jl clc std mov xor add test add aad mov mov arpl das and (bad) aam cmp (bad) loopne out add adc aas sbb adc (bad) and add and fiaddl add movb scas inc mov push (bad) dec bound (bad) xchg and xchg push scas cmp pop jecxz pop cmp and enter arpl inc mov aaa repnz dec mov pop push dec jne (bad) inc sub sub (bad) enter repz and loopne cwtl mov add jns adc fwait call jb,pt mov jb sub jo push mov inc pop inc repz xor add int mov movl div aas add icebp add int push decl dec sbb clc testb mov or sbb ds add push insb sbb or sarb and in repz fcmovne (bad) std jb add sub and add lds ficom xchg orb push mov addr16 inc cwtl jno add int scas cli andb insl xor loope adc push jo add out mov add dec sbb fimul fsubrl daa testb icebp jp jbe push inc add inc ss xor mov in jne xor add (bad) in pop shrb es xchg fiaddl mov fucomip and add cmp es or or adc xchg in gs sbb addl jbe xlat (bad) dec stos leave inc aas mov sbb push mov mov in add push mov adc sbb and ss lods loopne push mov repz lock (bad) mov and les repz sbb insb movsl xor gs or xor xor (bad) or mov cmp jb notl jge ret sbb jne xor leave and pop lea bound push js or mov mov enter bound pop fs cwtl or or mov pusha mov mov jne push sarb sub sub pusha cmp cmp pop sub pop enter mov fiaddl sub pop inc add subl out push xchg add iret mov das ret push mov arpl and das sbb inc cmp xchg adcl mov pop mov mov sbb mov fucomi push popf inc test pop int3 enter dec rol movsl ja les xor mov jmp inc jno lea pop sub pop inc mov and loop push imul ja mov xchg inc in cs loop xchg xlat push adc add jecxz insb dec add pop sarl cld push lods mov sub outsb dec imul adc out or ja xor inc cmc mov popa xor and adc ret xor push cmc arpl test cmpsb xchg inc enter add pop lret add pop sub (bad) lods das xchg jle cli addr16 sub xor or fwait cmp add cmp add in add sbb sbb or incl jecxz mov outsl jo in add push rcr fsubl add (bad) rclb sub mov cwtl xchg loope mov out int xchg aaa sub pop lock dec bswap fldenv faddl xchg cmp push add lahf xor rorl pushf dec pop imul xchg jbe cmp adc sahf jle sub pop dec and and fildll dec mov and mov pop imul adc shll (bad) dec inc (bad) xchg dec xchg mov mov push ljmp xor cmc pop dec dec popa cmpsb pop jb fimull scas inc mull fadds xchg mov jno push inc mov std in popf jl fistp sbb negb add sub enter adc enter pusha sarb cmpsb aaa lods scas dec jge sbbb sub jg je cmp or mov fsubr push je pusha pop adc pop in inc ds mov daa sbb sbb jbe adc xchg or pop cmpl jmp enter popa call add mov mov test ja cmc or imul mov das and cmpsb and pusha aam sbb and xchg inc dec popa xor les adc mov ljmp pop jge out cmp (bad) test lahf jmp adc sbb adc pop push mov xlat cmc sub mov cmpsb jmp jg lock inc sbb loopne cmpsl add mov dec jns mov xor mov dec push andb jmp rcrl jae pusha push sbb pop and loopne adc xchg mov add stc pushf dec inc cmp lcall (bad) cmp test flds push or in cwtl and push or inc int3 stos sbb mov xchg das fist into inc xchg mov lods and xchg cmp and clc push rorb bound xchg xor jo push popa jnp inc xor or dec cmpsb adc jo test out sub ret insb push out test xor mov or roll inc lahf adc daa cmp pop mov lods push sbb push adc xchg je add lock xor mov and inc adcb push mov pop pusha mov pop loope xor and aad jp add sub sub fs mov jb addl push cmc add inc push test mov cwtl dec mov arpl scas and cs cmp les ret cmp mov repnz mov add mov push and popf add mov xchg clc les add sbb in inc inc jmp not into test pop lds cld push cmp out leave or mov popf or or in jbe loopne xlat mov mov add mov jns jno mov mov rcll lods jge dec std inc pusha inc sbb iret dec pushf negb rcrb lret jnp push mov sub lods sub add add sub push or pop mov (bad) jo cmp pop mov or mov inc outsb jge or movsl andb mov insb repz roll cltd fild sub lods lahf inc out dec jg mov add es jg adc dec aas push jl je subb repnz xchg and inc mov rcrl test or les cmp repz data16 hlt add lea and fiadd cmc xchg (bad) adc cmp sub inc jmp call movsb jno mov xchg jle arpl (bad) fildl ss pop adc sti clc and shl orb repnz add lcall pop inc aad mov sub inc mov pop int jecxz or test nop (bad) or mov movsl pusha pop and arpl imulb scas push cwtl adc cmp popa in ljmp push inc and jge test jmp xor mov int xor jns mov inc xor or cltd inc jl push or mov sub and sbb testl push mov or test xchg ss add mov ja push sbb fsubrp dec adc mov scas jno xchg mov inc pop cmp lcall movsb lock cpuid pusha xchg jne and incb xchg test dec cmpsb (bad) cmp sub (bad) or mov jb fucomp cltd xlat cltd mul movsb movb in pop or mov cmp test dec outsl mov scas or lcall in adc cmc test inc adc adc or cmp jl lret fstl push ds in mov cwtl outsb push fmull rclb dec flds push push ret adc loop or lock frstor cwtl dec inc mov cld sbb mov add bound push pop xchg or out test mov mov pusha mov sub ds lea roll dec mov scas cmpb jle add mov test gs mov mov sbb cmpsl loope inc das inc aas jae aaa fimull mov fsubs jmp mov je mov jns dec aas xor mov ja add lock cmp xchg xchg data16 mov sti jns cmpb sub cmc ja inc aaa cmp adc shlb repz jb add mov push fldcw rorl cmp xor outsb dec mov mov add dec adc mov and xor inc cmp daa daa (bad) push fpatan cmpb in aam and mov inc sub dec dec adc andl sub push pop cmovae pusha fbstp sbb into xchg lods push fidivr jne and push aad and pop fdiv fisubrl mov and xor pop pushf adc inc icebp pusha jl ja jl ds pusha add adc pop popf adc mov adc loop dec mov jnp aas xchg insl push shlb mov mov mov xor xor les push mov in push and clc aam test push cmpb rorb mov stc je ret js call inc loopne nop ret add fdivrs in stc das mov testb push xchg andb xchg xchg xchg frstor push repz ljmp cwtl (bad) sub inc scas and out fdivs es dec das add or insb loop out adc xchg lds jecxz pop xchg mov dec and ret xchg or adc push cmp (bad) add add and and jno test cmp rcll add pop test dec sbb inc pusha sub rclb push xchg mov bound jg dec cmp sub add mov push loope (bad) pop mov inc jnp or mov and dec rorl mov cmp and dec jmp dec mov add in mov inc lahf nop movsb popf or xchg addb outsb add jae movsb or pop stc int3 push mov or lock ret push jmp xor or xchg and push leave and out aad hlt (bad) mov jo mov je inc int out add inc adc cltd pop shlb add or sbb stos fimul push (bad) push add lahf aas pusha xor inc or push in cmp mov add pop icebp outsl cmp and add sub loope jb (bad) mov add inc jmp or mov pop lock out outsl pop xor or nop mov std int3 movsb pop add shrl add mov mov dec mov xlat insb cmp dec sarb adc adcl adc push test adc mov clc add add cmp das pop (bad) addr16 fs rolb inc loope or or aad sbb xchg daa cmp cli mov out add inc leave (bad) jp fmull pop test cmpsl imul mov int3 xor negb enter fstl mov movsb iret test inc es push mov cmp popa icebp xor pushf add cmp sub imul std adc dec xchg or cmp pusha fs and inc (bad) mov sub push push mov es popa popa (bad) cwtl bound sub and push and dec sbb dec and and mov in inc cmpsb push sbb fsts outsl movlps adc pop sarl pop testb cmp andl add dec mov fwait adc sahf or xchg fidivl cmp rcrl bound mov popa lret subb jo and and xor nop pop xor stos jbe inc sub xor rcr shlb add cmp pop inc imul fisttp test jle xor mov add sbb mov adc adc cmp lock push jbe cmovle adc push icebp adc and or mov add dec adc js xchg xchg dec pop xchg adc sbb jle loop lahf cmp mov pushl dec stos xor out sahf rol dec jg jns push mov (bad) adc leave cs popf sub (bad) loopne xchg cltd add daa push (bad) divb pop sbb sub adc jae add sub into cwtl push add jo xchg cmpsl mov add sub and inc sub cli jge pushf cmpsb loopne insl dec add ret and jecxz lods pusha int push jmp ret ss cli dec xor inc pusha xchg cmpsb xor adc cmc fdivs addr16 push push add lcall in jge test ljmp loopne dec add jns test and sbb push arpl addr16 inc fstpt mov mov mov clc jmp adc shlb clc pop add xor test xchg dec (bad) iret jae add push pop dec cli inc dec dec push addb push push arpl ret je cwtl int mov out adc push add add pop xor gs popa push jl and mov pop jl dec pop sbb xchg jp and (bad) hlt test sahf or inc sbb sbb roll ss jae sub sbb mov stos jmp cmp paddsw add jne or adc cmp xor out add lds sub or cwtl xor cmc jp mov push cmp pop pop imul mov xlat xor stos mov mov pusha imul pop sub mov pop cmpsl sbb lods inc sti xchg mov push add sub jecxz aas add jmp sub leave jae mov cmp cltd jmp rcrb into xchg mov lock sub mov jge js xchg sahf inc and mov sti xlat test (bad) mov nop lahf adc xchg mov xchg sbb repnz sub mov xor add sub dec shr es aaa xchg xor mov dec je jo xor out je stos das xor mov jo push cld xchg push fldenv mov mov ss push fcomps inc xor call daa add arpl es popf adc sbb mov lcall adc lret inc (bad) add and mul (bad) daa mov scas das jp inc xchg sub les xchg sub xor jl push cwtl inc inc push adc imul mov (bad) fldt mov je lret int3 or out jg xchg add or icebp jns mov adc jb lock xor jecxz dec sub pop jmp stos mov push cmp in jge int ljmp push fiaddl adc aaa imul push adc imul aam xchg cmp fwait add pop (bad) (bad) mov (bad) lahf and es sub push cld ljmp add jl adc outsb xchg and dec pop xor add rclb xor jge inc nop mov adc sbb sub mov nop cwtl cld pop nop leave vmread xchg rorb jo mov inc inc out addb mov add adc lock shlb (bad) pop es xchg xor sub sarl adc stc ljmp adc ds lods cmp pop lret and lahf sti or or insb aad push inc pushf pop test and mov ret stos add or js mov push xor jo insb cmp cld outsb adc pushf cmc and lds inc loope mov and mov inc sub into pop mov or inc out and mov push scas sarl sub jecxz lea jmp add nop js or or jbe inc lods dec fwait xor aas int inc lods push ret inc mov adc and xchg cld scas and mov push push arpl inc out aas imulb ja andb mov sub dec adc jne mov jnp (bad) add jmp nop jge push scas leave add pop inc lret ds addl add test add stc bound fcoms je xchg add xchg inc aaa js scas add push jp ret je stos mov add (bad) jo jns mov inc aam aam inc or cmc imul daa cltd shlb add dec push adc data16 inc leave ret (bad) xor add xchg clc loopne inc push sub adc ss mov jle aas stos or dec (bad) add (bad) les (bad) enter jnp inc inc imul cli nop repnz aas and cs jle icebp push repnz popa lcall xchg mov and test push jl inc aas enter mov out test jl test pusha icebp mov js adc dec lds js pusha in sbb push xor dec popf cmp into ds xor lahf mov jmp ret fadds cltd adc stos in dec pop aaa stc add shll add push sbb or push jle jno popf bound js jl fiaddl sarb lret sar inc add (bad) mov pop xchg cwtl mov movsb push sub cmp and jle jl test in push push pop repnz sbb mov jnp or mov push or out adc sbb xchg pop add aad popf mov mov xor inc sub mov jo push test in sbb push sbb in sbb sub ds fist xchg (bad) mov push cmp dec adc cmpb sahf push fmuls js adc test adc add adc add or faddp sbb dec adcb repnz pop or push pop test inc aas mov cwtl and mov add cmp push adc dec pop adc dec inc jecxz jbe xchg fimul rcll int3 mov jnp add add mov push sub add mov xchg and int3 test lea int3 loop xchg mov push repz cs imul cld cmp call xchg addb add jge cmp in add repnz add test (bad) or xchg add mov call push bound pop xchg test push bound pop or dec imul fnsave mov aas lds test lds fwait mov rcrb xchg xor xlat cmp mov mov or mov rclb bound push mov mov popa int3 enter je push cmp xchg lds jae pop cmpsl push mov adc xchg addb mov insl push sub ss icebp insl xchg sbb inc add jns pop int dec test add xchg inc pop out inc stos add jge sahf ds aas or pop lret pop add jle jecxz adc lods mov adc pop rcrb (bad) aaa dec lea fs xor cltd push icebp dec inc jmp push jmp add lock xchg loope mov icebp cli push add xor inc insb (bad) or add cld add shll sahf lods inc mov xorl xchg and jg inc outsb in or cld fs dec imul adc ss and add or cwtl roll pusha and ss ja add adcb test push int3 shr das xor sub inc adc icebp jecxz xlat mov inc add xor cmpsb sbb jl adc push mov pop rcr out lret adc add andl push add inc mov push xor inc divb sub inc add dec loopne inc mov (bad) pop push repz dec dec mov out mov add lahf mov jno cmc sbb add cmpsb sub mov mov sub orb or and out pusha js movsl and (bad) or push int cmpsl xchg fildll inc in pop sub lods faddl inc iret out inc adc push cmp imul ucomiss insl icebp cmpb pop xchg jo pop or lret add loope mov dec bound aas push pop ret push jns inc movsb add mov and inc add in or fstpt sbb sub push push add ja js add mov pop (bad) loope rorb hlt call hlt mov xchg insb es loop pop imul nop add and mov les jae jbe (bad) testb decl pushf sbb adc sub push add xchg call inc adc mov (bad) ss push add in pop sub mov add xchg pushf das pop fs shl sub mov loope fadds push dec ja (bad) xchg clc xchg lock jnp and mov sbb add or and cmp pusha cmp mov stc pushf push push jno je aad sbb push rclb or inc mov mov pop mov rclb dec loop addb movsb mov xchg dec jb icebp dec push inc push jne adc adcl mov pop aaa or mov cmp lods pop xlat add jb cli fild pop js inc jo xor jg mov adc xchg pop push add adc push adc add inc ss xor add daa push add or ret frstor mov push int sbb scas jns cmp shlb rclb dec xor je,pt cmp psubq push pop mov movsl or push adc adc push mov or leave add (bad) stos adc mov sarb imul mov add repz sbb pusha inc popa cld adc pop inc into cmp in enter and movsl or cwtl ljmp loop popl imul sbb mov leave lret cmp and xchg jbe cmc sbb fist (bad) sub mov pop sub ficompl inc ret lods adc test pop xchg movsb sbb fcompl aas outsb mov sub or xchg adc xlat test aam cmp lds xor and push sti adc or ljmp and mov dec subl jno pop pop push mov insb test sub in pop mov cmp cmp pop cmp mov pop adc add dec adc cmp out add jge cmp movsl (bad) mov mov dec add adc or sub into xchg fild loopne and dec push sub sbb and add push mov test dec fistp js dec push lock add add shrl les shrl movb idivl mov out and xchg sub and les mov push loopne jle and mov into inc enter iret push (bad) mov ss inc and push sbb pop (bad) enter pop or dec mov and jge xorb push cwtl sbb (bad) xchg adc fiaddl ret xchg repnz jae push and add or stos inc xchg mov jge stos mov mov adc add or pop adc or mov rclb and test push aas jge test clc dec rcr add add je add cmp push adc fbstp add je int push adc cmp (bad) in sbb and lods cwtl (bad) or js push rorb mov dec mov and sbb sbb sub jne sbb jp mov mov scas cwtl jl andl dec add test or xchg sbb mov dec fwait jne mov pushf (bad) andl or xor push jnp std dec mov lret and pop adc push popf stc cmp dec (bad) (bad) add adc jo sbb in mov lea popf push adc jge mov or pop push push pop imul mov add add imul and aas xchg ljmp fstl or push (bad) adc addr16 clc dec fild mov das mov subb stos jo xchg (bad) mov (bad) js add pop scas lret scas and xchg or std dec xchg scas mov xor jle cs bound (bad) xor outsl or mov sbb cltd pop das (bad) add sbb or cs outsl mov cmp jae (bad) xor cmc jns push ja mov push cmpl rolb hlt stos xchg mov mov pop jmp rcl and jl in bound xchg pusha popa inc addr16 push xchg push push stc dec jg rorl xchg xchg ljmp cltd jo push popf jno (bad) das dec cmp out rorb push mov mov out cmc loop lret jmp insl iret iret in out xor push inc pop pop (bad) adc mulb sub sub or adc pop in (bad) icebp dec stc ljmp push push mov push push in cmp fnstenv push or cmc xor mov xchg hlt add stos adcb mov add xchg add stos add lret mov dec pusha mov mov jo nop or cmp iret mov sbb imul push pop add ja mull pusha ds lea ja jbe add pop mov popa scas iret adc push inc and jne inc jle or mov ljmp adc lahf jae cmp adc jge imul movb outsl mov or jle pop jns (bad) push sub les jmp es ss repnz lret jg or out hlt mov jl mov adc imul pop adc out cmc sbb sub push nop dec pop sbb push or pop ret or jl lods add imul and cmp stc daa add inc sbb pop dec add cmp roll push adc pop pusha sbb std pop mov add jp or xlat mov xor aam push orl adc dec enter bound fadds and jge cltd push mov or mov gs add pusha adc mov iret inc popa sub add hlt sbb mov pushf lods xlat shll pop jp in imul push adc nop pop xchg or mov jne dec mov test decl lock call mov xchg dec jbe sub push cld movsl inc add addr16 int3 add sbb imul or pop jae imul aas lea cld shrl out mov fistpll fisttp jbe xchg aas mov mov fdivs dec call push rclb ret mov jl or or cmpb push in rol cld fist push push test jmp lcall lcall pop orb cmp popa add jae sub cs sbb push or outsb jmp rcl js cmp es popa sub mov pop inc push adc daa pop inc jg xor adc or sbb ss dec mov ficompl fcoml inc xchg aas mov std jp cmp into pop enter dec push stc mov jmp cmovo sbb jns xorl int3 fcoms loop (bad) and lahf shll in xchg push xchg or cld scas popa das repz repnz mov or sub adc (bad) ja inc add mov and aaa testb jbe das std sahf jo xchg dec adc push pop xor leave jae mov jnp xlat scas mov adc pop scas cmp push sbb xchg (bad) xor dec (bad) cld ja jns cs idivl adcl jnp outsl add cltd (bad) (bad) ljmp and iret cmp rolb push test loope xor lcall pusha push add add insb dec pushf mov outsl adc and add pop fdivrs repnz and mov push push push add dec xlat jge imul inc mov adc fsts ljmp mov pop push sbb loope pop rorb rclb outsb add pop scas out adc and ret pop lcall int3 cmpsb leave add insl cmp dec jno pop lret jp clc inc fs scas cld movsl lcall ja cs pop cmp push xchg adcb pop das neg dec xor adc dec xor clc dec pop jl push lret iret mov cs pop and ljmp outsb outsb lods xchg add subb sub dec add mov (bad) (bad) cmc push pop mov add mov sub dec add xor movsl das dec iret lret push mov dec cmp scas mov inc daa dec mov das mov and add xor cltd add ret cmp test pushf push cwtl flds inc imull scas mov aad pxor xchg push add add call sbb into jno and (bad) test xchg andl aas imul test rorb and dec add or push cwtl arpl pop mov xor nop pushf movsb xchg mov pop scas sarb pusha or mov jp seto (bad) jle icebp push int3 daa inc sbb jne lcall adc pop insl aas pop pop das push aad jb jp,pn popf xlat or imul or pop sbb jmp push cmp push add jle inc hlt dec xor sub addr16 jae sub fst scas and xchg lcall adc popa stos and test test jl pushf push add or (bad) in mov sub call inc popf enter mov out mov test xor ljmp jbe xor fdivr push data16 dec notl add outsl mov push roll pop cmp inc push repz xchg xchg pop push ljmp sub out mov xchg jp adc or jmp lret dec push mov inc xor jae int add je in add xchg inc cmp test andb mov dec adc sahf sbb push jmp sysexit mov adc and dec jno push pusha popa pop cmp and xchg sub or pushf out xchg mov jp push fsub lods adc fbstp jbe cmp ja pop xchg pop add cli data16 inc ror cmp and pop pop and aad pop pop dec or cltd mov mov int add js je int3 cmp add xchg imul cmp inc hlt mov test and pop out pop loop sahf outsb (bad) inc jbe xor mov mov gs pusha jnp ret jecxz,pt inc push sbb ds and push jecxz xchg sub cwtl inc xor insb jp sahf mov sub cmp ret add test (bad) rorl or jle lds mov sub or and jmp dec lret sub dec mov jmp mov xor loopne enter pop or adc je repz (bad) add push mov lods repnz sbb es cmp daa jmp pop cmpsl or add add adc or test xor jnp call pop xchg sbb call mov ja into pop mov loopne add dec mov fildll negl xchg (bad) fcomps shl ja fwait roll dec lcall push hlt outsl (bad) shrl or insl pop (bad) das pop sub and cmp dec and fidivrl in xlat cmpsb and and cld mov push scas mov scas sahf push jb cltd movsl and shr mov adc jmp push loop nop repnz (bad) pop push rcll inc mov adc or mov testb xchg ja jns jmp push pop inc lods cld pop add icebp addb sub mov stos dec stos or dec mov dec push stos push pop add mov mov mov jb cli jmp pushf sti cwtl loopne or mov adc insb or jbe int3 sbb out cmp test push mov push jne shll inc and jge flds dec pop clc cmp mov dec fdivr inc cmp out shlb pop jno lret dec or popa repz rcrb insl jge add (bad) pop push mov clc and popf dec in sbbl push push cmp test jo iret data16 inc mov push mov xor fdivrp dec and jge mov dec push push (bad) pop notl push dec jmp insb mov pusha paddsw jecxz xor pop and dec cmp mov xchg push (bad) jge inc aas incl sub pop adc popf insb fs outsl add fcmovnb cmp dec or aam lret push insl pop roll das pop push jmp cmp je mov repnz (bad) mov movsl lret push pop in scas mov sub xchg dec fisttp jmp add outsb sbb jle repnz add outsl jmp cli dec fs loop jge das mov mov sbb jmp in adc sbb push pop mov je add jae movsl pop testl inc xor add fsubs (bad) pusha mov popf adc mov push mov or ffree int3 push (bad) out mov push dec mov jne outsb xchg mov fcmovne sub add aaa mov jmp push and xor pusha fldt rorb stos (bad) dec xchg fnstsw cld stos pop (bad) push gs push push ficom ja pop sub mov mov mov mov xchg testb and hlt jne add fbstp dec fs or movsb inc mov xchg aaa xchg jo popf jge mov pop sub rcrl pop stos leave xchg cmc fwait shr xor cltd lods sub in out cwtl sub dec and ret xor pop lret loopne outsb ja popf pop pop incl mov hlt (bad) cmp cs sbbb pop and push jno pop and fldl idivl jp or hlt adc inc or mov or push stc jg and jmpw pop cmp and arpl pop lea scas pusha in push push pop dec mov pop das mov std jns dec dec lcall push jg (bad) loopne cmp push mov jbe add sub inc test sub or pop inc push pusha inc sub inc mov cmp rcrb mov pusha les ja mov add xchg int push rorl leave push int3 inc adc (bad) repz push and in push push mov in nop inc or cmp mov add push sbb push push xchg push dec add call mov mov fnstenv in push push sub mov dec aad in lahf adc leave sbb xchg cmp pop dec xchg std movsb popf inc fistpl daa (bad) in inc or add add orl (bad) adc dec push mov cmp mov inc rolb push jmp push adc mov sti and dec mov adc inc inc fwait ret cmpsb dec out dec out daa cmp mov movsb dec or fs sub in xor (bad) xor dec pop out inc cmp ret cmpsb fwait or mov sbb pavgb jg mov leave sub jnp push out out jle or popa repz jecxz jbe ja (bad) sub je mov divl scas adc loope scas mulb pop dec pop ret ja imul push in test push mov addr16 xor rorl imul lret mov movsl repz addl lea (bad) ficomp push mov or pusha enter add jo aas inc xor dec pop fcoms test pusha test xor loop mov (bad) mov sbb add push or pop add jae sarl loopne jno lock add scas fisttp cld inc pushf pop xchg (bad) cmc sbb mov fldl xor mov jbe cld outsl popa in jmp leave or dec inc add adc push sbb mov jns xor sbb adc repz (bad) jae pop insl adc xchg sbb (bad) xor icebp push add inc cmp pop in aas pop xlat mov sbb push lds pop and sub subb sti push xchg push adc pusha mov and scas inc push bsf ljmp jo sbb or cmpsl lcall xchg arpl inc xchg pop push mov cli xchg ds add cld lock mov repz sub shlb (bad) jno cli and addb jge iret jns ret push idivb sbb jne int3 pusha shrb ds inc or in mov gs jnp js mov lods aad das pop sub mov and xor mov fbld mov data16 or cltd lahf jns fisubl leave jle sbb inc add sub lcall mov or dec jmp das sbb mov or inc (bad) xor (bad) shll scas adc mov xor imul inc or or adc mov loopne push fmuls mov pop push pop push mov push insb and jb push sbb adc push push popa jns dec pop clc in push inc sub mov pop mov push (bad) cmp test and (bad) fstps pop (bad) xchg adc jno lods adc push enter mov sahf rcrb mov jb (bad) add shl addl jnp sbb pop xlat loop in jl push das fisttpll negl push cwtl xor fwait xchg xchg push xchg lahf je jl jmp bound les mov fwait add (bad) xchg cmp pop sbb xchg inc sub popf in cmp shll cmp aas pusha dec mov xchg add pop fisttpl push sbb push mulb add sub inc in dec cmc (bad) mov xlat fs test shll and xor scas or sub jo sbb add aad pop mov decb (bad) push repz ds mov mov iret inc (bad) add pop jae xor mov movsb test out lret popf or sub out call push push pop adc outsl mov shll xor das push ja mov xor mov fprem1 push mov bound out jg xchg xchg aad adc mov mov fisubrl and dec add (bad) adc ss adc mov xchg mov push and pop pop (bad) jl pop and add sbb dec in insl jl pushf inc add mov cmc push and aas fsubl out pusha push imul pop mov (bad) repz dec int3 xchg jbe push adc insb push xchg iret pop cmp cmp add (bad) cld cmpsb pop inc jmp inc push or sub fidivl mov xchg cmp pop fsubrp jmp fisub repz fild mov cld test pushf rcrl xor fnstsw xchg pop cwtl push ljmp scas dec dec push dec loope mov (bad) jl jo jecxz mov js pop add cmp enter lahf and and cli nop std jl xchg scas push mov pushf jae psubd mov insb pop std jge sbb mov xor mov (bad) or shrl insb scas cmc push cmp mov mov pop lahf pop add cwtl rorl push mov mov ja (bad) jnp call xor addr16 push ret lcall mov add pop adc dec dec pop test or inc push push cltd xchg add (bad) jle or push mov (bad) sub push pop imul push pop sub fcompl sbb mov and pop jmp negb fucomip jns xor pop in (bad) pop jg pop mov sub decl sbb pop push daa nop xchg mov xchg sarb cmp (bad) mov pop add push push nop sbb adc test or push ds sub popa pop sub mov pop orl pop pop jnp mov shr add mov push mov xor fstps xchg (bad) and mov mov jo sbb ret out movsl (bad) lret add push movsl outsb push xchg mov inc mov jmp or mov push (bad) pushf outsl loop pop mov sub mov in sbb lahf and cmp push adc or sbbl test mov xor out enter adc cvtps2pd testl das cmp cmc xchg mov pop jno lods push ljmp mov push add lcall push das in jl das cmc xchg jne or inc aad sub or call ret pop mov outsl in fldt mov add add sbb xchg dec mov cwtl das sti ja jbe pop addr16 add xor and mov cmc into aas mov sub jne mov scas clc dec mov rcll add mov cmp mov add or dec iret inc icebp or mov loop loop cmc les inc mov in stos rorl dec and daa mov sbb (bad) push adc jmp bound or and mov push mov movsb xor addr16 add mov cld pop push sbb xchg or pop inc lret ljmp jp mov pop cmp addr16 pop inc rolb arpl dec pop jmp jno xchg push mov aas cli scas aam sahf roll pop push jmp ret or or test or add xor jg adc add lcall xor ror fstps jg sub xchg rcr daa arpl sbb mov mov push jg and or sbb jne add dec outsb ja mov repnz test ljmp sub sub add adc adc mov imul cld and jmp ss sub jge or negl test fistl mulb pop push jle xor xor sub pop ja add idivb mov cmp nop sbb (bad) xor mov mov imul and negl or pop sub inc mov add jbe or fwait pop mov sbb mov stc sti or ret jmp ja or push pop mov dec pop xchg popf sbb sub pop jne add ret data16 sub or arpl push mov inc les mov xor aaa leave push sub jl roll cmpsb mov xor jmp mov adc or mov mov test int3 and add outsl (bad) bound out push or pop (bad) cmpsb mov adcb xchg lret mov pop push or adc aas and insb sub out nop push sub and pop and jmp clc gs leave fldcw sarb xchg sub cwtl shll ss adc repz syscall add mov aas adcb std jg dec xchg imul fild (bad) xor dec pop faddl test pop cld xchg xchg sti xor add dec jle and jle repnz mul in nop push mov ljmp idivb addl add (bad) (bad) pop dec popf mov push and xor mov rdmsr cmp insl in and and add xor ljmp leave mov or scas movsl or inc and push sub add sbb (bad) pop (bad) and jbe (bad) xor dec and pop pop orl cmp repz int3 jmp xor frstor cmc jae xchg and test cmp lret pusha jg jle dec xor push or mov mov pop xor ljmp addr16 popf gs cli add push pop pop mov test xor pushf xor insl ljmp scas popa call or pushf dec pop add sbb outsl and pop jb jl aam jmp negl or xchg (bad) es out roll test iret cmpsl mov jae loopne std jmp xchg push fs jmp mov pushf movsb scas sub hlt add (bad) add xchg in add jne out seta jecxz shl xchg push add scas and aas or leave sbb cmp sub jmp loop mov inc (bad) xor ret loopne dec (bad) cltd sub xor insb adc jmp jae fldcw sub or sub cltd mov (bad) negl sub mov sub inc mov (bad) sbb sbb ret stc clc sub jae jb jecxz sub jle xchg std lds dec loop popf and or push repz enter mov push add (bad) push bound repnz jmp dec cli dec inc insb add inc test push dec dec ljmp mov popa add rclb pop sbb adc lock or sub sub push call mov mov pop pop and lods add (bad) mov add push push mov frstor std mov jp mov add jnp call fsubs aad sub xor jmp or inc push inc scas fwait imul jne mov movd jns push andl push jns and sbbl inc and and iret push push mov pop mov inc mov adc cld out jge xchg ja add mov (bad) dec mov fiadd ret outsl inc jmp jmp pusha fldl lock or push sar fisttp dec dec mov jmp adc imull repz push jmp movsl cmp aad push xor repnz inc shrl into pusha xlat std aaa jne,pn lea stc xor notl jge sub mov xor sbb test sti push push cli dec dec sbb pop sarl and cld and (bad) scas add push pusha sbb popa mov aam mov inc push dec enter push xor add rolb (bad) ljmp je push pop pop mov push iret scas xchg push out testl add mov mov jmp sti or push rorb test es loope mov push std and add int xor jns xor outsl andb mov orb mov jmp addr16 mov add push add add lcall mov movsb mov pop mov pop push aad push flds repz cmp xchg jmp jae push enter pop iret pop and jbe or test xchg xchg pop sub and jnp addr16 mov sbb out ret inc decl sbb jle daa cmp gs add xor mov rclb xor push push icebp mov (bad) pop test lds jl (bad) pop pop push rclb (bad) ja daa add repz shrl mov mov xchg add cwtl add ret sub popa test aad mov (bad) mov jge or sti mov imul push mov xor loope and scas cmpsl add add cwtl adc aaa mov or ds in fisttpl pop xchg add ret and inc lock inc in cli jle lret sbbb sub out mov dec push push sub mov sahf xchg mov rcrb and add sub jmp xor in adc mov add (bad) mov fdivr pusha dec jns icebp pop sahf push jl std mov ja adc dec (bad) int cwtl add cli imul pop pop gs imul push bound adc jo mov call loop aaa push sarb cli sti (bad) inc jge dec es pop or and jge aad xchg pop loop xor inc mov cmp daa mov mov inc sti sub and sahf mov bound in pop sbb dec push sub dec or (bad) mov add in push pcmpeqb addb adc cli iret add mov fsubs xchg pusha mov rorb data16 or jle jbe outsl fstpl xchg rolb lcall adc xchg lcall aas xor jp adc ret adc add in lcall adc lcall mov rorl cmpl jmp addl dec lds sub mov cmp sbb xchg popa xchg popa inc jne rorb pusha fcomps stos (bad) adc repz mov lods jp inc mov add je mov push dec adcl mov loop push mov jl push mov and ljmp sarb jecxz pop roll add enter sub adc mov mov dec shl scas test sub shrl rcrb stos rcr nop push or dec sahf xorb ss xchg jo sbb jb mov push adc fist rcr ljmp add xor (bad) shrb adc arpl xor pop imul adc sbb (bad) pop mov add and out ja int shr pminub or add cmc les pop mov cmp cwtl mov arpl test popl jno popa cltd test push movsb add sbb xlat sarb bound lahf sub add in jns cmc add shlb lock mov sub xchg fsubl push rclb mov inc fwait jnp jg imul je ja add push (bad) cmc call add or mov lret pop test cs dec push pop outsl adc fidivr sbb das rorb popa and mov or jle inc add lds cwtl or pop pop inc inc push xchg loopne js xor add push add sbb push test push cwtl call jp xchg loopne sub out xor addl mov mov jo mov jmp loopne sub inc add adc adc shrb and test push adc inc pop in xor cwtl popf and inc jns inc xchg and add pop movzbl addr16 lods cltd add mov xlat inc jl adc loopne test nop inc mov in push pop lcall cmp ljmp sbb cmp or in xchg xchg xor cmp (bad) dec out and dec mov movsb es loope xor nop or xchg lcall adc lcall push lret push inc mov xchg or adc (bad) jecxz lret cmp das outsb dec in jo mov adcl add inc mov pop sbb cmp aam cmpl pop mov out mov fnsave add cmpsl mov mov das rol mov cmp mov xor fsubl nop rolb push xor jecxz int3 mov cmpsb cmp aaa popa mov adc inc sub inc andb inc add xchg nopl (bad) or dec inc js loope sub cwtl adc dec and fwait push sub cmp sbb inc test jnp,pn into test jb lock add rclb fsubl out pop push xchg loopne sbb sbb push push out stos add cmc and scas pop stos sbb inc or mov pop cmp enter outsl rolb cltd jnp rcrb mov (bad) pop jo enter inc sub dec clc add das xchg arpl inc test push sub mov (bad) (bad) lock push adc nop cwtl sub rcll pop jnp mov arpl add cmp enter jecxz pop hlt jl test jmp jmp cmpsb andb nop inc cmpsb cmp fmull mov cmpsb mov push rorl add push and mov cld (bad) rcr or push or out cmp mov and adc mov mov dec inc cs mov push mov mov ss sub jecxz xchg jl fwait sbb or js push and pop dec and xorl add pop dec pop mov add fbstp popa loopne rcrl fmull pop adc std in mov xchg mov leave loop and xchg inc add inc out cmp lock sahf add fnstsw out add push xchg loopne bound adc push inc clc jp ds push daa pop (bad) jmp ret js xchg addb mov add inc mov xchg dec loopne xchg and jae add insb loopne enter and jge imul sub xchg in mov test add cmc test int3 sbb sub insb cs or cwtl pop mov aam div out dec shl dec xchg push or adc or sbb and into sub xchg push (bad) sarb push bound pop ret xchg sub pop sbb push repnz or cmp subl sbb in add push xor cmp xchg push or sbb leave inc or dec stos pop fadds imul je jae pop pop jns invd out mov push mov sub and xchg mov mov dec or adc adc sti pop jle iret loope rolb jg dec mov mov iret push fmul fnop or into mov mov (bad) repnz jp xchg movsl cmpsb lods add or mov jnp imul test adc cwtl jl out xor scas mov nop loope scas ds test icebp or inc cmp pop add xchg or nop out cwtl add cwtl sarb or arpl xor push out popa sub add push pop inc mov jl add loope and call or imul jl enter cmp sbbb sub adc push shlb cwtl fistpl popa add xchg inc sbb in dec jmp mov leave adc push adc or pop loope sbb sub xor imul inc add orl or dec pop xor push adc push adc ret fild hlt scas sub repz out in mov dec sarb jae mov push or push jo js push inc nop inc push pop and (bad) jbe mov jno add or mov lds add les or push jo cmp mov mov addl jmp inc add test and out cmpb xchg fsub cmp add dec popa xchg nop pop push loopnew fimul mov and xchg lods mov int3 add mov pusha inc pop movsb loopne rorb or inc push loopne (bad) fcomps xchg addb mov dec jno loop and ds inc fadds sbbl inc sbbb jle popa fdivs xchg xor inc pushf cmp add dec mov loop out loopne js addr16 adc mov xchg lods in add scas and xchg add sbbl xor aas mov add das lret mov xchg imull jl and pusha mov sti loopne adc jle fadds add mov sarb jl add cmp rclb cs (bad) roll call mov or xchg push rclb dec dec or push push xchg rcl sub and xor add out sub shll das sub in sarb ljmp sub cld inc nop test dec dec cltd lods cwtl lahf xchg xchg jp pop psubb lahf adc mov ja (bad) xor adc dec or adc add inc loope insb movsl movl push lods push push or adc inc add mov clc out xchg in and mov dec or mov sbb lahf out shl adc mov push push or add scas cmc push jle pop cmpsb adc add jnp lcall icebp lods js dec ret shrb sub mov cmp sbb fwait in mov dec adc clc aas gs push cltd ret dec xor loopne in jecxz xor adc ljmp and mov and (bad) scas adc xor loope and xchg ds push xor mov xlat mov or mov mov js push jecxz xor mov cmp lret pop mov add xchg sub pop cmp dec mov lods mov inc and test push or mov leave xchg add cwtl test mov inc sub (bad) xor scas repnz pop int3 les js pop je dec push sub imul and mov inc or or jae sbb js js nop jl daa aas rclb pop cwtl and mov sub es ud2 pop jae adc enter setb add addl xorb stc xor mov lds leave popa mov and xchg inc leave (bad) loopne or add sub in xor fmuls inc sbb xor mov stos pop nop add rolb movsl imul mov xchg mov ret fsubs add pushf fcoml xlat cld mov xchg je shr mov insb xchg or mov rorb jno xchg (bad) pop pop or xchg push or mov push subb inc js push or xor and test int push lock call mov mov mov inc in or insl rorb test lds add sbb rcr and push adc shrb xchg fwait cs mov add mov jl ret ss xchg call es sub mov sbb add stos rcrb jl xchg subl xor or repz (bad) xor aam and xor cwtl mov js sub push test les imul outsb xchg cmp dec pop or mov pop dec ljmp dec cltd lcall lods jl mov cmp xchg xor add int imul cmp icebp push test lock inc or cmp jno mov dec test and dec inc add xchg push cltd fist xchg movsl lods lods subb in cwtl call imul ljmp cmp repnz and ja adc inc add adc ds cwtl sub push fadds sbb dec xor ds fucomip and aas rcrl mov pop pusha add mov mov cwtl je and dec mov enter enter xor icebp jno mov inc mov je or popa or jp imul ret xchg lods sbb add fmul and mov out movb adc enter fmulp (bad) mov int3 add notl jo jg and sub push inc int3 adc or inc les test xor mov add mov mov cld adc pushf scas (bad) jne xchg push je imul or sahf sub mov adc js and dec add lods push push xchg mov add imul adc dec test or adc repnz adc mov rclb subl sbb dec imul and xchg dec cmp (bad) xor dec lock (bad) add cvtps2pd jo pop xor adc shrl sbb add mov ret or mov sub cwtl xchg enter or push call orl or push push scas sbb ds pop sub push and adc pop cmp lea (bad) hlt popa or out movsl pusha mov mov xchg (bad) jnp cmpb jne add repnz pop and cmp and and enter enter sub enter rcrb out add cmpsb xor es idivb cmp leave test xchg movsl hlt outsb or insl mov or rcl or mov cmpsl push add and decb cmc aam and nop icebp clc adc jp jmp jl insl xchg add push ss cwtl popf int3 dec cmp and loop leave sbb scas sbb arpl fcoms std sub rcrl jo xchg in sahf add dec mov and repz popf leave mov jns rcrl pusha stos mov dec nop movsb xor or push rorb rcr fs pop xorb or cmp rcr push bound rorb mov ja push adc sub add cs jo dec in or push and fs jmp das out leave add insb or mov jno hlt nop push sub in and sysexit aas mov add push adc push popa add pop cld add enter jae mov rcll int3 dec dec add incl fstps sub lret xchg (bad) in xchg dec cmpsb clc push (bad) pop js or inc cwtl inc push pop imul xchg adc pop rcrb or xor loopne mov adc xchg xor and or adc dec jge sub cwtl cmp pop xchg loope push push enter inc cmp in jp ret xor sub pusha lock inc rclb inc xchg add xchg pop je loopne iret int mov mov sbb xlat and adc (bad) sbb fldl pop shl sbb push jecxz cmpsb leave movsl add push lahf xor fadd add adc dec lods inc test sti lods jo adc or pop fwait ds cwtl fcoms mov push add adc lods std stc sbb xchg sarb sub dec loope movsb je jl adc or in fldl fwait test xchg add adc jl add sbb or or fnstcw cmp push and push (bad) lods pop cmpsb add call je sbb and imul and loopne add imul das stos aas push add rorl shrl inc nop adc jg adc out xor or test pusha and adc xor stc pusha mov jae (bad) adc or mov pop xor cmpsb xchg adc mov mov mov add push or xchg orb mov arpl aam mov test nop rolb pop inc inc xchg (bad) cwtl icebp or mov or shll sub loopne xchg fbld push lods xlat out in in mov dec fdivp adc lods pop rcrl mov jns (bad) test test imul xor push dec mov or lcall mov pop push pusha adc xor fwait sbb xor dec lcall pop add or lea xchg sarl lods and cmp mov mov push cwtl push dec cmp push sub xchg (bad) sub add mov clc subl pusha sbb rcrl add xor popa (bad) and pushf cmc jo push test add adc stos test setae or inc stos push roll leave enter lods add adc scas in hlt and rcrb pushf loopne in or dec or xor dec mov addb pushl mov and mov mov adc or and gs mov inc jg movsl dec xor scas xor adc test jae in add cmp push or fcmovnu xchg test sbb mov aam or addb mov sub xchg inc mov popf xlat dec fsubs or ret loopne inc xor jo mov sar mov dec cmp test add imul add std xchg out inc loopne add cmp ds push inc cmp dec push cmp add dec cmp sbb test les sub cmc fldl mov cmp add mul sbb pop lods lcall popf pop jge or sbb ret sbb push popa add cmp cs xor hlt inc mov inc call je push or or lcall add mov mov jb add sarb shrl mov jge mov xor fiadd pop insb add andb sahf add lret fadd cmp (bad) add fild cmp add cwtl into rolb xor js sub addr16 ret popa faddl shll sbb cmp and imul add rcrb je dec jmp rclb push test adc push jle sbb sti lahf jl decl add mov (bad) fisub fcoms add fcomp inc push sahf rolb sbb fbld or enter add sbb pop inc push xor sub in lock adc add mov aam inc push xchg mov aaa sbb mov pop sar sub jge adc pop fstps call add xor jg mov xchg loopne orb sbb imul mov loop adc cmp push adc in adc add fs js jo fdivl inc pop lds sbb cmc and fdivrs add jmp xchg jae dec test mov loopne rolb add xchg (bad) xor add push rcll arpl add add addb fwait jecxz sub das fwait nop test push lret pextrw data16 mov and loopne and push lret movntq rol xchg fidivl rorb inc fwait adc bound sub in add subps sub pop pop mov sub enter mov dec mov mov jge pop xchg sbb pop lock mov sbb sub pop push xchg sbb dec push and (bad) in add pop (bad) push and sbb adc jle in les jno add lods fisttpl jge cli mov dec cmpsb jns ret add mov lods test mov add movsl pushf test add push fsubs adc xor pusha into xor adc sbbb dec (bad) xchg pop mov fnstcw popf imul test dec xor mov adc cmpsl mov das mov xor insb xor adc cwtl cwtl add fmull sbb mov or inc call lock or mov add test dec add pushf jge and inc mov mov mov test sbb mov pop repnz xor test add lcall mov cwtl aad mov push outsl cwtl sbb jae std out cmpsb inc add aam or icebp imul das dec lret mov adc or push dec add lods jb jecxz es sbb and cmp (bad) mov je and decb add nop pop inc sub or les pop and mov movsb add ja cmc dec insb dec pop in cmp fcmovnu adc js push fwait or or adc add call (bad) lahf sub inc aaa jb add imul sub movb pop mov add call xchg inc inc pop loop jo xchg stc bound push shrb lcall mov push or adc xor (bad) mov add imul int3 enter pop (bad) xor mov (bad) xchg add and adc push mov lods lcall mov add subb ret xlat (bad) and mov in adc (bad) push icebp sbb fld1 sbb dec rclb les es out add cmp daa add js xlat adcb pop xor push popf rolb or loop add xor ficom lahf xchg mov lock jbe and incl and pop rclb mov xchg adc pusha mov movsl jmp sarb pop ret inc xchg into rcr inc imul bound pop mov out rcrl mov xchg inc add leave jns aas add mov int3 out mov add lock inc pushf in jo adc clc adcb lods inc pop cmp and pop fisttpl das cmp cmpsb add outsl and lock push sbb mov cmp jns sub lock cwtl push add xor je mov mov mov and add inc cmpsl loope push vandps jno in repz mov fwait out or add sub mov or pop or fs xchg sbb mov add lret pop enter imul add cmp xor lret call dec movsb js fs and lea xchg sub pop daa push shlb jge jns mov (bad) roll rorl repz cmp cmp adc es out and cs mov leave lcall lock outsb dec jo cltd nop shrl xor cmp inc jno dec rol push (bad) mov inc inc and pop add cmpl lcall icebp xchg xor xorb sub push pusha loop lock jmp hlt sbb dec out add les add sbb pop int or adc and subl inc clc pop or pop call jmp xchg or and jge flds and mov mov pop rclb stc mov xchg call dec sbb or xchg cld xor and call jb enter insb fs pusha aas mov add icebp inc jmp or leave and mov jno (bad) lcall sar addr16 sahf jns cmp mov sbb dec dec test sbb pusha addb inc insl mov cs mov ror xchg jo cmp or sarl fdivs dec bound jb aam mov add push ret icebp mov in cmp scas cmp or mov into ljmp mov push sbb push call mov jo cmp fisttpl push cmp xlat shlb jns xchg loop (bad) jl mov push push adc and pushf lea mov aam xor or imul inc xor verw in jno in fwait mov sub sbb and aaa xor cmp cmc mov push imul pop mov push and jbe stos test pop js mov lret adc xorb inc (bad) jnp lods fcompp inc add ds or sbb jmp outsb xchg sub sbb or pop mov or rolb inc push jo mov outsb mov pop jmp xor push mov (bad) mov sub aad sbb xchg subl or psrld and iret faddl lcall adc push pop notb add adc jmp loop add out and pusha test sahf add pop xchg imul in mov sub jl int3 add mov and cmp pusha inc decb add jmp pop enter sbb call inc xorl roll mov mov xor jo inc lcall roll fwait mov dec cwtl js loopne fdivl (bad) mov xor add adc push xor cwtl nop inc cwtl test sbb pop les push pop cld add (bad) xor insl sbb cwtl fldl ss sbb sbb xor cmp add data16 mov mov adc into push cld loop mov inc xor xor ret adc fbld btc add ljmp cwtl add pop cmp imul test xlat adc pop sub xrelease popa movsl and pop pop (bad) nop dec adc add cmp inc xchg add subb ljmp mov jns cmp pop stos andb add cmp dec mov adcb icebp jb insl aas cmp sub adc inc ljmp xchg jb push cmp movb gs std pop js add les popa inc and in fstps out je adc mov (bad) shr int3 fmuls pop (bad) cwtl pop repz fnstsw add inc jo scas fldenv pop mov push aad xchg outsb adc add jge test mov inc nop jb pop inc cmpl xchg jmp js cmpsb call adc pop rclb and mov mov (bad) ss and (bad) inc jl adc sub jne clc dec or jecxz sbb jae stos fldcw pusha adc enter rcrb inc enter or and push or jo fs and add cmp dec ret lds xor dec jp je ffreep adc pop fistpl jle or addb in inc push and adc adc mov loop jl push ja mov xchg test cmpsb ss (bad) mov add dec ljmp lock pop les fdivs sbb mov mov ds add call (bad) xchg stos ss pop xor mov push mov pop cmp lods fild mov add or add sbb outsb xor es fs pop xor stos inc mov test dec adc and addl mov dec mov imul fild xchg or cmp mov add lods call mov je xor inc mov jae mov (bad) jmp sbb and sub pop bound push or out addr16 arpl mov sbb fwait and pop int sub cmp lcall clc arpl addl inc insb (bad) hlt cld outsl fild cmc popf sbb in adc ljmp push into das fdivl add jp lds xor fldl push adc lret ss (bad) cld fadd hlt (bad) int3 lods xor sbb es in push mov sbb pushf add loopnew add aam pop push xchg repnz add pop push pusha subb mov pop pop cmp hlt inc push aam sub pushf iret xor adc add (bad) push (bad) in inc xchg sbbb mov mov mov loop in dec inc inc inc ficom cmp dec jb pop sbb push mov xchg incl mov out arpl xor jns mov adc push in pusha js ficoml mov sub xchg add in js repnz popl out jmp sbb cmp sub sbb sbb mov repnz cmp sbb add ret test inc ja fs cmc and shrb scas bnd add lock mov mov mov add dec hlt cmp mov add fs movsb push fwait das mov roll movb push mov sub dec cmp dec add pop sub ficompl loopne add dec and dec mov lcall (bad) hlt pusha mov or lcall sbb lods arpl mov ror or vmovupd test rcr loopne ret (bad) repnz mov ds add das inc fmuls pop (bad) scas xchg add fs push sti dec shrb aas jmp add xchg dec arpl add imul shll (bad) (bad) dec dec jecxz add mov inc fisttpl lret sub out fcoms add push nop in lahf aad jmp pop das add xor inc cmp adc mov dec dec jmp pop cmp hlt shlb cmp cs and add dec ret xchg pop inc pop pop adc pusha test and jmp int3 ljmp jl add inc out fsubl xchg jnp mov ret es xor and pop mov cmp int3 push push xchg in in jg pop in jecxz xchg pop fwait movsb popa pushf inc mov jne mov int3 mov xor adc mov mov cmp add cmp lret aas ficoml out add jo clc (bad) pop loope incl inc inc cmp adc pop or xor enter xor mov fidivrl add xchg mov xor jns adcb pop outsl dec or js sub add nop jmp mov clc dec int3 push into cmpsb fnstenv imulb ds and inc icebp inc jmp (bad) aad jo push push or inc mov int3 jg aas sub pusha out sbb adc stos mov add xor sbb lods sbb imul int3 inc adc popf pop add cmp xor aas aaa mov nop xchg add leave pop ljmp sbb in jns sbb in cmp inc mov xlat insb cld gs lahf pushf ja out lahf out xchg add jo loop sub adc inc dec jbe int bswap sub and cwtl daa jb xchg cmp sub add mov mov iret push mov (bad) mov xchg call pop loop js xorl cmp int inc sub push pop mov (bad) loopne clc cmp inc xor add js pusha sti sub stc xor lea rcrl jl int3 add fisttpl iret pop in push sub adc xchg pop movsb xchg data16 in add out rcll pop or mov pop sbb scas xorl gs jmp dec jecxz cwtl lahf dec imul arpl inc dec jecxz cwtl push adc stos xor or les roll test nop popf adc push lea je lds scas pop add dec icebp xor mov mov es mov adc mov sbb pop dec mov xchg xorb (bad) gs enter add shl mov or cwtl aas cmp and add add sbb sub lcall and les movsb subl rorl or es das or nop add xchg fsubs inc dec mov xor push movsl xchg sbb or loope inc movsb les and cmp mov jo cmp push mov lock dec cs imul pop cltd (bad) cmp adc cld add push adc dec daa aam fldcw dec dec outsb cwtl sub push pushf cwtl lahf mov jb inc dec sbb cli in cmp pmaxub mov jmp cmp scas xor stos sub push stos rcl and inc push ret pop addr16 les pop dec jo rolb mov or loopne sub xchg clc aad enter out daa jl into push call mov and nop push cmp inc mov inc xchg int3 add es notb add sub jl addl mov add dec inc sti push in mov outsb and mov fnstenv or sub ret xor rolb or mov iret mov jp add jmp rorb call and mov repz or push icebp fstps sbb push test xchg pop cmp nop sbb mov adc sarb js mov cmp xor inc push aas and jbe daa add jmp sar xor mov aas add or adc mov or push enter hlt add pop mov icebp mov add les or fldcw nop sub cmpsb mov cmc in mov mov in in pusha cltd shll mov add sub fsubs inc fcompl cwtl in inc and ficompl dec bound mov inc dec push mov or or add push sbb pushf jmp mov mov test fildll shrb les testl sub xchg stc dec add push add mov shrb push (bad) rolb jl pop test mov pop hlt sub inc xchg call add lahf fwait add cmp xor das push jb je inc xor lods test mov push out cmp mov leave fistp pop clc pushf lock cmp call addb stos inc dec dec in add dec lret call loop inc lods jl fwait jecxz push lock test (bad) xor and fnstenv add xchg xchg xor pop push int3 cmp in or fs push push stos dec stc add pop mov andb mov adc inc shlb (bad) pop aaa or sbb and push cmp icebp cmp sbb pop or mov xchg insl adcb xlat lock fwait add into adc sub push out sarb or pop ror movsb jle nop cld test push and or adc and addl cmp mov pusha imul iret mov push push clc sub xor push test daa add test inc pop xor xor cmp loope loop nop pop xchg incl dec int3 test mov clc inc (bad) add xchg iret adc fildl loopne pusha adc hlt testl popa in dec repnz enter add mov outsb fdivl push fs loope hlt cld push (bad) idivb dec (bad) int popa jb jp adc xchg lret add repz add sub cmp pop mov xor or leave mov out lahf adc outsb add aaa mov sub jecxz push cmpsb pop psubq push fdivs push aas and fbld mov sarb pop je xlat ss pusha loope rcrl dec loopne xchg cmp inc mov jo jg sbb mov mov add dec mov or popa mov cmp inc pop fcmovnu lods adc xor mov hlt test inc jecxz sub mov test imul je add shlb xchg cmpb fistp jne and adc jmp mov adc scas sbb pop rorb cmp xor xchg scas mov mov push pop mov je push adc cld fidivrl sbb add mov decb fucomi faddl add mov dec outsb sbb and add push lcall adc xor add icebp popa out push fcompl lcall cld rol mov xor icebp add loop cmp andb or xchg rcr cwtl mov or pop or xor cmp rolb fidivr push push sti xchg into add popf pushf or add iret jge mov adc incb loopne inc inc aad add pop push xor mov (bad) fnop mov add push add push xchg jge std fidivr cmp add jge out rclb daa (bad) xor push jmp mov adc dec arpl or xor popf iret aaa xchg (bad) or out dec push insb loopne xor adc jge cmp dec pop and popf sbb cmp pop psubq loopne mov imul int3 dec add call cmpsb pop loopne stc inc cwtl scas (bad) in mov add dec push lock repz sbb xchg fstpl push add mov xchg pop ficom cmpsl or mov rclb xor lods add xchg sti xor call add cmp je pop adc cmp xor xor test gs push mov sub cmp stos cmp adc bound repnz pop fidivr dec cs in and xor inc hlt in pop xor push mov pop push xor mov repnz inc shr les push mov push pusha or adc scas mov add fisubl loope add (bad) out fs or mov push les sbb sbb push push mov fcmovu std (bad) subl push inc dec push push shrb in cltd sbb and adc pop push jecxz inc adc imul in (bad) mov dec jae push aas sub out jge dec or mov cld fnstenv push cmp push adc and sahf add loopne xor insl out add and cli push mov das jle add xchg or into (bad) mov (bad) testb xchg xchg mov xchg cmp xor popl sub and les add rol (bad) adc addr16 push mov mov (bad) sbb inc lds push cwtl mov push add leave and js call dec add push sbb stc inc push in pop dec arpl (bad) or pusha push jns ret (bad) adc int mov inc adc insb add fsubl ja pushf pop inc xor rclb sub (bad) test fcompl and inc push cld and fiaddl xor je pop mov jl adc and sbb js aam mov cmp mov dec jp xor lcall cmp lret adc add push add mov int fsts or add rclb mov mov cmp push or adc add cli push ja pop pop daa dec push ret dec sbb fild cmp adc es push mov ss mov aam es sbbb add xchg push je adc pop add mov mov add push (bad) xor mov aaa xor xchg add push xchg jl add lret mov add aad dec pop fildl pop mov pusha pop and sbb mov icebp adc jecxz fist sbb sub outsl pop rorb and psraw or ret loopne stc add push inc hlt jb aam push pop push dec stos jl push imul sub lret sub pop push aaa in jmp add inc nop in adc mov lock adc dec pop add xor mov mov lds fwait xchg jb pusha dec sbb (bad) enter pusha sahf popf cmp clts sbb inc jb jno and sub mov pop pusha mov outsl mov sbb sbb fdiv jmp test xchg mov mov inc insb arpl lcall push sub sbb xchg aad inc add dec lock xor mov inc or mov pop fcoms inc aad adc mov adc mov (bad) call (bad) ljmp mov mov inc pop xor sbb loopne dec jbe mov outsb cwtl dec dec arpl dec dec cwtl scas pmullw les in shrb sbb xchg mov pop cwtl mov sub dec or ret (bad) enter pop jp jae cmp add aad pop fiadd loope aas stos stc fwait bound jl mov adc ss jo roll mov idivl xchg add or daa xor push leave cmp add pop test js testl sub add jg cmp leave sub fcompl imul and es lods sub mov jbe mov xchg xchg add es pop add push add cmp mov push mov xor (bad) aad adc dec and lods sbb jecxz hlt and cmp mov inc or dec rcll adc sub sub mov aam sbb sub xchg add inc pop mov cmp insb mov fs add xor in pop jnp add sub xor pop or repnz xchg xchg pop inc xchg and cmpsl loopne sub xchg cmp fldcw add inc push push call fcmovnu or pop adc jle inc mov cmpsb mov pop adc and push cs adc inc dec sub dec and push cs loopne faddl movsl mov add mov (bad) frstor lock shrb mov add cld int3 adc pop push xor lcall aam loop xor pop fldcw (bad) jo inc test dec pushf inc insb arpl add mov pop pusha sbb pmulhw xor (bad) mov orb add imul out pushf mov or inc and insb dec into add add out pop mov mov testl cmp cmp push test add cmp cmp leave fcomps xor les add xor cmp sbb xor loopne cmp push inc nop lods les mov cwtl mov cmp pop nop insb add mov adc and jb cmp clc xchg mov sub dec pop or inc les fdiv nop mov and cltd lret imul xlat icebp add xchg loopne loopne mov inc mov mov cmp cld push test dec fdivl in pop add rcrw fmuls add mov ret pop cmpsl xchg test mov sahf out (bad) fidivl add aad je sbb mov adc inc mov pusha loop in mov cwtl cld pop movsl test inc xchg je subb jo push into adc cwtl push inc fdiv push ret add xchg je fidivrl call leave jecxz (bad) mov or movl rorb fwait or andl adc call add ds andb mov add mov xor jmp xorl and cs iret or xlat mov mov push mov sbb add xchg inc push lock jne sub jae xor hlt rolb push pop loopne pusha add std add in sub pusha sbb mov or mov push roll loopne push adc test adc inc fcoms sub je add cld push mov test mov mov mov call push mov or lods enter fadd popa mov in sbb mov orl mov inc inc movsl out inc mov rcll ret or sbb xor pop gs push mov pop pop inc daa xor mov add dec xor mov sbb push push out addr16 xor rolb (bad) (bad) add cwtl mov insb add cmp pop sub mov pusha cld addl mov dec push andb ss mov xchg enter mov (bad) add cs mov add mov loop subl cmp mov mov mov mov or pusha out dec adc subb adc push mov fsubs insb sbb rolb mov pop rol or sbb mov das dec pop enter inc pusha pop mov pop inc fsts sbb int3 mov xchg aas xor inc in bound (bad) mov sbb pop fdivl je mov fsts test dec add (bad) in fcoms xor fldcw fs les je dec cmp test (bad) out movsl movsb jl nop push and pop push xor scas or cltd shrb lret and mov or cwtl cmp shlb ret and and mov adcb cmp scas enter or inc add loopne jns ds repz mov xor fwait push outsb ret mov inc pop mov and mov jae aam fmull lods sub clc add pop sbb push mov insl xor pusha fwait pushf add mulb int ret inc or je test leave xchg pusha sub test xchg or fisubrl adc pop pop push inc clc adc rolb add into jge inc sub and mov mov enter push xor push or mov adc xchg ljmp add cmp sub push mov fstpl push pushf test or fldl inc add pop push aam es scas push and test dec and loopne cmp mov push out std mov pop xor movsb push out repz adc jmp rcrb add mov js mov dec and dec xor cmc add in loop mov or push ret stos roll pushf xor inc push lret pop add sub xchg sar aaa add mov clc ljmp inc mov cltd add cmp inc mov jno adc push aad nop sahf adc (bad) in xor loop insl add jne inc mov cmp xor popa push ret sar ds inc icebp cltd fs shrb out cmpsl mov mov adc pop bound add call mov dec or and add enter inc call inc and (bad) lret and arpl in hlt insb fadd cmp mov popf xchg test or sbb aaa mov add rol add mov loopne mov arpl xchg fsubrl in adc xchg (bad) mov inc add mov pop push ss rclb inc lds lret fs pop pop (bad) push adc jns xchg lods pop mov leave push xor fs lcall add es fdivl dec mov pop inc xchg cmp insb mov xor pop (bad) mov add jae stc and aad xor call je and dec mov loop aaa xor dec je addl and add sbbb or pop movsl sbb cltd mov add push repz mov fs jl push dec cmpl and push into stos xchg lock mov rorb inc add clc dec and or sub xor hlt movsl inc aam mov sub sub ja dec dec orb (bad) arpl adc sub inc ljmp lods sbb adc xchg dec cs push and in mov jle pop shl mov pop scas inc pop repz icebp ret test js sarb inc nop or xor add sbb cmp adc loopne dec rclb mov mov clc inc jns sbbl out add (bad) xor pop call fistpll xor cs sbb fisubrl mov nop ss add inc xchg pop fsubl cld add (bad) dec xor mov inc pop push adc (bad) xor adc or out fsubs mov mov js pushf nop inc pop push and pop push mov add lods mov xor out cmp sete addb mov inc clc sbb push cld xchg aad mov and jl xor enter xor mov cmp std push call divl aad mov out jo add sbb clc cmp and mov cld sbb xchg add adc (bad) add loopne xchg and add push jmp les mov jp int int3 inc sbb iret sbb cmp xchg pop and add adc ror cmp daa push xchg xchg clc inc sbb and stc (bad) jno mov fmul hlt adc adc mov sub stos sub mov mov nop out adc stos stc cwtl aas or inc sub dec cmp mov dec mov inc sbb add test rcrb mov out es mov adc push mov out sbb push sbb mov push add xchg sbb mov dec test sbb test xor nop adc xlat or loopne or mov test lods mov xor enter mov lock call lock les adc dec push or movaps mov (bad) shl and add out inc or aad add push sub shl and cwtl and mov mov (bad) ljmp push (bad) sbb add ret fidivl adc mov and add loopne xchg (bad) nop cs lock sarb sub mov adc flds or mov ljmp cmp pop jb push arpl test pop pushf mov fldenv sbb pop fs mov or pop les mov fnstenv xchg and xchg xchg mov inc js sbb sub fs xchg (bad) call rcl mov inc mov stos sub setns (bad) xor rcrb daa sbb (bad) lods outsb xor and adc or sbb movsb or iret inc das stos mov insl fistl xlat (bad) sbb mov or hlt int3 aam add rcl push pop mov or movb cs sub dec fmuls inc pusha add test pop cmp push cltd dec sub xor sahf add mov clc sub andl shrb in ret mov or pop (bad) pop dec and sbb push inc push setno cmp pop pusha pushf das mov inc lcall mov push mov iret sarl sub mov mov arpl dec add pop movsl mov cltd pusha dec pop int and fistpll xchg test sti loopne test add sbb push push (bad) fstl fstp aam jge add xor lcall mov enter push dec sar daa (bad) mov xor adc xor add rcl cmp movd or mov add cwtl roll push (bad) sbb pop mov sbb aaa cmp pop cltd adc mov mov iret cld aas pushf pop push xor les daa mov dec loopne in push shl (bad) in mov add mov ret ret xor flds pop lcall dec and enter loope lret jp push xor lods daa test and js add push adc and push das mov mov js mov cwtl mov aam lods icebp loope jle xchg fnstsw add mov xor xchg loopne (bad) and std sub call sbb mov fnstsw xor fsubl mov mov insl add add hlt dec mov jno les jecxz pop inc push pop outsl gs shrl test push aad fcoms cwtl add js jbe les inc mov mov xor test add int3 call and cltd jl xchg dec jl fs sbb jecxz or and aad mov xor subl clc in mov add rclb subb mov adc add push mov lahf cwtl or inc dec pusha clc xchg or aam es jo leave and sarb adc lods ljmp pop mov mov add int3 aam and mov push mov dec mov pop pushf notb pop pop scas adc ret enter and cmp loopne inc pusha leave cmc sub enter loop sub inc pop loope outsl mov cmpsb or or sbb sarl jl dec mov pusha mov imul enter ret ja pop push nop and fidivl arpl pop cld fidivr add inc outsl cmp rcrb flds bound ss and and insl cmp pop inc in dec push in and dec inc pushf movsb or aad es cwtl adc sbb inc lods test daa dec xchg xchg pop mov stos push lret cmp xchg push iret sbb and mov inc test sub cwtl aad push lds xor fcoms dec cld popa test sub sbb cmp mov xchg push mov jbe add jnp test mov mov add dec movsb inc or sahf dec enter ret push cmp jno rorl cmp shr mov push xor (bad) (bad) dec xchg mov mov out insb call daa mov adc cmp pushaw and xor stos inc adc lock out rorl and sub stc test cmp or push push xor xchg mov dec and adc push add push cmp sub pop mov daa arpl or fdivrs sub sbb pop push or popa push dec xor xor push mov (bad) mov push (bad) mov in mov sub pop ret mov insb idivl mov loopne clc or clc jo or add xor ljmp jo and outsl mov dec out push stc in dec leave inc hlt inc fldl je and push adc je sbb or xchg fildl cmp and nop add (bad) pushf xchg and les cmp pop sub cmp adc inc and or sbb pusha icebp popf mov pop popa mov cltd rclb mov enter iret push adc and inc xchg xor arpl das scas (bad) add sbb mov add and xor adc in loopne cmp add adc mov sbb mov add push fdivr inc sahf pop sti add hlt mov push jmp xor jb clc push pusha pop lahf cwtl add mov cmc and xor dec or aad jg jo add insb cld out mov add ds pop or enter dec cltd cld (bad) push mov pusha test cwtl sbb roll lods cmp adc mov and loope adc rcll sub push mov adc repz out add fwait dec push or call in sbbb lock nop cwtl and mov inc pop xor pop and sbb and jnp mov inc into ret popf in mov cmp push xchg loopne pop daa xor dec add jge xchg js std dec pop fiadd jno sbb jl daa das add fwait mov cltd js sar inc pop and (bad) mov cltd les jl (bad) xor out inc push add mov out push stos enter adc push mov dec sub test and mov inc js sbb xchg mov jo popa xorb mov pushf pop inc sub pop pop (bad) mov mov adc inc cmp sbb mov ret (bad) mov mov rcrb pop aam aad out adc mull inc cld cmp mov fldenv push jbe push pop ficomp sub rorb subl cltd mov inc inc push sub mov sbb cs ret push test out adc or inc jo fst add add ret das icebp sub out es mov sbb xor sub or aam jbe rclb dec push sub jo inc fimull mov test call repz data16 lret in nop pop pop loopne adc fcompl scas add add in xchg push pop add pop fnstcw add dec cmpsb out mov and test clc inc out loopne ret mov sti inc les add add dec fsts inc xchg in inc dec lret jecxz ficoml sbb lock cmc shlb clc incb adc adc shlb add fcompl das xor ficom insb test xor cmp test or mov dec push inc orb jno imul add jns push mov xor inc pop cmp shrl (bad) andb cli push or add jno insb lock imul jmp push jb add xchg jnp mov pop mov mov clc mov cmpsb daa xor sub lcall jae cli ret mov jo enter cmp iret sbbl mov sub sbb jno pop and call add jbe icebp ds es jl jmp (bad) mov fnstcw xor lock fwait pop inc jb jne mov fsts lock xchg sbb push mov test mov clc loop pop sbb and pop add cmp sub pusha nop or push loope ret lds inc lahf adc mov jecxz add lock push sbb insb rolb sbb push add jo xor je arpl mov xchg orl cmp icebp pop rcrb dec repnz sbb push mov fs insb sub fadds ret movsl pop les adc adc inc jl pop and jmp push shll jno stc add shrb inc fldl2t sbb ja add jnp sub add out lret pop and pop push jae add push out lea insl fs inc mov sub mov rclb fld fwait scas adc sub int3 pop (bad) cwtl xchg mov ffree and add lahf fwait inc mov mov dec rclb or adc sbb fstps push aaa cmp pusha in loope sbb lret test sbb cmp mov sbb jns add test xor push sbb and push fldenv push cld push add jne mov mov add xor ss sbb dec in pop stos xor cwtl mov or shlb pop push add add loopne jns and les test dec out sub lea sub ljmp dec inc inc test push pushf sbb mov push pop sahf or movsb and testl add pop pusha loopne ja mov (bad) rolb xor (bad) sbb jmp dec js mov rclb repnz jecxz addb cmpsb sbb aas call pop movmskps xchg sub ret movsb test adc addr16 cwtl push and inc sub dec pop addb mov pop add loopne test arpl outsb cmp sbb rcrb pop stos mov test (bad) roll pop mov insb adc xor outsb and ret mov fisttp pop out push or pop jle and (bad) icebp clc (bad) pop pop decb mov sbb loopne cwtl inc mov jae dec cld sbb int3 and movsb adc pop adc sub sahf dec xor sbb test mov sti call arpl add xor dec lock add jecxz ficoml fmull pmaddwd adc bound push xchg push inc adc push fcoms mov xor mov add aam add jbe outsl mov add jb subb cltd or xchg and xchg hlt and loopne lods cmp aaa xor jno add push ljmp stos clc or or gs dec repz pop cmp shlb xor mov inc (bad) popa pop (bad) jae (bad) imul mov jge ja push push loopne inc jno add adc inc add mov cwtl mov loop rcll cmp push cli cwtl push lock inc stc cmp enter adc cltd ret jmp xor jb dec adc mov jl jo push movsb sub xchg push insb in ret cld jbe sub mov mov ljmp mov popf out xor in push enter cmp or inc fmull jnp or mov dec and ret inc je lds sub adc dec lock adc es sub addr16 push mov and mov sbb fsts adcb test je or imul dec cmpsl xchg push mov sbb int3 jge imull leave adc or adc lods push mov (bad) xor mov push mov push push sbb imul (bad) and mov mov fmul in cld dec insl jl pop mov imul mov cmp mov lock call movb mov data16 jecxz push inc and or fldenv mov jno ja hlt or out scas test sub mov insb adc inc cwtl jp add mov sub dec or es and adc xor test jo gs push and xchg mov pop mov mov mov sub je cmpsl jbe add pop imul sbbb lea fwait nop pusha dec and fnstenv sub les (bad) fildl sub pop fs adc pop jp cmp push adc xchg pushf dec arpl outsb nop xor cmp lcall insl cmp stc sbbb add xchg movsl outsl and test inc test and jbe inc les pop push in sub cmpsl and jb add mov inc mov mov fstpt adc pop lret test jmp pop sbb daa testb in jne cld repz lcall adc (bad) decb dec mov icebp adcb sbb shrl (bad) xchg add jo push push roll push xchg test add lods sbb pop dec push push divl pop (bad) inc ljmp dec pop xor adc adc mov mov movsl pop clc ret sbb mov jo dec jb cmpb push jg sbb fcoms mov lock je adcb sbb and nop add mov add test cmp add mov jne add pusha (bad) push loopne loopne dec jae add add sub dec sahf ror add mul fmull adc push (bad) mov adc int scas popa andb and inc xchg sub subb sub je pop or sbb loopne adc test mov jns add dec data16 xorb mov or xlat jno std faddl out call xchg mov inc push mov mov arpl sbb add cwtl and ret inc orb push iret add dec enter sub add bound outsl sub inc mov cltd add and dec xchg push jo addl inc (bad) push (bad) sbb idivl add mov fdivl xor in js icebp repnz mov adc dec (bad) xlat xchg mov sbb icebp jl imul pop (bad) pop cmp xor addr16 jle loopne add xor jae icebp cmp add adc mov sarb push add inc cli cmpsb hlt clc push ljmp and clc inc or or jns sbb and outsb jo jno mov (bad) je sub inc pushf xor jg push sub scas dec inc push lcall add lock (bad) les mov lods sub ljmp push add pop push cmp popa jae movl push dec rcll cwtl pop mov pop incb mov mov adc pop pop fdivr add fcmovnb adc pop xor test cltd mov add add shlb mov xor and jmp xor scas repz add stc push pushf adc fnsave xchg xchg add push lock lds add cs add (bad) adc mov std loope cwtl mov orb pop lock dec int3 xor cmp imul mov push jnp rolb add nop (bad) mov or cmp cmp and cltd pop xchg add mov leave nop movsb cs or rcrl fldenv xor pop mov rorb es int3 xor stos mov imul cmp insb inc pusha cltd xchg test sub pop (bad) push cld idivl adc push lea mov nop popa loope aam popa sbb loopne,pt dec sub inc mov movsb rorl mov mov mov mov (bad) cmpsb (bad) jmp andb int cmpsb test and inc mov cltd enter and testb add or (bad) pop mov cmp enter lods aad cmp or xlat add sub jns sub push mov pop sub add pop xor fwait mov jle add (bad) test and enter shlb cmp mov push mov sbb add pop roll in repnz daa jb xor int fs ja sbb inc or lods inc sarb loopne push adc pop mov cs leave add mov lods add aaa ljmp fiadd cltd pusha cmp dec fld1 sahf insb mov rcll or cltd call adc cmp push dec cmpl inc pusha inc cld push push and dec add mov in test push add fwait add push push adcb lea shl rcr pop jl cwtl pop adc aaa movsb mov int3 push mov mov hlt dec rorb and out mov stc scas test mov mov lock mov push out mov jae mov je mov lea into in mov cmc inc stos aaa test enter sbb mov pusha outsl or fsubp xor or mov and adc lret dec cmp enter aad mov daa mov test cmpsb mov es add adc mov cltd nop cmp mov mov popa es pusha lods mov jb inc xchg aas jle loop xlat or xchg add out mov mov pusha mov mov dec adc cs mov cmpl xchg ljmp mov inc and mov sub sbb mov (bad) mov je mov test and clc lds sahf or es (bad) lock cmp or push mov pop (bad) inc inc jne rorb scas lds mov add add xor fimull push or lods push mov add test fsubrl fbld fidivr cmp sbb test jp or cmp mov mov (bad) xor (bad) jb pop sar sbb mov cmpl xor int inc jo cmp mov hlt and in sub push push jmp inc inc adc mov xorl pusha (bad) and les ret xorl xor inc arpl jb inc push sarb std gs and or xor fisubrl fidiv rorb push dec and shll loope icebp cmp mov jge add mov sbb mov movsb orb dec cmp sbb lods push les repnz adc iret cmp pop popf aam in push pop or jp cwtl test mov popa scas cltd cmp pop lcall inc je lret xor sbb repnz cmp cld loope les mov push adc inc xor fsubrs pop xor mov imul test add bound push jmp xor mov fldt (bad) sbb mov jle incb mov sub and add dec xor (bad) sbbb sub xorb jmp pop mov cmp or aam dec sub xlat rcr clc and daa mov pop ret or pop adc mov and nop jecxz push mov or jge add xchg add xchg xlat push scas imul inc inc sbb lock push add mov inc sub pop fwait sub xor inc cmpsb pusha orl adc cmp shrb pop loopne or ret (bad) add call pusha test adc push inc loopne pop adc cwtl mov mov repnz stos xor adc rolb or push imul sahf cwtl je push fidivrl insb xor add push sub arpl mov inc dec stos loopne popa xor pop movsb shrb sub pop in sbb lods adc pop daa adc sub mov popl add in pop ljmp icebp lret mov sar pop in or mov mov outsb mov mov cmp fnstsw pop jns popf loope jno add inc cltd sub outsb or inc fwait std jp pop jge xchg int3 inc inc add fdivrs jno mov xchg or cmp nop push mov add jge mov or clc repz sub mov stos xchg mov gs movsb and ljmp sbb jl ficom loop add mov into stos mov xchg cltd cmp mov dec sbbl push loopne mov in mov and arpl andl pop pushf and push dec repnz jae test inc or out sarl add mov push or cmp icebp stc mov add bound cmp jae lcall or imul idivb js add sti lahf imul insb xor call push lock sub or inc cwtl inc add and jmp pusha or xor (bad) hlt std add movsb dec pop add or test sbb int3 mov cmp and dec aam arpl cmp mov jecxz adc jns sarb dec and rclb ret xor out push push addl and sbb lods cmpsb adc lods push jno into pop add dec mov push shr inc loop xor ror es mov cmp lret inc pop ret hlt xor pop in mov cmp in jl fnstenv ret loop cmp sub sub mov adc lock nop mov lods insb jl jbe jge lock rcrl daa xchg cmp loopne cmp add arpl adc cmp and test mov mov data16 (bad) adc repz adc sti pop dec add mov jo xchg stc pop or xlat adcb adc mov add mov mov mov orl adc jg jmp bound add xor mov incl cmp sbb (bad) cs push int3 add mov mov cmp mov lods add das push (bad) xlat syscall mov xchg in mov sub shrb into lods add sub lret stos aam (bad) lock gs dec int xchg mov jb xchg sbb mov push mov inc pop ljmp cmp pop dec nop add imul adc cmp pop test or movsl pusha or adc mov dec (bad) flds ficom inc mov lods ret in push jae sub lock sub call dec push or movsb movsb mov push and fmull sbb cs jns mov add mulb mov les xchg push dec add outsl aad ljmp mov inc mov loope mov and fdivr add sbb inc cli xor in popa add int3 mov or and jecxz mov aaa shrl dec cmp xchg mov outsl push push dec dec adc mov xor test inc dec hlt sbb jp xor pushf out data16 or xchg lret daa test sbb mov aad sub (bad) or outsl push cmp cmp movsb mov data16 add bound mov sub mov decb inc or in rolb push adc mov inc pop mov les adc imul add call mov lret mov and xchg in and inc or lds adc imul mov sub jo scas mov add enter fucomi push push arpl dec cmc popa frstor movsb js jl push mov add cmpsl add into jmp loopne jae or push outsb roll pop cld test (bad) hlt loop push jne pop rcll mov outsl mov lock push cli outsb cmp mov mov lret mov idivl adc lret jmp bound inc adc fisub xor pop rolb bound dec imul mov rorl mov add push jge inc test adc and sub cwtl pop mov mov cmc fwait mov cld mov decl popa cltd les cmp insl mov adc nop push leave rolb pop mov mov in shlb sbb test fistl xchg out sub jp sub js ljmp enter adc mov adc roll rolb mov inc (bad) imul daa dec mov les shr push hlt sarl sbb xor (bad) cmpsb add push clc inc lret lock pop (bad) das push sbb mov je ret icebp popa xchg cmp add pop enter test (bad) adc and push (bad) nop sub mov sahf add jno movsb sub xchg js inc insb mov jbe push mov add or nop dec push stos icebp mov pop lods jo mov cmp push inc lea inc ret jno mov divl jg xor push fnstenv adc add jb js je inc loope jo push mov push push and popa inc xor insb loopne push or jo pop lock cmp call mov ds adc dec cmp sub cmp push xor xchg dec mov cmp popf add mov or fxch lods add inc lcall mov enter daa sub data16 test hlt dec cmpsb pop sub fs inc leave fs add gs stc jg outsl scas adc xchg pop loopne leave adc mov scas cmp jmp dec mov dec addr16 jae testl outsb jbe cmp pusha mov test imul cmp or mov mov cmp mov mov push sahf and add clc push adc out add jle dec aas rclb pop mov test or push shl cmp sbb shrl mov add add push sbb stos cwtl and sbb rcr mov cwtl cmp pop dec inc fs sub je adc sbb jle vprotb dec mov jno adc fcmovnb sarb sub sub stos jecxz dec test and andb mov dec cmp fs inc push pop movsb fcoms imul jb xchg add andb push ret xor and mov mov adc xor inc loop je or jb das mov mov fadd add mov les xchg and sbb push and mov cs incb ja and and roll adc in pop and pop test fsubl inc pusha and cmp add xor sub pop fild push lds mov loope orb sub test dec nop rcl cmp mov mov je push and pusha xor sahf xor mov xchg pop add enter incb aaa xor les cmp sbbb mov add xor nop xor jno fs lds xor cmp aam test inc popf xchg and icebp pop out shlb mov (bad) movl sti xor scas sub xchg test jno test pop (bad) mov mov (bad) xor scas mov lock imul popf jp out add clc into mov or icebp push mov cltd popf test dec xchg aam pop ret (bad) sbb xor mov aaa in xor aas adc add cmc sub pop inc pusha loopne nop cmp xor das mov into fisubr and adc sbb add fsubl mov adc add cmp add roll loopne mov mov mov lock add add dec push test xor nop jo roll inc addl aas or roll adc cli mov mov scas mov popf add out mov push mov pop bnd add mov inc js push mov push aaa iret inc inc add (bad) nop fnstsw xchg push call outsb addr16 sarb into or xor add scas call xor outsl fxam jnp jo sbb int3 out cmpl cmpsb sbb repnz pop jnp add (bad) nop icebp movsb push or push in push imul rorl pop mov jb test fimull clc (bad) les mov jp xchg nop mov add push cmp add xchg test sbb hlt add dec (bad) xor loopne jmp clc das add and fdivrs cli dec stos add rcl loop mov add jns xchg xchg mov add pop (bad) iret imul inc cltd pop xor mov lods dec xchg adc hlt push pop jmp repnz (bad) arpl adc lods stc inc test out pop inc jp repnz pusha cli cmp adc sub xchg in cmp fidivrl ret adc movb (bad) popf adc fwait maxps cmp xor mov ret xchg push aas mov outsl mov mov cmpsb lock add pop hlt dec pop adc push fdivrs mov mov xchg paddusw pop or mov add lods data16 jbe jl add xor add xchg incb xor pop add rol inc cld dec aaa add int fstl push inc insb lahf cmpsl add adc pop cmc add mov cld mov repz cmp mov fild imul mov adc cld mov out lods fs (bad) mov lds adc adc adc push fadds adc add arpl and lods and cld test add mov incl mov jne cwtl pop jp imul in test push xor sahf daa inc cwtl (bad) cld dec add mov data16 dec add pop add mov xchg cwtl inc add lahf sub add ja xchg aad inc in mov lock out test (bad) call or repz jge pop xchg inc hlt add xchg fmull push notb xchg add imul cwtl xchg mov sbb cs adc or xchg jl push mov mov in lock xor ret leave int pop cmp frndint mov jo or lret ret mov (bad) adc inc xor fdiv jne movl add mov sbb jns add loop (bad) ds xor in pop bnd call popf mov mov xchg repnz test or add pop pop inc mov js rolb cs cmp clc testb adc aas and pusha dec adc xchg bound ret cld sarb (bad) inc outsl pop fldenv aas inc (bad) xor xchg jge rcrl ret adc jb xchg dec mov push adc push aaa outsb adc push sub push arpl mov sub pop arpl jo divl out inc loope inc lds ja idivb icebp mov and js add push scas or fadd xchg aad pop xor cmp inc mov mov stc mov (bad) mulb fdivs add add sar push cli sub std andl es es or pop test gs mov test push or sbb loope push or cmovle pop cltd ja sub xchg mov add (bad) add inc dec xchg notl sub jge (bad) imul das push adc inc cli out pop or or pop sub sub (bad) jge cli sbbb add inc mov add cwtl xchg js push clc mov dec movsb add dec in int add fildl fnsave addl sbb jns popf adcb mov imull lret movsl int3 out clc jo pop add int and mov cmp inc lock int (bad) lock sbb ja faddl add mov lods sbb jae inc or mov incb mov mov xor jno inc xor cmp inc sub out nop mov mov lock clc cmp jl and fbld and jmp js call pop sbb fnstenv in and mov scas or loopne stos je push (bad) lcall inc pushf test inc add es ss pop cmp cmpl es add or rclb adc enter push jno imul push mov stos ds mov xchg dec adc mov inc pushf jmp bound jg sbb sub cmp orb jp xchg dec jnp mov dec pushf or gs dec mov jo fsts loopne dec fcoms movsb addr16 inc loope int3 mov mov int3 adc inc cmpsl test scas cmp gs lea test or in dec daa sbb movl cwtl (bad) or lcall int3 mov js icebp repnz fisttpll movsb mov int inc in adc (bad) in pop mov clc ljmp das in cwtl jl mov adc inc nop mov out ret cmp sub push movsb add mov or add jbe lret (bad) je fwait inc in stc sbb mov mov xchg lods sbb cmpxchg mov add test stos popf int jnp scas sbb ret out (bad) sarb gs adc adc scas and pusha lahf add cmp cmpsb jge aaa lods pop and cmp scas test mov xchg add lods sub clc add pop or dec mov inc mov sbb or pusha lods push lock in ss cmp and sti jb lahf loop test aaa adc jno rorb insl arpl fwait push test in mov mov dec aad hlt jecxz or adc mov in sbb mov lock fs cmp hlt jns dec push ds ficomp lock inc sub push lret cli push inc cmp cltd bound mov xchg stc inc addb and dec cmp add addr16 pop sub sarl stos lods ss fsub cmp icebp (bad) push out and inc or mov rolb mov ds add lds xor sbb xchg pmaxsw imul add subb jge stc or les add pusha test outsl cmpsb mov mov sub add ret inc or loop pop dec add or inc adc stos je test xchg xchg push mov pop mov add mov jmp and push add and in loopne jb and dec xchg cmp fwait jl lods cmpsb mov sti push in ljmp fldt jmp jle insl incb mov xchg hlt cwtl add popf add call sti in dec add xchg loop xor xchg rcll fwait in je and out add push and shlb fnsave xorl xchg movsb testb subb pop cmp jo cmpsb in idiv adc jge inc nop mov jmp shrl xor and cltd sbb (bad) xchg push int jo add je das lds js shlb xor pop (bad) ja adc jb sbb xor lock repz lods roll hlt (bad) add mov lods mov push jge in sahf int3 xchg mov sbb xor and push mov into cwtl mov xchg xchg push push nop in movsb les sub lock dec push add shrb flds jge cwtl movsb add adc lods mov adcb pop xor popa xchg ds sbb rcll or mov fnsave xchg aad aaa jb subb pop jl mov roll call jbe xchg out push fdivs cmp xor xchg pop sahf adc leave call mov dec ret (bad) xor xchg mov in xor test pop sbb in sub dec and xor pop int3 mov adc pop xchg scas (bad) lods test dec div push cmp (bad) push fmull cltd or mov test or (bad) add dec frstor pop cmp inc nop and xor dec out test cmp jg and sbb xchg (bad) mov sbb leave cwtl out in xor jae cs fimul mov or aam xchg rorl sub rolb ljmp dec xchg rclb jmp mov push scas jge add iret andl sbb loope mov cmp add jle cld inc pop dec pop repz bound jg add xlat inc and ds xchg je arpl or pusha insb adc fwait in inc pop movsb test pop add mov in lcall push adc cmp subb cmp push or adc repz jmp ds dec add push pop mov movsl or repz fistp test or movsb ficoml mov adc sbb std in pop xchg xor mov add add cmp jae nop mov movsb sbb out lods dec adc xchg adc jl rorl in push jecxz stc fmull push push mov adc sub movsl nop add fmuls in test pushf adc cmp pop jmp cwtl dec dec mov in call mov push and add scas rolb pusha mov dec (bad) pop insb sbb cwtl push insl push jge lret jecxz nop push xchg mov movb pop (bad) int3 inc repnz fstpt cmp pop inc ret and popa ret popl adc mov (bad) xor pop adc imul adc jge into xor (bad) and mov mov out sahf mov or loop inc dec and cmpsb jecxz jp lds pop jle add mov adc lds or or shlb aad or mov mov push xor (bad) iret dec fcom sub dec push xchg push int cmp loopne adc lods out or mov out add jno adc in movq test cmp loope addl (bad) xchg inc in adc lock imul loop lods inc gs lds adc xor adc fdivl adc pop movsl in clc add jl jns add fisttpl or lock fild nop or dec addr16 sahf mov in xchg xchg or pop repz pop cmp push cmp jge gs jl sbb scas xchg bound add popa and mov clc test or add add push sub nop cli jmp xchg jo mov sbb loopne push add adc xorb call lods and adc xor dec test jge cld nop call mov pavgb cwtl scas xchg or movsb pop (bad) mov mov or pop movsl out rorb adc add or clc jg dec mov add movsl pop cmp cwtl mov loope out jnp lea call lock cmp xchg in aas imul pop invd and inc adc ret scas js mov es lock jecxz adc pop jb int3 (bad) jno add scas out scas adcb jmp sub cmp movsb mov xchg inc jb add fnop or fild fsubs adc mov mov fs adc movsl das inc cld pushf push es push or addb mov inc dec cmp in je ror scas cwtl inc enter test dec enter div sbb xchg movsb xor test jl data16 dec xor or push mov cmp cmpb scas loope int3 and lds dec push cmc outsb sbb int jecxz mov test jbe xor push cmp push andb (bad) pop push sub pop enter ret jno xor or enter addb mov xabort (bad) test repz icebp cmp test aad scas sub adc addr16 mov or and std ja pop xchg das shr pusha outsl popa inc mov in add popf jge xchg sub jl pop add inc out dec out (bad) add andb pushf xchg ret das add pop es and lret in dec mov pop out pop add mov mov clc mov cld xchg mov adc xor push xchg sub aaa hlt lods push push fsubr add cwtl xor adc inc lods cmpsl (bad) dec and addb test cmp mov daa dec mov dec stos add mulb mov (bad) or adc or mov hlt jg fsubs or mov nop cli cmp insl push jb jmp jbe push add jge jl or jmp pop rolb adcl in ret arpl inc xchg add aaa les cmp xlat aad or and and enterw mov cmp leave pop hlt mov jecxz add dec push sbb cmp push outsb fdivs movsl repnz (bad) aas fucomip je mov pushf fldenv mov rol add cmpsl add sub pop data16 je xchg mov outsb and fildl xchg (bad) xor pop add jecxz mov add (bad) je sub jo xor lods imul add enter and xor fisttpl inc out pop push aaa enter or pop add pop fistpll sti sub mov loop gs negl push adc or sti dec add fs xchg orl pop (bad) fild lahf and adc mov hlt push imull push sub or or jp mov xchg lcall sbb (bad) cmp andb ret and sub loopne mov mov mov jge js fwait xchg lcall or add faddl loopne je lret out test orl stc cmp dec mov in or test jg xchg add insb mov sub inc fwait outsb jmp mov jo mov adc int rorb sbb adc gs mov mov pop lahf (bad) pop aam icebp xor pusha dec and adc and fwait jmp xorb insb sbb imul mov into jo and sbb adc mov jl test xchg out das fwait icebp xor shr and mov jle push in jge push or mov nop push loope push ret inc jp js sub and divl mov inc sbb mov imul jl and sbb sbb and pop add mov sbb jo dec jge add cmp inc xlat pop dec pop fsubr imul xchg lea pop out ret dec mov add fcoms mov add loope jg ss sub cmp inc insb add xchg sbb pop cli (bad) jo gs dec add jbe jg push mov hlt fldenv mov pop xorl scas inc popf sbb movsb sbb iret jl aam or test dec mov rcrb mov add inc jo xorb js,pt cmp xor fldcw js leave call sbb lcall fs (bad) lret cmpsl out icebp dec jg pusha sarb dec je orb js mov sbb ret clc cmp test xchg faddp scas je sarb inc jbe or or cwtl inc jb or subl movl sub lret imul mov inc imul imul mov sarb inc (bad) add mov les inc adc in mov fs mov xor mov dec fs jl pop fs int3 jl mov cwtl cmpsl cmp repnz out mov jmp sahf popa mov and jl in loopne cld or mov scas mov add cmp lcall or push sub aaa pop negl inc mov mov leave push and xchg push add shr jo outsb loopne mov loopne stc xor loopne mov or push stos (bad) iret jns andb xchg push mov or andb movsl arpl add data16 out push dec or mov cmpsb mov repz addr16 test imul bound inc mov push jnp or jns arpl lods les cwtl lods add clc lret lods addps ret jecxz fstpl mov and test (bad) stc adc adc xor sbb mov out pop (bad) les or incl xor cmp and xchg icebp inc mov cli bound or xchg fidivl or icebp jae add xlat (bad) out jmp dec mov and cmp xor ret mov inc movb or test sbbl and incl enter nop cwtl pop cltd push sbb sub (bad) jmp stos push gs add arpl mov loop sub or jnp xchg cltd js jl,pn inc inc call jne in das sar ret sub add testl cmp push pop out ds enter add inc push mov fdivrs add xchg mov xchg sub int cmp lret jnp mov mov xorb or mov out test jo (bad) xor mov dec jmp pushf or push rcl jnp lea dec add adc (bad) push cmp rolb test out pop sub and mul adc inc pop jno and push sub or xchg adc pop jo ljmp loopne sub add inc rorb and call loop inc or mov and in dec mov and jp add xchg mov mov loopne mov stos enter mov xor or add mov xor or pop inc mov add push add sbb mov add jbe lret jle xchg push aaa rcl jb test (bad) mov adc jp and call sbb and inc add add popa mov xchg adc add pop jge pusha and dec loope orl add cmp rcrb or push push inc mov fbstp scas cwtl loope and cmc arpl adc pop les lcall enter mov lahf ds dec mov gs call scas add jl stos push and arpl dec rcrb mov xchg sbb ret xor pop xorb imul dec add pop popf ret jmp xor stos push xor adc (bad) cld inc add push adc shl lds mov mov jg aad or paddd mov dec (bad) hlt add push idiv xor push xor mov and add and xorb out hlt ficomp lret loop lock xchg pop setp lods popf or sub mov cmp mov (bad) fadd add shll sahf add mov dec and mov in out imul loopne mov jb jle leave add and pop push insb cmp dec mov loop,pn push cld mov push cmp pop pop enter or cmp xchg or leave xchg rcrb pusha outsl xor xchg push push mov xchg jge jbe inc (bad) cmp mov or clc repnz insb add pop and add adcb aad sub fiaddl inc inc shrl stos sbbl add pop (bad) and dec adc push loop adc push clc gs nop hlt sbb gs (bad) popf mov clc add jmp insl nop hlt pop cmpsb sbb mov int3 push daa rcrb test cltd jmp jg fcomps jo test sbb mov test mull test (bad) jbe add (bad) not sbb push or jl inc jb push and add cltd (bad) pop mov push out pop adc xlat push mov fsubl mov cs nop sbb pop sahf xor adc je xor dec int xchg or rol jb mov scas inc mov xor movsl cmp imul push rolb push adc xor push inc pop adc lock jp add sbb loope test jl xchg pop dec add lock outsb out pop mov xchg and jo in fiadd adc jp mov (bad) es nop sbb or jecxz add mov rorb jae andl insb bound xchg insb add cmpsl nop push push sbb int3 add and mov aam in add pop imul call outsb cld add push mov ret jo jbe loopne ja dec lea (bad) push sahf mov loop and inc sbb out jg sbb add jns push cmc jno push adc sub xor mov clc xchg push shrb enter sbb insb or cld sbb ret jp push pop (bad) xor addb aas cltd push orb sub xor jno xor pop dec xchg mov aaa pop test or callw adcb mov incl and mov nop test arpl pop leave ja xor add jbe test jle dec sub loope iret cwtl xor inc add sub sbb mov in xchg repnz mov sarb inc mov rolb add arpl push rol (bad) out add sbb stos loope pop addr16 ret jecxz or movsb jl push mov rclb lahf imul ja cld cwtl adcb movsb jno mov xor pop js sbb popa sub cmpsl add push movsb clc mov loope and or add inc dec in cltd push push or mov (bad) lock fs mov add cmp je loope xchg push ret inc push xor xchg aas add push dec insb subb pop lahf push push icebp outsb sub cmp fsubrl xlat lods lahf jecxz cmp rorb popa lock loop mov sub lods imul lock clc add lods inc xchg push sbb loopne pop loope lcall pushf fildl scas test cs fidiv outsl jp fisttpll mov adc enter lds adc mov mov loopne add pop xchg xor addr16 inc pop loopne call aam inc pop mov dec dec cltd add rclb loope test nop stc mov inc mov xchg and adc jecxz out mov daa add lock (bad) mov fcomip test sbb (bad) (bad) icebp (bad) enter cmp jl inc and xorb les push add fs orl adc adc and ficom mov cli pop dec je add dec cmpsb lods add pusha daa adc push into pop or sbb xor inc adc sbbl in adc cmpsb add outsb shr sub add mov int3 rclb mov dec adc icebp xchg jns xchg add loopne dec test mov incl bound nop sub push or mov fsubl cmp out lods inc sar mov outsb enter push aad sub dec test inc jecxz push xor bound add mov cmp pop add lods add sarl sub sbb dec add add add cld push fs ret dec test dec ds mov mov mov stos fstpt mov sbb pop out (bad) dec cwtl (bad) mov nop push lods inc xor ret (bad) add inc add mov cmc es loopne and das or rcrb add xchg sub mov test call cmp push sarl push and cmp push leave cmp fdivs dec jle hlt jle enter (bad) in push add incl or xor shlb sub pusha int sbb in lods fiadd cwtl xchg xor clc call ror and pusha dec and test xor (bad) mov mov add and les or fs mov popl fwait loopne cmp sarb ljmp jnp stos (bad) xchg js,pn pusha popa and imul pop jae dec in add jp lods cmc loop and fdivs test out mov add jnp xlat rorl add mov jno addb add xor fs repnz ret pop lds in xor cmc mov cmp pop push dec andl add add sub xlat add or adc or mov add pop or sub push pusha cld sbb loop sub dec pop push mov jg cld mov push das mov or test mov test hlt push push ja jmp addb sub dec les aam mov shlb xchg pushf or js cwtl adc dec out mov repnz add sub movaps das pusha cmp sti xchg test dec xor aas sub adc (bad) int jecxz,pn enter add (bad) add addr16 push xor stc sahf test loopne xor cmc jae or nop inc mov comiss xchg pusha push test push (bad) call push scas xor sub mov mov xor push and fdivl fs dec hlt xchg cmp add push xchg in xchg lahf in aaa daa sahf bound xor dec aad and inc pop orl add movsb add stc fist xchg xor push inc xchg sbb out adc je push nop add leave fwait pop lock (bad) (bad) daa push pusha clc cs ret push and enter push repz sbb imul aam enter mov inc pop xor fs cmc jmp mov (bad) xchg adcl xchg push movsl adc cmp or dec xchg or rcl push xchg outsl mov sbb cmp or fmul sub cld add cmc shlb and pop pushf cwtl or pop rorb std in mov scas js into stos mov pop and cltd fbld daa or js mov add popf mov cmc sbb add sbb enter push pop adc mulb dec dec sub add pop pop xchg jb std add and mov ret xchg jnp add hlt push mov bound xor hlt mov add imul xlat in dec xchg push daa mov or xor enter jnp inc and (bad) fsubs xor push add (bad) mov (bad) hlt outsb loopne in xor inc adc dec scas xor sahf mov mov aas icebp ret mov lods pop test test mov roll cmp pop jl jb and lds add pop gs xchg cmp stc cli arpl xchg movsb cmp imul repnz lds cmc fcomps hlt cmp mov jl in push js movsl mov test sbb or sbb push imul xor fcomip inc jbe in xchg mov adc add mov cmpb pop cmp or xchg mov movups sti add pop and lret mov or orb inc ffreep inc mov (bad) inc dec xchg cwtl pop sbb inc add sbb xchg adc push sarb fcmovnbe mov or out add pop pop pusha gs push inc sbb addb shrb jl cmpsl mov mov pop pop mov and gs cmp xor and mov sub rol leave hlt lock dec orl push movsb clc cmp cmp push cltd jl lock cmp es mov movb push fidivl jg cmp jge popf daa mov loopne mov jno add inc push clc out lock (bad) stc jnp aam flds loop or xchg fs pusha subl cmp js daa leave inc cwtl cmpsl rcll mov push out sbb inc aam mov roll int3 iret add jb xor add clc ljmp loop mov jb rcrb sahf insb add cs push mov in (bad) xchg int3 les iret xlat rorl stos sbb shrb (bad) fiaddl mov adc push and lock xchg jbe es dec push test sub dec add push popa inc cmp movsb test inc test cld or popl dec or dec aam enter mov test shrb xchg mov mov or aad add add test mov cmp pop add rcrl or inc (bad) es mov repz call inc shrb addb mov mov (bad) jo cld xchg jg pop nop xor lahf dec push xchg sub scas insb jp sub adc (bad) jo ret push dec iret mov xchg mov mov and xor popa (bad) jo push cmp repnz test dec pop bound popa pushf pop fnstenv hlt sub shlb or push cmp arpl cwtl int3 pop push aaa fisub insl xchg pop clc popa sub mov ja mov mov pushf lods pop sbb aas sub jecxz rolb sbb mov fs push adc xchg sub and test shlb cmp int bound adc cli ret add rcl lods xchg call add loop add mov xchg or or cli xor pop and out and outsl inc and out mov sub mov (bad) rep addr16 rcr lock dec add or push pusha mov call popa movsl mov xchg xor jbe ret jmp sub or mov xor arpl pop ret dec jns rolb in push pop lahf push mov add sub add leave test sub pop mov fdivrs dec jnp jg add xor inc int3 add fild cmp adc xchg in cmp ljmp or mov xchg ja adc or dec sbb cld or in xchg call fcoml jg dec xor test sub lock sbb push mov or test mov add addr16 popf (bad) gs sbb lret sub es jb cwtl das sub inc orl test push cmp cmp cmp fsts push sbb cs lret pushf pop lods mov jae push add clc pop std rcl sbb add sub jl mov push and loopne and inc in jne mov stc mov mov sub loopne fistl fadd inc mov ja add cmp mov shrb fnop adc lods push and and jae ds adc mov jecxz push imul call insb jmp push lret aaa add xor mov hlt je jns add push test popa leave cmp jge and or mov jl push stos faddl clc int3 add repnz out addr16 jl nop add xor jns pop mov test cwtl repz clc jb xchg inc cwtl and adc jp mov xorb dec mov nop nop mov xor push or clc sbb insb push aas xchg mov pop adc (bad) cmp cmp je mov xchg jl cmp js sub std mov cld or add rorl inc pop enter lods mov cmp push pop clc shlb add push cmc sbb push cs shlb jns fsubl cmp or popf push scas add ret loopne pop (bad) fcoms (bad) enter inc repnz push (bad) fnstsw cmpsl lea das rorl adc push test repnz mov inc fild cmp pop push jl js push sub pusha and lret add xor adc ret nop pop ja das push rcl ljmp mov incb sbb xchg xor jge push scas mov cmp pop mov pop nop fsubr hlt shl mov inc inc fldt inc cmp mov test push push call hlt clc sub xor mov jl enter popf lret xorb cmp das cltd pop mov ja lahf sbb add sbb jg and cmp sub mov jae adc das loopne rolb and adc fistp cwtl es nop pusha adc das je add and pop xor (bad) ds (bad) jae xchg (bad) dec popf out je and cmp int3 lret sbb and push or mov (bad) cmp daa jns xchg adc lock mov movsb xchg push and mov movsl jg mov add pop call cwtl mov loop or adc shll mov xor push cmp mov push outsb popf mov add popa test xchg push out nop loopne wrmsr popf add add inc add jmp fisttpll out sbb fsts sub in adc int3 insb mov lahf out (bad) sub sarl pusha add pop out add clc inc jge add lods or dec jle insb add push fwait xor loop clc dec inc push mov cltd and sti imul fs fmuls divb jne jl jo lds add cli fdivs addr16 mov lret cmp repnz and lea das rcrb push mov add sbb and repnz cmove (bad) add fdivrp fwait pop in cmp sti or dec xchg mov shrd rolb mov xor and lret call mov popf push lods or pop xor and out inc mov cmp pop ja int adcb pop lret mov add loopne mov (bad) jmp mov push aam add xchg mov adc or xchg in mov sbb and ret cmp notb inc dec idivl mov shll std adc shlb mov add fiaddl stc xor xchg sub fcompl jl lods cwtl pop out cmp add repnz das lcall push xchg or sbb pop std push fs mov pop hlt xchg decl push ret pop jl insl add arpl mov mov cmp outsl sti pusha inc sub rclb out jge in inc adc enter and les lock and xchg outsb sub push ds enter das fistpl pop mov call js xor cwtl or dec das inc push movsb adc or in add test add pop and cs test addb mov add sbb fs sbb or dec or xor mov mov jmp clc pop leave sub inc cwtl push scas xchg dec push push (bad) mov (bad) and test dec push or dec in pop push test dec fdivrs lret dec pop fs loopne movsl dec mov jb cli cmp sub rorb add xchg fwait mov movsb roll test xor pop andb and sbb xor or loopne jae pusha cmp fcomps arpl ljmp pop lock sub cmp nop mov cmp sub jnp,pn add jp cli shl out cld leave inc inc aam mov push mov mov aam inc add sub adc mov aas scas movsl pushf outsl jmp mov mov lods aam xchg push dec repz sub mov sub push pop fsubrs pusha mov mov push je sub pushf and in jo add dec xor cmc add es lods jmp mov int3 shl cmp push add mov je adc sbb je jo frstor orl orb sub movsl rclb mov cmpb or jl xchg or insb mov sbb add xchg sub sub inc sub (bad) xlat cld (bad) in push jno jo loopne dec push inc xor adc adc xor push dec inc cld (bad) rorb mov lret outsb shrl imul cmp cmp pop mov pop cmp sbb in adc mov dec (bad) loopne xchg loopne mov xchg mov outsl adc cmp aad mov in pushf test mov add inc movsb insb movsl add lods adc inc mov and fnsave cmp xor cli inc test dec ljmp fisttpl das adc add xchg ds cmc test add cwtl call nop sub and mov addr16 add add aaa sub out jg pusha data16 or aas loop cmp jecxz mov loop add xor xor notl push dec loope mov push sub out pop mov pop jae jl mov sbb inc lods es jno add insb aad xor fwait (bad) pop add and inc mov inc enter pop fmuls jp sbb addb icebp sub jae mov add (bad) pusha (bad) adc ja nop push cmp add pusha notl sbb in rorl add repnz sub rclb cwtl in js test cmp stc jns sub push rol leave in or mov inc stos add xchg dec inc pushf pop adc fmul mov mov push mov imul sahf ja mov adc sub push cli addb inc mov imul xchg divb fmull sub mov mov xchg fsubs lahf subl cli int3 add bound xorl loopne adc (bad) out adc cwtl dec in add cmpsb mov add frstor jge mov cmp orl add push mov cwtl adc cs idivb (bad) nop ds je leave aad jp insb cld lds xorb add icebp jo push cmp cmovo adc add adc nop gs and dec cmp enter fidivrl arpl mov cwtl jg test adc subl pusha cmp ret lret xor and int outsl enter jbe jnp add cmp pushl pop adc sub shrl pop neg std jge out mov sbb xchg or xchg mov sbbl xchg in push xchg lret add adc imul aam add adc jne loop pusha nop cmp and jge std mov jae adc (bad) cmp xchg (bad) sbb (bad) fmuls sbb (bad) mov sbb int3 shrl add fld jbe sub mov addl adc shll mov movsl mov jge,pn enter cmp jmp adc fisttpll jge jns sub pushf jo popf ja and push pusha sarb mov mov cs mov dec inc add stc cwtl adc imul (bad) dec les cmp loope test push cmc xchg adc lods lahf test adc lods mov dec cmp sbb pop std in mov add push icebp stos add inc pushf roll pusha lcall add aaa mov mov add mov test sub shl adc lock imul les mov push and mov pop mov add mov cwtl dec hlt add lea movsb (bad) push imul push dec andb mov jo pop adcb pusha mov mov or mov jns xlat sub je decl les cltd loope xchg push cwtl les sarb stc push fdivr stos mov lods pop hlt xchg cmp jmp popf mov insb adc cmpsl sbb and xor lods dec xchg movl cmp xchg sbb nop in das add rcll fistpll push xchg xchg cld lcall dec (bad) cwtl int3 push or lahf and push pop in or popf or (bad) test xchg adc and sbb cmp repz mov lods in pushf add mov outsb cmp popa lock imul and inc adc call cmp cli mov rolb in sub mov cwtl call xchg mov movsb push jmp add mov inc xor sbb push add int or cmp sub or in xor sbb outsl or (bad) mov xor sbb sbb push sub loopne mov mov mov (bad) sub pushf mov add add imul jno add push (bad) mov repnz sub cmp cs mov dec sub xchg sub adc int3 loopne sbb or (bad) cld dec sbb les add inc jl cwtl or mov insb sbb outsb xchg jo jb or enter mov dec pop inc pop add (bad) leave cmp orb sbb repnz or popa test jb add sbb add call aam ja fnstenv mov mov movsb je and call (bad) cli xchg add cmp pushf mov mov sarb and pop or enter xchg adc (bad) mov jo add push lret inc sahf pop push shrb xchg dec or imul cld nop mov lcall out repz xor sti push or sbb stos adc add sbb xchg adc sub cld add rorb decb adc add sub call inc outsl xchg out mov idivl and pop shlb aas sbb in push xor cmp cwtl dec sbb aam sub xor jo sbb jns add adc and lock in push sbb int cltd lock andb or mov and push addb xor add pop pop mov enter ret pushf in add out (bad) (bad) mov shlb add inc pop mov xchg xchg loop mov sbb int3 push and enter add push xchg xchg jmp mov adc xor cld add es rclb dec mov lret cmp inc sbb dec jo ja and (bad) xor loopne int3 push dec add sub jg mov jnp mov lahf popa movsb popf dec and hlt adc lods push inc subb into stc outsb shlb sub and int3 andl fisubrl sub ljmp push dec adc add jne mov imul leave loop fildl pop jl fidivr add cwtl mov jge pmaxsw ret sbb fadd push dec or mov mov add int xor xor inc movsb inc in ds cmp or in or and and mov fnstcw jp rolb add js hlt mov jmp in jle mov add push push or push pop mov xor add xchg and lods cmp add lods xchg nop mov adc jo and fs into sub adc sbb movsb sbb push cmp push xor add mov jbe adc mov dec (bad) aam cld test sub sti mov sbb add adcb xor aaa btr add mov outsb orb pushf and pop loopne insb mov (bad) cmc inc into push add stos cmp jecxz mov mov test in add sbb int adc add pop jg enter orl mov pusha pushf mov jno mov into jp (bad) xor call push and mov add inc (bad) sbb int add ret fldt mov test fs adc adc sub add cli pop and cmc adc out and pop in call int sbb mul add rolb xchg hlt dec push xchg push mov mov mov sbb in orl xor mov sub dec sub push aam push cwtl inc sub aaa jmp std pop add mov adc and decb lods push les hlt test enter mov addr16 test add es adc xchg js sbb lcall lods je jne inc xor xor pusha mov stc cmp sbb inc scas or push in call xor jge popa add inc sub inc push add sbb loop stc dec aam in mov dec cmp jg cli xor sbb adc fdiv push loope outsb xor ja push push mov and jp fadd test and cmp call add mov clc nop bound xchg aaa sub (bad) scas xchg push or sub ds orb push loope xlat mov add popf cmp push (bad) jno add sub ss add ds fstp xor cmp ds push rolb pop add cmp cmp mov adc pop xor sbb nop push lods pop jg pop pop or xor dec pusha dec mov jmp dec adc mov call mov add mov loopne xor popa xchg add pop sbbb xchg ja jle xorb je push add ljmp pop inc rolb sbb loopne aas cmpl cli push inc in shl mov push cli mov ds fnsave fild ds xor adc cltd rcll aas in cmpsl les add pop add xor xchg outsl clc add push in or arpl adc sbb or int gs stc jmp xchg sub lock add xchg lods in movl xchg or popa fcomps int sbb ret cmpsb add sub lds pusha and lods inc xor jmp sub shrb and das jo jo add aas mov es (bad) add mov movsb mov stos les lods mov add imul mov add add push subb (bad) cmpsb or je stc push adc mov lock add jecxz out jo iret xchg dec pop fiadd or ret lods push fistpl adc add mov add mov fisttp cwtl hlt jb mov cmp lods xchg cltd push out mov cs and add mov mov add pop pusha rcr scas push add loop push sub outsl aaa ror and jbe jne jae push mov dec jno jo pop addr16 (bad) xor das add add cli int3 inc xchg rorb cltd lret xor pop mov xor mov mov pop cmpsb enter fild lea lret cmp cmpl mov add mov push test xor inc add mov or pop mov rclb sbb lods sub inc mov jecxz sbb pusha xchg pop inc and mov xchg pop or arpl pop mov pop add pop inc hlt mov dec jne mov pop out (bad) (bad) jno xor mov adc out mov mov call (bad) push pusha or jnp andb popa sub sbb jnp push mov loopne cmp mov jge,pn mov mov push lods xchg sahf test js add shlb rorb sub mov addb push xor cltd popf inc into ljmp xchg loop and aaa fstpl jbe mov pop or push add loop je inc mov xchg mov insb insl jge popf lahf adc xchg je inc xor shll cwtl fidivrl jae pop dec iret test inc push decb push insb arpl pop jns int3 pop gs scas inc mov in adc es xor lahf roll pop mov pusha sbb cltd add adc and and inc mov ds and es clc cmpsb shll mov mov lret pshufw sbb xchg cmpsl repnz add in adc xchg cld test inc mov pop jnp push lods push jnp pop add push mov adc xor add inc frstor cltd rsm arpl aam (bad) push mov popf pop adc stos mov fildll mov mov or loopne (bad) call inc pop enter pop jnp push scas push jnp pop sub inc sbb dec test rol fiaddl adc cld and add mov loopne add jae inc sbb push mov and pop jge outsw push cmpsl cltd (bad) adcb push push xchg mov add pop push loopne cmp in sbb dec sahf pop and sub mov insl dec add gs pop and testb adc adc add inc add jmp pop lods les cs inc mov and mov out (bad) lcall add nop sti inc push mov mov xchg add cmpb inc add inc out roll test out fnstsw repnz pop mov push add test adc jl xor sub decb dec push ljmp pop out (bad) ja and inc cmp add xlat lock pop (bad) pop mov out loopne mov mov xchg cli xor popa and xor mov sub pop inc jb and fbstp xchg sub xchg mov jno dec and push imulb jmp out ret jbe dec and movsb push adcb inc mov mov movb out sarl cmpb pop out jae push cmp aad je pop dec mov inc fstpl lret dec xchg aaa mov add sbb (bad) mov sti dec dec jg sahf cli inc xchg jnp mov xchg jae stc xchg les roll push push mov xchg xchg jg sar inc inc mov lods push adc jno inc mov in out push adc inc and repz mov pop cmp xor cli mov aam push in movsl lret test rol jbe jns add mov xorl mov cmpsl pop cmp push xchg test imul sbb mov sahf xchg hlt movsb mov fs movsb mov sbb mov pop push mov cld add mov fs flds xor cld mov inc mov add das push popf std xchg fs xor adcl dec pop inc mov jbe add lea dec into mov pop or xor lret lock dec stc aam sti scas add aad popl ret insb out or sub mov rcrl fild in adc push xor sbb pop decl xchg pusha fisubrl sbb jmp cli xchg es cmp popl jg hlt cmc std push loopne mov fimull lahf stc sarb sbbl add jl shll adc add aaa sub add push mov and mov xor jno xor pushf pop lret inc jl js enter inc or nop rcrl cwtl pop push out negb jo xor jne repz insl cli outsl std adc push and jns scas inc sar test cld clc nop js mov mov adc mov xchg roll out and sbb insb add pop (bad) mov mov mov or cli adc cmpb push pop inc bound hlt enter push dec or inc cmpsl call lock cmp pop es jg call in cmpsb daa ret add cmc cmp inc pop pop adc lods inc sbb mov xchg or pop or xlat cmp (bad) hlt mov pop mov clc dec mov push lock test pop add das jne mov lret loopne xlat inc inc pop xchg leave (bad) push rolb in sahf leave cmp mov push cltd in int3 xchg inc push pop adc mov mov or sub push sbb imul (bad) jbe push ds cmp movsb xchg xchg sbbb push stos push add inc ja cs dec lret adc insb cpuid daa xchg lahf pop jo cwtl sub mov iret and adc sub and dec mov xchg xchg pop xchg jle inc cmpsb sbb add sub cltd stc xchg in faddl sub vdivss adc and ds in add addb popa sbbb mov in shll dec cs xchg adc sub add xor xchg push cmp pop dec fs imul orl mov push inc xchg add cmpsl add fstl cmp and mov sbb pop inc insb cltd jmp pop mov flds loopne inc inc push frstor xorl add stos cmpb loopne adc nop inc jo pop mov mov ds jo jbe aas frstor xor cmp cwtl adc int3 sub adc jnp cmp jecxz clc leave dec ret jp mov adc inc xchg lret (bad) adc jnp out jno cmp xchg xor adc push stos cmpb add xchg sahf fwait dec orb daa mov or xchg jg adc arpl inc les dec pop daa xchg jne mov xor add and stos movlps jmp xchg jl dec sub adc mov popa insl leave lds add add push loopne inc pop xchg and xlat into mov cltd sub mov add mov mov pop cli xchg movsb out daa add dec nop rorl add lcall cmp arpl mov and movsl dec mov scas jo xchg xchg pusha mov push and sbb movsl xor pop js jb js,pn lcall xchg inc dec push mov aam and inc and hlt scas jle adcb or rorb not shrl adc nop enter loopne mov xlat and add and hlt add std data16 aas out lcall pop (bad) mov les mov inc dec jg jnp pop and mov push rolb and mov shrl sarb mov and xchg daa ss sahf dec xlat ret jge inc (bad) sarl jns sbb and jo jnp (bad) jno add inc sub xchg dec push jo insl xchg je inc inc add mov xchg jmp push sub pop pop sbb out shll dec add pop out ror xor pop notb aam aam rol pusha rcl addl push int adc xor pusha dec or inc add and cld jo subl dec ret xor enter pop shll or movsl mov xchg mov mov mov pop mov aam jne,pn push test adc pusha adc repnz popl push xor jno in pop (bad) xchg data16 pop dec les or scas cltd mov jl xchg add xchg aad adc (bad) sbb adc jbe cmpb cmpsb adc dec push mov pop fmuls push iret lret dec rolb and nop outsl scas and (bad) sarb outsb add imul jno insb push nop inc mov xor pop rolb rolb int push xor or sub inc jmp xchg dec es inc mov and shll and and xor cmp or sarb sbb ljmp mov in sub pop fldl and xchg lret sbbb ljmp ds repnz (bad) xor add pop inc xchg pop sbb call inc rorb mov or xchg mov imul sbb test ss mov repnz leave nop dec mov add pop cmp insl and cmp adc dec lods shlb and xchg xchg add cmpsb cmp ret (bad) push xchg lahf dec jge and stos mov inc inc in xlat xor pop add xor push nop cmp in fildl mov out test inc pushf rcrl add xorb outsl adc movsb push or pushf lahf enter jns cmpsl ja sub xchg rcl inc movsb (bad) (bad) enter call add lds pushf insb sub jle pusha jno jns sbb cmpsl jb and push push mov and mov xor add adc in add mov add iret push cs sub mov cmp in xchg nop adc jne mov or inc pushf add mov mov mov sbb aaa adc dec push sub lds rclb lds jge pusha int mov push pop int3 add add test cs loopne cli sahf add enter cmpl inc fyl2xp1 int3 sub inc sub sub inc push and sub or dec adc pop hlt xchg sbb xchg es je pop inc xchg cltd pop out mov push add test adc lock das sub stc cmpl pop jbe fdivrl sbb add adc xchg call push inc and push loope mov popf or (bad) dec enter stos pop mov add test cmpsb pop loopne push pop (bad) mov test xchg dec enter push sub mov sbb int3 cltd mov cmp in add adc dec roll std xchg cmpsl lods outsl mov add lods push cmp and icebp mov mov jle dec ds xorl pop inc sub inc (bad) and cld push xor push add das sub and adc cmpsb inc add movsl and clc add outsl fistpl inc sti adc pop sbb stc shrb add lcall cmp (bad) rcl dec sbb sbb movsb or cld cli movb lret popa mov inc sub jmp dec xchg insb add mov js test rcrl jns cmp loope pop xchg sub int3 fucomp imul stos loope das mov lahf add les adc add shrb jns inc mov mov adc and cltd and movsb and add xchg scas cld mov and (bad) mov mov sub jno jns sbb loopne xchg lahf xlat add cmc dec stc sti loope dec adc ds pop and sub dec mov (bad) dec push aam lret push jno sbb or add cld sub add lahf xchg lods cmp xorl enter scas adc add hlt add stos int3 pop xchg inc jne mov and mov in int3 fcompl cld pushf mov insb jae lock add jns inc cltd test loopne push add sbb loopne les fdiv popa dec das imul add inc add pop inc cltd dec and mov loope call lock inc dec pop lods and loop add and inc clc xchg and sub fs pusha sub fsubs cwtl data16 xchg mov out jg inc enter (bad) stos flds add pop add rcll stos dec je cmp int3 add mov adc add inc sbb pop icebp data16 lds sarl lahf daa xchg addr16 popf popa inc enter orl push inc ror cmp cltd addl mov aad scas dec mov clc push mov out cltd sti push and cli pop movsb push add test aaa cltd cwtl call lock pop mov add nop mov mov in add mov and and add int xor mov and dec (bad) fmull add popa fiaddl pop je in das xor sub jmp sbb nop popf sbb lock add in es sbb adc push xchg dec mov pushf cmp pop iret ret jb jae add stc lea push mov mov sub adc cmp xchg sti je das xchg clc xchg dec adcl pusha and sub lahf mulb adc push inc and test push pusha push adc inc lcall je subb dec pop fs ds add inc mov jl pop push mov fild nop sahf cltd mov dec inc add popa xor pusha sub and mov call dec jmp add scas (bad) aam add or sar not adc sub xchg or push or mov push les mov sub enter lret sub hlt pop test cld xor fwait mov mov iret nop xor lahf das inc inc cmp sbb shrb sbb inc jmp pop adc cmp imul jle stc mov dec loope xchg imul mov mov enter xor dec insb test cwtl mov andb add adc xchg insb adc mov in xchg lds lods ds add aas pop adc adc push (bad) (bad) dec outsb fdivrs and pop cld inc out repz sbb xor mov sahf int lret xlat test pusha add cmp cmc add and addr16 aam pop jne mov push sub jb,pt je gs and sub and ljmp add cmp int3 pop xor mov lret pusha dec cmp fsubs outsb push addb lea add sahf lods test fcoms and mov push dec mov enter hlt into addb in inc add mov arpl xchg shrb pop mov xadd lret mov dec and popa push clc adc clc push iret fadds rorb es and sub call mov dec xlat insb lods ljmp (bad) addr16 xchg daa and stc enter movsl inc push pop test notl mov (bad) adcb (bad) int3 mov or push cmp add pushf add push sub sarl in mov and and jmp pop push shr cmpl mov movq mov push and rorb fwait xor mov pop sub mov test sub mov add ficom push or and jns (bad) jg inc dec aaa js cmc pop mov push fsubs mov add jns out pop movsb push sbb mov add inc ret dec mov pop push sbb or mov push mov or call pop ret pop mov inc sbb and ret cs or aaa daa jb lock popa cmp sub sbb cmp jbe push (bad) dec fidivr add mov mov adc roll or pop push mov pop ret adc inc push ret sbb iret loope int3 in movsb int3 inc aaa lcall xchg (bad) mov adc or mov add movzwl pop cld pop enter pop ret xchg mov mov cmp jl mov sarb xor fmuls pop ret in push jl addl adc dec bnd or inc icebp xchg sbb or sub cmp inc sbb jmp adc cmpb cli sbb lret jae cmp loop xor push adc jp mov rorb mov lock cwtl sahf add sub and ret aaa pop inc push add fiadd movl outsl cmp inc xchg movswl addb jo mov inc mov aas mov inc xor stc stos sub fdiv out add sub pop inc sbb fadd movb push loop mulb popa pop rdtsc imull ja cld cld jg add jp pop xchg (bad) or push cwtl jb gs clc adc test or or loope lds nop push inc jnp sbb orl add jb sub mov sbbl test sub cmp xchg xchg or adc inc cltd or mov and pushf mov jno inc inc sub push or int3 adc and loopne adc addb mov or nop pushf push enter ret xchg mov cmovae mov out add mov sarb nop xchg or cltd cwtl aaa mov lods mov cmp and pop je sbb sarb fwait dec lock xchg data16 cwtl xor (bad) lea nop push xor inc daa movl inc mov cmp pop out xor add iret cltd dec adc mov ds sbb lcall jo xchg ret rcrl sbb pop sub ret dec pusha sbbl bnd and sbb sub sub push inc push sbb ret mov inc push ret pushf lret mov pop lea pop inc movb popa nop lock push sarl cmp dec ja inc (bad) ja or adc pop ss mov data16 pop xor data16 inc (bad) pop sbb push jo pop jl sbb in jg mov inc movsb or test out xchg dec cmp mov inc jno cltd sbb loope and gs sub orb xchg enter cmp psubq inc cmc inc lds fs fucomi ret into addr16 lock (bad) js fidiv inc pop add cli xchg push push cmp movsb jns lds cmpsl xor rorb mov pop addb jb icebp and pushf inc cmp push bound xchg sbb add cmp js add xchg fisttpll mov xor clc les add add (bad) push dec adc push xchg gs pushf xlat cmpsb cltd je adc adc inc jmp jb add sbb lret adc mov mov cltd mov sub and lods fiadd cli (bad) shll sub cmp iret iret rolb pop mov mov mov mov lds lret fimul les dec icebp jnp jge loope,pt mov pop (bad) add repz lea inc adc and sbb add push mov adc subl dec mov rolb mov add pop aas (bad) nop mov adc sbb loopne fdivl xor nop nop test xchg xchg sub inc or xchg jg jb xchg push cltd dec sbb sub sub mov inc or mov mov insb and cmp xchg fwait sub xchg and insb pop sub lods outsl mov jmp insl xorl mov clc sbb mov ret push xchg adc pop dec push add mov out cli add jmp dec jbe push rcrb mov cmp andl push add jmp int inc pop pusha (bad) dec jae loope lcall pop add jne pop mov sbb scas or imul adc or push inc inc adc cmp push xor adc fdivrs push jge (bad) jecxz loopne jnp cltd xor pusha jbe fimull and push mov sbb jae xchg and jno cmp rcrl or jno sbb je mov ljmp sbb inc adc cmp push xchg cmp addr16 jl push sbb mov js enter or xor es xchg adc push loope add mov mov and (bad) into (bad) outsb call in cmp roll pop xor xor fwait inc mov mov jecxz outsl cld fiadd adc icebp test setnp pop cmpl xor sub nop stc sbb pop out mov hlt movl fldenv mov daa pop push orb pop jmp sbb mov test and out loopne dec pusha sbb cld adc and mov lea imul (bad) (bad) in (bad) xor jae mov addl mov outsl popa or or (bad) lea subl sbb dec divb fdivrl cmp sti das ret test lea stos and jo lods jecxz aaa nop out dec movsb push adc jae popa dec mov pop sahf popf shr cmp ret jle iret scas add pushf loopne out pop fwait rcr hlt clc sbb cmp jmp jbe sbb stos add mov dec mov cli mov adc push add out iret mov in xchg (bad) rcrl sbb mov sub fadd adc push aas push and add (bad) pop xchg int3 xor sahf fimull pop popa fsubr adc repnz test add gs add xor shr aas call testl jbe cmpsl pusha sbb mov or mul in cmp mov cmpsb lock inc sbb push ret aam sbb sbb add and and xchg xchg mov pushf sub cwtl imul aad out rorb pop push jmp dec sti rcll add mov xor pop xchg xchg pushf rcll mov cwtl adc mov mov (bad) (bad) add fistp out dec fs adc jl push mov adc cmc mov jge les or xchg jp lret inc pop add sbbb popa mov push jl sbb xor shll lahf push mov xchg stc and or and xchg data16 ret addr16 sbb into jmp sub scas and lcall or xchg sub cwtl add pop outsb fiaddl pushf or add cs pop inc pop xchg mov fmul jp inc adc add add sbbl arpl in mov cmp push and push add js jg adc xchg hlt pop push inc add mov add fs pop mov pop ds sub push mov push sbb add and adc out mov lds push xchg (bad) ss data16 fsubs adc xchg clc mov scas ret push sbb push cmp adc pusha fnstcw aas add lds and mov dec adc arpl mov rcll pop or xchg int3 push leave loopne pop js or (bad) add loopne movl mov (bad) in sbb and jecxz fbld cmc mov int3 scas xchg cmp mov test mov and cmp ret fwait push sub pop fistl aas mov cmpb nop pushl mov and nop gs sbb and sbb fwait imul adc xor leave stc xchg call cli xchg fidivl xchg sbb push pop mov es (bad) cwtl and jns out loopne jg add mov scas sbb dec and and push es or mov push cmp or jbe clc mov mov hlt repz or lock adc or pusha divl lahf mov add das notb inc inc sub mov popa clc in enter adc push xor and lea mov aam sbb jg rcl out aaa dec stc add (bad) mov data16 inc add test sub sbb xchg aas mov xorb adcl inc stos ljmp sub lea lea adc and (bad) mov push jno cmp sub bound cmp aad and mov and (bad) jbe push jbe push popa add jecxz lret xchg xchg sbb push add jno sbb jae js mov cmc divl je inc adc mov push cmp add sub nop rolb add mov sbb popa xchg push daa popl cmpl (bad) mov xchg faddl aaa ret sub sub or push aaa jbe jmp mov xchg mov fs lcall mov xchg mov cltd fistp mov inc adc mov jmp and xchg and ret adc jbe dec das pop sbb and stos add mov add shrl pop mov mov daa push or add xor cmp mull (bad) and mov cmp xor push push out shrb imul cmpl fldcw das clc sbb es cmp adc cltd pop push inc mov cli xor jbe int adc push dec jmp testb pop dec ljmp adc inc dec scas mov xor aaa adc rolb popa clc jmp sbb sbb ss mov out xchg test insl clc loope dec mov out loopne and push ftst push in jno mov jae test push aas mov rcrb xor outsl loope cli mov adc adc lods mov sbb jo aaa test mov sbb iret mov (bad) xor xor push mov cmp and cmp add cli hlt add xchg subl mov cmpl adc imul push sub lock pop bound and fldcw ds sub push pop mov stc cmp xchg jnp jl ret repz jp fwait dec js mov mov (bad) adc xorb popa fidivr mov (bad) or and xorb stos and or into popa sub pop sub dec sbb sbb clc data16 sub movsl mov (bad) cmpsl pop daa je imul push and lea sub popa (bad) daa sub imull sub mov xchg cwtl aas into and lret inc dec pusha and mov daa xchg push xchg call add sbb insb cmpsb lock mov rorb xchg xchg mov aas adc mov mov (bad) fcoms loopne (bad) adc or (bad) es aaa clc or push ds ds push mov inc cltd add pop add (bad) pop add xchg xchg in or mov inc push inc pusha dec xchg add in inc cmp out pop in cmc push mov and sub mov ljmp fimul sbb mov js ret ficom shlb test mov mov or in and mov and mov mov adc insb lea mov neg imul lret mov mov out mov add fistl jb and popf xor test xchg pusha sub xor loopne iret in dec mov nop inc fwait syscall sub nop pusha jge pop jnp das je rclb sub shlb mov nop out fbstp xchg cmp sbb test pop mov and fdivrl js sub je js jb xor add movsb sbb xchg je iret sub sbb cmp xchg jecxz sti daa arpl push jle sti popa xor xchg outsl xlat push pop jle push add mov xchg adc popa int3 enter cmp push inc cli add mov sub in add stos sub or mov dec sub pop sbb dec sbb call xchg stos push out add mov or push bound lods adc jmp mov (bad) loopne divb add (bad) jmp das test dec mov or add addr16 mov lods ret and inc std push add aad mov add loopne clc (bad) lea popf popa mov dec lods mov test xchg cmpsl mov add push cwtl push stos add xor test inc repnz sub int scas lods push push pop pop je ficomp sti add (bad) in sub cmp loopne push mov (bad) jle mov jg jp jbe cld test bound add pop fcmovb scas xchg cltd (bad) and scas mov add dec pop mov push mov insb sub fldt cmp test test pop xor lods or insl mov adc jg and sub and or mov adc repnz sbb mov sub xor and std jb mov xchg addr16 mov mov adc cwtl pop and sbb movsl pop cmp lret or sub dec lahf ja sbb adc pop inc das dec dec ret lcall fimul pop in fimul aam rolb sub xchg pusha cmp add mov pop (bad) shrl push push adc and jmp mov shll loope rcll dec or mov shrb cmp mov lret addb mov cmp jo out and push lahf data16 daa or imul lods in xor loopne inc mov arpl add test push pop pushf lds insl inc shlb (bad) das mov xchg sub repz sbb add rolb aad or testb mov or add arpl add sub push adc pop xlat dec push outsl xor ret mov scas dec or faddl push pop pop inc test or in xor mov pop pop sub stos mov clc in pusha sahf xlat scas dec icebp lds adc arpl add dec sti sbb cmp daa mov maxps lahf cmp das xor pop dec push cli mov dec clc daa dec add inc xor xor pop dec imul add mov dec cld add int call add mov inc aad jne add adc in cli rcl lods and movsl push bound mov jl imull jns call into add mov or movb and fild cmp ss cltd adc movsb lds sub sbb pop adc out (bad) xor dec cmpsl push jne ss xor mov mov push popa xchg test test data16 es in arpl popf pop xor mov add pop les dec xor lock fisubrl lods addr16 sub xor push je push movsb pop push fdivrl mov popf clc sbb test mov mov cmpsb sti out dec sub mov lcall or cmp push mov loopne push cmp pop inc or push ret fidivr (bad) cmpsb movsl loopne add or dec fs repz adc or or and adc pusha mov ds aaa xor xchg dec popa rcrl test aam add repnz sbb push sar (bad) jno movsl imull dec nop mov loopne xchg faddl push push adc cmp add inc insb inc push mov mov inc cmp jno xchg bound stos add mov or add xlat jae lock inc mov mov push stc jbe inc (bad) fiaddl push je cmp mov push push add mov ja add add icebp arpl mov mov dec leave and aaa pop lahf or adcb and in or dec mov inc adc mov mov out push or cmp pop jmp rclb insl sub test enter stos sub repnz imul inc les popf pop mov lahf aaa rclb test cmpsb aaa jecxz mov pop mov stc nop rsqrtps xchg sub inc pop loopne or mov pop push inc cmp (bad) adc bound add or (bad) jns scas addr16 push fwait sbb sbb jmp sub scas push scas fiadd pop aaa shrb and push and lcall sarl and cs mov imul or out call sub int (bad) cmc pusha outsb jle sub test outsb lods pop add lret mov push xchg inc xorb mov rorb adcl test add bound rolb lret sbb mov add (bad) out ss pop insl add xor push pusha mov and into loopne dec mov mov mov sub enter pop mov mov cmpl ss mov lods (bad) in fildl and mov inc jo cmp test xor les and mov cmp push jl,pt pusha inc xchg and lds mov (bad) mov add clc es insb insl xchg sub jnp dec subb dec (bad) dec pop xor nop push lods cld cmpb adc mov dec rcrb fnstcw lret xchg add (bad) enter add and xchg sbb rcrl adc push (bad) push jecxz xorb ds call inc mov loopne mov xchg push mov lock pop mov and adc mov add pop lock xchg testb push pop mov xchg mov jmp xchg mov inc sti pop fistp das and xchg dec out add sub dec jl dec xchg fwait aaa orb mov xchg dec popa push pop loope mov sar addr16 or cmpsb sub fsubl popf cmp xchg xchg jns inc popa call test sbb mov adc inc (bad) xlat pop mov pop jns jno mov arpl cwtl (bad) cmp push xlat andl and add enter mov inc clc mov cltd (bad) adc ds inc jnp adc ror push (bad) jo divb adc push loop sub sbb int (bad) or sub mov scas fimul pop es lock in out adc sub adc out sub in les push and je and in stos add or clc popf sbb mov add outsb jnp add mov mov inc jle sub mov and (bad) jecxz pushf pop fcomps sub xchg mov jl sbb jmp jmp jmp pop or sbb jg mov jmp (bad) mov mov mov cmpl leave faddl mov dec jne lahf addl push ss xor ficompl cmp inc loope jp add adc sbb fwait out xchg push sub xor adc jns mov pop nop pop inc cmpl cmp jmp xor jnp nop pop outsb pop dec inc cmp lods nop lods adc movswl bound jg jle dec mov or adc scas add lret and add arpl popf dec or add out and sarb adc iret jno lods shr jle ds movsl addr16 inc in add test add (bad) flds ljmp xchg add jl and sahf inc mov pop xchg and jl and or cmp xchg and xchg mov add rcl sub pop icebp inc inc adc (bad) lods pop call stc outsl adc dec adc out add fadd sarb push shr mov icebp jae sub lea cmp mov xorb and or cmc pop inc ficom aam daa pop mov out test popa push jno add frstor cmp mov cmp out sar inc pusha test push sbb subl jns dec adc push nop add sbb add jecxz push pusha ja fcomip dec mov daa popa xchg mov add lock fs jo or icebp stc push outsb lds pop pusha popf sbb rclb mov cwtl xchg daa push sub (bad) pop cmc jne fcmovbe mov or xchg inc aam dec movsb mov je xor ds test sti ljmp adc rclb adc ja xchg lcall xor sub rcll or mov mov mov inc pop and sub inc sub mov rorl cltd stc pop jmp loopne out or push jl leave inc aaa push cmp adc mov inc adc xchg (bad) mov add xchg nopl xchg push test hlt sbb mov xchg mov push repnz pop add xor test jp pop (bad) dec mov mov mov add mov roll add mov pop cmp dec and cwtl mov or add fs inc push sub xor (bad) pop (bad) sbb shl add adc jbe push stos and jl loop fsubrl dec lods jmp cltd xchg mov or popf push push xchg inc sub scas cli cmp push xchg clc repz (bad) xchg mov or mov add or leave cltd ss lock (bad) mov pushl popf push sub inc call add jmp jg inc xchg mov push jl testb push inc shr ds adc loopne mov pop mov dec pop pop negb repnz rorl rorb sti jno pop mov in sub ss repz xchg sub and scas adc and mov push push pop mov fwait mov pop lret lret loop pop sub mov sub adc iret and imul jo sub xor nop inc pop pop cmp push pop scas in inc dec lea fildl int movsb add jnp add dec scas and xor sub xor mov daa xbegin pop adc mov loopne xchg popf pop adc push (bad) dec rcrl aad test ja insl scas adc add xor adc leave imul aas lea lret inc inc dec aaa mov sub inc ss cs mov xor inc stos mov add dec inc sub jge pushf or cld stc dec lods adc notl hlt xor shlb add xor repz lret icebp push pushf insb js out loopne dec sahf xchg inc xchg jae jecxz mov pop mov push push pop jbe arpl mov mov xchg mov xchg add xor mov push popf movb shr add fdivs sub mov jp xchg dec sbb loopne shlb push and sbb mov test addb mov aaa mov rclb (bad) mov andl cmp and pop mov and mov xchg adc ret fs sbb (bad) mov jb adc (bad) int3 std icebp add or and popa xor xorb add mov pusha js int jae xor sti in aas and pop pusha out enter xor into mov jo repnz lea mov insb push xor add mov lcall push add mov xor aas js add (bad) cmpsb call pop (bad) aam add ja add mov pop popa add rclb add lock scas inc movsb popf jg push xor xor data16 fstl or dec gs pop cmp mov (bad) jb dec add cmp insb mov (bad) pop pop jo push jle sbb xchg mov jge (bad) push repz adcb add js test inc in (bad) xchg ret mov sarl push pop mov cmp pop arpl lahf jbe,pn arpl adc xchg jmp lahf inc push aad dec add inc or out mov mov or insb xor inc mov mov mov jp cmp cmp or imul out mov mov fsubrl pusha test adc mov pop pop rorl nop sbb mov dec mov shl cmp rorb and inc or aam outsl movl and xor aam clc pushf inc mov add mov push fwait out loopne push pop mov sub and das stc push movsl js add test nop add dec icebp xlat and (bad) mov bound popf cmc mov icebp arpl clc mov leave adcb ror adc aad mov mov pop inc mov (bad) mov or add inc rorb call xchg xchg mov mov xor xchg adcl test xchg and mov (bad) inc lea mov in inc lahf dec imul mov pop fisubr and or insb dec leave scas or ret mov andl mov (bad) cmc mov sub xchg sahf push sub mov bound ror pop add cmpsl dec test lock ficoml or jns dec adc and icebp out add (bad) sub add or popa cwtl push mov lahf jmp mov aad mov (bad) inc and add jo lods jno jo rorb mov shrb mov cld lret inc in aaa or cmp sbb inc or push addr16 loopne mov mov mov and and lea and jg sahf stos push or jbe adc add aas push rorb add (bad) sub or out les mov dec movsb sbb cmpsb roll cmpsl das jle dec and jo popf das in jns movsb data16 jno or (bad) mov sub rorb dec xor mov xchg das fisubl inc pushf mov inc dec les notl outsb mov repnz pop hlt pop push cmp lret push pusha xor cltd push popa and mov push push mov lcall jo jle cmpsb add mov test jb adc mov dec mov test xchg pop mov fist cmp test adc or mov add pop push or or xor push adc fldl sbb xor dec cs fldcw movsl ds aas mov xchg aaa stos rcrl pop jmp sbb mov dec addl cmp add cli mov add push mov dec jle nop mov xor xchg out jno mov dec ret subb xorb iret pop sarl dec (bad) aaa test jnp inc jne decb (bad) add les stos (bad) xor xor pop jg jp icebp pop js inc pop roll jo add aas fldl xlat jno in cmp nop cmc mov sub add dec jno jbe fisubr adc cmp sbb loop inc and xchg add push pop pop cmp nop mov jmp testl and bound outsl pusha loopne mov push out pop popa outsl out adc fs add mov sub add or pop call addb pop jnp add shlb call mov cmp sti mov mov in pop dec pop mov xorl mov mov pusha mov dec mov lods (bad) jp sbb cmc push adc pop pop cmp loop jno es add addr16 cmp sub inc mov add and test iret cmp or pop jmp sub test push shlb (bad) push mov sbb jo in cmp add or xchg jae sub mov pop push setg clc sub mov jg out adc sbb (bad) and push add jo and insl add push cmp or mov mov mov sub stc sub das mov xchg adc fimul jns aas sbbb sbb (bad) out (bad) fbstp or scas push xor mov (bad) sbb push pusha sub add add mov push and test xchg sub dec xor inc in (bad) and adc and add or popa loop dec mov fcmovb mov shrl and pop xchg push mov test enter pop sbb and inc popa sbb push mov push mov lahf stc inc dec iret push ja pop sub mov loopne inc add roll jns sbb dec inc xchg dec and jle (bad) pop mov shlb test fwait mov pushf push adc insl (bad) int3 gs leave data16 dec cmp mov lret cmp inc enter jmp test mov mov scas fiadd lods rcrb jbe mov push adc fidivrl mov lock inc aad mov push sub in mov lds arpl add rcrl pop popa mov mov data16 fidiv cmp roll movsl aaa lret mov enter add clc (bad) ss movsb fidivl pop sbb sar mov xor sbb roll pop ffree sub pop out fbld lahf add or cmp cmp ret pop pop pushl sbb (bad) hlt mov addb jo adc add sub push cmpl pop cmp add adc inc pusha ret enter mov mov fs or mov dec jo dec jl or adcb shl fmuls popf mov mov mov into imul enter push mov mov and add es inc cmpsl jmp sarl inc (bad) mov adc (bad) (bad) push push jmp and dec cld xlat adc and jmp jmp in aas inc and add js test add test inc jne adc sbb push push jp sarb test pop pop out loopne dec clc sub sbb sub mov je lea fdivrp faddl test nop out xchg xlat cld jmp mov test hlt fiadd sub mov sub inc mov add stos add mov and insl mov jmp add and aas sub pop jbe cltd jns fsub xchg mov pop dec or jecxz sub or (bad) or enter and push dec mov loopne sbb (bad) cmc push inc pop rolb mov and push test pushf dec jmp scas dec ja sub ret push fwait insl mov add cwtl (bad) xor test add (bad) adc cmp adc pushl pop push and (bad) leave inc and push lds repnz cmp inc and cmp (bad) cmpsl insb inc sub jge mov cmc mov add sub cli (bad) out add nop and pop and pop ds ljmp (bad) xorb adc or add xor sti jo shrb or in imul call inc xor movzwl test xor push lock or mov or add int cwtl ja idivl xchg (bad) xor pop mov cmp mov int3 cmp js mov lods addl mov mov adc add add or jp push xor xchg cmpsb adc jg jl add mov sub inc rolb add aaa stos loopne mov roll lea and decl and lods enter push sbb xchg cmpl cs lcall inc mov dec mov shr add data16 fcmovbe pop pop rcrb jno loop pop and xchg push ja xchg mov iret scas mov test (bad) cwtl jb inc sti add bound xor loope push sti loop xor bound mov divb jnp push mov andl nop push aaa xchg mov inc (bad) xchg add push fildl add out mov and and loopne push out add hlt into xchg add arpl loopne push xor cmpl xor adc fldt mov push nop sahf xchg movsl push pop add xor mov pushf mov lods fs test push iret xchg mov add cmc pop dec outsb mov movsl xchg fmul adc fcmovb xor mov xorb lret add jmp mov dec nop call pop sub add loope stos xchg fwait mov sbb pop push daa pop xor and add insl fs ja mov and les dec mov xchg nop mov pop add out decb test mov dec popa and sbb hlt fwait and sbb xchg nop nop int lea cld add test sub dec fwait add add push inc xchg aaa xlat cmp (bad) add jne pop pop push (bad) mov cmpsb rolb and enter xor mov ds outsb add xchg sub or daa mov jae test inc and (bad) icebp movsl test cmp stos add cltd sbb ja pop pop aad (bad) outsl or jle adcb test rorb aam aad call cmp movsb xchg loope test inc jl pushf jo shlb fnstenv ja pop aad (bad) popl sahf xchg into add push repz imul sti xchg adc mov cmp dec (bad) cmp rcl test sub fiaddl jnp idiv mov fldl sub sbb push bound jl incl dec (bad) fs sahf inc je add aaa jecxz inc push in popa pop push xor or adc fdivrp icebp jbe fistpl (bad) mov (bad) adc imul or push nop decl imulb or add mov sbbl sbb loopne and das faddl hlt pop sbb push fsubrs mov sub push outsb repnz jo mov mov ljmp push mov ret and xchg or mov add mov js dec sub add data16 lret jmp movb ja pop cli test push pusha and or or jne and push divps insl cmp and cwtl and nop xchg push in ss verr out hlt out push mov cs pop scas inc popf dec and cmc push add jle daa testl stc adc insb jle add in cvtpi2ps push and xchg stos rcl lea add std aam int3 test (bad) aam jmp je pop and jecxz dec sbb sbb or dec (bad) (bad) cmp pop mov js cmpsl add fimul mov rcrb dec outsb in int dec jmp dec add int xor ss sarb stos jne xchg sarb mov jp cmpb jl mov test and cmp bound (bad) mov js aaa sbb push dec movsl dec fdivrs jecxz (bad) shlb iret pop push inc mov int3 outsb aad das jp dec xchg jae icebp cli pop lock sbb sub pop push fistl sbb (bad) add pop xor in sbb lock cltd mov popa inc pop inc popa in and sti add jge jno test cwtl stc xor cmp push xchg mov fcoms mov sbb (bad) repz iret mov nop test add movsb aas sub icebp xchg and mov mov mov add data16 push jmp andb movzwl dec inc out loopne xlat loopne mov xchg jb cwtl xchg inc lods or add lret inc jo add mov es mov sbb std add fs mov inc adc mov add sbb lods fadds add popf adc jp sub jns mov sbb test xor leave fcomp mov popa xor nop pusha imul sarl test mov xlat add add ja inc push xor mov add push popa nop xor mov and mov cmpsb mov xlat adc gs or or sti cli pminub or and dec loop fcomi jo shlb aas (bad) jno test xchg push cltd jno xor std add adcl cwtl pusha mov popa mov (bad) cmp leave sbb hlt lea dec das mov adc xchg sub in xchg dec adc pop mov icebp (bad) mov insb mov (bad) (bad) ss jg push add mov loopne cmp push testb xor cmpsb add mov cmc add or and das fistl cmpb add imul cmp add test pusha loop aam add cli lret push leave (bad) pop adc int3 or or orb or aas sbb jl jmp cli test ljmp ret add dec shrl cs add ss popa cmp xchg lods cmp lahf cmp test fsubr jnp or add (bad) es push loopne popa jo lret aam les xlat dec out loopne clc push adc or cmp add jne lods scas subb fdivs sahf add add cmpb pop adc jmp fidivr or ret adc fidivr add xchg in sub xor pop imul pop push xor adc pop mov lods mov mov sahf dec imul push orb mov sbb xor shll loope xor lcall push xchg mov scas dec push (bad) fadds xchg nop cmpl xchg sub dec sarb cs add push in push inc jmp stc jnp or ficoml add js sahf and jle or adc scas jno fdiv add push adc mov loope adc add scas outsb bound addr16 adc jnp adc push dec and imul or pop fs or add xchg xor les int jns mov jb mov jns movsb jecxz push pusha je jb cmpsl cmpsb mov add push (bad) xor add jb out fisubl repnz fwait es lea mov int cmp (bad) sahf popa imul xchg sbb mov jne test test popf mov jge xlat cli jmp lds mov mov movb rcrl and pop push push mov mov icebp and jns aaa ja mov dec add pop jl pusha mov push icebp jae inc lcall lahf mov nop or or cs jmp mov add inc inc lds (bad) repz in mov popf add fs aam int cmp mov add jmp fidivrl lea pusha xor insb movsl add pushf jb lcall mov push xchg jae lods nop insl std shl out loop lahf (bad) leave pop xor mov sbb add (bad) and aad inc sub sub sub jmp mov das push inc mov xor pushf fs inc pop jle pop xchg inc or xchg negb pop xchg inc pop insl push loopne xchg out push ret shr mov add loop out jo int icebp sub pusha mov mov and aaa adc push iret mov movsl data16 mov adc pop enter (bad) push fsts push aad mov repnz outsb repz cmp push pop and cs xor sbb pop arpl inc adc fs popf push sbb bound repz sub jge jp,pt add mov jne in xor mov pop jns outsl (bad) inc jno iret fs cmc xor (bad) nop xchg gs cld (bad) cmpsb mov dec mov push and insb divl jns pop and call push cs (bad) mov and subl or mov push pop sbb and push mov cmpsl inc popa fild mov add and rolb dec mov bnd xchg mov movsl or xchg jmp xchg test leave sidtl add xor add sbb or and add mov pop call popa fcompl push lahf push xchg pop add and insl lcall jl hlt add pop mov daa xor mov adc mov lahf iret outsb inc or xchg xchg rclb mov and mov leave jl,pt pusha mov les andb fistpl push push mov mov sub add outsb sub (bad) out test movsl and ljmp jmp add jl inc (bad) lods jno xorb in cmpsl and mov test jb jbe int shl rolb mov dec in xchg add add add clc add xchg les add in inc push jo cmp test daa mov jnp rcr mov call and ror mov adc test leave fs add mov mov sub push (bad) punpckhdq mov fchs sahf loopne and adc mov adc add in dec cmc lahf arpl mov std add jbe or adc out pop dec cmp repz cld jo lea in loope rcrb pop je sub sbb fcom xchg loopne add (bad) xchg cmp push inc or pusha pop cmp mov mov xchg fcomip das daa jg cmp mov addb and add fcomps adc call jne pop push adc les lret dec into cmpsb cs popf repnz pop mov repz sarl fwait mov add and inc add mov js sbb lods pop or out inc std fmul mov xchg dec mov scas pop xchg adc fistl sbb stos imul decb loop aas pop xchg adc add fs sbb loope mov fxch (bad) outsb cwtl daa movsb nop mov xchg add lods adc ret jg ljmp stos sub or pop pop (bad) lods int les stos fstpt sti data16 test shrb or xchg iret hlt and cmp aaa add xchg inc rolb mov (bad) mov faddl pop xchg jno shll mov add mov add or popa add xor mov clc dec adcb and andl lds lods add adc nop lock cmpb outsb xor pop (bad) dec dec sub into pop xor mov add sarl mov loope cmp in ror xchg mov dec or daa pusha shrb pop cld cltd or adc daa push lcall stos pop loope es xchg add lock fisubr push inc jecxz push sbb stos inc mov jp xchg xchg sbb and ljmp fwait pop push mov imul pop lea sti jmp adc daa mov sbb jnp insl pop add or cwtl mov (bad) stos dec add xchg push std mov rorb pop sbb mov add test out push mov pop or outsl into inc pop (bad) cld into mov jnp push mov push andb test or pusha (bad) xor push rcrb mov fcmovnbe pushf cmpsb dec push popa ficomp xor push gs mov shll pop popa jle push and sub test sbb sarb push dec mov rorb mov (bad) rclb add cld cmpl aaa jg xlat jb pop (bad) pop mov mov idivb mov push push out dec push mov push pop add xchg icebp faddl mov xchg mov cmp and cmc push add cmpsl mov les push lcall inc ret cmp dec jbe mov inc add gs xchg outsb push outsl add pop repz int jo dec mov push mov adc jnp add scas push add adc ja xchg in mov xor or cli insl jge lcall mov das int3 and pushf pusha inc xor and add pop inc jbe mov test mov fimul mov bound frstpm(287 js mov jb xor pop add add test loop addr16 mov adc add (bad) incl pop or inc cmp sub mov fstpt movb test mov fwait xchg int3 stos subl push lock js dec jbe adc sahf inc pop sub dec lcall cmp nop test sahf inc and out orl popf leave arpl dec std adcl adc lock fyl2x nop sub mov adc js imul add cmc pushf mov pop xor adc inc mov lods sti call fwait jmp insl (bad) out or (bad) jo add rcl xor cmpsl xor push pop pusha enter mov mov xchg inc xchg pop test rclb clc adc inc je inc xor or sub cwtl ret out add jno popf push sub int3 or scas les lahf arpl imul mov icebp adc sub add mov push mov pop dec mov sub loope add inc jae jne sbb sub jbe cmp jmp adc js sarl sub lret js jmp and cmp pusha add clc fmull daa fs add xchg push adc pop cmp sahf bound popf push sub jmp out aam dec push sub and clc ja mov aas pop and movsl sbb (bad) sub sbb or mov pop add clc dec xchg pusha push push xor loope loop psrlw mov pop cmpl xchg pop pusha xor and xchg movsl dec xchg int lods iret mov gs hlt cmc push loopne rol lea push xchg add inc sub les (bad) ja mov or add mov adc sbb leave pop add cld jle faddl ja adc inc dec mov add mov xlat or inc add inc sub xor xorl pop push add movsl clc fcmovb scas and xchg outsl cmp dec (bad) repz pop dec lods sbb ret add jne and (bad) cmc insb adc or ljmp sbb icebp call jo inc fisttpl push mov rorb icebp shll sbb mov mov add jo in add inc pop mov in mov xchg icebp push add xchg js jae popa mov cli dec mov mov adc mov mov shrb inc aaa adc add cmpsb ljmp add out and movsb adc sub test or aam sbb pop or or das pusha mov loope add sbb lods and sub mov pushf fidiv mov sub mov test mov clc sbb popa js in rcrb xchg pop fstl jo call ss testb lods lcall in and jecxz test lock rclb pop push inc (bad) ja icebp sbb mov add (bad) mov loope sub jb nop push push fcoml fwait sbb cli and add add fucomp pop pop pop jnp jo or popa push dec and dec dec jecxz sahf enter loopne (bad) mov dec add jge in loop jbe ret out stc fwait (bad) mov popf dec loop jo jno lcall in mov sub fwait jbe or cli pop add test inc xchg jmp pop pop jmp mov (bad) pusha lods adc dec jg lcall jo xchg cmc sub mov cld pushf mov inc cli ret cmp mov imul jnp cs movsb testb and (bad) (bad) cmp push (bad) aas mov xchg ret push sbb lret lcall pop mov pusha sub inc cmp hlt (bad) adc bound or and shrl or cmp out or mov xchg mov dec xchg and sbb popa pop rcr pop inc jecxz loop pop arpl dec lahf insb adc and jge push inc movsl imul idivl jae jo add in sbb scas subb dec xchg into add xchg xor and add (bad) rcrb in sbb addl pop and loope xchg mov mov fnstenv jbe sarb mov icebp add sbb jnp mov insl jns adc cwtl insl add sub add pop movl jno test ficom rolb push loope and xchg sti sahf fadds daa outsl and mov or cmp shr lods push and pop inc xlat out ss andl sub shlb sbb pop adc inc push sbb lcall or in inc ja leave mov out cltd mov add out cmpsl add mov push (bad) adc gs jo inc lds lds outsb sub xor fistl or ljmp add push mov nop pop push adc add cmp es hlt cmp pop add outsl aam add and cwtl decb mov lock rolb ljmp xorl sub (bad) jo cwtl divb xchg (bad) (bad) mov lds push lods mov (bad) faddl lret push pop repnz jl push lock mov add push cli xor insl inc loopne cmp stos or push daa hlt je into adc inc orb aas jecxz or sub dec orl sbb mov jl ss xor jg add inc inc pop (bad) hlt loopne cmpw iret push and dec mov add mov pop aaa and ja or lret cwtl push push out mov dec (bad) and adc and jo dec add mov mov or fsubrl (bad) icebp or ret jnp test lock or loopne adc pop push mov cmp jge inc inc add push (bad) rorl xchg jno inc pop add push adc scas inc stc add sbb sub arpl or xchg scas fwait push (bad) mov sub xchg out cmpsl push pusha or xor pop dec in or xor icebp cmp adc fs fiadd (bad) sbb pop imul sub rol xorl aaa fildl roll xor lods mov push std sbb cmc pop push mov das (bad) dec mov movl mov fcmovb push stc cmp dec cmc push mov mov and inc dec sbbl inc add sahf roll xchg add mov xchg out sti rclb mov popa movl fnstenv add repnz ror adc pop xor add sub jmp cmp mov rorl dec movsb mov inc pop push repz mov sarb lea (bad) das adc loope push scas xor adc cmp mov adc mov clc call leave cwtl imul fisttpl push int3 add push lret rcrb mov loopne push xchg pop xchg ret mov int3 jns adc add pusha cmp ret mov xor mov outsb mov repnz icebp fnstcw xorb push push adc add and je jge outsl sbb mov push movsl stc shrb mov data16 inc sub cmp mov and loope out icebp aaa (bad) and sub hlt xlat dec adc (bad) or stc pop mov add pushf sqrtps add loop test mov cld das and nop xchg sub je and (bad) mul (bad) and movsl sub imul fwait mov add rorb and dec rcr jnp and jge fstl or xor jns das iret add inc ret ja pop and xchg lods sub lcall movsl psubusb popa imul lods pop sub push int3 xorb mov test mov pop xor sti loopne xor das in imul mov cld jo and xchg xchg test arpl dec xor jnp lret jnp mov jmp or mov mov (bad) xchg sbb or fsubrl arpl test cmp dec lret lcall mov cmpsb mov push movsb cs xor into repnz jns lods mov xor or sub push adc and or ljmp aas mov pop cs sar pop dec cwtl mov dec sbb imul mov je add movsl add push popa xchg inc sub add (bad) mov add stos mov testl ja pop imul iret dec and out pusha test push icebp add cld jge pop push jge ljmp sub dec test out pop dec ljmp fildl jmp loopne xchg stos add dec xlat sbb push cli jnp nop in inc cmp pop fistpl xor add adc and mov iret mov push incb lcall into pop mov lret push add pop loopne cwtl inc (bad) xor add mov mov push (bad) ljmp dec in cmpsb xchg roll sub adc pop add or jge into call dec add push hlt loope mov clc add or add mov push cmp xchg inc inc and sbb add sti xor xchg xor lock jg add xchg adc pop ret mov imulb mov in divl sub and negb and push inc rol clc mov and in pusha jne mov adc sub das xor mov pop cmp xor xchg or pop cli adcl ljmp nop loope jle (bad) xchg repnz hlt ficom ljmp es mov add cld inc les mov dec vmaxpd ljmp scas lods lret (bad) clc add mov sahf sbb jo jo jnp mov xor loopne stos sbb or jecxz pushl jns push mov fisubrl hlt add sahf dec fs add mov xchg cmpb inc enter aaa repnz fisubrl add jp add pusha push aas inc sahf add push sarl and imul dec das mov xchg lcall push mulb loopne dec dec cs fidivr or fbld es sub pop inc loope jne and push mov adc in xchg mov (bad) (bad) xchg fs xchg test hlt in loop notl pop adc pop jle add dec lods test mov cs pop sub xor mov pushl gs or and fdivl mov gs add push pusha mov push je imul push jecxz roll imul loopne rcll ss xchg (bad) pusha cmp cld scas jo popw xchg test adc mov sbb pop pop jle xchg imul push imul adc dec sub popf or cmp test sub cmp in popf adc xchg xor mov mov mov sbb xor outsl push adc loop lea jp adc push xor iret call mov adc jg jmp lcall fs es and pop scas add mov ljmp rcll loope mov mov jmp mov movsb dec out imulb mov rorb enter xor clc pop pop fs mov cmp adc gs add sbb mov loopne fild insb repnz mov dec push push jbe pusha pop scas jne pop pop out pop push outsl pusha lods and mov popa sahf pusha mov jge mov movsb stos push dec mov add pop aad mov cmp in lock pop add nop push sbb and sti fwait pop ror mov ja aad inc sub aam arpl cli daa lods sbb in leave or xchg or pop adc mov xor outsl mov out mov dec or xor jnp push insl lea sub sub sub popf aaa push or mov inc clc cld iret cld sbb add sbb daa xchg mov and (bad) addb or ficomp adc inc cmp bound fucom lods mov mov add mov nop call mov xor stos adc or mov add xor jg push and je xchg ds sub sbbl jae and sub outsl rorl aam or loopne test int shlb mov push repz aaa (bad) (bad) push daa mov rcr xor (bad) xor lahf aaa movb std mov dec rclb pop into mov sub fistl ds pop sahf daa insl outsl ret (bad) aas adc and xchg cs mov aam je cld add sbb add xchg out inc imul mov mov mov mov sub mov enter test xchg pusha fdivrs push dec pop leave inc fistpll or mov and jbe mov mov jl sbbb fdivs into cmp sbb or jne in jo push mov icebp jno sbb push testl adc rorb pop jp or lods dec mov pop add out xor lock outsb sub sbbb (bad) aaa es sub lret mov jbe pop mov es sti sarb or mov das mov or sbb add sub mov add xchg (bad) jno sub cld nop jp shrb daa (bad) sti pop aas push inc pusha (bad) insl jge add rolb xor mov loop add mov jae cltd popa out pop inc nop (bad) xor dec insl jns mov es cmp and push faddl push add jno fist out out daa loope sub into cmp test add jb dec jo and iret add mov cmp add push repz dec lods int3 xchg shrb test push ja mov adc jno imul (bad) aaa jnp jecxz inc dec lret xchg push dec pop add push int3 loope mov sbb add outsb popf rep xlat test cli pop adc adc jnp or add sub mov sbb xchg sub je inc shrl xchg add fcmovnbe sub xor jmp cltd and shufps ret dec jo gs enter (bad) out jo sahf xor ret inc loopne leave pop xor mov mov daa (bad) adc sub call shlb imul push pop adc subl call movswl lret and xor cmp cltd or je mov jmp in or xchg and jmp add test inc rol dec ds cs adc inc and or and bound cld mov adc stos pop pop and pop call mov movsl test or cwtl fstl (bad) dec in negb pop push fisttp lock push add sbb scas imul mov cli xor mov popf cs mov fiadd sub xchg mov and lret adc pushw xor inc outsb cmp (bad) cld pushf out add out sbb std mov xor outsb cmp sub sarb xor fcoms or mov push ret fisubl or and add (bad) xor aam int add scas dec sub sbb mov adc push pop dec inc or shrb sub cmc lea or pop mov fldt rclb test fdivrs jmp sub sbb popf adc mov xchg sbb lret and jo sti (bad) pop dec dec jns pop add (bad) out mov adc cs dec or push hlt fs ret mov adc lods sbb loop inc xchg add adc (bad) clc and sbb jmp mov aad fiaddl mov movsb icebp pushf cmp movsl and xor enter sub mov mov mov fidivrl jle adc (bad) cmp adc out pop std repnz pop repnz stos repnz jne ds mov test xchg or add mov add sarl andb add aam cwtl adc xchg push cltd ret adc pop xchg xor jg push test sub pop and dec fdivrl movsl imul mov push inc out xor adc add add mov pop in push mov sub ret jb jae lock jmp and (bad) and hlt add adc mov cmp das add inc adc inc cmp sarb mov scas add add cwtl sbbb aad sub cs or mov jp cmp aas daa incb pop faddl outsb add lret xchg rcll sub mov or popa je jmp in cld orb or cmp mov mov adc adc mov jno inc xchg xor inc add xchg jge cmp fdivp scas lock shll sti les mov sbb (bad) pop push mov inc ss lods fstpl inc xlat mov cmpsl xchg loopne insb xor jo pushl or (bad) fcomps pop or aad rolb cltd popa cmp decl add jecxz mov decb cltd daa clc sbbl imul push insl aad bound push js das cs mov out data16 dec and test mov aaa fldl sub add ret hlt pop call lods inc sub dec ljmp or or add push testl call out xchg mov enter mov add loope add sbb mov ss add xchg (bad) (bad) je push cs mov cmc rcll jo aas daa add pop repz loopne cmc jo pop fdivrs adc adc xor fisttpl mov cmpsl popf icebp xor pop mov gs repz xor xor jbe dec jae pop adc mov mov in mov inc iret mov mul mov xor cli ljmp sbb pop sbb add pop jae pop aad nop fidivrl sub mov and scas cwtl or dec or jmp loop or mov and fs pusha pop repnz mov mov add loop test push add mov mov pop mov pop add jb outsb sbbl ljmp rclb in cmp ret in adc push imul bound push fildll sbb (bad) jl mov loop stc or ja fidivl enter xchg loop cmp pusha add popa cmp cmp dec std enter push jno movl push push pusha and inc outsb mov add shlb or (bad) loope into add in outsl sarb std add mov popa pop and daa lret and jns mov stc add cmp add outsb in dec stos xor repnz mov add inc mov and adcl mov pop mov push xchg out call mov (bad) (bad) inc (bad) out mov mov sbb test jp push or mov pop les mov loopne cmc mov negb out xchg pop shlb cmp outsl pop add (bad) imul and fbstp enter adc scas fwait add mov andl fdivr cmpsb or insl pop aad inc ljmp sbb popa add and or xchg dec stc pop mov xor (bad) iret mov scas push push mov pop pop pop jo gs push stc scas int imul (bad) push push sbb inc stos popf jns insl push bound aam sarl cs cmc jp lods inc mov and push inc and and stc fnop aas dec fiaddl or xchg popf adc inc push repnz std lods and sbb and jg add stos enter jmp adc xor add or add mov adc aad adcb xchg stos popf jp lea fiadd loop xor lods dec cmpsb pop mov jle jo pop jbe divps iret das push xchg add xor add insl cltd movsb add pop push add nop push fstpt jg push push pop stos mov lret add push pusha test inc scas stos or adc and imul popa lret mov inc xchg hlt mov and test sbb jae shll (bad) push pop imul (bad) loopne popa rol sbbb push add pop out in dec call dec push jbe rcr add mov rcll mov std movsb inc pop mov jl mov mov add scas add jmp mov (bad) les inc xor add mov or (bad) pop mov mov lahf xchg dec add xchg cmp sub call enter jnp fcoml iret push sub jmp jo lcall xor ret dec fxch mov and push (bad) imulb (bad) scas xor push mov pusha adc xchg ficoml add or adc push pusha (bad) repnz pop inc xchg inc sbb adc mov pop add pusha adc inc test (bad) xor jo adc pop cmc mov fsubrs mov mov or test inc sbb xchg pop inc mov jl outsb cltd mov dec das stos and mov lret scas (bad) adc popf push adc xor fistpl not inc sahf push inc sub sar xor das jg and add xor stos add shrl dec popf stos push inc ret xchg pushf ss jno cmpsl ror movsl jnp movsl shrl mov dec and lcall sbb loop movsl add out or xchg adc inc sbb test xor adc fstpl test fs mov or push pop jns dec jp pause jb in inc clc xlat out and or add sub adc mov mov sub xor sbbl and mov sub and ret push cmp test mov jg (bad) lock mov int hlt adc dec in sub popa imul mov xchg xor test sbb fwait jno mov ret aam hlt mov sbb pop nop jae jo les das xchg loopne leave jns das in mov mov lahf dec mov loope jb add cltd cmpsl or bound clc mov pop xor sbb repnz rcll aad fwait ret andb xor pop lods nop dec (bad) in test (bad) call fwait ljmp aaa daa add sbb jns call dec or aad lea (bad) icebp std dec or jp xor daa or add add pop fsubl cmp jno pop inc push (bad) jae add pop xor outsl clc xor mov jnp fmuls add jmp cmpsw movb xor xor push (bad) test and xor add adc push bound xchg les and cmp jg ret daa in add mov enter das adc dec pop int3 mov xchg fs add scas aam (bad) ljmp je (bad) push das aaa sub adc lea in rcrl xchg aad jae stos sub or xchg pop clc xchg test orl add sub xor roll mov out and cwtl inc mov popa popf mov sbb inc jle cmc andw rcrl sbb mov mov int sbb addr16 add xor jp push and adc cmc xlat test cmp push mov xchg push push repz insb mov pusha stc xchg popf lock xor or mov stos lret aam mov mov test sub cmpsb dec add jno mov js aaa inc insb sbb adc adc out and stos push inc add add fs scas int popa (bad) pop imul pop stc call sbb and test and and jmp mov add push jecxz push sub and lds add push or mov fldenv stc cmc jno ja dec xchg jmp faddl sarb mov mov lret outsl in xor push mov sahf cmp cmpsl and push cs add add or loop les repz adc lcall pop dec lods movsb mov inc pusha ljmp jns test push cmc mov into add out popa inc inc add das adc jp add xchg sub out mov inc mov mov call mov dec mov jp add shll fs add out popf outsb xchg sarl add icebp ljmp mov push les xor jge mov dec fistpll and xchg sbb pop cltd pop mov cmp cmp sbb mov loopne clc sub pop fiadd int stos sbb xor pop sbb idivb push lock fwait add dec jb xchg mov cmc jmp je (bad) inc sbb (bad) jne call cld mov je (bad) inc sbb xor dec arpl xlat and push and jno subps test movb into fmull ljmp cmc adc mov sbb mov and cwtl add push out fwait jl loopne das or arpl test aas loopne sub pop movsb pusha adc pop inc jg dec push mov dec imul dec daa add ja popf imul sub jae loopne mov cs pop into mov lcall outsl es test xor sub xor ret inc xor mov xor das dec dec aam hlt push or adc cmpsb jmp lret cmpsb adc adc rclb jo and push xchg sarb imul sti adc xchg pushl jl out jmp das push sub clc sub xchg jae pop aam pop test mov add daa xlat sbb fidivrl xchg fstl leave and cmp cltd nop dec mov mov pop loopne pop inc xor fsts sbb fcoml add arpl ljmp outsl and pop (bad) mov xor inc xor (bad) shl add dec add daa add xchg ds loopne pop pop sarl sub jl inc std jbe rolb es out sbb fisttpl mov adc pop xchg loopne dec call call mov insb mov addl (bad) fisubrl shlb xor mov push jae jmp jbe jp nop movhps dec pop call pop or push pop idivb lock pop sbb (bad) test xor popf pop and outsl dec inc sbb in sub adcl jno add adc inc scas xchg jae add out adcl sbbl sbb push jnp cmp mov repz shrl push fsubs cltd aad aas push jl add sbb movsl pop (bad) daa or and mull lds lods mov loop inc lods mov jge hlt out mul add sbb in add mov icebp dec add add push repnz js loope imull xor jnp nop inc jae push push mov call push inc mov dec shr add lret ss or imul pop cmpb je mov aam cmpsb or inc je popf and mov or pushf sub rclb inc sbb or pop pop icebp loope in jb adc sub enter frndint test adc mov clc push movsl adc push push xchg fistpl or sub das dec test enter adcb fs push pop mov push in nop les sbb repnz add xchg mov in pop test push sub ljmp mov add cmp inc sub xor mov add dec push fwait outsb ret pop aaa mov xor xchg sub sbb inc add jmp rorl sarb popf xchg loopne lock jl shrb lea insl cmpsl (bad) cmpb repnz and icebp push add dec jo (bad) loopne add pop into xorl mov scas or add shll mov mov pop push jmp xchg sub fwait mov int fiaddl jp outsb and xchg movsl dec into cli popf dec testb sbb out sub ss xlat xor inc sbb shrl das fidivrl jecxz mov push add cli es mov enter pop movl fs and and mov mov mov jmp mov pop aaa xor jg dec add out imul or jbe sarb sbb cmpsb mov xchg js pop push stos adc jmp sbb call cmp push mov je and mov addr16 movsl push mov stos sub jnp lods xchg (bad) add pop xchg orb arpl mov or mov pusha popa jg pop or pop (bad) sbb mov jle sub sub push test pop jmp (bad) xor loope jbe push mov inc jne arpl popa mov sti sub (bad) mov push mov and outsb jecxz pop shll mov in jo insb imul int or sar mov jge mov inc mov divb sarb movsl stc fisttpl pop adc mov aas fwait cmp xchg nop sub mov inc jmp pop or insl push mov hlt pop pop std adc mov mov popf sti cmp out add pop je pusha mov xchg fucomi pop push sbb icebp clc mov jno pusha cmp lods fbld cmp or scas mov add inc sbb scas int icebp adc cmpsl add icebp les clc imul cli test adc mov jg push ret lods push pop sbb ret clc push das mull push pop adc in sbb add jmp add xchg xchg jl movb push push sbb push sub inc jne into testb mov add aaa xor fs inc push push cmp pop in add or sarl pusha mov mov jb mov enter es sbb or (bad) out sbb mov subl push clc hlt or (bad) hlt (bad) mov xchg pop clc xchg popa mov add (bad) and lcall daa mov mov pop inc xor jmp cli adc outsl call jg ret mov lret xchg fwait xchg and or movsl push pop sbb jb adc repnz and shrb jb adc xchg sti aam mov mov sub lods insl adc inc sbb popf xchg in ljmp mov not push adc add cmpsb js fs into push push mov xlat stos gs mov rorb fnsave push pop adc pop div pop push sub fnstsw jbe and and pusha hlt movsb inc in ss inc mov cmp pop jno mov jbe pop pushf repnz addl rcr (bad) pop mov imul pushf fsubrs dec adc sti imul mov aad out imul inc je sub ljmp cltd out inc cmp je jmp fildl scas mov aaa (bad) pop (bad) daa iret shll lcall je lea in sbb lahf leave (bad) rcll sbb sbb jbe mov xchg dec pop call stc jns imul jecxz mov mov or shll in mov (bad) out (bad) jbe adc repz and adc mov push testb mov lret add loope testb mov adc mov inc xlat cmp mov loopne sahf inc andb mov loopne movsb xor nop pusha pop les enter jle cli shrb mov out push push out xor mov test sbb lea add ret cs mov in outsb fisub fiadd mov test mov mov nop add mov sbb ds fcomps enter xor jb lods popf add pop dec pop int loopne mov ljmp call mov or mov mov popf in (bad) add adc jmp pop pop addr16 xor dec negl pop sub mov js dec add pusha push mov pop add lcall mov daa inc jl leave hlt push (bad) in das aaa aam push mov das pop jb pop mov push sarb movsl sbb sbb repz and (bad) frstor jne add mov das call sub xchg xchg or ds mov mov das int loope sub or fucomp inc popf push add mov dec sub mov scas sahf inc push cs mov and aas pop test add jb in add in pusha and aad or xlat pop ja xchg mov and flds adc dec push push nop inc in popa rcrl fimul jg iret add push rolb adc call scas adc stos aam and ljmp pusha aad push push repnz xchg xor and push pop mov cmp pop sbb and (bad) mov mov clc sbb and stc jbe mov add addb inc nop mov jb jg add and adc orb pop popf pop cmp sub add in cld mov addl dec or inc cmpsl (bad) fbld sarb push xchg sub xchg jmp shlb jmp sti pop sub adc call or adc push adc xchg roll pop pop cld mov xor xorb add mov adc je sti (bad) leave adc sbb cs pusha mov daa or add ficompl lods test imul punpcklwd int and pusha push push ljmp sbb sbb push outsl sarl dec aam cmpsb lds shr jne add shll rolb push mov fdivrs jl incb je popa aam inc cmp aaa inc push movb loop rsqrtps inc cmp xor mov test stc call cmp adc mov loop xor mov adc stos push repz mov xchg push mov inc outsb lret dec xlat cmpsb push loop pop pop sbbl add test mov push rorb cmpsl push or pop inc lret xchg add (bad) fisubr js jno cmp mov dec (bad) or jbe sarb aad (bad) jp movhps xchg repnz xor mov dec pop lret out add dec push add dec jno jmp sbb jo adc jmp out jno stos sub mov sub dec js xorb add ja xor add jno adc mov pop add jecxz jbe pusha mov push adc mov rol adc lea pop scas adc mov adc push scas mov pop loop sbb repnz jne mull sub int cmp pop push ffree and or sub jle out pusha fistpl nop mov push xor push stc and or aam jno lock popf adc xchg add jg mov sar popa add or enter cmp pop push mov ljmp je loopne xor fildl lods mov dec pop mov notb clc mov mov pop cmp std xor inc ret sti in mov cmp mulb jne and xor jne cmpsb cmp stos mov and jno orb test cmp or jmp repnz sarb dec mov out add jb cmpsl pop inc cmp mov or in sti pop push push or popa lahf mov sbb add inc lods stos bound dec aam (bad) fistl inc mov sub scas icebp popf (bad) mov mov jae jo sbb leave pop std adc sbb xor sbb lods cmpsb or push lods mov add cmc lcall mov xlat push fdivrs pop andb jno add data16 jmp add sub add push loop leave mov dec add std inc xor xchg imul rorl movsb mov and hlt mov mov mov imulb mov dec mov lock and jecxz iret jmp inc (bad) xor jg dec push jecxz stos pushf add dec push sbb xor add mov dec outsl (bad) cmc pusha pop mov lret adc popa mov add aas xor pop jle jmp ret xchg xor jle nop outsl aaa add fs sbb add mov pop mov cmpb (bad) xor dec daa pop popa rorb sahf lds push out orl das loope icebp das sub dec and and pop inc jnp add jbe cld rcrl das sbb mov pusha push cmpsl dec inc mov das sub test cmp loop es ljmp stc lret jb roll jl repz fwait pop ljmp pusha mov sahf sub clc mov cmp pop cmpsl rorb and imul (bad) movsl fldl add mov mov xor bound cmp mov xchg sbb scas inc sub fcomi pusha lahf sbb sub fs call fstpl cmpsl les push (bad) test mov add pop mov push jns pop adc popa and leave jg push sti cmp es cli mov jge add addr16 xor bsf and sub mov fsts adc push mov and pop mov cmovnp push mov cmp sub mov dec mov jnp jo test sub pusha sbb pop loopne popa push (bad) ss adc (bad) in sub shrb ficoml dec dec add pushf dec mov daa mov inc add int or ret std adc push adc dec mov (bad) enter cmc ss (bad) jnp cwtl fdivs pusha pop jbe dec pop mov mov dec fdivr lret xchg stc stc test xor jp leave dec mov cmp xchg ret out jg and add fs scas in je push cmp and fadd push push adc cmp pop adc clc push or clc or js lea int xor pusha mov add clc popa mov pushf push fmull out pop loopne and ljmp jmp jle cltd jl jb mov stos js mov je rorb pop mov jg ja add cs and mov mov rclb and cmp mov pop mov mov inc xchg xor dec mov pop movsb lods sti cmpb mov fs mov cmp ljmp loope (bad) jmp pop jnp imul cmpsb or push in lods dec clc pop xchg fimull dec sub fs xchg repz xor std push lret xchg or adc add roll and lret add hlt jo add mov negb imul add sub outsl inc pushl loope mov (bad) fildl mov adc pop movsb mov push xor in leave cmp sub inc ds punpcklwd sbb cmp out pop (bad) das call cli mov push and or in pop mov cmp jecxz sub popf stc ret pop std (bad) lods sub inc jnp scas xchg ss pop mov sub and add add mov push and or push rcll mov mov xor iret xchg dec in (bad) mov movsb xchg rorl xchg popa add mov pop sub ljmp inc pop jbe add push hlt (bad) pushf cli sub adc sub and mov loop add or push and repz outsb or adc stc repnz mov jp call fcmovb imull push mov in repz mov dec cld add popf adc mov ljmp adc popf rclb sarb jns add and xor pop outsl incb test notl mov pop pusha aaa push add pop and jmp sbb std add dec xor dec adc fs pushf shlb pusha in push mov sub lahf or das test mov push shld mov incb (bad) jns dec setnp xchg mov (bad) in lret int loope push mov mov fdivl sti adc sbb pusha in inc add push mov (bad) inc xchg in out mov lret shlb add test popf in ja (bad) fdivrl xchg push in adc (bad) add mov lds roll xor (bad) pusha faddl pop popa adc xchg loope pop cs pop fnop cmp adc push mov cmpsb movsb xchg imul cmp sbb rcll push scas sub fisubrl sbb or test das pop lret daa ficomp pusha icebp lods and jl xchg pop pop cmp loop adc mov sub add xchg adcl dec mov pop sbb mov in mov mov add scas mov and outsb jo adc orl mov add in cmp sbb pop push pop test mov jno loopne adc mulb es jns or arpl mov loope (bad) xor add xorb fwait sub and popa stc jnp sarb daa or push sub (bad) fs lods fwait pop jp (bad) test cld imul push or dec sti rcrl pop cmp (bad) in xchg inc xor xchg pusha push out rcll mov or inc and jo add mov push push adc fldenv jmp push loope dec adc lret lods mov xchg adc xor xchg scas sbbb mov pop test xchg or fsts cmpsl rcr mov nop and bound in sti xorb jge add jmp pop xor in rclb or jns or mov bswap or and pop and test pop lods mov mov movsl push adc in dec data16 adc in dec cmpsl in (bad) pop fadd or cwtl or add loope addr16 pop adc repz js fstl or out lcall insb add dec pop aam (bad) adc add sti and add ficompl clc mov push daa sar repnz add inc aam or pop roll or inc push out scas (bad) pop xor cmc rcrb inc popf sbb mov sarb (bad) mov ds das std mov das adc in pushf push xor and sbb add mov (bad) push jb push insb pusha mov cltd imul loope mov mov je aam cmp jae stos dec aam inc idivb jecxz out cld cmc pop cli mov xchg ja test push ds inc out je lahf (bad) fstpt xor cmp mov je pop inc xor dec cs int dec test cmp adcb dec xor repz stc mov pop pop dec (bad) (bad) gs xorb fwait movsl outsb or lea push mov cltd jae pusha cli repnz add lret f2xm1 push daa pop inc dec repnz xchg jo call mov and cmpsb mov cmovle pop repnz add mov out out jp dec cltd mov add pop pusha push sub ret enter add inc mulb mov mov addl jmp mov cmp stc popa sub fild pop add repnz sub sbb rcr mov add cmpsl cmp mov pop test into sti push add adc cld pop xchg pusha add add pushf cmpsb push (bad) daa scas push (bad) rolb aas mov and jae sti addb clc xor and std jnp inc jg jo add pusha mov dec popa lea out mov xor movsl add mov sub mov push test mov (bad) add mov ret adc mov cmc sahf pop sub loop pop out js daa mov aam mov stos jno xchg sub mov mov fs and mov push mov cs clc sub jg cwtl ja cmp rclb cwtl add call inc into add lahf test movsl add mov shl rcrb sahf lahf xchg jecxz popa dec push pop mov or push mov stos mov mov jnp jo pop jl in cli push xor lods repnz cwtl cmp jl clc in adc scas xor test push shr pushw push cmp sti or dec std test mov test fsts cld jmp inc mov mov xchg and (bad) out jns rcl mov mov lea cli cwtl lahf fistpl lods into repnz aaa std xchg inc push imull lods sbb test xor dec mov (bad) mov add dec ss jo ds (bad) jg inc adc dec lock adc add mov pop sarb mov dec xchg push xor in scas rcl cmp daa push in sahf add inc mov and xor stos jo (bad) jno or add mov xchg push or lds pop sahf mov push lret push xor or pop inc outsb fdivs sbb pop dec push push or cli xor mov or loope jle jb test sub mov mov andb push xchg jp cmp repnz in jmp dec or subl nop jmp daa sub add (bad) repz add in push jmp stos pusha rol mov xorl enter ljmp xor mov sbb (bad) cs adc aaa sub xchg dec mov punpcklbw jo xor arpl sub (bad) jae fnsave movsl or push push xorl adc clc sahf stos cld movsb mov movsl int3 push dec push (bad) pusha movsl das push push stc jbe lock outsb mov sarb nopl xchg xchg and daa add aaa xchg fistp and inc and enter testl shrb test add (bad) mov mov jg sbb jmp cmp pop dec inc movl icebp or ss out fstps dec cmpb mov cmc xchg add shr nop mov dec jbe mov adc dec mov stos pop dec popa rol ss and sbb lea jmp and mov add (bad) idiv sub loopne daa aaa jns ret push pop adc mov jmp popf push add popf xor mov in pop rclb mov jmp andl push cmpsb jne adc scas popf movsl incb mov jle sarb shll (bad) xlat repnz loop clc add std pop inc push ret dec pusha imul add scas test rcrb and push stc pop mov hlt and jmp add adc (bad) pusha lret test or add scas dec popf pop daa cli jle mov das outsb dec sbb lds jbe mov stc xor fucomi mov push clc ja xchg or fstpl sub inc push ret test pop icebp das and test jmp and push add inc sub dec pop ljmp add mov push sub in stc out loopne adc xchg (bad) mov and testb and leave nop inc test cmpl and outsb lods in les jmp mov das sub push mov xor push mov in jns insl popa les jmp out sbb jg lds pop mov dec or and xchg in daa rcrl out push repnz add jg pusha push aam in mov adc xor outsb mov (bad) mov mov xchg js fcompl daa je (bad) scas sahf add (bad) in (bad) mov jle (bad) insb or scas pusha icebp push xorl pop push in cmc mov and jecxz push xchg mov arpl add mov jae cmc loope into je inc adc ficompl fisub sbb push rcl sub (bad) xor mov (bad) int in adc pusha lods in mov dec cwtl mov xor mov (bad) pusha out add adc std dec xlat mov xchg sbb pop clc cmpsl ss jno sahf cmp sbb mov dec add test loopne outsl inc adc add out fwait jno stos dec jnp or dec add sbb xchg mov ret pusha inc jp pop adc mov push xchg in dec and jge fcompl inc lret add and shrl mov mov jg adc push cli xor pop pop pop xchg (bad) pop cs rcr pop lahf mov loopne lds test (bad) mov cli pop push jo je xor push xchg ljmp mov or imul cs dec pop ss addr16 loope and popa cmpb jbe outsl jg rorl fbstp pop xor dec and mov loopne in clc aam leave ret or mov mov pop fwait push in xadd and data16 mov fcoml mov pop pop and xchg push lret pop loope sub mov (bad) and add lcall and add sahf xor sbb (bad) ds mov popf push xchg mov imul or dec jmp call mov scas sub fcomps testl xchg ja mov aam roll scas push xor fisubl enter lea sbb mov les add mov xor push pusha aas jmp xor rcl xchg cld or and push les inc popf jno imul xor lret je add popf frstor sbb xor pop loop repnz push cld fistpll push bound iret daa test mov add int3 mov adcb inc jg dec popa adc lret jmp sti outsb push add jae popa mov outsb fldl push add mov cmpsl call adc add out loopne leave add in jg aad sub pop cmp aam mov sahf xchg jbe mov and mov xchg xchg pop push adc ljmp mov movsb sub mov xchg enter add pop and add (bad) lret popa pop xor repnz rclb adc push xor outsl xor dec sub mov dec out sbb stc gs adc dec loop bound adc test adc jno xchg loope jbe pop adc lods sub js sbb push jmp shl push adc lods pop popa xchg aaa lret subb mov dec (bad) and sbb inc xchg scas les pop loopne dec cltd fstl xor jle push sti jo cmp jmp sub pop dec xor add imul push loop jl push jmp add lret shrl inc sub aad test mov mov push mov mov xor lret or idivb (bad) sahf addl out movsl insl adc pusha xor dec mov in adc pop repnz add inc mov jae popa jmp mov mov stc sbb pop cmpl imul lea mov sahf dec adc add mov pop cli and pusha lds sahf add fs and fistl mov nop jae push xacquire je dec test sbb mov lret ljmp sbb xchg add or mov popa addr16 into outsb (bad) jge test dec sahf fild sahf or adc xchg ror mov mov dec clc and out sub pop aam fildl aas mov push pop add xor mov gs or data16 int loop mov add adc jne jno push and cmp mov mov mov cld bound mov push xchg mov pop jmp adc push pop data16 pusha mov leave iret loope or aam nop into or in cmp and movsl sti jl out pop jmp jmp icebp adc xchg xor mov mov mov mov push mov sti aam or ja lahf push nop and adcl mov mov push sub add dec add lock popa push xchg ss and pop int3 cmp xor cmc call loope jp imul or hlt bound mov jnp pop sub pushf mov movsl add pop loopne pop into add pop mov out dec nop repz adc rol sbb aad popa hlt sub fmul inc enter add dec xlat adcb test sbb rorl jb jmp cmpb lods xor and adc mov cmpsb decb push mov push sub pop pop dec push data16 mov js or shrl data16 jo jle jo add (bad) mov daa insb les std inc mov or xor out bnd repz cmc jp mov (bad) (bad) cld push arpl add (bad) repnz das mov dec add (bad) pop je dec add mov scas adcb lahf sub fldt (bad) addr16 lock sub adc add push daa icebp pop adc mov lahf ficomp fdivrl mov push adc dec fwait push xchg adc xchg push iret pop cmp daa pop fs roll jp cwtl and and jl mov mov clc ljmp or jp xchg je faddl mov adc mov mov and pop or add jbe push int3 aam out test jmp cld in adc cmpsb cld fcomi adc mov daa or cmp pop inc imul or scas sbb lret stc add and out fisub dec lcall in pop aad sub iret push popa rclb or daa jle and ljmp pop loopne stos scas pop daa and ljmp and inc lock movsb inc out clc out adc dec xor mov add mov cmp xor testl cmp aad dec xchg gs aam lahf push nop cli outsb inc add mov adc pop stc add addr16 adc out pop sbb xor mov cmp in (bad) adc cmp mov inc ret imul popf outsl add mov pop dec cmp push lret mov cmp neg mov and add mov inc adc sub jecxz add enter pop mov (bad) and ret and xchg (bad) in add xlat shll (bad) dec sbb push mov orb shl adc xor xchg sub dec hlt pusha faddl mov or adc call addl push lods jecxz pop aaa mov (bad) xor outsb testl pop mov scas jg sub popf or push xchg push xchg xor and pop cmp adc cs and add lret (bad) rcll adc loope arpl adc lret cmp push pop ljmp das and lea xor repz dec pusha cmpsl cld aaa dec mov xchg push jle insb adc push arpl out jb test cmpsl ds pop icebp aad outsl movsb or jo fdivrs or gs ret push rol jo or mov cld daa rcll or cld jno rcll sub sub popa jo cmp pop (bad) hlt and mov mov cmpsb adc cmc mov sub jno in push fwait cmc adcb mov int3 inc pop push mov stos imul sbb xchg mov mov add push and jmp xor (bad) popf pop sti add fcoml adc dec ds add sub mov adcb je push sbb xchg dec popa push pop loop cmc aaa mov ficom cld xchg cmp mov ja jnp repz xchg in pop push jle das jne sti fisttp mov (bad) fnstenv outsl xor pusha (bad) ja xchg xchg dec clc xchg or fidivrl (bad) push sbb add add dec scas sub out push fwait adc repz pop pop add jp xchg jae sar aad xlat inc js repnz mov loop in pushf or call shrb xlat hlt push aad ret add mov aam pop (bad) cmp ret das jg clc add jl mov mov mov mov pop inc mov in jp or pushf jne cmpb fild mov lock add movsl xorb roll fstpt test pop mov imul add ret and je inc adc test sub das sub rol jnp add leave mov in in je inc mov sub xchg call (bad) repz mov inc add and adc jge or outsl je and lods xchg push ss (bad) lods lock mov bound arpl sbb flds stos leave jno sub mov in xchg iret mov mov lds (bad) mov fcompl mov pop movb (bad) jmp sub mov rolb add xor dec jp lcall sub or ret popf dec ja push mov add inc pop fs nop stos inc add inc add (bad) shrl pop dec fwait pusha scas sub mov daa pusha mov mov stos hlt andl shlb idivb (bad) int3 jg pop out xchg pusha mov imul dec or ja add lahf cmp faddp arpl fidivrl inc roll xchg push out (bad) js test repz ffreep push scas pusha (bad) icebp adc cld scas js fildl out test push mov (bad) and lcall ret jno movsb adc xchg inc lahf add pusha push out inc pushf inc into sub mov mov (bad) mov lea mov push jnp scas mov into add rorb sub pop inc mov outsl std xor jmp push jle dec aas dec add pop clc (bad) cld pop andb sti pop xchg inc sbb pop jmp adc popf clc sbb push rorb jne add xlat push stc mov mov add outsl lock fscale xor jmp mov mov mov dec inc nop aas mov push and das pslld test pop push inc (bad) xor imulb call (bad) mov add nop pop add cmp loop jmp sahf sbbb add or push fdivl jge push out mov aad out jp add (bad) fdivr imul jo mov inc push test aas sub xchg xchg cmc sub shl inc dec (bad) mov add adc cmpsb xor fwait cmp cmpsl adc xchg rolb jle mov scas loop pop test add mov mov sbb jno lret loopne adc push rcrl add mov jbe loopne popf les test inc shrb sub add daa out mov fadds mov xchg sbb pusha outsb imul pop inc inc mov mov loope lcallw out jmp mov inc xchg adc mov sub test daa mov inc scas and arpl pusha jo inc add mov (bad) out sbb lret pop jbe jmp in and call sti add leave stos jae mov sbb mov or pop adc fcmovu adcl mov pop (bad) mov cmpsb mov cld test (bad) movb push add add cmpsb in jl inc add sub ja movsb test lock mov mov dec outsl inc (bad) add sub mov dec xchg lea xchg push add popa cltd add mov push mov mov nop (bad) push pusha cltd pop daa jnp xchg das in add lahf mov lods add iret cmp jge and mov mov mov loop pop stos xchg mov fdivl add push int lcall ss or fucom mov pop xchg adc popa xor cmc sbb ret aaa jmp ja data16 mov xlat int3 int (bad) hlt xchg stc cwtl mov mov push xchg and sub aam sbb add loopne sub dec mov mov sbb fbld adc cli fcoms rolb xchg neg out adc (bad) xor daa xor in add mov aaa lret jbe push jno (bad) dec mov (bad) cs adc insb mov sub push scas cmp sbb inc movsl mov mov adc bound aaa daa fstpl div repz clc inc mov inc jmp dec jmp pop repz cld ds push mov jl pop sbb add movsb scas mov test sub xchg push lcall (bad) xor cmp enter in cmp call cmp adc inc data16 pusha mov test mov cli xlat mov xchg dec lret mov xchg test mov xchg and add cld pop push (bad) cmc lods sti adc fwait sub push xor push bound rcl mov push fdivl mov shrl hlt push inc das or dec nop dec nop pusha xchg repz pop push mov popf dec out cmp lret jnp inc add jle insb mov dec sub cmp mov push jae add movsb or inc jp xchg and in dec cmpsb dec loope loopne in and xor gs add mov and pop or imul sub and testl sbb lret jecxz in lods dec test and push lahf pusha (bad) fisubrl hlt pop clc jo cmpsb (bad) loop xor adc push inc shl add xor inc daa js jno and add daa push sbb je jae mov sbb cmc mov and in jecxz inc push iret jo add mov sbb das inc cmp (bad) fmull notb loopne push shrb lret ret cld xchg out xor aam add xchg push mov xor div jecxz xchg scas outsb sub mov cmp mov push ljmp dec rolb pop add movsb push pop test cltd add daa mov in nop js mov popf lret cmc in ret inc lahf pop add mov push cmp mov sub mov jecxz push (bad) stc aas mov lret out cmp call jno and cli pop stos pop jmp xor aaa sbb sbb in inc out xchg in jmp notb aas test mov fdivrp mov fsubr mov dec or out mov sbb je pop rcrl xchg clc lahf jno dec inc and fucomi (bad) xor dec clc shrl pop xor xchg shll stos ds fisubrl lret sarb imul sub fmuls push jl and mov movsb add pushf dec scas add jp push fldl and add sub xor jl pop icebp out and lock dec jmp adc add cmp adc inc inc push jae dec popa in jae test xchg jmp sub mov mov sbb lea xlat loop fdivr aam enter push xor test in lods mov adc in pop ret jae imul mov xchg push fiadd (bad) mul dec add test fsub dec or popf stc push dec fbld mov push pusha pop sub add mov and mov fstpl cmp repz push out stc and aas aaa ret and jbe (bad) inc sbb cmpsl loope (bad) lock and mov mov push push adc push xchg sbb neg push adc shrl push roll lret inc jo add btcl test xchg fdivl jmp adc rdpmc pop fs mov push add (bad) loop push push xchg arpl and fimull jmp fdiv mov movsl cmp cmpsl sti or sub mov sti add mov mov adc dec xchg sahf aas les adc mov adc repz pop roll mov ljmp pop sub and push push (bad) inc pop (bad) je hlt sub adc fcoms xor sbb rolb aad mov sbb scas xchg lock add enter mov test jp jle or js (bad) into (bad) idivl daa dec into out and push insb add cmp addr16 ret int3 push cltd pop pop aaa enter sub ret lods fs rcrb int out cmpb out sub xor lcall push push roll xchg add mov sarb arpl cs mov add lea test dec les or ss in adc adc mov sbb push ljmp lret lock cmp adc mov xor imul out add or sub pop pushf add jle enter mov inc or jge dec jne popf sbb jno add pop fwait jae loopne loopne cmpsb mov and jle or push pop mov std int3 cmpsb mov push pop adc (bad) iret dec test scas jg push popa das (bad) (bad) push inc xchg push adc out imul (bad) cmp fwait pusha sbb sbb or and lcall push pop loop addb imul gs jns sub xchg push pop cmpsb mov jp push pusha jl orb mov mov loopne insb add pop (bad) adc aad (bad) mov popa mov inc sub nop es repz inc xchg mov adc add inc add push mov das mov mov loop cmp das mov mov enter lea jge and add (bad) das xchg (bad) lock adc mov mov pop sub dec out lret ds repnz sbb and add lret lods cwtl xor mov fs mov pusha xchg icebp mov cmpsl dec add jmp jno lods add fildl loope out sub repnz adc das xor imul ret mov jo popf and js loope dec pop mov add mov notb add fistl cmpsl lock aaa into inc add test dec aaa mov mov and in inc xor ret mov add xor int3 inc and andb sub pop mov aaa and fnstcw (bad) cmp mov aad cmp xor adc nop hlt or popa js pop addb dec adc repz and add pop negb insl pop mov lret add mov in fs xor sub rcrl add mov xor cs xor pop dec cmpsl dec adc pop (bad) aad lock test test push pop pop push call sub pop mov shlb repnz adc or add cmp fadd pop xchg push cmp daa in adc rolb daa outsb mov imul std insl add or add int pop push loopne xchg xchg inc dec add dec in enter pop fidivr xor cwtl xor add dec std and fbld inc jno lock xchg imul daa cmc mov add dec lret scas (bad) pusha xlat dec pushf mov mov aam shrl adc xchg cmpb mov mov adc ss sbb add xchg popa push mov push push sub aas pop xchg mov stos (bad) popa mov add cld cmc cs ret nop out add ficoml mov pusha divb sub subb cmpsb jo je dec call sub ret clc push orb push mov inc rcl xor push xor cmp mov andb xor pusha lods cmp pusha mov xchg jns xchg popa jmp xlat mov adc sub ja jnp movsl (bad) push add pop cli fdivrs out and adc mov or push mov add cmpsl js mov xchg adc push enter in adc pop add pusha xor js roll push nop xor repz push cmp mov loope mov push sti xor dec lds xor ret pop mov (bad) jg mov fdivl test mov stc cmp fmuls mov test adc or popa push xlat out add jns sbb mov inc loope mov push xchg call mov jae pop fwait and sarb andl insb ss leave sti cs repnz ffreep insb popa int shrb adc mov sub sub xchg movsl add cmp idivl sbb rolb sbb add or xchg sub stos and push xchg pop sbb nop mov js sbb push cltd (bad) test inc imul nop push jns dec cmc or aas xchg push push in xor lods pop test push jp jne add sub (bad) adc sub xchg pop mov and push add mov sbb fiadd emms hlt test xor pop int (bad) or cs pop jne movsb repnz faddp test or (bad) sti push aas loop dec and movsl jge and das cld mov mov andb loopne les xchg push and fild add add jp or pusha add stc mov mov lcall mov test or or pop insb adc sbb lea sti add shrl pop sbb or stc inc pop jg or dec outsl add ror int3 sub mov call hlt cmp movsl (bad) negb mov gs dec mov lahf sbb fwait hlt add js loope pop aaa fmull cmpsb push sarl fdivrs (bad) mov jo adc or dec add or into lret xchg push fs mov fcompl cli add sti pop dec or js loopne xchg out cmp fs cmp sub adc adc sbb dec adcb fildl and popa out cmpsl inc mov xchg movsb cwtl inc stc lcall adc add lock mov cmp xchg xchg mov movsl std loop fisubl xchg popl inc mov pop add add push outsb daa mov ret clc mov pop xchg lods rep cmc pop jl sbb pop sti pop loope xchg pop lret mov dec stos leave fidivrl cmc inc rcrl jge shr xor (bad) jmp stc jno mov daa pop pop hlt out scas into jae adc and xchg adc cmpsb enter add (bad) imul je push jge subl dec daa xchg push push xchg pop dec std rorb je jp movsl aaa push add mov or leave js popf sbb mov inc add popf add out or ja push push lcall int3 sbb adcl sti adc mov stc sbb and sbb sbb mov cwtl hlt das mov adc xchg push sub sub je sarb faddl cmp mov add in push mov imul pop inc jmp jnp jo mov aam loopne pusha sbb imul dec test scas mov rolb shlb insl inc mov push jbe pop cld jmp out out (bad) rorb out movsl jnp rcr fiaddl lds mov or jae (bad) or das popf inc jne push cmp idivb das fbstp test jns cmpl and push lret mov rol pop push stos cltd jmp das mov cmpb pop std (bad) and cmp fsts jge sub clc je fs rorl add or lcall pop leave fnstenv cwtl hlt movsl jmp or shrb or mov (bad) (bad) sbb fnstenv add and xchg add ror add inc cmp push in pandn add popf gs (bad) sub mov dec adc aas flds das (bad) aaa repnz xchg mov dec push cltd mov add addr16 pop cld or sbb or mov loop dec aad popl sbbl fistp sbb jmp (bad) stc push das push inc fiadd sbb js and xor roll notl push push pusha enter adc mov xor addr16 xor xchg and pop nop es lock dec push jle icebp sub call in add mov loope js add jg das cmp jae push inc out push cmp addr16 jo fsub jno rcll sub cmp lahf popa mov push jne das xor sub das mov jl inc lret adc test seta sub dec xor push adc outsl add push fwait sub cwtl adc call push dec push jg mov daa dec mov repz movsb and inc cli movsb jmp sub mov dec lods add jne enter mov inc ljmp mov frstor push add je enter popf fwait xchg xchg jb mov xor mov jg stos cwtl inc fldenv cmc popa dec mov out lock adc inc ds mov adc add je das call mov rcrb or es mov in repnz push aam call xor outsl sti add mov pop test fdivl and xor xor subb mov clc daa inc xor xchg iret flds in push mov or je aad fistp xchg cwtl sub sub dec enter pop cli sahf sbb add pop jmp xchg mov pusha out test pop ja call out mov push mov add les sub push mov pop cmp pop (bad) xchg les insl inc adc pusha cld mov cmp aad (bad) aas and add cmpsb mov adc lea cmp mov pop cld movsb sbb adc lock popf fcmovne push fsubr shr push or dec cmp push (bad) mov aam and pop jo popf dec sub mov sbb push cmc add adc idivl add out enter ret das push push roll popf pop fwait test (bad) jbe pop fnstsw shl push xchg cs or loopne push call sub cli (bad) out or mov arpl roll push jae dec xor lods xor (bad) add xor mov xchg sahf js mov scas xor je push rcll sub mov sub andl adc add lcall popf fmull popf in add das mov nop add out outsl (bad) shl aas sub xor cld stos jge out das mov testb adc mov add cmp mov dec pop mov mov daa push in mov lret dec rorb or jae pop or (bad) faddl (bad) adc aam test mov aaa std add or je cs adc mov dec inc sub pop xchg test mov lcall xchg jbe or aas mov mov mov int cmc orb jmp mov mov mov fidivr mov mov popl repnz test and test loop call sbb mov pop outsl dec (bad) jle jmp and and add cmp mov lods mov sub imul shrl and and clc mov pop jl pop mov sub jno nop and mov out mov cmpsb es lds hlt pop add jno leave fs mov sbb repz mov mov jno inc inc add xchg push test andb (bad) dec push inc outsl xchg mov aas je (bad) or mov in jae pop cmpsl mov mov xor xchg xchg or add inc pop cmc push push inc loopne fwait lods rcrb popf imul sub inc pop mov sbb inc mov scas dec clc or and std das (bad) cld add stc push adc (bad) (bad) jns mov adc pop inc dec lds out mov loopne les jnp in int3 dec xor jne out arpl lahf pop addr16 test fsubs into xchg jns add daa mov jo out mov jno,pn das xor or push stos sub int sbbb loopne mov cmpsb pop into cwtl mov ror pop std xchg dec ficompl xorl jmp loope mov xchg mov add xlat aam ret or leave aad sub mov es outsl pushf and adc fstl pop (bad) ljmp out or push cmp push and cs xor arpl test add pop repz test push mov jge (bad) aaa or adc (bad) sub stos shr bound xchg pushf orb aas jmp cld pop pusha hlt shll popf xchg notb and into adc add fisttpll imul fsubs sbbb xor loope outsl in enter mov dec fdivrs out pop or in mov adc stos mov push pop test movsl and xor pop adc add mov jg loop int jmp jb and dec rorb mov add jge pusha mov jp and add in outsl cltd loope and mov xchg push (bad) lret pop ds inc sbb out inc out sub xchg test shl inc js sarl dec jbe out jne pop adc or cltd repnz fistl add mov stos lods sub jmp pop ja add add dec mov inc movb and add lds or nop mov xchg cmp jle cmp push push mov call mov add pop xor sub dec push inc test adc push xor cmp dec push cli and mov stc pop xor inc sbb inc out in int3 push jae and cmpsb cmp xchg jl or sbb sub out lock sub or jp lods mov out xchg mov xchg mov sbb mov xchg dec jle add (bad) mov pop sub push and mov lahf hlt lea and pusha and xchg ds inc loope inc addr16 cli lret mov cli aaa ficomp rorl adc stc add add mov loope pop pop add mov call mov mov sbb push daa push mov nop or push movsl add (bad) push xor and sub mov xchg push stos dec cs out add or and xchg int3 dec mov sub jnp mov imul into stos xchg xor cmp and or pop mov push insb fwait pop mov notb xchg jmp dec or nop loope mov mov and mov push cltd sbb xchg popf dec outsb je nop and mov sbb addl adc add nop sub jo notl mov mov xchg mov adc inc subl push xor lods sub or sub pop pop outsl movsl jle or add movsl fild std aam push sub add push adc jmp or or and cmp push sbb sbb cltd lods inc mov or jmp bound testl nop aas sahf cmp add daa cmp mov add dec push sbb mov int3 push adc iret testl ror cmpsl push mov xchg push inc aad push je (bad) jae (bad) push pop sbb jmp (bad) in add pop subl (bad) loop push out test movsl mov mov push out das inc push ljmp push (bad) mov cli push mov loopne,pt pop sub mov rorl add xor loop mov mov pop popa ljmp pop xor jmp daa cld cli fisub ljmp lods add pop jno xchg inc pop jno mov les lahf shll in mov mov (bad) push loope cld jge mov mov andl dec jmp lahf (bad) inc xor mov pop push add repnz in xchg mov mov rcrl inc (bad) jnp pop cmp add pop pusha cmp ljmp jb dec movd jecxz push sbb xor mov and push or lret popa loope dec xchg pusha adc pop mov or ficomp add jle loop lock dec test and ds loopne ja arpl int lcall mov inc hlt movsl popf (bad) push ret inc setnp daa jo dec ror xor mov mov clc dec fdivrp mov pop cli jp jo dec push ffree mov push add xchg mov sti mov loopne shrl in roll cmpl cmp in xor test and cld imul in insl loopne push adc or dec mov jmp pop mov jno xchg pushf sub punpckhbw lea jmp loop inc scas pusha test sub push daa xchg popf dec jns movsl pop dec test sbb sub das push or add mov mov xor mov lods or mov into cmp dec mov pop mov pop fcompl (bad) adc add jle jl dec dec add fnsave pop jle pop shrb adc loope es lock faddl inc add into push cmp or sub nop (bad) jo loope push mov inc sub or pop fldt out gs roll mov pop push inc test insb mov pop repnz fistpl mov dec test pop testb inc ret jg mov jns cmpb push pop neg adc loopne add xor push insl adc mov mov pop push mov jle pop aas adc ljmp mov cmp mov xchg hlt xchg aam add fcomps sub ljmpw xchg jle push xchg or aam out leave test mov dec in fsubrl adc loop and mov das dec push sub (bad) loop xchg loop push iret push rclb stc mov and mov pop push aad add or (bad) xor repz cmpsl nop jl xchg sub in add xchg inc scas je imulb mov into loop nop fstps cmp push jns adc mov sub pop and adc adc sub and aas adc sub out rcll jo adc push cwtl mov fmull jno xchg in pushf pop dec xor push iret pop mov cli mov loope cs xchg add lahf sbb cmp pop xchg outsb xor inc push lods in mov or push fcmovnbe push ds mov mov cmp out aam push (bad) mov loop ret dec cmp mov repz pop (bad) and push sarb mov xchg pop push mov mov (bad) push sub idiv or mov inc push push cmc pop in mov xchg push push out imul pop adc pop sub gs ds mov pop xor add scas inc adc stc test xor push or scas fs add insb lods cmp imulb scas xchg mov in sbb aad adc inc les or jge sub jecxz or push test rclb inc inc mov or xchg mov stc (bad) fidiv imul mov jg (bad) mov stc std dec or add scas mov in push push repz mov int3 enter mov lea or mov test jae mov or sub scas addr16 ret push insl imul stos cmpb xchg pop imul adc pop or mov jl pop xor push pop or mov imul add xchg scas or (bad) stos loop idivb cmp or add mov mov add insl xor lcall xchg mov mov mul sub mov xchg mov mov sub cs outsl stos add sub divl adc cmp pop inc imull leave pusha fstpl mov add pop popf xor pop popa scas lcall loopne bound dec or outsb sahf xor ret xlat adc mov pop out mov push loope loope and nop (bad) pop pop xor jae pop push sbb out mov push insl loop fwait jae mov and call xchg mov jg scas add or sub xchg bound dec repnz xchg or clc dec push and and lods mov stos xor inc loopne and cmp sub push insl out les pusha adc xchg addr16 cmc cli int3 dec add or out pop pusha stos addr16 mov stc xor mov jo lea fildll or jnp dec sbb jo push ss mov icebp adcb add fadds fcmovne jle movsl add sub mov inc push daa or jo or inc or sbb popa stos sarb mov or mov push lods stc dec out push mov inc jo std jg test pop sarl lret sub aad dec cld lea stos pop ret out in jg fistl loope and mov inc mov mov mov popa jp dec mov in jmp push cmp xchg jge sub sbb sub jge xchg into lret je insb add push and std mov mov fcomp jo cmp xor out adcl jmp je push fbstp fldenv add cld mov divl pop mov sbb jl (bad) cld push pop xor pop add xchg test or stos xchg (bad) or xchg jmp dec shrl sti xor mull xchg xor push pop mov test jno jecxz in xchg sbbb popf adc xor aad pop pusha or mov xor and cmp jae imull aas xchg sub imul gs or pop mov sbb ror je push or xor bnd mov sbb das int inc xor cld xchg pop out jnp or xchg leave faddl pop out fwait push nop and inc outsl repnz mov xchg xchg popw add (bad) xchg movsl jge scas xchg adc cmp rorb cmpsb mov sub std or mov push or cltd mov add daa lahf jae xor sbb mov xchg inc movl or cmpsl fs addl xchg pop inc push cmpsl rorl (bad) xor and cmp popf (bad) mov popa pop andb scas add cmp mov and loop add pop pop mov mov rep popa pop jle mov jnp addl push pop push (bad) mov jle push subb shrl (bad) repz ret clc cwtl jge cld push loopne data16 xor (bad) sahf add adc xor stc pop cmc mov sarb add lahf (bad) jnp sub testb mov sbb jae push repnz lahf sub mov bound add or pop call and stos and mov or outsl es dec movsl divl movsb iret xchg jle ficompl repnz andl loopne push or push lds add icebp jb add aaa loop push (bad) jno add lea jnp cmp shrl dec cmp mov lret sub dec sbb orb jbe adc addr16 insb out (bad) dec push xchg mov jmp mov jno pop and push pop (bad) mov aas sbb loop add add dec add pop nop fs loop ja mov sub push pop popa jnp or sbbb push ljmp imul aam (bad) notl push nop ja and inc repnz mov mov push sub push inc hlt mov (bad) ja leave or clc int3 mov jp fdivl and mov test push data16 mov fadds iret adc lock mulb loop out cmp and ja (bad) xor or adc rcrb aas ret push sub push pop repnz aaa pop inc add negb cltd and mov pop popa out loope shrl sub cli (bad) notb mov mov fwait ret adc xor pop xchg popf pop jb popf je daa insl (bad) loopne pop xor imul adc outsb mov adc clc push mov pop jno mov xor and push stc xchg sub mov enter (bad) push sbb cli and xchg mov in xor and sub sbb add sub mov (bad) jno mov inc add jb popa add and jl pop add mov orl les rorl sbb hlt cltd mov add cltd sbb push adc das adc jnp add rorl mov add push pushf scas sub push outsb inc cs mov push pop xor push and sahf xorb aas add and xchg mov cmp sahf out or xor call test loope mov sahf test pop add mov mov ficoml mov stos addl push xchg mov jnp xor (bad) jge pop data16 faddl xchg test fidivr in movsb into cwtl out adc push mov or icebp incb mov add push and jo adc and and jl (bad) mov xor jle (bad) sbb stos cmp fwait add out (bad) mov fs sub (bad) mov push mov lahf hlt jl add cmp inc and rcrl mov mov loop hlt mov xchg jmp adc mov lds (bad) xor in loopne and addb and pop cmpsb jo sub in loop add lods and or push test or addr16 add push or rcrb outsl test add and push mov test (bad) mov (bad) sub pop cli js fwait sub into mov repz cs dec das (bad) in jns adc clc add mov call mov idivb adc addl subps adc mov call sbbl xchg push imul mov or in add jo,pn mov fisttpll dec mov push pop jns or push inc jb gs sbb cmp js inc inc push or clc loope aas mov test sbb mov or or jmp adc push fsubrl cmc (bad) lock sub clc add add or mov push adc add xchg fcmovne xorb pop dec push clc mov pusha xor push stos inc add add push inc mov jl dec (bad) cltd (bad) push mov adc roll (bad) fistpll add test aad mov add and inc cmpl out adc pop out dec scas and lods in cld mov hlt pop paddsw or das mov push loope ficom push loopne pop pop mov pop sub movsb sub shrl lods repnz push movsl mov lods test mov sub mov jno dec jo or jno add and push add mov repnz and sub daa push loop cmp add pop sbb ffreep xchg jnp in fwait popa mov imul inc pop inc loop mov imul mov add push int mov or cli pop mov stos push jns sub xor inc and add loopne leave fistp pop bound or push and xor xor dec dec push jge sti sbb mov rclb sbb cmp dec mov sti xchg nop repz push jle add pop test sbb addr16 mov dec sbb pop das xor out sub and adc iret lock daa repnz lods push and pop push aaa mov sbb nop or dec inc sub mov mov sbb jb xchg popa sbb mov sti mov cmp sub add cld fwait je jae push les and cmp push jecxz ja pushf test inc jg pop shrb pop jb mov in pop pop adc test int3 pushf cwtl (bad) sub popa sub pop push pop (bad) jp cmc pop or cmpsb xor jge jmp (bad) push pushf pop daa jne scas pop cwtl xchg pop dec repz gs or sub jge mov and add daa push adcb cld cmp cmpsl das jmp (bad) mov fmull ret jp pop jns pop cld scas sub inc mov adc mov int js mov dec inc aaa (bad) rorb dec push les mov jns dec cmp adc xor fs inc addr16 outsb sub (bad) lret jae mov sarl jmp xor push cli das mov outsb data16 clc jnp dec insb test test pop popf testb push sub mov imul sbb cli bound icebp scas int mov into jno mov mov js inc out sub imul aad mov cld sbb pop cmpsb jb adc movsl xchg mov sbb fwait add jne in leave cmpsb in jl cmp jb ret addl in pushw xor scas add and in add and repnz mov dec mov cld dec push mov (bad) lock pop adc test push hlt push pop push pop rclb out push (bad) pop imul xor mov xor add sub arpl jg (bad) push testb add imul lret cld mov or (bad) ja sub stos mov hlt cmp insl fadd and sti int sbb ffree mov adc ds (bad) js aas neg adc pop jle xor sbb data16 fistl or jmp xchg xor fcmovnbe inc add jp push clc xchg rcrb ret mov jp or xor js mov add dec pop or xchg mov mov mov adc pop push pop jle jecxz mov cmp lea mov and xor inc jb add inc mov orb fisubr (bad) jo jmp pop mov inc mov fsub clc xor xchg ds jp push jge scas mov jnp inc inc sbb stos or inc addr16 jo and push xchg pusha mov bound (bad) and pop inc mov inc xor jns push (bad) repz gs cld jne adc imul xor cmp (bad) jecxz das and ja cmc (bad) jecxz cwtl loop add shrl pop rolb pushf popa hlt add (bad) loopne pop mov xchg adc and mov mov mov mov and mov sub int3 mov xor inc push out mov add dec mov cwtl push push xor dec or inc es ret in mov fisub add add add sbb fsin add nop jae rcl add add rclb cld and negb adc enter ror pusha and adc jbe repnz ret in orb addr16 shr pushf pop cli push dec cwtl into pop add jae repnz arpl dec mov push rolb jo cmp mov das mov mov out sub mulb and xor mov sbb (bad) jmp repz test popa cmp pop je or mov daa inc ficoml inc int3 stc xchg sub popf ror lret rcr push mov cmp addr16 sbb add xor les mov or std das rcr push lcall lock das add inc jb js movsb cmpsl adc xchg pop mov add aas mov sahf popa xchg and pop mov push (bad) ljmp ss or or jns xchg sub aam and push cmc pop add or xor push and es std lds mov cmpsl xchg loope es notl adc xchg aas pop mov call adc inc mov sub xchg repnz movl xchg dec imull adc fdiv pushf test or out xor (bad) mov xchg out in addr16 xchg pop dec xchg data16 jle jecxz std mov mov dec pop mov dec and mov das and mov leave mov mov mov in add pop pop and xor addb push mov sub dec lret repnz fildll and dec aaa sbb int3 push lahf inc pushf xchg push aam inc xchg mov and mov xchg adc add xor clc push xor add add xor pushf (bad) mov push pushf outsb cmp and ss test push add pusha mov push jae outsl jmp cs push push leave push outsb add adc test das sub ss add lods pop mov sbb add pop push in fwait fs (bad) fildl sbb repnz pop cmpsb jbe (bad) aam stos adcl xlat pop nop xor jno daa out pushl rol sti nop pop pop gs pop rorb dec add mov stos dec ljmp mov fcmovnb jnp and pop js rorl cli sub jns fistpl xchg xor and imul scas mov (bad) shlb ja push std out pop lret (bad) testb (bad) mov or jge add roll jo mov out mov mov jp out and enter cmp jo cwtl mov jns addb xchg xchg hlt loop int3 add sti cmp cmp inc add jns add (bad) mov je mov pop sarb pop fnsave (bad) xor sbb leave (bad) sbb mov rcr xchg mov aam stc adc pop xchg mov jmp icebp leave xchg sub mov pop xchg fwait dec in decb cmp fcompl push cs inc aad push insl push cmp add mov pusha test mov sarl xchg and jbe or pusha cmpsb push addl outsb or push adc dec fldl2e push xchg adc dec stos add loope mul loopne (bad) jne pushf push mov sub or mov stc dec rolb cmp cld nop pop sub fmull cmp bnd test pop scas jno sbb pop xchg xor mov pop mov mov mov rcll and adc and sub sub add jmp popa push lock pop adc and adc inc xchg xor jno sub dec mov dec es adc sub ds bnd add in add adc popa repnz xchg (bad) mov xor push adc or pop ja ss icebp jb mov add notl mov push pop add fsubl jmp pushf frstor (bad) cmp or outsb outsl pop or into mov xor mov xor fwait lret pop or gs ret and cwtl pop test xlat or or xor (bad) fcmove out pop pop pop rorb insb and das daa popa push mov mov sub and test mov cmpsl lahf rclb loopne jl out rclb shl xchg dec out dec mov pushf add leave icebp orl inc test add add int3 in pop outsb ds and jmp cmp repz aaa mov addr16 cwtl add aas mov cmp jae push dec inc pop (bad) adc mov scas fwait jno sbb push fiadd fistl add (bad) and jecxz cmp add fiadd mov pop sbb xchg sub sub adcl dec or lcall jnp adc adc mov inc fs fs stos xor mov xlat inc xchg add jb push jge mov pop sub movsl adc jg (bad) cmc cmp ret mov push xchg addr16 sub (bad) fisttpl jge push fistpll aam inc xor xor cmp and out pop js imulb mov xchg pusha mov jle fsub mov js push add stos int3 pusha mov popa adc and fs or lret sti mov daa repnz or xor out sbb cmc jnp daa and cltd aam pop rcll sbb rclb xor sub ljmp jns xor sub test mov arpl dec and add and (bad) jle rsqrtps addr16 jae push fidivl mov dec pop sahf jne sbb (bad) jp add sub (bad) xchg cmp jmp lret cmp mov popf lods xor mov daa pop outsb loop jl inc incl jae jecxz sub pop jnp and xchg push fucomip jp pop jge sbb cld loope pop sbb into scas in lret add xchg mov (bad) aas add sbb notb pop call xor std mov out jge inc xor arpl mov test xor jno cmp and xchg jo (bad) push or ds mov mov xchg or in repnz test stos test dec xor test mov add stc mov xor sbb mov dec mov add jbe mov push in scas mulb in xor pop jecxz test scas sub mov mov push jmp mov insb xchg enter ror rcrb or movb int3 mov push popf cld ds mov xchg sbb scas jnp out xchg insb lock xor (bad) or dec mov and je mov mov lret daa repz mov icebp push xor mov lahf bound in push pusha stc push xor out negb xchg (bad) jg scas xchg jne pop push test cmp sarl jno mov jne cmp xchg and xor sub cmp (bad) cmp push jge into popa xlat out cs adc mov mov jmp push fwait cltd adc cmp nop aad addl add (bad) xor mov inc lods add add rclb adc mov xchg in inc icebp fisubl add add cltd cld sub mov push pop dec ret adcb scas adc jmp mov orb das inc lcall lahf xchg xchg add repz bound add es bnd mov sar or ffree jmp sub jecxz add sbb fistpll mov enter push das jmp cmp fs push mov sbb adc sub pop mov movntq in push adc or add shlb push incl cmp movb or std (bad) out pushf in dec idivl mov push aaa sbb or jne movzbl (bad) sbb mov push xor sbb mov lcall add jmp inc and rorl add roll dec lcall mov jge fdivp xchg movsl sbb std int lock mov adc sbbl push sub and adc test xor lods xor mov push mov or dec adc sub out lods adc rcll inc mov push and mov inc enter push mov rol shr test shrl pop cli mov push add (bad) or or dec pop sbb mov push pop cmp clc or and es in cli lret ret mov into std int3 mov lea mov test fwait notl add jmp or fisubr cli les inc pop jmp or ss sub and mov mov (bad) jne fisub (bad) insb jmp enter push and and mov scas adc pop or jne sahf xor adc insb jmp mov jle xor mov or (bad) cmp sbb iret pop sub xchg adc sbb aam sub pop jnp and mov test in ret sbb loopne in imul call scas adc movsl add jae push lahf fadds iret jmp ret dec dec xchg and mov enter pop jle or pop leave ret add fisttpll sub inc jmp fsub jmp (bad) ret and xchg sbb cmp sti sbb sbb mov cs imul mov sub dec sub push orb push lret sub pushf xchg mov add xchg rcl pop mov ja adc outsl jnp adcb sub sub dec daa inc ret (bad) movsb sbb lahf jmp mov adc out xor sub outsb aaa mov xor cmp mov popa dec mov inc or pop (bad) mov inc int test jg or or mov aaa mov addl jnp sub repnz pop push sub sub xchg xchg js adc sbb mov pop add push jo add (bad) mov pusha jg es out int3 sbb enter lahf add inc cmp ja mov movsb jmp push in sub call orl shrl pop push or repz inc add lock or dec clc push mov addl or sub inc in push outsb mov inc mov jmp rcrl add mov sub stos rorl mov lods rcrb pop jle sub sub adc adc or rcl or add xor mov dec add sub and fs or stc cmc and jne fisttpl xor mov lock nop pop add xor pop or pop subl shrl and pop loope pop and jmp out mov xor cli pop cmp sbb jnp fcmovb repnz adc bound mov dec loopne aaa sbb pushl shrb jle pop or or add cld hlt insb stos pop sub dec pop not aad lret int fistpll xchg rdpmc neg push or nop lahf push lcall sar test adc add clc adc int3 or or mov add or lods push mov push inc sbb divl decl nop (bad) jecxz shlb and frstor or or sarl adc in sub cmp add outsb shlb or add nop xchg call or (bad) std mov push fsubrs and (bad) xor mov sub and scas fmuls pop shll mov or pop push testl and push cmp clc or (bad) pop pop subb or dec in stc inc sbb mov xchg (bad) push rorl inc stc inc add loop xchg xor sbb dec (bad) ja inc dec jb shl test loop push xchg dec push mov pop andb mov pop jns mov xchg mov xor mov cwtl pop dec std rorb jmp nop jbe mov insb add and or pop rorl xor cmp push push rcrb mov xchg ret movsb dec loop,pt shlb (bad) inc adc mov fldl2e and add fnop lret (bad) cli cld lds pop and or jmp lcall test add push jmp (bad) pop subb push sub pop in mov dec dec sbb sahf jno test pop add hlt cwtl mov mov fcmovbe jge addr16 xor pop adc push cmpsl jge int cmp andb adc mov add adc fmulp pop std or dec and leave cld arpl inc mov pop pop xchg rolb inc sub nop in add dec sub mov jae pop push or xchg xchg cwtl add call lea roll mov xor lods sar rcll adc and in imul xor or imul icebp int unpckhps sbb sub test inc lcall pop movb pop nop mulb sub in adc int3 sub test cltd hlt adc xchg add nop cmp sub sbb xor std sub out hlt cli push mov mov and movsl mov imul adc jg and out pop push enter push mov adc jle hlt mov call repz popa mov jmp mov or pop ror pop in jbe (bad) cld mov fild sub popf pop pop or push sarl bound shrl arpl and jb mov adcl inc cld or out mov outsl or jmp push sbb fwait jno sub push cmp jbe xor repnz ss adc out sub fs adc adc mov push mov pop or test or hlt call pop inc pop out inc scas in push and or (bad) pop jmp iret aaa dec cmpsl ret mov pop adc push push adc xor jns in jecxz push xchg stc inc fs pop mov lds pop adc dec int3 nop dec sub mov push xor lcall jg push push xchg cwtl addr16 sub and into sbb insl int dec pop and xor cmp call out push pop jne into in out cltd and ret push or imul js and adc adc in push call jl aas and fsubr adc mov or enter roll mov gs or jg xchg arpl mov loopne inc inc sbbl adc jl xchg enter jae loope push aas jg (bad) dec fiadd pop mov into movsb shlb cmc (bad) insl repz lret not inc add mov scas push decb push ljmp adc adc sub and cmc jl jg and jmp mov cmpsl and sub loope push push dec loope sub jne lods add push jge int adc xchg fldcw in ljmp xchg jne,pn or icebp call cmc imul rcrb imul xlat pop sub and mov push pop add inc xor (bad) ss add pop jg push dec scas pop or push std and loop dec sub inc cwtl (bad) addr16 test pop xchg loop mov (bad) push add jae sbb mov push jne push inc repz int3 pop test xchg and pop sub cmp dec xchg and jno xlat sub push mov cmp neg popa iret or cmp push inc mov stos sbb mov cmpsl add pop and ja or and adc xor cwtl inc xchg fisttp test adc ss testb or xchg bswap jae popf insl nop dec mov pop inc sub inc cmc jnp dec mov add leave call mov ret inc popl push add inc dec (bad) dec mov pop shlb rcr rol xor pop and notl jg pop dec push push jbe mov add rolb xor mov add into pop lock ret sub int3 cmp jmp sti aas xor adc idivl outsb bound xor push clc mov push and push mov cmpsb gs push push pop arpl imul xchg (bad) jge or daa movsb ja add test jge add ffree in (bad) and xor jg out daa cmp or push mov xor jnp les pop mov leave loopne mov or div jg pop add lods (bad) ret push cmp cmpsb mov mov loopne pop lods cmp sbb push sahf (bad) dec mov and sbb imul (bad) insb mov sub sbb sub fmul inc out addr16 jo xchg and popa pop in add ret jne in sti ret pusha out sub aaa push inc cmp pop jle mov pop add shrb xchg push jo in push add icebp cmp aas insb sar add dec popf ja mov push and fmul sub add scas push movb sub cmp out sar cmp jbe negb data16 or and or xor cmp add cmpl mov popa cmp fnstenv or std mov and ja mov pop mov flds cmpl add add data16 mov inc roll add int add add rcrl and sub cmp (bad) jae push sbb pop fnstenv mov insl add dec sub out ds std mov jns adcb out (bad) int3 or rol add pop sbb mov movsb inc inc push cmp mov jns push (bad) and push add push push sub sub adc xchg stc mov es lds xchg push insb js xor sbb cmp push data16 adc scas fucom setle add bound mov add pop push nop jle loope add (bad) and pop sbb cmp xchg inc aam push mov cmp cli bound enter push loope rcr inc inc add mov sbbb fiadd punpckldq mov nop push insb push out xlat xor mov insl cmp add jb add push in pop add cmc jge js add popf rclb rolb stos cltd jb cmp rolb sub dec push mov fimull push test sbb (bad) and push sub add rcll imul xchg mov repnz mov cmp mov adc or and nop push lret push test imul jle or dec xchg add inc jb cmpsb cmp subl and xchg jecxz jb (bad) xor push xlat loop add cwtl pop int3 or add rorl jb js fcoms jo xor xor add mov iret int3 or push imul testl cmp add scas int3 sbb xor push sbb pop xchg cmp repz cs or and jmp add mov adc fcomps fs sbb sbb fstps jmp (bad) jmp fnop or mov cmp in add cs rol xor jle jmp add xor fmul pop out ljmp out xchg mov aas add mov cltd cmp and ss or ljmp lahf add cmp cmpsl fadds mov mov in outsl movsl fwait lcall fcomps rcrl xor ss mov out out sbb or movsb mov fistl adc cmc inc add mov out loopne and add xor das push rclb inc lds xorb xor xchg sbb sub pop js adc add xchg mov loope sbb sub popf or shlb leave imul cwtl hlt pop movsl clc or nop rcrb dec dec mov add jmp ffree sbb push and add and mov fbstp pop xor jecxz fcompl xchg mov mov adc lock aam icebp jmp clc dec push int3 mov mov sbb xchg add sbb add push (bad) jno sbb mov fldl push cmpsb stos lahf test xchg rorb jae xchg sbb or pushf mov jge and je xor adc jecxz outsb fcmovu inc and call sbb jmp addr16 test push popa out add sbb mov stc xor pushf xchg (bad) jbe adc mov cwtl add sub pop dec jp add stc decb jge pusha sti inc push mov or adc cmp outsl pop xchg lds inc and xor imul xchg mov xchg lret mov enter and and mov in xchg adc das mov mov adc pop sub push xor cmp push dec dec incb add rclb pop or mov dec add icebp sbb pop roll xor loope push notl add out popa cltd mov ret add jno pop add add ret mov xchg mov xchg icebp pop inc cmp dec shlb xor pop jno push jl xchg push add stos push sbb ret nop add xchg push call xchg xchg mov xchg shll rolb fisubl mov clc jl andl push test xchg add adc and push mov jp leave jmp or sub (bad) mov rorb pop add lds or repnz sbbl add cli out lock adc xor ss jl (bad) dec fwait mov jp rolb lock pop loop pop enter jmp sbb inc leave jb ret add repz stos jg sbb xlat sub (bad) sub clc sub jno pop push pop mov rclb repz (bad) dec jo sub sub jl out xor sbb pop xor or jo jg mov cwtl add mov jmp pop xor shr and pop lcall xchg popa test mov cli (bad) inc and xchg js pop clc mov pushf inc pop pop (bad) xchg int3 leave aaa sbb mov jae inc add leave and jno dec (bad) sbb cwtl sub dec push lock jae pop adc pop jnp xor push cmp icebp hlt add loope sub push add xchg mov lret pop adc xor nop mov xchg inc mov xchg in inc movsb mov jp xlat sbb jnp cmpsb jecxz jne cmpb popf add cmp mov jnp mov iret add shrb add sbb sahf mov jp cmp cmp repz cld pop and test pop push outsl subl xor inc jns add adc mov js fnstcw xor adc inc adc popf cltd add dec mov test mov and sbb add bsf mov aad lcall (bad) mov ljmp xchg add cmpsl leave test sbb mov xor loopne and loop lret and add and clc pop fwait cltd cs push ret pop push mov ud1 mov and outsb xchg imul pop push or jecxz inc xor mov ja aaa lcall jnp pusha jl pop xchg cmp and sub lahf test sub jb lcall lcall pop xchg or roll push mov and pop fwait add pop xorb fcmove and jno test das push mov sbb pushf stc ret jo and adcb sti or lds add cld adc in ret jns stc fadd adc scas lret push in mov push xchg and (bad) aam pop (bad) cwtl es xor add mov nop and or push rclb or inc ret mov jp mov push xchg test cli push test ret adc fsubs jle xchg pop mov mov mov and xor sbb xlat xor ret fdivrl pop adc fucompp lret mov es cmpb xchg (bad) push dec add adc push xor out and cmp rcrl adc mov xor sub push enter in sbb ficompl sbb mov adc dec mov dec fcompp loop add jecxz inc incb mov insl dec inc les jnp add iret lock push cld add jmp test xchg aaa and jne xchg pop adc fstpl adc mov jo test and or enter sbb xchg jmp push sub push hlt add fistpl dec push pop mov in mov sub js mov xor xor movl jl adc add cwtl mov test pop or jmp sbb pop test add in mov lahf dec out sbb push das test fdivl mov repnz lock cmp (bad) cld pushf add jmp mov jne lds test xor adc xchg xchg jle sub mov pop hlt adc lret push mov xchg es outsl mov mov pop xor mov xor inc movsb and push test fwait mov jp test pop rcl dec int add test pusha test xchg dec xchg pushf push ljmp pop ja hlt subl xchg flds jno sub adc and adc mov jns jge sub cltd add rcrb dec mov xchg sub insl xor xchg rcrb enter xor sbb mov mov cmp and lods test pop adc pop pusha pop rol inc push out push mov adc pop dec test dec push pop ud1 inc mov std sub enter add ret or mov add mov inc cmp fbstp add stos xor (bad) dec xchg mov mov cwtl (bad) inc sub popf xchg and add lcall mov pop jge xchg sbb xor pop push and callw (bad) fiadd aas popa es jmp fs andl adc pop test mov pushf xchg pop loopne and pop mov mov add add pusha push mov xor popa inc xor out dec mov mov xchg stc jb and sbb les or out xchg mov push or sti mov jno pop ljmp mov cwtl or in xchg pop lock outsb outsl dec push inc xor enter push sbb xchg pusha pop insb mov js push push or fwait nop les outsl mov cld lds dec push in rcrb leave rcrl cmp add es (bad) push movsl rol jp cmp add adc jge xchg push push xlat add sub jo je je cmc lods jmp push push mov push push and jbe ret pop test out pusha inc and add dec or cmp cli xchg mov add ret and popf lea cwtl into bound loop fldenv xor mov and push out add sarl or sbb cmp clc xor call loope lods cmpsb nop xchg clc (bad) mov cmpsb mov jb fistl push sahf in rcr add jecxz iret lea sub add or mov mov pop push sbb jmp jle dec pusha xor add pop fs test pusha ret push nop addb mov and inc mov xor or mov clc test dec cmp outsb nop jl sbb sbb xor mov cmc pop sub mov mov xor xchg (bad) xor sub and sub loope xor push stos rorl lahf scas insl add inc movl xor xchg push rcr (bad) cmp dec inc sbb sbb adc adc fisubl sbb int pop push adc shll inc leave nop xchg mov movb movl xor testl push nop push dec cmc add lret inc mov aas push nop cld pop inc add lcall test (bad) mov clc in dec jo pusha or leave cmpb dec mov hlt paddsw jmp and pop jecxz pop push inc push and mov add ret push xor jno sbb cmp orb and dec adc nop push add sbb fbld test scas push jl and (bad) in add and xor mov imul jbe pop jns sub cmc xchg sete mov mov pop sub dec adc jb mov cmp mov mov dec ds (bad) mov mov sbb sub aas loop or rcll fsub and xchg ja lret xor sbb adc sahf sbb xchg out and adc dec pop dec mov (bad) hlt bound jo cwtl nop pusha xchg fadds das pop js movsl pop adc dec ret jo cs xor cmpsl rorb xchg (bad) int3 inc popa je ret shr and fsts ja loop pushf xchg mov andb dec mov inc sbb add stc add jns or cmpsb bound mov lods sub inc mov nop adc jmp sub push sub roll subl faddl nop std sbb sub add rclb inc out shrb or or shll dec out adc hlt inc sub push push loopne xor data16 insl int3 or and cmp or fcomp push addr16 sub dec inc test push cmpsb or sbb mov or mov sbb test mov inc push pop add adc adc js pop movaps mov adc mov fisttp mov push mov mov pop mov inc adc and loopne jnp jecxz add push jns in push or mov pop push add cmp mov sub and jnp lods nop leave xchg clc cmp movsl mov sub out call mov pop mov popa push jmp fsubrs or mov inc enter xchg or sbb mov xchg mov pop test pop in xor xor cmp xchg pop scas into sbb jp in out sbbb shrb adc push add jns movsb push xchg and cmp or mov fnstcw sub cwtl and out mov adc dec fimul inc push cli pop mov dec pop mov loope imull ds pop or into ljmp dec mov mov andb sarb push ficom pop ds out punpcklwd fidivl in dec adc mov mov subl push mov mov xor fmull add je pop push and and add dec push scas mov test pusha fnstsw test mov mov dec loopne or and xor mov push sbb js bswap jg xchg shlb jnp xchg mov add push test xchg cltd and cmp mov xor pop adc (bad) insl add or jg in pusha inc insb mov icebp mov aaa rolb outsl inc inc add out xor or push loopne mov (bad) and mov lods andl sub pop js or rolb inc into subb mov stc testl xor pop push cs mov mov xor test adc iret popl stos jp clc and xchg mov ficomp add xor cmp and dec adc stos shlb ret xchg cmp jne loope and lret add (bad) or movsb inc aad ret sub flds add pop lock dec cld xor dec lea sub stos and or pop sub (bad) mov jbe ret mov fistl outsb mov cwtl jmp je add pop test rorb and adc icebp mov fidivr adc mov mov mov stos iret cmp pop notb xchg add add and xor inc cmp cmc pop insb fadds xlat pusha pop pop (bad) scas add push inc mov push dec aaa ret add rolb mov adc push fcomps and call hlt daa cmpb mov jecxz wbinvd jno mov push jmp adc and dec mov nop mov fbstp shlb xchg add inc std sarb fdivl cmp inc das sbbl pop and orb and mov scas testl in dec mov add add or push or cmp inc or mov inc ret cwtl jne fsubrs xchg add push or xchg xor out xor inc shrb (bad) adc mov rolb mov leave lock push ja sub jg nop mov (bad) fs xor (bad) loopne xlat mov push cmp es js out test push add pop dec mov test scas into outsl mov dec xor add jmp dec adc into pop lret and fwait mov pop rcrb sti add aam pop sbb add or add repnz (bad) or outsl loopne jae sbb inc jl pop (bad) pusha es inc inc sub mov repz xchg cmp (bad) jg nop test sub push dec cltd fdivs sbb adc sub adc mov xchg call dec dec mov in clc add std and les adc adc add (bad) aaa jns pop add (bad) lods int3 movsl jne add cltd mov adcb testl pushf mov pop jo jo aaa push sbb (bad) int3 push sbb jne sub and aad add cmp add aas add addr16 mov jo jb loop push mov add ja jno lret jne int addr16 ljmp pop fnstcw jp sbb jno popa push inc ja add lock mov jge cmp shrb std imul aaa and fisubr or adc (bad) jle sarb jl sbb pop adc (bad) std add int3 and pop int3 xor call pop xlat sbb mov addb and push cs out leave and lods cmp sar aad shrb jmp nop jl sub addr16 sarb movsl add popa pop pop xor adc addl mov (bad) add jbe push ja xor mov inc mov xchg scas cmp xor dec xor jp add add in dec clc les rcrb out add fcoms and pop or out pop lods add lods arpl xor add add jne jbe sbb ds decb xchg cmp jp je sub inc and pop subb into out add add ds test jno sbb lock jne or or fbstp xor sub cmp nop sbb (bad) pop leave mov mov dec sub xchg lods or (bad) loopne adc and shrb sbb (bad) dec into or sbbb mov rol xchg enter jb mov mov inc mov jl jp nop dec push cmpsb adc sbb stos xchg hlt cmp jle add not out sarb mov cmp inc xor rorb mov fmuls cmpsb push mov sbb mov enter pusha lret aas mov mov and push adc stos out jecxz mov lods or orb or icebp add in mov aaa adc shrl jbe xchg imul sub (bad) addb je mov mov aaa sub push stos jbe dec push lods popa xor xlat xor nop mov (bad) or aam cwtl in dec in mov fnstcw out int3 sub xor push loope ret sahf fimull mov sbb xor and add add fcoml jo rolb cwtl jns add or mov sub pop add rcrl (bad) int3 ror call cwtl fnop add inc lock inc lods cmp pushf rcr dec sub push and movsb leave add push out push pop mov mov or bound imul lret push test std out adcb rorb mov out mov hlt xchg lahf inc in mov pop in (bad) xor in mov and call (bad) imul inc pusha sub sbbl mov insb pop lahf jo cmpsl negl imul jnp xchg scas dec and push cmp pusha mov stc clc shrb (bad) mov dec adc (bad) test cmp sahf movb aas jbe out cmp cmpl adc (bad) divb adc xor test pop dec dec popl or sub lods add loopne mov mov movsb hlt xchg sub in movsb or daa adc push and stos sub out movsb push lods repz push sbb push inc dec fs loope inc movsl jmp dec xchg sub clc xor sbb test std aad inc insb jbe pop adc stos or xchg repz sbb (bad) mov into xor movsl xlat and hlt cmc (bad) movsb push add ret sbb push add aam xchg pop or and aaa ljmp xor mov dec (bad) jge or add mov mov cwtl cld xor mov pop sub test mov or mov and out int test cmp mov inc clc dec fbstp inc push cli sbb lcall push (bad) (bad) pop xlat out dec loop jae sbb and (bad) ret jl xor int xor mov inc in push mov jmp push hlt sarl jg aas out dec add push sbbl inc jl shrb mov in xor nop inc (bad) mov push inc jo loope jne stos dec test mov or pop sub mov es xchg dec jo mov jne test or cmp mov dec call shlb cmp jno aas mov vmovmskpd mov testb loope mov ret jno or add aaa icebp mov add rol ret (bad) pop mov (bad) dec xor xchg js (bad) and pop add aaa sub sbb (bad) xchg push inc test pop add out sbb cmp pop mov push leave rol add jo push call movsl cltd push mov fimull push in (bad) call stos inc push and fist daa mov or xchg dec and stos push push lret ret in sub adc mov push jb cwtl cld pop inc pop out test int3 jl lods int3 cs hlt aad xor test sub and sahf push cld inc stos and and insb adc cmp mov xor loop jmp dec addr16 mov add stos pop mov fimull xchg jne cmp jp xor mov lea add pop jb out test adc sahf in inc lock adc pop add ljmp out andl mov push adc ret mov sub nop or push adc mov ja aaa pusha adc add mov inc mov addr16 sti jmp idivb sbb add in and add out cmp pusha cwtl sub add cmp rol out and aam adc add cmpsb push lods out cmpsl adc hlt add cmp mov cwtl pop or jo mov jmp out movsl mov jle xchg or add inc pop rorl test pop push mov mov js je xlat js sub (bad) dec push in cmp leave test sbb inc loope and dec pushf rolb rcll iret mov pop pushf cmp loope test xchg and out movsb inc pop ja add pop aad lods add xchg pop jecxz shlb out pop insb movsb fadd hlt adc aas stos scas mov (bad) sub cmp scas stos les mov call (bad) out mov loopne sub gs out and pop push daa add xor mov push xchg rcll out mov inc or ret pop scas popa mov call rolb mov mov jbe mov sub adc int3 or push adc lret dec mov add ffreep fimull out lar cmp lcall mov dec adc aad mov (bad) jbe jae insb adc xchg cmp pop mov lods dec sarl loop or (bad) hlt mov or outsl dec movsl sub jbe rcrl mov insb inc es push call cli pushf hlt and mov dec add ja je out iret inc xchg les aas sbb cmp fmuls inc dec call (bad) mov cld (bad) sbb js fsubrs mov rorb mov sar add shr sub addr16 xchg push movb les jmp lods loopne fiadd iret shrb (bad) cmp sbb fisttp in out and cmp push rcl rolb xor cmp or xchg or sbb xor clc fdivr orb mov add jnp mov add sub and jl jno xor fiaddl loopne dec addb sub lods push add add test pop cmp fmulp xchg lret cmp push add jle add sahf mov or jns popa pop js mov add lret mov mov mov mov mov fbstp stos push jl or sbb arpl lea xor outsb sarb mov sub lcall add in sbb into hlt les loopne arpl push mull idivb mov jecxz inc lret xlat xor or imul mov mov add sub dec sbb sbb push shrb push insl sbb inc add pop and (bad) stos inc mov fldenv mov and fs and psrld cld cwtl sub jmp or (bad) clc pop cmp sub inc or cli add ds (bad) sub je cmp aaa dec xchg lret lds cmp mov enter imul adc or mov sbb jmp rcll call pusha arpl or pusha pop mov stos call or js nop cltd jns or scas sbbl sub push xor or mov cmp arpl fistl les popf test arpl dec jnp (bad) lods shlb mov setbe xchg icebp inc movsl jbe cmp or mov xor scas inc pusha lds pop bound or push mov ret jge mov clc je test sahf jno fs fldenv adc sub bound and push fdivrs sub ja push nop lret loopne mov icebp cwtl loopne aad sub push faddp mov mov int3 loopne cltd sbb or mov xor mov cmc fsubs xor jo jl sarb sbb or mov aad mov and pop mov (bad) loope les or clc sahf adc jp dec push (bad) jge dec pop aam or pop mov xor ds sarl fisttpll pop das jecxz mov insb lret add repnz jle xor push mov or push cmp xor adc mov dec cs dec imulb or lock add push xchg sub and cld cmp ret add xchg cwtl jbe xchg or rcl (bad) adc inc push xchg call mov stc xor mov sub cmp (bad) mov mov push aam es and dec add (bad) mov xor pusha shrl xor fmull and (bad) rolb cwtl xor hlt loopne dec mov adc pop and mov out add sbb mov adc push dec add xchg pop xchg lods pop mov inc jmp aam add jge push cmp and icebp cltd addl cwtl jne and xor pusha add sub mov clc cli cwtl xor and mov or push pushf scas jo add aaa (bad) cmp pop or mov dec xchg cmp xchg jmp pop call mov pop loope outsb insb or pop movsb adc sub push and jo or into dec test inc fs mov jb in pusha sub xchg jns xor fnop hlt xchg cwtl inc nop adc cltd inc and int3 xor inc xor sbb lahf loop nop mov movsb mov dec push pop push lods xchg jo push test mov scas cwtl add xor and ret das cld loopne adc dec jae and shlb jnp dec ror jo pop and ja es popf imulb fiadd add inc push cmp je out into push jecxz add call fs int adc push mov mov ds inc pop daa andl fimull sub hlt sub cltd xor andb xor hlt pop sbb shr dec mov inc pop mov leave cmp xorl adc loopne pop arpl sbb jbe inc add sub pop adc lods (bad) xor ja sbb add fcomi daa sbb add rorb enter add mov adc aam (bad) xor les add loope,pt adc clc enter sti out pop fs pop add ret jp dec in rorl das mov rol and and rolb inc xchg cmp in xor sub iret adc hlt add inc in (bad) xor daa mov or mov or adc sub cmp movsb mov pop daa andb adc lods inc and out subb mov (bad) aad leave roll (bad) jb je jle cld gs adc add mov cmp int3 adc fldl mov insb jno pop dec sti sahf movsb pusha push cmp bound daa pop mov arpl mov stos flds jae js add out add dec push (bad) adc cmp jns jmp sub pop call call adc add pop ret stc push pop iret negb lea in lret lock sarl pop imul (bad) incl cmpb push pop sub or loop jo push out ljmp out fadd stc cmp add add mov movsb mov in push and sub xchg mov xchg sbb push inc add sbb and or test aad jl adc in repnz clc dec ds dec enter lods dec or adc jmp add inc lret out stc in mov out mov ss and nop or clc inc xchg xchg test inc mov sbb jb loopne stc cmpsb sti enter inc mov cmp pop jno in (bad) mov xor dec xchg cmpl cmp add into mov (bad) fild push mov ljmp add adc mov mov pop lds nop xor aad enter mov loopne ds xchg sbb mov sbb jmp adc mov into ror and inc mov loopne lds addr16 pop imul pop jbe daa and scas adc sub pop outsb xchg adc mov cmp xchg call out andb mov out aas (bad) mov loop mov dec ret sbb push or cwtl pushf adc loope lret sbb les cmp jp jle sarb push pop dec out push dec or pop dec dec inc push das and or outsb (bad) pop and lock add les shlb dec pop cmp pop mov mov testl mov mov xchg out dec cld rcrl pop insl adc movsl (bad) fs or sub in (bad) divb add divb or rorl add or jo push jno popf nop fsubr rorl mov test sbb and dec mov mov cs aas adc lret fiadd das mov dec enter mov jnp add shl or jno mov popa and int3 pop and lret push xor repz dec mov test mov insb mov les add or pop and fdivrl les or xor out shll and cmp push fldcw mov add adc les sar dec mov gs pop data16 cmpsl add enter push hlt aad sub or dec xchg pop fcomps daa xor stc xor push mov and lret icebp add cmpl adc (bad) (bad) or dec pop test push add mov cmpsl mov and adc or sub dec adc test push pusha lock inc push adc iret pop daa mov and ret inc je dec call sbb mov dec pop call popa xor dec add mov mov xchg inc xor jo or or cmp add add sub push add cmc push adc hlt add cmp or loopne adc icebp nop xor jp and shrl or (bad) jo or inc das inc adc sbb jns sbbb lock faddl pop push mov push (bad) xchg dec sbb pop mov std sub ret or add into push rolb push sbb or ja fdivrs and test and jb aaa add in mov cmpl xchg lods lods cmpsl inc sub scas xchg pop sbb mov push pop mov and sar push (bad) mov and pop inc lret and add movsl push sub mov lahf and pop jl imul movsb adc pop xchg mov in dec ja daa icebp out inc out or mov xchg mov shrl addr16 pop in jo cwtl and mov lcall mov add lods sbb fldt mov push pusha je out add aaa mov dec cltd cmp pop mov iret (bad) adc add push cmp dec in aad enter mov push mov fisttpll (bad) fdivs xchg or xchg dec mov sbb movsb inc pusha movsl andb dec dec aaa pushf add mov push or jne cli push adc (bad) jle pusha (bad) test bound sub ficom mov push fiaddl jmp loopne popa mov les sbb adc out xor (bad) mov mov xor (bad) pop cmp inc jbe sbb cli or icebp std add adc addr16 and sub pop xor xchg push mov test push les cmp das dec imul nop dec adc inc mov cmp jl lock mov dec aaa push in hlt adc inc and jl xor jp loopne or dec adc add push xchg shll cltd cmc imul xor sbb mov sub mull cmp ds ret ds add rorb sub (bad) fimull and jl,pt dec in lock jo sub add pop jbe cltd fcomps loope sub nop int3 cmp jp out cld mov daa jl icebp aam pop adc sub push andb add jbe xchg (bad) faddl mov cmp jne dec pop pop xchg int3 out push out and xchg (bad) jge les inc enter cmpsb test fdivl sahf pop or inc dec xrelease or cmp push rorb cli xchg mov lods ja jb in rclb cwtl bound mov inc jl pop insb adc daa mov fcoml fcompl fst mov stc cs test (bad) pop out add stos sub inc cmp xchg xor jo mov fnop in in cmp andl pop out imul stc push inc fisubl pop mov paddd das ret je lock pusha fstps sbb movb or and push lcall out xor movsl pop aaa int3 and hlt mov rol sbb imul (bad) push push inc or fdivr xchg or mov call shrb and in push test add push xor cmp ret jbe xchg add xor push ret xlat push mov lods jge add outsb sbb adc cltd out cwtl mov aas int cmpsb int3 and sbb movsb xor pop sub adc jne in and dec aaa jmp je xor mov or shl mov lods add mov lret dec inc pop out inc in mov lock pop call lcall out pop leave in outsb es push cmp mov inc enter jno in mov xchg jle xlat dec js jns dec jo sub xor lock and dec and fs lea out pop add sub dec cmpsl ja ds es add sbb add sti (bad) hlt pop sbb lods pop ljmp std or dec pusha cld cmp lods fs sub mov push rolb gs jle or in in sar out lahf add cmpsb (bad) or jb xor sub pop loop (bad) push mov sbb (bad) jo lea adc xchg aas es dec mov push pop lds adc lahf xchg enter add add lods push cltd or cmp xor insb test mov out xchg dec and ficompl outsb dec dec dec sti push inc add or loop lahf hlt xorb jno in pushf dec (bad) stos dec repz add dec xor ja jg pop dec push push inc (bad) add lea enter sub pop add fmul leave (bad) je xor pusha es push mov leave mov nop jns pop or shll inc pop xor ds in pop or stos leave mov fildl (bad) ja lods pop out mov or mov aam fmul mov sub out jmp add push rolb daa xor loope xchg test adc je lret sub mov test pop in mov (bad) sub adc iret int test lock loope and push (bad) test sbb into inc mov popa fild mov lds cld dec xor sub shrb jb xchg mov pop sbb mov mov enter xor push test hlt mov daa sub das pop inc mov jae pop int3 test jmp mov insb lock pop mov insl roll orb cmp stos arpl loop and out int3 add cmp jbe jge outsl adc out cmp or movsb loop add jl and xor int3 das mov bound call add lods aaa scas sub add mov mov inc inc cmp hlt mov sarb hlt hlt pushf sub cltd xchg add mov sbb in mov or cmp int sbb mov add cs adc or inc jbe cmp popf sbb xchg addl and inc ret push add stos mov movsb cwtl sub jnp js les movsl int3 std xor mov push sbb pusha (bad) add movsb cltd aas es pop add mov dec ljmp mov sbb adc rorb and cmp (bad) into inc sbb daa xor cmp adc mov and enter cltd xor neg fimull call es sahf lcall and add inc outsl xor ror pop stos aam mov es pop movsl or add aas call push mov movsb and ret inc lahf sbb pop adc nop nop div arpl mov lods adc mov jbe mov imul lods sbb mov clc and mov daa jl lret adc mov push push dec mov sub or adc test dec jb fadd ljmp adc orl mov lea sbb insl test mov adc adc adc daa cltd int3 xchg insb cmp loopne ret sbbl lret mov sub sub push adc adc orb test push push mov adc mov cwtl pop add scas cltd clc push and add mov pop (bad) xor fs add js ficompl adc push adc repnz lret in sbb faddl dec ljmp pop inc or mov or adc and scas adc lods xor ss add or lcall cwtl sub xchg fimul shrb mov sub adc cmp add mov pop gs add sub add ja icebp jns test dec or cmp insb ds hlt je add test adc or and sbb cmp jle call push jl inc loop xchg and jns ret imul or mul call pop mov addr16 fsub movsb dec arpl loop cmp sbb add lcall adc push push xor pop cmp xor or stc and cmp lcall jae lcall in push and (bad) cmp sub add aaa jl cmp xor cmp mov or mov les and mov testb iret inc mov setns bound add neg cwtl nop or iret sbb pusha and mov and cmp fnsave mov mov or mov clc push roll leave sbb jne (bad) xchg aam in or rclb xchg bswap mov std cmc adcb orb mov sub push aaa popl or push pop mov aam inc lcall test arpl mov das push dec fsubrl (bad) and sub or sahf (bad) sbb sub mov mov sbb jbe jae xor mov dec (bad) enter loope xchg int ret jmp and ficom or dec xchg dec mov inc lds nop cmp mov rcrl mov jp lock add cmc stc mov sub jmp add mov mov mov test inc jo cmpsl ret mov test test movsb mov (bad) clc aas or dec fidivrl lahf mov decl sbb sbb jae rcrb scas lret sahf pop cmp es jae lock cmp test jbe adc or push hlt fs movsb dec pop dec push sbb sub add ss push addb addl push dec and out and call sti sbb mov add mov aam pop mov stc add sbb and (bad) (bad) fadds mov mov pop rorl add leave clc jecxz jbe cmpb rcrl mov stc fs ljmp and cmp (bad) xor dec roll rcrb and push (bad) out xor add rorl std nop xor mov movsb mov (bad) pop pop dec stos ret int3 push mov xchg bound in jnp lock nop add or add rorb inc int3 push cmp pop hlt rcrb lock rcr es stc test add add in jl push pusha stos leave sahf or jge and imul (bad) call jp push xchg add cltd mov jne loopne and rcrb movsb clc daa or sarb (bad) cmp andb movsb fs das lret sbb push xor mov jne movsb xchg sub cwtl rolb jp mov cmp int stos in inc int loope push add enter das xchg sub push subb mov mov dec push inc popf outsb movsb inc lret in and or enter std js ret out loop dec pop notb test adc mov (bad) xor xor nop enter mov xchg inc test aam sub or int fcompl mov pop inc push rcrb sbb test mov mov shl and push out dec std mov adc jmp lds hlt xor pop call jae mov inc add out or mov cli mov add pop popf inc cltd inc shrb jns,pt orb jne add (bad) mov mov add pop pop pop js (bad) out out cmp or inc movsl mov fsubl adc dec daa xchg adc fs sub mov std lock int3 and test jae cmp cmp iret in fidivl xchg (bad) and lock mov sub mov nop pop ret push add daa jmp mov hlt or dec xor or mov or loope mov popf (bad) xchg (bad) fdivr or mov test leave in sub pop inc insl test jecxz (bad) mov popa loop (bad) ljmp pop push cmp xchg pushf add ds mov mov xor out gs or pop and mov cwtl push es je mov jo dec xchg mov movsl cmp icebp fs movsb shl out stc dec js pop cmp pusha scas xor mov sbb sub dec mov daa push dec inc and or daa insl cmpsl push adc mov pushf inc lds pop sub test or cld lahf bound ret xorb shr insb jne clc push rcrb xor inc xchg lods inc jb push testb pop jp shrb imul or mov adc add mov ljmp nop add mov add push (bad) lret mov cmp fcoms pop jbe adc ret cmpsb jne mov add aaa out ret xchg sub add xchg inc add loopne pop mov cwtl xchg dec jp fs cltd stc test sbb dec aam sti or jge pop daa andl fs loop incb les push cwtl lods addb push inc test loopne,pn inc and int dec push mov and cmp les pop out mov pop fwait sub sbb (bad) lret jns ja mov pop pop cwtl mov mov andl mov adc sub int3 faddp shrl mov push pop int3 (bad) jle adc adc int3 cmp push je ret addb pop les enter test test aas pop lods cli and push adcl test lds adc and rolb (bad) mov mov add daa push jns movsl test fist inc and js cmp add out dec in inc cmp xor icebp mov jl lods pop push push push sarb loopne les or or and repz movsb and push jle je mov sub mov cmp outsb inc mov mov roll xchg mov xor cltd jnp ja sub rcrb lock aaa in fs jg ja jno or push je loopne cmp add mov pop and xchg (bad) lock ss jle mov test cmp xchg adc aam push les or xor lahf mov jno dec pusha and pop add test clc jbe adc sub lea inc adc (bad) add repnz sarl cmpsl rolb sbb test jne and in test out mov mov cmp popa addr16 and push subb je rorl cmpb inc out sub sub inc lds jae push mov and movsb adc test inc (bad) je loopne mov call rcr cs jecxz cmp loope outsb addr16 test add les xor rcrl scas inc sbb repnz xchg push and mov adc or ficoml xchg mov popf mov popl xlat test rorb enter jno sti inc or xchg pusha sub mov pop mov add sbb lock aam mov inc add xor xlat jnp sbb add daa adc xor jecxz orb in push xorb lret or mov xorb inc data16 xchg (bad) mov sub mov add out cwtl and add (bad) cld or call mov dec dec and nop mov add or rcl add sbb push sub rcl pusha pop arpl xchg dec test in lock adc push pop mov adc push xor xor adc pop out shrb and jge or sub add push stos xchg mov lcall ficomp out add int lods aas jl pop stos or sub aam mov out not jno int3 jb enter and push ret cwtl pusha or repnz dec aaa jmp cwtl mov pop dec sahf cmp adc and ja xor push cld mov cmp jle fs add mov add add hlt rolb into nop stc pop sti and fadds pop pop lods test xchg les mov and push add aam fdivl push (bad) repz iret daa out add push xchg sub add out mov mov cwtl pop add lods jg pushf clc rolb cmp jb ficom sarl xchg lcall (bad) out jne stos ja jmp js cwtl adc pop add shll mov sub (bad) int3 dec xor fnop dec scas fcomps out add sub test and cmpl cld adc jge into out aad pop fadds js sbb rorl push (bad) out gs dec aaa add push (bad) xor cmp enter add xlat cli add fst addr16 rol pop cmp dec mov (bad) mov sub xchg push or mov sub ljmp or or inc pop nop cwtl shr xor adc ja loope pop inc pop ret mov lahf adcl mov xlat mov cmp shl mov hlt dec cmpl mov aad movsb mov xchg mov add loope pop (bad) mov jp or pop jl ret dec cmpl mov add fsts mov loop or jecxz dec ss mov mov aaa loopne cmp in fwait dec outsb pop (bad) and sub pop movsb add and push loope loopne add pop lods push movsl adc pop xor sarb jbe pop test shl adc sbb pop inc push das jecxz lods jge push (bad) cli test sub inc inc cld sub daa cs mov add fdivrs jo mov dec lods push cmp imul dec xor mov dec jb pop inc (bad) cmp aas int or loope xchg hlt mov push inc sbb mov push inc call xor xor sarb add andb out xor mov and add inc in pop adc shl inc pop push cld testb sub dec fstpt loope js dec xor pop adc ret into (bad) aam loopne add or aad shrb aaa mov jl add loopne mull icebp add ret pop decb ret icebp mov jle test and test jmp lock insl add push mov mov test orb pushf or pop mov lods mov dec pop mov pop cmp aad call add jo add pop out add rcrb xor jg jl cmp nop xchg add inc test out pusha add ja add pushf mov and xor or jecxz jl or add in jp mov (bad) addr16 hlt xchg or xchg in imull int hlt add dec mov dec ror shll mov fisttp cmp nop daa adc push pop call sub sub shl imul pop inc bound xor aam cmp adc out adc jbe push dec and cmp mov sbbl mov sbb or add ret add or das mov sub cmp add scas nop int3 or cmp fs adc cmp jl jns inc lds inc je xchg leave jle push jb sub dec repnz add mov pop jecxz in dec adcb or hlt or mov sub ss sub sub lock int3 and or out dec adc adc stos cmp add pusha jo imul dec popa add jb out jge cmp inc das dec adc pop lods inc cld sahf push lret clc mov shr mov fwait xchg test rolb jb or sahf sub xchg int3 inc mov adc mov pop clc jne cmp add or xchg lods add (bad) in (bad) mov rcll or cmpsb mov addr16 sbb stc push adc or xchg in aas imull adc test clc jmp bound mov inc adc pusha add add or imul or push leave mov out push shll add outsl inc call pop lock pop pop pop adc nop (bad) lds cmp sarb add stc add out sub lcall xchg test mov iret les js dec mov xchg loope cmp pop adc jne (bad) jmp push das sbb inc in clc cld add iret mulb lods push inc or rcrb sarb popw sbb les les nop add push nop mov xor xchg jo flds rorb xor mov outsb or ss push out out arpl nop mov mov xchg outsl pop out addr16 jo sbb xchg push jnp in mov mov jno shlb mov xchg ljmp sbb jno aaa lock dec or inc rolb iret aas dec das push mov push pop lods dec xchg cli (bad) mov cmp sbb cmpsb lods rcll add xchg dec bound sbbb xchg jno mov push fsubl (bad) add add jo cld xor sub mov repnz in xor add dec out jg or jmp push out out movsl movsb data16 sbb and xor clc lods xor xchg int3 das pop inc sbb inc pop adc bound add jae and inc mov pop add pop pushf shlb jne hlt mov out sbb inc push mov pop push jo sbb xchg jecxz push and daa icebp add cmp loopne data16 add nop sub es cmp hlt movsb push test jl jns add pop dec adc xchg das fwait ret rorb add loopne out int cld inc dec test mov jl rcrb pop movsb mov pushf fnop (bad) jge fdiv push nop add int fidiv dec xchg je bound jo shll push xchg stos cld push js pop dec mov pop shl (bad) or xchg adc (bad) push mov add add outsb out fimull outsl icebp cmpb xchg js lods mov dec cmp outsb and sbb clc stc adc hlt enter icebp jle rolb in pop push out xor enter add sub sub gs inc inc adc punpckhdq inc pop data16 cmp lret sbb adc sbb push jg out cmpsb in mov sub mov std and add pop popa sbb out fildl push fwait cmp dec sub das iret int es dec pop cmp sub jmp (bad) fldenv mul repnz cmp add add push cmp dec mov add call fcoml xchg push pusha fild testl add dec mov aas out loope andb push repz mov push adc sub sbb mov sbb add lahf loope sub jmp sbb sub push inc push repz dec mov aam iret lea inc add sbb or mov mov (bad) mov mov or jge pop leave test or mov add add shl sub repnz loop jge adc cmp push xor sbb sub lahf inc inc jmp (bad) dec push in cmpsb jns mov cmp outsb add cld sub add fsubr (bad) adc imul iret jle xor cld or mov in and pop add repnz int3 add adc push loopne or pop lods out inc jmp int dec jge lcall les sub lds cmpsb jo adc rolb push push out (bad) sbb jg repnz insb xchg sbb adcl and mov and sub jmp and ljmp jmp clc or xchg call or pusha lds fldl popa push pop sub push mov es add in mov lock or data16 pop sar mov dec add in push and add jo push sbb in mov mov out stos iret loope sbb into and sub and add aad std cmp or pop popa out dec pop fiadd jle fisubrl push (bad) and sbb mov mov xor (bad) xor imul push js hlt popa stos jnp add test clc cmpsb (bad) pusha adc sub ja add xchg cmpsl sub xchg adc test mov cld cmp mov adcb jmp add add loop fidivrl mov mov ss lret jns call push add hlt in les lock mov adc xchg insl mov adc mov mov and pop int3 cmp sbb push add rorl mov cmp pop mov mov jb das cmpsl out add insl jg adc add btr mov cmp xor add dec fneni(8087 lret xor daa mov stos ret fwait mov inc or push imul dec dec xchg lods add pusha pop sbb xchg sub mov dec sub mov (bad) pop test dec imul adc push inc push cmpsb jns sbb ljmp jl add sub sbb push push lock sbb bound jg jno in rolb jne,pn pop jbe fistl and cmpb (bad) lock adc (bad) pop cmp andb fbstp fsts inc les and call dec lds xor addb in jb jp bound dec xor loop leave add mov ljmp aad faddl jecxz inc push clc or mov cli dec mov mov and push mov inc out icebp push push psubusb or les or push mov enter imul (bad) cmc push ret bound movsl shll insl mov mov mov data16 xor into les mov adc (bad) push cwtl push mov push mov push add into lock test and imul xor test ret stos mov mov les xchg inc pop and jp sbb in mov push popa mov fnstcw jl push cmc xor mov adc push push int mov dec pop pusha lahf add insb movsl stos fiaddl nop xchg jmp pop pop in andb pop pop ds icebp into lcall cld mov cltd test adc scas test iret cld cmpb add cmpsb push out pop in adc leave push inc pop xor inc out fs icebp rcrl pop aad cwtl add push mov sub mov jmp adc jle cmp (bad) push fwait add lock test cmp or adc add mov or in mov fadd sub dec hlt push (bad) aaa lock stos sbb loope stos addb adc jmp and cmp mov int3 or and pop lods sub or pushf mov inc insl pop movsb sub nop lock pop repz out pop push ljmp mov adc adc adc cmp add pop mov pop aam inc lods in pop add outsb mov cmp add aaa ss mov and repz mov ss xor imul gs in inc mov outsb ss sub dec pushf arpl and cmpb sbb mov aas and mov sub and mov lods ror (bad) pop mov jl rolb add ret xchg push in in pop out (bad) sub call (bad) in mov aaa mov pop rorl xor aas jo clc sub push pop das jno out adcl divps mov xor cmp je jg or dec cld jb pop shlb stos lock fcompl sbb bound or and mov daa add push cmc cmp and int3 fdivl mov mov in sbb shrb pop sti aad inc ja mov adc lods push imul bound jmp sub push add pop or push (bad) lock push sbb add cmp sbb fcmovnb ret int3 in adc insl fcomip mov sub je ret jns inc dec mov mov clc inc adc pop out inc xor inc add ljmp mov jnp in leave (bad) fldl insb aam sub dec add ja xor mov sbb in cmpsb inc andl lods add roll add call or pop add out (bad) cwtl jno cld sti dec jmp nop fs mov pop jmp cmp arpl add ss mov jno sub cmp jae mov cmpb push insl pop jo push outsb (bad) cmc pop je sbb negb and in mov mov adc in jne and add push aaa sub mov push or sub mov es lahf aam js or movsl sub incb lods imul in (bad) xor or add sub fstpt push cmp mov xor in sbbb outsl mov jmp shrl sub fbld addr16 xor adc mov adc mov cs in out or or sub lods sbb add mov mov sahf cld xchg sbbl rclb xor pusha mov pop sbb xor inc insb enter jmp xor arpl or jmp pop bound (bad) xor insb or daa (bad) das or xor mov (bad) mov (bad) repz adcl sbb xor jmp nop jle pop shll sub add jae add dec loopne cmp add xadd xor sub ror lods fmull jle push pop outsb pop push push xorb sbb or rolb mov jg push sbb lcall sahf sub and or decb push inc inc lret push clc fimul jbe cmp add call pop addb cwtl inc xor cmp sbb ljmp repnz add repz push jle push addl orb dec and adc popa pushf jne add add movl add lds popa pop add pop inc (bad) push call inc into xchg jo mov arpl inc pop js data16 jno sbbb push movsb ja jo push das (bad) sbbl or rorb (bad) nop loope ret testl push popf fdivrs and pop repnz popa xchg out lock sbbb mov add out push xchg dec leave push out pop js loopne mov jns xchg jae jecxz add es xchg add in jmp cmp ds out loope inc aam scas mov adc test pop pop cmpsl call jp fwait (bad) inc ret jle pop rolb insb pop sub out xchg (bad) sub mov and pop lahf in push cld insl js scas sub lcall xchg mov loopne or sub adc push dec dec (bad) mov js cmp mov adc pop test es loop and push sbb mov cmpb pusha mov test and inc mov xor ret dec int3 outsb nop rorb push mov rorl and addb cwtl inc mov sub mov adcb pop insb es sub in decl bnd dec in mov mov xchg gs test je ja aas out mov inc ficoml adc mov or pop push pop mov xchg cli sbb into mov adc cmp jae pop divl aaa loop xchg xchg jno sahf out add and jp cld inc sub jge and lock cmp cwtl sbb out mov or cmc (bad) adc cli insb add inc or js sbb je mov std arpl and outsb jno mov adc out push xchg xor testb (bad) xor test sub insb loopne loop popa fldl mov popa cltd imul in inc mull dec sbb (bad) cmc hlt jnp add insb add bound adc in sti sub and fs push add and leave ja lock jle mov xchg or aad cmp sbb addr16 outsb or cmc push jo push pop jmp xorl loopne hlt adc xchg pop jno xchg (bad) pop inc push mov push (bad) or nop add test cld add scas fisubl push cwtl sub (bad) mov add aaa fisubrl jns push mov jp add pop adcb in cwtl jb pop aam cli hlt xchg sub out fcoms inc mov rcrl scas icebp and xchg jb adc scas into adc sub adc je addr16 jmp inc xor push jo shl (bad) les out cmp test (bad) jo xchg add aaa pop add mov gs aas aaa add or xor and and ss test xchg into clc or out xor aaa sub pop sub jnp mov push pop xor or in sti and mov or sbb add push pop sub dec push js xor scas xchg movsb adc dec test sbb add adc sub lahf in and (bad) jns or pop jo flds adc lock xor (bad) js add scas fmull nop mov adc lods push pop push sub stc and mov daa add int3 in test xor cmp inc or dec rcr xchg hlt jno jl mov xor or dec js add add push test cli mov test mov adc mov xchg pop adc mov add adc inc sub cwtl push loop push push sub addl daa leave xlat and sbb mov pop ret pusha iret push (bad) xor pop pop push push mov gs inc pop jg addr16 xchg inc mov add cmp xchg (bad) push mov dec cmp xor jp inc pop mov adc or in ret nop js xchg movsl add xchg sub sarb jle aam test les mov jl xor test test pop mov pop add enter mov gs idivl add jnp jg xchg pusha push mov cmp (bad) ret add (bad) ret add xchg shl pop add ffreep sub clc lock loope sbb xchg jmp fldl xor inc sub icebp xchg or stos sbb or and pop jb ffreep dec or push shll jp sbb aad mov inc icebp mov and adc add sub push sbb ret pop ficompl loop sbb (bad) mov aad mov sub pop stos push fidiv fistpll pop out mov das push fcoms nop add sub repnz dec jecxz mov scas iret sub mov sub dec or and and lahf and xlat sub enter fbstp adc loop or xchg popf adc fistl jns ret in inc push add mov sbb into cmp mov inc js or add mov aad inc into (bad) dec clc or lahf fwait adc pop cmp or imul repnz mov and xor roll lock xchg xchg cwtl test xchg js call sahf inc mov and aaa xchg je adc xor add mov xor or adc mov out nop pushf loopne push mov fnop sbb push fucomp int das push sub out pop push push (bad) dec ret test mov cmpsl movsb xchg jns fadds push adc lahf fistpll ficoml ss add mov mov inc cmovb adc psllw dec xor pop add jo sub xchg pop sbb sub enter out add push lods mov leave or dec pop loope cmpsb rorb rorl mov test xor sbb ds cmpb jne iret repnz ss scas test add adc enter mov pop dec stos pop mov xchg popf inc and adc or adc scas fild mov inc lcall cmpsb dec pop add and pop popa sbb adc add xor add in pop loopne xor mov sub dec mov pop fwait sbb xchg adc pop enter add dec out mov imul leave and mov pop cmpl cmp sub jmp add jns lcall pop mov scas jle cvtps2pd mov mov push add sub cmc js mov jns gs mov jb and mov push shr add cld mov sub adc js inc adc pop fidivr dec hlt and cmp jne mov sti test xor add jno pusha cltd rcl lds addb test add lcall xchg add lret js es adc add add pop push jb fwait cmp or sub (bad) pop fsubrs mov xchg pusha jae sub hlt xchg push jno clc adc mov mov dec (bad) test fdivrs pop fs and pop add jne sub pop jo push in push jno mov mov add xchg adc mov xor js lcall sbb xchg adc cmp xchg lods sbbb add mov out cmpb out or mov add call ret sbb sub ret movsb test lods add sbb or outsl or and add repnz xchg scas test adc push adc or sahf test inc test fdivrs insl mov test popf pop pushf mov mov mov aaa and inc jo rclb cmp jns in xchg xor mov add sbb inc (bad) je add mov lahf mov cwtl cmp push xchg mov sbb mov ret roll add and xchg mov or sub outsl pushf adc cmp push jb pusha in jl rcll xor jo clc cmpl mov or sbb add in sbb xor cmp sub sub shrl movb inc cmp aas popf mov mov cmpb lahf lock sub pop xor (bad) js add push push jne dec mov cli rolb lea shlb cmp fbstp mov rsm push pusha adc mov bound xchg cmp lahf and mov loopne cmp xchg cmp loope pop jecxz rdtsc call xchg push pop cmp pop aaa test (bad) les mov cmp mov adc inc shr mov xchg jg ja jno sbb cmp adc rclb jmp rorb popa ret inc test xchg inc pop cwtl into loopne mov lsl (bad) (bad) lahf loop popf out cs push loopne scas pop shr ret sahf jnp mov cmp mov push std testl lea clc push lds fnstenv inc or or adc xor cli inc lahf push or js dec cwtl sahf mov xor stc enter push lret push popf mov (bad) out cmpsb js pop repnz fs jle shr add roll and add in outsl lock adc test push call xor cltd or jb xchg nop and add push icebp push jae inc lods decb out fldl xor fildl mov mov mov in out cltd bound inc repz sarb int3 popa and rcll inc mov nop push out push (bad) push dec mov add sub rcrb int add lds in or out neg or gs dec je iret sbb std int3 mov loopne mov mov in test jne xchg jmp inc icebp mov mov jo loope rcrl test add inc pop repnz out sub movsb call mov fwait incl push jl fldenv sub adc int3 lods adc mov lods cmp je mov push add ss inc ss shlb inc adc push jno test subb mov sub push cmpsl dec jbe iret dec and and mov pusha cmp sbb loop mov icebp inc adc push xchg pusha cmc shll jg pop fdivs adc inc movsl mov dec sbb out sbb in push dec mov inc aam push int3 mov testb and dec xor cmp and pop or ja in sbb mov test pop js adc sbb mov shrd std add stc inc shlb (bad) mov push adc insb add xchg out and dec js xlat movsb enter mov insb test or fsubl cmc sbb push sbb sub ja gs cltd pop dec or popa sbb in and call xorl shll dec cwtl mov mov int sub test pop push lret es sbb xchg xchg js test js or xor (bad) fdivrl loopne push addb add pop aas sbb test cmp enter int3 sub stc push xchg add paddsw jl,pt mov nop cmpb insl or xor pop push mov inc int3 or sahf xchg loopne pop and add or mov lds xor shll aad push xor call or dec ja xor xor xor inc test mov mov push and xor aas int adcb push dec cltd ljmp adc pushf add add push mov inc test jmp nop ja dec or dec inc fistl sub cmpb add rcrb jnp out push adc cmovge push addr16 and sbb ja and in dec or shl add adc mov ret (bad) xlat flds sbb inc mov testl iret or push pop sti sub pusha inc movsl subl mov (bad) enter aam cmc jbe pop movsb jne pop fwait in add fldl inc jae add inc sbb jge dec (bad) addb push lahf mov adc cltd add mov lcall rorl insb pushl aam sbb sub aam or mov and and lcall sbb arpl xor int fsubrs dec cmp mov jae adc push mov ret xchg cld iret jge sbb jne (bad) in bound ror pop add push pop popa xor fwait and cmp inc scas clc pop mov shrb cmp fdivrs or xchg lods cmp call call cmpsb mov fbld dec mov ret loope enter jl push loop ss sbb stos fwait mov xor push xor lahf add mov (bad) add stc sub rolb push aaa jecxz jl jg ret pusha lahf cmp movl xor das popf incb out mul cli and xchg push dec push pop jecxz pop pop inc or clc lahf pop and jbe les stc fs sub mov mov mov in xchg mov (bad) out (bad) dec cli loope rcr enter fbstp icebp xchg mov sarb xchg add sbb test xor jecxz inc cmc stc mov (bad) dec mov jecxz cli sbb mov push shl jecxz ss lods sahf push leave push mov jl lret rcl jecxz xor lcall cwtl dec or push (bad) faddp enter jo mov stc jmp test dec xor push bound mov shlb mov arpl cmp jo sbb or add aaa mov nop mov xor pushf fcompl mov mov imul stos je xor cmpsl (bad) cmp adc jle pop add sarl sub and mov adc ja das adc scas or adc cli or pusha or test je and add sub aaa lock (bad) jno or push and adc or ja stos jl cmpb push mov stc pusha jne (bad) lock fimull inc nop sbb cli leave dec dec pop jl cmp mov sbb or mov stc xchg mov les mov pusha adc aaa sub jp and mov add fisttpll and xor add aad mov mov pop fsts add xor stos lock les cmp sub clc dec shrb jge mov cmp push add nop test jge or cmpsl inc loop sahf jns pushf (bad) cmp cli ss aas shl add adc or cmp xchg xor add (bad) and ret jl adc and in ljmp rol cwtl clc repnz sub pusha mov sbb lahf test add sbb dec incl stos div mov jnp repz sub sub sub ret adcl scas lods int3 stos jp jmp push pop dec add jle (bad) mov nop sbb mov or jb and lea shl in sti lcall add arpl mov mov sti rclb mov sbb sub dec push xchg add xchg or (bad) xor movsb cmp loopne leave sbb jg cmp push jno mov pushf addl xchg pop sub jmp lahf jg daa lea loop ss inc cmp adc daa mov insb sub pop popf jp inc xorl sub nop sahf andl in cwtl aas fbstp pop out xor es or rcrl fsubs pop add ret and xor push stos xor or cltd es aam adc test cmpb nop push sub push lahf mov movsb rcl push popa loope cmp mov loopne (bad) or test push popa xor or or xor stos adc pop and dec add add enter dec int3 shlb mov xor subb int3 add les sub fisttpl inc xor enter cmp je mov mov enter xor jecxz or add mov or add fstps outsb cmp ret fisttpl add (bad) aaa jne add jbe into sarb add adcb dec xor fnstsw jg aaa pop ret mov mov xorl gs sbb add jbe mov dec pop pop stos jl xchg test jns mov mov test mov or enter inc and add push sub sub mov test and test push jg inc insb push xor dec clc add adc mov or loope xor jg mov ret pop cmp sti movsb das std dec pusha or test lds je (bad) or and je mov dec call jo sbb cmp or cmp cmpsl lahf loope popf fs dec push stos popa pop sbb nop test sub dec test xor mov mov cmp inc rolb shrb fcomps test cwtl and or cmc fldl or adc lods push xchg icebp (bad) aaa sub adc lods roll clc arpl cmp xlat xor movsl dec adcb nop pushf mov dec jns pop shll out mov jp or dec sub add fs cmp cmp sbb (bad) mov test pop push or mov pop imul push xor (bad) mov push adc adc xor test (bad) push add fmul fdivl rol or and hlt pop jns jl pop mov mov mov nop fadds push test lret shrb out jne ret jmp and and and dec outsl enter dec mov sub das sub add mov inc sub mov shlb or adc ljmp test jecxz or and insl mov sub imul cs addb push jge and test pop mov adc dec mov add inc rorl add and or mov add cli stos pop add lahf fprem1 xchg sub pop or add mov ds jge pop mov inc fmull jmp jecxz lock cmp pop pusha xchg jg inc fdivs lahf jo int (bad) lea nop sahf sbb int3 int3 add vunpcklpd mov pop fsubs push insb mov fwait adc jb ss jne xorb rcrb sub das mov les or (bad) and fldt push int add or adc add aaa xor sbb adc inc stos popa cmp and dec mov xor jno fcoms pushf ret and cmp cmpsl addr16 cmp popa mov jg fsubrs mov mov or add pop (bad) pop das addb pop push dec push int stos fs cmpsl pusha pop imul jo fisubr leave sub aaa mov add outsb loope lock (bad) dec (bad) xor mov cwtl pushf sub add push mov pop add mov jge prefetch sub xor sub lret mov cmp push mov and sbbb add imul test cmpsb test push sub xor jp in pop icebp cwtl int test xchg int3 pop pop cmp mov jb xchg push sub sub pop flds mov cmp stc xor sub sub (bad) movsb add imul or xor push adc je daa cmpsl or repnz inc inc lret adc (bad) and (bad) mov mov pop fmull sub stos dec or xor inc pop pop adc push jg push and test add enter mov lahf adc nop or outsb divl into or push and in dec inc lock adcb pop lock daa lock cltd sub lds sub enter test mov and sub stos test nop hlt incl jecxz xor enter jo je ret add and out xor adc xor xchg and xor and and icebp enter cli in sbb inc aam (bad) xor loope add mov sbb nop test lods cltd pusha mov inc adc cmp hlt and mov xchg aas pop dec sub or xchg mov inc xchg push imul ljmp test adc imul jle loop out inc inc test push stos mov sbbl cld hlt (bad) les jge xor pop and xchg xchg loopne mov or clc mov inc add mov add sbb mov mov mov stos fimul add mov adc pop (bad) mov xorb dec sub inc cmp cwtl and xchg and pop mov and xor in sbb lea add ficoml add test jmp jmp aas mov add js mov dec fimul adc pop cmp call fwait sub cmp gs cmp xchg iret dec add adc sbb xchg or push ret adc adc sbb mov out lock movsl add repz dec adc sbb adc xor sbb test insb sub jno and data16 mov test test adc repz or push sbb adc test mov lahf cmp cltd nop shrd push mov sar hlt sbb stos shufps mov mov lahf xor mov adc push sbbl pushf pusha push repz aaa sbb sbb adc pop xor push cmpb cmp movsl push xor xor sbb cmp into leave add or clc or mov stos out mov fs mov xor sbb cmpsl push xor and nop adc pop mov push stc lock lret pop mov push mov in adc cmpsb push sbb fdivl mov push and add push popf jno sahf cs adc and je add add pop add pop and sbbb jno push in pop add dec mov jno repz mov add js xchg cmp sbb cmc pop sub cmp xchg inc std add mov sbb enter mov hlt iret out mov cmp mov jb std xor clc mov adc xor inc rcl or push pop loopne ds mov and orb arpl stos ret xor add xor xchg mov sbbl insl cld pop adc aad popf xor lock adc mov mov shlb nop faddl push jo bound mov sarb stos add xchg popf mov (bad) jo cmp or sbb shrb sbb pusha add xchg stos add sbb cmp scas cwtl testb mov mov sbb add lods in mov xor cmp or std push xor dec inc mov addr16 xor sub idivb (bad) pop or aaa cmp dec mov sbb loopne test mov cmp push add or je add out arpl cmp subl lcall add jnp hlt sub xor inc cltd (bad) adc add xor xor mov sub repz aaa jno call or or sub movsb sbb test fs xchg repz ret imul jle sti sbb fldcw jl xchg lcall les shll push cmp jp lods dec or add xorb mov pusha add push sbb ficompl mov xchg mov lahf push out or dec mov call sub clc jb and jae mov sub fildl mov pusha add es jno sub cmp sbb cmpsb sbbb inc divb iret add xchg ret imul hlt pop adc ljmp subl ja push fwait mov mov mov addb sbb pop nop dec jmp adc inc psrlw push cmp cmpb cmp jns ficom or outsb cwtl sahf and clc push stos mov push cmp aam ret out xchg int clc mov (bad) idiv inc add daa jle fcoml aas hlt add jg xor or addb pusha adc repnz mov lea jbe pop xchg shrb xchg xchg cmp jge pushf sub mov fucomip sbb cmp imul jo mov add sbb lock add xchg ret xor cmp test sub fildll insb inc push nop loope fnop sub std iret or xchg sbbl mov mov inc jmp cld jb add and and xorb mov sub push dec add jae pushf push outsb nop (bad) ja cmp cwtl test push shlb xchg sbb or call in mov fadd lock outsb stc (bad) out in add sub mov push (bad) pusha gs rolb (bad) ds dec cmp push xor imul fisubrl cmp leave jns xchg jno add xor mov inc mov (bad) and cli push imul ss pop or daa dec cmpsl xor xchg sub jg out add mov pop adc xor fstl in lea mov outsl lahf and pusha (bad) and dec imul mov (bad) stc push mov xchg sbb or movsb pop jl mov imul mov adc mov jg pop mov push mov or add push (bad) rorl aaa int3 xor cld pusha xor add shrb cmp cs or call nop (bad) out mov orb inc xchg pop mov rcl cli dec xor ret inc sub mov jne xor add and pop mov int3 aaa pop add bound or inc loopne es (bad) nop roll sbbl xchg jns andb nop in aad add movsl push mov mov ss cmp add dec dec sarl pop lods adc pusha js je xor or cmp clc (bad) cmp (bad) add arpl and sub add jle push pop lret ss xor pop and in std push setg (bad) lcall cmp adc hlt push add adc shlb in adc xchg mov sbb mov xor xor in inc adc gs add jb lcall mov inc add fsubrs orb dec push sbb popa dec mov and in data16 push insl test mov mov das popf mov lret lock inc in (bad) sbb mull push sbb or int3 repz sub inc cmp inc js mov adc enter jbe and xchg sbb sub or and paddq pusha dec pop je movsb loopne and or pop mov (bad) xchg icebp loope fs cwtl cmc ss dec pop push mov fmul or pusha jno and or mov add xor mov into fisttpll nop mov stos insl aaa adcl cmp std pop fcmovne push sbb insb in mov ror (bad) inc insl sub dec push mov jecxz lods or fwait add cwtl sbb sub mov popa xchg push btr mov xor pop mov fdivrs lock mov lods add or imul rep push scas and jmp add inc dec nop inc pop cli push sbb jecxz and and fbld fstps adc push rcl lcall movsb dec sub inc xchg test inc sub enter cmc jae jb mov jne mov and mov adc pop or inc add pusha pop add xor je adc (bad) (bad) adc das fs test sbbl pusha ret je shrb xchg add pop ljmp frstor test adc cld push xor add push xor add xor xchg add ja shrb push cmp and rol cmp jl add outsb xlat lcall lods add adc sbb push pusha or enter inc loopne or das mov lods mov ret jle sbb cwtl add cmp (bad) add leave (bad) sbb sbb int3 dec scas xchg dec push int3 lcall pop shll sbb adc hlt bound push mov dec mov and (bad) and mov jae xor mov mov (bad) and push jecxz or jl aas jns jnp xor jecxz sub mov dec sbb lcall push test sbb loop push out adc add (bad) pop out pop add xor mov add sbb inc ss inc lock and nop hlt push adc loope pop jp add in and test ret aas in inc mov lock in movsb ja out rcrb cmp loope leave adc (bad) nop and ret add mov cmp lds cmp cmp and xor int3 xchg dec andb ror fidivrl cwtl (bad) pop jne pop add je add daa jge (bad) xchg (bad) repz lock inc test jg ret xor and ret pop imul mov push mov add (bad) mov gs mov popa fmull inc mov xchg lret sar fisttp orb les xchg and mov das pop xor or nop add (bad) jne jbe loopne lds sub push aam mov jl or adc add nop mov bound fildl mov movsb mov xor lret adc test pop subl aam jbe roll mov lcall mov out mov es sbb mov mov push pop dec sub add cld mov (bad) cmc jg adc mov shl aaa inc nop cwtl and add repz rcrb shrl arpl loope das mov pop sbb sbb mov bound ret andl ret xor jmp mov nop pop mov or cmp clc call out adc and mov cltd outsl inc adc and fildll push clc repnz jmp rorl push lcall pop xor imul inc bound pushf sub in stos cli pusha mov aas (bad) icebp movsl jne jo cmp add pop mov add and pushf shlb inc xchg mov es jb fidivl jg pop rolb xor lea or add (bad) jbe sub int sub cmp sarl sub sub add in dec ja inc jno push shlb test outsb xchg xchg bound push and xor test lock dec ret (bad) adc enter inc push sub out add mov push inc add pusha mov dec orl push push mov dec jp xor ljmp push pop ds xchg cmp popf arpl jo inc ret mov and mov and and cli pusha add dec mov rorb and xor cwtl mov pop or ja jae jge nop cmp cltd js xchg and xor mov sub pop dec sbb test inc and mov movsb adc movsb call rorl cmpb mov and movsl rorb mov dec lcall dec pusha rclb xor and repnz test mov dec dec and or out clc aam add or ss test mov and (bad) xchg push scas shrb mov add inc iret push mov jmp test xchg lea int3 inc fbstp mov xor cli mov lock or cmp adc jo dec cli neg adc (bad) sahf sub mov fmulp cli jge fildll push hlt in sti rclb mov xchg mov pop xor data16 in add divb xorl mov mov push dec (bad) lcall dec jmp loop dec mov lods or add icebp inc add stc sbb xchg and sbb add lock cmp sub pusha daa in mov xor stos add aas dec cmpsb imul cmp mov ds jp sub mov ret xor sbb or push xchg cwtl loopne lea clc hlt mov push sahf xor dec adcl sub jecxz gs ja js jae mov pop ss push in cltd push cmp js add ret cmp cmp xchg xor lret cwtl aas mov loope add leave bound int3 mov and xor lahf ja add adc xlat mov sarb sbb sarb xchg aaa js clc add sub mov push ja mov inc sarb xchg fstps sbb das jbe sub jo ljmp push test pusha arpl mov jbe xor mov ret (bad) test pop (bad) pusha mov adc sbb sub sub ja mov adc push pop lret sub stc shlb clc or cmpsb jo jb pop pop cmpsl or sub imul scas shlb add adcl ds insl lds aas out pop mov (bad) sahf insb pop push andb xchg clc xor lahf test xlat adc (bad) fidivrl cmpsl dec dec orb jmp adc jg cmp add inc lds adc lods int3 adc xor rcll inc int test inc or push push jp test xor les inc jno inc sbb rcl (bad) xor xchg movsb xorb mov in out arpl pop test xchg aam jmp sbb lods or sbb rol lahf lcall sub add sub xlat push xchg clc or in xchg aam loopne xor lock pop push loopne inc aad nop sub adc push and loopne hlt fisttp sub pop popf fadds test in push testb js dec lret enter or outsl les jns jb lds cmp xchg out adc in adc mov add inc dec enter add (bad) add test int3 jns inc dec inc enter mov cwtl ret xchg popa xchg data16 daa inc adc pop les cltd shlb je sub pushf in mov and lcall nop add xchg adc push enter fsubrs imul loopne sbb insb and xor in push gs js leave or sbb mov nop les jmp stc xchg je fdivrs add and cmp adc sub xchg adc pusha xor or cmp xor lret mov and ret dec and jo hlt mov sbb mov sbb cmp into mov jle (bad) xor ljmp les test popf in cmp test and or push fsubr int jns xor jl add leave cmpsb in pop xor or movsb xor xor je mov mov lret fucomip stc loopne push iret mov inc sarb out je jp lahf xchg or add sbb shl daa adc out lock ror or jg sti mov (bad) jp pushf test das cltd push sub pop inc lret cli (bad) or dec jge cmp sbb lahf push arpl jae adc pop pop or sub aad xor jl stc sbb add jecxz les cld dec mov iret push sbb es lock xlat imul mov aam cmp fnstsw rcrb fs mov add pusha sub cmp cmp add pop cmp cmpsb (bad) mov cltd xor pop sahf and or cmpsb or push and outsb dec dec pushf push inc in rclb sbb adc sbb mov popf mov ja dec push int3 mov and imul sub into jecxz xchg js sub add fbld pop bound xor rcrl jp dec loopne in mov fcompl das ja jo rcrb or cli adc cwtl (bad) add add push mov and jae andb data16 jnp and lock sub push shll xorb inc sahf nop test rclb inc mov add sbb xchg das lods sub loopne add mov mov daa (bad) xor cmp add (bad) or and into or xor and inc xor jmp sbb pop daa xchg arpl mov xchg aam jmp mov inc push cmpsl sbb cltd or dec adc adc add add ret add jae in inc xrelease fisttp mov (bad) mov sbb xor aad inc sbb shrl fstps ds sbb jp decl ret (bad) jae icebp int3 cmp sarb inc scas xchg aaa push and cmp push sub sub sub out and cmp cmpb clc xor les adc add test mov jle jns sub cld cmp cmp ja and lret sub int sub xor add ss dec loop inc dec leave sti daa or push stos adcb imul add cmpsl imul add enter fadds and loopne jns adc or lea add (bad) xor jle cmp xchg rcr mov inc mov push inc mov stc mov jl add push push mov xchg mov dec cltd mov ror push test mov mov sbb popa (bad) push cwtl ds inc out adc cmp dec dec and and jne loopne mov xchg or xchg in mov sarb int3 loopne movsl add xor les dec ds pop push or mov test lock pop or mov sahf or and inc sub pop xchg pop call push mov call jl popa pop cwtl lock js add out test cmpsl xchg je add adc aad call jge cmp cmpsb jle repnz pop (bad) les clc xlat jae mov add clts ds pop popa enter rolb and mov daa nop push add jge xor cmpl and bndldx mov adc das addr16 mov pop cli unpcklps push xor sbb bound cmc pop sbb add pop lods or cmp sbb inc xor xor push push fbld cwtl sbb lds push jge loop inc add and jo test fsubs sbb cmp push mov add pushl sub mov cmp add dec and cmp cld dec and mov xchg jl das dec stos mov inc insb adc aas (bad) jmp mov jp fwait sub pusha imul and push mov add cmpsl in pop dec or inc sub test sbbl jnp cmp lret ds jns xchg cmc xor jmp fdivr movsb add xor fs pushf jmp sahf and sub or jmp out dec pusha inc add jno add push add fildll test call aam movsb mov (bad) icebp loop pop and sbb and mov xor lea add leave pop xchg adc clc pusha pop fdivrl cmpsl dec insb add js push (bad) dec sub mov pop loopne push stc add jle adc call add arpl pop jne es je dec inc pop push adc dec aam je mov fcmovbe hlt sbb mov leave jae or shrb xor inc cmp inc rorb add aam (bad) jmp jl cmpsb cmp out dec sub pop mov movsb sub sub out mov cmpsb test (bad) mov imull into add xchg shrl cmc sub xor mov loope popa push and or lret sar cmc or stos std push add ds decb or xchg push sbb jns pop mov ret fbstp cmpb fwait xchg icebp and ror hlt les xor test dec test xor or leave repz cmp ret cmp add stos sarb push and dec sub mov add inc jl dec mov push sbb inc hlt pop add (bad) xor gs mov dec shll xor daa lcall mov mov daa fisttpll rclb shlb jp mov out jo,pt popf movsl cld or sbb cmp jnp mov xchg xchg std jg (bad) dec repnz xor mov movsb and test mov and loopne fs xor and mov fadd dec aaa adc in xor int3 mov (bad) mov sub cmp test pusha sbb int3 cld enter push shl xor test xchg call loopne mov push sbb outsb lds dec mov add add fwait mov rcrl xor mov mov in xchg bound add push ret fldt movsl xchg inc cmp mov imul jecxz add pop into adc add add dec or cmp mov xor cmpsb and orb adc ds shufps andl aam push aas lahf (bad) or or add jmp frstor cmp mov adc dec test pop shlb push adc add push sbb lcall cwtl movsl loopne adc (bad) sbbb pusha mov and xchg sarb push lods cmpsb xlat adc sahf testl in xor sahf movsl hlt sbb test out adc das mov mov lds push fsts push mov add negl mov lods repz sub adc sahf add ja cmp pop add adc insb movsl adc mov mov dec xor xor fbstp sub in xor (bad) popf mov push cmpsl lods lret pop lock xchg adc adc in arpl add add aas sbb mov push testb sbb add ret dec push daa hlt cmpsb pushf sub dec adc dec adc push inc jo mov loop mov int insl or fwait idivl adc pop sbb loopne xchg adc or cmp int jno sahf fistp mov ret lods mov sbb rolb testb pop mov xchg call pop jmp lods add add in nop add (bad) cmp adc add dec mov movsl dec sub test push jo (bad) and dec loopne push nop cld nop add dec add and xor ret push push fcomps xor and xorb sbb addb push icebp movb (bad) stos rolb movsb xor cmp push lretw aad inc movsb push jo add xor out adc cmc (bad) movsb add push xchg sahf inc in xor mov loope adc push xor and pop add sub add pop or hlt mov ret add mov lds and xor fstps pop movsl nop xor scas dec arpl add jns shl cwtl jmp js sbb sar inc mov xor dec lds dec cld imul jno sbb test pop movsl out or nop push sub jmp (bad) mov adc hlt sbb addl and and into xor outsb or in lea jo ja mov ret les adc pop and mov jno add or mov and jmp bound repz push clc mov lcall ret xchg rcrb mov adc xor pop mov fstl dec aaa fidiv orl dec mov and in and mov xor and (bad) cmpsb sub sbb dec dec insb and test cwtl add push mov movsb sbb and add pop or jmp mov xor mov in add pushl push cwtl fisttpll cmpsl sub jno or mov xchg scas xor or ror xchg aad sahf add add ret mov outsl mov shrb mov adc inc push lret fs pop xchg cwtl add bound mov jno mov cmpsb add fwait lcall dec icebp push loopne jge pusha in leave mov test sub xor inc or lods sub sbb aaa call jns xor add or or or sub sub jl mov pop pop add rcrb mov fsubrl mov and dec pop xor push adcb sbb movsb xor shrb mov jl push das int mov enter imul popf ret fsub sub mov xorl mov sbb xor (bad) or (bad) sbb sbb pop loop bound lcall adc mov xor adc sahf mov sub cmp lods neg jo mov ds fcmovnb mov les mov in pop gs sub lds inc mov xor sub and lldt mov mov nop fldl clc sub xchg nop sub in daa sbb add jo xor imul mov adc js sub lret mov test adc sbb pusha pop addb lea lock xor pusha jno mov xor dec push inc dec and clc cmpsb movsb add imulb add sub scas mov int3 dec hlt (bad) add test adc fwait movsb xor pusha (bad) popa add sbb cmp add inc test dec mov ret repz and push test cli cld pop cwtl cmp adc mov pop push add push mov pop pop subl add lods jmp cmp (bad) jns push fisub nop inc (bad) mov aas dec aam sub xchg in and add (bad) mov hlt add out into jl mov dec pushf add pop push sahf (bad) aas cmp jnp add xchg mov arpl sarl mov les xchg mov push xchg sub xchg out scas sbb popf fiaddl inc pop jnp add sub xchg lret add xor insl int sub pop xlat mov add xor das and and loop leave sub clc add je sub out lock lret adc fwait and inc pusha add sbb sub cltd cmp sub push dec les dec inc fsubs jae push lods ret cmp mov rorb inc dec dec pushf adc divb add adc add jno int3 sub mov mov dec mov (bad) pop sbb mov or xor imul lret push mov stos mov mov adc icebp movsb and jno mov pop movsb addb addr16 clc jb sbb dec adc mov sbb out mov mov push (bad) inc pop dec inc push ds mov je mov mov xchg mov or lea mov inc mov add cmpsb mov xor das or or mov std ds lret cwtl repnz mov cmpsl lock mov (bad) mov inc inc mov cmp das (bad) arpl add cmp sbb sub (bad) fnstsw jge pop fidivl mov hlt push les enter push xchg jg insb dec mov add sub and mov or sahf cmp xchg mov or or pop imul rolb xor mov inc push rol rcrb aaa test jge mov js sahf lea pop and pop push lods adc js sbb push adc push cmp xor fadds push xchg hlt (bad) sahf imul scas in mov and inc les fstps pop les lds pushf add mov imul in dec mov lods xchg sahf sete mov nop add sub sbb adc mov xor and andb dec out mov int3 jl adc xchg sar or pop cmp cwtl push rol sub movsl into xchg les xor or and test xor cmp scas nop ds adc fcoml xor sub pop rclb cwtl push or fwait call outsb jmp pop sahf les (bad) sbb (bad) inc xor jecxz cmpsl enter out sbbb mov mov daa movsl cmp jo xor stc loopne pop xor jne arpl push push xor movsb jmp hlt xchg (bad) xor jl mov inc dec mov adc mov add dec lds push push sub loop addb repnz add xor dec mov imul xchg nop jmp sbb cmc pop dec push sti or cltd push jp push add enter inc xchg (bad) pop jns in or inc ficomp or sub pop movsb les add mov mov xchg test imul cwtl dec stos xchg (bad) imul xor (bad) repnz outsb lret mov call test ret repnz test js pusha scas dec or fnstcw jmp stos push les aam mov clc inc lcall in cmpsl test dec pop sbb and adcb pusha pop add sarb mov or lea or xor test and lods cmpsb xor and xchg adc jl (bad) fadd jp xchg mov and xchg popf imul scas add sbb cwtl mov adc xchg fnsave hlt cmpsb js push add xor push xor aad sbb and test xor add icebp push (bad) sbb sbb in stos pop int3 mov pusha dec lock (bad) add lds pushf cltd pop rcrb jb dec push negb adc ljmp mov push (bad) mov push pop js pop test (bad) mov adc popa dec jbe sub pop lods and or rcrl in inc insb rcl and xor pop mov xchg out mov push cmp push cwtl mov mov pop adc inc (bad) loopne mov add push inc adc cmpl das push xchg or rorb arpl pusha cwtl in xchg or pop scas or icebp and and or cmp aas ss clc inc push pop and mov mov lahf out pop mov pushf in pop xor push push ds add std xor shrl push fs cmp loope rcrb xor fisub xor lods fcoms test pop or enter pop pop clc enter rclb leave lods sarb jg (bad) xor mov or jg rcrb fsubrs fsubrs sub das jo mov adc dec pushf push out push cltd inc or loop dec mov loopne movsl enter test mov and pop movsb sbb sub gs sbb sub mov jo mov xchg and inc test (bad) dec push test repz lock test insb jo xor (bad) cli test mov jb int fcompl sbb mov adc xchg xchg xor or fisttpll es addr16 pop cmp lret movsl (bad) pop jl push and adc or loopne dec test stos mov das test cmp and sti jae nop add inc lea dec sub mov in cmp add lahf mov call sub mov add int3 or and flds test testb movsb add lea adc dec push sbb roll ljmp xor divl stos movsb rolb push or inc sbb cmp mov sarb ds mov mov cmp push pop jecxz daa xchg mov gs (bad) out add sahf les or pusha mov pop pushf pop pop outsl test cwtl xorb pop pop cmpsl movsb out fiadd (bad) xchg xchg mov aaa imul imul and sub adc xor inc fisttpll sahf adc mov daa aam out sub js ss mov sub xchg inc pop sahf add adc nop mov aaa add addr16 mov xchg and negb sahf hlt cmp pop cmpsb cli xchg ds xor pushf sbb mov mov xchg add nop roll add js push addl nop or and adc nop jbe popf pop out adc inc xchg sti outsl imul pop rclb adc mov adc popf add in pop mov insl mov xorb xor jo aaa sub inc ret jmp xor gs pusha shlb dec in js lods mov scas xchg fcmovne in add add sbbb add xchg imul lods sub (bad) enter rcll (bad) cmp dec imul xor daa dec adc pop sub les push jo lods iret sub stc (bad) add mov cmpsb test add daa or add or cmp pop inc pushf or pop hlt sbb addl fnstenv and xchg and lods cmpsb cmp jl test xchg sub (bad) das cmp cwtl jmp xor cwtl pop mov cmp adc jmp inc push das or pop addb js push xorb nop mov out sub and sahf rolb mov in insb fldcw xlat scas add lret shrl cmpsb pushf sub push xor push ja push (bad) jmp add hlt push nop mov fcoml mov sbb cmp mov (bad) clc adc add jp and push or inc clc rclb push inc and lea pushl jl (bad) and popa inc pop dec das adc inc and mov mov (bad) and out dec xchg fcompl mov test fsubs enter cmp int3 add clc int3 adc pop add and out inc clc add hlt push dec test mov add sar or les cmpsb (bad) mov aas pop sahf push rcll mov and and mov (bad) icebp (bad) and cmc lahf cmp lods add enter iret call xor and insb pop mov push pop pop push xor add xor xor mov repnz lods flds dec xchg adc mov push movb nop int3 add adc idivb jge and sub scas sub pop mov xchg mov sahf sbb test test fstps inc gs in ret cld add push into mov add sub pop adc sub xlat xchg test (bad) fsubs mov cmp jl mov push add movl mov mov xor cmp mov fild sbb mov sub jp cs dec mov icebp movsl push fld jb nop sbb push hlt cmpb cmp fdivrs mov or nop jl sub fsubs leave inc push ret dec mov je inc xor les divb add jmp mov pop mov add sbb mov in push dec pop or ja int3 or push (bad) mov hlt adc sbb leave lods into adc ja daa dec inc add mov add out cmp add jge add xchg pop sbb imul jmp fnstenv mov xor popf sbbl sbb xor test sbb hlt icebp das lcall mov cwtl or jnp push mov ss and and add lds and in rcrb xlat shrd push in pop inc adc xchg in xchg mov orb insb cltd cli pop insb or sub sbb mov rclb mov jb xchg les inc mov test inc movsl mov ja xchg push inc adc fsubl sahf xchg mov lahf nop or minps cmp rcl pop adc and sub or mov pusha in outsb sbb test add and adc lea outsb into sub movsl sbb and lock pushf jne jbe cmp add push fwait sbb cmp aaa mov das sbb adc lods add xor pop inc enter push push sbb cmp ret adc fs lret and pop fyl2xp1 xchg mov mov and sbb test pop orb sbb adc ss add in xor sahf (bad) dec add (bad) or pop mov movsb call flds sub mov daa or sub pusha and hlt cmpsl enter notl daa fsts xor mov jmp cmp stos hlt mov pop adcb dec mov sub (bad) js cmp orl pusha popa aas nop shrb in pushf xchg inc sub add lcall insb or sub nop mov les test or and add sbb add sbb cmp cmp out enter xor out cltd shlb push cmpsl ljmp cmp xchg jo mov mov (bad) push mov or cmp pop inc or aad clc add xor int3 add adc hlt aaa je mov repz sbb sar mov dec add (bad) ja ja popa (bad) sub out outsb adc pushf jb mov add into fcompl shrb in push push (bad) loopne loope add mov subl or call mov sti and in or pop mov sub mov roll push cmp mov sub jnp add repz push mov lcall xchg xchg lods rorb dec les push std testl xchg mov xor mov pop sub xor notb mov test or (bad) sbb sahf adc dec sub test cmp add cmp sub xor decb or add push sbb cmp movntps mov dec ficom je mov cmp add xor int3 cmp push outsb sub jmp imul ja das pop push jbe adc sub xor lret jge cmp jg pop jb clc sub jbe or movsb dec jge add notb xor imul sub add push xor sub aaa sbbb inc jl xchg js cltd cmp ss xchg sbb inc jb pop clc adc cmp sub jb in es test adc cmp jbe push adc or xchg je push sub adc das sub dec sbb push or cmp lea push sar or and scas in fwait adc sbbb lret pop add out decb xor xor cmp xrstors push sbb (bad) mov test aad icebp jne add sub je scas xor jl add mov (bad) cmpsl sbb push inc add ljmp sysenter jp popa push lea mov lock add jae int3 sbb dec push add mov test sub jle add xchg mov or or and add inc or sarb xchg mov ljmp not adc add or cmp xadd sbb iret subb pop rorb lods faddl cmp adc add adc test mov adc insl push dec inc (bad) add mov rclb es or sub sub rclb cltd shrb push mov outsb mov into lods out xchg adc test inc lds and push jns iret sub push cld push out rorb loop add pop loop in pop pop sbb jo push adcl daa cmp and and nop cmp orb or add movsb mov add adc push cmp push sub xchg mov pop scas cmp and jge sub insb (bad) xor adc push push and (bad) jg gs (bad) xor cmp jo jp mov add add xlat (bad) aaa jno and mov mov adc cmc sti and jo clc aaa icebp jno or sbb xchg sub add sub (bad) sub js xor pusha ss in pop jle popa jmp iret adcb cli rorb jg (bad) mov xor cli mov sarb loope xor subl push or (bad) add xlat orb ja idivb jge add pinsrw cli outsl pop lea inc fsts addl jl add enter mov enter push push xor or or not sub jmp mov mov lock xor rcl fldlg2 xchg cmp and cmpl sbb (bad) jmp les rclb sbb xor test xor jno (bad) push mov insb dec nop adc (bad) mov lock fiaddl lret inc jg xchg daa and xor push add sbb adc lea pop push push hlt rol xorb pushf mov faddl and sbb jp push cmp or int3 jp cli lods rolb enter cmp mov cld cmpl stos inc lock and mov adc fdivrl xchg int xor dec pop lock sub addr16 add push fdivr ret hlt out jns and jmp adc nop cmp jno loopne hlt inc mov fiadd leave lock in int3 adc js iret sbb or add fadds pop loope pop jl inc mov dec xchg addb or divb cmp clc push clc insb add sar iret dec cmp cmc (bad) mov cwtl mov xchg ret arpl sbb cld fadds loope sub add call mov or xor lods adc sbbb adc fs xorl sub leave mov in jge dec mov test fisub (bad) icebp pop xlat and lret mov jb mov icebp add test and xor xlat and idivb je and repz aaa and or and push mov cltd adc push add imul mov mov loop jne movsb int3 inc jno mov ja push lods inc or jne pushf add movl mov mov adc adc jnp pop inc je mov orb mov ret sbb push jne (bad) mov gs adc push adc (bad) mov stc repnz sub and inc (bad) and mov movsb movsb xchg add add loopne mov ss sbb sarl pop mov push mov (bad) and push or inc enter into nop inc push fwait jo stc adc pop mov add mov inc sbb cmp push mov rolb mov fadds dec scas push je or pop push fs and pop data16 pop inc and aas pop mov into inc neg dec sub dec mov mov insb push adc addl pusha adc sbb lcall lock movsb les xor sbb jg mov adc test inc int3 xchg movsb adc int mov data16 lret test adc inc fwait or arpl pop fbstp mov fildl add (bad) and mov test pop jnp adc push or out or test pop mov inc add shlb notb cs in add pop fs mov xchg (bad) pop mov sbb ss sub mov pop (bad) jbe xor notb mov cltd add mov std mov lret loopne inc xorb and mov cmp addr16 pop jge mov inc frstpm(287 adc add mov icebp mov jno,pt test fldenv js or mov hlt add (bad) (bad) dec mov or ds mov fmull dec inc clc test imulb call fildll sub xchg cmp sbb (bad) cmpsb and adc mov jns int3 test mov add sub push dec xor jle inc xor cmc pusha jns adc cmp aam or bound nop push sub icebp mov mov mov leave inc xchg adc les mov adc add int3 push jns add sbb repnz adc adc pop add mov (bad) mov subl and inc mov in orl adc ficom cmp iret push jl cmp adc jne dec sbb inc (bad) mov pop push orl call mov popa loopne rorl and pop es mov daa mov cmp addl imul or loope mov adc (bad) xor nop ljmp adc arpl xchg mov aam sbb mov cmp subl and std sti xor jg (bad) ja mov bound test cmp sbb jo xor dec call lods leave add shlb inc daa xor add in add and loop cmc nop jo (bad) mov adc (bad) leave mov in int3 clc xor jg jno adc jae icebp dec sbb jns push sti and inc test adc cmp dec test push fsubr cld nop xor add int xchg packssdw sbb stc fmul mov outsl pop add js xchg and test in cld out add rclb icebp enter testl shll mov sub push dec roll xchg pop into jg ss cwtl cld loopne (bad) dec add or jb xchg mov (bad) idivl lret test mov jp hlt lret (bad) jg pusha les jge lret mov icebp shrl and mov dec fs add sbb mov push adc or xorl jae arpl js lock sbb and mov cmp ja push js lcall dec mov test mov enter jae pop aaa jg xor mulb and mov pusha fmul dec inc cmp std mov out inc xchg (bad) mov push dec loopne sahf fmul jo sarl dec (bad) mov mov xchg add or popl mov int3 add mov push add cmp add jo roll sub iret xchg push hlt flds cli es (bad) nop enter cwtl hlt push or or rolb adc push mov and gs pop lock sub dec shlb pop xorl or cli ret (bad) fidivr loope dec pop divb and xlat pop xor lock jns fs dec or (bad) cmc xchg add dec movl pusha xlat sti or inc add (bad) divl and jge popa dec sbb gs jl hlt mov inc mov fldl push iret or jno test cmp fimull jnp jno sbb je pushf sbb sub add pop xchg sub sbb std dec repnz or ret xor cmp and sub jns add sub mov push sbb call or mov xor sti movsb shlb dec rcll and adc int3 fst (bad) pushf add das and enter (bad) xor pop cmc addb pop repz pop (bad) jb dec inc test fs test ja lock and lods jl add arpl enter push mov inc scas and and mov push mov cmp movsb arpl add ret or xchg stc or adc pushf xchg mov shlb inc or cmp lret xlat test and push cld mov movsb cmp aam cld mov es or test sub (bad) push add xorb sbb inc in mov lret sub inc jl loope and cld adc cs push movsb push cmp std cmp or arpl movsb (bad) ficomp pop mov les insl leave inc xchg sahf je in dec xlat jae ret jle or mov stos and xor adc mov cld or movsb cmp mov (bad) test test pusha sub dec popa mov cmp sub xchg jmp jge jp leave mov or add mov add mov or aad pusha frndint sub mov loopne add pop jne jnp ror addr16 aas push enter mov test add pop and add dec push subb push push xor sarl dec push inc pop jno mov or sti dec movsb adc add cld adc add xor stc mov add imul insb adc xchg in imul stc cmp mov add add push xchg js add imul cmpsl and outsl mov dec mov or pop (bad) fisubl mov mov push dec jno in mov mov outsl mov sarb mulb or incb sti mov (bad) mov or sbb mov cwtl jp mov xchg sbb jno je (bad) mov adc jle inc sub push out and aas adcl lret lret or lock call test or icebp cmp adc imul std jo or outsl sbb adc pop (bad) incb aam je push jne movsb hlt sbb sub push lcall push inc add or sbbl adc repnz dec mov in and in aas mov mov or inc jnp dec out xor ret adcb es cmp add adc fwait ret call sub jl sarl pavgb adc lret and lods js (bad) xor push test fmuls or mov adc dec sbbl stos (bad) push sbb jl xor or and push sbb (bad) mov in icebp xchg daa add inc call (bad) push dec or sbb pushl sti imul dec dec mov repz lahf loop inc sbb xchg mov hlt adc adc add push addb inc xor loope add mov mov or mov push jl sahf push and aam sub stc jne imulb sub cvttps2pi jae lods adc mov jmp sar adc lds adc or push and xchg jmp mov sub add or test test fldl sub test pop (bad) andb lret int3 call out mov pop push and mov ret mov adc push aam aam push aas in dec bound jnp enter push inc mov int3 inc jl fsubr icebp inc in and gs xchg inc adc ds dec mov fwait cmp mov jnp mov gs dec (bad) or adc xor mov sbb push leave inc add call movsl inc xorl (bad) or xlat pop sbb push push dec (bad) leave cmp mov ret adc lods or loop mov iret sbb (bad) (bad) hlt mov (bad) pushf mov dec (bad) jne test mov sti dec gs mov sub repnz inc nop pop xor rcrb (bad) xrelease js lcall xor xchg add daa in sbb mov lods test enter lock mov xor push adc cwtl push jle mov test (bad) adcb adc push adc mov push mov pop jno daa aam push icebp inc pop pop jnp jl push mov clc inc aad stc (bad) mov xchg les sti xor insb mov jae add mov jbe cmp and adc les or or ret and adc arpl and sub imul add pop movsb cli push pop icebp push mov mov inc mov lods dec cmp repnz cmp nop adc mov fsts and lods mov sti dec dec dec movsl clc leave loop fistpll inc js xchg movsb faddl adc hlt cmp cltd call sti lds sub mov adc in adc dec insl aam jmp pop mov or mov aam dec sub andb in leave cwtl sarb outsl xor adc push icebp xchg fisubrl cli jns fsubl pop mov adc lcall orb imul rorb cli jb,pn cmp sbb lahf sub orl jmp popa push or jl add call mov push dec mov dec mov lret xchg rcr and test hlt lahf imul fisubr sub sbb fs jno inc mov mov xor or inc call adc popa cmp pop xlat sub rolb mov (bad) fidiv ficoml add dec sub lret jns sbb gs jb enter scas jge (bad) sbb std pop cmc icebp insb imul add jae pushf pop mov add bound jecxz and xchg and inc ret stc pop pushf and mov dec xchg rorl (bad) adc andl lcall mov inc int3 ja movsl test dec mov and repnz psubw add ljmp mov mov add pop sbb pushf js test cli sti lods nop fmull iret dec push je sub rol iret pop and mov lahf or or cltd xchg movsb cwtl (bad) inc add push xchg and xchg xor loop test clc or jo dec jne xchg cmp pop mov aaa or inc stos bound jns mov pop adc xchg fnsave (bad) hlt sbb push test push xor add cmp mov pop mov cli sub stos xchg xor cmpsl mov mov adc gs pusha rolb in sbb subb fmull jle out imul add fyl2xp1 lods or jmp fiadd dec adc xchg push and mov mov mov (bad) adc loope imul jbe hlt lret jl inc dec pusha clc ret dec jnp int3 fstl xchg dec xchg jb or pop inc rolb sti or fistl sbb mov hlt hlt adc dec je rclb jge int3 test push push xchg test or in cmp sbbl fistpl mov mov and sub jg test fwait into sbb dec loopne mov (bad) hlt push or icebp rcrl dec xchg aam in and popf std and addl sub adcb hlt test cld push and repz inc and xor hlt test in decb stos loopne enter jl pop adc fmuls ret iret add or mov mov std mov stos test dec nop or mov inc (bad) dec ficoml sub jge xlat daa cmpsl pop inc dec cmp fadds sbb call gs pusha adc decl test fwait mov addr16 xor dec stc (bad) imul inc jge mov int cmp test clc pusha pop mov int into dec enter dec sub enter test inc add xchg dec jo out mov addr16 add sbb enter pop (bad) int3 mulb mov rcl adc aam inc inc adc test cmpsl mov ror fsubs movsl in sbb mov mov fcompl mov mov sarl rorl mov xor or stos jns xchg adc jb add lcall test aam not pop addl xor inc int3 and (bad) outsb jge movsb je outsl adc push and subb (bad) dec in bound daa mov nop push ljmp push adc adc pushf adc pop iret or push xor in or clc or fcoms shll add adc mov scas mov or pusha jbe or xchg hlt in adc adcb enter jge xchg rcll lret aam insb adc adc shlb clc fs pop xchg dec int3 jb shrl pushf adc or or or iret and push test fcoml mov lods inc pop push (bad) repnz jmp pop inc pop bound enter rcll lods fstl xchg repz mov repz xchg jg or add aas xorl test pop cmp inc adc movsb (bad) (bad) mov or (bad) cwtl add rcl mov pop arpl out leave pop dec add lret clc sbb lret or loop jns inc lock mov dec (bad) repz adc mov xor inc clc cltd and fldl shrl mov and mov in fisubr aam pop rclb inc pop or and jmp call pusha or call push rsm sub cmp jge inc push jo repz dec mov popa add daa inc call ret cli adcl pop xchg call hlt push lock and jne enter enter lret mov fnstenv add or push mov mov (bad) cwtl xchg add and mov call ss rolb fsubrp (bad) mov sbb cmpsb movsb test sub sbb inc cli pop sbb or enter sar push xor or add jb mov lods sub orb daa fadd (bad) dec popf and addl mov les pusha mov ret cld add push push std iret xchg add jmp test xor mov neg sbb jo sub xchg lods adc adc dec xchg inc mov loop scas loopne xchg add mov dec cld inc pusha inc mov sub sub inc rorb icebp jae add sar fbld sub pusha mov inc add (bad) jle leave rolb pop fdivs sub add sbb xchg mov mov pop jnp aam mov add rolb lock mov je cld loopne add and dec fnstcw dec pop sbb adc call addb (bad) xchg adc popf ficompl lods push xchg adc and or inc pop inc lods or decl inc pop push pop dec and or inc in mov inc and notb inc cmp pushf mov mov aam cmp adc add into rorb and inc jle mov and adc fisubr cmp rolb dec jns add std stc mov bound pushf add fsubr orb faddl in icebp cmp add fsub mov test sub jb inc adc mov add dec insl leave (bad) loope sbb test dec idivl es adc push adc mov dec in push in or or xchg movsl andl xor push lods or les aam xchg xor add pop in lahf add adc loopne js sbb mov dec popa mov jne and ret fsubs mov inc cmp js xor pop jnp sti adc cmp cmp inc arpl jns sub and dec mov ja js test test cwtl cmpsb inc and sti into jg lcall scas arpl movsb and insb pop enter loopne shrb mov xor add mov add lock pop jl fs sub jg cmc (bad) push hlt es nop xchg xorl fs roll js test lods jbe int add leave lods fs int imul hlt lret jl int3 xor pop mov divb add ret stc xor inc loope add test pop ret (bad) test out stos inc subb add xorl addr16 and popa xchg fcomi int3 mov pop (bad) xor mov cmp mov (bad) dec cmpb fcoms or xor dec or int inc sarl icebp fcoml xchg insl jg aam xchg clc jae (bad) test das fcompl mov mov enter adcb adc jbe insb (bad) mov mov stos and and subb cmp mov mov adc sarb dec (bad) and xor das lock xchg in inc dec push xor lds icebp sub shr add dec jecxz and and xor mov (bad) in data16 mov mov lods clc test psrlq lret mov dec add mov test xorl cld daa jge pop inc dec stos cs les hlt push adc mov insl adc cmp test call stos pushf adc push add clc push dec mov xor xor in mov daa (bad) (bad) mov add popa jle dec scas pop and nop add shlb gs cmpl or and gs adc pop push sar add mov pop pop or jge jo or jo xchg movsl push cmp jge pusha pop dec add or int3 gs lock mov hlt xor imul (bad) push and dec shlb dec add stos fucom mov std inc test push nop dec aam orb daa clc sub mov nop mov in cltd loopne mov dec xchg and xorb sahf and (bad) into daa mov jno sahf enter rclb call inc adc stos cld mov lds aaa dec out inc mov push jp mov and sub pusha insb pop shlb sub mov js dec je and inc sub cwtl add xlat lock adc loopne lcall movsl mov mov mov lret pop loop movsb lock xor je push jns mov pusha sub mov inc push cmp sub or lret mov xchg xor ja mov aam clc (bad) int3 cld dec shlb add std or mov cmp insl dec pop sbb mov dec cmp xchg dec cmp les (bad) addr16 fldl cwtl inc cmp pop pop add sbb lret add sti or jg mov add imul sbb inc adc faddl add enter in sub leave adc lret xor shrl mov arpl mov stos xchg loopne loop out bound pop mov (bad) test cld inc dec xchg mov sub sbb pop out add out in popf movb dec (bad) test cwtl or mov je jo roll mov mov pop test or inc (bad) and mov dec mov sbb negl mov mov add daa pop hlt jb inc iret sbb fbld xlat cmp push (bad) jae call imul add xchg jle daa fs adc enter loope aas movsl aas (bad) fsubs adc fwait or dec (bad) jno sbb lret xchg jg xchg jno jno gs sbb mov mov mov add mov shrb in adc dec loop shrl lods lcall inc mov repz std mov mov dec std call sti lret mov pushf in add insl dec mov fisubrl and push xchg pushf (bad) ja call inc mov dec repnz leave lods (bad) mov aam jns stc mov (bad) shr xchg or add pop (bad) fcoms enter cmp rol pop or incb fcompl js lahf cli cmpsb insb adc add mov cld and xor rcrb int3 add inc cs jae jb jo push sub push xor int sahf sub push (bad) imul cld adc test js and repnz xor cmp leave daa fadd inc std hlt sub or cmp idivb mov sub aam loope daa or sbb sbb sbb push (bad) and pop mov and mov adc jge push mov enter sub les (bad) push push rep nop mov push mov into lcall call in std mov inc divl nop mov adc add mov test xchg jmp add je push pop daa xor insl jbe dec push (bad) mov orb ds jae and mov and rcr dec sbb mov and pop sbb sbb xor jns add mov mov inc adc xor xchg addr16 enter mov mov (bad) xor fs or arpl mov lods or icebp stc or mov repnz jnp and aas rcrb pop mov jne pop xchg inc inc jns pop push dec xchg xor in fisttpll lret lds xchg pushf jecxz cmpsb and xchg (bad) (bad) xor test or mov repz xor dec dec sub add test pop xchg repnz fisubl test pop adc push add adc inc in test mov cmp (bad) imul scas inc adc dec or jno clc fadds sub fsubl in or and daa mov outsl dec test dec or pushf sahf test repnz adc jns fidivrl adc shrb pusha jno push jg bound jns mov sbb adc test xor call cld jg mov popa dec jno mov push xlat push add add inc xchg sub mov out pop add mov xor stos outsl inc adc mov xchg mov push push adc insb popf lods mov iret cltd movsb add fbld fdivs push push push stc and mov cmp loope daa hlt pop (bad) (bad) insl fs les pop and jnp dec sbb hlt aam push aam aas adc cli mov out inc add nop decb test jnp (bad) mov das addl and jns mov icebp mov or fs lret enter jg,pt test and je dec sub dec jns (bad) repnz mov adc add add cwtl or test pop jb rcrb mov fstl adc fcomps lcall inc nop xchg adc es mov or hlt sub dec pop or cmp push insb dec inc (bad) rep push mov jl test and pop fs cs subl mov push clc add cwtl pop insl fisubrl fisub test mov inc je imul idivb pop pushf mov (bad) mov inc add nop inc and movsb (bad) repnz cld pop js nop mov xorb pop rcl nop or pop cmp mov repz sbb sub and pop or xchg cwtl cld data16 test imul decb hlt adc sub inc or cmp sbb xor jnp cmp jns,pt dec cmpsb add inc pusha cmp mov (bad) jne xor dec (bad) adc cmp pop pop mov lods adc inc bound push or fdivl and les cmpsb add mov dec mov aaa sub pop dec loopne xlat stc cmp pop add fs ror or (bad) es je cs xchg sbb pop push xor push test adcl push cmp les and inc xor xor je aaa dec sbb xchg jnp push rorb enter inc mov pop dec and and (bad) mov sbb call scas add orl (bad) cmc and sar sub xor test movsb movsb mov daa mov pop sub pop push test enter push ds enter into sbb test cmp ror adc arpl xchg repnz jp and (bad) lds call sub mov push adc add adc mov push in mov adc mov pop cmp pop in jo mov cmp les push push ds ret push std nop xor inc add test dec out xlat xchg (bad) push inc lods int3 xchg add (bad) repz stos or pop sbb sub hlt in mov mov or ret sbb sbb addb mov sub dec add xor push xor (bad) leave ret pop movsb dec xor enter xchg repz (bad) adc (bad) jno xchg jnp (bad) push les mov rcrl xchg inc in daa mov pop nop (bad) push test ret sbb inc add mov mov std jmp bound cmp cmp sub mov sub sub or jne cmp adc fidivr fdivrl pop add bound and mov push push push imul (bad) jo loope and (bad) pop fs call inc pop enter shll adc xchg ds test fwait (bad) das jo sbb fs aas dec ret inc lock mov xchg roll adc fs lea xchg insb call sub mov jo inc jae daa cmp icebp cwtl rol into js data16 imul adc pop mov cli dec jne sub cmp sbb mov fs jbe (bad) xor xchg addr16 daa sbb dec sub or jl mov fimul test or lret dec xchg cmp cmp xchg or movsb adc and dec push int3 dec mov adc or inc mulb and inc out stos cmp adc jbe les imul clc in xchg add mov mov push enter imul fistpll in inc jne add dec ret ds inc mov push xchg iret mov pop mov fwait mov adc cmp (bad) ljmp jae push mov and in insb int3 pop (bad) mov push cmp and les imul outsl add jle xor jmp mov xor adc sahf inc mov movsl clc mov aam fidivr out xchg cwtl adc in imul int insb test cmpb mov push sub xchg adc hlt js bound enter inc jge arpl stc dec adc pop sub lock fstl jb or cli mov xor push sub pop hlt push mov (bad) dec inc inc pop scas inc add adc dec enter jne repnz or (bad) mov stc cmp out add bound andl ja dec scas xchg test pop add jge inc mov sub out cmp (bad) and dec outsl loopne mov je test mov inc cmp lea and mov inc in in inc sub pop mov pop out jl cs add lret movsl mov pop out mov daa push mov mov mov mov pushf mov cmp ja js and push xorl sub dec adc test dec pushf sub fnstcw enter or test or and jnp cld out mov jg test sahf add push popf int3 inc and xchg push notb mov sub jb push mov mov and dec jo lret inc dec cmp cltd pusha xchg or adc mov sbb pop mov aas xor or dec enter push lds xor cli into mov lods into lods mov jle dec jae loopne and imulb or and test aas push sbbl bound adc add inc cmp cli and fwait or es pop test mov nop or xor jmp mov inc notb mov lods xor adcl xchg idiv inc pop aaa adc clc and xor imul lods fsubs xor mov insl mov cmp adc xor jmp data16 mov sub mov jnp push shlb xor pusha dec and jg mov mov (bad) lock mov xchg jno mov or mov icebp lret inc les pop push or enter mov (bad) and fcomip adc xor insb jno out mov mov inc (bad) je push sub in (bad) xchg xor jnp and lds add arpl inc clc icebp xor rcrl (bad) jb std mov sbb fld adc cs rcl imul js stos and scas movsl pusha sbb xchg fs test mov pushw pop imul aam mov inc mov fimul xchg xchg cld push jne stos push xor (bad) repz in cwtl pop cwtl push rcr (bad) mov mov adc dec lret mov push aaa dec in jnp jns lods insb add pop xchg jb pop add mov jbe pusha mov mov nop testl xor in in movsb enter test mov push ret pop push mov cmp sub stc movb mov cwtl mov in dec (bad) in sub clc cmpb xchg xor mov stc bound bound mov dec push and inc hlt (bad) cmp jl subb stos or or mov (bad) shrl sbb jae push and inc sbb rcrb enter xor sub loope orb inc arpl and pop or mov nop cmp inc xor (bad) hlt inc cli dec dec cwtl xchg xor sub push aas enter repz xor sbb jmp pop outsl mov dec mov or dec js mov mov rcr int3 repnz in mov push pop adc les xor jb xor mov adc fisubr add mov int3 mov add push imul lods or fwait aam adc and sub ja enter mov sti sub xchg or subb dec rcl gs lds hlt test js mov pop mov and xor iret adc in in mov xor sub mov or jmp (bad) push lret fisttp mov sbb loopne aam mov jl hlt fsubl clc cmp jnp mov loopne add test arpl and stc pop push andb push mov ret add adc sbb popa (bad) mov decb lahf jecxz or jl cwtl outsl dec mov xchg fwait cmp movsb lock popf data16 repz test loopne pushf test xor inc insb sub mov inc les pop push clc pop and (bad) (bad) jno sub cmp popl popf cs shlb xorl and sub stos cmp and dec test hlt sub pop push or in pop ret and pop inc insb (bad) mov jl or mov mov movsl mov jns arpl inc mov and add push test adc mov dec xchg shrb dec push test das pushf pushf in jmp adc jl scas lock loope adc dec jno test sub mov mov fwait sub scas push enter clc dec mov or sub and insb in loopne pop test repnz out or shrb adc or and incl das and cwtl push es leave jecxz push mul lea xor sub (bad) bound dec mov jl lret mov xchg mov inc les sub mov pushl call test rorb xor cld insb adc or aad int adc pop or or xchg xchg dec adc push hlt dec xor xor sub adc ret push mov in in add call sub lock add sbb jno mov xor add push sbb inc mov inc sbb jb lret push jmp fisttp nop (bad) test add mov and cmp addb push or pushf adc push xchg sbb sbb adc xor adc sbb pusha inc mov jno sub sbb enter or (bad) adc adc cld add mov and mov leave adcb clc or add mov in aam sub hlt adc aas push adc xlat dec push ffree or sub and and inc adc pop cltd add cmpl ret xor jmp xor inc mov loop or inc in push sbb adc and mov mov sbb in incb xor pop cmp cmp loope scas and push sbb add out mov aad nop or xchg (bad) mov sub nop sbb xor scas sbb inc pusha nop leave arpl push push push outsl sub and jmp adcl mov mov js jp xchg adc mov je mov sub bound cmp push and fcoms repz sub add mov pusha aad add push cwtl clc dec scas push mov (bad) xchg aaa jp mov sti jle ljmp test es xchg (bad) sub outsl movsl mov xor out and push sub cmp daa lods pop pop mov adc dec cmc lahf sbb lods push and lea push and pop pop xchg mov mov pop les addb mov dec cmp jmp rcl (bad) mov out fwait push cmp jmp popa adc or lods in cmp pop sub adc pop jge jae gs in inc je sbb xor push or and fmull push dec inc gs je jo sbb popa dec or outsl fldenv gs push rorl je inc rclb inc int3 cltd add xchg pop lahf sbb cmp (bad) movsl mov xor add enter sub mov dec jae xor sbb sbb pushf jle or and fs push or or add cld and sbbl (bad) jnp jo adc xchg mov dec sbb inc cltd and or test aas add nop and (bad) inc jmp pop mov ss push int or inc mov inc das push and je and and push or mov jo jmp insb fisubr imul pop sahf mov sbb clc ds inc xchg sbb inc mov popa push movsl pop inc mov iret jmp sub or outsb inc popa lcall nop and and enter mov add cmpl or pop sbb sub (bad) pop add or cmpsl sub aad or pop shrl test or test and dec xor outsl sbb es inc inc mov lcall cmovno inc and cli or icebp or jno dec xor (bad) repz inc test loope scas sub fiadd push es xchg or ficomp and jno or test or push pop adc enter adc lret ds and jbe xor inc mov mov push sti adc or pusha pop inc fiaddl ret adc xor mov mov mov mov iret (bad) jmp inc fild sub jp inc shrb mov jle adc inc mov xchg cmpsl stc mov xchg xor cmpsb push and adc faddl push mov push stos or dec mov pop sub mov (bad) xchg mov mov lods sbb enter pop and iret in sub add mov mov addb lret (bad) nop mov jo inc fcmovne (bad) js mov mov mov push ss mov fcomi pop and sub sahf (bad) loopne pop mov (bad) nop ret mov popf repnz add xchg std fdivrl roll (bad) idivb out and repz frstor mov ds ficomp add fbstp lds sub inc sub adc and movsl std inc adc and cmp (bad) sub pop dec mov push aas in cli inc faddl pslld and xor jmp outsl (bad) cmp xchg ror fsubrl mov adc imul cli jae (bad) (bad) mov push add jge (bad) mov mov test aaa daa aam mov jb ds lret js cmpsl and aas add cmp mov pusha (bad) cmpsl dec sub aas testb sbb test xchg (bad) ds enter inc iret loope push in cmp test lret sub jmp (bad) pusha inc mov mov test pop xchg lea and adc jb push mov pop mov mov lods push xor push push roll movsl mov dec adc sbbb xchg inc cli cld mov int xchg cld xchg xchg pop in cmp xchg cld mov aam pop in cmp adc jmp xchg loopne ljmp inc rcrl mov push or cli jg sahf icebp lcall push or in idivl cmpsb lock mov cltd cld stos xchg pop in cmp adc ret jmp mov xchg ja and push cmp (bad) sahf xchg mov add das in lahf ljmp ds pusha ret mov stc inc (bad) adc cmpsb fistpll enter sbb rcr inc rol bound (bad) jno in cmp adc xor jmp dec out jb mov in cmp adc (bad) jmp pop lahf sub pop in sub add cld outsb mov sub and sar inc data16 mov inc std cld push dec loopne mov mov add leave and push mov mov mov mov (bad) xchg pop or xlat dec idiv xor add pslld lds jg jle mov xchg and cld xchg jo inc mov (bad) lea ss in stc mov add xor aas pop dec das and jmp inc jmp dec mov xchg pop in out (bad) dec mov mov lock sahf push pop cli js inc dec daa fcoml add push pop js or inc dec sbb gs cmp js push pop mov hlt push es ret mov and and add fwait and or inc xchg fisub or and and mov test icebp dec adc xor cmp lahf push cs dec and sbb and sub xor daa or push pop or inc sub and xchg xor xchg sub cmpsb js sahf pop lahf push and and test or in sub inc push adc jg sub mov pushf test and and andb test (bad) push push and and cmc adc or push adc and inc fisub adc or inc sub cli pop test and or and inc and insb or das inc inc sub and inc mov and cwtl int3 jg test rclb xor or cmp xor push jns lcall ret and fldenv dec jg sbb sub test dec xor dec xchg sub mov dec insb ret sub les and addl test xchg test pop sub and cmp popf xor movsl or inc dec sbb and scas js cmp sub fcoms lds mov dec mov dec sub pop adc xor or cld dec and adc stc sbb push mov out test or cmp cmpl pop push in jle loope sub cmp jnp mov imul mov (bad) sub into aas adc mov ret hlt pop push lcall xchg jb pusha outsl pop adcb popa call int adc xchg mov inc cmp dec popa ret pop (bad) xor push inc inc sbb enter addb pop or ds add push call std push dec cltd les mov (bad) ss push and pop jae mov lods pop fadds and popa (bad) xor or test or adc adc fcmovu mov enter je (bad) adc push add xorl incl push sbb clc lock clc jmp pop pop mov add mov jnp cmpsb orl add push (bad) aad fmull out push jmp push in aas pop pop lods rol or push push cld dec aaa movsb or dec sbb aad adc pop lea push or pushf jno adc cld jge ret add (bad) xchg fbstp adc inc add mov xor pop leave jno inc and mov pop sub mov pop xchg jmp mov test add mov rcl ffree test cmpsl or mov xor push xchg aas sbb lds add adc rolb push cmp mov js mov ret pop jb add push pop sbb push adc fdiv or adc cmp roll and add or mov cmpsb push mov popf or mov inc in loop cwtl outsl pop cmpl or add dec xchg sahf jle jno pop jnp stos inc cmpsb int test adc imul pop sbb jo imul cmp xor add mov jns cmp and adc cltd outsb fadds mov and fisubl ss (bad) daa xor sbb and and xchg lret adc jns push stos inc inc mov sbb shrb or jns mov loop inc pop sub jnp and add push adc pop movl cld mov sbb mov sub popa sub gs mov add sub xlat xorl addl inc rol sub stos pop nop mov and pushf jle xchg pop sbb cwtl mov aaa or push pop cld mov mov and adc in pop jmp add mov lods repnz stos std lea pusha mov add gs cmp add mov add push add pop or add test loopne mov add dec and pop aaa lret xchg and xchg ficomp or (bad) jbe inc mov in call push mov lahf dec mov aas and sbb and fidiv mov inc fdivrs jbe push call scas xchg cmp pminsw cwtl clc sbb add pop int inc push sbb jmp sbb jl addr16 cmp inc fistpl (bad) dec mov clc lods mov loopne or and out dec sbb insl rcrb in in adc pop aas (bad) movsb xchg test fistpl scas shrl cltd imul fwait add int3 ljmp mov test or mov and andb in ja inc rolb sub sbb call std imul out add adc add push scas fld in add mov cmp push add sbbl fmul xor clc arpl inc cmp (bad) jnp add inc adc add or movsb idivl mov sub or xchg imul add call add push pushf mov fdivp add inc sub xor dec add sbb test call add add iret xchg xor push inc cs and xchg aad xor dec lret call push push push xchg jne addl (bad) mov push add pop add int3 add cmc insl sbb xor leave mov dec or add ret or fdiv daa sub inc sahf jne mov lret testb aaa cmp popa jns cs pop inc xorl jo xor mov pop jecxz mov pop mov popf jg cli sbb sbb in (bad) sahf int movsl mov dec cmpb push pop xor cwtl aad push or jmp dec nop mov repnz mov sbb xorl push xchg cmp adc sti sub push inc outsl mov add pop jle nop mov sub xor call ret (bad) lock cld daa cmpsl roll cmp repnz mov push mov movsb cwtl pop call dec test loopne lret xor xor ss loope inc and ret mov add cli (bad) lret xchg pop push jmp mov orb jne ds mov gs add push pop ljmp ds add jg int add std pop bound cmp je lds ljmp insb push aad push loop fcoms xchg shll sbb inc fnstenv pushf out int3 dec cmp pop cmp roll mov (bad) cmpl aad mov lods push or add xor lock inc test pusha or or call add insl roll jl outsl xor es arpl call or int3 jecxz notb test and mov pop adc xor adc cwtl cwtl adc (bad) push subb sti adc ffreep mov iret lret mov push add mov jle jne aas adc pop loopne push lret in push add sub insl jmp mov rcrl int cmp mov leave push (bad) sbb movsb or adc lret pusha adc or shrb mov add mov js add inc arpl sub dec fdivs (bad) rclb mov lret popf dec mov sbb mov adc repnz jo aaa jae add sbb xor dec cmp outsl fwait test ficompl push xchg inc aad lahf dec cmp imul fmuls sbb daa push insb dec mov xor sbb mov inc jo mov inc sbb loopne fadds aad rclb jl cltd fwait or mov iret stos xor adc or (bad) push lret inc push call push cld mov mov push adc and cwtl dec loop pop sub sbb out push sbb adc sbb adc cmpsb xchg popf mov add sbb ret push inc jns call or pop sub stc out adc repnz xor jbe fadds ss or mov fstpt ds push push clc sub jne cmpb xchg fwait add subl movsb inc jmp push inc lods cli xchg movsb xor pop push sub cmp xor mov xchg int mov adc adc xor lret lds loop test (bad) xor aam rcrb stos mov push cwtl add test cmpl aad xor adc ret xor loope loop (bad) mov int loope imul je lcall pop mov mov movsb repnz fs push or fsts arpl mov cmp popa bound inc sbbl sub mov add adc pushf mov fs loop cs test je dec ret cmp add scas push jo verr loop add mov add je pop pop loope stos sahf mov movsb rcl mov and mov enter pusha cmp loope mov (bad) js push add jno mov loope loop sbb js pusha sbb loopne jo sub cmp mov xor jo idiv adc xchg push or (bad) adc pop cmpsl inc fucomi sub and out adc test int daa jb add repnz sub or je cmp mov add cltd xchg jne rclb pop dec xor pop adcb dec jb dec inc call ret je add sti ss pusha lahf sub sbb shr sub js add mov mov pop stc or xchg call sub sbbl xorl mov cmp ds lods popa cmp pop sub das add sbbb daa mov pop imul fbstp add aad (bad) jne and sub js fsubrs add stos push cmp nop push pop adc dec outsl movl fisubrl addr16 add or or xor call ljmp int3 enter push lea pushf adc lcall xchg inc les pop and insl int3 inc aad and mov movsl xor jge adc mov cld enter jo in inc push sti adc inc or pop andl jo jge jo sub (bad) mov jnp sub fiadd mov jge fisubrl iret imul push add mov call (bad) push sub add iret leave stos sbb push out push sbb add mov cmp or lcall or pop xchg adc pop jmp sbb repnz push cli mov push pusha fwait test cwtl jg pop test mov dec dec or popf pusha nop sub or mov jbe pushf sbb (bad) lock add notl xchg (bad) xor nop xor rcrl or cwtl dec sbb jbe clc aad insb and xor inc in mov sbbl loopne push (bad) loopne mov add enter push mov roll push rcll lods xor (bad) popf or mov lea and inc sub pop dec mov lea das add pop adc xor xchg sbb push cmpsb (bad) mov or nop jl xchg addb test (bad) jecxz pop lea inc adc inc nop add pop sti das adc sbb gs sahf hlt leave mov or cs pop jp das dec add call ret xor loop movsb lock or xabort dec lret insb xchg and inc xchg mov leave loopne pop andl mov jno push in clc popl dec xor nop sbb ds inc mov sbb pop inc add add inc fsubr ja rcrb (bad) js xchg shl stc jne pushf or sbb lock cmp hlt xchg lods mov inc fyl2xp1 test sub dec xor mov cmp stc ja cmpsb jne pushf mov test adc xor mov lock jb jmp sarl pusha xchg add fdivrl and adc push and pop pushf sub aam call push dec xchg sub iret cmp xor hlt or jmp loopne push inc adc sub loop sbb or xchg add test sub dec xor test push push pop je ret xor add inc icebp pop lock mov pop cmovl (bad) icebp sub (bad) inc adc or bound cwtl inc pop mov popa leave cmp xchg fsubs sub jecxz cmp cmp fsubs adc jg std and dec mov sub pop mov dec sbb movsb cmp lea or or (bad) dec mov or xchg cmp xchg ss cmp enter inc push xor lret out add lock jb clc into xor push push cltd pop or cld mov mov mov cwtl lret or dec add fmull or pop lods pop out pop add mov pop add clc fstpt into rorl mov js lret push add and and adc sbb xchg cmp jl test pop popa push dec mov sub sbb mov fadds cmp mov ret cltd roll and js add inc das fchs bound push sbb pop je add call cwtl push fldcw pushf xchg movsb rol push cmp pushf inc adc lods sbb cmp push add aad imul push xor sbb in and popa inc rcrl pop xor lcall orl stos push andb lahf adc test xchg and mov xor and pop cmp fcoms fwait push inc pop xor adc pushf push cwtl fsubrs push ret int aas ljmp insb xbegin loop mov seta mov mov insl xor inc fldenv push or jo mov pop sbb or add cld cltd cmpsb mov jp clc mov pusha in push (bad) jo or (bad) (bad) repz inc sbb sbb or loope call mov dec movsb hlt inc fidivrl pop subl add xor in xor mov sbb sub (bad) sbb push push lods movsb fmul cmp cmp in mov pusha and test inc mov cld (bad) jg xor or lock jno mov xor fistpll test jecxz fadds fstpl (bad) mov (bad) xor or xor jo mov sarb mov and out push xor and xor or in pusha lret lods sub mov sbb test jae mov mov call xor and enter mov cmpsb shlb pop dec xchg int sub xchg add push or lahf push xchg mov cmpsl insb mov (bad) pop mov adc dec mov and js nop push or aaa lea pop mov insl push mov add pop jge add rol mov push hlt pop lret add in pusha sub mov mov sbb test sub sub sbb inc imul shrd adc sub add cmp jo rclb sbb add mov add push push call mov cmc mov prefetch or hlt adc fs sbb sar mov mov dec push push lock sbb sub push hlt push ljmp les inc mov sub lods or fnop stos dec ja push dec mov dec or std fisttpll sub jl addr16 sbb push pop ja fistl cld (bad) cmc cmp test xor sub rorb je mov pop and push les and shrb cmpsb push popa pop wrmsr pusha dec cmp pop xor (bad) fdivs (bad) fstps in bound loope mov ret jmp sbb sub xchg adc stos je inc xor jp outsb pusha rcll fsubs jo cwtl pop ja or int3 dec cmc in dec ret daa mov mov subb mov push inc adc addb pop mov mov andl mov (bad) adc nop add push sbbl push pop sub sub movsl push mov push dec mull cmp mov pop incl dec test jp loopne push andl pop cltd adc inc or sbb push lcall xchg (bad) xchg loop jae or fnstcw mov leave mov orb inc push dec shll pop sub xor jl fwait sub mov xor mov insl cmpsl push xchg (bad) jne xchg cmp pop int das or add jg les dec jno inc push mov lret pop xchg or mov enter add je pop scas sbb lahf add hlt pop inc outsb push call mov or pop mov lret sti fisttpll test (bad) pop dec inc ret push lock sbb (bad) jae (bad) gs sbb call and and loopne pop xor in test out movsl inc push inc lods adc xchg iret pop add xchg rcll das or inc inc mov pushf add inc pop ljmp and test cmp xchg mov and sbb rorl das addl inc pop and scas add xor push je cmp sbb adc add sbb subb inc les xchg adc loop inc xor hlt jo xor dec xor daa out dec lret stc sahf inc pop cmpsl inc mov dec cmp scas push or or (bad) mov enter dec lds js mov dec int3 mov pop lahf jnp sub dec jno sub cmp and sbbl int add mov add (bad) pop pop sub leave push jae pushf mov jnp adc push sub xchg pop lea push lcall cmp repnz mov xor cmp xchg add lock dec mov push sub aaa aam movsl cmp cmp iret sbb mov xor lods lret mov sub xlat mov enter sbbl and push push and xchg inc pop daa rcll je jmp cmpsl dec sbb or and or jae,pt and add dec mov mov stos mov push xor shlb xlat dec dec or sub ret push insb leave or loopne mov dec dec or push pop arpl js mov sahf mov or inc fildl movsb dec in pop repnz lea push test fldt fidiv pop xchg loope je (bad) jns cmp repnz lods mov cs cmc push xor dec jecxz jle mov fs rcll lock xor jmp push mov (bad) out cmp sbb imul jns push shrl xchg inc or pop sbb andl mov pushf decb sub cwtl push test adc xlat xchg cmp mov lcall or std arpl jmp mov sub cmpsl ds sub mov push and lret fwait inc add jg xor mov xchg int adc and fs in popa inc inc or sbb and or jne and test in loopne pop dec push fprem and mov js int gs xor (bad) int and add scas lret mov ljmp dec or les mov movsb or fsubs cmpsb cwtl dec repz loop add movsb sub xchg or loopne jne dec mov cmp in and aad dec pop sbb add sbb pop (bad) dec addr16 ljmp shrl sahf push dec pop int3 mov add cmc arpl jne inc and add dec cmp add jge inc or pop add jne push adc je ljmp in xorb add mov and inc xor push test cmp or aaa sub push nop dec repnz mov mov js test cmp sbb mov cmp into cs or lea mov add push push rolb mov (bad) adc mov nop lods loopne push js aaa xchg aam (bad) fldcw push aam xor jg mov and fsubrl aaa int sbb or sub aam inc test and cmpxchg jmp adc icebp inc mov add fiaddl nop mov push jmp cwtl lods mov popa sub fisttpl push lods dec lock sbb xor test mov add in pusha xor test int3 gs push mov add andb pop add sbb fcmovb out and cmpsl xchg andl mov cltd in add outsl out pop lods cmp cltd (bad) cmp sub or insl test insb daa jo mov ret and scas mov hlt je jg shrb xchg sbb repz fwait jmp inc or popf ss enter cmpsb mov pop sub lcall inc jne sbb push adcl dec dec sbb lret xorb test add gs test xchg mov mov insl jns movsl push icebp xor in mov movsb adc cmp hlt sub addl and (bad) fadds cli iret xchg stc test cmp (bad) xchg pop xor out add mov movsb mov jg xlat nop inc add mov mov enter pop test and test dec push lds sbb and rcll mov add lods jbe jne and clc pusha mov mov pause fcoms ss or scas sbb dec mov add xchg xchg xor shrl lock pop jl,pt (bad) pop sub xorb push js push es inc xchg mov enter roll insb jns xor add sbb addr16 jge cmp nop mov jnp add (bad) into movsb bound dec les in and ret rolb and push xchg add repz insl pop shrl out pusha fwait inc cmc ds xor jo in movsb mov mov negb (bad) loope fmuls push or mov push imul mov clc jl push fnstsw scas xchg pop das or add dec outsl jns dec push and mov sbb sub and xchg adc xor xor rol cmp mov cmp jb outsb push lock aaa xchg mov add insl mov sti dec or sbb cltd data16 sbb sbb dec mov dec insb or and pop sub popa nop push mov push cmp jg das je adcb xor (bad) jne xchg mov das and shrl dec insb sbb and adc rorl sub sub pusha push and jp lcall inc pop inc insl leave xlat push and push sub (bad) add out imul loopne dec or lahf test sub jl and mov dec fisttpl inc lcall cmp mov add bound nop imul mov push xlat add mov mov cwtl sub xchg cld cmp in xor call inc pop xorb lret cmp sbb lcall loope test sbb clc jge adc push lock mov sbb or pushf add fildl jle,pn xchg and sub xchg or js adc add xor enter pop pop jns js xchg sub pop mov dec push pop add sarb sbb xchg mov cmpsb mov mov and popa or add das and and loopne pop mov aaa loopne,pt xorl jl data16 fimull cmp clc fwait lsl iret push push lock mov cmp lock lock jbe jne push and lock sbb jp (bad) add sbbl gs arpl dec push inc in or mov js fs add inc xchg andl dec out into adc jns ja fs pop jl push je pushf cld sbb stc inc dec stos test in adc mov sub ss dec push in sub mov cmpsl sbb rol icebp lods lds je adc cs sub mov iret das add sub (bad) mov cltd add pop jge pop insb sbb (bad) push (bad) out cmp js call or inc add xor cmc in jb lahf enter insl pop mov push fdivr adcl xor movsb int mov mov ja adc rcll or (bad) mov lea jg,pt out mov or dec nop subb xchg bound les xchg lods sbb (bad) mov adc dec jl sub shlb add cmc push dec and cmp shrb das xchg xor aad xchg sahf and adc es or pop mov lods or mov repz aam aam loop bound and dec pop test hlt stos dec sbb mov mov and arpl sbb cltd cmp sbb and stos add or jns movsb push xor or scas add or push hlt cwtl movl adc flds add or loope dec and sub sbb pusha mov jmp in adc mov sub and fldt in add cs in jb sub mov jmp add aam enter push bound test mov popl (bad) adc cmp call in adc xor adc idivl sbb or xor out sbb sbb jbe or and mov inc sbbb and lret xor adc and or sub repnz or mov dec (bad) int3 lcall dec pop inc movsb shr rcrl inc xchg test and addr16 sbb cwtl xor pop ss fcoms xchg add inc cmp nop or inc repnz popf cmpsl push and jb inc sbbb dec pop adc jmp js loope pusha pop shlb push pop jbe mov clc fildl int adc mov mov popa fs xchg fs jo mov enter notb adc pop rol xchg adc cltd cmp mov push pop pop jl adc rcll in push nop fildll jo or mov or insl push sbb cmpsl and mov out jne adc ljmp add bnd sar xor int3 popf add hlt leave je lds push add in rcrl push icebp fstps pusha cwtl nop mov cwtl inc cmc mov prefetchnta add push bound fcomps and dec call jp jne mov dec sar mov inc add or mov mov mov sarb icebp adc add arpl cwtl add ret movsl and and sbb mov cmp push loopne add sahf data16 mov lahf cmpsb ljmp or add jge sbb jae add push leave push pusha pop sbb loopne add add popf xchg mov repz in orb out mov and in sarb popa mov nop or adc push sbb je push xchg lret das nop xchg cmp sbb inc (bad) fmuls mov fs fldt les cli and and add jecxz sub clc sti push push mov add jle clc cmp sub mov push popa icebp inc adc dec xor shll leave add pop enter or pop push and mov or nop mov clc xchg sbb lods push and sbb xchg mov adc mov js sbb loopne or gs pop dec cwtl inc cwtl mov add xor fwait sbb shll dec and or pushf mov mov dec xor cwtl mov data16 pop mov or jl cltd mov xchg mov cmp inc mov add pop xchg es aam arpl add xsha1 cmpsb mov jg out cs ret cltd adc nop push rolb lds sub xorps xchg or jno test pushf jnp movsb fadds pop mov ret pop lahf inc xchg in lock xor pop xchg and push mov dec dec mov adc jo loop jecxz fsts pop push mov push ffreep cltd leave scas movsb sarb pop mov andl mov loop push or jmp push push call nop cwtl inc pop mov pop add mov xor mov xor xor pusha hlt nop push (bad) xor loopne xor pop pop sahf inc push and nop cwtl dec xor xchg cmpsl (bad) xchg js mov adc and (bad) jge xchg test adc or out inc pushf sub mov xor std inc lcall pop pop jae xor loopne clc jno cs sbb push (bad) dec add call mov dec test cwtl ja xor and pop add call push stos or mov lds adc sbb sarb mov or jl imul dec mov xchg sub dec out pop lock in dec jnp in pop add adc repz jp or cmpb and add out mov mov adc dec lret xor in xorl adc xchg cmp cmp inc mov add or and add jns outsb jl aaa faddl enter dec mov mov (bad) cli push outsl pusha iret (bad) hlt out fld1 or sbb sarl dec mov es addr16 add xchg pop inc sub vmread push (bad) (bad) lret lods add mov aad lret add add and dec or or aad je shrb mov roll push adc pusha cmpsl pusha cmp mov rcrb in pop aas add popf (bad) loopne add mov xchg orl lret pop fisub mov int loopne dec int3 mov stos jo cmp or (bad) outsl mov lock push fisttpl mov mov das or mov cmc (bad) mov cs or cmpsb lea cmp imul adc lahf jle xchg ficomp pop fsubrs popa insl pusha xchg cwtl dec xchg jbe adc outsb inc pop xchg mov xchg (bad) repnz sahf and fsubs push mov sub (bad) daa sub lods lds mov std sbb pusha (bad) loopne sub leave subl sbb rolb pop cmp adc jno push enter test inc sbb and push cmp adc pusha mov std stos inc jl leave inc sbb jg rcrl fidivl stos lcall and mov daa sbb pop pop adcb sub dec push subb ds sbb (bad) je jecxz ret xchg add cmp subb add push stc push adc mov xchg jmp xor lock testb add xor pop push sbb pop mov lods mov mov cmpl psadbw scas inc test jmp jg loope push rcrb adc adc sbb test subl sub xlat dec xchg fnstcw cs loopne orb inc inc test lret push mov xchg (bad) fcoml fs push jmp dec rclb test xchg test roll push cltd sbb bound call repnz sahf decb dec insl mov pushf pop mov out leave fisubr inc sbb (bad) push sbb xchg int loopne shrb dec loopne inc add xorl fs call cmp inc aaa (bad) dec add push and leave js dec lock rcrl jns push inc mov push pop dec xor pop mov mov jb inc pusha lahf lods subb in lock xlat mov push jo int mov shrl xchg ljmp push test lcall das inc sbbb push fildll (bad) pop adc jp rcr cmpsb sahf outsl xor push fiadd repnz gs and and mov pop subl shrb pusha push lret int pop sub dec adc add inc lock bound pop roll push push push sbb add shrb das cltd mov clc sub arpl in orl sbb cmp xorb lret clc add or shlb cltd rcll push jne fisub inc data16 and sahf lcall inc (bad) xor mov push xchg xor das or addr16 sbb or and jo dec mov cmpsb inc shlb or xorb loopne push leave or cmp sub int pop adc fcoml adc movsl daa push sbb sub loopne ljmp and cmp add (bad) testb imul cmp fadds sti lcall daa rcll cmp xor clc push les mov cmp push jge pushf pop cwtl outsl jno call dec jge xchg loopne cltd aad mov add cli pushl adc sub lahf dec call pop arpl insb push stos sub sub aam cmp popf sub call xchg sbb cld stc add or js nop and (bad) adc std sbb add bound mov aad pop mov rolb sub enter add xor fs lret xor inc repnz or cmp test mov lret inc cmpsl or lock inc das pop sahf mov dec dec xor pop xchg xor loope cli aas fidivl cwtl jmp mov stc out (bad) leave addr16 mov xchg daa or sub lret fs mov push int xor je push adc popa lret xchg adc enter cmpsl decb popf scas add push or and push xor jecxz lret test mov adc mov fs jbe mov ds insb cmp add xor add cmpsl xor add call rolb xor cwtl inc xor (bad) rcll adc add jmp or insl pop hlt mov sub das pop ja (bad) dec pusha dec push inc and sub test pop stos mov ds pusha (bad) and out (bad) adc add push mov jne or jne negb push aad subb movsl add adc int3 (bad) pop pop jl dec pop (bad) lock ret xor mov lods pushf push or sahf decb sub movl cmp or stos sub sub sub push adc xchg jmp cmp sub or aam pop enter adc fwait test or cld cmp repz mov cmp outsl or pop insb dec pop push addb dec xchg lds (bad) dec enter test add jb pop in or mov insb ret movsl (bad) nop shlb sub pushf cltd test jns xchg mov inc aam sbb rcrb pop sub clc jmp sbb mov adc xchg cld add push in sbbl mov add jne cltd sub popf xlat sub cld push loopne sbb inc hlt mov add cld mov jno pop add jl pop shrl add in add jge mov pop lret jne push mov das jmp xor lret cmp repz sbb xor ljmp iret daa andb sbb push sbbl scas cld mov dec xor sbb add xchg cmp sar pop add fstpl lcall insb or ror mov cs mov subl xor sub stos adc cltd jl xchg push aam push and stos dec sub jo div xlat ret sub mov push sub xchg dec lock movsb or or cmp pop outsl add and mov sbb outsb (bad) and movsl (bad) mulb jge repnz xor xchg popf add scas imul dec dec lea loopne or nop pop scas sbb (bad) je scas jge and lods inc or negl pcmpgtb cmp test xchg jnp clc sbb adc cmpsl mov sub test mov mov mov and lea xor xchg jnp dec xor add and jno sbb cmp xchg jge,pt add jnp mov add jnp loope lock sbb test ds stos or test inc xor sub xchg sub sub and loopne cmpb inc mov mov test adc scas lea sbb xchg xchg ret movsb addr16 test call and and mov test (bad) cmc fldl add sub (bad) loopne jnp sti push mov sub lcall jo push cmc shrd xchg in pop sub test cwtl sub push xchg mov dec psllw addl adc or sub sub cmpsl or hlt and je xor xchg or rolb rclb lods xor imul sbb cmp xchg call xchg es dec cld sbb mov mov and cli sti sub mov inc mov dec jne push push rolb jns push scas push mov jns dec test cmp jl clc and jl push test test dec fs movsb xbegin int pop movsb pushf xor and jle push push enter and add push cmp dec movsl mov and and dec (bad) nop adc sub scas mov jb xchg mov inc jp sub push enter scas rclb cmpsl cmp mov in (bad) js in popa xchg insb js or mov int3 sbb sbb in ret cmpsb push cmp mov push imul and jge enter dec mov push push and sbb xor or dec jle mov xchg add (bad) sti xor or mov add repnz lock movsb test adc jge and adc cwtl fmuls rclb js je and clc fcoml jl hlt cmp mov (bad) lock in add das (bad) jl inc mov jnp and shlb and lock je pop les (bad) or mov xchg inc out xor pop push sar movsb pop or xor or add rorb ljmp andb cmp test loopne clc pop pusha jo in add or pushf xchg aad mov jne xchg dec inc mov jns jo test hlt fs inc push cwtl mov gs scas (bad) shr sarl or mov je xor std lods inc dec cwtl add sbb pop mulb or adc and add fs xchg negl outsl pop xor fmull insb jo std pop rcr adc imul negb sbb clc mov ret into sbb pop mov stos jo,pt loopne fadd mov xchg lret mov mov mov pop adc add popa mov mov pop in push xchg int add call push fcomp pusha call int test add pop jle nop xchg add (bad) xchg cmpl mov int3 mov or repnz dec ja mov jne or fwait cmp xchg adc test mov adc sbb call mov fadd mov and cmpl rolb push xchg add fsubrs cmp inc shl int3 push mov push jo adc test imul out enter arpl xor pop and mov js adc xchg fistp cli es xor push push inc fstl mov xor js sbbl push sub adc inc mov sbb xor std icebp enter dec and fucom imul jno and (bad) mov sub xchg adc cmpsl mov idivb mov test mov pop adcl and or push xor rclb fnop fsub int3 cwtl add hlt pushf aad lret and add popa and pop inc xor outsl mov mov popf dec sub out std andl and imul and sub cli lret xor rclw js sahf jb std xor test mov add (bad) pop test mov repnz js and test push sbb jb add and test mov adc aam mov icebp lods and lahf jb dec test push shrl lock inc mov dec dec adc jl test mov adc and sarb pop cmp push and lret movsb pop push jecxz jb cmp xlat lock ret int3 jmp orb jle mov imul and push cwtl lods push cltd call cmp mov sub mov xor add shlb sbb sub or ret push inc and inc xor sbb rclb (bad) or mov inc dec (bad) loop mov xchg lods inc dec add push test outsl dec in jl xchg aam xor mov enter push or or mov mov clc insl adc test xor (bad) push xor cmp rcll lahf jecxz cwtl or scas test cmc inc fsqrt fsubrl mov xchg sub push add insb mov cmp xor mov cs nop test cmp es adc or shlb lods movsb call adc inc add in pop mov dec jns pop (bad) pop ret leave ja sbb xchg cmp loop mov dec inc or add sbb jbe sbb add addr16 data16 dec loop or lahf fstcw imul test in mov or ljmp sti sarl add jbe sbb ds sarb aam xchg cmp add mov je adc xchg or cltd xchg or sub sub and add dec mov xlat push mov add outsb iret mov mov push test jo push sbb xchg cwtl popa mov add or sbb pmullw dec push loopne add pop insb mov and je sub mov inc call add lods inc push stos test test and aaa sub mov ss add adc dec inc xor xor sbb or inc push mov or push stos cld movsb dec clc call inc nop cmc xor xor xlat or das push test nop shrb add fistp or add inc or in push xorl dec mov push and and xchg ret loopne jl dec xor dec test jnp mov pusha cwtl enter inc xor mov inc mov test xor cmp cwtl adc and adc push in push sub dec xor popf outsb and mov and cmc scas movsb jp es xor daa nop inc jle pop neg (bad) in cmp add push stos push sbb fmull stos adc or (bad) popf (bad) pushf and add imul mov and and and (bad) adc dec adc adc (bad) sahf mov or and inc sub mov and stc pop or pushf call add xor test sub test rcrb sub les dec sub jg loope and or inc xor push mov call dec mov push and add imul cmp sbb xor pop mov sbb sbb cmpsb lock mov dec dec in into xchg movsb and daa nop inc outsb push loopne jl sbb and or adc xchg mov push lds in cwtl and or jb dec mov loopne repnz je pop lods sbb divb inc inc and push cmp push mov nop test mov rolb jmp popl mov sub cld add jmp aam dec mov nop ret xor hlt sub scas sti daa insb lods or in mov cmp mov push mov inc iret xor adc xchg push add sahf popa pop push mov adc push add int3 (bad) mov push adc dec sub inc sub pop je outsb sbb mov stc xor jle push adc and out and pop add movl xchg and mov pop (bad) mov orb fcoms ret stos lock cmp jp fadds jmp mov and dec xor add add pop mov iret cli cs test xchg lahf mov (bad) and adc ret and incl out adc pop sbb or and and lret pop test cmc lcall and test fdivl add inc push mov inc or mov test jo sub out and mov pop test sub out cmp inc bound fs into lods jp or int3 fs insl or dec test addl mov in lcall and inc xchg and (bad) mov std or ljmp mov test inc popa pop xchg ror cli dec inc mov subl imul mov dec add inc or xor dec push push movsb orl sbb mov jl adc add cmp mov imul cmc xlat insb icebp mov jmp xor or sbb push jb lret mov imul jmp aad adc inc pop xchg pop daa bound movsb sub js add mov ret test cmpb loop mov sub nop push loope jb mov mov call rolb popa sub dec add xchg int3 enter cmp in daa andl cwtl adc mov jg pop mov gs cs clc lods sbb popa lods and lods (bad) cmc loopne je data16 aam sbb fistl cmp fs movsb lea or scas sbb and xchg enter push and jb sbb add add adc test push lock adc cmp test mov add and mov std mov sub test jmp rclb dec shll int3 xor and nop add xor fsubrs mov and push mov sub dec hlt int3 mov mov xchg add mov mov inc enter adcl add push cmp aaa js jns clc and sub sbb mov imul push mov jbe pop outsl and and inc es adc in pop xor in push (bad) rorl and cmp sbb add leave repz mov popa xor push pop mov (bad) dec repnz int3 sub inc dec adc add sub pop jb xchg fs cmp sbb enter add add adc imul repz mov sub push cmp push mov xor xchg daa add mov loope int3 xchg pop add sub fcmovnb inc push sub inc das pop enter and adc mov arpl in js test adc rcrb (bad) and movl and dec inc push or cld movsl adc or fiadd lods or add cld rclb int3 inc (bad) pop cs in (bad) xor push aad and inc std dec and cmp push jne push xor mov mov adc pop pop pop cmp jbe loop xchg les popa jnp sub scas pop test jne mov (bad) imul lret sub adc adc test pop dec or sbb add sahf push push in xchg das sbb movsb fnstenv das adc or adc adc mov in fs or lods imull test add push (bad) dec dec add sarl test loop mov outsb cmp das lods test hlt jl add fcomp std mov add outsl add cmc aam in mov jbe outsb pop mov popa mov inc jae fwait movsb test sub cltd faddl jmp call mov insb lods mov add mov aam nop jecxz scas cwtl sub mov repz and (bad) lods mov inc movsb xchg add cmp das pusha in lret icebp mov pusha add add adc adc adc and jo inc test push sub push mov mov je ret or pop fild xchg sti or subl mov jne enter add dec je bound clc test push arpl jp sub mov leave or stc push std sbb sti or shlb fisttpl jmp scas push or out orl ljmp sbb scas sbb inc jge jmp insl cmp test (bad) adc repnz hlt in mov jne int3 and xorl sub or enter adc test ss ret addl cwtl icebp notb idiv add xchg jl inc gs cmp cmp insb xor cwtl aam fcmovnb sub fs lcall adc mov adc ficoml sbb jno,pn cld dec push adc mov call bound push lock decb sub sbb enter test and mov clc mov loopne dec lock daa dec or inc or xchg nop rcl jb sub nop mov pop push sub mov sarb js add (bad) and sub mov inc mov nop movsl adc cmc mov and (bad) pop lock mov ret push roll and or add sub mov cmp in sub mov inc push and xor adc fnstsw add mov dec in andl xchg aas aaa jo xchg aaa adc jnp inc mov and lock (bad) mov pop insb adc repnz adc pop adc popf add cld push inc outsl mov ret xchg mov movsl pusha xchg adc mov xor movlps insb cmp inc or jbe test cmp das xchg test mov xor lea push les xor push adc mov mov mov sbb repz add and mov aas bound push lcall inc add sub lcall les xor sbb xor mov imul inc stos adc ds jle inc xor add sbb xchg dec xor xchg and cmp push movsb popf (bad) je mov test and fsubp sti stos int3 movsb and js xchg sbb pop cmp fs sbb add mov inc imul inc dec test (bad) mov xor and test inc aas jge (bad) adc push ret cmp addr16 cmp mov mov xchg clc mov shl jp jb sbb das mov jo push push and xchg lods sbb ja sbb sub push ret (bad) fdivrs or mov sub sbb insl jge mov add push push enter lret xor mov sbb sbb jbe xchg pop mov inc aaa and inc dec push push lods xor fild jae je sbb mov mov mov inc inc fs stos mov push pop mov cmpsl clc xchg jns cmp movups xor pushf sbb mov je xlat sub inc fmul dec shl sub cmp jae and xor jecxz or inc mov or movsb sbb push mov pop cmp call and pusha jne inc dec adc sub enter or loop adc and add stos fbld lea std inc sub mov repz flds adc enter dec movsb mov test jle js int adcb sub fstpt xchg sbb push sbb mov fsubrl mov and dec xchg lret inc repz ja dec fildl xor mov mov cmp call rolb cmp inc sub loope enter mov add loope ljmp outsb push cmpsb jl mov pop test cltd mov adc cmpsb pop test js psubusb nop js mov out addl int fcom fisttp int3 (bad) mov mov (bad) add pop out subl icebp inc adc std enter scas jno inc dec jmp int3 jns and cmp ret (bad) lahf inc push cltd inc xchg imul jnp mov cwtl or mov adc iret shrb jne sub inc orb fs sub aas add xchg xchg xchg push dec adc (bad) (bad) mov or loopne sub ret adc and jne dec gs push les cmp inc and int out mov mov jne xor nop ror push mov adc sbb push imul add cwtl push outsl insb pusha add mov adc jne aas mov ficompl dec lods cwtl js xchg fistl js mov mov dec pop sub divb pop pop pop int3 xor cwtl aaa jae rcr pushf cmpl cmpsl je add leave andb call add hlt jecxz adc xor jbe incl pushf stos cli and push sti cmp mov adc cmp and loope shrb xlat je insb xchg stos fadds popf fsts add ret inc add jbe out xlat nop or ja lret or loop ds pusha rcll add mov mov clc cmpl out mov sbb inc or xlat push sub dec cld pop push sbb push pop addr16 jne aas mov xchg mov divb adc lds faddp pusha addl xchg jne or push pop mov mov mov das xor mov dec pushf add sbb push pusha inc add mov jecxz or pushf jne cli sub insl and push or and xchg xchg mov xor adc jle inc push data16 xor or lahf nop adc push jne js pusha (bad) and add push loopne mov or fcomps mov push and lcall rcr cmp stc pusha dec stos pop cmp cld jg lock inc push inc bound push rorb cmc insl pop mov sub cltd jno sbb popa pop decl or inc test jne dec lret in adc aad add xchg cmp mov sub push gs mov pop je pop loope rolb add lcall xor xor repnz test clc and adc add js ja adc jne mov imul xor jne xor pushf enter test add pop loopne call int3 scas xor push jge pushf or add mov xchg pop add dec int add cmpsl mov xor loope loope push clc jmp aam or jns jo test jle subb cmp test cmp jne cli push pop nop mov xorl jns add (bad) xchg loop nop hlt and mov dec lret insl mov repnz pushf sub add sub push push jo loop cwtl test pop stc (bad) cld cmpsl mov push in mov push or xchg fs push scas push or add pop jo cmp call dec call adc xorl dec cmp cld cs jo in dec call push add jmp sub shlb fcoml cmp or pop iret adc pushf or sub inc cmpsl int clc add jp jbe mov gs pusha (bad) cmp ja mov and add out les mov test cltd xchg js daa subl dec mov xor pop add lcall adc xor jo push xor int cmpsb dec stos gs out xor jbe mov mov jecxz xor sub or sub inc inc js hlt and push xchg clc nop inc add inc cli cltd adc inc xor cwtl mov mov jle add mov pushf (bad) cmpsl mov faddl aas mov leave test pusha sub imul inc cmp and fdivrs cwtl xchg psrad es aaa sub xchg mov nop jne out and add leave mov sub lock push or test aas push lret lret mov popl push mov call jg add insb and mov inc dec mov sbb xlat ds inc rcll push sbbl test adc rcll inc jg pop mov int xor or mov jns pop push sub sub je jbe clc mov test xchg add add inc mov pop sub ljmp mov call jl leave test in adc les sub les jno movsb mov mov jg scas inc sub test repnz xchg popa push cwtl mov add ds jns inc leave xorl add hlt int popf push daa xor mov jnp sub bound mov adcb dec jmp add xchg negb and push dec xlat fsubl out xchg call subl ds pop mov push imul jne or sarb inc hlt insb stc pop mov test nop xchg sub pop fadds fsubr jnp push mov fdivl add imul insb loopne or mov clc or icebp pop lahf jo add jo aad cltd and fwait enter jnp cmp jne push dec add incl les pop les test repnz dec pop in push leave mov call pusha xchg sbb je clc and or pop push nop ljmp fsubs aam pop in inc bnd cmpsb rcl or sbb in imul add mov je orb aaa push scas add push mov mov aad add test push inc mov sbb add mov pop lcall xchg push test or push mov push loopne lea pop repnz xchg mov dec dec lret data16 sti rolb mov popf lds add add aam and leave adc std add fistpll pop cmp sub pusha xchg lcall lcall lcall ret les sti sarb insb mov lods and ret addb loop fisttpll loope dec dec dec mov sbb cmp add scas sbb pushf aad mov imul xor jo jg dec lahf sub pop loop pushf or mov xor stos adcl add clc inc mov add leave cwtl ja mov add sahf enter repnz outsb push xchg or test mov pop ss loopne rclb xchg in sub dec mov add push and in sub lahf mov cmpb xchg jo jecxz pop adc push aaa icebp add sbb (bad) popa rcll int or cwtl inc ja jl call (bad) sub xchg shlb in push clc loop add sub insb xor cs mov dec aad cmp sub inc enter sub movsb push addb andl test xor jne cmp mov mov lea push sub daa inc mov out mov subl loopne stc add lcall push cltd (bad) mov and cli xor sbb call scas dec (bad) pushf loopne or sub enter clc divb adc sub dec (bad) xchg aad or (bad) loopne inc mov add jo movsb pop sub add lock cmp xor or aam push mov adc or xchg shrl push sub aam dec sbb adc xchg mov rolb jne push lock jne sbb mov notl add insl sbb movsl jle test xchg in mov popf mov jge cmp pop (bad) sub (bad) mov addr16 inc adc inc add mov pop int jle or xor insb rorb test inc and outsb dec xchg sarb add mov js iret fstl in sub sub mov pop push into inc test xchg jecxz jne enter sub add adc int les mov clc cmp dec inc add push fucomi imul int3 adc (bad) cmc scas dec lea and push push addb push jbe stos dec stos or xor ja xchg mov sbb pop loope das xadd aas inc push adcl xchg push cld test cmp aam nop data16 icebp push mov push pop loope lcall daa jge cwtl cmp or loopne push jne sub pop fadds pop ds push jb add inc inc xor pop pop and push sub movsb mov js fdiv or add lock ljmp int or xor loop jnp mov dec mov iret or mov pop or push pusha loop dec ret and xchg clc xor push inc mov out push subl lods pusha movsl (bad) mov push dec lret sub jle mov mov es mov push pop addb (bad) fist adc or test das sbb or je fsubl lret nop out inc ja cmp test dec leave and pushf clc add dec je xchg and cld add xchg mov sbb or adc daa adc mov cmp xchg cwtl stos mov dec pusha (bad) fistl lret cld lahf or and add pop or sbb imul imul adc jnp inc pop std add clc test aam sbb imul jecxz mov jl mov and jecxz,pt add out les mov scas add mov arpl cmp add sbb int3 push clc xor into xor cmp enter nop out rorb rcrb mov out and adc sub arpl add mov push (bad) add pusha lods dec jno add (bad) xor push std sahf loopne mov pusha mov out add mov cmpsl pop xlat push popf arpl jo in clc cmp add std ficomp mov jnp add gs cli das xchg push sti add jg repz xchg cltd adc jo sbb cwtl sbb pop xor jp clc movb imul jo add mov xchg (bad) push shlb ret sbb rcrl pop adc add mov sub adc (bad) popa push mov xchg add (bad) arpl push cmpsl int pusha jge push lds add mov hlt (bad) (bad) or cmp push add pop testb aam sub ljmp jo lret outsb sti mov adc adc lcall mov enter mov xchg mov adc pop out fwait xchg xor ja lahf add jmp scas sbb icebp in roll or xchg std push cmp xchg push gs add mov cli test or call pop pop roll (bad) and pop ficom into cltd fadd inc pop (bad) push lock aas leave incb adc insb les stos xor jnp test stc fidivrl pop int3 lret cltd push push xchg xchg xchg pusha or sub cmpsl adc loopne push je mov test insl shr std bound cs mov movl adc jbe jb lret dec fs xor rolb xchg and jnp ret mov fcompl xchg cwtl sbb test sti popa xchg mov push jno loope insb (bad) dec jge popl pusha sub adc pop mov pusha jo and repnz rorb pusha test test pushf (bad) pop ds adcb cmc in or jl pop fs scas sbb push rcr (bad) movsb arpl adc cmp add jl or sbb cwtl push inc cmp loopne bound cltd adcb cmp mov mov xchg sbb ret xchg add jo je fwait pop add sub or pop stc xorl adc mov andl bound enter add add inc sti add mov sub add jl or mov es adc bound dec mov or stc jl jmp fistl sub inc mov sbb sarb cmpsl push mov adc lds loop xor in jmp cs out mov out andb movsb inc dec push pusha test pop push or call andb popf cmp movsb inc add mov testl add leave mov insb add cli adc mov fwait push or enter es pusha push dec scas sbb mov daa mov rolb dec fs nop test je sbb imul rol loopne lcall in inc sbb add mov stos push call pusha mov clc inc or cwtl js adc mov add insb out in in fistpll sahf jmp fldpi call mov cs fsub and sbb gs test and inc add pop jmp negb pop hlt add insl mov jo fnstenv (bad) mov lock lods iret inc or xor and idivb rol inc repnz inc insl push sub sub lds mov or fldl mov gs fnstcw movsb pop js aas outsl push jl xorps mov int push cwtl inc imul adc roll inc sbb inc adc (bad) ljmp out inc mov hlt lea call pop xorl cmp add rcrb push mov cmp add stc pop (bad) cmp sbb test adc stc cwtl fdivl adc and stos mov bound cmp hlt mov mov or popa aaa mov out std jo not test test fcomps fsubrl sbb pop ja loope and mov mov jb lret or mov popl and (bad) repnz mov mov jle pop add mov mov aaa mov sub sysexit je test adc aas sarb and lods add sbb mov mov or test cmp outsb (bad) addr16 jmp (bad) jno sbb add js out popf daa outsb mov add or (bad) idivb push xlat xorb js sbb xor and add inc inc pushf and aad movsl cmp inc add xchg data16 sahf scas add pop lds xchg xor jo cmp cwtl dec jg sbb add ret js pop and outsb sti mov repnz decl sbb (bad) pop mov mov or dec push arpl push aam inc scas cli dec pop add in int stos in add vmwrite xchg jg test (bad) imul xor arpl dec fiadd sbb es andb out lds pusha sbb call cmp fstp mov cmp test dec loop dec imulb xchg pusha dec mov inc inc loopne scas sbb xchg sub cmp xchg and movl dec sbb sub loope fsubrs push in pop push jl mov outsl mov push scas xor orb inc jo cmc add push insb mov dec addr16 mov rolb aam incb int pop mov xchg stos add jnp fs fnsave sbb cmc mov arpl je sbb xchg add sbb sbb adc mov push lock inc xchg inc (bad) not jo gs (bad) call incl mov js and fistp adc inc out cmp add push cmp out xchg inc add cs sbb js lcall mov gs xchg xchg pusha mov push lcall adc leave inc sbb jo add push cmp sbb movl add or xchg call mov and movsb clc test mov loope sbb out pop out jbe aaa mov lahf gs sbb icebp fcoml or xchg out dec pop sbb mov in nop cld push xor sub ficompl test and scas pusha xor or xor mov cmp movl adc div or mov xchg movsb add andl push add sub cld mov mov xchg sbbb je mov lret and pop hlt inc inc xchg pop dec fsubl xchg xchg dec shrl cmp nop mov pop sub xor icebp int xchg fadds pop xlat jle dec push sub sbb fidiv dec (bad) dec jne dec gs push out out dec enter sub mov xchg and lods cltd xor xor push or xor gs (bad) cmp loopne cmc sti mov xchg gs (bad) or xlat hlt jb dec in add mov sbb jmp (bad) aam mov insl and dec lods jmp es add and add repz pusha ds inc stos jl mov xor hlt and sbb add outsl div loop bound repz pop cld repnz mov rcrb into cmp push mov jo dec popf ds mov cmp mov loopne sbb adc cmp fisub or leave cmovae adc daa sbb ss mov inc and pop sbb stos fwait pop add fstp test inc mov stc lock mov add sub aad add enter ss cmp movsb xchg dec mov xor repnz adc rcrb or pop mov popf rcl rclb hlt mov mov add movsb cwtl insl sub addb add mov fwait or fwait add cld (bad) xchg stos add or push cmp pop repz cmp xchg add stos sub test sbb inc in loope mov add enter arpl sbb sub jl fprem test imul dec mov pop mov popf or jo mov lea stos mov fisubl popa stos subb test divl adc mov (bad) es jo insb push xchg fmul mov scas cwtl cmp movswl mov dec xor outsl hlt test mov adc fsubrl add adc not ss lds aaa lock hlt jl ficomp and dec push fadd (bad) inc sub out dec cs mov mov call and popf imul dec out dec test xor jbe andb popa mov arpl popa test iret fimul (bad) xor bound push dec mov jb dec cli std pop pushf outsl jbe mov add pop cmp test psubd lcall sbbb and pop or dec or popf inc jl ret mov repnz xor movd jl mov sub or stc push ss xor or test nop mov fdivl sub stos imul sub rorb add mov or pop mov mov (bad) push sbb or add xor nop xor stc cmc orl add mov (bad) dec nop and pop and sbb inc cmp adc hlt cmp incl loop pop or cmp fmull test adc test cld inc jg add les insb dec addr16 fiadd xor or mov jns sbb test test sbb iret or jns add pushf mov adc or or mov add mov xchg mov xchg jle lock push mov add es pusha stc bound dec xor outsl pop xor cmp add add push mov je sub cmp mov jle and push ret adc push dec cmp cli inc push xchg cmc lods lock orb or aad cmp add adc test aad negl mov mov movaps je mov or (bad) adc or dec in xchg inc add (bad) sahf dec cvtps2pi clc cmc or pop imul pusha das jmp jle adc or sbb loopne xchg jo roll sbb dec ss add outsb xor cmp popa add cli stc lret iret mov mov icebp xchg (bad) jae call fstl lret enter cli (bad) nop mov fisubr js or aam add (bad) stc aad ja addr16 xorb fsubrp in dec gs push fcompl insb xchg mov mov pop and popa ss insb pusha faddl or lret mov dec outsb addr16 nop test jno inc mov pop xor loopne aad adc or pop imul movsb and push imul sti (bad) pushf js inc jo bound inc xor jbe jp add fisttpll je test adc ficomp clc mov xor ja jmp cmp cmp repnz adc add pop stos mov xchg jmp inc push xlat pusha sbb jl sbb add (bad) xor jno or sbb pop inc sub les (bad) insl push hlt scas push jo xchg adc (bad) adcb pop imull jmp sarl mov loope jecxz int pop and nop cmp test xchg data16 pusha mov shlb cld mov (bad) std in inc pop sahf add add lret xor sub dec cmc add xor leave loope cmp add mov lock push lsl orl jp or fstps aaa test (bad) stc mov add aam pop jns or jle xor repz sti mov xor js rdpmc add adc rcpps mov xor dec jns xor add cmp pushf dec xchg shl repz mov push and test mov pop cld sbb aam test in hlt mov or mov inc cmc jl add not cmp xor inc fist and inc add pop lret stc xchg inc xchg or xchg sub sbb add inc or push test dec repnz or sub hlt sub add int3 push sub mov or sbb add mov in jnp pop hlt (bad) aam fmuls cmp xchg les stc loopne cmp sbb sbb add sub push in (bad) cmc int3 jl cld xor pop mov lcall inc jns stos test call mov mov xchg or inc mov sub adc mov xchg loopne cmp lret enter mov cwtl mov jnp andb sub es test adc ss scas and pop (bad) pop dec pusha xor sub inc jl adc adc pop sbb add mov cmc out test in ljmp dec lods dec aas cmp (bad) popf mov data16 js sub push andb outsl mov cmpsb mov lods dec orb lods jo stos lods xlat enter movsb sbb cmpsb stos pop or arpl je jno adc add ret jns insb mulb rclb cld (bad) xchg rclb imul xchg imul add push (bad) mov adc add cs fild hlt rclb lods xor push inc mov add add addb pushf shrl dec enter cwtl enter lods sti mov add sbb mov shll (bad) aad dec or (bad) push inc pusha adc cmc dec (bad) sbb lds pop pop and (bad) adc pop or addr16 xchg daa insb andl rolb negl mov mov enter rcrb inc jg cmpsb mov dec pop addr16 sub or dec mov andb jmp jmp add sub pop cmp outsl lds inc mov jg mov jne push and movsl mov call inc cmpsl popa cmc scas nop cmp mov mov adc or cmp mov mov or fidiv stc add sbb jno out test lods (bad) in xor bound sbb (bad) int add mov sub dec and mov jns xchg add icebp repnz sbb jno stc jae sbb mov test sub xor sti xor mov pop mov loope out stc cmp sub add shrb and inc cs xchg loopne mov sub cwtl xchg and lock lea jge pop outsl cmp jo jbe sub dec (bad) mov fldcw inc mov sub or mov mov mov and sahf insl xor push sysret or pop sbb shrb in adc subl mov xor fsub rol dec cmpsl mov jno test dec divb sar outsb data16 scas stos daa out jle fidivr push fwait enter adc loopne lods inc test cli inc call cmpsl addr16 ljmp mov fdivl add sahf lods inc cld push addr16 insl dec sar cmp in rcrb add cli mov cmp sarb enter xchg xchg jo sahf inc add xor adc mov scas mov dec pop (bad) fsubs sbb xor out stc nop xor jno push pop xlat stos daa aad orb xchg pusha cmp ret cli (bad) pop inc (bad) repz cld xor popf ds sbb stc pop jns int3 out dec xor adc pop mov hlt mov add and je or mov hlt lock add add (bad) sbb cld mov (bad) ss xchg sbb cmp bnd pop popa hlt nop fnstcw cmp repnz clc cmp popf cmpsl jns pop jbe cmpsl or icebp mov sub jle enter add pop and xor shl sbb add inc mov lret (bad) jno sub add inc stc mov popa data16 mov loope mov mov dec pop fnsave inc sbb call (bad) lret sub adc xor rolb test inc cli js cmc call call ret dec mov loopne lods add sub jae lds test (bad) cltd (bad) aad cmp mov mov outsb je jne pop mov mov inc mov mov cmp adc inc or mov dec nop pushf lret push pushf clc add nop xchg push enter xchg (bad) mov inc sbb xchg and mov gs addb out jnp shll cmp int3 mov inc push enter clc movsl (bad) mov loopne bound enter jl push push imul stos adc pop mov and sub lods nop mov push or mov test push xor dec lods push orl aad mov in stc push add ja movsb adc clc imul fdivrp enter in in sti popa dec mov repnz (bad) inc nop inc mov jp enter mov adc mov fisub push adc rol add and lock add pop bound mov jo les mov stc pusha loopne cmp mov adc mov int add xor xor sar arpl add out sahf pop outsb add addr16 jge fs mov mov ror sbb rcrb ss fsubl mov (bad) leave outsl out and xor dec cld jg popa push dec andb fwait leave push cli pop stc adc (bad) cmpsl push cmc pop dec into insb or cmp (bad) jo popa mov je enter out lock pop mov out (bad) push rorb cld icebp dec notl mov ret mov cwtl call jp mov es sub rorb clc fmul mov add aaa stos (bad) pop jns xor add sub nop lret nop loopne fsubrl leave mov dec icebp adc xor jbe jno push js mov and mov repz xor or imul hlt fsubl cltd mov and pop pop call pusha loop mov or jl stc fdiv out cmovp cli rcrb push pop sbb jp lods bound aaa les and mov int3 roll orl xchg push mov cltd cs roll insb addr16 jb je,pt cmpb push add lods and jl or notb or add js xor mov add out sub shr in cmp fidivrl (bad) fucomi rclb hlt push mov mov and int imul or pusha cmc cmpb stos and inc jecxz dec pop jnp rcrb mov or mov jg cmp and or js xor add (bad) add aam dec inc xor and movsl sbb rcr adc or or lea and add out fdivrp pop sbb rorb loop or std add repz popa mov xchg add jae ds cwtl or jae and mov iret orb imul cmp cmp cmpsl or add daa or rorb ds push and sub int3 pop mov push out and mov movsl push add mov insb cmp push divb add jle push mov mov lods xchg add fsubp nop hlt movsl in or lds mov arpl add sub add fsubs push sbb jecxz xor mov xchg cmpsb add cmp xchg pushf or push sub fildl addr16 sbb or lcall jae sbb lea or cmp xchg jae and xchg sbb mov mov adc xchg adc (bad) sbb inc cmc jnp cwtl cmpsb mov idivb (bad) mov test xchg mov dec xchg push pop push (bad) cmp test adcl sbb pusha xor lea xchg add and fiadd movl mov jg out (bad) repnz add insl xchg push push js inc aam add add outsb enter and ret out xor or fimul add test iret jo inc inc sbb jl add popf orb divl xor enter add mov icebp push lds adcl loopne js rcll cmp and sbb xor (bad) pop sbb cwtl jno sub movsb lret sbbl (bad) pushf data16 lds repz scas cmc push ror ds out pusha xor pop xor (bad) or pop sbb push roll (bad) jmp mov mov mov sub mov fsubs or pop add push in sbb nop push in xor adc xchg sbb inc lods repz add xor fdivr enter pushf sbb dec mov adc sub fldl aad pushf cmp inc outsb divl or sbb hlt xchg add loopne mov test ret xorb push mov inc pop rol cmp bound push mov xor xor movsl jb push out add js pop jge mulb outsb xor enter mov je int3 fadds pusha or aam inc movsl pop into into cli add mov xor out jns fnop xchg pop sub std xchg mov mov outsb sbb jle adcb mov roll jae cwtl pop mov jle clc test pop adc xor cmp icebp daa leave imul sbbb jnp popa das adc dec push hlt pop or add pop inc shr pmaxsw cs test pusha je fcoml pusha xor push dec popf clc or call or stos add mov test mov xor push xchg out mov mov imul cmpb mov pop add leave mov add dec mov mov add push pop pop sbb lret xor xlat or pop fcmovb xchg pushf out adc dec clc add add (bad) popa xchg les icebp cmp add test inc pushf adc add xchg inc mov mov mov dec pusha addr16 dec insl mov or dec xor flds pop pop jb mov popa mov stos bound (bad) mov mov add and int3 nop jmp les mov clc aas (bad) cmp sar out (bad) pusha sbb popa sbb ljmp lret mov adc call lock nopl sub int mov sbb push pop add jg dec aam push pop std inc std adc fsubs divb sahf pop test lods add jl jle pop ficomp shrb lahf pop xchg mov xor push dec jle andl add xchg out enter and out xchg sub or rcl sub test shr xor arpl testl in cmp add addr16 jge add jb adc xor aas pop test fldcw mov mov test idivb outsb push adc sbb mov cltd ljmp inc xchg mov pop loopne js jg dec lcall rol mov jp pop add scas xor cmp mov or or in mov add pop cmp add sbb add mov icebp mov pop or pop sub inc cld or jno incl and arpl dec enter divb call enter push sub test dec fwait lahf sbb cmp dec xor add test xlat mov sbb dec sti add pop dec scas add lock inc sub cwtl lods jle movsl test ret and add out fmull lret or cmp daa mov sbb mov sbbb and cld add dec lcall rorl js pop out push call inc mul adc dec insl in push imul add push loope or dec mov js enter xor xchg push push mov mov jae leave stos fwait adc mov or mov and loope dec test add or insl mov or mov enter inc mov add or mov xchg sub (bad) dec js test pop movsb pushf xor inc shr ret and and mov xorl mov (bad) cld mov add mov pusha xchg stc outsb pop movsb call sbb test mov and dec repnz roll inc push mov mov sbb stos and mov adc lahf jnp sarl rcrb add mov jno lods pop push xor movsb lock test sbb outsb mov mov adc jae mov push adc rcll or ds mov lds jns jecxz add xor mov add mov sub xchg test rolb sarl or and jb cmp pop addr16 rclb fsubrs lcall cld dec popf movsb lret sub leave mov int3 push call inc (bad) je inc xchg jnp loopne xchg cld mov add jnp cld sbb push add inc add sbb mov adc or dec and push inc ss mov nop cwtl iret pop cltd cwtl movsb mov xor pop xor stos xor int3 mov cmp or mov mov jo (bad) loop clc call inc mov xchg adc mov xchg decl (bad) mov or cmp je lds add cmp inc lret add add xor sbb xchg popa test dec xchg test sbb stos out or loopne (bad) clc dec scas or pop push test xchg xchg and jg mov bound sbb sub push js es or fsubrl cli pusha aam adc cwtl add inc cmpsl cmp lret push pop dec out int3 mov or inc sbb mov nop inc lahf mov mov inc mov out adc mov mov stos or add cmp push sub add dec cmp lcall xor mov adc adc (bad) xor add lcall mov or ds cmovo cmp (bad) push enter cwtl das mov lcall push push ficompl xor andb test dec lods xchg xor loopne inc lcall cmp inc pushf push pop jnp pop mov or sbb adc and test sarl repz aam js xor ffreep icebp mov cwtl shlb add stos push (bad) int3 or or adc jmp cmp stos addr16 adc call lods add mov enter sarb out and (bad) push or into adc inc movb add jae xchg mov push xchg pop mov mov mov or enter sbb push mov mov sub inc sub push nop in test test test mov mov mov add in or js mov fcomps shrb out mov loop sub mov mov loopne (bad) cmp xchg in xchg inc mov push xchg inc pop sbb inc sub lock add inc lcall movsl (bad) jl pusha and jo or jb mov xchg fisttpl inc je leave ds inc popa add push mov fcoms test cmp loopne dec mov push sbb mov cs loopne or lock clc fsubp sub (bad) flds or jl pop popa mov in fwait lcall inc loopne aaa xlat roll fs enter mov cs or imul sub lahf adc cmp inc and movsl add repz test mov inc loopne jg outsb add push arpl sub inc stos add or cs sbb es xor out enter xor in dec adc or xor cwtl and lcall in hlt mov mov pop pop mov es mov cmp add daa mov movsb mov dec or test popf pusha insb cmp and push orb les and aam pop or mov push fdivs pop je dec sbb pop js add das xchg pop (bad) in daa clc push xchg andb and cmpsl xor inc lea faddl push pushf stos (bad) pushf mov mov mov gs add push sbb leave push push loope lods mov xor pop xor stc dec call add ret popl pusha mov pop xor add mov sub aam mov adc cwtl clc sub xor add (bad) shll jae xchg add xchg jl mov orb out (bad) mov or leave clc and adc ffree in cwtl pop xchg cld dec sub xchg (bad) adc je sub pusha fs or mov adc mov xor (bad) call inc lret push add out std and fldl in and stc jmp xor lods pop dec inc fwait sti jno and adc xbegin add imull int in mov cmp faddl jg cld mov add and loop add push aam or mov outsb push insb add (bad) sti in aaa add push xchg data16 dec add addl jle pop pop sub adc aam rcll outsl pushf xor fxam out iret sbb call xchg cltd loope jno addb xor bound js js pop inc mov pop (bad) imul push outsb cmpb mov or mov push xor int3 cltd (bad) sahf mov mov outsl jb mov clc addr16 or popa dec or and fbstp mov stc lock movsb in sub aas jns in add sbb andb inc dec daa adc jo pop (bad) adc inc cmp nop cld inc data16 loopne in shlb pop or clc call imul int3 or ret add adc pop call insl sub insb mov addb (bad) xor int out and icebp lret loopne inc in xor pusha cmp dec icebp insb andl or fstpt jo popa out push leave and popa loopne pusha inc call xor push push rolb icebp shrb mov in cmc jns cmp jno xchg mov insl sbb or nop and sahf push mov aad add leave jae repnz or jb hlt add js jl or push stc je dec dec pusha add fiadd push pusha mov push cmp loope jp push xchg push movl arpl add inc jno out sub aaa xchg mov add inc xchg push insl sub and dec test int3 shrb (bad) sbb jae in xorb test jno,pt push in push sub cmp adc sbb jl and rcll sahf push fidivl unpcklps dec and fdivrs movsb adc sub fisttpll movl in dec adcb arpl dec enter cmp sbb loopne add aaa lock jne test sub jb xchg and add das sub ja sysret mov js mov or les push sbb dec in and inc imul jp insb das dec (bad) aaa sbb in inc lcall sub sahf in lock xor jbe inc idivb adc add xor add mov jno leave mov movsl lahf xor aam cmovnp and dec flds leave divb mov ljmp add add jecxz (bad) dec popa xchg and movsb mov dec pusha xor ljmp jno int3 (bad) xchg rolb sub cmpsl inc sbb xchg pusha mov jmp shrb jl out lahf xor rorb mov gs scas cmpsb sub jo aam cmp inc aas enter dec pop sbb outsl jo repnz cmp aaa lret and cmp mov (bad) dec push popf pusha andb lock or dec mov out mov repnz push jecxz add adc jecxz adcb iret test pusha and add add insb dec cmp jno mov cvtpi2ps xor inc add pusha iret leave mov or sahf push and in push test dec mov cmpsb pop movsb sbb lret fs cmc ja lock cmp or add xchg in add cwtl cld sbb and add cmp add out ret lock xor sub insb xchg movsb mov add add sbb stc int3 stos inc popa jg mov subb sbb aaa mov inc add into jno (bad) dec pusha pop push ljmp jb fcomip and das xchg mov cmp mov nop xor add aam das inc (bad) push andl inc (bad) dec sbb adc mov leave clc loopne add pusha mov jno,pn test and rorl addr16 dec mov clc add mov fcmovu or mov out nop dec sub inc test mov ret lock push jb inc das add enter iret push xchg jl cwtl pusha sahf jno mov mov mov (bad) mov push inc int3 xchg push adc sub ljmp in and pop int3 aad pop add aam stos gs cld movl les mov (bad) loopne cwtl fstpl stos cmp repnz cmp push adc (bad) mov xchg cmp jo aaa mov fs lcall and sbb or adc jg sub sahf cltd adc js adc mov test xor xor add dec fnstenv sbb mov dec sbb xchg fs popa and fs add (bad) std out fisub bound iret mov adc adc pop ret jmp xorb icebp (bad) out jno pop insb add push int stos mov or push decb add lods nop add or cwtl (bad) enter test mov loop xor xchg stc mov add mov incl (bad) js jno incb jbe sbb je hlt in sbb add push sti dec push lock lret popa jecxz mov (bad) jbe stos and add dec leave and mov rorl out aaa and xchg popa bound sbb pusha and and std imull cltd mov xor loopne insb sub mov imul jp lret in add int3 mov mov and add lods add xchg cmovl sahf pop xor and xchg mov sbb mov lcall scas test lock rorb mov ljmp lods call xchg adc in test inc lock mov sbb call or pusha mov add xchg data16 inc mov add pop aad add daa lds nop inc sub cli cld ret dec xchg cmpl icebp inc add pop or fmulp adc inc adc clc dec sbb test and les mov nop add mov data16 add faddl xlat jne cmp lret inc loop jecxz sar jb push add add xor adc roll cmp test movsb fwait inc ficompl sbb mov jno js sub loopne mov mov jno dec adc pop cld mov ja rorb inc and test rclb leave lock add in pop mov sbb mov scas and pusha (bad) jno jp mov iret call push rolb icebp push in inc mov lds inc test outsl lock data16 fcompl push leave inc aas and add cmp inc sbb or add jno jae add mov sbb jl add (bad) out or lock sbb (bad) sti inc fild xchg adc sub push les test dec and inc adc inc push or mov sbbb add enter pop js shrl ss mov fbld add pmulhw aaa jb sub fsubp mov shlb push (bad) icebp pop pop out mov xchg add or sub cmp insl or lock setns jo add in cwtl jg and mov fiadd pop jmp push popf repnz lock or or clc xchg dec add (bad) repnz iret pop lds sub dec repnz jo dec mov or lods incb (bad) test jnp sub leave sub sub in jg xlat in add in shlb aam je inc lds push test pop xor inc nop iret popa adc dec enter mov or nop xor sub add mov sub lods pop push cwtl pop inc adc xchg push scas inc dec dec jl insl push hlt lcall xchg test leave das clc inc add ja cmpsl push mov scas out xlat mov outsb dec js pop gs popf sub daa mov loopne movsl ljmp fcoml insl xchg jo push call test dec jb cmpb loop mov pushf xor std out sahf pushf add (bad) add xchg cs outsl ret sbbl in cld loop cmp test test push dec dec inc add add repnz add sub mov outsl sbb sbb cmp sti add mov sub inc and xchg mov dec mov or mov add mov loopne (bad) popa je lret inc es stos shlb xchg gs imul loopne and popf scas cmpsb jmp aaa rcl xor mov inc lods sbb addr16 add stc push or mov sbbb xchg push push pop lods nop cmp mov mov in cmp mov rcll sbb insb clc and loope and loopne adc ret mov pushf test add jno in xchg pop push fwait sbb push adc movsb call add cmp dec or push pop add adc push imul mov hlt out ret add and sub xchg jmp jmp into or cwtl adc sub movaps cwtl cmp sbb xchg mov test push sbb cmp and jno mov jp icebp lock or repz lock add ds add adc (bad) dec xlat jb add in and (bad) pusha mov lret add pop jns scas pop loopne cmp jecxz jb in xor rcrb sahf push inc add mov leave pop fiaddl lds out enter sbb fsub push sbb xor outsl adc mov mov xchg nop or aas add jno lock sbb lods adc xchg mov and xchg cmp mov xor sbb test jl out loopne add jbe pushf mov js add fsts in xor mov nop sti test insl mov sbbb loope test push push mov out xchg jmp add insb int3 repz adc repz or mov adc insb sub stos add aam les xor mov jno add ret bt xlat add (bad) ss mov adc clc rolb push imul mov ds xchg add incb and mov and fldcw sbb mov pusha fisubr cmpsb pusha cmp push xchg call insb mov add (bad) mov cld push push int3 dec repz fcmovne jl fild pop shll push hlt sbb test ss movb nop and andps rorl cld dec or out fcmovu fnop mov or mov and (bad) loope xor sarb pop adc ss addl leave mov or sbb adcl fwait add dec pushf add xchg lock adc int3 xor xchg push ret daa xchg inc xchg addr16 movsl std pop inc sub repnz fs cltd repz xchg dec mov (bad) sahf sbb mov test rclb xchg aad or sbb or lret int3 sub inc push inc (bad) fwait shrb fsubl outsl ficompl daa pop dec loop rorb dec xor jl or dec cmp cmp inc cmp (bad) sbb stc mov adc push inc or in or repz and and sub xchg mov cmp xchg mov fisttpl shll ret sbb mov mov mov adc dec or sbb dec mov lret enter scas pop repz cmp andb sbb les push sbb add xchg mov xor adc mov (bad) xor xor frstor jae sahf pop inc (bad) addr16 jbe cltd leave pusha movsb imul mov cmp jno ficomp inc and jno jmp and icebp push cmpb mov jl xor leave mov xchg inc cld cmp shrb xor mov js sahf dec rcrl enter gs outsb fxtract add insb add (bad) and or in je add pop mov or gs dec cmp sbb mov xchg imul rolb xchg outsb pop popf (bad) enter fucomp or sbb orb add rclb mov add std mov mov jb or test dec xchg xchg inc movsb push jecxz ss xchg push sub enter pop (bad) lea xor sub aam fucomp cmp je clc fwait cmp xor pusha push add imul jo mov add daa int3 mov adcb in loopne nop mov and cmp lcall mov cmp xor push (bad) cmp cld xchg shl dec mov adc add jl sbb imul imul or xor sbb leave jo ret add ss push call lcall add jo dec and dec aaa nop add lock mov imul aam loopne fdivl cmp mov test and clc ret scas jb push sti pop inc mov push mov loop add (bad) clc xchg jle inc xor cltd jg scas jmp loopne add loope cld dec add and adc cmp idivl cld adc xchg rclb jne adc rclb add cld adc xchg dec notl jo pop clc mov adc dec cmp ss sub mov add insb mov and (bad) sub adc mov xorb lods pop adc jbe xor mov xor push (bad) mov or adc and push shlb add cld adc test (bad) mov and cltd pop xor addr16 adc xor ret and fidivrl rclb inc add xchg fimull add int mov dec (bad) adc clc (bad) hlt (bad) xor mov pop adc xorb call lret pushf cmp mov mov shlb pushf or dec int jne and (bad) add dec sbb or es push sbb pop push add enter push loope mov dec jns adc sbbb clc jecxz adc xor out int3 aas add leave adc mov mov mov dec pusha out cmp cmpb popf lahf ret mov adc push add pop and pusha mov (bad) outsb add dec sbb adc add psubusb jmp rol cmp ljmp cli adcl or or adc call cmp xchg or pop nop iret sbb cmp ret and int3 mov popa mov (bad) imul mov cmp je push dec dec pop mov mov dec std or sbb ret adc ss xor inc xchg add sub ret and pop push xor fwait test outsb mov popf or or push enter call and or mov lret push int3 jb add (bad) jo dec cld and sub sub xor movhlps out and or xor jno in add outsb add and xorl hlt add or insb jnp xchg xchg xchg lods fwait pop or imul frstpm(287 jne addb or aam repz aas cwtl fsubp ja xor or movsl jb and jne movsb pop cmpb pop sahf in rclb add sbb insl outsl loope ss cmp loopne xor and les or and mov push push and dec xorb pop fisubrl sbb hlt shlb add mov sub aam test mov sub or push dec icebp dec xor cs jo aaa xor cmp add push mov xchg sub cld and or xlat pop data16 sub jmp cwtl in int (bad) push add xchg aad adc scas aam and mov mov lock add xorb lds in test xor es xchg es and lock call in or aam aad insb adc mov pop cmpsb iret gs fs ss mov cwtl aaa pop insl loop push enter sbb imul popf lcall add mov rcr jg add fwait stc push mov jns imul xchg mov shll imul (bad) push mov sub pop mov stos add mov push xor (bad) jo jae mov or ljmp add les movsb pop mov add dec pop add and push xor movsb push mov sbb dec je stos mov aam pop mov add lret stc cmp sub mov and mov cmp (bad) xchg lret mov push clc lea mov mov and aad adcb mov mov lret pop mov add sub test cld push cmp das fmull add mov add push ficom bound cmp fadds add or shl (bad) les fisubl fwait jb sub inc notb rol (bad) sbb inc scas aad lea insl push cmp inc and adc adc test inc cmc insb sub adc push xchg sbb cmp sub inc push sub icebp divl or xchg movaps push sbb aam nop inc cmp or sub and and add xchg sti subl lahf pusha mov add sahf push roll aas lret sub ret orb mov test mov xor test dec adc mov add push insb or nop (bad) je xchg addb jns dec sar shrb add and pusha jg cmp (bad) xor push (bad) loope pop repz adcb mov dec xor and int jo add imul sarb (bad) and ljmp das mov setnp pop or pop sbb xor mov push inc loopne stos pusha xchg mov mov js add (bad) test xchg sub pushf ljmp add xlat push add dec fsubl xor inc fwait ret ror add clc mov test ds push xchg xor ret mov add pop mov sub push ret add aas daa adc sub or add xor or pop pop add lock dec mov add fidivrl xor subps xor pop push inc xor nop mov cmp push adc or (bad) and jno mov mov bnd lret fild and ds sub sbb jmp loopne or int and inc adc sub lock ljmp mov and xor add movsl iret (bad) hlt jmp push in psrlq xor inc and and or jae adc flds andb cmp sti test sbb pushf sbb leave ss in movsl mov and add adc add push dec loop push movsb add imulb ljmp pop adc push stos pop sub push aaa add mov inc inc sarb inc shr dec lods int3 add xchg sbb movsb aad nop adc mov (bad) (bad) pusha jbe lahf add nop inc mov jl and xor pop mov mov add insb in (bad) call es xor inc xor leave bound addr16 mov rclb cmp or mov xor push hlt ljmp pop sarl jecxz push pop inc fcompl fwait or mov icebp das add daa pushf add fsubrl add stos cmc in fwait in jns enter fwait inc rolb mov push xor repz jg inc les pop fiaddl mov sbb in push loopne notb and (bad) clc icebp lcall faddl adc add ret push or pop add sbb in call testb adc insb nop cmc decb xchg cld xchg sbb push adc dec js mov xor and and cmp sahf pop xor jle leave mov xchg mov fldl pushf hlt xchg adc les sbb scas aam pop sub call enter add movsb insb test nop adcb cmp cmpb or sbb ljmp xchg cwtl pop clc dec or cmp mov or rcl sbb dec (bad) nop scas jnp mov test (bad) pop imul add jmp mov cld lret jae pushf sti loope outsb adc sub ret cmp mov push cmp call (bad) mov or dec sbb in add sbb ljmp mov add xor rorb xor or cmp mov lcall arpl sub xchg push lahf dec adc clc add rcrl aam rclb test and int3 add flds imul pop popa pop jle mov xor pop push lods movsb xor movb sbb mov lods and loope push mov push ljmp rcr mov f2xm1 sahf pop in and mov xor enter xchg dec imul sti push insb xor xor sarl pop dec jo lods jnp dec sub push ret pop sbb loop sbb and cmpsl jmp jb in jbe add das jg data16 mov cltd ljmp jge xchg repnz daa add cmpsb loopne repz stos dec cmp lret andb in outsb xorl add push add loope loopne sub mov add inc rep rorb add outsl dec addl and psubusw (bad) mov mov dec and jno cltd pop je dec loope adc xchg mov in sarb (bad) popa sbb scas pop sbb add insb add mov out aad add loop mov lods cli test fnstenv dec or mov push push adc add mov icebp mov xchg dec fnstenv or ljmp push rolb push cmp mov repnz sub js insw out repz addl hlt xor ret insl int in dec cmp adc test (bad) xor mov push sbb (bad) enter lret pop or push push (bad) repz xor fcomp push (bad) push adc cmp (bad) cmc sub fldenv je inc ror test addb xchg call inc mov addr16 pop int add ficoml mov cmp cmp xchg dec xor les mov enter jmp hlt inc or aam mov (bad) rcrl fnstenv test sbb and inc push out sbb sub jp xor and hlt sub sbb adc in (bad) enter mov or mov or add mov inc cmp gs cmp xor es cs test xchg pop sbb sub shlb movsb dec xlat mov jg cltd test dec mov leave ret add (bad) fmuls jecxz aas or clc pop or pop cmp or add pop sbb decb loop mov xchg xor xor mov mov rclb scas decl mov fimull xor fs and inc adc mov add cmp sti mov sub int3 pop cs mov loopne (bad) xchg rclb pop ret mov or mov incl xchg sbb out jl and pop cmpsb pop lcall imul pushf call pop xor jo repnz xor inc jecxz je add enter cmpb sub jge inc nop push or sub jne (bad) rclb gs ds sbb jl ljmp pop hlt cmp in xchg mov sarl or pop inc cmp movsb pusha pop std pop int3 jg jo push cltd das popa and xor test or dec loope pusha mov push add fnstcw push fmull inc xor mov or pop adc mov adcb out mov pop add js repnz jl setb rcrb imul (bad) andl inc fs daa test es push mov mov lods and push add pop jno test add cmpsl pushf fsubl test cmc shll sbb sarb add add mov sub push insb mov vpsubusw clc insl jecxz jge mov push add xchg popf sub fdivrl xor andl mov push dec enter movsb fwait cs movsl outsb mov addr16 pop rclb in inc xchg (bad) push pop or cmp sub push add pop (bad) bound xchg pop ret hlt add (bad) hlt sahf lahf subl rcrb fisub cmp mov add mov ss add insb stos in cmp xchg sbb es push mov loopne movsl mov inc mov jns pop mov repnz aaa and mov or adc sbb jno or mov pop adc cwtl push int3 aam or xchg mov int3 and mov add shrl dec add adcb sbb punpcklwd adc leave pushf pop push cmp xchg rcrb and add pop sahf mov shr mov adc cltd sub (bad) fdiv mov loope pop xor mov test jp push or imul negb dec imul sbb dec mov pop cs xor cmp pop pop mov rcrl in pop pop sbb fiaddl iret sbb mov hlt mov cmp xchg mov rolb push xchg loope pushf push push cmpsb fadds aam and mov mov sarb push xchg test repz aam test pusha xchg and sub cs add add sub jns add addr16 cld dec xchg popa cld insl shrb ja pop push out gs pusha add insb and ljmp fcom lahf cwtl aas fucomip add mov repz fldt mov or sti inc push test cs ds shrb dec sbb cld cmp xor out cltd cmpsl xor rcl mov pop loop mov push inc push add movsb repz fistp add jge push rcr sbb icebp fisubrl adc push pop mov cmpsl (bad) imul aas test dec and xchg adc xchg push jmp and push pop fsubrs sti hlt dec inc inc mov fsts add movl cmp or mov imul add push pop pop lds pop add push push rorb pop cmp push enter push add sti popa fistp xchg hlt mov push mov xorb mov clc mul and mov sub jp aas dec iret and push mov (bad) lcall in ret or pop je or adc dec xor xchg jmp leave andb xor call sbb push mov imul clc fmul dec fs enter sbb mov sbb cmp adc cmp sti jae hlt les call std sarl adc (bad) adc pusha int3 ss push mov stc or test mov out mov xor stos sub xorb aaa or cmp sub jp xor rcrl (bad) mov rcrb jns loopne adc xlat popl pushf xorb xor pop mov lret call outsb (bad) ja xor pop repnz loope xchg andb nop nop pop fldl das insb xchg xchg add sub rorl jecxz jg mov dec repz xchg movsb aam js and or xchg les call dec jno lcall js add sub jnp lods mov add (bad) push mov (bad) mov iret and out adc sub push sub lock lea sarb test mov mov jne mov (bad) push xor jno dec cltd cmp xorl jo nop dec addr16 (bad) fistpl insb sbb mov cwtl inc and jecxz mov out push and push xor mov sub xchg pop add add arpl push xor notb inc pusha loopne add cmp neg or rorb movsl xlat xor sbb fcoml add add nop nop clc inc sub add xor pop rorb add adc xchg or mov movsl pop adc adcb xlat push and jge and in xor adc fs dec pop dec movsl iret push xor xor (bad) push out push xor add sahf dec adc rorl test adc xchg test fs inc rcll or mov xchg dec insb push push dec imul insl and clc sbb mov fs jo or inc leave sbb btr push (bad) jns popf scas pop sbb xchg hlt out jmp mov lods aam sub je cmp scas cmp mov mov bound out xor add dec push inc pop adc sub add mov clc adc out xchg fmull mov dec divps fcom bound nop inc lods pop lret xchg or mov mov aam xchg mov sahf push aad clc es imul mov addb loope dec mov ret mov xor or repnz xchg inc lahf (bad) jne xchg js shll and mov sbbl dec popf out jbe enter (bad) adc push dec adc sbbl cs pop and sub cmp nop adc lret sbb or sbb mov stc aam js ja add daa ss mov inc push cli insb push scas leave push leave popa adc or fs add or les jp pusha xlat push or inc mov jno test sti sbb and sbb sub jo pop mov icebp (bad) hlt aam imul repnz dec sub icebp and push jnp sub jo add test (bad) movl cmp push sub js bound push inc pop and or and cmp pop fcomi mov iret and add andl jg mov aas push or xor sbb insb xor cs jmp stc mov cld es dec sbb enter lock jno mov clc pusha lea xor pop and or movsl (bad) pop jne xchg pop fs xor aam icebp iret out outsl push mov std push loopne (bad) jo imul mov test or inc sbb inc fwait xor inc int3 fistl inc cwtl or lcall push lds xor hlt mov mov pop xchg add aad sub and pop test dec push pop out leave adc mov adcb lods stos xchg popf pop sub mov scas push imul cmpsb xor lret add lods dec out cs pop lods add mov push cmp or jp test cmp pop inc or add divl mov (bad) jmp xor mov clc jle jno es ljmp xchg aas mov rolb rorb mov imul cmpsl sub dec xchg add lcall pop ret stos cwtl mov fsubs loope pop and pop inc insb aam out mov lret fcom adcl and or push adc jns xchg test xor aam mov adc adc test mov es mov or or xor movsb and cmc sub fildl dec addr16 cwtl and xchg cs adc xchg or loop and add addl cltd pop shrb mov (bad) icebp nop imul imul cli sbb jmp sub adc adc mov push dec push dec inc ficom sahf mov inc (bad) pop outsb fwait aaa fdivs fistpl xchg sub lods lock push hlt imul sbbl dec repnz popf cmp sub push inc adc sbb cmp sbb dec add dec or dec pop inc mov sub xor cmp sbb out adc dec or fstps jmp pop xor mov daa lret sub jnp movsb cld add cmpl pop pop in jp dec repz xor inc fmull mov xchg xchg movsb mov adc add addl xchg (bad) popa pop xor jno pop sbb mov shlb fadds movsl icebp (bad) gs jne,pn xor mov lock push add push push aam loopne mov ljmp and lods adc push outsl add mov push (bad) lock arpl fstl jbe mov addl mov fmuls fs dec bound shrb add xor jg xor (bad) insb ret je push jb or mov and lock imul rolb mov inc js cltd push shr dec push push xor pop adc pop cwtl cwtl adc sub xor add stc js add and fldcw inc adc dec jl add notl lock add pop cmpsb add imul sti mov jbe adc mov loope sarl popl lcall arpl inc roll loopne mov add insb sbb mov sbb dec push clc add xor (bad) xor ficom jl add rcll js or dec and (bad) int3 xchg and pop xchg cld add leave add sub add sub test xor add popl mov or add jl mov dec movsl je call sub cltd push (bad) aad push lahf jno imul cmpsl xchg popa outsb mov jo and shrb inc dec int3 add mov xlat mov push inc mov xchg add cmc cs mov mov dec clc aam add mov stos lret jg jns or int mov movsl adc stos movsb aas cmp mov or push arpl sub or stc test nop pop dec pop inc push cmc and and scas leave pop xlat subl stos enter pusha pusha push jns jno add pop ljmp xor sub or mov aad sbb fbstp mov xor movsl cmpsl or js nop pushf cmp xor js adc mov pop comiss dec xor sbb dec xor int3 rcrb lret push xor roll lea push xorl cmpsb pusha and mov mov mov test dec pop mov xor imul in loop (bad) test add mov inc nop adc sbb xor loopne jnp or pop cmp fcomp ljmp rolb inc push and adc movsb and and add stc dec push nop pop lret loopne mov (bad) adc mov sbb lock mov cmp pop (bad) int mov popa jb or pop loop mov in subl int push add nop test and xchg lock add repnz dec sbb jo mov jg mov dec lods and push lahf dec adc cld pop in and dec push push push and fisttpll inc (bad) push cmp cld int3 notl mov mov push lods bound ljmp mov mov push pop ljmp in dec test vpsubq adc xor enter xorl pop jp test shrl ds and mov xchg or test cmp add mov sub pop add outsb aad dec sbb add data16 jmp xor int3 inc sub clc fild mov xchg xor sbbl xor mov dec cwtl (bad) cmp dec arpl xchg sahf sub pop cmp xor ret xchg jo and inc mov hlt loop add outsb (bad) mov jle xor les inc or bound int (bad) xor xchg and mov add sub outsl jge lds xchg pop frstor prefetcht1 dec add jns shrl test cmp lods adc add pop sahf and add ret dec imul xchg daa mov mov mov dec xchg cmp (bad) push bound adc adc pop and stc (bad) sub fsubrl xor mov adc lods add ret aas sub jp jo pop loopne cmp cltd sbb mov call jo pusha cmp fdivr div push cmove addr16 aaa adc sbb stc int fcompl and test imul mov sbb sahf ret cmpsl loopne movsb and sub (bad) aaa fdiv das lahf or cmp inc clc xor mov lcall cmovne add push loop xchg mov add jmp pop pop add imul dec repz out xor sbb pusha push movsb jl enter fs out pop push sbbb add or add ffreep (bad) paddusw mov fdivl jge (bad) fwait insb adc pop push mov dec loop repz xchg cmp mov adc int3 scas movsb cmp mov fnstsw and add jle pusha jmp add aam xchg (bad) out fucomp iret js es push mov test add ret test fnstsw js mov and adc sub dec loope and fisttp sbb adc (bad) xor adc test jmp test lcall pop jg pop test nop xchg pop mov xor movsl ss ds and jg sub pop sub js add sub mov lcall clc adc enter adc pop jmp loopne push pusha cmp sbb and pop add cwtl inc add xor mov add int lahf mov inc test adc lods mov loope adc pop call cwtl mov mov lods outsl push cld jle pop dec xchg test ret pop pop cmp imul or lods and addr16 ret fmull push pop push xor orl or out jmp sbb add loopne mov cmp add int add std outsb jb mov repnz nop movsb sbb test dec sub clc push aaa sahf popa sub scas lock out imul jae aas xchg lahf or mov test mov xchg insb aam je pop add jo int3 ss fisub xor jne bound cmp mov enter push inc adc pop mov nop push adc xorl pop (bad) loope push push fdecstp aad bound inc (bad) hlt inc dec sub push clc daa es lods and mov lcall xchg arpl adcb push jecxz add js fadd loopne fimull daa cli stc pusha roll jo popf into jmp push hlt adc adc sbb call nop xchg push or mov xchg or mov push or test orb mov in cmp insl pop inc test cmp fnstcw pop loopne fcmovne iret sub xorl in test push xor sub cmp xchg pushf lock and dec adc and jl in mov test jae in push outsb sbb aaa cmp add sub (bad) mov in pop push fild lcall add xchg inc dec out add jnp daa stos adc fwait data16 jl xchg sbb xchg das movsl pop loopne xor sbb dec into dec ss cmp sbb or push test cmp repnz add mov cmp inc dec icebp and inc mov inc xchg inc cmp add mov push mov dec adcl test mov fdivl repnz add sbb sbb in fs fs aam insb sub dec js and push jnp xchg mull fdivl sub adc add fwait mov enter insb outsb adc inc les mov push mov movsb jecxz adc add mov movsb jo sbb aad lcall pop mov popf dec xchg out lret or sbb jmp mov daa cwtl je pusha aad arpl xor lods mov ficoml add hlt imul or fwait call mov adc fadds xor cmpsb movsb (bad) and sbb or push (bad) pushf decl mov jno or cmp jg repnz call shlb pop jnp dec add mov (bad) sub leave into xchg inc sub clc xchg hlt (bad) mov fsubrs add (bad) push mov arpl dec cmpsb add mov mov mov in jbe sbb cmp into ud2 cmpsb adc cwtl sbb adc adc inc sbb mov pop incb mov test add (bad) fdivrs scas test lcall (bad) jae sbb add sbb fs push nop push dec add or addl xchg clc cmp lds mov xor dec xchg sahf sarl inc les dec in mov aas lahf or push daa mov mov pusha or rcll in test jo xorb ret pop push adc rol nop mov movsl (bad) xchg sbb shl add mov pusha ret loop push and stos pop mov or pop mov mov dec clc add dec test insl in (bad) adc push inc imul (bad) push scas mov pop addr16 mov jmp xchg pop add ficom pop ror lock jg sub mov pop mov and std inc pop pop cmp sbb ss mov xchg sbb mov arpl lods sub clc sbb cmp pop shrl add enter les xor add into or and adc or and les push and nop add and jbe dec add dec mov dec fdivrs and into inc and je mov mov (bad) imul (bad) dec and xchg das dec lahf fmul jl sub cmpsl push and inc mov inc push (bad) inc mov push sub out mov add test shll mov les add sbb cmpsb mov js cmpb pop push jo scas in popa loope jae call loope dec repz pop sbb outsb jl and jl adc jno xorb and sub add andl lahf movsl or lea xchg add fs or jno mov mov sub in dec xchg or add adc pushf add test clc mov jg bound mov cmp (bad) leave test mov subb fsubs fwait add or mov ja inc dec inc xor lea (bad) je inc test add inc rclb push xchg adc cmp jo mov lahf inc add pop ret push sub enter enter or (bad) enter xchg pusha push fs int3 push cmp dec or aam pop or lret stos or scas push stos cmpsl sbb xchg add inc jne jbe aad xor lahf mov pop add add cmp fstl push ja xor movsl push repnz add xor push imul mov or sbb and add int3 mov push or test mulb loopne cmpb sbb sbb mov add fstpl (bad) mov sbb adc outsl cmpsb cwtl add cli ret repz jp bound (bad) adc pusha inc sbb adc outsb pop loopne leave ret rorb mov inc push sub lahf cwtl hlt jl add div or or jmp mov clc push les add rcr jns sbb mov inc mov add add or add pop cs dec test jo pop xor add jae imul sbb xchg insl dec cs mov cmp add es sub add cmpsl imul jl and mov and push or loop (bad) dec inc out cmp rcr pop lahf sbb repnz mov in mov cmp mov adc test iret cmp sbb xor jmp adc pop cltd dec jno into cli data16 fsubr or lahf mov rorb xorb and cld arpl pop out mov mov loopne jmp or je sbb pusha pushaw dec jne jns cld pop clc mov leave or or out fs jo lahf mov icebp and mov enter add jmp mov rclb xchg pop xchg fidivrl mov xor mov mov js xor add jl enter idivb lret sbb mov (bad) sbb pop inc xor sbb or stos pushf or mov call cld in call sbb loopne insl arpl add leave mov add push mov popa clc inc enter jo add cmp mov and push add mov push add cmp imul daa inc mov bound ror sub inc sub pop adc sar dec aam or push (bad) pop xchg and add sub and xor sub data16 sub fidiv fdivs cmp outsl out pusha pop adc or (bad) xor lret add test add (bad) pop jp rcrl push pop js loopne mov nop push mov xor sarb push pushf add mov aaa dec cmp add inc add jns xor in add mov mov out (bad) push adc inc and sbb ffreep sbb enter stos out sbb fist mov cld inc pop inc jge sarb stos xorb push hlt push rol cmpsb cld test cmpsb cld add xchg pushf and lea psrld jecxz rclb xchg push imul or xor rcrl pop stc ret daa dec sub dec mov jb xor add iret lds aad or popf fmul sbb inc out add repnz mov push loopne rclb loopne dec pop lea inc mov roll jl mov pop add andl cli fwait inc cmp push and add movsb sbb icebp xor xlat (bad) and pusha cmpsl js outsb sub jmp shlb icebp test rorb cmp iret add shrb (bad) jnp jo add insb mov add mov jmp add push xchg mov xchg and jp mov cmp inc je jmp and add mov cmpsl roll test jl (bad) pop dec dec sub int3 fs xchg outsl fdivl das adc push cmpsl subb cmp sbb fsub xorl dec jle adc xor adc enter mov arpl xor inc mov fiaddl adc push dec sub shll popf clc subl or or clc cltd stc loop xchg push mov sub out mov push add mov sub xchg dec push js add (bad) dec hlt and mov xor sub ds insb and xchg dec add (bad) testl cli pop push xchg in adc fild or nop aam pop jo lea push and in add add push push in or mov xchg inc mull or into mov pusha push pop lods scas dec je bound test movsb add add ret push rcrl inc add add or out pusha jnp xlat xchg push add test lods add clc dec xor cmp or push (bad) lock (bad) mov mov mov lds adc push in adc pusha mov mov js aam std psubusb jns psubusb add into fdivrl lahf outsl cmp loop ficompl adc roll or call pop arpl and push nop lods or and and adc sbb popf push fcomps sub scas and outsb mov ret xchg test mov js lds add out cmp pusha orl mov iret or xor push cltd popa dec mov loop mov fdivrs mov and lahf shrb jmp int mov enter sub xor popa inc xor adc test lock stc shrb inc xchg add add cwtl cmpb pop sbb jmp sbb add test adc sub sahf cmp push cld add shlb roll mov mov sbb mov mov push movsb add xchg (bad) movsb fistpll dec push jl in inc ds sbb sub push test add xor sbb dec mov dec mov dec addr16 pop push (bad) loopne sub cltd ja in xlat test dec jle add pop adc sbb add adc push mov mov lds xchg nop or cmp shlb enter into and push mov out jbe xor mov cld inc shrl cmp nop icebp and add pop sub cmpsl add mov mov push in pop adc or mov test sub cmp mov xor sub inc and jae pop cmpsb (bad) cmp inc aaa mov addr16 ret and std shll adc push popf arpl or jmp mov int3 add ret int3 jecxz loop mov inc or ret push fldt loop pop or js jp inc pusha sbb mov dec (bad) and inc or cmp repz mov je test xchg insl or dec into test and in stc test push and dec loope enter cmc flds sbb orl adc xor cmp or out sub addb test add jl stos mov add cmpsl in outsl xor daa sbb xor add or jle pop sarb cmp mov movsb test push and jb mov aad jg dec test adc pop jne es js mov jmp push fcomip mov add ljmp push push add call add mulb inc mov imul and pusha pop and dec add sub xor jns dec mov mov add mov es inc cmp iret mov pop or mov or push jg imul jl jne pop lcall or sarb push dec xor sar cltd lods cmp or int3 outsb or add rcrb mov cmp add and pop sub sbb add add std cmp xor (bad) or in xor mov or dec adc (bad) xor add lret movb or mov sbb pop push ror push cwtl or sub sbb (bad) xlat addb cmp or call and mov mov jge inc mov test adcl add cmpsw outsb iret dec pusha pop js sbb adc inc cmp add push sbb roll and test add dec test imul cmc push jno xor ret and (bad) test call sbb mov pop lds sub loopne dec pusha cmp push ljmp (bad) leave sub jbe cmp dec fldt loopne (bad) nop clc pop adc mov dec mov cltd or dec aam mov jmp js mov pop mov (bad) adc rolb sbb es push sub jno xchg mov and push add cmp xor jge adc lods inc mov subb decl or and push pop adc sbb fcoml adc mov sbb cmp lahf loope inc mov rcrb test push stos hlt punpcklbw lods adc and notl (bad) jo dec lahf mov (bad) out mov inc xchg (bad) jl or xchg divb xchg enter pop dec test dec inc popa test pop imul or mov cld inc loop mov pop les cmc insb stc ss cwtl add pusha and adc int3 sbb pop add arpl aam (bad) addb jp add push xor icebp sub add jge mov lds jecxz xchg mov cmp mov add enter mov and mov lods js add cmc push repz add addr16 jl loopne nop push mov inc add dec push fstpl jno call cmpsl xchg lret hlt xor add mov mov push jmp push inc in mov sbb out fsts arpl push dec jnp mov cld add lcall jecxz int3 add add in mov loopne enter sub call xchg sub orb imul movsb pusha nop stos les lock inc and add pushf add pop pop adcl mov enter addr16 mov adc popa and outsl fidivrl popw xchg ret loopne adc gs xchg add adc mov jge push int3 nop add test (bad) iret xchg jp or adc icebp add lods test jns out mov mov xchg xchg dec pop xchg pop mov (bad) jno adc test pop pop add xchg lahf movsb insb fnsave flds dec test inc jmp stos jo xor or arpl and adc xchg adc pcmpeqb jne dec xor pushf outsb push fnop add clc gs nop sub fcoml adc adc and je int rolb ss fild test imulb fcmovb xchg clc cmp clc cmp enter jns push jb pop pop sub fildl push push (bad) stos lcall popa orb test ja cmp add fs and fwait lods cmp jae pop (bad) jae dec mov add push fidiv and data16 inc pop cwtl xor pusha mov inc xchg fisttp nop push inc cmp and jo push push xchg fdivrl mov mov adc push pop addb xchg in sub loopne and adc inc pextrw nop xor pop mov dec fnsave loopne outsb pusha popa mov mov je adc inc dec jo pop fadds push mov jge push add inc add push add push gs das rolb xlat and insl push pop fwait inc cld push adc dec dec nop add repz inc insb test je mov ja sub scas and adc mov pusha cwtl xor gs sbb push cmpsl mov push and (bad) inc and sub inc or test in cld lea mov jmp les xlat mov and out faddp mov cmp xor mov xchg mov cwtl insl mov int inc xor loopne enter sub or je (bad) add js xchg and dec ficom (bad) mov (bad) shlb insb add xchg orb sbb faddl adc sub nop pop lods xchg sub mov xor dec add mov sbb fsubs jl and push insb add and les cmp sub cwtl pop add mov ljmp cmp test loop out scas push mov mov ds cltd cmc sbb pop mov and xchg int3 cwtl stos sub add add arpl clc jge clc mov xchg push xchg or inc xchg mov xor sarb mov (bad) or es shrl in jo dec sub adc sbb inc outsb mov clc imul inc or xchg pusha js andl (bad) ljmp sbb adc inc add xor or lods jge xor cwtl inc insl inc lock aam fsubrl test xchg push je dec mov and ret pop nop mov in xchg xchg add in cmp xchg cmpsb dec call movsb pop je mov fisttp xchg cmp fist data16 stos in cmc and pop fs push xor inc pop (bad) pusha mov sbbl push xor dec inc in or flds push lcall aas stos (bad) add dec pop pop insb bound mov sub int add das mov sub mov jge add rcrb and inc pop inc add les imul adc mov add jb pop mov (bad) or addb cmc sub xor push pop xchg push in sbb lahf sti cs or mov adc xor rol lods test test xcrypt-ofb cmpsl outsb mov lods xor mov xor inc push mov and pop fist pop (bad) pop dec cmpsb ret push sub mov int3 adc dec and add xchg insl loopne jno fisttpl nop add mov test clc mov fldl mov bound add lds nop cmp int3 nop mov xchg (bad) cmp fidivr pop xchg adc ja mov imul cmp call xor cmp jl,pn or jne mov dec push mov mov insb jo scas pop pop call lock or fild adc popa mov xchg fcoms cmp (bad) outsl scas js push push fsubrp pop shrl sub add and cs dec fmul (bad) lcall inc cmp push jmp and lock or arpl outsl and sbb xchg or cmp inc xchg mov lods and fcoml mov fbld js xor in mov mov test and fadds push pusha xchg pop pop aas add mov xchg sub pushf or jo loopne dec pushf in cmpsb cwtl xchg pop push pusha test xchg push mov xchg dec mov sbb nop pop xchg fdivr sarb inc xchg popa sbb pop or mov hlt int3 mov dec subl push and push mov jbe mov xor dec add js push mov fs test xchg xchg add popl incb nop daa testl sub sbb dec jp or cmpsb aaa jb fsubr adc dec rcrb sbb dec add and loopne xor fcmovnu loop mov pop lods and push xchg fs mov add das out add push enter fs mov test xchg int3 movsb mov mov sahf or xor mov xor iret xchg idivb insl xor push push cmp sub or adc adc inc clc inc dec pusha add cwtl xchg fstps outsb nop jns xor adcb jp jecxz scas add or dec push cmp enter (bad) cltd adc mov pop fistpl nop xchg xchg push add cmp mov jo rolb arpl mov mov (bad) in mov les clc lock dec dec gs call test sbb xor jp sub nop mov jne andb inc adc mov jecxz add jp push cmpsb mov sahf mov fistl fs xorb inc lds loopne mov js adc or inc test or lods add cli ja mov scas shl lfs add sub lods pop pop jno movsl mov mov sbbb stc in data16 aam call sbb adc movsb cmp mov sbb out push clc mov dec xchg stc or mov push xchg je adc mov inc es adc in mov enter add jle jl cwtl and push lock ds mov xchg dec add fs jo add hlt sub roll adc in stos dec xchg xchg js xor arpl mov in (bad) pop cwtl dec jp lret xor aam sub inc dec sbb or fisubrl sub adc xchg jge mov call fisubl cmp and add xlat test mov inc sub je cwtl mov rclb int mov add push dec sub (bad) mov sub out mov int3 test inc loopne xor call push lock adc lds push inc sub adc clc push cmp aas adcl mov add ja out mov leave inc out stos jb push sub lret stc lea out add mov add sub insb bound aam xlat shll sub sbb mov movsl mov add add test pop movsb sbb inc (bad) out mov cmc dec ljmp jb cmp and loopne mov add fstl push dec pop loopne sub xchg jbe je pop in add mov inc fcoml cmpsl add nop test lret out clc in mov mov or fisttpll mov or dec dec in add das cmp mov stc xchg (bad) mov les jo jecxz movsb out movsb loope and push enter fcoms push cmc test pop addb orb and xchg lods or dec hlt push add nop movsb dec xchg cld out (bad) mov (bad) clc mov sub sbb js inc xor (bad) jmp inc call push jno scas nop mov pop fidivr ret pop in adcl or mov and call scas add jo fwait push mov mov daa or cmp mov stc push sbb ret testb pop pusha test sarl inc test xchg in popa repnz add add je test out add adc test popa jl clc push mov in push xchg lahf lret lods dec mov mov push add or mov lret imul leave fs push push rcrb and adc pop lea enter fiaddl mov mov cmp bound dec cwtl cmp test (bad) bound push push jecxz mov inc xchg into xchg jae aam mov mov push divb into dec and add jae loop test test jne add sbb les jae int3 cmp add sub arpl xchg push jle je js add or dec hlt inc sub inc push cmc sbb mov je js pop pop notl add mov arpl jo mov gs pop sub push nop ret jne push lock or adc xchg stos xchg shr fiaddl push cmp dec push pop and add mov adc ss subb mov in add and sub ds test sarb das mov xor pop movsb push add lods paddsw ja push add stc insl dec or sub notb and sbb and cmp rolb inc pop push jg add clc movsl repnz outsl sbb and stos and mov mov xor mov cli scas hlt imul insl mov aam movsl push ds and (bad) or aad and add adc enter sahf scas xchg mov add sub rcll mov sbb loope int3 sahf ret in mov push jp adc xchg jne and sub jp lret cmc inc mov (bad) mov cmp xchg icebp (bad) mov push and sbb call nop adc jge enter pusha enter in cmp jbe lods enter insl adc jle scas loopne push sub sbb mov pop inc push mov fcomps in and add dec add hlt dec js in sahf push xor cmp sbb xchg add dec cmpsl in orl inc aad add xor lret add sub push add and in test xor or subb bound dec add adc and add mov cmc fsubs sbb push cmp xor cwtl pop adc pop pop or adc lds test adc mov adc arpl mov adc add dec mov enter roll jmp scas inc mov pop dec xor pushf test pop cs aas cmp andb rcr mov notl sub inc ror mov leave inc mov and jp (bad) xor xchg js test notb mov mov mov lock jnp cmp and add or or lret test lods push xor sbb negb or aaa dec outsl cwtl jae fistpl cmp repnz out ret xor mov and jbe mov push sbbl ljmp int loope (bad) cmp pop inc rorb dec into add push add sub jp sub mov es jl mov adcl add cld test cwtl mov bound or lds adc testb sub add pop and in cltd clc and and sub hlt inc dec cmp mov enter mov sbb mov sub xor or scas dec nop in lea push std jg in mov push push sbb popa hlt xchg nop jle cmp loop adc pop add dec ja sti mov cmp sub in loop movsb xor popl pop push xor add lds jb ss (bad) xchg push sbb insb orb ret (bad) jne add push push rolb pusha ret scas outsb enter add lahf fidivrl hlt push cli icebp push lock pusha outsb sbb pop jnp add add nop push (bad) lock push xchg loopne sub xchg mov inc push jg outsl (bad) lock lahf inc pop data16 add and in rol cmp push inc mov inc xor adc adc movl adc stos decb gs mov add inc fisubrl mov xor stos es cld hlt jbe cs dec nop dec andb or cmp inc lret das insl (bad) sbb out xor int3 adc lods xor push loop sbb call adc lods and (bad) fnstsw cltd lock cmp xchg fdivr add pop rcrb stos data16 sub mov mov out cld pop sahf gs adc push test push push inc enter add in je lret stos xor and jg pop fidivl nop jo pop shrb mov ja in mov movsb sub sbbb js xor xchg ret js,pn subb loop mov jns (bad) ds pop push xchg movb jno and sbb xchg mov xor xor push bound repnz sub or loop push xchg adc fldenv pop scas les popa (bad) cltd loopne fwait and lret pop cmp fs outsb into in ja add pop add clc repnz inc (bad) mov cmp aas rcl xor and jge adc add xor rorl xor lock adc pop test mov jp or cwtl ds xor ds inc test xor addr16 insl scas fldcw pusha andb cmp xor inc push adc sbb add ljmp pop ja pop pusha xchg jle movsl cmp cmp adc push adc dec xchg cmpsb cmp (bad) lea xor jle iret icebp xor aas adc lods addl dec jg xorb data16 sub or and xchg jl dec cmc pop and dec adc mov adc and out dec mov and fmuls nop sub sbb (bad) imull std pop cmpsl and subb add dec (bad) into sarb add inc outsl repz scas cmc hlt push add in xchg (bad) push (bad) xor fmull enter or jb or mov sbb xchg inc lods ret shrl or mov pop pop lods enter xchg enter mov pop and mov in mov aaa add jmp movsb test inc or shrl push mov and inc les mov (bad) xor out jl adc xor js mov mov in add or enter ja fisub hlt imul cmpsb stos pusha (bad) leave hlt add jmp xor enter inc cmpsb jg sbb jbe xchg inc pop xchg mov cmp adc add inc aas cmpsl cs pop xor rcll movsb lods insb add test mov fsubrl mov xor stc in in pop fadds insb xor pop jae xor jmp adc and fadd mov inc inc inc movsl fsubs push add call dec nop cmp add push jecxz mov cmp xor inc push das dec sbb inc in push (bad) aaa inc es cmp or fucomi mov mov sbb dec sub les ret cltd xor add sbb cwtl add (bad) dec mov pop jnp cmp iret jmp inc outsb sarl xor pop enter mov fwait out cltd pop subl jnp jl pop push leave mov mov ret add data16 imul add je fs jnp cltd and cmp (bad) cmpsb sub fidivl mov addr16 and outsl or test add and jnp outsl or and mov mov hlt in xchg les adc (bad) and sahf pop dec adc inc mov out inc jno jbe stos sbb out fwait jb adc out ret and xchg sub mov fisubl mov or sub fs adc subl adc lret (bad) xchg movsl (bad) adc fcoml push sbb and add pusha fcom jb xchg add sahf dec xchg outsl adc fcoml rclb and loop fcoml xor mov sub into es mov xor xor fist add dec sub xor dec (bad) pop add push mov fmull in cltd sub and (bad) (bad) cli sbb mov outsl sub ja nop nop inc dec cmp shrb xchg add mov cs test inc fwait sub lock sub jb in js xor mov xchg pusha adcb sub xchg and cltd fstps add mov pop lcall enter add lret inc and jl fsubrl dec and mov aaa test sti adc xor test in addr16 xchg test and or andl daa fcompl or jb adc nop mov and sub push push add sahf sar fwait lods and or xchg addr16 sub cmp sub mov (bad) repnz pop pop aam xchg lret sarl daa sbb dec int3 pusha rcll ljmp xchg cmp in pop mov inc jl (bad) mov ss add jb in xchg test iret clc cli add stos jns ss pop cld add add push sar pop (bad) sbb xcrypt-cfb cmpsl and xor inc jl sbb and jmp call test dec fiaddl lea inc js stos pop out jnp outsb dec or add xchg ss or or cmp add jmp fs mov xchg in or imul ret or faddl push jle xchg out mov xchg cwtl jo xor lods lret nop clc cmpsb into add in push push push cmp mov dec sbb sub xor cmp cltd imul xor jle fcoml das mov out dec test jge xor xchg (bad) jne scas adc and xor dec pushf dec js imul xor xor fs cmp mov andb jg adc lock nop cs pop mov insl popa adc or call and clc inc jle push mov xor mov mov jecxz push xchg add scas mov dec xchg ljmp add xor mov (bad) repz add inc mov lock mov ret pushf rclb or stos loop add cmpl xor in adc les xor adc aaa inc fsubl scas dec push inc inc cmp dec add outsl xor inc sarl add cmp inc dec jae sub aam adc (bad) shl inc xchg xchg push leave mov add push cmp dec stos pop adc fsubrl clc mov and mov cmpb in xor xchg xor inc test lret (bad) mov and imul hlt push add popf and add into push xchg xor lahf sarl (bad) cmp xchg mov outsb mov cmp insl push sbb inc cli cmpsl es or or sbb pop sub and add andl jge xor adc push lahf cmp mov cmpl add sub sbb cs and jp roll push mov push mov inc daa jmp lock add popa push in and xchg and jle or sub andl xor xor leave jge adc fwait or (bad) jp adc push movl adc pop scas hlt and push xchg mov xor rcrl pop mov (bad) jnp popa ret push fstpl inc push cmp mov push sub pop jmp mov jg lret jmp mov (bad) push rolb adc aas add push add jnp pop jmp mov (bad) add add add pop xchg adc jg push push or xor popa std inc mov sub add or pop and jmp pusha je jo notl add das dec or cmp pop jns arpl ljmp (bad) bound decb and pop jmp outsl push pop sti adc push fnop dec (bad) pop push repnz imul mov mov ds add ja loopne jmp mov mov cmp or inc sub push cmp shl jge (bad) (bad) jae ret mov or cmp mov add sub sbb pop cmpl add imul pop fdivs add faddl inc sbb or mov mov cmp ljmp (bad) or mov mov xor ret add xor add sbb cmp jnp add adc loopne in call add cmpsl clc leave or loop mov xor or adc adc add sbb or in jae push sub mov (bad) hlt jns pushfw sbb pop xor push adc cmp adc inc or mov xor gs aad add pop xor push cmp test mov int3 xchg or fstpl aas lds cmp cwtl sbb dec cld in add in das mov inc cli incl pop pop push mov sub xor in dec in test mov push xchg clc jge cmp sub add cbtw jae das iret or rolb sbb mov sbb sbb pusha add add scas sub xor jb fcomps and mov movsl mov push mov xor push mov jbe sahf cmovbe adc mov xchg add cmp aad push hlt mov add dec insb push aas sbb aam or pop xor or flds push outsb lds inc popa leave sbb stc add bound sarb aaa mov out inc mov sarl scas add jle mov jno ljmp int pop xchg rorl in pop pusha mov (bad) sub bnd add push addr16 xchg test and sub pop or fs loopne lods shr cltd push aas inc add adc adc imul and dec dec pop or cwtl mov cmp out popa jp and mov xor and cmp jle adc movsb xor sbb and jp add or adc jl mov jmp subb push dec dec or push clc ds and ss das inc xor adc (bad) jbe xor push mov dec addb fs or or call xchg hlt xor loopne gs jbe dec mov nop or pop add and aas cli mov cwtl fsubrl pushw lret cmpsl pusha sti jecxz mov jle in dec cld mov pop cmp add and (bad) dec or (bad) push adc jmp mov xor imul push pop in add jo call scas jno xor jl bound mov scas mov add popa cwtl arpl dec es ss or inc or mov es daa jae mov (bad) adc add inc cmp adc dec adc jmp jnp aaa add push or cmpsl div sbb nop sbb and loop push sahf je sbb (bad) xor cmp rorb jge mov insl sbbl push ljmp push push or and pop and stc mov mov mov sbb xlat cltd pop icebp movsb aad test add or mov xchg lea repz mov xchg lea inc xlat addr16 outsl fs pop gs add nop lret xor (bad) and dec (bad) jg push int jge ss fdivrl enter ret cld adc bound inc sub mov jbe out xchg xchg push add shrl jle cltd add (bad) fmuls mov lret aam mov push push adc pop loopne add outsl je or mov hlt add lret pop add int3 or add pop (bad) in insb mov dec (bad) addr16 xor arpl inc adc add mov inc lods in push pop in lret pusha pop or add inc lret sbbb push add pop pop aam adc lahf add lods cmp es arpl push xor imul inc sub push or leave data16 lcall fidiv jle movsb inc push leave cmpsb and push mov dec sub cmp les orb iret add and out pop outsl mov ret sarb rclb pop xor popa cmp jl cs nop mov scas fs loopne or xor add inc add xchg fwait adcb fimull mov adc cmp and dec lods inc out and or sbb mov dec push aad pop stos (bad) dec dec bound fcomps es add decb mov or es or scas and test jae inc enter arpl sbb add stos mov das jno push test jb stos cmc loop inc sbb add clc inc dec sbb xor inc adc add loopne (bad) leave rorl les sbb mov jp add (bad) xor mov clc js lea jmp mov jnp shll dec inc sarb std dec hlt (bad) test es sub xchg dec add or pop xor addl adc dec mov sbb xor clc pop fs push lods fwait xchg cld mov inc pusha and (bad) cwtl add aas sub in stc and xchg dec xchg cltd pop inc xor pop js pop pop xchg mov int3 or ds pop into fisubr (bad) loope xor cmpsl sub (bad) sub xor int3 ds add xor (bad) cmp pop rorb xchg clc inc adc pop and cs (bad) call dec pop movsb popa push xor xor insl and (bad) dec ds stc lds shrb xor add push fmull inc mov call push insl cli (bad) movsb cwtl loopne in xor mull mov andb pusha mov pop adc xchg faddl mov inc int3 xchg add stc fldcw andb movsl sbb sub add pop (bad) bound repz xchg ret mov fiaddl sarb es mov nop sbb lea pusha jp add (bad) jle push sbb xor les cwtl cmp (bad) jb add imul movsb xchg in adcb test and and add cld add sbb xor adc dec and rclb push and mov jmp jb add push idivl add (bad) jb sub push dec aas xchg or les inc adcl adc xchg xchg xchg mov sbb dec push sbb adc frstor add iret pop xor das jp cmp jmp ret mov add and outsl cmp int3 dec or or jl sbb mov mov push iret aam mov cltd dec scas mov or pushf xor push adc into rol in adc mov aas ret out jno arpl adc add xchg fistp pop in ds add mov (bad) dec pop and ret ret fldl sbb cmp pop add out inc cmp cltd xchg mov xchg xor out sub and jnp ds mov rcrl and mov push push mov adc insl adc dec shrl sub int3 pop test inc xor add pop mov mov shrb push lret test mov ffree cmp or push push sbb sbb pop inc mov divb outsb lret add arpl jp pushf ret psubw rorb pop adc out mov inc dec aaa dec cmpb cld std xchg fs or mov push mov xchg add sbb cwtl sub and pop and test push rol xorl pop dec and test adc rorb cmp insb push or push scas and lret pop pop dec cwtl enter (bad) hlt into adc mov and movsb in int movsb adc clc aaa sbb push incl cs or lds jl dec in pop int3 xor and adcb mov fldenv loopne mov mov sub push lods inc repz and sti movl inc inc test lods (bad) movb pop xchg push les mov mov jmp cmc or dec (bad) xor xor sub dec lock mov stos and and mov and pusha out pop sbb js cmp inc mov jg out mov pushf jle dec mov push push out in cmp add repnz (bad) jno xor ret add pusha adc xchg enter xchg push cmp add mov and jno or in dec mov pop testb adc pop sub adc scas pop cmp enter (bad) dec fsubrl add rclb xchg xlat (bad) mov pushf scas movl or mov jae out push adc cmp push rcrl add jns dec out in or pop ds add xorb sub dec jo ljmp and mov addb push adc or push or jp mov cmp iret int sbb popf dec popa nop (bad) sub lcall daa xor addr16 pushf push int mov lods or pop clc and fcomip inc pusha insl push out aas gs sbb insb pop sbb xor jae and mov add adc daa cmpsb adc in cmp or fldcw gs lret dec pop je les dec jno int sub dec cmp jle sti mov inc addl mov or loope mov data16 repz out out stos lods xor sbb jge fisttpl or or xchg lcall loop sub cltd rolb ja imul out and dec sub (bad) adc jge (bad) xchg jno push inc mov jae dec cmp adc and sub dec sti test pop (bad) lcall push in mov add pusha je fmulp dec dec xor in mov push jp pop sbb imulb jnp cwtl mov fsubrl cld loop xor jle notl adc movsl inc (bad) cmp xchg adc push sub or xchg and sub sbb add dec add mov in je out xchg in loop cwtl pop sbb mov inc mov cmp cltd add adc mov (bad) and scas pop jbe cmp cmp div xchg mov sbb or rorl jl mov ljmp xor pop and repnz mov sbb or pop dec cmp clc repz add or (bad) in and insb push cmp fisubl and mov aad mov sbbl mov dec push das and push dec das add sbb movsb or inc roll inc jg js test inc inc xchg pop sub pop orb xchg inc or jl xor xchg je dec cmp push pushf add faddp xor add (bad) inc mov inc or push and sub sub or hlt js push mov cli orl loope add movsb dec pushf sbb outsb (bad) adc repnz jo pop repz scas int3 or or insb inc dec sbb stos dec decb int3 jne jbe adcb xchg imul adc adc fdivrp sbb xchg sub ret test fdivs ret sbbb dec cmp xor pop test adc add dec or (bad) xor and enter enter xor cmp scas xor or adc dec lods in xchg jns dec xchg fadd add data16 insl pushf popa mov push fiadd jmp mov aad push or dec inc test (bad) in je inc lods sbb inc int3 dec add and aam mov ljmp mov jle add mov sbb xor push inc hlt imull mov push and pop ljmp pushf sbb pop adc sbb (bad) mov mov xchg add inc xchg lahf scas pusha gs rclb rclb push add mov lods mov bound mov adc rorb ja call jb dec mov add ror int3 add add pushf cmp jno (bad) adc or test out push jg inc int3 or mov outsl or push (bad) xchg mov scas adc sub push and mov inc jl repnz xor push cli cmp dec xor jb xor or sti xor cmp jno dec rcll dec mov ds pop xchg adc mov mov or subb loop lods hlt cwtl cmpsb in jb dec popa movsl push dec or push mov cs push fs mov sbb movsl xchg cwtl add sbb lods mov shll fs cwtl loop pop cmpsb pusha lods push mov and mov int3 (bad) imul mov addb xor and cmp stos xchg js lcall mov fcoms jb xchg outsb push or ljmp xor aaa jno lret sub inc dec add mull jb jl mov mov (bad) data16 mov test push clc shrl idivb roll shl sbb call aas sub push pop and sbb fsub pusha pop xor add jae cmp or push push daa popf mov insl jmp cmp cmpsb idivl int and mov cmp xchg pop bound faddp mov xor adc add fidiv xchg push hlt or or hlt xor iret aaa sbb mov xchg and orl aad aam add lret jmp xchg cmpsl mov inc adcb test pushl outsl mov test pushf rclb sub sbb add sbb push mov loop or mov adc pop out xchg adc cld xor cmp xchg xchg xor cmp cld dec mov cld xchg sbb pushfw sbb adc or int3 add mov adc push add push mov mov and add push jge outsl bound dec add add dec cs loop xor into inc enter pop mov xlat add sbb loop enter pop mulb sbb add hlt push fsubrs pop jge popf (bad) (bad) cld dec dec mov jae rcl push push inc cs aad add icebp jg loopne dec jo push shr pop adc mov sti movsl call leave in jecxz pushf ja dec or test out loop push ret push sbb leave int3 mov sub arpl les in xchg cld add inc mov pusha lock pop mov std insl mov pop js pop sub lea or push or insb decl mov dec and or push xchg add data16 cmpsw xchg and and repnz les scas push cmp inc xor push iret (bad) or xor add in inc addr16 lds xchg iret jno rol stc inc int3 dec jne xor sbbl int fs inc outsb int3 jne pushf aaa sbb pusha js test add xchg mov push lahf push mov daa out (bad) out or (bad) pop sub enter pop xchg inc call hlt push negb inc aas ret mov test and sub lods push je mov aas out sbb dec or dec sbb sub sbb fisub repnz push inc iret js shrl push push test jp dec push mov sub fnsetpm(287 aas faddl inc sub das (bad) (bad) mov lret pop rclb jnp popf and lret pop pop hlt test cmpsl in add mov scas insb push lods sbb gs test lds mov push inc adc add xchg sub fidiv inc jp int xchg xor or rcll mov out inc jmp outsb add mov adc repnz ds xchg orb dec rcll push xchg stc in add es or scas and daa inc or adc das mov add mov jp jno adc xchg xor (bad) jne push add adc into mov outsb adc bound sub shrb add dec in orb mov jg mov insl popa and popf xchg dec (bad) lret push scas sbb xor lds push cmc xchg adc sub pop and sub mov and mov repz sbb mov and or js and mov insb lods in and stos mov andl (bad) pop and enter dec sbb jbe mov (bad) fldenv mov ljmp mov push xor lcall adc jno push mov add pop lret xor clc adc addl xchg sub xchg ds dec or adc jno push mov les les jo arpl and mov jno loopne repz inc (bad) fsubrp sub or push (bad) dec add fdivrs in fiadd pop clc and push add bound das test enter mov mov adc ror (bad) (bad) repz jnp in lods aas jne jno rorb mov or push jno lahf xlat mov cltd push mov inc sub or jno mov xor or out cmc or or and hlt mov mov in inc cli inc push out sbbl sbb fcoms jno jp xor cwtl je or loop dec les add and insb fldenv mov xchg jge (bad) pushf xor push insb test inc daa adc rcrl andl xchg je jg cwtl orb jae (bad) rclb daa xchg adc dec jp or and adc xor popa push xchg push arpl js xchg or rorb mov (bad) sbb lcall incb push aas ds pop inc push dec sub cld sbb and outsb and adc cmp movsl aad push leave lods in add pop xor movl xlat fadds fldt (bad) cltd (bad) xor dec pop jno cwtl movsb call mov add cmp aas xchg xor cltd pop adc pop ljmp cld aas jnp add lret mov push push sarb loopne es xchg cwtl lcall (bad) mov jp add call js inc lret aas loop mov or add or es stc imul mov mov jp and push (bad) or nop (bad) out pop adc ljmp and jmp pop mov movsb ss jp mov add push movsb fwait inc inc in repz (bad) jl sbb es jns sub cmp mov pusha push mov cmpsb xchg mov cltd mov dec add jmp mov jg mov pop mov rorb xor je mov dec push cld sub mov push jne cmp ds (bad) mov push int3 adc sub cmp xchg mov mov mov inc xlat mov or lea sub and dec insl fwait or mov sbb inc mov xchg cltd loope cwtl cmp jo adc inc test loopne adc repnz pop hlt xchg push jb add add mov aaa aas mov rclb rorb lcall lds inc or aas shrb or (bad) dec test mov pop scas scas and (bad) and inc fstpl adc add ja cmp hlt adcb mov outsl dec and (bad) out ret (bad) or test enter dec aam sbb and cltd xor iret mov sbb mov adc call and adc sbb add push xorl add jmp data16 fcompl aad xorb mov push mov add out push xor cmp xor dec or xor ret shll or jle pusha (bad) xor push push mov jno jle xor or sbbl mov pop pop (bad) fild pop mov inc push sub fs daa push mov pop dec fs (bad) dec mov sbb dec jle jle fs mov or or out sub or cmpsl outsb inc mov pop test mov pop push fidivr pop popl adc jbe push jmp (bad) cmp push push jg or adc hlt xchg xchg xor inc (bad) xor add and mov or mov pop mov in push enter pop pop push adc mov jge dec sbbl sub mov pop es adc adc xchg fdivr jmp dec jae ret jae sub flds adc add test sub push cmp pop add push pop add and or std addl pop pop xchg adc rclb push sub pop test pushf ret aaa pop add add add lea dec push nop push mov jmp aam push stos sub ss and mov je jo xchg pop mov adc (bad) jo adc clc cmp push or rclb test jnp ja sub mov sub lods aam icebp dec sahf mov sti push orb es cmp dec cmp and jg add add inc nop mov mov push and nop sbb push movsb out inc out sti xor fcomps (bad) and insb lret push mov cmp (bad) mov inc pushf scas push push or stos sub dec aaa dec lock inc add pop push sar imul (bad) sub call mov shl push cs sbb or rdtsc (bad) lcall cmp shl mov shr jle adc aas je jp or (bad) das loope mov and aas dec int3 and loopne push or sub es daa pushf sbb or push scas add ljmp add or mov mov mov or jg or pop dec jle mov outsb jl mov (bad) cmp pop (bad) aaa and or jnp push bswap aad jmp fwait (bad) repz negb (bad) divl in (bad) xor and dec imul sbb push outsl fs jb idivb movsl into pop or int push lods mov scas lods cs sub push outsb push dec pop icebp mov push xor lret or aas movl loope xor xor pop dec sbb pop je xor icebp inc lret lret (bad) lock pop push add pop je fidivl dec loop push push and jle pusha pop or push (bad) xchg or pop inc fwait dec (bad) mov in mov sbb inc lock push mov imul inc repz adc jns pop adc mov jnp mov xorb push insl test cmp push mov daa (bad) adc adc (bad) call cmp inc push xchg inc adcb jbe pusha push inc stc mov stos or clc pop xchg inc xchg add push jbe mov add push insb out xorl hlt test push les shlb and cmpsl xor sbb sbb xchg ror add hlt out negl daa nop sbb lods sub adc nop outsb or hlt xchg call xchg insb or pop mov xchg pop sbb add and and push adc ret and test test stc adc push inc icebp js or push adc cmp pop pusha lods xchg mull xor jo push xchg jno sbb xor call lcall xor test mov (bad) push jl pop push repz shl not iret arpl add addb add and sub or xor xor or xor adc mov fmuls jno push es mull push add sub adc jb cmpl rorb fistpl add mov call push jb add test dec sub xchg mov push daa test int3 or (bad) and cmp mov mov mov mov (bad) lahf in or mov push js push dec pop imul pop imul add jnp repnz mov xchg sti aaa shrl adc loop loop inc fimul and arpl jo movl jne repz push mov or gs rcll cltd lret push pusha rcrb mov cmp pop pushf in sub sub xchg loopne xor flds ret lcall push adc jne cmp or adc xor pop push ss inc enter or xor test aam dec and jg add push mov dec or push xor data16 cmp ljmp lahf xor (bad) xor add not and pop xor sbb lds repnz jg push push xor inc mov ret rol mov sbb pop cltd mov or sub pop into xchg stc mov out jg mov testb mov or pop or add cmp test pop shll bound js addr16 push nop aad (bad) pop adc jecxz in and lods out jl out in push cmpsl rorb jg pop xchg push jae sub pop in leave xor pop inc arpl lods mov sahf lret inc push pusha clc inc mov mov inc adc push in cmpsb (bad) jmp fs repnz pop imul lahf mov ds add xorl lret orl lret inc andb out outsl testl mov add pop dec (bad) faddp push or sysenter or movsl mov or mov out xchg jno movsl dec sbb push pop roll pop or pusha add repz add repnz call pop and xchg andb push push jg and std aad mov ja or sbb mov jbe mov and cmp inc popf js add push int3 ret ret xor push mov mov movsl sub mov push mov nop lods jbe dec xchg adcb hlt stc jnp adc aam rorb sub mov incl rolb ss cmp jge es add mov jle mov mov pushf aas inc insb and pushl pop add insl push test mov repnz pusha jb nop mov lock jnp mov push inc mov mov sub or push enter subb out mov popa cmpsl xor mov mov out (bad) pop jnp out fwait or jecxz xor es pop dec imul outsb push (bad) fstpt das or addr16 pop inc dec jmp and scas ss inc push push pop xchg imul push (bad) mul mov jae add or stos rcrl in rorl xchg cmp push pusha sub and mov jno add mov push imul sbb mov cmovle popa cmp jb (bad) mov fstpl mov jle or push icebp mov sbb mov pop addl and scas cmp dec lds or pop jbe push add icebp imul xchg movsb add lock jnp int cs and or push jecxz xchg test mov add push mov cmp push add push mov jne inc outsl adcl push divb push stos (bad) icebp mov stos jno andl push pop test cmp push and or xchg adc add iret mov sbb sub insl xor dec or lcall dec mov cltd xchg (bad) out push insb js dec bound push testb cmp stc ja or imul mov xchg cmpsb dec gs xchg push add lahf pextrw push jno call or popa ret jns loope pop jl xchg pusha inc jns mov ficom aas push movsl cmp nop and mov or movsb hlt sti pop jnp hlt xchg fidivrl nop push leave lds xchg inc std mov jmp (bad) iret inc dec push addr16 shr cmp jp mov jns cmp jmp push mov je fsubl xchg fnstsw mov adc (bad) xor cwtl sbbl dec xor xchg xor sub ret imul jmp outsl xor stc lea add mov jge push es add mov xchg neg fcom xor cmpsl cmp fisubl outsl (bad) dec add ljmp fist pop inc jmp shl lea cwtl sub insb orl mov aas xchg mov jns sbb or add mov jmp (bad) mov addr16 mov cmpsb sbb (bad) mov ljmp adc mov int3 loopne and fnsave xchg test and inc divb pop xchg cs sub add fild add sub mov jmp xchg adc arpl xor push xor or sub sti pop sub push or pop pop idivl (bad) cmp in mov jnp jg ret sub lcall adc mov (bad) repz int pop jae jecxz push dec rclb daa pop arpl cmp push xor or outsl jmp loope movsb insl add pop push ret imul push push mov cmp jmp aaa sub push mov test cmc xor in mov pop pushf aam jb (bad) push and mov jg icebp in out jle neg add fistpll sub pop stos inc cwtl stc push daa mov inc inc lret jb add (bad) mov pop push mov or jge or xchg movsb pop jecxz sub pop cmpb add mov loopne mov int3 das push push cmpsl mov mov xlat push pop aas mov ss sub pop fcoms enter rolb test and rol add pusha ljmp (bad) jmp inc ret (bad) xor add adc mov or lods sbb inc es xor push jno inc push push iret fs int pop (bad) sbb ret ret cmp movsb or mov dec add jg not ret (bad) pop aaa sbb mov push push rcrb jmp mov icebp xor xor and jns lea leave (bad) xor push loop jnp and aad pop or out add sub add and clc sub mov pop mov test cltd xchg add gs addb pop out daa dec push (bad) dec cltd inc or jmp imul lea iret out pop mov pslld cmc inc mov add push clc sbb stos add rcrl add xchg xor fst pop jg dec xor push jae mov pop pushf js (bad) add inc inc inc dec mov mov aad push push mov or sbb mov pop push sbb mov in push jg imul mov lods lahf lret inc sbb pop dec std mov pushf push das dec cmp adc in jp imul cltd xchg inc not xchg inc cwtl rolb in mov cltd mov cmc inc sub mov outsb mov add xchg dec jo adc jmp ror scas push into jne inc add pop pop pusha int mov mov pop xchg rorl jg pop mov cmp (bad) add jge mov rcl rcl dec outsl int dec cmp or inc (bad) jmp push xor jg ret or jne mov icebp mov xchg cmp pop xor rcl pmuludq mov xchg in idivb add sbbl ja pop push push xchg pusha lcall lret test push mov mov ret inc pop adc clc clc sbb mov dec lock jmp pop adc adc and test cmp fbstp lds (bad) aam insb enter adc (bad) (bad) sahf mov (bad) repz dec xchg daa cwtl mov sbb cmp xor popl fcomps sbb jp sbb in lret ret xchg pop pop cmp push imul leave dec out mov pop add xchg xchg add inc jmp push fidivrl pop push pop int pusha in mov add push pop rcr es inc sbb sahf (bad) cmp (bad) pop (bad) lcall xlat pop cmc and push xor xor lea add push pop nop mov inc jg sbb mov mov mov cwtl mov daa push mov xor and daa ljmp test add mulb push mov lcallw daa adc movsl xor bound or js shr out or vmovntps add (bad) mov sbb fs stos push mov data16 jno bound lds mov adc cwtl and (bad) xchg dec mov xchg scas lret sarb (bad) or jle ret add ljmp shrl pop jnp in dec xchg fildll movsb scas cmp enter or and (bad) fs insl push nop dec push ja fs mov dec sub xor or pop push sbb push jge clc sbb push inc sub cmc push (bad) dec imul sbbb popf daa mov cmp cld mov adc daa push sti jo pushf rcrl fs mov cld and aaa rorl or loop jle jmp rcrl popf sub and dec push daa xchg mov dec xor mov mov inc mov ret (bad) jmp inc adc mov push incl fbstp fistpll (bad) or iret sub push lahf adc dec add push mov sbb lret cmp sub dec lret sahf subl ljmp or dec or cmp lock adc pop dec add out jbe movsb or push mov push mov add mov mov iret (bad) jb jbe jns or shrl pop incl push inc cmpsl mov mov add cmp sti xchg out (bad) ror add ljmp add jl fwait pop xchg pop imul in dec dec push push enter dec xchg mov (bad) jmp cmp jl out outsb add (bad) push add mov call jae cld into dec push scas outsb inc pop push push mov dec icebp jg xor cmp movsl xlat je (bad) fdivs push push inc push in sub and mov andb mov sbb sbb sub adc push pop jecxz add add push outsl mov push mov xor cmpsb mov pusha mov mov lods add inc xchg (bad) mov adc (bad) mov adc cld jg aas out mov pop loope cmp cwtl inc push push inc ljmp bound imul xchg jmp repnz jne jmp sbb mov fsts xor jl xchg inc add loop jg lock sub aam dec rorb push mov outsl dec pop in gs into pop aas test pop mov jle pop xchg cmp cmpsb and push repnz inc pushf cmp cli jge add fdivs push or add adc (bad) jmp push cli mov movl xor xchg pop out add cli idivl loopne out arpl sub sbb (bad) pop cmp xor outsl jmp xor gs in xchg cmp xlat cltd jmp jecxz jl outsl cmp push std pop mov dec jb mov jmp popf popf in movsl jl pop cmp or jmp adc and mov cmpsb mov push push jg lds pusha jle shll icebp adc adc push xchg xchg in test daa jg mov dec xor rcl inc mov cmp sahf cmp xor inc mov or loope add push (bad) lea xlat rorb push sbb testb jg and lret rclb xchg dec or xchg subl add lret repz add jo cmp inc (bad) push mov mov push and mov (bad) jo int adc sarb push enter mov sub ret mov add add add push inc jle or and test xchg mull push push mov nop jbe cmc mov or hlt mov push cwtl lods push fiaddl adc sbb adc in xor or mov and or push dec nop ss bound push jae lods push cmp dec mov ret sahf and pop jne pop xlat xchg push and pusha push mov jle xchg mov repnz mov addl out cmc add aad xor lahf pop rcr jge xchg lds and pusha dec mov (bad) cmp dec inc scas outsb ret andb mov dec xor insw fildll repz sub or cli xlat pop adc leave (bad) inc xchg cmp pop adc cmp and push test add nop and fcompl jns,pt loope inc mov test add inc push out cwtl pop sbb or sub data16 test js push arpl sub add push stos mov xlat dec xchg mov push ljmp rcr mov mov cld outsb aas or and add pop sub shlb arpl lret mov pop jno in std (bad) inc xor xor mov cmp mov imul dec loope cmp or movups pop cmc lock jle jae test mov xor sbb sbb aas adc not push xor push stos insl hlt add js ja xchg cmpl push outsl les push stos hlt xchg call and lret (bad) lahf pop xchg dec incl aaa inc xor sub stos bound and adc pop loopne mov fs adc adc in pusha jle loopne cmp mov subl mov add out and mov sbb mov stos xor mov lods and cmp sbb sahf (bad) inc out pop adc mov adc iret gs clc push (bad) adc adc or je out arpl jmp shrb pop jno adc add leave sti xlat add xchg and sbb loopne dec pop scas (bad) push or mov jne dec or cmc xor fidiv ja lahf adc mov add push dec cmp shll cltd lock or add or gs dec (bad) cmp sti das sbb dec in dec adc ret pop add scas lds sahf cmp ss mov lahf mov xor es add popf in mov sarb rorb mov push and mov cs sub scas subl and add sub js pop (bad) push stos mov jne (bad) or test xchg cwtl cmpsb repz pop mov rol out mov in push hlt add mov jmp repz sbbl int3 js shrl push dec add test sub imul jo inc push inc stc call add leave imul xlat add xchg sub nop mov sbb mov or cwtl pop lock sbb movl out popf and loopne jmp sub adc push dec daa sahf pusha call orl dec pop mov and cmp ret inc and sbb xor popl sbb repz dec lods cmpps dec and mov dec repz das fstl xchg mov pop je aam pusha lock mov xor pop dec xor in movsl rolb cltd xor imul jno lds mulb adc fistp xor aaa test test pop loopne in cltd push or cmovo loope cwtl jl and xor pop pop cmp add fstpl pop or push fs mov mov in pop or data16 push dec pop in push jecxz lret test pusha test pop push mov push pop stos cmp push push or sub sbb cltd sub sub rcll push negb inc loope cmp push insl xor xor lods adc dec add shlb push or les (bad) pop push sbb push rorl xchg out jbe add xchg adc mov push fwait ljmp gs mov jne aas mov scas xor les das loop jo push xchg leave lahf lds inc fbstp cltd and add sti add mov cmp and int3 inc cmpsb add leave out jo hlt dec xor and lods adc push out dec scas xor and in sbb nop jne mov sbb iret sarb cmpl cmp add jg pop sbb adc or xor sti loopne push push xor or nop imul dec xchg mov stos invd mov sub pop push sbb jns cmp jge cmpsb shr mov sbb mov fst push xchg add mov xchg jne jae int xchg adc pusha rcl sti ljmp lahf add jle cmp mov pop xor jp xchg pusha or pop (bad) fisub push movsl (bad) jp push cli test xchg push rcll ljmp jle arpl fiadd jb lret int fist push scas in push fs cmp cwtl add pushf add inc pop pop inc adcl dec xchg scas ss xorb inc loop xchg inc dec or sbb mov test in sub notl adcb add fcoml sbb cmc shlb mov loopne in outsl lds scas mov stc adc push test dec add sbb sbb or sub push imul pop and cmc push and (bad) mov cmp insl mov and fcoml pusha repz cmp enter sbb nop lds push das outsb jns add mov sti ret ljmp mov or adc or sbb cmpsb daa imul sahf xor push movsl fdivl aam ficompl cwtl test adc sub cmp leave mov sub (bad) push gs xchg popf shlb pop (bad) mov fiadd lcall cmp xchg or jle sub pushf and mov in cmpsl insb mov cvtps2pi sti lock sub xor rorl out pop cli insb and pop sbb (bad) test mov (bad) mov sub pmulhuw sarl add xchg push or aas pop js inc sub cmp mov (bad) and add mov std mov cmp add mov cwtl mov mull mov and fisubl mov sbb xor and cmp in rol cmpsl mov dec adc cmpsl add mov insl lahf mov lret push and popa inc or pushf xchg fprem in and add cmp rorb add mov sub test aas mov mov (bad) (bad) inc jno add mov or add fdivs or add xor sti das rolb (bad) sbb cmp xor xor or inc lods pusha mov and jo dec cmc testb xor or out jge or sti add pop sub fcomi pop mov (bad) out rcll fs add push mov icebp lea jle outsb lds pusha arpl addb xchg test repz aaa or add mov cs gs pop data16 and cmpsb jns into xor sub pop mov sbb cld inc lods sub mov xor rcrl movsb (bad) out adc jp sahf xchg or adc repz mov testb and jae roll (bad) testl loopne mov add push jl lods sbb push lds pop inc cmp andl sub adc ret xor fistp sbb mulb loope and jecxz sbbl (bad) mov mov pop jge test pop mov mov cld dec add dec leave das insl jle cmp insb not xchg sub fist or mov inc leave mulb add push dec mov jmp mov dec mov lods leave int3 adc xchg les pop dec mov lods in stc sarb rdmsr cmp lahf movsb (bad) in xorb mov add xchg les fsubr or xchg int cwtl jae lret cmp mov ja adc cmp push pop rclb incb (bad) and sub aas ja lea mov scas pop jg,pt arpl nop (bad) (bad) xor (bad) or scas mov gs roll je inc sbb in sub mov add icebp mov pop mov rorl jne inc clc pop dec inc dec es jmp dec push xor add inc mov fstpl dec xor or jmp aad xlat mov jg dec push and jns xor test jl adc test push mov push mov adc mov stos test adc roll xchg andl jmp aad pop loopne iret jb and push sbb xchg cmp inc imul mov jb (bad) mov jge pop arpl es stos mov dec mov mov sub sbb inc daa ret in das or das leave and push in js jge push mov push lea xor push call rclb mov bound xchg push xor push ficom mov ret mov fcoml jmp push adc loop inc add push push fistl aas cmp loopne js pushf inc icebp or adc mov push cmpl movsb addr16 outsl add sub mov mov cmp push cmp mov fsubs bound icebp adc dec out fs xchg (bad) or push and les mov adc je daa lahf outsb enter cld mov sbb in cmp adc loopne add and pusha cmpsl insb movsb jbe cwtl push jmp in fs jns xorl sbb mov out adcb cmpsl and mov nop jle sbb fcompl push jg xor push pop inc in xor ss inc add mov insb dec add std out repnz in shl and inc mov rcr es or and test jmp inc adc mulb mov jle les add (bad) movsb xchg test fsubrl pop xchg push dec mov jno data16 daa push in rorl xchg outsb add jbe jns add clc stos in cmp int3 mov adc jns push sub mov push push aad or sti adcl sbb fnstsw sub sbb lret pop stc push sbb (bad) pusha arpl adc jnp add push or stos sbb inc mov les sub lods or stos sub addb sub loope xor and push pop cmp and (bad) fisttp mov mov add sbb std xor or push aaa jle jmp hlt sub cli sbbl sub cmpsl notl aad jb ret pop add add mov add mov pop mov mov add adcl push imul daa data16 out (bad) dec adc sbb loop hlt push jp add xlat (bad) and cmp xor push push xor or jecxz cltd sbb addb xor test cmp inc movsb test add add sbb xchg in nop add mov pop xchg xchg push sbb adc fcompl jp sub inc sub mov popa test xor xor xor add aas inc xor xchg mov sub pop in mov pop mov fisubrl andl jmp das inc and scas push lods adc out add cmp inc add mov es xchg fadd cld das mov pop clc and lret add call scas les pusha and loope or or shll sahf pop sub xor pusha fsubl rorl mov int3 xlat rclb imul pop jb xchg pusha (bad) pop adcb push aas jbe sar inc rolb sub enter out adc sub lock or and mov icebp enter aas mov dec imul add cmp test xor adc aas mov enter dec call into and enter stc push mov pop xchg xor je rcrb call shll and add fcompl iret out mulb mov sub outsl rcrl or and jne sub rsqrtps test mov add add dec dec dec cld xor or and add mov ds xchg ret mov adc mov daa xchg out sbb adc outsb dec add inc test pop ficompl pushf add add loop pop out pusha inc and int3 inc inc or imul or push insb cs push lcall sbb pop jbe adc clc mov mov xchg sbb adc pusha push pop decb push xchg dec daa push mov pop sub xlat (bad) mov pop loop add lock and (bad) sub lods fisubr add mov jl and outsb fsubl pop adc xchg adcb push out add and jp add mov pop mov (bad) stc pop mov movsb (bad) cmp push mov aas and sub pop loopne add insl xor inc loope imul pop mov test and jmp mov push add and push jge lahf xchg (bad) jge faddp add pusha sbb gs add add cmpsl icebp xlat sub sbb leave push lods pop and (bad) in call fstpt adc push mov add repz sbb je dec cmp (bad) repnz out sub outsb into or je sar aas fisubr cmp (bad) or loopne or mov into adc movsl stc sbb std stc dec movsb insb or push cmp lcall in and push repnz mov xchg dec repnz aam jns dec stc xor push jb mov mov lods insl mov inc sar dec lods pop or xchg roll adc add inc mov cmc sub adc fisub add push out sub les cli xor ja mov fistpl movd sbb xor cld ret mov pop mov xor pop add sbb sub pop adc sub scas xor (bad) add mov add push (bad) add inc adc es push movsl mov roll push jg pop jle mov push imul and outsl or mov (bad) arpl out fbld add div js in imul dec mov fwait das popf stos lds push push pop jl cli cld loope cmp and call cmpsb mov push fisub push pop xor and in adc fistp adc pop jecxz popa je inc test adc jecxz into fisttp (bad) outsl add xchg call idivb das push fldenv nop movsb lret (bad) fmull subl pop push repz push and add cmc sbb mov cs dec mov es ljmp cs fisttpll mov jle outsl lcall stc add loop inc cmp mov jecxz dec add dec adc xor aas loop inc push jmp dec (bad) push cmp pop jecxz dec loop enter imul sbb xchg xchg pop dec imul push pop test xchg sbb lcall mov int3 dec cmp push xchg sbb lahf pop xchg pop mov inc inc xchg or mov sbbl es push nop cmp cs fldenv push xor out sub andl aas push push push or test push mov dec outsl sahf jg lcall icebp pop push mov movsl xor jns jle push push pop push inc dec cmpsb push (bad) lods inc test sub lea xchg cmp arpl pop addr16 pop mov or adcb (bad) scas jmp addr16 add cltd jno cwtl pop sub pop cmp push pop or adc push jae sbbl ja test sub mov in neg or adc test jmp vhaddps dec xor stc jle inc push sub inc mov xor sub idivb sarb push add cld call mov jb rcrl aas sbb sub fnsave pop std sbb loope jbe sbb fidivrl das sub scas mov push lds loop xchg lods xchg in dec inc or mov addr16 jns not rcr or dec push xlat sbb inc into imul sti rcrb sub jmp rclb dec cld mov sbb (bad) fisubrl sahf sbb jb or (bad) jnp sub sub lea cltd scas jns inc mov notb (bad) or int3 adc mov add pop fldenv mov jge test mov das imul sarb fsubrl jg and add cmp mov jne pop arpl in sub inc push or cmp or insb mov or and xor fsubrl or xchg out gs cmc mov cmp or cli jae notl push and dec pop mov add xor sbb mov push adc xchg pop loopne jg sbb rcll dec xchg (bad) inc sub jle notl push sub or jle push in dec add jmp sbb not or cmp punpckhwd dec fildl (bad) sbb dec negl (bad) push push jg (bad) movsl pop (bad) divl scas push cmc or je mov jle add (bad) ljmp mov shr add cs push jmp or adc mov sbb (bad) idiv out mov add scas outsl adc cli js test push jl inc cmpl fs and lret push dec pop sbb or sub pop jbe lret addl pop test rcll or xchg sbb je sub adc inc into pop aam cli sub xchg mov (bad) nop (bad) or mov leave add inc push dec out pusha jnp or stc ja shr (bad) icebp sbb jb adcb iret pop pop scas add mov (bad) add cs sub pop pop xchg mov add inc rorb call xor sti clc fcomp xchg sub xor dec adcb mov mov push sbb cwtl pusha out out repz gs push push mov add test mov mov lret xor jg pop sahf ret cmp jno inc enter mov xor cmc cmp int stc adc pop (bad) dec jbe dec jg clc jmp dec xchg xor addl inc push jmp mov popf and add test xor or push das cltd mov push push addl pop jmp add ffree out fnsave xlat dec adc sbb cmp pusha and pop insb add insl dec add jge mov mov jecxz inc scas js lahf fs mov xchg mov outsl gs push add push out push inc dec sbb out cld arpl push out or mov in add sub pusha adc and cli dec and mov or cld xchg pop gs jnp fadds cli xlat movsb mov push scas inc sub lret adc mov loopne jne (bad) mov mov pop mov mov adc mov popa xor loop xchg push in push dec mov push mov xor adc or int or shll or stos mov in scas icebp scas dec push xor cld mov ss in mov jmp aam inc push push cmp or pop divl add mov in test cli jge movsl push mov push loope addb hlt and in (bad) xchg jne sub jle shlb loop xor dec xchg int3 cmp sbb pop repnz dec lods sbb push jecxz xchg jecxz out test pop inc scas add les ret (bad) mov xchg adc add push dec pusha and or daa icebp jge ret mov mov lahf mov add out push pop add sbb adc pop sahf ljmp aaa add (bad) add loope fcomps xor pop push call fwait lods inc mov xchg mov xchg add test xor add add cld mov jbe dec popa cwtl fwait add movsl xchg dec add add inc mov int add pop xor xor aaa ljmp sbb and dec (bad) mov inc pop inc adc mov sub jmp or mov push pop les and sub aas aas pop add inc in mov std dec add add pop ljmp push mov jmp push fs sub cmp push sbb add (bad) mov mov xor lods and call sbb jle inc dec mov adc sarb insb push roll ss idivb lret fdivs jmp in jns nop xlat push pop js pop adc es lret imul mov mov je stos lret imul loop xchg in dec push pop (bad) dec loop mov add push loope imul scas arpl and imul insl mov push mov int adc fnstenv adc xchg sub pop mov xchg scas bound enter int3 push insb xchg lcall xor add and movsl lock cmp xlat xchg nop push or ret cmp (bad) mov sbb dec inc (bad) movsb (bad) adc xchg rcll cmp mov xor pop jmp outsl int sbb test pop jge lock jp faddl jmp push and add fucomip imul into (bad) jmp sub mov subb jbe shlb icebp pop mov loopne mov inc lcall dec or xlat outsb shlb lret lcall mov add sbb push cld push add jne out outsl sub (bad) push or arpl jae (bad) ror (bad) pop clc mov lea jno and adc repz mov inc xor mov sbb push cmp inc sbb iret mov push push mov and mov fildll sub mov mov int or push push (bad) mov push mov sub push test outsl pop mov xchg lea fwait das cmpsb mov inc jl ss sub insb sbb jmp lcall xlat and push sbb cli in push sub xlat in rclb add (bad) stos cld jl and push loopne out idivb inc addl ficom jne xor pop dec in ds movsb add imul loope adc sub pop roll adc mov dec pop lret add sti add jno xlat les cmp cmp mov mov and sub xor lods cmp cs pop sbb sub ja test or stc scas ss dec mov sbb pop ja stc dec or pusha popa call push pandn insl jae mov subl and xchg adc popf mov mov sti pop jg test sub mov imul mov add test rep push add sbb popf sbb lahf pop mov jge imul fdivs push xor pop xchg jmp inc dec scas sub fwait lea jmp arpl dec push jns sub fsts lahf (bad) jecxz (bad) jbe imul dec add jecxz fistpll push leave push lret push iret cmpsl xchg cltd (bad) mov xlat cmp xor lret pop das mov ljmp xor inc mov sub cli jmp nop lahf pop jge cld jecxz or in iret push sub pop inc stc shrb insl fisub (bad) cmc gs mov mov ja dec ss cld jge int in lea cwtl arpl jl sub add shrl sbb out mov adc call or adc or dec mov sub add dec adc shr mov outsl cltd sbb inc repnz lcall pop lock mov aas repz jbe jecxz mov cmpsb inc add mov adc sbb cmp add cmp pop jl arpl insb pop xor xchg jge (bad) into jbe sub jg enter stos cmp cmp negl pop push jl cmpb sub sub pop or jmp cli xchg jb (bad) jmp frstor pop add outsb ret sub mov scas xor clc fstl arpl sub daa out (bad) jmp daa sbb test xor icebp add shrl lret mov jmp andb push pusha nop in jne pusha int3 and fidivr push insl pop and mov clc push fcmovne and add cmp jp (bad) (bad) pop jne and cmpb or dec add fs divb push sub mov sub (bad) cmc repz in ljmp push xor aad mov roll jg std ds push nop js shrb shl stos leave lods fdivrl cmp inc jg xchg cmp sarl sbb xor icebp ss sbb cltd add sbb lock push daa xor gs push sarb jmp inc push cmpsb push add aam cmpsl nop dec and ja mov pop sub lock insb xchg daa push push add pop pop lret shrl jno cmpb cmp aas push xor sbb sub (bad) jg cmp jnp ret push and aam dec xchg sbb pop daa and xor ret dec dec pop xchg push das push mov dec or push mov loope or divl mov inc push add pop and lahf iret mov call addr16 add xor clc daa xchg add mov ljmp rcll movsl push inc add inc pop cmpsb inc mov mov das call mov and insl ljmp push dec xlat call rcl or sub addb faddp adc dec and mov sahf pop gs shrl inc cmp or push nop dec push push adc xchg repz and jge add pop pop pop in fimul es (bad) cmp sub inc addr16 lock pop push cmc inc dec sbb add sbbl dec out decl sub adc push (bad) fstpl arpl lret test imul rorb loop jb pop jecxz,pt stos or cmp mov (bad) movsb xchg ja into in and mov mov imul lock xor sbb xchg sbb add (bad) or ret jecxz fadd push mov xchg pop or je pusha pop and or iret and add lds push adc test js sbb lret cwtl adc adc or and mov add pop ljmp or orl and pop or rcrb sbb lods std (bad) pusha outsl add sbb inc pop repnz pushf jno add cmpsb jg mov sbb es add ret xor xor push xor outsl aas loope and fxch test addr16 mov sbb jno addr16 or jne inc lds push add pop mov xor or leave mov leave mov inc aas std adc shlb mov rol cwtl inc enter sbb cmp (bad) lods mov push add outsl test add mov pop add sti lods and and mov mov (bad) leave dec mov lret daa xor pop mov addr16 fildll es inc outsl lret rolb jecxz or cli jmp test call add sub clc in sbbb pop imul push or sbb pop mov in aam mov popf inc xor pop int3 rcrl (bad) mov test aaa rcrl cwtl sub and mov jmp mov stos xchg in pop test aas test aam sarb sbb sti mov cmpsl pop iret sub or sarb xchg add xor hlt sbb fmull adc mov test in insl pop push or mov add add inc pusha cmp xor in push push push jo ljmp clc mov hlt imulb xlat cltd mov cmpsl sti add push cmpl dec (bad) lcall ret test or xchg scas cwtl cmp xchg arpl out push int3 xchg cmp inc bound jno pop popa pop xchg dec jmp push adc cmp dec adc or mov lock inc bound inc or loope push pop in cmp push jl sub (bad) or dec cmp mov subl cld lcall adc popf (bad) add inc cmpsb push dec inc or sbb mov fnstenv inc cmp mov das es inc xlat adc adc sbb mov stos xor testl xor mov inc add dec enter sub insb dec push test pusha shll nop jbe cmpsb xor mov push xlat or movsl xchg and (bad) and decl dec mov jl pop cwtl sbb jmp push out xchg pop adc mov imull and dec ljmp xchg bound push sbbb ljmp push push push mov (bad) adc or dec sbb (bad) mov xor mov arpl push xchg inc or movsb push in mov js pushf (bad) mov jno push (bad) inc ret pop lret add sbb iret pusha jns add lcall xchg outsl jge xchg test dec cmp adc in or push decl sti pop inc inc imul lock and xor xorb add dec pop and movsl push mov adc pop or ficoml outsb (bad) xchg add hlt stos enter scas push (bad) icebp xor sub (bad) jle repnz arpl cs pop pop shrb cwtl adc sub ret and and arpl mov mov dec loope adc add sbb dec add adc dec into or jge push pop sbb adc jle xchg popa mov inc xchg in outsl enter add add push jmp sub cli test xor jnp and xchg or xor bound gs jl push mov add rcl push stos adc jno xchg add mov imul dec fcomp in sub pop movd pop scas and xor sub sub aas mov cld pop cwtl repz mov clc add ret decl repnz xchg adcb or dec adc sbb mov or arpl or mov str inc mov popf fs pop (bad) out inc push ja push bound push sub xchg mov jo mov imul jle pusha imul cmp cltd cli sub jne popf add addb xchg (bad) lret das sti lds push ljmp add push imul (bad) jbe jo jnp mov ret sbb ror cmp lahf add ljmp cmp enter (bad) add mov mov jbe mov or xor aas xor add andl bound insb cmp mov scas and sbb or andl jnp pop out inc or movsb jo test nop xor lret push repz fiadd into push and or repnz rcrl (bad) jo xor dec mov jns arpl push inc jg mov mov mov jno dec or ja mov addr16 cmpsb nopl lods dec cmp lds les or xchg jge out jl out dec mov frstor adc jb sbb sbb shlb jecxz cmp xchg or adc dec mov test in insl pop push addr16 push xchg mov fsubrs jno (bad) loope cs pusha xchg out cmp or (bad) jp cmp cwtl pop cwtl scas xor popa cmp pusha lods fadds inc or fstl sub sarb aad (bad) push lods lea pusha cmp dec cmp call icebp jmp mov fdivrs add xchg inc xchg mov in add xor cld mov add lret pop sti xlat pop test adc dec inc cmpsl pop or fldcw mov xchg sub repz fsubrl mov sbb or addr16 fs pop xor push add test and xchg adc les lods popf loope loope sbb lcall xchg call jne mov sub (bad) sbb inc or push and lret fs aaa add rclb push movsb movsl cmp dec lods add out cld add mov dec enter mov adc jbe adc xor push pop cmp add xchg jnp xchg cmc scas sub (bad) (bad) call add push loope xor add popf sbb xchg dec fs push pop cmp jecxz cwtl and out mov and fiaddl fild sub test xorl pusha adc pop dec inc dec and lods adc xor add test leave (bad) push pusha call lods rcrb aaa (bad) int pop fimul sarl or dec jl push fucomp xor fsubl mov adc stc and inc sbb push dec imul push inc jo push xchg dec jp aas and je cmc stos dec imul adc or and and pop out (bad) dec dec and or cmp pushf inc jecxz and mov add jb std adc flds arpl sbb ret dec inc test mov and nop pop add or mov clc push stos xchg das add add cmc or xchg push fisubl sub cmp cwtl push popf out nop jmp push sbb cmpsl inc xor inc les and outsb daa dec andb pop (bad) adc push sbb orl sub repnz les ret popa add push and movsb and orb test mov imul jbe mov and hlt sub mov mov test xchg hlt popf insb xchg sub pop sbbl aaa add add and enter call or jno orl (bad) push test cmp push or scas mov push inc js test inc push jp push adc imul pavgb or xlat cld std mov not mov roll nop mov adc test mov movzbl test cld mov pop subl fnop mov cwtl or push xlat stc cmp cmpsl xchg push imul cmpb push imul shlb (bad) jnp stos xor lds dec out or mov stos cmp int3 adc add mov cmpb movsb js icebp out push pop add rcr mov mov jbe inc flds cmc xchg insb xor sub sti (bad) sahf bound jge nop test xchg (bad) ja scas adc outsb int3 push pop add out jb xchg xor icebp out xchg sbb dec or inc mov add mov add pop xor pusha xchg push out xor or enter inc loopne inc push xor aaa xorl push fwait jl fildll cmpsb repnz push add clc pushf lds mov and test pop fldl or lods or in rorb xchg popa or cmc subps bound add inc je xor xchg fwait enter paddd hlt cld push out or std push xchg jmp xchg adc mov bound adc inc push mov lock dec and movsl stos jnp cmp adc pop mov into icebp lahf add (bad) out cs lods mov cmp aam nop das mulb xchg pop cmp add (bad) or push jbe neg add fldl imul jl es mov sub insb jbe popa rclb cmp pop and adc (bad) pop jge cmp xlat sbb into cmp inc movsb add add push xchg sti cltd mov nop sarb jne es pusha addr16 stos or fnstcw dec xchg notb out mov iret int lahf or ss aas mov sub andb pop or lahf and sti pusha lds jb sub repz enter xor test sarb (bad) (bad) dec jg mov clc mov loope test xchg mov imull lods xor jns jb cs mov mov xchg das insb add pop fstpl inc mov xchg sub gs sub mov std sub add insb idivl adc mov ret insb in push mov ss mov iret hlt scas ret subl xchg fild inc fld add mov lock pusha jecxz fsubrl dec mov call add pop dec jge cmp push cwtl arpl sub mov outsl or dec test push dec sub and jp rcrl inc fidiv adc stos push mov imul lret mov add jl andb movsl movsb test mov mov fstpt lods or or mov mov bound add add pushf call xor mov inc or xchg (bad) dec dec xchg (bad) sub jno adc add in sbb cli lods (bad) jno mov jno pop mov dec pop lret int3 sub out enter add in sbb or dec push push cmp dec jnp fistpl out enter push shrl add insl fwait (bad) cmpsl push pusha or sbb js push mov jecxz dec dec data16 out and push loop lahf cmp add arpl imul (bad) xor (bad) mov jns dec sbb dec mov clc cmc sbb cmpsl xor fwait xchg push add sub xchg fsubrl shr nop in mov and jb fs cvttps2pi jecxz cmp xchg mov mov hlt add les and cld adc xchg fwait dec and push xor js rcrb or repz es xor jns adc adc clc add mov adc jp test out repz sbb sub inc sub sub jo daa pop aad cmpsl fsubrs daa adc sarl sarb cmp xchg or push inc ror xor rcll daa testb pusha sub adc pop std or (bad) xchg or es add sbb test cmp mov fs push bound orl or call and js orl shl jno scas dec rolb rorl or jp pop sbb (bad) stc sbb inc add addr16 sar jne and adc pop add enter or jmp pusha mov or add and xchg repz or sbb pop mov aas pop push adc sub jo inc sub ret push sub adc dec aad sbb adc adc xor cli insb jbe inc jp ret cwtl jge xchg dec xor hlt jno mov cwtl mov cwtl push cmc jo jne pusha pop jo (bad) cld insl hlt aam mov xchg or sbb pop adc (bad) push xchg aam jbe xchg add popf ret sbb inc add lahf pop cld xchg sbb lock out fistpll jecxz jns stos mov dec push cmp and mov xor adc dec in movsb test stc sbb mov idivl sub bound adc aam aaa and sub scas add mov xor (bad) xor aam out add adc adc ljmp leave sbb cmp cld loopne xor stos dec jns or cwtl (bad) fmuls mov mov clc hlt push adc nop or dec push rcrl je mov cli lret pop inc xor cltd aad push test xlat sub fadds jno xchg das xchg mov std pushf pop jmp adc add es dec xchg inc push ja mov or dec fisttp mov aam add sbb arpl ljmp cmp or or dec bound xor mov jo incl arpl xor push add fnsave iret cli sbb loopne add in rolb sbb xor repnz push pop mov jl rol and or in dec hlt cmpsb jmp fistp push or fcom add push scas push xor outsb mov nop lret xor jno in scas mov cmp test add pop dec jp add xchg cli push popa aas pop repnz icebp pop add pop and xchg dec sub lods jp mov xchg dec or add lcall cwtl mov xchg push test arpl je mov mov lahf xchg stc inc mov cmc mov jl xchg testb repnz out insb add pop or xchg pop rorb inc leave adc btc mov (bad) repz or push scas shlb xchg jb mov jbe cmp cmpb adc jnp add lea iret add fwait inc inc jae cwtl imul cmp add (bad) xor adc leave adc xchg dec mov cld jp sub or xchg in xchg sub mov in jmp repnz pop lods push inc sti outsb nop je sub xchg add (bad) je add jp and sbb sbb pusha aas mov sub push rcll cmp cmp jle xchg xchg loopne dec sbb lock xchg hlt jle ja mov inc mov ficom daa es inc fidivr add jge jns mov add cmp pusha scas add leave cmpsb and pop and dec and inc out add jecxz jae adc mov ds stc xchg lock mov dec out jge push push subb sbb push or (bad) xor push data16 fmull imul add repnz call push mov test data16 das sub add add lret (bad) jno ret repz adc xor flds xor push scas (bad) xorb sub sbbl sub subl and pop outsl sbb jns add ret jg push call pop xchg lods mov and pusha or mov dec or lock bswap mov out xchg pop call int mov lahf dec sub (bad) in and xor push mov jmp loopne bound pop add punpckhbw and inc sbb push call inc xor (bad) repnz inc dec fbld inc jmp cwtl add inc xor mov shrb movsb imul into int inc jo inc add xchg mov mov xchg push adc insl xchg adc or and push jp pop add pop xchg jns add andb je lret (bad) mov inc push pop sbb (bad) sbb mov mov aam fcomps fadds shr mov notl movsl icebp lock dec aam or sub add pushf cmp popf scas dec or and int jne pop and inc (bad) cmp mov push adc and out es xor inc (bad) mov outsl mov test std in (bad) outsb mov push pop out outsb pushf (bad) pop mov pop mov addr16 pop icebp movsl dec imul clc jecxz dec ja mov je inc int push push add imul inc sbb add scas xor cmp add adc movsl pusha cmp fmull sub or mov aad and xor popl sarl lods idivl and jg pop int3 jl add pusha xchg or out jle sbb pushf add int3 jmp stc je int mov cmp adc mov pop xor sarb jbe or cld add scas xchg ret repz outsl movsb cmp adc clc sub subb inc cwtl es or movsl sbb mov adcl sub es shrl mov imull mov jmp cltd fildll push mov faddl and test sahf add test add test push int3 pop dec push aas fcoml sbb out add ljmp add lahf out inc add in sbb aam aad jbe inc loopne fidivrl aas dec cmpsl and pop push cmpsl inc jnp ret cmpb icebp mov or add (bad) loop xor inc sbb sarb sbb inc xor (bad) popa mov push mov test test jno add ficoml xchg imulb scas je add dec stos std cmp lods mov sub sbb cmp fadds nop test fcompl cmp ljmp or pop aaa frstor ja aas mov xor mov and add sub or stc jo inc stos inc sti or mov adc pop pop lock cltd or push mov inc aas jle mov cmp sub int3 sbb nop add call or aaa jo aam pcmpgtw je adc (bad) (bad) push and cmpsl iret lea add pop outsb pop mov add or pop add inc sub mov je inc fildl lea aam add jmp mov mov insb jg testl loop mov cmp lahf repnz mov cmp xor push or adc imul (bad) aad dec inc pop jns pop movsb and and mov mov xchg outsb pop fldl or adc adc out sub pop push fiadd scas jb movsb mov mov cmp jmp pushf push xchg sar (bad) sbb ja add xchg cmp sbb dec sbbl jg dec cwtl call add sbb comiss outsb cmp adc icebp mov movsl decb loop sub mov pushf mov in mov sbb dec es loopne cmp jecxz add scas sbb or test jle movsl cmpsb arpl repz xor outsb aad pop lret fmuls adc popa incb das inc mov xor subb aam xor and mov roll enter and repz and out mov or lods adc fldt lcall cmpsl fcmovnbe sti lret push (bad) jb imul fcomps pop xchg js test fstl cs cmp clc jg mov dec icebp adc ret cwtl mov push or or out and lahf lea sbb push mov xor push and or lret out jle push (bad) in mov mov dec push add and pop les ret mov and std loope mov sbb scas movsb scas xor lea adc sub aam loope and dec dec enter sbb pop push pop inc repnz pop cmp rorl int3 jle add inc xor dec enter inc sbb mov cwtl jmp repnz fldl cmp mov decl iret mov pop lahf (bad) les inc arpl adc jns inc push inc adc and push pop sub je ret jne jmp mov and leave add adc aaa xor sahf mov sbbb and sub jne mov das popa sbb pop adc cmp imul mov fsubl rorb push notl cmp push xchg stos daa lret aam repz adc add (bad) mov adc inc les leave dec mov jo sar sbb jbe arpl dec adcb mov or ret xchg push out push sub andl mov inc and xor adc (bad) and add cmp mov (bad) or iret dec dec aad cmp iret pushl inc imul aad dec mov sub cmp cmp add test mov add cwtl adc sti add or adc test xor add (bad) cvtdq2ps xor cld sbb push cmp and pushf dec mov je lret push or mov mov jno xchg daa xor loop cmp loope and jnp and popa inc push mov dec or test cmp dec cmp sbb sub and in js lods ret addb jl xor js inc push stos sub jecxz int3 repnz jne cmp and or and pop lahf jno mov push inc pop mov mov call adc lods daa jecxz scas cld mov je jns inc mov or fldenv mov shll sub xor mov adc and push movsl mulps shll add lea pop mov and jmp add scas push jle cmpsb or sahf mov out jmp jmp inc sbb sahf test fwait cmp mov notb repnz xor shrb and jge add push popw xor (bad) xor ds bound cmp cltd push movsl inc mov sti das sbb mov sub push add push pop pop sbbl mov nop dec or dec dec cltd cwtl out adc pop ds sub add repz xchg mov or fsubr xchg xchg fidivr and pop mov loop mov pop and stos or enter iret mulb xchg loopne dec sub mov ja aas cmp and cmp adc mov xchg loope jp pop popa xor and adc pop cmpsb or aad je in psllq push jae inc cmpl insl push mov inc push in in stos add xchg div jg push jmp (bad) outsl jbe inc bound cmp testl pusha jl in scas pop cmp fs or mov mov push sbbl add inc fabs fsubrs mov sbb cld scas mov adc inc mov dec js and or inc and loope adc sub insb jl or add mov fs adc cltd cmp mov dec (bad) xor xchg adc pushf stos push xchg mov sbb mov or pushf jae ret add int3 sbb scas outsl inc push push cmp jl push sbb push rolb mov lret lds xor sarb cltd outsl je pop mov pop cmp call pusha ret or je dec xchg inc cmp add add outsl xor (bad) mov inc ret pop push add mov inc mov jno xchg or iret xchg pop gs dec int3 adcb jnp push loop pusha mov jl das jne call popa outsb outsl js and nop jo mov and popa out stc add pop xor xchg cmp leave fstl jmp or xchg mov je xchg nop add and jecxz add or xor mov inc cs adc les mov je mov (bad) jb and or adc lea push int cmc cmp into addl loope andb mov icebp insb aaa adc push inc scas mov in inc unpcklps jae add mov out es jl xchg jb ss push push push out pop add out mov adc inc bnd add inc jmp out ss xchg fdivrs add mov pop push lahf add popf adc mov xor aam test pop hlt call adc mov fistpll push push ds lcall data16 pop cwtl enter xchg mov cmp addb jne (bad) shlb push jp clc sbb mov testl add sub (bad) xor test lcall pop pop dec push leave jmp ud2 cmp sbb inc dec add mov mov jp aaa test or sbb sbb mov adc add les pop xchg push dec xor mov loope std je mulps xor testl jmp pop lcall push mov cmp pop sahf das and push mov cltd jne (bad) mov and push push cmc adc mov xchg lret pop push fstl and out pusha push dec cld ds mov or sub lcall adc repnz mov xor in add arpl loopne mov pop xchg in das add data16 xor push and pusha int3 mov daa xchg cmp pop cmpps pushl xor bnd cmp push xor stos fistp adc (bad) repz add push push or push pop test lahf loopne (bad) pusha jle and pop aas repz pusha sub pop bound movsb repnz push add pop popf jecxz andb pop sbb (bad) bound rcl lcall mov icebp pop xchg jno daa sbb cmpl or add pop dec imul data16 popa push into pop pop dec or xor lahf scas xchg push fsts mov xor mov pop ljmp mov loop and pop inc jb popa or pop mov mov pop cmp adc subb sbb cmp mov dec stc das aaa push imul lds sub and and cmp arpl and ds mov jg add fistpl pop push (bad) das aaa dec mov push sbb mov push mov nop cmc mov xor std lcall adc xor scas mov and mov dec inc push dec sbb cs or add cmp int popf test cmp int3 cs inc or jb inc pextrw push jge outsl clc dec cmpsb push or mov add jo dec push lcall mov inc or xchg jae outsb fidivrl cmpsl dec pop cmp fldl (bad) lahf and gs push xchg leave sbb loope out sar cmp jle pop shr push dec stc lret (bad) decb ret rclb mov es xchg cmp push inc mov mov xorl push into jmp mov sub push xorl sub addr16 aaa add (bad) icebp xor mov mov dec xchg lret pop push and add lret or inc outsb sub add push jl pusha jo inc js push lea sub rcl push mov jne mov outsl shrb aad push (bad) imull mov test stc loop push push stc inc jmp xor sub cmpsb xor fwait jp push mov sub push or out in sub dec inc push fs and xlat or imul adc sub or loop pop dec pop or inc or hlt sub xor pop adc fwait pop add and dec jae dec cltd pop add mov addl and jbe add adc xor dec push adc idivb xchg les out add dec jg jg mov and push mov inc jle insl jl testb pop jge xor jae hlt adc mov jne jnp pop push decl jge mov and mov push sbb mov int add mov push cltd dec pop bound xchg mov adc jmp es mov (bad) sbb lea test jbe out imulb push cmpl loop (bad) pop dec int rcl in dec push bound or fdiv push mov jg loopne mov jb pop mov mov aas mov jne int3 stos push mov shrb out dec outsl in cmp mov jecxz bnd dec test xor ret rclb ficoml iret leave pop in das js mov mov test and push leave xor or flds int andb jp xor pop sbb repnz cmp jle xchg pop xchg cltd sbb jmp adc lea rcrl push xchg imul cmp mov pop pop out int3 aas push pop sbb mov mov or (bad) fs out dec push mov pop push push dec stc mov shl xor ljmp icebp xlat inc dec dec roll loop pop in ljmp (bad) fmuls push ds cmp sbbb test pop call and push dec dec mov sub dec int push jne lcall pop pop ljmp cmovnp mov loope pop mov cld jg push jno dec mov sub in jle inc jae xchg lcall stos mov mov or xor clc movsl jae push sub lcall fs inc jbe vmread (bad) xor insb jl test xchg or mov xor push push or fldl sbb cmovge mov xor mov std adc fstps or rcrb scas lret pop push cmp jl pop push push popa pop arpl mov (bad) mulb push aas push (bad) aaa scas cld mov pop mov add repz add dec sahf in imull pop or and (bad) push cwtl push das add shrb ljmp xchg es cmpsl sbb outsl cwtl jae push bound orb mov insl xor push dec rcll adc add sub push pop mov inc sub push xor shrb push das leave adc push repz adc cltd sarl jl lret call daa loope push jbe les jecxz loopne fucomip and adc jp repz movsl imulb jb jmp pop pop dec lret clc pop mov popa jmp dec jmp test out pop repnz xchg mov cmp orb (bad) rclb jmp push or dec mov adc daa mov and push pop and add mov call add adc mov mull add ljmp cmovle aas (bad) cmc setge (bad) xor pop push push pop mov push mov (bad) jns add adc out jle jbe xor lock sbb push xchg cltd add loopne rcr or punpckhdq adc popf repz rorl das idiv dec clc sbb jge in pop inc fbstp inc add nop lcall add out ss imull or sbb gs mov loope pushf aaa les inc xlat sub (bad) cmp movsb cli lahf test adc sub inc and jnp and pop mov mov or inc test add dec test mov pop lret mov inc fcmovu jge or push in sahf mov pop sub cmpsl scas mov xchg cmp and mov xchg in iret mov pop and repz and push sidtl aam add subl mov push mov scas and cmp sbb add (bad) jne imul orl dec pop stos das and push xor pop jg daa mov mov cmp ret dec adc sub jnp push push aam jl js push out clc xchg cmp jp sbb stos iret cld cmpl arpl aaa movsl jno pop dec call (bad) fistpll mull add pop mov xchg xchg adc and push pop cs addr16 and pop adc fadds adc dec jmp add inc fwait mov jecxz pop sbb sar and cli enter iret push jle inc and pusha xchg js rorb fistpll cli or jae subb adc jo sbb addr16 in or ret push sub push mov mov sarb sbb dec frstor cmp (bad) lret dec xchg lcall mov shr sub push sarl dec lods sbb mov push push cmpsl je out jge das mov (bad) stc jmp loop add push xchg jns stos ret mov popf stc jnp xchg cltd scas inc dec movlps ja aam add fldl inc test sub xchg lock sub jnp xchg jns or outsb gs and mov add jecxz xor cltd pop add ja pop pcmpgtd add xchg and out and pushf cmp fildl (bad) fiadd test adc jle lods sub adcl mov pushf aaa cmp jnp repnz and pop cmp in add sahf sub mov mov cmpsl nop sub push daa pop jp popa outsl ret cmp xor pop fnsave repnz insl xchg scas adc pop movsl and into cwtl movhlps (bad) mov aam add xlat jecxz sub pop or xchg fmull jl fcoms xor fadd pop mov cltd shrl push out insb cmp js push scas mov push rcrl mov sti sub sbb loopne nop fwait idiv es mov mov fisttpl and popf push gs pop dec or xchg mov stos or pop jle dec jmp adc pop rol xchg push cmpsl notl add jge roll xchg mov or mov in fstps push out daa sub xchg jge mov cmc jbe rorb add add in or outsb jg sub cltd sbb push std popl jmp test rcrb inc js lds imul adc (bad) mov fild arpl push add mov (bad) icebp xchg pusha push mov loopne push hlt xor rolb xchg aaa mov adc lret mov xchg pop xchg ret and add out gs sbb (bad) pop sti int3 js xorl push xchg or (bad) jg push sub daa jmp jne mov mov mov pop test rcll das mov cmp mov inc jbe dec jge xchg pop mov jmp (bad) (bad) popa rcll aas xor mov sub xorb mov or shr rorb out xchg jnp xor mov ror jecxz jo sbb dec jnp add hlt fist mov nop add dec add add data16 bound jecxz shr and cmp cmp shrl jmp sub xchg fsqrt test or mov cmp repnz mov push sub sub ja xor fwait dec lds mov loopne push mov push sbb or loopne loop xchg mov das push and mull cvtps2pi xor nop inc out inc fistpll jp out outsl jge or or cmp retw bound add stos dec jmp mov jnp sub loopne rep lock dec pop idiv fwait ljmp add testb js (bad) add push cmp xchg sub xchg cmc pop and jecxz shrb dec fild jmp push dec gs cmp shr add imul lcall pop jo jp xor fisubrl add adc adc aad push and and sarb addr16 lds pop imul add lret fldt add shll cmp add popf pushf pop int and pop and xor cltd add mov adc pop add push cmp push scas sahf push lea aas and push popf fs sbb add mov pop movl and fwait or add pop ret in les xor mov inc sbb aaa push cmp in push xor in inc push and add ret push lahf push xchg jae imul xor mov jne or faddl mov ds maxps stos adc inc mov cltd sti and decb (bad) (bad) (bad) or pop ret xchg mov mov add cmpsb loope push aad xor lahf nop add inc fstpl outsb adc add adc cs lcall sbb jnp sub push add in push test fs in mov jl jo addr16 or loop lods fs or inc xchg add repnz add int push pop and lock or push mov dec mov or inc cmpsb mov roll fucompp dec out mov cli dec xchg push (bad) andl andb xchg popa leave repnz daa iret add xchg push in mov add imul jl push mov push jnp jo fbstp or push aam lock not xor mov xchg xor adc add lds test inc loop jae mov cmp (bad) cmp dec sub loope inc popf cmp pop or xchg sbb xchg or push lahf mov or or inc dec decb cmc int aad cmovg xchg mov and pop xor lods sahf mov clc xchg or leave sbb and int mov stc mov stos add cwtl fsub jmp mov push in cmp xor push sub in popa ja xor mov (bad) inc mov lock sub mov ljmp inc lock out (bad) mov in sahf push push sub cli lahf popa mov out test push push sub popa push cmp add mov nop push (bad) je pusha push repnz (bad) jo addl and push iret dec dec xchg and cmc inc call push jnp jp pop rolb xchg jb lea sbb sahf jae or js fiadd jo bound add cwtl hlt (bad) xor fdivs out push mov or (bad) movsb iret lea int3 or mov and test inc aam xchg xor pop lods jo or arpl push xchg (bad) mov and mov sbb add mov fisttpl aas (bad) iret pop adc loope lock xchg pusha xchg aam (bad) lock pop data16 mov mov and (bad) mov cmpsb mov (bad) orl mov imul cwtl mov mov pop aas adc jno cld add icebp repz lock lds xorb ficompl fimul jo pop cli lcall pop das xchg mov push lahf aam leave dec xchg pop enter and rol test add ja icebp (bad) repnz hlt leave hlt wbinvd or stos add push add and cli add aam loope inc subb addb or fcmovnu sub int3 add jle leave inc loopne dec add dec push test adcl mov pop sub cmc test mov xlat mov mov mov (bad) xlat pop daa inc fcoms sub inc enter pushf pop push imull fsubrp add xchg ds les dec (bad) push adc add sub push movl sbb stos dec add push mov dec jmp mov dec and mov inc cltd andb mov rcr outsb minps dec fisubr cmp nop aam rcrb xchg mov addl loope mov add fdivs xorb xchg mov mov mov lret ds fidiv xor and dec test rcrb inc cwtl mov pop and sbb push js in push nop sub or aaa fwait cmp ret and xlat add fistp add adc push fmul fsubl mov cs mov dec xor movsb fadds fxch addb fwait inc loopne inc ljmp insl mov add int enter mov lds fldcw mov xor fldl mov mov add sahf mov faddl mov data16 inc inc lret or mov lock pop sar fimul iret jmp jb mov or mov les aas mov and pop sbb mov sub (bad) mov es add sbb inc (bad) clc push sbb dec (bad) sub xlat popf das fwait mov sbbl movsb lret (bad) in or jg xor jl jmp fadds popa pop xor adc sbb or ljmp and xchg and and movsl adc sbb fmul add mov jmp jnp add adc int sahf out test xchg pop mov inc dec or lret and addb in insl movsb xor mov cvtdq2ps cmp or add add push rorl sub fdivs dec pop xchg sbb push je,pt aam orb cmp sub popa fnstenv pusha pushf mov lcall faddl dec mov sub fwait add adcb adc ljmp mov into (bad) mov adc and (bad) mov cwtl add faddp jb roll insb aam mov cmp in lds add mov pusha lock pop out sub push lcall and add and test inc mov popf or (bad) mov test mov nop inc rclb sub mov mov and mov lahf rcll les and or pop mov fwait or mov xor jp scas sbb mov test or inc mov mov pop sbb cwtl and stos xchg mov mov fidivr aam leave push add xchg mov shlb pop jae mov hlt daa mov sub subl ja xor cmp (bad) sbb dec push mov add stos sub lock rcrb jae (bad) mov mov shrl jl and inc lock jle jmp repnz push incl sub mov xchg push xor pusha push sbb sub call adc adc sub movsl push icebp or mov push mov fwait and or lods sub fsubl inc xor fdivl or xor jno mov mov add or lret push loopne ficoml and xlat and cli addr16 and push add lods es add mov mov sti iret enter and pushf xchg and sbb test xlat pop mov (bad) into mov insl adc iret addb lds addr16 inc push and mov xchg cwtl xchg sbb nop sahf cmpsb in int3 jle pop and or (bad) xchg xchg dec es cs sbb adc in xchg fsubl lock fdivrl add arpl orl pop sbb add xchg add xchg divl jne add loopne mov inc xchg in adc js pop and inc rclb (bad) in dec mov rolb (bad) icebp in or and mov mov iret dec lcall add cld jp pop stc inc mov lods test push (bad) enter jbe loopne inc cmp and dec fs cs pop incb iret mov into call cltd dec and mov outsb or mov sub push push popf in or cmp inc and sub out insb test add dec dec push fmull in xchg (bad) adc add dec pop dec mov push xor (bad) hlt jns adc aas sub adc mov int3 popf (bad) add enter inc or add add add lock sbb dec maskmovq idivl insb out mov xor enter and mov xchg movsb mov mov push mov call loopne adc mov xlat js push nop or dec in sbb add xchg xchg dec adc leave ljmp adc shrl fst rorl or and lods xorl insb mov jl loopne fs and aam cli sbb sub mov imul push jge outsb aam adc sub inc test pop xor inc inc hlt dec jno std or das lahf mov sbb cmpsl xchg sub out and pushf push cmp add cld or mov test or jle dec xchg loop mov je pushf les and rorl ljmp lods sub dec adc loop pop fisubl rorb push mov (bad) xchg cmp insb pop or push scas popa or and stos pop cld adc mov mov cmp leave or or fs or push lods or xor push loopne add cwtl mov nop cmpl (bad) ss lret xor roll loope jbe pop push add or (bad) test sub sbb fmul adc sub or inc test mov mov and mov add int3 cmpsl and repnz add sub lock lock adc in aad push dec in jl pusha add xor lret jg adc ljmp leave cwtl lods jle add lcall add les loope out mov add mov push adc test cmp test mov xlat rolb push and mov dec fiaddl inc loope mov cmpsl sarb adc cmp jl fs sub in pop and adc test sub sbb push xor cmp out cmp sbb sbb mov lcall jle mov arpl mov sub xchg test add mov ja or je mov inc xor xchg add arpl sub test xchg mov cmp aaa add popa sub mov fistpll test cmpsl movsl add mov and test fldenv repnz movsb mov mov mov fwait int cwtl pushf fisttp pop mov ret ret mov and xor xor (bad) mov lcall push cld push mov aam aas fnstcw jl add mov lea call sbb loope out lock and in test add addr16 (bad) fcoms sub jmp add cmpsl dec lret xor in shll pushf pop jmp pop out jno insb mov push inc in sub jp rolb and sti pop mov xchg gs pop repnz stos inc sbb mov add bound push inc scas mov push xchg dec push push or mov sub add repz mov jmp mov out fidivrl pop xor sbb mov or sub and push cltd and sti rcrl and dec xor pusha mov mov xchg mov js cltd add cmp rcll dec sub push fisubrl inc push cmp push movsb xlat lods das repz inc cmp adc (bad) icebp ret xchg cmpsb sbb jb lds add jl clc mov in les fidivl or mov and pop cmpsl shrb sub push lcall test adc add xchg inc out mov and or jno (bad) incb ss in dec mov or in out fmull mov mov repnz mov cmpb jge mov movsl push mov aad xor in add insl fs adc (bad) out add sbb fimull add lret ljmp push ret or inc pop addb shrb add fsub scas cltd xchg loope lret or and pop aad ffreep push xchg adc int3 iret lret into pop xor arpl or flds pop popa rclb dec jmp addr16 cmp add loopne ror push xor popa cmp inc pushf mov push add aaa ror popf sub stc fadds bound and scas fcmovu push clc mov add and std lahf adc sub pop push jae lds js test dec or xor dec int3 insb cmp push nop sub pop inc test clc sbb add sub mov xchg add pop inc xor mov inc bound pop sti push inc das adc sbb movsb enter mov mov lcall loope (bad) callw rcll or mov push push push and dec mov pushf jle fcompl xchg pop ljmp sbb dec mov sub rcr dec or rcr push mov jo movsl stos leave inc mov bound fcoms stc add test fs pusha enter (bad) fsubl (bad) mov and pop cs and outsl loope mov mov int cmp (bad) icebp jo ds add xlat xor popa xor push je and test jl fwait jle or movsb rcll push sub pusha js lcall adc or addb dec (bad) icebp fs sub mov pop sbbl in pusha and cmp lcall cltd adc lds call and inc sbb pop loopne aaa or out push and inc cwtl or bound leave rclb psrlw mov pusha inc and stos outsl jo sbb inc test jno add out pushf nop xor out add daa andl xor xor popa int3 lods call sub xchg rorl xor pop or inc xorb lret fsubs mov scas mov subb sbb pop mov or insl adc xchg inc dec clc mov out inc repnz test inc mov movsb rcl pop sbb movsl outsb jecxz dec leave nop xorb nop hlt add or gs mov inc test xor jecxz shll and out inc movsb (bad) lods (bad) xor loopne aam sub ret pop (bad) mov add jmp xchg lods xorb pop (bad) loope fcoml mov mov mov sbb xor add arpl adc int mov lock pusha loop adc cmpsl push xchg jb push test inc xorb ds (bad) and add (bad) loopne mov in iret aas sub mov js loopne mov daa and mov test jg arpl add dec xor add cmpsb iret fnop ljmp into or adc imull mov daa fidivl xorl es jge cwtl pop mov ds sbbb jp xlat (bad) jmp fisttpl clc xor lret dec or add inc jle loopne orl push rcll sbb inc or push xorl cs xor add aam xor (bad) pusha (bad) (bad) andl jge sbb out (bad) mov pop mov cmp pushf dec cld inc fs lods sbb xor mov enter fmuls leave fidivrl or cwtl ds fstps stos add or sub jecxz and and mov pusha lock movsl fsts (bad) lods je popa movsb cwtl adc test repz cmpsl fisubrl mov je pushf pop mov in out add add and and shrb scas adc les in test xor lock cwtl bndldx (bad) xchg and add sub push iret test pusha pop mov std dec lock mov arpl fcomps shl mov lahf rolb sbb movsb aad enter or sbb js arpl add mov mov std xor dec and sbb in test push jns fisubl push mov test adc arpl bound pop push enter mov mov clc lret rclb mov fprem subb repnz inc pop mov and push dec push add rcrl fs test movsb loopne dec into jecxz int3 clc arpl out fadds test arpl and sub push jp mov lods jge cltd cmp sub and icebp les cmp xchg subb loopne sbb pushf sub in divl xchg add add push (bad) cld jo les jae dec sbb arpl push bound fimull clc push add sub xor and sub out (bad) dec adc sub (bad) icebp cmc push jecxz sub js jae test push ror in test (bad) mov jp rcl dec les popa pop xor arpl cltd out fiadd addr16 into fwait pushf bswap sub (bad) dec sbb xor nop add insl or rcrb add jbe hlt dec in movsl pop ret inc fmull pushf push lcall stc es xchg xor rorb leave sar es sub jle fwait jbe push dec nop dec mov pop sbb push (bad) sub push inc pop dec mov arpl sbb aam int xor test pushf cmp add arpl scas sub mov idivl cmovnp clc dec adc loopne (bad) fisub rcll mov scas cwtl xor pop enter and add cmpsb ljmp add and les daa aam add inc xchg push jge or pushf add cmp aam pushf jb mov pop mov test shlb adc adc aas and iret cmp cmp sub lock fildl inc add pop jo les loopne nop mov pcmpeqd pop add aam adc test iret lcall orl sbbb sub (bad) addl out inc xchg imul jbe inc pushf mov in sbb jno cwtl mov cli jp pop loop sub test add lock movsl repz cmpsb rcl in mov outsl pop push mov mov ds repnz jmp dec add test jp aam mov fimul es cmpsb vpackuswb or sbbb xor cmp adc loop mov dec sbb jae jg add inc mov xor cltd and pop outsb addr16 inc outsl xor cmp fdivr scas add pop and mov jge add jecxz test icebp sub cmp outsb dec add mov inc or lcall icebp fwait ror andl and mov dec sbb nop add fsubrs and mov cmp add aad enter int3 pushf mov loopne inc stc lds push mov aam jns and jno push mov pop shrb inc mov adc and negl dec push mov popa add or fst pop or (bad) xacquire jmp adc push add lds mov sbb add xor add out popa jecxz xchg inc mov icebp imul add push adc mov push mov jmp hlt adc notl mov shlb mov out icebp jmp cmp fmull or pop pusha xor xchg in add imul push jge push data16 add jno iret int3 cmp push sbb nop and mov cmp stos pop aad fiadd faddl cwtl std dec mov nop les (bad) add xchg jp inc add dec subl fsubp shlb movl and push push mov imul add addr16 and jecxz mov xchg int stc fiaddl adc subl fnop movsb mov pop add test (bad) adc mov push pop mov loope jmp mov add fisttp in xchg xchg movsb popa pushf adc mov pop fld1 adc rolb lcall sub pop mov sti icebp ret sub jmp cmp cmpb or pop cmp pop nop or dec mov push cmpsl push in ljmp cmp mov or adc dec pushf sbb push adc jp add jns popf fisttpll adc pushf out or lret (bad) adc pop pop test sub aam or fsubrs sbb mov (bad) pushf sub rcrl adc call sarb xor int3 cwtl (bad) mov mov call shld dec dec (bad) sub adc xchg cmp out add xchg mov xor fs (bad) inc dec inc rcrb xchg mov xor (bad) xor cmc or pop je add xor je popf int3 inc or fsubrs movsb xor mov fidivrl subl js mov sub and fnstcw stc outsb lret aas pop js pushf popa int3 sbb ds xchg xor mov inc sbb les aas (bad) pop add outsl adc rcll stc pop sbb sarb xchg push fimul enter mov std adc xor add rolb add int3 and fmuls pop cltd or loop blcmsk ss lea cmp adc mull xchg xor ss pop in mov lret insl lea pop jns and dec fisubrl (bad) divl jnp in or pop mov mov inc cmp inc pop cs mov shl (bad) cmp jl sahf dec test cmpsb mov mov stos dec cmp push or sub or and sub mov sbb jmp mov iret and pop push cmp (bad) mov push bound out or inc icebp enter pop ficom xor pop or or mov dec test fadds cmp enter mov stos in cmpsb rolb or (bad) rolb mov cmpsb jmp lret inc mov jecxz or lock xchg pushf xchg push inc mov add arpl xchg fdivl jae in cmp ja add mov rcr and std repnz into add or push mov sbb out sub cltd int3 or adc faddl testb insb push mov mov dec test pop sub push int3 lods inc xchg (bad) push cmp pushf or sahf ljmp xor fmull xchg mov push (bad) testb lret inc xchg movb imul xchg test and mov lea push push fnstcw mov mov xchg dec push stos adc (bad) adc gs xchg shll add popa xchg mov mov or fnsave lods mov lcall or mov pop hlt shlb fadds aam pop lods mov inc pop pop lea pop aam sbb mov in add jmp aam pop cs xchg mov imul mov lea daa test add stc fs pusha jp push cwtl mov jl sub push addb or pusha into js add call addr16 pusha iret cmc or cltd (bad) cld cmc inc je adc test and lret nop mov gs movsl lcall inc xchg fild enter lds pop sbb jnp stos int3 pop sbb mov nop lcall popf loope cmp mov cli xchg nop fs mov (bad) sbb movsl enter xchg fadds nop push inc push into mov mov mov (bad) loop rolb test (bad) je lea in and or add pop test gs lods adc sbb inc sbbl or xchg mov (bad) icebp pusha xor outsb stos cmp or mov sbb mov add lret mov jns mov jecxz je cmp adc andb adc int3 and mov mov jle imul mov in add aad add daa pop clc aas xor test add mov xchg add inc movsb adc mov or inc sub (bad) decl popf add push fdivl insb and mov test pop daa aad mov (bad) push out lods stc sub jns daa sbb mov shl add jg aam negb add fldt add adc and push popa popf cmp jp inc aam cmpsb and dec daa and mov sbb dec push and dec sbb lahf addr16 sub mov test into (bad) xor or loop cmp out mov inc sahf pop scas push mov iret xlat into xchg dec inc ret push dec pop sbb or and jp (bad) and sbb testb or mov ljmp xor aam push sub rorl cwtl mov test sub mov out pop pop xchg push xor icebp and mov xor xchg loopne dec cld insb mov pop mov and cmpsl in sbb pop flds scas sub mov cmpsl popa mov mov rolb in pop push add call and imul stc fwait or push sbbb dec es sub test pop mov push mov std xchg dec movsw inc sub xchg adc or xchg adc push int3 andb add aaa mov js mov mov push (bad) sub inc sbb addl pop call add test jmp popf roll icebp nop cmc mov and pop test (bad) jo push std pusha fisubl cwtl (bad) mov sarb js xor or sub sbb cmc lock add add pop push (bad) push icebp es fnstcw jmp add xor and cltd add adc sbb daa and sub cmpb ds repz inc add jnp test rol mov pop inc sbb fdivl cmp mov test pusha (bad) mov or mov xorl arpl inc pop shlb (bad) add xor or push push mov pusha or data16 testl daa push xor or stos sbb test push sarb push fmulp mov movsb and or mov inc mov arpl test sub scas sar cmpsb mov add shl mov mov idivl push add pop (bad) jb pop addb sahf and leave test inc push or cmp mov push arpl and je dec pusha and xchg sub subl adc adc mov frstor sbb push lock stos cmpl scas leave sbb test xchg pop sub (bad) push daa popa daa outsl imull mov aas push aas scas adc aas ds and jmp pop rolb ljmp lea adc or lret rclb mov add popa leave hlt xor add push (bad) icebp test les and test sbb cwtl cmovae pop (bad) mov dec mov imul xchg pusha adc cli xlat mov stc add pusha sub (bad) adc xchg test or inc jecxz or mov xchg xor pop mov sub xlat lock mov and add cwtl data16 lcall pop call add dec adc movsb cmc sarb fs dec add inc pop mov add xchg dec lret andb push push rcll cmp xor dec test andb xor dec fisubrl shrb imul add fdivp (bad) cs icebp mov or mov scas mov mov addl scas pusha js xlat dec mov lea aaa add jae mov cli aam push arpl xor jge add addl cwtl inc or mov and push into pusha adc or push lods icebp loopne adc mov (bad) aaa sahf mov lock bound jp and xchg xchg in outsl lahf (bad) xor fs test nop nop leave and push pusha jmp xchg and and outsl push add movsb arpl push sub lods test mov dec sub pop test adc mov xchg push xchg (bad) and adc insb push dec cmpsb lods add mov mov lock ja in inc cld add pushf add sub lock xor ja test in jp popa aad rol arpl int3 add mov popf scas scas sbb fdivs inc int3 loop aas lds sahf fisubl add inc cwtl or xor push cmp loope,pn xor and pop subb push push sbb orl add jo or stc insb test lods int3 andl jnp cmpsb add mov add stos (bad) mov jge lods js imul or loopne dec dec mov pop or loop sbb imul fsubrl rcrb cmp or popl add inc fsubp adc cwtl gs and cwtl or and jo adc xchg and mov add jmp and xchg subb add lret inc adc inc test cmp or mov adc or (bad) mov sbb in mov pop adc dec and (bad) loopne movb and push mov (bad) and push jle in sbb ret adc sysexit jb or xor push inc pop and bound ja cmp fidivr mov mov xor inc ror xchg lods clc mov sbb cmp cmp push sbb or mov pop xchg or mov sub insb sbb push fnsave add adc aaa je jno push in jb mov mov test sub hlt mov mov or or and pop (bad) mov xchg popa repnz int3 add and movsb je dec mov add push sub shrb jno pop sti jl add std les add das inc sub sub lods andl lret mov rolb dec sbb jmp mov dec arpl cmpl inc sub insb jb add jb gs xorb out sub loope add fnstenv in leave sub fmul pop icebp iret add cmp arpl loopne push scas inc and (bad) cmp mov rorl add and xchg (bad) cld and adc sbb pusha sub xchg repz push pop dec je mov (bad) jno xor addr16 jge xchg cs pshufb (bad) scas jecxz cs (bad) pushf or orb mov and push sbb push mov add inc stos test shrl outsl add dec inc imul cs cmp data16 push jo sbb icebp jp dec xor lcall test mov or scas movl xchg cltd jno add jge and movb dec sarb sbb push (bad) test les and cmp cmp cmpsl xchg adc ret repnz out loop mov xor loopne and dec daa cmp push imul (bad) call sahf jmp push loop out sbb int3 adc std mov mov cs and mov stc push js add dec aam loop mov xchg add push jecxz adc mov mov pop arpl int3 mov or int inc std add jbe test adc cwtl clc xor cld call scas mov mov in stc xchg xor add fdivr cmc (bad) sub dec mov in xchg enter mov mov cmp pop cwtl inc push sahf in mov enter add pop fstl pop dec or mov (bad) inc lods es push dec ret lods cwtl sar jbe mov sub cmpb int3 dec mov sub push ret or les mov sbb andl mov xor add fimull in xor out imul and mov push outsl enter out sub ja stos push loopne out jo cltd pushf add ljmp add add inc icebp mov enter sbb popa sub in and js add fmull pop dec xchg inc sbb xchg rol xor leave cwtl xor dec mov mov dec xchg xor (bad) adc or lea sbb in imul xchg push mov into jmp push into xchg push in fdivs inc xor sbb lock nop and cmc cld or adc or outsb add jp,pt jle in es rclb lcall push fiaddl and fs sub call add adc popa or dec cmp shrl or or outsl ljmp xor xor xor fsts imul mov push dec dec in addr16 adc xor faddl cmp (bad) pusha xor loopne enter mov mov sbb jno mov js sbb and add push add into pusha or inc jb andb push cwtl iret xor push call cs movsl mov add add nop les push xor ret xchg mov nop inc and out into mov lret addr16 clc fdiv and popa adc dec and rclb aaa (bad) (bad) inc call mov pop jp add add stos mov sysenter test enter inc call dec sti cli jg jno fist adc jae pop out inc fdivrl aam andl sub pop jmp call mov mov add adc in adc push loopne xchg and addr16 popa or sbb push ja test int3 lcall rclb dec pop lock hlt mov outsb fadd add xchg push repz popl cmp xor xorb clc or pop xchg fwait mov out inc nop (bad) out add (bad) push jno mov js inc movsb (bad) and push and sbb popa in pop daa divb and rorb add push movsl or adc mov clc add pop mov add xor push hlt aaa dec enter mov aas inc incb or stos pop jnp xor sbb test add decl lods pop and enter es out add lock inc adc stc pusha adc adc nop jns popf mov sbb ljmp sub adc add lock test pop (bad) sarb jo cld je enter mov push mov cmpb mov push push js dec lret adc (bad) cltd mov in cwtl sbb mov imul fnstenv lods int3 (bad) mov roll or mov daa das stos out sbbb pop lds pop add mov stos sub dec pusha add clc adc xchg add cwtl add add xor stc jge xor sbb add dec dec cmp test cmp shrb xchg popf repz int pushf loop dec cmp ja adc mov cwtl add aad push je mov and jnp les and movsb in je add mov (bad) stc adc shlb and dec sbbb cmpsb add rolb mov push dec jecxz or aad movb cmpsb add jg push dec mov pushf ret mov (bad) jb pop cli loope cmp jge cltd cwtl icebp incb pop sbb imul sbb jl lret jmp add mov push xchg popl testl popf jb pushf sbb and ret cmp xor and and adc xchg fisubrl addr16 (bad) pop pusha pop dec dec sub sub mov xor xor (bad) and jecxz idiv cmpsl xchg repz adc loop or mov cmp ret pusha push cmp test aaa lret adc jo movsb fucomip loopne pop aaa add in dec push adc lods sbb cmp daa xchg mov add add sbb ret outsl jecxz pop in sub test fwait or xchg dec int3 adc or mov or push pop and xor lds push loop xchg movl and sahf push mov nop xchg rolb lock js pop int sbb mov push loop push cmp or mov dec add loope sub bound popl ja jae mov add popf fimul add inc andb sbb stc scas mov lahf or js dec add rcll repz call dec fiadd arpl mov lock cmpsb inc add arpl pushf mulb mov xchg mov lods push push and lahf sub add aas jbe dec pop mov mov mov pop in inc add push sbb push inc adcb dec dec rcr mov pop push cwtl mov mov in cs xchg int3 add lcall push rolb cmpsl mov adc push ss cld mov or daa or push fadds sub test shlb sahf insb xor mov jecxz shlb rorb or call dec jnp sbb push xor mov iret or in inc xchg fsubrs ficompl and cmpl stc mov loop pop pop cmp cmc lds and (bad) push jb or adc sbb lods cwtl pop mov mov cmp jbe call dec xor sbb cmpsl lret mov aam cwtl add adc enter aam pop stos sub sbb (bad) aas push mov lods std dec or xchg push mov xlat out daa xor cmpsb js push and mov dec add pop xchg pop addps mov add dec push inc call jns or dec add jp inc mov add out sub push lock adc dec add or ljmp adc shll add lea pop dec pop sbb (bad) mov jae cwtl in or mov add sti xor pop (bad) je and subb jo stc in mov negl rcrb sub sahf (bad) cwtl jge popa mov pop adc fs les sub add dec inc mov xorl dec inc push pop dec inc add cli (bad) jno subb mov add sti or ljmp cwtl insb or es pop mov mov cld adc mov ja mov mov into mov mov mov push xchg push gs adc inc int out ljmp xchg push roll lods leave xor pop mov jge int lahf mov lret jo xorb or lods mov hlt enter leave rorl dec push test or sbbl jmp imul pop arpl je add out push xchg std mov adc mov sub push sbb (bad) sti add es adc (bad) int rcl mov ret rcl iret sub push inc pop mov dec adc mov (bad) adc pusha mov push aam dec xchg add mov mov (bad) add cmc mov inc push sub das adc dec inc rcrb mov lods dec and cltd push xchg lods sub and xor pop test vmovaps loope ficompl fdivrs fs cmpsl mov aam lods add stc sahf cmpsb lcall popa cltd inc and add dec test add loopne loope mov adc adc and rcl xor loopne roll ret cmp xor dec jbe and aam mov add cmp push add addr16 clc hlt jg add sub in adc lods movsb pushf (bad) idiv add daa pop adc and rcl dec movntps add inc lods add mov mov mov cmc outsl scas fdiv push push addr16 shlb push enter or imul sbb sbb add jno bound mov mov inc pop test sub aad bound dec scas xchg and fdivs insb and and and add push add insl jbe lcall lock or decb or or adc or cmp push imul sub std sub mov (bad) lock int3 pop test pop jl mov fist lea rorl xor js mov mov roll dec pushf icebp inc lock jg lcall fs pusha xor and test in mov pop dec pop add repz mov jl ret and ljmp nop dec enter add loopne add imul add ja cltd xchg fdivl testb inc mov lahf xor popa jne xchg mov repz pushf negb sbb xor pushf lods pop pop add out int3 jl sahf (bad) add ret mov subl or incl dec iret add pop xchg lahf xchg mov sbbl sbbl adc in lahf jb jge push sub xchg test jmp cmp sbb sub stc jg add mov cld out adc imul mov add or jl ds popa lret adc or and or add lock jb push push inc test xchg xlat (bad) mov or es adc or fwait aaa hlt mov adc dec mov and add inc imul or add notl and and xchg scas or mov push xchg cld xchg xor mov js loop and stos imul out jo cli pop sahf and or jb lods movsl adc cmp inc mov (bad) movsb fcoml das or orb push add xor prefetchnta mov jae add (bad) insl lcall lods outsl out sub clc mov xchg nop and add dec call mov test sbb add js xchg lea or or pushf xor inc or sahf xor push daa ss nop les xchg mov pop add sbb mov cmp dec cmp mov pushf out imul stos jae or pop lea pop out xor sub (bad) ss add xchg fbld jb push aam push es fadds lds daa sbb test add cltd ss dec push inc inc clc xor mov addr16 aad jo stos enter imul outsl fimul ret xchg xor pop xchg add and lret shlb scas add jle mov pop cli xor jl pusha pop adc pop or adc repnz or pop sub (bad) and sbb or dec lods inc sub xorb outsb push and add iret jns mov (bad) jnp mov (bad) inc loop push push xor fdivl cwtl mov and fstl push bound int dec movhps mov ror push jo adc jmp push (bad) or inc cs and rorb sbb fwait daa outsl mov in icebp push or jp inc (bad) enter or pop mov adc mov scas arpl (bad) xchg add mov popa (bad) pusha add (bad) push jecxz bound xchg icebp outsb out sub out mov ret fsub rcrb push je sbb pusha adc sbbb dec add pop pop movl mov mov icebp xor arpl (bad) nop or lods push pop dec fnop and daa lret pop inc mov shlb mov shl push adc mov push add add sbb ret xchg xor pop add fidivr jo pusha dec xchg mov mov stc mov mov push lods (bad) adc sbb jnp inc mov (bad) stos test add outsb pop or adc hlt pop loope xchg dec sbb dec pop fadd and lds jecxz enter loopne add pop out aas mov mov and xor xor cmp adc mov and sub add lcall push adc or mov aas dec test fdivrl xor pop cwtl mov sahf std (bad) mov xchg or sub bnd xchg xor dec mov push or clc hlt cmp push addb and sti xor aam mov ljmp sahf clc out cli xchg sub iret mov xchg push adcb popf aam movsb pop shrb imul imul cmp push add repz sub dec js or cmp int3 (bad) pop addr16 movsl push dec movsl daa mov mov push jp out or sbb jl popa fidivrl mov xchg adc jl inc and xor xorb ret mov (bad) aaa pop xor int3 leave dec lock lret cmp mulb sar std xor ss test xchg int3 or pushf lea and xor and add cmp mov nop dec inc dec xor and add fcoms or fsub inc xor sbb pusha dec cmp jo add adc lret ljmp hlt cmp pop enter popa adc push adc aam dec push lods add add (bad) mov push cltd je push adc stos push sub mov lock mov mov push enter inc add lahf mov jne jg int3 mov mov movsl jge mov jo jmp inc clc add adc sbb mov mov sub inc adc xlat inc and push mov mov push out jo out jp adc dec inc lods sbb inc mov dec or outsb sub cmp (bad) jnp stc icebp movsl adc outsb sbb sbb insl xor push dec leave xchg sbb (bad) pop inc cmp fadd mov mov aam fs push (bad) or inc cmp add (bad) das repnz jo mov (bad) dec sub jno rolb (bad) adc xor call sbb push lods int3 mov test fsubl lods adc pop pop inc sub shll cltd daa push pop xor dec push mov leave and and jo mov cmp dec xor iret fild add js call xor cmc adc cltd lea orb add mov cmp sbb pop mov icebp sbb pusha fcomps push mov jg cli das dec ds and and xchg xor fidivl aas jp push pushf loope mov add sbb pop adcl into mov cli sarb dec xor out (bad) xchg movsl sub inc nop inc imul sub cmp (bad) repnz mov hlt sbb adc push cld orb sbb xor popa mov cmp add sbbb xchg test cmp outsl lock or rcl xchg pop dec daa push or fdivr or insb mov xor pop andl mov and sub push xor cmpsb (bad) (bad) lods inc jp popf nop xchg loope das cwtl sbb jl xchg jno cwtl adc and sbbl fistl push push lret call nop fs or mov andl sbb mov sbb xchg cmc xor jnp ss mov mov out add stos xchg int3 and inc dec scas subb sbb mov sarb mov es mov sbbb (bad) iret push mov aaa push xchg repz sub sub dec inc (bad) repnz push add jp pop xchg aad inc nop xchg stos jno pop ja inc xor pop sub lahf lcall mov mov xor add sbb dec mov dec daa test (bad) pop mov push mov pop cmp mov mov sub add cmc inc mov imul inc mov add call inc rolb push fimul out or jmp push inc adc sbb xor iret xchg (bad) cmp or loope cmp lods or jle add aad sbb aas lret fld pop mov mov jo cs xor inc pushf push (bad) pop pop jg (bad) hlt or (bad) pop xorl scas (bad) shrl aaa mov or mov lock jnp cmpb fbld jne (bad) je stos and orb ret sub cmp xor dec jno and pop xchg or push pop (bad) sub or ficom push insb or icebp sub push mov test mov loope rcr fidivr and push repnz enter les mov cmpsb lods mov push pop and add jl sub dec sbb mov insb jbe pusha in dec jo sbb mov xor call in scas inc pop scas inc pop aaa out sub insl add and mov dec dec push xor in add mov dec sub mov test test call pusha add sub hlt add (bad) stc mov and scas jmp lea lock sahf dec (bad) pop push mov push jo pop leave inc push mov push imul dec jbe cmp adc or out pop inc inc cmp sbb mov jl push aad (bad) dec dec mov xchg sbb cwtl add pushf push sub xor loopne add adc repnz mov xor loop (bad) sub rcpps div mov imul adc push push mov adc add out add int stc jecxz pop xor les sub and xor cwtl and cmp popf sarb or sti dec and dec loop push ss sbb adc mov fdivr pushf push push or mov les (bad) fidivl enter insb (bad) adc adc jno add or mov xchg cmp add arpl cmp repz lret pop cld push xor shll js sbb stc imul or movsl xchg fdivrl jo add dec mov xor sbb outsl clc push xchg xchg mov scas sub adc lock hlt orb sub mov test mov fldenv cmp xchg int3 xor dec inc push push gs fdivs addr16 jne into push adc fwait cmp imul inc loopne inc add out pusha and inc sbb mov rclb adc push popf test idivb xchg ljmp mov sbbl (bad) in add add mov pop inc fs or cmp inc movsb daa adc or dec mov push enter push sub push gs pop icebp jnp mov and in or fstpt dec sbb pmuludq icebp inc outsl adc (bad) inc xor es sub pusha sub jb push int3 cmp add jmp cmpsb test subl xlat or or fwait jo add sub push movsb bound mov push (bad) mov or and (bad) mov in pop sbb pusha push dec mov int3 inc rolb xlat mov add das ljmp lods xchg loopne sub dec lock (bad) dec repnz dec push lods push push enter pop cwtl inc push jp push test add and shrb add (bad) mov adcb push sbb mov ljmp pop add xchg push xchg pop sbb rclb and lret push push or jp orl sbb loope cmp and hlt xor pop jmp je dec add xorl notl and push fcoml insl (bad) or test mov dec sarl cmpb pop xlat popf add mov test mov xchg sbb jne dec lock sbbb mov dec pop pop jle ljmp push in pop fild xchg lods inc or popa xor add inc or es scas xor xor idivl add xchg mov push or js or out push mov scas les pop inc test loopne dec mov pop cmp adc and imul pusha mov out push adc mov cwtl jo out or mov xchg sbb fidivl sbb xchg stos and push mov outsb pop mov clc mov sub incb test jno inc or inc cld push add ret xor add or pop add insl add sbb movsb and cmp andl pop sbb mov sub push or jo sub popa and imul pushf outsb in rcrb dec inc push jge rorl jl nop clc enter pop xchg js add das add or pusha jl or test jmp cmpsb rorl mov push jns popf lahf xchg int3 notl (bad) repnz dec jo or pushf repz aaa pop cmp in mov fist js pushf ret dec inc inc popa mov and inc das pop adc les dec sub pop popl xor pop jge mov or sbb nop je push cmp nop leave mov jo out cmp fnsave mov sub push pop mov add mov mov inc pop pop in lock add bt dec mov cmp jge pop jno stc data16 sbb addl xchg lock jne rcl loopne in sbb dec pop sbb aad lock push inc xor lods insb mov or pop push and pop fnstsw mov jae sub nop push test xlat mov (bad) fxch mov add or mov pop inc (bad) loope stos repnz sbb cwtl dec aad or inc aam mov mov cld fisttpll clc (bad) lods shlb hlt lret mov cltd inc sti popf (bad) js repnz and pusha aaa jmp dec and push cwtl das nop in pushf fwait add pop pop loopne rolb mov clc fadds jne push lahf xor (bad) sbb dec cmpb pop mov gs dec nop inc jns idiv fnclex pop push rorb add xchg std xchg scas adc rclb adc pop pushf inc inc push pop out push push movsl xchg cmp enter inc dec jmp call xchg nop add fsubr fwait push cmp les add xchg add cmp add adc in test cmpsb xor loope push in fsubrs mov pop test pop or jge test xor js adc scas adc imul sbb xor mov aam jno adc pop lret adc lea push xchg or or je loop xchg add cmp mov int enter loopne or lock in cmp xchg xorl push sub add push mov or fild xor out je dec dec sbb inc cld and in xor lods popa push mov nop mov inc enter add jl (bad) lret jb arpl ficompl stos mov test imul in aam aad cwtl sub mov repnz daa out pop in (bad) cmp imul inc add lock add pop mov adc inc sbb (bad) out xchg and jnp pop sub lea test fiaddl sub movsb pop fnsave dec mov pop mov push sub cmp xor push mov adc add pop xlat mov sub sub push je jo in scas add rolb push add jmp xlat out inc lea addl mov rorb push sub sub sbb out lcall repnz push cld mov mov sub jle dec and xchg (bad) jns pop jmp add push mov add pushf popf shrb cmp jmp in or push out out cli jge sbb add xchg xchg (bad) jge or push mov icebp sub js repnz dec ss ds add dec hlt stos jg push pop cmpl ja pusha fdivrl sbb mov movsb mov hlt das scas push cmp add fisub lds stc push mov jno jnp adc lret int3 or pop pop icebp xchg cmpsb leave sbb mov outsb popf push dec dec pop cwtl adcb jle movl mov add popf fcoms dec jmp sbb jmp movsl or cmp jno or daa xlat call jo mov pop das dec int test loopne sub out rorb imul mov sbb in shl scas xorl lods pop lods or ret cmp lock cld mov jo jnp cwtl add sarb fcompl mov test xchg in xor mov and adc sub and mov cwtl sub xchg in or inc xor xor lods or sub movsl or scas push dec sub push loop and lds cltd das imul fs add mov adc loope mov add xchg mov sbbl imul cwtl pop imul xor pusha pop aas bnd lea add mov dec sbb hlt mov adc mov xor nop mov cwtl hlt arpl fmuls aam jp rorb jecxz sub ja cli scas push movsb rcrl fisubrl pop push mov and ljmp in test mov rcrb (bad) dec insb adc mov add aam push mov inc (bad) jmp pushf das adc adcb or imul pop xchg and aam lea mov jo add out cmpsl insb xor ss or sbb push push (bad) mov mov xchg pop shlb nop sub dec sbb faddl ftst push test add mov popa add cltd sar sbb ljmp adc fs mov outsb int3 inc mov jge cwtl lods mov cmpsb repz sub dec fs mov jmp nop push stc jb xchg add cld pop and mov inc and inc sub lock push xchg sub arpl cwtl add mov and push (bad) push or push inc call dec in mov (bad) and and add adc push lods or icebp adc sub nop mov xor je es cmp mov push movsb mov (bad) repnz in pop es es pop or test sub sbb cmp aam push add push imul loopne arpl xor clc mov and xchg rolb xor popa add adc adc cs jae xchg sbb push mov pop in ss cmp add rolb cwtl or lods pop add ljmp inc jp push clc cmp dec mov push mov scas and inc std sub xchg ljmp xor pop xor adc adc dec mov andb std or aam addl xor mov hlt cmpsb mov mov or add xchg (bad) mov and push or lret inc xchg fistp stos add cmc and notl add push adc pusha aam or add or mull fs sub dec adc sub lods dec out or sahf int enter fisub push cld ds or sub nop cmpsl imul or loope cmp or sbb (bad) cmp enter mov fiaddl in cmp pop int3 int push inc mov mov es pusha incb subl add movsb inc push shl nop fmuls push rorl push lock popf inc mov outsl mov loopne xor lock enter pop jp call add adc mov cmc jp jge or add xor repz inc pop enter and movsl mov (bad) adc data16 push sub mov dec mov or mov xchg push jecxz imul faddl mov xor (bad) sbb pop mov lret push mul add add xor rcrb es add xchg out pop or test cwtl dec add mov enter pop xlat (bad) mov or jbe sub pushf fs pusha xor push (bad) adc shr xchg pop or pop xchg jnp nop xchg cwtl movsb pop add fidivr mov and jae pop cli in rolb inc and push add inc insb cmp jo js stos (bad) cmpb xchg mov fs ret cmp jp dec push test (bad) lret fist xchg cmp rcl dec cld das pop hlt fs or jns fmull inc xor cwtl sbb or pop mov and sarb sbb mov enter out or cli and xchg lock push adc push andb dec mov nop push or sbb add adc mov in call jl or adc jne push pop sbb push jecxz adc lahf adcl add dec lea sub inc xchg jo adcl dec mov sub or popf nop sbb adc dec clc and xor dec xchg add sub mov xor sub fmuls cmpsb xorb in cmp add sub jl outsb xchg adc xor dec ja pop mov iret inc sub mov rorb sub rcrb pop idivb out clc push lcall sbb pop sti add xor iret rolb icebp inc push mov and lods je and xchg dec nop xchg dec call mov jo and jecxz ror (bad) stc pop sahf mov or add hlt sbb iret orl sub mov loopne rep xchg xchg or inc xchg pop cltd push mov mov ljmp adc stc sub imul (bad) fs lcall lahf cwtl movsl aad cld shrb movsb dec jb sbb in push test fadd mov fmull lds mov mov or jo add faddl lods cmp pop xchg cwtl cmp adcl imul popf push clc or mov adc dec jmp fnsave cmp test push jno jg xor pop sahf pop inc pop and adc inc mov jle add push push cmp inc aam cmp daa and mov lods int imul mov mov in (bad) dec cltd cmp xchg insl clc aad cmp pop mov push pop mov mov cltd jnp jecxz mov jl jns and push jmp push sub adc icebp add loopne dec pop mov xor (bad) cmp in cmp stc incl and cmp add out inc jmp add mov das bound cmpsl add pop or addl pop push xchg sub mov inc pop neg push ljmp or push std push enter jbe xchg push dec pusha mov enter cmp xchg hlt ljmp push testb fwait push pop cmp xchg sub fs fdiv int3 xor dec sub add or and push pusha stos push rclb lret inc popa push xchg and mov add mov cli fdivp sub shr fs out inc inc sub push lods ficompl imul stc pop adc pop ror jmp mov data16 mov add dec clc in outsl or imul sarb push les fsubs mov jo sbb jno rolb push es xchg int3 test mov dec nop jle cli jns in cmp mov mov and add push dec rcll mov xchg sbb cltd add cmp add scas nop pop mov popa jo add out sbb daa (bad) jp insb dec loopne and cs push cmp and cwtl adc mov fwait xor cwtl leave push mov and mov pop daa push mov adc mov mov pushf movsb push out lods cltd out cmp cmp pop xlat sub or out adc insb xor xor and (bad) dec fidivl inc mov push xor jl xchg cld and sub cmpl add xchg xor mov int3 inc and lea dec add pusha (bad) adc xor pop pop push mov add pop mov push sub fwait add out add cmp fmull sbb inc xchg or and lock pop adc lcall fmull cmp sahf cmp and mov nop mov ds and inc sbb sbb fnop push sbb push mov dec add mov cs pop jmp jno imul push jmp mov push cmp popa mov cmp leave aad add add in or push mov mov and les jmp inc or inc mov les add sbb les cmp push cli sbb (bad) loope pop dec xor scas pop test sbb pop push cmp inc add (bad) stc add or and and add adc add cmp adc stc add xchg push jge and push or sbb add lret adc sbb enter or jge lods mov dec mov popa dec pop popf in add loop sbb cmp insb int3 mov gs and jno iret cli xchg rcll add fsubl int3 (bad) in pusha dec or xchg jno xchg push mov in cmp faddl (bad) push jae push int3 adc add and pop mov push xchg xor lret sub mov sti int mov cs mov cld sbb cmp ljmp test pop xor inc push mov pop jns test jmp pop enter insl pop adc cmpsl inc test adc (bad) mov mov out dec or mov les lods orb push test push ljmp pop cli int3 xor adc or aaa pushf (bad) lock inc push sub shl add adc rclb test out es add mov fwait testb fldlg2 mov cmpsb lea push icebp xchg enter pop xor pop or stc jecxz sbb icebp push push mov cs rorl push (bad) cmp hlt and xor leave push ljmp or pop leave fistpl je push bound daa mov addr16 mov add stos jp clc mov jns add movsb push inc dec add (bad) mov test ljmp xchg fsub fmul lods lock push inc xchg cmp (bad) cmpsl xchg rcl or pop dec ret mov out xor pop or jg,pt or push es jb inc add enter inc aad fs fdiv subl push adcl adc pusha add in xor add jbe popa mov je pusha jl cmc xor adc mov subb je xchg mov mov stc mov out aam inc and dec insb ljmp mov mov and stc mov push cmpsl test pop pop mov lock int3 mov in das sub mov in mov pop pop lds add push push push rol push add adc and inc sub add jbe inc arpl out add xlat push pop add jne js xor push cmp lock movsb int adc pop push aaa icebp shrl es or aam pop mov repnz adc mov pusha xor sbb jl push lock mov ret scas pushf and or icebp add pop mov rorb sub (bad) pop inc cld inc lds add or mov daa push in arpl fimull fs scas mov pop js jmp iret fmuls imul fsubr bndstx fdivrs fnstenv sbb test jecxz jbe insb cwtl push xor inc dec iret aam decb sahf dec add xor mov sub and jne mov pop pop pop adc mov das mov xor cmp rcll add pusha push sbb pushf adc xor jbe and adc sbb (bad) std (bad) xchg pusha mov dec lret and cmp adcb cmpsb cwtl mov or add lods ljmp dec jge sub add pop out call jl sar mov add or in incl xorl cmp ljmp (bad) jno or pop xor pusha lods in shrl sahf test orb jge xorb pop mov push pop pop add nop mov stos mov push lcall ds lahf jb xor sbb mov add push jge jle sbb sbb push test add pushf sbb xchg (bad) mov mov repz rclb pop mov enter inc push inc je push (bad) incb xchg sbb pop icebp push jmp pop dec or jg das (bad) push cmp cmpsb add popf in int mov lds xchg les sub lods inc add and loopne pusha out addr16 cmp mov popf add inc ret test movb or adc fisttpll mov and arpl mov sub jne add out ret mov cmpb pop add jnp rcrb jne cmpl mov and push inc ficomp inc add cmpsl daa fcomps lods inc mov and mov mov or inc inc inc dec sahf fs out or sub cli add or insb jge popf cmc adc lods sub lcall enter repnz xor dec or sbb or xor movb inc xchg andb (bad) stc or push imul popf nop lods and loopne adc pop mov pop leave dec rolb pop and and and cmpsb aas enter cmp or inc xchg pop dec push push and (bad) pushf enter pusha or pusha jecxz loopne mov sub sub dec pop orb sbb xchg xchg les lods in mov or les lds push mov mov flds mov (bad) arpl dec xorb xchg mov inc dec ficomp (bad) sub cmp pushf push fsubrp cwtl ror inc ljmp sbb imul push addl xor scas inc fdivrl or js ja mov cltd and inc jecxz das xor mov leave pop cmpsb ficomp dec cwtl xchg popf addr16 mov lahf and loopne add mov dec push lcall mov arpl or inc lret ds sub mov andb jo arpl fdivrs add scas je xchg mov adc hlt adc fnstcw mov mov mov adc add enter cmp and pop cmp mov pushl bound pushf mov cmp fcoms cmp (bad) pop shrb test and push fsubrl aad in xadd dec add xchg cmp (bad) js fs popa in add andb aas call push sub dec sbb out add mov push lds data16 jb mov jo sbb xchg fdivrs cmp adc push (bad) mov inc xor icebp sahf mov mov push mov mov mov out ficom xor aam ret add fbld in nop jo fidivl adc mov xchg stc call out or enter out fidiv or nop lock mov lret int3 (bad) mov mov pusha fidivr adc mov xor ret (bad) cmp pop aaa jno (bad) pop out test jbe mov mov lods (bad) jle mov inc or orb mov cmpsl imul mov pop cld sahf cmpsb pop push inc mov enter or jge add push aas call mov arpl cmp mov mov incb fs aas (bad) cmc test pop cs int add fiadd ret add movb fsubrs inc dec add js movsb jge pushf mov adc mov lea loope adc test je popf jle inc and (bad) notl sub int jl loopne xor and add enter mov sbb xor ret add adc add cmpsb sbb fidivl fmuls data16 pusha and cmp inc add cwtl and addr16 popa imul dec xor shlb push xchg repnz xchg add cmpsb repz clc mull sbb or int3 mov repnz push nop mov pusha dec or mov pop scas dec lods xchg push pop add out mov les xorb xrelease sbb sbbl add cmpsb stos xor cmp add scas outsb push or mov cld or int3 fisubrl jnp add add in lods hlt in inc movsb and out fnstcw pop roll adc dec mov or sbb cmc jo lods inc (bad) roll in call fs mov pop lds lock orl call xchg pop movsb pusha jbe jp,pn xchg sbb mov sar mov loop xor ss cmp push and add ret jb push decl lods out cmp lret sbb inc push js fs aaa jbe push hlt arpl je faddl ljmp add dec cli rcrb lahf imulb lock push imul and and in js mov and and add stos push les sti imul fldcw test test cltd cli pop add outsb ret subl fwait or fs fstl rsm aad decl test pusha lret leave dec adc test add or add sbb mov push add (bad) jb mov add jmp mov aas sub or and ficom xchg test push mov and xor or test mov cmp sbb mov dec jns aad (bad) fmull sub xchg scas jl add jae mov inc shrb or dec dec inc push push fsubr and enter push add xchg (bad) sbb pusha mov dec dec leave add mov add sub pause clc sbb or dec inc adc stos cmpsl test mov dec scas add rcr mov pusha adc xchg and push out jnp mov je and push in notl mov orb jecxz mov gs jb sbb adc sbb dec xor sbb (bad) push add test mov mov scas out inc dec lds jne xchg (bad) arpl insb push mov sub ret or add adc jae in std dec mov dec jo lret cmp xchg inc xchg hlt xor push or pushf (bad) nop dec add inc mov inc lods ret and dec mov xchg hlt std adc enter xchg test pop enter (bad) loopne or xchg sbb (bad) int mov scas and call insb xor movsb jbe std xor fs jl mov in mov xchg add mov sub xor inc int mov sub mov sahf in inc mov mov mov into jp inc rolb jb inc xchg adc scas add setae scas or pusha and nop inc scas mov adc push hlt lods push dec lcall mov mov add cmp sub xchg sbb pusha fdivs xchg loopne pushf es (bad) jns cwtl arpl xor xchg orb or test adc xor xor repnz (bad) xor mov out fs xor add std lock andl jg rcrb dec enter xor jb or andb cmp push in lds icebp add pop (bad) jp mov loope adc cmp xchg ds pop stos mov mov mov inc xor lret mov leave iret sbb lcall cmp jbe push push jecxz push icebp outsl cmp jnp nop and add out movsb add lret add jg xor stc lret cld data16 andb mov mov add outsl bnd imul subl test dec add enter mov clc push push mov or push jbe inc pop addb out test cmp xchg inc sbb pop xchg dec mov sub or jle dec adc arpl add je xor (bad) inc push (bad) leave inc stos jae add insl aaa call xlat add cmpsl jmp mov (bad) int xor insl push cli jp leave add stos jno add push push push cwtl pop push add add insb hlt sub pop sub dec and jecxz psadbw dec sbbb jg out add lret mov std ss push sub pop je pop mov ret and mov xchg dec xor fld popa push int3 sbb cmpl pushf imul jmp push dec cmp dec loopne cmp add mov cld inc mov sub mov cmp add jne,pt (bad) stc sarb addr16 in push mov jno pop jmp nop add push add add or add inc mov mov mov add push jl out xchg mov ja cmovo ficom and roll add xlat mov addr16 add add in dec jns add test enter xor arpl dec sar add stos mov sbb jns sub or movsl cmp adc sahf (bad) std add inc aad cmp jne shll shrb pop mov nop ds add gs mov cmp sbb imulb ret mov mov aad ss inc lea mov pop add jb std pop inc push add call add fsubrl pop mov push push loopne loope mov fbld cmp inc mov inc outsl push mov mov movsl or rorb ret subb int3 mov push jge sbb jp (bad) jnp adc out sub mov ds xor sbb clc mov xor psrlw ds and push ja stc push or ljmp lahf loopne ds sub std lods test sti jecxz cmpsb rorb xchg pop jbe scas rorb and dec sbb cmp xor inc push pusha notl aam ss sbb sub sub ficompl test ret ds dec jo stos leave in js push inc xor mov add sbb pop mov add cmpsb dec test repz sti cwtl clc sub pop push add sub mov sbb outsl pusha sub dec mov push decb xlat std xor mov notb inc add push sti out mov pop mov sbb mov add rolb test push (bad) les dec sub sbb rclb inc inc call sbb jmp stc pop pop enter sbb pushf xchg push test std dec enter mov xor and fmuls xor or and rclb pop cmp push sbb push push adc pop xor mov subps jo clc mov int3 xor pop sbb icebp sbb and jo leave mov dec fs pop jmp les sub mov iret adc pop and jbe add add jl add pop (bad) ds adc out addb add sar subl stos call pop inc (bad) testl push xor pop add outsl xor push out clc jo sub stos xchg mov lret or movsb pushf add fs std repnz nop mov mov mov (bad) cmp add mov jle jns and stos add inc and aas cmp add push stos or cmp rolb frstor ret pop in jl sbb xchg push sar xchg add mov xchg std mov lods dec lods adc in adc inc push push jl sub out xchg aaa cmp or ret cmp mov rcrl xchg in test mov in adc les outsl pop and lcall push fmuls (bad) cmpsb enter call push and sbb sub dec cmp nop xchg push sbb jne pop int3 jle rcrb xchg push and mov leave in pop push and frstor inc sbb xchg mov btr and lea adc in stos xorl pop (bad) jp xchg outsl and or mov pop sub add (bad) fcoms fmuls inc push pop mov loopne rorb sub lret xor and mov sbb mov jae iret pusha jno adc test lock and sbb mov push push mov shl mov test adc mov xor xchg or jo je es movsb lods sub aas adc mov push rcrb xor enter enter int3 mov and or xor adc roll mov add dec dec (bad) jae testl (bad) cmp push test mov pop push add stos pop popa bnd pop cmp add add and aam test pop out cwtl mov pop inc xorb jge,pn lea ret sub loopne andl and icebp rclb mov push lret shrb int3 cltd mov popa mov and popa sbb fadds dec mov dec je sbb cmp outsb (bad) mov sar mov or outsl inc mov sahf pop mov pop inc or mov add pusha adc addb jb in pop into cltd mov ds and data16 scas mov sar stos push dec push or aad mov xchg popa add sti dec pushf adc and xchg sub push mov sub sbb pop imul js sbb jg fisubr lods xor (bad) xor shr jns data16 stc push add out repnz pushf push mov mov lods mov add (bad) inc pop push je ja xchg call test mov clc femms mov pop jns (bad) sbb pop fadds pop add (bad) loopne lock add ja sub jp je pop mov addb dec cmp and dec enter dec add pop ljmp sahf dec lahf cwtl test jl nop push and (bad) stc sbb cmpsb jl cmpsb hlt add mov sub jo aad lock cmp or shrb mov rcll pop mov jae push dec and sbb (bad) push test add jbe push stos test push in jb imul enter sub fiadd pusha lock cli movhlps std aas xchg xor cwtl adc dec sbb ror pop add in or and adc frstor mov mov or pop fwait mov aad dec gs rolb fsubrs idivb sub xor jne and pop (bad) pusha xchg mov xchg adc aas int fisttp stos cmp mov pop or xchg das xchg jl or fbstp ret enter adc push push cmp mov ficomp and mov inc addl adc insb pushw mov ds sbb pop jbe sub ljmp ret mov insl hlt orb (bad) jmp mov add sub jb jo mov push jnp loopne add jg ret leave out mov test mov (bad) idiv xchg push loopne cld and sub bound and mov push (bad) addl mov lock sbb inc out es (bad) je stos xchg mov cwtl addb pop sub dec sbb rclb push pop mov pop add and or fs dec mov in std addb (bad) xor bound xor cmp mov adc sbbb mov push mov pop mov or jl mov adc popa pop call sarb cltd push mov pushl sbb sub in aaa shrb (bad) mov outsl xchg mov sbb inc mov push inc movb clc hlt mov aam sbb push std sub mov fldl push mov push cmp outsb fwait in push mov push rolb adcl pushf xcrypt-ecb cmpsl lea inc add push add dec scas pop sahf les roll in push mov cmp sub jl sti xchg push (bad) fstps add (bad) cltd push call mov jno inc or add or arpl adc sbbl mov xchg (bad) in mov ljmp sahf push mov jb mov lret cmp dec subl test add repz inc jns pop mov orb inc cmpl mov pop out mov inc inc lar xor addb pushf sbb add je lock dec mov xchg in xlat orb cltd pop fistpl cmp push (bad) sbb sbb cmp or push push add roll mov adc sbb inc loop outsb sahf mov add inc sub xchg out pop or add push mov inc nop or gs and dec lods add loopne or in xchg loope adc inc mov jno mov adcb dec es inc adc dec mov jecxz ja pop pop sbb mov dec xchg mov pop xor aaa sub subb bound push in pop in cltd sub sahf xchg push pop push ret pop fsubs (bad) and inc and adc pop push scas lcall ds add mov push inc enter aas or xor fs pusha inc push xchg dec aaa test cmp into mov inc loopne adc psubd add loop je push add mov jle sarl les fidivrl or popa stos mov mov or dec push mov xchg neg jl and (bad) jbe loope mov jnp,pn add andl xor sub mov dec adc and (bad) fcom or sub dec xor clc dec inc pusha sarb mov je xor jecxz loop data16 mov mov mov rorb (bad) and or sar xorb jae xchg mov addr16 push push out rclb andb cs xchg xor sarb (bad) xor ja cmp outsb add cmp mov xchg mov ds add sbb fistl dec xchg sarb rcr push fsubrl sbb pop mov mov xchg fs push xor test mov cmp cmp (bad) in push jl sub add push xchg les popa sbb xchg cwtl inc pop fnstcw pusha adcb inc cmp jae cmp enter outsl push fiaddl mov jmp ds fsubr jle cwtl ja sbb mov and and and rol mov jecxz pop dec repz cld cmpl xchg movsl add stos push test les test int xor mov sbb cmp xor imul insl andb mov dec sti mov add in push sbb inc inc negb arpl pusha faddl mov jge mov cs imul pop and je add sbb jnp inc test call jbe int mov or lock add jae xchg pop xorb shlb inc mov fisubl jbe pusha pusha jb or (bad) mov jo inc push push inc dec sub shrb mov popa sbb mov sub xor xchg roll insl xor or and in ficompl push clc or gs lret std and mov data16 addl pop rol imul pusha pop and fcmovu mov inc mov push and cmove sbb (bad) int3 fwait clc inc fdivs js cltd outsl aam mov and in notb fwait mov jle add mov push adc xor aad pusha fidivrl ja out pop xor mov push scas add shrl adc xchg pop adc xchg das pusha repz push push dec imul add gs xchg aaa xchg jne mov mov call add jno test pop (bad) xor cli mov xor (bad) cmp mov mov jmp (bad) add out jnp mov push aas stos pop jp test lods add enter enter cmp xchg mov int3 add jne xor sbb mov imul mov and les and xor inc aam jp movsb add pusha (bad) jle xchg dec jg sub loopne data16 in adc iret sub inc or cmpsl add add ret push test lea add adc repnz neg and pusha add popa cmp ds ret cwtl inc dec adc or or out adc in sbb pop movsb mov pusha and push cmpsl fs inc nop outsb (bad) push fsubr sbb cli andb xor cmp jns loop insb sahf add aaa dec jl test pop mov mov fwait inc icebp je sbb jo xor mov in pop mov aaa (bad) mov push mov call or insb and mov sarl addb sarb scas push fidivrl jecxz and mov jo sbb push sbb cld int xchg jo cmpb add push cmc test inc lahf and pusha test xchg inc inc hlt adcl add sub enter mov sbb add mov push xor les sbb pop leave loopne sbb adc push mov add test shrl jg mov and js and (bad) mov rcrb ret pop clc jle daa and fwait add ds sub lock es mov adc fxch add insb je out add xchg jno push movsb pop add cmpsl cmp inc mov (bad) iret cwtl pop loop mov adc and mov or cmp or in xchg (bad) xchg call andb movl inc xchg pop insb pusha dec cltd sub out mov dec movsl dec sbb inc adc sbb hlt popw and push nop add add sub xor xlat sub or adc inc push push pop mov scas jb push bound arpl jge pop pushf dec add test cmp repz js xor dec jl scas or add mov and mov test xor rolb xchg cltd pop cmp pop xor pusha jb daa lods sub inc or lock cmp les fsubrs and adc test sbb int3 cmpsb mov enter popa call in and data16 clc mov mov cmpsb mov mov subb in leave mov inc rcrl pusha jp xchg enter loopne repz ret in (bad) fnstcw add movsb mov mov rcrl mov and mov mov in and mov and add xchg mov dec mov shl adc (bad) mov xchg fcmove pushf push fstps xor sbb jne fstpt pushf test mov or mov jecxz inc bsf mov sbb mov inc test adc into push adc movsl cmp or and mov mov pop add jl xorb add jmp fld das bound repnz hlt xchg adc lock push (bad) icebp std and mov ds jmp imul shrl dec adc add add xchg in loop in rcrb (bad) clc push lods lock ja hlt or das scas cld cmp shll cmp inc sub adc xchg cltd mov or aam and xor in ja call adc or mov dec pop dec xor xlat dec insb rcrb shlb rcl mov pusha sbb lahf or mov mov push outsl les mov push sub pusha clc xchg shlb (bad) inc push inc les xor cmc push dec pusha jp mov push in jno jl in cmp xchg inc jns clc jne loope sub scas or xchg enter std fwait add push mov scas mov add push js add dec fistpll and add mov xchg sub fwait and dec hlt add aaa add jo add jecxz xor jnp stos mov rolb add mov fistl add mov scas rol jae stos adc mov enter dec jnp push add sub orl sbb inc hlt sub setns in inc (bad) mov jmp dec orb call adc jo cltd jcxz out xchg mov in xchg movsb push loop leave addr16 xchg fmull test push addr16 xchg mov cs cld rcll stc mov shll push orl dec push rorb aas cwtl mov add ds mov xchg in rcl jbe sbb sbb sub fs adc and adc add or push dec sub mov or jb aam dec rorb adc les int3 mov rclb ficom mov xor mov stos mov add inc imul (bad) mov sti rorl mov jp jb add pop pop pusha adc and lcall add lods cmpsb enter and rclb leave ljmp or push loopne mov inc es pop lcall lock or cld and sbb and xchg fs pusha mov mov rcr subb ret sub imul adc orl lods mov sahf arpl and daa imul xor and lods mov fdivl andb jl xor lods rcrb sar adc mov movsb inc lcall int3 add adc pop clc mov adc pusha add sbb lds xchg fcoms movsl scas or andb lret nop jp pop xor aam aas push push shlb add mov fcomps lock jg adc insb adc fsubr cmpb inc cmp fwait adc cmp and popf jp scas pushf fmull add jnp verw push fnstsw js roll dec push xchg inc call and xchg and xor adc and adc int3 push dec xchg int3 mov xchg (bad) xchg jecxz jecxz stc movsl lea into daa push hlt bnd mov aas es cmp mov jo out shr and mov enter add popf (bad) xor repz xor sbbb pop dec in jne pushf and inc les jg sub (bad) adc or xor or and inc sub addr16 sbb sarb or std dec and adc and daa cmp js xchg std push inc pop arpl sub sbb mov add push js repnz orl and out cmp and and adc iret xchg xor aaa in test stc sarl cli sahf add fidiv jbe test add je xchg push es nop cwtl add outsl inc jge sub push push (bad) (bad) int inc or add movb or pushf jecxz cwtl sub pop stos pop jne dec cltd xor inc inc scas add pop xor test lock jle loopne out add jmp movsl or ljmp data16 movsb push ret test mov cmc mov pop xor mov push cmp (bad) loopne movb push nop mov push or sub xor push mov aas loopne addr16 cmp or and dec adc sub pop stc popa mov add movsl arpl or adc aam in push mov pop cmpsb dec clc add adc test xor test xchg rcrb cmp xchg into add push sbb es and xchg iret cwtl pop push pop test dec lds mov cmp dec add inc pop aam jge sbbl add cld inc jl ds js testb jne dec inc mov andb gs xchg push das mov icebp inc imul rsm sub or push clc sub and hlt mov stc or mov les or mov inc mov scas ja mov dec fdivrl jbe adc inc add mov push or in arpl mov adc ss add aad and int lret or mov fsub les xchg or notl hlt das inc in das cmp pop jne ret pop out inc jno cli mov mov fs test adc jb or xchg pushf adc sbb int xor in (bad) test sub add popa push cmp mov pop push dec nop pop or sub (bad) fcmove leave add imul xor mov je out cmpsb pop add adc xchg add int adc fiadd inc inc and sbb pusha in mov (bad) inc (bad) mov xor and or ss sbb rclb or ret cld and movsl adc inc pop aam ret adc adc cmp test in dec clc ror add sbb add dec movsb test xchg jge or xor inc sbbl mov and xor fisttp inc and insb inc jb push mov movsl inc cmp xor add push adc pushf hlt xchg rclb cmpsl loop inc les ljmp lods (bad) cmp pusha inc jo stc loop call cmp or push lods mov add clc mov jecxz loopne mov rorb sbb mov roll sbb icebp test enter add dec cld mov out mov fstps call lret inc mov adc (bad) jae jecxz ror push data16 cmp ss jb lods add clc xchg dec test jl pop lahf cwtl rcrb sbb aaa ljmp mov and jae or jbe inc push cmp and jnp dec or aam xorb cmp andl jge hlt jg and add push mov adc lret adc or pop test xor push into add out insb push cs and cmp in mov adcb xchg adc mov int3 inc loopne pop arpl je out or cmp ds push pushf fdivrl inc jbe,pn mov subl cmc andb hlt in mov and or cmc xchg shlb loopne xchg and call dec xchg aad and les loop push push call add movhps incl and icebp push fdivr xor pop popf rclb adc and mov jp popf and push or (bad) xor fstl inc push repz mov enter and mov pop add dec push lds lods (bad) iret jno sbb mov jecxz mov out adc jae nop xor xchg addb xchg push pop or scas roll cltd cmp mov out lock push dec or int3 out rolb and sbb in cmp cmc je nop add add dec lock dec hlt (bad) sbb pop (bad) rcll inc sub inc mulb (bad) and in call rol jo mov mov pusha call xor xlat loop add lds sahf cltd daa and or cmc jecxz repz and or xor sbb or andb add jns fild std xchg pop mov or aas pusha xor sub ss cld xor sub jo or mov sub and in fbstp push movb in or adc cwtl mov aad inc inc pop fdivr cmp mov popf icebp pop cld in les inc fiaddl add movsb or pushf mov ret mov dec sbb pop fcomps push fild cmpsb xor loope mov les xchg movsb adc addb (bad) jbe leave jne jbe add pushf push cmp dec push add xchg cmp test out stos pop pusha sub add inc paddsw inc push add aaa int3 sbb add inc mul xchg and cwtl sbb int3 dec hlt aam pop subl hlt sbb call rorb xor fimul (bad) imul sti dec or xorb xchg pop add pop or test shrl mov in cmp jmp and mov jecxz outsb mov cmpsl call add jg push in mov insl leave push or mov sbb cmp mov add or inc or out jne inc test inc adc cmc int3 pinsrw sbb and (bad) xor mov inc in jno pushf das xor add pusha lock enter and and mov mov imul cmp push cwtl mov lock sbb mov mov mov fdivrl sbb jns xor inc idivb (bad) cmp lret and loopne addb enter and in add cwtl xchg loopne ljmp enter and fcompl sub fmuls faddl call subb inc pop xchg lods pop mov pusha fs scas add sub mov mov sub xchg add int3 fwait scas and pop sub inc xor call adc jl mov adc jl add push loopne (bad) dec mov adc js cwtl xor and icebp dec xorb loopne,pn enter and inc pop out dec hlt in mov orl rcrl sbb aam into and xor cmp or adc push inc ds sbb bound pusha jecxz inc mov inc or jmp mov mov cmpsl jecxz inc pusha outsl call out cmp hlt clc xchg push (bad) sar loopne mov push xor jg sub or and fs sbb xchg inc int3 inc popa pop test es loopne or lods dec mov cs mov sbb add popa imul mov adc hlt nop and imul mov and add cwtl iret test cltd add out cmp lock in jecxz pushf add test cmc mov pop push ja add loope (bad) cmp sbb xchg pushf ljmp out cltd call and adc and inc and adc adc data16 pop and mov jo mov push sbb xor stc arpl aas lds cmpsl loop leave xor mov cmp xchg fs push mov inc add xchg subb rolb and divb pop leave cmp push cmp mov jge or andl out inc push or fisttp pop sbb pop mov dec test in aad sbb test push xor add vucomiss adc and add pop or out inc in mov sub xor mov sbb jp test inc outsb xchg or xorl out stos push ret int pop xor arpl test les mov cmp (bad) arpl mov add inc lret mov mov dec pop loopne cmp xchg inc adcb sub push js xchg mov sbb and cwtl xchg js int3 sub loop push cmp movsl adc push cmp pop sbb mov cmp movsb fcoml fstl mov pop mov mov iret cmp add mov (bad) int3 cltd mov clc orl aaa fadds mov push les adc pop xor jmp mov push fmull jle xor cmp mov mov xchg test lods lcall xchg adc or dec insb das cmp aam cmp add test and xlat or lods jmp (bad) lock push subl and xchg imul push loope (bad) mov push ds add push ret iret pop xchg cwtl cwtl cmp jmp das cmpl addr16 js,pt pop mov shr mov aas sbb or adc mov mov adc (bad) mov or lods in mov js add paddusb cmp and dec push popf sub subb cmp and daa dec in cwtl jl pop dec pushf and jns inc jg into roll sti jno bound cmpsl mov test xor rorb push xchg cmp sub (bad) pop adc adc add dec mov pop std ret into rol lea lods and enter xchg mov push dec mov xor inc pop out cmp out enter test (bad) xlat push or push out sysenter sub jmp movsb pushf add inc pop inc inc andl jg mov fstl jecxz stc fwait sti ret lea add sar cmp jge and stc jmp fsubl push sbb lret inc pushf cmp lods dec xchg loopne mov rol dec adc dec loopne or aam fnstsw in mov sub fdivl dec dec push inc xchg arpl add out ss inc mov mull lds or sbb orb lods mov fsubl adc jecxz test dec sbb lcall out testl les sbb and jmp adc je pop add cmp mov mov and pop test rclb push in in mov jbe clc push adc outsb cmp mov pop into stos lock xor push pop les adcl mov imul cwtl jo sbb xchg or push add push cmc or add bound push push out and call cmp add push pop jle enter out or mov push cmp out jbe test xor das ja and lods leave mov aaa mov iret push cmp aam lock push xor enter push cs movsb enter and xor out mov nop xor add mov xor or pcmpeqw sbb xorb pushf mov add inc lahf js arpl data16 add mov add and loopne mov jb popf or (bad) and test adc xchg mov adc xor aaa jp fdivr loopw inc cmp mov mov in push pushf in clc and and jae mov out add xchg cmp bound rolb ret and out mov mov mov push repz (bad) test ljmp loope xchg mov sbb push cmp xorb push pop xchg add adc iret test and sahf cwtl les xchg cwtl add push in mov ss aaa outsl cmp (bad) cltd mov pop mov jle je pop loope,pt lock lcall sbb lods repz call add pop adc sub (bad) xor cmp inc in mov loopne aam aas xor outsl jns and sub dec mov stos movsb shl adc push xor stos sub lods jecxz jo or jle into leave jp and add push pop inc sbb rclb dec dec inc xchg inc inc dec and jl das dec test push in adcl pop je movsl test mov pop pusha lret mov add imulb in call adc (bad) cli dec cld subl xchg cmp pop adc xchg add adc dec add out fidivl (bad) pusha and push in xchg int3 mov sbb jb scas add je cmp bound lea dec xchg aas push inc punpckhdq mov pop mov mov and mull adc in push push dec lods adc inc cwtl add cmp or jmp jecxz movsl and repnz xor (bad) cltd rolb repnz xchg jmp dec clc out jo mov adc ror mov test movsb mov sub and dec push int3 push jp adc sub cwtl xor enter dec adc adc mov inc lock cmp rcr fiadd sbb imul pusha mov jns sub in and add xorb pop or dec mov test sahf stos cli lea rcrb jmp pop pop or xchg ret pusha sbb lods sbb test or js cltd adc mov push cwtl dec repnz xchg mov icebp jg int3 pop jbe mov lock sub int3 test add pusha pop ret (bad) aad mov loope insl and mov inc fdivrs mov je fsubr add testb hlt or push dec jno orl cld cmpb iret or (bad) cmp mov dec adc sahf lds fsubrl sub idivb leave xor test mov and adcl (bad) jmp in nop mov xchg enter insb mov add pop sbb imul cltd mov sbb dec imul sbbl fnstcw (bad) jnp or rcll push inc mov lods mov mov int3 xchg test xchg movsb mov std xchg dec sub divl jl dec sbb push fwait dec or movsb sahf jne out pavgw dec xchg cmp lret sbb ret scas dec push into lret mov sbb cwtl cmp xchg mov rolb pop inc mov pop adc test cli push or mov mov lods mov pop leave mov (bad) and xchg xchg sbb imul or xor sbb sti testb dec rcr fmuls lds cmpsb aam in xchg push push and les insb xchg and sbb sets ja inc orl xchg es sub xor mov gs cmp adc mov fmuls cmp sbb mov jl push inc sahf or pusha jns addl and pusha js pop movsb test dec (bad) push sbb insl jo fldenv add divl test out add xchg or dec xchg add xor cld fcomi inc cwtl inc icebp mov or orl idivb inc jne or mov aas (bad) sbb les jae sbbl loopne fs adc dec push cmp adc xor and flds movsb int adc lods adc add or or mov icebp sub sbb insb mov hlt mov sbb in sbb fsubs sub mov mov sbb push xor mov or xchg push je pop test inc out jp sub sbb lret ror xor js pop hlt xchg lahf and fdivl or nop lahf rep jo add xlat lret add lret inc push fiaddl fnstcw aas stc movsb icebp add pop cltd pop mov push jns movsb fadds adc xor or adc fcmovb imull add pop lds pushf add push in xor sti cltd pop mov xor data16 push pop or fwait lods cwtl push stc ds pop mov xchg adc mov pushl cmpsb pop jl and dec xorl mov cmp dec es add (bad) cmp test sbb and add (bad) femms xor imul fidivl pop adc push cmp adc insl (bad) pop cmpsl mov je loope aam sub adc bound add add pop mov fdivr inc lldt in mov mov mov jl ret (bad) lods or in clc cmpsb loopne jl add repnz add loopne lds imul lea pop jecxz loope mov jg inc inc je pop mov repnz out jmp orb push fisubl sbb adc and stc add adc pop addr16 jbe pusha dec outsl out mov jns mov add dec fisttp mov andb fstpl out push movsb cmp adc push cmp xchg mov mov orl hlt inc pop dec js je mov jne andl jmp cmp imul pop (bad) cmp in out jb lcall inc inc loopne stos xchg mov sti inc sbb gs jae subl push dec pusha and cwtl inc shll xor rorb scas fucomip fiadd test xor mov pop mov cmpb lods into mov pop aaa jl scas sbb xor dec dec mov mov mov int3 orl hlt adc sub mov cmpl pmulhuw sub jns xchg hlt imul icebp mov js adc je or mov and add add jb into mov adc mov and pushf pop mov push xchg mov mov xchg pcmpgtb and push lods cli sbb inc jo (bad) lahf rclb xchg (bad) mov popa (bad) into cmp jno or in mov fdivl in fs push sub sbb mov (bad) xlat inc pusha pop fnsave mov popa cld aad rcrb add hlt jo lcall pusha (bad) or add add jle xlat addr16 pushf arpl mov in (bad) aad push mov pop movsb mov mov (bad) pop cmp xchg fs add sarl add loope adc xchg sahf mov jg js sbb jecxz jle,pn nop ds repz mov or xchg sub mov xor mov daa (bad) incl daa std insb add lcall or xchg test sub ret jg mov mov sub inc (bad) xchg cmc or inc inc adc andl mov push daa jg jns dec sub bnd add dec cld add lock (bad) adcb cmpsl inc addl fidivrl mov mov sub and jno ljmp jle mov imul sbb and ja and out and sti int3 (bad) mov test (bad) test mov in push push sbb cmp jecxz mov pop xor xchg add jnp (bad) inc jno imul add in inc or movsl mov loopne shll add outsl push out repz adc add nop imul fadds stos add out push adc inc or icebp mov add movsb ljmp or stos sub adc add inc ret push xchg sub mov jb inc std push jge (bad) push push jl or jl,pn imul cli inc push mov mov arpl lods add inc and mov jnp in mov (bad) out mov pop iret inc mov aaa repz and inc insb push push ja pavgb je jmp and js outsb push dec inc adc and jl xor adcb std or testb cmp shrb in xorl inc shrb mov cli or fwait popa inc in pop jbe xor xor outsl push int add in arpl adc ret mov popa jbe xor shrl xchg and add pusha or lods add out add cwtl sbb jecxz xor into es push mov jmp leave test test cmp sbb int sarb nop xor movsb popf inc mov adc cwtl (bad) jne add xor xor bound repz sub adc add pop aam or lock adc les test clc mov or testb lods enter push icebp sub mov xor pop and or repnz popf sub rorb inc xchg add xchg push das mov mov call dec hlt aam lock inc inc movsl pusha and dec aas jae sub add push test stc mov nop xchg sub (bad) loope (bad) cmp jb int3 jo pop inc mov mov loope out hlt pop sbb or sbb xor sbb jecxz mov aas cmpl fwait sahf insb sub call sub imul cltd orb cmp aad push ss fidivr shlb int3 cmp test mov nop mov imul push xchg dec pop test lods popf jl js,pn out add jg rol rcl lods addr16 cmp mov cs fisub cmp out enter mov xor or jae std xor or fcomps and test fild int3 cmp jecxz out push jp cmp xor push movsb xor js fwait pop lahf sbbl dec sahf sub pop inc and cmp repz xor or dec adc rcrb pop dec xlat push sub inc enter push cmp sbb add call inc and test stc add (bad) mov xor pop xor add mul mov movsb nop and inc inc int3 and data16 sbb or ljmp bound test jmp inc and mov outsb dec xchg fmuls mov push fnstcw lods je inc or sbb gs rorl sbb divl push inc ficom xchg push xor inc dec sti or xchg xor icebp pop cmp (bad) jge out mov and adc out xor mov fadds loope insl ret xor in adc cmp movlps adcb or rcrl add andb mov push cs pop fmull jno loop ret mov adcl (bad) test dec cmp adc xchg stc movsb add test rcr xorb lods adc or insl xchg mov cwtl push stos pop add in ds fimul js test loope push aas decb sbb push mov dec dec sub in push pusha xchg push jno sbb js push xor push call imul sub (bad) pshufw cmp fist or addb adc jle ds loope cld sub nop test or cld je mov or jecxz xchg dec cmpsl cli fnstcw jne clc pop fcmovb nop inc or aaa sub in or push in sbb divb xchg add xchg lods push lock cmp mov mov cmp stos fmulp adc or dec xchg fcompl repnz movsb or jo (bad) (bad) out or add faddl pop dec or mov mov add xchg xor cmp push shrb adc (bad) adc cmp mov pop insb addb sbb push scas test mov sbb push ljmp xchg add and cmp shrl adc and pushf test pop fs cwtl or pushf xor dec div movsb cmp dec aam pusha dec add jnp (bad) dec push push fucomi lret dec cmpb xchg fdivrs add xchg sbb in cltd mov jge or lahf add xchg test aad (bad) std andl fdivl adc push push enter inc xor add (bad) popa inc and jmp icebp loop inc lret adc pop ret adcb test outsb sbb enter fisttp stos inc push mov push std dec xchg lods inc daa adc add loope or mov out (bad) lret mov dec jne xor ret ljmp cld sbb outsl int3 es pop add cmpsb ja sub mov or outsb add xlat stos int3 jg or hlt adc mov sub cld stos jo clc mov mov test or out add xor sub sub mov es ret test adc adc data16 add and popa das rcll cld xchg insb cmp sbb adc and jo lret test add pop lock sbb lcall arpl jb pop inc cmp inc jle add xchg iret dec mov inc lods mov int3 dec mov call mov call pop cmpsl inc pusha or mov outsb xor cmpsl sub inc pop jns scas cmp test scas ret aad add and mov cli adc in jo adc inc sub xchg pop xor in rclb add loop adc inc loope mov lcall (bad) xor add imul sub into mov lods lret pop cltd and subb ds jl dec fadd andb pop pusha fsubs dec and adc adc scas imul push xchg call or cli repz sub jns pop pop mov cwtl adc (bad) lahf leave rcl into adc jl sbb out out in daa jecxz (bad) xor clc sbb shrl push and lahf or rclb add ficomp mov out sub inc pushf add inc jns add and add and push or rcrl faddl (bad) in dec sbb ja call xor adc mov mov add sbb ret rcrl add cmc add ds or or adc ret push adc adc mov stc enter (bad) push mov add popa in cs add mov adc call hlt sbb xor (bad) js or fadds vmread sbb jae scas cmp jp in flds dec push insl clc and sbb jmp icebp in inc (bad) aaa aam and cmp test pop cmc push daa loopne inc test and in push xor pop dec inc mov test sub in aam adc dec add mov sbb pop rsm inc sub mov add lret test (bad) dec sub sub nop mov cmpb lods cld adc xor and loopne pop mov add hlt inc jno dec rclb add mov inc adc call and pop and (bad) enter mov sbb out adc push movsb cmp or popf insl xor in les cmp enter push test icebp int3 dec pop fsubrs adc nop or movaps cltd lahf and pop movsb adc xor ss dec andl inc popf int3 js or dec clc icebp mov ret cmp and ss sbb mov xchg add xchg push (bad) jno push test cmpsb and inc mov jo out mov aam sbb fcoml iret leave cli inc pushf js or fisttpl pop add dec inc lret enter add out xor out movsl outsl je pop adc push mov pop sqrtps pop add push loope cmp sub and stc dec scas out cmp xor nop and pop rcll sbb push dec in push mov insb sub pop loopne and push xorb or in aas leave adc and arpl pop inc loop mov adc adc mov jmp jbe pop (bad) in jmp sub jl outsb xchg jecxz pushf sbbb cmpsb cmpsl mov movsb into fild clc jle outsl repz xchg add cmp jnp xchg dec push xlat loopne inc outsl or jae mov pop popf stc mov ja push push sbb pop sbb adc add (bad) in cmp or push mov add lock out inc cmp jecxz (bad) xor mov xor clc jge pushf loope loop xor add fs and pusha loop call pop xor pop cwtl ds or test cmp loopne insb adc shlb loope dec cli pusha dec jl imul popf out xor add dec std add nop pop jmp lahf pop adc add push out or mov add jb sub pop cld ljmp fwait and nop test (bad) adc pusha pop mov dec lock xor lock add jecxz rolb hlt inc pop sbb push xor test hlt movsl stc xor and pop adc lock xor daa icebp jp sbb inc push or ljmp movsb add push loopne jl pusha out push cmp and cwtl (bad) sub or sub sbb and lock xorl ret push shlb mov arpl add xchg mov inc int3 add icebp cmp jl sbb mov push out fnstsw mov and inc mov xor mov in lret cltd inc xor inc cmp push sub cld (bad) mov mov ja pop lcall (bad) mov call repnz loope addr16 mov aaa fcoms or (bad) mov xor adc sbb hlt (bad) sub pop sbb cmp or fsubl and jmp and out xor ja or jge jb lcall inc add jmp mov mov enter mov shrb sbb or cld fs mov leave leave jmp mov sub xchg icebp dec movsl sbb mov movsb repz pop and xchg dec pop jmp mov lock les hlt add out mov inc les test cmpsb mov aam loopne cltd pushf and push sub sahf pop xchg or icebp nop adc add xchg sbb sbb orl (bad) fdivr and add or cltd xor repnz inc xchg or add push mov dec scas aam jae push dec shrb shr and pop in enter adcb dec insl dec mov adc add out test ds mov inc cltd andb outsl (bad) sbb mov or aam arpl ja (bad) mov mov mov or test shrl cld inc push push push dec cmc into add push inc inc cmp dec pusha test mov ljmp imul add std sbb leave shlb shrb test in lock inc add xchg aam pop das int3 sub out aaa sub xchg flds call inc adc rol repz ja adc pop xchg icebp subl jno outsl mov push leave out fldenv in test cmp (bad) jne mov add jbe lods mov mov push aam dec addb mov xchg iret lahf icebp cmp mov inc and fistpll xor rcr adc insb les xor data16 xor push push ljmp push cltd sub and xor cli adc jge rcrl jmp sub iret aam sbb pop dec lret icebp movl cmpsl mov xchg rorb xor pusha cltd cmp pop dec (bad) xor jge stc dec push out add mov inc sbb in mov sbb cltd mov add push mov push adc decb cmp lcall and adc les mov or lock and cltd cli sbb pop aas (bad) les push push xchg pop outsb sbb add out and mov cwtl pop sbbl xor adc adc (bad) je jo push mov fmuls popl fs pop ret pop lock pop adc faddl jae or pop add cmp add add jmp andl add outsl mov pop sahf fsubrs icebp jge add ret std sbb insl mov or jmp inc clts nop mov add and xchg fistpl pop add inc ljmp pop (bad) fcoms jg add aas daa xchg jns andl mov mov pop pop sub add cwtl push ret adc cmc rclb and add pop mov clc and in push andl loopne mov pop in ret cmp xchg push and fidivrl pop mov jns subl sbb xchg nop jl ret pusha aam (bad) xor sub or sbb daa sbb push lods cld stos xor cmpsb jo inc pop fdivl xchg push lret imulb or mov test mov in add mov loop (bad) test inc cmp out dec bswap mov sbb loopne fs lock pushf xchg in sbb daa adc jae inc inc inc push push xor and mov cmp add sbb fwait sarl jle cmp xchg inc push js stos inc je push add adc cmc lock sub cwtl pop dec and push and clc repnz mov xor mov aas xchg call sbb xchg add ljmp insl imul ljmp xor es cmc push in lods movsl cs cs adc pop adc shlb jecxz push mov ja fstl inc add push lahf int3 adc xchg cmp xchg sbb xchg adc jbe push add enter imul add mov add iret cmc (bad) (bad) sub dec or add sti cld xlat cmp insb lock inc dec stc dec nop (bad) add add sub sub (bad) push jne add add mov jne xchg dec sahf push add mov rolb dec cmp pop fidivr inc pop sti sub stc in and cwtl addb outsb jb add adc sub movsl cmp divb and add int3 xlat in jecxz sbb pop and imul enter daa dec mov out add lock or xor add fdivs sbb out cmp insl movups lret or and scas pop mov out adc mov cmp rorb bound mov pusha scas mov add adc push or mov dec add pop in mov jns lsl sub add xchg ret sub rolb cmc rcrl mov lea mov shl inc pushf insb daa mov push outsl in nop add or outsb cli repnz subl inc jo mov xor mov mov add pop je and faddl add popa cltd dec xchg dec mov aaa cmp pop loopne xor push jno js or mov sub adc les call sub dec stos sar mov enter mov repnz mov xchg sub xor push insb nop cmc enter rcll stos xchg add test test out stc xchg push lret cmc adc xor loope ret stc adc or sub and push out and outsl (bad) jno add loope mov das test add js or mov daa and lods jmp cmc pop and fild hlt cmp addr16 mov dec cld sbb mov ds xorb add ja xchg pop test aam cmp dec add push jne cmpsb cmc or sahf lods inc dec popf loope loopne jbe sub mov jp add in inc pushf or cwtl mov and sbb loope aaa mov lock mov push out cmp fdivs or mov dec pop pop fwait aad xchg adc add xchg or das mov movsb mov or push cwtl jns cmp pop adcb aaa dec push inc adc add imul sarl movsl cmc nop cld mov xchg jo mov inc mov fsubrl dec pop adc inc subl xlat dec pop imul insl cmp jle cmp out cmp jno xchg dec jg add dec mov add inc add or push ljmp and mov mov aad shrb stos ret in cmp add imul push int3 pop add xchg xor xor xchg cmp xchg add leave mov dec lods xchg xchg mov mov in sbb es push aas adc (bad) test mov lret aam mov push inc or mov sahf lahf or inc inc pushf mov inc insb pop and idiv sub cs imul sub dec adc jo xlat popf imul mov (bad) aaa pop in add enter lods mov shr cwtl adc popa pusha shll and add jb adc imul test call leave leave xor and pop jb cmp pop cmpsb scas test out sub xchg add or sahf loope (bad) xor in add popl addps add pop push sbb or adc js lods cmpsl lods mov mov push push lods es outsl (bad) hlt roll adc ficomp orb jns and and add pop lret out or scas popf xor add push sarb dec adc popf and dec or mov mul xchg inc adc pop pop ds aaa mov enter cwtl lret aaa sbb inc out test in fcoms mov and cmp xor inc dec jmp mov and mov push gs adc in sub add sub leave add mov sub cmp push sahf xor mov xor test push dec in or push or cltd nop jmp out mov push adc sbb lea push sub data16 es pop mov js lds outsl add add jmp jl sub xchg movsb add test pop lahf jae scas mov xor mov das mov mov and cli mov and add xchg push icebp nop ret adc (bad) nop test std shlb lret mov or xor adcl femms pop add in pusha popf push dec mov xor xor lock xchg fs dec out or mov push xor jbe mov fsub scas hlt sub cmp xor sbb push mov pop out or cbtw or dec scas mov data16 lock pop (bad) outsb xchg hlt inc mov mov or pop ret nop or out imull adc cmp outsb stc and jl jmp push mov lahf pop jne push and (bad) mov xchg mov add nop sub shr and stos (bad) or xor xor or pop inc add mov sub jecxz fstpt mov ja sub fcomp xor sub sti jl xor push or aam push push cmp adc and xor or jg push sbb add push arpl mov je mov inc in or and mov xchg or (bad) pop dec or or scas int3 mov pop int mov negl push or (bad) cmp and mov lds sub mov pop je popf adcb ret adc mov fildll push mov (bad) in call push inc in sub sub cs add data16 cmp push rclb subb mov xchg push xchg lock ja add jae popf ret pop push mov adc mov mov nop add (bad) add sti movsb cmc adc and lods movsb fcompl ret dec add paddsw or add cmc sub popa adc xchg sbbb fiadd orl in add sub jo scas push inc xchg pop mov add mov mov cmp xor cmpsb push xchg rcr or mov fmuls mov jg fs fs incl (bad) cmp cmp mov cmp mov outsb and fistpll push xchg lldt pop test add loopne,pt add scas in fstl cmp stos pop xchg and dec push rcll sbb sub sub xlat or add jae int mov test sub cs nop add add fwait lret nop add cmp xor mov lahf and pop mov adc sbb cmp movsb mov lock pop mov push and aas loop addb mov pop mov cmpsl ret xor fistpl push dec fnstsw imul adc add fdivp out mov pop adc dec lock sahf and shrb movsl daa inc jle xchg and push push mov or add jno inc jg mov mov sbb xchg push and xchg and lahf js jbe stos arpl notl outsb ret add les push inc dec das mov push mov stc nop xor push sahf cmp test push es icebp icebp add sbb cmp ljmp mov jo pop rorl (bad) mov mov push std mov dec adc lret cltd mov bound adc fmuls pop sub push or insl jg add inc fnsave fldenv pop mov inc sbbl sub add (bad) mov add sub sub loope sbb pop sbb adcl adc mov inc mov pop pop les aad mov push jnp dec cmp pop add mov jae jbe sbb dec aaa or rolb push sahf lods add ficomp icebp fs mov sahf ljmp loopne push mov loopne mov add dec ret add ss and push movl push push (bad) nop push xor test and outsb cmp aaa xchg es lret roll icebp add mov jno fild dec push popa test ljmp test ja mov and cmc in or out cmpsl test push orl loope das test or push inc inc mov adc cmp jecxz je and scas movsl shrb add mov pop movntq jle ror jg jg dec sbb inc or pop fiaddl insl sbb sbb and in add mov mov xchg ja lret pop add imul aam divl xchg dec in push mov xchg les cmpsb and sub lock add cs cmc dec mov into jmp add mov insl push sub in mov jbe mov ss add pop in nop movsl mov xorb test stos mov pop aas test mov loope and aam lahf mov inc push ret adc push mov mov nop pushf dec push repnz pop sbb inc adc repnz icebp icebp sbb ss add fwait or lods pop rclb nop dec dec push pushf push call out sub bnd mov imul arpl rolb sub jno std add arpl mov pusha xor aad popa dec pop fidivrl nop pop add rcl push push pop lods and adc mov cld pop xorb daa call and inc out pop js or push or aas dec sbb sbb inc add sbb sub mov add pop mov cmp mov mov cwtl push rclb and xchg sub add movhps shlb les fildll pusha sbb hlt daa test jae push ja xor and push into test lock shrb fsubp adc sarb rcrb enter jns hlt dec testb pop mov ds jb pop dec push into or push mov inc cwtl inc mov loope mov add leave insl fsts cmp pop (bad) daa adc mov mov mov xchg push arpl or sarb inc sbb mov scas xor xchg ds test pop dec jns push daa mov xchg int3 jno xor add test inc subl xchg imul jns int3 sub inc or lock in xchg (bad) mov out test xchg fadd faddl in aad iret (bad) xor or loopne clc mov adc pusha mov mov mov and and jl dec lock add mov push (bad) jns les and xlat aas inc cwtl clc sbb sbb jbe orb inc nop sub sbb adc jl add sbb jp sub rolb daa push xor and aam and xchg and and sbb (bad) daa inc mov out lret adc aad ds pop int3 sub dec push shrl sbb outsl xorb inc jg jbe rol leave stos lret (bad) pop out in loope cmp inc add mov dec mov cmp leave and dec fxch adc pusha sub fldl shl and sbb sub or out and (bad) enter xchg fdiv (bad) sub sub scas add inc loope mov aas das cmc sub xchg addb adc sbb mov aam loopne push mov es sarb rorb and pop add sbb adc adc sbb cmp nop lods adc daa outsl lock insb loopne mov inc sub in inc push movsb push mov push mov sbb sbbb push pop ja es add je shrb dec jo shr aas add jb dec xor je cwtl cmpsb sub adc mov lea aaa lods aad adc add xor lea and mov leave dec aas xor or test inc mov lds movsl imul add push sub repnz dec nop sbb pusha adc adc pop and out cmpsb clc popa push loope mov out or mov inc nop and inc lock nop adc inc shrb adcl add aam (bad) fldenv or mov jbe nop fsubrl push clc mov loop faddl inc les test inc fcoms push push aam and rolb push adc scas sbb or fldenv add adc (bad) lcall push adc jb add movsb xor sbb rcrl xor mov popa push mov (bad) mov push push sbb jno movsb leave aas lcall (bad) adc loopne inc (bad) cmp inc fdiv stos sbb cwtl rcrl jnp,pt js arpl cmp add jbe shrb clc jle clc push push nop pop adc jne insl aaa inc fwait or ror nop aas adc lds push mov xor sub add inc aas cmc and fsubl cld popa inc push or sub or cmpsl pop mov and shlb ds push scas mov sub aam adc mov inc sub sub shrl test xor leave inc fstpt and (bad) adc dec cmp dec lock push js sbb stos dec mov mov mov ret dec daa test (bad) (bad) sub push test add cmp jnp add and faddl lods adc mov add dec aas xor mov lcall call mov sbb fcmovne inc mov and push sbb push pop jl clc dec jo mov jo aam icebp add jl sub cmpsl orl cmp cmp xor push mov subl movsb mov mov push push icebp mov mov adc push dec call mov call adc cwtl pusha dec ret fs sub and push cmp add daa xchg imul and pusha sub sbb mov clc ljmp leave cmp and adc or mov sub push adc lcall imul add fdiv test pop push nop add inc and mov loopne adc cwtl int in imul jbe,pt bound fsubrl and test xchg mov xor push shr dec push dec or or inc cmpsl enter xchg sbb outsl or adc enter jmp adc cmp sbb js dec pusha pop sbb pusha out mov lret rcrl movb cmp sub add mov sub bound add hlt movsb mov push loopne outsl add cltd rorb cwtl faddl cmpsb lock outsb aaa clc pop mov or mov push pop rol iret adc xorl fist push adcb mov add fs push pusha dec das outsl addl push adc push mov jecxz test sbb adc adc or or dec cmc mov inc mov xor xchg daa push cs ja sbb dec or pop sbbl cmp add cmpsb pop or sub inc inc je pop jno xchg xchg fs add sub adc and push dec jns jge pop xchg adc xor mov int sbb nop push dec dec inc cmp aas xor cmp pop dec mov rclb pop xchg adc icebp sbb add mov lock sub mov clc (bad) mov inc dec inc mov push adc push pop inc (bad) mov nop mov rolb rcrb dec jl es mov fcmove ss mov jbe mov int3 sub add fsubs dec dec add mov test push sbb mov mov push cmp add mov add loop xlat mov test inc jl xchg fldl inc fnop data16 mov jno stos mov divb xor je add push adc add jnp test mov icebp add or bound add pop jns push out (bad) enter insb insb cmp dec xchg inc adc mov repnz add inc in lock setbe popa xor in test cwtl fwait clc ret lea xor psubq adc test aaa fstl rcrl cmpsb stc or shll push enter mov (bad) mov add pop add jns xchg sbb cld mov pop mov inc fbstp pushf (bad) ja or fistpl (bad) mov (bad) push cmpsb pop loop pusha pop xchg orl cld adc dec cmp mov jmp lcall popf sti inc pop push les mov mov (bad) lock pop pop pop add arpl pusha cmpsb cmp out loope lock push push adc enter outsl push add inc xchg sarb xchg push mov cmp nop call mov sar push cmpsl (bad) fdivrp vpshufhw js ss cltd adc mov sub xchg dec lea or lods mov clc adc fldl test xchg mov pusha sub aam pop addr16 cltd or scas add add jo call pop (bad) aad call pop popf je aaa adc xor addb fadds pop idivb mov cmp add call test ret mov add push in bnd jmp and fwait out out rorl adcb out and imul and roll ljmp aad xor mov xor fdivs push xchg nop orl mov stos and xchg mov adc pop enter lret enter mov icebp inc mov xchg cmp xchg mov dec jmp adc mov cwtl and hlt loopne scas fldz adc push mov sub sbb cmpsb mov popf in daa cmpsl lods nop jmp inc and xchg or cmp (bad) ljmp imul sbb sub or cmpsb mov inc sbb jle mov rorb or inc mov pop or sahf into movb dec inc push push mov inc lds xchg sbb add jge adc fisubl jmp push dec add addr16 pop pusha xor test or sbb leave mov mov (bad) jne xor sub adc push mov dec cmp in and in and (bad) pop sbb mov sub inc sbb pop adc test add cmp xor adc adc xor lahf test movsl push shlb popf dec push dec call dec pusha adc dec inc or or or insl or xor lods jbe sbb mov out cltd xchg add jl lods xor and mov je gs xor cmp stos mov shlb push dec (bad) lock in test fild shr aam mov inc (bad) arpl xchg sbb cmp push xorl adc pop xchg js xor sbb cwtl rcrb add adc mov inc or sbb adc mov movsl sbb sbbl and aad cmp dec xor push inc nop mov movsl mov or xchg lods or in push lock add mov mov add push in dec inc push aam adc aad sub adc sbb mov adc xorl or jnp loope push nop icebp add nop add pop mov add mov jg adc mov and pop lock mov cmp shlb sbb clc stc sub inc dec ss call ret and jae movsb adc popa push mov jns into inc stos xor les cmp sbb add icebp sbb lock es in mov cmc int xchg and stos les test cmp sub xorl pushf xchg and int3 sbb sub les xor (bad) jno clc and test pop cmp mov nop or push loopne repnz out mov jns imul pusha aad roll dec pusha sbb xchg jp loopne or movsl test lcall test adc or and adc push mov push cmp pusha fs loop dec pop inc dec cmpsl pusha add mov cmp jle sbb hlt cwtl sahf lock jbe add or add xchg les fmuls add pop add (bad) repnz loopne ret aaa hlt xchg xchg enter lock jo dec add sbb testb inc (bad) cwtl nop dec add xchg int3 push xor (bad) aad mov and xchg sub dec sbb cmpsb push mov sub mov (bad) jo js add adc add cmpsb inc xchg pusha call xchg aas cmc xor mov adcb and cld mov push jge lahf popa and dec jg lock or jmp les and cmp add in push sahf mov mov mov push out orb ficompl xchg mov xchg adc imul xchg adc and jne dec loopne cltd cmpl mov sbb or lds sbb pop cmp cltd shll mov xchg jmp scas jmp xchg adc clc cli adc (bad) xor xor dec orb fwait or jno push push xlat xor in shll sarb add fdivl sbbl pop sub shr (bad) out out cmpl add cltd push jg cmpsl movsb ljmp fcoms int sbb ja ret sub in les cmp fstpl lock pop add xchg adc push sbb adc add std popa dec jo insl dec mov fisttpll mov rcll mov and jnp arpl mov in cmp incb inc mov std push les xor push sbb in fiaddl mov dec dec add cs xchg pushl adc cmp push add into push fisub jl mov loope mov and add int3 movsl rolb jnp inc scas aam inc mov jmp mov rolb fidivrl sbb add daa loop popa xor out lret clc mov xchg insb pop add push les mov call add mov dec ds fwait addr16 shl fcmovnbe mov jl or fisttpll add adc idiv pandn (bad) mov pop xchg push fmuls lock push jb andb lcall xchg xchg call mov push jle adc outsb add push sbb popl out xor adc inc adc loopne jno xchg ljmp fmuls mov minps mov pushf mov cmp mov inc ret pop mov hlt or add dec sub pop xor enter push add inc inc sub xchg pop mov jg or jns mov test pop sbb mov jae mov iret and add add adc sub js dec (bad) idiv out push push xchg inc mov movsl adcl or add and push mov adc pusha rorb inc ja jl adc add adc pop stos mov or pop xchg popf push xor dec cmp divb jmp add xor insl lret sarb xor ja sbb jmp add arpl mov push adc inc mov aam push add popa mov arpl popf es fwait pop add jp fistp jno shr and inc (bad) pop mov jns and xchg push jb repnz mov push sub int3 mov mov add xor ret enter push push push push loop add cmp pop cmp cwtl popf dec vmread dec sbb lea cmp or pusha or and and (bad) mov stos push pop iret add jp cmpsb mov daa mov push pop mov adc outsl sub aam int js add rcrl push call adc add fnstcw inc xor in insl mov lahf jge mov test loopne add xor lahf cmpl and fdivr xchg test mov mov ss inc xchg pushf scas add adc aaa xchg mov mov in std repnz xor jns rolb jns jmp aad in pop and or in pop xchg inc nop loop xchg sub mov dec call push cli cmp adc pushf bound xadd aad and cmpsb add sahf pop cld jle and add sub imul jns push call jle adc sub mov test adc jmp and inc mov hlt adc sub shrb or mov cmp and or and dec enter inc jo jbe inc mov xor leave hlt mov cwtl std scas jmp cwtl mov xchg add xor cltd inc xor fldenv sbb add xchg jmp std aad xor jp stc add arpl loopne add into rorl or clc cmpsl loope mov mov add ljmp cmp (bad) leave add cmp leave jno iret add rolb shlb js lock add in pop adcb xchg dec cmpb cmp inc pop or cmp add rol mov icebp dec inc rorb (bad) enter sub pop sbb cmp and loopne scas out loopne push cltd xor push cwtl mov les je out fadds xor sub pop mov push jmp pop push ud1 adc add sub sub nop adc scas dec pop jl js or cld mull add jne loopne subl mov in bound or inc dec mov add mov and imul in adc out add cltd and fdivrl shlb or test add ja cltd push mov xchg rolb xchg jno mov add mov fs add dec mov rcrl mov aas push nop mov out (bad) (bad) jge cmp js popa or add ret inc xor mov xchg fldenv fwait jns (bad) xor (bad) aad sbb adcl and push pop int cmc test cld stc jns sbb cmp pop push loopne pusha xchg and jg jne xor pop dec adc bound jle pop call dec loop xor js push xlat fstps cmp push imul leave push lock mov pop cmp (bad) loope jns and cmp mov (bad) in push shl xor pop cmp idivl and jo int3 or js cwtl and add mov je xor faddl ds or add xchg sti das out add (bad) push cwtl pop enter or clc test leave inc subl dec adcl das add lcall xor pushf movsb loopne mov mov xlat inc int3 insl push shr inc pushf add jbe dec fistp pop add cmpsb sub fsubrs inc ror sbb pop pop testl mov inc icebp repnz jmp xchg push jg sti popf inc outsb xor ss mov sahf or xchg jns push hlt orb pop xchg pushf add mov out lahf es inc jns call in add sbb nop ss mov out and mov cmpsl xorl and (bad) popf ds or or dec adc rcll mov orl addr16 mov divl xchg test and jecxz adc int3 xor in and rcrb cmpsl ds xchg in mov cmp add inc mov mov or xchg imul mov dec mov lods mov push mov stos dec or (bad) and sub pusha sub jl sub add sbb inc loopne mov in fmul pop push fndisi(8087 nop movsb sbb add lea cltd pop add in out cmp sbb ljmp and roll mov aad test fild jno jmp lds aam or jp (bad) (bad) mov xor aam sub mov cld adc jmp gs out mov aam icebp xlat mov mov or or add mov cltd dec mov mov adc push mov les xor mov push cmp xchg nop mov add das jnp sbb insb pop inc push inc mov dec pop mov addl push pop aaa test les fsubs sbb push xchg loope pop enter xchg repz sub mov push mov xchg sub enter xchg mov aaa sbb repnz cwtl hlt pop out xchg nop pop add push jnp pop dec (bad) mov add test pusha xchg mov pop or lock mov cmp mov pop dec cmp pusha nop lock add jecxz out mov clc dec inc (bad) nop mov lock xchg jle add inc int3 push mov xchg xor adc jb cmp push les xor sbb (bad) or aaa insl fs jecxz pop pushf test dec mov xor or dec adc frstor dec mov mov pop push pop out add ficoml fldl mov jo dec xor shlb push test xor into decb mov enter inc movsl sub aaa inc pusha daa cmc jae movsb (bad) mov mov mov dec lret mov mov or clc mov adc inc lods lret mov repnz cmpb addb scas iret cmpb adc jno outsb jne shr xor or mov jns pushf je sbb dec sub and xchg add inc xchg ret fldcw add push sub lahf add sbb mov or push cmc xor push rorl mov or push pusha out cmp mov int sbb mov fmuls addb inc mov cwtl hlt lea sti cmp xor je pop out jmp inc jg cmpsl jl jne inc pop inc jp (bad) xor and das je ss jle adc push cmpb mov adc and cmpsl add (bad) cmp movsl xchg and inc pop mov push (bad) repnz fild cmp out add and mov repnz fmull in sbb iret ds add and in pop fist shrb xor (bad) xchg aad inc or adc mov cltd lods dec push add mov lahf pop nop jl add pop push cmp cmp add lds test inc dec xorb in jl icebp add faddl (bad) out fcoms popa push pop nop xor cli cmp xchg lods cmpsl push and fisubl arpl scas mov orl mov test inc add outsb add inc ficompl jo inc add jge popf or rolb in sbb pop cmp sub (bad) adc mov xchg rcr dec in roll mov pop and sbb sbb rcll (bad) xor cmovb pop add (bad) cld pop inc add ficompl cmpsb xor xor push movsl hlt (bad) xor and fildl adc decl sbb mov adc out jl sarb add in mov daa fdivrl sbb jns mov clc inc pusha cmp pop and in out fistp pusha push cwtl dec scas hlt std dec pop inc andl or jns sub nop (bad) mov mov aam in xchg mov movsb dec xchg push add xor ret popa stos lods je sub or push popa add inc push ss lea dec pusha adc (bad) out fsubrp adc xor xor int scas (bad) and inc mov lods or cmp inc inc mov int inc stc and push push int3 push nop test repz fildll jecxz ljmp pusha hlt xchg movsb rolb call into cs test movsb mov cltd jle movsb mov dec pop mov in (bad) fiadd adc inc xor cli jp inc or fild into adc pop ret lods xor pop mull jecxz or insb (bad) or incb cmpsl sbb or and ret inc les fs adc sar inc mov mov adc xchg push or jmp mov loop or outsb push jno,pn cmpl aam pop idiv and dec rol lret add sarl int3 sub cmp mov fisubrl (bad) xor nop pop inc cmp fdivrl adc push push dec lock jge jns (bad) sub or xchg leave sbb cli addr16 or fiadd jge push in add sbbl in paddsb mov cmpsl sub jge push dec mov movsb cmpsb pusha test repnz cwtl xor mov xchg jl andl or xor jns insb call stc pop jp ljmp mov mov or fwait in mov push pop xchg (bad) cwtl loope sbb out mov push inc add inc mov cmp sub push or rorb jge xchg stos and aam sbb clc push xchg and inc and es int3 loopne je add sbb xor pop adc cmpsl rorb or js push jnp icebp push and xor cmpsl outsb jns in jae and jle mov les leave into push imul bound mov push xchg mov clc iret out push cmpsl mov mov dec pop cli inc jp pop cltd and jbe cs nop xchg sbb mov leave js pop dec jl lcall xor shlb into push mov sbb mov jl jae cmpsl sub or inc (bad) enter push inc shr (bad) cmc sub mov cltd push aam (bad) loopne cwtl push out cmovo movsl arpl (bad) xor hlt jmp repnz std pop and es and fdivs pop test cmovs jb imul sti (bad) jl or mov dec cmp mov push test jl or sbb test leave pop mov dec xchg call movsl fild dec mov (bad) jl sbb mov pop cs cmpsl dec adc test pop fmuls enter and sbb int xchg aam xchg mov inc (bad) loope aam adc xor inc sub inc cwtl mov movsb fdivs test or xchg lds lock fwait nop sbb xchg test rcll xlat inc mov pusha mov cltd test sub cmpsl xor jne aas nop xchg dec cmpsb inc aam fcompl movsb daa add mov jmp add fidiv pop mov dec sbb jbe push insl mov mov popl out and pop pop pusha hlt aam js loop dec jbe mov lahf or fwait jnp pusha mov scas add cmpsl jle lret mov jb fadds cmpsl ljmp sarl push add sub data16 dec (bad) loop pop fsub add bnd std arpl mov jae ret jbe push nop cmp xor stc inc mov mov xchg xchg xor stc sub movsb ret and push push mov fcoml lds test mov pop and sub and xor inc lock add mov (bad) loopne xchg add inc mov xor sub cmpb subps mov mov ds add mov scas icebp mov sub dec js decl sbb scas icebp pop sub sub daa popf mov adc add sar xchg daa mov push sub fisub dec adc scas les roll and dec popa dec cmp js (bad) mov xor pusha js lcall push xchg or mov aam insl (bad) nop (bad) adc xchg pop xchg xor lock adc cmp adc faddl aad scas sbb mov iret pop je xor orb jle cmpsb das add call cld int3 je or cmp jbe xchg pop mov (bad) cs dec sahf nop xchg pop add push mov add sbb cmpl lea dec xchg xor dec adc data16 adc jp js in mov mov pop push das dec push inc (bad) jns add add push pop cmp adc sbb add or inc cmpsl inc pusha xor fucomip jge sarl sbb inc pop ret push or adc adc add addb repnz and pusha add fild dec imul push in mov or aad cmp rorl shrl adc adc or sbb sbb lea jo and mov jl fistp je (bad) in dec js cmp fsub adc in add test and repz xor lret ret ds loopne lldt mov dec push xchg insb push stos fadds or std inc movsb lock (bad) push sbb xor xchg fadd or fist enter mov fsubr jl adc mov add fistl dec jp imul or (bad) add mov testb leave pop jns test dec xor push loopne push lds dec (bad) fsts inc sbb sbb adc xchg in cmp imul loopne cmpsl fimul bndldx aam and add mov sbb jb test push loopne push inc xor clc test cmp adc and add enter pop sub loopne shlb lcall stos ljmp aas movsb in lods sub mov dec xor mov popf cli inc dec out rcll loope lahf adc xchg inc call and cmpb imul push nop mov bound je cmpsb out lea or jne loopne cld cwtl mov add repz frstor push add cmp out loopne fs mov and rcll cmp enter outsl iret inc cmpsb cmpsb mov dec jge js sub mov dec push pop mov test mov cltd repz lock scas lods pmulhw aam add xchg (bad) (bad) nop pop push dec cmpsl cmp jg aad (bad) jno aaa xchg pop adc (bad) je int3 cli xchg cltd adc les mov iret push in insl dec add xor cld arpl rolb nop cmp jo sbb popa dec rolb add inc dec wbinvd addr16 hlt pop sti bound test or mov dec add enter mov mov xchg sbb dec les mov sbbl inc cmp push xlat fdivrs adc cld sbb dec in pusha push xor pop adc pop mov xchg inc push out add adc popl fdivr mov sahf cmc push (bad) pusha cmpsl pop rcrb and pusha (bad) sar push stos or lcall add rclb or pop clc xor mov inc push xor std xchg push icebp xor iret push (bad) ss das inc add pop mov sahf loope pavgw and push mov push mov ja cld iret cltd pslld sti cmpsl mov mov cmp pop and loope sub sbbb adc or pop sub ds inc or notl scas loop sub daa in out cmpsb jo incb fcmovnb test je add fdivr loopne dec movsb jl add pop add mov bound jae jo pop pop loop (bad) jle ret test jnp xchg inc add pop dec cmp add or ds imul push mov xor mov cmovns nop mov test sbb incl mov lahf je adcl (bad) jmp loope ds adc dec sub cwtl xchg sbb stos sahf xorb test jae add (bad) addr16 push push stc lods inc call lahf hlt mov mov adc adcb dec pop xchg add test test daa (bad) call xchg lret mov inc pop inc nop (bad) dec cmpsl mov sbb lret jecxz dec sbb jno push adc incl addl jbe sbb add xchg sub (bad) sub (bad) jnp rcll cltd jns sub in dec inc test data16 sub add sbb rcrl xor jne cmp pop mov test and pop xor in jle and aam add mov or and cltd xorl sub js push cmp je test or dec test mov enter pushf and and cmpsb mov mov push dec lret rcr add lds inc addr16 cmpsl add sbbl lock popa add lcall dec fidivr das adc cs pusha push jo sbb xor mov outsl and xchg sub mov subb mov dec xchg imul mov dec sub jecxz imul sbb ljmp addb jno add sti sub or ficompl movsl pop push or cli jo xchg rorl iret and add xchg adc inc cmp in pop cmpsl outsb mov pop shlb es (bad) sub inc std xchg adc inc push cmpsl and mov xor pop leave pusha sub jnp clc cmpsl bound sub repz ret enter sub (bad) lds and mov dec rorb sbb inc lret int mov pusha dec (bad) xchg pusha push je bound add (bad) ja mov scas xchg in cmp dec cld inc inc sbb test int3 rcl jp ds jns mov sbb lods not xchg test cmpsb test test inc cmpsl fisub ja mov decb jo nop andb mov mov stc cmpsl test call out mov pop adc call (bad) jmp inc jp test lock fisttpl in ja jno js cli mov jne cmpsb jnp sub jle,pt xor aad or shlb das push and ljmp sbb mov out jae jge push push (bad) loope or bound cltd jp nop dec dec cmp and test dec cmp test adc lods mov ds cmp sbb or sahf addr16 icebp cli add mov dec mov cmpsl imul mov mov add push push xchg jns out add imul mov or (bad) loope test pusha push xchg cld inc and test hlt mov xchg (bad) loopne lods pop stos movsl cmpsl pusha loopne ja dec ffree jns mov cwtl mov test jl es movsb cmp (bad) push xor push mov or test xchg cwtl add hlt push (bad) cmpsl mov inc sbb ljmp sahf in pusha and jns into sti out pop movsb mov pop adc sbb test and rcl sbb sbb or std dec andb cmpxchg mov les xor js mov mov pop fisttp jmp sub cld fs nop mov jmp adc sbb pop aaa daa push test (bad) xor (bad) fistpll aaa push cli (bad) lock adc push cmp xchg jbe je test inc imul adc push divl sbbl setnp add movsb inc in ret cld ja cwtl xor dec push add cmpsl imul cmp dec movsb cmp sbb faddl xchg dec push cmp and mov sbb rcl xorb pop bound add xchg pop pop adc scas sbb sbb cli repnz (bad) dec cld aaa leave xchg mov or adc dec sbb mov inc (bad) inc add and gs imul and mov inc adc das pop scas add jge add fiaddl ss ret inc lock mov (bad) (bad) mov and ret pop (bad) cmp pushl test add cmp mov test rolb aaa inc push pop or jae cmp xor hlt stos add jl repz sbb mul xchg dec nop push (bad) lds ljmp sahf add dec idivb add mov inc push loop ss add xor dec add adc cmc popw fsubr mov test fldl add inc jo test add cltd je sub adc ja push rcl in pop psubusw pop xchg addr16 or sbb jge adc test adc add cmpsl iret xchg adc dec mov gs sahf test daa pushf pusha rclb movsl icebp stos and xchg daa inc gs push push cmpsl data16 andb sti add jb add jb scas sub mov or cvtps2pd and into pop pop mull or (bad) imul push mov mov fidivrl xchg dec adc cmpsl xchg clc (bad) add pop clc movsl lret fcoml cmpsl add movsb sbb dec sbb pop das lods push inc int (bad) leave hlt push clc ja pop xor test dec flds xor in into or addr16 add pop xchg les xlat (bad) mov add js or push cmp lods pop test hlt imul add repnz pop out mov or push mov cmp int3 add vaddsubps dec inc loopne stos movsb fdivrl insb add inc rsm xchg inc adc fwait test scas decl sar pop cmpsl rcrb pop inc leave or call fsubrs push call adcl gs or inc push push dec shrb je lods pop js mov fs and cmpsl loopne aam lcall sbb add insl sbb xor inc add stc cmpsl out adc popf mov xor and enter add pop pop or mov sbb mov mov subl icebp push xchg repnz jns mov jmp cmp push or and fdivrl mov or into loope data16 and cltd pop (bad) fistl mov cld pop je (bad) or jnp mov or adc and push or push orb cmp push push lock es or pop push xor xor (bad) ja xchg xchg jl sub sti add adc or cmc inc sub jbe mov insl sub addl jo (bad) gs pusha or and xchg hlt loopne inc adcb push iret andl jb push cmp jp adc dec (bad) lock aas (bad) mov jp adc in mov cmpsb xchg and flds sbb addr16 repnz add add sti inc lock imul cld jns scas out lods inc jb push adcb adc xchg insb push jo cwtl push add sahf faddl sbb mov setg push and loopne cltd jno shr sbb xor lock add bound gs or cmp jnp pusha add mov jmp and xor sbbl lock (bad) xor and ljmp push sub js jne add and fisttp mov xchg arpl xor add push mov push adc lock add pop cltd jg push adc adc mov aas aam mov jae cltd xor mov je subb fiadd outsb arpl lcall jo push pusha adc test in insb cmpsl xchg lss data16 addr16 cli cmp jl push mov sub xor or pop int jmp cmpsl lock xor xor mov inc push add pop test xchg pusha adc inc add gs adc jo ljmp (bad) push add outsb mov cwtl stc or mov dec aad sbb lret dec jle bound push out add inc in jo cmp dec adc sahf mov push (bad) mov dec sub es stos push sbb pop pop test mov movsb pop add rorl jmp imul cli shrl in scas mov cs loopne test pop lea shll repnz add and push add insb add and cli jbe fwait mov xor push sub jne pop fstpt sbb dec push cmp mov pop sarb jmp pusha aaa dec sbb pushf cmovp jno adc dec mov je fstps les rorb mov std mov jb out mov inc mov inc and repnz mov clc inc sub pop fstpl inc fildll es mov adc mov push cld and and add in xor scas xor xor scas arpl adc and jl ja (bad) mov push bnd adc jmp or adc sahf data16 sarl cltd sub mov xchg repnz add sbb cmpb dec adcl js ret shr out pop mov push sub test or or mov mov les or and dec cwtl rorb hlt js icebp cs or fdivrl jle mov arpl push out add ss xchg out testl jno push lret enter or sbb dec in adc rcrb xchg inc int3 popf data16 mov jle loopne movaps test cwtl ret int3 cmp add aas imul jmp loope cmpsl mov sbb mov jnp mov cs rorb cwtl mov add sti and or pushf cwtl outsb pop (bad) fnop out les je andl sbb cli add in xor push add sbb jbe nop call and adc stos fdivr in add dec xchg or int imul xchg add andl xlat xor hlt int3 adc xchg add addr16 adc bnd adc xor je jbe out lods sbb aam cli out call lret or dec jge addl in (bad) xchg lods push bound adc cmp inc loopne cmp xor mov out sbb test inc enter mov push lock cmp inc jl aad lret jno test popa or mov add and cmpb and inc add inc adc xor dec sbb xor pop mov add adc clc or mov or or sahf (bad) add xorb add mov inc nop inc icebp inc add xchg dec pop fild addl enter cmp and sarb jle jp in cwtl movsb mov add mov mov in rorb hlt clc dec lahf insb in cwtl sub scas push dec mov mov mov xchg in sub jbe adcb xchg loopne cwtl mov adc scas jbe add mov (bad) adcb xor adcb jl sbb fldenv mov mov fisubr cltd ret jmp iret and in pop and roll lock dec call mov aaa sub insb sbb jbe xor pusha and (bad) or fist mov cmp and fldl and dec or push mov ss add pop add add add cmp mov jecxz leave dec push hlt sti add sbb fdivs popa pop movsb fbld fwait adc jns inc lds cmpsl adcl call jne aas mov push sub (bad) xor adc cli jno cli int movsb xor fcom mov pop sub pusha stos adc loop cmp test test scas inc add jmp (bad) ljmp orl rcrl dec and mov fisubl pusha jne rolb xchg rep mov dec mov cwtl jnp nop xor pop sbb push jl mov inc test enter call inc lods imul nop loopne dec mov lods outsb fiaddl mov dec fsts cmp cmp add stos loop xchg out push ds pop add add aam jbe iret or xlat jnp or mov add mov or jbe and aam push xor inc sub out dec jbe dec cltd sub inc jno movsb mov sbb dec out mov mov push fcomp push ret andb into fs pop dec mov pop xchg shrd and insb outsl test mov xchg jb mov adc dec cmpsl lahf inc dec xchg dec add inc arpl dec mov xchg ss or test rclb sbb lahf aam mov and sub loopne push shll nop out into mov je and xor mov add mov test (bad) mov push ficom ds cmp cwtl dec xor push dec fadd add pusha out pop sahf push incl push cwtl pushf or lods insl test test sub fldcw inc add dec push xchg cmpsb dec or xor xor dec cmp push (bad) mov andb xchg fs inc or cmp enter (bad) sbb inc popa mov shrb sub cmc in and inc enter dec push mov add cmpsl ljmp sub cmc hlt mov stc fdivl in add dec ja andb add xchg imul out push sub xchg lods add add push gs out and xor jmp adc pop leave imull mov mov gs push mov sub inc jae and jmp addps add adc cmp movl mov outsl daa xchg sbb mov cld xchg or mov mov cld add push loop fild push aaa es mov or sbb pop adc add in pop or loopne inc mov or adcl (bad) pushf cmp pop mov xchg or or sbb stc cwtl and cwtl push and je and sbb das or loop mov aam loopne sub adc cmp nop add (bad) mov pop sub rclb fistp movsl inc mov xchg sub add jmp or or mov xor add leave dec xor faddl jecxz stc lods pop mov add mov aad and and sub pusha inc xchg lcall cmpsl jbe les mov data16 into fucompp cmc cmp mov push je stc jge xlat add stos shll xchg test mov xchg scas lods je sbb je jno xlat icebp add adc (bad) aad jp stos inc inc mov adc daa fcoml sub inc sub mov adc lods sub les pop push and mov imull and fucomip jecxz xlat adc push ljmp xchg and cmp or in and rorb sti ds scas pusha xor push roll stos aad or dec sub xorb (bad) nop lods pop repnz idivl test xor and shr adc add xchg ja andl jg pop dec les movsb fwait out (bad) and mov mov lcall pusha xlat xchg fadds sbb cld mov pop push call imul xchg hlt push pop and add mov mov inc mov xchg cmp sub pusha xchg es sahf sub sub loopne test js mov and loopne stos add enter cld add pop popa rcl (bad) fldcw add xor jmp pop mov jl sbb inc cmp sub sbb or xor xchg icebp xchg inc cs data16 jo adc (bad) pinsrw mov int3 xor dec or xchg flds (bad) mov out mov call pop mov in mov out sbb cmp add call mov mov inc xchg cmc or cmp add popa cld mov mov cmove sbb test pop push cmp repnz aas mov and inc dec into add mov or or mov or lods loop push in mov inc in shlb xchg xchg test cmpsl jno hlt and sub and not hlt lock fdivrs in sbb and cmp mov push add addb call mov jecxz movsl push testb mov and adc and icebp lock pop mov stos out in pop mov push je enter mov (bad) dec mov mov jp mov shrb push decl xchg pop sbb lahf orl and lea mov mov iret push outsb insb add out jb add movsb test sbb cld fucom fistp pusha mov xor orb lock fcomip adc or in add and add sub rorb and dec sub popf call mov dec outsb loopne sbb in mov sbb fisub and mov add and add add fistp push cwtl rcl dec push pusha ret mov push push adc pop cmp call in add or sub jae mov mov adc dec xor (bad) out inc dec sub and aas loopne pusha iret xor mov hlt cmp andb hlt xor dec xlat aam jbe inc jge fsts and stc mov xor sub cltd add jl cld data16 das jmp xor dec scas push push mov or (bad) xlat js dec pop sub xor mov dec test dec nop sbbb adc cmp add daa jbe lock dec jae inc movsb aas aaa xchg push int mov ror leave pop xor pop orb in dec add xor bound add lcall push xchg test and aad (bad) cmp adc dec outsl pop and sbb inc sarb cli loop pop pop jp jne test cltd add adc mov test xchg rcll scas sbb xchg cld inc push and pop insb pop xchg icebp ds mov pop or push add aas scas mov jg push cmp pop rcrl cwtl or loop int3 inc adc and xchg adc jmp enter ds push sbb xchg hlt xorb xor and cmc enter mov iret xchg pop cmp dec cmp jg int movsb cmp add loop cmp inc fildl cmp rcr and jmp fmul imul and adc pop inc nop dec xor pop jno mov sub add pop in pushf push into out dec movl out pop xor push xor xor call loop jg add dec in cltd mov sub movsl xor xlat inc jb jmp and adc cmp sub xchg and sbb pop aad add rcl xor les dec out inc add inc add and out in aad add xchg pop int3 jno mov mulw enter (bad) or decl rolb pop scas add cld pxor ret jmp jmp xchg fadds cltd add add (bad) bnd out aad call push lea xor adc dec sbb scas fsubl sbb mov inc cmc es or cld data16 xchg pop add and lea movsl xchg pusha dec mov mov jo push nop sbb mov outsb mov pop sub mov fildll jno pop test push lock scas out or mov push lock test dec and ja,pt aam pop add andb mov mov cmp ret push lret add sub xor add out xor loopne ja rorl add lcall xchg fmull icebp notl xor subb hlt jo je add fmuls inc sub mov sbb cmp pop ljmp iret and inc jg cmp mov and xor imul (bad) lock es adc sbb cmp dec sbb sub (bad) hlt xchg enter out push fimull jl leave pop fsubs push fbstp jne dec inc mov in jge pop jl sbb adc adc fsubrl lahf out and and dec inc sub adc je xchg mov adcl and cmp xor in stc adc das xor cltd pop cmpsb loopne data16 push inc dec cmc cmpsl pop imul scas scas xchg aaa rcl gs sub pop (bad) out test or and add mov imul insl rorb add mov insl mov mov bswap pop add clc and xchg sub push sub add out test (bad) mov lock add pop inc jns jo and sbb adc les push pop (bad) mov and dec aam aas mov push rol test xchg nop cwtl mov adc inc add add mov ds (bad) mov nop pop imul test lds inc movsl add sahf xlat int push xchg xor (bad) sbb and mov (bad) jecxz je or sub inc movsb incb rorb loopne cmp add (bad) stc cwtl sbb push movsl or js neg cmp add push out rolb pop test gs test cwtl add sub mov stc pop add je sbb loope mov leave mov orb dec xchg mov cmpb ret data16 mov dec sub out add pusha sub sbb loop fisubrl mov shlb (bad) and aas cltd cmp int in out fcoms cmp aaa or push mov or imul mov mov in dec cmp insb enter xchg mov push popf daa insb es cmp jl (bad) xchg inc pop adc scas popf push cmp or fildll out in nop mov add dec push add lods mov xchg pop fdivrl stos adc and fsub popa or ret insb cmpb dec xchg jmp mov adc push inc cs popa (bad) lock cmpsb add aaa push push ffree sub adc sub aam inc mov mov adc mov or inc jl pushf xchg jo mov sub or dec les sub in rcl inc sbb and push dec movsl popa js (bad) xor cmp cmp add push es push arpl inc stc cmp test inc fstps (bad) pop das std add jae mov mov cli shrb mov jns mov xchg shrb sub pop int sub xchg xorl xlat fcmovnb insb jl xchg (bad) sbb shrb jmp testb mov mov je mov nop or test data16 xorb push imul xor scas and push (bad) xor and xor (bad) cmpsl nop stos ror adc rcrb (bad) jbe or ret pop leave je shr out mov out dec cwtl xor sbb in lods in add and mov pop loope,pt or rcl lock iret jo xchg daa mov push popa pop ficoml jo dec jae enter adc cltd lods sbb test pop add mov mov jnp sub sub int orb mov fs cmpsb cld aam addr16 mov sub daa jle,pt mov adc sti out iret jbe lds add xchg or les loop cmp and adc add fsubs mov or shrb mov nop inc sbb int sub cmp mov add test or test or sub sar push push dec pop cs mov cmp lock lahf popa push sub sbb cmp cmpl add add push dec or jb sbb sub int3 pop das movsl sub mov sub lock add imul push pop dec mov cmpsl add int3 sbb fs sbb clc fisttp stc cwtl mov pop loopne fnstcw mov adc xor add pop in loop ret pop xor dec add or mov stos pop fidivl mov xchg pop push mov or adc dec dec add rclb (bad) hlt cmp push dec hlt cmp stos or add xchg inc sub pop xchg stos sahf fmuls dec push xor pop jbe arpl xchg cmp pushf mov in rolb (bad) inc sbb mov aam push add push sub xchg ljmp adc cmpl int3 scas icebp push mov dec or add mov test loope std mov pusha in push popa aam dec and jno add es stos or in ja je mov sub pushf cmpsb adc xchg popa pusha cmp xchg test xlat (bad) xchg call hlt cli mov test jmp or adc out cmp adc and (bad) out ret test push cwtl add add mov (bad) and add leave mov std xor pusha aas mov fwait xchg mov cld rcl sbb or je add dec or mov sarl sbb adc lret lock xor mov push inc add adc fcomip jl add flds leave mov adc adc sarb addl or orb pop dec lock pop idiv mov repnz inc and jbe xchg jns adc out bound hlt sub out mov xchg imul cli rorl xchg out clc jbe pop or inc adc pushf xchg mov mov enter test enter sbb out nop sub inc jge or or xchg push out push add (bad) (bad) jmp sbb or cs das fimull inc lret clc dec repz out jp inc dec popa sar add cld outsl jg dec cwtl push (bad) mov sub ss pop fsubl pusha out fistpl xorl in lock test inc push lods fdiv push (bad) mov xor mov xlat sbbl or sub lea xor adc jne fiadd aam (bad) scas leave fsubrl fisubrl add int pop xor push pop test rolb dec repnz test inc cmpsl xor jnp and adc fs and ret clc cmp add in xor loopne cmc sbb jo add daa addr16 popa cmp xor or les pop daa ror inc nop inc add (bad) icebp ja push sti jg add sbb pusha and mov fimul into insl int repnz inc add or test or or or pop pop testl scas nop test flds cmp sub rcrl add sub pop shll cwtl (bad) in add fwait (bad) rolb fidivr pop xor outsb (bad) sbbb add (bad) mov xchg test call (bad) fsubrs or pop adc psubsb repnz adc add xchg cmc push jnp pop sbb call mov xlat cmp ret inc sbb cmpl inc lret pop testb scas pop jmp insb add repnz push mov add jmp or pop cli stos xchg xor inc and dec sub adc adc stos mov dec (bad) cmpsb cmp cmp or xor sub push cmp and enter add cwtl mov pop lcall popa cmp and loope adc lock lds ljmp cmp add loop add adc push loope daa nop cli sbb data16 dec and cmp in mov push push pop xchg out inc mov push nop jno loop or or inc jp in test and invd in mov jne mov xor dec rol pop std mov loopne push jae ljmp testb dec lret xchg fstps fsubs cmp (bad) adc xor push adc negl xlat fldenv mov mov cmp hlt adcl or loopne out dec js add scas call mov daa jo push xor push clc pop or push add jne incl pop arpl adc xor xchg (bad) nop fmul sub sbb cmp jo add jge jb cltd lea mov xchg xor fldenv sbb adc sbb in mov xchg lods or inc test add enter mov push test scas cwtl jno fsubrl sarl inc or jb add aam and enter sub mov and enter jle pop inc add fwait xor sti inc sub sbb lods cmp adc testb mov scas add cmc (bad) dec xchg mov inc popa and mov (bad) js lahf mov push outsl fstps sub add ja imul and sbb add or movsl cmpl enter or iret add jecxz mov jl leave push scas inc sbb lret mov or mov ret xchg lds dec mov push push pop loope test dec mov (bad) in add imul sub pop push inc (bad) and dec enter pushf ss mov (bad) jbe leave pop mov es or push inc in xchg lods sahf rcr es sub cmp out clc out add (bad) lds add mov mov pop sbb mov pop cwtl rcrb jge iret out adc adc sbb dec dec add push (bad) cmp sar or sarl adc xor inc lds repnz jno call dec cmp lods sub or out mov inc pop pusha jbe jle dec xor rolb out adc stos xchg ss or mov cmp sub test dec mov test mov lods fld add cmp mov add dec lcall mov repnz add rcrl mov js adc sahf pop std or jo test test push js xchg jbe pop add pop xchg jmp (bad) fistpll sub mov shlb call scas sahf aas cmpsb in or jbe mov xchg pop out nop mov xor dec pop scas imul rorb (bad) mov add or jle js dec mov lods mov jns mov push in test xchg out data16 mov dec cli or xchg mov nop push jbe (bad) mov adc or loope loopne lods add xor out gs and mov and jl sbb push cwtl adcl (bad) fcos sub fisttpl pop add mov jg sub stc hlt pop add (bad) in mov push inc rorb sub aam rcl add and sbb add in lahf cmp and cwtl dec sub mov nop push pop lock or bound je dec lock or push cmp add push in out inc inc loop into adc sbb call cmc out fcmovb adcl lock insb push pop sbb push adc xchg or enter mov adc pop xchg inc cmp fwait cmp or insl adc adc jl push mull lock (bad) dec dec xor sub xor lods dec lock or push push ja gs jae xor add xlat add push data16 mov jno mov jg aam xor mov mov push sub pop (bad) icebp test cmp mov or fsubs xor add out jl orb adc aas mov mov push sbb lods stos sbb and sbb sub lods scas aas cli call roll fwait inc mov add inc pop or inc mov adc out mov dec pop inc add (bad) jno add pushf ret and lods mov pop (bad) xor pop test sbb pop jecxz cmp add fwait (bad) ss push sub push popf fistp or fcomps es enter dec stos add pop mov push daa xchg jg decl incl sbb and pop fsubrs sbb lahf rcll jl ret sti dec and cli inc pop mov cmovg daa mov ds mov sbb add add stos frstor or add arpl xor lods push or loop cmp adc xchg jecxz inc add and in and je outsb stos cmpsb push adc ficomp cmp mov add mov and jns in sub mov stc dec or xor inc adc push mov xchg mov (bad) push adc add dec and xchg cmp mov test mov push or lods (bad) sub mov cmp clc adc mov push pop pop xor mov sbb adc loopne mov jp inc xchg or add (bad) sbb std pop jo imul mov inc cltd sub adc fdivr imul and loope and inc scas inc or dec es mov pop inc ljmp je pop add and or mov pushf insb dec add jb or push adc std sub pop sbb sub dec nop mov jo insb fiaddl mov mov push sbb and call xchg test dec rcll xorb adc and cmp push xchg sbb rorl and push dec pop sub sti sti cmp or dec mov xor push out mov pop popf xchg xchg sub shr out sbb lds push add cmp mov dec add outsl pusha or lret sbb imul push cwtl xor xchg sub es or lret cltd aam (bad) mov push mov test cmp cld sahf pop es aaa gs mov fsubrl inc cmp sbb add cmpsb add test stos test fcoms std dec mov lods sbb pusha inc and iret push dec scas outsl add fisubr fwait les sbb inc push xchg mov sub adc addl lret add and xor imul sarl daa push fs stos add dec cld dec insb enter push mov xchg pop (bad) add hlt and ret xchg imul div add cld (bad) xor mov jne xchg adc test or sub or inc std inc xor lret push repnz sub add jg bound mov inc and and inc adc pusha in pusha push mov ja rclb sbb jae dec adc inc mov pushw in lds jb xchg add push out sar mov adc add stc push movsl mov movsb mov imul cmp jl flds pop iret mov or xorl add sub adc push or mov push mov aad mov movsb aad xchg or adc mov and test mov xchg adcl mov (bad) les je mov sub cld notb inc xchg xlat push lret lods pushaw and push pop mov mov ss pop adc loopne push std bound (bad) sbb ds aam loope sub jo loopne sbb mov and cmp xor hlt push xchg pop inc (bad) out inc cmp xchg dec add sbb mov adc cmp push es loope ja adc inc imul rcl push mov pop ret sbb adc sbb (bad) mov int3 imul push je add adc xlat mov cld orb jno add or pop sub and add dec (bad) jle sub fs or xchg call xor sub mov add outsl pop xor mov xor mov add scas push inc mov xchg adcl int clc xchg mov ss sub dec add xchg jmp movsb out add xor push jns aaa int fcmovbe rclb push jp sbb add pusha into mov stos xor daa iret pop pop jp add neg fmulp ret icebp pop sbb int3 (bad) dec addb out lahf add out mov xchg xor pop push pop fiaddl clc in and scas (bad) rorb adc sbb aas push push subl enter cmc dec stos sbbb jbe aas add push bound and roll sub xchg das out xor test cs bound xlat and push jecxz pop xchg adc sahf mov movsl or sub (bad) jno cwtl stos or imul movsb decl les test mov jns inc pusha xchg leave sbb jg stos mov mov jo inc inc mov xor sahf mov mov sbb push inc dec or icebp outsb inc cs mov xor je sbb jae or or mov mov pop hlt lahf push push xchg daa addr16 mov fstpt iret imul ds xchg insl mov jle cmpsb mov or cld mov cmp adc cwtl jae mov or repnz dec jae and adc or jg imul addl add insb nop or push xor or movsb mov push insl (bad) xor pop mov insb xor or (bad) push insb jno or jne orl cmc xchg xlat mov and loope test mov cmp and out test add inc inc insb shrl daa int3 adc push inc outsb dec jp add sub in mov das sub lret add pop add pop orl lret repz push add jmp xchg sahf cwtl add popf jp pusha push adc daa loope ja das lds cmp cmp inc dec cli int add jl scas (bad) orps add cmp lock (bad) aas bnd push pop es inc or pop sub mov lahf addr16 (bad) dec jnp and fidivrl imul jo inc clc push mov mov (bad) xor and ret add push pop jne test out xlat jnp rcrl pop push out test mov mov cmp add mov cmpsl ja jg jmp fstl andb sbbl inc add cmp pmaxub and std dec popa adc push lods rolb mov inc out loop jns loopne add adc push add add mov rcll and shlb adcl mov mov es or push dec mov add adc or test ss or pushf mov xor or push or and ss jne xlat adc inc sbbl lea or push jge sub adc cmp repz xchg mov pop iret add fadd add mov adc sub xchg cmp xor popf ja out and ds inc aas mov sub dec scas leave pushl pop sbb insl and inc pusha jae or popf mov mov or aam and push adc mov adc xchg mov xchg cmpl pop fs or pop push push pushf scas mov push push or or inc pop sbb adc and pop sbb inc (bad) stc push pop jns lea inc xchg mov ja sub add pop test loop pusha jg in jge xchg mov gs enter adc aam out std and rol pop out jg js mov (bad) (bad) sbb cmp enter lea insb dec dec dec icebp test pop loope add fwait jb das add sbb popf jge call stos and test out lods xchg nop leave cmpsb push add fiadd sbb lea push jb cltd lods xor add fimul inc push xchg pop (bad) outsb mov jne mov push pop sub mov xchg std inc mov jg sub daa push sub leave pop push arpl icebp aas jg sti and or ja mov (bad) jg xchg add jp push mov push mov iret rcll call js pusha push gs mov pop adc jl add pop out and mov lea mov and add leave js ret call mov pop sub ja pop push movsl lahf es pop dec loope ljmp sub out mov out (bad) push push pop out mov dec std sahf inc jbe addl pusha push sbb stos lret mov xor cwtl ficom or inc pop sbb push mov add xchg and cmc enter adc fs lods push add mov jo mov dec xor pop dec jle adc push nop adc xor ja dec pop push jae adc lock (bad) movsb out mov fistpl fst jbe push push pop cmp xor sub pop into lods daa clc leave push xlat icebp mov push lods jmp adc cld xor sbb pop push (bad) lds arpl mov xor rcl mov push cmovl pop dec cli mov pop add sarb xchg mov notb shll and jb mov outsl cmp je lock icebp leave decl push repnz leave xor mov add mov inc pop dec out or cwtl dec inc dec sub lahf daa adc pop add cmp mov sbb ds pop es lods mov push push jl pop dec xor fldenv mov stos sub or movsb cli mov dec or fstp xlat cmp xchg les sbbl insb pop out aad jle cmp push mov pop inc add mov dec xor pop or sub aas jmp jnp sbb mull add ficomp cmpsb pop xchg sub enter adc xor (bad) (bad) inc or ja aad or add jo pusha iret orl fmuls cli fwait xchg mov enter sub jg pusha pop outsl xchg add jno jg push test insb ljmp cmp and add out jmp xchg scas add aas jbe rcrl cmp (bad) xchg lret jecxz mulb mov push mov push mov mov ficompl rcrb fcmovbe jmp rolb mov idivl stos inc shr out mov xor mov inc (bad) jmp out mov in add jmp int jbe mov xchg ret push fsubl aam and push mov jmp js or push lahf pop sbb add push ret daa fisub pop sub mov lods push (bad) or dec adc and fisubrl rorb pop (bad) fstp mov cltd movsb sub cmp dec inc imul inc add add push pop cmp sub dec push in sbb jno sti fwait xor fwait jge (bad) ljmp push jle xlat outsb dec mov and mull nop scas mov adcl cmpsl xor lret jge ret addr16 es mov push pop xor jns pop std sbb inc sub push push pop mov add cli push cwtl mov or cmp stc add les ljmp cmp dec sub lcall and scas sbb add jmp scas out loopne ja out add pusha jecxz sub call xor out lcall jecxz add jmp int3 xor jp mov js lea fstpl rorb add add rol insl dec xchg mov xchg pop sub pop push inc xchg jge mov insb pop imul jo addr16 cmp add out stc sub jecxz mov xchg aaa cli add icebp pop push test decl jl cld jmp inc pusha popf add popf fnstcw adc nop (bad) lock mov bound jmp je inc push jl cwtl icebp cmp pop and (bad) loopne xchg xor mov into pop adc adc lcall mov add dec mov pop cmpsb rorb dec push and dec xor sub jg call sub jmp add sbb dec add sub fistp adc ljmp adc pop push dec fistl adc ds dec xchg aad stos xor lea pop cli addr16 sbb or push mov cmp push pop mov lds add or aas pop mull add out js add pop mov in cmp jge ds sub jle push push xor cltd es hlt xchg test ja pop xchg sarl faddl roll sbb add dec popf mov ja js jnp xchg push xor mov repnz in sub mov cli pusha or mov faddl jle ja cld mov and js inc inc mov xchg mov dec xor mov popa and xchg add add stc popf fistpl mov mov dec dec push nop and mov rcrl aam loop jge cltd shl lret lods xor mov ss mov jl not dec (bad) fsubrs ret pop mov dec in xor ficomp mov xchg shll push repz fmuls mov push or jbe xor sbb cltd fild ljmp add push pop pop mov dec insb addb sbb cmp es dec movsl cmpb sub mov into sbb aas inc sbb xchg jno js add rcrl mov ret ja (bad) icebp loopne mov mull pop jno sbbl pop push fisttp pusha add add mov shl ret fwait push in xchg mov inc pop jmp jno xchg xchg inc dec mov fnstenv push fsts xchg sarl repnz xchg mov ret icebp out mov dec test ret mov ljmp adc adc cmp rcrl cltd add mull pop push pop popf enter (bad) (bad) or dec xchg pushf test pop jo xchg sub scas cmp lods mov adc and inc cmpsl push mov push dec push xor push dec lahf push pushf jae inc sbb xchg cmpsb dec nop mov xchg adc inc push and push movsl fistl mov fiaddl (bad) adc gs jle sub gs and popf ret or mov cs test sbb pop pop adc fldcw sub and sarb cmp lock dec push stos lahf sub pop cwtl sti mov pop movsl (bad) das xor pushf sbb mov aam rcrb and pop pop sub jl dec int repnz lahf pop sbb push sbb pop inc dec (bad) mov push sbb pop dec stc or push push push push bnd mov or or add jo dec shl add inc or inc scas imull icebp push sub mov mov and out jp or (bad) mov (bad) push push repz xchg xchg out lret dec cwtl test dec out fwait xchg or jge fidivl push add push inc xor mov fwait xchg adc cmpsb mov and pop pop add mov inc mov lods adc jge fs pusha adc in inc popa popa sub cmc outsl insb mov inc pop dec mov adc xor (bad) fidivl add push rol push bound push mov sbb pop pop imul ret push leave inc mov stos sbb push push push dec sub xchg pop jmp jg or loopne cmpsb push xor push mov mov jge cmp mov push jb fwait das mov out std (bad) mov push xor fmuls in and push and orb mov (bad) or mov mov add (bad) lock push dec pop pop pop mov ret xorl (bad) lcall mov push mov xor xor jnp xor scas push sahf (bad) xor (bad) cmp xor out outsl add (bad) xchg pop add adc daa dec das mov cmpsl and dec jle cwtl pop add out js sbb dec or sub pop add sub lea stos sub fcomi cmp xlat or xor movsb mov popf pop mov dec lds xchg dec movsl cli jl imul insb cmp loopne lds xchg ror cld and cs lds ds mov xor ds cmpsl xlat out and cmpsl clc fildll pop add jb icebp inc in rcl sub pop sub outsl inc cmpsl xchg ds mov unpcklps rorl mov pop vphadddq insl sub add ret pop pusha push pop addb xchg push push sub mov and jmp dec cmp mov ljmp sub push mov dec pop stos enter xchg divb call jmp fs xlat popa push jmp cmp adc (bad) cmp sub (bad) jmp and add test cmp dec xchg pop add xchg sub in or dec imul mov in (bad) mov push pusha loop mov mov push inc add iret lahf sbb jnp push push push jmp and in jl idivl in cld sub sbb and nop cltd cs inc dec or mov pop stos xchg mov xlat rclb xchg inc fiaddl pop push or test push sub test cli dec and and ret dec mov ljmp out roll sarl inc mov mov lret fmuls xchg inc sbb ds jle xor add push fcoms pop push xchg jbe xor or test addl aas mov push sub sbb xor ficompl dec ret xchg lahf rclb adc enter fisubl push jno add push push xchg push add push mov push lds xor in add jle setbe add in gs jb push inc fst es push pop mov jbe add ficomp (bad) inc movsb push decb add lock (bad) loopne dec adc (bad) inc or (bad) bsr cltd mov test fisubr mov jnp adc fimul dec and or pop jl leave jmp call pop jno (bad) (bad) repnz andb jmp xor or pop add jb je fild lock mov mov imul lret mov outsl jnp scas into sahf sahf add stos aas std inc push mov pop push mov ja mov and shr add push lock xchg rorl adc fld xlat mov shlb jge stos inc insl xor imul and inc push dec daa mov ret (bad) sbb sub in test xlat mov sub mov je dec mov push shl in add and cmp cmp or jge add adc iret das adc andb fstpt ljmp and ss push pusha add pop addb push and in ljmp sub pop dec add inc test push (bad) mov mov (bad) repz inc std inc pop loopne push or insl pop dec sbb mov sti sub negl pop add movsb cmpb jne mov sub cmp addr16 loopne push pop jb xchg pop pop neg xor addl xorl add rcrl test stos fmuls sub std pop sub outsb add cmc call adc pop neg xor and gs jns mov inc jnp sub and and cmp add (bad) cmp outsb ret ficoml or repz mov xchg pop mov in cwtl mov aas into pop mov jp push lods popa add jne gs push out and mov mov and test (bad) pop outsb push nop pop add and xor add jmp xchg xchg int3 add ret out mov cli dec push mov popa add jns cmpsl not ret (bad) out push fwait data16 inc aam ja mov (bad) outsl xchg loopne inc (bad) push mov pop test cmpsl mov in inc (bad) cmp mov imul push push mov pop push ds (bad) mov lsl adc fwait jg inc and adc xor xor movsl add imul adc xor aaa sbb std (bad) sub sbb cli xchg and sub or (bad) and lods cs mov pop jmp ret bound mov pop mov xchg addr16 sub daa mov (bad) push pop cmpsl pop cmp (bad) xor or (bad) and pop cmp jp negb mov pop inc lahf or ss in add mov in xchg in pop add mov mov mov xor add or mov and movsl inc jp add ja shl push mov jmp aad sbb fidiv inc ror int3 jns pavgw fmuls mov pop int and sbb sub lret push jnp sub mov add imul pop repz inc mov adc vmovupd stos add orl outsl mov or movl adc add pop pop cmpsb dec push adc and push push mov adcl popa aam mov push mov push adc adc aad jae cmpsl xchg pop inc lret test or sub adc fcmovb (bad) aas not sub lea dec (bad) sbb std inc or idivl insb cld adc (bad) std adc sub add addl lmsw popa stos (bad) jb or ja add je mov jae add push sbb mov sbb (bad) mov adc stc jne jmp imul push add jnp add mov cmc mov mov push xor ljmp dec dec pop stos push jmp and dec sub clc mov cs repz sub sbb ja jmp lcall inc xor mov nop repz inc cmpb sbb cld (bad) push jne mov dec and (bad) inc add xor pop or popa add add fcompl dec jbe adc int and add daa inc repz sub add push pop cmp xchg in lock add clc dec rol cmp es push or sub pop lods (bad) decb (bad) jno lock arpl sbb scas mov fs cmp call push sub nop test inc fadds sub add dec mov aas int pop push xchg int3 dec mov into add ss xor jo mov test adc or pop stc pop mov sbb (bad) sti mov add pop adc (bad) leave xor in ljmp dec inc inc jnp sub stc sub or push push xchg pop cmp jmp mov daa lods in or int3 sub imulb jmp icebp pop jl pop cmp inc push xor cmc gs jl out daa pop fs test rclb cmp rcll pop add add lret mov cvtpi2ps push es pusha push lock jmp lds push mov sub sub push out outsb and loopne movsl shll lock stos add clc fdivrs add mov in mov mov (bad) dec subb sub mov movsl dec ficoml cmp sub das inc pop (bad) repz fst sbb scas mov push mov inc imul sub add rcrb test jns and xchg inc xchg outsl xor sbb xlat add pop xchg bound loopne xor add cmpsb imul shr (bad) out pop dec push fimul cmp jb repz sti (bad) push cmp mov mov jbe xchg int3 and push dec sbb int into ja fs lcall addr16 xchg ljmp inc xchg xchg je push outsb fnstsw xlat dec addl lret or dec add ret mov cmp into (bad) mov cmp ljmp repnz insb movb adc pop sti das les add jmp movsb das bound iret cs and incl stc jno aas jno jl cmp and xchg pop inc loope push std outsb fdivr orb push jmp add add pop not push inc (bad) lret fcomps pop xor mov add ds sub outsl mov clc shrb add mov sub sbb pop xor pop lods add or inc mov jge lds in sbb ja add stos xor iret xor pop or lret jmp inc cmp jns negb jmp dec ret enter push sahf pshufw cmp mov push adc pop mov sub jmp ret in and lahf imul popa jmp outsb popa repnz incl and pop les not scas sub sub add mov xor jmp push cmc jo icebp pop sub xor push pop xlat xchg je lods lock cli cmp push cmp aas inc jp push inc jmp inc jl das dec mov adc ror and mov daa inc push mov sbb pop push mov adcl fadds test (bad) mov mov mov (bad) or imul lods lock stos lret dec cmp dec pop push cmp push cmpsl lods lock or sbb or aad dec test or fwait push sarb out sbb add cwtl xchg roll (bad) cmp add pop and mov cmp sbb cmp add rcrl xchg stos insb (bad) adc clc dec xor fcoml icebp lock dec data16 mov or and call add fisttpl adc pop push nop sub ljmp mov testb std pop pop push int3 or pushf push sbb push icebp jg jp mov mov stos loop cvtpi2ps mov add pop out rolb push mov int add arpl repz sub in mov jno fildl flds out dec mov add dec sbb mov jl clc add add push adc sub cmp cld imul pop inc xor setp dec or mov sbb dec cmp and cld sbb subb mov (bad) in xor xlat jge jo cmp test cmpsb clc xor arpl add xchg cmp mov mov xor arpl loope out inc sub fmull add cmp xor fstl shrb sbb ljmp dec xlat ds out xchg sbb dec (bad) add pop sbb dec loopne jae hlt add sbb jbe sti pop test and mov cmc xor dec and test adc ficoml add push cs in andl fdivl add ja and sub sbb xchg push cmp push lods sub shrb je mov cmpsl mov dec das lret inc push xor mov cwtl loop push ficoml aam add loopne into jo jecxz adc (bad) cmc test push xchg and mov mov loope inc push jno int3 xor inc subb cld test push lea dec mov je ret xor sarb (bad) xor daa sub or repz inc loopne sbb mov xchg or cli iret jo call mov je das inc add xor inc mov add add loopne cmp and mov mov xchg mov inc imul push add xchg mov mov push enter xchg in icebp ret lock or add or dec cmpb shrb cmp test shlb (bad) movsl popa (bad) jne dec stos sub rcrl add dec mov cmp mov xchg enter mov cltd call inc loopne sbb add stos and push fist shr not int3 stc sbb dec mov adc cmp rcl jp or out cmp mov or fldt xchg xchg inc call sbb aad clc and movsb or adc jo stos add dec movsl ds adc loope subb sbb dec and subl ret loop cmp test lock fs jl loopne jo mov ds sub sbb mov adc loop adc lahf leave jl sub push int3 fmull ret xchg je or push cmp icebp inc hlt nop jo mov xor mov or orb add push shlb add insl xchg (bad) add sub or andl ret js sahf pop push daa lea push and popa fs out add into ljmp in jp add sahf cmp add jl lcall (bad) hlt rclb add cld and rcrl push xchg dec pusha xchg call and xor fwait adc cmp stos lock (bad) dec fdivrs nop nop sbb fimull aas inc clc (bad) lock push adc test add and mov cmp add (bad) jne mov cmp mov add push push pop inc push in fdivs into sub cmpl inc add scas insl pop rolb int pushf add frstor shl inc xchg cmp push add push jo daa mov je pop pop add sbb pop adc mov test mov jns loopne xor fistl adc pop add add pop xor shrl enter adc dec ja xor mov sbb outsl ja or dec xor cmp dec sub mov loopne add xchg xor pop lahf ret inc popa ljmp add pop ja push pusha dec push daa rorl jecxz mov test loopne mov nop jp xchg xchg cmp xchg sub push push dec jmp xchg sbb clc pop ljmp call pop pop ret push sbb mov test cmp fs push add iret in jp stos pusha js loopne push sbb and outsl cmp xchg in xchg lock mov add pusha xchg fcoms or mov mov rorl sbb mov out fmuls scas addr16 or and xchg fsub iret add mov aam rcrb (bad) fisubr (bad) movb inc pop mov add roll jo mov call fsts fcomp cli pop pop ret popa (bad) jmp vmovlhps dec or (bad) mov dec inc mov xchg loopne dec stos mov pop adc cmc xchg add mov (bad) aam mov ror hlt and pop pop ret dec push mov xor in xor shl xor faddl loope fistpll xorl push ljmp jnp mov add mov sub dec mov rcrb cli add push jge pop in js dec jecxz sub mov test js cmp std cltd inc push jl sub test add sub pop inc ffree push std sarb add mov sub sahf inc jo test dec pushf popl and xchg cmpsb push mov xor add inc or ds add xchg stos mov scas sub enter adc movsl test (bad) hlt lea pop jecxz and jns repz dec push pop les sbb jg cmp dec sbb dec mov ret (bad) jno pushf jecxz fsubrs and mov into or add sbb movzbl orl loopne cmp sub es test jle push pop in cmp call add and add add cld loope jns sbb adc rcrb sub jl push push icebp mov pop movd movsl movsl xlat bound add stc shrl jb xor pop aam mov rorb adc cmp adc rorb fmull inc nop (bad) ss inc je inc lea adc xchg movsl sbb inc faddl push dec daa jb add cwtl movsl (bad) bound rep dec mov mov out and cmp movsb call pushf add add mov cmp xchg popf ds (bad) pop movsb out pop js popa xchg ret rcll inc aam sub cmp mov movsb mov add jp push pop test shl inc in push or mov loop and ret nop fsubrs sub or push out faddl cld sub (bad) push cmp pop adc cmp rclb stos mov sbb arpl dec xchg and sub icebp cmp inc mov mov or fsubrl ds iret out cmp lcall (bad) mov pop dec cmp cs inc jecxz enter cmp stos cmp and xchg xchg xor xchg rolb jb sub ror cmpsb ljmp lods fiadd add mov mov dec pop jmp xor subl in xchg and mov (bad) ficoml loopne jmp pusha sahf outsb test inc xchg icebp pop xor and xor or xor push adc push insl pop (bad) add adc cmp inc lea punpcklbw pop dec pop inc mov sar add cmpsb pop xchg cwtl mov or fsub faddl pusha pop scas hlt jb add cmp xchg mov fstl xchg sub iret mov popf loope and push test loop dec fcomps dec mov nop mov or leave xor in xchg add pop cs cld ret xor dec or sub jne and lock enter adc xor add in cmc sbb out cs loopne cmp imul cwtl mov adc stos pusha mov fucom pop pop mov ja jo xor inc push cmp push push pop aam pop in lods lret in adcb ffree dec mov into mov sbb inc lcall int3 inc scas or and push add pop mov and aam push test xchg and shrb and mov or and dec xor pop adc inc imul cmp dec test add cmpsb xchg sbb xor dec arpl popa in or pop xor adc add ja or es rol mov cmp pushl push aam sbbb push lea xchg dec fmull sbb add mov (bad) jmp lcall cmp outsl jmp dec push add jmp (bad) loope add inc (bad) loop pop test mov ficom hlt mov push jp push add sub and sbb push fildl sahf push pop (bad) mov jo pop fisttp cmp dec mov rorb pushf cmp out pop and xchg stos lods nop mov fstl dec loopne (bad) into sbb add (bad) fimul jns and lahf or pop out dec dec (bad) adc pop push push fmuls rclb pop or add iret je gs outsb cmp mov add ds iret xchg ror sbbb mulb or mov dec (bad) fwait push cli ljmp dec ret jo mov add nop push push pop rcr nop sub jb loopne loopne mov rorl (bad) pop pop hlt mov inc sbb aas mov add adc cli (bad) or jecxz,pn fs loopne inc mov int3 cmp loop sbb out das mov mov mov inc in and dec and dec add jno stos pusha adc fs jecxz jge sub mov cld jmp cmp pusha push loopne cmp fcoms add dec ret fiadd dec mov add movsb popl sbb nop dec adc sub fs dec (bad) or subb adc or sub xchg inc loop scas (bad) mov decl or mov push sbb sbb pop wrmsr rorb sbb xchg enter rep (bad) lret std add popa testl imul xor mov sub and movsl xchg iret push cmp xchg push call enter in inc das out in in sbb mov dec mov ljmp (bad) loope lods cwtl cltd (bad) in ret mov add mov pushf adc das or in mov aas pushf js xor adc das imulb or or add jle cwtl repz inc mov fdivrs lock outsb imul add pop adc js mov lock add jmp and sbb mov sahf mov inc add jbe sub in in mov jge fdivs mov dec xchg push sub or das dec and cmp and insb (bad) out mov ljmp into push iret sbb nop sub sub aaa and xchg add push loopne pop cmp xchg sub sub mov adc pop push aaa xchg call add adc xchg popf add leave stc scas add adc and loopne lds int3 add inc loope mov orb test nop sbb mov sbb (bad) mov ljmp pusha or cmp stos sbb mov or or add or mov bound aam mov jp (bad) (bad) addr16 jno adc push loopne test orb mov je add iret or (bad) fistp pushf adc xor adc and add add pavgb jge add jae shlb bound sub or dec jo in mov cmpsb pop xor xor roll subb movsb mov or nop nop sub push xchg and (bad) mov add xor push pop cmpsb mov aas sbb dec inc xor nop pusha out add add and inc add pop cmpsb sti iret pop mov mov arpl mov mov in mov pusha sub adc fistpll push pusha and test or jg mov je dec xchg add repnz mov leave push mov or arpl stc cmpsb xchg fadds movsb adc sbb gs or rorb inc orb inc mov dec cmpsl clc fstl imul add inc andb pop into std fsub push push les sbb mov mov push je add movsl in in push sub dec dec mov adcl push push sbb (bad) mov mov mov and add into or aam inc aaa das xor lds and (bad) insl pop enter call mov mov fs adc push mov and push lods les sbb loope les xor adc or mov add (bad) fcmovbe mov arpl mov aad (bad) in mov fcoms or or pop cltd clc pusha cmc test inc inc (bad) enter aam scas pushf pusha push in cmp mov add or out push and mov call push add pop mov mov insb rclb add fildl in or scas adc out in cmp pop and lods push adc add push test mov nop lret and mov pop xor adc fninit pusha dec mov cmp mov xor mov fsubp mov adc ljmp js ret mov mov fs sub sub nop push xchg or or jl leave or inc or lret mov loope add (bad) es and cmp bswap ror xchg inc outsb push mov (bad) sbb (bad) pusha dec sbb sti xor fisttpll and push mov add add das xchg push xor and in xor push enter add cmp les add in mov std inc add shl int3 add out cmp popf cli cs cmpsl xor xchg add (bad) adc push xlat sbb pop pop xchg push cltd dec cmc xchg mov xorl fs dec jle add jg fimul loopne cmp cs enter movsb jo addl cmp mov scas sbb inc cli ss pop pop push dec push mov xchg and in xor out inc ret mov adc mov push sub and jns je (bad) cli and cwtl nop add sub cmpsb mov sbb aam jg xchg ficom sub mov mov or xor cli push sahf ljmp into jo rorl mov mov mov or cmp pop sbb pop xchg and sbb addr16 out scas cld inc xlat lds xor int3 mov adc mov fdivrp inc into mov sarl xchg cltd adc push mov fcoml sub loope scas jle pop movsl clc sub pop inc adc repz mov sbb cmp pop cmpsl adc adc and rclb sbb and jo movsb jo in stos call repz mov xlat add or ret or pop in adc (bad) push pusha inc and jl je mov and frstor ret es imul sahf xchg mov or add mov mov add rol (bad) xor dec or xchg pushf hlt das cltd xor sub les add stos rorl jl mov or test in cmc scas mov pop adc add mov insb (bad) mov or add in cs movsb mov pusha pop jmp xchg or jns sub scas rorl shrb dec iret push pusha cmpsl pop rcrl add adc push sbb mov and pop lock js movsl insb (bad) fdivl sub (bad) add sbbb scas jle mov stos lcall enter movb dec fdivl sub jns pop pop xor mov cmp test mov cmpsl pop aam cmc setbe shrb add ds or inc das pusha adc ss inc jmp adc mov inc jp and ds add add pop adc sub and mov cmp (bad) (bad) outsl leave fs mov cmp lods cmp rcll push add and shrl ja xor or (bad) popa pop in test fs outsb loope jmp xor adc jmp in xchg push (bad) mov in sbb pushf and jo xchg stc adc ret test add push cli jbe out mov xchg lea shlb mov push clc jo add (bad) dec enter clc add mov pop je andl mov (bad) sub movsl lcall or inc (bad) out popa lods leave and loopne inc call cwtl mov (bad) int3 inc dec test or xchg xchg or adc pop pop mov incl int3 inc nop ljmp (bad) clc add (bad) adc push sub js fildll repnz xchg movl mov or insb adcl sbb xor mov pushf jp add (bad) jno sbb mov stos mov lock jo fcoms pop adc inc dec jno (bad) mov mov in loop pop leave cmp fs dec in and xchg je and (bad) arpl inc mov push test inc dec les je mov gs stos pushf dec pushf ds (bad) jecxz mov mov add push inc or inc jl js js pusha jmp sbb addl mov or aam cmp sbb test mov xchg sub les push fimull fs lock or push cmpsl dec std daa add (bad) bound push add insl inc mov jbe add icebp andl sbb cmp scas cld sbb pop test jmp push jns push cmp sbb fistl out inc out xor mov or cwtl add cmc add dec cli inc ljmp out movsl ds insb test cmp lods int loopne enter push sbb push or test xor enter or outsb sti adc add inc sub pop (bad) repnz out sub adc das sbb sub dec and mov inc aad sub pusha push adc add mov or punpckldq mov add push leave out in lock push push adc mov jmp push pop in mov add cli push mov out popf ss xchg aad fisub sbb or cld push clc movsb test sbb jl mov jge insl sub xchg ret test cs lods cwtl xor pop in dec (bad) lret and jp and shrb inc add sbb jmp ja hlt addr16 sbb sub std pop xor mov sbb add push push pop rcrl iret mov outsb push xchg pushf jp add push shrb mulb add and aas cmp out push (bad) mov dec add jnp jp xchg jp loopne gs nop push les inc mov cmp test inc dec out dec dec je add enter bound les push out out push push test cmp cld and add or loopne cs orl mov sahf pop bound int3 adc js dec jge and mov in insb sub pop ret aaa enter pop loopne loopne icebp sbb add mov inc and and mov adc cmp in mov inc add rcll in jnp cli inc or xor insl out rorl dec pushl xchg and (bad) call push cmpb divl inc aas inc out pusha mov lret dec cli jl xor fadds cs fsts adc add dec add std in lret sti call sub xor mov add movsb mov jmp jb ficoml test dec pop mov nop and test inc dec push sbb dec cwtl sub xor mov mov add xchg cld (bad) ljmp jg cltd adc aaa inc cltd lods or mov or mov jl mov (bad) (bad) jo adc gs or dec incl push or rolb pusha (bad) sub mov fsubs push mov mov movb mov scas addl je clc leave pop stos mov xchg pop movsl or andl sarb je int3 aad and lock shrl test or ja mov cmpsl dec inc jns test (bad) jecxz test add push add (bad) pop (bad) mov lret mov sub cmp mov nop or lods mov aam cmp pop in test lcall pop and mul es mov push dec add jl daa nop int orl adc mov cmp les js cmp pop fwait test (bad) insb add xor xchg push pop push leave insb mov mov mov sbbl addb sub (bad) aaa jo sub dec mov pusha or ror call sbb div iret push push loop icebp ja add daa jge,pn jbe add int3 sbb mov jns jmp adc push pop fmuls jno lret mov inc xor or call xchg pushf and mov cmp push mov xor sub jnp sub (bad) rcrb push add pop mov sbbl mov or add clc fsubrs push enter pminsw popa cld ljmp pop sbb dec fcmovnu test xchg push fmull (bad) movsl add add sti movsb pusha insb and push fadds xchg or add dec add pop fisttpll sbb dec xor in and adc sub xchg add inc imul xor idivb push add fidivr pop cmp lcall mov pusha int inc dec inc lock fisubr jbe ss leave int3 sbb or in pusha mov mov dec cltd inc push and ljmp repnz faddl into jge jmp mov sub push cmp stos mov pop xor adc je push jbe sbb and outsl mov dec inc icebp push or ret (bad) add aam stos lds pop sub adc shlb mov call test pop jl mov add cs out lahf pop scas add (bad) dec inc sbb int jl sbb push xor aam or mov (bad) fistp fstpl or sbb fadds dec loop std ficoml mov or sub dec sti (bad) jbe xorl ret push nop test dec push mov fiadd cmpsl mov sbb dec cs (bad) cmp pop mov mov inc popa adc loopne (bad) mov mov fwait jl xchg dec es das jne stos mov add out daa lcall add cli xor stos add adc gs enter into jl pusha movsl mov adc addr16 in push sbb jmp lret and adc cmp test or push adc xor rcrl inc aaa js je ljmp out test sub pop mov pop xchg clc cmp outsl addb mov call int3 jno xchg fs stos sbb icebp mov lcall jno mov rorb data16 (bad) pop int3 inc lods inc sub aad mov (bad) pop nop lock pop add cmp arpl aam lods stos xchg js ror adc stc or and xchg cwtl add adc (bad) xor sbbl xchg ror jae mov push sahf cmp lret xor call mov add icebp test mov ljmp push cld inc add loope mov lock insb aad ret clc mov fwait mov inc (bad) (bad) xor push stos mov mov or fdivrs js (bad) (bad) cmp lea jo insl loop add sbb xchg push rclb inc inc sub jbe xchg ret inc add int3 and in daa mov or cli jb cmp pushf push adc in sub call nop pop in xor add jno lret cmp test sti fwait int3 push or inc movsl in push cmc push or pop add fsubl add sbb call rcrb (bad) dec enter add faddp mov pop mov subb or xchg bound dec adc sbb pop gs mov pop and rclb fnop mov xor push xor adc sbb push pop fcoml nop paddw jne clc (bad) cmpsb cmp pop stos dec sub add jo clc js sbb in mov mov movsl orb (bad) lock addl dec or push pop lea inc sti faddl test dec pushf add cmc and cli addr16 pop rorb and cwtl lahf lcall cmp adc inc xchg in xor movsl or jns push add pusha dec gs dec push cwtl daa inc sbb xorb mov into movsl dec dec cmp stos jne xor adc aas fstps pop add bound cmpsl pop and or sub inc mov fnstsw add out xor dec mov fs cwtl aam sub xchg (bad) in xchg mov mov sub mov cmpsl rcl or push sub lahf rcl nop gs jb inc (bad) and jl and lea jo movsl les adc lret loopne gs loop sbb loopne (bad) lahf les mov fcomps pusha movsl inc adc pushf inc push jecxz add cmp pushf jle push enter push add push add fisttpl cli cmp jmp daa (bad) aad adcb (bad) das add shlb fildll daa xchg mov adc mov mov pusha sub sbb and pop adc push sub imul cwtl cmp test jnp cltd pop dec jl push pusha pop and mul add jle sub add rclb in les lods lcall xor xor pop mov imul dec ficomp call jp or lds jae jge and inc mov add jae cmp hlt es mov and movsl gs or sbb mov pusha and notl dec movsl sbb fcmovu dec adc (bad) les xor lea jbe int3 stc or js or push mov fs cwtl jg xchg cmp je movsb or sbb inc mov cmp cld cld out ja rorl enter cs xor xchg jmp cwtl mov pop cmp sub add xor int3 nop test fsts push jmp js add ljmp (bad) jae fnstenv jmp or (bad) mov sub mov test or je inc nop xor cmc ds xlat mov mov inc imul xor in mov imul sbb orb out mov lcall jbe loopne aas xlat aaa sahf jnp xor or xlat jecxz xchg add fidivl and inc aam cmp sbb fbstp dec sbb outsb (bad) jo mov test sbb xchg nop cmp dec stc jge sbb mov cli bswap fstps add xor push out jmp ss mov and mov ja sbb jo cmp outsl ja adc jmp add push into enter xor push sti add mov int3 lods mov inc add jae add or jge or add lcall and adc add fwait dec sbb imulb out xchg push xchg or je sbb dec je ja nop lret es xlat sbb and (bad) icebp pusha add lcall adc sub pop jmp push enter jo push cwtl movnti mov adcl cmp int data16 cmpsb fadds in mov cwtl popa shl or loopne incb xlat ret repz rcrl faddl xor out fildl test cwtl js imul mov push jnp sub dec mov inc sahf or neg adc xor mov add jo (bad) loopne push push mov stos popf cmpsl sbb cmp inc ja icebp add xor and sbb test pushf inc push or fdiv ja inc xchg lods add jl loope dec jno test or lcall dec add mov rolb push push jne imul rolb xor lret in xchg mov dec xchg dec and ret or int3 subb int3 sub push test nop sbb mov and inc test jp fstpl pusha (bad) (bad) fadds jo imul cmp cwtl lods cmp insl call sub int3 push test fs xchg es add in lods clc iret ret add es lea pop (bad) jno xor xor adc mov or pop mov scas ret inc test ds mov push pusha aas add or movsb in ret loop icebp mov jmp mov or pushf sub fsubrl jb in mov rcl lret push add xlat xor jae add jp jecxz sub or int3 pop add sbb adc jo jo jle add jno sub icebp dec pop push mov ss mov mov daa push mov inc std adc pop call outsb and add sbb dec and dec leave cwtl sbb and pop sub jmp cmp loope je xlat int and push fnop les dec add shrb mov es pop cwtl test aad and push mov adc cmp ror add xchg insb xchg xchg cmp mov xchg int3 or jno (bad) xor and loope add (bad) and add pop mov add xchg insl (bad) fdivs iret push (bad) ljmp xor aas enter imul pop int3 xor pop nop add push (bad) test repz repnz insb cld xchg call in outsb shrl mov (bad) adc data16 mov push addr16 adc jb mov adc dec in dec lock or rorb cmp (bad) mov sbb cwtl or xor and pop sti mov cld push nop ret and mov xor sbb jo ljmp andb je aam dec mov je cmp insl es outsl mov dec sbb shlb push fimul sbb les pushf push pusha jns jbe sub enter jne inc jg sub movswl fadds sarb add xor xor push mov (bad) enter or inc ds add sub jecxz push imul xchg ret mov mov movsb rcll aad insb test xor out cli out test mov pop mov add sti shrb fidivrl out loop push lods xor jge add adc fildl aad call sti cmp jbe ss jp adc mov or inc pusha movsb out add pop sbb pop add ss mov push popf mov scas pop add xlat daa jmp pusha jl cli push lods jb je in jl sub mov pop xchg leave and shll aad aas pop mov push fsubrs (bad) mov inc mov sub sbb test dec hlt lahf push mov rorb addb inc dec pusha je dec jmp jmp push mov out sbb arpl inc aam mov sti cld dec mov xchg pop pop scas jno mov jl xor add cli or jbe cmp (bad) mov jb sub or imul inc iret push jns movsl cwtl insb lock mov or xlat adc ret or push test test cli or add in jg shrb push mov out inc mov loopne shll loope inc stos jb jg pusha sub pop add inc subl imul insb adc sbb xchg int cmovs addr16 fs loop notb addr16 cmp or push sti mov jl and xchg cmp or lods dec push and mov sar mov xor movsl mov ds sbb hlt mov dec loopne sahf add xor sbb jnp,pt xor add adc xor mov pop sub std adc adc sahf and enter decb fcmovne push cmp cmp in out stc ret add shlb ljmp xchg or popf add imul clc jo lods fnstcw je jmp in addl sbb mov or and in inc lods daa call test dec stc add fnstenv push fwait pop lea daa jbe sub pushf inc les (bad) stc test mov stos negb or and pop add out inc xchg add ja cmp int3 aad cmp in add push or jl nop hlt xchg aam dec pop xor aad add push or cmp sbbb pop dec mov cmp dec loop fisubr dec popa jae lock les sub hlt xchg inc (bad) dec rclb adc lods jo mov mov insl pusha add pop fwait cmp lahf add mov notl and adc es xlat mov fiaddl les (bad) addr16 xchg sbb mov push stos idiv sub test cmp cmp daa call rcr dec mov fcomps adc lret faddp call cmc mov cmp inc arpl adc lret in dec notl mov add sub adc cmp cwtl add mov ljmp pop push pop (bad) mov mov jb movsb clc (bad) hlt sbb xlat lock inc adc push lahf leave mov es loopne dec mov jns shlb orb aad stc inc int3 (bad) inc aam jle add sub aas lds and mov addr16 movsb dec push insb cwtl pusha xchg mov mov call test cmpsb add jns movsb jno and sub jp aam (bad) xchg inc cmc jg adc sahf mov adc mov and sbb shll or pop cmp mov fnop add outsl add jmp add push insb mov add xchg hlt jmp es jge cmp fldl lods movsl roll add (bad) cli (bad) or test xorb push hlt clc je lret gs cmp or les add cld int dec pop inc stos lahf sbb and les test pop xor mov add mov je pop sbb adc stc or outsb mov and and add popf pushf dec push jl xor sub subl ljmp mov mov and inc push outsb ror vpmulhuw mov and and sub mov dec pop adc (bad) mov loopne (bad) cwtl call inc test jno lods xor out sbb fwait loopne push add sub or and dec repz cmp cli dec orb mov cmp std pop sbb xchg ret subl nop sbb push inc mov xchg pop (bad) jmp mov jle rol pop dec shlb dec inc cmpsl out (bad) sbb push loop push je pusha push sub push xchg ret movsl and cwtl dec or or das sbb or push (bad) lds je dec ds add popa sbb push inc mov int3 flds push mov xor inc jl js in adc stos mov js inc (bad) sub dec out in les dec iret (bad) testl mov and pop sub (bad) cmp bound mov inc mov fucom aaa mov xchg out iret movb sbb jae mov dec xorb enter int3 or stos gs clc jmp es lock pusha repnz or push or pop nop jbe add jmp mov mov and fsubrl xor in test inc jbe cmc adcb xor sbb add test or dec js jge rorb inc in call jge sbb sbb lock fisub or adc cmp sub shr pop adcl or adc lods inc nop pop dec mov mov and push push test rcr pop rcrb pop pop inc adc inc imul inc inc sbb lldt lret mov mov mov insb sbb sbb mov xor or (bad) hlt lret jae sbbb cmpsb inc adc push xchg add (bad) pusha js mov roll inc and mov pop icebp pop mov call and enter cmp push xchg mov cmp jae sub push cwtl rorb pop out nop dec pop xchg lods lods enter pushf jo add fs into jo insl cmc shlb into je adc and xor jne adc mov jbe (bad) xchg or and and add jp fldcw mov data16 mov mov aam inc iret popa push cltd jo add xlat dec xchg orl or or pusha inc clc test xor add push mov mov push mov and bnd sub aaa xor mov add or jns and cmp xchg mov loopne add cmp jg mov add add stc in jl lds pusha call sarb movsl and stos lcall dec push imul add pop in repnz cmp and and popa xor sar je mov push and mov nop jg add push sub ds pop inc rcrl les (bad) fcmovne sbb xor or xchg and fsubl inc in pop add lea mov adc inc lcall pop fcomps pop pushf lret push sahf mov xchg dec lods aas mov incl jo lods movb push add push mov loop xor ret mov adc pop iret (bad) dec stc cmp fmul int3 xchg fs mov and and pop add mov sbb push pop inc loope pusha mov mov jge add push ret (bad) movb push push gs ss inc pshufw test cltd es mov add sbb sbb (bad) lods lods pop cmp rclb dec and add xor ret cwtl imul xchg jg xor fidivrl inc sub add sbb push add mov and or dec mov addr16 xchg or loopne mov rol mov add int call outsb dec dec testl and lods jo cmp inc push add (bad) rclb push data16 or aad xchg cwtl inc fidivl and sub outsb cmp inc neg add (bad) mov leave lods and jle sti fwait and fsubrs sbb in mov push (bad) xchg cli add push push sub and fcompl push push jno sbb pop lret cmp je cmp mov mov adc push add loopne or stos insb out ficompl nop sub jl xor mov mov lret mov adc jge and and je mov movsb mov dec lods mov (bad) loop or mov rcrb icebp pop rcrb inc mov enter mov jle push test into nop push rorl push add je push xchg rclb fwait xchg data16 int3 in mov mov mov cmc and dec imul adc inc call punpcklwd nop cltd pusha xchg loopne test adc shll cmpsl (bad) xchg lods inc arpl push fistp inc rorl inc and xchg (bad) je pop (bad) arpl js pop movl fisubrl xor jbe cmp clc pushf cmp test pop pop push rolb mov fldcw pop nop xchg les test jns sub ret xchg cltd dec xor cmp pusha nop or cltd movl or jle flds sub adc jae mov sub push cmp test loopne clc rorb inc and movsb push add (bad) ret sub push (bad) cwtl cmpl mov xor popa push fcoms xchg loopne dec dec mov rcrb mov mov xorb lea ss jmp js or divb fist in es movsl inc mov dec test dec add add mov stos sub enter sub aam js in cli sbb call push (bad) out mov add (bad) and pop shl stos adc push gs mov jl outsb and outsb cmp mov clc or repz scas (bad) xor je sbb neg in inc (bad) cmp push arpl into clc movsl xchg and lods pop push js mov or and adc pop push test xor out out call sub dec xor xor popa mov ret je fcmovb or xlat mov hlt push (bad) sbb xor out (bad) daa enter sbb sub ja adc pop xchg add lret enter in push pop sti movsb inc ret sbb popl fnstcw lahf pop dec loopne mov sbb insb test mov or pushf mov and jmp mov dec imul scas or hlt and inc imul push jno sub push add mov aad insb or inc sub jo stc and les adc call mov inc int3 or lock push and jl mov popf pop or xorl outsb loop call jle pushf inc out push and pop lock adc adc push and pop nop ret add enter lea or or or push cld lret test lock gs mov adc dec out xchg pusha cmpb cmp movsb push mov xor add mov xchg pop adc out cmp or lock sahf add cltd inc pop out (bad) mov push add mov pop pop sti pop mov cmp xor cltd (bad) ljmp loope cs pop push inc loope ret flds push adc mov lret sbb mov mov lds es popa mov jecxz out aad inc enter test xor jnp jne (bad) mov inc incl push aaa xchg or inc std adc mov and dec hlt (bad) mov cmp xchg in ja jge es xor aaa pop pop (bad) fisttpl pop or (bad) jb pusha test pop fisub ljmp in add or dec xor mov sbb add pusha sub push jge push mov call jo imul (bad) mov add pop pop push lcall or test push (bad) and lahf sahf pop jns inc jbe subl and cmpsb add xor mov jmp pop dec test add lret push xor jno add (bad) cmc scas cmp mov pusha or push fs idiv jbe int3 pop inc sbb ficom pop add (bad) jo in pop and mov jo add and repnz adc js push popf sbb inc insb mov lock adc push jno xchg adc push push cmp lds sub arpl cli stos mov inc enter test mov push or inc jae pusha adc test movsb mov aam or mov pop and cmp sahf test jmp popf addr16 push mov (bad) in (bad) clc mov pusha or pop scas test push mov jge xorb adcl add cmp loope scas sbb out (bad) clc jb (bad) mov in push jle and or test mov adc jno dec jno adc rcrb out fcmovb cmp cmp mov jp inc inc fcmovb add pop push adc mov (bad) xchg push xchg mov cmpsl pop fistl int dec mov sub mov jns sub add pop xor jno addb test add fst add dec mov out pop cld push addb loop subl shlb movsb sub mov fmull inc arpl icebp cli xor and or in cmp lret adc sub push push jns inc lahf pop adcl pop mov aam inc jns or test adc adc dec test add inc push sub xorl cmp ljmp dec les rclb (bad) xor outsb sbb les js,pn les xchg sbb les jecxz cmp dec jo inc pop mov mov pusha fistpl sahf inc ja mov sbb popf test jne imul xchg cmp mov cltd int3 cmp test push push jle imul sub incl sbb xor inc jl test outsb out pop or mov and add sarl inc test and push push enter rolb popf arpl imul xchg and pop in (bad) stc dec clc push out roll xor hlt mov mov push call test adc in cmc lcall daa ja pushf loopne stos wbinvd cli push jo ror lcall xchg and lds ja js or xor xor push add adc cmp xor clc pop pop roll adc jp loopne mov xor mov fisubl nop js out clc and lahf loop nop add insl insb lret or shl push jns imul mov dec inc aam mov std or cmp clc je inc xchg loop cmp out sti std jo mov insl (bad) das sbb dec les push cltd fnstenv jo and cmp dec rcll and and push cmp ret lcall mov loop arpl inc sbb cmp dec dec (bad) inc (bad) ja xchg out nop jo jnp or jae or push mov sub add pushf clc xchg or push lret pop push sub or xchg test shrb sub push cmp sbb dec cmp add outsl leave sbb push push adc fmul and shrb jo push out icebp pop cs int3 (bad) pop sub adc inc pusha lock sti fnstenv pusha sbb push jmp (bad) xor nop adc push cmpl cmp mov mov dec les nop movsl jo loopne cld push or ret stc cwtl aam push add jmp dec sub movsl cmpsl in adc hlt mov and mov or pop push pusha mov rcll xor in lret inc nop mov xchg inc xor and xor call add lret aaa and sbb jae test rcrb test imul mov rcll mov or lret cmp add mov test push mov test popf sub mov mov inc ds mov clc (bad) push mov pop imul fbld mov (bad) mov inc adc jmp inc shrb add jno sbb sarb add mov fldt ret clc fs mov and add icebp add incb pop fisub mov test adc or (bad) out add or sub jle scas xor enter pop shrb xor adc inc and pop and push mov scas cmp dec xchg push mov bound jl mov jb add (bad) pushf cwtl mov pop sub or inc inc enter data16 pushf outsb mov test rorb xchg pop sub xor je (bad) mov lods mov mov xchg jecxz bound mov call push mov xchg push mov mov cmpl sbb cmc nop mov and add dec inc pusha cmp scas nop clc pop cmpsl mov leave fcmovnb fstpl pop jns aad insl das nop test popf cld stc out add shl and xor nop lods call js xchg and dec movl cmp mov test popa xchg ja imul xor push addl sub test nop aas jo add and std inc lods test in mov xchg xor mov sub adc mov mov xchg fmull dec push ss ret push add divb jb shrb loope pop popf out inc out or scas dec arpl or push mov movsb out mov dec inc popa lea in in add push mov ja loopne fstpt mov xchg cmc mov add mov push cmp cmp out dec mov and je add mov (bad) push mov cmp out loope lahf rol mov pop test sub ljmp mov fistl mov jl add out cs int3 add xor jno sub shlb flds and push pop aam pop push dec dec aas rorb cmpl and add push push jno dec jge clc pop dec mov lret lcall stc in adc adc xchg out bound fistpl imul sbb mov sti push sbb inc in pop mov pop pop mov pop add test push xor jl adc jb sbb mov jno sbb xchg or nopl sub fcom pusha idivb cwtl sbb aas dec adc inc adc addl mov out push sbb jb push mov xor add cmp shrl or fidivr addr16 add adc ljmp imulb test adc sahf aam iret inc jl fsubrl pop cmp (bad) xlat sub iret push push stos cld cld add pusha or test add sbb out add sti mov xchg sbb mov test rorb aam decl or pusha sbb insl mov into mov test in pop cmp cld xor sbb mov sbb aas cltd sbb cmp negl sub fwait add cmpsb mov stos movl lods adc loopne sbb xor iret and inc stc pop cwtl xor push add inc inc pop (bad) sbb add pusha dec roll in scas dec pusha inc jne sub add and enter pop incl call in add addr16 add mov mov aam in call inc or (bad) dec and insb int sub insb iret jge or (bad) loop sub add push or sbb cmp mov aad add sub pop sub int3 xor adc sub ret les cmp or mov (bad) pushf xchg cmp pop test xchg sbb out (bad) mov aaa mov mov (bad) sbb inc sub add add mov je enter dec adc mov pop fwait mov fstl int xchg sbb jo (bad) pusha sub dec loop int push adc or inc cmp lock add rolb dec mov add add gs lods mov sbb into or xor cs mov mov es int bound mov rorb mov adc les add ret xlat addl cmpsb adc mov (bad) test call fcomps rcll sahf xor les jb in cmp mov popf insb pushf xchg mov mov cmp jae inc adc call push and mov fcoml mov in shlb xor les rcrl xchg jae into test push add inc hlt cmp adc arpl jb or sbb insb ja dec xchg add xlat (bad) in mov add (bad) fsubs outsl jne cltd lret pop rclb into push or cli or rorb mov repnz add vandnps rorb icebp rcl cli add imul adc cltd outsl dec call xor mov call add sub fs jl outsl (bad) push out pop daa shrb or cmp test dec gs dec shrl outsb inc (bad) call sbbl lods in mov outsb pusha mov popa sbbl cmp daa out in mov xlat adc push test rcll out repnz mov pop inc (bad) arpl mov das sahf insb and inc push (bad) push cmp xor loopne movsl mov xchg cmp or sbbb add std adcl mov addr16 or test (bad) jbe add scas add sti mov add rcl pushf leave jp jno imul je enter les sub (bad) dec rcll inc in mov mov fsubs pop mov out add roll xor call and jl sub xor enter hlt inc mov mov clc (bad) mov push fsubrs outsl imul inc shrb or cmp cmc jb insl xchg js or test mov outsl inc test bound jbe mov or jl pop mov insl mov cmp jmp je mov sub (bad) add ret pop rorb clc insl push pop push rolb and jo adc icebp add adcl or (bad) mov mov sti push mov loop cmp xchg jmp jbe and (bad) aaa repnz lahf (bad) jb pop loopne xor adc enter pushf std rclb loop subb daa add xchg mov inc fwait mov jbe rcrl add popa adc (bad) dec and jnp push fisubr mov xchg jp add popf pushl icebp aas inc test dec nop xor cli int3 jno sbb sub into push int3 add mov or dec in or dec adc pop ds push test or ljmp aas add fldl pop (bad) scas sub enter dec adc dec fmull insb push into cmc call (bad) or es cmp addl jle adc notb inc insb arpl xchg pop fs loopne popf push cmpb arpl (bad) add das pop fisub dec hlt mov pop pop mov (bad) call rorb mov call adc inc daa adc xchg bound mov sub rclw sbb mov jno push push aam sub push daa push call dec loopne (bad) cmp imul xchg clc push sar es sbb fidivl or add adc je sbb sbb mov xchg and dec aam ljmp xchg ficom insb cli or mov clc add sbb xor mov or add ficompl arpl add cmp jmp pop jb (bad) test sahf les xor dec xchg push imul imul jg adc and (bad) or mov loopne incb sti js xchg (bad) jbe push dec jns rolb lock or inc jg pop xlat mov les lods loopne cmpsl adc loope movsl push (bad) and jl jne or je test gs adc jge les outsb add and or and in mov clc mov mov jnp,pn mov mov icebp or or rolb add jmp lock in test pop pop aad xor lahf inc mov sti jmp ss ret (bad) insb adc mov xlat adc mov std xchg and nop mov fdiv aaa mov data16 xor push push mov (bad) in cmc xor imulb in std cmpsl and leave mov mov cld mov lods or mov mov and xlat add enter es out cmp mov jl add push data16 lcall push cltd fcom pop push or stc mov add into test orb inc mov outsl roll adc dec int3 or or or enter or in sub jle andl movsb add add sub or fist mov ds or mov stc inc jns xchg les insb or cmpsb lcall subb out adcb lock inc and aad inc lods jo mov outsb xor jp fdivl rclb aad add lea xor push in lcall pushf push js add ljmp les add add hlt lahf addl inc leave dec jbe xchg adc mov aam push lahf das xor mov sbb rcr adc add scas lods lock cmc inc inc pushf jg push push out pop push add jne adc xlat dec jle mov add or sub jb xchg loopne aad adc in loop xor movsb jne xor or pop mov xor push js or push push pop int3 sub adc fxch add mov orl ficoml jno add or stos insl pop outsl xchg inc fnstenv ds sub das and cmp adc xor push xchg jle mov mov adc roll sar mov cmp loop sbb cmc in push sub les add dec rclb sbb int sub pusha mov mov jno lahf jmp add pusha sub xchg sbb call mov mov pop add jp movswl add jmp mov mov fwait or push imul mov pop sbb bound sbb mov push jle xchg rorl mov sub jle cmp add (bad) adc xor xchg add in scas pop into stos jg jb or loop xchg into pop or test mov rorb mov das in cwtl subb cwtl mov incl arpl push pop loope in orb add scas sahf loopne or xchg shrb add mov add xor pop xor repz push lret add jmp rolb ror pop sti adc lret repz push clc data16 mov lock cmpsl sti adcb notb push sbb cli xor or mov aas add push jmp sub inc inc (bad) movsb sub nop jmp into or ror adc adc bound scas push loop add shrl je sub adc lods movsb fcompl add les push cmp xchg jns or cmp cmpsl add sbb cmpsb mov out or mull movsl xchg jb je or cs (bad) rol pop add sbb xchg leave shrb or adc push daa or test sti and xor sahf mov rcrl jg dec mov lock jnp and xor mov stos mov pop xor xor cmp add adc or pop divb sbbl test sub xchg or or push add mov inc imul pop out test push mov push scas pushf stos lds dec mov or xchg stc sbb test pop enter popa dec xchg fdivrs stos pusha mov mov stos push push cwtl xchg xor mov bound cwtl loopne bound dec add imul test out lods pop jge inc or loop and push sti aam rcrb mov fnstenv das add sbb loop (bad) jbe or inc push (bad) pop xor aas push movsb sub adc sub test test loopne nop add dec test dec aaa (bad) rorl dec push es adc fdivs das add dec mov dec pop clc push add pusha loopne pop mov inc clc lock add push scas jecxz dec shrl lret sbb push mov fs or adc sub les cld and mov push insl fcoms mov jecxz popf into aaa jb addb mov mov pusha int enter loope push bound enter pop or jle xchg mov sub and or and das out mov jecxz mov cmpsl test adc add (bad) adc add shl mov aad xor mov xor call sub andl push cmp aam mov je adcb sub mov (bad) add xchg push in movsl xchg add arpl jecxz adc cld or mov add mov (bad) mov sub dec or and out in cmp fs (bad) adc xor sbb push dec push jno add fwait mov js (bad) fsub xchg adc pop pop mov add dec cmp out dec stos cs pop adc dec mov pop gs dec dec mov push dec scas mov mov sub sbb and shlb cmpsl fldpi jno shr and stos (bad) idivl jne insb out xchg cmp je jge xchg fcmove test ret fs xchg xor inc jmp mov insl pop jne fsubrs mov or cmpsl push xchg int3 js and push pop xchg cmp out or mov push lods xorl dec call fdivl push bound add out cmp cli inc cwtl add das add call add scas in and inc fdivrs lds push mov push push das mov subl mov push xlat sbb js mov bound aaa mov adc int3 ret jb iret mov lret faddl in rclb sbb inc cmp das (bad) in push addr16 addb or add push jle sbb mov mov sbb dec shlb lret push xor repz sub pop xchg xor sbb sbb sti sbb mov lock push clc mov xchg dec roll les add ret popf xor (bad) mov add cwtl sub mov add add call mov inc fisubl pop stos aam add js add ret out arpl push lock or (bad) mov int orb in aas add cmpsl mov inc cmc movsb cmpl mov inc jmp shl cli jecxz aam lds paddw dec (bad) mov nop js fmull xchg add mov sti mov or xor in aaa push arpl add pop mov aad mov inc ret pop in add mov subl testb add jae adc data16 add pop addl gs pop call sbb push jecxz or and xchg dec clc adc cmp or add (bad) or les movsb xchg test (bad) in cmp pop aas cmc and dec test lcall in add (bad) cwtl (bad) lea clc call aas jmp jns sbb loopne mov pop adc sbb faddl cmp (bad) jb cld push add dec aas adc xchg add jl adc and pop mov insb or cmovo nop (bad) inc xor and inc add hlt sub mov sarb push xchg sub mov div maxps in fiaddl pushf xchg lods movsb add sbb sbb popf jp adc test and mov pop das pushf mov clc bound jns xchg inc cmp adc push sbb fsubrl push dec xor popa (bad) mov inc loopne and sbb adc lcall cwtl dec cmpsl call xchg sub xchg clc sbb stos sbb adcl dec shrl xor xchg pop jle mov in push push jnp rcr fnstenv inc dec orl (bad) out sub cld test cmc xor jne jo mov add dec pop (bad) xor mov insl or lret lret std jnp or mov or leave xchg pop pusha dec pop mov add xchg inc inc rcr ret push dec stc inc push xor add js mov or shld add lods negb push or xchg (bad) cwtl pop inc push lods sbb in mov (bad) je shrb xor push bound or mov rcll mov je mov subl add pop sub push cwtl shll hlt leave les roll push mov out adc xor call loopne adc xor add adc push shl cmp aam mov sahf gs aam or arpl adc pop cmpsb mov or subb xlat dec push jecxz and sbb and fdivrl mov fdivp adcl shrl xchg iret sti xor sar push insl pusha fwait jl xor lods or adc sub pop mov dec adc test push (bad) les pop lock and fdivs pop (bad) mov popa mov jne in pop sbb xchg test cmpsl sarb sub pusha test push scas mov mov lock sbb out sbb add or push xchg test out mov jno cmp in aas inc (bad) std or inc mov jo mov in xchg pop jmp adc xor add in add and movsb repz out js or (bad) sub lods sub (bad) xor hlt sub sbb or loopne mov (bad) xor push xor orl add cmp or hlt mov xchg sub ds int mov xlat jecxz daa xchg movsb and ja stos clc loopne std inc pop inc into adc je mov insl and jae jmp cmp (bad) rcl pop add or add loopne in inc in stos cmp pop cwtl les (bad) xorb ucomiss iret andl inc add adc imul scas in push mov outsl xchg adc pop imul (bad) dec ficoml mov sub pop add (bad) mov scas adc fnstenv pop addr16 add add mov adc pop sub push xor mov add out in insb rclb xchg or scas or mov fsubrs int3 or push negl xrelease lock or addb fldenv add push movsb mov push adc or xor cmp push sbb into fstl mov xchg sub push push add xlat iret in adc cmp sbb jecxz enter ret dec and test loopne (bad) fstps sub hlt add data16 pop adc or out inc aad lock hlt js sub jg cmp dec vmwrite scas push mov inc jo dec ret xchg movsb out mov cmpsb cmp sub imul call mov push cmp das pop pusha add lock ss pusha pop pop sbb sbb int test push clc pusha pop cmpsb mov addl mov xor sahf cmp loopne push add push jle pop enter scas stos and (bad) cmp pop mov mov pop into pop mov jo test (bad) shlb sbb and (bad) push add sub test fistpll test (bad) je or cltd (bad) mov and sbb mov pushf rclb (bad) dec push mov adc loop cmpb dec cmp test (bad) mov xchg pop js sbb adc mov (bad) adc fiadd xchg inc mov pusha ret insl mov divl add mov sti jecxz xor lds push jmp int3 mov mov sbb out call sub xor ds imul xor les js xchg scas lods or inc add adc leave test lock int3 rclb xor mov fsubl lret pusha xor add push lret push nop fmuls adc enter adc add ficomp (bad) fstl sbb subl pop mov outsl stos test pop pusha mov jb imul lahf add testl fistl shrl add mov xchg xchg pop and roll cmp out jo sbbl lock push push mov add enter mov popa dec or push push jl dec aam je fadds mov cs iret dec cmp cmp call sub cmp dec fsubr aad ja jl pop lea sub rolb jne (bad) push fs mov mov xor push and cwtl mov cmp jnp cmp add or adc xchg daa add (bad) dec and sbb (bad) arpl or push ds sub nop inc outsl jo and sbb js push popf adc aaa test pusha sbb add in inc sbb loopne sub movsl add xor cmp adc add xchg outsb movsb cmp mov shlb add push cmp shlb or or jnp add xor jne sbb pop ljmp cmp lock jnp clc frstor sbb pop fs push add mov add jb lahf mov js insb (bad) adc cmc pop pop fadds adc adc mov cwtl add push pushf xlat xchg xor mov adc les repnz in dec xchg push inc fadds popa imul call pusha mov xchg dec xor inc les insw xor or movaps add lahf xchg test out in cwtl inc inc add push (bad) adc add and xor popf mov adc jl mov add mov xor loop sbb xchg pop nop or fisubl adc sub inc mov cwtl or and sbb add dec or xchg push add iret and push push nop and cmpsb lods add (bad) sub pop mov imul cmc or jbe or ds add sahf cwtl mov mov cwtl add adc hlt jg xchg cmp push adc jne add lea xchg out xchg add insb lret push mov sub test sub cmpsb xchg or xor push mov dec sbb xor in push inc mov push test dec test push imul xchg mov push cltd inc xorb jb push int xchg pop adc popa add ret or in sbb sub and push push adc sbb push nop and dec xor stos pop sti insl xor fsub jno dec in je xchg mov js sbb (bad) or mov jp lea scas (bad) sub cli sti cmp mov sbb rolb rorb insl jecxz add ljmp clc and sahf imulb lods add add pop lret cltd js js pop sbb or sbb std lds fadds dec call gs add aam xor adc and lods dec inc divb push adc jl pushf xor push rorb aam jl lds or imul or fimul inc pusha mov push daa push addr16 and jo add test sbb inc push mov xchg je out push jge cli dec dec add mov mov scas xorl and mov or ret mov or push and ficom aaa hlt int3 in mov adc lahf sub cltd push xchg xor test and inc jl int3 lock mov or rcll int ja lcall scas xchg and add jl cmp orl cmp dec or cmp test xchg call and mov roll jmp ds leave push add or push popf movlps insl (bad) push xchg pop xchg loope cmpsb add loopne or popa or cmp push dec iret xchg cmpsb add xlat pop or ret jl add pop or inc inc pop cltd jns sub or rcll mov ss mov mov add fadds xor outsl pop iret mov xchg loop (bad) cmpl mov or mov mov (bad) mov iret xor xor and pop flds cmpsb push dec cmp or leave call mov lock inc in xchg adc mov inc adc nop adc or fs and mov enter push mov xchg loope wrmsr push into push jle (bad) sub loopne (bad) test push add mov and adc pusha shrl mov cmp inc jle pop xchg pop xor inc lret inc push pop xor add mov fiadd nop and sub (bad) (bad) or call push dec jo add xor push inc int test push dec ret mov addb or inc jo inc xor out sub or push mov add mov inc lret subb mov add into pop sub (bad) mov push mov add pop inc add cmp addl mov inc xchg dec dec mov add and cmpb xchg sbb inc mov add push add inc pusha xchg xlat cld rorl jo lods or orl cmpl (bad) dec push mov rol add outsb and cmc cmp mov cmpsb add popf cltd push xor insb dec xchg std fsubs jle jecxz outsl rolb fsubl test xor push lods bound (bad) and aaa pop (bad) push lsl pop cltd inc adc mov movsb mov sbb sub xlat add sub cmp and stc mov adc mov sub xchg pop mov mov lock (bad) cwtl cmp (bad) ds into cmp add adc push mov imul add lahf dec dec adc data16 call dec xor lahf add (bad) push xlat (bad) (bad) dec sub inc and inc adc (bad) or in leave andb cmp and mov aad mov adc inc dec add cmpsl mov cli daa andb mov sub scas stos mov cmp mov dec xor sub pushf pusha or push add into pop jge shrb pushf cmpsb test mov add or cmp test dec cmpsl iret lock scas nop mov mov add mov pop pop xor mov cwtl sbb and jb push test jle call pop add into ja pusha test or fwait sbb fcmovu cmp jl or xchg and imulb fisub in add popf lcall (bad) and unpckhps or xchg xor cmp and xor jge sbb mov mov les dec stos js lea cmpsl int add mov addr16 orb cmpsb lods nop jl jp dec outsb cwtl inc xchg in and dec dec (bad) cli mov ror punpckhbw ja add dec mov ds repnz add sbb nop inc cmp je and xlat insb add xchg adc lcall and push mov insb mov inc add xchg or xor or cld incl mov bound or mov jle or or mov mov mov or or idivb mov shrl in shll arpl push loopne push or lock fdivrs add mov pushf (bad) jecxz xor sbb pop test mov and cmp enter adc xchg cmpsb and mov mov lret les cmp std cmpsb adc inc cwtl or pop cmp cmp xlat hlt and mov xchg sub pop or add adc mov pop xchg pop xor push aad xchg xchg add shrb or mov icebp push sub iret jle cmp dec test test push lock adc add add into jp and ret in fs sub pop dec dec push add mov sub mov push xor push dec pop in adc mov pop outsb scas jnp xchg (bad) adc or aad iret jge or test and test mov movsb add mov pop xchg mulb ja pop das call or lcall mov sar adc std out mov sbbl mov cmpsl fistpll addr16 cmp in jno and sti jnp jnp ja add lods test in mov stos sub and roll out inc sbbb imul jb push lods inc push mov outsl and or js idivl (bad) mov adc push into dec shr lcall and push out jmp mov add stos add outsl add inc enter leave inc jmp push and add aad push in (bad) xor push push (bad) or xor call and adc mov push jle stos js add dec mov push sub test xor xor inc aad cmpl mov cmp adc ja push mov pop out push fsubs out imul paddw xor xlat sbb adc pop fs dec push pop mov xchg sti (bad) cmpsb xchg decb xchg (bad) or jge imul call xchg (bad) addr16 sarb out sub add xchg sti cmp jmp and and pusha rcr mov mov dec std cmp stos (bad) sub pusha jp cwtl loop add pop jno sbb adc jg das cltd add push dec stos and pusha rcrl pop jns dec fadds xor pop jno dec mov xor pushf add xchg cmp jnp and addl dec inc push xor pop or pop decl mov and xchg sahf add jnp and adc and sub sub push mov negb movsl jg gs mov inc repnz call fwait cmp dec push stc mulb cld cmpsl ds jp jg dec hlt sbb shr neg rolb add test lds sub push push mov cld lock dec std imul inc popa je idivb ljmp adc clc push add mov ss or out sbb ljmp rorl jmp mov repz test sub pop mov in sub inc cli cmp stos hlt add pop push out mov xchg fcmovb fiadd stc push imul (bad) mov test and mov inc add call sub or pop cwtl dec fisttpll jne adc add jmp add bnd push cmp jmp xchg cmpsl and sub pop add inc out add pop mov fstps cld xor mov popf mov fs stos out sbb mov jmp mov in ret sub mov arpl ja scas repnz jl ljmp pop add (bad) lock and fistp rcrl sub cld inc out xchg adc neg xor and adc add and pop and mov jg rcrl lcall sub jmp inc stos int3 mov sahf ss pop fbld stos popf jbe push jmp jmp inc add mov inc push or sub sbb or fidivr sub and xchg stc jae (bad) es incl adc pop add (bad) sbb out push fs ljmp or sbb mov (bad) jmp mov sahf mov cmp jecxz push push pop fwait rorl addr16 fiadd pop inc nop push pop lock pop fnstenv inc shrb subb in stos lods pusha push fwait mov jno push adc sbb das push adc aaa mov popf pop pop xchg pop adc js (bad) ja (bad) repz mov insb movsb or jmp ret cmp ja insb and xor xlat pop subb cmp push sti add adc scas call jb push adc ret jne mov mov dec push xor cwtl ficoml daa and inc push ret inc fwait fs divl (bad) and test inc xor mov xchg push sub aaa pop or xorl push mov mov jl adc dec call add pop repz jnp push jge mov mov (bad) push add sub push or popa push test pop ret in push je addb sti mov mov sar add loop add ds adc loope (bad) clc fist push adc add aas add pop mov push flds outsl push ljmp sub lods fiaddl rcll test aaa js add fs jl add or add fidivr mov cmpsb add decl inc or addl fwait add jge aad adc add sub mov adc sub stos xor dec xor mov pushf cmp xor jne inc inc inc lea fstpt pusha mov gs and sub xchg (bad) in adc inc xchg and mov inc push sub ss icebp jg pusha push loop mov xor pop xchg cmp push push popa mov cltd dec jl sub jbe add sahf add (bad) in add mov (bad) cmp push ret and sub in scas cmp cmp push pop xchg push lds mov das in cmp leave push shrl pop int add stos xchg ror xor xor pop jge nop scas neg push in hlt sbb inc push xor push jmp jge mov add ror mov lods add push push sbb pop jg sbb fld sbb fisttpl jge xchg push fsubl lahf cld adc pop mov or xchg mov fwait push push xchg inc pop movb or jl mov in sub add pop inc pop aaa cmp out mov (bad) jmp adcl (bad) xor mov lods or in dec movsb out sbb sti mov mov mov fwait cltd out pop popf scas (bad) fidivr push add mov pop fdivl and push nop adc xchg fdivrl inc ja xchg sarl imul push mov in jmp adc leave in inc inc std jns push push xor in push xchg push inc movsb mov fisub mov jmp add out jge cltd xchg int3 pop push add loope shrl clc fldl dec (bad) jp mov ja push stc mov add inc pop jnp inc dec les mov xor pop dec nop test loope xchg and inc adc mov mov ja jle push in jne push add stos stc push shll xchg add push pop mov adc test dec and push popa inc ret xchg mov ds test cmovs (bad) pop adc adc sub adc nop jo add div lds dec xchg les and push inc add xchg rcll aad mull int3 sub sub jae add pusha leave adc cmpsl xchg rcll fwait clc mov xchg pop mov sub mov fnstenv lods aad xor (bad) push mov pop add pop (bad) cld inc rcrl adc and popf in lret add cmp mov sub or scas rcr push test cmpb add (bad) dec mov popa test inc cwtl dec jge stos xchg rolb lock lcall test mov xlat rcrb jge pop es rcll push sub pop push xor andl jbe inc addr16 xor pop pop aad push insl pop or jg in adc push add outsb (bad) mov mov inc sbb push rolb mov ret out es dec lret or lock or xlat sub test or mov arpl jg (bad) mov rorb sbb dec stos rorb xor and inc add adc movsb adc (bad) adc cwtl sbb xor lods pop push jo test add push into adc lahf jnp add and imul lods mov jbe pop mov mov adc sub rcrb jnp mov shll pop xchg cmc fiaddl sub sahf jne add push sub test xor ss enter add add mov fwait dec outsb lods dec mov push inc nop aam ret jnp inc jecxz in dec popf xor mov out dec push and out inc pusha lock outsb or or xor es sub nop mov jg jns mov mov (bad) dec pop lods (bad) faddl xchg mov clc in cld add sub iret adc add into mov jae add jmp decl inc and sti inc add sbb adc subl mov adc or scas les or xor mov lock popa jo inc push test xor lods or sub add stos loope and and cmp xor sbb xchg (bad) test xchg jns and push dec stos push dec sub push or outsb mov inc mov mov (bad) js sub cmp (bad) push inc stos push pop dec test cmc jo mov cmp push xchg popa lods pop inc add jp (bad) dec add jmp js cwtl in mov sbb mov sti push (bad) xchg dec fdivl lcall fwait mov xchg adc mov mov ret fbstp jo add clc (bad) dec bound add movsb in add in lret orl sti inc (bad) imul jb xchg jp xor jo and jne repnz push sbb cltd mov arpl jno dec jg sti push les mov xor ljmp rcl dec ret pop (bad) aam cmp inc daa mov and sti pop xchg hlt popa or dec ret jmp jmp or cli inc lcall and and pop push push test or xor xchg movb push inc seta push cmovo test xchg cmp sub push sub cmp repnz xor push adcb iret nop lods add push cmp add jp je cmp xor aad pop ret idivl jns jae cmovg sub cli inc or or xor shr subl aaa xor jo pushf (bad) das add pop idivl push mov fs jns mov pusha add test sahf loopne sti fwait icebp xor in mov and mov test and imul adc dec fldt or sbb add cltd xor jl shlb jl out popf mov (bad) fwait pushf xchg xchg sysexit mov or and jg cld or mov popa push or ss sub lds xor jbe into lret jmp nop in adc fs mov and pop add stos aas nop xchg and test fs pusha or adcb push cmp inc ljmp mov xchg xchg pushf inc rorl pop mov add in mov push sbb mov call stos pushf xor sub nop sbb adc add sub push cmp subl fwait mulps or jns add popf loope enter sti cwtl stos cwtl adc mov sbb imull pop xor orb arpl out xchg int xchg xchg or enter nop cwtl pop xchg mov and dec dec sub aaa sbb (bad) mov es push (bad) loopne push xor add mov push imul sti outsl mov xchg push lods in jo popa aam bnd clc inc mov test ror adc (bad) repz dec out cld sahf mov add push sbb outsb ret sub xor mov cmp sti fimul adc out cld xchg cld subb (bad) mov int3 pop je js mov jl jl jl jl jl pop dec in cli (bad) add mov jmp pop push jb adc dec pop inc add pop ja pusha inc (bad) icebp add lret (bad) cmp ret push lds mov add xchg and cmpsb jp mov jo pop push add cmc mov iret ds add pop push adc icebp jmp xor test cmp out xchg and sub (bad) cmp dec and rorb int3 pushf mov inc push mov pop sbb sbb aad pusha push mov jp out mov cmp aam push ret js insb add cltd pop stc pop pushf lock push lea mov (bad) xchg in hlt add adc jmp pop or test push add sub sbb cmp sahf cwtl testl lret int3 push call lods jg jns stos loope sbb ss or sbb je in cmp xchg sub inc cmc inc mov (bad) and mov lods or and mov shlb stos pop pushf xchg mov sbb xor push xor mov les jno stos inc or cltd fnsave aas adc push rcrb and and inc mov adc sub mov cmpsb jno repnz aam call dec push inc inc add pop add fdivr popa in dec mov pusha shlb movsb mov in popf pop ja scas outsl addr16 mov test xchg mov dec imul lods ds int3 and xchg add cmpsb sub leave mov or shll mov mov mov sbb jns sub sbb mov scas mov les js push sbb cld jno sti rorb add int3 les adc and daa xor sub push inc cwtl dec es (bad) rclb mov mov pop sub nop lds adc xchg xor push mov jmp sbb or daa aaa jae sbb call int3 add lret add sub add fldt lcall mov add jns jmp mov outsl incl dec and mov fcoml dec inc fdivl push dec mov ret test scas cmp dec push sbb decb int3 pushf add jb,pt ljmp into mov sti fld1 jo int3 in sub lahf jnp (bad) dec es in xor or int add popf or push mov mov lock nop cwtl add lds (bad) ja popa xchg int (bad) jns jmp add inc mov sarb pop decb out (bad) roll fsubr cmp xor sbb dec jbe sbb mov int push push xor in sub pop fmull mov out xchg adc adc sarb add scas outsb inc mov popf push add or lock push sbb add sbb cmc sub mov sub nop sub cmpb out push divb sub imul dec (bad) dec xchg loop sub (bad) int pop jb mov sub sub sbb cld (bad) int3 adc cmp add lds push cmpsl cmp dec stos xor loope sub cltd nop sub fcoml dec inc enter (bad) jo cmpsb in xchg or lock mov or push cmpsl in add jl clc fwait jp jl and shll or cli int3 data16 xchg xchg and test lods mov andb aaa jae nop or insb jno popa adcb dec or pop jl adc mov push jl out xchg inc sbb inc pop pushf stos sbb enter or dec mov scas push xchg mov mov lahf add mov lods (bad) pusha mov pop mov cmp or or sub adc add and and cmp xchg add add fcomip pushf and add (bad) and adc dec (bad) and jo xlat dec or xchg int3 and or pushf adc or fistl push sahf push xchg mov add inc xchg inc jno data16 fs add roll scas adcb mov pop repnz loopne test bound popa das mov mov sti loope lds pushf out add pop popf hlt push and add stos pop xor (bad) pusha cld sub xchg sbb mov dec das pop lahf mov in sub jecxz add xchg (bad) jo cmp add cmp sbb test scas fstpl or hlt (bad) mov add shrb mov (bad) jno roll fimul or sbb push cmpsl xor xchg cmp xor xor nop mov push add xchg add xchg orl pop add inc sbb test adc pop je repz or pop or nop jle inc (bad) popf xor arpl (bad) jb js mov iret mov sbbb pop jle push push jge (bad) mov jo hlt loop push adc lods mov push sub mov popf push jo push or outsb orb pusha adc add lods pop push pop cmp mov in jle sti shl mov cmp cmp addr16 call cwtl mov ss mov pause and mulb cmp fsubs pop mov push or scas and cmp and fs fimull adc outsl popa pop xor pop test ds sbb andl in jo xor and mov rol in int3 sub adc sub lock adc push fcoml mov mov inc and in mov push jecxz mov mov (bad) push popf pop or mov push adc or lock mov xchg xor add mov mov mov fnstcw lcall (bad) ljmp or mov jo push loopne dec or pop push xor cli mov or push dec repnz or mov add cmp mov add mov out inc cmp ret sub aam dec sbb nop sbb loop or sbbb into xor xchg push mov add enter in dec (bad) inc subb or xchg mov add xchg sub inc bound popf pop out xchg data16 or mov dec js add or or ret ja pop add mov aad out shlb sub push fisttp dec add lret outsl adc std adc addr16 call mov repnz repz leave enter and pop pop negl jo and and dec add sbb pushf addb fisttpll outsl dec add inc and imul or lock cld add push xchg mulb adc iret lds sbb lret lock add clc fcoms xchg aas imul dec pop jns cld add sub lock sarl xchg xchg and fcoml (bad) lock sbb inc mov out ja sti inc pop cmp adc cmp add add mov push mov movsb jecxz and push mov ss add lahf sub add mov add mov loope sub (bad) dec out inc rclb or lea mov fwait sub mov jne xchg pushf mov sti push fadds fidivr sub jge fiaddl out insb push jmp mov jo sub mov mov push js adc pop test rcrl jnp sub (bad) inc lds out jb push cltd mov pop (bad) andb popa add fwait mov inc add cmp adc shlb push add jl sti adc inc lahf add sbb pop arpl sti jb add fldl imul stos ljmp or in pop cmpb (bad) xchg orl cmc mov xor jbe je jno sbb inc adc add mov xor pushf xor sub and cltd nop pop icebp sbb inc jle adc mov stos inc mov scas addr16 cmp push cwtl and repnz les push lret xchg pop addb and sub push negb and push rorb sub adc sbb xor adc subl xchg dec inc inc aam incl push out mov add in xor ds shr adc or pop pop call sbb fisub aaa into (bad) xor sahf pop mov cmpsl jno sub hlt add xchg cmp cmp cmp push (bad) mov les or hlt ret cmc inc and je adc js mov clc arpl gs mov xchg dec out adc int3 ljmp sub inc inc jb repnz arpl pop pusha mov mov mov or mov aas push lea or or loopne cmp (bad) xor adc cwtl add stos je call mov pop in rcrl mov inc icebp enter cmpb xor inc fldt mov and arpl sbb les dec inc pop js mov rol sub dec (bad) xor lea pop mov push or dec int3 lods mov mov pop inc cmp xlat push pusha or add push (bad) dec nop insl sahf fs hlt sbb xor or fs mov pop lea push out sbb mov mov pop or test jno loop add sbb into inc lods je arpl xchg fcoms pushf mov xor jbe sahf test or cmpb push jae stos add loope pop hlt jp rcr mov push out mov and fsubrs in sbb or mov fidiv jp and popa and in arpl jb pop add (bad) xor test pop scas fdivrl add enter adc jo push jno out pop lods jno ret inc or jns mov dec nop add (bad) mov inc add subb xor sub and mov cmp inc sub popf repz xor cmp outsb pop ds mov xchg jns xor (bad) push jp xor pusha js adc lods or jo fist test in es sbb xor cmp repnz or and add xchg test dec test and dec adc in add push jle pop arpl mov adc dec (bad) xor jmp (bad) mov xchg jecxz xor cmp or or cli les call adc add dec mov jle or and test xchg insl pop mov (bad) icebp and xchg inc stos inc mov inc fdivrl sub insb xchg dec test cmpsl mov push dec push jmp ss xor fs or mov mov jecxz and nop mov enter xchg xchg adc or (bad) mov inc xor xor stos add insb sub popa sub pop mov inc nop mov xchg in enter inc mov pusha addr16 (bad) mov loopne cmp pushf pusha sbb into hlt pop xchg and or test sbb push inc lock add mov add movsl (bad) hlt pusha lret pop pop xchg add and aam cmpsl sbbb inc or cmp in or (bad) ja in fstpl xchg cmp es lock (bad) int3 cmpsb mov dec push mov stos sarb push sbb setbe js mov lds mov and and jnp sti mov mov or pusha (bad) clc mov sub dec cmc nop leave cwtl jns cmp or bound sahf xor aam loop ss or dec push push sbb verw movsb adc shlb or fsubs adc push or rcl mov aaa or sub jne dec lods adc rorb and cmp jns jp jecxz out (bad) add ss dec int3 add xchg orl add xchg push repz jl call mov inc inc lds sbb mov push call fstl icebp fisttp and push in inc xor mov adc out mov ficoml sbb add sbb or add add fmul lods add and les sbb or rorb std (bad) sub fcompl pop loop jnp ror adc sarb std lahf jo sbb cmc add (bad) jp addr16 out insb fiadd outsb adc cmc add dec xchg jl ret inc add xorl cld add mov es pop outsb pop adc cwtl sbb mov or mov pop xor inc and push mov out xchg stos and jecxz lea fistpll inc (bad) cmp rorb or (bad) nop push pop mov dec arpl outsl mov push gs dec dec ret mov adc je fcompl je,pt js xlat outsb fs faddl sub jmp clc cltd cmpsb add ss movsb ret add in bound mov mov (bad) inc mov add rclb in xor mov inc fcoml (bad) adc inc sub push jle or lret dec fdivrl or int3 das mov add mov push xor int3 push test pusha jmp push pop push add mov dec lahf xor sbb bound xor (bad) repz xor inc dec add sbb sbb cwtl mull pop aaa int3 mov xor and into adc push xchg inc iret sub sti popa sahf pusha out mov cmp fbld inc call mov out push sbb xchg sbb cmc pusha adc jo out orb and and dec dec subb insb and pusha xlat and lret lahf dec fbstp dec sub sbb insb popf xor fnstcw mov sub iret fildl dec dec gs mov mov adc and xor or inc adcl and popf enter dec lods cltd ja,pn sbb adc jecxz leave push pop mov add or es sbb jns sub add (bad) enter add loope or jns test push inc rclb cmp mov push adc adc sub add cld cmp sbb nop dec adc xor into inc cwtl xor xchg popa fsubl pop mov lea push adc mov lock (bad) repnz stc add push xchg scas sbb out (bad) cmp cli loope xor mov xor out mov cmpsb in xor or mov inc clc call adc (bad) in test lods cld adc lahf andb sbb and fcomps mov insb orb mov adc add dec out mov (bad) and inc fildl sbb dec pop xor adc and inc adc push adc outsl int mov pop cmp push adc mov dec add dec mov push insb or and js data16 mov sbb rclb dec pop loopne js test inc cltd add lea adc push lods int3 call cwtl xchg or adc sbb inc pop dec and lds fstp test adc lods dec gs pop cmp out fadd sub js fmuls push cmp ffreep dec mov sub sarb push add cld push loop mov mov add cli jae stc pop addl mov movsb or (bad) mov fs fs adc jp hlt mov ljmp in push push cmovo daa cmp xor sub dec aad push and mov aaa xchg std cmp push into mov dec pop mov pop bnd jmp clc aam push loop into std inc jl and in add or and test push orl xchg test jb pusha mov pop (bad) dec cld mov adc mov cmp push xor pop aaa icebp cmp gs xor dec sbbl or push movsb xchg push add jmp mov dec add mov sub or push jbe arpl mov adc stos push in jne pop mov cld enter push or pop sbb sbb pop jge adc loope int3 jmp out mov daa cmp add cmpsb add xor mov smsw and fmuls dec push xor idiv push mov inc jl jecxz int3 inc adc mov fbld jb cmp inc pcmpgtb nop pushf call in fst inc ds jp pop (bad) repz shl pop clc mov push and andb decb dec fs or sub xor xor add inc add xchg cmc xor and and mov test push daa push test mov adc pop pop push add rorb jmp xor enter pop fcompl or cmp pushf into inc imul xor dec add push lock push (bad) push shll loopne add nop imul cmp sbb fcoml push lcall or xchg in fs and add add inc mov pop adc push mov movsb dec aaa xor adc fistl or push xchg push xor mov sub lds rorb mov cmp adc fbld js sbb xor decl mov sbb movsl mov sbb rorb push or cwtl inc xor xchg jmp mov adc add xchg stos rcll inc and pop adc xor push add push cmp mov mov mov add imul add arpl sbb mov ds popl mov push sbb test or push in stos or bound mov sub mov mov lds cltd push (bad) in cmova (bad) inc add popa pop xor fisttpl add outsb loopne inc bound popa mov sbb call mulb test js imul test sub clc scas and je inc push rclb jmp or gs cmp in mov or push test mov flds ljmp rorb jne pop push cld rorb xor add (bad) addl mov sarb shrl or ret or pop mov js dec dec je lds sbb pop js imul stos or in loopne mov xor movsl dec (bad) adc push shrb inc (bad) inc pop in lock xchg popf (bad) adc or pushl or fidivr decb je ficoml mov xor xor in xlat insl xchg pusha imul and pop cmp xor ss jl fmul xor mov add notb xchg loope int sbb cmp clc cmp xor adc push jns and push rcl add popa (bad) dec int jns adc pop cwtl or daa pusha add and repnz fistp adc fcmovnu mov test or pop (bad) pop js clc loopne addr16 xlat nop sar add dec fnop fs cmp loope dec mov and cmp cmp clc ret adc add inc pusha mov pop cmp repnz frstor rcrb mov pop stos add flds stos hlt rcrb add shlb call adc or cmp or or orl js or pop cmpsb and xor clc cld arpl ds stc mov push pop jmp daa fwait cmp inc push pop ss and rclb fwait jle jmp rcr xor push xchg jp hlt xchg inc sub mov adc add mov out movlps sbb mov mov js jp fs jo inc mov les mov int3 inc and mov push mov mov xor int3 rcl movsb daa mov mov clc pop adc cmc ljmp sarb sbb mov outsl (bad) mov pusha int3 sub dec cmp or pushl loop fwait add and xor adc pop mov inc sbb inc and imul or push add clc lret inc cmp or movsb add cmp aam adc inc push orl sub ret jb cmp cmpsb dec mov test inc shrb cltd or scas test push jo js daa add ljmp add pop inc nop lock push mov cwtl mov mov rcrl xchg or cwtl notl push call sbb jl in mov mov dec repnz orb inc dec mov inc jae stos mov add adc pop jmp push add pop shrb in mov rorl sbb andb cmc and adc xchg js sub and addr16 rolb xchg xchg dec mov daa (bad) clc pop fsubs xchg push fisttpll add les imul or inc jp icebp std push data16 sbb xorb add loop xor call rcr lcall xchg add fnstsw push and js (bad) lock in sbb dec je orb mov mov pushf (bad) mov aam insb hlt faddl lret add ret and push xchg ja mov or sub mov and test cmp jmp or adc jge pop cmpsb lea or test sahf mov add out inc arpl ror mov test fdivrs (bad) pop cmp xchg and aas (bad) adc or lock push xchg adc add imul out mov adcl push dec lods enter jo je sbb call xchg mov inc les sbb arpl mov lahf sbb inc and popa loope (bad) adc test inc mov pusha mov pop ja mov pop hlt push cmp pop je (bad) faddl es mov pop lcall adc pushf mov pop arpl mov mov xor inc cld dec sti movsl nop out lods add hlt push mov or jae adc cmp in add mov shlb (bad) fnop push iret in add jbe and xchg shrb xlat cmp cmp mov ficomp add ljmp mov mov add arpl inc cs in aam cmpsl pop mov in js add std pop int cmp dec add push loopne jno (bad) negb add sbb rcrb fcomi js push jmp lock or fcoms dec mov mov pop dec mov cmpsb rcrl addb ss push add (bad) lock jne sub popa int3 and sbb mov arpl je push in cltd dec mul rorb rol pop jns jle or cltd or pusha cwtl orb nop mov stos inc js add sub or and and dec adc dec icebp sub cmpsb xor mov int3 out popf loopne test mov enter pop and pop add adc stos xchg js jle sbb mov ret scas andl push sub loopne stos movsl xlat pop js xchg or jmp hlt dec mov clc xchg nop nop inc clc cmp daa push cli pop or loopne rol fs and push xor cmpsb fdivrs xor daa hlt pop or lods aam push ljmp or sub mov in pusha imul rorb adc pusha sub push jo loop mov xchg xor adc dec and xor out dec int3 dec dec test call adc adc mov popa pop sub pop sti ljmp int3 cmp ja inc sahf add out sbb cmp test push jo in add sub lcall mov or nop dec test ds fmul and inc por add insl cmp xchg leave mov pop nop push add xchg add sbb aam lods mov dec inc mov fnstcw popf loope aaa (bad) mov (bad) es push insb push push es iret mov mov pusha rcr cmp jo into (bad) mov mov pop push mov mov cmp shlb lret test sub cmp xchg cwtl add sbbl xchg mov xchg xchg in lock cmp es xchg movsb mov jl clc out add jecxz cmp enter out repz js stc inc mov rcll into pop in mov packssdw mov orb xor sbb int3 sub mov cmp inc mov imul test scas (bad) jne pop daa in push jp mov inc pop cmp pop dec neg and xchg orb in fldcw xchg lock push mov inc or enter jb mov aam out adc fadds gs call inc inc push mov dec ds dec mov loopne js nop jl or mov push mov add cmp orl or pop dec xchg jecxz pop mov test stos pusha adc dec dec push xchg loop and dec hlt cmpsb xor mov je bound inc mov test cmpsb test push adc out push sbb daa lock out mov and xchg push sub out adc fildll cld pop add or je and add or mov adc into sub in xor imul cwtl (bad) mov fcoml xchg pop lahf test sbb leave dec sbb pop jmp jo clc lods pop int3 inc add jge add fadds pop push push and inc adc xchg sub (bad) mov sbb adc les pop pop mov inc fildll xlat sub cmp xor and push bound loope out sub or dec xor ficom mov sub movsb (bad) xor or adc jmp dec inc cmp lahf fdivrs push mov add inc loopne scas cmp jl adc or fadds mov cmp jmp cmpsb or mov movsb sub shrl cmp in and (bad) cld add dec sub fsubl aam jmp adc cld sub imul jb in addr16 test cmp xlat xchg inc dec xor stc dec jno dec test xchg in cs clc inc jae inc jne mov jp sbb sbb fs or mov inc mov pop jge test call outsb mov int3 add pushf dec addr16 in repnz mov sbb rcll xor jmp in mov cmp pop jge cltd nop test push mov mulps lods clc call sbb in add cmp dec pop arpl push sub cmp add fwait sar push mov pop and int3 fstpt dec push cmp jo sub out and movsl and cmpsb dec out cmp and add jae push test nop sub add mov mov mov or dec (bad) mov add es hlt adc nop sbb lgs add pop jnp adc aaa pusha jns shrb or xor push (bad) or cmp or mov dec xchg mov hlt cmc pop pop mov and mov or in lods or in es dec xchg inc inc call outsb stos push add orl enter pop dec rolb mov ret mov loope add les mov pop fstl dec and pushf pop pop loope clc cmp sub jmp pop add rorl stc mov loop (bad) repnz cld cwtl pop fldt and mov xor insb xor sbb sub out jmp scas inc pop push in xor xchg mov nop insb add jp pop dec stos sbb js sub dec icebp cmp or rorl mov jnp inc and push push call sub sub jge fs mov xor xor bound out pop arpl dec xor push push inc pop adc dec jl sahf sbb pop xor add fwait out mov adc mov push test sub cmpsb frstor xchg aam inc push pop int3 inc add mov jg inc or mov adc sbb shlb cmpsb lock cmpsb mov cmp cmp sub pop cmp lea rolb mov adc in (bad) mov test hlt arpl xor out sub ljmp sbb jo mov loopne das add sub (bad) loope call ja sub xchg add xchg fwait push mov dec push fistl jne and xchg leave and mov or out and es cmp enter hlt pop sbb test imul and mov mov push scas jne clc push sbb dec pop and sub xor mov mov pop (bad) imul dec and pop test inc cmp icebp dec add rol das jmp insl inc sbb pop pop push jo cmp in rcrb add mov add inc sub pusha insb dec push push add xor cwtl mov xchg mov in insl mov xchg psubusw dec xor add fsubrl nop mov sub out cmpl aaa sarl and cmp and loop fidivl inc mov cmp dec fsub inc insb in sub les cmpsl cmpl add push dec mov mov inc jecxz adc jle sti loopne adc insl dec adc push test add adc pop sbb dec (bad) rcrb shrb dec add insb mov push int3 and sub and xchg enter nop jl mov push pusha inc ljmp aam pop stos in push mov fdivs ljmp jno dec or mov lock cmp or inc sub fsubrs mov fs test mov sbb ret mov loopne inc cs fdivrs (bad) daa enter lods or xor fsts and cmp test fdivl fsubl adc js,pt pop and mov jno insl pop sub cmp fsub clc xchg or movsb imul ds mov adc adc or dec inc or loop jmp jae xor cmp and add out loopne aas in insl jo add xor add imul add test adcl pop sbb in sti loop add movsb pop (bad) pop dec arpl aam xor sarb int or and inc or add (bad) lock pop jmp xchg xchg hlt pusha cmp add adc pop std movsl fdiv enter jno add (bad) rolb add fldl enter out ljmp mov mov adc fcmovb es xor fistp mov test out jmp fnop dec out jo ret xchg dec push inc jl jl dec xor test and adc mov and inc xor fsubl sub (bad) mov test es test lods jg pusha ds mov fnstenv mov js (bad) xor nop repnz sub insb arpl mov popa lret call stc jmp or (bad) arpl mov adc mov cli or bound dec add andl insb movsl dec mov push fild lea push aad pop sub dec add jnp or pop or ret lcall gs sbb push js test jo test lods lods mov add mov movsb mov lret movsb dec jno jmp or or add push inc cltd test aas adcb hlt mov sbb adc adc lcall xor pop sti dec jmp adc xor iret xor (bad) sbb adc outsb pop xchg arpl push add push (bad) ret mov shrl ret dec add pop sbb adc lret in xchg jge jle push or jb mov and adc xor adc mov xchg (bad) movsb mov jge ds cmp add sub jmp pushf or in jp mov adc rol das add ljmp leave mov insl jo andb and das mov and scas stc test mov adc or ret lods pop cwtl subb cld pop aaa xor inc int3 dec jo xchg lcall cmpb xchg xor lods add push mov dec xchg inc (bad) jmp mov adc pop (bad) pusha rol jl mov push jno,pn adc scas data16 rol pop xchg adc xor pop out (bad) mov push orb cs cmpl mov cmp and sti loope sbb stc push dec lret mov sbb fmul jp dec icebp add adc and add lcall in push aas mov add add adc add fwait out add (bad) xlat jp mov in pop push and xor adc jno and dec mov and mov and or jecxz sub and and xorb dec inc nop inc das add and mov imull imul adc xchg cwtl in push (bad) or add mov nop push rcrb xchg sub es popf jp xchg inc sub mov mov movb (bad) repz mov sti dec (bad) lods dec pop push (bad) jecxz inc adc or lods stc clc das sub xor nop or xor pusha cld cmp push mov sub jns mov roll out lret pusha mov push lds imul dec dec fadds push jo sub sbbb (bad) rolb cmp pop mov or pusha push mov add lods push and xor lds pop in stos sbb or lea sbb xor fist mov test sti dec scas xor adc dec stos mov lods sbb out nop xor xor pop out je stos push xchg hlt loope in dec test cmpl test loope xor cmp inc cmp loopne aaa dec enter mov pusha loopne pop imulb sub faddl adc bound jbe jns add in ret loope loop add lds or xor cld ds dec add (bad) mov js push xor or push icebp sbb xchg and imul cmc inc add js pop je or xor sbb cld dec mov mov xchg loop add sub push mov cwtl xlat test or sbbb add mov pusha cld mov int (bad) gs pusha adc movsb add mov (bad) xor adc jne inc adc sbbb gs leave mov mov or sub lret popa add and fxch ss dec cmp dec out mov gs xchg xor adc out jmp and mov jp movsb shlb dec es ret sbbl push pop rclb sti xor pop test or out lock std and xchg sub rorl adc pusha rcrl mov in cltd imul add xchg mov lods dec test xlat nop pusha dec (bad) push call mov ljmp cmp sub shlb sbb mov push ljmp add cmc xchg cmp arpl push popa cmp enter pop out cltd mov test mov sub cmp pop adc jp adcl cmp pushf aad add test out dec add and popa inc mov sub mov mov dec dec xor cltd out xor dec cwtl xor dec jl cmp hlt adc mov rol mov inc xor sti inc xchg jb pop mov pop xlat xchg dec xor jne add mov pop add in out pop push aam pop and mov sub push rcl aas xor mov js mov jne add cmp and push inc and push jnp je lret cmp ljmp enter shll or ficom lods int3 lods or ret push xchg inc or mov dec inc stos xchg push adc inc cmc int dec mov xor mov pop inc inc fcoml add je stos test dec sbb push mov repz das in adc mov adc mov push imul adc or xchg test cmp pushf mov lods add nop mov lahf lods or sub sti dec cld xor arpl and add jmp pop mov xchg mov cwtl push add sub add cmp popa and fsincos mov pop enter dec mov xchg repnz movsb adc cwtl fdivrl add lods fstpl jae add inc js dec adc mov adc mov call ret xchg inc add and (bad) test push or dec pop cld add push dec dec dec adc inc ret cmpsl pop mov pop stos add or dec push xor sbb adc cwtl inc cltd xchg sub sbb stc add pusha lods roll cwtl aad ret dec cltd loopne adc cmp (bad) insl jno cltd push insb inc jmp sahf in stos xchg adc test sarb and in sbb sti repz sub out jg sbb roll mov loope dec xor and add xor out or sti loop fs in adc add stos popa test push dec (bad) xor or xor pusha and pop jae das pop (bad) adc lds mov jl inc inc int3 or add pop pop les addb jnp cmp pop popl sti xor inc rorb ret adcb sti jmp lock in test inc jmp pop sbb sti jns or cs roll mov subl jl int scas sbb inc adc pushf cmp adc les adc rcr push into adc push jbe shrl add outsb stos insl ret mov in and add decb out xchg repz iret out lods jae push dec adc jle xchg add dec add and push mov (bad) xor in sub clc pushf sub dec pushf inc cli test xchg inc adc pop push testl jmp push sbb test les cmp pop mov sub add xchg mov pop out jmp push daa ja movsb xchg and shrl mov mov xor xchg pop sub add adc jp int3 add sti sub mov dec loop adc xor jmp addr16 js sub lods loop cltd cmpb sub xorl mov dec push mov mov mov test daa cmp sbb pusha inc mov pop enter xchg (bad) dec (bad) movsb cmpsl clc stos addb sti add xchg int3 lea xchg push mov dec sub mov mov clc add pop lret mov jae mov add jae add sti dec fildl pushf (bad) push fdivl push mov dec xchg or in push mov sti aaa jl dec sub pusha in out add xor mov ret pushf mov and arpl sub in gs sub pop cmp xchg bound inc mov xchg mov sti jns loopne sub add adc and dec mov lds icebp xor xchg mov sbb ret dec xchg data16 jp pop mov lds cs clc jg push dec mov xchg inc add std add js xor xor mov and push test inc orb xchg push imul shrl hlt and in dec lret inc xor hlt xchg add test push mov add inc cmp loop sahf xchg mov in push xchg add addr16 int3 insb sarl xchg inc (bad) dec push adc adcb push xor movsb adc mov fimull sub mov das movsl mov pop (bad) mov (bad) mov sub inc int3 sbb daa pop or dec mov adc rcll mov mov scas das lret fwait int mov lret add shlb jl daa pop xor aas (bad) lret test scas dec in daa adc ss stc pushf dec jb mov push add cmpl push sbb pop inc add lods clc add pop cmp push je into or adc adc xchg or call ss sub rolb or enter adc test push add mov fbld faddl xchg pop (bad) test mov jns and and add fmuls jl imul mov ret sub xchg xor fadds pop movsb movsl jle xchg roll ret sbb xor leave (bad) xor adc lds rclb cwtl ret fldt cld or and out enter nop inc xchg or popf (bad) xor dec push push or xchg ja mov mov sbbl aam stos aaa and dec push rcrb das jg add sti movsw movsb fcoml or adc jo mov (bad) sbb mov jnp add inc popf gs cmp pop or les inc jne pop push sarb lods mov test test jle pop ret stos xchg or mov mov and or xchg insb popa inc sub (bad) hlt rcrl xchg and pusha leave dec in inc aad clc les sub push push cmpsb jno sub je mov test mov cmp div cmpsb inc mov in repnz stc loop pxor jbe sti cld nop js pop and std cs adc imul add cmovbe fwait push xor sarl sub adc lret add xchg xchg enter pop mov xchg xor es pop aam adc xchg sbb sti ret pop jg dec inc jp push mov xchg xor dec dec add ret xor sub ret sbb or fucomi ret call mov add fiaddl lock xchg jnp cmpsb mov into mov add cmp push imul push arpl int3 gs (bad) in add icebp dec xchg inc add push add push add gs sub and jae pop sub ret arpl mov lods ljmp add sbb mov mov push dec pop xchg inc insb ret cmp and stos insl add or adc shld or mov mov inc add fs adc add cmpsl push xor sar in adc and inc aad cld cmc js add inc xlat cmpsl sub add out subb lods jnp mov pop movsl mov mov rorb emms mov vpmullw sbb cmp call lea mov jbe push retw jnp mov cmp sbb outsl add pop xlat (bad) or out xor push xchg nop fldenv mov and add int sub add gs push push les addr16 and and push imul inc out (bad) cmp push aaa sbbl fs sub loop xchg lock jo jo dec mov sub jecxz pusha faddp andb lods mov (bad) and or jl (bad) int3 (bad) mov repnz add jmp mov inc loopne cmc sub daa ds mov mov and imul or pop xor mov loopne in sub jne push popf sbb imul pop sbb mov adc loope mov int3 jmp fdivr lds jp loop jp jmp lret les (bad) js pop js xchg imul pop insb jecxz xchg nop jl lahf push cld or dec dec push cld movsb xorb pop (bad) adc push lahf inc add push (bad) push cmp and or jge mov adc adc movsb sbb out push test in mov add in idivb data16 nop (bad) dec mov pusha push mov fadds add sbb and sub in or mov bound mov sub imul (bad) inc nop cmpb cmp jbe mov (bad) mov inc cmc add je outsl (bad) test add or addr16 outsl and gs aam mov cmpsb sub jmp pusha test sub ljmp mov movsb push aam sub mov xorb in pusha mov or sbb jmp cmpb (bad) sbb ja add stos addl inc mov add jge enter popa add aam (bad) imul aaa mov xchg pusha mov daa or pop mulb push xchg or jp adc enter pop loope and mov mov mov orl push int3 inc push ret adc pusha jo mov les out add je in out add dec jmp clc lods js out daa into cmpsb or sub mov inc adc jp hlt mov or ficompl inc pop and or dec sub push int xchg jae or inc jmp repnz sbb leave leave and xor pop cmpsl int3 add fildl push loope jbe push in push mov inc xor push aas adc addb xchg ret sbb pop adc xchg add add loope inc stos cwtl roll call add test inc cli dec mov add fildl dec call cmp or sbb pop sahf mov push mov mov or scas cmpsb dec add nop shr ljmp cmp inc in push inc xor popf push jne (bad) mov or mov xor ficoml mov inc cwtl xlat xchg adc or mov sub imul xor and inc fstps lcall (bad) adc sahf mov jg and sub sbb nop gs add cmp mov push pop fwait cli sbb jne pop mov mov push gs enter mov xor or or adc mov or pushf cmp out scas dec inc dec ljmp sbb inc sub cmpsl sahf adc stc xchg rolb adc into jnp jo sti jb add lock pop inc (bad) icebp stos add jle inc popa and bound dec in add ss xor xchg jns daa stc inc (bad) gs into ljmp sbb lods daa mov or jg dec jmp dec inc xor test ds mov aas rcrb faddl pushf xlat les mov aad in mov mov out push test add xor and call add aaa jno pop or aam or and jb repz add fs insb not sub add mov (bad) mov shl xlat pop add add add scas push lds mov cmp jne mov call mov pop das fisubrl aad lods (bad) jo movsl mov jl test js addl aas pop adc add mov pop dec xor cwtl jg sbb cmp cmpsl mov data16 or mov and and addb jno mov jle test jo pop or lret outsb (bad) sub mov xchg mov push sbb mov pop xchg out testb rclb dec push push add shl mov js and cltd aam and mov mov mov in or movb sbb and mov out push test push xor or mov pushf sbbl xorb mov mov push rcll sbb outsl lret lret mov cmc push test pop scas and mov mov and xchg das jp fsubl fnstenv punpckldq and mov shlb lahf jge mov les mov xor outsb hlt bound jno adc subb xor cmpsl fisubl push mov inc add sbb add stc rcrl adc push repz mov mov xor push nop in fisubrl or nop mov xchg or sbb pop adc int3 (bad) (bad) mov lcall mov adc mov xor iret add test pop or pop cmpb push cmp mov jle jno stos fwait pop cmpsb pop sbb rorb xor imul push nop in fwait and ljmp stc or mov stos rcr cmp xchg js sbb cmp xcrypt-cbc cmpsl adc mov inc lret adc (bad) sbb stc jbe add and xchg inc sub icebp adcb std pop pop xor mov fprem1 adc (bad) div arpl push inc or jmp jnp cmp int3 mov xchg (bad) push mov sub cli xchg jp or imul gs sub bound xchg xor adc movsb rolb pusha jecxz dec and (bad) xor ds mov (bad) pop lcall mov aam jecxz add mov jb shl mov rcll mov cmp add cli xor sub jae inc mov (bad) xchg cs (bad) pushl and lods xchg cmp daa mov aas xor nop lcall (bad) cwtl cmp pushf adc (bad) jb inc (bad) mov add pushf (bad) das or xchg cltd xchg rclb fs push call sarl fxch jae cmp imul cmp or fisubl push add pusha nop in sahf mov cmc outsl scas sbb jp pop add scas push leave jno jb call jmp js stos dec inc loopne pusha or jne fs js inc out je jns fnstenv and test notb ret sub test push cmpl jecxz or ret fbld incb adc in movsl orb (bad) cmp movsb lret add imulb adc dec cmpsb cs int3 cwtl pop inc fiadd push mov pushf sub mov clc scas jmp push mov (bad) clc or les xchg pop fisubrl add jle cltd and mov mov lea enter out and rcll lods lock jne mul or dec lds cmp insb (bad) hlt mov in mov xor insb xchg fisubl fnstenv dec nop mov into mov int3 das idivb cmpsl pop sub loop pop fwait cmp pop in inc mov mov inc pop xor insl cmovae rcrb dec adc mov out loop add add xchg add in test out sub xor lahf cwtl adc adc jmp sar inc add rcr xor pop test mov data16 cs clc mov nop xchg pop and adc adcb lods inc mov push and sub sahf pop cwtl test stos xchg movsb sbb lods push lret adc fbstp jmp cli popa adc int3 add mov daa dec add sahf enter aad sbb dec bnd and xorb push pop mov push insb cwtl adc into or xor dec sahf jl sub xchg rolb nop lock pusha test add mov xchg (bad) test jp gs xor in add cltd pusha push sbb mov shrl aas or mov dec mov ds ret xor fldlg2 push sub pop sarl and mov imul add mov cs xor inc test and insb mov push pop mov pusha mov (bad) push test inc ret (bad) ficompl fcoml ret inc xchg subl repnz mov es int3 nop push addr16 lods push or loope jl dec push push mov add jge nop push or mov or and and (bad) idivb pop arpl adc fstpl pop dec jp cmovge aaa loop add cmc adc and das repz jo add lea daa lock out xor jge fs and jo ja je gs or push mov and dec int3 ljmp pop loopne mov pop rorb lret push push test (bad) mov (bad) rorb cld cwtl add (bad) repnz add and jge cmp sbb sub stos fsubrl jl adc outsl je or cmc pop pushf data16 pop dec and or xor lock jle mov aas xchg into push pusha and imul dec or jmp (bad) cwtl dec push mov in test loop sub fisub sub adc inc inc sub xchg sbb push adc sbbb mov mov popf sub mov lods repz xchg adc xor es pop mov pop repz pusha sbb inc (bad) xchg push mov cmp adc call jg mov push rcll leave sbb push pop shrl xor and or sub mov lock pop sbb push ja or add mov xchg fdiv cltd push add repz hlt xchg jne push push ret xor sub mov add pop add push call rclb adc adc add (bad) ss sbb and xchg lcall aam mov push sarb pusha add add xor aaa std add and daa sbb add xchg fcoms andl and mov insb add jmp push cmp add in adc push cmp ror add add mov sub mov and fistl push jle stos add push stc je and add flds or cs notl mov dec xor and mov in aam push insb test and gs push xor adc add pusha bound cmp sub es fsubrs imul sub or jecxz or adc jg pop xchg in std push inc mov cmp rorb xlat inc xorl mov das jae push mov and fwait adc sub sbb inc or arpl or daa cmp add fbld push cmp dec adc xor lds or in cmp (bad) jo or mov jmp popa lret adc sbb jge xor or mov xor xor sub movsb add scas data16 push movsb jns or (bad) xor jl test xor shlb or push repz enter data16 or dec dec push add out sbb push dec xchg enter sub negl sub inc lret adc stc add aam cs pusha dec and xchg cli pop dec xor add mov add inc insl dec mov dec push int gs jnp fldenv loopne mov add (bad) stos add mov and test sti rcrl das jecxz (bad) cmp cs jl sub adcl rorb daa into push cli mov xor incl cmp push add pop scas popf add pop or ficomp aam dec dec cs add sahf call mov add inc sub sbb rorl jle xchg inc xchg sub sub pop dec jmp adc cmp aaa cli push jl lret and sti push mov sahf xchg jo xchg sub jge adc mov andb push pop sub rol adc lret rcr addl sbb enter loop xchg add gs mov xorl jno fnstcw js or push sub push popf and and in cmovs idivb mov and add lods outsl ds cmp and rorb (bad) cmc inc inc sbb add mov jmp std cmc push fldt (bad) sbb jo (bad) test pop xchg mov add cld pop gs mov sbbb add sbbb add cmp or xor mov inc add mov in gs and jge or cmp fstpt or clc ja add push add rolb adc dec mov cmp hlt psubd push or data16 inc add sbb lret test or mov add or push xchg mov lret (bad) mov clc mov icebp out lds enter and lock pop mov cmpl and (bad) repz and dec pop xchg add ss pop xor (bad) aaa ret and das mov adcl jl adc and fsubp fiaddl push jo mov dec pop jle xchg inc cwtl test and pop fcoms mov movsb sbb loope sub push es pop nop test fsubs jmp xchg pop cld add mov repnz rcl cmp loopne (bad) mov fistpl cli mov add into cmp inc push nop fsubr xor jge cmpsb jmp xchg or aam push mov sub add mov std in pusha cmp jecxz add imul pushl push sbb fs cmp add fldt xchg imul jle jecxz push mov mov andl test and into dec inc adc cmp sahf andb les dec mov scas loopne adc sbb in and je pusha sub jl adc ljmp adc or fsubl xor xor dec cmp fildl jge pop or mov jns xor ret fs shl hlt push dec pop add sbb adc add lock add out xor das je sub mov sbb jmp les lahf pop pop or pop ja pop xor sahf test hlt adc jl sbb jmp mov jae pop ljmp push add pusha pop imul jg inc jg movsb jmp sbb sbb and loopne dec fdivs add test or cld cmp push es lea es in dec lods cmp or mov call xor cld mov and js sub adc insb push cli and hlt and push stc pusha xor les scas fchs xchg mov ret or fisubrl loopne add xor push or xchg and mov lods or lea jno repz sbb jne daa adc pusha dec push cmp shlb xchg das xchg and (bad) mov or jne (bad) and dec repnz nop xor pop pop popf xor scas lahf add mov cmp call push hlt clc or movsl stc je push jp incl mov inc sbb cwtl ss or inc xorb or lods or sbb dec lcall jbe adc ja or rorb cmp add pop je mov jae add and or sbb dec inc xor sbb cli xchg jns jbe cmp xchg and sbb fidivr jecxz add arpl mov scas stos and nop xchg movsb in sbb push xor inc add pop xorl lods shrl aaa jmp movsl in gs cwtl scas ffreep aaa or fiadd adc jp cmp push push aam fs xor lds and test loop scas dec dec sbb inc pop push sub add add jae add inc pop cs sub sbbl cmp pop test (bad) jl loopne fldt gs cmpl dec mov rclb data16 sbb sub mov (bad) adc jp adc sbb add cs scas and mov adc addl add or dec inc iret jbe xchg repnz push sbb loope mov dec inc add ljmp int sbb sub mov insb sbbb mov xor xchg sbb je inc int icebp lea add push cs pop push addr16 pop jmp or in add rcl xor loopne adc xchg mov ljmp (bad) lock inc adc xchg rolb inc outsb push dec sub aaa cwtl inc xor ss loopne addr16 les sbb fsubrs mov push inc pushf cwtl scas fs pop add dec xor xchg jne mov mov pushf inc and push test in adc and xchg shrb mull or int cmc stos bound and popf leave or push jnp and imul and stos xor xorl int3 dec js fsubrs out add lret mov in jge push dec fldl aaa pusha cmc and or and popa pushf push push xlat add mov jg into inc jne ja ja std mul pop fbld call adc bound pop cmp sti sbbl add or decl dec pop push inc xlat xchg cmp inc xor push sub pushf loope sub jbe leave push jae adc into mov scas sub hlt push stc jne xlat mov push jle jns jnp jle mov pusha inc mov push andnps adc in adc lret jmp scas cmp jmp addb adc sbb pusha popa push push call add jb (bad) xor rolb cmp add scas mulb or xor xor add pusha mov inc add xchg xor push sub clc mov adc ds fisubr add andb add sub es xchg xlat test stos mov incb rorl or ja lret pop push pop sub aam adc hlt fidiv mulb lret push outsl fidivr add jmp imul into sbb xor aam insb cmpsl sub and insb jmp mov xchg std hlt loop push idivb ficoml cmp push cmp repnz stos mov xchg mov fist (bad) and cmpsb inc add sbb adc xchg xchg adc aam add pop popa xchg notl lret inc cmpsl out fdivs outsl notl aad jg jmp mov jle xor (bad) xorl call add rorb jecxz add xor inc push pop push sbb cs (bad) fdivl sbb mov sub pop and add mov aas sar pusha ficompl and int sub push jno jp out mov stos in (bad) loop inc sub inc imul push and addl lret adcl push (bad) fsubrp fdivrl testb movsl minps rclb push popa addr16 pop mov adc pop mov mov mov hlt add xor js xor add aaa addl pusha jmp and daa inc and lock mov sbb push push mov mov pop sbb mov push popf outsl jae adc mov or mov cmp xor in out and insl inc sub int3 bswap outsb and ret lcall in pop cwtl cmp pop push jo push (bad) out std bound imulb push xchg jg int3 mov pop loop push jle ljmp dec dec ja scas mov imul push jmp scas mov add dec enter and iret or xor jl ds sub sub push mov popf movsb ss ja repz sbb add inc xchg or mov daa add scas jl mov cli bound xor ja and add rorl xchg cmp ja or stos out (bad) xchg mov and adc sub pop sub xor enter xchg mov dec mov push mov call mov pop or push repz fisttpl mov ljmp mov out mov or mov mov jb adc clc nop mov add imul sbbl inc push inc jecxz push aam xchg rol jb cmp add mov ficoml pop push pop push test xchg pop mov jnp xchg dec adc inc cmc mov sub dec cwtl inc cs and not push or mov ljmp mov sti cmp mov and daa pop jno outsl das mov imul movsb into ds test push jae adc repnz lods (bad) jne js subl mov shrb hlt jo inc and mov (bad) inc adc or outsl pop lcall cmp push push lret nop leave push clflush (bad) jge sbb lods xor out pop mov mov xchg xchg jno adc mov pop xchg (bad) (bad) xlat cwtl and cmp imul pop pop lods push lcall (bad) push push adc push cld xchg fimull add xchg fdivr ds ljmp aam test jg cmp (bad) dec nop test pop aad xor popl jno dec jne or inc out add inc mov fwait jl or pushf push inc pop or lcall xchg add negl (bad) cvtps2pi movsb das inc outsb mov xor mov cld outsl lcall lcall push mov push repnz ret push in roll xchg mov iret xor adc and pop mov leave pop repz pop lds leave push dec out pop jno bound out add iret addl ljmp sub jl dec xor jg testl icebp scas mov (bad) xor js xchg stos mov pusha xor xchg push rorb cmpl stc sub out add xor fs and arpl ret add inc push dec mov scas and faddl sti cmp jmp rcr jle push and jecxz hlt out test sbb cltd mov les jno adc cmpl adc mov mov mov roll pop sbb cs enter outsl inc daa cwtl sahf push mov cmp add pop pop xor xor cwtl mov (bad) sbb xor out icebp pop cmp jl push aaa (bad) and jp mov loope sub sub call inc addr16 stos dec inc dec js cmc dec stos xor addb dec not shl rolb add test outsb xor leave push (bad) aam ja cmpsb jne loope loopne adc xchg sar pop inc hlt dec jl xor mov add fmuls sbb pop push cmp data16 lea sub das inc dec mov mov stos pusha mov ljmp mov dec adc (bad) cmp xchg cmp add es mov cltd insl jbe stos lods and notb jae cmp mov add xor mov adc stos and aas scas mov lods adc je mov adc xchg mov push sub push dec jno lret fabs cwtl inc push lret sarb mov push rolb ljmp in pop bound gs movsl jg push das sbb imul je mov or adcb jp aam (bad) dec mov xchg push jo cmc push jno outsl pop ret in (bad) adc jg aaa sub xchg out sbb cmp push jp xchg xlat sub adc fistpl insb sbb jg adc inc add xchg sub clc insb jne stos repz mov mov jbe (bad) dec rcrl mov rorl pop pop mov xadd mov popf sbb or ljmp imul dec sub or jbe push push mov jg inc jns dec stos cmc push dec xchg dec scas sub cmp out fs sbb inc mov pop sub or sahf ja fsubr sbb push mov push push push push jmp call sub rcrl xchg and imul (bad) dec test jmp nop and and (bad) push pop add adc les subl sub pop add push xchg inc or out pop push stos leave mov into sub ja,pt mov jecxz stos xchg sbb push pop dec pop mov clc mov stos imul loop lds pop jge popf pop xlat and fsub pop pop sub xchg fnsave or or popa jb out sub (bad) decl (bad) xor pop sbb pop out (bad) cmc jle jmp testb mov pop pop pop int3 and loope jge (bad) insl xor rcrb ret pusha movsl mov or xchg in sbb cltd jp shrl ffree push int enter nop fisubrl and lret sbb push jno loopne stc hlt dec (bad) xchg jbe jp aam jp lock stos stc dec mov adc jmp into jb shr sbb add xchg cmp dec and dec xor add push inc out cmpsb loopne sahf jns inc push add and add jp push cmp cltd mov jbe xor adc inc add or sub fs test sahf cmp add rcll pop sub sub pop jmp (bad) add push jo xor pop nop mov lock pop jl lret and lcall mull hlt (bad) xor (bad) xchg repz (bad) lret cmp mov sbb cmp xorl sub jl push std popa xchg push mov pop jmp (bad) jbe xor lock jmp ljmp inc std dec cwtl loop add jg add mov (bad) int or and xor jle pop not add sbb rep add inc jb lods add pop nop inc popf pushf sbb movsl add fisttp jmp adc add mov (bad) mov jb add and xorb cvtps2pd xchg push add add add aas pop push (bad) jle push jno mov push (bad) iret in dec inc ljmp or jge ljmp mov inc and push cmp ljmp dec dec jecxz dec xor jae and mov pop cmc loop add or dec pop push fidivrl dec ljmp std js sbb rcrl or xor xor add sub mov cmp mov xchg jge adc cmpsb push mov pop jl,pt add loop outsb fidivl lahf jns add xchg jp test sub mov rorb add sbb and jo movq in jne insl and push pushf add (bad) ss inc xchg dec dec add and movl loopne or jnp aam and add outsl out in pushf add xchg ror add add push jmp mov dec in mov cmpsb jmp mov pushaw inc push fildll mov push les pop pop lds add add pop (bad) daa mov cmpsl pop jmp push pop xchg mov dec cmp add inc and sub out (bad) push xor jge,pn out add outsl jnp (bad) jb sahf push inc clc lea call ficomp mov xor ljmp push push aam pusha push data16 xchg out add inc mov pop movsl es (bad) pop enter dec lea in mov push jns test scas scas insb mov pop (bad) jl jmp push jne cmp rep mov push xchg fisubr jmp (bad) and adc jecxz es adc pop xchg gs fcompl push cmp sub jae int sub mov dec inc adc ror gs or jmp jmp fwait (bad) aaa enter push sub push xor mov jmp dec out cmp dec icebp jmp out cwtl push pop mov cs mov movsb jg cmp subl int3 orb pusha jae mov mov stc aas push fucomi xchg (bad) jp add xor es out test dec mov imul inc sbb fisub push push mov jp xchg (bad) add xchg scas add (bad) push add imul mov push movsl fldl dec push jmp xor adc ss insl push push mov jge rorb cmp mov mov pop dec xor mov inc xchg cmc xchg into jns push (bad) aas xlat mov shrd lcall pop xchg ja imul add lret out pop push divb dec mov test mov daa fbld xor pop jg lret test add pop xor stc add lock (bad) mov inc in push jmp pop xor aaa jmp xor iret add aaa imul xchg dec add sub mov mov in jns movsb add pop mov stc insl add xor lret sub mov (bad) jmp pop pop jmp fisttpll add jg pop add xor jle sbb xor fimul adc es adc stos in push sbb insb inc mov pop gs cs jo xor outsb pop incl imul and push insb fidiv cmp sub pop out stos push (bad) mov outsb es rclb push ljmp les lock hlt jb inc repz lods xor aad jmp push add roll pop adc mov js lock in jp add ja jno in cmpsb shrb repz jmp push outsl add cmp imul pop xor dec ret in aas pop mov adc sbb repnz mov cmpsl cmp aas add or jmp loope addb ret mov in mov das and incb add mov push dec and rorb sbb imul (bad) xlat pop imul ljmp negb pop sub pop push shll jnp jmp mov push mov pop imull jmp (bad) pop imul jg aaa dec push faddl (bad) jmp aam add xor pop shl jmp inc sbb mov or int3 mov inc jno ds push pusha push sub movsl (bad) cli outsl and mov xlat mov inc mov repnz sub movsb cmpsl inc lcall inc lahf mov inc sub adc pop jmp cmpsl add cmp js xchg add es add add imul in mov xor adc sub movsl mov loop lret add repnz inc js pop in sti stc mov mov sub push sub jo lret int xchg int3 push adc bound lods rcl or push es mov mov mov sub cmp mov mov les in and jmp add adc test cmpsl gs cltd xchg pop enter push pusha in push adc call or mov sub cwtl fcoml or aas outsb pop pop jns add cmpsl fdivrl jp cwtl cltd mov add jg jmp cmp add hlt xlat (bad) mov repz xor adc mov push movsl adc xchg test adc mov cmp and mov dec (bad) iret pop or inc sbb out dec cmp fidivr lret sbb push sub in mov inc lret add shrb insl scas in push jp lahf mov jle fs dec (bad) not pusha xchg cld lods xor jno in mov (bad) jnp pop jbe add add out xchg fs out jle mov lret aas xor xor add inc mov sahf test and jmp push pop mov jecxz addb mov fldz fsts (bad) xor and pop inc adc fwait and mov out imul cmp bound (bad) and or scas jno mov stc loopne jmp xlat or mov sub xchg (bad) adc and mov or mov pusha pop rcr loop dec dec add pop test sub xor ret mov xchg insl mov (bad) jbe sbb mov ret inc mov pop aas test bnd fs outsl mov jne mov push sub xchg push mov pop pop leave push sbb ret test xor jmp xchg mov pop inc mov pop cmp ret lahf pop clts int mov syscall mov repnz out lret jb sub cld pop push push xchg ljmp dec movsb movsb xor cmp mov mov sub mov ds stos push les cli dec test jo inc daa xchg ret push dec leave cli push xor int3 add lahf out sbb push xor add (bad) vpminsw inc add xor add xor es xlat cwtl fcoms jl dec inc mov jp sbb pop push (bad) add xchg je add cmc sub stos and mov push in ds add das sbb pop cmp mov popa pusha xchg cmp xchg jg push push xorl add pop lods loope sub adc fisttpll inc imul ret stos emms cmp mov movsl sbb out sbb loop leave pop clc scas adc adc int inc sub push xchg movsb cmp jbe (bad) hlt scas (bad) mov sbb sbb out pop and or push push idivb das or lea add mov or ss je popf push cmp sub add push in jg push sbb jge mov xchg or sub loopne sub notb daa in push out adc incl dec xchg add (bad) imul insb add dec mov daa add aad jo add mov mov inc mov or out enter hlt cltd shr or push mov pusha in mov pusha loope fisubl push adc sub loopne add pop aaa enter lods and fsubrl jp mov icebp aad inc ret nop xchg mov ds and add and mov lcall mov sbb cmp shr rorl cltd mov (bad) sbb test in xchg pop and and cmovg je,pt das sub fisttp mov and in pop in push call pop psraw dec ja pusha or add pop add adc xor mov pop cli cmp xchg add dec and mov out pusha cwtl jno ljmp xor fcom mov pusha cli jl sbb push lahf aas (bad) pop mov or or ficomp rcrl inc xchg mov xchg call mov inc xchg mov and ret rol sub bound enter jge pop out pushw push xor jns mov xor mov mov dec repz add out push add xchg xor pusha enter inc xor mov cmpsb mov add pop adc sub xor pop es mulb adc lds sarl sbb arpl xchg loopne and and sub xchg push xor jb pop xor mov dec movsl scas cltd andl stos stc outsl in add cmp and jle jmp pop es and arpl shll sahf adc arpl fistl lahf mov loope lods add (bad) mov ss mov (bad) xchg and ljmp push pop add fsubs mov adc lods or out adc bound xor test ret adc push sbb loopne pusha or icebp inc cmp jb and aaa mov pop sbb add cmpb aaa inc sahf adc add je xor jb scas and dec adc imul sub mov repnz rclb add add addl gs movsb fnsave int xchg add mov sub sbb movsb jl cmp sarl into xchg mov add repnz cmp and mov es (bad) (bad) adc sarl mov adc inc adcb aas and push or cwtl enter jmp sbb mov loopne push cmp popa pop adc mov call clc imul add xor mov addl bound cmp or push lea adc addr16 fidiv mov outsl cmp push and insl aad jb shlb popa test adc lea mov jl fs dec sub inc je add jl sub and shrb dec mov push sub add jl (bad) mov bound and push pop ja fsubl lret add fisttpll lock push aaa jp (bad) cmp inc insb outsb cltd lds mov sbb push imul add mov pop repz jp cmp test dec push mov pusha jge ret out fs or push add addr16 cmp jb add jg aas adc les push cmp pop arpl imul xor xchg js or or in aam sarl loope jge inc gs fldl xchg pusha pop (bad) cmp pop pusha xchg (bad) xor repz cmp (bad) std lods adc nop imul xchg xchg push in fistpl cmp push or or insb xlat jae sub add mov shlb int adc xor dec and mov xor mov dec push rcrl jp popf or mov int3 add jbe aad (bad) mov movsl mov xchg cwtl (bad) sub mov add flds rcl rcll inc sub xor (bad) xchg adc add xchg xlat or cld nop lret or push push xchg sub dec dec sub inc add pop fistpl xchg test or xchg les sarb or mov or fwait add add cwtl mov dec inc pushf or loope rol cmpsb add add cmp add fs shrl mov or mov xor jg adc add (bad) xchg icebp lea nop sub jae mov add inc sbb or call out adc jle push mov aaa sbb lahf jp or adc insl xor sub jge pop addr16 cmp and imul sub fisttpll cmp xchg adc inc and arpl push xchg lret bound push mov in scas shlb pop jge int3 dec xor insb jbe mov inc adc pop push sbbb sbb add jb add (bad) popf push (bad) xor jae shll sbb mov inc sub xor je pop xchg jbe pop mov add push push lret jg sbb push cli cs dec mov and daa jge das adc (bad) mov sti mov pop xor mov xchg aaa pusha lahf jp push out adc jmp out dec dec fnop xor push enter jmp add aaa ret dec sar pop sbb cwtl add test js mov sbb outsl push jg idivb push sbb mov pop jp out xchg sbb inc lret push (bad) fiadd dec adc xlat mov dec sub je xchg xchg push xlat push cmp add (bad) outsb inc add push sbb sbb pop nop dec ret pop cmpsl sub (bad) pusha dec out data16 sub sub call les push mov sub mov ret lds (bad) ret popf lret and and cmp or pushf rcrb data16 pushf mov popf ja bound mov ret fwait cwtl jne xchg imul pop pusha add lahf xchg xlat rorb mov jo imul inc adc mov or and bound out bswap out leave enter pop fcomip ss pushf ret push sub cmc das popa and inc push pop cmp inc fs jl clc xor adc lock (bad) loopne js dec pop (bad) add jmp mov cld dec insb xor and push rclb pop inc jle sar popa or test jae add lcall dec mov inc mov pop push adc fldl jns cmp push adc dec jmp dec out mov jl or leave js gs mov mov pop adc push jge xorl mov adc shl and pop xor add add int3 mov or lods pop or dec fist pusha outsb add jmp pop gs das push lock adc movsl cmc jns out push jmp add cli push lods movb repz and sub and cld in push or inc pop mov and mov dec and (bad) stos add icebp hlt adc cli inc call xlat add jno adc jne xor sbb arpl mov scas adc cli out aas add hlt test sbb or push xchg lea xorl mov or (bad) pop (bad) jecxz xchg les andb xchg mov mov cmp (bad) dec pop adc xor adc addr16 cs adc ja xor repz sahf push andb adc sbb scas push cwtl rclb outsl pusha mov mov push and mov movsb sbb lcall orb mov mov jno jae add sahf sbb adc lcall xchg leave push dec enter inc push insl lock inc ja mov je xorb sbb dec mov mov lret mov (bad) (bad) add imul dec mov ljmp push mov pop add jl icebp sub (bad) test sbb xchg sub scas les scas dec aas or push clc das dec aaa enter xchg outsl test pop (bad) pop or add mov push int3 daa aas loopne mov lcall mov adc sub xchg icebp sbb aam mov xor shl outsl fsubrl pop push loope popf and in dec xchg jecxz scas fcomps in jmp out repz lods push push sub add sbb jl insb pop cmp ret mov mov sbbl xchg add lods or pop jge (bad) daa sahf xchg adc xor incb cmp cmp mov xor mov jb adc push xchg or xor (bad) pop flds fisubl fadd jecxz cmp pop sbb push outsb push add fnstsw cmp in in sbb lret push or add mull jmp xor jns pushl add xchg enter sbb xchg xor xor sub add jl lds or jmp adc xchg mov mov nop jns mov cli xchg mov inc mov jp jp dec mov rclb test pusha roll mov js xchg pop lret mov data16 push call adc andl fwait sbb in sbb rcrl les mov jmp inc or adc dec nop mov push add cmp and xchg cmpsl add pop xor out je lods xchg ja sarb and lret inc xchg add push out das sbb jo movsl push sbb cwtl repz add dec add faddl test insl pop out imul les adc hlt sbb cmp faddp cmp je or jnp pop ret enter rolb and xor out add jmp and inc jecxz in (bad) and in adc or cmp lcall mov or adc and scas and dec ret enter movsb inc aas adc es or mov aaa scas dec pop jp or inc mov cmp push pushf add lea inc ds xchg adc xchg and push test mov cmp mov push add daa popa push cmp and les lods cs cwtl int3 pop add repz fsubs pusha and sbb sbb lahf or neg inc (bad) xor pop or imul in xchg mov stc mov push and sbb xchg inc out pusha mov cld sub push push call iret clc out add xor pop jno sub pop sub and push addl pushf aam mov adc sbb jo iret (bad) jo sub in push cmp add push mov inc adc cmp subb sub push sub inc push xchg and test add movsl jle mov inc cmpsl push ja dec add or dec cmp insb adc add mov cmp mov ret xor andl and push adc pop int xchg push lahf lock xchg dec out outsb inc outsb push mov mov xlat cltd in or es loop incl xor and dec jb and jnp inc add adc fldl test inc daa xchg cmp fs popf mov cmp cmp nop inc dec rolb dec sar sahf lcall add xchg out enter jno or and mov sbb dec lcall dec fdivl shr xchg loope test int3 outsl lret fwait daa mov inc cmp inc loopne push push xor add or or repz and mov loopne mov lret enter or push out nop inc push xor push es add cwtl cltd adc or ja fsts dec push add and loope adc movsl mov mov adc add insl aaa (bad) mov out sbb out clc cmpsb pop add mov or lods jmp dec ja add lcall stc stos xchg test or nop in push cmc push add repz sarb push pop lods adc cmp cmp jns push dec sti shll push dec aas add out into cmp pusha stos notl add mov dec lds xchg lea dec xchg xor lock cmpsb inc dec mov sti jb add test xchg add ret mov dec mov or mov xchg punpckldq mov inc mov adc or push test dec xchg mov aam xchg sub inc pop inc es cs adc jge call sub clc (bad) mov push mov dec xchg adc xor cmp push inc cmp jo add push ds stos imul push sbb or xchg sub loopne repnz lcall jne mov sbb mov jle lods test jl adc insb mov cmp aad negl mov cmp icebp out adc mov test int3 sub add shlb sbb xchg mov shll sbb sub pop pop je sub xchg push dec or xchg jne mov scas add enter pop mov lds arpl sbb cld adc pop cli sbb fcoms and das sbb mov xchg mov lret jecxz adc lods sub (bad) jo push pop clc push dec add mul adc inc stc inc add hlt sbb or inc lret sti data16 mov int3 jge aaa pop inc and xor sahf lret int sub sbb dec bound and mov notl and jns mov ret inc pop jns enter out add ret jge add or sub out sub ja (bad) pop loope xorl adc ljmp push mov dec sbb jmp out shrl leave out add (bad) jno fs or outsl in arpl outsl or mov fdivrs fdivrs xor adc add cmp mov add imul lahf xor inc add out aas cltd add arpl faddl xor aas inc ret sbb adc sub mov jp pop add and adc mov nop push mov lret mov push jmp mov add inc inc sbb rol add xchg dec ret (bad) jno cld cmp and or hlt jno cs push popf push add mov add stos sub add ret pop js mov add das sbb movsb and fadd cmp insb (bad) inc or inc adc pop orb sbb jo push loop xor orl lahf jb mov mov pusha and jnp push jecxz aam inc adc cmp mov lahf and in sbb adc or pop jae cmp scas loopne clc lahf jns xor outsl dec inc adcl iret imul xlat inc rolb sahf fdivp leave xor cmp push jo and xchg sbb ja push xchg pop add jbe push mov adc lds xchg pop icebp scas ljmp or pop aas fwait xchg mov in bound push icebp pushf jo bound in das xchg push mov xchg pop or shlb add mov add xchg xchg xor insb mov sub nop push jb test sbb fwait cmpl out icebp cltd jae (bad) cmp test cmp jle test adc push jg add push mov cmp div mov mov mov jne cs sub out (bad) pop popa test stos adc or mov sub scas dec nop jne adc push add pop mov cmpsb inc inc outsl fdivp daa adc add jp pop inc mov mov push inc int3 pop aaa or movsl shrb ja dec roll sub (bad) gs aad lods shlb int3 push nop cmc xchg lea mov pop or ljmp jp insb ja xchg es cmp adc lods inc mov and stos mov mov jp inc xchg mov std add (bad) lahf mov jne rorl lds mov mov (bad) enter movsb jl (bad) ja mov stc sahf and addb test cld jl mov test lods pop int3 andl xor sub in dec shrb sbb cs or (bad) ftst movsl sub mov mov inc dec leave into xor add (bad) push sub jmp je jle imul push mov sbb rolb fwait jno xchg xorl dec mov iret mov inc xchg pusha push fisubr int3 or ret add nop mov loop cwtl (bad) lcall or pushf bnd stc pop jns add lcall shll and cmp mov xor push cmpsb test divl or lock mov xor in clc push mov mov and sbb lret imul in inc jle inc jbe ficomp xchg push cli add in mov leave test les mov add setno jne aad sub jnp add add jg add out xorl xor and xor or cmp repnz and cli and dec or lcall jmp and inc jnp or adc jl ret lock les lret and int3 mov ss rclb xor cld les and clc mov sub dec cld lds daa adc out (bad) add fwait xchg jns jecxz pop (bad) xor ret (bad) cmc jno pusha idivl pop fdiv add std push add inc or in imul repz in ret fcmovu and jmp es jns add cmp xor (bad) (bad) (bad) inc std jae in incb jp ds js or out and mov and xlat sbb repz or and push dec dec xor adc jp jmp dec xchg sub daa and mov or in and and cmpsb inc mov in pop add add popa popf testb mov push add inc add scas inc mov jno sub (bad) cld in sub dec dec ljmp adc adc test shr sub aas adc add adc clc mov inc and adc enter jns bound cmp loopne rorl dec adc push loope pop data16 mov es pop lods hlt cs addl pop and pop lret add loopne jne cmp cmp xchg sbb push and test sbb test pop cwtl inc inc hlt jns mov add cmpsl xor (bad) popa xor push movsb jb (bad) push push pusha pop (bad) pop enter cmpsl loop pop rol push shr mov repnz mov jecxz nop out mov fstps (bad) mov mov jo pop inc add push dec daa rolb or mov orl aam dec cltd cmp rcrl xor sub das add addr16 notb cmp lret inc pushl or test xor push push add outsl rcl adc dec and cli jbe,pt mov sbb lea jle adc test ss fs addr16 and (bad) int les xor jle fnstcw push mov dec push pop or das pop mov and push dec rcrb add repz call or xchg add push popf repnz cmp add fnop push add aad int3 xchg pop dec je dec sub lret adc pushaw xor and mov addr16 and pop adc das imul xchg inc jo in xor lcall nop inc dec inc test mov aad add movsb sub pop aad mov xor lret xchg mov adc mov dec fsubrl add aam aaa notl mov icebp pop std and sub sub xor aas je (bad) out stos lahf adc cltd out inc pop push adc or mov mov and xor inc insl and stos (bad) push popf dec cmc jns pusha (bad) mov cmp pop xchg jbe xadd xor movl leave push lods adc es mov daa loopne sbb pop stos sbb pop or sub neg add push in fisttpll add iret cmp pop sbb push adc je add inc or or pusha cmc dec testb jnp aam push sub and and pop dec mov cs mov adc mov xchg mov sbb les stc rclb mov mov xchg jge loopne add add cltd (bad) sar add imull adc sbb and cli icebp and dec mov pop repnz add add jb inc push insl pusha dec out jl and xchg aas pop xor sbb outsb js fcmovnb test aas sbb aam jl sub jae (bad) dec loop aad (bad) aad mov hlt int push arpl add das fcmovbe pop dec sub or mov (bad) ds sti sbb movb xchg hlt mov loope dec add xchg popa add mov fwait rclb xchg leave dec enter cltd mov dec repz hlt jb dec in daa insl xchg pop jno xor xchg dec movsb jecxz cmp sbb jne pusha jo inc push cmp lods mov cs mov add test fcoms pop movsl cmp sbb sbb mov repnz xchg (bad) stos cmp jge pop inc or sub pop divb out or and leave jnp rcr negb inc and add call mov pop rcll and mov scas xchg (bad) push add ret (bad) sbb ss incb jnp idivl or xchg repz insl mov cmp pusha push arpl and fidivrl pop rorb sub xchg sbb ja (bad) sub push jle dec daa add add cmp test out inc cmp push (bad) das push dec adc pop bound cwtl xchg inc add mov xor aaa adc out push pop pop cmpl je cli fisub rolb pushf inc pop inc inc in xlat fcoml mov dec add repz stc or pop adc pushf sbb aad scas or mov push sub pusha ljmp lea pop pushf fcoms inc sub cmp lods jp xor xchg clc pop inc xor (bad) push movsl icebp repz orl adc call add cmp lret fildll push jns out add sub push popf push fcomps mov sbb cmp ret les mov jp mov pusha in adc xchg nop ss xchg push inc cwtl lods aam dec add jns add lret add add int test aaa jo mov pusha xor jns ja,pt pop cltd incl and js dec and push pop mov rcr jnp bnd dec dec or repnz add pop fstpl mov mov mov push cli stos dec jo mov add pop jmp out mov dec add and pop add cmp pop loope adc pop xlat test ret aaa sti jnp fistpl or dec pop sub and mov dec pop cwtl pop shl repz mov clc or cld cmp dec add lods ror mov call test lds popf or jmp dec or push (bad) and mov add sub aas lock xor mov mov fiaddl add push add mov in and adcb call dec cmp sti xor push add xchg sub inc push adc imul aaa add pop lcall mov add ficompl fwait xchg rol add or cmp mov mov inc lahf sahf jmp jno (bad) xor jbe fs dec fildll enter mov popl sbb daa inc in pop xor lahf int3 cmp loop mov pop and or lret insb adc pop jne repz movsb xchg pop xchg (bad) cwtl sub jmp dec inc or sub xorl inc mov cld out add push mov add enter test and (bad) push mov pop pusha into and pop cmp cmpsl pusha push dec mov daa add xlat out sbb clc add inc mov inc add into and xchg mov loopne lods adc das rorl cmpsb push adc ja imul dec add sbb sub xchg push jle repnz add push mov pop arpl push adc inc je (bad) jae lods pop or mov add dec out xor ljmp push xchg bound js ss (bad) xor xchg rolb mov xchg dec (bad) pop sbb push out adc adc ficom xor test call sbbl movsb pop pop rcr xchg fs hlt popl adc sbb or mov xor lahf dec pop addr16 fistp cmp pushf or cld ret scas sbb inc jns inc push hlt cmpsb hlt lahf add cs fistp icebp andb lea lock fnop iret cmc dec mov lods stos sub stos sbb rclb jo cli rorl movsb mov out add enter aas push xlat iret mul leave mov outsb jp daa mov lcall adc movsb int xor out push test std fistpll lock jbe cmp xor xchg daa mov punpckldq xchg mov leave movsb in jns loop (bad) in arpl cmp arpl xchg sbb std inc inc es (bad) or xchg je es cld bound hlt xchg daa mov cmp mov xor repz pusha pusha add push mov and add xchg lea add push (bad) pop add sarl cmp push mov int test (bad) pop push cmp insb leave js pop adcl mov lret mov ret adc xchg mov mov pop dec fistl mov add es sub or sar in cltd cmpsl dec lock or (bad) push es insb inc inc jno (bad) xor movsb sub pushf clc mov mov push ss repz cmp hlt jmp and rorl lahf daa aam (bad) mov rcll or fdivrs dec jo sbb and inc loopne jb add jmp jns cmp ret imul jns mov ret das mov call pushf and out inc popf sbb call in cltd mov data16 sub cmp daa popa stos mov leave jg inc inc mov lcall (bad) loopne fidiv ljmp loop pop (bad) pop mov test xor ljmp loop aas ret cmp adc xchg inc cmp fwait xor cmp push jns je (bad) enter fwait leave in fldl aad and mov mov add popf stc add push dec seto xchg or hlt and je into add lods call jns scas sbb out sbb es mov jo (bad) int3 enter sbb and adcb subl push pop and dec dec out ss mov cmp inc pop stos jg or xchg sbb adc jmp test push testb mov test movsb push sub ret leave pop or adc mov dec mov cs scas and arpl nop sbb lea jae and push in les pop sub xchg enter push dec push cmp jecxz add out inc rclb mov dec imul sbb adc add outsb inc xor sbb pusha mov leave and repnz movsl loop add fiaddl pop das cmpsl in or sbb mov mov push ja dec xor cmc push sbb add mov and and ficoml xchg jbe pusha cmp aas insb call inc xor jae inc out iret sub imul imul sahf je and add fistp sbb idiv jmp cmpl and adcl adc in bound pop jae add jg test out popf push add sbb imul push repnz add jae lcall inc mov mov pop sbb cmp mov xchg or pop add pusha call subl dec test push push lcall cmpsb (bad) add in mov jnp cmp or xchg mov cmp std cltd fdiv adcb cmp xchg xchg sbb imul shrb dec sbb dec popa les add fsubr push jg int pop sub clc test mov adc inc xorl addl (bad) aaa ss inc inc test lcall repz dec dec pusha fs and lods or dec pop fwait xchg xor jecxz mov int3 imul xor arpl lcall jb jge push insb push mov inc cmp sbb xor or inc adc icebp clc je or dec mov rorb repz pop adc cmpl add aas fiadd loop cmp dec push xor and add shrb leave add js mov ss lahf adc pusha sbb fldt dec xchg roll dec mov fucom notl test lock ss dec pusha inc pop icebp sti pop sbb and lods loopne das jg and stos outsb test test adc fisubl pop add jbe sbb ljmp mov jae xlat aas test cmp cmc pop mov jnp cmp jno inc aas cmp dec movsb adc sub mov sbb sub xchg add jns mov mov cwtl xor add add leave loope cltd and sub cmp dec xchg cld xchg xor ss int3 outsl and adc js clc dec inc pushf divl lds adc std sbb dec mov addb fadd or roll cmp push in xchg shll (bad) ret icebp (bad) push das add and jecxz rep mov sub leave pop adc dec mov inc inc xor cmp add push sbb popf xchg mov push xchg jb int adc xchg sarl pop clc es adc dec xchg adc add jl sti mov jl sub dec cmc jno jae daa sbb sbb cmp (bad) sub loope mov int jmp test add das (bad) ret or jmp xchg outsb loop dec mov insl shlb sbb test cmp pop add push mov add in jmp aaa xchg push sub xor lds insb cmpb test and out bound sub dec lods dec xlat cld (bad) push or bt arpl int3 xchg add out cmp xor adc popf mov adc scas sbb and fs and jb xchg push inc push das xor in roll pusha add add shll cltd mov and xchg jmp cmp cli sbb inc push in adc (bad) cmp call aaa xchg es push add in in (bad) add imul test sti xchg pop inc inc push mov mov dec imul repz or inc icebp sub sbb xor lock gs sub ret xor dec ljmp push ljmp sbb int cmpsl mov lret add (bad) xchg add sub (bad) out add sti pop dec dec cmp int ret cmp xor popa jg in push and sub xlat insb and mov mov test add push lock scas or cmpsb rolb (bad) xor dec add cwtl adc add ja xlat push inc addl cmp stos and aas add (bad) int3 jns xchg verr push push or arpl pop xchg add addr16 cmp mov adc (bad) andl jo lcall cmpsb and sahf adcb (bad) ja jno add imul mov in xlat sarb xor dec lods add dec enter sbb or outsb and arpl sub inc sbb add xlat mov xchg into (bad) jne mov icebp in or stc xor or add fs pop repnz push divb push sub mov arpl jns out call mov xor mov cli cmpsl pushf push jmp add iret nop mov daa divb insl xchg daa das push or scas loope or push pop sub ret jns in xlat shrl sbbb push and sahf inc sbb or mov lahf push cld and push dec and in xor jle mov pop and xchg mov jnp or push inc adc mov (bad) xor xchg inc adcb xor inc adc cmpsl (bad) cmp xchg or pop xor xchg ds lret out test shlb andl or sub dec xor fnstcw (bad) insb and sub push pop push dec mov dec inc mov notl cld lds sub push adc and or and add enter or lods (bad) jb fisub cmpsb jae xchg pop cwtl mov mov jne xor rclb xchg roll aas mov sbb jmp push into sub push dec cmp lret movsl int3 ret xor imul insl in adc shll sub dec cmp mov stc subb shlb lds int3 lret stos lret push pop push repz sbb adc incl mov mov push lret cmp pop mov ss jp or test stc add bound and and aad movsl mov mul dec lret into jo add nop (bad) xor pushf loop sbb cli cmpsb sub call outsb adc add lret imul (bad) lret pop (bad) push scas or mov push sbb popa enter and icebp inc fiadd add pusha inc cmp arpl repz sub push jno jno pop call jnp adc stc hlt inc pushf sub and cli xchg pop jo xchg fisubl aad bound (bad) jmp xchg dec mov sub and adc push cmpsb ret adc dec xchg mov insl dec loop add enter jbe push iret jns sub xor rclb dec or cmp sbb sub (bad) das cwtl pop xchg outsb add rclb push aas pop add jne cs repnz cli je xchg pop lcall bound hlt xor addl sarb sub push je cmp rclb xchg addr16 test lods test cltd mov and add notl imul sbb clc shlb scas stos xor (bad) mov sbb out cmp std jmp repz jle sub lcall mov add nop push loop xor (bad) or scas push add jb call cmp icebp and xor dec fstl dec js test push inc jl xorb stc pop flds mov aam xor push in sbb mov push xchg in add stc mov sub hlt popfw sbb sub sbb es test push inc lods daa adc push fcos aad jl mov ret jge nop adcb push or out push dec (bad) mov lods insb popf testl lahf ret inc aaa xchg dec mov push xor rcr push inc adc sahf sbb xor inc fadd mov mov push xor xchg add dec pop dec in mov mov pushf (bad) mov mov mov in lods inc movsb cltd jp (bad) xchg incb push adc cmpsl gs fisttpll aam adc xchg add or orb test addb and stos aad cmp xchg fistl xor xorb stos add std xchg sub add lret aas dec jmp ret in and add test loope mov mov jmp sbb mov pop xchg cmp xor cmp or push xchg mov xor ficomp pop (bad) dec or adc imul jbe pusha adc aaa jae ret sbb (bad) inc xchg xor pusha loope mov popa and sub sub or andl lods cltd lret sub mov cmp mov push push add mov pusha adcl xor adc inc push in adc inc imul or nop inc pushf xchg std ljmp cld fwait call dec roll lahf or pop inc sub call lds mov sbb xor clc popf les jne xor cmp lret incb loopne xor (bad) and mov aas fldenv push out sbb push pop inc jbe stc jl rclb flds popf xchg es sub les xchg mov add dec mov in add cltd mov fildl xor outsb into xor or mov pop mov xor add push daa shr fs cmp frstor and (bad) in out out add inc adc mov cwtl pop adc jne add nop loopne lret sub push lret inc sbb xlat xorb mov mov sbb int inc ja adcb (bad) hlt jecxz jbe cs es stc out (bad) arpl adc stos (bad) js jae adc mov mov or in add push es nop xorb mov outsl bound inc fldl fcoms jge xchg or xor sbb jbe inc pushf test push movsb inc push sbb push test std jbe cld outsb test or jmp mov mov enter dec inc fs or xchg imul (bad) and xor ja mov dec mov test lods sub icebp inc sbb out and test imul pop cmp test dec sbb je int3 rorb mov adc xchg es mov subb or xchg and push mov jge inc mov sub mov mov cmp jmp ljmp ds pop pushf push cmpl lahf push jmp pop or xorl div add cmp or lahf push loop in xchg xor or lcall add xor push (bad) das sahf dec imul lea stos scas pop addr16 mov cld insb int3 cmp push jp fldenv pop xor fldl push in aas jnp lcall or jecxz hlt loope inc test roll cmp cmpsl sbb mov stc pop imul fsubl es gs sbb loope push push cmpl jg icebp arpl xor enter in (bad) repz inc in mov aad jl adc add stos xchg add (bad) mov stos push call mov imul add mov lahf sarl out xor or sbb addl es add fbld pop push push mov mov scas jmp loopne popf rcrl sub mov fsts cmovnp xchg xor adc jg ud2 nop stos xor repz aas inc or out mov jg push lods ljmp cmc mov push test adc fs mov pop lret mov fldenv xor xchg (bad) add add arpl testb loope sbb pop xor stos mov cwtl and jge inc push push push pop (bad) fimull xchg incb push aas mov pop and pop add in xor mov outsl std push rol (bad) xchg push jo mov adc push pusha (bad) (bad) dec push cli lret push dec aas insl or pop pusha cmp jge cmpsl popf jae add fidivr xchg lods push pop add or call dec jb clc pop aas pop cmp ret mov (bad) clc rorb cli outsb lds fiaddl sbb stc outsl negl push mov mov out test frndint dec sti aam jmp adc repnz cld and mov lods inc mov jae sub push (bad) fdivrs dec mov and push mov adc gs arpl (bad) (bad) scas or mov push mov or xchg iret jnp xchg push pusha mov sbb in inc mov aas cltd xor or push (bad) adc sbb push in and mov push les cli sub push loope in sub mov icebp fwait pop gs insl pop push stos imul jae les into dec xchg cli jno push pop sbb pop sbb pop ds popf (bad) xor stos sub outsb mov int mov or sbb (bad) popl inc rcrl adc call adc psrld and inc mov pop push ss imul adc (bad) (bad) or pop mov xor sbb sub (bad) cmp sbb jae push xor movsl adc jl jno add ret push lea push pop mov pop xlat nop addr16 dec in in jo cmp cmp and adc fadds adc inc lcall mov xchg push rcrl mov mov sbb add loopne mov push lock jge push sbb dec dec sbb and aas cmpsl or xchg ret pop (bad) arpl adc ljmp stos fadd out pop pop scas and dec test test mov xchg adc gs popl pop jmp int sub inc jmp dec in ret outsl mov push cmp (bad) fs push leave push xor (bad) mov mov push lods pop push lret sbbl imul loopne rorb (bad) mov insb les loope cwtl lahf sti sahf xor fldl andb inc gs repnz adc inc inc push dec sub dec jl xchg fldt mov loopne jmp loop repnz lahf (bad) and pop lock sub pop fldl sub sub sub mov pop test out and outsb mov add xor rol adc or pop cmp repnz stc pop jp adc stos jns outsl mov movsl stos mov xchg sti sub mov fist inc cmpps in jno adc jo jo adc sarl loope mov xor dec jl iret dec daa mov mov (bad) lock xchg dec out jg mov adc push mov mov push jb mov push repz pusha dec xchg xchg pop add subl cmp out jb mov pop pushf cwtl dec jno imul fldl outsb mov in xchg pop jecxz mov das sbb xchg out and mov repz orb add xor test pop push imul scas popa mov pop xor lds pop mov enter fisttpl mov inc and and in inc sub popf add fildl out (bad) enter add and out and bnd mov or xchg aas pop mov jnp jl mov out aam mov divb not or sbb or test repnz ret push dec mov mov sub test mov repnz daa in hlt mov sub dec xchg mov inc icebp cld jge xchg rorb xchg dec test test (bad) scas out jp add ljmp (bad) push rorl (bad) jg cmc arpl fwait mov idiv sar pushf scas add jno lret jb dec ljmp cmc sub mov sbb xchg inc push lods (bad) dec (bad) repnz mov jbe xor (bad) jne popa out lea adc das test ja fistp out jo inc jno sub mov jg cmp in pop (bad) xor dec xchg ds inc push push push or push inc push sub rcr bound adc cmp sahf mov mov sub adcb xor pushf ds js movsl sbb (bad) testl adc mov xchg mov jmp xchg flds imulb sahf scas or std and cmp addb mov mov repz xchg jno add daa dec sub add movl ljmp dec mov xchg lea test xchg xchg pop push sub xchg jle mov adc inc ret xchg push pusha cwtl in mov jl xor push aas lret jns cmp dec add cmc mov dec pop mov negl out xor push xchg out dec std in (bad) sbb mov rolb test (bad) jge int in inc or inc mov je stc dec dec xchg clflush xchg subl sub sti sub mov jle jmp and and sbb test jae pushf pusha pop fcomp mov inc adcb lret out mov data16 mov (bad) lahf sbb and push pusha xchg outsb and lahf lret xchg nop std fildll imul push mov inc scas ljmp fstp or pushl mov or pop sbb xchg push scas mov cld add cmc ja jmp or xchg mov movsl mov adc xor sti or mov leave push in and add jg push add lock or sbbb push mov bound stos in push inc sbb repnz mov ret sub add jp (bad) jle lret add xchg jns push movsl ljmp scas jmp fwait pop lahf fldenv cmp dec cmc aas mov inc pushf test in and andb and ds mov divl jmp dec sahf dec and aaa inc cwtl imul or xor sahf mov notl and insb or ja add cs stc jle mov and or or arpl push ljmp adc aaa lcall ljmp and ja inc std cmp fwait or out pop mov cld add or fdivs cwtl cmp leave xor push and sbb add not cmp aam push fist inc arpl sub aas pop mov dec inc xorb pushf (bad) out cmp ja mov pop outsb out imul sub jmp leave fnstenv ljmp xchg pop imul jbe mov loopne clc inc or add pop inc outsb and ss add jg loop push (bad) imul push xor add leave out nop mov jmp add dec sbb pop dec jecxz xchg pushf std int3 add inc (bad) push jns lret pop or ja jg xchg push mov xchg push pop test fst mov lret das sub out gs div add push push jne add dec arpl cmpsb test or movsb dec imul or or jno and ja scas xchg test push mov lret mov pop add es or cwtl inc adc xchg xchg cltd sbb mov aad aas sub (bad) add mov mov pusha inc lea mov adc cmp daa inc aam jg aad cs cli fwait add push cmp mov outsl adc mov pop and jmp push mov enter divl sahf add fs push push adc fstl and (bad) add mov icebp xor rcrb (bad) sub stc stos ja dec cmc inc and ficomp dec das enter mov mov adc scas jnp (bad) xor mov movups cmpsl mov (bad) push outsb mov (bad) mov jg out lret add stos sub out push lods add jnp mov movsb popf cmpsl inc pop cmpsb or mov add mov dec xor mov push shl add ret out inc push rol pop imul xor pop cmpsl or fstps or xor add es mov test inc sub sbbb int3 inc lret jmp add loop cmp push out xchg fcoml aam fdivl test and (bad) (bad) je mov mov pop repz mov cmp lods lods jae popf mov (bad) pop xor or xor test push lret outsb add or addb mov cmc inc xor movsl mov xchg fisttp in ret inc ret push in scas or gs leave push arpl out or fmulp call xlat inc clc cld push add mov xor push pop popf and dec cli mov sbb rcr cmpl nop jmp pop adc ficoml or addr16 dec outsb out cwtl xor cli fxch cmp inc (bad) cmp sub cltd jp inc lea lods fs out ficomp xor shl dec mov mov movsl fstpl or int imul daa xchg pop das (bad) bound (bad) rcl or cmp ljmp inc add fnstsw sub sub sub scas pop inc push xor repnz test js fstps or or pop mov das mov in jle pop shll sub push mov cmp push ret jbe lods mov (bad) fstl xchg sub les dec pop sbb scas daa dec add es jmp (bad) mov test xor mov jle mov push aad mov std push xchg jg mov jne test fidiv sub pop cmp mov mov xor aas jle add mov pop push mov insl jns sub popa pop sub cmp pop xchg push imull jge fstps in ret jo cmp insl cmc mov test movsb add shrb inc and out outsl inc fwait jmp and push push insb movsb add stc jp xchg cmp pop pop and cmp out push hlt jle fnop repz push pop iret call inc and and test cmc xchg stos cmp sbb push pop daa insl cs sbb lret mov imul and jmp fstpt push pushf jp ret push mov add add mov cwtl mov rorl add outsb pop jae mov push repz out stos sbb push je push pop xchg insb jne pop fisubl pop or and (bad) jno add jmp stos jb nop ljmp les stos xor add xlat jle cltd cmpsb daa inc pop ret cmp mov dec fldl xorb dec mov add mov bound nop sub dec add add push dec push stos insl fdivp adc lret adc push sbb cld test mov dec cmp mov inc xchg aam outsl jl add repz std jg ret xor push push neg fidivr sbb fbld push lods test lock xchg rcll loop movsb mov push inc mov inc fnstenv dec push mov rorb inc movsl cs add or jb add mov insb and es mov push mov scas mov (bad) decl sub ja inc mov xlat cs sbb push cmp pop and sub push fwait jg (bad) jecxz add ror dec xchg and ds inc add (bad) cld pop sti subb cmpsb cmp jae xchg lcall jae ljmp pop test mov popa and add mov inc scas xlat adcl jns imul jmp mov add dec je inc push pop repnz add or fnstcw pop fldenv dec mov xchg or push cmc sbb push xchg mov pop push pop push stc or sub fildll movsb xchg imul les xor stos fsubrs cmp sub imul sbb mov mov pop sarb in jl ret add pushl rolb lock cmp loopne and adc sub popf addr16 dec pop stos mov iret (bad) and cld push push adc cmp rcl xchg rcrb pop pop ja add leave pop (bad) test or ds (bad) fmul mov or push jge sbb mov loope test mov fwait pushf dec push int3 jmp cwtl adc adc dec cmp sub das add and xor and shlb xor aaa add dec idivl dec ljmp push push (bad) aam in jns in aad pop ja push call pop mov cs dec mov mov add mov pusha jmp adc call mov cwtl ret push push push (bad) fs mov (bad) jmp and adc pop dec shl (bad) cmc xchg add push xchg mov inc ret sub add int push add aaa cli test cmp or pop pop inc in pop adc fnstenv jmp pusha dec and call ja rcrb add inc (bad) jge or or and pop adc dec inc push inc arpl int3 push add inc mov xor les xor loop pop imul mov xor imul jecxz xchg push in sub (bad) movsl das add shrb or call arpl push cltd fldcw push out movsl dec subl roll jns jg mov sbb sbb add sub dec pop xchg loop push jnp cmpsl push mov pop ror (bad) cmp push out fistpl das push sbb push inc add dec jo inc push pop add pop adc mov adc inc stc scas pop imul int3 sbb push mov in mov mov mov int subl sti and lock cmp add loopne je cmp repz iret sub mov fmull xor sub jmp push gs pop lcall ja and pop sub cmpsl out and sahf inc dec cmp inc rcrb xor jl out and testb cmp jne fiadd sub aaa xchg (bad) xor sarb mov or jle addr16 cmp int3 push jg add das fsubl cmp lods es jecxz xlat add add sbb fs fs mov add outsb or pop add pop shr mov jbe loope cmp orl add mov jne imul pop jg cmp dec cwtl inc fxch inc xchg jg mov adc cmp pop mov push cmc mov sub addr16 adc inc jmp mov and addr16 mov jmp arpl out push and (bad) jle fist jmp std (bad) jmp mov push mov iret mov and xlat loope sub cli inc cmp pop dec scas (bad) hlt sub or inc jo adc lods daa fisub shl dec call idivl mov mov pop es and mov dec dec leave inc pop (bad) (bad) pop (bad) popf jge jg jo (bad) push cmp imul sub xor (bad) or in inc jbe add mov mov clc add push jmp jg fs jae jmp cwtl sub mov xchg orb popl push add push adc lret enter xchg xlat (bad) adc fnstsw xchg sub pop adc adc xorl out in ret lods dec adc dec enter test pop dec inc inc add jb outsl fmuls pop jns xchg (bad) jae out ja push mov sar mov pop inc aad adc loope sub cltd or outsl repz lds shl subl fsubr push outsl mov adc push adc add orb std jbe out lcall ret dec idivl and aad add nop add xlat push repnz fnop jmp adc js repz stos dec adc adc or stc mov dec add popa adc jg ret movsl xor std aas cmp and inc or add call shr inc popf xchg jle outsb add pop jmp and jmp leave xchg dec and add jne sub sub mov sub pop add push shlb icebp es push loop jmp dec (bad) and sbb mov sub xchg test adc sub idivl pop aaa das dec fucomi scas xchg out pop sub cli push adc ja icebp pop insb sub push push pop pop push sub pop popa pop add or mov pop pop clc fcoml stos mov test inc nop arpl and test mov pop add xchg hlt cmp and popf lods mov pop test mov subb jne adc inc push jnp test leave push add in cmp pop mov inc mov repnz xor jmp push scas addr16 jmp ficoml jg add mov or pop xchg std push pop loopne out cmovns loope test cmp icebp repz (bad) mov outsl (bad) jmp (bad) pop push sbb gs cli test pop jg data16 jo jg and clc mov bound mov sarb popf xchg adc lods mov or sti mov pop shl mov xor push push cwtl jge add xor add jg pop add push cmp dec jnp das pop aam (bad) mov dec mov or add neg adc add pop dec mov push outsl xchg lcall leave inc pop mov rcr and out fsts (bad) dec xchg dec out dec inc std (bad) lds mov or pop in inc push jns cmpb jle jmp xchg adc or or movsl movsb add jno in mov inc add push mov push inc mov js push add lcall and dec add rorl lret out clc cli add loopne or ja add push sarb fistp outsb push xchg add sarl sub xchg cmp inc xchg lcall sub inc scas sub out xlat push pop mov decb pop jo add (bad) lea dec xor sbb mov int adc cld pop push adc sbb jl jae shrl push int loopne js adc (bad) negl mov jmp mov idivl push aaa inc ret xchg or push js pop mov cmpsl imul ficoml and and pop popf test cs scas mov cmovnp stos xor mov or lret push xchg nop or xchg sti xchg push add rclb das leave mov (bad) dec and movsl jge inc xchg and xor push lahf pop popa push add sbb aad mov add mov rolb xorl dec push in cmp mov das out add mov xchg sbb int jl movsb lock dec xchg cmpsl add or cmp iret jnp cwtl (bad) into push cmovbe insb mov jp lret jg pushf aas sbb int xor cmp or dec ja rcrb add jb add (bad) icebp incl lret pop in aas inc sub jle sbb (bad) cli sub ss das pop cld pop divb sub inc xchg or test (bad) icebp add js jge dec xchg in ljmp push fsubl or push es sar inc mov cs icebp pusha (bad) add popa mov or mov jl push insb mov inc or fistpll shll and or or test pop inc mov iret push xchg hlt xchg std adc pop adc pop xchg adc cmp loopne mov shrl push aas and mov adc jge add dec scas jecxz movsl add mov sbb cmovo test shr or add dec or push jmp arpl mov adc subl push jae inc add pop add xor mov std add iret fldt notb adc xchg sbb in add cmp imul jno dec (bad) sahf dec jl pop data16 insl or outsl xor xchg dec adc sbb popa jl and aaa fs push xor ficoml bnd mov cwtl shrb cltd dec fwait (bad) mov jl icebp pminsw dec testl sub fidivr sbb repz add sub dec in xchg push mov xlat mov stc sub and pusha inc sub aaa movsl mov mov sbb jg mov inc and xchg dec cmpb mov popf inc leave add js icebp push jne adc xlat rorb add push mov ret (bad) push ja xchg ret (bad) lahf lea xchg dec int xor jae mov enter mov rclb dec jecxz add mov cmc inc insb incl jge push hlt pop out xchg xchg outsl leave cmpsl mov fisttpll adc aad push and (bad) imul std pushf (bad) cmc inc inc sbb out ds sbb cmpb sub jno adc loope popa pop push push lret or std cmp add mov inc push shl repnz idivl iret ss loop pop (bad) jb add inc sbb pop add sbb mov mov int3 jbe in push push mov scas cli test mov jg mov xchg in ret mov jmp jecxz xchg scas cli or add out xchg adc and xchg jmp rorb mov (bad) cmp add xor dec mov lret inc push push test mov addb loope scas push mov popf popa lods pop icebp push lods ja xchg and mov or adc into jmp lret mulb adc jne inc pop cld and add dec in jg call das (bad) (bad) daa adc mov int push push leave fdivrp push mov add xchg push pop mov mov xor pop mov cltd pop lret ds iret mov lret test hlt and sar (bad) pop push pusha adc movsb mov enter rorb aaa lea xor push inc mov jge cmp and jle adc push cltd aad xor mov cmp add add or add pop xchg add loop loopne sub cmp xor sbb imul or pop mov fwait loopne push mov add dec mov enter dec repz sar dec dec xor loop and mov jge xchg push push xor hlt pop push add mov inc add add loope inc or cli repnz dec jp pop sub xor jle mov subb mov cli ret or ret out ds iret inc pop cmp stos repnz lahf lret arpl push cmc xchg enter pop and sub inc xor call push nop lods pop xchg xor wrmsr gs dec jnp inc pop mov sub fbstp jno pop jge cltd add je jb mov cmp das push mov or ret mov and lods std shrl cmp mov (bad) movsb ret mov and sbb je pop clc hlt jl add mov jecxz (bad) jmp push jle test xchg test mov ror scas into test mov or das inc icebp addl sbb (bad) cmp mov xchg jbe scas sub stc pop pop inc pop adc imul stos arpl movsl sbb sbb scas addr16 test mov int inc or or imul adc sbbb sbb mov xor cli or sub add inc sbb push imul rol cld add daa push insl dec push jb add jne mov dec sbb dec scas inc mov jo sbb icebp cmpsl pop and and cli push add pop inc test mov xor add lahf shll add addb add mov push push sti sub add mov mov add push (bad) negb add nop cmp or mov (bad) lea loope dec adc push sub and insb xchg ja imul push ret pop add add daa add testl xor ret adc inc push ret add nop pop sub test and xor mov pusha xchg cmp popa or ficom ds clc xchg jnp rclb adc mov test mov add xor adc fsubl iret movsl call into rorl xchg das iret jl loopne dec lcall jns popf add xchg add gs mov mov addb sti sbb pop or pop scas add adc pusha out mov add xchg sahf out hlt xchg in mov xchg daa inc stc sbb mov ljmp and cbtw hlt scas xor pop and sub add jp adc or mov mov addr16 rorb adc fsubrs imul ret sub mov xor xchg dec das sub and xchg mov or add sti mov test mov out repnz add (bad) icebp adc xchg xor ret psrld hlt push je add stos icebp sbb cmp sub add js mov ja or addr16 mov xorb add xchg fpatan rol and stos arpl jle in test or (bad) rorb out int lock mov sbb lea mov shr divl loope mov mov xor cwtl adc roll movsb or loop fdiv xchg cmp adcb push xchg jb add sti clc fldt push push dec shll stos sub inc xor lahf cmp xor ret push xor add aad xchg enter add sub cltd cmp pop sbb repz push rorb ja out push loopne movb icebp cltd mov imul jns loope popl add repz js (bad) addr16 sub icebp adc loopne mov add xchg pop lea in sbb int3 mov push and inc xor xor pop (bad) lods pop aam cmc addr16 sub outsl push pusha or xor pusha add daa dec or clc ds pop pop dec xor dec fdivrs test xchg add jg fcmovnbe xchg lea ss bswap movsb xchg (bad) mov sbb out mov gs and pop pop call xchg adc add add ss and ffree or add lea jmp add cld fcoml sub mov addr16 push sbb out push aam jmp xchg enter in push sbb fcomi pop data16 gs mov pop imull and enter inc xor pop adc out call loopne,pt (bad) addr16 mov loopne lea or pop orb sbb scas int3 addr16 cmp cwtl sub ret pop push dec adc push mov add xchg outsl icebp xchg xchg add (bad) push stc mov pop or dec inc ret mov jp adc dec add cwtl imul sbb mov jmp out insl pop add and icebp les adc sti (bad) lock jecxz sbb out das jo sbb rolb gs rorb adc ret pop add pop push jmp sub sub adc faddl mov into cmpsb scas stos mov or data16 clc rcrl and fwait hlt icebp and jo inc or (bad) mov adc out nop push dec or pop pop cltd push inc icebp addr16 mov and (bad) and add pusha cmp popa mov mov inc (bad) xor jl pop mov and (bad) fsubl jl (bad) adc add or xchg xor jmp xor xchg and jmp dec pop mov pusha add mov enter out mov icebp int3 dec adc sub add jne (bad) mov inc add and sub or movsb cmp ret outsb ret pop or pop lock mov mov cmpsl call push dec pop cld add ljmp or (bad) aaa andb cmp cld pop shl stc out and mov pop jg add (bad) dec lock push ljmp add dec or shrb push or xor push jmp mov jo mov xlat popf adc push adc cmp push xor aaa (bad) xor xrelease inc xchg addb inc mov divb dec add ljmp fs lahf mov ss scas repz push dec add bound inc mov dec sub push inc int aam cwtl sti shll out loope dec jecxz lea and pop test test cwtl mov jmp inc dec jge icebp enter int3 sbb inc sub pop shl add add or pop inc or dec (bad) adc jecxz int3 mov fwait xchg ret mov add cmp cmp sbb cmp add stos rep dec or adc dec popf adcl xchg addr16 fs ret loope mov aam xchg xor inc xor xor mov mov pusha push pop inc js or add rol push aaa psrlw repz std popl pop lret fild mulb orl mov mov pop call pop adc call mov pcmpeqb mov addr16 xor js sbb gs cld daa js xchg (bad) xlat mov movsl loopne lcall xor sbb pushf inc cwtl in in xor mov hlt xchg mov addr16 in xchg mov lcall clc aad or adc int sbb pop dec clc xor xchg aam adc or test leave je cmp mov adc cmp call clc aam add mov push mov test adc (bad) mov insb add lods push mov aad adc inc lock call movsl jne mov adc nop push leave xor xchg sub pop xor js sub push shlb ret stc jno cmp aad push loop adc addr16 sub cmp add callw scas or add fsubs mov dec jmp pop push jo out test and mov ja add (bad) xor and loope ljmp sbb sub dec push inc pop jns loopne jle (bad) push sub mov mov xor arpl ljmp jmp mov (bad) incb push xor loope outsb mov popl mov push enter (bad) jo fdivrl and mov adc lea pop test cld int3 cmp and and popl sbb mov jl sbb xchg pop adc les test inc aad sub adc out js call mov jns and lea or xchg test cwtl arpl and adcb xchg icebp sub add push mov dec inc mov addr16 or (bad) je xor xlat ljmp clc dec adc push sarb lock sar dec lea xor je movsl rolb out add call and xchg cmpl inc or xor movsl mov cmp in test dec je mov xchg add imul dec inc je dec les stos loope cmp and add xor (bad) fwait aam mov ljmp cmp dec or mov rorb mov or pop xchg sbb pop adc sbb add imul enter scas movsl nop push cmp add lock inc clc rorb dec les loope add xor sub xchg aas test mov mov mov sbb out mov sub les or test mov jo sbb adc ja sar add cmpsb inc (bad) push inc in fdivl pusha mov jecxz and lock cmp mov mov sti out addr16 ss call jno pop jmp sub fyl2x daa xchg pop pop sbb ror xchg popf and adc into or adc mov cmp les xor movsl inc popa mov mov sbbl and jne push xor pop sub lahf fstps sbb cwtl xor mov aam pop xor push and js add out jns loope xchg mov and xchg add push dec mov rorl mov dec ret dec mov mov jp popa add movsl pop loope inc or loopne inc pusha decl mov cmp fsubl inc inc lock ja dec arpl adc pusha adc add dec pusha in fwait add push jmp inc nop (bad) in call cli call add jmp dec add mov rcrl and add mov push sub add dec sarb jmp add repnz and je fxch mov dec push js in out xlat xchg sbbl or and fcomi mov (bad) xor mov rorb shrb js inc popa xchg mov cli sub cld add mov lods icebp out pop rclb xchg jo xchg jne pop cmp aas xlat mov sub mov (bad) or add test mov fwait xor push lahf jns cmp in hlt push add and (bad) rep shrb ljmp add mov mov (bad) jl fisubrl in ss jb jo mov stos inc ljmpw aad lock push and add or mov std (bad) nop sub in pop jle cwtl or sub stos stc jge adc popf pop push dec pusha mov pop fsts or jne bound pop add sub lock (bad) and dec mov fimull sbb pop xor addl cmp jle jge add hlt loopne xchg adc add insl cmp das sub mov adc xchg cmp and and imul or aaa inc add inc sbb mov pusha dec add mov and cmpsb jmp rcll cltd shr dec ss xchg mov push inc nop inc jg mov dec mov xor cmp rclb das (bad) (bad) xor xor lods adc idivl add (bad) jmp andl fdivs ficomp cmp adc lock or adc jp scas pushf or add cwtl jmp pop jbe mov hlt lret cmpsb push sbb data16 add push adc push lods test lret jmp pop outsb or cld rorl jae sub fdivs add lods jae pusha loopne,pn stc push int3 test xor mov push mov pop dec or inc jmp push mov js scas out add cmpsl jnp fisubr xchg (bad) mov sti pop stos mov add or (bad) mov test or xchg and fadds inc jmp lret outsb add (bad) mov jle sub dec mov test int3 aam pop iret pop fistpl lock xlat mov xorl orb add cltd nop pushf pop mov xchg pslld and xor cmp mov push mov dec and lock dec pop jo inc fwait cwtl out je testl out mov sti (bad) push out pop jge dec add aaa xor sbb movsl scas inc cwtl push push scas xchg test sub xor addb xchg add and popf and stc xchg call xor cmp pop cli cld mov leave dec mov aad dec ds scas mov je sub stos fldt fldcw jle insl sub int3 test push push push imul mov aas inc pop test pop push pop add lock repz xchg fmull and loopne dec out jb adc add scas pop arpl add add call dec lods xor push and xchg xchg cmc and jmp add cli je or mov jae cmp in inc inc ret bound cmp or sub add sbb lret adc insb jae repz (bad) cmpsl inc addl cwtl loopne and mov repnz imul mov shr dec and mov loopne jl sub movsb pop fiaddl inc enter cmp nop or f2xm1 nop lock dec or mov mov das js rorb xor cmp push les loopne pop add push and dec sub mov rclb ljmp inc mov add adc push mov adc mov jno ds add aas rclb and sbb rolb pop stc push xor loope inc addl xor cmp adc push xchg and cmp repnz scas push xchg mulb push lret cwtl fisub jne bound dec and dec jnp in stos add jecxz jp in cmp and mov add (bad) jno or test scas xor add and sub imul add lea cmp or inc aam add inc jo lock sub pusha dec jne sahf adc in repz rcrb daa add dec sbbl les jne je es adc push and push cs sbbl testl or cmpsb shrb sbb mov or fildll adc push fs in xchg pop push (bad) mov pcmpgtw maxps stos add or test clc dec paddw lock mov add lahf sbb add cs push add mov cltd das inc stc imul loopne lret stos js xchg xlat mov fmuls sub sbb out lods cmp les shlb jo add xlat in or and jae dec test xor sarb sbb out adc mov js adc mov add sbb xor add cmp or or mov lret test push dec add sub push dec and leave sub pop or add pusha dec lret add mov cmc jno je adcl adc push add mov and fsubs (bad) test sub shrb fdivrs sub cmp sub xacquire fcom nop sub dec lock adc add add push fisttpll (bad) into pop imul loop lcall adc hlt mov mov xchg js add mov dec push dec in repz jae lods jo dec cli cmp (bad) xor call push inc inc and (bad) jecxz pop mov xchg add sub dec xchg inc lods movsl nop mov (bad) aad and mov add adc add adc pop add fiaddl mov push int jnp (bad) insb add sahf fyl2xp1 mov mov and jecxz adc jae inc add mov mov mov pop xor add mov loopne xchg pop and sub cmp arpl mov cmc pusha je mov dec jno sub add cmp cmp mov cltd test push or in and add or mov mull jo jg xor xor mov add dec sbb addr16 add insl loopne sbbl pop xor sar lods scas sbb ss les xor push cwtl dec push aam loope mov inc adc and fadds dec xchg push add adc rorl sbb mov add mov pop (bad) popl aad call outsl pop mov loopne,pt mov iret sbb and je xor test lahf add jnp and popf mov pusha mov push or adc mov add ljmp dec ret (bad) out lods pop cwtl add scas insb dec daa sub repnz pop movsl xchg sub push mov sub cmpsb sbb repz mov adcb xor pop and shll or fisubrl lods add pop scas push pop ja aas xchg and cmp xor add fadds dec dec and sub mov jbe cltd add xor sub daa (bad) test or push inc les xchg jl pop add push sbb mov push test and push (bad) test scas mov std (bad) mov out js pop mov scas outsl mov cmp inc inc or adc aas out addb or xor into mov test xchg shlb nop push add das in push (bad) ljmp sahf cltd pop test push fnstenv fistp add push xor xchg xchg shrl cltd pusha and dec mov sbb sahf add sub cmp jae,pn sub xchg lods sub sbb xor rolb pop (bad) or arpl push pop add jecxz push or mov cmpl ss add jne rcrb sub clc xchg aas fwait cmc mov push fcos jbe add insb xor adc jb xor cmp dec mov cmp or hlt inc add mov cmpsl addr16 leave les dec pushf cmp jmp test adc pusha popa sbb lock xlat push jno or dec (bad) add les jb and ficoml mov in clc or lods add or mov and (bad) xchg mov dec xor cmp rol stc pushf mov js push nop ror push mov mov xor incl sub scas adc xchg mov (bad) jg adc cs enter daa mov push push dec xor es in xorl pop js dec add and and sbb loopne xchg inc ss inc mov sub call (bad) jbe scas cwtl jg adc sbb adc test dec inc or lret xor mov and mov push (bad) or mov lds add push pop dec mov inc or mov mov cwtl (bad) daa ss je (bad) xor mov (bad) orl add sahf mov xchg jae cs pop push cli je xor mov out pop add or jne repnz dec jae rclb dec mov add std dec cmc add test xor cmpl and (bad) cmc mov add test push adc test mov js push jae cltd jl mov in arpl cmp fcmovne fsubs insb loopne leave ljmp insl cmp mov or js lock jl pusha mov mov out xor lahf xchg repnz aaa (bad) mov outsb push add jecxz or dec or add pop cmpsl and loopne dec and push hlt xchg sub rcll aam aad outsb icebp lock dec pop dec fcoml xor out or push aad test or push dec (bad) xchg mov mov inc (bad) into dec mov cmovl mov cmp xor out add popa addr16 pop insb dec jns or push sti jae mov add xchg test mov dec dec or data16 dec movsb cwtl pushf enter sbb or adc cli insl or adc mov sub inc prefetch in jne adcl push push mov sub pop jae jp (bad) sti cmp and jmp pop fs xor inc inc cmc xor or add pop cmpsl add fnstcw icebp repz mov lret xor pop mov or andl add outsb hlt scas out faddl mov mov pop pushf add lret cmp shll aam xchg dec cmp xor and data16 sbb cmp out jnp cmpsb push jg nop mov andl or dec mov rclb enter imul add pushf and mov fwait jne dec dec push push fsubs push je addb add jo adc or repnz aam inc cwtl incb prefetcht2 mov lds data16 int3 addr16 xor inc or cli mov push (bad) fild mov cmpsb pusha test cmp mov xchg andb sbb adc test sbb (bad) xchg adc add sub sbb cmp icebp add aam mov js adc int3 dec cmpsb loopne fdivrp ret add push (bad) sub pcmpeqw xchg aaa mov or and adc aas std insl pop stc mov pop fs rolb pop jne sub fmuls add call fs mov std mov adc frstor dec inc push pop jp adc adc std hlt add aas in jle (bad) or mov js push sbb add push cmp (bad) push aas je in mov aad pop cmp fldt and sbb push aad push add out stos push in (bad) add stc ret or std mov in mov mov insb and lods xor jmp sbb mov xor test aam cmp push (bad) addr16 gs adc and test xchg shrb push ret loopne (bad) xchg mov and jecxz adc jge push cmp clc mov mov ljmp in add jge sbb push and adc inc les mov jmp jmp add jp add cli stos aad out add popf xor cwtl inc lret add out inc mov push push xorb push loopne push fisttp incl push in sbb add loop ds hlt push rol inc std fs adc js addr16 subl daa jno adc icebp cmp adc push add shrb mov repz test aad or push sbb push adc jbe inc push mov cwtl sbb adc jmp hlt dec pop lock push subl push in ds xor fstps nop sarb fisubl icebp inc dec ret mov mov popf sub pop dec iret add les mov stos scas aad push and addb add dec (bad) mov std cmp lds call mov cmp push xorl bound outsl test xchg lock mov adc sbb outsb or stc inc hlt inc jnp xor sbb jne add cmp aad add aaa test mov test xchg and fs add daa sbb test fdivl add cmp jmp aad inc fdivl std outsl sbb cmp lret sub out adcl pop subl or idivb jbe jb pusha rcrb or inc (bad) lret mov adc sub adc and out sub add cmp imul jl icebp inc jmp fimull mov std xchg mov loopne and push xlat inc fldcw icebp mov jecxz pushf lods inc loopne mov sbb mov and add loope lcall jge subl jl push rcl aad dec (bad) or subl jecxz cmp ficomp jge rcrl movsl es call cmpsb ret shll cs push movsb push jle lcall notb sbb test inc pop mov mov sbb and mov mov loop xor add leave sbb fistpl add clc inc sarb and push roll iret mov cmp sbb mov shl repz dec mov jecxz push jle push mov incl jg mov (bad) push push jne cmp xchg cmp les mov inc xchg add pushf dec test dec fmull mov das adc add (bad) push sarl cmp popf push lock and xor add lahf pusha cltd inc or ret scas cmp pop dec add xchg add pop (bad) in pop stc sbb sub dec and xchg pop mov mov imul call nop adc test outsb add pop sbb mov in add cltd jge arpl rclb pop lock push push das push and hlt adc lret ljmp add aas inc test fcomps (bad) out add mov pop bound cmpsb and cmp xchg jg cmp mov (bad) stos xchg test out idivb or add aaa mov pushf inc imul pop push add dec and fidiv insl add subb lret dec in out aas add bswap push fisubrl loope jl movsb add aad jge push ret or sbb cmpsb add int3 popf dec loope push (bad) xor test inc pop ret mov hlt mov push add in dec cmpsb bound and in stos inc mov push es jo imul repz jae sub inc or scas lcall xor sub xchg and (bad) push jecxz ja aad jl addl fdiv fsub inc or sbb call scas or repz push dec sbb outsb pop and aad les jle sbb cmp push adc dec lcall lods nop adc (bad) jecxz fs cmp dec push lea test es iret push add fildl xor add mov jns or push jb mov stos in pop in xor xor call dec mov mov push sahf pusha fsubs mov in mov push push mov lock cmc out add cmp repnz leave popf jae std fstl cmc ss add mov push and sub repnz add std xor push test push es push xor sub lds cmpsb push add push jbe call sub add push sbb outsb rorb jle test call dec sbb mov lods xchg dec adc dec in jg add dec sub shrb push and les mov xchg (bad) loopne jb xor pop loop xor enter popa les test dec adc std mov jge je xchg cld popa xor push stos fist mov pushf xor cmpl out (bad) aad in sbbb xchg xchg jo push sub inc sub and dec and fcompl xchg stc incb nop mov test enter cmp cmp fwait xor sha1nexte adc push cmp in mov or out leave mov stc pop mov outsb and and mov ljmp inc fdivrs mov dec sub push adc lods fisubrl xchg ret aad mov jl shlb repnz std and add mov scas je movsb xorb mov inc dec dec ret clc add cld lods ds aas sbb add mov andl test or test int3 data16 pop loopne sbb sub lods cwtl repnz mov and adc subl movsb inc repz lea sub dec mov and lock sub sahf popf insb cmp adc inc push cmpl cmp in cwtl xorl add out nop inc cmp mov movsb loope mov jge mov dec stos sbb popa cmpsl mov imul lods sub add sti stos ljmp andl jge mov js cld (bad) aas sub dec adc adc rclb mov or (bad) dec xor sbb fmuls inc test adc aad fistpl and outsb cmp jmp sub popf pop cmp push gs add fcomip lret cmp das cs in and test xchg jl lods fcomps add jle and push in cmp aad push loopne jae cmp and call jo fcoml sahf lods iret js inc leave mov std push pop in sbb pushf add mov popf push xor and aaa (bad) or mov cmpsl int loop dec enter ljmp and fstpl cs je sbb push jne add xchg in movd repz rcll enter mov in mov pop in lods add push addr16 insl loope scas and inc and ret mov xchg rcl xlat cmp xor popl cmp subl popa lret daa pop mov out mov fisubl subb inc add leave mov aam (bad) repnz test loop push jecxz lret (bad) fwait jg cwtl dec sub jo imul adc xchg call sub mov fs nop loopne cs out aad in add xchg cmp jno xchg dec inc dec in jnp adc rclb popa movsb bound ljmp outsb jecxz rcll sbb add lret mov lahf jo adc fimul xchg rolb fstps and inc insl je cmp push pop enter imull (bad) js inc dec rcl or arpl add shr ss jns pop inc add repz jmp dec lods in (bad) mov lahf adc popf jg pop sti insb add jbe xor imul popw sbb dec and dec adc insl cmc add push jae jmp jo andl adc jo xor insl and or lock mov inc and stos add xor (bad) in lret ljmp inc js push cmpb mov xchg xor shlb dec add cmp adc orb or mov popa nop mov mov test jmp bound pushf sub int3 dec push add (bad) out rolb xor adc loop pop pop dec and pushf cli inc or cmp arpl mov cmp add hlt and nop inc mov or sub push lds scas daa ud1 xchg and sbb mov inc shrl pusha inc test jbe push ret push adc push mov ds push sti lcall xor add xor adc pop mov mov out (bad) hlt int3 jo or out add adc cmp stc call xor movsl jne add mov jb gs sbb dec test aam add aad cmpl xor shlb dec ret jnp add or testl cltd add add clc xor xchg jae xchg cld sti lahf cmovo add mov add mov add enter jo sbb pop stos adcb add push jl mov mov lods sub sub jno pop pusha add push data16 stos negb lds add and mov pushf inc adc test and pusha aas and jo mov pushf mov pop push push cltd mov mov adc dec jo add adcl sbb roll add nop lds nop fs xchg dec xchg adcl mov push adc cmp ficompl lock adc mov mov popa imul mov jp test int mov rorl ret cmpb test or pusha std pop loopne and out xor int3 (bad) mov push add add addr16 pushf xchg call (bad) add (bad) sti lock cmc adc inc mov adc sbb sarb mov jle or cmp adc adc mov lcall or andb xor (bad) push mov push icebp mov cmp pusha fcompl cmp add stos pop adc fiaddl jnp and mov in jl mov movsl sbb xchg loopne pop ret (bad) jbe imul (bad) lret push dec inc enter jge mul dec subb sbb xchg popf pop add fsubr push outsb mov push adc push in or xor dec jno add cs push or dec add mov mov cmp push js aaa dec mov sub enter add bound loopne popf mov pop pop sub enter pop idiv cmp hlt mov push add lcall iret xchg (bad) stc sbb pop push pop xchg ljmp iret or pop inc inc pop xchg dec cmp adc punpcklbw popa sbb and test daa pushf xor loopne add xor add push int dec cmp loope out js test hlt imul fimul jo pushf ja ljmp fistl and jp add movsb mov sbb add lahf mov mov adc sub cmp xor sbb mov or les add lret xchg sbb out loope xchg inc (bad) push hlt pop xor movsb add or sub les add xchg mov or test add and adc or (bad) testb push nop sbb add mov ss inc jbe add mov or in addr16 jns push pop call xor add or pushf mov pushf sub sbb fcomps test add sub xchg push or int3 dec popl and mov sbbb or push pop sub push adc pop fdivrl mov dec jmp sub int rcl add pusha (bad) rol es adc aaa mov push cwtl movsb add loopne cmp enter or lahf mov out cli ljmp daa pusha sub sub fstl je or lds outsl test adc sub pushf adc dec rcll add int mov in xchg rcll push inc insb (bad) mulb mov add sub mov dec mov jbe bound mov inc pop adc mov test movsb ret fsubp pusha in mov out addl xchg xor mov ret cmp in mov mov adc movsb xor add loop mov and push push nop inc push movsb lahf popa repz jo jle aam clc cmp or cwtl or mov in pop mov mov in mov popf cld add push pop in bound mov add cltd xchg (bad) xchg pop std add in jo sbb es fildl nop ret mov js add or out mov jo movsb or xorb mov cltd data16 repnz adc lea xor mov mov inc xchg and aad pusha pushf xor pushf ss subb or mov ret int3 in mov jp lds out loopne stos jp add ja adc cltd push into and hlt in lcall lods sub outsl and mov xor mov mov mov int imul mov adc push ret add jp mov mov iret add inc xchg mov (bad) sub or add add iret in mov pop fsubr arpl dec dec mov sub shr popf mov sub sbb loopne pushf lock test js and or adc cmp cmp or pusha lods dec lcall push stos cmpsb sbb or and sbb push sub push push mov push xor jle clc xor adc push sarb outsb sub test cmpsl jmp cmp push jnp add cmc insl stc mov sub add arpl jae dec cmp jbe xlat push add cmpl and jmp mov adc pop iret mov and fwait cmp mov mov mov mov shll xor mov xchg sub out add rclb nop lahf xchg add mov pop scas xchg aam sar outsl or xor and (bad) hlt adc popf inc call mov sbb sub sbb inc stc add lahf orl lods add adc faddl jo cmp iret mov or xchg add clc jbe cmp xchg push jg icebp push xchg or push dec cmp mov mov nop xor xchg aaa inc lcall aas add xor rorb js loop or cwtl push or sub mov int3 sub jb shlb xor adcb les lea or pop scas mov in mov sub pop xchg cmp stos out sub sub push fsubrs sub add mov and cmp adc in inc les push push sub cmp les and std call adc push dec faddl inc sbb inc pushf xor mov out pusha push int enter roll and clc test xchg jo add lods inc mov dec js mov pop scas push dec (bad) add xchg and adc add stos fsts dec test scas xchg dec orb rolb mov call mov and pop insb test in int mov adc jmp pop inc add and in pop daa jp pusha and adc sub notl or cmpsl test mov cmp pop arpl xchg dec xchg mov push js outsb add mov inc xchg outsl pop sbb pop cmc xlat into xchg xchg and nop dec mov scas or xchg adc mov test ret dec loopne adc pusha xor push mov mov mov (bad) imul dec dec clc add test sti test popf jl sub dec les pusha or inc fsubp (bad) add mov jle add cwtl xchg inc xor sbb dec in add and mov inc xchg (bad) xor les movsb add andb add outsb imul scas cmc xor mov mov add xchg sbb jecxz adc sbb fsubrl xorl mov nop add addr16 jl ja pop or popl rclb shl cmp jbe add fnstcw dec (bad) stc daa add mov lea in push mov (bad) mov loope and scas dec add ja test sar dec xchg push add loop mov inc mov icebp mov adc arpl and and and bound cwtl arpl mov repz xchg loop push push adc test push cmp shlb dec imul call inc hlt popa inc cmp adc inc pop pop add mov dec xor fldcw mov add mov adc rorb cmp rcrb adc je ret or inc loopne mov dec scas xor fcompl shrl pop jae js in out fcomps pop dec (bad) jb and hlt imul mov push scas xchg mov pusha mov clc cs dec popf mov mov repz movsl xchg inc dec and pushf pop sahf repz sarl xchg rolb pop push aaa pusha mov cmp shr mov ret outsl movsb popf repz push xor ret stc subb sub and shrb fstps cmp loope in mov ss adc jno mov add push xor mov cmpsl cmp jle mov mov xor mov add icebp mov inc pushf pop mov stc out jo dec ja mov push loopne pop jmp arpl test imul mov sub call mov sub imulb adc mov mov push dec xchg mov neg pop insb es xor add xor mov inc and sbb fwait data16 mov dec movsb jae mov jb sbb sub icebp aam mov sysenter cmpsb xor fs insb jne xchg mov dec ss mov xor shrl jle xchg push repnz xchg jmp enter xor cmp mov test call int3 pop rorl arpl push aam pop inc sbb inc fs fidiv push pushf or leave add dec fdivl sub hlt add cmp pusha add adc add jns mov mov push in int3 mov or jl dec add pop pop std sbb inc (bad) mov cmp sub mov (bad) repz jecxz cld jns mov adc cvtps2pi je mov (bad) xchg cmp sbb fnstenv dec jmp push lds mov rorb stos mov pop jg iret bound or mov mov test out scas mov pusha and loope pop adc xor movsb sbb hlt je push jmp sub jecxz or xor (bad) (bad) repz pop mov js test add mov pushf pusha pop sbb fsubr push iret or ds fwait mov xor andl ja xor aam xor mov fs sub jae xor adc adc roll push sbb pop xor adc inc lock pushf mov inc jmp or xor or push mov xchg mov movsb test enter daa loopne sub movsb cmove xor lcall xchg pop in lcall clc inc bound xor (bad) adc fdiv mov xor jmp add pop sbb je cwtl ret mov repnz push hlt sub cmp out jne in incl les les into out push loope inc sub pop pop arpl pop mov popa push cmp (bad) notl push bound nop and js dec push cmp pushf jmp jo pop loop add pusha (bad) mov xchg push pop loopne rclb cwtl mov cwtl pop inc push jg push mov xor pop mov rorb and inc mov dec sti jo xor stos xorl movsl fimul pop add gs pusha push push and mov xor test (bad) add cmp mov mov add arpl scas push mov sti sub (bad) xchg pop pop push stc fs inc or or sbb dec lods pop jae loopne xchg jge push lea (bad) mov xor nop aad jbe js cs mov adc push and push mov int add out cmc push or out pushf adcb cmp pop jo mov add cmp sbb lret add push into iret or inc clc inc push out arpl jmp ss and hlt push mov xchg or and and add mov hlt lods add in pop int call mov inc les xor jae push test jmp inc push call in push sub out and orb daa mov fidivrl repnz mov mov dec nop jp sbb imul mov cwtl movsb dec push int3 orl xor inc mov (bad) cld sub icebp ret stos and fidivr push xor dec push mov mov popa pop mov sub loopne (bad) je dec mov stc pop mov xchg in fimul cmp add sub push sub pop sbb insl aaa add xor test (bad) xor cmp mov xchg and inc or pop pop cmp or mov mov cltd outsb call pop into cmp (bad) int adc je,pt ds pop mov or stos or inc mov push cld rclb and sbb xor (bad) cmp jge jo out pop cs ret sub push loope repz (bad) scas jle add jecxz (bad) xor push lods mov loopne adc fbld or loopne or mov push add mov scas out dec adc inc and xor or orb sub or mov mov in repnz push pop lret int rol or movsb mov lcall or popa out or rorb cmp mov xor int3 (bad) jbe adc jae inc add es mov or rcrl adc mov mov lock gs adc cld mov das pushf add inc mov imul pop adc mov dec cmc daa shlb mov xor mov xchg insb daa cmp or mov push xchg rolb jmp sub aaa bound xor sub rclb inc test (bad) xor pusha dec into ret sbb pop loop dec or xchg mov mov movsb test orb rol or adc xchg add test shrb js dec xor push cs push adc sub mov hlt int jo sbb or xor repnz mov fidivl adc test inc cmp add xchg mull ljmp xor jns xchg nop fdivs shlb and pop in or add lret or and outsl xchg js pop mov sahf hlt add inc adc mov mov sub test mov inc and cwtl and add lcall lods sub pop mov inc add jo out xor stc int3 call add pop push adc pusha lods and jo push and outsb jl rcr sbb (bad) (bad) in add push or sbb or jno fwait mov pushf xchg clc loope mov mov arpl cmc cmp (bad) add hlt dec cmp xor enter andb lcall je (bad) int popw add sbb mov arpl pop mov aas out sbb sbb jo xchg je push add add stos sub jg inc imul fisubl push dec in inc cmp fs out adc and sub cmp mov jecxz (bad) cwtl arpl cmc pop add jnp xor dec aas roll mov arpl add aam fdivrl (bad) mov sbb xchg stc xor add add aad mov xor sarb pusha adc lods daa aaa sub cmp add outsb xor orl loope ret das add adcb out (bad) movsl add mov pushf pop pop and lcall std mov fcmovnbe popf jo xchg or cmpsl sbb jnp loopne adcb nop int3 xlat jb pop and mov mov aam andb mov add scas cmc mov cmp sub mov test std pop mov in adc add xor daa in jg mov or icebp and dec stos adc inc je push mov jmp pop jmp pop faddl fcmovne rorl push inc add jnp movsb xorb cmc mov lods pop xchg pop mov dec movsb push mov mov push xor rorb xorb push dec leave push gs flds out xchg sub jecxz (bad) mov mov test jae push xlat inc ds popa mov (bad) sub xor mov test push popa call enter lcall cmpxchg popa ret jg mov inc adc xor mov loopne mov add dec pop add pusha sbb push loopne cmp ss mov sub add dec mov fiadd (bad) (bad) rol test sub add jne or stos orb sbb and (bad) js ds push jg mov test mov push icebp addr16 fst pop dec dec mov and pushf xchg sahf pop xor push xchg (bad) pusha mov out out arpl pop and test cmp add lea fnstsw cwtl and dec pop hlt sbb xor inc jnp stos lahf pop nop xchg jp cmp stos inc or adcb xchg xor xor cmp xchg sub or aaa aas int add adc adc mov add jns xlat or inc or mov sbb cmp xor cs sub str push add icebp (bad) les mov iret enter pushf addb mov xor stos rorb mov push es imul dec test fdiv lods xchg pop push cmpsb testl cwtl lds jge push add cmp or cmp push or lahf data16 mov add (bad) daa inc push cmp pop scas les push add adc push xor add push pop (bad) pop xlat enter add test into and fcoms aad push or xchg out je ljmp mov pop xchg aad sub mov adc test inc nop leave (bad) ss jns jl cmpsb rclb dec jg xchg (bad) sub insb mov mov adc adc xchg and movsb imul mov dec imul out mov cli or xchg jle call xor push in dec push add ss icebp loopne dec mov pop sti xchg lds inc in cmp inc add add cld daa mull jns jl je sbb popa dec movntq inc cld pop jnp unpckhps xchg loope pop jbe jp or inc rorb mov out adc mov sub mov push xor fwait mov mov lret jb enter dec cmp repz push xchg cmc outsl jno loope sub sub lahf repnz and or lods popf ds jne mov and push dec mov subb cmc mov mov xchg dec adc pusha imull add dec xor mov loopne sub xchg mov add pushf mov sub add push dec add enter leave test idivb ljmp sbb add mov subl pusha pusha in sub cld add ja cmp popf nop mov rcl das aaa (bad) dec popa aam jbe push push mov sbb or shll sbb clc push imul pusha inc int3 divl js daa loop xchg lock popa push sarb pusha and stos or out mov repnz enter insb add mov sub test in inc mov jo cmp pop rolb lods push jno mov sub rclb add int arpl and daa cmp sbb dec out fwait or es mov inc mov (bad) xor sbb fmuls je xchg pusha aad lret cli dec add mov add jmp mov xor in scas dec lcall fdivrl je sar jl xchg hlt inc xchg jb sti pusha clc cmp je int3 into fwait mov mov js arpl push hlt bound lcall pop dec push or xor jb inc (bad) xor lret mov test shrl mov add xorl and jns push adc sbb je or or push inc dec cmpsl xor and (bad) push xchg push cmp subb gs mov mov mov xor mov mov loopne pop dec sub xorl mov dec lcall or mov pop scas sbb (bad) movsb hlt popf test pusha push mov mov test int test adc shl hlt mov cwtl add mov cld or inc sbb lcall or add pushf adc jae xacquire int3 add cmpsl leave adc add mov hlt mov test inc sub (bad) rcrl or pop ret aam subl test les bound idivb jge sub sti ja repnz pop nop mov xchg sub jle add shrb pushf add push incb mov sub jge xor push pop (bad) repz ss sub out loopne add loopne add lcall in adcb mov int3 inc mov nop adc or jmp cmp nop add or fyl2xp1 sti dec stos xor (bad) mov js pop adc or inc dec pushl push jge stc gs mov fstpl mov shlb cmp lods popf inc sub push cs xor dec (bad) mov int xor and sbb add xor fs shrb shlb adc and sbb shll xchg (bad) mov mov fsubs mov sub dec xor jo mov mov sub xchg xor les movsb and xor or and jns dec andl pop jle add nop repnz xchg scas mov xchg ror push mov mov ret rcr mov jne xchg cwtl loopne sbbb outsb cltd cmp xor sbb mov push add orl (bad) sti push rcrl inc and sub sbb (bad) in lcall cli loopne pop lods daa mov sbb lods jmp (bad) cmp jo stos mov dec outsl insb push test and in insb push (bad) jb jg mov sub mov push xchg ficoml push jp adc das add jnp mov pop jo nop xor wbinvd jl bound add push add sbb jo movl mov pop cmp mov movsl int les and lock sbb mov call int stos pop or cmp or out (bad) test xor sub jl mov jo pop mov mov loop dec jo fisttp mov xchg leavew pusha sahf adc loopne in sbbb (bad) mov inc cmp mov jnp (bad) push and iret xchg (bad) lock mov xchg add push add jbe add xchg or fst fcompl (bad) sub inc stos jo push jle cli fidivl adc push jmp jle notl loope iret add nop std push adc and sub xor add mov in mov or push pusha sub cwtl cld xor inc repz jp mov adc jl xor sarl outsl or nop ret imul adc add xor pop lret cmc lods lods sub (bad) cmp lahf sub dec es jg dec and ret mov imul loopne adc xor add or sbb or in aad iret push jmp dec je int3 xor pushf mov sub and and xchg pop add orl add testb push push test test cwtl cmp sub sahf and dec add aam inc or jo pop nop and mov std add push rep pop icebp sub out or (bad) xchg ret out les in mov mov lock dec dec sbb pusha dec mov lret aad add jb add mov out sub or pushf adc ja cmc jbe push xor add loopne xorb in dec push inc dec jp rorl movsb add out popa rclb inc push jne test lea lds scas outsl enter adc dec mov icebp sub sub jne push and push repnz pop push push adc dec mov testb and xor aaa sub jne cmp or inc mov jnp jl xor pop (bad) sbb ret lds jo jo mov iret loop fcom sbb pop test push or inc loopne mov cltd mov out inc pusha scas sbb mov ror rclb nop aam out les cmp and push clc ss out clc or sbb add dec aas xchg in ret jo or (bad) and call aas (bad) pop sbb jbe rol aaa pop dec sbb jnp adc loope jl adc (bad) mov cli push jo pop inc fimull push inc fwait xlat xchg pop nop loope cmp add inc cwtl cwtl jmp inc mov fdivl mov test ret and adc out pop or sarl (bad) mov cwtl mov mov jp mov pushf mov push xor inc ljmp in int3 test and dec fs or ficomp int xchg ja mov xchg or pop push xchg and mov and xchg xor xlat sbb aam and add mov mov mov and or hlt and push into out movsb shlb cmpsb orl ficomp xchg inc sar fimull mov adc fildl push leave insl call fwait or pop movsb js mov pop mov jmp movsb pop mov push add lock mov adc mov xchg mov jl js call adc hlt sbb aad xchg lcall sbb in pusha fisubrl or add fldenv lret xor pop xor (bad) dec adc push mov les rolb fmull jmp xchg or outsl dec jnp jl jmp push xor lcall push push adc bound enter add (bad) xor or dec je call or mov add sahf mov sbb fsubrs loopne mov loopne pop and push sbb andl jg lcall in jge add pop (bad) xor movsb movsb add sbb pop jo pusha aam ss push cltd loope add push jne lods lea iret fs add xchg adcb or add xchg in pop cmc fldenv xorb mov xchg and ss enter or xchg sub rclb andb adc int3 or mov ja push push sbb mov push mov cmp andl and xor or mov xchg aam psrlq pop sahf call shl (bad) inc add fucom cmpsl in lock daa sbb xor sbbb insb sbb (bad) xor enter sub nop out xchg and cmp repnz test sbb insb pop sti out pop enter aam xchg mov es stos enter in pop fnstsw mov add dec insl test test cmp daa js andl hlt mov fsts push mov xchg nop inc xchg and pop inc inc call rcrl sbb sbb (bad) jo mov sbb inc xor sarb xor inc roll or cmp mov xor fucomp and dec aas xchg pusha sub ds (bad) adc lods out xchg dec cld fcom xchg loopne or cmp add cmp jae mov fsubp mov nop clc mov bound or push dec bound pusha js push popa ds or ja or push cs es movsb push jb or jl rorb jno loopne jb add (bad) push and nop test adc mov dec mov test ror mov sub inc add fildll or push out and mov arpl inc xor fstpt pop xor adc mov xor into add xor ret xor mov in cltd xor add jb push aad jmp xor dec push xorl xchg mov faddl ds add icebp jae lods push aaa es adc add mov roll cli movsl out push and pop callw in cmp loopne lea add cmp scas lods mov pop subl and insb pop adc dec lret movsb jo and sbb or pop adc gs dec xchg es lods jp inc pop call and cli jl dec lahf pop inc rclb aad push mov cmp ja call dec (bad) stos add mov fcoms add loopne and inc rolb mov sbb std adc lret mov hlt add sbb or push dec (bad) mull push rcl lret inc jb sub lea dec (bad) in int3 pop xor xor mov ret cmp fs adc sbb out inc adc fnop in pusha in clc lods jb mov push sub imulb mov mov mov aam or mov sbb jmp jns cmp pop fldt dec dec pop lock imul (bad) insl or mov inc adc (bad) sbb negb and pop jle jmp cld push in jle and ret insb add pushf imul adc sbb pop sbb pop add rcr or bound sub mov jo dec rorb pop fldenv daa cs cli xor ljmp push das mov mov add aad cmp in push xchg inc idiv cmpsl (bad) xchg das pop pusha inc cmp push mov faddl (bad) mov add test lret jno,pt ret xor insl lea jo fsubrs call pop sub xor scas sub pop loopne aam outsb lahf and adc xor shl mov jle clc mov mov scas push xor adc sbb nop shrb sbb mov xor cmp push jno decl nop and or xchg pop inc (bad) fadds sbb lock push in or jge add pop mov (bad) aam or arpl call out adcb push (bad) mov or jae and hlt sbb cwtl push sbb dec xor cmc rolb mov add xchg mov and or or xor add sbb test mov lock ret push insb lds pop add andl cltd mov (bad) outsb pop insl dec sbb jo mov mov inc mov pop subb xchg pop shlb pop int3 pop add ljmp adc and xchg call repz xchg ret roll ret jae mov xor sti pop sub cwtl pusha outsb jb (bad) movsl mov hlt pop loop jbe xorb icebp rorb enter pushf dec push dec pop pushf js cltd inc pusha test add lret inc and pushf mov imul mov jo or arpl jle pop (bad) pop lret add cmp rcr lds add mov mov push mov mov dec pop mov shlb and dec je push adc push int3 mov cwtl enter cli imul add rorl andl or outsl jl xor and xchg mov loopne mov inc push pop imul out fcoms outsl push dec movsb and outsb fbld add xchg mov hlt cwtl xchg pop dec mov fdivrs push or xchg in adc dec je sti jl jmp sub mov xchg jo sti outsl cmpl jg sub jo cmpsl pop pushf into outsl into in adc mov xchg andl adc in loopne mov sub or add xchg xchg movsl repnz sarb jmp sbb andb mov ds leave add or inc nop inc xchg pop mov and shl cmpsl mov (bad) out addb pop or aaa pop pusha or popf xchg aas fxch adc push add adc call ss movq int3 jmp cs dec addb inc and aad gs add es (bad) jo push aas xchg xor push jb pop add arpl and and inc movsb insb js rolb jb loopne push mov mov ja loop fs or jge sldt or mov incb lock test popa pop sbb dec das out inc jle leave push sbb push mov dec in mov dec xor add or xchg andb add cwtl pop or hlt push hlt push mov sysenter xor push cmpb call xchg sub mov int3 add mov add push jns ret cmpsl test enter add andl incb int arpl sub cvtpi2ps shlb inc and inc loopne lock or and sbb clc imul js mov cmc mov xor mov add or push push shll pop cmp xchg pop mov xorb orb decb loopne ja jmp movb push rolb (bad) mov push rcrb xchg and js sbb and (bad) fsubr popf fmul jbe push les les fadd pop push adc enter mov out adc add pusha add pop ret movsl mov adc add mov pop loope (bad) mov pop cs xor rol add inc and pop fsubs inc ljmp nop add in fwait cmp nop adc mov call cmp sbb or cmp mov adc add add xor and ljmp mov cmp popa in es add sbb push sti adc popa add jmp mov in sub inc leave push add mov jmp pusha inc pop push dec fsubs out or cmp ja sbb jo outsl sub leave push mov add adc push or inc loope or lds cmc xchg js jne rclb jno popa xor dec fmull insl out imul dec adc pop sar leave lods sahf mov cld and add jno andl mov sbb fsubr pusha data16 cmp sub call mov sub or push fs enter or xor subl mov insb xor out mov inc xchg leave aam lock jae mov sbb pop add movaps int3 rcl sub jae mov xlat fadds mov repz cltd pusha mov (bad) or cld bound sub repz cmp inc dec inc hlt cmp int3 xchg je pop rcl mov xchg in and jmp and imul pop loope insl push lcall cwtl cmp xchg lret pop jns pusha cmp mov cmp out push add in arpl cmpsl and or (bad) or push jg shr je leave xor gs push add xor jno mov mov dec (bad) push dec in and pop adc sub or test adc fs xchg push xchg and mov cmp pop xchg in xchg fisub insl add push or mov mov insb mov xchg in flds cmp clc fcoml pop sbb sub pusha in and mov rcr jl mov pushf cmp adc cs add or lcall loopne repnz out shlb rcrl rcrl xorl cltd adcb fs (bad) lods iret or leave roll mov outsl add lds lock pop and mov pop dec xchg or sbb and cmp add pushf push mov loop js xor inc ljmp or js out clc sbb and jo or xor arpl or pop xor push out cwtl stos dec not cmpsl push and aad (bad) or pop aam in sub enter xor xchg call cvtpi2ps cmp test cltd mov test pop mov mov das and hlt mov mov adc and xor in cmp inc add push cmc jb scas mov xlat xor popa mov pop adc mov lahf bound or (bad) pop jo ja les inc jo ja pop mov and push les ds nop mov jg ss fs sub (bad) loopne insb xor lods jg movsl add xor or mov js jecxz add add mov enter dec xor dec or aas sub (bad) pop mov pop sub mov pop rolb sub popa lock add adc xchg int daa enter bound xor mov xor aas inc jno cmovne adc in jmp dec xchg dec sbb xor mov or pop popa or pop mov push mov add mov mov mov sub sub fs mov or cmp cmc cs adc or and negb enter mov (bad) test pop loope sarl nop lock leave cmp sub xchg xchg dec imulb sub or push inc or ficompl xchg je push inc insb or xor test xchg mov and sbb xorb adc sti popa loopne jecxz enter and pop add hlt out add mov out lds mov out (bad) push clc and mov insb inc pop loop ret pop mull xor roll stc sub jp nop shlb or pusha add hlt pop loop repnz sbb dec lret dec fs call in inc lock mov sub div mov sub cmp push sbb stc addr16 mov inc mov (bad) repz xchg addl scas mov sbb xor sti cmp sub cld xor jbe mov and scas leave sbb lret out aam cmpsl jle cwtl add (bad) jl mov or inc aam enter push enter test xchg xor mov aas mov rcr movsl enter in stos lods mov jmp push out jle dec movb add cmc xchg sub pop mov (bad) add in fwait add dec and arpl dec flds test out daa leave pop jno and pop add sub push js cmp lods xchg mov mov jns inc pop sbb mov inc mov push adc xchg outsl jns push add xchg mov popa sub push cmp js add scas push dec sub add sbb dec mov mov mov fmuls sub int3 inc push notl pop or jg sub mov mov bound insb xchg (bad) add inc lds xor push add (bad) jbe in dec add jb push inc neg cmp roll xor jns mov push out test xor jmp insb aas ss add out aaa pop jae add xor mov (bad) xor add adc pop mov inc pop bound idivb inc jge cwtl (bad) dec sti add ret or or test divb and pusha cwtl sbb and ljmp and add sub pop movsb adc in push cmp roll jl dec xlat sbbb clc loopne insl adc aaa add or mov or cmp push cltd shll aas cvtpi2ps adc cmp xchg and hlt push inc fsubr mov hlt mov adc loope pusha add mov mov pop shrb jb xor orb xchg or lea es sub add inc aam ret mov and add (bad) jo adc icebp mov test mov add data16 fdivs add xor dec inc or daa sbb js out cmp std mov xchg xor cld out mov jmp cs les push and inc add push daa js and in dec aaa inc adc mov sub sub insb and lods add inc xlat sarl leave xchg xor push inc or or psrad inc cmp add push ljmp in scas testl shl add xor and int3 or and rcll dec adc adc add mov (bad) faddl enter inc popf repnz adc xchg bound and adc push je mov add int3 out fs inc mov clc push ret xchg lcall xchg mov inc test push mov xchg adc mov jmp jbe or xor sbb xlat and mov push mov adc in mov dec push add cmp cwtl mov (bad) xor clc pop pop outsb xor dec outsl xchg mov out shrb cmp sbb out addr16 ret into clc ds bound imul sub subl cwtl pop pusha es jnp add sub int3 js js adc or inc pop mov lcall dec out jl mov mov and mov mov mov in movsb inc (bad) mov in mov inc add loopne mov jbe in pop clc mov inc sbb aam cmp xchg stos mov and ja cwtl and imul xchg stos mov clc popf daa or mov xor lcall sub test dec test rolb cld xchg bound mov imul mov and mov aad add int3 xchg xor insb xorb repnz pusha inc jmp add push fbld pusha lds enter push xor add xor add push pop or ret add repnz dec lock lock sub les cmp decl xchg pop mov xorb mov mov movb rorb or cld lret mov dec stos push inc mov adc and mov fistl or push inc pop sbb ret cmp ljmp (bad) pop push out sub aam or push sbb cmp out popa loop popa or xor xor lods rcrb add insb xor imul add arpl jp loop sub test cli js fs sub inc jo sahf push fs ret (bad) je loopne mov test cltd dec or add mov add mov push ss data16 inc xchg xchg mov outsl mov inc adc mov shlb push sub push in add and daa mov aam jmp xchg pusha orl clc lods push (bad) xor push and ret scas inc dec pop xor mov lock popa in mov loopne cmpsl in and and lds cld (bad) add push mov lods dec rolb nop or xor in test pop insb add flds sti lock lock sarl sbb and popa je das push push pushf or mov rcll pop add enter mov js hlt inc inc inc ds fild sbb or shll clc test insb mov mov aas mov jb or out insl je shrb and jb inc cltd jb lcall shl mov cli xor (bad) hlt rol cmp pop sti inc cmpb mov inc add imul xchg mov add inc and rol popa sub iret sub or mov jo mov add scas xor les add inc popl jle sub jb jae rdtsc mov cmpsb repz adc mov insl pop (bad) xor or inc mov push insb mov mov mov hlt shrl xor sbb or sub sbb in inc push add (bad) lods lods (bad) jecxz sub or leave dec orb jo dec pusha rclb push insb jmp pop dec and and daa dec fs xor mov loopne jns add lret push mov inc mov in out cmp fnstcw les rcrl cmp les and or ds jno fisttp sub pop sbb xor ss sub mov aad fs and sub adc in imul xor or mov js mov sub add inc fst int ret sub pop or mov data16 inc je pop pop jbe push push cmp test in sub adc testb dec mov xor or test push fwait lock popf test mov aam mov or xor (bad) testb out pop bound jo or pushf xchg stos pop sub insb mov xor ja loopne xor push fmull hlt adc fmuls mov pop jo test mulb (bad) adc dec pusha xchg adc inc int mov jnp jno dec cld pop sub leave hlt insb imul imul pop add mov js or (bad) je add (bad) pop adcl fildll pop in inc add cmp je add jnp and or jg lea mov sub jnp pop sarb jne ret mov jo mov (bad) sbb and in push pop cwtl jns and sbb jl fild out add add pop sub pop cmp arpl push mov pop out popa clc jbe in into inc mov jecxz incb nop pop aaa sarb addl add sbb popa cld mov xor movsl cmpsb icebp subl jnp daa add cmp jle cmp xchg add cmp pusha adc in mov cmp jmp push mov push mov call imul sbb adc xorl sub add cli push cmp xchg in add cmp xorb push ss dec ljmp adc dec ja add xor (bad) mov stc (bad) add sti cltd add mov adc addr16 push imul adc loope andb cmp cmp dec push push sub pop mov shrl jnp hlt mov xor sub mov sub fimull dec dec pop xchg inc sub jl add dec pop rcrl in xor xchg decb add hlt popl arpl add xor jg imulb push mov push push cltd adc jbe push add imul divb std add and out leave cmc hlt imul repnz aas dec sarb cmp mov sub in adc cli mov jl mov push adc dec cmpb pop hlt repnz sbb add xchg mov add xor cmpsb jnp pusha lret mov lods std (bad) je out jo add dec adc cmpl es adc das imul add cmp scas inc lea imul adc jg inc adc cmp jle add or pop lock xor inc addr16 aas cld ljmp dec push enter sub mov js es out mov add cmp jecxz push and inc sbb loope imul add jno incb sahf or pop pop mov andl loope inc lock in add push push enter pop mov jmp aam push push jne sbb movsl sbb testb inc jb xchg pop add push mov adc test imul xor aas jne mov or jle hlt daa jne cmp sbbl mov jb add dec jno pop mov out std nop sub lock (bad) adc in es gs mov push pop mov add enter push sub inc jp jl add jns (bad) xchg cld add std xchg or lea popf add int frstor sbb mov add (bad) sbb aam pop (bad) hlt xor std out add push jl fwait test mov mov std cmp sbb push shl dec jbe jge cmp mov mov adc outsb add out cli pop (bad) lcall push into mov lfs hlt mov daa push roll sub xchg loopne dec pop push push js cmp int cmp mov (bad) hlt loope les sti idiv and add pop mov and into hlt sbb imul out push sbb push stc fstl emms lea js or jo adc sub pop mov inc (bad) (bad) mov pusha test mov cmp fsts test rolb (bad) xchg test lret das aas into xchg fldl inc clc mov ja rcrb cltd xorl int3 sbb mov sub adc mov mov adcb or insl add shlb (bad) jmp test ret or aam cmp add adc jl xor lods popa incb ret mov cltd insb sbb sub mov mov pushf sub add jbe cmp and and mov add js and cmp xchg xchg and mov add or ret lret push mov scas das add lahf push shrl cltd cli and push cmp and addb and inc xchg repnz shr fidivrl adc add inc cld and push or add adc or mov or jp add aaa jmp push sbb and into or (bad) sti xchg pushf pusha mov jbe add rcrl imul xchg add sbb mov mov cmpsb adc or rcr dec push push add ja roll lods icebp xchg inc fsubrs inc adc and jbe and lock xor stos cmp mov add fsubl cmpsl or orl mov push es adc jecxz ret into cmp pop cld sti sti int3 popf sub int inc stos pop adcl outsl inc sub pop inc lret inc cwtl (bad) in mov sbb xchg imul outsb imull repnz inc loopne (bad) xchg sahf push adc xchg aad ljmp fwait std loopne cmpsb imul sbbb movsb push mov (bad) and call frstor repnz inc clc jo push cwtl lahf adc mov (bad) jl sbbl dec rcrb movsbl adc pushf je dec sbb aad std mov add (bad) dec stos cwtl add roll dec lds mov and fnsave test cmc sti or xor adc fnsave cld mov nop roll pop leave add add jo in inc sbbb or and shll cmpsb push inc add aam int3 push dec cmc icebp adc mov push add fs ror bound in lds orb xchg in ss iret outsl and into push stc push std and cmp add hlt mov popf ds sbb sarb sub mov cld inc xorb mov bound push adc sbb pop add push popa adc mov sti aad stos adc push adc in jo stos arpl adc mov and push push and in roll stos xor add mov xchg xor jmp psubusb pop nop sbb pop xorl sbb jno call or jno fwait mov loopne sbb sbb cmp dec fcomps xor and jg adc add test xor dec jmp in or jmp loopne aaa cmp or adcb jne mov nop pop adcb imul (bad) and mov mov dec add rclb add dec test sub or add pushf add popa add cmp jle mov std xlat mov nop clc mov (bad) rcrb mov mov pop pop movsb clc add add test mov or adc xchg pop jl xchg fild jmp loop hlt lds lock add fadds inc (bad) (bad) faddl imul mov rol idiv pusha xchg sahf mov scas cmp ret xchg mov push mov shr push pusha fisubr daa enter add (bad) shll cmp push or std es inc ss or imul push cmc sub add (bad) jns pushf js mov and add or push icebp mov movsb mov jl sub adc int sbb fldt fldl cmp or push out mov inc cmp add scas push (bad) mov sbb cmp shlb mov imul jns jne xchg inc jg clc adc xchg loope test movntq cli xchg orl mov add pop xchg fnstcw jg sbb cmp inc xor out call adc shrb bound inc aam cld andb aas (bad) or lahf xor add rorb inc xchg test sbb (bad) adc dec xor push out push add push mov (bad) inc mov test aad scas in popf xchg fidivrl test adcb subl pop pushf mov mov pop cmpsb adc push std sub cmp rcrl add test test mov in jo pop add add in push into and dec rclb outsl push aaa std mov add cmpsb ja mov neg or rorb and jbe popa pop inc xlat das push cld sarl icebp pop fcoml mov icebp adc jb aas sbb outsb popf or into xor mov aad and (bad) xor out mov xor cltd call adc (bad) (bad) mov inc dec imul (bad) or push seta cmp mov inc clc loope pop mov clc loopne cmp xchg lods in push rcll in enter inc lods sub les sahf ret cwtl loope push sub push cmp add inc add mov mov loopne mov shlb clc lods add and adc imul pusha ret add mov rorb orb cmp pop cmp rclb test movsb adc dec sbb mov andl cmpsl sbb std popa inc push adc enter sti and daa les xchg pop jp mov rorb ja add sub (bad) cmp fs call sti sub sub mov aaa pop xchg fstl leave fstpt inc add xor popf jo xchg fiaddl (bad) aad repnz add roll into andl test inc push hlt cmp xchg aas mov cwtl (bad) mov in fildl dec adc add int3 xchg adc and scas inc cmp adc sub leavew fisttpll push add mov jmp pop (bad) jns and adc jg cmp out leave adc dec lds fcoms sub pop cmp lahf hlt mov dec clc mov (bad) pop mov pushl push mull adc mov stos aad sbb popl repnz add dec out pop hlt or in sub mov and adcl sub imul imul cmp cmp cld movsl daa andb add inc movsb pop cli xchg pop roll xchg std sub jecxz pushf cmp push (bad) loope inc or fstl test pop xchg cmp and mov sbb or jmp sbb test and call (bad) cmp sub sub sub xchg add push add loopne rolb out adc pop std adc fbld jne sub cmpsb test push subl mov out ljmp les rolb dec cmp add sub ds test faddl mov data16 push fisttp sub in push mov add inc cltd aaa in (bad) mov or imul mov ds or add sti cld push add jns adc add insb sbb enter push cmp shrl aam fcomps (bad) bound add or xchg lock lock (bad) fldenv cwtl test jns std xchg xchg je inc daa rclb lods pop sbb mov out cmp and inc push syscall jge loope dec add push add push aas or mov dec push and lods sbb lret fistl or add dec jg mov cltd cs xchg lock push xor mov push (bad) mov subb sbb cmpsb jne out dec sbb sub outsl and lock movaps fwait jle xchg int rclb cmp (bad) fwait cmp inc mov fcmovnu scas div psrad mov stos movl inc push andb push push push add sub and test dec inc nop push out and fcmovnbe imul std flds add js out cmc cmp lret nop and lods faddl add sub inc lea sbb jns mov je or pop xchg add adc and pop sub repnz fcoml aad loop lods or xchg adc test or push sbb xor inc mov adc cltd inc mov dec or sub mov jle leave sbb cmp test add sbb xchg call cld cmp out sbb cwtl adc int out cmc and mov dec sub mov push xor pop pop mov in push sahf imul js cli mov jp mov and xor pop add xchg and adc mov push in outsb mov aam inc mov fisubrl sbb test add and and popf or and inc add cmp or test mov inc pusha fdivrs xor jg sbb test cmpsl pushf and add subl inc xor and add cmc out sbb add sbb cmp rorb inc loop mov fsubs add ja lea jl test push mov mov (bad) out sbbl (bad) imul push (bad) lock aam add sbb dec rolb push out (bad) insb lock faddl nop orb repz and push sbb push scas xchg mov testb movsb jp push pusha mov mov int3 push sbb mov adc iret sub fs test lret (bad) cmpsb (bad) dec clc stos add inc icebp add lods sub adcb mov and mov sub inc shlb scas mov inc test push jbe mov add sub mov pusha inc adc pop in mov pop or rolb inc push and in out jmp addr16 cmp and iret es jne pop xor popa outsl sbb push in mov sbb and in mov pop lret xor dec add mov sub or addb fldcw jo add add dec push inc add mov out into orb adc adcl stos add fucom pop imul call sarl pop push add jle or cwtl mov shll xchg jnp ret lock jmp mov jae xor or in shr add arpl sub jno sbb mov pop add sbb lcall ja push lret inc adc daa imul rcrb les lahf cmp mov add ljmp sbb movl adc sbb mov (bad) push into lock lret xor pusha (bad) mov mov call add bndldx lret inc push je aad mov imul inc add xor arpl and add cmp and mov xorb add ja pusha sahf mov and mov mov js add repnz mov mov fwait in sub jge jl fdivl je pop add scas cmp or jg push (bad) in inc xchg xor xlat add cmp les fisubl mov int add lret xor leave gs adc stos imul cmp xchg dec sbb mov push cmp push cli gs jb xor pop jae mov add inc (bad) xor call jno jae loopne cmp pop outsb or dec push and xlat jo adc in adc mov (bad) nop mov lock pop lahf push jne shl popa or add inc cmp hlt fcoms cmp mov add pop inc ret xchg icebp and cli repz mov add fstl add ja rorb icebp mov fnstcw nop cmp cmp lock shrl ljmp dec cmpb das cmp int3 cmp (bad) out and lcall or jnp mov push test movsl xor sub lret imul scas push mov insl ret (bad) ljmp repnz pop cmovb jo rorl xor or jle inc add mov je aad sub pop add jg dec adc sbb mov push lret add insb add and xor jge sti pop push cs jns jg dec movaps xchg inc (bad) fsubp adc mov lock mov inc cmpsl insb or sub inc add cmp jp fldl and movsb jp add sub outsl mov nop mul gs mov add jbe jno movsb mov inc jge in (bad) mov xor xor add and mov jb int3 and pop and (bad) pop stc scas push loop pop push xorb push cmp movb les sbb dec or push cld cmpb cmp inc cmpsl scas or in repnz add int or loop adc subb lea inc add push sbb cmc cmpsb mov rcrb call sub imul int3 jo xor mov xorb xchg arpl stc int3 push loopne xor stos push int in jp out xor mov insl push nop adc xor dec fadds add add mov pop movsl ljmp sub (bad) adc popa jecxz mov in add aad lea dec and addr16 push incl out jns gs xchg fcoml xor pop jno test inc ud1 (bad) and lods sbb mov or shlb stc xchg jge sbb into mov mov stos dec fs xor imul repz jno nop (bad) add sarb mov xchg (bad) lahf aad fild cmpsl push jo add xchg mov insb or pop icebp into pop fdivrs adc in gs mov xchg rcl mov dec adc and loope inc mov sbb jecxz lea inc ret lahf add cmp mov cmpsl fwait je add pushf push insb js jge mov in mov loop xchg fldl push pop mov add sub mov adc or imul jo add dec cmpb mov pop bound add inc andl shll mov pop mov xor push fwait gs cmp subb repnz adc jl cmp (bad) cltd mov orl or les lret in push pop mov pop and or ret (bad) loope sbbb and mov jmp push and add cmp mov xor ljmp sub mov cmp mov sbb lock push jns dec mov roll adc mov push dec xchg cmc cmp roll popf es push sub push cmp lret rolb dec shld aam and and mov pusha lock lods xor sub cmp lcall sub pop movsl subl push cmpsb imul cmp test lcall aaa adc adc outsl in mov lcall movsl lret mov scas push sbb cmp inc dec lret or mov js aad loope mov sbbl sbbb add mov lret push ret mov and inc push cwtl icebp dec aaa add dec daa push adc push cmp add sahf lods or push jns push and mov add jns aad not mov sub mov mov xor sub jns add pop mov mov adc (bad) jae add cld or lock out inc or sbb fildll push fldt iret sub jl (bad) ljmp add aaa insb ja cmp jns add lock pop add mov and jne xchg push scas xor push fs les outsb popf add repz testl fist outsl add es push sbb mov add pop xor mov cmp roll adc add nop loopne and inc cs push add or pusha xchg mov mov call add sub or inc or or push add mov rcl jns adc test mov mov (bad) xchg hlt sbb imul adc shl xchg add rcl mov jecxz insb sbb or fiadd mov lret xor cld outsb (bad) iret cld icebp add ja jmp pop inc mov sub add mov xor loop jmp movsl xchg or aad push out dec push test sub lock div mov stos pop jo test fcmovbe and mov roll xor xchg inc das data16 nop (bad) or mov (bad) add inc dec and movsb add cltd mov mov jae int3 addl mov mov inc ficoml add std test add fld test jl cmpsl fild lcall int dec fdivrs mov xchg add mov rclb xor jne add xchg xchg mov push bound das adc insb rcrb fmulp push mov and jns enter add in (bad) test out pusha pop xor cltd popa mov fcomps sbb mov xchg xor movsb adc mov daa jg loope popa call nop lock adc add movsb inc mov xor jo fs subl add bound add jb xchg les sub add pop insb test adc jl hlt enter mov bound call add loope add icebp (bad) (bad) icebp xchg xchg add or dec jo cmpsb in cld jl shr cltd or jl xor mov roll stc inc test jo add adc adc addb mov mov mov in push lods inc jb aas cmp sbb sub mov (bad) and fcomip push pop xchg mov fstpt fwait inc pushf sub xor xor push add cmp add mov stos aad call inc cmp mov jnp fdivl in and xchg pop data16 popa fwait repz lock (bad) out andl lods dec movsb push movsb adc rolb movb mov in rclb or mov jne or ficoml adc cmp cmovo mov push test subb sahf add inc dec xor scas add outsb mov mov cwtl push add mov push movsb add cmpsl loopne jo in in add lods xor dec test inc mov adc mov jg xchg push dec lret inc and add mov ja push mov cwtl cmpsb add pop into notb stos imul mov cmc jnp out dec pop test adc sub pop inc mov (bad) mov push mov fistp outsl dec mov pop in out add pop mov repnz outsl jno jp add lahf aam mov lcall data16 xor or jmp daa in add aaa lods scas lods jne cwtl fmuls jno xchg mov mov nop enter aam mov add pop fs xlat repnz sarb xchg and jmp pop xchg mov cld mov pop adc or and add ja jne cmp pushf cmp data16 movsl or and and shrl sub mov and or mov je mov lock test in mov das dec js mov ret jg dec or imul mov (bad) ljmp adc dec push or xor add jae clc enter lods stos sbb xchg xchg mov jle add pusha rorb cli sti jecxz cmp xchg lret pusha add fistl jl lock nop les add imul mov pop popa sbb sub xor dec adc add repz add jmp out jae shrb add aam jge or out orb lods sbb je push popa push mov push xchg mov and inc aaa cmp add fucomi cli rorb mov aas add popa push push hlt pop loopne dec movsl clc test inc daa mov insb nop (bad) sub imulb je jo imul mov xchg int3 add (bad) jb call jmp xor int sub mov mov hlt pusha sub testl fidiv mov sbb adcb add out jbe cmp pop mov jae (bad) fnstcw and mov push pop xchg cmp bswap sub and fstps adc dec lea insb faddl ljmp ja xor dec mov jecxz add jmp and sti cwtl inc and aas int3 xor add adc and int3 mov scas ljmp dec jmp push push inc das and cmpb mov aam xchg mov ja push push mov pop (bad) jp loopne push cs push sub add pop std lds push sbb or xor inc sbb inc out mov mov sbb out add movsb (bad) and nop mov adc mov add mov mulb sub lock mov data16 add sub add mov xor test xor inc sbb fstpt mov (bad) jge popa movsb inc mov pop push adc subl pusha sbb in arpl nop out xor cmp mov inc add sbb in aaa add movsb loop (bad) jo lahf adc sub dec cmp jmp add out push sub pop sbb int mov js loope mov sbb sub or pop mov jbe mov fbstp mov cmp and test imul enter add mov add enter sub mov or mov push cs pop incl stos lret push fisttp dec mov push notb mov jo inc lret xor or adc add fs loopne lcall and lea in lret movsb add test mov xor adc loopne into push sub sub orl or gs mov adc insb mov adc xor pusha mov add lds xor sub push fcompl add fs fdivrs or in mov xchg pushf inc sbb or sub push call xchg ss mov nop or ret dec fiadd and pop dec push or add push or or scas push in lea inc jae mov pusha daa std fstl and and add sub arpl mov xchg cmp lods outsl (bad) xor sub sbbb scas sbb jne shrb dec (bad) fadds adc mov inc push cmpsb pusha push dec enter lcall and push mov add cltd inc fisttpl adc push mov cmp repz insl adc sar xorb mov in add pop aad push and shr xchg sbb cli inc push xchg mov sub js add jne jge std mov mov inc and xchg jae loopne repnz sbb cmpsb push pop xchg nop mov clc packuswb cmp mov adc add add js or cwtl sub (bad) je bnd loopne add xchg mov add sub cmp je mov les sub xor pop and les mov xchg fadd lods cmp je repnz inc add mov xchg daa (bad) cs test lods test aam mov lds fdivrs (bad) dec dec xor add cmpsl cld out dec add or and lea ds mov or xorb sub fnstenv adc xchg fsubl mov jmp enter sub inc pusha ret in jg pop fwait loopne jge jmp add fs fcoml sub push jle mov inc jp (bad) push dec mov add setle adc inc and aad loope imul int3 imul add xchg sti fxch lahf rolb add dec (bad) data16 jp mov jl fnstenv sbb xchg icebp adc sbb int add cltd popf sti movsl xchg pop ss or mov std pop jl push inc sub fs adc add xor mov sub cmp mov aad xor leave or add iret xchg mov rcll xor mov sbb push pop push fnstenv pusha pop inc lock xchg dec mov addr16 cli pop and movb xor mov (bad) outsb add lock inc lret or cmp inc ret mov inc lahf je pop inc sub cmpl mov inc cld mov dec enter subb cmp ltr mov inc sub and add add push lock mov mov push add adc scas out add jecxz xchg notb mov and or repz or inc and rclb sbb outsb das aaa mov cmp dec shrb mov pop (bad) rcrb sub or lds inc jle mov or push pop cld inc rcl ja adc aad xor pop mov fs cwtl insl cmp test verw sub cmp enter pop rcrb int3 stos inc add pop sub inc add mov or (bad) adc test ja fnclex int3 and aaa inc xchg insl add jb jo cs push jns inc pop mov ficompl mov shrb adc (bad) and xchg rcrb lcall das call xchg adc stos lret xor iret cmp and mov mov or into xor xlat dec pop xor mov mov out loopne and or cwtl cmp insb mov jp add sub mov (bad) jbe push ja call enter (bad) add push push fadds or add jns mov pop gs xchg lock dec inc or stc xchg xor adc inc sbb js test mov clc jle adc inc mov addb lahf iret (bad) dec sbb cli gs and xor sarl push sub loopne jle fld test xor fdiv subl adc (bad) cmovno aad test roll and into mov mov cltd movb mov mov xchg push or mov add sbb scas xor ret push push fistpll int3 movsl sub inc pop push nop jecxz pop jle mov (bad) cmp pop call xor in mov outsb pop cwtl pop push repz jns inc cli jne rcrl xchg xor outsb js cmpsl mov aad rorl fildl push mov out scas cmp mov or mov je add aas mov jg call fldenv icebp sub cli jg fadd mov outsb mov aas cltd mov adc sbb (bad) xor (bad) adc xchg add aam ret sbb xor arpl (bad) mov push hlt jno je add fistp inc mov or pop pshufb out add xor add xchg test lods xor add push or in add xlat lret aad sbb out jl js pop test or int popa xchg aas cmc add in fstpl dec pop and xorb add lods bound lret mov aaa (bad) outsb mov jo adcb mov sbb pusha dec pop mov loope cltd inc add stos call insl ds or pop rcrl inc gs mov push or adc subb pop cmove push mov cmp and nop xor aas mov sub mov (bad) cmp mov inc ret or pop sbb add and jmp mov adc mov xchg out pusha push scas ret sbb iret and pop (bad) mov popa push ret adcl add jp mov sub fnop or mov movb movsb ds std js cld daa xor mov add pop subl dec test adc roll jp dec jbe or and es push cld mov js jle subb std cltd xchg or movsb jbe jne cmp mov ja and lods add ret js jmp and ret test les fwait or push cmp jne mov cmp fs repz ret addr16 cwtl add cmp (bad) sbb icebp lahf push dec jge (bad) insb insl adc inc cli pop sarb inc add in add int3 or rclb lds push push cmp add dec ret icebp loopne hlt push cld sbb inc push adc or out int3 inc fnsave mov add dec or inc cld icebp (bad) ljmp add jmp movsl or adc add in lock or out aad subl mov dec jns pop je or fcmovnbe gs pusha mov std into jge inc or incl shl rcr mov les add dec mov ret cmp lock pop data16 xchg out lods add fisubr pop ret ret and and xlat add call in shld push mov cmp mov or push clc push mov mov in add in push stos sbb cmp jecxz add inc push les cs (bad) mov sub sub and add ret gs and inc mov inc and out add mov xor nop adc into test stos out inc mov inc je shrl adc rcrb push dec jne cwtl hlt cmpb push rcrl pop repnz push stos cmp jae dec inc nop dec nop rclb (bad) mov in add lds cmc out dec arpl adc dec cmp pop mov dec notb mov nop imul sahf add loop push (bad) ret inc cmp (bad) js mov mov add rolb (bad) cmp lods fs mov cmp jmp (bad) out les gs pushf push iret push test push sub xchg push push (bad) jb mov mov mov inc stos push inc loop addr16 mov xchg (bad) adc enter pop clc sub pop mov push pop cmpb jne scas cmp pop xor mov pop inc add outsl (bad) sbb les ret sbb xor cmp fsubr aas enter fsub imul inc fcompl pop mov gs std bound cmp jns (bad) sub dec xlat arpl cmpsb sbb outsb fimul sbb int3 repz pushf loop xchg push cwtl lcall mov (bad) lods outsb fcmovnb mov push mov ret pop je es pop addb cmp or xor add out sub mov push jl les addr16 lret outsb mov jo mov push inc fcomps (bad) mov jne pop dec xor inc inc mov mov sub dec jge jo mov jns xchg clc popf and in push test outsl lret cmpb sti mov push inc enter aaa aad inc icebp inc setl xchg jbe inc (bad) out ljmp add mov adc mov test mov add inc cmp add jb xor call pop call cmp sub sub mov stos add in std arpl xlat cmp add rcrl cmpsb ret sub shrb inc cli push sub dec cmp add insb pop sub and add inc cmp mov rorb loopne add ret inc add hlt mov gs mov sbb fsubr inc lret sbb adc or inc mov outsb jmp mov mov cmp out jnp push pop adc outsl ret mov psrld or mov push (bad) call popa mov stc add and inc or push mov (bad) pop add or test jno rcrb mov mov push jns hlt jb add mov sub add lds xchg push mov mov mov jb dec inc dec push pop adc adc push inc mov outsl dec xorl clc imul pop (bad) cmp inc add shlb xor xor in aad addr16 fldenv idiv inc cmp adc inc sub aaa fimull popa jle xlat cltd movsb popf testb lds gs pop mov sub mov pusha jnp lcall mov cwtl shl pop xor lea enter pop out push ret aaa pusha pop pop rcll pop rol cmp (bad) cmpsb mov nop inc stos aad mov insb loopne shlb out add push and adc mov jno add sub aas push sbbl sub inc or (bad) lock push jns and adc jbe imul flds test popf cmp aaa dec aad dec lods add fdivs aas mov mov push mov rcr add out mov (bad) push add mov mov pushf jl dec cmp xorb push jno push inc or mov xor push pop sub mov in aaa into xor pop (bad) mov push hlt pop nop andb jg or repz cmp insl clc mov movsb test mov push ret mov mov add rol and test push rcrl mov fldt in dec lcall (bad) rolb mov cmp add xor fdivs push or push xlat loopne xor rcll push mov dec test push ret xor ljmp mov mov mov mov dec xchg aad shll imul and ds test xor out pop mov cltd loop cmp (bad) jmp test add test jl mov hlt adc enter cwtl hlt imul dec scas dec clc les js mov int3 jge cld test xor sbb cld sub jne inc int movsl pop push dec shl add je,pt mov push jle mov ret and mov popa dec push mov sti jl jnp fsub mov adc jp and sti enter mov sahf insl push shrb movl dec push inc or dec mov popa arpl jns add and xchg aas add mov ret cmp test and sbb cli adc data16 dec outsb and test mov mov (bad) aaa push (bad) fbld loopne lds mov stos enter cmc mov mov pop mov mov lcall lret cmpsl dec mov movsb sbb loop add push jnp and stc mov aas mov lods andb jb add add push or cmc add jno pushf inc mov and add lcall add test arpl mov mov ret lds call push xor pop cmp or jo js int mov movsl xor xor or pop pop cld or jns xchg in pushf aaa imul fsubs cmp (bad) pop push call add mov xor (bad) ret cld std xor push stos mov add jb dec inc pop and xchg mov jae popa xlat es pop (bad) sarl dec aad and outsl jmp pop and jns sbb pop mov mov add (bad) add std in rcll mov push mulb idivb add dec cmp int3 or add arpl dec xor out jb add es inc add add int in mov pop and rcrl sub pop dec sub push pusha imul xchg shlb inc inc xchg in test add int in dec js cmpsl je dec pop and xlat inc push push scas cwtl push add or push ffree and arpl dec xchg cmp add cmp in into loopne or add lock push in or and cld lock cli push sub int mov sbb pop jns (bad) ds mov movsl inc adc dec cmp (bad) jle mov aaa xchg mov xor dec mov out pop xor int sub (bad) imul out mov jmp mov mov jnp out xchg mov clc and adc insl daa add pop aaa aad mov dec inc int3 popa sbb dec clc xor pop test pop add fidivrl shll or imul int3 lods pop adc push es icebp mov sub int sub or pop pop sbbb dec xchg xor pop cmp or adc movsb subb cld adc mov sbb cmp xlat mov dec das (bad) jbe mov ljmp push mov addr16 stos jecxz dec mov enter loopne dec sbb add mov xlat inc cmp add pop pop adc ja int3 mov (bad) mov add fsts add je mull icebp and movsb aad xlat scas mov add push jge ljmp negb call add lods dec enter (bad) xor and add insl sbb daa rcrl fwait bound cmp addr16 out and lcall dec xor push pushf pop dec test out xchg add cs sub cmp enter jle add ljmp test cmp jle add xchg lock push dec push sbb add enter popf aam sub int3 adc push sbb sub adc xchg pusha test sbb das xor lea inc lock pop add mov mov pop cmpsb ret stc daa nop in sbb jo mov loop and in in aas test mov and push mov lods rep or call rorb clc dec aaa dec rclb adc ja cmp lea lock ret or mov inc mov ja dec sub dec js sbb mov mov call imul xor imul and pop inc cmp add das mov push repnz mov push into or sub lahf cli push push stos jbe (bad) lock popf sti and adc sub lahf insl push sub mov push cmpsl push dec sahf or push (bad) rorb ss push out or test je xchg and pop add push mov sbb add dec (bad) mov notb out adc push add dec daa aaa mov mov aad xlat nop test ljmp cmp jno das and sti add or popf pushf xor push ss les cwtl out sub sbb cmp enter or push daa add cmp add out testb test dec add enter lods add outsb imul cmpsb lock jecxz push clc or mov cmp xchg addb sti mov int mov cmpsl add notb test add fdivrp test mov dec das in push add andb fucomp (bad) dec mov sbb push push call jge sbb pop add sti outsb icebp int in or fsubrl adc mov or aas dec sbb faddl ret add xor test gs mov rolb test negb (bad) xchg inc fildl mov ret add fldl add sbbl arpl push adc lea dec add sbb fmull dec push inc inc (bad) sub cmpl out add cmp push mov ja shlb ljmp add fstpl dec (bad) lret popf jecxz pop cmp xchg cmpb (bad) mov movsb cltd int3 add jl push nop sub and or les add adc adc sub out push insb mov in (bad) (bad) or pop out (bad) fcoms andb xchg les pop jl or js xorb (bad) out hlt (bad) pushf cmpsb mov ljmp lods dec or inc mov mov mov aam add in jg sbb push cwtl jl stc mov mov pop cmp int3 jg icebp lret xor and add xchg ret (bad) xchg mov int3 jle rclb cmpsb mov mov jle xor fistpll jae add xor ret insb in jo mov fiadd andl (bad) daa rolb lds (bad) or xor nop insb jl pop repnz inc mov (bad) rol inc jbe ret scas sarl inc jo mov and decb mov mov inc and dec or push gs add lcall push lock mov add add xor mov adc inc mov mov push dec out xor hlt jnp mov xchg xor inc (bad) jp and int idiv jb ret cmpsl std mov in test je sarb jo mov pop aas sbb insb inc daa les (bad) pop cmp mov test bswap in lret dec and mov add in and xorl sbb push xchg dec jne bound adc pop push and dec loop add jecxz (bad) pop mov add ffree mov adc mov add adc loopne jecxz js jmp mov mov add in gs xor xchg int3 add addl loop ret out dec (bad) adc insl cmc mov xchg pop xor jno out movsl lods and arpl scas call int pop in int3 xor movsl sbb inc (bad) pop mov inc dec xor clc loop roll repnz movsb sub cmp sub js pop sub cmovae sub mov hlt jae mov mov lcall aas pop js lea cmc push test and jb pop insl sub adc mov and dec leave add cmp call mov add jae lock jmp loopne inc lcall les mov out dec mov lods roll (bad) fcmovnu or xor xchg nop cwtl xchg aad daa icebp or inc jp mov push sub orb cli ss sbb outsb stc (bad) lret fwait in push call sub sbb pop insb iret fcom jne or xchg imul and aam out mov nop pop fs mov add dec out pop pop std ret cmc inc test cmp mov addb aaa adc and scas movsb mov pop fcmove cmp pop dec pushf lock and adc sbb pop stos (bad) push mov movsb sub decl aam xor dec cmp dec mov data16 ds (bad) and or add jp in loop lcall xor lods add test cmp cmpsb mov mov repz cmpsl dec or mov inc les ret or add pop cmp enter int3 jns jb dec cmp adc xor xchg jno in pop clc int xor inc add and arpl es pop cmp jg std cs xor pop jnp mov add xchg mov inc push clc jmp mov les mov xchg jle sar mov cltd xor dec ss daa push enter lret dec rol (bad) push adcl mov rorl add or cs xor dec adc mov (bad) push mov movsl bound add sbb adc xor add sahf and imul inc rcrb mov addb ljmp cmp in add mov stc mov sub mov jb call dec adc test inc dec jmp cmpsb mov mov sbb les je add pop in adc js stos (bad) iret xor inc fs mov or or pushf loop jns mov imul or mov cmp pop rorl ds lock dec (bad) shl cmp lock call xchg pop and loope jb je push jle inc add or ja cmpsb outsb aad dec enter inc lock mov mov fidiv sti shrb iret push dec pop gs enter test sub icebp add add dec int push dec jo jno xor mov push in shr or xchg dec cmp jp pop jae mov in add pop cmp push cmpsb mov sub sbb add pop sbb xchg inc out orb inc mov lret jo cmp enter int sub add call adcl push out das inc push push imulb loope push mov push movups add inc ja dec xor sbb (bad) in adc loop jl nop in jecxz enter jns or ret insl js jge mov xchg pop (bad) icebp sub aam add mov fdivrs or dec js push mov ja sbb (bad) adc adc out std int3 out lock or add dec jg jbe cltd xor pop repz cmp popf addr16 aad mov cmp loop add push rorl push cld jns add daa jg xor add addr16 mov lock cld cli ds sti jno adc call adc add jno adc inc or push inc addb xor mov outsb rolb cli dec dec push cmp pop mov push loop test inc arpl sub data16 push push xchg in mov in aad hlt inc sti pushf sbb push xor mov push test xor in (bad) xchg sbb xor mov mov cmpsl icebp int3 fadd push mov or inc adc (bad) and dec rorb imul inc les mov test mov add aam cmp xor cltd or ret add in mov (bad) jns sub jge add dec dec ret jl add push repnz sbb and cmp add adc mov lcall mov les les cld or cltd mov int cwtl stos dec add ja inc mov fcomps add scas cmp adcl cmpsl int fcompl imul jae hlt les or sarl xchg dec adc sbb add leave out adc mov xor mov xchg dec sar push fnsave xchg inc sub or sbb push sbb sahf mov jns adc or dec mov stos aas push bound enter jecxz fidivl sbb ljmp sahf popf adc jge jl cltd jbe xor mov cltd inc jbe add paddd pop test leave pop add add mov mov xor out add mov cli push rolb mov mov and addr16 aam jnp je dec (bad) (bad) dec sub or pop int adc out xchg aad or test ljmp das pop sub inc incb dec ficomp out fs mov adc daa xor es leave mov add sub dec pop inc enter add xor pop pop cmpl in adc mov fist dec dec jne lock xchg jns sbb push ret mov pop stos add xchg pop mov into xor mov mov mov push push jo fwait or sub into out cltd push jne addb inc movsl jl push adc clc sub jbe xor sbb pop jns cmp lcall dec lds movsb jl loop add push (bad) jl sbb fcom mov lods in or inc adcl notb lock stos in cs xor aad lods pop cmp test (bad) mov sbb loopne push (bad) jl add inc jbe jge xchg andb jne ret cmpsl pop leave mov scas and cmp add clc hlt push lea jl push jnp add cmpsb mov lock decb jno add jbe cmpsb in popa add aad pop jno mov addb (bad) jnp lds or inc cmc dec outsb inc and adc xchg add cmp add outsb mov mov ja cli cmp pop jg movsb jb in mov adc scas jbe mov ror leave sahf insb movups add jecxz pop cmp lods cmp or mov add adc push jo lea adcl inc popa iret aaa add xchg cmp or shl inc test pop fcmovbe mov xchg jae adc xor push cmpsl dec mov and and mov add cmp pop lock or pcmpgtb out sbbb mov adc and cmp cmp test push jb in js add push mov jo (bad) xor xor stos xchg mov inc mov popa push out pop inc test add mov cltd jl xchg dec xor dec enter xchg and decb xchg shl sbb icebp xchg and les adc je cmpsl inc mov mov in inc dec adc in icebp add push push and shrb add lcall inc repz jmp rolb dec movsb mov lods mov dec pop and fsubs ret sub in popa out clc jae push inc hlt cmp or push mov pop push push sbbb mov pop xchg rol add loop push dec add push lods loopne jo add cli push out xorl dec mov lods mov cmpsb push aad add dec inc je fnstsw enter out mov jae pushf mov aam sbb xchg adc add test or push (bad) cld fs cmpsb bound dec cmp repnz mov stos pushf or test enter add mov ljmp scas or lock add add pop pop (bad) jecxz sarb mov stc cmp inc cld out adc dec rcrb rcrb inc cmp pop (bad) add gs inc jbe adc jge nop xlat pop loopne mov call add fnstenv add sahf sahf lods inc push sbbw xor repz mov and jecxz addl or fldt mov test mov lcall mov inc mov cmpsb aas dec mov cltd in cld and or inc in es and lcall add lock insb aas in mov ret xchg lcall mov add mov nop lds iret push (bad) lock inc mov push pushf insb inc cmp scas cli sbb fs lock xlat ficomp or orb add sub sbb xchg add enter sub int dec stc je sub outsb in add cli (bad) ret push lahf sub mov mov sbb cmp pop in sarb adc sbb mov jg lcall push and cld ja inc mov dec popf sbb lods movsb add insb or ss rol outsl add add test fadds jo cli or shlb outsb and mov dec enter cmpsl and pop add cmpsb xor and daa bound fwait and mov pcmpgtd js adc iret out adc pusha mov mov sub test int3 imul std inc (bad) sbb or rcrb lds cmp push cmp aad cmp les (bad) mov mov rolb movsb jb cmp idiv fwait sbb jns inc repz adc addb ds mov inc xor jge lods xchg jae,pn sbb push xlat push loopne cmp cmp mov and aad sbb dec jecxz mov in cmp xchg fwait mov icebp mov in mov jb repnz xor jl dec mov adc movsb faddl cli divb adc mov or jl sbb pop mov mov push add addr16 adc pop add mov adc (bad) push add push adc icebp test stc mov push jmp mov hlt jp adc pop pusha or imul popa (bad) insb mov mov fistl mov outsb or out (bad) cmc xor push jno lock add (bad) mov daa xor sbb adc and pop mov xorb xor and in add (bad) pop mov mov out jnp stos mov xor add pop jle pusha mov mov jecxz sub lods pop cmp mov in imul push pop pop pop mov pop nop movb sub push out mov or pushf push fistpll sbb divb or fnop adc add js notl fildl add or inc sub std xchg add sbb sahf xchg xor pop (bad) dec push cmp insb mov inc popf inc and add jp sub push cmpsb rcrl aad js addl push (bad) inc pop dec sbb xchg cmpsb xor arpl aam xchg sbb inc nop sub xchg or pop push mov int sarb and jmp cmpsb push dec mov mov sbb mov xlat cmpsb pop and dec jecxz es push or jne dec push mov adc les or mov and pop mov xor and push add js in lds sbb cwtl xor push out mov repz cwtl lods rcl push and sbb aas outsb (bad) jns and add cmp dec dec in scas inc (bad) xor xor xor outsb inc add pop lret gs push ret add and inc stos subb inc xchg inc push dec jb ss push jns cmp arpl outsb add cmp push push mov bnd xor dec inc das and add jnp jne daa icebp outsb pop sahf jae cmp popf sbb cmpsb addl leave lahf fmuls iret je clc pushl mov xor mov add (bad) sub or add push add cmpsb add test cmc pusha mov cmp jns pop xchg in add sbb ret push pop push repz mov sub in adc imul dec bound inc je add out mov adc sbb mov (bad) jl cmp cld je js mov popa ja sub xchg shr xchg loopne pop sbb lods push mov jno sbb push xlat dec xorb xchg dec push add push aad fldl je add test inc rorb and pop sbb ficompl xchg add mov test and dec stc in add repz pop inc cs inc add inc stos dec clc adc mov sbb sub or les or xchg push sub cmp mov pushf push cwtl cld or das loopne or and addl cltd jne (bad) aas lods test xchg (bad) test xchg pop mov orb jmp stc clc lds repnz push mov ret fs pop inc popa push lock jge push cld in test pop sub lock cmpsb mov mov outsl movsl or jno add clc in repnz ficoml mov xor (bad) repz js fldl je clc cmp mov xorl sbb jle rcrl cmp sub jo jo xor cmp cmp rolb jb jle add shll jmp pusha js jno lret dec int3 adc xor or daa and mov pop or leave test mov shll push push imul or jne and or popf rcrl call cwtl add enter mov mov pop sbb and adc jl stos xchg (bad) int3 mov lret add push add xchg inc add out insl sbb push jo into cmp and pop iret loopne push cmp sbb dec pusha lcall jo mov iret mov popl sbb ss aad push mov pop and test and cs hlt data16 stc add inc movsl sub sub (bad) std ret xchg in inc scas popl sub jbe sub push ret push rorb arpl shrb cwtl xor jecxz clc ret dec push (bad) mov insl cwtl mov mov mov bound xor xor inc clc pop test push sbb mov or add lods insb cmpsl stos add insl cmp push aas or rclb les adc in cmp and or repz cmpsb jg int3 inc add outsb add and cld aaa add inc jge dec pop nop push mov or sub int push call stc and enter sbb (bad) add push shrd lods xor fstps mov push or es hlt dec or faddl jmp pop jbe enter cmp push xchg adc insb pop outsl push or testb sub pop data16 lock jns rcrb cltd repnz cmp fwait sub jbe aam movsb clc aas cltd xor adc int sbb push xchg cmp or pop (bad) push popa sarl jle jg sbb inc ja stos les pop xor fcomps pusha out cmp mov mov sbb pop insb jl aam dec scas mov and (bad) pop nop mov add cwtl pop push mov adc mov and (bad) push sar add test cwtl and aaa mov jge loop jmp in or adc add mov das (bad) sbb add outsl inc mov stos addr16 add loopne (bad) mov add aam jae add into ss clc jbe or adc xorb jge jne pop pop dec std jg and add unpckhps inc clc pop popa gs pop pop jl rcrb sbb pop mov loope aaa jo movsb add mov mov rorb pop jo sbb lods xor imul inc (bad) mov inc dec cld fcoms jge xor gs or add inc fcompl pop xchg inc lods sbb lcall mov mov stos in js int3 pop (bad) popa dec call fldl leave jl movsb outsb loopne or adc fisubr push shrb (bad) rcrb or les xchg or bound pop xchg ret inc pop sbb add lret add jbe addr16 xchg jns add xor leave push sahf sub lahf lock lret nop inc push arpl add inc in xchg push mov rorb dec jnp inc cmpsl ds loope out xor xor add dec or imul cmp or xchg pop xor xchg push push cwtl test pop pusha in aad adc pop xchg lods orb sbb lea (bad) push mov inc das mov add sub out push mov add pop (bad) mov add inc push pop sub mov cwtl sub and jno in inc sub scas lds loop mov sub lods xchg pusha insl cmp cmpsb (bad) stos sbb lods movsb nop sbb mov sub mov sub stos cmpsl adc dec hlt fs mov and or hlt inc adc add pushl xchg mov call push mov and sbb icebp or inc xor adc mov cmovo int push adc rorl dec clc push add sbb pop push add xchg xor nop pusha in add pop jb sub and sub psubsb xchg in loope mov cmp int (bad) xor jecxz inc mov cmp add or vmovhpd out bound or dec add or xchg (bad) int3 mov pop or push sarb jns or lret sbb add cmc rorl sub dec jl push or mov lret and add gs repnz mov or jl lock adc fist add pop sub dec shrl mov or xchg test arpl dec push cltd jl sar sub sbb cmp daa xlat add or add imul sub outsb mov push inc in cmpsb adc xor rolb andl xchg shrb pop adc das nop test add fadds and and push xchg cli pusha icebp shrb sub add leave mov dec pop inc in cmp sbb outsb push (bad) push and cwtl add dec xchg sub (bad) xor mov cs mov jno ret push fsubs and cmc aam or xchg or fsts inc dec xchg cwtl or imul js (bad) and sub js hlt loop test cmc fdivr in out cmpsb jle add dec rcrb (bad) xor cmp inc nop sbb rol (bad) aam xchg dec test dec insb add out (bad) enter test adc ja fdivs rolb adcl fs pop cmp push add (bad) cld cmp aam shrb sub dec (bad) dec stc mov arpl lahf lret nop pop cld loop adc adc sub clc jo mov or inc test in or clc sbb mov les sbb add sbb cmp push dec mov or outsl jb inc or xchg inc sti lods and adc jae inc mov sysexit aaa inc push adc daa or dec fmull push cs push push dec sub divb lock cmpsl jecxz sub aas cld insb sub nop add jne dec push cmpl std or jecxz mov dec cmp cmp lock cltd cmp cmp call (bad) sub movsb repnz and add leave mov loop dec in and xchg mov xor pop push (bad) (bad) ja mov scas cmp mov dec stos fcompl or loopne push ljmp test shrb sbb xchg adc add mov imul fs adcb add int3 divb cwtl add mov push (bad) adc push std fstl cld es cmp loope lret daa push push mov aam sbb dec mov add cs int3 hlt add pusha hlt lods call jge and ds push orb rorb mov sbb cmp test xchg mov lret cmp ljmp movsb movsl fwait mov cmp or inc (bad) jbe fcomps adc int jae pusha sbb mov loopne cmp and xlat je jo popl and je xchg fldenv rclb (bad) jo add inc outsl push adc adc cltd xchg inc aam mov and pop jo xor jl dec popa cmp push js mov inc (bad) insl xor orb sub dec adc daa fcoml pop add imul cmpsb ficomp xchg repnz data16 shl (bad) (bad) or mov jbe enter popf pop dec les mov mov subl sbb jecxz iret cmp and les movsb or push (bad) add std test cmpsl mov mov or jecxz and les xchg movsb faddl cld jmp pop inc fs test xchg fwait (bad) std push rolb jecxz or or sbb int3 movsb adc dec add adc adcb notl ja sub pusha orl dec mov add jb xchg int xor and cmpsl cmpb orl dec sbbb jmp mov nop inc adc das test loope xor jae mov sub int3 inc sbb fwait js mov dec or iret pop clc mov lea adc jo xor and push sbb test aam and sbb dec xchg rclb dec or rorl cmp scas dec lods fisttpl sub xor mov adc pop js and call xor and stc or jno xor push pop cmp pusha je add hlt pusha xchg dec pop inc js xor aam xchg xor bnd jle add fimul xorl (bad) loopne or dec gs add (bad) xchg cmpsl pop cmc fsubs pushf inc out (bad) dec or (bad) (bad) (bad) or adc jb mov stc fxch stos xor ret cmp ret dec js cmovs lcall repnz inc pop nop push mov dec or test daa inc movsb movsb into mov cmp mov or sub cmpl pop xor mov sbb add or pop in cmc dec dec adc push clc and pop pop push adc xor adc sbb in repz mov mov inc push inc xor mov xor ds mov (bad) out mov call mov sarl pop fstpl roll movsl scas push movsb sbb scas fimul and dec mov add aam pop aaa xlat pop inc and enter rcrb scas inc lock sub hlt dec mov sub lret negl and or pop (bad) and aam popf xchg adc mov xor adc and lret add sbb cmpsl (bad) test mov (bad) push shlb xchg mov fildl or push test mov inc mov std rclb xor pushf add xchg sar pop xor inc xchg cmpsb xor pop rolb psrlw push and int3 cwtl movsb sbb add jge add xchg inc push into hlt orl xchg cwtl dec pop add lods ret rcr andb add test or cmp mov sbb adc add lret bound push adc adc inc and push dec xorb dec jecxz idivb stos cmp mov dec sub in add sub ficoml cmp or out add jb je jl cmp cmp les jecxz repz or js,pt and test adc movsl push push cwtl fldl2t and mov sub sub pop mov cmp (bad) xor fs orb das cld push adc rolb dec daa pushf fmuls sbb (bad) xchg aad lcall jmp or xchg push psubsb stos lds sub add inc mov add add cwtl or push lds sti adc add mov (bad) lock and lahf test call lods mov rcrb aam adc lds push sub push dec mov enter push push iret out adc mov jecxz ds ds minps add or cmpsb inc cmp ljmp sub adc sbb mov mov sub inc mov sub mov add xchg and fmuls mov mov stos popa push sub setnp orb mov sbb add bound jmp lcall or fist iret push jbe xor scas daa sbb and out pop pop dec push push add inc cltd push xchg jne mov pop clc jl mov stc idiv hlt ljmp adc jge (bad) lds movsl or mov subb mov mov (bad) mov cli fcmovnb mov aaa cld clc mov lock push stos mov jae stc add inc decb test add lods cmp mov dec mov push xchg pop loop xchg daa (bad) xor out push sbbb push int mov call sbb rcl andl outsl loopnew push pop nop mov adc sub xchg ljmp push pop ja push add shrl test and push or fadds push fmul mov mov sbb adc dec lock loop daa sbb mov call xchg sub add jbe aam sbb adc add je mov adc pop sbb in lea xor shlb shrd stc mov push scas mov loopne pop xor das adc jg mov mov mov adc dec call xor jmp jo stc or sbb pop ds loop pusha push sbb pop or iret fsubr add push inc icebp mov xchg mov push mov ffree gs pop mov push in jnp add jg (bad) xlat das cltd add mov pop lcall (bad) mov add repz jp imul and out and add lods cmp add jle push nop arpl test popf add push sbb (bad) lock aam call in sbb add inc pusha js cltd jno rclb cs jbe aam mov xchg push inc add sub es jae inc lods mov adc lds aaa or lock jmp rorl sbb add jg mov sub nop sbb adc enter cwtl and test rclb and inc popf aaa push es dec pop jecxz lret mov mov addl shrl jmp repz sbb xor or jp ret ja loopne sub dec dec adc adc andb adc dec je and lret mov xor mov movsb add mov add sarb xor mov add inc sbb xor fstl stos pusha add mov cwtl mov adc jb xchg pusha jmp ror js addr16 add int3 inc push fsubs aas stos xor mov xor pop aas push fildl lret insb cwtl xchg lea test nop xor mov jge pop sarl out add mov inc add dec les mov test sub mov and jb mov dec inc mov fsubl mov fidivrl int3 mov clc inc mov loopne mov aaa aad mov mov mov nop test ror iret lods divb cmc mov dec inc prefetchw and push js sbb outsw dec xor adc mov pop nop dec rcr lods lret adc bound rcrb mov in add mov hlt pushf mov call aaa mov inc loop fnstcw and jne xor stos adc lea gs xor push out or push adc mov aam dec push xor in insl pop inc push jle or sbb enter and add push jnp push and inc push imul xchg sbb roll jo mov lock cld mov push sub popa mov sub scas jo in xor negb std je ud1 pop (bad) adc pop pop outsl xor or outsl out push push cmp push dec sbb mov xchg js add xor xchg fimul sar dec pop loopne adcb or cmp xchg mov (bad) repnz cwtl or add and flds rcr add xor cmp lahf jl mov js or pop and cmp push les enter and (bad) jge inc fbstp mov das and xchg or in add sahf in mov cmp out clc fnsave push (bad) shrl movsb aas cmp push xor mov sbb sub jecxz xor push movsb mov mov shlb sbb push push xor pop stos sub push mov nop loopne (bad) xor int3 sarb aas push mov jns dec iret mov mov stos inc enter push test cmp out dec sbb test add sbb or in mov or sub xchg or int3 or or aam imul cli nop xchg dec xor sub and js repz lret mov adc cmp push cwtl or dec test or add (bad) mov add push adc adc cs (bad) mov mov ret and dec pop or mov fnstcw rcll enter cmp and and imul clc cmp scas nop mov mov pusha or imul mov (bad) das es in add (bad) mov add inc nop or je nop mov mov fwait jo seta sub xchg add fld sbb fstp sbb sahf fcmovnbe cli pop xchg pusha mov cmp add fdivrl in cmpsl add fcmovb jl push mov loop (bad) mov (bad) out sarl fnop xor mov cmovno mov add out xor es pop pop rcrl aad pop or or dec add fsubl sub loop add aad ljmp je xor adc fs xlat data16 xor imul movsb add mov sub repnz loop sub pop lds add pop add xor (bad) loope sub mov add sbb mov push cmp xor xchg jp mov aaa fs scas xchg addr16 add imul xor orb inc xchg push fs stos loopne ret fldcw xlat faddl sarb mov dec mov lret add mov (bad) movsb (bad) xchg dec or add aaa in call sbb aaa aas adc and jl add outsl fidivr test xor add and dec mov fcoms loop popa xor mov or inc mull and adc (bad) fcomp xor add jmp lock movsb cmp ljmp jae xor pusha xor pushf add sub nop mov shrl add inc decl in pop es addr16 clc mov xor add sub cwtl (bad) cmp rclb addr16 jp lock test clc xchg lock test add rclb sub lods leave orl scas add call xor and adc sub dec sarb test daa cld test divps xor mov mov cmp mov cmp into mov push cmp cmp cltd inc pop (bad) sbb jl push cmp add aas in fistpll xchg shr in cmp sub or fstps mov sbb fnstcw or popa adc lock mov fsubs cli shrb es xor je loop mov (bad) xchg test scas vaddsubps (bad) call data16 (bad) xor enter and push and cs stos test (bad) pop test fcom pop int or xchg test bound add sub mov or ret pop imul mov mov cmp jbe lret inc or mov stos xor xor gs fisubr push shr (bad) shl (bad) in sahf dec mov nop push xor xchg jp xor ja jmp nop (bad) sbb hlt dec sar or xor push jbe insb sub mov jl js inc inc movups mov add adc (bad) mov loop sub add and int sarb mov adc add inc xor cmp cwtl and (bad) cmc push pop xchg mov lret fistl pop movups jl add add fsubrs xchg xor insb add pop nop lods aam call cltd adc or sbb push sub dec dec cs adcb add outsl xchg loop and xor loopne mov sahf inc das mov lock add in pop add ret add cmp hlt jmp push pop or and add push xor lcall mov jmp loope orl mov adc inc subb add cmp les add pop and add data16 mov loopne mov repnz add inc stc subb mov nop arpl test cltd out inc or sbbb sub lock xchg mov testb xor add popa dec sub fs adc sbbb cmp dec enter test add hlt cltd inc or push sub jbe mov xchg add outsl lods mov add cmp enter add inc lods cs into ret push lods inc pop mov or call js cli inc push add pop pop dec mov gs movsb or pop add rcrb or jns ret xlat and or xchg test xchg add mov pop (bad) jo add ret cmpsb rclb sbb fchs adc cmpl lods adc inc or sbb test andl pop scas dec cld add lds fwait add popf ret push cmpb mov cmpsb mov cmp jne push test inc fs pop adc xor mov xor mov in mov xchg rcrl push jl adc pop movsb stos mov jnp jmp jmp fild pusha je stos lods (bad) mov add fldcw and pop mov add xchg jg mov mov fdivrs je dec or pop mov (bad) fisttp cmp rorb xchg sbb insb je cmp pop push and mov inc inc stos push dec pop out mov dec mov das dec dec dec repnz stos mov iret push push hlt (bad) jb fdivs adc fsubrs and push push xchg add pop daa cwtl push das aas ljmp in fs add int3 fistp dec int3 push popa jmp andl popa nop test jp mov dec and popa icebp (bad) dec pushf push pop adc ret lcall pop and cmp mov jb sub cmpl push bts xor cmpsl repnz stos repnz xor add jl outsb out push sub and push idivl dec stos lahf mov push add xor cli pop pop out or arpl idivb jg and lds mov mov in lcall mov mov nop xor inc cmpl pop rolb sbb out dec mov pushf xchg cmc xchg and dec or out cmc pop xor add mov xchg test ret int3 dec mov pop push cs inc addl or aas push mov out rcrl subl aad adc daa enter rcrl push fdivrp ficoml mov fstps jae or mov add inc sahf pop lahf fcmovnu push pop js cmc inc dec int3 lods cmp add mov jnp add sub out and rclb mov sti daa and push pop adc inc mov and pop stc mov (bad) mov push movsl dec cli cltd dec in repz mov pushf xchg mov mov into add ret call push push jmp and fistpl rolb pusha daa jge mul jg daa xchg inc add xor lret xchg fmuls enter xchg daa xlat inc fiaddl cs sub pop sub ffree pop jmp push aam jle aad mov cmp cli push jle jmp dec es (bad) and sahf xchg bound dec pop sarl add out dec xchg mov bndstx or scas ret and cs push pusha xchg sub xor mov dec fcompl sbb pop add push cmp jb stos in in into add mov pop jle scas sub push cld jmp cmp or incl xor repnz jns and in sub cltd lcall in mov sbb adc jp adc and outsb xor xor push adc push mov ds pop pushl xchg mov out mov dec fnstsw cmp jp cmc lods leave dec cmp pop add in xor xor push mov cs outsb aad or jnp dec add out dec pop scas mov dec mov sub mov mov push je ljmp imul (bad) pop cs sub cmc repz pop push add mov neg ja (bad) mov and pop jbe call dec xchg adc inc inc pmaxsw rcl (bad) in pop push mov add mov push mov jb orl push icebp test divl xchg or add push add mov mov dec cltd dec rorl xchg or fistpl lds mov lcall (bad) jle add (bad) adc testb sub inc add neg xor pop ret xor (bad) jecxz es mov lds push push idivb ficoml test push fsubrp jo pop add push pop dec sarl sar jo add loop xor pop xchg daa and fisttp daa pop std inc iret or and cmpsb leave and xchg sti or pcmpgtb mov out ds daa xchg cmp and cmp (bad) push icebp and lret jg rorb pmulhw mov call cld jb stos repnz pop push jnp mov fwait pop pop sub ss push adc push fldt adc xchg add loopne sbb mov dec ret or jg out lds movsl xor enter inc xchg push dec fwait inc (bad) fbstp jle push push stos or mov cmp sbb push sub mov pop sub pop lock and xlat xor rolb outsb add adc jbe sbbl push add fdivrs jne mov push push pop (bad) sbb push hlt into push jmp aas xlat adc or sbb movsl xchg mov push hlt mov pop out int cmp adc xor and lock mov stos xor rorl in aas push xorb out outsl cmp fistpl loopne out dec ja jo movsb lret das xor adc call mov (bad) data16 cmp add mov stos push xchg add into (bad) outsl jmp mov add repnz rcrl scas test cmp adc bound cs cmp pop pop and adc sub sub test or (bad) jnp adc jg push pop dec mov aad push xchg clc xchg mov pop leave je xchg pop negb xchg pop adc dec hlt inc cmp (bad) lods mov xor mov cmp loope jnp imul or iret arpl inc jns jmp jle insl shl idiv inc adc imul ficom imul test mov add and xor cmp leave adc lcall xchg cs rorb adc push adc dec fistpll lahf (bad) comiss xchg sbb mov adc and cmp inc outsb cmpsb cmovs shll sbb add mov adc adc jp in or sbb test add cld cmp call pushl popa pop ret enter inc sbb cmp outsl pop add movsb xchg sub adc pushf sub pop or mov jns pop dec sbb test adc in fnstsw xchg cmpsb ja (bad) sbb adc push daa push cmovbe imul or xor add test popa adc mov pusha xor cmp xor sub mov xchg iret or sti loopne sarb sub (bad) adc inc aad pop jno mov test xchg lods add cld add fidivr add enter adc jmp movsb aaa cwtl sbb or stc mov andb mov or xor popa in mov lea adc and je cltd sbb daa add mov xor mov es push test movsl xor (bad) pop nop sub je sbb sub loopne imul pop fiaddl or and rorb les xchg ret xchg je loopne (bad) cmp push pop pop pop in idiv flds mov fnop add loopne push addb inc xor scas dec add jg mov mov mov clts loopne mov movsb push dec ror sub sub je out test and pop cwtl sahf or mov test sub and add aam inc add data16 loopne imul adc notl and xor xchg xchg pusha add loopne mov adc add (bad) mov es or pushf add test scas nop sub clc xor cmp jns bswap popa jbe iret inc psllw andb add mov or inc adc cmc pop jge cmpsl push inc aam es add or jecxz ror adc push sbb flds sbb and adc icebp pop push jp add xor or sbb stc mov add or jle and cmp popa imul push flds ja add fsubrl mov fs adc xor adc and xchg and add adc mov push lcall rclb (bad) push and outsb je or inc test dec sub (bad) mov lods dec in mov (bad) scas pusha sbb xor adc inc xor fdivrs scas xor stos sbb inc adc sbb loopne xor push mov into add js mov clc nop nop cmp fcmovnbe les rcll rorb inc clc add movsl ret decl push es pop shr fmull sti addb add inc repz mov mov int3 push add (bad) push adc pop jle lds jo mov mov cmp xchg mov nop lods pavgw inc cmp or rcrb jo add repnz pop clc adcb addr16 add popl mov xchg adc int mov lods lahf inc mov sbb add xor pop aam push out pop addl add dec stos cmp and out mov xchg inc repnz les ljmp add sub mov xor inc out add xchg fld push jl scas rorb je xchg leave dec pop xor pop adc test xor and popf inc and push mov sbbb (bad) or test cld scas loope cld (bad) dec adcb je mov clc add jp cmpsb je xchg add mov mov movsl push jle adc rolb or scas aad clc sbb or js pop push cmp scas lods mov repz inc in push scas divb pop jmp adcb int3 rcl adc or clc push cld xchg ds adc je js pop jl adc ja addr16 adc sbb adc test clc mov jl fcomps dec mov scas pusha or mov jo cmpb and and dec xchg and add xor and cmp add out sub mov sub add and or dec adc inc push and lcall lods jl pop pushf sub enter push xchg and sbb ds inc mov cld out jl pop jle bound scas shl nop lret (bad) mov sbb mov imul xor jno xchg dec dec fmuls scas into test clc add pop xchg je mov add mov or inc fcompl pop bound sbb push imul nop sbb je nop fcomps loopne add adc xor test cmp xchg add mov fldcw je mov xchg sbb push push push arpl lret (bad) and pop mov mov pop dec call (bad) jne adc add adc add stos call cmp cld fwait push push lods ljmp dec mov hlt stos dec mov in in dec jl adcb loopne inc cmpb out into inc jl xchg mov sahf mov cmp push (bad) xor ljmp add (bad) xor sub mov lea imul add pop or add ror and or je mov adc mov stos cmp sbb pop adc push (bad) enter psubw lret add pop rolb or sbb out (bad) xlat and push in test or pop or dec jo mov fstps int3 mov push or xchg or sub inc movsb cltd loopne inc push cmp push test pop dec sbb test sbb inc xchg cmp jl outsl push add pop jg daa hlt xor inc add fistp mov popa sub mov cmp aam lods mov popa add push js dec dec adc fadds cmpl xchg mov mov add int3 xchg int add aas addr16 and lcall dec test inc sbb sub xor sbb xchg sub pop mov fs and rorl repnz shlb cmp loopne jns daa dec sub inc nop jge jle (bad) aaa cmp push cmp inc and sar xchg xchg in push xchg es lahf rcrl inc imul xchg leave stc and jb jns jo jmp xchg lods add and jle dec mov mov out fwait jmp test dec pop insb cs dec sbb scas pop dec or jp pop sbb push mov stos and xchg or hlt loopne (bad) mov pop je push cmp adc mov loopne iret aam push inc aaa jo jno add ret adc cmpsl adc lahf jns push add mov mov inc enter enter or xchg arpl imul jbe stos xor and cmp fs dec inc cmp and mov imul mulb mov cmp xchg mov addl test jns nop hlt add mov imul or mov mov sub jge adc andb add add push and nop and (bad) notl rcrl faddl sbb add lea and dec test or push pop fs call or add inc lock aad mov outsb in sahf not loopne inc add cmp movl lock push add add mov jmp pop xchg ret lret dec addps inc mov addb mov mov sub or rorb pusha ss cmpl cwtl mov arpl (bad) cmpsl mov jg call push sub (bad) xor xor test cld sbb (bad) mov mov out arpl inc sar adc dec test orb xor sbb daa cmp add fdivs cwtl sbb adc mov inc or sub lcall fcomps add fisubr mov mov repz dec loopne mov add ljmp roll mov dec inc lods loop fdivrp hlt jno rcrb or fwait repnz sbb clc and push mov ljmp clc imul js mov add jo cmp pusha inc lds pop add repnz aam or dec movsb roll sub xchg or orl lock mov and mov mov add mov push enter cmp pop (bad) adc sub out dec mov sub clc pusha pop jle aas push mov fidivr (bad) hlt sbb into ss inc imul cmp leave dec iret and adc inc dec jo push mov adc xchg dec pop sbb es add sbb outsl pop and iret dec adc lcall sbb test dec adc int3 xchg dec mov stc sti dec lods pop mov and jbe inc gs add test sub dec mov nop rorb pop mov cmp inc loop subb enter xor add xor nop adc inc dec or add push dec pop lock pop and popa lock je adc sbbb ret mov js push mov xor push adc mov jo icebp (bad) mov and add push (bad) rol stc dec push pop pop dec pop sahf or inc xchg fcompl xor (bad) xor cmpsl push pop enter dec out inc mov cwtl adc adc lahf push ja (bad) mov cmc or addb dec insb dec mov fstpl incb add sbb (bad) fnstenv cwtl cmpsb ret int3 xor adc jle dec popa dec int3 inc inc cltd sub dec enter mov les push sub (bad) add xor mov dec cwtl insl stos cmp inc mov add xlat pop push mov aad adc cmp hlt dec xor dec shll test mov ja inc cmp (bad) pushf pop xlat les cmp fwait or push je xchg outsb fs dec adc movups jg pop movsb pop sbb cmp stos icebp push adc rolb (bad) push mov (bad) pusha sbb cmpsl nop mov xor dec xchg push add dec or and sti add fimul dec push push dec cwtl fwait or cmp imul imul fwait pop (bad) out dec xchg pusha jl test enter xchg cwtl and loope call cmp cmp xor scas in inc mov cs mov imul stos (bad) scas add mov jecxz jnp sub sub sti cmpsb dec mov xor xor ret sub enter and adc add outsl mov and sub pop xor pushf inc fst loopne popa jmp dec hlt cmp lods ss clc test and sub leave test adc lods aam test xor mov push sub inc pop push xchg xor adc das xor mov push hlt ja outsb and mov adc fcom lret lahf sbb in inc jl (bad) mov or add cwtl mov adc out cli mov shl cmp fwait repnz in inc sbb sarb pop adc sbb jl scas sbb push jmp je,pt jb or and pop ror sub mov inc leave add push mov add add sub pop mov add clc scas or mov fsubrl lock and add movsb xchg in shr xchg cmpb cld sub jmp aas mov fnstcw pop cs sbb subb pusha sub leave jp mov pop pop cmpb sub inc dec add dec fcmovnbe nop jl cltd cmp jb into push xchg sub in dec jo mov sub outsb sbb xchg ss notb mov mov jbe aad mov xor push icebp int3 pop call fnstenv and shrb (bad) xchg xchg mov cli pop loope mov jp mov add push jns mov sbb pop pushf dec dec or inc in sbbb shr cld xchg and adc or cmpsl xchg es and mov pop cld xchg je push subl daa rorb jae scas xchg mov pop orb jae inc adc icebp fsubrs or pop or into adc adc sbb sbb jle nop (bad) not pop push inc adc or xor pusha xchg sbb sub fsubp fmuls dec aad sti fidivl jl mov add pushf pop dec and loopne mov or orb xchg mov pop clc sub cmp pusha and repnz dec xor xchg dec imul dec push jo sbb adc push dec xchg sbb (bad) loopne xor adc mov f2xm1 ljmp adc movsl (bad) hlt add fdiv fmuls call lret ds sahf rclb lods xor call mov and rcll adc sub enter sub lock xchg mov push push pop les jb dec cld dec mov fwait je loop and jo pusha iret push cmp cmpsb push int3 xchg inc cmp addb jle adc les movsb fist mov (bad) and xor xchg movsb xor and jne das pop inc pusha inc or dec pop cli imul mov mov pop rcrl mov fnstcw dec rolb sub push stos popa jnp dec or cmp mov mov push in hlt test ret mov aam sub push inc add les enter rorb mov xor adc ss (bad) sub sbb in mov scas sub je or ljmp lods mov add xor sbb fadds pop lock inc aam push and xor and add movsb mov dec lock add adc adc enter adc xchg ja test shrb mov lret xlat loopne jle lock pop dec prefetch add lret sbb aas mov adc and cmp or jecxz mov out call fidivr and mulb xor add xor add or cmp lock fsubs jge mov mov pop add jl stos pop cwtl inc movb sub out pop and mov mov push lods xor mov (bad) shrb mov xchg mov and lds mov repnz mov out cld dec pop lods and lds or push push in addr16 es es jnp add add add icebp repnz cmpsl cmpsb rcl mov sub add in repnz addb mov jl and jmp jbe push cwtl lret xchg mov xchg shld mov fldl enter sarb gs xor sbb iret add push mov push shlb fdivrs pop mov stos xor es add mov test pop sub add push and or pop add fs rcl xorl fsubrs inc add xchg add mov or sbb or stc rcll scas sub adc (bad) jns out sbb je,pt orl cmp cwtl loopne clc add jl dec push inc sbb dec aaa test dec std pop mov imul jge fxch hlt dec dec clc lss push mov fdivrs enter push inc or stc xlat mov jmp rcr sub xchg stos mov lods sahf pusha test mov jb push movsl (bad) test push mov jbe sbb fildll pushl sbb jmp add xchg push lret xor scas pop sub or mov or lods cld push mov xchg fs lret or cmpsb sub sbb adc or adc mov adc popa imul pop push and xchg push jae sub nop rclb mov mov js test and push or cmpsb lahf add incl leave sub push sub inc scas dec es and stos je dec xchg sbb or mov adc push pusha jle out sbb inc xor sub int cltd ror xchg add loopne clc je inc hlt dec dec in or lahf and and jl jl mov jo mov sub add push aam enter not xchg xor cld or (bad) loopne dec int3 jbe push adc xchg adc adc int adc adc dec leave jl or or dec cld inc lock or add add call mov sahf lret xorb sub mov movsbl in je bound adcb xchg add mov add mov inc cmp add sbb jl dec push aas add pop scas add add imul je fidivl test sbb les adc mov ret mov sub movsb movsb pop xchg adc in xchg xchg loopne (bad) (bad) nop andl sbb mov inc add pop or cmp lods add pushf jae mov into loopne jl xchg fwait xchg aaa test sub fnstsw inc and sub or scas xor xor jge mov add dec loop fmul shlb and xor xor mov inc xlat add mov mov sbb addb add aam pop scas es stos push imul xchg shlb cwtl xchg sbb or icebp mov ret or out adc daa jb pop int (bad) sub notb loope xor sti rorb sbb outsb mov lock movb leave (bad) icebp js loope movsb adc out and sub ficoml inc cmpsb outsb and or xchg movsl rdmsr es je pop dec mov pop ret call gs adc xlat xchg push mov xor (bad) cmp hlt and add (bad) mov fildll and fcompl cmp or scas (bad) xchg add sub out xor sti sbbb mov leave daa mov pop fbld imul jg iret or ret inc jecxz shrb add pop xor cld jbe addb push inc add mov mov mov xchg and loopne and sbb cmc add mov push lahf adc sbb add jbe fcoml pop dec add js push push dec enter fisub sbb (bad) ja (bad) aaa test add inc aas lahf cltd test ret mov sbb cwtl out push add inc mov (bad) push mov push and rolb adc add test dec mov sub test rorb mov andl mov test dec dec add les pusha cwtl mov fldl mov (bad) push call movsb int3 pop adc sub dec dec sbb sub insb jecxz dec pop adc add or pusha or add fcomps lods sti imul repz xor in rcl push jecxz add inc repnz sub sbbb mov cmp test sbb int3 cmp (bad) lahf inc or mov in les loopne adcl movl les dec jmp xchg pusha cmp push scas rep mov sub loopne aam jg push jne aam or sahf movsb jae imul int3 daa push icebp xor hlt add mov in sbb add test dec ret jl cwtl mov shrb ja mov hlt mov popa pop int3 (bad) jl loopne (bad) shrl add or add mov mov pop scas lds add sbb mov xor add cmpsb jne cld sub inc xor xorb insb mov pop add mov mov or sub clc add inc movd shrb les mov sti fs sub add mov add cli into loope jne fildll push inc repnz mov mov add ret std pop sub xchg mov (bad) out mov fdivrl push cld mov xor jl ss arpl sub dec xchg inc inc cld jae je adc clc mov ljmp aam mov shrb pop sbb inc daa das sub mov stos add add inc adc mov cmp jbe sbb stos rolb dec inc pop data16 in pushf mov push inc cmp test mov lahf out and daa push scas popa call lods ret test pop das nop xor inc mov call add insb push mov pop push add or enter or adc clc movsb mov (bad) cmp and cmp inc jns push cltd arpl sbb cwtl cmp xchg in mov mov int test xor sbb add jnp dec xchg adc mov clc stos jp pop jns add push sub stos mul jl adc cmp lcall xchg xchg nop mov inc cltd (bad) xor sub add push iret mov or in shrl mov in xchg les (bad) (bad) pop xchg push sbb mov sub mov (bad) std test cmpsl (bad) repnz or pop mov mov push push inc pop mov imul jo pop enter and loopne mov stos cmp rorb std mov push stc pop daa scas xchg mov mov cmp mov ret test adc cltd lock inc sbb pop push mov lea out scas and adc test or xchg rcrl mov xchg jbe repz das jb gs adc add shlb orb xchg dec xchg fsubs adc int3 sub or scas testb xor push inc orb scas push mov test movsl das adc test adc or mov test clc and mov addb jmp jbe mov jmp add testb jne pushf push sahf mov es inc stc and mov clc inc outsl cs push xchg cmp scas daa pop cmp xchg je pop sbb xor or and xchg pop or icebp call fdivrs fsubs adc xchg sbb dec xchg pop adc in mov pop or mov mov popa mov jb es cmp sbb test push or call stos xor sbb add (bad) in add add lahf shl lods in sbb dec es and xchg lcall xorb mov call push or icebp in xor fs inc lahf (bad) push add xchg repnz idivb push movsb dec call or es lods popf pop inc arpl dec cmpsl mov (bad) cmpsb jg add cli dec into (bad) jle xchg sti mov and and xchg xchg dec mov (bad) aam icebp out or (bad) push push xchg inc aas adc popa nop add test mov add aam push inc or and mov in adc call lock dec add loopne pop inc ficompl rorl cld xchg add jecxz gs sub arpl loope shlb fcoml divb data16 lods add sbb push lods nop push jl xor gs arpl es fcmovne test pushl push fs inc cmp add cmpsl ss or xchg pop mov sub add cmpsl cmp adc fldenv add or movups xor sahf xchg xor dec or lret mov ja hlt pop in add inc pop xor inc jb fcoms lret dec out test sbb sub ds js lock ds ljmp add test jg lods xor pop lds jo sbb mov fdivrs push fiaddl push inc sub mov stos test lods xchg add xlat je movsb pop mov and mov push int std push fistpl inc shlb nop icebp clc lahf inc xor pop stc cwtl xor or ds clc (bad) addr16 stc mov sub pop mov pusha jg lods aas xchg cld pop xchg aaa mov cwtl jne xchg inc push mov stos movsb addr16 push scas inc inc xor inc js mov in loop add pop mov sub push cli mov (bad) mov inc sbb push cltd pop bound js aas movsl sub (bad) outsb scas ret pusha adc or push jo fmuls ja sbb add jb into xchg add xchg push sub fisubl pop jle xchg and add das js push pop sub mov jmp das push movsb jnp repnz adc fiaddl xor movsb cmp test push inc inc aam lods enter data16 jns adc add mov arpl ret pop mov loope andb aad mov inc les test and arpl outsb push add push sub fcmovne in push dec mov mov cmp xchg aaa lods pop mov iret test add outsl cld or cwtl pop cmp pop rclb rcl add js mov lds dec scas gs xor sahf insb adc icebp add out pop jecxz scas inc sub xchg xor in mov gs and inc dec sbb das xor cwtl add add xchg jl ret push ja fs push add xchg pushf xchg stos push add fnsave mov or mov add fisubl test clc or jae add push ret (bad) popa cmp fdecstp cmp jge es mov add sub add xchg xchg jnp or pusha lods out add mov movsb cmp jnp xchg lds xchg push jo orb stos mov mov dec int hlt jbe (bad) jg xor sub fisttpl cld in mov lods mov inc pop nop cmpsb sbb and test cmp sbb cld in or mov jge cltd jbe sbb pop mov and loopne stos repnz push adcb or xor aas orb pop test (bad) lret (bad) xor fdivrs andb adc sbbl bnd xchg sbb xor add repz add loopne cwtl out push (bad) adc xor pop scas add and into mov xchg clc gs lea loop push movsb ret mov nop xor idiv xchg (bad) dec scas push fs sarb push pusha lret pop test xchg or repz mov mov sbb add shrb xchg mulb and test pop repz or sub or adc fwait call cli adc cmp sub (bad) xor inc scas imul orl mov call addl and lea adc xor dec or pop cs or xchg add mov je (bad) mov sub loope add call inc es (bad) rclb cli jne ss mov mov jl test mov sub scas lods mov pop mov dec mov sub lock (bad) loop (bad) sbb push jp mov jne dec xor adc and adc movsl arpl flds sub xchg sub or push stos je and jbe enter jle pop imul iret dec pop movsb cmp xchg outsl push sti add pop es gs rolb dec popf inc lea jg negb bound sub insl jp push jle push inc insb mov stc (bad) cld leave mov mov xchg lea add inc xor int3 rorb ljmp add stc push dec and sub rcrb or pop mov cmp or jno sbb add or cmp mov mov aas test push in lcall mov sbb sub outsb sub dec xor or push mov outsl and and loopne insb pusha scas xor outsl dec or xchg sbb cmpsl cmp lods loope pop (bad) adc sbb push xchg add jae dec mov xor jp ds mov add lret je xor xlat or (bad) adc divl mov mov jmp cmc les call jo loopne int rolb adc or add mov push nop shrl dec dec aam call pop dec dec adc adc in nop mov rolb inc adcl cmp pusha fcoms push loope dec mov add daa jmp push mov cmp jecxz and pushf iret test lock popa mov outsl xor jle or (bad) mov inc xor fs insb enter sbb leave out pusha bnd or (bad) xor push mov add sub mov test adc iret or shl je sbb sub mov xor jns sub dec jge std je cmp add pop hlt cmp mov stos es (bad) lock adc inc mov dec iret xor lods loopne inc dec andb leave or sub mov sub pop pop mov and xchg xchg mov pop mov icebp mov imull jo or scas pop stos add and mov add mov add mov stos jns add dec fmull repnz jmp add (bad) mov out imul adc pop std scas lock inc xchg je call fldl cli add test loopne sahf lret cwtl cmp int3 imul outsl pop jp (bad) insb pop cwtl mov cmpsb mov or sub insb fisttp mov nop (bad) jge push dec pop out mov loopne xchg push inc sub or mov sub add dec lahf adc cmpb cmp lea jl and loop nop (bad) xor pop das cs in sbb push loopne dec inc mov inc pop sarb arpl mov adc imul in dec and xchg jmp rcrl pushf sbb mov incl rclb and xchg call push sub lret enter adc scas orb sbb inc test cli cmp push and js xchg dec xor sbb jl rcll push or pusha adc nop bound pop faddp pusha add xchg movsb push xchg dec xchg mov (bad) cwtl movsb and clc cmpsl cmovno inc sub lods hlt pusha mov sbb clc or addl imul stos adc jmp (bad) or testl repz aam add lahf arpl ja shrb or int pop sub xor and addl add or les sub and mov mov arpl sub in daa cwtl xchg into pop aaa jns call icebp adc sbb push aas push movsl mov sbb popf std xchg mov or mov xchg or enter adc fdivl subl sbb test xor xchg or mov pop push push or jecxz sbb or inc jo pop cmp popa pushf inc test repz push sbb xlat aam dec push push and sarb clc mov cmp add pop jae sbb ja int3 std adcl adc stos sub dec adc push dec je add jg cmp inc enter out test iret pop add and mov andl loop hlt fcompl aad mov cld pushl ds and or push lock cs movsb test mov and and (bad) iret and mov sub or mov fldcw fcomip cmp pusha pop enter jmp lods (bad) adc pop or inc lock sub dec and fmul adc xchg bound adc xor fcompl xchg add icebp add mov xchg add lahf test adc adc pusha jle push xor out xor and orl loopne test arpl lds movsb lahf es movsb dec inc pushf leave and cwtl movsb lahf std pop mov and arpl pop and xchg addb add in test push fwait add add data16 sbb fs sbb jb jne adc and aam andl jle mov (bad) jae mov das cmp jl add daa stos mov sbb or aam push inc pusha xor fiaddl repnz test pop fiadd cltd inc push dec insl mov idiv lahf jg sbb and loop and xchg xchg add int (bad) aaa xor sahf pop adc jne sbb lods movsb push xchg sbb rclb in cld aaa subl std mov adc sahf xchg pushf or stos pop push aad pop rcrl inc aas lods ljmp icebp cmp pop addb xor ret push mov dec mov sahf je adc dec xor cmp nop stos lock outsl mov add inc jg inc popa xlat cld aad inc rep and xorb in (bad) lods js push lret inc shrb int or mov mov test dec xchg ret jle add xor sbbb (bad) insl movnti mov call or fisubrl xor arpl cmp jp inc sbb or js sbb cmp jge mov add push lahf sbb and add push jo ret jae and test add div lahf adc fsubs es inc add or pushf iret scas nop push pop negl cwtl xor sahf sub (bad) and sbb dec and mov (bad) jb aad movsl mov psubusb fstpl call pop fildl pusha push mov xor pop lret aaa or mov xchg aam or and loop dec std mov and rorb aaa call sub arpl mov xorl and js cwtl cmp out push sub faddl jne nop mov xlat mov add and add sbb cwtl icebp push sub sub inc sub jnp clc jg xor rcr push pop test mov sbbl dec and sti jnp and pop stos pop lods incl addb cmp dec cmc andl jnp and add mov cli adc xor fstpl gs sbb sub inc and cmp push dec mov ss sbb sub pusha (bad) mov push mov and lods inc (bad) rclb jl and push dec cltd push inc lahf xchg inc or mov pushf loop cmpsl hlt test ja nop pushf add inc out out call (bad) je int3 ficoml sbbl push sti add push movsl inc rolb pop call incb jp int3 or dec ret cld add outsb cli xchg add mov push add (bad) div imul cli incl mov push dec icebp testb sbb jb shrb add insl add leave scas cmp lock bound or sbbb int loopne inc xor js adc movsb pop jl adc xor imull mov and xchg mov int sbb push sti aam mov and lahf sub rclb dec mov bound xor sar mov add cwtl mov adc scas add mov or cmp pop arpl cli dec add mov xlat cmp jne lods insb negl mov push cmp jg adc shlb add iret and imul ljmp shr push mov ljmp int mov stc add stos push scas inc mov cmpsl xchg (bad) movsb rol pop les inc nop cmp xchg repnz out enter lahf shrl cmpl add jl aam adc sahf pop mov mov or jle pop mov scas lret rclb push or mov pop daa mov cmpsb pop ss addr16 inc inc xchg fisttp adc lret jb les or dec mov outsl mov es jne mov je iret mov add push xor sub and iret loope inc jno dec pop icebp pop gs dec mov lock sub adc je imul (bad) imul (bad) (bad) and xchg test fs dec add and jo in xor call imul sbb add clc inc paddd pop add sbb pop cmp add aad xor jbe pop pop inc pop cmp adc sarb lods push pop push andl or dec and std mov inc lds lret sub cwtl imulb sahf es add movsb push movsb sub sub sub in xor ss dec movsb sarb adc les xor enter mov clc mov repz jg jl dec xchg dec (bad) icebp adc scas add push lahf adcl fdivrs xorl negl add mov or inc inc add adc push rorl dec cmp in pop xor lea and mov arpl hlt int3 out sahf xor mov jmp add pop add adc mov mov lods dec mov adc pop outsb sub mov dec xor test inc and aad or mov mov in movb mov test rorb and cmp xor in xchg pop and add xor cltd pop test add jmp pusha sbb jns lods cmp lods lret inc clc inc aad push add fist mov and adc dec enter xor movl pusha pop sti mov stc pusha or dec jae movsb xchg cmp sub je (bad) jbe xchg test stc rorl push sub scas outsl arpl pop pop or fadds aad push adc or push repnz js in adc inc lcall adc adc lret xchg rcr test loopne,pt mov sbb insl xor push jno cld add adc sbb aam xor cmpsb imul loop inc push sbb inc inc icebp push orb nop adc dec mov rclb and add mov add pop (bad) sbb mov popl bound adc xlat andb js push add sar stos lret imul adcl push loopne inc bound pop popa mov dec or and faddl fadds lret fcmovnb iret jb mov enter ja mov inc pop clc fidivr jecxz test into jl mov movsb js add les das mov addr16 pop cld xor (bad) and cmpsb test movsb pop fcoms scas repnz push jg inc mov jno data16 jb add cmpsl or jl mov cmp shr notb scas inc jo fcompl or (bad) (bad) jnp pop dec pushf pop xor je sub enter iret fisub cld push jne pop cld out lret testb xor xchg gs cmpsl test in xchg lret mov inc cmp (bad) orb xor test push lret out dec xor jl sub out mov dec sarb aad loope dec int3 cmp sub and mov mov pop or in push xchg inc or ficoml or aas adc cltd (bad) lock jno lea loop add add test add sub in adc leave pushf push mov or sub adc sub jns or inc mov call lods mov add xor icebp lret add xchg (bad) rol xor jg add int push mov mov sti mov cmp cmp cmp rol mov xor sub aas std add in mov jg test cs cmpsl loopne rolb arpl sti push add test or or push data16 lret jnp add cltd adc xlat rcl in enter xor xchg push inc ret inc cli sub add stos nop cltd pop fs jae mov add jecxz push lea int3 add out in fs imul dec or sub ds push xor movsb add inc xchg cli dec lods cmp or inc jbe cwtl flds pusha divl decb aad xchg faddl mov sti sbb xchg add pop xor call inc test test add xor lret or movsb add push jns jnp lock or in fsubs jb xor add iret out dec cmpsb sbb fidivr inc cwtl sub and lret jns jl jo inc out add data16 add add fsub sub xchg pop inc add push ss inc dec cld pop add mov or inc orb fisubrl add stos iret push add pop loope add scas pushaw pop insl ljmp ja add add das push or shrb sub aad lods js mov lock xor push ret fcomp add push xor fbld xorb jb bound add nop scas inc popf xchg and adcl loopne pop sub andl repnz (bad) mov je sub or test js mov rcrb in adc pushf hlt push lods cld add pop pop mov sar cmp sub aaa add fldcw fdivrs rolb pop pop jp pop popf pop pop inc hlt pop xor jb cmp adc add and ljmp into mov insl loope inc or xor xor fmul or inc adc fldl and xchg lea les pushf dec jl dec rclb sub pop adc aam xor hlt ja (bad) sub cmp xor add cld mov add fs and fldl mov xchg xorb popa cmp jl lock pop addl in sub call in add fbstp dec aas add leave inc ss popa add xor repz jg jl xor fcompl enter loope xor pushf xor arpl shlb dec iret mov movsb xor loop dec and add adc jl add add pop inc pusha ja cmpsl pop or jecxz cmp sbb jns fcoms xchg mov or lock add mov stos es js adc aad pop push push mov adc js push popf jae ss or fdivs mov les fs xor mov in ja pop dec mov insb pop adc xchg loope loopne mov in add xor pusha (bad) popa adc pop sbb out pop das mov lret call mov test push in add ror or movsb cmp or jno pop mov xchg cmpsl popa mov dec inc inc mov jecxz mov jb or cld sbb cwtl add rcrl inc fild pop dec loope pushf adc mov or cltd push push cld mov inc nop fistpll cmp ficomp pusha loopne mov sbb mov iret xor stc or out scas pop in cmc fimull cs ss outsl mov pop or jl repnz pop in lcall rolb push jb push adcb inc mulb mov fdivrs inc pop jg mov jecxz sub lods or addb (bad) cmp add outsl lret cld int (bad) inc aam or mov xlat test pop hlt sub jbe,pn in add movsb std mov insl add mov push cmp rorl popa jle xor and push clc ret icebp xor add dec fldcw or sahf mov sub add xor xchg (bad) mov sub cvtdq2ps movsb loope inc or push call adcl (bad) sbb out pop adc int3 add sarl sub imul pop add push adc mov mulb add fisubr in repz ret add scas fsubs inc les in jge scas andb cmp data16 mov push jns nop lea or or sbbb nop fdiv mov mov sub mov xorb out fidivrl xchg movsl xor dec mov rclb neg rcrl push lods arpl cld or rol cmc push lods aaa add push sbb stc inc mov dec adc jae cmpsb mov into jnp je pop adc add mov js shll insb sbb jns movsb fcmovne adc std cs scas lods lea cld sub cmp faddl imul popf pop pusha enter aam xchg cwtl jle in jl cltd adc ret lds mov cld std fs push repnz pop das and add dec inc (bad) aad adc add call pop (bad) jae add or xchg cmp cmpsb inc adc (bad) jno outsl jmp sti lret xor or addr16 xlat dec lods jb cmp dec mov js cmp adc leave scas add das dec cli adc inc push sbb sbb or out aaa orb xchg sbb fs mov lods nop add jb std movsl outsl loope pop mov adc sub jns pop mov add or cmp jb popa sub dec mov jb pop mov clc mov fsubs or (bad) adc roll loopne outsl js psubq mov bound add xor dec movq lock test daa loop adc adc xor sbb test dec test or fs dec pushf and (bad) icebp or leave mov fdiv jbe popf add pop mov insb gs cmpsl mov (bad) lret add push out add shr inc int3 cwtl pop xor inc je (bad) adc arpl add lcall ficompl adc leave repnz push pop test add xlat cmp ja fcoml adcb pop rolb jbe sbb arpl (bad) fcmovnbe rcrb stos jne nop adc cli loopne imul lock cmp push orl in loop icebp inc movb push hlt dec pop add sti icebp nop adc mov loopne mov and mov inc sbb xchg add mov adc jb sti ret out sbb xorl pusha push pop enter mov mov add xor ss jno (bad) mov xchg push add nop xchg inc cmp jne add lock dec sbb mov sub xchg addr16 inc arpl add push dec enter std cmp inc inc fsub (bad) mov adc or push jl sub lods push rol mov ficom jl dec fsubrs aad or lret jmp push sub cwtl push int adc dec arpl jl es imul sarl lock xchg or je movsb and xchg out sub fstpt jnp enter push loope inc fstpl sub clc out sbb mov dec les aaa inc scas cmp adc outsl loopne sarl mov daa mov adc dec xchg push xorl adc mov inc rcrl cmp lret std popa hlt (bad) rclb in and or adc js pop xor lods cli movsb add xchg jo sub or xchg xor hlt pushf hlt pop imul xchg xchg insb fdiv pop movsl sbb cmp aaa leave xlat inc adc enter xor add int push js push sub adc stc dec gs jno ss pop or mulb sbb shrl add icebp (bad) hlt jb pop dec or inc roll push xlat fimul enter jb mov or jp or xchg cwtl aad pop stc cmp jae fimul in (bad) add mov pop pop std je inc or fdivl jb cmp stc cmp (bad) call and xor jno add fwait jb add adc push add es mov cmp mov mov (bad) cmc mov pop fiaddl mov fdiv fs hlt sub clc ret push je push pop jl arpl mov xlat aas pop in pop jno push in inc call stos xchg je or jle int3 or and mov imul std xor into stos adc xorb add fidivr scas jns sub ret jno nop sub stos adc xorl jae aas shll stc (bad) mov adc inc fidivl data16 xchg and mov cmp jns out push outsl sbb icebp arpl push cmp in add (bad) test jno cwtl aas xor xchg jo shlb scas xor mov sahf xor inc mov lea mov pop dec jno or stos mov icebp or add cvtpi2ps std arpl setno xor adc add outsb mov imul add test pop mov inc sbb pop loop fs jae sbbb xchg lret out ss add fldenv fs or sbb push popa sti cltd (bad) fcomp test or mov pop out jbe add or adc out inc mov cs cmp (bad) sbb push add lock jns cmpsl cli jno xor lahf mov imul fcomps mov decl dec add in and xor dec sub shrl xchg test cmp js lahf mov cmp test add adcl add notb jecxz xor addl push insb adc hlt (bad) cld fisubrl mov pop out xchg lods nop fcoms sbb inc insb add sar cmpsl or fstps mov sub xchg mov das imul or adc xor cltd stc pusha mov push ret push adc test cmpsl xor lahf incb dec jp mulb push out ret sub (bad) lock and xchg inc or ja testb sub mov mov fsub das xchg repz mov sahf jmp int3 or and mov sub or cmpsl lods outsb dec aaa popa ja shrb pop add lcall in mov mov xchg push nop ret jg add mov inc movsl jb cmovb and mov add movb adc jg and dec addr16 das push cmpsl adc fmull (bad) jbe and sbbb mov imul repz (bad) jo insb inc mov stos aam rcrb movsl push sub add fsubrl rcrb jns hlt andb in jno je add inc test xchg or push stos xchg xor js lock cmp mov inc jns loopne or add and sub ss push add testb (bad) cmp adc imul push into divl sbb and loopne push test jbe mov stos xchg int3 in pop lds add sti cmp add adcb mov inc fs pop push sbb cmp les jo sarl lods test pushf add jnp scas hlt and xor test xchg or pusha dec cld add incb add sub andb cmpsl and repz inc in and (bad) pop (bad) dec lahf (bad) int3 fdivs lock and xor lods imul repz enter lcall add mov arpl inc repz and popa aaa adc (bad) mov repnz daa das sub test adc gs (bad) lock inc outsl push daa int3 dec test fxch push pushf arpl add push rolb add and and adc xor addl js in enter repz and out cmp jl fucomip xor movl lods adc push mov pushf xor repnz ja and add sub sub pop add lods jb,pn push sbb or xchg scas push rolb adc push dec push xor add or xor adc mov add lret xor cld ja or push pop hlt scas imul jmp add das pop and shll std ret test aam inc clc jne cmc sub xor xchg in dec (bad) cmp pusha leave js mov cwtl rolb adc fadds fstl andb nop jmp aas xor add inc fisttpl xor or popf cmp lret lock inc jmp popa add mov sbb adc or and das jno lret jg iret mov fcmove add dec test sbb sbb sub add sahf gs shrb dec pop fcomps add ret fisubr es pop xchg pop sub shl add xchg sub outsl test testb lret lcall mov adc lock clc mov cs test js inc mov or cmpsl and nop xor imul add pop pusha (bad) xor jb mov loope int in ret add call xchg mov test outsl add adc xor mov and fprem dec sbbl and pop mov hlt lret fs (bad) pushf add pop arpl subl mov mov jg add jb xchg sbb dec dec add xor mov push cld add (bad) lock outsl or xlat adc int3 mov hlt lahf shrb cmp xchg movsb adc aaa insb test add sbb movsb dec or sbbb pop pop sbb mov test mov adc das xor cmp shrl or in sti and sarb cmpl adc adc push (bad) or subb mov push add mov mov mov (bad) sar test jne cmp mov enter dec or sub mov aam add (bad) stos popf mov xchg cmp or mov outsb pop xchg or in enter cmpl ja cmp adc sbb and cmp sbb cmp mov adc xor dec push ljmp push sbb xorl cmp vmovss mov xor adcb and test add pop aam aam jp sbb pop fdivl test xchg pop fs push imul fstps mov cwtl js hlt jns icebp test add lahf xchg lds roll xor xor sub movsb loop test leave sbb movsb adc sbb js adc popf add (bad) dec sub push inc orl inc hlt cmpl jb repnz add cwtl add mov fdiv mov hlt cs fs pop je test clc sbb clc push pop and xchg clc xchg out inc nop aam or jne inc movsl jae push adc (bad) push je mov mov add or pop sbb mov das int3 lcall mov popa faddl sub test cwtl inc add mov dec sub xchg dec push xlat mov xrelease sbb cmp sbb cwtl xor inc add mov or nop xor dec mov movsb inc les test mov or cli adc je imul loop xor and test pusha dec push adc jno cwtl add pop (bad) pop loopne lret jp inc and add mov movsb sub rclb dec push sub or test add xchg inc dec clc and xor push mov lea mov mov xor mov imul orb sahf std inc stc jne sarl add stos jle push xchg rclb lret xor adc adc sub and addb js pop int3 iret add mov orb (bad) adc shrd (bad) jae test and cmpsb int or (bad) stc sub lods icebp sbb add lret xor fimull inc or test sub cld shll sbb or push pusha adc and xlat push sub adc int fistl scas dec pop lea xlat repnz add es fs mov xchg sub mov inc and icebp add sarl lret fmull clc sbb iret or test les add cwtl mov leave xchg cmp mov shll xchg pushf test sub mov xchg enter dec into lahf cmp mov fsubs nop cld cmpsl lcall pusha adc dec xor mov rcrl mov iret (bad) hlt mov or and mov xor ret pushf pusha in leave inc subb mov xor and test lahf bound mov scas hlt (bad) clc xor pop push push or mov aas (bad) adc mov dec imul or insb pushf dec orb mov addr16 jl push incb fmuls icebp stos daa or nop lds sbbb test test xchg push in mov xchg lahf mov pop (bad) int3 mov fdivrl inc outsl xor cltd cwtl mov scas cwtl in jle lret negl das and jb push jmp pop aas lods shrb insb les inc inc aam push hlt sarl int3 test and xor addb int inc outsb imul jge repnz cld lods rsm mov mov push sbb jmp arpl add xchg push xchg jge mov test jp rolb sub and fs pop push (bad) mov insl or mov test fwait cmp cmp dec addl dec popf mov add sub add mov test test mov (bad) stos outsb add jmp xorl push sub cmpxchg popa pop int rolb fs inc shrb sub inc push add or mov daa push sub or lds add popa data16 lea push ss xchg je xor mov sbb sbb std xchg inc adc fadd or mov adc push adc jnp or (bad) jae rcl int3 dec lods mov into imul add jmp push ds mov dec mov push mov stos add out push dec adc inc add jb lds push pusha cmc bound int3 mov mov aam test ret call add push pop jno enter pop push loop lock inc add neg and lcall adc in jae mov push (bad) fs dec loope pusha push adc add xchg xlat push mov icebp pushf and rcrb adc mov int3 lea clc inc cmp push dec mov xchg std cmp popf adc push cmp add xchg imul in mov mov movaps push fbstp add das pop mov pop and loope push lahf lret xlat gs mov dec test aas clc xor mov add loopne push test pop out mov sbb jbe lods xlat imul push (bad) cmp inc pusha pusha fs cmp pop icebp ror nop cmp adc or xchg aad adc int mov (bad) or ja dec or dec (bad) sar dec repz jp stos ret js std aaa mov lret inc push jo dec (bad) mov lock jl add dec mov leave out ret mov cmpl inc push addr16 pop dec pusha lret jno dec out jp sbb dec pusha push push lods cli jbe les xchg sarl cmpsl orb sarb and outsb (bad) loopne push inc xor shrl inc int3 push imul sbb fiadd stos cld or inc dec mov lcall test push nop xchg cmpsl ret mov pusha mov cltd dec pop movsb adc outsb pushl shlb push cmp or aaa hlt sti arpl push sahf adc in and fistpll add xlat pop movsb sub hlt out lret stos test or icebp add rcl dec mov sbb data16 test sub xchg lock repz inc imulb mov out mov cmp inc mov jge sub or push jo fcompl mov cltd lock push pushf out sar and adc jg push xor jnp add lcall jbe mov (bad) pop pop cmpsb cmpsl fistpll fsubl dec movsb push stos xchg test (bad) lret sub sub iret add repz cli inc idivb xor sbb xchg ret in xchg add dec lret and sub mov mov adc (bad) pusha dec aad rcrl fsub popf cmp aas cmovle movsb inc imul or jo xor fsubs stos ret sbb mov imul adc lods add fxch pop inc dec aaa add mov (bad) shlb mov push enter mov cmpsl lds dec cmp pushf push sub push xchg xor (bad) mov and sbb mov push ret inc sahf leave xchg pusha dec add call mov push push inc push mov jne sub dec in lea in fwait outsl ja aam (bad) mov mov sar repz loope std push xor mov subl jmp addr16 rolb jne stos sub mov nop adc push repnz lahf dec dec ljmp je or dec xchg and and mov insb mov lock sbb dec xchg add aaa bnd mov std cmp inc inc xor in xchg lods push xor push adc and mov dec adcl ret fistpl sbb inc lods and or movsb inc or addb out lea lods inc dec fimul sbb add mov xor adc push sbb pop call mov (bad) sbb cmc daa mov mov in andl mov and and inc or punpcklbw je dec jl andb mov inc (bad) orb rolb push (bad) lret inc sub dec (bad) mov cmp or mov daa cwtl add insb push insl je add jae cmpsl popf xchg or hlt xor and push xchg loopne gs pusha shr aaa mov (bad) xor mov sub dec xor mov lret mov cmp orl stc push mov mov inc lea imul pop xchg cmp and and push std mov cmp nop and and and or mov jl adc or mov orb or adc pop dec dec pusha inc cmp shrb movsl pop loop or cwtl or iret push sbb repz dec xor push js leave or addl push test push test mov xor pushf loope hlt enter sub cltd (bad) cmp mov addb xor jne push cmpsl lock popl dec bound pusha imul add adcl adc pop add (bad) and loop pusha mov add jp xchg dec push mov add xor jns lahf adc leave fidiv push ret xchg inc sub dec aad mov movsl add ja addb push or jns mov dec dec mov xchg or (bad) movsl loopne dec xor (bad) popa shlb notl leave stos cmp mov jnp mov mov sbbb xchg rcrb dec dec push dec lock lea int dec bound (bad) mov outsb mov jb mov sub aaa call lcall sub adc out push mov hlt mov lret pop mov lret or (bad) lret test in dec mov inc mov inc mov ret pop add sub imul lods iret sbb push add nop cmpsl mov repnz leave or cs clc out loop xor inc inc push aad sbb cld add enter int3 xchg pusha mov cmp xchg (bad) mul cmc or cmp and sbb inc enter scas (bad) mov push lret stos and aas lock out movsb cmpsl hlt push insb test inc jmp inc hlt les mov movsb dec push mov lret popa pop jmp xor mov mov int3 mov and add cmp dec mov test mov xor mov hlt mov mov jne shrb cmp jge mov sbb pop add inc ljmp in dec cld sub xchg repnz stc popf mov leave push or sbb or add int xor js (bad) and push orb xchg movl pop inc xor or shll mov fsubr (bad) mov pop fcomp jecxz push and fidivl mov xchg cmc lock imulw ffreep rorb and push add push hlt mov pusha pushf jne or mov push iret mov jmp movsl or popl cmpsb add inc enter je add cld pop mov std mov cmp popa leave fsubs dec fildl sub inc mov cmpb lret popa add push rcrb or movsb (bad) jecxz shlb shl loop sbb les or sbb or pmaxub sub pop movsb rol xchg fdivr adc push fs outsl xchg (bad) mov xor cmc xor jb sbb push cmc jnp adc std nop ss js xchg xor jae mov rcr dec adc ror bound pushf mov inc dec in adc mov push in (bad) sub inc jae xchg push push popa movsl push ret mov cmp push or lods sbb mov xlat popa cmpb add sbb les push int3 jbe ds enter push in pop or lods popa lea shrb push add xchg mov call stc jl addr16 mov dec push mov lock fistp rorl out mov sub cmp jne or cmc add mov adc ds cmp push adc jbe popa in mov push lds and adc jbe xchg sub fcomp inc inc cmpsl out jecxz jecxz sbb lds ret loopne ds imul imul mov xor pop sbb insl mov and clc add test icebp xchg addb mov cmpl cmp mov lret (bad) xor nop xchg ljmp nop add add add xor push leave xchg mov int add add movsb add pop fisub push in xchg jo negl inc out stos xchg dec sub stos xchg add fmull (bad) aam or insb push push dec cs ja cmp mov arpl sub lock (bad) sahf push jae nop hlt jb cwtl test add push xor lahf test js xor hlt dec sub inc cmp inc data16 jmp cltd mov or test dec addr16 in xchg xor insb jae adc mov fadd lock pop vorps jnp cmp pop xchg or pop stc fimul push mov jo pop pop or jo ljmp xchg out push sub (bad) mov sbb test nop cltd andl cmpsb cwtl std or imul nopl xchg sbb inc clc sbb adc add xchg mov in jno add pop dec add cmp ret or test mov test loopne xchg ret push pusha sbb rcrl jo adc test sub (bad) in or lea testl inc or or jno add pushf push dec insl pop (bad) sub insb push cmpsl add (bad) xchg xor xchg (bad) or inc push cmp (bad) cmp adc sarl and and pop rclb (bad) add inc test mov sbb sub pushf and adcb (bad) and add aaa mov lock push test or adc fistl pop fbld xorl adc pop mov into xchg arpl or rcl call icebp pop cmp adc test pop mov sbb sub mov std jp jbe jne int3 jo inc lcall cltd adc add pusha mov add adc pop push cs sub rcl lcall sbb add popl sub inc xor push (bad) call push (bad) or sti push dec pop add mov fldl2t and jno add movsl add xchg popf imul pop stos cmp test les test mov rcr and jmp jb sbb add js fcomip cli ja adc iret stos andb push inc jle js add inc add xchg loop cli add push mov jg add xchg dec rol cmp jb movsb arpl add shr nop xchg xor adc arpl sbb or test xchg mov rolb push dec mov pop push outsl xchg in xlat sub clc inc js pop mov int and in lock adc adc sub pop or test add int3 lods xchg sub xchg cwtl add (bad) mov cld cmp add fist aam lret push and mov adc loopne dec imul xor xchg adc xchg rolb in cmc mov cmp bound sub mov sub dec dec push out xorb outsl mov adc lods enter pop (bad) jmp sub adc sbb clc pushw imul or adc int3 add add push paddusb (bad) out cmp mov orb xor cmp cmpsl dec push shr js push jb adc andl shrl mov aas pop xchg out mov in pop and cld jmp dec inc add test test sbb pusha jno loope popa pop (bad) dec jl mov ror add cmp add jl inc sbb sbb repnz mov xchg cmp sub adc orb pop lfs inc and rolb rclb dec aaa hlt xor jns stc xor sahf je xchg cmp rcrb or mov sub aam xchg sub mov add adc clc dec add push mov sub sub dec (bad) add add daa call sub push dec sbb sbb mov inc hlt cmp xor pop in and jl stos sbb jecxz aam and inc ja add add cmp je add cmp inc jge,pn jae push icebp in insb cmpsb jo add (bad) int xor cmp pop push roll inc mov dec mov cld push adc hlt pop or mov inc inc repz test add push (bad) pusha dec push add xchg je bound nop add pop (bad) mov mov and jnp xchg insb adc hlt outsb inc sbb (bad) and mul pusha cltd xor punpckldq cwtl cmp push dec xchg je lock fnsave lret or test xorb push mov dec xor xor push outsl adc xor cmp test or and sbb add and addr16 test in xchg lock inc (bad) inc jno add and ljmp mov xchg aaa loopne push daa data16 sbb enter pop dec xchg push adc inc vmovaps jl rcr sub add jb pusha enter daa xchg lock and pslld ret dec sbb sub cwtl sub cltd shlb mov ret sti shll jno rol sbb cld mov jae aas add aad or daa and pop outsl push js xor les inc xchg push adc jnp dec add imul xchg mov rcrl les inc jmp cmp lret and sub les sbb jno cmp nop nop sub push cltd ret mov dec fs cmp mov xchg lahf gs adc popf add add sbb jo mov inc punpcklbw or cmp sbb sub xor int xor int imul inc pop add cmpsl repz adc out sub pusha jge or ficomp orl js push add add add cmp cmp adc sub call sbb stos jne pop inc test mov mov xorb push jns sarb jp sub (bad) sbb mov fstps sub sbb jg mov adc and adc or pop cmp roll xchg js cmp in je in mov and jns test mov lock push mov xor add cltd iret sbb or adc fcmovnb sub or fmull sub fcoms incl cwtl xchg jg outsl mov xor sbb adc jbe sbb sub xor push mov sbbl mov jg jge sbb loope pop icebp (bad) je pop sbb xchg push pusha enter cmp ds sbb mov and adc test es shrl xchg hlt and (bad) mov push rolb idivl add shrl mov mov ds and je (bad) test movsb (bad) sarb push popa (bad) fwait xchg dec mov scas in clc add rolb stos inc xor mov cmp aam xor stos xor shrb cs mov sub and or mov cmc imul add daa and jns mov xchg fs enter and int3 mov and pop faddl jo repz add xchg lret outsl arpl mov movsl inc in or dec pusha lods popa out divb sub mov movsl sbb test dec repz add ret lea or leave lret sahf call inc jns dec dec cmp jl adc leave movsb test lods push inc rolb sbb test mov mov and out or fdivrl add add (bad) xor cmp push pop adc data16 xchg jb inc movsb mov cmp loopne fdiv shl pusha and ror pop mov inc xchg add xor pusha lahf in cmp add jl into mov test sbb xchg sub dec test or inc cmp adc lcall frstor ret jnp pushf push fidiv add mov cmpsl sbb mov and mov adc (bad) rorb cmp repnz rcll gs mov pusha cmc sbb (bad) jl lods xchg jns int3 sbb add rcll leave sbb pop pop mov inc dec or mov xchg sub jo mov sub inc adc xchg mov pusha adc push (bad) aam mov popa inc dec call mov mov push inc in stc out sub stos sub sarb cmpb mov dec add xchg sbb adc sub rolb push aad inc test int3 sub ficom add jmp fdivrl das push dec xchg mov xchg or les stc mov (bad) push or les inc in mov or es dec push out fnsave jo sub cld mov in loopne mov xchg xor push and and xchg sti ret sub nop ljmp lahf dec iret xorl call push xchg or jmp sub rorb mov jecxz mov lods cltd fucomp and jne add repz cwtl fs sti cwtl imul lods pop add lcall or (bad) or jns mov sbb adc xor clc stos or add mov or insl adc les dec es fadd lods push daa jp mov adc pop test decl loop sub cmp ret les jb xor mov inc or xorb mov inc pop (bad) arpl aas or sub in cltd xchg or nop movsb push mov add and sbb lock inc bound pop (bad) sysexit and jno cwtl mov (bad) and sub pop movb in or js mov imul es cwtl add lret mov mov xor lods repnz in sub jecxz clc mov add in jb ds xchg movsl popa out pop add rol cmc not and insl jmp lcall push xchg dec mov pop or and stc pop mov test xchg or lds inc por cmp addr16 and rolb inc in movsl push loopne adc inc pusha add stc mov mov loopne push pusha pop mov dec fs mov add mov (bad) pop mov jo mov sub movsb out add xchg xor (bad) jns xchg add inc aaa imul ljmp (bad) mov pop out shll push subl aas sub push clc in and dec lret adc mov or sub push (bad) sub dec mov sbb clc (bad) pop xor push mov lahf mov push clc mov pop mov pop lahf xor sub iret push dec mov lret jmp xchg cli loopne stc mov addr16 jno sti mov test mov loop xchg mov icebp dec mov push dec int3 inc rcll dec loop cmp and dec xor rorl aaa test xchg dec add inc ja stc sahf dec push push xor dec push movsl add dec call add pop (bad) adc fs fisub lods cmp test lds push push mov add xor jle or xor fwait push (bad) mov inc sbb jmp adc loopne push mov rorb jae xchg mov ficompl mov mov loopne loope mov mov dec push dec inc lods xchg andb push mov fmulp mov sub cmp int3 add add outsb pop adc pusha dec push pop repnz push lahf nop fsubs sub insl cmp loop jle push (bad) loope clc aas (bad) dec push cmp jo mov imul aaa or and das sbb pop fmull add imul ficomp push stos mov call push hlt inc push inc stc gs add shrl cmp and add mov fmul lcall lea adc or cmp jo push sub inc sbb dec aaa mov in addl and std das cmp xor jb (bad) mov sbb mov pop lahf push and cmp adcb push leave inc xchg call jns dec inc nop addb push jae addb or pop sub sbb push aad or test pop les out inc jmp jmp lods lret adc imul or adc push sbb (bad) lock inc mov lods xor popa adc dec inc mov mov and hlt repnz push sub mov pusha imul add ret jno sbb or sbb xchg je rclb dec into push fwait add test push in pusha xchg lods lahf mov or sbb mov in adc test mov inc in and jnp mov out add or das scas lcallw lds loopne xlat enter inc adc sarb dec aad test and xrelease stos das cmc sbb sub dec jb lods aas add push jl inc fisttpl lahf push lods (bad) bts sub (bad) popa cs mov or div (bad) fisttpl mov push add mov shlb insb pop sbb add cltd cmpsl divl (bad) mov cmp lock inc sub stos push or sbb lret cmp mov xchg dec sub inc lret nop mov push loopne sbb cltd cmp pop xor xchg xor pusha inc mov sub push sar fs aas push cmp jle fmull (bad) popf dec xor pop enter and push das in inc jmp nop stc xchg inc cmp int (bad) mov jne sbb (bad) xor adc aam add add mov add and xchg stc and testb inc cwtl sbb lds inc test mov fsubs pop ss loop and or negb out data16 aaa and ja jae iret xor aas lds adc cmpsl jbe xchg rclb and imul jne xchg test insl mov sbb sbb sub add xor sub add xchg pop (bad) out xor pop lret aas cld inc mov xchg enter and xchg mov mov pop xorb push mov pusha and xchg cwtl sub adc data16 jp xchg js add dec in sbb sub xchg pop mov and inc dec push js ss jo dec jno cmp cmpsl test cmpb inc pop lret inc roll push es stc dec clc and push or call xchg push jb xor jge mov lahf mov stos add or movsb and mov lcall adc or mov rcrl dec xor sub dec cwtl cmp sub add and and inc dec or xlat dec inc pop roll dec int3 out iret sub mov mov hlt adc xchg push (bad) xor mov popf daa add mov inc test dec mov pop cli mov lock push lahf roll mov and pop mov or enter dec pop clc adc pop les gs push (bad) push push clc andb add adc cmp inc in pop add jp mov mov hlt ret fcomps jecxz loopne inc cmc xchg or popf xor and imul mov les push lock loopne adc in fcomps mov je aam (bad) fwait or lcall dec sbb sbbl add jg and ret nop dec adc pop stos pop dec dec mov sub add adc sarl in pushl lret dec xchg popa jne add adc jo mov adc add ds sub sbb adc mov inc leave mov xchg lds push lcall in roll lret dec lret mov sub cmp inc enter pop out lods pop or add push mov mov or es mov push aaa in adc xlat push repnz pop je cwtl je mov jne mov lret jns pop enter lret xor sub gs cmc xchg add sbb add lock int3 push pop arpl sbb repz push sbb movsb mov sub cmp or sub repnz inc lret sub (bad) repnz ret clc lock inc mov fsubrs dec movsb mov andl xchg lods xchg outsl cltd adc call lds inc loope push sbb je leave (bad) or and mov adc xchg add fwait cmpsl arpl cltd or loop jg mov add andb imul cwtl push test (bad) ljmp and loopne sub or mov js je fisubl nop mov and daa data16 xchg movsb mov mov roll mov mov and leave adc adc les push cwtl xchg cmp push xor dec xor inc sbb sub jno inc or xor cs or push sbb push popa aad mov or sub insb dec mov daa mov jmp rcll mov test ret imul pop add or push lret mov inc pop int mov lock sub xchg imul lret add sub adc dec jg loop test mov sar and or mov hlt sub nop sahf pop jg sub dec dec sub les inc sub add es pop (bad) mov (bad) push ja cmpsl mov add sub popa sbb xchg insb push and ret clc (bad) sbb insb adc add pop jbe xor lods (bad) cmc jg mov stc xorb or mov sbb in pop pop aaa sub in vpaddb adc jp rorb mov dec jo sti shrl fisubrl popa lcall lods rorb push add jns mov add iret push mov jmp pushf push pop inc stos clc mov or lret sbb push dec xchg dec jge and mov fsub and mov or mov mov cmpsl gs mull mov vpaddb addb sbb add xchg add add mull cmp push imul mov iret xlat cld dec pop lcall ds into jae push push add mov enter cld mov add cmp aad ret out idivb dec loope bnd pusha cmp cmp and incb pause mov mov adc jge add aas xchg push inc or dec mov jle add push fstl (bad) in (bad) aaa lods inc inc inc bound mov aam inc adc adc xor cmp ret rolb and add jecxz or lret pop fmuls addr16 into sbb jle mov xchg xor mov inc aam mov sbb jo mov xchg inc cmp pushf mov and add dec xlat mov aaa xor mov pop dec pop aad pusha add dec push sbb pop add and add add mov cltd loopne movsb mov sbbb dec push adc push jae inc xchg pop lret jge bound and dec ret lret lcall and popf rclb pop inc pop (bad) jl cmp and pusha jecxz mov out sbb inc dec mov xchg add dec nop inc rclb fdivl or les push mov or cmpsl repnz mov les leave add sbb lret js ret lret jo and decl and cmpsl sub hlt add add fsubrl mov pop mov and fisub pop iret mov mov hlt push sbb cmpsl push lods xchg out sarb push lods inc lods lds jecxz in mov pop sub cmp or xchg movsb xchg inc and xchg sbb imul lock mov cmp inc cmpsl pop lods xorl mov adc inc jmp dec cmpsb adc mov fs ret mov mov (bad) xor in inc or test mov cmp and (bad) mov cwtl popf sub mov cmp cmp mov stc add pushf je and fwait dec mov js mov inc pop mov sbb push jle push inc mov jmp aam or sbb (bad) sbb lret xchg test repz jl or stos push inc mov les adc jmp mov push jns stc add icebp jl push push arpl dec insb movsl lods or loop add stos adc push lret cmp int and sbb pusha and mov xor mov hlt push add repnz dec loope add cmp popf shrb popfw fistpl lret cmpsl fs pop adc divl (bad) lret data16 add add xchg loopne (bad) or inc sbb or into mov subl out or cltd push shlb into dec mov outsl mov outsb in dec daa dec aad dec in mov push lahf and add aad sub xchg sbb xchg mov push lret imul in insb or xor xor ds inc mov push lret cmp xchg and js cwtl push in xor insb push add int3 add mov sbb or (bad) mov mov dec movsb popf out and pop xchg lret arpl dec fcoms stos je mov out (bad) mov pusha ds pushf mov xchg add ljmp in sbb mov sub sbb and mov (bad) and (bad) sub sub lcall test push in xchg nop shlb andl sub push les push xchg data16 cli jmp mov mov cld stos out jl or je inc mov cmp jl and pop sub adc into adc sahf je adc aad and push mov ljmp cwtl dec pusha das push or (bad) push orl stos aas rolb fisubrl cmpsl mov add cs cmp dec mov loope and and dec daa push (bad) cmp nop mov out add repz jno imul pop cld xchg push mov int3 ljmp xchg and mov in xor xchg ds aad fdiv add mov push js lcall mov mov enter xor mov mov aad lock adc fwait out or loope pusha test ror jae dec jne sub in sub cli and mov or lret pop cld inc inc mov iret sbb cltd lea mov imul movsb ja pusha jnp jg cmpsl ds imul sub lods inc (bad) cmp cld adc sbb adc nop int3 pusha mov test lret xchg jno mov enter jp or daa inc and cmp test push inc mov pusha arpl and add inc enter pushf adc mov add cmp into xchg mov roll pop (bad) cmpsl or dec pop (bad) movsl pop jno shr adc sub aam mov mov js popf xor (bad) sub movb jo imul xchg sarb inc or popf mov sbb xchg lods fs insb rclb or mov xlat pop or lret mov mov inc add cmp insb mov push add ja js aam sub and xchg jmp leave movsl (bad) mov nop inc sub lret push cltd mov pop insl dec or jno lods hlt test mov addr16 inc stos push int3 mov mov pusha les sti lock and sub adc lret inc mov faddl sub mov sub xchg xor daa cmpsl cli add gs and pop jg or fmull rcrb pushf test daa aad imul dec sub nop cmpsl pop dec mov shlb mov mov inc sbb lahf in data16 mov sti xor jb add or fadd notb jg mov arpl insb out inc in cmpsl add mov cmp xor clc frstor sti aas (bad) pop movsl in (bad) mov xchg (bad) cmp sbb loop push test rcrb sbb stc fadds sub in adc mov lret dec push lahf cmp dec fimul add (bad) inc push cmp mov add lret sbb mov jecxz add jg push out pop test stc dec pushf push loope xor loopne add sub and cs lret mov test cmpsl adc inc dec loop inc mov jne sbb adcb jno push or pop rclb mov xchg xor lcall add xchg mov sub mov adc test aas orb inc sub pop dec int orb iret adc add movsl mov dec and dec aam lahf lahf mov inc jno add or scas cli les aam notl faddl arpl jne adc add pop adc sbb push add cwtl or (bad) cmpsl or sbb mov sub sbb pop cmc push icebp cmp in sbb cmp cltd cwtl xchg (bad) div dec mov jo jge xchg rorb cmp jb (bad) rorl jo add mov sbb or or push and insl add out icebp and cmpb mov mov in inc mov inc lock mov add inc sbb cmp or pop movsb cld push sbb sbb push gs mov enter clc aas cli pop je and mov mov lods push jecxz adc add mov push pop aam add dec loopne in fisubrl add fnstcw test (bad) cmp or adc push dec rcrl fistpll push jl pop ljmp mov in test leave add or mov aad call or mov sbb outsl pop adc inc fcoml or out xor push sbb sarb (bad) nop clc pop dec xchg leave add pop jg movsb fwait push mov inc adc mov and scas dec cmp xchg les adc xchg lock inc push lds dec dec mov nop push or push adc rorb dec dec ret cmpsl enter in push jl add push push shlb add xchg push aam sbbb and ret add int adc xchg jbe mov xchg stc jge test (bad) cmp push fdivrs add push mov cs ret ljmp leave addl push xchg mov ljmp add ds xor stos inc sbb (bad) movb jns aam xor xchg add outsb das das mov hlt jle add in xor or cmp pop jecxz nop and jle xchg (bad) fs add sbb (bad) mov push mov loope sub rolb test push pop xor cmp mov add dec into jns leave stos push adc adc cmp cmpsb xchg inc cltd test push lahf cmp add in sub ds js pop xchg and dec ds sti pop fisubrl mov fwait out daa (bad) mov pop mov or cli push mov fadds es inc aas jb or cli adc test add mov cwtl and dec sbb addb aas and cmp (bad) xor sti clc and xor dec pusha sub xchg jl js enter aas cmp mov mov adc lods push sbb mov mov and pop je sahf cltd xchg test movsb cmp pop inc rcrb ret add shlb cmp out xor test cs in bound or mov push in add rolb aad add sarl or int3 ret leave clc add inc add loopne vunpckhps lret aaa cmp enter inc in jb xchg loopne repz mov and shl aad sbb push push add sub add addr16 daa dec int3 stc add add subl in dec mov cltd (bad) push nop ficom cmp and jo cmp sub inc scas mov repnz inc xchg std jmp rolb pusha pop push fsubs cmpsb jp lock mov ds inc mov fsubs xchg (bad) hlt jno enter push add pop xchg dec mov inc xchg push inc and scas inc sub or sbb jns dec popf pop jns fsts push mov sbb lods test inc int3 roll setbe loopne lret xchg dec adc int3 xor mov arpl jno movsb xchg cmp aaa ret jg or mov jno dec sub mov scas cmp push dec str adc push pop mov sub sbb or or and lods pusha (bad) (bad) daa or lods xchg and ret insl xchg fist adc iret lret cmpsl jno mov cli mov or sub cmp in pusha and test push or out std ret and inc stos add xor pushf jns adc or lea mull cmp les and repz sbb in xchg jg pop add incl xlat nop push cld andb jnp mov sbb lea arpl sti mov xchg mov mov sub dec movl jmp push sbb xchg adc rorl pusha mov mov pusha inc and sbb fmull (bad) push mov or xchg add lds jg lret (bad) divl les sbb inc divl rol or aad and out inc mov fmuls js adc inc shlb mov adc lahf pop ret ja jae (bad) jo adc mov adc xor mov cmp xchg adc push (bad) pushl ljmp mov sbb in inc jp mov add dec pop nop cmp cli xor roll cmp iret xor cmp sbb lcall sbb js jge les inc pop lahf iret sub push mov aam add (bad) or imul loop sub das lret sub cmp call inc mov loope or cmc lret addl mov ljmp cwtl xchg and cmpsb push std stc aaa add rcr gs mov popf lds test pop in pop pop insl jae rorl enter inc in cltd icebp test add aam adc in sbb test xchg push icebp pop orb mov je and ficoml inc enter jmp out lahf adcl pusha and das (bad) sub aas inc movsl cmp hlt push scas xchg dec and outsb sub pusha dec cwtl mov rolb push or sub push andb lahf pop xor jl sti js inc (bad) out push fstpl mov dec adc das dec mov lds pushf cwtl pop in sbb gs push xchg cld fstpt inc and stos rolb xor dec ja,pt and cld and orl jo cmpsb (bad) and es sbb enter (bad) xor cmp push rol rorb xchg xchg and fidiv cmp cmp jge ja lahf les test push mov (bad) xor rorl or sbb rcl ds mov or pop ss addl sub roll sbb mov xchg enter movaps xor outsl sbb cmp mov sub (bad) stc or test lea test cmp pop imul ret lahf nop xchg test mov stc ret fisubl push xchg stc mov xor mov xor pop fldenv orl lock lea test pop loope mov adc mov cmp (bad) je add mov mov ret mov stos push test je test mov enter sbbl lea pop sub ljmp inc loop lds ss mov cmpb push mov inc aam jns push cmpsb cli add aaa outsl adc aad inc sub andb out push popa mov rcl sarl and jne xor or ds lcall out pusha mov adc pusha pop inc mov xchg and rcr mov stos bnd add flds sub add enter pop cli sbb fild stos cmpb daa dec outsl jg movsb mov sub jae adc add outsl ja ljmp push xchg call sbb jbe movsl enter ja loopne stc int jne mov dec and loope cmpsb mov lock das mov mov or dec sbb mov ss mov das lock or add push pop int3 movsl sbb sbb push stc dec sub (bad) add inc dec ds inc push adc push jmp in lock pop and xchg mov cmpsb pop in inc out roll pop cmpsl pop aad loopne or pop scas pop jne in enter sub add inc or clc stos add ljmp js inc aas add pop mov loop xor sbb enter pusha es sub mov push mov fwait imull je xorb xchg xchg and pop mov or fs jmp cli jecxz js jl call repz orb sbb xchg loop cmpsl pop sub jge adc mov or cltd (bad) lock mov movsb loop mov in jecxz jno psadbw pop pop movsb push xchg mov ss sub pushl sub xorb stc mov shrl adc push lock inc jae dec or jb jns orb mov loopne aas ret sub mov pop or or pop or jno add push ja movsb in add mov scas pop icebp xorl fsubrl jne cld cltd add sti sbb xor xor fcmovnu lret mov mov subb push pop xor jl aad mov ret je add stos popa push xchg movsb add rcll aad and pop jp xor test rorb test je adc iret dec adc mov mov dec call mov inc cmpsl cltd aam jo andb adc je xor push popa clc or add jmp lea jno xor push stc sbb test lock cmpsl pop xor and sub popa test call lds jmp and int push std mov mov insb inc ror push sub dec mov enter or (bad) mov rolb je push mov and int3 or add cltd insl or outsl adc mov cli shrl aaa arpl adc cmpsb rclb in (bad) adc stos adc cmp loop pop mov pusha js rorl push enter dec or add xlat adc dec mov cli lcall repnz lea fcompl ljmp add cmp xor leave push push stos fiadd call jp adc mov fldcw mov les xorl inc js add lret (bad) jno mov lcall leave push jo mov pop push sbb jmp sbb dec add sub arpl fsubs (bad) das dec rol loope cmpsb ja push or adc jo in push mov in inc jmp cltd call inc and cmpsl adc xor mov mov mov daa int3 dec jno enter sub daa pop jno push mov mov fcmovnu push jns or call mov push inc xlat fisubr or add jbe inc lods add add aam inc and xlat pop push add test cmp push test movsl mov (bad) mov or push (bad) push inc xchg (bad) add or xchg xchg jg cs js jge mov int3 cmp pop loopne arpl push cmp xchg push loopne orl pop fldcw or and test leave fcompl orb sbb add mov xor dec push cld in rcrb and shlb vandps dec aas aam arpl xchg lock repz jmp jne dec push jp mov dec lret gs pop cmp inc adc rorb mov imul imul add fldt clc enter sahf jmp push test mov rcll je mov and out mov sub cmp add mov (bad) mov iret jl das mov aad cmpsb push dec sub inc int3 std push or pusha push dec mov fcomps loopne fstl fimull paddq adc aam (bad) popa test mov dec roll icebp repz add movb mov dec inc lods add inc lds adc fmuls outsl mov mov and iret test push jl inc push lods add xor aam lds jg shll adc or mov andl call cwtl enter cwtl or sub add lcall jns xchg add (bad) or sub sbb mov cmp and xchg cwtl lret and push test jge test (bad) or call mov into add je xorb push push add mov xlat int ja (bad) mov mov cld adc mov scas insb notl in es pop push adc push sbb and cmp pop add xor mov adc cltd inc mov les bound subb push js add aad stc cmp mov in adc pop sbb sub roll movsb ljmp cld push push aam and sub jo xchg pushf lds mov cwtl jb and add and in pop pop pop inc aam dec xor test inc lock popa xor out lret push test aad mov mov icebp xchg cmpsl adc cwtl nop aad js loopne dec push sbb inc test dec shrb or fs fiadd mov pop inc jmp xchg adc addl add add shr ret fcoml in in mov adc inc mov rcl xchg add outsb xchg enter add push sub add sub pop cwtl lahf add add sbb xchg insl movsl mov add and es xor add and xchg loopne sub je pusha ret mov lods jns push jo sbb jge into push ss (bad) cli leave jb cmp adc fadds aaa out pop arpl jb mov cwtl and or pop ds test and add adc push push pop insl or xchg jae dec mov xchg (bad) jns push fild add enter adc dec add addl mov push movb mov rcrb stc inc sti sbbl test xchg dec pop pop inc sbb in hlt sbb inc movsb fiaddl xchg add cmp sarb outsl xchg pop popa mov cmp lret add test or adc adc cld movsb (bad) je mov jne add sbb out add xor mov bndstx mov testb xor pop (bad) or dec lods (bad) pop (bad) roll xor mov loop pop imul scas or push and xlat mov sbb ljmp jle mov mov mov (bad) pop add jl sbb notb data16 inc pop and pushf push push cltd xor int jl loopne sub add aam push loopne popf fnsave ss fs pop hlt fdivr pop sbb or rol jecxz ret or cmp rclb popa xchg or xchg jno lods fiadd xchg fadd loope clc add aad xchg fwait jnp pop stc adc add xor cmp mov popa xchg and mov sbb push push pop mov les cwtl std or push ret iret jmp add cmp psubb xchg aam add pop (bad) push scas ret xor mov add sub add jbe lcall mov cmp test scas xor or or push popa adc (bad) cmp push adc xor xchg stc sahf hlt push or mov cmp test imul pusha clc mov sub scas pop inc pop xor hlt jl cmp lods popf cmp es jl jb xchg add ficoml mov mov lock push subl jl pushl mov je sbb sbb add adc in add ret daa xchg add mov adcl push je push mov dec push mov jl add nop repnz xchg adc mov clc and sti mov call btr add les jo repnz add (bad) mov jmp loope es les aas mov xchg mov and cmpsl mov ret inc test loope cltd jo mov mov nop aad adc divl scas lock or movsl test rolb imul or movsb and jl cmp xchg fldl cmp inc nop xor jbe add movsb adc test mov rcrb test test ret mov cmp sub loop cmp xor loope mov adc or xor scas jo mov jne jl adc or (bad) and pop adc dec dec lock mov (bad) imul enter mov in xor adc jle lcall rclb and (bad) fdivrl cs leave adc push push xchg xor les xchg sub mov fincstp fcompl sbb sbb pop ljmp cmp pop dec movb add push subb xor sar mov and mulb adc cmp rclb in adc mov sub adc dec push test rcrl adc dec dec sub push call xchg mov ja or mov aas mov test push mov or sub stc inc sbb nop cltd stos ret fs and xchg xor orl mov in add loope movsl es push stos pop and mov xchg add shrb ficompl (bad) adc fsubl cmp xor cld push insb les push cmp sub inc pop ret cmp icebp inc inc push add iret call test cli or adc shlb and fwait sbb adc dec jne mov addr16 cmp xor in mov xor cmc gs pop fwait jo push jle rcrb push jecxz insl inc pushl popa std roll test adc lods adc or adc inc pop xor out imul inc icebp stos cmp mov or sbb pop adc je sub pop sbb daa lods nop cwtl sub pop add ja out call in (bad) push add and subb (bad) fildl mov cli xchg mov icebp sub xor out (bad) fidivr add shl (bad) jle mov mov cld rorl mov pusha add xor mov pusha and rolb test xchg inc lock dec add fwait push adc std push data16 sarl xchg cld push dec add pop or mov adc pushf mov arpl fwait negb lods mov loope inc mov fadd pusha push and scas jno mov outsb xor cld adc mov jo inc sbb scas cwtl pop inc outsb hlt jns dec mov dec movsb mov mov xchg dec cmpb xchg leave hlt dec mov out mov jno add addr16 testb fadds mov hlt repz fs dec add movsl fldt lds fldenv test mov arpl out inc dec cmpl test aas jns mov cmc out jno data16 sub and inc mov pop push mov push xlat pop adc (bad) notl sub (bad) lock enterw call inc mov and repz pop mov sbb mov test or cwtl jmp jne xor test and xchg add clc and leave jns adc nop loope mov fsubrl jo jae push scas xchg shlb adc add es outsl adc add inc or add add push sub mov jb lock dec xchg mov hlt jne mov mov popa add mov andl les xchg xor add lds add mov or or add hlt push inc push lea add movsl mov add push inc lcall lods not (bad) out pushf and inc into or or xlat jl or add cltd xor xor rclb movsb mov xor mov aam in imul fdivs adc sbb cmp clc divl cmp subb loope lea sub and arpl inc imul add or jmp xlat adc loope mov xor fimull clc mov dec shl mov or adcb sbb mov shll hlt pushf inc mov movsb adc dec stos add lds mov sbb xchg jae fdivs (bad) push push sub sbb add xor scas adc xchg ret sarl loopne inc pusha test add pushf ret adcb jne mov inc mov call adc add (bad) and xor mov inc dec mov sub xchg je jne mov les xchg inc sub inc cld adc es mov dec testl cli outsl jle punpcklbw add insb adc mov push in dec loopew stos loop cmp sarb mov lret cld sbb bound xor aaa insb or lods or jns mov push mov mov icebp je lock pusha sub hlt (bad) pusha mov (bad) iret sbb lock (bad) mov dec add mov lock mov (bad) jae inc test inc mov into icebp xchg shlb jl adc inc les dec and loope adc push out add push xchg call inc ds add fisubrl mov shl push sub jb,pt pusha and fs xor hlt dec ja xchg cmp and push push in je int pusha push pop xor adc sbb lahf andb jb push cli push test or push push and (bad) out test (bad) in push int3 out in push addr16 insb and inc add xchg adc xor or dec add mov scas roll push sub mov (bad) adc jb mov inc adc push enter or faddp out pop ds idivb add and ds xchg push popa pushf cmpsb xchg push xlat or cmp or mov add sti mov sub add jae orl enter pushf int3 xchg loopne add pop enter decl mov mov push out mov adc adc add mov nop xchg fdivrs stc add xor mov add sub xor xor mov insb (bad) mov and call or cmp jg sub inc mov leave and rcrb pop daa bound enter test mov imul inc add (bad) pop push pushf or sbb mov add loop push xchg dec dec cmp xorb fisttpl adc xor adc clc sub sub adc (bad) aad movsl mov in inc test and cmp sub xchg jae mov enter int3 mov dec xor clc or cmp sbb loopne xor pushf jbe test mov outsl mov sbb stc test add (bad) mov add mov dec jmp out in inc xor mov cmp lret lret test adc (bad) push test add mov mov and lds or jno and out jp (bad) jg adc lds pop mov lahf jns call dec mov add aam push adc pop pushf cwtl add mov lret cwtl add push in test add sub daa or sbb pop test jno cld ss mov movsb sbb dec mov pop add push xchg push adc sbb pop pusha movsl in pusha xor stc repnz sub push xor lock cli and sub adc xor push dec inc je adc lret add mov rorb dec mov int3 add adc pop fidivr test push orb adc lret (bad) ja rcrb pop (bad) mov cmpsb test jnp ret nop dec jns je cmc cwtl sarl jnp insb sarl fbstp je or or pop add cmp aas sbb add jne adc sbb cld fmul lahf inc and mov push imul orb out add xchg hlt dec dec pop lock icebp enter aam sub clc sub or inc aas sbb cmc rolb sahf dec pop sbb clc inc mov and xor in add enter test jle mov inc jb nop movsl inc lods add and xor es int call and adc pop repz ljmp or sub roll in nop cld xor test in add add dec imul push and mov repz dec iret xchg cwtl sub and xchg xor rcll mov inc (bad) dec adc push adc rolb cmpsb sub movaps adc sbbb xor test dec push push pusha jnp xor mov ret lock (bad) jl clc xchg xor (bad) jo arpl add pop mov jmp xchg sub add mov leave ds mov xchg inc jo push pop test addl and sbb mov int3 adc cmp shl js enter or inc lret movsb les push fcompl add push jae mov lcall mov pop cmpl cmpsb fdivrs push add pop rcrb call loope add or jle xor xor aaa movsb push and adc mov add jge xchg sbb pop cmp rcrb aam cld imul aaa lret lds sub clc dec enter push popa testl sbb or sbb loopne and pop pop push aam xchg insl pop fcmove shrl lock movsl and jo push sub add fcmovnbe dec xor jmp test push pushf xchg or rorb add sti mov push sub inc mov lock fsubrs mov popa xor sub xor (bad) jno push nop push pop dec addl pushf in insb cld fldt mov hlt lods dec jae add or into in rcr pusha fsubs (bad) rcrl imul cmp loope ret xor (bad) insl sub nop rcll pop shl test das (bad) lods shl in test jmp sbb rorl push outsl lret arpl push aaa sub mov loope jmp and sub sahf and pop add add cld mov mov iret mov lock pushf jbe cmpsb add movb (bad) dec ret and jo insb jo fs cwtl adc dec cld mov inc adc sub or cmp mov fildl and pop loop and cmp das mov adc movsl mov jmp testl int3 ret adcl add pop bound inc push ror push jle pusha cmc mov inc cld pop or ret or test mov xchg out sbb int3 jg and adc add roll fstpl xchg arpl inc mov sbb out fnstenv int pop dec add push fsubrp es adc jle,pn pushf ds sbb sbb add pop cltd aad or and xchg leave dec pop icebp js inc out rorb xor (bad) cltd push in jecxz (bad) icebp ret sbb and pop mov imul add or shlb dec (bad) (bad) cwtl mov mov push xchg inc fs ljmp dec clc mov test mov and sbb stc divb test iret push ror sbb les repz fs mov jns push push add jmp mov adc pop cmp ds dec pop into inc fdivrl xor or pop cs and mov fistl test mov jl int3 pop stos clc fs or repz inc pusha or test mov add fincstp mov stc cltd ss xor push mov ljmp push pop xchg mov and imul mov and outsb std push pop lock sub dec or js in test loop pop sub outsb roll pop inc je lahf add scas push mov in cltd sbb out dec lret and add hlt les mov jo lock lcall and scas hlt mov movsb cwtl rcrb xor sbb inc or stos sbb jecxz mov or jne sbbb ja inc mov lcall je,pn loopne popf int loop add (bad) inc mov insb mov cld imul add (bad) js aam mov test arpl mov xchg adc mov and lods push stos inc xor push push and mov sbbb cwtl insl adc dec cmp fcompl inc lahf rcr (bad) xchg pop mov rcll std int insl mov inc cmp add (bad) jmp (bad) loop xchg aam add nop incb or jmp (bad) xor add and pusha jg cmp aaa enter xchg dec dec and mov pusha rorb jl bndldx push xchg or test adc add cltd mov sbbb jmp or (bad) mov mov dec jne fistpl sub aam rcl es sbb push in adc shrb test dec pushf je les addb sub mov sahf dec in cmpsb jmp shll lock jl jg adc adc pop push cltd ret lds insl mov gs add pusha jmp sub jns movsb sub ficomp or fldcw inc (bad) in cwtl aaa add mov iret jns call jb orb fnop adc int3 je jb sbb in std lock add dec je or sbb dec flds or es add cltd dec xchg enter je mov jae pop sbbb mov sub sub and lock sbb jnp mov jb pop fsubrs mov (bad) pop push push jb push hlt lahf inc xchg add int lret xor inc push mov into jecxz cmpsl jecxz inc rclb nop (bad) or sbb lea cltd lods jecxz nop aam jmp mov lea push push enter push sub mov mov add adc mov sub ror sarb js enter cli add xchg ss rclb xchg add mov sub leave outsl add dec cli xlat loop test add pop mov negb sbb mov add ret stos mov or push into (bad) dec add pusha clc mov sbb adc mov mov movsb push cmp mov sub clc loop or inc int3 pop lcall ds jo das cmp push sbb xor lock notl inc lahf push test orl cmp rcrl push cmp sub xor pop leave or inc cltd sbb daa loope adc js sub lcall shll cmp adc pop sub mov add outsl add mov adc mov roll mov fildll movl fs orb negb into mov mov orb add sub sub cmp inc push inc clc cmp ret (bad) jecxz mov jge mov sti (bad) xor inc jne and addr16 inc inc outsb jns xor or push jecxz push mov inc roll mov xchg adc sbb clc mov xchg xor pop xchg cmp shrl sub mov sar xor and fwait add sbb loopne sub jecxz aam test jno icebp rolb adc xchg push scas mov add out xchg lret jo dec pusha push and add insb pop mov adc add mov add sub dec and into js mov lds xchg orb mov add (bad) xchg fdivl or stc add ret jg hlt mov sbb mov int pop cmpsb cmpb and stc dec int3 xchg and dec out test push and and loop mov cmp add stos push mov xchg aas sub pop push jl test and adc dec xchg add stos lods mov popa push xchg push xchg push sbb jp add mov or push and sbb add jl adc adc cmp inc push and fnsave rclb and cmp test icebp bound sbb sbbb dec pop add fcmovu (bad) in ljmp imul dec xchg xor pop hlt loop sub pop adc jge mov out fcmovb push test cmp mov jo xchg paddusb and or cmp push out sub push jo add sbb adc mov lods xchg sub cmp sbb or ss jae orb push out jnp or test cmp xor cwtl fwait inc push leave cmpsb sbb and rdpmc push xchg fxrstor cmpsl iret cmp subb push sbb xchg cmp (bad) xor leave mov jns inc movsl xchg inc add data16 inc pop add xchg pop shrl mov xor daa sbb mov sti xchg add xor and js mov insb fidivl inc aam mov lret or stos lods xchg dec mov jecxz pop pop mov and or xor test push stc xchg icebp cmc xchg add iret into add inc sbb inc jb addr16 cmp mov add pop mov rclb fwait inc dec add push mov push sbb mov add insl ds mov orb test lahf adc sbb xor mov shrb in daa and lods xor mov lock lock push mov cmp pusha je jns jae or in enter dec es orb sbb inc add add dec mov enter ds sbb popf add dec jbe aaa xor mov adc lcall xor inc pop stc adc push jnp nop hlt sub int3 or push movsb es sti js add xor dec or sub cmpsb in dec or mov xchg sbb aad add adc in inc push mov addr16 jo das mov rcrb clc js mov xor jmp adc in sbb add movsb pusha adc test cmpsb fsubrl sub insb enter sub repz inc mov xor jmp (bad) push xchg and stc je xchg jl clc or sti (bad) sbb outsb sub cmp mov mov int3 xor in jne adc and test out outsl push inc cmp mov xchg mov inc fdivl mov gs nop inc inc je and jo jb mov stc aam adc sbb push sub mov mov xchg pop mov add enter xor popf push (bad) pop xchg dec mov mov pop pop mov inc mov pushf adc cmp cltd sbb mov mov outsl and mov pop hlt xor cwtl dec lods mov inc jl cltd orb call cmp mov repz mov mov mulb dec ds push add mov ret or mov mov cmp jb sbb inc stc xor mov (bad) cmpsb adc je out ljmpw paddq loopne xlat push jae cmp jb in mov mov pop rorb nop lcall xor jl pop mov sbb rclb sub pop insb lcall jnp push jg in pusha (bad) jle jno xchg les adc push adc sub pop popa adc add sub insl out imul add pop imul jb or cmp add dec add xor shlb js cld cmp test cli pop pop frstor inc push or mov lfs add dec pop push pop mov mov in add add fwait pop cmp scas rcrl xor (bad) adc inc add pushf dec subb enter in and cmp jge inc add sub js pusha mov cmp lcall movsb test (bad) push cmp fdivrs mov cwtl xchg cmp xchg adc mov jns cmp test jnp outsl cld dec push test jo in jmp insl movsb xorl push sub leave mov sbb dec fbld inc add push fimul call fwait mov mov scas adc inc insb add pop mov pusha or cs shlb xor mov and or insb dec adc adc sub xchg pop out dec push js push cmpb xor and adc sub inc into mov and pop jnp xchg xchg mov pusha hlt lret or mov adc dec add sbbb repnz sub scas mov jbe or pusha mov dec ljmp add adc dec fcos addb enter les inc xor xor (bad) loope mov sahf xor xchg cmpb dec mov aam dec or pop inc inc and fcompl nop scas and les out js int3 xor (bad) rolb push mov or xchg (bad) xchg hlt into (bad) mov pushl push xor sub pop pop push lods cmp (bad) hlt jle pop or jnp mov mov js add xor push add cmp in mov les movsl and and add and je icebp and push and cmp daa add andl add xor pop jl xchg mov in sbb jne in inc and xchg mov inc rolb adc dec outsl sub or adc jbe fsubl mov pop (bad) lock pop int3 in in lret mov adc sub fdivrs mov lcall mov (bad) and sbb sub js inc in pop popf lcall sub add inc inc dec and test in mov adc add hlt ret test shll xchg adcb mov adc xchg mov jecxz bound pop push pop push (bad) flds clc mov push sbb lock cmpsl sub mov add sbb lock pop movsb push lea mov ljmp lods cmp adc adc jbe lret inc mov adc lock lret (bad) nop ss mov hlt insb dec lea mov addb sbb mov popf les or cmp sub add pop push pushf mov cmp cmp sbbb dec xchg shlb push jl mov sbb mov and add bound inc lea insb andl call push lods fnstenv jno adc insl mov orb fwait mov push hlt sub jle addr16 into or xor sub repnz cwtl cmp sub andb sub cmp (bad) xor inc pop (bad) jecxz add and mov push roll push mov push aad push mov mov jg rcll and call pop loope inc mov xchg daa out adcl cmp dec dec inc and adc test nop test sbb mov loope inc (bad) movsl ja jne lds sub test insb mov adc lea add or loopne lahf (bad) sbb mov inc dec mov mov pusha ljmp test sub fsubrs add nop add jl add daa inc fsubs loope leave cmp test push mov pop inc insl (bad) xor rorb inc (bad) jns jmp add in ljmp inc movsl xorb mov pop push out popf sub jnp push nop jp je and sbb sbb or in or xlat xor (bad) stos dec sbb push into and add or pop (bad) call in inc adc jns loop mov push jecxz lret sbb jbe arpl in adc cmc jl cmp leave mov in push push mov stc int3 fs rorb adc xor cmp fldenv ja mov testl mov xchg popf xor nop pop inc dec jg pop mov loopne pop adc push cmp test scas add addr16 imul in jno inc (bad) push sbb hlt xor cmp lret xchg sbb add (bad) dec mov add pop mov cmp lock popa add inc stc pop xchg into test pop in cmp shlb jns dec adc adc outsb xchg int andb loopne jno jl inc rclb and popa in mov cltd int3 cmp mov mov mov enter mov in cmp cmp add sbb sub pop aad add sub push fs or or lea and sub xchg pop hlt push fs or jbe sti ret adc scas add lahf enter xor or xchg mov in loop jae push (bad) loopne rcrb negl mov add xchg je sbb out or cmp sbb adc mov sub cmp push (bad) (bad) dec (bad) adc add enter dec loope adc cld push mov dec int mov mov sarl test outsb nop xor cld push pop mov sbb sahf xor (bad) mov xor mov xor sbb mov sbb (bad) in add fs mov test (bad) pop pop pop imul xchg adcl xchg mov jo inc lahf push hlt (bad) jg nop lret dec cmp mov sbb je or sbb or inc xchg add xchg dec jle leave xchg pop or xlat (bad) daa in imul cmp std mov or pop jecxz and inc mov in fild inc aam xchg movsb pop add clc test inc sarl enter stos push push xlat sub hlt mov adc orl fucomip aaa dec pop add add xchg push cli dec loopne cmp cmp dec int3 jge mov pushf stos jae adc pusha idivb and mov push lea ds mov add pushf aam cs sub pop arpl jno les stos lret (bad) fisttp lods loope xor in loop insb inc push das add repnz mov mov ret in and out sbb clc shlb dec pusha mov push push xchg sbb andb inc daa hlt (bad) push inc in mov hlt out dec and inc inc in inc data16 dec or xchg or mov jge push insl push into jne and add hlt mov and call aad test dec add cmp lods scas pop test arpl add dec sub pusha test pusha iret sbb ljmp out call add cld fimul mov mov jns jecxz jl push mov dec out push pop xchg (bad) (bad) in sub jle pop fdivrp xchg inc hlt popa fdiv cmp push mov fisttpll dec pop dec cwtl mov int3 hlt cs out pusha fsubrs push mov hlt fcompl pusha lea cmp dec push std mov and sarl sub aad aas jmp adc fdivr test les repz lret sub mov lods push push dec jecxz shl mov sub insb jle fcompl outsl arpl pushf mov xor mov imul icebp fs test rcrb xchg inc mov ja js sub leave dec cmp sahf cld test or mov adc push add dec (bad) jne lret call movsb push xchg mov fwait mov mov test lret dec es dec cwtl pusha inc adcb xor test insb dec adc pusha fcoms xor lahf sbb js xchg or in jns outsl adc xchg loope cltd pop mov cs or sbb cltd pop sbb sbb mov or mov adc add xor adc pop dec insl scas ljmp call cmp cmp adc jg sbb fildll shrb pop inc add aaa add push mov scas and dec or fadd fs add cli mov mov cmp cmc call add in popf sbb pop and jb xlat test sub xor xchg ds add add adc xor cmp cmpl adc adc inc orb rolb or pusha sbb pusha pop pusha pop sub push addb ds rcr lock sub or mov inc and push mov outsl pop mov pusha adc aaa fwait pushf ret or loop,pn sub add mov mov ficomp add pop out shrb adc addr16 inc xor mov pop jbe adc mov adcl and mov dec imul (bad) xor and inc mov pop inc hlt push pop xor movsl gs (bad) adc (bad) repnz lret xor sbb add cwtl xchg push sub call inc repnz sbb ds sbb push cmp mov ffreep jnp add addr16 stos or and push sub js add popf out rolb jecxz sti xor ljmp mov mov insl hlt and mov int3 clc ss cmpsl push sbb loopne int3 or rorl add dec shrb or dec and mov mov pusha adc xor mov stos adc push and (bad) enter je je push sarb loop cmc mov sti loope test and jns outsb or or nop cld fistl adc pop ds dec mov into push mov dec jnp outsl add leave clc js mov inc popa ds stos xchg popf enter pop xchg jno imul cmp je icebp mov rcrb and pmuludq pop pop call and rorl jmp les in std call lods repz mov pop flds jecxz ret std out or cmp sub js popl loope xchg enter aam or inc and add jp jecxz js adc push icebp push sbb stos fstpl xchg and inc lods ret mov cmp test lods inc add and xor mov push jo xor mov sbb push orb inc loopne jno dec lods sbb das xchg cmp pusha (bad) js mov aaa pop dec inc inc fs mov ds sub hlt add rorl or or (bad) mov pop add pop mov xchg loopne jnp int bound nop jo adc stos mov jmp cmp dec sub fs jg mov inc mov cmp add imul dec add sbb mov inc or xchg sbb sbb jl adc aad call dec or shlb adc mov les cmp stos and push inc insb in inc jmp inc ret data16 sti sub mov dec pusha mov in xchg mov pop int pusha (bad) leave test sbb pop mov or sub add dec add iret mov add out and cmp or cwtl in xchg mov bound testl mov (bad) hlt arpl xor adc add int adc imul fsts nop add dec add test ljmp bswap cmp mov cwtl cwtl inc xor jo (bad) dec or fdivr popf add aad pop cmp neg cmp sbb jmp bts and add sbb psubsb das adcl or cli pop or xorl jg cmc mov add and hlt imul inc mov lret fcoml or addr16 fwait lock push fnstsw inc cmp mov xchg movsb aam mov adc dec movups pop in aaa inc dec ljmp xor add mov out xorl pop test ja lret test cmp mov cmp dec faddp or cmp mov inc js xor push sbb and add xor sahf int pop (bad) adc push cmp movsb cmc or daa dec or mov dec mov (bad) loop jmp (bad) and outsl loop data16 dec and nop nop fcomps add sbb fdivr mov lods pshufw and aam jno sbb or cmp push test or mov sbb jmp mov sbb in shrb out jns ss xor or mov add maskmovq notl loopne,pt enter ss xor cli add aam and scas mov pushf sahf xor fadd sub mov cmc aaa push (bad) ds insl test (bad) push pop adc cld or xor les repnz and and push lock inc and mov sub out cmp into test fsubs jb and cmp and mov mov jmp dec pop mov pop loop dec pop adc jp pop xlat inc aam xchg sub add lea xchg fbld es or sbb rolb xorb pop (bad) movsl int cmc icebp (bad) sbbb out aad scas mov rclb int3 mov jo push bound stos mov enter (bad) ljmp inc mov add divl and in arpl loopne sbb sub jno adc add cmc inc pop jno fs lret outsb jo add or scas and cmp push mov popa nop xchg clc mov sub pop sbb repz enter (bad) les xchg push add adc add js repnz imul in pop xor loopne mov and push xchg mov inc sub fs dec aad pop test (bad) mov rorb cmp test pushf test add arpl mov hlt inc inc adcl lcall push push sbbb test lret movsl cmpsl loop jne and cltd les or xchg add push mov xchg sbb iret push out jle push movsb imul mov jbe es adc and nop xor pop add or mov or nop sbb in enter stos dec push dec in popa call cmpsl je test push xor pop mov arpl hlt sub mov adc sub and (bad) push test or orb inc loopne call pusha or inc cmp (bad) lcall or dec pop mov xchg pop out mov or mov pop jmp test inc popa mov sub lods dec mov mov sbb and shl idivl push pop inc adc add rolb lods testl or cld addr16 or and fist pop movl aam or cmpsl pop cmp mov cld sbbb dec es xchg loope add outsb pop not loop mov out (bad) int3 add in add sar jns js add or mov push test xorb test xchg inc mov arpl push scas fmuls les mov fnop pop mov adc lods xor stc or cmp or xor test lahf js cs or in sbb (bad) pop (bad) int xchg or (bad) push xchg fs rcr lds inc rol addr16 jmp xor mov jg scas sbb (bad) cmp enter xchg sub flds out icebp stos add xchg xor test push add cmp jl add sbb lods bnd int3 mov cmp inc sbb mov jae andb mov add jnp je add mov notl rolb sub pop lahf jmp cmpl xchg xchg inc je lock pusha les dec shlb inc test sub daa cmp or pop dec and hlt add mov push mov idivl add adc bound pmaxsw jmp aaa cmp jb sbb test movb rorb data16 sarl daa popa dec or or or cld mov movsb cwtl or inc xchg mov mov jmp push out dec cmp push sbbl pop mov jno or jae sbbb bswap xchg cwtl cmpsb xchg enter popa lret xor xchg add mul pop mov cmp mov push lea fs mov xchg imul add ret and sarb add push add sub (bad) icebp inc mov add andl fdivl inc pop xor xor and rol xor or pop inc loopne jg and in dec mov lahf dec lock cli inc outsl (bad) aas ret and mov add pusha or or xchg push (bad) inc sub jle sub and push in or fndisi(8087 inc and in hlt xchg les jp or clc mov loopne nop call mov dec (bad) lock push hlt cmp push dec or push ljmp xchg xchg dec adc rcr bound lret aam mov sbb cmp (bad) mov pop daa mov fstpt inc lods fadds lods cmp mov cwtl rcr mov clc pusha mov xchg adc dec dec js add loopne loopne leave rorl cmpsb test cmp inc jmp xchg add cmp xchg int or pop adc add mov mov inc or inc add mov pop pop ret xlat data16 fistp (bad) mov repz add mov popa imul or call push jo dec cmp lea mov mov jno out lods push add ss mov in mov fs repnz cwtl ja lret push out movsl dec fs leave push xchg mov stos xchg push insb imul mov adc xor inc xor add adc lock mov fisub lahf dec std in fldl and lds andnps nopl ret cmp jb push pop and arpl or insb add or mov mov ds push xchg call mov cmp ret icebp xchg cld lods dec add dec dec and js clc rorl mov inc jge and lcall jmp icebp and icebp int3 loopne add shl pop imul js fldcw dec cmp inc adc mov and test mov nop or (bad) sahf add add (bad) fildl pusha out hlt mov into adc jno shlb adc dec add xor dec test rorl add icebp sbb push sub nop sbb loopne adc mov je mov mov or or shll cmc inc pop mov pop or roll fs and pusha mov stos cmpsb or jl sti pop cmpsl idivb jbe xor mov sub xor or in adc testb xor add repnz xchg mov mov (bad) cld sub add and add in or ds mov inc sbb arpl adc and popa inc hlt mov mov insl cmp add jns or aaa sbb shlb sahf sbb neg arpl or mov dec in in cld cmp push jecxz and sub pop orl adc movl push es or and add lret cli sbb push cmp and mov lcall aam mov clc pop cmp add and aaa inc sbbb jg out aad add fadd (bad) sahf mov and pop add pop xor mov xchg out cs sub repnz repz fisub popa xchg sbb pop add out out xchg movsl fisubrl (bad) je push push pushf and pop adc mov inc jae add mov int imul mov pop mov mov add mov adc js jo cli xchg mov xor dec mov sbb and leave mov (bad) in clc aam test sub lea rolb inc movsb fstps sbb lcall add test push inc stos imul push adc nop push adc orb xor pop and (bad) pop addr16 js sahf les push nop lahf mov dec inc pop dec fcomps cmpsb faddp push idivl mov test pop and imul dec leave pop in dec dec rcr mov stc xor in (bad) xor pop gs dec lock loopne sub inc sbb popl pop fs lcall xor mov aam in mov cmpl daa pusha sar pop dec or leave xor dec cmp mov lock lock and push and xor and out pop cmpsb fsubl popa push shll fisub pop cwtl mov jns test popf nop adc jno or adc push adc sti jo pop jecxz pavgb and das xor xor stc insl lock aam rcrb fs adc and loope xor shl adc xor push orl dec push loopne icebp or aam addr16 cmpsl sbb add es fldenv shl xchg mov xchg cmp in lea test xchg add xlat and or pushf (bad) or lods jns loopne pop gs pop push mov dec add movsb leave jo shlb insb add and mov rcll mov jo out ret icebp xor pusha xor pop mov or ffree call jl xor aam add add lods dec pusha in notl xor (bad) xchg repz shll push or lock adc adc push test inc hlt sub popa test mov sub mov xchg rolb lock mov push icebp stos mov lods testl cmp mov sub mov hlt pop test mov (bad) or push dec push addr16 mov and out fisubl dec sti jbe xor dec scas fstps subb loopne xor jae stc pop or push xor lock lret rorl hlt jns add and (bad) dec add cli xlat dec jp stc sbb (bad) out mov fstps addr16 dec cmp or or (bad) dec xchg adc sbb jmp and imul cld fxtract inc nop insb push pop adc (bad) icebp dec xor push (bad) mov js and push mov out icebp pop add data16 int bound in adc lcall pusha jo sub (bad) mov mov cmpsl iret in inc cmp int3 fsub test sub jb adcb stc mov dec dec (bad) sbb push and add (bad) jmp cmc mov jo pop pop jo adc sub addr16 push dec jbe mov mov cmp inc addb or fucomp or cli dec add cltd sub int3 loop jns into or mov xchg mov pusha mov shrb xchg pop sarb mov mov shrb out insb mov xlat mov dec jbe bts je or popf xchg in insb and lahf rcrb testb cmp mov push xor or dec xchg enter data16 rorl sbb pop and in addr16 lea xchg (bad) sbb mov dec xor sub int3 mov dec enter je or adc mov cmpsl or xchg sbb int3 js add fisub sar add rclb and dec out add push pop je clc sbb sub outsb xor popf cwtl fdivs decl xor sbb dec pushf xor sar pop in cmp add enter cmp (bad) lahf lret pop or xchg add js add gs test out les mov cmp test pop movsl mov add cmpsb add inc xor iret pop xchg mov cmp out out add lods adc movsl pop xchg pop add dec dec dec cmp stc ret push jecxz cmp mov cmpl inc loope in mov scas add pop mov lods pop and pop add xchg pop jg mov pop jno xor bound cmp cmp mov dec pop add (bad) push inc cmpsb imul mov cmp xor pop mov mov jns xchg mov push pop push lret push call add add clc scas lock arpl and sbb mov insl push (bad) adc lock add inc movsb push push push out sbb mov cmp add icebp lock add sbb repz mov nop popa ja inc dec (bad) enter mov mov add push inc push pop loope mov jo insl dec in stc addb out dec and sbb adcb hlt inc je or test test nop cmp or mov add xor test pushf inc pop jecxz add idivl and and pop pop push dec sbb movsl cwtl hlt fcmovbe repnz and inc xor pop addb adc test cmpsb inc movsl mov and pop nop cmp inc jo stc cmp mov or sub mov nop jne inc add xchg rcrl add mov and mov nop out sub pop fildl scas arpl sahf lea cmp clc cmpsl dec inc push iret mov lods sbb add sahf add pop ljmp inc nop enter and push aam test mov xchg es jmp push add dec adcl push hlt lock or sbb sub jp nop sbb pop orl sbb lods pushl lds push out inc add cmp je subb pop dec fnsave js add add and xor add xor lods lods mov jmp push jo xor jge hlt dec or pushf sbb add add jbe push sbb inc adc cmpsb adc aam mov adc mov dec dec adc jb call adcb rcrb cmp and xor loopne enter out dec add shrb sbb rclb outsl add push aas test xor iret pop jl pop pushf mov aas mov mov test rorl test adc mov shll add add int3 add loop push daa mov push or mov xorb in hlt xchg push sub (bad) lock cmpsl inc adc lret inc lcall out es add pop or adc sbb test mov dec lods std ljmp test iret insb mov mov pop add inc jl lock mov sub jg (bad) adc mov rcrl dec mov sub add mov jl push nop or cwtl jmp mov cltd and sbb add aad mov sub add sub and mov cmp add aas inc cmpl jp xchg rolb loopne adc sbb lock mov iret add sub pop sub fmull add enter push inc jge adc loope inc jo fild sub lcall nop xor cmp loop (bad) ja test and (bad) sub out test xchg cld ret (bad) jo inc std mov or fnstcw in push push cmc cmp test mov dec xor loopne push repnz cmp nop xchg xchg push xor les push sbb clc sbb mov dec add in add dec and lods push les imul nop mov pushf bound adc and add cmc movsl sahf ret out enter (bad) jno in mov adc add and push pop inc push add call pop je pop (bad) fcoml xor sub (bad) add rcrl sub inc mov call lods adc add cmc pop std xor push stc nop xchg nop pop xchg int3 ds sbb lods lock or push dec rolb rorl add lcall add or aas cmpsl push ja jp mov and mov jns xchg sahf dec xchg andb push (bad) mov jno add jns add addr16 roll pop jae dec (bad) loopne out xorb lret add cmp rolb (bad) shlb push insb shrb call mov nop dec test lret mov mov cmp shl and jl sbbl loope add or call inc dec jl xlat jo fsubs mov xchg pop cmp sbb (bad) nop push fidivl add les xchg loopne push enter push movsb xor mov pushf lds cwtl rolb add inc cwtl aas pop lods dec pop adc nop and sbb add bound sar dec dec movsl push push add jl out lock push or daa ret daa mov sbb sub xchg adc inc in pop dec insb adc dec push inc clc mov inc je xchg and in mov lcall dec loopne in cmp incb stc ret xchg xchg push sbb push loop lock adc out cmp or loope add inc cmpsb out cmp add stc pop xor orl jb sub sub sbbb pop or and sahf int xor add xchg (bad) in cmp dec out and test cwtl ds mov hlt cs ret mov and mov lds dec push mov add fidivl decl lret or popa push mov adc and jns mov (bad) dec sub notl xchg int3 je add sub add call decl nop out mov (bad) mov or and nop jl dec fstps jns in clc sbb sbb and xchg cltd fs mov add nop adc mov test add insl inc fs adc sahf sub repnz in mov loopne add sahf les loope mov cmp sub mov adc cmp add cmpb cmp push test mov daa adc inc xor mov push test cltd add ret hlt xchg add lock lods add xchg fcomps cmp pop test fnstcw (bad) fldt loope push mov sub push insl ret pop sahf mov mov lcall int mov inc and clc imul aad and xor test aas jecxz in jbe push pop rorb or aaa lock stos int3 clc (bad) loop add inc pop in sbb (bad) popa adcb mov pop mov in movsl fcmovnbe imul and jg inc rcll jo add mov data16 test xchg out mov bound pop pop jp je dec sub loopne mov add (bad) sub sbbl hlt les lock jecxz add add adc sub cmp loope mov xor (bad) lods jne or les psubq enter cmp push sbb sbb nop loope les sub dec icebp add nop cltd add and mov cmpsb rolb mov shrb movsb and xchg es lods push xchg add adc xor mov and adcl pop or addl or pop aas test lds pop (bad) movsb imul bound dec cmp fdivrs and mov adc sub xchg add add mov xlat andl mov mov and or cmp out lods jb adc pusha call (bad) mov scas inc push add xchg adc sub mov imul ja inc and pop movsb push xorl sti jno xorb cwtl pop xchg add repz pop push cs mov gs cmp imull cmpsb and cmp mov add push inc in cwtl cmp or (bad) dec mov xchg sub mov mov add rcrl sbb fs xorl bound dec inc pusha jge mov sahf inc cmp in mov add movsb mov rorl mov jo lods add mov jb sub cmp push fmull inc or cmpl jecxz and in adc jno pushw insl movsb push xchg add jae push nop clc add jp scas push fwait inc lods or adc dec and dec (bad) pop and in pusha and cmp lahf or (bad) cltd jno nop jns add pop (bad) jo cld adc les (bad) mov jbe cmp pushf mov movsb push and clc sub je pop sub in sub and xchg mov ret add inc xor lock mov pushf adc in pop cmp lahf xchg mov cmp lret call cmpb cmp mov (bad) cld in add call xchg imul nop mov test push inc daa sub ljmp dec test jne push mov and pop xchg and jge out sbb mov nop dec add sub mov push mov dec cwtl shrb popa sub jl lock insb xchg lods cmpl movsb or jo push sub jge loope lcall xchg adc icebp mov xchg inc cmp mov movsl add adc shlb or xchg mov pop (bad) cmp mov and sbb (bad) hlt ret (bad) jmp xor idiv mov inc fnstcw mov xlat inc test pop les jge jb faddl fnstcw xor mov add test mov add mov mov mov pop xchg imul sub shlb cltd mov dec cwtl cmp dec pop xor leave and int3 rcrb (bad) fisttp push test mov mov mov cmp pushf jno sub xchg fstpl sahf jle xlat inc rol pop sub lcall or add mov mov sub mov sarl add std push clc and mov adc sbb rclb mov add lods pop imul or mov dec or jge add xchg sar mov sub inc inc jp addr16 cwtl add arpl sub dec int3 sub dec call or clc je jp fadds fnstsw int3 in ror xchg sub js call jg inc mov cmp fildll test clc roll mov movsl push test xchg divl (bad) add dec sbb popa pusha dec dec mov hlt add (bad) dec je mov adc xchg fisubl sub xor push and mov cmp add xor call xchg repz adc mov add (bad) leave and dec push xchg cmpsb xor add xchg jecxz cmp in mov mov (bad) iret pop xlat cmc dec sub in pop push iret fcomps add xchg mov arpl nop sbb cmp dec inc add ljmp lock sub in nop push bound sub movsb popa jne push push repnz je (bad) cwtl (bad) xor subb cmp pop test mov pop fld add and sub cmp dec add mov inc mov xchg lret faddl or push adc jbe add lcall cmp add push push add ret dec sbb inc sbbb adc (bad) pusha dec and cmpl shrb inc xchg les pop sbbb (bad) xchg and jno ret icebp iret js sbb sub mov fmuls mov jp scas jl stc xlat jno in xchg inc and add cli mov ds add imul pop xchg test ljmp adc xlat (bad) fbld es xor jmp inc adc sbb clc jmp mov add (bad) andl in icebp mov mov sbb scas popa push outsb aaa leave test dec and mov hlt (bad) std or ds mov add rcrl mov jne or xlat and add mov adc (bad) xchg pop cltd cmp xlat ret sub xor sub cmpl fnstenv and hlt inc sub push inc int3 mov outsl movsb push rclb inc dec add or pop inc test mov movsb outsb adc inc sbb or sub pushf add test aas or dec ret scas add aam in cmp xchg xchg inc xchg inc xor xor xor xchg mov pop mov loop test leave add aam xchg push xor mov sub repz or (bad) fdivl dec iret add mov xor aas add in pop sub sbb xor xor push mov dec adcl xor stc in jbe push lock adc add lock sahf and xor jo inc jae push clc pop jge dec sbb call mulb inc cmp addr16 dec icebp in pop lds mov (bad) lret and pushf or xor push shl push mov or xchg fadds call es xor test dec mov dec jo push pop cltd lods cli push cmp cmc sbb aas or bound xchg jle inc test data16 pop add fs adc mov push mov mov lret dec pop xor adc xor pop adc sub xor dec test xchg pop mov mov jns add or not cs mov jnp pop pop push add push or lods sub xchg cmp call and ror cld xor mov mov std pop fdivrl inc cmp ljmp sbb aas xchg mov mov mov mov je or loop test xacquire pop adc fdivs adc sbb jns mov leave jl adc mov nop dec mov dec (bad) and subb inc loopne pop mov jb es sbb xor sbb or jb lock xchg or sbb or mov (bad) push test dec mov insb xor add xor inc xchg dec add jns,pt jl in andl out std rol jno (bad) rolb adcb xchg add roll add xchg inc pushl mov mov or insl sbb xor cmp mov roll and pop je mov cmp rorb adc jno push adc lock mov push add inc dec (bad) rclb test and sti cmp cmp add cmp daa and rcll (bad) fidivrl rcl lock adc test add ss xchg push pushf cmp adc pop sarl repnz cld rorb insb fldcw aad jne add (bad) (bad) sub ja pusha loope sbb lahf mov mov daa and push fcoms jno clc push and pusha fild mov xlat test nop test inc (bad) and jl jbe xor call test gs push xchg clc pop pop cmp pop rclb add xor jnp cltd or or adc sub mov cmp sbb add (bad) js add or sbb sbb loope stc pop xchg aam dec rolb adc fidivr cmp sbb adc movsb sub cmp mov clc sbb or push sbb jo ja add fild xor je ror cld rcll daa mov lock repnz add into (bad) mov pusha jo add pop call push call inc loope rol mov fnop adc lret jecxz js fdiv pop sahf fnstcw jne movsb outsl xor jp sub mov dec add clc popf gs das sbb add mov dec insb fdivrp or mov adc cltd cmp xor inc mov pop inc sub mov mov add shrb mov loopne mov xor xchg lock adc nop aam fsubrl xchg dec les inc ret cmc enter rolb movsl loope sti xchg test and lds stc or mov loopne leave mov cs popa mov fwait add or sar (bad) xor dec xor mov inc cmp cmc push mov outsl inc xor cmp out xor pop fdivrs call cmpb prefetcht2 js cmp js add mov mov pop movsb xor adc xlat cmc add adc repnz or dec or or adc add cmp mov mov pop lods add xchg xlat mov inc xorb in je mov xchg hlt ljmp js xorb xchg insb aas mov xchg and adc clc add subl sub test adc repz in in push add jmp ret mov (bad) shrb aad divb inc cmc loop sbb nop push jbe rclb popa pop mov mov pop xor jo je rolb mov dec mov push out ret fmull or push (bad) cmp xchg (bad) mov push dec mov jl sbb add outsl sub jnp pusha mov fnstcw push rol sahf repnz inc xor mov and js xchg insb mov jecxz cmpb cmp test mov aad mov sbb and icebp cmp xchg cmpsl ret rcl rorb aad clc jle rclb cmpsl mov sbb push mov jns cld mov mov push jbe sub orb aam sti xor out and shlb pop pop sbb sub sbbb xor mov in in sbb or inc aaa inc nop or add jl xlat dec xchg mov sub adc add jp add pushf sar (bad) push or push addr16 and loope pop mov shll add sbb and add cmp jne mov dec mov inc rorb pop cmp and int3 or aas mov nop xlat sub ds mov sbb jmp add std je mov loope (bad) notl sbb push fidivr mov cwtl and fwait mov xor pop and loopne xchg xchg jbe in mov inc imul mov lock dec (bad) mov mov out std fisttpl xchg push dec pusha (bad) hlt movsl xchg add scas pop dec adc add cmp and call pop (bad) dec ret and mov mov fcomps inc pop jg add mov xchg nop cld jl xor sbb jle add stc mov add pop or lds rcll (bad) add jns leave fdivs add cmp dec dec jne cwtd or and and add lea push pop sti sbb movsl fildll and jle test inc rcr aaa dec mov loopne adc pop mov test or and and pop add mull pop or pop stos clc cli pusha sbb mov pop mov test mov test iret inc arpl adc repnz imul add cltd pop orb ss add pushf xor sub test add add pop repnz orl pop icebp inc inc xor mov mov xor mov cmpsb add jne xor pop mov pop add adc fidiv std in pop sbbl sub sahf push js mov and (bad) ja inc jge popa jnp mov cld in call imul inc scas jo add cli mov dec lea cmpsb pop add aad mov popa mov and sbb add pop jle ds stc mov ds into inc adc icebp in mov repnz jg adc add (bad) fnop inc test and add (bad) out int3 sub movsb add loope xchg jns (bad) sub inc out mov ja push or jle loop or and repz arpl lds pushf push mov std shrl pop lret out ja push cmp cmp ja ret shll adc sbb orb push cmpsb inc push and mov mov adcb cmp cld stos mov xchg insb jge xor outsb fdivs into gs mov cmp femms movsl cmp and mulb mov mov iret or or dec xor adc sub dec push inc mov dec andb push (bad) int3 cmpsl out (bad) pop jecxz jecxz jnp or sbb out leave dec push and add xchg jmp mov fadds insl das mov add jmp cmp imul lcall pop mov add xchg jecxz push dec pop add add iret pop xchg push sub adc loopne push xor cmp add ds xchg (bad) lock pop daa aaa popa xor sub sbb out imul sbb add int push or cld ss and or shrl das adc daa sti sbb dec mov addr16 (bad) xor (bad) jae inc stc or loope rcrb push mov mov aam orb or or loope dec dec orl add fwait in add fildl repz loopne imul hlt clc lret in lock jbe add jbe cld add pop or ficompl jl divb add mov or pusha lcall push push pop push int3 imul pop je orl pop insl sti int xor int3 insb test or mov fldl sub mov pop pop cmp push stos addl mov dec repnz decb and push xor sub xchg lea add nop cwtl push cmp je xor fadds jmp add insb jo pop sbb xchg mov jcxz gs or or negb leave push fwait mov xchg std inc add or add pop inc ss in mov dec push in or je add jle mov cld xchg inc mov lock sbb inc call and stc ljmp popa leave fs xor ret inc add sbb (bad) push bound hlt pop sbb cmp jns hlt lock cmp add mov sub ja mov add mov mov or mov stc negb jp dec fldenv push into inc cmp add mov cld add ror sbb in add dec in xor mov cmp sub sbb rorb (bad) cmp lods xchg sbb mov and movsb add pop sub fdivrs cld inc icebp cli cmp jno xor mov lock cmc adc (bad) mov xchg sub and stc nop sbb nop dec sbb in inc or mov (bad) idivb fdivrp dec ficoml (bad) ret push add push gs popa sub add or jb pop add add push cmp inc pusha add jne jle pop mov cmp sub sbb (bad) rolb sub clc mov in xor or mov sar xchg add (bad) addb rorb add jl add inc aad addl nop xorl pop imul xlat adcb leave xchg (bad) out (bad) or cmpsl in mov call xchg test pop imul lcall push cmp outsl add push dec dec sub mov mov adc imul movsb inc lret lock fcomi and pop push xor idivl pusha and pop push inc mov rolb cld push and dec cmpsb mov call cwtl add xlat andb xor mov divl or mov cmp xchg ja mov test push das sbb insb in fist sbb push dec popf push popa loopne in fnsave mov les (bad) inc jg push fwait shlb xor or ret nop cmp lock nop (bad) stc pop jbe mov jecxz aam or dec push mov lds pop sub cmp dec rolb sbb jae mov inc dec add pushf mov (bad) push in xchg push hlt pop mov pop cld dec jle scas jo or inc push jns dec cmpsl (bad) jl,pt pop mov out mov or push in js cld (bad) and repnz mov (bad) jbe xor in (bad) and xor push sbb sbb in add test sete pop and leave pop fidivrl and cwtl orb inc mov mov ret in outsl and cmp cmp clc mov (bad) sub sub jns ja mov pop mov and sub add mov fdivs sahf test in dec mov nop cld loop xor repz in add fidivrl add mov sbb scas pushf or and cmp subb jg sbb sub push leave xchg je pop jmp orl fldl rcrl icebp leave adc push jp bnd adcb pop push or stc or add pop je and jle or int3 (bad) xor (bad) or in js or enter push fisttpll rolb lret in test dec out in mov pop gs (bad) push mov pop push lret cld xor cli add or sub hlt bound (bad) testb icebp cs dec out js push dec sub adc mov xorb inc lods aaa andl add xor pop and xchg add mov jmp fwait dec and sub in outsl imul push cli xchg inc inc jo shll cmp push lret dec cmp mov loope sub add or dec cmp ljmp int fcmovnbe pop jmp call lods fsubrl mov ja pop and inc xchg adcb add mov add or ds arpl jecxz adc sub or in add fsub push gs add (bad) std sar cwtl rcr add push and in cmp fildl out mov cmp add jle loop cmp ja shrl mov push sbb jo push cwtl inc add sbb pushf je adcb xchg in and movsb mov mov and push push push rolb (bad) fistpll xor nop xchg repnz pop push out add xchg (bad) ds push sub pusha lods cmp cmp ret or pop outsb adc lret fcomip lock adc movsb nop adc cmp pop push mov js push mov test inc add test (bad) pop inc shl pop (bad) or dec push pop bound push sub cmp stc dec push int3 xchg sbb in mov push lcall in jne mov inc sub push add test cmp pop cmp cmpsb (bad) sub adc pop divl pop rorb ljmp cwtl mov fdiv jmp add or pop adc pushf mov sub sub fs add inc scas popf jnp push mulb jno xchg dec fdivs adc pusha push int pop sub add je add add popa add dec mov xchg rcl nop je repz test call nop mov mov sar ss pop sarl add dec adcl cld xlat push pop testb push pop popa or loope leave add xor dec cld dec mov jns pop sbb rclb in shll push cmc push pusha cwtl nop mov sbb jbe xchg add std aam addr16 push call xor arpl mov sub add adc mov dec and gs in add sbb jns pop push dec mov hlt cmp lret rorb in adc add mov loop enter test add testb jl add fstpt mov mov add add lock dec mov add rcrl add scas jmp or pusha xchg or xor pop jno negl insl loope add (bad) fisttpll loopne data16 pop js adc aaa mov sub jo adc scas imulb or or cli test jns dec lcall stos sbb mov push push aas add xor push and dec rcrb dec and jp (bad) and jb pop push clc dec push repz stos adc jle pop cli in xchg add push les jl adc mov lea or inc jns mov mov fadd lock or add mov mull cmp cmp lods ss dec mov push pop mov leave pop insb mov pusha cld aad xchg sarb xor pop push mov pop aad rorl mov mov xor hlt cs xor cwtl andb lcall xor and sbb xor cmp adc gs iret jo add lret cmpsl jp or lretw dec add in push addr16 jo cmp add test sub mov cs bsf gs adc or xchg mov mov sbb jo popa ljmp xchg sbb fwait ja add movsl test jle add xchg mov and xchg push aas push xor sbb or icebp jecxz loopne xchg popa add mov xchg cmc int3 mov add or nop data16 cmpsb test inc inc pop or subl and jp sbb adc inc call xor jae mov push dec mov and pop add fbstp mov mov mov ds imul sbb xchg dec nop add xchg loope nop divb jnp (bad) push fstp sbb fadd or (bad) jo push jmp adc int dec imul pushf mov push add xor jae push xor or repz mov cs jge dec mov lods mov mov xchg data16 adc cmp cmp mov test sbb sub adc pop cmp sahf in jnp adcb nop push cmp xchg dec andl jo inc sub add fwait sbb dec ja fisubl push sbb push imul add xchg lods jb mov adc xor in or jns xor cmp dec add inc movsb jg push sysenter push fnstenv jno xor mov adc (bad) mov inc mov sbb jo jmp push add insb pop test sbb sub imul push dec fldl cmp call cwtl adc cmp add jmp add jp gs insb pop (bad) xor inc lea push ljmp test lea rcrl jae jno cmp js lock mov pop or xor xor fs xchg xchg sbb pop lcall lret outsb mov stos mov loopne mov test mov inc sbb dec and scas xor mov jo adc xchg outsb ss xchg jle push call fmul icebp mov xchg push ss or in cld or jo cmp shrl lret adc and mov movswl add mov lock repnz add mov jmp add or mov add adc pop or mov insb fdivl mov adcb ljmp clc outsb cmp gs imul lock nop (bad) dec ja ret adcb mov mov add adc in adcb das add adc push rorb cmp adc jo inc jo lods iret adc cli push das cmp lock cmp mov (bad) and call into shl mov rcll mov adc les or mov aam sarl mov and pop dec adc cmc sub jae inc xlat test push mov push mov lock and shrl mov inc cmp out ljmp xchg or add dec mov add xlat add jae enter int3 cwtl add mov ret enter xor xor push adc test mov out mov or mov sbb int3 add push mov pusha (bad) and xchg inc (bad) adc test cmp fs outsb inc push or xorl insl loopne (bad) repnz push mov orb adcl out cwtl adc mov jnp mov lea dec inc mov mov aad pushf xlat mov xchg sbb jo scas loop add idivl cwtl nop mov cli jmp sbb mov sahf lcall mov push pop inc call mov loop cmp mov mov sarb pusha add pop xor push ret xchg cmp lods movzwl mov mov mov or add xchg (bad) insb dec inc sbb cs (bad) inc fild (bad) xchg pop jmp (bad) jae push mov add scas mov push dec xchg mov icebp jmp in and in xchg in subb push push cmp sub lods push (bad) push cmp pop mov sub push add sbb mov xor sub sub sub nop and lods or dec aam mov fsubs nop or xor cmp rorl add jno out je ret insb jo dec sbb (bad) mov mov nop cmp hlt ficom popa adc mov mov sub mov stos adc mov insl add mov pop (bad) inc pusha ljmp jno nop sub adc mov and push inc fsubrp cmpsb adcb rolb fidivl insb repnz add and adc xchg or mov in and nop dec adc faddl or (bad) cltd push pop movsb push dec gs mov dec add rorl pop lahf js adc add jg stos add push mov pusha out (bad) mov sti pop add cld lcall xlat adc xor pop popf dec iret inc inc lock jae rcll insb mov sbb inc loope pusha jno mov add mov jmp add ljmp clc adc jp push xchg aaa pop pushfw add inc inc mov xor setge es add xlat outsb pop or cld add sbb ljmp pusha jnp xchg and es enter push into (bad) pop pop aam repz sbb cmp dec in es sarl push push cmpsl fisubrl jle fisttpl pushf sbb cli jo rclb aad movsb sarb iret insl ljmp adc pusha lret jl aam idivl sti add lods dec push push icebp in sub js nop clc mov mov lods loop dec jae pop inc jns mov aas (bad) and call fdivs loopne mov xor leave roll mov adc mov dec add mov adc xor imul cmp aam (bad) cmp enter sbb data16 rclb push xchg and jns pop adc jl xchg orb xorb fnstcw mov (bad) lret jo subl pop mov popa adc adc mov pop mov iret rolb pushl leave test adc xchg and dec adc pop and pop sbb and (bad) xor mov mov test aad or enter jo in pop dec enter mov push inc sbb inc adc adc pushf xor adc dec jg adc mov add pusha mov pop or adc fild shlb (bad) out or gs pushf mov ffreep int3 mov into mov popa pusha cltd test enter dec or xchg jl jns scas adc push (bad) mov rolb cmp nop cmp push sbb mov enter mov loopne sbb movsl loop mov nop or pop or push or unpcklps jae sbb xchg movsb pop fs mov push icebp jp or loop unpcklps les or and gs xchg add test add fisubl push mov hlt sub cmp movsl or jg out and out sub jle dec daa dec pop movsb (bad) aam mov push cs add faddl out iret cwtl lcall jno and and and and inc mov movsb sahf jae gs je xor sub lods gs je add rclb faddl andl (bad) pop add loopne mov push jecxz call jb test js ss jle xchg push aam pushf pop or add in push test mov adc std adc adc add outsl inc mov mov jmp or hlt add fldenv in mov cmp add (bad) lock adc in jp push es or movsb daa push add sbb inc test pop mov movsb and or mov addl pop lock xor dec bound fs pop gs mov mov mov outsb add pop dec add test xchg lock add jae,pn pop and add int3 loopne ret and mov add mov repz cltd adc lcall and leave sti cmc jmp into push xor jo hlt leave ljmp aam loopne xchg out rolb shlb cmc xchg xadd cmpsl push xchg adc nop mov sarl faddp out cmp aad mov shlb nop gs roll inc dec mov jo push inc lock (bad) enter fldcw or mov or fs pop ficom cmpb lock xchg xor ja xor rolb mov jmp xchg sbb sbb lock push popa or jns jg add testb leave shrl icebp shrb add jo daa inc push add (bad) arpl in inc pop pop sub mov inc add ficom mov jmp (bad) push adc cmpsb jge rcrb cmpsl aas (bad) je pusha (bad) and dec mov hlt add push xchg mov sbb sub dec push pusha and push mov inc add iret out outsl mov mov and inc inc shrb imul inc mov mov inc js cli test aas inc or (bad) mull pop sub cs jno imul stos pop adc stos addb sub aaa cli sub insb loopne dec xchg testb scas pop xchg fldenv cmp xor je and cmp inc fisub sub sub fisubrl push add ret loop loope adc and pusha repnz cmp jne xor jnp divps mov ja add add xor lods mov imul add int pop hlt pop xchg cmp jl add movsl aad pop push mul push mov jecxz sti xor cmpsl sub data16 (bad) push push (bad) cmp and push (bad) ret imul pusha jg mov inc dec cmp (bad) lds jnp,pt add cmp (bad) insb inc and mulb aam fs mov fisttpll orb add mov xor add (bad) mov adc ja dec xor outsl adc bound add mov adc jne pusha into xorl mov je loopne add jmp lahf pop and ret pop sbb pop and rclb pop hlt push test push inc sub xor jbe sbb (bad) mov xorl out (bad) push ret mov clc cwtl mov xchg ror or gs jne insb sub mov fstpt sti stos popa cmp loopne jge or add loop push pushf test mov mov xchg inc fadds les ret inc lea pop jecxz lods push in xchg (bad) mov mov jl hlt out repnz stc rcll psubb rorb push dec mov mov mov lret into pop xorb add cmp ret inc mov xor push and testb rcr inc fadds inc push and sub add or pop xor inc mov loopne add scas lret call pop mov into es or (bad) cmp and add popf test xchg inc dec jp pop mov inc scas and enter add sub mov fcmovnbe jmp addr16 push in sbb mov mov jbe and adcb mov negl fadd repnz nop and mov faddl imul rcl sbb push lret out add jae adc sbb jne addl sub cli sbb pusha into loope popf fnstenv out push add ja dec es (bad) or les rorb loopne push pop mov dec lock sarb dec adc (bad) lcall jns je inc mov xchg pop ret xchg jns push or int3 adc pop add nop daa add cmp adc sub pusha xor les clc mov adc sbbb jae mov pusha pop movsb xchg dec cmp mov add ljmp inc add mov dec dec jl xlat jg dec insb movsb add cmpsb mov roll fmull xchg mov sbb loope sub movsb add xchg pushl adc pop cli movsb cmpb cmpsb or add mov pop and push push add ja push clc cli pop and repz inc xor and and fidivrl lret cmpl mov jmp xor xchg mov and movb sub pop mov ja (bad) iret jns lods cmp cmpsl push lret adc loop testl js pop das dec and dec or sbb inc pop lcall inc je repnz mov add dec shlb jbe pushl loopne pushf adc mov cwtl insb add stc repz xchg adc enter adc notl add push cmp push pop add iret adc stc and mov nop fwait js addl jnp dec test pop add insl dec (bad) or call mov lock jns or call icebp push cmpb sbb add je or mov data16 sbb dec int outsb add inc pop sbb jl xchg sub into mov es add xchg movsb in mov (bad) jmp mov xor mov adc test cltd xorb imul dec inc bound andb or lods int3 std loope or hlt cwtl inc sub cmp lods add loop jns add jnp int3 mov add ret aad lahf loopne xchg mov push inc js add dec sub loopne or out or pusha add pop lcall orb ja scas mov andb jg jae lret push ja lret jl push jbe repz pop jo and inc adc inc xor lret dec adc add xchg dec or (bad) invd aas ret add dec cmp pop mov mov dec lds sar jecxz call test cmp bound sbb push lock pop into cmp lret stos add dec inc nop in int3 fwait push (bad) mov sahf stc jge repz into aad dec add or (bad) jo or outsl add call dec push and push add cmp cwtl add push insl fs push mov clc sbb sub pop lahf fwait add div in mov jb push lcall mov jecxz add mov add or movsl or test adc andb inc add push xchg and shll cwtl jns arpl lods or iret sti leave cwtl jl inc cltd or sub inc popf adc call push setns or jbe hlt sub repnz dec pop aad jecxz push call stos xor pusha add and xor lds hlt aas sub push pop popa ret out fucomip mov add push inc xchg pushl outsb mov dec movsl jl mov (bad) and enter jg fcoml cmp inc mov pop je mov cmp xor pop (bad) pushf ret inc mov es rolb ja xchg ret ljmp jge outsb xor jns mov xchg inc aaa mov loop add popa jb enter sahf leave jmp mov loope iret stos fmuls leave or call sbb dec cli mov xchg insb ja cld mov imul adc inc in lock hlt jo sub mov jns xchg and insl lret add clc push in cli int mov or or cmpsb mov dec push add mov inc enter sub mov ja stc push inc call pushf pop add ja js (bad) loopne inc lods sub mov ja mov xor movlps mov ret fstps or sbb cmp cmp push sub jb add pop xorb sahf std dec mov jb xchg xlat sbb inc xchg fs movl sub aad cld lock ffree or popf add and mov xchg add insl scas cmp push out sub push ja jge jbe adc cmp xchg push fsincos out or adc jae push pop les mov scas mov ret test adc lahf mov ja push mov lds hlt loope push xor xor dec sbb scas xor mov addr16 popa add mov and les cmp dec je stc pop outsl push bound push lock xor add add rorb jno or inc mov pop ss cmp xor jo adc psraw mov mov (bad) out sbb test dec jl pop aaa aad push enter push movsl pop dec jecxz cmpsl lcall bound aam and cltd aaa mov mov jmp push or lock into push pop iret xchg movsb add cmp xor xor inc ja ud1 push jae loop leave pop push in jg pop xor fwait push ret inc sub out add js scas imul xor (bad) pop inc push cmp cmpb lret and add aaa lods test lahf sub out sbb or dec inc pop jp insl push inc repnz xor test cwtl add mov mov and int3 jnp je or xchg fsubr xor (bad) pop test nop xchg jo add jno jae cmp sti frstor xchg test arpl sbbl iret orb cli add out in sbb pop loop sub mov inc jb lret push (bad) lds sbb icebp inc pushf jl push repnz popa dec rep repnz ficom daa (bad) cltd sbb outsl push les sub adc movl mov and push add test into hlt aas pop push add jge lret stc cld and mov pop fadd cmovo test pushf cld and (bad) xchg ret or hlt push adc pop (bad) js gs ret rorb mov and jmp lods push lods cwtl or ss add jne jl adc enter shlb sub pop clc das rcll push or jecxz push mov lret push sbbl jl pop inc outsl xchg addr16 adc pop or push pop rcrl int3 jg sub and lret insb xor shlb xlat mov or fiadd add scas mov push adc add arpl add push jo jp mov sbb cmpsb pop lret cmp cwtl cld add inc mov jp (bad) lahf or outsl cmp insb loopne jo push sub sbb hlt icebp and mov lcall nop push add xchg or cmp adc sbb mov lret ja lahf fsubs insl pop clc test repz int3 movsl mov or add ret (bad) js test int aad repnz sti dec xorl pop pop lock ficoml outsl es push rorb int3 jp xor sub xchg pop cltd test lret loopne loopne pop or add add pop out pop adc (bad) out pop or adc sub pop xor push mov dec sub add jne (bad) pop xorb add in sar fistp add push call push add (bad) lock and adc push sub test in sbb and add jne adc (bad) dec pop aam cmp or popa iret add jp add fdivr pop add jle dec leave mov dec xchg push adc inc add jo add xchg sarl cmp pop mov and icebp or js inc es mov faddl xchg outsl xchg push add dec mov mov add adc rcl nop sar or xchg int3 adc and cwtl mov pop ret mov cld (bad) add je les mov into rolb pop pop add pop insb fistl jbe notb (bad) mov (bad) aaa mov popf sbb repnz cmp fcoms mov sub jg ljmp push jnp push mov (bad) arpl adc and les xor pop scas xchg lret aam mov movsb and aaa (bad) (bad) inc rcrb cmp ss das daa shr xor add insl (bad) mov add cmp fsubrs ljmp push xchg sarb push add inc cmp icebp repz sub (bad) insl jecxz add add sarl add mov out mov jl popa lret insl mov lock mov jle pop push mov popa aam arpl loope das pop (bad) cld jge div and idiv (bad) rcr loop mov (bad) daa fildll mov add sub addb mov push mov cs jge bound out adc movsl sbb inc xchg cmp or pop callw (bad) pusha das add divb test jge add mov daa sbb or adc mov add je fistpll sti push fucompp or popa and xor es add adc subl out out sub cmp adc sub stc adc push jg mov cmp xor push or mov inc fstpl leave or push mov ja sbb mov add sbb call mov adc jae testl mov xchg add xor pop shlb test rorl (bad) mov ss cld xchg xor (bad) enter add inc sub test clc fidivrl push jge nop cmp xchg dec xchg nop inc data16 icebp ljmp xchg or int call add fbld sub cmp jle and push lock fistpll mov sbb add sbb mov popa rorl cmp push fild fsubs jns add xchg (bad) mov add sbb idivl ficom sbb pop daa cmp mov fldz bound inc push mov jb addr16 xor nop xor outsl out push sbb mov push xchg icebp imul call test xorl inc add sub into dec jo or mov stos push adc or popa mov pop imul dec pop adc clc add push adc rolb add icebp jno mov aad in jmp jns hlt inc (bad) je inc es dec int3 fidivl nop pusha jnp or and sub in inc pop xchg insb into adc rcrl test test add and dec sbb addl imul sub icebp mov mov aam fwait ret shrl xor pusha xor and inc (bad) test add enter add mov lods add sub sbb sahf fadds (bad) jne sarb fisub arpl push pusha jns and stc add jge or sub dec movsl xchg add stc mov lock inc aam outsl mov pop enter mov mov and leave pop sbb cld sbb notl xor incw jbe movsl lods or sbb mov dec inc or push mov shrb jne push fcomip inc inc fs add (bad) mov xchg fisttpll mov inc imul mov andb test add add mov xor inc xchg mov aas mov ja scas xchg push or mov sbb mov mov push cmpsl nop (bad) mov pop out dec testb (bad) sbb shrb jb push cli cmp xor (bad) lock inc inc ja sbb and cmp inc inc inc fistpll and jmp aaa nop add sbb dec loopne mov xchg inc sbb int3 xchg pop inc js pushaw ret fsubrl lret cmp sub dec cmp lods jns sbb sbb xchg mov jno inc inc mov nop and sub push shlb or adc add sub movsb loopne in sbb push fisttp inc jge pop mov test out push (bad) sbb cld dec lds test loopne gs fmull mov sbb test rorb fwait imul xchg cwtl sub cmp inc pop lcall fadds imulb (bad) mov enter in jg lods rorb mov dec mov inc pop fwait ds lcall in jnp mov add lods enter ficom push movsb mov dec mov (bad) repnz and cmpsl or out nop loopne (bad) int3 xchg fdivrs inc icebp cwtl enter bound add rorb jmp inc mov or cmp sub add lds aas pop jmp xchg xchg cld or hlt faddl xchg mov xor xchg pop (bad) mov outsl mov and ljmp jmp idivb stos mov mov nop dec mov xchg call imulb popa push or cmc repz enter xchg cmc pop xchg movsb fcmovne js push xor mov sbb jns fdivs iret sbb adc mov add mov pusha pop enter int3 dec cld or int dec dec inc or neg adc dec inc test pushf pop mov jmp pop (bad) xor add push and ds mov dec pushw and out xor insb scas inc push and lcall dec cmpsb popa in enter jo adc ljmp inc and jl clc adc out adc and ljmp add and push xchg nop mov das lock pop mov dec movl inc and or mov xchg pusha dec mov test xlat mov (bad) dec mov nop je inc dec scas cmp rep call inc out add mov cmp enter pop push cld sti bnd pop cmp add push inc add sub jo rclb add mov test add and and iret out add movsl cld mov pusha mov fnstcw loope mov sub sti repnz add movsb add and pop (bad) jl sbb jne xchg add jg mov mov fbld inc (bad) push xchg aas addb cmp add pop jl orl (bad) jp pusha dec mov push in inc add push bound push and cmp in outsb add dec data16 jmp mov or xchg lock cmp mov orb jb pop dec mov sarb add push jmp pop add gs push inc add popf imul and push inc xchg imul push xchg cltd outsl dec sub xchg movsl lock dec xchg mov les (bad) jns adc add pop pop lcall and xchg dec mov pushf cmp push sbb push lock (bad) and lock sbb aaa andl je cmp cmp arpl push and push mov inc or jge adc cmpsl in dec lods sub cld mov pusha test pop push jl dec das adc imul push inc jmp cld je jp and push mov movsb cmp jl and fs add repz lods cmc push js fs sbb fiadd mov fs adc repz add xchg (bad) mov jns jle test les mov add pop mov mov pop and mov jno add jge rcrb imul add ljmp dec pop pop lods sub mov sti ss mov or popa (bad) push lret shlb inc loopne adc movb lods in sub jo cmp stos sub and sub hlt xchg imul int3 pop pop add ss call test jne (bad) and sub imul sbb inc sbb sub adc add adc jl xor mov sbb (bad) mov out cmpsl jns add cltd fs vpmuludq fldenv add pop push mov out cs inc adc cmc sahf sub add mov or cmpsb adc (bad) cmpsl nop push xor push mov jecxz loopne fcompl xchg fildl pusha jg and push push mov rcrb pop imul hlt test in int aad and aaa jg dec cmp mov mov add test out mov xchg xor jnp cld loopne mov sbb inc shlb addl out dec sti add outsl inc test or pop xlat cmc loope call scas inc loop,pt pop incb ds fbstp cmp push call enter inc ficomp jbe fucom jl sbb adc dec pusha push mov add adc repz (bad) add mov mov test subb inc or add inc loop xor dec nop imul (bad) push cmpsb jl mov pop ss enter or cmp or push cli faddl or adc hlt and (bad) lock stos je fcoms stc mov daa mov mov scas jl cwtl push (bad) jo push mov lods scas leave mov add aam (bad) imul inc inc or jl sbb fnsave lds mov gs push sub adc add mov lods add test rorb ja add sbb pop jle roll add (bad) mov inc lock lods pushf xchg test adc test cmp fdivr scas push icebp std add adcl jle xchg sub loopne xchg ds push rcl or fisub sub int3 dec pop pop cmp lret jl adc outsb arpl (bad) add xor test pop push les pop xchg inc je mov fnstenv (bad) and sub add sbb xor adc pop sub add mov sub adc mov fisttpll sbbb jmp xor pop sub pop nop lds add jmp or hlt pop dec and lods mov loop das aas out cmp add fdivrl jne stos imul mov outsb sbb mov mov lahf and js mov inc shlb popa mov dec push push popa icebp andl xlat in xchg and inc in inc sub or cmp (bad) inc pop (bad) sbb dec mov jns sub insl or cmp icebp jl out fmul sub sub mov clc sarl test dec and cmp out aam rcl (bad) cmc xchg out fwait dec mov or mov js mov loopne sti lods int3 jl push push rorb sbb or (bad) jecxz cmp xchg adc mov add addr16 lock lock or dec add jg pop nop jnp inc stc pusha or enter cmc lock cmp cmp jge add sub fsubs insl fldt lock test call sbb pusha adc test inc mov mov jp cmp movsb nop lods inc mov xlat sub sub sub sub and inc sbb lea push xor jp aaa into push fwait arpl call add adc pop mov sahf mov cld pop jno mov popf in xor cmp mov in xor add sahf xchg nop add insl add add bound lock nop xchg and jmp push lret int3 xchg cmp aas cmp mov pop mov or test mov adc mov xchg or das inc jae cmp adc cmpsb cmp pusha jmp or cmpsl or mov dec inc mov adc mov sub insb js data16 (bad) jo and xchg add push jo or pop mov cld add sbb xchg mov int3 cltd cmp mov jge cmp cmp and cmpl std sub adc dec or jl jl or cmp cwtl xchg shrl sete dec dec enter mov icebp insb cwtl jnp data16 popf push sbb push sub pushf sbb xchg pop mov nop movsb or mov dec out lods push out rcrb fadd fbld nop mov movsb (bad) add xchg sub repnz ret and dec dec mov jnp in pop insb xor mov dec js je add loopne and js into xchg mov or xchg dec (bad) mov (bad) stc popf adc push adc inc jbe mov pusha pop testl loopne loopne popa or scas add mull int sub xor cmp call jno movsb aam add popa xchg test js add sbb add call push or adc das aas data16 push js and aas int3 loopne sbb pop sub pop pop (bad) mov xchg cltd movsb inc xor adc je fldcw aad xor mov mov lods shrb xchg mov adc mov and mov cmp xchg test rorb pop pusha addr16 js cld movsl fs adc add lea xchg push add popf sub and xchg scas int3 (bad) rorb mov cmp sbb and jmp mov insb push cwtl ret test fcom sbb les cmpsb push cld push inc clc lret pop push jl mov cmp nop lea xorl mov pop lods xor cmpsl push roll pop sub add inc subb ficom xchg outsl xor push and gs xor sbb mov cmp jg mov add in js or int std out shlb inc sub push sahf inc push std dec sbb push sarb cmpsl data16 ss test xchg mov movsl or fsubrl dec mov out in lcall dec jnp int3 lock jo out pcmpeqw sarb js cltd mov rcrb dec imul pop sub decl xor daa out orl push adc xchg rcrl and xchg sbb popa sahf xchg cltd and insl mov mov fstl add push push and cmp lret xor adc adc or daa push sbbl cmpsl cld mov xor or xchg sbb fcoms cmp test int3 and scas into mov cli dec jno mov mov push subb test xor loope in lock mov pusha adc add mov mov jmp mov add dec movsb mov je and fcmovb rcr inc adc pop leave adc adc mov rorb stc and jp adc cld call add dec leave mov add xlat bound fstpt add xchg fidiv dec mov fild push and adc lea rcr clc cmpsb nopl mov outsl in inc add mov (bad) inc nop cs and call adc decl xor cwtl dec or cmpsl loopne (bad) jbe fisubl cld mov jnp or adc adc das pushf xchg in js mov xchg adc lods or mov pop dec addl jmp xchg xor xor and inc sub pushf es pop and ljmp andb enter divl cltd push inc cmp pop jecxz nop cwtl push lea andb lds dec les stos pop out stos push push mov dec gs cmp lock lock lret test loope xor push (bad) pop hlt test adc es test xchg mov add inc out sti inc nop int mov and xchg add pop inc jl clc dec add pop lock push pop push xchg or rcrl sti and ja pop jb,pn add mull test leave jg sti es inc jo lret enter int3 mov test fildll add divl push or pop sti mov dec add inc jg dec in mov (bad) fbstp adc dec xorl scas jns pop and push dec lods mov adc xchg dec sbb ret call ja sub mov add cmp push mov xchg lods and mov cmp jbe fldenv (bad) test mov add cmpsl inc mov enter or jne push es sbb adc icebp (bad) in jns jmp ss or or rcr push pop sbb and fbstp fdivr and cmp dec out test cmpsb xor mov jg sub insl xchg inc addr16 call cmp mov popa add neg push (bad) mov repnz (bad) mov mov jo fbld int3 roll mov push inc or jnp push leave xor mov and xchg mov and add ljmp mov inc inc add pusha adc addb clc add lcall cmpsl sarb xchg jno sarb lcall cltd sbb movsb cld and xor sbb pop xchg xor dec push mov cld xchg sub test push ss pop mov bswap pop mov cmp repz jno mov cs inc nop loop dec sbbb popl sbb test (bad) push test and push and inc cmc xorb int3 add nop xchg sbb dec xor or push add sub int3 push inc rcl mov adc pextrw mov sub dec sbb lods mov in push int cmpsl out mov inc add pop sbb jo sahf pushf add mov fs cmp dec test stc out mov add dec data16 test movsb cmp push pop and and mov cmp adc js hlt movsl rorb mov loop adc and add inc mov dec pop add inc xchg in outsl and sub pop inc (bad) adc sub add cltd lea adc xchg xor or inc mov lsl push and pusha mov push data16 add xor add aaa js mov add test jns or test push lock dec add pop or jmp loopnew or push adc imulb out mov push add xor sbb into das pop (bad) pusha mov repz sbb pusha sub faddl hlt lcall rcll sub and jnp jl and pop fdivrs movsl mov lock inc inc xchg movl cld mov add mov and mov or sbb pop adc mov jbe add je (bad) lds aas adc xchg mov sbb inc (bad) aas or outsb lds xchg lods push into xchg je fsubrs mov lret or dec (bad) sub cld divb dec and insb sub xchg addr16 sbbb rcrl inc xchg dec dec rclb adc mov jns or fs dec push xchg and inc hlt inc push and adc dec jnp xchg fs mov jne xchg jb lret push hlt push pop jecxz mov mov adc inc dec inc xchg push xchg push rcrb out pop and test pop jo push sub add adc mov cmpsl dec nop movsb or fdivrs xlat out push mov lock xor movsb add inc xor sub add mov cld xor jmp pop push sub cmp add add pop mov inc cmpb adc jno xor dec cs pop push xorb outsb rcr adc das imul mov mov (bad) mov iret es dec int3 add sbb dec add ljmp xor ret es push add std jne das (bad) jmp data16 lahf jmp xchg adc int3 lea out icebp dec inc adc cmp add (bad) lods pop add or nop and in mov jns jge xchg cmp push xchg dec cmp nop sbb cli ljmp (bad) hlt xchg push and fdivs add sahf outsb daa dec sub sbb jmp jle loopne mov fwait mov inc es lret mov fidivrl ja ljmp fwait sbb fucomip or fucompp adc icebp mov push cmp test adc dec std pop adc push test (bad) ds inc dec jg push jle xchg dec dec jo mov out inc jae pop cmp pop mov and cmpsb jo fbstp jmp jns dec enter pusha and (bad) hlt dec pop je dec add mov dec push add pop xchg cmc mov xor xchg inc or sub lock xchg pusha mov add inc dec addr16 jns or aaa jno cmp lods test les cmp cltd xchg into cmp add cmp fwait dec cmpsb pop mov inc and lock push sub adc rcrb jl add subb adc mov mov pusha mov and mov js pop jmp mov aam cwtl jl hlt pop hlt push idiv (bad) bound and add and or test or sub dec in cmp dec add mov lods jge sbb sbb sub pop popa and fildll xchg and and packssdw aam sti cmp xchg jnp and add iret mov out and andl mov loopne repz daa fdivr insl add add pop roll xor xorb push pop cwtl mov leave pop jl push (bad) ror and cld dec repz sbb cmp adc dec cmc adc fcmovne shrl push mov push lds sbb inc dec jmp fcmove jg cmpsl fcmovnb shrl adcl inc rol mov jno pop and test sub add xchg push nop jns add lock push (bad) int3 mov pop insb (bad) jg cmp (bad) scas fdivrs jp dec xor rolb mov fisttpll xchg test inc stc dec mov (bad) fcomps arpl add mov dec rorl mov pusha cmpl xchg or fwait push popf je jge shlb jg stc cld add rclb xor ret arpl xchg xor int xor mov or shlb xor aaa pop add aas repnz sbb inc add adc rcr mov xlat jno cli ja lock xchg pop push or jno inc mul jmp add testb repz push jbe add pop fildl mov sbbb dec outsl loopne addr16 inc test je sub sbbb adc cs pop pop arpl mov std sbb jecxz loopnew lods fisubr add imul dec jnp aas mov add jne mov (bad) (bad) pop lods push cmp loopne add add nop std inc out add mov sub add rorl aas add out out dec ljmp add push ret jmp add adc insl add add xor inc or out push popf sub mov lock jg jns insb iret xchg cmc cmp jo dec fimul inc add es andl sbb mov lret aad rcr sub xchg sahf mov adc pop stc orl (bad) in add xchg sub pushf lea dec add jg dec leave lods test cltd add add add inc jno or jmp mov pusha daa mov sbb stc orl jnp pop and push adc bound enter lods and hlt cwtl jae call icebp add xor push (bad) sub mov push xlat stc lea dec and or cmp insb add mov out cli std add movsl ljmp push add xchg hlt xor pusha es sbb push mov add mov jg or pop xchg int3 ret rcrl (bad) rcrb push pop pop xor adc inc add mov add in loopne sbb sub pop xchg aaa jo roll andb jle pop push das mov test jbe add (bad) pop gs nop push jge inc nop pop out out adc push inc enter xchg jns ror in inc pop add push test cmp push add sti jns jae add xchg push add icebp or in lods jmp nop dec js,pt test pusha jmp adc stos loop sbb and inc loope loopne hlt pop or sbb frstor mov sub imul xchg xor rorb xchg sbb pusha mov add mov cwtl aad dec xchg dec xchg lcall lret subb pushf rcl push aas popf dec movsb mov and sti jle inc xor pop into inc movsb or cmp and push jbe jmp fs movd loopne lahf xchg xor adc dec xchg sbb aam adc sbb cmpsl popl inc mov aaa sbb add jp aam push inc mov lret push adc cmp pusha add add mov push daa (bad) fiadd int shrb add aad pop pusha and mov notl in imul jb es add (bad) rcrb mov xor push xor insb popf mov cld and je clc leave js rorb addl andb xor dec inc mov adc into inc out add jae sub lock in cmp test xor jnp lahf mov ficomp sbb outsb push into dec mov dec je movsl (bad) insb push in add xchg iret jns pop mov sbb mov push aas xor hlt sbb rclb aam adc jb xchg mov mov mov sbb push imul or jo orb sub or repnz xchg and sarb inc call jo fsubs add push ror dec fsubrl stos or roll repnz or movsb sub and imul adc in je in pop mov popa and in roll push xor rcrb xchg mov call cmp cltd add mov dec pop call mov fsubl push fsts push sbb and add scas or add or enter add mov into add xchg and adc addr16 jae pop andb adc imul call add sbbb push mov mov mov push gs in xchg add shr ljmp lret adc xlat cmpsl adc add or push or or cli imul mov mov jbe push cmc add push jnp sbb ja sbb push push sub (bad) push add push push movl mov es cmpsb negb jmp dec add xchg data16 sbb mov mov xchg xchg enter nop xlat std cwtl clc imul pop out (bad) cs xchg and mov test imul mov add jne (bad) mov das pop pop dec or hlt adc jp or sub cmp xchg jae mov adc inc ret add inc or add jp in add loopne cmp mov pop pushf subb insb pop pop cmp adc mov repnz push xchg or mov sbb imul mov adc pop ja sub lret js (bad) cmp sbb push adc stc pop cwtl imul push jae add and mov sbb (bad) mov scas cwtl add je jo sub fdivr xor mov addb data16 js sbb pop cltd (bad) (bad) aad sar mov out sbb inc popa pop icebp xor push in cmpsl or ja add icebp not adc inc xchg stc cmpsl add mov pushf dec dec pushf lahf orl mov test adc sbb mov push lods out push pop add mov inc out or xor xor jne pushf adc add int3 fsubrl cmp lea in faddl (bad) xlat mov add mov aaa test popf add dec or (bad) sahf mov jl imul and push arpl mov xor or dec add rclb or les jmp aam pushf bound cmp and mov js fmull mov jae add sbb jb push pop mov and adc adc mov pop rcll (bad) cld int3 aas push (bad) jnp,pt jp dec push adc pop sbb pop jp loop dec or jecxz dec into and xor insb dec xor mov popf andl jl (bad) stos xchg or jae sbb (bad) mov (bad) or mov cs iret or sub mov aam andl adc shl (bad) dec pop icebp inc dec addr16 mov dec inc or and (bad) adc imul inc and incl push or pusha scas mov test xor or test dec insb les pushf dec push jge pop les loopne xchg hlt scas add out push aam in adc int3 or pop cmp sbb and mov add dec cmp cmp rcrl lds xchg xchg nop pusha mov xchg add out sub int3 mov fdivs insb or push mov or inc adc sbb lret dec test sub bound dec popf popa mov inc hlt mov add aaa xchg adc or sub or fldenv and mov mov mov aaa addb add mov jae xchg inc add and jbe push daa lret sbb inc pop add faddl sub add add jmp cld test and push aam xchg aam pushf add lods pop imul adc inc movsb xchg cwtl les flds xchg mov lret in mov push add dec pop (bad) sub jmp mov add fstpl sti test pop nop push aad fnstenv adc fisttpl aam cld adcl mov xorl xlat jp es dec inc ja xorb gs add fsubr push repnz pop inc cmp inc jo push push inc call rolb push inc sbb cmpsb jbe mov adc xchg adc in dec and add mov pusha enter sub cltd orb (bad) xor pop call and adc test xor imul mov fistpl sbb add cltd push cmp hlt nop mov loopne punpckldq aaa popl insb test mov sub add fcomps add or jb add dec or dec add fsubp sbb es jo rcr jecxz sbb arpl lock hlt adc xor bound movsl mov sbb mov fidivr pop and cmpsl adcb mov inc adc sub mov pop mov push jl mov fnsave shr imul scas scas and and push sbb mov adc pop roll mov push test sbb movsl mov out pop mov pop lcall xchg mov lret sti cwtl sar add inc mov add sbb loope into loop push jp aaa (bad) ljmp dec dec xchg ja cli push add add popa push push notb mov add les test sub in or enter mov inc adc xchg clc mov lods adc sub repnz pop out or (bad) jle xchg and sbb push arpl adc ret sub dec inc and loop jns push sbb xor jo fcompl mov loope inc pop (bad) int3 xchg orl dec mov mov dec add stos loope add nop and insl fiaddl inc fstpl xchg and out jae xchg and jno and clc fcomps sub je add or lea out aad dec enter or or push add nop jle inc popa mov push mov js jb mov lret pop dec push aam insb cwtl clc ss mov clc rclb daa inc mov mov test lds clc push pop test inc xchg and jbe jae inc je xor sbb sub aam sbb (bad) pop or addb ljmp xlat jne (bad) jno push adc stos insl cld shrb jo inc les aam mov xchg fsubrs add cmp xor les cli loopne arpl cmp es lcall inc shrl ret add loop mov dec mov mov mov outsl (bad) (bad) lods nop (bad) dec cld sbb in es mov call dec push js xor add xchg xor sub ror leave push cli stc sbb lcall cs stos or shlb push push pop jge jge jl rcrb clc rcr push bound inc xchg xchg xchg xchg cs movsb (bad) dec nop cmp xor sbb in rcl jne or lock pop xchg (bad) ss mov repnz hlt and inc iret outsl scas aas sbbl adc mov adc mov or mov inc rclb nop hlt xchg fsubr push mov jmp add (bad) xchg addl lret adc jmp lcall divl subb aam adc nop nop lea es dec xor and sar fucomip add leave push enter push push popf loope or les add or rcrl cs cmpsl in (bad) addb bound pop or insl dec push adc xchg add add roll cmpsb in dec lea push cmp mov popa and mov xor xchg aam xor mov pusha adc nop iret add push mov out pushf lahf pusha adc jp adc pusha call push and hlt xchg addb lock push add pop shr inc push dec push add (bad) or ljmp xlat mov jge or outsl xor sub fadds xchg std inc (bad) (bad) lock idivl loopne push add adc repnz dec mov jecxz push xchg xchg cwtl adc sbb mov mov mov xchg sbb inc add mov inc jno pop test push mov push mov pusha sbb jbe repz adc inc xor jg xor jge mov xor pop xor mov fiadd subl aaa loop xchg inc clc sub test cmc fdivrs imul xchg sub hlt push mov cmp pop push inc insl rcl loopne pushf cltd rcrl push into leave stc mov mov xor cmc or gs jge fiaddl xlat add sub sahf xchg adc (bad) fs add addr16 scas push jl push mov adc aas mov dec pop dec fstpl pop or jl sbb or (bad) incl and mov add lret cld dec das jmp fbld mov xor into inc xchg orl loopne stos cmp popf xor inc (bad) or and js mov sub or mov jmp sbb cmp add jg adcb imul and insl rcrb jle add dec xor push lods pop add test popf bound add movsb ds mov sbbb add mul mov pop adcb shrb loopne adc mov fs lock clc out push mov inc jo xor test or push ss dec xchg cli mov jp mov sbb dec inc je jae jmp int add or jge (bad) mov xchg add add (bad) push push mov mov dec rclb das insb add add js imul mov jmp mov mov mov dec xchg insb add in negl pop sub clc push aas xchg hlt push lods add clc or cmpsl movsl test push inc mov jne sbb into ljmp add inc pop jge sub push mov out push pop mov and or mov mov sub xchg adc jmp adc (bad) int3 jb cmpsl nop mov ss pusha pusha xchg popa popf xchg (bad) cld dec pop pop or cmpsl inc adc lds mov mov cmp dec jns sahf int3 jp pop fnstsw add bound lods or cmp (bad) jo es out mov adc rol jmp adc xchg rclb aaa jg sbb movsb add clc push les rolb jmp scas pusha call mov out dec pop bound in mov mov idivb std jb xchg outsb (bad) je pop das sbb pusha cltd pop int3 call sar jbe movsb pop lahf xor stc sbb xlat in rcrl test (bad) ficompl add shlb rorl std mov popf dec push stc sub cmp lods add jge push xchg pop xchg adc (bad) push mov pop (bad) ja mov push mov jmp or movsl adc inc mov in xchg xchg adc push inc push outsl adc mov pop cmpb das adc push fiadd ret push cmpsb jno mov (bad) jb fisubrl test stos sbb adc inc add test lret fnop call or push or adc xor push scas mov loope or or outsl das lahf dec fcomps clc push cmpsl mov jmp in lcall ret (bad) jmp sub jmp sbbb cwtl pushf mov aaa aad hlt les pop sbb or xor je nop lock pushf fisubrl cwtl in jb xlat outsb addl pop push cmp test or inc push dec sbb inc or add sbb scas pop push dec or cmp fmuls subl push cmp mov out in es or mov cmc lcall dec sbb add scas mov add jbe and add xor mov pop cmp setae jg sbb call xor subb dec add in mov jne push addr16 jl add mov test mov inc push add sbb add pop hlt (bad) mov rcrb rorl faddl sbb pop mov add mov and inc test jl inc btsl hlt cld sub shlb add or sub mov adc jle mov daa mov dec sqrtps and push int popa repz je rcrb lea std xor mulb clc icebp pop jns (bad) sbb or into mov add mov dec loopne pop inc sbb lahf inc ss dec call sub sbb shrl xor add mov lock mov in (bad) lods lds daa das mov push mov mov pop adc inc jns adc sub cwtl dec inc jno adc pop dec push mov dec add aaa cmp ret (bad) enter xor mov (bad) call aas add dec fdivs sub in dec xchg into sbb faddl cmp pop add push (bad) jo dec test push (bad) orl adc loope not and mov push push pop xor add xor sub mov out push cmc pop inc les sarb in or jle (bad) or mov in ja jnp cs lock (bad) dec push sub and js push xor add xor or sarl add sbb cmpsb popl pop cmp inc mov mov or enter pop add and adc adcl cld fcmovb sub push cmp cmp pop fcoml add or lods pop mov in loop clc adc and sbb in pop and sub decb adc cld pushf pop ljmp cltd lock pusha aam sbb int3 inc pushf lret out and add add loopne add sbb mov or lcall (bad) in aad jmp lret dec dec shlb add jb cwtl sub add sub (bad) sbb call mov add sub sbb xchg pshufw dec add insb popa leave inc push add cld shr or add std popf adc mov mov push xor add sbb mov iret pusha mov pushf or mov mov add xlat std sarl loope pop xor cld xchg inc xchg adc inc mov sbb icebp les ljmp popa or (bad) mov sub leave in and add add mov movsb (bad) jne insl loopne mov and mov cld adc pop or xchg fmull xchg mov sub jnp adc fs nop dec and xor jb cwtl orb test push lock sbb adc or int3 or stos or ret add rcll call dec loope xor pop movl push jle or clc test fnstenv add mov inc je dec push faddl sti inc add xor or pushf inc arpl push enter mov adc add lret movsb (bad) jl xchg pop pop ja jp cmpsl popa iret sub mov add mov jp and dec and pushf and lods push test sbb and pushl mov push aas mov adc movsl ss push push mov jmp inc sub in (bad) aaa cmp mov and sub jnp add and stos mov adc or andb jg dec enter sbb fldcw fs in sub std or dec sbb nop adc push inc dec mov adc adc (bad) add ret push fcoms fisubrl cmp fisttpl xor xchg pop jo daa scas push xchg dec xor iret add jno jbe inc mov ret call ret (bad) test (bad) sbb add clc cmp dec dec push and xor rcl adc pop mov lock sbb rclb inc outsb es or inc cmp or mov mov lcall jmp (bad) jb int3 aam and adcb add (bad) and cld sub pusha ds xor sahf xchg mov fs adc shrl in lret lods nop insb sbb xchg fs arpl sti jp add push pop pusha imul faddl xchg pop outsb adc sarb and adc inc adc hlt adc push lods dec nop jl cwtl cmpsb pop mov jbe xor in (bad) enter xchg push fs lret iret or cmpsl popf push pushf int3 and cmp iret push stc or sbbb test mov dec cmpsb xchg addl mov into cld push xorb or aaa inc push mov js sbb jb add xor (bad) loopne dec iret mov es test int pop std insl (bad) lock jb,pt push push adc jl aaa iret mov cs mov and test loopne lods std cmp pusha addb mov add dec add ret adc nop loopne mov pushf xchg xor jns mov add ja (bad) pusha in (bad) repnz add cld hlt cwtl icebp inc and repnz sub push movsb or cmpsl sbb mov sbb sub test flds arpl add lahf insl cs out pusha clc jnp (bad) dec inc dec cmpsl push les adc add lret shlb hlt sar jno rcll pusha insb imul add lcall jle (bad) jae add (bad) cmc push mov jmp inc cmpsl enter xchg pop sub pusha fadds xchg subb bswap add adc (bad) adc frstor rclb push add lret fidivrl hlt sub punpckhbw push shrl inc sbb mov mov hlt int popa fsubl ds jecxz add pop outsb in mov mov xchg jae mov mov mov add imul flds jmp stos sbb pop out and xor out sarb cmp popl in pusha (bad) xor insb add cltd aaa sahf ss test mov pusha cmpsb lock sbb pop sbb cltd adc cmp loopne stos fdivrs pop xor inc je rclb (bad) nop pop mov (bad) jb mov add fwait sbb ja push (bad) dec mov test lahf int3 add call mov test sub xchg aas push aad (bad) nop popf out jbe or mov sahf jne push dec inc add arpl xchg inc in popa add push add lock lcall out push push xorb data16 push ds jle ror pop cli add int sbb cmpb jp lock sub add faddl mov enter cwtl in pushf mov dec or add add pop shlb pop sbb cmpsb adc sub xor push add add jne nop test outsl orb fmulp sar xchg lock push adc int3 bound xor sbb jmp or bound xchg xchg pop cmp mov bound movsb sub mov mov sub xorb push add push andb sub pop aad inc jae xor add ret or xor add pop inc cmp adc jle add fldcw mov cmpsb pushf or ret bound inc sub sub (bad) xor ret xchg push in test pop cmc sub das insb dec clc add mov xchg push les adc call jecxz cld jle,pt add out and enter clc xchg es dec mov shrb movsb push les jne movl imul adcl nop shrb inc arpl (bad) mov loopne push aas das adc inc mov pop xor mov (bad) es pop je pop sbb dec mov pop test arpl inc push adc and xor jmp pop out insb mov (bad) ljmp and add dec add adc xor outsl and enter (bad) out adc js inc fdivp mov add sub push push in repnz movsl std fldln2 scas ret add nop add and cmp pushf cmp stos xchg das (bad) cmc popf scas inc cltd push or in jg test cs movzbl and xchg adc cmp nopl mov bound pop dec sub movsl call decb inc scas (bad) (bad) cld pop add xchg jmp sarl mov (bad) sub dec popa fcoml loope and xor push cld mov inc stos movsb dec les and push mov sarl fdivrs sub das hlt in add mov in rol scas loope cltd fs add sub pop mov xchg lock ret xchg dec dec lods (bad) mov pop (bad) jae mov xor test pop cmp dec mov fs add cmp jae insb cld fs mov dec add fcmovb enter inc mov dec pop mov sbb ficoml jge les std cwtl popf inc cmp into ret loopne (bad) push cmp dec insb add mov mov popf or aaa push fdivrl dec jbe fildl fidivrl stos or sti test rorl das jno adc popa or stos lar das add pop xorb mov add mov add lds xchg add xor or jne cmp pop sbb mov loopne (bad) sbb js mov out daa int cmp sub pop push inc add or xchg (bad) sbb int3 mov ret (bad) (bad) cmp add jne adc sub arpl sbb inc sbb imul push push mov pop push cmp cmp push add repnz jp (bad) mov and push es xchg mov cli add adc jno cmpsl stos shrb inc js adc je sar pop ret ljmp push and xor dec addr16 sbb test cmp sbb xchg mov xchg jbe mov lcall mov cmp popf lods push pusha pop cmp mov je test lea jge nop push adc pop xchg ds orl call rolb sub daa xchg and mov cs sub mov mov cwtl in lahf lds fmul push jns inc adc add inc adc mov lea mov fimul cld mov insb pushf add imul jbe cmp and loopne (bad) inc sbb or ret jno mov xor call jmp jecxz jl xor adcl adc push sub icebp addb xchg movsl add jl xchg dec jnp lock jecxz add mov sbb icebp ret dec out stos push daa loop push push push push jmp or inc xor mov pop in imul in imul inc xchg or mov imul adc dec and sbb mov adcb hlt adc mov pop les mov push jne das arpl (bad) rcr cmp and lods add mov push or cmp std push sbb cmpsl mov hlt mov sbb call cld (bad) loop fiadd (bad) add mulb xor xchg dec jl fbld scas mov xor subl aam mov stos jo mov add mov or cmp roll jg inc sbb lods jo cmp (bad) in rcrb or sbb les lods xchg incb xor adc xor push or pop rolb mov jmp inc cmpsl push sub pop cmpb and ljmp mov pop repz sahf and sub addb add mov sub sub outsl and add cmpsb or call xchg xor addr16 fiadd inc dec mov mov inc clc sub fcoms mov cltd jno sbb mov jae pusha in jo stos (bad) fidiv and cltd cltd out mov icebp fbld pop sbb xchg mov movsb bnd add les add and pop div xchg jb out hlt mov sbb int movsb (bad) lds push dec cmp add icebp pop jo subb or pop leave xlat dec data16 test mov dec push or pop les movsl jbe hlt push inc jbe paddsb mov mov mov dec xchg jg and jp (bad) jo iret mov cmpsb loopne pop add adc push cs or bnd pop in cmpb ss sub mov sub (bad) lcall faddl stos push jnp nop inc in and lock sub inc dec iret dec insb push push ljmp add fiadd movsl (bad) lock loopnew hlt nop mov pop cld jge je sub ljmp (bad) dec sarl loopne inc jp jp in add test in mov add pop fsubrl jmp sub or iret sub nop xor jecxz lods cmpsl fldcw jnp pop adcl push push sbb mov sub test test jle adc inc lods or mov insb add add stos mov mov pop or cli pop push adc movsb mov addl xor shl imul hlt call add int3 dec mov aaa dec (bad) ss push and dec dec inc pushf nop inc add mov inc add arpl out pusha mov mov jl inc sbb mov cs es add (bad) mov dec rcl add fisub dec ret push xchg inc enter adc adc enter sub outsl push adc int out nop mov test mov adc aam mov inc psadbw fucomp jb jl push xor movsb stc sub call dec mov (bad) and dec and push movsb nop mov sub jns pop cmc lods mov cmpb leave add adc cs or test cmp mov mov scas lods loopne add out pop cmp imul and data16 mov pop cmc leave add insl les aaa dec sub hlt mov pop lods es add fdivl js jbe xor mov cli test fcoml shr jae es je je jp nop push out adc scas sub cmp notl (bad) pop jbe add aam fwait dec in fsts (bad) insb daa jne push mov movsb and mov outsl add inc insl jl mov adc mov fildl popa dec and pop cmpsb movsb push loope clc nop loopne add and xor int sub adc clc adc call jo mov aam ret and jmp add mov add (bad) in icebp arpl nop test cltd icebp add (bad) bound movsl xchg xchg push subb xchg push test stc dec adc adc dec or xchg lods lea in xor inc adc test je mov nop mov imul aaa cmp (bad) sbb xchg test fs movsl xchg push ret in or or fs les or add iret das inc imulb ja xchg ret in adc mov lds xchg sbb movsb xor push lock pop test sbb cmc inc push and push frstor pop xor in movsl push test dec ficom ja fildl movsb test rol hlt cwtl and push pop adc inc pop scas jo xor and mov dec mov andb xor orl dec ror scas push pusha call sbb and loop gs inc dec push das rcll mov xor jbe fmull xlat sbb sbb jmp adc mov pusha sub pop jge jne pop data16 ja push inc stc or test sbb jno mov (bad) dec cmp pusha out push shrb test xchg pop call nop pop leave fidivl lahf add in xchg add fistpll dec test hlt or (bad) xchg mov and lds xor ret or add mov orl inc dec nop jmp aas or mov or test dec pusha sub sti lods nop mov imul mov es mov and dec pop test loop sub cmc mov addb jbe dec (bad) test adc es push sar mov lret dec in inc in lock popa add call ljmp fdiv les fimul sbb jle (bad) mov add ljmp push and add sub jno outsl cmpl xor daa and pop arpl sbb pop (bad) (bad) inc inc xchg lock push int3 add loope mov xchg mov inc add mov sbb mov mov outsl in data16 cld inc orb xor xchg adc push mov mov insl adc add and repz or pusha inc clc mov pop loopne dec cs push js (bad) (bad) sub push sbb add loope pop fcmovu push mov in movsb or mov pop add pusha add movsb mov insl (bad) jecxz xor sub lods dec sbb mov enter fwait mov or imul std pop in add lock cld jns in out push mov pop mov and push and cs andb outsb sub xor push insl and cmc and pop arpl test std push and jbe aad pop xchg incb push pusha out sbb pop sub movsb orb aam out ss bnd push fs mov cs mov sbb mov push xchg andb cmp jns lds push or and adc (bad) push jbe js ss faddl mov jl test out sub xchg lods inc bound (bad) jmp pop sar dec lock add xchg xchg sbb mov mov fmull sub enter dec movsb ss popf sub mov test (bad) (bad) icebp pop scas lock and mov (bad) xchg insb dec mov loopne icebp aaa loope inc push ror and pushf mov inc sbb add dec cmpb in enter sub lods hlt outsb adc sbb xor call mov push cmp (bad) aaa push add mov xchg ja xchg lock or aaa ret add cmc or mov fdivs mov lret or cmp cmp notl cmp xchg (bad) cmp push push xor push jg jbe cmp fldl (bad) mov xchg fs sbbb flds fnstsw sub sbb cmpsl cmp fadds push cmp cmp push imul outsb add sub jnp sub or add bound sub mov push add outsl sbb imul adc add pop mov (bad) ja sbb mov aas adc xor pop mov imul data16 push xlat mov imul lcall enter ss out jbe popa and mov jmp inc cmp xlat test sbb push xor sub rclb jne add push jmp push push jmp jo dec cmp dec mov adc mov mov imul xor add cmp rcll ds sbb (bad) pop and in xor xor scas rcr or xor dec add stos retw lcall iret (bad) lock arpl xor sbb imul add repz (bad) icebp push rcrb push inc push cltd xor pop dec xchg mov data16 mov addb mov sbb movl mov jbe out jno push daa ret sbb pusha loopne sbb lcall test cmp add xchg mov outsl add fwait movsl mov out (bad) stos or ljmp cmp push adc call cmpb gs inc xchg inc mov cmp sbb mov jb inc lods in hlt mov jae push adc lock rorb and ljmp adc addb sbb in in xor jae add dec mov mov adc pop aam xchg mov pusha loop in pusha lods push arpl lock cmp add xchg cltd ret mov dec clc cmp xchg pusha push out fwait cmp sub adc cwtl xchg and fiadd push fldl add jno hlt jle pop push and inc dec ja leave and aam and movsb sub and orb and add mov roll push inc push push or inc add xor pop sbb mov mov movb roll lock lret jo sub rclb les mov inc subb movsb add aam ret push jecxz adc adc adc fcoml out pop xorb pusha or mov lcall inc cmc xor push dec pop adc pop test gs xor xlat movsb lods pop adc add lds enter mov cmp mov add mov or xor sti or (bad) cwtl jne jne or adcl inc loope adc xchg or xor xchg (bad) das test dec inc xor ds xchg fs xor jg add xchg inc or shlb jl and mov (bad) jo mov rcrb mov (bad) cltd fild test mov add es add lods xchg add orb mov aam dec stos dec ss (bad) loop or fcompl sarl xor (bad) xchg (bad) ljmp sahf call dec push lock int3 addr16 into sbb sar sbb cltd mov sub in sbb adc js or fsubrl cld push pop ja lret (bad) adc add loop fwait or clc test jle cwtl mov cwtl sbb inc xchg je xor pop insl lods mov mov enter xor out push adc js and int3 fstl les pop jl adc dec scas sbb aas mov imul shrl or fs push test fldenv adc ret in inc mov dec aam cltd cmp clc jae cmp add fimul loopne lea cwtl add mov (bad) scas je add repz xchg fs jo rolb mov adc mov in sub sub movsb sbb xor lret and rorl jo push ds mov aam and cld add mov (bad) cltd leave cmc push xchg and cmp imul sti or xchg pushf cli sbb sbb add mov mov les jno movsl fisubl andb xchg aam (bad) push xchg fildl outsb sub pop insb or xchg add jb and inc call push xchg js jo sbb leave out add jmp adc idivl gs orb sar pop cltd pop ja sub fmull ret inc fdivr leave dec fnsave pop xchg and subb pop nop int3 pusha xchg iret push (bad) or repnz or xor dec pop lds add rclb ret aad mov rolb mov cwtl pushf lock pushf pop es iret imul adc dec adc ljmp shlb gs inc adc xchg repnz cld mov inc mov (bad) pusha popa aaa xchg fiaddl dec xlat pushf pop lea xchg cmc inc in sarb sbb mov cltd cld mov pop push and or mov mov sbb js jns insl and mov scas sbb stos inc int3 mov ret lcall xchg (bad) pusha add mov int dec mov dec adc inc xor and adc add cmp pop jo int xor push cld adc jae xchg enter das sbb data16 adc jp mov inc test in aas cmc push cmp dec enter inc jmp mov scas add cwtl pusha or adc xor pop pusha fistl adc stos pop push lods jl and xchg adc cmp das add popf jle add xchg sbb jo xorl lcall pushf cmp and cmp cmpsb sarl sbb test pop jle sbb (bad) lcall xor dec enter mov test or mov mov imul loope jb test rolb rorb adc cmp add (bad) and pushf or data16 jg hlt add fisttpll xor cwtl pop leave imul xchg popa mov fstpl in popf ret adc insl mulb mov cmp xchg adc sbbb shld push loopne fs std inc dec sub push sbb jg in add jno xchg nop adc or sbb addr16 popf pushf les add or pushf pop sbb fcmovb ss mov mov sub cmc adc ret divb add pop nop loopne shll fisubr xor enter sub add (bad) pop out lds xor loopne enter scas dec dec adc cmp in lock repz xchg xchg mov movsb cmpsb dec jno sbb add les sub xchg push jae sub rcll loopne push xchg (bad) lock fcoml call inc call add push xchg (bad) out cmp mov inc loopne xor mov faddl mov push rolb rolb mov mov jg pushf pop push cli adc in push or (bad) (bad) xchg push leave dec ss jo cltd aad andl idiv jno add pop gs jb sbb add sbb xchg pop scas cld push test adc or dec dec nop jecxz inc sub aad sbb sub pop enter rorl pop pop aaa xor add fiaddl pop mov inc mov and sbb jecxz int3 and mov sahf dec or or mov sar add jmp fs in sbbb in mov subl add adc data16 je mov adc push add sub je dec add test xor inc dec cwtl add in or inc xchg imul mov idivb xchg mov dec adc and fwait pop stc and jl add fadd gs addb push lods dec jb mov pop dec daa and lret loopne add (bad) scas pushf addl cmp jnp (bad) jg sbb icebp inc add addr16 xchg mov push dec repz mov (bad) jbe inc add in ret xchg pop mov and pop sbb and or sbb aam (bad) mov add punpckhdq dec push pop sub add and adc cmp les orl in or xor pop rclb mov scas call sarb and add (bad) subl xor add popa movl add hlt test stos add push push daa outsl cld aam mov jns jecxz mov psubusw or out jae or inc add fsubrl sti pop out inc jae aam dec sbb subb mov sbb xor add push daa or xlat (bad) xor lock xchg jo or cld insl push adc shrb dec call push daa sub cmp scas sbb js je inc push mov popa aaa xor push fcoml xor sub cmpsl decl orb outsl mov and test sub test out xchg xchg insl push xchg stc push call mov test and xchg xchg and push adc addr16 sbb push mov mov fildl pop pop dec pop inc push and sub negl fwait adc push sub pop add frstor dec in jge mov (bad) mov fbstp jmp test scas call push add aaa jnp mov fcoml inc fs add dec (bad) cs sub xlat rorb adc ds pop cmp fxam xlat xchg inc push or add js cmp push ljmp mov rolb stos loop nop push jl add or cmp mov sbb pop fs fcomps cmp xchg je add inc sub or dec dec add cmp add outsb xor sbb push pushf mov or xchg pmulhuw xorl or push push xor sbb lea in mov int3 add lahf leave gs dec int3 push and dec add insb sub or pop xchg dec sbb in sbb mov sub push push lret sub divl repz rcrb jecxz xchg mov xorl stc or inc (bad) sbb sbb mov das push push mov add ret ds or rorb andl inc add out lods cmp adc lods loope scas lahf mov cld cmp fisttp mov sub jo push push add loopne push push js xor dec and mov imul les orb movq and push pusha (bad) imul pusha or dec sti inc mov hlt or add mov pop xchg mov adc rcrb cltd cwtl mov in jbe stc dec dec xchg mov sub inc add pusha sbb push lret mov add adc imul cmp rolb pop das jmp arpl orb push adc daa push push fsubrl sbb inc ret lea mov fidiv pause sbb mov add lahf jae,pt hlt pop add adc jl inc mov out int3 or inc mov ds or jae sbb out jmp fstp into adc (bad) ljmp lock mov enter addb xor mov pop sub sbb sbb xor fisubr jo out jb sbb jle ss push pop xor xor push sub pop push and mov pusha add aam in mov call outsb jo sar mov sbb rorb int3 cmpsb push mov and js dec and jo xor cmpsb js push mov clc sbb sbb loope adc adc or inc jge add jg mov push mov sbb pop add xchg dec jl push rol shlb mov call push jmp add lods add or packuswb inc pop or add rorb ret mov add xchg jecxz js jecxz loopne pop testl pop dec mov xor (bad) adcb cmp jns mov call ss loopne cltd add mov sbb aam pusha rcl movsl add xor sbb mov and ret cmpb mov push sbb mov lret lods mov ds add sbb nop jge add out sub xorl rcr xor or lods dec mov fnstsw push push jnp dec add fisubrl xor ret cltd loopne adc cmp jne int sarl xchg xor movaps add xchg dec out shlb sbb inc mov add icebp fdiv dec icebp lods sbbb ds loopne js aam dec shr pop sar sbb out xchg stc (bad) lea out xchg ljmp push (bad) mov add fisttpl (bad) xchg adc xchg int sbb cmp imul add cmp or hlt fsubs mov iret xchg and lods add arpl outsb cmpsl cwtl push dec cmpb pop imul scas mov and outsl loopne push push fcmove nop inc insl sub cmp lods mov jmp xor jp add add daa or (bad) (bad) fisubrl ljmp mov or mov mov nop dec dec add int cli cld xor daa adc call or lock fcomps sub jmp in add push jle nop mov out adc mul inc ret lea mov cmp mov sbb mov push jle cli xchg push add sbb push in sbb mov and incb ret or leave inc lret sub sti pop pop notb sbb sub (bad) insl ds mov lret mov adc jo inc adc data16 idivl push jb xchg lret adc or jbe jne xchg arpl jo int es mov cld fs pop sbb ficompl scas mov fnstsw (bad) pusha pop adc (bad) push mov xchg sbbb xor outsb std xor lret loopne out add cli mov aas loopne mov jge aaa push repnz inc mov dec psubsb addr16 int3 sub xor dec xor aad push incl adc movsb xchg add loopne add push popf xchg sarl push sbb mov nop out ja fcompl fistp setg mov int sbb (bad) cli xchg jl rorb add aad fisttpll push xor rolb xchg xchg mov (bad) es outsb adc mov push clc pop push xchg dec arpl lahf and add inc imul pop movsb addr16 mov (bad) push sub rcrb pop add ja xchg mov mov bound addr16 mov (bad) imul jbe push rcrl nop popl addb das push cmpsb sbb add or mov cmp bound sahf subb mov mov adc addb mov cmp call nop (bad) das xor inc fadds andb out (bad) cs push call mov loope lret dec mov add xchg jmp inc inc clc pop pop addr16 or inc inc pop jns jmp sbbl dec rcr test call nop addr16 pop imul or push lds push inc adc or lock xchg sbb cld (bad) out xor jl add add add and lods dec add test and jbe add mov fmull add and cmc adc mov push stos mov rolb orl loope jb (bad) and mov aaa out addb pushf fdiv clc les or and sbb inc cmp mov ret fneni(8087 fdivrl add pmulhw mov inc mov int add cmp (bad) in aas stc xchg add mov jg xor jae push mov or pop xor or (bad) xor sub fcomps lret mov (bad) ss pop xchg inc and xor (bad) (bad) cli arpl sub mov popa loopne mov ja xchg jmp call cmp pop stos jp maxps jmp ds xor je push fwait scas call sbb xchg (bad) and or dec lret orb dec sub mov push insb mov mov sbb and repz xchg xor mov gs rclb mov outsl ret cmpsl and add call sub adcb cld cmpsl (bad) fstp cmp or dec push outsb or (bad) or push js mov test shlb xor inc mov lock pop push insb or adcl adcl mov aam or xorl jle xchg add sbb pop cmp test or push inc (bad) mov ret cld shlb push push imul cmp cs inc push inc add push fidivrl lcall outsb mov xor movsb cmp out inc jmp jns add sbb (bad) test jno cmovle push inc inc fcom gs xchg fidiv int3 popf add flds negb add and movsl add into sbb push add xchg fisubrl add jns mov xchg jnp sbb test ficom arpl mov push push xchg jg inc nopl mov xlat lods sub inc test cs and out push movsb xor jnp popf cmp loope cmp mov pusha push testl and (bad) pop gs adc clc sbb sbb mov xchg (bad) loop cwtl popa jns mov stos add clc mov pusha leave adc inc mov and rcr mov loopne loope pop mov call aam cli addl (bad) loope loopne fdivs mov cmp dec enter push in (bad) and xchg pushf xchg lods cwtl mov movsb pop cmp sub inc pusha xchg sub or pop (bad) fnstsw lock pushf int3 push push mov icebp js sub mov pop mov xor xchg dec mov scas sbb push js mov sarb jle aam cmpsb add mov pop cmp bound pop outsl das add (bad) xor out insb loopne push into or pop enter sbb jo sbb andb or or cmc aad les or scas daa sub inc xchg addr16 rcrb jbe xor and inc or dec push enter push das int3 add test or xchg mov (bad) adc or push or js aad rolb int mov cld add mov pop xchg mov bnd shrb hlt aas xchg (bad) jno std negb and and into insb cvttps2pi dec pop ds mov sbb insb sub rorb fs mov xor test dec movsl lds xor (bad) je test pop nop call inc or add icebp ret and rcrl add and cmp dec seto icebp adc or add pop inc pusha cmp xor jge sbb add jb mov pop rorb inc pop cmp loopne addr16 adc jl adc out or mov push cmp jg xchg push jns xchg popl mov add cli and jl dec push sbb mov sbb jg cmp xor inc mov test ds cltd js cli dec push lds shlb nop ds cmp int3 jo dec mov inc xor jne loopne adc sub mov push xchg cmpsb mov scas push mov loopne inc push push push inc (bad) fcoml jo ss mov subl pusha adc cmp in jle iret pop jns xchg in pop dec pusha mov cld bound ja inc fcomp xchg adc sbb out addl jg or in icebp add cld mov nop cmp push pop jb add sbb bound (bad) jo or mov or add bound je inc je test (bad) mov int sbb inc into dec pushf inc orb mov add daa int3 mov push movsl lods sbb lock popa cs loop prefetcht2 nop mov (bad) (bad) pop fisttp add jg jecxz clc inc add sbb out dec pop fisttpl clc aam mov jg adc jae push adc mov sbb clc (bad) loopne pop mov out and add movsl jbe clc mov notb (bad) (bad) jp add mov sar aam mov mov jnp pop mov lahf cwtl dec fs mov inc mov stos int3 mov jo testb push or ss pop sbb inc ret enter cld (bad) lock notl (bad) add bound adc dec push xor pop mov xchg and pusha sbb xor scas jne dec loope rclb stc push lock psadbw das add clc shlb flds dec dec test xor into adc cmpsb cld mov push insb pop cwtl popa sti jns sbb jmp jle test bound aam movl jle pop and subl lock push ja jo lcall pop pushf jle sbb (bad) (bad) dec int3 or lret test dec cmc adc pop mov adc and add cmp outsl repz loopne in inc fisubrl (bad) jno inc or mov sbb mov xchg push dec and mov addb shlb std cmpsl sbb pop aaa xor add je frstor shrl sbb dec mov xor push dec inc xchg mov xchg loope scas mov add cs call rclb jle pop leave fldl2e inc mov mov lds pop jl cwtl jg aam add pop mov test jnp lods jae add int3 or mov (bad) add popf xchg test xchg mov outsb add mov mov push lock sub mov inc sub xchg cltd iret pop aam pop shrb lock test cmpsl aam stos mov inc es mov in xor push inc loopne xor mov lahf cli add mov bound sub jl mov mov jmp and sbb bound mov and push cmp cmpsb je cmp xchg mov and inc add mov fcom push lds loop mov mov xor mov mov arpl ret imul add clc adc lods xor out (bad) in jle sarl repz rcrl add jmp xchg (bad) std loop rolb fisttp push shll cmp jp add popa and bnd xchg dec loopne pop mov and mov pop inc (bad) mov test out jbe add loopne dec adc ja push (bad) in mov sbb rorb arpl int add jp imul inc sbb add lret gs push xor out pop mov mov clc jecxz out and jno and add mov add daa inc imul pop sbb push inc jecxz pop (bad) ja inc inc lret sub loopne jmp mov fistp jno (bad) mov xchg add push clc pop loop clc or pusha push jno in push mov pop scas and jne jecxz (bad) xchg inc into xor sub mov push or push cmpsl dec or shlb mov loope cmp js push test out push add mov dec sarb aaa jecxz xorb aad sub dec pop inc xor test jb add xor (bad) mul mov add (bad) loope and mov inc rorb sbbb and aaa and mov push pop pop lret cmc add lods jne in add push es push adc add popf ja xchg adc push out push fsubr inc roll enter cmp adc lods test push imul dec scas mov jnp insb cmp xor cld cli outsl cmpsl push add sbb add enter ret insb inc or bound scas cli mul jl sar add jp xor fcmovnu inc cli xor cmp lods sbbb or or stos movsb jns rorl mov xor push fildl fisubr in or add mov cwtl jbe push aaa in or mov das add divl or mov xchg cli push mov jnp adc sub nop lds jo sub cld add popl fcmove fdivrl stc pop jl les adc adc inc popf add stos inc (bad) cli xchg sub addl mov nop/reserved adc inc add jmp divl fist data16 adc in and sub shl push mov jns mov xchg cmp inc adc xchg jnp add push out or adc pop cli test adc add lret push imul add cld test pop mov jp mov mov ja or inc js mov outsl and daa mov cmp sub fsubs int pop jl sbb or (bad) xor jle push aaa flds cmp push mov sbb xor (bad) inc sub inc mov (bad) (bad) pop movsb push test adcl add sbb cmp mov gs (bad) mov mov pusha sub (bad) iret lahf in mov adc (bad) in inc aam add jl call ds sahf jnp adc out mov or lods mov mov and or pop sbb movsb insb push jnp or sahf test mov repz loop lea addr16 rcr mov test insb add cmc sbb pop push pusha dec fimull xor push add mov adc sbb (bad) repnz data16 out fcompl cmpsl push xor push popa lret dec add dec adc and add divl nop cld inc add fsub dec lret mov aaa mov ljmp scas sub cmp mov test add daa inc adc add repz dec adc and fisttpll lock or pusha cld test movsb testb mov jo cli push push adc sbb mov add into movsb mov sub (bad) adc sbb lock add add sub flds pop insb xchg insb add movsb dec jne jns adc mov xchg fildl inc clc xchg call sbb add add addl ljmp aas pop inc push xchg jp lods in in into inc in xchg push mov aam testb cmpsb push aas pop cmp mov sbb adc pop call xchg adc sub jl fldt into mov fisub pop es js adc jmp or and std bound subl in add and add dec fs mov scas lock push sar jg cwtl xchg cmp mov insb sbb rclb in inc add cmp test inc (bad) jg add sbb dec scas mov arpl mov push adcb ss pop lock push mov scas push (bad) (bad) fsubl push sub jmp rorb push push or imul inc (bad) aam fdivrs (bad) adcl jl add sub and xchg mov dec add pusha inc push add jg sbb xchg adc pop movsb pop clc cs lock add add dec cmp xchg inc aas mov jae sbb (bad) mov xor ret insb std add adc sub jecxz ss fild xchg inc mov and lods add lahf sbb cmp dec subb jp test add imul push loope scas mov xor push cli dec pop sbb out movsb pop xchg sub ret loope pop inc rolb pop adc add or add pop jl sti movups dec test test sbb add cwtl jp mov dec out stos rol dec jl pop and or loope (bad) pushf stos cmp jmp dec fidivr and sti rcll pusha out mov cmp cs inc push jo pop sbb or add sbb add stc repnz mov aas je lods pop jnp add adc pop pop addr16 imul rclb or addl mov add adc cmpsb rolb sub imulb add ficoml fwait stos dec je cmp cli adc ret sti sub out cmp mov daa sub lret fsubs (bad) out mov daa mov pushf jnp jbe in cmove push xor sti pusha mov xorl lcall inc (bad) lea adc (bad) xchg fsubs sub scas adc loop lahf test int in sub and outsl aaa jnp cld jns addl xchg or es xor dec sbb (bad) sub inc or inc sbb and cmp add scas ficoml inc dec mov adcl mov add jecxz addr16 aam cli fisubrl pusha add jle sub cs push sub push dec dec mov add arpl (bad) jbe and adc add in imul ja push sbb lds lcall leave (bad) cmpsb add in jge fsubrl and sbb xchg out (bad) hlt insb mov xchg scas jp xor cmp jns mov add adc (bad) enter or add adc mov scas fild (bad) mov out or cli icebp mov pop pop pop and loop mov xor xchg add or adcl or fsubs movsb add insb sbb (bad) cmc xchg mov faddl aaa and sbb cmp xchg push xorb dec jns xor leave xor movsl or cwtl sti and or add adc jmp pop mov dec loope test add inc dec add sub sub icebp add mov or jbe fildl inc loope and add and push xor test mov add mov and test int3 add and add mov adc andl repz mov fmuls add mov cld push mov dec xchg xor jmp pop les out mov push cmp sbb stos mov (bad) xchg adc cli cwtl cmpxchg xchg repnz lcall aam in mov push sub add sbb (bad) jp add fiaddl clc mov js int3 xor mov (bad) adc jno or shr pop enter xchg enter xor xlat jmp sub test push mov fistp xor outsl push jnp enter pop dec cmp or pop mov sbb mov (bad) mov mov leave add push cmpsb cmp sub imul sbb fcomps test push ss jl pop adc hlt xchg cmp mov mov fsubrs add fnstsw push sub daa loope fstpt rcrb sbb or (bad) loope in add xor dec add ret add (bad) mov loopne addr16 stc loopne aas test test rolb pop sub mov aas mov es loope inc or rolb daa push pop arpl nop pusha scas jp push movsb mov add add mov or movsb cli loope jno or adc nop cmp xor cmp add mov add ret lahf jbe decl push test cmp pop clc scas int3 push mov inc mov and sti sbb xchg inc test lret fisttpll and jl add sbb inc adc add cmp inc test lret sbb or dec ds in mov jp cld push mov rorl xor jnp cmp push (bad) icebp dec inc fidiv dec push mov iret pop xchg mov add mov or adc imul out sub inc sbb or movsb test add pop inc sbb lahf enter cmovg nop in lock popa movsb mov cmp scas aam jp cwtl push mov sub mov pop adc stos add push mov sub arpl leave xor mov push jp movsb popa loop xchg xchg add iret roll add les (bad) or repz imul int xchg fnstcw push push test fisttp pop mov add sbb pop shrl imul adc jecxz hlt (bad) or cli int3 adcb jp movsl mov (bad) iret push jae or xchg push inc or (bad) faddl leave addl fadds repz sub (bad) push cmp or xchg insb sbb pusha movb xor adc test ret aas addl jmp in inc nop loopne dec mov sbb sbb and fs lods add push dec mov add push cli mov inc enter in inc and repnz xor mov sbb sub shrl pop cmpsb adc test pop in adc dec pop sarb push (bad) clc sti xor pop and inc push fmul sar out or js pushf push fnstenv sub inc repnz inc pop js,pn addb fiaddl jge pop jbe cmpsl mov mov inc bound addr16 add loopne dec in rolb insb or pop sub or xor mov adc mov call jno push je and adc pop dec and (bad) ror clc inc repz nop aad cmp idivb add mov adc js pand push mov sbb sbb je sahf sti add add add pop sbb sub or add lret clc xchg push mov sbb dec adc test inc pop dec aaa push pop addb xchg out or push xor add push mov out xchg adc adc ja test movsb add fnstsw dec add pop (bad) dec pop sbb jns imul xchg add and mov cli pop add out lea fistpll jp ljmp cld loope add mov lahf mov mov mov stos pushf or and mov fistpll mov popa adc mul (bad) xor jge mov pusha mov je notb hlt (bad) loopne push andb stos dec cwtl cld roll aam addb pusha mov cmp xchg push mov cmc add dec pop cmpsl adc js fs (bad) add fucomi mov (bad) cltd add cli movsl and sbb pop mov ds dec test rcl testl push mov sbb and add add xchg pop sub xchg add aas leave or sbb cmp or lods clc dec test or xor mov adc aam add std shl in test jg push or clc xchg push adc lock popf mov pop ds notl add out aad mov xor fwait cmp adcb adc and or fmull lds out dec lods shll xchg je scas inc or imul cli movsb ja sub cwtl sbb jmp push mov mov test aaa dec and xchg imul inc sub adc mov pushf or or inc nop xchg notl fs push ret dec fwait add out stos mov cmp shll ja sbb bound dec mov sbb les idivl cmpsb xor shll out (bad) xchg and fnstsw jno jb sub mov arpl data16 add imul add xor sti or cs xor and xchg nop pushf add adcl mov jmp call mov mov and ret mov sub xchg pushf cwtl cmpsl add xor rorl cmp dec cmc add jmp push fdivrs shlb xchg jmp pop ret or sbb arpl enter add std and ja pop dec cli pop pop xchg enter cli add inc push xor clc fidivl xor lock xor xor stos sbb ja dec adc xorl aas mov cld movsb js mov aam pop inc inc adc pop sbb inc cwtl test test dec ret cmp cltd xor lock cmp jle add xor cmp clc cld adcl push sbb inc push jl js dec test sub mov movsl xchg or dec inc shll or mov xchg mov mov inc sub xor adcb push hlt xchg push mov adc mov arpl add imull pop push in inc or dec ret xchg stos mov sbb add lahf push loopne loopne enter adc pop aad mov aam incb outsb xchg jge dec xchg scas les lret fisubrl xor mov add push and and sub enter push loopne cltd test or add mov popa push cmp push sti and add ja je or push add in mov pusha ror cwtl inc aas fwait mov hlt push mov push inc pop add ror mov fcomi xor es mov xchg lods mov jno and mov imul dec fs xchg pop (bad) push rcrl cltd rcrb and cmpl pop out addr16 subb jp add cli sub dec arpl or pop cmpsl and not and and xor mov cmp push adc mulb ja dec clc rolb loopne xchg pop dec and les (bad) add fstl xorb inc pusha push mov mov or aas inc call cld sbbb test push stos clc cmp es xchg rorb mov add xchg test rclb add and or adc sub jns pop pop mov fildll or cmpsl xor rolb outsl fadds xor iret (bad) jno lods dec mov cltd and or ret inc mov stos push push idivl or mov cs fs push repnz mov lcall mov or sub test test out dec in pop pushf xchg push in dec ds pop call add mov cwtl rcll call pop (bad) fs mov lcall out xor add or add (bad) shrl and inc xchg out int3 inc std mov push xor xchg nop mov loope pop add dec pop leave enter sbb les in or leave adc dec push fld pop setl mov nop sub mov and out dec out ret add pop xchg (bad) dec adc call mov push inc nop dec lea pop push movsb adc shlb movb xor loope loop add out adc adc sti fs xor fidivl sub cwtl or and fcmovnu movsb test loopne incl ja dec mov dec (bad) xor sub adc add rol jns mov inc cwtl (bad) popa cld ret je stc pop imul insb xor xchg fs pop add xchg je pop dec ret mov add lods mov addr16 inc xor xor push mov mov xchg push in xchg sbb (bad) add mov xchg pop mov aas adc and popf pop cwtl dec add xchg and sbbb les add aam push jne mov pop sbb mov sub int3 pop add pop bound cltd in or loope scas cmc popa je cmp int3 adc aam je xor adc cli xor dec mov cmp enter insb dec call pop fistpll xor fildl enter inc dec aas loopne in and push mov cwtl in ret push lock test add fldcw rorb lret dec call fs pop mov bnd jno or iret rolb test popf imul and adc nop add xor test xchg hlt or loopne fcomp (bad) jo dec pop mov push cmp clc inc lret nop adc mov ret mov xchg jo mov and push xchg mov (bad) mull jno adc or cmc push sahf test popa mov ffree push cmp popa sub lods adc ds in imul adc repnz cmp adc jl (bad) lock je push bound jp loopne xchg (bad) fwait mov fstps pop mov int3 or subb sbb mov fnop add adc jge mov push pop and daa xchg add adc in cmc nop rclb lods ja add clc mov dec lods mov mov inc pop addr16 cli jne in or inc adc sbb cwtl sahf aad sbb (bad) pop pop pushf sub imul adc and shlb into inc add test rol push lahf imul sub pop rolb cltd or mov add pop push pop inc mov jbe sbb pop stos es pop movsb xchg pusha adc inc pop push mov inc repz cmp or sub adc rclb dec xor add xor or or and jl mov dec pop (bad) xorb push or sahf add adc and or cmp xor scas pop repz (bad) inc pop add lret and push fist add out jbe in xchg sbb je xor adc push (bad) jl mov push int3 addr16 movsl in add mov push dec aam add dec decb and jns movsb add mov mov stos jo xor jmp or mov pushf stos add xor ljmp js or outsl adc lea add out ret xchg les mov pop and fsubrs add negl xor mov inc lods pop jbe mov or (bad) scas add orb dec in rcrb jge inc add pushf sbb xor jl test das jne mov mov mov nop add test push adc xchg in sub ja mov inc add inc (bad) mov pop push ret push adc shrb test mov sbb sub sti repz push rolb inc sbb add in sbb mov adc aas es les lods aam mov add or iret les dec jmp xchg mov sbb (bad) cwtl push pop add mov xor sub loopne push fadd push adc dec mov xchg shlb lcall test add clc add mov mov pushf in add inc arpl je pop push sub jbe cmpb in mov ficom adc dec cmp xor imulb icebp lock sub es pop cmp popf mov inc mov push shrb (bad) pop insl (bad) or or and pop push (bad) jg icebp fidivr and push xchg pop mov or mov push push sbb dec and add pop das fldcw lock sbb js outsb movsl lock pop into or cltd cmpb rorl and sbb xchg mov test cltd adc dec lds xchg jo repnz inc nop inc dec sahf daa repnz popf into push push test clc inc insb rcrb pop mov dec mov push pop mov push inc addr16 (bad) mov mov sbb lock iret or and jno push push sbb sbb scas pushf fadd lock mov lea jl push pop ss out mov pop jne jns cmp dec lret and jno pop adc cltd sbb repz mov negb jne inc stos xchg dec roll out mov outsb clc fcompl push add movsb push mov adc test hlt fdivl add ljmp in or stc popl sub mov sbb sbb mov daa pusha aas or faddl xchg lahf mov sbb mov (bad) ss xchg cwtl inc adc stc aas addl mov cli sub jl inc sbbl push in cmp inc int3 es add xor sbb inc xor and (bad) sti out pop mov (bad) stos sbb in sub sub dec test testl xchg push push inc jnp mov push and or push fwait mov in cwtl les add mov lcall test hlt ds loopne sub jp and sbb pop adc mov adc in fwait push (bad) or push mov cld mov adc in add lret add jmp adc ljmp lret sub (bad) leave sub cs add push ret xor je js mov test inc lods jno lret mov inc mov or sbb adc aas sub addb imull sbb mov xor test scas inc inc sub (bad) mov test push xchg jl lods dec adc lea fild lods lahf popf xor mov jp xchg pop fild lret dec sub aaa dec ret jmp jl mov adc pusha sarb or call dec cmp cltd sbb call outsl nop dec popl dec xchg test xchg push out jmp sub xor mov daa mov add xchg pop mov mov xor gs xchg add mov or adc clc add dec mov mov nop inc aas pop out dec mov and inc sbb pop popf mov repz xchg push cmp add icebp push pusha jne add xchg clc sbb mov sbb out push xor icebp nop fwait scas push xchg pop jg movsl mov test mov and (bad) (bad) (bad) jmp in add ss add seta inc or pop sbb add xchg cmpb mov push cmp lock or cmp stos js fwait (bad) setno push xor inc jge jecxz cmpsl pop add add inc repz aaa pop mov pusha xor mov pusha sbb mov and dec and inc ss adc pushf clc mov mov inc (bad) inc lock out dec insb and lods inc rorl add addb mov cmp dec push or lods pop add xor imul or insb push movsb push cld push sbb mov popa scas cmpsb nop mov dec mov dec pop addb cs int rolb mov mov scas ja sub loope or inc fcoms dec inc test int dec faddl cwtl inc sbb fwait out pushf jne nop repnz mov xchg fstpl (bad) cmpsb nop push push es fwait shrb test add popa bnd nop jl mov pop mov ss xchg add adc cmp (bad) pop dec pop sbb jecxz es insb sbb fcompl cmove popa mov shll dec adc jle lods xorb dec cld dec or arpl movsb pushf and in push pop sbb rclb xchg or sbb loopne pop pushf push inc add pusha push dec push sbb xchg add addb fwait push fs pop scas sti sub inc and sub addr16 xchg test icebp mov mov rolb lahf in dec ficomp xor add test cwtl lcall add mov lods xor hlt test (bad) faddl ljmp pushfw cmp imul add jbe icebp adc les pop dec movsb in xchg fwait repz and mov cmp lods mov dec mov or movsl shrb in test arpl or pop (bad) stc jns gs sti and inc adc cs call push and repz (bad) dec les test lret iret adc mov test pop xchg push flds ret dec sbb inc and lods xor dec je add inc cmpsb sahf test icebp mov or repnz int fnop sbb adc xor test push (bad) dec mov (bad) xor out mov jnp mov mov xor lods xor icebp mov popa xchg data16 nop pushf (bad) fld imul add fst lahf adc (bad) jge xorb cmpsb and push cltd cmc pushf rcrl or add add xlat (bad) fcoml or add aas add ret and hlt ss or repnz mov inc pop orl iret mov in (bad) test or inc xchg add mov add dec xchg pusha mov cmc xor inc inc faddl xor sub push and arpl and movb mov dec aam inc cld subb jne out (bad) movsl adc push push loop lahf sbb pusha lock js xchg sub dec dec add aam add adc lcall xchg cld repz out or xchg adc mov add dec mov push int xor xchg test mov xorb out xor into es xchg in add idivb clc dec and add mov and and push mov dec out sbb jae add jne add js lret dec cmp dec in nop (bad) loopne xor jecxz cmpsb or ficom test mov rcrb add cmpsb mov push mov mov mov cmc and out jle xor (bad) inc in cmp cmp mov nop sub sarb (bad) dec or or pusha xchg jo mov xchg mov jno or popa call mov jns and push cld sub fsubp adc cmp stos int3 adc mov adc and mov sbb outsl test inc mov pop (bad) cmp cmp inc adc arpl adc add cwtl adc cmp into sub cmpsb adc xchg dec or inc std xor add sbb cli das or xor inc call or flds es mov and (bad) stc fs jns inc addr16 pop xchg push push js sbb mov pusha mov pushf insl or andl push loopne call add add fwait cmp hlt mov inc jecxz js or icebp cmp dec pop inc or pop mov ja jmp mov mov lret add dec (bad) pop jbe aas add push inc icebp das cmpsb jmp jno add mov shrb mov dec addl loopne mov and cs pop hlt cmp adc fsubrl add dec inc andb and pusha inc adc and sub or pop mov in insb or xchg nop cmp roll enter jnp sub jo jb loopne (bad) pusha and add dec lock ja repnz dec mov lahf lods sub xchg adc push inc cltd add fsts dec dec in dec mov (bad) stc cmpsb int inc fadds gs mov dec add cmp add stos push jo insl lea dec jae,pt js call jnp sub int3 push (bad) es movsl mov in das shlb aam and add aad cmp test fwait out in jae hlt rclb lcall lods dec divl pop out call or lds cmp mov push stos adc push cmp in xchg mov add test jo pop xor xor and jp jmp in add add inc sbb jno add repz in jae add (bad) mov call shll test test adc or (bad) icebp movsb add or add loope loopne jns mov push jnp add std mov sti mov ret or fidivr xor and add arpl mov pop fadd xor mov loop andnps add pop cltd cmp mov shll inc xchg adc xor aad loopne call add add (bad) or aad dec test imul add aad outsb out jae inc out pop add in fcmovnb dec hlt (bad) xor jge add insl push mov xor inc sbb inc in pop enter rcll cli sbb sub hlt and movsl cmpl mov add jnp mov add test add inc mov push or mov loope popl adc mov xor movsl add mov aam cmp add jge dec mov add and fs test ja lea sub cli int adc (bad) pushf add mul mov shrl adc add enter mov sub cltd jne add aad pusha js negl mov pop jecxz mov add add and pop loop fsubrl movsb movsb add in data16 mov imul or int3 (bad) or mov sbb xor pop fnsave sbb inc aam push push in (bad) push add or roll sub add cmp mov mov mov and ds fs xchg enter enter lret int3 dec movsb cmp in xor inc mov jbe dec ror sub push or stos pushf pop dec mov jle les and mov shr inc add xchg mov into lock cli js push or sub inc push daa inc cmp fnop push xchg mov fimul pop xchg xorl leave add sbb loop xchg jl inc cld lods pop fcoms jbe cwtl adc push scas inc inc out cmpb fild jae je rcll xchg pop fisub shl nop movsb nop inc or dec and push and hlt outsb shl dec mov in fstpl enter add xor mov movsb lret (bad) fnstsw xchg push (bad) sub dec rol inc testb mov inc (bad) sub mov dec clc push add xchg ret dec xchg mov and and push movsb int3 dec outsl xor sbb cmp jno (bad) dec stos add aad fldenv add into loopne push add shll xor add adc and sub les mov aam cmc test cmp int3 add dec leave xchg jo push dec fisub pop and cmp aaa popa addr16 lods mov mov dec loopne ficomp fimull cmp and inc xor pop int3 mov lahf lret add sahf sbb (bad) repz mov jp add lea stos add cmp or adc push nop rolb pusha adc and xchg mov cmc push cwtl rcr xchg mov roll jl cmpb sub add outsb dec add xchg push (bad) inc into sbb mov mov mov stc hlt hlt in or jae mov sub add mov loope js push add cmp lret adc adc push das (bad) insb mov les aam inc or jno adc push fs sbb dec push das sbb inc mov ror out pop cmp fisttpl xchg jns repnz xchg clc cmpsb dec repz xchg jmp adc xchg mov sbb sub jge xchg or inc inc stc push cmpsb test mov popa jo fisttp mov push mov sbb in and outsb cmp lods inc loopne push ja mov inc inc sub enter (bad) jno les pusha sbb cmc sti pusha imul adc cltd cmp lods fiadd or push mov loope stc js movsb nop incb mov mov movsb mov aam test aam mov sbb dec sub cmp roll mov mov inc icebp aam adc push js clc lret aaa fistpll jg sub in jmp add leave js test scas jno pop cmp or mov lock in add sbb inc rcll sbb jecxz inc xor (bad) lock xchg ret loope dec mov and mov and loope stos popf rcl sub aad lock sbb jmp adc sub xor dec dec lcall lods sub sahf int add bound inc or and rcll xchg nop lock jp movsb pop adcb frstor hlt movsb in jae and je push in inc scas mov shr cmp add or insl add in shr add cmpsl pop mov dec mov sti das cmp rorl in sbb cwtl sbb push xchg ret mov data16 aam sbb scas xor dec push subb (bad) xor inc or rcll pop push or add psubusb sbb xor scas pusha dec orb aas fwait xor push outsl dec mov in cmp adc or dec push mov and fdivs inc pop mov call add dec loope push dec imul xor dec mov ljmp or mov jae mov pop jmp lret mov add aaa fstl sbb enter pushf nop add pop jp pop roll add pop and jecxz jge add dec nop fwait jle or jecxz add sbb xchg js xlat aam sbb or mov inc in adc sbb add or ret fidivl inc pushf fs jmp add leave fdivrs ljmp xchg addr16 negl popa add push popf inc or pusha lret pusha rolb test cltd jb hlt or dec dec mov cmp cwtl sub xchg pop nop fs jae and cli adc sub test dec jg mov rorb mov lock hlt fsubrs add jns hlt sub mov in rolb dec push dec jecxz fldenv test fisttpll or add push push pop jne dec jo or jg mov loop cmp int3 punpckldq push scas fwait in inc or xor (bad) int3 pop loope clc add (bad) call icebp sahf mov adc push cmc dec lds outsb repz js sbb dec dec std daa call mov test hlt insl jecxz push fisttpl mov push roll fcmovb cmp xlat aad arpl jae mov sub sbb or cwtl repz dec adc aam sbbb nop mov sbb gs cltd sub or cld (bad) or add aad cmp les rcrb adc scas cmp sbb sti add push or clc lds lret and pop sbb jle xchg cmpsb jae pushf add jo fs pop rolb (bad) xchg fucomp leave xchg mov cmp adcl add push pop push in lods xchg lea test cmp add mov add cmp pushf loopne jp fs or xchg xor adc in ja xlat (bad) adc inc pop and je iret (bad) dec das mov mov dec mov xor sbb ja repz cwtl mov out push mov in lahf push add inc enter out les test fcomip ss pop xchg ror rcrl scas inc mov stc cmp dec and inc rcrb dec cmpsl stos inc aad jl xor sub push cltd xchg les lods scas pop pusha aam sub or pop icebp and mov push mov adc js pop jle cmp cmp pop cmpsb cmpsl bound add pop cli mov clc ds and cmp (bad) test sub loop add sub sbb mov add mov mov add jge and roll or sub sbbl push jno cmp loopne (bad) scas incl aam (bad) mov test dec pop adcl jno sbb je orb dec sub pop sub add push (bad) ja mov popf and adc jg out mov (bad) push hlt add into xchg lret dec jne push out je push inc sub xchg arpl jbe test add mov (bad) call sbb add jo fidivl jbe pusha lock xchg ss cld or xchg fldcw in insl imul arpl iret adc push push xchg or in bound rolb cmp sbb fcmovb insl (bad) jg int mov lock or adc adc push pop mov xchg or add scas xor pusha jecxz inc int3 cmp cmp lods rorl call add mov mov cli sub dec xchg push hlt mov pop cld (bad) in cmp or mov xchg xchg fwait loop ret clc loope mov call pushf cwtl mov jl out imul or call popa in jae je mov adc std scas inc lock nopl dec aaa sahf adc hlt or lea ficom cltd inc in or add sbb push adc (bad) or popf cld cmp ss rorb add mov fwait sub stc add ret adc jl jo xlat sub add in ljmp fwait adc std jp push xchg je,pn insl add in mov std loopne (bad) jo js dec jae xor dec pusha lcall mov mov fisttpl push test (bad) iret and or inc (bad) (bad) sbb out adcb pushf (bad) xchg shrl stc push mov test prefetcht1 xlat jo jb test in int3 leave sahf shrb add jns hlt push rcll adc std outsb rol push adc dec pop add stos in jge add aam lock popa outsl sub jle push hlt push iret enter jne mov rcrb lret cmp adc add int3 (bad) fildll pop mov fsubp imul insl cwtl or out pop call xor ds adc cmp jno inc sbb pop or jg,pt je,pn xchg mov fidiv cmp or stos mov aas out lods push test and and adc inc mov pusha (bad) ss (bad) xor movsb push pop dec add lds dec sbb add iret dec mov mov imul jle mov and fwait mov xchg jge faddl ss lcall lret scas pushf leave xor aam lods add pop jne add (bad) fwait int3 push or jg mov fs es loopne mov add jmp test xchg mov cmp mov mov das cltd sbb sbb or sub xor icebp or lods popf outsl jnp (bad) and aaa in dec loopne dec push jo jae cmp ror sbb xor jmp jns in cwtl sbb mov lock bound jl add (bad) sbb mov test repnz or adc into outsb jecxz incb lock mov or pop sub xchg lret ljmp fcomp addb push lahf add cmp push push mov push and loop push (bad) lea mov inc mov mov or pop rcrb sbb adc inc push push popa xor sub insb adc loopne dec aad xor push test jo shlb cmpsb dec push inc pop jne js jl push shrl lods dec loopne adc push dec push sub (bad) add pop inc xchg in add adc lods pop sbb xchg inc fimul movsl lods nop adc ja jecxz mov enter les pop mov push xorb add and test inc xchg dec in lret pop sub lods insl rolb xchg pushf call mov sub cmp pop les stc push pop cs xchg inc dec cmc and mov popf adc pusha dec test or in xchg xchg add add push fwait mov sub adc popf shlb pop inc mov xor fwait out lcall push nop add jnp jmp xchg and jbe test xor lock adcb stos repz jo pop pop fadd mov jne add cmc test imul out bound in (bad) rolb rclb cmp or pushf jb sub xor jle adc fwait test mov inc dec add xor pop aad adcl sbb and xchg or imul stos mov or iret loope xchg mov test jl in cmp je adc mov cmp aam add (bad) fsubl inc iret add scas push and mov shll ret inc xchg sbb mov xor sbb mov aad cmpsb popf xchg mov add (bad) push inc adc clc jmp (bad) xor add inc mov or lret mov mov mov popa jmp jo sub dec mov xorb cmp add aas or xor xor and pop adc out jl add icebp xor adc arpl push mov or add and pop add pop fwait sbbl mov ds loopne movsl push inc mov jo popf inc push sub dec push inc push gs cmp and lods not cli xchg sub cmp xchg cmp xchg dec mov ja ficompl out adc mov pop or cmpl dec push test jo cmp mov cs mov push mov xor push mov js sub adc mov icebp (bad) int3 andb jmp xor (bad) cmc in push rcl fmuls js cmpsb pushf addl xor lock jp add sub call jge mov in xor pop mov dec in sub mov or mov mov outsb fcompl pop int3 scas add xchg push jno popa int xor into es push jbe xor mov mov push push aas mov xchg adc mov cmp jmp call xor jno mov jnp iret jp cmp or std sub aas addb and adc repz jge mov fdivrp stos push mov mov lods xor mov fadds mov push arpl loopne xchg cmp loopne sub fsubrs (bad) xchg sub popl call into xchg push (bad) dec iret pop mov test jb push inc adc add imul push xor adc mov inc fcomi xchg cmp aas mov enter add addl pop sbb sub pop cmpb pop lahf das aas adcb das add add add xor add push std dec pop cmpsb loopne xchg test (bad) lret mov fs sub and sub cwtl xor sub add and sub test cld jb cmpsb xchg roll xchg mov cs loop dec test aaa test jle cmc cmp xchg mov rclb add jb mov movsl (bad) or add inc push rcll or movb ss mov mov aas jge mov sub mov xor cmp inc xor push mov cs jmp xor aaa pop std ret add or loope out arpl pop lds add js shufps (bad) dec stc pop push push lds pop ds fdivl (bad) popf mov dec push adcb add lret bswap inc enter rolb sbb clc out lock add inc mov inc jg lahf shr js dec loope sbb daa pop sub inc shl dec pop or stc or or cmp and add int3 dec push call mov rcll ss shld xchg pop mov mov out add add push add inc (bad) mov cwtl xor inc mov andb mov cmpsl mov jb adcb or fcomi mov repz sarl loopne or inc mov rorl mov add adcl inc popf ret icebp mov ret cmp leave loopne loopne mov shlb mov push rorb nop int das mov sbb add clc push loope xchg and shlb xor mov sbb leave pop mov xor or and repz insl popa mov das inc or lods xchg xor mov mov push mov (bad) int loopne mov xchg hlt arpl sbb addb iret pmaxsw or or inc sub test jg int3 sbb icebp or add xchg or orb xor mov xchg fimull (bad) mov arpl mov push inc fs dec mov int3 in pop (bad) mov loopne and xchg and or xor rorl cmp (bad) push mov clc jge (bad) hlt add cmp dec xchg ss push xchg std jmp daa dec or push bound (bad) and push leave add pop mov (bad) enter and sub push jno lds orb hlt cwtl sbb out or mov and or in lds mov xor push stos jno pop fwait and std sub lods add sbb rcr pusha pop lcall fdivl (bad) cld stos jns jae mov push push ret stc dec and loope ret jo adc push cmp leave cmp clc and pop xor out push (bad) add mov insb sbb lret xor sub sub push adc and in stos dec or xor pop or push mov mov pop pop call xchg cmp xor cmp push mov add or adc adc add cwtl mov call push out inc adc add pop mov les cs cmpsb xor pop dec pop mov xor ds fwait add sbb mov cmp mov dec adc call call enter (bad) stos mov nop and in dec sbb jnp pop fidivrl mov dec xchg adc mov rorb shlb or call add aaa sub in add add mov adc aas sub push mov cli test shrb cmpsb and movsl mov pop sub (bad) addr16 ss fwait cmp add xorl inc adc nop add xor and lds add sbb js arpl xor dec icebp scas in inc cwtl aad mov and jmp pop dec push adc xor push inc adc jg add lock rcll push les test xchg fmuls jns jg sbb and popa xchg xor aaa sub push mov or and subl (bad) out xchg popf dec mov imul je and and sbb xorb inc sub (bad) push dec dec mov mov mov andl stc mov push rolb shll sub jae add and sub sbb push mov neg xorb lret cmp add push (bad) call dec jo pop out push sbb inc mov mov and xor mov cmp mov dec jle push into add fdivrs fwait popa inc ret dec add or jg ret add cld or pusha fwait add stos mov jno and imul mov pop inc push (bad) fisubl and inc push movsb outsb (bad) cmp lods add sbb fnstcw add mov add in push aas lock arpl add xchg mov add push and js subb pop jno mov loop dec jb sub cmp aam jno add ret iret dec fwait add add inc push push add cmp mov in addb lea inc add mov mov mov jecxz daa inc pop adc xchg adc add xor mov hlt sbb inc rorl es inc fidivr js lock ret add or mov sbb sbb ret pop or cli stos or add enter dec stos cmpb dec adc dec jl orl jno stos cld les fiadd xchg dec enter jb xchg inc jg leave add mov pusha aad lret addl jb (bad) jo rorl and sbb cltd or sub add xchg mov cmpl jp and fnstenv loop jle inc int pop dec fist jo ftst pop add xor dec mov add pop fstps inc mov lds xchg and les lds and inc mov sbbb cltd lret and in adc lods dec add test cmpsb jmp xlat popa adc and rorb test mov insb mov inc leave enter inc dec aaa ret test iret in mov mov mov fs cld add and sbb cmp pop popf and adc pop sbbl pop es mov fldl add ret xor popf sbb add push mov mov dec nop or cmp bound push pop dec aam outsb add les adc inc and dec inc lods js fwait sub nop cli movsb dec mov inc push push pushf call add cmpsl in dec leave sub cmp and sbb mov xlat adc sub mov and lret or js push and jbe daa sbb push adc add sbb pop dec stc add inc lret xchg sbb and xor xor cmp or push sub and pop (bad) outsb add pop xchg daa mov mov xor shr stos ret rorb and nop jo and and and and mov add aas rclb sbbb or and add sub jo pusha or les mov add or mov or adc ds lock mov and out pusha popf push mov add inc mov pop dec pop or sbb jl lock int test or test fcmovnb das xchg mov ffreep outsl mov sbb mov and mov add cmp das sub addl or mov sub mov pushf cs lock add (bad) ret into and xchg add dec in mov pop rorb out or inc fld push xchg int3 sbbl and add and test lea int repz out add cmc xorb imul mov fidivrl sbb xor xor and pop add (bad) (bad) adc xchg js sbb add lcall dec insb pop jo push out stos es cmp or subl mov jnp jg fstp loop das push dec sub xchg adc les rcr test ret lods loope inc or aad cmp push adc imul sbb inc pusha fnstsw dec dec cmp fmull push (bad) lcall or add mov mov ret pop ret and push repz mov mov mov rorb rolb xlat outsl popf rolb inc mov inc fdivrs movl repnz jb adc les adc shlb mov mov ds cmc mov adc add xor loop and cwtl pusha push mov mov inc ja mov push imul cmp add test inc mov jne pop sbb jmp jno fstpt pop xchg popa mov sub adc inc push push sub add cld sub pop push xchg push pop imull ret mov pop mov push outsb cmpsb repnz movsb jo lahf pop (bad) stos mov mov xchg (bad) call add aaa (bad) jnp sbb mov orl jns sbb pop sarl push stos out push sbb lock add mov faddl inc das mov orps inc xchg mov mov xor pop daa push xchg mov xorb sbb popa mov adc adc sub (bad) push je mov enter bnd sbb mov sub scas test fnstsw in sub push mov mov out add push pop xor inc cwtl ror fisttpll mov shrb sub cwtl sbb add aas pop xlat mov xor dec (bad) ss fimul aas sub and test incb ficoml add scas ret std les add js push test xchg or cmp pop push or push sub sub cmp es jl mov dec push sub std and loopne mov out xor cmp mov add popf or cmp lahf fsubs adc xchg xor int das sub cmpsb jmp or and or push movsb cltd hlt arpl mov ret or push loop pop xchg push in add mov call mov mov jo adc hlt mul and add (bad) inc aas pop add pop mov aaa sbb dec js push out cmp jo xchg xor clc scas and clc and add lods xor dec and mov pop and in mov jge cmp xor mov pop or ds add mov xor sub fidiv test sbb scas adc imulb xor jmp js dec sbb fs mov das xchg add pop mov mov inc (bad) pushl add sbb shrb dec lcall or mov add and not pop pop push lock (bad) sahf jns lock xchg divl addr16 add (bad) mov mov popa jmp jl add xor push mov xor cltd clc and les mov push ret jo pop sub test test adc push into and stos pop adc mov lret jno or mov xchg cmpsl jle pushf jo push (bad) das add mov movsb mov and push fistl js xor mov or add (bad) fild imul xchg jns add xchg ja fcoml push mov addr16 das in fmuls xchg and lret rclb cltd add cmp icebp lret in mov test mov aam ds add je sarl mov inc mov inc jo xchg stos push push ret xlat inc lret out sbb add popl inc div rclb or pop (bad) push cmp or and add sbb cmp ret mov dec mov jle cld stos pop shr rcrl jo xchg mov out rclb cwtl push cmp sbb mov sbb pushf loope xor faddl lods add xlat testl mov mov ret js add pushf inc mov pop adc mov sbb cmpl or xlat xor cmpsl repnz aam or sbb (bad) and pusha dec (bad) repnz dec cli xor mov push dec icebp xor xchg xchg jmp add mov add xchg or add pop xchg xchg mov scas xlat int inc and push mov rcrl sbb cmp les mov or call xchg cltd rclb mov sbb sarl or mov sbb jmp jmp lret push popa sub jl cmp mov pushf out adc popf and out fldl and xchg pop push aas jo add xchg or pop push test jg and add add enter cs (bad) xchg pusha sbb leave push (bad) fsts and xchg out and js dec popa push adc sub lea test push xchg and xor xchg fisttpl lock push inc mov mov mov jnp xorl pop lods push xlat (bad) scas aaa pop aas fcoms add jnp loopne mov mov push sub insl and fcoml cmp push mov lds mov inc stos sub pop sbb aas and ret adc or inc adc jae xor inc mov inc or subl jno mov cs dec addb dec jnp xchg push add ret mov jg add xor je test aaa inc push jl imul dec js mov xchg mov bound fistpll xor or gs cld or enter dec enter faddl ret sub add test dec and test add pop add enter sbb cltd imul sbb jno ficomp push xchg ds mov les dec lea add mov or pop jge cmpsl mov push inc inc or js add xchg in fsub call xchg je jle push mov pop in out call stos jp int and stc mov ja pop dec xor xchg das imul sub mov popf pop mov push sarl fmull add sbb adc sti enter lods add cmp gs enter adc movsl adc mov jl pop sbb push test movsb test int3 fildl add sbb data16 xchg int3 adc push sub dec xchg adc add add leave xchg mov push fsubs xor test cltd dec sub lea pop push ja inc je mov dec mov adc hlt adc nop xor inc adc ret and pop insb sub test mov pop adc fldt xchg adc sbb adc xor push jo pop daa xorb jl in ja or sub ret mov push mov stos lret jmp or insl jg adc add daa and nop cmp pop cmpsb or sbb dec das sub pop xchg and jecxz movsl or jl jo rorb push push pusha sub mov dec mov enter leave cmp repnz mov popf cmc or xlat (bad) jbe iret jg hlt (bad) loope add inc nop call add inc pop push and add ret push in push or add (bad) ljmp cmp push rclb add push sbb lret mov idiv add push out fdivrs orb mov rcll scas lret jl or add loop add in sbb loope cmp mov and pushf ja mov or dec inc ret inc sub add mov add or mov sub (bad) cli add lcall or add push dec cmc cmp add fisttpl pusha cmp test dec sbb test pop pop cmp mov shll adc orb sti cld pop mov dec push sbb ror addl inc or mov jno unpcklps mov add imul cwtl stos jns add ds cmp and data16 inc shl sbb adc test adc cmp repz push add dec cli xchg jo add sbb mov loopne push orl xchg mov mov gs lock cli mov roll call jnp pop int3 je rorb mov out add and daa dec ficom or (bad) cwtl je stos pop (bad) jo jb ret pop hlt or into or add add icebp lea lock add sub or hlt mov in add inc mov inc xor rcrb jg and mov in sub xchg aaa add (bad) cmp sti adc sub lret pusha add das cmp fildl aaa and sub xchg or mov out xor cmpsl jecxz pop add movsl sarb push dec loopne or add outsb xor lods orl lahf inc adc test ror pop and stc incl or or leave test push and (bad) xchg rolb inc pop mov ror cmp (bad) mov xchg inc shll call mov inc subl mov pop push aas call dec lcall sub nop sbb xchg or outsl std call add es or movsb mov insl add xlat (bad) nop in mov bswap aaa dec xor mov js bound iret mov ret push add lock or mov add xor in xor sub and and push mov and repnz hlt xor adc push xor xchg add adc mov mov mov pop loope xor icebp lds mov mov movsb xchg add sbb jns mov ja xchg sbb pop test repnz xchg mov rolb and xor js adc mov sbbl inc mov test bound js fiaddl xor fucomp cld nop movsl push adc inc fcom add xchg outsl adc inc inc in test mov jl ja inc cmpsl daa mov and insl add lock roll push jg (bad) push cmp sbb pop test rcr shl mov lret push nop push pop outsl pop pusha ss mov sti int3 jl add xchg adc or sub (bad) mov inc int3 xorl inc int into les pop mov out cmp test cmp subb cmc imul fidiv pop mov cmp cmp cmp mov jecxz sbb loop xchg add out fwait mov and push lods xchg xor pop out mov fs icebp xor add lods inc sbb dec push stos cmpsl mov add or mov inc les and sub push sub jle add fistl outsb inc add imul cwtl sub push ret or shll (bad) cmp xor inc jecxz pop xor rorb int3 adc cwtl inc test xchg loop add inc mov adcb lods data16 xchg cmp xor sub push cwtl fs lods pusha and inc add ljmp lods (bad) add push dec (bad) dec add fbld bound jl out cmc icebp sbb orl js cmp dec clc pop xor jp stos pop dec xchg pop je jo mov push add (bad) sbb lock jl rcrb loop test pushf test cwtl sbb cmp into mov mov enter push cmp rcrl mov sahf jns or shr pop and sbb mov cmpb stos xor (bad) push and adc xlat and pop cmc sahf sbbl push fdivrs test addr16 data16 aam adc bswap push sbb das in icebp add int orl cmp dec mov xor push mov xchg xchg mov pop fcoml sarl mov hlt roll lods or fdiv out sti add add test rorb std insl push test inc push sub frndint pop (bad) or lret push in inc jle add mov mov add std pop ds or sahf outsl mov cmp dec popf push loopne xor xor andl lods push test out lods and push push jecxz and dec aam int3 cmp xlat and fist sub adc add push call test fcomps inc pushf dec data16 pop mov subl in mov pop push mov and inc repz out adc adc jnp fbstp repz dec out mov sub inc les add or or rorb push inc xchg inc in cwtl dec xchg xchg inc mov or arpl sbb push add orb popf out push mov idivl mov jae jmp add dec xor and cwtl dec xchg xchg aaa push jne jo xchg jmp push jg fidivrl cmp dec jl cmp arpl call lret scas faddl xchg cld repz lea mov or hlt mov jecxz sub rorb js shlb imulb mov cmp clc add rcr sub dec je and dec xor fiadd cmpsb fmull xor stos nop sbb pop push xchg cmp int3 cmp out xor jno int3 ficompl ds pop sub aas add mov add cli int xor lods cmp push lret push xor adc pop lds xor sbb and sub rol rcl cmpsb xchg xchg and sub jl lods or cmpl or dec rolb xchg jae mov (bad) into (bad) cmp lret inc dec jno push dec xlat push add cs jae and nop call cmp or call test xchg test cmp xor out lock pushf pop loope add dec adcl pop xchg enter inc pop dec (bad) push and push push fs mov inc push and sub mov test sub lahf xchg sub push or jnp clc xor adc xor cmp (bad) int3 ret sub popa movsb adc cwtl mov adc push or lock pusha adc mov iret jp xchg push and mov xchg add cmp into stos pushf xchg sub fdivs sbb int3 mov adc gs out push mov push push test inc cmc or pushf push mov sub subl add ds (bad) jne insl cld inc mov sbb sbb jne pop mov add push adcl pusha and out or and mov les jns aad stos xchg insb (bad) sar stc add in (bad) rcll movsl sahf (bad) jnp add jne aaa add push pusha xchg movsb add js call add stos sub mov push and cmp dec into shlb push mov dec subl sub jecxz inc (bad) in jns inc std add push or dec les push and pop (bad) (bad) mov adc cli test adc loope dec xor xchg inc and mov arpl pop cli subl and out or or (bad) sti sub adc daa cmc fcoml or loop clc iret (bad) xor push outsb rol and into mov stos sbb mov cmpsl push mov test add push les shll inc daa push pop and mov jo or pop add aad pop adc loop pushf add inc push xchg push in add arpl pop add xchg andl pop fsincos into js inc js outsb lock and mov sub faddl mov push push pop imul sbb pop push loope add push pushf jge mov movsb cli fsubs push and mov ret jg aam push mov sbb mov lock rcll repnz add push sbb addr16 xor pushl add push repz inc and pop jl mov adc add xchg add pop jp (bad) loope push add out push mov add lahf jge jp or add mov imul xor pop cmp (bad) fs push or test pop or lock xor mov nop xchg xor inc loopne cmc jno adc cmp and sbb nop push (bad) dec mov push arpl cmp enter dec cmc add movsb out in sub sub jp cli mov loopne cmp xor adc adc inc cld mov add jp arpl sti push outsl (bad) sbb mov clc (bad) cmc mov pop pusha add repnz fimull jnp xchg aaa or dec mov movsl xchg add arpl cmpsb lock jle add cmp xchg out outsb fbld sti ret shrb gs mov movsb enter pop cmp sub iret ss js xchg jno cltd or in push dec sub push loope jb inc add fbstp out in fadds out in mov push xchg pop jge or mov add std and or clc add repnz jo jmp rcrb adc add sarb add add lret add mov and push dec jecxz js loopne sbb rcr mov adc arpl add mov bswap mov jp push add mov jnp das rorb test lea jg popf jl jae inc add jne adcb loopne push or jnp cli js add jle jecxz jg rorl sbb adcb add lock add inc popa sub int jle inc test add (bad) hlt xorb fisubrl or add sbb repz lods sbb pop cmp dec mov and inc mov scas add mov imul add lahf pop or repnz jns in sbb add jo add push lods loopne jb add dec jne xor stos push es repz dec fucom adc push call or push add not jo pusha mov repz push popf add mov loope add ljmp dec add fiaddl and sub sub aas addb lods cmp lods adc cmp jg iret or push int (bad) fdivrs imulb in xchg xorb add push test mov cmpsl jl cmp or mov fcompl xor and adc push sti cmp mov call mov cwtl leave or pop ja sub mov ds ss mov adcb inc push sub jo mov cmp adc add lods adc jmp adc add lock roll rorb xchg insl jmp cmp or sbb aas lock push sub sub pop shr sbb mov loopne or cmp dec and add (bad) shlb push adc cld rcrb in sbb mov lea shrb scas fs or cmp pop repnz xor adc jb fcomps in test faddp and mov mov or or mov divb adc je in jmp cmpsl dec ljmp push daa add xor cli jmp add loop sub lcall shlb jg pop (bad) jnp mov (bad) adc mov add jecxz and add sarb or sbb test in and lock pusha adc (bad) cmpsl jg mov inc dec pop lods int3 je pop xor movsb sub or cmp jecxz add andl andb pop (bad) add sbb into inc cmp push popa mov jno ficom add sub dec add jl xor pop cmpsb cwtl adc add push and sbb add les in mov psrad sarb adc imul fisttpl mov sub inc add je push icebp adc add rclb push mov pop add sti and insl xlat cmpsl or out jo jecxz loopne sub ljmp mov test test jl adc add sub rorb jp dec xchg add pop nop or out test ja jno add adc out mov enter inc in sbb and movb mov pop sub imul mov add (bad) jl push addr16 (bad) xor adc shlb xor inc or add nop xor (bad) repnz mov ds add popf mov (bad) dec imul adc fsubl cmp rorl sbb mov movsb add pop popl jb add dec inc shrb scas fs ret mov (bad) jl in nop push fbld jno in or loop xchg cmp (bad) in nop xor and dec inc rorl xchg cld dec mov dec les adc cwtl xlat and push fisubl xchg inc push dec jecxz inc cmp xor mov mov pop fcoml or jg aad scas mov pop sbb push test fidivl add and mov fildl test pop pop (bad) sub pop (bad) sub push xorl out push pop add jno loope add pop pop pop cmp cmp or lret xor out movsb adc pop sub out add push (bad) mov js repz inc add nop fstpt pop loop movsb xor shll popf out add into (bad) lcall mov cwtl xor in (bad) pop addb add adc loop imul sbbb jnp sub and loope lods xlat inc in shrl mov mov in or jne xor mov inc movsb orl sbb mov jns sub cmp adc sbb fisubrl pop mov insl (bad) (bad) fistl shr or lock sub (bad) into data16 push enter jge add cltd add fisttpl mov sbb lds test jae xchg inc sbbb pop adc sbb xlat (bad) push add cmp mov or mov sub inc stos inc insb sub pop cwtl cmpsb mov int3 sti cmp inc and adc clc call adc jl cmp sbb add mov xor orl dec pusha pop test loopne cmpsl pop ljmp xor stos mov sti fnsave mov dec or call xor add push shll mov xor jno xchg inc gs and xor or in xor push pop rolb and and jge add add push adc in and nop adc pop out imul fs push ja les xchg cs int3 in mov js or adc lock jbe int3 jl fildl loope mov sbb in hlt jp mov xor shlb xchg push repnz jle sub lods js fdivl add adc mov mov js rorb fimull cmp push push je (bad) fwait aas add icebp inc hlt sbb (bad) in or loope es lock jbe std jnp repnz scas inc mov add ljmp lds (bad) call sub sbbb push xchg add imul rcll lahf pop inc lret fcmovbe scas add cmc pop (bad) in xchg sbb ds andb dec add cld divl xchg sub lds repnz add std shr or mov sarb add adc (bad) loopne ret sar cmp jmp cmc clc xchg add push cmp shrl add mov les push pushl out fnstenv xchg sub ret fcompl inc (bad) lock cld scas and dec aam pop xchg (bad) jae cwtl pop es pop andb cmpsl push stc pcmpgtb dec xor add cmp mov (bad) inc jo add lods out icebp repz or lcall mov mov sub push jecxz cmp gs cmpl (bad) pop test adc mov das add sahf icebp adc adc adcb lods pop loop xchg inc xor or in pop xchg xchg (bad) fistl lds jnp sbb cmp pop inc add sub add push jecxz sar sbb incb mov pop cmp dec sub mov lock leave xchg fmuls enter mov mov addl xor push inc push fidivrl mov xor fucomp pop inc cwtl dec dec rolb insb popf cmp inc inc in adc mov loope inc cmpsb mov stos adc cltd cmp enter fdivrl sarl call insb inc jnp in pushf xor sbb push pop in add test lret sub push adc add mov sarl mov in jae loopne sub cld sbb mov cmc jmp push cmpsl mov rclb xor nop add jmp int prefetcht0 test cmc repz loop jmp xor inc test arpl sub pop ret fwait jp pop add push popa dec push add (bad) (bad) xor adc mov int sbb cmp in add xchg fsubrl xor pop xchg mov mov xor pushf pop lock mov insl sbb loope loopne inc mov add je das and (bad) pop aaa sbb xchg pop mov bound or xorb enter sub push sbb or jo cld push and add rol sbb mov jno sbb pop inc add mov imul xchg adc mov cmpsb je sbb push pop mov sbb ja test fiaddl adcl pop xor lods out aad mov cmpsb rclb xchg jns nop cmp lahf test mov push aam mov (bad) rcrb push jmp scas sarb setbe push cmp jae adc mov dec or nop mov cwtl inc xor punpcklbw push les sub (bad) fstpl icebp adc enter lret enter and test in lahf mov dec cmpl dec inc fwait dec add pop add (bad) mov jp mov aas push mov cmp pop sbb pop (bad) (bad) adc inc int3 (bad) mov mov push cmp push aam or adc xor mov into (bad) mov or pop mov fistp pusha mov adc nop sarb or push int3 call adc es ds pop xor scas mov cmp push adc sbb je add pop ljmp xchg cmc and xchg outsl jb cmp hlt rep pop xchg push mov cmp mov dec push rorl rol popa push (bad) lret cltd add mov pop sub add mov jg fwait xchg call popa jl jns xor adc mov (bad) (bad) pop std sbb inc mov sahf call cwtl and xchg inc inc sbb add inc repz sbb xchg xchg insb add sub out inc nop xchg int loopne lock push cmpsb jo and or repnz cmp lea add push pop out xchg mov inc sbb inc xor sbb enter jo xor pop cmp outsl ret and jmp add cmpsb lock or dec dec mov adc push shrb add jae xchg cld sbb iret in insb xchg mov js xor push rcrb jge push pop or out nop cmp cmp lea xor lds xorb scas inc loope lock repnz jle clc sbb add clc imul lods test sub int xor cmp adc jge pusha dec scas add dec in mov shlb jae xchg or inc scas mov mov pop xchg aam dec in (bad) insb push int inc lods mov stos cmp inc mov fs js or sub test insb pusha orl aas xchg dec or mov sarb (bad) pop push jns (bad) adc push xchg inc mov add dec scas loope jo xchg clc sti xor push pop fsubl add gs xchg orl pop clc mov cwtl mov push (bad) enter jae into cmp (bad) and popa mov push hlt or adc jno into mov mov gs push mov push add and push push sbb repnz (bad) cli jns add jle movsb enter mov adc je add stc jb xchg sbbb add dec mov iret scas push mov add sti xchg popa cmp daa leave (bad) or sbb jl je int fmulp test js add test (bad) lods xchg rclb or sub push enter push or outsb dec add mov add mov fldenv inc iret or jno int3 dec sub ret jo pop push aam mov clc mov nop inc dec inc sub in test or cmp xchg or mov cmp add push mov add sarl (bad) mov add sti pop sbb push push cwtl jo sbb pop js jb jbe sbb mov adc les inc loopne js xor nop stos fsubs push cmpb lock loopne (bad) mov xor mov enter sub pop inc fxch push xor mov pop rcr jmp nop add or adc sub push push pop hlt push or dec cmpsb pop adc add sti jb (bad) xlat daa pushf inc mov cli insl ja dec loopne jge inc movsb push sti in sub xlat je (bad) xor out pop int3 cmp xchg lock mov mov addb hlt mov pop test rolb add sahf sbb push xor jnp cld movsl mov mov jbe data16 sub outsl add (bad) inc js mov mov push pop or pop ror mov loope dec cmp lds xlat mov add mov sub xchg rorb popf arpl cwtl mov add and mov mov in xor sub cwtl aam push mov dec add int3 jg lahf stos enter mov mov mov adc pusha loopne add mov push adc loope push movsb and movsb mov mov push ret pusha out movsb lcall into or adc arpl xchg lret mov negb icebp test notl adc daa cmp mov inc adc xor idivb sbb or in addl fcomps mov scas push sbb fisubl mov (bad) testb ljmp nop add (bad) xchg aas je inc adc cmp jnp cwtl movsb add mov adcb add lretw mov xor or mov jno dec add aas loope hlt rorb jge xor aam mov in sbb enter fdiv push mov push jae mov inc leave adc cmovg inc sbb adc (bad) sub add sbb sub sarl inc and jns push imul inc sbb add gs mov sub xor xor imul cmp lock or shr jg divl movsl or xor and add pusha add inc stos movsl addb adc popa lret pop dec xor and mov mov mov pusha inc and adc je js push mov loopne movsb dec jno fadd cs rcrl addr16 outsb push nop add jbe addps outsl mul andl sub popf mov pop stc jae bound loopne movl or adc in inc mov (bad) lds loopne andb mov pop into jle xor mov stos pop mov fucom and es jno add scas loop pop lea xor ss push scas fsub ret sub out cwtl dec push insb xor sbb and push mov orb (bad) fwait push stos and xchg cmp pop xor sarb cmc cltd adc movsl bound fdivp cli push (bad) enter jecxz or push movsb scas clc leave mov cmp mov mov (bad) push shl and out push js push cmp fs cwtl rcrb fild (bad) lods test stos or mov stos cmp shrb inc adc sbb test cld pop test or and jno mov mov xlat lcall shl testl pop xor dec orl cmp stos arpl addb ds loop call jl sbb clc xchg adc sbb mov cmp (bad) dec icebp ficom push js adc cwtl inc imul jmp fwait inc add inc dec xor bndstx cwtl (bad) lcall sbb test movsl and push add push pop mov pop inc jno and aam fstl or enter push mov adc xor and xchg test cmp or push add cmp cmp mov movsb push stos cmp and push cmp mov sub fldcw fiaddl push loope lods shrb sbb les pop pusha inc rcrb sub dec pop push stos dec pop fdivrl xor xchg cld or lret jle add and push ss sub test or sbb pop inc sbb fsubs clc sbb aaa pop xrelease lcall adc xchg add jb adc push jne pop pop addb xor decl xor adc int3 ret add and (bad) sub wbinvd in pop movsb pop xchg mov cwtl outsl adc push adc icebp popf xchg or sarl push mov inc test pop aad add aam jno stc sarl aad xchg testb push pop cwtl sub scas sahf (bad) xor jns divl mov mov push push fiadd or mov (bad) in mov and in mov or mov push adc inc sarb rcrb negl (bad) jo jb add jnp mov mov out adc dec and lcall jl cmpsb rorb or cmc fs push mov push and aaa lods xchg das mov dec cmp xor (bad) ret inc orb clc arpl inc fwait add add jo in mov imul popf pop add mov add repnz xor sbbl insb cs (bad) incb nop (bad) or and roll xchg popa mov les incb dec inc mov add jns mov stos sbb inc shr repnz push mov xor add jae dec xorb sahf adc pop sbb mov xchg adc add adc inc xor clc inc data16 or mov (bad) and fildl clc in inc or pop lahf mov mov ss and arpl and ljmp mov rolb fistpl cs clc pop push push jmp xchg xchg xchg xchg jp inc inc test inc adc jb arpl cwtl shrl xchg pop cmp add movsl cmp sbb pop xlat in adc adc dec andl shlb xchg fist into sub add mov mov and add mov add out imul adc out add icebp inc bsf pop push mov fs pop or rcrl xchg add mov mov pop jmp jl ss jb pop add dec xchg aad xor ljmp sbb test fsubr xchg das pop mov sub mov xchg push sbb sub aas jno lret or divb push call movsb movsb movsb add mov xchg adc push and mov inc and mov mov jg sbb wrmsr les sub in clc add adc loopne jb sbb test and into xchg mov add orl xchg lock sbb add test fmuls rcr add out push xlat inc test div cld pop das pop jnp sub fsub xor sbb sti xor or loopne jne call pushf push xchg mov inc aam rolb aad ror lea mov jle idivb fbld je add cmp push test test mov adcb sbb mov mov stc addl cmp or pop je xchg and jbe daa mov jne sub notb (bad) jo bound cwtl mov (bad) jo sub lods or ja mov fsubrl outsb mov xchg sub jno arpl inc pop and dec push cmp sub imul pop sub addb add aad mov pop out std leave xor dec mov rol jno icebp sub rclb fiadd ret pop faddl jge or test out insb lcall int3 cmpsb iret xchg pusha in in jno pop push fidivl (bad) or push inc pop push jl sub cld xor and lcall sbb dec xchg sbb clc inc (bad) cmc sbb shlb push xor movsl pop sbb ret das iret xchg or (bad) mov insl add push inc (bad) pop and and sub lods hlt inc mov inc mov add test pushf add into adc aam push lcall repnz push push lock adc dec jb test xchg mov loope add inc xor (bad) ss sbb lds (bad) cmc or jmp outsl adcb mov sti add jle ja rolb xor int decb inc fbstp ja fwait adc inc pop jge add dec bound out (bad) xor (bad) sub xchg xor (bad) dec ret jle,pn sahf or jbe dec call testb cmp addr16 jg daa pop icebp sub lret repz ret shr cmpsb dec push xorb nop mov sub or ret icebp insb loope lea rcr or sub icebp cwtl push xor cmp or sub adc fldcw int3 or cmp lahf jl jl push xor loopne jge sbb sub adc cmpsb mov sbbb sbb lahf (bad) shrb repz and inc and add hlt es xor cld add and test aad xor adc xor nop jno call dec add popa push or sub add les or int pusha add fs out sub scas mov mov (bad) jl add fisttp push add push jg adc fdivp int3 fmuls lret pop cmp (bad) aas pop add in inc pop xchg lock jb cmpsb add pushf push adc cmpsl pusha sbb roll das mov (bad) xor outsb pop sub pop mov bnd mov mov lock lock ret lds sub arpl jns in sbb mov jo outsl inc test lds (bad) xor inc adc stos push xchg sbb out mov pusha xchg inc push stos lods cwtl loop addl enter adc out mov cmp push inc roll into cmpsl out pop std adc sub cmp ret popa ja dec xor push xor dec imul mov popa cmp lods add jge insl lock lret sbbl and sub sub out lahf xor insl es test and wbinvd dec (bad) jno xchg rcl mov sti add popf imul imul and xor inc arpl and xor scas adc pop sbb add test xchg test fnstenv in (bad) push mov pop pminub jl xor add loop or sub clc sti call dec stos mov sub aaa inc dec cltd movb mov sbb lret inc mov xlat outsl jns push jno pop or call adc jo in push cmpb push ret bound mov sti pop icebp stc arpl sub loopne lcall enter loope nop sbb pushf lret call pop mov sub mov lcall (bad) xor or and repnz and mov push xchg push push push mov xchg push or sub push add lret pop mov add cltd sub or loop gs fstp out cmpsb iret (bad) cwtl cmp jp xor or xor add clc es ficom inc cmp pop daa add pop in movsb adc (bad) cmp xorl sub pop cmp (bad) adc jnp setae inc (bad) sbb sub xor cli or repz or mov xor mov gs inc loopne inc push in adc sbb div sbb ror pusha sub pop push inc call and jo jecxz cmpsl jns add push das leave mov in pop ret out pop fadds neg (bad) sbb mov push adc enter lock andl cmpsl mov pusha xor cmp jl shlb mov cld jmp cltd mov loop sbb push xor test dec fistl ja xor add ret rcrl (bad) popa hlt shrb je insl jb clc pusha mov out add leave sub loope icebp mov rorl push call cmp mov push mov sub stc aas ret sbb dec in cs dec or sub pop xor jp xor scas add (bad) imul test mov (bad) push cmp push fadds (bad) mov cmpsb cmp fdivr mov xchg stc int or or cmp and sbbb mov xchg sub add or mov jmp ret jnp sub push push pop pushf aam mov cmc sbb shrl add fidiv and mov mov mov push shld pusha add cwtl jge sub pop mov jmp dec loopne xor inc rorb mov mov sub pop xor sub mov push xlat inc xchg call jb xchg stos jne push add test repz rcrl mov sbb adc ret cmpsl cltd imul and loop dec pop imul sbb sub mov xor test push or outsb (bad) inc popa (bad) sub mov imul pop popa mov mov or inc sbb (bad) mov dec (bad) dec movsl inc sub and shll add aam in inc nop addl cmpb jl pop (bad) mov push sub test ret sub xlat (bad) mov dec icebp adc pusha aad pop and movsl inc inc lcall mov inc mov insb or push cltd xor fldl ja push xor js dec add in cmpsl and xor cmpsb pop jo cld call adc loopne cwtl mov mov add sarl aam push jg add (bad) repnz std ss mov add sbb pusha stc and nop inc mov rolb push cmpsl js leave inc add pop rep pop lods add icebp int3 pushf jne sbb add aad or adc pop mov pop ret sahf push push cld test push inc jp (bad) sub outsb loopne dec ljmp mov ffree push decb pusha xor xchg push cmp mov push movsl inc pop mov sbb mov cmp out add out nop sbb dec mov cmp int sub sbb mulb push or or mov pushf into sub mov push cmp xchg add xchg xchg xor (bad) rorb jne hlt mov js daa loope mov and sbb xchg pop mov inc in xor popa testb pushf enter pop sub xor xor cwtl sub pop xchg add popf pop mov xor inc (bad) mov cltd jbe sbb mov popa xchg cmp jne call shl push mov xchg aam ljmp and add pop mov xor cmp movsb fild dec (bad) call pusha prefetcht2 (bad) or cmpsb xchg sub mov lea dec cmp mov sbbl (bad) cmpsb add xchg seto adc (bad) xchg cmp xor in ret cmp pusha sub cmp (bad) dec cmp incl xor and mov push inc xor ss and (bad) jne xor xor inc insl add add rclb nop adc clc in sbb push adc aaa inc movzwl or ret call inc or fmuls movsb add pop adc and in adc hlt dec dec in aas dec cmp add repz jns clc add pop leave icebp out add ja push mov adc and cld jle mov bound loopne xor inc add int3 fnstsw mov push cmpl fldl js or mov pop push js or stc and pop add mov (bad) inc daa pusha sub lret pop xchg adc das push push cmp into and cmp lods dec pop xor arpl dec pop scas data16 and int3 call sbb iret pop popl push hlt mov add jmp in scas test adc dec dec add sub jg in or hlt xor enter aas lods shrl jo add sbb shrb pop and pusha xlat fstps out aaa sti inc sbb adc imul jno loopne lahf inc nop add mov inc test push dec fildll xlat jmp jbe (bad) andb jae and pop mov addl xor (bad) iret sbb mov adc push aas mov xorb rorl push mov add push dec adc add repnz xor enter sbb mov outsb sbb cltd sbb and fwait (bad) lock fcoms pusha xchg scas call loopne es leave fs call insb pop xor sub fild xchg lret stc out movhps lcall sub aam push mov fiadd into inc sub adc mov aam lea xchg mov pusha stc jae adc lock pop sti mov and cmp test insb adc jnp pop jecxz subb mov mov sub mov mov jno nop pop fs or jl mov movsb dec cld test addr16 dec loope adc or or pop mov faddl inc dec push rorb sub push bound ds icebp xchg dec aad loopne add cwtl (bad) xchg cmp xlat dec out pop add xchg jmp jae and ret es out rorl movsl lods cwtl nop sahf stos xchg xchg push add mov orl fisttp (bad) icebp add adc add into addl insb cmp aas push scas xor and sbb arpl sbb ljmp addl lcall pop loope sub icebp inc movsb int or sub inc pop xor or scas cmp scas mov xchg arpl pop roll (bad) mov test bound insl mov sub loope sahf andb nop cmp mov inc sbb (bad) inc and outsl loop push add js sub nop enter jecxz loopne inc mov jmp xchg clc mov les xor fisubrl nop faddl gs clc subl dec lahf in sub mov dec loop pop adc sarb xchg or mov cli mov cmc gs cmp stc idivl or lods sti in or or sbb addr16 jno sbb lods add mov inc dec inc inc mov addr16 mov and add and mov das leave mov mov enter dec cwtl mov fdiv or movsb aad in lds jnp es pop push iret sbb and mov cmp inc add inc xor dec inc imul push xor dec mov dec xor rcrb enter push push inc pop roll xchg sbb (bad) pop inc mov lahf sub or cmp push bound mov add mov fsubl adc (bad) jo les pop fsubrs or (bad) ret and push and (bad) xor and inc cmpsb sbbb push movsl (bad) (bad) das out aad aam lea ja sbb mov ds cmovns jae mov fidivr into cltd sahf dec call push fisubl lea mov hlt lret push xor jecxz adc in add xchg aaa xor pop push jge mov insl orl sub dec aam push or int3 and push arpl and rol sub and push pop add aaa cld mov mov mov lock lea pop xlat or dec mov scas stos cmpsb rclb call add bound cwtl subl sub jns arpl dec mov xchg pop or call pop sbb push loopne mov or hlt nop xchg xor lods adc and and mulb pop and mov mov dec sahf inc push test add (bad) lock sbb fadd js mov int3 push fsubrs add sbb add sbb push stc mov and bnd loop pop dec imul jo add fldl lds mov pop into faddl clc xchg adc sub dec mov push push shlb sahf dec ret in orb sub (bad) gs sbbb dec adc mov pop add lods mov loopne sbb add push jge sub nop fsubrs daa push cltd cmp mov js jecxz mov pushf push test mov jmp shlb add mov cmp or pop lods push mov adc in les mov xchg mov out test imul add xchg fistl inc cwtl inc xor push push lods pop or nop pusha cmpsb cmpsl fsubs jle adc enter jns adc lock daa push lds mov cld xchg adc call push lods mov mov pop cmpsl mov or pop adc in roll jp negb out mov in mov popa jg les cwtl fs xor mov fadds or mov int3 es sbb mov les and mov xchg (bad) mov sbb das in mov cmp xor push arpl xor out lret lods xor mov lock add (bad) push rcll rclb xor out mov push add inc push jae adc andb sbb push pop cs aam sbb test shl mov mov sbb testl in add push fidivl sub clc push push es xor mov add and adc mov (bad) cltd mov les in loop mov add test pushf push movsb insb add repz xchg por outsl addb inc js cmp mov xchg and xchg and xchg add mov pop cmp enter and clc (bad) pop dec sbb or sub arpl popa sub push pop push hlt inc sbb push mov test movsb aam push push push add pushf mov xchg cmpsl data16 icebp hlt add es mov test rol stc mov popa xchg push test pop sbb sub mov jp xchg cld and and xchg dec sbb pop cmpsb push and (bad) xor xor call sbb test push mov and sub mov cld loopne enter pop pop sbb lock adc mov dec movsb pop les pop add mov addr16 aaa fmuls cltd pop add adc mov (bad) inc adc mov sub pop and popa add pop lods sbb jecxz jge pusha imul xchg mov dec sbb sbb mov add inc xor adc add jb movsb out xchg push insl xchg int mov jns add mov bound xchg fsubl sbb shrb fbld mov out jmp (bad) jg mov adc stc test cmc push xchg cwtl or add sbb inc add or add loop push pusha fdiv or repnz addb xchg lods add inc pop aas mov mov fwait out sub inc inc push push pushl pusha loopne addr16 jecxz and cmpsb and loop jl mov add fcompl xlat xchg mov add std leave rolb test adc fs pusha and pop dec sub (bad) inc push nop lock loop pop loop sbb adc jo fcoml movsl jge jecxz lds cmc lret stos adc imul je cmp icebp out scas fs mov mov (bad) mov pushf mov mov adc in cmpb inc loopne mov addr16 pop fistl data16 xchg and ja rorb add aam loop lcall add xor mov push insb ljmp incb xchg dec push mov rorb cmp and test test cmpsb push (bad) fldl icebp sbb pop xor lods ret xchg cld inc or push adc adc sbb sub andb leave mov adc (bad) adc or pop jl push or cmp cwtl mov pop fs lods dec dec pop push or or decl iret sti dec xchg pop sub mov pop and dec out clc push mov or aad mov sbb insb pop subl jmp jbe lcall (bad) jae jmp js in lock inc cld mov xor sbb sub jne gs dec mov jp pop sub jmp fsts mov mov jae lea mov stos fildll push fsubrl mov pop push stc gs insb mov out in fnstsw pop fbstp or fimul add outsb dec push add xchg ja nop lds jo rolb cmpsl xchg inc mov mov inc cmp lcall jns insb xor popf dec and xchg add adc shll lcall fadds (bad) sub xor xor add rolb shll jbe arpl imul js lock scas pusha nop sarb mov add or mov pop lcall ja mov mov cmpsl and pop jo ljmp fdivs jne sub add xchg mov xchg (bad) jo push dec cld inc ja nop loop rorl sub adc jl mov pop and iret or and insb inc push test mov push in adc xchg adc nop sub je push or or (bad) pop inc fld jno mov push cmpsb mov xor and xchg lods sub (bad) fldl push pop inc push js add subl test cmp in cmpb push fwait lret xchg inc mov cmp add or data16 cmpsb inc xchg inc lds into je cmp negb hlt push (bad) loopne xlat xor sti adc push lods insl push mov push daa pop adc adc aas mov (bad) clc and fwait push sub and push aaa out cs push cmp pop add push lret mov add in push cmp push mov sahf adc sbb dec dec lock shrl rorb inc lods xchg push dec fdivrs sub and adc and repz jmp data16 orl pusha (bad) xor cmp push push lret in ret pushf adc push fmul cmp push or int3 cmp lret int xchg test add sbb mov popf push inc or add cld pop or lcall scas cmp xlat sbbb and sahf mov mov add and push sub or test cmp dec and xor cmp insb pop pop (bad) sbb mov in lea cwtl mov in ret sbb in pusha gs lea jmp mov and sub enter popf push xchg push int3 fwait mov adc int3 push jno mov or fild jnp in add int3 loopne mov sbb xor add (bad) mov add (bad) scas or cwtl add xor test sub xchg cmp fsubr sbb sbb cs rclb adc outsl mov mov cmp movsb inc xor mov sub xor inc (bad) and xor mov xor aas icebp stos loopne xor jecxz xor cwtl push call rclb icebp pop and pop or insb mov push fcoms push add mov cmc add jge xor lods mov pop add xorl adc fwait xchg add jae mov out stc add and std fdivl icebp orl xchg insb mov push mov sub mov cwtl icebp jp test jne and nop mov mov jle mov neg out rolb in add aas cltd dec push cmp push dec cld fcoml inc in movsl movsb or cmovp sub or push (bad) jo loope mov sahf add dec push (bad) jmp sub das leave or xchg xor insl inc sbb dec pushf adc xchg lods sub into xor and dec repz push fimul js lods or fs add sbbb insb sbbl jg mov sub sub nop out xor sub sahf inc add pop (bad) dec faddp and add xor adc sbb in push inc int3 notl push pop sbb add pop daa out adcb adc ret dec inc rcrb sub nop adc loopne arpl push (bad) mov sub cli pop push sub xchg sub dec dec in sarl outsl add arpl dec lds aad and push jg adc das fwait add pop pop cltd mov mov stc push ror mov pop movsb add adc test incl pop jne pop dec xor sbb xor add popa pop mov mov loopne aad push push xchg xchg mov cmp dec add in or ljmp add rcrb add test push insl mov in jne add cmpsl xor and andb xchg call pop test add popl sub dec pop or ret lea mov es lods push dec push or xor repnz packsswb fwait int mov (bad) pop sbb inc cmp aam int3 inc adc mov (bad) outsl test rorb loope mov lock push cli sti pop cmpl cwtd arpl xor jbe into inc adc push hlt adc loope inc mov xor adc (bad) jns ds cmp xor js and mov jae mov push or xor or mov cmp mov dec and adc sub hlt add or mov mov sub aam and add mov mov add cld repnz mov and loop sub fidiv clc or and mov or test adc adc xchg inc push xor pop inc sbb fisttpl sbbb lds pshufw mov sbb lock addr16 sbb mov je add jo pushf xchg stos cmp pop inc add sub adc setae testb jbe or adc sahf and pop adc lock daa aam sbb adc les shrl jge dec xor cmp mov push add rorb sbb adc sub subl mov push push cmp xchg cmp int or loope mov add cmp js push shrl sbb popf sub and cmp and xor push or sarb xchg adc dec add das add fwait lds mov mov cmp xor sbb cmp mov test andb scas sub loop xor sbb (bad) xor adc in jmp adc (bad) add add mov add mov push sub mov pop add enter pop aaa movsb bound std out sar mov add loope add push push sbb adc bound push outsb xor mov mov mov push add mov in xchg dec test add xchg loopne adc xor pop nop adc js arpl ss nop or mov dec push push adc je mov mov dec or cld pop jmp mov adc lock xchg das test sub in and fwait xor push jl xor cmpsl je push push inc pop pop scas cld in adc mov je fwait lret push sub pop dec pop cmpsb lods inc dec (bad) adc xchg inc push jne mov xor mov aas je adc xor je inc sbb cltd cwtl inc loop xchg or jno add mov push and xchg mov je xchg sti test xor call ljmp test adc xor je daa clc and in adcb rol popa push ja dec (bad) (bad) clc push arpl shlb test jno inc xchg pop adc push dec lods lret hlt andb xchg rolb dec popa adc or cltd mov jl inc mov push cmp push or xlat push add sub in add jmp addr16 lods add (bad) rorl mov aaa push mov popf or dec mov sarb fcoml mov inc and xchg cmp cmp push cmpxchg sub push gs sub or ret sti xor sub scas add cmc (bad) icebp cmp pusha push stos outsl hlt es and or fmuls ss popa add fisttpl jecxz cmpsl xor mov adc loop add scas mov xchg push add sbb leave ds mov jae mov xchg or pmaddwd fldt sbb inc add or push and loop add ret or ja push loope rclb ds mov sbb dec pop pop sub mov mov pop or push rcrb lods arpl pop arpl mov pop js xchg mov add add leave xchg push xchg jl popf sub mov in dec pop fwait mov subl or test adc loopne adc outsb push dec and pop adc xchg addr16 xor arpl std leave xchg push loope sub sub mulb fs jbe mov sub sub and add dec inc in dec and inc jecxz nop movsb jo imul inc or rcll js stos push aam sbb xchg gs mov dec hlt and jl xchg mov icebp adc test and and and xchg xor gs xor movsb fs mov or jae push inc pop popa int3 clc cmp adc insb add jb scas repz neg sbb cmp or (bad) or adc or scas push lods (bad) lock mov je xor pusha call stos mov pop xlat or repz dec jge cmp fistl xchg mov jne push (bad) fsubrs xor push rorl jns add push fwait popa (bad) or sub stc pushf insb ljmp dec cwtl (bad) dec notb xor jo mov dec pop and xor adc dec pop and popf je xor cs cwtl push movsl cmp mov mov mov std sbb or xlat adc cmp (bad) mov in sbb push jle nop jl ja shrb jecxz dec mov add repz sarb jae push sbb inc rorb jle arpl add push or lds dec jmp fdivl dec mov dec repz and dec dec cmpl add or push fsubrs sub sub in hlt mov push mov mov divb movsb adc or ret rclb inc rcl les js add cmpsl jo lds dec arpl fisub or or or in or pushf icebp (bad) dec dec sbb aas adc push rcll sub pop (bad) jmp (bad) mov pop testb es ds (bad) fsubrp xchg scas daa imul rorl nop rorb arpl ret mov sbb popa insb in fistl and pop pop mov hlt xor push fwait sub cmp add lret dec lds dec pop into cmp shrb push nop mov inc lds add sub xor mov mov add pop jnp xchg pusha xchg push jg adc sub mov xchg rcll adc lret imul sbb inc mov push fisubl test jo call push add cmp xchg push push add js or je jge sbb loopne movsl mov inc xor fadd dec les fsubrl push pop fwait leave add insb fsubl fadds jle mov out xor fs mov xchg in add sub pop inc movsb leave xchg or sub add and es inc push add mov stc push add lret fildl mov jo sbb dec gs adc or xchg movsl or insl cltd pusha or fsubs sahf fs mov xor int3 leave and sbbb push add cli cmpsl cmpsb cmp rol fnstenv test lods and pop cs insl adc enter and adc or mov cmp lret lahf mov popf in fsubr mov and shll xor insl cmp cmp call test jmp iret mov add sbb lea mov jbe pop scas loopne xor mov (bad) rcr cwtl or (bad) arpl mov push and dec jo xor push inc push and jb jo mov orb jns fildl lds stos leave or xchg leave pusha insb pushf in test data16 sub mov mov loopne or nop adc (bad) dec dec (bad) fs jo push repnz dec xor das lahf scas (bad) sti int3 int3 loopne dec push sub clc xor pusha cmp jbe and mov add pushf jnp ja inc cmpb mov mov and xor dec adc xor xor test nop adc and fs mov nop loope ret mov (bad) mov dec xor das xlat xchg push mov pop mov rep push pop mov arpl xor fbstp xchg add dec dec into mov lods or rcrl cltd or andb xor rcrl and dec jb or pusha shr scas push sbb lcall jl in and adc mov jecxz stos (bad) loop ror mov mov adc insb and cli (bad) jbe or xor out or inc dec loop push lar ja xchg push push inc or call pop icebp pop test cmp and fsubs xchg push mov mov pop aaa and dec xor xor or icebp sub (bad) inc (bad) or dec ds xchg mov pushf fisubl and fldl leave sub xor mov mov xchg mov shlb dec insb push push popf xchg push pusha dec and mov addr16 jl fmul test test and and xchg imul stos arpl cmp insl lret xor addl daa in rolb mov and call pop (bad) mov mov or testb les xchg jecxz cwtl lods cwtl mov sbb sbbl and add xchg xchg inc push es pop idivb movsl stos js jne iret lcall mov clc and and loopne int3 and xabort (bad) (bad) ss pushf pop add movl lods mov test sub push pop push mov daa int3 rcrb mov push fs imul mov js mov pop sbb mov fs lds stos jl js xor in ficompl adc enter and and aaa mov lock mov clc inc sbb mov jl dec ds mov xchg fsubl aam pop push mov rclb adc pop int xor jl push fmuls mov sbb mov dec sbb sbb or and popf mov imul xor lods add (bad) cmc jo sbb cmp movl lret lsl cmp mov dec inc cmp sub into cld or and iret xor xchg loopne push insb je rcrb addr16 test mov leave sbb dec pop jecxz loopne mov and fistpl and mov cmpsb push xor ror daa xor clc pop mov aam fs dec inc fcompl dec pushf rcr (bad) mov pushf mov repz mov mov out or enter mov or (bad) dec movsl faddl sub jg das pusha dec and out mov xchg and sbb dec pop mov scas rcrb sbb js loope and lret inc push add lock sub out cmp sub cmp test jns lock mov jne cmp mov add push pushf insb rclb mov inc movsl inc gs mov (bad) xchg and dec pop pop xor out and int3 test jo scas sbb sub lock add and mov mov aas pushf mov inc inc mov cmpsl test out aas xor sub mov add fidiv inc in shlb sub popf into jo add negl mov (bad) and cmpsb xor xor inc sub sbb sbb mov sub inc inc or add lock add ret fldl adc (bad) out or lock inc sti (bad) shrl or or cld inc cmc pop inc and in adc add in cmp dec jp shrl jne sub mov sarb fild add mov xlat adc insl dec addr16 popa xchg lret lock sbb mov dec or xchg icebp mov cmp fisttpll dec addr16 test push dec movsl add lock cmpsl fwait xor hlt dec push lea and inc cmp mov add add xor jbe repz or jno xchg jne pop and jb cmp (bad) pop cld fdivl pushf into je inc mov xor pop mov enter stc in stos es flds and cltd cld add icebp repz xor int lock (bad) fadd jmp imul mov adc xor xchg (bad) and adc rclb roll xchg dec sbb inc and xchg adc add incl (bad) xor arpl push fisttpl sub or mov fwait sub nopl loope ret mov xorb repz insb out (bad) xor js rcl xchg jl fiadd sub out pop pusha jns sbb pop inc add dec mov popa sbb (bad) add mov mov leave or test fucomi add mov jmp cmp adc loopne mov call push imul call mov pop fsubrl fild int rolb enter and and push jns dec adc lahf dec adc movl mov xor fldcw jg movsb rcrb push jno and mov imul lods test pushf mov cwtl push add fwait (bad) in push lods loope mov es ljmp pushf sub mov mov and dec adc loop clc xchg cmpsl test mov cmp insb sarl sub sbb add and or mov add les fs fsubs dec add xor sub (bad) pop jo out bound add in sub adc xchg das cmpl ss or mov test test mov add and faddl dec imul push js sbb push (bad) clc xchg loopne and shlb push cmp jmp add lea aaa sub shlb jnp push inc cmp cmc push and mov orl (bad) or fsubrl jo rcrb out scas jno daa add pop sbb (bad) push jno dec inc test or dec jg mov mov (bad) ja lret enter add cmp dec stc pop enter add out scas jo sbb or cmc add insl in inc inc loopne fstpt roll fcmove adc push mov jp add in or imul dec jg outsl or jp cmpsl xchg mov (bad) mov add in pop xor sub add lods outsl or xchg das xchg f2xm1 or jb sbb rolb out sarb in out pop pop shr popa cs lret in sub adc mov cmp sbb xchg xorb add push xor inc (bad) push mov cmc push lds sbb cld (bad) imul sub movsl test stc cmc xor fs cmpsl (bad) (bad) mov xor cltd das mov flds mov fcomps push and sub fcomip and inc cmp cmp ret mov ds cs loopne in hlt jae xor dec leave cmp mov cs xchg int adc xor or sarb movsl cmp sbb (bad) (bad) jmp cmc and repnz js out push call (bad) out push pop and sub sahf js lret add inc adc add movsl fldt in jae icebp ret pop mov jnp xor mov cmp fnsave mov inc cmpsb add stos dec call sub dec add sub xchg enter mov xor (bad) icebp lods or xchg rolb imul adc push and out dec add inc push jmp mov stos sub or pop pushf fdivp and dec push lock xchg cwtl xchg adc and icebp and pop sbb fwait xor out add inc imul and sub add repnz lods add repz sti (bad) mov and sub add mov jo mov adc jecxz test push push pop add scas mov adc xlat inc pop test or sbb (bad) mov add cmp roll dec add sub inc add test add and faddl mov out xor pop dec clc cmp dec mov mov das stos sub xor inc (bad) aam cltd add (bad) push movb push mov cmpsb nop xchg adc add out fisubrl adc mov subb adc xor adc add sub fisubl adc pop cmc add sbb psrlq add pop push insb xor fs and rclb dec out or mov es lret add iret test mov adc in and adc xchg push call add fisub cwtl pop sbb daa add int test mov mov push lret add xor xor (bad) pusha lock adc jl lock enter add dec (bad) jo push ja push xchg xchg add (bad) insl and shlb clc bound sub sub mov jl mov cli test xor pop xor mov test add xchg mull vmovaps adc mov push mov fsubl pop xchg (bad) adc cmp push enter in dec popa popl pop adc push clc adc movb clc js sbb (bad) push xchg andb clc fiaddl or push push cmp dec pop in pop subl add inc pop add jb clc add mov push out lcall add cmp mov adc adc test jg and push xor mov test repnz sarb xor dec sbb insb and jns sti push mov cmp dec or lods icebp clc mov add inc push int3 stos (bad) icebp and sbb or enter divb aam jnp inc add lret popf pop scas pop xor adc push mov cmpsl rorl in icebp mulb dec jne push loopne clc push add mov js or xor dec icebp or stos test sbb inc std push or pusha inc dec nop xchg js pusha gs xchg pop jno aam cmp and enter mov pusha cmp push push test (bad) popa and out add ror xchg sub mov or pop mov or pop mov lea negl mov mov jl jl adc js or or sub adcl rorb dec jnp mov push scas sbb cli adc ljmp mov jmp inc jnp das mov fcmovnu xor int3 out or outsb lods je cld cmp cs pop push or fstl cli xchg out pop pop repnz or test subb adc imul aas bound push xor hlt test jne adc xor shlb xchg xchg and clc dec jae rorb xchg sbb mov xchg out cmp lods inc fsubrs add push sub js loop add idivl xor sahf insb rorl xchg jnp xor movsb pop and arpl lods adc gs xchg test or add insl je jmp sbb test lcall add push mov or adc mov xchg pop (bad) arpl fmull add or pop shr mull fdivs stos fcomi add xor test push inc and sbb xor enter mov (bad) dec jo mov mov bound mov ret fsubs test add add lcall xchg into xor outsl and rcrb jne inc clc xchg (bad) mov push nop xor popf lret std cld sbb in (bad) aaa pusha shlb jo (bad) mov jo sbb jnp stos inc lret push rcrb incl pusha or mov cwtl stos aam outsb imul lcall lret subb mov ljmp outsb lea int3 insb dec xor movsl mov mov adc cmp inc lock sbb test leave dec push sbb orl add xor cmpsl add lock or jnp or push popf into (bad) fnstenv pop test ss and or notl mov xor push pop shlb bound jge dec or pusha pop xchg popf jb adc rclb lahf dec js mov add pop aam sysret and mov jb add clc dec call cli rolb int3 jmp add aam dec jns adc test or xchg cs stos cmpb add dec xor cltd ret add jbe push sbb mov clc imul xor add xor add (bad) pop sahf mov fdivr mov adc pop ljmp je xchg push inc int3 xchg add cli (bad) dec cld push and mov mov dec pop bound xchg add mov push fs cwtl mov cli (bad) adc rorb fwait dec test sub cmp mov in mov cmp jnp or into in data16 jo add scas ljmp les pop cld cmp ret cli arpl or jp push pop rclb cld lock int fcmovnb cmpb pusha cmpsl mov or jl cli pop sub add sbb xchg push stos pop sbb push test jo and add iret lds jecxz mov dec sbb andb les cli mov fldpi scas (bad) stc xor or pop mov and xor inc insl popa pop test pop cmp cld incb inc addr16 add popa sbb rcrl (bad) xor insb dec test pop fs sbb pop xor mov test sbb push fcoml stos push mov les sub add (bad) pop jg fs pop jp fadds aas subl xchg jmp inc adc cmpsb add sub clc cld sub xorb arpl dec dec add dec mov add pop les sbb enter ror and xor (bad) faddl xchg push xchg jmp cmp inc leave or xor xchg test add jbe pop (bad) mov loop into cltd das mov xchg nop and xchg cmp movsb enter cld test js jp mov test in push xor add pop push cmp std ret add push pop inc and pushf xchg add (bad) (bad) lock mov sahf repnz lods dec and inc push cwtl (bad) movsb mov adc inc sub pusha loope push je add push jns rcrb and jecxz sbb bound and mov inc aam ljmp push add out xchg shlb mov pop jns cmp sbb movb push mov das or shll adc sub hlt xor inc add stos dec sbb bound nopl ret push pop cmpsb xor sbb push jbe cmovp rcrb mov inc sbb hlt inc mov push subb pop and push sbb jo cmp sarb mov icebp repz adc push mov dec push stos hlt lods sbb sub in add call pop es inc sbb or loope xchg dec sbb clc mov push mov arpl js pop adc jns add add push mov clc xor push add in sbb (bad) loopne add push jecxz sub mov clc mov stos and and xor xchg add mov cmp and or mov or (bad) cmp mov pop adc pop add pop adcl sub ds (bad) sub in push call xchg std add es inc and test adc sarb (bad) pusha lea lahf loope dec loopne dec add fistpll hlt enter pop aad data16 shlb aas (bad) into add enter cmpsb push add dec xlat ds cld repnz xor imul add add pop sbbl sbb into push clc sub leave and pop aam pop inc dec mov in js jno cli cmp jo inc mov repnz cmp pop adc mov lds std add dec cmp and addl jae out add xchg add jo rcll ja es mov or les cmp add push cmpsb aam jb jbe popa (bad) adc (bad) (bad) pop pop in and pop sti pushf sub imul pop addr16 cmovp (bad) xor repz add mov cwtl test adc add xor into xchg (bad) leave cmp hlt (bad) mov pop sub test or addl rcrb push pusha jl loop movsl repz xor sbb xchg add and (bad) nop js adc shl mov inc inc lock popa dec scas dec test (bad) rolb and inc jo push fcoms movsb xlat inc adc mov and or push mov rolb pop fcmovnb lods loop adc push inc pusha cli pusha fs add xchg (bad) dec popf int3 pusha or sub shll inc dec xchg push mov (bad) and cmp rolb add or (bad) lock fist mov shr js movb subb enter add pop mov stos push jmp and scas inc pop push lods ret vaddps rorb mov loopne js adc mov jbe mov add dec enter add cmp sub es int3 pop pop cmp or xchg or cld cmpsb dec inc fnop lods xchg add adc xlat loope jo loopne lock or les pop test dec pop and incb les push mov (bad) pusha or lret push push and jno js and jmp mov mov subb xor lret call or sub and mov and mov add movsb shrb or insb jno add cmp addb nop stos dec dec mov mov ja clc shr les cld fcoms mov mov add scas rcl popf dec sbb fisub nop jno and adc and dec inc adc adc nop sub fdivrp fadds sub dec mov lods nop sbb or lock idivl dec inc add jb pop arpl xchg js insb cwtl or cmp inc sub ja call (bad) outsl std sbb cld sbb or mov add jp mov arpl jle mov push lret ret loopne repz or cld (bad) mov mov dec ds arpl repnz js xchg pusha mov xor pusha cmp sbb xchg inc jl ret push loope pop xchg mov push loope orb adc and loopne fsubrs xchg push popf mov and les adc push (bad) xchg xor mov fild xchg or dec cmc adc pusha pop jmp lret test xchg xchg mov nop fadds cmp inc popa mov ds andl aas stos xor shl lods popf sub adc adc pushf cmp (bad) lcall sbb sahf dec add add mov push mov cmpsb imul ds and sbb add jg (bad) movsl add out (bad) or addl sahf mov jmp inc in inc popf add sub sub mov cmp call push leave mov btc bound mov dec sub sub aam add adc dec clc fmuls pop enter sbb (bad) icebp lock and ljmp imul test xor popf mov push test add xlat aam ffreep cmpb mov testl push leave js ja xorb jp test push adc push xchg cld sub cwtl lock rcll loopne and fsubs lret or xchg sbbl and xor mov cmp inc fstl adc gs adcb xchg enter hlt fst sub cltd fucomip sbb mov orl dec xchg dec xor bound loopne ret pop nop add (bad) xor jns mov mov jno sti cmp loopne mov test (bad) mov inc sbb hlt js add mov lock mov jecxz mov stos jecxz xor mov movl pop inc ret int3 dec cmpxchg orl pusha scas or test xchg adc hlt (bad) xor aas add dec mov addl pop mov mov int adc std or sub dec sbb rolb pop xor iret movsb push push into clc dec test jmp mov pop scas lret iret jg enter scas jmp adc mov mov sub push jle xchg nop icebp into dec inc fimull and js adc sub shrb andl dec orb mov (bad) and test pusha out adc add jo jle or (bad) mov ret sbbb adc in and mov dec mov aam push sbb addr16 stos push nop xor xor push or or call fimul imul test rclb cmp or pop jl push cmc cmp test pop rsm push jne add test aaa ret insb adc lea insl mov outsl sbb mov je pushf add fwait inc adc (bad) and test out (bad) push jge iret and jnp add inc and push mov test loopne sub ss push imul push or mov mov icebp sub pop data16 inc inc in jne insl adcl xchg ljmp dec enter xor cwtl pop cs (bad) fs js xchg shl and dec add add aam fdivrs or int3 push and std out enter sbb inc fs addb flds out jmp push adc mov ds add aaa cmp (bad) mov add xchg pusha dec jmp push push lock ror cmp je shlb (bad) sbb cwtl or fwait add mov cmp test mov inc pusha je and out jl jg mov mov (bad) xor nop xchg push push inc cmc call pushf and jecxz pusha pop rclb ss xor inc xchg les imul or nop fsubs pop rorb mov jo mov xchg ret sbb jl fs out jne sti inc jb out pusha and sbb je (bad) insl ja inc insb (bad) loopne xor cmp sub out or iret xchg sub mov icebp adc jl incl push faddp enter xor repnz sbb pop dec dec sbb loopne jl aam in push je pop adc inc call jmp data16 add or int repz (bad) loop add sbb fadds shl sub and sub daa scas jle les or inc xchg fs out xor lcall cmp xor cwtl xor data16 adc ror mov xchg popf leave sub xchg inc push jl add fldt jo pop pop and jns add push add push jae sub ret xchg dec (bad) out ret hlt dec bsf xchg or inc outsl movsb test fmuls fidiv and cmp int3 push cld cmp or dec call push mul lcall xchg dec inc or outsb sub jg loope (bad) xchg push add push add xchg (bad) xchg call xor xor aas push ljmp int nop addr16 xor push or add inc sahf sub xor sbb mov mov shrb sub cmpb push sub xor aaa adc and sarb cmp (bad) push ja rcrl mov push inc out aas fs dec mov movsb add inc mov xchg insb cli sub add adc jl movsb movsb cs in and or orl xlat fadd subl cmp sub dec rcrb xor jb orb push sbb mov daa pushl sti ds imul inc aad in xor mov in adcb in test test add xor push xchg pop or ljmp xchg loopne ficoml mov insb xchg jb loopne sbbl ret loop adc call jle,pn je cmp inc andb cmpsl rcrb cmc or stos jge jne mov push dec mov and mov sub (bad) push jge sub mov pusha jle jbe inc adc dec dec sbb sbb jge ljmp into (bad) mov cmp pusha addb mov xor lds test and rcrl sub or inc dec sbb dec add or add (bad) sbb add into push mov pusha sbb add add push or mov stos call push or test mov aaa or sbb jle lock jne imul lret xchg xchg mov mov das loopne and cwtl je inc pop cltd outsl int ds xor or add push nop adc rep cwtl cmp imul popf fdivl push loop push pop push je mov xchg roll loope lock mov loope test jo jns pusha mov push xchg add sti and add jle sub dec int3 pop adc jmp dec in cmp fcmovnu mov sti add mov decb testb sahf or push jae sbb loope je test mov adc add outsl movl call clc bound mov mov scas xor xor cmp divl mov mov pusha adc jp rolb add xlat and and sbb cmc idiv inc mov push cmpsb int3 outsl in mov cmpsl mov pop or test call leave adc mov sub cli sahf jl jl pusha adc sub adc and fnop (bad) jo mov pop add pop and inc xor inc outsl aad and cmp lods in ja shrb add test or out xchg test xor push dec repnz pop sub xchg inc sub in add je insl jns adc ret out or dec lret adc cmp jge aas in add sysexit insb inc shrl push push rol pop pop out lds pop ljmp mov and outsb mov push js add mov rcrb inc and inc sub clc add mov and leave add add loope mov adc aas mov jmp hlt and fstpt sbb or xchg add jge cwtl (bad) adc pushf sbb and sahf and cs sbb inc ja pop add inc push add sbbl aad pop jle xor shrl add fucomp adc cmp in mov push mov or das call sub mov dec pop xchg add ja daa scas mov inc mov (bad) or add xor add cmp and or (bad) add xor and (bad) jb (bad) jbe pusha pusha sub js pop popa lods jb int3 ret xchg mov sbb xchg and or mov cwtl push push pop xchg dec iret icebp jns andl loopne fadd ret jp add leave sub ja mov subb mov dec aaa add mov cmp sbb test cmp add cmp mov shlb unpcklps int dec jb add in test (bad) mov js sbb add xlat nop push and clc roll imul cs seto cltd xchg sbbb (bad) xlat fwait add mov outsb adc ljmp std pop mov push sub sub test pusha push repz lds mov push rclb ljmp and es or and add sub or sub xlat adc push clc add movsl (bad) int3 push inc loopne push ret (bad) mov or loop daa fsubl mov xchg dec cmp ja mov mov dec sbb and aad mov or and xor sbb xor int3 ficomp pop lcall or sbb inc jmp mov cwtl add movsb pop mov or adc pop into xor pusha dec cltd loop fcompl (bad) (bad) push movsb jb mov push push mov aas xor rorl pop xchg push jae adc lret adc add test adc cmp mov xchg or mov inc mov mov pusha icebp push lods adc jl inc fcoml ret dec xchg movsb inc addl shrl jo mov lea psadbw fisttpl dec sti pop inc pop dec dec js add cmpsb rclb or fild and rolb push mov push mov fsubrl and sub (bad) xor xor push fisttp enter sub cmp or js push cltd and mov mov stc dec xchg jns loopne xchg loop leave jl mov xchg cltd add ljmp and add jmp mov or xorb mov fadds adc sub push sbb mov push rcrl adc les int3 movsl and (bad) leave mov dec lahf xorl (bad) (bad) bound adc movsl push data16 dec lods mov leave xor xchg mov pop decl jl hlt subb add xor push add push cmp iret pop and xchg (bad) mov ljmp mov in pop sbbl fldt clc mov add mov or mov mov xor aad mov adc loop dec xor ret inc mov popf aaa push loop sub and pop fwait mov xchg (bad) rolb int3 stos mov loopne scas add scas aad inc adc push xbegin or add out mov adc aad push lods andl testb cmpsb fdiv leave sub mov sub xor ror outsb add cmp sbb xchg movsl cmp loope stc leave or xor or xchg xor dec inc xor sbb push xor xor adcb ficomp scas pmullw int push imull pop mov fcompl or push sar rol inc mov shrl lcall jl fwait loopne cmp test test sub das stos fadds sbb add cmp lret fisub push push inc ror push lods fwait daa inc push or sub movsb adc je push aas adc es dec and in or icebp orb loop sahf and imul cli dec clc pop popf cmp out sbb dec popa or sbb mov mov sub jns inc pushf stc sahf add mov cmp addl outsb dec mov jmp dec addr16 test frstor cmpsb loopne or into sub pop or cld out (bad) test push movsb (bad) scas push dec dec pusha jl test clc add or add mov or movsl scas sbb inc adc mov test add jb mov add iret xchg (bad) jp add les and push testb add repz fildll stos cmp add jmp ret jmp pop mov xor loopne mov mov adc jg inc fadds or cltd push jge jge add movsl mov clc enter sub add sub mov je popa jbe jle fldl ret (bad) xor sbb xchg call inc test mov mov enter push pop adc pop lcall adc cmc push and add lods jae orb push fstl mov push add in rcrl pop test and xor (bad) mov mov js dec lods mov or jns and loopne ljmp xchg jl,pn add call lods outsb mov xor mov cmpsb or rclb lahf imul addb and clc data16 inc and aas mov ficomp pop data16 xor sbb adc cmp cld push xchg clc inc mov cmp fcomp xor mov int mov pusha mov fldl add cmp mov iret aas into faddl aad dec out push cmpsb (bad) sbb jae mov outsb cmp add adc cmc hlt loopne pop cmp xor mov mov outsl add jle push sbb in int3 push pusha in test cld add dec and sbbb je iret out pop push cld add lock mov add fcoms sbb or sbbl js add ret sbb push mov ljmp mov outsb out mov jmp loop xor stos mov js dec sub aam cmp sub repnz mov jnp adc movsb sub jp ret jae adc cmp or dec (bad) fdivl rorl dec xchg sbb sub push jp rclb sbb cwtl and inc jae mov repnz orb loopne and push loopne incb push dec (bad) data16 mov pusha add out mov mov std lock (bad) push das jg add movsb adc aad pop incb icebp jge cmp test inc cld jl adc or jne sub insl dec ja add mov test out enter pop test repnz rorb (bad) mov rorl mov fistpll mov push hlt mov dec pop rolb and mov dec xor cmp jns dec orb adc call mov add lea inc jno lahf shlb call push add mov adc add jl out imul or arpl cmpsb loopne add jle enter test dec lahf jno cmp or cwtl nop mov sbb movsl in (bad) jae lock and or dec js add imul (bad) lret pop add pop ss icebp and outsb pushf push enter dec (bad) dec js test mov adc call out int mov or mov fdivs xor push in mov add adc rorb xchg jmp scas xchg cmp popa jg dec cmpsb pusha mov int fild mov add je inc popf jbe call insl adc decl sbbb add and cmp hlt sbb cs rolb ja jle (bad) push aad cmp lock inc stos mov test sub mov jns stos jbe dec mov xchg push and xchg lea sbb in push movsl mov incb pop dec xor in sahf aad and cwtl mov daa xchg pop stc push cmp (bad) jbe sub test xchg jl push xchg dec lret mov or sub (bad) ds jecxz cltd movsl or pushf add pop lods gs cmp adc sub mov xchg inc cwtl and imul add (bad) jne inc in aam jbe push das addl inc sti inc adc movsb cwtl adc dec sarb adcb sbb xchg and dec sbb fdivp test or push mov jecxz mov adc ljmp je cmp inc fwait mov mov xchg dec sub and insb add fnstsw sub mov or rclb xchg int and mov add gs mov mov and nop imul roll add jecxz in clc loope fs ss loop add stc (bad) insb push adc dec xchg call insb pop out (bad) test xchg mov sub outsb leave adc and (bad) mov bound clc (bad) ljmp mov xchg in notb nop sub xlat inc lcall inc test or add fwait cmc cmpsb (bad) fldcw push cld jg (bad) (bad) xor aam sbb inc xadd mov or add ds sti xchg repnz sub loop cmp cmp push sbb mov push sbb pop je sbb xchg lret loopne pop or xor xchg or mov lods out xor adc rcr mov cmpsb sbbl adc jg jns add enter pop mov jb dec out (bad) loopne ret inc loopne mov loopne mov stos hlt fmul push push (bad) idivb sub cld dec int3 dec or lods dec push (bad) in jb xchg inc les addr16 and add sbb push (bad) (bad) lock mov dec test dec mov adc int3 scas and xchg lock lods gs nop xor push loopne (bad) sbb hlt adcb push adc call inc sahf jns fistp subb dec sub push push lock mov mov xchg mov ret sub popa jae xchg adc cli arpl int xor xchg xchg jbe sub push rclb lea add imul push addb pop scas loopne cmp dec sbb add or or out scas add leave mov sbb into cmpsl inc push incl cmp js add test sahf imul (bad) xchg mov pop insl les dec inc aam push addr16 imul test in fisttp roll and xchg jmp movaps lock inc add pop arpl mov lock mov jmp enter mov imul out mov xor dec mov add test dec mov into push add ljmp notl add mov ret popl loop pop xchg in mov fdiv sbb dec xor ret add and xchg mov test addr16 lds xor jle and movhps add cmc inc push xor cmp mov in inc jmp add mov and jno repnz shlb mov sub mov xor dec movsb inc cmp lods fcmovu test mov mov (bad) sub dec insb add test cli iret add xchg push cmp lock int je cli or push dec rclb jg push loope xchg push cmpsl inc jo cmp pop pop aad mov pop loope xchg rol mov add jge jmp outsl adc add pop inc lds lods xor fwait movsb ret add daa rcl dec sahf inc in mov cmpsb mov decb jl jg not lods lret pop xchg aaa rcll push add pusha gs add push aaa xchg add test lods add arpl add and or cmp loopne add test and jnp add jno or inc jl cmc xchg loop add popl jo push xor or adc add cmp add movsb xchg loop lods dec cmp aad cmc out jae fwait xchg add sbb pop lods or pop or lcall hlt cmp out (bad) mov cmp fistpll dec bound aad mov movsb pushf add scas out fnsave mov sbb push add (bad) mov add cmp add aas ret mov clc add inc or sub push xchg out and push shll mov mov popa jae cld out popa jmp in subl push pop cmp jo sbb lods lock loope andl bound jno lea mov or pop (bad) stc std xchg mov push push pusha inc or out or mov cs lock jo jmp aam add (bad) or push add cmp movsb addb sub lcall adc ret adc sti out add fdivrl icebp add jp in jne fldenv or fwait popf fstpl popa pusha push in mov (bad) aam test inc sarb inc sbbb xchg out mov cltd imul xor scas mov setb lahf mov xlat insl cmp repz sub mov add fisub pop insl mov std stos aam sub push loopne add add cwtl das stos (bad) movl orl hlt (bad) pop ret (bad) xor fidiv inc test cwtl mov push fcomps call sbb (bad) sub or test cmp adc add mov aaa push add or xchg xchg bound mov rcrb addb pop inc ret dec mov pushf test outsb add (bad) dec fdivrs jecxz add jb gs adc jecxz jo push or xchg mov adc mov loopne add int mov xor cwtl daa mov pusha jo cmp ja cltd (bad) adc inc movsl xor adc scas movsb insb (bad) mov add sbb pop add adc xlat cwtl imul mov mov outsl arpl lret cmp mov stos mov xorl subl popf xor mov cmp in repnz add and push or push mov outsb divb test dec or arpl push clc xor adc push outsl or mov push rclb aad cmc xor jbe and mov mov adc loop adc pusha jnp jl add dec or mov adc dec sub test add and (bad) out vpaddd pop inc lds clc jle sti dec test das fwait xor mov pop or add push out mov test push xchg fwait mov test bound xlat mov cmp or nop aam jb lds adc or jmp pop (bad) fs loop dec mov xor xchg out xor pop aaa lods data16 cmpsl mov popa sbb xor test mov dec cmp pop push rorb aas add xchg mov pop cwtl adc hlt cltd push sub dec push ds and inc push cmp jl or pop stos std mov nop xor insl popa cmp ds mov shr call jecxz cmp rcrb mov or mov movsb or cmp xor aas sbb add adc sub les pop inc push inc push adc or pusha lds test inc arpl in xchg stos jae push jg loopne xor leave enter xor add gs andl lock xchg loopne fdiv and mov jnp or sub xor (bad) xchg divb mov imul jle jae cmp and and fs (bad) lock inc pop add lcall cmpb add test mov xor aad lcall cmp and xor enter cmc orb js inc jecxz ret and add mov cmp mov lcall inc jbe mov mov ret jl add mov pop jo adc pop mov fbstp add (bad) xchg out outsl cmp cmp xor xchg add mov add jge dec jle and enter inc cmp es add iret popa fdivrs and lds pusha cmp es jl lea js inc dec ds out in lcall jnp std nop and adc and test je mov jmp orl sub enter adc and sub xchg bound in popa fdivrs fs test dec ret add and pop mov pushf mov add cmc shr daa dec jge xor add leave (bad) pop movsl (bad) fdivl xchg add fildll cmp bound in nop xor stos out iret bound out or popl xor aaa das loopne pop hlt repz mov test mov hlt imul addb or inc sahf aad fildl jl mov sbb push inc mov cmp jle mov (bad) mulb (bad) xor adcl or cmp and imul cld sbb and or out jns xchg iret or loop je cmp add mov nop sbb rorb (bad) adc xorb push scas dec dec cmp out xor js mov sbb leave dec fsubr mov adc sbb xchg psllw (bad) aam or jl add mov adc add adc or jo add or aam pop add add or decb es adc mov or orb jne cmpsl mov clc cmp push cmp jnp inc sbb (bad) stc nop and repz and sbb xchg imul sub js mov lock add cld out add leave add int3 aas das pop and xchg mov fnop and hlt push mov pop push ja int shl pop sbb or jl mov stc rclb jl jl pop lock cwtl adc jnp xor push cltd dec push lods lcall rcl jl,pn add mov neg sub pop mov scas add (bad) jo movsb xlat push dec and or std repnz sbb sbb test mov cli lds push cltd dec rorl fdiv push and add popf mov pop add rcr mov cwtl in sbb call push (bad) xor sbb and adc jl dec or test clc lock mov imul (bad) add cli arpl mov dec push dec lock xor lret mov sbb dec jmp lret push cmpsl push adc and (bad) sbb xchg jnp jle and cli inc sbb (bad) pusha sbb js xchg jbe xor fisttpll popf add movsb movsl movsb movsb adc mov lods sbb out mov or in cwtl cmp push sub xchg dec sub (bad) add fwait xor nop fadds mov enter sbb into roll nop fwait out push mov or or inc test adc inc fwait repnz dec js push outsb or ljmp fcmovne or fisub lock pop mov mov leave aad loope popf (bad) pusha gs sahf cmp mov jl push adc inc pop and lock or stos sub or inc psubusw cwtl push inc fisubr mov mov dec jb and mov xor sahf ret hlt push call cmp mov inc lds into xor outsb orl pusha hlt sub push in add jle dec fnsave lea orb fcmovnu add jg cmp shl pop cmpl sub popf outsb test xchg sbb inc or inc cmpsb les iret and add daa popa adc add pop push dec pop pushf lds les popf mov jle call push cmp cs cmp xchg in call popa insb jl push enter nop xor (bad) ss add push pop mov add test (bad) lock fdivrl sub and test mov adc mov nop icebp xchg xchg add loop jmp push je jmp add mov test xor pop daa jg cld stos inc test and rorb mov or rclb jo das mov dec inc cmpl cmp lock adc out ficomp mov adc cmp cmp mov loopne sub or inc adc adc mov movsb adc outsb in and cs mov js sbb stc add int add add jnp adc icebp repnz mov aad nop dec aas mov add (bad) (bad) mov rorb gs cmc inc adc mov add mov enter mov aas icebp outsb cmp xchg push or mov inc xlat mov daa mov pop fsubs sbb lods or in pop (bad) sub mov fldcw lret cmpsl lock and push or movsb mov int3 push jo mov cmp push inc out out inc sbb aad outsb aam add dec cmp add (bad) (bad) stos mov (bad) mov popa sub and mov movsb popa je mov add inc push mov add (bad) cld add mov xchg imul adc adc and hlt inc inc adc les jno add adc or adc push dec xor mulb dec xor and push pop sub xor nop sbb xchg jmp movsb xchg rcrl sbb xor adc or inc std mov cltd and adc sti and dec cld xchg xchg adc test xchg andl (bad) mov mov and sbb lds xor (bad) pop and sbb lods popa xchg xor xor mov cmpl bswap mov inc shll shll dec sbb icebp pusha jbe add mov popf sbb xor inc movsb fs inc adc adc push test mov inc cld adc dec adc mov inc in mov pop imul push xchg or leave adc popa cs lea cmp adc or add gs and adc inc ror push adc adc xchg ret adc pop push jmp repnz add leave cwtl jnp adc lret fisub cmpsl inc ret cltd lea adc (bad) cmp sbb nop jg sbb mov push imul lret cmp ret mov inc nop push aas adc mov mov xchg sti xchg mov lock clc xchg pop ret (bad) add jl and and dec sbb sbb in out mov dec cmp sahf in mov fwait push adc cltd fstps pop adc ret dec ret push sbb add enter add out repz fdivs gs push les jl repz aas in aaa jg cmpsl das addb js adc push adc mov add shrl imul and (bad) sbb xchg rolb push xor cmp xchg mov popl xchg xor lretw cmp push test adc cmpsl inc mov or sub lds lret push xchg push les mov sbb loope sbb mov xor addb xor cs clc or xor jg mov test cmp mov (bad) mov push xor clc cli scas pusha inc and mov outsl xor shll push aas sub repz or inc ret or insb xchg adc inc leave in cmp xchg pop cwtl ret push dec cmp and roll ret fs xchg dec xor nop mov (bad) lret nopl jo inc xor sbb push and test inc test ds add rcll fisttpll add (bad) mov add nop add lock sub inc lock imul notb or (bad) movsb mov or faddl repz xchg inc fadds xchg fsubl mov push sub jne out lahf cmp mov push movsb std inc stos add mov adc int3 mov mov jle rol sti ds cld sbb xchg push scas (bad) rclb jl stos add pop push scas jo rol push divl push ret or stc mov stos hlt nop sub int3 or inc (bad) jmp int jge and mov xor xor lret and enter and or loopne jge add loope call in (bad) mov mov lahf sub add push cltd icebp and bound imul cwtl cwtl sbb add je xchg ljmp xchg push js add add push nop and je mov test add cld xor jns add (bad) hlt sbb push inc pop mov add stos push xchg xchg push mov adc cli test mov (bad) or or nop push cmp in rorb hlt jbe (bad) hlt jp mov sbbb dec jno mov nop xor add jbe sub sbb xchg mov (bad) test cwtl enter add cmpsb adc bswap mov loope fs imul popf pop dec or mov jo push (bad) ret fldenv stc and test dec mov mov inc xor out ret push add lock mov add lods dec push out mov jbe add clc add sbb sub push push xchg mov inc shrb add aaa into adc mov dec adc adcb addr16 icebp scas push xchg pop sub div xchg add mov cli sbb dec xchg je dec out dec hlt push les int xor ret es js test mov fs xchg aam daa dec mov cltd movsb aas fwait pushf add jnp (bad) in or stos add roll mov pop das lods ds mov sbb xchg xchg add loope,pt cli jne,pn les push leave sbb pop jecxz sub inc data16 add rcr push cmp roll xchg (bad) (bad) sbb adc mov mov test (bad) lret jg add jl repz inc stc sub mov adc test push insb pop imul ljmp mov xor cmp xor sbb add cmp mov icebp xchg ret mov jbe sbb cli dec pop nop xor dec mov xorb loopne pushf adc sti jnp int3 fist pop mov add ret cmp es pop pushf inc push loop pop cmp push sti js adc or fmull nop sub daa add pop test push inc sbb pop inc adc cmpsl or lret or cld mov or dec cltd xor inc sbb adc cli xor pop leave loopne dec push mov xchg pop mov clc hlt jge cld int inc call and pop sub out (bad) jmp ret inc clc movsb mov pusha add cmpsl sub jbe or (bad) xchg mov sbb dec jae or push mov xchg push mov ja jp mov lcall mov jo test into pop jbe cmp mov stc xor leave mov adc mov out notb xchg in imul mov sbb enter or inc movsl in ret sbbb test insl pushf or add cmpsb mov xchg mov clc sbb add out push ret movb sbb in in adc add fcomps sbb std ja mov mov or mov jo imul test hlt loope (bad) js aad xchg loopne in add mov add imul xchg inc enter lea rcrl test notl mov adc xchg mov dec repz ret push test lahf incb sbb leave aas testl hlt es and (bad) iret push add jmp mov xchg enter fcoms sbb adc int movsb add imul dec loopne xchg add lds cltd test test cld xor or lret bnd or jbe rcrb js mov repz mov stos pop push mov lds inc inc stc fisubl pop lret pop pop loop pop add xchg mov loopne adc pop or cmp hlt dec dec inc lods pusha in enter adc subb loop movsb push pop adc mov or insl jbe adc test push push clc mov add dec (bad) nop ljmp xlat pop mov add mov push add jne loope (bad) mov or sbb rcrb ror hlt mov jge add test or pop pop ret add adc shll xlat (bad) or mov xor mov jne test pop mull fs adc (bad) cmc xor lock push inc and out adc popa repnz jle sbb test dec fild add into out jns sub mov adc test ficomp push stos add mov add or packsswb adc les jne inc (bad) jmp mov sub pop pop sub sbb sub cmp xor outsl xchg in xchg cmp adc jmp aad inc sbb or cltd int3 je pushf rclb mov xchg adc sbb pop adc lahf dec mov out xor add jl xchg test adc add dec (bad) pusha hlt nop push xchg icebp add and fucomi call int3 push cmp and jl popa jae call cwtl push test pusha push insl pop jecxz out add push jl adc sbb sub add pop cwtl and shll cmc pop lock or hlt xor insl std dec movq or push cltd enter inc pusha and jbe mov pusha imul jmp add out addr16 mov cwtl ret sub es xchg sbb in dec loope in outsl (bad) in fdivrs fcoml or (bad) mov add test push mov mov inc xor inc fdivs xchg rcl add fstl mov nop inc adc and mov add lret sub test cs and add mov scas outsl rclb jnp fwait add fidivrl out mov xor mov imul je ret rolb push (bad) jo sahf add push jo push ret les dec pop ret or ficom lock cmp mov xchg add movsb xor sub stos hlt add inc mov mov and dec sub enter push xor rolb shlb dec test in loopne stos pop or add iret cld mov jne jns mov cwtl pop test add sbb adc xor add into push ljmp dec jl adc add and lock adc (bad) cltd (bad) sbb add lock mov sub aaa inc mov cmp mov fsts bound sub ljmp adcb cmp data16 adc or or adc push dec cmc xor jns xchg shrl mov inc jmp stc add and lock loopne ret jecxz pop and add loope mov scas lods lea mov fstl inc std mov inc dec lcall push xor nop sub mov jo and movsb push mov xchg cmp add sbbl cmpl stos out roll jl add add mov (bad) jnp clc cwtl mov inc sti mov int3 test push imul out dec loopne cmp push xor mov sti cmp push movsb test xchg sbb pop xor mov push xchg lret test mov xchg jo (bad) out add sbb sahf sub mov adc lahf xor pop push xor pop jl pop add add out sar inc sbb xor adc jmp nop js and int3 or movsb inc scas xor push push mov iret roll hlt popa jae std inc loopne sub sbb adc nop les fwait mov mov add add push addb test rorb and mov add xchg int add ror and (bad) cs mov pop add cmpsl push mov clc stc sahf xchg ja dec add pop add cmp pop sub xor inc dec movsb and lea nop dec jo hlt lock xchg or jmp cltd mov test lahf imul andb add mov in adc or jo mov out dec sub stos fcoml dec aam jl push adc stc mov inc sbb rorl jns pop lock rcrl andb cld or out xor add mov int3 adc jl mov inc xor xor add loope andb mov mov or rorb fs cmpsl xor imul and inc cwtl add add (bad) add rcll mov and lret mov and sub cmp fnstcw add dec insb jmp popf std xor ja xchg das pop dec xchg mov cld incl (bad) xor xchg push dec popa xor xadd mov xchg lods adc and cmp lock jmp mov lds test add add adc and sbb sbb popa push inc jecxz jl xor rcl pop es call push sbb imul add pop or mov negl bound inc mov xlat in fcomps popa outsb push add add xor sub mov aaa pop and test (bad) sbb and stos cld orl sub popf mov mov test pop jecxz and rcrl daa lret cmp mov jne shlb adc jbe jns and in shrb pop pop hlt iret adc and lods jg push push jns ss mov gs xor and scas ret gs add test pop pop enter add pop cmp aam jp mov in ret cmp cwtl push pop cmp add repnz mov in add mov add jge mov mull add gs imul (bad) mov popf dec inc (bad) xor cld test sub mov loopne std and or aad mov bound xor sti inc sub mov je jg or out std scas stc pop cmc and add faddl inc test xor pop lods mov dec pop xor inc add or pop push add es aaa and adc add sbb inc inc nop pusha rcrb adc movsl les inc sub fcomp fwait adc or dec es addl clc imul mov mov and int3 rcrl push arpl sahf ss push push pop jge lret mov sbb ja or mov and add ss add scas mov iret adc popa bnd cli pop pusha sti xor stos mov xchg xchg jg es and xchg mull enter stos mov dec add cmpb cs add mov jo imul mov es jo push pop repnz inc sub push push aam addl adc popf sub sub sarb sbb das inc test push push lock add cs pop in xorb rcll adc sub cmp xor pop cmpsl loope xchg lahf dec jb and mov rcr dec jae pop adc adc inc xor lret mov pop jbe lods popa lock testb and mov pop cmp mov jp stos sbb roll pushf sub or inc std add arpl das mov jmp in mov outsl adc push loopne push and call push cmp sub mov pop test and sub pop mov xor les or std sbb cmp cltd add ret loopne out pop cwtl pusha add mov mov cmp ss push test push lcall aam add dec dec jns fmull mov push (bad) xchg inc add jmp xchg lea jle or ja in pop cmp out sarb sbbb aad pushf dec hlt push rolb int3 xor add xor lods loop dec ffreep push mov cmp dec nop je push loop jl add std in sbb nop insb pop lods inc ljmp xchg push and push fstpl popa and inc sub stos sti cmp sub push fs cmp mov add cs and inc cmp gs mov or repz nop hlt sub inc dec (bad) icebp dec ss cmp cmp out xor (bad) loopne notl xchg pusha enter cmp xchg movsb cmpb inc mov add or sahf call mov stos cwtl pushf push sub pop mov enter mov rorl insb stos or std push adc pop (bad) add pop enter add fdivrl cmp pop jmp mov int3 add nop js insb clc loop std dec push dec cs pop xor adc sarb scas rclb das mov xchg shlb faddl bound pop in fdivrl or cmp js std add cmpsl enter inc roll loopne cmpsb mov gs lret or and add stos sbbb pop in test sbb jno pop xor cmp pushf xchg xorl std shrb test sub xchg dec enter adc lret add inc pusha mov xchg invd pop add add cld add lds scas and pop ss push xor adcb (bad) pusha sahf jl movsb pushf xchg ret inc pop cmpsl popl pop push out lods cltd sub orl stos dec mov cs cmp pop mov (bad) cmp xor pop cwtl push fdivl sbb push cmp pop adc (bad) div ret cmpsl pop cmp adc pop xchg add aas cmpsb xlat add popl inc jmp or or mov inc stos mov fistp out sbb hlt int adc cmp imul inc js push loope or shrb sahf mov cltd fs push imul mov or push xor movsb add sbb and cltd cmp scas in inc inc loop pop mov or dec add scas gs add ljmp xchg add fisubr adc pop call sbb push test jl enter or add add cs cmp push fbstp (bad) jo xchg cwtl aam xor push push subb int xor mov js push add or cld (bad) cmp movsb pop sbb sbb lahf imul xchg test std xor mov add jae ss mov or xor or cmp lea pushf pop mov xor pop inc pop sub daa pop mov mov dec movsb loopne roll sub xor cwtl push (bad) movsb xchg push add pop hlt dec jl rclb enter push fisubrl pop mov add mov sti rcrb fstl (bad) scas sub xchg add or in ds add test inc or add mov push adc sahf fdivl inc lret xor pop frstor (bad) add and adc and cmp jbe lahf xchg insl xor scas sbb orl sbb es mov or (bad) add lahf jmp mov xchg sbb cmp mov aad add push xchg pusha cmpsl pop xchg or sub and (bad) adc add stc adc ljmp add (bad) xor lahf ds loope adc scas sbb scas sarb faddl push int push push xchg frstor xor inc insl or fs pushf test (bad) mov xchg inc xor scas clc ret adc int std adc add xor rorb sub adc in cwtl adc js fstpl rorl test or cmpl lea cmp xor xchg subb inc dec jae jecxz xchg inc xor lock addr16 adc lock inc test mov cmp clc sub mov fiaddl js arpl inc mov fistpl pop jo or cltd sub or cs and xchg ds sbb scas das movsl (bad) add push js (bad) add stc (bad) adc loope xlat dec cmp jmp in popa (bad) adc jp lock cmp neg push ror pusha loope pusha xchg push mov imul jmp adc rolb mov add sub and and inc pop or test gs shl in dec fwait inc clc jg js stos push fsubrs (bad) sbb inc cmp dec (bad) mov out sub fwait pop loopne hlt fcomps cmc (bad) fadds jecxz aaa enter pushf dec pop jno and fmull or sub mov mov aam jno xor add xchg inc loopne push mov leave cmpb rclb bound mov jg loopne sarb add and in loope push loop add cmp jp cmp out mov jb dec into sbb push pusha jns sbb pop rolb add xchg push insl mov in mov xor xor fwait into clc test mov iret rcr mov inc loope stos hlt jl js loopne or mov (bad) mov lcall xchg ror cmp mov lods mov xor push movsb in pusha (bad) (bad) repnz or jl jge nop dec sti and add fisubl add in in imul push loopne adc pop in loope jmp adc dec lock lods jge add movsl cs or ljmp fs cmp andb sti push sbb add mov xor das add cmp mov dec add or jecxz sti push cwtl (bad) nop xor push add add loopne pop sti add movsb mov jne add (bad) (bad) sbb jl mov adc andb pop les dec cwtl fdivrl pushf outsl xchg test shrb int add stos pushl add inc (bad) inc lahf sub sbb out or lods es out (bad) jno nop xor std xor enter arpl js add jl xor sub inc sbb cmp mov out add mov mov subb enter daa sbb xchg pop loopne aaa test add (bad) push repz and mov lods jg mov out loope mov imul pop sbb in decb ds sbbb push (bad) mov aaa adc sbbl mov mov add sub cmp xor cld stos enter sbb ss (bad) xchg or movsb dec fildl cmp mov leave pop jne test addr16 push xor cmp orb (bad) stos lcall fcmovbe mov (bad) add xchg cmp push cld mov test dec add push call push lcall xlat roll and nop int3 xor add fisttp leave bound or fcoml mov xor pusha loopne,pn adc and mov jecxz test (bad) cmp jmp enter fdivl add xchg sbb adc cwtl jb jge add jae loopne setae in xorb xchg cmp mov fwait mov inc or fcom mov pop fisubl loop dec mov dec or imul pop int3 (bad) nop mov aas cmp add sbb sbb sbb fsubs or adcl fucomp add (bad) dec mov lods inc in xchg push xor push (bad) and nop add shlb nop lods add ljmp push aad and cmp sbb call sbb std and es scas jle add xchg xchg mov cmp pop outsb int lahf push inc xor adc lcall mov test add xor mov adc or inc or cmp pop lret xorl cmp adc ja jmp ficomp push xor xor xor pop cwtl orb add cmpsb nop xor add pop imulb fdivl aaa mov mov pushf mov rol push mov shlb aam movsb in adcl adc and dec rorl inc xor sub dec xor outsb adc subl outsl loopne cwtl push jl jp mov jge adcb mov add or das scas ret das ja movsb cs add es je fbstp mov dec mov xchg dec shlb mov adc lahf cmp (bad) lock lcall mov push test scas xchg mov dec fistpll add mov shrb mov push dec into cld xor and xor add jmp aam xlat jl dec sbb dec pop push test adc or int3 insb je lock pop sub pop and sub xor add push addr16 sub pop add int3 xor es or or imul es xor adc rol fsubl mov dec push in xchg add fdivs mov inc mov test xchg gs or dec std adc dec mov push mov out xchg sbb sbb push mov ds xchg dec cmp pop int mov ror sbbb es sti lock sub lea call push aam mov dec mov and addr16 inc lret out fneni(8087 (bad) mov lods sbb mov es rcll icebp icebp mov mov add or out test or pushf and sub loopne cmp or enter cs adc xorl leave jo jle aad add sub add insl inc sbb sahf sbb shrb loopne cs push pop mov jle pop sbb rcrl mov rolb mov clc enter fs or xchg in cltd lods jae out int3 adc and mov sbb les xchg int3 push inc pushf sbb in out add lods dec mov sbbl xlat dec or inc sbb pop mov iret add dec xorb xchg inc inc add test xor lods sub push jecxz inc jo loopne and dec repnz sbb pushf add int lds jecxz add addb push cmpsb add push in movsb incl in out rorl hlt fs fwait xor adc lods gs cmp adc sbb add clc fist lods push mov out pushf pusha inc test xor lds add pushf nop jbe call add xor aaa add scas aad mov xor cli add movsl fldpi inc mov inc cmp or and mov or pop adc lock mov mov jne mov sbb out dec aam xor int inc in mov add fstpl sti mov adc andl or jmp int3 popa fcoms xor fsubr mov sub test mov aad sub aam pop inc pop inc sbb inc or (bad) into lods insl mov add ljmp inc push insl xchg cmp jns cld shll inc pop repnz gs lods cmp daa xchg lods sti aaa in ja cwtl pop sub aas xor lret aam cmp inc mov inc push subb pop pop sub sbb xchg ljmp dec pop mov adc or lea jno and in cs sub sbb inc and in fs inc cs mov cmp mov mov pusha push push call jb jbe mov inc or xlat iret dec scas or lcall stos and sub testb mov addr16 xchg (bad) jnp mov mov call iret adc add fdivs adc xchg mov pusha aad aas and ds mov xchg in add cmpsl std mov dec fsubs lea adc adc roll inc push rcll add pusha rcr sub cmp testb pop sub call sub (bad) pop inc jb push jecxz adcb pop xchg mov inc mov inc add mov mov cmpsl pop lods in push sub call add cmp inc lcall jmp hlt inc sar ret adc xchg cli lds sub and aas mov loopne fwait or testl nop mov and xchg fisttpll fsubrl dec or dec mov aas nop mov aad mov sbbb nop lods cmpsl fcmovnbe jb or pop mov mov pop xchg sahf xor mov sub jne incl pop (bad) add mov inc nop inc lods lret das nop cmp mov pop sbb xor push shrl cmp mov iret jg data16 lret mov test aam add xchg enter clc ja mov xchg rclb sub (bad) mov mov bound ret mov sbb clc aaa pusha cltd lock dec decl fnstcw adc or add enter ret ds ret cmp pop mov shlb int3 cmp xor aam or push cmp int xchg (bad) repnz clc test xchg iret lret add push (bad) xor ss or dec mov adc aad cld adc pop sub xchg decb and fcomps add jg mov cmp adc test (bad) iret xor int3 xchg xor or sub jmp lret mov loopne sub outsb mov lock sub ja rcll push dec pop xor mov add adc sub cmc cld push test popa pusha (bad) in or mov mov cmp jne aas mov pusha dec das inc dec pop mov and ss stc js jmp pusha push movsb mov mov and xor int dec or mov pop pop rorb mov add add test push insb mov mov dec sbb or inc mov loopne in dec fsts rcll outsl out xchg mov inc or adc adc loop ljmp enter bound push add and dec lods (bad) adc insb xor add mov outsb jne add mov push or das dec jle add mov mov inc pop (bad) mov enter push int3 or push test xchg jnp rorb xchg adc sti inc ret jg (bad) mov adc mov test sub mov fs mov or pushf mov lret pusha int3 add mov je mov adc in push ret dec xor in add insb data16 lods xchg mov outsb in xchg push mov sbb inc rolb pop mov ja lock popa sbb lods subb sub and add enter xchg lds mov pop xor rorb sub xor movsb shll and push cli mul repnz xchg mov sti inc pop and subb mov int jle mov add fs imul stos cwtl mov int3 or mov fstpt sub sbb repnz pop mov sbb push adc aas in stc int dec cmpsb dec sbbb or (bad) sti dec or icebp cwtl test nop aam mov adc jmp mov and adc and lcall je xor adc xchg add out addb sbb pop adc inc mov mov pop enter pusha repz adc pusha sub jo stc jbe dec fcompl or or nop cwtl ret dec mov or data16 out mov and dec xchg dec adc or outsb sub iret jns xor adc (bad) fnstsw repz cmpb pop push cmp loope bound push pop (bad) aad jo,pn cld add push jns sub stc mov cmp sub push push outsl movsb or icebp outsb nop insb sbb mov (bad) sub sub aam loop lret cmp cmp iret push je rcrb add add add xor loopne fs inc lea (bad) in sub push fistp nop xchg cmp dec jb push add pmulhuw mov lock add loopne (bad) adc add push cmpsb add mov rcll pop dec das clc icebp cmp out add scas jle sub (bad) xor int3 (bad) xchg mov cmp cmp lock or jns loop and mov adc adcl loopne test add rorl jb scas push dec pusha scas jno push xchg cmp aaa popa sti test sbb (bad) insb jno sti mov insb (bad) xor push hlt mov enter cmp adc fstl cmp sub dec cwtl mov push xchg sahf push xchg jl dec add xchg nop cs xchg imul ja jge add pop xor cmp outsb bswap xchg stos or or jo repnz add loopne cs sbb das push xor pop shlb mov inc lods bound add imul or movsl dec mov mov pop add notl mov in xor repz xchg or mov out dec sub sbb mov and jmp pop cmp mov hlt int3 outsl mov sahf sbb mov xchg jno orb inc push xor fsubl mov add (bad) mov std mov and cld stos loopne mov or add int3 and insb add inc pop enter aas cwtl lfs jl repnz jne adc add in mov fcoml push enter repz cmp and pop lock push and jne push pop lea fsubrs mov mov bnd pusha notb or adc add or sub adc mov cmp int3 ja add adc rdtsc mov cmp pop rclb aad adc cmp add shlb mov add or fwait mov sub pop loopne sbb popf in add or or (bad) or fild test popf imull fsts add cmp add scas mov push orb es call dec loope (bad) (bad) add nop pop in or popf push inc mov add lods lret mov lods cwtl sbb sub test xchg in repnz std cltd lea mov push add mov cmp iret xchg dec sbb (bad) and lods (bad) rorb je (bad) (bad) call add or ja or jo jg sub add sbb cvtps2pd xchg fwait add inc jb adc jl ret add (bad) jle adc in jl pop (bad) icebp loope into or mov inc aam mov or imulb lods fldl cmpb aad popf nop call mov cmpb cmpxchg push sbb test xor add popa xchg mov sub adcb mov (bad) jb xchg and out mov pop setno add adc loope outsb pop cmp add fisubrl jbe test (bad) rorl lret pushf cmpsl cmp dec ret add aam aam in or cmp mov pusha bswap aad inc std in adc add push leave and sbb pop inc in in mov pop add xor xchg dec pop sub (bad) iret lods lock dec xor sub mov popf test js dec sub jo test mov adc lods mov push cmp mov mov adc mov inc adc int punpcklbw cmp jo mov daa (bad) jae jp aaa (bad) sbb push xor imul idiv jns and popa add mov cmp mov aas mov bound das jle inc test orl mov cwtl nop jae mov add add inc mov add adc call cmp (bad) jno pop xchg jns mov ret cmp je push cmc loopne imul pop mov xor push push sub mov lods fabs in fmull cltd fimul jbe jg add cld and gs (bad) jecxz clc xor adc rol add nop test dec mov add in sbb (bad) cmp xor and push sub mov les aas or sub cmp sub push insl push pop mov nop or inc enter pop mov (bad) (bad) sti sbb lret call ret xor cs dec sbb mov sbb sub in mov push out sub movsl push sub test mov jbe test scas stos lods test cwtl enter in xor add fxsave cld imul add xorl jl sub movsb pushf mov and (bad) cmp pop mov and lods sub femms insl jp ds (bad) mov fwait rolb inc bound scas aad test in or push and push dec mov stos xor pop push lock and test sub lock lret pop (bad) xor fucom sub add mov or push sbb mov mov add aam inc pop and and jg fistpl nop fdivs ss xchg mov push aaa movb sbb mov sub or dec test jle inc sbb mov jno lods xchg inc mov mov and mov xchg fcompl bswap mov cmp shlb out lods sub dec jne fwait cmp fneni(8087 add addl test add in js mov add mov jnp cmpl jmp test mov cmp or (bad) aam pushf or fsubrs add xchg xchg adc adc push test cmpsb cmp cld dec lahf dec jg or xor dec adc mov test xor or and xor mov testl and fadds inc mov fdivrl pusha push add out pop and mov sbbl add xor leave cmp push add nop mov sbb adc cwtl lcall les mov dec data16 jecxz or cmp pop xchg adc xchg adc xchg inc and adc xlat ror or push aam out xor (bad) mov add aam adc adc int3 add mov or out push test rcrb push and rcrb lret je popa and dec jg cmp xchg insb or adc ret jo in push mov pop adc or sahf mov mov aam jg dec (bad) mov in xor test and xchg push mov mov (bad) mov fwait mov sbb les pop outsl sub loope fsubrs test push add xor add loopne cltd test and add into cmp sbb ljmp cld out dec (bad) add lods scas mov sbb outsb mov (bad) xor mov call xchg add xor jb add jno out rcr jns push or sbb inc add xchg lea adc pop mov sub mov and push jl jecxz pop dec jnp in scas pushf lods or fs mov pop xchg add cwtl xchg adc pop mov push scas pop repnz add insb lret pop in add popa pop imul loopne mov add xor jg pop inc jl outsl pop mov icebp loopne js jno lds (bad) cld jge add push add jns add movsl inc cs cmp xchg add xorl inc cmpb adc jno mov cwtl xor pop in mov sbb sbb xchg push sbb xor lods mulb jnp daa fiadd xor lcall subb ss add xchg fbstp jmp shll add pop outsl mov inc lods cld xor shlb mov push clc js jnp ret cmpsb das std aam adc (bad) mov nop dec call pusha inc lock das movsl in repnz cmp add mov pop and pop jns in movsb std push mov xor jnp call orl add cs mov sub js nop add or mov mov cwtl sub pop adc rorl mov lods xor mov push xor cld push jmp add pop pop mov inc pop andl push add test add addps sub cmp mov and inc or cld jecxz add orl mov loopne jp push mov (bad) dec mov dec sbb icebp jo adc int3 push mov mov jge sub add sub enter add mov lods adc enter jecxz adc sub inc rcr adc push cli out (bad) jno aas jp out and sub aad insl movsl sub jecxz pop pop sub inc nop je mov lahf nop loopne in cmp dec pop pop aad jecxz int3 jmp adc cwtl nop mov lods mov out add das in loop pop dec mov fs add jmp add shll sbb mov xchg mov fidiv sbb ljmp push add ret xchg push add add mov int3 jnp xor xor sub lcall add in mov push cwtl clc cmpsl sub clc in in and jp pusha gs sub sar mov rorb pop sbb cmp cmp mov pop xchg lods sub pusha adc roll std sbb movsb mov (bad) cmp jg add decb ret pop mov mov cld jge mov and and test and or adc (bad) mov jb lea mov sub jge insb jl lods imulb push adc cld test xchg cli push pop sbb mov nop dec xchg inc push inc les add dec adc push cmp xor enter dec test xchg sti mov add sbb (bad) add clc add loope xor cmp or (bad) mov pop mov push mov loop mov shlb shlb rorb mov pushf daa or xorb xchg push cmpsb mov adcb push push pop xor mov loopne ljmp (bad) loop jns sub (bad) xor loopne inc les inc jo scas lods inc gs add mov sarl cmp pusha movsb lods mov addr16 push pusha or cmp nop int3 add lahf mov test mov addl negl jg mov lock loopne push cld cmp add lods cltd in test adc xchg xchg test pop add insl fiadd ss std cmp xchg mov pop out arpl mov sti cmp and out scas add stos jo add push pusha jno call add lock ss addb and lret add aas adc jb cld add xor call cmp add sub ljmp test jge addr16 adc lock add push pop mov and xchg xor sbb je push jbe cli sbbb adc pop mov xchg add movsb pop data16 ss es xor pushl push push setge add xorl sbb les add cmp mov mov push push fildl pop inc push push andl insb add mov cli out clc jg aad cmp sbb pop mov clc and ret movsl add add or aad rorl pop fs jo sbb popa mov cmpb adc or jns sbb je push repnz test stc add addr16 inc shlb pop pop pop push cmpb ds stos mov jne mov lret addr16 shl sbb mov pushf pop js iret inc mov or shrb (bad) cld repnz mov jns inc dec fld lods mov ja cltd divl add insb and cwtl dec (bad) fidiv cli adc push (bad) or xor insb xchg dec push out mulb lock or pop adcl loop movsb or xor lahf or scas sahf adc (bad) les xchg test sub inc movsb adc test sbb or push inc dec adc repz or gs xor movsl or xor mov dec sub test cmp adc or add xchg hlt jecxz dec add jns mov inc insl sahf pop pushf xlat addl adc lcall mov or sub icebp sbb (bad) cli xlat cmc aam sbb push cmc mov mov push jo jb mov enter test cs fmul xor rorl sbb jle data16 xorb lahf or jno imul fs outsb inc mov rolb pop sub int mov mov es sub add adc in and addb add outsl shrl sarb (bad) fdivrp shrl pusha dec call adc mov adc hlt or add jae pushf popf add sbb pop mov push or adcl smsw add aaa mul inc enter lods dec pop adc jmp pop shr xor hlt mov sahf cmc lock pop iret ret mov sub pop outsl loop push outsb rorl push pop adc mov stos jmp xchg movsb scas test mov xchg int hlt cmpsb push sbb dec add mov jl shlb xchg add cltd ret arpl mov lods loope pushf sbb inc push adc add arpl outsb inc cmp clc mov fwait push scas hlt js test clc int3 fisub dec inc and nop pop loopne adc rolb aad pop inc xchg jns jae mov adc xor fwait test xchg cmpsl mov stos xor fiaddl and jmp jns push bound mov sbb jecxz pop or and fldcw mov lods xchg adc repnz add pop stos xor add lods inc adc adc inc test dec cmp sbb push lcall adc adc or cli add iret or and add mov add repz add out xor push dec (bad) push lds add cli nop idivl pop movnti cld cmp in adc adc cmp mov xchg stos in and xchg jp add add mov jp sbb jns xor push iret pop mov inc push les bound inc jmp fcoms subb mov inc ret icebp inc stos icebp mov pop notl sbb test mov xchg push lods aaa sub ljmp loop rcll fiadd mov (bad) into fldcw inc and inc data16 xor mov or xchg sub mov rorb mov mov adc and out (bad) xor jae jle push gs push or jbe out outsb xchg push ret mov in js mov std inc loope mov scas xchg add jl lret push jb or and dec pop and sbb lock mov xchg pusha jo pop mov cmp (bad) mov rcrb push rcrl ljmp push (bad) push cli add shrl mov mov mov movsb xor push hlt dec adc mov ds mov daa incb (bad) (bad) hlt lea xor adc xchg call in push inc clc add xor mov nop add popf inc sti xor and xchg xchg add or incb movsl (bad) aaa seto adc movsb xchg lock mov jmp jnp test test daa xchg add dec test push mov mov call fwait xor jno mov cmp inc bnd ljmp push insb cwtl lods loope adc gs pusha mov call pop and or notl mov fcomps cmpb in (bad) hlt and or add addr16 lds add mov je push adc sbb (bad) adc (bad) xor stos mov sub mov sbb dec loopne,pn pop cli rcr nop les lret fiaddl cld sarb out in les icebp pop xchg call andb sbb shl push xor push adc gs pop nop aaa notb popa mov ja test add xor repnz jbe cltd mov pop jne mov shll dec inc aam loope pushf ret and fildl dec aam and pslld dec loopne jl pusha jle cli pop clc xor or and daa adc add mov add xchg int3 lea dec dec inc push stos aam sbb mov mov ror movsl in push jnp je xor addb lock and xchg mov pop andl test or inc mov and dec mov cmpsb inc dec xor adc or sbb jge inc pop and nop cmpsb les data16 loopne mov orb test jae cmp data16 cmp sarb cmp sub jmp or jecxz or add cmpsl dec dec xchg xchg or add cli and xchg lahf mov push (bad) lret mov add stc aaa dec mov adc cmp inc xchg iret mov shr pop dec rcrb loopne imul xor rcrb jno xchg call cmpsl nop add and or xor lods std dec rorb jns mov cli sub push add pop dec aam xchg mov dec pusha adc rcrb push jmp add stos adc cltd adc roll cmp xor sub ss pusha hlt (bad) lock daa xchg notb gs or inc jecxz imul rcrb sub jns enter imul jns dec push push leave mov inc push jecxz mov in rorb sarl sub cmp fwait and mov xor mov add cli stc mov jns je ret mov ret mov fdivr add sbb mov int3 js and (bad) (bad) mov pop loop mov orb cmpsb cwtl sub repz cmpb les into mov or aam push pop loope insb lods pop xor xchg add out mov mov add adc imul xchg xor add ret cld mov cmova mov lea pop xor dec test scas lods xchg int loopne jp mov cmp add nop sub push scas mov add scas push enter inc add xchg or les adcb inc fs aaa or ret aas daa push inc (bad) mov jne or int leave adc fs add or pop sub ret cld pop add clc jae add inc ret hlt add mov mov sbb sub sub xchg call cmp ss and and fnstenv sbb (bad) mov or add and insl sarb mov inc push cmc inc cld arpl repnz imul test fs jmp movsb sbbl inc mov pop xchg lock push and or mov add add inc outsb jnp aaa fmuls cmp pop movsb xchg add xchg xorl cmp cli or mov andl mov nop inc mov mov dec push nop push sub jl dec je lods jbe dec mov sti repnz mov fiaddl loopne leave hlt pop in inc aad insb or sbb les cli mov jnp mov pop rolb test fs scas push jns stos lock sub cmc jmp xor gs push mov fs nop xorl and cmp xor xchg dec sti sbb shll jp jl arpl hlt add cmp (bad) jg sub xorb lcall or mov sbb dec je mov xchg pop fcoml (bad) push or fcmovnu jecxz xor orb pop mov add push jnp add test imul and (bad) mov ret mov cwtl jmp in cmc jb sti or enter mov (bad) int push stos fdivrs iret outsb mov dec mov inc sub push arpl (bad) and fwait cmpsl mov push or cmp cltd mov adc add sarb loopne ficoml cmp pop mov add add mov clc imul loopne pop imul xor and out lds mov popf add inc adcb add mov daa cmp js add jo cmp xor je arpl jns pop (bad) lret jo loope sub nop push sub or fwait jbe ds push cmp cmpl jge mov jne add mov ret movsb ret sbb dec and bound jmp outsb fsubr push add (bad) stos and scas sbb adc mov pop jle dec adc test lods mov loope daa inc mov sbb add jge and add test xchg cmpsl pop add (bad) lds inc fstpt pop push dec stos dec push ret (bad) xor out xchg setns adc xchg test push sbb out ret xor test imul pop add fdivl xchg jmp add jge mov movsb xchg mov jno frstor push test add ret insl stos fbld mov add push pop test mov aam stos lock xor push cmp xchg fldl fdivrl fwait xchg cmp jmp cmp movsb hlt loopne pop xchg xchg jbe cltd cltd add cmp jns test call or adc adc fs xchg pop nop xchg popa dec mov sbb pop pusha sbb push sub xor clc orl or add xchg xchg (bad) xor adc lods inc add andl push cmp je rorb adc fadds push adc cwtl pop push inc dec ja call xchg imul lahf and pop xlat add in mov aas pop xchg jl sti test out inc mov inc paddd add push pop int inc or push mov add push enter pushf mov insl dec sti xor push mov cmp push dec or jle (bad) lahf lods ror test cmp jb add test inc sub xchg push xchg jl or into xlat push add out sub xor xchg hlt jne icebp xchg in ss add sbb sbb cmp or push sbb jp testl jnp cmp enter movsl icebp mov inc sbb add sbb scas push mov mov outsl xchg call push pop pop and cmp icebp arpl xor or (bad) (bad) push orl fist cmp js frstor jl js add enter push rclb ljmp enter enter lret mov mov insl add sti pop into inc (bad) aas fadds mov div popf pop fcmovne fdivrs or xchg pop js add mov xlat add jg add dec call add add nop je add fisubr rolb mov lea xor jnp push push xchg (bad) in lods fidivl and dec pop xor leave lcall mov andb mov cwtl mov pop repz or (bad) nop dec pop pop pop adc add sub push cwtl sbb push sub add add cmpsb mov dec es sub sub call adc clc ror sub imul sbb inc or aas fisttpll cmp dec fimull iret add movsl sbb jecxz push jns data16 push sbb sub add mov pusha jmp rclb mov jecxz and sbb jo jl call cs xor sar test scas test inc movsb test cmp dec xchg push cwtl shlb xor push (bad) mov jne and jge cmp and stc mov sahf test lods mov cld (bad) xorb push arpl in xor mov hlt add mov push repz add mov mov enter lock xor imul and add movl inc push push lahf xchg mov int inc push js je or rorl test sbb nop push movsl lahf jne mov mov and or cmp insl pop push dec adc mov insb lcall dec or iret cmp add icebp in int3 mov sub push cld add push stc xchg mov (bad) in add data16 outsl std pop popa inc or (bad) lods adc pop add sub aad cwtl jo sub divb xor sahf add and aad mov add outsl add (bad) fcompl das cmp sub enter and push add or ljmp adc and or out outsb bound push xchg cmp add mov iret call dec xlat and pop add or mov cmp dec and add push nop pusha push mov sarl das popa dec orl adc and imul sub cmpsl xchg std addr16 pop pop mov inc mov or inc fidivl cmp pop and outsl repnz add call mov pop outsb test and popf roll xchg xchg xchg xchg test pop addb mov repz xchg or and test nop in (bad) leave sub cmp sub pop mov inc lcall and repz mov sub mov mov or outsb or dec js inc lods clc push push pop mov sbb lea and dec sub add nop jmp cmpl cmc cmp adc add popf aaa orb push sbb int dec in add and and lahf adc pusha inc dec cld lods andb cmp xor jecxz sub fidiv jne and aam dec pop leave or sub sub (bad) lret stc mov aaa mov cs jne sbb jecxz bound cwtl jmp lret pop add loopne sub arpl add movl movsl cmp sub adc or or cmpsb mov dec popf mov subb adc andb and sbb mov mov sbb or mov xorb sub inc adc sbb pusha pusha inc add shrl lock or loop ss sub add mov (bad) sub mov xchg mov pop mov xchg insb inc rorb dec or mov shll notb loop out cmp adc mov mov or inc or mov daa inc pop and jmp and lods jbe test sarl xchg pop mov pop stos in push xchg push inc aam lods add lds lcall bnd and add js inc test mov lea xchg ficoml inc jnp add jge cmpsb mov add (bad) mov jmp fldt xchg arpl mov fstps jl int3 inc mov xchg pop jbe cwtl xor clc leave xor fnstcw cwtl adcb jae add aas jp dec inc add add inc xchg int3 or add jecxz xchg pop inc aad rolb xor daa stos popa adcb rol daa fstl xor test movsb (bad) shrb mov xor push jl jbe xchg sbb clc cmpsl pop jp jbe push add add imul add mov mov inc insb sarl in xor inc add or jge dec or les or insl or lcall mov in or jno movsb xchg movsb sub popf jbe test inc or cmpsl mov add xor sub movsb pusha or (bad) mov jp (bad) ret and js sub rclb js int3 adcl add gs xchg cmp test pushf lods inc mov mov mov sub sub adc xchg xor adc inc push cmp fstps mov insb mov js mov jo cmpsl pusha stos dec xor scas mov aad adc and sbb add and rcl dec xchg loopne sbb xchg xchg sub xor cmc and adc add in dec aam sarl rolb xor mov inc add pmulhw and add and cmp rcl sub rcll add adc sbbb and sarb shrl pusha jle dec shll and and adc loop add test mov cs inc add bound cwtl sbb dec loopne test in jge out dec xor add std push and and mov (bad) shlb dec mov add sub loopne,pn mov lret add mov inc xor or movsb cmp aam mov sarl fwait sub lods and (bad) js mov xor mov lcall sbb xor popa stos push and incl fsubs dec rcrb add mov enter adc leave adc shlb push xor cmp sbb (bad) sbb add fs cli jp (bad) xor clc ljmp shll pusha loopne sarb add inc imul jo add in lret pop mov xor mov mov add test jne nop add out out nop loopne mov cmp xor mov in sahf ja lcall subb clc sbb ljmp add fisttpll dec add dec stos push cmpsl sub mov mov push xchg mov add jmp call push sub pop nop sub lock out stos out pusha cmp (bad) aad dec add push mov dec add and xchg ret and es pop cwtl lods inc mov rcrb mov repz lds add add sbb push pop cwtl test lret or cmc out dec aam lret or int3 xor imul inc inc hlt dec subb inc add add mov hlt inc cld add pop inc stos push aad aad (bad) push pusha jl xchg mov aad loop sub dec push out dec add incl clc nop rolb mov imul les test (bad) dec sub (bad) lods and cs insb movb add insb ds daa dec xor and sar (bad) jae ret push fmuls mov mov in sbb decb cmp adc adcl sbb and sbb cld add sbb sti int3 fild cmc or cmp and mov push push adcb dec sbb (bad) aas loopne add jle cmp dec les enter and cmp cmpb mov stc mov clc mov fdivrs xor call inc out cmp cmp add das nop lret cwtl movsb cli xchg lods sub call inc enter push aad (bad) adc inc jbe mov cld (bad) and add adc pop dec rorb dec cmp in mov test movsb orb into hlt mov mov dec xor pop mov int3 inc mov cmp rcl sub inc insb pop aam hlt cwtl dec adc mov fistpll mov popa xchg xor stos (bad) cmp jno repnz cmpl shrl pop dec jae js lret pop mov (bad) scas out arpl sbb cmp jmp adc pop mov and rclb cli mov add adc mov sub in aaa insb (bad) mov rolb in mov stc fisub (bad) clc sahf jmp pop xor add iret jne or push in sub adc repz lret xlat fsubrl jnp dec cwtl mov mov int or movsb jnp jo jg test xchg add es xor outsb xor add or pop or lods cmp pusha or in aad or enter push add out adc incb inc movsl hlt mov rcrb add aad mov mov mov aam jns xor add mov aaa jg sub dec or pop int3 xor dec call mov inc popa sub push add enter insl rclb (bad) mov faddp sbb (bad) dec mov dec mov enterw or adc or push (bad) in shll das imul shlb movsl lock push ds add lret rcl shlb ljmp and or clc dec add or mov mov dec scas js xchg and mov and inc mov or add stc push jg loope shrl shlb mov sahf outsb aaa xor outsl or push add (bad) hlt out sub xorb inc shrb mov sbb (bad) mov adc inc xor xor mov adc cwtl fbstp cmp or pop clc xor aas mov in fs xor mov enter pushf js mov mov call cmp jg xor mov orb jae dec lret inc je cli pop nop aam sbb push jo adc push dec pcmpeqd jl mov mov inc mov dec sub inc xor or roll or mov xor popaw add or pusha lahf insb in insl push (bad) xor aas or mov cmp mov outsb or mov mov jge lods sar add jg fwait pop cwtl ds in dec sub lods and mov dec or and and add pop in cmpsb mov cmc pop mov sub repz or inc jb inc hlt adc rclb int3 in sahf sub mov mov pusha aaa jl adc cmp popa lcall imul pop push imul mov mov dec test dec pushf xchg mov pop mov daa cwtl inc les mov cmp pop push (bad) lret cmc pop clc enter inc xor xchg fnstenv out xor mov insb push and mov sub paddq xchg es outsb mov jno and sub test or inc mov mov mov int3 enter jne add or or clc add or inc push sub lahf and mov mov popa test mov and test leave aam jge lret ret mov movsl jb jno mov inc bound es add insb mov bound pushf or lea dec enter cmp push inc xor mov and aam add cmp jb add sbb pusha adc jl cmp mov sub out dec andb dec pushf add xor dec fist movsb insb pop or (bad) sbb jl in or cwtl or xchg sbb addl loop cmp incl call fisub js or shrl inc je cmp or (bad) mov mov sbb iret cmp add xchg xor pusha dec sbb or outsb jae and xchg popa xor inc rcrb data16 (bad) sub add push iret cmpb sbb pop pusha jns add (bad) dec out clc sbb cmp and push addb sbb add sti out jne sarb adc adc mov xchg sarb lods adc scas jmp cwtl (bad) in and sbb sub mov arpl add ds mov mov xor and push push xchg sbb mov and movb enter push inc mov jmp fstps xor mov pop add loopne loopne xchg xchg xor outsb pop les daa adcb in add lret sub sbb cwtl rol dec out xor and js xchg mov jl in add and nop jp idivl sahf pusha fldl movsb in sarl xchg es adc out ljmp lock sbb enter and sub and add dec ror sbb xchg (bad) jo xor ljmp cmp clc inc xor sub call mov add mov mov lods or add sub cwtl dec mov mov push (bad) mov scas or add enter push pop pop add loopne and in add cld sbb cwtl xchg or stos mov adc mov pop dec add mov nop test xor xor or add loope push xor lds or es movsb mov jo and pop arpl lods data16 pop and leave dec sub adc dec test jecxz flds nop imul dec sbb sub lcall and gs clc cwtl insb xchg in movsl sub xor add bound aam inc sub shlb shlb xor pop ljmp mov adc sbb lret je in outsl push sbb test or xchg sbb push popa inc iret lret mov jo in mov sbb mov mov loopne outsb dec adc ss xor ds negb cmp (bad) add push xchg sti call push ret mov repnz or sbb xchg loopne fbld or iret sub popa inc xor loope icebp jg orl xor inc loopne,pn std dec cmp fnop xorl inc cmp loopne outsl jg test xchg out sub xor push jmp lret subb movsb pusha jbe jb xchg cltd add cwtl idivb fbstp mov adc call mov rcl push xor push or pushf call aad pop popa adc in and insl addr16 adc mov or pop movl add dec subl adc (bad) jo fwait sbb push daa mov xor andl mov pusha loopne movsl xchg mov mov jo rolb mov bound mov mov mov dec outsl sbb addb and sbb push call push sarl dec inc sbb in and add pop cmpsl out sub lahf enter mov movsb in inc mov mov outsb push pop mov adc add push pop icebp inc jo addr16 rolb sub adc inc sbb fcoml es out jb lock lock cmp das sbb int3 (bad) or push jo mov inc sub xchg add adc iret push ljmp push push stos loopne sbb mov xchg xlat sbb std add pop jnp cltd push add adc mov push orl ret lahf (bad) pause arpl add xchg mov es xchg clts pusha js xlat aad (bad) xchg push lock cmp rolb jbe and std xorl ljmp lret push mov inc daa or mov add sbb push push pushf pusha xlat daa sbb inc rolb dec lcall cwtl push ficomp imul mov (bad) lret jbe push (bad) (bad) push std add mov add std mov rcl les jno push pop popa dec adcl loope jmp enter hlt test rolb sbb ret int3 mov (bad) shrl das xor in xor pop pop or add loop push add lahf mov cmpb and add repz sub dec jp add int3 popf xchg and xlat cmc push (bad) pop add test cli add (bad) nop rcl and mov mov stos enter pop scas or sbb pop sub add aas pop fldenv btr je pusha fildll pavgb mov or (bad) sbb cmp cs sbb push imul sbb (bad) stos (bad) mov cld or out in pop in push mov loopne and arpl dec nop test out lock pop lret push sqrtps cmp mov jmp or push addb aam jbe add loopne push push xor imul pusha adc roll adc mov and jl sbb dec fiaddl sbbl mov lcall (bad) mov insl inc push (bad) sets in sbb cmpsl test or sbb mov mov imul push out adc shr cld or mov enter aad popa inc sbb push mov or xchg add cwtl push insb repnz adc rorl pop adc add ficom jl out faddl add jo xchg xor jmp add adc out fstl xor popf loope xchg sbb sub or or push xchg and repz scas movsb movsb add cmpsb and (bad) mov adc sbb xchg mov adc lcall test pop flds lock xchg mov loopne es adc pop loope adc sbb (bad) je pop xor nop je inc out pusha inc lods jmp xchg in stc fstl sbb nop pop and and jle adcb and xor incb (bad) aam loope dec xlat dec sub sbb xor loope dec hlt sbb int3 and call jns jne lret data16 or add dec sub mov add xor in mov repnz sub test sub mov dec aaa adc jns cmp push push or jae fld sbbl sbb nop xchg leave add xchg cltd mov add jmp mov adc pop sub mov cmpsb sbb movsb fcomps outsl adc mov xchg daa add sbb cmp sbb pop movsb sbb or or push mov in outsl add fldenv cmp cs and mov lahf das or inc jbe aam lahf push add adc sbb das ds call adc jo ja mov mov sub pop or cli popl pusha push cwtl push and out arpl xor xchg in call push out dec or cmp push (bad) mov lcall sbbb hlt (bad) xor and dec adc iret int3 inc cmc push add ss mov inc addr16 sbb cmp sbb and fs push mov insl inc jae lcall mov cld js or adcb adcb in addr16 aaa cmp js or shll fsub jecxz divl cmp mov cs inc in (bad) leave add mov add xchg pop rclb jae cld je (bad) sarb xor add or in dec rcl cmpsl rcr lods inc cmp dec add pop or jns xchg sub (bad) mov clc sub loopne fsts sub shlb push lret or movsl mov pusha fsubrs add pop cs cmpsl jnp sub bound (bad) lcall or push cmp cmpsl sbb xor inc adc cmp mov ljmp xchg pop inc xchg jge popa mov sbb add (bad) not pop adc inc aam or insl mov cmp cmp stos insb push pop lods js lds mov call sub xor loop dec (bad) sub jns sub mov jge add jno mov push test sub aam lock pop mov or mov or out stos or sbb mov mov in test mov mov dec mov and leave or inc ja mov movsl and jp xchg inc inc roll insb dec xor lock sbb mov adc jbe pop adc lock jns add aas mov lock jl arpl aad and push addl xor push jecxz cwtl movsl adc mov rcll das pop and mov repnz insb fdivr push sub das push or add xchg rcrl lods fdivs lock or inc push je adc cwtl add pop pop rcr xchg xor hlt insb int3 pop faddl add mov sub inc or mov add (bad) mov add mov cltd and and adc or add nop mov (bad) mov test shll pop cmp cli lret scas add fwait std cs sub push mov jle dec test and jne mov add call adc adc adc jns inc cmpl imul mov dec add ret sbb cmp and es icebp fs sub into adc mov xchg cli lods mov add add js sbb mov cld int3 test loopne test and mov test jae adc cwtl les sbb imul into test inc aad pop adc scas dec or add stos add adc stc inc mov fadd push iret fimul arpl inc jecxz mov add movsl (bad) insb jge cmp pusha pop vmovaps aaa inc int3 mov arpl call add xor push push (bad) inc lods push loopne rcl push push push mov loopne iret xor sbb int mov loope jecxz (bad) jmp call insb mov and xchg les movsl cmp rorb ret mov inc cld (bad) (bad) jns inc lock fwait les adc icebp jl in imul xlat shrb jne inc jbe lret addl push pop shrb sub mov lcall push pusha outsl (bad) pusha jno add out mov jecxz js lret test add mov lock xor pop cmp mov adc ljmp and lret shlb sbb pop rcrb iret push rorl inc fwait imul push popa aam add fcomps sbb pop sub xchg mov mov and dec in xchg fmuls divb sub inc int3 mov add inc push clc test mov add and mov shrl or and lods cmp push das xchg movsl test mov add fldt mov push cmpb ret pop cld lods add aaa lock mov pusha fist mov outsl lret or sbb or or or mov outsb or xor adc mov subb sti and cmpsb hlt push call jle mov add mov and fcompl mov mov mov insl movsl cwtl mov xor xchg jge ficomp mov dec loope sbb jae in pop (bad) mov pusha add in add scas hlt dec mov pop xchg dec clc add fnsetpm(287 mov aam inc sarl popa push dec rcrl loopne cmpsl push mov or cwtl movsb dec mov add addl xor and cltd push stos dec aad or push and pop cmpb pop inc sbb add and add shrb dec inc mov adc xor sub cld leave lahf pop fdivs cmp (bad) lock cmpsb add mov (bad) pop ret adc jge pop jo add push loopne mov in cmpsb nop dec and movsb sub bound sub enter rorl sbb mov scas push sbb mov notb adc xchg call mov adc push push fsubs in push add (bad) hlt addr16 pop push and or sti lods stos inc cmpsl js mov jp add sub popf out dec lret cmp cmpb add cmp or inc or les inc in xchg out leave data16 sub xlat in cs pusha or lock movsb add sub adc pop adc (bad) sti inc mov pop flds push xchg test mov movsb loopne pop je adc sbb sbb mov inc pop pop inc test adc mov mov adc pusha int3 (bad) push xchg add (bad) in or jmp adc in out jg add xor xchg mov in add pushf lcall mov test std pop mov pop outsl leave (bad) mov pushf cmp inc inc scas es adc cwtl adcb add jae mov dec lret and stos adc movsl mov aam leave or cld inc push add call insb addb cld add jl inc add or cmp xchg xlat mov add insb stc rolb cld mov idivl add mulb adc push aas push and mov test inc xlat cmp add xchg mov add sub xor or fadds lahf adc lds adcb push pop mov dec mov push and jae and xor and pop faddl add or aam cmp out loop xchg scas icebp je add je pusha lods sti aas movsl repnz in stos (bad) in xlat ljmp rorl jg test push add jno add mov popa int3 jbe xchg in inc mov fs imul lock call ficomp sbb jl and xorps cmp sub mov es sahf ret and sbb add mov add bound nop lock aad push or adc add and xlat rcll test pushf dec lret add nop fdivs (bad) mov dec fiadd inc loop add xchg mov nop aam sub or out xor inc enter pop fadds bound add movsb mov rcl cmp add mov push lret cmp es add in sub sbb test inc sti cmp lods add adc push rorb movsb dec mov mov in enter (bad) jo dec cld out lock scas inc add fldl mov jno adc inc fdivs xor leave fimul inc fwait adc pop mov mov add addr16 (bad) lock les rcl jg push inc push stos sub int3 pop jle jns jbe incl and or fisubr andb mov pop and or mov or jno adc and pop cmpsb enter push ret sbb inc jge cmp mov and lock inc lahf rcll mov xchg js enter cltd cmp adc jp adc push and sbb rcll lahf or xor call adc or sub (bad) add adc or aad mov (bad) rcrl inc sub and mulb int3 test popf adc mov test xchg (bad) pop cltd dec sub sbb aad cmp push mov cmpsl test inc sub adc shrb outsb add mov push or mov jge sbb mov jecxz loopne out add adc add sub sbb in aam add outsl add inc add in scas out test into rcrl cmpl in cmp adc add add loop mov arpl popf (bad) inc lock (bad) int add jno jae adc mov mov rol adc pop pop xchg add adc and sub mov shrb not mov pop and loopne or shlb addb jmp inc push lds jle pop js das or lret sarb cmp add int sbb and iret inc sbb lods mov sbb inc sub cmp push inc imul xor adc mov cli fldenv mov add loopne nop mov add cmc mov shr xor push fadds fnstenv add movsb xor popa xchg aaa xchg and sbb and mov aas inc xor push push jnp andb or int3 push inc inc and outsb fstps and mov xchg (bad) mov push or aam dec xchg test loope jae and in pusha in loopne sahf int jo inc and ss sbb xchg lods stc add bound fucom jl es sub inc lcall aam or inc or dec sub in cmpsl and mov push (bad) popf jnp ss inc les mov mov ss push and sub fiaddl adc imul push pop lods rcr sub loopne fsubl scas ret sti mov jb pop cs sub test push or mov loopne leave jnp ret dec pop or pop add mov and out push (bad) jnp stc es jle or pop add mov inc insb mov jle push sub loop xchg jnp dec cmp nop js xchg lret test bound mov test push xchg clc adc sbb pop inc jo cmp dec shrl repnz and inc mov fisttpll adc rcl fs sub lods ja dec adc daa inc add push popf or aas mov xchg and mov sub xchg inc adc stc xor sub sbb out and or or and add cmp dec jne mov into add call cwtl push dec xchg mov push cmpsb sbb pop lods sub mov jns fnstcw jb add enter mov xor and pop orb pop adc add mov cmp mov xor sbb cltd mov cmp dec add (bad) jmp enter lahf ss add cmp dec pop or fwait pop dec or cwtl or inc add cli fistpl scas mov jl adc add mov push push test add bound gs incl xor sub xchg add arpl les insb pop cmp nop pop push int3 pop pop adc inc inc ret add shll push cmpsb dec shrb fcoml cmp xor xchg lcall jo sub sub xor pop dec inc decl nop xchg or hlt or cs and fisttpl mov lcall fild inc jo adc dec hlt les stos leave add xchg jo sub jo cmp jns out inc mov sbb das jg sub sbb es inc mov jle adc cltd and imul dec lcall and shlb stos cmpsb sub outsb xor add sub sbb mov add mov pop adc xor lret mov andl movsb or xchg dec mov (bad) mov cmp imul inc mov shrb inc inc fstp mov stos mov pop in mov mov sub mov lock adc lret and ret out sub inc lods daa xchg gs pop pusha push dec mov pop cmp mov pop xchg lret sbb pop push pusha dec mov jo add jmp xchg fs (bad) aaa pop (bad) sub and adc add jb popa or sbb xchg into xor icebp add scas loop pop sub mov out adc cmp add and add in icebp (bad) or dec (bad) (bad) xchg mov or imul jb hlt and js inc cmp sbb mov loope jne fs xor push jmp jle xchg rorl mov and cmpsb cmp xchg shl and sbb push (bad) mov adc jl js and jp fwait test mov mov lret or pop adc add movsl inc or push sbb xchg int sbb (bad) sub mov pushf add mov ljmp sub nop faddl popa and cmp fidivl mov pop dec and shld mov cmp sbb test lcall jno dec sbb arpl push jbe xor dec dec subb fs stos pusha mov adc scas xchg cmp sbb aam add test (bad) or add jnp xor inc dec popf cmp fidivrl inc ret imul movsb jnp push daa xchg pop ror in cmpsb sbb add loopne mov push rcl mov adcb aam push mov bound test (bad) sahf mov mov push xchg or dec enter xor and dec dec (bad) xor sub sub add and subl xor movsl mov adc jp loopne sbb cmp test js sbb xchg es roll inc stc sub fwait sub (bad) push adc adc sbb and pop sbb frstor call cltd insb nop das test sbb and push inc sbb ret stc jae shlb cmpsb ljmp mov les jle xor insb adc fimull mov stc add inc popf sub sub fsubl int3 mov hlt jl sub adc (bad) aaa and (bad) rorb jmp into push inc jno stos push adc ret cmp adc dec add leave faddl insl fistpll xor out xchg lock das push mov mov cmc mov fldt leave jle push pushf jno popf and scas add sbb dec adc sarb jl hlt nop push fsubrl enter mov popa and push or add addr16 sahf (bad) femms jp xor mov add pushf jb cmp roll adc xchg mov fdivrs xadd sub mov xchg xchg sbb lea jns adc repz xor push pusha dec sub aaa xor sbb aam push loope add mov mov inc rcl cmp jg movsl (bad) syscall adc iret add nop sbb xor adc xor pushf add sbb lock andl inc inc jns orl sbb outsl fwait (bad) dec scas mov push ja movq pop (bad) (bad) mov mov (bad) fiadd ja cwtl xor gs xor dec js rcll ljmp neg push pop test and aad imul sarb adc cmp mov push pop jmp inc add or movsl mov and xchg notb scas leave add inc out push dec cmp adc mov push xor mov add fmuls sub cli sbb cmp subb nop ret sbb pop xchg (bad) lret dec ja in dec inc adc push lods inc loopne mov sub fdivs sbb xor push or je jg or aad jne push mov mov or adcl inc fldenv pop (bad) jbe ret mov mov aaa push dec sbb xor lock cmp or dec sub mov sub lods inc jg cmp addl cmp (bad) push add sbb pushf nop push int leave add in negl push test adc (bad) inc les xchg mov mov and xchg push push inc fsubs movsl add fistl or mov test sbb cmpsl subb cltd pusha in or mov cmp cmp movsl rcrl jno call cmp adc sbb cmp in cmp adc ja inc ljmp sar xor xor out inc sbb cmpsb inc js test add fildl outsl je xchg xchg (bad) lret sbb mov dec mov mov sarl push push mov inc mov lahf mov sub push mov xor adcl xor push xor inc or (bad) not int3 jmp add push movsb pop pop gs adcb adc push add lods and jmp movsb or push cmp jbe sarb push push test or mov cmp jle jb push leave out or inc xor add jbe cld ret adc mov mov jne jb bound test int3 jecxz rorl dec and add daa mov add xchg test dec and lcall in mov stos push mov ss jecxz add sbb in adc sbb stos add aaa and mov test mov nop test movsb loop loopne xchg mov call (bad) cwtl add and or jg scas pop sarl data16 ljmp add inc mov mov adc xchg sub popf les stos cmp sbb (bad) jns ret fcoml xchg shrb call les enter inc loop inc insb mov cld inc cmp outsl sbb loopne and subb or pusha sbb cmpsb adcb and jae push push stos sbb mov iret mov or ficom test sub mov add xchg mov (bad) add ss mov add xchg (bad) jo pop sbb popf push bound mull std push test mov les mov jbe and das mov ret movsl nop inc adc adc mov sbb xor sahf pusha jo jnp xor test jns mov push mov (bad) lret (bad) test mov or addr16 jmp dec and sub int sbb bound in les ss mov jo jae xchg popa or inc cmpl pop subb dec inc inc jbe jo cmpsl sbb mov arpl rcl xor mov mov test mov push push cltd sbb divl mov (bad) cmc push jl or mov cwtl sbb stc inc adc fmull xor lods jns sbb data16 xlat cmp pop (bad) jo imul gs fsubl inc mov insb scas int3 xor or push inc xchg fsubs cmovs movl xor int3 xor sbb xchg push push mov fs jno fildl or bound xchg and adc xchg dec xlat hlt loope xor mov inc and inc js cmp bound lcall stos xlat push sarb popf call inc mov push pusha mov add gs xorb ret int3 cmp xor addr16 inc not addl outsb cmp xchg push push inc enter test js push inc mov inc mov cmp gs dec loopne pop lods cmp xchg push lcall nop (bad) mov fwait cmp inc lods add (bad) push fs pop mov and xchg push mov jae pop loopne lcall stos cmp fidivrl or sub test sbb mov sub dec and loopne jno xor jmp scas add xorl popa push push cmp repz cwtl nop jmp ja xorb push mov or dec notb add jo pop mov loopne push adc push push adc test inc movsl dec adc addr16 repnz rol pushf adc sub jp jecxz mov andb and adc pop (bad) loopne or mov and insb pop or jne and ss inc mov jbe jo test push dec push sbb add inc push addr16 clc inc mov push pop adc std jns (bad) sti sub cld xchg test jg push dec test mov xorb inc lds xchg aad es pop xor pusha enter adc cmp xor add jno xor ss jae adc sbb xor imul fld xor jp sub or arpl sub mov push mov adc push jbe (bad) enter or or ss inc sub adc xor std or rorb mov push sbb subl adc movsl cmpsl cltd xor push xor test pop mov dec fbstp xchg push cmp mov pop les mov adc mov dec repnz popa push jb xor cmp pusha add popf sub inc and mov mov loop rolb xorl rolb or movsl sub jmp ja imul or add cltd jmp and fwait jno mov or call lock leave mov or push mov push psraw scas cmp cmpsl out arpl mov or stos pop lock mov cmp xchg xor rcll lock jmp movsl test enter in repz mov push fsubl roll mov add das or pop inc sbb adc mov dec xchg mov cmpsb inc shrl xchg data16 adc or test (bad) adc pushf outsl sbb cld jbe adc sub mov lds mov mov sub mov test cmp jg adc test orl imul inc int3 mov stos mov or fildl jno sti and pusha add mov pop jbe dec ljmp sub xorl je loopne imul or inc imul sahf or sbb or add or push cmp push fisttp dec jle test or cmp dec popa in and (bad) or mov sbb xchg pop mov or xlat rolb or aad call or pop repnz adc xchg mov mov mov aaa mov or (bad) test fsubs jmp inc rolb ret push push mov in or adc sbb or xchg pop or xor fs mov or call pusha adc add sbb dec lods and sbb adc inc popa mov and jno lods fcomps out adc or stos push enter (bad) or mov xor or and outsb inc xor sub and mov sub sub sbb sbb mov jo mov lret (bad) xor sbb mov push arpl jns ds enter arpl xor push nop fdivl dec pop add lods push cmp jl dec dec mov inc dec or pusha sub movsl les or lock mov xor and imul fimull movsb push xchg loopne pop inc mov xchg adc adc sub adc and test imul adc mov loope shlb inc adc lcall ds insb sub cmp cwtl add fsubs mov pop or (bad) mov and nop xor cmp sbb in jns inc les sub sub jmp sub xor mov add cmp xor push jns sti xor loope push pop mov or mov cltd inc mov mov mov dec jp add arpl dec mov nop push or adc xor mov pusha sub cmc inc popa (bad) mov rcr test jns cmp cmp stc mov mov or cltd addl or pusha fidiv or inc add dec add mov imul dec rol dec movsb testb fcompl loopne mov stos adc cmp cld sbb js fwait loope (bad) pop add dec clc push sbb leave arpl test sbb mov jmp sub jmp adc mov xchg dec gs adc dec sub mov mov add lret sbb movsb (bad) cmp xor xchg pop inc test jmp sti fisubr shll sub mov add stc sarl xchg cmp mov xor sub add rcll or mov leave enter es xchg or xchg repz jmp loopne sbb xchg clc sub loopne aam xor sub mov inc mov mov adc dec adc add cltd mov inc add rcll loope and jmp in adc jns movsl mov movsl mov xor inc fild cmp (bad) xlat pop (bad) (bad) ja aad sub xorl add xlat or (bad) aam divl inc sti xchg insl bound ja (bad) js mov pop (bad) and xor add jns or movsb and ret nop mov jne add mov lods sbb out cmp rolb arpl cld add mov and xor cltd push icebp or add xor pushf incl inc cmpsl xor sbb dec outsb sbb jmp (bad) dec pop roll sarl jns or jle xchg adc jl mov jg jae add inc jae sub loope mov mov and sti std pop sub cmp jnp aas adcb les jo jg loop xor iret fidivl mov pop jmp pop mov (bad) cmp or add sbb icebp sbb xchg movb xchg stos adc fldenv cmpsb sub or or pop or test or mov and xchg sub lahf les add aaa inc push mov pop faddl movsl jno,pt pop std pop push movsb loopne fistpl aam mov in inc push call clc les jl jae movsb andl cmp mov xchg jecxz or push dec movb sub and inc mov xchg mov and (bad) pop repz sti adc lods js cmc jb inc push inc or call (bad) fdivr das lds sub adc das test aam push adc pop mov cmc or jno xor sbb adc or add or les push movsl pop add loopne ja inc fdivrs aaa in enter add jns outsb mov and loopne pop push scas mov mov aas fmull andl pushf pop adc sbb add sub movsl pusha push repnz sub push test das sub sbb in pop xor sub add sub and and add dec call cld cli push addr16 enter in lock icebp or xchg or dec incl add dec cmpsl les pushaw push mov sub mov jb and pinsrw adc pop push adc cld aas pop cmp faddl cmp push push xlat and push inc ds insl add push mov jo clc push mov and mov in sbbb mov movsl xor aaa incl or (bad) lock push push sub push mov repnz arpl or addr16 jo adc add aas fs hlt pusha xor rcll cmpsb xor push mov sbb lock mov ret sbb mov mov test sub or mov and das icebp jl sub mov sub roll adc cmpsl pop adc ret push mov repnz inc jo push (bad) call add and fsubrl add cmpsl and push inc inc add mov jecxz repz push cmp jg or mov test (bad) out push cs or pusha pop int3 fmuls and add push mov int3 fistl pop leave rcl pop andl and scas aam stos xchg int3 xchg mov fidiv and cmp shlb jae mov or insb out dec jo xor or jno and es and dec je movsb arpl or push movsb push pusha mov hlt jle outsl push fs fisttpl xor adc add pop mov or or add (bad) mov or sub push mov pop adc pop sub cld push and xor pushf jns or (bad) nop (bad) je push inc ljmp mov outsl (bad) adc or lock popl pop jo inc test aas je mov or popa adc adc mov test xor cld push xchg xor and aam and imul xor or jg je subb or cmp in jno fs pop mov mov push movsb xor movsb ret mov es (bad) hlt or sbbl add or mov rcr in jl push std fcomp push pusha int3 rcrl mov lea std or clc xchg adc push mov and insb (bad) and push pop xorb or cwtl xor or xchg xor rorb inc jge xor and aam cmc cwtl jo cltd adc add mov xchg les bound jl,pt call fidivl xchg sahf jl dec ficompl lods and adc jo iret mov in insb jns popa pop fdivs xchg xorb or addb dec and xor xchg jo aaa adc lods ja jle aas xor loopne push sbb aam nop and add sbb dec cld sub or mov sbb push stos or cmp (bad) in ds cmp int3 out or push push sub sti (bad) aaa hlt or dec and lret pop sarl add xchg rcr xchg orb or lahf mov or sbb in rclb mov add ja cmp xchg sub insb sub adc or inc cmpsb fs jg sbb mov inc (bad) push enter push and sbb lret xchg adc mov sub mov and addr16 inc enter shrl sub and loop adc or mov sbb or fdivs dec aaa mov push sub sbb dec jecxz sub (bad) pop pusha inc sbb add mov loop fcompl fs sub xchg cld push jnp adc gs sbb pop jns and fimull adc js sub cmpsb fmuls pop pop pop mov adc aam loopne (bad) out push xor xchg pop lret add cld sub pop arpl mov cld pusha mov and adcl add jne push dec stos das dec imul sti and xchg sub or cmpsb (bad) pushf mov pop fistpll cltd repz pop adc fs inc loopne push cwtl nop and in xchg nop mov add lcall in dec dec xor sbb push adc icebp mov outsb add loopne adc mov pushf nop or aas jmp inc iret cmp xchg adc mov cs jne jo xchg sub test sub call and sbb or stos xorl mov insl scas add inc mov mov int and pop cs loopne and xchg sbb pop fs mov jo xchg mov xor decb lods or pop cli sbb les cmp mov and nop loope mov test sub sarb int3 dec loopne in inc jmp cwtl rolb mov sub imul push xchg adc aas xor push movsl push mov sub sub cmpsb stos sbb cmp push stos pop pop nop test mov adc mov test icebp in sub push mov add adc push sub xchg push mov push daa adc inc xchg push loop rcll and add or or mov jecxz or xchg sbb or xchg inc push gs popa inc into rorb add jle (bad) enter jl dec jl mov in or mov xchg cli sub dec test add inc nop and mov pusha fisubr add mov sbb mov scas int3 je js xchg or and lods test movsb sbb test or pop or push in push and or pop adc adc test movsb sbb or inc js xchg imul scas push mov imul add stos daa jbe pop stc xchg in pop xchg inc rcr fdivp mov pop mov add push sub adc sbb adc les pusha mov lahf ja test and pop mov rclb and inc rcrb inc lahf fs int3 sub xor inc xchg push ret mov inc into adc push pop dec mov push mov aam adcb lcall and mov pushf pop loopne xor sub (bad) in pop dec cmp aas xor sbb enter fdivl xor jae or push add or add pop dec sub (bad) cld outsl cmp daa sub cwtl subb and divl lcall pop or or mov movsl cmp arpl xor or or andb js movsl pop in fwait pushf xor xor cmp int3 rolb sbbl in mov xchg cmp int3 push cmpsl sbbb mov outsb sub rcrl mov sbb stc pop outsl sub push cli mov sub or sub sbb pop xchg or cltd or adc or les add insb mov or xchg ljmp or dec arpl pop or in add or add in xchg mov or fs hlt sti in jae lahf xchg lea int3 (bad) mov and or jo mov test pop pop pop rcrl or test or add fdivl (bad) xor jmp cmp pop or adc xlat jmp sub xor mov mov or orl orb mov xchg sub xor jae add loopne (bad) insb pop lds fs aam pusha adc dec sbb arpl aam or ror mov das push sbb or test push mov cmpsl test (bad) mov in mov les or pop jnp sbb add lcall je cld bound loope mov movsl sub js dec dec and xchg dec bound push mov int3 sub xor push dec cmpsl lds in jl mov and je cmpsl enter jnp orb (bad) sbb sbb clc out xchg and xlat fs popa sub xor sub jmp cmpsb lock add fwait add lods add ljmp mov test shr pusha sub lods and fs inc jmp loope mov mov adc dec mov jmp and (bad) push cmp or jge je int3 mov ret (bad) mov loop add push cmp insl sbb adc pusha ret movsl adc xor adc and imul leave loopne jb pop sbb or inc pop mov fisttp mov fs xchg test mov cmp or roll xor rol shr int3 mov or adc sbbb sti int3 adc mov hlt pop pop movsl cmp repnz call lods sbb adc adc fs sub addl mov pop test xor inc insb (bad) out adc (bad) fmuls lods mov and pop or cmpsl cs jo and pop jno push test cmp push jo mov mov and xor xchg push sar mov lcall dec les stos add lcall sbbb xchg (bad) jae xor inc addb js add pushf or xchg add data16 inc add cmpb dec loopne pushf xchg sahf (bad) add out push pop push mov jmp (bad) xor lret int3 mov or outsl in (bad) aas pop sar outsb cltd cld sar push sbb pop test mov ja arpl or lods mov loop sbbl cmp adc adc jl add addb ror xor sbb jl mov leave data16 adc push and dec add js xor push cmp jge mov xor xchg lods push sahf xor dec adc enter or sahf addr16 xor or outsl pusha loopne sub inc cmp jo loope cld cmc pusha les imul sbb lahf or pusha cwtl loopne sub pop into je aas or jbe and mov movsl xchg in sbb insb test call aam mov shr and or dec jno or pop les pop aad inc xchg icebp mov mov push cli lods mov adc push int3 (bad) in or fisttpll sub cs or enter or cmp xchg das (bad) inc ror rorl dec mov cld cmp xchg inc pushl xchg mov push mov pop pusha or xchg nop xor or int andb sub sbb test mov inc push push mov push inc xchg mov sub sbb mov or jecxz mov movb loope cmp mov in test adc fsubrs mov xor pop cmp pop mov push lcall rol cmc or in pop dec pop or mov sbb addb sbbl stc sub pop xchg jecxz repnz jo mov lock ds cmovno into addl cmpsl loope mov shrl mov mov test jl mov psubsw sahf addl in add ret pop and (bad) dec mov aad jo scas cwtl mov or nop lock xorb enter jmp test mov and and cwtl lock push or (bad) rcll or jmp adc mov dec lock or fwait and mov mov movsb call mov es and icebp in test in repz mov pop jmp sub mov andl cwtl push pop pop (bad) jb or rclb sub sbb nop sbb ja or (bad) mov xchg or mov enter rolb nop push test inc stos or lods xor fwait in cwtl test int3 or fnsave push out pop dec xchg sub loope mov push sub xchg adc and or fldcw test stos mov mov adc test lock or pop jae add cmp mov mov les sbb add or and cs mov add or jbe popa inc dec dec mov pop xorb add or inc pusha mov imul mov leave cltd sti add cmpl jl rorb and add ret lds cmp sbb andl mov test push rcl push shrb int3 mov cltd loopne jno scas mov sar ljmp mov pop andl and cwtl and cltd and pushf and and mov popa mov xchg dec push or (bad) jno fwait xor jmp add inc push roll inc or inc and data16 cmp xor shrb or rorb mov jno sub inc int push es lcall mov stc lods or push pop sbb mov nop xor adc mov adc arpl popa bound sbb or sbb adc sub sarl xor sbb sbb add roll push sbb imul lds leave fimull hlt cwtl lock cmp sbbb orl cltd adcb and pop sbb shll adc jns cwtd and and and imul xorl or daa leave xor mov adc or or or fistp fiadd ret mov fs cmp add or adc xchg nop or sarl jge or adc fcoml inc and int or enter add movb fldenv inc in ljmp inc int3 mov inc cmp sbb rcll addl and add and or and sub mov es inc push pop insl scas sub or push xorl or or sbb stc and jns add lret xor or or stc adc push inc int rcll or mov sub popf or mov sbb or arpl inc mov or test add pop imul or dec or les xchg pop fwait int3 inc sahf xorb nop or hlt add mov or mov test mov outsl (bad) or inc pop and mov enter jns xorb or xchg test xor shrl lock jno movsb (bad) rcr mov pusha xchg test test das cwtl les or push mov call scas xor scas sbb xchg or int jmp int3 xor cwtl or ds lock hlt xchg mov pop dec mov cmp or jle daa pop sub dec xchg mov add scas stc inc sub bound es and cmp int3 orb inc sti (bad) fadd das mov lods cmpsl add sti sahf xchg pop test enter repz or inc sub in cmc hlt adc push call lods imul imull (bad) mov jae mov jmp shl (bad) mov (bad) cltd leave xor cwtl inc add adc rcrl pop movsl subb inc xchg add or scas xchg cmp into call add sbb or push lret mov sub xor xorl sub dec mov sub out or stc (bad) cmp rorb and xor sub enter add add lea inc fisttp push aad push in sub inc lods movsl mov mov cs dec idivb sub sub jecxz popf mov and inc adc sar imul mov jo dec or negl or or jmp or xor in and and test (bad) lret cmpsb notb cld orl popf into cwtl jo mov jns add mov add rcr push jo popa addr16 or negb or add sub pop out dec test out or jmp clc add js sbb push cltd es inc dec dec (bad) xchg js sbb sub or or push inc and scas cmp cwtl sbb (bad) cwtl mov sub dec popf int3 jecxz mov imul xchg mov fdivr pop and xor or mov fdivrs jecxz ljmp test lahf ror cli add pushf clc fwait mov add add outsb dec outsl adc or aaa lcall xor nop and test and inc mov ss mov (bad) add pop or xor mov pop lods pop (bad) in dec xchg cwtl mov test fiaddl jno push pushf push out or loope xchg jecxz icebp mov aad mov xor rolb lcall loope and mov pop and (bad) fmuls jmp arpl cmp aas cmpsb inc sbb cmp dec inc sbb in dec sub jmp mov adcl (bad) inc mov xchg inc stos and ret or mov push inc or ja loope add xchg enter jae stos push leave aam xchg hlt pusha negb jns sub (bad) or mov inc dec lret jb mov mov mov dec adc test and inc cld xorl mov clc shrb jbe stos sub lds jns rolb adc push dec add inc pusha cmp dec add fsts xor mov mov int3 out add inc ret jno std imul subb xchg push and sbb rclb mov pop add je cmp jge cmp or jl pop daa scas outsl pop mov add xor xor or jae cmova movl call or xor or add insb add push dec mov push std sarb test add xor test adc ss lret sbb push push xchg sub es test sub mov push xor jmp fnsave sbb cmp mov adc nop rclb lds loopne mov call repnz push (bad) je inc adc inc das mov add ja clts xor and mulb sub and ss in pusha loopne sahf int3 push nop adc xchg adcl stc inc sbbb cltd hlt inc push loope xor out or adc and or stos outsl fdiv xchg cmp lret lcall stos xchg mul mov or clc xor lods ret imul je cmpsl cwtl add push pusha or shlb sbbb or add or push cmpsl push cltd xchg cwtl mov mov decb je movsl sbb test test adc js shlb das iret sub push adc dec cmp icebp out and sbb jae lods nop xor popa (bad) xor adc stc jge cmp arpl xor xor icebp jge mov dec aam dec dec shl sub addr16 add and mov or lock stos mov inc push pop and dec je out int3 inc jbe shlb add jns (bad) ja fmul inc or push mov shrb adc push add addr16 js mov in bound jo (bad) aas mov daa and xor or pop cmp out js add jne mul mov in das xlat cmp push pop or cmpl xor out cmp and xor xor inc xor xor jno pop dec mov jb sub sbb (bad) xor cs add dec mov push inc dec mov loopne adc and or les xor mov xchg add out add cli mov xor pop (bad) cmp or xlat cmpsb mov hlt subl mov test rorl test lods shrl mov dec cmp (bad) fisttp push aad mov inc (bad) lret mov ret daa stos jno pusha dec mov pop push lods fs push imul jmp and (bad) or nop int3 jle fidivrl or aam sbb inc sub cmpl and mov cwtl pop jp adc sub dec cmp rcrl inc lahf inc stc and and add pusha adc xchg or stc cmpsb sbb or xchg sub mov imul adc leave dec sub cmp adc fisubl adc inc shrl adc test xor mov mov sbb cmp roll inc out mov inc mov enter loop jno icebp test rorl (bad) movsb les push into xchg loopne outsb leave cmp push mov xchg into pop pop bound fprem cmp movsl insb mov cwtl push leave in and lret sahf push push xchg pop push sbb (bad) xchg test inc mov or xor loope mov adc daa (bad) jmp jno cld adcb (bad) push nop or insl push or push xchg mov dec cltd je dec xchg and icebp insl adc sbb inc fsubrl mov test sub pop rorl xchg dec sbb mov popf push inc inc pop test cmp or imul repnz leave pop int3 mov pop das lea lds sbb (bad) or xchg shlb pushf xor orl or (bad) call inc xchg or sub (bad) xor iret push enter lock sub or pushf cmp sub sub enter or out addb xchg enter xchg and test andl and cmp lock adc xchg adc pushf mov dec (bad) hlt test adc mov in iret cmp xor cmp push flds daa xor nop adc orl cs jl mov jl inc cs bound xor dec jns mov add test dec inc push mov xor push push jge jae xchg test xchg push data16 dec mov adc or ret jo aas cmc daa call notb sbbb add xor inc and sub (bad) xlat add add mov ss bound adc inc popf pop and ljmp inc sub fwait imul test fnstcw xchg movsb pop loopne push or cwtl xchg xchg sub ja (bad) cwtl orl xor dec scas dec out (bad) xor mov dec and (bad) rcrb adc sbb inc inc jg or clc pushf mov sbb xor mov std inc cmp mov js jecxz adc lret fsubl mov push xorl dec out hlt xchg (bad) push mov push cltd rolb mov clc aaa pop out inc inc (bad) or xchg dec adc sahf pushf loopne pop test and dec xor xchg adc movsb adc mov mov sub jle lahf mov mov sbb fcmovb je movsl jo icebp aam pop adc nop dec inc pop push enter sub mov cltd (bad) xor xor sub enter sar jo or sub lea pusha out add pop les aas jecxz push inc rorl or push mov push xchg xor xchg loope push and mov adc jmp sbb lock adc push loop int3 cmp xor adc inc addl or xorb push sarb mov or jmp aaa je cmp push jl andl imul sub fmulp xchg addr16 cmp adc inc les mov addr16 push cmpsl dec sbb hlt ficomp adc push and mov flds adc mov sub ljmp int3 sub inc sub nop mov psrlw cmpsb push mov and stos push pop push or (bad) pop adc dec and jne jle dec sti inc jl sbbb sub rclb inc jo or (bad) fdivrs or adc cmp out lcall sub push dec and icebp push test mov test int3 or mov xorl push ffreep inc pop pop arpl or and fsubl or mov test sbb daa add sub xor or add add andl sbb popa add add fldl cwtl dec or test fmull cmpsl xor js dec fcomp pop (bad) xchg in add cmc xor jmp jbe shlb add enter cmp xchg sub iret dec sub ds or loopne pop addl mov fdiv movsb in stc add mov pusha push clc cmp ss popf push sub adc mov and jmp xor mov es push mov subb std loope out jo push push or ss nop xor mov push loopne imul or pop cltd ret rclb mov (bad) mov lock rolb sahf push pushf and cmpsl movsb inc fs mov push mov or jl adc les cmp and and loope inc xor lret dec xchg (bad) mov add imul test sub add inc pop xchg xchg test ficoml or pop mov push adc sub inc rclb push lods xor rolb pusha mov pop or (bad) jne push adc lret flds aaa push cmp sub mov fnstenv pop adc les (bad) pop jb adc add push inc sub jge leave adc and push test xorl pusha inc leave ja imul andl pop in sbbb add xchg (bad) xor mov push stos sbb ja std push in ss adc and inc dec push mov pop and leave lock push stos pop in (bad) iret ja cmpb bound ret inc aaa ja sar loopne ficompl mov test ror cmp rclb xlat adc mov addr16 shrl cmp js push ja cmp cs out ret inc (bad) jp add shrl dec pusha fs outsb loopne test add fildll inc inc fisttpll or dec adc repz nop pop outsl and addl lock jg adc add in xor inc cmpb jmp sub cmp xlat mov (bad) pop lea ja pop leave mov psubsb enter and cmp lods fs dec mov pop push imul jmp pop xor xor fild mov add or (bad) mov mov adc and cmc adc sbb fisttpl or mov cmp mov imull pop and inc jge dec out inc mov push or add leave add testl cli push call sbb inc nop pushf mov inc push int3 test dec dec movsb adc dec add push and (bad) ds mov lahf adc aam jno push fwait cmp mov clc xchg lods add xchg cli dec pushf pop add cmp stos and jle adc pop sar int3 jo adc adc dec pushf sbb (bad) fadds jno push fwait lcall dec rolb loopne mov aam and test stos inc add pop (bad) push mov arpl mov mov cmp add mov cld jg xlat add (bad) mov dec cmpl (bad) fdivr bound jo ret add dec and push push mov (bad) popa push mov (bad) or bound add push addb fsqrt mov fiadd xor jecxz test in adc add je fwait mov rcrb cmp clc les add and lea mov das movsl cmp imul xchg sbb movsb xchg fcomps nop xor sbb addb cmp fwait push (bad) or ffreep dec dec mov (bad) je mov and pop jl adc sbb cmpsb imul mov shlb mov rolb or mov inc cwtl insb imul stos (bad) lock add call (bad) rolb add push jmp pushf or (bad) outsl xorb cmp push xlat bound fildll mov push and rcll sbb stc das enter or bound ret jecxz jne add cs ja push dec mov mov or push mov ret lods pop xor test xor and fnsave leave loop push cmp add add add sub in shrb cmp cli push leave dec leave add lods lret dec jae mov inc add call jmp das ss xor xchg push les data16 es ja mov inc xchg adc pop pushf mov inc dec inc push icebp cmpsb movsb clc sub mov lods addb dec and cmp lret in (bad) add add or add mov les mov mov incb push add js out mov lret mov jae pusha add jmp inc clc dec (bad) fldl pop or sahf pop mov jecxz cwtl sbbb or lea addl (bad) and nop je pop sbb roll clc inc ret mov add adc (bad) lock je pusha test adc and jl rcrb dec nop push les jmp incl xor (bad) adc pushf int inc and xchg pop add sub pop jo or cmp stc les stos xchg xor in push add push adc mov cmp adc and (bad) ja dec mov fnstcw lods aas shrb lock mov pop mov sub cmpsl cwtl add xchg in cmpsb fs (bad) push les cmpsl lret xor je imul dec addb dec push mov mov cltd add cmp flds insb cli fwait add lea roll mov inc push inc bound cld add adc mov loopne and and cld push rcrb out call fsubrl inc or or mov je addr16 les dec add inc fnstsw sarl add push dec or (bad) in aad roll int3 rorl les add aas movsb pusha mov pop or inc sub mov pushf mov adc fmulp add dec or add pop push inc add xor pop (bad) sbb movsb test (bad) nop adc cmp mov test lds mov and add je mov pop mov je pop dec cwtl lret mov push and sbb pop cltd push xor int push and and je mov lods add sbb fstps inc movsb outsl jle,pt adc insb in dec es int3 inc aas in mov adc pusha rcr and inc leave mov addr16 pop inc ja cmpsb stos xor push xlat fsubr pop xchg je xchg mov cs test sub mov cmpl pop imul inc loopne pop mov and mov adc add fcoml mov and es pop rcrl adc jg add test pop lods add cmc xchg cltd sub call adc dec xchg pop in (bad) xchg les add and jae adc inc add les in les mov lret and enter daa outsl call mov test cltd mov loope cmp jno and pusha add sub sbb popa clc add inc and je lcall mov movsb into push sarb (bad) movntq out imul test pop stos inc cs outsl cmpsb mov pop cmp shll dec pusha loope les xchg add ds outsl (bad) dec popl add mov lahf clc fucom outsl inc add int3 inc call insb xchg mov incb inc shl push sarb xlat add sub popf jbe leave xor add arpl shr cmp in add fnsave add fiaddl inc popa sub and ret mov cmp add lock push inc or sub data16 bound adc push push and mov (bad) insb nop dec pop xlat movsb sub pop xor adc or dec sbb test rclb movsl xor jae movb call es pop sbb je add cwtl cmpb push dec push lret inc jmp pop out xor mov xchg cmc ret xor in ret mov loopne jp jge inc int dec pop add adc mov pop daa add inc push add adc sbb pop push mov cltd into xor cltd pop xchg loopne xchg add inc shrl outsb add int3 or mov insl shlb mov cmp cmp ss push ret and cmovns adc insl jp in sbb or movsl or movsb sub add jnp add cli pusha test or xchg lahf pop mov inc mov jbe inc pop mov js and int xchg stc cmpl jb in shlb mov js das push inc lea sub repnz std push dec mov pop mov insb inc or add adc jge cmpsb pop dec jmp cli inc add and jmp inc loop adc pushf dec rolb popf faddp out addb cwtl mov add in mov js sbb ja pop or inc xchg test addb sbb jp adc mov sub push (bad) nop mov aam sarl stos fild mov pushf add inc clc jl sbb inc jecxz cmp sahf insb sub jo xchg add pop sub js out inc sarb lods add xor or jmp or xor lds and mov xor pop mov enter or add adc nop xchg push mov mov adc rorl fdivr fwait cltd push lock pop pop popa data16 jmp test out orl out sub std sbb adc dec daa scas (bad) jbe jno pop icebp xor aam cs jae js xor enter fwait scas add and clc hlt pop dec mov sub gs push xchg sbb hlt push sub jnp cmp sbb push add out xchg repz pusha sbb adc les rolb das arpl sub clc and int3 icebp scas leave lcall xor xchg clc pop fmuls push dec xchg ljmp adc jecxz jo fcomps test mov rcrb test jmp jno psllw mov xor mov cmp and out and mov in test add rolb (bad) mov xor and cmp xchg test int3 divl xchg xchg test stos aam mov movsl imul and jnp (bad) lock pop mov jno push lods mov push add ret xchg mov ret cltd lahf and sub adc adc and xchg outsl sti cmpsb data16 xchg mov mov arpl adc aad mov xlat rclb cmp shrl mov push mov lahf jl js jmp es jbe add mov sbb mov outsb push pop or lcall cwtl int or inc push mov pop or pop and daa movsl sbb testb mov repnz dec out int3 mov sbb pop rcrb mov sbb add (bad) daa dec push pop orb test bound addb jg inc jne push or dec cltd mov adc sbb xor inc sub setl in add fnstcw mov add dec int mov cmp test cmp fdivrp out lcall inc xchg push ret outsb (bad) ds mov imul clc and test lret nop clc jmp dec test addr16 cmp sbb jbe adc dec sbb jne daa jecxz cmp je xor inc xchg lret aas popa int mov out cmp int3 jmp mov add popf mov dec pusha inc fsub into cmp push loope xor inc sub jo pusha mov pusha adc pop mov sbb daa fcomps mov movsl jge push test adc insl icebp sub xchg pop push enter fbstp cmp dec jb fiaddl xor mov ret mov loope js std jge push xchg add out cmp imul mov push and lock movsb rorb test cltd insb add mov ret or or loop mov push in rolb ficoml add push mov add adc xor push test mov movb into in fcmovb imul add and sahf daa pop mov mov add mov (bad) scas mov mov (bad) test and pop cmp cmp cmp inc mov roll imul cwtl add movsb pop fst (bad) cmp cmpsl lock rol test das adc aas add mov mov and mov movsl rcrl sbb test mov mov iret ret sbb (bad) or loop push mov andb (bad) mov sub insb sub pop sub jl pusha mov inc or jo add (bad) pushf mov sub in data16 mov pop sub das arpl ret jmp enter sbb inc or aaa and addl lcall push (bad) or fildll aad add test clc test xlat ret and je and mov frstor mov xor mov ds test mov ja sbb insl pop jge mov or jo fadd pop (bad) push fs out xor add cmpl lock adc push out add sbb sbb xchg test or mov iret daa lock aam in sbb insl test mov into mov sub mov enter repz xchg push fs gs bound mov inc test jmp in push lds fmull push out fstpt or sbb movl std imul or iret lcall dec jbe (bad) call lock cmpsl ljmp pop loop cltd mov movsb int3 push mov aad mov inc mov add (bad) push jmp inc fnstsw or (bad) sub jg int leave sbb push cltd rolb and or push push mov push mov dec jno aad lods pop pop popa sbb loopne push jo mov in mov clc jnp popa insl pop ret fsubl inc lods push pusha test test or cli add mov testl nop add sbb mov ljmp pop outsb cmpsb xor inc xor test pop push push adc add inc dec mov mov sub or iret jp inc push cs pop mov lds inc add cld or push mov (bad) test scas jns and sbb aaa in cmp loope pushf xchg lods lea test inc mov mov jmp jp xchg clc test nopl or mov pop call inc mov xchg (bad) (bad) xor ja out or mov daa inc les pop mov add pushf (bad) int (bad) in xchg test aam inc xchg and test test xor pop sbb and bswap or clc (bad) push loope adc xor gs inc test sahf cmpsl add pushf test inc mov mov add push push hlt or mov mov call add insb outsl and test sub mov mov inc xor sbb dec cmp ret or mov (bad) aaa inc dec je xchg popf add (bad) push stos (bad) ljmp adcb sbb fcomp or aaa ret jp mov cld lahf (bad) inc clc adc test ljmp lock xor adc sarb push jg pusha sbb outsl cmpsl data16 mov sub pop faddp loopne shlb arpl fistl mov sarl sahf mov pusha add in daa add adc and (bad) and sbb mov out in jb xchg cmp ret dec and in nop sub enter repz stos and out and add pop inc mov sub cld or mov rcll clc das sarl mov and cmpsb (bad) inc or movsb push mov jge and dec push aam add xlat ret pusha sar test and add les ja sub push aaa or fstps xor dec lret movsb cmpsl jp fisub js add scas add mov popa clc (bad) and sbb adc adc mov and addb je fldt ds add mov pop push mov adc push movsb mov cmp inc movsb call movsb push mov aaa sbb icebp xchg xor add fnstcw imul mov data16 dec imul repnz inc clc cs (bad) arpl and shlb adc pusha pop js and fdivr notb cmp fistl add cmpsl stos cmp jne daa dec adc mov or mov out test dec and and adc or inc scas fist andl test mov cltd sbb add pop popf add pmaxub jecxz xor lcall bound addr16 pop (bad) push add stos (bad) mov add add imul add test adc sbb or into stos loopne or add xor sbb push mov aas js leave sbb mov fimul (bad) push jno cltd add sbb scas adc push bound mov (bad) pusha cmpsl mov push pop push pusha lcall cmpsl int3 adc pop loopne icebp test andb lcall cmp clc daa push push lods ficompl cmp and loopne add dec mov jnp dec sbbl frstor xchg add ret sbb stc fisubr test (bad) repnz test dec pusha inc sbbb sahf xchg repz push icebp scas leave or lds add ja movsb pop aas sub nop je push nop and mov fdivr or std leave push cs loop pop lea add sbb icebp mov jge scas (bad) div popa push sbb inc add adc mov out rorb mov xchg or dec jae nop orb icebp mov aas imul inc test mov sub xlat mov cmp ljmp daa and pop jmp and sbb mov in repnz jns leave sbb and (bad) rolb xor adcb fcoms rolb or dec adc adc cwtl cmpsl loope test sbb pushf adc (bad) hlt (bad) sti push aam (bad) adc push xor xlat movsb lcall js subb mov cmp inc sahf add mulps xlat sbb pop inc (bad) pusha mov jo xor pusha in push mov ret push orb faddl push movsl mov jne xlat jno pop xor pop bound pop xor out and fdivrs cmp (bad) dec inc or xor and or lahf clc mov cmp and or cmp (bad) cmp hlt fcoml push jb std sbb insb xor adc push cmp add sub push and outsb add orb ficompl mov lahf cmp and rol push and leave jbe add in push cmp pop call mov cmp (bad) push and or (bad) pop push mov das fsubs js add mov test enter sbb adc enter mov (bad) mov xchg test rclb mov cmp and aam (bad) dec jge popa movsb data16 pop mov (bad) call iret sbb mov mov cmp lea enter mov test adc adc insb inc leave call push adc xor sbb mov leave or cmp addl push inc test and adc jae add push mov pop xchg sbb add bswap fimull jae in xor movsb stos sbb aam leave (bad) xchg mov push inc push int3 pop add xchg loopne inc sbb leave sub add pop in jo sbb jg das xchg insb xchg in xor add push lods add arpl mov xor cwtl or lods pusha inc jbe into jl dec sub sbb xor adc inc sub or dec add pop inc fsubr rclb in adc xor icebp call sbb repnz cmp cltd cmpsb clc and clc add cmp leave pop dec pusha mov cmpsl adc xor sbb mov daa sbbl mov pusha je stos fidivrl arpl jbe xor sbb jno icebp es mov add sub pop sub or clc repnz mov mov push mov aam inc out xchg insb ret and lock (bad) dec cmp xchg sub cld mov xor rcl pop adc icebp test hlt cwtl mov call arpl popf cmpsl or and mov daa inc gs jns jb pop sub addl cs (bad) ljmp icebp aaa dec dec jno dec sbb sub fsubs pushf and pop hlt rol enter in (bad) dec shrl jge mov jo sub or cmc je (bad) xor imul sub xor adc jbe adc add sub and (bad) jns je lock add aaa jb shll push sub add or out sub mov pop iret mov sub test add and dec imul cmp into pusha xor push fadds and test cli loopne arpl gs or les in add (bad) in mov je jo pop (bad) xor repz loopne add mov insb push mov int3 xchg rcll stc lods (bad) adc add call push sub add or mov push leave mov ds icebp xor dec cmp push repnz and sub sbb nop xchg (bad) sti cltd (bad) push les bound in adc xchg xchg jbe push mov sub bound mov add andl stos jae lock sub js push repnz (bad) inc xchg mov jecxz pop lahf icebp mov test pop adc and outsl add in mov push cwtl rcrb in rcll xor loope adc cmpsb mov or addr16 nop int shlb inc cs mov jmp push fnstcw (bad) aaa sbb jmp dec loopne sbb add add jne inc xchg in adc mov push fstps dec fucom add and test add xchg mov xor enter mov (bad) mov xchg mov push pop icebp xchg in and pop dec insl inc pop mov pop add iret shll sbb fisubr cmp mov xor mov cli xor mov and test f2xm1 jne or (bad) and notl mov or ljmp mov xor sub popa pop jb adc add push sarb aam insb xchg mov cmp hlt cltd imul sar xorl push icebp jmp popf add pusha or in adc jecxz inc cwtl int3 add call cmp add dec fs add pop loope push mov jno lock mov sbb pop daa movsb mov fistl sbb addr16 dec test mov and aam add fmul fist mov adc cmp jo sti or icebp push cmp mov mov sbb sar mov and (bad) faddl inc inc jge mov fwait dec jne nop cli aam in jmp hlt push std adc pop fcompl daa push xchg popa add dec adc mov lcall cmp mov xor cmp jg or jno pusha push pop sbb fnop push je cmp pop (bad) je add xchg icebp adc add stos stos jmp das dec in sbbl ret mov aaa add inc sarl call ret pop push and push jl add leave stos lea pusha mov popa xor shr jl xor enter push (bad) decb scas pusha ficompl ud2 movsl fxch sbb mov js mov cmp pop outsl stos inc movsb pop adc mov mov cmp outsl add ret mov call std pop jge jecxz loopne nop sub push ss into sbb cltd jbe loope shlb fcomi and rolb add inc loopne mov (bad) jae xorl ds in ret cmp cwtl clc out dec add aaa sub inc dec sbb jns mov rolb test je xchg and popa sbbb xchg pop mov inc xchg sub add rolb loopne mov cmp pop call push jge sbb lods mov add rclb repz add arpl ficoml into js add aaa and dec das xchg (bad) rclb int3 inc nop data16 adc sbb dec mov fldenv push push cmp sub adcl fidiv sub add mov mov mov fmuls cmp jno or push mov pusha push xor xchg sub xorb push mov pop or add test xchg add sub aad ds push pushf ds lods add int ja mov and jae xor lret int ret jne inc cmp pop add cli call adc push mov mov dec pop je mov orb and mov nop cmpsb aam loopne mov loopne lock sub fld1 push pop lock orl dec aad sbb rolb add aam fdivr jge lock cmpl in dec push add adc pop sahf fcompl and scas int push lret pop nop add add subb test call ss movsb es je xchg pop andb sbb push lock push sbb ficoml test hlt pop aam add mov push out mov bound sbb and call pop aam and and adc out addb cmp int3 add mov ficom in ret dec jne mov test rclb test mov data16 pop lea loope cmp xchg inc xor dec dec sarl mov pusha xchg sub les test add cs addb xchg enter mov sbb push xor add fadd mov mov aas push cmp mov pop push cmp in xchg add xchg addr16 fild call movsl xchg xor out adc lods and rcrl add mov mov outsb in mov or xchg mov push ja or xchg sahf push mov jns xchg fadds mov and addr16 xlat dec nop (bad) pop (bad) push sbb push adc fsubs cmp movl fwait mov add fadds push les sarb lcall shlb (bad) add (bad) enter cmp push xlat fsubrl push hlt dec mov pop rclb cmpsl dec add mov inc sub (bad) cld imul pop (bad) mov cwtl adc lock push enter jnp es add enter add adc je dec rcll inc sub add mov in dec pop and xorb insl sbb mov ret cmp pop xchg out and adc xchg or inc outsl hlt movsb cmp adc xor jle cmpsb out lock in jae test mov sbb fstpl movsb popa pop in mov mov fdivrl fs push push jp bound dec dec adcb mov dec (bad) jo adc pop adc push adc adc loope insl add cmp popa pusha push push xchg andb call and sub xor mov pop cmp and lcall cmp test pop test cmpsl aaa iret push and cs loope inc adc arpl lahf rolb (bad) and and and loop sarb in xor xor aam mov outsl (bad) pop fild pushf inc sbb aaa je das rorl out adc add icebp int3 jno das jne and aas add push imul mov push int or push pop push jbe lret lret call cmp or loopne push pop fcmovbe cltd push or or pusha rclb add adc cs xor dec lds imul loop jo add xlat mov lods arpl stos push mov cmp xor scas mov sub sbb pusha aam push jnp stc lret ret sar mov and add xor xor xchg xchg cmp add pusha mov mov fnop xchg or test jne ror push mov add shrl mov inc pusha scas add aaa (bad) mov push mov je adc sub xor jns cmpl jnp dec push mov mov (bad) aas adc pop inc mov cwtl dec fidivl add sbb xor hlt and scas push sbb inc adc ret and push and les iret (bad) ja popf jno (bad) push fs inc cmp cwtl and pop and pop add pop mov push stos jbe cmpsl add fadd and inc mov sbb and ret test or add or ss mov add (bad) or pop pop xchg cmp inc clc (bad) mov dec leave les xchg sub mov scas sub jmp xchg fs or in out or imul shrb out les or (bad) mov sub cmp stc sarb adc js int3 sbb popa mov push or jecxz dec jo data16 pop adc outsb pop or xor andb movsl arpl js xchg xchg test lods pop nop js inc into daa pushf insl jbe ffreep pop cmp gs add repz cmp shrl aam sbbb test fwait jns pop shrb (bad) pushf mov stc add inc lcall sbb aam cmc test insb scas inc nop pop in pop mull add pop jle push push xchg or pusha orb pop mov jmp popa in sahf xor mov rorb mov sbbb js orl and pop cmp psignw enter scas cli aad pop sub enter test cld out dec lods imul inc push fsubs cmp adc jmp (bad) nop dec das mov mov or lss mov add fistpll mov flds clc sti cld (bad) adcb pop push add repz in adc sbb xor and aas mov and js pusha mov outsl movsl xor add mov mov ja sub mov or test add aaa lahf xchg mov fstp sbb push xchg lods sub mov test cmp incl test out lock (bad) mov xor mov sbb inc mov xchg sbbl mov sbb add imul or adc add fcomps jge inc cmp push adc inc and je (bad) ja xor lahf cmpsl and add adc jnp fldl adc (bad) xor test lds test and dec add bound test adc fiadd fildll sbb add sbb mov mov and fidiv call inc add loop out jbe pop add mov and cmp jb lds adc hlt xor push sub inc xchg rolb sbb fidiv es mov mov imul add pushf cld in add testb adc pop mov subb test push mov cwtl cmp mov mov dec push testb add mov add rolb rclb fstpl xor push orb cli pop inc mov xor xor dec icebp sub nop add xor (bad) xchg lock or pop adc add mov jns mov and add loop cld sbb cli (bad) mov push dec sub call fbstp adc movsl imul xchg mov mov sub lret xchg lahf cmp cmpsb adc dec mov xor adc aam mov test cmp outsb enter (bad) ficomp mov or adc pusha adc in mov sub sbb xchg dec (bad) lock inc xor sbb lea test (bad) sbb mov pop (bad) nopl push inc imulb js std roll inc dec jge (bad) jmp out jo mov decl push ret (bad) mov pop mov lea sbb add add jecxz sub inc pusha cmp inc add std sahf adc enter and das mov test inc adc push jae inc mov loopne lods incl cmp sbb add insl mov pop mov add sbb and jne jge inc lret ret cmpsl adc stos and xor mov mov ficompl mov mov ds or out mov xor cwtl cwtl ss repnz mov jge stc lahf jg stos and adc adc jno pop cvtps2pi outsb mov add ret or imul sbb fcmovu or enter add lds loope (bad) cmp sarl cmp xor sar enter rcr (bad) out ret lret out je mov stc sbb jmp mov adc pusha out sub sbb sbb icebp enter pusha pop xchg add das push sbb sub nop push stc add (bad) add ffreep xchg ret jns sahf sbb sbb loop call pop mov add loope mov dec and push repnz xchg cmp xor lret add xchg push sub nop or aaa mov and xchg inc add loopne jbe mov jle mov add inc aaa inc add out nop add sub push pop inc jmp rcll (bad) je movsb hlt inc ss ret pop adc lret cltd dec xchg shrl adc mov sbb fs aaa xchg sbb pusha or push mov mov int3 add fstp js ljmp mov mov les lea mov jp ficoml add inc and push or and scas cltd mov aam dec sub adc iret es adc ds or or lock test stos cmpsl adc or add jno rclb pop adc outsb rorb lock pusha pop nop fidivl fnop xchg or push mov jmp mov insl sbb sbb or xor sti cwtl cmp and pushf bound test mov insb stc test mov jmp insb jp int3 adc cmp adc add adcb inc popf vmovsd adc scas jmp test mulb fdivrl pop aas into push or pop js or bound hlt cmpb aaa lsl or dec hlt add sbb in adc movsb sbb or inc aam or or lock (bad) enter cmp int3 fidiv inc rclb xor movsb rcrb inc fsubs cmpsb pop and insb mov fwait sub push leave mov pop dec cmp incb adc stos sbb int3 mov mov ja dec sbb add sub leave inc adc push xor xor fs fnstsw or add aas out cmp test xor cmp push and pop mov (bad) scas dec inc lods mov inc dec and jg push in stc stos lods jmp or lock push mov mov cmpsb mov or add fwait sub stos adc push cmp pop andb add mov adc aaa loopne xor jmp xor and xor push inc xor sub in cmp pushf (bad) jno fsubrl add je rclb adc mov sub mov or or xlat nop fs test mov decb shrb xor inc adc jmp mov or movsb in add inc add adc mov dec (bad) stos and mov cmp test jmp push test in adc jno je ss loope mov jp jns xlat adc add stos call sti xchg clc (bad) je out add (bad) addr16 fcomps sub leave repz into ja insb and or test push inc fisub or loopne clc jne orb mov data16 into add inc lcall js adc sbb xchg cmp cmp adc mov mov cmp and xor rol and jnp lret mov sub xchg push cltd lea jo push adc push pop xchg mov sahf cmp lret incb cmp loopne jns es push add js pop lret data16 sbbb sub (bad) cwtl sbb out xadd ss aas sbb repnz and sbb nop lods add rcrl (bad) and inc add and orl dec rolb je xchg les dec mov adc xor mov add cmc and add loopne mov cwtl pop clc in jl insl mov and mov imul movsl rolb cmc test cmp jo setp sbbb or pop dec icebp out sub popf test pop and ror or pusha ja call sar mov sub or add sbb pushf (bad) pop js es movsb sbb push cltd sbb sub and out dec lea pop pusha mov jo sub xor mov mov fldt push pop andb int aam push or pushf iret and imul call inc (bad) mov mov lods cmpsb movsl xor clc sbb xchg pop pop sahf dec pop mov mov jbe mov ss test add sub lods inc sub mov add or dec insl jp jle (bad) cld pop rolb xchg mov push push andl and add sahf or push gs jae adc add (bad) add clc push or inc add js fdivs mov mov or wbinvd or cs movsl cmpb lahf call cld add sahf jp (bad) push popa gs sbb stos mov cmpsb mov aas xchg ss inc and (bad) ja call inc leave add pop push push test pop push inc rcll pop push movsb or mov inc or divl mov or inc or dec and test loope out mov sbb cmp add and jge add sahf cmp int3 (bad) and adc in adc dec inc insb xchg bound sahf je or mov mov nop movsl adc fldl push clc xchg enter dec mov xorb sbb add idivb dec push and add (bad) out imul cwtl lahf stos cld sbb sbb cmp xchg xchg lock sar cltd add sbb out xor dec inc inc js or or sbbb rcll adc or cmp xchg mov in push sahf and xchg rcr pop inc gs and cmp cmp cld cmp test sbb pop mov inc push dec rolb cwtl dec add dec lcall mov rcrl inc mov and push or pop inc test inc (bad) clc stos loopne mov sarb adc jbe sbb sub mov add cmpsl and bound mov ret sub nop movsb push mov add repz jo call andb xchg pop iret pop sub outsl and into rcrb push push xor adc loopne je dec out push rolb push add dec fimull cmp stc mov jecxz iret jmp and (bad) add inc pcmpeqb js xor xor pop fwait push xor lock pop sbb ja mov and sti sbb outsb js mov mov ss inc cmp jnp add mov or sbb add inc adc ja iret xor mov cmp or add rolb (bad) xor jo jle into cmp mov mov inc out add and movsl push add jmp xor inc movsl push sbb add es into cmp cmp cmp sbb or scas orl xor pop jmp add dec and add ds (bad) icebp xchg popa incl push dec fstl xchg jl push js push sub shlb fwait mov pop add inc sub xchg (bad) jno inc test jmp dec push jecxz sub cli and (bad) into jo jno movsl ficomp lock sub xchg add hlt sub mov sbb fnstsw ljmp pushf inc push test pop push mov pop jl or add adc add mov mov inc rorb mov movsl lcall push insb (bad) daa test subl into mov aad dec lea test or js jg and js or inc adc xor add stc js out dec pop fldcw push incl loope and mov mov cmpb je jmp cmpsb pushl add jo nop test repnz add adc or jg xchg (bad) mov rorb movsl dec inc add sbb sbb inc mov lock lcall inc dec pop sbb or jl mov in cmc dec lods lret xchg add pushf add pusha inc ds js push lret cmpsb inc or sbb jb adc adc push sbb repnz cltd into add jne or mov pop mov sub and push shll add add mov sub clc or mov add rolb ljmp movsl lcall add or push mov jbe cmp fimull loope cs add add das xchg fimul sar cmp add dec lods sbb pop jo cmp add mul imul jo inc mov cmp pop mov inc in insb and fldcw jne jecxz ds fild sub push sub popf lods fs in add loopne inc jle mov test xor or push sbb and push cmp dec mov inc push or dec cmc and dec xor jns add jmp sahf int3 sbb adc cmp movb mov rolb call push imul or sub into loopne adc or sbb mov adc fcomip add ljmp sub mov les cmp or cli cld or add jp xchg mov repz and sub cmp addr16 test or cs pop jl leave scas xchg inc mov xor xor add mov fild dec sti cld lcall push mov nop or ret xchg fadds inc or xchg pop dec test cmp insb fmuls lret add shlb adc (bad) call push sbb shlb repz add cs insl mov sbb cmc dec arpl rcrl and xor in or mov xor xchg adc inc and insb or test xlat mov icebp dec out xor in movsb ret (bad) sbb outsl xchg fsts xor cmp insb dec xchg add stos test push cmpsl add sub mov lret mov pusha cltd (bad) push mov sbb mov mov add pop pop push cli jne push int pop or cmp mov rolb es adc movsl jl sarb and outsl pop mov (bad) in add scas xchg popa hlt fs lods and cmp add or fldl pop add pusha hlt adc in or adc push inc popf loope adc jl loop aam gs jecxz inc mov nop rcrb add xchg mov push cld push cltd out adc and cmp xchg js pop call in sbb in je int3 or fwait mov inc imul dec and mov add xor sbb xor imul js sub dec lds pop mov or arpl xor add pop add dec mov or add subb mov add adc and jae or dec and mov adcb hlt dec fwait push push test subl in stc and or sbb js out adc out add dec lcall leave xor add push xchg sbb inc and fadds and arpl (bad) push in cmp fsubs je int lock xchg mov or xor push jnp cmp adc fistpll movb loopne push jno fwait add mov outsb adc ja add gs in add pop in pop lock cltd or pop ds jno xor push cmp add add and add pop shll pop mov int cmpsl push popf dec and xor lahf clc sbb pop fwait or (bad) icebp add mov cmpsl cwtl xchg and test add sub je adcl fwait pushf movsb sub jae cmc dec psubusb lcall insb loopne or call inc lods xchg in xchg pusha pop adcl cmp push and cmpsb mov mov sete jae and inc xor stos mov and movsb adc imul mov pop sub ja jmp nop mov test mov div dec ficom cmp cs lret add pop dec jmp push mov sbb pushf adc in adc lcall in xchg dec push jmp xchg mov cwtl int3 cs je xchg mov int pusha dec mov into jmp flds sub stos jb cwtl dec add out imul ficompl or ret insb mov cmc in push mov sbb pop dec mov mov sub xor cmovp jo ja add cmp jnp hlt xor enter ss inc fs push insb mov add fimul add dec int subb adc inc add push sub std push xchg cli adc test insb lock pop cmp mov cmp data16 and loope and sub lock jge xchg mov subl adc jo mov test and xchg add pslld or adc test mov push mov lcall out and nop fiadd dec push sbb sub xor loopne jno mov sbb pusha inc mov das mov inc scas mov xchg add fistpll in fwait xor cmp loop adc loopne je push lock setp and jbe and sbb xor fwait (bad) sub clc xchg jb insb jbe sub or xor lock jge nop ss insl or xchg nop enter xchg xchg (bad) test add aam fs dec mov push movsb and pop out add dec rcr adc fwait or (bad) mov push lods outsb xchg sbb dec fisubl (bad) mov cmc add ret add outsb andb shl pusha sbb sub mov add outsb jb bound jmp add stos fiaddl mov pop xchg dec add cmpl add sarl test xchg push mov pop jae or dec nop out jmp ljmp xor nop mov icebp iret sbb xor xchg lods add mov mov (bad) and and inc loope rcrl fisttpll jbe outsl adc add or int repnz mov adc cmp and or sbb cmpb add jne jg fistl dec lds pop insb les adcl int clc stc add fisubr sub out fldt xchg inc and aam jl mov into cmp lcall ja sahf fcompl xorb insb movsl js pop jae movl fadd push arpl add mov sub cwtl divl and adc cmp call repnz lock out push sub or mov mov or dec xchg int3 mov xchg test test xor adc add cmp scas ret cmp popf push inc rcrb adc add jae pop cmp jb fs mov cmp cltd in xchg push push fcomps jmp lret mov or cmpsl fwait lea scas hlt xor cmp mov dec andl push push insb or cmp enter sbb cld xchg out fcoms inc xor mov pop mov fadds fsubl fs mov cmp pop orb test mov inc jae adc pop sbb out fidiv and add add pop mov sti mov pop jo ds movsb push fsubrl inc dec push mov lods loop ja stc pop pop pop jl add mov add add imul mov add sbb (bad) mov add cmp push rolb movsl push inc lret cmp faddl add xchg jecxz je add lea or shrb mov fwait and adc test jp mov test andb xor jecxz sub adc andb shlb add imul add loope sub mov and inc arpl adc cmp push add add xor xor movsl add scas daa add ret test dec and add jae pop add pusha sahf inc mov sbb add sub fs push js clts hlt jns or or push divb or and cmp nop push out cmp mov cmp lret jecxz ja loopne jnp ja pop sub shrb flds loope or gs jg push add sub (bad) cmovno ds add jb cli pop add cmp ret scas pop xchg cmpxchg outsl or das sbb adc adc sub int3 ja sbb pop xchg pop adc cmp push push add fchs ja sbb xor das pop lds sub and sbb push push jg in or scas popf addb sbb in xchg cmp xor movsl or mov dec or push outsl lret push test sub inc (bad) negb xor xchg xchg add pop xor mov and xor clc cmpsl add sub movsb lods pushf inc mov lock in mov add cmp push and inc sbb (bad) jne sub test xchg ja fbstp add (bad) dec outsl mov adc sub pop xor test repnz mov popa mov clc xor inc pop jbe std jo ljmp inc jecxz jge,pn cmp xor sub and jnp les adc out lods pushf aas sbb mov and lahf mov push xor mov sbb inc push mov xchg mov xor add jle fnstcw lret in and icebp pop xor push cli adc loope xor xchg dec cwtl sub pop clc test int3 ret je add mov mov push mov or lahf ja inc jo push test nop in jno sub movsb bound nop aam aas iret dec or xor add icebp arpl xor jle loope loopne add push aam subl xchg inc pusha inc mov push add das push ret jle push dec stc les push rorl (bad) in incb rorl xor jns lahf nop add push into loop add jp xchg add inc jl,pn xor xchg addb cmc sub das mov lods add pop arpl in mov or jo xorl inc xor out cmc push aam repnz adc jae shrl js add out gs cltd les and test pop sbb adc inc leave jmp (bad) mov inc mov sti xor adcl icebp lds cmp (bad) push test scas inc scas inc adc inc mov (bad) sbb pop rorl cmp inc xor or sbb lar push mov pop stc mov cli adc adc add sbb inc mov (bad) aaa fiaddl sub and inc inc xchg dec xor movsb inc cltd add adc mov stos pop dec scas mov in jns pop push movsl xchg mov mov scas sarb and add and dec mov hlt pop andb push (bad) test mov xchg stos lcall fwait and or cwtl jmp pop test (bad) out aas xor out jno sbb cmp sbb pop cmp add call sahf add bound mov (bad) arpl cmp jne dec cmpsb int3 add cmp int3 inc nop push sub mov adc xchg and stos pop jae fnsetpm(287 jge cmp jle or dec mov js imul push xor push or fsubrl jl xor mov dec test movsb int3 (bad) movsl dec push push jnp (bad) and add fstpt pop pop add cmp inc adc cwtl sbb outsl xor (bad) pop xchg jl adc cwtl mov lock pusha push xor jae cmp adc mov in xchg adc (bad) jl add idivl ljmp lret xchg ja add fucomi mov (bad) push dec cmp add jo rorl jae xor dec or les cmpsl in push inc mov cld add mov xchg imul fldenv imul xor iret test (bad) cmc cmp fldl mov mov push decl xchg push inc jg xchg xchg add into dec repnz leave and adc mov pop jnp push inc push cmpsl push cmp xor pop and dec add dec rcrb test fs sub pop test stos stos add movsl mov pop in in bound inc pop push adc adcl flds xor dec push inc cmp mov dec int3 loop outsb dec and jnp adc pop xor les mov push pusha imul aam adc dec int3 loop inc pop push adc add inc loop rcrl addr16 jl sub cmp or cmp inc xor adc iret adc insb xor xor pushf sub mov bound cld jns es out sbb in scas jnp mov aaa cmp and in andb push push hlt push fwait xchg xor cmpsl les sub or loopne add scas arpl pop xor pop shll enter add popf jno insb pop or jne push les lock cld sub push scas in sar mov jp pop enter lds cmp dec cmp nop (bad) mov cmp jmp push xor inc cld jl sub sbb mov xor leave scas data16 aas hlt lret sub cmp or mov add ja sbb mov arpl shrb dec and popa lahf loop lds xchg adc inc mul push jne add mov jb scas jge sti jecxz loope test push add sub add sub scas ret int3 xor add into out and mov cltd xor mov scas lock fdivrs xor inc and xchg mov adc xor push fadd icebp xor push xor xchg xchg cmp push loope and pop inc pop inc cmp adc in scas sbb cmp rolb nopl push dec xor adcb pop dec es xchg rol sub fisubrl dec adcb xchg das push adc jmp out in push cmpsb xorb push nop in mov cmp push fldl2t int andb xchg add dec push adc sbb test in rorl lods jmp inc lret or adc pop cwtl nop add xchg pop test jp mov sub push jnp (bad) out shlb scas xor out pop jge or xor push jmp fnstsw mov inc mov and add fiadd aam mov cmp out stc cld (bad) int3 inc int3 dec in adc xchg wrmsr cmp or (bad) xor mov sbb dec sub fldl2t (bad) mov pusha xor push enter loopne cmc cmp adc pop out push pop clc add dec (bad) lcall inc es adcb push inc xchg in mov pusha add jb leave push mov and adc cmp les pop add add or repnz arpl int3 dec xor xor push mov inc popa cmc fldcw or lret sbb or and adc call push rorb jnp jb imul cmp xor lock insb or push movl dec into lock enter (bad) jl jnp int3 mov and pop inc jo clc ja push cwtl sub mov bound dec lds lods or adc clc mov jb inc rclb dec dec in mov aad rcll aad xor mov in leave (bad) jmp add sbb mov sbb jp or cmp xor and pop add gs xchg xor xor and int3 or andl lret cwtl adc orl lea sub or mov stos xor in arpl mov lret (bad) jmp sub in push xor push jp add repnz fiaddl lods stos xchg fistp pop fisttpll lods jno mov fadd push not or jl xor repnz and jmp cmp add jne push sbb nop nop mov push pop inc popa fadd (bad) sub test xchg add inc xchg inc xor and add flds sti mov mov (bad) out movsb leave mov paddb shrb or (bad) add aam out and mov mov mov repnz scas xchg cmp out cld popa add push xchg scas add dec push in jecxz add lret sbb dec mov inc test push fldenv inc and add call lds and incb add adc jne add mov pop sub sti popa or and add aas movsb fwait test dec xor cwtl cmp std add rol mov mov jnp movsb and adc scas stos add cltd lcall push inc pushf mov adc pop pop dec int3 xchg (bad) or cmp sbb js sarb imul sub fdivs pop (bad) in xchg xchg inc lock test xor je out adcb lahf sbb mov xor add rclb in adc call and dec les and push add xchg xchg mov loop ret inc fdiv arpl inc jne xor stos xchg push dec sti xor sub aas mov and lea in nop popf pop out mov mov pop and hlt add jge xchg jp call in daa mulb imul out sub xor nop clc xor shr pop rclb call lds pop cmp scas ljmp cli leave push push add call mov std or lods or ja (bad) ljmp xor mov inc shll mov stc or adc and scas pop mov cs mov dec cld mov add sub int3 pop xor cmp sbb imul bound nop ljmp mov lcall pop pop push push sbb cwtl sub jmp inc cmp lock in es fmuls mov jbe mov xor iret or andb lret loope inc iret dec adc jmp out jp mov add sbb xor mov call idivl aad insl xor repz out cmp mov cwtl fisttpl add decl sub dec fisttpl jmp insb in shll add pop std and loope sub (bad) lea xchg and or hlt xor jg cmp flds pop mov cmp and or cwtl cwtl mov mov lret sbb jle and mov insb lcall sbb pop push xor sbb nop fimull movsb jae stos cmp inc or daa bnd mov xor addr16 push xchg jns push hlt (bad) mov and mov hlt xor adc cmp jp adc pop pop pop popa pushl ficoml xchg inc add aam test lcall mov jp popa xchg mov add or push xchg sbb pop test pop and nop mov das push cmp cmpb cmpsl enter arpl rcrl pop push stc adc out or jle mov cli jae rol dec ret cmp inc cmc add shl ja shlb push ret call lds pusha or test jne jle cmp dec sbb (bad) js cmpsl cmp pop jmp xchg lret idivl fsubr jnp jmp jo xchg jl lock pop (bad) cltd add adc jno pop xchg das push inc cmpsb xchg hlt push and ljmp ljmp (bad) hlt stc and or call icebp jno sbb add scas push mov pop adc cld nop je call loop mov enter add dec cs call cmp int3 adc js and jge sbb or in inc add cmp dec mov mov mov (bad) rcr loopne cli xchg inc or int sbb cs push jge cmp nop mov mov repnz mov aaa jo mov dec sub mov push add inc mov xor or pop jb ljmp add dec mov int3 (bad) push cli clc test rolb xor adcl mov int3 add lock data16 adc (bad) xor inc cmp sbb jecxz pusha rcll add adc adcl xor (bad) sbb movsb xor mov sub ja cmp jo sub push jnp lcall fdivrs sbb or ficompl mov jle clc push (bad) jae xor popa add insl push xchg lods int3 xor adc arpl hlt in or mov das add or xchg mov pop sub and cmp sar cli mov cwtl mov and jmp shlb mov jg movsb jne imul mov pusha or mov adc dec and adc inc lods pop push xchg lahf int3 in ret xor addl call in cmp loope out cs pop push xor adc cmp mov xor hlt and xchg insb pusha movsl xchg adc mov dec add hlt push jbe inc xor cs xorb dec xchg sbb dec adc in jl mov mov stc push xlat jns ds and sarb sbb mov (bad) xchg pop sbb dec adc sbb xchg call bound push enter movsb js adc xchg adc fsubrl mov sbb push call in adc sub push push mov dec cwtl movsb and aam call and in js mov xor xor jnp mov inc add in xchg jecxz inc push inc pop ret cmp loopne hlt pop xchg sbb pop jg mov or jmp add push call jle stos xor cli into test outsl lahf inc ss fadds rcrl xchg sub xchg ja mov (bad) mov sahf ss cmp cmp or jmp or jg addr16 add jp loope inc or adcb movsb xchg jo movsl xor nop jmp push out and into mov test repnz adc inc psrlq jo outsb add aam or sbb mov adc cs xor or stos push adc push push lods jno hlt jne jl outsl add ja xchg xchg call call stc pop sti pop (bad) (bad) lods sbbl adc fwait test or add jmp loopne mov xchg pop out pushf js cmp ficoml nop js (bad) sbb test cmpsl sub addb add xor ficomp insb and cmp add xor ja cmc inc or and test jnp jo in mov push inc clc or loope movsb inc lcall cmc jl hlt rolb aam sbb pop jb dec movsb repnz or push fisttpl adc hlt mov xchg orb inc xchg mov sbb das lcall adc nop cmpsb add sub dec cmp mov xchg mov jle or mov cmp or repnz aam cwtl sub gs cmp std mov xchg (bad) in sar wbinvd pop sahf and xchg pop ja dec and and sbb int3 and or jnp mov mov cltd push push mov mov jb cli rcl jle and jge arpl sbbb (bad) or add mov arpl sub ds ljmp jmp xchg fbstp push nop insb pop sub clc mov cwtl mov sub or test insb jmp push sub push sbb idiv add push in mov rcr xor jg test or lcall xor and or dec inc and jl js pushf add and dec ret cmp outsl adc dec ds and push int3 add aam fcoml adc dec inc sbb adc daa xchg lods or ret popf mov hlt xor cmp mov ljmp fidiv mov rorb (bad) rorb push out mov or push push and js inc add jns dec sti pop addl (bad) imul movsl (bad) push jns clc cmp or add imul jle ret mov loop int mov ljmp inc xor inc pop fs adc jae insb add push insl lret add (bad) enter fstpt jle sub or repz rorb cmp adc jp nop call pop and mov pop push lock mov or add scas add inc push xchg popa inc pop xchg add push mov into enter sub pop lret lock fcmovnbe add lods jle cmp mov aas xor iret mov xchg add into loopne in mov nop bound iret scas (bad) outsl pop fstps sub hlt sbb rcr add (bad) mov xor add jb (bad) scas pop cmpl rolb jnp fiaddl lds dec inc movsb mov cld int xchg faddl call dec mulb inc jnp fcoms lahf pop data16 add aad roll addr16 adc xchg outsb arpl call fsubrs sbb xchg aaa addr16 ss adc and cs sbb sub andb xor fsubrl pop cmpb and mov lret cmp pusha sbb mov pusha cmp (bad) xor lcall cmp (bad) xor int ficoml or inc testl pop (bad) mov jge inc gs xor dec xor mov int3 roll popf mov push loope pusha adc cmp dec or add aam cmp add sarb xchg xor cmpsl stos jae and cmp inc cmp and pusha add jnp inc add mov cmpsb or add push rcll cltd sbb int3 subb add ret adc xabort test xor mov jecxz jp nop jo cmp pop pushf and rorl add hlt mov push mov shrb cwtl mov push and aas push dec jle xchg insl mov dec add in mov rorb lret push lea stos dec sub (bad) lcall out xor add xor jg lret jo mov xchg lods fimull jp jno add addl nop or (bad) xchg cli mov arpl fsubr inc and add mov frstor cmovl add int mov push add gs js dec xchg inc sbb popa outsb rorb add nop movsb mov es or add sbb jbe popa cs dec xchg add jle and cmp mov sarb add mov test test jl and mov jmp mov aas jl lock dec gs fadds test mov xor xchg push dec push jae subl dec stc lds inc pushf sub rcr push jae pop inc gs mov push cmp push sub nop dec mov push je psubw xchg es push mov inc adc dec inc test jge push pushf xchg leave inc jo mov sbb or stos mov pusha push dec mov or sbb push js lea sahf push xor sub and icebp add lea jp add pop push add fcom xor sub ljmp loop dec cmp add jle dec mov stc adc mov jg jns mov inc add (bad) in std cmp movnti push adc jno dec leave sbb lods add scas shrl sti or jecxz push mov test push xchg sub les sahf hlt fwait sbb sbb add bound lret push or inc mov add dec or sbb xchg adc xor or in mov test movsl movq dec and icebp and and push ss sbb ficompl stc cs cmp mov add in jl cmp add jmp pop add push pop pusha cmp mov xchg jo push adc fwait int sbb xor movsb ljmp sbb test andl jnp sbb cmpsl xor mov pushf jne movsb and addl mov je inc add sub insl iret add sub mov fiaddl push mov insb cld rorb cmc loopne popf add mov pop adc or jns pop adc cmp xchg subb push (bad) int3 mov or cltd pop or cmp jno or mov aam push fcoms (bad) arpl inc fsubrl cmp push sbb ret or loopne js inc lock movsb jb cmp or jmp cmp push mov xor xorl dec popa xor adc inc sbb outsl loopne mov dec mov xor xchg dec mov jbe mov or sbb adc test out loop pop das les fucomp mov mov pop cwtl mov sub shrl cmp mov cmovo cmp cltd dec jnp push mov and push and dec and add dec mov inc sub imul (bad) xor mov sbb fadd loopne jp test sbb xchg rclb and push inc mov or push mov inc dec or xchg fdivl add pop sub xchg inc cld cmpl xchg dec repnz mov inc das add push sub pop rol jnp mov mov popa (bad) loopne or push rclb mov or sub flds lea cmp pop jp add sub cmp rcl and mov push mov xchg or sbbl adc add dec call imul paddq mov and sbb lahf add test mov in jo jmp jnp or jle (bad) repnz mov in jl and sub in cmp push call inc and notl mov mov repnz mov sbbb adc rorb xchg pop add lcall (bad) mov xlat jecxz shrl pop or pushf and mov add sub loopne in add mov jbe sti (bad) mov jge jne out andb cmp lret aam push movsb xchg fistpll add adc ljmp nop popf pop fiadd call jmp mov mov mov gs jl cmp cltd add cmp push pop ljmp loop and and enter add test xchg ret clc in in mov and movsl mov lcall dec inc rcrb add push xor sbb in movsb insb flds dec cltd in or mov test mov shrl hlt or imul sahf imul cltd pushf push inc out add mov jg sarl or pusha inc sub (bad) lds lret pop inc inc sti insl pushf movsb lods jl es adc nop mov sub stc inc (bad) je xchg in lods add (bad) jbe (bad) mov cmp pop inc and lock hlt pop test add sub cmp xchg mov and fsubl enter cs and test into sbb ret pop pushf into dec or imul rcrl fadds xchg adc test adc inc jp cwtl add mov pop or dec add jp and test ror or aaa ljmp imul sbb insl adc cwtl pop xor adc jne xor or add ljmp dec mov (bad) cmc sub sbb inc loope add (bad) adc repz lods mov jg dec mov xchg stos rorb les ret and inc test sub pop es push xchg sbb dec nop test push inc int3 sbb mov or add in mov xor leave add pop icebp sti xchg and xchg cmp hlt or push add add nop sar jb add mov inc xor stos adc add pop (bad) cmp push xor jno fdivs stc push shlb rcrl add push sub and lret sub test or incl push aam das push adc adc and repnz push jnp push sarl hlt push mov inc enter add into or lock mov (bad) aam xchg and jecxz add loope sti fnstsw in jo lock test push testl call pop cmp cwtl inc mov aam push repnz add mov outsl notb sub or pop mov and xchg cs clc shlb stos shl push push xor mov mov test xchg xchg je jb adc add jb out xor add xchg loopne hlt bound mov in (bad) sub inc mov emms sbb mov imul add cmc in stos imul cmp mov xchg shrb xchg pop decb pop fstps int3 add test push insb loopne aam xchg lds loope mov ja push or rcll add adc adc sub mov repz std add es xchg movsb mov push mov sbb mov push test pushw rcl or or outsb js jno and inc jp push cmc push xchg sbb jae add sub cli pop add (bad) outsl mov add add out je sub mov jnp (bad) xchg add mov dec pop decb ja push loope cmp jecxz jmp push add mov scas (bad) out je add pop xlat imul inc and push jnp leave jns je or sti sub add push mov (bad) add in popf pop jp (bad) (bad) lods sbb mov or adc add dec loopne xor jo jmp xor inc outsl lock push fnstcw les icebp jl (bad) mov xchg imul fisttpll (bad) and lea popa mov test incl neg pop add repz or sbb mov add sbb sbb or in jbe mov and aam jp push add lahf mov jbe add adc sbbl or incl adc jo fsubp (bad) sub movsb sub xchg rcrl pop pop mov add lods pop inc imul out inc adc push add repnz je or jl rol data16 or xlat int xchg popf mov js incl push cmc xchg inc out ficompl fchs jg sub push sbb mov add (bad) pop inc mov add pop fnsave sub and repnz scas cmpl and (bad) xor adc sbb stos jb out adc add dec notl add fwait ja push jne jecxz pushf add dec mov jns seto orb scas aam cld gs pop rolb sub cmp out or jecxz ljmp cmp ss loop and pop mov and dec adcl incb ds inc xlat dec add cmpsl adc dec jg xchg adc fs lods pop jge orl cs enter ret mov jecxz mov jbe mov ljmp (bad) mov mov sub sti std iret (bad) jbe lcall ja xchg and subl jo cmpsb (bad) jle xchg add repnz sarl fstpl ret test and push cmc sbb dec daa jecxz jp cld add and outsl inc pushf cwtl daa xchg cmp xor adc outsb add push pop pop jns xor out jb ror lods jo cltd cmp add sbb pusha shl rcrb lock js sbb jne jae push xchg sbb add cltd (bad) flds xor or daa or mov adc nop inc adc cmc jae cmp xlat push es nop dec adcl jmp xchg rorl pop push loope ds or sbb loope ss lock jbe push mov xor ds in jmp fadd jle cmp xchg mul lahf add faddp in insl xor hlt les adcb dec or jmp jns imul les jp (bad) pusha cmp push xorb jno ret fwait xorb aad cwtl or xor xchg inc test xor shl mull push or or push shlb orl out lahf add scas or iret pusha xor aam (bad) je add sub dec loop loope pop inc or and jmp insb mov dec in adc or pop mov andb add jmp add push cwtl popa cld xchg out cmp xchg and call add sbb cmpsl lods mov fs mov pop pusha lods cs pop (bad) jne push int js cmp and ja imul jmp adc sti add pop repnz add jnp mov loop or cltd hlt rorb lock xchg inc inc pop test imul les cmp (bad) cld aam add mov stos sbb cld fldenv jnp mov xor imul cmpsl (bad) push lock jne bound jl push mov fmuls daa xor push add push in add pop cwtl inc push push add mov int3 pop repz jae inc (bad) ja xor sbb mov lret push mov rolb adc dec cmpsl adc mov out xor dec inc imul add xchg mov pop mov insb not pop pusha test ljmp and xchg das xor jae sahf jno iret js cmp add dec and fadd or xor add dec xor decb mov (bad) pop pop or push es enter insb xchg imull mov fs nop sbb pop lret sbbl jbe mov pushf stc minps out nop adc mov and sbb inc mov mov mov (bad) jbe xor push add xor dec (bad) add rcr dec sbb push outsl out jnp notl lret enter inc xor dec lock popa add sbb dec push lods jle pusha into in aad cmp or adcl insb cmp push inc nop js sub test ficomp mov mov pop jae mov testb cmc ret and adc sbb mov jge mov jo dec (bad) and cwtl mov jno pusha insl cld std pop pop inc (bad) xor aaa mov xor mov (bad) data16 hlt faddl sar andb dec test jo adc insb xchg nop fsubl dec add je and aaa sbb scas xor add nop mov jae add adc (bad) in lahf je add xor nop andb ret add jp lods in aaa in sbb sub scas addl popa cltd das xor jecxz cmp insl lods sub in cmp movsb and je sbb loopne loope and jo add dec out or mov mulb test or and popf rclb mov sbbl clc add loopne cmp lds mov jl (bad) cwtl pop in in incl and stos and lds jo cmpsb in and movsb push cmp imul mov push add fcomp cmpsl jl cwtl xor ret or adc incb out add aas xchg xchg es xor popa fcmovb xor divb mov sub in loopne js ljmp mov (bad) and sub les cwtl mov add pusha push (bad) lds ror sbb pushf push xchg push or jecxz (bad) pop mov jmp add sub mov mov lahf xchg cmp imul push and das xchg push js ret hlt fimull push mov sbb sub mov push rolb loope jecxz scas es ljmp popa and bound js enter sub mov jg push mulb jno add enter jae cmpxchg nop and cmp mov dec (bad) hlt xchg xchg in and pop push add das roll jmp pusha pusha lds movsl inc int add mov inc fsubrl icebp and add jge inc pop and fdivrl add (bad) mov mov pop cmpsl inc fisttpl int cmp xchg fistpll dec incl repz jp add fwait dec leave popf pop stc hlt xchg add rolb int3 jmp shrl (bad) fimul rclb xchg nop call push sbb lock das test ja enter adc or adc insb add sub js lods mov pop pop mov add and add sti cmp dec divl push push add xor lret hlt sbbb (bad) mov or sbb adc jo jbe mov dec clc call jp test add shlb emms jg mov sti xor pop or mov cld dec test cwtl xchg out rcll jmp mov and aam inc ljmp ret idiv cmc in add lret sub (bad) sbb popf inc lds pop mov lods daa jae enter es and xchg out test faddl sbb jnp rcrl jo scas dec mov (bad) dec rclb aas pop cld pusha bound xlat jbe push (bad) mov not mov xchg int pop sahf (bad) jp arpl aaa mov pushf mov inc fisttp and stos jno add add enter xchg mov sbb add (bad) dec cwtl clc adc or or sahf fnstcw push xchg rcrl push or xchg cwtl sub xchg dec pop adc add das inc out sub sub lds sbb cmc add (bad) cmpsl ljmp mov pop pop jae int3 sbb inc push or add clc sbb (bad) daa imul int3 test pusha shll add jp popf jl inc insb mov and movsb jo add fwait ret xor mov push arpl popf adc add xchg mov cld (bad) jp add jno sbb add pop adc push inc (bad) or (bad) mov loope test pusha sub pop add cmp pop jnp push xlat movsl jno push ficom jne mov mov dec jl or shll mov lea fs test jmp push or jno sahf hlt sbb cmpsb loopne call cmp push pop mov scas dec jmp xor test mov loopne testb cmp mov jns mov xchg pop and jl jp jbe push add negb int3 ret jp (bad) mov push jnp (bad) das pop sbb sub add fstl adc lea inc xor jecxz or sbb inc ret imul sbb mov scas ret or and sub push pusha fs and and test xchg (bad) repnz leave and sarl test loop add jge,pn push lods mov inc and out fildl push psubsb adc mov popl (bad) pushf jno add xchg movsb lock jecxz add xor lds outsl push movsb add mov push jmp push mov aam inc insb testl aam out jp xlat ss fisubrl adc or and pop enter nop aam jbe jo or movsb add loope in shll dec sbb push psrld add jp popf jbe push pusha add in mov cmp sub or mov out daa xor mov xor ljmp (bad) paddw cli mov mov rcl jno js shlb ret or xchg pop add lcall cmp int (bad) xchg icebp inc das push inc mov inc xchg sbb pop add adc add sub pop mov popf (bad) sbb ljmp movsl ret or adc js add dec adc cltd add mov and daa sbb xchg enter inc jmp mov add jge adc sti insl pushf add arpl xchg pop push pusha mov adc in les rcll test jmp fadds pop cwtl add adc dec in mov dec mov inc cwtl jo cmova or and fs nop rclb mov and inc mov and hlt enter sbb adc add in mov push add lcall sbb and sarb add dec add pop pop jecxz sbbl sbb les clc and out in add cli subl std shl daa jo sbb mov jno xchg sbb or stos call xor add dec mov add fistl aad hlt adc xchg fnstsw jo leave cwtl cwtl dec call dec and inc pop cld push adc test add aaa call fdiv xor mull mov mov inc and loop enter dec xchg mov mov out fmull enter sbbl cs (bad) cmc bound in pop nop jbe lcall inc std test lahf data16 and fisubrl add pop xor out in add insl cmpsl dec sbb mov sahf and push pop or hlt xlat and adc movsb mov and (bad) call daa std jae dec loop andl decb sub fcompl jp scas lret cmp add lds dec sbbb fiadd dec movsb mov adc test push sub jo scas or pop cltd jno dec inc mov adc jo and insb into imul hlt xchg fcomps test pop or and pop std rolb mov push xor xchg mov add scas push xchg es xchg add (bad) xchg ss dec daa pop cmp inc dec pop out movd shll push xchg xlat mov and xor adc out jg repz and sbb add test cmc arpl adc adc lret cmc jmp insb cwtl mov sbb stos mov in ds add sbb pop inc pusha icebp fimul jno pop cld xchg push push jne ja rcrl cld and xor es jo adc mov and nop add add dec add inc xchg inc mov cmp cmp bound adc fiaddl sub rorb sbb push xor fcoms lock or or outsb enter xchg mov pop adc sub sbb push add nop xor cmp out cltd xchg daa push add pop adc pop rolb fcompl fstp xchg iret sub jbe sarb fcomps cmp popf in (bad) lret push mov jae jno jle cmc (bad) lock xorb (bad) js cmp add cmp pop pushf cmp push int3 inc add or inc add jle dec fsubrs pop add pop jmp and push cwtl sbb stc es ljmp shrb ja dec mov add or mov push add add or scas jecxz imul sbb push xchg popa push (bad) add jmp (bad) fcomps rorl sbbl mov sub int3 add cmp test add jo sar jp (bad) rcrl cmpl cs int sbb test and ror rorb pop jge in mov mov and push mov or ret xchg sbb jl or pop (bad) jl add mov nop dec or inc aam pushf mov or cmp add lea push dec dec hlt inc pusha adc lock mov cwtl xor cmp insb jae push push and jbe dec cltd dec xchg repz stos mov xchg cs sub mov test push mov pop mov add mov xor jo push cwtl loopne lahf sub js dec jp add cmp out sub orb or xor sbb jae xor daa xchg test push adc mov jmp leave adc and jae cltd inc sbb dec test in dec (bad) movzbl dec jno loope sbb loop cmp mov nop stos stos int3 cltd sbb mov call insl xchg fs into sbb mov call dec mov add insl adc popf fdivrs loopne int3 cmc (bad) push clc inc sbb mov xor or pushf nop adc pop sub scas nop fucomp dec push les jbe pop sti dec mov xor pop mov fsubrs pop xchg xchg mov enter nop mov fldt incl in fsts shll stc dec sti adc pop out dec sbb fwait xchg faddl jns orl add loopne inc or pop mov sub push inc cmp or pop subl lds mov xchg mov mov loop add (bad) hlt loopne xor in dec leave mov push mov or daa hlt xchg test mov ret shlb clc push xlat add stos jno xor testl jl mov outsl shrb cs pop pusha pushf jmp xchg cmp pop fldcw mov pop push sub ret movsl (bad) out and clc sub dec sub add dec (bad) xor adc adc mov xor add xor push add adc adc mov cmp dec test xchg mov cwtl add sbb and push adc lahf jne mov add jmp je and std add insl nop mov daa pop or pop decb cld xchg mov adc or aam mov jle iret movsb sub cmpsl jecxz add movl push iret rcr jo stos adc test add jo add jae adc es sbb loopne inc enter pop ds jbe je lods negb add and push xchg inc nop les dec icebp pop inc cmp out test lds jne dec pop test insl mov push notb shrb into push inc and notb push (bad) pop xor xchg jl mov les outsl xchg push sbb and pop popf lahf add fsubp or or mov sub mov push les aam push pop xor jge ss hlt fldenv cld in fs out add int add imul or dec ret in sbb mov insb inc adc adc mov cmp sahf cmpsl cld ja rorl mov imul cli xchg imul lret loop add or pop ret nop std dec and fs inc pop dec in add adc pop (bad) sbb mov fldenv add sub je fcmovnbe mov add jle inc xchg and testb in jp je int push mov test mov (bad) lds pop lcall or (bad) std (bad) jbe loope mov jg jl add mov add pop call repz fadds jg js cltd push fstpl xchg add pop sbb push or dec call pop jl rolb dec cmp add xchg sbb rol cltd or movsl xor dec xorl fldenv inc inc (bad) loop addr16 add and adc mov je lock mov and or or or test outsb std into add xor sub push movsb dec cld cmp xor lcall adc mov cwtl rolb pop mov push call xorb xlat test cmp adc push mov xchg mov xchg sbb add xor mov pop mov sbb adc cmp in loopne xchg add int3 dec mov out es cmp dec popa dec jo pop cwtl daa add add sub jnp (bad) hlt in inc aam xchg pop jns add out mov adc shlb adc lock bnd rcrb cmp sbb jp (bad) loopne cmp add sub das xor lahf and cmpl lds neg addl xchg ljmp leave mov sarl mov test adc push mov xor lret add shr inc sub cmc push mov rorl sub inc clc cs jae std loop lds mov cld scas add movsl push out addr16 jo nopl mov or jo test push and repnz add test pop test xor popf nop in test mov insb (bad) hlt pop fstpt bound jnp mov (bad) cmc lret (bad) mov push add lret in call add mov ja jmp out add pop lahf add cmp repnz jno enter fldenv add inc sub pop dec lds xor (bad) dec sbbb rorl mov adc sbb and mov fmuls sahf nop push lods rclb mov test je inc mov fldenv xor fnstsw mov test enter mov jno (bad) mov mov adc mov and sbb mov dec push adc inc add xorl sbb out cmpsb add aad pop jmp jecxz inc ja xlat (bad) mov or mov fiadd mov in mov cmp fstl xchg adc stos rclb test sahf mov stc dec cld std (bad) xor adc test xor sbb mov cmp addr16 add jns sti mov int bound pop aaa add sbb cld ljmp and cli jbe cmpsb add out pop jb (bad) faddp jp sti and push adc pop mov (bad) push jmp mov js or cmp pushf pop add mov dec jb fldl mov push incl aam popa adc jo xchg call cld push jbe rolb rcl fldenv cltd (bad) xchg cmp jle mov movl popl mov adc nop add pop lock cwtl pushl inc fnstenv mov cmp or mov jmp pop sbb and mov ljmp cmp fistpl jbe cmpsl pop adc inc xchg enter mov arpl sub je pushf insb add pop mov sbb dec push jo test or mov mov jecxz pop xor add call sbb inc pop sbb and jno push enter or sbb hlt fs add ss add scas es loopne sbbb dec dec aas pop xchg ret sbb xbegin sub fdivrl push jbe,pn aas test daa mov fcoml add lods push xor pop or mov movsb lahf add imul lds jg sbb adc cmp jp daa fwait sub hlt inc jmp js imul dec jb int3 fmul pop add (bad) fs sbb dec add pop lock dec je mov and clc inc rcrl sub in pop aaa lods pop stos jl xor or pusha jbe dec (bad) int or cmp jne inc popa stos sbb lds (bad) push pop fs enter fwait into and test lret loopne adc xchg jb add dec imul icebp sahf xchg or dec js (bad) dec int3 cmp adc sti out lds loopne mov add loopne push in jnp push sub inc adc dec push aam mov cwtl out loopne xchg popa jae nop sbb cli (bad) cmp inc inc push int3 adc or fiaddl les aas dec outsb add inc xchg sub test jae lods xchg add mov xor lahf add mov rorl inc insb dec out add xor add leave in adc inc sbb mov jbe dec lock push cmp mov sarb sub jnp pop or mov inc adc inc (bad) or std call insl mov inc lea or or les mov and in scas lcall incb mov adc inc mov fsubl xchg addr16 or xchg subl scas xor and inc cmp rorl int3 pushf adc mov mov adc das daa int in cmp mov xchg notb push pusha xor or (bad) cli mov pop mov sbb dec add and add roll fwait and xchg push dec addl inc and (bad) push test pop mov vpslld mov leave pop lock mov xor je test xchg cmpsl jmp pop cmp xor dec shrb mov loop pop xor sysret jnp add push cli test cmpsl in xchg push pushf js (bad) jo insb repz inc jbe sub add je lods aaa adc or sub push test pop fmull push mov fcmove add push and rcrb add mov insb add leave sub jle or or lcall es imul bound push daa out adc jle and dec push mov std pusha adcl push in adc adc add jge xor les outsb js adc les cmp push adc mov xor and ja jno xlat inc test and and mov fsubr mov popf mov push mov gs xchg test pop lods fs or inc dec mov das (bad) je in jb add jnp cmp insb add jmp hlt imul in sarl and mov jb test cmc mov mov add loop fistl (bad) jp pcmpgtd scas push xor sub add (bad) xor lods xor jne sbb jl xlat xor jbe and in dec mov sub push or xorl adc sbbl in in aaa pop or inc mov xor dec or inc insb mov jne fcoml ja hlt rclb cmp or loopne push loop jecxz rorl enter insl pop add aam pop pusha push or decl std in loopne add xchg in dec mov cs pushf mov mov (bad) push add mov cmp divb pushf hlt inc xchg ds shrb or cld mov inc arpl and inc pop or shr jg pop jle mov dec adc cld ja sbb inc (bad) sbb cmpsl adc dec arpl dec mov jb xor dec mov xchg nop sbb jmp adc adc push (bad) jmp pop les add testb dec out in or test lods add sub testb sub in mov ja insb nop push inc test ficom or sbb (bad) movsb imul or mov sbb lods jecxz dec xor xchg je daa mov test lcall roll (bad) inc loop mov nop (bad) fdivrl fiaddl xchg pop or (bad) (bad) mov lds mov gs nop push mov mov mov sub movsb or pusha cmpsb cwtl pusha ret gs xchg into sub in add lds pop cwtl fsubrl lods fsubs push cwtl sub add push pop pop inc push and jns cld inc jb and and add jo outsb sub int lea repnz push push in sub inc movsb add add ficomp xor pop nop add xor in cmp jge testb ljmp cmp and ja pusha jo or aas (bad) dec out add in lds cwtl mov xor mov scas cmc movsb in ss adc and fstl jne xchg or inc jmp push clc add outsb test or adc and dec cltd movsb add (bad) cmc dec mov or xor push movsb jne mov jl and push inc xchg xor in xchg hlt push ja inc adc cli lods cs jmp rcll jecxz pop add pop mov rcr daa mov fnstenv or pushf inc inc ficomp jns inc xor add jle mov mov xchg add pushf fwait mov and mov (bad) mov cmp pop mov jae fmuls mov mov or mov loopne lods push and cmp sti insl bound lock pop andl mov cld push push mov mov cmpsl jns pusha cmp stos add push out mov sar jo fs (bad) mov test push push jl jnp mov cmp and add lret push sbb pop cmp ret xchg (bad) push aam inc int3 es add outsb dec pop sbb loope jno adc pop lahf xor add loopne push jbe mov add fldenv fsubr scas pop and or adc add call or fisttpl or mov int cmp mov and fwait mov and call adc cwtl jl adc lret and inc add push add aaa loopne add mov xchg cld imul cmp mov das add insb and movsb rcr loope insl cld mov sbb mov cli mov loopne and add adc icebp xchg aam (bad) dec fbstp fdivl add or fdiv in mov sub hlt inc test repnz add fxch scas jle cld mov stc andb jl jo jbe rolb shlb das jge xor xor cmp xchg setl adc mov gs sub inc pop in in fsubrl mov fnstenv mov dec icebp adc aaa or rolb (bad) dec sti aam push cmp mov nop push inc dec loopne pusha push (bad) in add mov sub xchg or in loopne push pop push mov aas mov mov and and fcomip add test fcom scas jns test jne repnz add dec mov (bad) and mov lock sub dec or scas cmp add shlb mov jo aad xor mov cmpsb test sarl inc cmp and add cmp pop xor ljmp dec mov stc dec add push cmp add (bad) xchg mov (bad) add adc subb dec imul into push subl push cld mulb xchg lods jo add leave and cmp adc add inc fwait inc push stos outsl or lock jmp cmc jecxz dec and fs and sub ljmp add jecxz and mov aam js add push adc clc fisubrl shr popa mov and add push xor jo xchg data16 inc xchg stos mov mov divb pushf cmp push dec inc in decb das cmp test sub cmp add es add and dec dec int cwtl incl jp test pop mov add jb sbb mov js jno or repnz sub mov pop int3 pop jo out bound shll test mov mov cmpsl clc jnp clc dec dec mov add out push lcall dec loopne cwtl stc cmp ja dec pop ret les push call xor test int3 jmp nop cmp hlt test shr add gs cld adc push out and (bad) adc gs xchg inc cmp nopl dec scas out xorl dec mov jle xchg sub sbb in sbb push (bad) add push ret rorb aam add mov imulb movb xchg ja loopne popa lcall push xchg scas add in mov xor popa adc in aam (bad) sbb cltd add insb cmc popa cmp and repz jno push xchg jnp stc (bad) lock pop sbb andb or pop mov pop or mov cld add das mov push fdivs nop and rcrl pop cli pusha add dec jp test fcoms ficomp cwtl mov add inc out insl adc inc cwtl xor aad jecxz adc xchg mov add sbb sbbl js jno mov je inc ja clc rcr addl sti pop rol jo (bad) ja adc add or or (bad) or jle push mov ja les test pop pop lods fiadd stc test or scas imulb pop test pushf mov add scas lcall cmpb fsubr lds les hlt popa popa (bad) jle xor test xorl pop add sbb jmp movsl icebp cmp jge rcrb out dec fcoml rclb and add (bad) inc sbbl pop push sahf xchg es add pusha nop (bad) out imul out jae jecxz loopne or sbb dec add leave out pshufw nopl jnp cmp pop enter sbb jl xor divl cmp push js sbb or mov setne jo push loop push fsubrl dec mov pop mov adc adc add int3 (bad) pop rorb push loope sbb rcrb add dec sahf jne xchg rcll fwait jecxz add out data16 jmp sub and lods sub addl mov jno,pt xchg sbb popa mov dec out push sub hlt push movlps pushf aaa fldenv mov cmp in mov cmp add add (bad) add sbb es adc lods shlb popf sti add push rclb push push sbb adc or call and push jp push ret rolb jg mov sbb nop mov xor sub mov xor add (bad) (bad) shl inc loopne (bad) aad mov add sti mov daa add mov push jno jecxz mov out push xor enter ds rcl sub pop fs add push imul js add add movsb addb push ret or (bad) and shr dec inc jge add cs mov jns push sti mov sbbb add aas sahf xchg sub outsb imul or in lock gs hlt jns and std js test xchg add hlt leave mov add data16 lahf sub je xor sub fsubrs cli xchg add pop es add out lods decl or dec stos add scas dec lahf or dec add movsb or dec ret pshufw jnp (bad) push mov cli xlat in or aam loopne out (bad) sbb loope push inc int3 push push push (bad) cmp pop stc or out add popa clc test xchg push dec stos lds les mov pop jecxz pop add (bad) pop mull rorb xchg jns cmp push pop adc outsb mov fcoml add and xor pop int sar sbb sti xchg scas sbb cltd xor movsb add push iret mov (bad) div bound or (bad) js (bad) add lock push adc mov adc jl xchg nop std aaa loop jo stc jo mov daa mov mov push sbb nop or jns or pop sbb cmp xor pop sti add mov pop adc ffree mov sub or div jb les inc pusha dec shlb jmp push add adc movb pushf seto lcall outsl (bad) xchg and push fnstenv jp orl or mov mov inc add inc pop sub xlat dec mov push add ja pop mov cltd sbb std mov hlt loope xchg mov xchg adc int and jecxz pop pushf inc dec cmp aad (bad) cmp mov cli dec (bad) int3 orb rcrb push mov addr16 pop stos dec mov push imul popf or sbb stos mov movb imul rcrb arpl add inc mov jo jge push push jmp push stc pop enter lds jbe arpl dec mov mov cmc ret in cli mov mov and mov imul std dec (bad) and fsub into add test icebp movsb cmp arpl stos add nop xor pop inc testb std test mov enter mov add xchg cmp test inc pop bound or or cs inc nop cmp jo pop test or daa inc xchg test jle test mov imul push test loop enter pop pop in add loopne in add cmp cmpsl jbe out sub movsl adc shl jae fstpt adc or js rcll dec loopne nop jmp scas verw mov jecxz lods clc xchg add repnz sahf add test aas aaa loope insb loopne in mov push popa adc jecxz jl cwtl adc xor mov (bad) out push xchg inc pushf xlat loop jbe les ja,pn jmp add repz imul cld das es sbb loopne cmp xorb sbb daa fsubrs pop scas scas and add pop add adc or jmp popf inc stc add loop ficomp inc fcomps mov add inc scas sbb sahf test dec push and adc cmpsl mov orl int3 fwait jo push sbb xchg push loopne insb inc orb loopne pop fdivl pop pop push mov std ret shlb pop ja pop add cmp pushf das test and xor mov mov push adc es rol sbb adc shlb in xchg xchg lods lods leave les data16 sahf imul cwtl pusha popf adc mov add sti push int sbb in inc dec sub shrl dec sbb push inc add insl hlt out add (bad) jo dec leave cld add add adc or hlt lock lods sahf js sub mov insb add mov dec add inc xor jg fisttpll lds je mov subl jmp lret sbb lds hlt in or add out push jns pop (bad) shll (bad) ficomp int popa js fs or stos xchg xchg push cld inc in jp mov ja adc xor movsb jno cli inc mov push loopne push add insl fcmovu cmp adc inc ret ret mov fwait xlat jp mov add stos mov mov cmp outsb push add xchg xchg push cs sbb mov in or jl pop in push push xchg and or test repnz and pop jne sbb (bad) jmp sub adc add roll pop sub into jp adc out sub addl or mov mov sub js fsub shrl incb nop push cmp test or out push cld adc pusha cmp adc pop adc inc jne or jo pop inc xchg adc clc add cmp outsl push cmp xor inc aaa add popf pushf pop xchg add and and cmp inc sbb xor stc int3 or xchg fstpt (bad) dec mov jl cs outsb cwtl (bad) cmpsl pop not out cwtl dec mov add xchg cmp lock mov (bad) mov out mov fistp sub js popa or sar test add lods xor dec stos nop pop adcl xchg or xlat lret jg sahf lcall or lock pusha fucom add (bad) add push adc (bad) dec adc pop loope (bad) xchg rorb in add jle popf or out jae and test repnz sbb aad lock mov sub sbb mov and push cmp ret dec xor fidivr add ret sub lods insb pop dec jns push scas call mov cmp sbb out or sbb mov int mov adc (bad) shll add or mov popf mov pop jmp clc adcl loopne xchg fwait add push (bad) stc add mov add loopne jno jmp pop js mov add sbb je push in push or adcl sub adc ljmp les popa jae cmp and ss mov cwtl add pop push xchg cmc or pop cli sahf mov jb (bad) pop sbb push test sti fimul movsb je rorb push mov or xchg ljmp sahf out or cmp sub mov clc lds repz je sub ficom cmp mov or pop shr add fistpll loopne jg clc push movsb loopne pop leave push sbb add hlt pusha inc add bound adc and or js call xchg shlb dec cwtl jbe add mul rorb and pop pop arpl rorb dec pushf lock rcrb jle jge or fild icebp (bad) lahf (bad) sbb cwtl inc mov cmpsl add hlt xorb imulb js jnp fsubrs inc subl add add (bad) mov push jne push mov es sub inc xor mov add inc inc pop js nop cmpb in imul (bad) and sub or sbb stos lods aaa push mov adc test pusha xchg sbb ja adc xchg aas dec mov dec mov test (bad) mov out add xchg mov roll add pusha push in cmpsl loope add jns popa daa jecxz xchg test (bad) jno stos and movl mov mov adc lcall push or pop ret jno rorl sub rclb test sub rorb lds pushf add sbb mov cwtl enter add das pop je ja cltd dec mov addb and and add imul push xchg mov sti leave cmp test add inc dec jo sbb sub or and nop adc in lahf in and and dec mov popf cmp fisubr stos and aaa nop inc mov mov pop cmp push sbb xor push sti sub aas jge add jl push add pop or pusha frstor pop push lret (bad) pop lock push into dec in push jl inc and jae pop test stos or (bad) jp dec push ret add (bad) mov xor add mov or rorb jmp cs aaa pop movsl fiaddl dec sbb je pop sbb pop or in rcrl fnop test jno cld pop (bad) jge dec jl mov jmp nop stc jae ret sbb rorb ja add incl or pop mov add out rorl jnp lret and xor or in sub dec and cmovno (bad) rolb fs lods jp js jl addr16 jns inc mov out push clc pop nop mov or add dec mov xchg cmp (bad) das xchg cmpb sbb int3 push subb inc je push jp sub mov nop (bad) adc inc fisubl sbb cmp inc andb mov add mov sbb shl (bad) cmp pop in sti negl mov mov (bad) push xor cmp add in adc jo add jge sahf jne cwtl das dec test nop (bad) jmp rcrl enter add ljmp repz and push pop jne add mov cmpl mov (bad) lock fst cmp bts lret sbb push daa lret hlt push mov cli mov jae adc add cmc dec push clc xor in inc push aaa or xlat or ljmp inc repz dec scas stos add lea jno daa lds cltd xchg loopne adc data16 cmpb idivl mov es jl add jne sti dec lea pop mov sbb (bad) call pop and push push icebp jne adc ja call sahf loop add jo sub inc jmp jo out add sbb enter pop loop shr cltd sub mov push sbb sub jge outsl mov ret les mov or xorl pop mov add sbb je pop mov add mov lcall mov push out pop pop inc aas and xor enter inc out pop dec fwait and push repnz dec aad mov mov jp out add cmp xor call jl cltd je fadds test add adc jo mov add jbe mov sbb pop pop push (bad) nop (bad) stc push or out push pushf inc pusha out hlt add dec xchg dec (bad) add imul push or pushf imul daa (bad) jo xor outsb push fwait mov add insl inc shll js cmp xchg repnz (bad) hlt push pop inc pop loop scas dec sbb or mov add stos stc and xchg jne cmc test insb sbb pusha and orps or sarb and enter fadd outsb sub jp addb rclb dec cmp jo outsb imul jecxz movb out out sbb cs sub or pop lahf sbb add lods pop lock test sbb scas int clc cmp push dec mov jno inc es or andl mov cmpsb sub rorb daa xchg (bad) fdivrl in mov ficoml or cltd push and ficom or pop mov movsb adc and insb loop add mov push add loopne xchg mov imul addr16 pop push and mov xchg notl sub add test out das data16 insb adc jmp inc cmpsb nop push clc notl andb jl add add cmp sub adc adc pop out mov jp mov mov xchg dec pusha mov into loope fwait pop std pop stos jle add ret mov roll inc rcrb in sbb cmp je ret stos fisubl ret mov popf add clc mov lock add pop shrl (bad) pop shlb pushf inc inc outsl jns xchg lods add adc inc sti cmp out mov hlt xor stos inc sbbl fdivrp pop daa xor jl cmp popa incb xchg mull or or pop adc and add jne add pop scas jle push push mov popa ret popa jge mov mov add xlat fs aaa inc jmp mov push dec addr16 rorl daa cmc aam add mov and int3 sbb pop cmp xchg ja add roll xor lock addr16 imul adc (bad) lods add dec or icebp sti or clc mov adc ror inc (bad) sti add sub (bad) xchg sub je (bad) lock mov sub test adc insl dec jb arpl jl mov hlt rol in inc xchg das repz cmpb cmp mov adc jg cmp das dec add popl cld ja pop rolb and or mov mov mov movsb mov or loope subb in pop outsb scas scas mov hlt fiadd movsl gs jae lods sub adc cmp fiadd bound mov dec stos sti and sub cwtl addr16 cmc cld xchg sub (bad) add xchg mov stos push enter adc rolb outsb clc sub (bad) iret stos or jmp push sbb xchg adc ret dec xchg mov adc inc ljmp scas cwtl or mov nop add fs lods pop xchg pop fildl push das rolb xchg or mov int add clc mov jle mov add mov or data16 aaa cmp adc push jecxz aas xor sahf iret stos cwtl in dec pop add insb loopne add ret lock call and subb add xchg inc mov pop fldcw cli add stc (bad) or push popa xor sub cmpsb test (bad) add adc shrb push fnstenv nop adc jge push pusha jb sbb xor jae cmp dec and incb cld lds jae add aaa xchg inc sbb clc add mov sub pop cmp dec adc sub in pusha rcrb scas pusha cmovb push or push add idivl test fs ds int (bad) (bad) cwtl nop lahf add jo jmp push sbb dec shrl sub je rcrb mov mov mov outsl push les imul mov lods xorl sbb outsl or adc pop out mov or dec pop test sub or test test pop pushf rol mov add jbe mov pop jo push sti mov arpl push jo xchg add jecxz test (bad) push add rorb dec nop cmp es xor mov ret dec inc cld cmpsb jo test jo mov xchg push jg pop cmpsb je mov push sub xchg hlt inc pop and cwtl cmp adc jl and sub lahf test add mov jl adc add mov pop mov jecxz jno push push adc (bad) pop pop mov bound (bad) mov adc ss bound daa mov fs out sbb (bad) xor jb jnp mov add test fwait xchg pushf and and lcall or dec (bad) cmp xor add push xchg sbb lcall scas and and inc fmul or dec xchg sub movsb (bad) imulb loop out rcr ds sbb pop jle std adc push repz add sub xchg ret fiadd in (bad) mov shl mov add into adc cltd jnp sub sbb jno fnstcw (bad) jo data16 dec dec or std inc mov or (bad) add xchg arpl lds loopne mov push lods sub std lcall adc xchg mov sbb aam add inc test mov inc ret lods jns mov push add or jmp adc pop rcll rorl adc mov enter jnp inc roll fild add into ss add adc adc wrmsr sub mov shlb call pop jbe sub dec shl pop cmp pop (bad) subb jp inc test xchg xchg cmc cltd shrb stos (bad) adc mov add adc into inc dec fcoms fildl test mov test adc roll insb addb icebp sub mov pmullw mov pop movsb push mov jle stos js mov add jne (bad) xlat scas add jo hlt nop shlb and cmp add repz jne sub and cmp add inc popl xchg arpl xor jmp inc dec inc fldl and cli add xchg mov cmp cmpsl mov cld lsl cmc les xor cld add dec adc add addr16 inc dec xor add in mov add pusha inc mov inc or dec movsl dec inc jbe cli sarl sub push test loopne jecxz nop mov dec pop les into outsb hlt adc or cmpsl fwait cwtl push jb add adc dec mov imul pushf adc mov test test (bad) xor and adc pop mov push xor pusha hlt sub xor jae enter adc jg jne add popa lds mov fstps jl xor jb jo pop pop std roll out (bad) (bad) shl dec pusha xor mov sub sbb outsl ret leave xor add lret cmp out fcmovnu mov cmp and or xor mov push sub test cli xchg add jae mov stos xor aad pop cmp xor add jp test push call and inc sbb mov sbb xchg mov ret add jp adc and sbb fwait popa adc out sub add rcrb cwtl sub ja jne inc jle and add test repnz mov push push dec cs dec xor add inc mov nop test enter inc jnp popf add ret dec loopne jae test cmp mov mov or xor push sti je popa mov push add aad orb leave cmp call pop sub xchg jae mov pop sbb fsts enter rorl clc test add jmp mov addr16 enter adc add rol inc addr16 add xor pop jo jl push add (bad) xor fs cmp pavgw xchg or adc sbb and inc xchg cmp test mov add insb (bad) lock cld mov pop inc popf cwtl dec sub sbb test test push add or pop pusha insb push arpl and cmp jecxz fidivrl mov or mov add mov push dec mov and aad mov sti dec mov mov mov daa sub divl aam xchg add pop pop cmp and and mov pop fldt pop add dec adc pop add and mov call popf sbb in inc test rorl sub sub add xor push cwtl xchg add push sub jge pop add mov sub popa add shll nop test push lcall lods or test sub add xor jg mov sarl (bad) jo lret stc add inc mov pop lock imul insl pop mov add test and sbb mov add stos dec and jle adc add adc sti aaa rolb sbb pop clc sub enter sub push shrb imul dec loope iret jbe cmp mov mov gs pop rol jns shl dec add out scas leave push sub arpl js mov adc out out add cmp pop scas or mov nop mov insb dec dec add pusha push or inc dec and push add cld test lret mov add in dec cli scas leave mov js mov xchg outsb jl jo mov aas sbb xor movsl add add sbbl add imul cmp or mov enter lods je push xor push adc adc sbb push mov push pop jns ljmp lods add cmp movsl dec pop cmp and and out xchg mov add movsb and inc scas shlb fs in jmp out sti repz mov add push dec sbb in cmp push sub sub cmpsb mov scas bound gs add add add movsb shrd add cmp cwtl mov xor mov clc sbb hlt int3 jle push es pop add mov nop xchg inc popa pop lret pop adc mov adc loopne xor mov or or xlat and push xchg jecxz and gs cmp sbb sub pop cwtl orb xchg repz adc sbb in mov cwtl daa movsb loopne pusha fidivrl sbb nop mov mov and inc into in pop movsb inc in jnp shlb add sbb adc jp or andb sub push adc jmp jbe and mov in sub lds mov sbb push jge or notl inc loopne jmp pusha cmp popf xorb loope or adc xor addb std hlt inc daa add mov mov mov push inc popl sbb (bad) dec sub mov adc sbb and and mov inc sub fdivrs add test jns (bad) xchg sub scas aam add ljmp pop jbe xorl in jno arpl inc sub arpl and add jp add loopne insl jecxz ss and ds in or nop out popf popf cmc pop pusha add mov and in mov add mov add bound insb xor pop js cltd jae xchg and adc clc icebp pop inc lods je cld test insb pop sarb les mov cld in adc push test sbb push or in and aam repz inc mov and mov sub pop pop aas inc and add enter icebp adc dec mov in dec cmp cld ficom lret lahf in add push dec loop inc pop cmp add and adc mov cld xchg xchg popa inc fcoms clc or (bad) mov lods sbb mov in arpl enter pop cli or adc lret enter sub sub xchg sbb xchg out (bad) pop imull je inc cwtl and sub pusha add and mov shrb sub xchg jmp mov in daa jo xchg inc or push pusha lcall mov loopne jo das add lods xor enter leave xchg and dec sbb je xchg pop xchg mov mov jae aam (bad) and and adc stos cs or lea sub shrb aas xchg sub (bad) notb xchg cmc arpl jo lea add int3 push cld sbb inc jbe arpl insb mov and dec ret xor cli sti mov addb (bad) pushf cmpb lods cwtl or sub cltd adc ficoml movsb fstpt sbb sbb pop dec add daa mov add add fwait jge cli lahf es test cmp das repnz addr16 pop add mov lcall out and or add inc mov pop fmuls add es push stos adc and ret rolb mov add mov fstps xor sbb adc inc lods mov add jno xor jp,pt pop rolb leave push nop xchg and rclb mov das lcall js mov jl clc adc dec or lea dec add and add test inc and inc scas inc pop xchg incl icebp pop dec cli fs (bad) or (bad) std popa mov nop bound je cltd and pushl push and (bad) adc inc cmp fptan fidiv outsl leave and sbb inc outsb rorl add aam jo imul add loope sarb push jle gs add cmpsb xchg mov xorb loopne ret add cmp and mov daa fldenv (bad) sti pop insl nop js mov mov ljmp dec adc sub xchg cli iret test clc loopne dec pop dec shld and out or xor stos mov and xchg or lods adc cmp mov and sub adc push or mov adc out enter dec add shll dec dec andl mov mov jle ret in adc cli adc xorb dec mov add cld (bad) fistl sub xchg cmp xchg or movsb sbb xlat mov and das mov mov sbb bound test popa incb outsb aam mov xor negb hlt pop xchg mov cmp push or inc jns add aad subl (bad) sub and pusha cmp gs add scas inc daa sub mov cwtl cmp jg add movsl mov or cmc ljmp mov adc add jo dec xorb fwait push xor cmc or mov jno xlat dec mov sub aaa mov push and or jnp pop (bad) jge pop adc call add fmuls inc push jle adc pop scas and cltd adc jmp dec mulps dec mov add sbb test shlb push adc pusha nop movsb decb dec dec gs mov and xchg stos fnstenv adc push jl cmp les sbb in push out push orl push fcoms cmp cmp inc xorb or test inc test inc mov std loopne dec jns rcrl iret subb adc js add ror cmc jecxz xor aam cmp push pop jl lds hlt cmp cmp std mov xor pop xor jne je or int (bad) adc (bad) pusha xchg pop enter jns pop sub mov out add pop xchg flds (bad) in hlt loop inc xchg inc bound jno add in and test (bad) shlb lods add dec jmp aaa or into mov pushf dec and mov inc or pushf dec xor sbb xchg add mov fistp push lret pushf fs push or sbb sbb insb jge fs es ret xchg aad cmp insl sbb inc ss dec pop mov mov lock movsb add xchg addl mov cmp in (bad) jge add scas xor lock stos pop jo mov cmp call mov shlb jno add push fildll (bad) (bad) jnp dec jg xchg mov daa add pop lds xchg cmp inc insb mov in sub mov xor push fisttp je sbb pop imul sbb call xor fcompl jno rcll add mov mov inc pop cmp subb dec lods cmp cs dec jo adc cwtl shrb ret and adc lods inc mov xor clc fisttp pushl stc adc push mov sbb push rcr test add jbe add outsl sub imul test cmp aaa mov sbb and stc adc fs daa push mov add sahf mov add xor mov sbb cwtl sub pop push add lea stos xorb mov push outsl push jbe xor dec loope movsb aad sbb adc push fwait cmp insl add sbb test iret push test sub or xor test loopne fstl roll and inc sti (bad) mov xor cmpsl sub and dec cmpsl bound push mov sub cwtl and push scas mov xor jns and js shr inc add push mov int3 adc lods jecxz sbb clc push sbb xlat push mov stos outsl not mov pop jg popa (bad) aam cmp push arpl dec stc loope jae fiadd cmc repz or sbb orb dec add dec icebp repz iret push flds nop cli push cld mov add xor add mov sbb cwtl adc (bad) pop mov sbbb inc lret arpl mov gs in mov cmp push rclb inc xor mov jmp jns arpl cmc adc mov (bad) je cwtl repnz add jne push cmpsl and or inc push flds pop (bad) jle mov fwait mov sbb mov mov xor pop clc and fdivrs sarb jns add fcmovnu es mov mov cmp outsl xchg cmp pop cmp pop and adc mov cmp and inc pop in and push das in xchg ja ret or sbb cmpb push mov mov pop scas shlb and lds les add mov add push or loope cwtl leave lds push addl mov sbb (bad) adc pop xchg and push lock inc popa push das mov rcr cli mov je andb adc lret xchg adc rorb pop (bad) or enter pop sub mov inc daa subb pop loopne jno xchg xor inc dec push add xor adc test (bad) mov or mov add lahf in enter adc and lods add adc aas cli dec pushf (bad) add cmpsl dec xor popa add sbb xor inc test mov (bad) pop sub sahf and sahf dec mov add add or jmp andl fadds mov into fmulp add loopne xor sahf orl xchg in repnz or mov out mov jmp test stc and sub in jp pop lock pusha js hlt popf subb cwtl xorb xor dec sbb std add mov hlt mov adc arpl dec mov nop mov sbb dec and xor stos (bad) fldl aas cmc adc fdivl inc hlt push lahf daa cwtl test (bad) mov mov arpl psrad (bad) orb and adc adc cltd cmp mov xor fcompl xor and inc push out lahf mov add lods pop adc in lret imul dec cmp mov ret sti mov lods push (bad) lock fbstp xchg repnz push scas jae mov fcomps push out rcrb sub lret cld add mov stos in test popf mov test add pop and sbb and aad add pop xchg dec call mov mov push daa inc push fsts (bad) fisubl or dec mov inc pop nop jo je subb pop pushf or add inc ljmp idivl inc jns mov dec icebp cmp fsts out cmp fsubrs jg xor mov pop in inc add and cld inc dec (bad) fiadd lock sbb leave cwtl pop adc lock aam call mov or push pusha call cwtl fsubrs or push (bad) and mov test je dec bnd inc (bad) or jmp and sub mov loop add and pop sub fs and pop hlt add cmp push xor jo pop (bad) test mov call add cmc mov in or adc push in add push popl clc pop in mov je inc jo movsl aas add jg popa sti pop mov or gs mov ret cwtl (bad) xor and ds or pop xchg and add out (bad) dec subb pop cmp push popl (bad) mov mov pop sarb nop mov mov rolb adc pop xor cmp and add xchg push sub ljmp cld dec add cmp arpl repnz rep (bad) cwtl outsl adc bound cmp andl push fs lcall jae fidivl mov adc (bad) ss add push test xor jo add pushf stos pop pop jo mov les pusha lahf out fadds shll pop icebp pusha xchg cld inc inc add mov push aam (bad) sarb add std mov adc decl and xchg aas verr inc push mov inc lds out ss dec xchg (bad) xchg add jle push push and xchg mov cld xchg dec out pusha call addb subb push jo stos cmc lret mov add imul pop addr16 mov adc (bad) ret clc mov hlt lret lods pop sub hlt push cli inc add jo pop clc bound sbb test gs xchg or aam pop pop (bad) fsubr adc repz test es cmp scas lahf add sub mov popa notb xor cmp pop cmp in inc stc jl pop cmp and and inc ljmp nop rolb pop iret mov xchg push mov xor aam cmp hlt mov ja movsb mov adc js sbb icebp cmp add leave js es fdivrs mov lock pop push pop xlat ret xchg loopne sbb pop xchg mov shrl daa test mov dec fcomp adc enter outsb xor mov movsl xchg out and scas cmp jg sub add adc leave add sbb pop add xor iret add sub cmc fwait jae andl pop fiadd mov clc icebp mov and inc hlt mov add inc jge out clc adc sub or xor add xchg push xchg insl dec and cltd flds scas data16 jbe push cmp or xchg nop and mov in push adc mov add stos data16 cld ret dec pop cmp or inc (bad) or add jbe and mov mov sub and mov pop push mov fs pop inc jo lods inc lods mov fs add and add cltd and clc mov pop shlb xor mov lds inc icebp sbb inc inc dec daa add xchg sbb add fild jnp mov xchg pop lcall fmul add sbb add fnop es jb xchg int3 mov jne rcll add out leave xchg mov push dec push cmpsb pushf inc pop sarl dec mov mov inc add decl aad pushf mov (bad) fstpt sar xlat mov xchg push sub push (bad) pop insb pusha pop je jne inc add add xor xor adc mov ret enter cli xor fadds jns pop or or jp jo orl add dec mov loope addb daa in test (bad) and or adc flds rolb add out enter popf sbb mov add and movsb jae pop je fmull xchg add cs sub mov push (bad) pop adc test test hlt jb jbe add pop imul ret out inc insb add mov pop sbb jecxz hlt loop push mov jle cmp add cmpsb dec jl loop in add loop fnstsw pop add push add jmp jge lds and repz adc das xchg mov xchg dec add pop add cld add shlb jl popf cltd js xor sub fldl pop push mov (bad) (bad) lret add or mov scas aam das (bad) inc arpl outsl pusha je imul adc jnp mov bound push (bad) int3 sbb xor push jmp jne fadd pop xchg mov mov fs ljmp in pop rcrb push xor xlat jo xor cli or hlt addb jns jb cmp jl popf sbb push xchg call adc leave xchg or mov dec push sub add cld js (bad) mov cmc jbe cmp sti dec cli stos add fwait add shl jg mov incb movsl push movsb pop jne mov aad add mov data16 addl or pop in lock clc repnz data16 pop insb xor push inc fldt sbb ret pop mov jg daa mov aas pop add fdivp in pop sub mov mov adc mov sub mov push shr and stos push test nop (bad) out sbb cmpsl popf les adc cwtl leave jbe (bad) sub cmp leave xor sub push les imul leave push dec lds je cli daa push inc addr16 jo mov stos add jns fidiv xchg add movsl pop mov mov jae pop testl mov sbbb imul sarb mov pop sub fnstcw push mov out (bad) jno add scas mov repnz rclb imul add (bad) fidivrl popf out add cmpsl mov add xor fwait mov loop add push bound sub add in push push jns lea add lock fimul fs sar fildl nop sti inc clc sbb rol jg cmp (bad) jmp jle jp add leave ja and xchg retw stc xor or pop push mov mov lret test or in (bad) cmp or add pop stos into and dec jmp jns int3 cmp mov adc jb cmp push pop or ror mov imul push mov jnp popa sarb test jecxz pusha lret fdivrl pop imul leave inc push enter sbb dec sti pushf pop inc dec add dec and cmc mov jmp loopne adc outsl nop adc jno mov verw xor bound rclb jno lahf add aaa mov dec nop loop,pn inc jbe add xchg or mov fmull imul adc xchg movsb div pop jo xchg mov stos rcll rorb and cs cmp sbb in mov stos dec inc mov pop (bad) fdivrs popf pushf mov loop test mov xor aaa js arpl pushf enter ret jo js sbb and shll (bad) sbb mov or rorb xchg jp jg mov notb add in xor ffreep mov add inc rcrb add (bad) arpl sub icebp pop inc and push xchg jge xchg mov mov leave push cmpsl or xor inc pop lock aad lahf or jg lret or mov out sahf add adcb mov pusha add xlat add pop jno inc cmp pop sbb mov pusha call add lds mov insl add xor mov jbe repnz push fcomps mov mov hlt push cltd cmp mov pop pop pusha add icebp inc movb movsb mov mov pop ljmp mov repz pop stos aaa icebp push popa mov jmp dec test sub inc cmp pop sbb dec jne nop add inc loop daa loopne pop and fmull mov and insl repz sahf pop icebp dec add jle fiaddl jo add js jecxz loop add das mov lcall in js pusha xchg nop sub sub sub out or out aas loopne mov or sbb sub fmuls jnp add jo insl mov inc (bad) aaa incl imul mov dec inc loopne pop mov mov (bad) inc js mov sub std cld adc mov arpl mov jmp add or add cmp xor popf or andb jns clc mov adc je mov push das xor adcb and xor adc jo clc test shr add aaa xchg jecxz pop mov jg pop jle dec int insb clc mov cmp aad jne repnz sub mov sub (bad) mov dec cmc dec aaa pop mov pusha insb push cltd cmp int stc icebp sarb sbb hlt jecxz pop xchg in push cmp dec lock add dec pop mov sahf je mov shlb mov fmuls clc insb mov ja jae lock inc cmp sub clc add cmp mov aas add or sub mov aaa scas inc and mov cmp mov or or enter cmp inc jle lods lods mov in xchg add dec jbe pop (bad) sub cmp mov pushf and cmp loope mov pusha sub mov push or inc aaa adcb jmp mov jl cwtl fwait loope negb fisubr mov and mov or movsl lret loopne or repnz mov loopne movzwl mov cli sbbb in xchg adc mov nop movsbl inc loopne (bad) (bad) sbb ss or stos xchg clc add jo adc insl pop mov add ret lods jge push sub je xchg orb add (bad) cld cmpsl mov test ljmp cmp cmp xor adc pushf lahf pusha in out mov jl pusha fmul rcrl inc pop ret jb inc mov hlt shrb call and hlt fldl add dec mov add xlat sbb cwtl hlt outsb pop add mov imul mov or lret fiaddl jns sbb int3 out jl mov add mov dec cs (bad) retw or add test and add (bad) fnstcw xchg xchg adc call movsl push roll or (bad) jo addb sbb xchg popf (bad) clc popa ss or mov and roll leave je clc dec jp pop push ja mov cmp lret pop mov out aas adc mov and cld or js mov stc sub mov dec xchg pop cld and sarb sub adc push cmp rolb add mov cs (bad) jecxz idivb or push loope jmp shlb push andb xor xchg test jo stos (bad) cmp bound mov test aas mov mov cwtl (bad) dec mov stos add xor sbb pop mov mov popa aam pop ret (bad) or nop bound mov jmp js insb repz add pop outsb pushf dec imul (bad) mov inc xchg sbb ret and stos clc xchg and fdiv jl outsb jmp pop loopne test and sub add (bad) loopne adc xor enter cmpsl mov in xchg push mov pop dec les fcompp cmp add imul sub xor ja popf inc adc push mov mov add or push (bad) cmp inc shl xlat add sahf jp mov push (bad) jp popf nop faddl pop rol push out ds or sbb mov inc cmpb jg rorl xor push stc cmp sub dec adc add inc inc test jge cmp adc cmp nop pop fdivr (bad) xor dec call push add sub xchg xchg fcoms dec repz ds fsubrl fldenv or int mov jmp in js dec call add subl jo inc add and nop (bad) test cwtl ds adc out push stos cmc mov lret xor cltd and adc mov mov cmp push loop hlt clc adc je aaa push in add jg jl inc mov dec popl jne ret add jge leave cmp or sbb js mov mov iret push js inc inc add jne ror add pop xchg mov dec call scas dec mov push or push mov ret add into push mov jl adcb xchg sub pop jne dec add mov inc imul cmc sbb xor icebp loop add test sub pop leave push test add insb inc test lods add addr16 xor add xchg fldenv sarb test xor xchg push pop frstor das or adc sub lods cmp fsubrp add or jae notl in (bad) sub dec jb add mov add sub jp repnz add jno inc dec fcoms or and dec (bad) adc jge rclb pop or jbe cld fmull rcr or bound push cmpsl add xorl sbb sub inc lods iret pop adc arpl adc es pop pop or test add (bad) mov ret aam jo lahf pop mov fbstp fdivl or xchg lods mov nop cs mov inc (bad) mov divb push sar aam jmp inc push cmp mov lock adc add lock pop lds hlt lahf inc jb pop rcrb pusha stos call in aad cmp push testb jl push js pop push or mov dec movsb add stos out xchg add sub mov aaa into ret xlat dec ret je out dec pop mov adc imul loope dec xchg jge das or mov pop sub fstl pop sahf adc test subb ret jae fs notb sbb mov inc scas push nop sub jae add aaa xacquire (bad) jns mov dec fs mov pop mov mov sarb add ficomp out imul mov inc call inc cmpsl jno xor sbb dec dec (bad) jb and add mov ja and int3 add lret jae clc sahf mov add ret add fnstenv pop inc sbbl leave jmp insb or mov inc adc add dec pop je xorb add xor jo mov in fsubs sub les pop es push adc insb fsubs push fs nop add mov lock fwait add movsl pop sarb je dec jo out pop clc movsb pop pop sbbb mov int xor add jno jg mov mov ret push cmp mov xor cs fcoml add pop nop xchg cwtl cltd xchg (bad) in jae inc mov loopne push into ficom pop jbe xor stos std mov and nop cli cltd sbb js jge or aas cmp nop sub sbb daa stc popa loopne dec jbe int3 aas test mov pop in enter sbb dec mov fdivs pop jl fldcw jb xor mov pop test dec cmp add push ss or enter fcmove pusha stos or xchg add sbb stc pop fwait inc cmp clc inc fmull xor xor stos adc xchg test addb sbb pusha lea cmp sbb adc in test mov or inc in jle nop orb cwtl pop dec sbb mov push inc sahf in inc push xchg xchg mov mov or jl,pt push fst push mov xchg jge push mov mov or add fwait popa mov rcrb lret add fdivl cmp add jno mov in xchg hlt pop cmc mov pop repz and stos jle xchg push subl pusha add cs je jo loopne shlb mov jg add inc mov test mov sub mull pop add es xchg fsts and adc adc and and popa push cmpsb cmpsb (bad) xor xor add mov and les lock sbb cmpsl hlt add mov jmp or adc or pop jmp insb add fmuls inc sub mov jle jl xor push fistpll sub cld mov stos add out cmp mov jge js sub jo push and add scas and dec push mov push sub rcl xchg xor scas inc and icebp xchg dec mov ja mov repnz adc pop push insb inc int3 push in outsl cmp add jp mov imul xchg cmpsl or out scas pop add and or stc cs ret sbb dec mov jg xchg add xor nop mov lea cmp jnp lahf xchg jmp icebp fstpt add sahf and fs test enter shl test jge rolb pop add imul fdivr cmpsl mov mov add fist cwtl sbb mov roll dec out loope shr rclb jmp ds sbb or fwait xchg xorb into in sbb pop aam xor mov enter mov xlat pop test jbe and (bad) inc xor inc subl insb and inc cmp aad cwtl mov sub cmp movsl fsqrt adc add push push rol (bad) and push adc add push jno add dec cmp dec add test cli stos out sbb sbb jmp add cmc or cs xchg adc (bad) push mov arpl (bad) jo mov ficoml int3 push mov addr16 icebp dec in push and movsl mov add xor push pop mov push and xchg lods push (bad) mov jno add sub in jg cmpsb sub sbbb ret sbb cld add sub sbb ds push add mov leave inc push xor lea test imull sub loopne sub or daa mov or outsb cmp xchg leave jmp stos dec jae push dec sbb add subl pop subb enter lahf xor sub sub stos loop es and inc dec and dec jle orb push xlat lock mov push or sbb js daa iret mov xchg lods xchg gs and insb sti add xchg mov adc sbb cwtl inc cltd add clc test int3 inc mov (bad) ficompl sahf cwtl movsl cltd (bad) imulb pop mov add or dec mov push add test call repz test mov mov pop outsl xor adc xchg sbb scas xchg nop cmp cmp sub scas nop push jg mov add sbb aas cmp subb ret jb stos inc xor adc push inc push and mov aas pop (bad) hlt jl es sub mov imul sbb dec jnp pop adc repz push enter jo pop or push outsl (bad) mov add push cmp ss fiadd adc ljmp mov xor pop call jmp inc add cmc dec add sub add sbbb and push pop mov and sarb lcall pop aaa jo mov rol jns nop sti add adc mov or sub add or cmp call or xor mov nop sub mov xor sub enter rclb add hlt mov ret std and cs movl int out loope push je jbe inc jg sub and mov cmpsb adc pop out jbe pop fstpl cwtl lock nopl sarl pop mov add subl lds scas cmpsb adc lcall subl lods fsubs xchg add sub pop cmpsb pushf stos mov out sbb addr16 pusha out into iret xor mov xchg call cwtl fcoml adcb mov pop and das xor sbb (bad) jo push add cmp insb sub movsb nop je frstor dec dec movsl inc in and and and inc movsb mov dec inc push out mov inc xor ds and gs arpl (bad) adc add pop mov lods mov inc cmp add popa inc test push sub jg adc or mov loop add fidivrl sbb mov pop or lret sahf lock sub arpl mov pop cmp pop test mov push xorb mov or and mov pushf (bad) fadds pop adc mov cmp pop fdivrs cwtl pusha out lret and cli mov aas pop pushf das nop loopne mov or and cmp sub lods popa inc jb les jl dec push push push mov xchg je dec jno and call mov mov loop js push lds popa mov stos and addr16 jl sbb in dec lock push and into inc inc pop test jo cs mov push cltd ds lahf xchg mov and rolb (bad) mov jmp add cmp (bad) mov pusha scas sub mov add hlt add pop cmp xor ret xchg test xorl in aas outsb outsb lea jne in sub jbe arpl jo stos iret push orb jecxz pop push push xchg inc fcomps xchg mov stos or push loopne cmp cmp test call fcmovbe out popa mov jnp pop test sti scas or mov repz pop jns pop jbe mov inc push scas or jbe or loope dec mov xchg or jae popl and cmp mov sub stos add in (bad) jo mov scas mov movsb inc daa je lahf pop fsubrl xlat int3 inc xlat lock fmull or xor mov popf (bad) hlt flds dec stc jo dec jl push stos clc (bad) xor lea int3 test or jle test adc pusha adc xor add push stc les (bad) or mov xor test pop and mov pusha loopne test push scas (bad) (bad) and lahf mov enter add pushf mov (bad) jo lock cmp in jne cltd and in inc mov addb lods int3 inc pop push test and fcomp inc and add and jecxz or adc or jle lods dec mov lods imul cmpsb (bad) push (bad) lea imul xchg test xor insb add aam sti add mov dec push mov testl or add jmp mov daa xchg add mov sbb pop push rclb push nop pop pop sti inc add test icebp fisttpll add mov inc pushf add adc ror mov loopne or mov add inc popa lea enter stc pop ss hlt and je dec pusha cld orl in popa int push (bad) stos inc ljmp cwtl sub in lret cld popa mov add jl rep add fstpt dec and or jb push mov sbb or add dec out add roll lock cmp xor lods cmp xchg ds add mov cmp pop or shll mov mov mov stos and or lea nop (bad) jo (bad) and add xorb sub jp mov cltd js (bad) cmp jno add or xchg (bad) xor mov cli dec ficompl test bound mov fwait add xorps dec loopne repnz fstl shlb xor hlt popf in jg pushf lock (bad) dec dec clc les adc add sbb dec mov dec int3 mov pushf ret jl call jp xchg mov xor add xchg mov sti xchg pop fimull cmpsl add (bad) mov repnz cli sbb arpl daa (bad) in dec popa movsb sub add leave ror xchg add push les or loopne adc pop cmp insb enter dec add stos clc mov mov dec add dec dec cmp mov or stos (bad) pop or mov mov sub loope test push fistpl jns std and rorl sbb cmp cmpsb enter js neg mov test adc push repz pop add push jo xlat test add pusha add ret dec bound loop js flds adc enter jle mov add out loopne rol daa cli mov mov or mov and loope pop movb sti or or sub mov cmp mov push push mov and and mov adc ja (bad) dec xchg hlt sub add repnz (bad) ficoml xor ja inc xchg scas stc add test pop pop (bad) insb cmpsl bound es iret call push cmp pop sub add add dec inc (bad) xchg fist pop es add in test dec add mov add dec int3 loopne pop lahf cmp out adc mov inc fnop nop lock fdivp and repnz dec xor cmp jb js cmp adc imul shrl ja add jns stos cmp loope dec and push setno in test mov outsl jg xchg loope and xchg testl addl in in push or enter cvtdq2ps jmp aad hlt std fcmove nop mov lret mov aaa mov aas or mov push imul cmp loopne in das add pop fwait and lret mov add hlt nop test fdivrs jg add fisubrl pop jl mov inc and jl push sub mov adc push scas and sbb pusha add xor out sub mov nop and inc adc or mov clc jmp aam xchg sbb enter pop inc sarb mov andb pushl daa ljmp outsb jmp adc mov or nop les addr16 (bad) push clc add dec enter dec xor inc xor push inc sbb jp inc push ljmp aam push cmp jnp jg inc je in mov je (bad) loopne xchg sub aam mov lock and loopne (bad) xchg jge add mov cmp jo pop loopne jo pop in roll add add insb gs mov add loop xchg mov (bad) aam clc mov lock mov add repz shl fldenv ds mov and into sub cmp mov mov (bad) in lods adc mov fbld test mov aam in dec adc addl out xor loop ret mov dec mov push lcall xor sbb and add clc add mov rolb push mov push and clc ror adc push add sub sahf mov cmp mov movsb lahf or mov jnp add sti xor stos push add jecxz mov mov nop dec je and jne add pop jb mov lock jbe adc xor add cmc cld aam cltd cmp clc or xor or adc add mov enter pop add repz popl push pop and cmp jge fwait adc or sbb pop dec lret mov hlt add mov leave jnp add fild lds mov mov int cmp orb mov les mov dec jne fcomps std or jno lock ficomp test mov push dec mov popf mov pop add incb adc inc push mov sub sub faddl jge jle in ret orl pusha repnz add lods rcrb xor outsl pop xchg add iret ds pop adc sub ds xchg sahf mov scas push fnstsw mov sbb mov add xor js jbe add out xor rorl mov (bad) aam jg jmp pop adc add je cmp pushf mov pop pop lret inc xor arpl adc iret add leavew test lahf cmp insl and popa ljmp pop xchg shrb cmpsl mov pusha add xor leave cli (bad) mov adc sub in out lods sbb rclb jo adc adc int3 addb mov xchg add mov add ret lock nop mov push scas dec sub sti sub test add or cli jg add pop or pop (bad) xor xchg xchg inc insb test pop mov mov add pop jo mov cwtl inc call mov push and fldenv mov jl cmp arpl xchg out add xchg fldl add pop mov rolb mov inc daa inc les pop xchg enter mov mov add add lret xchg sub inc stos icebp pushf dec or adc stos sti sbb jmp cmp xchg cmp cwtl shrb cmpsl in and icebp sbb xor pop test cmp add lock subb and movsl push sub pop cmp push cmp rol inc or movhps rorl movsb xor or incl cmc popa lods in lds mov dec mov sahf cs mov or lods pop test pop loopne test cmp shll sbb stc mov sub add cltd sbb in out mov fcmovu or add mov add push dec out sub inc cmp sub jmp fwait (bad) int3 pusha mov sub xor sbb sbb adc jmp adc pop shlb roll mov cmp and popf inc js push daa xor psubsw jno xchg mov inc bound stos cli push xchg daa xchg adc cwtl xorl hlt adcb lret xchg imul fstpt nop fnop addr16 sti bswap fwait outsl jl dec mov add dec xor push test insb clc adc fisubl pop jmp xchg push stos pop inc shrb push pop dec dec mov es repz aaa mov or in add dec cmp pop add je aam jge add testl xor mov adc inc jle loopne dec inc rolb jae add pop xor enter dec bound dec lret add sahf imul repz mov inc sub push jo sbb pop int xor or add mov sbb add das xchg pop nop sub fadds stc sub outsl lahf adcb call test pusha emms add and add pop xchg fsts jle cwtl sbbb xor sub cld je rcrl cmp add imul insl hlt daa pop stos addr16 or add shlb push add in (bad) mov aam xchg (bad) mov adc or lods mov in mov loopne pop dec mov cmp ret jno nop rorb ret mov dec pusha mov add addr16 cmp mov add arpl mov rorl clc js xchg insb add loopne mov sub inc add (bad) jmp incl pusha lds jno ds pop push push cmp xor in andl xchg lcall mov (bad) jno cmpl sub mov mov push mov sub and xchg cli orl cltd add pop push push pop imul adc jge add or leave lds je push mov aaa call enter sbb add aas cmpl lds push add add and mov repnz fcomps jg lods add or jp push add pop cwtl (bad) add andl stos (bad) imul jmp shlb mov or push mov add xor js dec add xor sub xor and rclb jecxz bound data16 cmp pop add mov nop jl dec add repnz jno dec test or clc xchg inc cmpsb fadds sbb cmc cmp mov repz and jg mov add ret lret pop test idivl inc xlat pop in stos adc inc clc cmpsl inc add rorb xchg xchg jl es pusha clc and leave inc or mov add mov mov adc ljmp xchg jle adc or or daa aas pop sub mov stos add add pop mov bound adc sbb push int and add dec ds sub mov adc xor movsb mov dec pop aad daa xor pushf iret push notb das cltd nop lock lahf rcl sub test push test adc push loope xorb mov or push cmp je jge pop cmp mov mov (bad) in add inc dec pop test inc add sub dec add mov xor ja jle stos ret sub jns and shl mov clc mov insb cmp add outsb and orb sti test adc cwtl mov push pop or fldt aam stos sub shrl xorb pushf je add jae mov in push and mov adc test icebp adc sti outsb daa int3 fadds push jo fimul jo inc sbb jnp or add lds sub push pop dec pop add ljmp call adc inc cmp add hlt jle adc cld sbb pop inc xorl adc pop popa pop jns es mov inc mov divl mov pushf cmpsl xor sub test sub add dec ret enter cmc adc das sarb enter in pop nop mov repz movsb mov comiss sbb add push lods stos cmp adc add sbb push fsubs scas daa test cmp lahf andb mov pusha add sub pop nop fdivs and xor jle adc ss or enter (bad) mov nop and jb aam push xchg jl sbb fistl add adc sbb sub pop ret mov add jnp dec std sub jns rclb add jno enter enter es test inc fadds cmpsl fcoms es cltd sahf ds inc aas outsb mov cmp mov add pop or popf sahf and insb in cltd and dec add mull aam lock stos push icebp sbb hlt iret inc push mov std mov sar (bad) nop xchg jns mov and movsb sbb jp lock cld add push leave pop mov lock roll insl imul popf pop push dec push cmp pop adc adc cs mov ret les jmp xchg and mov sarb add dec (bad) xchg mov add xor or xor mov xchg jne cwtl xor mov pop add insl dec xor mov out test fisub js pop (bad) sbb cmp adc or scas inc jno sti sub sbb shlb test jmp fildll xchg lret mov push fmuls jno push fnstcw pop call ds mov lret (bad) arpl sub aaa pushf inc and mov cltd xor and cmpl mov add pop ret test dec mov loop mov jmp cmpsl cmpsb pusha sbb (bad) movsl xor push pushf aas and out js,pt add mov stos shlb adc cwtl nop cmp mov inc movsb pop hlt xor jle or test xchg imul add repnz adc sbb mov push or sbb adc das icebp (bad) (bad) mulb out dec dec movsb inc fstpl cmp mov inc stos push xchg (bad) pushf add or inc dec clc rorb add nop cmc pusha or mov xor inc in inc cli sub inc out fistl (bad) outsb or lock add pop dec rorb in xchg fdivs loope add and gs xor mov fsub ret push mov sub fdivp cmpb call data16 or and loop adc movsb jb shlb fwait adc adc mov pop lcall mov or popl xor xchg xchg pusha jg adc pusha push pop loop jge add inc sbb pop fild cmp push daa dec dec imul sbb sbbb lcall push fcomp add ja push sbb das ret inc stos cmp mov jo js cli add push (bad) scas mov sbb std hlt push outsb push xchg fldenv mov add add pusha pop push nop add and aas mov cltd sub out stos repz sub imul xor mov inc pop push es aad xor lret test scas jb cmp rolb sub enter pop fsubs stc je push aam pusha adc mov mov and inc ds (bad) js pop (bad) mov dec scas jl xchg rcl ss adc pop out (bad) dec xchg loop mov loopne dec leave test bnd les inc and orb push ficomp std ja sbb xor into mov cli mov stc adc push pop popf dec xor incb js mov inc nop sub pop dec adc sub jnp cld push sub or stc mov out pop pop cmp jo jg xchg in sbb mov inc bound adc test and call movsb jp push addb fisubl ror and pop mov mov dec popf xlat jg push cmp or lock ds sbb popa into add xchg push xchg add inc mov ret sarb dec hlt xchg mov fimul or cmpsl sub cbtw pop negl (bad) xor fwait outsb and add push int3 pop sbb (bad) popf pop dec add mov sbb hlt sbb mov outsb xchg lcall mov add add rcll mov std or in call out popa jo mov xchg push mov mov sbb icebp sub cmp adc mov sbb repz out cmpsl das clc dec pop adc roll xchg or mov add xlat cwtl cmp push (bad) lock jge js mov and inc cmp es pop xchg in data16 fmuls pop or roll adc or out inc jo (bad) and testb into repnz inc in les sbb push inc inc mov test jmp test sti cld inc nop clc test imul ret xchg data16 clc ret add int3 and inc aad pushf sub cmp ret lock cltd mov add int mov pop and cmp or dec or mov xchg or push lods in ljmp and and sti xor pop stos mov fistl nop fnstenv inc add add push and pusha inc lret lahf dec cmp fdivrs push xchg test cli pushf aam cmp dec cmpsb pop and nop and dec xchg idiv push (bad) movsl sahf add jg or lock fadd xchg les dec xchg in pop test and ja adcb ret addr16 mov cmp sbb add pusha add and test and (bad) je pop dec nop test pop sub dec pop mov hlt out leave mov repnz jecxz cwtl out out sub cltd mov clc or and and cmp add push jo test mov sbb (bad) iret jmp or ret push inc xchg push cmp jo jge or cmp pop test add pop cmp adc inc jb jno out inc call or test test movsb inc add or in add push dec jbe mov test movsl sub sub fcomp push jg or daa add xor xor cli sbb rorl out aad int3 cmpsb les sub repnz xchg adc xchg push cmp and in and pusha push scas inc stos stc inc rolb popa pop add (bad) push fidiv sub add mov daa and scas adc add jg pop aam inc repnz data16 xchg push add push (bad) sub or cmc sbb icebp or std xor cmp cmpsl inc pop inc add sbb add mov std fs dec xorb psubsw mov scas add push pushw dec push roll in ljmp add inc cmpsl mov aaa mov int dec add pop test xchg sbb and or pusha mov xor out add mov sarb jne enter je js jle add sub jne add call fsubl fwait loope,pt sub testl push fbstp sbb cmp xchg push iret mov clc cmp and scas pop jmp xchg call stos lret lock jg imul jo add pushf push or loope movl dec sarb movsb cmp adc insb aaa inc pop loop add sbbb ja add fadd pop or sub pushf (bad) add pop cmp or lods push mov imul dec (bad) int3 outsl dec es insb outsb inc dec sbb sbb mov loopne dec pop sub outsl in inc mov sbb add loope push dec or lret leave sub sub add add adc js and xchg adc rcl add xchg mov hlt mov sub pop cmp mov sarl mov xchg push aaa cmpsb add pop or loopne lock aaa mov pop rcl jg mov cld and dec xchg pop movsb out inc jo xchg mov xor testl push cmp and sub sub lock testb movsb cmp cltd push mov inc lahf xor js jge cmp aad add sub dec sub cltd es jo pop pusha xchg pop mulb sbb mov push loop mov sbbb enter mov pop jb mov fdivrs mov rolb in lret push imul add out add ljmp cmp divb push adcb (bad) hlt inc movsb mov mov popa fild or adc xchg pushf mov jbe pop add int adc fnstcw mov and add lds outsb stc add notb pop add sub sbb dec jo mov or add f2xm1 add jp or cmpl or jne add inc sahf shrl jmp adc enter nop mov popa xchg xchg loop test jo mov loop mov int sbb popa push adc lea xchg or std jmp cmp fdivrl jne push add ja icebp add xchg pusha ret mov dec repz loope sub pop mov jle inc and popa test pop sub push or add mov int3 test sub push nop call iret sbb jne push lret test jbe add push lock sub sbbl mov push call lods mov insl fwait xchg loop ret mov pop pop out pusha add or lcall dec add or pusha loopne repnz mov pop (bad) pop les xlat cmpsl int3 fsubrs fwait rclb sbb mov xor mov in add and sbb scas pop add bnd insl pop fdivr jo cmp pop mov add push in inc repz cmpsl mov imul add out lahf dec mov xchg or add je jmp movsl pop push (bad) pop sbb adc jbe cli mov je les ret fsts and jb sub adc (bad) arpl sub push pop mov fnop mov cwtl inc jmp fsubl push fbstp stos sti add pop jo xchg jmp mov lock mov mov popf outsb faddl mov cmp dec jno fsubrs outsb add adc sbb and popa mov inc jle sahf and cmp sbb mov dec daa outsl repz push and aad mov mov shll movsb arpl jge xor mov mov ja test push (bad) sbb cmp jmp sub sub xorb xchg imul and inc pop clc outsb sbb pop dec (bad) xor ret leave add call lea cwtl lock les pop hlt add push popf rclb push sbb or sub dec jb aaa sbb nop imul inc fistpll fs les rorb pop jmp and jmp loopne pusha mov push add out popf jnp or cmpl call mov test pop sbb imul xchg leave pusha xlat adc and adc test rcl lods xchg pop add movsb add dec int3 movsl jnp and lret lret adc call sbb mov inc mov add test nop mov ret mov pop xchg xor or jmp sti (bad) jns ret cmp push cmp andb lock mov mov mov mov (bad) stc call iret sbb mov mov popa mov clc add adc xchg hlt and xor in ror divb push jo ret leave push fsubs inc inc (bad) dec movsl xchg jg push push or mov cmp dec inc push inc mov or add arpl nop sub scas dec push cmp scas stc call or pusha ljmp cmpl mov add mov mov test sti mov add and dec xchg cmpsb inc xor inc mov mov out and scas lcall es mov (bad) inc xor adcl mov in es cmp and stos mov sub mov and add cmp mov dec pushf and jnp sub in pop jb or xchg rorb fildll mov sub and sub push cwtl dec movsl and xchg dec dec add loopne mov pop sbb ss leave mov xlat sarb jp sbb sbb dec mov or xor mov add sub fsubrp or scas cltd repz and jecxz cmp ret push insb mov push mov mov cwtl lock mov inc popf (bad) sbb shrb sti lock inc dec pop pusha xchg sbb push pinsrw or pop dec push imul ret mov mov jns loope mov mov sbb mov dec mov jns imul test fsubl inc and out mov dec xchg inc nop sub cli mov ret dec sarl cmpsl mov test push mov mov push mov leave movb cmp rolb icebp add push data16 jg stos add lret mov jge inc push fsubl xchg ljmp pop and test xor jmp in jnp xorb adc dec mov rcrl jle mov sbbl mov xlat or pop cmp jns push push pop stos cmp imul jb xchg andb mov sbb mov sub sub lods sbb and and xchg es dec inc mov lret insb enter add enter add push cmpsb fmull add call or fs pop or ret in sarl stc mov leave cltd lret and inc rolb xchg mov rorb sbb cmp mov mov cmpsl dec mov or call jns sbb cld leave popf int pusha lds mov push mov cmp ret xchg mov stos add into sub inc (bad) and inc test adc jo add call fcompl xor cmp inc (bad) mov loop dec incb cmpl lcall aad pusha in cld lcall dec pushf nop repz add cmp sbb xchg mov inc xor data16 push lret mov mov mov stos in mov lcall add je in sbb sub adc out movsl add cmp dec cltd push jl or mov mov (bad) jnp and enter dec aad push sub dec or jno jmp jmp in inc sub mov cmp or test clc sahf pushf adc and fwait int lds and subb sbb in cmp lock dec jnp movsb add dec mov pop xchg mov jmp mov fs pusha pop call inc sbb dec mov popf les push add and insb and adc mov orl ficompl xchg insb pop sbb lods mov xchg mov out sbb cmp dec mov stc lock lock mov push jne test mov icebp push ljmp test xchg cwtl js popf (bad) push sbb in mov mov add call add repnz loopne (bad) inc scas add sbb inc popf and and lds in and inc mov and test rclb sub mov xchg add aad int3 clc lahf movsb mov nop push sub aas sarl (bad) and (bad) testb es cmp jbe sarb lock add dec push inc insl (bad) shrb or dec dec jp add incb cmp inc int aas lock push sbb xor jb out push add push xchg push jp les sbb ret sbb pop mov inc outsl andl je mov nop fsts jg cmp push loopne push icebp repz adc fwait lcall ret mov pop adc push or sub pop into or pop cmp in shrb aaa roll aad inc pop imul loopne lret addl leave xor int3 mov pusha mov lret xor mov cmpsl fiadd or loope repz gs push hlt or jno ds add ds and loopne jg lea sub inc jecxz,pn fidiv sbbb add xor mov xchg out add (bad) lods in rolb cmp jp push push lahf mov dec add (bad) scas iret out pop xchg bound jne or pop sarb mov cmp sub mov push enter xor in aas push (bad) jo repz lock loopne outsb mov les (bad) repz mov push or outsb pop or (bad) test adc or inc lock sti fsubs dec mov ljmp jno out or in jle pshufw lock inc jecxz jecxz xor push dec mov call lods vmread pop push shrb lock or push sbb addr16 and int3 shrb insb insb mov nop inc jns xor or push inc mov mov mov adc mov sub test or push incl cmp daa and mov sbb xor jb or mov out ljmp mov leave sbb sahf nop or test arpl cmpsb mov test adc lods frstor adc dec pcmpgtd mov adc out andb sahf push xorb sbb push les lcall mov or sbb into js inc push jge ret mov sbb hlt and cmp ret inc loope dec test add add hlt pusha (bad) xchg adc xor or ret out or adc add (bad) mov pop xor push adc in mov push xchg inc loop xorb mov pop je mov dec ret popf pop rolb int3 sub aam adc insl (bad) cmpsl in in or fcmovne dec mov ret pop sbb dec ds mov and mov cwtl arpl mov outsl add cltd pushf jb add mov (bad) loope xor hlt mov sti jns int or cmpl in mov sub or push fs xor sub ds popf or add pop adc adc mov add xor in js or mov adc inc fwait inc sahf mov xchg jecxz add jns mov adcb movsl add xor sbb adc and test pushf outsb int3 sarb int3 dec inc add movsb nop cwtl mov push jl mov cltd pusha inc pusha jb or add mov or sub xor cmc roll push call cli imul sub inc jp add xchg rorl mov cmpsl dec push leave int3 sbb push call xchg cltd pushf es add out das add add cmpsb imul push (bad) sarl add lds add fs xor pop add cmp adc cld inc pop add or and or call rclb adc push push dec imul les jmp push push out popa nop lods outsb inc push inc sbb push xchg movsb lods jo jne push mov sbb xor ret mov inc xor jl or repz test (bad) les in mov mov push or bound flds mov js ds popf adc addb ret inc fdivrl in leave sub das adc xor adc mov push shl and fisubl cwtl and pop call mov or cmpsl popf fstps push add loopne mov pop enter rcr or lcall mov jl xor mov jmp jl dec push daa mov sbb mov add add aaa es inc add push add dec ds cmp femms push pop pop cmpsb inc jl push push cmp je fstl gs sar push (bad) std mov test test fnstenv jl movsb add call leave adc cmc push pop xlat sub icebp mov and inc mov jb pop cmp out or (bad) div mov lcall negb dec and test loope outsb int sub pop jg pop xchg jmp push outsb mov (bad) add daa sub in notb loope cmp mov fs xchg dec movntps pop pushl cmpsl pop shll aam pop xchg jp add push test pop cmc in jne sbb inc xchg (bad) jno cmp push sub dec mov sbb popa and pop fisubl test movsb pusha sub jmp (bad) mov sub adc xor mov push loope add jmp roll sbb inc cwtl xor pop add dec mov rorb cmp pusha test mov xor mov pop shr jmp sub pop push mov jl pop and mov mov adc in fld shr jge pusha dec fistl and add jbe in not aam push sub xorl pop mov jl shufps idiv orb andb idivl jmp pop inc test sub sahf push mov std les test jmp sbb call and incb sub pop mov jg xchg adc jnp js mov or push or push add dec pop out xchg insb lcall inc sub jmp pop pop inc jecxz adc sbb jmp adc and inc and lcall addr16 sahf adc and into ja loopne cld or insb pop test inc pop cmp or jo lahf cltd andl mov or int3 xchg push mov jg aas incb pop sub pop sub add push (bad) or fistl repz jg inc sbb or (bad) outsl sub pop divb popa cld out adc inc fwait add pop and fisubr out jg pop es mov cs mov daa add imul addr16 lods mov stos sub pop mov (bad) sub loope (bad) mov dec add pop adc xor test enter call (bad) xor clc add jge dec push rclb pop or into pop add sub push mov cld (bad) cli or jne adc aam pusha arpl pop pop xor and push or add sub adc adc lret push inc shrb mov pop mov pushf lock or push jmp rorb jo add rcrb fsubs pop push mov mov loop xor in into xchg lea clc add fdivp mov mov push in out out in fbstp push (bad) (bad) in loopne repz in rcll stos in inc sub and mov pop xor mov dec fiaddl outsb dec sub pop loopne imul loopne cmp add repz ret cwtl adc jae pushl mov mov and jne or rsqrtps xor jl aad divb pop adc push ljmp popa call incb or pop (bad) sbb inc sub clc and (bad) add push jle or add cmp add adc cmpsl jnp sub push lret jns es pop add mov pop je add dec inc testl sub cmc psubq adc dec cmp addr16 cmp sbb call jecxz lea ret test xchg (bad) faddl pop out dec mov adc and ret (bad) and xchg xor add adc flds dec pop inc cli mov fisub sbb and inc sbb roll les in xor mov jmp push movl nop lea cmpb and aaa inc test add mov mov mov and mov push pop ret inc mov and ret (bad) push dec dec movsb inc xorb mov xchg jae pop (bad) fsubs xor dec mov scas cwtl mov or enter pop adc add lds or lcall popf addr16 (bad) (bad) addr16 xchg pusha daa (bad) add mov addl xlat jl sbb cmp enter (bad) push jae and gs mov fldcw sub fwait out sbb sub (bad) ret cmc (bad) incb popf mov loopne add sub xor stos mov sub mov cmp clc sub stc push adc pop (bad) lahf out jmp inc jp sub xchg or inc icebp push dec add pusha scas rclb ret xor inc loop inc jne stos add sbb lds xchg rorb test sbb add adc test jo jns xlat repnz push shl jno sbb sub (bad) lcall daa pop outsl int3 imul fild popf sarl out sub cmp pusha dec inc jg lds pop push sub shr (bad) mov xor and push mov add andl push leave in test sbb adc adc dec sbb out bound scas dec in cld sub mov mov and cld dec pop sub js adc pop aas add inc inc cld adc into jbe push inc adc mov inc shrb inc add xchg mov xchg adc cwtl stos int3 jmp add pop inc adc loopne aas cltd into add fimull in inc pop push rolb out (bad) inc jmp add roll rclb adc push fiaddl std cmpb push and mov stos mov and add les test flds pop insl cmp aam jmp insb fadd cmp out mov rolb cmc repz xor les add lcall pop xchg aas shlb psadbw mov pop ss or popf push popl loop sahf cld add xor adc bound xor add lahf dec inc in or dec inc mov (bad) dec mov xor jnp std dec xchg sub (bad) in dec pushf add cli stos push fldenv leave push out ficoml pop iret jp rcrb push fdivrl (bad) mov push (bad) repnz and sbb xchg xor shlb out mov xchg rolb into out setp mov (bad) (bad) hlt inc aam in scas mov or cmp add in inc sub adc test sub push jge dec inc sahf dec inc push aam loopne stos popf push cmp cli jnp repz xchg lock push pop mov pop or clc scas sbb mov loope and ret es add mov sub adc adcb pop (bad) in pop pop cwtl shrb jno xor mov inc mov scas dec mov pop aaa movsb and mov xor and nop add adcl dec mov adc adc add rcrb sbb cs hlt add pmulhw mov and add cmp xchg adc addl in cs mov popf cli dec daa mov dec mov and faddl pop xor nop push ret xor sarb in push es sub pushf jmp xor mov and (bad) add add xor lea mov adc or aaa movsl rorb movsb call repnz int3 mov js xor mov push cmpsb add and into jge pop test and roll hlt cmp mov adc and inc inc adc add inc push xor rcr gs xor add add inc dec or cwtl lods mov mov les stos imul cmpsb mov and add testb push xchg mov sub mov ret push sub mov or push stc loopne mov call mov mov jb add dec jo adc ds movsl xor add xchg lock push outsb ret clc lret notl repz sub mov xor adc jmp inc push pause dec cwtl lock testl enter xor test inc aas cmpsb fdivrl inc push mov inc mov lcall inc inc inc xor ret sbb outsl ret sbb cli (bad) mov aaa inc xchg stos (bad) fimul add dec shll sbb ret xchg adc mov inc mov xchg xor sub adc mov hlt int3 adc test pusha mov out add or outsb add jmp enter les inc (bad) mov inc insb pop fdivs cmp into loop cmpsl cmp inc in pop or push dec push mov and or data16 cmp add cwtl test xlat mov addb pusha adc fadds cwtl dec enter fsubs jb add adc ret add push mov stos insl push dec push xor dec sarb clc sbb push inc pushf mov aas inc cwtl add mov and jo add add cmp sbbb push clc jne mulb les loop and or cmc les xchg push rclb ds push cmp and or jne jge sub mov aaa aad or and pop insl inc adc aam cmp loop pushf lock add push rol dec les adc lock mov xor mov sbb push stos mov repnz push loopne dec add cltd and lods (bad) sbb inc shrl movsl fdivrs mov inc mov movsb push cld dec js,pn pusha xchg inc jo sti or xor orl fsubrl aas (bad) mov mov and shll fs xchg pusha inc fisttpl push and imul cli mov out sarb (bad) loopne out scas pop aam xchg lea jno (bad) adc hlt pavgw repz mov aaa mov pop push sahf insb sub enter (bad) pusha adc outsl les push xchg push or sbb in dec and (bad) ss mov or push std push cmpb jae outsb sarb scas cmc clc jg scas and push int3 in jecxz shlb adc mov aas enter roll pushf dec in pop mov fsub stos mov mov and adc das sub insl sub cld inc add mov lock sbb adc adc cld rcll ror fadd leave (bad) lret int3 lret clc add popa sbb pop dec hlt pop fcom (bad) inc jl ret enter out add aad cmp bsr lea test sub scas xchg jbe jmp and fnsave test mov xor and adc sub dec popf aaa and inc push arpl jle or pop cltd jg inc mov add stos mov nop xor jmp push pop mov sub adcb leave and rcrb cmc int3 xor xor mov iret (bad) mov mov repnz ljmp fcom ds xchg cs inc rcrb or inc or sarb add in xchg mov mov movsl xchg adc cld sub popf adc arpl dec push sub shld cmp enter push pop pushf mov pop add stos pushf in popf roll nop and hlt inc dec pop cmp lods and (bad) mov inc mov loopne fcmovnu and movsl push fs xor inc dec jmp les enter fs pop pop bound mov xchg ud1 rcr insl lods mov xorb lods and and pop shlb in ret cli stos (bad) rolb adc orl push int sub jno hlt pop pop add loopne rclb push scas xchg jns test and push pop inc aas lds dec push (bad) push mov pop add cmp fcoml vrsqrtps lock sub stos icebp dec out mov adc pop addb xor ds lret dec pop mov mov sub fsubs jl push inc jge add mov push xchg out and push sbbl pop (bad) clc ja push dec mov pop push add lods pop je,pn sub push in in (bad) jb or loopne ljmp cmp stos push call cmp jmp sub (bad) and xor nop nop call sub cmpsl cltd mov dec xor mov and sub nop outsl mov pop adc popa push sub add mov adc mov mov add fildll and push xorl imul movsb out jl mov or add push aam cmpsl push clc mov inc sbb test add dec add je in inc sbb movsb sbb fwait jnp sbb in cmp scas sub and cmpsl lea hlt mov xchg add push dec dec add xorl enter dec mov push pop fdivs mov cmpsb cmp mov mov pop xor cmp mov cmpsb mov xchg mov inc clc dec mov pusha inc sbb test sbb xor sahf pop add dec lret scas xor mov adc cli cmp arpl cmpb add xor (bad) jecxz fldcw xchg sbbb js cwtl inc sbb add jns sub leave outsl mov (bad) xchg push xorl xchg movsb orb outsb add pop rcrl (bad) jae and repz jmp cmp add push movsb mov xchg mov xlat sub mov pushf inc cwtl lret jbe sub call cmpsb pop mov gs test rcl pushf xchg push mov lock push scas mov sbb push jne mov sbbb rolb lods jb ss add push push fidivl mov rcr gs xchg cltd jmp out add lret jno loopne inc pusha dec sub fwait xor xor mov and jp and dec xor lret jae pop xor sbb mull fldl xchg lock out ljmp or lret jo nop adc mov or ret inc ljmp add jno gs push push decb pop add push jp inc mov cwtl sub sbb orl mov fwait jg push mov push movsl ret arpl ljmp movb sub cmp xor nop insb push int3 dec add data16 pushf sub ds xchg xor and dec dec sub jnp call fsubs js push test mov xorl pop inc add mov xorb mov add cmp and add ret fmul ljmp adc movsb int3 or mov jmp lret push (bad) icebp sub loop push push push dec or jp lock ror popf jb pop test (bad) and or test pusha xor cmp push xor outsb inc and adc ret addr16 jmp mulb jno icebp dec mov mov xchg pushf or xchg mov xchg dec fstl popa orl pop in xchg xor adc push out add push (bad) xchg icebp rclb add mov dec fadds push imul (bad) movsb inc outsb cmpsl jmp push push mov mov fst inc ret xchg int3 mov xor inc cwtl cmp inc adc adc dec cmp lds inc test xchg data16 inc adc inc add pop dec js mov and xor andl or xchg pop fimull sbb xor rcrb dec jle pop ss mov lods and or inc roll or fnsave mov or pop add mov pushaw push lea push adc dec sbb add ja out test call leave adc xor mov orb in (bad) out lret fs out push nop xor and pop dec mov (bad) push rol les dec or pop daa pushf sbb cmp push mov push in insb cmp and nop and adc call or cmp push or push das mov pop mov lods lret pop inc adc sub mov sub andb loope daa pop xor pop jb lock pop or es ja and and mov ljmp js push push mov stos sahf add in sbb mov push adc in nop pusha push dec pop dec pop mov push outsb ret jo pop call and fcoml sti add push inc shrb add dec pop dec sub stos mov bound adc adc test xor add loope repnz xor mull pop jge mov je (bad) mov jecxz in inc jns fs inc in inc clc cs or sbb push xor loopne fs add cmp dec mov push xor mov add inc les push shrb cmp mov and lret (bad) (bad) jle sub pop inc outsl add (bad) icebp lods mov dec xchg mov inc cwtl call pusha pushf test cwtl lods sub lcall call scas xor cmp es push push cltd cld adc push cld test inc hlt arpl pop sbb add jne imul or xlat sub inc xchg and mov shll les movsb mov pop clc or lock xchg jo,pt adc loop dec add leave movsb add push rcr cmp subl mov dec xchg add mov and shrl sub add xor pop cltd jbe jo adc icebp loope movsb inc fs fsts inc sahf xchg pusha loope and je movsb les push jns test pushf sbbb xchg in or mov cmp (bad) jecxz add mov dec arpl xchg imul mov cmpsl xor cmp addb popa loope pop xchg push jge cmpsb nop icebp push mov inc xor push nop mov adc xchg pop test dec mov ret and bound nop xchg xor mov test into push inc mov sub and xchg or add icebp aam aad jbe cwtl or xor add fstp (bad) or cs adc jmp adc and mov shlb push jmp pushf pusha loopne lods cmc clc enter out lea outsl xchg xor call push xchg adc repnz les fdivs push mov xchg sbb fstpt inc jno test test adc jae lret mov adcb and inc or xor and adc add xor cmpl mov adc jmp and mov cmp bound or mov sbb in add je add xchg hlt cmpxchg add add sub stc mov inc sub mov mov add push add ret loopne test sbb arpl pop fwait cmp addb xor ja mov js add xchg leave test clc rorb out push mov lret push arpl mov pop mov dec push cmp or mov and pop add sub inc cs or in dec ret (bad) fwait jo mov cwtl xor mov (bad) and xor add fldl lret loopne repz call jp and mov sbb cmp decb mov dec inc sub movsb insb rclb adc js and lret push push cmp es adc leave shll (bad) jb sub loop inc xchg loope fmull xchg movsb dec jb sub and sbbb sub dec dec and adc pop push cmp pop or cltd call scas fidivl mov add mov push lret sbb fisubrl and dec mov loope xor mov dec add mov sbb cmp lods lock int xchg mov fmull mov add sarl sub and and subl mov push fs clc andl sbb mov gs mov test pushf icebp add rcl mov cmp add xor jne push mov lret frstor add push cmc or and ret (bad) ret cmp repnz cmp verw (bad) or cmp sbb roll popf std inc nop pop out mov cmp mov cmp ljmp rorb insl data16 in stc push mov push push xchg mov cmpsb mov sbb push in sbb or and cmp inc nop (bad) pop stos mov pop clc add shl std mov fadds sub lret jmp gs xorl pusha push cld mov movsl add sbb sub sub decb xor cmp lods sti xor aam and pop cmp test sub add and or les nop/reserved jmp cld leave or scas inc and sahf push mov leave call jns push add and scas mov shrl mov add in std sbb adc and inc decb mov adc fiaddl adc adc je clc fwait xchg push inc mov push add lea pop mov andb inc into jns mov mov clc and adc lcall jle pusha roll inc addl add fstl push rol movsb pusha mov xchg push push (bad) jnp jb add (bad) (bad) rcll xor jae out pusha fs data16 loopne sub iret push mov test int3 add leave add mov call movsb dec inc xchg pop rolb pop xlat xchg add mov outsb pop aas das cmp mov push dec and cmc scas xchg ss mov add mov lods sbb sub scas or imul and out lahf add xor test aaa adc lret daa sbb push mov inc subb jl cld mov dec sbb add mov mov popa js push mov out push mov fiadd mov or loop sarb aaa sub sub or dec mov arpl mov sbb xchg sub push test subl jnp rolb dec xor push xorb insb pusha les rorb fs xchg inc pushf push push mov adc clc rol cmp dec and sbb cwtl mov sahf test or loope sub cmp xlat dec movsb mov add push adc adc or js xchg or cmp mov xor int3 mov cmp (bad) popa xchg mov or cltd sub pusha jl push sub inc int3 xchg xchg nop sbb xchg shl sbb pop leave loopne enter jge test loop data16 and out mov mov lret data16 and (bad) faddl sub pushf ret mov mov sub std into add xchg xor out pusha sbb insl mov daa mov mov mov and (bad) mov scas and sti mov inc mov popf xor sub mov jno aad sub xlat les push subl or (bad) pop scas rorb sub xchg shll cmp data16 cmp inc loop (bad) jns push cmp xor dec int3 mov or mov out andb and or jle (bad) rclb out inc cmp rorb mov fcomps je rcl jb inc aam cwtl pop mov dec xor mov push mov add jo leave add insb cwtl lock xchg sti cmp sbb mov lea mov dec pop fdivl aad jae push das cmp dec popa fwait pop jnp loopne mov std push inc jb push lods push cld fs mov lea insl dec mov inc and push pop pop rolb (bad) test cwtl add out adc inc (bad) cltd enter cmp jns sbb xchg pop push mov ss inc or fwait jmp add lea in lock cmp hlt push adc or mov mov (bad) xor inc push jae sub sub jae add mov lods cmp popa aas mov arpl lods and lock jns and sbb sub std and pop loopne mov mov outsb and (bad) (bad) insl pop (bad) jmp bswap sub test add call inc loopne sub fiaddl mov in add ljmp xchg test dec test test xchg add mov movsl add xor popa add inc adc test mov imul or clc or xchg fidiv nop test imul subb and or sub std sbb push push movsb nop dec xor pop dec mov xchg or jmp je mov andb sub sbb add push xchg loop lret int3 push sahf fldt dec popa jno push xor nop add adc je ljmp adc jmp in std cltd call xchg cltd pushf add loopne push xor mov inc shlb test adc aad rcrb dec jl subb adc mov dec pop shlb into roll add mov lret rolb fcomps adc clc inc xchg or test dec mov add inc inc dec pop dec mov and or and mov cmpsl call cmp mov push inc nop jmp arpl stc scas lock sbb add cltd mov aad inc xor lret dec xor mov adc inc add add loopne enter add ret pop iret out leave test mov dec cmp scas js xor xchg sub les enter adcb leave xchg int or inc (bad) mov movsl dec jb xchg mov (bad) lds fwait add repnz ret sbb xchg aas and lds and out and pop in add push daa test jmp sub addb or (bad) xchg test adc xor pop inc cmpsb or lods mov sub cmp inc mov mov push imul call or xor ljmp xor fisttpl loopne adc push icebp add mov divl mov push push cld xor hlt pop and mov clc mov std rcrl (bad) in and mov loope xlat sbb sbb cmp daa jae and mov dec xor int3 xlat movsb cwtl sbb mov xor xor and enter les xchg callw inc xor xor lret movsl lahf adc add repnz movsl xlat ss and pushl jl xor dec gs decl mov clc jle cmp imul loopne leave lods xor jnp xor scas insb push dec in dec mov add and or sub and xor ficoml lcall popf fwait adc mov mov fs cmpsb rorb imul lods adc cltd cld subb lds fistpll mov lock aam add push mov fld enter cmpsb leave addr16 outsl popf or sti pop std sub xorb test cmp and sar sub imulb dec addb shlb pop shr sbb scas cmp pop rolb fisubrl or or inc and jl push icebp push pop bound add fldl pop mov fldcw loope (bad) jecxz stos xchg orb (bad) fucomip pushf sbbl xchg mov stos (bad) xor sub (bad) aam pop push lock sbb test clc add adc mov sub popa inc xchg pop push inc dec and nop xchg sbb xchg call cld push fdivl loopne cmp cmp nop push mov dec (bad) xor aad gs das and mov xor push orl dec test add push shll cld sub push xchg jno sbb aas mov in add xchg lock cmp mov call dec enter ss xchg addl dec out das loope cmpb cmp lret int3 and pop popf mov test lret ltr ss sub xchg pushf enter test ljmp pcmpgtd cmpb andl adcl push loope jae xchg mov add jmp mov js xchg and jae loopne sbb and (bad) lods stos leave pop aam push mov mov test faddl sub sbb dec add pushf or jle lods or fwait addb out lahf sbb shrb int3 jo lea sub jmp dec rcrb inc hlt and sub insl and mov pop or push aam jb mov les and mov xor xchg out cmpsb les cmp lds inc xor push lcall lods mov cmp test loop lret cmp mov ficomp (bad) or adc xor packuswb pusha nop pop sbb sbb cmp mov ds cld mov add dec dec lcall fwait jl add in (bad) or add lret js push lods out pop xchg push rorl xor jo cmp leave xchg adc mov mov (bad) adc sbb sbb dec orb jg cmp add pop and test mov out add dec enter fdivs mov gs inc jbe add pop fxch pop jp push insb fimul push clc sbb jb lods sub mov inc and mov out call dec cmp in test inc in xchg inc lret xor pop or mov cmp ror lret and dec sub pop pop inc movsb hlt xchg stos push fwait sub lea add daa xchg (bad) imul inc js and imul push je add cmp xchg imul or bound inc movsb inc mov stos mov mov lods pushf aad xor dec cmpsb outsb lret dec dec jns add std nop xor xchg clc pop dec lret push lock lret stos test orl test leave push mov and dec cwtl loopne xor les (bad) enter arpl int3 cld cmp adc sub rorb push and sarb sub inc data16 ljmp loopne lcall and aad jb hlt inc mov adcl lret jnp mov dec aam inc and xor adc aam pop mov xchg cltd mov int3 add cli cs sbbb jbe jmp cwtl scas xor xor mov pop dec icebp cmp mov nop aaa xchg mov and xchg cmp mov jo and add mov out cwtl pop mov cmp sbb jbe jne add mov mov add mov push pusha (bad) cmp pop movsl fimul xor rorb test mov out out lds in add ljmp lods add cmp sbb dec lds in repnz popf sbb cmp pop dec enter add js push sbb mov fcmovu dec les loopne pop fs dec mov and pop stc jecxz daa (bad) out nop dec or imul mov xor and dec rclb inc pop xchg fisubr and enter rorb dec or jmp sub hlt sub jns stc lods jecxz and xlat xor std dec insb add test mov add iret mov fs xor fwait mov mov xchg daa cmp pop mov ffree pop inc pop (bad) xor cwtl push (bad) iret loope jl lock ret int3 fild xor idivb jge outsl and sahf mov dec add dec es cwtl xchg dec xor mov add push loope cwtl inc call sbb in test cmp inc stc adc fdivrs call inc (bad) lock cld pop ret mov add mov nop pusha dec or add push push push aam xchg test push xchg stc sbb mov add mov fsts xor sub sbb add fcoml mov fwait sub pusha das dec aad imul mov lods (bad) cs and xchg js clc mov push mov mov (bad) out cmp push push or addl mov mov dec fdiv (bad) cld sub push fsubrs pop mov push push andl cwtl lods inc imul add mov popa adc lret js mov jae cs inc cmp sub inc mov xor lcall lret in dec in xor sqrtps add scas rclb add insb in lods mov add lahf mov cld mov popa sub lret andb out pusha movsb stc inc sti cmp pop add xchg jp adc mov pop ss fstps mov sub fbstp xchg pop dec cs or push rorl imul inc or mov jmp mov mov pop in jb js mov jns loope cmpsl imul add cld ret or nop lods xor pop adc inc imul jmp insb add andl cmc clc cld xchg outsl push stos insl incb in adcb call dec ljmp push mov icebp call lods jmp inc fdivl cltd test mov add adc mov add push push data16 or inc mov jne test int3 (bad) xor es mov mov mov mov enter sub jne,pn or mov pop andb xor push mov cwtl jle lea imul cmp jno sub pop dec pop add fidiv and stc pop push mov cmp pop jbe in (bad) xor dec cmp adcb call jo sbb xlat push add mov xchg test addr16 ret imul mov fs movsb cmp xchg mov mov mov and xor xchg shrb pushf xchg add stos (bad) clc test pop add ja lods (bad) sbb fisubrl out mov cmp dec lds pop or xor lods jns sub cmp loop inc xchg scas jbe cmp movsb mov jo dec cmp pop mov das inc push sbb fisttp arpl out push dec sbb cmp rolb repnz rorl lock pop in cs enter mov aas cmp imul in and and pushf sbb push mov js mov sti mov jno jb ret inc (bad) repz xor and (bad) sbb sarl ret push loopne jb add pop xor sub cmp mov xor std pop xor out fs cwtl mov push addr16 xor push dec mov dec jecxz sbb push push xor xor push pop lahf call lea and or cld movups insl nop cmpb pushf (bad) xchg or leave stc sbbb sub inc in iret pusha jo add mov jecxz imul cmp pushf mov fdivrl ds sbb or sub jl mov adc call test sbb cmp js in movsl loopne sub cwtl push cmp outsb add jp out xchg jo sub xor pushf nop loop push loop adc add jg add inc mov pop pushf and xor lds cmpsb xor dec js mov xchg adc and mov aas add out dec in mov dec mov shrb enter mov adc cli fwait cwtl mov cmp sub mov shlb mov (bad) lds stos mov leave or rorb push add jl or dec mov xlat push repnz inc shrb and add push nop push push mov lock loop clc xor pop pop or mov add sub pop bound repz mov xchg add insl out add and ljmp mov cmp cmp mov push test lret pop fwait nop mov cld js aam jmp inc dec pop or test sbb add cmp add push xchg jo push addb fmuls or push imul xor cltd sub arpl popa mov dec jmp sub stos gs jl pop push or stos jb adc test and dec sub and dec test fsubs dec cmp sbb hlt out loopne loope aad (bad) dec dec movsb lock xchg fcoms pop addl sub dec in adc mov mov dec sub inc add cmpsb fucom cmp sbb xchg mov scas jbe mov data16 xor xor or or mov sub orb nop or xchg mov and cmp dec in or loope dec pushf test cmp int3 sahf nop pop push or lret daa adc mov add movsl jmp out or and xchg xchg sub mov fcmovu pop (bad) repz (bad) xor push mov sub sbb or or adc inc and orb int3 add ss jne lret or pop pop mov and adc inc dec cmp or test test out insl adc fs (bad) push or jb sub ret lret or or pop fisubl out mov fbld pop pop jne lock fdivr and sub dec inc pop xchg and and xor lods into pop mov (bad) pop adc outsb mov dec jbe fs gs insb lods lods pop or out mov and add test rcll pop jbe inc xor adc cs or or jmp inc ret jle cli orb cmp dec jo mov adc mov sub inc pop out cmp sub movsl and dec cmp sarl lods xor pushf push xchg xchg mov add xor push movsb or mov or in dec add mov mov sarl jbe ret add ds or enter nop cmpsl or xchg xchg mov xchg fldenv lods clc pop movsl movsb es cwtl inc repnz mov push nop repnz jno jp mov push dec clc inc idivb mov insb nop cwtl push pusha and outsb scas ja add decb inc loop and inc sub xorb int dec cmp mov sbb pop xchg int3 xor arpl pop jmp (bad) mov imul dec cmp add cmp dec pop xchg jno adc push imul sbb push ficom arpl dec stos inc cwtl push sbb and cmc xor mov push jbe enter xor (bad) (bad) jb or xchg ss xor or mov xor (bad) pop add fldcw sbb mov popa js jo add dec dec pop imul (bad) cmp popl cmp jmp cld push mov nop pop ja test sub and hlt mov sub add mov insl pop addl mov out mov call das lea out dec pop dec decl and lret sahf mov enter adc sub mov test and push xlat (bad) jo js or aaa scas int movsb icebp dec subl sti mov mov aad repnz in pop add mov inc add loope cwtl mov dec loopne sbb imul lods insb pop inc mov pop jge test push or ljmp xor dec rolb jae push inc mov sti pop out xorl dec in push and push xor cmp jb mov push add mov pop or or in push add in mov mov push mov pop arpl adc mov mov insb les in mov adc or xchg jae jecxz nop dec mov mov hlt push insl or pop cmovs cmp or sub inc popf pop lods xchg and push inc dec pop cwtl cmp (bad) jae (bad) adc dec and adc jae and cmp rcr popa xor sub sbb inc mov sub popf mov push pusha cmpsl jae dec jl jo xor arpl push xor pop iret jmp orb or cmp in mov push repz bound sti loop stos rolb nop jl jl xor nop cmp shrl bound in add fcom push out in add rcll pop pop ret dec movsl mov dec mov mov movsb sahf add aaa push sub adc aam into or mov xchg data16 sbb dec add jno,pn pop jg and jle outsl (bad) jmp repnz in push push mov cmc in cmpsb dec sub or inc js movsl inc xchg clc fs inc and out or (bad) in rcrb cmp aaa sub or xchg nop in and push dec xorl das push pop scas daa mov sbb xor fdivrs add pop mov add and je ficoml pusha cwtl movsb out push cmp cltd mov sub dec inc pop testl jb mov or pop add leave push (bad) xchg rclb pop mov je roll imul pop call dec add push (bad) mov dec icebp or fs cs ljmp (bad) mov das test pop clc inc jecxz dec lods lea ss sub loop nop or jp addr16 xchg push ds fsubs mov stc xchg (bad) in xchg mov mov mov cmp sahf mov test in and jo es je ret mov mov daa shrb sub inc rol out or xor mov or andl and loopne add xor imul push out les ljmp scas mov bound mov in or mov cmp mov arpl add ljmp mov cmp mov loop addb and lock pop sub xchg fbld lahf insl cmpsb daa jge pusha and dec xorb lock mov or int xchg xor aaa push rcrb sbb push xchg and stos call xchg pop xor fiadd jge (bad) test push lcall mov orb cwtl (bad) cwtl les and inc xchg pushl jns out jns or push mov mov fcomps and cmp mov mov lods addb adc or xor fs mov mov imul or lock xchg add push imul int popa xchg add adc xor mov jbe mov mov and fisttp scas orl jle imul xchg icebp jne add sub fnstcw xchg mulb test test push dec cmp or icebp push nop mov sub arpl dec repnz add push test nop mov jmp lret ds inc adc push fwait nop and jae add sbb sub mov pop out in aad xor dec jp sub push xor sahf pusha faddp enter pop in add sbb add outsl cmp and push rol add push insl push pop pop lret rolb pop test push adc movsl insb sti push rcr inc nop aam dec (bad) fistpl dec add cmp dec adc sbb sbb pop mov mov mov mov add jp ss jge mov outsl jae push dec pop frstor mov ja movb addr16 mov mov pop pop or scas fmuls shll sbb lods push scas xor test das push xlat jl jno ret xor mov add dec cmpl fldl push repnz push sub xor ljmp rorl fld pop cltd jge and cmp mov popf int3 mov enter ss ja dec add clc pop cmpsb std xchg sbb xchg or lods pop adc inc adc push push mov cmpsl inc testb or add xchg daa sub fist and jmp insl lahf push movsb clc clc bound hlt arpl insb jno rorb call inc or push adc sub cmp inc mov push arpl das jl lcall iret push mov pusha and jns push rorb into inc clc in adc stos jns sub outsl mov and sbb dec push xor inc push add scas aam jp scas adc xor or (bad) pop xor insl sub ja inc mov jl and sbb cmpsl adc push adc (bad) mov mov les add pushf sub adc mov popa mov jno sbb or jle movb jns push jg jl pusha scas mov test (bad) dec out mov xchg test dec push rol ret lret and push stc mov jge and or pop (bad) iret das shrl jg out sbb aam out arpl add mov scas dec and je bound int inc int3 adc test sub xchg es add mov push fxch popa jle arpl sub cmp pop jae dec insl int3 and xchg add or cmp jp or pop cmpsl or orl pop xor push jo sub aaa movsb add pop je out add fwait roll adc xor out push stos pop xchg out aad sbb cltd test loop subb mov xchg movsb insb or jbe xor aam add mov (bad) dec add push sub es rcrl push push or rolb pop xor push and loopne xchg mov or mov pop mov aam sub inc pop outsl inc hlt mov shufps xor dec add cli pop pushf mov cmpsl (bad) (bad) xchg mov cwtl push outsl add adc cmp pop cmp xchg lret mov inc call push inc cmpsb and jno addb xor sbb out mov push push or or sbb adc rcrb and adc push enter push xor dec jnp mov jl jg (bad) shrb and cltd mov in test sub pop adc xor push mov or cld adc pop test cmpb mov popa push fiaddl pop (bad) mov imul add loop addb cs fdivrl lods jns rcrb (bad) xor cmpsl test dec fsubrs pushf pop test icebp (bad) out add pop mov xor sub mov stos lock movsl adc mov movsb inc cmc pop mov pop push mov (bad) xor and popl pop pushf cld add test jnp jmp mov (bad) pusha mov inc mov fadd rolb popa sarl mov dec lret fs ds pop add adc jb popa mov pop sbb xor nop cwtl pop and xor or push mov cwtl mov mov test inc mov clc iret inc add xor gs arpl push lock sub sbb pop bound xchg (bad) in and mov imul fstpt mov xchg sbb mov pop dec add inc adc push adc add in orb and mov sbb push clc test xchg jge enter add sbb pop or or and xchg add mov test mov loop push mov lahf mov test enter inc scas adc ljmp add fwait mov lret add mov push insl pop jp test rcll sti pop loope test mov nop mov mov aam mov enter sbb clc xor leave movsb dec inc adc js jno mov push push sti jb adc mov sub nop rcl jb xor sbb dec cltd stc pusha lock add iret sahf cmpsl cmp insl rolb mov les dec test add adc or push cmpsb int3 cwtl roll cmc pop adc add loop dec decl popa outsb sub xchg loope mov mov sub jl add mov jmp add inc sub dec mov cltd cmpsl testl cmp pop push pop mov cmpsb es sar add sahf pop in xor add ret stos push push or out inc push jle je push xor iret inc mov fmull call mov mov push add push jg in inc shlb pop pop ds addb enter jg dec stos fwait or add mov fwait std mov or dec push mov pop mov push sub pop je cmpsb xor add pop adc xor add insl dec in andl push cli fimull inc cs jle sahf add mov scas xchg bound jl shr jecxz inc add enter mov and test ss and inc insl mov pop cmp stos xchg int3 adc addl jp xchg dec mov jle xor and in cmp aas test lahf lds loopne loope mov add mov nop mov add mov sbb xchg jle add (bad) or cmp dec cwtl mov call ret (bad) jo lcall push icebp sbb mov inc sbb (bad) cmp adc not jb in js dec arpl jno or and mov push xchg int3 mov jo mov cmp cli sahf push cmp rolb movsb inc pop and sbb rolb mov mov daa test aam mov mov in mov (bad) stc cmpsb andnps lock ja stc rorb out and mov sub stos push scas or push mov adc sbb mov sbb fwait push adc jnp nop sbb jmp clc lahf xor rolb mov adc mov hlt ret dec dec jmp leave push sub mov les cli mov test push pop adc inc xor add fstpt mov mov shlb scas sahf mov or lret and mov sub add icebp inc out pop push mov pusha mov (bad) xor sbb cmpsl xor dec or lahf mov mov aad push mov mov add adc out inc pop adc and xor test or mov add add adc in in cmp stc enter pop enter lret add mov (bad) clc je adc pushf lea add sbb or mov nop dec sbb jb vsqrtps hlt loopne mov xor fstpt cwtl cmp fmuls fiadd pop dec adc into int ljmp sub push cs inc je test in or dec pop shrb in movsb nop xor sub push dec and sbb push iret sbb and idivl push and add and test xor ljmp test xchg nop add push bound sub jns ficompl dec fs fldcw cmpsb add ret sti xchg in shrl ficoml fsubs inc test xlat cli push cmc sub leave insb inc xor cltd add pop subb and pop mov movsb add jb stos add xchg ja mov lods hlt je pop xchg ror xor xchg sahf cmp cmpsb push imul mov pop push out (bad) sbb mov add nop int3 ds pop pop int3 mov jns jne jg add pop dec and fcoml std pop add repz push cmpsb adc add sbb mov fs jmp out lea lods dec xchg sbb sbb lds stos (bad) rclb scas lret test adcl (bad) add sbb lods add sub inc xor mov sub cwtl popf aas add cmpsb xchg (bad) pushf pop or jb push jmp fcompl pop cld or dec jne add lods aad fdivrs and xlat mov push lahf add sahf out ss in loop loopne push sbb fbstp adc inc lods cwtl lret add stos data16 sub mov xchg repnz stos sub add movsb mov ja dec sub pop add and mov cwtl push popa push inc cwtl movsb xor push out jecxz in stos loopne inc inc mov into cmpsl out inc jecxz xchg cmp testw xor pop lods js sti stos fildll or (bad) cmp dec sub or sub sub xchg fcompl mov clc imul in arpl sub mov lods sub rorb or jno bound cs add jl je inc sub gs sub xchg add or xchg sbb mov and add dec xor xor mov stos lahf lret bound and cs add ja stos movsl xchg add add mov (bad) pop jge dec flds push (bad) push or fbstp fstl into add add inc sahf jno nop je xchg inc std fcoms adcb test inc enter stos dec sub mov leave add in imul mov cmpsl inc mov cmp mov or aas push nop add icebp repnz stos mov shlb popl fildl mov add xor pop shl stos das ret or (bad) xor add jecxz fsubl mov hlt cltd fs or aam mov nop inc pusha adc cmp (bad) out andb lea out and adc add inc out nop inc in cmp mov mov in mov scas cld js fisubr pop add int3 dec jno push aam lods xor and mov mov jle adc dec xor and dec xchg pop or mov (bad) mov ja rolb lods push aaa test sub mov imul sub inc xor rorb (bad) and or dec dec (bad) mov cs pusha dec xor cld loop std add or int (bad) icebp or sub dec sub xor rorl push xlat add jg add pop adc je mov enter add jo not xor lret adc shlb call cltd imul xor inc adc inc xor int3 pusha pop dec insb push js (bad) call arpl mov pop out jne mov rcrl sti push loop pmaxub (bad) jle add std add shl imul mov add scas ret test and loopne (bad) sub sub pushf test push into dec lea sarl dec dec js and mov lock test loopne je and mov sbb mov in std ja rclb or mov or mov jl cwtl ds push xchg je fdivrp jp idivl inc inc shrl je cld push dec jo xchg cmp mov or ja and (bad) and push imul test mov xlat arpl movsb dec sti das std or (bad) jne cld clc test or repz inc mov add lret cmpsb jo addr16 sbb sub movsl xchg jo icebp stos shlb sbbb gs push add inc jbe and pop or clc in add popa int push mov push mov push cmp inc jg xchg lock cmp mov in xor insl and popf xchg sbb lds inc add fsub mov push addr16 dec clc or sbb pop add jbe xchg cmpb cltd xchg fnop test adc stc stos (bad) les hlt in mov add rcrl mov adc mov jecxz mov or inc adc pop icebp sub flds adc add pop lock (bad) mov mov orl int add sbb add jecxz sub out lds inc cmp jg ret push ror ret loope test jae xchg shll pusha push aas adc add (bad) fs inc push pushf add int addl jg add fcmovnu cmc sub out mov in or imul cwtl fistl repz xlat add mov imull dec lock add sbb add in test adc (bad) mov insb xchg dec add icebp in shlb and ljmp pop xchg in sbb mov ret lcall lds jmp ja sti (bad) cli lock (bad) mov mov ds loope adc inc add mov fcoml outsb aad jo fistpl cmp imul call es call add push fs (bad) movsb mov or inc xchg pop aam stos xor sarb in xor call or lods fisttpl xchg movsb rolb es jle divl aam lret adc lods inc les int or mov push push into adc dec dec in enter stos sub push data16 call xor cmp cmp aad sub test or lahf imull pop sub insb add fsubs int cmpsl in sub dec out lods mov aaa and mov mov stc mov mov push pusha in lock xor jp jae and jl add sub int mov stos and sub aad push mov nop xor mov pop dec dec xchg mov nop js popf std push stc jge sete pop and stos push loopne,pt call adc lods mov sub pusha clc ret nop cwtl mov loopne,pt adc or xor icebp mov adc dec jae add lds push int3 pop xor setbe sarb mov pop lods dec inc daa and fldt in xlat je pop lret sbb or data16 jp fisubl test pop dec add ret xor xchg cmpb sbbl mov sub pop inc notl jmp (bad) and out adc subb stos insb dec xorb int or add and inc sbb pushf cmp fisttpll mov push jns in out roll mov lock jno jge imul mov insb fisttpll push push call xchg or ret test pop enter pop nop push inc repz add outsb jl push imul and jecxz dec fs mov xor add ljmp add cmc mov idivl sti xchg or lods mov in dec aam xor push sub sub pop add sbb add mov (bad) push (bad) jbe rclb add pop inc arpl add cmc mov loopne outsl add popa inc pushf (bad) sbb test les sbbl cwtl or mov mov and and pavgw jl jl dec adc int3 nop iret popa setb or mov loopne pop cmp fldenv jecxz (bad) es sahf hlt lods popf ds popa jg mov add lds adc adc fs test sub or cmc add and jecxz mov jnp add aad push jp cmpsb frstor pop jno add rclb (bad) add xlat mov movl sbb dec mov and inc push ret pop and adc cmp clc rorb inc out push push icebp aad cmpsl sub inc add jae xchg dec cld adc ja mov lock xchg lahf jmp ret sub rcll pop decb push and fadds popa in add dec out pusha jo pushf pop (bad) hlt add xor aaa int xor add inc jno les (bad) sbb sqrtps ja test imul hlt fadd pushf pop mov test xchg stos push push jne add imul (bad) mov and or ficom hlt cmp add enter and adc mov and hlt add xor adc add pop xor ret jg xchg push sbb mov adc fdivl jno insb cmp test xor iret aaa push movsb jmp cld xor add add xchg pop lods add push mov cmp cwtl sbb push or lahf push add inc xchg jnp mov cmpsl jle jns xchg xor inc in jno cltd popa int3 add push repz xor or rcrb mov sbb inc imul mov insb fild xor cltd and mov add jbe jae call pop inc cmp jno add dec clc shr inc push and and (bad) mov pop jge mov pop jo sbb adc mov push cmp dec xlat dec sub add movsb inc or mov jl clc sub imul pop std mov add aam aaa imul mov and dec jns,pn pusha mov mov mov dec shlb ljmp in stos push (bad) sub pusha lea xchg cwtl xor stos test cmpsl push add lcall jg test add int cmp pop loopne sahf jae xchg cwtl mov fdivrs add hlt push pop pop arpl mov loope or xlat std fist hlt or sar mov adc and clc jnp mov or push in (bad) xor (bad) jo xor xor fadds mov xchg pop jae and adc or (bad) call clc mov fistl xlat dec jns pop mov iret dec hlt aad adc lods out push inc pop (bad) pop dec negl pop xor inc xor in dec jae mov cwtl push xchg lahf loopne or (bad) int aam add or std lods ds cwtl clc clc mov shl push or cmpsb insb faddl adc and cmpb xchg xor stc adc and push cld (bad) js shl or mov decl fsubrl adc movsb mov add fistl cmp int fsts stc jno insb int3 mov and pop add add call test and sub mov arpl insb cmp mov lods pop loope jne nop xor pop sub popl adc push orb adc push xlat test adc inc cmc sbb xchg lds stos jo cwtl adc mov push ret or fcmovu ds inc dec and adc push pop jmp clc adc into test adc inc jl xor sbbb inc ret int push jbe push shrb loopne push sti ret iret xor ljmp int cmp or ret sarb rcrb (bad) rol lahf mov push adc lret mov sub add iret int3 hlt pushf jae,pn lods inc in jo jo adc sbb adc inc adc (bad) ja daa adc add push jae pop pop lcall (bad) repnz jo mov cmp push dec or and sub movsb nop add xchg in (bad) daa (bad) ljmp xchg fisub lods xor jnp push sbb in push mov xchg push movl inc adcl pop in add jmp dec push sysexit testb mov in and aad inc mov cmp jbe add pop push add rcrb mov xor jmp dec orb xchg fucomi pop sbb add pop xor mov add jge sub das push jno mov es (bad) out add bound add mov or cmpsb pop mov ret js mov outsb pusha pop lods mov lock fisubl addr16 test sub add jno mov add test mov incl fimull sbb or les je ret dec sbbb lods cld add rcrb adc or xchg add sbb cmp stos in inc push fsubr dec xchg movsb and pop pusha popf add fiaddl and mov cli xchg mov or ja fidivl inc pop mov enter cmp adc inc mov cmp idivb jge mov or pop je add addr16 and pmulhw jl mov adc cmp xchg push enter or orb push lods cmp rolb xor or pop xchg loope daa icebp dec mov xchg sbb rorb xchg and xchg inc sub sub popf out mov inc (bad) jbe (bad) mov xchg mov ret mov xchg movsl shlb loopne pop (bad) xor js add movl pop jnp and mull pushf sbb push ret rclb (bad) sahf sub rclb cmp aad sub xchg sbbl ret pop inc mov dec push es inc cmp sub adc sub addr16 cmp aaa jp xchg cs out add aas push pop shlb push nop sbb mov loop call fidivrl pop push dec test push mov and jns shlb icebp sbb scas jo push pushf cwtl add iret jbe xor adc test incb dec pusha fidivrl fdivp push cmpl xor xor add icebp adc dec or push add movsb xor clc and jg aas imul daa lock adc addl jge (bad) and shrb mov add xchg or and test cmp pop sbb xor roll inc mov jno cmpsb sbb jns pusha add cwtl insb mov mov sub mov dec stc je push xchg or shlb xor xchg mov fadd inc adc loopne sub movsl ret lret mov cmpb add test mov jmp xor mov lcall pushf and or mov xor fstps clc in mov into sub dec xor std hlt repnz mov and mov push add pop out notb (bad) mov push inc pop clc sar xchg or adc js es loopne push mov call cmova push xor or sbb repz je outsb nop add cmp stos outsl cltd adc inc add jne add icebp pop mov or adc adc test mov or dec pusha and pop (bad) mov test xchg sbb insb stos inc call lret cmp pusha mov es enter mov pop ljmp dec adc xor jno jo or and inc mov add pushf cmpl xor aad rorl dec xchg mov jns jo mov mov inc or js add inc (bad) in movsl mov cmp (bad) sub pusha dec cmp jnp mov cmp add stos inc xor inc dec les cmp and call add lahf std inc or jecxz fadds shll scas or xor rolb ficom pop or cltd push add je in adc sbb fwait pop or sbb inc fsubrs or lcall insb adc (bad) dec sbb (bad) lods movsb clc mov add rol sbb mov add jne dec and bound loopne inc xchg rol (bad) notl test movsb mov call or sub push and (bad) jno ficomp jb insl jno jo jo mov aam and xchg mov xlat mov ror mov setp inc dec les xorb sbbl inc mov inc stos or adc (bad) mov add lods lods xchg (bad) inc jl bnd popa and sbb jnp sbb inc test in aam pop ja jmp push lds leave hlt push (bad) (bad) or scas lret lods or les push pop xchg xor cli test add dec shrb jno das cmpl pop stc jns mov dec popf test push ds adcl mov lock mov call xor mov push adc shrl and movsb shl hlt mov into push pusha sbb repz add sahf push jb cli xchg sbb mov inc pop inc lret bound pop ret sub and pop rorl or xchg out aaa mov and sub loopne inc mov enter pop add push flds pop jns cmp repz add push es vmread cmc je add test es rolb inc xchg or int xor mov fistp jns lods cwtl dec jae and mov dec mov or mov dec cli pop fidivr scas sbbl lret cs push ret or mov test add dec push mov testl mov loopne sahf lahf lret pop push jne push inc nop cmp cld sub outsb loopne imul xchg pop xchg fadds add mov cltd pop pusha sub sti add xor pop sbb sub xchg mov insb xchg xchg dec or push pop pop scas mov add sub test mov and cmp ror pop cltd aam sub or movsb cltd or cmp sub lcall (bad) testb jb mov stos adc sub jge or inc (bad) setno cmp push les ja sub mov jne add cmc inc mov mov pop add enter and (bad) std mov test sahf js adc inc lahf pop mov xchg mov jecxz push or mov js (bad) mov xor sbb add cmp push jl (bad) aas shl mov dec out mov mov pusha into sub mov pusha repz test jnp or push lret jecxz inc or mov in adc sarl or cltd lcall or sqrtps sbb lret or arpl mov sarl inc clc sbb inc xchg iret hlt int sti bound xor (bad) fist clc cwtl mov es enter (bad) jecxz mov mov and imul xor or cmc inc sarb dec inc dec pushf mov mov fdivs out push fnop sbb sub lods dec mov push pop out icebp add mov jb dec sbb add add iret jno xchg sbb stos or push push mov imul adc adc xor and psubd xchg repz jecxz xchg les les mov cwtl fcoms xchg mov in lock cmp add les aam push je add add enter xchg and jns inc loope add aaa cmpsb cmp test (bad) pop jge fmull xor jb add jno push xchg test fs and call scas add loopne repz loopne movsl xchg xor jns jg clc xor mov popa lcall push or adc mov dec mov pusha add sarl mov cmp dec adc fadds cmp add sub ljmp add (bad) adc movsl ja add test add pop sbb sub call call push sbb in jle sahf ret inc xorb sub mov sbb scas mov mov pop shl add fs xchg sub jnp mov mov insb jg mov in repnz sbb aad cmp sahf cmp add pop jg add adc roll andl sub sahf jnp leave or lcall insb inc (bad) or pop push cmp push xchg enter xchg jae add (bad) sbb (bad) jl fstl add push (bad) test xchg xor fisttpll jno mov push outsl jg mov (bad) pop fisub mov or xor (bad) jno pushf (bad) cli or (bad) imul cld add stos movsl cltd add pop rorl cmp aam lods sbb (bad) (bad) or hlt insl out mov pop mov out xor mov mov rorb cld jae jg xor (bad) lahf xchg push outsl mov dec fcomp loop movaps jmp and lahf insb fnstenv repnz xor jl add mov jg fucomip or pop mov sahf adc jo faddl add dec (bad) xchg aam push nop in addl jb dec sub sub dec inc and pop mov or sub rclb ret xor mov jg clc addb addr16 arpl inc xlat sub sub or dec add ds aas movsb scas ret mov adc les je or jle aas lahf jnp cmp or push icebp ds cmp sub add popf insb mov fcomip add pop mov mov negb sub add popa inc jecxz nop dec push in std sub fimul movsb inc or mov mov roll xor pop lahf icebp add test inc addb dec bswap int js pusha and xor mov or fidiv loop (bad) std and push test push rol jnp push in or inc sbb push and sub loopne mov jno lods insb jb aad add call shll dec insb sub mov jbe lahf stos mov inc pop push add pop xor xor lea add psubb popa xchg jp dec sbb pusha jecxz dec addr16 push sbb add push add mov pop addr16 fcomip fisubr arpl mov or cwtl sbb jae mov mov adc cmpsl popa adc add in pop aaa fdivs xchg int pop add aad mov cltd or mov xor push mov push cmp mov out loop add add jns jbe jno mov inc mov ret je push enter add mov mov cmp adc and add xchg adc cmp xchg je push and aad clc inc inc jno mov push idivb or gs add mov lahf and jl mov in xor pop xchg add add in sti sbb les pop xchg jns insb repz ss xor pop jo mov hlt mov or sub loop and std jne test js (bad) sbb xchg and xchg nop add ljmp out xlat xchg push xor or cld inc (bad) or pop mov pop inc add data16 leave stos dec mov add adc mov and xor out add ffreep add dec and movsb test js les mov xor inc xchg pop rorl xchg mov push or add int or pop cwtl pop xor xor sub sbb mov inc sub dec add scas fisubrl pop cmc enter unpckhps pop sbb add out lahf mov imul and scas add or jmp add and rolb jno icebp xchg sbb add mov cmp xor inc sti fldl scas fidivl popa jo popf jg (bad) jl xchg mov hlt dec mov or mov shrb mov sub in push rol add popa jo nop popa je add loope xchg inc adc dec push dec mov add vorps add push mov (bad) mov sub je arpl clc sub fwait and mov lods dec inc test ss cwtl loopne and clc dec dec clc (bad) xor mov loopne cld or jnp lea pop sbb mov xchg mov mov lahf cwtl fdivl mov pop mov xlat in push inc shlb adc pop mov jg mov add mov call dec imul lret out dec mov sub jo mov mov xlat hlt shlb xchg imul mov ror lods lahf call dec mov pusha push add int3 or roll cmpl add mov pushf lret sub adc adc push xchg mov lret xor pop pop mov sbb xor mov arpl stc ja inc push mov mov les fs bound mov and cmpsl es mov mov test rolb push push jns inc push push aam mov and dec mov jecxz and cmp verw xchg flds push pop jne xchg popa mov lcall add jbe lahf (bad) jno sahf fistl jecxz xchg xchg fs mov pusha sub dec das mov push and push pushf sbbl and mov stos push push sbb push in aam insb in or shrb inc push fcomps lcall and pusha mov xlat lcall pop mov fsubs add xor notl cmp mov pusha mulb cmp xor and sbb outsl xor nop adc popa mov pop cwtl add add xor test loopne cmp xorl outsl sbb stos nop mov fisubr and out add cmp xor lcall movsb stc (bad) sbb rclb add or xchg ret add adc dec add jae iret lods sbb sbb lods (bad) cs pusha pop bound push cld (bad) lds testb add pop rcrb shr inc dec sbb fidivr shrb jb push sub or test outsb test cmp pop mov negb nop in xchg sub cltd loop pop pop sub add scas or sub mov ffree mov js inc aam add or stos jbe hlt jns pop pop ljmp xor sbb sbb sub push (bad) mov push loope out jmp call inc add add addr16 adcl push add push daa call das dec jmp (bad) or mov cwtl cmp inc push clc movsb push cltd imul adcb out (bad) inc xchg cmp mov adc icebp mov pop shrb mov rorb xor push jo dec outsl jb sbb xchg sbb in lock lds fidivrl and add iret shlw insl mov gs jnp insb pop aam jo ret icebp xor adc aaa lret mov jns pop and hlt add sub push aam in sub add pusha inc push pop loope sub (bad) (bad) xor mov movsb ja pushf loop lock movsl xor test push jg int setae pop xchg push push xchg xchg pusha pandn rcll mov loope test jl imul (bad) in add fldl pop sbb inc mov jbe pop or cmp add add lock subb movsb lods rcl iret pop push lret push movsl lock xor cmp mov test hlt pop mov (bad) jae mov iret mov adc push shr addl js add sarb mov fs ret scas mov icebp and rolb inc inc add xchg pop xchg or shr sub test (bad) sbb xchg or xchg (bad) outsb and or divb les sbb mov mov mov (bad) xchg lods andl (bad) repz jl test add or cwtl cmp fs es sbb and (bad) cmp insb add shl lds xor leave enter addb daa testl add dec sbb clc dec movsl xor mov scas mov insb xchg mov cmp cmp xchg add out (bad) or sbb xor xor ss mov push dec adc push clc add xchg adc or mov lret and push cld xor and add aaa js cwtl adc pop or adc js mov loope int3 lcall rclb cmc loop lcall adc ret fwait cld add cmp mov loopne sub sub pop aam xor pop mov outsl stc add jo mov add pop loope add mov mov xchg (bad) jo (bad) mov rol pusha insb or mov outsl add test jp out movsl xor clc jo xchg or imul mov xchg add rolb loope int sbb fwait rcll mov add xchg sub inc mov adc inc pushf push push pop adc loope xor push bound jg sub add cmpsl dec enter scas add cmp aam rorl hlt xor in scas sti lods ficom adc inc inc inc aam adc nop mov fcoms mov xchg and in and push or fcomip jecxz cmp jno mov popf xchg and cmp xchg cmp jne into lret push nop mov mov mov mov push add bound pop pop int xchg push ret addl xor add sti adc fcomi subb mov push je lret into mov push xor lret lods cwtl mov mov jge rolb js (bad) (bad) aas std adcb lahf data16 or es fsts stc lcall mov and fs mov aam sbb add xor xchg leave dec lds (bad) int3 aad fstl test add jne outsb jno daa jae imul sbbb popf add dec pop and xor mov add add lods add es arpl push add in fwait jo pusha pushf mov adc push pop imul jns xchg les fs push adc pop cmp add add (bad) into out mov (bad) sub scas inc inc stos fwait xchg sbb fstpt add mov jnp (bad) je cmp jge adc add mov call ss add and sahf gs mulb xchg (bad) loop cld movsb add xchg pop cli pop ror push sub sbb fs sbb cld lret stos cmp and hlt outsl mov call lret cld and sub fxrstor inc add and insb add sbb icebp add mov sub or inc pop movsb lea popf andb loop out mov push es or or sub aam in and add mov cmpl cmp into dec rolb cmp and loope mov mov mov out or imul adc xchg loopne and xchg xchg pusha pop add popl dec bound xchg test mov inc in mov and cmc movl lahf inc popa jge sbb xchg cwtl xor xor xor pop lock push es push outsb test cmpsb mov lds fnstsw rclb mov xchg pop lds add inc xor test out and xor lods lods cwtl dec add add add rcrl fidivr js imul inc jl push jae add int3 scas push mov pop repnz mov les sub xor add xchg test fbstp push cmp add movsl imul dec cmp pop mov aas cmp cmp fadds (bad) aam shr ljmp js dec fmull insl sbb push arpl in mov inc sub and nop sub or lods testl add inc jle adc pop adc dec add mov add xor lret or sahf iret (bad) mov cmp push das adc in pop repz sub cwtl sbb sbbb dec push pusha aam push mov jbe adc scas or adc adc lret adc cld clc mov or xchg enter mov and adc jae test mov fstl (bad) stc out pop adc xchg cmp xor mov mov les aam inc je or pusha push and xor dec adc test add jle add sbb add popa sub add sbb les outsb lods add cwtl popf dec (bad) nop lock adc and cltd mov fwait insl dec rolb enter xchg cmp dec adc dec int cmp sbb sbb xchg inc pop out in or aaa mov (bad) loopne add lock repnz adc inc xchg add outsl loop add mov push pop jmp test mov mov add out fwait xchg loopne pop adc bound xor daa push pushf lahf rorl pop push add xchg mov jmp mov push js je iret in pop outsb iret jmp and ficompl or in sub mov push add push jecxz mov mov dec add and push and hlt jge cmp mull xor or js dec mov xchg mov add fsubrs aam cwtl sbb mov push inc sbb or xchg leave inc sbb in sbb arpl xchg mov pop insb mov add pop mov sub ret ret inc mov add fdivrs stc nop jo das xchg clc jae xchg pusha mov lea pop mov call cmp or les arpl cwtl dec and push pop lock add scas cmp xchg (bad) int push call shlb push push add pushf loop add push dec lahf and movsl mov nop ljmp enter or xor or mov add sub add mov dec mov adc jnp insl inc cmp clc mov add xlat fs jl fstps fs subb jmp sub mov and xchg popa xor jge xchg jo add stc mov push leave clc adc jno cmp add pop out pop and sbb out cmp addr16 add jne je push dec add in (bad) lock shrl in cmp iret into sbb xchg jge adc and sbb sbb dec push adc xor adc pop jmp pop sbb add outsb out xchg imul inc fisub lods adcl jmp jo push inc pushf or bound add add xor mov sub cmp insl push and jo sti cmc loopne jecxz repnz mov add cmp je and out movsb call (bad) mov adc sbb inc sbb inc (bad) add xchg repnz adc mov loop pop loopne imulb (bad) out cmp mov outsl fcoml call sub sub daa (bad) jno in nop or add ja pop dec mov add mov pop add adc cmc inc roll (bad) push and orl dec adc inc nop or mov mov push pop stc sahf clc push test cmpsb adc mov adcl lds and movsb or sub rcrl mov insb lods sbbl add out jae test jl add rcrl add cmp cmp pushf add jl adc sarb sahf xor sbb add mov add mov aam arpl sub fidiv jb sub fwait push or sub sarb or js sahf push dec cwtl pop (bad) xchg in je repz aam mov and sub (bad) mov ret cli mov ret add arpl mov inc add dec mov push pop je adc jns hlt sub adc or loop lds sub dec aam dec xchg arpl push jl xchg mov mov cmpb andb int3 (bad) (bad) xrelease daa mov mov sahf mov aas jmp sub inc mov xor or xor lods testb xchg add fadds nop sub push adc imul or cmp popf nop ret push xchg rcl mov jbe aad cld inc addr16 je out sbb repnz bound xchg and cs (bad) ljmp mov xchg sbbl loope insb lock inc pop test dec roll or movsb lods push xor xchg lock adc push sbb dec test xchg test sbb adc jge data16 dec sbb sahf mov sbb add or add data16 or stos inc add and add xorl pushf xor psubusb push cld test pop and cmp push fldcw clc stos dec hlt jno jg add xor inc jo nop fs dec popf movsl subb mov inc inc bound arpl into sbb mov push movntps add jns pop shl jge or stos xchg dec lock dec (bad) pop fwait les push daa sbb lret fcoml in add out fcmovnb cld or push pusha outsl push js lock pusha inc xchg xchg movsb pusha sub pop shl cmp jge sbbl cmpsb pop mov xlat enter hlt fs test inc int xor pop shrb dec sub orl mov sbb insb mov dec jp mov inc enter jle shrb rcl push (bad) push int sub pusha xlat xchg (bad) mov les inc jecxz loop jl pop pusha call js adc arpl pop dec pop push aas int3 inc call push fst sbb add add (bad) testb xchg je add loope js ja lret dec cmp xchg sub negb cmp sbbl aad and js test es add fcoms int pushf mov (bad) mov pop adc mov leave sbb stos insl enter fistpll mov pusha (bad) xchg scas and rcrl cmc testb or mov add adc or cmp sub test lahf inc xchg push fildll sbb je push imull mov sti pop pop jge adc and push adc rorl test mov cli mov adc cmc ss adcb cmp cmp mov pusha pop mov cmc negl pop andb adc adc push dec push and cs cwtl dec loopne icebp pop je jmp pushf loopne aas and mov xor stos pop enter dec aas add or cmp test es or rol or add xchg pop in jbe jmp add (bad) cli jnp add xor js shll and push fs jp xor (bad) test imul push fwait mov aas ret sub cmp and add fistp and mov cmc (bad) add adc jbe adc outsb dec xor test sub sbb test jp add stos mov dec nop pushf test hlt imul inc outsb dec push iret inc cmp add int3 cli add fnsave or and sbb pop push adc push or adc or sbb (bad) mov pushf hlt mov repnz test push mov push cmp pop push enter fwait and psrlq cwtl loopne and movsb xchg pop push dec nop (bad) fs cmp inc int3 jl scas and push dec and add pop in fst int3 rolb lds add ds xorb push mov dec ret xor pusha add and adc xor lahf dec test xor mov mov and add movsl adc pusha aam cmp xor push fwait sub pop add mov outsb je add out in lret xor or adc rorl fiadd in cwtl add inc jo jge and jbe (bad) jno aaa (bad) cmp xor iret loop adc xchg dec xor mov xor and gs sbb xchg and sti push stos or inc sbb adc inc and mov testb inc jg scas or mov icebp inc push (bad) or cmpsl or jbe push jnp cwtl fs xor in sbb add bound jle mov (bad) add scas sub out and pop jo mov cmc into inc inc push loopne aas mov cltd out jbe cltd xchg dec push cmp insb mov mov rorb add das push test pushf dec and cwtl nop (bad) sbb xor (bad) or movsl dec mov pop pop test cltd dec leave mov jae clc dec mov push sub sbb stos into adc lock push and mov xchg in cltd xor or mov orl movsl es icebp je push and clc mov mov popl xchg inc cmp xchg aaa or mov xor add adc push sub cli lahf pop fildl add roll mov push roll jo jle or add cmc add mov sub rol and enter loop shll pusha add test lock or cwtl out sbb pop add ja push inc mov jbe addb jo std or test pop inc inc movhps ds ret add adc add repnz add jne add imulb or dec adc xor enter adc cmp cmp test hlt push nop pushf adc add jae ljmp pop nop xor fcomp dec sbb aaa cld lret adc sub addr16 pop fcompl lock inc mov iret xchg (bad) xor mov addb leave or inc cmp jg sub dec pushf adc test add sub xor mov and cmp cmp sub mov push mov add push sbbl pop enter push add push adc nop ja mov scas out xor lock mov scas mov cmp xor inc (bad) je mov or out fiaddl xor dec pop and inc in repnz inc push dec cltd rcrb sub mov cmp and in pop (bad) dec inc daa rcrb leave xor dec icebp jo push xor popa les jae add pop mov adc pop or roll imulb mov clc ljmp sub and add imulb pop xor and rorl push lods xchg add aas lea test push pop lods cmp imul dec addr16 jb in pusha pop push pop imul bound sub movsb or addl rorb nop dec test and and sbb mov add loope loop add cltd aas xlat test cmpsl jo add fisubl roll sbb ret mov call (bad) je or inc pop adc sti notl mov pop add adc sub gs xor cmp bound test fbld pop mov js (bad) pop mov es and inc xor inc bound fsubl inc insb dec cmp leave lock aam adc aam bound fs jns pushf cmp add xor jae add adc loopne jne leave dec or imull jge xchg insb or das mov test push fnop or xchg mov cmp cld mov inc ret nop mov mov xor sbb pop scas inc fcoms ret dec cmp cli add sub jnp rcrl xchg adc lods call (bad) dec sub sarl xchg push add sbb movsb sbb rol push pop daa push ficoml add add jbe xchg fsts adc and push and mov enter jno push addb mov push sbb sti or hlt aas jae (bad) or fisttpll and in cmp push stos pusha test dec daa pusha or aad int3 sub lea mov sub iret fs lahf int3 dec cmp cwtl add and push pop push mov stos push (bad) mov nop pop mov mov mov cmp xchg and xchg mov adc ds sbb or movsb (bad) and es mov sbb pop nop inc dec xchg adc (bad) xor scas mov or pop cmp lods clc dec pop pusha sub aas or adc push or adc xor adc imul ret lods inc mov in loope pusha or ret movsb add lahf cmpsl in jg and pop pop xrelease clc add xchg pop in add scas and loope sub or adc cwtl mov cld push lcall test rolb mov je or push lods cwtl add test test xor je add ja add pop scas xlat jbe push push mov pushf clc imul add enter add jmp aad add jb adc pop pop add sub inc xchg push nopl adc sbb enter or (bad) outsb and mov add sub inc mov push ja dec add mov in sub mov mov inc lcall (bad) insb push cwtl and push sbbb xrelease jge test (bad) je xlat xchg push xor psubusb xchg inc mov add cli pop insb (bad) call jl bound xor sbb mov pop pop cld inc sub cmpl (bad) leave or add jo cld icebp mov lea mov shr daa addl test add add and in adc lods xchg enter xadd mov cwtl pop or mov cmp mov add pushf xor test dec add adc mov sbbb xchg inc mov sbb and dec mov and and shrl adc rcrl sbb js rcr jecxz icebp and and mov xchg sub js mov movb mov stos and cmp push (bad) sub je adc les lock adc and test cwtl mov lods test pop dec adc nop (bad) dec rorl adcl push bound push sub nop push movsb add sarl inc subb and imulb xchg aam xchg cmp mov jno mov mov pop pop push dec stc jno jne and xchg push insb adc add sub fmul call movsl add adc scas push es inc adc cmp fildl cmp scas sbb or inc and cmpsb inc and xlat nop cmp sbb sahf test mov lea mov and loopne push nop enter jecxz sbb (bad) push xchg enter jne push cmpsb inc jo (bad) je sahf sbb lret cmc cld mov aam xor lcall jae push call repnz es and mov leave xor sti cld es and xchg jo aaa imul iret jmp lods inc dec cmp xor (bad) adc aaa sub mov jp sub hlt pop add mov xor insb mov aam cwtl mov xchg sub gs adc repnz leave push into or sbb and mov ret test xchg push xor xchg jo and fisubl test add push insb pop fadds nop dec (bad) fcmove insl and jb cmovg xchg add mov add lret push arpl mov or adc andb mov add insl call add jbe or sub mov mov add pushf (bad) rclb push xchg cwtl sbb addb or add out fcomps jmp lods mov xorl and and hlt out and inc test loopne xorb nop insb lret inc movl lds mov pop jae jmp insb mov sbb int3 pusha dec mov pop inc pop movsb test or imul cmp sarb pop lea inc in dec xor cwtl jl lods cmp xchg mov sbb mov add xchg sbb xor inc imul xchg (bad) cs push dec call or dec mov sbb lea movsb sub add sahf aam or add push js cmp adc iret cmpsb push das adc dec cmp jb xchg mov loopne add nop sbb inc mov adc fisttpl sub inc cld add adc add testl or in mov pop rolb sbb xor push movsl or inc (bad) das adc xor xchg mov add movsl ja pop mov (bad) stc cmp xor hlt int push push jl iret or inc mov add pop jne stc xor or movsb hlt in rclb mov popf punpckhbw clc sti inc mov movsl sub add mov adc outsb (bad) enter arpl pop inc sbb repz pop inc push lds pusha mov push xor sbb xchg rorl and or inc adc lods int3 rorb push insb jl push push es scas or and flds push xchg mov adc sbb dec jbe dec ljmp mov lock mov adc lret into and mov push xor inc fadds adcl mov sbb pop out lods mov fs or push nop movaps add cmpsb xchg sub sub stos lods cmp call adc inc push mov js cs test add or mov lret sbb adc inc enter and (bad) lods add pop xlat stos push in add out incb pop inc (bad) iret add sarb mov lcall jecxz inc scas mov or add add push pop jg sub out inc sub nop or inc movsl mov xor sbb insl lods inc xchg les inc loop outsb pop dec mov pusha sub push jge add add je or mov mov enter adc mov mov outsb (bad) mov movsl and xorb mov stc mov (bad) lahf pusha adc add mov loopne (bad) xor test cmp or shrl hlt xlat add push pop push aam (bad) or mov subl rolb sti out rorl mov dec add jns push push jo lret add iret clc push mov inc sub insb push (bad) push insb jbe xchg fcoms test mov ja or adc jns sub pop inc and ficom dec or jp lds sub int inc add ret push rcrb add mov add inc dec and mov cwtl pop add push and aad aam push loopne clc add fisubr inc push pop xlat jle out sbb pusha adc lret add xchg ss iret jmp pop cwtl test push mov mov repz xor push divl xchg movb movsb add inc int3 outsl cmpsl and lds pusha insb and (bad) sub or dec mov mov adc imul div out add les call xchg sub cmp lock inc into imul jb rcrb add ds das cmp flds inc enter and xor cmp call inc fimul push shl rorl xchg mov push add cmp loopne clc inc push cmpsb sub (bad) fldenv pop nop sbb movsl dec jne and pop and push mov sti pop rep inc and fildl add sub inc in rcl jb imul pop adc pop cli repz adc (bad) push inc fs js add (bad) cli mov pop mov inc (bad) decb dec xlat lock xchg (bad) push jmp and in leave adc loopne add (bad) idiv ja scas in mov jns test mov push add mov ficomp mov (bad) jge adc (bad) aam cmp and fcomps leave or jo adc mov test and cmova out sub arpl mov cs jp and xchg inc push rcrb xchg and int3 cld inc mov sqrtps adc les adc and adc lods int or outsb and xchg mov movsl jg or faddl mov xor js lret cmp aam sbb inc (bad) jbe and mov push imul or das jo fadd fisubrl outsl xchg adc daa mov mov inc (bad) and fmuls addr16 pop (bad) sbb repz or sbb push ficomp jnp xchg test hlt mov mov sbb fild adc stos sub jne pop repnz leave ja icebp cmpsl test pop loopne aaa rcrl push enter pop add add in jae mov popa add xor xchg test fwait je adc mov les mov dec rclb mov jge add decb sti mov push and sbb test clc mov ret dec or ja xor pop cmpb scas inc and ja (bad) lea dec adc sbb repnz scas lock or xchg stos or lock js pop inc lea mov or aam loopne inc sub cmp pop adc lock fwait dec adc pop mov pop movsb jae int3 pusha or inc adc adc mov repnz mov push inc int3 and cmp push shll mov push sbb add nop xchg push bound popf das test sarb sbb jmp add mov push into push xchg rolb fwait lods enter jl les dec adcl les cmp mov or pop into push pop fsubl (bad) aam push int3 xchg xchg jb lds pop into pop shlb inc loope jo pop fidivr cmp add jecxz ja lods mov cli insl xlat inc (bad) mov lret or mov adc inc xchg les enter movsl cmc sbb xlat std lea int3 enter into jno pop add (bad) gs push mov cld cmp mov lods jb push or mov stc outsb adc add in test lock sbb nop call pop and ret or sbb xor mov pop in lret ret lods pop add mov push jbe ja les int adc inc sub push lds xor sbb fsubrs insl aas mov xchg fdivr pop pop rorl sub and test data16 dec call pop push and stc mov or test popf mov cmp adc xchg inc (bad) popa or add lret and mov push sub push mov jno in mov xor mov inc push loopne clc imul mov lods add push out jnp jmp and je mov arpl jns cli sti stos dec add xchg movsb ds enter movsl xchg fs daa mov mov or dec jmp in pop dec insl adc or sub les push xchg mov dec adc or mov inc movsb mov fcoml loopne xlat rclb xchg sub mov stc fimul pusha mov lock or stc sahf inc or cmp lds pop add loope adc cmp cmc sarl lds or inc xchg cmp stc aaa rclb sbb and pop loope (bad) lea sbb sahf pop mov test add loopne rorb mov cmp fimull add mov jnp loope pop movsb inc sub push movsl insb fs lods and insb push mov inc add sti sbb test cmpsb nop pop mov sub cld mov add and cmp or in mov les mov mov test cmp add add lds aad and mov xor or xor icebp loopne stc add mov icebp xchg dec inc testb and cmp and daa rclb rcrb popa int3 add adc jp orb movsb nop cmp ja (bad) push ret dec mov inc mov sbb pusha mov dec mov popf dec cmp loopne add cmc inc loop mov mov jno push in into ret icebp sbb and pop add push ror dec dec and dec mov fadd ljmp add cmp sub inc sub push cmp dec lea and and push inc mov xchg mov test sub repnz ret loopne js mov sub xchg mov popa adc adc (bad) je test push aam ja leave push std in cmp cmpsb inc adc sub je or mov mov mul inc xor test pop in sub pop jbe lds nop pusha or cld std add or and ds outsb daa insb loopne xchg push xor rclb and shr pusha fidiv outsb fsubp das loopne lods (bad) add xlat jp mov popf (bad) sahf mov icebp outsb inc in adc sbb cmp dec sub loopne cmp mov jns fadd sbb pop xchg daa mov lret and dec fmull adc rcr stos call cmp mov cld xchg or sub es and pop inc ret mov or hlt cltd xchg leave ret inc aam push roll adc lcall mul and sub and loopne dec dec out add jb mov call nop mov (bad) xor cmp shll jl sbb in xchg int inc xchg push popa jge xchg mov pop lds nop xor push push lock fptan xchg movsl xlat cmp fcmovnbe sub xchg jno jbe push or and push jle mov iret pop mov xchg es add jne inc cld orl add clc orl test inc (bad) imul mov loope mov add mov lock subb mov and mov daa test bound cmp cld into test jb add stc popf movsl jo jno loope insb loopne outsb sub mov push adc in fwait mov push add sub mov sbb and cmp insb pop pop mulb orl lock jg loopne dec subb ret and mov dec mov push sub push fcmovb push clc and mov rclb adc mov test add or push cmpsl incb jbe mov mov mov mov mov lret and jle cmp mov sub mov rcrl dec and (bad) sbb cwtl dec adc push push nop les add ss into dec mov repz loope jbe nop clc icebp mov sbb cli jle xchg lock jnp inc loopne add mov in scas les xchg in pop xor dec mov sub je cmpsb jle pop fisubrl cwtl add adc push pop mov mov imul ja mov xchg call pop lods jbe cmp je or hlt dec mov push add test add (bad) xor in cmp nop xchg mov negb push xchg loopne outsl stos lock adc scas dec loopne test in or cmp pusha cmp mov mov inc in sub mov cs cmpsb jge adc xor cmp cld fstl daa cmp rcrb lock cmp inc inc pop (bad) jmp into mov movsl mov jle cmp mov xor add in call xchg inc mov push xor push xor push sahf sti stos sbb popa push cmp xchg clc add adc add sub jbe cmp cmpsl rolb adc rclb push lcall adc push arpl push loopne mov mov lods lret mov fcompl (bad) enter int3 lea push stos cmp sub (bad) scas std inc ret push je dec inc shlb in add into aas and mov icebp xchg sbb or cmpsl popa mov add fldt dec ret xor mov adc out sub or hlt inc stc shrb jo jbe faddl mov sub and cmp les dec popa mov pop and in adc push or adc roll xchg fistl cmp fs neg add push xchg sti jne movsb mov push test fist push push fs and vpcmpeqw pop dec loopne jmp jge fmull (bad) pop jo xchg xchg cmp pop jle sbb sub je test sbb cmp mov dec int3 js xchg cs mov test in sbb pushf les xchg or or cmpsb test mov mov jbe push inc xor mov std push das into jmp pop add mov mov push fisubr rcrb mov xor add xchg mov and jno mov int nop mov mov std pop cmp push sbb mov cmp mov add pop (bad) or rcrl jl int3 cmp inc (bad) clc inc mov out dec add (bad) pop cs add push inc ret mov pop or jne int in pop popf inc fimull xchg iret dec sbbl lock popa xor add jo pop sahf (bad) (bad) jmp clc lret cmp mul or lahf pop sub mov jecxz mov pop pop adc test int3 adc mull jne sarl add add jge add xchg xchg movsb mov jo pop imulb pop pop mov notl lea jnp jp int xchg mov jnp xchg (bad) push scas lods cmp fidivl pusha adc in cs dec push js ljmp inc dec mov popf add jb xchg mov std dec add bound mov loopne stc insb decl add pop ret inc add aas sub outsb call and mov lods lret or mov fnop enter pop mov sub shlb add pop jl jl sbb sub outsl mov sbb nop rcll test push or jne movsb gs hlt jo xchg out clc pushf add push (bad) mov fucomip and jge add xchg aas fild mov adc xor push std rclb mov shrb shl adcb fildl mov cmp jg pop loopne inc add mov imul mov arpl adc and push push sub es leave or add daa loope add imul sub in pmaxsw add outsb add cmp mov cmp mov rorb test add lahf xorb push or pop adc js sti (bad) sbb into jge pop lret popf mov add mov pusha inc pusha cltd adc or or fistl rcll dec push dec and or and or ja mov add sbb add popf mov add out mov rcrl pop dec popa pusha cmp push or jle and push (bad) call rcr add cmp dec test xor jo mov adc arpl cmc popf in mov mov and dec mov jl jnp out incb test rcrb dec add sbb sub pusha add sub lds lods and dec mov add sbb (bad) jae cwtl gs mov sub aaa lcall scas jne pop push out cltd orl loopne inc jmp (bad) pop or loope sti imul sbb mov (bad) dec jb cmp xchg es push bnd add cltd lods (bad) fs loop mov mov inc daa pop xor add xor xor aaa pop pop (bad) xor in pop ror xchg sbbl insb rorl inc adc and sub stos fidivr mov adc or sub loopne je push sub loop movsb sbb sbb and addl movsl int3 cmp adc pusha jne add adc ja jecxz add inc sbb add pop call add shll lret stc fwait adc xchg movsb sbb in cmp pop (bad) sbb mov aaa and jno add into mov out ds mov sahf repnz jne call fldl inc add pop jg lds sbbb sbb cli mov pop fistpl and add or and mov rclb add mov fstps fisttpll lea jl clc cmp add aad test jle mov jecxz pusha leave aam push lahf hlt add sub dec pop in mov ds insb jno or cli fwait mov test loope or adc mov push mov nop in add pushf (bad) addr16 icebp push sub xchg push aas jb add (bad) shll pop add addb arpl call or addl sub movsb inc cmp add test or shrb movsb mov enter xchg sbb or rolb push popa xchg or mov dec adc xor jnp fist mov pusha sbb sahf and sub pop inc push repz movsb sub xchg imul stos push push xchg jbe setp rorb addl or mov (bad) dec lea pop push ret es loopne xchg lods psubd sar scas or mov add sahf jne,pt inc aam cwtl test push fidivl sbb addl cld dec movl daa arpl imul cmp movsl clc pop push inc pop mov in jmp or (bad) loope sub pusha cld push jl sub es int3 or inc imul pop (bad) xchg sbb jmp loope mov dec fisttpl lock sub leave je in test repnz and loope sub jmp inc cmp (bad) lret test (bad) dec mov inc adc add les data16 clc add cmp fldcw dec and xchg jle test inc aam hlt mov mov in jno addr16 js pop mov push leave enter lods aam push jno push cltd xor add leave loope inc enter lods xor icebp enter push sub int add aad fsub push xorl inc aas and sub push pop clc jmp fildl nop mov incl jmp adc addr16 push push mov sbb jg clc in add ret mov movb mov rclb add iret sbb and adc or or sbb xor fld cmp test js push shl inc add test cmp movsl add inc xchg add or inc add mov pop cmpsl sti insb and cli adc loopne mov clc test test or lods pop clc sar and fsts and jmp clc insb add add cmpsb cmp or inc pop pop imul push jmp push repnz and cli dec jl and pusha scas jae bound mov mov and push xchg enter and and dec and inc mov out xor xor sbb mov popf mov cmp jl xchg xor sub sbb jge dec das push push mov xchg test in pop cmpsb (bad) push orb mov je movsb xchg jle or push aam add mov inc pop das fadds push rolb loopne jp notb adc push xchg add xor test add or adc lods and xchg lods dec cli pop xor lock cmpb inc in and (bad) hlt inc pop push repz and jo movsl xor (bad) mov or jl xor scas pop divl sub adc add adc fadd pop loopne dec sar jmp dec ja add push inc mov outsb adc jl cmp xchg mov cmp mov push adc insb inc pop test mov lock adc mov mov pop add push cld push aam sti loopne xchg dec dec push int3 or sub add mov addb xchg cmpsb xchg ret mov inc add inc aam push and cmp clc mov push sahf data16 repz cmpsl dec js jno ret lods mov push shll movsl xchg movsb (bad) popa or or or xchg add mov adc and jb leave (bad) in sahf jne adc or es mov mov cmpsb lret mov adc mov dec cwtl jl cmp sbb test es test int3 push scas dec fistpl add xchg cs (bad) stos loopne mov dec sbb iret in xchg push int3 adc into dec mov insl xchg xor and jl add enter loope inc xchg stos mov test lahf push scas push inc subb pop dec or sub xchg mov js clc dec add jne dec cmp mov fmuls and dec inc xor inc mov add add xchg push adc mov adc popf xchg ret icebp fsts int3 xor xor xor pop cmc test xchg sbb imul mov (bad) lcall testl lods inc and hlt fdiv inc push movsl shl push jb mov mov stos pusha add inc shrl and (bad) aas adc pop pop fsubrs mov inc jl mov and faddl add dec add add int3 cwtl jle xchg sub je adc xor andb or or jge fs mov mov aam add mov dec cmp xchg sbb pusha sub mov sbb sbb xorb sbb lea ljmp and mov rcrb test xchg mov jl aam inc (bad) stc call xchg inc pop add xor sub inc sub int mov inc cld fist adc or fsts inc test sub jbe mov adc jl and dec pop xor stc lock mov inc movsl (bad) int3 enter push xor gs test mov push popl mov sbb mov test aam stos (bad) hlt mov stos in cmp xchg cmc mov xchg xchg xor clc add jne xchg sbb mov push mov (bad) add aas lds (bad) and rclb and sbb xchg add enter and stos mov (bad) cmc or and faddl xlat je inc les les xchg or pop lods (bad) (bad) or pop leave and add mov dec inc add dec mov inc push ljmp or and xorb or enter xor and and mov mov (bad) cmp add inc in cmp sub test push inc nop or add pop add or or ds mov push add cmc push js add out enter push mov ret pop mov push cmp inc cmp add or les leave cmp push mov mov pop pop mov cmpsl pushf xlat fiadd aad dec cmp and jae cmp cmp and pop fimull nop add xor jns divl sub aad xlat roll adc imul cmpl loopne cmp jno ret aam pop add cmc (bad) dec (bad) xchg or fdivrs mov push cmp add push leave mov inc pop in fildll (bad) jb lcall dec pop mov insl jg jge pop mov cmp call pusha out fnstsw (bad) mov mov les movsl cmpsb ret push or lods movzwl push ljmp mov push jo mov repnz pop popa dec cmc rol inc rorl aam push lcall pop mov leave add (bad) xor popa aam xchg push xor push imull jns cmpb xor adc sbb (bad) movsl sub imul insl sarl pop or gs jmp (bad) xchg int3 mov in jns inc xor mov bound pop add dec clc movsb pop pop ja into nop rclb in add and (bad) rorb inc outsl test sarl cmovge or cwtl mov inc jge jl xor into loopne push in pusha cwtl inc inc pop xor mov sub iret mov mov dec cmpsb popf sbb andb test pop mov push call add insb cwtl sti dec push dec mov js aaa xor mov test sbb pop mov pusha (bad) and push mov mov jecxz adc jl rcrb into in cli (bad) int3 or and loope jb call nop jecxz add cmpb dec push adc imul sub (bad) outsl loop mov add int xchg inc pop call mov (bad) add loopne pusha std xchg inc or mov adc add mov adc inc cmp test adc add enter jmp mov mov xchg inc pop add addr16 xlat pop sbb hlt lock add mov fwait mov xor cmpsb pop pushf add jge call cs outsb add pop dec mov (bad) pop repz and push mov or xchg jns pop or pusha dec mov and mov mov mov adc xchg inc add xchg lret fdivr jmp or xor jp adc push jecxz stc xorl jle mov cwtl sti pop stc cmp or test mov sbb or and stos ds sahf mov push add push mov loopne jbe push or pop lods in and movups jo add sbb mov dec mov mov roll sbb lret std ret or lock lock xchg add (bad) inc push rolb push lret in (bad) mov lock inc dec fldl test xor hlt idivl add adc pop hlt xchg incb xlat cli (bad) into pusha nop xchg mov mov push mov cmp (bad) mov nop dec jge add loope sub mov and dec add mov clc push xor sbb mov xchg movsb in or and jge insl inc inc cld (bad) dec mov sub mov pop lds jb add xchg ja jecxz push mov mov cmpsl push sub pop aas movsb test pop xchg addr16 jl insl fs imul mov add lea rcrb mov cld or lahf sbb push sbb stos les pop andb cmp fstps xor (bad) push xchg stos (bad) clc insb addr16 fs inc xor cld and movlps sbb leave out movsl jmp sub test add mov add and pop andb xlat mov stc test jbe pusha int mov shll addr16 loop push push addr16 mov rclb add enter sbb adc mov sbb or cltd and cmp fsubs sbb adc adc scas enter xchg and test jbe add sub push in jp clc lcall outsl or outsb jle call push mov sbb in das add outsb xchg jle nop add es aad nop popf xchg nop enter rclb cmpsl sub xor pop testl adc sub push popf sbb rcll add sub pushf push mov incl inc pusha test push pusha jbe fwait mov das stc xchg sbb xor xchg dec sub mov cmp xchg mov shrb popf xlat fwait add idivb adc fcoml (bad) sbb sbb or sub aad pop es pop xchg and or mov add stos adc in push add movsl testl icebp ret sub rolb cmpsl out xchg fxch push popa cmpb mov and popf shlb xor pop dec es mov and lods inc popf inc sahf cli lcall test inc lret inc ret shl push add mov add fisub movsb push loope sub push jp sub mov pop xor xchg mov cmp js ljmp sbb bound mov dec rcr add add add mov lds test repnz dec lock push cmc xchg cltd mov (bad) mov mov and lahf inc add out int3 js pop and push pusha jb fstps xchg addps xchg dec push cmpb js sub lret adc inc push fs mov cmp jg inc dec inc cltd addr16 mov inc inc and int3 lods inc mov (bad) ja or (bad) lock insb fmuls clc addb aaa mov add testb fwait or xor mov jb mov sahf add sub adcl sbb jl push fucomip add inc cld loopne in sbb stc or push repnz inc sub xchg movsb add in in push sub jo mov sbb push adc inc es adc adc icebp (bad) aas fs cmp lock inc cld add (bad) lret cvtpi2ps fistl pusha jo lret jbe pop pop loopne popf mov add sbb enter push lahf mov sarl sbb add push pusha xor iret gs or imul fnstenv mov mov movsb push cwtl mov in jecxz jmp mov dec push xor ja sbb enter cwtl test ds push push and mov pop movsb and lret fiaddl aam mov bound add jae dec rol sbb nop xor aam nop fcoml ret add ror into push add xor rolb or lret sub pusha clc lds sub popa addr16 outsb mov std adc add push (bad) xchg adc mov sub jmp inc lock mov mov cmp push push add andl adc sti scas lods add pushf iret fucomi jp jecxz push lods add lcall xor add shl jns dec push enter xor call jo sub clc xor push jae xor push xor (bad) add pushf rcll out fistpll adcb movsl data16 add mov jnp dec mov dec push (bad) pusha cwtl mov mov xchg (bad) rolb and sbb push ja daa outsl and mov pop add and mov push push add and mov sbbl sbb sbb sub std pusha mov mov loopne sbb jmp add in xor mov adc push iret ret shll push add and add shrb jmp push push nop enter mov add add jb xor sbb fs shrl out fildl push nop add mov add adc push lods popa loopne pop push nop cld sub inc addb aad ror ljmp mov jbe jg push scas loopne js add icebp pushf lahf or pop test test test test nop rcll cwtl inc (bad) xlat jno pushf pushf push push aam lock or xchg popf push add adc lea js loop add mov mov pop xchg stc fwait std outsl lret rcrb iret add jp adc pusha fldenv adc add mov add pushl test mov cli jbe or adc sub xchg sti mov lock add adc call leave out add xor cwtl inc out jmp inc rol rolb mov inc jbe sarl jno test dec xchg inc lods or pop test jo lret cli jge add pop or pop loopne je fdivs push dec mov (bad) sahf iret test pop rclb xorl inc mov shlb mov mov jmp test lret clc push faddl enter fcoms adc dec out push lods mov fsubp add cmc push mov add aam out test pop sub (bad) xor push call jbe clc ljmp in mov mov add jo test stos test cltd mov sar sbb std mov pusha popa dec dec inc adcb movsl cltd add daa loop pushf and iret or push test aam push xlat in and lea sub jp nop loopne sbb push fimull es cmpsb dec inc xor jl mov or fucomp jae pushf xorb (bad) adc add xor sub bound std mov arpl or mov push pusha fiaddl and add loope lcall or and sub cwtl mov xor test icebp rclb hlt je add jnp sbb int fadds aaa (bad) mov mov dec shrb adc gs adc mov cli in and push push sbbl add xor orb (bad) add iret mov mov mov shld orl lcall insb jno dec cmc push test loopne pushf or and sbb cmp dec addb rolb add cmp shrl push pop movsl pop cld mov sbb jmp adcb es test and pop arpl mov and pop pop ljmp (bad) hlt sub cmp mov sbb pop rorb xchg adcb and cltd lcall push push or aam sub cmp xor pop pop test arpl pop push cmp es loopne std icebp cmp mov aas add orb into mov cmp int3 jns aas cmp test ljmp mov out xor repz xchg inc ds bound add xchg enter pop cmpb jge cmp add mov push loopne add mov aaa or cmpsb outsb aas movsb das andb testb inc leave add (bad) cltd enter adc dec add push fisubrl pop stos xchg int or and iret pop xor pop pop cld inc jp shll inc insl mov push or (bad) lret popl or inc pop fnstcw cmp adcb add out sub adc insl scas hlt (bad) pop add int test cmp sbb shlb mov dec icebp sti mov xchg inc add outsl hlt push jo loope add xor and push lret pusha jmp into cmp call or jge popa xor cmp test pusha mov fsubrs aad std xchg pusha jo popf jae push orb imul lret aaa std js xchg imul ljmp lods rorl jmp shlb jae imul pop ds jo popf sbb push icebp pop popa sub sbb mov sar push (bad) push rol (bad) dec push mov mov popa push shrb mov out lret pop inc xchg (bad) xchg cmp movsb add cmp popa aas nop test iret mov mov inc add mov pop jge aam mov adc ljmp add js adc sbb xor dec out das icebp es mov lret push rorb sub and fsubs les and jo cwtl out sbb popf sbb arpl imul popa xchg mov inc push cmp insl call cmp adc or mov imul loop mov xor pusha aas mov call je movsl cld bswap add mov dec inc cmp lods inc cwtl mov adc mov or cmp push or test into mov mov nop xor jae rcrb cwtl add cmp xchg push push cmpsl mov pushf add sbb ds add add std cmp jp add push sbb or rorb mov and push (bad) push jbe rolb sub push push fcoml xchg xchg push or adc test leave scas push or mov pop fmuls aam mov lidtl jbe add jp leave pop je sub int inc add sbb test loope push and sub dec movsw adc add xor shlb cmpsb fs pop xchg pushl out mov rcrb fwait arpl pop add rcr cwtl (bad) fdivs cmp push (bad) push xadd xchg test loopne mov adc out adc xchg jbe imul sbbl sbb and adc outsl add jo dec bound invd mov cmp out loopne mov test js xchg call inc mov cmp or notb cmp or adc mov movsb daa cmpb xlat fadds stos mov xchg xor loope mov inc lret rclb mov xor sbb and sub mov bound push ret or push mov add (bad) imul xor jbe jno or shlb push mov dec (bad) inc push push sub bound int3 or xorb mov jo sbb and add ret adc js cmp jle or add call (bad) scas aad lods cld dec mov mov loopne les add push xor sub mov jo push call jmp clc cwtl test (bad) pop xchg sub punpcklwd mov popa lock pop jp iret lea jns inc jo into xor push mov mov mov cmp sar and mov mov mov rorb sub pop cmp js sub pop push ror test in mov outsb mov stc add sub lcall push push mov mov into lret mov js add pop adc add sub xor add cwtl lcall add push das pop mov nop inc and cmp jge fs addl mov cwtl push add pop mov ret je xlat sbb dec (bad) mov adc and xor mov and lods and mov sarl xor lods jbe or call push arpl inc mov aaa int3 adc nop sub (bad) (bad) push bound (bad) cltd insb and mov push add sbb ret cmp adc in add jbe dec into out mov or rorb push out add dec mov mov enter cmp popa nop xor or loopne ss adc call dec jb add mov test enter into mov mov push sbb mov mov arpl in adc ret xchg popf mov add xchg sub add cmc lret test cmp js xor mov add repz inc add icebp adc out into rorl cmp or cltd xchg add data16 cmc sbb inc rol stc dec push enter sbb push add xchg pop (bad) imul xchg push mov into xchg sub nop pop orb sarb and mov adc and push mov xor cmpsb push (bad) xor push rorb hlt nop dec cld add jbe (bad) mov mov adc outsb aaa in push jle pop jae add bound testb enter repz clc push pop mov cmp push and jle add inc inc pushf pop xor fwait into repz dec xchg fsqrt outsb and dec loopne and mov xchg (bad) enter test add jae mov inc ljmp inc insb (bad) enter add in rorb out push xchg push mov inc imul test jns or movsb cld mov push push cltd xorb xchg pop mov bound insb or push add jo (bad) lret jle adc mov xchg nop lret adc inc mov cmc dec push xor cmpsl in jl aad imul push inc popl push imul or add or fs nop pushf cmp push pop add xor and push dec jne or call (bad) mov cwtl jl (bad) add cmp sbb shrl add xchg dec mov jbe mov add mov les push ds xor or jp loop movsb add sub adcl shl add mov mov dec fcoml (bad) pushf or insb and and inc sahf mov and sub inc and imul mov mov add mov jmp leave popa jl test dec mov dec sub divl orb xchg jg inc dec add (bad) sti sar sub popw or cmpsb inc call loope rorl sarb dec mov adc adc dec xchg pop ds enter push push xchg js enter int3 pusha add add test ss cwtl push push mov lcall mov inc adc es rclb mov (bad) push cld sar xchg or insl fdivs loop sub mov mov imul iret sbb icebp push jmp into jge xor xchg add xor std stos pushf push lods add mov mov mov jl inc dec call sbb push fdivrs js cs add xchg test ror xchg in mov dec mov lock add imul add jo roll inc mov pop imul mov (bad) es jb inc inc xchg pop or sub into jno popa ret add and adc dec mov les lahf mov loope push mov add inc sbbb out add mov clc gs aam in popa add std xorb das add lods jecxz mov mov xor aam jb push fldl push or cmp (bad) add lret mov pop test (bad) mov inc dec aam aas xor outsb fsubrl sbbl xor stos mov outsl inc dec nop ja iret jnp pop fimul (bad) dec inc pop inc (bad) push loope add popa jb xchg push and test mov pop sbb push or ljmp xor rcrl mov enter test jmp dec fildl insl jno push cld inc arpl ljmp stc or fdivs scas jg mov stos test mov push cwtl inc push sbb pop mov jmp insb insl lds addr16 sbb sarl shlb add push push das xchg and pop int3 inc fsubrl call outsl lods pextrw insb mov inc aas pop data16 adc (bad) pushf and inc adc test fistpl sahf std clc sbb sbb mov mov arpl dec jbe push movsb jo daa mov cmp pushf fdiv adc and inc daa push or sti (bad) inc pop or and inc subb mov (bad) xor mov mov subl xor pop xlat lret lret xor pop mov jo and inc js jl jl push inc or test test add out test das andb pop cwtl pop dec add push in xor mov or ret int3 jecxz popa loopne repnz xchg jmp pushf mov add cmpsl and into jmp sub stos cwtl andb loopne loop call push lds inc test mov xor lods xor inc add fstpl sbb jo xor loopne cmp pop pushf adc and and das jmp or mov dec js and mov adcb cmp xor cwtl inc jmp cmp xchg push fiadd push nop popa arpl mov push or insb mov and xchg pusha xor mov mov adc pop lock dec loop add out jae nop xchg mov test xor addr16 movsl pop push jo xlat xor sbb aam rcrl dec and jae sbb add pop dec sbb lcall push mov mov mov xchg jle jnp mov or mov cmc jb push and mov sbb pop (bad) sbb push or cmp cwtl getsec jne dec cmp es cmp sbb xchg insl or xchg xchg outsl jns mov fistp inc xchg xor bound cmpsb in dec jne rolb sbbl cli movb (bad) mov adc fidivr andl cs cwtl int cmp sub fistp dec jg pusha inc mov xchg nop sbb mov mov gs add and inc arpl mov sub repnz repz icebp std jecxz leave lock mov adc call leave in or inc fisttpll jp and cmp xchg pop fsubl cmovns adcb loop fcoml mov push pop loopne sbb addb adc test sbb push dec push lahf push loopne cmp nop cmp and rclb adc adc aam int3 pushl sub mov sub or pop xchg bound in push mov test and lret and data16 cltd xor mov int3 dec enter or adc data16 inc xor xor and cwtl icebp or or xlat or imul pusha sub movsb out subb dec and sub pusha (bad) xor enter adc jl adc mov enter add lret fsts mov ret mov test (bad) popa int pop sarl add scas add mov pop push cmp mov adc xor or xchg imul mov or js (bad) dec dec daa (bad) add or sub clc jmp out and (bad) icebp sub add add sbb (bad) sarl sbb add and adc jecxz push push sbbl push inc cmp cmpb xchg adc jecxz pusha rcrb out sub push xchg push sub loope popf cmpsb mov cmp dec out and cmpsl adc es sarb adc imul jae popf add mov mov xchg or icebp dec movsb in aas cmc mov dec mov inc cmp dec cmp push pushf mov push sub cmp (bad) mov mov or rolb fldt jne cwtl popa fwait add dec cltd ss es dec cmp xor add test stc push js add movsb cmp call ds enter fwait mov or or js inc (bad) icebp test and xor dec inc aam imul lock aaa cmp inc adcb dec or popa add ljmp icebp add cmp cmc aam lods xchg pop inc mov das sub shrb dec add call std mov (bad) int3 mov xorb fbld sbb and mov mov rolb into dec adc jns xor cwtl add jmp adc add sub (bad) sbb cld test push das mov push mov jbe rclb shl pop push mov mov (bad) rcrb add mov xchg lock mov je add lds sbb push mov sbb add xchg mov lcall xchg ja jecxz xchg int ret leave out inc orb push aas adc or pop add adc adc ficomp addb dec lock mov jno add popf popl mov cld inc into stos dec mov popl js dec sub fist (bad) loope push pop repnz sti test aam mov inc sub fist xchg in mov test jns xlat xchg movsl pop xchg ja mov pop jae lret mov ret bound call cmpl shlb cs in loopne add or test inc imul ja jo add sub sub sub mov add pop push push addb ret sub or les lea ljmp pop sbb bound mov cld fisubr cmp xor dec cmc dec ror call pop jae loop pop inc nop cld arpl movsb jno mov push rorl loopne aad stos add dec push loopne (bad) (bad) mov add mov sbb push pushf jo enter adc dec and int3 aam add dec inc dec mov inc lret sbb sarl mov icebp mov fwait daa mov (bad) push jmp mov (bad) in insl xchg aam push test cwtl jnp in ret jmp bound mov inc mov je ds aam push dec mov movsb daa (bad) mov cmp mov push out mov add add push imul aam add mov daa lcall pop pop int3 and add or or sbb lret inc pop adc rolb nop rdpmc mov mov push lret inc pop cld cwtl test inc dec add push movsl inc mov movsb lods sub sub into pushf push pop push in jno push xchg mov lea sub pop lcall enter js sub dec jl pop jmp mov inc aaa cmp std clc aam lsl addr16 inc add push sbb add sbb dec push mov add mov push dec call and in into dec test or fcompl xchg or adc sbb or jbe test add lods int3 add pusha mov xchg out inc xchg sbb xor push adc aaa lret cmp jnp jl outsb xor pushf dec sbb dec add rorb adc adc subl jns add outsl mov jle mov adc dec pop mov das add pop shrl add fdivl insl aam cld mov fistpl aad push sub mov lahf inc bound mov addb cmp sbb sbb pusha mov or adc jle push adc sbb xorl mov add stos (bad) mov cwtl mov (bad) inc (bad) push daa or jb pusha test or sbb lods mov (bad) mov lods cld fsubp rclb call adc movsb ret xchg push adcb call mov data16 stos mov test jno inc sub mov insb nop inc mov xchg rorb test pushf dec js fcompl mov pusha (bad) pop cmp add shlb adc pusha mov sbb sar dec rcl in imul xchg add (bad) mov test adc cltd sti rclb xchg mov and inc out pop pop ret mov aad decb lods cmp add into pushf rclb cltd mov or add pop sarb add js jbe dec push dec add or inc sbb jno rcrl sbb mov push dec sub add add mov xchg xor dec int3 in sub jno cmp mov les les push adc das mov and loopne and add cmp pop adc addl jo frstor jmp adc mov push pop (bad) jno lock ss into push xchg mov dec hlt cs call jbe push jl add jns (bad) push inc or popa in (bad) or adc imul and push imul nop adc das add xchg xchg push mov repz jl xchg les pop lods push scas sub xchg sub mov dec into imul xlat lea insl xorl nopl mov add jle test xchg leave or sub je add fabs rcrb or cmp add mov scas and call lret push pop sub imul mov loopne or jnp and mov push loop sub enter pop add js jle cmc xchg mov ja rorl cmp push mov cwtl xor sbb lds call mov es das cwtl add icebp aad ss movsb xchg add cmp std popf xor xor outsl xor call inc bound push mov xchg movsb mov mov popa fcoms out jbe ret and incl out jo sahf mov or aam cmc jno arpl cmpl inc cmp sbb xor enter faddl push adc aas and sbb jae fnstsw add inc add outsb mov sub mov movl inc xor call stc aam add lret mov test popa lahf add movsb (bad) sahf aam mov pusha test leave stos loope mov cmp test push or loop repz (bad) das jl or xchg or mov xor xor std sub jbe push pusha sub rclb or push cmp (bad) xchg jns fsubrp sarb xlat cmp mov imul std jne xchg test sahf dec test insl xor and and or out je ja nop adc enter (bad) sub pop jo imul mov clc or add pop sub mov fcomp xor sbb sbb cmp and aas ret cmp xor inc mov loopne in fsts dec mov mov addb in cmpsb mov ja add mov js adc nop call scas leave and mov (bad) xor adc clc jne loope (bad) mov xchg cmp xorb adc sub mov insb iret push cmp inc movb mov cld je mov loope add out add dec mov cmpsl shrb mov jae inc inc push xchg loop inc inc (bad) rorb inc jo mov or arpl hlt insb cmpsb popa add and aas or mov mov xchg inc rorb mov aam push mov decl mov scas jne test add fsubs push lods mov (bad) xor pop inc cmp xor add stos out push or lods subl dec pusha repnz mov and push int3 add add xchg inc push pop rcll lods (bad) movsl or cmpb xor jbe xor push cmc clc add dec fcmovnbe inc imul inc loope int3 addr16 add push orb loopne in adc cmp jl xor push test pop sbb icebp add inc sar cltd (bad) pop enter test pop push or cmpsl xor jnp int3 inc lock and decl xor in mov sbb lock enter add (bad) pushf fldt add sub push xchg mov xor add stc jecxz push mov dec das in dec or add add aas pop xor pop mov push push cwtl stos or mov ds bound mov pop rol dec (bad) lret (bad) xor out stos push adc inc pop dec xor push fadds test mov xlat int or adc inc push or or push pop mov fwait mov mov mov in or jns add jmp (bad) lods icebp imul pop loope jne lock or stc mov mov xchg pushf shr mov fnop cmp push mov or movsb insb rcll or jl and (bad) rolb mov incb adc mov popa loope adc push push add xor mov xchg imul push rcrl jmp push fcomps xchg ret cmp dec sbb xorb push mov inc adc mov test adc enter adc int3 (bad) (bad) ja jo dec test fisubr lea or hlt dec lock imul sbb sbb mov and insl insb nop pop and mov mov inc mov sbb (bad) repz cmc pop and lds pop test scas in mov rcrl inc in and mov xor repnz push sbb mov stc push enter ja push fmuls inc call (bad) and loope int3 shrb sbb negb sub lds ss xor mov lock pop adc test adc test or out aam sbb ret mov add pop es inc add hlt and fstp dec test add aaa jl dec lea xor mov adc nop pop test ss or mov push jnp faddl lahf shrl jmp xor arpl ljmp mov paddsw and push call push test subl (bad) hlt xchg push mov out call xchg adc clc add and nop sub aas mov pop mov and shlb (bad) ret insb adc data16 adc and ljmp nop icebp mov or jp adc jb bound and outsl enter xor cmpsb sbb (bad) push hlt sub adc nop or jge sbb inc and addr16 sub pusha fldenv mov arpl lea jo and add gs jmp rolb xlat nop pop movsb dec shll push out fisubrl js sahf or shrb andb cmp ret and fxsave pop fildl roll pusha arpl loopne sbb mov in pop and cmpsb mov loopne cmp daa int loopne sub push test push es rcll dec sub loopne mov sub pusha cmpl add into cmp lcall pusha pop mov pusha push add loop into jb sub cwtl add add in (bad) stc test aaa jae movsb mov pop clc xlat data16 adc leave pop div xchg push cli sarl pushf pushf inc ja test sub xor lcall (bad) fcoms jb sbb and loope mov jno push sub sub int3 ret (bad) inc xor negl xor push pushf adc xor popf add and mov das (bad) lret inc push loop jb xchg sbbb push jae push repnz or inc push (bad) enter add clc inc sub pop cltd add sbb sti aam dec add stc dec icebp sbb repnz jae mov xor test call mov (bad) scas decb mov les pop lock decl test mov fildl push les push pusha push sub insb push jmp xor jbe adc add js inc xor sbb pavgw jno call outsl xchg mov aam enter std (bad) pusha or sarb inc mov mov test pop push push mov andl js nop fsubl call cmp es cmp sub push stos test adc xor out repnz pop mov sub popf and imul add push mov test into cmp sub lods dec or clc jg jnp addb movsl add int3 push add int or add add pop jge mov add and jl sbb (bad) idivb rorb stos inc cwtl int3 cld add sbb or mov cmp rorl dec js js pop fs sub and rclb add test mov (bad) ljmp test xchg xor sbb mov loope jno jp lods fucom lahf sbb fidiv cmpsl cmp aas adc sbb inc loopne iret daa pushf inc and jae pop insl xchg or shrl add movsl dec jge mov enter int3 shl cmp dec movb jp add (bad) pop enter cmovl and add pop roll (bad) imul loopne adc or add leave lcall lea das sbb mov sbb pop or pop (bad) jo xchg dec in int3 sbb dec pusha insb jl xor movsl cs sub cld cmp add shl inc cmp and jo addb pop and lock enter cwtl arpl and dec loope sbb add fiadd lcall (bad) repnz jle jl ret add inc add xor adc xor ret and imul outsb jns sub push popf adc inc pop mov mov cs pop mov cwtl mov add xchg add pop add fistpl jne loopne cmovbe (bad) sbb (bad) mov xor imul lock es mov mov nop ss inc enter mov push jae ljmp jns pop mov add cs cld mov dec pop push sbb popa aad rorl xor or je iret js dec mov adc adc int3 cltd xlat sub sub les push inc sbbb (bad) out push lahf lock je clc pusha pop sbb scas jmp pusha clc xor dec (bad) add jl mov out or jo enter mov mov das adc dec add pop aas add jne lret jns add add adcb into mov call pop mov daa stc adc lods inc test add enter jo popf sbb sbb adc or lods sbb dec add sub sbb imul pusha mov pushf fs and data16 pusha dec adc adc jl or add jg ror in nop add mov pop push pop push xchg add clc pop outsl and pop scas and xchg jmp or jno cmpsb add inc (bad) mov or or sbb decl mov jp test ror pop cmp adc xchg mov sarb mov xchg bnd test addb call pusha mov or adc popa cwtl mov dec pop push mov xlat add cmp (bad) test jne pushf test or loopne sbb fisttpl fidiv add dec cwtl jmp dec xor sbbb test pop mov jno leave flds inc jle push movsl cltd je add sub sbb xchg pop adc push pop test or sbb xor (bad) clc clc je (bad) ljmp (bad) dec lds add ror xor sbbb movsb test add pushf or cmp push fadds outsl push jns adc psubd sub dec mov adc jge loopne push pop subb cli or push mov das adc inc or pop adc loopne arpl mov and out adc add sti mov inc icebp imul push cmp mov mov andb mov mov mov inc nop lods out push mov cmp jbe sub in in fdivs into cltd cmpsl test divl arpl scas adc jl lock imul lea insl or mov aam loope jl mov and push ljmp sub clc pop bound enter (bad) hlt mov cmp popa (bad) pop (bad) (bad) pop into scas cmp push xor flds mov shrb cmp or sbb xlat cmp pop add sbb cwtl enter xor sbb mov or cltd mov sub dec (bad) adc test push push orl insb mov imul mov add test cmpsb cld hlt movsb (bad) rorb inc inc jns pop sbb js sbb outsl aam add cmp jp pusha push and pop jbe hlt pushf jp stos mov mov mov fcomps mov insl pop xchg sub xchg inc hlt in aas cmpsb mov dec ss fcmovb enter imul je dec in adc push push popa mov xor fs imul sarb add leave lock and xlat stc gs pusha cmp sub sub lret or jl out into xchg inc pop inc dec mov dec loopne pusha xor xor test mov inc dec sbb movsb jne jl and mov add lods cwtl (bad) call push jl adc out dec insb enter repnz shrb lds pop cmp mov inc sarl std adc leave sub push xchg cmp push dec imul mov movsb and adc dec adc lcall xchg xor sbb cld sbb rclb aam pop xor jmp push push sbb adc adc js orb mov lods mov mov call add aam popa or push xchg adc and lods inc and imul or mov jg dec inc insl push out add jp fs in xor dec sti adc lock xor mov push inc movsb sub movl into loope inc or inc adc inc sbb dec cmp pushf push (bad) (bad) ja loopne call add mov repnz iret sub aas add outsb or sbb sbb pop sti mov aam xor into lock pop jmp jp mov sub cld xchg adc sub push addl push std int3 adc bound jl aad (bad) lods push mov jb push je sub in mov add xchg dec dec push add mov popf cmp add fsubl dec sbb aas in daa jno inc inc or xor dec (bad) setp addr16 adc mov inc xor or sahf sbb mov cmpsb shl out jbe in lahf lcall fwait hlt push je ret push xchg das scas cs out outsb icebp cwtl xlat jbe add decl inc lahf and jo or lods inc xchg jl add (bad) jbe loop test jp add push push cmp pop pop or ret jmp lcall inc adc inc lret pop inc sti lahf push rcr ret sahf clc lcall sbb sub pop sbb sahf or rorb divw add fldz (bad) xor addl mov inc cld test mov mov lods mov add sub sbb mov or add lds stos push sbb inc aam mov daa adc hlt js cltd je mov lret pop mov xchg cmpsb inc sahf cmpl push adc sbb testl sbb mov test fdivs cwtl mov dec adc sbb adc shl sbb sbb sub lcall js out (bad) and test and out xlat inc or lea mov xor xchg xor (bad) and and xor test scas in (bad) fsubr pop pusha popf jno pop mov paddusb jmp loopne je mov jecxz add loop add mov inc sbb orl data16 shlb lods sbb add add les jl add (bad) js xor jns clc cmp add dec dec jo dec add push inc sub xchg jbe out addl or adc cmp mov imul sub or cmp sbb mov add and in add icebp fcom and jbe and cltd loope lock mov test arpl bound aad ret mov push in push mov fbld sbb lcall cmp mov add sbb addl cmp loope cmp add mov pop push rcll jb jno xor out push aam add add lret int3 pop adc mov mov call cmp jp in xadd add xchg ror loop pop push stos push mov inc (bad) out fnstcw clc jle or les sbb xchg insb call jle inc cld fs inc int3 jns add fstl fmull mov ja sub dec (bad) xor jo outsb sbb cltd adc lods data16 (bad) sti add out shrb loop (bad) (bad) pusha ret mov xchg or sbb inc idivb (bad) jae cmpsb js add xor idiv and mov add aas aam add jbe push xor jp out pop cmp fistp add scas lods adc add jb mov test ljmp jle insl push add xchg push sbb mov movsl (bad) mov in mov mov sub cltd cmp add jecxz fldt into loope and xchg ja add sbb push in int3 push (bad) cmp test mov mov or inc push call andl or xchg shrb adc sbb mov xchg pop jo sub mov and xchg push or ret loop loopne dec add mov mov add int xor (bad) cmpb fwait cmpsb clc push es jl clc or aad mov sbbl adc lahf mov sub test imul (bad) and lret pop data16 cmp (bad) mov test mov and or (bad) cmp arpl nop shrl cld popa nop nop mov add icebp mov cs or rorb inc in adc arpl ds pop mov xor imull sarl inc or sti ja test xor push xchg les imul jb hlt dec icebp xchg add sub xor rcrb xchg push loopne mov iret mov shll cwtl push mov imul cmp and aas mov dec test add out bound shlb jge mull inc sub mov or dec (bad) int3 adc js (bad) and dec xor addb adc cmp mov sbb and pop int3 insb dec (bad) push xchg mov push js test lods mov xchg push pop arpl in and push cmp dec aam fwait test movsb fisttp jl pop mov clc cmp ret addr16 pop cmp add cli stc inc shlb pop inc enter les dec cmp add arpl sbb rolb outsl mov xor jne shlb fs popl lcall in xchg xor lods ljmp xor xchg popa int3 ja dec inc xchg mov xor and push inc pop addl jl add loope and icebp push imul cmp add adc rorb leave loop mov add mov (bad) ds test and and (bad) hlt mov aas xlat mov and push mov scas mov shll add add nop sbb aam cmp cs pop add push or sbbl das mov movsb and xchg pushf inc or push and jl mov lods sub jnp jl dec dec cmp jb jg negl mov stos cltd and pop xchg sahf pop enter into mov scas enter cwtl jo add int3 inc jl push mov lret mov imul add mov mov lods pop or mov lcall dec test fs and in and dec and sarl or xor movsl rclb icebp and insb in popa cmp out inc add push xlat push subb mov data16 idivb (bad) xchg js pusha xchg iret mov shlb add lea xchg aaa sub mov fs pop icebp leave xor ljmp lock or sub movsb mov lock test loopne,pt mov mov shrl and (bad) insb add rcll mov dec sti add cmp pushf adc mov and subb jl (bad) clc aad cmp mov push cmpsl xchg incl jl pop int3 lds ds cmp xor in test adcb push mov dec sub data16 mov xchg cltd cs inc sbb in rclb push sub cwtl pop pop xor add call sub xor je pop push bound fwait dec aaa leave imul dec add movsl mov aam mov mov cmp (bad) sbbb jno inc xchg add out mov mov stc inc inc in adc dec inc lock cmp inc mov (bad) cld mov add iret fisubrl (bad) sub xchg (bad) mov mov push fwait (bad) lret or or out inc sahf add or int3 xor add fldl2t dec and out or sbb and and adc sub imul mov outsl lahf push push dec cs lods and dec add mov iret addb sbb jl add inc daa enter and fs mov mov mov mov test scas sub test mov in jp inc shl (bad) mov and call inc add pop sub out or cmpsb and or add cld lea cmp in cld and aam data16 push cwtl or insb mov dec sbb int3 xor aam lods xchg pop push cld in mov enter js int3 bound rol ret or add xchg test int3 paddb xor out inc repz push je imul gs rol aam inc xchg out sbb push fmuls rclb nop add mov add and jl add inc mov sub ds sub fcomps adc fbld mov movsl (bad) mov pop push mov lret mov cmp in mov andb jge lods inc mov pop cmp jbe hlt and jecxz movl mov push cmp stc push (bad) sub inc ds movsl xorb loope mov add mov add pushf (bad) xorl fptan and fsubrs add arpl or es sub cmpsb movsb cmp pop mov out jcxz dec mov and (bad) xor loopne cmpsb iret adc mov lock mov (bad) xor fisttpll (bad) fwait clc push cwtl lods mov out rol mov loopne std mov lret mov and pop divb sub pop inc push inc addr16 (bad) fsubrs lods repnz add lret test jl mov or pop add roll loopne icebp cmp cmp loopne xor adc sbb repnz aam jnp pop xlat (bad) icebp fneni(8087 add aam pop (bad) ljmp xchg pop push mov inc sbb inc lods stos call (bad) hlt loope into fdiv jb aaa sbb cmc xor (bad) jmp add add rorb xchg pop fisttpll cli dec hlt lea mov int3 or iret and cmp cwtl and shll sbb mov pop loop repnz int3 add jl cmp push add stos cmp adc sbb xchg mov cmp jno outsb das push bnd inc mov dec cmp add test lods test jl orl lcall cli add cmp enter pop sbbl dec ret adc push test lret add xor (bad) xor cmp push in mov mov mov mov movsl shrl leave sbb outsl jae push push inc popf scas movsb mov daa arpl mov mov les push sub dec fildl pushf bound sbb or pop lret add pusha pop add insw test (bad) cmp subl mov xchg push sahf imul sub dec fidiv add pushf sbb inc inc cmp fildl inc nop fwait adc push dec add cmpsb mov and (bad) cld mov out shrb add cmpl xchg lock jle inc cmpsb push sub call xchg or add outsl adc or push push add mov sbb push cwtl notb dec aas insl movb and call push jg int sub xchg xchg loopne add hlt add xchg add test jmp in loopne or inc inc and and push xchg mov repz (bad) imul cmp and sbb sub clc xchg and dec mov xor sub mov inc xchg xor pop cmp sbb aaa jbe push dec in cwtl ffreep stos leave add xor hlt loope pop ret ficom aam mov fs sbb add (bad) jne stos (bad) dec ss fs xor popf xchg adc lahf add verr dec fnstsw sub dec fcomps push cmp sbbl (bad) add dec mov mov inc cmp pop loopne xor in xorb jb adc sbb xchg inc pop jb add popa sub int pop and xorl repz (bad) repnz lds xlat add aaa xor or popa sbb fdivrs jno add aad gs out mov test pop mov jl jnp add insb mov or push sbb popl dec and (bad) outsl add cltd mov jge mulb jbe mov pop pushf push cmpsb or popa mov mov adc add test sub jne les sub sub and jno movsl enter enter in in lcall xchg mov in (bad) rol bound movsb and sbb pop jno pop clc (bad) pusha sti or mov or aam mov inc pusha push pop call in xor pop dec lock cwtl std nop add nop cmc dec insb int xchg out cmpsb cwtl test imull cli lea adcb out inc test ja call loopne pop sbb push adc lcall inc push ja cmp mov movups outsl loop push lods inc (bad) sub mov fcoms fsubr mov jae (bad) dec lahf sbb icebp adc test xlat cmp aaa shll xor inc pop pop mov and nop adc iret int3 out push cmp cltd clc cmp jmp shrb fsubrs mov shll or daa sbb and jp pushl into sub clc push sbb aad stc jmp jecxz lock cmp aaa rolb add repz test lock sbb and mov daa pop in (bad) enter add lock mov push repz jg lods and sbb pusha xchg adcb daa adc fdivr aad mov enter and rolb or add dec test out mov xchg out imul in inc in mov loopne fcmovb jmp flds insb sbbb pop or cwtl inc xor and out mov out js add sahf mov sbb test sbb adc adcl daa inc cmp inc roll mov push dec cwtl inc test pop cmp mov leave mov inc or bound pop adc test pop sti sbb adc movsb pusha cltd rclb cli jecxz xor mov leave xor sbb int and jg fcmove pushaw xchg clc jne lea cltd sbb mov or addr16 in xchg mov and fidiv orb sub ss out testl sub aad dec cwtl mov shll lds push or ret pop xor dec sbb mov pop ds inc mov or xor dec adc pushf fs and cmp in or cmp roll adc jne push mov test aam xor lret aam int3 and scas lcall mov sub mov or pusha imul ds loope (bad) pusha fwait or nop jecxz lret leave mov rolb cmc rcrl mov js (bad) or jl data16 cld clc add iret xchg mov jbe mov or adc orb pop or ret dec xor dec cmp xchg mov in les ds xchg nop inc aam push fnop inc mov (bad) sub das mov lock rcl lock sub cwtl mov cltd adc mov test jno sbb dec dec xchg jg,pn shlb pop cmp xor sbb popa cld mov add mov adc clc rorb push push mov mov pop and xor lret ja jbe mov and xor and inc or js sbb mov sub mov test pop xor dec cltd es pop add pop push fst push (bad) jae push test out pop mov push add call in mov or push int and adc (bad) int3 ja xor or in loop add jp dec test mov jg jnp mov add xchg lea lahf lds or divb pop dec mov in mov mov (bad) cltd add mov or and ds call dec push xor mov fwait popa pusha aaa and (bad) dec xor pop adc ret subl adc test in jo pop jecxz pop ds test inc movsb test pusha mov inc stos push mov fistpll popa enter call iret orb js enter jnp pusha insl and pop cmc cmp scas (bad) adc dec sbb push fldcw mov and dec or bound mov sub cmp mov jl mov add pop mov mov in rcll fiaddl (bad) cs or mov call popa and movsb sbb or dec adc or movsb dec xor sbb xor mov push xchg or cs clc adc ljmp mov jnp jo cmp pop call pop cs add movsl fstpt push mov push lock dec pop fwait dec testb push je xor in enter (bad) movsl fdivs cmpsl je add fstl and add in pop insb shl (bad) cld faddl fisub sbb jmp jae mov lret lahf cs fstl insl subl rclb add pop add icebp addr16 fisub or aam inc mov (bad) (bad) cmp push sarb ss add jno xor sub js arpl test int rcrb (bad) mov sti clc mov cmp imul jp shll mov mov or mov fmul mov mov (bad) cmpsb add dec into loope mov inc cmp loope sub imul orl enter jo das jnp add pusha or lahf jmp sbb mov or dec clc and adcl pop mov shrb lods leave jae jno mov jo xor adc cld pop inc and fisttp pop sbb mov mov pusha dec sbb xchg or lods mov mov jle loopne inc (bad) enter mov pushf pop icebp (bad) les dec out cmp dec test add mov sub mov cmp push movsb and aam dec push and pop pushf jp add inc add jns bound sub cmpb or or lahf inc and jns xchg pop sub add fisubr call adc dec pop icebp pushf clc mov add fs and cmp jp adc xor aaa pop orl sub lea movsl mov and or andb scas ds pop push movsb test xor add lods cmp mov rolb addl jle jae add mov fadd test lcall pop xchg scas inc cmp pop pop adc push sbb xor push jmp xor loop rorb push xchg push scas jbe adc gs sub add cwtl mov insl adc inc jecxz imul test sub cld movsl xor cmp lock adc loopne sub push pop mov mov fdivrl jae sub or inc jp mov and dec int3 jne and pop mov adc xorb (bad) stos roll add or adcb dec es mov adc sbb pop lea test or mov dec pop push add sbb adc adc and pop sbb scas addl dec leave pushf and rclb add imul roll fimull pusha data16 add in inc test add jl imul lock cmpsl test je fadd xchg jne iret int3 into and (bad) and dec enter les arpl push add sub fimull bound lds and lods rcrl pop mov dec hlt aam or pop xchg adcb dec xchg (bad) add jl sbb mov adc popa xchg ss fsubs and call add aas es jge cs out pusha sarb jmp push dec pop adc dec test lahf jae iret cli test inc js push or inc sbb pop jno push lahf mov mov sbbl cld xchg loope sub inc pop ds jge add popa outsb push cld cltd cmp pop dec cmp add pop int3 sahf and ja pop fdivl mov cli add lods sbb fs (bad) lock in xchg fdivrl add (bad) icebp push xlat or aad push mov add mov jbe xchg cli add out mov mov in add push test dec pop mov loope es aas cmpsl rclb mov out cmp jg movntps setle jb outsb sub lods adc mov add mov and add fwait test aas cmc mov hlt cltd (bad) test add mov add jecxz clc add loopne mov dec (bad) pushw add sbb imul mov addl movsb aas sub lock add cli mov scas add cmpb sbb icebp test sub incl jg pop test ja (bad) dec add jmp stos lds mov into or clc push jle add data16 mulb cmpsl arpl add mov in pusha xor add xadd stos nop adc rolb jle js pop mov js or push out sbb add xlat es inc mov jns lods inc pop pop (bad) sub push lahf insl ljmp cmpsl sbb sbb sub or bound stc pop adc or fidivr mov mov fmuls mov (bad) les mov mov rorb inc jmp xchg shrb push fcomp stos add es add fiadd xchg sub test cs pop xchg inc ret lea pusha mov add std fadds and jmp xor cwtl or cmp (bad) gs sub movsl mov clc nop jo mov or insl xor dec xchg sbb jecxz fcomi xor cmpsb sbb out add std (bad) jo add in xor int sub add push jecxz std hlt popa push mov mov or push jo and adc mov push out scas jno push and cmp adc add inc dec js inc xor push sub (bad) aaa xlat pop fbld push repnz sahf add push xchg mov pop xor add in dec aaa imul push push fadds (bad) and push inc sbbb jmp orb mov push jne adcb movsl mov dec xor adc bound lock imulb pop ljmp sub insb je sbb insl ret push add movsb cwtl add adc mov dec cvtps2pd add inc (bad) sub dec sub test cmpsl push pop fwait add jl push sub sarb adc adc xor or pop ja mov in mov jp add out cmp xorb mov leave cmp fbstp outsb in xchg sbb pop popf data16 je adcl mov cwtl fisub push sbb test pop loope fmuls aas add push jmp rorb cmp or xorb lahf xor or pop cmpsl pop jg jns push test fmuls les clc sub pusha std sbb (bad) jb pop in push adc add mov xchg or xor and sbb add pop lods mov lods test add stos sub imul roll mov pushf fsubrl add fsubr shlb pusha mov mov push ja lods adc leave subb mov and (bad) mov cwtl sub mov or mov inc mov bound outsl adc jb sub rcrb out pusha sub sub divps sub dec pop push inc add inc mov cmp or decb cmp mov sub sbb pop or (bad) cltd dec jg add sbb push cld andl xchg loopne or and pusha ds fdiv in add xchg insl test push es jg pushf fldz out inc lods jecxz loopne sub mov std clc and mov fild sarb out data16 sbb imul add sub jmp shl pusha addr16 push cld data16 leave xchg lahf orl ret aam gs mov add mov lock popa (bad) pop fs push inc mov loopne push or dec test bound jg dec and insb add add test aam (bad) or test nop mov dec mov xor addb sub dec jmp (bad) add (bad) pushf ficom sub xlat add imul int3 pop xchg ja pop int mov sub movsb nop dec and mov add add (bad) and jbe fnsave inc icebp or rolb jae lsl jecxz lock popf mov mov jae mov jnp cmp aam cld jo cltd cwtl sti add popf stos or lock and inc aam sbb fmuls add mov inc add jge call (bad) aad pusha hlt pop test jle (bad) loopne daa jge fnstcw pusha cld sub int push imul ljmp les pop lock fsubr xor hlt ret pop add adc int3 inc mov xchg add jp xor fwait pop cmc push pushf pop mov mov (bad) in xchg cmp push int3 ljmp jl xor (bad) insb adc add sbb ds mov jmp push pop add pop jne add mov or add arpl stos push sub sub xor pop jecxz mov imul jae jle inc mov sbb adc hlt adcb pop fildll cmpsl add aam clc lods orb and mov insl adc jbe adc add pop mov sub lods adc lods cmc add int mov scas repz lock movsb and jle add cmp ret repz push adcl mov xchg arpl and mov pusha ss cmpsl push lret xchg aam test stos add inc movsb and sbb or mov dec xchg mov mov pop cmp cmp xor sbb dec pop ror sbb rcrb pop add insl xor jg arpl cmc lods out jecxz cltd sbb sub xor rolb aam sbb adc addr16 mov mov pop mov pop lret stos sbb fisubl movsb test mov cwtl pop add cmc jo mov cmpsb movsl push in and dec and add cmpsl test xor fsubrp jnp sub xlat sti lret loope sbb mov jnp testb dec cwtl out mov addr16 pushf cmc jecxz mov lods inc add lea mov enter pop add dec mov lock xchg mov nop add pop js outsb cli mov xor mov pushf mov call push mov lcall movl and jmp in inc rclb imul add add xlat or cwtl add ror testb adc push roll aam sub pop lods cwtl dec ja push sbb test push test mov dec dec push sub add xchg xor push sbb add inc cld mov mov add sbb sub out faddp aaa (bad) loopne and adc popa shrl push lock pop mov xor lcall rorb fucomip mov dec add fadds sbb insb inc ja xor stos mov scas add jo sbb aaa pop add or push clc add mov and cmpsb adc int3 and inc hlt loopne loop sbb xchg or std stos jo call xor inc mov inc inc mov fimul movsb imul lods jp jae bound inc (bad) lock jl mov xor icebp cs or test repnz pop mov push pop fs repz or incb mov fnstsw xor xor pop push mov push push ja adcl out mov aas pop clc popa add cmp sbb lods cmp mov scas add cli and cld or add dec add dec sub adc inc add es xchg lcall scas cmc (bad) cmpsb dec add add pop aaa xchg ret dec fs add add rcrb (bad) out testl xchg lds fsubrl or cltd jecxz nop pop jp pop or and or mov cmp sbb push ss movsb or add fstl adc add iret and or sahf jno rorl loopne xchg xchg adc cmp jmp clc loop pop xchg or imul jge cmp cld test movsl add mov add xor mov mov add cmp jmp loop add into jbe daa aaa loop or xor xchg leave ss adc fistp sahf xor fwait lahf add or push mov inc or sub in notl sahf push movsb mov adc and pop cmovno sbb (bad) cld mov or sbb push roll sub mov pop test or push nop xor mov clc cs lock int sub jns jp pop pop sbb hlt pop dec jecxz movsb andb mov hlt xlat shrl in pop mov test add out push lahf sbb mov shl lods and sahf adc imul push js push insl aas push scas sbbb scas lea push pop add sbb xor pop icebp pop sbb pusha or nop add sbb in insb pusha pop or sub notb into sub push sbb (bad) mul cld cmpsb and addr16 inc rcrl lock jns xor sub jecxz aad dec cmc stos sub jo test cmp lods test pop jbe add jecxz xor pop or in ret xor push mov imul data16 sbb cwtl rclb push sub adc add fsubrs mov add test inc stos pusha sar add inc clc jae inc fwait lock iret mov ror sub inc aad dec pop jnp insb add adc or cmp dec fdivrs fs ret push adc xor cmp sti add push jmp clc repnz sub inc cmpsb (bad) lahf xor iret mov loopne sahf dec xor arpl bound add add test xor sbb (bad) lahf imul mov xchg pop nop sub add call ret or sbb jg ss dec repnz rolb ljmp enter cmp adc cmp in and sbb add movq pop mov std into rorl mov out pop add mov and or or (bad) xlat pop sub push popa pop pop and push mov mov mov fdivrl pop adc leave add pushf or push leave rolb loope pop shlb je nop add das xor popf adc jo inc lahf pop fbstp add loope inc movsl mov je loopne push mov test sbb push ret sub cmpsb int cmp cmp sub or out inc addb jmp add into sbb adc push push inc inc ret das int in cltd mov mov out sti dec outsl inc sar xchg mov lret inc sbb (bad) and add jmp jnp sbb fiaddl test ret cmp push and fisubrl (bad) in cmpsl cli add lea out or loopne mov adc mov inc jmp scas push notl xchg adc adc add out rol push verw mov out adc (bad) ss inc outsl leave out lret add xlat call pop js fldcw ret fstpl das lods fwait gs adc and (bad) dec outsl (bad) sub mov rcrl sub push pop jl lock xchg out add sbb dec xor and and jecxz jb adc sub xor push mov adc fadds js orl jo lar add mov mov (bad) mov mov movsl insb lods jnp fwait into or ficomp popf (bad) mov cmp test cmc mov insb and adc lods test aad mov push push das cld pusha xor cmpsl lds push negb inc pop mov outsl push add adc test test mov add pop sti stos mulb enter mov jg jmp sbb fisubl mov sub imul sbb push push add (bad) cli inc mov or imul fcoml or adc add pop pop push add add sub jl addr16 das or sub mov xchg adc inc andl mov dec stos dec pop adc and lods add int es shll add adc jne add mov cwtl cmp in (bad) mov out daa add mov jle fs lds std aas ret xor cli jns repnz enter inc cmp and mov add mov outsb jno pop roll sti push add jp xor mov pop daa insb subl jle punpckhbw aad fmuls lret add adc inc add outsl daa add xor xchg fs add and add loope scas add (bad) pop int3 add jnp push lods fmuls jp or mov repnz sbbb aas cmpl testb xchg test add aad xor lahf ljmp xlat add mov add jno push pushf (bad) std sti pusha adc es cmpsl pop popa aas out rorb sub add int and (bad) repz mov add call shrl adc mov fmuls sbb call inc and xchg ds add sub add jl push in pop lock xchg mov add hlt outsb cltd jno inc test add sahf sbb test add lret cmp adc add pushf pop sub popa push pop adc push lods shlb add fimull mov sbb test sbb adc into sub fistpll fcmovbe pop add sub and repnz push fs (bad) cmc adc in cmpb icebp sarb or xlat mov js ret pop pop xchg in add popa sbb cld xor pop pop mov sbb std enter insb rolb aad and sarl cmp fisubl jo inc ja inc inc arpl js pushf fcomps mov and mov push cmp and (bad) mov addb int js int3 mov jb dec lock cli add sbb fild adc push fidivrl fimul pop adc jg in sub pop (bad) adc and jecxz insl push add dec lea in icebp fmuls xchg dec inc cwtl sar add lahf sbb adc dec div insb jne fild push xchg pop cmp adcb mov add pusha rcrb add mov sti xor dec fcmovne loope jle dec pop xor sub push mov stos fucomi xchg pop adc movsb xchg sbb sbb int3 pop inc pop add add pop or mov mov cmpsl daa cmc movsl inc adc faddl jp pop fsubs aam push xlat sub addb stc fnstcw cmp mov test cmp sbb js push dec test xchg cwtl je pop add nop int jecxz jg mov inc in xor dec dec xor lods mov pop mov jmp xor jge inc pop in out add leavew add jb pop cmp lods lcall xor cmp in jns cmp push cmp jb pmulhuw js xor in sbb data16 negl xchg mov jmp fwait int3 mov xchg add xchg (bad) outsb jmp loope add pushf fdivs daa mov lret test clc orb pop jno loopne xor push hlt inc and jae shrb jo cmp arpl cwtl lods sbb repz shl aad fcmovnbe iret or xchg and mov add xchg xchg (bad) add pop push aas push and (bad) push imul push aam and push add mov xor adc arpl test js sbb jle and mov xor xchg push cmp mov or pop and ss cmpsb lock mov shr push sbb inc gs jns sbb add add xchg sbb mov sahf inc push ret pop test sub int mov xchg test mov sti and sahf add loopne outsl sub lock mov pop jne pop xchg inc mov adc cmp test push add mov cld jnp je clc icebp loop add pop add insl stos and hlt popf sbb mov inc mov int3 pop inc push dec in add mov mov (bad) test add in mov jne mov les test pop xchg and xchg int3 scas sub mov inc or dec inc fs jg cmp pop mov lock mov dec aas or test pop negb popa mov mov sbb xchg jle dec add pop fiaddl nop pop xor jo int mov jae and js add xor cld cwtl xchg lea call das mov in mov push and mov add mov push mov idivb nop inc sub fdiv call add dec xchg pop pop lock loope add cwtl mov sbb fwait push dec rolb aaa in insb popf sub xor cli addr16 cmc movl jg pop cmp lahf dec aas shlb push jne psraw ret insb fs cs xor mov xchg add xor pop flds add cld mov cmp in pop test inc mov or pop shrb push in jno push in pusha cwtl mov cltd xor rclb cmpsb inc mov (bad) outsl cmp hlt xor push mov lock mov repnz adc push sub dec mov arpl xchg add (bad) push sbb push roll add std mov pushf push push mov enter in dec add shrl test arpl shrb imul jge test outsb adc js cmpsl mov push xor mull mov or sub add sbb (bad) negl cltd loopne mov pop adc add (bad) subl xor loope inc adc insl pop jmp ret push inc adc add lds xor pop and add xchg mov imul add fldt pop xor push stc aaa dec mov xor in mov cmp jo lods ljmp add push div ret sub out imul add push pop pusha dec cli aam push or pop sbb jmp out pusha or aaa or stos ret add outsb rcll xor jg pop sbb iret mov lods (bad) or das mov add movsb or into or mov rclb test xor lret jmp xor cld push or add inc test sbb and lahf sahf xchg mov adc jle push popl test sub push inc loope jb add (bad) ds sbb in shrb xchg mov sbb xor or and (bad) arpl sbb mov pop call ljmp add movsb push push adc sub es jp enter int mov popa xchg cltd sbb add and pop insl sub ret add popf cwtl cwtl je push dec mov bound add add test adc or jmp jg xchg pop arpl pop add sbb sub jne and add test pop pop gs push jns cmp pop push inc mov inc cld add inc jp cltd inc in scas add dec mov xor sub stos mov and pop xchg int3 push add xor loopne sub or les add ret pop adc jbe fs push in adc (bad) test rolb jle dec add xchg popa fcomps fbld and in or pop add fidivr outsl and fbld adc jbe jno mov adc inc mov add adc pop add or popa (bad) mov out xor test shlb jbe decb addr16 push pop lods dec and sub adc aam or arpl lods insb pop add lahf shr (bad) dec pop pop xorb sub and dec mov das cmp out jae or testl lea hlt leave pushw test add enter push xchg aam adc fsubrs popa pop int3 or pop out fsubs jne mov cmpsl adc je add lea js cltd push mov pop pop dec out sub bound sbb xchg add enter movsb add sub pop mov mov adcl adc xor in mov test out clc negl rcr mov xchg call add aas jge mov mov adc leave adc inc cli jae add cmp cltd fisttpl adc aam pop test out or jmp pop jle mov mov mov inc add lret add adc lock imul jmp sbbb pop shr pop xor sbb xor xchg stos add pop (bad) into neg inc cmp es rcrl dec and or lret mov pusha lods aaa push add fild or (bad) and push rcr jae mov mov movsl aam inc xor shrb data16 mov aas xor (bad) dec add sub sbb or or sbb fstpt in test inc loope sbb (bad) and cs out add in adc inc push sbb inc add pop and rolb jns gs pusha fiaddl pop loope adc not pusha dec mov test cmpsl jno movhps popa (bad) jecxz mov (bad) lret aam push inc jle enter orb or or add mov adc ret (bad) fs mov and adc adc cwtl inc mov add pop in scas push mov add jno jmp test aam xchg cmp cmpl mov (bad) mov lea aad mov cwtl dec je add movl mov adc inc dec or (bad) mov dec jno xchg call adc cmp je enter bound mov jg test enter stc push pop push push out mov test cwtl add lds add mov xchg les pop push add fsubrl pop movsb inc jb pushl mul test mov xchg std (bad) jmp bound add int cmc icebp daa sbb les pop outsl cmc lcall cmp push sbb enter mov lock dec mov push shll popa imul add adc sub sarb push fs insl out cmc fldenv push adc inc sarb das mov or pop lock cmc pop xchg pop inc cmpsl xchg (bad) hlt sub add and sbbl (bad) fcompl add inc add adc nop mov push or cmp or add lods inc nop xchg subl adc mov mov mov cltd add jl in (bad) and (bad) notl pop pop loop fsubr pop out mov lds addr16 dec push (bad) fstl es adc cmp mov mov clc lahf stos add pop enter int3 dec mov rorl adcb push inc xlat clc add daa xchg js xchg and sub leave dec leave add sbb mov fist (bad) sub add dec mov jle mov fsubl out inc movsb xchg dec sub call pop notb add aaa ret jg rolb aas je inc inc imul aam in sbb sub std in xor sbb je lret fnstcw dec dec pop jle add mov lea daa enter dec fwait add mov (bad) cmp popf mov les push pop iret addl (bad) xor fwait (bad) adc xor push leave push outsl push sub xchg mov sub adc add hlt add jecxz sbb cmovl push loope push inc mov in adc xlat add les fdivs dec js cmpxchg outsl test or and add xor das push cwtl inc not push add int mov mov test or in adc pop bsf dec mov jecxz xlat sbb stc fs or lock arpl xor cmp add shl aam sarl jp fisttp fdivl shlb mov add xchg xor negb test lods jno icebp into test fnsave pop adc (bad) cmp add lods dec xor add pop dec push enter daa xor inc sbb lea pop add xchg popf pop xchg pop mov daa or pop test dec test add dec das loop sarb data16 mov or sti sub ret enter push add aaa scas xchg (bad) sbb add lds push mov fisttpl pop int3 shlb or in adc div mov pcmpgtd dec add jg mov add cld movl lret neg inc enter aam fs add jmp les add dec cmp fnstsw movsl daa pop push mov jge (bad) mov pop les aad or loopne xchg add (bad) pop pop aaa sub idiv push inc dec ret mov add ja sbb int adc je ret (bad) hlt mov test and xor lea cmpsl bswap fnstsw and movsb add sub mov mov add cmp (bad) xor sbb lods mov fisttpll dec cwtl add pusha sub fstpt add insl out xchg fcompl aaa in or dec push lods xor (bad) xor or (bad) sbb push or mov js lods je cmpb rol add mov add por hlt jo pop cmp sbb push call lock add push mov push add test lods pushf adc jecxz xor inc repz orl push xor inc add jp pop cmp pop dec (bad) pop mov rcr (bad) (bad) add add jae mov ljmp je mov dec sahf jecxz cmp fldcw inc xchg inc dec xchg icebp mov test inc loopne adc in mov dec loopne xchg inc inc adc mov pushf xorb dec cmp add fcoml push insb rclb divl add jae inc push loopne sahf sbb xor pusha xchg sbb push sbb pop cmpsb add das inc mov sbb adc (bad) cmp dec loopne jnp add fistp jmp sub ja and outsb repnz mov or adc test ljmp lock lcall push mov add jns clc dec or mov movsl (bad) icebp mov dec test push (bad) icebp pusha test aam xor push lcall push push outsb add pop stos add xchg popf scas add (bad) sbb sub jg jge jb clc add psubq cmp push sar test push sbb xor imul (bad) dec dec sbb js pop insb mov (bad) imul add and hlt shll pop movl jmp sub inc lea push into mov sub loopne gs in mov lock mov cld add add test push lock mov and cmp mov test pop adc decl arpl cmpl lret jbe (bad) xchg mov fstps movsb add insb imul and int sbbl sub and loop sahf sbb jge (bad) movsl jno jns add dec push jb cmp sub mov data16 inc rclb dec fidivl insl sti sbb nop jae loope and add push xchg mov pop push add iret jbe jnp fmuls add pop jns mov xorb cmpl dec add xchg lock fsubs popf aam or push insb lds sub mov and add pop mov or test jae jg xchg sub cld es pop cwtl pop cmp out pushl or ss fstpl cmp cmpb ljmp pop xor push cs push mov test adc ficoml inc in aad sub psubsb stos hlt getsec cmp jge in sbb cmp push jl std xor aas adc mov dec and lcall out cmc jge arpl (bad) fldl2e sahf mov cmp in out es jbe or mov add cmp cmp (bad) adcb add out add xchg cli sbbb xchg cmc popa cmp fidiv add push cmp push pusha sbb adc test and push sti subb fstpl stos cmp fwait add mov cmp rol test outsl xor push add call xchg nop sub push push inc mov mov or jl and or sub cmp cmp mov sub data16 add cmc add popf xor out adc cs mov push mov xchg pop out mov rol push mov add sahf (bad) or ja add push fnstsw enter roll call mov push les icebp test mov gs jo (bad) fildl xor push add pop cwtl add push int or sub loope jns mov test jo insl out add mov xchg sbb out outsb add in inc icebp and push add imul in cwtl or xorl mov insl fistp cwtl (bad) sub jl adc dec add pop stos scas push xchg inc jle shl addr16 dec repz mov jb pop call dec dec inc or xor fimull xchg or mov xorb pop xor inc pop fisub cmc loopne pop clc (bad) lock lods sub popa (bad) add cld add hlt or fs nop pop jne sub add imul add add cmp adc mov orb mov cmc or xor dec icebp add lcall push out test dec jbe xlat pusha cmp lods jae cwtl xor js sub loopne sub fldt cmp sbb (bad) faddl push nop xor add pop or push sbb movb cmc cmpsl stos icebp in imul stc fwait xchg shlb adc adc out mov mov repz sbb imul push dec xchg dec pushf fstl aaa test aas (bad) adc das and (bad) rclb mov loopne cmp xchg jmp pop hlt push ljmp xchg xchg sbb add adc outsb pop nop (bad) movb push pusha fs pusha xchg aaa out mov loopne popa push mov shl sbb jb call pushf xchg fimul pop clc cmp (bad) sarb xorl rcrb xchg add mov jo xchg lds add shl and mov add test pop push test and in add sti shll popf adc (bad) and mov xchg lock in in adc aam sub das pop mov push add scas and lock je je sbb test (bad) jp cmp cmpsl fdivs push add xchg and sahf fcmove or xchg pop lcall push rolb jnp push xadd adc je inc inc jnp pop and std ja add or movsl adc bound mov jo jl cmp pop inc dec hlt cmc add addr16 mov jle fistpl in add inc mov pushf or xlat pop popa mov pop dec pop add adcl sbb xchg push xchg scas pop leave mov or sub mov outsb es add scas jbe out mov mov cmp push hlt test repz xor add mov aam jae jne or mov outsb pop das and sub bswap sub add pop movsb cmp add cmp aas inc xchg call inc outsb outsl and adc jecxz loope dec repz ret add and imulb fs and mov lahf cmp pushf into sbb clc jl jl cmpsb xchg and adc inc lods (bad) das dec xor add add daa jb mov mov jge dec mov push fdivr push scas push enter cmp sbb or adc loop jp xor mov and stos js popa mov in xor jno add add test imul ljmp mov into test repnz in andb dec push inc push jl in sahf into add mov jns dec fsubs xor bound mov jg cmp mov lds cli out adcb mov xor inc xor add punpckldq fwait fs add stc shrb mov cld dec jle add jbe jb dec dec lea pushf hlt push mov mov ret push repz cmp pop ds cmp mov addr16 je je add test inc ljmp mov or xor das push mov adc adc push mov rep add cs add pop hlt rcr add faddl call inc dec insb push cmp andb movsb test cmp add or cmp or add pop push jne add xlat jns pop sbb mov xor or stos (bad) mov xchg push popa inc lea pop dec jl (bad) in nop add ret out xchg xchg mov adc ja or fwait and out push addr16 pop fisttpl cmp and mov adc xchg aas push in daa xor je adc or add rolb outsl gs data16 add loop je xchg inc cs movb xchg add rcr pop fisttpl xor mov pop (bad) xchg add pop xor inc nop dec xor idivb add pop mov sbbl jecxz add out pop xor xchg pop jmp sysret cs loope in pop xor jns add ljmp add sarl in adc (bad) icebp mov push js jnp mov add cmp loopne add call out decb dec lods subb mov add inc xor in push test add inc pop cs cmpsb hlt add or call rcrb and pop jp ret push fidivr lea lahf push js jae add cmp and mov (bad) movsl std xchg jno jl adc subb mov cmp lods mov push out and mov or sbb insb xor fs fmul mov jecxz subb lock jl mov idivl in mov sbb xor push dec addr16 addl dec mov cmpsb cmpb (bad) fcoms mov xchg jp xchg dec enter sbb lahf mov mov mov imul mov faddl mov fs or add push and dec icebp rol mov notl (bad) pop push jnp mov pop push add pusha (bad) ss mov aad out ret jne sub add bndldx iret and or pop lcall mov xchg orb or and iret push push les (bad) sti repnz push test mov inc loop cwtl icebp adc cli (bad) hlt and dec scas (bad) outsb shl or cmp inc call fsubrs add xor add ja add faddl andb xor out flds mov leave loopne call sbb cmpsb les cmpsl test add lea dec add push js add icebp push jb not jg ljmp cli jge loopne jle xor fisubl mov sub or loop cltd cwtd call mov xchg xchg stos daa (bad) xor push jp sub (bad) fisttpll (bad) movsb adc test dec jb adc adc mov aaa add sahf add (bad) adc fimull cli mov inc pusha iret add pop mov psrad add fstps jl fs mov jns or add sub add pop jecxz inc ljmp xor arpl insb add call movb mov add push iret add data16 cwtl xor rcrb mov inc loop pop pusha rcrl popa mov fmuls pushf add pop insb add mov subb pop (bad) sub rcrb (bad) movsb pusha ds and cmpsb mov cmp xor jae add fnstenv push loopne or jae or inc push cli jl dec mov add gs jbe push mov jge es stc add mov aad pushf les test mov das ret and cmp movsb (bad) in pusha popa rcrb aas add ja cmp mov mov mov mov mov movsb in mov push cmp pop insl imul mov add xor mov fcmovnbe ljmp je aas xchg xchg arpl fsubl stos and jg xor and sub mov sbb out xor mov pop jns xorl in ret inc sarb xor pushf (bad) xor inc cmp nop jl jmp enter in add roll cwtl insb in mov pusha pushf inc sbb pushw sbbl adc jnp lock add bound adc push add rorb in adc and sub into les pcmpeqd je or (bad) push sub js inc or dec rorb add sub adcb and add cmp push sbb in in add xor or mov mov or mov add inc fwait mov push pop cmp dec dec movsb and sbb push cmp mov cmp sahf out mov and (bad) rorb push cmp (bad) jae adc xor out or scas add adc add mov popa je push mov adc xchg nop inc dec jp cmp jb loopne add or sub subl or sbb fadds pop fisttp pop js loop mov inc (bad) mov and xorps add arpl add sub add (bad) jns add incb decl aaa ja cmc verr or cs pop lock or mov lahf pop fiadd mov call adc add bound cld sarb loope jo jl lods add dec push jg sub cs mov mov mov mov (bad) les add sbb fiadd out mov push popf bound loopne mov cli pop inc mov add push out subw mov fwait out and add cmp add (bad) xor jne or sub and mov adc adc pop (bad) rcl clts out and cmp add mov add fs sub adc out sbb add cmp push loop add xchg push scas mov sbb cmp rorb and push and pushf or (bad) add add mov ljmp sub out imul and ljmp sub xchg mov jne dec cmp sub lret jge cmp jo fnstcw cltd fs icebp pop pusha test lss fcomps cwtl jb dec add (bad) add push add lret cmp in push jmp sarl mov adc clc pusha out addr16 rclb lods push push fild xchg add aaa out rcll rclb mov push (bad) dec sahf pop rcrb rorb andl pop and cmp add aam movsb test arpl add mov out jns add (bad) push add inc js pop inc mov adc pushf bound js mov mov or add dec lret push inc pop pop xchg decl and xchg les sub dec call pop inc cmpsl and popa loope test cld addr16 push add les rcrl cli mov mov push mov int3 pushl add jle cmpsl add iret add repnz inc fsubrl orl mov sarb mov jne push xchg (bad) xor loop loopne nop in out dec add and and lods jge mov mov cmp lods jnp sbb pop out push shll and pop add mov sbbb test add and dec add loopne rclb adc test orb and push jne mov in ja imul xchg xchg add jecxz jg and pop add fucom clc add dec inc sub iret roll inc inc jecxz cmp in outsl adc das and das pop repz insl xorl sub outsb ret jmp push mov lret adc pop popf inc aam iret add xchg insb push inc mov sub mov jbe pop xor loopne mov (bad) int3 cwtl cmp outsb cmpsb fild js fistl adc push mov push js add xor sub jo ss mov cld pop loop fiadd add les ss or jle in push adc pop out adc mov mov pop inc mov fnstenv xchg pop jecxz int3 jo out pop add les sti and xlat pusha pop fsts or sub fadds (bad) stc sbb add jle scas and movsl int3 test cmp add daa mov adc lret cmp xchg shlb insb inc or ret enter pop add aaa or clc in je sub outsl mov mov push push fildl fisubrl mov aam inc call cmp sub mov fnstcw movsb int3 xchg add pop add sub add adc add and add add add add add addb add add add add add add add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add add add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add add add add add add add add add add rolb add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add cltd add add add add add mov add add or add and mov add pop lock add add add add push jp add add add add add add imul add add add push pop add aam add in add or add add add add add (bad) incl add incl add jecxz add movl add pop add clc aas add cld aas add clc pop add icebp popl add movl add incl add incl add add add add add add add add add add rolb add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add add add incl add incl add incl add pop add fcomip add fcomip add fdivp add fdivp add fdivs add fdivp add fdivp add fcomip add fcomip add rolb add incl add incl add add add add nop add add add add (bad) push aam rcl iret into into fmulp into int rcl shrb (bad) aad iret int3 lret int3 lret rcl dec fnop (bad) ss frstor jecxz loop aam rolb add add int or mov lods call mov fcos (bad) mov decl mov lcall mov jmp mov (bad) repnz mov int stos mov int3 mov vpaddq int3 int pop rcl into inc ror lret xor ror pop fcmovu (bad) or add add lret mov mov mov movsl mov incl mov fdivrp xchg jecxz mov jecxz mov loop (bad) mov fdivrp xorl (bad) (bad) mov incl scas (bad) incl sar lea leave repz loopne mov lds ret jnp mov dec leave mov sub ror sbb rcl or add add enter scas lods lock ljmp aad fs enter fdivr mov fdivr test (bad) test fdivr xchg decl mov incl mov incl mov incl scas (bad) jg (bad) subb (bad) jg (bad) jle fcos jle fcos xorl (bad) test xlat decl xlat call mov into jecxz mov (bad) mov (bad) mov mov ret rol pop mov mov lods lods scas xor mov ror or add add rcl adc mov movsb call stos (bad) ljmp jmp enter ret scas fdivr test fdivr (bad) mov incl mov incl mov incl mov incl mov incl mov incl scas (bad) subb incl scas (bad) jle (bad) jle fcos jle fdivr jg fcos xorb incl mov incl scas (bad) xorb incl mov incl mov incl mov (bad) xchg mov (bad) std pushf mov shl lods mov jecxz rcl sarb mov mov mov movsl mov ljmp sar popa cwtl enter (bad) lcall ret test (bad) xorb incl mov (bad) jg (bad) subb incl mov incl mov incl mov incl mov (bad) jg (bad) subb (bad) jle fcos jge fcos jge fcos jg (bad) xorb incl scas (bad) jg (bad) xorl fdivr xorl fdivr xorb incl loop mov in mov jmp lcall add (bad) (bad) (bad) add mov repz mov iret pushl xlat jmp int3 lcall (bad) lcall (bad) call (bad) lcall sar test fdivr jge fdivr jge (bad) jle fcos jle (bad) jg (bad) jge fcos jg fcos xorb incl mov incl mov incl scas (bad) subb incl scas (bad) jle fcos jle (bad) xorb incl mov incl scas (bad) xorb incl mov incl mov incl mov incl mov incl mov incl mov decl in aam aam ret ret stos test call stos aad outsb movsl aad fs pop xchg ret call ret call ret mov (bad) jl fcos jge fcos jle fcos jl fdivr jge fcos jle fcos jge (bad) jle fcos xorb incl mov incl scas fcos xorl (bad) subb (bad) jle fcos jge fdivr jle fcos xorb incl mov incl scas (bad) xorb incl mov incl mov incl mov incl mov incl mov incl mov incl mov add iret iret iret dec mov movsb movsl decl fdivr insb mov leave lcall (bad) lcall ret lcall ret call ret mov lcall ret movsl sar jl fcos jge fcos jge fdivr jge fcos jl fcos jl fdivr jl fdivr jg (bad) xorl fdivr xorl (bad) xorb incl scas (bad) jg (bad) jle fcos jle fcos jle (bad) xorb incl mov (bad) jg (bad) jg (bad) xorl (bad) xorl fdivr xorb incl mov incl scas (bad) jg fcos jg fcos (bad) mov decl add add loop or lret lret xchg movsb stos incl test ljmp iret jmp leave lcall lcall ret lcall ret nop ret xchg ret pop lcall sar cmpsl sar jge fcos jge fcos jge fcos jle fcos jge fcos jl xlat (bad) jge fdivr jg (bad) xorl (bad) xorl (bad) subb incl scas (bad) jg (bad) jle fcos jle fcos jg (bad) xorl (bad) xorb incl mov incl mov incl mov incl mov incl mov incl mov (bad) jle fcos jge (bad) jp fdivr jg (bad) lea add (bad) fisub lret lret mov mov cwtl stos mov pushl xlat jmp int3 jmp leave lcall (bad) lcall (bad) lcall (bad) call ret pop call sar nop ret mov incl mov (bad) jg (bad) jle fcos jle (bad) jle (bad) jle fcos xorl fdivr xorl (bad) xorb incl lods decl mov call lcall sar scas fdivr jg fcos xorb incl mov (bad) jg (bad) subb incl mov incl mov incl mov incl mov incl mov (bad) jge fcos jp xlat (bad) jp fdivr jle fcos mov add loope loope lret jmp mov call lods (bad) outsb movsb sar popfw lret lcall (bad) lcall (bad) lcall (bad) lcall ret lcall ret call ret nop ret pop call sar lea incl scas (bad) xorb (bad) jle fcos jg (bad) jg fcos xorl fdivr xorl (bad) xorb (bad) outsb movsl incl mov dec jle decl mov dec cmpl incl mov incl mov (bad) jg (bad) subb incl mov incl mov incl mov incl mov incl mov (bad) jg (bad) jp (bad) (bad) js (bad) (bad) jl fdivr mov add fstp fcoml mov ret decl stos (bad) push iret jmp lret xchg vmulsd (bad) lcall (bad) call ret xchg ret pop call ret pop call call ret lods xlat incl mov (bad) jg (bad) xorb (bad) jle fdivr jg fcos xorl fdivr xorl (bad) subb (bad) outsl cmpsb incl mov dec jle decl mov dec (bad) mov (bad) jg fcos xorb incl mov (bad) jg (bad) subb incl mov incl mov incl mov incl mov incl mov (bad) jg (bad) jns (bad) (bad) jnp fdivr jge fdivr mov add ror int scas rcl test xlat ljmp into jmp enter (bad) lcall ret lcall ret lcall (bad) lcall ret lcall (bad) lcall ret call ret mov call sar mov call sar lods xlat incl scas (bad) jg (bad) jg (bad) jg (bad) jg fcos subb incl mov incl mov incl mov call mov aas outsl cmpsl incl mov dec jle decl mov dec cmpl jg fcos xorb incl mov (bad) jg (bad) subb incl mov incl mov incl mov incl mov incl mov incl scas fcos jle fcos xorl add mov lods (bad) jo aam push cwtl enter vcvtsd2ss ret lcall ret lcall ret nop ret xchg ret call sar pop call sar (bad) sar (bad) sar mov incl mov (bad) jg (bad) jg (bad) jg fcos jg fdivr jg fcos xorb incl mov incl mov incl (bad) mov aas jo incl mov dec jle decl mov push test incl mov jmp sar jge lcall ljmp iret (bad) jle (bad) xorb incl mov incl mov incl mov incl mov incl mov incl mov incl mov add jns fnop outsb mov lret xchg (bad) lcall vcvtsd2ss ret xchg (bad) lcall ret lcall ret call ret pop call sar pop call sar mov call mov incl mov incl mov (bad) jle fcos jg fdivr jg (bad) xorl fdivr xorl (bad) xorb (bad) aas jo incl mov dec jle decl mov push xchg (bad) jg fcos xorb (bad) outsb movsl incl mov dec jle decl mov incl mov incl mov incl mov incl mov incl mov incl scas (bad) xorb decl add add into lock (bad) lcall ret lcall ret lcall (bad) lcall sar xchg (bad) lcall ret lcall (bad) call ret nop ret nop ret mov call call call mov (bad) jl (bad) incl mov (bad) jg (bad) jg (bad) jg fcos jg fcos xorb incl mov incl mov incl mov call mov inc jno incl mov dec jle decl mov push mov incl mov lcall mov cmp jns decl mov dec jle decl mov pop xchg (bad) mov incl mov incl mov incl mov incl mov incl scas (bad) jle fcos xorb lock add pop xchg (bad) lock xchg (bad) lcall (bad) lcall vcvtsd2ss ret lcall ret lcall ret lcall ret lcall ret call sar nop ret pop call sar mov call mov (bad) jge xlat incl mov (bad) jg (bad) jg (bad) jg fdivr jle fdivr subb incl mov incl mov incl scas (bad) dec jnp incl test decl mov dec jle call mov incl mov call mov cmp (bad) aas jno incl incl mov dec jle decl mov pop pop incl mov incl mov incl mov incl mov incl mov (bad) jle fcos xorl add pop xchg ret lock xchg (bad) lcall vcvtsd2ss lcall (bad) lcall (bad) call ret nop ret xchg ret call sar mov call call call mov call mov incl scas (bad) jg fcos jle fcos jg (bad) subb incl mov incl mov incl mov incl jp incl test decl mov dec jle call mov incl mov call mov xor xchg pushl arpl incl lods incl mov dec jle decl mov addr16 xorb incl mov incl mov incl scas fcos xorb decl add add vcvtdq2ps (bad) lcall ret xchg ret lcall (bad) lcall ret pop call sar pop call sar (bad) sar (bad) sar mov call mov call (bad) jge xlat incl mov (bad) jg (bad) jg fcos jle fcos jg fcos xorl (bad) xorl fcos jg fcos jg fcos dec jbe incl stos decl mov dec jle decl mov pop mov incl mov jmp sar jo pushl pop xchg pushl xchg (bad) cmp incl lods decl mov dec jle decl mov incl mov incl mov incl mov (bad) jg (bad) xorl (bad) nop mov add pop xchg vcvtdq2ps lcall ret lcall ret lcall (bad) call ret lcall ret lcall ret call sar pop call ret mov call mov call mov call (bad) jge fdivr jg fcos jle fcos jg (bad) jg (bad) jle fcos jg fdivr xorb incl mov incl mov incl mov incl test decl mov dec jle decl mov pop mov (bad) jle fcos xorb incl mov pushl int3 (bad) cmp bound incl mov dec jle decl mov fs leave incl mov incl mov incl mov incl mov incl mov call add add vcvtps2pd lcall ret lcall ret lcall (bad) call ret nop sar pop call ret mov call call call mov call mov call mov incl mov (bad) jg (bad) jg fcos subb incl mov incl mov incl mov incl mov incl cmpsl incl stos decl mov dec jle decl mov pop mov (bad) jg (bad) xorb incl mov incl cmpsl sar cmp cmp incl mov dec jle decl mov push xchg incl mov incl mov (bad) jg (bad) xorb incl mov call add add vmulps ret call sar xchg (bad) lcall ret call ret nop sar pop call call call mov call sar mov call mov (bad) jnp aad xorl (bad) xorb (bad) jg (bad) jg fcos xorl fdivr xorl (bad) xorb (bad) cmp jae incl lods incl lods lcall mov incl mov incl mov incl mov lcall mov incl decl mov dec jle decl mov jnp fdivr (bad) mov incl mov (bad) jg (bad) jg (bad) xorb (bad) jg (bad) xorl lock add pop xchg (bad) lock xchg (bad) lcall ret lcall ret xchg (bad) lcall ret pop call sar nop ret mov call call call mov call mov call mov (bad) jns aam xorl (bad) xorl fcos jg fcos xorl fdivr xorl (bad) xorl cwtl pushl fs gs call mov jle fdivr jg (bad) xorb incl mov (bad) jg (bad) outsb sahf lret (bad) cmp mov decl mov dec jle decl mov je sar (bad) mov incl mov incl mov incl mov (bad) jg (bad) (bad) mov decl add add ret lock xchg (bad) lcall ret lcall ret nop ret nop ret xchg ret call sar mov call call mov call mov call mov call mov (bad) jnp (bad) incl mov incl mov (bad) jg fcos jg fcos subb incl mov incl mov incl mov incl (bad) cmp pushl bound pushl pop xchg call mov jle fcos jg (bad) xorb incl mov (bad) jle (bad) jae sar inc jb incl mov dec jle decl mov dec jge pushl sar xorl fdivr xorb incl scas (bad) xorb decl add add ret lock xchg ret call sar nop ret lcall ret mov call ret lea call call call sar mov call mov call mov (bad) jnp (bad) incl mov incl mov incl scas fdivr jg fcos xorb incl mov incl mov incl scas (bad) xorb incl scas (bad) jle fcos jle fcos xorb incl mov (bad) jg (bad) jle (bad) imul mov dec jle decl mov inc jnp pushl aam xorl fdivr xorl (bad) jg (bad) xorb decl add add ret xchg ret nop ret pop call ret call ret (bad) sar mov call mov call mov call mov call mov call mov (bad) jns aam (bad) mov incl scas (bad) xorb (bad) jg fcos jg fcos xorl fdivr xorl (bad) xorb incl scas (bad) jg (bad) jle (bad) jge fdivr jle fdivr jg fcos xorb incl mov (bad) jle (bad) push xchg dec jle decl mov dec jle incl mov jg (bad) xorl (bad) xorl (bad) jle fcos xorb decl add add ret pop call sar pop call sar pop call call call mov call call sar mov call mov call mov call mov incl scas fcos jle fcos jg (bad) jg fcos jg fcos subb incl mov incl mov incl mov incl scas (bad) subb (bad) jg (bad) jle fcos jle fcos jg (bad) xorb incl mov jmp decl mov dec jle decl mov dec jle incl mov push test incl mov incl mov (bad) jg (bad) jg (bad) xorb incl mov add pop nop ret xchg ret call sar nop ret pop call call sar mov call mov call sar mov call mov decl mov (bad) jle fdivr xorb incl mov (bad) jg fcos jle fdivr jg fcos xorb incl mov incl mov incl xchg (bad) popf lret pushl sar jno sar jno sar jns (bad) (bad) jle fcos jg (bad) xorb pushl into lcall ret jle decl mov dec jle decl mov dec jl incl lods ljmp leave incl mov incl mov incl mov incl mov incl mov decl add add ret nop ret pop call ret pop call mov call call mov call mov call mov decl mov decl mov (bad) jl (bad) incl scas fcos jg (bad) jg (bad) jg (bad) subb incl mov incl mov (bad) jg (bad) jg fcos jl (bad) (bad) cmp incl decl mov dec jle decl mov push scas fcos jg (bad) xorb incl lods decl mov dec jle decl mov dec jle incl mov inc je decl incl mov incl mov incl mov (bad) jg (bad) jg (bad) xorb incl mov add push nop ret mov call sar mov call sar (bad) sar mov call mov call mov call mov decl mov decl mov (bad) jl (bad) incl scas fcos jg (bad) jg fcos jle fcos jg fcos subb incl mov (bad) jle (bad) jle (bad) jle (bad) jp (bad) (bad) cmp incl decl mov dec jle decl mov imul fcos jg (bad) cmp incl scas decl mov dec jle decl mov inc js incl test pushl incl mov (bad) jg (bad) jg (bad) jg (bad) jg (bad) jg (bad) jg (bad) xorb incl mov add push pop lock pop call sar pop call call mov call mov call mov call mov call mov call mov call mov (bad) jg (bad) jg (bad) jg (bad) xorb (bad) jle fdivr jg fcos xorb (bad) jle (bad) jle (bad) jle (bad) jle (bad) jbe sar aaa gs incl test incl incl ljmp lret (bad) jle (bad) jle (bad) jg (bad) cmp incl test incl scas incl stos (bad) cmp mov ljmp (bad) jg (bad) jg (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jg (bad) xorb (bad) jge fcos (bad) mov decl add add ret nop ret pop call sar mov call call sar mov call mov call mov decl mov call mov decl mov (bad) jle fdivr xorl (bad) xorl (bad) jg (bad) xorb (bad) jle (bad) jle (bad) jle (bad) jle (bad) jne sar xor xchg pushl gs (bad) cmp (bad) cmp (bad) cmp ljmp enter (bad) jle (bad) jle (bad) xor xchg (bad) cmp (bad) cmp (bad) cmp pushl arpl pushl into (bad) jle (bad) jge (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jg (bad) xorb incl mov call add add (bad) lock pop call sar mov call call mov call mov call mov call mov decl mov decl call mov incl mov incl mov (bad) jle fcos jg (bad) jg (bad) xorb (bad) jg (bad) jle (bad) jle (bad) jle (bad) jno into pushl pop xchg pushl pop xchg pushl pop xchg pushl pop xchg pushl pop xchg ljmp enter (bad) jle (bad) jge fcos xor pushl pop xchg pushl pop xchg (bad) imul jge fcos jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jg (bad) jle (bad) jle (bad) jg (bad) xorb incl mov decl add add (bad) lock mov call call call sar lea call mov call mov decl mov decl mov decl decl mov (bad) jl (bad) incl mov incl mov (bad) jle fcos subb incl mov incl scas (bad) jg (bad) jle (bad) jl fdivr je sar jo int outsl lahf int3 ljmp ljmp (bad) (bad) jns aad jle (bad) jle (bad) jl fdivr popa nop mov pushl (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jg (bad) jle (bad) jle (bad) jle (bad) xorb incl mov incl mov incl mov decl add add lock lea call mov call mov call mov call mov decl mov decl mov decl decl mov (bad) jnp (bad) incl mov incl mov (bad) jle fcos subb incl mov incl scas (bad) xorb (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jg (bad) xorb (bad) jg (bad) jle fcos xorl (bad) xorb incl mov incl mov add push (bad) (bad) lock mov call mov call mov call mov call mov call mov decl mov decl mov call mov incl mov incl mov (bad) jle fcos subb incl mov incl scas (bad) xorl fcos jg (bad) jg (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) xorb (bad) jle (bad) jg (bad) jle fcos xorl (bad) xorb incl mov incl mov add push mov call mov call mov call mov call mov decl mov decl mov decl mov decl mov push xchg incl mov incl mov (bad) jle fcos subb incl mov incl scas (bad) xorl fcos xorb (bad) jg (bad) jg (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) xorb (bad) jle (bad) jg (bad) jle fcos xorl (bad) xorb incl mov incl mov add push (bad) (bad) lock mov call mov call mov call mov decl mov decl mov decl mov decl decl mov call mov incl mov incl mov (bad) jle fcos jg (bad) jg (bad) xorb incl scas (bad) xorb (bad) jg (bad) jg (bad) xorb (bad) jg (bad) jge fcos jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle fdivr xorb (bad) jg fcos xorb incl mov (bad) jg (bad) xorb incl mov incl mov add push (bad) (bad) lock mov call mov call mov call mov decl mov decl mov decl mov decl decl mov decl mov incl mov incl mov (bad) jle fcos jg (bad) xorb incl mov incl mov incl scas (bad) jg (bad) xorb incl scas (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jg (bad) jg (bad) xorl fcos xorb incl mov (bad) jg fcos jg (bad) xorb incl mov decl add add (bad) lock mov call mov call mov decl mov decl mov decl mov decl mov decl mov decl mov incl (bad) (bad) mov incl scas fcos jg (bad) xorb incl mov incl mov incl scas (bad) jg (bad) xorb incl scas (bad) jg (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jle (bad) jg (bad) jle (bad) xorl (bad) xorl (bad) xorb incl scas fcos jg (bad) xorb incl mov decl add add mov call mov call sar mov call mov decl mov decl mov decl mov decl mov decl mov (bad) jns fdivr ja aad jns xlat pushl aad js aad jnp (bad) jp fdivr jp xlat (bad) jnp xlat (bad) jl fcos jl fcos jge fcos jg (bad) jg fcos xorb (bad) jg fcos xorb incl mov incl mov (bad) jg (bad) xorb incl mov incl scas (bad) xorb incl mov incl mov (bad) jle fdivr xorl (bad) xorb incl mov add push mov call mov call mov decl mov decl mov decl mov decl decl mov incl mov inc xorl call (bad) cwtl (bad) in call mov call incl mov incl mov (bad) jp (bad) js fdivr js xlat (bad) jnp (bad) jnp fcos jns fdivr ja (bad) pushl (bad) pushl aad ja (bad) (bad) jns xlat (bad) jns xlat (bad) jp xlat (bad) jl fcos jle (bad) jp xlat (bad) jle (bad) jg (bad) jle (bad) xorl (bad) xorb incl scas fdivr (bad) mov incl mov incl mov incl fdivp push mov call mov decl mov decl mov decl mov decl decl mov decl mov call mov jmp xchg nop lcall cltd mov movsb pushf (bad) jmp test ljmp mov mov ljmp sar mov mov out mov mov jmp decl mov out decl jmp test loope jnp loopne jle fdivrp xorl fcos jns xlat pushl (bad) pushl aam ja aad js (bad) (bad) js aad ja (bad) (bad) js (bad) (bad) jp fdivr jnp fcos jns fdivr jp fdivr xorb cmc push mov call mov call mov decl mov decl decl decl decl mov incl mov outsl mov repnz pop ljmp ja inc jle dec test call mov (bad) fist or in cmpsl pop (bad) in lods push (bad) out mov (bad) in mov (bad) in mov (bad) in mov (bad) out mov sub jmp mov (bad) fdivl call mov test leave lods test mov scas popf pushl mov sar test mov fdivrp sahf ret in pushf (bad) jmp lcall (bad) jmp pushf (bad) cwtl (bad) ljmp mov jecxz nop mov fdivrp xchg fdivr xchg add push mov dec mov push mov decl mov decl mov decl incl call mov ljmp pushf movsb decl jbe (bad) mov xchg lea (bad) ficoml (bad) in mov sbb cmc lret cli fisttpl (bad) cld jmp add (bad) cli add (bad) clc add push add (bad) stc add push add push add (bad) out add jmp add jmp add (bad) fiadd (bad) dec add cld mov add repz add out sahf push jmp mov roll sub mov jl jmp test cmpl test incl cwtl cmpsl call mov mov jmp aam mov into jmp add mov call mov call mov decl mov decl mov incl mov fs (bad) jmp ret loopne xchg push lcall push pushl test into mov aam ds (bad) xor call mov sbb push fstl (bad) stc in (bad) sti jmp (bad) std out add (bad) lock (bad) lock (bad) out add std out add std icebp add cld out (bad) sti loopne (bad) cli (bad) add (bad) sti loop push mov push jmp xchg pop (bad) fiadd sbb pushl data16 call pop aaa (bad) jp cmp jo inc jmp inc lcall dec call inc incl dec jmp xchg jmp shr jae in add add add mov decl mov decl mov decl mov decl mov (bad) jg aad cmpsl int call jne (bad) jle pop decl js jmp push (bad) mov mov iret mov (bad) xchg ds fistpl xor out (bad) (bad) jmp mov and cmc fbld push jecxz push aam push fsts push fistl neg adc cmc aam push fcoms push (bad) sbb lock push (bad) jmp and out lret daa jmp test xor aad xor (bad) js (bad) mov je jmp inc incl arpl pusha push ljmp push jmp pop call push lcall outsb incl (bad) lock xor push mov call mov decl mov decl mov lcall call (bad) call ljmp jae jne outsb (bad) jle outsb incl jp lcall sbbb (bad) push (bad) mov mov lea rcll aas jmp mov jmp mov xor (bad) out (bad) xor in les push (bad) in mov sub out shrb out enter mov jmp stos xor loope ss fstpl (bad) (bad) inc call cwtl inc inc mov ljmp outsb inc call push incl bound insl popa pop jmp pop lcall pop jmp (bad) call xlat repnz int icebp push dec xchg push mov decl mov decl mov lcall mov mov ljmp jle jb jnp ja jne jg jo xchg decl jge lcall sbbl test mov xchg int3 mov test jmp mov inc jmp mov jmp scas aas (bad) ljmp jmp mov jmp stos cmp fbld cmp jecxz aas (bad) (bad) inc call xchg inc call mov dec dec xchg dec inc xchg push dec test pushl push decl push pop pushl ljmp arpl pop pop popa lcall pushl mov popf (bad) ljmp add add mov decl mov decl mov incl (bad) out jnp lret jge jmp mov pusha jae ljmp mov insl ja pushl jle ja jnp jg ja cmpl jl call jg jmp lea mov pop (bad) mov mov push dec xchg push dec cltd push dec lcall fsubrs dec call xchg dec call xchg dec call lods dec call sahf push dec nop push dec (bad) push inc mov rcll pushl mov xchg jp incl insl pop (bad) jns popa pushl ljmp imul pop pop imul test stos mov add add mov decl decl mov decl mov ret decl mov lcall fwait lcall xchg jmp xchg jmp nop ljmp pushl xchg (bad) xchg cmp jl (bad) jle jnp test incl jl call push mov jmpw pushl xchg (bad) mov pop pushl mov mov pop (bad) mov mov popa ljmp xchg movsb xchg lods xchg imul scas popf outsl lcall xchg outsl (bad) jl push ljmp jo bound lcall jae push fs insl mov in stos into in imul add add mov decl mov decl lods fdivr push test decl scas decl lods decl cmpsb call movsb lcall mov jmp cwtl ljmp xchg pushl incl (bad) mov jne xchg test jg test jp mov ja xchg xchg xchg test xchg xorl mov mov mov scas pushf jno scas popf jo sahf mov sahf lea cwtl mov lea scas mov jns mov jge test test jp jg imul pop push lcall jg dec bound push jb (bad) jns into lcall loopne xor add add mov incl mov aad push cmpl dec jg decl mov dec jnp decl mov dec jp call lods call test pop jp lcall lahf jmp pushf ljmp xchg jmp xchg ljmp xchg incl lea pushl (bad) jg mov addb jle test addb decl addl mov cmp xchg call xchg xchg xchg xchg mov orb pushl nop ljmp xchg incl jp call mov dec imul xorl icebp or add add mov push mov xorl (bad) jg xlat incl scas (bad) jl (bad) (bad) jns aam jbe sar je sar jb iret ljmp lret mov ret pushl mov pushl mov jp mov ja lods ljmp test xchg mov decl sbbl jno xchg pushl xchg (bad) jg xchg incl xchg incl test ljmp lcall sbbl fs mov incl jge incl popf decl test lcall fldz dec enter je mov decl mov jmp (bad) ljmp enter lret ljmp int3 pushl int outsb lahf int outsb mov sar jp aad subl (bad) jp xlat (bad) jg fdivr xchg mov (bad) subb incl mov call mov incl scas int (bad) cmpsl lret cmpsl (bad) decl stos sar pushf mov decl xchg mov ljmp ljmp mov push mov jbe mov jmp mov call mov pop mov ljmp (bad) pop icebp cmc cli adc mov mov cmp stos lcall sar pop lcall sar pop lcall ret pop lcall ret (bad) sar pop lcall sar mov lcall lcall jmp (bad) xchg (bad) ljmp (bad) pushl (bad) jmp enter leave jmp lret ljmp into pushl sar outsb mov sar jge sar jge aad (bad) mov (bad) jns fdivr mov (bad) jp fcos mov (bad) (bad) mov incl scas (bad) mov fcos ja aad subl ljmp add add fucomip imul hlt sub dec jge call mov lcall mov jmp mov call mov lcall mov lcall mov lcall sar nop sar pop lcall sar xchg sar xchg sar xchg sar pop lcall ret lcall sar mov ret lcall ret lcall jmp ret xchg ret lcall pushl (bad) lcall jb enter enter lret ljmp int3 pushl ljmp sar scas leave in in repnz test mov xor fwait decl lods decl lods decl lods call stos decl scas decl decl scas decl mov push xorl push test call mov dec (bad) mov push xorl pop mov call call lcall jmp mov call mov jmp mov lcall sar pop lcall sar (bad) sar xchg sar pop lcall ret pop lcall ret xchg ret pop notb int3 in (bad) (bad) call cmp lcall dec xchg cmp incl mov (bad) aas outsb mov (bad) cmp (bad) cmp (bad) cmp lahf incl lahf incl mov incl movsb incl movsl incl incl incl test decl stos decl lods call scas decl lods decl scas call mov pop xchg call mov dec jle call mov push test dec (bad) mov push xorl push test lcall mov decl mov popa nop rcr mov add out icebp insl test inc js sub mov cmp (bad) cmp jmp mov lcall mov pop mov decl stos decl test inc ja incl mov (bad) ds popf incl popf incl fwait (bad) cmp lcall imul (bad) cmp (bad) cmp mov incl lahf incl mov decl mov incl cmpsb incl test inc js incl test inc jns decl lods decl lods decl lods decl scas incl lods pushl shlb add add (bad) (bad) cmp es jg adc (bad) cmp call (bad) ljmp (bad) out xchg ret xchg shl xchg shl xchg mov loopne mov (bad) test sar jnp sar jne lret sahf (bad) ljmp ret jmp mov lcall mov push test decl test decl movsb incl mov (bad) cmp insb pushf (bad) cmp (bad) cmp (bad) cmp (bad) cmp (bad) aas insl cltd (bad) cmp (bad) cmp pushl addr16 incl mov pop (bad) (bad) call aad call jmp push (bad) decl shl xchg mov jecxz xchg mov jecxz xchg shl xchg shl xchg ret xchg shl xchg ret xchg shl xchg ret out xchg ret out xchg ret cwtl (bad) cwtl (bad) jmp lcall ret out cwtl (bad) xchg (bad) out xchg shl nop mov loopne mov (bad) xchg (bad) (bad) jge sar jbe lret mov ret ljmp sar xchg mov lcall mov push subl stos (bad) mov and add add stc sti jno stos (bad) (bad) mov jecxz mov decl mov loope mov decl mov loope lea (bad) (bad) mov loop (bad) mov loope xchg mov loop xchg mov jecxz xchg mov loope xchg shl xchg mov jecxz xchg shl xchg shl xchg (bad) out xchg ret cwtl (bad) out lcall lcall (bad) call call jecxz xchg mov loopne xchg mov loop xchg mov loopne lea ljmp add add (bad) pushl out stc pusha loope imull in idivl out mov loope cltd ret fsubr cmpsl mov aam ret jmp fsubrl int call lahf (bad) out sahf (bad) out popf (bad) out fwait (bad) cwtl ret jecxz xchg shl lea decl mov (bad) lea loop (bad) mov loopne lea (bad) mov call mov loope xchg mov loope xchg shl nop mov loop xchg mov loopne xchg mov jecxz xchg mov loop mov jmp icebp idiv add (bad) decl out hlt cli and lock cs idivb aam hlt inc enter mov fldz data16 divb in or icebp mov fdivp fwait mov aad mov shr les enter lret mov (bad) in fwait (bad) in cltd (bad) in cwtl ret xchg shl xchg ret xchg ret in xchg mov loopne mov loopne mov loope mov loope mov ljmp add add fdivp add int add idiv std sbb repz and in clc xor call hlt dec (bad) fdivp push mov shr insb (bad) fcomip ja jecxz test fdiv xchg mov aam stos lods iret ljmp (bad) in xchg mov in mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) push add (bad) (bad) (bad) incl add (bad) inc add (bad) (bad) incl add (bad) incl (bad) incl add (bad) incl add add add add add cld add add add pop add add clc add add add pop add add loopne add add add add add rolb add add pop add add addb add add pop add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop incl add lock add add (bad) add add add add add aas incl add lock add add jg add add add add add (bad) incl add lock add add (bad) incl add lock add add (bad) incl add clc add add add (bad) incl add incb add add aas (bad) incl add incl add add (bad) incl add incl pop (bad) incl add jmp add add add incl add push add add add incl add (bad) clc add add add incl add (bad) incb add add add add add incl add add add add add (bad) inc add add incl add (bad) (bad) (bad) (bad) inc add incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add dec dec add add and mov add add add add adc adc add add sub add add add add add adc adc add add sub add add add add add adc adc add add sub add add pushf add add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add add add add add add add cli add add add je jb imul inc add insb add dec add data16 add (bad) add add add add add add add add bound xor add sub add add inc add insb add inc add jae arpl jb imul imul add add add add add imul push add jb jae imul add add xor sub and xor sub and cmp sub and xor add add pop add add insl add imul add arpl jb imul add inc add je outsl add je and jbe xor and push add jb imul cmp and xor sub and xor sub and cmp sub and xor add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or mov cmp jae gs bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds je jne je outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or and arpl imul and and cmp gs gs gs jb jbe insb gs or and and and gs gs gs js arpl imul insb and gs cmp outsb jbe imul and inc arpl jae cmp jae and cmp jb jno gs gs js arpl imul insb ds and and jb jno gs gs jb jbe insb gs or and jae arpl imul cmp je jne je outsb outsw ds fs outsb fs arpl or and gs outsb fs je jae gs bound or and and jae gs bound fs je je and gs xor and outsb popa insl gs jb jae data16 push imul inc outsl insl insl outsl outsb sub jb insb jae and jb imul xor xor xor and addr16 addr16 jo outsl arpl jae jb jb push je jb cmp jo bound dec gs outsl imul and xor xor xor arpl xor ds popa jae gs bound fs je je ds and fs outsb fs je jae gs bound or das fs outsb fs arpl or jae gs bound push push push call int3 pop mov inc sub sub add cmpb jne movb mov push push push push call add mov pop pop ret push mov push push push push mov mov shr mov mov test je xor add add dec jmp pop pop pop pop leave ret call stos xlat or mov push mov imulb cmp add dec ret mov imul adc xchg jge movsl arpl sub mov xor pop push subl mov add add sub mov sub and sub shl dec xor xor xor sub push decl pop shr shr and xor mov mov 