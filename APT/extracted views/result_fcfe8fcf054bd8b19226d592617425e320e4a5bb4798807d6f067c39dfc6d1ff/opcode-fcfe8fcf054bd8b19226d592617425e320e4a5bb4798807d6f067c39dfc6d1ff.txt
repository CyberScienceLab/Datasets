ficompl mov aam loope (bad) push rcll inc inc mov jb dec jae ja mov pop fmuls push pop insl les (bad) inc js cmp adc cld arpl mov sub (bad) stc out enter fcompl dec fcompl rep pop leave sub repz loop sbb dec jp daa in mov aas inc loopne pop xchg das pusha dec out nop xor pop das push push adc les mov (bad) or (bad) out scas andb pusha (bad) xchg and xchg fbstp xchg pop dec xor cwtl pushf mov lea jbe mov inc mov dec and psrad mov (bad) mov popa lcall outsl push jne inc jmp xor jecxz (bad) pop sub popf inc loopne insb pop jo xor js js pop mov pushf bound popa es xor pop fsubr push add ljmp push repz mov push mov mov push fstpl cwtl cli sub outsb mov lret fistp mov sub xchg xchg push sbb and lods fs push mov loopne inc sbb jo sbb out dec movsl out loopne push leave add lahf mov jns cmpsl mov movsl jecxz push inc fcom test scas aad sahf insb into push adc push mov pop in dec inc pop or adc dec icebp cmp mov xchg dec and lock mov cmp mov int jae add je mov jae cmp iret jnp dec rcll dec xchg push sbbl sbb inc push cmp sub cmp dec mov pop sub (bad) xor xor push push fwait cmp nop xchg pop js sub mov decl cmp rolb popf push lods imul imul inc jnp adc enter fmul mov sub cmp or imul pop mov mov dec loop cmp mov xor push jne adc dec fldcw jb fs sbb gs repz or repnz jae (bad) jmp jo in sub lret imull jge jle cmp imul stos es in je test fs iret (bad) jne test sarl sub stc pop stos jmp push fs inc ljmp cmp hlt mov lock add cmpsb iret adc mov insl inc mov jbe cmp cmp imul mov fbstp jb fwait bound lods fsubrl push fldl mov jno mov mov mov cmp mov imul cmp movsb popf sub mov mov push xlat idivl xor sti (bad) xor xor pop in cmp dec pop cmp stc xchg cmp add clc ja roll xor push and inc push mov rclb cmp out flds and imul les cltd rorb mov cwtl lcall iret scas negl dec adc loop imul and hlt nop std shrb push xchg and add push mov sub arpl adc test out rorb push mov dec outsl pop nop xchg push push inc sbb mov aas ja in sbb pop inc pop adc add xlat push call lahf fld or divl sti sub or sbb aaa xchg adc orl jmp push ficompl xchg pop jo dec jns push pop cli xchg nop push cmp nop pop jae pop pop jl ljmp loopne sbb pop push and test mov sbb loopne mov push sbb adc aam inc mulb mov fnstcw jge imul mov xor iret shrl cmp sub mov aaa outsb ds pop jb hlt and mov pop data16 cmp and cmp movsl xchg cmp xchg inc cmp rclb (bad) mov push pop inc jb add lahf stc sub rcrl jb xor cmpsl test sbb adc into call jae (bad) ja dec jb mov (bad) mov and aas nop lcall loopne nop fmuls push dec dec dec inc mov (bad) xor sbb cld inc ss xor add sbb push leave sub ljmp imul jb sub mov adc divl mov mov sub aam push cmp sbb cltd cmp fdivrs aam dec mov cwtl addr16 mov inc pop mov cmp inc into xchg pop cmp dec shrb xchg push cmp popf mov mov sub mov push test imul mov outsl clc popf cmp jl mov mov test ret je (bad) mov and pushf mov push fnstsw cmp insl inc imul sub mov aad movsb sub xor jb cli sub push sub dec and cs repnz sub movsb shl push cmp mov loope pop and fstps lods jb add aam xorb jl sub cmp insl xchg gs pop jae xor movsb aas sub xor cmp push ljmp aas sbb loopne cmp cmp repz shlb push aad jb scas imul pop mov imul jle sti je cmpsb jge out idivb mov dec lock test mov xor lcall enter or xchg adc add fild xchg inc add push pushf es pop sbb xor sub sbb push lds mov pop mov (bad) mov cld dec sub cmp mov icebp mov leave add xchg nop pop (bad) pop cmp sahf outsl mov sub iret mov dec mov pop push ds xor aas mov and mov push sbb enter ds cmp movsb mov xchg adcl ud2 adc cmp sbb addr16 movsb jmp loopne xor pop (bad) xor cli fistl adc stc jno dec push or nop pop jp pop insl cmp call iret xor stos adc dec adc loopne icebp mov stos pusha and cmpb daa jmp ljmp loopne (bad) (bad) jecxz or repnz push hlt or rorl inc gs mov cltd xchg push push je push jmp adc mov test es orl xchg (bad) bnd addr16 mov mov jae adc and fmull pop mov and jg mov repnz pop pop mov aas sarb scas rol or bound daa aad push rcrl mov (bad) jmp (bad) dec push aam jmp clc mov jo (bad) lret data16 pop adc cmp inc sbb push call nop xchg xor rolb int3 mov pushl jecxz sub jne pop ja mov (bad) enter mov pop js repnz pop adc in adc fcoms testl push pop xchg pop cmp scas mov push xor mov and inc inc imul mov pop pop lock inc call mov repnz push lahf xor jecxz xchg test sbb lock scas sbb cmp in mov jnp int cmp xchg movsl sbb testb lcall stc push and add sub bound cmpb les daa out mov adc or mov imul push cmp aad mov jo in adc mov push ds insl cmp jecxz dec xor pop pop fsubl mov cmp popa (bad) ss je jne insl insb mov je pushf sbb outsb push adc cmp ficomp push nop sub dec dec pop xchg push and xchg sti sub cmp inc ror push add test ja pop xchg scas sub mov stos mov sub cli scas dec mov mov mov inc add adc xor test aad inc loopne push push jle mov mov clc push xchg cmovs sub aas add sbb push fs push gs push xor push int and movsl push xchg movsb push sub cmp jmp imull jmp cmp outsb jo push imull mov cmc xchg inc sbb mov mov pop adc push xlat sub fistpll jb setb cmp movsb arpl dec and lock push test mov cli out push dec and mov les sub mov imul sbb cltd sub idivl sbb repnz out imul push divb pop mov push mov pusha icebp jle lcall or outsb xor mov ss mov scas pop push icebp mov inc xchg pop fwait rol cmp cmpsb iret adc cli sahf (bad) pop cmp lds in jbe pop andl pop test std mov jno (bad) fistpll cmp bound pushf pusha adc cmpsb (bad) clc lock loopne dec dec mov inc jl sub (bad) dec scas cmp dec pop cmp pusha std pop inc ret cmp les (bad) jnp xchg aas inc loope shrb xor pop subl xchg sar cmpsl sbb sub ret xor sbbb rorl pop aad or push lock int pop xor enter (bad) mov scas and lret ja (bad) ss push notl xchg push pop xor mov jge enter cmpsb je and and fsin push repz pushl xor test scas shlb xor inc mov neg fdivs cld data16 rorb aam or (bad) xor stos insl push mov sahf icebp addr16 (bad) nop pop xor out jo jmp mov andl cmp xchg in inc fucompp add (bad) push push scas mov (bad) pop leave dec dec jns imul xchg add aaa pop add push mov jns fnstcw not rcrb in das and ja jge nop (bad) jns or sbb jecxz std push lea js notl sbb repz push sbb push cmp insl pop xchg sbb cwtl push dec mov pop lock mov ds pop test aad mov mov jl leave jl sbb popf push outsb pop pop mov inc pop mov and xchg pop add bound cwtl sbb fwait mov ds scas pop cld dec test xor mov pop lods push je cs sub in pop push push xor dec xchg pop aas scas shll fisubr sub mov jl adc jmp sbb inc insl jnp outsb pop xchg mov (bad) jbe mov inc cmp test xchg popf popa hlt sbb cmc or pop xor arpl pop dec scas ljmp addr16 imulb lods sub xor stos insb and addr16 (bad) and icebp fs fsubs js mov jb pusha jg push push sub mov aas mov cli push and pop loopne fs rcrb inc add dec mov adc mov aas fsubrs inc and inc mov mov mov mov jg sub push push in adc sbb data16 adc add adc cmp pop and insb testl and inc repz adc fcmovu cmp pop inc js jp cwtl xchg lcall mov sbb out mov pusha mov daa push dec cmp mov pop jle test dec mov dec mov ja pop (bad) pop pop ret sub jne fldcw dec mov jnp stos fistpl pop insb and dec test pop mov pop xchg clc pop sbb in add imul and or daa adc pop jle cs and cmp mulb jae jecxz insl pusha repnz clc push inc add cmp jl mov push mov cmpsl or inc test adc or jmp jge insl shrl jb test add jo sbb (bad) push pop mov jp xchg inc jl sub mov push movsl stc imul push dec inc lcall daa and xchg mov jae mov jno jo test cmp push mov sbb dec out outsb or mov cld mov stos xchg xchg jae dec cmp or and (bad) pop jne cmpsb int mov (bad) enter adc aas pop jns,pt int in xchg dec cld call (bad) mov loope pop mov inc sub lds add mov pop jae out data16 in mov test out loopne scas and lock sbb (bad) cwtl dec loop stc xchg in dec sbbb jnp fimull and in bound dec dec jnp pop sahf xchg lcall insb sbb cmp pop call rcr lods bound sbb fmull inc pop pop (bad) mov mov test and mov sbb sbb cmp mov lret aad mov sbb aas dec inc adc cmp pop shr rorl scas mov cmp cmovo add dec jmp leave out movsb xchg (bad) (bad) inc pop sub xchg add (bad) mov dec pusha push sbb lcall popa int3 aas aam mov sbb pop sahf int3 lret popa and jns sbb (bad) xor mov push cli pop jo jb inc imul dec mov hlt xchg icebp mov mov cmp cmpl pop dec adc jb sahf (bad) ret or jns ret dec pop ds or loope mov cmpsb fucomp (bad) das stc push inc pushf dec sbbl hlt cmp (bad) sub stc jns lods xchg cmc fistp sarb or and out test out loop,pt push test xchg mov jns pop mov jno mov sti mov repz fsin std call jecxz out test mov inc mov aam dec in mov icebp fbstp cmp adc mov and mov cmp lock or (bad) stos test mov (bad) jo js adc cmc xchg sub sbb inc icebp fstpt loop neg pop jle jae sub push push jmp xchg add mov xlat fild lahf out stos mov inc clc movsb dec fdivr mov mov mov mov movsl xchg in out int mov add adc jp push gs dec (bad) imull sti mov cmp cmc out outsb mov or scas push (bad) sarb mov repz pop and jnp mov cli cmp cs sbb inc pop es outsb (bad) xchg dec imul or enter (bad) mov inc and xlat jl adc mov jne sub daa mov xchg shrl in pop insl rcrb jl sbb (bad) ljmp sbb leave out repnz imulb mov lcall adc pop jl pop in jb jo mov out out xchg lods jecxz adc sub push and mov fisubrl loop cwtl xor xchg test mov push stos stos mov mov and add mov push lret mov cmp fdivp inc xor ljmp jne sti js and mov mov xchg call add lret mov and cmp leave inc sbb mov mov test loop fsubrp out push outsb fldenv ret cmc adc mov xchg in stos pushf (bad) (bad) mov ret shrl push mov ret mov sbb jo inc cltd sarb xchg mov pusha lods dec cmpsl hlt add test sub ret mov mov pop mov dec imul ret stc jno out dec jne add add lds mov and mov mov dec sbb mov pop fstpt xchg insb xor lret mov and nop add fnstsw je lods inc ljmp push (bad) iret shlb push sbb (bad) repnz mov and rcr inc add stos lcall gs pop mov movsb inc sbb cmpsb add pop (bad) in lahf inc push cmp sub dec loop dec mov orl popa mov dec xlat ret or mov mov pop or xchg dec jno cmp or cmpsl (bad) pop js or mov pop xlat jo outsb cmp mov loop ss js frstor pop aaa sbb and (bad) fcmovnbe jmp out xchg fcmovbe sub sbb or jmp imul sti mov cmp or test movl add sbb xor push daa cli into mov push fwait sub daa mov dec xchg jp mov push in loopne je xchg shll push inc mov loopne dec (bad) jg arpl out outsb cmp dec ljmp mov ds sub mov or or jmp test std pop lahf jp mov mov sbb pop lock mov jo sbb repz iret pop mov push subl (bad) pop aad and push push loopne cltd and add aas inc xorl and in lods mov imul scas movsl sub pop into or push push mov sub mov push mov fcompl outsb pop in pop sbb popf hlt (bad) or pop pop leave or mov dec pushf leave xchg int pop mov jg insb dec push cld push aas repz dec sbb arpl or dec lret aaa jns xchg mov mov into inc or cs mov or fs mov test jmp cltd (bad) shrl jno mov cmp dec insl sarb ret mov cli xor lahf fidiv mov mov pop rcl (bad) xor jbe jg pop divl push xor mov jmp idivl (bad) jmp or mov pushf cmp jno pop in adc sbb or lock add mov fisubr pop ret pop cmp and mov inc mov jp lods or notl mov add (bad) (bad) fldt fwait jne cmp dec aaa aas pushf mov mov out in sbb add or shr jb xchg mov scas pop lock and jg mov add scas jg es movsl sub mov add aam mov daa pop and pop dec and mov nop jl pop mov jnp cwtl scas mov mov fisttpll movb push lcall fmuls fs repnz popa out mov leave pop test mov ja out mov mov sbb fs jae pop fstps jp and push aas sbbb jnp out xor sbb fiaddl dec fisttpl inc lahf jecxz and pop das add aad je cltd dec push js int3 mov sub ret insb sbb imul mov xor lods dec insl out aad dec fwait push lea cmp push xchg jns test cli sahf inc rcrb rorl adc cld push dec wrmsr call sbb push dec jae mov ret push test pusha jbe push jmp movsl mov dec xor stos cld out sbb movsl notl mov xlat stos pop cmp adc adcl nop jg sbb pop enter scas lds cmpsl outsb dec mov movsb scas push mov arpl jae mov jo sub push dec fidiv pushf pushf mov sbb push mov shrl dec jnp push (bad) in int mov stos shll (bad) mov xor inc loopne cmpl mov add dec mov inc cmpl pop mov and push sahf dec ds pop jge fcompl clc sbb in es sub sub xorl and lods insb inc mov push sbbl mov ljmp mov lds (bad) fcomp push popf cbtw insl negl cmpsb popf les test stos mov xor xchg rcl repz test arpl jecxz iret pop (bad) rorl mov lret sbb mov int inc mov outsl or jmp fnstenv out xorb cmp call mov mov sbb call inc inc inc loope jl push aaa push jbe jp out jb mov rorl pop fdivs js shll (bad) lock bound lret jo push xor sti xor push push mov andl aad in loopne mov jne mov xchg jecxz push xchg popf int mov or mov lods das ret into and lahf and in add mov loope dec mov mov ret mov sbb vpcmpeqb popf mov popf xor push lea and lret (bad) ja loopne pusha fsubrl dec popa cs test xor rorb mov dec cs or hlt ds sbb mov push xor fist in cmpsl enter (bad) data16 cmp ja xchg subb out jb jge outsb and cmp inc inc cmpsl add fcompl lds inc dec push mov dec sti cltd jp aas xlat xor out dec negl scas xchg (bad) es lret inc jo popa imul pop lods orps fisttpl push push fsubrs fildl mov gs enter cmpsb xor push ds stos adc (bad) adc insb xchg inc sbb dec jae mov mov divl nop sbb in mov push dec data16 pop xor xchg insl mov in xchg pop push popa shrb rcrb sbb adc pop sbb sub sbb pop loopne lock in xor ljmp cmp sub and outsb push (bad) mov fs inc dec sub enter cmp call cmc sbb fs and cmp aaa ja,pn or nop inc jnp loop je push addr16 movsb mov pop mov loopne pop and sub dec leave test xchg lods scas mov push ljmp adc (bad) hlt movsl bound cmp jns sbb mov pop push jl loope,pt sub pusha stos push int lret stos adc scas popa push jp outsl test lcall push and aas jge xchg inc aas lods add lcall fistp mov popa (bad) mov or mov push imulb popf pop fs adc js (bad) jbe notl sbb fstl or xor mov nop inc xchg cmp cmp ds nop call push or jns dec sub pop push dec mov pop mov fmul mov fdivrs cmp mov adc test shll push lock rcrl and cmp ret shrl push lock pop mov inc add lcall mov test ds js mov arpl out xchg push lahf (bad) je xor scas sbb pop mov cmpsl cmp mov das sbb nop pop jo rolb sub pusha ds xchg imul and push fistpll ror in adc add push mov push lock imul (bad) lock mov lahf push inc std rclb xchg ljmp fistl mov jnp int sub jp inc adc ds push gs repnz cmc std cmc jno sub push das je pop jne sub or jle cmpsb sub das sbb ljmp mov insl js xor mov fs pop pop cli faddp mov jae sbb daa enter xchg lods popf std lods shll xor push mov (bad) mov mov xor push fbld jl adc cmp and insl (bad) scas aaa aaa dec cmp lret add repz pop pop or mov jl test lret pop out nop push sbb (bad) xchg sub scas inc sbb lret arpl cmp and cs leave jno pop lds pop sahf push push mov js mov or hlt lcall mov das push dec mov cmp jb pop jns dec dec idivl mov dec les inc push movsb mov dec adc fsubrs aaa ja xor mov push sarl mov push (bad) arpl lcall repnz add (bad) cmp pusha xorl lods mov add outsb mov sub jl insb in pop mov jmp (bad) xchg testl rcll inc hlt sub cmp sbb insl test jg aaa dec les les fcomps push imul cmp cmp lock adc fdivs dec mov push orb push notl add aaa rorb cwtl push popa pop test push and inc and gs data16 mov repnz adc pop mov mov aas inc and dec push push pop ja pop sub and inc mov hlt call into outsl push xor fsubrs ljmp push adcl aad push das cmp jnp movsb int loope scas or inc push dec movsl sbb push in push outsl or jnp push and mov stos cs insl (bad) mov sub movsb (bad) aas pop call add in and sbb inc dec cli mov scas int imul lods push ss or dec mov pusha cmp ljmp scas lock push xor add dec ror jo nop stos into jb mov test adc dec repnz push fcoml dec sahf inc fdivrs sub test lret mov jo cld adc andb lock daa and xor scas notb leave jnp add (bad) cmp cmp nop mov cmp movsb push sbb fisttp push imul jb (bad) adc push add lods sbb xor mov add pop mov sub mov pop xor mov dec push cmp sbb sahf jae push mov pushf mov bnd add xchg nop jb push mov pop fisttp xchg insl cmp cmp rcrl sub add mov jo cmp dec repz sub lock sub adc jno adc scas sub je push outsl mov and aas pop mov mov out sbb cmp mov sbb mov sub mov adc cmp jae,pt movsl test addr16 cmp sbb ds nop test lock xchg cmp aaa cmp xor mov orl and jo mov lcall jle (bad) hlt sbb push jl lahf in scas and mov lods lahf and pop movsb dec or movsb jns push ret lods pop fnop dec cmp push enter push inc mov inc push dec sbb cmp addr16 subl aaa insl push mov cmp xor pop hlt cwtl scas fistpll adc cmp push mov lcall xchg lock inc repz sbb jno inc jle jae negb mov xor or dec fstpt insb dec sbb hlt stos or lods nop adc cmpsb push adc or aad cltd add loopw hlt pop (bad) aam sbb xchg pop adc sbb inc inc inc int push sbb inc sbb out jns pop imul adc (bad) push lods or mov lods push icebp mov push sbb mov mov (bad) or xchg fbstp (bad) repnz jo inc sbb xor pusha sub stos and roll or push cli lcall mov out dec (bad) cmp sbb jge sbb sub outsl scas test enter cmpsb ror stc inc or (bad) (bad) enter sbb or pop jmp push jl call or into nop or ret sub mov dec mov xchg dec fwait xchg (bad) jno enter dec add dec int3 movsl (bad) repnz aas sbb movsl icebp sbb nop sbb sahf js into push jecxz pop sti repnz dec decl scas mov mov lock xor and jae rolb sti adc mov jmp imul xchg rorl sub adc int pop xchg add movsl (bad) xlat sbb pop dec ror sub mov xor scas inc dec (bad) gs cmp std or xor pop adc and lea mov push add dec or aas jl pop sub rclb sub (bad) or or cmp and daa push lgs jg fdivrl jnp mov cltd enter pop add (bad) dec inc sub or mov add iret pushf mov push mov jo sub dec daa movb lods loop pop mov cmp jnp add dec cmpsl stc adc dec movsb or dec mov sti std cmpsb mov fbld (bad) jp sbb and scas mov xor sbb jmp popa aas push add call push jne inc imul jp mov mov add mov pusha pop push jmp pop xchg in lods lahf xor lods and sub xchg mov (bad) push push cwtl sti inc mov inc jbe or inc cmp leave inc jmp cmp clc stc pop dec jmp inc call jne sahf sbb popa mov dec aaa (bad) xchg or xchg mov test icebp (bad) scas push mov jno push insb cmp aaa jl fdivr or out sbb mov push lret inc rcrb jnp je lock cwtl popf push movsl mov ret aas xchg cmp pop mov dec push lea lcall xchg cmp outsb mov xchg fxtract mov or cltd cmp dec pusha or leave outsl js add addr16 add imull sbb lock dec (bad) cmp addl loop inc xor sbb jo pop xchg or gs cmpsl mov (bad) mov data16 mov jmp icebp sbb xchg sbb xor gs push outsb pop lret ret cmpsl inc movsl sub or (bad) aaa (bad) inc dec push insb jbe or stos sbbb je int3 xlat pop fild mov and push cli rcrl sbb out jmp rcrb bound mov pop pop add xchg push bound mov mov fwait inc mov in mov addl sbb lret cwtl mov jp mov iret (bad) pop jg mov or ret xor pop icebp adc cltd jne mov ja jb cld jg push enter cmp ja test fs test aaa es and jnp insb hlt push nop divb fs push or fisttpll dec nop notb dec pop mov adc mov inc sbb sub movsb rolb es pop bound out ror or mov ret pop (bad) sub or stc sbb das or mov (bad) fs lcall push sbb cltd clc test push inc pop and movsb or (bad) aaa mov cli and out mov fiaddl adc sbb sbb mov push adc je fmull int3 pop sahf (bad) je sbb push dec arpl stc ret clc mov and jbe inc push bound sar add js sbb insb inc pusha add adc dec inc adc fdivs add les mov in xchg sahf or pushf mov (bad) clc (bad) lret xchg dec pop pop pop addr16 mov push ficoml sub push mov adc cli insb shlb sbb cs scas gs ret arpl iret sbb pop dec sbb imul cmpl jbe and or fs xchg or pop addr16 pop (bad) gs test js push repnz xor fwait pusha ret xchg imulb inc adc sti pop arpl in (bad) push pop cmc hlt mov les ficomp xchg cltd jbe hlt mov pop imul pop (bad) sahf sbb push lea sbb pop aaa adc sub inc xchg or xchg mov lahf adc add jno jl xlat pop jae pop xor mov xchg mov dec xchg mov test push mov shlb mov lahf fs dec adc ss fsts stos test xlat mov in out ret scas or lods lcall aam (bad) push xor inc pusha cmp cs repnz mov imul xlat dec push popa and lds jmp xchg stos mov fcoms push shrl xor stc fsts pop lret dec mov inc pop or pop jo (bad) leave xor jecxz pop push (bad) mov lods je push imul rorl in das faddl (bad) movsl mov cmp lahf vmread add add mov (bad) ljmp dec mov mov popa push cmpsl and jge pusha add xor mov dec leave fbstp mov jg mov aaa das mov adc pusha inc dec mov inc fisttp fisubl jb inc divl nop xchg fcomps fistpll addr16 lret sub fiadd lcall pusha or dec cmpsb repnz loop xor mov data16 inc push movsb mov lret fildl mov pop dec mov jo sub and xor pop call std xchg movsb sbb inc cltd or loopne pop mov pop mov es jne iret pop mov scas dec fwait mov adc sbb (bad) negb sbb jge and js mov in rorl loopne in mov daa dec mov nop int3 pop xchg in pushl es inc ret sub push inc insl outsb daa in add adc imul sahf mov ret clc das test ss mov (bad) icebp pop sub inc cli scas sbb (bad) xor inc aas aaa mov pop sub add or (bad) faddl xchg sbb xchg mov std jecxz jno mov sbb jbe mov sbb jecxz movsb movsl sbb inc and fidivl out and int3 enter fildl (bad) mov nop dec cmp lcall jg sbb hlt lret fistpll jg (bad) mov mov fs cli add insl stos cmp cld hlt pop inc lea jg enter xor jle push and repz sub jns dec cld pop push dec pop pusha push cmpl scas inc dec inc pop fisubl mov xorl xchg flds es dec movsb loope pop inc inc mov add sub xor push popa mov adc xchg mov sub mov sti pusha pop fmull pop flds shll adc mov insb sub daa lea out xor ja sub mov sub push outsl les lret push ds jns mov ret or fadds push pop fs (bad) fadd or xor aas jns out insb xor repz cmp outsl push movsl sbb lahf sbb fistp push adc push xchg add cld call xchg arpl dec inc mov (bad) push mov mov stc dec out jo in rorl ja into mov (bad) pushf fcom sbb roll in jb out sbb jno gs jbe lods push jmp xor push ja xchg adc cmp dec icebp cwtl ror mov add pop popa or repnz mov mov hlt repz es sub push cli lret mov cmp insl and or out insl shl or test iret inc pop or out nop sbb dec in adc mov aaa add add insb pushf rolb sbb pop stc mov mov push add jns mov xlat fs imul xchg fdiv inc dec jg (bad) push and jle cmc in aas mov or lahf test sbb mov pop mov adc xor cmpsl sti mov dec popa gs popf das outsb mov outsb es aad xor and aas inc iret pop xchg dec lcall incl rorb push mov mov (bad) cmpl dec scas cld in mov sbb jmp arpl inc pop xor lahf fwait xchg sahf gs sarb mov adc jns insl sub mov pop mov inc sbbb iret mov cwtl cmp daa pop in push call xor in mov imul pop cmp lods fsubs (bad) lods push fs cmp jbe push mov dec lret icebp push dec push aaa sub (bad) mov out cmp xor sub out (bad) xchg cmp lret and pop xchg mov and mov call dec adc loope enter out push jp push xor loopne lock dec pop mov test cmp js sub push pop sarb push dec das cmc pusha fstps mov aad sbb inc movsl cmpsl mov into mov mov mov push inc scas cmp mov and mov adc (bad) mov lds dec add outsl out pop ret in xchg mov ror lds je imul mov ret stos lret sub stc sub push fidiv sub jle ss aas mov daa into mov mov (bad) mov sahf xchg icebp (bad) pop push jp (bad) popa cmp popf mov or mov aaa or js mov inc fcoms pop mov das pop add cmp (bad) mov fsts push pop lods psubd loop jmp sbb and push fisubrl (bad) sbbl pusha ss dec es (bad) push adc mov push xor and dec jb out mov push push push adc and sti test add addl cs in mov pop pop aaa fbstp fisttp enter pop out mov test stc scas fild mov adc outsl jl popf and sbb mov and inc int3 fcoml mov ret add sub ret sub sbb sbb xchg pushf fcompl fidiv cltd sbb push dec pop (bad) jecxz sbb fidivrl fiadd dec mov add mov sub dec ret stos mov sbb (bad) aaa rclb cmpsb mov scas push pop (bad) ljmp bound mov imul dec sahf ficoml push sub pop test (bad) mov fwait mov cli icebp add sub push or loope sub pop cld adc scas clc adc push ficom xchg leave xor (bad) sahf sbb mov dec dec lret bound dec push sub inc je jae mov insl cli push fistp add jmp insb aaa (bad) xchg pushf push imul les gs pop out mov jle adc or out lds sbb das les push rcrb dec add jns lcall or mov push inc mov bound fs push popa arpl mov fimul faddl jns cs les and pop dec pop mov dec hlt aad push inc stos cmp maskmovq negl sbb (bad) mov mov xor daa adc push dec push fchs pop push aam (bad) fisttpl fwait imul mov rol or lods push sub sarb arpl cs cli mov pushf mov fwait sub sub insb cli or push (bad) push lock loop scas cli and xchg (bad) loop xor or xchg out mov push loop test lods (bad) negl inc std xchg cltd and mov xchg inc cmp jae out and (bad) mov stc and repnz stc mov jo hlt in stc push decl (bad) imulb cli sbb decb es adc in movb mov sti or orl (bad) nop sbb fwait lods cs jae lds ljmp lea pop add stos dec enter cmp sub xchg pop ja mov xchg cs sbb jle sub leave jo jbe outsb pushf lods sbb pop lret loopne sub jp adc cwtl sti test orl insb cli dec pusha fidivl gs sar xor lock fldcw out mov inc rcr cmpsl mov (bad) iret shl cmp pop dec rcrb xchg xchg mov pop sarl xchg mov lods or ja add and pop jae insl ds lods adc add stos push mov repz add push enter adc mov ja push pop imul sbb pusha pusha push popf shll lods sub inc pop push fsubrp ret fimull jo insl jmp aas scas (bad) aas std (bad) daa ds mov loop and iret sub fwait jle fmull cwtl add popa popf data16 in sbb sahf (bad) loopne cmp iret jbe repnz jg inc mov sbb negb mov arpl icebp mov cltd sub dec lods dec (bad) lods iret fidiv sub or xor mov inc cmpsb iret mov inc sahf mov int3 lret outsl pop dec jmp sti bound dec and sbb lret inc push lods pop cmpsb andl lcall dec iret push and popf mov adc iret sbb ss bound and fdivl mov mov mov enter mov mov pop outsb or lds test pop fcomps add pop mov mov inc xor cwtl (bad) xor xchg lahf mov jle or mov shrb mov mov cltd mov jg lahf adc push mov inc pop mov push pop jle pusha (bad) pushf imul pop lods and push jge pop pop xchg dec fsubrs pop dec push mov je pop lea mov pop cmpsb jae,pn lods mov fwait dec adc inc movsl (bad) loop repnz sub mov out lock xchg cmp sbb pop jbe mov cmpsl mov pop and inc jno test clc fmull movsb sub lds mov or adc fistpll dec lds fisubrl push push sbb mov inc lret enter ljmp adc cmp data16 (bad) push ss push inc popl int enter fmull xor subl movsl lcall arpl (bad) mov or call push jno and outsl pusha mov mov push inc sub rclb (bad) xlat mov addr16 leave gs fyl2x faddl pop leave outsl pop cltd roll movsl push pushf jno inc mov (bad) sbb pop dec push mov fwait mov jnp lahf (bad) dec jl into mov dec pop xchg out scas sub sbb adc mov jno imul gs out add fidivl cmpsl adc jb,pn push jmp inc insb mov inc and xor jb fldcw pop jbe dec dec sbb jg call out bound out mov mov ss sub leave and iret cltd shlb mov sbb push xor xor pop adc (bad) lcall fwait int3 mov ret jno inc enter dec test cli sbb jne repz mov mov lahf mov cmp addb leave jp je or sub inc adc and mov pop daa xchg mov cld jne dec js stc dec mov sbb loop mov jae fiadd lret or mov shll add mov imul mov and dec in adc iret jecxz ret out add push cmp dec adc mov inc mov cli push pop shrl rcrb aad pushf cwtl pushf xor add dec mov adc jl jae test pushf sub cmp popa pop out (bad) lods mov addr16 (bad) daa jbe insb mov pop jl je sbb or ljmp sbb (bad) mov push sarl push sbb xor mov push aaa fcmove lret sbb lds hlt mov dec and or fcomps jecxz lahf and gs jbe sbb cmp inc in push sbb fldt inc fstp (bad) jnp cmp inc push xchg out out (bad) cli scas movsl out sbb add shll adc sub dec out pop fcompl into sbb sbb fwait lret mov stos movsb les xor fs mov fbstp fldt int3 push fsubrl jg push or sahf test or call daa sbb enter adc add or jmp push imul pop cmp je js xchg cli aam dec out adc mov mov xchg insl pop (bad) das ret (bad) dec (bad) mov call cmp sbb adc loopne aas dec xor je add mov and inc int3 call dec jbe out xor jmp jecxz inc icebp pop test jbe es dec dec dec test scas int3 outsb aad lds add cmp stc fdivl sbb sbb mov loopne mov mov sbb pop paddsw je xor mov mov sbb xchg jbe rorb adc and cmpsb shrb movsb mov or pop nop pop jbe and (bad) rcrb lahf pop xchg iret out xchg lret dec fiaddl xor add test sbb rclb bound and jb cld xor imul test inc pop inc stos and jns push nop cs cmp loopne xlat mov inc loop dec nop hlt mov out (bad) idiv sbb test adc mov hlt addb dec cld fs push add sbb nop sub mov or mov jg pop mov fnstcw sub adc sub dec and adc cmc dec mov (bad) nop dec out and add adc jle xchg add clc mov insb push push sub sub mov ret mov mov (bad) sbb in mov cwtl push icebp dec enter outsl inc sbb cld aad adc mov ss aad fiadd xchg aas leave or dec cli ljmp es lret das mov or in pop push enter aam xor push pop sbb nop cmpsb sub in fcmovbe push ror dec es push mov pop push mov mov shrb bswap movsl add push cmp mov iret pop add dec addr16 stos xor or mov divb pop inc push adc mov mov inc push fcomp sub sub adc sbb sbb loope dec test loope adc mov jle mov andl mov sub mov cmp push jbe insl lods shr inc mov sbb sbb js sbb mov pop pop outsb mov dec push dec stos sti inc mov inc sbb xchg movsl pop mov inc (bad) mov pop mov lock push popa sbb movsb (bad) out ds dec push xor rcl xor jo dec jns lret fcompl dec lret sahf mov sub xlat hlt dec imul sbb mov lret add arpl jo,pn pop cmp mov pop cld mov mov pop nop or mov rorl aad xchg (bad) push sub fmull adc mov sbb ret mov mov dec outsb mov adcl in dec in (bad) into mov or pop dec xchg pusha add ljmp push sub pop decl adc and sbb and lahf push popa mov imul addl jno push inc inc jnp mov pop loope loope xor enter fiadd push sbb mov jl pop subl inc testb adc push jl test sbb pop fmuls push nop pop inc push aam fnop sbb lock outsl dec outsb dec jl sbb outsl gs push out inc dec (bad) xor lea push inc or in cwtl cmp sub xor push lahf pop outsb sub jle mov mov xor sbb or (bad) fistl mov sub ret xor lods push pushf jmp add sub insl mov pop les jne pop pop mov or popa mov add push pop sbb adc mov (bad) fwait mov je jae pop mov add dec pop incb popa out xchg push movsb add aad lods cwtl dec mov dec and jne mov sub push inc mov imul bound mov xchg jnp fs (bad) int3 dec popa movsl (bad) jne adc shrl hlt dec call gs lods cli into or dec aam and jmp imul shrl mov test push (bad) testb es mov cltd pop test mov inc sbb xchg push mov push lds sub bound inc and xor sbb sbbb jb dec pusha inc (bad) mov ljmp fildl je rcrb adc movsb leave push mov rorl nop add pusha xor xchg int3 inc shrb push ljmp dec jne inc adc dec (bad) adc int3 xchg jmp mov mov pop hlt adc leave mov mov xrelease or scas xchg loopne das xchg lods out mov push add mov shlb jns add (bad) mov icebp outsb pop jb sbb push aas inc mov (bad) adc mov mov test lret push fnop enter aad jbe lds movb push sbb dec in scas add mov sub rclw pop push mov movsl mov or sub out sub add pop pop imul fcomps cmp scas sbb mov mul sbb (bad) fsubl xchg push cmpsb pop and dec mov leave mov push cmp repnz mov call mov notl call mov and adc jne mov jmp fldt lea popf fstpt pushf sahf mov xorb jae xchg jg insl lret or add inc les pop mov jne jmp xchg ret in dec movsl ret data16 sbb xlat test hlt sub rorb adc inc std xchg lcall (bad) int3 (bad) inc in fdivr mov fs xor aam pop insb inc pop ret xchg dec outsl pop (bad) lock into mov mov insl mov add mov and rorb inc fnsave out sub add cmp inc adc out aas mov push lahf push sar mov sbb push ret pop add mov popa das lods in (bad) aas mov pop inc push js mov (bad) (bad) push bound push (bad) sar imull loop test pusha aaa pop es fs add aas mov sbb dec sbb hlt add fildl push aad inc ds cmp fsubl aam add mull sbb fisttpll mov clc ja call mov dec add imul in insb ss addr16 xchg push mov sbb sub xor es mov andl sbb push insb sbb (bad) int3 or (bad) mov xor cld icebp push scas repnz lods mov sbb dec mov cmp push mov fisttpl xchg push dec (bad) repz bndstx dec mov mov mov jmp xchg push or fisttpll adc cmp test jg ror cmc lock ret into sbb (bad) loope cmp mov or imul in shr cli test pop out (bad) fimull jnp or jmp pop pop ret enter xchg push into fwait clc inc push (bad) addl test xchg xchg mov lods sub pushf lods push js mov ja call in mov outsb sub out mov js dec (bad) dec cmp add xor push mov dec mov sbb mov cld add mov das out jge les dec test push sbb dec jb cld (bad) int stc lret sti bnd pop adc outsl cmp (bad) lret mov ds mov push inc push lock and dec pop fadd cmc outsl mov es push sti cmp adc mov sbb jae clc inc add scas stos and outsb inc outsb fild inc idivb mov push sbb aas xchg sahf adc jle sbb in cmp popa inc cmp and (bad) mov sbb and mov mov pop inc push aas loopne sbb push or mov sbb (bad) lret or nop jmp push and rol dec or sbb sti dec test xchg cld jne mov out ja sbb rcr stc sub popl clc mov sbb mov push or pop mov popa fimul fcoml adc inc cmpsb jl,pt out or sub mov inc sbb sbb dec mov inc inc in inc and pop shrb mov pushf or andb inc enter pop stos insl popf push loop cwtl sub sub mov or sbb fs bound stos jp fs insb mov pop loope (bad) sar ja xchg int3 cmp pop add cmp add xchg mov add (bad) xchg aam mov pushf jne lock dec outsl dec stos imul mov inc sub fsubl mov fidiv xorl jns inc hlt (bad) mov pop xor rol or add fmuls icebp or and ffreep cld cld sub (bad) out push and and push sbb mov aaa mov arpl sahf add (bad) sbb push jg outsl push dec mov lahf enter ret test cmp pop out inc mov mov lds (bad) cmp aas push je pop sub insl incb push popa push leave jne test xchg mov mov or rolb jne (bad) pusha jg sbbl imul ss mov inc sti cmc lret andl xchg sti or pop scas fdivrs loop pusha je out or (bad) push cli fldl jg shrb and mov adc jb inc popa dec out pop mov test bound inc sbb ja inc xchg adc ret lock push dec mov cmp push cmp or inc fwait enter mov push repz in mov lock fs iret movsl jbe pop sub add inc pop jae,pn and add mov mov dec or dec sbb jmp cld sub test xchg add push push mov bndldx lea scas loopne xlat clc sub out pop gs enter ss xor push das lods push sbb repnz in mov bound adc adc sbb ljmp xchg testl dec imul mov dec xor scas jns xchg push jae (bad) pop movsb mov push test stos and ret mov aaa in mov mov sbb sub jmp icebp sahf clc dec push push jmp or outsb xchg dec xchg arpl lea test inc cmp rcr jb pop sbb hlt out dec call mov mov pop mov mov imul cld ja test or or je mov nop cwtl sub rorl out mov or mov xchg sbb dec out adc sbb imul in pop das sarb inc xor xchg rolb adc sbb mov scas stos test sbb mov xor and aad add pop inc mov lock nop and push jae adc push pop out xchg (bad) jbe push loop fimul out sbbl aas pop mov lock sub lods pop xchg imul dec fidiv punpckhbw outsl pop mov push sbb daa sbb rcrl mov pop out pop out ljmp call daa test cltd xchg sbb ss sub icebp pop inc (bad) gs sahf cmp pop (bad) lahf stc nop mov push sbb dec fisubr or mov popa ret fisttpl clc jmp enter rcr add xor fs sbb fs dec lds movsb pusha or mov push sti (bad) fbstp out and mov inc xchg fsubrl jg mov jae mov mov or and pop cmp mov shll dec xchg (bad) jb mov lods inc lods push cld cmp cmp rcrb push popa push push test cmpsb mull xchg out or (bad) adc xlat sub rolb lock dec mov jno jb dec push sub pop jp icebp adc sahf fdivr out gs enter enter add out mov subl je mov sbb (bad) in (bad) imulb pop fsubp or inc push sub into pop lods push add cmp sbb jns adc xorl in mov mov cmp jecxz fstpt js xor pop mov mov cmc icebp imul fdivl sbb test dec in addr16 clc mov cmp inc mov test out rclb and sarb sub mov gs fucomi mov outsl push hlt les push insl mov adc arpl dec cwtl aas ret fnstsw mov jmp mov lods shlb outsb mov hlt stos jl les pusha int3 das or mov test push cltd pop lahf mov or sbb dec pcmpeqw cmp and dec mov mov int sarb mov movsb mov push sbb loopne arpl sbb cmpsl xchg or mov loop xor cwtl or into mov mov mov dec pushf ret mov fsubrs add scas in aaa (bad) clc lds add movsb xlat mov sub fdivr out call ds cmp aam or rcll lds adc cmp pop mov and xchg sbb cmp outsl push cmp sub add and leave add aaa mov or hlt hlt adc rorl ljmp imul lods lcall jae outsl mov (bad) sub and pop insb cmp das cmc xchg pop pop mov push jne dec outsl jl sub mov or (bad) pop mov add stos sub jno xchg jmp pop (bad) push inc ja push lock xchg adc call add les cld cmp sbb dec cmp aas lds pop addr16 xor xor enter jne scas pop je dec xchg mov dec xorl pop lock lret cmpsb mov (bad) cmp xchg scas aad xchg cmp jns adc aas in fstps loopne cmp cmp aam out icebp push ljmp mov leave fucomp cmpsl mov jmp inc arpl xchg jnp pop test sbb jmp sub int3 pop outsl outsb fs cmp pop mov popa push pop aas jge add inc dec xorl mov jno sub dec or sbbb jne push mov push nop fs mov ds sub inc mov jno rorb insb push inc out or xor leave pushf clc test ljmp push dec pop inc sub ljmp clc sub lcall (bad) mov pop and stos sub or movsl insl mov hlt bound pop mov inc dec outsl dec imul je arpl and jo inc sub pop ret mov or lcall aad cmp ja (bad) stos push lods cmp sbb arpl and push imul and jle lods cmp lods lea addr16 cmpsb hlt pusha push cmpl sub mov les movsb pusha jae sbb and movsl jbe in ljmp jmp es push mov dec dec push inc pop in imul xor and mov (bad) addr16 push push imul (bad) pop das data16 add and fwait pop dec push cmp dec and push ss and pop fs mov mov xor inc int3 pop cwtl mov gs push dec xchg loopne dec dec pop pushf ja movsl inc dec push push sbb negb popa mov bound mov inc data16 (bad) pop negb mov jbe lods outsb push sub mov sub js push mov aas and icebp inc adc xchg dec push sub inc mov sbb icebp divb sbb sbb movsb cmp cli fistpll cmp sbb mov mov gs adc mov sbb xchg std ds cmp sbb insl lahf pop dec dec (bad) insl pusha lods and inc inc mov bnd addr16 fistp mov aaa arpl add dec dec jecxz insl test jg adc sbb pop push pop xchg xchg imul lock addr16 mov sbb push cwtl daa push dec sub cs es sbb insl dec dec and and fildll insb sbb hlt sbb sbbl dec dec cmc into sarl in je add lods out inc mov xchg inc dec add loop pop push sub jae mov jb xchg sbb mov hlt loope loop (bad) (bad) dec pop push cltd hlt scas dec jbe dec dec mov push cs sbb ja sbb xor sbb stos adc dec mov jno or sbb cmp cli int inc dec cld pop outsb xchg push rep arpl jb nopl adc dec push mov inc inc inc cmp scas pop icebp stc mov xor scas and xor cld test or inc jmp cld in adc dec push outsb dec inc xchg and dec inc dec pop ds sbb cmp push mov mulb adc repnz mov adc xchg mov jmp inc push scas sbb mov inc imul xor xor pop mov mov inc xchg mov mov pop cmp nop cmp lcall test cmp repz jge mov (bad) xor lock addb orb dec loopne pusha xor ds cmc es jge or xor sub mov out pop inc incb int3 bound pop xchg cmp cld pop jne das xor sub pop je ja pop pop bound lret cmp insl push das pop push pop cmp dec inc fs das neg lods pop xor mov add pusha ss pop inc dec jmp ds pop sbb mov mov push popa loope cmp push sbb or inc xor ljmp (bad) push pop mov sarl sbb insl loop cmp (bad) xor nop (bad) (bad) out daa (bad) push xchg pop bound mov out mov push sbb mov inc xor cmp dec xchg sub and out fbld mov sbb mov push jno repnz dec or and pop mov mov (bad) jbe xor push cmp push mov push daa repnz inc cltd stos sbb jnp pop push dec insb pop pop fwait inc pop dec loop sbb or fisttpl dec pop test sbb push jbe lods hlt nop sbb sti pop dec inc push sub mov arpl out (bad) cmp inc test idivl lods (bad) dec dec xor sbb sbb js push jno ficompl cld daa or sub dec mov push mov sbb xor inc outsb clc inc insl dec cmpsb sbb jle jns pop test sbb popa cltd lea data16 imul adc out lock xchg sbb insb pop jmp push jo dec push outsb adcl pop push movsb adc jnp stos stos sbb out je pop sbb sbb mov data16 pop xchg jne movsb xor xchg adc aaa sub mov bound dec cmp clc mov es jg or mov mov pop aas mov jge pop fcom xor pop xor scas push and fdivl mov scas cmc out out push cmp pop inc sbb incb xchg lock jb mov pop xor cmpl jne,pn cld push push cli adc cmp inc push pop cltd xor mov xchg push call cmc iret std sub in sti push xchg mov push lcall in sbb (bad) sbb je idiv mov pop jmp xrelease punpcklwd dec cwtl add mov mov sbb pop jecxz pop cmp mov pop popa test xor jnp das adc outsl ds and lea sbb pop inc dec enter sbb sbb imul and int3 xor mov jmp in sub and roll push pop dec scas push pop dec pop je add inc inc push enter sbb jb sbb mov cmp call cmp inc dec mov or mov andb cld inc add lock mov sbb push pop sbb pop movsl jp inc mov inc lea dec das leave adc xchg or sub xor loop icebp and scas fdivl mov mov or mov push add dec mov daa insb jb rclb cli mov pop lea sbb (bad) jg fdivrs dec adc (bad) pop sbb inc push pop adc sbb push and sbb subb inc int3 (bad) dec inc cmp dec mov xchg aas mov and sbb sbb int3 data16 push pop addr16 push in or fwait add dec fs inc int push pop mov add xor sarl icebp mov pushf out xorl or pop sahf insl sub push and outsl (bad) jbe sbb fs cmp sbb jmp je inc sbb inc mov test ds jp pop mov or pop outsl jnp popa outsl sbb sbb in xor sub outsl andl mov pop or adc push inc adcl pushf pop ja push das push push (bad) cmp dec add notl mov enter push mov je mov (bad) ds pop pop xchg scas bound mov push rclb mov inc test inc sbb inc addr16 dec pusha arpl inc insb les push mov pop cmp pop jg loopne jnp mov js scas push mov (bad) mov je stos fidivr push push imul add jge jno outsl mov inc aas mov movsb lods push cmpsl and xchg sub and dec xchg sbb xor push add pusha enter mov jecxz sbb mov sbb push sbb cmc negl xchg pop cmp push faddl push faddl pop dec jnp sbb inc pop pop pop push xchg outsb and insb inc inc ja add inc inc testb dec stos aaa imul cmpsb pop pusha (bad) loope sbb orl sbb push in xchg mov jl add aas ljmp xchg cli arpl mov (bad) cmpsb stos ret sub jle imul cmp les (bad) pop add xor pop rclb mov sub imul std push pop (bad) and and mov ret lahf into xor pop pop lret lret push pop mov mov pop add je adcb aas xor sti cmp xchg add mov data16 outsb shll fist and sbb jmp lret push (bad) fsub dec xchg rorl mov or jecxz rclb and clc orl fcoms std test lock push mov mov ret in dec jbe (bad) mov dec (bad) out push sbb adc bound and cmpb xor mov inc dec pcmpgtw (bad) in mov lods cmp sbb fadds jae and lock jle sbb cltd call and enter rorl mov push cmp dec ljmp pop push lcall lea insl sbb daa xchg mov mov (bad) std insl add mov xor jnp mov mov test arpl add add dec mov sbb sub jmp addl mov xor or pop sbb inc outsl pop dec push sub mov mov inc mov pop or (bad) or xchg mov sub sbb xchg inc push js sbb xchg sahf into xlat std iret sbb out push cvtdq2ps repnz push (bad) jmp inc inc xchg pop mov psllq and das mov and or mov jecxz mov xchg cld ret push xchg aas pop push insl imul cmp xlat jb jbe pop jno bound enter pop mov add imul popf cld sbb adc jns,pn or mov mov ljmp cmp inc das pop stc stos pop and outsl mov cmp dec or in xchg or fmull xchg xor pushf sbb adcb mov fdivrs inc add inc cltd sbb jns call dec cld or add cmp jecxz cmp (bad) js fist dec out daa mov dec lods xchg fisubr inc out repz add js push push ret lock xor jmp roll nop jno lcall lods fcoml cwtl mov dec out das or enter jg or sbb cmp mov sub mov sbb in and dec jo mov sbb inc add sbb jbe sbb cmp jp push repnz add sub (bad) leave cmp ds cwtl dec ficompl xchg cmp push push outsb jg enter sub repnz and int3 xor dec mov adc pop xor aas pop test mov dec out jmp sub sbb dec loope clc pusha cs xlat (bad) cli les add mov (bad) dec enter nop jbe push jnp outsl ljmp fmuls test fidivl insl xor xchg push and cmp pop lods push push mov popa repz fstps nop inc sub sub mov lock in rcl push insb mov arpl lahf hlt sbb in sbb icebp ror nop lods sub out push jecxz mov inc iret scas pop and add xchg popf rorb loopne mov sbb stos xchg sahf pop dec fs adc xchg adc push cmpl xchg imul mov lret insb out ret stc fwait mov loopne aaa sarb repz ror addb popf pop jnp dec jmp or xor cmpxchg add mov addr16 pop in adc ss je rorl mov insl incl inc push inc add cmp mov pushf call jae xor imul ljmp cmp push xor and js sahf into insb cmc cli pop enter daa cmp pop shrl or lods imul scas notl (bad) fcomps popf mov imul loop push cmp push adc mov nop mov divb arpl cli mov in std xor fwait into dec notb push or cmpsb mov mov and inc int3 movsl pop (bad) inc adc (bad) lds lods test aas dec repz lods imul (bad) pop sbb mov test lods aaa jge (bad) loope lock mov or push bound gs popf adc gs dec adc adc (bad) movsb xchg mov inc adc inc mov repnz jmp jae mov lods push pop fwait mov call push aas test lock cltd loopne icebp mov jnp push add jmp pop sti dec fstl push mov add mov out or xchg pusha inc jnp or cmpsb pop jnp sbbl repz dec or (bad) mov mov adc mov pop loop cwtl in fldl cmp inc and insl (bad) mov mov cmpsl int3 lea orb stos cmp out (bad) inc push (bad) push cs pop scas fbstp ljmp fadds or mov stos cmpsl xchg mov jge jmp mov stos lcall mov fiaddl pushf pop push movsl mov out fs xchg scas xor stos outsl frstor dec jo rcll and adc mul xchg incb rcrl jb loop (bad) mov mov jbe mov pop popf cmp jo pop sub and loop (bad) call mov or push push push push (bad) push pop ss push (bad) sub out mov inc and jmp push bound sub in sbb lcall ss aad jns or stos xor cmp sbb andl and dec sarl xchg jne cmp rep sarl push popa mov mov ljmp jmp cmp sbb push insb xor sbb or mov sbb pop jge sbb test pop pop dec inc (bad) adc xchg (bad) lods cmp hlt dec dec lahf inc cmp inc ret addb xor ds mov pop movsl scas cli outsl mov mov sahf loope,pn lahf int3 and cltd ficompl fdivl pop jno inc pop push inc pop inc dec cli (bad) sbb (bad) (bad) cmp sub push pop add out inc cmp call aas adc test sub sahf lcall mov jl sbb jl adc (bad) pop loopne push add sbb cmpsb mov ss mov add (bad) sbb cli xor xor pop mov mov xor (bad) popf jg shll loope call sub (bad) mov inc into pushf out push cmp pop adc pop lret (bad) mov dec xor lahf push push sub test mov jmp addr16 insb cltd jg fild js leave lods pop int dec (bad) sbb cli nop cmpsl (bad) imul or pop fwait lret push in mov jp mov das xor mov push std sti fnstenv popa mov data16 call add daa adc lods fisubrl jg pop lds scas outsb fs mov push cld dec out fnstcw cmp popa mov push and jmp hlt and ffree bound push cld inc adc jmp into repnz push out pop test mov cmp and jnp aas and aaa pop jns xchg dec pop xchg outsl mov mov test mov push sbb xlat push adc sbb ja mov xor and or xor fsts add adc inc push push (bad) lret inc mov scas addl stc xor into dec insl cmp jle jnp scas pusha pop imull lock mov sbb cmp in inc pop jb mov push or jns cli jo cmpl xor mov mov dec daa xchg pop xchg nop dec (bad) adcl pop aad cltd mov adc adc fldenv pop cwtl lock sub mov xchg fadds dec add or mov (bad) notb xchg pop cmp dec dec fimul pop inc rcl fadds fwait repz outsb adc stc xchg arpl (bad) faddl lods pop out push lods (bad) pushf pop push imul fisttp enter fs jecxz adc pop pop mov bnd xchg aad (bad) xchg inc fstpt in mov mov pop cmp test adc mov or dec imul inc stos out mov insb out mov (bad) dec push imul adc ljmp hlt popa gs lds clc or and push xchg cmpsb aad mov cli mov test lock adc ret jge mov subl push fisubr mov mov fs mov stos mov leave xchg lret mov repz in mov pop aas sub (bad) sbb lods ret (bad) mov fldl add je add outsl xchg aaa mov pop sub jno sub sbb (bad) gs xchg adc cmp in test scas (bad) pop or jae mov test into int3 (bad) imul hlt add data16 cmp outsb rcl fstps inc push sub push pop idivb jp jle daa shl sbb imul or ds stos shrl (bad) lods mov jbe push pop arpl add sbb std mov pop aad pushf or cmpsl insl xchg pop je es and pusha sti rcrl inc roll sbb cmp mov push test push mov push mov xor aas data16 inc loop sbb mov mov std jp call xchg mov xor xor aam pop adc test or jg pop pop cmp dec fnstsw cmp cs pop in mov pop push andl mov into call incl in xchg outsl mov cmc jns lock scas fldenv sub inc (bad) jp mov add sbb dec mov cli cmp movsl push mov jb stos jmp arpl inc push enter loopne lss adcl add (bad) jne (bad) fnsetpm(287 aam mov dec fnop push pop sbb pop scas mov call pop cli cwtl or sbb push cmp xchg cli xchg aas testl xor popa lcall and ljmp loope (bad) fwait pop into lods jmp dec sarl test xor stos mov sub es in mov or adc fsubrs pop mov lods ja fsubp out loopne pop fimull pusha outsb out cmp fstps fistpll mov ja mov sub mov hlt lock mov or sbbb pop test inc faddl pushf int3 jo cmp pop mov fs mov sahf sbb repz jmp fninit pop ret (bad) repz (bad) call test lods xchg insl mov mov sbb in mov sub jno add daa clc test sub dec xchg adc mov out stos lods mov stos inc test mov jg or xorl frstpm(287 pop andl sbb push popf fildll mov in inc pop mov mov jp test fist inc in xor ja pop or lret mov imul cmp lods stos ret scas xor (bad) sub dec inc add aaa mov mov jmp int cmp mov popf scas imul loopne into lods pushf scas dec mov mov dec dec sbb inc sub lcall insb mov pop in xlat mov sbb and cli pop push pop sbb mov int3 dec fwait push pop xor add pop das cmp jo rorb setno dec adc xor dec mov add sub pop (bad) sbb fidivl dec lahf push popa mov push pop adc push rorb pop pusha mov dec test out es outsb dec fwait insb xorb test add popf dec jmp adc push scas push push inc popa adc jno adc add mov jno dec cmp dec inc mov push jb jle ret je mov inc sub lods in movsb (bad) outsl cmp outsb mov sub pusha cmc pop push mov pop or pop (bad) cs lret test xor shrl pop mov mov orl enter fs dec jmp fs push (bad) mov or push insl mov pusha loope aaa loopne pop into push gs pushf sub mov inc fsubrp popa xchg jno sarb test inc adc pop mov adc jb sbb sahf xchg aas popa into xor mov cltd (bad) dec jne inc pop xor dec inc mov sbb stc movsl adc mov mov inc arpl push stc or imul sar sub aas and (bad) pop hlt lret (bad) xchg jbe movsb mov fwait data16 or xor daa mov cwtl addr16 inc inc out setp sbb arpl rcrb sar lea iret push loopne add pop vmwrite sbb test push pop (bad) mov fmull xcrypt-ofb cmpsl out test out jno mov lahf sbb cmp dec mov jp (bad) xor pop lret inc popf xchg sahf add push loope jns popf pop bound cmp push dec or sahf imull pusha jae das ffreep push sbb pop pop dec dec cmp or movsl sbb mov lds enter add (bad) or les mulb push dec xchg inc dec jg fidiv add push mov xchg cmp ficom pusha adc inc cmpsl push mov mov lahf movsl lods xchg cmc inc or mov enter pop adc dec lock leave inc (bad) lods dec dec sub repnz insl repnz orl mov xor gs (bad) inc or xchg idivb fxch insb sbb add and sbb sbb pop push es sbb mov xchg mov mov or inc cld lahf sub faddl (bad) xor mov (bad) bound xor inc rcrb jnp xor enter adc lcall mov inc (bad) xchg mov rcll push (bad) xor dec add pop dec adc pop mov mov daa and cmpsb sub dec imul pop pushf data16 nop jb test adc mov sbb addr16 cmp arpl or dec add gs outsb subb mov xor dec mov and jbe (bad) cmp sub sub mov jne test sbb imul and inc mov adc stc fwait and daa leave gs daa or dec mov addr16 dec adc cwtl inc jne mov in xor mov xor aaa dec or pop xchg sbb adcl mov adc adc cmp or ds scas stos pop dec gs jle repz gs icebp inc inc mov mull test addr16 (bad) push bound and mov gs ja dec mov mov stos push divl stos jo sbb push inc negb gs adc mov js std mov jbe insl pop popl repz push mov sahf sbb dec mov bound cmp sbb mov gs cltd lcall xchg sbb lods dec xchg and mov cmpl adcl aad cld lea aaa pop pusha leave dec or lods add push add lea pop je jmp rorb mov clc les pop inc xchg orb inc add ficomp scas cmp test inc lock sub (bad) mov push or mov cmp pop stc in xchg jmp scas les pop arpl cltd jb orl loope mov adc xchg dec push ljmp test sbb sub jg incb pop pop push and dec jae mov jb dec jae movsl jae push xor push orl xchg fxch std lcall add (bad) pusha jmp bound inc push dec mov cmp popa lods push xor pop cld pop cmpsl push mov (bad) dec adc pushl rorb sub gs dec lea or sbb jg imul inc pop mov sbb adc dec sbb je dec push push push popf fdivrs push clc loopne xchg inc mov jnp data16 push xor fisub cld sub stc push jne mov xchg xchg nop frstor arpl and cmp pop outsl inc mov pop insb mov xor push cmp inc push dec decl (bad) cmpsb push adc and shll (bad) repz cmp fisubr mov adc js lds xor imul dec or sbb cwtl mov xlat jne sbb cmc inc in sbb outsl in outsb jmp dec xchg push xchg pop pop sbbb lock mov les shll xchg cli sub (bad) mov enter out sti jns mov in cmc inc cmp test or in (bad) push icebp xlat test mov jmp bswap xlat cmpsb pop popf or arpl (bad) (bad) lea sub cld mov push loopne aam ficomp mov or push mov pop and je ret dec add leave in mov jae jecxz mov xchg sbb cs mov iret stos sahf mov sub addr16 inc cli xor sbb std cmp sub pop movsb dec es pop sbb add mov sub push out (bad) push pusha fstl mov dec sbb lock push pop cmp leave insb dec call mov mov stos pop sbb jl in test fcoml arpl fsubs sub sbb dec push dec mov pop inc int3 sbb and xor pop (bad) (bad) int3 mov ret push or (bad) and cld pop sbb fldl jne dec (bad) pop mov fist pop (bad) jne stos sbb icebp push pop sahf or mov mov les cld jae mov mov add adc add sbb jnp dec adc arpl jns mov dec call add and out inc mov fstpt adc das pop popf dec pop (bad) idiv add dec fsubrs jne mov movsl xor xchg lret and sbb dec js lea testl pop hlt pop sbb daa cmp dec xchg adc adc fwait inc sbb je test xor sbb sbb xchg add and es aad adc (bad) mov pop xor dec daa dec adc xchg jbe add dec testb bound pusha pop and (bad) popf ljmp jle dec fist adcl adc iret mov push mov pop mov in jmp stos imul lcall dec adcb cmp std cmp aaa or sub imul rclb into test xchg xor or insb sbb call cs rep add mov xor mov push push jmp dec push test pop rcrb ds cmp ret inc mov mov sahf cli ljmpw mov repnz mov inc stos (bad) out mov sti lret iret lods and jae push jp dec ds sub xor in add push inc jbe mov dec mov aam jmp jo daa jg xchg orl lods jecxz mov js xchg leave lret sahf sub xchg xchg dec sbb inc pushf in push imul pop add sub xor mov repz mov cmpsb ljmp sbb or (bad) ja mov sub xchg fisttpl mov cld pop cli lock mov push sub inc jo fstps jae sub dec sarb inc cmp inc cmp adc pop xchg pop repz sbb mov fnop xchg adc jle pop movsl stos cs adc lret sbb icebp mov jno jmp and loope xchg lcall (bad) sub push pop out jecxz test xchg dec std pop sbb aam (bad) dec push cmp push mov pop inc pop fadd or sbb sub notb in rclb mov cmp (bad) sbb mov mov imul pop lea std inc pop in or dec in cmp es dec push iret ret int in pop mov pop jge mov outsl jo es jecxz add push sbb push xor loop int3 push ds add cltd xor sbb xor fidiv fnstenv mov lds imull fcoms adc push sbb add sti shll mov xchg daa enter dec icebp dec lods jl xor and les ret fidivl (bad) mov and and add push push pusha lock dec pop pop add mov repnz mov pop lea jl pop mov xchg jge mov je adc repnz adc aaa xlat xchg cmpsb mov movsb clc inc inc imul outsl push popf mov or mov je data16 sbb adc pop lods pop out push push push jle mov dec sahf sbb leave clc dec insl dec cwtl out in mov cltd pop jle add test sbb ret sahf xchg fisubrl sbb and sub test mov sbb addr16 shrb add xchg sbb sbb mov enter aaa fcoms push fiadd jnp jo inc mov mov mov push sbb mov fbstp inc or push xchg icebp pop push pop mov call xor dec fcoms cmp loope mov xchg or sub dec xchg push sbb dec inc add (bad) mov jno mov mov jo xor fstps cmc inc es sub frstor std inc jno mov fisubr push or pusha jl loop mov sarb mov lret repnz addr16 dec xor cmpl xor iret mov jg outsl inc dec adc clc lods xor frstor arpl or (bad) mov xor call (bad) cs std outsb xor (bad) fdivs fmuls adc push xor fldt sbb push fwait mov sbb aad inc mov cs je adc xchg mov sub ret jbe or and clc inc sbb push (bad) mov mov outsl cwtl inc pop orb lcall lea (bad) mov popf xchg push fisubrl xor popf jnp fwait pop repnz xchg (bad) fldt add push fsubrl jne mov sbb imul mov mov push call dec mov sbb push sbb adc nop mov dec adc mov out pop dec cmp dec cmp hlt nop xor mov and loopne insb xchg sub into cwtl dec daa mov pop dec loope mov mov mov mov jb bound dec (bad) in mov cmp sahf fmuls dec orb negl push xchg icebp inc mov sbb aas adc arpl sub jo cltd in pop daa mov push test fildll (bad) adc mov pop lods rcrb mov js lret jle,pn jbe inc imul sub adc inc mov cmp aam cld pop and sbb add jno sub mov push dec xchg xchg sti dec ret in mov jecxz jno out (bad) out test mov bound icebp nop loopne adc jmp pop in fldcw jle loopne daa cmp gs inc fildll aas rcrl (bad) add pop inc dec test xchg jo mov dec jne enter frstor sub mov dec leave cmp int3 inc stc pop push andl fcoml xor mov movsb dec add enter sbb ss sbb rcr inc dec data16 aaa xor inc jmp sub fwait ret add dec jae push lahf pop push push add fisubr sti add mov test (bad) cli sub bound jno in in into pop out cmc inc cmc daa pusha je adc jo and dec push push dec xchg aas cld mov insl add dec lret add push mov inc bound in js (bad) sbb sub or dec bound pop jle call sub insl push pushf mul pop ds jae mov pop push xchg add push incl xchg xor xchg loop cs mov xchg dec cmovns dec pop or pusha popf repnz js es bound aaa pop (bad) and sub pushf sbb pop sbb test add mov inc shrl push arpl or (bad) ja jns push outsb dec mov sub inc sbb sbb movsb xor sbb or das shll sbb and aas inc inc fbstp ds pop cltd je popa dec cmc push inc xor mov sbb mov push pop cmp orl out pushf (bad) sbb cmpsb cwtl add mov data16 ljmp inc mov test sbb dec sub mov dec xor notb daa fcmovnb aas imul insb sub jge mov leave in jne lock call add mov inc xorl imul cmp jle dec inc cmp mov mov push mov mov mov iret cmpsl xchg pop pop xchg and mov sbb xchg cmpsl out add in (bad) pushw pop arpl xchg es sub pop xor scas std bound sub imul cmc repz cld repnz xor rclb loopne add xlat ret loopne dec jge push mov cltd aaa leave dec sbb cmp lods and jg gs iret imul in imul pop dec arpl xor mov jge push dec xchg std adc dec out sbb inc dec push xor out sbb aas push cli push (bad) pop cmp daa pop aas outsb into sti sbb sbb adc mov mov test movsb or sbb sub lods mov enter xlat outsl xor adc cwtl ds imul push mov (bad) or push xchg cli push xchg movsb mov popf mov pop adc popf sti xchg pop cmp xchg lods mov xor inc pop enter dec lock xchg dec mov jne jnp sahf mov sbb jnp cmp pop out lahf xlat inc jge sbb cmp out scas test clc pop cli repz push and jecxz push pop cmpsl (bad) cs lcall mov aad ja pop mov cmp adc cmp jo lock stos insb mov jge data16 mov fs mov pop call sbb cmp xor pop dec push or mov inc push xchg jae mov sbb cwtl sub mov cmp ja (bad) aas adc pop add inc imul sbb sbb cwtl pop test adc daa mov or aas mov lcall pop icebp xor jnp lea mov xchg das (bad) mov repnz mov stos outsl pop xor dec fs outsl push mov push sbb sub dec sub mov dec imul cmp stos test cs and jns and lods jl and dec dec aam fwait test insl mov jp inc mov adc mov loopne int inc lret cld aad dec mov and in adc ja xor xor outsl int3 sbb cmp pop jns std jl jl mov ja push cs test pop scas rcrb enter dec mov outsl dec mov mov popa scas stc xlat out test lock lahf movsl mov sti push xchg clc repz aas mov cmpsl aas pop jae cmp mov sub xchg dec sbb inc mov pusha scas push clc sub js outsl imul adc add (bad) dec fs mov mov je data16 lea xchg bound mov mulb mov mov fnstcw scas xchg xchg fwait ja fwait inc int3 fcoml cmp adc pop movsb inc stos pop popa cmp test leave push clc (bad) adc xchg insl xlat cmp fs push sub jno,pt push adc clc pusha repz xchg dec sub and and test out dec sbb mov xchg pop dec loopne push cld add call or sbb icebp mov and mov mov push xor mov cmpsb mov sbb insb insb inc push cmp pop cmpsb lahf cs cmp mov jle xchg sti push leave jnp push mov mov push xor mov dec dec mov inc js mov fisubrl push sbb jno xor loope aad lods data16 sbb pop xor fiadd in sbb dec push cmp gs insl rorb icebp push cmpsl je in push sub push and dec mov sti or push push cmp in adc cli fsts push xchg mov xchg outsb test mov adc shrb sbb jmp test pop xchg loope fisttpl repnz dec pop mov lret xlat xor ret pop push ret jl pop lahf xchg sbb rorb jmp out js fdivs or xor cmp nop mov xchg js sub enter mov aaa data16 int scas icebp mov pop out lea sbb aas sbb das mov sub fcmovnb and nop test std (bad) pop int lcall lds aaa hlt inc fild xor stos cmc and in leave clc jl outsl cmp (bad) jecxz and mov cmp movsb (bad) mov sbb cltd add pop repnz jmp cmp scas and std leave cmp cmp xor clc inc sbb lret mov popf lret or movsb bswap shrl leave xor (bad) mov push push pop les lcall dec jmp out ss dec xchg jno inc imul sbb sub xlat dec imul or sbb jecxz inc cmp xchg or cmp pop mov icebp push dec dec incb jne notb jo sub lret jb jecxz jl arpl jb pop je push js dec outsb shrb (bad) mov clc imul sub dec cld in popa adc push xchg mov (bad) push outsl jmp mov imul sbb pop cmpsb sub in ficoml pusha outsb push lahf fisub or pop xor adc int inc jb cmp and push insb xchg mov mov mov pop push mul (bad) xor fcomps mov sarl push mov mov ljmp dec mov mov inc sbb fiadd test leave data16 ljmp dec jnp dec pop mov push push dec mov ret sub sbb ja xchg sbb cmpsb cmpsl inc inc dec or dec sti (bad) xor rorl inc mov jl jae mov pop mov cmpsb aaa push xor adc or daa sahf add xor dec sbb xorl sbb jp sbb iret mov ficompl daa push sbb xchg ljmp sbb adc data16 push and imul outsl mov out sub cmp (bad) dec sti mov xchg sbb jg imul popl inc jb cmpsl pop adc sub mov icebp addr16 push add xchg pop mov hlt out push rcl pushf pop nop mov out jne mov cmp test sub rcrb sbb ret sbb xchg add cmp je imul sti add repz in dec mov mov sar pop nop ds jmp dec or add mov dec push lds in shlb add (bad) pop iret push jecxz (bad) pop jo cmp mov mov daa popf scas orl xor mov mov clc sub sbb adc dec jae nop out mov mov in ljmp pusha test js push adc shl or adc xchg (bad) mov gs adc movsb dec push add fistp inc mov push (bad) inc pop sbb inc cli jae push stc sbb imulb mov call pop lcall or cwtl pop orb insb (bad) icebp sub xchg dec inc scas and inc insl mov rcrb jecxz fwait sbb es gs inc pop lahf sbb xor and xor sbb (bad) mov clc pusha xor ret dec xchg mov xor push or pop pusha dec mov mov lcall and dec data16 test pop mov subl ljmp jg xlat aas mov sub and sbb cmp jbe mov cmp push push lods negl daa cld mov inc loopne fwait rorb inc pop pop orl and mov daa fisub in es cld or shr fwait push adc pop cmpsb aas inc fildl mov pop pop lret aam inc loope jb repz lods pop sbb lods fnstsw outsl dec ljmp dec les dec dec push mov pop lds jge test ljmp mov mov sbb push fimull pop xchg sysenter push xchg mov and add xchg mov out daa int mov jle enter mov movsl cmp sar sbb mov sbb adc leave (bad) pop add (bad) mov es dec adc into jno mov mov xor iret scas orl rorl mov pop mov enter (bad) xor pop mov sahf lcall mov push std mov add sbb imul adc sbb imul inc in xor sub ds push mov mov sub lock fcmovnb int3 inc push int3 repnz inc ja dec mov cmp outsl add insl mov mov (bad) pop pop popf xchg fwait adc pop pop jge pop lds cld dec hlt arpl xor pop out and mov jae pop add fbld gs mov sbb test push jne mov repnz xchg or pop arpl orl aad adc daa lods xchg (bad) sbb enter push fwait rcl outsb push sub stos movsl and xchg xchg test pop and jnp sub dec pop jno lods cli lods sbb sbb sub (bad) mov ss cs mov ret scas in cmp xor test fwait xchg push mov dec sbb popa sub lock fs fcompl mov or les xchg push inc jnp shl mov dec dec insl mov adc bound lcall push xchg pop push enter xchg mov mov xchg lods pop hlt pop outsl sbb ret dec out mov inc push dec jno mov cmpsl xchg sub (bad) icebp lret (bad) pop push push std push mov test loop xchg add pop mov jle mov mov push mov push mov push sub (bad) lcall pop adc xor addw jp idivl pop push xchg (bad) cli dec es insb push es lea jns loope mov outsb cwtl cmp dec pop mov mov repnz popa (bad) adc lock xor sub ss (bad) outsb push inc popf lahf cli cld aaa outsb xchg mov js test lahf push mov add dec push cmp dec mov sti push mov xlat scas dec pop pop frstor fildl dec sahf add mov xorl cmp aam dec jne in (bad) push sbb adc call adc pop mov mov mov insl mov jge sbb int3 (bad) out fnsave add mov jo int mov xchg je scas bound aas mov pop sbb aas cmp dec inc incb sbb call dec add (bad) cltd dec lcall sbb imul pop sahf cmp adc (bad) push inc cmp int3 cmp add std jmp push mov enter leave mov mov adcb stc inc ja (bad) ds xchg inc jmp insb xchg dec jno rcrl in sbb mov dec mov leave adc dec jp dec in and ret mov ds lret sbb cmp jbe jno dec jno mov ret add cltd sub jp cmp dec mov cmpsb jmp jne inc cmp pop xor and jo (bad) fisttpl mov sbb daa adc sarl pop sbb dec push or push fwait sbb push adc les mov dec dec mov pop and rclb inc xchg insb push xor mov fadd xor fcompl push leave fbld xchg pop adc prefetcht1 in dec (bad) sub stos out shll sub enter aas in insl iret bound dec mov add insb xchg not jb and scas insb cmc sbb xchg call sbb imul ds je dec and std or inc mov cmp movsb sub fdivp pop add mov xchg cmpl and dec dec mov mov (bad) mov call add jecxz int fisttpll mov jmp ret pop pop ret push adc test (bad) push xchg in es clc lret dec ret or pop mov ss push in jo std cmp mov addr16 sbb addb push adc mov push insl push sbb or dec pop mov jl outsb mov jmp sub inc fistpll aad sahf add inc loope jne popf movsl arpl loop cmp lcall pop mov fwait adc push cwtl (bad) dec std xor aas lcall test push jmp (bad) mov (bad) add ret xor jecxz mov inc xor je or imul mov ret daa mov push (bad) or cmp es push push addr16 adc out lods jbe and or popa cmpsb mov dec lahf push sbb xor jecxz mov or push sbb add jns pop cmp enter add or mov sbb bound push mov leave dec pop fbld into lret xchg dec and pusha mov push xor mov mov aaa mov cli ret cmp int3 dec jg sbb xchg mov fs dec adc ds stos arpl mov push add add jmp mov dec pop and mov mov xchg xchg push sub mov sbb mov into rcrb lret xchg (bad) aad cmp cli add imul repz (bad) in push hlt repnz push mov xor push in sti xchg jns int sbb bound pop lock fcmovnu mov adc pushf jnp mov xchg pushf pop enter xchg dec test shlb data16 stc je js mov out pop subl mov push mov scas dec sub aaa insb dec adc cs int3 jp jno mov (bad) aaa imul inc in add push clc popa push dec push and outsl dec or out dec pop pop mov fdiv cltd add mov sbb lods aam notl sbb sahf inc hlt add outsb xor jp scas mov cmpsb mov add jnp pusha repz cmc cmp or mov pop cmpsb pop push pop xchg loop loopne pop fbld in adc je add in pop xchg loop insl repz mov push popa arpl cmp and outsl push sbb jno nop or cmp int3 and mov mov pop add mov pusha call xor cmpsl inc mov dec inc xchg mov add lcall add inc mov out xor (bad) stos pop and adc push mov lds mov call sti scas and push inc lods mov jb pop mov das imul xchg in mov push out and orl mov dec add daa fistpl pop nop mov inc push mov pop daa xorl mov sbbl mov mov aam in dec push dec sarl fs rorl rcrl sbb into js adc insb add dec push inc or push roll xchg ja mov xchg and or sahf arpl dec sbb (bad) xor mov inc xor enter sbb out rcll ret in lret out push dec jno jl pop repz mov pop xchg les mov push jb xchg pushf sti mov dec dec jb roll jmp or lcall sti sbb xchg or xchg add fimull cmp cmpsb mov or mov (bad) xor xchg ss rcrb mov pop push mov and les push fcmovne hlt insl xsha1 cmpsb dec outsl and cli inc inc push mov popa push push dec dec popa repz cwtl pop inc push mov pusha adc mov jg jno jle jmp dec mov int or mov dec push add inc add add das push or js (bad) mov in lret in stos sbb daa adc mov lds fsubrl inc std into (bad) aas mov imul push push dec fstl pushl pop mov dec dec dec or cmp cmpsb and inc pusha xchg (bad) push scas je aas jg cld sbb loope dec cmp xchg pop dec or dec lea mov or mov push jns call popf sbb hlt ret xchg jo adc mov push add adc dec mov lret jle lods sub outsl dec jno out jae test dec jns push or (bad) sbb pop call pusha loop inc or lahf mov dec cmpsl lods cwtl stos stos jp mov push xchg xor iret ljmp popf add jge fisubrl or fbstp mov sub pop xchg dec adc jnp jbe push lahf bound leave xchg scas mov clc out enter mov sub stc pop and (bad) dec movsl rolb shrl insl imul (bad) fbld fildl ret pop arpl bound mov sbbl jge or xchg lods and mov inc add and fs and icebp nop xchg nop (bad) mov add shrl pop push jp dec mov xor les sbb sub pop and cmp mov xchg popa movsb add jecxz lahf adc neg sarl sub cmpsl fisub xor xchg pop (bad) sub adc dec xor ja jmp bound lock outsl das lret fisttpll fcompl xchg or pop lret mov pop test mov sub jp cmp mov icebp repnz adc test gs cs jnp and popa pop jnp push inc sti push dec mov inc cmp or jmp or push push inc add das push (bad) pop and outsl or ret (bad) outsb push iret xrelease jp xchg incb das jns (bad) or sbb in cmp ss mov in aaa sbb jecxz aas addl mov lods (bad) mov daa inc dec mov adc jnp and xchg scas aas sub pop jmp bound sbb dec mov pop adc push jbe mov lds dec fsubrl cld (bad) ljmp push fstpt pop pop xor mul add dec mov mov mov clc jae fisub dec mov mov frstor jg or pop stc in sbb scas ja cltd cli adc jge fsubrs pop dec dec stc pop lahf cmp cmc cmp xchg mov pop inc xlat xchg jb add hlt mov mov lea mov and or std and sub mov inc ret lods hlt rorl cld ja sbb jle repz insb stc adc std lret dec sbb pusha lcall (bad) fcomps mov pop mov xchg xorb or add xor jge call jns mov jne xchg add mov fadd movsb mov ret hlt mov in fisubrl add call sub lea or mov cmpsl mov adc out cmpl pop xchg outsl or loope dec mov imul jb in enter sub mov fdivl mov push xlat pop add cmp xchg push mov cmp mov xorb jecxz inc adc add mov or dec dec lahf lea jecxz xlat sbb inc or inc incl adc (bad) in mov pop push sub mov bound jmp add sbb imul sub daa adc fwait jecxz fisubl fwait int3 cmp mov (bad) xor add cmpsb inc sbb insl sar fistl (bad) outsl mov lods dec lahf cmp insl sbb bound pop pop gs sub mov jne push in ljmp add inc pusha fcmovnb dec lret std and sub mov and stc arpl es jmp xorb mov pop push icebp out and aas fisttp dec outsb mov mov dec pop jbe push xchg dec int mov mov adc sub fs add sbb fistpll stos and sbb shrl fcoml mov sbb push cs mov sub mov sbb or xchg loope pusha in pop repz mov pushf xor jns xchg mov pushf dec mov sti or sbb xlat mov call and or sbb sbb and test pop fildll repnz aaa push cs mov fbstp repnz add addr16 xchg adc sub cmp pop pop daa jne loop mov dec imul dec dec lock adc in ret enter mov dec in pop arpl or aas jns dec pop out test insl mov push es jle aas loopne dec push mov push mov outsl add sub test mov sbb inc add je lahf out (bad) lret js fldt or dec sbb sbb add add mov push dec sti icebp mov lahf inc add and or dec xchg sub inc pop dec sbb mov cli aas sbb std sbb lods negb add mov mov enter dec lcall sub mov rolb mov mov ljmp inc lock fcoms inc push das jle notb dec inc addl fldcw cli cwtl aad push mov pop mov mov sbb (bad) mov pop (bad) (bad) push and sbb and ljmp or xchg (bad) lock xor dec lods inc jnp jno add mov iret fdivl orb sbb cmp mov arpl xor test stos push aas lods aas mov fdivrl jmp mov aad gs sub shr and push push iret inc gs mov in (bad) mov inc pushf or mov or sub pop dec mov aaa int3 dec les adc xchg cmpsl cmpsb orl xlat fsub subb mov fisubr inc mov adc out jns lock bound stos test cmp lret mov push (bad) or fistpll mov jnp daa jecxz enter cs mov ficompl mov sbb push fwait cmp push insb xchg sub popa mov push addr16 mov stos cs (bad) or mov subl ljmp mov movsb loop stc arpl rolb dec mov mov pop jmp cmp mov addr16 inc test inc dec gs push scas pusha inc cmpsl test les (bad) js inc les sti pop or repz pop rcrl mov and mov mov sub icebp lock jle pop adc mov je rcr push es cmc sub inc dec popf add mov inc cmpsb add les leave lcall adc test inc dec push or xchg jge mov loopne push std data16 sbb test or mov jmp or mov rcr mov jmp cmp mov lahf cmp cmp dec inc jmp andl or dec sub pop add or vpaddusw stc lret mov sti dec cmc jns xchg add push divl mov popf test dec mov orl jne mov xor pop cltd xorl hlt aam mov adc dec dec push xor popf sbb mov inc out into dec xor sub loop cwtl jg pop out push push pushf ds fiaddl inc outsl das jo sub (bad) and or mov outsb and mov aaa cmp mov mov dec lea movsl inc jne mov inc pop icebp dec xor mov je dec sub jo add sub add and sub sbb push frstor or mov int3 dec push push inc and sbb leave adc sub mov dec sub cmpl xor arpl inc in jg mov shrl and cmpl pop jo mov cld fwait mov enter shrl lock ja inc mov pop jne clc mov scas rcll mov sbb std adc iret dec mov sbb popf cld xchg enter (bad) lods scas cmp ret add cmovp sub addr16 dec out outsl cmp lods pop inc pop push fs negl dec ja jg xchg rolb inc dec jg pushf sbb sarl add aas fisubl jge fdivrl or dec mov icebp pop ljmp icebp push add pop or cmp (bad) pushf pop pop add (bad) cmp mov xor xchg mov or or jg stos (bad) loopne stc pop jge scas inc (bad) popa mov inc in xor movsl nop add push out repz ret or scas sti mov pop fldenv mov popf push mov lea push and add pop movsb sbb std icebp outsl pop sti mov dec iret lcall lock cmp enter mov inc lret pop sbb dec outsl xchg ja fmuls mov daa out mov (bad) int3 fdivl repz gs es mov outsl add dec insl into fs lret fsts es fxch xchg mov (bad) push fbstp mov popa and loopne loopne xchg mov outsl and test pusha add sbb push ja sub data16 pusha push or shr ds ja popf cmp push lods out int jo xchg push scas adc push and scas loopne (bad) pop cli sub push in bound sbb mov das push stc dec xor xchg (bad) jo sbb push mov inc daa or cmp stos pop pop mov jb js je xchg out sbb inc divl pop es or inc push adc jb shl sub xlat (bad) cmc test or daa dec pop fmulp stos mov push push loopne or sbb out jnp in dec sbb cli xchg pop repnz cmp add mov fiaddl call (bad) sbb jbe dec hlt pop pop test push lods or mov int3 aas stos adc pop jg add and add pop lock sbb lods lcall jmp stos push stc jb mov ss and pop mov lock pop add push ljmp imul movsb out adc pusha in jb mov push cmp mov xchg dec push add (bad) sbb inc sub xorl into jnp mov xchg mov or outsl pop inc mov lret pop femms clc mov sbb cmp pop inc sub add push mov aam xor jns mov stos push ficompl in xor (bad) es adcl mov shrb ljmp lods insb pop dec sbb sbb notl dec ljmp push mov add sbb dec push sbb or pop pop push mov lock (bad) xor inc push dec mov sbb scas pop (bad) imulb sub lahf loop icebp test test pop sub in rcr add rol sub lea pushf cmp test popa jb fisubrl fmuls mov xor sbb clc insb aaa imul or push mov outsl pushf insb aas xor sbb dec imul cli in je jmp sti imul jb mov fcmovne mov inc xor mov jae sbb mov es adc mov dec js sub enter pop push lods adc inc mov mov mov scas ss jmp add lock push stos bound lods adc xor xchg and daa popf out pop scas sbb mov add daa xchg xor and add push test inc push jecxz jbe sahf pop jno and inc push (bad) loope sbb pop mov inc sub pop xor add sub mov (bad) ss std adc dec cltd xlat rorb sbb mov sub xor xchg push sbb out jo mov sub lcall mov add jp aas pop jl movsl fdiv add (bad) dec fs scas and ljmp repnz ror dec (bad) mov pop xor pop gs ds dec jo ret mov stos push cli add or sub cmp xchg cmp adc mov incb mov cmpsl sti mov sbb ja mov ret nop ljmp rcr or adc (bad) xchg pop xchg pop mov sbbl lret fs rorb xchg imull negb negb das mov movsl insl in cmp pop mov popa mov or (bad) jo sahf aad lret add repnz (bad) rcrl pop and es sbb and mov aas pop sbb loope mov xchg iret sbb cmp jno pop add xchg aad fisub dec mov loop jl,pn mov sbb jns sub dec pop dec cmc test pop mov push outsl inc xchg mov inc jl push addr16 leave mov (bad) xor dec xchg dec xor mov pop movsl adc mov ror jle int3 xor pop mov and xchg inc faddl lea cmp popa jbe sbbl subb lods mov sbb std in pop push push cwtl jecxz cmp (bad) in mov mov inc or outsl mov (bad) sarb imul stos sbb xchg dec dec dec mov jb mov lret ror dec xor jmp push fidiv sbb mov mov in mov push call jge xchg cld xor sbb bound or cwtl sbb xor idivl std fstpt test aam mov stos mov jno cmp jno mov and xor sbb rcll in into repz xchg cli pop push pop arpl or adc mov dec cmpl movsb arpl out rorl and das push sbb jbe mov inc or iret cwtl adc inc xor or pop jne jnp sbb arpl sbb sti mov gs xchg xor testl ja jne pop add pop outsl jg mov jae fildl pop out add test jg mov sbb cld sub lods pop (bad) daa fbstp fidivr aad mov mov push cld movsl sbb lret loop iret mov and (bad) xor movsb sahf cmp fistp popf add out adc imul or fistp jecxz loop insb jmp or lret daa jbe mov sub (bad) sbb pop mov test mov aas mov xchg xchg add pop mov jnp enter arpl out sub sbb lds mov pop inc js scas sub mov shll test sub cmp push pop ss pop bnd sub sbb rclb idiv push inc je mov sahf sbb ljmp pop jnp cld mov lret ud2 dec pushf or mov jnp nop mov jns mov adc arpl jmp iret loop rorb lcall lock cmpsb cmp pop or scas xchg sub adc into bound jg loopne push inc mov pop mov and jo popl dec mov jle mov imul addr16 mov rclb push dec lahf clc jg inc std push loop cwtl sbb mov mov je lods bound clc stc (bad) in gs nop scas (bad) repnz sbb lahf ret je mov or dec mov mov enter pop ja pop mov adc repnz popa fs pop pop movsl inc jbe xchg or enter (bad) mov mov popa sub shrb mov das mov daa lahf adc call sub dec mov dec cmp lcall dec add jg insl sub fnsave push pop outsb test inc call push sbb mov iret pop notl arpl inc bound jbe jbe call sbbb pushf rcll shrb jns,pn xchg or test push sar dec or loopne addr16 (bad) mov andl nop adc das inc arpl dec jge sub fisub mull cwtl cld rolb loopne sar lods inc adc daa adc jle pop adc jb jp push push ficom stc push sbb mov subl pop pusha (bad) das jge mov sbb scas dec subb mov mov popl pop fldt imul pop in adc pusha popa push or lcall dec xchg sub fcoms sbbl fnsave lret (bad) or or test push cmpb scas mov cmp or (bad) fbld cltd ret push fsts jle out mov stos mov jl dec cmc int3 sbb in add clc mov test insb in sahf inc cwtl push xor dec dec (bad) aam pop mov mov push test inc cmc sub ret jnp mov jg dec push ret mov sbbl fisttpll adc cmpsb push pop inc ss aam push pop repnz jbe (bad) jecxz dec mov in into dec sbb pop (bad) and rorl repnz fs push pop pop adc pop bound lods movsl push xchg pop popf xchg into fbstp cmc inc pop inc dec clc stos jnp sbb pusha stos shrb pop popa and mov or jge dec sbb ljmp rclb test mov and testl dec mov pop mov push (bad) mov in mov sub sbb sub dec mov imul repnz fiadd pop imul outsb mov add mov inc jbe and pop std jne sbb scas or jge mov fnstenv dec lods dec dec cmp push push in mov push add pusha scas shlb add stos dec push or fildl mov or out mov in xor xorl mov into cmp fisubl add add sub repz incl mov in jecxz insb lahf pop outsl and das rcr xcrypt-cfb cmpsl data16 es cmp sti lcall shr xchg sbb cmp sbb fist add (bad) repz repz xor mov mov xor and cli add pop push pop jle pop lock sbb fmull sub xchg sub divl pop or shrl sub imul out xchg ret imul pop clc inc in cmpsl sbb lret dec outsl int flds cmp inc push loop pop pop fstpt pop repnz or sbb cli or and dec stos xor repz subl std pop xchg js lock dec dec mov imul shlb dec lahf hlt adc mov ja nop sub pushf mov fwait test xchg sbb dec push js out (bad) rcr push orl push and push fs pop mov sbb subb fs adc add xchg test stos jb popf sbb daa mov mov inc lahf inc bound mov fisub add lods in dec stos pop pop cmp cvtdq2ps add cmp pop jns mull or or cmp mov xor dec sbb pop dec aam inc sub push ja inc push pop xchg mov push loopne dec scas iret lcall inc sbb mov or dec fsts adc xchg fs aaa pusha out push incb mov mov lcall lret imul rcrl dec jmp jmp clc mov mov cwtl mov cs or dec inc pop add pop insl sarb loopne and les sbb adc push incl and call mov sub sbb xor data16 gs (bad) mov cs outsl in rorl int3 in mov cmp push pop ret lcall in inc pop enter inc mov (bad) jbe ljmp enter gs adc incb inc pop mov pop xor add mov lock mov scas push mov jae dec adc push and and inc and icebp stc push dec mov call mov pop js adc fwait pop xchg inc pop xchg mov daa push inc cmp sub lock adc cmpl popa lock jle mov jnp xor xchg sbb push pusha insb inc (bad) addr16 jns out fadd push xchg dec pop shrl pusha mov (bad) (bad) lahf cli in daa inc movsbl mov inc jg add or in or pop les loop jl (bad) pop xor int or or or ret inc mov cmp push dec jmp sbb mov pop and repnz mov mov mov pop out jl mov aam fistpl jge jmp mov push sub dec sbb xlat pop repz or jmp insl dec pop push js add aam insl cwtl out push push fistp sub mov sub dec or jo insb adcl dec rcr xorl lods sub aad jmp cli fist cmpsl adc xchg fistpl push cmp push lea mov adc sti das dec jecxz mov stc and sbb hlt loope loope iret push dec dec out sbb cs mov mov shrl push (bad) xor fildll pop push aam pop sub inc mov dec mov fistp and jne es daa sbb push and jns push pop ss pminsw outsb mov in fdivr push or test or out (bad) scas mov in in inc jmp (bad) call pop cmc mov cmp jne int3 pop insl pop pop stos dec imul pop push leave cli inc aaa or dec js and mov stos (bad) iret push pop dec sbb (bad) dec pop sbb popa jnp in fisttpl pusha dec jg xor lods (bad) icebp (bad) push pusha lcall mov imul jmp in jl enter and cltd int xor ror mov mov pushf into rcr outsl fstps cmp (bad) int3 call test hlt enter addb mov in rorl lods cld mov faddl scas imul mov push pop bound cld mov leave xorb mov rcrl cmp mov dec sbb iret push adc outsl aam jnp dec push pop popa repz enter push test push or jl dec cmp adc lods pusha sbb adc xor xchg imul fistl xchg mov sbb mov mov xchg dec jecxz jnp cld sub imul push pusha popa dec dec out xchg mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec mov pop dec nop leave fs sub jb add jb add jle stc cli es cmp sahf stc push sub push mov out in mov cmpsl jbe out daa sahf stc cli daa sahf stc mov es push mov sti cltd inc aas (bad) xor pop imul mov jg mov inc es fs (bad) xlat lahf jbe jmp mov sahf int3 fist ds pushfw stc xchg test sahf in xor stc cmp xchg iret rorl stc loop sahf stc cli sahf jmp cli es repz leave (bad) (bad) pop scas test fs mov cli es xor mov inc inc sti std sahf stc cli and es stc cli jle stc cli test jbe xchg iret dec sub (bad) cmpsb push sbb or shlb push in es out mov mov jbe popf xlat jo add inc fmuls sti pop in mov mov mov pushf xlat jo add inc fmuls sub push icebp mov test adc or rclb mov mov xchg adc push repz insb addl stc cli movsl sbb cli sub push icebp mov test adc or rclb arpl cmp sub push icebp mov test adc or rclb aas ljmp daa sahf stc dec imul stc cli es xlat jo add inc fmuls sub push icebp mov mov mov sahf stc je fist aas ljmp daa sahf stc push ds jno stos pop in push xchg (bad) ljmp stc cli push andl aad add (bad) ljmp stc cli xor cmpsb into pop jp ret (bad) es (bad) xor movsb hlt mov iret mov ja push bound mov xchg inc stos in ret out cmpsl out fidiv (bad) movsl push xorl inc je cs out adc (bad) int3 sub aam add adc jle rsqrtps pop sbb leave lahf jge icebp ljmp and jnp (bad) jle nop sub mov sub and imul xchg sub or jns das jl loop mov addr16 aad adc adc inc sub xor sbb mov inc lret leave sub loope sub popf into sahf sub popa sub ljmp pop cmp test sbb (bad) cwtl xchg pop in adc int ss push mov pop mov icebp out xlat outsl sar roll add mov mov clc mov (bad) in xchg dec gs sbb les pop mov dec xchg (bad) cltd push add push cs mov add fildll jbe jae dec cli orl inc in outsl mov push repnz lcall (bad) xchg adc fnsave mov in sbb outsl rorl jns,pn cmc ficom dec mov and test sbb push jns iret inc pop cld xchg pop enter mov jp inc push add (bad) xchg incl loop mov mov scas push ds and dec in add mov mov jo xlat out push mov xor and mov lahf jmp xor movsb push insl sbbb les xchg (bad) sub mov aas adc nop dec mov jae pop in or add sub push (bad) hlt int add das jl testl mov fiadd mov pop jne cs jno mov test test xchg (bad) mov (bad) cmp mov mov jmp push and ret in addr16 cmp and stos mov fxch aaa pop stos xchg test jnp push rcll fistpl test nop fstl dec es lretw mov mov xchg loope fisttpll push dec sub les pop or pop add lods ds test sbb pusha loope movsl ds xor je xor scas jg mov shrl jae mov dec test mov aaa mov movb mov cmpsb mov (bad) les rclb adc mov push (bad) out or (bad) gs stc std addr16 cmp ss mov xchg ret out (bad) cwtl das and sub in inc movsl out std xchg sub mov xchg es bound push ja sar stos xchg push shll sbbl xchg mov mov push call std shl andl iret or jne add xchg push adc enter or jnp lahf and mov jl lods sub xchg xor dec or clc ds daa inc xchg lods imul addr16 mov test xchg ss inc mov inc out pop mov push popa popa push jl (bad) jo mov fs iret mov pop dec push lahf test lods xor pop in rorb pop andl jge inc clc dec dec std jmp rcl in sbbl cmp cmc outsb in addr16 inc push movsl jmp jnp mov test or movsb lock jmp cli jle push cmp jl mov pop ret mov flds jmp pusha xor aad and mov mov rol int clc (bad) icebp loopne sbbl push in (bad) inc pushf cmp and leave xorl stos scas mov cmp push les (bad) imul dec in xchg adc scas mov aad fnstsw insb testb sbb inc inc pop inc ret (bad) cmp xchg stc data16 adc daa and int test mov cmp movsl add add and inc sub inc cltd or ss mov call sub popf push cmp xchg data16 shlb adc iret sub mov mov cmp inc repz stos pop in ret push add dec test repnz lea test sub andb pop mov xchg add pop outsl gs sub ret or push es nop mov and (bad) xchg inc stos pop cli test sub xlat push pop lcall jmp data16 addr16 pop dec ds pinsrw imul cmp (bad) xchg (bad) mov popf push adcl rcr adc push mov sub jmp push addl test std lret pop push push mov adc call mov int3 (bad) dec lcall cltd push cmp mov or pop in std add mov xor mov movsl ss jnp dec rolb inc std std add orl out dec (bad) int pop lods mov (bad) cmp out test mov adc and jbe iret add shr dec sbb adc es inc mov outsl jbe aaa (bad) ret add mov out lret fmulp bnd lock das ffreep (bad) out xchg mov xchg and movsl jnp cmpsb aas repnz dec daa xchg (bad) stc cwtl out cmp rcll test test pushf fstps scas inc adc ss (bad) test pusha xor test aad pop lcall out gs sbb jg mov mov mov out clc mov inc cs fsts test (bad) and or inc lods je int push ds fwait push out cmp xchg or cmp arpl push dec and mov popf hlt int mov ss push test loop roll lea rcrl test cmp lods pop (bad) fs xchg pop jno aas jno scas lcall cmc xchg push adc xchg or aam xor addl sub pop popa in scas adc in (bad) js les mov imul add sub (bad) rorl xor ljmp fistl xchg mov push stos or jp fs push das xor sub out jnp sbb fsub out sub (bad) (bad) xor sub xlat and xchg movsb or lahf aam dec jo add sbb and or loop pop (bad) push mov lock hlt in call jecxz ljmp iret lret xor (bad) lcall add (bad) or pop dec mov sbb cmp loope (bad) lock pop lea dec pop push pop aad mov pop pop add stos scas mov mov mov cs stc push cli leave lods loopne test pop add andl mov in hlt fwait in push fisubr cmpl mov jle pop adc lahf lahf jns dec repz incb cmp test ds test in sbb in adc push xor dec aam (bad) lods mov or mov adc movsb xor in in xorl leave clc pushf int3 sbb lret jb xlat cmp xor pushf mov lock sbb ret xchg stc lock pop dec int leave dec push test cld lcall movsl in pop or test scas or in shrb mov push movsb rorl jb rep stos test push fiadd mov pop scas mov dec ljmp pusha mov lds and aam int3 dec push int addr16 pop lds imul stc lcall xchg ret jecxz and add shll jo imulb and push arpl data16 mov pop in in xor sub fsubs sbb or mov sahf sub insb pop push xchg mov outsl loop sahf or cmpsb xchg xor in in mov mov and bound mov dec lret add sub out mov add push stos xchg lds mov mov (bad) jmp add out cltd (bad) mov or mov xlat lds mov cmpsl pushf mov lods nop loopne movsb dec cmp mov cli jnp sahf inc mov sahf movsb jl lods sahf cmp (bad) mov jo lahf (bad) daa sub popa ds out fisttpll mov movsl call std jo rolb dec vpsubb push in pop dec pop mov loope pop fidivrl mov mov push mov lods sbb dec popa mov jecxz push in dec rcl cwtl push dec jle lcall in lock mov fcomps jg dec mov lahf pop nop test mov mov in push stos movsl dec adc jl in inc iret mov lods das lods dec jb enter aad hlt xchg cmp rcrb push dec mov pop in outsl jmp fs sbb mov dec push (bad) or mov sahf leave popf nop pop mov dec out sbb or jmp (bad) aas pop subb push pop xchg outsb fisubr iret iret mov rorb nop mov jno sbbl std or scas lret push fsubrs cwtl push clc adc psrad int outsb add jge loop stc incb mov jmp aas (bad) mov inc std push adc test das cmpl xchg dec push popf mov xor fiadd arpl js push (bad) or loope repz jnp push and nop dec sbb push orb inc xor push cmp sbb sbb jo test cmp pusha lea dec xor pop push lea (bad) lock int add mov mov cli aam mov jae cmp adc cld cmp (bad) into sub (bad) dec out xchg int3 push mov mov hlt inc push jno xlat icebp scas test lea xchg pop pop xor insb cmp or (bad) lret xchg ljmp fwait lock sbb sub (bad) dec mov lods dec jne jp pusha stos mov push xchg inc push js lret cmp xchg inc and es push mov jge mov stos adc or add mov xor lods xchg adc movsb out ret push mov sahf mov loop xchg push pushf sahf cltd push rclb adc cli in sub or orl push mov jmp jb sub mov sub icebp fdivl stc adc (bad) sub popa push xor inc aas jmp rclb dec mov test adc jns dec inc (bad) and fldl add sbb sahf cmp mov (bad) ss hlt and inc xchg imul fwait sbbl lret cwtl enter lock outsb pop or mov add inc mov add sub cmp and cmp inc ret push adc ljmp adc bound cmc add jmp nop imul ret sub inc add adc shrb xor imul lahf imul add xchg ret jmp loope lret adc dec and push aas fcomps pushl mov negb clc leave sbb sbb push xor jae cltd inc leave xchg clc add ljmp adc dec mov sub mov cs mov and or pop push repnz ror inc (bad) mov dec xor add sbb stc xor push ljmp xchg stos test lcall ljmp (bad) lret arpl push mov mov xchg jmp test push pop cmp sub (bad) pusha out adc fild xchg lods sub pop cmpsb push jo mov add xchg sub dec sbb mov mov add fistpll pop adc dec (bad) das scas js movsb add outsl cmp mov rcll pop push int3 mov popa sbb cmp fs add push ficoml sbb adc dec jae popf add dec adc adc sahf adc pop xor pop inc ret pop xchg outsl int3 stos or ljmp bound into push dec dec and add sub jle cmovne add test inc jecxz fwait push ljmp in out test jg dec ljmp xlat mov sub in xchg or xorb out add inc mov in je jae add out insb jl mov or xchg aas cmp hlt lds shll push sub and and (bad) xor dec ljmp inc rcrl push mov or pop adc adc pop je lea push adc mov sbbb or cmp jns mov add inc movsb imul rorb repz mov jmp rol out popa ret fwait add nop dec cmpsb mov cmp mov mov xchg jle in sbb sahf mov xlat xor inc xor mov test mov push xchg mov aas mov adc dec pop je xchg push add mov xchg (bad) je inc add inc hlt dec add mov nop inc cmc mov pop and insb mov mov fcomps clc lods fidiv or and sbb xor mov sub sub in (bad) (bad) leave pop fcompl push rorb and je mov inc or sub inc inc inc adc mov push jns pop sbb rcrb push jl mov mov jne inc ret mov xchg mov push orb mov scas sbb nop inc lcall loopne jl and sub adc call sbb or sub sbb adc or inc sub sbb loop pop repnz mov imul popf cltd adcb jns dec bound add push push aam sbb xor sar in jecxz cld xchg or mov add push hlt jne mov sub dec add push scas pusha mov bnd add fwait mov popf lcall push inc adc sbbb ret cwtl fiadd jo xor pop sub test lahf push jle cmpsb lock dec or nop enter or sub dec cmp out ficomp inc cmp hlt (bad) das push in push movl pusha dec clc mov orl sub loope push push lock and add mov xchg push jg dec out dec fmul outsb into dec push sbb jo lods mov dec aas or imul inc mov add cld dec jo push mov (bad) pop sub nop cmp xor lcall mov lock das cltd cmp jo aad mov jmp stos xchg add shlb in and fldt mov adc lock mov nop cmp jg in mov push xor and fnstsw jmp hlt lret push hlt ljmp push xor lea es pop je call data16 repnz dec pop rolb add jno das or or std fs lods add (bad) mov (bad) out mov sbb cltd push adc adc pop mov inc and mov adc orb sbb lahf rolb popl loope aas sbb lahf popf adc movsb nop or inc nop in inc pop and push dec add mov sub mov mov imul sub pusha mov orl inc adc add push test push test cmpsl out add sbb sub rcrl and in push es lea adcb in (bad) in jge inc dec mov mov in sub inc push pmaxsw clc test sbb inc jmp cmp jae inc mov fwait xlat and lret xlat mov jl and mov addl mov hlt jp push pusha add mov loope cmp push xchg nop pop pop adc (bad) out pop fiadd jmp jge or mov adc lock or jo xlat cmp pop add dec push mov add xchg jb aas xor je daa ds test jle add dec dec fnstenv pop push sbb mov in xor adc pop cs adc or xchg enter inc imul add fnstcw mov mov add int sbb andl addr16 sbb inc inc fsubrs scas jmp enter sbb nop lock jg inc pop mov daa mov sbb fadds or stos pop cwtl inc sahf cmpsb jne mov jl inc sbb dec push jb or add fbstp out pop pop daa in add out lds mov pop cmpsb imul stos and lock (bad) adc add cld or call mov xor or jmp fdivr and mov repnz inc sub mov xlat aad xchg popa lock test mov stos inc push add sub add out aas xchg icebp and movl dec fcomip mov pop mov lea rcll sub add pop xchg inc mov xchg inc sub test out fwait adc cmp pushf and or push pop sub cmp lods push cld enter push lock loop in add jmp push rcll movsb and outsb adc lahf cmp dec cmp aaa fisttpl ret dec mov sbb aas cmpsl push pop fldl rcl popw sub push cmpsb loopne adc aad inc lock loope test lods ljmp push xchg inc lahf mov inc or hlt lret adc mov cmp dec xchg mov push bound jle inc xchg add pop cmp inc es inc sub or jmp rorb xchg sub xchg aas adc sub or sarb xor and sub dec or add mov dec dec (bad) hlt push pushf lods xor insb (bad) cmc test inc inc and adc outsl cmpsb push test jge or ds mov or xchg pop and ficom xlat notl and (bad) pop and push cmpsb fldl mov sti je or cmp push xorl into lcall pop pop sub add cmpsb or push sub out test mov addb xchg sahf rcrb pusha enter (bad) cld imul pop cmp outsl bound mov (bad) mov pushf sub pop cmp adc and shrl and inc mov xchg loopne xchg stos es dec push and dec call push aas imul (bad) cwtl shl add xor outsb imul mov inc jp add or cmc outsl add cltd dec mov jl add and fdivrs and jl jmp aad movsl fwait mov mov cmpsb mov (bad) hlt and sub add mov out mov add push sub add inc addr16 mov xchg enter xchg ret sub add les clc cwtl lock mov cs mov mov cmp adc mov out and push pusha pop sub inc or cld inc push mov scas add mov in rcll sahf add lock int3 xorl mov arpl or (bad) jae es xor pop and push rolb sub and pop add mov jg mov mov (bad) loopne push adc mov pop mov add or xlat test pop fsubrl and sub lods repnz push mov pop mov push lods hlt mov in dec push or imul mov les dec cwtl jnp mov push adc push sub das pushf call and lcall sbb fist dec repz movsb mov add and xor clc add xlat bnd xchg shll mov dec cltd add or xlat pop (bad) popa sub vcvtdq2pd lea xchg mov mov xor test adc inc cld mov lods sbb pop inc xchg mov mov sbb jle cmp aas mov xor cmp push scas es aas fstpl sub sbb test inc mov test aas lock push aam fild cmp mov popl testb and loopne and mov and lcall cmpsl push sub daa push push dec sar loopne inc ret mov lock push push push inc adc stos cmpsl dec jno or mov mov mov pop dec mov jnp (bad) xor lahf or fisttp push outsl mov cmp (bad) int3 add test mov imul cmp dec adc mov inc push shrb leave aam ret movsb inc adc push repnz xor push adc movsl pop gs fldl pusha fcomps mov sbb xorb add add mov xor push hlt sub and add inc mov scas or hlt subl or stc mov mov loopne mov add mov loopne pop fs dec dec xchg data16 shrb push sub test xor cmp adc (bad) mov call shl andl cwtl cld pop insl pushf add and insb mov sbb shrb hlt or rcrb sbb out mov jg cmpb mov adc mov sub add loope push pop mov xor mov inc sarb inc mov sub adc imul jl adc call hlt incl add outsl sub sbb dec xor and dec inc rolb stc add inc add shrl (bad) mov or dec incb mov sbb add lret jb add jp sbb cmp xchg mov sbb xchg loop and xchg sbb mov fidivrl nop ret add and adc mov add ja jl and mov xchg add repz int3 mov add mov les pop sbb popf inc xor cwtl outsl sub or xor lcall push jp bound mov jbe sbb xchg or xchg or mov add xor adc cmp mov push push pop test xchg lcall lahf cmp mov repnz add xorl enter xor xchg mov lods mov xor enter pop push rorl lcall push lock adc pop and lahf xchg test pusha xchg and jns adc push add icebp dec mov loopne mov jo or lret add mov dec scas js push sti push int3 inc add and mov or sub cmp cmp (bad) pop pusha jnp fimul mov xor sbb add (bad) cmpl mov add ds sub cwtl and push mov lcall test je cs mov and cmc xor test imul fcomps sub hlt mov jge mov aad mov and out and jg inc adc inc add aad push psubsb scas pushf loope div jecxz add aad mov test scas xor pusha cli sbb add mov jg addl adc mov test fs imul lods and mov lahf sub fs testl sub mov add jge dec sub mov adc inc fs mov dec lods insl and clc add mov addl bound or scas sub mov inc add hlt adc jno add call cmp cmp and sbb sbb adc sahf and cwtl xor xlat in or cmp cmovl sub sbb add icebp movsl or mov and (bad) mov in xchg inc cwtl add inc cmp dec mov incl push sub xor xchg dec adc xchg xor aam mov pop jns mov (bad) and popf xchg hlt xchg push xor mov mov shlb loopne add ret int3 insl and and loope add negb add push mov jmp das fiadd int imul pop and xchg test pop sbb xor dec in inc and movsb (bad) fiaddl and mov push add cmp sub fcoml fbstp es inc xor push or push xor adc andl cmp lock mov loopne push and stc hlt xchg jp sbb add xchg nop mov mov scas out nop je lds jp cmp es jp sbb sbbl test outsl push add cltd inc add fldcw pop popa js and jl mov dec mov (bad) push test and inc and enter icebp lcall jge add push mov pop pop or lahf shr or pop (bad) ja test cmp jecxz xor add jbe aad je negl sub add add daa xlat cmp mov movsb mov mov imul data16 cmpsb repz loopne mov and stos cwtl orb pop ss in mov pop sbb stos in es in pusha push (bad) xor inc sub bound test inc ret and inc dec add mov sub fs inc jl fidivrl subl subb adc (bad) mov jl mov push insl mov out xor sub adc jl push rcrl scas pop push cmp sar cltd xchg xchg pop and adc or inc test (bad) fmuls rolb pop into xchg add jne rcr and outsl sbbl xor bound (bad) dec mov cltd (bad) xchg pusha jns scas adc cmp inc cmpsb mov lock pusha adc out fildll or xchg enter fsts cltd stos mov movsb or cli jno add push adc inc js push or popa pop cwtl add add and lods imul and sub andb pop dec xor (bad) sub or mov nop and loopne adc jmp inc push lret mov cmc in cmp inc cld mov and mov ja xor jns outsl insl mov or test xchg xchg cmovno test add mov dec ljmp xchg push and movsb je icebp and test icebp jg add and fst call sahf dec adc xchg add popf jg xchg cld xchg lea xchg mov adc adc mov add outsl mov push jecxz dec call (bad) pop es in lods inc sub fwait ret aad insb xchg jb jl adc mov je loope outsl add inc adc jae sbb hlt jne les add adc jle jo mov test xor or adc popa mov hlt arpl in fwait loop add (bad) lock mov test push xor cmp mov ret imul jmp (bad) or dec push jp mov push add push add push and xchg (bad) rcr inc pop cltd add jno aaa and dec xchg notl shrb xor sbb xor and lahf inc push fisubrl jge push (bad) and shr dec xchg lock inc nop add xchg sbb aad push daa fisub dec pop mov push stos dec int3 pop add test pusha xchg push daa scas push fdivrl clc ja bound sub cs xlat sbb xchg fs xchg das scas pop sbb inc clc movsl sbb dec or shll in repz pop loope mov inc addr16 mulb sub inc dec adc (bad) roll xchg mov ja add mov mov out dec add mov xchg rcll jno push mov ds shrd jo or or dec cmpsl add inc mov sub pop ds das jg push adc and test jns xchg stc add cwtl ja or rcll xchg add les xor add dec inc xchg push es inc aad sti cli add pusha shl push and insb push jmp gs xchg dec in mov in test cmp or add mov arpl aam add inc xor clc adc outsb add cmp rorb jo push mov adc (bad) aam add xchg adc push push jo aad cmp cli daa push inc dec test scas divl jnp sub xchg pop dec adc das inc adc push add insl repz add inc dec ljmp loopne inc dec dec mulb push ds and jl mov cmp or es or cmp or and xor sub pushf lock fst dec mov add fistl or (bad) dec hlt cmp test add loope xchg pop mov add jmp dec and inc aam mov xlat subl loopne (bad) call sub aam adc repz push cwtl lods add and test sbb cmp int xor fdivrs pop bound insb and hlt and ficom int3 push xlat imulb adc and lods fcmovnb dec test adc sbb cltd fcoml stos sbb stc pusha cmp add repnz test loop dec mov nop ret mov xchg movsb cwtl or or push faddl das cmc loop hlt push pop lock xchg shlb es sbb (bad) sbb ficomp lods pusha pop push jno mov jbe jb (bad) in in repz cltd mov cmpsb xchg lds cmp (bad) repnz fldt mov inc dec int3 xchg xor sub xchg adc fsubrl (bad) aam les stc fisub sahf call test lea lds cltd popf add ss dec and sub lods inc (bad) pop mov pop xchg pop and lret inc fdivrs or xchg mov enter loope xchg int3 inc scas lret push iret add dec lock and inc repnz sbb dec mov (bad) inc xorb shrb xor xor mov mov faddl popa mov cmp in in push inc sbb inc sub bound adc mov or sub mov scas mov pop adcl loope and pop mov dec mov flds xchg mov mov pusha add or mov and out add fild sbb es jl rcll cwtl rcr adc mov xchg (bad) out xchg push and mov (bad) and orb xchg and das cmp dec fs xchg nop xchg int3 xor int3 jno xchg push jno push xchg movsl xor and aad stos hlt test loopne scas addr16 in adc push popf push in aam cmp test ds movsl std pushf pop les test call push xlat or mov scas (bad) dec pop jno sub test dec incl mov add xchg inc cltd push or adc adc mov or push fldt dec lock daa mov leave and push adc enter das mov add cld shl add movsb sbb add mov les jg cwtl or movsl xchg adc cmp loopne push mov pop jl jbe mov aam push les ret addb cltd xchg mov mov test add test je mov cwtl jl dec gs fisubl pop push xor sub add pop mov into out cmp and add push sbb mov mov jmp sbb bound (bad) aaa add test add mov mov add cmpsl cltd into mov aas fucomip mov sbb roll and add js push jb cmpsl (bad) push call (bad) push or sbb repnz or pop lods dec jl add jl clc daa rorb and jb add add (bad) sarl pop ss mov adc stc rolb sub in mov and and add ficom add mov mov pop (bad) jae and pop add int jle mov inc add dec push fdivp sbb dec pop xor rcl jae cmp xchg jne sub jo test pop add add and icebp mov add sti sub add add into add push hlt movb sbb xchg add sbb or jmp fbld mov int add xor (bad) sub repz les push js add cmpsb enter data16 out add add mov int add and mov add sbb repnz shrb mov jle (bad) in add and mov ret pop clc sub stos sbb (bad) js mov std add or pop add dec xchg sbb cmp repnz roll sbb call and ljmp sub call sti into mov mov lcall inc sbb pop lock xor sbb stos add cmp outsb jae daa jb add jbe pop sbb dec fwait or adc add jg test mov aad xchg pusha test dec enter push fiaddl pop and insb pop (bad) pop inc push daa in xchg mov test sbb fmuls popl xchg adc and xchg xchg sub inc add push adc fidivl jl popf imul xor push or fidiv push jns adc lea sbb inc and jge mov orb xchg and cmpsb or inc mov lahf jmp xchg rclb jge dec dec rorl push pop addb in inc (bad) inc lret jg in loopne in add push das (bad) jl mov sbb (bad) dec jmp aam scas or stos or push adc das and les ja mov sbb mov add mov test cmp movsl les nop push mov sub popf add inc dec in add pop mov and sbb shlb outsl adc sub add mov (bad) aaa shll add inc add and call sbb out je add cwtl inc sub inc stos sub (bad) fsubs fisubrl fdiv add push or xor inc jo loope mov (bad) aas cmpb test cld inc test das cld test sbb es mov mov rcrb dec addb popf test or and lea scas sbb loope mov mov popa scas push aam or mov dec mov clc mov not add incb aam rclb ds ja jg xorb fdivs sahf cmpsl push add push test scas rcll inc loope nop mov nop and mov mov jl (bad) ss xchg add or js dec push xchg inc outsb enter pop mov xor test sub js les xor or xor add fs loopne leave and inc sbb nop in call and adc dec sar ss mov sbb js and xchg add aad cld sbb jl popa and inc loope dec jmp xchg mov adc add xor mov add xor fdivr incl jb push dec xor add (bad) push out dec int3 and add adc in shll add push cld mov xlat popa pop pop subl or insb pop push sbb dec test add int3 push pop mov stos cmp adc sarb adc add inc push cmp pop xorl xchg outsb sub ret loope jmp mov push shl pop out or jo das ret insb pop pop (bad) andb fldcw fcomp in mov cwtl lcall mov sbbb pop mov addl outsb or stos mov loope jbe add daa push xlat insl and and popa lods pop aam inc xchg or mov sub add mov xchg and test fdivrl das xor add push xchg (bad) dec mov fldln2 push xchg sbb mov jno ds lret cwtl adc add lcall add xchg push mov mov or adc jmp jl inc mov or mov inc mov or je frstor fidivr fisttpl dec lcall add xchg jg sbb push data16 sarb lods and push pop (bad) xor sar bound add ss mov test mov loop icebp rorb add xchg add stos jp rorl jns pop aas jae sbb jp lock adc fcmovnbe or inc xchg add pop mov xor sbb enter or pop in popa mov or imul inc and orl stc dec sub cld or or lcall mov test aad mov pop and xchg cltd jo add clc push mov push dec lahf cmp push je pop pusha add or mov xchg test arpl jae fsubs jmp les unpcklps and repz sbb mov pop cltd fsubl inc adc add mov ret vmwrite push cld add xchg int3 inc inc xlat add leave xchg xor mov mov adc les xor sbb pop mov int3 aas pushf push sbb xchg adc dec aad xchg fsub xlat pusha inc xchg gs sub mov call stos daa hlt imul inc xchg adc sub inc xorl mov nop pop pusha pushf add rcll pop sub push dec aam hlt cmp adcb int jge jns push inc and ffreep sbbl add pop test mov in pushf repnz pop imul nop push mov out sbb pop and in test add mov orl or shufps xchg orb push and jo,pn je add nop dec (bad) hlt bnd xchg test push sbb stos fsubrs inc aam dec mov pop mov jecxz mov and push lret or icebp aaa fstpl push jo jno fdivs rcrl rcr adc loop ljmp xchg jnp cmpb dec add adc mov jp nop aam fdiv push jb push and or fimul mov xchg in fdivr or push and cmp mov loope pusha cld cwtl xchg dec cwtl or fisttpl dec adc and xor sbb mov dec punpckldq jo fcoml ja and push mov cmpsl or jl adc adc mov (bad) inc mov stos out sbb (bad) xchg xchg rorb loopne adc and pop add mov cs or cmpsl sahf je pop adc int3 dec jb cwtl in pop pop flds ret adc (bad) std test push push sub or rorl pusha pusha dec sbb adc adc and fdivs fst imul sarb daa loop dec hlt mov mov mov aaa das add dec mov cmpsb lahf inc push gs sti cltd roll ja cmp lods cmpb inc mov dec add mov stc mov sbb js mov insb scas jns add or adc sbb test ret inc xchg xchg xchg mov adc in jbe lcall dec pusha and push popa cmp jns dec adc xor xchg movsl es sub push sub (bad) and or stos out push (bad) (bad) lods adcl inc xchg push in repnz sub inc fldt aaa jl lret lds cmpsl xor repnz dec add dec mov adc or inc test adc adc adc cvttps2pi pusha fwait add (bad) mov lock dec test jbe dec add or cwtl test daa addr16 nop test mov ja mov mov jo enter inc jne js stos dec mov mov and imul shll or addb mov sbb mov mov pop sbb mov popa bound or test add xchg pop icebp rcrl push sbb imul sbb cmp incl call add test and push fldl ja popa cmp nop and add imul inc je into jbe mov enter xchg in loopne pop aad xor xchg add mov adc jno pushf in outsl andl or jnp jno and popa sbb sbb pop sub (bad) aas fidivrl cmovns sarb dec fldenv xor arpl jl inc mov push push js pop or movaps dec outsb aam fidiv sbb pushf add fsubl stos mov mov or adc mov pushf ret int3 movb mov (bad) aaa fsubrs call xor mov mov cld push out xor xchg sub dec in sbb sub je xor xor add pop es aas mov sbb nop addb sahf lods add pop xor pushf call bound sub cs dec dec or rcll inc cltd cmpsl jp (bad) ss or nop nop push insb or outsb comiss add test fisttpl fidivl mov mov mov cmp sbb cmp mov jecxz nop lret js and dec mov popa movsl cmp (bad) sbb and add les outsb jne add mov dec addl dec sahf and cwtl je pusha inc or dec jg mov lea test sbb add mov js mov loope mov mov xchg pop fstl cwtl mov in push pop lods inc insb (bad) and clc add out dec mov ret adc scas cmpsb lock cmc arpl punpcklbw xchg fistl ret pop add std xchg inc cs in xchg push dec mov pop loope,pt (bad) xor inc add inc in outsb sbb leave cmp add scas push imul and sti mov push ja inc rolb (bad) int push pop scas mov cmp cmpsb pop adc adc mov add mov sub lods dec push mov and test fnstenv xchg add push dec stos cmc rolb pop aam (bad) repz adc pop in imul xchg sarb or xor ja add fldl js inc aas add jl imul inc shlb inc jnp add xor (bad) ds mov cmp lds je jns lcall push fild or mov cld mov loopne sbb js and jge dec xchg or push (bad) jbe push jbe sbb sub adc xchg aaa inc or or int3 (bad) icebp call inc faddl inc add or out cltd mov gs pop xor jle or nop pusha (bad) das add or inc pop mov xor fmuls jle xor leave mov sub push shrb movsb mov adc cld and add ret dec mov test push add cmp xor dec cmp dec sub loope mov adc lret pop or fsubrl fsubrs cmp sub int3 pusha test fnstsw movsb dec (bad) mov xchg and shr mov lods sbb bound and jp pop mov add jl cmp xchg stos mov mov dec or aam jns push inc mov enter test sub out push mov aam cwtl push call pop push mov dec pop push add loope bnd push aaa sbb sbb hlt adc add xchg test inc outsl mov std push daa dec pop add xchg (bad) lock jecxz push cwtl pop stos sub fidivrl in addl add rcrl add cwtl push inc xorl xchg pop pop pop mov pop cmpb sar sub jbe aas popf dec test cld je pushf xor xor mov testb mov sbb mov mov xchg pop inc pop xchg add mov arpl mov sub pusha (bad) add dec sar add les or icebp add mov push pop orb mov inc movsb mov jae in adc add pop cmp je aas pop push inc (bad) dec xlat in mov add fstps and push or ljmp fimull (bad) cmc adc cmpsl xor sub sbb add lret insb shlb adc mov or je push add out data16 bound xchg push int stos sub and dec addl daa xchg add das mov sbb (bad) fldcw fwait test adc shlb call mov ror dec and xchg sahf test clc gs cmp add loop test xchg cmpb cmpsb jge xchg mov clc xor sub xor or push dec es les insb cli lods push inc ljmp pushf iret mov flds and mov into mov pop push nop xor arpl lret add inc or mov push pop and adc push loop clc mov lods stos add (bad) adc adc jb inc hlt pop stos sub cmp sub cmpsb nop xchg aad adc sarb xchg (bad) sub popa push enter cmp dec das mov out dec inc xlat lret pop sbb imul xchg push xchg loop loope push mov jg pop bound inc aam pop icebp pop aam cmpb cmp lds or sar or inc sub js jecxz fs test add sub rol lods jb cmp and jno mov test nop inc sub or adc cmpsl add mov data16 mov or jno jl and loopne outsl inc test add and or push add adc inc inc bound jmp mov fsubs test mov in mov xchg inc dec push jecxz and loopne pop lods pop jae dec loop je inc pop test adc add add sbb mov icebp and cltd xor lahf rcrb movsb and add pop and push mov and adc and or mov and inc jae dec mov inc mov loopne loop xchg xchg cmpsb dec pop aam cmpsl mov test pop dec add loopne outsl clc add xchg popa scas mov addb and inc push das out shrb fbstp arpl js in inc adc and mov insl mov js scas aaa adc mov dec sub dec or fwait mov or push (bad) hlt mov dec es fdiv adc sbb ret sub xor stos jbe adcb nop mov sbb inc loopne sub nop inc loopne mov dec inc sub and push (bad) test mov lea xor mov mov les cmp addl sbb cmp sbbl cs nop add bound fisttpl loopne pushf repz imul and (bad) jl jl add jge cmp rolb add hlt int3 sbb jl and push rorb xchg inc aad sar dec pop xor mov (bad) loop pop push mov out loopne pop fdiv test ret adc loopne xchg daa dec movsl add cltd pop nop loop fistp inc aam mov dec jno sub stos loopne subb cli or inc mov add adc aad (bad) fnstcw sub (bad) fldt lahf add adc push call push rolb or xor add and or mov (bad) push adc push jno stos dec dec cltd enter push sub pop js and pop (bad) fs or in (bad) pusha sti andb test mov jnp dec add roll and sbb cmp test dec mov fiadd mov pushf push loope imulb or sbb mov xor out mov repz cmp fcoms mov or stos fwait ja enter cmp push mov repnz add mov dec lock inc aad fdivs push test or (bad) mov add mov mov aad roll sbb or stos push inc rcr movsb addb addr16 lcall mov sub mov pushf cmpsl dec cmp xchg mov jne dec add sbb (bad) lock (bad) push orb stos pushf push adcb loope es add mov or cmp push lcall ret and add imul stos mov imul mov cmc xchg add sub test insl test sub adc (bad) add test lods mov (bad) push repnz cmp dec dec nop cmp (bad) scas adc inc push push adc push loopne rcl fisubl jnp popw js (bad) jmp push jle mov xor clc or ds and add data16 fsubrl ja test pop add lea jns pushf add dec scas cmp popa adc add push lods lock sub add mov les mov je dec (bad) stos jnp ljmp dec js add xor xchg in ljmp and mov dec push xchg movntps sbbl add mov inc mov jo mov cmp xchg test test cld loope pop lahf adc es mov enter add dec dec cld dec push popf and ljmp repnz nop xor add or nop mov jmp fidiv adc call mov mov push (bad) lock pop sub aas mov jp inc fmull cmp adc mov or pop mov mov xchg mov or out mov jbe or push inc stos les stos sub test inc or sub cmp fs inc pop sahf pusha loop nop js add or add pop add jge xchg adcl xor pop or sub cmp stc add inc bound pop or stos sub and icebp ds cmp mov cmp add xchg bound xlat push add inc pop xchg jecxz rorb lss sbb andl fwait rolb add stos loope sub daa lods and sbb mov bound pop (bad) jg (bad) insb gs subb out or sbb add adc fcoms fildll dec xor (bad) int3 ljmp (bad) jo adc lret add lret aad je fimul fsub or pop ret pushf scas enter mov xor dec add out cmp mov jg mov ja daa adc int subb dec xchg xchg add jns jne sarb rcr cmp je test cwtl lds in dec dec push cmp in hlt out call addr16 cmp sahf mov jecxz and add jle adc lods test pusha add xor mov ljmp and loope inc or push add ljmp pop or mov or dec jb je inc xchg je add mov loope sub inc loop xor adc lods clc pop and scas sbb sub mov and cmovnp jo scas dec cmpl pop aas ret inc add inc or or xor pcmpeqb je in aam add aam jp xor mov push cmc mov fmuls pushf xor cli pop xor inc mov push mov jae mov add cltd mov mov or dec xchg stos jp lock fsubrl adc jb inc inc fs xchg xchg int3 adc repnz adc xor inc aam dec cmpsl cmp mov dec or lock push pop mov inc or in and sub outsl cmpb cmpsl ror fimull pusha popa jle fwait sub add scas xor dec add or mov roll dec add (bad) sarb cmp xchg jmp pop out sub inc inc pop ret pop xor add push push add (bad) dec add aad pop inc popa loope repz xor push add pop ss dec cli dec push xchg dec cmp js sbbl fsubrs or mov nop jmp xchg loop mov jb adc push add int3 lret std jge aam inc fdivrl sbb pop xor std cwtl add loop sub mov fcoml in push shlb or loopne inc imull inc cld sbb xor mov add lcall mov int jg rolb stos pop std orl xor cwtl or hlt push add je roll mov adc insb fmuls fwait mov adc inc jl mov movsl imul push adcl stc jae insb in push adc and pop add pusha es sub xchg and add imul dec fisubl fucomi (bad) lcall test jmp rcr ss mov ja sub fnstenv cmp aas out and cmp andb add push inc xorl lods sahf lock inc inc cmpl push dec or pushf in addl jge sbb arpl inc sub sbb push mov push mov data16 dec mov sbb pop push pop insl daa sub movsl loope inc rorb mov mov mov adc push mov mov in push add stos daa push (bad) js xchg out shll xchg inc lock dec lret add stos cmp cmpb fs sbb sub dec mov or or scas add js fdivrs sbb (bad) jo xchg das dec fdivs (bad) adc or jae jle sbb push xchg pop arpl add popf dec fnop movsl in js stos pop mov aam jo sub mov or or xor add push ficoml lods lods add aad mov mov sti add arpl test mov dec inc dec loope imul dec push mov and dec adc das outsb add add lret mov push shrl les mov add ficom pop addb push je cs (bad) lcall js push pop aam inc pop adc xchg mov add fwait add or aad xchg push cld or insb sub stos sub fsub cli (bad) xchg xchg jo andb mov pusha add mov out daa loope sbb ret adc add add sbb lss push int3 aas adc lods mov mov mov sub adc daa addr16 ds in adc les nop add fs sarb outsl bound add jmp loopne inc cmp mov cltd dec xchg mov dec adc pushf mov aad test lds or sbb adc push xchg jmp sub cmpsl pop push dec js sbb sub cmp loope test dec push cmp xor cmp insb faddl dec mov int3 pusha pop icebp cmp mov enter dec sbb mov inc das mov mov pop pop mov in pop or stos add stos lcall mov or mov adc enter mov xchg sub test lcall icebp into loope pushf jbe mov mov inc cmpsb mov cwtl xchg and sbb or sub sbb stos dec inc xor sarb leave and les fsub (bad) add mov insl lods cmp cltd mov push mov fidivl cmp cmpb xchg int3 dec repnz mov dec mov jl inc pop mov in stos jo push and movsl jle add push add inc mov push push aam sub cmp pushf mov in loop sbb cmp xchg in js mov lock push mov and popa shll lcall push fdivs cmp and push dec add fistpll inc (bad) outsl test mov gs ja sub loope inc movsl js sbb jne add adc std fwait (bad) loopne pop cmpsl add imul sub mov jo adc insb mov sbb cmpsb pop test add cmp inc sbb dec sub lahf jle popa inc dec or mov cmp xchg pop shll inc push in pusha inc scas js add add xchg or das gs pushf lods pop (bad) lods cmp stos xor xor popf push fcoml mov js bound in std add adc hlt xchg mov add mov add test andb cmp cmp pop sub les lods fiadd cmpsb add mov ja,pn or adc dec mov push movsb mov sbb cmp inc jb divb adc add jecxz test jmp sub enter inc sub sbb lds les popa and pop fs (bad) and (bad) or mov lcall and pusha cli ret push lret fidiv or lahf xor in xorl xchg adc adc or loopne ds stos push xchg hlt nop call mov pop gs or imul dec mov lods (bad) test add and cwtl jge cmp aas add or and mov mov jns lret jb,pn mov aad xchg sub mov push pop adc add or ja sarb mov mov enter int cmp cvtpi2ps add mov and add sub pop jne dec mov lock xchg call sub shll dec faddl fstpl push movsl mov adc popf clc adc cmp in dec pop jmp sub andb lods xchg jo and push fsubl cmp inc or sbb add jo xchg adc andb and cwtl popf mov push add dec pop inc pop in leave cmp movsl sub add or js or mov icebp xor jl sbb pop rcll jbe pop jp inc movb or je add cli add inc mov test push dec mov push arpl push mov ss (bad) lods rolb push adc fstpt xor scas movaps pop dec gs inc or jnp dec leave add stos and fnstcw xchg sbb test cmp sbb mov push or mov shr dec sub fsts les pop adc add aam (bad) stos iret inc in mov pop les inc dec jae cmp adc add dec inc push ret out jp call stos add addr16 and sahf or adc mov pushf dec mov ljmp inc lods icebp fmuls pop aas cltd xchg and test mov fwait sbb in push adc js xchg insb sub mov cmp xorl loopne les outsb addb mov or adc mov scas into movsb lods and mov mov mov pop outsl dec std and xor inc shlb movsb cwtl and mov loope pop sub add fisttpll push or stos gs clc fildl lret rorl lahf call xchg add cwtl push xchg dec or dec cmp xor in popa mov shlb pushf int adc test sbb mov scas or ret jl add lahf mov andb mov test loope xchg xchg add js cwtl mov out push (bad) loopne or jbe add iret clc cmp shll or fnsave nop sbb dec clc adc mov inc mov (bad) xchg cmpsl push mov lea ret jo add rcrb push popf into les popf adc jo mov lds inc push jns mov sbb (bad) pop dec ret call lods paddq push mov popa add out shl pop add sub repnz adc mov test jae pop push add dec dec cwtd mov js cmpsl hlt dec and mov cmp rolb cmp sub jo inc add mov nop fsubs mov sbb loope dec jle inc jae push ss jp dec cmpsl hlt lcall push int3 sub cltd add stos cmp add dec pop inc aam (bad) out imul or xlat push dec xchg and adc andl in dec xor cs test fwait add incl inc into outsb lods mov addr16 mov mov mov icebp ficompl std jp nop stos xor flds sar cld xchg xchg outsb nop insl cs and cmpsl inc hlt adc push dec lods adc (bad) (bad) int3 scas (bad) enter lea add out mov xchg jge cmp inc mov push push in mov and lret fsub movsb sub inc add cmp pop dec sub pop sbb xchg sbbb sub and or and add mov cli mov mov add push lcall and fiadd loop mov inc jmp fwait sub ftst xorb dec jge mov xchg arpl add ja lods sub roll fiadd cmp dec addb xor fst cmpl adc popa rol rorb roll xor adc inc enter dec pop dec inc lock mov enterw jmp mov movsb and jle add in sbb comiss cwtl fs adc pop cltd mov cmpsb stos xchg jo inc fwait dec xor jne les lcall adcl dec ja sbb bound lods mov inc movsl pusha add mov add cmp push andb sbb loop jo xchg ficompl mov lahf in ljmp xor es push mov mov mov pop mov int3 in dec (bad) fstl loop cmp inc pop xor stc push loope sbbl sarb fisttpl pop scas sbb xor fwait dec orb jne adcb inc loop ds push add in scas add (bad) lahf sar push dec out or rorb push nop fcompl loop pop js sub cwtl in bound rcrb or xchg or adc cld in jmp xor clc pop pop mov mov jo xchg xor aam inc dec jecxz jb pusha sahf cmp mov add cmp popa cmp and jg pushf fdivl outsl popa mov add mov xchg cwtl mov mov mov and icebp and fildll clc shl ja daa push xchg add xlat in aad pop fistl adc nop cmp mov add mov and pop pop cwtl xchg xchg pop add mov inc pop ror dec lods push fisubr or adc incl loopne dec dec xor dec lock cmp pop sub test scas mov add test test mov cld and call xor sub and insl nop loope mov mov cmp adc jmp bound int3 hlt (bad) fcomip mov mov and sarb jae mov or in and pop lods loopnew jg ds leave hlt pop adc and cltd cmpsl jle or push icebp mov pop inc stc fmull mov jbe inc fs dec jb add and nop daa icebp pusha addb mov sub xchg lods movsl xchg scas dec insb mov or adc test xchg out rclb dec orl pop faddl shll cld imul repz or push (bad) lret insb push adc jmp pop pusha push dec pop cmp xor cmp mov add divl dec dec sub call add roll mov test aam lea or or adc sbb movsb sbb mov pop shl cmp adcb push jo stos xor mov les pop mov test pop gs cltd mov sub xor pushf jle xor lret int add cmp dec movsl pop push aas ds loope mov adc add dec mov mov push cmc mov js inc call adc jge inc xor aam jno jne xchg in shll cs roll jbe bound inc and add test outsl data16 test mov fs test dec pop xor dec pop in adc fucomip xchg jmp pop and out ret popw or dec sbb lret nop into test aam cwtl dec jge shlb add add into inc fprem adc mov jb sahf push enter add mov bound maskmovq negl add push and dec push mov mov int3 cmp xchg push je (bad) subl outsl inc hlt sbb mov adc scas pop add loope jno orl mov adc lods xor flds mov rcrb push xchg mov rolb in int3 out iret add xchg mov or dec test mov mov jl pop test push lock subl mov in add sub stos lds (bad) mov stos jne xor movsl mov or mov inc adc xchg leave jo xor xchg push jb adc inc adc dec mov mov js mov sub inc sar (bad) (bad) inc mov fldt mov (bad) jae pop subl outsl cmp mov int or dec call (bad) push mov push bound push inc mov fild sarb orb add adc xor push dec and add ret pop sub pop add testl jl xor cmp dec fs pop pop or enter push bound sbb xchg test sbb push inc inc ds sbb pop sbb pop add call push mov fild dec xchg lock add push mov add mov cwtl cmp push mov cmp loopne inc orb rcrl push adc add mov xchg jp push fiadd adc xor cmp xchg cmpsb pop sbb or nop adc dec jecxz jo sbb add adc inc cmp push repnz jbe lods je add lods xchg test and jp call sti nop xlat push add sarl xor notb pusha (bad) cmp lcall cmpb adc or mov jno pushl (bad) popa test cmpsb jae mov fadds xchg mov (bad) mov mov add lahf adc add out and inc push adc push xor or or daa fsubs sub imul test inc xchg adcb mov mov cmp mov pusha mov add pusha test sarl rclb scas push pop sub fistl out sbb push test or xchg mov hlt jno dec xchg loopne loopne and test adc imul inc dec lcall or sub dec pop lret adc and dec call popw cmp mov cmp ljmp push push inc adc dec cmp add xchg sbb sub add xchg xchg mov sub sub add (bad) sahf jae cltd pusha and (bad) xchg inc fnstsw cmp lea sub mov (bad) fmull lahf add sub cmp rclb test pop rorl dec jl and inc add test int jnp cs sahf insl add add nop ds xchg lods adc in add pop mov js dec adcl push lock xor inc add xor daa je test lret inc mov jg,pt push sahf add bound mov adc cmp popl push xchg adc xchg hlt adcb jns jo nop push lret pushf cld test push push test and setl loopne push pop ret int3 scas and test add add sub mov das nop test xor sub or mov mov test mov mov ret inc mov and push pop push data16 out (bad) mov fldenv lret mov ljmp aad add mov mov add test loopne shll xor push aam push ds fcmovne xchg mov cld pop add mov jne adc sarb push sbb sub les xchg mov sub cmp shll cltd xchg in adc xchg mov or inc mov add mov push mov mov or and js push sub clc ljmp add popa mov jle test mov or icebp ljmp outsb inc and mov add (bad) sbb xchg or js out mov int roll aam test add jae fisttp shr loopne aam popa push sahf andb dec lock call sbb cmp cmp addl inc ljmp test cmp dec sub lock pop or mov add clc fbld insb jp cwtl mov xor add mov or fcmove enter sub lods sub jo fmulp mov xchg add or mov fmuls sbb rorb aaa jecxz pusha sarb addl frstor adc (bad) fadd adc dec in or test dec call add les mov xorb push xchg pop rcrb cmp dec or add orb push jmp lock fimul mov and push faddl inc mov movb or test or sbb cltd (bad) cmp ficompl or and inc outsb cmp loopne outsl gs mov dec in call sar pop mov push inc pushf imul cmp movsb in push addr16 xor ficom add xchg adc sub and push nop or cli and (bad) cwtl push inc rorl ja imul adc setno or add add xor or adc rclb js mov fsubrl stos cmpsl sbbl das mov adc test add aam add push push stc sbb test and mov xor mov mov movb mov subb xchg je popf pop nop mov push sub inc add push pop jge mov dec push aaa or cli mov cmpsl arpl xrelease sub out add in lret mov enter inc add fadds dec arpl and xor movb std rclb cmp mov popa xchg andl mov cli sbb or mov inc int sub mov mov mov add movsb mov loop sbb enter jg pop scas (bad) push or aad mov cmp xor and add popf inc popa lock add adc add (bad) aad jns push lds (bad) xor sbb dec and or ljmp sbb cmpsl jns mov stos or inc push adc sar in cltd into in gs sbb cwtl cli sbb bound out xor hlt pop jmp push add push cmp mov adc mov sbb push outsb sub leavew pop jmp push jne adc xor les test xor sbb adc pushl iret pop and or xlat push inc jl xchg subl dec pusha mov mov xchg and fwait add rorl lock int3 jge mov loopne mov in les insb adc icebp clc mov je add and dec jge adc mov push sti int sub (bad) xchg or xchg loopne out cmp rolb jb xchg or lock jnp add sarb xchg mov into xchg xor mov fucomip int jnp mov int3 inc mov adcl aam cmp lcall push fbstp push pop mov inc inc shrb mov dec add scas lcall sbb jbe adc push shlb test lock or enter loop das add and cs inc xor and mov add sub ja cmpb pushf add cmc pop inc dec call out and popl add sub arpl pop jp gs add fnstenv repz sbbb cld cwtl adc pop pop inc jb xor sub mov inc cmp cld dec cwtl dec xchg int pushf add xchg sbb push jbe jne out jns xchg fsubl scas jno stos dec daa fsubs and aas loope arpl push js mov js fimull insb adc sub in jno mov inc dec scas scas xor and cmpsb adc and mov inc mov jp dec popa leave and fdivrs adc jns dec xor mov into xor in mov nop lock stos pusha adc pop lcall ss mov (bad) mov (bad) and scas sbb xchg pop or addb divb xor js pop sub (bad) jo out xchg or and loopne push bound push adc adc adc or cmp js inc push es fs ljmp push nop enter xchg test mov add imul add jmp pusha les leave xor xlat push xchg xorl or jp sub repnz inc mov mov inc dec xchg add ljmp pop sbb xor jle mov sub pusha pusha sub divl ljmp out push test addr16 stos lret pushf jae mov pusha cmpsb pusha xchg add push leave sbb les (bad) stos subb add xchg repnz pop fucomip les inc add push in push dec push out je inc mov adc mov xchg sub pusha pop or dec lea sbb roll call dec pop add mov test adc js push ret adc jle xchg je xchg mov in jne xchg jo jo scas jle rclb xor add and sub dec dec into mov leave add cld add out or ds lods push shlb mov jge sub das lds mov dec packsswb test or jl cs adcb js pop loope push popa pusha jle dec pushf xor adc movsb sbb enter imul lahf or fmull test push sbb add (bad) int mov add mov inc testl sbb pushf jle sub inc arpl mov adc jnp mov push or inc enter xor lea scas add dec pop in adc lret or js dec rcl js call cmp mov das aaa pop rcrb push pop scas shll xor mov cld js repz sti mov dec xchg pop dec add clc push or cwtl aam jnp int3 pop or adc adc mov call mov mov sarl mov ja inc ror lods sbb mov pusha dec sahf push scas sub (bad) adc mov and and lret dec cmp rorb mov addr16 push lock push subl test int inc dec xor mov dec cmpsb cltd mov aas jns mov and cld lahf adcl pop pusha mov sbbl (bad) cmp inc and cld mov shrb push sub rorb cmp loop and add pop lea ljmp ret xor bndstx sub sub or xchg imul and mov add inc or aad mov mov cmp or pop and cwtl enter push loopne pop inc cmp add sub test cmpsb fmull out inc mov sub mov imul pop (bad) xor pop lcall in inc in pop in dec xor rorb aas (bad) addr16 add lret sti fistp push and sub jmp and and and adc aaa add mov fmull cmp cmpsb dec das fs xchg movsb andb pop andb gs sbb mov and stc je add xchg xor mov mov cs imul mov mov inc mov mov dec out xchg mov outsl xor sbb or sub inc or dec and adc fdiv jnp dec cmp pushf mov cmpxchg mov or add hlt pop nop or mov cmpsl lret and dec inc pushf fsubs dec insl pop (bad) mov mov add cmp pop stc jo pop and cltd dec loopne data16 popl je xchg pusha into adc mov adc sbb or and mov mov jecxz cmp xchg lret clc cmp es pusha leave daa mov mov add (bad) mov push test dec or mov adc push aad dec sub add jl inc arpl push aad sar and dec call nop mov mov outsl test push fcomip xchg (bad) mov inc jmp mov pop ljmp movsb mov ds fdivr outsb sub push push in sbb (bad) push out insb aam push mov les add pusha xor push fldenv mov mov lret in aad and and pop ficom adc cmp imul adc ss arpl push je push or pop adcl adc sbb mov nop mov inc sbb sub dec add lret push ja js push repnz mov adc inc pop mov shlb dec xchg sub rol pop mov dec inc or ret movsl inc mov sub mov mov mov cltd add and ss dec nop add inc xchg roll mov mov mov xor orb jb push dec lds (bad) mov out ja inc pushf dec and fwait mov dec cmp pop fs add mov arpl push add add push fsubr mov add cmp mov dec cmpsb add ret loopne loop shlb fs mov and dec sbb cwtl add sub pop daa jl mov push add out stc add aas xor jae lret add out lods push cltd loopne mov shr pop andl sub cli pop int3 adc arpl inc (bad) in cmc or xor in test test xor inc sub shlb mov les or sub ljmp add xor add int3 sbb pusha adc mov jo or fsubp lret test scas sub push cmp and jg adc xchg rolb dec arpl and xlat icebp scas mov add dec sub stos xchg mov push repz in mov test push in dec jl pop push stos mov icebp loop adcl mov jbe (bad) push out mov cld mov repnz or lret mov push jne mov pop mov pusha sar pop pusha xor popa (bad) daa adc out repz mov cmp rclb push and inc negl and inc (bad) sub imul dec push sbb sub and pop int3 or jne mov pop add and inc jbe jecxz push imul into xor mov lods sub ds sub pusha xchg xchg and jno cmpb leave sbb and scas mov inc cmpsl jmp and out sub adc nop or orl add icebp sbb dec xor push shrb mov aaa cmp push sahf and xor inc xchg xlat add lock and pop add cmp leave out sbb or and push push mov sub jnp mov mov adc jle fadds add aam sbb inc pop adc add popl sbb dec push add rorl js or adc cli and or adc or loop and mov sbb jne or add sub push stos add add mov cmp out cwtl adc adc xchg clc addl mov loopne xor test (bad) sbb (bad) test test cmp push add pop out xor nop adc js xor cmp es and test aam bound jne mov popl add aaa mov int std leave pop or dec mov scas xchg arpl mov push fistp add jns out lea dec adcb inc add (bad) pop orb in loop pusha sbb xlat mov je lods scas push xor orb (bad) insl push js push and (bad) fisubl sub sub fstpl out mov mov or rolb mov dec and fnstsw mov imul mov lcall push mov sub sbb mov dec cmp push repz sbb pop push mov repnz or bound and cli int3 cwtl fs jae dec scas into push add pop jmp les push in add cli sbb and mov jecxz mov mov inc adc mov test fidivl repz or dec mov pop es sarb js in push cwtl cmc or mov popl pop mov popa mov sbb pop lret xor pop sbb jo in fcmovnu (bad) xor out hlt sub dec and mov dec aad xor movsb mov lods inc or fld imul into sub enter das sub insb sti and xchg and add aas cmp sahf rol scas add nop mov stc mov pushf aad dec jmp xchg and mov dec inc arpl pusha add push inc adc jnp xor jecxz jecxz fadds out lahf xor cmp cmp call ss dec and inc or adc call lret pop pop sbb sub add enter (bad) pop and bound out sub xchg sub aam bound sarb cmpsl inc push and cmp mov add mov push mov movl mov cmp mov jecxz cld jle push addb adc dec jl ret add lods add call xchg loopne (bad) (bad) in push arpl mov xor cmp sbbb lret xchg lahf imul and rcl mov out mov pop les mov enter sbb js in test jns enter hlt add sub add jp ds subb and into xor mov pop push enter (bad) lock inc inc mov and fsubrs xchg xchg cmp cli xor xor pop lock aam push add jbe scas gs xor and xchg push fsubrl in std and int mov js rcrb dec inc pop scas mov les adc adc add call insb xchg hlt sub call mov and (bad) or shrb mov or add fstps adc pop mov adcl push movsb clc jecxz xchg pop mov test invd scas or sub out fild ror mov insb ljmp inc shr lock lock inc add je pop pop and fs cwtl push sub cmp adc in movsb inc inc dec push mov out push insb adc push adc aas std mov add or fsubrs sub cmp insb and cmp jno addr16 or mov repnz aad stc (bad) std mov mov mov add push dec push xchg jl adc xchg dec arpl popa cwtl movsl loopne lods lds inc int3 cld lret aad push pop xchg sbb lock jmp inc or mov mov pop jno jg and lret pop or pop add mov add inc push movntq (bad) mov test jp pusha cmc sbbl lds mov dec sub dec add jmp lcall inc adc add add aaa xchg out adc mov leave je add and repz mov outsb mov arpl xchg sbb mov pop pop rolb cmc dec mov and xor addl inc inc call addr16 sbbb (bad) jl insb negl add dec test inc lcall dec mov add inc add pop insl test and pop mov mov sbb jp adcb mov mov cmp jb out mov jb,pt jns cmp inc pop subl lret rol adc mov jno pop fsubp ds xor pop scas ficoml and add (bad) movsb add jnp ret (bad) movsl jecxz or stc (bad) mov or popa rolb adc in xor xchg popf dec aas out xor jo jl shrb clc daa xor fs setle and mov sbb push ret call sub push adc test pop out mov sbb mov add fiadd push (bad) xor not pusha stos pop add xor jecxz sarb (bad) clc mov pop dec or ret scas fldt test add add push sbb push push popa test add push mov jo (bad) mov dec adc mov inc (bad) xor cmp hlt in lret test gs xchg sub rol (bad) lret dec add mov js adc test faddp add mov xor add daa or bound in sub xchg lcall outsb pop xchg aam fstl cmp pop test xchg lcall add outsb inc popf xchg repz xor push cmpb lret aad jnp sbb (bad) sub xchg dec cwtl sub daa outsl lds xor pop or clc sub push pop icebp fsubrs rorb dec lea ret mov xor mov int3 add out pop jmp loopne jecxz or push insb (bad) fcoml frstor repz (bad) xchg mov adc test add mov mov add in add or imul adc js (bad) or jno test lock adc mov cld aas push pop pop adc hlt test xchg sub sahf mov push mov or xlat lds jecxz ret inc addr16 in sbb xor pop inc jae,pn cwtl push mov sub daa or je cmp (bad) push pop mov pop mov adc cmp adc mov push stc push dec or push dec xchg orb dec dec or ret pop in sbb and lahf into cmp push popa mov les cmpl fs dec inc mov pop mov mov push push shrb dec or jns in (bad) enter aaa and mov or je sub rorl psrad and popf push add inc add pushf in mov and inc push mov and mov int3 nop add or mov mov sbb iret shrb add (bad) rcl push out out outsl sbb loope or out pop out test inc add mov das or daa adc lcall jl (bad) adc or inc xor cli inc or xor cmpsb sub xchg jae push mov jl or and stc mov aaa and xor or mov and and sub mov and prefetch into and repnz add adc mov adc mov sbb mov fisttpll (bad) mov pop mov push mov into mov loop or or fimull xlat inc mov xchg cmp cwtl cmp or orl mov adc and add pushf jge inc in adc add movaps jl movsb and xor or add jle out mov mov adc inc loop arpl sub imul scas icebp inc jl or (bad) dec inc lods pop inc stc or popa les push or andb test and int jnp inc push roll xchg (bad) cmc nop xchg jo jno add add lds sub or cwtl cwtl rcr ja sbbb xor addb subb inc or mov mov dec (bad) pusha fwait mov fmuls (bad) and (bad) mov (bad) cwtl or or add mov hlt adc push insl and fnstsw push or and into adc sbb stos (bad) sbb jbe les xchg add testl or pop jae popa inc dec adc fnstcw nop pusha xor or popf es mov adc daa in or nop (bad) or or xchg inc jecxz test (bad) stc lret rolb and loope adc push mov and add add sbb lret or xchg pop push push and push mov sub or call and testb ss jle sti mov mov add push push std cmp sahf std mov xchg pop sub cmp xor pop add je pop (bad) int3 dec mov adcl mov dec out sbb ret jns call outsb and add (bad) xchg shrb jo mov and mov sub jns clc add in mov lahf and leave mov pop jno jo (bad) push pop adc loopne lea pop jle jp ret or and inc inc icebp int3 loope push mov pop add mov ret jnp inc and push push mov addl loop mov push mov push pop shll push (bad) ss add inc add mov add psubsw int add daa imul bound ret cmc mov mov adc out pop gs or and call pop outsl out fsubrp xchg inc imul inc je pop ja push inc test sub pop mov test sbb push std mov xor and pop cli pop lahf ljmp daa dec cwtl andl add fimul push hlt loope cmp jbe jmp add icebp dec (bad) adc iret pop aam fwait dec clc push add inc les mov and icebp sub mov pop lds pop loop (bad) lock or xchg xchg mov mov inc push pushf imul pop rorl test orb mov pop and mov and mov inc cmp push dec or dec jmp push lret adc fiaddl xchg pop mov pop sbb es rol add in fldcw lret sarb and loope push inc int sbb push jmp inc jle sub mov push shlb inc cmp or dec insb (bad) (bad) cld push mov sbb dec sub pop stos pop pop and adcl les jecxz sbb sub push mov adc xor fldenv enter pop dec push int3 test adc stos push neg dec add cmpsl mov es add cmp adc lahf les pop ret scas cmc mov icebp les fcomps add jp in insb pop xor cmp loopne or mov lock push fs repz test test int3 jp addr16 add pop sub or pop mov xchg ljmp xor stos or mov add addr16 push pop shrb push pop fcomps popa push or sub xor lea push sarl aaa cmc sbb sbb adc and outsb loope cli loopne pop mov cwtl inc pop dec mov and andl rolb jmp ja shl add aaa sub inc shrl adc pusha or push fwait and add push cmc mov xchg ss or fiadd sub ljmp ret outsl push paddb lock push lods push into sub addl and mov cmp pop add repnz xchg dec and push pop sub push addr16 ret or jo add nop xor outsb or mov jecxz and push and adc mov or push mov or or xchg outsb xchg mov xchg pop sbb fnstenv mov mov push loopne mov mov in mov imul push imul sbb stos push push cmp push gs jp ficoml dec pop pusha inc mov aaa ljmp push fsubrp ret lret sbb in add or lock addr16 mov or (bad) xchg or lret jge xor sbb cs push or out adc pop xor xchg (bad) pop ja cs dec xor (bad) js test jg xchg adc sub cmp xchg mov add push sub dec inc jp sti fiaddl cs cmp mov lahf inc jnp push out adc jle xchg es aas addr16 add sbb out jecxz jl inc or cld imul mov add jnp sbbl cwtl dec pop repnz sub jge xor sub jle pop push (bad) pop add push aas jno (bad) push dec inc not cmp test dec lret inc daa (bad) les sub add pop mov add xor sbb insl das (bad) fiadd sbb adc dec pop lcall mov push lgs in xor loopne add imul pop pop shl push in pop push ret (bad) adc jmp aaa push jo add sbb sti adc dec lea lsl scas cmp movl or pop push push idivl lea sbb shlb adc pop or fstps and mov imul pop sahf ds push or pop pop or xorb push data16 jge pusha jno cmp scas mov cmc (bad) shl pusha add pop loope,pn sbb or add xor std adc out dec pop sub jmp adc mov push in decb and and xchg push lret cli dec repnz aaa pop push mov or cmc pop inc enter inc and lcall inc out add mov lock ljmp or mov test push xor fwait mov mov or jbe xchg pop stos repz and push xchg dec jo inc inc push mov xor add push mov cld andl pop dec cmpsb push fiadd dec pop cmp andl sti or out adcb adc pusha in pop pop cmp (bad) jle movb pop ret test cmpsl xchg sub gs jb pop lods lret cwtl shrb (bad) sbb pop inc cmp and icebp xor fild (bad) push int3 cmpsl mov add imul ds xchg (bad) or test push push mov add scas or and push std cmp pop sub pop pop pop inc dec push pop leave std cmp rcrb movhps (bad) cld and sbb out in mov fwait sub and mov push dec mov incl rolb in aad aam sub pop popf cmpb pushf jmp ja and cmp inc fisttpl add push add or push (bad) jmp hlt adc add push and dec xor push jno and cmp cmp sbb int push pop js or shl cmpsb cmp sbb in mov xchg inc xchg lea mov mov xor fsubr adc addr16 push and dec cmp ss cmp cmp popa jmp add ljmp or adc dec ljmp lock xor xchg xchg sbb pop push shrb ret pop mov jl or jmp add iret pop add pop out pushf jle dec xor aad or sbb cmp jmp dec xor dec adc dec shld jne jo pop clc imul mov pop inc mov shr cmp movlps test add (bad) dec xchg push xchg jmp add mov int cmp or dec add pop sbb popf or int3 je push (bad) nop cmp push and pop stc dec aam (bad) lret push rolb fidivrl push mov shl hlt fucomip xor dec xor or int add add sub orl (bad) cwtl ljmp sbb sbb pop and cmc mov je mov stos adc lcall imul or inc pushf push add pushl jl enter pop add pop push divl mov pop and adc flds lds push xchg inc xchg adc cmpsb push ss ret push add stos cmp cmp ret mov ficomp mov fiaddl mov addl cmpsb push pop lea cmp or shrb lret aaa jmp dec sub dec jne pusha inc (bad) icebp pusha sbb add push sbb int (bad) shlb adc add push xchg xor mov push add jae sbb call push add (bad) pop push inc ja popf rcrl cltd dec jbe aad jle shl xor bound xchg push push adc push sub vminps push dec icebp add push cmp jge sti or push xor icebp push rcrl scas icebp ret mov cli fwait pop rorl nop or loopne xchg stc repz cmp dec jmp andl push decb mov and hlt in pusha cmp idivl push leave pop pusha js popa addr16 sub (bad) ss cld cmpsl das aas je xchg imul into not pusha (bad) jle xor inc mov out outsl pop and jl ret pop call icebp push adc and lock lcall popl fwait and mov xor cmp arpl mov or adc cld not pop mov imul lret ja dec add inc push pop mov dec clc add or jmp ror lret jmp mov mov push fstl andb mov adc fildl dec and add push add inc xor pusha pop out mov (bad) and add pop dec in and pop loop loop rcll jle xor push sbb adc add push mov cmpsb adc or pop push mov fnop jl jmp jg jnp add loopne xor mov xchg mov and shll pop pop testl jl xor and pop dec and dec clc inc in push jmp je mov add enter es xor imul or or mov jle cmc cmp jmp jl add add jno add xchg (bad) xor aaa (bad) subb imul and and xchg hlt xchg fcmovb dec mov pop mov add cmp (bad) xor adc fcompl aad inc lret ss push mov sub pusha mov dec int add movb roll sub jae adc add fnsave pop shl mov mov add std pop jmp dec out sbb cltd pop cmp (bad) fisttp inc daa sub adc aam cmpsl mov rorb mov clc dec lret imul xchg push cmp or jo cmpb sbb sub addl jae out jmp std pop or or adc dec divl int3 mov jge loop popa and pop test or add jmp rorl and mov add jge fsubrs dec sbb mov add iret push mov push mov jmp sbb and in sbb jl int3 lcall out repnz test jmp adc mov push clc aam movsl test hlt pop push dec adc inc cmpsb add cmp cmpsl mov push jnp xor cmp mov pop adc mov incb int sbbl push sub lds ret sub push les inc sarl add in imul push gs jmp pop add imul inc mov pop xchg mov xlat loope sub pop mov pushf mov and neg jmp mov daa or jg test out inc mov nop lock mov loope add sub fcomp jo aas (bad) idiv jecxz mov (bad) mov xchg cwtl and (bad) adc adc push inc jae (bad) idivb jae aad sbb fidiv or dec and cmp or not push push mov dec icebp mov xchg sbb mov and fdivrl cmpsl out sbb and test rcr add mov sub jo insb subl pop insb add or push repz ret jbe jge pop push pop add bound pop and pusha add ficom add xorb pop pop cmp into sbb popa lds add dec xor rcrb in xor adc cs push pop sbb push cld inc stos mov pop push leave add shll popf arpl aaa mov add xlat xor lret pop push dec push push add jmp sahf or mov les ret aas push insb int adc ror outsb mov sbb add out pavgb xchg pop and jns je xchg or js pop or dec add bound and add or iret jg das neg (bad) rcrb in mov add fimul dec movsl pop inc push jo sbb repz scas cmp mov jl add dec loope clc stc pop xchg add sub pop push xchg js dec mov xor in adc in sbb xchg fiaddl jmp out mov mov push xor jmp jmp loope insb sbb xor and dec hlt lods push or mov jmp pop movsbw inc push pop imul or arpl and cmc dec sub sbb pop js arpl dec mov icebp (bad) movsl adc sub rorl xor mov pop jo sahf (bad) mov std xor cli aam xchg pop inc add lods (bad) inc or sbbb popa dec rclb jne or cmp (bad) sahf inc push pop and inc inc enter lods adc cmp movb call pop shrl leave and dec inc test (bad) sbb ret push dec orl bnd or jge cld adc repnz sub ficompl inc pop repz add pop leave sub inc cltd dec and pop inc push mov jne popf sub pop and (bad) mov dec jne mov fist mov pushf jp push adc call aas xorl pop xor mov mov das xor push dec push mov pop das and shll or mov sbb xchg push jmp in xor loop (bad) jae adc mov in mov sbb or inc sub sbb pop insb pop push shl into jbe or clc fstps mov shl push xor or shlb adc fisub dec push push push xor (bad) jmp stos or mov mov arpl xchg adc pusha sub icebp lcall rorl test (bad) stos cli push ljmpw sub sub add fnop dec data16 nop xchg bound jecxz mov or push mov inc fcoml xor dec push mov cmc cmpsb cmp sbb mov sbbl add jae add xchg and sub je (bad) sbb sub cmp lret cltd insl push lcall push jmp push sub leave sti jg sbb dec add sbb leave sub les pop out stos xor pop sahf sub cld mov cmp lods ret push rclb bndstx into sub popl add (bad) xor sub sahf cmp out and jmp dec int dec adc fbld sbb jl jp in inc ja mov inc mov outsb add jmp dec mov mov test loopne fwait inc movsl shlb pushf mov int3 push dec sub arpl mov dec xchg and movsl fmull data16 pusha inc xchg fwait jb cmpsb test and enter lock insl in or pop add xchg ljmp xchg xchg adc xorl and mov (bad) fxtract or call shrb fldt push (bad) shr sbb das aaa add sbb push inc int pop popa scas (bad) out lods movsb loopne (bad) pop xchg sbb pop xchg enter cmp jmp (bad) lret dec stos add cmpsb cmc addl pop add push and in inc or incb push add push mov shr sbb sbb mov lret pop mov adc rcr add fs repz mov or xchg (bad) lahf push cmpsb jl imul xchg push cli jnp pop insl jne cs or fadds sub (bad) jle cli and pop push dec mov aas xchg jno je cmp jle add adc and mov xchg les jecxz xor or imul dec cwtl push cmp inc scas jle add (bad) xchg movsb pushf icebp sar push mov pop or divl adc jmp bswap cmp (bad) cmc cmpb in push sub ss adc or jmp stos es in stos inc ljmp push add sub rolb daa inc xor mov iret or mov adc sub xor popf out adc test or or add mov stos stc mov clc adcb push add or sub dec dec repz dec jnp mov adc push xor cmpsb aas add fldl gs add xorl (bad) imul ret sub cli daa pushl pusha push mov add jmp add cmpsl inc cmp jb jmp dec sbb jecxz (bad) in dec add call lock jno add test mov icebp jae fnsetpm(287 rcll adc cmp pusha push lret pop pop inc cmpb push and inc aas push sub jae dec cmp notl pop mull repz inc (bad) lret jo pop or aam jp or add stc push ret pop cmp push adc pop pop aad pop push jns adc mov mov cs pop or push jnp mov cs jmp push enter pop xor push imul xchg push pop add aas es mov outsl test imul and inc js bound push bswap lret out xchg add push enter pop mov push sub shr cwtl int mov aam into pop add sbb fwait das jmp mov xchg push aaa insb xchg add insl xor sti inc repz mov jle in jns gs ret (bad) and push jnp push je jo clc movsl insb push mov (bad) adc dec jecxz adc and mov (bad) xor fstps (bad) roll aaa mov enter adc push rolb inc rorb jecxz push enter das inc scas outsb insl notb cmp sbb add cmp loop cmp xchg xor repnz xor mov xchg (bad) cs sbb pushf pop decl cmc imul mov mov inc mov (bad) adc jmp mov push sub pop add pop into inc xorb dec insl push sbb or jmp add ja jae and rol fadds lock xor dec push add add or jmp cmp das jno (bad) sub add (bad) das dec xchg inc fsts pop pop rorb push push sbb popf sub in pop stos (bad) mov push xchg sub icebp xchg adc xchg repz stc pop pop (bad) mov add sub bswap add push mov sbb stos or lock sbb jmp inc and lock mov insl jg xor push cwtl adc cmp and push pop movsb sbb pop inc or jmp or xor ret arpl ret dec inc cli sbb or in scas dec repnz inc or pushf sub pop icebp mul pop pop pop jno pop jmp out xchg add xlat adc cmp in or sub mov sub cmc pusha push mov out pop mov mov push fs out push mov add in jge pushf rolb pop mov dec insb cmpsb or mov fisttp push insb push pop nop imul mov imul fldcw (bad) xor ror adcl adc fadds js shr inc ss push les inc push cmp loopne sub xor and cmp pop scas jecxz int loop divl test movsl jo sub je or push mov push outsb mov adc stos aas scas add shrb add pop fcoms dec xor push es fnstcw mov (bad) jbe or bound push mov inc jmp les sbb in sbb mov inc dec lret ficoml xchg loope xchg sbb arpl cmp xchg in mov and jb xchg push cmp push fldenv xchg push in rolb out xorl xor lcall mov and adc ljmp pop adc insl test je mov push cmp mov lods lcall mov out push mov pop adc mov push adc cltd or lahf push mov dec or dec and psrld mov mov imul data16 xor repnz lods rolb cli ret cmpsb aaa (bad) inc xor in clc sti gs jge inc xchg mov add push push repnz sbb add push push cmpsl xor xor cmp or not inc adc and js jne push pop adc pusha pop pop out pop das fs lret add loope adc adc add negl out popa jp adc sbb xchg jl or mov mov cmc movups pop inc cmpsl in xor cmp es xchg out dec add mov xorb leave pop xor sub or cmpsl fadds fldpi inc in mov pop xor mov pop test ficom inc adc daa sbb cmc and dec xor add jg lret cltd lods sbb push fmuls adc mov xor sti jmp out leave push fldt jmp adcb push add mov sub lods fmulp testb xchg ds insb adc push push fdivr popf mov adcl push push inc mov pop cltd add jmp sbb lret les icebp (bad) inc loope (bad) mov pop nop loopne xor add or dec and or push add test xor nop pop push add or inc push movl and push jle rolb lahf jl testb xor sub pop sub insw or popa adc add push in out fldenv jb jb inc dec jp dec dec or jp mov and add push out call fcomps cwtl xchg sbb pop pop icebp and cmp or mov or sbb jae xor push leave dec xchg jnp dec ljmp push sub dec push mov pop hlt aas (bad) xchg dec xor inc aam mov jno sbb movlps xchg xchg in add mov popa sbb jl xlat mov pop push es cmp out cs ja cwtl pushf jge push fisttpll add push js or pop dec cs bound and fimull ds or add sbb lret mov push mov rcrb push push mov jno jle fild mov fisttpll lods add outsl push xlat sahf addr16 movsl popa jmp out push mov and loope dec cmp popf adc lcall fidivl mov cmp in push inc cmp stc loope sub imulb xor (bad) hlt movsl adcb push xchg addr16 or push xchg inc inc pusha or mov inc and jmp loop mov sub xor pop mov lcall mov sbb adc cmp or loope jbe sti add pop lret lds cld add and fcompl orl cli movsb dec out (bad) adc lods adc cwtl rcll add dec push add cli rorl pop (bad) dec lds imul push sti mov jb enter pushf add dec pop ret insl out and fndisi(8087 sbb loopne (bad) (bad) xlat outsl out mov mov sub fldt pop mov push add dec sub add or add popl adcl imul xor hlt sbb out and js jmp in dec jl sub fidivr nop xchg and out mov sub pop sub cs and jge popf mov mov lcall jno adc popa insb pop movl pop pushf jnp mov jne push jae jecxz sub fs test xchg and push das stos and dec into add pop cmp mov mov pusha dec dec mov lea repnz je cmp jle xor mov cmp pusha into adc sbb mov jmp bound push xchg ja in mov and cld das je mov inc fsts pop cmp jmp push rolb cltd rcll pop sbb inc loop (bad) dec jge add (bad) nop sub cmc cli dec gs lock jl mov jae mov jae mov lock mov add sub nop push rdtsc arpl aas sub push and jmp inc cmp movsb add nop or mov clc call push or jmp cmp adc jp add dec js cmp outsb xor jp pop iret inc or lcall or pop popa inc sahf sub dec dec pop push and pop sbb in jmp add xchg cmc in xchg sarb or jmp push mov add daa cmpsl aaa test or add sub adc pusha in or add gs dec adc jmp js pop pop inc (bad) btr dec fidivr and fisubl push dec sub xchg dec rol iret pop (bad) test push add cmp cmpsl mov adc inc add and push xor outsb jmp xor ret push fstpt inc icebp pop xor out stc lret sub mov jne outsl imul mov jmp roll popf mov sub add ficompl xor pinsrw loop ficom xor push in leave adc bound and xor and mov pop mov cli aaa sbb pop (bad) shr xor stos in rcr push push sbb jmp dec sbb dec adc cmp ficomp add xor in or mov test leave add pop jmp add mov xchg rclb pop and pop mov add call lock fcompl mov shlb add xchg push mov mov faddl neg sarl (bad) push popf ret inc sub ja sbb jbe xor stc int mov xchg xchg inc hlt jbe sub xor lret and xor test fincstp fistpll or mov sbb stos or mov jnp pop push mov xor inc or xor add movsb mov add movzbl inc xchg jmp in outsb cmp jl sbb sahf jg add je add inc sbb bound sbb test sub cs xor adc and fsubrl faddl test and scas sub jmp mov xorb out push lret jb push jmp nop or lret (bad) mov dec (bad) xor or jl nop popf lcall or icebp mov dec xchg pop mov inc inc push xor sbb sbb push or dec xchg add pop push stos push cmp ljmp sub inc add inc xor out xor shr jbe and add jge cmp pop pop adc xchg rorl lret das jbe nop adcb andl xor fidivl add add mov lea es adc pop movsb push aad and daa out dec jmp or add or add sbb cmc inc scas dec std aas rol shrb jge btc jg ret add sbb (bad) or fdivs fs jmp add cmp push push inc fcomps dec stos pusha jge mov add shl add (bad) aas subb fldcw xchg ljmp and (bad) sbb add sbbb ret mov (bad) int3 not sbb ljmp sti push add test xor pop sub rcrb inc setl lret inc loopne in jno aam xor ret imul ret xchg fcoms jmp test xchg sbb pop inc add loop push (bad) sub sbb in ljmp imul sub mov stos and les imull mov int out add jmp dec cmp (bad) jbe sar stos das hlt adc add cmp js test add jmp pop dec pusha xchg mov aam dec (bad) push adc inc test (bad) test (bad) cld and push jl mov xchg jle fucomi (bad) jg push cmpb mov jns mov repnz clc xchg loopne iret adc out jae dec out jbe je jbe add shrl mov add dec push clc jecxz adc (bad) mov mov xchg bswap push loope xor addr16 inc dec inc enter mov pop pop lret out pop add notl arpl sub jmp or add jmp jmp push test fcoms lahf in dec lods mul out xchg daa sub das jmp leave jo cld push dec mov lret cmpsb out xor xor pop add repnz jle pop inc mov test stos sub call movb aam mov ss mov jae leave loopne mov dec mov jle sub xor push leave gs je aaa lods push push in nop outsl mov or lcall jl out aas cmp jnp loop push in lock out cmp adc (bad) jns mov push push pop push push sub pop aam push sar cmp add mov out xorb push push push push adc cmpb pop fcoms nop shrb aas rorl dec sub add push ret xchg gs and or push or (bad) cmp das enter adc mov adc fistp testb mov cmp mov add repnz push clc scas cld mov dec nop mov je and or jg add xor clc rcrb sub and movsl cmp mov xchg and icebp in divb add (bad) push les push movhps stos in xchg in lods imul push adc push cmpsb repnz cli push cmpsl lds push mov clc (bad) jne in pop pop pop punpckldq cmp je inc call xchg in sub sbb data16 (bad) pop mull pop lock lock jg add (bad) add add or rclb in xor pop sub mov insl push stc loopne sbb dec in jbe cmc pop xchg cltd lcall rcrl or popa mov lahf add and jbe jmp call icebp xor pop mov pop jmp and outsl outsl mov in inc xor fwait stc inc xchg mov mov pop dec pop lcall jo mov mov xchg (bad) adc ljmp sub xlat sub movsb xor imul mov jmp or xchg lcall pop pop add mov aas dec repnz xchg pop mov jo mov mov dec sub pop add cmp mov add imul pop or jmp push and or sub pusha mov mull lahf call cltd test and out sub insb loop xor pop push fldl inc loope push cs xchg lods divb mov push sub inc pop mov and add xchg sub arpl movsl mov xor scas jge outsb add push mov pop fimul push adc adc or xchg and push push imul sub dec add jmp xlat out std cmp insb xor test out out mov in (bad) cmc idivl pop xchg jae loop inc mov addr16 or ss leave into inc xchg insl inc ss cmp cld push movsb mov push add loopne clc push add sbb fnstenv push xor popa pop mov in cmp and push push fiaddl (bad) loop mov negb jecxz jmp lds rcrl mov or add xor xor cmp repz or push lret pop add add push imul loop adc xchg addl jge mov inc xor pushw jnp outsb mov lock push loop adc scas pop into adc (bad) mov mulb jb repnz fs ss cmp rcl adc or jmp loop in repz cmp clc sbb pop xor xchg cmpsl fsubrl push push es or nop cltd xchg repz enter in sbb lock inc jp repnz push fsubrl or cmpb stc cmp mov fisttpl pusha dec ds popf popa outsb xor mov lock dec and test jg sub out add xor pop inc xchg js or loopne dec sub mov pop loope (bad) adc or das xor lods add fisttp push shll popa pushf adc fs (bad) lcall aas gs sub xchg push or in pop push das push sub push imul pop push subb cmp or jne jl pop mov outsb xor mov and pop test push or fiaddl cs sub push add shl shlb and inc dec cld lret mov and add pop adc add mov nop addl push test sub jmp insl xchg jg and xchg add inc jmp mov ret push push loopne or dec or adc test add jmp lea mov adc test xor rcl test pushf clc jns lds pop repnz cltd clc stc xor rcrb lret scas dec fadds cmp sub jns cmp insb add pop xchg jnp xchg int3 into sbb add or inc mov jmp je xor (bad) and dec and sub xchg or notl iret adc inc pop add loop dec and or pop push mov sub jo pop cmp je push not push add int ret rcrl push fldl and dec (bad) jno adc xchg rolb push popa call out push adc in add or or pop (bad) mov pusha adc js pusha pop cmp xchg mov add and mov jb sub jmp cmpsb arpl dec ljmp je sub mov decb repnz mov arpl or jecxz pop (bad) cmc cli lcall iret or fstpt push iret lret push add push dec add aad repnz shrb and adc pop lock push add jmp loopne daa cs xor arpl into das mov loopne and add mov (bad) add mov push xor inc sbb mov shrl mov pop adc orl scas jmp pop adc das or and cmpsl add neg inc cmovno inc xchg sbbl add mov cmp je xchg add jp (bad) pop mov dec stos inc pop or xchg fsubrs das cmc pop inc jecxz xchg into sub jae sbb pop not adc sbb xor sub jmp push xor cli shl sbb out loope mov out cli (bad) int3 fadds je cwtl sub xor push pop pop pusha jl add lret nop and adc push cmp rcr lret push pop add or sub mov jmp pop shr xorb lret outsb unpckhps jmp mov mov das xchg jbe imul add movsl dec fimull sub das inc jmp cltd xchg stos add mov xor sub popa out lret xchg sub mov inc jno add dec ret sti cltd flds mov mov fsubrs dec js ret mov or add cli testl addb neg jnp dec or jmp cmp pop leave aam jo clc or mov in lcall mov sbb dec sbb adc dec test jg pop push or adc inc fnstenv add inc enter push cltd sub addr16 aas jg pop xchg sub cli jb pop inc pushf fucomi ja imull cmp test ret sbb or (bad) xor xor fs sub sbb add inc call pop dec push and jmp or incl add repz or imull lret inc es pop out cmp and out push iret xor test mov (bad) shlb aad cmp ret xor or add cmp lock aam xlat and sub add dec pop push popa or pop adc push sub addb add mov sub pop push in (bad) mov push mov inc aad outsb dec (bad) hlt fmuls in fdiv stc add out mov repnz ret out les stc cli xor adc outsl out xchg dec or sbb inc lock cwtl push and jo cmp in mov fs hlt imul sub fs mov jo mov inc pop stos mov push jbe add hlt sbb shr fimul push mov maxps pushw or jae cmp add inc in xchg dec or inc mov aas jmp aas flds pop and mov push and sub sub daa sub mov mov faddl mov and enter int3 or mov adc (bad) pop inc pushf mov mov lods leave loope fisubrl push jmp (bad) lock mov out and test pop (bad) or push or push xchg sbb add sbb mov shlb sahf ss loopne mov or mov in aas lret adc add fldl2t (bad) aam xchg into add dec js repnz jmp out lahf dec test mov mov add push pop lock dec push dec fimul add (bad) or mov pushl fnstsw sarb add push adc aad hlt or xchg dec movzwl jne cmp push arpl jmp (bad) adc into add jb push data16 loop cmc pusha dec or pop pushf or inc adc mov das loopne imul xchg aaa inc andl sbb add xchg and push (bad) icebp pop sub push add add fwait enter push or sbb inc stc testl inc je and or das lds popf adc scas enter xchg inc xlat (bad) clc scas imul xor mov xlat inc xor daa andl shr mov repnz es pop xchg sbb and call (bad) xchg in adc loope (bad) xor (bad) lahf jl xor and and jp pop inc adc outsb push xor jns not (bad) or jecxz aam gs test adc adc add cmp pop fsubrs out mov cmp loope mov cmpb add fdivrl jb loopne (bad) outsb adc sub or movsl stc rcll pop add ret push sbb loopne jnp pop sbb rol push ret in and fs pop cltd leave jbe daa push loopne sub or pop lret enter add sbb sbb inc fs sbb insb sub ret cmp cli pop add sbb (bad) pop adc ret adc (bad) rcl test imul push jbe push mov inc push add inc cmp mov or int3 (bad) or mov pop add jmp clc ret fldcw out jmp push push mov or (bad) jnp adc adc cmpl (bad) sbb fisttp aaa je cmc movsb mov and jo inc sub pop mov jle popf dec and rol movb add mov pop pushf divb repz pop repnz fild push mov jmp bound repz (bad) (bad) imul mov ret push mov insl push dec push or fisttp pop pusha pop out daa lahf xorl popa inc (bad) lods es sbb movsb dec pop pop or pop sbb out lret icebp in cmp daa cmp push mov fsubl mov push mov mov pop lock add sub dec sub push jae and or cmp (bad) int enter pushf adc pop mov dec insb adc adc mov lods fistp jge fsubl jle jo jae hlt gs adc adc and and imull adc arpl sbb mov mov shl mov ds mov hlt push bound mov mov dec ljmp push jle faddl sub cli jl inc mov cmp std shrl jge (bad) (bad) test mov pop loop fistl adc xchg sub lods xchg or jecxz out inc push popf lods test ljmp pop xor repnz fidiv nop fimull jg push jae enter push adc or push imul mov mov sbb dec add pusha int ret pop (bad) xchg clc fdivrp pop pop or mov aam cmc or es mov or out add mov (bad) xchg movsb sbb (bad) out jge jg dec les ljmp nop or and rorl dec lret sahf fstl in sub push xchg js ss and dec add jmp stc (bad) rorl es stc nop pusha or jg add cmp andb (bad) pop dec mov pop cmp jno jo push mov jg in rorb push lods pop js cwtl or ret adc imul and imul or sub add mov sub cld daa mov add arpl mov add das jmp ret fdivl rorb push jnp ret mov in sub lods and add lret aas or (bad) and into lea push popl hlt je inc cmp and cmp jno,pn mov fcoms or push jb mov movsl pop pop jbe dec aaa and mov sub hlt imul lret es xor adc jmp or sbb cmp rcrb loope inc aaa mov xlat jnp dec loop or mov bound mov jns sub sbb inc or push test mov loopne xchg push and icebp cmp ljmp (bad) mov jle test add scas xor sbb lea fsubrl fstps mov jg pop fildll mov or inc loop not enter sub cmc cli inc xchg dec xor mov jmp push movsl jo mov cmp mulb or leave and mov push pop inc cwtl or sbb push imul je ret inc enter cli movsb inc and xlat push pushf movsl mov data16 ret pop fs jne sti jg fsubr sub mov sbb mov pop test xchg jg push outsl and sub fmul xchg cmpsb sub inc add xor lods jnp cltd mov (bad) outsl inc jnp or daa inc xor mov jno mov dec daa inc (bad) xlat sahf jecxz mov movsb lret dec (bad) out and mov addb fildl or and (bad) into and pushf lock pop pop scas bound icebp (bad) or sbb imul unpckhps imul ret pop push sbb psrld jp push add mov pop sub inc pop add pop cld sti mov pop stos push inc xchg push push ret dec mov xchg (bad) push loopne pop dec ds pop pop sbb test movsb add adc or cli inc pop cmp or pop or xchg mov mov sub pop pop nop andb pushf xchg loop push sbb cmp out dec (bad) hlt out adc dec push (bad) jmp loopne pop pop xchg mov pop out xchg lcall cli mov push cmp lea ds jno push cmc test xorl xorb sub or jp xor mov sub fist pushf xor lods popa dec sub mov cmp scas mov mov push testb rol fldenv push lahf xor push sub push xor or pushf sub lock adc ljmp addr16 cmpsl jnp adc mov inc add out mov cmc pop add cs scas push dec pusha lds addl inc sub dec cmc cltd repnz mov mov pusha mov add and mov jbe addr16 loopne push add incl je lods pop jbe push mov fistpl jno ds cs stos mov pop rol icebp test adc shrb or push cmp jmp outsl jecxz or (bad) push cmc inc les jae or mov push ljmp jmp shl repnz pop cmp mov dec fcmovnu ret in test cmpsl push mov add pop pop xor push mov adc sbb and or ficomp cmp rorl shrb jle fdivs push xchg je and cli leave lret (bad) fdivrs or test xor mov push jo in pop mov jge push in or lcall in pop or fldl or inc ret dec imul or jbe add fsts and cmp dec into jecxz dec lret pop push push jae test (bad) adc adc nop adc sub and dec daa mov push mov add mov std mov es pop out xor imull or sub cmp pop sub push (bad) repnz mov int3 and mov mov xlat or popf mov lcall repz xor pop not push push pop mov xchg pusha data16 push test push and int cld and sti pop test or or jae mov xor or adc mov dec sbb push jmp jmp lods insl pop leave fildl ret push cmp or adc insb rclb test add inc xchg xor call cs rorb jmp arpl mov mov pop repnz sbb das and in mov shlb xchg or js (bad) push cmp out or jle mov jle push inc mov adc sbb or sub lds pop aas lea or jnp das test out inc pop out xor std mov cli test sbb xorl inc cmp sub jle cs jp dec sarb (bad) mulb push cmp add sbb or jb (bad) jmp insl add bound mov mov repz ret xor push outsl jmp add (bad) fcomi icebp mov pop out ffree push add push test mov jne hlt adc sbb lds add inc imul lock xor test cmc sahf jbe imul push dec dec (bad) rcl add cmpb ljmp imul add mov mov test inc into pusha add xchg jno ffreep or es jl dec mov mov shrl cs pop fs sbb outsb ja mov jbe mov push hlt xchg dec (bad) cmc or push add out lods ja lock jecxz push addb nop decb (bad) add stc jmp rolb add arpl hlt mov xor out mov cmpsb push push mov jbe ror xor push dec lods adc shll (bad) rorl addr16 add push shrb cltd adc das shrb xlat or fstps imull ja xor adc fidivl and cld pop sub add out sahf ljmp fcmove mov or fild inc xor (bad) pop or xchg sarb shr xor jmp push mov add pop cmpsb xchg aad adc sbb mov dec and push ja sbb sbb pushf sub mov or inc in lock adc add mov repz fisttpll (bad) jge push dec aam pop sarb or (bad) xor aad pop push loope inc add pop jae and adc and mov mov sbb imul sub lds pusha sub add fucompp push or js aas loopne pop inc add pop inc and sbb add pop cmp sbb ret jne xor mov push mov nop cmp sbb cmc lods and ja add add xor inc xchg mov loop add or nop xor repnz fdiv std push pop bound xchg dec jbe push jg xor leave ljmp mov jge jmp dec sub es or or mov jbe aad mov pop shl inc addr16 popa push sbb pop cmpsl cs inc movsl add incl imul add iret gs ret jns pop pop arpl test aad adc mov jae mov xor mov sti push jmp rclb lahf or push sbbl ret or popa adc jbe and adc bswap push jg sbb (bad) sbb ffree cmpsb sbbb or dec fisttpll mov push movsl xchg pop loop push pop rcl or pop cmpsl and push cmp stc in add ljmp xor (bad) mov orl mov (bad) lcall push push sbb adc in jle xchg or rclb push mov testl or (bad) adc jno repnz jno push out pop push and ror (bad) dec ds xchg add jmp fldcw push add insb mov pop loop add jmp pop xchg (bad) mov popf jle cmp fdivrl inc stos push nop clc xor xlat mov cmpsb pop mov jle out and push pop dec stos cmp mov pop fcmovnbe andl in add push add fnsave xchg and lret jle imul push mov inc mov pop inc sub fadd pop sbb xor in add jle add xor mulb in ja mov sbb jmp mov jmp pop jnp icebp (bad) popa jmp mov sub add mov xchg add pop inc inc fwait sub in or subl pop mov pop mov xchg sbb aad test rclb stc mov cmp test and fdivl push fistpll push lods cmp pop add pop push mov push pop dec loope cmp inc popf or push jmp les mov inc ret mov sub pusha fs sbb stos lret iret outsb jns dec in pop enter in inc js jb mov les push and push mov icebp and mul call fldl adcl sub mov scas mov adc mov xchg notl jl enter ja mov movsb cmp pop add lret push dec pop in lret adc aaa cmp lods pop xor nop mov and pop (bad) imul mov inc or adc ja cmp lods pop fldcw pop mov (bad) mov sub dec cmp jae insb ss movl cld pop sbb insl leave sub je inc add lds movsb stos push out sarl jo mov xor cmpsl or mov lock call dec add pushf dec and popf add loope mov (bad) mov and js cmp rolb sub icebp sbb and js in mov jbe cmpsl mov in or jmp cld (bad) dec mov ja inc mov pusha (bad) push sahf pop mov sarl xor and imul or mov mov cmp pop inc adc or std xchg and test movb test mov or adc or das dec cltd enter adc fistpl into lea and xor cmc push jbe push pop or jg push adc arpl push iret mov roll (bad) mov into and sbb xchg mov jnp mov lock dec inc ret mov mul ja,pn lcall popf scas push pop aas dec call shrl inc not jecxz mov jbe out jp cmp bnd lahf push (bad) or pop fnsave xor push dec cmp enter mov es pusha sbb fisub cmp add sub int pushl mov mov push push dec pop pop pop pushf or jne mov lea and mov into push push mov in loopne mov mov inc pop xor loop mov insl jge jmp fxch jp mov (bad) in jo fnstenv sbb fnstenv aas xor (bad) push pop push aad add and jo mov mov xor popa pop push mov sbb ljmp inc cmp je or cmp movsb mov sub loop fiaddl das xor (bad) adc les call xor sub mov pop pop push xor add sti push mov outsb adc and pop push push in (bad) fcomps dec push test shrb pop add jmp aaa pop fcmovbe adc dec mov fstpt mov xchg daa testb adc jge mov loope mov mov cmp pop or and outsb aad les inc sarl jae mov int das lea outsl lahf rorb lcall les rclb sbb inc subl popa cmp pop push data16 push push cmp imul pop loope jl xor ret and movb xchg push ret enter jae in cwtl xor or cmp or in adc push xor shlb dec adc popa push lea dec sub aas sub loope dec add pop add pop jo or or cld dec and test stos adc mov sub push ds jmp dec (bad) xchg and mov mov or pop scas jae sbbl sbb inc es cs sub pusha add pop xorb hlt scas sub sbb mov pop aad mov xchg rcrl es addr16 mov loope clc repz test sbb push ljmp nop add dec (bad) and push push shl std fincstp rorl outsl add or jmp push jle mov rolb dec pop adc movsb (bad) inc addr16 scas addr16 hlt xor xor sub push and cmp in pop repnz je xor sbb or pop outsl xchg jmp mov loop jbe dec inc jae cwtl not aam pop daa addl mov call sbb add (bad) mov (bad) mov adc sbb pop and add dec pushf adc mov push mov add push inc iret (bad) jg mov xchg xchg mov popa xchg dec xor inc das daa sbb or iret pop pop sbb xchg inc es cvtss2si xor ss sub and add (bad) cli hlt out push movsb sti push fidivrl test xchg adc pop je add popa mov add xchg les jge icebp pop in cmp mov xchg and cs ret loop inc rclb xchg roll dec out out jmp lods pop repnz daa push push add rorb mov shrb repnz mov pop push das jno jae sbb in movsl cmp cmp mov inc mov push and pop jmp cmp jb mov push push ds mov dec adcb test leave daa jbe andl ljmp ja int push or mov pop in cmp jne inc xchg (bad) ja iret sub jno pop jmp subl push inc push mov sub cmp incl cmpsl popa jno loope push aas mov (bad) jp cmp push jp adc inc add (bad) rorb or in dec add bound inc cmp adc loope and inc jle sub adc cmp inc movsl (bad) les mov mov test pop sub push loopne jae js mov add (bad) outsl and jo cmc data16 (bad) xchg pop scas call cmp jno daa insl adc popa decb lret (bad) daa or in fwait sbb into sub fistpl and lock push mov or sub pushf xchg loop xor sti cmp mov subb dec in mov adc add and dec xchg (bad) scas das fadds sbb int cmp inc (bad) mov jge jnp bnd and into mov fsubrs push cmc das pop adc dec pop call xchg out outsl jne call pop in (bad) repnz inc adc or dec outsb adc mov fstl popa jmp add loop jbe mov das fsubrs mov sub mov lods cmpsl adc pop mov sbb xor out mov adc add (bad) int (bad) std or jmp mov jge arpl pop in pop push and pop leave iret sti push sar icebp adc jge mov cmp xchg add mov sbb popa add and pop shl ret push adc aam pop push cmp daa je inc mov int3 shll les xchg adc in pusha mov enter testb pop inc push loopne jmp and adc (bad) aaa out jns xor dec pop fdivrp add xchg mov jle lods adc cmpsl mov inc or test or ret lds and lret cmp mov add fisttpl imul ret xor leave out add push sarb in addl push out shr out add jmp pop adc pop lock sbb sub mov or mov or js pop mov mov roll pop lods add inc out addr16 add jno or popf jecxz test mov add xor inc pop out add push sub pop jl movsl in or sub hlt mulb out (bad) scas adc mov sub xlat push loop hlt dec iret mov and jmp or (bad) mov daa outsb pop rorb pop in (bad) or add push loopne rcll out add mov mov hlt cmc (bad) sti jmp stc push and iret and cmp loope movsb dec cli cld mov lock call popf bound push dec fisttpll push inc jmp cmp sbb mov lret orb neg cwtl lods and leave dec push test mov xor jno leave fisub aam (bad) push push ja mov pushf xor ja mov out add adcb inc cmp popa mov push ret scas xchg push jnp lahf xchg push cs pop test push adc out lods cmp mov jge inc movsb dec cmp pop cmp adc aad pusha out push std mov mov adc aas mov adc xchg inc mov push adc not orb fwait mov sbbl xchg subb (bad) dec fisubl rorb mov notb pop (bad) push add pop mov test cmpsl stc (bad) pusha xor ficompl and mov mov add jbe mov (bad) repnz mov movsl mov push in dec out pop pop and mov sbb mov dec lods push rcrl sub and add xor aas add jmp outsl and push mov (bad) sbb or imul int xor out mov subl add loope mov push fs divb es divl cmpsb (bad) or adc inc and and pop addr16 mov inc jnp daa xchg imul mov test int3 add or and lods sbb xchg push ficoml test mov mov dec lods and pop add xor xor shlb jmp mov push setp sarb mov xor mov insb (bad) jns data16 push mov leave repz jle stc (bad) pop aam mov sub aaa cli adc and ds ret pop push sub sbb push push mov sbb popa lcall pusha pop inc push in fdivl and iret jmp push mov or loop (bad) mov xor mov dec mov adc int3 adc dec mov or add in std mov xchg push and rcll cld inc loop xor nop and inc gs inc es mov or xlat sbb mov lahf lods add sub jb mov adc (bad) mov mov adc es adc jp ds add sub loope mov add jg aam andb pop in and data16 pop jmp mov mov loopne mov dec add mov or adc (bad) in push ret addb adc lds xlat gs pop or aaa lds incl cmp lock jmp cmp add fcompl push mov loop mov inc into pop ret js popf inc arpl les in mov not or or test out xor fwait jb ja jecxz and popa ret call gs add movb or and pop or mov std sbb mov push imul mov ljmp cmp orl mov loop mov jo mov fs xchg cmp mov test (bad) mov cwtl cmp sub mov scas or mov sub push xchg add in mov in mov imul cs add cli xor bound sub pop and sub ds imulb xor dec fcmovnb xor out jne sub inc xchg cmpsb add loop sbb xchg push add dec mov (bad) push push sti add mov fimul pop add push mov push insl sub dec mov dec adcl lock es (bad) and and mov sub add mov jp in dec fsts lds pop pop mov (bad) out repz ret cmp jmp mov enter pop cmpsb xchg (bad) add and push jbe out add imul rcl push pop es shll xor imul push movl push inc push fisttpl dec pop pop pop mov pop outsb mov xchg and fsts xor popa out add mov cli mov and decl cwtl notl cmpsb movsb mov add sbb pop pop loop aaa dec aad add enter (bad) cmp push push push jle mov out cltd jmp (bad) sub add lret xchg dec add adc stos inc lret dec inc scas inc mov imul add inc and cmp enter rcrl sub push and jns xor mov mov dec xchg notb aad xchg divl xchg test ret adc dec mov pop repnz fwait clc repz or dec out sub or push push dec add adc (bad) mov (bad) hlt mov and xchg and ds dec push (bad) in insb repnz dec ja xor (bad) sarb pop out and ret jecxz push nop sarl jle mov pop dec fdivs jae mov pop mov and inc movsb xor jmp and xor rcrl test subb adc xchg test inc fistl dec mov push and sarb icebp leave pop in repz int3 xlat les jp jns test cmp push scas out popa mov int add jmp (bad) cmpsl fbld mov rol cmpsl cmp sub pop sbb add xchg cwtl cwtl or jp inc hlt inc or out test jmp sub je mov sub movsb stos mov repnz lcall cmp (bad) push xor pop test pop repz mov sbb or pop and vcomisd shrl or push rorb or adc sub cmp cmp std ret jge cmpsb mulps int3 mov jle dec push dec loop or xor pop out mov mov or or jne mov pop jle add sbb and sub repnz mov dec daa fstps mov jmp add push dec push rclb (bad) push loopne rclb daa add add pop jmp outsb out cltd jns int out pop mov jl ljmp pop mov nop popf mov cmp mov inc iret inc sub ds shlb or lea fstpl jmp pop adc (bad) xor xor pushf sbb scas dec inc lret mov cwtl shld cmc push icebp adc pop lds pushl add push pusha (bad) add jmp rcrl mov (bad) mov iret pop pop enter and aam inc aam cmp bound cltd (bad) jecxz xchg ljmp mov adc mov popa lcall jmp por or jecxz orb insb push rorl in and adc xor roll inc pop lret popa jle repnz mov popa xchg jl or xchg sub mov call fwait insb test in inc pop fdivrs push popl out xchg jmp fdivrl and mov sbb dec mov imulb aam test loop sub pop scas ja jmp mov repnz or mov add cmp in cmpsl adc adc push out or js mov xor lret fs xchg push xchg stc mov add into jmp je out cmp mov lock dec popa push pop xchg test sub push push stos imul out jmp push outsl ret and (bad) sahf lock pop fmul std (bad) out or pop in mov cmp dec mov adc in mov (bad) pusha push add jmp mov ficom cmp adc cld lods add dec repnz les fsubl lock cmp shr addl std das jmp in fldenv xchg jb jbe dec scas pop add je or (bad) loopne mov dec jae cs mov sub pop add add or in das int3 outsb add jmp jo aad pop jns or call mov xchg (bad) clc pop dec xor xor dec loope test mov repnz lods sub outsl imul add pop in jae pop fstl ja cltd and push arpl rcll pushf mov frstor pusha jnp mov cmpsl in push mov stos rcll push fisttp sbb inc pop xor mov push pop ror and (bad) ljmp daa pop and out mov and push xor inc outsl rorb imul mov leave cld push sub vmptrld xchg popa inc jnp outsb in xor call cltd or adc pop push not add add insb jg xor adc mov andl or insl or xchg pop cmpb in xor sbb mov (bad) pop push cli int jns lret in andl call xor js mov in jmp xor ret dec out lods into lds shrb sub out add fdivrs and push lods pusha add xchg pop leave dec rcl xchg pop js cs aam imul bound faddp gs imul mov push stos xchg sti (bad) sbb int3 call cmp pop jmp xor sarl cmp jle int3 adcl xchg fs cmp je or scas inc push push push scas lahf cmp add fstps js mov adc jb adc or movsb test pop mov push int push push scas dec jge mov pop inc or mov rorl lea push out push shrb clc mov dec shrl push in (bad) cwtl inc neg push js mov daa lods or pop lock leave in rcr rorb add jg sbb mov add hlt mov mov jmp add xorl fadd or add adc jno add addb jmp sub mov add jno mov xchg adc add loope mov and mov add xor bound lcall and in add inc adc jmp and je jge sub dec sub push pusha adcl lcall lods cmp jle pop jp mov lret iret jecxz pop lock or adc adc inc lret in cmp inc jo lret xlat bound inc pop or dec dec mov sub (bad) xor or inc cld jb sbb loopne mov enter (bad) and mov sbb cmp and add pop and mov in inc ror sub outsb inc rorl sti and stos push outsb pop insb je push sub dec bound xlat js daa sub sub enter pop jmp jmp repnz int3 jno in leave or rorb pusha repnz add xor jmp mov push sub movsl hlt stc pop pop es mov jg add ja sarb cwtl insb mov ja into push out scas inc pop mov sti adc (bad) mov movsb out lods sbb arpl in jge jl push xor pop pop pop ja and cltd or rorb outsb leave add insl aaa rcl push inc xor cmp test dec rolb push pop jp add stos push fidivr pop rol pop pop ja (bad) jp cmp xlat (bad) outsb lods fstpl das pop cmp loopne fsubrl into mov cmp loope mov (bad) adc loopne jmp cmpsl pop test loopne out mov mov xor aas push enter push or push add push inc test sub sti rolb stos int jle dec push add lcall and jge jnp sub out (bad) dec jg xor aas jp cs popf test testb jb xor fisubr sti cmc and sub push sbb xor bound repz sub lret shr or fcompl inc (bad) push pop mov mov xchg push sbbl add xchg out fdivs stos daa xor sub jne lock or sahf ss push add int pusha mov mov jbe data16 fdivrl inc (bad) pop outsb popa insb xor aam ret (bad) mov jbe pop and mov ret xchg pop xor scas sbb cmp das insb add add add or mov fmull daa push xor jo add push or cmp and jle call int (bad) xor sub cltd jl scas jp jae dec xchg xchg ljmp nop cmpsl addl jnp leave adc sub dec in and lds push mov aaa addr16 nop mov addl gs and cs pop hlt ljmp hlt add xor pop aas mov sub push xchg pop cli cs ss sbb xlat ret fist dec pop mov out pop std pop push popa jmp mov pop jnp imul inc repz mov lahf test std fistpl mov mov test mov les inc xlat dec arpl fcomps adc add lods cmp js pop ds sbb sub fcmovbe fistl push jle lret cld xchg adc adc out xor add rcr cmc insb xchg fsts out pop jmp sub inc hlt or jnp (bad) out ss aas push mov and loopne sub dec pop lods rorl test jecxz sahf imul aam sub add notl sar mov pop add ret add movl lret inc push (bad) movsb jno push lock cmc mov xchg pop sub push (bad) out leave adc ds out sub (bad) mov push xor int3 mov sub clc mov fsubs dec outsb into and push loopne mov cwtl les bnd ljmp inc dec push mov cld lock pop dec push arpl dec rclb mov adc push stc mov pop pop add test cmpsl add icebp shrb fs das clc and jmp mov mov out (bad) lock cvttps2pi decl pop lahf js cmp addl pusha loopne pushf repz mov scas mov jae leave or ret sub jmp gs imul xorb xchg loope push jp (bad) dec inc aad add in loope jne or mov sub (bad) mov imul push (bad) fsubrs incl xor not push pop push fxch push mov ds and addr16 xor pushf dec ret jle xchg ss add in lock mov ljmp (bad) fnstcw dec fdivs mov jae stos xchg pusha push push xchg in push push das jmp inc xor push inc not sbbb or into fiaddl xchg pop xor nop iret add lcall mov ret sahf mov mov cs pusha jecxz not ss or jl pop repz fcompl aam in inc sub mov add repnz push aam xchg adc sub sub neg and adc hlt inc xchg lods xlat lret (bad) fisubl add sbb or sbb enter int cmpsl mov ja repz mov cmp pop fsubs pop in ja mov xor pop nop push sbb scas leave pop jecxz idivb inc dec pop adc pop inc mov mov shl lods and mov mov dec mov xchg loopne sub and aas push cmp negl pop add jnp mov push pop push cli lods mov push cwtl aad lret hlt adc mov pop fnsave jecxz jmp out add bound adc pushf stc mov pop jae mov jmp dec nop les jo pop xchg shrb xor push dec inc add jmp aad mov popa jmp mov test mov shl push and mov adc or popl ss push mov repnz cltd (bad) push and aaa test push add jmp adc sbb not add daa scas imul int3 movsl inc push or sar cmc cmp inc je fdivrl imul adc ret pushf (bad) sub dec stos mov (bad) outsl mov sub cmp add shr pop (bad) or insl in repnz out sbb pop lods jno xor mull add loope movsl ss lcall cld cs aas mov push push xchg sbb arpl push popl pusha sub stc clc inc jbe add call fnsave push scas pushf inc bound inc test scas sbb mov ret and xor jmp xor daa add xor pop pop inc jl popa push icebp cmp negl sub pop fsts jecxz bnd scas jae sub add daa jge rcr xchg loope sti hlt mov mov dec pop sahf dec adc lret cld and rcll mov adc (bad) mov dec movsb mov push je sub inc adc add in inc mov repz adc inc push or jno mov push (bad) fcmove iret jmp dec cmp jmp mov cmp sub mov and in icebp sbb out sub idivl insl sbb adc add and push dec cmc push xchg insb iret add mov adcb enter sub ds lock out lea popa fcmovbe mov dec inc pop xor or icebp sahf add adc (bad) xor cwtl adc push xlat jns xor jp daa xchg push jbe or out or or pop push subl mov insb es mov pop sub clc pop dec xchg mov lock push adc sti pop stc in mov pop jmp add push sbb mov and jp test mov inc mov dec aam bound jle mov jecxz cmp sub test ret push push dec inc adc inc xlat mov adc xchg vcvtdq2ps ret ret test jmp dec das pop into test mov imul dec sub add in hlt adc (bad) dec js jl (bad) repnz popa lea push xchg push js fistpll push xchg add dec outsl jge popf lds and jg movsb repz add or push jbe mov cmp add pop fldenv sub adc pop push shl mov into (bad) sti bswap push out mov sarb aas mov iret mov loop xor movl jo addl lret jno and ljmp jecxz addb cmpb outsl mov mov sbb jmp cli xchg and or or mov mov and scas mov aas fsubs rcr mov mov sbb jno mov cvtdq2ps or jmp inc dec adc imul xchg ret inc xlat leave jle jne cmp data16 sub jb into push into and bound sbb jle dec push add mov ret and fdivrl or addl push mov add dec adc add fiadd sub mov pop push nop insb bound xor sub fbld sub aaa adcl add and mov jge xor jb add push cmp inc (bad) icebp and sbb push mov dec stos pop cwtl or mov or outsl loope ss psrlq gs inc ret adcl push mov jmp mov add repnz cmp inc (bad) fnstcw add pop pop xchg out cmp fistpl and push outsl neg xchg pusha data16 mov cmp sbb jns imul sub scas lcall dec mov adc jmp dec xlat pop lock cwtl xlat fstl push sub call sbb aad and or inc clc xchg add rclb pop pop out jle lea sbb jb loop inc cli xor push inc push stos addb push mov roll push cmpsl data16 outsl mov and jge aas fimul push mov test and negl inc push jo movsl movsb and jmp pop gs ret sahf adc push add fs pop popa and iret pop aas sbb dec lods aaa xlat aad cmpsb out lock pop adc adc lea imul mov xchg subl insl cs daa (bad) jg ficom mov repnz xor sub xchg aam push cwtl pop xor fs jp add aaa popa scas lret mov dec jge sub xor sbb paddq adc roll dec aaa dec sub aad adc stos mov mov jmp sti jno int3 ficoml and fsubl shr test ds cli das and add int3 xor xchg inc aad bnd insl inc push or or leave inc sbb mov pop pushw rclb xor xchg not pop or add stc cvtps2pi sarb push mov mov mov push add push inc popa dec jl or pop xor rol mov (bad) nop or inc xchg inc and add add pop add sbb popa inc call cmp lods inc xchg mov xor (bad) jns adc out or cmp add sbb or adc push pop in mov inc push in gs shll cmpsl lret xchg and mov (bad) sti cs (bad) sbb mov inc xor imul das jne cmc or (bad) (bad) sub iret (bad) stos push ret mov out fiaddl pop flds sub roll out aaa push addl sar repz or lods pop sub repnz lods push out shrl stos xchg pusha or lahf in xor dec outsl push cli mov sub push sub faddp bound sub xor mov cwtl lea or xor inc pop inc and mov or jmp mov pop mov rorb jle push lret xchg mov (bad) ja shr xor dec adc in mov push add jmp xorb sub jno lahf or aas es cmp mov xor adc add movsb jnp jmp and push jmp inc out add mov fs cmc dec cmp and jae or jnp push movsl shrl fwait cwtl loope clc or jp lahf fcomps in mov xor dec dec inc fistpll lahf loopne push xchg incl mov test pop cs jecxz sahf loop jb fs push or cs loope xchg cmp lret inc cmp or adc jmp mov inc adc arpl cld jns adc xchg inc push (bad) jmp or push sbb lea js jns sub mov cmp xchg pop mov test es xchg dec xor push enter or mov fnstcw jl pop cmp pcmpeqd repz and lret out mov mov jnp ljmp dec cmp inc or mov sub inc rolb es dec jne mov rcll mov dec pop daa add pop adc in dec pop scas ror dec push dec int mov or xchg fcmovne psubw dec jo xor rolb xlat divb push mov lods inc adc cmp stos lret push daa (bad) (bad) pop jo cmpsb push jns push add xchg jo js pusha cmp and gs sub xchg cmp add icebp push mov add jns xlat xchg mov imul inc (bad) xchg xchg xchg push mov pusha mov push es jns lea and mov dec ja (bad) xor test xchg jns or dec pop push jle ret dec repnz aas repnz (bad) icebp push mov add dec sub insb cltd cmc add sbb or stc nop or scas dec jne adc scas hlt pusha mov inc negl inc and sarl dec add pop push sub enter sbb push push mov inc cwtl pop cli push mov dec pop hlt setnp xchg adc lds mov lret aad adc es cmp sbb aad das in inc inc lret mov call dec mov dec cmpsb xchg sbb push mov or out xchg mov ficomp pop cmp cwtl out dec adc mov mov mov clc or fsts jo dec test mov ret push ja and icebp pop push lods ficoml inc xchg iret xchg cltd and adc clc jo popf fistl andb push mov inc daa in and xchg (bad) push mov test dec jmp xchg mov ret (bad) pop lcall and pop imul mov test mov adc in push lds xchg pop xchg js xchg stc popf dec push cmpsb inc jmp add fcoms leave test jno mov add pop push add mov inc jmp not mov push xor mov aad lret pusha pop lds and jmp lds into lcall lods loop popf lock sub loop xor pushf adc add lock in jo lock and push inc xchg add repz push cmp inc jmp pop sbb push stos xchg mov dec fimul sub push mov dec in lock std mov adc mov sbb popa insb int3 lahf xorl sub push jmp int3 and and mov fimul pop push shl outsl pop and addr16 add fstpt movsb jp daa (bad) jge pop mov sti dec sub jnp in mov add cmc xor std sahf cs into in aaa add or out pop sub and jle push inc pushf cwtl lahf mov test add (bad) mov xchg add int add lock and adc pop arpl (bad) add mov subb leave inc push das lods inc push ja cmp push or test pop popa popf ret xchg repnz fwait aaa or and fild mov out xor out shrl push sahf sub fsts and das lea test mov hlt aas rol jo cmc add out xor in jp mov and (bad) fsub push push popf jno jmp cmp xchg adc fldenv jg adc inc cmp dec mov mov test clc sub jbe jbe pop mov jmp push stos fwait mov stc add test sub outsl pusha sub shr push insl add mov dec mov neg adc clc add xor or ja or or sbb jno das mov mov test sub pop outsb movsl jg aad mov das ds jmp cmp jno and xor inc shr mov or jmp repnz xchg outsl dec add out dec lods dec add cmp insb sub push (bad) std add dec aaa insb ja ror in push iret xor add jmp mov enter shlb mov mull jecxz jb cmp mov or jae into ljmp jge push sbb pop xchg xchg insl sub push cs push push leave jne (bad) and and lahf add pop add mov mov xchg push mov mov andl jb sbb or xor aaa xchg rcr or dec shrl inc cwtl xor or out sub pop ljmp add fwait imulb popa pop movsb ljmp or sub or mov add mov (bad) insb and lcall adc adc xor cmp push jnp call xor in fisub pop dec movsl jp rcrl push cld fidivr out sbb mov scas (bad) push nop and scas ljmp pop gs ret jne leave or dec dec or dec pop mov mov push pop pop pop or pop inc and inc rcr jo pop push cld mov sbb push scas test pop js pop ret lds mov push repnz push add (bad) test (bad) sub inc jnp pop cwtl popa or mov xchg sahf xchg fs dec fcoml pop mov pop clc dec mov mov lcall jmp add in into dec push mov and sahf subl pop lock sub sub xlat sbb jmp in push stos and idivl pushf mov jmp inc and (bad) xchg idivl add (bad) jmp les pop scas faddp push mov fiaddl and pop out dec lcall subb jg lods and daa aam jp je push and add test add pop push add hlt jl outsl (bad) mov xor aam or adc jne,pt push scas dec movsb sub dec lahf sbb dec lods adc lock inc push sub lcall movsl jp imul mov imul inc xchg gs ja mov push add add movb mov aam cwtl xor cwtl mov add sub or jl add jmp pop cmc sahf lods mov (bad) mov dec (bad) or and sub outsb jg fsub test pop dec cli adc push mov std sahf sub mov jle ds push cmp mov pop rorb push cmp add dec dec mov fidivrl cmpsb xchg push add cmp (bad) lahf nop adc jle (bad) mov daa jnp mov lds outsl mov (bad) stos and jl inc call add xor clc dec pop or mov test pop and testl repnz sub inc pop clc adc add sahf mov stos dec mov in loopne mov jne aad cmc repz pop dec inc and scas int3 lcall imul (bad) and and push adc push pop adc cmpsb pusha sub push ficoml orl lret fidiv push pusha mov sbb xchg fwait sub push xlat dec sahf mov stos sbb cwtl sub or loopne pop or sub outsl (bad) and jae or dec mov notl xchg xchg pusha stos add jmp mov leave or push aam and jne xor add xchg sub push or pop add lcall je pusha push addr16 sti repz in xchg scas sub inc dec jg add or mov clc mov pop (bad) gs out sub dec shlb sub lret dec ljmp sbb dec neg mov ja xor movsb pop out stos pop add mov adc cmp sbb pop push test lret inc lcall incl imul inc cli repnz add shrl mov mov jmp call pop sbb fldl sub pop daa push imul add sbb push pop push scas sub outsb inc fstpl push jecxz push mov jae test fs and jo scas jb popa loopne (bad) pop xor (bad) psrad push pop add fildl add ret xor nop mov jns test pop xor (bad) jnp aad push adc mov sub pop outsb call add xor ss inc dec addl hlt xchg (bad) xchg xchg cli xor mov pusha and (bad) jnp sub frstor jae ret mov (bad) and pop push mov divb outsb fmull ret jmp shrb movsb mov adc stc or cmpsl das pop and sbbl loope jl lret add dec shl fildl or jo lcall hlt (bad) jno push dec or pop stos ret mov mov push sub push mov adc loop popf leave mov (bad) dec mov mov mov test or enter cmp test mov pusha jnp inc test in enter imul mov and mov xlat xchg (bad) mov ret ficom js push add je xor sarb adc ds adc sub stos sub in cmp sub lret push pop mov adc dec jg pop dec xor iret fsubs add push dec push xchg iret daa push das push in push fdivr push inc push data16 cwtl (bad) mov clc movsb xchg xorl cmpl notb arpl add mov movsl sbb orb clc jmp dec mov jecxz cmp lret mov dec xor jmp aam add and ja pop or push lret mov outsl dec mov mov sar ffreep (bad) mov add xchg pop jge xor adc std or cmp bound push jge daa push mov mov fisubl lods jnp mov push mov jae jb dec dec incl dec lcall cli pop movsb idivb jo aam dec inc xor in sbb xorb dec mov cmp cmp in imul jne (bad) call and andl call sbb ret (bad) cwtl jp pop and mov outsb (bad) out xor jmp mov pop cwtl adc mov js arpl mov inc aad inc shl add add aam xchg sub and mov les aaa aad dec pop stos sub popa push pop fmull shr pop xchg or mov push add das mov and cmc mov (bad) cmp push cmp pop jl cmp ljmp (bad) cli cmp ffree push push add shr jmp cmp in add jnp loopne push shlb not loope pop aas mov dec imul sbb or inc or pop dec mov mov repnz sub and mov je xorb icebp sub add dec shrb repnz movsl jno imul add add ja jl hlt cld mov xchg add rcrl loop insb pop push test mov hlt (bad) jmp and mov imul jp pop nop rcrb dec mov mov sarb std cmp jmp xchg dec push test add mov notb dec pop add xchg rclb sahf mov jne negl pop xchg movsl icebp adc std out mov mov scas pop fwait repnz into repz mov loope aaa jo cmc mov jmp stos ljmp orl cld (bad) jmp cmc pop loopne clc push or push or jbe jbe daa arpl jmp or add fnstsw mov bound xchg jno and and out dec pushf les ret push insl adc xor and inc dec ljmp jns mov jg cltd (bad) push push sub pushf int3 mov xchg lret dec (bad) cmp mov adc call adc xor mov in das pop fdivr dec stc sub mov test or push jno mov push and add jmp dec out gs (bad) jmp sub sbb fisttp addb daa divl mov or mov and popf or popl orb negl ret cmpsb xor dec addr16 scas into scas jl das xor rcrl int3 arpl rorb pop sbb fiaddl or sbb mov test xor xchg push bound testb fldt daa stc lock dec add mov iret add inc mov cmpsb es xchg lret inc rorb fs or push add loopne ja dec cmpsb addb xchg loop movsb ret cli cmp sub xchg inc cmpl push rclb sti adc pop fsubr sbb imul out cld add sub add dec fimull cld and mov out shrb dec pop popa test imulb mov xchg or and rorb mov xor and in mov mov iret movsb sub leave or and int3 inc push mov je add pop inc jmp ljmp push js in bound mov xchg add aas push mov push dec js adc and leave cld pop push cmp mov out in (bad) pop xchg adc fmulp cmpsl push inc and mov inc mov pop sarl aas fstps stc clc imull lret int or enter inc loope test mov frstor sti ret repnz mov repnz push shr sbb sub das add jle je dec in and add dec fist clc jo repz mov mov jnp push pushf adc fidivrl fcompl jae cmpl add jmp push imul std dec outsb cwtl and mov xchg jo mov inc or dec cmp mov or sar pop ljmp (bad) cld ret mov xlat fdivl inc mov xlat pop fidivl movsb gs lock xor mov adc ss das mov push jg and or mov pop adc test dec push call and xchg enter sbb push pop or push sub dec movsb add inc sub jmp ret in push and ret ja imul shrl int3 add ret js inc shr pusha pop pop xor fsts cwtl ja cmp aaa mov out repz xchg ret aad jnp ret enter pop mov mov xchg adc aas xchg dec subl mov pop icebp mov mov push add inc imul subl je dec int3 cmc jmp sarl adc sbb ljmp sbb and (bad) mov inc and fs mov xchg mov (bad) or push jg adc (bad) or (bad) mov jbe pop inc and jl outsl cmp inc leave pusha pusha jp push sub inc (bad) xor mov out rolb cwtl inc adc add mov sub jle fistpll mov cmp push push in cld pop mov outsl or dec mov fadds push (bad) or mov xchg mov mov dec adc dec or and int mov sub fldt loope arpl xchg cmc (bad) jp dec outsl adc or (bad) aam imul or jl insb fimul push test inc pop push mov push add scas sar cmp or lds xchg mov mov mov mov jbe rolb mov jecxz fistp ss add push imul push lods ret popf loop sbbl or mov shlb sub daa adc xchg and aam js fisubl imul ds sub inc movsb bound sub sbb jp and bound push std push mov dec push mov add xchg add pop add add jle fs out enter jp imul jmp fstl mov test xadd decb jecxz mov adc nop push sub fistpl add push mov push push faddp push jmp (bad) cli adcb push mov mov out enter out add sbbb push sub (bad) sbb pop push and enter (bad) jl mov inc push mov sub nop xchg cld les pop enter shrb pop push mov xchg aam lahf pop mov sub and and inc fildl mov daa xchg adc enter cli jmp daa lcall adc and ja mov mov inc dec lods outsl stos cs ss mov test add loop cbtw or jmp push cmp mov or sub (bad) mov pop aad imul xchg pop inc xchg push cmp push movsb imul inc and or (bad) inc mov mov push movsl sbb int push cmp mov push or jl,pt xor cmp or cmp repnz loopne or jle or clc mov inc xor repnz ds out cmpsb or test pop repnz push xchg insl loope add xchg cld sti push mov pop pop adc jno jmp mov or js das pusha loop jmp jecxz fdivr gs mov jns (bad) push jge dec je ds jg cmp test repnz lock cmp jmp xor sub prefetchw xor bound jmp and sub and pop movsb fcompl mov jo xchg fisubrl xor iret push sub insb pusha nop test cmp jmp xchg or or pop push push repnz pcmpgtd and mov cld ss add fildll lds mov subl pop cmp popa test enter add mov aam outsb pop add or gs dec or push iret adc scas dec dec loopne stos rolb jle out fidiv pop aam xchg push xchg xchg inc sbb sub xchg cmp inc pop inc pop adc jle nop push push inc xor addr16 pop jmp (bad) adc data16 push push mov adc push jo push dec or popa (bad) jle jge sub popf dec add jno sub in sub lds mov adc or inc push das stos mov adc in ds dec loopne stos (bad) ja xor sub adc loop add es mov cmpsb sub jmp in ja or pop inc inc dec mov mov aaa daa push dec and add rcll cmpsl jg pop scas sbb cmp add pop and shlb popf js or push int3 sbb pop (bad) call daa das adc fstpl ss sub push (bad) or adc or pop fsubrs icebp pusha scas loop and push mov in xchg test mov inc jecxz mov mov movsl addr16 (bad) mov js (bad) jno mov scas ret (bad) mov test mov bound inc pop add and test cmpsl sbb pop jb sub push test ret aaa sub fs xor daa jmp dec jp int3 or sub pusha ja ljmp cli adc and add adc stos jns mov nop int3 push bound cmc jnp (bad) pop or inc (bad) add jle dec fisubl sbb push mov push jns add or shrb aaa dec jne in jg stc or or push scas js fscale fadd xchg add jmp jecxz loop or jge or stos or add (bad) cmp pop loop in ja xchg (bad) lock popf lahf stc jne mov pop inc add cmp pop dec outsl push ret mov or and cmp in ljmp cs push sub dec mov pop lds rclb call stos sub or jge add cld ret pop add adc pop xor adc push test sbb into jp mov fdivrs push sbb dec cmp and inc cli out gs int3 mov sar movsl and pushf (bad) inc inc pop mov mov add add hlt or jmp dec or cld lcall and leave out xchg pop xor imulb cmp imul jecxz dec ljmp add loopne cmp jo adc or jmp fstpl out lds adc addl cmp rcll dec xchg jne pushf cmovns lods scas out sar add sbb jmp shll fadds jns js cmp jg es inc daa jl scas les mov push and test and icebp jp and sub cs daa lahf dec cld push and pop mov add imul cmpsb jb adc sub dec mov ret and mov pop sbb out or jmp out adc (bad) and ret ret cmp inc pop push (bad) xor mov adc or adc sub sarl cmp xor xchg pop or in or mov hlt pop lea mov out adc sub jno rcl add out in jne jge pop lret mov push mov sub dec lcall (bad) sub mov xor cs sub mov shll sub clc or hlt jmp lds fist aas test sbbb in (bad) jle jne push dec test lahf les or lods sbb in pop and fidiv push jmp cmp test shr test and add pushw ds jns mov lds xorl lcall mov (bad) dec ljmp mov lahf pop xchg and cltd jnp pop mov faddl jge fildl mov adc ret or xchg push push xchg mov fsubl test adc pop xor movsl cmp jmp scas xor ljmp nop push fs add rorl movsb cmp sub (bad) ffreep pop jo sbbl push pop mov lods (bad) mov mov in in rcr (bad) pop fsubr scas inc lahf aam push rorb mov shlb sbb jg inc jg fst in xorb dec repnz dec test mov or pop scas add test sub push xchg jnp mov sub mov cmc (bad) push mov mov inc pop out adc lds cmp cmp loopne sbb sbbb fildl add pop dec pop xchg mov sbb push xchg jae (bad) dec sbb jle pop pcmpgtb push stos pusha outsb mov jmp mov mov loop lock jl mov aam jl rcrl adc lds add and mov imul lret adc push fiaddl cltd adc push (bad) daa push mov fcomps loope sub push fdivr imul cmc and mov popf fidivrl addb and mov jmp mov enter push add sub push mov or pop sub lahf (bad) mov mov shlb sub mov dec xchg and aad add mov jp imul jno mov dec pop test jl cld shll and mov data16 fcompl lahf dec inc int and aaa fisttpll fimull push pop call or mov lods lods dec stos bound aas push cltd adc mov sub jne dec mov adc dec lods mov jmp jae push or pop push into mov xchg pop pop mov bound jb pop xlat adc ss mov cmpsl call mov rcll pop push (bad) xchg add jns enter int sbb pop or dec inc sub push addr16 fild inc jo out xchg add mov out lock sub pop dec or ret test xchg fidiv pop sub les add stc cmp xor test or sbb add fisub popf fs fistl sub add cmp aaa pop inc jno in cmp or jge iret mov pop (bad) xor shl dec repnz pop pop xor add test (bad) dec imul mov scas sub ret rorl or sahf jecxz sbb sbb in sub push and xchg xchg inc fmuls jns sbb jb sahf push mov sub push push fcoms mov cld mov cmpsb mov insb repz popa cmc push sti sub push pushf add cmp push rorb or inc mov sub rolb icebp jecxz push mov sub jl rcll sub stos arpl jmp xor leave dec sub push fsubrs (bad) sarb mov les popf push cmp push arpl pop mov ljmp sub adc stos lods inc push fwait add loopne and ret pop call xor sbb xchg mov dec cmpb inc add jmp pop int3 inc jp outsl push pop scas sub or sub scas adc jb sbb push lea cld leave sbb out les push rep push mov xchg or icebp in mov or aam sbb and or outsb neg sbb add push push sbb cli out rorl dec xor pop push sub popf loopne jp xchg pop add xchg adc clc into out jnp mov and mov add pop push repz mov dec in in pop push mov not loopne dec jmp test cmp adc sub add test xor mov xchg mov scas push push lret inc jmp cmp outsb subb xchg std cli xchg stc nop pusha or jae and int3 xor push lods add push ret mov add cmpsb mov mov dec popf push das mov cmp push or xor mov test jg add aas lret jmp es jge sub push jns in push push sbb and pop js swapgs (bad) dec push inc mov jmp jecxz ret pop mov fxch or aaa js fldcw cld fwait or push xchg pop test mov cmp es jae pop dec mov sub or dec fild jb and inc fcoml or insl inc jg ja push in adc push mov lcall inc ljmpw adc push loopne mov mov pop cmp jb daa pop enter (bad) push jne rcrl pop jmp xorl hlt adc pop insb (bad) adc clc dec out mov push jmp dec lret fwait sub lea fstpt jmp mov sarl insl xor iret into or sbb xor pop not push push lock (bad) adc cmpsl jmp cmp dec add sub or pop cmp cwtl jp fidivr dec inc xchg in jo cmp fimul shrb sub sbb and xchg call aam loop dec push mov roll and fsubrs xor es call mov movlps cmp into loope sub gs mov movsb add or pusha dec sub test dec dec rclb stos sub add sti adc int3 push pusha dec mov pop inc vunpcklps push mov dec fldcw cmp popf (bad) test add jle xor stc dec les mov dec xor xchg not xchg xor adc add pusha idivb jge dec jnp scas lea imul lea jbe xor insl rolb cltd das test les adc push std fildl dec pusha mov pop jmp inc popf pusha stos pop push loopne sbb loope (bad) jmp popa add enter out outsl or and inc inc adc or inc repnz inc dec push lock setb nop scas lea add popf test ja leave pop outsb loope sub cli (bad) jmp (bad) aaa (bad) or inc enter mov push or inc adc cmpsl adc mov mov icebp fadds push inc sub add sub in (bad) mov push push pop or pop mov dec fisub push les push jno add sub mov lea push ds pop jmp cmp pop movsl test sar cltd outsl cmp aam push sbb loopne int pop int3 or lahf sbb scas cli sti xlat mov fbld mov inc sahf cli mov pusha shrl (bad) add lret pop imul fimull cmp lcall jle out adc mov mov pop out push or bound pop push (bad) cmpsl dec jbe ds fdivs loop xchg cmp loope cmc jmp push out jae jne nop rcrl cld repz push mov add pop mov je mov (bad) jge faddp es add sbb repz push or rolb (bad) shrl aaa cwtl add add testb ret out xlat outsl xor sbb mov pushf movsb nop outsb rcrb std pop mov incb gs lods mov xor sarb mov pop out or sub sub inc mov mov pop testl outsb sbb and ds xchg (bad) addr16 in out mov dec push xlat or je dec pop xchg or ljmp fsubs and push idivb pop mov mov pop ret add outsb mov mov pop add add loope jb xor cli popa push out jmp in sbb xlat andb daa dec mov or out push pushf push mov gs push mov neg cli (bad) or inc std (bad) (bad) cmp xor ret jge into cmc lds sbb in mov xlat adc sti sub push rcrl fs jbe push out stos es and pop stos repnz jmp clc repnz lock and inc pop loop and push sub or mov add push std test xor int and push pop daa mov mov stc mov sub enter adc add lret cmc xchg push xchg jbe arpl test sbb fwait jno push addl add jmp mov inc aam mov and popa mov aas sub add adc daa out pop add cmp shl mov repz lods cmc (bad) pop lcall inc loop xor rcrb inc sub das pop inc add jnp mov cmp inc aad jg and sbb dec sahf add hlt iret push adc and jnp jecxz mov cmc mov ret add imul aam test and xor sbb movsl not pop push sbb add push bound into dec or cmp lret test xchg pop mov inc pop pop xor sbb jnp adc pop (bad) sbb imul xlat jne mov xchg scas pop mov sbb mov loopne (bad) xchg dec fwait add movsl jmp imulb jno xor cli popa (bad) jmp mov add insb sarb sbb cmpsl xor pop fs xchg dec test inc push mov push or lds or xchg das push jecxz addr16 xchg (bad) imul jae pop pusha icebp xor inc jno out fstpt in jbe ficomp lret std inc lcall clc (bad) cmp mov pop xor in xchg and sub inc in stos adc ljmp fdivrs bound lock sub pop dec or jae,pt sbb loop ja xchg and add cmc jbe das imulb or cmp or pop cwtl adc pusha push mov cmp sbb lods and daa fistpl stc dec cmpsl pop shlb rcrb push and mov or pop mov inc outsb sub cmp les jns cwtl dec (bad) mov fwait push lock mov xor sub pop shl push push jns pop repz xchg add and or add or sub sub rcr add inc inc sbb (bad) jbe je and out jl out ret jno das push cmp aas add mov (bad) addr16 repnz dec stos and pop fiadd mov push cwtl jmp cmp xor add pop out sub lret repnz movsb iret out in mov mov (bad) popf or add push in sub add jg sub enter mov mov imul sbb sub inc das push movsb insb in or repnz icebp call (bad) and (bad) negb push push sbb and and ds push lret ret pop aam in xchg push nop dec icebp jns or add dec push xor ret or sbb in add flds icebp movsb mov adc sbb pop xchg imul shrl pop and mov aas rcr sbb ret sub push fs lock add mov push shrb sbb (bad) xor and out mov movsl scas mov dec ret sub jl,pt js ret ficoml cmp cmp and push jb or or fnsave aas clc push test inc out pop mov popa add sbb cmp or imul sbb ret shrb inc sub mov fs inc test sbb gs jo dec add fidiv jmp push pop push (bad) jmp cmc push fnsave ljmp icebp pop bound pusha sub sarl dec scas jnp xor cmp ret in jmp push push lret mov stc jmp sti adc adc neg jg add test mov push dec jnp sahf push test adc sbb pop scas pop jg and outsb push cmp mov or (bad) pop inc add push inc icebp into or lahf push (bad) iret adc pop outsl sarb xchg pop sbb pop push adcl (bad) mov call add fisubrl dec sbb das icebp sub je rcrl fidivrl mov pop dec (bad) test push dec aam fsubr jle pop mov push mov pop data16 test push push dec das test imul jmp inc fiadd adc xor push push enter mov aaa (bad) inc nop sub adc clc (bad) dec jo mov subb push push test call test pop mov ljmp sbb xchg jecxz fwait arpl and cmp inc pop (bad) das add add xor out push xchg sbb loope or jo inc add dec hlt imul (bad) (bad) cmp dec (bad) and jp loopne in adc lret negl cmpsl push pushl or xor cltd mov pushf outsl (bad) mov push decb cmp push mov jle loope imul or xchg (bad) (bad) or jb or cmp inc add sbb nop sbb movsl out add cmc jmp not dec icebp pop sub cs cmp in lock int3 mov pop sbb outsl dec addr16 cs sahf push sub jg xchg (bad) out adc adc mov mov push arpl pop dec andl cmp pop push je rcll push push int and xor jecxz or cmp repz and les jge push movsl push ret sub das xchg adc push jmp loope sub hlt inc pop dec dec ds xchg (bad) jg les sub divl inc pusha stos lods pop inc repz and pop mov pop (bad) sti add neg repnz jb fwait pop and shl inc les jp dec pop inc jle cmc pop pop mov shll lea in push and jmp mov lds sub pop daa mulb mov xor test jg xor shrl mov xchg (bad) jb cld dec out cmp pusha mov sub bound test dec add or xor in stos out xchg jbe sub mov dec sub rolb (bad) pop sbb lds mov out xchg icebp test add inc and notb (bad) repz pop pusha mov mov pop nop add out sbb stos rolb sahf das fs aas xor ds or repnz movsl loope out push inc stos int outsb mov jp or jp adc push add rol movsl push outsl mov and pop sbb cwtl pop mov gs mov dec add (bad) das icebp (bad) pop and dec dec (bad) hlt mov jae sub mov adc pushf shrb rolb inc mov mov inc or pop fimull loopne xor shrl lahf add xchg int3 inc lahf (bad) mov ljmp inc in push mov xchg dec dec or or inc mov out fsubr sub adc sub lods lock adc jp inc (bad) movsl (bad) and sbb xor xor push cmpsl lock push adc add cmpsb incb clc pusha jp pop add std ds mov add aad aaa push xchg jnp mov clc pop loop jge ljmp or cmpsb cmpsl (bad) das gs movsl push and jno and inc xchg pusha mov xor sahf mov mov jle pop jns dec and stos out imul sbb out cmp dec xor addr16 xchg jmp sahf lret mov push adc mov mov test or dec jecxz stos push or mov rclb call mov bound add inc cmp (bad) or add shr mov add add jp adc and sub cmp adc mov addb test in add xor int3 out adc cmp movhps mov pop mov dec fcmovnu cmc mov dec lret mov xchg and and and add add es std add rorb insl mov pop push pop int lcall dec push (bad) cmp cmp and ja idivb loopne or stc subl pop in bound xor cmp ficompl lock mov es xor fidivl push icebp bound iret push inc or subb or shlb add enter sub add pop or mov icebp outsb and cmp fs or insb mov mov sbb dec push mov or fcoms mov mov mov mov (bad) cmp in pop add add ja pop cs xor or ret bound or jno inc arpl pop inc pop ljmp std dec add sbb (bad) cmp out not or test and push jmp pop dec push mov mov or push jmp adc mov add sbb sti push push or pop push loopne inc leave or and icebp (bad) nop/reserved inc fwait mov mov cli pop aam movsl jmp sub lahf fcoms dec inc adc out dec jbe xor xor or inc (bad) or jno fs pop ret in jmp sbb mov or jmp mov hlt mov std sbb push sbb push or mov outsl sub pusha aad stc jmp mov add jl sbb dec add sbb vpshlq pop push add xor movsb cmc sbb std stos (bad) add jnp xor pop mov pusha dec lcall outsl (bad) jno outsl pop mov adc pop hlt cwtl dec jne mov out xor hlt adc imul ret jp sahf sub outsb test mov fcomps rorb (bad) pop ffree out rol lds mov xchg and inc fbld or cmpb sbb pop mov inc jmp ja and pusha lahf mov inc mov mov adc cltd out sub ja pop cmp jl rcll mov sbb mov adc out js cld stos imul or dec pop cs sbb push jp sbb in xor mov add push ja xchg fcoms mov jg scas push inc dec stos xor les sub jge (bad) dec pop push sti pop dec adc xchg cmp push call not dec jle or mov cmc pop ss cld mov enter icebp mov cmp inc pop das and add pop (bad) jle sub cmovl inc out push inc pop adc dec jns hlt xchg sub icebp push fwait jae mov push dec inc or and pop add jns push (bad) ljmp int3 xchg aad rorl mov test in mov add push mov pop sub jo lret xchg nop xor push mov dec mov dec pusha add shll mov push mov jmp cmc inc xor mov mov mov jp faddp inc aaa cmp push ja xchg or lret add sub daa and jmp xor sub jne ds popf shrb pop add push jmp mov xor ljmp push pop sub fneni(8087 pop sbb and push push ss mov push xor jbe dec pop xchg outsl lahf push (bad) pushf lahf or test pop outsb imul push xchg inc cmp mov push push dec mov adc ret pop push (bad) and jo or adc sub jb push inc sub add mov addl popa repz xor repnz pop pop sub mov add pop sub negl mov insb push inc ret lock lcall rolb jnp xchg pop cwtl pusha sub cmp call (bad) in xor daa shrb sub cltd enter sub test cli rcrl shrl imul push mov push mov movsl push jmp mov out pop or shr cmpsl push add add stos sub (bad) aas clc add hlt pop dec jg mov mov jl addb mov clc les mov and jmp xlat mov fs mov rorl sub jg lods or arpl and mov jno sbb jbe add pop add or pop or jmp jbe iret stos pop push jbe dec adc push mov add add add or add stos pop jl add or mov xor and cmp cmp repnz es mov jge pop lods loopne add push push mov and out pop lods mov adc cmpl push inc cmc mov xlat push mov outsl rolb js lods pop lods or xchg ja data16 push addl dec inc sbb mov jne mov outsb shl mov pop sub pop mov shrl jo rcrb lds movsl xor sub or ret shrb xchg push popa mov mov imul pop jno jmp cmp les inc mov push incl or mov clc push add add dec sbb movsb mov sub sub pushf fistp jb push fmuls sbb adc pusha sahf add outsb and jbe roll or lcall push xchg add push mov sub mov add inc (bad) gs jl add mov and call xchg lea mov nop or loopne leave test gs and mov push mov mov lock jae jge xor xlat xchg mov pop push mov pop shrb movsb clc adc aad cli movsl pop stc push jmp inc fnstsw enter (bad) jge imul jmp push jg jo or push lsl mov sbb std pop subl add add int lds dec sub xor cmp imul decb sbb push or or jns inc js sub or cmpsl pop js cmpb xor sub (bad) stos sub in add inc or inc add push adc in inc rolb lds push sub sub dec mov (bad) cmp mov int3 or lea sub sti hlt pop pushf push ds add sub add pop cmpb mov (bad) dec jge fstl jo cwtl mov pop mov pop pop cs icebp push push mov or cs popa dec fnsave jge inc dec (bad) sbb pusha xor add std gs fstpt dec std rorl hlt sub jl enter xchg cmpsl lret sub icebp jle leave mov mov into ret jno lods sub push push pop int3 sbb popf push cmpsb push add pop rcrb je pop loope xor sub mov pop in pusha inc ljmp shrl push (bad) jo ds bswap push fadds xor cmp ss test adc fildl ljmp pop neg nop cmp xchg pop and or rolb jl pop addr16 mov lahf add push mov rolb sub inc lret pop (bad) icebp or repnz mov test xchg into lea mov add mov pop sbb mov nop adc jecxz imul push mov xchg xorl sbb lret inc sub pop inc cld push test jno adc fs dec mov call adc jp add aaa ret fild cwtl cltd test repz out sub xchg push inc xor movsl mov pop (bad) sub decb loop sbb mov or push push mov adc pop andl and xchg (bad) mov mov sub mov pop or pop std and dec insl mov outsb add sub leave mov movsb out test jmp test ss inc pop das xor and fiaddl imul push adc or rcl daa decb stc sub in rcrb inc push jmp and dec xchg stc cmp imul mov add push mov pop in and lea xlat and pop scas les adc push daa out sbb sub add push faddl aad pop sub or xor jl cmp xor flds in push stos mov sarl push jne ja icebp je mov push fsubr xor dec mov fs out int3 and pop lds fsts jl push pop lds ss push dec push add adc or jl mov js inc arpl mov add or pusha mov cmp cli aam push or shr (bad) adc (bad) xor sbb mov pop loope cmpsl sub int3 (bad) sub mov push stos (bad) and clc push cmpsl xor mov clc dec add jb test or aas not mov push and dec xchg inc sti jmp imul rcrb popf push aaa xor (bad) adc dec sub or adc sub jle cmp fstps adc push push dec (bad) cld mov mov push mov pusha je or pop ja (bad) or mov and push addb sub jae out or out shl add adc imul xor lret in jnp jo push out pop lcall fs rolb mov outsb lds (bad) cmp mov add sbb sub cli jmp adc push aaa or leave push sbb adc cmc (bad) nop jg outsl xor pop popa pusha pop xchg mov frstor xchg repz arpl outsb dec sti sbb push jno shll popa and jo jno cwtl and (bad) hlt adc cmp pop pop jbe negb pop jge pop push pushf cmp pop rcrl pop adc adc or test sub cmp or cmp shr add sub imul mov inc (bad) mov notb (bad) aas inc das sub (bad) and lock in insl mov bound enter mov lret (bad) jmp xor push push mov notb dec (bad) and pusha pop cld xchg or shrb (bad) jmp mov sbb lcall push xor out dec add and aas imul sbb rorl mov adc sub jo cmp ja aaa push popa push fistpl rcr ljmp pop insl push adc out movsb push mov and mov pop xor mov xor lock sahf pop movsb fwait xchg scas std dec add jns add bound cmp or jmp push mov iret jno cmp sub jbe aas ret js out mov neg lahf hlt fsubs js ljmp mov pop cmovo xor mov cmp sbb push fsubr je out add adc jo dec cmp leave js fwait loope cli pop mov jo fsubr pop (bad) outsb aam cmpsl fisttp and out push and mov sub inc int cmp pop mov dec mov xlat jl negl and bound inc std sub aad sbb insl cmp lds lret mov push mov cmpb mov or leave in fcmovu cmp pushf clc pop arpl popa out pop push mov or sub jle setne shrb add inc xchg test lret xchg push in pop push or scas or mov inc pop clc mov xchg loop std sbb mov pop std mov test lock add xchg push adc rorl les pushf addb add out or push mov and mov sbb lret loop aas pop push jmp lds and push sub jo xchg lahf ficom sbb xor cmp rep inc or inc js mov in adc adc in sub pop clc pop inc pop xor pop data16 jo mov adc (bad) jle sub xlat jno (bad) xchg add jb (bad) aad icebp and xchg cmp add cmp mov roll outsl jmp pop mov loop hlt mov pop das (bad) jne dec sarb add or and sbb and test jmp scas push dec mov xchg xor jns pop mov xchg out (bad) (bad) mov jb cld add daa loope repnz sbb pop and push stos inc pop outsb jge sbb add add daa std and jmp out dec mov add mov sub (bad) pop pop mov clc sub loopne xor push stc call (bad) cwtl add sahf jmp rol jbe or push add lret fildl xor jp imul pop and push xor in push and sbb adc mov ret fadds pop pop fs xor popf stos and or inc das and mov mov inc add clc iret xchg dec and and ret add inc add sbb pop pop les daa xor (bad) je cmc out dec or and (bad) nopl popa jmp into or scas dec mov ja daa in inc mov push inc mov call add shrl out (bad) mov sbb and push lock jle pop dec mov ljmp jmp pop and out js add push mov sub jg adc add push js push enter pop mov push push pushl nop (bad) std not rorb cmc lods hlt sub scas sbb addl test push cmp jg lods loope push out arpl pop lahf rolb les imul jnp fstl test repz call inc das jno imul inc ss jno inc pop ret xlat cltd test jmp insb sbb xor out rclb fisttpll pop push in repnz lret xchg jo shlb jno push rcll dec inc int adc add cltd notl clc pop sete cmp add jno xchg ds cbtw ja pop sub sub ret sub addr16 jl pop pop fdivs lret sbb ret js adc dec int3 (bad) push add cwtl sarb stos cmp sub mov outsl or add lahf loop sbb popf add inc sarb not push mov xor and cs lret sub ss mov bound sub mov mov push add (bad) sbb xor push popa lods rol mov inc mov imul (bad) stc pop mov add cmc ret or mov bound add adcl pop jecxz cmp xlat and pop pusha call sub or jmp push mov sub cmc nop mov push out xlat pop cld or sub pop mov sbb leave add adc out and push aad or inc repnz (bad) mov pop mov int3 dec pop add mov cmp push sub pop call aaa scas ret add fmuls push pushl cmp xor je mov or pop and cs mov add push push (bad) adc push push fidiv (bad) leave pop or jmp fistl inc aad shlb out mov not stc and jnp sbbl push xor pusha or in (bad) cmp inc or fdivr mov mov cwtl pop cmp stc push ret ja mov movsl adc enter dec sub lfs cmc loop icebp hlt inc push hlt and pop sub or add jmp xor (bad) fucom pop mov loopne in and js and adcl and ret push push mov adc jnp pop in or pop pop hlt dec inc cmpsb sub mov pop pop xor and movsb xchg incb adc xor xchg push and not pop or lds mov xor shrb sub cli hlt mov dec xchg pushf adc mov mov and push push js dec sub loopne ret mov jo adc inc sub push leave push cmp fdivs sub push not xorb cwtl addr16 sub inc scas (bad) cmc (bad) dec sbb bound jb add mov divl jns mov or dec jle pusha iret jmp incl pop push jmp out cltd mov gs push loop ljmp jmp pop loope in in jne sub (bad) jg ja mov dec fbld cmp stc pop mov xchg jo sbb ja jae es xchg push adc mov bnd pop pop repz push jmp shr or pop add in ret ds sbb in test cli and jae inc adc les adc bound pop push adc clc dec addr16 int xor or jmp imul pop stos sub dec mov mov data16 mov imul sbb scas add rolb je cmp jmp test aaa push sbb sub jnp xor mov imul sbb aam sub dec sahf or (bad) sub movsl outsl std jae leave (bad) sbb pop ja mov adc jmp dec inc add push (bad) push insl dec jge rorb fistl stos adc xor (bad) decl pop mov add jmp pop inc and data16 xchg rcll stos add mov leave fadds icebp stos fldt inc scas inc fstl and stos adc cmp pop popf icebp in cmp lcall neg sbb xlat in test cld std push fsubs sub imulb lret push mov lret jbe mov test std sub ret xchg in orl push mov jge mov cld jo,pn lea lods rorb pusha sub imul inc push notl fwait ljmp pop jmp rolb push mov pop inc dec xchg cld fisttp mov pop std push iret cmpsl fiadd mov adc pop pop pop cld jnp stos lds adc orb push cli lds xchg cmp mov add es xchg mov mov push mov leave std lock mov and sahf cmp mov add fistp jb mov jg add sbb out push dec sub cmp inc push (bad) jo mov (bad) ja imul cmp adc jle dec xchg loope cmp int3 rorl pop mov jno adc jbe movsl and mov dec inc mov (bad) clc inc es scas mov ffreep pop mov push ds aas mov sub stc mov ror fadds cmpl pop xor (bad) jae add out jo push dec add outsb mov jge (bad) xor subl and push jl mov cmp cmp xor rcrl push adc (bad) push push dec es xor pop loop fisubr xorl push (bad) popa xchg push iret push push mov lds sbb sbbb aad icebp pop test mov push mov xchg js nop xor stos xchg ret dec add pop add dec cmpsl push jbe push push js mov repz dec mov xchg pop xor test pop stos sub loopne stos xor adc jg iret stos fs movsb pop or enter adc lahf or sti pop or push dec insl jo and push mov (bad) mov inc dec xlat xor push or pop add (bad) ror add add call push push adc sub sbb xor mov adc jne push mov push or stos push lods and push dec pop mov add leave jp,pn xorb pop pop in jbe adc sbb dec push or out mov add sbb enter ja and sbb cmpl sbb in inc push in sbb xchg dec scas je ljmp vandpd ret pop push and xor rclb icebp stos pop (bad) scas mov lds sbb (bad) or sub stos sub mov mov inc jmp cmp jle jbe lock bound or adc out fbstp lcall adc movsb add inc mov mov loop mov imul mov add push adcb push sub das pop adc mov (bad) pusha mov nop inc add cmp dec stos add je add mov dec jnp in scas cmp jmp test inc (bad) and fwait dec stos sub hlt jae repnz icebp sub dec pop add out pop push push xchg mov xlat sti mov add nop insb out or cwtl js lods or dec loopne das add pop test test push fwait das jg fcmovu or in add cmp xchg xor mov sbb pop dec adc add jb scas inc fcmovu mov sbb add sub cmc sub adc (bad) cltd mov cmc (bad) sbb sbb dec sbb push add push jl sub xor mov jge jle ret aad pop into xchg pop scas pushf std ds jmp lods sub popa das ljmp jne out add add jmp inc cwtl (bad) and adc (bad) add inc xor xor jge xchg lret mov mov mov outsl in shrl lods aas icebp dec xor push icebp js add xchg and pop out add test jle mov ret jno mov inc das sbb adc pop adc jl sub push (bad) pop gs dec mov daa or std mov push out add mov in xor bnd mov jo pusha mov dec sbb jp test pop rcrl es into or cmp adc daa jle inc jmp jo push mov jl dec push cmp mov adc (bad) test mov test test es cmp add inc lret sbb lcall cmp and repnz push sub int out jecxz mov mov add (bad) jmp test fimul inc inc adcl sub jmpw (bad) dec push sti push adc out xor mov daa sub push and cltd push xchg fimull push xchg scas cmp xor or jmp imul std cs xlat pop cmpsb mov jl xor adc (bad) dec or add jnp js mov mov pop rcl les pcmpgtw sti lea loopne sbb xchg mov outsb and popa cmp call dec sbb sub es scas sub cmpsw sti sahf sub pop dec mov test jp (bad) mov xlat sarl and jl das orl sub and sarl xchg pusha (bad) aaa inc sti or inc push push jg mov inc push add out xchg or xchg fcom les xchg push inc adc test jecxz (bad) test jo mov mov mov mov lods jbe daa lcall mov lcall insl pop test mov dec xchg scas or push or xchg pop xor push sub mov cmp add pop hlt add bound ljmp mov xchg push fidivl pop xlat int3 jmp xor adc stos xor sub xor adc (bad) ret fist add pop popa and shr inc adc sbb pop add (bad) gs sub push or imul and jno pop (bad) rcrb dec mov rcll rcll imul or cmp fist xchg imul jg,pn or or ds nop and mov pushw mov xor and fs jp fstl outsb mov or loop rcrb add mov cmc fistp push neg mov jmp out and cmp pusha and jmp cmp (bad) cwtl fidiv call insl cmp pop or push loope fcomps outsb add jge (bad) icebp mov movsb scas inc mov js stc jge xor or push push or inc insb sti cmc rorl and ret mov inc dec jl push loopne xchg push or or shll lock jl inc add mov cmp push lods cmp jmp clc push test (bad) and xchg add cmp pop popf mov cmc ss ret mov xchg or xor pop scas lock repz xchg xor lds lock (bad) mov jle xor jno stc sahf es or xchg shll add sarb movsl xchg lods dec mov dec pop rclb (bad) in jae ljmp and ja imul stos incl cmp jmp push js pop fldenv pushf das push mov inc fstl ret sbb sbb mov shll shl (bad) ljmp addr16 ret cs push xchg push sub adc sub cmc xchg test push inc xor jg insb cmp add cmpsb adc and dec push leave push outsl jp cmp and mov into push cmpsb icebp loopne sbb and add cli push xor mov jae pop cmp jecxz sarl std loope jnp push (bad) ss push and or cltd popf mulb cmp into mov ljmp iret btr jmp sbb (bad) out testl push jmp push fnstcw hlt out mov or push mov jae mov popf (bad) jg lods pop cmpsl add xor pop push shl rcr xor mov and rcll in arpl lret std test fs pop jge mov ret dec pop mov sbb sbb movsb jg mov jmp pop aad inc or iret popf or bound xor scas inc fisub push test iret xorl fdivrs add mov push pop xchg and inc out and shrb add adc or adc mov sub dec scas and stos aad push leave jbe mov (bad) divl mov inc cmp mov (bad) dec inc hlt mov jb maskmovq idivl imul cltd test xor sarl int3 cwtl pop aas int3 nop sahf daa sub pop stc pop pop daa xchg cmp in sbb loope std ja sub xchg gs jbe sbb mov in pop imul sbb or adc out xor and cmpsb fild jmp test add push mov xorl dec aam mov sub std and mov mov cmpsb sbb pop jmp xor and movsb inc jae scas add dec add push and mov subl adc outsb test outsl xor hlt xor out jno movsl div gs mov push inc movsl inc mov push push les push data16 pusha add mov cmp or inc and dec sub clc jmp cmpsl pusha rcrl lods xchg test dec ljmp push ret jmp scas aad movsb (bad) fldz mov rorl dec cltd dec jl adc daa jge jnp cmp jb mov ret (bad) inc xor push shrb add pop push dec js add sub sub cmp mov hlt icebp push dec pop call and xor mov push (bad) stos clc lcall sbb aad outsb add jb rcrl push test in xchg cwtl push lret or popa xlat daa pop loope add stos pop aam or iret das jno and inc sbb or sahf rclb lds int3 cmc aam in or jmp mov repz pop inc in mov (bad) xorb inc or or pop (bad) push loopne dec or inc xor test sbb sbb mov pop cvtps2pd xchg mov pop lds adc jns adc mov cli jg mov mov xor popa mov xchg mov mov daa (bad) dec movsb adc in adc xchg jnp adc and sarb in add sbb jle push pop jmp add popa inc push mov sbb (bad) pop push in pop (bad) push sbbl lret or xchg jmp pusha or jp push dec pop push das xor (bad) cmp ffree sub mov adc xor lock stc sbb jle and leave aad jmp leave divb xor push push cld jmp mov adc adc push jno and mov adc and mov xorb add jne sbb add dec addl push pop or cmp jmp mov in push cmpsb or ret ljmp or (bad) mov dec das pop pop aam push xchg jp inc jns (bad) (bad) notb dec adc mov outsl jmp sti jno testl nop rcll sub fs jle into xor sub ss mov sbb xchg ss sbb jecxz add mov out fldl inc and pop adc pop or fs rclb decl test out sub xchg sub enter sahf jecxz sub or mov ss adc mov aam push mov mov (bad) shl push xchg (bad) mov jns,pn outsb push lods pop add mov lods (bad) pop pop mov jg pop inc sarl xor xchg push test adc push or fs jo dec jmp fildll jmp jne push mov clc ret pop sub inc (bad) sub xchg (bad) pop mov enter rorl xchg cmpsb setle stc xor lock cmp adc lret insb push add add add pop push jmp xchg fiaddl lods push mov test mov or cmp iret push jg rolb iret inc jo popf pop mov cmp xchg js xchg fidivl es inc jg push es pop inc pop add pop insb icebp pop inc pop add jae imul add push inc test nop aad and fldl or (bad) sbb inc (bad) hlt cld into inc jbe sbb add sbb sub push mov insb jg push xchg mov test pop dec (bad) (bad) into pop stc mov stos jecxz xchg and daa out pop and or call mov pop mov iret jl,pn lea rorl add jg push call pop dec dec pop cs mov pusha rorl test scas cmp cmp dec dec inc jle ja push fsub into add pop pop mov insl jmp into cmp scas sti repnz lock or insb fnsave mov lock nop mov js imul or and xchg mov dec shr push mov or sub mov pop aas pop cmc mov and push adc adc cmpsb aas repnz lds dec pusha dec or inc push bound mov jmp jp pop pop pop pop mov dec cmp dec jmp fs out pop jo cwtl test addr16 xor adc test mov and call xchg mov jmp clc daa pusha sub sub jbe mov cmp mov scas xor push inc jmp mov mov lcall mov (bad) dec sbb enter lock push aam mov adc stos addr16 sbb pop lret out jb mov push sbb push (bad) mov (bad) movsb mov jmp into add push rcrb adc jge mov mov js pop loopne inc or pop (bad) or sub dec and stos fildl (bad) mov adc pop jnp push push mov sbb xor adc pop inc adc repz hlt and xchg pop incl mov jbe inc mov adc or (bad) test pop pop inc fstpt (bad) push xchg call loop jne fiaddl jb js daa cmpsb mov mov push push xor arpl mov pusha push cmp ss push mov jmp (bad) jg int das mov and mov sbb popf push add adc addr16 (bad) rcrb lods std rorb jecxz xchg cli add jno js or xchg jp cmp adc sub and pop nop sbb popf incb (bad) mov xorl ljmp ret inc or fisttpll xchg ljmp arpl push into cwtl or xchg jp lods xor imul jb pop (bad) inc les gs mov aad daa add push adc and and dec adc test bound jmp sub sbbl mov ret cmpsb and xchg adc (bad) sbb or arpl pop daa fwait sub adc xchg aam leave (bad) dec jo stc cwtl ds add push out add or in add xor dec xchg mov lods test jmp add xor jno aas xchg aam lods inc pop dec or in inc imull shr mov adc dec out stos aam lods lret dec mov mov cmp cld xchg ds aaa sbb adc popf rorl mov push fist fwait testl in imulb or cmpsl dec mov sub pop notl out jmp pop ds jmp push ficom rorb jmp push scas mov pop cmpsb mov in adc insl call test hlt dec mov or push mov xlat popa ja addb and jmp test jbe mul lahf xor cwtl scas not xchg jle pop shl inc add insl insl test cmp sub push pop or jns push mov xor in sbbl add xchg push outsb or addr16 dec jl push imul leave pop add adc out xchg push xchg sub (bad) fisub sbb cmp nop je dec ljmp int3 sub mov sbb sub in add push cmp in pop outsl mov mov ret ffree fdivs int3 dec bound inc mov cmp or sbb ss cmp jae daa jg int jmp xchg sarl xor push sbb cmp pop pop adc addl je jno inc cli xchg and sub push inc cld mov ds loope in ljmp lret cwtl imul in adc jne fs shrb jb adc inc push push and xchg mov mov aad add mov scas and pop stos add stos adc or cmp and cwtl adc push clc sti push out gs lods hlt mov or mov inc dec bound mov mov sub sbb test repz shrb pop mov ret add lods adc jmp jns add jmp ret cmp xor test aad jne and push xor mov adcb sarl push das or (bad) pop add scas shll cmp mov sti rcr ljmp mov (bad) jmp rclb mov out add cltd lock mov mov pop adc out frstor xchg push push push clc daa inc inc push call pusha pop aad jmp push subl ds or push in and imul adc insb dec das fistpll jecxz push lahf jle sbb push and jb sbb cmp xchg sub ja (bad) mov push and or cmp (bad) or mov or jmp jmp and incb ret add fdivrs mov test lods jmp xor or pusha rorb pop pop mov out or add push add push mov mov dec or sub push das pusha in popf push dec cmpb cmp js and push outsb mov pop fwait enter mov push (bad) fcompl inc mov loop or sbb dec rcl push pcmpeqw xchg cmc push cmp mov imul add cmp inc jmp in cltd aas lcall mov sub push mov xor push inc mov mov add or int3 fdivrs push mov mov adc sahf xor push lahf lods pushf cwtl push xor lods in xlat dec movl sub jmp fisttpll das xchg jb mov and xchg dec movb adc and (bad) repnz cwtl xchg or pop mov insb data16 sbb bound jge cli addr16 repz mov mov cmova jmp mov pop fs cli cmp push pop xor dec rorb test insb adc int or inc ljmp lock xor ds push lods divb xchg shrb (bad) jge or push es jle out loope outsl mov popa cmpsl jmp rol or mov dec inc push dec pusha add int3 addr16 dec jmp arpl ss daa jmp ret pop jp mov insb les ja scas in cmpsb pop lds xchg adc shlb pop adc jne das (bad) pop inc (bad) push mov jbe iret mov out push mov loope arpl fs fs aad (bad) fprem icebp cmpsb cmp (bad) jbe aad pop push or inc push xchg add scas adcb roll mov lret mov lods incb dec pop add jns adc pop cmp rcrl or jmp cmpsl add mov dec hlt mov sub outsl mov dec mov jbe lock add sub xor mov popf fisttpll mov or mov xor and (bad) arpl push ljmp pop pusha out lahf out testb dec add pop add jo nop pop and jne idiv sub pop mov push mov push fistpll clc dec adc sbb or lret add push jns mov cmp neg add testl out jmp mov loop xlat push iret jae xor and jmp push aad push js rorl dec mov cmpsl inc rorl pop mov lahf mov cmp repz jp and lock adc mov inc sub add cmpsl cs testl inc mov dec test mov dec sub inc les loopne fmuls (bad) aaa push add push inc sbb fistpl adc outsl add sahf jg dec and cmpsb imul push adc ds push xchg hlt stc call and jae (bad) sarb les repnz sahf lea pand jb push sarb cmp aas or mov je jae mov or jg cmp adc in pop cmp dec fs cmp lock and outsl sub je or mov mov int3 test popf dec out test jno push repz pop sub daa sbbl pop inc dec mov push add neg jmp jo in imul enter xchg mov leave pop and fcompl and popa jmp jae or sub jecxz jecxz pop and cs or movsl cmc adc xchg pop popa jmp inc jmp or sub arpl xchg fwait rorb sbb lahf and fs inc jl repz mov push pop mov (bad) push fsub ja,pn xorb add pop mov rcrl rorl jge adc or fs sbb jmp shrl and dec jns mull sbb inc push push mov mov mov dec pop push mov sbb push pop mov pusha (bad) test ret ja sarl push pusha cmpl fnsave or or inc js mov pop inc and pop rcr push pop dec push loop lds out leave mov ss test rcll adc popf mov adc dec out (bad) xor and (bad) daa data16 xor inc or cmp mov mov pop rcll out in sub (bad) cltd pop jmp std cmp jnp xchg les mov push nop sbb ds negb pop pop jmp fisttpll lahf jnp adcl add and push out cld sub mov add int3 or add out pop push std xchg sbb pop xor loopne jl push (bad) testl cli fild jne dec int fdivrl push mov pop xor (bad) or jmp lods pop iret mov xor fsubp addr16 pushf daa add aad insl das xchg rclw sti das popa sub mov and mov or andl clc data16 mov popa mov mov (bad) or sbb pop adc jmp xor add push jmp pop xchg add and xchg cs insb stos dec repz inc inc mov hlt mov sahf inc bound xchg es test daa in inc jp (bad) cmp aaa icebp out adc ds mov mov sarl sbb mov daa nop pop fist into inc and add das mov mov add cwtl add data16 sbb xor sub test not xchg add test dec icebp push xchg test mov mov in iret inc icebp (bad) or fsubrl push push pop shl mov mov inc jmp movsl or fstpl pushf fsubrs sbb sub test cmpb jmp out ds lods jge mov jge sbb out add in xchg (bad) icebp dec jmp mov mov test mov or stos xchg inc jle push inc daa shrb xchg das cld mov stc push imul ret fldenv ret jns pop or loopne in cmpsb dec js faddl mov mov mov pop movsb outsb adc stos pushf add push and mov xchg pop pop push inc into push pop pushf dec mov and inc mov sub rorl daa cmp scas outsb mov cmp pop icebp add xchg mov add gs out add xor xchg pop pop add add sub pop jne fildll leave pop popf fisubr dec fild mov sub inc dec lods into in mov out stos push lret lret je dec push dec iret push or repnz testl xlat pop mov or add xor dec jns mov repz adc ss lods es push xchg andl cltd xor or call mov aam cwtl mov adcw rcrl xor jge subb (bad) push dec xor dec push mov cli int nop enter add leave cmc mov jbe pop add jg shrb dec (bad) scas xor jmp stos test mov push in (bad) cs mov test jbe ja xchg sbb mov jg cmc push mov hlt cmc inc ret mov ljmp movsb adc add sti pop push mov nop (bad) pop add pop push lea cmc mov ljmp cmpsb jmp repz mov add cwtl ficompl inc in loop add sbb sti xor lock in mov fiadd push mov clc pop or sub xchg pop ret (bad) pushl adc ficompl add and hlt sub pusha jl inc cmp jbe cmp or xor js ja pop pop lock jne add push test pop pop dec dec lret (bad) sub push (bad) push out add jb mov (bad) lahf dec mov ret mov ljmp jp and jmp out addl cmc pushf mov test and and (bad) enter dec jmp push push lock shrl jne sbb push sbb lcall pushf test inc mov (bad) jbe ret dec pop movsl adc pop fadd ds mov repz add jmp (bad) iret jecxz out rcrb pop out dec lea inc (bad) jmp jmp adc dec scas inc cmp (bad) mov sbb je push orl xor add pop stc mov repnz xor jle or pop add into add pop pop jge loopne int3 int mov jmp scas mov xchg pusha and das push xor push adc mov sub ljmp inc loopne mov inc sbb daa xchg push xchg mov dec mov lods test and lahf push jo adc lret mov xor and ja repz jecxz sbb dec and pop (bad) fsubrs ja es testb pop and js pop pop mov ds mov lret mov sbb nop mov add daa push xchg fldl sub mov fcomps push push clc testb adc add push (bad) xor icebp mov pop push out or pop add sub push inc or and pusha sub xor mov jge sub push in sti rorb dec outsb xchg push lock jmp into outsl sub scas and sub rolb xchg add dec sbb add and push aaa adc adc sahf stos outsl repz add mov jb and dec xchg je or test sahf adc or nop adc ljmp imul cmp aas sbb jmp sub add jmp cmp push fdivrp mov jmp js loop (bad) lds scas pop pop lods addb sub cmp jne or dec fs push jle,pn jb in popa jmp push adc cmpsb or add inc mov jp add add push and push pushf inc push pop push mulw xchg (bad) lock mov addr16 ret dec out (bad) pop int3 mov fs (bad) or adc bound or dec add mov iret loope fwait loopne jmp or sbb inc mov cld hlt sub lcall sub adc ret les sbb push dec mov cli xor daa xor adcb jl repnz aam xor inc icebp mov sbb nop icebp dec xor pop pop lods push add push in pop xor leave loope or or fldl xchg cmpsb sub loopne or jmp mov pusha ret jmp (bad) xlat subps mov (bad) test repz jmp mov pop int3 sub jg xor aam out cmp mov pusha loope js xchg jle popa jmp xor (bad) sti dec cmp and fcoml enter cmc (bad) jmp adc sub inc ljmp lret lods pop push xchg lret movsl pushl push jmp xchg orb jbe jo lret and sarb pop push pop pop xchg inc adc call incb pop (bad) and add loopne scas (bad) mov dec xor pop mov mov divb in stos loop test test pushf enterw adc sub mov push pop sub sub insb push dec adc xchg sub clc decl fisttp imul ljmp int icebp jmp and xchg std inc inc push movsb fldl cli inc lea outsb icebp sub jb shlb popf dec out xchg sub movsb adc cmp push cs mov nop sub pushaw lret mov push push pop add (bad) jae sub push cmp mov fldenv inc push bound inc cmp dec imul push cmp movsl add push and fidivl xor mov pop xor jmp fs stc xchg lods fdivrp xchg mov jae and adc jmp clc (bad) mov leave pop pop mov cmp push push add jns push mov cs rorb dec cmp rolb test mov pop pop add mov push hlt dec out or dec sarl mov xor mov adc das mov inc add iret jle out aad js (bad) not xchg enter hlt fs clc lds push cmp pop mov jmp or popa adc xchg jae sbb mov sahf out xlat loop (bad) jle pop sahf (bad) inc pop les ret insl inc (bad) rol inc xchg adc push inc push push pop mov out repnz and movsb test cwtl pop jge sub in push or sti in sub test pop and or mov test add std inc pusha dec stc insb jp cs mov js mov adc inc add mov jo lret ljmp pop add jnp cmpsb inc pop jmp test or (bad) push jno lahf in daa ret jl inc out shll xor jo mov and loop add outsb dec sub pop and out repz std nop jnp push xchg push mov dec or lret pop fadd call arpl inc hlt cs push push ss ret jmp cwtl and add add push jmp (bad) inc pop call fwait sub setb mov adc xchg loope pop ret test dec push xor sarl sub loop jg (bad) negl neg shl roll adc insl das pop aam imul loope imul xchg cmp popa fwait in aas mov fadds repz pop dec adc (bad) pusha mov inc push insb data16 add dec pop out xor outsl push xor lds and sbb test pop add mov icebp hlt and jge adcl inc outsb pop pop (bad) hlt xchg push mov jp sbb icebp mov xlat mov push push jae mov or sbb add cmp mov or dec ret push (bad) mov fistpl xor sti sub push imul mov pop xor repz jns into enter popl xor mov decb mov cmc add loope mov dec fidivl and and xchg sub ljmp sbb daa popa call or inc add and cwtl ljmp dec push mov sub cmp mov pop sub test shll lods mov and pusha int3 mov insb adc push push daa dec lods mov jl push sub or out mov lods xchg inc add mov pushw rorl sbb sbb xor lahf icebp add neg xchg sub outsb and (bad) mov jmp mov mov pusha dec pop pop dec and cld or or cmp xor fsts and cld imul push push xor push mov sbb inc pop mov sub rolb fwait out (bad) leave out les pop in jns sbb mov loope adc das jl sub outsl inc dec sbb int push pop sub lods cmp push adc push lds add pop stc adc pop pop pop mov xor inc mov xchg sub cmp adc subb (bad) mov adc adc je or jbe js pop push mov dec mov add xchg in jne mov jno sahf rolb jmp scas push sub aad pop ljmp lret (bad) jmp jmp pop jecxz xor pop and pop add das test icebp add adc mov cmpsb cltd or es imul into or jmp and jb daa mov loope inc rcll inc sahf js dec test (bad) in shrb aaa jge pop je xchg imul adc inc clc xchg jecxz mov sbb mov add pop imull cmp mov sub jmp jge add adc (bad) call mov add fisttpl adc call jno mov shl div pop pop orl mov repz mov mov xor add xor pop and and daa hlt mov mov sub cmp mov or lret sbb add sarl inc shr sub or rclb xchg ja push push scas adc and xor lock (bad) orl mov adc cs xchg and xor mov lds jg adc fdivl jae or bound mov sub add out push ret fist xor cmpl push mov or pop jmp mov fstpl adcb xor sbb inc jmp xorl push jae sti pop mov cmp pop dec cli cwtl add mov aad cmp gs sub pop pop pop sbb out push add ds cmp in pop push push pop lock idivl mov mov repnz ja les push dec push aas cmp or addr16 inc and pusha pop push fwait adc push or add movsb daa mov std xlat and jnp xlat insb and push mov repz jle fcmovnb je je loope pop inc sbb (bad) pop lret gs (bad) int sbb adc dec fcomip push (bad) mov je ret rorl push bound imul pushf in stc mov mov imul popa mov xchg pop xchg and in cltd sub inc mov fldcw inc out inc cmp mov int3 or push add sub nop scas sbb sub pop aam add pop inc mov andb inc adc pop outsb add mov out mov mov jmp test fmulp (bad) pop lcall arpl add test fcmovnb testl out inc mov das and add mov pop add das pop sti jnp sahf sub lea push stc or xchg xor lods mulb pandn sub movsb sub aaa das sahf adc pop dec sbb push jmp cltd push cmpsl loop push (bad) xchg or fstl cli ja ret stc xchg mov (bad) jo testl push xlat and push stc pop cmp add jb dec xor imul dec push push mov xchg sub pop pop addr16 fs dec jmp repz dec jae dec pop mov and cld mov cmpl inc mov or js mov pop ret cld fisttpll pop adc scas nop lds (bad) in rorl bnd adc icebp cmc sti xchg mov pop cmp pop cltd repnz mov jg fwait jns daa dec mov adc aad fisttp test dec clc data16 jb or xchg mov insb out lds (bad) sub cmp sub and sbb unpckhps dec push int3 loop jno test outsb out aaa dec (bad) cmp pop dec xchg ja jnp (bad) mov (bad) adc pop add jmp roll leave inc or repz dec test and out sub jl mov in cmpsl mov sbb (bad) cltd or sbbl adcl cmp les mov es pop xchg add jmp pop xor movsl and cmp mov in scas push adc pop andl fnsave and stos push pop (bad) adc movsl daa jno and sbb cmpsb bound ss in addl int3 add lods test mov and divb daa pop fnsave stos push aas inc jecxz sub push ret fisubr sub pop pop adc rorl mov lods ljmp notl push ja jmp dec out mov sbbb cmpsb mov push stc inc and mov scas pop push sub adc jae roll dec pop xchg inc dec in inc call add mov pop jecxz stos adc xchg ja or jle pusha idivb sub movsl mov jle mov out sbb fisubrl add push dec jne jl cmp jl setl (bad) jno push or xchg sarb mov xor hlt lds dec std xor or daa sbb arpl mov dec or push aam mov in lret inc adc call insl outsl push fadds outsb add sub adc dec jne call dec movsb test int3 mov sub xchg aaa and or push pcmpgtd push push orl cwtl mov fcomps push and outsb xchg inc mov data16 xchg jbe iret inc stos mov mov sub mov push mov call pop mov mov ret xor pop jnp lock or add cmp jmp jo sub mov push dec push stos aad stos adc ljmp jae adc inc jmp cwtl mov int3 inc (bad) sbb sti mov xor mov push ljmp or scas (bad) (bad) (bad) icebp outsb cld rorb pop cmpb add dec outsb add lock inc push cmp test and je mov orl add bound add adc xchg int sub cwtl leave pop mov jp loop in mov shll cs jmp fiadd icebp pop jg ds jecxz mov pop (bad) ds xor int3 and jmp iret and sbb push lock data16 sti sub pop jno loope aas and inc mov pop (bad) push dec jnp mov inc lea inc js test loop sbb push sbb or gs pop iret and mov pop jbe incl sbb cli fadds data16 cmp shrl notl mov sub xor or mov pop in and mov das scas add jmp lods or incl cmp jge dec (bad) or dec cmp sbb leave jae pop (bad) mov daa add push push pop mov or cwtl dec fs test dec or pop xchg fucompp sbb pop adc lds and mov clc bound popa pop (bad) or clc out test sbb pop shlb xor jmp dec (bad) cld inc call cmp xor stc mov cld fimul add mov cli inc (bad) xor jecxz push sahf mov mov lods jg andl push pop (bad) mov mov orps add xor or nop or xchg xchg push or pop orl or xchg das (bad) rcrl mov push push out enter and mov notl (bad) shrb push fldt and inc or push push stc daa in push adc xor push mov and pop or pusha and scas xor pusha sbb pop sbb insl das xchg sbb icebp inc or ds pop mov push xor xor out dec lods inc cvtps2pi mov negb adc sub mov stos and movsl gs add icebp xchg cmp pop loope lds pop cmp dec pop scas adc push pop sub sahf mov rcrl sar inc mov push sub dec pop cmp dec incb in les xor repz xchg dec pop mov int3 ret movsl dec sub cmpsb aad push data16 andnps push xor (bad) icebp jle mov xchg outsb xchg push fild jo push push pop mov xor mov popf jbe push daa xlat xchg (bad) lods mov aaa (bad) xor pop mov jecxz or pop not sub adc add lea ret mov sub inc push pop or (bad) inc cld lock movsl jno stc or js add and add icebp or mov xchg (bad) jne dec push imul je or call adc and in std and jg add out cmc test mov sub sub jmp int and lea stos rorl cmp add mov add pop jnp sub cli xor and push nop hlt sub pop cmp add (bad) push mov sub clc in std sub imull push add dec scas movsb stos addl rorb cmp sbb mov xchg inc lock jnp decl add add movb add sub push mov notb sar rorl mov enter mov lock int (bad) sub push add push ljmp jmp jecxz imul shl jle and movsl push in add dec mov mov mov xor outsw sarl xor int dec dec lahf cwtl cmp in and out in ficom cmp sub mov jnp sub sbb ja inc jmp jmp dec lahf push ljmp test pop pop or loop mov popa pop adc inc and cmp inc and sub inc cmp add push mov add pop and pop push or adc das xor lods lds mov pop inc int3 and xchg in (bad) mov push jg int pop pop mov xchg add add hlt add cmp pop push mov sub xlat mov sub jle and scas or xorb outsl lods push jb push and add pop dec jmp jne outsl jae cmp not test inc and adc fildl lahf in xchg pop dec (bad) dec xor push xchg out sbb inc inc les push insl xchg mov push rorl sub jmp lock test out mov sub ret or (bad) not stos ret stc repz nop cmp fldcw pop sub repz sub or jno shr test pop xlat sub pop pop push pop pop jns hlt dec aad sar lods flds in push mov push scas rorl xchg add push mov fs (bad) jb sbb rorl js or scas add mulb shrb jne adc fsubrs es xor add bound pop loope pusha ss mov pop int3 ds nop push aas (bad) sbb add cmc (bad) pop daa jmp push push cmp out test push cmpb adc cmc repz add bound push int3 jmp hlt add mov cmp sub addb test repnz dec mov ljmp xchg cmc or sbb pop mov (bad) (bad) jno add push aas dec jne fist adc or and fidiv xchg jl jo dec mov ret push jge mov push xor je out pop int mov out scas mov lock scas adc xchg or pop inc or pop cmp daa or scas ficom sub push call ja rcll add inc outsb imul test pop roll mov mov push mov fwait push pop or push lods push (bad) icebp sub jae jns iret (bad) lock add dec pop lods lcall movsb out jmp (bad) imul fist adc adc inc jmp jmp (bad) xor xor jno cmp repnz jl test loope pop jo lods sarb pop sub enter pop push sub ret inc jge aaa dec or jnp mov loope outsl in inc les call push push insl mov pop inc rcll mov push adc mov dec mov aad mov jl adc je fcomps test hlt nop inc cltd xor orl add sbb push mov imul es les sbb ljmp mov insb xlat pop js and dec pop cltd sbb adc (bad) add jmp mov pop sbb sub push lahf and sbb loop jmp sahf push mov lret loop or ja cmp stos aas pop add cli pop pop xchg icebp mov inc shll stos or mov mov jl jb adc xchg inc arpl jmp cmp dec push stos cmp lret int jns jae jb aas stos mov adc pop scas sbb push jb (bad) jae add adc ja popf repnz shrl jb adc cmp push (bad) mov jmp or add dec mov mov add pop in stos inc jne lret into popf ficompl ljmp push rolb ret adc punpcklwd insb xor hlt mov nop bound sub test push or pop push (bad) mov (bad) pop or loopne rorl dec add and push (bad) pop push xlat pusha sub out pop lea clc sbb fistpll and (bad) dec jl nop leave sub push rcrb sub enter push and mov mov add outsl or inc aad sbb pop rolb in nop dec dec or insl adc inc mov (bad) out mov push xor mov aad out jne add mov jmp mov push and loopne outsl lods jg in pop (bad) daa gs jmp stc shrb mov or popw mov add addr16 sbb (bad) xchg fild ret mov xor mov jne repnz cmp int3 inc call push or xor adc sub in push add mov mov lds mov in and xchg ret or out sbb hlt (bad) mov mov (bad) std addr16 sub or imul jmp fcomps aaa je sahf sub lock into sbb xor orl or sbb and in push jne or imulb (bad) jno mov and inc fnsave jnp mov std loope ja lea mov mov mov push add jb xor subl dec dec das xchg sbb mov xor sbb clc push dec mov decl mov xchg stos push sbb inc or pop add icebp push xor add loope fs fcmovu push jns ret pushf jmp ret mov cmpsl dec sbbl add adc jg mov jmp adc pop (bad) notb add push mov xor cmpsl (bad) mov insl mov sub add mov js jbe sub inc mov shrb mov hlt in push hlt mov sarl sti out ja dec xchg adc sbb insb jnp jl sub add cmc inc or pop repnz (bad) jle out loope call mov jne outsl push jmp and dec and loope pop pop push ret push in adc aas xor cltd sbb and sahf mov cmp and cmp jb or add in lea jae add mov popf pop mov jmp xchg jnp sub sub push sbb out clc sahf lar and sub mov ds add leave xor pusha push sub inc or add mov mov jl divl jg inc aaa (bad) sbb cmpsb arpl cld and mov pop sub xchg insl or mov adc fs std hlt daa repnz stc ja sub and dec scas test int dec js ret pop and mov push pop stos iret mov mov pop aam ljmp lock lds int3 push nop/reserved adc (bad) mov jae insl mov jbe sbb mov movsb rcl out imull pop call adc lods push dec mov cmc push or fwait mov rcrl in pop sti cmp push (bad) out fisub (bad) and jbe dec or call and aad in pop mov adc stos test daa mov pop mov cmpsl mov gs (bad) outsb jo mov test scas jmp jmp push cmc add aas or lcall sbb int jge sarb inc add sub push in pop pop sbb in rorl fimull dec test lock mov ret add pop movsl mov pop push or (bad) fstps fiaddl fbld pushf mov pusha mov inc pand ja test loope sbb or sarl cld pop pop mov push or mov sub movsl (bad) mov aad mov xor pop mov (bad) lock adc mov or dec jg fisub pop popa mov insb pop mov loopne pop jne cmp sub sbb inc sub mov enter mov xchg cmpsb jb imul pop es push loope jnp clc and pop rcrb cli pushf rorl fildl and dec sbb inc ret es xchg cmpsl inc shrb (bad) jge mov inc add sti pusha jg dec sub pop sbb lock sarl cs les dec adc add cli pop inc hlt in shll in repnz pop sub test (bad) xor daa adc mov pusha fisub pushf push push pop or decl scas fisubrl cmc outsl adc push xlat jno test jmp push scas sub and mov (bad) inc aam xchg icebp in dec pop inc orb jne add dec pop imul adc sub pop notb dec loop xchg (bad) mov pop jns sub fldenv rclb inc dec sub jp fidiv daa out cltd testb sbb mov add (bad) je xor cs cmc insl mov lahf jecxz pop xchg adc jmp lret push sbb push mov jnp (bad) pop xor push into in push pop push or pop movsl fldenv cmp mov pop mov push imul std pop fidiv sbb rcrb enter xchg into ret lcall cmpsb nop repnz sub arpl xchg imul adc lock push push sbb aas adc testb ss xorb add adc add pop shr cld push adc test jg push repz sub sub sbb mov sub xor cs and lcall xor ja fild ds dec nop pop add sub in iret pop fcomp push sbb gs inc repz (bad) shrb fsubl jae add xor dec add mov fistpll dec xchg fisttpl jo pop enter cli mov mov ret inc daa push gs push ljmp ret cld loop cmpsl pop cli inc lahf dec jno (bad) jne jno test xor or add inc lock cmp add clc and js imul or test mov push mov dec repz mov stos leave ret cmp dec pop push jl inc mov popa mov sub jle adc push aaa push add mov mov sbb sbb aas jno push fisttp pop sarl mov cwtl xor mov inc mov sub add dec sub adc fiadd gs adc cmc pop test nop enter mov dec cmpsl mov nop rclb out in (bad) add jecxz call sub adc and addl xchg loopne inc insl sub std pushf in pop fnstenv mov xchg pop mov add mov add sbb add jae,pt pop xchg ds mov stos stc lret rcrl push scas cmpb enter pop into popa xchg sbb cmp std in inc cmp push into push add adc pop xor and fnstsw inc adc (bad) out xor and jmp mov inc or test pop mov xlat xor fwait adc popf or divl sub dec dec adc daa add loope shrb push cmp push push (bad) xor insb test adc frstor xchg pop mov dec fist mov push adc daa add jmp (bad) daa push aad imul add mov pop mov dec outsb repz psubsw (bad) (bad) imul in cmp int xor jmp int3 decl or data16 dec sbb mov jp and push push xor lret inc add outsb nop jne mov cmp loop push ja push add aam cmp push push push add lods xor pop mov pop aas lret inc jp mov and mov imul pop js mov jne test jp ret mov es in mov jmp or data16 or lods jle xchg jge push fsubr push mov adc inc dec incl ret outsl (bad) pop test out fcmove outsb mov adc dec loop into popf xor shrb sub push pusha xor pop cmp sub test repz and push or pop inc xor setne addr16 pop mov stos negl jmp mov lods test lret lock or add mov push mov enter cs inc xlat add aad push push in mov mov mov fs mov aad shrl imul imul in pop inc int3 lds add mov cli ret adc jae add or movsb fisubl and (bad) jmp push movl mov outsb cmp cmpb xchg mov cmp out add inc aas (bad) and adc push and mov mov rorl cs dec rcrl loopne pop push in jle and push pushf sar mov xor xor dec shr sub pop jae mov std xlat xor pusha sti cmp push js push or or lds mov div cmp lods test repnz stc fadd mov jg add adc popa pop add and imul inc jecxz mov adc mov lahf sub sub aam jmp fnstenv andb and je cmpb (bad) pop pop cld enter dec out (bad) cmp push ja pop sbb mov subl mov xor (bad) (bad) jle push (bad) mov xchg mov lret jge cmp (bad) leave mov or test mov inc dec popa stos dec push inc rolb push add push pusha mov xor (bad) test dec lcall pop popf and lret or mov dec (bad) and out or lock leave add or aaa int fmulp xchg ljmp lock (bad) jmp sub nop pop add push cmp movl pop sbb mov hlt adc inc loope sbb xor dec pop in mov dec (bad) inc and ret pop jge jl and pop pop dec or nop mov sub mov jbe jp inc jae sbb inc dec ja je add dec shlb dec out ljmp mov or dec mov adc ljmp int jae xor in loop ja pop or mov nop (bad) pop jmp pop inc mov data16 sbb mov test add dec or push adcb dec mov sub lea mov and adc roll jmp incl inc sub mov test ljmp jl (bad) out jb or (bad) stos rol jmp mov xor and pop js push jmp pop mov xor pop cmp repz popl (bad) adc imul mov daa rcll movsl push xorb jge pop push xlat push (bad) stos mov push and cmp lods xchg cwtl mov jp les das push push jns dec pop add pop cmp xchg outsb adcb push mov lock jmp clc mov ror fadds mov (bad) out imul sbb imul (bad) or pop adc out nop cli jl sub adc add push xchg stos repz jmp jmp popa pop xor adc sbb mov jno push aaa sbb pushf (bad) inc mov add and jne jmp xchg and les push pop cmpsb gs stos jno neg nop scas bound sar pop loope cmp mov pop (bad) add lods jmp sub imul jns push out add lods mov aaa or jae loope sub xor nop xor stc mov insb add dec sub nop sbb iret ror xor cs cmpsb adc or or jg push cmp insl bound or adc mov dec mov lret in sub add fdivrp pop stos lret sub adcl cmp mov and cmpsl cmp sbb scas stos mov imul xorl in ret in (bad) xor test pop mov sub das in inc adc jae pop lds cmp (bad) xchg (bad) sub imul mov inc or push scas stos jb cmpsb repz jecxz (bad) (bad) bound lea movzwl push pop mov leave fistl gs cmp adc daa sbb mov pop pop nop lods push aaa lahf adc xchg mulb inc push je out mov push jle mov xor inc mov cli jo inc adc dec mov fsub out out pusha inc jmp hlt jmp xlat loopne loopne std or dec stos push dec jg and sbb inc ret loop (bad) or dec popf orb xchg push jle inc dec lods xor push add stc lock ljmp (bad) mov and iret fdivrp fistpll aas inc pop movb sub sar mov jl lods add sub bound inc pop cmc inc add push jge pop pop fimul jecxz dec call adc sbb xor push add mov flds xorl mov leave cmpsb jl (bad) out pop push cmp xor bound inc cs xchg fsubrp ficom inc mov add inc or dec cmp fs push or mov inc jo xor in and test out out test outsb mov inc call sub jbe (bad) daa inc decb pop push add add push push mov negl add jl jmp mov mov hlt cli (bad) push pusha pop sub nop jo pop loope add shrb mov inc mov push adc out dec jae or add and pop or mov scas jge mov fidivrl add repnz jle push inc pop js ret lret out jmp mov sbb and pop cli test in push call or test aam pop xor dec inc or test gs cmp add xchg mov pop xor push dec iret dec inc and inc add lock movsb inc (bad) xor mov mov dec xor add mov inc test repnz hlt jecxz push push out rcrb stc dec push dec or out sub subb sub (bad) add and add mov or xor cmc nop mov and jb inc dec push cld dec push inc push pop (bad) lods lret and push rcrl cmpsb add jle mov sub pop pop pop xchg adc mov dec add push out pop mov xor pop mov xlat mov sub push and add in jl loopne lret push pop add aam rorb push inc stos dec inc dec add inc jae pslld dec xchg rorb insl adc test fisttp rcrb cs daa mull mov mov out aas jno cmp out addr16 lock (bad) dec ljmp adc push xor popl inc mov sbb movsb leave pushf xchg ret lock xchg hlt add sub pop and inc pushf push sub cs inc lret and js out jno out lock xchg addl cmpb and add and adcb cmp clc jmp pusha in ja prefetch jns out call push or (bad) aas mov xor mov test push pop insl push int mov cmpl inc push loope clc test mov pushf dec xor repnz push dec jp fs sbb mov xor pop stos gs sub pop dec loop add bound jmp xchg es adc or cmp rorb aad (bad) fldl shrb in or cli (bad) in adc pop call sub int dec sub adc pop add sar mov loop arpl in test pusha bound push sub loope imul inc mov inc jle push add and push clc and xor inc in roll popf repnz orl jo cmp shr cmp nop mov push jb jmp insb les ja sbb lret or add mov dec daa and fisub out xchg add clc (bad) cmp clc sub and stos hlt sub and add mov cmpb cwtl mov hlt test ret sub pop mov subb rcrl add mov scas or mov js inc popf pop and adc addb stos int3 lcall xor sub or or dec and add rolb movd jns jmp stos cmp add cmc jmp nop dec mov dec call pop cwtl sbb adc stos in call dec push orb dec jp sub mov rorb (bad) or inc lahf dec unpcklps test jmp sub icebp and icebp (bad) and scas xlat repnz sbb add mov in dec push mov inc out dec (bad) jae pop adc pop ja jo mov and ficomp scas loope pusha sub add push mov lret or and or movb xchg push sarb push sbb jb test or dec pop jge mov shrl call xor jl (bad) sbb xchg or pop (bad) cmc push or int3 outsl pop rclb mov push xchg bsr xor or sub test mov shrb inc xor fldcw rcrl cmpsl inc push dec mov push nop jle and pop jg ss or or lret and bound cmp das stos sbb les test add inc push movsb push or fwait and clc sbb or test sub lea rolb add xor loope or les jno push jb adc cmp or mov test test punpcklwd sbb sub incb xchg mov sbb aam fnstsw and dec cli xor pop or add nop flds push adc leave jnp addr16 or and or sbb xchg add pop sbb or sbb imul dec dec sub or adc inc sub or push mov call sbb add or pop rolb xchg sbb cmp lcall push rorl mov sbb push sub adc aaa xchg cmp arpl clc adc sbb pop insb jbe adc sbbb adcb les pop fcompl nop jl pushf jmp dec dec pop fwait adcb or mov test and sbb in mov and aaa xor nop jmp adc sbb adc dec addb mov lret mov arpl insb dec pop sbb bound add add adc test xor pop mov xor inc dec add pushf mov or and and dec jne shlb pop add scas or adc inc cwtl outsl int pushf jb adc push clc mov repnz (bad) push (bad) jl sbb pop push sub cmp jp mov and sahf movsl pop scas test xor stos lea mov gs js cmp mov out and sbbl xor roll call pop sarl or jns dec (bad) push jp test cmpb add ja fimull das std mov leave push cwtl xchg jbe add mov fbstp sbb aad sbb adc lds js push in or repnz xlat mov outsb sub enter add add mov mov popa cmp iret add xor and fstl outsb js add push or xor rorb mov rcrl inc dec sbb mov jb cmp or setne sub push xor lcall into pop fmuls add dec cmp test imul enter inc fsubl cmc lcall cwtl push add push push pop cmp cmc mov lods push fadds cli cltd stos add pop (bad) lock aas mov add push xor neg shr or inc jge or xchg cmpb mov push aam mov lds jns inc sub and dec pop decl jnp mov rcrl popf push (bad) add adc jle or jbe inc sbb dec xchg inc mov and mov mov push xchg pop xchg fdivr jne daa add mov push push lahf sbb pop mov test push push or enter pusha mov dec add cmp fimul mov push add or lods lods scas (bad) push fwait cmpl or push adc pushf push cmp add add push xor (bad) jb dec das sub faddl mov sub mov call push mov js sub addr16 pop fbstp repz sub and jns outsb inc imul inc pop repnz jg sub cmp (bad) and xor pop hlt in insl cld outsl push les fcomps cmp add pop pop ret push mov pop pop dec dec pop mov test rcr mov std mov mov inc push mov neg pushl adc add movsl xor rolb jmp or aam int les (bad) inc or notb mov push mov xor loop dec and cmp (bad) push add idivl icebp lcall aas leave fsubrp jge mov push stc inc mov sbb sbb adc sub stc pop inc or mov test jecxz pop push sbbl dec xor mov je dec xor (bad) mov pop idivl jp xchg add (bad) dec sbb lret mov fmulp lahf (bad) mov mov rolb sub imul jae inc jno outsb (bad) repz inc mov jmp jp push outsl dec sub add jb push add jbe push and jecxz jl pop push inc cmp push inc jo mov and xchg or add xchg rolb push cmp inc mov in inc sbb scas jo add add clc das add arpl inc movsl and dec pop sbbl or subb not je mov xorb adc mul loop pop stos mov pusha inc sbb lcall mov inc push inc les mov push test mov add notb roll cli and adc arpl sbb inc adc push xchg or adc out stc or sub (bad) or shrl push sub fnstenv loopne in ss pushf adc jbe fimull sub movsl push mov adc push push or es mov outsl or idivl lret xlat out outsb xchg icebp mov addr16 pop jg xchg out push (bad) sbb iret dec or push push adc and pop (bad) pop inc jno (bad) dec pop (bad) jns mov (bad) je pop or cld fwait pop cmc push notl mov xor movsl or mov inc pop andl adc bound pop and or or pop ljmp jle aad mov por ds lods and pop push cmpb std icebp dec xchg mov sahf push jo xchg xlat sbb and sbbb mov fbstp cmp add mov mulb ret dec test xor mull andb xor inc or inc push pop cmp sbb (bad) sub push mov dec pop int es mov push xchg rcrb decb mov pop shll imul add sbb or push loop dec inc sub add adc jne jmp mov (bad) adc popf push nop insb push jns push add (bad) not jg loop inc adcl inc sub push mov push add dec xchg cmp outsl test mov adc in pop leave mov rcrl imul ja xor sub cs push dec addr16 push or push out leave lret add stos data16 add adc call jo push cs sub cmp cli (bad) daa fadd sbb jb push add add repz in dec and pop and js cli pop cmp into in incl cmpl dec sub cmp jg or push arpl dec cli dec or in inc or dec je pop cmp jg cmc xchg aas mov dec xor out fucomip dec pusha inc ds cmp add cs cmp cmp (bad) repnz rol add loopne rcll loopne or sbb icebp outsb inc dec or dec cmpsb test dec rcrl jno jecxz adc lahf (bad) push sub ret xchg out mov mov cmp xlat sbb adc add movsb (bad) mov push dec push push push sub pop add xchg aaa pop addr16 dec inc mov push int movsl add test push push cmpsl jne in cmp xor out mov sti shr or dec xor lock mov or cmp lock scas adc addb cmp ds cmp and sbbb imul out add push mov sub das add dec test pop sub mov fstpl mov ficoml cmpsl jo jnp js or (bad) xor lds push sub and sub dec stc test and jae sub add sub push rolb shl scas add xlat jg jp ljmp clc adc std cmp call aam sar pushf add mov sbb sub and jmp sbb push pop movsb orb fisttpll sub xor lret xchg stos mov test adc mov xlat sub in xchg lret fiaddl mov (bad) insb int3 outsl push inc dec lods add push inc jmp popf pop ljmp xchg jbe push push jmp pop or loope mov (bad) and jno pop or ljmp jb or add lea stos inc pop sub cwtl hlt ret xor icebp (bad) sbb addb inc cmpsl repnz inc xchg ds cwtl mov icebp lods cmp sti mov jbe or sbb popf into xchg cld inc inc mov xchg imul xchg push jmp adc mov push lahf pop push pop jmp out ficomp sbb (bad) jmp mov mov arpl dec or fnstcw (bad) daa mov outsb movsl cmp pushf xchg and repz pop adc add (bad) pop jmp xor xor sbb push fstpl imul cmp mov std cmpsl aaa loopne out loope fs mov jmp fwait and cmp mov pop lahf lock xor push aam pop xor cltd ja inc dec push cmp push push scas cwtl cld add xor aaa sub inc enter fsubr cmp sysexit mov hlt xchg dec adc or adc (bad) mov or loope pop lret cmp jmp jge dec (bad) jmp xor icebp adc pop and mov sub movb std jmp push call dec mov sub fistp ret lahf pop add mov xlat movb pop xor sub xchg push inc pop les add cld setae mov popa in aas negl cwtl add jg xor xchg mov inc outsb arpl xor sub (bad) mov arpl or pop pop jnp jnp fildl stos or out push repnz test ret sbb dec mov mov add add add inc bound iret or inc stos or in jne sub or test mov mov mov jg add ja,pn inc outsl xchg cmpsl cmp in jecxz sbb (bad) jo jnp lret cmc sbb jmp sub mov dec cwtl (bad) push mov jmp pop sbb pop outsb movl lcall push mov out mov adc mov (bad) mov adc mov push pushf enter hlt inc gs add lods and mov cli or add out nop sub fdivrl sub cmp and jno or xlat ds sub sub (bad) sub or movsl xchg lds pop mov dec icebp fwait popf pop mov loope hlt xor jbe xchg jle mov aas pop pop in pslld sub or add mov dec or movhps mov out leave roll shrl sbb sahf and xchg fwait mov jne ret (bad) pop jg imul (bad) cmp pop roll pushf pop sub push cmp adc mov adc out (bad) jne cld mov cmpsb mov jnp daa cmp adc sub cli iret shll lret addr16 (bad) (bad) fs xchg sti or adc cli outsl xor sub popa data16 scas arpl add xchg sbb sti test cmp or pop add push inc sbb add out aam add sbb xor out mov rorl ljmp adc les dec cs push std outsl or add es adc adc sub push scas movsb ljmp sbb (bad) jno add or (bad) cltd xor add xor pop mov (bad) cmpsl ja addl cmp aad and test jne int clc push add lcall add inc jmp lahf push lret push inc cli fsubp inc cmp roll fildll ja mov xlat jae adc out cmc and loope xor xchg sarb add push stos and dec sub push xchg int sub sub adc xor and or xchg insb jne lods xorb cmp movzbl mov ss ljmp shrl test sub add pop les loop mov gs cmp call adc in mov add jmp pop cmp push push add xor (bad) pop pop stos cmpsb aad and push or pusha sbb jl in pop inc pop popa mov push xor mov adc dec mov cmp xor clc out cmp adc ldmxcsr xor xchg and add sub mov rcrl cmc inc mov out mov dec add xor rcl fildl out inc inc scas cs jo inc adc sub add mov add or fmul add jl add rcrb dec mov sbb bound or sub add loopne (bad) sbb xchg in mov xlat cmp mov scas popa pushf ret int3 imul cs pop lret test mov push push outsl popl sarb call mov mov (bad) mov or inc sar cmpsb int3 cs adcb pop jae mov test jno mov mov test ljmp popf sti xor lcall xchg repz push push stos xor stc jmp divb hlt xor jne jmp into (bad) imulb fcompl inc xchg pushf jae xchg and movsb pusha adc dec mov lock cltd orl sub jmp pop mov jnp and test xchg fucom mov sbb fild sarb in mov ret dec mov adc jmp xchg xor arpl std shll cwtl push iret inc add or adc push test pop in imul dec lods shlb mov ljmp nop push push push or pop jbe fs (bad) out mov dec daa push in ret cmp shlb inc (bad) mov and jbe push stos repnz push lds mov sub pop pop call not jmp sub sub mov mov sbbb push lods xor ja cli lods jg push jl aam push daa cld cmp or fsubl add jne pop popa xchg push les lock sbb lcall sub roll jg and push xchg mov push push push adc je or test rclb jmp and adc popa imul cmc cld cvtps2pi cmc push and mov dec mov pop (bad) fcomi sub pop pop or add sub xchg push enter mov jg rorl dec jo dec pop fsts push add xor push cmp dec clc addr16 dec add or adc inc cmp add insb faddl inc push mov sbb pop push xchg dec sbb out push mov mov test (bad) lock jmp mov mov out nop sub lods pop jmp (bad) int and push rcll lret hlt or and lds sub sub add xchg (bad) pop pushf call sbb adc mov add adc dec lgdtl outsl xchg pop (bad) and ljmp subl dec add jp mov movsb inc ljmp inc push push dec jle pop push xchg push or push dec and dec mov rorb setg dec mov dec lret test add bnd jmp mov add pop mov sub push jbe add inc xchg push stos jbe es adcb dec sarl cmp sarl xor jge or mov add mov dec push ljmp cmpsl iret push repz outsb sub and daa push test imul xor xor push jno push xor or mov or mov xor icebp mov xchg cmp pop (bad) shlb in add test sub jmp mov inc cs das add add into jmp mov movsb jecxz pop push flds mov dec shrl add sbb adc clc sub mov or inc lods addl jge or dec lods notl outsl jne cmp push sub mov push cmp popf mov push and jmp ret aad lcall jno push std xor popw cmp sub push jmp add push jbe ret jle (bad) cli pop cmp pop lock das xor fisubr jecxz ffree addb jle jb mov das repnz shl add jno imul add bound sub andb fdivl and fdivr dec lods inc shr cmp sub ja pop (bad) or mov adc pop loopne push pop nop fs or idivl pushf mov jmp push and nop je dec mov gs push push inc insb mov cmp jmp mov ds jo (bad) out jge xchg mov frstor and push sub mov pop dec (bad) mov pusha outsb xor sub jo pop insb repz push lea outsb push sub lret jns movsl inc inc or faddl fs test mov push push daa ljmp mov out cmc pusha xchg test test xor sub in dec fdivr sbb lock daa loop dec add cmp je jne push sub or sub sarb add and ljmp xchg lret add xor adc jp rclb fldcw insl sub mov in (bad) sbb rcll push or mov add rorl sub jg jmp or add push icebp (bad) std movsl sbb dec imul call lahf subb sbb insb insl adc dec xor fst ds sbb and push mov cmp pop int adc sub jno shl or sbb and mov inc stos mov rcrl fsubr lds fistpll xor add mov shrl test push jp xor aad in add adc jb dec pop push pusha mov inc (bad) je sbb addb adc dec sub hlt sbb daa jge cs lock stos fistl dec lods jg push jne push cmpsl add push out lret push xchg jmp jp push sbb dec sub incb xchg mov enter les fdivl xchg jge sub push cs call fldl rorl and push inc push xchg repnz sbb xchg push pop out sub test mov (bad) mov jp pop add and push xchg je inc in mov mov or (bad) notb cmp mov popf imull fmuls push dec pop mov xchg stos mov pusha mov dec cld stc cld out test and lahf test adc insb jle (bad) fldl repz inc or clc add and (bad) cmp sbb mov cs adc pop stos cmp push xchg or jnp xor or jmp mov mov sub mov mov or (bad) mov (bad) sbb in repnz jle xchg inc mov cld mov xchg inc fisubr cmpsb push cmp test jg inc adc lods adc and or bswap lock (bad) and sub jp fistl pop mov xor enter mov (bad) xor pop movsb add or adc sbb (bad) pop lock lret std and into jg mov incl sar push daa sub clc sti jp dec or cli fadds mov cmp sub mov and rorb mov rcrb dec in xchg push jmp add add iret add push (bad) in and aad push scas and pop sahf roll push js add xor inc (bad) repnz jmp inc jp xor mov push push bound xchg push repnz pop movsb test push adc inc jo imul fdiv push or icebp dec adc out xchg or push mov dec push stos push inc mov ffreep cmp inc (bad) sub movsb in or les les aad cmc repz (bad) in xchg xor in mov mov mov adc fistp jno sub ljmp mov int adc sbb ljmp outsl add negl dec xor pop fwait sub bound pop jl jmp sbb push and mov jmp xchg and push pop loop in dec inc mov add pushf jg decl cmpb mov mov mov addl mov push add lret out daa dec jl fwait ret test imul and push add sub (bad) int3 rolb xchg dec jmp push sbb into popa mov mov xor push mov neg das jmp (bad) jp pop xor and sti mov inc ja aaa xor cmc push mov inc ret imul jecxz pop pop xor aad lods push iret mov outsb jmp adc pop push xchg sti rcrb push test ret dec mov into dec rcr popw fs sbb adc add mov ret or add dec rorb test jmp jmp fsubrl icebp or fwait or das xor push add roll out mov xor dec or pusha hlt xchg sbb ljmp sbb add add jg pop aad dec cwtl imul clc jg jle dec add mov mov lea inc dec rolb inc jmp dec testb xor das mov inc sbb mov jae int jp xor xor xchg daa jp xchg fbld pop fwait outsl scas clc sub (bad) ret test mov sbb xor push sub es sbb fdivrl insb add aad call add xor adc adc mov mov sub sbb or js popf pop jg jbe xor int or xchg sub test mov or jle rol (bad) or mov out xchg dec jns and pop dec lods in xchg dec sarl adc paddq pop scas xor jno mov push es adc pop inc xchg mov push xchg dec mov sub sub push push push mov or lock mov mov in loope dec out pop xchg pushf inc pop xchg sbb ret cmc rorl rcrl loope cmc inc mov icebp scas add add jno insb jmp int stos adc dec cs or push xor adc jb (bad) or push call sbb dec nop inc (bad) mov add xchg test and insb sub outsl add test (bad) ds lods dec test jecxz xchg scas roll aas pop pop xchg dec in xorb jl and out notl cmp mov out dec sbb cld xchg push pop imul mov aam aaa ficoml stc rolb pop je ljmp adc push dec call outsl and mov mov sbb icebp xchg popa loope jp mov in in mov sar fild mov pop xor push lock das call cli pop push mov push fisttpll mov add (bad) (bad) pop jno cmpb push pop dec sbb xor and push test movsb call out cmc add scas loop (bad) push push stos or lahf sub sbb mov leave jmp nop (bad) or and sub or push add add lods movb or lahf ljmp jae nop cmp xchg push in sbb sub aas push or imul xor fucomp add sbb aam stos rorb mov jecxz movd ljmp mov fxch adc out and lds imul (bad) bound mov (bad) jno dec cwtl mov inc mov (bad) cltd loopne cmp dec mov jmp cmc xchg adc mov add mov mov and push pop xor push push rorb jne pop ss pxor jmp popa imul rcll sub dec mov or cmpsl and push push inc or sbbl sbb popa xor jle sbb mov pop pop xchg mov pop mov jle ret mov stos and test mov inc adc xchg inc sti mov hlt xor push add mov in sbb and cltd sbbl mov and aad ljmp fwait mov nop jmp push add and mov ja imul clc out push mov push sbb mov dec mov test mov xlat pop insb inc xlat jecxz inc jae in and in push pop adc fidivr mov ret jmp cld outsb loopne call and add (bad) dec aam test xchg mov and sub pusha negl daa jmp pop sbb jae faddl mov loopne xchg lret out pop mov push mov push (bad) sub (bad) inc int3 mov or jg std sbb pop data16 cwtl add shrb cmp push pop or imul repz or lods les sub cmp mov inc adc shl inc popf inc dec and dec not add lds (bad) dec jmp push jg cltd push mov aas push test insl and push in xchg push stos lods xor mov adc mov and push movl pop xchg or cmp mov mov xchg push and add xor add sub sbb mov mov ljmp call add push rcrl bound adc cmc in adc mov outsl push shrb leave push scas test or inc rorb popf jns lret enter adc lock push dec mov pop pop push leave mov push push fstpt vcvtdq2pd xor mov cmpsl subb push sbb sbb imull mov sbb mov cli xchg pop stos inc push sti push imul int cs movsb and cmc dec mov fstps jnp (bad) pop xor pop xchg clc sti push adc dec hlt movsb cmc andps std test inc ljmp push add shrl cmp and push adc adc adc jmp or notl push xor sbb iret clc aam fsubrs jmp outsb dec orb mov xchg cmc inc aaa and jmp outsb xchg nop test lret xchg cld scas inc pop sub pop adc fadds xchg xlat add sub or rcll jmp cli ret hlt outsl xchg dec ret fisttpll mov lods inc jno jl pushf jle inc movsb aam (bad) jae jns cmpl std xchg lahf shll push dec je xchg fisubrl and xorb dec xchg loop jne mov mov pop mov add xchg stos adc scas inc inc inc and imul les mov adc adc adc add or xor mov fisubrl pushf test das in into mov mov push jmp mov push fucomi (bad) mov or add pop cli repz or cs add jno test clc pop xor jmp (bad) call add dec sahf inc adc cmpsl fs sti clc or xor inc inc jmp xor insl lods and movsl or xchg push xor or lods adc jns cmp test orb add or jmp scas leave inc or enter or sub pop repz pop pushl aam add sub pop xchg jmp add jge dec call jno (bad) push mov ds outsb xor (bad) push cmp in push inc mov dec or jg stc cmp jmp add jmp mov mov add out push push mov cmpb mov out dec adc ret push pop dec pop test or xor outsb push rorb inc lret aad repnz pop lock pop push lods inc test test rolb testl sbb out and inc or sub or lret push loop fs in test xlat shr mov rorb cmp or sbb xor hlt addr16 dec pop mov in and addb xchg add push int3 cmpb jne or shrb pop pop push push inc or sahf sub pop push xchg fcomi and in mov pop push cwtl push sbb push (bad) mov std pop loop mov pop inc xchg xor add push out xchg sbb aaa adc mov add enter sub xor add push push sbb add push nopl rorl mov inc pop stos sbb ret jo xchg cmc xchg nop or push jp cmp jno xor mov loopne or loope sub mov or xchg inc mov pusha add out mov mov push inc pushf mov or xchg ja mov add mov test or mov push neg mov div ror add push sub or test mov xchg lahf sbb leave sub icebp xchg push mov lret inc and es out testb sub icebp push jnp sbb jecxz mov or xchg xor ds mov dec mov xchg push xlat and dec add inc pop loop,pt das stos mov dec add repz out dec movups dec dec mov flds pusha push push out adc cwtl push fs movl adc jnp jecxz (bad) push in iret out dec popa lret ficompl mov adc ret lods int3 call mov pop adc jns push add adc pushf adc or push mov cmp loope hlt jmp dec repnz mov jl xchg xor es (bad) adc cs push dec jne (bad) xlat inc mov pop adc push daa xchg push (bad) out pop mov aas cmpsb sbb out or cmp inc jne nop add nop outsl or sub js outsb in mov inc mov and jg xor cmp nop pop shr add es rol into pop add pop out add push jns rcrb sub (bad) ss mov loope inc mov prefetchnta mov scas dec inc inc xchg int or (bad) cmp dec dec inc xor inc pop adc mov std loopne sti repnz mov rcl cld (bad) add xlat shrl jge jb push leave push push repnz nop movupd mov push push dec cmc inc ret cwtl mov hlt xor js add fstl inc mov in aad push cmc scas popa mov add and adc xor adc roll xor repnz out push or or pop and pop in stos pop pop jg repz addr16 inc pop bound (bad) mov push xorl movsl dec pushf cs ret inc iret cmc movswl and adc add xor jmp add pop pop and mov out cmp xor aas or ja add mov lods cld adc mov sub sub stc pop nop out cmc mov mov fldl lods bound and or aad push cmp scas enter or or add addl fisttpl adc adc jecxz jnp ja or add lcall mov or int sub movb or mov and enter push dec and xchg or adc push fcomps add pop jecxz sti add in jecxz ret (bad) mov cmp jo xlat xchg add (bad) xchg into and inc or jle push iret in jle or insl add test and stos pusha out pop xor popf nop test or jne cmpsl sub push mov out adc sub cli rorb push lahf add push cld pusha mov jmp js or popa ja sarb inc fadds xchg cmp (bad) aam inc cmp inc (bad) jbe es push mov xor insl ret leave test fxtract fdiv mov xchg push jno lret push lock dec adc mov repz jmp fs mov dec lahf jle orb pop xor scas add mov addr16 adc nopl mov jae scas xlat dec loope int3 or lods or (bad) sub fnsave or inc push jl or fistp mov loopne aam pop out mov fcoms scas aaa and out ds xchg dec sbb mov jne loopne or xchg xor sub jnp jb pop or unpcklps enter cltd adc xchg cmp or ret or mov adc gs ret daa (bad) inc mov les loope inc cmp sarl push daa adc jno lods pop and cmp test pop pop mov or dec sbb mov sbb aad push mov dec ror jge xor xor shlb (bad) pusha mov push rorb movsb into (bad) arpl jb push adc movsl hlt push xchg lret mov cwtl dec fist push mov mov jle stc sbb push (bad) mov int3 or pusha ds iret push and in add mov mov inc push inc test mov push adc jl aas dec add jmp adc jmp and pop push jge cltd jl lock xor outsl clc lahf test xorb push aad pop inc adc fiaddl lods loopne dec or jo sub das dec fdivrs ljmp clc and cmp sar xchg mov popf test pop pop jns xchg jb imul mov rorb inc or push das add lds add gs les (bad) fcomip xor add push imul push enter rclb push cmp sub cli sarb sub and add aaa inc rcrl jns sbb jge es sub adc mov nop test pop xor je lock add (bad) test sar movsb out popf shrl inc not and pop fimull das dec stos int3 imul mov push jp sub pop inc aam (bad) add or cld sub lahf pop in ffree cmp inc mov or pop (bad) paddusw mov add mov pop (bad) xor mov pusha dec addr16 xor jl xchg mov imul mov ss lret lock cmc out or sub fisttpll dec dec aas mov or add push frstor or dec std cwtl xchg dec mov cwtl add pop movsl push add ljmp in dec cmpsb int3 or nop mov sub enter pop and mov or jp scas mov adc mov bound movsl (bad) iret (bad) jge dec or pop in je icebp mov out xor scas test clc scas or jp ja gs insb pop add jns mov pop (bad) rorb lcall jno fdivrs repz and jbe repz jae cmp test push ficom int mov ds lcall fs out lds or pop add jmp (bad) cmp xor pop jns ds (bad) xor push add aaa pusha lods and pop jb xor push nop nop into ss and push mov enter movzwl out push add mov add iret mov mov dec mov sub imul lock pop rcll into or jmp (bad) jne dec pop std js and sbb das std jns adc xlat push mov jns addl adc out adc pop cld js movsb push sub out popa mov pop xor add and fisttpll aad cwtl sbb aaa dec mov jp push add repnz fsub xor mov push andl mov push add test dec jne pop push jmp leave inc inc sarl mov icebp push push and push jns pop xchg and cmp jne dec test push sti pop out and addb jle fsubrs lret vmovlps push mov and cmp xchg pusha (bad) lea inc arpl pop ret mov add sub pop push mov and fwait or mov loopne and hlt and in cmc pop sub or dec je rcll push add pop lret fldl mov ja rcll sbb push nop inc jmp xor ss jmp in pop mov mov adc out inc icebp and or lds push sub (bad) mov sub aas rolb or xchg dec lock lods iret cmp dec xor int3 sti mov dec fsubrl jmp push mov in or mov dec and jb adc shr pop inc jo iret dec out js mov xchg mov roll pop cmpsb movsl lahf sub dec sarb adc cmp scas pop pop out pop mov out and (bad) or subl cmpsl xchg or add push cmp not mov xor pop cmc push push xchg mov stc push (bad) (bad) xchg push and (bad) or jbe js add sbb xor loop (bad) ljmp inc or into mov and jg and (bad) aaa or mov pop mov and ljmp (bad) jge (bad) xor outsl mov (bad) mov arpl jnp cmp sub in ljmp pop xor sbb test or inc and dec dec pop dec jo add sub sub shrb mov enter rcl push cltd fadd push add push mov call add ds or shrb sub scas lds mov pop int3 or push andl mov push pop push and xor sub (bad) faddl cld addr16 mov lds je mov clc test lods cmp and jg into adc sub xchg push cmp adc pop cltd dec dec and sub jmp and imul jno dec and out add jmp push inc push xchg jl xor jae rcll jb andl mov fcmovb xchg sti sub pop push push call sbb notl das adc mov mov jge fadds xchg inc js loopne imul sub jp push dec xlat lods xchg jp pop dec jnp xchg jb jnp push jb test pop lods mov loope inc insl dec xor adc mov (bad) xor pop ucomiss push daa movsb bound or mov push xchg (bad) aas out sti dec cmp lcall dec shlb les or mulb fwait (bad) (bad) dec fcomps les nop (bad) pushl and xor push mov movsl mov xor shr mov sti out ret xchg sub push mov (bad) int ret jle ljmp mov scas sub std jo popf aam mov jg pextrw or jb loope inc enter cmp jbe (bad) out inc pusha push or pop add mov loope pop cmpsl fnstcw jmp jmp nop sub clc in sbb sbb jno inc jmp repz or mov mov mulb adc sub jle push push lret sub lcall daa decb int ret mov pop repnz add sub ret sbb pop pop pop push jmp adc fsubrs and add sub cmp sub stc inc pop jmp (bad) mov les and ljmp xchg pop movsb mov inc cmc jg or prefetchnta out pushf lods mov inc push arpl inc imul (bad) push dec ror sub jmp lock (bad) mov mov or sbb std je and (bad) lds out mov ret dec sub repz insl mov pop or inc push js (bad) negl xor or aaa mov ss gs and adc jle in ja dec outsl ljmp outsb add push cwtl push sub adc mov loop add xchg stos dec jne or push mov inc cmp jmp mov jle adc push mov or lock xchg jl cmp sub out cltd lds imull arpl les in push cmp mov push addl (bad) test push cs and ds push add in sbb sub push push push inc xchg dec push enter and mov push enter test rorl jg das rcrb dec es add sti imul inc pop add pop jnp adc mov mov pop pop mov cmpsl cmp out pop push test or or dec jmp daa ret fidivr cmpsb (bad) xchg (bad) bnd or inc adc or repz ja dec xchg dec push push nop add sub test xchg pop sbb js sbb push cmp movsl adcl out pop pop ror shlb jp sub push push cltd icebp add cmp xor aas movsb adc sub or adc pop sub das push pop sti out xor loope lret add js cli adc sub ljmp repnz or cmovp pushf inc jecxz ss push or add add in aam mov rcll movl mov mov cwtl (bad) dec cltd pop xor mov aad pop or and test and add icebp dec inc mov mov insl imul push and fsts lcall jge pop les inc add sub push mov je cmpsb pop ja xchg sbb mov aaa jmp std mov jl sub jle lret in fucomp sub rclb ds cmpsl outsb mov jmp xchg push dec call loopew jmp ret pop mov (bad) outsl stos jp jecxz and ja incl daa lock std mov ret lods add xor or test clc mov add jge jle mov inc sti cwtl movsl push mov inc push sub or mov loopne xor cmp add pop jmp ljmp xchg outsl imul cmp sbb rolb sub out test imul movsb repnz jbe cli insb xchg xchg rclb aas pop ss push fcompl addr16 test dec sbb jg js aas add and jmp push mov pop add pop fldl fnop (bad) das ret in leave ret dec (bad) push outsl fistp pop andl push lods adc ret mov (bad) pop int3 mov mov mov aaa (bad) fsubrs and nop sbb out and sub in cmpb push lea repz jmp fist (bad) xor test negb and int mov add roll mov scas jb loope cld push inc cmpsl leave (bad) xor push es mov enter push movsl add push rcrl int3 lods sub xchg mov sbb loop adc repz mov mov loopne nop jbe xor xchg mov push les push lret aam dec imul call popa dec mov pushf mov sub inc mov push incl mov mov sub adc adc jns (bad) cmpsl dec xchg lods pop mov (bad) push fildll popf idivl scas sbb loopne mull daa lcall xchg leave mov test dec lsl push test sub add and test adc adc and add dec lods mov push popa cltd jl fs and inc loopne add push jne out pop dec jns xchg mov pop sub mov shrb bound xchg je or adc add add das (bad) movsb mov pop push cmp out pop push or ret pop push push mov and fildl push test jmp pop pop push push mov pop or rcl jno push push sub jp inc imulb enter push mov vmovhpd ret (bad) repz out loopne shl pop sub pop sbbb mov leave sub add push mov mov lret pop sub pop cmp aas sub popa or inc sar add clc (bad) fcmovnu jo pop mov aad mov cmpsb pop sub adc cmc mov fwait repz or pop sub test (bad) nop push mov adc cmp adc andb (bad) call loope inc cmp push adc loopne enter mov ret push pop cmc mov add pop add out jl mov mov or in jb adc and lods cmp test dec sub sarl ret inc jb pop sbb or mov xor push push adc xor sub pusha std mov push stos fadds inc movsl sub bound fcom xlat arpl inc adc xor mov sub pusha dec mov jmp fildll mov xchg ret or inc sub push cmp pop es adc popa and pop mov or xor dec cmpsl pop int3 mov push divl pop push pop push push aam (bad) mov or in subl mov inc fldcw and fnsave mov jne or (bad) jne (bad) pop lret loop rorl cmpsl and inc sub loope outsl in loop or (bad) icebp mov mov xchg in mov xchg mov jo cmp add aam ret dec iret sub inc popf out pop pop out inc mov sub push cmp jge mov mov inc mov inc sub xor or fistl push ret rcrl icebp add out ficompl push adc and icebp mov (bad) push pusha stc jmp cmp push fldenv add movl popf xor adc pop jl sbb push rclb mov sbb rcll add xor clc jbe push xchg imul ss cmpsl push inc in pusha lret ljmp clc jmp and leave fisttpl ret sub xor cmovo cld xlat (bad) cmp and lahf (bad) daa push stc mov xor push inc cs inc add out (bad) xor cli je outsb jmp push cmp dec sar jb nop pop and inc and xchg push (bad) push add rorl adc imul lea push test add cmp lcall ret das pop (bad) insl jo call cwtl xor scas mov inc in and stos pop push js jno jo mov sahf inc and rorl std pop jno cmp jp mov jb in xor insb lods and or jne jmp add out xchg imul push push mov sahf push jb pop xchg les lods pop dec push inc sub mov arpl iret adc or loope dec push ret int3 xor xchg divl mov pop jmp inc pop mov push mov cmp xchg inc jnp rcll out and add sbb loop icebp xchg vsubps and xor cli mov (bad) (bad) dec xchg fist dec orl mov lahf and test xor outsl lods add cld orl sbb (bad) pushf sbb js cs lret dec imul jne mov lahf mov xchg xchg or mov stos and jmp lret pop sub addr16 sbb popf adc adc in addl push add movsl sahf inc add js or cli test test xchg loopne push sahf stos (bad) mov add lahf out and (bad) or out push int3 inc rorb mov out cmp addr16 adc push idivb or pop je mov (bad) hlt or pop pop cld stos icebp test popa hlt ffree dec fbstp loope cld andl mov jp dec mov and popa outsl cmp stos pop popf (bad) repnz fimul mov in xchg addr16 add ljmp push push cli stc mov pop xchg pop lods stos int3 xor aad add push inc je cld pop push jle ficompl add push ret push mov pusha aad dec mov mov push aas mov adc push inc and stos pop mov add push test xor movsl cmp add jmp not shl sbbl push push movsl stos sahf scas push add or push sarb inc xor lock ficompl imul jge mov js (bad) ret fadd ret add xchg and mov and mov popf inc jg add ljmp jg icebp out mov sbb sub push mov jle mov in push icebp adc xor jle and js enter xchg jno add ds or sbb mov inc mov jg ja cmp mov imul push pop ja push shrl push sbb dec in fistl imul (bad) adc xchg dec les sub mov lods das add add fiadd and mov xchg ret or dec jp mov sub add mov or imul test push jmp mov mov add outsl inc jae mov mov push jecxz or insb frstor mov stc inc adc fsubrl daa pop out dec xchg sti jmp and into push or jmp cmc cs mov insb adc imul insl and scas lds (bad) push outsl inc imul fidiv sub sbb leave xor rorl xchg sub int rclb adc and js inc xor lds cmc scas adc frstor loop femms mov jno pop and bound out pop pop subl inc pop mov (bad) and test cli jle or adc pusha andb mov push mov xchg lret outsb stc ljmp jg sub imul arpl adc pop xchg mov fcmovne add dec add or sbb sub xor cmpsl dec adc sbb test ja repz or dec jbe mov stos dec pop jbe popf mov mov lds ljmp sti mov dec pop mov add imul outsb and xchg shrl cmc ljmp cmp adc mov jg mov (bad) stc adc jbe fstpl push mov outsb andl aas jmp cmp fs lcall adc and dec dec adc inc pop add out cmc sub sub orl mov cmp add jecxz cwtl or add mov dec loope jns repz loope and mov dec test rolb push enter dec stos mov push insb push test imul testl sub adcl adc clc sahf fwait xchg shr pop push test add ret jbe mov xchg in fcmovnb push loope or xchg add adc mov push lcall clc add jb (bad) xor notb adc std les andb mov cwtl mov ljmp push jg pop arpl add fnsave jmp test pop in inc sbb push loop push ror add leave push insl push scas test inc or and std mov jmp out jmp test ret (bad) pop and std popa or add pusha cli mov push mov adc inc out outsb js xor mov je push xchg cmp in inc incl fs lret and adc dec mov imull xor lock pop insb xor or adc sar push lret xor fildl in jbe push or push sub add ret push mov push jmp mov sbb jnp push mov jle test aaa inc out or lds and pusha bound into (bad) push out daa out add andl hlt pop lahf add dec sub enter sbb bound push push iret add jbe inc test lods cmpl mov out out fidiv test lcall add sub xor or std ret mov fcom or (bad) inc scas jnp,pn adc pop dec add enter aas cmp push push shl push das mov ficomp push xlat mov mov adc ss and jmp das pop in add jnp roll pop mov xor stos inc inc mov (bad) insl push cli push outsl jnp add xor add rolb mov (bad) jbe add mov push int jns pusha and rorl cmp xchg jmp jo cmp call stc mov adc jo dec push jmp ret stos shl push adc dec xor shr stc hlt mov ds cltd dec cmp (bad) mov sbb aam jns jb xor es mov jg into mov add loope repz add and adc lds lock jp xor scas popf mov imul mov and (bad) mov cmpsl cmc (bad) sahf sub inc sbb pop mov aas push push add ret dec sahf out pop adc inc dec fnstcw fiadd clc push (bad) out dec add mov cmp push outsl (bad) or movsl (bad) (bad) dec pushf dec data16 insb scas and add insl stos add adc int3 rcl sub dec outsl xor repnz (bad) cmpsb push nop adc ret loope mov add push ljmp mov mov or sbb orl xor add ljmp pop mov pop xlat sub idivl aad repz loop gs and ret loope scas adcb inc dec mov sbb insl in jne ds jae pop inc (bad) inc (bad) sub jg cld push negb mov jb aas cli add cmp jne jne outsl mov push add push mov imul and jecxz ret ljmp lock mov iret pop add jmp (bad) call jg outsl add inc fadd imul enter cmc mov fcoms push daa mov mov inc dec xor lock pop mov jg (bad) imul int3 add sbb sub scas push leave dec (bad) pushf lahf xor pop cwtl (bad) and xlat add fisttpl sub stc adc adc inc push sbb std push pop stos es ljmp push pop push xchg fimul mov pop pop sub pushl jmp push pop leave push je daa pop in mov push dec lahf lcall shl (bad) and push jmp loope es xor (bad) rorl cmc dec lock orl mov sbb lods mov arpl add push ljmp dec jae sub or mov lea fucomp (bad) loopne and inc xchg mov (bad) shrb rcll lock aas lods sbb pop nop push push jmp fsts loop rolb mov or mov adc dec jbe sbb pop outsb add mov or add sub inc stos repnz mov out dec lock sbb mov in mov fnop xchg pop shl push mov or add sub cmp or cmc sar insb outsb mov dec jmp push push lahf ds pop movsl add pop jle push push lcall and mov push mov inc in sub fmuls sub iret pop sbb and inc in insl pop scas xor and pop loope mov mov outsl dec push cli pusha mov fadds (bad) arpl cs or ja,pt roll daa lods loop pop clc jg pop insb and ret clc rcll outsb and push scas loop fnstsw push bound cld inc mov adc jmp cmp xchg imul add xchg in dec das mov fwait test add mov jae sbb int3 add outsb inc xor push andl pop sbb jb ret cmp xor xchg mov sub inc (bad) cli and jmp xorl push pop xchg add and test or stc xor or int3 xchg cli or repnz dec xor fiaddl gs cli add icebp mov xchg ss xchg mov jbe loope test pushf pop add push add outsb pop inc and jbe add or add into adc xor mov pop jne push pop pushf xchg sub lret sub pop lret mov cltd aas mov pop push test insb daa and cli jp push pop outsl stc loopne popl pop sbb in popf in xor mov shr cmc enter jnp aas add sub sub xchg mov pop out adc pop outsl dec imul jno imul mov or fstpl jmp ja xchg enter add adcb pop jg push push mov cmp daa pop (bad) sbb push mov addl aas add pop jmp pop lahf pop adc rcll stc add dec rcrb add sarl dec pop popa pop adc add xchg cwtl mov cmp add das mov fimull xor out lret inc adc jl sbb ret jbe mov push xor mov inc int3 imul ficomp repz pop faddp pop pop jmp pop mov add xchg jle push inc fistl outsb sbb pop cld incb je cs jl dec dec call movsl xchg loop (bad) jmp inc push mov pop ja lea xchg cld xor mov add xchg add arpl xchg inc mov movsb rcrl xchg fs sub pop jo jo add adc mov sbb stc mov pop int3 pop xchg sbb jno fs add arpl mov (bad) jg or mov adc cmp inc orb xor pop vmulsd or or or dec test les pop (bad) add cld in and (bad) in or lods ror sti mov (bad) xchg push andl jnp mov sub repnz fisttpll inc mov xor shr dec incb xor aam loopne cmp (bad) mov test sbb jmp lcall sub inc add lea popl xor push test gs xchg pop push into daa sbb or pop icebp xchg clc dec add add add add (bad) mov data16 (bad) adc arpl and out pop arpl daa push sub add jmp dec pop je out add into adc or daa jne jae jae sub adc pop push dec (bad) pand arpl or add mov loopne jb lcall adc mov clc jmp push test adc jae (bad) outsb or loope jp push xor or or out jo cmpsb movsb xor mov add lret arpl lods mov movsb push es xlat and add xor mov jle shrb inc add xor mov or push fs jmp xchg (bad) sub leavew bound loope add pop push frstor cmp add ret popf push add lods stos and push mov (bad) jae inc cmpsl das jnp push jge pop (bad) fstps aas mov test push je iret mov xchg into sub sbb pop xor add call jns dec pop in or idiv testw push pop cmp loope fadds pop inc dec mov test add out push inc push jle push ljmp or aam imul add and in loope sub mov or pop sub dec jno add mov in push jne adc or mov add dec xor jmp cmc dec cwtl in push pop push mov (bad) (bad) mov inc xor cli cmp mov mov jo (bad) hlt imul inc jecxz rorb add or into mov stos (bad) jne jnp xor push int push mov push gs push mov pop out mov adc jnp push add aas push sbb or push mov sub cmpsb out xlat xchg push sub adc jnp mov ds popf jge fisttp icebp xchg add mov dec outsl cmp and inc or js pusha xor pop not adc add cmp rcrb out push push mov xor into dec xor lret arpl jl repnz fdivrs mov jne jmp sub pop xor pop fisttp das adc sub sub popf cmpsb ljmp out (bad) fimul xor add sub add sbb jl enter inc (bad) movsl dec xchg jge adc push pusha mov out pop xchg xchg in jl sbb incb push cmp pop pop pop enter rol pop and sub xor scas xor push xchg push into out fstps xor mov (bad) sbb cli add dec ret mov mov testl nop and mov push leave dec ret mov cld out daa stos stos pinsrw in andl leave xchg or lock lods icebp adc and movsb mov es les xor cmp fs xor jae decb and jne cltd rcrl testb push or imul lahf xchg push adc dec (bad) or or fs pushf sahf push notl adc in adc repnz or sbb (bad) jns add jge pop pop pop add push xchg push leave popf dec xchg mov das das mov dec iret stc or xchg je mov dec or and mov loop mov xor dec lock shl mov mov mov pop jmp pop jnp mov test (bad) dec pop sti xlat nop sbb add sbb in lcall mov ss testb xlat (bad) decb push add inc xchg (bad) jl cmp dec pop cmp jno cld adc jmp scas popf adc jo and sahf xor lret adc nop out popf add cmpl aaa push and pop or addl push dec aad mov or xchg dec lds inc or xorb idivb pushf mov repz (bad) or mov ficompl loope pop xor dec and and loop and and movsb or push nop xchg pop lcall fwait mov (bad) outsb int3 aad lea lds sbb inc or sbb mov jmp iret push rcll mov jnp call bound pushf push push ja adc lahf repz outsb addb fbstp push xor mov ja imul xor mov adc arpl add orl inc sbb into pop mov sbb jne adc sbb add pusha sahf dec xor add push sbb or jmp shl sub cs jbe sahf rorl adc jnp test or inc add push xchg push adc cmc jmp push push pop shll ja pop and inc push lods adc add test mov jnp xor xor and ljmp and pop mov add cwtl loope dec mov and adc jge add xor rorb sbb fcoms pop adc subb dec int3 aam lret jl adc inc jp pop xor push mov loopne xchg mov xlat adc pop in dec mov add enter lret jne ret js sub add sub xor mov lret cmp mov pop hlt nop inc mov lcall jns push adc pop ds mov and hlt jno xchg cmc add imul pushf and stos sbb rcr mov je repz mov fstpl int3 add fist movl sbb test ret pop outsb (bad) mov adcl mov scas cmpsb jmp fimull test jns dec popf mov adc push mov orb sbb pop inc xor das and pop nop jp fcoms out or subl movd mov les inc push outsl outsb testl push mov arpl (bad) inc stos or jg xchg push push sbb in movsb sub call mov xchg add and and inc add js mov and mov (bad) pop push js add data16 std or or or loop cs push dec push (bad) mov cld mov enter es les pop not and inc stos mov add or ret jp jae stos push pusha unpcklps xor inc cltd dec mov loop jne cld jae xchg mov stos incl gs ds clc idiv adc push pop sbb notl pop stc aaa in and out jge fwait shr fs call les xorb cld mov daa cmp mov aaa add dec adc das repnz leave or stos jmp add adc inc mov aad in arpl mov mov aad test shl cmp sti enter enter cld leave sbbb lret sub sbb inc jmp ror ret cmp sbb (bad) adc pop and push mov inc cwtl jp inc pop sub pop jns dec (bad) ret jmp push lods add arpl insl sub in movsl inc xchg or fwait adc cli shrb pop pop xchg cli sarb (bad) mov ret pop adc cmp mov inc aam ja loopne mov out jbe les fwait mov cmp jbe addr16 or xchg pusha xchg divl rorl adc or push adc xor xchg add scas add jmp fcmovnb xor push sub inc xor pop xchg rcrl and or mov jno or xchg test mov jae jge stos add fs repnz xor adc add jmp mov insb daa pop mov inc sbb jmp and testb adc adc push mov loopne lds imulb pop xchg dec cmp push dec dec add std scas mov push add pop and gs pop cmpsl ret jp and lahf es lret push (bad) ret xchg aam xchg enter mov add les jecxz out repnz pushf pop ret adc jmp xchg mov jmp decl jae sub pop add stos or es lret push pop aad mov push (bad) pop nop push lret cmp jmp out sub mov or sub push xchg orb xorl and push jmp push jmp mov sarl stc dec test pushf loopne mov fs (bad) out mov add xchg int3 push mov gs psubsw xchg and fiadd xor aad push xchg or addr16 fadds mov pop dec inc mov cli inc cmpsl xor nop cs cmp sub push pop xchg xlat cmc xor rorb or xor push lret mov sub add push xchg pop sahf mov add adc mov pop clc icebp xchg stos mov std sbb enter cmpsb ja add mov sub pop pop sub mov pop xor ss pop shll jmp popf leave insl in (bad) cld int inc push push addr16 adc addl cmc (bad) jne js sbb xor lock and adc cs ret scas pop pop cltd mov inc dec shl jne icebp iret and das pop jp mov jbe dec add loopne adc jmp (bad) mov add pop adc jecxz test or not test rorl sub ljmp in push push jmp aam insb and push js add xchg mov mov daa mov notb add mov mov dec rol shrb mov xor mov test push adc pop insl lods fsubrl and in push jg aam outsl test jmp and mov or xlat mov cmp repnz mov (bad) mov or (bad) dec mov add push aam jmp cmp cmpsl cmp loopne inc xchg pop jmp or std test shl mov inc repz pop mov es icebp push sub pop sbb pop push sub or mov (bad) pop push push pusha fnstcw add jg gs sub aas jmp out inc jg mov outsl adc orb push fiaddl lods shl dec rorl add popf push mov pop xor pop pop jo lds push shrb jne negb fucomp sti outsl movsb sbb popf stc out data16 das in jge push mov mov jne rolb in not sti jno jg add pusha xor sub mov jmp mov mov in shr stos mov jg pop push xchg and repnz pushl pop pop push pop cwtl jne adc out fildll mov pop mov inc in jmp sub pop adc (bad) push mull lock mov rolb push test add mov icebp mov fbstp pop add push pushf cmc mov (bad) test pop cmpsl add dec add add jmp fwait xor stc leave xchg adc test (bad) fildll inc pop fmull xchg hlt insb out test (bad) mov or bound and push rorb jg outsb inc repnz xor aam xor std push inc dec inc mov out negl fild mov and and out add imul stos pop fnstsw push clc mov xlat daa jmp mov jle push push daa jg cltd inc adc fs xor (bad) and add cmp adcl or cmp ljmp inc aas xchg mov or shrb stc and ss mov mov ret jns add shl inc jmp jecxz add and es cmp jmp lds (bad) dec cld dec pop test mov inc add adc stos jne scas and push mov test cmp sub or in daa sbb add aad pushf jmp lods mov and xchg shl imul daa imul or xor stc xchg mov mov mov inc fsubr jns in or fcmovb sbb repz rcrb ret or jae nop cld cmp fwait add out push push and fcmove hlt pop test push sub aas xchg pop jno inc push lods mov inc sub cmp pop ret pop jmp negl lret fsts js pop sub pop push (bad) adc pusha ret add rcrb cmp xchg xchg hlt jno xor fcomps jb addr16 push sub push loopne mov lret insl and stc sub mov pusha push adc out cltd cs inc push add sub lods inc (bad) mov or pop mov push jbe out lret add in inc add xor shll add aas add ss push lea cwtl xor adc (bad) jno cmp cmp sbb add jmp test adc dec iret xor (bad) xchg movsb cs ljmp cld mov aaa jmp mov or and adc cmpsb icebp cli cs mov mov add push sub cmpb roll jmp out div or scas enter or out lret cmc mov pop dec xchg xchg push and sub cmp mov push (bad) adc inc mov jb arpl das mov xor cli xchg cmpsb mov aas mov jl sahf cmp pop imul and pop ss loope (bad) jge mov push push loop push in mov adc mov gs jle add xchg push or stos ja dec loop ja pop outsl or cmp sub jmp fidivl cwtl jmp out iret jmp xor adc adc sti test (bad) jb push aad outsl ror xlat mov push addl add add mov push xchg je popa jmp andl jne shrl add and sub inc (bad) repz int3 jl mov in out daa jmp adc and mov pop jne pop pop pop fildl xor xor mov fimul add in mov out mov jmp sub inc movsl hlt inc inc pop fxch push leave jge push scas (bad) loopne rcrl in inc mov pop mov push mov into ljmp sbb inc jnp and and and fsts xor movsl jo jns push push pop dec xchg xchg stos loop mov add mulb lock les imul mov sub fnstcw pop popa adc jno dec sarb sarl call call cs int dec test sub arpl add js outsb adc jb push or loopne iret push xchg fld push andl pop inc clc sbb cs addr16 and out je xchg xor jns inc add in xchg leave rcrb adc dec icebp adc (bad) fs popf cltd (bad) push call jge xchg sub ss and xchg or repz sbb jne add mov pop nop daa scas or stc and pop dec jle mov in not push std xor jmp movsl pusha nop push leave xchg push xor jo es xchg sub lock outsb stos xchg lret cmc pop sub mov movsl rorb pop rorb in out xchg mov adc jns lds inc insb aam sahf mov push daa fistp push xchg push cmpsl push push in pop shl push inc jp xor add andb push dec sbbb inc lds mov add adcb stc pop adc add add fwait push (bad) adc jl mov repnz jge mov daa push dec nop aas and xor mov fisubr sub pop dec pop or cmp sbb cmpsl cmp cs loope nop mov xor push daa jmp test push or movsl adc push mov pop stos xor sbb adc cmp or push jo sub addr16 js xchg mov mov pusha dec push push dec pop cli popa and add add push push mov cmp push mov mov xor dec popa and int or jne mov cmc push xchg and fdivrl mov push or addr16 push adc test or pop push inc jbe add bound popa inc jnp daa movsb fstl ret jge cmp mov mov cmp add rorb (bad) int3 jmp pop push inc test pop cmc iret lock sub push rcrb pop mov inc sub xchg jno jmp xor pusha loop jbe cmpsl movsb ja fs cmp lcall dec jmp int imul dec out add mov mov in (bad) jae int3 xchg add pop das ds mov dec int dec ret lods lods cmp ja adc pop push hlt loop adc loope cltd rolb cmpsb pop xor push pop xor jmp stc imul mov and pop mov jne cmp xor test movsb ret emms push jle mov popf add into add cwtl mov inc push add lret rcrl adc jmp and push enter push dec and dec shrl test inc scas pop adc dec push mov push pop cmp hlt and mov int sbb dec pop or cwtl dec jbe lods cmp cltd rcrb ljmp add pop xchg icebp push das je js mov jnp test pop fbstp out adc dec pop sub add push push push sub cmp xorb dec sarb ret (bad) imul lahf pop inc aas cmp mov mov jle cli sbb push je dec add das ret sub adc ss stc sbb cmp mov push inc push imul cmc rcll add insb test and js push mov adc bound add in in sub dec dec xchg stc cmp jbe mov inc imul je push in enter push jle and jmp lods ds adc inc xor aam add add cmpb sbb test jo mov push ljmp movsb xchg fs dec jmp (bad) cli aas xlat dec push scas sarl or mov shrb outsl jmp addl (bad) ss fmuls (bad) or in cwtl mov cmp fwait mov out jnp test repnz movsl mov fld1 push adc in bound mov imul mov mov lahf adc insl imul aam add sahf xchg sbb jmp cmp aam ljmp push inc pop mov popf pop dec add icebp jbe pop inc scas add dec pop sbb mov mov pop ds inc adc inc lods xchg iret jae xchg inc scas add stc dec insb mov or xchg add sbb mov mov popf inc lahf inc scas stos sub add stos aad fnstcw cmp outsl mov mov inc into sub mov jge fs or jmp cli jnp mov clc push (bad) push xlat scas popa pop xchg pop xor (bad) inc pop loope ret sbb sub nop sub sti in dec xchg ficom (bad) sahf jno jnp fimul pop stc push pop ds nop push frstor push mov addb adc (bad) pop stos or ffreep push pop (bad) pop xor inc sbb mov add lahf popf pusha imul mov pusha and cwtl js (bad) arpl fs ret fsubs jne (bad) inc xchg xchg pusha and imul push jns jae test push ljmp push icebp or jmp pop into movsl add add jmp out xchg pop in cmp mov jp sahf aas add sub cmp fs rolb mov xor sbbl stos int3 add dec scas leave xchg add testl add lods push pop loopne fs xchg jmpw addr16 xor pusha data16 insb neg cmp dec push xchg loop cmpsb jmp in add mov pushf dec test jns xchg iret inc stos mov and or cli das imul (bad) into cmp ja push ljmp add jg jmp lods (bad) mov xchg or jne pop adcl push push push adc mov jbe out insl leave insl rcrl add jmp adc daa jnp xor sub repnz pop add cmp outsb pop or add in sub ficoml lret sbb (bad) inc pop and dec dec ljmp add out dec jo pusha inc push shrl addr16 not or lods or shr movsl roll addb and xchg je outsl push mov dec rolb lock loop movsb push cwtl xchg add dec mov dec cld shrb cmpb add loopne mov mov pusha mov and mov xor dec or (bad) xor in hlt adc pop add mov sub icebp mov lcall mov lret sti pop test into imul xchg call inc test pop xor dec inc test das dec add mov push mov push push call inc mov fsubr call inc push into or movsb dec jbe adc inc addr16 out mov in hlt std test cmp outsb inc loope lret icebp dec cld mov push mov xchg pop and mov fwait and daa dec add xchg lahf push cmp out push adc js mov int3 jbe and cmp je fcoms add mov pop or in xchg jae and add adc adc orl in xchg adc cmp pop popa outsb xchg cli pop xlat dec cmc jge inc cwtl mov jle inc (bad) fbstp lods jo adc jne cmp push aaa mov or jmp jle lret jle fcomip scas mov pop push mov inc bt dec push mov ret mov stc pop mov lock mov push mov adc out mov lods les das cmpsb data16 or mov mov lret push in mov dec enter hlt incb sub (bad) cltd ret ja enter mov mov push sub push mov les xchg arpl cwtl incb pop gs (bad) mov negb adc les xchg xchg xchg sbb mov (bad) mov sub test add mov push jmp inc add mov test jmp push mov sub add sub into dec add xchg sbb jp movb ss shr mov outsb sbb push xor mov add push (bad) sbb (bad) pop dec hlt and push loopne or sbb adc xchg pop scas push pop or (bad) arpl dec xchg shlb push add test push mov stos ja sbb aam jmp cltd mov mov iret jno in mov mov rolb inc cwtl mov push fimull sbb sub cmp sbb xor inc push fstps dec fnsave cltd int rorb inc sahf (bad) pop fnstcw out outsb mov and inc sub dec jae es fiaddl ror inc add adc movsb mov cmp pop cmp cmp ja in test fsub xor loope sub add call fidivrl push pop rcl sbbb into xchg pop push push loop das pop pop inc mov inc cltd lock mov sub fs mov jae xor jns sbb jge bound lock push cmp adc pop pop add mov push idivb pop jmp movsb adc pop loope orl dec aam and pop pop add and lds out push sbb into mov out adc cmpsl ja cmp jp stos (bad) call cltd in sub lret rclb mov sub xchg mov mov mov bound test pop jge sbb and rcr int3 test cmpsl fbld push mov and arpl add xor sbb or mov cwtl shl gs int3 nop push xor jne fucom movb pop add add in popa test repz pop mov or jmp (bad) adc shrb nop addb or jg dec pusha mov sub je (bad) pop inc mov jmp xchg negl sti repz rcr and add jge sub jle or mov dec jp adc add pop aaa pusha sub push in test mov push popl fldenv pusha pop jmp cmp pop test popf jne mov (bad) and and inc js push insl mov sbb lods fcmovnb mov push push mov push in and out les pop test mov fwait (bad) mov push icebp xor mov and out sub mov pop clc pop xor insb pop nop add jmp hlt push xchg mov sti xorps out mov cltd inc inc loopne mov jecxz jno add pop add stos inc sti fdivl inc jb cmp pop cmpsl fmul sub mov xlat inc inc sub mov xchg inc scas out jbe jo or and add sub adc push add sub push inc lea xor xchg push insl and out xor jmp imul mov repnz mov out jb aaa and das lret add sbb mov pop or add push (bad) movsl and addb inc outsb sbb stos outsb adcl inc add enter xchg push lahf xchg gs loopne test rcrb jnp daa sahf jae mov in and fnsave jg jb mov stos (bad) arpl fs sub xchg sbbb pop les lea lds push mov pop inc pop adcb inc pop jno adc sub push movsb and add ret dec jp scas mov mov daa aaa mov sarl iret jle jle and mov popf add loop outsb sarb or negl push mov inc lods (bad) push push stc xor out (bad) insb cmc out repz daa push pop in fldl add loop mov jne jl cwtl mov aas pop sbb pusha and adc shrb mov dec jmp jmp xor call cmp and jb fisttpll pop push (bad) pusha das dec jle jmp push clc ret movsl pop fbstp and leave push mov loope cs or pop cli fwait sti lret (bad) adc and sub repnz sbb (bad) lds lret add je das jp and lcall lret xchg adc push mov mov (bad) xchg add xchg lock jmp jb sbb add rcl icebp addr16 pop dec and rolb push cmpsb cmp orl add cmc pop loop mov jo xor pop iret stc xor jle add loop push lods or mov pop push xchg (bad) or nop push mov out mov or or sub or or mov xor or lods xor ret dec push add jmp dec testl mov cmp (bad) stos add and loop not ds ljmp idivl in (bad) loope push pop push (bad) ret and stos stc sub mov pop push decb xchg xchg loopne testb add mov aad cmpsb pop mov sbb lds (bad) sbb mov je xchg sub out imul push inc aad je fadds stc into pop imul mov add add push jp and pop outsb push sbb pop mov loope pop mov in and cmp (bad) mov mov xchg test imul (bad) addr16 (bad) (bad) push xchg inc dec fmull dec and and xor xchg mov pop popa mov nop sbb (bad) pop dec push push jmp cmpsb jl das pop push cld ljmp (bad) leave fimul cmpsl inc pop pop fstps aaa roll bound xor mov fwait daa inc aaa pop push scas push push mov jl imul int3 or add adc or mov cmpsb sbb rcrl fimull in mov or rol fnstsw jmp movsb mov push out cmp das out dec (bad) frstpm(287 inc and pop cs scas fistl sbb mov fldl (bad) mov and add lret jns sahf dec js test data16 nop fwait or sbb fistpll dec xchg add adc clc push mov pop adc add xor test aaa cmp jne or pop cld jbe sub adc incl addl mov mov pop test dec out das xor mov xchg jg and inc je adc add and add inc test dec push ret fnstcw and push mov arpl out inc inc cmp cmp andl pop or add lret cld jmp movsl lock push mov xchg mov mov jbe cmpsl imul sub ljmp fimul mov push data16 fbld mov fmuls cmp dec les popa push popf or mov idivl mov dec leave sbb pop sbb push std mov xor add or clc and adc icebp test mov bnd inc jmp or push xlat and jg lods rcr mov cld add pop xorl mov test add mov jmp add pushf sub xor jmp stos std test rolb ret outsb test adc or adc jae sbb push seto mov jg jno pop adc jne adc inc xlat xchg inc popa push hlt mov call in stos mov jne arpl in sub mov jbe nop mov in (bad) neg add inc push add bound add adc nop pop mov or push push icebp fimul and lret or or push pushf and or aam mov jle cld ret imul aad lods xchg sbb enter xor push pop adc mov push mov cmp jmp stc outsl fs pusha push test inc in xchg shr adcb xor pop mov cmovno rcll cli insl sbb sbb out pop sub aas push mov push rcl inc mov or push je push into pop lods and jns adc pusha or inc sbb pop pop add inc fiadd mov sbb scas lods cmp rcll movsb mov inc adc (bad) (bad) cmp inc adc shr test rclb aaa add out outsl daa and jmp or dec mov xor out adc or cmp fsubl pop jmp sub int add (bad) hlt aaa or in (bad) icebp fcomps dec ret lock fldl (bad) add dec push dec lcall and sub cs xor cmpl pop jmp mov (bad) jo rcl pusha xchg out push arpl outsl xor or loope push dec js jp pop xor mov insb outsl inc cmpl add iret inc imull add lret push insb insl jne cwtl or jnp jge sahf das push push test jo mov jne and scas add jmp or and or xor call mov or adc push mov pop pop out pop push cmpsl pop add (bad) stos (bad) je xchg mov inc cs adc lds push lods mov movsl mov xor push pop or shl adcb xor jge push push xchg adc sbb sbbl lods push jmp jmp cmp fdivr scas adc lods cli flds inc les scas (bad) rolb nop nop mov mov (bad) jmp popf jnp in push cltd cmp and std mov fucomi sbbl loop daa je insb dec loopne testb mov xor jo lret dec cmp scas imul push sbb xchg dec xor add dec add adc lock loopne imul sbb add aaa mov jmp xor adc or jecxz cmp adc orl cmp (bad) cltd (bad) cmp jge jnp adc out jmp test into addr16 mov dec (bad) sub repz and pushf sub ja pop push push ja,pn test mov pushf insl or in movsl hlt mov jmp and outsl pop stc lds lds and cs sub ljmp pop and cmc add data16 inc push or pop mov int arpl int andb and sarb pop scas cmp and andl cli or pop hlt movsb add sub int in ret popa jmp mov dec xchg cld ja rcrb jne push or loope dec adc dec std push add popa or (bad) jno das and mov stos pop xchg pop (bad) xchg push push jecxz ja testl dec push pop dec and xor jae (bad) test loope add or stos fwait ds xchg dec pop fs push add (bad) clc push xor xchg lahf sbb sub cmp pop sbb (bad) push ficom cld je scas repnz pop lds dec (bad) pop xlat dec push mov inc mov jno and imull pop out or jmp pusha xchg xor cs repz xor mov adc inc or movb or inc sub fisttpll shll lret mov and sbb pop rorl sbb and clc cmpsl sahf or lods daa pop addb test pop jle or xchg int int3 mov jnp or (bad) lock cwtl pop jle lds aaa xchg nop jns roll fdecstp xor dec jns push popf dec ficom or pop insl repz jns or and arpl scas pusha mov inc test adc jl xor sti icebp outsb and ljmp (bad) ljmp jl sub add and pop xor es mov mov cmp insl aas les mov mov leave add push cmp lahf dec dec aas mov inc movsl scas dec stos lcall not movsb mov (bad) mov aaa dec cli adc aam scas adc mov lahf ret xchg inc inc add push push pop and orb push inc and in sbb sub cmp (bad) sbb fdivr pop sub sahf inc mov test pop out outsl cmc mov in xor push fsts mov sbb test fstps movl or mov imul sub stc inc adc mov lods adc and mov mov push ret lea xchg xor and mov ds push or inc mov jmp mov in add fcompl int3 ret es test lahf mov pop fdivrl mov jg mov pop inc add test cwtl dec and or lds scas repnz (bad) stos push fs pop pop adc pushf stos add outsb mov mov fs pop sbb scas xor ljmp bound inc pop cld xchg mov rolb dec comiss push mov loopne push out (bad) mov mov rolb add test dec xchg jge andl rclb mov mov lahf ja mov mov mov int3 add xor sbb sub jmp loopne jnp addr16 and lahf mov or push mov sbb push and xor mov push dec jae cmp xchg testb add push or ja outsl loop clc or addb loop sbb es mov adc loopne push fdivs test pop inc dec push sub dec jno out cmp cltd dec adc dec push jmp ljmp mov stc dec sub pusha sarl rol inc loope sbb inc mov test push mov adc in sbb cmp mov or push and inc pop mov pop sub out push in and mov dec pop xchg int (bad) mov push pop test add out xchg jl jle adc jmp mov dec out mov sub push call ja xchg inc pop push xchg (bad) ret mulb in adc je push xchg mov sbb adc xchg dec std and repnz add (bad) jmp mov fs or mov shl push fcoml shrl mov arpl cmpsl mov sarb or pop push push ret cmp shrl fwait mov push mov adc jp ja popf lods add cli repnz sub (bad) sbb pop (bad) xor insb xchg nop movsb out cli std mov rorl movsb jmp pop stos je shlb mov and mov fisub jbe cmp xchg push inc pusha sbb pop inc xor adc push test pushf add jg bound cli mov mov add out pop repz pusha dec cmc xchg pop mov mov mov cs testb ja push add inc sub neg xchg into cmpl mov push add xlat (bad) daa outsb pop pusha dec push movsl xchg enter sub and xor push add push pop aad sbbb sbb sbb sub cltd lods push fisttpll push mov add daa je lock xchg jmp pop ret adc int3 dec mov mov push ficoml dec cwtl and repz pop outsb pop xchg not xor ljmp dec bound insl daa pop dec cmp push dec push bnd sti cmp scas xor jmp xor mov clc imul fsts pop mov in add ljmp scas or pop xor aad and imul jae adc cltd xchg cmp movsb mov neg push mov sbb ret mov call fdivrs pusha testb xlat pop shrl aaa mov into xor mov pop inc clc push inc pop sub loopne adc pop dec push mov daa push lret mov sub add mov sub inc cs cmp out xchg lock in xchg add jb scas fwait adc jmp rcll sahf add (bad) clc (bad) pop mov fisubl add xor push mov and jo mov mov aas mov dec mov or shrl and into mov push enter add (bad) gs inc data16 cli inc daa xchg inc das add rcl or pop daa mov pop ljmp mov pop cmp or jp shlb xchg jne addb pop jb lret xor in sti jmp sub lret sbb (bad) fs push dec and cli mov daa pop nop hlt pop arpl stos (bad) int pop sbb popl out std sub mov cli xchg and lahf mov call fnstsw out xchg push sub mov add pusha push sub cmp mov lret lds adc call push andb sbb pop popf das cld jmp xor lahf paddd fdivr xchg sub mov ficompl neg cmp mov or and sub outsl in add xchg pop (bad) jg clc (bad) mov mov pop mov inc push push xchg sub mov or cmp xchg jne ficoml mov (bad) int or sub and cmp dec aam mov les (bad) in mov adc or lret xor mov ss or (bad) push stos ret pop mov jge lahf lcall jo jp or scas stos inc mov (bad) rcrw and in in inc jge push pop pop insb lcall arpl sub lret lods test mov sub insb or int jg es aaa or repnz mov and aas add aas les xor sarb jnp in xor inc test mov push lods push rcrl aas xor out add and test mov push insl or add aad push mov jno pop clc xchg ja (bad) arpl add and shll pop mov stos mov mov lahf dec inc mov sub pop add mov lea cmp call pop adc pop dec movsl mov mov or mov ficoml scas xor sbb repnz mov arpl push pop sti dec movsb scas inc and daa add xchg mov orb or fcomp push jge mov repz jg add push mov adc popf (bad) in dec loopne dec bound add inc aaa push jb jb sub mov pop scas aam cmp scas inc and lea in stc pusha mov hlt mov push fisubr jl pop test popa inc fwait (bad) dec add jbe test adc mov xchg pop out push (bad) rcrl sahf push push ljmp pop enter mov sub or cmp add ljmp pushf test xchg mov adc push push test jnp,pn inc leave push out movsb or add mov loope add in aas mov xor and pop (bad) dec cli pop movsb aas mov out test push test movsl sub add or dec ret jbe ja fcompl add adc cmpsb inc adc sti adc sti mov add or ja adc fucomip xor scas push adc cmp inc add sti outsb inc jmp jle leave (bad) (bad) daa mov and fnsave int3 repnz cmc push adc (bad) in sub adc (bad) mov xor in cltd scas fisubr repnz sub adc and inc js testl (bad) mov (bad) pop mov pop push inc cmc test adc xchg push stos data16 cmc lcall push jbe pop xor cmpb add pop std adc imul inc cld mov adc clc stos ficomp and and push xor outsl add xor pop sub pop mov call push mov dec shrb pop push lahf rolb sub stos js pop add mov pop xor aaa jmp mulb xor or es std sub or (bad) jo popf cmp push jb dec xchg add push push push cwtl xlat das jmp enter lahf (bad) pop or sbb mov pop insl jp (bad) pop sub add add mov add enter cmp bound push js jle add mov shrl sub pop push xor push lea adc jmp push mov (bad) pop mov push not ror pushf push adc std pop sub sub pop (bad) inc pop push push push add cmp jnp mov movhps mov mov mov jne xchg and and (bad) bnd idiv pop and mov jae and pop dec sub add lret dec mov mov ror push add add xor push sbbl in enter int3 lods pop test jecxz mov mov sbb add test jl pusha dec mov lds mov mov fwait mov sbb xor lock pop add shrb inc jbe dec imul loop js es and or add inc shrb mov or lock (bad) dec or cmpsl sub std mov push lock aam cs push and dec jg mov mov cmp nop or mov mov pop or int3 cmc shl outsl stc jmp cmp push outsl ret pop pop decb clc je sub adc inc repz push (bad) pop sub inc adc xor stos and (bad) outsb les push inc adc adcb add pop cmpl test dec test push cld pusha rcl adc mov rorb pop sub sub in pop push adc stos fs loop add add inc pop sub or sub sub adc inc mov ret pop xor jb sub jne ror jnp pop pop sbbb mov push adc adc imul hlt push leave push xchg cmp jb test push jbe in addr16 (bad) sbb dec pop test xor out imul sub lahf out xorb sub hlt pushf pop dec in neg jo add and mov mov shr mov ja add fwait call pop push push not xchg fsubs ret icebp push jne pop out jae push stc movsb push (bad) (bad) mov pop repnz cmp xchg sub movsb and mov stc dec add mov sub add inc cwtl js jmp and jbe leave test shl call sub pop xchg pop rcll pop mov mov dec cwtl inc jmp (bad) mov hlt inc push push jp xchg adc stos push call dec lock lea xor jno push fs and mov sbbl pop inc or sti aam and clc das je push mov mov leave adc enter jns lods in notb outsl push push inc cmp pusha mov pop sbb or movsl lea aam jp repz jns jmp call cs jg aam out mov movsl adc push iret pusha mov mov dec outsb mov pop aam or fldcw pop push lods pop adc negl repnz (bad) xchg inc xchg lds add fldl jg dec shr jo xchg aaa mov inc jne sub dec fild inc ljmp mov xchg push push dec loopne xor jge and shl push and xlat clc enter jmp mov jne sbb loope stos je mov fs movsl pusha pop pxor push mov mov out je inc repz imul fldl (bad) xor inc inc jne and adcb add cld popa dec mov in dec cmp mov jo mov ret push cmp cmp mov popa jmp pop pop iret cmpsb jecxz jnp (bad) movsb dec dec dec jl imul push aad push mov jno pop dec pop ret lahf roll cmpsb mov pop dec (bad) and (bad) in sti jb jle pusha sub test in in dec fs shll add xchg mov out sub push push mov jne inc ja bound xchg cmp ret jge or imul jmp pop push jmp (bad) mov fsubrl andps daa or and dec add add xchg sbb pop cwtl addr16 and mov inc sub or int data16 enter jecxz xchg push pop in and scas mov adc fild rorb pop xor dec dec in cld rclb jne repnz jae (bad) js scas xchg inc inc xor repz mov pop fs mov pop rolb push pop jecxz or mov jle push inc mov add loopne cmc add xor fs mov xor pop add fisubrl faddl pop nop mov add icebp mov in sub dec rcrl scas mov fildll push sbb sbb add pop negl in ljmp jg dec jl iret jmp pop xchg pop add cwtl jp,pn ret xor idivl lds or push inc pop sub in cmc or and mov mov mov lahf or push sbb inc cli sub shlb jmp repz inc ljmp inc pusha pop and add adc imul jbe dec and mov shl loope (bad) add pop jmp sub lcall and ja mov mov jmp xchg dec mov bound mov es jl sub add adc cmpsb adc scas nop cwtl cld jge dec sar (bad) aas pop xchg ffree sub (bad) (bad) mov pushf call and inc jg xor iret sub js aam out xchg pop dec add push push call in xor pop jp jns (bad) xchg dec cmp mov add lcall or (bad) (bad) mov add mov pop jge sbb mov loop lret pop push inc sub je (bad) arpl rcll mov pop mov dec out add movsl repz xor mov push dec push hlt inc not jmp les cmp daa cwtl mov jmp xchg ficomp adcb dec mov xchg cwtl lds sub mov add push stos lret or pop (bad) outsb mov pusha mov andb repz xchg pop push loop jne mov stos (bad) adc add ret inc in add aas jb adc push hlt pop jle in ds xchg ja les mov add jp fmul xor jns icebp mov (bad) and jle mov cmpb jmp out lds mov jbe or and aam xchg push stos add and jno xor hlt iret dec test jecxz adc dec pop jmp jno inc lea out mov dec inc jae lahf ret ds inc sub sbb xor push adc add mov inc fild rol mov cs xor inc jmp add fstl jmp (bad) mov add sbb push lcall call add (bad) mov fildll sti or dec mov push leave push into loope xchg test jmp repnz mov jne xchg daa pop sbb xchg cli dec aaa adc mov iret stos xor mov movsb fadds scas fldenv push pop (bad) aaa push cmpb xor xor jbe cmp mov xor std mov (bad) mov xor cmp dec jmp add add push sub (bad) push insl lods xchg xlat rcr xor leave or arpl in es (bad) xor outsl (bad) mov loop and push jmp loopne repz adc insb push pop push xchg sahf xchg addl jbe push mov jmp mov pop add test ja repnz das add and clc jo sbb cmpsb xor loop jg xchg xlat or add insl pop hlt popf sub sahf lahf mov cmpsb adc lock inc sub (bad) leave dec andb daa push sub lahf mov ret rorb test push and and mov push cmp rorl outsl sbb sbb push sub or movsb inc add cmp shll pop push popf jle sbb xor add and jecxz add jnp (bad) mov add or test mov mov cs pop push ja popf add ss jno mov das out cmpsb cli (bad) pushf mov add xor je inc lret pop fcoms mov and sbb inc jno pop mov mov mov add imul aas (bad) out push jge add addl aas outsb and mov mov and out inc aaa mov mov stc ja xchg or jle out test sahf pop add push jmp sarb fidivrl pop and pusha pop dec movsl dec sub adc (bad) jmp xor fsubs adc push jecxz cs loope sub lret loopne stc adc jle or lods cmp (bad) stos mov adc test bound mov jno cmp test pusha push cmp or xlat and pop mul mov dec cli jne mov leave fcomps cmp cld xlat push stc in std xchg sar icebp jb inc jb mov dec (bad) out mov mov or inc push or jmp (bad) or push pushf jle jmp xor or std pop sub push int3 dec dec ret ljmp mov out sub push push add bound aad jbe (bad) je pop dec fisttpll incb xlat lret nop or adc mov push jnp ja lret mov ficompl jns (bad) dec adc sub sbb jle cmp imul pop int xchg add pop enter repz rolb pop pusha das sub imul test xor out scas daa call xor roll adc js mov mov mov pop jmp fstpl push sbb cmp shl add pop mov mov movsl test mov sti xchg inc call icebp xor subl dec cmp shrb pop sub mov aas fmull mov and xor push lret push cmp dec int3 js lahf movhps push mov cmp add out add cs lods div jne popf adc repnz dec test pop orl ret loope ret mov es inc aad jg in sub and nop mov rcll jl pop cmc sub lds (bad) fcomip je xchg pop push mov rolb pop dec jae and jbe add pusha sub pop and sub mov and cmp das mov or jmp push mov xor ja add sar enter adc jns test and ja and jno (bad) or or mov ret pop cmpsw push mov xchg imul es (bad) mov add and pop push mov add lret add add or nop test dec loop mov mov jae push loope lock gs jp and stc sbb in cmpsl jle adc jecxz mov lock sub mov xor sbb aas jl jg pop adc insl push mov adc push mov pop sbb add dec ret or hlt lods sub or (bad) pop mov (bad) and pop outsl incl popf pop es cmp rcll mov outsl add mov sbb cmpsl fs pop and sbb inc pop push xlat call hlt sub mov movsb (bad) ja fstpl shrb loope popf into jae xor les into ljmp xchg or jl imul ficom dec sub mov jmp insl or fbstp inc xchg test popa push in dec adc fsubr mov jle mov lods ret leave sub not inc fadds jge call (bad) push les test inc push mov pop (bad) pop das pop add pushf push cmp mov (bad) sbb pop sbb and (bad) sub ljmp push jge or negl hlt incl mov jmp addr16 adc push adc jns retw in xchg cmp or cmp loopne (bad) es mov (bad) xor pop in pusha inc lea add add adc cmp icebp add adc loopne jne das pop imul (bad) push pop fistl push loop pop push push dec inc loopne pop iret cld out mov add and push mov ljmp dec jle mov call lea push jp retw jae xchg sub ficomp call jno rorb xchg ret add mov add movsl lods cmc sbb and mov jle sbb ficom pop sarb (bad) mov fmull sbb icebp lcall push pop sahf and or hlt fimull push loop (bad) jmp test sub test push push (bad) xlat pop ljmp pop pop (bad) mov push in add jne push mov inc jl mov adc mov (bad) jmp sub (bad) loope xor mov aam pop (bad) jns in inc fnstsw cwtl mov dec shr mov repnz cwtl sbb pop lret mov xchg inc push hlt adc mov cltd adc das jl ret push mov mov rolb or add mov adc scas aas cmpl jmp xor mov jmp mov mov das mov dec add jp lods pop inc and das xor cltd ljmp imul mov and push xchg inc inc push push dec (bad) inc mov hlt ds mov out in andb lods js call fstpl das jecxz and ret push xor mov dec and inc imul or insb mov push mov pop cli mov lds lret jp and or add push push add lock sub pop test movsl shrb inc mov and xchg xchg push incb sbb add dec mov add ret cld rcl pop sub mov and and aas xchg aad jmp inc pop loopne push push sub test mov test bound repz pop mov or jmp push mov mov jl ret push pop or and enter sbb pop adc das push scas sub mov mov call mov jmp mov cltd sti fwait jns push sbb outsl cmp or fimull (bad) or jbe jmp mov jmp inc jle (bad) and mov roll jp add push call (bad) jo add add in or dec jbe das stc movsb mov mov orl aaa mov pop lcall or fucomp pop dec push sti xor aad dec adc inc push aaa cs daa jne xor andl sub inc pop loopne scas dec mov shrl mov adc leave and aam insl jecxz out push adc jge inc clc dec adc push cmpsl mov or lea sub mov xor cmpsl (bad) jge mov idiv jbe ljmp (bad) jmp adc fldcw mov cs fimul push xchg mov out jmp push fldl push push jmp sahf dec ret xchg pop lcall repnz faddl and idivb dec stc or pop (bad) outsb lods pop std imul mov mov pop scas xor jge pop popf divb test inc mov int or fbld popf test stc jo ret dec and push (bad) repz mov add pop mov mov mov aam jb fmuls setge andl cld cli cltd pop hlt jno sub xchg mov mov xchg mov fist mov stos fmul mov cmp push in dec add mov xor out aas jle sahf daa inc test out inc mov fistpll inc loop push aaa ret mov add jmp xchg xchg dec cwtl dec out les dec cmp sub cld ljmp ja mov les inc adc or mov fs hlt leave cmp lods imul rol mov jmp jp sbb clc enter rcrb (bad) jge imul jmp inc icebp inc fwait scas das ja mov push mov jmp push addl mov pop les push mov cmc cmpsb outsb mov cmpsl pop imul fist pusha inc add mov popf xchg ficomp out sub lds jb add and scas (bad) fsubrs inc cmp mov mov bound jnp,pn jae or in das (bad) hlt push dec scas and jmp cld inc mov dec je mov js sub in push push jmp loopne adc imul shrl or test inc or test pushf lods pop jo daa sub (bad) call in mov int pop imul sub dec mov cld sbb sub adc sbb and mov pop and das cld mov sub jmp add add sbb mov fmull mov push or mov pop add push push mov cld scas in hlt call dec add mov (bad) repz cmp dec dec int3 push es popf and or pop pop mov or aam sub or push xor mov lahf mov push push jb mov sub sub adc rolb and pop xchg jb movsb imul daa xchg mov popa fisubl inc rcrb and roll push leave aad fsubs jns xchg iret inc and out fild sbb xor mov pop sbb mov dec and sub dec pop mov dec mov (bad) lods ljmp dec stos lcall in or out mov (bad) push mov jno pop pop gs dec dec cmc lods pop mov popa (bad) imulb jno insb (bad) mov mov push (bad) cmp and and (bad) push and cmp lock mov jae pop scas repz sub roll push push pop and or call cs ja bound mov mov hlt addr16 dec or xchg mov mov test cs xor ret or pop sbb test mov mov dec mov sub jmp testb pop ss adc outsl into xchg push jmp rcl je mov ud2 mov sub pop stos add pop imul add nop jae mov inc (bad) xor pop cwtl repnz hlt or sub clc jle lahf in roll pop clc inc push mov aas pop push xchg pop jp lahf cmp inc mov aas xor sbb inc and xchg xor add push test sti inc jnp push push mov mov sub jp scas sbb ljmp jg insl in xchg int3 push pop push cmp adc in lods daa daa loope add cmpb push jmp scas push cmp lods lcall sub pop rcrl mov shll adc pushf test inc push aas ret int3 pop dec adc push mov jmp gs fstps lods dec mov push scas mov mov sbb bt popf dec sub sbb pop cmp push popf add shr pop sub scas mov xor mov std and cmpsb and dec stos lods sbb push dec mov xor cmp das mov cli jnp jno bound cmc mov cld jns daa mov pushf nop add mov sub enter andl sarb mov popa mov popa or daa add idivl inc cld (bad) enter pop sub in pop dec mov outsb shll or enter jle rcrb push dec mov inc sbb mov xor pop into adc sbbl movsb stos bound push mov imul les stos adc stos sub jmp ret imull mov add pop push dec lods mov (bad) xchg sarb push pop push push mov push mov adc inc jne push or push mov lods jae rorb mov cmp insb sub xchg jg xchg jne fs lds aam lahf adc add pop fwait xor cmp jmp rcll aad das mov add ds scas push jl mov icebp mov cld stos xchg mov mov mov xor in (bad) xor mov repnz jecxz out dec inc lret adc test call adc xor dec in xor outsb bound aam clc inc cs or stos fimull dec sarl xchg jb (bad) sub loopne rclb jo pop lock add pusha sbb push jl jnp mov jmp mov mov push call aam push mov inc sbb popa and stc cmp (bad) aas imul out mov jne (bad) loop push jns pop ret adcl cld fsubl push dec mov mov push out call xor aam cmp (bad) popa sbb xchg xor mov arpl jbe push jg add pop divl popa fimull pop or ficoml and (bad) dec out scas cs gs (bad) fs mov and lods inc repz rclb popl push inc dec pop sbb fwait and push lahf lds jp jno and push cmc push int or movsl hlt cs adc test pop out sub cmp lret scas pusha or mov cwtl push pusha pop jp repz sbb icebp adc popa icebp roll repnz xor div (bad) (bad) xchg (bad) xor jmp add (bad) or scas xchg (bad) pop and add sub jle leave aaa repz inc mov sbb subl jg sub arpl cld inc sub and dec repnz sub xchg ss outsl pop insb loop fmul in std xor mov ljmp inc push xchg mov add cltd mov push or ret and repz in cmp movsb repnz add cli lcall rclb mov inc ljmp jge (bad) lret and jo xchg fdivrl push mov xor ret jge push rcll out cltd lods lods cmp jl rolb dec dec rolb pop push mov sbb fimull mov jnp in xchg mov pop or test (bad) and jmp pop adc mov dec js bound into push std adc (bad) pop pop test sub enter sarl daa push mov or loop (bad) and cmp rcrl leave fs mov es (bad) and adc test out xor ljmp mov add pop (bad) call rolb lret enter out insb out add push ljmp jmp xor xchg inc aad lahf xchg clc mov sahf jbe cmp xchg aaa gs mov fstp cmovns leave inc into mov dec push cmpb or repz (bad) jmp call lods out mov rcll and push (bad) inc daa push push xchg push popf sbb pop sbb ja or jle push add xor icebp sub add in ret inc cmc sbb add gs pusha sub or push jmp lds in mov cmp dec lret add (bad) jbe (bad) (bad) jno ds mov adc push rorl ljmp push xor (bad) movq leave sbb cmp mov dec lcall lahf cmpsl inc pop or out jge push push pop xchg in sub jns leave inc (bad) jne cltd bound jb,pt sbb push push pop mov mov sub fsubrl dec icebp xchg pop cmc sub stos sbbl sbb bound (bad) lock push mov mov sub scas mov adc lea xorl aad push mov dec sub mov adc out pop cld push les jo lahf fcompl jg scas mov cmp cs test (bad) mov pushf icebp outsb inc outsl push sub mov mov mov (bad) push push jl movsl add inc inc sub jo xor mov ds xchg mov lock adc sub or push js push mov movsb (bad) inc sub aaa jbe push imull cmp addl cmp in insb add sub dec aas jns (bad) adc arpl popaw hlt in cs adc push mov stc dec out mov repnz out repnz mov jmp negl dec cmp and clc xor and cmp rcrl fiaddl or add add sub mov sub jnp jo lahf insl mov inc jl mov jmp sub enter add popa xchg dec jl dec mov pop cmp xchg sub (bad) add (bad) in xchg jmp or push pop or mov xor cli sub sbb adc dec out sub sbb sarl pop pop test sub jmp dec pop call jnp movsb mov add faddp andl out and mov imul dec xor xchg and or sub add dec sub fs add dec and bound xchg add pop mov jmp lret add push mov xor aam (bad) fs fs dec adc jb scas xor push mov sbb loop nop xchg cmp pop pop inc dec in push fnstenv xchg repnz push movsb dec pop add mul push adc pop dec xor push gs ret sbb jge xor cmp or xor out ret adc jbe push push (bad) pushf test xor scas loopne sbb fnsave movsb adc jp sbb and cmp pop xor xorl test mov xchg jbe popa aaa cltd prefetch add sub xor xchg cmp push mov pop add adc jno into in add jmp loop or and incl sti add inc push jl inc adc xlat repz jmp xchg cld lret leave (bad) bound or jne (bad) std pop sbb cmpl sti pop imul in popf leave push sub addr16 subb adc hlt push push pop imul jno cmc add lds adc je cmpsb sbb int3 mov adc nop pushf insb mov dec ror xchg add push mov xor push mov add jmp xchg cltd lds jmp scas sub das ret mov xor xor push adc rcrb lock push imul lock das dec inc adc pop add mov cmp (bad) outsb js cmp (bad) iret (bad) shrl inc jnp popf xchg mov leave data16 xchg xor xor rorl push mov test cmp mov into pop (bad) dec bound stos pushf xlat xor mov fistl addr16 les outsb pop out test cmp xchg repz mov test repnz xlat add push outsb mov inc cwtl into pop mov sbb jmp mov je pushl dec sahf cmp jecxz pop sbb (bad) jle (bad) std sub aas or (bad) (bad) ljmp cltd mov ss (bad) jbe xor push fucomi call arpl dec or inc xor pop out jns lahf mov inc test lock jae incl daa jg mov les or cmc adc push (bad) ret aas std push pop and push mov out xchg xor or push inc xrstor cmpsl cmp jnp pop inc das mov push push hlt dec push jg loope mov sub pusha xor cmpsl dec dec jmp decl add jmp add push inc lods popa sbbl mov inc std testl push and cli inc arpl in sub sbb or add sub jmp mov fucompp xchg inc pop out xor sub or dec iret xlat loop std out sub dec (bad) sarb xor pop inc xor jb,pt cmpb mov and lahf xchg sub mov ljmp cs add loopne sub xor add fidiv xchg add and add hlt (bad) clc popf dec inc lods or stc mov stos popa mov mov inc stos out mov push call xorb (bad) jne insb mov aam out addr16 test in sbb inc dec mov push shl sti add push pop sbb pop jmp sbb xor xchg mov hlt cmc mov aad xchg cld cmp push testb lret add add shrl push inc stc and inc fwait (bad) xor push inc out inc adc addb cld shrb rcrl test inc stc inc push fnsave sub adc imul push test and sbb push add ss xchg lock push in pushf inc out add push das out add mov (bad) sbb or and scas shlb mov lock pop jmp mov cld pop xor mov jecxz fnsave pop dec adc push fisubr jb cwtl push add pop in pop jae lods jbe push push mov lods fcoml repnz push and xchg test adc ss or in fist cmpsb or fcompl pop fild pop sub (bad) (bad) push test xchg ja neg stc jo pop pop shll push (bad) sti repnz fs push mov rcrb shrl in scas add pop mov incb daa adc sbb or mov btr cmp out mov lret push xor push xor push es int mov xor push pop jns dec xlat repz orl ljmp test xor popf stos out daa cmp mov inc add pop leave and cmp pop sub cmp jns jno daa push sbb add rcrl push mov rol cmpl fistpl jmp add add sbb dec popf or out in es aas mov push imul cwtl arpl mov in add ret fbstp fs or das (bad) cmc rcrb sbb jne mov das stos (bad) cltd sub std in mov addr16 cmp daa shll stos cmp xorl shl das inc jo cmp mov pop push jmp mov jl sub (bad) fbstp das call testl lea adc mov or inc add fisubl ret ret or imul stos (bad) bound xchg push loopne mov and pop inc cs add pop lcall mov pop sbb add icebp addr16 mov loopne dec andb jle call and inc push not add dec or hlt addl inc (bad) or cmpsl mov rclb fs nop mov xor (bad) push push pop or (bad) into ret push jle ds inc xchg sub inc icebp mov add jge pop fs cmp inc inc mov xlat mov jnp jne add or ljmp sub xchg mov cmc ror sbb sub sub aas jb ja push faddl or icebp repz push jmp xchg call xlat or jmp in (bad) imulb jg sub stc dec inc or inc popf sbb mov in pop mov in repnz test push sti (bad) pop call bound stos sub cmp pop sub push sbb sub xchg add not inc and insb push (bad) incb adc mov cld bswap push lret (bad) mov insl and int3 push jmp sub inc push xor gs mov mov les daa add rcrl xor push cmp sub add sbb andl ljmp jg aas mov fs jle pop xchg idivl lods xchg outsb push xchg mov bound das inc inc mov or leave xchg cmc mov cli inc jle out cmp adc adc popl or push push jge inc cmc lock ret test ret add push enter push mov jmp adc push insl loope add ret in wbinvd dec jmp mov popa jle das std sbb mov jecxz pop or and aaa lret out shrb fidivrl sbb add jmp mov mov pop rcrb push ja daa add or dec fcmovnb push ret mov jl mov ss or xchg adc push je push cmp inc inc mov inc push int adc push mov add mov jmp push clc in faddl add sub sub adc pop pop hlt xchg mov adc push lahf xchg inc or dec push ljmp add (bad) adc inc sbb inc test inc rcll cli jne in xor shl mov lock pop pop clc sti lret adc fwait pop pop jmp (bad) push pop aad loopne std rolb lret sbb shrb (bad) jo mov gs jmp pause cltd sbb mov pop cmp sbbb xchg scas mov ret test sub pop fidivl daa push aad xchg dec pop mov stos or inc jmp hlt cmp neg mov daa pop xchg ja jmp cmp inc aaa shl pop (bad) dec jae sub int3 jb imul add jmp add pop sub inc add in sub ret pop jb push xchg lahf lcall out popf push jmp xlat out mov inc rol inc popf inc and add push mov shl or ret dec sti xor push ds add (bad) mov xchg xchg sbb xor xchg ljmp fist imul mov pop inc xor inc jb fs add and in mov out add mov pop xchg into aam cmp adc add xor inc jmp add scas popa fstpt loop or test jb sbb lret jmp stc out addb sub (bad) mov adc jmp rorb xor mov pop pop repz pop pop adc mov add add jge sbb sub dec sti (bad) enter sub pop mov and jmp push inc push adc fildll mov inc xlat gs mov lods imul push ror mov fs (bad) cmp pushl mov sub add mov mov rol call inc out aam sbb cmc jecxz sub or mov mov mov xchg sahf add incb (bad) or sub jns iret cmp mov enter add push pop shrb dec add mov jle in ds shll mov std push cmp test xchg or iret ljmp push fnop or or push stos add pop sub and jmp test sahf push lods and fs mov sbbb test push mov jle sbb sub nop adc sahf xchg addr16 or pop inc popf das jns dec sbb pushf sbb movsb mov sub enter and ds mov fldenv punpckhdq aaa jle roll jmp cmp pop add sbb cs xchg nop sub ja inc xor and push ficompl orl jmp xchg xor cmp inc mov inc add jns enter icebp outsb mov movaps mov pop pop inc cmp and pusha mov adc inc cld and lods pop sub cmp jg les mov push in stos or mov repz hlt sti (bad) or push stc insb mov inc mov pusha fiaddl push push scas or and stos sarl pop int3 and pop push push pop sub ja sbb repz push xchg dec lock aaa add pusha imul or jne jg sub sbb add and pop (bad) pusha insl xor test shrl icebp popf rcrb lret repz aam adc dec (bad) into jl push xor or xor fsub mov movd aad and mov add stos add mov imul pop aaa push fsubrp mov pop test mov stc pop push push cmp movb cmp (bad) mov push push cli imul clc pop pop mov push jle xor sub inc pusha push push cmp sbb push jge push jbe mov push fsubp and das pop dec (bad) or jmp imul ret push rorb sar pop cmp push ret montmul cmpsb (bad) jle and push mov mov mov je pop aas lods jo imul out add or jmp or (bad) int3 rolb aad push lds iret jge bound orl and popf jecxz test in imul push lret fmuls outsb lods dec push cltd lret ss sub mov push lahf mov jp or and sub jecxz lahf push sar or adc mov sub test bound fnsave mov cmp and mov and sub xchg xchg pusha mov add test mov push insb test xor shl out cmp and cli inc inc mov cmpsl dec dec mov mov lahf stc cmp mov cmp fucomi (bad) jno outsl mov and and mov int jae pop or pop pop scas pop push clc xor mov mov push aam scas loope and aad add xchg (bad) lods adc dec hlt cltd or fwait xchg outsl xor rcrl in dec push js dec xchg es sahf daa push and loop test lret lcall lret inc jl adc pop adc xchg pusha xchg mov mov clc addl loope pop daa (bad) sti mov pop call movsl lock sbb or sbb sub xor push jmp xchg andb pop mov mov jae rcll mov adc mov lds sbb or push mov int3 and (bad) sbb xor sti xchg mov repnz int and aas adc fisttp arpl mov fnstenv jae xchg clc mov and adc test xchg pop dec (bad) mov inc std repnz sub ja inc xchg mov movsl push inc xchg inc sbb push push add xor add repnz add mov mov loop mov popa cmp or mov inc das das loop jbe loop sub mov push push push outsl inc push mov jmp jne sbb aas adc js mov push das bound test and push mov int3 mov aam mov ja mov adc xlat sub dec adc jp das xchg loopne clc insl push push pop pop xchg adc push add in jge (bad) or or add sub lret or adc stos cmp ja inc neg jge and push loopne dec dec aas push jno shl aas (bad) or aam pop add xchg mov jo lock pop mov mov gs arpl xchg xchg cs repnz test and push (bad) push test addl test (bad) outsl dec xchg loope imul add dec scas jo mov std cmpsl stc push mov or into subb or (bad) enter pop push subl pop rclb cwtd mov jns fbstp clc jno sub add cmc xor cld outsl (bad) clc cmp je sbbb jae adc loope inc lods sub int (bad) or pop lret add imul nop jbe test bound dec imul (bad) into adc or dec pushf mov sub loope ja pop scas lds and mov scas fadds jns add xchg (bad) daa add adc push lret ljmp add stos jecxz and add jns cmpb sub dec enter pop sub adc mov stc cmc les xlat out insl loope pop xor in jne mov or mov loope sub mov push mov pushf mov xor stc mov shlb jmp pop xor in (bad) inc mov push mov out pusha rorl and imul xchg into mov fnstenv lcall test lahf sub leave shrl adc test in lock cs mov inc sbb jb mov mov insb cmp mov (bad) (bad) jle,pn xor sub add mov and mov adc push sahf add xlat add dec orl mov test sub ret ret pop or jae jne xchg cmpl stc lock adc leave mov and push adc pop xor mov les popf in addb mov sub xchg rolb mov adc out push std cmp push ss popf ret mov lods add lods mov sub out sub xchg or pop fmull mov and cld aad fistp jg push cltd xor pop pop dec cmp imul jne inc js mov pop sub lret add pushf stc cli inc mov dec cmp and lcall pop cmp test cmp mov movsl mov dec cmp mov push push loopne rclb add in inc or pop xor lods lcall lock fcoms dec sub add fdivs dec push dec (bad) cmp push jg xchg pushf push and out push xchg xor (bad) inc or xor sar dec dec cmp cwtl bound pop jmp add sub pop jle push push xchg push cmc xchg rorl mov xchg scas mov add cmc xchg jecxz xor xchg rorb push (bad) pop inc jle scas fsubrl xor pushf shr or out dec js sbb lret (bad) dec cmp lods push inc rcr add mov (bad) (bad) sub sub out ja popa add inc mov xorl jmp inc sbb ds mov out push jns popa (bad) push jmp push into clc data16 hlt pop iret ficomp sbb cmpsl sahf pop xchg mov dec jmp ret fisubrl sarb mov fs pop xor sti bound jl dec add repnz repnz push mov jo int3 push sub ret andb pop mov rcll sub mov testl cmpsl jle adc pushf jmp mov push xlat xor sbb mov mov push adc cld outsl roll push xchg adc mov loope aas in cmp test jp push das (bad) lret pop mov jae scas nop imul or out add and test xor dec dec rcrb mov into aaa inc repz nop pop dec push add into add jns push (bad) je dec mov hlt aad cmpsb xchg pop cltd je push fmull mov cmpsl mov dec leave aam or add xor lods pop jno add sbb jo and mov pop arpl fisttp xor lcall pop and inc push mov pop push aam or roll pop cmp mov dec pop adc (bad) xor or xor xchg insb or dec loopne pop or es inc xchg sbb add (bad) jb pusha mov or adc mov (bad) jmp xchg xor cmpb iret movb cs sbb pop mov add push or mov jmp adc cmp add rol inc outsl sub mov jns or and mov orb or testl jp shrb adc push xor addl inc outsl pop xor push (bad) loop test data16 aam push test rcll sub movsb ret bound jmp xchg scas adc inc push popf adc mov call jp fadds dec sub aad leave mov aad out sarb sbb sbb mov test inc ja sub cmpb scas dec or push pop pop scas and lds cli mov cld adc jl pop pop mov clc and dec pop les jne lret pop dec popf loop stos pop sub sar add or adcb push xor arpl add add mov mov cld inc xor add es xchg fnsave jo setne jb xlat popf mov jl cmp mov inc xor add or fistp popa fistpl and xchg xlat addl xchg pop add inc add dec or out mov loope,pn clc push add push inc xor popa push xchg pusha movsb ret fistpl jle add cmp inc mov mov or mov xchg adc fcomip cmpsl push insb loop push xchg lea cmp adc clc lods inc sbb mov xchg jl jo cmc inc jge and jns cmp add xor mov inc dec xor push add andb daa mov iret into push nop mov out hlt cmpsb lods iret mov mov push sub xchg aam rcrl adc adc lret mov sbb imul rcl xchg std pop push pusha mov sbb jb push mov push gs add mov or push xor enter or jg inc cld and es mov (bad) js hlt xchg mov cmp aas adc inc outsl inc dec mov sub ret in outsb int3 lods mov or sub sub sub dec mulb and movsl fdivrl push (bad) mov mov cltd add inc jecxz adc mov pop mov and popa bound lret cmp dec jo into adc or sub popf das jge sarb or das (bad) adc outsl nop jae push and in dec mov ja sbb ja dec lahf int3 js sub popf aam pop das iret and and xchg adc mov pop push mov rcr and (bad) jle push jmp aaa add aam adc add int3 ret or push clc sbb out js sbb lods xor rcrb pop nop aas sbb cmp std das jns out or add mov cmc (bad) xor or push aas push mov dec sub xor xchg test jmp test or lods lds loop inc fldl or add push pop dec movsl repz jg sti add lret add and cli in in (bad) xor fiaddl ret aad push lds lret in sbb add mov jns scas push mov mov ret push popa ret addr16 out dec or ret or mov mov mov jae dec test jmp add in inc int das mov ret add push pop mov adc pop pop jae add sub ss xor sbb rclw mov pop nop jb imul and in add ja push stc xchg add lea (bad) adc repz pop mov popa outsb xor add jno dec inc cmp shlb xchg repz cli pop xor mov mov mov xchg push pop lods test sub sub push inc mov sbb je add jge sub aad addl jmp pop dec (bad) lods mov pop roll cmp mov add lds sbb jmp fstl sub popf mov jg pop adc sub mov mov addl push and push sub jmp es out cld ficoml popf mov movsl sub leave or and jo repz xor call mov dec mov pop and dec data16 int fildll jmp imul (bad) jmp lock adc xor sbb repnz call lahf insb inc lahf add ds (bad) mov lds mov ret adc xor adc insl add pop inc jg fild push jl xchg enter inc adc bound xchg pushf sub push sbb and icebp jle inc (bad) out xor pop mov aam push icebp int mov or jp (bad) inc sub xor negl clc aam rclb jno sub dec and pop inc sbbb inc and pop decl jns jb jno imul das pop add sub push push push icebp xchg fcoms mov aas fs stos dec stos lods sti pop mov test (bad) leave (bad) shrb popf fcompl pop jge dec pusha add (bad) rclb cmc loope sub aaa mov movsb fadd sti jecxz adc in cli cwtl dec fstl push ljmp lcall or sub add add ljmp pop jns pop inc jno dec dec addl cs push sub add loop das int adcb insl clc arpl or push dec lods popf sbb or push fwait cltd add add (bad) ds jo xor push fimul inc fdiv or and ljmp (bad) jne repz test xchg cmpsb sbb inc pusha inc push cmp ljmpw jge sub push and lret push add fdivrs sti sahf jo add jecxz push test mov sti sarl js dec scas mov mov mov xchg push and pusha (bad) sbb imul jge mov or ja pop push cmp push loope and leave add cmp and into rcrl nop dec pop test add call into and out add inc psubsw mov and ja pop mov jo jne jne cld enter data16 cmp jnp mov sub jnp sbb adc jmp ja ret jg outsl or dec sub in adc stc jge lock or gs add lock dec lret (bad) (bad) lea jg insb push mov mov loope ds (bad) into jmp lock pop jle shlb loopne add xor mov adc sub movsl xchg adc into and mov sbb jecxz sbb repz loope fcmovb jmp popf dec dec jae pop jae or mov fnstenv pop adc dec loop lods push push adc scas and mov add js jae (bad) xor aad clc mov bound loopne sbb leave idivb mov dec notb hlt adc in xchg in xor cld clc out stos fucomip adc mov insl fdivrs pop test add imul add pusha pop xchg icebp push lcall dec mov popa sub hlt out mov jo xchg inc dec jae std and dec ja repnz aas dec or push adc mov roll mov lods mov mov test inc and pop xchg sub mov stc mov cmp push aas push push jmp and das jmp mov sbb in stos add add jmp out mov leave je mov aad lods mov sub mov stos addl push lods scas pushf or add rcrb mov xor dec and iret push aaa sub cmp aaa or sbb push leave jp xor aas mov push aam or pop (bad) push mov mov or hlt pop jne inc or mov push push aas cmp pop loope jp pop dec sti ret pop fistp lds push lret cli push cld int fldl pop (bad) mov add sub clc jno loope lret mov pop xorl data16 rorb sbb lods pop xor jp jecxz add push mov push (bad) push push iret jmp mov and jno mov push push popf jo mov jge jmp ficom ljmp mov andl addr16 (bad) fcoms and sbb mov and cmpsb popf push add mov xor mov sub loope stos ret test rsqrtps mov xor (bad) sub rolb loope and cmpsl pop push pop mov (bad) jl mov insb and sub aad into stos call fucomp or test in or gs (bad) push imul icebp xor jb dec dec test add test pusha mov pop cmp repnz rclb push imul mov sti dec or aad lcall addl subl out mov das jne push dec lcall mov sub dec xor in hlt lret div sbb dec rol xor mov push cmpb stos negb add fsubr and push xchg cltd enter sar cltd sub int3 fnstenv out dec orl push dec adc pop xor mov jmp mov scas dec add sti mov push repz and adc cmp mov (bad) inc jbe mov mov sbb pop fsubl add jge (bad) jl sbb xchg sub jp js push inc sbbl in cmp repnz dec inc mov and xchg dec inc shr mov xchg push adc push (bad) push movsl pop loope push sub pop inc ficomp mov cmp jne pusha cmc pop mov inc add aad rcr jmp jle mov sub jg incl mov subb cltd jmp mov stc es adc mov dec push shr add jae pop sub jae in (bad) in push sub mov or scas dec lds icebp aad outsb push outsl orl push jle (bad) clc lret in sarl sub mov (bad) outsb sahf cmp nop nop or pop out (bad) mov invd adc cmp out addl enter outsl add cmp add ret xchg mov or push dec sbb leave test and out cmp or (bad) int loope pop rcr push sti cmp shl dec incl mov loop xchg mov lea cmp mov pop sub sub jle jecxz das or add jo cld mov inc adc cmp sub cmp ret pop or inc lods mov cmp xor inc jo and jb ret mov mov repnz sti shll int adc add pop mov xor test jmp adc sbb add sub or push dec stos popa jnp lds inc clc mov push mov in loope cmp outsl add mov cld ss aas jge push movb mov sub mov push and test mov jg leave dec lods cwtl dec loopne repz cmpsb mov nop jp push adc ret lahf pop les jno out (bad) add (bad) js or push push pop mov mov call fsubr nop popf push (bad) adc js (bad) jne xchg inc int inc pop in jns jmp insb push mov jg and out jbe xor jns and aas enter fnstsw mov push and in in sub and js xor js sub test push push cmc fldcw mull daa fisub sub addr16 push sbb fisttpll je mov cwtl jnp jp dec cs sbbl scas jne add push inc arpl pushf loope add hlt jns mov daa mov jmp loope inc and rcrb push pushl and adc xchg dec sti je mov inc mov call mov sub pop data16 mov jmp fnstsw adc push jo xor movsb inc test test daa pop push cli out add jg idiv cmc popa jne sub add inc xchg cmp sub or pop pop sti add pop aas pop fadds inc push stc fist jmp in and sub pop inc sub repz mov pop neg jg jns not or adc add pop push mulb push sub sub clc mov insb mov jge cmpsb mov sub jmp dec dec add or inc pop mov sbbl lcall pop mov aam sbb (bad) leave sub jne and addl leave sub cs mov cmpsl adcl fmuls inc xchg and lock rcr ret icebp and fimull jbe or (bad) and lods add inc aad mov (bad) les stos jbe (bad) xchg (bad) fwait into std movsb cmpb sbb pushf fistp pop push fsubr inc dec sbb and mov repnz je lea sub ja or add insl scas and xchg mulb xchg clc mov orb ja popf or jno inc clc push (bad) mov fildl ds adc sub mov or cmp inc adc fnsave dec stc les inc pop (bad) jbe xor lock and and or lcall jle loopne jae nop add sbb xor dec icebp jb cld loopne stc out cmpsl xchg xchg push pop xchg (bad) adc std inc mov pop (bad) mov arpl lret js rcrl jecxz scas cs sub sbb jle mov test inc subb fwait dec mov pop add dec adc adc or fimull hlt add outsl dec andb lahf (bad) imul aas xor xchg cmp out and mov sbb clc cmp add inc pop mov mov dec jecxz hlt add mov mov mov or add add movsl lods stos test dec push sti cmp jmp push cld in fdivrs test mov es pusha mov dec mov cmp rorl sbb xchg xchg cmp pop push sbb cltd pop mov xchg xchg mov inc push mov add faddl add (bad) and push add jg push add out pop mov mov inc lahf xor adc ficomp add rcrb call xor dec cli pop and xor adc rcrl mov ret cmpsb adc mov jl sub (bad) jmp push or xor inc lret mov shrl (bad) or je sbb and icebp fild jle out and mov hlt xchg xor or push lret (bad) mov fs mov arpl mov ds (bad) jnp dec ret popa or pop pusha or addr16 xchg (bad) pop movl xchg mov push dec jmp jmp loope xchg mov mov mov mov inc (bad) inc scas add xchg stos mov xchg sbb clc pop sub gs sti inc jge push mov (bad) gs mov pop push scas jge xchg jg mov mov cmc and int3 cmp push jbe jmp inc push cmp xchg add scas push xchg loopne (bad) dec push rcrb xchg or cwtl decb pop jo jmp rorl push push add sti movsb inc fiaddl ss dec and jmp mulb sbb cld dec (bad) push xor sub xor test ret les and mov push mov negb mov enter (bad) cmpsb jae xchg nop add pop stc mov test shr ret adc pop addr16 and sub sbb cmp mov je adc in mov in xchg dec ret push mov mov sub adc call push mov std push imul ja loop movsl incb aas inc outsb push dec rorl mov push or js and rclb divb push jnp and inc loope inc or pop push pusha shlb cmp pop push mov adc and sub xor cmp notl inc pop je push imul jo xor fstps inc jl mov cmp enter add add cmp cmc inc or fbld pop mov clc push out add movsl add xorb (bad) inc dec xor or push mov and mov outsb lock cmp ret loopne jno mov pusha dec jne shr add cld popf je lods push add std sub xor add out lods add add cmp andb add jecxz outsb and jge add rorb xchg sub add rclb dec mov mov and jbe add pop int and adc lcall xor pop ljmp push mov mov push add push mov jmp out jmp inc adc pop loopne cwtl popa pop aad test push cmp pop loop add dec mov lcall mov mov adc clc sub cmp mov and mov pop jbe cmp inc sbb adc push pop and push or add push stos test test inc fcomps mov into dec pop out int cmc dec sub pop daa lds cmpsb aam ljmp lods rolb pop mov rclb or jmp mov (bad) aad xchg mov sub jne mov push push popf les jge enter mov or scas pop or in jg and jnp add pop or and push addr16 movsl jmp shlb xchg cmc mov pop mov neg mov jo pop (bad) repnz dec imul in addr16 arpl sbb sbb mov mov add push rcrb pop push mov add sbb aas jo jg sti mov push pop mov pushf adc or stos mov add jle out pop mov pxor rcr sbb pop movntps outsl xor sbb das jmp into dec inc push pop subl pusha dec jbe jnp dec repz xchg cli les scas jecxz test pop scas sub (bad) xchg add fmuls inc push dec (bad) loope pushl (bad) orl in xchg cmp mov loop fnsave in cli mov pop xlat in xor jae cltd ljmp int3 and (bad) fsubs jae add dec jle xchg push add pusha cmp rolb xchg loope or cmpsb test push add nop cmp pop test stos add sub jne xchg lods pop dec mov roll mov in scas dec fsubrl push sti int push bound add movsb (bad) add add mov fidiv imul aas or addb or add xchg mov std je or jg loop fist je scas pop pop mov and outsb shl not rorb xor and in adc mov and cmp or lods das scas fldcw inc out stos pusha (bad) adc fistp jo decb add mov inc ret dec fwait push (bad) push in dec loop xchg in xor jmp mov lahf fimul (bad) lock pop popf loop push icebp mov pop jg and sub sub pop (bad) fcmovnb (bad) in (bad) in pop xor cmp push xor mov inc mov ja cmp enter pop pop insb xchg leave push loopne clc jmp inc xchg lea test cmp cmp lds bound (bad) jp ret mov (bad) pop push push sbb mov call cmp aam imul loop aam push js stos and clc jae jmp (bad) pop movsb test jmp push mov xor (bad) cmp (bad) push push andb sbb and xchg dec add xchg push xor js ret sub pusha xchg add loop dec mov cltd sbb xchg cld xor fdivrp cmpsl sub push pop adc mov js scas int3 roll stos mov cs or orl fdivrl dec sub jmp ljmp nop clc mov pop sub (bad) leave (bad) ja lods mov mov xchg pop int3 fsubl fldcw add dec or add jmp shlb adc lret mov or pop push sbb push cmc adc add (bad) sub inc add je mov mov push fdivl sbb imul add pop shrl xchg fildll js mov cmp shll int3 adc incl lods inc add iret lods rclb movsl fneni(8087 xchg push aam sti repnz and jno pusha xchg not xchg push or divb adc or mov push pop cmp dec or in jmp push in jb repnz hlt fucomp out pop pop add xor popw std mov mov adc cmpb add das pop cs jo ljmp push add js dec sub popa sub aad nop fwait push (bad) add loop popa outsb lock ja adc cwtl sti jbe or stos sub cmp fisubr cltd add outsb lcall ljmp cmpsb and shrb pusha mov nop add inc add mov lea cmp fisttpll mov (bad) push outsl jo scas cmpb pop jp loop mov test add push loopne push mov adc jne jmp std arpl or xor test push xor cmp lock dec add cmp fbstp pushf lods push nop xorb (bad) in pop sub out add jb,pn sahf outsl adc mov mov jecxz jb inc into dec stos cwtl inc test jl rorb jne xchg imul pop push xchg cmp mov clc and out add push dec push stc mov (bad) std lret les mulb (bad) lods adc jmp mov mov jbe xchg stc sub test cmp inc ret cmc ficom shrl int3 add and imul inc fsubrs dec mov dec xchg in and pop inc mov jo daa add loop (bad) fs jmp mov mov or xlat xor std add push int3 daa lret inc push mov push pusha lcall enter sbb repnz xor mov sub inc scas xchg fstl cltd (bad) sbb test rolb push dec push mov negl cmpsl xlat sbb adc pop mov add pop and add xor stos inc mov mov add clc lret sub cmp (bad) loop push movsl or and cmp add jno jnp cltd xchg daa (bad) int jl or test popa add lret loop pop sbb (bad) add mov cmp mov jbe jle loop into add sahf dec or cwtl sbb pop clc pop push and inc movsb push fimul add dec int mov sub add mov scas loopne add xchg sbb sub gs push mov push mov adc sub imul jmp push xor sbb mov aad mov test cld lods int in imul rcrb or adc dec sbbb shrb pop (bad) lods psrad xlat (bad) notl jmp xchg adc in jmp loopne add nop ficom push lock jmp pop jne out dec gs roll push fimull rolb je lret mov add in and test or mov ljmp std inc push ret dec pop jns cld js dec or jle dec or mov icebp addb push mov adc cwtl inc imul pop lock jg enter and or cli sub cmc mov xor sub decl neg inc dec jo lahf fcoml xor ret pop push mov sub add test push (bad) out inc mov cwtl xor or flds and daa cs sbb xor jbe iret icebp cmpsb mov adc stos movsb repz adc jne (bad) test out push nop push (bad) in cmppd arpl push mov push inc lret jnp add jb or cmp jnp xchg imul fldl inc not and and adc clc int fucomi xchg or dec sub (bad) pop mov jns imul pop sub dec xchg scas loope fwait mov xlat clc pop dec mov (bad) mov xchg push or push mov rep test inc lret popf jbe lret inc push push sbb pop xor jp dec mov inc sub mov dec jae xor fwait or cltd push pop in adc stos js pop mov test lahf pop lahf adc jne xchg mov lret ja add push jb stos jge mov scas cmp daa inc push sbb cltd push jp outsb cmp fmull add jmp add mov xor lods xchg add sub outsb stc fildl add sub push rclb pop pop mov into mov mov mov stos les mov gs inc or frstor inc inc add aas pop and test je mov jnp inc ja mulb pop js insl mov xor imul test sub mov and mov xchg cld pop mov sub push movsb out or pop (bad) push push mov push lret leave xor pop inc rorb es cmp add jmp pop mov (bad) pop outsl pop xchg cltd testb add shrb leave mov loopne jl pushf jmp incb cltd out imul fstl sbb icebp inc adc in push cli popa pop mov lret sbb push mov jne aad stos std adcl idivb repnz and add inc xchg outsl in and jmp jae icebp jp jg pop cltd pop jecxz pop in dec rolb mov mov or jno jne dec inc jns pop (bad) dec (bad) adc in (bad) fdivs mov (bad) mov mov cmp cli xchg stc push and (bad) adc pop stos add js pop dec (bad) xlat pop (bad) ds dec cld daa movsl loop jg jo jmp scas cmpsl push jmp aaa mov sub imul mov add leave arpl andb mov dec xor and xchg lds and mov aad sub dec fsubrs mov or leave (bad) adc nop jne cmp sbb mov xor adcb jmp jns fiadd mov arpl (bad) fiaddl add pusha stc (bad) out mov (bad) das (bad) pop and mov sub pop jge insb add dec fild xchg test add add push pop xor mov or nop sbb ret push enter aas push dec lret ljmp or inc dec out lret or jno (bad) jo jmp pop add push cmp pop or pop xchg icebp inc nop sub xchg and leave pop push scas inc xchg mov insb adc fmull adc mov mov lret mov clc cs cmpsl jp and lods cmp xchg jmp es test lods push fwait pop dec push rcr or daa out cmp ret jb push fcomi call (bad) jl and ja adc mov std inc or or imul lods call adc mov lea xchg ds add push push push ja dec push sub inc cmp or mov add or daa jg (bad) pop aas adc repnz mov es add sub cmp add std (bad) popf movsl and mov ljmp jnp jnp mov mov out or xor incb pop adc push xor out ds (bad) ficom push pop lea push cwtl xor andl xor les ljmp xchg xor dec cmp jno sub xchg movsb xchg xchg mov pusha hlt dec and (bad) pop push rcl orb pop push scas mov cld ror adc or movups xor push leave rcr jle mov imul icebp xor sbbb dec cmp or incb xor dec or jge or dec (bad) sahf add mov mov addl inc jo arpl aaa dec jg mov jmp cmpsl push imul je push and clc mov dec add push or mov pop push mov xchg mov scas daa pop pop arpl push pop (bad) shr sbb mov jmp add fcoml gs sarl rolb cmp dec call inc test les adc sub cld mov mov xor sub xchg jae insb pop pop mov cmp inc lret fldt mov inc add insb dec dec cld icebp adc push iret mov shll popa sbb out adc jns xchg andb fadd cmpsl gs add icebp jmp push pop mov cmpsl push lds mov call mov cmp inc insl mov (bad) mov mov or pop adc xor xchg jns in push push adc iret add mov dec loope fsin add testb andb jmp mov fldt cmp sub fnstcw and pop and jge adc lret xlat lret pop jbe ljmp dec sub push or push add push jmp and or xchg push ja inc movsl je ret hlt push insb pop stc mov sahf pop pop mov scas (bad) scas xor rclb mov mov inc dec xchg inc mov or jbe sub inc lret sub gs cmp inc adc cltd adc xor jnp add rolb xchg popa popf ret ret pop mov pop push mov nop aad add jb push add jmp push icebp sbb pop push test or out xchg pop inc xchg xchg aas in stos in (bad) clc sub mull and (bad) or or icebp push push cmp pop cli pop push pop dec loop ds mov add and sar and xchg (bad) pushl push leave gs cmc call cs fmuls jb pop jge xchg adcb pop popa ss add push mov push neg cmp jae push cmpsl ljmp ret aad les pop stc xchg jmp xorl or add outsl add mov or iret inc jmp icebp data16 sub fwait add push mov call adc jmp and dec push fsub push (bad) addr16 rorl imulb sub push enter ret aad pusha aam and pop movsl cmp xor (bad) xor daa jg (bad) ss pop sub inc or inc pop mov pop icebp andl lea (bad) jno inc cmp or mov inc mov das in subb sub addl fwait test in jmp rclb and hlt shr sbb jge cmp jmp xchg loope pop inc jl or hlt cmc das fcmovnbe cwtl pop or int xchg popf in xchg imull adc or sub pop xor or jo in mov iret adc inc dec fnsave push or test stc jae cld (bad) mov in mov xor mov pop imul sub jns dec pop lahf subl jl stos cmp mov fiadd lods out (bad) sub (bad) xchg sahf in ja push pushf and stos mov (bad) push pop pop adc jne sti sub cmp ljmp cli lret adc ror mov test daa fstpl inc sub xor cwtl add cmp es sbb jge or adc add jmp add cs and loopne adc add dec pop add or xlat xchg inc cmp cmpsb rorl dec mov movsb lds xchg out sbb fisttp test and add in xor add push push in pop roll cmp push leave sbb notl bound jo sbbb sub arpl or icebp das jle sbb xchg adc fldcw ret lods jge sub jmp lods popf jbe (bad) imul (bad) js enter inc or sbb popa mov mov jmp add lds push jo push or push push push addr16 lcall push mov bound fisub pushf (bad) xchg into (bad) adc ljmp pop (bad) jo loope in adc sbbl out fdiv pop dec and push mov xchg test enter add mov add pop (bad) (bad) add iret decb xor jle (bad) pop jle les adc lahf addr16 repnz xor push les call inc aam and sbb or mov add jmp lret mov in push push cmp jmp inc in rorl jg out (bad) mov ss add jbe loop hlt push pop icebp gs or and test or mov js add lret mov clc sbb movb fmul cmpb dec mov dec sub jne (bad) imul pop sbb cltd jbe dec stos adc sub push maxps lfence movsl ret add sbb (bad) into pop push enter pop stc aas jbe test rcrb ljmp mov push adc ficomp stc aaa bound sub jns add insl push ss add test push add and push scas sbb inc jno dec (bad) cmc jb xchg scas cs daa add fwait pop jge (bad) adc and stos mov divl push cltd ficompl xchg repz fbld add jb rcrb push push adc mov and push loope sbb mov dec clc jne test xor sub and xor adc cmp mov dec and push loop mov (bad) fidiv push add inc push mov jnp lcall ds push pusha pop or xchg inc xor push sbb out xchg ret mov mov mov gs pop pop pop jmp jge popa (bad) enter xor cli sbb sub cmc jbe cs popf adc cmpsb enter cmp and sbb pop lds jb and mov stos adc add dec out xor lds cmp cmc pop jmp mov scas or pop add (bad) lret push add xor (bad) dec test outsb jecxz sub mov das mov or mov (bad) inc shr xor sahf xchg (bad) dec ret fist cmc pusha mov jno pushf faddl scas daa pop and sub xchg (bad) fcoml jle pop out lahf aam fcomps mov nop mov jnp mov dec push in push xchg fndisi(8087 outsl sub sub dec aad push nop xor shr jo dec mov xchg pop xor call push cli scas cmpsb xchg sbb in push mov xchg mov add mov mov cmpsb dec decl fimul test cmp dec stos insl lea mov mov dec dec adcl ljmp push jmp jl jo xor je sub sbb inc mov (bad) xor pop mov xchg dec xchg jae xchg adc repnz or or push mulb imul or gs push std cli scas sub jge xor int aas add and das mov adc shrb inc add xchg or adc fimul pop (bad) mov pop mov and adc push mov ret icebp pop pusha mov mov cmp out add jo pop add push call stc dec les js push jmp pop jo mov push mov jle lret fnstcw in add je cmp and mov xchg lea sbb xor mov mov add or jmp pop ret inc aas jl sti sub out pop je push sub jo inc and mov gs dec mov add sub jmp scas jmp pop add stos sub mov mov xchg out je xor xor mov scas xchg (bad) sub jne sti fs mov add push mov cli repnz add add or fs or push das (bad) insl orl add xor loop jge pop push xchg sahf push pop jmp pop add inc xlat popl dec (bad) jmp std loop jno xchg sbb inc push push mov jl ret lods aam cmpsb mov jl (bad) xchg sbb or bound adc pop cmp push and aad and pusha push add sbb pop xchg or xchg fdivl or enter xchg pop mov rol cmp push ds ds jae mov sub sub xchg adc cmp xor add jmp mov (bad) cs jbe xor push adc pop push add pop xor cli push xor scas xchg fisttpll push outsb xor enter fisub jne imul dec xchg xor lcall add (bad) negb arpl ds push aam or das call inc mov adc jae bound pop pop in dec ret jp enter or pop sub jns das dec cld movsb (bad) mov add or push addl xchg jno or pop mov out bound test pop pop add inc std mov outsb mov and imul movl stos xchg xor ret pop lods out jmp add xor paddsw insb (bad) jne test xchg xor neg jg jg sub mov mov test shlb orl sti sahf or aas flds cmpb inc add xor pusha sbb or mov xor xchg adc inc jle stc and sbb or push mov stos loop pushf shr add movsl dec mov imul xor adc push das sbb add sub sub jecxz sbb jne sub cmpsl outsb es aad adc icebp (bad) outsb aam cltd cld jle leave je stos and sub mov imul cmc dec lea add add sub jl xchg push subl je add adc in aam scas test ret adc ror add out daa (bad) enter or stc stos jnp sbb mov test xchg push add sub jmp js cltd rclb sbb xchg stos sub aam fistp xor roll jae inc push pop push push pop mov imul imul push or xchg shl and daa jge jecxz dec push xchg jb and xchg cwtl lret pop add rorb xor xchg mov inc pop dec and mul xchg cmp iret sub and pushf xchg ret add push arpl push (bad) enter jg pop push lahf decb jp pop xor addb jmp fcmove pop or (bad) hlt pop cltd mov inc adc (bad) aad in or popa inc sbb xchg cmpsl xor add neg push es add jae push jg adc pop sub adc adc lea and mov add jns sbb (bad) sub mov pop aas neg movsl insb add les lods add sub int3 dec nop lods lret lret sub lock fwait mov add mov jp or ljmp or test out mov jae mov sbb insl mov xchg addr16 in enter sub sbb aad and pop nop or in popa xor ds test pop repz push and out push cmp cmpb repnz jb inc xor xorb jno adc pop xor lret aas in pop add mov push daa cmc sub add mov mov (bad) or das call inc imul xchg pop ficoml cli shrb jl fwait rcl adc cmovge mov xchg push (bad) data16 mov and mov inc pop mov dec jmp pop cltd dec pop inc xor icebp sub stos loopne or or aas inc mov nop es mov mov mov insb add aas and xor sub dec or dec icebp cmp fcmovnb adc ret in mov mov mov push stc xor push inc repz in or add pop pop adc std outsb mov jecxz add cltd inc andl xor dec or or sbb sub sbb insl (bad) mov les pop jecxz add in (bad) int3 add mov out into pop inc std sbb dec cmc jae in jge out out push and (bad) xlat in cwtl inc inc outsl notl rclb inc xor add ljmp sarl sub mov ds sub mov and in data16 push mov pop clc adc push es jae in scas cmp ret push out shlb jmp or mov pop mov jmp call int adc mov sub pop xor fcomps or sahf xchg out push repz xlat mov negb adc imul incl rorl gs aam adc mov (bad) in xchg jp fimul movsb jbe pop jg outsl mov or mov flds jmp jns dec inc (bad) lock jmp orl jne mov loop notl jbe cld rolb fsubrs clc sbb jmp fld cs mov mov cmp fild cmc test aaa jge mov adc lods xchg mov jo cmp std xor or roll sub xor push dec clc imul mull cs (bad) jmp sbb mov test or enter ror add add xchg pusha insb lods pop push add pushl mov insl pusha (bad) hlt mov ja or out pop cmp mov or ljmp dec mov sub jge mov jne pop adc stos add cmp mov test aam movsb pop enter out or sahf ret std (bad) enter sahf or in or lods popa pop insb enter test rorl sub int3 or ss cmp sub sbb inc jecxz shr lahf (bad) dec outsl and ljmp fwait push push testl ja fsubrl add pop sub sub repnz xchg adc adc gs stc dec xlat mov adc mov daa ds imul pop pop push insl sub jbe jb insb jne pop mov idivl dec out in xlat and insl mov into bsf and and enter mov push fdivr push add lret xor cmpsl jmp popa vpackssdw daa dec xchg add push pop or push push mov or cli out repnz ljmp test inc dec jo xchg or dec daa and and or push test jbe test insl (bad) xchg and mov in nop jp cmp add push addr16 xor jg bound gs cmpsb ret add sub mov dec pop cmpsb arpl jmp gs xchg add daa aas add and (bad) movsb sbb call mov sbb arpl mov push push jmp stc cmp stos cmpsl les imul xorb or into mov mov push fdivp js lea dec notl push aas jecxz mov pop jmp loop cs or cmpsl push sub in jno test pop shll aas add jecxz aad loop lahf push fdivrs mov call incb add push fmull push mov xchg stos and bound sub dec popa xchg jae sbb js push cli aad or int das push cwtl mov aam mov inc jg sbb ss sbb in mov pop or pusha push jno cmc xchg jle dec daa push (bad) ret rcll xor jmp aam mov cmp je sub dec jnp add inc mov cmc lods pop or mov pusha xor xorl xor push add pop not xchg or push push inc repz xor icebp and mov in es add jl mov out push movsl mov (bad) cmp sub jmp inc pushf lock xchg push arpl stc out movb or adc fwait sub pop sub (bad) xchg (bad) (bad) into loope jle sbb scas mov ret fidiv sub push divl movsl mov xchg push pushf jae xor jnp sbbb xor (bad) sti ret jnp add fisttpl (bad) add jmp into aad mov fs mov mov test pushf and (bad) fdivrl inc xorl pop or test jno jmp (bad) rcrb push fiadd pop test out inc xchg rcl cwtl out and stc xor rcr inc add fldt adc or mov jns dec xchg mov add dec sbb jp pop in xor rclb inc call aam pop mov push mov dec mov mov mov mov int3 dec push rolb inc dec fist adc mov inc pop sub ret dec (bad) sub inc pop clc and push mov ret ret (bad) mov pop push sub fstps test and cld cs or test jb dec sub add pop inc repz call inc pop dec call test mov xchg arpl cmpsl mov movsb pusha ret sbb daa cmpsl mov jno push add or rorl ret incb xchg dec adc out subl dec mov sbb mov mov shlb fldl aaa jmp lods push mov add sub clc lcall scas lret mov out sub mov cmp xor cmpsb lcall aad push xchg jecxz inc sub pop (bad) addr16 (bad) fstl jp mov sbb mov in cmpsl jne (bad) and rorb mov imul add sbb push mov push mov mov add mov jo jnp pop and push mov add sub mov or (bad) movsb shll arpl movsl push ljmp mov mov adc mov pop rorl je mov inc test rolb lcall (bad) mov push inc in mov cwtl sub jmp pop les fistpll cmpsb sbb cmp sub scas cmp jecxz pop cmp stos (bad) (bad) jnp push mov pop xor add sbb mov (bad) xchg jne das xchg push adc imul jmp xlat pushf mov pop inc mov pusha stc pop push xor sbb push (bad) or push mov add fs dec add cmp adc pop stos mov lock xor mov (bad) dec pusha jl adc cs add dec cmc cmc inc or push (bad) dec xor das and sbb add mov sub movsl add (bad) mov push cmp lods inc pop lods das hlt xchg mov adcb pop mull std dec xor sbb dec repz in int3 pusha push dec jne cwtl mov mov cs dec adc mov push push mov lods dec loop ret sarb mov sub pop fwait mov test lods sbb jl push jo pushf popa in adc inc notb pusha ss push mov jecxz add mov mov add jb adc mov cmp or cmpsb mov pop push mov push lea fs pop mov lret cmpsl jg mov mov push sub or add mov loopne,pn js sbb (bad) add pop dec add jno mov in add mov lock scas xchg movsb lods add les mov mov add test adc cmp sub out stc add inc jmp jmp mov rcll sarb and fstpl or or inc adc lock add inc ja jge pop mov addl xor mov sbb mov sub (bad) xorb sbb shlb mov adc and inc imul fwait movd rolb int3 inc lahf sarl xchg repz jnp inc scas pop xchg test mov dec jg iret and dec lods push test (bad) enter insb dec and dec and arpl mov jmp inc scas or insl or push xchg std lret push xchg mov hlt add insb aad jae mov adc jbe jbe add mov lcall push pop add dec (bad) adc cs cmp mov es or call push daa mov lds fucom xchg inc (bad) hlt lods adc push push cmc dec cmp dec ror pop add test mov push or xor or dec popf pop les in popl inc xchg xor add push pop imul mov sub and pop repnz and sub pop cmp ljmp cmp adc (bad) or mov push sub or add inc arpl and lret or or mov clc addr16 lret and adc sbb fisttpl mov xor sbb lret pusha cmp roll test adc inc add pushf sbb or mov rcll icebp orb (bad) or cmpsl or add add movl movsb mov and adc jo das test stc mov or (bad) push push scas or ror xor nop and mov aaa sbb ds xlat les je sbb fisttpll inc leave and orb (bad) xor movsb or (bad) sbb pop adc les dec inc add or add mov xor rorb and inc jle sbbb gs add cwtl or roll inc inc adc mov sub or add out sub add popl lds adc repz jnp cmp or stc cs orb outsl popa subl (bad) je cmp gs adc bound scas mov imull adc sti cwtl sbb pop ja sub sbb test mov sub or sub adc sbb adc xchg or pop add sbb lret incb push add sub inc and add or push ret sbb popf or test movsb or or les jmp or mov (bad) mov cmpsb rcr push cwtl mov dec mov (bad) iret or xchg adc lds bound shrb les stc cmp xchg or jg nop leave pop or fpatan sub sbb push into (bad) mov push jns bound sti inc or ret inc sub iret push pop or inc ljmp mov cld icebp int sub les mov rcrl (bad) and xor push rclb scas sbb movsb pop mov (bad) gs pop and aaa in cmc add in add popa or xor add mov mov es fistp clc adc jge jae pop pop push mov dec testl inc jp xchg add fstpt lds into inc xlat cld lea add shr mov pop notl rorl loope stos cmp sub cmpsl sub scas xchg dec out aam sarb out dec mov pop xor addl pusha or mov xchg ja xor sub pop xchg cmpl mov inc dec shrl or jl mov mov add out jl pop outsl jne mov rcll jno pop xor dec jg iret daa push inc cli jne push xchg mov ja sbb sub repnz xor xchg ljmp cmp and aas outsl add mov incl add movsl ret xchg sar mov sub das push sub pop es inc lret pop mov or inc fisttpll into and add sub je xchg and jo loope sub mov mov stc call push idivl pop xor inc fistl lods repnz ds push pop pop sahf jbe sbb enter jmp cmp xchg pop or jp adc push je (bad) movsb xor mov out push sub out lahf adcb mov loop std mov dec push and out jno sub sbb or lods push add stos cli in mov push push push xchg pop push jno jb add aaa sub popa adc cltd sbb mov dec or aad inc pop cmp xchg and sbb clc outsl sbb and push cmp nop add xor add (bad) cwtl enter fidivr ds or rcrl push dec ds push dec and ret cmpsl aad xchg rcrb dec push xchg add adc or rclb sub (bad) and xchg es je add add inc cmpsl ja fwait pop pop add negl mov push mov push push push jle mov (bad) cmc inc negb mov in in adc mov dec (bad) mov fisubr jmp mov add lods xchg dec clc aaa test sub and pop mov (bad) jb push mov mov movsl fdivs pop aaa xor das jge dec pop addr16 call or mov (bad) or (bad) (bad) fcoms mov push fnstsw cmc push das mov push push add xor faddl je mov lret sub stos mov sarb xor sbb fdivl das sub jg push aas pop jge ds and add imul add xchg das fdivrs cli call push lret inc push scas inc push cld or mov neg pop xchg leave repnz mov fiadd jno and shr popa adc (bad) dec es das lea mov cmc (bad) (bad) sbb inc cmp cwtl hlt das sbb add sbb push xor xchg push push push stos fdivrs addl inc pop pop mov or in pushf in std inc lret pop int3 dec sub outsl sub dec enter das add fcmovnb lds dec and push add hlt ret repz sbb or out push xor sbb in adc pop daa out xor test movsb cmp sbb je push in or and jmp (bad) jno cmpsl xlat dec xor push daa aad pop jne or popf aam (bad) ror decl lahf ret cmp pop mov ljmp pop ja xchg leave or xlat fstps cmc out lods jne aad inc fwait or repnz add inc outsb push add es pop add xor hlt sbb decl push fidiv add aas inc neg pusha jp mov cmpsb adc jno mov inc lods popa add (bad) xor and inc push xchg mov mov push subl cmc pop cmp es adcl lcall jl push cs or jp cs pop ja jnp data16 add fsubrs add mov inc mov ficompl mov push push in (bad) test dec mov (bad) dec repnz mov fiadd mov andb dec jno (bad) lahf pop add int dec jg xchg enter imul dec inc sti lds fmul shll movsb mov jmp shlb or jp outsl add inc cmc mov pop dec mov out subl adc sub xchg (bad) xor mov dec lods add pusha nop jae xchg sbb outsl in jne jmp popa sub mov push cmp stos pusha in push sbb push or out add mov loop pop test js jb sti mov push (bad) es mov pop push or outsb aaa pop jg push ret mov sahf xor inc bound ret repz jge iret xor dec nop aas sub subl pop sub andl pop jmp mov dec (bad) fsubr subl push pop out add out jecxz and out mov adc mov jle imul xlat dec adcb and outsb push pop jno mov (bad) sbb or add sub (bad) icebp or cmp sarb jmp stos ss or call dec or je jo popf push pushf fs pop bound jge fs lahf inc add cmp add xchg add pusha xchg xor fdivrl bound insl imul mov repnz push pop jmp xor inc push push push pop add jnp inc jno jne orl or xchg aad xor pop mov insb sbb add mov push cmp es inc pop add stc mov mov push xor jmp mov pop fcom fidiv mov dec aaa xor xchg adc cli mov sub dec push mov int and inc jns repnz int3 xor daa rcrb ret lods xchg add insl stc and mov test and mov test inc cmp add cmp sub imul xor adc or adc pushf shll lret fistpl jbe insl pop push push rcr and xchg imulb or sbb mov clc fildl ret xchg dec sbb repz cmp pushf push pop shrb into adc mov gs fs mov lds ljmp lret add dec add pop das mov push push add mov pop pop int loopne pusha int3 out or cmp adc pop mov xor push push fiadd nop jnp jp pushf dec mov scas dec insl repz aam adc or rclb mov xor push xchg mov dec fnstenv pop mov and push (bad) aad idiv sub lock jmp out cmp sbb sahf add adc dec push jmp mov cwtl (bad) cli xchg and test enter cmp ret add pop mov xor mov inc popf fisubrl mov (bad) loop pop mov jo dec les in sarl dec ja dec inc sbb and xor cmpsl (bad) jne (bad) adc lret add sub clc leave cmp enter (bad) dec sbb ret or pop jns jnp sub adc mov xor ja add (bad) add push push mov xchg pop std add add cmp sarl inc inc outsb cmc andb mov in cld (bad) push add or orl ret lock xchg out maxps movups loop lcall sub movsl popf mov cmpsl fnstcw daa loopne sahf jb loop dec mov pop rorl jmp clc xlat cmp cs jge inc cmp jmp fdivs push lock or jne jnp xor (bad) fdivrp dec add test (bad) out jp ret loop daa inc jp cmp xchg sahf add (bad) ja out mov popa outsb lods and add sbb push sti bound xor rclb cwtl int call push mov dec mov mov popf mov or dec mov es out cmp out shl jo push or adc je mov (bad) ret mov ret push push daa fdivrs stc sub push inc fisttp mov inc xchg mov adc mov fstps push mov in sub ret pop neg shl push xor and pop adc adc xchg repz shl push add xor and pop mulb lods pop stos add call sbb push loopne test add or jae aas xchg adc in push shrl fbld xor dec xor jle add (bad) push inc sub loopne and sbb scas test scas test push inc lea rolb roll cmp pop pop dec lds inc cmp mov orl mov loop xchg out xor loop mov jns cli mov out mov xor pop mov ss sub repz push fmuls bnd adc or sub bound or inc cmp (bad) adc movl sub pop pusha xchg lods pop and addr16 dec cli (bad) hlt jle shlb gs jecxz lock (bad) jo mov lret pop jb xchg lret outsl mov xorb mov jmp add shl or jbe test arpl mov jl loopne in dec movsl out push push jmp jb ss imul (bad) jbe and jb or or clc dec out add push mov test ss mov das out call mov add and call arpl mov inc push jbe outsb loope and jmp movsl shrb shl add sub sti fucomip lret jmp mov sub adc cli jmp dec lahf inc add (bad) cmp (bad) jno pop (bad) sbb sbb lcall fxch jns gs out out movsb mov leave into lods (bad) pop dec (bad) sbb push cmp fs clc and sub push shrb icebp mov dec enter adc pop bound add xchg loopne mov push adc add mov jg je dec xchg jnp push in incb inc hlt push mov not dec lahf push and push mov sbb cmp dec sti (bad) or pop call jg decl push push sbb pop jmp cmp bound js or sub or mov outsl fmull xor dec mov inc daa rcrl call std sbb sub daa jmp lret jl sub jmp icebp pop testl adc out pop and mov pusha push push sub or jae cvttps2pi daa stc fnstsw mul jl in shl xchg add push rclb outsl pop mov xchg sar (bad) inc movsb inc sbb pop or add push mov sub xor iret std cmp add sbb jbe fsub std xchg rcll in add sti jge insb or test mov mov sbb daa or sub in and mov push and vmread and or and arpl outsb push xor incb (bad) dec jne in mov sbb mov cmpsl sub cmp clc inc mov push out movsb push pop sbb jge bound sub push pop rorb add xor xlat or push dec sub sbb push incb lea or xorl push inc add jae int out or and shl jne jb or fbld mov lods sbb pop (bad) adc mov in adc test mov mov xchg ret push xor (bad) hlt lret in inc cmp add mov test pop pop and test mov xor stc or popf int3 or mov push push xchg and adc into je add push sbb test (bad) cmp repz lea ret sub hlt mov xor or sbb pop jg div fucomip nop pusha aaa push jge clc push jmp imul movsb test dec and mov fstpt add inc mov sbb add shr add fsubs test jo adc ljmp or in jge xchg call ljmp fisttpll pop pop jmp scas bound dec jle sbb (bad) insb jecxz mov rorl mov ficomp sbb lods ret jp and outsb ret (bad) adc sbb jg cmc mov sub cwtl sub shlb iret aas jne popf add dec mov pop icebp push push push lds add or jmp scas sbbl and mov inc call mov adcb push adc leave add xor (bad) ficompl dec jg loope mov xlat cmp xorl in icebp add icebp adc cwtl push mov pop cli or cmp (bad) stc fwait test mov xchg inc mov imul xor scas mov gs mov cmp (bad) in dec and pop (bad) lret mov dec das lea test jecxz nop test jp sub jns xor mov push cmp imul sub push (bad) out xchg fstl dec ja shll lret pop cs insl sbb outsl ret lock arpl es stc cmp aas pop push adc sbb adc cmp and dec ds ds mov mov add add add popf cmp (bad) add test add mov jno cwtl push je scas rolb add dec xor cltd adc cmp pop shrb divps sub push push inc roll xor call call cld xor mov in (bad) aad xchg stos fldcw inc and cmp fnsave and add lahf xchg jge mov std outsb (bad) out sub mov lock sbb pop jge pop mov popa scas push (bad) mov insb dec sbb cmp ret add add aaa adc add test push and add loop mov nop sub mov dec mov fnstenv out adc test jmp roll mov xchg ret add inc add or mov cmc test or out mov std mov jo dec imul and jne repnz (bad) adc pop cmp aaa add outsl pop xlat jnp movsl push xchg inc sub subl jmp push mov add idivb fcoms jns pop in mov mov (bad) pushf xor test (bad) push in imull imul stos xchg push popa push mov inc enter rorl cs dec (bad) xor neg jbe out popa mov pop xor mov jmp (bad) shrl push add testl mov movsl addb mov sar cmp rolb je push es mov sarl pop add je or mov out sbb or and push test outsl fsubs xor popf stos roll loope test jge push mov fiadd mov push into sbb cmp scas lods je sub xchg cmp mov out jecxz stc mov inc in in jnp mov cmp mov pusha repnz das mov push pop idiv xchg jbe fs and add mov jns jno dec jne loopne jl or fist mov sub jmp fldl jl pop inc adc lock std xchg jbe mov dec ror daa dec daa cmp (bad) mov and or movsb sbb adc sub pop inc aas mov mov dec dec add push mov addr16 sbb shrb dec xor mov dec or (bad) xchg jg leave cmp and pop or movsl (bad) sbb pop dec scas (bad) icebp sbb sbb lds pop ja jmp pop daa cld mov or pop or mov sub pop repnz es lds add jge push and and xor add ja lock ret incl or repnz jns mov sbb dec add (bad) push sbb pop add push or scas jg (bad) push inc or imul lods adc cmp std add sub loope cmc das mov (bad) mov negl inc pop clc mov dec lods add sub sub (bad) sbb add mov or and in mov xchg or push mov ret test mov or mov imul or add fdivr cmp je and icebp (bad) push sub jb sub test arpl adc pop daa push mov pop sub ret ja,pt popf and xor dec inc leave mov imul mov pop out clc dec fcoml neg mov iret push fcoml fiadd inc leave bound negb add scas and pop subl into fs in xor pop inc stc mov daa mov add or out pop lock ljmp dec mov fdivrp scas xor nop jmp add out xchg push icebp add and pop movsb jne sub mov mov pop lds ret or and in cs mov in ror mov ljmp (bad) popl jmp std cld jb push add push mov or fdivs imul inc mov (bad) pop push add sti fwait cmp movsb lret mov cmp jmp pusha push cld lcall lock xchg inc sbb negw cld repnz add mov mov jp inc push loope pop jnp push mov test fdivr sub in mov and aas cwtl xor popa xor jle push aad mov gs shrl push jb les jmp xorb xchg adc add not push push fstl sub jmp jmp movb addr16 mov mov xor loope add mov ret push jp test loop jmp in push paddb jns icebp jmp dec add imul dec in pop and jmp fldenv lret mov mov inc hlt inc jnp ret mov lock pop lea xor sbb mov iret jle and jns mov dec jl pop mov xchg int3 add or push fcmovb or out mov adcl outsb call and jne sbb or add fildl add mov or ficompl and mov sub pushw add or lock ret aad dec cmp and mov mov adc pop jmp and flds hlt pop jnp je or xorb cmp adc jmp mov insb cmp arpl popa mov xor sahf jmp xorl jge fmuls xorl daa std aaa incb aad pop loopne or inc out dec cltd mov mov testb push cli push (bad) or mov xor inc and repnz pushf pop jmp in pusha pop (bad) fcomi test je push and xor dec in mov mov xchg xlat test ljmp mov mov (bad) pusha mov lock and fistpl fucom iret inc and ja gs add xchg fidivl dec out movsb sbb int cmc (bad) cmpsl sub fcomp sub insl das rorb (bad) icebp or ss movsb or xchg std adc cmpb loope in stc cmovns loopne adc sbb nop xlat jp xor pop lock imul andl or xchg (bad) xor adc xchg pop dec add aam (bad) cmp mov add repnz leave inc mov (bad) icebp mov cmp push je sbb rcl (bad) (bad) sbb cmpl mov sub jmp mov and jmp jo add fchs jl cwtl loop inc sbb inc push mov or cmp pop cmpsb into enter dec int and fs cmp lcall je lahf fcmovnb or or push mov pop in jp xor clc push bt orl sbb inc js loopne je ret repz int cmpsb sti daa mov pop add leave push rcrb inc jg xchg cli and jmp push jmp into inc add dec jbe (bad) cmp out clc popa adc movsl and ret jl add pop xchg gs shlb in pop xor rcr push add movl dec sbbb lods arpl subb xchg jmp pop loopne fs jno fisttp adc mov mov push push add mov push cs movsl cmpsb imul mov insb sub xchg (bad) dec ss cmpsl insb push lahf mov pop ficompl mov push mov add mov (bad) mov popa icebp mov lds fsub std pop pop jb stos xor or add rep icebp push xor cmpsl lds cmpsl rorb cmpsl adc hlt xchg or pop or dec in imul dec adc faddl add int3 adc (bad) lods ret (bad) or out inc push mov add mov loop inc dec add adc sbb sub leave jae and (bad) cld and roll xor push es sti jmp lcall ret mov mov mov dec adc mov push les in adc push imul lds mov pop dec dec lcall in mov pop xchg or lock jmp callw aad mov sahf mov ret push dec push outsb and roll imul inc pop pop rol lret jge jno pusha inc shrb push xchg adc push push jmp iret mov sub jmp cmp sbb xchg add mov jo lock or jae push repnz fsubl lahf ljmp xchg xchg mov pop push and lods xchg jmp addr16 jno add and addb ja lahf loopne sti inc je xchg js inc or dec rolb and rolb roll jmp xchg dec sar and add cmc clc pusha out hlt xchg stc lods xchg movsb ret or sub mov fs inc sahf aaa cmpsb jmp mov sbb pop pop sbb nop cmp inc fwait fs or dec dec testl xor add ja dec jl mov or lods mov (bad) ljmp jno jge mov or or push dec sbb arpl loopne sub cmp lea mov fsubrl pop hlt movsl jno mov pop popa enter jno mov inc pop dec jmp mov (bad) fcoms push lea aaa loopne and pop xor mov mov decl pop insb mov xor sbb pop push mov dec inc xlat pop (bad) xchg inc adc push roll mov jl std push xor dec in sbb or lcall mov adc in pop mov inc and xchg xorb push jecxz jmp cmp xchg add fcomps inc dec add mov and icebp or push gs sub sub sahf or dec loope jmp mov fildl add push push push movzbl dec jge or jecxz xchg shrl add jmp sub adc das and push sbb cmc push sbb push repnz adc insb or je enter adc (bad) iret mov push mov ja loope arpl adc sbb inc faddl or mov ficom into pop xor inc dec cmp mov push inc lahf adcb cmp jbe add popf mov push lcall mov mov mov imul and clc rclb and iret jge lahf hlt adcl pop pop cmc sbb push js jle fs cwtl inc aaa dec cs xor out pop call jmp jno mov pop jmp mul enter cli jge fistl js xchg jge push xchg xlat xor leave lock jne mov daa push jmp cwtl inc push push or jbe jb and shlb push sub enter aad ret jmp ret xchg dec enter push lret dec sbb mov jmp xchg aaa xor in popf cmp or sub mov xchg jbe adc mov lcall or pop pop sbb je add jle xchg mov data16 loopne jmp les adc pop fstps mov xor lds add push inc add sbb aam aaa add fwait enter das outsl ss (bad) jo dec jl outsl and cmp cmp repnz aaa arpl or xchg jmp push or loop add add pop in es jb cmpsl inc test outsl je xchg in (bad) fadd lds mov lret sub jge outsl scas sbb add sti sbb push mov adc add ja enter jns loope call jmp xor push test sbb cli int3 mov jbe call mov dec and pop mov movsl jne inc outsb inc sbb (bad) pop pop call loope dec popf push dec lods loope and jp lods jle inc lret push sub insl lds jecxz sub cmp cwtl and test pop test or dec jmp jecxz sub xor push inc or jmp xlat movsl repz cli int scas or mov mov lods mov pop mov stc cmp int outsb imull outsl sub or mov fucomp adc push sub hlt mov cmp pop push sbb rolb pop sub incb sbb adc rolb mov mov sub test mov imul adc (bad) push fisubr dec mov xor or sub daa sub mov push adc out test test insl add jmp push sbb adc popf fadds mov adcl je or push daa jb add fnop jns cmp and arpl xchg jp cs mov aam nop add push std xlat sarb jno loop loopne test imul sbb adc push lea daa aad loope imul or mov xor gs adc ds push lods leave lods pop and dec std scas push pop add pushw cli push or in daa aad iret push mov sub xchg pop fldenv js adc mov mov out arpl sbb mov rorl mov push mov push push adc lahf fisub lcall hlt mov clc and mov lds push int3 cmp push pop fldl lock or mov jmp and in jecxz shl (bad) pop iret cmc imul pop negb sub xchg lea cmp aas or and test pop test jnp jge repnz push movsl pop mov loop xorl test jbe int3 pushf fimull lea enter (bad) sbb popf pop outsl mov cmp (bad) jbe xor in in xchg mov or mov cld inc hlt insb add push repnz mov es mov cmp pop stos insb dec xchg or in cwtl (bad) add cs dec mov mov cwtl push testb jno adc repz add push pop les sub neg movsl mov shr sbb mov mov jae push dec jmp push xor push pop mov push mov sub adc popf pop fimul or jnp xlat xor mov and (bad) jmp cltd fsubl cli pop sbb push fbstp mov mov inc roll mov (bad) pop mov jmp fdivrl sbb inc subl add pop cmp ljmp sub decb cltd mov push es popa mov in jg ret adc (bad) xlat aam push icebp not and scas sbb (bad) or and stc pop mov fcoml mov inc and sub jl inc test inc stos shrl jne add out incl add scas movsb cmpsl (bad) pusha xchg xchg (bad) cltd pop fs xor or push ret es orb lock sahf dec les push dec sub mov mov movsb std cmc push dec cmpsl pop sub fildll ja cmp aaa and (bad) pop les adc push rcll out stc pop pop mov clc out adc into mov mov sbb (bad) enter cli jle stos cmp push pop addr16 inc xor xchg and add enter int jno cmp push dec lret xchg sbb daa mov flds je or lcall sub push ret into rorl imulb push test or add jmp push mov push ja cmp cmp pop and mov lcall sbb adc jno nop sub push mov pop and lock push jo mov push stos add clc testl aaa jl inc mov or add cmp les push cs sbb or addb imulb mov and jmp sti loope push add jnp xor gs je push ficomp and hlt mov (bad) data16 dec cmp data16 and sub mov mov jmp (bad) mulb fidivl mov xlat scas sub add mov inc sub mov or aas add jo or mov jl push out dec cs in pop cmp inc mov (bad) (bad) nop movsb adc xlat out sub cmc std cmp jbe push mov sub es inc xchg or stos add pop bound and outsl icebp push cmpb pop testl scas mov push stos ror mov mov ja (bad) divl add fdivs sbb jno andl scas sbb fcomi pop pop jecxz aas lods test mov jns jmp test or mov int3 sub mov (bad) mov add xchg ud1 inc push fsubs push inc in mov pop rolb ss and lds sbb pop or adc bound dec scas cmp xor loope loop add or lods fs mov or adc sub add jmp cwtl xor dec xor push pushf cmc inc mov dec js dec xlat inc mov stc andb and dec add push (bad) fnstcw adc xor mov sbb (bad) xor jge ret xor and rcrb mov mov xor in pop shl xor lret inc inc xorb fldcw push jmp lret push sub sub pop adc loop lahf or pop push fadds jl or shrl mov mov lret push jne add or pop pmaddwd push inc mov mov pop push cld mov es jo (bad) repnz call xchg mov popf xchg jnp sub sub add inc dec ret jne rorb cmp and or cmpsb ljmp jbe ljmp in sub or xchg jo xchg fbstp insl cmp push add jno pop jmp mov movsb popf dec ror cmp cmpsl mov leave jmp cli and pop sub scas mov loop pop clc mov rorb pop (bad) jl push popf cmc adc pop mov inc popa push push stc xor pop mov push cmc ds cmp pop push add fs arpl cwtl pop push imul mov mov call cmp and jmp fsubp xchg ss pop mov sahf mov cmc test sub push movsb incb into int (bad) hlt mov mov cmc loopne mov xchg enter pop add lods mov push aad add iret mov sbb mov test pop ljmp (bad) jmp sub cmpsl pop jmp (bad) std inc aam and lods mov add push xor push or lods push jle cmpsl pop pop adc jecxz or cmp mov aas xchg xchg loop xchg sbb lods fcom stos and iret xchg sub inc xchg ret and cmp aas loop lock (bad) icebp mov push pop add mov mov sbb jg pop out pop add stc loope cmp (bad) cmp lahf mov lods jb and dec xor sub fcmovnu dec push sub add lret lods shrb inc push jne repz sti dec mov pop nop insb mov or xor shrl popf add outsl cmp pop bound add inc sarl or dec rcll je popf push test dec sub jmp rcl es leave add jb mov mov mov pop push pop pop loopne push mov push enter shl lods xor dec add pop ror out push sbb cmp push out sub movsl std mov and dec outsl mov jge test xchg imulb dec stos popw sub xchg mov mov jmp mov ficomp andl movsl fst xor pop sahf cmp repz sub orb inc adc into mov adc and aas loopne adc jae cmp subb ss cmc jecxz mov outsl fwait sub cmp jns leave (bad) hlt jns dec push lret and sbb int inc repz dec push imul mov ja das pop add adc loopne push not push movsb pop add push mov sti js int mov clc add add daa ljmp dec or pop (bad) (bad) adc add (bad) cwtl jge lahf or pop pop movsl push lds xchg pop jmp js mov test nop scas push mov arpl and mov cmpsl mov push (bad) cmp into and add jne bound test fldl movsb and add mov rcrl stos (bad) add mov jle inc add jecxz dec out dec test jmp xor push pop lea pop pop fldenv repz mov xchg pop mov xchg cmp out call pop push xchg mov idivl dec lea and test add scas rcr ja cli test cld pop adc aaa movsl ret lea xor movsb outsb cwtl test mov lods adc xor incl add mov jb int stc out sbb or adc sub roll mov cld (bad) jmp or add cmp pushl jno jb add pop (bad) adc setne iret cmp push xor jmp cmc stos (bad) sbb push pop pop cmp mov daa cld out fistl mov add fimul dec scas nop push mov pop and xor dec out push mov int3 test fnstsw hlt not mov pop push ljmp icebp mov inc inc sbb push fldt data16 push sbb outsb sarl add out mov call and mov xchg test pop and outsb or or loopne mov mov jle and int or test into jp push jmp adc add jbe faddl xor dec pop scas (bad) xor mov mov hlt dec push cmpsl pop or cld jmp movl dec mov imul inc xchg adc add icebp (bad) out jmp imul adc adc xor mov or subb imul pop mov leave add mov or cli mov dec outsl ljmp incb lret cmpsb popf jle xor add orl sbb dec pusha sbb imul pop push adc pop push bound xor shr push in jbe mov pop jb add inc push aaa mov enter dec inc sbb add mov xchg addl cmp (bad) inc inc loope xor xor push mov mov adc outsl adc inc pop inc cwtl loop sub jne jo stos in das dec stos mov lock sub add or rolb into and mov inc pop mov shlb mov ret fldt test enter pop ljmp push stos add sbb inc rcrb pop loope neg mov mov cmp sub inc or mov add aas push jo std sti mov adc push xchg pop pop dec xor or inc cltd jo nop leave test fstl aad (bad) xchg cmp nopl pusha pop mov enter pop push push jmp mov sub (bad) mov jle mov dec dec mov push mov enter add sbb loope psrad jne mov rorl jbe jg inc fcoms add pop (bad) gs jnp cltd add shr jge dec add fs inc or mov mov lods jae outsb loop xlat jns bound push jge add add mov jp (bad) fnstenv or scas inc or adc adc ss mov push lods shrb lret jmp lods add scas jmp test or jns jnp cmp cmpsb cmc and sbb push gs inc dec pop sub and sub add fsubrl add xorb cmp stos jnp jnp pop clc es cmp pop and or test loopne xchg pop mov roll (bad) cmp dec push mov dec aad or mov push sub jmp add mov lcall fwait push add sub mov scas dec sub gs loopne push mov jo,pt into test push addr16 add cmp push (bad) test pop dec and mov mov pop xor pop sti sarl cmc aaa adc test ret or pop mov sub into pop lods sub jmp mov test and pop pop movsl (bad) adc call popf shll fcoms add test mov ret dec pop ret sub or pop jmp pop out pushf pop push push push mov dec testb imul pop ja loopne sub add call sbb inc sbb js xchg mov imul or outsl dec mov push cltd stos sbb and and inc mov out or dec jge out orb inc sbb repz aad jbe test jmp repnz push pop scas sub mov xor in dec and add cmp in (bad) movsl and call pop not push pop mov adc mov xchg or xlat dec jecxz into inc pop sub add dec add jmp cmp xchg icebp cmp pop xchg lds iret or jmp add sub xor inc push adc xor or jle cmp or ret pop pop sub ret lahf push shrb sub bound cmpsl cmp ret xchg inc mov movsb jp xor xor mov lods fimull (bad) or or cld cmpsb push adc pop cld out adc movsl lods sub inc pop xor sub pop xor mov ds push mov out sub and int3 ret sub add test mov mov or fbld cmp insl jmp sub pop loopne add into test or and dec out fiaddl xor mov fcoms sub mov or or jo test fiadd mov cltd pop rcrl bnd (bad) push and mov jl or jge sbb or cli dec adc add lahf jle pusha outsb int3 sbb inc repnz pop mov push push push cs pop sar push inc push cld das cmp xchg push and out mov sbb aaa test rcll add lret jns jp test push imul decb in add inc xchg xor push xor or outsb inc xor cmp (bad) cs jp out adc test or xchg cmpsb sub aad xchg xchg jmp and push rclb imul mov mov or in add xlat jmp lods sarl jl aas jne lcall xor inc cmp sub jb xchg mov and rcrl push clc (bad) xchg inc test pop out add push inc (bad) aaa std push cmp adc movsb in or test sar jle xor inc mov adc mov push faddp mov pop shrb cmp mov inc add movsb dec shl cwtl push pop (bad) daa cmp nop ret push stc pop push sbb xchg jle iret fs jge sub push mov push mov in stos mov or jg sbb imul push mov add loop shrb sbb jmp mov dec or inc push push push jecxz add jmp xchg aaa dec sub repz rcll ficoml js popf sub add or sub les and xchg nop add push sub push dec popa add adc push cmp or insl jmp add jno loop sbb cmp push shr dec jmp cmpsl mov pop mov lret xor mov inc out test add or cs dec loopne add jb push mov push lahf adc adc or add iret push xor fldcw data16 ja cwtl pushf or je sub popa mov mov mov sub mov ficom inc add push lods jmp fdivl sub inc mov jg xor shr (bad) jo xchg pop mov xchg jle jb hlt ficoml (bad) push (bad) mov pop pushf add lcall add iret scas adc pop mov icebp cwtl das call in or lds cld xchg pop scas add negb add jmp jno mov mov mov xor dec cmp xchg lahf test push add jne loop pop mov jle adc dec add pop jbe add pop mov stos add jg,pt les and pusha pop mov aad mov sub cmpb sbb popa insb sub inc ja adc mov rorl pop sub mov in mov adc aaa cld fsubl lret dec test or mov arpl shl dec inc inc (bad) sub jmp outsl bswap outsb pushl out int icebp or ret pop in sub jmp pop (bad) data16 push pop sub sbb mov adc mov das xchg and add nop pop out adc xchg daa pop pop mov fildll push cmc inc dec mov lea in dec and ljmp fstps mov dec xchg inc cmp sbb jo call pop mov xchg pop popa sbb sub call xchg add mov not or or cmp cmp hlt dec pop divb adc (bad) shrb cmp xor xchg and enter les inc insl idivl jp (bad) (bad) cmp pop shr xor xchg out or xorl push scas pop arpl pop or sbb jae pop stos es cmp mov ret pop loope adc or adc ret pop pop push push mov pop gs mov out mov movsb dec pop mov loopne or icebp out xchg jmp fcoms movsl push cmp nop pop jo xchg mov subl ja fiaddl pop jmp and and loopne jo (bad) in sbb dec push notl sub les negl cwtl push lock lods xor jae inc inc daa pop pop inc (bad) addr16 popa push jmp or pop or xor out fsubs dec xchg mov imul orl mov aaa add or mov inc jmp iret inc push clc jbe movsl push into mov sub xor out mov mov in sti xor mov cltd test dec mov pop push mov xor xchg and and imul shl pop or das out xchg pop jmp ljmp mov cmc shl dec or sub pop xchg jg pop jmp loope loope divb sbb scas cmp inc je bound pop add cmpsl into jnp push and dec out mov lret and inc aam pop dec (bad) jmp pop sarb add xor aad nop lahf or push or (bad) lahf cld test pop out ja pop daa cmp lcall push lock push push add es mov test (bad) addr16 rcll fcomp cmp add lahf mov push mov sub xor lds aad out (bad) fs mov add mov adc lret fisttp insb pusha lahf add mov push jo in sahf rclb inc inc es adc mov sub add pop mov pop push mov je dec add mov sarb or adc jg punpcklwd mov push and xchg and mov mov xchg jge jno loopne xorb inc push les lret lock cbtw and in jmp dec ja mov push (bad) mov add lahf rol pop mov jbe imul and xlat push test out bound mov adc jne sbb lahf cwtl or shrl jo sub pop mov dec push inc jmp in add imul aad xchg or jmp or or sarl inc or xor test pushf adc inc pop popf pop pop add jge outsb neg frstor dec add aad call lea mov or (bad) sub jmp jbe mov stc mov (bad) test test addb leave push loop jge dec mov jb pop lcall ljmp in out sbb divb jae inc add repz pop push xor daa mov out stos inc add jno mov ret loope mov cld out push (bad) cmp mov inc push outsl pop adc loopne inc add xor ljmp ja pop cli sub shrb dec sub sub pop not mov fildll push sub jnp jne test mov fadds xor dec stos lret sbb sarb inc jmp and or pushw lcall sbb sbb pop js sarb inc insl stc and bnd test notb pop int les mov (bad) push pop pop clc cli add jmp add sub push ret push mov popf ficomp pop (bad) mov mov push pop jge lock push cmc mov xchg out and xchg sbb inc cmp add mov mov xlat sub jmp popa push and and aas imul mul pop sbb popa xchg or (bad) fisub push inc sbbl adc repz push mov int3 cmp pop (bad) in pop xor sub and xchg xchg test movsb mov mov cld ret sub mov inc jp push adc icebp test lret dec cvtps2pi jns or sbb pop xchg jecxz push (bad) and cwtl jne stos dec pop idivb (bad) lock xor das add jb inc std mov xor xor and cld and pop and (bad) cmc mov (bad) xor mov mov jecxz insb mov and dec nop ficompl ret test cwtl sub lahf bound shlb daa or sbb add or mov mov push ret pop test cmpsl nop jmp mov dec scas lock enter (bad) push dec enter ret or das mov repz pop mov jbe and jg mov xchg dec dec insb icebp jne jno lcall inc rcll add mov xchg lods popa rol or xor adc or cmp inc add xchg inc jo adc xor and sbb inc mov icebp sarl mov pushf imul pop inc mov jno xor aad fs mov push adc out pop push sub push cli leave mov mov test (bad) jge jp in js add and sahf adcl shll test jg es int les out or orl push pusha ja notb out add pop pop rclb movsb cli add mov push push fdivrs nop and fiadd xchg js sub xchg mov out inc movsl (bad) ret lds mov lret inc pop ds insl or or fimul add dec push ds call mov ret push imul movsl inc icebp dec (bad) (bad) loopne push dec and jmp add mov loope jl add xor jle mov les xor sti add arpl cmp push dec add mov add or (bad) lods mov or fcoml gs pop mov dec clc rorl mov push push jne and dec xchg xor inc bound push mov jle push mov lret mov adc cmpsb xor les mov xlat or xor out sub sub push inc sbb mov jg insb mov or inc lret in cld and push loopne,pt and mov pop add (bad) push jo and or test xchg xchg es adc fptan pushf cmp jno fsubr mov int mov sbb push push dec inc (bad) fadds add push pop add inc jle mov sub xor cmp pop ret or xlat adc push and call je push rcll fs mov rcll dec mov mov sbb add inc fimul cld mov and push mov push inc push test pop pop cwtl xchg das in subl sub inc xor pop jo popf push or xchg push dec pop daa mov icebp sub test movb imul movsl mov xchg pop jbe dec pop sub lret sbb cmp pop push push scas inc neg and jmp xlat inc test sub mov int lahf out iret mov addr16 cmp sbb movsl sar xchg hlt mov xchg inc or in roll mov nopl pop xchg int3 inc cwtl (bad) cld je sarb adc sbb dec xchg das jnp sbb mov (bad) mov mov in xchg jo shll lcall inc dec mov (bad) les lcall push pop xor pop imul stos push sub ret lods mov or mov add cmp and lock jmp inc pop fistl andb dec xor mov push mov cmp ljmp sub mov add aas icebp int3 repnz cmp xor insl adcb pop add mov sub pusha fdivp imull into das lahf sub mov jg cmpl jmp xchg mov or and call mov add pop cli addr16 mov pusha sbb out outsb lock sbb push movsl (bad) sbb loop xor popa dec (bad) xor cld push mov repnz orl jno add jle fsubp lea xor bnd pop jno popf aas add sub add jnp jo xchg cwtl imul rolb pop fild das jge rolb cmp es cmp xchg imul mov jl add int push or mov xor add repz sbb das ficompl push rclb orb pop add xchg test mov (bad) pop lahf pop std mov jg mov inc pop in adc loop add push sub fstpl mov in inc inc pop inc jae in femms cmp fs push call xchg inc test clc mov aam (bad) ja cmp shr inc stc repz sti popf cmc and push mov mov pop repz mov mov sub flds cmpsl and addl xchg xchg icebp xor jo jmp pop and ret xor pop out stc sbb mov sub inc pop sub add xor lret add cmpsb inc and fsts inc ja stos (bad) loopne icebp adc imul pop mov out dec mov dec mov stos sbb test jle push cli mov xchg dec imul pop xchg lds pushf xor pop push or jne outsl in ret xchg rorb lods mov pop xchg inc outsl sub and loope popf dec xchg and adc mov push popa mov sahf call cmp stos gs outsb lahf jecxz dec stos lret mov and add dec std mov add sub cs mov popf mov inc or ds popa push mov sub mov or and push stos pop push and stos iret adc push or jl xchg xchg inc pop sbbl jae inc cmc repnz out in jo push test inc loopne jbe adc mov lcall sbb jp cwtl and push pop adc and loopne pop repnz inc mov xchg cmp lret xchg pushf in outsl aad xor jge add mov sti sbb (bad) je push mov push mov mov mov and call pop rorl push jbe add fs xchg add scas add dec lock add and sbbl mov inc inc ficompl pop lds pop add mov leave dec cltd push nop mov mov mov lock dec insl mov dec loopne cmpsb push imul jmp subl mov outsb adc inc in jle repnz das xchg or and inc inc test jae je jo push (bad) mov ljmp inc repnz jmp and push pushf fisttp mov ret out sbb jmp mov or add adc fucomip pop insb aaa add push pop mov imul cmc daa dec lret aas int adc cli cli lret and ljmp not adc daa (bad) cmovle mov and fiadd outsl rcl mov outsb test mov lods add mov inc rcl push push or mov pop push jp dec popf adc (bad) cmpsl mov cwtl je cmp lock inc rorb enter in sub push inc in lock mov je dec push and aam mov push rolb mov cmp pop int push adc cvtpi2ps push ret cwtl add push push xchg push movntq pusha (bad) sub insb mov or jmp mov push push arpl inc shrb adc cmpsb add sbb sub roll jbe rclb cld shll movsb adc aam mov xor pop mov xchg lods xchg cmp orl pop sub pop out push push fisubr jo shr xchg frstor push sbb xor imul adc loop xlat stos lret loopne loopne add cs mov pop addr16 pop rorl cmp jg outsl lds cmp or aam mov subb add mov lock icebp inc adc inc push sbb cld dec and jmp aaa inc (bad) xor inc dec xor jno push add mov jmp mov or ss jnp mov nop mov mov dec pop sbb cs outsb insb stos or push mov adc pop push clc jne cmp mov das int3 mov inc ss mov push pop ljmp and sub jmp pop repz cltd pop mov (bad) jbe push push popa daa add mov subps arpl roll je pop add lahf mulb lock lcall xchg add movsb bound jne int (bad) push sbb cmp aas add (bad) sbbb je jp insb add or inc add pop adc jp or sahf fildll lods pop in sub aad in lret pop nop mov imul nop add insb or adc ja push push jmp dec mov out inc cld test (bad) pop inc sbb iret jg dec sbb das add shr jae ficomp mulb or dec mov push (bad) out mov dec sbb insl sbb (bad) icebp push dec daa add mov mov test sgdtl sub daa add jmp mov add dec push jle push fnsave xchg dec pop sbb std testb inc mov pop bound orb loopne or call test ret scas xchg movsl push mov mov lret xchg fsubl fistpll xor xor mov xor push (bad) cld push push add fnstcw fs cmp cmp jb icebp cmpsl dec xor das and adc iret movsb pop pop jnp fnstsw cmp pop jb xor movsb mov adc jmp outsb bndstx test nop adc sbb sub cltd pop shlb cmp xchg cmc (bad) subl call or fsts xor pusha ret mov inc and mov jnp imul nop lret push add scas test mov push rcrl icebp (bad) jmp iret xchg shlb pop scas jb (bad) jmp adc mov mov add add fidiv leave push or aam push (bad) (bad) (bad) mov call sti adcb or jge pop push pop mov jb daa push cwtl jp xchg adc mov in fcoms push fs leave iret mov pop or mov fldln2 fcmovb jmp mov push (bad) mov sub bnd jnp xor gs out push jmp fidivl out xor (bad) int3 cmpsl fcomps fiadd adc les incb outsb mov scas negb out xor cs jmp imul pop pop mov sbb jg sub fldl fs and mov and inc xchg nop sbb cmp xchg divl xor pop cmp inc xlat mov lds gs inc lods or pop xor dec push jae in icebp push daa adc sub and mov mov ds int3 jge mov and dec pop push sbb mov lock sbb out sub push (bad) push mov or push pop pop add or push sub push pop add call mov push push pop push add inc mulb inc push push (bad) decl add push movsl and js in or mov divl and dec les std adcb pop sub fcomp aas push xchg sub sbb mov fldl cmpsl in daa jne sub pop mov mov out pushf (bad) rorb mov neg inc or stos arpl or mov stos mov (bad) jmp das inc adc xchg hlt ljmp pusha mov insl inc and inc jle arpl imul mov push pop sub jmp push or push xor int ficompl mov pop daa push flds scas das xor and js (bad) mov dec scas xchg call ds lea push jne add pop inc scas ud2 adc cmp outsl xor sbb mov in das mov dec inc jmp add mov mov pusha xchg sub xor dec or test mov add push (bad) sub dec mov nop adc push rolb das jle add jl xchg cmp mov daa jle fcmovb adc das (bad) jne (bad) lds in fildll popf (bad) inc mov jle out in daa jmp out mov cmp push add clc and mov and xor dec rclb add pop adc push sbb in and daa repnz sbb dec cltd pop dec push dec mov adc push xor or xor sarb mov mov cmp sahf push or stc fistl out add (bad) bound jge,pn sub jmp mov add jbe lock mov sbb push cmp call push cmc stos adc jge push sub dec inc mov inc movl add rcll out inc xor loop fcomp add adc int3 iret push xor push add hlt jle sub or push push push mov mov fild sbb adc or enter sub pushf jle push dec lea pop sbb loopne push cld push xor pop scas pop out (bad) in add add add nop push (bad) or dec jg inc sub mov fwait enter jno mov push adc pop cs and jbe icebp andl lods cwtl or or or (bad) mov dec inc fildll dec pop lcall data16 and sbb inc scas push mov pop out lahf xchg stos shrb or mov daa dec pop ror leave push add jns add jmp mov or sub int insl push cmp insl push mov jnp mov adcb out push sbb inc fist sub mov mov add inc jg repz aas lea out or xor push mov lahf lock loopne push push jo psubsw add or push add push push imul xor pop add mov daa push dec addl sti and jp imul xchg int3 and mov push adc mov repz fsubl lock pop mov pop or sub movsb mov add pop xchg das and ja cmc jle daa dec loopne pop pop cmpsl repnz add mov jnp test arpl jp adcl mov dec cli rclb pop cmp fmull mov pop mov js pusha xchg push sub outsb ret aas pop frstor push and sahf sub push cwtl or pop inc dec or out test pop insb add sub adc mov mov pop adc sub test dec inc xlat jg ds fisubl rcrl pushf lcall add cli xchg cwtl insl jle sub arpl je (bad) mov or add stos inc (bad) xor or add loop bound adc andl jmp pop enter fst cmp mov push sahf leave pop ret imul ja fstl cwtl mov test pop xchg mov js mov pushw push popf les and insb es sub mov and sub sub mov push mov add pop add (bad) lret pop dec stos adc in ja icebp xor add adc push mov xor jmp sub pop sbbb inc push sbbb repnz lods pop inc hlt sub sub fsts fs mov (bad) insl and adc ljmp leave cld sbb stos add sub test les hlt xchg mov pushf shrb mov mov jp das cmp dec inc loope inc lock insb or push stos xchg and rorl test adc aam dec cmp test sbb mov pop addl fcom push icebp xchg iret mov sub hlt adc xor scas pop xchg stos lret add cli adc adc nop lahf ret jb test adc xchg pop add cmp jns mov in push dec mov jne scas push jecxz push fsubrs and pop mov ret imul je std mov jmp dec jb aas cmpsl insl push xchg in jl push pop sub mov dec push pop sti (bad) std ljmp adc sbb fimul inc dec pop pop lret xchg cmovnp inc jecxz mov dec push add inc sub pop or mov xor nop mov adc mov stos jmp jmp xor lea imull je inc (bad) lock add mov outsb push and rcr push xor pop andb jnp cs xor cmp sub jbe out inc adc or aas jmp and outsl pop dec movsl push pusha push test (bad) push dec inc shrb je pop cmp addl jmp pop dec call test aad into add int stc ret xchg add out jnp aad xlat (bad) pop ror dec out jmp pop sub or inc test push push mov dec jl or mov pop push test cmp stc add pop jmp xchg push jmp lods adc adc ret or (bad) out dec nop dec xchg clc rorb jle cs fcomps or ret into cmpsl push inc mov lods fisubl dec add and add add enter cltd xor icebp jmp movsl push (bad) leave enter jns or jmp or and je mov jae imul push mov push push (bad) or pop call out movsl jg fwait pop push jmp mov test ljmp ficompl jbe pop (bad) or repnz dec out je scas mov xor jno test lods mov add jl and mov insb pop sub (bad) lock push inc (bad) cmp add dec jbe and lret or push mov repnz jo cwtl movsl in outsl popf rcr dec xlat (bad) jb incb or enter (bad) or xchg jb test mov xor stos jecxz or popa lret dec loopne insb aaa pop movsb ds jmp pop push mov inc pop pop (bad) pop into lods rolb mov sub mov push sub test adc and xchg and or daa add pop push fwait push mov mov cmc fs mov inc sbb xchg in int rcll dec js cltd push push mov cmp out loopne movl add inc ret icebp popa ds (bad) pop lret inc stos jne dec jne adc mov and and inc jae nop adc mov daa clc push mov pop leave mov push aam js adc test jbe push or sbb jae adc add std (bad) mov pop mov enter xor lret dec or int movsb adc pushf add lret pop cs pop ss insl fisub or mov xor lret and xchg and stos xorl inc push aad aaa (bad) jmp mov pop push add nop inc jns pop fwait sub lods push mov in dec je (bad) pop rol out (bad) cmp or lds pop lar adc xor sub xorb fs clc dec in scas addl addr16 dec and jne andb push and aaa shr roll push and sti repnz adc pop fcomip ficom arpl mov push pop test out cmp and xchg jne cld xchg lods dec add out dec inc jae imul je popf sbb (bad) xor rcrl inc push inc scas and mov mov scas (bad) mov pop xor xor shl popa pop pop shlb pop jmp xchg sbb test jbe or sti inc push out mov in jnp dec jg psadbw outsl cli imul std mov and (bad) movsb (bad) and popl push clc jmp adc push lods pushf jnp out sbb jle incb mov add lret push mov jmp out inc push nop xchg cli xchg popf in mov lods jle rcrl inc hlt pop sub roll (bad) (bad) push popa iret popl pop push xchg fsubr cli pop xor lea mov idivl popa mov fucomp out jle pop cs fsubl ljmp insl das std cwtl rcrb xchg in das lds lds daa lock movsl jle (bad) inc push inc and inc pop aaa ds pop add adc push pop jge and fildll pop xlat loope loop scas pop mov push mov jmp mov aaa mov xor movsl aas lds add pop jns lods or pop pop shr or les clc add cmc and inc mov sub insb inc push fstpl dec jne test pop ja insb sbb inc adc pop ja lock jmp out pusha js pop subb mov sbb pop scas popa jns mov pop test sbb adcb ljmp and (bad) (bad) (bad) xor imul and add sbb add sub das xor (bad) mov (bad) ficoml movsb add xchg outsb cmp enter mov nop push jmp roll cmc cmp mov jmp jns push popa or pop adc jmp pop cmp cmp adc adc lods loopne and add cmp mov xor mov push scas and jmp pop (bad) pop ret pop sahf sbb pop push push mov cmp pop sub in dec repnz add push jge push pop lds movsb or mov mov jle insl shlb pop add adc pop push fisubrl sub imul lret xor insl aam loop add decb pusha repnz dec and (bad) cmp sbb mov or inc add sbb out add gs sar (bad) int3 or jecxz std inc cmp sub ljmp and test subl fmuls jmp repz call push push inc das add inc jl add pushf leave (bad) xchg enter jb mov pop test add pop (bad) icebp rclb cli push sub add jge adc or pushl icebp roll push sbb adc xchg icebp add push jp int3 es (bad) push decb es or push scas xor pop repz jnp dec inc add cmp add iret and outsl stos lea push outsl dec xchg push cmp dec sbb loop jnp lcall pop sarl or lods into popf and mov idivl fidivr orb fisttpll adcl jp enter or imul sub pop xlat jnp or in out ret mov inc int3 cld and sub out pop subl lahf outsl addl add mov or push and ret idivl add psubw inc repnz dec mov push scas sub sub loop push mov fnstsw fisubrl dec sub sti xchg adc mov add cltd xchg xchg fdivrs xor addr16 or movsl out or fmuls imul in mov dec int jmp lret sarb mov sub sub or icebp pop imul pop jge imul or add fwait enter cmp sub neg inc andb mov call stc (bad) dec mov sub ja add (bad) dec clc mov shr sub out call lock mov mov iret dec cmpsb mov neg (bad) scas or notb xor mov imul jb cmp inc std inc loope sub jns add or fmul xchg cmpsb jg adc nop inc sub mov jmp xorps mov jne xor or fwait loopne mov mov shl add roll fldcw dec or sbb mov pop dec insl pop popa inc push adc sub pop push inc icebp int imul lcall or addl cmp lock lods sbb jl push mov bound leave arpl (bad) in pop add lods xchg not popf or xchg aad bound rcll pop mov addr16 push xchg sbb xchg rolb push push mov (bad) or and add mov clc push xor (bad) popa mov dec adcb dec loop je and push pop out popl arpl test mov add data16 imull jno pushf clc sbb daa shrb popf mov lret push shrl subl push fiadd and pop pop cwtl mov mov sub push fsubr outsb xor dec cs (bad) fild pop pop push ljmp pop in pop das push inc mov add addr16 out jmp aas ret int cmp push decl add jno pop shll mov out out add mov or ss add push mov add sub in pop mov jne xchg fcomps xchg (bad) xor push mov inc push (bad) fsub xchg movsb xchg or scas ja and call pusha xor inc repz in dec lds and pop and jae dec or mov push inc push or std and (bad) arpl add sub ret hlt stos dec mov cmp jmp iret or fs or jnp inc lods arpl sbb push mov out test add jno rclb cmp lahf xchg in je pop shrl jo mov inc or popa ret jle (bad) dec rorb ret ljmp push das rcl sbb sbb pop test mov fistp or out aaa and cli in aam lcall daa in sub xlat mov test ret pop dec inc adc mov xor andl mov gs mov rcrl and movsl inc inc inc ja mov das test mov push pop push or or test xchg dec jnp es in push test (bad) js pop sti and das cld (bad) aaa add pop cmp pop (bad) xchg repz stos inc mov inc adc cmp sub aad xlat mov sub popf mov pop mov and dec scas ffree lret push and cld mov push sub dec aad mov jns (bad) add xor test loopne mov mov sarb jp dec pop xor int3 mov jmp or or fisub push mov pop jmp clc aas add iret pusha dec and sbbb hlt inc mov xchg pop add or inc psubsw rcrb mov sub inc cs mov mov loope cmp loop mov addl jg repnz es sarb aas mov dec push gs push inc or shll jmp and shl xor in sbbl sub sti popa mov dec sub ja insl jb loope rclb xorb and add call xchg fistl es orb inc adc add das push incb test mov pop jmp pop test push cwtl pushf dec lret mov push push push stos mov inc lds mull jp inc loop,pn or fiadd jp push mov lods mov or xchg xchg rcrb push pop xor lahf push mov or cmc ljmp and call lret mov lods push xor sbb mov add push cmp mov fisub add pop push cs decl std leave xchg pop jne pusha adc out mov jle mov or cmp sub ftst scas imul mov pop inc push cmp (bad) into cmpsl and in pop out ret mov es addr16 rclb loop lahf mov fcoms jecxz ja cli clc inc xchg (bad) loopne sbb dec cmp in jbe jge std in test ret add pop out pop add imull or jmp roll push push add xor in adc neg add and push mov pop in xchg push adc mov clc pusha aaa stc mov adc sub xlat icebp and jge push hlt andl xor lock inc xchg pop lahf fcoml add push sub (bad) jb and push pop sub xor pop sub popf or fbld xchg mov inc adc mov mov daa icebp out gs scas inc int3 dec add imul or into hlt mov add loopne jne dec pop imul repnz mov cmp dec ljmp mov loope add loopne into fwait std sbb push push out inc jmp (bad) mov push xorl jo pop les mov decl ror and jmp cwtl xor sub push ljmp lds test and imul jmp roll and push jne mov fcoml jmp rolb sub negl nop pushf pusha int imul push movb jle es push fsts out xchg daa fdivrs lahf pop cmp mov fs daa sbb inc or cli dec add push aas daa sub pop gs pop sub cld inc cmp add pop fmull mov (bad) or dec sbb pop push out mov enter mov fndisi(8087 mov xlat (bad) aam lcall ret pop leave enter fucomip (bad) mov push push ror mov add inc sbb lret xor sbb push or mov sub cmp loop pop shrl jne or popa pop mov add orb inc cmpsl movsl or push add sbb xor dec xor cld dec xchg out sub cwtl (bad) cmp or inc neg inc rorl shlb je jmp outsl dec out inc aaa les popa jle ficomp pavgw xchg es sahf add cmp adc push std test cmp push lret mov push stos dec (bad) sub sub ljmp add push push inc inc popa rorl (bad) dec bound adc mov inc push pop push xchg (bad) mov in in fs cli (bad) hlt jne push roll stc pop jb mov ja xor ror mov cmp push adcb xchg mov dec mov out imul test adc leave add daa jo in or loop ja xchg adc jmp in sbb dec inc pop dec pop add xor dec xor test faddl jmp xchg std add mov sub imul nop pop pop push dec negb in repnz call dec aaa cld rolb add add mov adc xor outsb fld mov addr16 jge popa pop jmp push xchg cmp jecxz jge sub dec jnp and push ljmp (bad) or stos imul jno mov pusha cmpsb cli leave push das cmc subl orl test inc out in mov mov sub push adc cmp movsl stos mov xchg out xchg aam adc inc f2xm1 imul sub push int3 arpl cmc imul pop test pop inc cltd and inc pop fwait hlt adc in in jne adc (bad) not sarb adc jbe add push femms sub adc cmpsl mov mov and je or shll (bad) in adc or jp cmpsl and mov (bad) ret fnstcw popf xchg js dec push mov pushf inc std ds sub jp or hlt pop sbb or push mov ja test bts jmp mov and xor loopne or cld add fucomip out (bad) push push push jne pop and pusha cmpsb fwait daa fs push dec mov push mov int das dec xor mov test fidivr pop repnz outsb or out add aam push iret mov and push sti les add shll jb xchg aam mov movsl fstpl pop push icebp fsubl cmp adc fisubr ss pop and xor decl ds pop subb jmp xchg pop icebp push and addr16 pop cmpsb cli jo das dec pop adc scas mov (bad) jmp cmp flds add pop jmp add push addr16 pop hlt in push arpl mov loope loopne inc xchg pop push mov mov nop jbe jmp cmp movsb addb les mov and lds and xchg push sub adc pop pop in inc mov fadd or mov pop add jae shlb mov fwait add mov loopne push and sub icebp xchg insl and mov pop xchg movsl cmc (bad) call lcall lahf das hlt add rcrb pop inc lock sub dec out add jbe mov std and cmp xor pop jne xor add dec mov lds mov add subb adc mov fnstenv adc inc rcll scas adc addr16 mov mov add or mov addl cmp dec das pushf (bad) aaa push cmp loopne push push aas dec add and in pop movsb add test js sub (bad) or dec js das push into out pushf xchg pop cmpsb popa push push fstps scas push cld lcall (bad) (bad) dec (bad) mov leave inc xchg dec mov inc cmp lret frstor adc or xor ja nop add subb push inc fsubs bnd sub lock inc outsb jmp roll aad mov and sub inc mov jo (bad) pushf sub call xor cmpl add data16 mov push xchg add mov dec push xor mov adc cmpsb or jbe fbld enter sub mov push and pop scas xchg (bad) sbb push dec enter js pop mov aas and and cmp add scas inc push lock dec ficompl adc mov and out sbb cmp repz or dec fcoms add jp mov dec mov mov inc stos add fsubl js in mov push inc inc jp popa pop repnz push mov and pop (bad) in leave nop sarb inc xchg enter and test mov sahf xor jl repnz fisubr xchg cmp push movsl jne mov adc or push mov sbb inc nop sub mov (bad) incl jmp loope inc adc inc clts inc dec arpl les clc sub jns outsb jb popf fdivl mov add push sbb push (bad) or jmp and jmp adc dec push dec inc adc add in mov jmp ljmp mov mov movzwl iret loope out add sub jmp lods add dec xor sub mov xor adcl dec xor enter mov imul push je das in outsb lock pop lods inc into lds in cmp in ficomp jmp and push mov rcll imul cmp mov push orb data16 dec movsl idivb (bad) movsl sub pop (bad) call jle inc or or jecxz xchg xor popf stc movb sbb xor inc jg push cmp mov popf sbb or gs sbb push xor mov sbb mov mov jecxz pop (bad) mov sub xor pusha jne test pop mov bound add std xchg cmovle (bad) nop dec jmp (bad) dec mov fstps call (bad) ljmp int3 push mov or sarl mov fsubs cli or jns das add stc push dec pop push xchg (bad) notb sbb sub out addl test push mov arpl (bad) jae inc cmpsb dec jae fs mov lock push pop push push jmp mov add add in push pop mov xchg ja into std cmp in sbb add xor shr test sbb push jno ficoml daa mov or pop cmp rcr sub pop add pop faddl ja push loop jle jp xchg jmp loope adc clc push pop pop or repnz jne imul push jge jae pop fstl in adc rorl clc enter cmpsl pusha jne daa mov mov sub aad movsl popa push pop sub adc ret xchg jg jg in lret dec sub loop outsb jbe subl notl out add out (bad) rcll sub mov jo add popa aaa out sub (bad) popa add jmp add gs dec add pop add pop push add icebp push pop jmp shr repz jo and xor mov xchg loopne xlat bound pop push push shr mov inc dec sarb in sub xchg xor and or and pop shr inc cmc add dec add dec outsl or xchg daa pop neg fisttpl fnstenv pop pop lock jmp push push mov jne out punpckhdq lods out and pop add mov add jg cmp or jmp je push fist push dec cmp into xor popf stc sub icebp dec jo ss push mov add insl adc (bad) (bad) mov mov inc (bad) push and mov out pop dec sti sbb add add fdivl mov pop lret in or sub movsb pop and popa or jle arpl pop pop mov add mov adc add push jae inc jo dec dec pop popf pop stc cli and cmpsl push xchg sub push or mov and scas daa (bad) xlat aam into sbb mov pop leave std inc fisubr mov xor enter pop pop test (bad) out cltd add (bad) shrl jmp mov pop mov xor pop not shr cvttps2pi mov mov push (bad) notl pop pop ficom (bad) mov and aad add mov loop sti mov cmp add movb cmc fbld add xchg pop cmp jmp gs es add or out dec pop (bad) cmp add int insb lods or mov (bad) sbb xorl mov loopne xor xchg lods negb dec or sbb hlt xor push into (bad) repz dec in mov mov fstl dec lret sbb loope push inc push jmp pop xchg loop xor push jae ja ds and add push push je add inc hlt add xchg mov pop cwtl pop fs inc scas lret xor jo xchg fistp scas lods (bad) in notl pop add lret push sub pop jno dec xlat dec add xchg pop add mov lcall pusha dec push mov push mov dec inc dec mov das cmpsl scas adc int3 out mov loope lret out and imull popf jns mov fldt or sub das test mov sub insl adc mov popa add ret lods sbb push and push jmp push jo mov sub movsl pop xchg mov adc daa pop bound out lahf push push mov test push lods add jmp jo test sub es dec xchg adc test inc push divl (bad) sub pop push fstps adc inc or push mov ja pop pop pop jne scas adc stos mov nop cltd cmp shll outsb pusha push cmpsl notl pop inc mov mov add sub pop fadds sub inc movlps adc adc (bad) out push jbe inc jbe dec push mov nop pop dec push in ss lcall push push out dec add cmpsb adc jmp in fstpl add test adc adc mov pop pop cltd repz or mov outsb iret xor or push fistpll ret std lret or adc (bad) cwtl cmp ret cmp push push jns or inc fwait data16 adc xor divl (bad) (bad) xor mov insl sti cmp adc lret adc or jmp shl sub push mov mov mov or fwait fs mov (bad) jmp push mov cld push mov cmp adc xchg cmc mov mov sub dec add cltd cmp sti xor or nop jge or cwtl add lds adc sub and push and pop or xlat dec in push add je cmp ljmp jmp adc out shr cwtl add rcll ret inc dec mov sub cli sub add das push and mov dec jo adc sub shrb and dec adc aas mov orb jbe jb stos in xor push pop push mov push jmp mov jmp inc fadd sub and das pusha xor and aas je sbb mov pop out xor lret hlt and (bad) negl pop andb sub adc adc push out lods movsb (bad) push xchg subl dec dec addb add jmp das and xchg dec addr16 out repz push inc push sarb pushf push cmpsl sar mov adc (bad) sbb dec jo push inc inc xor sub pushf ljmp jmp mov or lcall adc aad nop add stos push mov (bad) add inc mov inc in add jmp mov icebp push jp outsl addb imul or nop inc jbe jns xchg xchg and pushf clc mov add cmp sub lds mov pop pop jecxz adc mov scas mov push pop push out mov mov popf cwtl out and inc mov (bad) mov push cli pop andl jmp in or aam pop idiv jp sti mov push push les mov shlb pop cwtl and pop adc fldl mov xor addl pusha jmp push xchg inc push adc lods iret xor inc (bad) mov push pop fisttp xchg (bad) jns nop push ror xor dec jge data16 push jmp adc mov dec in test xor data16 cvtps2pi icebp daa xchg loop jg fdivs adc ficomp loop mov cmp push inc std push mov lret pushf pop mov xor inc mov lock in les pop scas mov out (bad) mov dec sbb mov loope bound jge aam lock gs call push push mov aam xchg mov cmp jl mov pop xchg jmp shl test faddp enter sub jg (bad) mov das dec cmp xchg inc jge dec or xor or imul pop js xchg add lds cmc test ret mov pop mov sbb pop mov push daa sahf jg ds out sbb sub jno inc or xchg cld pop fisub adc add rcll rorb pop dec mov push push inc add jo (bad) dec xchg out into outsb rclb xchg mov cld pop jl clc testb test scas and nop cmpsl and fdivr xlat pusha pop xchg mov jge out (bad) and push jle pusha imul es add aad inc fldt sub xor ljmp pop fidivrl fldl sub scas jne out mov int3 ds pop ret imul arpl mov jmp mov (bad) push cwtl fdivl mov dec fstpl sbb cltd xor mov push movsl popf push dec cmp aam inc or push sbb mov dec out and mov (bad) xor sbb mov popa pop or stos popf pop xchg sahf mov decb xor push adc inc dec scas nop or sbb cmp sti inc or pop inc les mov sub mov adc pop jnp pop and push mov mov test push mov movsl add jle jmp ret cwtl inc inc xor jo stc mov cli mov cmp mov scas pop push ja mov push pop add add popf sbb add js or or mov xchg xchg inc nop mov or aam jecxz mov jge cmp inc lahf sub inc dec push popl mov mov das jmp ficoml enter jg jne mov sub aaa sub pop sub adc (bad) mov dec icebp mov in and sbb sub es add jo adc enter lds emms sbb xchg jg (bad) fisub add scas pop push xchg and mov jno dec into and int add mov fstl sbb hlt ret (bad) lahf and out iret mov and add pop pop (bad) enter faddl jmp js xchg sub lret jmp ret sbb jmp into fldl jmp repz pop cltd xor cmp add out cmp xchg pop sub aas add adc in add or mov fisubrl mov mov cli pop jbe nop sahf cs and fildll mov xchg (bad) fsubl sbb fdivl lcall jns jne ljmp or adcl cmp jns mov pop cld and icebp test inc add sbb cld push lahf inc dec jne adcl aas shrl hlt pop sbb lock push pop jmp inc xchg sub dec addr16 imul add add pop jmp fcoms nop sub jae ja lea fldl sub push or and or mov gs repz add addl (bad) js sub fwait pop int3 pop loop clc push dec pop scas cwtl sub or sub aam dec or pop es xchg push imul adc sub add mov data16 (bad) or daa fmull inc sbb lahf movsb or jge rcll fimull lea inc loop mul bound sub adc (bad) stos jns jp mov lcall lds pop sbb roll or sbb adcl stos inc call dec fisttpll outsb push (bad) adc xchg jge ljmp jno add dec mov pop lods stos dec fist adc mov rorb fildll aas mov out enter mov inc (bad) mov std in sbb or adc mov jge bound jmp imul xor out sbbb nop xor ljmp sbb das dec adc pop dec mov or and pop jae pop loop stc ja roll movsl aam inc and pop push stos add mov out mov cltd add or lret jbe ljmp js lds scas inc pop push in lods jp push loope nop (bad) adc jmp int3 sbb loope push jnp inc movsl cli xor pop int add xor mov pop sub out mov cmpsl in test ret popf push jb cwtl add fdivrl xor or jmp add das imul jnp cmp or mov popa insl test jae bound sbb cmc push inc mov daa mov fild mov call mov push xchg je mov gs pop add add xor add sti lds mov fsubr mov repz jmp popa mov jbe dec ljmp mov inc aas repz push ds or repz dec cmovo jle test inc cmc popf (bad) leave or je add dec pop inc jb orl jne js iret jl add mov cltd iret in orl pop jmp pop in and ret loopne jmp out add insl stos subb lahf add lods in inc stos sub flds push mov cli jge push std stos cmp add jb and shll push sub mov mov push lods bound jo test stos xor ret call pop outsl (bad) sarb xchg cmp xchg dec pop fcomps pop dec jle push pop jns icebp xchg fmuls xor or les mov lcall je imul push mov and sbb sbb into insb sub jge mov or push pop cmp xchg in pop enter stos and xchg push pop cld mov gs push loop mov mov pusha cmpb and outsl add jl and mov or ret or pop das pop rclb jae mov add loop jge out push das loope mov repnz or jmp ret cmp inc cmpsl dec sub add int das bnd xor pop push out pop mov xor cli push xlat jecxz mov add repnz mov out pop mov imul push jp jg aas push xchg jae sub mov stos xchg add mov dec (bad) frstor mull xlat pushf push cld out xchg push sub xchg cmpb adc mov cmc dec in fscale jmp mov push rorl out pop add push les outsl es das lahf test je jle cmpsb inc push jecxz inc sub outsb mov and push push test cmp gs out inc xacquire outsl jmp mov jmp cwtl ljmp push sub aas mov ja pop lret lds mov push sub xchg popf (bad) repnz lahf daa pop faddl cmp add jmp xchg in pop scas xor inc dec push inc mov dec imul test dec jae js mov stc daa bound add push and mov popf (bad) fstl aad push shlb gs pop mov mov pop je roll mov jne cmp jmp push and cld sbb in mov mov pop sarl mov add lods mov xor rorl dec adc ret push out icebp xchg push jnp adc push and mov pop je imul xchg pop stos xor pop push cwtl sbb pop decl adc mov sarb mov fwait imul mov aad aad out or xchg (bad) lods addr16 sub mov lock fadds push mov xor ror jnp push mov xor xchg pop les lock test aas jne dec cwtl mov push mov cld push and insl inc xor nop mov cmp enter push mov add mov loop test add jne adc les inc ss decb mov sbb cmp cmpsl stc neg fistpl jns outsl (bad) fistp jbe or push adc in in daa fxtract ljmp repz inc xchg add js xor cmp mov inc jp imul xor insl and fs adc mov movsb ljmp pop xchg dec das inc fstpl sbbl out sbb lock imul add xor sarl xchg add out (bad) or add outsb push cli adc mov xor jecxz add js sub aas dec mov cmp dec push lcall clc lods or and inc sbb and jmp test lcall xchg push shll gs cld sbb in sub outsb lods or xchg push sbb push jmp inc push iret fs (bad) sub pop or shr adc movsb or jno sbb add jp jmp sub jl add inc sub push sub add rorb jmp inc cmc xchg addl flds outsl and dec jnp arpl repz mov push push jmp xchg cmp lock js jo cmp add cbtw and adc xor loop ja inc ds and dec sahf push add and outsl ret cmp adc pop add insb addl dec jl sub push shll into adc adc jnp out dec sti cmp jmp loope jl icebp mov gs xor push lock adc mov loope cmp add cmc or xor out enter nop rcrb dec (bad) cmp xchg lds mov jg lock lock pop je dec xor inc push pop push sub mov sub bswap nop pop shrb imul push sub jmp sub loopne sbbb add mov cmp test lcall mov ret jne popa (bad) jp sub xchg addr16 add add nop outsl or fsubrl sbb or repnz scas ret les imul jecxz add jne movsl test mov rorb push loopne xor pusha xor shrb or xchg and rorl outsl push (bad) mov pusha mov mov add mov inc jmp push jno insb push jmp loop adc ja inc xchg sbb test xchg xchg dec mov jle or add jg jl cmp lret push jecxz cli add xor fwait test pop or pop nop jbe std add sub sub sub inc ss pop inc xchg fild lods gs jmp mov popa xor pop mov push adc mov adc mov stos mov add stc add mov xchg sbb not (bad) or or sbbb push or in inc mov popf pop cmpl or mov sahf mov daa fisubr bound sub mov imul out out pop inc cwtl movb inc bound cmpsb pop mov sub ja mov into bound pop int3 lcall in xchg xchg xlat pushf sahf stos mov push mov push stc inc cmp inc mov sub int xlat mov and imul adc out ds out push sar adc out (bad) push mov push ret ja jb sub dec lret and mov dec les mov jmp xlat popf cld adc out push or andl lock (bad) rorl fstpt sbb cmp jae loop (bad) sbb fistl and add and test mov cmp push sub sti mov insb cs xorb and pop mov jbe (bad) sbb lock push hlt lcall sbb shrl ljmp cmp sbb and and or mov sbb pop popa imulb dec jbe sbb test push inc hlt arpl and enter out cwtl jbe mov jmp sub aad sarb push jno pop adc sub inc pop lret pop jne xchg pop push add fist pop xlat push test lds xchg add imul rol sti scas in inc dec std xchg mov jl pop xchg push push pop adc sbb or cmp and out (bad) push push sar mov xor inc push jne mov add pop bound mov inc subl pop mov (bad) xchg push mov add xchg mov mov jmp mov sub imul pop (bad) jns cmp pop arpl xor stos push pop out jne mov adc inc or sbb fbld aaa xor pop sbb jnp pusha das cmp ja fcmovb add dec cmp jmp cmp in cmpsl leave cmp call xor test pop int3 mov jb pop shrl cmpsl mov leave or ja fstl jne dec dec sti les enter sub mov (bad) jle lret adc push cmpsb add and push inc out pop inc dec dec or loope mov loope (bad) push inc cld outsb jg jmp add or in push insl andl sub dec test push inc push add push or icebp push or (bad) in leave cmp cmpl (bad) mov jl js (bad) dec ret lock inc lods lods or test mov stos insb lods cmpsl (bad) mov sbb pop mov lods in (bad) loop shlb mov call lods dec add fsubr adc push mov cmp xlat and xorl jo popa pop shl lahf or loopne cld sub sti int3 jbe xchg or movsb pop jmp mov add movsb add pop test push cltd cwtl insb clc pop or (bad) pop dec push repnz or push cmp adc lret das add xchg movsl pop mov push pop sbb mov das mov iret pop pop pop fs add or loope sbb cld sbb cld push fmull dec mov add jno and fstps clc das aam xor or jb insb (bad) mov out add movlps and pop pop push ja pop aad dec cmp jle out xchg pop sub sbb ja pushf leave divl dec in loope add push mov xor rcr sub xchg add pop (bad) cmp mov push out bound es pop leave adc push push or dec push cwtl push or jo dec add ficom xor mov fild jmp (bad) jmp inc inc inc out pop jmp jmp and push cmp insl pop dec push pop in push test cmc in in cltd rclb out add xchg mov sbb push fsub add pop and into bound mov notb pop hlt push and in jg xchg mov mov jl jg inc push jmp gs dec or xor mov jp dec test pop mov or jbe xchg xchg adc mov inc scas (bad) push repz xor push add add xor and sbb fs lcall jns mov (bad) jmp jns xchg xor inc cld dec xchg fs xor jecxz and sarl mov mov or aas loope jle xchg pop sbb loop jnp and outsl mov (bad) dec xchg int inc mov mov push fstps (bad) int das mov push fildl add push xor sub mov mov shrb mov push cmpsl in add pop xlat out dec pop adc mov pusha aad js mov pushf mov pop jmp hlt add jnp or lds xchg shl inc es push loope jbe xor jmp je loopne jb xchg lods js stc add insb cmpl push push cld jge hlt mov pop mov mov push xchg rorb add (bad) xor movsl xchg pop add push lahf mov or mov dec mov into in pushf xchg ljmp ja lret sbb shrl jae dec std scas and push cmp push push pop test push aaa adc jg ja out mov jnp mov push ljmp inc mov jae jge cmp dec stos fisttpll lods xchg push pop jb insb adc cmpsl lea cltd nop jo push hlt sarl leave inc jo push lods add andb push or into or push sub (bad) stc popa push push repz inc or pop and les sbb iret push mov sahf imul and popa orb lahf or fsubrs test nop adc and xorl nopl mov mov pop dec add jmp lds jnp jae sub xchg mov (bad) cli mov push or pop std imul push push sbb add jo xor xchg (bad) imul testb jmp dec aam stc iret test jo pop push nop das and xchg (bad) leave sub stos mov dec add into fdivrl mov or pop xchg push add mov dec sbb fnstcw or cmp push insb push add lret add stos xlat in movhps jne or inc xchg pop pop outsl push jo bound jne mov dec out push pop daa inc add arpl jmp cld (bad) enter ljmp mov inc shr push pop mov aaa subb popa jmp outsl push data16 sbb jne and add adcl stos (bad) in jmp incl gs or adc sbb sub pop gs jmp rcl sbb fsubrl fwait push xor or mov add addr16 cli nop xor jmp jbe out ljmp adc clc and or fistpll loope (bad) push adc addr16 sub (bad) jo addl xchg sub add insb and inc addb jle pop adc mov jb popf inc add daa aas pop fdivrs pop jmp or imul ficom mov loop comiss popf xchg adc (bad) (bad) jns jns mov lret outsb jnp in jmp jg outsl les cmc shlb push pop out pop les stos lods psrad adc pop xchg sbb push rcll test jbe bound pushf inc movsl sarb xchg icebp rcrl fisub and cmp cmp sub xchg add sbb xor leave pop gs mov xchg stos iret mov mov cs lret add push pop mov jp mov fadds sub add cld add inc mov push fdiv lds repnz flds xadd arpl inc lock add gs cmc push daa call ffree push mov in inc pop add lret jne cli xchg pop popf in xlat and adc jno pop pop mov repnz mov jmp shr pop in nop or add add inc sub adc jo mov jmp mov dec and movsb xchg pop mov push imul bswap jmp repz push or and sbb pop xchg sub int3 sbbl pusha jb xchg rorb push or sbb (bad) es mov push mov sub pop mov rol or mov adc adc leave add adc lea movl jl mov sub fildll jp push pop leave pop sub imul inc jge test dec in xor into cli ds movsl cli adcl mov mov and xor add insb gs ret loopne pop and adc cmp adc jl inc rorl (bad) xor repz push or (bad) lock sub stc test jnp cmp fwait jle cmpsb mov cmp cmp pop mov (bad) mov lea cmc lahf jmp scas pushf sti push nop push add push pop sub loope (bad) push sub mov test outsb subl jmp add das addr16 out xchg add das xor jg xor gs cmpsl pop daa inc arpl (bad) js (bad) mov gs ret or pop push inc jbe hlt lock mov cmp (bad) adc and test jae lds mov rol movsb std outsb sub dec in add add cmp push pop jle inc xchg lcall ret jl add and test cmc pop pop (bad) dec mov jmp push repz dec inc scas mov imul sub in xor dec mov jl shr cmp add mov sbb sbb lcall and jge popf in mov fildll jbe add movsb adc ret pop cwtl into push pop and sti push sbb push (bad) push push dec inc lock cmpsl lahf jns inc dec rorl or lds ss inc adc cld stc pop ds pop aas xchg or imulb lret loopne idiv push jno adcb push shll pop inc jg pop dec xlat or dec ds mov sub data16 mov or fisubr xchg test or pop mov push rolb pusha xchg push mov insl pop push sub inc jmp (bad) ds call jmp sbb rcrb and push inc lea jmp adc decl fisubr mov push sub dec mov out jbe,pn mov rcrl add addr16 out or jbe inc loop (bad) out sub push cli enter or mov jge jecxz pop sti mov xor aad sub push add sub rcl inc scas fldl push mov push cmp and push ror mov in hlt stos outsb mov sub push or jae fbld mov cmp iret jl dec (bad) rorb subl (bad) mov scas dec add test adcb adc imul pop push cmpsb inc dec lea mov inc add cs data16 aas adc add inc adc repz divb aad lods test jge jnp mov mov (bad) mov test outsb call add push pop es lahf jle and jle outsb in mov mov imul rcrb xor push lods pop ja negb into sub adc adc sub ss je xor mov test je mov ds cmovnp or inc loope cmp les mov jmp or inc div call sbb sbb pop add mov push dec andl adc and faddp in add ja (bad) jne lcall loopnew nop xchg or ljmp push dec jbe xor push and push test out dec mov bound gs out stos mov movl pop push bound fcompl mov stos mov or out ljmp enter push pop mov je pop pop jmp and push xchg jle push add into in lock mov sub decl cmp jl push dec loopne jmp pop push mov adc push jmp mov fsts fnsave imul sbb push cmpb push mov mov imul lret jmp incb cmp ljmp push hlt aaa pop sti add xor std cld adc loopne or push sub lsl and mov daa add xchg jnp shll nop (bad) xor int enter clc pop out jge sahf or pop aad sti mov movsb dec cmc iret dec lds mov lods xor mov outsb push jns movhps in (bad) xor repz push push xchg jns pop jmp notb aaa fidiv dec jne rorb jb sbb gs in mov push jp xchg xor popa test imul or xlat mov pop sbb push es clc shlb jmp lock ds into jle and mov jecxz pop setge ret push xchg sbb cmp pop pop pop out in scas xchg das xor xchg dec lds or xchg push and shl rolb jmp lret and xchg add je inc jecxz gs test add cmp xor sub sti xchg ret or fnstsw dec into push xor pop shl mov (bad) jge inc push das mov mov mov cmp orb lods xchg addl and popa dec ret (bad) push xrelease xor jp stc sub mov pop out insl sti ja xor push add xlat jge (bad) aam xchg cld test add (bad) ss pop mov push sahf mov or xor (bad) jmp in xlat push jb push mov cwtl gs (bad) (bad) mov push push add jecxz cld pop mov mov mov cmp jne xor js cmp or dec inc cltd add roll lods inc push out mov mov (bad) pop scas and movb pusha lea push sbb sub ss mov jbe (bad) push xor mov out sbb add and or cmpsl or push in cmpsl or test out fdivs dec or push call stos leave push dec add sub pop xor neg add leave jbe push (bad) push inc or (bad) cmp popf or movsl aad insb mov jne js sbb call loopne jge add dec jo mov jns es mov roll sbb mov jb ret xor and pop pop mov les jge imul loope xchg jp lret cli xchg stc in dec hlt xchg mov cli out inc adc pop or (bad) push fdivrp inc pop daa push ss (bad) and insb inc dec imul fisubr pop out cmpsb outsb xchg cld popf add or push jl jle add inc xchg enter les sub or cmp jge xor sub les jne mov insl insb das jg jo rclb cmpsl subb jb inc mov push push or jno js add mov push jp mov repz shlb out bound mov call das outsl pop adc and dec repnz shrl loope xor jae sub jne jmp push in jecxz rcl mov lcall rcl pop or add mov loopne nop dec movsl or inc insl out or pop push insb frstor sbb sub push add mov or sti aaa fimull and xor xor nop mov mov psubusw and fs lods or insl stos mov xlat push pop pop xchg cli sub jmp mov mov fnsave stos int3 xchg xor and add push mov fcoml rcrl movsb lahf ret int3 mulb mov popa sub xchg pop or mov in ds add jp shlb jmp pop jl cli aas mov leave push out push lahf jmp sti cmovle dec add cli mov out mov in pusha orb pop leave hlt jp inc or jb (bad) inc sbb (bad) and pop pop cmpsb into dec test push or dec add shl inc nop int3 push jne xchg imul push jbe jae js pop xor out xchg cld fimul popf push aam shrb pop or not pusha mov jae jp mov xchg and imul ds (bad) fistp pushf fstpl es pop mov add (bad) std or dec xor mov test or insb sub or dec push popa aas inc outsl inc stos in dec insl pop popa jno adc sbb inc pop push push mov jns icebp add xor fisubrl sbb cmpw or fwait imul jbe mov dec jae mov or pop dec add push pushf fs orl or aaa lahf (bad) out pop clc or pop aad xlat cld test repz sub test imul bndldx sub dec sti aas test add dec or (bad) subb or push sub stos sub mov in inc test (bad) push add add push pop repnz inc inc ja add lods mov dec repz or sbb jb mov jle sub mov (bad) ljmp popa daa sbb mov mov outsb mov or add add push jb mov or push in push pusha mov cmp jo and mov lahf jp and and jl cmp lods add das cmpsl out jno es adc jmp hlt ljmp adc jae pop inc rcrb ljmp and cmp sbb adc les push stos mov dec int rorb mov push mov call ret andl or imul add nop fimull xchg sbb inc repnz mov jp xor adc nop test (bad) push jmp addb push push pusha mov mov pop sub je cli mov fs mov popa jmp cs insb shrl sbb fs jns ja imul icebp jmp push les jmp jg xchg lahf mov sbb xlat and pop and lcall jnp aaa push xchg lock sahf xchg enter and or test adc ljmp inc dec inc stc adc add insl dec les sbb scas enter push xchg nop fs pop mov push daa mov lds sub dec movsb je je adc mov popf repz xchg pop mov gs pushl out pop push add pop jmp sub dec outsl jae and inc enter jmp add aad pusha cld mov cmp out pop es or push lret sbb stc add lods or repz mov cmpb pop jae inc test jo adc add out or and repz and test imul bound xor mov inc ret sub pop pusha js shr dec (bad) dec xlat jmp cli cmpsb sbb sti fild and or mov rorb icebp add mov fwait repnz adc dec flds sahf mov add aaa jg adc push bound pop sbb push add pop scas (bad) stc ret jne or cmc lock mov and fild push fisubr mov int3 loop jbe sub inc mov jnp pop in or mov jmp in sub cwtl and dec (bad) ja lea test pop push mov push pxor xchg iret push lea xor (bad) inc test mov sub pop adc cs add shlb xchg ljmp or (bad) and test or push pop or sahf and addb add js push ljmp pop sub pusha sbb mov movsl pop outsb mov int out dec cmc aad (bad) cmc cmp addl (bad) in (bad) lock xor or mov not mov add jno cmp pop push in dec pop mov sub xchg push pop jg mov js or loope insb and mov jnp mov mov xchg dec cmc fs xchg roll sub addr16 pop push mov inc cmp ja insl fdivrs aas js sub aaa fidiv outsb leave es movsb add pop data16 clc push add and dec xor cmp imul xchg mov and fs mov mov in inc and cmpb sub push cmpsb in pop ffreep js add jmp ljmp jmp (bad) test xor outsb jmp mov daa xor lcall inc add adc ss sub xor cmp pop pop lods stos mov lahf sahf aaa popf push (bad) mov jge jle pop ds mov cwtl xor insb inc das es pusha imul push fsubl pop push stc (bad) test cmovo xor or in sub xor push or fs test push rolb icebp pusha mov stos nop or popl xchg rorl or mov jmp loope sub push nop mov lahf fdivl test mov xor cmp dec mov push (bad) je push and cmp push dec clc xor sub adc xchg cli jle sbb orb ja xchg cmpsl pushf xor das cmc cld (bad) cmc cltd shrl int lahf push test outsl adc mov test inc fs and dec cs xchg pop push imul sbb js pop out mov in adc (bad) push mov stc xor icebp (bad) into add add jbe jp or mov in orb loope cwtl inc jne ljmp jge rorl mov shr dec orl mov add jg (bad) subb and sahf lahf push and (bad) notl xlat inc push inc (bad) and hlt in dec imul bound add insb xchg cvttps2pi sub popf add add aam dec int3 push test or push test cli adc jp sub icebp pop mov inc idiv jo jp adc jmp enter add lds fucomp adc lret sub add add push cld add jmp mov and psllw aad es pop push cs push dec xchg xchg adc mov cmp push mov orl and pop push mov or stc xchg sbb daa stos add test push jo cmp cltd mov mov mov xor rorb push lret pusha repnz mov push mov ds ret push int3 imul testl mov out pop add popf jne add sub lods jg and mov loop sti mov (bad) dec les inc ljmp inc xor or movsb mov push mov (bad) das popa jge subb jl adc js add test push int3 pop insl repnz jmp mov cmp ljmp ret xchg and cmp or test imul outsl movsl dec push clc arpl aas ja stos pop mov sub cmc mov adc aam loope aas out mov pop (bad) je push mov dec iret pop xor mov jo xor aaa xor push jp jecxz adc jne push push add insl outsb mov cld lret add sbb ss dec ljmp dec cmp subl xchg (bad) xorl mov adc movsl bound xlat inc mov pop shr jne int inc and les add cmp lret or jl jp hlt (bad) mov mov shr lahf push and popa sahf ljmp xchg jnp,pn cmpsb movsb push add push es mov add pop aad pop xor sub and inc add jp add and and xor js idivl sub jge std jp jge lods pop cmp cli jns inc imul movsl std outsl and pop mov repz sbb push loopne pop loope clc je cli sub mov cmp pop and push loopne lods jns push cs xchg mov inc adc das dec pop dec dec loopne jb cmp pop loope and jo imul mov and pushf rorb inc je xchg test push mov out pop addl jb and je,pn in push das and push cmp or mov stc lds dec jne in pop lahf pusha mov or loope or mov dec jmp out xor push jg std push (bad) mov rcll pop add leave inc xchg push jg xchg cs (bad) jmp jge or fstps fistp dec mov jae call jne (bad) push out cmpsb hlt cld dec or hlt lea pop jno loope fs icebp or add mov mov jbe fdivp inc cmpl mov pop lds sahf cmp sti add testb adc in movsb repnz in inc pusha fsubrp inc and repz mov dec loope push imul outsl or int3 jmp or loope xchg lahf data16 push add push mov pop xchg mov sti xchg loop (bad) push jo jmp cli stos push (bad) mov loopne mov jmp pop add jmp pop mov nop neg sbb mov or das imul das in inc popa xchg into jo or roll pop push icebp lods jbe add into xlat loope out repz lcall cli lock push sub sbb push arpl add sub loop add iret (bad) fidivl sbb sub pop sbb xchg nop mov xchg icebp negb neg mov hlt cmc or fwait popf fs nop pop sbb lods sbb cmp (bad) fistpl inc dec es scas rorb aam cmp jg clc and scas ja cmp sbb add pop les mov inc movsb arpl ja repnz push push mov add int3 cmp sub hlt pushf and pop loope test out fs dec pop out xchg dec sti stc in pusha fdivrs inc sub call lods cs xchg sbb icebp test aad mov bound lds cmp mov into mov scas (bad) in mov movsl daa (bad) fsubrl push mov fcom cmp mov clc pop or icebp cmp incl mov mov cmpb jns inc push out or xchg mov loop push sbb jne and call sbb pushf add jmp lock gs dec add (bad) fdivr xchg sub sahf xor and sub div push push pushl xlat push shl inc test inc aad stos lret stos pop adc dec lret or xchg (bad) cmp and push dec inc add xor or stos inc les xor jns lret das (bad) in cmc inc push sub mov fdivp out xor pop insl popf and cmpl or jl js test out jmp in stos add inc bound xor test daa add dec and fadd cmp mov mov mov test push cmp es mov mov mov push xchg bound mov insl push push push inc popf pop add neg sub popf rcrb xor adc jecxz add lcall lahf sahf push mov push push lock dec daa lret or xchg add das cmp cmpsl jg test imul jmp pop dec in sub adc popa jmp (bad) sahf lcall xor shrl xchg push scas or or push push add rcl dec lret or add pop lds jp cli into rcrb and jmp xchg stos aad mov subl jmp lods (bad) and inc add movsl or cs lea out push xchg add nop jnp into xor sbb xorl flds imul inc in cmp les jecxz xchg scas or push add push out sub out repz jmp or adc std or add cli shll mov xchg imul hlt repnz mov scas push movb xor mov pop pop data16 imul and xor jmp xor push (bad) aaa lods cli test push pop inc push (bad) push jmp xlat jg int loop push (bad) lock test lret fcoms leave jecxz mov or sub or pop pop and lea ja mov outsb jo lahf mov jmp add idivb ret andl xor mov add cltd push aas xchg ss and leave and jl or cmp fcompl test xchg mov cmp jl cmpsl les arpl mov in loop xlat jns xor push adc sahf pop daa jp pop mov push cld je jmp sbb push lods stos sub jg inc sahf int sub loopne push nop sarl dec jo adc (bad) add mov jns shufps sbb notl pusha stos pop ja scas aad ret inc adc and inc pop pop cmp into sub roll add or mov hlt xor pop jle or or mov mov pop add pop shl add xchg jmp repnz or jo xor sti jne xor cmpsb movsb or mov cmp pushf or ja push or or lahf test js adc cmc cli scas add add sub or add or dec or pop adc cmp and xor fnstenv dec (bad) push and sub mov call in lret frstor out shll inc mov (bad) jmp cmp inc and (bad) pop push lods ds jae lret andl test sti (bad) and (bad) je rolb xor ret pop xchg lret gs sub inc push mov inc inc les xorb std push and jg enter xor daa iret inc fldcw mov push sub cmp push je jg or inc iret pushf out sbb mov imul mov sar (bad) jmp test outsb inc and mov jmp push loope sti lahf xchg dec push push jmp sbb cmc popa adc out xor mov adc or inc lcall inc pop vzeroupper cmp repnz pop andl mov mov (bad) xor pop and adc mov mov jp in xchg and cltd mov adc cmp or jmp dec das xor xchg adc adc cmc enter in pop jo jg and dec add mov cltd data16 jmp pop imul mov out shr dec mov cmp nop jo in pop xchg call repnz push or out pop and xchg mov sbb and fidivr or push leave (bad) and and inc fist ret add dec push flds dec and aam fldenv rorl pop scas bound jp or jmp fidiv clc outsb lds push pop fwait mov dec lea adc jns xor add and mov pop pop push add jge das loopne pushw inc lods sbb and cmp fidivr mov pop push mov cmp out mov cltd inc xlat imul in pop ds xchg addr16 push and ss (bad) and fidiv fiadd in push push xor xor daa mov lret fstpl loopne into xchg jge out mov fmul add lcall ds loop shr pusha ds adc dec cmp adc push pop ret pusha ljmp or neg add cmp push add sub sub test dec aam bound and jp pop xor add or jb or icebp das imul ljmp mov pop stos cmpsl xor pop scas dec test shrb fs push stos mov addr16 push loope adc out sbb mov xor and scas rorb out sete mov pop mov cli lods pop push in std inc jg inc sbbb jns dec mov jl pop xor addl xchg pop add rcrl fwait dec inc adc dec mov xor inc aad orl push inc lcall inc test inc xchg sub mov ja sbb pop or ret (bad) hlt mov or stos es clc hlt test sub sti outsl dec xchg icebp call pop idiv push jge or adc loopne jmp jns cmc xor xcrypt-ctr cmpsl pop adc dec sub xor scas jmp lods rorl push fnop nop imul (bad) lret push sbb jmp cmpsb imul cmp pop dec mov pop jne mov or shll push dec pop (bad) imul insb sbb mov cmpsl sbb cmp sbbb daa mull mov jl and adc movsl or dec sbb loope jo xchg mov or xor xor (bad) in clc or or pop fmull test ret das and dec scas fstpl mov rclb pop add mov pop xor pop rol jmp mov lcall andb adc std mov std cmp jmp and pop cmpsl and jmp mov std xchg mov mov not add loopne push pop dec dec mov loopne popa push ret and push push shrb pop pop fdivrs jmp push adcl (bad) adc daa xor dec hlt push dec or rcrb and pop xchg sub pushf scas xchg xchg jns jb jge push dec jecxz adc mov push push pop scas inc cmp out aam sbb imul pushw dec lcall xor add aad test les cmp mov sahf push inc mov test lret or add jae lcall es int mov xchg jmp ja inc (bad) shr stos bound jne loopne loope nop mov mov (bad) repz (bad) addr16 rcrb sub nop shr mov movsb scas jecxz ror lea adc gs or jp lods out or loop cld add scas sbb add pop add inc sbb dec outsb adc mov lcall and and scas and sbb jne pop or push icebp add or mov mov test mov test popa lea pop fisttpl pop stc int3 jge push pop lahf aam cmp lds js pop mov fisttpl mov (bad) or lahf lahf int3 mov sub push push push rdpmc out dec pop jle test aam rorl loopne jbe clc mov arpl cmp or inc mov mov inc es pop add int test faddl fist in inc dec pop bound cmc mov jge inc jmp cmc push and pusha push and roll out push xor cld mov stos mov xchg arpl jo adcl aad xchg mov and pop rolb sahf xor or xor pusha outsl aas xchg cmp push adc imul cmpsb dec push push mov jmp shrb dec hlt cltd mov fs inc imul pop add jnp lea cmp outsl add aas push cmp out call and push imul popa pop pusha testb gs (bad) push mov inc pop jb xchg mov mov or dec push jno and inc popa jmp lcall dec pop sti sub mov xchg jge lahf pop xchg pop inc xchg jbe or push jg or xor leave out mov dec pop push adc and mov outsl pusha pop xlat push push dec and sbb mov sub rol xor repnz dec loop jmp push sub (bad) mov cli xor xlat pop sahf add add aad sahf outsb fidivl jne dec lret sub adc aam mov fidiv xor lret pop cli push or daa dec (bad) sub out dec add inc pop jmp mov xor dec sub loop movsl mov push or test sbb or xor (bad) enter sub pop loopne,pn pop popf pop adc enter (bad) aaa or and inc ja sahf push cmp jmp push sbb add arpl and cli add test fiaddl dec cmp test cmp lret cmpsb pop stos ljmp aad adc pop jae or shlb sbb js (bad) gs lret flds (bad) add cld jge dec fsts cmp add loope stos out stos pop leave testb lock adc pop iret aad xor dec adc sbb mov clc mov add daa std or cmpsl or fucomi daa xlat enter push push inc outsl add repnz and adc cli repz push adc or or push fmuls outsl push ljmp call into cmpb or andb stos ret cmpsb ret lds push or push jbe inc imul xchg and and add ja int3 xchg xlat loop ret popa push mov aaa dec in test mov jg into mov jmp pop (bad) cld cmp and pop (bad) enter mov mov push jl xchg inc pop push push fistl push fwait loope push xchg movsb and push dec pop dec arpl dec xor xchg subl push add xchg addr16 ret mulb push sbb jmp cmp xor iret mov cmp out add scas sub add jmp andl dec sub das ljmp or cmp je sub mov inc push mov loopne,pt or xorl shrl stos test repz mov xor jmp jns movsb pushf sbb pop (bad) in dec loop adc jmp mov (bad) stc sub inc (bad) dec pop in (bad) test add mov push pop push dec stos adc std cwtl (bad) aam test dec icebp pop jnp and pop or dec es jo (bad) or jo dec pop mov xchg aaa outsb lret mov mov adc or add mov roll xchg sarl mov in sti or mov dec adc ds sbb fnstsw or push dec mov jmp mov and sub (bad) add lock mov loop jg push sub xor sbb rolb imul mov inc out nop mov pop ss adc lret aaa sbb repz lods jge sbb jp push push (bad) or sbb std push mov pop cmpsl sbb push add sub push xor push sbb sbbl out out or inc mov or (bad) (bad) push repnz push stos cltd fnstsw lods push mov shlb mov push push ds ds jmp add jne cld loop sbb push push add psubsb cmp pop (bad) negb xchg rorb (bad) pop int3 (bad) add xorl mov mov xchg push jge punpckhwd loop shrb cs xchg mov mov pop loop jbe sbb pop mov in (bad) xchg lods jo mov or mov sub aam iret xchg mov movsb or imul and push dec mov lahf sbb imul in push adc rcrl pop xchg push shrl test idivl cmc mov jae pop inc push mov adc mov xorb cmp mov js or in add pop xchg in ja lds push mov cmp out add popa and mov push inc add loope ror enter popa cmp pop pushl cmp dec std inc test jb jmp jmp int3 adc sub pop addb xor mov aas or rcrb dec dec jge mov insb and push mov push mov lahf fiaddl sub or (bad) ss sub lods dec (bad) notb push movsl pop jbe push push pop (bad) mov xchg test jmp push add repz xchg cli or xchg pop data16 (bad) das xchg fisttpl mov jne rclb or push sub jmp and sti lods mov std test pop dec sub sub and mov and loopne sbb pop sbb ljmp xor or or mov lret (bad) push mov mov stos pop pop js sub aaa addr16 mov idiv push jnp jmp movsl cli loopne mov add jmp cmp ds add mov xchg in repnz cli jne mov aaa pusha je popa push add sub adc add nop mov pop ret push sub adc pop flds push mov push mov insb jmp rolb (bad) cmp sub mov js pop movsl mov lock data16 dec pop or mov dec cmp mov pop cs jnp movsb dec testl or jmp pop sub dec inc mov into inc stos mov sbb sub outsl lods and xchg pop xchg xchg pop mov (bad) fsubs fldt inc pop hlt (bad) push push mov cmpsb inc sbb mov pop outsb cwtl lds xlat cmp lret orl or jmp pop dec cmp add xor xchg jecxz stos fsub lods mov les (bad) rcll mov (bad) dec in sub mov add push mov daa adc fidiv (bad) pop pushw rorl mov push mov jmp loope orl imul or fcoms mov inc push push cmp movsb push faddl pusha inc out popf rcrb or aas test std loopne sti xor jp lds add cmp mov mov out pop mov clc mov and adc mov or aam enter mov pop cmp ficomp mov jmp pop popa push xor inc ljmp mov fcoml mov push dec push ljmp (bad) adc (bad) lods adc imull or mov mov pop xlat pop mov mov dec leave dec push les cmpl mov xor inc std mov sub push jmp popa popf (bad) daa xchg add ror cmc sar sbb daa cmp or jp sub and (bad) jbe cli add es movsl daa pusha outsl mov mov xor inc pop scas leave mov scas add or pop dec mov xchg repz stos cmc mov pop dec jns cmpsl push lds fmull mov aaa leave pop insb enter in jmp lret jle push data16 and lods pop lock test and fisttpll jae cmc xor popl add add or pusha add or xchg cli (bad) mov dec das js xor dec leave jns jbe pop lret fnop call imul inc adc inc mov loopne dec ret adc test jmp icebp mov or jo ja icebp mov fild add call call xor cmpl nop add stc divl jae sahf je leave pop cltd pop test lcall adc mov es cmp add pop aam pusha mov jmp and into (bad) into adc push add push or mov clc pop sub loope add push mov fwait inc call pop push add movsb jp cmp insb sahf enter loope pop pusha (bad) lret and pop rcr sbb cltd out js mov sbb inc push add clc popa pop push sti loope add add lock mulb push dec (bad) in ret ficomp test sbb adc test inc fmull ficomp pop repz cmc stos mov daa xor push leave or insb in pop mov adc rorb jo ljmp lods mov imul pop es push push cmpsb stos add data16 pop loopne mov sbb outsb sbb jg les xchg (bad) pop es fcmovne mov jmp in xor mov xchg sub jge dec jae adc inc or xchg dec andl inc mov adcb mov sahf daa push leave mov icebp cltd mov ds enter push sbb xsavec inc pushf pusha xchg lahf lret pop cmp xchg clc jge fimul pop loop imul lds jmp xor orl cwtl int mov or inc sub lods scas add pop sbb push jae add in je pushf and popf jae loop pop or dec inc or cmc adc or fnop int3 jmp ficoml cltd add mov lahf sub (bad) add scas fmuls jmp stos sub popf aam add jge push dec jmp xchg negl pushf popf divb pop jmp dec mov push repnz pop mov push or or mov jb adc lods mov lock icebp mov cmp push arpl push mov push mov inc std sbb movsl mov xchg cwtl imul mov (bad) cmc push jno push cmp xlat mov sbb mov jnp mov je adc sbb mov adc pop mov shrb adc jge ja into sbb push sahf xor incl dec popa aas fwait add push mov jno sbb stc inc in dec xchg je addr16 add pop pop pusha (bad) mov mov shr mov cmpl jl loop or xor sahf jp cmp mov add mov dec push sub loope int mov mov add add and inc ljmp add xchg pop gs jnp add ja sti arpl (bad) sti loop add add xor fldl orl xchg sub sub dec mov cmp fsubs es cmpsl cld scas (bad) sar mov adc rorl jne jmp das sub cld loope push mov mov push mov adc (bad) mov jno push movmskps stos int mov or xlat add add das aaa xchg xchg adc mov aaa mov jl inc cmpsb and jmp sarl pop addr16 push ja push cli dec mov jnp mov or call mov sub add insl sti pop xor jle jg xchg adc lock shrd mov popf and mov inc mov inc call jno push mov and pop pusha sti jne test mov icebp push sub icebp pop hlt dec sbb inc icebp movsb aas mov push out push test loopne scas fstpl add dec test popf cmpsl xchg jno xor sbb ds or jb xor loopne into push cmp adc shrl ss enter jl pop and push repnz push mov rorb sbb jmp sub lods jbe mov repz aam pop mov or adc or inc fbld add mov jl xor xchg rcl lcall pop push pop pop push movsl push divl inc cmp fsts adc dec pop jne pop pop clc (bad) and lahf inc loopne lock icebp dec scas insl pop pusha test das xchg pop sbb mov sub or mov sub push push or push xchg inc fiadd mov xchg js imulb sbb mov stos pop cmp or push and xor pop push loope dec jge jns push aam les sbbb test cmc rcl idivl push mov or sahf inc mov mov push dec xor mov in repz jns (bad) xor jg sub inc or (bad) loop sub pushf lret dec arpl pop ljmp or sahf push pusha sub (bad) sbb test mov mov out nop pop pop lds pop sub add xor clc jae dec loopne sub lahf push mov sub fidivr pop jo rcr adc test mov push (bad) inc out pop in repnz jae and cld jb cmp push add sahf int3 sub test fs add push jae icebp mov std push testl cs xor or adc push (bad) (bad) push jmp test mov (bad) and enter adc cmp dec das popa and lcall ret push jb adc ret fidiv lods push dec call cmp mov push mov (bad) mov inc mov fisub out ss mov nop dec adc or lds test fwait or test jp pop mov pop inc pop ret movsl cld jno cmp mov mov jge sarb and inc adc addr16 (bad) and sahf dec lods popa nop pop dec or pop (bad) xor cmp insb ljmp gs add pop out sub ret push cwtl sub or fdivs or or rorl int3 push imul (bad) pop pop push push testl inc lret jmp sar arpl cmp outsb push sbb out push aad jl fnstsw sbb jae xor dec (bad) bound or or pop sbb adc adc xor cld push movsl mov stos add int lcall enter fnop mov jnp add loope push sub jmp sbb pusha and add js daa fdivs push push out or out push add pop push xchg inc addb jmp imull cmp add int cmp or add adc adc xor dec push pushf xor dec (bad) stos int3 inc add out add jmp sub mov inc call push jo sub mov out jbe mov push pop ficompl jecxz pop add outsl add mov std ficompl movb xor cmp jge xor jecxz xchg sub and push xor add xorl std push gs hlt imulb sbb jp test push ret fwait xor add mov adc fstpl inc mov mov sub pop jmp xorb aad orl movsb or xchg push add das out pop aaa mov mov test xchg adc sahf mov mov add mov add bound xchg aam repz xchg test je insl pop ret int jnp ja pop outsb jle jmp mov inc or lahf push cmp jecxz outsl adc add pop push out jb sub and push dec shl leave stos add (bad) cmp push ror les in jmp jmp (bad) adc mov push adc (bad) jne cld jnp subb mov clc les data16 jb and adc sub adcb dec dec (bad) dec add push xchg or cld adc lock pop mov xchg clc push dec push cmpsb dec adc popa iret push push jo out add (bad) push xchg sub clc inc or rolb push adc pop or xchg mov jg data16 ret cmpsl jnp imul pop sub sub repnz mov and mov enter (bad) cld orb xor jno repz xor clc scas mov and jno jb mov dec jns dec mov mov (bad) (bad) xor fmul add or fild mov pop xchg pop or rolb sbb xor fidivrl jnp xlat insb mov xchg mov jae gs cmp (bad) pop cli rol cmc sub xchg jns sbb pop hlt xchg and scas pop fs cmp pop incb jae push xchg mov mov out dec addpd inc clc mov imul pop sti cmp adc inc xchg sbb (bad) mov lods xor push xchg ret cli mov mulps and and jge cld adc popf push or add sarb js xchg incl jb fcomp (bad) lret (bad) push dec sub push push jo add xchg push mov jecxz sbb push mov push aad dec outsb mov jmp mov movl aad aaa xchg arpl sbb push jae jl int3 fldt loop push leave decb add insb repz xor aas es xor fisub or (bad) add sbb fisubrl repz and mov mov stos inc pop movsl sub push lidtl push daa std sbb and adc and fs jns mov js cmpsl outsb js call or inc pop push dec ret inc sbb sub shr scas aaa mov cmpb mov sub mov xchg push cmpsl push ljmp mov test es cmc rorb adc jmp clc pop xchg fdiv rorl push mov inc repnz fstl mov (bad) sahf jmp adc cli leave adc pop cmp mov inc cwtl inc add mov or hlt lret add inc mov xor notl test cmp rcrb mov fs mov adc mov pop and lret jb mov sbb add sub add mov test cltd adc out andb (bad) pop fst pop lock pop sub jno iret loop adc push bnd mov add mov and jg adc das xorb shl inc sti dec sbb push in inc cmp je pop sbb decb mull cmp or push add pop cmp (bad) fstps xchg testb push in jb stc in xlat subb stos adc push das popf (bad) mov cmp xor mov jb and hlt add dec ret bound lcall push push shrb push popf int dec cld (bad) lods arpl or push addb pop pop sub mov mov (bad) out fbld cli xchg mov push xchg add jle aaa popa cmpb popa push sti jle inc and xor add insl outsl inc push ret push int mov jecxz mov jg fs pop mov cmpsl adc fstp pusha lret sub cmp lret pop sbb dec jge and or fsubl lret dec push inc jo jns fnstcw lds fxtract shlb sub and loope sub in add add ret add cmp push lahf les ficompl mov pop jno push mov mov call insl and dec inc mov add push mov pop ss imul or (bad) shll cmp sub dec dec sub add fisubr sbb push addb pop dec aas in jmp lock aaa xor outsb adc inc pop pop jecxz mov daa jle add sbb mov add push pop popf repnz push ret daa or lock lcall push add push cwtl imul sub mov xor icebp jg aas ret pop hlt push add rorl fwait dec test xchg fistp repz and pop scas mov insb pop cmp mov cmpl jecxz leave sub cs mov push pusha pop cli push lock lret imul sbb mov daa jge imul lcall test push xor sti xchg out mov popa subl xlat push push pop push shrb sub dec jmp mov sbb aam test pop sub jne and jae cmp xor test in dec mov lds sub pop push sbb mov enter push bound sbb nop lret mov mov sub pop or inc or lea cmc mov add sbb push mov pop xchg les adc add into pushf sub lahf je loop and sti mov sub (bad) or ror mov jmp push xor xor aas push add int icebp push inc push pop gs enter lock shrb push mov sub popf add pop es pop hlt inc leave or mov adc jae sbb or shr in int3 aas sub pop and push mov add push push mov test adc movsb call fcompl shl jo mov daa jns call push push sub adc mov push int add popf fdivrs arpl je fs mov daa es sti mov adc outsl push mov mov out je inc icebp ds (bad) adc jne mov jmp push push push xor pop mov jl (bad) jle inc or xchg cmp pop and ja xchg pusha sub jl jp shl pop test inc mov mov aas mov addl dec dec xor inc shr shl ret call pushf xchg pop sub out xchg pop mov xchg and imulb cmpsl (bad) dec in cmpsl pop adc jae lock xchg (bad) icebp popf aas lods in outsl les and dec sarl jb mov dec push cmp xlat dec xor std mov fisubr sub clc (bad) xor sub inc inc mov xchg (bad) cld out mov dec std icebp movsb scas shlb xchg incl jle jns mov sub jmp jecxz fs cmc pushf loopne mov daa sbb xor sti les pop xchg sahf (bad) xchg test add pushf or inc mov sub iret inc loope int sub imul dec sbb aad cmpsl das in (bad) aas xor fildl mov sub shl mov cs mov mov repnz fmul icebp adc sahf aad xchg cltd daa pop cmp sub and pop icebp shl cmp sar mov lds clc fdivl adc or jmp add dec adc cmp inc mov pop push mov out fcomps lcall mov sub xchg add imul sub ret das lcall lahf xlat (bad) mov cmp gs nop dec (bad) in jge inc js mov xor inc rclb push aaa leave and mov add lock pushf and rorb push add xchg adc div sub enter subl pandn aam into jae push popf roll cwtl push data16 mov dec sbb push xchg movsb inc or dec (bad) aaa fwait rorl sub jno sub xchg out mov into adc mov mov and sub sbb jo cmp aas add adc pop ret jmp or or or or cmpsb mov sahf mov inc inc sub imul ja in adc mov (bad) dec jl jbe or dec pop shl mov and cmc mov jo xchg push xor push push sti imul push not sub in mov cld inc pop ret loop clc mov pop cmp icebp mov sti scas test out add adc or xor xor cmp or gs out xor and mov mov jbe (bad) scas xor pop icebp jmp jno cmpsb mov and xchg pop pop pop not sub xor ret or add cs shrb popa dec jno,pt xchg dec sbb xchg pop sub pop jmp (bad) js inc cmc mov pop rcrb mov or add adc push add jmp pop xchg rcl ljmp in xchg pusha jl fild add stos mov push inc jo pushw inc out push mov das repz xchg dec decb pop push ljmp imul inc adc or sbb fsts xchg adc scas mov dec leave sub cmpl mov out xlat xchg mov lods (bad) testb outsl xchg adc mov insl mov jecxz mov xchg mov (bad) hlt mov mov jbe sub hlt dec cmpsl push ret je (bad) mov add iret inc or mov inc pop adc pop add xor jmp stos (bad) dec nop fiadd sbb fstl push push mov mov pusha pop mov lcall adc in mov jle xchg mov pop adc cmpsb iret adc call xchg fsubl insl cmovge xor stc mov mov sar fisttpll sbb sub xor icebp ja cmp mov pop push push mov call add or and pop xlat and fstl in jl imul stos jge xor push jmp cmc adc inc pop mov das movsb or pop pop testl jp mov mov jg nop ret rolb inc dec call lcall sub repz in mov imul cmpsb fxch popl adc or aam fildll push push (bad) add jbe push scas add xor lds stos add (bad) xor dec jp daa add xchg cmp jne fiaddl or out lea (bad) jmp out sub and int (bad) push or dec and (bad) call adc and loopne fwait sbb and jo jne sub data16 xor push mov push les pushf push shr add jmp sahf sub jns gs aam rolb sub add pop movsl icebp stc add jp (bad) mov mov pop dec aaa xor leave daa stc call jo pop rorb inc and pushf adc movsb (bad) or mov subl std iret inc ds aaa arpl jmp and testl repz orl xchg mov out adc fiadd mov inc fnstenv and sti push pop push mov jne dec std xor jmp mov in sub xchg adc sub scas xor cs out jno aad or jmp xlat jns inc imul push rcll adc push xor and pop dec mov pushf or pop add sbb mov cs push push or rclb xor cmp cmp test pop xchg mov jge cmpsl std push sbb jmp notl (bad) sbb inc mov js jae or stos dec out xor fildll cmpsl or cli cmp std sar push sbb jno jge dec sub mov cwtl in or hlt les loopne stos or xchg add (bad) setg push push testl push add sbb or int jae divb fchs pop adc test sbbb dec dec es cmp mov or and stos es wbinvd popf les inc and pop push imul mov push mov (bad) cmc or sub mov dec push jmp push push ffree mov test ljmp push push cltd addr16 mov adc jo mov shl pop sub inc add lea pop sub in sub or sub addl jge (bad) adc loope pop mov pop add adc mov ret add or sbb pop and dec loopne sub inc rcll test test ret mov lcall pop aas in add cli lods and xorl mov in push mov (bad) jbe xchg std add pop lcall pop fiadd call inc and adc fsts mov mov lods mov mov and incb mov loopne cld pop and jmp mov xor add outsl outsb jmp cld or cli ja stos stos cmp out pop or xor pop sub and test push int sub jge int3 or adc repnz mov xchg ja mov arpl repnz pop fbld xchg or add sub mov xor mov rolb dec loope mov dec int adc push jge dec sbb (bad) cld xchg gs sbb ret lds adc mov jae imul push xor (bad) in dec pusha loope add pop pusha movsl mov jae,pt push loopne or sub add push gs lret inc test lock jo cmp push mov pop lds lcall into xchg lock lds dec (bad) and mov mov lds sbb clc mov or jae sbb dec inc mov xchg mov cld inc xchg and inc sub xor add ficomp testb iret add int inc mul ljmp in jl dec xchg xchg mov jns movsb mov arpl rcrb cmpsl faddl cmp jl cmp std adc inc fisttpll fstps call daa movsl pusha pop push xchg push scas xchg ret mov (bad) jmp mov out or cltd dec nop jle add xorb add jecxz arpl mov mov sbb jne insl mov sbb or adc xchg push cwtl xchg fs leave jmp dec inc out jge and xorl inc pop pop pop mov mov icebp mov pusha jbe pop cmp jle push push imul enter sbb scas push jne pop mov or adc pop mov fsubr insb and sbb mov mov (bad) xor fsubp cli adc mov dec jl sti jns (bad) inc es fcmovnbe adc jmp inc jne addb pop and out fcmovnu xchg or add fdivs daa or adc push je adc or lret pop cwtl push je sahf sub out or icebp add push mov jmp gs mov pop out mov fist out sti jne push push scas mov ja lret popf fldt or lcall (bad) dec or outsb jge repnz jmp outsl add idivl incb jp mov lods sbb push push push inc nop in jmp pusha into sbb adc pop das pop aam es fcmovbe je push mov mov push pop push hlt cs iret jmp jo push jl add and test mov push and ja dec (bad) int3 sub jno pop mov sbb test push dec or (bad) mov outsl or shr add cltd jg and insl jmp out aas lret xor mov movsl or pop pop pop mov movb mull mov jp or xchg scas jmp jae jmp mov andl loop add xor or xlat adc mov clc jne daa roll or (bad) es dec or test push (bad) rclb aaa fs or cmp es xchg dec xor cmpsb insl fucom imul push push lea or lods cmp adc imul loopne push inc mov add cs mov jb lods push push cmpsl jnp pop push dec mov pop scas shl jb,pt or data16 scas fist aad sub (bad) push ss inc push sub stc pop mov call test bound or or stc stos fld1 cmp fimull add mov loopne xor and or aas insb add push cmpsb xorl mov repz push std subl loop cli mov jge pusha pushf (bad) push movsl fildl mov inc dec pop dec fstps je (bad) das in mov mov jecxz sub and mov icebp mov (bad) push std pop and lret xchg rcrb xlat pushf stos xchg jg repnz and mov pop in imul jg or add scas and jne pop adc xor pop test jmp andb movsb adc adc xchg fcoml jp mov loopne pushf cmpsb inc push (bad) fcmove adc jno les clc nop adc js,pt lds mov (bad) cmp dec cmc jl xrelease cmp into pop mov (bad) sub es or dec scas aam adc imul lret or popf pop mov xchg (bad) xchg jg daa inc or push in push mov clc mov scas dec jb and pop out (bad) xor imul das xchg or test or dec push loop,pt rorb (bad) dec and mov dec lret insb leave adc or inc sub push mov add xlat cmp mov dec into movsb cld add mov ret and lods testl or stos mov push pusha fs jbe add fsts fimull pop push add jmp cmc push std and add xchg or lock bound push or decb leave jmp (bad) dec and or (bad) and (bad) cmpsl push jecxz push push mov lahf dec (bad) repnz jns pop push jbe fdivl inc sahf sti subb mov mov pop daa lcall cmc sar jae pop cli or add leave jo imul xor insl dec mov fwait jnp lahf jo or mov fwait push aas mov push lsl xor pop jae testb repz gs arpl sub push add sbb inc dec scas clc sbb push adc movsl mov mov cs add enter out xor dec mov aad push adc or jle inc mov and cmp cs sub lea (bad) push mov test pop cmp and fidivl sti mov mov lret pop add (bad) cmp inc dec pop pushl insb (bad) aaa pop das pop out cmp jo jl dec and mov mov fs mov stos sbb sub sbb fnstenv or stc cmp lcall test mov lret std push loope nop add adc out xor jp jb pop dec dec cmpl rclb or jp ret shl jmp mov dec inc icebp add loop (bad) sarb shr clc xor add or dec push enter or xor lahf rorb sub lds jle lret and scas nop loopne jno add xor mov jmp das cmp lret push jecxz add cmp arpl sub movsb orb ja or sub push dec test mov les int3 pop jmp cwtl call push jnp (bad) popa sbb add (bad) adc and pop jbe sarl inc daa (bad) fisubl sub (bad) nop xlat sbb jae (bad) inc cltd cmc pop sbb or adc sti inc pop psubsw add dec (bad) daa pop dec call das clc mov add push pop and add inc fisubl xchg in mov leave enter jmp mov adc aas adc fimul (bad) popf arpl outsb mov mov and aad jge push xchg hlt rorb lea out out je jo iret pop pop ror push push mov ds xchg dec imul ja (bad) shll std adc (bad) icebp cmpsb or push xchg outsb cmpl test scas ja xchg adc clc xorl xor push lods mov in mov sahf inc insb and and test in jbe dec sbb inc in add test push leave push fnstcw mov push mov icebp jmp mov test mov add fs and cli push rol outsb or repnz add sub xchg or xor cwtl int3 or stc add push pop clc popa fisttp mov cs lcall mov pop xorl mov cmc ret sub push adc sbb ss sbb shll add (bad) pop stos push test cltd xchg iret scas clc (bad) adc or aam xor jle ret lock xor pop mov (bad) xchg lahf jns add int3 incb or push xor pop pop sar mov add enter insl push pop and xor addr16 fistl repnz mov add cmpsb pop add cs xor ds adc out and rcll push push fsubrs add push aam (bad) push out nop lahf imul lds sbb (bad) jge,pn cmp out popf movsb das in ret popf add rol arpl or shrl add fcoms lock sub jne into inc jmp pop inc insb test mov loope mov pusha xor dec push shrl adc in xor pop xchg adcl fnsave mov add (bad) mov jmp neg shl loopne push jecxz pop jne lahf repnz cmc fs shl lods popf and hlt mov dec (bad) add mov jge and adc xchg leave in pop pop cmp xor dec (bad) jge data16 in outsl ljmp jge jl push adc mov add adc inc mov (bad) cli pop push gs push inc pop inc add testl lcall dec mov outsb sbb cmp rcll shll lret pop stos int3 jns add in mov jmp enter dec fildl sbb jmp adc jle xchg loope adc outsl movsl popf inc lds movsb xor mov adc push aas in pop sub inc dec shl sub ss or out mov dec scas add push mov stc xor mov mov jmp dec xchg fnsave or sti pop insb addb cwtl insl js xchg in sub push lret es jmp ja adc sub adc fadds aad pop sbb (bad) xchg sbb sub jae sbb andl leave cli push inc push and mov mov jle inc inc xlat cmp adc xchg or sub xor incl push sar loop sarl lea xchg jl jne daa mov or pop int3 outsb pop data16 xor movsb shll mov cmp push arpl (bad) mov sub pop pop and push add pusha or movlps sub dec push lcall repz inc push mov inc adc loop sahf mov pop pusha outsl imul mov sbb xor in inc out push pop sbb bound cmp pushf cmpsb and nop test daa mov add dec add shl lret sub mov xchg mov mov and add sbb jge pop lds dec les add repnz xor out arpl or cmp pop mov xor mov add (bad) loope roll add imul pop push mov xor mov (bad) stos daa add out sub push or xor or mov pop inc jl mov add mov call push or jp dec in add cld push cmp hlt dec (bad) xchg incb add xor xor jecxz out loopne xchg sbb inc sub repz pop push fidiv add pop mov rcr and add sub jmp into cli test scas jecxz xchg sti sub sub fidivrl push xor aad lock into add add rolb lret aad jmp jge xchg test cmp jp popf jle sub jno sub dec scas cmp jmp outsl fdivl std add mov push cmp fldl mov jmp arpl in or add sbb enter addb insl add in mov push adc iret and enter add inc stos jg in xchg call mov jnp pop push jle push pop leave push jb out mov fs sub adc inc lds call dec setnp or jo sarl sub out add (bad) mov pop dec xchg adc pop test adc fisttp xlat into push repz imul or lock test adc pop call js mov je jae js int3 (bad) cld mov sub pop and sbb pop jbe pusha mov inc xor cli pushf add sbb mov pop in mov dec popa rorl es les repz xor or xchg sbb xchg sub sub pop mov jo jbe clc ret pop jmp dec adc cld push adc push (bad) adc adc jmp cmc or add aad fdivrl cmp mov dec pusha sbb add inc add ds pop xorl xchg fldl dec leave fidiv ljmp add loope mov dec mov mov inc sub pop push lods fs movsl bound mov fisubrl jno out adc mov fwait pop ret pop xor fisttpll hlt scas jo sbb or (bad) in push (bad) stc or sbb bswap jns push leave inc mov sub push shl or repnz inc push into ret jmp jne mov inc out pop add pop dec sbb inc push scas sbb shlb pop pop push (bad) jb and cmpsb cltd and add xchg ds mov clc loope push scas lea ret or les in mov push jmp cmpsb mov imul dec mov push or in add mov jno xor neg sub cmp stc lds imulb mov (bad) ja pop leave xor sub pop inc insb or jmp lock (bad) xor lcall roll xchg mov xchg test pop icebp add je sub push loop jbe sub lcall xchg or jns cli add mov jle lock and adc jge jbe xor pop (bad) or push popa mov sarl mov pop gs dec push clc xchg push and bound jg pushf adc ret je out add push mov dec mov xor (bad) mov inc or inc add jle (bad) aam mov mov imul pop pop js cwtl xchg mov into mov (bad) or paddsw pop add (bad) push sub jg lahf lods cltd sahf xchg dec pop clc pop add xchg movsl les mov and sub rcl shrb jmp add inc cld bound sbb call es dec lcall (bad) aad jge or push adc jo cmpb mov xchg addb lret pop iret dec inc mov cmp jnp ret in test ret sub orl dec jmp es cltd jl repz daa outsb xchg ret addr16 add push push movsl push push les mov imul adc pop mov inc inc leave mov call les jmp or out add idivl (bad) hlt fbld dec inc lods insb les adc lcall mov frstor pop fldcw push xor (bad) pop cmovs and push dec mov jecxz and into push outsb mov mov dec pop mov cltd push into lahf (bad) ljmp test or sbb push iret adc jmp ret push dec mov pop inc stos push addr16 enter enter or push mov or jo sbb cmp (bad) fldl2t mov ljmp sub mov jb add ja sub inc dec xor push xor mov add push or push push mov pop cmp movsb stc ds fbld cmp add and push xor loopne pop sub push pop sub mov inc sub adcb inc pusha fldenv repz into xor xor push mov pop test loopne (bad) mov ss (bad) cld adc mov push std or enter mov push pop mov xlat lods out addl adc and push pop incb mov mov jae add cmpsl loop sub xchg and pop in jno adc jo js add addr16 dec sbb (bad) ficomp sub fsubs (bad) jp push mov ret data16 es (bad) xor add lea lret out dec pop sti sub or inc push mov xchg jo jg mov cmp push fimul cmc pushf push xchg inc bnd orb cs cli push mov mov xor and jle add mov icebp fisttp mov paddw scas (bad) fs call xor and sub cli add mov iret das frstor cltd fidivrl pop add ret mov jb push push pusha loop xchg cwtl xor ljmp sbb cmp or fisubr stc neg in mull ret mov jbe icebp pusha cmp mov jns cld lret push jle inc jmp mov clc adc mov jmp call push push arpl lret sub mov sub int3 (bad) shl (bad) sub push jno inc loope sahf adc mov mov outsl in and add adc and in lock mov imul aad ss xchg adc cli cmp mov sbb pop pop lds test mov out clc leave out jmp ret dec and jmp (bad) sbb out movsb xor cmpsl jp xor xchg sarb add add dec cmp add shl or push push jb pop xchg rcl ficompl rorb (bad) push cwtl lds out sbb sub clc push call cld jne mov clc cltd mov mov dec out cmp inc cmp pop or xchg push cld std mov cmpsb mov mov daa shr xchg bound push xchg sub loope inc xor and adc mov enter mov ret ja inc mov sub pop push jno cmp cwtl push pop cmp pop in xchg add or out xchg ret add incb inc int sbb dec fwait mov lock adc mov in cld dec xor scas sub pop shrb dec push mov pop les and or inc repnz adc lods cwtl blsic lock xchg add loop les pop xor push call inc std jg mov jg or lods jae mov or and pop jne mov lods mov (bad) movsb mov sbb pushf aas adc pop mov push pop cli bound mov add jg xor lods repz icebp sbb (bad) fidivrl dec and xchg add or insl jmp repz cmp xor push stos test mov test test push jne jmp add fist adc iret adc mov push pop xchg jp dec lret out xor jmp mov mov cld leave lret into test add mov inc rorl sub sub sub mov sub jg shl cmp xor (bad) mov dec cmp inc xchg mov adc rolb (bad) fsubr or mov addr16 xchg loopne dec xchg pop adc adc sahf and mov (bad) or sub (bad) ret jge mov push ret xchg pop cltd inc shrl int3 shrl jg sbb repnz mov and sub ret mov push jl xor scas in cmpsl push call mov pushf loop,pt pop negl (bad) call lock out adc sub out dec (bad) in and push cmp sub add out dec std loopne out inc jmp movaps pop push mov xchg push pop (bad) pop into mov mov int3 loop jnp jl xchg inc inc lods mov add not sbb jbe je cld push add fldl xor test iret push xchg xchg ljmp xchg pop out insl lds xor add push mov jle std lea push push (bad) jns jnp dec movsb loope adc or stos out inc jg nop aam (bad) scas mov test add movsb add outsb inc sbb and sub jns jle push mov clc test mov ret or jl add dec add dec add jl cmp xor lds sub fnsave out or jge adc out push loope pop loop rolb xchg pop ret cli jne subb test mov cs js xchg sti sub mov sbb ss jno fs lock cltd jg jne add push inc cmp repz sar xor orl push out mov cmp push jmp aad loope add mov mov insb out jno add (bad) gs stos movsb mov adc in bound pop rcrl in pop cli dec push push jae jg pop ds ret jge orb out lahf in enter pop mov cld mov cwtl aaa xor roll pop std cld sub cs and es adc add cmp xor cmp (bad) and sub sbb add push pop adc dec sbb xchg loope into out xor jmp popa lret cmp mov mov into ds dec pop mov neg test xchg cmp mov or adc jge push mov cmp add cmc sahf push or iret test ljmp daa xchg jbe xchg inc jae and (bad) pop test jp lahf divb scas jge or sbb cmp mov add dec push inc roll out push mov daa xor or or ficomp sub and les push dec stos push mov int cs repz lret dec xchg mov bound push pop mov push rorb out and or jmp ficoml add dec push xchg push add dec jmp sahf or ds xor and add neg add pop dec jb jg dec repnz mov pop es adc iret (bad) adc push mov icebp icebp pusha jns inc add add push test nop jp ss adcl push mov sub push mov mov jo pop jmp push sbb js insl test mov int dec inc xchg ss mov push jecxz jns xchg jno push std rcrl mov add lods and loopne xor fistl xchg or nop popf cwtl nop pop loopne inc sub int3 into icebp add cmp and and sub loop les cli enter fmull daa or inc rol inc dec fldcw lock push jl push out dec in xchg ds mov mov jb ret dec push xlat jo mov lret sub cmp mov pushf push cmp (bad) push testb and stc mov mov (bad) cmp or iret scas jmp aad push imul mov nop adc cmp push add enter cwtl or mov sbb adc sbb das movsb xor in mov add and xor fidiv sarb mov mov sbb test push lock dec pop and arpl push xchg mov cli pop enter jl mov inc push mov push mov add rol ja std aam test stc dec cmp dec imul xchg addr16 mov xchg mov repz pop dec leave inc mov mov pop stos inc mov cmpsl pop les mov or imul es pop fs xor pop scas testb inc jnp fld cmpsb ds adc push pop nop push add fisttp aad xor das mov movsl cmpsb out push xchg sub pop push jmp mov popl inc pop dec cmp inc push mov mov inc sbb (bad) enter out xchg sbb das notb mov leave sbb pusha out inc aas and popa xor and dec mov stos push mov mov push sub cmp fisttp xchg xlat dec mov adc loopne (bad) testl xor mov add push mov mov pop mov aas nop cli push dec cmp popa dec shrb arpl ja sarb fdivl scas fsts lcall xchg push mov and ja outsl cltd bound sahf inc and sub pop sbb stos mov adc xor lods outsl loopne and fdivs pop out incb repnz and dec sub cli ds std sbb out inc pop push ret lock and fnstcw and out pop push fisttp xchg or inc and and sub jmp cmp cltd test in pop rcl cmc push cmp sub mov jle or push test mov les loop imul insb pop mov jns in sbb scas fwait test (bad) stc mov (bad) dec cmpsb ja (bad) mov cmpsl enter add xor fistpl pop neg decl sub aam add xor cs je jl pop push mov and bound sub aaa jnp enter adc or push fisubl stos or imul enter sub stos adc fldl pop (bad) pop not (bad) pop std xchg in or mov fwait mov test jle push nop xchg bound inc pop mov inc js add mov pusha xchg jmp rclb das pop mov rcl lds push fstpl es push rcrl dec or and test arpl orb mov xor push jmp dec jmp or outsb lods push adc inc cmpsl sub fisttpl jle rorb int3 mov mov or jno mov inc sub dec ds pushf addl rorl xor push out das ljmp popl stos dec sub xchg or icebp out in and jecxz stos mov rcr pop xchg gs ljmp jbe rcr jno test pop in xor inc ss sbb jmp pusha cmp insl cld jo rol mov xchg ja test push nop cmpsl in sbb inc xor or sbb adc jae xchg cmp pop mov adc lods push mov aad or push ljmp jl add clc fcoml sbb mov outsb pop or mov outsb rorb lods dec cmp daa add cmp ds add or and loop je cli add mov jnp pusha and jmp sub pop aad or je pop repnz jns ret add lcall jb adc or in xchg out icebp add cmpsb or push sbb inc xor jo faddl sub jne cwtl in xchg add push push loopne cmp flds (bad) fldcw fisubr in push fild iret jmp sub andl add ficompl scas cmpsl gs in mov sub ds cwtl inc inc sub dec mov je sub push sub jmp dec lret mov mov dec push or dec sbb xchg (bad) in mov mov jno xchg mov sbb mov or cmp loope add or mov imul mov inc inc stc cmp stos inc addr16 fs adc popa sbb call arpl jo inc invd mov shll xor les sub mov mov or insb and bnd arpl or xor jno popa add mov mov mov nop inc sub (bad) jns xor and xchg cwtl mov and flds mov insl andb push inc adcb mov icebp xchg int3 jno or dec bound scas (bad) mov and and xor mov in and mov add sbb add or mov xchg data16 or adc sub sub and sbb inc mov adc in add add adc mov add jmp out xor mov xorps push ja test or adc faddl sbb enter stos repnz les cmp xor popa rcrl int fs add jnp jno add cmpsl aam sbb cltd adc inc and add inc push pusha dec mov mov add mov orl add adc scas mov cmpsb js into mov mov xchg sti push hlt sub movsb addl sbb xor dec dec addr16 inc add sub lahf xor imul dec push add mov add push or add inc inc loope (bad) ss insl jo push ret or mov roll call dec pop and jb clc (bad) call sub and or imul add les pushf push cmp std add mov push mov std (bad) cmp stos imul js push cmpsb or jp xchg jle repnz xchg inc sub and out daa lock pop pop clc jge les cmpsl jg mov loop sti sbb out lock or and or adc loopne js cmp dec jns add fist xor xchg lock cli push sbb xor or inc and jge or xlat mov stc out out mov adc ds mov inc insb fdivl sbb outsl push rorl mov sub in repnz sbb test sbb push stos push dec push push cmp imul push dec (bad) into dec scas lret mov (bad) ljmp ljmp js and push inc or jno push mov push roll or jg inc (bad) xchg rclb adc mov push jns test (bad) clc and pop data16 add jg push mov cwtl pop (bad) jl clc xor neg mov ret xor pop aaa cmp or xchg rorl push mov clc arpl pop mov aam xor call fdivr roll addl adc or mov push adc mov lcall adc and sub pop or push mov lahf or cmovp pop rcl jge add or fnstcw out and xlat pop push ljmp inc or mov push loopne,pn jne adc dec xor sub popf add shr jno ds iret xlat jl lret jp xchg fld push mov pop pop sub xor pop push xchg dec shl push pusha test and imul push js or or jmp cmp xchg xchg mov and pop iret jg sub mov jl das pop jl sub pushf ds cmp push lods push das popa push loopne pop add ds add inc int3 add pop xor je sbb (bad) test push push fs dec or je or lods loop dec mov mov push adc and adc cmp and cli pop push cmp mov fisttp je jmp jnp or pop push stos cmp das (bad) insl aam mov dec xchg pop cwtl das in stc xlat orb jg shrb not add adc pop scas repz rorb roll dec hlt popa xchg dec into dec jns and sub dec xor cmp pop pop dec addb shrb cmp fnstcw push pop pop pushl sub xchg xchg sarl sbb sub and or std inc sarl mov push pop push mov aam or adc cmpsl xchg scas sbb lds out pop mov cmp xchg mov jp jno out rolb push push pop mov adc ljmp pop mov aas pop cmp dec xor ljmp dec xchg pop ret arpl push or jmp hlt jg adc push add shufps in pop lret adc push in adc lcall push inc xchg dec pop fcmovbe mov cltd dec punpcklwd pop mov adc ljmp xchg sub pop add adc sahf cld sarb add sarb or loope adc insb fild fcmovu orb pop arpl mov add movaps sub and sub xor lock call test add fildl or push aaa and inc hlt iret adc pusha mov enter mov xchg push movsl shrb shr repz push (bad) jo or inc dec cmpsl inc (bad) int gs cmp ret mov aas xor int rolb jp and clc jne fucomip push outsb lea push popl cld lock xchg nop nop pop sbb imul add or aas neg jne (bad) mov push orl sbb sbb dec xor test sbb mov xor das arpl push fcomps push inc sub sbb jo test repz stos pop and dec mov arpl adc sbb sbb ret ds push int cmp pop mov cmc push jmp imul pop mov in insl or push stc mov and nop push test jmp (bad) mov loope outsl bound jp push stc test icebp jne cs lret jb jl jnp out inc addr16 cmp addr16 mov imul cli jbe push lret rcll and or mov jge ds test nop mov adc imulb xlat rol push addb or pop cltd pop ror lahf push pop mov dec push push sub xor push adc sub mov adcl cwtl adc pop inc es outsb or jne (bad) push lret push sub and das (bad) daa mov call lss fsubrl ret pop test cmc push into sbb out add pop jmp adc inc insb adc nop loope pop cmp pop mov leave xor push lahf pop or push jp ljmp pushl adc mov xchg adc test repz loope sub and push pop xorb hlt and (bad) mov mov rol lret pop dec ljmp cmp sbb iret rcrb add ret and xlat fdivs add push out leave (bad) cmc add (bad) inc insb enter popf push xor loopne jb cld or mov ss pusha xor (bad) mov inc jae mov adc dec pop (bad) cmp prefetcht0 lahf pop sub ss jmp fsubs insb xchg push xchg (bad) mov add imul add or mov mov sub dec sbb pop cmp mov dec std and and test add or jnp jp jmp or xchg jg mov sbb or (bad) add and fisubrl jne sub sahf adc scas add push jmp loopne mov adc cltd sbb rcrb add pop push or mov adc and fcmovb ljmp jb jl add push leave push jno sub xor ds jmp in in sbb jno and daa ljmp in xor or jle and js xor fist push lahf dec call mov not shl xor in aad pop mov xlat xor or pop pop cmp aad cltd jo push jns push and add (bad) imul or sbb pop and dec sub push je and cwtl mov cwtl lret cmp and pusha scas mov daa hlt xlat inc andb sub jl inc or je mov test push dec mov and rclb cmp push sub push das adc ret inc clc cmp push pusha (bad) icebp or and jg je inc xchg fistl cmp cmpsl add jbe jnp push or jmp fsubs jo add out jmp jle or cmp repnz xchg les sub bound mov cmp dec lret arpl jle out movsl sub sahf rolb push xchg mov mov mov xchg xor mov jb pop imul sub sub or fsts bound inc ret test stc je push lock mov push and aam call out xor mov push fstl inc mov inc aaa ds fisttpl mov push mov out addb incb inc in push jmp inc sub addl or jmp sbb pop sbb jmp sbbl shr in push sahf shlb mov dec (bad) sbb (bad) pop enter leave add mov mov add xchg adc or rcrl mov push cmp andb jmp (bad) mov add sub xor adc add loope inc xchg sbb in sbb pop add out nop mov jecxz nop lret and dec pop mov or mov pop cwtd or or push push pop xorl cld add iret (bad) and pop lahf add sub icebp sub loope sub sub sub push popf fmull sub mov push add cwtl bound adc lods or adc add aaa xchg xchg jmp imul or mov data16 dec adc sub stos add (bad) pusha jns xchg mov scas xor sub xorb or dec test dec sub test adc xor leave push sbb jnp inc test mov das lret cmp xlat loopne and ds sbb jnp nop adc pop outsb xor dec mov jnp js xor add aaa push push add add push pop pop stos rcrl pushf and push nop loopne in (bad) sbb push in cmpb dec in shrl xor dec dec ja push xor xchg mov and xchg push and sub (bad) je push mov mov int adc pop ljmp adc les ljmp cli jae popa sub sbb or inc xor ret pop pop push push jmp arpl gs jp aaa sub insl mov jo outsl or add pop icebp cmc stc movsb sub push ljmp pop push mov or loope mov adc roll hlt and add or int3 inc mov scas fs sbbl pop add fwait test nop pop mov ss stos xchg mov mov xchg cmp add push rorl je data16 jno jmp movsl mov and cmp sbb xlat jb push jns pop xchg aam sub test nop lret or (bad) sub add sbb or push scas or stos nop lods pusha push pop sub popa gs and xchg jnp jmp aas mov sub jmp lret out lahf fbstp push mov (bad) ret jmp loop add imul dec xor inc movsl out lock mov mov inc dec rorl sahf mov adc jbe cwtl inc ss jl das mov hlt mov dec mov jnp xor add add divl xchg mov jmp jg testb clc cmpsl repnz adc mov add aaa jmp outsl inc pop pop imul enter mov push popl adc cld in mov es mov jecxz,pt xor jno rcrl roll bound mov leave add clc add lret (bad) lea xor je call in (bad) rolb or out jl push test shll jle aas lcall les pushl sbb fisttp inc or pop mov xor popf fcoms into add dec popa ljmp or ds push mov pop loop dec stos leave mov imul sti push fnsave cmp inc iret push daa sarl (bad) repnz popf xor stos imul mov add jl add lods (bad) xchg push inc jo negl jl lret hlt rol in test dec jle cmc pusha pop mov xor scas pop mov dec push xor dec dec inc loopne xor and clc stc aam cs pop hlt push mov mov jecxz jmp pop adc cmp jmp push jl dec int sub popf rdtsc loop daa repnz clc sub adc add or pusha lret movsl sbb pop add add jp or inc scas mov sbb ljmp mov loope fildl (bad) or and or push and addr16 push add xchg add sub pop das mov jmp adc and pusha pushf bndldx add fldenv lea or stos enter xchg xor pop jecxz or mov hlt push imul mov add int push pop pushf dec sbb pop push imul push jmp (bad) lock or add es push mov sub nop jl mov mov push mov pop rorl out jle jns pop es and mov sahf dec sbb cmpsl das xchg and and hlt jmp adc sub xor cli sub test stos clc xlat mov sbb jo call sar insb push add dec push jg mov dec sub add dec clc (bad) and in sub mov add push mov and cmp jmp fistl xchg push bound jno les fs and push jmp or jnp je add bound rclb adc ds sti add mov sbb pusha push dec adc xchg xchg jp cld or or xchg iret les push adc add idivb popa sub mov xchg mov adc enter xor xchg and jmp in insl jge sbb mull push sti add mov add xor or repnz or mov notl and sub sbbl mov incb push push out xchg jle push popf jge insl int and add jnp xor cmp lds loopne push mov sbb out outsl int3 loopne pusha stos xor xchg push add or pop push lods push das push lcall cmp inc mov push cmp pop jbe test pop adc in addr16 out xchg push or mov lods fs adc ret adc imul repz (bad) in and or pop inc inc sbb test sub adcl into jne jle,pt ja push mov mov mov addb dec insb inc ds stos xchg or test add jae bound sub jle inc sti jp out push push pop ret lcall push ja stc jb ja mov jno adc into ret inc push sub push and testb adc pushf pop mov nop push fidiv ss or jmp popa pop pop xor sub push ja bound in jl jmp sbbl movsl jge or add mov add jbe pop xchg lock or lds or cmpsb mov xor in lods pushf push push pusha fcomip mov jmp inc mov shlb sbb mov mov movsl push pop cmp cltd jle add and aad add adcb push cwtl add jo movaps fdivrl pop ret mov mov std xor or sub cltd cmp (bad) xor push lds sub loope or mov inc leave test xor fiaddl or mov inc pop dec sbb divb hlt add insl sub sahf fistpll pusha nop mov add push jmp lods stos andl pop insl adc push (bad) sbb cmp mov or pop push inc mov add test push push mov pop inc orps pusha pop ficom in jle test and inc (bad) push mov (bad) or add imul bound out pop pop xchg or repz orb (bad) jmp andl icebp inc or lds mov inc sbb mov add ficom int fs notb (bad) leave pop mov fs (bad) pop and shr xchg mov inc fiaddl lds or insl lods das movsl jne dec push lock lock call jp push es dec pop rorb inc notl cli mov fdivr pop sbb test mov fs mov dec leave (bad) js nop pushf pop adc add adc inc ss (bad) js and lea sub cli and xor or add pop fsubrs scas sub mov fldl sub and imul and or insb dec jns push call imul fcoml dec and mov jns inc push int into clc les sbb das andl pusha int3 pop dec sub mov push mov adc jb sub idivl or loopne daa pop pop (bad) or sbb cwtl adc add adc dec pushf pop push pop sbb shr (bad) arpl sarb faddp push lds subl enter dec neg orl xor pop rolb mov add shr call push mov sub adc pop pop push popf xchg in out lret jmp jb xchg (bad) xchg dec lock js clc or xchg dec push push xor xchg push xor or jmp or add add arpl lret pop imul sub out and std popa jmp adc cmp push adc mov aas aam int push loop or cld inc ss les jge dec sub sub jl or fnop push push jl repz add adc sbb bound and ret (bad) clc push ss mov jmp and dec test es sub pop std pop repnz xchg lahf sbb cmpsl adc sbb push mov cmp outsl dec imul push add lcall inc pop and jl pop std dec mov adc cmpsl cld mov lret aaa sbbl xchg sub fidivr push jns,pn movb lock xor sub (bad) push jbe (bad) lock cmp xchg fwait mov dec dec xor jecxz (bad) shr stos ds addb sub cmp jae imul jge leave mov pop sub repnz les fidivr repnz and add jecxz loopne sub mov addb add pop push mov popf pop pop or ficompl mov jle pop and push js or push mov xorl mov addb ds test push sub mov nop rcll add call xchg clc rcr pop pop push out hlt rorb int das loopne cld mov sarl loope sbb f2xm1 adc add stos pop aam shr rcl add inc inc or ret pop popf (bad) lret ret pop dec imul sub pop mov test pop and cmp mov icebp out jecxz ljmp and addl repnz cmp not mov mov mov jecxz jl fs das aam dec push shr push mov xor mov push sbb and (bad) dec cld pop or popa scas sbb gs lds mov jmp bound fnstsw inc (bad) xchg pop and stos sub neg gs and xlat mov dec ret js ret mov lods xchg inc or xor and xor popf enter mov inc in push stos mov (bad) and mov adc dec xchg (bad) mov mov jb add bound adc xlat pusha (bad) sbb xor xchg (bad) jae xchg jo dec adc jnp mov push pop sub push pop cmp cmp repnz clc lods mov ss xchg mull daa sbb je push cli pop add jo lret jmp loopne jp popf icebp ja adc lods fsubs scas lock out movsl sbb add push pop ror in int imul push dec movsb popf sbb ret sbb mov leave stos pop repnz out sub push xlat lock bound pop xor mov push imul mov and push lret sbb adc test or in pop inc pop addr16 mov xchg add divl pop cmp xchg call psubusw subb add (bad) daa inc adc cld push das mov or mov dec pusha add fstpt sahf addb jnp mov xor push jg mov in sub dec mov stos fadd imul dec cmpsb cs pop mov sbb pop les out add popf (bad) std sbb mov fiadd imul pop dec incb lcall data16 cwtl popa add jo add sub xchg adc dec and je jo adc inc mov xor lahf flds jle aad jo xchg fstpl ljmp adc sbb into pushaw or mov pop inc nop cmc pop cmp add adcb hlt inc push rclb sub rorb lods sub xor cltd push nop pop mov or add mov out fstl jmp jp or (bad) pusha lods mov lahf push add push fbld test adc jmp js and scas push dec pop inc add mov subl mov pop pop incb mov and into xchg inc es lods lea xchg fs xchg pop adc dec push add stos push insb dec cwtl mov jae jmp es jge and or mov (bad) jno (bad) ja or out in inc imul mov iret mov out push pop inc mov gs rorl xchg aas rcrb mov pop pop sub push pop push loopne inc jmp push sar data16 cmp xor mov mov scas adc sbb add pop outsb insb test imul cmp dec mov jmp cmc lock inc add daa not ja std ss pop cmp in scas stos sbb inc mov mov xor dec mov mov in xchg pusha stc int fisttp push pop jbe jmp push mov pushf inc dec xchg test cmp addr16 (bad) lock inc pop lret pop jmp dec cmpl aam (bad) sbb xor and sub insl jbe loopne clc jmp (bad) nop push and scas xor shrl sub jno pop and inc pop loopne sub jl mov jbe,pn ds push enter sbb ljmp cmp pop pop adc jmp or adc push mov ret addb jmp dec push cmp add pop jmp xor cmp call pop shr inc add ljmp jecxz,pn sub add xor mov jno dec loope dec fldenv add gs mov in inc dec aam dec mov and sub add mov xchg lret or adc mov dec sub shlb cmp fstl mov adc cmpsl mov push sbb shr popf add push push mov sub jo mov mov push push mov cwtl cltd sub add sbbb dec jne mov lahf nop enter inc sbb inc xor adc shr lods insl dec mov movsb cmp xchg btc mov test aas pop cmpl cmc jnp xchg add and add push push push pusha cwtl addr16 popa shrl dec cli push push push push xchg pop push fimul or rorl jmp push roll pop movhlps (bad) dec push mov imull idivb popf enter or pusha les xor fld add xor jmp add inc xchg aad add mov sub (bad) ret stos dec xor sbb aad mov scas add or mov (bad) jno add mov pop cli sub jmp ja dec rorl add fstp pop (bad) in mov std jecxz stos pop incl ret jno xchg adc inc and inc lret out xchg stos cmp das int3 rcll push sbb jnp ja inc mov out adc scas jp aas add push xor push adcl call sbb inc xor push pop pop xchg insb cmpl mov jmp leave add adc ljmp popa mov xchg xor adc jmp imul push cmp movsl fisttp lods mov test fs sub mov (bad) pop pop jno jmp repz cmp mov mov mov imulb and lock push mov mov jno jmp inc rclb and fwait test adc add fistl xchg sub xchg inc outsl add jmp gs outsb hlt and dec popa rolb sub xchg or pop mov jp dec add mov orb push data16 (bad) jae push in stos add dec jo loop sub rcl in and bnd out or imul jmp sbbl adc into nop jno pop pusha jge push jmp mov mov pop in fs (bad) cs add arpl (bad) inc jl das mov ss add (bad) ljmp fidivrl pushl mov mov xchg not out sbb mov mov fnsave mov mov in or xor add inc sbb inc add pop cmp push cmp pop int3 into cmp jmp stos daa sub mov and aaa cmp popf in loopne dec push jo lret inc jp jle (bad) cmp jmp imul inc cltd and js pop test xor add and dec pop mov xlat mov add loopne nop sub xor cmc sti pop pop mov inc and call leave or icebp sub mov mov dec push xor dec cli or adc mov sub xlat lcall jg,pn aad das or fstpl push sub jg jge hlt fldt xor ds sbb push in hlt dec pop cld stos mov cmp xchg dec (bad) pusha add mov cltd jmp push repnz stc and pop xchg jbe pusha jne inc rorl dec aad stos mov dec mov gs fistp frstor mov jnp bound lds ljmp orl mov adc pop ljmp inc out repnz mov pop pop xor jmp dec (bad) adc cld iret movsl xor push or sbb fnstsw shrb push xchg dec ja add dec sahf lods sti add inc add imul pop orl pop jae das xchg mov cld inc add jmp pop insb or xchg mov jne rolb cs addr16 cld dec sub adc out ja inc (bad) cmp ljmp mov jecxz repz mov add sub pop mov xchg ds rolb mov lods pop es stos inc dec mov cli xchg push or loope push lds cmpl sbb test bound es popa cmc les add mov mov shr not pusha lcall je es inc or add std sub das inc adc add sub cmpsl aas enter sbb cmp jmp mov adc das (bad) cmpsb mov xor mov cld add outsb mov jge or jbe pop xchg pop lret pop insb repnz mov xor push stos inc push jmp jecxz dec leave add jae pop daa nop cld sub adc pop sbb subb push jne mov push lods cmp popa pop push push lods mov jns xor add bound lret mov push ljmp daa inc movaps sub jmp jae aas mov fisttpll mov push daa jmp in mov add test lret push add inc ljmp lea and mov int iret and imul inc aaa in jmp xchg and fsubrs pusha pop push mov fidiv adc xchg pop pop (bad) push loopne bound je add jo fbld jmp jb fwait mov mov clc icebp leave lock jp pop cmp stc inc or repz out pop add into rclb push mov pop and jnp jg inc mov es or hlt push push push out repnz push cs dec cld xchg xor je rcrb push jmp mov jl dec es std or loope sub push push and or cli jecxz jmp add cld push test (bad) bound jg sbb je push and xchg and push push mov (bad) dec pop cmpsb sbb xchg adc insb arpl rolb ret inc and repz (bad) stc xchg addl mov xchg (bad) ljmp and push push pop in insb jmp mov stos mov and xor fnstsw xor bound inc dec in test jo jl pop push pop mov dec mov data16 sti je fucom negb sbb rorl jmp push adc lods push iret outsl pusha outsl (bad) insb jecxz dec push xor mov loopne jge sub ret idivb lds push inc adc xlat xor fwait jmp xchg pop (bad) imul sar add rorl add adcl xchg add xor sub push mov (bad) xor rol rdpmc pop dec or test adc or adc mov sub sbb mov rcll sbb jnp and nop add adc lret add pop call jecxz adc and jg add add jbe inc fisttpl bound bound loope enter lods insl mov das jmp shl pop jp dec pop stc pushf add sbb push orl mov das lahf add out or aas xchg and in out fwait sub outsb jmp xor mov dec cld xchg xchg scas fnstsw add jl adc (bad) or ds daa push sbb shrl ret in pop jmp pop int (bad) push gs call aam or xor out fbstp dec (bad) mov xlat std push pop dec in dec xchg cmp add sbb in fwait cli adc int mov ja add push addr16 sbb push xchg stc (bad) dec test divps and dec inc xchg pusha jg mov loope (bad) cmp pop das mov fwait jae dec sub je pop data16 sub rolb adc repnz sti dec out inc testl jge pop nop mov dec rcrl xor stos adc test popf sbb lcall imul mov xor ffree mov push adc pop xor mov push fwait popa xchg mov roll add mov jne xchg mov pushf pop mov notb aad and xchg dec add jo and mov imul and gs sub xor push inc int3 sub fistl mov mov repz push cltd jns inc movsl xchg add pop push add dec adc imul xchg addl pusha add (bad) adc cmp aas mov loopne adcl pop jp sbb jmp shll add loopne aas fdivrl mov emms and popf dec sbb mov xor es sub jmp add ljmp arpl or add fldl lds jge call inc push ja sub aam push xor inc dec cmp std sbb pop xchg or mov xor inc mov sbb inc pop and jo xor xchg sub int gs xor insb inc dec xor push pop mov cli mov or cmp cli leave push addb push push pusha sbb mov cltd and adc mov mov push fstpl pop aaa or adc mov das ficom pop jmp fidivr pop ja rorl jae sub push pop inc dec xchg dec push pop mov rorl test cs push shr (bad) xor dec in mov jmp ret jae daa icebp xor sub push sub mov xor jno imul shlb add xchg jne or cld fildl push mov mov push jae lret je incl mov sbb pop add test lods stos add (bad) push lret pop push daa inc (bad) loop inc pop mov adcb jmp subl sbb adc adc not xor xchg or jne test in xor idiv jmp in ret or mov js push cmc pop scas aaa sub dec les inc jae hlt mov pop jmp dec pop les sbb mov loopne or gs das mov inc pop das daa adcl inc sub fisub (bad) or push cmp outsb cli flds inc sub ja cmp pop mov sbb pusha cmp push pop mov xchg (bad) adc fsubrl xlat inc jg addl jmp andl sub or pop jge js aas inc push push mov pop push push fiadd rcrl nop sub scas insb lret or (bad) push mov dec adc jmp mov pop push add sbb xchg cmp les out jb and nop fmull incl dec std int3 add incl sub sub scas in movsl and cmpsl xorl ljmp dec xor test add or out adc lahf imul xor (bad) test or pop mov push push mov mov jbe popa push or rcll rcl jecxz das minps (bad) stos div adc ret repnz adc addr16 outsl mov jle cmc jo mov lret bound aam (bad) xchg rolb cmc xchg add mov iret ljmp jbe scas js comiss ror pusha insb mov xor in flds roll enter loope xor or or pop (bad) outsl inc repnz push sub dec jecxz sub pop mov mov fnstenv dec push nop or fisttpll ljmp jl mov inc shrl out push cmp mov mov and sti pusha mov push jmp sub mov dec lock adcl mov mov ja push (bad) pop push push pop cmc ret scas roll push cmp xchg aad dec and aaa int dec fbld jmp mov lret pop push sbb out sbb enter lret push xchg xchg das xchg pop (bad) pusha push dec xchg xchg lcall loope xchg (bad) popa jmp test ds stos sarb push pop mov push ljmp (bad) adc addl and sub in add aam or add mov mov loopne rclb pop std xchg repnz inc sub in adc popa cmp lcall rclb loop jmp and or imul bound cld inc mov jae into repz mov sub sub sbb mov and ret mov add and add (bad) out or sub aaa stc cwtl mov sbb scas mov inc push mov mov pop leave les test mul inc push add ljmp pop mov xlat in mov pop xor xchg shll mov mov jp mov sbb mov repnz pop neg (bad) arpl cltd xchg dec jo add cld xchg or sub int xor pop bound xlat into icebp clc inc sbb jmp sub add imul jo dec pop pop sub push addb inc jmp fimul adc js ret sub jmp stc sub or push lods pusha ret (bad) (bad) jo push mov (bad) test imul test insl jo dec push inc out adc jge aad shrb or mov adc fsubs adcl pusha stc push jmp cmp mov jae add sub jb add pop or add incl sub shrb or pop xor mov mov mov add fisttpll cltd sbb mov out hlt sbb mov pmulhuw sar adc stc push lods stos inc or push nop mov fucomi lret mov push or jo xchg cmp sbb cmp orl or repnz add pusha mov xor test (bad) in ficoml jmp icebp dec or rorl xor inc cli into xchg lock push fiadd in adc xchg xchg pslld mov push call adc lret mov es outsl notb cmp sub push out pop jbe add int insb add insl dec or cwtl addl or jle xchg sub imul scas lret movsb lds mov jbe and in ret sub pop sti pop pop shrb movsl jo out cmc lock mov scas pop sub std inc mov sarb test or lahf jb rcrl or orl add lock or jmp xor push add (bad) int jl dec mov fnstenv adc jo cmc xchg sbb pop and jmp sti sar add sbb scas and and das hlt jbe or cmp and iret pop ret loop lods pop mov dec aad aad mov cwtl xor movsb pop pop xchg inc cli jmp sub sti notl (bad) call pop mov cmc adc mov loope bswap jl jecxz pop stos es ss (bad) pop jl jmp ret adc sub mov add cs jnp or push push cmp movsb add cmc fnstcw pop add shr jp add in loop ss mov jle pop adc mov add push mov jmp cmp jmp add and aam mov and rolb out adcb and das pusha mov sub cmp or shl sub leave pop and push sub cmp (bad) pop add out inc jns xchg xchg inc push mov fadds mov xor add push pusha adc popa push sub (bad) push enter and xchg pop pusha mov push dec xchg icebp pop (bad) push push fldenv js push fsubl xchg or mov in mov push xchg ret xchg mov (bad) xchg inc jg add add and call inc add sub shr dec xchg leave pop push lcall adc icebp in in add jp fiadd adc and std fcoml add sbb xchg add pop mov ds and mov push ss jbe cmpl mov sub jge movsb xchg aas jg pushf sub jne cmpl xlat pop mov fcomps jg std sbb es jae movsb jg test adc out pop stc cmp cld add add push addl add mov call lods sti out lds sbb inc inc pop mov shrb sub das push push rcrb sbb stc sti jmp jo idivb dec outsl je pop xor xchg ja cmpsb fildll lahf push scas fstl push and clc sub mov pop mov pop adc sub das call xlat sti dec jae es adc dec inc icebp adc (bad) rclb testb pop pop test add lret test and leave push cmc data16 es out mov or jns dec add inc cmpl mov push pop outsb out sub mov (bad) jl xchg push jbe mov andl das cmp ljmp mov arpl dec lods cmp inc cltd push cmpl xor out jg std je and or push jae (bad) push jmp pop mov jmp xor lret inc pop incb pop mov xor sbb loope aad inc clc in inc lahf push outsl loop xchg mov stos pop dec lods add add lea inc in sub push dec (bad) push adc daa pop inc int jmp mov fild sub push pop jmp push outsl mov mov insl xchg punpckhwd mov and enter lcall push sbb (bad) mov addl sub mov mov pusha jmp aam sahf (bad) xor std or mov movsl in adc xor adc aad push jmp adc xchg sbb fst push xor push pusha fldt mov xor (bad) cmp cli xor je repz (bad) daa jns ret or ror (bad) inc lret fidivrl lods jbe and push dec add je mov out repnz adc testl ret adcl jmp add shr mov dec dec les aaa repz mov or fidiv jge cmp or add jbe lock or or (bad) inc cmp mov push flds lds xchg pop out movsb fcmovnbe add bnd in push iret sbb pop cmp xlat pause pop mov or or ja insl or lea or xchg pop push and sub adc pop mov int3 dec pop mov or ja jmp pop and sub sbb test into pop pop (bad) xlat pop lods sbb pop call xor ret push gs mov push std cltd test imul add inc cli mov pop fs mov shrl fucomp jp cltd or daa adc or push shl xor cld in les cli inc insl (bad) xchg add push adc or push sub or jmp pop xchg pop aas scas int add add add aad or insb push pop in inc or dec and or cmc rolb jns sti cvttps2pi not (bad) xor ret xor outsl inc sub repnz pop in sub xchg push push pop jmp out mov cmc or mov sub mov mov jg fmuls jle ja clc adc test dec stos add pop fcoml cmp popf shrl div jmp and dec xor dec mov xchg jb ljmp (bad) ds sub add gs cmp adc lock dec add add mov std pop mov dec jmp test sub xchg sbb lea or pop pop or rcrb repnz xchg jnp jmp push fptan ljmp add arpl icebp inc cmp sub xlat mov cwtl hlt inc fsubl jmp sti and mov sub jne sti ss push or cmp cmovne adc sarb push sub and or int adcb add fstpl arpl jno bound pusha pop sub lahf push stos jbe dec mov add sti jno adc movsl push inc aam rorl mov inc std cmp xchg mov sbb adc in jns and out js out mov xchg push (bad) inc test rcll push pop push mov jl outsl adc sub mov addb push lock aam fs cltd mov jmp loopne xor les fwait xor or mov das pop (bad) sbb mov pop push jmp (bad) pop push add fdivrs lcall add adc divb in ja jmp inc push push stc cmpsl push mov jmp dec add jae shl mov and test push (bad) pop sub xchg and negl mov mov jmp fwait or daa inc cmp adc das or sti push out xor lret sbb xor call xchg pop jmp push pop pop clc je sbb loopne pop ss mov in shll stos cmpsl (bad) fmull pop cmp jo idivl cwtl inc push pop mov aas sar clc jle (bad) mov mov cli add inc arpl lea std sub dec mov cmp dec xchg scas in jmp push mov xchg in mov popa sub push outsl adc dec push jge adc xchg shr ja pop pop pop sub repz aas add pop sub das push sbb enter fucomp outsl (bad) call jns push mov add f2xm1 and push decb push jbe xchg enter jb mov xor imul inc push mov leave or and mov and shr and pop in mov jp push add (bad) pop inc mov xor jns cmpsl cmc dec add in pop add cmc sbb sbb jl jbe push popf out mov insl inc rcrb into push testb push dec neg add cmp cli sub cmp test (bad) mov imulb jge cmp xchg inc fs dec lock push jge cmp add adc push test and stos sti jnp nop jmp lods hlt mov movsb jmp insl shll loopne pop lret imul inc repnz stos popf mov lret dec sub adc lret pop inc fs sbb push push mov add fst nop (bad) ss and add mov pushf lahf cmc mov inc repnz enter sub movsb pop sbb add pop (bad) xor aad add or loop add ljmp push inc fldcw dec rcl dec jne sti jno mov stos fisubrl aad or out movq push dec mov sbb push push pop jle shl jnp cwtl xchg cmp lret xchg popf push push inc pop (bad) xor jbe push into adc je dec or ss hlt pop xchg xor stc xor out mov and scas fmul mov lret push in cs in and dec add aam sub pop add jo mov and lahf xor xchg loope out (bad) push in xor push pop or jle roll mov push (bad) out (bad) or fs or xor and add cmp mov add add push jmp incl ja jle or jmp jae sub and push mov out lds jmp pop pop push cmpl not add jmp sub js mov scas or pop sbb shr ds jmp and je bound daa jecxz sbb hlt lock js and dec push inc xor xchg negb cwtl cltd fiadd arpl push pop data16 mov xor adc jmp push cli push cld fcmove sub enter shl xor jmp ret scas add dec jnp,pn pop sti inc (bad) cmp pop mov push pop push jmp addr16 call dec fmuls jmp (bad) add inc fistp mov sub sarl test (bad) xlat mov jecxz mov jl push jge nop xor jmp and inc (bad) int fbstp xor push sbb add stos pop jge pop pop and push push popf push push jae dec (bad) wrmsr (bad) jmp movsl jb repnz or pushl sub enter pop repz sbb packuswb (bad) fstpl add lock add ss mov push and test sub pop loopne popa jne ret clc add shlb push mov sub scas adc (bad) sbb add add insb cmp and in mov mov cmp jmp je adc lock adc xor jge lods stos dec jmp loope xlat add dec xorl push out dec sbbl cltd (bad) fmuls pop mov aad loopne stos daa inc mov gs add shr jns loope in adc adc ret xchg add sbbb mov add mov divb mov sub xor sub sub sub push mov sbb pop test pop leave imul and adc cmp add mov inc fidivl mov mov cmp or aaa call push jmp pop xchg cmpsb xor dec inc add inc dec sbb or (bad) sub or push sub sbb (bad) and dec loope cmp dec neg pop cmc adc cmp pop pop int inc lods (bad) jae inc xor je xchg stos inc mov mov mov les add js inc and outsb clc cmc or sub scas std push mov enter dec aam js pop sub int3 dec std push inc add int3 push (bad) (bad) in loop adc pop stos cmp int icebp sub roll mov neg pop and jbe adc cmp mov jecxz outsb dec sbb dec stos mov rolb mov pop (bad) xor push push pop das bnd stc lods cmc or and call mov popa xor xchg jnp test imul mov testb xor push jmp enter outsb push clc inc push mov mov int3 aas xorb and adc add push sub push pusha je inc pop mov leave test sub fistpl insb sbb push push ljmp sbb mov ds clc mov adc add xchg rcl or notb or adc (bad) mov leave sub clc in jb adc jmp jp pop add call mov mov add daa push cmp mov jmp mov movb ja dec lock pop nop or adc mov push mov dec sbb mov fstpl daa scas add or add jge daa jns push dec mov jmp xchg out add lret (bad) repz iret rcrl fxam adc pop lret sub (bad) xor lret sub outsb sub mov jp sbb pop mov repz push jmp out out push dec ljmp loope stc ret push inc add xchg repnz inc bswap pop mov cmpl jg int3 loope dec mov sub inc or ja mov add dec das ja call sbb dec xchg mov test mov in leave sub adc push push pop and adc xchg out inc jmp mov adc gs push jg imul inc mov push mov add popf push push adc repz or lods or fcomps dec adc popa loope cmp xor cmc in push inc or pop loopne inc add hlt add mov stos stos ljmp push push in nop mov push or push mov push pop push punpckldq int or scas or daa call jnp and enter imul cmp mov add lret jmp fsubl pop cld or jg push ret xor xchg cmp cmpsl add lods dec jecxz sub xchg out jmp dec mov out and or repz lock inc rcrb lret ljmp (bad) xor nop clc jo popf push mov je popf jle push (bad) jg nop mov data16 mov popf addr16 pop jg ret loop sti sbb sbb lea int3 mov or jne sbb pop mov (bad) fdivr pop mov (bad) jmp xchg movsl cmp xchg in nop xchg fwait mov sbb inc js or les xor pop cld xlat fisttpll pop loopne aam (bad) stos sub popa push (bad) jle xchg pop pop aaa test stc enter (bad) fisttpl sbb jmp or xchg repnz out mov popf lods lea test xor movsl adc pop outsl inc inc push nop loope inc cmpl out loop lods push pusha ljmp mov sbb sbb adc sub jae scas jl (bad) (bad) and mov mov in popf cmc sbb rorb rcrb dec pop add ss mov lods mov enter ljmp cli sub dec mov and outsb cwtl fsubp push push pop mov cmpsl not rorb das mov sub scas cmp jmp (bad) mov scas mov mov cmp cmp pop sbb mov dec lea ljmp scas add cmp in jne,pn mov sub vfrczps cmpsb and and push add jnp add sub cli xchg xchg ljmp push pusha test icebp fnstsw push shl daa push sbb xchg mov adc or (bad) (bad) fwait dec das pop (bad) sahf mov xor ja fimull fxch inc scas jl and mov (bad) pop push into adc push jge mov sbb xor sub jnp pop sbb dec push lds or cmp cmc in adc dec lods sbb into adc shrl gs scas jp inc js dec loope stc mov scas add and mov ret pop fcomps scas and jne (bad) mulb xchg bound addps xlat inc movsl sahf clc lock jecxz test lods adc pop mov fmuls lahf add repz xor inc sub sbb mov cmp push push pop inc scas das push test mov mov xchg cmp mov xchg xchg cmp jae cs add ja xor or sbb pop push xor inc inc idivb cmp mov push and shlb xchg adc jl xchg ret in push xchg mov pop enter pop sbb pop pop jnp (bad) pop mov mov add int3 xor int mov or rclb ret push pusha in das lock repnz aaa cwtl mov cltd pop mov xor or mov xor add (bad) pop add mov xchg xchg repz mov mov je insb das roll imul mov outsl pop sbb dec lods adc sub mov jnp pop mov pushf mov imul out jne inc add rcll and mov (bad) sub dec xor mov imul xor out jno dec insb mov or stc inc and inc into sub mov in jle cli sub clc lds sti xor xor shr leave dec adc cmp mov pushf cmp insb add stos mov push push push mov jns lahf push pop scas mov std dec stc or mov add jb cli aas and xchg rcrb adc xchg mov dec pop rorl fmull lds sub jmp leave fidiv sub jmp or or test js fs lock bound add call nop mov (bad) mov sbb adc test dec lods popa test lods pop push jg cwtl add inc mov imul test push int3 lcall int3 push dec fs pop sub les push or (bad) mov push hlt fisub shl ret mov inc jo sub je push out jmp iret inc add in mulb inc dec dec xchg sub loope ljmp sbb shrd adc data16 lret int jl cltd xchg in sub jmp in subl add push mov (bad) or push jmp mov mov sti into mov out xor jno cmpsb fsts cmp lock ljmp shr and (bad) incl mov out fnstsw jmp push pop inc pop andl in sti ljmp repz movsl jge sub xchg aam in mov movsb mov or sahf xchg repz dec pusha sub or push jl xchg ja cmpsl jne cmpsb test xor scas add or push pop jae fild mov test pop pushf or push test push dec mov xor inc pop cmpsl and sub sub adc lea pushf lods (bad) js mov pop dec pop push das jo push jo popf ja outsb negl imul mov jg adc aaa popl sub cmpsl pop outsb cmp and xor xor or inc xor (bad) ja dec (bad) mov xor or (bad) enter and xchg and mov and mov out and es adc push mov in dec inc int or inc cmp (bad) push or cmp pop pop mov test lds mov adc dec pop ljmp lock push ds pushf inc cltd cmp pop jne xor in or sub sarl test test (bad) pop adc fbld in jge push or js sub jbe push jmp (bad) mov push mov lahf rcrb push jmp mov push jae std push in leave cmc pop push fidivrl aam and sub int3 xchg mov dec mov pop push mov push mov je jmp (bad) jmp cmc dec pop mov aaa (bad) push and add jecxz mov mov sub jp mov pop popa scas xorl cs adc xor leave (bad) push sub stc lock xor dec mov sbbl push mov repnz stos sbb xchg pop cmp out adc mov (bad) in and fxch add lock mov movsl add push cmpxchg push add mov mov aaa adc mov push arpl clc sub cmp popf inc stos cld push rcrb sbb push into fs cmpsb stos out sub pop mov ja das adc jo cmpb rcll push cltd mov ret daa dec into dec cmp add sub (bad) xor lahf cmp mov mov lods mov dec adc (bad) mov aas das cmc jge fistp int3 jg pop dec mov add xchg lock mov movsb ds dec add xchg notb push es adc insb leave sahf or push push pop inc cli xor or mov add movsb xor jmp (bad) mov mov adc pop push jmp (bad) hlt sbb scas add ljmp or mov mov les enter icebp jl imul ds mov sub adc adc adc add ret mov dec pop add jns movsb sub or inc inc ffree push pop jnp sub pop add fldl2t push sti cmp dec dec aad jbe adc andb sti bnd add or bound xlat loop jg clc test fistp sub xchg jnp cwtl dec and inc inc inc cs or add daa popa shr mov das popf cld (bad) idivl lret stos dec sti psubd xchg mov adc fsubs mov push pop mov mov inc clc movsb pop arpl fstp outsl cld mov imul stc mov (bad) lds test jge sbb push nop mov dec ds ja movsb add out push push xchg sub das jle pop add lea jle mov les dec mov addl nop add dec fs or jmp fidivl lds lods cli jb mov push xchg insl (bad) and mov sbb jmp pop repz scas es jbe mov std stc add push jae or adc inc bound pop in je mov and rcrl jg dec dec bnd push fidivrl xor inc push test xor pop jl push push data16 cld pop push mov sbb xchg data16 leave mov pusha xor jae mov xor (bad) inc pop xor es not aaa adc mov sarb and xor cmp into mov hlt mov clc aam sub sub add xchg in stos xor pop nop mov jae jno scas xchg cmpsl daa mov shlb insb jne mov pxor js orl cmp mov sub mov jecxz mov icebp mov push mov lcall mov in rol add fsts pop push daa sbb enter lock or and pop enter and xor stos test inc cld aas outsb xlat pop ror int sub sub stc pop and inc mov shlb push mov mov movb fwait js or jle push cmpsl not mov nop fisubrl or pop jge (bad) push adc (bad) jo and lock mov add sub dec outsl or xchg scas adc sub push out xchg adc loope popf inc sbb jge cmp js out test insb and mov add and jno jl pop pop fsts hlt (bad) out or popa es or jg (bad) and push outsb leave adc jno popa mov shll movb and adc xor (bad) add test mov mov pop arpl add stc fmull sbb push inc aas stos pushaw mov jmp or in imul popa in inc dec ds lock sbb and (bad) dec push gs in jmp bnd xchg push inc sub mov mov add aam mov or or pop cs push push mov jnp and pop push in loope adc push outsb jle int lcall push jmp add add rep dec and (bad) jbe pop pop push add push xor loopne push jecxz push xchg dec or icebp jne adc scas cmpsb xchg xlat xchg mov dec aad fnstcw xlat push pop inc adc mov mov leave insl pusha inc sub add call dec sbb stos pop or cmpsb xor movups fiaddl or mov sahf jnp adc mull adc push lock pop pop loop imul pop mov lahf (bad) jne mov cld pop int3 rcrb fdivp fs mov addl dec (bad) push add jecxz sub inc sbb mov pop xchg lahf fwait mov dec jecxz mov push pop and pop cwtl aas jge xor mov xchg and (bad) dec pop sbb xlat sarb lds int3 std cmp push add popa dec add push movsl je mov sbb push es jmp loop rol sub imul push inc jmp pop sub mov mov pop and push loope flds dec push mov xchg sti and sub or cmpsb ss cmp xor dec lods dec jns cmpb loop pop mov es jns push cmp dec cs jle pop lahf (bad) (bad) push add imul cmp mov mov cld mov jnp jecxz stc loope cmpsl pop jb nop mov adc ljmp dec or add stos xor imul sub add jmp stc jp js aam add das xor jno xchg jae inc and lahf xchg add cmp sub enter jmp push sbb xchg mov cli ret aam movsb add jge cs cmpb rorb push add inc push mov test and and sub jecxz or push ret and (bad) repz mov popa cli popf cmpsl xlat icebp and dec or push or iret es cmp cmp pop sub pop add (bad) daa dec mov adc mov push in scas sub add mov add pop inc add pop xchg pop lods movsb adc mov call mov sub push in sub jo es mov push pop jle je (bad) notl sub (bad) nop cltd dec mov arpl push scas cli fdivl xchg sbb mov fisubl pop lcall pop push sub outsb fwait pop and pop pusha (bad) sub mov in push xor adc mov push mov sub inc test and imul in xchg mov add repz in xorl shlb or pop pop aas bound aas std adc jmp ds std cmpsl pop push insb jmp aas in jmp cmovno dec imul cmp xchg loope out adc xchg xor in fs (bad) outsl lds insb pop add stc adc add sub mov xchg fnsave mov mov mov dec adc jl mov in mov adc dec mov lods push ja xlat push shrb aam jno xor jl pop adc decl out pop lock pop hlt in lock pop and ss jne xor clc lret inc pop in add or adcb dec mov sub out test push ret pop and loopne or and or lahf and or pushf out xchg dec (bad) test push movsl mov mov push add push jmp pusha (bad) adc or push sub add cbtw pop sub xchg (bad) iret cld out pop pop mov lds cltd popa push jo bswap mov aam sti cmp inc pop sub stos push inc mov mov out or pop inc ret mov mov lret lahf lahf rorl mov imul xchg mov es sti push sti ror mov pop push and mov or lcall lret shll mov mov shlb dec jno jecxz add icebp out jg aaa dec je xor dec enter inc ja jnp push push mov pushf nop nop adc xor add stc inc pop mov push stos scas jne test (bad) inc and cmp pop test movhps sub mov mov and add ret or fs pop negl scas loop mov add call cvtdq2ps pop cmpsb jl icebp loopne xor or lret inc sub inc pusha sub jns out adc and pop jns mov das out add lcall js in sbb shl push and xchg pop or xchg jmp xor pusha outsl dec sub inc add inc popa dec pop scas rcll (bad) and lret xchg jnp or fstp dec outsb loopne fs ret hlt pop loopne cmp inc or sub sub icebp orb std adc mov sti xchg int3 lcall push aas outsl stos and add mov or jg pop pop (bad) bound push push test mov pop insl push cmp or sahf add jnp sbb sub and sub sub rcl push push lds xor insl movsb adc mov fld xor rorb jo inc push inc ud2 lea and sar xor mov js pop add dec pop dec jmp nop jl in cmp xchg pop int (bad) sub cs sbb or roll push sub xchg notb lcall mov orl dec ljmp fisttpl stc sbb or mov cli mov xchg mov inc pop repz jbe sub mov ret pop cli cltd test jmp xchg repnz jns scas or or jmp out and call mov fdiv fcmove cwtl sub imul clc pop rorl pop lds sbb fist xor push jno add push fisubr (bad) mov mov add push push mov mov sub cli inc not shr dec or sub jge or mov mov mov and jge dec lret adc pop nop xchg inc jmp or pop fild sub jne add inc repnz das adc inc aaa arpl xor (bad) scas add stos adc add aas das dec jnp adc jmp int push mov dec in inc sub ljmp test jmp pop pop add pop jge and je test mov xchg fidivl or dec mov test mov cmp xchg hlt or pop adc mov adc or repnz std jmp mov pop ret lds push (bad) cmc push (bad) or cmc cmpsl xchg addl rcr imul adc push sub lret loopne bound ds or push dec loope mov outsl push mov mov xchg pusha sbb enter and insb sub mov scas je mov mov xchg (bad) (bad) enter pop push jecxz rcr flds or push nop mov pop pop pop bound es mov pop dec hlt cmpsl or loop (bad) mov add sub cld xor gs in or shll jb mov add cli adc adc out push adc loopne clc adc fiadd or es inc dec addb stos flds jo (bad) bound arpl or mov xchg xchg jo das fiaddl push cwtl jge adc sbb scas addr16 jne sbbb adc inc mov xchg dec jp not push mov insl xor shr dec adc mov in popf push cmpsb repz sbb test dec cmp mov cmp sub add div cmc flds movsl jne push movsb or jp or and dec or int mov cs mov aas pop mov push dec rcll pop repz mov insl jl jnp dec ret jne pusha lcall add mov enter out std xor (bad) orb outsl inc adc sbb sub fcmovu push and cmp pushf xchg pushf dec dec sti xor jmp outsb test sub mov jmp jl xlat loop mov inc sbb insl lret mov mov lret and dec sub fwait wbinvd push pusha popa fildl jmp push pusha (bad) or lahf cmc (bad) (bad) pushf imul dec fs cwtl js push or fisttp orb (bad) rorl loopne xchg jmp cmp sub mov (bad) enter cmp shlb jbe shlb xorl jns scas push pushf out out and adc das add incl mov push inc sub add (bad) jne fdivs rcrb dec fs nop ds mov xchg dec or push push push stos add shr int3 xchg inc or lret sub addr16 arpl (bad) fsubl mov cmp insb cltd jmp fwait jecxz and insb or add daa xchg jmp mov sub pop mov int3 and adc pushf cmp cmpb ret xlat jo mov and stos adc cwtl aad push cmp pop mov or sbb mov aam jmp scas pusha sub add ficomp or push cmp scas stos ror repnz not or les hlt (bad) inc push sbb xor lret movsb xor test dec mov pop push cwtl pushaw daa add sbb mov stos push dec add divl test pusha negb push andb mov hlt mov fstps pop or mov mov gs mov loope push inc xorl sbb data16 push sub aad and jp and hlt mov xchg inc cmp stos mov xor sbb jae and imul or cmp mov fiadd xor xchg fwait push lea lret movsb adcl push and or pushl rolb xor jl xchg pop inc fs inc cmc out es sbb (bad) cmp scas adc shrb push pop das (bad) cmp mov push pop lret sbb subb add cld add cmp xchg (bad) fstpt (bad) dec jae push vpackssdw ja jb sbb (bad) or in xchg xchg or lods test mov int3 outsb push push jae add les push idivl cmp addr16 push mov jae sub or test xor jge or or pusha cwtl mov aad testl test mov adc js xor xchg mov or jmp and aam adc pusha add jge movnti xchg jns xchg jbe dec daa (bad) xor cmp stos cmc mov jne push arpl jmp mov cpuid mov or hlt fistp sub inc lcall push jmp test js scas lods adc mov mov pop add and xor rcrl fs mov push sti es cmpsb xchg or and lahf add mov and repz imul fnop mov lods lds xorl cmpl adc pop xor (bad) icebp loope jle cmp mulb imul js pop push cmc pop jb xchg or xor in sbb mov mov fsubs fs push xchg ret es pop (bad) sarl fldenv inc dec inc and sub ret stc mov andl dec add xchg push jmp rcrb mov or dec sub add adc cmp jno push pop xor pop push sub jne imulb lahf icebp pop lret fstpl outsl in jecxz pop add xor movsb stos pop add xorb push pop daa out jb jb outsl ds loopne sbb mov pop add out mov pusha add jbe add sub push cmp xor sbb aam decb int3 test loopne xor push mov sub ja xor inc (bad) nop icebp jmp mov inc push cmpb jbe ficomp push mov cld fs dec xor jns xchg sub das ss leave mov movsb std push int3 cmp dec xlat test fsubrs in pop int sub pop imulb inc jmp push cmp iret jbe pop (bad) push pop sahf dec xchg ret add imul mov pop scas xor nop push sbb shll fs sbb add (bad) jnp fisubr jle mov popf mov jo or gs sub jmp lds leave std mov (bad) hlt leave push push and daa (bad) dec out sub and cmpsl orl add push jmp mov pop xor push jecxz adc pusha lret push pop bound shl shr xchg xchg pop or cmc push js or dec jmp cmp push or mov movsl nop mov adc cli dec sub aas xor dec (bad) and push push jae leave xor out ret add clc push outsl mov push inc and jmp dec dec loop les je loopne sub pusha push les jmp cmc fistl pop nop cmp andb in jmp push (bad) and push push aam aaa push ljmp mov dec and pop push rcl cld jge out cltd xchg inc fucomi jno not scas dec in loop push lock xor add mov stos mov dec stos test out loop add mov leave call gs and fnstcw inc pop mov sbb fsubrl push dec outsl pop or cli (bad) mov pusha cmp pop test adc bound jnp and add cmc rclb add push add jmp add cltd adc aam jp add mov dec and or push cmp add fdivrl cmp mov xor enter jae jne ds jne adc sbbl xchg cmp mov neg xor or inc int3 xchg rolb int jmp and dec (bad) jp mov mov sub xchg add bound pop test inc jno cmp pop push mov mov ljmp in loopne add push out movsb pop lock jae daa inc or int mov jmp push leave jns mov test push or or adc std add lret jno rol sbb pop or or inc and (bad) adc cmpl or mov xchg mov mov pop stos inc sysret mov pop inc stos push (bad) mov adc mov mov dec mov jne or loop jno push add inc daa xchg ficom lea jo xchg aam jb jne mov mov fwait lret push pop push inc ret add leave dec mov ds clc adc shll push inc add scas and pop adc fwait fs push mov xchg fiaddl outsb loopne pop adc xchg (bad) and sub subb dec leave fnop dec pop xor inc cmp fistl js dec das dec cld jle or dec xorl fild sbb jmp add call outsl dec add insl mov push add (bad) push mov cmp mov adc xchg lods test adc xor cmc pusha out mov xor add dec pop and add js sub jne sub xchg pop andb sub stc xchg jbe cmpsl xchg nop jmp jo daa push adc (bad) dec movsl adc adc jge addr16 and ret add aad in ret mov mov mov fcoms pushw ss out pop mov or pushl (bad) (bad) (bad) jae adcb add movsb sub push loope mov dec dec xor mov scas add dec scas cmp lret popf nop cwtl adc and (bad) scas jge or sbb add and popa mov mov clc sti dec xchg xor push sbb mov add mov add dec inc add push xor sub push repnz in mov fcos inc cmp sarl stos push (bad) jo adc cmp (bad) xchg add enter mov fnstcw ret test pop stos sub ficoml popl fidiv aaa cmp mov jp out out pop pushl xchg push push push pop xchg cs xchg in clc jne mov adc loop mov arpl xchg (bad) fstpl das rcrl add sub dec and iret mov sbb (bad) xchg pop cs or push ds sbb push inc sub pop jmp in or lret test adc sbb iret mov cmp mov stc cli aam lock inc adc insl repnz (bad) icebp mov sub lahf push jmp jmp push mov add push (bad) aas mov mov xor dec pop test mov pop jo (bad) or sbb cmp mov or fistp inc pushf xchg repnz in lret and loop add call push mov push pop jo pop aam sarl push push notb jmp xor push je lahf dec jge jmp lret movsb nop add pop incb pop sbb add jmp popf rorl shlb cmp cli pop les jle lret je jno jle xchg pushf lcall sbb movsb call ja dec inc adc scas aam ret cmc sti dec xchg jmp inc push notl push xor clc fiaddl pop mov cltd and or ret bound jnp mov mov and shlb or or adc sub jmp xor pop xor mov add in bound xor fldcw push je jo jl inc jp sub enter mov popf and pop push or fild xchg mov cmp icebp push or pop cmc mov add loope sub cli add jmp add js,pt idivl add jmp mov roll or (bad) js add mov aaa cwtl arpl in mov jecxz push adc mov push mov fcomip or mov xor add fiaddl push fptan in inc pop (bad) xor (bad) push (bad) (bad) fcoms xchg ja fdivrl popa sub test ret mov push pop xchg dec add or iret adc outsl push jb and fnstcw dec push out or push inc push imul into adc or jmp cs out mov iret sbb notl mov nop adc push mov push call stc pop mov mov mov jge mov xor pop aas (bad) sbb sbb inc mov pop mov add divps in bound adc lea out cmc fiaddl out or mulb ja std (bad) mov push pop pop push sub aad xchg (bad) shl lock xchg pop xchg outsl dec jge jl push and adcl pop lds in (bad) pop lret lahf mov repnz mov adc xor xor std pop pusha outsb stc sbb jmp xchg adc mov sbb js mov xchg sub or dec xchg cs push sbb push sbb jmp cmp lock mov jbe leave pop pop push test mov lret (bad) imul and sbb inc mov mov pop stos mov xchg fwait jge nop cmp inc push adc ljmp xchg lahf xor jnp sbb jmp push jo xchg mov inc jb push in aam ljmp (bad) (bad) imul outsl inc mov inc pushf fadds pop jmp and mov add xchg lds mov and icebp dec pop jnp sbbb cld push dec sbb sbb dec cs notb xor fcmovnb std mov cmpsl popa lahf cs adc pop push nop xlat pop mov jo jmp inc or out add mov jmp scas cmp or dec inc jne pop inc mov cld and add push mov stos cmp jae push add jmp nop iret fdivs jecxz in xchg pop in call lods stos add xor fwait xor jae dec jmp jmp int adc jno add pop sub arpl in mov cmp aaa cmc and and add push sub dec lock mov (bad) xchg dec test push stos dec xchg test mov jmp sub not cmpb scas hlt dec daa xlat loop inc fs xor mov sub int lcall xchg pop adc pop and add push mov hlt loop inc pop adcl add mov mov inc mov pushl sub lock sahf movsl fs or mov push loopne mov aad pop orb dec dec int3 int3 test pop push pusha bound and into pop add cmc pushl push dec and sub add jmp xor rclb rcrl das add push pop pop iret add add sbb aam adc and mov mov out lret adc adc xor mov mov dec xor inc xchg and pushf push movsl fiadd (bad) cwtl sub sub dec movsl pop adc cmp (bad) pop add mov pop es push push and sub leave cmpsb sbb test sbb push pop sbb jnp dec fisubr add cltd xor xor test lret test adc clc sub popl icebp add pop in and mov ror sbb test jl (bad) and stos mov or ret and jecxz or adc mov aam mov (bad) fldt movsb pop and xchg ja leave loop jge mov mov inc pop es mov and xchg fild repnz dec pop cmpsl cmpsb jae jo xchg push (bad) jo das xlat (bad) in stc jecxz in ret sarl inc push clc jge jle inc push shll jmp jg pop fsubs dec add movsb icebp jo push dec inc dec sub or mov xchg xchg xchg or mov mov sbb mov in mov outsl lods and popf scas cmp nop push mov std adc lds sub sub dec notl lret enter mov das sbb icebp push dec movsl sbb jp fbld mov lods jle out adc sti pop add insl (bad) leave jl sarl enter cmpsb fcoml adc mov imull pop imul adc lahf jae arpl stc dec xchg jnp out jge push (bad) mov push xor leave or pop inc or test into shrb jge jns sbb movsb lahf push pop mov shrb mov aam or gs (bad) dec adc xor out add pop or xor dec dec call mov (bad) fild jecxz add ljmp sahf pop (bad) mulb ljmp push mov ljmp sahf and leave inc mov jb rcrb out hlt rcrl add shl jo cmp and clc out aam add sub test pop (bad) dec xlat or pop push aad sub jne stos mov std or repnz push outsb inc (bad) rclb or ret jg icebp aas dec dec push mov ret outsl mov dec inc adc push cmpsb push sub xchg out sub xchg jb lods xor push pop and fcomps mov xchg xchg fnstenv outsl sub stc mov bound xchg addr16 mov repz jbe jae jbe cmc inc sbbl and mov sub jne push out mov outsl dec jo stc adc xchg xchg inc inc mov sbb imul (bad) jne lock add inc push mov xor sub or and push add or mov and cmp pop in out imul push jp cmp pop leave jne (bad) test aaa imul pop pop bound sahf jg and lds fidivl ja (bad) xchg jb cmp sahf pop jmp adcb add insb (bad) jae push into push mov std pop insb das jl dec push mov or pushf pop mov inc pop xchg jecxz fiadd dec xor xor popf pop mov nop clc outsb push pop (bad) cmp fadds sti popa pop inc (bad) jb xor lret dec inc add das std add mov mov dec sarl jbe idiv cs push pop out daa pop lcall sarb cmp sub sbb xor push dec add cmp jnp scas int imul push xchg pop jle pop ljmp push mov xchg jg bound add jle loopne clc ret xchg dec sub sbb lahf lods nop mov fs es stc fsubl cmp sbb jnp dec adc inc repz sub sub call mov in inc cmp and in out shrb hlt jg mov mov lret dec push sub cld jnp xchg push daa jmp ljmp push cltd clc pop add jb jl cwtl mov xor pop jge sbb icebp ja icebp sub sub push aam and rcll scas pop adc dec les int addl dec or jmp adc stos add bound xor adc test test test and ljmp xlat in cli lods adc jle out sub add mov pop xor pop bound or cmpsb daa aam push (bad) jmp stos push dec test das cs cmc nop lock mov (bad) (bad) iret pop cli pop inc subb mov rorl popf pop aas in int3 lahf rclb bnd or (bad) das push jno mov mov mov test jg inc dec mov mov mov pop mov cmp lock das test jbe pop (bad) sub call pop jmp sbb xchg (bad) jnp pusha mov or scas jmp (bad) fnstenv mov mov movsl adc in into mov jmp test hlt adc push cwtl or gs xor mov out mov xor decb bswap (bad) pushf add jg inc out cmpsb inc dec in nop bound fstps call pop daa add stc and cmpsl and pop imul jmp and mov pop cmpsb (bad) mov jae movsb push pop pop incl popf inc xchg hlt lahf add jecxz loopne test sbb pop (bad) xor dec mov cmpsl or inc enter push pop pop stos inc adc mov adc push das jno imul pop sub incl mov (bad) push daa jmp or push mov mov int3 sub sub lods lahf inc mov sub push dec jb nop mov adc ds je dec hlt mov mov cmp hlt jg add mov fildl push mov xor pop sub and sarb movsb push fsub aad jmp sub pop test mov dec mov popf insl inc sbb lret sub cwtl xchg mov add push dec pop pop int3 dec rep adc pop mov imul or pop pushf add sbbl clc or in add pop orl sub pop jmp dec push in (bad) add jmp fbld xor adc xchg cmpsl out sub repnz mov aaa dec test and loop int ret jle outsl and (bad) popf hlt push mov aad adc (bad) and mov dec push sub push mov mov fisttpll and test mov test pop adc lea sbb stos in ss cwtl and mov adc je push (bad) out insl mov inc fmull mov gs add jmp add jns push pop dec jmp out pop es inc adc fwait push sahf jp push (bad) ja jge and mov jbe and hlt pop adc sub dec sub push icebp mov cld cmp fstl mov sti imul lods mov mov shl mov repnz xor add js lret inc xor jle inc jmp mov sub out syscall gs inc push push or jmp push daa and lea mov (bad) adc test pushw cmp pop mov push sbb push rcrl (bad) andl lcall sub and (bad) mov push or sub xchg not cmp das sub inc mov daa jns aaa jmp mov xchg (bad) mov and push push insl jo call pavgw fsubrs or call pop sub lods push lret (bad) stos inc cmp or push pop nop les pop xchg stc cltd dec inc daa adc andl aad cmp jmp push outsb cmp add mov pop inc out or add dec mov lret sub fsubrl cmp scas xchg cmc jns dec stc dec inc enter jmp mov mov je pop jge pusha jo mov test inc adc pop lock fldt pop ds jb mov pop rol bound sbb push add or or imul scas jg push icebp push push jg adc js mov mov es mov repnz sarb shlb out add negl pop sbb add jmp daa pop bound jnp mov jno lcall dec add aad cs xor add pusha (bad) inc xchg xchg fs ret sbb lock and push das pop ds or cltd mov and sub lret fs push mov out push pop imul ret or outsl push and add jmp push pop lods insb xchg sub je rorl imul not outsb test inc jmp psubw nop rorb jge (bad) mov stos lret scas xor push pop sbb push add and (bad) push inc or ja pop stos sub adc push jmp inc (bad) rolb xor push mov pop mov andb aad xchg mov roll ret enter push scas push ret pop mov das push fcompl jmp or adc pusha push sarb push ljmp mov sub push ret and jmp pop inc add dec (bad) adc into add inc pop rolb adc inc push jmp mov daa adc adc loop dec sub jmp jecxz mov xor cmp pop mov mov inc sbb cld mov inc inc mov fisttp popa add cld xchg xchg pop stos imulb jmp fiadd pop jne push pop (bad) pop add rcrl add hlt outsl dec mov adc fadds mov jo and gs ds popf jg sahf jmp pop in arpl cltd xchg jmp xchg bound jmp inc mov popf mov js lahf je enter out jp jecxz sub mov out mov in sub (bad) aam test jl cmp daa push sbb xchg inc mov push test dec inc xchg dec push cmp pop add push pop out imul jp push movl jns push sbb lea jecxz mov pop xor cmp lock dec (bad) fcomps jge inc addl std pop popf xchg sub popw sub add lret jle mov movsb outsb mov in test das pop (bad) out je pop in loope mov stos (bad) mov pusha adcl (bad) fildl sarl stos adc es xor stc mov sarb mov rclb pusha push jl or testl push sub icebp (bad) ds mov testl fs das dec dec std push xchg add daa mov sbb adc jmp add xor jo fadds cmp dec mov out mov mov call nop mov pop adc pop addl sbb xor add pop or or dec lods push add inc add clc jmp mov push pop push adc test pop loop xchg and push pop mov lock jmp sub cmp inc leave dec xor add sub add ret ja (bad) mov adc iret xlat lahf or cmc xchg cmpsb cmpsl pop cwtl (bad) ficoml jmp sub sub sub push mov loope rorb cli frstor aas call sub xchg inc aas mov pop cmp jnp stc lret fist add sti test xchg js enter jnp jmp push stos leave fwait leave jge bound icebp in jbe cwtl xlat imul in add cltd sub leave jmp addb jmp dec cmp inc sarb xchg sbb iret xchg adc imul and fs push movsl hlt rcrb adc imul adc mov pop sub push and inc add mov cwtl cmp jbe mov mov inc (bad) mov inc out mov xor mov adc jmp repz pop adc out outsb rclb push sbb (bad) push jb adc push cmp add fnop loop test and (bad) lock and xchg sbb lcall pop xchg cmp inc loopne jmp icebp jnp sub dec and aas push loopne (bad) arpl pop rclb insl jl ret pop pusha aas sub jmp or pop dec je push loope fild inc sbb popf jp ja cmpsb cld pop pop cli inc inc ja outsl sub dec xlat mov int pop and cwtl add negb repnz jbe pushf int3 or jmp sub test inc out cltd loope ljmp mov add and fyl2x test pop xchg mov push inc cmp fabs ret inc pop rorl push insl jl das and loop fsubrl lret adcb (bad) jmp mov cmpsl xchg mov push inc inc ja jp jae in sub cmc xchg jg or mov pop cmp pusha adcl cltd mov mov daa mov or mov lds add pop sub leave inc sbb outsl nop leave sub pop jg outsb das shrl mov add lods pop adc dec rcl mov mov imul jmp test inc dec icebp and xchg mov pusha out cwtl or dec add popa cmp push test icebp mov and fidivrl push in out or mov inc jno das sub leave jb jle sub jns (bad) in and lds push imull in pop jno jnp inc pop hlt jle inc imul push pop cmpsb push cmp cltd or lock dec mov mov or xor push ret int jmp loopne dec icebp imul xchg subps sbb int loope das inc aam pop cmpsb or dec xor or sub arpl sub mov or push xor js mov sarb pop shlb mov lock out pop rorl (bad) or negl repnz pop enter adc add js push stos and popf dec mov cwtl adc add ror leave jne push xchg push push mov not and dec daa and mov pop andb xchg test stc test (bad) aad mov and into cmc out in lret mov mov cmp push sub jne nop rcrl loopne repz jnp dec push dec mov fsubr aas addr16 and pop jge aam jnp jp add jno call jno inc popf imul rcrl and pop sub ret xchg loopne std stc pop aad push xor push add cmpsl xor pop xor sbb out and sbb push inc mov lea shrb cmp repz inc jmp sub inc lcall or dec sub adc mov add dec mov mov cmpsl jbe jp cmp rorl sub sbb mov (bad) sbb and test jmp outsb xor and or ja pushf in orl xchg scas dec popf push repz push inc in cmp popf js xchg jns add test lods mov sub inc out mov (bad) pop mov mov pop pop dec xchg xchg jae aad mov rorl das (bad) mov push mov add repz aaa mov lcall add inc push mov and jmp sub sub lahf shl orl or ja adc es mov dec jae add fucomip pop iret scas insl jbe mov mov rorb int3 fs jno add dec jle shl mov and sub jmp add in push mov rolb or lahf jl les daa add xchg stos mov mul jle push push jmp dec sahf addl out insb and sbb outsb mov cmp shr push sbb pop add adc jmp ljmp lret out or fstps push aas adc and mov sti fisttp mov sub lret mov sbb nop and subb shl add (bad) lock pop stc dec or mov add push jmp (bad) fisubl pop jne icebp inc jae pop pop mov out pusha int cmp jbe inc es enter mov and stos orb icebp cmpsb xchg and std fxtract into aas lea jle movsb pop pop stos add push mov xor pop add sub movsb sub mov addb out mov aad movsb mov adc xor adcb mov lods sbb cmp rorl bound inc nop in add pop push shl out in cvtps2pi xorl mov cmp and add dec inc pop enter daa cmp add daa out inc outsl add sbb xchg and mov mov and in adc sub ljmp sbb flds or fidivr jmp sahf mov jmp outsb cmp add dec jo xor lods nop movsb popf (bad) lret or push (bad) push pop push addb xchg add lcall in push dec mov ljmp add or mov cmp sub jmp push in xchg jge inc adc insl jecxz cmp mov push xor popf adc daa imul shrb xor cltd movsb add enter cmp dec adc mov dec and add xor pop mov je imul sbb pop or nop jle sub push sbb sarl or test add mov adc sub cmp packsswb mov ljmp push or and aam adc in (bad) iret into adc dec jnp cmpsb adc int cmp inc outsb add sahf lret call stc nop mov enter clc out (bad) scas mov fist ret call jno cld push ljmp xchg adc add push dec mov dec dec stos mov add rorb in jo out aas jmp xchg mov (bad) jecxz adc sub xchg dec mov aaa inc xchg push sbb cs mov mov xor insl adc push pop in (bad) or lods rclb (bad) adc sub iret dec or test idiv push mov popf mov pop pusha push cmpsl push push lods inc pop cld sub push (bad) out sub jo fildl dec jns mov jmp push loopne inc xchg roll sub or mov push sarb adc xor cld inc dec xor adc ljmp jne push pop arpl in xchg je dec pop dec and mov dec ljmp clc pop xlat ljmp mov push jmp add mov mov adc nop push repz push ret push cwtl jno mov jle aad (bad) inc lock adc inc sbb or xchg fild out insb sub mov roll or jg mov push add push push mov cmpb cmpsb lods icebp mov mov hlt mov or sbbl loope iret push and push pop shrl xchg out or iret arpl adc mov pop (bad) loope jo imul call jmp xor xchg add jmp mov mov mov cli push pushf test pop aam packuswb loope mov in clc lahf rcr and mov xchg insl mov nop mov lods test repz je mov ja ja movsl cld imul (bad) mov or adc cmp push push pop iret rclb and jmp dec xor dec add push or pop mov js mov repz dec not shrl outsb mov sub lds lahf xor mov pop add scas into mov call add in inc jmp sub sub or push add adcb dec jmp nop push jae mov adc dec call dec lahf aaa pop xor ficomp movb cs and mov sub shl cmc push mov mov xor pop xchg test xor dec inc sub ja fmul mov push add jle (bad) xor test inc adc into mov and mov and jl add push into add clc mov popf aam add sbb jno mov aaa shr adc insb xchg or sahf add (bad) dec jl cmp ja dec stc call loop mov dec mov lds (bad) add fild loop int3 jo add cmp out push pop scas cwtl mov out pop or cmp mov push push mov faddp mov mov addb sub or stc call rol ljmp push in mov cmpsb mov imulb enter rcrb imul test and push pushf add fadds push push push push out andl (bad) rolb lret or push sbb outsl adc ret jne aam or inc aam push or sub mov jle add sub shlb std mov fcomip dec xchg cmp cmp mov sbb push push cld imul fist push and addb mov ljmp ret shrb sbb cmp mov sub test adc xor mov inc push outsl popa into jmp gs and push sub scas lock imul cs mov xor stos mov enter inc push mov push jmp pop imul les push or je daa add (bad) in in cmc jno pusha pop mov insb mov dec sbb xchg push fs sbb dec push add and ds fcompl rorb es add and call shrl jnp cmp jg aaa clc outsl in dec dec setle mov xchg xchg sbb fdivrs scas les add cltd mov pop jb mov fs mov dec push roll incb (bad) (bad) sub inc (bad) and or mov pop inc cld repnz daa inc mov sub xchg add mov pop cld ds jl fsubrl add cmc movsb (bad) inc mov cltd pop pop sub inc dec mov xlat and sub mov push (bad) and fsubr mov cmp adc bound inc xor js fistl pop inc inc cld dec cltd adc cld and pop jecxz movsb jbe xchg or loope ja addr16 adc and or (bad) jmp loop dec lcall or sahf orl pushf mov pop dec mov pusha js icebp (bad) mov and adc imul add pop jg outsl xor mov pusha push ss pop in add and out shrb push sub gs xor xchg jbe and sbb insl push jo or sub loop xlat and xor addr16 pop mov movsl and cmpsb add add push or (bad) sahf in shlb outsl test and lret pop mov mov or enter add push mov jo rclb sbb mov jmp sbb rcl jmp xor lret icebp int jge cmp jge loopne pop mov ret stos mov cmp add mov loopne xchg dec (bad) pop (bad) movsl pop xchg in pop enter mov or shrl mov (bad) negl clc pop test pop pop xor and cmp adc inc int shrb jl sub je adc daa mov or jmp or jno dec add pop fdivr adc (bad) hlt inc mov xor mov lea out cwtl and dec push or sub xlat sub das sub mov xor sbb cmpsl mov fs lods add pusha push arpl loopne adc jecxz lahf push mov mov xchg out repnz icebp sbb cmp popl mov cmp add push out daa pop pusha insl or pop stc cmp and add push pop loopne mov pop outsl je pop movsb push xchg cltd push push sub stos mov bound pop dec imul xchg ljmp fsubrs push into pop xchg in std or clc ss push push adc sbb and imul mov sbb add lds pop into add les mov lock pop pop popf test in push je xor dec push mov push jnp sub loop rclb lret adc sub (bad) cmc daa test jle mov sbb pushf clc rcrl xor lods enter sub adcb inc nop sbb pop (bad) xor or push xchg loope int3 repnz movzwl mov xchg inc push pmaddwd nop es loop push test cmp sbbl divb xchg pop jno push (bad) fsts jp push xchg pop stc out jae movsb rcll mov cmp sub inc aam add pop xlat or xchg push das shll sarb sub pop inc shrb dec (bad) lock in popa pop mov jp jmp pop cmpsl enter test arpl jle insb jmp xchg xchg push ss push sti jecxz (bad) jmp out imul scas jne jl push mov inc sub inc (bad) adcl add cmp lods movsb ret popf mov das pop or call pop divb out dec xchg pop mov inc fwait clc (bad) mov or push pop xchg push pop push push or je sub adc add xchg aas push call in and dec push fs aam idivl enter jbe bound inc fldl push push mov sub (bad) xor ljmp cmp push inc nop pop sbb dec pop insb xchg adc lods add xor sbb mov push ffree jmp and mov and xchg loopne or pop std push and imul jmp cmpsb mov and (bad) lods jns adc mov push mov aam clc sub xchg pop ds push and ret and fcoms lcall sti or xchg dec decb push mov rorw adcl xor jnp cmp xchg pop aam and pop fldenv mov test mov jecxz scas aam sti push in and mov cmp in xchg add pop jg mov pop pop popf push lcall test pop cmpb in lock mov cltd pop sub push repz je (bad) clc mov lods add jno xor movsl sbb faddl stc fnsave or lods mov inc js pop popa mov cli jo push rcrb mov cmpb sub mov pop mov (bad) fistl enter xchg movsb arpl fstp clc mov mov (bad) mov fild mov repnz pcmpgtw jo fdiv inc pop jmp enter push inc sbb (bad) mov (bad) sub mov xorl sti mov hlt xlat adc fcomps or divl sub and push cmp add jp (bad) int fucomp add mov dec stc fcmovbe pop scas lds mov jmp js jecxz pop mov mov clc out jg or push add xor jne std or mov (bad) std ret cltd push pusha testb (bad) cmc pop jae cmp mov jg sbb loope cmp xchg inc mov adc inc dec add test jbe jo and adc adc fs pop push inc mov jg dec mov mov dec (bad) out repnz pop sbb mov jmp pop sbb pop and push mov mov inc inc mov add repz inc lock sbb mov test faddl (bad) mov vpsubusw leave xor inc mov push sbb repnz pop sub adc mov jle sbb data16 push and fdivrl and xchg hlt add push jg push mov push imul and lock push add test pop scas mov into push repnz and inc add or dec sbb rcrb jns mov sub jo jbe inc (bad) or mov or pop mov add mov sub add lret dec je loopne,pt pop jae loopne mov pop push insl push jmp leave (bad) and jmp mov rcll sbb dec out (bad) lods mov dec jmp pusha and icebp mov aad jbe add or push xor pop mov dec adc dec scas jge vpor add leave adc loop shlb adc sbbb xor cs cmp jno inc into iret xor adc mov xchg add clc je ret repnz push mov das int movsb outsl pop sbb xor daa xlat adc jno mov mov fwait mov or adc xor xchg adc (bad) rorb rclb mov inc xchg mov loopne and inc xlat sbb or jno imul leave cli (bad) test fstps (bad) xor aad pop repz (bad) pop or das out aad pop inc (bad) mov push dec stos xlat jns push repnz sub dec dec add lret push pusha add pop bound clc pushf or dec stc imul out jb call mov mov pop add pop or sub (bad) and jb add mov sub popf shrl cmp cmp addr16 mov shr xor add pop xchg or and xchg fimull and scas fldcw gs lods adc sub add repz add pop arpl push mov popa inc lret mov rolb or (bad) or mov popa mov push jno sti insb lret jmp and pop addl xorb inc in push cmc mov cmp dec adc fsub or stos cmp sti sub ds jge pop add mov xchg jne xchg jmp or adc sub lods andl (bad) push or or std mov xchg fcomps fist add push adc push shrl sub push movsb cmpsl cmpsl data16 fsubs mov bound out push mov lret jae sarb mov xor jns dec or addr16 ret sub cs xor das jmp scas movsb insl in cmp and push and lock jbe jns mov fucom adc notb sahf enter inc cmp fldenv cmp (bad) (bad) adc loopne fsubl sbb push xlat adc mov adc jge jecxz push cmp mov mov daa in lds pop scas loop cmp xchg pop and push js mov mov aas pop dec adc dec push add mov (bad) xor stos or dec push inc out je sbb aam jge lcall jg arpl xor cmp enter cmp push test cltd mul sbb loopne hlt adc xchg aas cmp pop clc cmpsl repz mov (bad) scas mov cltd add daa or sbb sbb je aaa fcoms mov pop sub cld cmp add or adc cltd (bad) push repnz jo cmp outsl inc es or add jbe test add ficom repz xor ret sub or in pop inc inc or into pop and or pop mov push sub adc adcl or add mov enter dec subl call add inc rclb or mov cmp mov bts push xor pop lods cli push sub pop mov ror dec push mov sub jg and test mov in inc jg fs out aaa sbb and out pop pop xchg out and xor stos sub push pop mov or xor fbstp leave xor jae jge xor popa icebp jo les aad sti movsb sahf push mov inc pop jne pop popa push into mov scas push sbb add jbe insb xor call int3 imul pop xor cld jne outsb cs lcall divb adc les adc mov add pop cmp inc daa mov jg mull cltd dec aam mov mov cmpl jbe and or push mov movsl lock and insb jbe inc cmp iret push cmpsb and dec mov pop fwait stos mov daa mov loope jge adc or movsl test mov or add cmovs sub test jns repnz scas jle in sub inc add imull jmp dec les and outsb out add clc adc xchg inc ficom jge outsl push dec xchg pusha xadd divb inc jne (bad) jno adc insb outsl cld fldlg2 sub add inc dec jae inc dec dec push lock (bad) add scas xlat adc sbb jle add fstpl jae scas mov jl mov push jmp xchg pop mov pop push dec (bad) mov inc dec js sbb sbb push test push sub and roll or jg sbb leave jl jle cmp fcomps and inc mov pop not ljmp sub sub sbb cmc int3 or jmp push xlat cld pop mov adc lds scas push decb sbb push cmpsl cltd gs and jne jge push or decl xor flds mov add add mov cld xor ss aam and cmp pop (bad) push mov mov (bad) adc (bad) and xchg imul jg xrelease or and jmp push mov aam repnz sub sahf (bad) jbe paddsw (bad) push add ja inc dec rol das jl jae adc popf adc inc sbbb mov icebp mov (bad) jmp cmpsl data16 daa pop sub lcall (bad) or adc out test or pop shll ficom shr add adc push jmp sub adc imul xchg subb xchg adc bound std fwait dec or xchg mov mov jp fstps outsl inc imul es incl (bad) das movsb mov pop fimul movsl clc ret test sub adc sub daa sbb dec out pop push cmpb outsb adcl jae outsb adc xor dec fadds inc xor jmp cmp dec arpl sub sysenter pop lret dec test mov aaa pop mov pop lret xchg pop mov add push xchg gs jmp roll or ja lret adc cwtl push mov and jecxz ljmp mov mov sti pusha jl xchg (bad) or divb cmp cli fmull subb add les xchg aaa nop aad mov xor sub inc jae (bad) pusha push add mov or inc or es jp jno adc push icebp xchg sub jge or out fildll jle inc lret popa bound out outsl and stos stc lret (bad) jno in or repz imul cmp adc inc mov dec jecxz add jmp pop push sti mov sbb aad jmp or mov sarl ret mov pushf and je xor js push outsl sbb push and or pop cld xchg ret lock mov sub scas dec push adc in jl jle pop (bad) hlt sbb add xlat inc cmpb add (bad) lock or jmp scas dec and les int3 mov inc jmp or mov mov inc add dec sbb jp pop (bad) push (bad) or adc jae fdivrl inc das ja aad fbld xchg sub addb lahf pop xchg adc lods inc pop pop push (bad) rorb dec pop scas (bad) int lods stos inc adcb mov push adc xor lahf push mov or or lds jo call fiaddl push mov mov sub inc sub pop (bad) push add inc pop pusha mov adc mov dec mov daa push (bad) xor jo insb pop cmp dec pop lret fisttp loope sub push mov rcrb xchg popa ds and add (bad) mov rcl mov notb jge into inc adc lret cltd dec cld iret push lea sub insl mov jmp hlt negb scas bound push int3 cmp sub jmp fcos lock out xchg xchg arpl (bad) test out adc dec les sub js or add mov fdiv push sub inc adc add pop addb aad insb push cmp rclb lods pusha incl pop sub loopne ficompl (bad) sahf (bad) dec xchg jg sahf ret (bad) arpl call fidivrl cli test mov out push loope outsl mov insb pop les xchg out or fstps sub jmp out jmp pop mov mov xchg ja push jmp repnz pop ja add loop mov lock pop imul lcall xchg xor xchg pop enter sub sbbl ss adc outsl jge das mov movsl add inc (bad) sub or xchg pop cmp mov push jmp imul andb xor lea jbe out (bad) outsl test xchg shlb aam pop push mov loopne push int jae sub xor fs adc sbb inc mov lods cmp lret mov mov pop stos arpl mov jb mov mov cs mov pop (bad) mov mov in inc and lret mov inc je ficompl jb pop pop fist pop mov rorb push jmp pop outsb stc outsl orl or jge inc add or or sbb pop mov push ja jbe add data16 loope dec and mov jle adc ficomp lahf bound dec fs mov inc adcb pusha xor sub sub lahf push and movb push xchg bound out rcl mov dec jnp out hlt jmp push repnz testb jmp dec and ja fidiv cli cmpsb inc ret jnp push stos (bad) mov dec add testl xchg in fiadd movsl shr add and sbb js adc push dec out or and dec push jae pusha xor cs scas add jno loopne fs pop sub mov sub jns ficom (bad) sub inc lahf aam cmp pusha jp pop and add pop cld mov dec or popl in cli ret and push je jne sub xchg dec xor dec addr16 (bad) hlt leave cmp sub add and dec fimull mov mov xor and shr and pop iret es (bad) int3 jae ror les push dec imul mov sub loope nop pusha jb nop or call enter enter outsb cld inc loope shufps mov xlat jmp fnsave pop push roll add inc add fild or mov ret adc fildll enter push and and loop (bad) xor cltd push cmp std ret mov cld ds or cmp bound lea stc jg aad cmp inc pop xchg lock push mov imul std cs rclb adc pop ljmp mov lds not and cld add jbe call or cmc pop cmp lahf dec stos lret dec (bad) add push push adc inc aaa add dec loopne mov fisubrl ret pop mov and mov sub and xorb rolb shlb xor aam lods mov push jbe lahf sub jmp (bad) jae push sarl fldl fwait dec add clc add jo outsb mov mov inc sub cmp repnz stos pop aas xchg jle sub mov jle bound call jns push jge add cmpl outsb fsubs mov out scas inc xchg les insl and in mov (bad) mov jo ret out xor jle push loope scas sub popf jge or sub add push cld add dec ret lods lcall sbb bound shlb dec push inc outsb jmp stos popa hlt or and inc stos out push pop sub mov pop aad push dec insb movsl test sub xchg inc mov test imul pusha sahf outsl aas push cmp scas mov pop lret pop sub sbb es push mov je daa int3 xor cmp sub lods sbb outsb mov (bad) je and dec push enter test (bad) insl ja jb add mov insb (bad) push xor xchg mov add pop cs in sahf mov scas pop in add xor lea (bad) fdiv lcall sub inc outsl pop inc dec mov ret fimull (bad) or jo dec pop aad fucomip push lcall mov in adc jp fs js add dec or scas sbb mov loop lret fiaddl mov push out pop nop enter push adc cmp pop fcompl lds sub mov add xor xor add add xchg insl mov mov inc data16 mov fsubrs push and test xchg push (bad) icebp mov sub leave mov mov add (bad) orb mov popf (bad) xlat inc lret or shll mov and icebp jg cmp jmp mov push mov jg mov ja iret test add adc sub dec xor sub jmp mov cmc sahf add loope bound gs mov xorb hlt ds add push push mov mov cmc cwtl inc push mov cli das dec push sbb nop xor mov jb es movsb mov xchg add pop sbb not test imul xchg cltd pop sub add jmp jo inc outsb adc out xchg ss and sbb addr16 imul mov pop cmp fisttpl jo fnstenv loopne add push fcomps and testb hlt jbe pusha loopne repnz xchg cld push js dec xor das sub pusha pushl push pop sbb push jmp push cmc roll inc push xchg mov sahf popf inc mov arpl sbb sbb jg and inc data16 mov and mov cmp and push mov in dec sub shr sbb adc pop imul mov out insb dec push imull das ret into sub call jmp adc push nop add ss addr16 das andb int3 rolb outsl xchg and or hlt jp icebp fucomp fstpl and fwait jge add cmc or mov mov pop jp mov call fdivl and cmc insl (bad) and jmp mov rclb inc sbb cli jecxz pop dec test (bad) outsl mov repnz data16 pop fisttpll inc ljmp xchg push mov jmp or and xor sbb nop in inc sti adc jmp push pop fwait dec icebp mov jg pusha jmp (bad) orb jae pusha sub inc sbb (bad) stos add call and mov daa jl pop inc aad xchg adc je push and push push dec and dec xchg xlat jb or pop fwait popf adc jmp cmp jecxz ret iret lcall int3 (bad) push imul sarb sub push adc (bad) into push adc xchg ljmp std xchg push inc add push stos adc mov dec out lea adc into pop out xor and pop sbb push into add pop lods cmp push std sbb jge push orb scas movsb es nop adc divl arpl inc jmp push not adc loopne and adc bound jbe push movsb lahf daa test xlat pop lahf push adc jp rorb mov cmp add pop inc inc and dec inc movsb and into pop test push loopne clc xor adc add sub pop push pop push push jno add out aaa gs stos lods cmp (bad) xchg push cmpsb dec mov push bound lahf mov xchg pop lods lret or lea and pop xlat jb mov inc outsl cltd sbb jnp jo mov jp xor pop mov xchg hlt push enter and sbb mov in mov jno mov jo or pop mov xor or es sub add mov cmp ljmp rcrb and lret dec cld femms loope pusha icebp xor mov and push arpl adc jg pop das shl xchg xor stc outsl fsub movsb push rorl mov js outsl xor addl or pop cmpsl mov pop nop hlt (bad) mov (bad) mov data16 add ret pop loope jmp hlt push xchg lods mov cmc or push push pop (bad) xor dec xchg outsb call sub test mov push aam repnz (bad) fistpl adc cmpsb push sbb (bad) dec pop xchg pushf xchg jnp subb pop fiadd test test sub das mov in lea push movsl mov add add pop jmp ljmp in jmp icebp adc lret sub mov add les mov loopne stos xor or roll xor inc movsl mov mov and icebp repz pop sub pushf push pop leave imul fwait sbb inc ror inc or lahf pop stos push dec adc or inc pop out add shll push popf pop gs dec jmp mov xchg push scas xor shlb push pusha pop cs ja test out mov das pop mov js pop cli push jno decb fcomps negl and xchg gs loop and or cwtl jo lahf loope add jo pop add jmp divl sbb not leave push sbb jmp push into (bad) (bad) mov pop push stos sub pop popf jg push fs rsm adc add inc jl lods push or xor ja mov push dec sub (bad) cmpl jbe bnd pop loop inc leave add or pusha or adc stc imul push push or add jo add cmp or ljmp adc push xchg sti push jmp inc sub das lcall jl add adc mov insl dec cmp adc and push mov dec xor jecxz imul orl xchg add sub pop add call jb sbb insl sbb sub aam mov add push cmp inc addl jl adc in addl and (bad) mov sbb pusha push stos dec add (bad) dec stc add mov mov call add push hlt jl dec sti sub mov pop or xor loope sub not push push pusha pop push rcll push pop pop add (bad) or xchg push repz jae fisttp push rclb pusha xor xchg inc fsub push lods loop stc jg loopne pop les xor scas add sub arpl ret or sub pop mov or out lods jmp fucomp mov lds add lock orb sub jne hlt es xchg aad ljmp icebp push push int3 mov xlat add das scas push jecxz pop test xchg xor cmp and sldt sub jmp sbb arpl jne sub iret das xor sahf xlat adc xor jb (bad) dec adc jnp movsl insl inc xchg fcomps lods xchg (bad) mov pop dec lcall push sub sbb sub movsb adc stos imul icebp add js (bad) or cmp cmp mov mov dec lods ds xor cmp pop ret out jae (bad) mov mov cs shrb cmpsb addb and sub jmp pop dec add pop adc pop int3 movsb cltd and pop inc jecxz xchg cmp jp and pop inc jp or jmp dec jle not mov (bad) pushf fimul xlat mov fstpt pop adc mov inc out push xchg push ss dec dec shr add mov pop push aam and int sub outsl test test out xchg aaa (bad) sub mov dec mov jle in inc scas sub adc inc scas mov pop out in test jp mov clc jmp add test and push or push push jmp cmc cmp icebp jne idivb xchg jb or ja std jns push push xchg sub jg mov or pop cmp daa add mov xchg js or pop cli pop std inc xchg (bad) test popl (bad) and ror dec and jl add xchg test repz stos mov out or mov ja mov popa scas push cwtl xorl in push shl cwtl pop (bad) sti nop roll (bad) push cmpsl jge sbb and push and movsbl inc push jbe dec push inc sub outsb cmp sbb cmp push int mov xchg jl or mov dec cmc and imul das clc repnz iret cmp add pop pop sub icebp int3 jg out test loopne xor push add mov push cwtl inc in pusha out and pop in inc outsl sub sbb inc adc add rorb pop pop rclb test insl loop sbb mov in test sub cmp pop xchg xlat scas push mov insb xor sub pop add ss (bad) dec or ja cmpsb sbbl pop pop pop pop shrl adc (bad) outsb in sti lcall xchg icebp sbb jns imul data16 vpmulhw inc pop cs sub and scas mov repz jmp dec jl add add mov mov rcll popa add cmpsl pop or lods rorl add sub or add jns sub jmp les add cmp das cmc and daa pop inc push movsb loop cmp inc sub mov adc out or leave dec pop hlt and add dec jge cwtl jp jnp inc jg ja (bad) fidivr jno add mov inc cs stc pop scas dec ljmp jo or in imul pop mov les divl xchg dec leave popf xor fcmovne repnz gs in mov (bad) adc sbb xchg inc sub pusha push mov push mov and loop adc xor js out adc ret adcb outsl bnd int3 cs div xlat fnstcw xor add push pop push loop xor in inc test add sub les sub lods push leave mov dec pop push add pop and sub push or adc mov dec add and das pop mov inc (bad) pusha sti lods mov mov pop cmp dec (bad) jmp or pusha mov dec pop sbbl (bad) cs xchg shll lea and push (bad) or or cmp add addl leave cmpsl pop sub pop push scas pusha imul (bad) push xchg call iret enter jge mov inc add dec pop shl popa push sbb mov loop cli bound dec and add aad mov pop lahf sub ds rcrl je les (bad) out test stos sub sub add daa stos add mov push in leave fs mov loop sti sarb pop mov ja test push mov add lcall rcll int3 adc or daa jmp jge out pop sbb adc es pop push test scas pop mov mov cld mov inc and add stos in jne mov push jnp pop cs scas inc pop push add pop or mov inc lock in in dec in sub (bad) aas adcb push and xchg xchg jb pusha push mov pop or rcr incl loope cltd mov jmp je test out hlt pop test add loop (bad) cmpsb lods adc in or push mov sahf inc test out mov and clc xor xchg icebp dec and push aad daa lahf ret sarl push imul sub adc mov jmp adc fstl mov neg jg dec movsb icebp out add mov push mov repnz jmp das or mov scas repnz push pop out mov fwait add or pop test fs pop mov stos ret jmp pop xchg push mov leave mov pop hlt adc lock adc mov adc pop scas sub or jnp,pn cmp pop xor push pop mov daa jge push add sub dec fsubrs mov mov pop dec cli (bad) sub or sidtl sub sub push test leave fsubrl push jmp dec loopne inc orl lret call adc je outsb mov xor mov lods insb in dec addl dec divb or dec cs sbb mov push jmp cltd fdivl pop pop dec test push rolb cs cmp (bad) lahf push xchg shr dec xor cmp aam add jmp inc iret cmp mov jmp jns rcll mov icebp (bad) mov imul pop xorb sub adc stos xor scas push mov inc mov mov lahf sub pop jg or dec lret int pop out push pop push hlt fprem1 pushf xchg cmp mov push jg jg repz inc inc and gs xlat sahf pop sub xchg test pop sub fadd jg popa or arpl andb je adc stos leave fisubl mov push mov pop push sarb iret push loop es pusha push call push pop mov stos dec mov test dec cmp add or loopne les jmp cmc adc dec push cmpsl pop and mov out jl jo jg or (bad) imul (bad) in pop adcb and cmp int3 push or dec pushf or or jae insl popf sub sub push adc clc test es ljmp push stc push mov sub pushl or adc sub inc push mov shr xor fucomp loope roll icebp or push pop sbb lea je dec and or pop lahf and in rorb movsl iret insl js (bad) mov inc pop pop add das cmp popf icebp or or int3 aaa mov pop add jp fmull scas inc inc test cld jns loope push pop cmpl or pop inc mov pop jo cwtl push or and jmp dec or xchg add mov imul add or pushf leave jmp mov push push (bad) add sbb pop jmp mov orb and aas es pop pop jmp lahf leave mov scas add push xchg sub sbb mov fucom sbb sbb mov inc lea js and jb sub or dec and jno add cli pusha inc popa loope in cs xorb pop jg pop movsb and fsubs mov push mov jo pop and add lods mov add dec or cmp add mov ds push pop cltd aaa (bad) cld rclb jno out pop call lods mov cmpl sbb mov pop out lahf mov stos aas jmp mov mov inc repz mov inc add xchg pop and sub push repz mov inc pop es push add ret push pop sbb int in push sbbl ljmp mov push mov (bad) inc and test xlat fstl dec dec cld stos cmp pop loope sub shr leave add mov sbb mov loop test add sbbl push mov push imul pop add outsb mov outsb dec loope (bad) push xor sbb daa mov mov jb cs push icebp ss rcrl in and xchg push xorl sub sbb cmp (bad) inc or mov pushw cmpsb lods and pop inc (bad) sub repz mov das clc in ja sti popf inc (bad) icebp andb sbb jmp ret jg loopne fstpl mov jmp inc lods xchg pop pop push add jl dec (bad) dec cmp not push push add add idiv (bad) or std mov out fucomp xchg insb jp and cs add add or cltd (bad) (bad) stc hlt and push push or aaa pushf xor jp add imul mov xchg sub inc cmp dec mov lock jno nop mov push xor popf cmp pop dec sub lahf push pop leave push (bad) lds xchg add out lock nop ss fs jb lea jmp mov pop and cmc sbb cmp mov mov scas add mov in or inc push jne and add enter add cmp pop ja lahf mov jbe push ss scas lock aas das std xor push add mov jmp or jmp mov loopne mov dec scas dec stos or ja divl cs rol add test loop rclb dec dec or jl (bad) jnp iret cli sbb sbb or or mov add loope sar icebp cmp and lahf xor push mov mov call pop iret test mov outsl and decl lock push add sub jg dec mov jmp ficomp pusha add enter std xchg and jle push (bad) push xor push out lret and sahf xor scas dec or cli test jmp cvtps2pi inc mov int3 sub mov cwtl lock sub and push dec push shlb popf jmp jnp or xchg test jl xor (bad) cs xchg icebp jae das push push jle jp xchg mov mov fnop shll and cmp in add sub cmp ljmp add add xchg cmp adc (bad) jb jp cs jl add enter or push or daa xchg fdivrp mov pop loopne push jl mov add pushf inc push mov rol das mov add inc dec pop add sbb jnp (bad) roll int3 pop dec mov pushf int pop sbb ret inc mov adc mov sub sub call test push sub push push mov subl mov test adc cmp prefetchw and xor fisubl adc fidivl aad jns cmp add sbb add (bad) mov sbb adc or data16 ds sti rcl jmp pop loope inc xor xchg jp push outsb and sub out adc adc scas sub xchg adc fneni(8087 or ds mov sbb clc sbbb sub pop cmp push and enter jo xlat add mov or iret mov jo imul stos mov pop dec testl inc jo pusha mov pop push adc sub fstps add into pop jmp add loopne lds xor adc add loope dec (bad) xor pop jmp push pop jns inc stos nop jnp sbb or or loop push fidiv pushf call cmp xchg mov fsubs adc sbb fild dec pop mov add sub adc int js push sub add push mov or push sbb mov enter and xchg movsl adc jmp xchg adc enter rorb add push push mov mov in lock xchg cmc mov mov dec pop movsb push xchg inc xor jbe ret stc or aam add out orl mov mov sbb inc adc cld repz add mov push mov mov into loopne sub xor adc jmp mov jle lsl and out mov (bad) call sub into mov jmp jns adc inc mov insb sub mov push sub rol pop out and out fidivl jmp push xor xchg add pusha push inc jg xor jmp imul xchg fisttpl (bad) test cmp mov sbb mov jmp mov (bad) in jle pop popf push fidivl xchg mov mov mov in push xchg sub fsubs or mov andb das inc push pop push and jl or or pop jl sbb insb add jp xor lock jno outsb pop push inc push bound xchg rol stos cs lods or repnz add fimull sti pop call and cwtl loop fadds or add (bad) dec pop jb flds and adc push push and psadbw dec popa clc inc mov pop cmove repnz push push and adc dec pop mov mov pop or mov stc outsl mov mov pop add aad lret or cwtl cmpsl pop outsl loopne repnz mov add dec dec pop sbb bound lahf out xchg sub jmp jle push xchg ds call push jmp cmc out outsb and cltd std jle cmp sbb popf leave lret nop loope js dec mov mov daa std push sub push hlt subl and mov (bad) lret iret mov loopne adcb out or add inc dec mov and movsl jno jnp das fistpll push jmp cmp in jbe ss jmp sbbb dec xchg cmp and pop xor and pop and nop sub pushf ficomp and scas push sbb cmc xor int nop jmp popa mov xor mov adc sub xlat sbb mov adc sbb aad sahf sub faddl iret and ds adc push xchg or movsl sbb jo sub sub loope push push mov int3 jle add (bad) in sbb xor and in or adc roll inc add inc incl outsl sub xor nopl dec (bad) lock jmp push mov shr cmp sbb lea or push xor push mov scas mov mov das xchg test loopne negl out xor rorb insb mov test xchg add mov pop push loop mov and push iret xor stos adc jge inc adc mov push inc lea or mulb dec cld ret rolb ss xor pop pop jle cmp xor sub xor out add sbb sti dec cmp stos mov jmp pop clc cli xor mov jbe jmp jo pop fildll cmp jmp lods or inc or inc push les orl (bad) aaa xchg cmp cmp pop add add fsubs fdivs dec xor imul jmp sarb (bad) pop jno push push mov add out mov das jae sti std fisttpl lock (bad) sub pop sub add adc sub in and les inc rcrl pop (bad) cmc repnz push imul in xor push mov cmc adc pusha or add add clc pop pop cmpsb (bad) jo in es xchg (bad) push or imul int movsl push lods ljmp mov test xorb outsl xor je mov popl xor pop add add clc mov outsb xor (bad) jno push mov pop clc pop hlt in jno rolb adc dec shlb inc movsl repz dec and test push push xor cs jmp or stos inc movb fwait das push pop int jnp cmc mov add (bad) ja unpckhps iret idiv adc pop scas popf xor xor inc pop cmp pop mov add pop cmp push pop pop add add sub mov cmp dec mov push or mov test push inc push push ja fdivrl jmp xchg add mov xchg decl pop and jae mov sbb push and cmc inc cmp inc and mov inc adc inc add dec enter ret pop or ret hlt mov pop pop or and imul mov jl scas adc call cmpsl jge pop pusha adc pop lgs ljmp enter icebp rorb cmp mov pop stos lds add jl andl das not inc in lcall xchg inc (bad) or bound push cli insb adc dec push rolb pop and (bad) jmp (bad) jp dec mov (bad) push aam lret push negb movb nop jge or clc pop jo sub (bad) push pop mov aas cmpsb push jl (bad) xor (bad) lock cmp ret inc mov push mov cmp jno test jbe and mov mov (bad) loopne sbb jb daa xlat sbb or and das ss in pop xchg pop sbb mov dec leave idivb jmp push xor loope loop pop fmuls push out aas push push add pop adc mov rcrl into jns pop sub or jp dec xor jae test inc fs cmp in add movsl aam cmpsl pop popa les add lock sub or mov outsb je jmp and push jb call sub xor mov jl and inc add int3 fbstp mov pop add sub jl shll adc ret and push add in add push jmp xor sarl add cwtl pop xlat (bad) sub and push sub inc push loope and pop add xchg jns add fs mov sbb mov pop mov and mov (bad) jo (bad) jns mov int mov sub mov test call push mov daa mov add inc data16 fsubr xor clc mov pop sub xor mov icebp lret clc pop lock or imul (bad) ljmp dec pop outsb rcll outsb ja mov sub add lret mov cmp lods adc mov lret arpl push lcall mov imul push sub cld enter les push xchg (bad) movsl pop jmp xchg or inc push xor movsb sub mov pop repz mov mov dec inc pop xor scas popf push cmp divl stos in lods loopne push dec repnz mov and (bad) jp int fistpll adc jne add xchg dec or and dec mov fwait jnp mov mov push andl push sub mov out movsb cmp pop add cmp jg ja loop push (bad) dec jo imul and mov les xlat add pop pop push cmc in adc into inc out dec dec mov pop in pop dec out cwtl mov rclb or push xchg pop jge inc in or add inc movb pop inc mov out mov pop jo clc ret xchg (bad) or lock das (bad) mov add inc es add mov inc fidivl or push mov cmp mov fildl pop sbb inc (bad) jne inc pop mov push pop mov pop cmp inc xchg sub cltd pop jle add adc cld push js dec pop lret sub jmp mov push ficom sub cmc xor sbb sub outsl sub data16 adc sarl inc shl fisttp aad and jne out mov sbb (bad) adc mov inc adc (bad) sub or lea icebp ret (bad) mov (bad) push dec aad adc add mov sbb cmp xchg mov inc mov les sub stos das les pop or cmp les xlat enter cli movsb aas mov cmpsl hlt mov push adc out daa cmpsl dec cmp push (bad) icebp xchg into inc (bad) jge push add stos das decb dec jmp aas das pop je pushf adc out cmp inc xchg push xchg stos push dec jmp imul (bad) call dec sub mov and cli loop fsubs imul leave pop out sbb mov push jg popa sarl inc or outsl sarl mov out sbbl sub rol iret test mov push adc add fldcw xor jle xchg dec jg mov sbb sbb lret pop push add xor bound jae xor aad adc aaa cmp mov das pop cmp pop imul mov inc out jp int (bad) or push xchg addr16 dec cld call popf les sbb leave aad or loop pop rol aas adc ficoml sub push dec xor sbb js pop sbb pop push sar mov in dec mov sub jns ds enter push mov out out dec lds mov mov xchg (bad) int mov aad shll scas ret inc cmpsl pop or leave ret repz sub sbb sbb jb or xor popf mov in mov inc sub xor and or fs ljmp jecxz out les pop inc jno std xlat add inc lods add sub mov rcrb dec (bad) dec stos out pop add and (bad) (bad) xchg inc adc fldcw lods or xlat dec fwait add popf addr16 mov movsl cld fimul mov xor jbe (bad) cmp xchg jg (bad) push push call repz icebp push jo das pop daa cmpl arpl mov sbb inc add dec adc add pop pop mov adc das adc adc fwait aaa pushf je xlat call cli stos dec and mov pop imul repnz xchg imul cs iret and push inc jmp pop ljmp add or repnz icebp and inc xor cmp push push xor dec push add adc adc std cmp inc xor jmp stos lods cmp scas psrad out out dec jnp push stos and (bad) nop test inc adc push cmova (bad) cmp pusha and add sbb mov jnp int3 (bad) jmp inc adc ds ljmp xchg dec or xor dec cmpl out mov lcall jg add sub test or mov aaa leave frstor add stc push pop fwait mov shl mov mov push mov jns aad loope jne jbe (bad) push pop sbb push and mov test repz rcrb in gs mov in adc test add xchg clc inc dec jmp imul cmp jno sbb and xor movsb ja scas fcomip insl or xor lods add inc jo sahf stos mov pop cmp mov and pop inc jbe lock lcall and inc dec mov loopne dec xor sub pop or mov fidivr sbb outsb mov xor pop xor inc hlt and mov decb maxps mov dec loopne pusha sub imulb sbb and push movsl adc mov or outsl popa and test std (bad) adc mov cmpb call jle into sub sub push lds dec out xlat pusha fs pop xchg xlat sbb mov stc mov mov shlb test sahf subb lock in xchg decb inc out xor cmp leave popf ja and adc xor lret xchg mov adcl scas popf jb clc and (bad) xchg pop fisubl jmp lahf pop rcll lods and inc xchg mov sub (bad) mov inc xor pop push jmp out pop scas jle jnp inc pop loope push jecxz lret aas dec mov jmp mov cmp lret xchg aas hlt add rorb push sbb (bad) xor loope adc loopne pop xchg add jne ret dec adc insb movsl cwtl sbb shr push bound lock mov stos mov sti push jmp add adc outsb stos mov pushf jnp dec ss hlt inc pop jmp mov cmp jge xchg sub push mov inc push jmp out add push pusha outsb sbb pop icebp call inc fwait add cmc out lds mov sub pop push add xlat repz lcall mov ret jp lahf rorb jmp adc jge xchg inc (bad) xlat arpl dec or adc adc scas les mov cwtl xor data16 jne out xchg lea frstor lahf push test cmpsl mov push add mov fstpt insl adc mov test test push mov pop xor dec jle mov mov xchg mov xchg std es push cwtl add clc push push (bad) out (bad) mov cmp pop cs push les mov (bad) pop bound fs push xor jmp mov sbb push jnp call (bad) add xor push pop adc or and rclb or pop shll shlb fisttpll dec and stc and sub fisttpll sbb (bad) das jns daa mov jmp jge add hlt iret pop jmp and jmp mov pop hlt pop push pushw insb pusha scas mov push mov push add add jmp jnp sbb mov inc lds xchg int3 cwtl out or ror lret jg loop ja ljmp sti fcomps mov mov fist les enter pushf outsb push insl loopne dec (bad) fldl pop shrb pop loop jp cmp and jns sub icebp add loopne,pt push sarl addb jnp jecxz lahf rcll shr and push add pop jmp in (bad) int3 and push pop sar push adc mov out adc jns jl daa lcall (bad) mov out or xlat push mov add adc push push jle or enter xor pushf dec jle es and or imul (bad) inc fiadd add inc inc add jmp pop push jo jg into mov mov inc das push push pop push test in jge mov testb enter or insb pop dec shll jl add mov mov loopne,pt xor bound push mov jge out lret shr stos repz popf push sti add aas xor arpl push adc dec xchg fiaddl pop (bad) and add (bad) bound jne in pusha cmp inc jge add fimull dec scas rol add and push push aad adc cmpsl xchg pop out push adc mov sbb out add cmp or jo div pop adc push add rclb je lcall nop cld xor test orb push add iret movl xchg pop shrl cmp stc nop sbb pop mov sbb ljmp or sahf dec and std inc pop popa js,pt mov jl or push test pop std stos cmc scas xor jmp test imull pop js jmp cs mov pop aaa (bad) inc call sbb xchg push subb mov mov imul sub mov dec xchg xchg insb (bad) pop dec and add mov add bound mov push fcoms (bad) jmp mov ret fldcw push dec mov inc ljmp xor mov add jmp (bad) pop push repnz outsb add jae inc jmp imul (bad) adc mov pusha mov ret mov or cmp pop xor sbb test mov add mov lcall push imul mov or push bound jl sbb jmp pop int3 int3 jge dec xor (bad) repz mov push fwait lret loope inc je pop pop push jo and xchg in ret jp sbb mov fdivl pop mov jg add loop in adc inc out pusha out pand into dec fs pop dec icebp lods pop jne loopne shl ret xor adc mov cs in pop or dec or ljmp dec (bad) xor test orb cmp pop inc add test shr push pop sbb rorb sub xor mov into inc push or sub mov ficompl push ja pop pop pop es xchg ficomp jb cmpsl jno jne imulb jbe jbe scas adc (bad) and adc fimul lds ror pop rorb in mov out out (bad) xor push push or test xchg push xchg jo pop xchg (bad) adc push arpl inc insb inc or jno xchg clc inc cmp xchg add xchg adc test inc (bad) insl mov aad loope clc adc jl jecxz sbb mov lahf inc pushaw xor xor inc adc dec jle mov roll or pusha das ljmp xchg xor jbe jp push inc or jmp jge mov xor in xchg xchg mov ret push sub movsb push imul adc ja loop dec and out push ljmp popa add orl jg sahf xchg xor xchg inc jns push mov fs insb outsb pop push xor rclb jmp xor mov lahf test jle dec sub and das lret jns adc mov jb inc and push cli xor push sub inc or jp int3 daa nop push nop (bad) adc lea or outsl lcall add xor into jle or or and xlat pusha pop insb xchg cwtl mov add lret add inc gs hlt mov mov and add xor xlat adc add loope jmp pusha in stos add mov jb sbb or xchg or xchg std mov dec add pop pop andb xchg dec adc sub dec adc cmpsb ds in repnz mov add lods dec in inc mov cmpsb pop stos test or and push push insb jg mov adc sub cs pop cmp daa push and inc pusha dec sbb inc add adc jg jmp jnp sub xchg repz imul dec loopne add dec bound cmp fcoms movsl daa and jbe xchg push (bad) xchg pop jne out fstp pop sub mov adc stos sbb adc in sub xor out push pop jp pusha add out jge xchg or ret jbe mov in xchg pop cmp push add mov sub sub adc outsl sbb sub out pop adc or push ljmp add jmp shld cmp dec pop in (bad) clc adc fisttpl out pop out sarl dec jmp cmpsl dec outsl mov mov fwait pop pop mov push sbb jns subl lea pop push dec add xchg dec subl (bad) and xchg shlb push push ja ljmp scas jb jp decb mov adc dec fucomip and add sub leave or negb aad jmp dec add jno std les test jmp sbb sub lea in and inc repnz and add sub add adc sub pushl das inc pop push jmp test movhps call inc movsb outsb (bad) dec addr16 cmpsl and data16 int jo notb repz push shll mov loopne mov imul lahf inc add loopne lcall xor sub and add roll adc or leave jb add and xor dec nop cmc lahf pop test sub mov sub das ret dec inc ds and das or cmc xchg imul sbb dec hlt test std jo jmp out pop test adc sub int3 imul out sub pop mov sub das sbb cli xor adc push mov rorb cmp data16 dec (bad) in lock jmp jmp ret dec lret dec and (bad) pop jo out jns sub movsb xchg repnz inc or sbbb and popa aaa (bad) jle fidiv out mov push mov mov xor icebp xchg fwait stos and push mov out push xor inc push cmp shlb call inc out pop mov stc or dec (bad) leave push cwtl or stc xor dec jmp imul xchg mov fcompl imul pusha or ss (bad) mov adc mov (bad) push pop and bnd shl xor xor or adcl enter imull int call jge cmp daa xchg in sub (bad) push stos insl divb pop inc hlt jno scas pushf xchg xchg adc or mov push out or xor inc xchg jp (bad) popf aas es cmp dec cwtl mov dec enter jmp daa xchg mov sub push push mov jp inc lock mov mov dec mulb ret inc inc test loop in xchg cmp cmpb clc jp pop push scas pop ret data16 aaa inc mov pop push adc loope add inc push pop xchg popf (bad) fdivl pop test lret adc loopne pop add das mov add scas int sub sub push xchg sbb (bad) insb jle fist push in or (bad) dec jg sbbl jno (bad) jge mov (bad) xlat popf (bad) dec push jmp popa sbb insl pop ret push jno imul inc mov clc pop mov fisubr mov lods pusha add jmp xchg test into mov adc or add ret sub sub jmp rcrl dec sbb and sbb jb in inc sub xchg aaa sub clc xor out lret aad mov jae inc fsubp add pop push jnp and jmp fisttpl dec jne jmp stos ficomp imul jle ret jle test ret adc cmp push add mov pop push mov adc mov push sub hlt and pop pop popf and cmp xchg cld jne sub jmp sub rcl shl jmp fstpt and sub push cmp push cmp mov pop ror xchg (bad) jp shr cmp jg sbb sti fsubr xchg repnz adc (bad) mov and pop push cmp fdivrl mov fwait xor lods divb xlat cli incl sub mov mov cs xor pop (bad) jecxz sub pop sub rolb xorl mov mov cs cmp or cwtl popa rorb cmpsl out cld cld sub sbb sub das cmp (bad) daa xlat daa lret ret out push test push mov jnp jl cmpsl cltd nop dec push push aas mov pop fisttpl jne outsl (bad) xor cmp mov sbb push bound ret bnd jmp mov ljmp fisubl add inc jmp sub test sti loop test pop jmp mov sbb cs mov mov adc add push sub jge xor out movsb out jne cmp and rorb xor and jnp leave xor (bad) pop push sub fucom test subl sub dec mov lds jmp fs sbb rclb into mov xchg enter jg addr16 jge push lea inc pop xor adc mov add test lock imul pop lret jecxz jbe jmp or push cld lret aaa and mov pop inc enter add pop scas cmpsb inc sbb adc clc lret or (bad) xor dec loopne push pop mov sub popf push mov insb inc movl push stos popf stc cli (bad) out int3 and push and adc mov scas es fmulp das lret testb outsl push mov mov ss bound add xlat add push dec add cmpl pop std jle or sub mov aas jmp push pusha ret outsl cmp fadds jmp push (bad) lods addr16 xor and xorb (bad) movsl rorb test mov lock movsl (bad) loope movsb jp inc aam fs sub jl cmc (bad) mov push push add frstor pop cmp loope cs movsl pop sub stc adcl jo imul xlat mov je push pop cmp fsubrl inc std loop adc (bad) hlt mov iret pop adc sub push xchg outsl mov fcomps ret pop shl add ljmp pop add daa sar mov mov pop pop and jg and push ja xchg movsb lods lret inc push pop sbb ljmp sbb shlb and inc pop scas xchg mov subl shl (bad) lret jno pop xor leave shrb jle imul mov scas cld jmp inc xlat and mov ds hlt mov xor inc int3 mov fwait out add pop adc scas loopne or in push shr cmp nop xchg pop cmc add push ja insl lret hlt (bad) lods dec push popl int fimull decl aam inc add xlat xor pop daa fldcw xor loopne xchg push in add pop out jmp iret popf cmpl and popf out mov popa repnz or daa jb sarl push xchg jge push hlt or jmp inc rcll cmc inc add jns cmp js jg and ret sub sbb sub mov jnp idivb pusha inc add add jmp or out test cld and call push test out sub outsl adc ljmp mov aaa mov jbe sbb ds testb out push push call add dec jl jno mov repnz mov nop sti pop xchg pop xor xchg add sbb lcall pop or bound inc and das and inc sarb cmp pushf lock pop fcoms inc (bad) push fwait addr16 jp push outsl push pop rol add add jmp rorl rorb sbb xchg xchg xor std pop xor inc stos es lods jmp mov pop push xor push xchg or (bad) sub fisub xchg aaa ret scas enter pusha scas lods inc lock push imul pop (bad) pop subl jecxz sbb xor sti cli pop inc lods inc sarb imul std mov leave jb push or ljmp inc mov push in inc jg push repz push pop xchg and add das jp dec fstps pop mov icebp out or ucomiss inc or cs pop std inc pop mov xorl cmp xor fadds jbe pop jo mov subb adc adc fldl add insl inc push in fwait stos cwtl out mov xchg scas add cmpsl add dec mov neg sahf adc xor pop sub shll mov aad fild jg negb subl daa pop adcl lea lea or pop mov fisttpl pop sub pop pop push push (bad) push add pop int3 les in loope (bad) push jb (bad) sar dec push jmp and mov and (bad) mov (bad) pop cs cmc add pop dec fstpl mov or subl mov loop inc mov inc in push pop fsubs sub push in jecxz cmpsl mov add pop and add addb mov xchg xlat cwtl aam push lcall jns lock inc scas sbb sbb jns push mov mov mov mov push and jae bound dec mov and mov push inc jnp (bad) pop xchg mov xor test mov push fcomps (bad) push pop xor jle adc icebp dec adc mov xchg jge sub call rclb loop icebp push cs scas add in iret shrl ret ja dec bound or mov push mov test and fnstenv or xor idivl shr int push ja (bad) gs dec xchg add pusha adc mov push jmp push (bad) jecxz,pn aaa push mov push or adc fsts jne jns dec loope int out pusha add mov and in jnp fcom add scas test mov mov (bad) pop pop lods outsl add or subb or insb mov xchg dec les cmpl push in lock enter sub roll adc outsl mov xlat daa dec lds lock xchg jae fucomp xchg pop (bad) gs insl out cmp or jne cmp add cld xchg xchg add out xor pop add or adc pusha mov cmp add sbb xor adc cmp xor data16 xor xor fwait ret and or (bad) or (bad) repnz xchg rcrb push (bad) mov stc sub adc mov inc inc out ficom in rorl divps mov (bad) or or loope out or and pop xor popfw js or gs mov pop dec sub xlat mov ficom sub pop in mov jo xchg push setne and rcl sub insb jae pop popa mov jne test pop add mov jl xchg add (bad) jge addl xchg daa push pop jae or or jb sbb xor sbb mov das inc xor sbb sbb xlat and stos imul icebp js xor adc mov inc ret or xchg mov enter push push xchg push adc mov enter mov dec stos dec push lret dec fisttp (bad) ss jg xchg sub repz lret push arpl jge pop pop cwtl les cwtl jmp (bad) lret jnp sub jmp lcall ds or push pop push inc jmp mov mov aad lahf pop and mov push out dec xor js dec sarb cmpsl add inc cli cmp loop jae rolb mov and push sub jmp sarl aad cmp in or ret adc and imul std jecxz rcrl xchg mov jp dec pop pop pushf push xchg rcrb and dec pop xchg inc jo clc (bad) (bad) jmp (bad) popf data16 daa dec imul adc outsb ljmp lock pushw jp mov mov and push dec imul in xor js adc arpl leave jo stc or xor add cmc jge mov in mov add and pushf call inc pop pop jmp mov cmpsl jecxz add cmpsl dec sbb xchg (bad) dec jb sti mov xor pop in in add jnp jo add and pop add xchg es adc dec shlb or (bad) dec jge xchg mov sbb jnp adc out insb mov sbb push sub mov sub cmp jb add pusha add nop (bad) cmp dec adc std repz jo (bad) mov fbld cmp (bad) les in sbb mov inc inc arpl push (bad) lahf lret add jecxz adc call or lret lea inc adc inc sahf ret shll or pop add into hlt fildl push in fsts sbb lret jmp roll popa leave jge out dec inc clc xchg add js add sbb add xor or mulb xchg pusha in xchg mov xor add dec iret mov js rclb jno cmp jns frstor outsl test pop xchg mov dec incb insb add out clc cmp push sbb mov mov or ja jg roll inc inc js popa and icebp adc inc mov lahf mov pop sbb inc (bad) jmp (bad) lods and pop inc mov add fisttp lock insb push fdivl enter test sub pop (bad) je out clc xor push dec fwait xor int3 add aam adcl push jb xor cmp xor imul subb pop in pop movsb inc xor pusha iret pop bsf lods inc push jne popa push lods or xor stos in dec adc and repz jg bound mov cmp adc (bad) sbb sub cli add add insl (bad) lret rol xchg or and xlat test not rcrl imul sub aas sbb cs (bad) pop jmp mov sub cmp and cwtl jo testb data16 mov outsb dec cmc (bad) int3 mov data16 jle jle sbb pop ficompl loope add call (bad) das jae or push mov fsubrs dec push out xor out je mov adc outsl adc (bad) jbe cmp sub inc push mov xchg jle mov loop ja in add adc loope mov lds dec ds out adc jmp mov mov mov imul and rorb push dec sbb arpl insl ret in repnz xchg (bad) into std dec mov test pop sub jns imul leave push (bad) stos inc push add jg iret outsb add fsubrp mov fucomip (bad) lcall xchg repnz or adc lock popfw jnp add jmp add push pop pusha js imul xor pop add mov sbb add test loope loop or popa sub stc pop sub inc fwait cmp cltd cld cltd and insl mov lret bound lods xor add and xchg les adc cwtl loope add sbb adc out mov or pop jmp mov jl adc inc and mov or pop (bad) shld sub dec jl add mov adc outsl jecxz jmp fidivr pop test mov ja mov pop cmp fsts test (bad) jl jns pop adc or pop jmp push mov ret or jp pop lods ret ja jmp dec popa (bad) outsl adc int3 adc or je or mov jne sbb aam xchg pushf mov (bad) dec mov dec mov jle push lret and (bad) clc movsb sarl lods sub mov test stc ss and insl mov dec xor push ljmp cmpsb mov test mov jbe sub clc ret add cmpb popa mov mov mov adc stos push jle dec adc icebp xchg jp dec divb clc les push mov out mov loopne aaa out push mov and and das jb stos cmpl test add sbb scas test cli push in in rcrb test roll mov (bad) cld (bad) mov jp ret dec hlt call add dec subb jmp mov mov pop loop rorl or lea mov adc mov cmp loopne ret les mov mov dec int3 push ja adc or es inc sti nop sbb mov int xchg mov mov nop (bad) nop (bad) mov addr16 jb jg xor cmp and inc push xor addr16 imul mov ret push push push mov push rorl into int aam or fisubl arpl dec jmp and ja jg int3 std pop and out lahf push daa cwtl negl sub add jo dec rep jne push in sbb je mov xchg movsl jne cmp test rorl xchg xor inc cmp pop sub and xor imul dec mov sbb xchg mov adc pop push mov jl (bad) jbe xor scas mov push scas je pushl sbb pop xor cs dec mov stc dec adc ljmp xchg jb add cmp mov jmp fstl jb sub jl pop ljmp out inc adc ss pop notl xor add xchg push mov jecxz rclb or dec jae dec lock jmp je adc js pusha outsl pop fs fs push add jp add aam cli loopne gs mov fildll xchg jno in mov pop lahf ds nop inc ja cli sub sub sbb call popa pop pop mov mov add arpl inc pop aam cmc xchg jge (bad) jb or inc push sub add push xchg cmpsb pop push jb sbb mov pop mov scas and outsl add clc stos push adc sub adc call stos sub (bad) adc fimull mov lods add cli push mov mov pop add push daa bnd mov and aad inc or insl sbb sbb das cmpsb inc or jp pop add push xchg das subb lea movsl xor adc pop dec push mov add pop jmp loope outsl adc cltd mov mov adc out (bad) adc idivl xchg std pop xchg dec or pop push jmp in dec ds leave sbb mov rol call shl pop dec mov push adc std hlt mov or outsb pop and repnz xchg popf and imul mov test ljmp addb lods dec xchg ret call std sbb outsl imul sub leave add inc jmp dec les xor mov aaa or mov cli movsb stos fidivl (bad) aam out sarl pushf and push pop (bad) jne clc cmp sbb lcall push pop outsl inc call outsl push xchg sbbl shrb insl stc leave lahf fsts movsl push lret mov (bad) outsl jmp (bad) sub sub mov xchg add ret add (bad) sub shll push sbb fmul push lods out ror inc sub neg loope dec sub in loopne jne jge test inc cmc aad sub pop mov or cmp sbb push hlt inc push cld push lds fdivr push push clc cmp sbb jge push pusha das cmp and mov dec int adc add inc mov mov adc sbb or loope xorb push test or jns push in adc cmp jle mov stc mov mov lods inc notb test jle jecxz or addr16 out mov repnz negb adc cmp adc in push pop sub hlt popf imul add sbb hlt pop inc add fisubrl jmp push inc (bad) xor in fnstenv and ljmp cmpb mov ret push lods or (bad) hlt sub lcall imul sahf out jmp scas dec imul push mov or (bad) cvtps2pi call imul pop lock xchg imul mov cwtl mov push push scas inc scas insb cmp dec and xchg add or xlat push int3 sub lods test xchg call sbb add pop xor test xchg mov sbbl sbb test and pop push jmp or xor les pop out loop xlat mov (bad) xchg dec lret mov and lret push inc adc inc sbb loopne,pt cmp pop test pop in dec jmp cltd sbb jg add push sahf mov sahf jae sbb or push add mov cs add pop jge jbe jecxz call fcmovnb mov and ds xchg into (bad) leave add jo inc bound sub loop daa adc shr adc inc or or and add stos mov pusha add pop and pop push push shlb or xor in fstpl dec push enter je mov xor shlb push rorl sub cmp jb and fimul sbb data16 mov lret addr16 (bad) and or ja (bad) das pop jl mov lret shl sub lret dec push fisubrl gs adc call adc (bad) pop lods fimull mov dec mov xor fidivl pop push mov lods inc insl (bad) push mov (bad) icebp lret addr16 loopne xchg dec push addr16 push push pop lret sub int pop gs neg loope fldl sbb out (bad) inc mov mov pop lods data16 pop popf or push es xor ror enter shlb sbb jmp push pop push pushf sbb (bad) cld push add repnz insb push mov and jp repz or ficom dec jne push xchg sbb xchg inc jmp push stos mov in inc mov sarl aad jmp xor inc or inc jl mov mov add pmuludq mov lahf popa int3 ret std xchg xchg out mov push cltd sbb and push jnp jno (bad) fidivrl clc (bad) aam sbb push xlat xor adc push xchg andl inc movsb fdivs mov jbe out mov fild adc add nop lds mov push jl inc or pop fs fsts add jge ficomp push inc and dec test fiadd or xchg pop shl push or pop enter add adc popl pop sub rclb icebp adc jmp and pop xor hlt dec jmp cwtl stc and push jle xchg rcrb mov outsb repz in scas or adc add stc pop xor out sub mov pop jno mov push enter add lea int jl dec aas jne (bad) in sbb mov mov push bound or adc mov lock jmp xchg dec sbb mov sub jmp inc cs lret inc cltd in push mov xchg lock leave lret pop xlat and xor cmp bnd (bad) mov or mov xor and pop aas fiadd icebp and scas cwtl shlb stc ret popa loopne jbe or gs jmp arpl and xchg or inc jmp out fdivrs push pop fwait mov and pusha dec xlat loopne (bad) or cmp frstor inc sub mov jne dec clc sub jg std ljmp ret jmp insb (bad) test push mov add sub and ljmp (bad) popa imul dec jb xchg andb cmpb rep jg,pn pop push jmp jns or jnp clc sub in cmp stos cltd adc mov add repz ss ja les mov mov sbb cmp aam push push ror dec push mov pop es push test push jno movsl iret insb sbb ds int3 jle (bad) repnz mov out and jmp test int3 push ljmp aam dec insl sub scas aad add add adc fisttp mov pop loope jg cmc lods or push mov sub cli int3 shrb adc imulb (bad) mov sub sarb sbb adc (bad) pop xchg add dec jle sbb cmpsl pop call (bad) (bad) dec push notb push ret lret movsb ja jno xor (bad) (bad) dec mov mov mov fnstenv add cmpsb gs in jno scas add push mov jae not fadds jns mov mov int mov mov jl dec jecxz popf push lret dec cli je dec (bad) sub andl icebp jmp out push cld mov dec mov aas xor (bad) adc outsb ljmp (bad) mov lods loop or jns into decb push mov mov cmp cmp and jp ret inc divb mov mov dec add cmc call jmp cmp daa pop pop jmp inc mov sub inc xchg adc sub pop ret or in jg push pop (bad) and dec add adc push jmp mov cwtl push stos mov icebp mov out loope or rolb loop pop push or xchg test pop xlat sub sahf cs fsub cmp push das clc add sbb xor or push mov or jb cmp jmp loop sub cmpsb push (bad) mov lahf pop jb cs or pop sarl jbe jmp jle gs dec inc shr pop (bad) out (bad) ja stc daa fsub imul push pop xlat inc dec daa je rolb mov add arpl popf jmp and xor jle out int3 sub std loope sub (bad) xor or mov insl inc adc push test mov mov sahf push adcb dec pop and mov sub fs in ficom (bad) or (bad) inc stc pop idiv sub mov dec jmp das test ficompl xor mov push cmc (bad) xor sbb or pop lods sahf les sub pop out (bad) (bad) push push cmpsl out shr fsubl in mov sti sbb cld push out jbe xlat xchg in cmc cmc adc mov cld sub pop add xor xlat add push int3 aas cmp not push pop push sub mov sub stos xchg in xor push push sub loopne inc cs or jmp ja cs mov cmpsl jmp cmpsl scas out vpshlq mov jns pop push push pop orb adc xor jmp nop pop inc push sub sub adc xor cmpsb jl pop add pushf dec push test sti hlt jl out cmpsl mov pop and sbb mov loop jl dec mov call pushf inc jne rclb xchg (bad) iret inc insb cmp pop movsl lgdtl xchg es cmp mov mov or push and pop insb and xchg ret xor push lret pop lods fsubrs mov fist dec push fadd xchg push mov adc pop push add test cmpsb jne xchg out sub and add loopne fiadd add mov mov mov and xchg fisttp out pop iret lahf xlat dec stos push rcrb sub repnz (bad) cld mov or mov leave fisub cmc fnsave (bad) fwait out cld in push addb add or pop shl enter addl mov fstl nop mov scas add ja insl dec decb shrb pop scas test jmp std inc xchg imul repnz push test mov inc int jp movb jmp jno xchg outsb test cmp in mov or jns xchg pusha and inc (bad) cmp inc xchg lahf les or jae xor add sub fmull pop push sub pop push gs cli pushf mov sbb and icebp dec jb (bad) or and xchg shrl pop cmpsb jns loop pop sti sub dec mov stos push push pusha mov cwtl sbb je push and cmc jg shrl push movsb push add shr add outsl loopne mov push aaa push movsb inc mov inc dec addr16 jp movsl mov rcr and inc mov mov jecxz mov cmp js adc sub push xchg rcrl es mov or das mov dec or adc ja (bad) and sbb hlt mov add or dec fidivl (bad) aaa mov enter add add pop stos sub or lea rcrb rclb pop das mov ljmp xchg int3 cmp dec and pop std in lods mov (bad) stos sti test ljmp mov lahf nop and popa push inc and mov leave sub add push jns pop in and pushf push mov pop les push les mov mov rcl mov xchg fisubrl std mov addb inc bound pop cmpsl lcall loopne enter or push lcall mov adc scas loope les popa inc in jnp or les or int mov rcrl idiv adc xchg das cmpsl scas rorb popa add fwait or push cmp or or add mov in mov lea ret ja cld lcall in lret xor jg stos or inc les inc xchg jno mov pusha and cli push mov inc clc ja pusha out out mov outsb clc outsb mov pop mov dec mov mov add out mov dec add mov sub mov adc cmp divb rcll movsl pushf icebp pop (bad) dec mov insb mov cwtl sub fsubrs (bad) out jg add dec shl xor sub rolb dec jle pusha and mov fwait sbb aaa dec mov pop rcl mov out stc and (bad) add cmp and push jo ret scas mov or push lret or xor jge cmp mov jmp sbbl cmp xor bound dec push mov mulb call and adc add (bad) push push popf cld test dec mov lods nop fimull int3 cmp fs sub xchg pop pop test add jmp test pop sarb dec push nop ja mov or adc inc push std inc mov test push inc or or fsin xor inc or xchg mov ljmp mov jb pop inc gs push jno test sbb loop jmp add (bad) or pop popf decl in lods jmp loopne fdivrp cmp mov pop out ds xor mov jns rcrl cltd mov inc dec cld or push mov sbb icebp decb xor jp sbb xchg sub popa fdivr jmp sub orl out (bad) loopne lock xorb and data16 sbb js ret add adc push add and add add popf sub cltd pop es push or movb lret or pop movl bound sub pushf cltd and push pop inc mov or les cs push sbb les sbb adc (bad) sbb and adcl sub subl insb test jno sbb daa mov out or dec adc stc xchg pusha and mov adc fwait add nop stc mov dec loope fsts int3 cmp mov or dec adc adc xor test stc test sub cmp sbb repz das adc into adc pop sbb fsubs or insl adcb add jp jb mov cmp mov jb outsl push mov movhps or adc or stc or mov inc stos cld sbb ds adc xorl sub add imul mov xchg mov pop int3 jns xchg (bad) in or push cld mov out adc movsl add mov mov jl jmp xchg sbb inc add or cltd pop and outsl and xor add pop call and mov xchg add sub or aas jno sub adc (bad) loop in or in or les inc cwtl add cltd (bad) rcll test xchg lcall jmp add dec cmp adc cmpsb ret cmc inc push shll clc jae xor add pop jl adc gs add mov cmp sub mov neg mov xchg dec add push xor xor lds sbb adc pop mov xorl add sub sub mov sub repnz clc adc push dec pop push push or sub sbb jl roll xor enter call mov mov insl add mov out pop mov xor or sub ret fwait and adc into insb xchg mov dec cmc lods int3 push and mov sbb push push sub out lahf add and add adc idivl and ljmp push and add orl ret or test push movsl stos fnstenv insb pop dec ljmp push ja sbb insb cmpsb add dec or or and cltd sbb clc jne (bad) pop cs mov mov nop lcall imul pop fcoml test sbb fs pop loope outsl push sahf push push cmp cmp (bad) pop and cld cmpsl push mulb push push jge sbb (bad) sub push push pop jg lods pxor or clc jbe fwait and shrl push push lcall mov pop sub subl dec repz mov (bad) movsl or cmp dec xor or mov and push push das aam das jle and pop pop mov mov jnp leave pop mov push and inc adc repnz fistpll sbb inc push or sbb xchg aas insl (bad) mov or and add push inc int (bad) jge jbe std lcall mov out push cld cmp jae mov add popa mov inc pop cli mov scas mov cwtl mov out icebp xchg (bad) outsb int3 jnp jge lock mov add fwait pop sub cmp bswap or repnz (bad) insl div inc and loopne dec and and rcrb xor jp xchg adc stc inc ret rolb dec push imul sbbl fist pop pop cmp cmpsl push sbbl jne and push push lret xor adc add inc inc fnsave lcall sub jb add rcll nop or fcoml aas lcall sbb daa xor dec xchg je ret (bad) jb jo push add mov lahf rcrb xor loope sti outsl adc inc mov pop negl add icebp xchg and xor aam push mov dec cmp pop mov cmp push leave pop cwtl js loop xchg pop push pushl enter sbb inc icebp jmp or iret fucomip sbb test das sarl int or sub movsb pop cmp loopne jp and imul popf imul and dec hlt dec aas loopne pop dec inc sti rcll sbb dec loope add pop jge and add push sbb sub mov inc or in xchg mov test push orb push push mov imul pop mov out jns mov jae and es lahf push and mov ja adc imul push xchg push ret or mov dec sub mov jecxz sub dec inc or jo arpl dec aas aas jge out das dec and or jl ja or xor push daa pushf cmp std sahf (bad) or add xor cmc or int3 push jecxz enter and or (bad) or pop shlb jecxz (bad) and sub xor add push sub pop dec or ljmp adc call or jmp loop pop mov and push je adc jg jmp sub lods pusha clc pop or popf lret jb pop push push or push pop xor (bad) das pop mov movsl lds add pop add or jno jp negb fsubr adc push push in (bad) jecxz dec scas iret lret and mov test fs out addl ds dec add outsl aam stos jecxz leave push add push or iret ds aaa pop sub adc sub pop loop lret xchg addl lods jb push js clc js mov aad in mov cmp scas jns scas minps in je enter (bad) pop adc and add stos jge mov flds pop stos addr16 sbb jne insb jmp or inc pusha xorb mov xchg popa or jno jle sub fild pop call mov xchg addb mov push jg pop inc out adc aam xor mov adc sbb pop sub dec cltd push js sbb add jb cmpsl adc dec and sub aam cmp inc sub jae jne inc ja inc mov add mov test and in jmp jl ljmp (bad) lret sbb mov insl xchg shrl jle adc mov push push sbb add sub mov sbb dec sub sbb or cmp mov mov sbb jmp or repz fildl jb jle mov (bad) les iret mov pop push mov inc cmp adc add mov pop xor pop in xor xchg mov pop and or or sub lret pop xor gs xor push incb sub jg add (bad) cmp mov stc dec test leave ret jge loopne adc pop jecxz,pn pop push mov xchg inc cmpsb lds sbb cmpb aaa test push dec js mov mov mov adc pop cmp and pop pop data16 jno test or mov adc cld adc popf imulb or in pop sti cwtl test inc sub push sbb push push testb or (bad) push or loope sub scas fwait rcrl or in outsb pop (bad) pop add jns out int and pop mov popa je roll push and or pop adc dec xor push or jbe test scas mov lcall cmp add imul or lods and sub push das jbe jp adc push xor loopne add clc or pop cmp pusha mov cwtl push mov fsubr xchg cmc pop add pop push push add dec xchg add inc out jg mov pusha jb xor push lcall out or ret pop jge rorl pop push push inc sbb mov jb mov mov cmpsb insl ret arpl cld mov and dec not xchg add lahf push cld outsl xor pusha pop cmpsb inc das sbb mov pop push mov pop dec ficompl pop inc imul and mov adc jbe inc jle ss fistpl rcll xchg dec or scas add xor mov das das pop and sti mov pop aam jb in jmp dec negb or data16 jo sub dec add inc hlt pop (bad) cmp insb jge cmp mov inc add mov xor ss mov pop inc add pop sub jmp les or inc add (bad) bound stos cli adc sahf jge,pt out and scas cli and sub pop jge aam ret icebp jns or imul dec xchg pop add jae mov (bad) rcrb jmp dec jnp jae adc add insb cli dec incl out das sub xor add or jg pop hlt add mov inc pop incb and add push push push dec mov jmp and dec cmc lds xchg cmp lahf clc loopne outsl ds mov daa rclb lds das mov imul cmp movsl cmovbe js cmpsl mov xor xchg sbb mov sub jp jne inc pop btr sbb sahf sbb ret shl push or fsubs sbb inc daa xchg (bad) inc mov shl fdivs clc fsubp popf sbb shr negl pop mov sub xor adc mov xchg popa daa push sbb mov ja,pn jp dec or iret je xchg (bad) arpl jg and mov xchg mov push dec not inc loop mov cmpsb and and in adc fsubs jnp movsl cmpsl and mov andl adc lahf xor cmp jmp push push xlat add ret enter jp es popa adc js in int pop pushf shlb xor jbe negb adc add cld loopne cmp xor dec rol imul shrb in inc jg xchg add mov add loope inc je push mov rcrb push cwtl sahf push push push inc movsl sub adc pusha in into or es adcb pop dec movsb jl sbb js add adc das in add and addr16 xor mov sub push into in adc scas push aad adc xor push lcall add sbb iret cwtl lret xchg loopne push xchg data16 push dec or push pop add pminsw (bad) divl inc outsl call jmp shll mov and pop jmp mov test mov dec in imul mov cmc out add add dec les xchg cmp sti push lret sti enter in add test add and or insb dec jae adc jnp out or pop repnz dec (bad) loopne (bad) popf inc lds call xchg stc addb cmp out cmp aaa sbb jl dec scas or add mov popf push sub subb add cmc and dec lahf push (bad) lock mov cli pop xchg sub pusha or inc push cmp test scas cltd adc pop popa add ss push lret sbbl aas sbb popf jl jecxz insl dec mov sub rcll insl jmp jle ret cmp jecxz pop in inc fldcw stos dec (bad) (bad) adc lds push push dec push mov test call ds clc xchg loopne adc lahf mulb jo aaa lret adc sbb ja cmc inc jl push mov or loope ds sub jnp dec scas mov cmc jbe mov aad cmp fnop out mov push hlt mov mov sarl movsb mov ljmp or sbb test mov inc xchg cwtl inc pop lods in xchg pop cli and push test fildll or cs orl lea mul or out and ss dec push cmp add insb js ds in sahf sbb adc add and xor enter repz ljmp push cwtl mov daa aaa sbb mov outsb std cwtl add and jmp in stos and loop pop pop add repnz jmp pop neg dec mov xor leave add xchg push ljmp dec pop add leave add jl arpl or fsubrs jmp mov daa sbb outsb insl pop inc loopne sub inc mov mov inc xchg insl aad aam lods arpl pusha outsl repz das cld sub insl or lods imul scas sub push in inc leave and fild mov sbb jae ret mov jno aas (bad) dec dec cmc jecxz loop leave lock ds loopne add sub pop jne sbb mov xchg icebp ja mov fs out inc into and fwait push jbe (bad) or add iret dec mov ret pop xchg test pop mov adc push mov pop sbb call mov push xor rcrl fs enter sbb je movswl or and cmp inc lahf test add call clc outsb in add in jnp ret mov add pop mov or cmpsb icebp dec pusha out cwtl (bad) fist das add mov cmc xor nop stc mov bnd xor pop xchg push mov int3 mov in dec pop sub neg jmp adc andl sub mov xor lret add add (bad) adc push and dec jmp rcrb and adc (bad) mov dec or adc test jge ret jmp (bad) fnop or lds inc pop mov div stc jb or mov std repnz cmp sti jb mov cmpsl repnz xor (bad) test push scas (bad) jmp icebp sbb sub cwtl dec pop mov push loop jns inc shrb ret pop or pusha push mov add jnp dec pop jmp cmc mov lret adc in jl and sbb lret rclb out shlb ljmp xchg pop xor dec or and (bad) adc es loopne xor add ss dec or jb mov push push fldenv mov pop mov mov mov fdivr pop jae xchg fwait es (bad) or jb ret add jecxz xor mov mov or jle loope call js add inc addb das push push adc bound push and movsb add sbb jg cmp jb pop adc imul add jmp cmp jmp mov pop mov dec jmp jmp cmc pop out out and hlt jge cwtl sub xchg mov xor push sbb sub addr16 jmp push in xchg gs popa ds and jae mov push (bad) insb push movsb lea jg dec adc add push sbb jle inc pop cs inc push jmp enter repnz cmp jmp rcl xchg popa cwtl dec add xor repz mov push push add or mov inc jmp lods push cli and out or pop adc cmp nop ljmp sbb adc mov gs sub pop cmp adc test repz daa pop xchg mov jmp lea pop fisttpl dec push add out pop push push adc sbb add and aas test nop in dec rcrb push inc (bad) insb out or xchg mov or jo push dec pop int3 add iret or or lcall pop push push pop sub dec jno call notb outsl std xor jnp,pn pop std mov adc push (bad) pop cli or inc pop (bad) cmpxchg8b push push outsb leave pop pop stc cmp aad mov and lea clc or stos (bad) or pop aaa (bad) xor mov aad (bad) mov (bad) ficomp scas mov push mov js jns movsl or inc push das pop jne and push mov cmp push cli push cwtl cmp or or popa das jge mov xchg mov inc sub pop mov adc push mov add xchg inc pop cmp sub pop arpl push jae pusha and out cmp and or movsb (bad) into cmovbe aas lahf orb jns out adc cmpsl js and (bad) or pop or pop neg je icebp or jmp jecxz push add sti add ljmp pop pop cmp sub (bad) push in rolb fmull (bad) popf xor scas or jl sub sbb adc xchg addl inc movsl (bad) xchg add pop pop jmp dec sub outsb pop rcrb sub cmp gs aad lds out jle out lahf pop sbbb in add pop push add jl pop push mov xor mov fistpl test mov sub xchg push and sbbl mov stc je aas daa addb clc jl test std (bad) sbb jb nop jne sahf mov sbb and pop jae add insl sbb sbbl push mov arpl ljmp not push adcl adcl sbb xchg mov inc rcrl jo or jmp adc imul sbb push daa mov adcl (bad) in push shld out xlat sub test jp xadd (bad) jg jmp pop or pop or jns (bad) mov rorb ja outsl cmp adc cwtl pop or and sub xchg ljmpw mov rorb lcall cmp pop not sbb sbb lahf mov mov xchg push int das mov sbb cltd and push mov xchg sbb xchg jne rorl fs jg loop mov xor mov mov dec mov add xor xor add loope sub dec push cltd cmp enter adc imul dec outsb jmp jl call aas dec add dec inc sbb int mov sub dec jle mov mov pop pop ds scas dec ret test inc xchg dec ljmp mov inc das or icebp cmp sub repz jne cwtl push add add call adc sub cltd mulb cld mov ficompl test mov in rol or sbb xchg fistp lods cli xor mov cmp adc add dec bnd (bad) xor imul daa inc enter pop (bad) test test pop rclb js into repz sub sti sbb std (bad) dec daa and and mov lock jg mov cwtl loope mov xor rcll mov push jl bound add push fbld pop add push add pop (bad) jg cmpsb test add mov jecxz mov mov xor pop cli jb mulb aad daa adc lea dec popa fdivrl enter xlat mov into ljmp or (bad) test jg dec cmp or jo stos jnp adc sub ret pop dec popa jmp mov lahf shll jp cmp adc das add addr16 ja adc enter cmpb scas sub or cli push or notl mov scas (bad) mov pop das adc sbb scas adc sbbb add sub cld cs or push cmp aad fsubl movsb adc push xchg sbbl pop adc mov jmp dec jo fs dec pushf arpl std jo mov xor mov push dec xchg or fmuls xchg sti adcb sarl jmp inc les lret mov pop je pop mov pop out jbe loope jle sub cwtl ficomp inc pop clc cmpb add out mov push pop add test jno cmp pop mov xor cmp mov fisubr cmpl iret jl mov or mov pop xchg or test push push popa insb inc add mov sub xchg adc (bad) or jp sbb test adc xchg cli push sahf inc or lahf or dec std push add mov mov pop stc jb stos dec or in inc xor fadds lock jo jmp push (bad) hlt ds iret cmp xor cmpxchg inc push in popf loopne je sar and js daa stc inc iret cmpb push or or call adc and ljmp ret cmc pop xor cmp xchg add pushf mov or inc dec jmp nop mov sbb rcl or cmpsl and sbb fiadd inc ret add test sub or push mov mov xchg xchg push daa mov push sub mov loope rorl sbb add rcrl inc sub push movl adc loopne add jne xchg sahf mov jns popa ret (bad) fmulp cmpsl lcall pop loop xchg ljmp push add pop mov jmp jnp cmp inc cmc dec cwtl inc pop and pop push lahf aas in sub (bad) fldl (bad) flds add sub in pop pusha sbb xor pop pop decl mov insb push sub inc mov pop pop lret je imul push aaa or (bad) jae out sarb or inc xchg pop sub test leave push bound cli cli inc ja jae xchg pop mov dec out xchg sbb divl cmp add mov cmp inc inc mov bound dec sbb or (bad) fistpl in add pop dec scas int3 mov enter stos int3 std jg sub sbb pop fiadd push js sub popa (bad) roll jecxz mov and and pop xor mov add sub jmp addl enter arpl aas sbb dec push mov orl arpl cmp sti (bad) and shr sbbb dec loopne sahf and fadd hlt test mov xchg imul fsubrs out gs out cmc cmpsl xor adc push cmc scas rolb dec notl pop mov mov sbb shr add aam int3 repz jle ja adc mov (bad) fstps sbb imull push push jnp xchg clc aaa rep mov and adc cli xor xlat or icebp (bad) and pop jge loopne,pt add jb add or add pop mov push sbb mov inc cli and push dec pop and sahf push mov xor adc rorl ds pop or xor adc out or sub xor adc push mov scas (bad) add sub call jg aam jmp fsubrl xchg lret out gs inc xchg push mov mov pushl stos pop (bad) pusha (bad) adc xor push int3 out cmp dec scas and rolb or pop push mul imul or ss dec sub xor outsb sarb push clc inc mov adcb cmpsl jnp or xor outsb jbe addl lret pushf cmp add mov add stos xchg cmp and pop xor rorl or mov push and mov mov (bad) fsubrl add test jmp cmpsb pop xor push sub icebp addb jmp pop sub cmp arpl in sub pop sub (bad) pop xchg out popa xchg cmpsb in neg push jge inc pop aas lods push xchg push or pop adc pop (bad) xlat push fs inc adc push movsb dec loope push arpl test neg jbe shl adc jb jmp std (bad) jbe mov xchg sub imul adc push jg mov push jo add inc cmp cmpsl pop jp jge incl xor or push add std cld push sub xchg (bad) or jp jmp daa pop pop std scas jns leave pop push rcrb sbb inc or aas daa aaa jecxz js xor mov xor cmpsb jo push inc jmp ret shr lods dec loop js push pusha pop add ss sub aam sub pop daa pop repnz repz (bad) out jmp pusha jecxz das out xor jmp inc adc mov sbb or ja or and (bad) xor pop lods adc cmp jmp cwtl and loope scas fisubr leave xor cs outsb repz pop ret sub push mov push mov mov js mov popf jne push cmpsl cmc cmpsb xchg xor inc jmp popf fbstp cld repnz push add sbb loop dec dec mov bound and dec mov test or shrb rclb mov jp push nop xchg stos movsb jne mov mov adc sbb cmp push jmp in jnp repnz (bad) xor cltd xchg popf insl (bad) jg nop bound cmc mov cmpsb das xchg cmp sbb or pop fcomp lahf pop (bad) pop push ds mov push mov and dec push aas sub push xchg mov push std sti movsl dec scas jmp pop jo pusha push cmp xor adc stc lods or mov (bad) loopne or cmp add mov add ss cmp scas lock cmp sub jge,pt pop cmp xor inc loope movsb jno push sbbb dec ja cmp cmp pop push leave fs in hlt mov mov sub mov loop je adc cmp xchg icebp xchg in dec push mul add cs not cmp pop lods ss jae in cmp or les and jle sub mov xor xor add loop cli popa inc outsb outsb push fsubl lcall andl test jns lods cmc add nop cs cli (bad) pusha pop fwait push daa daa jno decb sarl jle inc push dec push pop loopne lods rorb call fsubrs aaa nop notb js les jns cmp fstps sub leave lock fisub fs loope cmp mov adc sbb lahf repnz push insl cmc push jmp pop cltd sub push mov vunpcklps inc lods sbb sbb lods repnz push mov neg mov inc sbbb pop ret jbe jmp mov and (bad) pop ret ja les (bad) push scas and jbe es aaa mov insb aam (bad) ficom mulb (bad) (bad) out jbe or xchg (bad) mov cwtl inc add cmp addb mov inc dec rolb fstps fwait rcll test mov and out rorb pop lock add add sub test lods sbb jmp pop pop sarl mov sub cmovae push sbb nop pop js popf and sbb js cmp flds or and xchg push mov test pop clc adc and out and loop push mov pop push out mov das xor push mov je xchg pop mov mov xor rolb push adc cmp pop jns sbb jle or pop (bad) and (bad) fsin enter inc pop dec mov into call xor sub pop jp push or mov add imul jns rcrb and adc cs mov dec adc ja mov test mov int cs inc sub jmp sbb rolb pop xchg lret pop lret mov out mov mov fucomp js or in cld sti sub lods jne xchg stc sbb xchg scas sub aam push cmp pop jbe and stos nop pop jbe jb xor dec jmp or pop stos inc in movsl out int3 push cmp out loop ljmp jno adc pop cmp dec mov push (bad) mov mov mov mov test jnp mov or daa mov push ret push lret xor push push and inc jne adc mov lock mov inc mov dec repz jle cmp xchg outsb rsqrtps mov jnp movsb push xchg test push lret out xor jmp fwait imul add lahf in push pop test (bad) mov je pop loope ss inc mov pop out popf jg adc jmp mov pop jbe icebp mov push mov jne inc pop mov daa mov fadds aad out movsb jl push add call je fwait pop lods leave lock sub or push jno cmp jo jmp push sub mov dec push xor lret popf movlps orb push xchg data16 mov enter sbbb pop mov (bad) data16 sub xchg mov xlat (bad) gs jo out jb,pt lods outsl jae sub adc mov jmp je pop fistpl popf sub (bad) or test int3 inc inc jmp sbb xor push adc gs mov inc jmp gs ss pop lods jb fimull pop lcall cmp lds sub push lcall push ljmp xor mov and sub lods xchg cmp inc fmull jmp (bad) dec xchg add repz js lret jae lret loopne add jle cmp push add inc and adc inc pop sbb inc dec inc mov cmp pop or mov fisttpl enter mov fs mov mov dec pop and addr16 mov enter pusha (bad) daa jns leave sub (bad) setg test sbb xlat pusha sbb add adc mov jmp pop push xor pop int3 and dec out cmovb push outsb fnstenv push or push pop adc (bad) sub std aas fmul outsb add dec adc ffree das or ljmp aas iret loopne push pop pop jmp js repz sub cmp mov in incl out out mov mov js iret insb push repz rclb bound loope aas neg pop movsl sbb fisubl movsl mov mov pop add mov or xor rcrb adc or adc rcrl mov jmp in add jmp mov dec shl ret push aas or add imul pushf dec add cli and and push push mov iret mov fsubrs mov jae out pop dec (bad) (bad) popf push pop xor insb sbb cmp lock mov pusha push mov (bad) mov sub in pop adc pop or jmp push or inc shl xor fiaddl inc clc lea dec adc lahf sbb mov push ret test mov ss cmp shl nop mov and add pop (bad) mov inc pop lret sub sarl fildl fwait cld jl xor xchg xlat cwtl test (bad) hlt add adc fimul xchg add lret mov leave cmp mov les mov mov push jmp add in xor pusha or sbb or inc push mov sub add int mov dec sbbl add adc (bad) cmc xor in jg mov mov sub dec push pop faddl mov add outsb lods loope clc xor mov cmp mov and pop mov pop test xor add out and loopne aas rorb mov cmpsb mul mov pusha inc mov cmp out jge xchg adc (bad) push mov adcb push mov outsl add adc jns clc jmp pop pop pushf dec push pushw xchg jmp xor push xor sbb rorb jl ja adc jg in pusha mov cmpsl daa add push mov cmp jmp stos xchg cmp inc push fadds dec lods pop lea nop bound or jmp popf shr gs sarb mov dec cmp and push sub addl stos bnd push jno test adc mov nop mov lods xor xlat mov push bound pop lret aas xor out pop (bad) paddusw and subb xchg and lea sar xchg test mov sub movsb jne lods sub iret xlat cmp push lock mov ja mov jbe add or icebp arpl outsb clc inc test enter in xor aam inc out dec gs aas hlt xlat je pop arpl pop add add loope push jae scas push inc ret add adc jp mov mov pop out xor pop leave stos cs test mov adc pop jp jecxz mov jp rorb nop pusha push sbb inc or imul or dec add xchg sub (bad) mov sbb jne or push mov rcll xchg pusha mov jmp dec hlt jnp xor or push or push sub in dec xchg mov insb push mov push add int mov xor sub sub insb cs dec inc pop (bad) in (bad) mov dec or (bad) mull shrl mov cmp (bad) jmp sbb inc out test aad or sbb inc xchg test sub sbb mov cmpsb xor cmp mov cs cmc add push or or mov (bad) fist fcmovne inc pushf mov adc adc inc pop pop adc add pop stc cmpsb sbb movsl and dec stos lods pop je inc push add mov cmp push out sbb sub pushl push adc sarb or pop ja test in jbe fsubr aaa dec leave mov push daa jns test adc push pop sub pop mov lods cmp xchg ds and incl mov imul lods jnp jecxz ret aad je pop dec out or hlt add xor leave fimul pop test subl movb and xchg inc dec sbbl and (bad) jmp insl xchg insl or data16 lahf inc rclb xor inc es pop sub pop and inc or jge xor inc je xorl jmp enter inc call mov or insl adc xor mov and pop push cmp jmp jge sub and gs sub inc mov push or push sti fldl adc jg cmp out and mov xchg test lea mov cltd xor inc xor into cmp adc xor adc add mov cmp push out sub shrl add lea leave dec out mov push push inc or repz rcrb or out fdivs orb inc lea add adc outsl test rorb int3 (bad) mov pop scas cld lea push rclb out add dec push lcall fiadd mov nop (bad) xor popa ret ds fcompl xor pop jle insl pushf cmp add inc ss in divb adc loope mov out push mov inc push sbb xchg nop imul xchg das (bad) imull popa sub xchg mov ds adcl in jle adc push push add ds add pop inc lock or add add pusha sbb cmp push jmp jle mov sub cmp jmp and add push call mov pop lea cmpsl fsubrs scas push bound cmp add sti inc jb add cmp gs add inc fist push push scas sbb or dec xor jo jmp xor leave pop jnp mov aas mov fs mov add ss jmp or jge xor aas es jo add inc add adc ds clc (bad) addps pop dec in mov add out es xchg push in and jo xchg push cmp mov cmp adc dec add xchg inc sub stos cmp cmp (bad) fimul lea in aad stc mov jmp bound aam (bad) add mov rcrb adc push xorb inc repnz push push mov cmc (bad) out or add mov fistp imul inc movsb mov into push jg icebp adc dec dec scas ja loop mov push bound add outsb push jo xchg xlat mov lahf js sahf or or pop sub lcall stc arpl jl mov adc ror and dec push scas popf test adc mov adc sbb xlat xchg cmpb pop and das sub loope std mov adc stos mov push sbb pushl xor jb sbb add sub les jns mov (bad) cld add jg roll mov pop add sub push jmp cmp cmc mov xchg or sbb cwtl sti xchg and arpl jl sub lods xchg jmp xor xchg mov in xchg adc test repnz xchg sar mov xchg sbb jmp pop push orl mov div sbb loopne add push (bad) cmpsb dec sbb sbb stc mov outsb push inc pop shl jmp pop notb pop add xchg inc sub (bad) mov and xor pusha jle dec inc add dec jno outsb (bad) or call adc out jmp push adc pop adc (bad) icebp aad mov in mov call cmp add mov jmp dec xchg test xor stos xor push pop je test movsl sbb sub je adc jmp dec cmp int pop jmp pop jecxz fldt int3 popf daa insl scas lret push (bad) fisub clc and pop scas daa xor mov dec adc jns popa push jmp inc dec ljmp pop mov add gs push retw dec rorb ja mov sub pusha inc clc pop and popf fistl scas arpl jmp push mov fcoms inc cwtl and mov popf data16 lock out mov pop hlt rorl mov movsl rcl mov push and xchg xor add ss loope add push mov inc lods pop imul ficompl xchg (bad) lcall push mov orl fadds in sub loopne pop mov pusha sub (bad) sub lea jge cmp push (bad) dec ljmp push adc pop mov cmp aaa xchg lds test dec incl mov out mov outsb xor adc pop gs sbb adc inc or add lret xchg jns inc lock xchg mov add xchg pop pushf inc (bad) lret cltd (bad) int mov (bad) icebp lahf movsl push xchg lock or cs pop push pushw push xchg push mov leave addl call shr sbb icebp in enter fwait arpl or cmp scas sub mov add push add cmp add cmp mov xorl add iret clc lretw pop cmp movsb sub cmpsb mov pop pushf test sbb hlt add mov movsl movb mov adc cld jnp add fild pop shrb scas jb ljmp pop cwtl fs push movl ss shrl pop mov pop mov das jmp pusha (bad) out push add jle or js pop outsb outsb pop movsb faddp out lret (bad) push sub sbb push mov rolb movzwl pop mov mov pop add push xchg mov sbb mov gs adc mov xor and shl dec notb test sbb mov add inc ljmp fs (bad) mov sti inc cmp hlt xor lods lea sti popf shr not shlb dec insb or sub fild lds cmpsl icebp push jo sub out adc xchg mov outsb test xchg scas ror adc jecxz xchg sbb sbb bound dec out jp pop push adc push daa icebp mov cmp sub xchg mov adc mov inc in sbb (bad) fwait sub ljmp out ret ljmp jae mov sbb sbb test mov mov sbb (bad) jl sub pop jne sti adc int3 mov mov adc lret pop push mov mulb pusha enter push and mov pusha add lret mov je sbb adc and mov in pop aaa jb fstps push push lcall jnp stc adcl or cli mov aas pop cli push aaa pop mov imul les lods lahf inc mov xor aaa mov sub mov das (bad) gs int jbe push test roll sub pop mov cmp in negl and popa push and pop cmp or lret shlb jmp ror imul sbb push idivl flds in sub fsubl inc push mov xor xchg pop push or daa mov dec xor and in adc mov arpl rolb lcall and inc bound call roll pop lcall loopne xchg jns iret (bad) and sbb dec jns ss and xchg sub lcall das adc std push inc jbe push sarb or sbb lea push jp not jb (bad) adc ja leave xchg add sti nop lahf sub or jns test aaa cld cmpsl jg inc push cwtl stos pop pop in mov xchg push test clc adc push sbb les and test jb push sbb loopne adc nop push sahf mov sub popa lock mov dec shl js adc test mov sbb mov add lret pop test add into ret cmp les out inc incl mov lods scas fstl jae cmc (bad) fsubl xchg jmp dec mov push pop loop ret mov lahf notl sub imul lcall pop add lds mov jmp inc cmpsb push or rol loop jmp jp jg jbe test pop mov xchg test and and mov sub mov movups (bad) xorl (bad) out ret fimull xor pop orb jp cmp inc and jle imul aad inc jl lahf jns pop sub jmp sub je add jae cmp cli sar jmp lock leave out mov jp dec xchg and or fldcw xchg mov cmp cmc mov push pusha add (bad) or call fs push pusha sbb stos adc dec jne dec (bad) loopne xor sbb inc and js (bad) dec mov je mov or inc icebp cli cmpsb xchg fmuls jmp out popf mov enter shlb arpl sub add test xchg aam (bad) jmp addr16 (bad) jmp sub cs out into mov sub add cmp stos int add lods jae pop jmp rorl cmp mov lods addr16 (bad) aas repz fmul and push add popf adc scas pushf inc mov or test cwtl or mov xchg inc mov sub adc pop mov xor cmp sbb iret adc cld loope mov push jmp int3 mov sub icebp jge jne mov jmp pop sbb and sahf mov or hlt adc pop mov dec or push add outsl lods sub adc inc push xchg sbb imul mov pop leave mov lock mov pop xchg cmp roll pop inc mov xor ss gs subb push repz das sub dec or cmp clc jmp xlat add cmc arpl dec pop fdivs aas into ret mov push jo (bad) push pusha jmp and mov push imul or adc jae add mov (bad) enter pop adc and scas mov mov cwtl clc sub or push lock mov int cmp and cmp cmc and inc push mov sbb cmp xor pop mov roll mov hlt push leave mov push ljmp shlb jg pop ja imul (bad) (bad) pop ret es inc pop and sub add jns jnp lret jle add cmp stos (bad) mov sbb lock mov dec cmp scas rcrb mov aad sub ret rcr and leave aam sub lods pop add stos pop xchg jnp das sbb jns out cmp std inc jmp pushf iret in (bad) jge daa pop push sti mov cli stc cmpsl adc jno pop add pop adc and pop xor aaa mov (bad) xlat stos imul mov and pusha shr xor mov jo jge inc pop or push test mov loope (bad) ds aad mov imul cs add cmpb xor inc add sub cmpsl or jmp add es pusha faddl cld add fadds push adc dec xor nop dec dec iret cmpsl mov and push mov jbe jge mov rorl sub sub push add scas faddl sub push in xor mov and lcall iret sub mov shll jp mov pop xchg idivb outsl inc sub lock (bad) mov dec inc adc scas sub ljmp and dec out cmp jp daa nop mov stos push mov rolb xchg es pop dec mov mov es add xchg jbe xchg and sbb cmp mov dec inc decb add sub inc (bad) jns add xchg pop arpl out adc xchg pop inc sub cmpsb inc cmc das sub cmpsb inc incl das jmp xor hlt arpl add push sarl xchg fistpl xchg and and roll xor sbb roll push in out inc ret cmp cmpsb iret add jmp rcrb (bad) adc sub push mov cmpb iret dec pop daa inc js nop mov pop or xor cli iret mov cmp xchg sti lret add insb ret pop pop in mov cmp push add jmp add lcall sbb daa frstor or mov push sbb ja,pn or notl adc enter push dec das xlat inc dec js pop pop adc insb push inc aam push call push push std pop jo orb test or pop push ss add popa or (bad) int and inc lock and ja aas cwtl inc pop xor add jge cmp xchg bound dec jg jl inc mov add and repz jno inc pop ljmp dec pop jg jle push in (bad) jp pusha addr16 movlps add sub sbb jbe nop loop add aad (bad) pop mov inc fwait aaa mov lahf push xor pop xchg cmp push add cmp or out mov adc not push xchg hlt ficompl fwait popf add orl sbb xchg push push add mov iret add or add mov mov jmp cmc add sub xlat xor test mov mov mov sbb inc or cmp push jb fs imul mov out sub repz push insl mov xchg loope js mov mov add fdiv add mov sbb (bad) mov mov arpl clc jge xchg mov pop inc dec add jbe loop in testl push stos jo jae xor out push bound arpl mov jnp or rcrl xor sub cmpsl movq and lcall mov test pop je jo push data16 push cmpl aas shrl add jb sub and and rcrb add repnz mov cs xor into mov (bad) inc sub gs add sub xadd in pop add jmp hlt add push pop adc jmp add cld je int3 aam add sub adc jae xor and loopne and and adc lods adc jmp loop add dec scas fiaddl cmp fldl ja push pop pop and cmp jg (bad) mov sbbb mov jp call cld loop push dec out sub mov cmc mov sub iret jno lahf rcr or push or out push enter dec and stos sub cltd ret xchg xor and ret or adc int3 ret xor or push and add inc testl mov cmp into mov push mov add and repnz sbb mov jl arpl imul jnp or jmp insb push mov popf dec bound clc mov xor xchg jge jno dec jge sbb lds popf cli cmovp into xchg dec scas lret mov cld dec out lret mov adc es test add jmp jmp sbb push or dec shr data16 push arpl push js pop fwait push sub mov mov and and push xchg f2xm1 sbb repz adc push jmp push jnp out orb or adc popa push cmp push iret imul aam sub push repnz or cmp and xchg mov push int3 icebp jecxz xchg pop mov in jmp pop cmp lock jb pop sub inc mov gs rorl aaa lods je std in cwtl push popf (bad) and cmc subb mov movsb stos push imul dec sub push pop jge add jbe je icebp out xor cmp push lret mov jno imul pop imul (bad) in in dec mov and (bad) leave lahf sbb (bad) or pop in dec dec push lods rcl sti (bad) insb dec jecxz xchg mov (bad) cltd and lock pusha dec roll or add das fwait jge data16 (bad) pop mov jl daa inc sub loopne mov rclb mov sub add push repz mov sub dec push pop jmp stos les push jmp sahf dec fldcw xchg pop jno aaa sar roll insb cwtl push hlt fwait dec add lea dec or inc (bad) mov les add inc xorl imul adc into push je jo xor inc jl scas inc popa iret xchg dec mov dec call xchg mov jp dec adc xchg scas or clc add pop pushf rorl adc jmp inc shrb jno sub inc aam jmp xlat xorb adc lea pop cs rorb stos mov jge add push dec inc adc xor pop or mov movsl jmp dec daa js out inc mov add mov mov dec mov cwtl fsts cs add out or ja repnz hlt out dec out cmp addr16 test dec push mov push or sub subl sbb (bad) dec push dec ret cs xorl sbbl sbb pushf push inc iret jo jo js push aad jmp fiaddl adc loope inc dec leave dec test mov or arpl push add shl push lods mov addl push mov xor dec xorb mov add cld xor rorb xchg xor nop mov aas in add dec and popa or neg push or pop fisubl clc adc rclb (bad) int movb jmp push sahf adc leave add outsb jns out add mov inc in xchg repnz jl out add jb cmp or inc push mov out mov cmc or inc loope into ret faddp or pop outsb jge and das pop nop negl pop sub xor fldl jmp push fs mov sar (bad) adc mov aaa jo mov aaa lahf cwtl and out push loop sbb loope cmc push jae aad add mov popf push mov out mov sub dec xchg into mov cmp jmp rolb cli and pop ja cmp stos setp test xor jmp std sbb enter fmulp xorb mov sub pop adc sbb lret js push out or enter bound adc test inc inc jb nop cmp cmc jmp insb out mov sub mov sub inc aam pop (bad) testb out inc orb fldl pusha daa pop push push in add xor xchg and fadd fimull mov xchg clc sbb pop out pop cmp loope pop cmp test or adc ja xchg or lock lahf fildl jge or jmp sub loope xor or pop ficompl inc das pop dec push mulb fwait addr16 iret push xlat movsb xchg push add subl adcl fstpt jmp loop (bad) cld bound ja cmpsl call xor cmp and mov ljmp popl push shl shr fmuls xor pop sbb (bad) xchg sub sub mov or push jae adc pop mov lret test jo (bad) xor imul sti push fcmovb pop push mov fistl push out sub push enter (bad) sti dec mov into hlt adc pop dec mov jmp pushf call push xchg push test dec adc inc not pop inc (bad) mov adc ret push adc pushf in mov (bad) mov nop xchg push mov dec (bad) jbe dec add cmc add pop sub xchg jne js loop xor sub xor jns push adc inc cmp insb out leave sub mov or pop and jne lret add test rclb (bad) pop add test lds stos jmp and push jle push xchg push int dec cld inc repnz inc ficomp push pop pop mov lret or cmp sub pop mov mov or clc and jns pop jmp shlb int3 aad push test xchg loope add adc repnz hlt inc movsl lods inc aam (bad) pop inc or ja inc les sub jg in stos mov dec sbb add je cmpsl aad jae cltd lcall mov test xor push dec pop add das cs mov fstpt xor pop addl add push sbbl imul add pop dec push xchg jp movsb add xor call jmp jo mov push sub les xor ret or daa insl jbe sub adc stos nop sub xchg pusha or ficoml cmc rcll int3 aam rol mov sub sub sub jmp in jno dec bound and xchg lods imul mov sub mov mov loope je cwtl subl rorb mov incb addb fsubs jnp jo subl add push (bad) in xlat in and add xor mov bnd xlat in sub shr mov dec xor push mov or fnstcw mov (bad) pop sarl inc js dec dec mov pop add push jle pop push pop add inc movsl shrl xchg sbb and pusha cmpsl iret popa loop adc scas sub jp add push jns mov push dec addr16 scas push outsl test call add testb bound int jnp xor push or mov pop (bad) add cmp imul fnop xor je call and lods jg inc adc cli shrb pop pop popf push pop or int3 xor shll pop ljmp lahf push push bound mov outsb sub int3 movsl jmp push push mov sub lcall insb ljmp and notl add jbe or ret in orb pop bound xchg not xor lock shr push dec or jmp or dec sub jnp cld or popf lock sbb xor xchg add scas enter mov (bad) adc xchg inc and repz lock adc xor add fistp jno es mov dec and movsl cmpsb std rcrb gs or mov (bad) pop neg mov add xchg add and mov popa inc inc dec ret out jne mov pusha loopne push cmp imul leave jl std nop sahf pop out jno cmp fild pop push add mov fstpl or (bad) lock push dec mov push push mov bound clc dec stos int3 pop divb adc jmp inc pop jmp or sub mov and jne add rorl mov fs mov inc cwtl jle (bad) and add push shrb mov pop push mov ficoml adc jmp jecxz nop push sbbl push inc inc adc jp mov aas inc mov fsub inc subl push xor rcll mov xor mov push shl repnz pop or in add outsl jmp dec cmp notl loope sbb daa mov lret mov add (bad) bnd (bad) shll jno inc mov dec imulb roll or add mov test cmpsb iret adc mov mov das mov adc mov xor cmc inc fisttpl mov loop cli sub dec and adc insl mov jle cmpsb adc pop mov lret pop (bad) dec mov popa das dec xor inc mov push xor mov inc mov push cmp inc sub cli add loope push sub and cmp xorl dec popa into add jne push orl mov xchg test sbb int pop mov ljmp jecxz push mov push pop call xchg xchg pop inc scas inc insb mov sbb push inc mov push sub iret test cmp enter daa out add cwtl and and pushf xor mov push les inc and ja roll lea scas push jg jae and js push mov shll and sub xchg pushf fldcw arpl fdivrs sbb or inc sbb mov inc nop lds int cmc (bad) int3 sub loopne aas xchg cmc add pusha lock (bad) divl loopne jmp int3 mov jge daa xor and rorb dec sub mov or jmp icebp adc outsl mov adc push popf adc popf aad mov rcll inc inc add mov adc cmp sub shll rcr push cld ljmp add jbe push pop add int jle cmpsl dec adc or inc mov push lret mov mov loop mov dec jo adc jecxz out xor pop repnz push add fildl push out out (bad) lret jp mov adc addb das jmp jno or mov push dec daa sarb clc or or sbb jle xchg pushf jmp cmp es pop cli fsubrs bound inc jle cmc test das repnz fistp dec in jne push sub push inc sub dec adcb and imul daa add xor xlat pushl add xchg (bad) or cmpsl jle push xor add mov (bad) and dec icebp mov mov in stc inc orl and pop xchg mov negb cmp mov ret sbb cmp in jnp out js sub sub or adc adc data16 xchg repnz popf mov dec sub in (bad) negb jp mov add lret adc mov cmc pop push out daa pop es popf icebp xor push xor decb enter shrb nop imul pop dec dec in push and dec in outsl mov mov jg outsb sub mov sub lret xchg int dec sub cmc arpl ljmp xor (bad) fisubl xchg jmp cwtl (bad) push sub mov arpl cmp xor and xor cmp dec dec add pop leave shl inc pop mov jo mov ja pop xchg adc (bad) hlt sub mov sub xchg pop sti inc push push push cmp xorb aam adc stos pop fiaddl das aam pop jmp mov insl mov popa pop loopne push (bad) test add loop popa not mov cmp rorl mov adc add or pusha sub pop dec shrl pop cmc fild mulb mov sahf mov and or mov sub dec loope xor ljmp and imul bnd mov mov xchg cmc test adc mov add mov mov fs dec and es repz dec cmpsb jmp dec add dec arpl add cli test mull jmp fsubrl cmpsl dec out loope lret pop rcr pop out fdivs dec fstl lcall mov inc add sbb (bad) movsl dec xor dec mov xor and pop jmp movsl das mov xor pop dec mov out add sub sbb mov (bad) divl aas xor cmp add jns cli inc ucomiss xor inc (bad) or fisub orl pop adc rclb movhps andb xchg add mov sub rcl jp cmp sub cmp add xchg jae in xlat dec stc ds pop repz and push scas loop in mov popa push jmp mov out jnp jbe aad imul cmp (bad) das jge or out sub push mov test add jmp mov push pop (bad) mov mov fs xchg in or cltd pop push (bad) lret and ja cmp or daa push and dec imul cmp inc rol imul and and repnz ljmp mov popf sbbb push pop dec mov adc xor push push xor movsb jno mov or inc lods movlps or shl sbb inc xorb fdivs es add int and jl daa push or (bad) ja xor fdivrl outsl outsl cmp or nop mov lods add cltd shr movsb push dec or push pop push es add sub sahf lea fsubr rclb add lock push mov dec (bad) mov in icebp mov mov daa mov mov nop jb sub stos xor ljmp and fwait adc dec fildll hlt or jmp jle cmc repnz jge or push sarb mov fs jp adc (bad) add xor in faddl adc pop jg pop sbb enter mov jne ja (bad) xor sub pusha push (bad) mov in pop js pusha jns push push push jne pop mov adc adc imul cmp mov xor or hlt and inc mov jo (bad) enter adc pop dec pop shl pop pop (bad) jne jmp pop mov (bad) pop pop dec add fnstenv mov xchg jge inc dec bound fldt ret mov pop addr16 mov mov jecxz adc cs dec sbb or lahf das jmp push mov hlt xor push neg loop xchg jmp mov jmp pop push andl (bad) aam rclb cld or pop xor loopne lods add mov shl (bad) push and push fwait je movsb lds pop and cmp test inc pop ret mov push pop and dec out in daa sbb icebp fsubs mov push sub pop rorb pop std pop sarl and adc daa fiaddl inc xor add rcrl data16 icebp sarl out insl out aad test mov mov daa dec or mov aas mov push inc xchg sarl call jns adc ret clc nop popa push jmp sbb loopne icebp push mov pop fistpl jb sub sub and cli adc jg fprem mov int or addr16 add cli daa dec lahf lock and dec xchg adc dec cmc repnz sub or pop fidiv add cmpsl or paddusw fs arpl int3 inc sarl jno or fmuls jmp cli pop clc mov sub loopne mov cmp add cmp aas in and push cmp pop mov pop or jmp stos into je jmp dec out sub mov cmp and jnp mov mov sbb or sub jecxz sbb jmp sub adc sbb add shrb jmp lcall adc mov pop mov lret pop data16 outsl addr16 les mov pop mov sbb mov fabs push popf adc xor fdivrs roll enter add dec push pop gs adc pusha enter xlat in dec xor or dec cmp and and xchg push push xchg test jmp les inc adc bound adc jb call loop pop fisubrl add push lret jp int adc icebp dec jp pop jmp rorl push cmp test (bad) ljmp add and pushw popa iret xor xchg mov jno add or cmpsl xchg mov outsb bound pop and (bad) ljmp dec jns out xchg add jmp sub jb lret jne lods (bad) push pop dec jbe add cmp xchg shr das repnz sub nop add push jb jae into test stos loopne out les xchg adc dec cmp mov jecxz arpl sub gs popa sub push cli push les add dec inc add xor adc pop mulb es inc mov pop ljmp hlt sbb jo xchg cmp mov xchg pushf fldt mov pusha clc pop dec mov js xchg jb dec imul cs xor add ret or pop mov xor pop out arpl ret cmp inc adc out pop mov repz jmp cmp hlt add and jmp xchg adc out jmp xor adc add push cmp jmp add fcomps js xchg cmp add pop or push mov adc add adc dec push int out dec in mov jns inc int add adc loopne fdivl test cmp cmp mov inc fildll mov inc icebp sub jmp mov add pusha test test repnz xlat (bad) mov jmp pop (bad) xor adc les repz xchg pusha sbb lds mov dec cmp mov std scas les push xor lods loope and xor pop or inc jge inc inc insb in jp sub sub mov aas ljmp sti int3 adc cmp aaa add xor aaa pop mov mov pop pop mov pop das mov pop xor shl push push pop and inc adc pop loopne or mov push dec outsb push inc xlat (bad) repnz movsb push scas xchg jne outsb test loopne xor dec inc mov sbb add inc or sub adc inc mov pushl adc popa lahf push adc push adc cmp inc sbb rcrl push sub mov mov cmp dec lock cmp add jle xor mov and popf dec or adc dec dec inc add pop test or adc rorb xchg jmp or pop push dec lret fcoml rorb jmp sbb addr16 jmp and repz xchg adc pop sbb (bad) mov cmc mov fucompp ja fwait scas imul push push lods (bad) lret pop hlt scas imul gs dec aad fs shl mov sbb push ret sbb int fsubr push xor incl je mov add or xchg adc insl scas mov sub push lock and or jg xchg pop push sbb iret sub movsb stos adc cmp in adc test xlat lock pop push xchg cltd outsl imul les shrb mul mov mov enter cs sub or xchg or cmp pop clc sub (bad) daa sub mov fdivs mov js shl in (bad) mov inc clc test outsl jmp pusha (bad) jl push mov leave mov push pop shrb not adc out sarb add lods push mov rcll mov in lret cltd pop push pop xor mov lds mov inc lods lcall pop test mov notl adc stc cmp mov and xor cmp push ret shr mov out popa adc adc in pop dec mov bound add out xor xchg incb dec es add cmp sub (bad) pop jmp pop inc xor push scas mov or pop push xor and or jmp subl pop sub test dec xor mov xor mov dec sbb outsl push jb imul das dec rcll aas sub (bad) xor dec fadds pushl jno mov jae scas out imul jmp sub clc push fs dec pop sub pushf mov (bad) aad rorl (bad) mov mov dec lret lods pop jmp push add xlat push mov mov add add sbb dec ret push push jnp ret pushl lret (bad) push pusha mov and bound jge lret ja cmp adc cvtpi2ps movsl ljmp or not (bad) pushf mov jp adc ljmp shrl or pop sarl mov (bad) jle push sti test xor sbb jno jmp jmp cmp adc fidiv dec pop (bad) in and sbb adc mov icebp jmp cmp add fcoms dec incl push cmp sub cmc xor push loopne jmp roll push mov sub sub (bad) in xchg pop enter add mov xor cmp pop dec adc pop mov jo xor mov in dec jb pop push imul pusha (bad) icebp adc dec sub jne adc dec popa jmp hlt ja popf scas movsb out push add mov sbb outsb cmp push lret push dec mov sub inc jmp lcall js ds push add popa bound sar orl push aad jp xchg push repnz pop jecxz (bad) sahf pop push jns jno pop jmp icebp adc xor or add mov push lahf and sub xchg inc stos pop or andb int3 xor jns in pop dec and add sti leave pusha xorb mov push xor ret fimul mov loope and je push dec loopne mov mov notb jne inc mov movsb or xchg jb adc pop mov ds or xchg loop mov add mov pop and out inc nop out outsl jo divl add xchg adc mov hlt mov ljmp sbb dec sub or mov adcb ds jbe stos test or inc add mov dec cmpl adc inc scas adc and push sbb mov xor bound inc dec iret or inc cmp lcall xchg sbb add cmc call sub xchg mov jmp insb mov sub loopne push pop bound push in push dec jo (bad) mov push daa dec add lahf das stc xchg jns xor pop pavgusb mov xor fldl in mov push push cmp mov call push lds sbb aad mov ja mov popf dec mov movsb daa ja push add pop add ret shrb and and sar out sahf xchg daa inc nop xor hlt pop pop leave xchg lcall outsl out adc inc sub es sub cli int in jge add and jmp mov add ljmp in jbe jle dec loop pop jge xrelease (bad) ja movl mov je pop sub bnd mov test mov jno xor xchg lds mov mov xchg mov adc aaa cmp mov pop or jae lcall imul nop int3 dec and pop lcall dec mov sub sti inc add roll (bad) aam loopne jmp ret dec das clc and add lds pop pop popa sub xor cmc arpl and das gs hlt ret pop inc mov (bad) out rclb xchg pop ss add pop xor mov shll jle pop rclb (bad) clc push loop test mov sbb jo cmp in stos leave pop inc clc ljmp mov adc lods jecxz nop dec pop mov mov ja pop call lahf idiv mov subl (bad) into mov in dec or or pop and sub sub cmpxchg xor aas push mov xlat mov (bad) jg adc jmp cmp paddsb rcrb jo daa divb loope and xor inc lods pusha cmpsb push jmp push pop mov stc shr push (bad) scas push mov fistpl sub shr pop outsb in mov aam cwtl in pop mov dec repnz dec ret jne dec negl mov cld hlt push mov inc or inc add jmp int3 (bad) jl ret push push nop in pop mov insl (bad) cmc imul jb icebp bound jo cmp mov in dec mov add daa cmp jns jno dec in jl cli mov or popf pop mov adc jbe or cli mov or sub or inc xor xchg cli inc mov dec or and pop in sbb sub sbb dec sbb jle and (bad) in pop stc (bad) std push imul (bad) push jp data16 jnp inc add aaa lods nop pop repnz xchg xor or sub push push pop xlat push and jmp orb pop lds cmp int3 jmp jb iret mov adcl sub cmp mov ja fidivl (bad) pop push inc jg pop pop dec pusha incb pop cmpsl add mov test inc test push (bad) daa fild aaa sub inc (bad) iret orb mov dec in ret push in sbb mov adc add shr and sti mov mov shr xor call mov and pop cld jno js or push (bad) adc es inc sbb ljmp nop orb pop dec pop or or rcl out les mov sub aam lds lods sub in leave jbe inc jmp (bad) push js jg imul enter test mov sub shrl push lret pusha mov pusha rcr sbb push add cmp (bad) pop arpl fisttpl and sbb sti adc mov imul lds jno fs iret pop scas cmp and ficom pushf push jmp dec orb sbb push fcompl dec and rorl pusha mov pusha pushf sti mov insb sub dec int3 or sbb pop add jge jmp cmp mov pop adc (bad) add aam or call adc sbb stos fwait adc dec ljmp dec and pop fist mov xor loop je dec jmp cltd imull mov push sub mov clc scas lahf push inc or test dec cli mov jmp test mov push or fild or push (bad) mov adc sub pop pop xor xchg pop out cs daa sbb add pop mov int push xchg jmp cmpsl jnp inc pop loope push (bad) push adcl xchg adc sbb stos lret cmpb xor and xchg sbb sub pop or xor mov and jae cmp sub sub dec push in mov data16 dec adc out mov push inc inc mov aaa lods or xor (bad) and push dec xor fmull pop fldt lock and fcomps adc rcrb push pusha xchg sbb inc shr mov push and dec or cmp stos sub es sarl icebp out dec jl repnz push scas aaa imul sub inc dec fwait es mov out push jp sub bswap cmp (bad) test and push ss pop mov or dec adc leave stos outsb inc cli nop inc ret dec or sub test jmp xor lods adc pop arpl push sbb pop test mov test rcll repz push fld aas shll push inc mov cli out pop aas lods push stos int mov js add add dec lea xchg and in pop sub and add notl arpl ss pop test mov movsb pop fbld push push jl int3 hlt dec inc lea lcall aam rcrb jns xor pop sub cmp cmp cmp call mov xor std xlat mov fs push pop push mov int jmp sub pop xchg mov test adc jmp or inc and xchg adc sub fwait rcr repnz pop aas xchg dec imull mov and in and mov jmp (bad) nop pop jmp push inc test fdivl adc pusha inc xchg or repz dec jg test adc stos popa add push pusha fmulp and fdecstp add pop and inc mov fdivp pop inc adc cmpsl loop inc mov insb inc popa jmp lds scas int jge ds push mov add jne stc test movsb sub cmpb xlat add push push mov mov ds ret cmc mov aam mov sbb pop adc push and dec and pop in xor sub sub mov or gs lcall shrb sub add out adc scas push stos (bad) icebp sbb xchg or fimull mov and mov mov xor loop maxps sti mov int (bad) pop mov leave mov daa mov cltd push std aas out dec call xchg cmp inc add jnp daa jl pop jns pop xchg or or out xchg add aaa sub or mov pop cltd jmp lret fdivrp cmpsl sub ja xor arpl add add rclb fabs lods mov out sbb push mov inc ds xchg test nop cmp push mov loopne adc int sahf adc aaa mov inc movsl add cltd inc stos pop popf sub shl sarb adc push or leave shll fldenv cld pop xchg rcrb mov aaa outsl mov adc or lods and subl add fwait or (bad) lcall orb fucomi test mov add and out pusha push int clc push and (bad) imul rcrl lds sbb mov pop mov mov das cwtl dec push arpl imul add repz ficomp pusha xchg xor push call ljmp push imul xlat aad out lods and in pop mov fdivs inc and xchg data16 and adc loope (bad) cmp lret push cli ret ja or test dec jmp mov sub mul cmp (bad) xchg push mov stc shll jmp sar jmp aad (bad) adc adc add push test adc mov add insl sub push adc pop push insb mov iret pop loope add dec xlat mov inc xchg loopne jns pop push out add test push add gs pop orl push add pop int3 sarl iret add lds push mov sahf adc rclb mov out insl adc (bad) cmp shl call mov mov imul add aad rcrl push jg stc outsl cmp (bad) mov mov mov sub out and mov (bad) push pop adc mov stos dec adc sbb in dec das call call push sti mov imul mov pop push add loop or jl pop pop add ret jmp iret cmp pop inc pop or mov pop push or inc and scas nop push push jnp xor aaa lds lds adc add and xchg ret pop mov sub pop jmp jo das push daa pop cmp adc jmp gs mov jecxz push push jmp popa mov xor pop mov sar aam icebp pop mov adc int3 inc or jb mov in pop adc lods mov mov dec pop aad leave js push add jbe cmp adc push and pushf mov pop fs dec xor outsb sub das mov and jle adc push or int3 dec cs into (bad) and mov sbbl cmp ljmp lods xchg pop mov inc dec ret or and add xchg dec push push loop inc loop mov pushf movsl pop mov popf nop lret mov and dec xor cwtl adc jp xchg jmp adc lret mov add call push mov ljmp and aad xor mov push sub popa mov mov notl or add mov or sub lret sub repz pop fistl pop mov jp sbb mov jns adc (bad) fist and mov (bad) (bad) xchg test sub fiadd mov mov mov push add pop pop inc sbb outsl or or pop incb push lcall (bad) jbe jo xor dec jmp cmp ds (bad) (bad) sub loopne insl std mov test xchg cmpsl test out add mov scas fcmovu out add or dec aas fs iret mov test lods fadds pop push test rcrb cmpxchg (bad) jg pop arpl xchg ss cmp dec mov inc mov add in jp shl mov adc cltd or jle pop mov test pop jno,pt les xchg push mov call test idiv loop push faddp jo hlt mov add dec jmp mov push nop call daa fisubrl (bad) movsl test pop insl mov jbe pushf stos das jnp sahf mov pop add sub ja mov lods inc push popf lcall jns push dec (bad) scas rclb (bad) xor xchg inc dec clc mov push add adc test dec test aad pop mov dec sub inc sbb and and lea and repnz aam and stc mov mov or add jnp xchg mov loopne add jae sbb out and xor inc pop jne xor mov std inc enter and jne ret mov mov js add mov add mov aaa cs cmpsb or (bad) pop cwtl or adc aam sub push push adc hlt gs mov push out adc rcrl pop jo (bad) or adc (bad) pop stos add pop push push mov cmp and rcl pop inc test push inc in lds adc sbb pop add jmp jbe or sub cmp test daa fcmovu fldt dec mov out fmulp ror dec mov cmp test scas nop nop jmp hlt jb bound movsl daa inc adc mov jmp shr ja adc or inc push xchg mov inc sbb inc roll pop sub and or repz das aam push jmp mov rcrb push fimull das pusha test pop gs fnstenv pop and ficoml (bad) push sbb inc int3 loope call push mov call sub cmpsl xlat adc aad scas int jl add les ss ds sbbl inc popa pop mov inc movsb jg dec adc add push mov cmp add into popf cmp js push in cvtdq2ps icebp xor out pop pop push add jo push pop (bad) sti inc out dec enter sub sub jmp pop dec jne out add and je xchg or pusha out popf xor jae cmp sti xor and adc mov lret inc pushf pop adc shrb pop dec insb xchg jecxz and in and or shrl ja pop div or pop sbb ret lret js ljmp xor inc movsb shrl pop shr lahf add pop add dec (bad) clc aas mov xchg jbe fcoms add mov test mov jbe jns test cmp cmp jecxz cmp loop lahf or mov ja mov enter in scas bnd push out mov push mov shl repnz adc push jmp push xchg cld xchg xchg ljmp mov loop sbb es and loop icebp sbb xorb mov sub lds xchg mov or add push xchg push mov or repz jbe adc aas push adc out xchg aaa sub mov bound sub loope xor jmp ljmp lret jl rclb push mov push mov nop in push xchg inc push or fisttp mov dec std xchg jbe dec cmp das push adc inc xor fmul inc mov jecxz cli push clc xchg push popl or sub or push mov popa in mov int3 dec (bad) adcl jnp clc or mov orb inc and sbb out add dec (bad) mov pop rcr cmp pushf xchg lds dec lods jno jmp mov xchg mov sti enter jno mov xor cwtl gs mov stc pop sub adc add jno cltd cli in popf leave insl sub pinsrw (bad) push jne push xor shll push insl mov push fisttp lcall cli and dec pop mov nop dec push clc scas mov test fsub or mov sub fist insb mov adc in lahf test rclb pop (bad) dec pop mov mov push fneni(8087 rorl test (bad) jle jo or xorl pop sti int3 (bad) jnp testl ljmp push sbb shlb (bad) sarl xor clc data16 push pusha push push xchg push cmp dec int xchg push test pop popf fwait sbbl or push mov scas inc (bad) cmp mov outsl mov pop hlt dec push (bad) pop clc sbb xorl dec sahf adc add pusha mov aad (bad) or or pop jmp (bad) pop push and mov dec mov push data16 fdivs fdivs push iret xchg sub call (bad) clc out adc inc fnsave in push or repz lock mov aam fldt mov inc das icebp mov xor (bad) sarb daa outsl pop jmp sub jl push xlat push jne rcrl jo shr add xchg dec jl rcl push gs test lret ja push popf cmp inc mov xor mov mov pop jo (bad) xlat fiaddl loop cli mov push data16 jnp rclb cli iret push js inc or mov sub loope push loope dec pop test push frstor es mov popf jg cmp jnp imul ljmp (bad) and bound ja imul shrl sub push mov pop psllw inc and mov pop leave mov test stos shl xchg add outsb cmp xor lds inc xor jbe stc pop xchg ret sti fcompl clc xchg pop mov and push out test sbb pop xchg sub add iret xor es lods jmp sbb mov das jo xlat pop in dec test in jmp cmpsb sbb nop or jb insb and sahf add sub xchg iret push jns icebp (bad) dec and frstor repz adc sbb xchg inc mov xlat aam mov cmp jne xchg sahf insb add pop mov jl out es add inc cmc sbb xorl inc add push jo adc (bad) mov stos and leave cmp pop mov lea push adc mov mov adc sbb mov jl mov dec fdiv in pop das ficompl push call cmp cmpsl mov jge orl adc out jns sub or jne addr16 xchg push inc jb or imul pop in lea add hlt jg xor fisub loopne (bad) fcoms push call push roll add cwtl xor inc mov dec jmp push mov add and out add movsb or or clc adc cmp sub ds (bad) pop lret insb test mov dec sub cwtl xlat pop dec mull pop inc dec scas sub sbb stc in ja push shrl dec cmpsb and subl decl pop mov adc jnp mov sub (bad) add repnz das mov xor ret sbb push xor xor dec jns or sub (bad) pop fcomps es xchg (bad) loope arpl and and adcl ret push mov or add fbld inc dec add pop push sub add pop (bad) mov (bad) adc pop mov pop add jp stos inc cwtl ss (bad) mov in sbb xor scas pop push ds mov pop nop fcomip stc jle sub pop inc add mov popf fldl mov adc and into cmp mov or dec mov cmp daa data16 subb outsb cmp incl adc jmp pop or and pop mov cmp es fldcw leave dec ret push rcrb sub adc and dec jns daa orb test and mov push add sbb in es in push fnstcw mov push or pop adc add int pop mov jmp inc shrb and mov push loop fs push shrl jmp adc sub sbb outsl mov add inc dec insb adc in add and andl sub int3 scas shlb dec jmp xor ja test js and test or (bad) xlat push dec inc ljmp hlt les lock (bad) push fwait jge (bad) sub push (bad) (bad) mov dec mov mov inc mov (bad) xchg addr16 (bad) xchg rcl (bad) mull lods dec rcrl rolb mov mov (bad) icebp ret das aam jnp inc jno push push mov loope mov icebp or add push xor dec push pop icebp pop icebp outsl mov (bad) sbb and nop ret pop ja mov mov push dec mov xchg pop mov sbb inc (bad) mov sub les push mov xchg rorb adc stos inc mov fadds push (bad) aas dec and push mov jmp ffree in add test cmc cmpb or fstl jge and pop dec mov outsb jbe pop jp add jl cli jb push push or outsl leave das loop push insb pop jns adc push pop or in fcomp cltd inc ds fmull out ret jmp push push in mov jle loop loopne int les sub pop add and test dec jo pop sub or xor aam int3 jb add lcall imul cmp cmp data16 mov int mov mov data16 std std movsb jle mov icebp vmread mov vaddps mov xlat nop popf in mov add sub sbb bound shl push and dec adc mov push mov xchg or or add mov push and jmp lea mov cs sub lahf adc jmp ret inc lahf addr16 cmp scas jl xchg test orl les mov mov or sbb mov sub hlt sbb rorb xchg xchg enter or jno shrb lahf pop cmp push mov mov test dec das negl (bad) icebp sarb lcall imul inc js sbb enter and xchg pop push or push mov mov mov fimull scas adc mov adc cmp ret addr16 dec scas jge mov xchg xor scas mov in add cmpsb push mov pop out loopne and mov sbb mov in push cmp lret bound (bad) lret insb and and jl shr push movsb pop insb push mov pop hlt xor push mov inc inc jns mov scas sub lods test in gs sbb addr16 roll imul popf add stos or imul es cli cmp jmp adc nop nop jmp or pop lods adc mov (bad) lds out das mov xchg fwait lret jle fs mov (bad) jge (bad) (bad) insl mov imul mov cmpsb or lock xor aam pop ret insb pop and daa mov bound fisttpll and mov add imul jl jns cmp test repnz bound movsb ret dec test das mov (bad) (bad) sbb push cmpsb xchg lret pop ret test in adc (bad) ficom out inc (bad) adc pushl call ret xchg and cli dec mov rorl xchg push cmpsb fadd rorb xlat inc lahf xchg lds or xor xchg jne scas sbb loop push ds adc push dec sub aad xchg nop nop bound bound cltd repnz arpl push push fbld xor fucomip (bad) adc enter pop lahf xchg (bad) and add pop sub inc pop (bad) cmp (bad) ljmp insl dec fmull jmp sub fwait dec mov mov bound mov push pop dec clc jg push into xchg push adc sub pop lcall or setp or jmp mov insb mov jmp jl cmp psubsw (bad) or sbb (bad) in or inc push push mov rolb push out cmp inc and inc cwtl cld jl cmpb push sub repnz lods sti mov sbb stos dec jnp sub and (bad) push add mov sar mov pop push push fldln2 or fstpl dec push leave loope xor loope push sar lret lret das cmp sbb je aad int mov jne movsb das mov fiadd fs mov ds negl test adc lods in xchg (bad) jmp pusha push pop push jns add sub pusha cmp inc jmp and (bad) mov test neg (bad) loop repnz cmc mov jae adc repz fisubr mov sti and or xor push or add pop jo cmp stos nop inc adc sub test sbb jbe out fs push (bad) or shlb xchg scas sbb pop pop lret or xchg mov test notb mov or loopne pop add into pop dec push pushf and loop dec das inc idiv and lret rorb and sub lea lcall adc jmp pop shr push mov divb or jmp or sbb sbb imul jmp and dec scas and mov outsb mov pop rcrl loop or pop bound fsts cmp and xlat jne les jmp imul jge xor pop (bad) int3 loop out ljmp and insb loopne xor sbb jnp icebp in out addl mov sub add add xor xchg dec sub jecxz jne pop pop stc les mov out xchg jbe pop mov mov outsl loope fisttp pop sahf gs movsb andl pop push mov jo pop push sub (bad) xchg mov pop inc xchg mull dec dec jmp pop push inc jo jbe dec pop mov mov or adc pop sbb mov push jecxz jl mov leave jmp mov add push and pop arpl mov add or mov or mov inc jo xchg pop mul insl mov (bad) adc loop cmp lahf cmp mull shrl lahf inc lcall fs mov ss out outsb out jae fucomi dec dec shr add and addr16 (bad) fwait push popa push xor cltd dec cmp imul inc pop sbb aam jmp pop shr sub in pop out out xor out imul cmp add andl (bad) negl or subb xchg inc std not call dec mov jmp scas xchg ljmp mov pop pop stos or fnstsw lret std and arpl addr16 test jmp add (bad) xor adc jmp pop cs dec inc mov or cmp pop add pop sub outsb jg lahf xchg idivb or add push mov pop arpl xchg loope xlat aad cmp pop push inc sbb jl in adc cmp cmp aas or (bad) std subl jge add ljmp or std (bad) shll and cmp dec ja fwait mov leave adc and pop imul popf pushw fwait inc mov ds or sbb inc push (bad) or and cmp rcll inc pop inc mov xor cld lods pop pushf iret dec push out push (bad) stc outsb sub push loopne pcmpgtb push cmc sbb add arpl out jmp aas push popa mov fs mov inc pop pop xlat inc mov aad jne jmp xchg inc cmp xlat xor inc pop dec pusha push xchg mov daa (bad) imul jmp in mov cmp jo ret (bad) mov add jg adc cmpsl xchg and xchg mov cmp xlat mulb (bad) inc pop (bad) push jbe pop (bad) mov mov pop lahf sti arpl imul lods mov mov repnz in (bad) pop cmp sbb loopne mov push push adc sub imul lretw push out mov push sbb lea pop imul fisttpl push jbe mov rolb xor dec in dec sahf (bad) inc loopne jb pop xchg pusha pop insb mov add jmp les xchg adcb (bad) std lret leave sbb cmp fldl2t in jecxz xor mov lods popf int3 sbbb pop sub cmp outsb fisttpll push and add add push push mov repnz mov out sub jg jb jmp ficompl repnz lret push test stos popa push push jle rcrl loope push rcrb push push mov imul mov jg ret jns jo push daa push adc movsb lret inc push sti sub in bound movsb idiv repnz ss sub pop insl push in mov xchg mov add mov push pushf sbb out aam add mov push jne rcll add (bad) aam fs ss jno outsl negb test mov lcall addl and mov loopne mov hlt dec adc jo lock (bad) add adc and fisttpll xor notb or inc clc add pop add bound sbbb jmp push inc mov add ss xor and pop xchg into cld dec pop and sbb push repz pop js repz jp sub or mov jle adc lea dec (bad) (bad) mov (bad) jne adc popa out xchg mov mov rcl and stc pop pop mov popa mov and push sub pop rcll push lea xchg add pop pop jb sarl inc pop out fdivs pop insl rolb cmp cs popf jmp push xchg and sti and jmp push fcmovne pop sahf inc push xor icebp mov mov (bad) jmp cmc popa xor in inc lea push mov icebp lds or pop jo (bad) pop mov mov xor cmp xor add cld sarb mov mov or leave cmp or jle shr dec sbb pop adc pop lock mov call lahf cs push mov push mov adc or arpl nop cmp mov lock or jp sarb and adc xchg out and add mov push push dec cli push add mov andb sub sbb leave int3 xchg lock push mov roll push xchg add push push mov das add outsl sbb inc mov mov sbbl adc out push jle data16 out dec mov loope push dec pop shrb or ljmp jge pop call jno cli pop jp mov pop push movsb jns or repnz push lods fxch fs mov (bad) add xor sbb gs movsl cmpsl ja xchg lock daa leave add jns push pop loope jnp ret dec lods scas lock movsw pop popa dec cmc lods xor push inc xchg jmp xlat repz mov and push sub add adc lcall xor in dec inc jbe out ja jns fdivrs mov push push scas pop in xchg cli mov and mov push inc cmc gs sub out jmp add add ja push mov jo xchg lock push stos in aad mov divb xor sbbb pusha int add pop call push pop push jno outsb push dec mov jp or lret add out popa jg add cli rorb jmp mov jecxz test je repnz or mov xchg fcomps loopne jmp xor push xor dec push inc add mov pop imul imul mov push sbb xchg push add mov cld notb ret mov repz (bad) inc and adc jnp addl ds enter jecxz adc orb les vphsubdq aaa sbb cli xor in fdivs lods movsb cmpb ja push inc mov pop fmull std fwait add rolb or mov in mov test mov not (bad) popa lret add rep jle (bad) sub push and mov (bad) or enter xchg fdivrs lods testb inc out adc test and and fstpl sbb es ficomp rolb mov (bad) cmp aad (bad) cld adc in inc rorb insb imul inc and dec gs adc mov adc jae clc cld sub jnp dec out jbe xchg pop in push inc mov xchg xchg jmp push enter sub dec mov hlt push dec incl mov sbb dec insb sub enter pop add mov pop mov and loop js push mov xchg ds mul cmp jecxz adc dec pop mov xchg test std push sarl lcall je loopne jge sub ret rcll cmp jg add lds pop or pop cs or sbb sbb repnz sbb xchg sub adcb sbb pop jmp ja leave (bad) xor sub mov ret mov sub mov xchg dec mov daa imull push fist fs xchg divl test subl xchg sub add fcmovb mov bnd ficoml add aam pop xor divl dec dec cmpsb and mov xor daa pop sub sti mov inc push pushl out sti sub lds scas out and xchg movsl push testb cmp into xor sbb mov jb test push xchg jge or mov xchg or lock lret push adc fs pop hlt mov cmpb sub aam push mov aad sub in xor js dec dec inc adcb dec test pop bnd add adc xor add xchg inc sub push iret ss idivb pop pop pop sbb dec shr sbbb cs addr16 pop mov lock mov shr in jne push pop mov out adc into faddl loop gs std or sbb mov cmp jg fdivrl pushf or adc jmp mov movsl fild movsl push xor cmpsl pusha cmp xchg jne or cli popa add fistp fwait jg test sub fbld jbe or arpl pop add cs cmp testl pusha xor fildl dec pop push push sub jmp adc and mov movsb int inc dec and push mov (bad) mov mov imul mov xor fdiv adc pop outsl sbb repnz addl cs imul add add inc or movsl dec sti cmovnp jmp cmp cmc sub push sub xchg bound test add aaa inc mov xchg jecxz fistpl add in shrb dec mov sub jmp jle pop sub mov xchg arpl xor loopne aam lods add cmpsl jle pop jl inc ja in sub push movsl push decl arpl mov sbb push insb mov hlt das not and push jae mov sub or test aam jle clc sbb mov or data16 fucom cmp test push and aas jnp and sti inc mov mov rcrl push jno push sub push pop into popf adc mov test mov jmp (bad) jmp xor or xchg rcr pop sub fs lret adc adc out iret cmp dec int3 inc pop pop popf jl (bad) sarl nop movl adc mov xchg mov sbb or and mov jbe lods push lods jp test jg jmp cli cld push and adc dec shl dec adc inc shrl addr16 push stos mov js mov jb sub popa pop iret daa push sub fist icebp xor jl (bad) mov and or add (bad) or divl dec sti sub jo cmp and push cmpsb into mov pop lods inc dec iret sub clc pop push mov dec dec fdivs add fist lea jo (bad) fildll mov out add mov add movsb popa cmp dec jmp test fnstsw push cmc pop das adc push cwtl jnp stc add pop stos cli ja rorb (bad) divps cmp rorl mov mov in jne mov add mov sbb repnz out mov or cmp dec lahf dec pop dec ljmp loope lcall gs push add ret shlb adc add aaa xor (bad) jae outsl dec ds lds daa mov xchg sub and sbb jmp jo jmp (bad) sub inc leave mov add dec push xchg add xlat cmp mov xor add cmp js mov subl inc sbbl and repnz push ds xchg cli xchg nop out inc pop push cmp push push and push std mov xor add and adc dec push push lds cmp mov or pop mov push fs xchg imul call rorl out fs or ja mov rorb rcl jnp lds pusha sub fidivrl xor rolb in xchg not or push mov push push push (bad) mul push jge mov jmp push add inc mov add movsb add ret cmp fcmovnu sub daa mov add mov aas imul jo mov jnp (bad) or inc dec mov push iret xor mov pop je imul mov ret ja adc test in clc push xchg test sbb aaa pop repz add dec mov add pop jmp pop push sbb push jnp push or adc es sbb xchg push in loope ds add or cmp rorl xor push call inc mov sbb sbb or into push or (bad) and pop sub sub dec sbb not or sbb inc (bad) fstpl out icebp mov xor mov rcll int push push pushf push movsl cmp or mov (bad) push pop out xor pop (bad) cmp xchg shrl pop out in inc les jmp or jp (bad) out dec xchg push ds xchg popa test jmp in jo test out stc mov dec jg in jle cmpsb mov xchg adc pusha add inc orb into xlat mov lret mov push sub ja iret add cmp bound push pop fnstsw and out leave mov and push pop xor mov fildl lcall jo add pop les aaa push int3 lea jmp pop push dec mov (bad) ja aas pop add fimul inc add sub dec and and mov aaa sbb mov add jns fs (bad) push push into je cld inc movsl std or mov pop and add pop or sbb and notl (bad) dec add adc sub xchg les test jmp jne in ret neg popa xor aam mov jnp notb cmpsb and out (bad) (bad) std imul cs push xchg pop outsb int3 cmp bound xchg mov sarl pushf cs add ror sub mov dec mov jns xor sub add lret in movsb mov push rorb mov xchg inc pop mov arpl js (bad) rorb out rcr inc stos mov sbb push test out in dec (bad) fildl sub out jg shll out stc sbb sbb xor jg xor dec ror vmptrst jnp ljmp mov jno push stc push jmp shll and push imull add (bad) hlt dec fdivrs jl push inc negb imul popf out cmp nop test inc dec in dec mov in inc std push dec add testl push leave movsl and test les hlt es or pop fwait (bad) sub inc jnp or jg fdivrs push dec pop lahf in das test jle add inc movb and push pop add push inc jb push xor int3 mov pop imul ret push mov clc orb cmp and es dec mov xor dec scas mov stos cwtl test adc sub adc gs das loop aad sub aad mov inc inc xchg inc xor scas add test jmp mov push inc js push mov add mov adc jno mov ret jmp icebp (bad) daa stc jecxz lret dec (bad) repnz xchg (bad) hlt xor xchg mov mov aas xchg xchg es push movsb fimull add cltd add es nop jbe push push add fwait adc push subb pop mov pop jmp jmp adc push mov in push add cmp or jp jg scas test dec std mov push daa add call pop inc jmp adc inc mov insb or imul mov push rorb or ret push pop cmpsl sub adc pop sarb int loopne (bad) (bad) and fmul cmp mov and addr16 xor cld mov mov mov xchg or pop or adc sbbl pusha test mov js insb nop sahf cmc lods mov sbb dec push in enter das je scas enter nop neg inc jecxz or mov and mov mov and jno mov inc mov adc (bad) div push and mov and pop xchg out in sar jmp pop pop out fbld dec imul jmp xchg mov cmc shrl loop ret (bad) sub das out pusha lds push or mov pop cwtl imul lret cltd insb mov push add add and pop inc nop int3 rclb ret lret aaa jmp push pusha jb jge sub inc pop add (bad) rcll insl stc nop mov mov push xchg es sub repz or pop out das sbb add negl repz (bad) push das and mov or jmp adc call nop dec adc push divb scas cmp jmp inc jge sub int out cmpsl es cmp jmp add mov sub dec out ds xchg cli int sub xchg lock and sub mov sub inc add es (bad) dec aad xlat rorl loopne mov sub sub add jmp repz cmp in rcrl aas aam or pop pop repz push mov cmp addl mov xor (bad) outsl inc in mov or inc sbb sahf push mov pushw pusha mov (bad) aam test stos pop incl ret fucomi aam push aad mov add mov pop or out inc push or or and aam mov fsts pop addr16 in sbb jmp sarb (bad) xor pop jp dec add stos mov adc push xchg push mov nop in sahf mov daa (bad) push (bad) push adc cld in or cmp pop jp fcomip repz jb inc loop push inc (bad) ret sub pop (bad) jb,pt jg and sub cmp xchg dec xlat loope jae inc stos push xor sub mov pop xchg push push (bad) outsl rorl stos mov lock test pop call mov dec popf add lods push mov xchg fldl dec fsubrs push lret inc aad jbe pop mov rsqrtps sbb rcll sarb pop cltd adc xor lret dec fstps lahf push adc pop stos (bad) push in movsl hlt adc pop mov inc pushf daa out jmp xor pop iret mov mov out push adc lods push mov xor in inc mov push add in rolb add and push aaa loope nop inc mov push mov cmp xchg xchg sti adc push repz xor (bad) pop out mov sub push test xchg (bad) or fidivl sbb and icebp outsl mov outsl push movsb out xchg xor lea mov jl xor mov jmp jo nop mov add push or leave je js iret shll jo addb ret dec fidivr (bad) adc cmpsl cwtl dec inc (bad) mov add dec and cmp xchg test xor adc sub sub std into push dec (bad) sbb fisubr jle js mov xor mov mov mov out inc es and rclb mov xor or xor xchg dec aaa and and insb (bad) cmp aaa js loope nop push jmp push cs xchg or dec dec adc out pop push int and dec inc pop adc xor fwait pop lock add test or mov push push fucomi gs xchg pusha call sub cli popf pop mov mov mov push push ja jp jg or dec imul movsl jne outsb cli mov jns sub push out rclb adc cld nop loopne dec jb push je inc add addb jnp jge pop pusha mov inc xor mov jno cmp outsl popa sub mov sub cli scas in sahf add or pop push jp mov es inc nop push outsl inc shlb pop inc pop ljmp push mov push ljmp add or ds insl xor das sbb push das add daa js mov mov jl cmp jbe or daa aad dec xor or mov lea push rol add or aam sbb sbb sbb out lds push dec les repz cli dec jne subb repnz cs stos pop push xor mov (bad) je pushf loope or addr16 xor ss inc orb or adc push push mov and repnz add scas xchg mov mov ss ja out sbb stc xor dec dec dec jo and dec imul sub add add pop sbb cmpsl imul or xchg dec ja jne sti and push cli imul leave adc ja sub out fcoms stos mov in mov lea mov add movl repz pop mov pop ja insl ret sub dec adc jb mov jb add xor sbb clc ret jp int3 lcall add or dec mov stos mov movsb lods inc inc adc negl aad pop or and jmp sbb mov (bad) cmp add inc lods imul adc mov sub bound xchg jl and xlat gs repz notl outsl fsubrl into cld sti dec jb and and aaa pop sub out add and xchg xchg test add test scas (bad) enter sub leave sbb lods ret int pushf xchg cmp iret mov (bad) arpl xor push data16 gs mov in dec (bad) fstl (bad) adcl in xchg and sbb mov repnz outsl mov pop sbb (bad) or sbb jmp fcompl inc into gs push mov or or fs stc sub lret nop ret cmp jmp out fxch repz jecxz pop adc in movsl lods adc or sub push sti jo and ljmp leave daa sub cmp mov inc pusha cwtl mov (bad) jp sbb mov xchg pop sub test jg or orl cmp sub cmc scas aaa outsl xchg mov adc xchg add add pop push int mov inc lahf imul daa ljmp cmp bnd lods adcb or sub cmp mov add add sub daa add push mov push push sbbb (bad) loopne pop and jle lret add cmpsb and dec mull and shrb dec test dec in daa imul xchg mov mov imul cld push lods fcoml mov add (bad) jo inc xlat push mov pop sarb or mov inc out sbbl dec loopne mov xchg ficompl jmp rorb jns daa ja lret add or cs mov dec ret cmp inc lcall xchg movb dec incl dec add dec test mov addl or jo or or add lret mov mov (bad) cmp in push fwait stos mov (bad) pop or je sub push push mov test (bad) adc les shr in pop in xchg hlt push movsl fldcw movsl cmp and fsubrl cmc inc repnz xchg mov sub xchg clc mov pusha dec xor sbb les clc gs jb (bad) stc pop lret or pop repz or xor negb fbld flds jbe pusha inc shl push pop jmp or dec add movsl scas cmpsl or fild (bad) rorl sub repz int3 adc mov fnsave (bad) fisubl xor pop test popf outsl add mov sbb (bad) pop pop push ret mov push das shll cmp xor pop loopne push jno pop icebp mov sub sub or xchg push mov fimul scas mov (bad) push push push push jl sti js pop fiaddl or lock jb sub mov jp outsl ret int test or cmpl ret xor jge sarb mov sbb or adc pop jg jae xchg push imul adc iret dec insb inc pop adc adc pop push les dec call lods inc cmpsb dec nop mov maskmovq push roll or sub sahf or mov xchg jb push sub bswap std pop push cmpsl xor dec shl into pop or (bad) imul mov pop cli add stos mov add xchg pop shl or cwtl js mov aas loop sbb enter add loop xchg cmc out jg dec gs add or cmp mov inc or pop mov jmp dec sarb sti sbb lret aas fcomps push mov adc or mov pop imull push jmp int div xor in ljmp daa pop push push inc (bad) pop rcrl sub insb or pop pop push mov sub mov mov xor push xor daa or jle pop pop cs mov push pop xchg fimul jmp push push mov xor mov push rcll mov mov faddl subb jae and and cmc loopne rorb mov jg inc push adc std in call jl push pop dec jo decl out dec sbb cmp pop repnz dec arpl sti or std fcompl and clc mov in add add jmp loope jo mov dec mov xor cmpsb ss adc push mov movsl push shrb lods xchg movsl fstpl lret jmp xor pop pop test push sarb add jmp repnz cmp add xor pop adc fimul add sub push sub push je jno test cmp mov dec pop jnp and je push dec xchg pop ret or pop lahf xchg lea in (bad) xchg bound pop xor mov xchg sti xlat (bad) out xchg popf or scas and popf add xor xchg loopne dec scas push mov push jne adc rolb inc insb adc sub inc shl fwait xchg (bad) cli scas fs cltd aaa mov jno in lock mov and ret popf push fsubrl fwait scas push insb sbb cmp xchg sub mov dec mov hlt lret scas (bad) pop out mov leave les xchg adc pop pop sti das aam mov dec inc add mov pusha sbb add add inc add xor mov cltd push shr add xchg cwtl add pop jnp psllq dec mov adc imul loope or push sub add jecxz pop and inc mov pop pop adc ds sbb gs pop mov jmp sub pop int shrl push add stc sbb rorb push loop (bad) ja dec jmp dec fistl push push push fsubrp xor lds xchg add inc and in ljmp rcrl add lea push int3 jge das sub rcll sbb shll jmp lods ret cs dec pop or pop das ljmp and jne movsl jo push int addl mov mov pop adc mov xchg mov cmp add mov xlat out fucom aas xchg stos xor add out pop pop xor adc negb rolb sbb pop pop ror je mov push fdivrp in popa sub inc mov fdivrl jmp jp cmp subb mov cmp ret mov repz ja cmp sbb xchg pop sbb cwtl das enter adc push fs xor enter pop adc push mov xlat stc rolb jmp (bad) enter sbb test jle dec dec add pop add pop movsl mov subb add nop aas and mov mov mov inc mov data16 sub push es xchg jmp mov xchg jne arpl sub pop pop mov mov xchg (bad) xlat jns mov das xor dec loope sub (bad) je popa je cmp lret addr16 in jns lahf mov pop jmp iret or xchg inc adcb sbb mov ficom xchg add rclb lods jo sub repnz rcr push mov loop sub or lods js and aaa xor push stc stos sub loopne mov push mov dec xor jmp mov cltd bound iret dec mov jle xchg inc and and out xchg arpl push push aas sub add xchg test cmp loopne roll add mov imul leave or andb pusha js xor fist test cmpsb push xchg xchg inc add sub cli jmp lds lock in sahf sbb or xchg adc (bad) cmpsl jg xor rcrl push insl cli xchg mov push leave mov xchg pop hlt cltd add add and das scas jl shrl aam jae inc jbe cld or pop fs pop sti lret and rorb xor lret jmp loopne cltd jl mov lahf daa jmp int3 cmp mov mov shl outsl add or add roll add pop cs jle cmp dec mov pop mov jg or sub inc jg xor mov orl add sub push mov orb sub rcrb mov xchg and repnz ret (bad) into cmp leave loopne cmp push aad fsubs sub js or push out mov out cs or es xchg or jecxz adc loop xchg (bad) mov push push stos pop test icebp pop push mov mov test sub ds pusha adc adc add scas sbbl mov jae add xchg icebp jmp dec ja push scas inc dec ds (bad) jecxz icebp or push cwtl or aaa sbb cmp ja mov xlat sub or mov or out cmp xchg fnop js into notb test or add add ljmp pop sub add ss decl out je,pn aas add or out data16 in gs ja mov fnstenv inc jp fldl fldl or xor shrb sub out dec out pop pop scas inc test es mov fisttpll jg dec mov pop add adc dec xor in add mov mov sarb add cmp pop movlps mov mov sbb adc movlps xchg cmp mov jne pushl mov inc pop push push add cwtl clc mov jns lods aam pop imull dec add jnp xchg in ljmp mov mov repz and mov out ret stos out add stc mov loop add jae xor mov mov rorb mov sbb xchg push push jmp ljmp add popf dec in fcomip fidivr ret xchg sbbl test addl in adc iret add push xchg rolb inc sub jp in insl sub das (bad) and jmp (bad) mul jecxz aad pop mov push push cld xchg daa pop mov inc cmp pop mov adc imulb inc dec aam div ret add jbe add lods sar (bad) mov sub cmovo push movsb int les dec push sbb and jne (bad) jmp xchg pop pop dec das jne lock jp and scas outsl stc bound or and popf mov push pop cmp sbb cmp inc decb fmuls das xchg mov inc jbe add and sub dec mov xor jmp loope mov mov out dec out das dec out cmpb add outsl ret gs cwtl push insl jmp lock mov cltd adc out inc mov mov xor mov loop jns jne out adc popf and stc mov sbb dec pop pusha push lds int3 jg jbe and rcrb push jmp or int3 push cmp inc mov pusha xchg mov or cld cli cmpsl cmp adc push cmpsl cld nop iret push dec movsb es pop dec lock jp test xchg fist xor sbb (bad) imul cmp jo cmpsl sbbl daa dec add nop xchg fstps outsl dec xchg add fs sahf push or add push jmp xorl adc and daa loopne push xchg jo je xor mov and or out add nop call push xchg mov lcall dec scas push test pop ret pop mov xor jnp xchg pop inc (bad) fdivs jne imul loop push adc jmp aaa inc dec out aaa push cltd or xor xor pop sub push and and imul rorb repz or into push movsl ret idivb xchg icebp ret cmpsl (bad) repz jmp jmp dec mov icebp jl pop ljmp mov add add loopne (bad) ret sub mov sub adc push push adc out lret nop aas mov push popa xchg jle and sub cmp fdivr jge sub sbb leave (bad) out inc dec push push add iret mov sub or lcall inc mov push add aas pusha rcr jne jo xchg hlt push jg cld or imul lods jle movsl pop (bad) cmc dec cmp (bad) xor adcb jno sub pop add sub cmp in test adc dec add call push dec cmp sbb (bad) push add repz jae inc xchg cli adc xor and outsl and aad leave jb dec inc insl ret aad sub add (bad) js neg fimul nop mov jmp xor xchg mov mov (bad) push xor shl sbb icebp sub xor fldcw sbb push sbb hlt lea inc jl pop in mov ret nop dec xrstor loopne xor push in in in or sub and movsl or shl mov aas lods pop mov call bswap loope dec push fldcw mov pop pusha sub imul push lea or inc or mov or fldl addr16 add out fidivr repz inc aas xor es xor outsb leave pop repnz pop mov push mov lods jge jmp add add adc xor dec xor jge xor lock push (bad) sahf cmp xchg not or push insl daa xor push arpl out fnstsw sub sti add push jecxz xlat icebp xlat sub fs loope cmp xchg (bad) movsl xor dec pop add pop push mov inc jo lods push sub insb ds fwait (bad) lret les test or push mov pop mov push mov or test push ljmp decl rclb imul (bad) aam clc push pop outsl cltd lahf aas loope outsb push or pusha cs je (bad) jmp aam sub imul add xchg lcall sbb pop (bad) daa enter inc and mov jmp and lods dec loopne das mov adc xchg sbb (bad) lret pop inc mov push xor in loopne xchg and pop pop pop mov aas mov and lods out xchg and adc (bad) pop dec hlt or push sbb push rcll mov inc dec or scas gs (bad) fdivp pop inc or cmpb fisubr fnstcw mov stc or sahf outsl rorb sbb push xor mov cld in push int rep inc cmp das and add fsubs adc cwtl insb push pop lret dec adc xchg out sub add xor jmp cmpsl in sbb (bad) sbb sbbb mov push pop mov data16 inc or jo fldz xchg push jp mov lret (bad) dec and sub shr scas test std adc add mov into mov mov mov add add (bad) mov (bad) scas xchg shl pusha xchg jns rolb sarl dec imul jmp in cmp xchg pop sub xor nop and call jmp and pop push jne sti hlt (bad) push js pop push mov sub jne,pn add mov mov inc stc into jb pop sub dec inc or push out dec (bad) sub in mov daa jnp scas mov pushf xchg call or fsubrs test popa (bad) fisubr aad enter pushf mov fwait call jno test aaa loopne stos subb into pop xor mov and bound ss test mov dec dec test and fisubrl lret push adc sbb sub lret push addr16 lods lds mov add popf cmp pop cmp enter xchg pop and lret jbe shr sbb lret loope jo or test not push xor arpl mov ds jge mov pop xor aaa add arpl mov inc mov out loopne cmpsl mov out mov mov mov leave sub shrl add insb pusha and outsl mov dec cwtl mov icebp stos xorl mov push jno sarb and xor cmp in xchg js popa clc inc lahf or jge lods loope jne cwtl xor popl add pusha add sub repz es mov dec sahf je mov mov pop stc adcl cmc jmp addb pop lods sbb sbb repnz push sbb (bad) mov vmovapd ret push xchg xchg xchg ljmp dec add outsb std or cltd inc in daa icebp cwtl sbb adc jno out push imul add or add imul scas add inc out pop inc mov or lock inc or ja xor add stos push repnz dec movsb jmp jl lds pop dec sub loope jge cmp in (bad) sub test clc cs in inc or sahf or jmp or pop in repnz cwtl pop push ljmp mov and lods stc sbb addr16 test sbb and in inc lods jg bound jns jg jnp jecxz cmc lcall fstl or pop xor sahf mov dec push in jns stc push out adc popa xor shrl xor out mov aam add and add (bad) popf and out sub sub js pop xor jmp outsl stc jmp pop cli adc xor push or movsb xor int or jo jnp xor cmpsb jp xchg into fildll jnp and or and js push pop sub or sbb outsb add adc lods stos cltd lods mov jle pop imul xchg xchg cltd hlt inc nop xchg gs out or pusha or sbb arpl cmpsb adc jbe nop into dec imul andl repz mov xor pop sahf dec ja xchg dec (bad) fistpl jmp push (bad) insl jmp cmp roll cmp inc rcl popf lahf pop xchg enter or jmp aas xchg jo repz movsl mov out (bad) mov cld daa std push or data16 sbb dec mov jno push inc shll jmp mov adc mov jp mov or pushf repnz rcrl lcall aaa adc jb push pop testb push adcl into mov push test mov aaa jge leave and out pop jmp jo jae dec sub inc cltd pop arpl mov pop bound lock dec mov cmp fldl scas sub mov push push xor sbb and adc repz mov sub (bad) jmp (bad) inc aas pop fldt outsl and out cli in ret or pushaw sub push mov subb xor or adc ja pop mov mov jmp cmpl popa test mov push dec imul ret push (bad) call mov orb xor imul jg pop rcrl aas mov add mov add adc xor xor mov pop sbb loop cmp cmpps xor movsb push decb dec inc into pop sbb add pop out jecxz cwtl in scas ds jmp pop mov pop cld ds mov xor cltd pop push cs test sbb xor dec mov lods je movsb and test jae cmc cmp inc jg or lea add shrb stos inc fdivr aas hlt xchg pop add nop mov stc fisttp xor sbb xchg and and (bad) pop adc or push leave inc cs push adc jo negl (bad) or daa mov and shlw inc pop inc jns call adc in test xchg in clc inc push dec and pop fsubp and ja pop aad pop add xchg push int pop dec xchg xor rorl sub add push mov jl push mov (bad) imull xor call pop lcall lds arpl and add cmp and jb xor aas (bad) repnz jbe inc push cmpl push sub xor dec jl stos fdivs cs cmpb out sub jp js loope dec push ja lds mov sub (bad) (bad) std adc mov cmp pop push movb out ret xchg dec in sub dec lods pop ljmp prefetcht0 (bad) push out ljmp mov in jge fiadd loop je outsl or imul mov sbb popf rcll (bad) out xor es adc add adc mov iret std in pusha daa outsb aad jno in cwtl repz mov jo cld lods mov lahf lret es std xor mov pop lods mov sub push push jno fcomps aam mov lcall jmp mov enter imul cmpsb xlat xchg sub lret call mov xor mov and and adc adc jo xchg (bad) idivl adc or jge sbb popa dec or call dec popa mov pop sub mul mov push push xchg xor push mov sub fcompl xor jge pop xchg ss jne mov ja mov inc out addb add lahf mul sub push ret add jg inc les (bad) cmp (bad) enter cmpsb xor ss xchg push test jmp jne xchg ficompl sarb inc mov dec sub jmp shll cmc int3 sub sub and mov push mov and mov cs cmp roll stos cmp mov push loopne push jbe xor pop sar push lods enter and push jno ja aaa leave xlat in sub icebp sub aad mov push push shrl push imul adc mov lock xchg xor xlat aaa mov test fldl pop out shr pusha (bad) lcall sbb out jl aad jbe add out aaa push jne repz repz aas into pop pusha insb adc int ljmp dec out mov out dec or or callw mov or or fcoms fdivrl (bad) popf pop cmpsl arpl mov jge or inc add dec adc or enter out sarb push mov es cmp sub push je orb sub jmp mov add cmp movsl mov fisttpll xlat cmpsl adc inc push add push (bad) or pop push sarb add add jno imul adc (bad) loop and push std pop test jno (bad) mov add fcoms sbb popa or jmp decb and mov pop add outsl cmp jmp (bad) mov gs cmp sub out bound lcall jmp repnz iret add add cmp repz scas fwait pushf sbb std cmp out push mov aas nop add pop jb cmpsl pop int rolb imul push cwtl xchg es hlt das pop dec mov fist push adc (bad) stos test mov mov loopne sarl jmp adc prefetch stc pop pop sbb xor loopne mov adc and pop jp nop (bad) repnz mov pop (bad) into xchg adc inc xor push enter pop and add sub cmp lret cmpsl push add pop (bad) inc pop and or jno or or hlt pusha xchg mov add sbb and xor lods inc rorb ljmp lods and pop xor push mov nop ds sarl push xchg test and jns mov fisub aas out or or dec or and add sub mov js xchg clc add inc add mov jle jns adc (bad) pop ja iret dec pop adc add addl xor inc lcall lods cli pop ror aas hlt dec (bad) into sbb popf lret into and fistl xor mov lods dec (bad) cmp lcall arpl inc push or pop push in mov sub in lods and adc (bad) push push and out sub dec mov mov sub xchg jns popa jmp into stc push dec leave xchg push fwait lods and or cmp cli (bad) mov push mov (bad) fmulp add rcll in lds and inc lds fidivr aaa shl xor rclb in sbb stos inc mov mov xor icebp (bad) popf mov or add nop or mov cmpsl add int3 mov adc mov and pop or jmp sbb lret or insl jmp dec jl insl outsb scas or daa xlat outsb enter aas es loope mov mov loope jle push jle jae fs sub pop (bad) mov enter hlt pop jno jg mov inc push adc add inc jns cmp cmp xchg ret jno pop push cmpl jle inc sahf xchg cmp push or jp and orb and adc and pop push int fisubl (bad) sub jge les xchg pop or (bad) roll or insb cmc gs mov pop push mov push inc mov repz js xchg inc mov or mov jg sbb pop pop loopne add insb (bad) or and dec call mov daa mov js ret adc mov (bad) sti aam mov dec mov and sarl mov out jge fmuls lea ja stos icebp data16 xor hlt scas mov (bad) ret jmp rolb push rol ljmp dec add shlb and int adc xchg daa cld pop std scas les mov subl es pop stc xchg jne (bad) push sahf push and loopne (bad) rclb xor sbb mov xor jmp andb adc and jmp or adc bound insb and pushf mov (bad) in repz mov (bad) jmp out js xor dec push (bad) push mov mov pop mov xlat mov pusha inc push mov dec push mov shl clc mov cltd scas add adc icebp sub mov or adc repz gs push test push dec pop out aaa gs cli adc ret pop xor in (bad) pop dec stc das mov add sub mov and mov xchg outsb and xor push dec cmpsb add mov jle insb push testl movsl dec mull repnz leave push pop jge push lret and pop cli repz jmp jo inc adc cmp test pop pop push mov daa shrl sub mov std push flds push push add fs sbb test std popa xchg pop cmc dec fs popf jmp outsb pop mov not inc pop stc add mov xchg jg nop xchg hlt (bad) push sbb add repz xor rclb xchg pop sub test xor push cltd pop test sub imul add int3 xor push xchg icebp test and sbb push sub (bad) mov cmp and (bad) mov inc jle or or bound (bad) xor jo and and add aaa xor sub xchg es aas mov adc repz rol lea inc inc inc mov add add aas cs and xlat pop sbb push fdivrs loope xlat push xorl arpl pop push iret in mov dec xchg fist push popf push and notl inc loop cmp jns into inc sahf cs push enter mov push fsubrl or mov jnp mov push sti pop int3 ja ret imul or test mov jno add inc cmp pusha adc daa jmp xor push out mov jno mov divl mov popl push lock imul mov dec ror pop lret (bad) xlat ret mov mov arpl jbe mov dec inc and xor or jmp in mov adcb inc sub adc pop loopne lret addl shrb xor jbe inc mov and or or push es add mov add les pop pop cmp fsubl add xor daa adc pop js xchg adc add js jp daa ret pop nop out aaa out pushf lret inc jp mov lret mov jo pop and testl cmpsb out pop (bad) mov pop mov es movsb pusha rcl mov cmp jle test icebp lret test xchg jbe push xor jg mov jo xchg rcrb or sbb popa lock das das mov xchg push add (bad) pop or cli and orl pop xchg lods jl push loop rol repnz insb mov inc mov comiss movsb adc push push cmpsb (bad) int cld xchg add push in push adc add xor cmc and and mov test dec pushf mov mov cmpsl jmp cmp mov pop stc add int3 out daa jmp and add push adc repz pop pop lds sahf jle pop inc leave or and out dec dec jg sarl mov cs pop pop pop or add bound loope adc insb add fsubr add mov jmp mov jge sub xchg aam xchg adc rcr and xchg add inc push xchg adc or fldcw (bad) out fbld loope orb sbb ljmp inc push or adc jle mov leave test or adc inc rorb js out or daa or sbbl ds add push jmp ljmp add mov jae cmp add mov cmpb (bad) jmp xchg adc mov stos std xchg sbb push mov adc mov cmp inc orb pop inc xor and daa in or (bad) sbb (bad) (bad) or subb imul mov ljmp daa aas adc fisubrl pop cwtl inc sbb adc push mov loope xchg call sub cmp mov mov push call cmp dec jae fdivs popa xchg mov dec in mov std imul fsubr add pop push popa movsl add cmc ljmp aas or inc jne flds pop std xlat das xor std add mov lret (bad) or sub adc xor adc mov popf loope pop dec les rcll ljmp and aad inc mov outsb es dec inc push and and (bad) xor stos lock aaa popa dec je fstpt xor adc inc cli mov push dec pushf lret fsubl cmc in and pop inc es ja popa popf sub pop inc cmp iret imul sub adc push inc and in push cmp imul mov fstp pop mov add add int sti orl mov or mov xchg xchg push or add ja fxch std popa adc cltd mov sub sub mov jno mov jno cmp mov icebp adc dec add or or or sub rcll out cs mov add rolb hlt or rorl pusha xor sub arpl lds push ja test loop insl xchg push mov pusha push push aaa pop inc ljmp mov imul mov push xlat rorb imulb mov push adc lock repz pop add xchg stos push out pop int3 jne add xor or or add pop pop cmp add ret cmpsb int3 (bad) jmp add push or fs arpl mov in mov or push (bad) popa mov imul xchg in insl or dec xchg push rcl loope xor sarb out pushf jno sub or mov push add leave in add fldl inc sub pop mov cmp (bad) adc dec jecxz adc aas je and fwait inc inc or cmpsl or xchg test pop and xlat or arpl adc mov inc mov fld xor jno decb imul push inc pop int push mov lds (bad) frstor jg add mov add mov and out nop mov (bad) push pushf ds jmp rorl sbb in push xor or out in mov lea cmc adc loopne push jo and push ja xchg adcl mov mov popa jge jmp iret sti test repz inc mov jecxz mov dec repnz sarb fstps mov lret add sbb pop sti daa das mov xchg fsubs push rclb jmp mov sub daa xor aad mov jmp add push cmc jno add pop pop (bad) icebp movsl pop push adc neg les push mov cs inc or and mov xor add adc cltd rolb adc mov rclb cli xchg lea std pop mov (bad) arpl in subl lret push gs (bad) pop xchg enter leave lods fisubl sbb (bad) (bad) pop push in mov xchg aaa inc insb push mov mov loopne sub hlt mov xchg push push xor les mov cmpsb jg das add push aas imul adc cmp cltd jp pop unpcklps dec and inc add push ret popa mov test push pushf jg add (bad) pusha test (bad) push jne adc pop out std lret or adc inc push add aas in das push sbb lret test and adc jmp sub sub fcoms push mov mov divl mov mov mov out es or test adc add mov or sub int shlb add ret mov pusha pop and xor jmp pop out pop jae dec (bad) mov and jae imul jge out inc dec jb scas into xor rol pop aas add cmp sbb add sub add jge sub cmp test es out fdivr jnp fsubl (bad) das and andb test loope repnz push sub inc test adc mov (bad) push push mov pop mov stos rol mov call in xor pop int3 pop adc (bad) push fdivrs ljmp sub pop inc das add mov pop scas jge ret fnstsw ds dec push dec mov mov sbb xchg (bad) push jns dec cmp loope cmpsl or (bad) jge orb enter jae dec daa ret xor out or sbb push jg lock or mov adc jo cld add push aas add xchg xor cmpsb mov sbb lock faddp insl inc pusha iret arpl aaa or das inc icebp fisttpll test dec add int3 and mov loope cmp inc pop mov pop mov orl or push jp hlt aas fcoml fldenv test xsavec and push jle add cmp test dec sbb lds stos (bad) dec ret incb loope mov adc add out insb mov jge xchg mov inc add gs mov push xchg ret outsb (bad) clc push sti (bad) je push andl fwait add ret push xchg xor test pushf ret dec dec jg movsl or sbb sub scas aam push loopne jno mov ljmp adc scas mov mov sub or pop jle jp inc movsb lds test mov xor or jge pushl pop rclb jmp pop xchg pop add sub xchg (bad) pop xor pusha sti sbb mov pop stc xchg cwtl es jmp push xor push (bad) stos aaa jne test push push into adc jmp aas lret scas add cmp or jmp sub inc xor ljmp jmp xor dec cs test outsb mov xchg out mov mov sub push mov pop or (bad) pop mov mov mov push or adc and push dec mov push push loope pop insl repz jnp push stc dec das jl mov (bad) (bad) push cmc insl mov push mov mov push push (bad) mov jle lret push sub loop adc sub pop loopne idiv (bad) push mov inc popf pop push xor sub nop dec in sub pop (bad) mov lds outsb lret xchg pop and sahf xchg jns push ror adc jp mov push push mov xor xor add mov (bad) call lock pop scas test xchg mov xchg popa xor jmp xchg stos xchg mov mov dec les add loop int mov xor mov or sbb mov inc mov jmp jp das dec cmp jg xchg pop sysret push adc ja cmp mov add mov pop rclb xchg bound dec and (bad) icebp std cld xchg int3 test pop jmp gs lcall sub adc xor add ret pop and xor test call (bad) sub je add xor imul add outsl add sbb sub mov mov lcall push pusha pop push daa adc js ljmp pop das clc cmp xor movsl inc dec rcll add pop rcl insl push dec incb jmp je pusha outsb cmp mov ds in mov mov pushl push push in pop push ret cmp cmp xor sub push add fsubr (bad) mov push rol aam pop clc (bad) add loopne scas bound bound mov in outsb es or cmpsb sahf les pusha ret fstps stc out jmp dec (bad) or imul inc out push nop dec push popa ret testl cmp xor js push dec fs fcompl out add sub or push out or jg add cli dec hlt pop pop in int3 mov (bad) repnz and popa mov cmp adc mov mov sub in jp push xchg mov das mov fiadd inc in or movsb std std inc inc jg xlat (bad) cld (bad) pop xchg scas in pop dec imul pop pop in mov or mov push push xor (bad) das adc push out hlt into lret adc ss rcrl push mov add push mov nop jne dec lret jl mov mov mov mov sbb add aas outsb push cwtl roll and mov jmp pop inc push jecxz mov xchg cld sbb popa prefetcht0 inc lcall jb adc inc mov leave jl jmp call out jb xor add cli ret jl icebp dec in add sub dec hlt or inc pop add movsb or or sub test xchg scas mov hlt dec push mov inc inc and inc mov daa add pusha mov adc mov and mov sub pop and pop pusha or je adc jle cwtl fistpl jle les (bad) push notl xor pop mov das push js repz push pop add add icebp leave jge leave and lock lods mov sahf imul push xchg (bad) ja pop xchg lods ret lea inc inc (bad) xchg notb jmp popf dec sub sbb cli jo pusha and mov add sbb mov inc mov sarl jne clc pop cli jp xor or fwait or cmc xor daa jmp mov push cli in mov pop stos jo loop mov push jp mov mov inc imul mov inc adc pop pop movsb fldenv cmp push (bad) pusha mov pop mov jne ret das je add jbe stc enter pop add cmc adc dec inc pop popf xor dec sbb ret dec out (bad) das jmp in sbb xor cltd add and dec sub xchg push mov stos test sbb (bad) jmp out dec cltd (bad) xchg popa pop mov xor popa add mov mov pop neg hlt sub xor std das add pop mov jmp cmp jmp (bad) in and jle push sbb add inc and sub sbb sar dec (bad) dec or push ds mov inc xor xchg jo cld adc sub repnz loope sbb jmp push xor xchg adc aad ljmp icebp jmp aam pop mov mov mov or and repnz js mov inc stos divl fdivs inc inc aad addr16 xor arpl aad sbbb fstpt inc sub mov lcall push xchg (bad) mov fimull in sub (bad) or jo jg jns xchg out jns add jmp dec or fbld push insl mov ds or or je (bad) inc jno xchg lcall (bad) or in inc in (bad) xor sti dec dec or pop mov pushf and push int enter cmp jno (bad) cmc jmp cmpsl decl enter mov ss faddl addr16 sub cmp pop inc push add imul or or inc bound jns push loope push push repz daa push mov imul insb fisttpl shr das adc les rol in sbb test or insl imul sti scas enter inc xchg xchg push mov fdiv or divb (bad) js dec loope call mov sahf movsb jge outsb push cmp add jnp gs push add inc fiaddl mov mov aad pop mov sbb pop push push (bad) pxor cmpsb (bad) sti mov cmc js lahf outsl arpl pop xor push rorl in inc daa inc or cmp mov xchg sbb call sub or push mov sti ja outsb and cmp negl test subb int arpl inc or xchg xor jmp loopne push xchg fwait das adc rolb add xor sbb jmp dec and and fwait insl ljmp mov add jge rclb fcoms sub mov or mov fdivl or mov pop in cwtl pop imul cld into mov dec inc ja (bad) pop pop mov clc add fstpl out sub lods aas add push decb fcmovnb jl scas sub xchg or cmp jnp mov xor and fldl2e fstpl jecxz dec test pop mov or test mov mov push sub (bad) or xor push xor mov punpcklwd icebp add out xchg xchg (bad) outsl mov dec adc lods je popf push outsb nop aam cld pop jo movsb pop das sbbb add insl pop xchg sbb adc sbb shll scas xor cmpb add inc pop dec mov dec sub mov add call repz or loop (bad) mov mov pushf mov call inc cwtl sub dec inc mov sahf call push (bad) insl test sub dec cmp out mov out std inc xchg mov sub sub test mov adc sub sub jmp lret add cmp xor cmp (bad) daa pop adc push mov ja (bad) in add pop aaa (bad) push lcall std and divb fsubrl jb movsb fiadd mov das sbb loop dec cmp xor repnz push ds inc cmpsl aas pusha test add pop mov hlt shrl stos xchg jmp repnz es pop xor push push or jae sub or pop or sbb add ret cmc ss inc adc out pop sbb mov das fldcw sub jnp into or mov pushl fsub and stos imul push fisttp fldt jae jb push enter ret in popa lahf dec fiadd or inc in (bad) dec mov adc ljmp mov mov data16 push push jmp ror cmp sub mov mov sub (bad) mov and xchg add fwait adc xchg mov mov push clc jge popf in hlt cs imul int3 stos test xchg fwait or ljmp cwtl fist neg mov adc and in adc or inc pop adc pop push idiv xlat xor test mov push mov mov xchg call lods (bad) (bad) inc and dec sbb add dec insb xor pop push mov adc out cwtl adc imul fist gs (bad) xor and add push push mov add imul clc or jnp cs aad loope movsl sbb movsl pop and (bad) push aam xchg js nop adc jecxz pop scas popa hlt (bad) sti repnz and jle icebp xor or jp lds ffree mov ja out jae mov divl sar inc sbb movsb xlat lret mov movsb xlat push add outsl decl inc sub or test shlb (bad) mov lcall jge outsw loop jo daa or je push mov or stc clc icebp sub mulb dec dec (bad) and (bad) push int3 or out scas sub aaa gs and mov dec sub gs sarb decb mov adc mov lahf or jmp cmp cmp test lock mov fldenv sbb das ret cld out jg xor in icebp lock mov dec les mov fisttpll add add jp lods sub or push rcl add mov (bad) enter shr mov cwtl fistpl in xor cmp push mov (bad) (bad) pop sub mov mov leave jnp and dec xor add iret fsubl and das add sbb (bad) loopne addr16 xor in incl bound imul jg mov jle sub mov cmp add or mov jp stos push pop out scas jmp mul xchg xchg icebp pop cmp je push sbb les movsb mov mov dec shll push inc mov popa ja in call inc mov rcrl adc scas ljmp popa inc pop xchg inc imull rorb add les outsb sub aad or test jmp movsl aad fisubr aas repnz sub (bad) dec inc and mov or jmp int3 jo add pop xor or push sbb pop enter push adc xchg jo push stc pop pop repnz jmp (bad) popa imulb gs insb fwait add xchg and int jmp adc mov mov scas pop int push cmpsb sbb xor and mov shr shll test adc mov adc or (bad) jecxz call mov sub adc fidivr out int3 mov lods js sub bound ljmp mov shrb jmp stc pop xor (bad) xchg mov inc mov push push cmp orb addb mov add pop ret jmp das push xchg jns pop int3 cmpsl pop push fimull pop push mov and jns sbb xchg pop jecxz dec jp xor or jnp push jno or xor shr inc mov (bad) clc xchg cwtl push add pop inc sub jle imul incb mov out jge push xchg and movsl test (bad) jb add and pop sbbl ret out xor or fidiv cmp fcomps pop push test jne pop xchg sub push ret or movsb es imul or lea (bad) fcmovnb stos xchg ja add mov daa jmp repnz mov mov ja jmp in dec ss mov icebp mov pop mov mov cmp jecxz test ja out ljmp popa jmp test jmp mov inc or xchg mov jbe addr16 push adc or push imulb push (bad) sti jp out out mov icebp cmp lds test sti test orl rol jno push cmpxchg lea pop sub insl sub or shl inc add xor and sub lret jge mov in rolb mov les xchg mov adc xlat dec cmc mov negl sub orb insl or repz cltd xor push mov push inc xchg or xor das out sub in adc sub mov or aad or in push lods fs adc cmp mov inc xor fistpll add (bad) xchg push pop mov mov les jmp xchg andl push xor fmuls adcb push sub das ljmp xor xchg jmp sbb pushf jle or push pop (bad) ljmp add test dec nop xlat jmp insl jecxz xor out call bound arpl xchg mov sti aas adc add pop jge or jmp pop (bad) rcll pop nop lods add inc adc xlat orb and mov cwtl ret mov bound jne inc jno push or (bad) (bad) ja fcomi pop or insl jmp sub add dec push sub xchg mov ret push das bswap pusha add sbb or jmp ror lahf inc dec sub push hlt stos xchg inc xorb adc push stos das dec rorb loope cmp cmp (bad) mov mov or sbb inc jmp and mov lcall iret jno inc addl jns add mov xor inc fs xchg dec or mov pop cld inc or pop in pop and mov jp mov mov sbb and sub push subb add jae xchg jg xchg cmp stc pop lock dec pop jecxz pop push mov push inc push adc dec cmp pop mov jmp xchg icebp or cmp mov xlat loop std fstps movsl push dec idiv mov test xchg add push notb lahf loope mov add inc dec cmp mov jo inc jnp pop jle add add push (bad) dec imul mov cmp mov jb inc int aad cmp test or pop fadd leave pop nop sti dec push shr aaa xor cli fisttpll int and rcll divb push aas mov xor neg jne xchg adc add inc test mov (bad) sub ret jle daa pop addr16 pop xchg pop mov dec sub inc movsl and ffreep loop out dec sub xchg les xlat pop jecxz test sahf shll push movhps pop sbb mov fiadd jmp loop sub mov mov pop test out adc mov sub pop sub cmp and pusha (bad) loope das pushf adc xor stos or xchg aam inc out jbe cmp std pop inc mov adc xlat rcrl push int3 out divb dec (bad) andb push pop lcall pop xor (bad) pop (bad) aam mov jle or test cli call daa pop popa es aas not lahf lret cmpsb pop (bad) scas xchg sbb sbb fidivr sub jg cmp push mov inc sub clc or inc hlt push pop jge pushf or scas push xor dec or xchg in jp popf lcall pop xor mov movsb jl pop out push ljmp cmp stc jmp das adc (bad) mov lret popa push (bad) test jg cmc adc add lds ljmp and xchg fiadd jno mov cmp daa frstor pop adcb mov sbb int adc pop movsb lock dec aad sub or mov jb mov shlb pushf sbb int lret lds sahf sti pop jmp pop push pop adc ljmp icebp loop test jmp cmpsl dec rcr std into imul fs clc out pop mov fcmovb subb jl jnp pop rcl leave xabort mov cs mov dec bound add andl insl push imul or mov adc imul icebp fdecstp mov adc mov or repnz lret push adc cmp cmpsl cli jl mov add ret pop jno xchg push inc sbb fadds pop push push fidiv inc movsb ret push adc cmpsb repz sbb or les sbb lret and xor xchg jle pusha nop lock push add mov idivb xlat add push jnp pop js out push sbb xor fcmovne (bad) cmp loopne aaa jne cs dec mov sub cmp or or mov xor popf rcl dec ljmp les negl daa out js jo xchg xlat adc mov lahf add and or push adc cld clc mov cli add sarl bound (bad) jle jmp mov mov mov rcrb adc std mov push rclb js jp and dec sbb adcl sub jne sbb jno std data16 pop lea push push xor loopne daa jno and mov aad and xor rol test mov nop push xchg inc push xlat jns jnp arpl jns mov loop and (bad) scas or mov sbb dec push cmpsb lcall pop push and repnz test (bad) inc jmp mov sti repnz mov divb dec bound sub call jbe sub shr fs sbb cmp clc push dec mov sarl sub inc mov inc sti daa addr16 call mov mov pop inc idiv inc out xchg jl jmp ret pop push sbb jns das sahf out sub adc cmpsl aad cmp xor sub lock adc into mov sbb pop pop xchg fimul ret dec (bad) jge xor push (bad) imul fnstsw pop pop scas int hlt icebp inc mov jb or stc xchg mov jg jnp adc push inc bnd sub cltd or mov mov cmpsl imul xchg inc lods ss rcll and add add sub mull and in cli mov test rolb repz xor jmp mov ds in add xor inc clc in mov xlat sub rcll adc add out cmpsl or lods aas mov std adc jns arpl ljmp and loop fsub (bad) shlb xchg rolb fldcw dec sbb (bad) push popf jge xchg or (bad) lret sbb and mov mov or push or pushf jo mov (bad) hlt xchg sub rdtsc lds out stc test (bad) pop add or lds add (bad) push stc cmp loopne dec dec mov push dec in mov or inc arpl daa inc mov push test or iret xor mov sbbl ljmp (bad) mov (bad) nop shr cld imulb nop jecxz and enter cmp popl dec mov cs cli or push pop std jne scas dec jecxz lret daa pop push jle out dec pop push sbb mov mov add sub cmp loopne (bad) push scas ss mov iret add cmpsl push jmp repz ret adc das cmp push call sbbl sub hlt cmpsl add xor negl popa push xorl lret sahf jo pop add dec out (bad) (bad) ljmp sub pop jb out add dec sub sti icebp out xchg sbb aad stc or sti xor push fnsave mov jns cltd push jle (bad) pop adc sbb inc (bad) or pop cmp xor mov ret pusha ds adc xor iret pop dec xchg pushf pop inc (bad) das in in in ljmp shr jmp dec and xorb push push rorl mov cld pop pop into insl cmp push pop out sub popf mov dec add jle jnp dec lea pop ret pop pushf fucomp in push dec xlat sbb xchg (bad) outsl sub mov jne jo,pn lds sub je xor push jmp mov adc sub jecxz outsl push stc movsl cmp mov cmp dec xlat add sarl push pop add push test std pop dec and xchg ret ss ret jmp dec js leave push adc mov scas sub mov pop cmpsb and fcoml repnz add pop test xchg lock lds lds or add das jge or xchg cmpsl sbb sbb adc fldl sti mov jmp adc cmpsl mov mov mul scas lods add out or inc lods and ret lret xor das inc cmp sub mov adc dec jbe mov push push enter pop inc mov jnp xchg or (bad) pop data16 mov ret mov jnp xchg adc (bad) jmp cmpsb xchg (bad) jmp std fsubr sbb push subl jbe jmp mov push adc test pop jne int3 jle test sub xor mov lret mov add pop pop adc xchg add mov ret inc mov test pop mov addl (bad) push ja stos cmpsb lret xchg adc ret jmp lock mov inc cmp hlt or xor and cmp scas pop push mov fs mov pop in lret addr16 or pop and rcl push inc outsl dec rcll sub mov mov pusha xor cmp xor jmp dec mov lahf pop rol push clc and push push jle sub out (bad) adc jo xchg icebp (bad) jmp and repnz mov ds or push (bad) das xor mov fbstp daa pop popa sbbl jns insl jo push adcl int push imul mov lret es pop add sbb and outsl loop mov jmp mov or adc cmpb rcr and es dec push push daa mov insb cwtl xor push out pop xchg adc aam sti call sbb mov pusha xchg and (bad) pop add outsb pop sbb into clc adc lret xchg (bad) push xor push ljmp test insl inc xor inc lret push add pop fsubrs nop xchg xor cmp sbb mov aad sub pop push mov jmp test cld dec dec sub aas jae lods aad mov jmp dec int3 in adc sub dec lods in xchg (bad) mov add pop jle repnz sub or adc (bad) and les push add movl cmp loop mov rcrb mov or ljmp mov shr push jle sbb ret imul push insl adc ret pop aas add enter aad mov xchg lret jmp mov cmp mov repnz pop mov sahf adc push std clc mov nop cmp fnstcw dec push shrl add inc into xchg adc or push shll mov xor xor add loopne xchg push xchg leave sub add push jg add mov imul out xchg push add add lahf push mov lods adcl jbe mov or push add out loopne push (bad) leave jmp cmpsl out aad push mov adc mov and (bad) (bad) jb ja xor adc lods sub sub inc mov xchg dec pop pop rorb leave push pop jg jle jmp mov jg inc lea pop nop inc pop pop jmp loope push ret push (bad) push das pop iret pop pop xorb inc cmpb or shl mov int3 das push dec addr16 adc push and pop add add mov jae push ljmp xchg imul pop and or stc add (bad) add push push or and mov inc xor mov in (bad) mov pop jb in sub jo cli pusha lahf ret push and jge movsb and push push xchg out dec test les in fwait icebp enter fsubrl xchg add jo pop add or sub fs mov sahf cmc les xchg dec in add jo pushf jmp pop sub mov add add das mov inc add mov rorl lret jns out das call adc dec dec test add mov pop jbe jne push and jmp loope mov in popa sub xor popf pop push fs frstor jmp sub xchg dec sti cmp loop lds repz sub jmp pop pop or into test pop cli mov jne dec and es or std and (bad) mov loope mov dec sub inc adc sub cmp sbb movsb test mov in and jo lahf cld sahf popa jmp cmpl adc lcall push mov dec (bad) jmp push jbe add fadds in and sub es push gs pushf sub jns (bad) int3 dec cmp push (bad) pop jmp sub rcrl pop mov les jge or sbb dec xchg fs xchg pop shr (bad) addr16 cltd in insb stos jle outsb push scas lret jmp loopne cmc push xchg adc ret jne hlt push add popa gs jmp mov or into sub addl loope fsts inc loope xor mov push mov mov push sbb add jmp add outsb fs xor cld sub mov das ljmp cwtl lds imul mov stc mov lcall addl test xchg je subb inc and or xchg bound imul je sub sbb pop in cmp rolb (bad) lock pop mov ja jmp jmp aaa mov and xchg mov lds pop subb pop fldenv pop test icebp sbb addb call outsb cld inc rorb fcmove ret mov pop femms cmp mov dec pop bound aad lods sbb shr jmp inc pusha add xor scas and jecxz mov flds adc mov xchg (bad) jo jns or ja push fucom lods pop insb out push mov data16 mov mov sub inc cmp push or jnp add lret sbb push cs jns test daa push in pop nop inc test (bad) xor mov mov repnz subb nop cmp dec aam adc mov or pop mov aaa xchg push add sbb inc push or adc push lds adc mov mov shl sub fisttp pop mov mov idivl (bad) ss fwait cltd push add mov jmp mov clc xchg jbe adc neg inc stos dec bound xchg xchg pop hlt negl cmpb jle push pop loop push adc lea les adc mov out test stc inc add and sbb fiadd rol mov (bad) repz inc jbe push mov mov dec clc add cmp aas xchg jnp es das incb push push push add jmp movsb mov flds loopne out mov sbb push dec sub mov leave aas add js cwtl pop bound sub mov sti push scas mov xchg add jl loop xchg jbe rclb int3 pop sub pop fistpll adc fimul sub dec lcall (bad) leave mov push adc clc dec lds or jo ret xor push or or (bad) (bad) cwtl jle mov (bad) pop int3 hlt jge sbb push loope push mov cld aaa dec or test or lcall xchg jge or dec mov icebp subl (bad) icebp push push inc stc push inc inc cmpps (bad) inc pop cmp xor mov pop ret test sub ja dec and or loop push xor inc mov push mov xchg jnp push jae imul cmc sahf cmpsb adc std push dec (bad) clc cld push add add shr mov add or (bad) push mov sbb dec cltd ret and mov aas jno jb sbb dec popf jne int out (bad) push add daa popf xchg mov or scas test adc sbb test les mov fmulp sub fist movsb in sbb xchg pop xor pop loopne or daa jmp fistl jmp dec in cld (bad) ficom cltd out inc iret mov lret movsl cmc shrl dec out mov dec call xor jmp pop and mov (bad) or rorl adc and or cli test mov test inc mov adc jb stos lret in dec mov in movsb jg sti mov xacquire mov cmc dec clc xor dec aam ljmp sub cwtl enter dec mov lds jle bound cmpsl or inc sub mov div stos jmp rcll add imull add add mov jne jb dec aad add jecxz pop xchg shrb xchg imul mov data16 ss ds fstpt xor pop dec push stos into push daa push jmp daa add sub dec xchg lock daa push lret xorl bound sub into scas orl mov mov (bad) xchg push es aaa (bad) call inc or aaa fstpl pop in aam mov inc pop roll cmpb fnop (bad) arpl add sar hlt jno test or mov push (bad) push lds fisttpll or jnp push stos sub sbb pop push adc aaa xor les (bad) lret adc in mov adc enter outsb inc ljmp (bad) adc xlat fwait test mov xchg sbb sub stos dec pop and xchg push sub addb outsl sbb push cmpsl xor jmp insb int mov add (bad) repnz in or gs mov je les cmp inc adc rcrb sbb insl add or xchg jb stos test mov (bad) pop push bound cmpsb hlt xchg stos mov sub shl pop mov xchg ficompl push add cmp or jno mov ljmp popf cmpl int jns pop fldenv rorl dec adc clc (bad) and aaa add in lret inc push xchg add sbb jle sub iret fwait adc sbb es adc js pop cmp jno and leave pop jl pop outsb adc aas repnz das add pop or adc lret mulb sbb insb outsb and out ljmp aas mov dec jle rclb jmp sarl or dec cmp jo dec mov pushf jnp jmp cmc jmp je loope add or (bad) cmc xchg lods out or cwtl pop push mov cmc int pop test sub loopne (bad) out or jnp out adc jbe mov rcrb daa sbb push pop orb jae dec cmc pusha push je (bad) and lods xor mov pop xchg inc inc and push xchg lret and das mov push insb dec inc shl cmp aad (bad) adc fcompl (bad) cmp in imul subb dec imul xchg pop and test xchg mov movsl out aaa (bad) nopl lds clc mov jne mov sti or lret das mov or mov subb (bad) sub jne dec ret fcoms test cltd rcl dec push xor dec add mov xchg call (bad) mov mov mov xchg push inc push stos mov rclb loopne fadds popf leave push pop xor out aas mov and inc pop shl mov fs loopne mov or repz lret and jmp mov push xor add enter testb inc jp sbb ljmp outsl and xchg dec ret pop and pop sub fmuls movsl je lahf sahf mov xchg push mov repnz jle and pusha dec scas and pop ret mov mov sub loop jae xor xchg lods or jp lret ss pop pop cltd mov xchg inc lds xor pop loopne fsubrp xchg xlat pop int imul inc sub cltd sub (bad) cmp push pop test cmpsl insb cmp es push mov push mov sub scas mov in out xchg in lahf movl pop xchg jg in add inc inc fidivrl inc arpl pop je (bad) testl xor inc mov mov cld fwait leave and fwait add mov push or dec inc std dec jp scas add cmp dec pop repnz jge inc jmp mov nop xchg nop jne lcall inc xchg test push scas out xchg stos repnz and push mov rolb outsl dec imul add and lcall pushf test add loope roll dec push mov xor call scas or dec fldl cmp lods data16 adc sub add push nop xchg dec testb les les push out mov inc dec push and or push xchg sbb xor sub loop inc or xor add dec push movsb in xchg adcl xchg xor pushf test pop cmc push pop cmpsb sbb sbb dec pop dec ds push pop sbb and (bad) jl sbb outsb addr16 adc sub or fdiv loopne jo mov adc push mov add fsubr sub das ret (bad) mov das pop pop mov ja call push push lds add mov mov cs mov add sub pop pop mov cli xor lds pop and out inc lods or mov sub clc xor dec jmp shll sahf mov xchg inc clc pop pop push push stos test iret pushf mov inc pop inc add daa and cmp pop (bad) clc dec and fwait sahf push into inc add jo mov cs jbe lds cmp scas sub out (bad) enter decb xor pop cld mov jmp mov xor mov pop pop pop aad pop movsb popf mov sub xor pop add mov std push add or jp or bt pop sub push add add clc sub pop inc popa sub sub cltd ja mov (bad) repnz stos and and cmpsb xor sub rcrb aas sub or pusha mov sub shrb pop or cli enter pop and out call shr mov insl lret add leave adc outsl add jno sbb imul pop addr16 iret pop jb sbb xchg adc enter aad xor add push cmpsl aas hlt xchg (bad) cmp jge add mov (bad) icebp mov test insl ret xor jg xchg into xor cli lods pop dec mov ds mov mov fist inc mov out test push mov mov int3 mov repnz cmpsb jbe adc gs sub clc les in scas push insl sbb mov mov stos loope and jmp add cmp inc sub sub fs or ljmp pop dec cwtl push mov xor pop push iret dec test xchg pushf fs adc and out cli jmp dec mov sub loope add push loop jne lahf mov sub mov rcr push xlat push mov push xchg xor movsl xchg std sub fs mov popa pusha pop iret imul jne std xor sub pop std mov outsl fld in popf add mov xor roll jecxz jns sub sti jg sbb pop loopne dec out fadds int3 pop and scas pop icebp xchg enter add cmpsb xor daa call stos (bad) mov mov out lock sub inc or xchg xor push jae adc or xchg jle aad imul hlt sub mov and push adc mov out (bad) mov test cs mov loopne pop and pushf loop xchg inc mov sub add fdivl (bad) fildll mov fs test stc into ljmp test dec dec test stos mov rorl in dec pop sbb push mov or movsl and out out push mov orl loope pusha inc movlps test inc mov xchg dec in and rolb pop pop aad imul and push repz or sbb pop ja pop push mov je rorl push mov pop jae aad mov aad pop and mov dec cmp inc mov add sub aas call adc inc push pop into jnp xor adc jmp pop or imul dec mov adc mov js mov push aas xor inc mov ja dec mov or cmpsl jb dec xor xor push iret push push sbb xchg pop inc or cmp dec xchg push push dec jmp clc gs rcrb add dec mov cmp jmp rorl mov int3 mov lret push data16 push cmpsb jae mov xchg dec test int das add inc js xor jno stos mov cmpsb pop adc xchg inc fwait mov mov push and movsb jmp push sub add add xchg cmc fs jg inc int push in xchg jge in lcall xor ret test jbe pushf mov ret xchg xchg lret aad or mov mov iret fldt clc in jg imul not jb adc rolb sub inc sub mov mov xor fcmovu pop pop mov shl push ds es jae mov and fcoms pop dec out push out add xorb popf scas popf shll cld ret push icebp cmp cwtl data16 mov fs and push push push adc and cmp xor sbb dec das xchg pop push push int test or sub lcall mov insl jne cmc lock mov cwtl add idivl stos aas or jle mov xchg sub aas jns pop or mov pop add push push mov or push setae popf jg hlt push push cmp sbb pop repz loope sahf decl cld cmp jmp fimul mov jne (bad) mull or sub ss add and scas sub dec dec daa push dec daa sbb imul sub or fistpll or mov lds test repz sub cs xor mov lret jl adc and mov mov loop imul push push pop imul fstpl and pop pop or mov adc fs adc cmp mov jp mov push test rclb in and mov andl add call push jmp pop shrl push xor arpl pop dec jbe pop cmp jbe xchg lret das loopne pop leave leave xorb xchg jo xchg push out or push mov xchg add xchg adc pop lods pop test push in push enter pop lods stos test icebp jmp push adc push insb mov pop scas or jmp insl dec jnp icebp je fs jge vmulpd adc ss lcall outsb push inc scas sub jmp dec or fsubl pop mov jne,pn gs fildll push sbb aaa push sub jmp loopne subl add xor pop sub sub dec hlt aas lds and call cmpl mov lret loop jbe adc fucomi pop inc dec (bad) lahf inc (bad) fmuls ja imul or push mov mov pop push (bad) (bad) jmp sbb nop xor repz jae js mov loope mov jmp pop (bad) idivb inc inc mov sub jns or cli mov les dec jb fdivl jmp mov sbb ss hlt aas inc mov mov and push sub and mov fs mov fldl2t push in mov fs (bad) pop mov xchg clc sub mov mov mov jmp iret repnz (bad) repnz popf adc or in fsts pusha fsubr mov aad push aaa aam enter add sub add push add idivl call xchg cwtl push out jmp stc test nop mov sub out ja or mov aam xchg (bad) int3 xor or cwtl xlat add xchg xor dec das adc sti or cmp add flds xchg jo enter in leave or xor fmuls mov pop push and (bad) sub push pop ja fcomps mov and mov add pop adc mov mov cmp pop dec les push mov mov and je mov jmp xor or mov rcrb sbb mov ja push pop sub xchg ficoml bound and pop pop pop out jl jmp iret enter pop jmp mov imul pop or mov mov (bad) (bad) sbb mov outsl shlb arpl lcall cltd in add sub inc push xchg std or das pop add push push cli inc mov fistp inc bound (bad) mov add add mov insb inc lret cmpsb jl sbb push rclb lods es lods idivb movsb aas mov cmp clc cli daa mov jno icebp mov sub lods ret push add repz or or out sbb jne test mov or inc icebp and out inc js inc cmp dec insb sbb mov cmpb inc cmpb push les or bound and outsl mov in into or and inc xor push or sbb and add add add add cmp dec pop add add mov or sbb xor add popa add sbb or or sub or sub mov xchg mov mov or hlt xor xrelease jne test add movsb loopne add cwtl add or cmp lret loopne rcll mov adc push pop shlb mov sbbl psubsb or sahf adc xor fmull xor or inc or stc mov cmc sbb aad sbb movsb mov loopne subl sbb subb add push lock adc or adc aas mov ret inc adc (bad) sti mov add sbb add outsb pop ror sbb inc (bad) (bad) pusha stc sbb jno pop or sub jno xchg cwtl push or lret inc incw pop push add mov test or notl sbb push jmp push lock inc adc in call aaa push sbb mov xor cmp push stc and mov add and pop es and je lcall ss jnp add push mov int3 fcmovb test out rorb pushf push push out cld outsb sarb popa mov mov gs sub mov sub jae pop push pop aam repz fstpt pop xor xor and cli aad test ss outsl and inc (bad) jns adcb xor pop stos or repnz es (bad) or or das cld mov fs scas lret and mov repnz (bad) jo xchg adc add loopne add sub sbb outsl (bad) or cld imul cld or inc add push pusha imul or stos dec push outsb mov cmpsb dec inc dec les cmp pusha xchg push push push add pop js pop shr add mov sub (bad) hlt sub add lret neg push or js mov mov xor dec sub jg adc test pop repnz xlat and leave xlat (bad) sub repz ljmp repz push push mov neg cmc fadd add in push push and lods push fbstp (bad) out inc test xchg xchg add sbb pop pop arpl int jns jle (bad) jb mov ljmp iret addr16 inc lock inc mov or xor sub pop mov mov movsl je icebp push cmp pop xchg or push jno subl adc jb push movsl cmp (bad) inc or or imul or out cwtl add outsb pop loope sub adc add and out or xor test lods and xlat mov and ss adc stos mov xchg (bad) inc jmp loop pop mov add xchg or out fadds adc dec push xor out fdivrp xchg xor popa or aas add cmp outsl shr cmp enter sbb mov push imul mov sub (bad) (bad) sub jp dec push orb jp xor gs add and dec push inc dec add hlt mov dec sub pop and push lds test bound repz push and call (bad) addr16 sbb es int add aad fs ja call pop movsb les lahf and and std enter push adc add icebp ljmp dec mov xchg jnp nop add outsb ds dec xor push sbb leave sbb jno sarb or dec or sub cmp out or and cmp sbbb lret and sub testb pop pop roll adc pusha or sbb adc pop sub adc inc push inc mov jo push outsl movsl pop icebp loopne stos sub in nop inc test (bad) gs mov pop jp pop das call sub pop out cmpsb cmpsb lahf rorb push std data16 adcl jmp aaa inc inc popa cmp or add adc push sub add mov push add sti es or jo flds popa xchg into or movsb add dec stos xlat xchg pusha fsubs lahf xor pop mov mov push inc fcompl popa push (bad) or sub push ret or pop or pop inc popf hlt cwtl mov dec mov add loop ds cmp pop repnz ret dec fcmovb out xchg inc (bad) push add clc push int3 xor xor xchg fs and test inc lahf adc pop (bad) dec push ret je dec pop dec test mov mov pop sub shlb sahf cmp jns adc mov cs inc push add or dec imul sub mov fsubrs or arpl fcompl dec insl pop inc out dec and push add mov pop or jg int add or pop add mov inc xor lock (bad) push std mov lock sbb mov rcll mov pop lret or lcall xchg add dec cli sub pop ret sub (bad) mov mov xchg stc test push or add push data16 xlat inc scas shl jbe sub xor push xchg int and pop insl dec ret movsl dec push xchg mov mov adcb rcrb rclb and push or push lock pop pop imul add lea int and or push dec lock popf fnstcw pop (bad) dec dec add lds in fcoms pop mov mov pop push iret push das mov orb xor adc pop gs cld lret jp jg insb daa bound dec cmp pop push mov adc push or movl pop stc dec pop (bad) icebp leave fs inc mov pushf or dec wbinvd (bad) jge dec in scas fstl push adc pusha ljmp dec inc inc mov xchg mov dec pop adc idivl push in jg mov sbb aad dec test cli mov lret and add cmp (bad) (bad) dec fcomi adc xchg cmp push xor incb out add dec stc clc outsl push mov stos push or mov push jbe rcrb daa dec mov mov or roll pop and xchg add fs bound (bad) mov or sub mull lret pop ljmp (bad) jbe repnz lock ret jnp,pt push or jne or fdivs jo jnp fstpt xchg xchg pusha or int fldcw dec add stos dec push sub push cmp push pop mov add dec sbb cmpsl push js jo nop mov repz or mov or cwtl mov lahf daa into sbb out insb cs movsl pop xchg jnp iret push pop js rcll lods and pop mov jp push push (bad) or shrb inc jb lock jns cmovle test lret pop sub add mov repnz mov rol jmp jg (bad) shll or add xchg scas mov push push pop push pop xchg add roll jo (bad) push fwait or sub add mov or add xchg sub js iret or pop sbbb js out sarb cmpsl inc pop rclb sti add or jns or push cmpsl add xor mov js jp out add cmp jge cmp lret out push xchg mov mov js adc fucomip fiaddl mov inc dec push or dec add enter add scas jno push cld js xchg pop inc push ret add push or sbb pusha iret jns dec dec adc add ja pop and jno inc cmpsl cmp je or sbb cmp jno mov or cld roll pop orb push mov adc sub int cmp or shr rclb shr and int3 ret inc mov lret nop mov jg add mov cmp mov mov mov into or jne add and adc sub jb loopne sub lret sbb xor fbld pop imul outsb pop mov jmp push dec mov imul int3 test out mov jns and fsub pop das mov js push mov jmp sbb std into out push push add sbb pop loopne add cltd pop dec mov rorb leave add mov sahf adc push jmp adc inc mov mov inc je adc popf in inc cmp inc push cltd or xchg es jb out lcall (bad) shrl adc dec cmpsl mov jge pop addr16 xor lds sub dec fiadd cmpsl pop mov cwtl jbe xchg hlt int popl in roll or pop rol add je mov jnp lahf sbb mov mov pop addb mov loop fidivrl mov adc jne mov lret sub test and popf (bad) lock adc sub jmp xchg or mov movsl push push loopne in dec out mov sub fild pop shll fistpl or mov mov add inc mov into push xchg rolb mov pop test or shr ds pushf dec and cmp push add xchg adc pop adc nop sub sub mov dec imul xor push add xor or push out adcl add xchg inc scas pushf or push mov push int out std push lahf pusha adc mov movl iret sbb dec (bad) xor sub test bound add adcb cmp dec and lock movsl pop pop mov pushf inc cmpsl push (bad) jbe push jnp das icebp xchg push js jmp into xchg cmc xchg xor jns ljmp movsb ds int3 addl and inc push or jmp xor mov aaa ljmp inc jge in push sub ret stos push sbb cmpb adc jge push push (bad) fisub add daa sub add or (bad) or and xchg lods xchg (bad) frstor les xchg rclb add popf jo add add mov add jmp xchg mov cwtl add outsb loopne les mov rcl mov insl xchg xor rcl mov jmp inc mov xchg xor inc ret xchg add lods dec lret or sti push cmp xor push dec pop push in mov or add int pop xchg pop shrb cs cltd push and nop sbb or iret dec aam insb push popf ja jnp and int3 cld push add fsubrs pusha push gs xlat adc mov push jno dec cli cmp pop sbb aaa outsb jl push popa sbb loope jmp ljmp and stos mov jmp cmc loop int3 inc rcrl cmp or pop mov scas insb sub pop inc mov push or (bad) jns out and inc push and nop and push cmp test pop stc xor sub pop in add push pop test inc push sub xor in pop test incl and ljmp ficomp push in sar iret iret clc jmp sarl subl mov jmp pop or mov sbb and lods mov sbb mov lods xchg orb inc stc sbb sub cwtl pop add or adc dec mov test xor xchg cmp mov or sbb push sbb xlat dec xchg test ret mov sarb pop push popa dec stos sbb push jne mov jmp lods pop or call pop jmp jmp in jno dec jl cwtl jb mov repz sbb out jmp sub test and sbb insb or or push les lds xor imul idivl out push cmc dec or push js dec (bad) ds add int lds add inc ja or pop xchg je pop and or or cmp add ret (bad) sti in pop hlt scas jmp loop push fcmovnu inc jmp and xor or rep cmpsb fimul scas sar sub xchg inc aad jne and mov pop cld fisttp sub push push add or sbb cmp mov mov jnp and int3 loopne add repz push ret add inc popw das and xor jmp iret addl mov or jnp sbb lahf (bad) xor adcb ret adc int3 mov iret fisttpll jne cmp out in mov push and xchg popa idivb xor xor push pop pop daa bound jns or sub fs xor (bad) gs dec cmpsb out adcb sbb sqrtps adc (bad) jb fs shr and or push push (bad) call ror inc jmp cmp adc inc xor xchg sbb enter aaa loop pushf jb sub sub add faddp or pop pushf dec pop push sub and xor (bad) or and shr xor push add fcmove push sti loop push imul jmp std in sarl cmc push mov pop jp fwait push jno sbb mov incb mov movsb adc fadd and mov push add loope mov mov test add sbb mov mov bound and es mov jne andb repz or cld add sbb clc (bad) jmp push adc push mov cs ret pop push mov and push mov jo (bad) loop imul dec xchg out push fsubl sub xchg rorb xor mov je add mov in mov es jl xor clc (bad) jo loope in stos in mov jge faddl ss adc sbb dec mov or adc xor or sbb (bad) cmp jg sub out (bad) lods (bad) jb xor sub sub fwait pop add (bad) (bad) outsl fstpl jecxz (bad) push outsb jmp sbb fdivs jne or push xlat push aad mov mov lods frstor mov aam or mov xchg push std (bad) mov imul dec inc rcll rolb fs lods push push icebp stos adc xor sub std pusha mov jae daa rcl push jmp nop lret push or insl rorb test jmp sub daa pop lock es lods rol cmp push dec xchg or pop cld (bad) adc xchg mov (bad) out inc pop pop jmp push rcrl mov dec aas inc lret pusha and and adc sub sbb dec sub popa iret inc jmp in in or or pop mov push shrb std bnd push imul pop fcoms mov pop daa lds jecxz clc movsb lds xor jecxz mov aam mov bound ret push jmp sub adc xor sub pop insl sti cmc addb cmp mov inc cmc sub lock out adc xor movsb inc mov ja or shlb inc lahf rcrl mov push lahf aam test cmp xchg mov cmp jmp cmp mulps int xchg daa push mov push cltd mov cmp ljmp cmpsb lret stc stos negl hlt or (bad) mov leave sub loopne sahf rcrl jns pusha icebp pop sub add or pushf jmp icebp cmp xor movb inc push xchg push push dec and sbb xchg pop mov aas add and cs mulb das into movl popa mov mov ret aam fiaddl or (bad) fisubl test pusha mov insb pop mov sub orb mov mov outsl std sub xor and cwtl pop jmp pop add adc or jb (bad) lock cmp imul push pop pop dec mov cmp xor sti aaa mov adc int pop bswap jmp lret insl dec xchg add dec lods cmc inc int mov add adc outsb pop rorb mov push pop and imul notl fcom jnp dec test testb mov push loop lea scas repz push inc daa add inc xchg add push xor adcl cs push pop sbb mov sbbl lret and loope adcl dec dec mov cmp cmp les out pop and adc cli sub mov pop inc xchg mov mov sub into sahf push in sbb sarb adc xor jo rcrb jne adc sub adc rcll push sub sbb outsl jae (bad) or dec int3 add pop mov fdivs es or add cld nop add cmp test lcall cmp pop (bad) call push mov mov or inc or (bad) (bad) (bad) jae push xlat in lds enter sbb jmp rcl dec (bad) divb loopne lods imul sbb pop mov (bad) push mov push mov dec xor jge cwtl pop xor mov pop into loopne jo popf aad aaa jecxz xchg cli or inc mov adc cs and push loopne fdivr (bad) cwtl jbe jg push cld xchg push mov and ret cmp cmc jno scas loop dec mov dec xor pusha push cmc icebp movsl jb add js jns sbb sbbl xchg push inc push lret jl mov call mov xor popf fldl mov xchg leave push ficomp mov cmp in in sub pop retw repnz xorl mov lcall pop push mov aas in sahf or outsl pop mov jl xor pop mov iret adc push les cmp push cmpsl rorl or mov add xchg adc adc addr16 sbb sbb insb dec rolb div das inc adc inc test mov icebp inc clc xlat cmp or test scas shll mov outsl int xchg movsb fsubr adc test dec xor pop pop movsl scas in jbe call adc cmp mov pop movsb jmp xor std and jp lds and (bad) pop mov add jl and pop jg sbb in xchg out cld push in cmp mov addl pop mov push mov in popa and ret lret xor mov adc inc imul cli mov rorl jns test sub push std mov adc push pushf xor (bad) dec sbb adc inc sahf add jmp bound out push mov fstpt mov pop pop fucomip jge (bad) scas push mov and fdivrs xchg pop lahf fsubrl push mov jmp ljmp pusha test insb repnz (bad) or lcall loope sub clc mov daa adc xchg ret cwtl add pop dec jmp push mov xor fidiv sahf and in push xor ret inc adc ret test pop in jl cmp mov inc cs pop pop dec mov cmc and ds les stc gs add inc add mov fildl mov clc mov jne adc push mov mov popf ret stos subb pop ds mov adc cmp test push pusha inc push shl cmpsl sarb sbb push jmp jne arpl test je,pn cli in mov pop push xchg jae inc pop stos fs mov jle sub push jmp pusha call inc push mulb jb in daa jg stos mov push jmp add push add fnstsw leave add pop mov inc or xor sub stc cmp sarb pop out nopl add xor aam add xchg cmp pop xchg jmp push pop or adc xchg aam lahf ret cmp sbb das loope cmp ret cmpsl or sbb aam test push or pop sbb not shrb or mov repnz pop out cli sub dec pop xor lods frstor (bad) je sub dec jb mov aaa pop jp mov cmp aam xor arpl popl (bad) and xor adc mov add cmp out (bad) in dec (bad) out dec cmp adc jmp mov add ss jmp repz xchg pop fsubl mov fistl adc jmp push sub sbb scas xor pop cmc movsl iret xor sbb mov or inc hlt and sub cltd cmp mov dec enter (bad) jns xor push and hlt mov xchg cmp or pop imull pop cld shlb inc and adc mov repz adc rolb loopne popa xchg dec push mov (bad) pop icebp or daa lahf push mov insb std mov mov imul fcomps jb add js jmp sahf cmp sub call (bad) jmp xor and dec mov jl movsb pop add jnp js and mov (bad) pop ljmp pop in setg and cmp push popa and sub imul inc pop dec (bad) in dec out cs and sti jl jmp add mov pusha and jl daa jge (bad) jnp jo nop mov shll add fmuls inc adc dec inc (bad) mov in ret hlt rclb and pop je xorb push mov add orl mov or cli jecxz add push jle or xchg add scas push rclb mov mov push jp lock movsb sti adc cmp mov addl sar mov mov mov sub and cmp pop pop shl mov mov adc or add ret ss sub mov push aaa sub pop add stc mov pop push ljmp sub mov pop inc lods add dec incl aaa pop sti je (bad) xor ret ffreep xor xor icebp xor cs xor lock (bad) xor add repnz jl add iret jp decl inc dec test data16 fidiv ljmp push xchg popa scas push cmp xchg clc adc mov mov shl mov loopne cs out (bad) jae dec movsb iret xchg adc mov mov pusha lahf aaa lahf pop adc movsl xor jle push mov jnp mov pop push fidivr mov jge add aad sub push push jo lret outsb fs dec xchg movsl xchg or or add arpl push pop add push push jg mov sub sbb (bad) nop mov mov jp push or sbb pushl mov push push mov lret int ret test inc mov hlt idivl imul es jns mov mov insl or or inc addl inc pop adc cli dec dec dec adc (bad) cmpsl into adc inc or push pop scas add add jmp add pusha fstpt movsb pusha stos add xor mov push mov sbb sbb (bad) mov pop adc dec cmpsb cld mov dec stos and xchg in jecxz xchg shrl (bad) out jg and push push mov or jmp dec jge vpcmpgtd mov or loop ja inc ficoml pop mov cli xlat or pusha push jns mov adc adc fisttpll push cmpsb loope dec add test sarl push lcall pop das lock jnp jo inc dec jle add inc subl pop pop add xchg jo je mov mov push incl sub push xchg sbb sbb lock jnp ss dec in mov fadds (bad) into and rcrb jnp jmp jae sub icebp xchg gs xchg popa jmp dec mov std sbb push testb in nop mov xor or rcrb or test nop es jmp sahf pop int3 lods cmp shlb out cs std cmp cwtl stos inc adc mov jbe adc sub scas mov cmp (bad) sti sub or int sub cli and sub gs push fisubrl dec decb ds sbb adc sbb mov test adc hlt xchg mov add push jmp mov jb aad add shll push flds sarb sbb pusha cmc addl cmp add cmp mov or in dec leave mov inc mov cli icebp cmc jg mov loope add cmpsb adc (bad) mov cmpsl push jl xchg sar push ret mov ja popf pop pushf mov nop push repz lds jle ljmp push hlt (bad) scas inc test rorb pop sbb dec dec inc insb pop mov in sub ds fcompl pop sub call fdivl jmp pop and scas jbe dec and ret les in sbb adc xor repnz popl pushf sub outsl (bad) addr16 (bad) push xchg (bad) test sysexit push xorb fcmovnu ret popf (bad) popa inc push mov adc sti movsb lcall push jl jo mov out add int leave and ljmp inc push inc hlt sbb mov sub nop lods push ret mov rclb mov pop jle add cmpsl bound outsl add rcl or ss lahf decb imul xor xchg sub xchg mov add inc aaa leave xor push jl pop enter imul lods sub jge dec inc lods and rorb das push pop repz mov fmull daa loopne xor pusha push sub xor mov cmp xchg xchg mov clc stc mov jp neg mov xchg dec sub push ret and mov mov pop mov push xchg and and testb jmp pop mov fcomip ds jae or sbb or pop pop pop push hlt mov push add bound jmp adc cmp scas mov mov pop pop out mov mov std push sbb arpl mov inc add test addb dec loope or clc repnz loope xor push push pop popf add cwtl orl xchg cmp or loopne js push test mov and dec (bad) jmp dec xor fcoml mov std cmp out push add out sbb daa xor mov adc push pop inc mov push sub pop clc dec push jp int outsb stc fist sti jne pop mov cld mov inc pop or mov push pop mov sub addr16 push push incb (bad) dec and dec cmpsb sbb mov out sub inc push pop dec adc add icebp cmp mov jl out repz xor es iret data16 jmp loope js pop inc jns jb jmp fimul inc add stos adc mov pop jle jg pusha xor xchg add mov movsl add jmp notl arpl add sub adc pushf mov or add xchg push inc xor or mov (bad) hlt mov inc aam sub mov xchg (bad) xor stos cltd ds xor jns hlt ja rcrb lods inc push shll jo pusha pushf jb add pop push aad mov int popf subb dec ds and fnstenv cmp insl je push dec dec push add mov push test mov mov cmp sub subl scas in push xlat dec inc cmp pop inc mov push in in ljmp jl push sub push jmp pop cmp movsb nop lret xchg gs fs mov or adc push mov (bad) push (bad) mov adc scas sub rcrl inc popa pusha incb pop mov add lock shlb push mov ds outsb mov js push dec jle scas adc shrb movsl aas fsubs dec xor xor dec and mov jmp pop ljmp push rorb mov and in ror imul pop push fadds mov (bad) mov jp fadd sbb jno adc mov (bad) and pop xchg dec inc xor dec fadds sbb js xchg mov jae jmp mov adc adc lahf inc and lahf adc ret push pop mov sub repz mov in scas je pop jmp fwait jl mov pusha test (bad) xchg sub xlat sub stos in xor dec cmp in outsb or orb mov jle test mov in das fsubs or int3 cmp mov je test jno mov jmp repnz add pop and ret imul cli fistpl mov rcrl and scas pop enter push add and mov mov scas mov sti and mov mov and fistpl adc add fcomps xor sbb call mov mov pop in push sub inc mov ret gs ja mov push xor sbb mov and mov cmp lock (bad) aad wbinvd cltd sbb loope jns push (bad) stc stc fmull lods dec call lods loop movsb cmp mov dec sub push jmp pop inc repz daa not adc add notl push or pop xlat mov sub dec insl or fdivrl inc jmp mov push or (bad) jb inc adc mov lds adc push pop xchg dec sbb aam inc inc adc adc mov push mov xor add out (bad) jmp lds lods xor push test or fucomi cwtl and sub inc lahf faddl and cwtl repz cld xchg adc sub inc (bad) incb call sarb sub sbb pop push repz cmp loopne mov mov mov aaa fs scas mov aaa xchg mov addb nop or pop clc in sbb jbe sub pop xor push add jg push push arpl (bad) pop mov rolb clc mov cs push xchg adc cmp fld in add jo push lods push xorl mov mov clc cmp shlb cwtl or movsl push pushl mov jl fs xchg hlt stos in jmp push jns inc shr xor sub clc and popa mov test shrb cmp sub add and or imul bound std outsb xor push xchg xor mov push push dec loope das cwtl insb mov sub ds push jo or popa mov addb cmp push dec push repnz fcoms out iret jge jp int jae pusha sbb (bad) test push (bad) lods and mov push pop (bad) inc shl jg and sbb pop xor inc push movsb add inc cvtps2pi stos or inc push add cmpsl adc add sarb out inc xor push cmpsl (bad) outsl inc les mov sbb or mov jnp xor push stos jg dec lock lods push dec scas cmp stos xlat mov shr add mov insl inc daa dec xor fstpt nop rorb ret sub loopne or xor sbb sbbw lahf push inc dec enter mov cwtl fcoms shlb test add mov lcall (bad) sub jp jb syscall sub mov add fs pushf add aad push push push xor cwtl les dec jp js fstps or xor sti je add mov (bad) mov jmp bound pushf (bad) into mov mov xchg out add mov test hlt push shlb jmp pop cmpsb inc movl pop jbe mov push mov fldl or imul push stc cmpsl pop fdivs adc add ret push or mov sub add jg adc out jge push scas stos mov mov and imulb push or cltd clc sub push xchg xchg and loop jnp or std sub pop repnz lock and mov sub inc movsb ret xor adc cs loop cwtl mov lds pop mov lret in add inc add adc adc lret out xlat mov xchg call mov int3 mov xor cmpsl mov sub xor lea pop add popf loopne rcll and cmp adc dec stc divl lock jns rclb mov jmp mov push test cmpsl dec rolb mov jecxz sarl not out ja cmp int3 push lahf push and popf (bad) cwtl lcall sub pusha idivb dec or cmp dec out adc testl es hlt inc out hlt fidivl adc mov out leave xor xchg neg jbe xchg aam loop pop jl cmpsl sub add pop cmp xchg lock icebp popa imul movsb pop jo inc dec xor xchg out inc sbb sar cli pop rclb das and mov adc push adc xor and add xchg gs cmp (bad) pop or jl adc or pop rorl out jne mov hlt adc push sbb movsb jmp int3 and inc pop imul push mov rcll xor mov sub cli cmp inc dec mov dec fsub add inc adc mov hlt lods stos sub mov inc js les ret cmp xor and int3 cmp fs push push mov stos cli inc lock xchg mov inc dec pop cli cmp push fstl add ficomp shrb mov ja jl out ret cmp stos (bad) hlt push push push adc fimull cwtl lds mov push xor data16 insb jmp inc or out (bad) cmp pop or add mov adc inc lahf push jmp movsb pop insb inc idivb mov sbb add push mov int dec or jge pop sbbb pop xchg jle (bad) shr sbb sbb and add inc sub imul adc sbb jno mov add push lret out xchg in and or mov mov jmp inc cmp adc add sti xchg popa xor jne (bad) mov jns rorb notb dec pop xchg addb jg push mov cmp addr16 fldl fs and xor pop and jg clc stos mov cmp dec lds loop insb add sbb mov hlt adc test push push pop lds jmp popl and adc dec pop and lock mov pop nop insl add xchg adc or pop mov push push pop mov mov and hlt shrb push mov lret or fst test aam mov stc dec sub xlat push push clc jns add pop jnp (bad) aas xchg and and xchg pop adc shll (bad) jecxz adc outsl stos sub pop xchg push mov pushf lahf loope lret or sbb aad dec sub jb (bad) fstl hlt (bad) icebp sbb fsubrl cmp mov or push dec and jnp pop pop pop cmpsl out fs xchg mov mov adc lds sbb mov ds or ffreep in scas dec bound push jae pop dec push pop not dec dec loopne rol mov fnstsw or push movsb jns pop inc pushf sbb mov and sub mov cmc lds js sbb push repnz cmp or pop ret cmc or clc inc mov pop sub xchg out pushl and test (bad) or inc (bad) mov sub jns outsl cwtl cltd rcrl ret movsl cmpsl out frstor fldpi jns or mov ds add mov frstor mov rorl cli or aam test sub scas mov out nop es push push push inc mov and into call je repz clc or push cmc test mov add pop cmovs dec ja jp push inc repnz mov cmp and out jo mov or js addl and add (bad) std rcll mov popf loope ss outsl mov jb sbb xchg mov les je scas gs push push mov test int3 lods mov int3 add add mov add (bad) xlat jae jbe add add mov mov push pop xor js ret (bad) jo xor pop imulb xchg and sbb notb ret lahf int3 jmp mov imul je jnp cltd push aas test frstor mov xchg mov push test jmp fmuls in push mov pop cmp ja jbe sub xor adc test adc xchg xlat xchg in push xchg add popf fs enter cmc xchg push mov rclb clc jae cltd cli push (bad) cmc (bad) rorl xchg lret pop ljmp iret in pop and jle mov mov sub pop jle pop lock jmp dec xchg pop cmpsb sti xchg scas fwait lret (bad) mov ds inc inc mov sbb xor jmp mov rcll push stc jle (bad) push imul add mov les cmp inc in bnd and dec dec mov jl mov repnz adc adc cmp outsl fnsave pusha repnz mov pop xchg leave daa and push out ret lods call add push mov adc das and mov ret out fs pop pop test dec mov pop xor pop push jge pop test inc xchg adc int3 aaa add repnz push les and inc push pop pop mov fstpl ljmp push cmp mov pop in incb out mov decl out outsb pop mov outsl add cld not add jle adc pop mov jmp mov lock mov bound jg in shr xor mov or jge adc sub fcompl mov mov mov (bad) sub push jecxz inc fstp test pop test into mov sub cmp lock push lahf testb loop rolb daa push sub push inc add das int3 cmpsb mov dec fsubl int3 and or push pushf ret pop nop mov pop pop pusha cmp in fildll nop mov bound mov inc mov in ljmp movsb test out push mov push and sub pop lret or pop js gs mov movsb or xor fbld notb stos cmp add test add cmc inc xor jno dec mov cli cmp add nop nop cmpsb (bad) push fxch es loopne ja mov movsb add dec pop es bound popl xor push add lock lahf inc scas jg jb push enter imul dec push pop add popf icebp adc xor lods dec jbe adc lods pop push sub add pusha mov icebp jbe stc ds mov and (bad) jmp push fnstsw and push push push lahf dec cli jno dec testb rcll (bad) fdivrs ja sbb mov clc repz and pushf mov dec in xor and push mov push arpl test add loope popa gs push mov pop testl pop push dec cmp dec es jae lahf sbb push xor mov aaa mov add sub fbld add jge pop pusha push mov mov test pop ljmp or jge add pushf enter push stos cwtl xchg xchg ljmp pushl mov pop mov xor gs or push jmp and xchg pop lock loopne in jecxz scas insb gs loopne cld (bad) dec movlps dec xchg popf js testb mov ss sub jmp push addr16 inc rclb ljmp xchg and movsl out add in das dec or jmp sbb bound adc jmp bound sub scas test dec mov push xor inc jge dec sbb fs adc pop call jle loope pop insl mov into or push inc repz mov pop or add add xor repz sbb rorb fnstcw ret jbe lea les adc inc mov sub push sar and or nop cli lret sub adc pop add add and push sti addr16 cld jmp xchg adc xchg clc stos int sar mov xor mov not sarl jne inc orl sub or push fstp push mov les mov or stc insb pop test xchg in adcb add push adc sbbl dec mulb xchg mov and add pop dec cmp add call out add inc dec inc insl adc mov sbb loope scas jle imull inc cs arpl out inc inc scas leave mov int3 fs fmull push icebp pop push sub sbb and push ret in aas dec int3 (bad) repnz mov cld inc inc push jbe lock jb add (bad) or dec out (bad) cmpsb adc cwtl in incb call jo movsb pushf mov fadd cmp push sbb lods sbb xor out jo adc or or and pop inc cmpsl xchg mov (bad) mov test lea inc xor (bad) jmp repnz sbb loop inc test jo ds loopne lock pop stos pusha inc jo pop sbb xor test jmp or fwait and nop inc repz loope mov adc jb jg inc mov xchg and cmp in jns pop pop in cli adc roll add sub and jmp ficompl xor lahf jg sub cli add ja adc rorl mov add inc xor adc popa out push xor addr16 pop imul push push gs pop push ds xor repnz ljmp fildll pop fcomps dec test push mov in (bad) cmp add mov rorl cld fucom in sbb or stos mov out mov push mov push fwait shrb insl mov repnz mov loope ds jns hlt jbe push xchg js push dec cmc lods imul jp jne sahf mov push jmp push fucomi dec sarl push in dec pop or or push call out add cmp add adc int3 pop out insb add push mov xchg adcb sub int3 mov cli jmp jo push inc mov movsb and sahf xor loope mov pop mov push xor das es cmp add test inc jb xchg arpl pushl ljmp push push pop mov push and repnz (bad) mulb add jnp test push popa and cmp and adcb push mov cld push mov (bad) sub dec adc push loope add (bad) test push movsb xchg and cmpsl pop jmp or enter inc out popa xchg inc jg jg jmp leave int and repz mov inc std push ror or or mov xchg push icebp divps push test push movsb lahf push push xchg jbe out sub xchg jns dec xlat push mov cmpsb adc pop lods mov jne int3 sbb dec mov push jle and fwait dec mov xchg das icebp adc jnp or cmpsb dec or sub jmp mov xlat and jne mov pop push popf cmp shll pop movsl mov sbb mov imul addl push jo mov lock fs or faddp mov sub add fdiv mov scas sarl fidivrl rcrl lcall jmp pop movsl outsl sub sti rclb pop add aad out mov sub (bad) popf enter pop push repnz push sub rcrb cmp cwtl flds mov inc push aas cmpsb mov (bad) dec cmpsl mov jmp bound daa clc jg popf jmp jg pop ret and and sub jecxz repz dec pop mov outsb lret inc add pop inc cs xchg mov imull jmp out push adc add mov inc inc dec and addr16 mov adc jecxz lret das or jnp adc mov in mov cwtl std mov je fcmovbe pop out and jg add sbb or or imull int3 cmp pop push pop xor lret fidivrl xchg dec mov add insb push daa ret mov mov popa dec adc cmovl or adc sub dec xor (bad) ljmp sub pop push in movsl add push fs fbstp orl or inc aaa or daa add mov add insb push push and sbbl (bad) mov aas mov rorl sub jmp inc ret push gs add pop sub outsb mov notl (bad) int add ret inc lret stc cld pop aam xchg int3 das leave cmpsb outsl repnz dec push mov fsubrl in inc sub add or cmpsl or addb pop pop mov mov les lahf fsubp (bad) jp fwait push jne pop mov sub and inc jne sahf xchg das pop iret mov adc rolb test pop and arpl loope push enter stc and xrelease jae cs adc or dec mov jmp test push fcompl rolb cmp jp sbb stos lret fnsave jp add mov mov pop aam imul push fmuls pop jl cmpsb mov xor das push mov push rorb or adc xchg xchg repnz les icebp mov mov jae mov xchg xchg aam adc mov shr adc mov push das lods cld adc aad nop push movsb imul call pushl jmp xor movb daa and shl and push mov dec add aam mov loope das fcoms loopne int xchg rorb mov in insb jb push loope ret (bad) pop nop jg jns bound sub fidivr outsl push adc rolb pop addr16 add das in test rclb addr16 push push sbb mov jnp scas mov adc repz cmp (bad) nop icebp jecxz repnz mov mov or call jae add sub imul popf pop lds into cwtl push out mov dec fcoml sahf dec inc pop push push cs or mov data16 rcrl jno cli test lahf add lcall lock sarb clc sahf add (bad) (bad) fmulp or inc lcall mov (bad) int adc daa mov dec imul pop aam je push loop mov pop pushf aam not mov aas movsl ja ds shrl or cmp xchg insl gs add inc and and rcrb mov je mov and (bad) fisttpl mov cld pop dec scas stc xchg rorl (bad) test popf jl add arpl icebp ja sub addr16 stos xchg push insb ss add pop jnp rorl aas adc adc jne imul insb inc sbb xchg hlt sub int3 push xchg stos mov inc enter lock mull mov cli cs jbe leave in adc repz sub shlb ret add cld pop sub pop pop sbb aam jmp pop or pop call xchg cmp push ja lds push pop xor (bad) int3 shl or icebp shrl cs xor add push xchg (bad) mov lock xchg pop bound fist or dec dec mov jg jbe fldenv das iret movsl popa jecxz add inc inc jmp mov out ret pop cwtl enter pop repz loop xchg call dec xor cmp adc or mov adc and mov push ret pop cmp jnp mov mov pop repnz and mov ljmp inc fisttpl inc cmp push lahf fstpl xchg jmp jbe adc pop lods push subb adc int3 push scas add loop stos mov xchg dec xchg clc add fs pop (bad) mov add pop aam dec insb xchg jne xchg push andl movsb xor pop sub ret jle icebp stc add mov lret cli loopne mov adc dec or fstl push pop daa jmp orl mov add inc sub mov (bad) ja aam scas into inc das mov popa cmc das mov stos jnp arpl out push or jmp leave sbb mov inc adc mov and add cmp jno add cli add xchg (bad) jmp daa jg leave ljmp pop add and cmp sub push in jmp sarl and fldcw and jge push or adc les stos or lods adc test adc je,pt stc mov enter push gs mov inc push hlt shr je scas sbb das stc pop iret lret movsl loope mov das mov cmc mov pop clc inc inc push jne arpl or mov ret inc xor sub jae sub test add push mov push (bad) (bad) les scas dec push das cmp xlat movsb fld1 movsl pop stc loop mov mov pop mov out rcrb jmp and inc loop les sub mov loopne sbb adc loopne dec adc and pop sbb mov cmp sub add cmp cmp shlb add push and into cltd (bad) pusha fnstcw inc loope push inc jbe mov jecxz dec orb clc inc sahf mov aad pop xlat lods adc aad test inc inc cmp outsl ja out jb pop add or aam je bnd xor pop out (bad) ret jg dec jmp (bad) push (bad) pop ja mov daa jns xchg and xorl cltd dec clc or push mov mov repnz sub pop (bad) push out (bad) out push sub ret ret loop cs je and jmp (bad) hlt xchg testl xlat inc jle ret repz dec sub jb mov in adc pop mov sub xchg loopne jg sbb pop sub imul jo mov int pop or mov jecxz add mov pop das add jmpw lods push cmp shll or add es add pop push rolb decl addl shr mov dec kmovb fstpl repz (bad) pop outsb sub sbb inc clc in inc mov xchg rcrb pop push mov adc push inc add out fiaddl aad lahf sbb or mov pop movsl aad mov cld sti lods (bad) in push push push pop popa or dec lds pop ficomp jg imull xchg or (bad) icebp mov push jmp mov inc test jno subl insb sub xchg lock xorb icebp ljmp aam jecxz xor push mov xor int3 ret xor jmp pop adc adc inc inc adc sub jle lods out adc dec js mov fmull push mov arpl ret imul pusha sbb add hlt mov mov mov (bad) inc leave cs (bad) mov ljmp call add xchg xchg or push out jmp test shl js (bad) ja sub mov adc push add cltd cmp mov dec mov push sub jmp ficomp sbb jnp sbb add xor popa cld jne mull inc inc inc out test jp inc sbb mov ds mov inc pop push rcrb shl and data16 pop mov scas int3 notl add push cmp jmp neg pop add xor fimul loop in xor stos test pop stc push hlt adc mov sub jo push mov out or push je sub sub mov lock iret add inc ds cld shll ja lods cwtl pop and lea push push imul outsl inc add cwtl pushf xchg pop scas arpl pop mov test sub mov push fcmovb pop rcrb and pop add jmp adc das stc push sbbb fcompl idivb push push daa pop push and inc mov lock sbb lea push nop inc xor mov mov aad int3 (bad) mov sub out inc mov in sti fimull pop push push fwait dec and lahf dec add jmp daa es es or dec in scas lcall (bad) pop push inc mov dec and jmp mov pop xchg push imul push and mov imul imul jle test movsb xor push mov jmp sub into in testb mov mov pop mov adc repz ret or (bad) jno (bad) add push add xchg sub jmp jg mov pop js paddw sbb lret add jo ret push pop adc push mov add sub mov or dec loope jns,pt cmp sub xchg push cmp mov hlt (bad) xor push pusha mov adc cmp popf and in (bad) xor cmp fs jmp fcompl push aad aas insb push aas aas stos pop imul (bad) add pop pop out shlb xchg dec jp push hlt cli mov mov (bad) push into push addb ret inc pop call mov leave jg sub add jns arpl out cli dec mov subb movsl bound loopne js xorl mov mov sbb out ret add and sub mov daa xor sub imul fcomp sbb push das rcrl dec in lret pusha dec jbe js push jmp out lret pop mov test lods repz push push cmp mov int3 aaa js pop push shl adc add std out mov xor and fdivs rcll icebp xor push mov pop mov add dec mov sbb es xchg push mov sbb xchg hlt push jp mov pop pop out add sub mov and mov rorb push mov mov rorl out add add inc adc push hlt xchg idivb adc add lret aad aas ret add pop fcomps dec jo mov jnp cld inc inc dec out push popf push mov dec xchg cmpl push nop jb xor dec and (bad) and iret add push xlat mov inc or jmp movsl push outsb lods pushf sub cmpsl mov or mov lods add pop cmpsl push lret sub sbb inc mov xor cmp sbb mov dec inc xor cmp shrb popf lods int3 ficompl push jmp test dec pushf dec sbb or push xor xor inc cmc test push pop pop ud2 test movsb inc push lock jmp adc push dec ret push mov xor jno push cs pop shlb add and setp inc fwait inc movsl xorb sahf cvtps2pd cs or jno jmp adcb cmpsb fucomip test add push mov rcr dec aas in imul adc out scas sub jl sbbl loope xor and mov sub xchg lahf push popa sub outsl add cmp stos ffree jg aam jg dec push push jmp pop movl push pop lret xor mov dec add fcomps push outsl add dec inc mov addr16 outsl rcrb sbb push hlt and inc ret push add lds fmul mov jmp cmp (bad) aad sub lcall movsl js rclb xchg not or sbb cld stc mov jne xchg add jmp loope xchg inc jno or xor xchg inc add and jb aas jne fnsave mov outsl inc mov add clc inc aaa jne test dec cmpl and (bad) aas or roll pop std pop adcb outsl pop nop leave insb add je js ds xor dec adc xchg mov adc jmp rcll mov shrb std outsl add jmp pop sub (bad) add inc lods orl dec inc push add test adc push or pop cli add mov out mov es (bad) repnz cmpsb mov popf clc pushf or mov scas and xchg sub or cmp inc cwtl or push arpl das (bad) icebp add xchg (bad) sti add mov adc clc mov arpl fsts mov jg mov fs test clc adc add jae and lock fbld popf stos sub clc out imul int3 stos lods push mov xchg adc mov sbb loopne rcr cmp stc icebp cli test pop ret call icebp pop sub or out repnz lea xor mov je cs jne jnp jmp mov xor adc pop mov insb xchg push lods inc notl pop xchg lods jle and jmp xor test sub test bndldx add call mov lds mov mov dec ds jp jl push jl cmp add or jbe sub sbb jmp aaa cmpsb dec jo out push mull mov jp cli inc test in pop add daa sub push sahf push shr jnp incl test sbb ljmp sub push and ljmp (bad) pop imul mov rolb mov mov pop por pop test cld shrb icebp mov adc pusha out mov jne mov adc pop add cmpsb xor cmp add inc jmp mov test mov idiv loopne bound mov push stos xor cld push mov dec hlt call pop jle das aam test aad pop rcl test movsl add sub pushf sub test (bad) jg xchg dec mov icebp mov sub mov sarb xchg aad iret push pop adc std (bad) out mov sub cmp xor lods jl push or or sbb test fldl sub out pop lods xor and push mov insl and gs sub inc and pop mov xor pop jmp bound dec rorl andl rclb or xor xor test add aad mov push mov rorb or add or les add and bound test aam push (bad) pop loop adc stos or imulb xchg mov jno mov adc stos inc pop movsl dec xor inc push ds jp cmp negl xor aas (bad) shll inc pushf and ja push movsl inc fsubrs daa sahf or inc xchg xor push dec mov or ds incb cs add jecxz add (bad) add arpl dec jg or sbbb push dec sbb xlat xchg daa maskmovq idivl clc add inc lds jmp or outsl int3 pop imul xchg and andl xor adc cmpsb fnstsw (bad) loop sub xor int3 jmp test jl add ret mov or xchg pop testb sbb ljmp xchg pop add in cmc cmc push sub dec sbb mov std mov pusha inc add xor xlat dec inc jp (bad) cmp inc pop push pop pop or inc pop pop jg dec out cs cmpsl ljmp xor popf popa adc lret loop fild jecxz inc movsb jl mov inc in js call int3 pop stc mov or test outsb sub xor sbbl xor ds jg adc add movsl jg imul pop xor add shll inc mov sub jmp dec push and pop cltd inc mov call jmp sub dec push and stos sub repnz int3 push and pop insb or ret shrl out dec or push stos pop push in mov int xor dec in pusha mov pop push mov jmp mov ret fimul das mov mov clc pop stos mov mov jle cs daa frstor xor ret jb or pop test push mov add add mov out jne push jo dec in pop add lret add push cmp pop push not pop lods cpuid add xchg xchg data16 pop xchg and mov xor cmpsl bound xor lahf (bad) sbbb or ret dec enter in es push lcall mov in push push sub mov test dec pop xlat fst dec mov jns cmp pop xor add aaa jne incl push jmp mov add loopne loope into or mov inc js into mov aas loop shll lock aas jl mov inc ret adc jns ds push xchg push add pusha scas les in adcb pop xchg pop or mov shlb push dec (bad) aad adc jg ja in loope in inc inc stos xchg cmpsb test movl bnd mov or fs jns hlt or sub push push mov cmpb dec scas in aas icebp inc (bad) adc push in xlat jno into aas pop shll inc loopne cmp pop out sub jmp cli push xor aad jno push add js mov adc add test imul daa jne cli popf inc in adc roll pop and add ss das jg push or adc sub dec add lods jle mov sub pop push mov mov mov repnz hlt adc mov decl jo and push cld inc dec in jmp jg lahf lcall imul mov jle xor xor add mov cld mov (bad) mov mov push loop pop out pop pop neg (bad) (bad) dec fcompl dec jmp rclb push ljmp mov cmpsl jne sar dec or addr16 lret xchg scas push jmp sub pop lods push sbb mov mov jno and add out movhps sub dec mov pop dec lea add in dec pop or xor jle lds lds xor mov arpl out cmpb dec pop mov lods inc hlt jno int add (bad) push adc jle nop jo leave fdivr sbb lret jle seto xchg cs fwait cmp sub adc (bad) test ffree aas mov xor mov iret cmpsl add push cmp or add clc jns aad dec jecxz imul out sub push xchg xchg pushf mov push add out dec push mov xor mov inc daa sbb mov jp and sub add adc push pusha xchg jne or and mov das jnp in and and test or push subb repnz jmp adc adc aam jl sub add lds cmpsl xor rolb jmp pop scas in and lea outsl push push xor inc insl dec sahf inc (bad) and pop mov (bad) mov hlt out roll add xor jmp loopne addb dec mov mov loopne jbe cld add push out sub sub or mov jae dec ffreep push test and xchg add mov rol and es xlat sub add and dec jmp addr16 lock fsts jne int adc scas out sub dec imul test (bad) push xor push and lock lret mov ds jns inc or popf (bad) xor pop or pop daa arpl push mov inc xor out lcall out fs jae jmp adc and orl pop andb lahf push std cmc inc cwtl xchg jp pop jbe inc pop fs push adc (bad) cmp push pop jp jecxz outsb and mov icebp adc xchg push mov sub aam add push jecxz sbb adc and jmp and adc jb aaa push inc incl pop xchg into add mov je sbb push pop adc ljmp sbb imul movsl push or push cs ret inc loop repz push cs pop lods inc loopne jecxz stos mov lret mull cmp cs ds sub (bad) xchg mov xchg cmp gs adc (bad) jne sub sbb jbe adcl mov jno jge jmp mov repz add loope leave dec push push pop xchg call sbb push je xor add aad insb pop fwait call cmp inc mov or dec out jmp mov pop aas push pop mov fmull pop jecxz add sub arpl notb xor jle js rclb xchg add push rorb pop xor jmp (bad) lds bound cli mov in insb inc mov orb push pop or or push jo sub cwtl and pop aad jge mov mov hlt xor cmp in push or and lds mov sub push inc xchg sbbl loopne les mov sbb pop insb aad shl aad mov outsb add cs in ret repnz stos xchg add jl pop push push (bad) fisttp inc push inc lods imul and aam sbb jg das icebp out push hlt push icebp inc push clc mov dec inc inc push sbb cmpsl in jne lods adc (bad) and rorl shl imul xchg lret jnp fiaddl mov roll imul pop repnz add jb dec push sbb adc fdivrl mov xor aad iret test popa in repnz cs or inc jmp shl movsl or rcrb sahf pusha cmp sbb pop mov call outsl or je (bad) in movlps aas cmp out cmp dec stc sub jne mov inc sub pop shrb inc (bad) enter and movl add push add (bad) neg hlt repnz (bad) popa std jge daa mov in inc or inc sub mov jecxz mov cmp test dec out add sbb js rcll mov rorb and popa jmp adc mov les test or dec xchg mov adc fsubl inc cs jmp xchg hlt adc loope int3 imul mov lods insl ret push mov and pushf xchg xlat mov pop dec ret negl in jnp popf fdivrl mov sbb mov cld xchg (bad) adc add je adc popf int3 fidiv jae or data16 dec int gs jbe adc les test mov jmp pop pop stc sbb and test aas std into (bad) mov cmp mov xor (bad) (bad) sti movsl pop cmp pushf fldenv das mov rorl lret push sbb shll inc out jno and sub push sbb sbb (bad) call add mov pop jo xchg pop cmp xchg cltd push jmp repnz xlat stc daa imul or adc dec inc ret push cmp clc out ljmp push sub daa jmp push push mov aad scas cmpl xor into js cmp or mov out pop neg shl andl or (bad) loope fdivrl adc cmp xchg cmp inc jl ret pop sub xchg stos fisubrl cmc pop lods xchg mov scas inc push push and push xor pop adc nop and inc ja,pn push loopne cwtl adc or stc sub pop mov xor movsl div fstps jmp mov push add sub jecxz pop sti add jnp movhps and lret adc sbb movsb pop cmp icebp add test push lea mov out jp add add jmp adc test sbb pop loopne sub xorl sbb cwtl xchg xchg (bad) add sti ljmp cld loope cmp push and or xchg add cwtl lods es jmp pushf mov push inc aas dec fistpll test loope pop push cmpsl popa aad jp je fs xor iret es dec loope cs inc xor add idivl inc sbb xchg icebp or or push je ja jbe jno jb pop push xchg mov xchg mov mov js lods pop rcl aad and inc stos xchg dec pop out inc das mov aaa daa push (bad) or ficompl xchg cmp sbb das cmpsb movsb adc fisubl sub adc in dec test lret loop inc and jge cmp sub mov sub or xor jnp push movl mov xor iret fildl das push sub addl test das and scas xchg std xor add sbb fildll pop jmp aam or in popa es nop test in subl std sub cmp jp rorl pop dec js xor push mov or mov lahf mov pop in and (bad) sbb jnp mov cli jle gs (bad) cmp ljmp std imul sub jbe rcll and in notb jle jne mov cwtl or xchg pop mov xlat push lods cmp pushf cld cmp inc daa push rol adc loop push cli sbb je in push or adc and jmp lahf int mov imul negb pop stc xchg cmp popa push pop aas mov pop sub dec xor ljmp fidivr pushw call mov xchg jecxz cmp jo cs push outsl and mov add shrl xchg cmpsl pusha inc lahf cmpsb and jae push pop rcr mov stos mov or adc and bound mov inc add or les mov or or push push push or inc dec cli or xor push cmpl out test icebp test int3 add adc dec shr dec add and out mov ja xor lock lock pop pop shl or push adc push mov mov mov push dec cwtl add pop sub mov popa icebp add inc xorb or jmp sbb les (bad) jns pop mov jo pop push sub dec add jmp add int push push jle shlb (bad) imul xchg jp pop adc xor aam inc cmc mov jl test or out shll or movl pop push out fadd addr16 arpl cmp xor rorl in inc pop test dec add cmp fstpl sub fs sarl lahf int push add pusha out xor pusha inc enter pop nop mov test std inc cltd mov jmp neg push jbe inc adcl rolb dec daa add dec scas popf dec aas push xchg mov test jb mov jbe xchg insb ljmp in (bad) cmp shrb mov dec stos rorl mov push fsub mov xor nop sbb int push xchg push jp xchg scas (bad) mov sahf sub sub imul jnp stc inc jnp sbb sti xor or add push (bad) mov inc gs push stos aad sti out add scas and push shr out nop mov mov gs enter loopne adcl add dec and jl xchg add in ss sub pop rorl pop scas add add push dec mov mov pop inc imul and adc pop mov in push sarl xor add mov or gs add pusha dec add aam or addl clc mov inc sub xchg add jmp cmp orb inc push sub adc push pop in fsubl pop mov fstpt xchg push cmc nop or sahf (bad) std xchg in and cwtl addl stos and dec pop mov out loopne (bad) mov ljmp insl adc nopl test add jae jg lds push add icebp movsb sub push je push adc xchg mov or test loop sub (bad) mov leave mov jp gs fisttpll mov pop dec movsl sti dec test sbb enter clc xchg rclb xor (bad) xchg mov and push and in pop jp gs xchg test dec adc fistpll xlat sbb mov test lretw mov adc sbb add popa cmp add popf and lcall jecxz cmp dec pop cld jb andl fbstp fimull fs cwtl and cmp pop push inc cmp sbb mov outsb mov sub cli out add insb es adc ret push jmp cmpsl imul jmp pop mov jle nop add push xlat mov sar pop aam jmp (bad) fwait dec fdivp xchg sub cmp push push adc push pop data16 or mov and jmp ret outsb insb adc ret jmp and mov sbb fild cs mov ljmp pop dec std cmp xor mov aaa stos cmp mov (bad) cmc aam pop lea add inc js jmp mov fidivl daa int xchg or add not leave adc adc sti push jmp lods push xchg mov (bad) dec or icebp int iret jl incb mov cltd push jmp pop xor sub and pop out pop xchg insl xchg mov and or pop lret outsl test leave cmc js dec pop cwtl mov adc sbb lahf mov push (bad) lods cli ret push arpl insl cwtl inc pmulhw or lret push push and loopne orl inc push ljmp js and pop lock or adc add (bad) xor lea scas sub mov add addl mov pushf flds mov xchg icebp outsl daa push or add gs loopne in dec mov push push aad leave or mov inc cld daa push sub clc pop sub jb mov repz (bad) jmp cs xchg shr nop lods pusha loop or sbb jecxz decl xor cmpl and push pop push xor push pop mov ss and movsb xchg lods or mov ret fisttpll arpl sbb mov add push in inc cmpsb cli push fcmove in and lcall sbb decl add mov jmp cmc adc outsl cli call or mov fdivl pop cli repnz mov stos fcoms ljmp xchg adc mov pop and add mov mov sbb cmc pop das fsubrl rol pop inc xchg inc xchg xchg mov mov lods push and inc shll pusha aas mov adc jne pop aam mov ljmp es pop sub sub cltd ja dec rol add pop or mov mov add xchg sbb push dec mov cmp sar pop pop sbb inc xlat out or xchg es je movhps mov loopne,pn cli dec pop adcl push and jae add cmpl scas adc jmp cli mov lret bound aas add fcmovu xchg test mov es loop sbb rolb xlat inc mov outsb roll aas jmp in dec test roll pop mov add insl and xchg mov pop jbe aaa pop cmp jmp xchg add (bad) cli sar push jl cmpsb repnz push loope movsl cmp mov push cltd xor fisubl mov mov sub imul xchg lock or pop aad mov sub test xorb (bad) jle mov dec add inc pop push push fcompl imul jbe sbb pop xchg (bad) jnp (bad) std jbe sub orb xchg add dec xor (bad) add fadds add lahf pop mov xor xor fistpl push jo pop cltd xor ret pop jnp movsb hlt and jae pop mov xchg adc add push mov jmp test push negb ficompl orl das (bad) les (bad) dec cltd and adc testl sub outsl les pop call mov in jae movsl mov xchg mov inc push jbe mov dec jbe popa add push add xchg not jmp mov adc mov jnp repnz pop sbb push add mov pop jle (bad) mov into push dec and das push stos bound loopne jns andl and mov cmc or jmp mov and stos call mov jb addr16 testb inc sub pop sub shr add in or (bad) sti sbb call cs icebp loopne sbb pop inc push push out shrb jae gs ljmp les ret add or mov xor push mov (bad) mov push mov loope xor push cltd pop mov inc iret pop and in hlt ret mov xchg movsl lret jo add pop cmpl push loope loopne xchg fisubrl pushf jecxz sub xor mov aam cmpsl aas push push (bad) lret jo or pushf xchg xchg addr16 lods cmc (bad) inc loope fsubrl out inc or pushl pop pop dec or cmp repz lcall (bad) dec fstpt adc shr leave mov mov sub cmpsl hlt enter push movsl jmp faddl dec in push (bad) dec push cmpl out sti cmp les xlat loop add jmp loopne int inc pop jl inc jo aas cwtl mov popa ljmp imulb cwtl iret sub mov pop jecxz js and les out das lahf (bad) cmp cwtl (bad) jp sub mov js cltd dec xchg jns (bad) or inc pop jmp mov lods lock pop icebp push or push insb pop movsl sti push or adc movsb and sub dec push not sub bswap leave in int das sbbl cmp sti sbb xchg loope push (bad) lods roll adc bound lcall pop push inc lock lock dec add popa lods lcall xchg in movsb pop mov push mov dec mov pop xor arpl and (bad) jne mov pop mov and shr add dec je popf roll rorb xchg arpl mov data16 jo or or or fsubs dec jg add and add neg sbb bound test fstps cld push imul cmpsl sbb push nop out gs ljmp out cmovle inc enter outsb mov jne mov test rol add int inc ret roll nop cmpsl (bad) or outsb cmpsb pop or jns adc push add inc add cmp pop and outsb cmp lock sub mov xorl adc iret jmp push pop sub pop cmp lret into cmp xorl aas cmp dec ds mov mov pop inc in inc icebp add jo icebp push js (bad) jle and (bad) and js nop cmpsl daa mov call and add sbb mov loop aaa icebp or in pop cmp es xor mov rcrb mov inc and (bad) add mov or pop jno mov xor lcall iret add icebp mov cmp roll push sbb enter adc dec call (bad) push cmpl pop add inc stos clc adc mov push mov std popf mov call push jecxz adc lods mov add adc and inc arpl xorl sbb test les cmp mov inc ja cmpsl in ds or icebp mov mov femms not and movsl cmp xor cmp lahf mov jle push xor (bad) mov stc inc inc mov inc jno push or cs in lods or ret stos daa fisttpll incl jl pop pop mov (bad) fbstp mov pop mov ja,pn nop sub sub lcall cmp sbb test pop loop mov movsb cmpsb test mov jg jmp jge xlat addr16 push das dec push and rcll lret or add dec std mov pushf enter mov xor clc mov ret divl test lea dec bound movsl mov pop shll shll sbb icebp pop lahf loope xadd out pop add incl out inc ror inc shrb stos fwait or call or sbb lcall std and into pop add jbe negb lcall and add repz push (bad) (bad) lock push fldt int pop mov mov pop push jle pop sbb fisttpl shl int pop lahf push sbb xor sub in test mov test fdivp xchg sub add inc jne,pn jae lea jno aam push xchg mov and xor push add xor lods test inc and lcall and (bad) mov jl pop or cld das or mov divb jge pop pop hlt xor push out xor jge sub cmp mov int3 std addr16 ret jecxz sub pop pop push cs shrb mov in mov jo pop iret icebp mov in mov add jbe,pt imul jo loopne mov mov jne imul mov mov mov aas cmp add adc add mov mov shr (bad) jmp mov push mov sti jns sub cmpsl jmp pop xchg pop mov std push std pushf inc or push fdiv add test mov (bad) js adc mov adc jmp in out fild pushw dec add rcll pop xchg in jmp jb dec lock enter pop or cmp mov sub inc sub lds push sub push push (bad) mov lods das loopne sbb stos adc loopne pop pushl pop test mov xchg std or aam jg mov add or dec xchg fiadd xor xor je xlat or and xchg std pushf arpl cwtl or js jmp negb sub mov pushf xchg xor add inc jmp scas mov (bad) mov decb out pop cmp jge pop and les jne sbb mov dec push repz pop xchg test pusha out insl jmp add insl pop xchg inc aam (bad) mov jecxz in adc sub icebp arpl ljmp push shr push mov frstor xchg ss xlat pop mov sub fmuls (bad) rcl xchg dec in sti cwtl sbb scas es pop bound lret cli push or jmp jecxz dec dec cmp or lret (bad) adc cwtl mov fldl mov cld adc add adc cld fsubrs sub dec imul adc mov pop and dec fstpt mov mov mov cwtl repnz xchg test pusha adc mov imul or (bad) xor push or add test and insl mov pop lods mov add push jge push push fbld popf paddw or cmc and add jg sbb test js sub cmpsb pop jbe pop mov mov adc and out clc popf ret aam jp jbe mov jbe mov mov leave jecxz xchg inc call jmp xor fs aam jmp lea das pop rclb addr16 push ljmp pusha inc insl add mov pop fwait cwtl mov bound popa decl mov in push adc inc or scas lock push mov cltd push addr16 or jle jecxz stc adc mov mov adc cmpsb adc lcall jmp sub sahf dec daa add flds lds jmp clc push adc call add test ret add fnstcw and push add fidiv add inc in pop add ret and (bad) sub push (bad) sbb push push cmp dec add repz mov adc xor insl aas inc cmpsl add jmp xchg cmpl ret jno (bad) or (bad) aaa push mulb inc mov add imul jge test cmp nop insb pop (bad) mov test cmpb decl or add xor call pop cltd xor repz rcl add mov jne hlt sbb loopne xchg pop adc xchg rorl out sub jae dec and cmc jge mov xchg push dec mov popa xchg pushf leave popa ret sbb push or pop sub or push xchg (bad) add add mov (bad) out adc or scas loope sub pop testl mov ljmp ljmp fs outsl sbb pushf adc mov fisubrl aam bound shll test sbb je scas jae push add mov inc daa lea in and in lret add clc xor jmp cld cmp jge loopne sub (bad) or fsts sbb cmp pop add cli into add pop mov xchg bound or dec add jmp pop xbeginw mov add mov sub scas shll sbb movsb xchg inc add sub push xchg sub mov and daa test sub cs push cmpsl cwtl sbb cmp jmp loop lret jmp sbb inc jne mov push enter push ja jb jb pop dec and rclb imul ds sbb mov xlat xchg pop push sub repz jmp aad enter adc jb xchg push repnz mov dec (bad) daa dec pusha int mov xchg (bad) or rcrb cmp and je adc pop addr16 cmp loope dec lret and push jmp mov sub or mov das cmp xchg rcrb or adc enter dec bound pop jmp mov hlt sub xchg mov outsl inc mov pop adc jmp mov data16 inc repz rorl je cli or in dec mov cs pop jne cmp fdivrs mov scas ret (bad) cli repnz add loopne loop adc in arpl rolb xor out les cld dec pop aam shl aam pop sti add xor or push adc leave psubusb jle inc lea or cmpsl jns bound or push pop cli je cmc push jp rcl arpl jmp clc in shlb cwtl sbb cmp add add out movl pop adc or outsb and je cmp add movsb pop and es inc and jge jb push sbbb dec push and pop movsb sbb test pop das cld pop pop jle les pop or or dec fcmove inc or sub insb pop cmp adc push xor push ret cmp add push sub sarl lds dec mov sbb mov lret add jae call adc or mov cmc inc lods sub (bad) add push cli bound sbb add cmp and (bad) mov inc adc mov pop mov stc mov stc ss outsl mov push push mov lret mov (bad) xlat test add jns lods pop add mov xchg roll adc (bad) add adc inc add nop mov or fistpl pusha dec add or inc xchg pop adc or stos adc dec lahf lds xlat std and jbe push mov out cmc add sub mov pusha xor out pop into hlt daa rcll mov divl jl push idiv aam ret neg int repnz ljmp jmp or ljmp lds (bad) mov test xor popa divl xchg xchg xchg fwait dec push js outsb sub mov sub mov std pop das mov into scas lock out sub movl test push roll je cmc loope stc aaa iret push dec lret pop push call sbb aas push xor notb pushl push std jmp popa push sbb sti and push mov (bad) mov mov fdivrs out rclb jmp push ret inc das andb mov and xlat and (bad) pop shl jmp push mov cmp out fsubr pop dec faddl mov mov mov xlat hlt daa mov mov into dec dec and cld sbb outsb mov (bad) adc jmp mov xchg test repz jnp xchg dec and or inc xchg jp mov rolb add pop lds lods and dec adc loopne ret adc andb imul pop cmp or pop cmp outsb popf add movsb roll (bad) lahf das dec cltd jmp pop sub or movsb pushf movsb xor scas xlat aaa xchg (bad) jmp push push pop push ds jle sub mov lret cmp pop das xor mov lods xor (bad) addr16 adc ljmp jmp popf xchg jle pop imul adc push shr out mov lods sub push mov jmp lret push repz xchg aad sbb insl jb mov push inc pushw xor clc test inc cwtl or in fcos les ret ret lods movsl jl stos sbb leave inc orl jl aas push sbb sub pop mov mov and sub dec aas sub addl out xchg cld dec das jnp or sbb dec ljmp lret cmp mov rcrb loopne daa int3 jg stc imul out lock dec pop or test adc sub jmp inc lcall adc adc add jmp pop fistpll mov vcomiss sbb mov mov push out repnz dec xchg push icebp cmp sbb rolb jge and (bad) shlb or cmp mov xor dec push xor push (bad) aad test out jno out jae mov icebp roll inc xchg loope jge xor dec ret fmull sbb das bound mov jmp shrb push dec pop out fwait mov mov mov decb lret pop fbstp pop jmp js stos sub clc inc jb test pushf leave jae xor fistp mov and jge dec add incb testl jbe sbb aas jl push (bad) xchg dec mov pop pusha jmp jb mov cmpsb sub lret add sub dec sub xor mov push sub leave inc idiv xchg popf sub aad aaa pop push dec xor daa sti adc xor addr16 inc xchg adc or andb pop (bad) jg pop jae repz jo mov outsl sub dec lret jmp js xor mov add dec xchg and jmp inc pop cmp xchg sub testl lret movsl mov dec mov push out rorb push dec jmp test pop push daa mov push and and push ss rorl ret inc mov cwtl mov or mov repz inc cmp cmp pushf enter dec push xchg sub call sub jmp adc movb ljmp cmpsl add pushf push out fs xchg lods pop pop add add xlat xchg gs jl adc sbb cmpsb bnd data16 sub mov jb xor out add cmp in and daa mov (bad) dec pop mov jg xorl dec lea push lods sahf lahf (bad) mov xlat insb andl push mov int3 add pop (bad) or lea jecxz xchg mov or enter leave pop div shrb bound fwait or int3 mov or sub sbb jmp pop xchg fiadd fcoms xchg loope pop inc add and outsb push into mov arpl mov push inc xor mov xchg (bad) lock or jle les jmp int jl jnp,pt adc adc add fcoms sbb dec add aas add sub es jmp movsl pusha data16 xchg dec dec pusha enter mov icebp lret cmp ss xchg xor lods add jns test push sbb sarl ja and add xor mov imull sti adc stos nop out adc test int3 xchg jmp sti mov imul jns sbb xchg aad jmp decb gs pop (bad) pop std xor lahf loope mov fs cs loopne mov sub jmp pop loopne mov push pop sub psubsb ret es sub call sub gs mov mov pop or aad ds pop sbb mov or sub std enter daa lret pop xchg pop insl outsl int3 inc push xlat (bad) fcoml pop sub add xchg les add fildl aad ret pop and add addr16 adcl es pop (bad) xchg sbb xchg pusha dec test mov cmp insb dec mov jb dec repz aam adc (bad) mov lahf sub sti lds fimul adc ret or push call pop in mov push ss sub fbld push push sahf pop xchg push les xchg push cwtl jae hlt rcll xchg inc add xor mov jmp pop (bad) mov jmp into and add dec mov jo jg and jle xchg in xchg pop mov cmpb loope jne inc out jns imulb cmc add sub add push arpl xchg mov mov jmp fadds (bad) push fs push outsb sbb lock pop pop sub fsts jns xlat push jmp fldl lock dec push cltd sti dec aas jp add push ret add mov stc xchg fs (bad) dec cmp pop dec jo scas xchg xlat call add pusha sub pop rcr add pushw mov adc cmpsl adcb push sbb (bad) jne mov pop ja push xchg out xlat je jo scas mov (bad) cbtw pushf add add enter dec jae push rclb cmp and dec hlt clc pop pushf push pop js pop dec nop adc pop push add bound xor push mov and mov dec arpl les (bad) lea lds xchg bound mov call lods pop adc test mov scas out movsb sbb adc test imull stc pop movsb mov loope adc adc or cmp jo jo ja mov and lods (bad) sbb fldl and xchg push fsts repnz and je add inc cmp cmp inc or adc fwait (bad) mov (bad) pop jge sub rcrb push jmp fsubs sub je mov cmp mov pop outsb jae pop fmul jae jle or fnsave or push cs mov fisttpl in jbe in in int shr or iret mov mov mov dec (bad) mov dec cmc out enter rorl push or sahf (bad) lods push push (bad) je sbb ret dec adc add mov ds jmp mov cmp outsb xchg push cli xchg arpl cmc mov push sub sub push and (bad) adc cmpsl lods call nop sub sbb xor jo std push (bad) lods movsb xchg jb sti push mov mov sub adc in or jge jg cwtl and inc test lret mov inc xlat add add push jmp or inc cld add decb jno cmpb inc jmp pop push movsb add inc jl pushf xchg mov or dec add hlt mov dec mov out in pop sub cmp cmpsl lods in and test xchg adc or inc cli inc jns xchg add insb fdivr (bad) fnop cmc and add pop cmp sbb jle nop incb aas push mov mov pop jmp sub lods popa cmpsl adc push sub push push stos pop iret dec and gs lods sub sub jnp mov cmp cmp out hlt adc popa and push imul jbe cmp add cld js push mov jbe xor cwtl mov test mov call movsl adc loopne inc adc lea mov cs cli pop add inc mov or fdivrs sbb insb mov das mov clc push and push xchg jbe mov out cmc xor stos mov pop mov sub mov loope add jmp lret and and mov (bad) push push repnz scas and rorl mov sub mov fwait xor std jnp leave fild and xchg mov test xchg push decl aas hlt sbb popf mov mov fldl stos lds add rolb sbb push and add ss sub add outsl insb ja aas adcl push fist sub push sub arpl push mov loopne lret add jmp pop push inc pop add aam mov push movzwl cmpsl adc add pop fiadd ret xchg fndisi(8087 inc sub xor cli and fcmovu stos mov lds jl pop jmp push xchg or fcompl push rolb pop and mov (bad) dec aas out xchg ja in mov push jp push not fildl jmp jecxz shrl cmpl or aad dec dec sub xor nop iret cwtl outsl cmp push popa cmp cmp (bad) repz sub sahf xchg daa push shlb int lahf jo cmpsl (bad) xor or movsl data16 jmp iret das pop sbb (bad) push inc leave orl or addr16 xchg sub jae or dec mov and aam addb push (bad) mov in xchg imul lret nop ds fwait or xor je (bad) mov (bad) dec inc jl sub jo add push push jmp out shll repnz xor pop adc popf xchg sub daa push dec (bad) bnd outsb aam mov and icebp sub fstpl dec lret pushf fiadd popa outsl inc xor push (bad) or push fwait popf cmp ljmp bound mov xor pop cmp push add not repnz repnz add cmpsl stc mov pop and sub xchg push rcll mov mov pop xchg cmp pop jecxz push sbb mov ds dec imul shlb es stos mov push jg xchg lcall xor fs and push pop fsubrs cld adc inc scas and mov insl sub (bad) cld repz clc inc nop xor pop mov fistp adc data16 mov push push (bad) mov loopne xlat sbb cmp xorb ja pop mov pop pop rcl add mov das push in jl pop loop rolb mov shll xchg inc cmpsb pop mov popa sbb js hlt loope popf test dec std rcll jno inc cmp and push xchg pop jge dec daa (bad) scas mov (bad) xchg outsl inc out test inc mov inc rorl ja ret mov pop in sar jmp into fiaddl push push ret loopne xor add out and push scas daa jmp sbb scas and loopne cwtl pop idiv adc in stos mov cmc dec pop mov bound and inc cmpsl fmulp scas add repz mov popf rep and inc and in xor xor or pop les stc push mov xor fstps sbb jecxz icebp adc call cmp push mov leave cwtl insl inc jp add call and iret cmp xchg mov sub sbb testb adc jmp and sub (bad) push aaa pop jl pop xor mov mov xor ja inc addr16 repz mov shll in pop notb push dec adc jge lods imul or clc in add push addr16 jecxz test lret inc pop jp pop mov adc sbb es inc ret imul jp aaa mov das inc mov outsl add lock mov into cmpsb and push shrd mov sbb sub aaa xchg out test cmpsb or lods pusha sub pop push in loope dec nop add pop mov divb movsb xchg rcrl add in mov pop mov xchg leave add int imul gs test mov stos push adc pop loop dec stos mov adc inc in adc mov add jmp mov mov xchg loop xor jmp out xchg xchg incl mov adc push mov scas out add push pop shr cwtl jmp (bad) lahf ja adc cmp hlt fimull cmpsl fcoml add fcomi hlt pop xor divb sbb daa push pop repz or mov call pop adc bound push jne (bad) test xlat (bad) mov adc inc scas faddl pop pop push add sbb into call xlat add neg sti xor adc push push jl mov lock sub in dec jnp flds add pop cmp fwait sbb cmp rolb push add test ljmp (bad) les test or jno or push cmpsl push aas (bad) aam pop lret push mov or push decb test add inc jmp test pop mov and jns push addl (bad) jp inc add insb sub add push jns sub jmp jl jns jl repz out aaa out pop ja push mov clc sbb ret or hlt outsl pop subb mov outsb adc stos popf rcll pop jmp les adc jl orb cmp push test xlat scas loop das pop jle shr sub sbb dec cmp roll mov frstor xchg lds xchg loop in in xchg push (bad) repz loopne clc pop mov sub push scas jbe lock idivl sbb mov sub pop fisubl and mov mov movsl cltd cltd iret out push xchg shrd inc fs sarl lret lock xchg test or addr16 xor mov loope fcompl daa pop addr16 stos pop call xlat sub or jp into in sub divb lret fldcw cmc sub inc and std dec and jmp stc ret cs dec cmpsl (bad) arpl imul push insb mov pusha mov push and mov or push mov orb mov out cmp push aas add dec inc and ret scas sub popf mov lea add pop cwtl ret rclb andl dec push xchg cltd cltd inc idivb out (bad) dec jmp imul sarb dec push add jmp sbb xchg mulb movsl sbb sub jmp jecxz adc push mov rcl sarb rolb mov shrl cmp lret sub xchg scas add and or in pop sahf mov ljmp push daa rolb loopne mov mov jle sub inc or cltd lods aaa ret add mov xchg loop dec int3 ja lods inc sbb ret and cmp inc pusha cmp dec outsb mov dec add dec inc jmp mov adc int push mov jo test xchg or sbb add les mov xchg stc in xchg jle mov sar mov dec sub sub ret jmp mov push dec and cmp or cwtl sub sub cmp inc push inc add mov ficoml insb shr pusha lods pop mov jae xor add pop dec dec push ss pop sbb imull pop or scas mov popf adc mov (bad) decb imul jmp sub mov pop insb int3 movsl pop mov or cmp stos rcl ljmp addr16 and or loop inc fisttp add out negb mov push pusha cmp (bad) out jle or icebp aad mov mov das shr into (bad) mov mov aam shlb push mov jno iret xor decl gs lds std out push pop (bad) jmp mov scas fsub jmp lock mov dec jmp ds loope jecxz cmpsl lods push add sub sub jmp add loopne add push push ret pop add sub pop mov add push pop testl imul mov add ljmp pop inc cmp cmpsb jmp add sbb adc orb add bound sub lock push sarb pop xchg loopne sub fdivl test jg jp sub push pop and cmp add dec mov xlat orl xlat dec cmp arpl add pop mov outsb and mov test mov pop pop (bad) add daa (bad) mov cmp mov sbbl out das stc add and inc pop out in sbb or adc test (bad) mov and mov sub mov push adc jmp sbb mov push ret rorb scas mov add dec push add xor roll jns sbb jge adc and mov das jne sbb push ljmp jge or dec lds jg adc pop aad fmul pop push add mov jb push sti out push jns or jge out and pusha call outsl arpl pop jg mov or mov xchg lcall push rorb adc bnd inc jbe mov push adc jmp inc packssdw xchg cwtl aaa cmp and movsl jl (bad) adc inc les insl scas push jle mov sub mov push mov aas test adc pop ljmp lea cmp sub pop pop test lods sub and push pop push aas xor outsl or clc jmp out sub mov lds gs add loop inc xchg (bad) xor push mov cmp les fimull nop inc and and subb jp pop dec inc leave push jns xchg cmp incl sbb lret ljmp imul or xchg xor sti inc rorl std lods mov cltd push mov movsl fsubs push imul (bad) aaa xchg orps mov nop or inc or jmp sahf jg or js and pushf push and mov mov jl jno add outsl mov dec scas sub mov dec fisttpll dec push xchg movsl adc cld je push or and iret clc jne lcall sbb sbb mov pop cmpsb or fs (bad) adc push or xor lds cmpsb mov push or add aam add xor shlb adcl dec fs push xchg add sub cltd (bad) idivl ljmp add and sub mulb push jmp stc sub mov mov loopne rcll add mov push mov bound into or scas lret sub divl rcr test xor and rclb jbe daa pop pop je jbe fidivrl pop das mov dec push push loopne xor sbb stos jbe adcb jo mov mov insb gs mov jbe cmpsl and stos lods pop xchg or pop xchg mov std daa adc loopne push mov pop xchg fmull sbb pusha jp addr16 adc out daa dec xchg and add lcall and adc dec mov inc push cli pop dec popf pusha (bad) xchg in mov icebp test jmp cld inc test push mov dec xchg add addr16 loope push mov xlat sbb leave stc push pop and jge pop mov jp and dec popf hlt sbb add adc sub and mov lahf stc sbb mov sub sbb dec fstpl and mov push xor mov cwtl test das mov adc xchg stc scas iret (bad) jl out in sbb enter xor loope cltd and mov and push lods sahf dec lods mov cmpsl or mov dec ljmp nop sub inc sbb push pop in clc stos repnz fnstsw loop (bad) mov dec js xchg push shlb push enter dec in push rorb lods add push pop push mov lds push or dec (bad) adc jb jmp shl dec (bad) jbe or pop cmp or add out (bad) adc bound add xchg lret leave push rcrl inc jl loope push push xor jnp adc adc es cld xchg lret add ret loopne jmp push ret push insb mov rclb add bound jmp pop mov std xor decl daa jo lock shrb lods pop scas or fstpl jmp push mov add addl fstpt sahf add adcb lea mov jo dec (bad) mov add push add jmp popf jp cmp xchg daa adc jbe lret addr16 sarb jmp inc or xor js xor (bad) sahf sub jmp inc out push dec pop adc stos dec jbe sub frstor imul xlat arpl dec aas je mov dec stos aam pop rcrl push test hlt add call mov cmp push pop sub mov fdivl sbb rcrb hlt arpl sbb js xchg or cmpsl add addl ljmp repnz push pusha pop inc repnz dec mov das pop cli mov push add ret sub out add add sahf addl mov fnstcw neg cli movsb bound jbe jl jbe pushf mov hlt frstor or jnp lret aaa adc jno mov or and sub and push pusha xlat ja jnp pop add in inc sbb mov and mov and lret mov pop jmp dec jle insb hlt (bad) xchg cmc test or test mov dec rcrb add sub (bad) lods inc mov mov daa mov mov lret xchg test mov adcb das dec movsb in dec inc into xchg or jnp stc lods pop loopne xchg xchg divl lret mov rcll outsl inc sbb (bad) popf inc adc mov sbbb addr16 lcall das test dec mov dec es mov jmp pop test push inc jb cld push mov adc cmp lcall inc xchg mov xor test mov aam jmp pop scas mov out inc leave or and jns add insl xchg mov fst cld jb loop pop add les and je aas sub add mov fidiv mov sub loope fxch ss fidivr test cmp out in inc jmp in pop lcall fs add xlat jmp pop mov push fucomip pop das imull loope and push or mov (bad) cmp je jmp or cmp lahf jmp mov or adc or loopne sahf loopw add mov pop and dec das add adc jo pushw jmp les pop test popa mov pop cmpsl aad out roll mov push lea push out jo sbb lock loope fbld (bad) idivb test jmp faddp pop mov (bad) jmp inc jl stos jle mov mov jl dec (bad) sbb sahf pop sub ljmp xor dec pop test sub push push or mov clc adc icebp lds movsl je sub rcrb in add mov (bad) cli (bad) in sbb pop clc sbb sbb addr16 push sub adc popa ljmp mov ret sbb inc lds test in lds movsb inc push stos lods cmp dec cwtl add aam clc out lret int3 fdivr xchg cmc xor push pop sub inc jge jge xchg in (bad) roll cmpsl sub cwtl lods push mov test aad fwait jmp call iret add cmc inc push rolb xor sub stos adc push ljmp cs adc adc test mov fadd dec les push push das ret inc jmp push push stc jmp jbe lods pop ret mov (bad) jne push movsl stos inc insl push adc push sahf adc inc xchg mov enter and sbb add out pusha rcl in push (bad) pop pop xchg mov into ja cmp xor lods or pop pop cmc (bad) das out push insb dec xor (bad) cmp sahf adc aaa outsl mov roll lret mov insl loope popa xor rorb test dec arpl fs and cvttps2pi add jecxz dec scas adc ljmp adc fisttp scas jnp xor iret dec sbb add and leave (bad) inc dec add push test adc mov dec mov mulb pop sub cli sbb dec push sbb or call lods and mov sarl fs cmp sub fldcw hlt push sub in push jmp mov mov cmpl jns fcoml mov and and xchg mov mov pop in daa cltd pop adc sub jmp push sub inc inc mov imul ret pop sbb jge mov sbb mov stos add out pop mov shr daa neg cmc sub push mov add mov in and or mov mov jle cmc iret sub daa pop aad jge pop inc adc test xor jmp pop (bad) push jne sarb push add lock sbb xor pop mov sbb push push and mov test (bad) inc jmp sarb fcompp das in test pusha pusha mov cmpsl les pop nop outsl in push shlb (bad) mov pop mov pop nop lcall mov or pop push push int cltd and pop jmp dec and jo insl dec cwtl out dec inc adc (bad) jmp pop mov mov push push pop into ss pusha pushf cmpsl xor int3 js shrl mov (bad) push inc jmp pop and cmc inc imul test push cmp aad pop push xchg or lods mov mov shl xor dec in cmp push mov scas xor dec ja fs inc sbb jle mov lea xlat xchg dec mov cmc adc in pop or loope jp sbb stos loop aad pop sbb push sub roll (bad) sbb scas dec hlt aaa js ds add jnp mov sbb (bad) and sub inc inc push cmc jp mov mov mov jmp xchg in and cmc dec out rcl outsb aam add ds pop adc cmp jmp mov pop dec adc push subb and pusha iret ds fdivr popa sbb mov add push or ljmp neg sub push addr16 lahf lods dec mov inc sub dec lods mov sub pop push hlt fs mov mov jnp pushf cmp dec ljmp (bad) call out dec fstl test sahf dec in loopne sbb push loop inc repz cmp insl jne in std xor jae cwtl mov add mov fistp loope outsl stc or cli add (bad) push mov jo pop add idivb mov sbb jb push fs int movsl sub sar imulb loope mov outsl fisubrl (bad) out mov stc mov in imul outsb push sbb xchg cmp fildll xchg and and add add jo outsb lahf inc jb mov or or sub data16 leave stos rol js dec popf (bad) aaa and imul cmp mov mov out fs push inc or (bad) (bad) sbb dec cmpsl pop pop mov cld mov mov sub jmp in daa popf outsl fidivl push mov in lahf fld dec pop cmp xchg cmc mov (bad) jp jge adc in stos xor xor add cli sub xor lods sub ret xchg cmp dec fidiv adc jbe mov shl rcr ss push aas sbb push icebp push sub sbb lahf inc imul inc and stos rcrb push xor adc dec pop mov or loopne push test jb push ljmp scas das mov or out add jnp divps jmp or add xchg movsb mov mov dec mov pop cmp dec add sbb inc add jb lock mov dec mulb mov sub add bnd mov add jle inc jmp sub inc popf incb dec les les adc jnp cmp dec stos xor call mov addr16 rolb repz dec je pusha jbe in bound jmp mov mov (bad) pop and xor pop xchg in les xchg and adc int aas cmp jnp jno xor rolb jnp mov in in cld jge test mov nop push sbb or mov xchg dec push sbb bound ror mov sti je mov scas jl inc dec outsb inc add outsl icebp pop loopne insl js popf cmc mov add mov call movsb add or pop xor add mov sub icebp mov test cmp aas (bad) hlt or mov ret and movsl or std (bad) jl roll jle pop cmc dec inc add jns test add dec or in or jns and fdiv add and mov jge mov hlt sbb mov add cmpsb iret fdivrs nop sub ret push bound std repz pushf sbb pushf or jmp push adc add ret jae jge test roll push sub inc test repnz outsb outsl jge loop or loope pop jle aad into ja pop lds mov adcl test jne ret cmp lods mov mov push dec add fdivr shrb mov mov pop sbb (bad) push or stos testb fadd lret cltd push inc sub push subb jge movb add shr push pop shrl loopne orb jnp xor js ret push dec (bad) push or gs or pushf push push inc mov lret imul je mov xor lds test (bad) std pop notl insb jecxz (bad) out clc bound scas sti add cmp outsb dec or fsubl jb pop clc dec loop inc lea push hlt pop xchg pop cld fsubr dec push pop mov dec and rorl sbb (bad) scas lds dec iret dec call cmp sbb and and push aam pop out mov je inc shl mov cmpsb jge or lods jl fs cmp and (bad) data16 js add push data16 (bad) sbb pop (bad) add jp adc call cltd mov mov sub dec and cmpps mov dec mov nop xor clc dec pop push jmp push fcoms neg loopne mov cmp jbe lods sub out pop call cmc inc mov push sbb mov repnz mov pop jecxz cmp and push or repz sub ds xor and pop jae add aam dec lds inc xor decb xor je xchg out orb xchg xor mov decb scas jmp ljmp mov jo sarb or cs flds pushf (bad) sub inc stos mov push lea in mov push xchg jmp add scas lea sub inc stc outsl jbe imul stos xchg mov xor (bad) out movhlps lea (bad) inc xchg cmc dec add dec lret lcall jmp or data16 xor xchg inc les add fldcw pushf cmp repnz pop repnz das repnz cmp jp or xor push and ret mov cltd popf leave subl aad mov fimul cmpsl or notl and sbb test lcall ret std add sahf aam mov test call sub dec loopne jmp xchg or mov ret fsts negl fnsave ret (bad) aaa lds addl scas das jb push push sbb and push jo xor mov add (bad) aad xchg cmp pop xchg xor xor inc xor icebp rorl fbstp icebp jge (bad) fidiv mov adc sub into sub push loope int cmp mov fcomps jne movhps notl test lcall cmp pop pop bound cmp cmp loop shll push cmp out mull lods call clc loopne mov mov adc lods pop in xor sbb fisttp xor dec and outsb in cld test push lds ljmp ds notb fildl jl dec sub lock dec sub pop xor pop xchg sub pusha mov and mov dec fwait pop sub xor stos dec outsl mov pop repz jnp adc mov add cmp jle (bad) ds nop mov jg pop sub shr xchg sti push xor cmc sarl outsb add jge dec out push cwtl push xchg ja lods stc inc pop pop sub popf fnstenv dec test cmp dec out add sbb sar cmp ds int3 addb ret adc mov fstp les add lea mov movsb pusha push idivb inc xchg dec push int add jl (bad) jecxz roll push jmp lret ds mov dec dec xor cmc push (bad) cmp iret jnp cmp rorb nop push je rcrb jne loope or mov nop imul inc aam sbb mov das xlat bswap enter add sub (bad) push into pop sub jmp push push push xchg push mov insb push cmpsl out jmp in fdivp xor bound jmp dec (bad) clc ds mov xorl pusha sub sbb xor imul add adc jl mov xchg mov das jmp fmulp fsubr repnz sub mov add jno loop or loope mov add or icebp or or cltd out rclb repnz popa sti (bad) pop test andb aas add cmovb shl push in pop fidivl clc push jg sub adc sub push sbb das or cmpsl pop adc cmp jns popa mov pop jle jecxz or stc adc lret bound shrb out adc adc (bad) out add fistp push jmp out and dec orb roll jmp imul adc aaa mov pop pop rcr (bad) jle je fldt add mov jge pop jg hlt data16 mov (bad) pop or ljmp or test loop pop (bad) jl (bad) ret out jl pop in jl sub push xchg test mov rcrl mov aam pop addb jg int3 loopne aas dec cltd movsb inc xchg pop inc cld jnp aam push pop add dec jns clc mov mov cmp cmp mov pushf or and mov nop cmp das loopne pop cs mov cmp aad ss adc mov pop pushf inc and pop pop inc std in xchg or in dec aas or push mov popf idivl xorb cltd (bad) push mov das sbb jbe and dec outsl imul inc cwtl push iret cmp add mov popf pop xchg in dec loop adc gs mov xchg push jne xor add pop test pop jo or (bad) aaa fsubs int dec out mov in int xchg adc and std ret jp and nop pop mov mov lret in xor jmp sahf dec sahf dec fist dec adc jo sub and es add test mov ret sbb mov rcll dec mov imul int3 xchg movsb test inc out sub sub outsb js pushf fcomps aam xchg mov outsl or push pop pop mov call incl shr jnp sbb or mov aam sbb rcll ret loopne cld sti in cmp fst sub or lock dec (bad) cmp aad rcll add sbb out xchg inc in sbb pop jecxz add xor pop mov sbb imul bound popl jnp popa ret sub xchg dec add pop je mov aaa cwtl aas mov push adc call jno add inc ret jnp add cmp clc (bad) pop mov jmp and push push cmp sub scas hlt loope xchg divl add repnz sbb dec dec rcrb xchg add int3 fstl or xor in stos push in add or test xor loopne push ja ss mov cs dec inc (bad) out inc test jae pop hlt das cmpsb cmp or or pop repz and dec mov jecxz adc out pop addr16 loop aam js xchg pop dec in jmp pop mov pop cmp daa inc frstor xorl lods in mov fstl sbb sbb das loopne aad mov ss add js pop mov pop mov jmp mov aam in xchg test jge push hlt xor movsb jg mov pop dec movaps lock add js mov cli add (bad) xchg xor (bad) push and lds call loop adc mov mov push and fsub or pusha fsubr sbb nop push pop dec addl jge xchg rolb or repnz add repz adc sub lea pop pop add sub sub test dec aaa mov or push pop sub push repz add hlt xchg mov jae js or push lret decl mov push or mov mov push xor add xor push test xchg ljmp pop or test addr16 mov dec inc int3 sbb or pop inc pop pop push (bad) repnz add aad inc clc repnz arpl push dec inc (bad) xor in push xor add in or lret fwait xchg add add clc adc push or ja pop aad std inc mov (bad) and (bad) cmp je and dec test fisttp lods (bad) push mov dec test jae lcall dec fwait dec pop mov ret inc xor aam cli fldcw adc js shrb adc (bad) jae adc pop (bad) nop pop jnp or add jecxz sbb mov xor in jae sarb popf fsubrs pop dec call or ficoml sti cmp subl xor jo jmp cli add xlat jecxz add jg pop jmp loop cmc add jo dec push jp inc mov pop xchg lds fcoms dec mov pusha insb repz loopne jbe (bad) xor cmp cmp or xchg jne jg jb or xlat xchg jg and jns into xchg in mov xor bound inc scas sub scas and insl lahf bound push sub rclb cmpsb dec add dec xchg fsubrl nop or jbe gs (bad) dec lock inc add push mov std xchg test push pop xchg pop pusha pop jmp int pop push icebp pop cmp jne rorb and push inc cmp jno adc test lahf adc gs lods shll imul data16 aaa std jmp mov mov xchg popa aam xchg pop add sub jmp pop jp xlat loope inc (bad) sub flds inc sbb jnp dec add cmp jmp loopne pusha cmpsl dec jo aad insb jge mov lcall dec test lret lds ljmp or jbe ret rcrb nop lock xchg jo xchg sbb in mov bound sarl leave add jae imul inc ja dec rcll fs and (bad) leave inc test mov sbb cmp movsb push sub jmp pushf push imul xchg push dec add xchg add sti test add lret inc and push stc cmp in fdivrl pop mov sub hlt (bad) or xor bound jb cs test xor push repnz sub sub add in and adc cmp and into js (bad) imull cld dec sar (bad) mov xchg and in out mov dec push test pop dec pop push inc and jmp fmulp xchg ret xchg (bad) (bad) outsl sarl inc popa add xor xor jmp jg je jmp add push adcb shrb jp cld std dec cmp push pushf add push shl pop xchg fs ret (bad) mov sub out enter cmp inc jg imul adc in xchg sub mov xchg and push lods lret hlt inc lea xorl dec movsb jle int mov sub clc into arpl ljmp lods lahf daa xchg xchg out scas and adc mov xor call or cmp push scas mov jg flds cmc cs xor xchg test add sub out inc xchg pop jmp mov lods (bad) mov cltd mov push bnd clc shrl rclb ljmp mov xchg pop dec jns clc jp cld lcall aad jmp and or and and movsl push inc xchg cmpsl cmp negb inc jmp pop xchg out popa push fidivrl adc pop mov adc xchg out bound lock iret dec adc fbld imul or pop imul divb xor in mov adc scas mov jo idiv sub dec stos aam jmp jl fldl dec es test push in pop xchg jmp arpl sub push xadd push and cld ja bound nop or xchg push dec push jp stos cmp daa add test cmp aaa incl and xchg (bad) or shlb or pop push jmp (bad) xchg kandb test test in push xchg add or mov out push out hlt (bad) in sarb xchg jb dec out push shrb imul rcll pop inc xchg cmp dec rcll lods push add nop jle inc pop jge push mov pop lock dec sub xor stos mov inc pop ret mov fucomip jno test cmp shlb rcll lret setge mov push mov insb add pop mov add xchg lock pop jnp in mov leave jb loopne (bad) xor inc adc mov out xor movsl xchg rcr outsl clc mov add clc push or shlb cmpsl fbld adc cmp add outsl (bad) pop add add (bad) jb dec ret mov add add mov xor dec sub add xor jne fwait mov fsubp dec out and movsb mov fstpl inc mov pop cmp outsl dec xor clc inc dec fs xor movsb jbe gs sbb int3 daa shr cwtl mov pop pop sub cwtl les jo pop enter pop or add js jno sarb xor or xchg jmp aad (bad) movsl xor test add insb sbb mov jmp dec iret stos and sti cmp jns cmp xchg lret mov lds dec das pop (bad) into jl and testl push push xchg or pop outsl in jo mov xchg mov and inc and sub loope inc jae sbb add into cltd cmpps push insb (bad) mov and jmp mov xor aam dec cmp pop pusha dec pop mov mov xor push cs iret daa jne (bad) jmp pop xor jo and dec jg or stos cmp or jmp sub push push mov push icebp adc push popa pop push push or cmp inc jg xor fmull hlt ret roll or pop out jle push popa push jbe lret add and loop insb mov xor cmp jbe pop xor add sub jmp adc addl clc sbb or and pop mov cmp in mov jbe cwtl mov sub std movsl mov lret xchg xor stc xor sar sbb add mov mov sub mov (bad) mov js repz scas fisubrl adc out add adc (bad) mov addr16 out jnp inc popa ret push jmp rcrb daa mov insl push xor pop cmp xor ficomp push and xor jmp mov and mov push add cmp and or xchg movsl rcll dec mov push stos ja pop and mov (bad) or push bound push mov pop add ret sub movsb ret cmp cmp addr16 cmc aaa mov popf and test or loop adc jmp xchg lret test (bad) cli int3 addr16 mov sub jo mov and dec dec inc inc adc add push ljmp mulb push loopne mov out jecxz sub pop ja or stos and (bad) fwait pop cmp sub cltd cmp mov mov pop iret xchg cltd sub jae imul out xlat cs fwait or lret out test mov loope mov in pop adc dec mov push mov adc loop scas add xchg lahf xor pop mov or cmovns test or cmpsb cli iret jne jmp jecxz ret mov addl pop jns fcmovnu imul add dec test dec or adc ljmp pop or or push mov aas cmp enter sub ljmp mov es outsb pop dec mov adc inc dec pop dec jle stos adc (bad) push push jnp adc dec insl push push mov mov fild cmp adc icebp mov sarb xor push movsl pop je ret ljmp push movsl push mov xchg dec popf andb pop daa rcrb push mov pop out push cmp mov repz add hlt jge cmp ja lcall jnp outsb cmc adc enter sub lret add rcrb push scas inc loop push push je mov subb cmp cwtl jne fnstsw jp dec cmpsb test cwtl mov pushf mov fildll sub push decl jg repnz sub push pop pusha dec aad push push jg mov lock clc pop mov adc loope and ret mov and mov aas lea in xchg jle mov jp popa add jnp pop clc pop fsubrl (bad) pop mov test dec dec mov adc sub mov mov (bad) sbb add push pop push pop adc loope dec push test xchg dec mov sub call popf btc pop imul dec ret movsl mov test xor pop push jp adc mov sub cmp xor rcr dec outsw adc sahf and ret cmp add out mov pop adc (bad) xchg jo xchg jmp sarb sbb in jge icebp push imul add push mov pop inc or push jbe jae push mov inc arpl subl aad pop sahf dec add pop inc sub sub cmp inc out adc push out loop xchg push jmp btsl lret sub jns ss dec or pop jle inc sub or xor ret xor dec stos roll ret aad pusha ret jmp bnd test sub popa dec add push jp pop pusha pusha std dec (bad) mov pop (bad) loope test sub mov adc xchg dec test jo rclb mov int xorl not add fwait repz int and jmp and fild scas dec add icebp cli mov movsb jb cmc xor push sub jl mov add cmpsb not dec xor popl mov in ljmp push xlat lcall push (bad) jb jno fldl cmpsl jne or enter popf and push mov push in mov or imul imul jo mov icebp add and in pop loope add jne jmp and or mov mov lds push adc pop add (bad) push or and xchg add xchg inc dec add add jmp push out jge mov mov xor daa or enter ret or (bad) xchg xchg mov xlat dec dec dec aaa inc push adcb and add pop sub push mov movsl xor (bad) pop or in sub mov dec xor and rorb pop stos add pushf jb pusha mov (bad) hlt pop sahf aaa dec (bad) je cmc add cmc lods sbb cli cmpsb dec add jmp mov or and jno inc mov xchg pop xchg xchg or mov mov insb xchg ljmp daa pop inc gs add dec push mov repnz sbb sub mov push add or fidivr sub jmp repnz out pop insl and orl pop jmp dec adc adc hlt testb jnp jmp ljmp inc jb xchg repz cmp mov lock cmpsb or sbb cmp imul ds pop jmp mov xchg adc push hlt add sub (bad) mov jge icebp cmp mov push mov outsl sub cmovno inc pop add jg or rol or addr16 popa push mov mov mov and xor cs mov lods leave lahf sbb pop insb stos pop adc out (bad) int cmpl sti add lret pop mov dec pop sbb test and inc push lds lret loop and (bad) lret push add std clc out adc cmp rorl fwait cmp out pop nop fstl sbb jmp add sbbb daa sub aaa push ds pop and lcall xlat pop rorb adc jl test cld out add push jmp jns sub das mov sbb jle inc fiaddl inc dec push fwait add pop mov pop sub cs rcrb mov add or pop jmp add mov mov xlat (bad) lock and xchg push push jp into imull push mov sub inc test js lods pushf cmpsl ret jno mov mov add or and jg xor and and pushf lods fnstcw lea sub sub test inc lock adc (bad) xor push pop mov adc scas iret push movsb scas std addr16 rcrl dec cmp (bad) inc pop (bad) adc mov or push sarl jbe leave idivb add lcall dec push lods add jmp push mov sbb sbbl iret xor or mov je push sarb add ret jae rol push enter adc push sub (bad) jnp dec lcall lock mov daa (bad) arpl mov push and fucom xor and pop std loopne sub cmp add jmp popa xchg push mov mov push sbb es jmp sar fs lock mov in and test add push push leave xchg pop icebp (bad) movsl pop xchg pop jg push or mov scas mov fildl push in lret inc iret mov rcrb push xor fdiv jp or (bad) jg (bad) idivb popa jecxz xor das clc and imul mov xchg mov cmpsb dec cli or add inc sub pop std (bad) or pop xor mov rolb mov jp push push jmp mov pop scas fiadd mov sub das test les dec mov adc sub rclb push dec insb iret add or sub dec push or inc sbb push push cmc mov sbb pop ret inc add sbb adc (bad) xor xchg sbb test sub fwait sahf xchg adc in jmp push add or push test aas cmp mov xchg movsl cltd sub and add pop or ret pop aad cld add dec es lret ss popl loopne ret pop xor dec pop add dec and mov xor jg mov dec imull xchg test jecxz int mov mov push adc or ret fdivrs sub sub or or (bad) lods jns lods push mov cld and inc dec mov out ljmp and adcl orb out enter loop negl fs and lods data16 int push adc pop push addr16 fsts or imul pop cmp and cmc cwtl jbe push popa jmp out sbb cltd pop mov out cmp setb pop in adc adc cmpsl sbb call xchg (bad) clc (bad) int shrl push push mov loop xor nop bound popa cmp std int (bad) fldl outsb mov dec (bad) ss dec add das testb ss sub mov fcoms cli xorb push mov jmp dec shr bound les push sarb das (bad) push mov adc mov pop les sub rclb push or pop pop and aas xor je loope pop add test orl pop jmp xor add pop and jne sub (bad) or daa pop push cwtl push push mov fs push fistl jmp mov mov push add fimull sub clc mov pushf shrb clc jecxz (bad) and mov lods js pop push test scas add jmp fsubp dec jge or push or (bad) jae inc xchg and cmp pop adc xor add jle sub and hlt sbb xchg out and add push outsl les add cmp loop dec hlt inc push sub jb adc loope das daa daa les push in out add xchg adc lds add xchg cli and fadds test dec shl add into pop (bad) hlt test pop pop shr addl lcall decb push orl cmp rcll pop fldcw or out es pop in mov sub jae addb fcmovnb enter jne mov sahf cmp adc and push pop mov repnz sub push adc or cmp enter pop xchg in es shl in fwait xor xor pop fs xchg add je add push jo mov xor incl imul lock scas adc jecxz inc lds ja mov or andl jp jle xchg xchg sbb enter dec out inc insb sub not sub xor adc sbb sub in xchg or adc mov jo iret push push fwait leave scas xor pop mov mov aad test sub std inc xchg push pop movsb pop push outsb hlt test pop dec lods icebp test push in or jnp and std orl jnp and jb pop adc add mov dec cmpb xchg not rorl cld test test into adc xchg mov nop (bad) push fadd push xor rcrb fcomi movsl pop sarb mov fstps ficompl add paddsw add pop lods imul cmp dec cwtl adc push push and jo sub cmp and jae mov push or lret aad dec enter es jle ljmp add add xor or pop or xchg lcall jmp jnp jae push adc mov (bad) adc cs and sbbb insb aam pusha sub out addr16 or xchg and not pop sbb jns or mov jnp mov fiaddl into push add es sbb into jmp push inc xor das xchg pop and mov jmp xor cmp pop cli push cmp repz aad dec roll sub cmpsl mov push or sahf sub mov and ljmp test daa ja fadd pop inc sub sub sahf cmp sub iret push lock jp pop xchg or xor dec cltd mov vmovntps xchg divb jg mov gs push dec jmp mov dec lret jo xchg and cmp arpl lds jl daa dec jmp ret push pop fucom jle or lret pop (bad) cmp push jecxz adc dec dec sbb xchg and fs sahf push iret xor pop or test pop push ds add int inc and jmp outsb push fbstp cmp out into pop xchg leave add xor std adc push scas js cld jmp std rorl push push jle dec fisttp arpl pop sub addl sub int3 sbb mov pop and inc mov ljmp xor jb xchg xchg pop repnz mov loope pop and or stos rclb or adc int aas and add mov and inc adc lods movsb and fistpl lods lahf push add mov add (bad) call mov nop ret xor push cld les and xor sbb sub lret mov roll sub repz sub popa testb addr16 rol call (bad) sub mov push mov push sbb pop pop mov cli add xchg imulb push mov fbstp sub ret fisttpll fsubr mov pusha in dec loope in or or jo out push inc push add std pop popa das mov sbb push imul xchg jo int3 std add ret and idivb push jmp imul jge orl mov sub sbb jle sub loope out and insl addb aas add rorl (bad) leave fs stos and out std inc pop push push outsb rorb fsubs add neg jg push loope (bad) leave repnz push push pop xor mov pop sub xor repnz sub movsl mov xchg adc jl iret call push and cmp stc popf andl or es adc or lea sub outsb pusha insl mov pop cwtl adc cmp adc xor add mov adc sbb mov dec dec push xor seta mov das xor mov xor aad call mov mov in xlat dec mov add xor stc xor outsb test pop jp push add std (bad) (bad) push cmp imul dec pop lock (bad) out cmp mov jmp (bad) testl xor adc and enter addl mov pop dec jle pop test and dec (bad) lret jge call popa (bad) dec inc andl std sti xor testl jns sbb or sub add pop push jp dec pop adc stos rcr push jecxz sti mov aad add imul (bad) xor adc push sub subb and hlt dec loop adc out frstor (bad) and mov pop mov insl pop and cwtl xchg je arpl mov rcrb ss imul mov push mov cld out add push adc stos int3 jecxz add js jmp int scas xor mov pop mov mov push adc rcrb int3 or pop xor jmp jecxz comiss pop cmc dec jmp enter and inc pusha xor loop dec ja popf or pop push xchg orl dec lock sbb loope cmp adc clc int3 lahf rolb test or in cmp dec jmp cmc nop pop pop jle shrb es cmp (bad) pop mov push xor mov jle mul adc loop cmp loop push lret cmpsb mov adc ja movl and push sub jae cmp imul push decl pop push loope punpckhbw jecxz rcll pop call push out popa stc xchg pop sbb (bad) cmp iret loopne sub push mov inc loopne icebp jae mov jmp adc adc mov aam or je imul push imul or xchg rorl push lahf mov jmp (bad) loope inc and call mov adc repz cmp in (bad) mov (bad) jmp xor in ss roll sub add pop jmp out sarl add ret fcoml test test mov syscall cmp outsb incl and mov mov cmp das dec or or or enter jbe adc ret std sub aam or ja jbe push push or and sub mov cmp sbb xchg aad mov jmp xchg pop int das test gs movsl cmpl jb aad mov lods out imul fwait pop push stc cmp repz flds mov add pusha add and mov inc mov rcrl or pop jp adc andl pusha or push ljmp mov decb (bad) dec add jmp in (bad) pop movl pop pushl test jno push add sub push gs adc iret dec jmp xor xor jge push out loopne pop mov jmp add mov (bad) pop mov inc add push dec fwait add sub clc push sarl frstor inc dec push ds movl fstl mov cmpb cli jbe mov rolb jl or or jmp daa ljmp js and inc push jo or nop lds sub and es cmpsb or jge pop out mov ja dec stc dec ja mov ljmp shr cmp xlat lret out mov pop mov arpl inc push push clc les rcr sti clc cmpsb ljmp mov mul orl or aas xor sbb jmp je nop and mov add add aad push xchg push push sbb adc xor push mov and xchg and scas adc dec jl lds cmpsl jecxz inc lahf pop pop das dec sbb outsl push push push add and or add shlb ss (bad) imul inc sub cli sub or int3 insb sbb shlb add sahf add push stos lods mov mov std scas test rolb (bad) lcall cs jbe pop stos lds popa xor je add xor mov cli mov ss cltd jg add ds inc sbb xchg sbb loopne aaa jno xlat sub pop add notl pop pop divb test jg or popa pop and inc cli outsb inc jno adc cmp pop xchg mov xchg test pop dec lds repnz or push pop xor mov enter or jecxz mov cmp or add loop xchg add jne cs stos and dec pop mov jo cmp rorl insl fcompl add jle jmp mov sub stos jbe and and jne push cmc fldl idiv mov adc sarb cmp mov mov adcb fisubr add es pop jno ljmp adc xor or bound jmp mov icebp dec insl pop das incb mov shlb lret adc fist sti test outsb scas sub fisub rolb xchg (bad) iret adc add scas inc or (bad) mov and xor dec std ja scas push out dec or mov daa cmpsb cmp pop (bad) jae dec cltd cmp mov dec xchg std sub pop push mov movsb adc clc xchg and mov pop add loope aas inc jmp adc lret mov mov into push popf mov jge adc push pop adc push xchg scas int3 pop clc ds mov data16 js inc or test mov inc sbb dec ret fcmovnbe daa mov (bad) ja ret sub ficompl mov pop rep add inc (bad) lock lock and inc mov dec and adc cmp push xor fsubs daa push mov sti push dec dec out subl pop loopne pop jle push movsb hlt and mov cld (bad) (bad) mov or cmp bound cmp pop xchg (bad) lret jne or in loop (bad) enter int cld sub lahf (bad) insb jp xlat xor pop push incb lds hlt out mov mov das out (bad) rorb loope addr16 ret pop inc out fistp dec inc jae mull rcrl cwtl out jno xchg ret push sub pop fs (bad) sbb or jmp fmull add mov ror mov (bad) jl sub add sahf lea sub adc mull add sub and xor jnp pop xchg pop dec xor loop orb push xchg dec ret imull shl jp std push lods dec push clc iret loop pop (bad) and and bound popa lods push popa rorl in push mov dec cmpl xchg add aad dec divb and pop dec scas mov lcall fcoms pushf (bad) dec aad push or sbb or rorl xor repnz adc mov dec enter jmp sti sub repnz xlat push jle rolb mov sbb and fcmovb add ret rorl icebp and push cmp shll sbb and icebp jg insb fs pop clc (bad) stos dec std sbb xor sub out or das fisubl call sub mov pusha pushf lds cli xor pop adc jmp inc push loop inc sub push mov faddl not jno int3 fcmovne dec lahf mov fcompl push mov cmp js push mov push mov push mov out out js jmp sub dec push or imul adc mov call hlt and adc or sub jmp sub mov test icebp sbb cmpsb mov push mov dec scas mov push pop push (bad) jb adc cmp int xor leave add pop or and fcoml push pop adc cmp ficom jle iret mov jp add push (bad) jmp push mov cmp jno dec mov xchg cmpsl repz or adc iret call push jge push xchg mov (bad) jmp faddl stc push pusha adcb shrl scas insb push cs (bad) cs int popa cld nop dec pop xor push lods lcall sub out dec mov (bad) add mov pop test xchg rolb xor and add mov insb lods mov (bad) mov jl or jmp ret push repz and imul mov out push add into cmp sbb fild pop cli inc push adc dec sti f2xm1 sub push loop stc pop dec std xor push (bad) pop in sbb mov int3 daa jmp mov xchg outsl pop or mov cltd xchg add inc xchg and jp fstl sub ja out add jnp inc xchg inc nop add pop stos or (bad) jp lret jae xchg push and jge and inc leave add rclb mov mov add dec push mov xchg xchg aaa mov mov pop dec lret sarb hlt js inc push lret sub mov push mov cmc in dec or stc add loope mov push pop pop xchg (bad) or cmc test mov or stc and xchg or push mov xor popf insb sub in jns and pop xor in xchg sub xchg dec inc and sbb or sbb fwait (bad) or jmp faddl mov add mov test mov dec addr16 mov fsubrp (bad) jp (bad) inc pop xchg out daa pop pop je jp and in pop dec out dec adc repz xchg stos nop sub insl fstpt daa pop rorb and mov pop sbb xor idivb cli and (bad) aaa add jo mov adc push sub and push mov jne fbstp sub pushw jmp add bt not dec cld pusha mov fcompl enter jmp or dec (bad) imul outsl les xor mov dec jp repnz jmp sahf or or jl inc xchg lret movl or xlat mov mov add mov pop lods add and dec shrb shll mov mov sub xor add jo dec roll cmc jl xor jl (bad) insl and adc pop pop add aam push xlat stos or dec cmp repz mov cmc mov test cli mov xchg sub push jl inc sbb adc sub sub sub jge in cld mov jmp outsl dec scas (bad) (bad) out mov sbb mov mov pop in cwtl nop loop jnp repnz sbb push out cmc fs push pop fcmovbe fstl adc or jmp movsb das and sbb xchg xorb push aas ljmp mov dec sub movsl sbb sub imul pop in inc daa in push outsb sub push sub pop add idivb push dec das lock arpl imul add inc jne add mov adcl cmp and push pop dec lret add or movsb ds mov arpl ds push mov es fisttpll xchg jp leave inc xchg bound and (bad) xor rcll jp jp and shll lret push add mov mov cld sbb push sbb ljmp or mov add xor iret test movsb and xchg (bad) jp fs in cmp pusha scas cmp int popa lock icebp das lock push xor lahf pop lret outsl daa je (bad) mul (bad) icebp or mov (bad) (bad) int loope sti or subl inc pop pusha rorl adc cmpsb and cmp pop (bad) cmp xor sub and mov jmp cmp in xchg add cltd orl mov neg sbb sub adc mov out add (bad) jnp stc cwtl cwtl pop or push sti and inc sti xor pop or sub fucom add pop out inc and add push mov mov loop test popf or mov lret out (bad) arpl and mov pusha cltd cmp inc or push add inc sub mov ret cmpsb dec sub out (bad) push jmp mov pop sub xchg push (bad) mov add cmp std dec sti or jne loop xchg pop pop lea push pusha cmp mov sahf or daa int3 cli sbb mov dec jmp jo mov (bad) es aam inc or sarb scas jnp cld dec ret inc sahf lret jg mov jmp int mov aaa cmp out fxch lds std jo dec xor mov jmp addb xor adc or decl je jo mov outsb xchg sarl lods test adc imul sbb push bnd cmc shlb or shl arpl mov neg xor stc pop data16 shrl stos iret mov cmpsl jbe fbstp pop mov cmc mov dec sti ret inc das out repz (bad) mov mov push sbb mov cmc jmp jne jecxz fcomps and push jo xchg push insl das adc mov adc pop push (bad) mov xchg and aad clc add push add fwait neg js jmp cs aaa pop inc push cs jno fcmovb mov imul sbb call push das pop or movsb push dec jbe popf cli test jmp icebp inc lahf jmp fnstsw pop outsl ds mov jo or into mov lds push push pop mov inc das sub out push push in icebp movups mov mov dec out (bad) nop or xchg xchg push neg mov (bad) outsb fbld jg mov cmp mov incb sub or pop aam jns and in and clc (bad) push aam out inc testl jmp lock sub mov mov push das std xchg std test lret jmp stos lahf pop dec adcb (bad) stc pop dec cs aas adc mov in shrl sub imul add add mov lahf test adc pop add jmp in cs xchg (bad) cmc out out rolb mov or lods out xor dec aam test lods imul in ficom ds sub mov pop cmpsb and lds xor fisttpl (bad) cmp js jge pusha outsb test sahf jge pop imul ret jns les add inc or leave sbb out jnp stc insb xchg xchg sti daa and std dec push mov or hlt jbe jg mov cld daa add adc mov jno dec or cli pop lahf dec xor sub add fldenv pop mov mov (bad) enter dec or or sti or add inc push and test pop (bad) popf pop jp hlt popf loope sbb insl or orl pop or jnp add nop aaa or sti lea js dec inc mov jl,pt xchg mov jge dec sub add add push dec jmp (bad) add stc ds jp pop mov cmpsb mov lahf cmp and or sub sbb jae sbb repnz pop mov jp hlt lret test scas enter dec jecxz (bad) pop sub mov mov jge mov js and mov hlt xchg inc loope scas imul push xchg sbb xor cmp adc dec push orl push and mov add cli push jmp (bad) inc mov pop cmpl out sbb stc xchg fiadd or pushf pop add or iret clc adc je aam mov hlt lods mov and add xstore-rng cmpsl (bad) mov dec cwtl mov in push dec fldl arpl aas or mov hlt adc clc pop stos iret pop and mull addr16 and push pop pop push mov jnp out enter je lcall cmp push add inc jae mov lahf mov js adc outsl subb push cltd mov movsl es (bad) adc mov out lret push pop daa icebp rorl daa jg (bad) dec stc or fadd inc fidivrl adc std cmc cmp dec es xor fcmovbe add mov shlb pop cmpsl sub ja jno or adc dec inc movsb sbb mov test sti int3 sub mov leave pop sub lock aam outsl jae jb pop xlat or inc ret icebp (bad) mov sub pop push std push mov mov sub clc xorl (bad) js dec add xlat add add push movsb pop sarb push xor jecxz sahf jle cli daa (bad) jge mov jge aaa out xchg lds gs in adc inc dec pop into fwait jae rorb cli add rorl or add repz cmp prefetch or dec loop fisubl dec add mov sahf xlat ljmp shlb push mov sub cmpb inc inc shl dec ja mov call sti clc mov inc aam jo sub sbb jns push or aas sbb add pop sub out (bad) shl push psadbw cmp xchg jp sub int3 (bad) pop add pop sub lock pop jbe sbb xor stos push jmp push test mov (bad) push stos inc sbb mov pop xchg mov pushf addb (bad) daa jbe cmp adc or add add cmpsb pop push push fs cmp push add cli add lcall dec je in push aas push jmp cli icebp and cld sub lcall push jno loop pop ja pop and inc jns add aas lret pop insl jp add es jo dec inc pop in in ljmp sub es and sahf adc xor in and mov pop ud1 popf adc fsts fild or or jbe pop sub pop adcl xchg fimul cwtl and mov push mov mov mov push popa nop shrl add orb loope cmp (bad) jne dec mov sub les cld es lods xor or int3 inc push int mov jmp hlt lods rorl add shl mov mov xor push xchg sbb (bad) or push cmc (bad) push mov adc mov sbb fldl pusha cwtl add out pop pop xchg adc mov in test inc pop sub adc push mov mov pop push mov std and cltd cld imul mov sub mov mov mov sbb mov leave icebp scas pop mov testb sub sub push sub pop mov bound pop and cmp sub clc and xor ficompl cmpsb std pop push mov push pop fcompl push pop jns mov dec push dec xor pop out jge add and adc push psllw sbb push inc jle push push inc aaa outsb test imul divb (bad) ds fiaddl jmp mov adc dec cmp cli mov xchg sti push jg adc sbb aas dec test jmp out mov fdiv sbb (bad) mov pop and ds popa jl mov sahf or out (bad) lsl or sbb or sbb dec sub scas cmpsb loop rcll jns sbb (bad) fmuls lds push and pop push clc insl dec ret jmp pop sub (bad) repz push (bad) dec (bad) mov push adc dec fucomip sbb inc inc adc or lea int jmp ljmp and inc jmp push notl pop hlt and clc jp cli xchg sbb jae mov adc enter push fstpt add sub ret ret mov push dec (bad) inc pop mov push push movsl testl imulb negb ret and mov icebp data16 mov pop add inc addl jmp adc imul popa jno repnz xchg cld rcrb fnstcw int3 cmp push pop in mov and fs fiaddl pop shrl add mov and les xor dec xchg push (bad) movsw lods mov adc inc shl fldenv push and mov xor cwtl cmpsl cs cmp push fs leave and hlt dec sbb dec cld mov subb jecxz mov adc in inc sub add or inc out ret add mov clc icebp dec mov jae push push mov das mov lds xor out inc sub lret push js or mov mov sub xlat xchg ja pop jmp xor mov add adc add mov mov push sbb xchg enter pop rorb cmp lahf mov loop sub jmp sub mov mov mov out (bad) adc mov nop mov mov sub fiaddl or aad jmp inc jno pop ljmp jo dec fs mov xchg sub insb lahf and sbb push stos ret push data16 adc pop loop push inc cwtl pop pop jmp aas and fs popl fimull xchg fsts stc mov mov aas or imul out xchg push push repz cmp pusha and mov faddl xlat or sar enter call dec or cmp jnp or or mov mov sbb jo orl pop pop loop pop mov xor stc mov jecxz es inc xor das push scas into (bad) mov mov sbb inc jge bound and inc jb nop cmp popa jmp enter xor or mov dec or (bad) fsubrs cmc lret inc jmp sub shlb das sbb pop enter sbb pop xchg scas push add cmp popf push and pop cld arpl and pop rcl jne xor mov push je outsl subb icebp or (bad) lods mov adc ret cmp repz in je pop cwtl or add mov nop call mov xchg push jb leave idivl loop test clc aad outsb notl jbe leave (bad) xchg fstps sbb mov jo push mov stos inc inc jl mov loop jg lahf add xchg and sbb push push jmp loope loop push cmp xor out mov mov push sbb pop outsl (bad) iret stos mov mov insb jge push add (bad) out shrb dec adc jnp fwait xor add push mov pop daa ja push movsb sbb icebp dec jmp mov jmp pop test sbb (bad) sub fldenv push push push mov push mov add push sub jmp adc ret pop or inc push mov out pop adc or push cmp (bad) (bad) add out sbb sub iret mov js pushf pop xor push movsl cmc fs nop mov mov pop mov out bound jae aam add pusha mov sub pop xor xchg lret or add mov pop and xchg dec in xor or out add jl adc shrl shrl test xlat cmp lcall xchg gs jne sub xchg mov sti add add or (bad) xor cmp pop mov jp orl sbb pop jg sbb hlt jge xor shlb push shlb cli scas repz and dec push mov or jmp push xchg pop std inc es mov mov push push mov sub imul dec outsl dec or push je sbb cmp mov mov jmp xchg sub xlat sbb movsb push lcall xchg popf test pop mov call add add xchg mov push leave xor sti or stos fs in inc imul adc loope xchg scas pop popf xchg jp daa jmp sbbl int3 (bad) fisubr jge hlt repz jbe mov jbe jecxz pop lea ss add add mov lods clc and push ret scas and ficoml je aaa inc or mov fldt lcall cmp mov ss pop xchg cltd mov paddb dec nop adc add rcrb sbb push xchg pop out imul ljmp add orl stos push or mov outsl add dec loop add sarl push jnp (bad) or and cld sbb sub add cmp ret sarl addr16 std or dec scas fstl out mov lods push push das sub sub movsl idivl mov push aad pop mov cmp fcomps cld and xchg int3 out (bad) adc nop xchg jmp dec aad pop data16 adc jbe adc stc pusha pop addps das nop or pop pop lds inc adc jg repnz cli fiaddl pop call in or pop mov fcmovnb lods push lods push add outsl jmp jl cmp push mov jle xor add int lock mov dec xor pop imul sbb aam xchg icebp pop pop cli aad mov dec adc bound enter dec push mov and fadds pop pop push dec or pop xchg aas sahf mov or add mov inc jmp dec sbb mov push jg pop stos pop mov andl sub pop and rcrb imul in sti into sbb sub pop ficom xor add pop mov stos negb repz mov outsl adc push mov push sbb jl shrl jg roll imul sub jb push pop inc lret fidiv out inc mov or imulb add mov push push mov xchg mov mov mov mov inc xor dec subl scas mov gs add enter jne loop jno icebp call icebp jmp pop imul insb lcall fstpl add push jns xchg sub adc lods cwtl stos xor mov sub and sub jmp adc pop data16 jbe int mov notl das jnp and sbb cmpsb imull (bad) jg pop add scas adc popl adc pop or and add stc (bad) repz aad lea push into cmpsb mov pop inc push sub adc or xchg loop jmp mov stos cmp push sahf push inc xor ret sahf or movsb push mov jmp push jmp jle inc mov dec pop test mov xor addr16 icebp jle sti mov sub inc sbb mov mov jnp and jecxz adc test mov hlt or (bad) sti idivl clc cmpsb mov aad jmp mov and punpckldq js xchg or or and push xchg inc addr16 lods sub aaa inc (bad) sti cld jecxz out push add jbe mov in adc push icebp cmp cmp std test jg int loope push test ret adcb dec ja push cmp loop (bad) jmp and test out push push adc dec orb jge repz enter rcr sti outsl dec lock push test (bad) hlt rorb xor pop inc adcb and cld mov jmp mov shll or pop movsb dec push pop out aad clc lret adc dec push stos xchg cmp cli pop daa cmp cld (bad) bound add jecxz sarb xor pcmpeqd addl jge adc stos pop pop (bad) mov sub addb loope cs add inc inc dec mov sbb mov pop ja jne jae inc push mov mov dec xor sti outsl pop push inc push pop cmc pop int and pusha cmc sbb or jmp lret punpcklbw mov popf frstor pop les xor adc pop mov sbb jmp mov std mov out pop adc push into jl lods sbb cmpsl fadds dec les and cmp inc adc stos lret inc lahf jmp jle jp push or push test sbb inc addr16 cmp aad jb xchg in inc pop cli cmp jmp clc pop push test fimull mov add in fchs dec aaa les inc and je mov inc cs in xor lods sbb dec or arpl (bad) repz enter push cmp pop mov and mov ret cmp jns sub (bad) ds xor add push cld int aas sti data16 push fxch pop js sbb leave stos inc lods call adc xchg movsb sub or push std adc (bad) cli lret repnz add sahf adc sbb cmc adc lea mov add mov jmp lret ret pop out bound (bad) jne sbb movsb inc test je test cmp ret lea cmp (bad) jmp lret xchg hlt push pop or int cmp jl pop or push mov scas lret movsb pop pop push into rcrl les xorb mov add pop push std dec out adc shl ljmp stos inc or dec pop outsl push or xor pop xlat lock inc jge jns gs push icebp add jecxz mov push repz mov sbb imul pop mov mov insb push leave xor pop jmp push mov pop xor dec rol pop (bad) test cmc adc les lret xor ljmp xor add add gs jmp in pop (bad) mov pop call cmp imul mov aad lea mov leave data16 lret cwtl in in add adcl xchg mov pop enter lahf (bad) and cmpsb add test xchg mov int3 sub cli (bad) ja sub pop sub (bad) loop clc jb add xor sub jle fcmovbe jp daa cwtl adc push add (bad) xchg mull or sub mov mov loope das fadd mov imul push mov scas imul pop loopne mov and insl orl dec add pop jb dec pop rcrl adc or test das push sub call jmp cmp bound pop xchg lods pop leavew pop push aad stc add push mov sarb add lock (bad) js loope add ds paddd psubb sub xchg lock add mov (bad) in dec dec mov mov insb lds xchg popa les (bad) mov out add push mov and jge dec or push fs lods mov mov pusha cld add push mov or sub pop pop decb add jp in pop jns dec dec push arpl mov mov js or jmp loopne mov out pusha or cmp xor rcrl xorl pop scas inc imull push inc or out pop stos rdpmc and add ss add push or and mov inc sub pop or les in test cmp cmp jmp in mov out movsb in insl or sbb sub sbb cs push mov fcmove cmc jp mov jnp inc push push je es dec clc leave test je xchg popa mov inc test cmp test mov sub (bad) or pushf xchg add cmp (bad) add (bad) mov push addr16 sbb push or fldl shl inc jl or jae xor xor pop test es mov xor aam lret scas jnp in daa repz in sub sahf xor mov push pop dec pop stos and or push adc sub jne aad pop sti sub xor mov jae jg and ret dec push inc fistpl scas jo mov jo mov mov sar push push add sub out sub push mov sti mov push jp inc daa scas adc mov (bad) xor popa int3 dec add cmp fildl jecxz add shr push pop sti dec inc mov xor sbb cli pop in add and xlat incb lods clc loopne xchg (bad) (bad) in xlat dec mov sub mov repz cmp add and sub push das sbb in sub fnstcw gs inc outsb or cmc xor mov mov inc sub imul (bad) hlt lret add mov pop rcl push jno and stos rorl popa and jns outsl into pusha jb push add int3 je addr16 (bad) testb sub adc mov and frstpm(287 das jmp push or jge out dec add jns mov push mov lret (bad) leave hlt ret out pop jecxz dec cmpsl inc ret not sti push cli pop cs sbb test pop (bad) icebp pop jge (bad) clc scas fdivl or push jns das jne ret sub ret ljmp ret fnstcw and inc pop popf inc pop xor scas call push in cmp dec jl and adc shll sbb mov jmp mov repz xlat int call inc cs out add dec add jmp (bad) adc add int3 testl (bad) nop add (bad) arpl call mov iret mov pop cmpsb outsl dec mov loope stos sbb cmc push jmp push in and xor jo dec or cmc cmp and test in mov cmp leave cmpsl dec mov popa mov mov xor add cmp inc ret xor mov adc jb mov add push mov jmp add adc nop dec mov and in testb dec pop das xor jo xchg repnz jg cli sub stc pop inc fsubl push pop pop inc dec mov add popf cli cmc popf in adc jmp lds adc push lahf jo or inc pop fldt lods leave test incl and das (bad) out stc dec xchg cwtl inc es je push sub je mov in mov xor lahf arpl sub sti iret das jecxz leave pop add pop xchg fidivrl inc out xor addl add test inc push lahf aad popa rolb int3 sub pop das cmpsl loopne jmp add dec out and push enter push mov push mov mov xchg xchg outsb fldt pop cmc and xor mov mov add pop not mov iret into out push out or add sbb inc push cmovb stc push (bad) jb fwait ja add adc lret xor popa ffreep out pop out cwtl pusha jl adc lods in (bad) dec push add sbb xchg adc mov cld push dec mov loop jmp es pop inc jno add xchg push xor add dec jmp lock push jno dec and adc push in mov stc (bad) mov aam inc push mov push push lret dec push adc mov inc (bad) orb dec adc fsubl and push mov sub lahf sarb (bad) fild dec pop clc pop mov std (bad) cmc sub (bad) cmp dec add loope frstor dec in mov loop inc mov add mov and xchg sbb xor add mov roll push push mov mov (bad) fsubl gs adc mov psrlq out movsb loope icebp repnz scas sbb push or pushl das div into popf dec jmp push cs out in pop shl lahf arpl push out dec xchg xchg mov inc iret dec (bad) jne dec dec mov in aas clc xor xor push (bad) icebp push stos fwait pop icebp and (bad) pop jnp lods or out sbb push scas or in add add stc int or mov mov (bad) push inc adc (bad) mov (bad) popa pop test pop jecxz pushf sub inc leave mov xor or push mov icebp or pop jle mov push jge ljmp cmp mov sbb cmp cmp or sti adc inc xchg xchg xor adcl test inc add sub shrl cli jo mov mov lods add push or jmp dec sub mov add push out incb mov add sub (bad) mov mov fcomps jae jmp push push push xor popf ja jp jno rol push and loope lods (bad) faddl ret jmp or push mov pop inc pop sub and add and xchg popf push imul sarl push or mov push mov int3 pop adc lret maxps push sub pop or dec mov lds push lods (bad) rorl pushf pop jne add imul xchg test and sbb mov repnz push add adc push sub gs push dec adc jo popa imull inc jno je add sub nop xor adc mov repz pop cmp iret push sub inc and sbb pop roll mov and jle push mov pop shr dec mov pop lods add and sub cld cmp mov jno imul pop nop inc inc lods pusha pop push rcr or jecxz sbb es jecxz ret push ds neg xchg lods cwtl das insb jge push pop outsb jae shrl adc fdivrs xor add lods push mov jmp call xor adc sti in add sub pop lret jmp inc push mov dec (bad) das orb xchg cmp lea icebp mov push iret lcall xor push pop pop lock mov cli mov lock or fs orl or lock (bad) scas xor pop push ja lds jmp inc cmp xchg ret or mov adc pop inc ficomp shlb stos mov add aas cmp jl add add rolb jp jbe aas add test push dec or out daa push (bad) jmp mov mov movsl mov xchg xchg jge sub gs and clc jmp xlat dec cs mov sbb adc inc pushf push mov test clc das stos dec push pop lock xchg out loop sbb repnz mov dec sub mov xor push loopne outsl inc faddl sub pop jge in call add xor xor aad lods add jmp add hlt pop pop xchg negb test mov lret sub mov xchg dec add cli adc pop cli imul jle jne out ds dec (bad) (bad) adc std mov sbb jle push push lock add jge std add mov pop loopne mov enter xchg not mov mov daa xor fadd les iret mov in add inc sub (bad) mov testl mov and mov in dec dec jl or jmp jnp xlat cmp mov add pop div cmp cli aam jmp lret pusha jne jo push or popa dec inc adc push mov cwtl call xchg mov dec mov popf pop cmp cmp pop lahf push jle test mov inc aad pop jmp mov ljmp mov dec mov mov xor aaa mov jge cmp sbb (bad) lock xlat fmul mov jl imul mov cltd (bad) dec (bad) scas sub pop mov in test mov inc cld adc dec or stos push mov inc or xor mov cli jno fs in cmc loopne jp dec dec sbb or ja movsb pop inc sub push ljmp jg push (bad) push or cmp pop jmp adc sub xor adc xchg dec out add int3 std leave inc insl push mov push pop les rorb mov dec dec mov repz inc sbb rcrb add dec mov jg jae dec xchg out inc add mov cmp pop dec mov test (bad) adc clc inc pop mov loope mov pop inc lds mov pop mov mov add iret mov jl into not cmp mov mov lret mov push rcrb jmp inc neg jmp xchg mov adc cmp dec jmp and mov cmp inc push fmull mov mov aad out enter jbe push scas or inc sub stc mov rol jmp mov and inc mov inc pop scas js jmp mov xor out adc mov adc or lds push dec mov add fldt lods pop or scas aam adc outsl xchg out add aam test and push leave push test jmp pop mov sbb ret sti xlat add inc call orl and mul or and stos mov test in add lock mov mov jp test (bad) mov mov adc sub add xchg add in inc mov cmp sub jecxz ret ret pop mov and pop in adc mov divb xchg lcall popf pusha in dec shrb and gs loope mov pop push and dec test sahf push and dec xor loopne push pop sub int3 fistl mov push pop push mov fstpt pop rol push or sbbl pushf in dec push mov mov adc mov mov push test jmp scas fs call mov pop add iret or or adc jnp push lds mov add and hlt pop jmp pusha lock jbe jnp jo lahf (bad) jmp sbbb jmp pushf stos dec push out push nop lods ret rorb enter inc push pop test loop jge and mov shlb pop or clc adc mov pop jle call icebp pop pop xchg add leave or lret inc or xchg lods jne and (bad) nop push inc js pop stos xchg dec mov jmp ret sarb lods mov sub dec inc inc test mov nopl push xor dec test mov (bad) jge fldl jae mov mov jl xchg cmp outsb xor out sbb js cmc and cmp flds xchg jmp (bad) aam add fcomip fisttpl or lret dec mov cmpsl mov mov or mov fisttpll jecxz call aaa cmp fbld pop leave aam popf icebp inc cmp sub loopne call push repnz jmp (bad) jmp (bad) cltd mov sub and pop out ljmp push ss int xchg lret inc lods popa cmc dec mov (bad) icebp in xchg std xchg (bad) (bad) or push pop jae or push sarb rorb repnz (bad) xchg inc gs adcb add sub movhlps pop lock out or xchg cld jne (bad) jnp movsl inc in sub sbb push mov dec add not andl movsl addr16 push sub out xchg lret cmp inc jmp idivw jle xor mov leave fisttpll scas into aaa dec cwtl loopne inc movsb ds fiadd repz jmp adc cmp das or in les xor sub pop addr16 pop loopne jmp dec jge jae scas fisubr rcrb in sbb outsl aam scas in mov xor sbb add mov and jmp out jbe mov add xor xorb enter lahf daa add repz cs pop or fstl das sub and xchg add push pop dec pop jge fcoms jle add sub rolb push sbb sub add loopne out int3 out pop add popf imul ljmp mov inc cwtl ret push add test fwait jne push adc and or adcl bound in sub jmp cmp fiadd sbb jle dec fldenv or xor or xor data16 lea xor add add mov imul les adc jmp and sub int and and or add add nop stc fistp jno or (bad) adc dec adc xchg adc xor mov add push mov xor or pop jbe and jne or add mov xadd push mov xchg xchg or (bad) or push lret leave or sub dec fadds out pop adc pop and sbb sub or adc push arpl or sbb arpl or cmc or and sahf push lods loopne push pop in int3 (bad) inc sahf adc pop cmpsb xor ja orl xor xor dec add popa add xchg add sbb or adc or bound push add or cmp subb sub and sti mov and in (bad) or lcall push add dec aam mov xchg shrb add bound les aas dec push aad or ljmp (bad) sub xor and xor add outsl and and test and and and es xor bound or bswap stos or adc in in jbe push add push xor or daa adc dec xor adc movsb xchg cld les loop or lock sbb dec add add call pop push mov lods icebp xchg sti inc xchg pop push mov aaa insb scas in inc sbb pop or es or mov clc rolb xchg mov pop pop not push push shrb aaa xchg xor lret mov push mov loopne sarb rorb pop or jo dec mov mov cmp lds pop inc movsl and or jmp push add ds out push xor rcl xor mov dec xor or dec xchg sbb test jg add call dec sub das sbb or pop clc dec shl xor fisttp add imul or pop dec pop push lcall adc jnp int3 inc add sbb pop (bad) dec aad subb mov jg mov dec jmp repnz dec mov fistl push fimull rcll test push cwtl fisubrl dec xor xor in test pop div push test mov pop sub insb xor dec mov push sub mov adc mov push movl or aas pop aad add sub stc inc pop lret pop ror ficom loopne push mov mov push lea out mov inc movaps push cmp xor or cmp xlat dec imul stos xor xchg jns lret dec sub push ficompl adc aaa push fisttp cwtl daa iret loope adc jne inc sub mov insb lahf mov jp mov cmp pop stc shld stc mov jne (bad) dec push mov fiaddl fstps pop push shll lcall jb dec sbb pop jae fs lret push sbb xor repz jmp jl add lcall adc dec fs or loop mulb mov jno push movsl push arpl xchg or dec push decl cmp add lret ret and movsl loope test ret push push ret push cltd inc ja cltd inc dec inc mov outsb std cli jmp out adc enter arpl cltd mov mov push in test lods add leave push test mov (bad) jb or push push ja cmp pop push mov inc ja,pn and xchg adc push orl in and or daa gs (bad) test mov xor sub rorl rorl pop inc add inc test jbe push pop popa shlb jge dec pop push inc inc mov repz push insb aam nop cmp pop mov jb mov cmc push or push rolb pop je add xor adc test mov repnz or addr16 outsl inc pop sub inc mov inc or xor repz gs daa jne or aaa aas out ja or mov xchg pop daa or adc mov lret cs sub inc push add mov in cld lds pop dec cld jne (bad) sub mov jae dec dec add in ds ss fwait dec ljmp mov icebp push mov mov dec inc sarb outsl cwtl sub bound pop xchg cld enter fist add test sbb std addps push cmp mov jno (bad) pop cmp lahf (bad) push leave push into int xchg and xchg push mov iret pop jl ja inc jb rcl sbb call in (bad) jae js adcb pop ljmp repz xor xor and mov pusha mov rorb mov sub push incb das pop addl sub cli inc aaa sub or ja out sbb stos jg das or lret or jmp test imul push loopne es cmp jno jae dec imul rclb xor (bad) xor aam inc pop push pop decb xchg enter das lret movsl dec out and adc push xor orl pop les push mov jp rep mov push sub adc xchg add xlat cmp sbb insl adc scas add outsl adc scas cmp ret nop sub icebp jbe daa push push shrd sub push inc push sub inc add and pop pop adc push stc cmpsb mov push data16 rolb mov adc push stc inc pop push fldcw add cwtl fstpl out out lock jbe addr16 mov leave enter sub or dec mov dec xchg or push sahf or and inc fsubrs push dec pop push cld inc ja add dec dec cmpb jo aas ja (bad) clc out stc jecxz add cltd inc in dec and (bad) or lods cmp out insl pop add or cwtl pushf dec cltd scas mov loopne push jmp sbb sub lods sbb jle std jo dec inc dec mov add popl push pop dec loopne daa daa mov lcall stos aaa inc sub add inc push mov or ljmp xchg ja push fiaddl rcrl fdivrp leave fistp mov push mov add call push mov rorl sub sub xor mov shrl lret cmpsl out push push inc sub add cs add test bound in add arpl and cmp xor lret js int cmp xor int popa adc mov pop pop ret or (bad) frstor jno or mov inc ss je cmpl adc lcall inc fwait adc lods add pop enter jg mov pop push imul or call mov jae loope fs inc popf cmp (bad) and imul mov pusha pop cld outsl inc ja xor xor lahf cli cmp mov and and sbb lcall xchg in pop sarl dec js imul pop icebp movsb ds jo cmp xchg or roll push (bad) leave jmp dec icebp pushl cli mov mov jne test or sub aad sbb adcb in pop sti add add pop sti or std inc testl xchg fsub add push jo sbb testb ret push sahf lcall mov inc les jno jmp xor and ficompl push std or mov clc cmp (bad) cs sarb mov pop cld nop imul sub pop add or or or mov inc pop shll xchg xchg xchg push lahf and xchg xlat cmp push cld call in hlt add dec sbb push adc mov add popa mov xor lds mov in and push adc icebp push sbb push mov orb retw mov cmpsb sub pop sbb dec or gs adc add mov or dec cmp popf jno and mov sarl sahf in ss jmp iret mov add cmc jg (bad) xchg outsb inc into inc arpl dec inc add gs out int3 adc repz lahf add xchg popa in movsl mov leave lods sub push sbb lret in mov fildll xchg pop adc pop clc in push in (bad) loope push repz inc xor or pushf sbb mov push sub mov jecxz dec loop cmp jmp mov sub push sub aaa and mov (bad) sbb iret lds mov mov sub lds loopne fsubl stc mov xor and inc jp rclb xchg leave pop jecxz add shlb and jb pop sub sub add clc lahf inc or fcomps loopne push mov mov inc dec hlt fistp int push fwait jmp ljmp add cmp lods jnp mov inc mov or pop pop nop xchg xor movsb and cli push cmp xchg cmpsl js cwtl dec xor rorl push dec insb add imul mov push mov aad hlt (bad) stos cmp or out push divb add (bad) push dec stos test sub dec (bad) (bad) mov add push jns or shlb and rclb and ret push dec pop shr and (bad) dec push inc psllq jae or ret fisubl (bad) rol mov cmp and pop add push (bad) dec xor cwtl add pop sub add ret and ficom out lods ret lds xlat pop adc push shll data16 cmp sti adc mov push std mov jbe daa jne outsb mov (bad) and dec xlat xchg popa and push adc (bad) loop lds pop and jmp dec (bad) popa and js das push je fwait xor pushf pop inc flds es add xchg or pop inc push pop test sahf jmp xor (bad) dec and sub mov cmpsl jo lock push fucomi (bad) fbld nop divl dec cmpsb add jmp adc or loope add nop hlt pop dec sbb add sbb adc out jge cli into inc sarb pop jl jb push incl pop add fs jp shr or mov mov jne xor add sti add push sbb mov aas arpl or jle dec pop or pop call movsl adc subl jb add fwait mov and mov jge dec test fistl fs mov xor jp sbb pop orb aaa inc adc in jl xchg (bad) or add addl aas loop pop xor or rcll pop mov sbb fdivrs nop inc add sub pop adc jge (bad) inc or add push push push jnp and lcall cwtl cmp xchg mov xlat in xor jmp pop aad sub (bad) cmp ret hlt mov push ljmp sub int pop imul mov inc (bad) test jns mov out jmp ret stc jae (bad) jle mov bswap (bad) push dec mov enter imul xor std add xor test add cmpsl sub ret sbb iret stos inc out lret jg jmp pop push stc inc dec in push or fldl es lret gs scas inc popf icebp xchg (bad) jecxz aad pop getsec sub test pop pop mov mov mov push popa cld sub adc popa int3 sarl les xor out add repz jp fnstenv rorl or or sahf orl adc cmp adc dec sub sub mov mov clc nop xchg push lret push lock loopne in adc xchg mov mov cwtl ja pop sub jbe add mov dec neg sarb add daa aaa int pop jb js (bad) nop outsl and es jge inc cmp lock push repnz xchg xchg notl jmp inc add gs loope clc pop and cli adc in mov and push outsb xchg dec or pop bound pop test orb addr16 or jmp das enter pop inc fs mov pop fnstenv mov adc sub and leave mov add popa bsf add loop jmp mov aam hlt add ret mov and add jmp sub ret sbb es sub imul or dec das xchg pusha test push sub sbb dec xor or rol or sarb loopne cwtl cs aas add (bad) lock sub repz rcll and ret imul jecxz pop push jp lret aaa sbb fdivs loopne push add incl add xchg ret xchg aaa fcomps test loope mul stc stc sbb daa sarb icebp loopne test and push add imul adc mov lds cs xchg adc pop push cmp (bad) std es pop addl push pusha inc out les push mov mov add push adc dec jmp leave push jmp jmp inc addr16 or inc les imul stc sub popa mov or test (bad) mov (bad) repnz push push mov fidivrl (bad) sub sarb aam adc inc in insb and (bad) or and sbb repnz movd pop jno add push push fisub jge sysret dec rclb jne adc rorb sub xor inc add decl mov pop or adc mov xchg int push mov sub scas inc mov push lock pusha mov icebp or stc push xchg push mull xchg mov mov add push push pop jl ret jmp add loop inc int sub xor xor xchg imul push movsb dec incb pop std mov add cmpsl jmp into add adc das xchg bound jns int3 sbb push js sub mov pop push stos loop sub sbb in enter mov cltd (bad) fdivrs imul sti push or jo or jmp jle ja cld dec loope test xchg or sbb pop notl bound fnsave stos cld pop add or jmp (bad) gs cli int3 mov subps sti adc pop popa daa into or pop or mov loopne pop xchg cmc add mov mov sub jecxz push loope imulb pop push fldl cmpl xchg (bad) xchg xlat add cld vpsraw xchg lret iret push andl xor dec out jmp sub xchg sbb adc add cmp sbbb xlat cs movsl sub (bad) and jo test orl pop lret jp jmp enter repnz jp mov dec pop mov sub subl sub movsb pusha sbb in adc jp xor ljmp nop addr16 mov jns add hlt in adc sub ror jmp ret test sti (bad) js in test fistpll push call pusha push mov add iret jle jmp push jbe fiaddl test add out and jg or dec scas daa jmp mov mov sarl mov mov pop test mov mov repnz cwtl jmp or sbb insb pop xchg cmp int cwtl cmp adc inc repnz sbb js daa xorl cmpsl or in add push leave cld xor xchg adc sub adc adc loop movb xor sub (bad) sub das fcoms and xchg ret das add outsb sub mov push adc ss dec add sub and jmp imul inc mov and mull enter mov jns jge fld lods pusha and leave sub dec sbb push mov rorb fnop cmp mov sub mov add insb jmp out dec addr16 subl add and gs test insl and testl pop fsubp gs mov pop lahf jp add mov xor jmp jg xor or inc inc in ret int3 jbe cli insb dec adc mov or xchg cmpsb imul pop imul or xchg push xchg mov jp inc and out sbb jg movsb orl fucomip mov xchg out push mov das sbb aaa (bad) sub cmp (bad) repz outsl sub (bad) stos dec mov push mov call mov pop dec add inc adc js das pop shll mov ficoml cmp sub pop rcrl in loope mov jo stc inc in mov xchg xor cs add inc xchg mov push mov lods pusha lock and sti jbe or pop dec (bad) jns xor mov pop out int3 subb fcoms push inc dec sub sub std es fcoml or push dec outsb lock jno mov push add rorl stos insb lock sbb jo pop xchg cmp or call pop mov cli xor inc pop mov cltd push aad push test lea push popa faddp jo inc ret push mov bound jbe ds pop sub mov push out cmp jmp jmp or mov xchg cmpb sbb mov inc push shrb or push add xchg rcrb push adc xchg add lret cmp dec push xor or fs add mov addb sub out aam cltd pusha enter jb dec push sbb fs dec ret jno or jnp cmpb push lock add ja and push dec cld or pop (bad) loopne and es mov mov push out dec sub adc shrl enter (bad) sub add pop add bound out mov push pusha dec jbe enter pop (bad) xchg popf or clc jno cmc inc bound push dec (bad) ret mov in ror push jno pop or xchg add xchg pop jg push pop fwait insl mov push and cmp popa xor lahf dec push je xchg out outsl in sbb jecxz mov or push dec dec inc mov cmp push and or mov jmp or xchg ljmp pop mov dec mov and adc xor pop xlat icebp out jle and aaa imul sbb pop pop pop clc inc mov cmc inc ret lods cmc xor in jno dec fistpl fistl into mov and das ficompl inc add pop or ljmp es push adc (bad) enter push sub mov xchg adc push iret scas cmp out or fisubl inc jnp xchg out lock loope cld push icebp push push push mov add bound mov inc shll or sub pop insb enter jmp hlt out mov xchg (bad) pop push outsb adc stc dec adc (bad) imull daa mov ret inc cmp inc out rcrb pop xor clc mov (bad) lods push ret shl dec jg int3 pusha mov mov inc scas in les sbb dec or and sub xchg xchg cmp mov mov xchg xchg stos and push fsubs outsb push xor popf dec cmpsl adc add jmp stos jmp push ljmp and jp sub cmpsb inc inc push xchg push and inc ret andb sub das cmpsb or push jg inc sbb adc and (bad) (bad) mov sti jge and push ret sbb jecxz hlt add jo dec push (bad) insl loopne cmp jo popf push mov mov or or pop pop add enter mov pop dec mov inc mov xor jnp rolb sbb gs iret dec std aad dec (bad) sub xor test jne mov xchg inc sub pop push pop (bad) cmc inc jmp pop dec pop add jle dec push out cwtl icebp sub mov xor sub cmc add or pop mov pop add insb or inc and sub in mov pop aaa sbb jmp ret cmp sub pop not push add push add inc sub jmp or push cwtl sbb push aad in notl push iret sti adc inc (bad) and test pop xor push jmp mov fistpl fistl loop fldl mov stos push push add sub jp jnp cmp and or (bad) jo das (bad) gs stos push jmp add pusha es aaa pusha hlt sbb mov sub fadds xor pop jg cmpb jmp int or sahf or jns mov xchg ljmp mov (bad) fisttp mov jo ret outsl fwait popa popa loope mov and adc adc (bad) test add pop mov dec cmpsl add in xchg (bad) and sti or xlat jns dec mov xchg jne inc jmp outsb adcb jne sub add loopne pop sub sbb popa pop dec das hlt sbb rolb add add cmp cwtl sbb dec inc mov es jg or shrb mov loope sub aas inc js mov sbb fs adc adc fs sub js or cmp loop xor pop scas dec test shr jb (bad) xor xor or jg push push sbb mov es repnz lret adc stc ret call sahf pop pop xor xchg int fs or es iret inc jns sbb push xor xor mov pop repz pop mov or mov xlat jmp repnz jle dec cmpsl adc (bad) sub or push push mov not add shl dec out mov subl ja add jle mov xor test jp add mov add loopne movsl adc dec jmp out stos push dec xchg aad test and rcrl jmp pop or adc ficomp ja adc xchg inc inc loope sbb rorl out mov nop repnz push addr16 je jo test dec sub pop mov adc push mov push inc adc vpcmpeqw inc ret mov clc and add repnz popa dec mov push push ss fnop pop add (bad) out (bad) jne pop jae cmp add mov nop dec and dec jmp jge sbb in aas or adc imul sbb (bad) cmp sub dec (bad) jmp idivl pushf pop adc ds lahf push push cmpsb pop sub add test je or sub cs add sbb xor lcall andl cmp int push xchg cli shr movsl notl push xor push sub pop add (bad) test pop sti mov push pop pop push xor xchg loopne push push stc jo mov in push sub add lahf and rorb pushf int add mov dec loope inc outsl add pop push repz push push inc push leave jmp mov mov push mov loope jle je (bad) hlt pop mov xlat in dec xchg jge inc inc or (bad) and xor push test loopne push sub outsl fmull shr xor push or ror stc je scas add cmp and inc mov jb xor sarb in test push loopne rclb into cmp mov (bad) sarb out shr pop pop daa addr16 jmp insl and pop in faddp adcl ret sbb stos xor in fidivrl rcr add mov jg movsb add ds adc xor xchg popa enter dec pop xor jmp sub hlt rclb inc adc add loop test xor stc jb sub inc and aad cmc out xor jl and mov mov or in ljmp jmp in add in cld sub rcrl fxch aam mov insb xor xor push push push dec adc inc cld mov inc (bad) add push cmc out test dec add sub cli orb dec xchg xchg jno push mov push pop jmp xchg xchg add bound mov adc cmp fs mov dec push mov pop or xchg push adcb jmp push and or cmovbe add or or fsubrs rcrl out sub add mov mov int3 push xchg sbb pop xchg pop or xor idivb inc icebp lods mov push mov and clc jbe leave sbb popa fiaddl add lods popf inc lret xor jne sub add movsb push push add sub dec push mov dec push dec pop push add push test jmp push pop mov xor cld int pushf (bad) movb or ja pop in add pop jne jnp add add pop pop clc fnstcw push push pop das popa or cmp ja lcall or dec fucom enter mov imul sub int verr and pop pop sub dec dec dec xlat cwtl lret inc pushl shr sbb pop or and xor mov or jbe mov xchg or loope pop loopne vmovsldup repz sti xchg cmpsl lret inc jo lahf jnp in ja rcrl dec in dec dec or push or aad or add push jbe les mov into xchg fs fildll add xor mov mov pop repz clc xor cs inc push pusha test or and dec push inc mov push jl bound scas push mov jns rorl jae or push shlb pop dec cmp add sub pop in push push or (bad) pop adc pop sub orl pop mov mov or jmp int3 lock pusha dec mov xchg add clc insb loope push ss cmp and and test ret test or adc push adc mov cwtl test mov add andl mov pop lret sahf sbb or push ret and sbb dec add pop stos insb test jmp pop jmp mov jnp push cmc scas lock and sub negl (bad) sbb in adc and popf fistp xor mov mov jns lea push out jno mov mov add or mov sub in (bad) xor adcl xchg mov push rolb ljmp mov jecxz dec mov jle shrl mov fimull call sub or jle and xor mov add scas sarl and add xchg clc cmp in jnp add dec nop jmpw jecxz,pt jg insb in xchg mov int3 and push mov push popa mov push mov cld leave add insl cmpsb xor lea pop lods ss xor out daa mov jns ret push sar jl sub jo in ljmp mov sub in (bad) jp sbb pop mov stc jbe adc and hlt cmpsl loopne mov inc and sub subb in (bad) mov les jmp ret je jmp cld jo push mov push mov jl imul pop lds mov adc add and jae pop dec inc dec stos push adc mov fsts jmp mov push mov mov mov or cld sub cmp xchg (bad) push cmp and xor adc push inc xchg movups add rcrl inc inc adc and inc call rclb jge push inc jne pop adc clc test test cmp pop adc sub pop and sbb jp xchg iret das loop add test movsl jg cs sbb test pop mov push pop int insb jmp push cmp rcrb sub test jmp test fwait sbb jle mov push push sarl ja xchg shl stos loop mov das pushf inc add inc mov or ds jbe sub insl imul stos xor mov cmp int3 cwtl es push push or and stc (bad) in shrb pusha ret int3 imul xor push push jp sub sub sbb dec addr16 daa ds js mov cli jno ljmp call shl or sbb das cld dec pop mov sbb or les cmp pop pop push popa add cmp mov jbe sbb jle outsl sub mov push jne fnop jge loopne es lahf push or inc incb jmp stc outsl out dec xor insl inc ljmp ror rdtsc movsl testl xchg aam incl push xor mov jle (bad) ja mov push pop mov sbb sub fimul or ficomp out mov xchg pusha push mov loopne jo stos pusha push push adc (bad) jle sbb cld adc xchg daa popa repz add dec jne outsl outsl mov loopne jg add add fmull jo (bad) sbb cmpsb push mov paddsw dec cmp lret (bad) cmc jg icebp pop les scas shrl inc fadds dec outsb ds dec test and pop fwait pop cli popa xor sub test insb add lods sub mov pusha lret jl xor pop and stos lret push and jo mov cmp imul pop pusha in xchg mov dec push ret pop dec mov dec in push dec mov and (bad) or push cli cmp test mov dec mov cmp adc add mov fnop or inc jb mov dec shl addb cmp pusha pusha loop not iret or leave ljmp pusha dec sub or repnz (bad) adc jne (bad) adc cmc jp adc stc xchg sbb out pop pusha mov xchg fsubrs fsubrs hlt xlat lcall jg dec (bad) aaa xorb push inc sub push push mov add fdivs xchg add jns adc pop mov rorl cmp int inc in jmp stos nop push test and push sbbl mov pop sub imul dec or inc xor es lret mov inc push pop lods sahf adc inc jae movsb out add jnp pusha cwtl ja leave dec aaa das ss shlb sbb dec das jmp sub cld xchg dec add fstpl ja cmp or sub adc cmc fisubrl pop push icebp jle pop pusha pop mov pop push sub lcall mov pop sbb jp dec testb push fiaddl sub scas ds (bad) xorps and test test adc ljmp aad (bad) cwtl and xor and ret push dec pusha dec rclb jmp dec (bad) sub sub push out sbb cmp imul insl lret jmp inc js and in add push daa inc jmp jns jge aam mov pop push adc xor or mov popa icebp jmp add pop pusha push test bound data16 arpl repz sub push adc roll cmp hlt stos mov (bad) adc add xchg loop pop xor adc mov cmp push jno inc mov jmp push mov sub (bad) xchg jo mov test aaa enter add jl lds push daa out xchg cmp int3 (bad) mov mov orb jecxz lds and add scas and jmp jl inc dec push loopne jmp bound pusha jmp pop clc aad pop xchg test pop je dec mov add adc out add sbb adc data16 cmc sub daa jle adc sub mov mov pop (bad) je push add and push cli ret adc fs les jne loope fnclex or jns rcl push adc pop fcompl mov push adc jle iret add pop pop and pop inc jmp mov pop xor adc jno rorl cmc adc pop pop stos mov push (bad) mov push pop pop pushf mov lds jne add insl mov mov inc jmp xlat jns imul sub xchg mov (bad) jmp or adc or pop jb pop call mov loope push rclb cs cli and lahf sbb jmp adc nop mov cmc jnp xor arpl sub add ret (bad) cltd pop pop sub icebp mov or jbe das inc imul rorb add xor add jmp popf xchg mull cwtl and mov dec sahf lret pop jne mov adc jge mov stos aad jge into pop push mov cmp rcr lcall ret (bad) imul insb dec push xchg fwait pop mov mov dec add mov repz rcrl mov sub inc dec enter sub fldenv push leave mov adc fisubr mov dec neg add or pushf cmc xchg out clc pop ret fcmovbe push add daa pop jbe cvtps2pi dec inc loopne or pop mov cmp dec cli lret out sbb xchg rcrl movsb jnp adc push adc in out xchg jge in push adc cltd inc lods ljmp mov fstpl pop not nop xchg add andl test icebp movsb cmp cmp push xchg fbstp push add dec and mov outsl inc in (bad) lret mov inc mov fistpll and loop dec sbb mov cmp test push mov insb fildll pop push loopne pop push dec mov xor jge jne int3 pushf adc fisttpll test test lods jo xchg pop or xor sub ljmp roll dec add subb mov scas cmp inc sub push sarb das and pop or ficoml jg dec push mov mov dec add loope add out push push neg subb dec jns out add fs mov (bad) lock stos out push mov pop mov iret or sub push mov movsl or mov push cwtl mov gs popa xchg pop dec xor or push (bad) in gs mov pop push mov data16 (bad) repnz and mov pop dec fnstsw test ds jo outsl inc dec ficompl lock popa or pop sar or test dec lock movsb cmc add adc and negl sub xchg push rcr push cld pop xchg or add push (bad) std xchg cmp add jg out call clc or jle xchg or pop std sbbb imul and mov (bad) call scas shr test jmp mov jmp (bad) std xor jo hlt cmpsl and push jmp leave push mov push pop mov arpl push (bad) mov aam mov push not inc stos pop adc lock ss sbb in or icebp sbb fldcw push and sbbl dec clc cmp adc fcomps out push inc in addr16 jmp sub push adc (bad) pop pusha (bad) hlt int push xchg inc push arpl fimull (bad) (bad) out mov aas insb xchg push jg adc int3 adc call call push mov or or mov loope xchg cmp sbb stos push inc cld sub ss lahf lock cwtl daa sub ja pop dec xor repz fs ds daa sbb pusha call dec cmp jecxz les scas xor leave out cmp ss andb movsl pop bound lods xchg pop sbb mov sub inc jmp (bad) or jle (bad) push mov xchg fidivrl cwtl or popa sbb add sub out mov leave inc stos mov push lea stc push xorb sub lcall push push push jle inc pop cli sub inc push aad ret shr mov pop daa jbe push push dec push xchg iret inc adc mov dec out ljmp xchg or pop rcll leave (bad) out and es pop pop or or adc and sbbl and mov push pop mov shrb je push loop jne or pop add into mov addb and cli jmp or popf push insl stos ds add flds or loopne push sbb dec pop int3 sbbb pushf (bad) xchg mov das xchg cmp mov jne mov mov popf push inc sub and jae and or inc xor jle daa sbb (bad) sbb cmp outsb push mov cld xchg outsl mov or enter and ljmp jno sbb popf je jmp insb dec inc xor mov push fisttp mov push std pop rorb sub mov xor and dec add xor aaa lret add faddl cmpsb imul adc mov push or addr16 fidivl cmp jecxz rcll (bad) sub dec mulb out sub roll mov push pushl mov fiaddl mov push daa mov mov xor dec push push adc or cmc mov cwtl test loopne lods aam jbe enter xchg cwtl bound hlt movsl mov adc lock push mov mov and ljmp xchg adc cmpsl lock out inc mov sub push add (bad) jg rorl add sbb xchg (bad) push aam push dec in inc and pop mov sub xchg insl in (bad) or xchg pop push and stc imul rolb ret pop scas lret inc sub popf cmc push aaa cwtl bound push jge arpl push xlat inc bound jl and jge ja push dec add scas adc sbb imull loop mov sbb and push jmp mov push ret pop jmp jge inc ret negl out pop (bad) xor lcall add fwait or pop cld dec xchg std add pop rcrb rolb ja pop aad fwait sub jmp and (bad) fcmovne js lahf lret les cld in les jne inc adc mov pop pop pop pusha incl roll or js in or jnp (bad) (bad) dec in shrb popa inc ja das popf adc pop lds test mov inc in imul clc stc dec insb movsb or adc sti in add xchg sbb icebp popa pusha add pop push mov (bad) push push stc in push scas imull or imul jle aas testb lret adc sub pop cs adc jnp int3 jmp jns pushf push (bad) into cltd adc icebp mov cmpl inc lods sti add xchg cmpsb inc js and xor pop (bad) movsl out fidivrl (bad) cmc mov jmp lods adc or push and loop sbb push roll and jne pop push pop lret repnz or sbb int3 mov pop pop mov inc adc push pop aas pop loop sub dec add cmp xchg repz xlat pop je xchg (bad) dec or add inc rolb mov leave call nop (bad) mov push cmp fisubrl movsl mov nop clc loope or fidiv not xor sub loopne ret jne das add mov mov pop out pusha or xor ret jmp xlat into aam insl (bad) shlb daa push adc and jnp cmp int3 push sub jl inc jmp xchg mov pop xchg nop scas repz idiv popf (bad) mov push fiadd adc stc pop sub std stos mov or loop fsubs cmp es popa ret add (bad) notl xchg imul pop push mov jb inc ja jo xchg jge push aas movsb lds mov push (bad) and and jp sbb mov inc sbb in out jl jmp pushf add jmp leave pop lods push sub sub mov loopne add and pshufw cmpsl stos lret sub and ss (bad) adc pop mov out add pop cmpsl jecxz cld test or mov pop scas mov jle mov dec pop std mov jne dec adc add cmp jb xchg fsubr fwait or out sbb dec (bad) or cmp das push push dec and rorb dec adc add jno fisttp lods dec repz cmpsb icebp push xor dec mov pop inc or push (bad) adc jmp sbb bound shrb dec ror lods mov (bad) cmc push (bad) and mov inc inc rorl or test sub mov adc push or and shr not testb enter fisubrl add adc ja (bad) mov mov pop mov popa mov sub cmp jo xchg stos mov mov subb out adc ret loopne mov inc lcall dec xor neg cmp (bad) (bad) xor add ret ja adc into mov xor mov int leave add movsl int3 add stos ret pop addb push jmp fldl xorl push push loopne mov pop ljmp decl (bad) shrb out xor push add inc lcall (bad) jne jnp rcll mov push dec dec ret dec out jno mov xor hlt mov or sub insb mov cmpsb call jp,pt neg xchg jno mov mov rcr or mov xlat out mov adc outsb movsb lahf in mov dec lods sub mov mov outsb pop cmpl js or mov sub or pop fiadd lar pop jmp jae xchg dec mov jmp and pop add push jns xor jno pop add xchg sti mov fwait adc mov add pop pop fisttp jle or add push sarb mov rol icebp adc or jge cld cld ficom mov shlb jmp (bad) fs push xlat pop in test dec icebp pop jg lock add loop ret inc flds sub out jp sbb notl movsl jle pop mov sbb cmc mov inc jecxz inc insl and dec and pop pop inc xchg cmp (bad) dec test adc jle pop xor orl adc adc pop inc jmp mov in neg add outsb pop pop mov push add and xlat xchg inc aad mov (bad) adc out and jl push inc js push imulb push push (bad) pop dec jbe or pop pop fcmovne jmp (bad) dec movsl push aad cltd add xor or add pop xchg rolb sub incb add push or test or push fwait inc xchg add and ljmp push lock jne inc inc add out cmp sbb cmp jne cmp cwtl sbb cmp shll and add ljmp push jb cld ss or adc or or add stc mov sbb ljmp insl jl mov fwait imull inc jl out scas call ja push add push das sarl or push imul ficompl fist mov lret pop sub rolb push adc scas sub lock push lret mov jo cli aam jmp ret sub adc lea mov add lock xchg jle pop pushl mov popf and push cmp fldt sbb or inc (bad) jecxz ret mov dec loope or jbe pop pop and mov mov fimul in adc push imul jmp popf (bad) mov adc loope sub pop loopne je sbb sbbb mov mov xchg (bad) test xor adc or pusha das scas push lret sbb rorb cmpsl sub xchg rcr and in push stos lea mov or jle icebp adc inc cli scas mov sub push pop and dec or aam ficompl adc mov hlt mov or loopne add roll sbb adc mov inc push faddl push push xchg mov ljmp negl adc inc rol push loop inc jbe mov dec mov cmp adc sub repz iret movhps adc mov xor pshufw mov dec push mov dec and cvtps2pd pop iret mov push sub cwtl nop inc xor orl or cmpsl xchg pop dec out add imul dec cmp cmp lods cmp and dec jmp mov inc jae cmp mov imul pop (bad) (bad) or repz xchg in adc scas xlat sub (bad) fnstsw add sbb sub clc push xchg nop pop call add jp jl push or push jmp adc icebp pop das icebp inc das mov (bad) push ret inc sub xchg or dec or xlat test lods mov add mov sbb sub incb cld clc in repnz push mov cmp mov shr or (bad) sub push (bad) sub xchg push mov cmpl outsl add fsub sbbl pop cmp lret adc cs out rcrl jns movsb xor mov std pop dec add call or es xchg dec cmp testl orl repnz push cli or jo and fadds xor dec mov pop jg shll mov and ljmp test pop mov in xchg cli or fild test cmpsb xor pop mov rol ljmp or je insb mov or sub jb movsl mov dec mov nop jmp add mov popf add push jmp cli cmp xchg lods jnp inc pop stos sub bound xchg add or aad mov test mull fsubrl sub inc push inc push leave loopne repnz mov add mov jmp ja inc imull in ljmp loopne or mov xor jmp mov jge adc pop pop (bad) or daa mov dec lods ljmp xchg pop sub loopne lret xlat adc add subl aam add das ret mov pusha push arpl (bad) (bad) cmp pop mov (bad) in loope add int3 pop xorb dec adc lods push fnstenv mov mov stos mov jnp fmuls dec ret xchg or fdiv pop outsb pop dec add adc or or push in add lret sub push push mov push xor add sbb popa fdiv mov neg dec cmc clc mov addr16 and add inc ja add adc lods outsb adc lods and cli rolb adc dec push rcrl jbe mov fisub mov add (bad) ja xor nop js push jge andl rorl xor sub xor dec sub adc mov lret repnz loope outsb call lret dec pusha loope pop fildl mov lret scas cmp pop mov jno pop jle scas daa mov sub pop bound sub xchg jo lahf pop iret push call dec sbb aaa jae shrb fiadd in mov jmp pop jle jecxz sub aad inc (bad) out ficomp mov stos (bad) add cmp and add add mov xor movups inc (bad) shll shl ret jbe inc ret xchg push push inc sub and adc push sbb add ljmp jb cld xchg adc mov push push jg pop std mov inc adc pop movsl push imul inc sub (bad) sub fwait pop shl addw inc xor std xorb (bad) adc nop adc test adc sbb das fcmovbe das mov add adc fucomp or mov dec mov cwtl pop add loope fidiv out pop and icebp jmp add mov push add negl jge adc (bad) and mov in push loopne adc (bad) loopne dec sbb adc imul pusha or pusha inc and or push sbb inc jl push xor out inc ljmp inc lock dec xor push daa push or in movsl inc xchg shlb out adc xor call mov repnz movsb inc cmp cmp push mov pusha loopne or xor fmuls pop pop lahf add xor lret push xor jo mov push mov cmp daa push mov add mov sbb push mov xor pop not jne pop out add jmp aaa jecxz pop test shrb pop mov cmp (bad) jle pop xlat stos or jmp xchg sbb sti fsub cs pusha pop (bad) popa popa and jle jl and adc add stos jo adc pop ja xlat push mov (bad) xchg adc push ljmp das lods push repnz pusha aad add ljmp test test mov incb rorl xor inc stos lds dec frstor ds push inc jmp push jg push iret bound dec jl mov movsb aad mov test inc test (bad) push sub jp dec or outsb sub jle push fistl cmp dec lock pop test adc add mov dec mov insb ja repz xchg stc lock shrl outsl jmp mov jp jo mov pushw add lret pop mov rcr movsl addl (bad) call lds cmp mov out adc adc loopne gs lods leave (bad) jecxz sarb mov mov cmpsb add fldl2t xchg sub addl and divb pusha mov push idiv cmpsl or je in mov mov mov mov repnz mov (bad) push in add les add mov pop add cli pop and pop scas fadds mov xor adc add in popa mov push xor mov pop mov pop clc sub setbe lods xor leave add imul add adc push mov push in or adc adc sub pusha or lock push dec pop cld pop lods jns adc jo xor mov push or jne xlat xchg mov or ljmp insl xchg and in cmpsl mov clc ljmp pop xorl xchg pop fisubr aad fwait jmp cmc jns or mov bound jge testb jnp clc and in dec mov push out xor repz xchg loope sbb xor jmp cs pop lods adc cmpsb mov xchg imul (bad) pop add mov test jmp jl das movsl clc push lcall add fisubr rcrl out mov gs jmp xor leave std cmpsb or add jmp lock mov icebp or mov inc push sub imul scas add int3 sbb jle inc loopne and movsb adc pusha ja fistp inc es je or push mov addl inc cltd (bad) mov jge mov lret mov ja lods andl mov inc or sub xchg iret dec insl add cmp gs cmpb mov and xor inc shrl lock xchg mov pusha ljmp mov and and mov adc or stos or mov xchg lret sub or cltd add popa mov ja push push mov add aaa pop push adc and mov push pop pop movsb aam xchg dec (bad) lds int jg push fs adc or add xor sub (bad) sub pop xchg icebp lahf or stos mov sbbl fcomps mov mov or jmp outsl or into notl mov pop dec and iret cwtl pop dec inc pop test arpl sti add adc loop enter add es inc loop and or jl sbb vcvtsd2si add loop pop jo cmp ljmp mov ljmp jge jb xchg rorb sbb pop clc pop bnd sbb test jno dec pop jmp test lret arpl push push mov (bad) (bad) outsl movsl mov sbb test pop xchg iret pop mov cld jmp ja pop add rcrb sub call fs mov jg adc into sbb roll outsl mov add push mov (bad) in (bad) inc movsb add xor cmc pop pusha in cmp and call in and pop arpl xor daa lret scas pop cmp add lcall dec out jp pop push sub test mov mov mov mov sub jns add mov rcrb add mov mov lds push add push add ja ficom adc gs mov sub inc cmp leave test inc (bad) iret lods movsl dec (bad) repz mov sub scas xor popa or inc jg cmp add ret cmp cld jmp cmp cltd lcall push pop fiaddl and int3 lods xor dec jno cmc or jmp jmp addl insb pop pop inc not icebp in fsubr pop test add pop sub sub add xor pop and in lcall scas rorb fisubr rorl test mov (bad) icebp push add lods cmp cmp xchg ja mov jp cmovnp and je or mov mov lods clc rcrl repnz out fdivs dec inc mov cmc ljmp shlb jns mov mov push insb std sub pop pop loopne push push xor xchg jmp in push scas lret add in mov lods rcl pop shr subl xor (bad) popa (bad) aad mov xlat popa and add lods dec sub rorb jle js jnp add ja mov (bad) ret jbe imul dec daa adc pop lcall sbb imul pop push sbb push mov cmp cmp cwtl xchg add ret mov stos sarl add lock inc add mov xchg xchg les jne shll mull pop les test mov je and and cmpsl cmp fwait sahf iret push xchg cmpsb icebp out push imul jnp cmp loope in insl add rorb jmp loopne jle mov jmp mov lahf mov rcll xchg and pop ljmp push mov adc es cmc popa mov xchg daa loop out cld imul push jno add mov into mov lds lds call sbb dec sub jo fildl and adc push sbb icebp xchg adc leave mov sbb (bad) dec es jmp mov dec push jecxz enter (bad) inc leave (bad) cmp ljmp enter inc fs dec js dec jmp sbb pop adc shll fdivrl jbe pop fucomip adc add cmc imul jae dec sub lods push inc mov jae pop add pop push (bad) jmp cmp mov rol call daa jg ja outsb stc pop or out shr cmp mov xchg in lahf fnstsw popa in bound and pusha addr16 add sub push jo pop add pop jmp lods or pop cmp and repnz or inc push dec and mov push cmpsb push xchg mov and pop cmp jle cmc es or xchg and movsb in and add fucom rcll hlt aam cmp xchg push inc push inc push dec jmp inc push jmp xchg int roll jp xor add loop mov push cwtl push fs inc movsb sub add add into add mov jnp cmp lahf clc out jp das xor lret or adc cmp and (bad) jns dec inc fwait dec movsb roll cmp lods faddl test adc pop stos add cmpsb mov pop in xchg (bad) push or dec and push adc ret movsb and xorl xor sarb mov push push mov or pop pop pop cmpsl js cmp aaa jp adc push cwtl sar notl lock and gs in cwtl les xor mov ds out dec dec scas push push sub sti int clc mov fild sub sub and sbb push xor push cs pusha sbb and cmp pusha mov and adc mov call out daa cld push jmp push mov push rolb pop push add adc shll jmp into ret push jmp sarl cmp push ljmp or vmovntpd mov push in jecxz adc and lea add aad in add xor outsl ret adc sub arpl sub jno out roll lods inc lgs addr16 (bad) push lds xor jmp pop inc (bad) stc jne or daa out packssdw ja rcl mov clc xchg xor lahf insl cmp mov pusha sti mov rorb xchg mov mov sbb add pop add pop sub pop ja jmp pop push mov adc mov lret pop jmp pop and push cli push pop je iret shr sub test push jmp or cmp imul sub ficompl or lods jns mov mov cmp jae push nop pop and jmp jne add xchg inc fwait paddb call icebp in scas repnz push (bad) dec and sub sahf mov lret pop jbe pop jae subb bound addr16 add or hlt push cmp jmp into dec push push sub (bad) fsubl or inc shl ja dec cmpsl and xor add push add push mov dec (bad) fistpll pop sub imul inc inc pop aaa outsl rcll add xor ret test pop movzwl pop push enter push push inc push mov ret addr16 mov cmp ljmp lods inc inc iret pop push add sub movsb jno jl pusha adc rcrl or aas pop loop add mov out add imul pop cmc rolb in mov add mov add xchg sub push lret push stc inc out jnp in sub pop and shr loop fcomps pop push push push and add pop repnz adcb insl fistp es mov (bad) add jmp xor dec pop scas xlat xor test cmpsl lock add jmp and scas mov adc adc js dec fsubs cmpsb sbb sbb xor testb jge out mov das rorb jo jge rcrb fnstenv push pop xlat nop adc adc mov lock push fstl push mov and insb das pop pop jnp pop mov jns push jg push jmp orb sub sbb or push xchg adc sub negb adc out jmp push and (bad) fsubrl stos push dec (bad) jmp dec pop pop (bad) and insb xchg jge mov jp jbe add dec loop inc (bad) and in js mov mov and cmp repnz das mov inc add sub mov (bad) mov xchg add lock push pop xor jae push mov out and push mov sub or push ss jp jnp mov xor cmp add std push ret xchg repnz add fwait xlat jmp je adc lock sub push push mov pop push mov cmc jnp add (bad) repz inc shrl rcl loope sbb sbb or cmp (bad) mov sahf inc adc sub cwtl daa std sub int (bad) lahf mov mov mov and xchg add adc push out or cmp xchg cmpb pause sbb sub icebp call xchg dec jmp push jno lea fnstcw pop push aad and xor cmp mov dec fcomi dec (bad) jle mov mov int3 push mov dec xor jmp rorl mov sbb lds mov xchg lds add add xor sub ficompl scas pop jge arpl push mov pusha and pop xchg out fnstsw jb cmp es dec inc jne movsb out dec (bad) xchg adc add push sarb daa out sbb push in imul cmc push sub inc out gs push adc rclb xor inc pusha insb add je dec mov (bad) cmp scas add sti hlt (bad) lods in mov movsb je daa push pop push fstpl cs insl dec push or out pop mov rorb sub in xchg jbe adc popf push call cmp call xchg and pop mov ficom pop bound hlt fnstsw pop lock xchg or pop dec idivb pop rcll arpl mov xor cs sbb push pop cld add jmp sbb dec xchg xor push ficom inc pusha jg aas pusha dec xchg popa mov mov and lds mov sahf or imul mov cld repz movsl xchg mov mov xchg (bad) cmc outsb xchg add divb pop jmp out lret orb sbb lea loope adc in inc sub push imul sub sbbb inc jg test mov add mov movsl (bad) das fiaddl iret cmp pusha lock fimull mov aas ljmp pop dec addb add push icebp xchg jmp nop bound pop sti sub push mov subb xchg ret jge dec in dec cltd sub lods aas mov push dec and cmpsl xchg test jg xor insl ss (bad) stos mov divl in sbb jb push or xchg cmp jg gs xor fidivl inc push popf inc or jne jne or push popa push jmp lock fwait jl dec mov push leave cmp jbe inc xchg inc sub sbb mov add movsl stc mov add add cmp cwtl add loopne ds inc cs add ret push mov popf mov or and shrb add dec and push adc rorl test jge xchg sub add ljmp mov xchg and (bad) pop das clc ds mov or lods fadds inc cmc pop push push icebp pop xchg imul jno jl lahf int3 rcrl int push cltd push cltd push push inc mov fnsave sub push jmp push add outsl add rcrb adc add push add imul sbb sub mov les aad xlat jb jecxz inc inc out aam pop call sbbb ja push jmp movsl push add int3 xchg sahf shrl sub lods (bad) mov (bad) mov inc push jle and jnp sahf jle aam jmp dec adc add mov out inc (bad) xchg pop mov inc test xchg lcall stos cli jecxz lret pop fld gs (bad) xor push sbb xlat inc pop jmp lods arpl pop adc xor push mov mov sub adc lea mov loop es scas pop out or and mov dec pop add dec (bad) pop scas add jge enter push ljmp roll mov or mov pop sbbb scas insb push dec loopne sarb popf dec cmpsl nop nop sub mov and mov inc idivl push mov and adc and pop stc or sub or pop int3 iret das xor sbb xor push (bad) pop sub xchg lcall popf add sub jmp in push dec pop psadbw (bad) inc roll adc loope (bad) ljmp sub cli shr adc cmpl xor push push (bad) mov or pop insl jle push sub mov or jo xchg cmovb or mov jp jle stos or push not call or cmpsl imulb out movsb push pop mov sub adc xchg addr16 jmp cmpb enter dec scas popf (bad) popf xchg test push aad les es fs sub cli fsts ss sbb sub les insl stos cmp push movsb stos add popf inc popa decl imul bound popa push inc ljmp fmull jns jg aam mov push clc jb fisttpll xchg mov dec outsb daa and in and mov sub jo push fnop or mov cs je xor mov adc pop or and xchg jmp push inc inc push jg push sti (bad) jmp and out hlt mov (bad) jmp adc in loopne popf loopne push js das sub jmp cmp push jnp dec jg or flds cmp push xor incl iret mov aad jg movsl mov inc pop into sbb data16 dec push pop mov add loop xchg fmul pop mov push inc mov pop cmpsb inc pop inc popf aas ror mov out test stos test fimul jl cmp decb xor add sub sub jns inc pop inc xchg jmp adc push pop stos push adc pop (bad) repz push std mov or das ja imul daa add aam jp mov pop (bad) inc mov clc adc call int3 movsl ja stos out cmpsl insl xor or add push pop jle mov dec pushl pop jmp into mov xlat cwtl push mov dec loopne mov add addr16 popf rorb mov int popf lds push rclb es insb or stos outsb imul daa ret dec or arpl fwait fs inc stos cmp iret test add mov fisttp ss jecxz (bad) push push pop push (bad) add mov push sar dec daa pushl test inc sbb add push add in inc and in aas push jnp stos mov (bad) xor dec (bad) jbe push cmpsl repnz add or dec dec xor leave loope rolb outsl cwtl iret out subl mov mov (bad) mov push lret xor sti shrl pusha mov jle aaa mov mov push mov mov or js push add inc test or adc aaa fnstsw not hlt adc and jmp neg add sar mov jmp mov cmp dec jnp add and add inc add outsb mov dec mov pushf push gs repz ret jmp sti jne pusha aaa push sbb mov mov mov das adc add ds push mov mov mov divl add addb les push fisttp pop pop push mov insb and inc jnp jno mov neg inc jbe dec mov fldt punpckhbw add lret call push out (bad) push pop jno or stc ret fbstp mov shrb pusha inc stos xchg cli sbb add sub ror jbe adc (bad) pop pop mov mov mov mov xchg outsl int stos jecxz ret pushl testb cmp add or xlat ficompl and or mov jecxz ja xchg mov ret pop jl pop das sub push (bad) mov daa sbb jo and sub jg mov out jmp mov idivl xor adc push dec push jecxz push lea std cmp pop addl or jmp jle push fcoml xchg inc lds cld pop mov popf mov push shr jl imul jmp cld sub cwtl fisttp pop in mov or push test or jmp adc cmp (bad) les daa int3 hlt mov add mov fstl pop sti dec push lods pop dec mov jb mov jecxz nop lods orb jb (bad) or mov ja arpl sub push das jmp stos fidivrl push pop push hlt or sub pop xchg aam or add mov movsl and and add add jnp popf adc out inc mov stos dec pop adc add call pop leave shl roll adc xchg out lea int clc stos mov add jns adc mov in imul movsb push (bad) rep sub arpl (bad) lret pop sti cmp sbb push sub popf add mov dec add pop push outsb and push adc neg add jp in or and mov std dec bound test (bad) les daa or pop neg push push add es add test mov stos enter insb push arpl cs sbb sub dec push mov mov cmp daa xchg fwait hlt rcrl sbb loopne push mov adcl cmp cld xchg or shl add xchg loope jg stos mov sahf push push push (bad) sti add cmp test jmp inc xchg imul loop xchg scas leave pop xlat adc pop pop popa cmp in idivl cmp inc mov push inc dec push inc push and dec enter (bad) jb ja int3 sub ret andl mov lret loop loopne mov mov neg ret fcomp adc lds jne jecxz jmp mov lds leave movsl push and xor add xchg sub push mov dec add xchg push and enter cmp lods sbb rcl (bad) fwait test push test (bad) adc dec push dec or imul (bad) icebp inc inc cli ret pop ss or js (bad) pop fbstp nop (bad) rorl and pop in repz ss cmpsb xchg inc sub jmp dec (bad) fcomps sub sub fsubr repz jp cmp mov lods aas and cmp lods repz stos or push div cltd outsl dec ret in cs xor adc jmp roll or sub mov adc inc ds popf rcrb icebp cmp out dec call dec jns popf ficoml lods mov push neg push jmp les xchg pop mov or adc dec aad test add xor sub in or mov and js dec xor sub or push mov sub add mov mov push insb xchg adc daa lret das sbb movsb cmp call ror and push test es xor cmp sub adc add ret add leave sbb test sub push ds mov addr16 dec stos fild ret xchg push loopne xor mov fsubrs cmpxchg lahf icebp in js pop xchg jle ret data16 xchg cmp les mov sbb mov je (bad) addl insl inc mov sbb dec (bad) mov ret mov aam nop adc imul and or pop push hlt adc add test gs jbe sbbl cmp cmp loopne mov sbb mov add mov push push mov ja inc stc fisttp daa inc out cmpsl fnstcw loopne je aas add hlt add mov orl loope push loop sub or adc sbb cmp mov daa fabs jmp jb orb xor outsb dec mov sbb or sbb cmpsb sbbb adc push xchg sub push aas lcall fidivr pop dec fdivrl dec mov xor xchg mov ljmp pop dec arpl pushf mov loop repnz cmp test rolb mov imul or rcrb pop xchg incl cwtl in mov je or add mov cmpsb (bad) adcl mov inc stos or pop cmc loop xchg ljmp adc push rorl pop rol mov hlt mov ret inc adc add sub jmp xchg xlat add nop das or and jb add jmp add mov xchg insl dec roll mov mov fidiv ret cld inc xchg movl and out mov mov and xor sbb xor add sub pop pop mov (bad) xchg xchg clc bt mov daa or xlat or pusha ja pop mov xor pop sub dec add jnp add jns (bad) inc jmp cmc add daa dec fs test es test xchg lret jp cmpl add stos inc jg add fidiv das dec in pop add mov aaa fwait mov ret add outsb mov insl movsl add popa fcomi call cmpps adc add loop or mov movsb and or je,pn pusha cwtl sbb inc add or ret adc test test mov dec pushf add xor sti int hlt iret adcl mov and je add lock daa mov icebp hlt fisttpl pop cmp mov shl xchg repz mov push (bad) test xchg cmpsl icebp adc push sub ljmp rcrl jmp mov fistpl push jne or out add inc lret mov pop lods jmp mov or xor dec xchg cmpsl and dec mov adc dec inc and lods dec push and add push push cmp inc out pusha fwait mov cwtl adc mov and out mov in push leave cmpb add test pop lss mov jnp clc mov incl sysexit (bad) sti lea mov push mov dec rol das jne xchg dec cwtl (bad) pop mov test inc daa pop inc inc add xlat jbe aaa and mov dec xchg or push ret xchg cmp mov nop ret mov mov rcrl dec push cwtl or push push sahf out mov inc pop jae and loopne xlat mov fistp pop lods je jle leave (bad) mov push ret in sub pop xor push jle loopne fdivrl add rcl bswap bound mov repnz and daa lret mov adc into inc mov push add daa add xchg stos icebp pop aaa pop repnz shlb mov push and pop cltd jle inc dec xchg xor rorl stos loopne xlat mov pop inc incb lahf inc mov jmp (bad) lock pop stos mov sub iret or adcl ja xchg nop cmp shr push push inc outsl cs sbb push fldenv loopne mov push jmp mov das inc add nop movsbl aam shr cmpsb or clc pop or push jge mov dec fadd or test push push push adc pop cmp loop lahf push mov add mov cltd inc jg lret stos inc insb mov or (bad) and daa sub pusha xchg sbb cmp std mov or push push test sarl jge sbb xor sarb or test mov lret in cs lods je out ret leave addr16 ds adc std out mov gs stc jl pushf push mov sub mov xchg pop and mov sub fwait and inc or arpl xor cmp adc jmp add push int daa sub test rcrl repnz mov jb imul jns out add stos or push gs pop out xchg push sarl adc gs test jmp cwtl or mov inc std fisttpll mov daa jl jmp clc jmp mov dec test pop mov addb add stc push lret xor dec xor cmp movsl pop and pop loope and jne cmp and bound mov add icebp cmp xchg fadd shll sbb push add push and push pop dec mov xchg or mul mov inc jmp loope xchg xor out inc xchg aas ffree call sub inc movsb or mov insb lahf mov loope xchg repnz ljmp adc ja roll je incl (bad) testb sbb fs pop dec mov sarb inc lods push add pusha (bad) (bad) outsl jbe,pt add sub mov orl sbb jg mov mov jno lds push push icebp addl ljmp insl mov mov adc imul xchg daa mov or inc clc mov pop jbe push push mov negb push mov jbe adc nop pop add clc cmpsl (bad) xchg icebp test fsub mov mov push inc lock mov cmp mov cmp pop mov jno push shl adc inc sub ljmp mov or cmpsl lock call aam mov jl sbb testl fwait sbb pop lods cltd ret push dec sbb loopne push fwait add lret xor stos lret jle (bad) or push shrl add dec xchg mov add jl jmp mulps mov adc (bad) roll mov jg xchg mov lret leave pop mov fs add add lock jl jns sub inc scas rclb xor in (bad) aad sub inc jge pusha jp push xor mov pop movsb xchg cld cmc sahf adc cmpb lock pop jo ret dec daa adc mov mov test ljmp shrb ja cli sub inc fistl dec xor lods jg add cmp pop lods (bad) cs ret dec xchg addr16 mov shrl (bad) ss js add mov adc sub jb,pt xor jno aad inc lods mov scas or or enter popf xchg and cwtl frstor gs adc cmp pop inc xor mov dec dec mov rcr sub dec movsl or mov xchg dec mov je roll loope jp pushf sbb ret les pop mov (bad) mov sbb aas fildl push jo jbe xlat sub pop pop push push or and xor jnp adc stos gs test out dec std aas adcb cmp and dec pop dec lea stos pop rorb mov jp mov jmp jl mov dec popf cmp xor dec cli add and inc inc xor mov jle repnz jge cmpsl inc or inc mov inc xchg imul fmull push xchg loop inc mov scas or add lret aam loop,pn jns mov cmp sbb pop push add pop pop adc jmp stos pop xor sub (bad) sbb fcmovnbe imul and out dec pop mov lock movsb add sub popf outsl popa fnstsw dec cmp sub push mov mov jb shl loop (bad) hlt cmp std adc enter sbb loope inc and outsl pop or jmp out pop jo out or push cmp (bad) scas add inc jns jbe in xchg add aaa xchg lea fnstenv in mov nop jg push cld into xchg lcall dec xchg outsb mov ret pop jns addb das mov out cmp lods jge sti mov scas int test aam int jle inc psubsw xor (bad) fisubrl add lret xchg lahf in or push lds orl push jecxz (bad) mov dec out cld jge inc jl adc mov mov xor sub xor mov mov push push clc jmp xchg cmp hlt popa push xchg jns xor and jl dec sahf push inc pop and add pop cmp ja xor lods mov pop (bad) bound and lea jl adc fstpt ljmp cmp sbb fiadd inc pop mov in mov inc repz shrd bnd sti push sbb xor sub (bad) xor xor outsl rorb mov or inc (bad) fdivl sbb sub outsl add testl aas pop mov and and jbe orl or push (bad) mov scas (bad) icebp and pop adc xor adc iret push test add adc xor sbb notl imul mov (bad) pop rcrl cld jbe mov mov xchg sub stos mov lock imul sub repz inc scas jmp test (bad) stc or pop mov xor subb dec inc mov mov rolb or cltd repnz int cld pop xor lcall (bad) ja loope data16 daa cmp mov sub jg fcomip lcall lock or xor add stc pmaxsw sahf push in lret xchg loopne sbb dec cmp push fnsave dec pop imul or stc out push fldl jg xchg xor loopne ret pushf push inc and lcall push or jmp in dec adc mov xor mov inc pop out popf cmpsb jnp jmp sbb rorl hlt popa insb push mov test div lock imul add and pop mov mov adc add mov or sub inc fs mov adc inc add jl fimul (bad) push test std je adc or xor and sub adc out dec (bad) enter popa sub pop sahf or jp sbb bound dec cmpsb lret decl or dec jl sub (bad) jno dec push fs or pushf int3 dec loop and mov adc sbbb lock jge dec sbb mov (bad) aad lods (bad) cmp (bad) frstor jne push add jo push stc or or call cmp push bound push jl jb imul add add sub push dec push loop mov xor xchg pop (bad) mov jb movsb dec and or sbb pusha sbb jg in lea std sbb dec gs fistp add pop add sti dec aam lret push rclb jae adc jmp push mov sbb (bad) movsb andb push cmp push icebp or nop mov dec mov (bad) jmp jp cs ficom adc incb pop inc and arpl les push and loope push jmp jmp mov je scas dec jbe mov pop cmp push neg push mov sbb je inc dec int3 add fimul mov or es clc test ret test sbb jnp push jge in add (bad) not push stos shrb fdivrs inc negb rolb mov pop loop les jle dec test ja xchg add inc imul cltd test push xchg xchg and in xchg push mov mov or push xchg sub adc cltd cmc aas fdiv or cmp xor mov popf repnz std add inc sub jmp dec pop add xor mov push ljmp cmpsb adc sub inc insb rorl mov pop nop jg push cmp dec mov notl addr16 inc cld test jo js movb jmp mov jg or and or stos movsl stc sub push rcrb out add inc cli ss rclb adc fsub push (bad) mov rclb or and test adc repz into movsl cli mov add jb ja mov jecxz jp jno sub dec push jo add in mov pop lahf leave jbe pop adc sub add push jbe push ror js dec mov fld push mov jne addr16 mov outsl mov outsl pop in mov add xor cmp fsubrl xchg int push sub cmpb add cli push jmp mov jbe test mov int3 inc and mov shr mov iret xor xchg cwtl xor int3 fiadd movsl imul push jo mov mov inc dec xor xchg sbb flds ljmp in xor in les lods jg or push sub (bad) sti decl push pop int3 cmovns je push jle dec or lret dec adc push stos xor or pop ja pop cli pusha push mov negb daa hlt test pop notb jno or scas outsl cmp aas cmpsl shll xchg pushf sub cmpl mov js xor and jnp sub (bad) out jle add jp add xchg inc xchg sbb mov loop (bad) xchg cli mov ret jno je mov jae addb pusha mov pop xor out out adcb inc cmp mov ja daa das imul loop andb clc cmpl cs (bad) sub cs inc daa dec dec into daa mov inc sub gs adc mov (bad) mov imul inc add push lock repnz mov das dec dec in pop pop mov or fnsave test push enter cld xor out (bad) pop cmp mov sbb cwtl xor cld add fadd in push mov mov mov inc sub push mov add jmp mul push aam (bad) push dec push mov adcb push sbbb xchg jmp jmp mov sub pop mov xchg jno pop stos xor cld xor and bound (bad) xchg mov (bad) pop or push icebp and push push in pop mov mov test stos mov pop rolb xlat jno imul (bad) jmp movsb dec jle pop and insl inc ds adc sbb dec pop cmp or adc sbb add in jle fucomip mov test (bad) iret jle les movsl imul cmp or or lahf sti sbb sarl outsl (bad) clc sbb bound (bad) dec setae sub fsts int sub add mov pushf gs xchg sti ret add dec push cmpl and push cmc pusha test mov sub add movsl pop icebp xchg mov push inc xlat sub xor out sbb sub jp or sub sub pop int3 shrl fnstsw sub add sub push mov neg sbb push repnz scas cmc xchg pop add shrb adc test jecxz sub mov out das push push mov xor test sbb imul int daa pop xchg testb imul add fdivs leave test adc push add push fnstcw scas fsub xor (bad) dec xchg dec add popf adc pusha add into outsb mov push pusha sub pop popf (bad) mov inc dec ljmp mov xchg test not mov dec sbb mov (bad) push jne lea jmp jo je gs push ret lret and daa mov xchg data16 imull push (bad) ja sti fiadd mov jmp jno rcl lods push nop jae or push push inc das cwtl imul das enter adc mov xchg sub cmpb ja insl add in or call fnop add and dec jmp jae fwait add or loopne push ds sbb fdivrp sahf daa push mov test cmp or out sub jb addr16 je sub xor cmp jge repnz jg in lret ret cmpsl aam test sbb mov and les adc cmpsl mov insb inc mov or cmp mov rclb or dec xchg jmp xor aam xor inc adc jae cwtl or cmpsl dec pop inc inc mov xor pop lret aam scas pop and mov xlat rorl pop adc mov add sub mov pop aad jb pop or pusha adc pop jne lahf nop dec call xchg (bad) jmp dec mov sbb fistpll mov dec test or mov (bad) sub and ja out movsl xlat mov dec dec xor push xorl and rcr movsl xlat js dec add popl ljmp inc mov dec pop push pop mov inc xor or and dec popa movsb mov add mov loop add dec inc cli jae lret xor (bad) push loopne or and ret dec aaa sub sti add cltd subb mov push ljmp iret sbb scas push test fwait adc mov pop sub das cli dec and imul adcb mov cld mov mov call mov mov sub inc fiaddl mov clc push dec inc frstor sub pop lahf adc stos add sub jle lret jnp push loop (bad) out lret pushf and push push push jb mov out or aas sbb sar mov xor push jmp mov pop rorl movsl repnz adc dec inc outsl mov (bad) mov inc int3 outsb add jnp xchg not cwtl jmp add jmp loop mov sbb or popa push cmp pop (bad) or repz jne push les fldcw in scas xchg mov push mov push shl push add into add xchg sbb xor mov pusha inc push jmp dec jmp movsb inc push loop xchg out mov stos mov in mov sbb cmp mov mov pop add dec pop scas sub jmp dec les scas add andl lret sub xor cmpsb add les test lds mov mov mov pop mov mov das pop dec stos pop xchg clc xlat loopne stc jmp lret and cmp mov jbe or insb and loopne jp sub jnp inc add inc sbb (bad) sub inc mov stos add mov mov daa jne nop outsb repnz mov popf mov mov push pop mov cmp and jp not cmp xchg push or mov add lar jne stc or jl aaa out push or push xor sbb add popf out or and clc ljmp jg push dec sub or jno add mov movsb out in mov mov mov xchg jo push imulb repz and mov sbb cltd mov dec push int lock adc mov mov adc push fwait push add push inc and jle sub or nop sub jg and icebp jp sbb push test ljmp inc ja aas pusha push mov inc aaa pop push icebp sbb js jmp or add push enter push repnz adc adc mov ja arpl adc push outsl cltd push pusha psadbw pop mov sbb (bad) imull jmp inc orb cmp or (bad) repnz cltd xchg dec pop lods (bad) roll push incb sub push sub add jecxz dec loope gs fistl sub or mov data16 (bad) or and cmp xchg jecxz adc es or icebp add das ret jo (bad) mov pop pop std adc xor jae pop and push jns outsl (bad) mov and (bad) aaa inc sti or and mov rcrl xchg inc loope and adc lret lds push lret ljmp pop es jmp not add xchg shr mov inc mov push je add and add mov mov sub fild clc adc push sbb incb push mov xchg pop out inc rcr lods sub sbbb or call jmp inc (bad) push shr repnz and add shr or push cmp ret or mov pop or or out std inc add das clc dec adc and xchg or xchg push mov mov add (bad) movsl pop adc jnp dec pop inc aam sub ljmp jb push jo dec add outsb mov mov push cli out pop std sub rcll jns dec mov mov adc add aam sub sub fisttp into test (bad) mull sub adc dec loopne in and mov xchg popf pop sbb sti mov xchg sbb sbb dec push adc and loope xchg xor jmp mov inc pushf mov aam enter test nop adc es push inc nop insb cmc hlt addb ret decl xlat push jmp add and subb and xchg jo and or adc loop add jo scas or notb sbb (bad) mov ficomp adc pop outsb popa jg mov ljmp jo mov rol adc pop bound fildll inc sub dec push add xor adc dec inc (bad) mov rcll cmc or bound shr add or mov rdtsc fdivs jge mov (bad) stc (bad) mov jnp scas loop test dec mov pop xchg and mov cwtl xchg pop (bad) jne (bad) icebp sbb jo int3 xchg mov enter popf mov movsl (bad) sub sub stc pop shl stc shr adc repz add push insb inc (bad) push fisubr dec mov stos loop dec ljmp xchg sub push stos popa and xor pop mov pop add mov xor shr push idivb push mov cmp jmp imul mov pop mov (bad) mov inc dec jl xchg jge jo lods imul scas sub jmp jae dec cld ja jne sub mov pop inc or or jmp adc int test loopne mov mov xchg fnstcw cwtl int3 jmp call mov jmp mov push (bad) jmp mov pusha fwait xor jle inc mov lock fmull repz fs inc pop (bad) xor (bad) sub sti adc imul xchg jno mull sub int jnp sbb pop cmp sub add xor in adc stos mov aas loop adc popa sbb push aas and addr16 inc add push stos mov sub xchg mov sub dec add add xor jge mov push xlat mov xchg add sub repz and jns andl rorl cmp fwait mov neg mov adc in clc jecxz xor loop adc push pop adc push push cmp sti cld es jns leave and les cli rol mov popf mul add cmp movlps pop add in xlat adc fcoms xchg pop add sub in push clc mov pop cmc idivl das push pop xchg sub adc out movsb insb ficom adc jmp adc push rolb cmp jmp push in push test xorl sbbb imul maskmovq notl and add dec adc in or add std lret jp and mov or pop addb adc (bad) sub mov hlt jb xchg (bad) cli jo push mov nop fstp xor push jae imul pop mov jo pop xchg pusha ja cmpsb xor adc fsubrs or das sub mov (bad) in pusha and mov aas frstor scas dec jbe inc out jecxz jmp cs pop imul and fsubrs bound pop imul mov push jmp or ss mov cmp mov xchg test loopne push add mov lret sbb inc mov and cmc mov repnz xchg xlat lcall icebp out cmpsl xorl add mov shll pop cmp inc aas add and or nop xchg sub and and adc pop pusha and or les push jmp inc mov test stos jbe or or (bad) js pop shr mov sub stos adc cli add dec dec movsb daa out cmp into mov (bad) leave push shll dec cwtl mov cld jbe or mov add sti mov pop enter (bad) (bad) mov dec pop das or dec and push std add (bad) sti xor xchg jns outsl sub mov mov test mov push mov mov or or sbb mov mov fldt ret clc outsb cmp pop enter ljmp mov cld push mov push das sub xchg jg jmp shll or add fdivrl mov stc lret or pop mov push cli jne lret test not add (bad) mov inc or fldcw jno pand aam jge mov mov pop or in dec mov inc and mov or insl dec and pusha cmpsl popa out das inc xchg mov jp jmp (bad) aad cli mov nop out mov add scas lret cmovl or or idiv dec fbld add mov pop std addr16 mov push lods cmp sub push pop inc repz dec or add jo adc sbb loopne pop inc jg adc xlat rorb das jae stc add (bad) dec stos xor clc ror lcall inc lret arpl notb pop ss std dec insb imul add lock in das fstpl inc pop xor jmp sti xchg pushf inc int3 jecxz pop sub in insb sbb push dec out push xchg push inc mov adc pushf and push in and aam mov je nop add (bad) pop fwait xor movzbl push push js,pn lock push lret adc fsubs mov data16 aad das push shl imul mov mov in push inc jnp add (bad) ljmp or mov xor rcrl xor inc data16 cli sbb je nop jnp jle das std xchg mov xchg mov inc (bad) jmp push les mov xor pop jle popa push repz mov lret mov pop push rorb arpl out jge dec xchg mov cmp imul sbb dec loope sub (bad) repz lds mov push push and popf and hlt and push adc add subb jp es pop mov in pop loop ja pop popf fdivp sbb add xchg mov push aas loop xor hlt or xchg fs add out fs pop scas push incb pop xor jns and int adc lods pop (bad) test jno adc shll mull out push pop lcall or push (bad) fisub jl mov rcrb or rep mov aas jo adc jle push or mov pop jne jbe and sub or adc inc mov push jl es or in or mov pusha pop and out push and loope repz jns cld and and stos or jmp pop xor lods outsl lods idivb sarl dec mov fdivrl mov arpl popf loopne inc sub rclb in pop and xchg pop ljmp add push arpl or imul inc outsl add aad jmp push xor imul outsl movsb or push cmpsb mov or das and sub add das mov test jo or ret in push pop add mov dec xchg (bad) lock mov cwtl ss sti test push stos repnz push push sub jb int3 dec std sub pop pop sbb imul jns and mov jb mov pop push pop insb xor leave (bad) push cmp mov inc iret imul icebp out repz sub fs scas sahf dec pop pop adc pop adc ret pop mov add sbb mov add adc jl push mov iret shl push xor or (bad) dec add stos mov xchg mov add mov and (bad) xor dec push cs rcrb xorb xor imul rcrb out sbb jno sub mov push push sub or push xor jmp test lds sbb inc das pop push sti sub sub inc or test mov xor xchg fnsave push mov mov (bad) ss hlt mov hlt pushf (bad) outsb out inc imul das sub divl lret pop sbb cmp sub push push addb mov loop daa pop mov aam push mov (bad) jo and inc mov (bad) mov xchg push jnp inc int3 push sub rolb mov cmpsl sbb pop mov adc daa nop push enter xchg jbe push add add shr push fimul sub sub std lcall mov inc movsb pop stos fwait lret pop scas es push push mov cli sbb or pop and add fisttpl xchg jns adc mov jmp leave push push push inc xchg cli js pop dec and sahf das xlat adc fs mov inc vpsllq adc jmp lock rcll pop stc or jo push sub and mov mov or mov pop cmpsb or in pop es sbb push jmp (bad) xor cmp pop add pop sub add mov mov pop loope cmpb cs rcr push lahf cltd mov loopne push movsl stos mov orl (bad) mov clc add sub sub aas mov dec jb hlt lret inc mov inc cmp icebp hlt inc lds sti dec negb jge int3 dec sub clc mov pop mov jbe test or sbb inc pop push push jmp sti sub andl mov sub aaa xchg shrb lock fdivs scas mov mov cltd push js and jle add xor inc movl mov rcrl cmp cltd push ss dec into inc aaa jle or jbe mov or jmp xchg push adc or sub test push dec out xchg dec cmc mov adc testb sub fsub mov sbb addr16 jl lret stc popa xlat sbb jmp and aas mov jle inc pop sbb loop js mov and push push jmp pushf (bad) daa push jl shr jns push inc mov jl or xorb dec dec test lods sub push adc mov idivb jecxz push dec in cmpsb in sbb dec mov lahf xchg mov jge in or inc movsl outsb adc pusha inc adc inc (bad) and call and lret sbb test (bad) push (bad) jo add mov add sub push jne ss adc or and dec popf fcomps pop in adc mov mov mov dec jecxz jo mov cwtl sbb xchg jmp sub and dec data16 sub and inc lret mov test add xchg mov push push push mov and bound pop repnz push outsb xchg outsb aaa pop les gs or push or mov push test push shrb lret push (bad) add lock rcll pop add ucomiss sbb xchg xor pop mov adc add jge dec icebp test out sti and hlt push mov dec push pop (bad) mov and pop jmp scas dec pop dec lods cmp or push sub in and gs jle leave ffreep inc repz sbb and xor sarb inc jp stc outsb clc std xchg or int or (bad) jecxz fs outsb push sbb push icebp pusha xchg lcall ret mov scas leave mov leave xchg lret icebp mov dec inc sbb jne neg pop dec dec jne add or pop and or push sub popa xchg sub out and and sti roll jl mov repnz jns movsb mov sbb lods cmp dec mov addr16 jne add jno (bad) push and dec orl push mov andb pop (bad) mov insb or cmc fwait je pop (bad) jl cmp sbb add loope outsl adc (bad) insb ss mov js cmp ja push mov es adc dec call js cli in inc jns fs adc push dec jecxz dec inc sub add add pusha inc jmp cwtl lahf aam in push cmpsb mov mov xor mov mov mov dec js (bad) mov cli sbb jl mov (bad) xchg aad mov pop jnp dec mov (bad) sub jb rorb into cmc ret in jb movsb push and imul xchg jecxz out int3 insl pop (bad) bound loope rcll sahf addl (bad) mov xchg out mov cmp pop add xor jbe enter inc dec imul or jl cmp jno inc pop pushf andl pop sub pop int3 and mov push xor add xor push pop test icebp mov mov das push push push xchg fsubrs in inc insl sbb push jmp push pop enter mov xchg test inc cld sub inc sub jge,pn inc repz mov cmp adc lahf add mov clc rorl or add sbb mov nop jle adcl mov sub add jp add add jl lret or or sbb push mov hlt dec popa movsl sub (bad) pop xor loop or sbb xor jg sbb push jb adc dec call or add mov add xor or jne shll xor insb xchg dec cmp adc inc dec jmp cmp adc inc xor cmp mov ret sub and (bad) push push push xchg push mov add jmp push xchg xchg xor lock or mov jmp (bad) xchg dec mov xlat xchg mov test or mov push daa stc test pop hlt popf mov insl shl test out add adc sarl inc aas jne add popa fs pop push add gs in or add inc adc (bad) daa (bad) repnz pop or sub clc mov or sbb call cld pop fild adc or rorl cmp jbe out dec xchg mov adc popa mov dec sbb (bad) push dec outsl dec xlat test pop mov pop mov (bad) mov push andb mov or push mov ljmp dec nop add fiaddl xor (bad) fisubr lcall (bad) movsl mov add and push arpl fsts popf inc xchg and test sti scas movsl jb mov pushf jge aas stos aad ljmp mov add pop sub sub outsl call ds cwtl xor lods lret test cmp test sbb iret test mov in mov pop pop cmc mov jbe pop push inc pusha cwtl pop cmpsb adc ja adc pop cmp icebp pop adc call xor popf mov mov mov xchg clc dec adc adc out stos popf addr16 cs pusha xlat gs enter xor imul jne gs in enter xchg minps nop pop movsb std or cs xchg jns jb sti cwtl (bad) or inc insl repz test jmp (bad) adc loope cmp mov xchg ljmp jge push or sbb or push sub adc lods dec adc add mov jo or add add ljmp lret push jge outsb addr16 push pop pop jg lock add mov dec cltd adc inc adc dec adc push popf (bad) mov imul inc dec mov dec call in pop add push add inc mov outsb sub or jmp add stos adc pop jne add inc sahf mov add or clc adc mov lods std cmp ljmp push add enter jp or out outsl idiv xchg mov jne push xlat adc cwtl pop and lahf cmp sbb mov cmp cmp add and push cmpsl aam add inc call adc fdivp rcrb push fnsave rol jecxz test movsb lret lahf sahf xchg jle add out js pop add fistp dec mov jl push dec xor adc and xchg cmp in (bad) movsl hlt popa cmp fistl xchg jb lcall cmpsb mov sbb mov xor sub out test or scas push pop mov sbb cld push lahf lea lahf das (bad) lock pushf add mov pop dec push sti cltd and mov jae dec mov test (bad) loopne mov push (bad) add outsb dec add iret mov pop scas cli imul (bad) pop adc cmp sub add repnz push (bad) jne or add pop imul cmp mov js dec das add mov sub pop fdivl fwait andl pop push xor adc xchg loop dec xor leave adc xorb outsl pop mov or pop xchg aas (bad) lcall xchg mov test mov push pop mov push inc mov xor (bad) or aad cmovb sub mov jl dec jb sbb mov adc shl icebp mov ljmp xor push cwtl popf mov or out cld (bad) or pop xchg add fwait arpl sub or sbb das jl push jmp add dec add movb sub mov popl jecxz addl outsb sbb mov fcoms jae cwtl sbb inc add or push gs pop jmp js in mov (bad) and gs mov fimul out imul out mov mov ret aad in arpl in outsl neg push mov lods sbb cmp add or in and out loope add out in bnd or jmp dec add cltd xchg xor xor stos fsubrs xchg push hlt inc stos mov cli test dec pop fiaddl sub add dec aam popf jecxz cmp or jmp adc cmp lcall adc mov repz sahf sub mov lea loop cmp xor xchg cmp mov movsl inc jns push mov lods lret add cmp and add imul inc pop aam push clc gs inc (bad) cmp (bad) out add clc out sbb dec ljmp add pop push push sub jmp (bad) out pop inc jne aaa push jmp cmp dec jnp dec dec std (bad) pusha sbb add aas dec adc sbb cwtl dec jmp or pop or add pop mov push ret ffree ret sbb xchg les jno popl sbb aam push xlat in xchg imul add cli mov or xchg push mov and or jp jmp push pop mov sub jmp pop (bad) movswl adcl dec cli sbb xor sub cwtl add xchg adc jmp ja arpl stos popa addr16 sub daa out pop or hlt out mov inc xlat pop mov inc flds push out (bad) push xor mov cmpsl in jle lret stc push sub dec stos mov or mov pop ret enter ret (bad) call fistl out rorl ret sbb and add addr16 mov xchg loope inc jle movsb ret sub xorb (bad) pop inc dec cwtl push jge sbb cs or mov (bad) cld jnp fcomi jmp ret or jne adc outsb (bad) sbb pushf adc jecxz dec adc out mov call mov xchg stc xchg sub push pop sub jb xor mov jne int3 mov and mov pop dec add or cs pop inc sub das int3 add inc data16 inc sub jmp sub mov xchg (bad) mov push mov or into (bad) pop inc mov icebp jmp and pop sub pop in stos pop fs lock nop pop push ffreep add add pop push mov and (bad) repz xchg sub adc xor xchg pop xor push xchg jmp int jnp gs (bad) jns es sarb mov mov mov lahf pop mov or loope and mov add push test mov jmp pop pop out insl mov sub (bad) stos add push loop dec cwtl or shrb dec mov push (bad) aad mov cmc mov imul lret rorl cmpl insb sbb inc or add mov sub push repz loop lea jg mov stos lods mov cwtl push shll sti mov mov mov xor jg in loope aaa xor (bad) dec sub cmp test ds inc xchg xorl mov stos inc ja cmc jg cmp loope mov into cli and or xor and inc rcrb shrl in out pop out jb ror std and pop aaa ret (bad) pop jge jb (bad) or dec int3 add add bnd push pop push mov sub add int adc clc rolb scas mov add xor (bad) and ficomp sti movsb dec addl sub inc shl mov jbe add out pop ljmp jae add mov mov sub sub out dec xor mov inc fnstcw adcb (bad) add sbb pop test dec add enter dec es add ja pop out cmp ret mov repnz inc aas jne inc xchg pusha adc mov stc add push dec sub jo (bad) or cs xor dec pop out popf dec cmp lahf pop push cmp cmp pop xchg fisttp ret add in push mov clc out mov clc pop push xchg adc sbb xor xor aad mov pop push icebp in jbe push and add cmc nop jmp out mov jne mov mov (bad) mov icebp jmp loope inc or mov cmp lcall mov or and mov cmp es pop sub insl mov ja push mov loop (bad) icebp movsl pop les mov sbb push push push fs pusha scas jmp pop fcomps xor shl das cmpsl and loopne jmp add cmp xchg mov sbb add je add sub icebp pop dec fisttpll mov das sbb repnz sbb imul dec pusha xchg fnstenv mov (bad) cmc gs or xor fs xchg dec jecxz inc cmpsb and adc stos xor xchg lea xchg iret pop pop les cmp xchg imul add je add sti sub out jbe cld push push jmp test adc dec stos xor repz jne sti mov cmc addl xorl mov add dec sarb in imul mov pop fisttp inc push int mov mov aam daa adc inc sbb stos xor inc mov sbb jp sbb sub in pusha icebp push jmp cmp xchg cmp ljmp mov or sbb inc movsl sub movsl xchg or stos or or loope cmpsl fs repz inc loopne sub xchg movsb test (bad) shr pop pop in adc pop push xchg dec (bad) xor xchg mov ret add mov inc in adcb jle jmp in mov shlb pop mov shrb xchg inc repnz pop mov push (bad) fmuls inc inc aaa jp fldcw or inc cmp inc or inc mov enter push xchg push pop aaa mov xchg jmp incl or insl pop cmp jmp pop or ja pop xor loop lock xor push lods aaa or aam shr sub lahf mov sub ret pop lret in or es (bad) pop les sub (bad) arpl adc inc lea mov jmp lds sbb pop cld mov scas std insl mov jae jge xchg jno incb clc scas in xor push inc aad mov jle add aas shll imul xor pop xchg push out add dec sub pop cmp cmpsl inc loop dec out sbb loopne mov sub outsb adc mov roll jecxz movsb sub pop comiss call ljmp and ret mov mov popa lods sbb cltd add inc jbe aaa dec lock pushf jecxz adc notb (bad) xor lcall scas inc (bad) jo push mov xor popf push xorb test cli sbb cmp (bad) test xchg adc (bad) xor dec pusha mov lcall dec add int3 (bad) pushf jmp inc data16 in mov ret sub sarl cmc cmpsl cmp xor add inc jmp fldl dec xchg xor aaa inc (bad) add jnp mov add dec ljmp push push mov sbb push lds and pusha addr16 ret pop scas shl loop jge add push jg jb xlat inc jmp add jae xorps jecxz sub inc or loope mov ja jmp adc inc push push popf (bad) pushf inc xor (bad) imul test sub push push call push pop push mov andl mov and lods les (bad) jecxz mov xor mul adc mov shll sub add or adc shlb push icebp xchg or sub mov std pop push pusha and insb dec pop incl jns es jno pop sbb xor cmp dec scas pop dec adc adc test mov pop xchg push call ja mov mov xchg inc ret cmp sub scas add (bad) mov push add (bad) enter lahf imul xchg mov sub sti cltd daa arpl fmull jmp or and andl leave or mov jbe push add push cmpl in lock and aad int add popa insl sbb testb ljmp xor add call fnstenv mov mov push (bad) mulb out test daa push daa and and in dec test cmp or stos pop sbb xor mov ret adc inc or add sub mov fcmove dec jns jo clc add sub inc nop test inc psubw mov mov dec xor pop push in xor adc stc xchg cmp and jecxz jb aas xor push push dec in (bad) pop xchg sbb call push leave dec xchg call jg or sbb xchg lock call or jl inc ja mov xchg ret std add cmp les loopne aam push and int3 in and add dec xor into dec jp dec cmp jnp mov pusha outsb xor popa or psubsw mov dec test jmp ret pushf pop test mov pop lods adc out cmp jp lea cs roll pop mov shl push mov ret lea outsb jmp xorb mov leave es push inc xlat aas fistp movsb lret push cwtl les fwait or add jo add inc aad pop push lret jge mov xchg jge shll inc push and add push ja cmp mov lcall (bad) das pop or das dec into imul xchg clc xchg or (bad) orl or xor add aas xchg mov sahf mov push lret ret push stc jg mov sub push aas pop dec std push pop ret push cli sbb gs icebp add mov push pop sahf jb scas shrl jp push jbe mov inc (bad) mov insb xor pop movsl cmc out ret pop jmp sar inc push pop neg andps and loopne jae das loope repz jb stc out or mov push dec pop lahf push xchg push sub or sub mov jno test fmull and stc xchg push sub (bad) push lds scas and les mov stc add add sub rcrb and sub movsb scas popa adc jb test sub pop jae push push add or push test ja mov lods sti test ljmp jge xor dec arpl jmp mov xor fstp mov dec shll cmp aam movl mov outsb fwait adc jmp ficomp ljmp cld dec and movhps jns add sbb push lods inc ret add add repz adc iret push lret or (bad) imul dec push adc out lods sti aad jp sub cmpsb and adc mov jge inc sub (bad) iret pop lcall rorl dec sub or inc shl inc ret pop sti pushf in pop mov mov push cmp cmc out inc push sti jmp dec sub and lods arpl xor in adc mov and pop movsl cltd jge mov jl pushf iret cmp mov mov or or dec es mov rcl xchg in lods inc inc cld add and mov das movsb repnz mov les mov add clc sbb cmp sti xchg add jne jne std and ficom jbe mov popa sub sarl test push roll mov test push mov mov cmp outsb rolb jmp lods push mov push sub ds mov mov xchg adc data16 mov dec add test fsubr popl lods pop or in push ficompl or jmp mov mov inc test iret cli or neg jle out add aaa sbb gs cmp push add scas cltd les xchg jmp jecxz lock inc pusha jp cmc in pop imul add in lock push call mov mov sbb push adc (bad) aaa or into jle lret xor or outsb inc mov jmp mov sbb push sbb stc jge sub push repnz mov push push mov adc outsb andb rep jmp das mov mov mov movsb popf xor pop stos mov xchg and movsb enter cmovns sarb xchg sahf pop sub movsb xor push mov push sbb (bad) icebp aad aam push mov popf loop ret xchg je gs movsl das pusha adc scas bound nop outsl jmp inc daa cmp cmp shr xor sbb or or jmp pop mov sbb jmp push cmp cwtl lods int3 pop sub cli stc out lret movsb data16 mov mov or adc (bad) pop test mov jnp das sub cli jo fadds xchg inc imul push int les cld cmp sub call mov sub mov mov dec test lahf ljmp mov lret mov or pusha jno mov pop cld or jne push lahf inc xor mov (bad) xchg fist pop ljmp mov inc and push dec push and mov add push jno ret imul mov mul push jmp stos cld xor push xor xor stc add xor cmp (bad) lock jo daa pop rorl mov hlt out sub pop repz push push int3 outsl jo sbb xor push dec xorb mov iret (bad) repz mov xchg lods add idivb jo pop inc or loopne jmp leave push leave mov cmpps inc push ds pop mov or das repnz push mov das or in nop xchg pop push mov cmpsl mov mov popa push mov add ja leave shll cmp jo lcall mov mov repnz and fs test dec shll ljmp sub dec pop mov or aaa mov ss and mov fs add cvtps2pi or cmc jo pop push int3 or pop push cwtl xchg (bad) out and pop aam sarl lea jnp pop and hlt inc pop fwait sub dec mov fist dec jmp mov psrlw (bad) inc jnp sub adc in add adc sti sub jb inc int mov push jmp add nop mov rcpps add xor mov rolb outsb test stos (bad) in xchg xlat push rcll out adc fidivr add jmp loope bound bound inc movb jo mov notb add ljmp adc push mov pop lock into pusha jl aad dec rcll dec mov cmpsb test idivb xchg and (bad) adc lds popa sbb jp js enter inc (bad) jl inc sarb inc cmpsl push mov imul push push mov leave cmp (bad) add sbb inc movsb push sub scas jns mov scas repnz outsl nop lods pop and hlt xchg imul dec int pop cmp inc or xchg mov push jns cmp mov add jle scas add mov push jo sub add and sti aad hlt xor lds fisubr js push dec popa ds mov push jmp add gs daa push insb mov daa and jp push rcll or or aaa std imul dec add xchg loop push out or inc lss lret cmpsb adc mov fbld js fistpl and and adc adc cmc xlat cmpl sbb push cmpb push mov jmp dec pop xchg popa mov jge lcall mov sub lods lret repnz mov mov ret jo pop push lret and inc scas mov jmp ret xchg or jle jb mov jo xor adc inc or (bad) (bad) or add push push sti mull mov cmp pop test mov push stos (bad) dec jl fs movsl cmc pop and xchg dec and fldt or mov dec iret add stc and shll jg vmovaps sub adc xor push mov pop test sbb dec (bad) push add rcrl inc and and (bad) mov rclb nop lods psrlw in add dec jmp mov cmp jbe stos mov ret jg push or imul push stc arpl adc ljmp mov cmp rcrl pop rolb out dec jne pop sbb addr16 push imul rcll ret or dec sub cwtl fist mov imul sbb dec add ljmp push jge fbstp dec jg pop test cmp data16 mov imul push adc mov idivb push adc dec cmp cmp jb out push sub xor mov inc push mov (bad) mov dec aaa mov or insb popa enter rorb adc pop ja mov jge jge sub movsb test push or daa cmp dec xchg add imulb jne loop imul add adc (bad) lret js push je add push hlt int3 or cld lds repnz ret sbb dec push cmp fsts push add rcll pop movsl push add insl loopne lods cwtl push sbb bswap popf adc push mov sbb xrelease jns das adc loopne or movsb mov push lcall ja push xor gs cmpsb inc icebp mov es dec shr push pop shr adc sbb shr (bad) pop mov push and inc ljmp mov shll test mov ds and push sub jl adc jnp xchg jne sub mov pop iret jne pop repnz popa xor pop (bad) xchg push push push pushf xchg and das wbinvd xchg mov icebp pop mov stos sub ljmp adc pop insb dec adc sahf jp xorl mov pop lret cmp int3 mov inc pop ss inc pop sub push cli or ja mov std test push xor daa pusha push pop xlat and jno adc add clc inc ss fmull push pop cltd sub icebp mov in xchg sbb or scas add mov (bad) out nop stos cmp pop jl jae clc push add shl js and std loope out add call shlb jle pop sti xchg jo fldenv test jae mov lcall cmp add subb bound mov jmp inc stos add movsl bound sbb das (bad) int3 pop inc mov add or dec pop outsl and icebp jno mov rorl int mov sub sbbl push mov mov jl pop cli popa push fbstp add cmpsb fidivrl fwait or and cs sub inc xchg xor sarl das or fscale (bad) xor popa push scas in lds sub ret xchg and mov jno push pop push mov mov nop mov cmp push mov lods add (bad) pusha adc xor outsb add xchg xlat and pop and xchg mov movl test mov or or adc mov imul push daa aam and fcom or enter jle imul or mov cmpl xchg aad mov jle and mov out pop stos add dec pop pop add jae cmp pop push mov sub pusha mov pop push jmp push mov aas rorl cmp xchg sbb lods orl test dec push test mov jb push add jmp xor pop cwtl add jne loopne test movsl test les mov jg fsubl xor jmp shl loope movsl jnp,pt inc mov adc psubusb scas sub mov aam es add inc sti or into rcll jp adc sub and push pop add into adc xchg lds sub xchg mov push push ljmp mov movlps stc rcll mov into dec xchg mov add inc out push push (bad) jl icebp pop into inc jbe or call sti pop aam ljmp mov and inc xchg add pop pop sub ljmp movsb ret mov push jns and xor pop pop arpl rorb pop jge leave sub adc mov cs adc addr16 ds (bad) dec pop dec or (bad) fcompl push cmp test push (bad) jbe bound jns add add jg and and add cmp pop add mov dec xor in lods push adc push sbb dec xor pop push lahf xchg in xor xor cmpb mov pop mov jle stos inc cmp jbe dec aad sbb sbb add dec es or aas aad lds popf jmp shrb dec cmp pop dec iret mov clc adc sbb cmp add mov enter pop jns adc and mov cld push add and xorb jb cmp push mov faddp jmp sub push or enter add aaa mov and pop xor pop (bad) pop hlt js and outsb imul jge sbb xlat sub pop lods or sbb fsubl lock xchg out lea push mov and call or and add fcomip aaa and mov adc pop cmp das inc adc ret and movhps cmp or gs add dec sbb std adc aaa jno in sarb shll sub lcall mov jg cmpsb inc cmp or shr in ret mov add mov or xorb add add bnd mov push adc xchg dec add nop sbb or jnp cli jbe icebp idivl lret (bad) push push hlt mov add and js adc adc (bad) push pop push dec sti adc lret (bad) daa add rclb sub mov and add jmp out fadds mov sub cli bound in add mov fidivr push (bad) cli cmp sub or out lds pop push cld sub dec rol clc idiv cmp xor adc and and inc jnp jmp pop shr mov push add push push popa pop cmp adc mov lock jb jae dec into test pop hlt lock jecxz jle pop or sbb jnp pcmpgtw popa inc pop push inc mov lock imul mov outsb mov adc inc mov pop out div push sarb into sub pushf sbb fsub (bad) repnz (bad) neg or sar mov dec mov sti shrb push pop inc je mov icebp in and xor popl insb dec std fcoml push movsb or (bad) pop push jge ss inc mov jg jb mov pop mov mov mov cmpsb dec in xchg pop push dec jmp and das adcb les dec add arpl arpl das adc add jnp xchg in xchg inc sti mov jae test lcall aas add imul das dec loop iret notb (bad) xchg mov aad mov bound scas mov out shlb es xor (bad) xchg fs sbb stc sbb (bad) mov mov sbb sub jg fdiv fsubrs scas imul xor test and xchg cmp ja lret (bad) sub jmp xor and lds in mov xchg inc cmp mov or insb outsl orb dec dec sub out push call js sti pop or or pop adcb fs jo xchg or scas mov and icebp insl add stos lret aas adc cld repz (bad) cmp (bad) mov das rclb pop xor push push shrb popa das mov add jo hlt pop fmuls adc inc popa idiv lds shrb pop imulb inc push scas mov add gs and std sbbl xchg jb jmp push (bad) rcrl add sub pop popf bound ret in or nop insb gs adc jno outsl cmpsl movsl dec int3 test test lahf ljmp jmp out ds dec jge (bad) jo pop scas inc cs out in (bad) add fisubl inc cmpsl divb pop or leave fs clc jmp pop sub pop push push scas stc pop push dec je lahf xor pop out std arpl pop shr ja mov daa (bad) pop leave jl add jno int3 push vpcmpeqb or cs sar sub push xchg cmp mov fldt jmp mov xchg mov in adc call sub stos cltd enter sbb rcrl hlt xchg das mov scas pop mov sbb jns test dec andb lret sbb sbb add inc sub jmp es inc add cmp adc js jp roll sbb lods dec or (bad) mov dec arpl or pop js cs inc aas cld shlb pop loop popf sarb negl mov addl cltd and mov ret popf sti sbb lret cmp fxch mov add pushf loopne push les shll add lds pop std and cmp sub push add jge sbb xor (bad) test test or movsb adc hlt mov bound rorl imul ljmp push add jmp (bad) bound pushf fstpl and push mov test leave sub jg sbbl and adc push lods sbb or outsl mov aaa add jb outsl cmp repnz fnstsw gs sub or and pop cwtl push aad lds cmp sarl push xor je mov mov adc add mov lds pop push inc sub or add jg imul add push mov pusha sub shrb pop fisubrl stos and or push stos mov in and mov pusha or jb stc test adc adc aaa mov dec sarb push pop cwtl pushf add jp push ja push loop sub mov jmp popf push lret xchg inc fistp add pop imul pop jmp repz push or (bad) pop cltd push and out jns pop mov add rolb stos scas xor pop std subl jo xchg std sahf test dec lahf jne stos (bad) repz pop fnstsw aaa popf addr16 pop outsb push sub inc cs jp jbe not lahf mov (bad) pop dec lods test aad aad scas shlb arpl dec dec mov lahf repnz sbb xchg push add (bad) xor cli decb cli fwait and push mov inc mov dec pop outsb sarb fmulp pusha mov push neg jl jno ret test cmp cmp (bad) dec sub xor loop dec mov xchg add sub pop add mov push lock stc inc adc les cmp movsl mov inc or sub pop push add imul icebp subb repz addr16 pop test push lret xor or mov adc gs lds xor shl cmp inc mov cltd movsl cmp popa pop clc adc dec mov and add xor push fisttpll push jae mov jnp rcl xor das shr lods inc popf add out lret cmp add and int xchg push (bad) xor mov andl hlt inc push xor aad inc into jge jmp sbb insl testl mov fimul insb in in dec mov mov scas cli cltd pop dec xor sbb mov stos lods add inc add add in pop push mov mov pop jg (bad) and jge subl pop xor mov xchg inc dec pop cmpsb in ror mov sub mov sub add ficomp push add (bad) roll xor sub lods arpl loop out adc ret add cmp repnz scas imul lds jmp lds int3 in incb inc add lock jmp negb nop pcmpgtw push sbb jg dec imul jl mov aas jo (bad) cmp dec inc icebp in les pop hlt scas inc hlt mov and pop pop sub xchg rolb cli sub mov ret or or dec jnp lret fwait dec xchg pop sbb adc jge pusha sahf xlat sbb lret inc adc ss and (bad) pusha add push (bad) das add sahf mov mov leave mov pop inc jns fdivs lahf arpl push mov repnz loopne pop mov into pop cli (bad) stc std sbb jmp or cmp (bad) popf inc lret out and movsb pop adc enter in pop dec and out add stc and pop inc jmp push push xor sti pusha (bad) and pop pop roll sbb (bad) int rolb lret shll icebp cmc in xor mov mov adc dec addr16 in mov jg mov test push cwtl xchg cli mov (bad) jp jg lds (bad) shld cwtl repnz sub xor jno (bad) es add decl or adc jge (bad) add adc pop (bad) test jne mov pop (bad) xor std outsl cmpsb mov push pop push ljmp pop sbb movb cmp cmc rcrb pushf sub mov dec fsubs mov or adcl sbb les or into jmp pop xchg aaa cwtl test inc loope sti or negb test and iret nop dec in add mov cmp add pop or int3 inc xchg out js pop mov push add sub push test and pop not andb js lock push mov nop imulb push or jae and xchg cmpsb cltd add test xchg int mov aad ljmp push lods (bad) (bad) and push mov cmp jl jne sarb stc cmpsl push jg rclb jp mov sub ret add push add rcrb cmpb push cmpsb cmpsl insl adc jne loope jnp inc fild ss pop fdivrs jno ss push pop out sub jbe leave and push arpl idivl je mov pop mov sub xor js sub inc dec sub jmp push (bad) mov xor jle inc or sub push or int3 or adc dec lds mov dec clc push add jae add mov adc outsb add sub mov sub stos push (bad) cmp hlt jge mov movsb or divl and push pop or (bad) push adc cli (bad) es push scas sbb iret add adc add mov push testb sub iret enter pop pop je (bad) xchg pop lret inc bnd add lret dec ret enter push adc xor xchg fdivp data16 or add loopne push mov mov imul or add repnz rorb test dec mov inc push imul mov lea push and test call ljmp repz pop push add scas aas lahf adc movsb push movsb add jbe jmp pusha ffree pop nop add add pop sub bnd or adc or dec or dec sar pop push sti adc or sub mov sbbl mov or mov add jmp out push ja scas xor or mov aaa cmp (bad) out mov fs inc mov inc mov enter mov cmp or mov cmp (bad) outsl dec push pusha (bad) je push xor or call hlt mov nop mov or jae dec iret inc daa and xlat mov (bad) (bad) cmpsl insb jle,pn and cmp sbb push in outsb sub pop lret jb push int pop int pop pslld xchg andl push jno mov dec add imul dec js mov cli xchg call jae xchg pop fcomps dec inc push (bad) push jg cwtl pop movsl (bad) pop mov negb sub addl ret cmp xor std lcall adc cltd addr16 into ljmp hlt mov dec xor rcr dec push mov add es push pushf mov add jno mov (bad) push test clc in add push jmp in add sub out dec pop cli xchg and mov mov mov xor and add loop sbb push push sub cmp adc adc decb incl movsl sub dec lods adc dec enter fdivrp sub jl inc pushf repnz mov adc xor sahf mov adc xchg inc pop data16 nop aam push and gs push push (bad) push out stos push fcompl push (bad) or icebp add inc add loope push out pop and or jg aas js fnstenv xchg or decl out dec or lahf rol and xchg outsb sbb sub lcall xor sbb jl inc das pop lods rolb or or push pop jbe mov test iret and jecxz add dec dec or add in jnp dec pop sub pushf sub (bad) mov xor mov mov cmp cmp (bad) sahf jge and fimul lods sub mov dec (bad) jns add xchg push dec pop cmp das pop (bad) mov enter sbb jmp inc stos push push push mulb mov jb add cmp dec lds or sub or adc into adc in xor dec inc xchg inc std push cmp or (bad) pop jne pop xchg xchg or cmp js push mov bound fnsave push sbb sub mov cld in test mov addr16 sahf mov sub popf pusha aaa mov push aas cmovp imul mov stc dec je or mov lea xchg cwtl mov mov xchg lock push lea mov mov and sbb das xchg rol fcompl xchg test out into lods or loope idivb or inc das or or stos sub popa shl xchg daa gs movsb dec push lret push psubsw sbb jno add les inc push out sub fcom cmp lcall sarb rorl jne push push mov inc xor jno inc sbb add pop add pop sti sub dec jmp imul push or and dec sbb or adc cmp adc mov pop (bad) jne inc insl mov adc xlat xor cwtl push rclb and test or (bad) icebp lret pop sti cmpl inc ds adc scas cmp dec add pop popf jns mov push inc call shr or fist dec in fs scas mov je adc mov scas mov test and or mov add imulb orb dec add or loop jbe inc inc sbb add js dec sub lds cwtl lahf test push cld sbb stos lret jmp fimul pop ret fbld lods in push dec test (bad) sbb xchg xlat mov fwait xor out inc inc cmp int3 add fadds or sub mov xor add mov xor pop lock test push add jg xlat jbe add out xchg std movsl mov sub es sub inc add xchg push repz and sahf inc ss and and out pop push jmp popf xchg in inc repnz push sub push jge lods or or lahf pop xor add mov xor ret orb dec ret push mov jne ja (bad) mov push movsb pop in mov cmp ds fldenv jne movsb jle adc sbb in mov inc arpl arpl pop add loopne jnp pop js inc popf jne shrb jmp ret xor pusha add test mov je sub mov loop mov push ret push (bad) mov pushf test ljmp push (bad) add dec adc push cli push insb faddp jecxz lret out imul inc push pop jnp popa mov mov push jg mov je mov xchg xor lods and push mov and add and mov jmp dec cmp ret insb add stos cltd loope or test test repz lds or popa or repnz (bad) and lds cltd aaa dec mov test shr stos inc add fs push add adc cld loopne xchg inc pop data16 pop add dec clc xor fs sub cmp xor sub and add out fstps mov (bad) jbe or push push inc push pop loopne pop or stos hlt sbb inc push mov inc jmp test jmp movsb rclb hlt push jecxz pop or inc jmp imul in popa in add es push mov (bad) mov mov mov pop cmp xlat add sub push sub pop jmpw rolb mov xchg sqrtps les xor dec jg xchg faddl inc popl comiss xor leave mov or jnp les scas shrl repz mov out xchg jg xor and mov mov add gs adc shrl mov or aad leave imul cmp pop mov mov push mov dec push push mov pcmpgtb int3 xchg pop ret pop imul push lock cmpl add mov cmp (bad) xor scas loop mov mov (bad) out pop mull add sbb (bad) fcomps in sub xor or inc dec fisub sub mov in pop sub loope push inc xor xlat (bad) mov push cmpsb stos or daa adc add pusha out sub jae loope mov mov mov pop or cmp cmp and add cmp scas pop cmpsb push add clc mov shr jle std jecxz sbb pop incl mov cmp push inc push loope sub inc in cwtl jge or cmp dec add jns pop lahf jbe scas (bad) cwtl or daa jecxz leave test dec sub sbb fisubr mov (bad) add mov sbb daa repnz pop mov jmp rcll aad push aad fimull sti enter mov ja sbb mov or das into mov or dec or push int3 mov hlt loop pop (bad) negb fstp and outsl hlt mov push jno mov loope or (bad) cmp fiaddl sbb pop (bad) repnz pop cmp std mov aam bound (bad) mov mov dec je jne orb and adc add in add (bad) or pop test mov xor fadd xchg dec shrd add aad xchg xor and inc adc adc popf je xchg push les cmp push mov mov je in ds inc jns push jg pop sti pop rorl stos (bad) std arpl sub mov jg cli inc test push pop add push ret pop push add mov dec sbb scas cmp cmp mov call cmp inc jns ja rorb push inc dec add jmp inc shlb fdivrl mov aam lret mov jnp push mulb and jmp imul iret pop test aad or pop or xchg js lret imul insb add xor mov cmc adc (bad) (bad) jns inc fldl ret mov leave sub loope jle mov add dec push dec mov les adc mov jo inc or mov mov aad or js mov lahf add popf pop js mov in sub out push ljmp stc fiaddl and add or (bad) ss pop adc cld or or sahf rcll add scas (bad) push jne mov ljmp cmp jge sub (bad) dec xor loope and adc mov push daa xor sarl icebp or bound adc push lods and mov sahf push fldz mov xor pusha loope lods and repz push sarb repnz and mov test dec ret cmp mov sbb dec in jo sbb jecxz mov pop lret push adc pop push cmpsl xor mov test push adc add imul jp adc pop add and pop push push mov cmp jns hlt out bound scas xchg pusha ljmp sbb in mov push mov push push dec test pop (bad) test test shufps jno fstpl test xchg loope test ljmp adc jbe push imul jmp xor push dec (bad) or push fsubs inc es sti xor lcall ljmp call cmp sub test pop pop sub inc enter sub jne pushf mov push je sbb push inc push xor sub (bad) pop ret fcoml add jno xchg jne jmp pop push xchg jmp cmp and adc jp jle int3 lods dec shrb jno fisub or (bad) dec and fdecstp xor pop nop sahf or fwait pop push xor mov div add shll int3 ficompl mov dec pop mov cmp aaa xor jo lahf pop test loop mov pop in fldl rclb sbb lds sub add mov or add push adc add push push test add mov ja adc cmp jb mov test les push fxch push mov scas aad out shl adc jns rcrl cmp lds (bad) (bad) cli mov adc test movsl loopne test cmp repnz dec loope outsl repnz lods pop push icebp js jnp and cld cmp scas nop mov or or (bad) ljmp mov mov outsl sbb pop jmp cmp daa xchg mov mov push pop cmp sub cmpsb and out xchg ret loopne jmp add je ljmp movsb outsl push popf jne sub fdivs sub (bad) push pop pop add sahf jb pop scas mov insb ss (bad) xor cmp mov ljmp mov add adc out xchg fwait pop dec jge add stos add mov out push mov cmpsb repz cwtl pop and and subl xor push xor fstl cli push test (bad) fstp jbe inc lahf xor push or ljmp hlt add adc push call hlt sub call or xor cmp cli and mov mov dec dec mov or cmp cli mov popa cmpsb int jbe bound fidivr add int3 scas shrb lahf pop add push inc adc inc add pusha imul sub mov stc mov daa dec lcall jge xchg test push scas clc repz sbb and dec aaa sub or aaa sbb decl or lret sbb inc inc sbbb add cmp jbe (bad) pushf push jecxz sarb push add out es push mov mov rcrl movb mov mov (bad) xchg sti hlt sti pop dec ss cld rclb shl test int3 testl pop xor in mov inc ret or pusha mov cmp insb pop ds add or rcl push es sbb jne pop mov sbb das daa (bad) (bad) pop das stc xchg mov inc lret mov dec js sub (bad) in xchg jo xor leave jmp or or andl or divps out or add (bad) icebp sub jne jo icebp pop stc subl add icebp inc mov push jmp not xor cmpsb pop dec adc repnz outsl div and or push pop dec inc push cmp (bad) popa dec das and lret xchg xchg (bad) insl loope mov push pop pop xor ficomp and lcall adc js sub popf push mov aad lcall gs xor add or dec pop xor add insb cmp lret add inc xlat fs dec or enter push jle pop adc mov adc in das adc jmp sub xor std push lcall xchg dec inc jmp mov mov mov pop dec jne sbbl mov mov lret add adc pop loope push jl rorb test dec sti ret out dec data16 jne mov shr cmc and das fsts nop sub cmp popw cmp sbb xchg daa pop jb and cmpsb mov std mov push mov mov dec jne pop lcall xchg std adc push push adc xor mov push outsb jne,pt sti cltd pop cmp lock cs dec shrb mov dec add xor adc negb mov jne movsb hlt lret pop aaa jnp jno inc je adc sub loope insl dec add out or jge in aas cld ja jg or (bad) pop test adc pop lds mov jg rolb jmp (bad) lods add mov sub pop test or test or mov inc and outsl add in or adc or adc adc xor ja dec pop pop stc push dec stos xchg pop push fucomp das test aas pop cmpsl sbb fsubs icebp sub lock sub out push (bad) and popf mov pop fistpll ja loope pusha and adc leave test (bad) or lock je (bad) ss pushf xor (bad) add sub shll mov and je mov dec mov cld cmc mov stos icebp jp sub xchg jmp push push push or fimull mov (bad) dec sbb gs shrl mov adc add mov test ss pop popf pop scas or push xor ret jno push ja and stos sub sbb mov jnp sbb pop push int3 adc xchg add in enter shrl outsl jmp push ljmp inc jno decb cltd inc clc add ret lock or (bad) pop orb popf test adc mov fild mov push ljmp pop (bad) in inc add pop mov cld add sub (bad) aaa test mov add decl andb idivb sub pop and lahf push pushf clc push mov sbb or int3 pop movsb test pop inc xchg cmp add xor fstl das cmp push inc dec int adc out in inc mov idiv mov fidivl js repnz dec out sbb xchg pop jne xor popf adc scas in popa or push mov mov lock outsl stos adc cs pop lods jmp movsl insb push data16 mov aad cli pop mov nop cli cmp inc or jp (bad) xchg adc fsubrs je (bad) add inc jns mov leave and jo sub (bad) ret (bad) aam inc enter leave decl add stos movsb js adc dec pop mov inc and jns lret mov (bad) notb push scas mov sub frstor repz sub and arpl insb fucom stos int3 adc dec push jno testl or fisub and push mov mov sub daa mov dec or adc dec into cli orl jmp out lret popa jbe sbb sarb pop sahf add out sbb rclb sub jl inc in add pop das add jmp jle ja jae rclb xchg inc ds mov ror xchg dec and lods cmp jns mov pop add icebp jbe mov sub xor push mull pop adc int sub mov subl cmp cmpb mov push inc jle xor add push cmp sti xlat jb clc mov inc dec inc ret cs aad lret orb (bad) cwtl cs dec aad cs mov movsb jno iret jg popa icebp mov movsb xchg clc pop pop out mov mov jo xor jne or fsts aas add outsl push mov pop jmp push rcrb or cmp pop pop xchg cltd scas inc xor fimull in int3 adc dec (bad) add imul or add add dec shl inc mov mov ds jbe push push loope jae add leave fild mov sbb aaa adc xor addr16 cs inc push loopne add repnz sub leave push add jno jmp mov and sbb mov mov out inc add dec clc mov jg int jb sub pop (bad) jnp aaa or add cmp push cmp cmc adc shrb add clc add xchg pop jbe dec mov test dec lock repnz pop mov into add inc jb push dec movsb adc loopne jp stos ret fdivl mov out (bad) mov sub pop pop shr inc in and icebp sbb pop movsl jmp out jmp int3 inc lods add sbb dec rorl adcl add and rclb add fmull mov icebp mov test mov inc arpl popa pop mov xchg pop movsl jg add notl lock push cmpb jl adc (bad) dec xor xchg fiaddl hlt pop imul sub pop stc in sahf push sub mov mov add add mov xor mov imul lods dec mov stos mov and inc inc scas mov scas mov dec xchg adc or mov pop lds jbe and sbb sahf mov out rorl movsb lods or out fcompl jmp jo (bad) lahf pop jge add or in nop sbb ficom int3 out testb outsb push pop jmp jne cmpsl push rorl jmp pop jl xor add pop gs stos jecxz xchg inc push dec mov xor imul xor es rcr xor bound into xchg pop and cmp shr jmp cwtl push in mov bound and add cli movl add rolb sti pop and mov insl cmc xchg imul test rorb shl je pop cmp push pusha cwtl push pop roll jne cmc mov incl mov mov fist xor enter sub lods pop icebp add daa adc add pop sub pop push jecxz dec sarl inc in or pop pop add adc cmpl inc negl sbb rcr loop or pop jo mov mov test pop out inc mov and mov or fidivl rorb cld pop orb dec inc mov cld add adc inc das enter cmp push mov icebp call mov push inc add mov xor sub inc in in add mov mov int3 (bad) cmp push out push xchg outsb sub and stc xchg sarb push and ja pop push cwtl psubsw or add add std pop lahf pop mov jne adc nop sti xor in push out xchg mov repnz push sbb sahf sbb icebp mov cli push push sti adc out fdivrs cmp jnp fldl2e push (bad) or in push pop push xorl je xorl adc ds or push mov loope sub pop decb (bad) ja hlt inc push inc jae add push mov ja mov and movsb push push movsl mov jp aaa push sub or cmp rcll jecxz mov push mov je dec push cmp jg lret jb mov rolb aad inc mov (bad) dec fisubl jmp ja je,pn jp adc loop es lods pop or cmp in stos mov cwtl les test roll loop cmpsb bound or add mov imul mov xor (bad) call aam cld add pop cmc jp pop jmp out jl frstor aas lock push cli jle imulb jbe push cmpsl jno jo sbb jl mov adc stc sub jp sbb mov bound lods cmpl dec pusha addb jmp xchg cwtl ret xchg cmp arpl or xor into decb fistp dec sub cmp or xor push jo or lret repnz add jmp add add rolb sub cmpsb jmp jmp lock push pop es (bad) pop push (bad) loopne lds dec xchg pop xor xchg cmp xchg mov lods or sub lret or or cs test or push add cs add rol cltd cmp push adc sub mov ljmp in add pop dec sbb push and jns cwtl push data16 popf ljmp lods or jbe rclb leave pop jne jnp adc lret cmpsl fs ret repnz and imul dec fsub xor jb xchg jo push push popf js loopne sub mov sbb jge scas fstp add (bad) cmp mov mov push roll (bad) fisubl rcl or out add pop xchg pandn adc pop jne sarl mov inc es mov add and je jae jmp pop add bound jge sub mov cmpsb rcrl ret frstor fist (bad) hlt dec xor jae xchg xlat subb inc xchg popw and sub jnp (bad) xor xchg sbb int3 push cli fsts jmp imul pop jmp out test pop stc repz incb xor mov add daa sub in xchg pop xchg push incl dec pop dec scas inc dec and fistp add xchg (bad) aad jnp jns and ja mov dec push lds cld push mov or sub adc repnz push ds sub lods add dec mov sub daa and xor stos lret dec inc and movsl push data16 fstpl (bad) dec adc dec out (bad) xor dec lock jmp jmp pop add lahf xchg fisubl js push mov push rcrb mov xor add out xorb insl pop je scas cmp addb and dec add test hlt push add dec pushf hlt clc dec in out and adc add clc push mov mov pop sub pop lock mov add loope sar imul cwtl std fnstenv inc out xchg adc push sbbl jns adc xlat movsl ljmp jle rclb pop (bad) adc jg icebp stos inc mov add cmp xor mov es fldenv push in (bad) lock scas shr jmp cmc iret adc sub (bad) sub push mov mov pop xlat xor test pop jmp jmpw mulb out dec jae sub jns pop loope idivb dec pop xor cmpl mov add repnz xlat mov mov add outsl xchg dec or adc rolb or adc mov icebp movsb jae push jmp mov sbb or daa idivb mov stos adc popa dec cld (bad) sahf mov lret jbe arpl and es pop jp jmp aad cld rorl pusha xchg push cmp or xchg adc add sub sub mov add add aas pop jo xor cwtl xor cmpsb leave add leave push aas xchg icebp and add imul mov mov loopne xchg pop adc push les push mov sub mov push push notb pusha add xor pop cmpb loop enter xlat sub jb or xor inc bnd out mov into jecxz rcrb push pop test rorl notb push fs add xor or (bad) jge push dec pop jmp scas mov lea sub aad loope lret in je add das out push int3 stos add loope int subl ffree jns cmc cli in sub cmpb pop push sub mov insl jle push pop jne pop das jl sbb pop cld pop mov leave (bad) int3 test add push shr ja mov mov jle and push xor ret jmp mov sbb lock fiaddl sbb jl and adc cmp sbb fnsave and add aaa mov shlb imul add mov inc jnp add movsl pop es repz mov add pop jg bndldx adc jmp js mov std in xchg jmp rcrl cmp sub and addr16 mov adc (bad) ljmp mov mov loop (bad) jge pop mov sbb xchg push pop push ficom add movsl add lret hlt dec out and pop sti pop js dec (bad) jg pop cmp and and bswap in xchg in aas (bad) dec repz cwtl mov loope xlat pop bound (bad) movsb add xchg and (bad) ds mov lahf mov dec stc scas mov cmp sub and daa mulb cmp xor int3 pop stc mov sub xchg adc cli push pop and push pop fsubrl les or stc fndisi(8087 inc or insb cmovs jmp pop loop cmp dec pusha and lods adc js dec in mov es add (bad) mov hlt adc sub subb imul fsubr outsl jg pop jl mov inc push pop call or xchg cmc cmpsb mov fs sbb and fbld out dec (bad) fisttpll scas scas popa int dec sub xchg adc sbb mov pop push add push pusha dec adc cli (bad) notb sbb jmp out fsubs inc scas test jge stc xchg (bad) xchg push nop or or jl ja push lock or or pop or nop dec push add rcrl pop xor (bad) or imul push mov push mov sub ret mov sub mov mov add mov mov push jnp cmpsl fsts xor adc jno fnsave or add leave inc or stos mov cmpsb pop mov push add add lcall adc pushf inc add mov fiaddl lds add rorb daa jmp subl push pop xor pop or leave sbb ds daa (bad) xor push xor add jge fiadd push mov mov shl movsb mov fsubrl mov enter loop jge sub adc or mov add sub daa jnp in add inc add fcmovu pop push je mov (bad) push cltd (bad) cmp mov jp mov adc xor push adc mov xchg and or aam jg adc not pop out mov cmp push mov aad test addb push add or cmp (bad) icebp dec add std scas negb jl cltd pmullw aaa out mov mov dec push arpl xlat loope mov pusha jns add das pop pop mov das and jl xchg insl (bad) es cmp mov cmp sub inc inc rorw mov dec test push das push dec shrl and sub lods jmp pop mov add outsl shl shr cmp fstpl cmpsl pop dec sbb test aam mov add cmpb pop out push jmp rcll push jae dec cli dec out adc cmp lds cli scas add jae mov add test push or jge push pop (bad) pusha adc inc sbb fstpl mov and mov mov jg cwtl jmp icebp push or dec push push pusha pusha mov subl out ret or scas push fildll sbb ja mov es mov mov add jecxz push or jmp mov adc sub cmpsl pop fs fmull jg stos cmp cmpb movsb aas clc adc inc xor outsb stos ret sub hlt push and add enter out movsb ds pop shr and arpl daa lock dec inc adc sub sbb mov or fisttpl (bad) scas rorb inc leave int3 clc cmpsb mov push es add add dec js adcb or add popa jecxz lcall dec xchg negl sub out cmp imull pop mov jo xor pop addr16 add jo add dec ret movsb insl push lods jbe xor adc popl lret push inc lods xor pushw inc in and sub (bad) loop xchg fincstp idivb add jl add test and call gs dec fs mov andl (bad) (bad) cmc repz fildll push movsl (bad) cmp jmp scas xchg les nop adc sbb call cmp jnp loopne adc adc rolb fwait mov leave out and push jge dec adc and fldenv in lret pop lret dec pop mov imul push mov adc fldt pop cwtl dec push icebp hlt dec push mov jmp ret cld ret xlat add inc jno jns lods les pop roll and dec dec inc ret push pop nop xlat aam icebp xchg movb ss inc (bad) jno (bad) call fstl add ret fs jmp ficompl (bad) scas sub push rcll ljmp inc add (bad) fsubrl adc cli and vrsqrtps jno add in jp punpckhbw jmp cmc incb arpl je jnp cmpb add sub mov out (bad) mov pop pop (bad) mov jo push pop addr16 idivb jg enter js sub imul mov cmp cmp add dec mov and movsl dec dec rcl loopne or das mov push in and les imul add pop repnz add dec inc sub sub into icebp push and xlat dec xchg test cmpsb enter inc (bad) add mov inc fildll add add jmp mov dec loop adc add imul and pop out cld out or sub add pop sub sub (bad) add add pop loopne xlat and cli jl sbb js mov inc mov push mov setl fwait add xchg xchg mov pushf or add xor mov cmpsl mov test adc add sub lods and outsl and arpl test ret adc scas mov das lret movsl and addr16 stos adc mov mov mov pop xor dec pushf push or cmpsl ja lods out push andl dec mov fcomi add push stos les mov stos pop sti pop je insb and mov into and push inc lds push pop pop dec mov xor out push lock push or add and mov lods xchg jg movsl clc xor dec sti adc out mov mov cmp bound cmc call adc imul dec std lea mov lcall loop jle fs cmp jmp cld lret int stc out sub js aam add shl inc sbb out movsl sbb sbb sbbl cmp push rclb pop dec je ret adc cmp mov mov push out adc mov pop cmpb dec jge sbb jge out mov inc ret mov push mov sub or sub call inc push jmp cmp fistpll xor sbb add ror inc leave fldt sub xchg inc sbb xchg push sub jnp addr16 fstps shr int3 outsb and stos shll mov imul push rcll sub jmp and mov stc repz lret arpl mov xchg dec cwtl mov cmp xor cs mov movsb out test jge mov gs cmp insl into mov cmp mov js aas adc insl push adc mov push jbe jns mov rorl jmp add not xorl pop add xor inc imul jno push imul mov mov fstl push enter add xchg dec mov int dec fdivr aad ret les mov in adc leave cmpsb push out cltd ficoml cmc repnz mov add and lock xchg cmc or pop cs es add cmc sbb adc mov mov sti pop les dec adc adc imul jne lret jp push sub aas psllw iret in mov pop or inc mov or pusha sub in popf pop loope imul jne into (bad) jae aad aam (bad) (bad) cli pop hlt daa (bad) int3 nop cmp adc pop jnp or fwait push xor ljmp nop push in lahf nop std daa push aas into jmp mov out sub je outsb in jne lret xor xor or std pop mov pop or lods jo fbld mov fdiv sbbl and push repnz sub int3 (bad) xchg (bad) addl rorb arpl add into and sbb xor adc add jg sbb inc (bad) mov mov mov cli enter leave push mov js (bad) in mov mov scas (bad) test add mov dec and imull dec add inc cli (bad) xor jmp mov inc mov cmpsl bound aad or jmp aam sbb add cli mov pop cmp lock clc mov pop mov aam pop inc sbb ljmp sub (bad) sub mov sbb cld repz or ljmp or iret sbb add fucompp ficom mov sub ret js push add add jle enter inc adc add fadds (bad) (bad) (bad) pop popl sub jns or push add push jmp cwtl dec icebp inc outsl cmpsb sbb iret jmp sub add hlt add and jle sub adc (bad) les pop testb pop dec daa jo sbb pop (bad) rorl mov shrl sub pop push and sbb push dec pop pop or (bad) lahf xor adc in test pop loope sub popa mov test ss outsl out sub jmp xchg outsb add jbe imul add add adc sub or add and xor sahf popa mov push insb mov add mov lret sbb addl sub push ljmp push scas aaa out sbb xor jg pop xchg xorb push mov push push inc xor pop std pop lods cs scas test xchg push loop outsb sub in add ret sub out push ja push leave xchg mov mov (bad) jns jb mov push out fprem1 and imul stc aam bound push jbe xchg sub in mov es inc mov inc sbb pushf xchg loop adcl imul pop mov ja cmp or cwtl mov scas pop idivl ljmp shrb arpl push xor sub xlat and mov sub fsubrp pop adc jg jecxz adc adc shll push pop clc pop and je (bad) lret gs (bad) test dec loopne push cltd inc mov leave jp mov sbb push xchg mul inc push into outsb adc sub inc pop (bad) aad mov adc dec adc loop adc stos push push sbb sar add out adc dec bound popa aas inc shr sbb push and add and jg (bad) mov and add inc push add mov rorb shr xlat dec xchg mov jecxz add mov and xchg jle and pop pop inc inc xor mov sub sbb icebp sti push push pop xor adc add sbb dec sbb movsb xchg mov divb mov cli imul push add ljmp mov adc cmp (bad) icebp sbb xor pop mul mov adc (bad) mov hlt add pop sub push mov loope inc mov jmp aas (bad) jmp cld sub pop and xchg loope (bad) xor aad dec add rcrl jecxz cmpsb imul cmp xlat add mov fstpt cmc lods or inc adc rclb mov jne add jmp sarb xor xorl clc mov pop rcr dec nop pop out out clc cmp sti cld cwtl xchg das jg stc call insb pop inc into mov xor not nop dec sbb aam push mov mov out add add xor cmp rorb sub or js sbb lcall ficom push mov int and lods scas or lahf add pop push movsb sub mov cmp cmpb jo lret sbb mov mov sub pop fimul add (bad) mov sbb add add push dec cmp add dec inc cs jns (bad) and jmp insb cs inc mov push test in cmp or and das icebp cmpl js pusha push push test push and cli outsl cld push cmp movsl lock test out in mov mov mov push pop push shr sub cmp mov in add ficoml xor das out fimul pop (bad) mov (bad) sub rcrl ja,pn or pop in pop jmp imul jb and pop adc pop push push push or aas xor push or add cmp jecxz add jp mov cmp pop fsubrs pop add sub add push push and pop stc inc adc dec and jo jge jno dec inc inc jge (bad) mov dec inc mov inc leave (bad) xor mov add repnz add scas loope add mov mov shr sbb add dec aam mov add (bad) hlt popa inc or mov cmpl adc lea add pop xchg inc leave loop add cmp fldl test adc and loopne push cmp add add (bad) inc adc dec js xchg rolb xor inc test jne subl push push mov idiv sub insl mov pop std dec pusha sub insl fist push pop xlat pop pop lock out adc add xor std pop adc rolb mov sbb mov dec xor mov adc iret add adc add inc das add aas lock xlat xchg jg or dec sti xchg rclb sub out and xchg pop or in or add addr16 std aad jne stc movsb orl pop push adc mov cmp mov imul dec mov or test add jmp jmp cs mov bound dec xor xlat mov (bad) loop mov push pop add mov daa jl test and stos mov and repnz push pop or mov push popf ss jl pop test push movd and pusha cld dec pop xor ja sbb mov adc pop incl out outsl call cmp adc xchg pop or frstor lods or dec add jb jno adc pusha inc xchg lock inc cmp imul add fistp jp (bad) mov popa sbb pop mov jle sbb les lock sub sti dec xchg (bad) xor mov and addb xchg xchg outsb cwtl ret and cvttps2pi enter icebp into mov ret fdivrs insb addr16 fnsave movsl test scas call push in out sub iret push mov data16 pop not lcall nop data16 aas aad nop pop cld out dec shll xor cmp mov mov repnz jo mov dec mov xchg push push jl xchg lock jmp popf and dec shr jne sarl xchg incb ljmp jmp add (bad) sbb pop clc pushw sbb pop xor ljmp jle stos add outsb xor or sbb (bad) aas mov jno js inc cwtl and or (bad) iret sub adc hlt daa movl pop pop scas push outsb movsb xchg jns psubsb mov mov (bad) jno imul divl fiaddl ret pop repz out push stc popa (bad) cmp inc lahf push and cmp or ret jge in pop or popa movl sti gs push arpl in enter ds mov js push inc jns or imulb aad dec or push das fmuls push call xchg push push rcrl and pop sub or pop adc sub xchg aad push push dec adcl adc lods jno lahf dec pop adc shr neg pusha roll loope pop (bad) (bad) jmp pop ret stc mov cs stos jo fisttp mov aad arpl sub jne or mov repz outsb in outsb push movsl dec lock jo push lods movsb mov subb pop insl cltd adcl sbb sarl test scas xchg fidivr adcl imul mov mov mov jmp pop fild shl xchg arpl pushf scas mov or pop ss mov mov mov adc pop fmuls mov sub clc push pusha out dec out add (bad) cmp xor dec out lret add jp out enter inc repnz mov inc neg pop sub ss ret mov mov out (bad) pushf adc and incb scas add fsts mov out or (bad) push shrl icebp or jne sub popf adcl ret je stos mov enter push dec xchg xor (bad) sahf repnz lock mov cwtl mov add fs pop pop or pop pop pusha dec xchg mov cld jbe cmp sub lds scas cmp jg lock imul mov imul (bad) dec arpl mov push pop data16 xchg pop lods add dec outsb push mov sub adc jne imul dec mov adc xor inc (bad) (bad) mov xor js add dec fwait loope pop push scas adc inc data16 shlb jmp mov fnsave stc pop jmp mov pop mov scas loop push jbe push pop or out test push movsl xor sub or js lock and addr16 cmp sbb lds mov les insb pop iret in sbb add push imul adc mov add jmp ja das enter push add sub pop pop aam adc mov cwtl test sub repnz and push jge popl add loopne cmp jg enter shll mov mov push sub pop inc adc stc ja icebp std out fisubr add sub scas mov xchg in repz stos popf (bad) out dec fidivrl cmp cltd bound test xlat (bad) cmc loope sub or xchg es mov loope outsl mov dec in lods sub pop add lods (bad) aaa stc mov rcrl sbb cli mov sub push gs sub dec adc mov jne jl push popl sbb sarb mov pop dec push sub pop xchg xchg pop cmpsl in mov inc xchg clc add dec out sbb cmpsl add mov inc dec ret dec sub in mov cmpsl cwtl inc mov and pop or sub and es mov jno xchg ja inc inc inc cli (bad) jb push inc clc sub outsb inc add xor roll xchg adc stos mov (bad) xlat lea push sbb mov xlat lret sarb cld adcl mov push call mov pop sarl mov xor dec cmp test aad outsb dec mov xchg popf pop mov (bad) mov mov mov inc pop mov mov and dec add mov inc and sub push jecxz push pop add or cmp and xlat sarl xchg (bad) add xor jmp or andb mov and sar int3 fadds mov mov sbb fimul dec and out xchg cld (bad) adc xchg repz or fisttpll ror aaa or fldl2t das lods cli push stc in addl fisttpll adc dec repz jmp mov push stos mov jo mov mulb vprotw inc inc dec hlt (bad) loopne mov sbb xor lahf jns push jmp dec mov das pop insb loope stos (bad) add in pop lods mov sti xlat and (bad) scas mov shlb pop jl push add lock lods es inc daa jmp notb cmpsl mov push shrl pop mov dec stos sub add arpl mov jmp (bad) pop shl jb dec push cmp and cmc jmp mov adc pop dec scas bnd jge add xor push dec mov xchg cmp lret lcall or scas or adc fwait sub jb push push push lret out or jecxz and insl nop xor sub aas scas pop (bad) or sub inc adc pop push sub mov sub loope sub add xlat cltd jo pushf push inc fdiv add jle sbb push sti (bad) mov (bad) lock sub jg out jmp xchg arpl mov sub pop sub xchg mov scas inc push das fstl es cmp adc pusha add cmp and lcall and push jg mov ficompl rcrb insb cltd xchg push mov outsl and pop sub das add stc gs je sub and pop add out clc out mov inc out repnz jmp pop dec push orl clc add add arpl mov je sub sar mov pop std jmp xor add dec adc pop push rclb pushw inc sub rcrb pop mov cmp pop scas fstl cmp popf jbe test ret sub mov sub fisubl push dec (bad) repz dec icebp jo test mov jmp push and lret repz cli out jp xchg xor (bad) dec fdivr addr16 andb push mov out add push mov sub pop jmp inc das inc outsb cmpsl negl adcb jne lahf mov call loopne adc notb imul sub (bad) idivb pop push mov dec loope cmp in (bad) divb pop and adc mov ret mov mov or inc add (bad) push add fsubs repz adc mov lcall pop icebp imul xor inc xchg add pop mov fstpt push xchg push mov or mov imul and adc daa xor adc sub out es das sarl testb sbb fs hlt or (bad) mov aas lcall popf add add cwtl leave popf inc or mov and jmp xchg xor mov push jge rorb repnz mull lds xor and or (bad) jmp idiv mov push jb mov adc inc jns cmp aaa add or adc daa std pop jle popa jmp stc insl rcr mov and xor vucomiss and sbbb sbb or push sub roll and addl ljmp push icebp ljmp push sub pop mov mov imul mov inc mov jl test jp xchg or ret pushf leave mov push and jno add in call cmpl push pusha mov jmp mov xor push stos push fimull push bound pop push pop insl sub sbb sub jmp hlt int3 addr16 mov jle sub mov fsub add jo jg mov add sbb jns dec lahf adc icebp jno mov mov (bad) sar jno,pt push xchg add enter into loopne,pt fs push or adc dec inc sar cmp lods (bad) xor out and (bad) or cwtl in or push fiadd inc mov cmp test sti arpl lock adc repnz mov xchg inc push mov pop push push add std add rol aad cs cvttps2pi xor mov dec xor jne adc mov (bad) out jb xor push fmulp mov add int3 subb lret daa pop dec inc sbb (bad) (bad) pop scas xor insb pop inc push or add dec stos sub addr16 jge mov and mov xchg sbb mov leave mov pop pushl xchg cltd jno xorb pop je into movsb xor dec je add cwtl jns,pt cli or add out xchg icebp jmp mov daa dec jmp pop ljmp jmp push (bad) mov js mov int notb dec mov xor or inc imul shr jl mov idivl aas sub cmpsl sahf (bad) xor stos sub add scas loop xchg sub outsl mov mov aad adc sbb cs xlat mov cmp cs xchg dec lea sub cmpsb (bad) push scas (bad) lock out xchg cmp cmpsl stos add push sub mov inc fadds xor std sub mov xor pushf pop and mov (bad) ja loopne sub shrb jbe cld push push adc dec sub adc inc mov std sub mov mov and into cld das push stc jg je and mov and nop adc sahf cli fnsave addl cmp mov jmp scas test sti insb in inc aad adc jg aaa jnp mov fstps unpckhps mov add dec dec push mov into mov jne test pusha mov fidiv sub out sar push cs aas es rorb mov add and inc out lods sbb xchg inc push mov fisttpl int or add jge adc ds xchg stos cwtl fwait push aas jae loopne jmp xor out sub dec inc das push in cmp imul pop pop mov smsw cmp add sub push sub pop inc jmp pop xchg clc das mov (bad) fwait mov mov adc dec cli add xor daa les dec xor mov jmp (bad) stos pop dec test or rcrb jne dec inc movsb mov pop pop movsb out loope stos mov pop in sbb mov pop lods out pushf sub cmp push jl scas jb sbb or sti jge xchg inc mov pop adc imul and jne dec mov insl jmp (bad) notb pop jae and pop es pop call inc pop flds pop add sub fsubrs jmp xor jge mov int3 lds sub icebp lret mov add push xor push sets pop pop mov mov enter mov xlat fld insl iret jnp sbb sub sub fdiv jmp inc repnz fdivs mov roll or movsb sub inc (bad) sahf ror sbb rcrl test nop das call push xor sub hlt lods test dec add fst cld (bad) or cwtl xchg rcll int3 js pop lret jmp es popa mov leave nop std push inc jbe xchg out xor xchg mov mov mov mov adc xchg jno imul jge mov popf shr outsb jne mov das xchg lahf sub inc xor cmp js push dec sarb iret inc add dec aad inc jmp jge xor jno add pop inc pop lret loopne sub push inc daa lock pop add mov sub or inc lods add dec into inc shl mov arpl jmp sub adc and das jmp jnp sub insl mov out cmp sbb cmp bound push movsl gs adc decl add or mov add adc pop in or push push cmc or les outsb test addr16 xchg mov (bad) push test faddl mov pop cmc lods mov outsl mov cs shrb xor xchg (bad) xchg jo mov test addr16 insb push popf xor icebp or and lods lock push xor int cmp outsb loope add sub add (bad) adc sub pop push (bad) fiaddl mov xchg pop xor mov push fwait push push test add push jg mov push sub inc aaa or rorb sti fisttpll das mov (bad) out xor mov inc int3 imul pop inc xchg movsl arpl popa jp loopne and rorl repz or and sbb popa scas sbb addb iret xor insl les mov andl xchg sbb mov jl adc stc clc (bad) sbb lret or xchg pop sbb in add add mov cwtl scas and iret xorb adc and lock movsb xor mov fistpl lock stos ret inc cwtl jmp and mov bound and and adc fmull mov sbb leave xor adc xor enter sbb xor adc fcompl arpl or jge mov les dec push push push fstl jne subb iret or sbb and subb sbb imul mov inc mov dec iret arpl or mov add nop in add adc lret or sarb or (bad) mov or mov les outsb ds fwait or xchg (bad) dec xor push bound sbb add int3 xchg aam adc daa sbb pop sti adc cltd jmp push ret bound push rolb mov sbb sub jecxz out icebp and lods inc nop loope xor mov aaa lods sbb call xchg adc (bad) stos mov movd inc sahf jnp dec push mov bound ret jns loope push push les add push cltd aam push enter and and loope sbb jmp add add mov leave scas or jne in gs cmp jne (bad) xlat sbb dec sub lret or push inc cltd daa pop adc fnstenv dec mov mov push adc cs mov sub nop test inc dec inc push orb pop or or fbld lods ds dec leave dec sbb inc pushf cmp fidivr jg xor loopne es daa pop inc push sub push mov out or (bad) ficomp inc das pop aas ret addr16 sti and (bad) mov sub pop dec test add mulb and push ljmp arpl push bound adc cwtl clc jle loope ljmp mov mov add inc mov test mov stos cmp or and outsl add cmp push push add xor sbb insb pop sub inc pop (bad) aas add add sbb clc xchg pop jl adc fiadd mov adc mov sub jg mov rclb outsb daa ljmp xchg xchg jge sub or add dec out dec jp (bad) push es mov mov and popf and pop adc movsb cmp sub xor adc dec cmp pop pop loopne xchg add cmp insl cltd xchg mov movsb ja mov pushf leave jp add in in int3 pop in loopne stos mov add add inc out cmp mov fildl and add (bad) mov cmp aam add dec into ds or adc push loope xor repnz cmp xor out imul mov sbb rolb jnp sub test das pop mov adc sbb xchg mov enter mov mov adc and mov mov out ficompl insl pop push or sub jecxz scas jl or pop out xchg adc cmpsl cmpsl cltd jb jg mov mov dec push mov test xor std cmp and mov cmp daa add sub call test xchg fbld mov cwtl test scas mov (bad) push xchg inc adc lret lods nop loopne nop jnp ficom adc sbb inc push pop push test dec out mov loop pop or cwtl mov dec jno push pop push push or push mov add jo loope ret add sub (bad) push add add negb sub xor adc in repz sub jp (bad) sbb cmp aaa inc inc int push mov fsubr sub fnstsw je or add cmp lret fisub sub mov jae enter jg push sbb push and cmp sub sub xchg sub aaa pop add mov andb and xor movsb out cwtl adcl outsb push pop arpl xchg cld pop add lea mov sahf mov daa js mov out push pop pop and mov mov (bad) dec or imul xor push sub adc mov xor mov pop fbld lret sub xor mov xor push add imul or pop jae xchg decl lea rcll lea add adc push pop sbb pop jge xchg not ffreep sub sub pushf inc arpl xlat sbb or movsb fcomps mov dec sbbb inc in sbb add add add dec les xchg loop ja adc xor add fstps xchg sub cmc inc and sbb (bad) pop push inc cwtl cmp jae sub inc or leave push daa pusha icebp jmp jbe push flds stc and test cli mov inc dec cltd inc icebp lds sub ds mov imul and lods or rolb sub push mov mov dec jne mov mov mov imul add sbb inc cmpsb and dec sub add mov sbb dec outsl push addr16 cwtl aas aas jnp lock (bad) in jge in dec jbe test mov xchg lds sti iret bound rcl push sbb dec movsb mov adc pop mov lea jo sbb lret dec neg arpl dec aaa aam jge mov lds add pop cmp and sub dec add test arpl dec mov fs fwait adc jb cmc mov push mov mov or adc test movsb pop xor lods lcall insl dec fucomi inc (bad) repz das fnsave xchg test inc lods mov adc outsl nop inc xchg or adc movhlps cmp ds pusha xorl arpl push dec in xchg add push mov push mov sub jnp shrl jge cld mov inc pop insl add shl sarb add lds cmpsl fildl mov loopne xor sub cmp or or add sbb int les pushf (bad) mov pop aad jne das orb add adc xlat outsb nop test add es mov push outsl adc pusha inc add mov inc inc xor push (bad) jbe mov outsl adc pop sbb pop or lods xor and outsl repnz mov out push lds repnz (bad) cld es cmp pop insb adc sub cld daa sub cli cmp sub ljmp scas loop xchg mov movsb mov out or inc xchg sbb or rcr or pop sbb adc add mov mov jno cli pop push mov xor stc aaa sbb andb sbb nop push out adc adc and lds js lock fidivr dec fnop lret (bad) xchg daa sub pop push sub pop ljmp xchg std sbb mov xor test icebp fmulp js pop roll out or and rcrl cwtl (bad) pop mov cltd movsb sbbl in negb push das mov or add mov jp fildll or paddsb push or xchg xor fcompl xchg loop mov adc sbb aad add lods and pop xchg arpl popf roll cmpsl mov cmpsb jb xlat fsubp cmc pop int3 sbb xor data16 pop gs decl daa mov aaa xor pop scas rcrb imul (bad) or sub cmc jno pusha mov cwtl popf outsb push bound push push add xor add jno je xlat jecxz dec or inc lea (bad) mov inc push sub in pop and cmp push outsl test test lret push lds xor mov adcb xor mov repnz scas popa enter nop mov adc cld imul xor inc lds push push test dec ljmp inc xchg shr ss insb movsb out jb in pop push cwtl mov and jle xchg in push add sti sub mov (bad) lock (bad) loop lods add push sbb (bad) (bad) push jg push (bad) sbb hlt and pop mov sub hlt cmc pop push std sti mov std jb pusha mov xor inc pop mov inc adc pop jge cmp sub add inc add adc and not pop add push insl jmp mov (bad) lock mov jg pop cmp (bad) fisubrl dec shll cld adc xchg ja hlt adc hlt (bad) pop add out loopne jmp sbbl mov pop cmpsl aad inc divl xchg add sub inc push add or pop jmp xchg pop loop (bad) mov dec or (bad) insl in (bad) clc inc (bad) lcall and test xlat jle jg cmpsl jne inc pop xorl imul fs sbb jmp imul lods inc mov ret sahf and push ret dec daa incb frstor adc ret ficoml add aad pop das in insl jo stc int3 jb hlt sbb daa sbb fstpl pop lods ljmp jmp jbe inc dec clc aad loope lds pop push stos leave pusha push inc push sub jno sub or imul and or xchg mov cli mov mov dec jg ja fwait jns or adc fimul pop xchg push orl push int3 mov scas inc inc push push jmp std mov clc ljmp add call pusha jno sbb cmpsl jmp or inc dec leave adc jg mov adc cmp xor dec add clc int add pop jne xchg (bad) out inc scas push (bad) sbb mov push sbb sbb cmc pop test (bad) mov xchg insb cmp push flds mov push test mov add sub mov push cltd mov cmp jmp sub pusha mov adc test adc dec addl jl lret fcomp sbb dec stos mov mov xor cmp sub arpl push bound cs inc mov int3 cmp xlat rcrl jp push loope sub clc pop cmp sub lods cld jo and orb jb (bad) jbe and int lahf popf ret sub test repnz mov scas sbb inc scas test jle dec fdiv (bad) insl and pop mov mov add in pop add add sub push adc push es ja push stos add mov aaa lret jae cmp mov sub imul xor or cmpsb outsb fcoms xor pop xor push mov push pop cmp je add cmp imul pop pop sti jmp add shl adcl sbb push jg shrl xor pusha sbb repnz lock sahf mov or jno push nop sub mov push inc ljmp repz es and xchg imull pop int mov inc jmp jns inc je mov ret xchg mov lock test push adc lret xor xchg pop mov pop xchg fdiv scas pop inc lea (bad) mov jmp stc sub and xor jmp je rorb mov push (bad) mov mov ret movsl inc jmp push push or mov mov aam out or aam add insl adc leave ss mov inc pushl arpl (bad) xchg das ss dec lcall nop rol xor jb dec sub and adc pop mov jae enter nop lcall in fsubs out imulb push xor mov jp icebp push into pop stc bt mul out sbb insb jmp in cmp xchg push das and sti loopne or das mov cmp inc inc push or fiaddl add loopne sbb xor hlt lds fstps fs push cmc sbb add cs push cmp jns shld xor dec mov jno pop cmp ficompl addl outsl mov in lcall gs imul xchg mov popf sbb xor nop ljmp and test add orb cli jne adc inc pop jge cmpsb push dec inc jmp ficomp inc enter dec pop stc movsb aam rolb ljmp aad mov testb add dec mov mov shrl mov inc dec push mov mov sub loop and inc mov cmp aaa dec mov fs inc pop jmp mov inc test in mov incl and popa ret lods push aam adc test pop dec and xor mov and push inc sub pop mov js and inc xor shr push mov std vpunpckhbw je fistpll or inc xor inc and add je dec or mov add xchg sub xchg mov xchg rorb adc push push pop add or test aad sar xchg jmp int push xchg dec lea in mov test cmpsl pop and sbb loopne mov pop bound push sbb rcl fdivrs incl sub sub push shlb nop adc in loopne mov cmp inc cli les pop decl push lret push in sbb cmp sub arpl and inc sbb xchg jmp mov pop pop aam out repnz xchg popf je sbb sbb pop pop mov adc push movsb add xlat add push xor jo sbb insb pop push xchg mov idiv int3 push dec ret lock rorb push xor sahf adc dec mov (bad) jne (bad) pusha ret mov pusha addr16 or ljmp and and pop mov xor pop mov pop push and movsb movsl pop xchg mov inc mov mov inc icebp dec cli cmp cmp lahf pop loope xor inc test or adc push cmp dec dec or out inc addr16 sub jle lret int3 or jp divb add jno adc sbbl sbb or daa idiv add xchg add stos adc jb fsts (bad) cmp fnsave les jg add in (bad) add stc pop jne pop lahf dec out jb push cmc jns mov or shrl mov int3 sbb movsb mov gs push lods push ds iret sti adc add or mov lock lods pop pop push lahf out xor out push inc cs outsb sbb and sbb xor neg nopl enter mov xor or orb int inc je xchg push arpl sub int cmc scas aas push (bad) das push and lods hlt out lea add (bad) dec lahf mov xor or mov in push enter cld pop pop pop mov jle sub loop (bad) and pop xor leave andl ret lcall dec push push setge pop add addr16 pop mov (bad) and aam flds mov mov mov int add dec sahf pop repz mov outsl and (bad) push sar mov dec movsl add push and add sbb call out jmp movsb jae cmp dec bound (bad) divl cltd xor out xor add jg jmp sbb movsb in add add leave mov inc lock jmp adc cmp mov sbb std add xchg roll cmp mov (bad) shr push mov mov or push xor pusha out mov or jp jl in jge or pop jmp pop (bad) lret inc in sbb jnp and pop js xor movl notl stc and jmp repnz mov sahf xlat jo leave (bad) pop add nop push or popf pop je sub dec clc pop sub cmp or xor jne and imul dec mov mov lods jmp sar jno xchg mov outsb mov cwtl push out sbb lds pop in (bad) and pop push rclb leave push lods add icebp ret xchg xor pop sub sbb js popf or in xor ljmp push add push mov add pop mov sbb mov outsb add push mov jp pop out push push pop movsl sub pop inc push (bad) into pushf sbb popf mov push pushf cmp sbbb call mov int xor mov adc add xor (bad) jmp add dec push jmp and mov sarb xchg (bad) shl dec cmp cwtl push add dec test push cmp mov lcall or gs or jle adc mov add sub dec adc inc call pop into sub sti dec push in es jl pop mov push push es daa aaa push push cli (bad) hlt inc add enter sarl fcomps push (bad) mov fldl2t and adc sub aas movsl out iret cmc lds aad push insb adc incl aam xchg dec mov or pop clc push jmp ja push icebp ret pusha pop call dec nop jle sbb lahf sub push ljmp adc mov aad push std mov test sbb jge mov js inc neg mov add addr16 cmp xlat and mov adc adc pop push insb add clc imul stos aam decl and ret or nop pop stos xlat xchg fcoms jl iret cmpsb mov add minps daa (bad) lods fdivrl pop xor cmpb cwtl dec mov add into lcall mov or pop mov push xchg mov js mov add mov sub negl and push loope js pop mov pop daa xchg shr mov insl cli pop ret das outsl test pop xchg push pusha loope push or push cwtl popa adc fucomip and in add mov dec repnz sete pop inc adc sarl fwait notb dec adc xchg adc test shr fldl in insl pop cmp and mov xor cs or insb out sub ss test es rorl add pop cltd outsb ret test jnp insl add add bound cmp call fiaddl lahf mov add ja iret ret or addr16 hlt adc jge js and pop and sbb push lret dec dec mov add mov mov ss add popf and insl jmp add pop mov data16 lock xor push push jmp cmpl mov test inc out mov mov pop push cmp push pushf test hlt pop pop xor add mov clc or xor or lds je inc roll arpl arpl out xchg sub ret jmp cld inc sbb cld mov jmp or pop outsl cmp dec push push in loopne mov cmp je add aad scas mov or dec inc add pop shr dec jne sub or (bad) xchg dec addl daa ficomp pop shlb and mov jbe mov loope std sbb mov push lock jmp push in mov xor mov xchg pop jge add fistpll out fistpll popf fwait xor outsb ds mov push dec sbb fisubrl pop cld sti imul pop mov cwtl jle fs and lock sub and or jne ret or jg add jecxz cmc sbb inc arpl sub ficoml cwtl movsl mov inc aam mov std sahf or iret mov lcall dec shr pop cmp loop adcb ret imul mov dec push cmc cmp mov jo sub jns add jmp jmp inc and xchg notb mov pop adc and mov push or dec jmp out dec jne (bad) movsb inc push xchg push mov jae stos fdivrs dec daa jmp mov testb cmpsb xchg stos ds cltd sbb dec aam pop xchg test adc pop xor mov test adc jnp adc mov gs aaa aad lret movsb jae or enter dec pop jmp or repz mov cli scas jo mov movsl lcall and test sbb cmp pop pop ljmp mov inc adc jp mov jne test scas xor push (bad) icebp or rcll call jg scas and pusha cmp cmp (bad) notb or aas pop push push pop dec nop mov jmp hlt je cmp cmp lret dec mov inc inc test ja dec aas testb dec mov test sub shrb shlb push out adc jmp inc pop cmp sti daa pop push in add cmp test addb cmp lds or ds or (bad) rorl push stc hlt pop mov (bad) (bad) mulb pop stos jmp pop repnz dec push add cmp repnz adc add jmp roll in mov pop cli add push iret or aad aam ret ja mov jmp inc xor outsb add inc enter mov aam sbb xor pop or mov mov adc adcb pop adc daa mov add gs push (bad) inc and rcrl jl mov pop pusha ret cwtl nop mov xor aad push cli xchg cmp push in addl aaa sarb lret inc jne ds cld in lret ljmp popa push push xchg stc int (bad) out or mov xchg test mov bound jle jns ljmp jb aaa push test sbb inc sbb adc pop adcl idivb push mov mov scas repz dec test arpl cli stc push or insl (bad) gs adc sbb pop lret mov xchg jle sub add or in iret flds addr16 daa cmp sbb js xor sub sarl and mov sbb pop rclb mov in sub es subb jecxz jge sub sahf mov sub repnz rclb lock xor pop into mov sub and adc js orl in shrl add cs sbbb push and icebp sub inc aad bts mov or ds lea cmp rorb mov add fiadd shr xor add (bad) iret jecxz ret push mov sbb sub add cmpb out ret xchg fs jecxz subl inc in adc cmc add inc popf pop fsubrs xchg adc xor repnz sub cmpsl jecxz add popa (bad) ss sub pop clc lds pop lcall mov loopne cmp and sbb cmpsl jnp int3 mov repnz roll in jne je mov xor aas fs add pop sub jo ret lods aaa xor pop or inc out xor imul lea or adc and push ret repz fmuls fldenv daa pop push je jnp and daa or (bad) jbe push mov mov rorl push fidivrl dec icebp jnp clc cmp repz ret and add and fldl dec and movsbl inc fstpl divb imul and imul in cwtl mov std xor popl pop imul aas (bad) xchg push arpl das lret xor cmpsl jbe cs clc or pusha jo (bad) inc arpl dec adc in mov push or pop subl xor jns pop jne stos imul fs sbb dec mov sub mov mov add and inc or stos or iret pop roll repnz rol ja or add inc or rcrl gs cmpsl ja fwait nop bound mov stc or or pop or jg sti cwtl repnz das ret loope in inc and xorb icebp (bad) ror sub lock and (bad) dec adc leave push xor adc sub in out lock pop dec jae adc int3 dec xchg adc push lcall xor sarb loop jge jp (bad) cmc or enter cmp gs cmp lds mov int mov and rol in leave flds pusha loope (bad) fldl sub mov add jnp daa sti aam adc movsl cmp insb add roll inc inc ds lret push pop dec mov jmp (bad) fimul cmp and xchg mov xchg enter and dec hlt sub pop mov in pavgw push lret mov (bad) ficoml sbb ja mov and nop mov pop aam addl and pop mov xor cli into cmpsb sbb cmp int push dec in pop mov ret fbld sub jns call xchg (bad) mov and pop shrl dec test and out inc pop xlat (bad) imul cmp daa jb mov cmp sub es mov jmp add mov cli sub mov insl adc mov and jle cmpl (bad) lahf leave loope jne inc test fwait or and add sub push mov sbb sub adc sub jg and iret div cwtl push xchg pop and popa dec repnz orl es push push ficoml repz ds nop add in push loope outsl adc stos rcll add scas dec mov popf xor add pop jmp inc sahf mov lds js push add jmp xor iret jns rorb insl ret hlt outsb lods dec inc cmpsl and in iret outsl sbb add stos cmp xchg adc adc sub sbb js lret sbb incl mov mov and jmp xchg pop add ljmp sahf fiaddl stc pusha xchg mov pop inc imul mov mov add xchg les jmp xchg dec push bswap (bad) (bad) and flds pop mov pop jl rclb shl jge xchg and and inc fstp push adc mov rorl cmpsb or cmpb jo movsl xor push sbb mov mov aam and rorl cmp loopne pop mov mov add sbb (bad) std sti repz dec ss xor mov lods daa cltd lds ljmp jmp xor test pop in and clc dec mov test outsb repz cmp mov icebp (bad) stos add mov cmpl jmp mov adc jmp mov mov (bad) mov fs fdiv or mov imul add icebp fisubrl ret xor aas jg sub inc out (bad) jns dec fadd xchg sbb and adc xor jo inc fwait cmc add lcall cmp dec pop mov or or fsubs xor int3 sbb mov mov pop loope das mov outsl pop push fs xor inc movsb scas call jmp mov sbb xor jmp xchg cld pop or jmp clc adc or pop add sub sub daa xorb mov orb daa enter cli inc imul dec ss aaa adc sbb jbe sub or int3 and cli jnp sub sub sbb pop sbb lds in dec xchg mov adc out mov mov lahf stc xchg sub push pop jne inc daa xor add jl mov xor test add or xor shrb cli xchg cmp outsl push sbb add xchg cmp sub sub jge test inc test mov push cwtl sbb sub mov cwtl mov xchg mov in lret jns sub pop push pusha insb adcl (bad) xor dec out mov daa data16 fcmovnu fisttpl sbb fisttp add mov xchg jbe movsl out daa push dec add inc popa jmp les out jno in pop cmp das jmp out hlt push push rcr insl sar ljmp mov sti or pop dec popa jbe js movsl add mov sub cwtl lods jmp lods test xchg adc repz scas jno jmp rorb jg or iret inc lods lds jle xchg jl cmc (bad) int3 addr16 mov aad or mov xor cld mov iret (bad) aas aas and adc repz jno loope outsb rclb pop jg dec pop lds aad and loop in pop leave mov test or mov sbb push jno mov mov inc hlt loop mov ljmp xchg lss push push icebp fiaddl ss in lds ret inc and loope cmp stos sub adc mov lahf add je (bad) mov pop cmp shrl clc pop add adc jecxz sub dec push lcall (bad) in mov iret pop fisubr out lock pop push xor inc dec testb or jo cmpsb mov add xchg jae cwtl and das push insb dec incb pop mov cmp add sub rol xchg inc ja call (bad) neg in pusha sbb pop pop push out cmp jo add mov (bad) cld imul mov fadds xchg push inc inc mov rol adc test fcoml divb fadds repnz mov adc lock adc ret pushf aam xor add push pushf inc sbb inc xor ss dec dec cmp dec pop (bad) rcl arpl lret and cmp lods xor or mov cmp mov cwtl xor nop pop xor or (bad) addl mov out dec adc mov pop nop icebp pop xor and add loopne xchg jmp sub lods nop adc pop test mov sbb xor dec jnp add jmp ret rolb imul pushf sbb pop pop popf ja xchg in push ret xchg or arpl push ficoml push (bad) outsl mov add (bad) stc sub call or sub inc lock or (bad) insb cmc popf pop dec push mov ljmp mov ret or mov stos ret mov xchg insb adc jle adc jo fildl or rol pusha mov movsb mov dec and imul push push inc shll and adc xchg cli test inc or dec adc loopne sub dec lods or or adc jnp pop out mov xor movsb add nop (bad) sub lret pop sub or sbb or dec push add insl pusha imul aas les nop je xor imul out inc or pop add movb pop jb ljmp mov adc adc cmp add push rorl dec pop leave cmp loopne jmp repnz (bad) mov cmp xor in xchg xchg lret cs shlb push xchg mov scas fsubrl mov mov imul sahf popa dec fucom dec mov cmc cmp cld mov cmp add pop jmp nop pop add in es jb push push popf mov push mov popa push mov pushf lahf nop sub call pop cld std jmp jo inc cmpb mov insl jmp pop push pusha iret pop and push add pop scas rcl lea dec push sub pop in jl (bad) adc dec adcl faddl outsl push dec jb inc ret sub aaa sub mov lret lea rcrb push xor cmp and out sub outsl cld pusha jbe dec adc push pop or jo (bad) mov jmp in xor adc lods les (bad) int fdiv je pushl xchg mov imul stc outsb mov ja sub ljmp icebp mov pop mov (bad) pop sti cmp dec inc stc push ret dec mov jns imul jmp or add mov push nop or mov lods hlt int xor leave sbb das ja sub inc aam cld add push arpl jb inc or or and jb add js dec adc push aaa jmp punpckhwd xchg dec push mov adc jmp icebp xor add sub inc xor push push mov dec push scas adc pop (bad) stos jae lret lret push push pop out ret push pop mov jmp das loopne or pop sbb aas jb popf scas or push shrb movlps push add mov shrb and xor dec dec jae daa roll dec gs lock push ror jne outsl icebp sti idiv inc cmpl (bad) mov mov push push decl mov and out rcr cwtl pop pop push (bad) mov andb shr adc pop fmull ret je cmpl repnz lods call jb testl inc push dec and and cmp push push clc mov push mov fidivl not inc jno dec adc xchg or and mov pushf sub ficomp mov and and add or push ja sub lock cmc scas mov mov sarl addr16 adc int3 or sbb mov cmp add adc or mov imul and add cmp js jg xchg or lds loopne xor jb pop popf aas xor inc jb add dec je inc xor fcoms inc push and mov push mov lods movsl adc pop jne adc scas xchg sbb adc pop mulb sbb mov sarl iret call (bad) out cmp pop imul or xchg add xchg mov pop bound inc lcall mov push sub cld fsubrl dec fsub inc dec mov subb (bad) sub lret fsts adc mov cmc outsb sub push jo cld loopne xchg pop xor adc pop sub ds xchg jnp xor and call xor xchg push cltd inc sub loope sbb test pusha es repz dec rolb rcrl aam movb jle dec cmp push cwtl ja inc pop ljmp js (bad) mov std pop test into mov xor (bad) repnz cwtl std add dec movsb es andb sbb or jmp adc sbb (bad) ds add pop daa jmp xor lods std test mov pop mov sbb nop repnz add jno aam out push or sbb ficoml add ret jmp lret push or sbb pop sub dec inc lods push pop and sub pop mov cmc adc dec loop xchg sbb divl sbb loope or pop out mov and mov add rorl mov data16 int3 int push mov shrl cmp adc mov imul push push cltd dec push in mov insb mov int3 cld lret mov adc in pop pop mov mov (bad) lds add push pop fstpl shrl sub sub aaa or and push mov jp repnz pop jmp xor add cld cmp xchg push mov push or dec ja icebp cld mov sub or dec pop ds dec in scas jl add shl neg mov or push and cmp jecxz cli aad xchg jae or or imul inc outsb jnp xlat dec je daa fisttpl jl mov inc stc sub push out int das xor in mov cmp mov addl xchg flds loope xchg nopl and mov lret aad pop lahf sub icebp (bad) dec cli adc lods or adc sub add rorl inc push jmp sbb inc add add movsl push mov outsb mov gs adc cli push mov imul mov and ja add les lods sarb mov cmp daa sub inc pop inc push jo movb push add (bad) rcll push mov mov lahf mov jae maskmovq les clc jo mov dec sbbb mov add nop xchg sub fistp cmp mov sti mov jns mov and popf notb push stc and pop sub out jmp xchg jne cli pusha jmp or cmp push data16 prefetchnta jg xlat pop add nop dec add push cli push mov add adc pop mov mov mov push pop nop add push out call pusha rcll dec adc (bad) not aam push sbb repz xchg (bad) or rcrl fst rcl inc xchg pop push push push inc add addr16 jae adc push jnp sbb inc jne jl adc xor adc xor xchg pushf stos test out jnp pop mov pop jns arpl add mov inc movsb jbe add (bad) pcmpgtw push sub test mov mov ret les pop sar push add xchg mov add mov sub ret pop in sbb fs dec push rcrb mov or inc pusha iret mov cmp dec jmp sbb call and inc (bad) xor leave or xchg add decb add or jne pop or jle sbb pop add (bad) test pop add lret call and cld pusha and jnp and hlt or pop (bad) mov push ss (bad) adc fist mov sbb add movl fiadd rorl popf mov sub mov pop xor jnp test mov mov loopne or add int3 lret arpl xor mov push mov add mov push adc mov imul inc jle out adc pop pop (bad) mov movsl vpmullw sub pop adc mov scas in mov sub cmp xchg adc in inc int add inc shlb cmp lods mov adc sub push xchg sbb pushf stos sbb jbe dec jmp inc loope in mov mov popf aam js push mov push cmp or push cmp test xor lods sub call inc movsl sub jg aad (bad) mov push pop clc fs mov and into mov mov fsubrl jmp xor inc push pop popf testl mov sub push sub (bad) into adc popf outsl out mov add mov cmpsb xchg inc xor jne call bound mov add adc (bad) xor xor adc (bad) sbb pop andb adc repnz mov push mov cld lea and cmp adc ret lods sub or loopne jns sub adc add dec mov leave (bad) (bad) shr ret out add jb imul mov das pop pusha sbbb ljmp xor rorb pop jmp sbb nop ss inc lret lea mov dec adc lods add or or mov int3 shrl aad cmc cli push repz addb push pop inc or loop rcrb jo and ficompl dec add js mov mov outsb loopne jl inc rcl rcrb adc mov pop mov add sarb xchg movsl sub movsb or test xor scas in outsb sub mov xchg mov or cli adc aad js xor test push push lock inc add push inc push mov and dec cwtl data16 pop jns adc cltd adc aaa loop imul mov pop inc mov sub push inc mov jnp jmp in add notl xchg sarb xorl jmp lds jns popa jmp fisttp push push in sub xchg or fdivr push mov push mov add add jno add imul dec jge push adc pop lods sahf sub sub popa xchg or cmp xchg test sbb scas dec shlb jbe clc repz adc add dec test jmp xlat mov add sub sub jne movsb mov ds sahf and test fild cmpsl push push bound xor pop fnstcw or jnp cmp sbb leave xlat pop clc scas xchg mov (bad) push xor lock pop popf push adc mov pop add pop push push sti ret mov out adc lock mov test or ja lds mov jne jmp imul or inc scas or mov jl and mov adc je jbe inc pop xor jnp cld or gs or sub sbb and outsb int3 mov mov jmp aam int3 shlb decb loope shlb adc or movsl scas aam int3 ret fs lds push lods fbld push hlt rcrb push out sbb and adc adc cmp out jmp jns pop jno or jg jo imul jo cmp dec lods movsbl pop lret loop pop sbb loope jb popf std mov ret icebp or jmp xchg push loopne xchg sahf fs int3 scas jmp lds dec icebp jbe pop out jno xor or imul movzwl repnz cld add (bad) aad addl jbe add lret test rorb jl or sbb xchg or mov in push out cmp add shl sub les jg inc mov add mov movsl add test stc push pop and nop jo test bound insl enter mov andl jb cld dec push or mov xor cmp adc jb xor sti xor mov popa xchg pop jg or xor or (bad) pop ror hlt jge dec dec addl mov pop sub jg adc jg adc lret adc xlat out sub leave nop popf enter bound notl outsl sub push div jbe jmp fidivr loope cmpsl sub pop push mov (bad) jmp movzbl cmp imul loope ljmp ja adc in cmp in mov outsb aam scas sbbb cmpsl inc dec add adc push jne pop loop jl popa push hlt bound xor mov dec mov push cs pop outsb inc xchg in stc xchg bound fs aam jmp cmp or or icebp lds lock push inc xchg or jecxz pop mov add imul nop adc add or sbb mov mov inc rcll daa loopne xor lahf out daa insb aaa xchg cmpsb mov push xchg fdiv add js or inc jnp add push xchg jg stc jmp aam cmpsb lahf jno imul xlat rclb sub and pop outsb add test mov das xor sbb movb mov insl cs addr16 xchg sub or sub add xor jns or inc or or data16 rol in das xchg out cmp jmp stos or loop add cmc adc insb repz pop lcall jmp testb jg scas rclb pop pop jge push in mov or add jbe add inc (bad) or jmp adc mov popa ja cli add je pop das mov jmp dec lret push sub push nop cmp popa jl dec ret hlt lret rcll pusha fwait or inc mov pop sbb punpckhdq mov add das mov push dec adc out lds sub out inc sbb call inc icebp sub out imul mov je add mov outsl inc out jnp lock xor repnz insb rorl popf cmc jbe lock xchg cmp mov inc pop pop ja sbb xchg out inc cmp jbe jne ds mov pop jecxz xchg pop lds add pusha in cltd pop inc jns stc mov adc jmp push jg sbb rdmsr ljmp mov xor clc jg out adc in xor or mov rol mov push pop push fsubrs xor jle movsb insl sub sub jmp sub enter adc pop dec repnz add prefetchnta adc pop int push pop call loop andl dec sub push (bad) ljmp push hlt stc rorl (bad) xchg xor push mov mov shl in sub addr16 out out dec lret bound dec pop stos fucomi pop mov loopne pop mov imul push loope arpl adc lock push ret ljmp mov mov jno mov mov inc push inc scas mov aas aad jecxz push push push bound and mov mov jbe call pop sub mov pop sarb push rolb cmpsl cmpl xor jl pushf or jmp push inc push cmc scas add push ret leave fs lods hlt inc pop rorb and popa nop xchg dec jne mov test push jmp fs sti push mov inc jmp cmc stc xor outsb sbb jg cmp add push push lds pop (bad) cld ror (bad) push arpl pop test jecxz dec mov mov repz ret out hlt fimul das mov aad dec (bad) jmp pop push mov adc das pop loopne inc lret ja hlt mov mov outsb sbb sbb ljmp dec decb (bad) inc xor rol or add icebp or pop mov sbb sub cmovae cmp adc in insb adc xchg fnop add in mov mov notb cwtl add mov mov mov inc aaa sbb fbstp inc push fiadd jl dec in mov mov pop ret cmp out (bad) jbe das (bad) sub std jecxz daa jno inc daa push push bound adc add js sub daa ds call sbb mov lret jmp scas rclb xor in dec inc or into jo cmp sub das shll and jmp add bound lcall add pop scas cld cmp ret sub add pop dec pop inc pushf clc out sub in jmp adc xchg xor cmp push cmp inc (bad) jb mov loopne mov sub xor push jb mov lcall adc aam inc mov or push sti inc ss jo dec inc mov (bad) jbe jp add (bad) adc aaa jo jae or loope pop pop rcl decb enter sti xor mov ret cltd jmp orl iret add test adc (bad) xchg mov js push mov or push push mov repz or or adc aas lcall cmp jge dec pusha mov cmp (bad) scas rcr and (bad) int pop or mov cmp mov (bad) jg dec add daa mov xchg jmp dec fnop sub mov xchg dec clc push cmp mov mov out shr pop inc movsl cmp lret enter movhps adc loop add andl wrmsr adc and stos sub pop push push nop dec das mov cs jmp pop add hlt inc and dec pushf imulb ds popa cmpsl bound add addr16 pop hlt pop dec inc jnp sub shrb sti push cmp repz mov into sbb mov pop mov andb jle in lret push push imul out sbbb (bad) sub movsb mov mov lcall dec jmp xchg hlt dec leave fistp inc jmp pop dec leave push xor pop in or sbb roll stos ret or popf jnp sub or daa add cwtl pop push mov pop xor ss dec pop mov xor sarl jg jmp in inc add mov in lahf sbbl rcr ljmp mov test or jg int dec fs jnp popf push and inc and xchg xlat inc mov pop dec add dec div or add sbb je sub pop out dec push xor mov adc mov (bad) ja push pusha outsl aas in loopne sub imul lea lret push fbld push imul or in dec adc sub sub jge cmp test add xor push pop sub rol ljmp pusha xchg mull jo outsl push out push sar adc mov xorb lret pushf dec cld ds cmp ss in lcall sub cmp sbb bound lock fs mov sbb neg and jne fldl sub std push xor jl and test adc sub shr add add jmp in clc dec movsb jno shl cmc mov and inc aam inc bound inc es incl mov sbb sarb test inc jp cs pop push or dec add aas rclb push clc cli adc cmc gs outsb insl fnstcw jo and lock dec mov arpl xor pop test mov inc cmp jg mov arpl add sub add mov dec sub mov push add inc push pusha and loope call in jmp bndldx in mov jp imul std lea rcrb pusha jb add (bad) push cwtl or imul mov sarb (bad) jb push pop hlt (bad) jb inc inc adc (bad) mov ret lock iret je,pt sub scas je jmp fistpl inc ja ret mov or adc mov jle addr16 jmp mov lcall movsl lret dec shrl mov push sbb xchg push inc inc mov rcrb in data16 inc push daa jge or mov test jmp stc xchg push movsb mov or ds call fucomp xor cli xor pop add inc jo inc mov xor mov mov fmuls or outsb sbb test jnp and rorl pop pop xor jmp (bad) inc pop inc pop clc xchg mov add dec les jmp not pop push cmpsb pop dec les push mov ja xor sub push test mov arpl lahf sub pop pop clc icebp jae movl ja daa lods loopne push mov sub xchg jmp sub iret jne jmp sbb push cld add roll stos cmp push and and cld xchg xor in xor jg xlat leave test sub loopne mov or jle or data16 push push sub or jmp sbb cmp or xchg jmp cwtl cmp std pushf outsl pusha cmp pop and scas mov push mov xor mov push (bad) cmp lahf addb popa jmp push roll imul negl cmpl repz inc ret lea negl or arpl repz ret and add cwtl mov sub fimull (bad) mov sbb mov mov xchg cltd (bad) out add in fs add jmp ja orb mov push pop pop std mov fs in mov lods iret lods fs inc faddl pop test mov push or pop push lds notb mov lods dec out jl (bad) bound mov ds int mov (bad) jo add cmp gs mov dec cmp roll imul enter xchg inc inc jae ja and or push dec aad fld pop xchg and push rol push rclb sub std adc ljmp jge jbe add test pop (bad) pop inc aaa loope push out and test mov push or or setb sbb cld hlt push ret mov pop ret dec jp and loope dec sbb jbe pop jne fmuls xchg loope (bad) pop shrb or addr16 pop sub in push add sub sbb arpl rol add pop cmc mov (bad) loope cmp into test fiadd pop jmp mov jo xor lods pop (bad) enter stos movsl inc imul pusha cmc jb lea out shlb hlt lock sbb out pushw inc mov mov jno sub add jno pop push xor inc add test xchg jmp scas ret sub mov nop inc ret clc aas or mov ja ss clc push pop in fisubrl sub mov add xchg repz je leavew push pop add add or adc xchg dec adc pop xor xor xlat lret repz out inc add pop push mov inc jge cmpsl and loope xchg mov push (bad) adc addb enter in xlat push xor pop movsl loop repnz add movsl mov adc jecxz and lret mov rcrl das add shr ror pop (bad) dec push fwait sbb lods xchg inc or add lahf inc in adc sub or loopne call inc sbb (bad) mov inc jo add ljmp dec cmp jnp push inc test inc cld jmp cmp fldenv push pop jle popa mov mov in (bad) repnz pop or pop and cwtl stos bswap jg dec fs pop out sbb add or push mov and sti rol or (bad) (bad) (bad) sub dec push xchg xor adc ret fs or insl insb repnz jp dec pop jge mov and mov mov push enter js mov mov mov into sub mov pop cmpb xchg mov icebp xorb cmp in inc pop rolb xor ljmp jmp ja sahf fldcw lods dec aad sub jnp push je push mov pop xor pop loope subl movsb or jmp mov xchg cmp leave fadds push das sbb push jle aas aas inc int add cmp inc add push mov imul loopne or mov lret inc inc lea add pop test aas add pushf xlat das push movb xchg cld mov sahf add pop pop add mov add or jbe and adc mov push ret jno dec jl add adc jno push dec int pop jmp mov push lret push jge (bad) sbb ficom add jecxz stos pop push lret jae or cwtl mov pop xchg mov cmp (bad) dec push sub jbe xor xchg jns je rclb mov sahf int in repnz jbe add pop sbb push movsl xor sub js mov sub jo,pt call jmp xchg sbb ljmp xchg and jo in mov fldcw je inc (bad) std daa dec dec add xor mov rolb faddl xor add sub jb mov jle inc jmp repz push loope inc add xchg loopne and lcall sbb xchg (bad) loopne xor add jg xchg aam push mov repz and or and outsl adc cmp fildl and jp xchg out test into or mov add shll or aad sub bound adc pushf sbb scas cld stos movsb sbb (bad) xchg stc cli in xchg (bad) data16 lea add sbb mov imul test mov push add jae test lcall inc and or dec adc jmp jne mov xor push enter add pop add movsb (bad) or mov jl aas shrd and push mov not sub insb scas adc (bad) das push jbe mov out push or adc jmp mov shll mov sbb adc aas loope push pop nop add push xor sub repnz fldcw aam (bad) jnp sti jno lock cs notl cmp jmp xor jmp mov add pop loope pop adc idivl pop call inc jo cmp arpl sbb popf loopne add loope nop mov mov (bad) cli (bad) mov call repnz pop xchg and or jmp add jp mov shlb and fadds push leave pop stc push xor inc pop push or push cwtl adcl (bad) mov push in clc or nop inc mov cmp out (bad) daa jns jle and xchg or and push pop inc sub sbb pop mov pop dec push jne fwait jge inc xchg dec jl jb ljmp or lods mov or sbb cmp (bad) xor loop daa adc mov and jbe and mov mov rcrb daa mov pusha inc lahf add inc arpl sbb add (bad) adc mov push jl jb sub pop pop pushl cmc pop jno mov btc or out mov out push outsb cmp add mov push push cmc xchg mov call push adc sbb sub testl pop ds imulb sbb mov setp jns add shrl dec pop lret push pop imul and fnstenv cmp sbb mov nop add adc js pop pop mov scas xchg negb (bad) push cs dec daa dec mov jno shlb neg jge mov pusha int3 push pop or xor ds lahf jnp mov push (bad) xor loopne cmp test icebp mov xor (bad) sub jmp xor mov hlt adc (bad) and dec mov inc cwtl pop rcrl cmp lods test popa jmp pop push cltd nop jl orl mov lea xchg fldcw inc jbe movsl maskmovq add rorl dec sub aam or cmc cmp mov cmpsb mov dec inc add mov push or push push push mov sar lea mov pushf js int pop std aaa xchg pop mov push (bad) insl out test (bad) mov stos (bad) jmp jae inc neg inc test add aam inc sub push mov mov lods pushf mov inc mov xor add faddl loop lahf push inc add sub push cmc inc scas ret inc or mov (bad) in in fistpll mov stc dec sbb pop cmp (bad) cmp add sarb (bad) sahf dec add mov imul pop into or data16 sbb out (bad) jb xchg jmp fcmovnu in rcll nop and xchg movsb and add mov shlb push push mov mov jl movsl (bad) inc xchg fs pop mov sub xor cld push stc adc pop cld in push sub add add and ja ja mov adcb pop mov jmp mov dec pop adc dec in lds mov dec push dec sti xor dec ds dec or notb data16 push incb (bad) mov sub and mov sti xchg leave (bad) mov add js push mov add push nop hlt add xchg push push daa rol mov xchg jno leave out add cwtl rcrb add xor repz cmp xchg cmpsb mov das mov div stos cld sbb adc int sbb in loop mov in in xchg out and nop imulb or fsubrs jo mov mov mov add out cmp mov adc fwait sti daa das shr out cwtl cli lahf imul push scas mov adc sahf inc xor or jo xor mov flds lds push nop dec cs xchg les mov ret lds dec mov test dec push sub push pop movsl inc inc pop push mov int3 adc outsl add push scas rcr mov adc dec jp cmp cs mov xchg negb loop add xor icebp (bad) outsb lock adc cmp rcr addr16 xor ds negl add pop sub jl imul mov cmp cmp insb popf fmull popa repnz cs pop push test icebp es cmp pop mov call push sub cld xchg pop mov lock push or lahf mov fnstsw push mov xchg jae cmp push repz sbb loop sti xchg cltd pop jg out jb or int3 loopne int ret lods add cltd mov (bad) adc popf (bad) repz (bad) ss test ret mov dec or pop test push loope in repnz inc or jecxz insb or push stos or das push sbb add push repnz adc cld jmp mov jmp and sbbl mov xor rolb out cmc movsb cs jl pop cmp cli enter pop xor and xchg (bad) repz mov add xor loopne pop repz sbb inc or std xchg adc push pop decb arpl mov push and insb and mov add dec pop jg mov xchg sbb pop xor dec jns fldenv lods stc and push inc xlat jl mov test jno pop (bad) in mov (bad) sbb adc add nop push leave pop or int3 xchg pop jb pusha add hlt rcrb or jp loope or fs idivl jmp rorb bound shr in add sbb faddl pop mov sub lret sbb xchg or adcb daa sub cmp sahf cmp or in mov leave inc sub jg,pn mov icebp sub dec jnp jno out enter jecxz xor outsb dec or and test dec daa sub mov sahf add shrb int3 and je popf pop mov stos mov aas mov lds jnp pop cmpl clc push dec mov inc fwait enter adc mov fistl lods xchg add add shr add cmp cmp stos add popf loop sub sbb aaa push add push push dec jl sub (bad) (bad) mov insl repnz and sub (bad) xor cmp movb jnp neg lret jg mov ret gs add iret rclb jmp push push pop sub mov (bad) call sub bound cmp test imul cmp jmp xor repnz jnp add cmpsl sub adc test sub sarb addr16 mov inc sahf ja mov fild push in mov cmp lods push add in push cwtl mov mov pushf decb xchg adc jns cmpsb std sub dec pop test ljmp dec in (bad) cmp loopne mov cmpsb movsbl push jmp sub push daa add xchg rclb je and mov sub fisub shll lret mov mov outsb jmp lret ljmp jae je or push mov ret hlt fstpt sbb xor sbb iret dec and pop lcall in sahf arpl xlat push xor push fnstenv sti test lret cmpsl pop into add nop mov aam fsub les (bad) popa pop rorb das pop (bad) mov fidiv adc push push push or ja fbstp leave ds or adc dec mov int mov fiadd and aas (bad) lock scas leave (bad) xor ret mov push or imul mov lds mov imul popa xchg pop pop xor jg aam and sub pop dec mov xor fildll cltd mov lret xchg ret sub push push lock push mov mov scas dec or sub lock dec bound scas jno inc jmp popa dec jae add loope push jbe (bad) jmp rclb add inc and push rcrb sub out gs dec dec cmp scas roll xor sbb cmpsb outsb pop add jp add in and adc test pusha test rcrl (bad) pop mov xchg xchg std fdivrs pop mov (bad) cld jmp add mov arpl push and cwtl push or or push mov cs aas add dec sysenter cmp sub das mov push pop pop push pop cld xlat test adc rol fs push dec pop adc les mov cmp and aas fcoms pop outsb add call dec ljmp out sbb mov addr16 inc jge mov or data16 inc arpl pushf test lcall pop mov aas pop les add xor jmp mov sub idivb mov or fdivr mov cltd cmpsb cmp ret jl inc jns repnz push inc inc jmp dec and lahf loope adcl loopne,pt jecxz xchg popa mov lods mov movsb mov xchg xor push sub outsl loop inc push mov (bad) divb clc sbb ror daa (bad) mov scas sub adc test mov in pop pop push mov shll shlb add (bad) cs sub imul fstps stc mov push fdivrs rcll (bad) inc inc lahf mov push mov pop pop mov bound sti cmp pop push mov sbb dec and out inc icebp loope fstl cmp pop mov repz dec mov mov push pop unpckhps loopne aas mov sub xor mov js jmp (bad) loop (bad) (bad) stos call rorl add es push dec adc xchg push fstl push push mov dec mov add sub adc push mov stc dec jmp movsb cltd rolb mov call mov push or dec pop and std sbb (bad) xchg sbb stos daa inc add jmp es fildll push pop mov push and inc lods inc jl (bad) loopne cmp fxch or fwait outsl in (bad) test dec and mov jns dec pushf mov roll push push push mov mov adc pop neg add andb mov out add mov adc or pop mov jne push cmp addb lds adc aas adc mov push or sub jmp rol pop cmp std mov imull inc or mov dec fistpll add leave mov sub pop or ficoml enter jecxz repnz outsb aad loopne adc mov xor mov sbb mov adcl out adc pop sub mov (bad) dec cmpsl xor je jae mov ss lahf mov add cmp or xchg xchg pop sub lea inc and mov test push or out adc jmp adc lock inc dec in push cs mov sub loope (bad) xor mov inc insl cmp scas test add pop jmp and or xchg jmp mov hlt adc add sbb popf push insl wbinvd pop push orb pop add add and pop ret pop push and scas add push popf mov or add xor in push lcall lret mov add jmp jne mov xchg lret and jno imul sbb push mov dec lods cmp xor mov inc dec dec popa pop out add fisttpll cmp or pop and ret add xor loopne push jl and orb push pop jmp and int3 xchg or out shrb mov pop inc sub stos les add push daa jmp fs das adc add push xchg xor pop jo rorb and inc inc sub and aad dec xchg xchg cwtl or jmp jg loop xor adc dec xor ja lock popf xchg sub dec or push inc mov add mov inc cmp ds (bad) bound jge add es aaa mov jmp pop adc jmp inc cmp xor fs dec jae sub stc mov add inc lock mov ja xor jmp or xor ljmp insl push cmp jg sub ret xchg pop add mov xchg int3 popa or cld mov pcmpeqb and sub out push or jb pop mov sti pop xchg pushf cltd dec loop out jmp push mov inc and add cmp das lods (bad) mov pop mov add adc lahf in and sub sahf lea ja fbld push das nop xor add mov push test mov out (bad) cmc clc sti or aas jmp sbb mov push xor push (bad) jo jbe das jle and pusha rcrl pop pop loop roll mov ret ret xor daa pop jno pop add inc or mov cmp dec pop mov xor rclb pop xlat stos into (bad) jo sarl inc xlat out mov sbb and and sub inc insb pusha fwait (bad) out add out dec clc jp push icebp pop mov pop pop scas fnsave mov and cmpsl icebp dec ja cltd insl (bad) pop ucomiss sbb adc add sbb cmp add push dec and mov mov out mov test mov sti in (bad) ljmp xchg mov sub aad xor pop xor ss pop popf sbb jns xchg clc movups aad fs mov jmp in mov mov (bad) jns ds xchg add in add ds inc adc int add fistl je loop cmp int sub jb jp cmp dec add insb leave xchg (bad) push rcl outsb mov dec mov outsl fiaddl or jae and add pop dec les add add stc arpl stos (bad) cmp jne scas addb mov inc or dec mov inc push adc lods out sub jbe pop lret sub add shll jno dec repnz cld movb cltd dec mov lcall cmpsb js xor pusha int add mov pushf push or lock jnp ljmp in stc cmc movl xor cwtl dec dec xchg iret cmpsl (bad) call (bad) cmc and loopne mov fidivrl (bad) fsubr aaa mov mov xlat test xchg icebp pop testb jns ror mov adc jmp das call lret int inc sarb ds sub jo mov jp arpl mov inc jmp sbb mov lds sub xor sub xchg in repz std pop cmp sbb xchg std sahf sbb cmpsl push dec aas out lea sbb fildll out or add sub mov dec xchg and cmc (bad) ret jo add arpl int3 add ss int lcall xchg sahf xchg fwait push into xchg and mov out in push daa sahf dec jle mov andnps push mov sub clc push leave mov gs jmp out jnp push mov mov lods hlt in ret (bad) ds es mov int3 nop add and dec add adc xor fcom adc test push push insl mov leave ja jl ret jg loope fsts imul sbb pop aas sub dec daa push mov push pushf or mov or sub sahf adcl lds sbb scas adc mov sbb shr fcmovb sub repnz daa and les push mov inc scas and or or pusha sub xlat scas sarb aaa leave inc ret or pop push pop icebp loop mov inc inc fiaddl jmp sub adc shlb add (bad) xor dec aad imul ss mov (bad) pushf jecxz mov call neg add jmp ja ficompl les js pop jle or dec inc ljmp push add push cwtl sub (bad) repnz enter loope (bad) jb xchg mov jbe cmp outsb push dec sub and cltd inc lock loope scas sub sarl xchg outsb xor jl lahf pusha das jge movsb stc xchg xchg pop mov scas cmp cmp jno push pop cs xchg sbb rcr push dec lods js jnp outsb data16 (bad) sbb xchg sub pop pop ds jmp xchg mov jnp dec and rorb jb es mov je ficom sub pop mov cmc push add jecxz das clc xor ds sbb mov xor lds inc pop mov mov cld loop jl das mov cmpsl fdivp aad test pop push and cmp loopne aam incb mov out loop and pop dec lods xchg or jbe jno xchg add dec jmp adcl lock rorl inc icebp xor jg mov (bad) lock (bad) and or inc push jge iret mov or sbb rolb (bad) cmp xor dec call mov dec xchg and add repz sbb mov and xor or sub inc or push test jno ja mov dec jmp ret jmp mov iret lahf nop ljmp testl insl push push stos nop sbb xchg cmp les sub push dec cwtl jo mov int3 add dec fs js out repnz mov inc call mov mov jno pop and (bad) mov (bad) mov cmp mov inc mov pop xor pop push mov xor inc leave mov leave sbb xor sub sub push mov jns outsb shr push push (bad) in add xchg imul pusha stos pop mov popa and push add call inc push (bad) pusha mov shrb xor cli addr16 nop imul ja js or jne int3 popf int3 jne push sub cs xor inc adc lods push in mov or sar xor add cli and rorb and nop or cmp (bad) pushf je dec cmpsb in mov call jmp lcall cld scas jo imul ret pop fcmovb add (bad) ss outsb or les mov add sub mov mov out lock xor cmp outsl sub xchg out sarb add mov xor push dec and lret push jg incl test pop rol (bad) jns xchg push fnop int3 cld dec pop xchg push nop scas inc fidivrl mov imul out cltd pop pop jne mov cmpb sub cmp frstor cwtl or mov pop jae ja mov movsb jo mov popf push arpl xchg pusha fsincos mov (bad) lods xor mov stos xchg scas lret add ret in mov mov or xchg adc rcll xchg and cwtl test cmp or stc cmp sub out enter pop add sub scas lret clc ljmp adc jmp ret sub mov push push pop xchg clc movsbl sub jmp add mov sub mov insb pop push rcrb adc jg sbb fwait mov int3 or jmp mov dec fidivr (bad) data16 xchg inc cld push push lahf xchg gs pop cmpsl push xchg or xor xor push mov push push lock xor sub sbb add enter fwait orl sub fabs scas dec cs imul cmpsl push fstl lds xor leave sub dec test cltd cld (bad) mov leave fs cmp fldl mov (bad) jbe adc xchg push xchg inc mov test mov test adc scas dec lret inc dec xor stos cltd add das call add fwait jl cs jne hlt pop pxor jno sbb xchg je inc dec jns or sbb lds xchg movsb push test mov daa or insb roll dec (bad) inc aam ret fisubr bound repnz push shlb sub imul xchg hlt test add sub fadd add lods mov rol mov int3 arpl sub cmpsb xor mov push mov shrl scas and add in dec test ss adc jecxz movsb loop popf xchg out mov cli xlat mov push movsb xchg mov loop cmc mov add pop js or push lods jp dec xchg xor std mov popa or shll lock sub in sbb in sbb imul jbe pop jl xchg add push cld scas mov push rcrb or icebp mov pusha mov mov pushl test cmp mov add std inc or (bad) mov jo inc cmpsb add push adcl imul sbb cld inc xor push push bound orl adc iret (bad) stc cmp push in lahf stos ja mov repz dec out or cld repz cmp add jns or ljmp push popf loopne fsubl dec mov das jns cmc mov cmp cld mov jo inc mov fdivrl adc sub adc adc int add inc or fsub imul or jmp mov testl jns add jno mov movb imulb mov xlat pop pop push inc out adc les push scas popf adc mov pop test xchg movsl push clc hlt aas dec rorl fwait ror imul add aaa das sbb jecxz fldenv mov out popa ret scas push inc lcall lock xchg pop stc add sub sbb adc jbe pusha inc mov or and jmp add pusha adc or setne and mov ds jmp and dec adc cld in je jne dec cmpl fildll sub jg dec mov outsl jecxz cmp cmp mov aas push pop mov xchg out divb push lock ret pusha mov dec adc lret mov pusha ret and dec xor xchg popa xabort test pop sub dec pop ljmp pop ss rcll inc push add insl push xor mov xchg popf sub add ja pushf and bound lret dec fdivs add shl cmp jo sub jnp or mov adc leave sbb mov sarb and jge and adc push push fildll cmpsb aam aad sub lahf push gs sahf mov cmp mov and ret outsb or sub out jg fimul sub in xchg ds lds sub jle jge pop pop pop test stos mov cld ss mov and shufps fmull pop push mov movsl dec mov int shr mov push xchg sbb jge jo inc mov pop mov in inc or inc mov sbb mov (bad) pop sub jbe lock mov cmpxchg sub imulb dec xor ss shll add cmp loop pop xchg pop sbbb in dec push insl dec movsb xor sub icebp push jle pop push jmp movl repnz or dec and push adc sbb es inc jae sahf scas mov or pop fist push fs jmp nop cwtl mov pop into fwait shrl dec and add jmp jno repz mov pop pushf in je or cmp adc sbb addb push or loopne stos es pop xchg add push (bad) ja orb sar loop xchg add mov push xchg pop aad xchg pop out add push cmp mov push and fsubrs jmp inc lret popa or jl mov fldz hlt lods jle addr16 inc ret mov stos lahf push (bad) fsub push cwtl add mov jnp mov add (bad) and dec lock popf icebp mov jge movsb repz dec inc xchg inc push (bad) mov mov push jmp aaa cmp push or mov xor stos jecxz aam jo in and cmp sub xor (bad) or std and test les je or pop xchg add push cmovo jecxz mov adc push sub pop pop pop cld inc pop and or ja (bad) adc inc aad (bad) pop popa and sbb adc mov push ret lcall cli sub mov add pop inc sbb (bad) jge or adc insl loop js pop push push and sti or push mov scas pop loope mov and ds jns inc add aaa bound (bad) jno sbb xor rcr (bad) or push mov or mov gs jnp ret neg bound fmull and mov or out xchg push mov (bad) lds dec cwtl push inc outsb pop mov and inc add ds sbb (bad) jecxz jb sbb cmp int3 repz aas (bad) orl insb jl push pop inc mov (bad) testl sub mov add cmp or es inc push fisttpl dec imull pop pop shll mov rcl push (bad) add pusha cwtl jne fstl aaa clc cmp out inc pop incb or gs bound lods scas fiadd popf sbb and sub and push (bad) sub pop push mov cltd xorl dec lds dec aam cmp push cli push stos mov add dec push popf xchg jp daa fdivp in daa push pop mov jmp push xor mov ljmp xlat cwtl popf xchg mov inc ret jg enter dec jbe adc add cmp push in pop mov pop pop insb icebp and scas fisubrl inc movsb dec pop arpl push scas mov dec scas fidivrl jl daa adc or ss mov pop mov inc sub scas ret xor decb cmpsb or or mov adc xchg mov pop dec hlt adc enter inc out out mov sarb jo rcll test arpl mov pop std jns inc jg imul mov mov cmp cmp and cmp sub pop cld in cmp mov and (bad) dec mov aad fsts add ud1 into jns xor pop ljmp outsl dec or enter (bad) sub and mov repz pop mov inc das mov movl adc cmp and jno pop add in in loopne push sub (bad) mov into add loopne or mov shll cmp enter andb mov pop and pushf mov pop andb dec (bad) xchg wrmsr inc jmp (bad) movsl jle or push mov xor mov or xor adc pop pop stc out lret mov xchg add push pop push push cmc jnp loope fldt roll fs movsb scas sti mov add dec lret add stos or mov js das pushf mov sub jge shlb xchg popf and mov sub xchg or (bad) popa stc inc jmp clc dec pop xchg dec sarb adc add pop add sbb repnz fcmove jg cmp (bad) mov sub aam daa add movl xchg jmp xor push gs enter push loopne aam pop jmp cmp cmp jnp pop xchg fdivp xchg data16 and sbb out shrb loope xorb aas test mov and and xchg jnp mov imul ljmp pop fsubp pop mov inc cld jmp xchg clc or lret xchg test aas (bad) loopne dec mov add xchg jecxz push inc in jnp mov add rorb fisubr ljmp jg push (bad) jno sbb lods lods popf fstpt mov or push jo lcall outsl xor sar icebp xchg outsb clc xchg jecxz add out and cli add shr and jmp add clc outsb inc mov mov inc add out and and icebp cmp sbb cmpsl jns mov or xchg pop sahf xchg daa mov nop (bad) std cmp dec lods pop cmpsl loop cmpsb push lods les push scas inc xchg and cmp cmp sub and sub pop dec shr sub xchg cmpsl in lahf or rol and out rorl cld xchg sub test and mov cmp punpckldq xchg add leave xchg ljmp ja dec (bad) mov mov inc mov pop xor add pop arpl cmc movsb int3 rcrb xlat mov dec hlt cli xchg inc mov mov xchg out jbe pop pop or adc jnp repnz and xlat shrd out scas sub push pop or push daa push mov and bound fs mov js (bad) rcl cmp push fstps test mov inc lret pop icebp je lods nop rclb (bad) pop pop loop mov add les and adc popa incl sub mov jb push lret les add out inc cmp cmc jle aam dec add ds adc in push or dec addl mov jb jno sbb inc ret out pusha sbb (bad) xchg (bad) push mov lahf iret insb or out add mov cmpsb rcrb add enter mov pop push mov inc xor and sub pusha jns pop pop pop xchg xchg (bad) icebp pop inc mov arpl punpckhwd leave pop imul and pop imul xchg mov jae scas or add jge nop push mov pop pop push (bad) mov sqrtps sub or jmp lret jmp not pop pop dec push mov test daa dec sbbl ljmp add push mov or cli addr16 icebp lcall push push push pop push stc cmp mov pop out std out lret (bad) in lods out inc push add jnp out push int pop cmc xor jns mov xchg dec adc dec stos sub adcl out mov xor jmp fdivrl imul and std push sub sub (bad) rorb dec push and cwtl or rorl adc and fdivrl aas mov aad cld mov inc lods and test dec xchg mov je xchg jne out (bad) arpl mov scas push dec cmp mov mov in or or jb jmp (bad) push pop push and icebp jg pop jl (bad) sub xchg fimull mov cmpsb daa push jbe inc mov sbb sub dec ljmp push lret ds cli push mov es add pusha push cwtl lds movsb pop sub cmp inc push notl jl mov or stos push or in scas stos repnz adc lods call sub adc or sub ds jno (bad) or xchg inc sar dec dec inc inc test push add xor mov mov cmp add sub push imul push push mov test push mov sub (bad) mov xchg divb mov fist dec rclb mov lahf push mov mov sub popl adc xorb or repz or iret sbb andl mov pop in fstpl mov jnp sub (bad) mov stc and jmp inc fnsave push adc inc cmp (bad) or sub cs test (bad) push jb mov lcall pop mov and xor cmp add imull (bad) xor mov scas adc cmp stc rolb std es xchg xchg rcrb call push mov shl into jg daa movsl mov ss shr int3 into push sub sub rcll pusha mov inc mov mov add test loope inc das fwait rorl and ret push xchg xor and jae enter xchg xlat mov mov neg jb xor adc jecxz jge shlb lds mov ja sbb inc xchg sub push hlt insb inc xchg xchg fsubrl fdivl out sbb inc iret mov rcrb jg dec sub xchg jno jmp icebp lds adc clc or mov push push push add in push lcall cmp push push inc xchg xchg mov mov dec adcb std and or dec js xchg cmc movsl (bad) into in (bad) lsl inc data16 sub repnz fsubs in jne imul add xor jbe xor out ljmp pop and xor jge adc mov sarb xchg push push mov fdivl sub jmp push push adc mov mov cmpsb pop pop in xchg dec jmp push mov fwait imul add pop dec dec stos mov pusha jl pusha fs pshufw xchg xchg push mov push rolb pop dec add lret int pop loop mov add inc jno pop fs icebp mov scas and ljmp lret leave jne lods jae or mov pop mov mov lcallw add pop insb jae lahf inc les fist add (bad) jne xchg cmpsl inc pop aam subb add out enter xor cmpsl pop adc dec jg pop out or jbe inc pop cmp or xchg push push push push xchg xchg js mov push sti mov mov leave cmp das push and inc jge mov out push insl or rolb xlat ret call add inc sarl mov xchg pop or cmp jge,pn dec in add icebp cmpsl loopne js xchg adc daa inc cwtl adc mov mov jmp add sbb or cmp and dec cmp xchg ds and push mov and add cs xchg adc sub sbb pop xor add cli jae pop incl mov pusha sti sub mov scas lahf cmp xchg mov cmc pop mov ljmp aam sub fsubs insb mov push sbb (bad) cmp shlb cmp hlt jg pop sub add pushf nop aam push and pop cmp mov inc xor adc xchg inc add xchg dec shll sbb mov cmp call add mov nop cmp mov xchg dec pop movsb pop pop test rcrb (bad) xor pop nop jbe lret mov and jge cld ret pop cmp jge cmp (bad) scas (bad) jne xlat cwtl add jnp iret lock rcrl xor or (bad) or jle lods mov inc xor mov ja std (bad) dec inc repz xor jne push (bad) frstpm(287 or inc cmp mov cld (bad) jg jo std or fildll loope inc add jecxz loop pop and sub pop repz sbb push daa add xor sub cmp sbb add mov add pop ja mov lret mov test add ds adc add (bad) or lods xchg (bad) add or pusha shlb mov cmovg mov adc lods inc xchg cmp adc cmp imul inc mov jl adc or and cld push add jne (bad) jo fisub call cld stos lds clc mov ja fisttpl fsubrp dec dec cmp cmp jmp xchg ljmp jge cmpsl jmp pop sub iret idivl add das arpl out rorb js mov jb loope fmull and mov push jle xorb in xchg sub jmp add mov not cmpsb adc adc add cli fs and and push mov jne sbb sub pop stc rorb adc jmp xchg je lock push lret clc test ljmp ljmp mov push test stos adc jmp mov (bad) adc xor js and jne jge jmp insl stos dec test add add pusha je aad nop push aaa xor pop aas inc adc insb jmp sub adc push jg xor xor mov adc xchg test or jmp (bad) xor nop add (bad) push mov scas sbb ret jmp pop insb xorl cmp sub mov ret mov test mov into mov mov (bad) add outsl fstps imul jmp int3 js cld dec sub sbb pop sub nop adc push push push push inc test pop sub mov lods pop sbb aad stos adc xchg add enter cwtl mov clc cmc insb fisubr jmp sub inc mov jg icebp scas orb add inc daa add pop idivb or (bad) shll push or bound push cmpsb mov in mov push xor jne inc mov jmp mov push sub in mov out lahf insl (bad) xor push mov lds lods mov cs sbbl mov lods push add icebp orl or jecxz add lahf inc cmc sub or jp subl lods push lahf pop sbb sub rcrb fadd or jle outsb loopne gs sub add popf fwait (bad) clc and sub mov out jbe aas or sbb mov add xor fsin loop jns sahf stc movsb nop dec pushf pop adc test femms sub add repnz pop or ljmp lock xchg pop xchg popf pop ret pop jmp out add daa inc (bad) add or lret es push inc adc mov andl sti loopne and addb push imul push xchg mov or add jmp or (bad) test addl cmp psadbw imul xor push push mov push call add mov push cmc (bad) vphsubwd add stc push stos sub xchg fsubrl bound jp negb loopne fiadd nop in popa out in cmp and sub push adcb in cmp mov aaa rcrb cmp fbstp jns mov scas fildl push mov and and in jns in enter sbb inc mov jp mov sbb push or adc fdivs add or sbb mov mov sbb nop cltd push inc add test and xchg out xchg movhps es cmpsl rcr pop push xchg and lods jl (bad) xor arpl mov mov sahf jnp jp sub sub pop pop cld sub inc sbb xor pop xchg add push push (bad) lret in (bad) mov (bad) or dec sbb inc loopne mov js and mov xlat dec pop adc or mov loopne popf xchg sub rolb jne xchg pop nop movsl mov push outsl (bad) cli gs fistpl hlt sub add jno add push push push int xchg ds rdtsc movsl mov (bad) rolb not lock dec test dec loope into pop fisubl ret cwtl xchg add fstpl push int3 xor pop cs mov push lock mov insb mov movsb pop fadds vpunpckhwd fildl and inc shrb subl dec ret mov rcrl in lods or adc dec and jmp call fisttpll sbb outsl loope jbe mov pop shll aad xchg dec daa adcb jbe fmull andb rorb loope je add ret push dec add cwtl imulb mov mov pop and cmp add out aad gs adc loop push mov or sahf or out icebp sbb mov out imul add pop mov jmp lods in cmp jo cmp jp lds jo jmp push cli mov add jp in sub pop sbb push movsb xlat add push daa fs inc lahf sub add xor fdivs fisttpll cmpsb loope and mov jl imul imul sub sub dec push fisttpl jns or cmp out sbb or xchg cmc mov push ftst and add mov pop outsl in xchg push mov xor sub jno cmpsl (bad) push rclb xor repnz call sbb test adc cmp int popf push sub ds popl mov addl (bad) scas je scas mov or cmc pop jg negl mov and jg pusha jmp inc add jecxz aam mov inc mov jmp cmp shrl jmp pop push push mov insl dec fs push lea addr16 adc inc adc mov fwait inc movsb out pop loop cmpsb adc mov fnstcw imul scas popa mov push mov cmpsb inc mov loopne pop mov lcall add xor mov iret sub jle andl dec inc loop pusha or sub or lods lock mov xor dec cltd add xchg cmp push sub push out (bad) mov mov nop into adc push lahf neg jg push (bad) pop int3 sub jae (bad) lea loope outsb cmpsl lea mov push rcrb (bad) pusha or pmaxub add stos iret sub ret je pop mov inc dec into sbb clc das mov add adc and xor push inc roll mov and xchg mov js push sub jbe inc pop pop or popf jp jle jo xor enter iret or ficoml js pop add push jmp adc das mov lds aaa cmp inc cmpsb js scas or addr16 out jg mov lcall dec pop mov (bad) pop nop jns jae xchg aas cld cmp aas jmp sub mov inc push dec jmp shl xor mov lods or push sarl dec int3 sbb aaa mov and adc mov pop int pop sub clc xchg add call idivb cmpb jae aad mov and cs pop enter je pusha push dec and xchg je cs and inc cmp aaa aam or popf jno pop sub add sub lds mov movsb lock inc ds pop shll loope clc adc pop outsb mov add outsl or icebp dec imul xchg mov bound add xchg roll (bad) jne sub mov add dec xchg jno dec cmp mov (bad) sti ret and cmp push mov pop jg dec mov jmp dec add fcos inc inc outsl mov inc mov pop or pop add xor clc outsb lds push mov cmp enter xchg dec cmpsb add adc push xchg and fcmovnbe or fsubs out cwtl stos js mov lds jno inc cmp add add or mov clc wrmsr mov rorl sbb shrb xchg pushf mov cld sahf stc sbb jg (bad) int imul inc ss mov add ds and sbb iret aad jmp jo icebp xor fldcw movsb (bad) fwait call fcoml int jg push mov xor add cmp add lahf xchg cs loope (bad) incb xlat bswap mov mov xor iret mov push sub mov divb jmp pop mov orb mov xor or sub test int loopne pop icebp jle in cmpsl in jmp or pop inc xor mull shrl ret mov rcl out pop or jmp pushf out jg andb push cli add sahf aaa inc dec jmp mov hlt or icebp pop (bad) cmp addb shl pushw sbb xchg mov dec pusha fist cmp inc insb cmp sbb cwtl popf mov cld pshufw fistpll pop push push jno push mov sub psubusb jmp dec xor rorb cli int push dec mov cmp adc xor mov imul pop adc and cmp sub and shr jno out pop xchg enter out in push adc sbb jp in mov push andl or in bound in in adc and mov ret add pop sbb sbbl call stos adc aaa mov inc xchg and xchg pushf pop fsts addl les and jmp xor sbb jne inc gs xchg inc add addr16 aaa mov or stos xchg lods in mov bound adc popa pushf out adc outsl mov jnp add mov ret xor outsl mov cmp not push inc ror subb pushl jecxz push dec xor mov xor pop adc outsl mov pop (bad) sti inc sub loopne mov inc dec adc adc adc dec mov xchg add jno sub xor inc push cmp mov cld dec cli das mov ret push dec dec and xchg sub sahf pop add dec (bad) enter xor jmp les jg leave add mov pop mov mov add cmc xchg sti jl out xor or addb pop or inc outsb push sub ja add adc outsb add jle dec pop add fiaddl fs pop (bad) and popa and in shr mov jmp not fdiv xchg pop mov int loop mov addr16 icebp add sarl sub rclb inc dec sub and inc pop xor (bad) fiaddl lods inc xor xchg iret xchg mov imul notb adc roll hlt sbb jge pop push pop mov inc dec ljmp ret vmovlps push or outsl push pusha aad mov add xor push mov aad dec sub mov mov cmp lcall and sbb out push repz popf and push and addb int3 push jne inc mov push inc jb loop cwtl ret imul add pop dec push (bad) cmp inc pop jle jns mov outsb adc mov (bad) nop fildll mov jbe aas jmp mov ljmp jge xchg lods cmpsl jns imul pop adc inc dec pop mov jmp and mov jbe mov or imul add jno xor aam pop js dec add sub imul imul xchg push mov (bad) pop sbb push (bad) sbb ljmp xor push push pop cmp jmp mov lods push frstor xchg push (bad) fidivrl inc lea mov xor adc dec in or and mov cld rolb jns fs add jecxz jmp icebp dec mov enter cs jbe xchg sti out xor or pop inc or add sbb in (bad) aas and ds pusha jno sahf cmp lea mov lods push push push out jle pop mov inc leave push jge adc (bad) jge mov pop jo dec and mov or push pop repz mov insb sahf rolb into js pop repz or add ja out or sbb hlt adc jecxz lea push fldenv je inc or adcl xchg popa lds ss push cmovno jns inc ret in es lock lret pusha (bad) icebp mov xor out jmp mov repnz jbe lret xor pop sbb xor or jnp jmp dec dec push daa mov xor mov inc movsb getsec dec (bad) call mov mov xchg out mov iret cmp in lods push leave pop sub (bad) call xchg and mov mov dec mov mov nop loope xchg push and adc cmp xor push mov or dec in adc sbb pusha dec inc adc pushf ret mov add pop xchg outsb lret lods xchg mov inc sbb or fiadd jle scas cld das imul dec nop jns leave inc pop add out push aad es pop pop stos add rolb add ret fcos popf lcall sbb pop adc add adc psraw and jo inc xor andl xchg sbb xchg jge sbb ljmp popa test mov add loopne inc jno dec jle pop stos imul das mov dec pusha dec stos push mov or das mov ja sahf (bad) mov add int3 je sub add pop cld xor iret jmp mov imul das popa jbe inc or mov jnp xor xor sbb mov or sbbl outsb dec mov pop mov push mov pop cwtl (bad) xor add das imul (bad) xlat pop sti out jmp xchg inc sbb cmp fsubrs xor in push jne cmp jmp push mov xor hlt fnstenv jns and fmul xchg lds aaa add imul xor jmp mov (bad) (bad) out jbe cmp stos les cmc daa repz aas dec sbb add cmp inc sbb std icebp leave pop jge mul loopne (bad) jmp sub mov aas cltd add pop in out movsl push sub add dec add daa xchg xor inc shlb push add jmpw add nop (bad) or add cmp inc out lahf (bad) add or fnstenv mov mov or lea loop jae stos adc adc or jbe ja das aam dec jo xchg pop enter sub xchg or icebp stos imul and or mov std pop mov xor jmp pop push (bad) and aaa sub push mov (bad) addr16 imul ror mov out sbb jae xor pop (bad) inc inc (bad) jg pop stos adc xchg jp sub pop adc mov or add movsb and xlat idiv jne imul das mov test mov int3 ss push test pop add repz scas inc jl sub ljmp pop sub adcl or enter cs (bad) lock mov (bad) fist push test les test roll int3 pop jo mov jmp (bad) sbb std cmp sub jp mov push adc or (bad) pop hlt ror inc into and inc cmp mov scas repnz bound test jne adc imul loope loop gs add (bad) or inc pop (bad) xor jmp pop pop mov gs and ja xor push mov mov mov rcl pop mov mov cmp mov inc dec adc adc enter mov aas stc adc mov loope fistpll or sbb dec add out fwait adc fstl (bad) icebp xchg cmp push or test adc lret cli dec mov and add jbe shrb insl jbe les jecxz mov xchg jmp cmpsb mov push mov bound lahf and and inc xor (bad) mov inc out fnstenv mov daa xlat mov gs scas mov lret and into imul out nop (bad) dec ret outsb mov xchg popa pop xchg pop (bad) enter push popf std scas add adc mov outsl or inc sarb add push addr16 xchg jne cltd (bad) mov gs int pusha lret stos cwtl js dec dec lds dec push fidiv sub add hlt sbb leave pop add pop adc xor aam sub xchg cli ss test push stc into dec xlat push jl outsb stos js shll pop cmc xchg or test add and jmp cwtl mulb mov mov push pop and mov aas push cmp or mov neg xor mov je xor jne sub adc call jb and in pop mov lds sti inc mov (bad) divl cmc sub mov pop xor add icebp cmp imul (bad) jae or ss into dec dec adc mov jbe ds js jmp xchg mov lret dec add xor outsb enter push mov push mov loope data16 jne mov sbb adc and ja mov repnz insl daa sbb push or fidivl mov pop jmp out add pop xor push mov scas add call push subl push mov cmp dec fwait pop xorl or imul cmp lret mov fmuls pushf xchg pop movsb test sbb in fsubrl (bad) sti jg jge push jae daa je fs out adc lods pop adc pushf leave sub sub push mov mov stos rcr mov lahf push xor mov outsl xor cld push adc pop mov inc sbbl (bad) mov dec mov pop push ret inc add mov pop push loopne enter xchg cld scas loope test mov js xchg push hlt and rorb pop ret inc sub mov mov in das das adc mov add or mov adc cmp test test add jmp xchg push ljmp orb push pushf push fnstenv ljmp inc add movb adc shl mov push repnz out jmp and ja ds pop std dec add insl pop pop (bad) fnstsw stos movsl mov fisttpl stos outsl (bad) lock daa jp orl jmp xor and mov add loop adc sbb dec cli and outsl in push add vmovaps mov xchg (bad) in jbe push push pop jb dec pop push daa repz (bad) or or and pop insb fidivr das push out pop mov adc aad add test loope push cmc or lock popf ret subl repnz ds jmp (bad) iret cmp jb pop scas add mov mov scas sbb es out dec outsl daa mov rcll add jnp dec jne lea add or push jno inc inc xadd xchg push xchg fistl mov dec out inc hlt sub dec add add jmp pop (bad) ss xor cwtl mov adc jmp out jmp in aas int stos jp jne cmp adc movsb sub int3 test (bad) push sub add das mov jge incl and add fsubrs cmp sbb and adc pop or xor mov xlat cs int (bad) test and ds mov push pop rorb add sbb cmp repnz mov mov stos daa pop push cmp or ret mov scas add mov movb test cld dec dec pop cwtl push jne xchg repnz add call movsb test push les cmc jg leave cs adc shl jmp dec fstp outsb ss mov inc mov xchg or subl adc ljmp lret jle add jb lods jbe ss mov ret ja pop dec nop mov xor mov mov add mulb or xor push mov mov pop mov sti add pop push les jmp push cmpb fcoms add inc mov xlat jmp mov mov push pop test nop movsb sub sbb (bad) pop pusha sub popa mov sahf and xor inc loop sbb test ss fistpl rcll js sbb push (bad) leave or xor push stos jne xor or inc add and cmp push out test xor ret jae nop popf or mov add sbb stos fs cld stos subb ret pop and loop in test imul fbstp in add jmp popf push data16 sbb xor xor add lods add and xchg inc sub and xchg mov (bad) xor int3 xchg xor push pop sti dec jo,pt and push push addl nop cli mov pop mov fcomp in movsb (bad) pop mov xchg jg jbe repz mov fadds imul stos add sub lret es test jae mov icebp or jns js dec dec ljmp dec ja mov mov push cmpsl mov ret ja out fdivl decl icebp sub push xlat mov cmp push cmpsb jo mov jae inc ja scas lahf pop or sbb mov sbb sarb mov xlat outsb pop mov in jge lods js pop and cmp int adc outsb call xchg mov pop push pop sub add jb cmc and pop mov dec adc xchg sbb xor or mov stos clc xchg jne pop add add addr16 movsl incb inc in inc add std sbb outsl movsl push ss sub fiaddl mov loop lret push fwait mov das in gs push xchg push jae insb shl js sub xchg add or sub dec mov imul movsl inc pusha mov xchg enter add jns pop add mov add xor out and mov push jmp jp pop xchg in in pushf mov adc mov (bad) mov or pop jno or cmpsb ret cmc push mov test xor sbb cmp popf test pop hlt or mov mov mov fistp and mov lret pop pop xor push mov in xchg sub push mov rcr aas push and jne pop and pop mov add es push (bad) mov fistl jno sub pop nop out popa adc stc dec push fistpll xchg movsl leave mov jmp xchg clc test push nop or mov mov lods sub or pop lcall xchg stc shl nop cmp mov pusha int3 push inc les jmp (bad) mov stos daa neg add jmp sbb mov (bad) das mov sbb repnz imul and push jmp inc inc mov repz jecxz inc ljmp xlat inc fadds or pop pop sarl mov in mov add cld ret gs mov bound cs push lock push mov icebp or (bad) and inc js push sbb push orb ret out dec add lret push imul int3 mov in mov scas or nop sahf repz xchg dec jo (bad) pop pop xor icebp xor dec and push pop mov pop add or (bad) jbe mov outsb jne cld cmc (bad) leave mov pop adc je aad data16 push inc (bad) inc addr16 jl inc fucomip ss add out or ljmp mov push push out fs in insl adc push add sar xchg das int3 popf into aaa sub (bad) lret pop lahf or and mov jle pop (bad) out sub cmpsb adc jmp mov mov mov mov outsl xor or and arpl pop push mov in not lods mov push rorl push jp mov push or adc ds repz mov das add int adc cs add sarb outsl adc jmp push cmpl (bad) cmp in lcall or jmp inc adc repnz or xchg (bad) push cmp mov mov dec mov xchg addr16 inc mov ror jne ret sti inc gs jmp aad xchg subb xlat dec mov imul pop and pop sub sub push push push mov add ret push push pusha adc xchg (bad) mov jmp lret out fwait cmc stos jmp ret inc and dec lods les das sub mov or push not push lods cmp add sub clc mov das clc (bad) movsl mov sub xchg jg mov mov and aad adc jecxz outsl cld mov lcall je cmp dec loop adc clc jno sti push les ret vminpd hlt xchg mov cmc in int movsb and cld pop mov push pop cld mov push mov jmp xor jle add push pop mov sub (bad) push pop and lea add inc shll out enter xor dec mov dec adc add sbbb jns push xlat call out lods rolb or sub sub enter rcrb dec pop test pop fbld add (bad) je das pop cli jge or push cli adc sbb jb push dec aad xchg (bad) shl rcl or mov popf cs imul es cmp rorl movsb in and fsubrl xchg xlat cmp inc adcb (bad) add or push mov cmp adc ffree jg repz add dec fsts push sarb dec cmpsl or and test inc and or or jmp mov cltd sbb sbbl pop xor fild push add inc xor cmp inc mov pop (bad) gs stc jne add movsl insb scas mov push popf hlt mov and out push add sub in jge jno and (bad) jne movl and dec std jne fistl pop sti test adc mov xchg mov adc cmp nop pop mov xchg int3 mov out or mov cld jb add cmp jl lods xor jb jp jp cs fs cmp and push cs mov inc mov cmp mov push lock fldcw ficom jl daa pop push xor sahf xchg push sub mov mov in cmpsl in sbb data16 fld leave aas xlat insl fs enter and daa lret iret imulb mov idivb xchg dec mov or and xlat sbb dec adc jmp decb addb jecxz aaa push xor stc out outsb pop lock ja das inc or shr adcb mov jb ljmp or icebp imul pop sbb sbb mov dec sub sub cwtl loope out xor mov jmp stos icebp movsb jmp cwtl movhlps sbb es sbb pop sub sub add mov rolb fdivr inc pop xor sbb mov push jl inc mov stos cmp adc cwtl scas fidiv bound clc add addl mov pop jmp cmc outsl push or jmp pop lock xor aam addb jge leave or btc mov data16 jl roll ret mov rolb (bad) sarb (bad) or add xchg adc dec sub jg push adc jbe mov adc pop mov dec mov pop cmpsb mov hlt push cmp roll or mov popl addl push jl push xchg or pop pop (bad) dec push repz (bad) shlb or jg push mov pop aad sub push push fcmovnb xor cld out movsb or add dec rorl ret mov fsubl jmp ret fstps call dec inc nopl mov jo lahf inc xorl adc dec mov sub in xchg repz subl push mov and out mov mov outsb add jmp mov xor sub stos rcrl or int3 addl cmpsl pop cwtl mov cwtl xchg push or sub push fstps jmp jnp bound rcrl mov xor (bad) push dec adc and outsl out jge inc neg and pusha inc out push adc jl add jo dec lock mov ficom push add (bad) int lcall jno outsb cmpsl test sub push sbb pop jbe xchg pop rolb loopne dec out or (bad) or iret or push jecxz loop adc mov cmp and in mov dec mov sbb clc jnp (bad) jmp testl shrb enter xlat lret inc movsl out jnp lock (bad) xor push inc in xchg pop pop bound fimull je cld fstpl out jp mov xor in outsl pop jo add and and push mov mov add loopne inc sub and add test sub mov sub (bad) cmpsb ss (bad) insb and push dec stos and mov mov pop dec stos sub imul std xor mov mov lcall xor add mov test jl sub out push mov pop mov lcall xor int3 xor jno inc pop subb icebp pop jecxz mov out jmp mov mov pop mov out inc les mov in daa push ret jno imul shrb adc add jecxz jmp push pusha daa (bad) int les out test das jb mov or mov or xchg gs push mov dec shl jp sub inc xor cltd (bad) xor xor adc outsb jl push and aam sti xorl les (bad) sub popa rcrl add and testl dec cld arpl pop push adc shll mov pop sub shrl ds sub and or dec adc das pop push and (bad) cli or ret xchg enter pop xlat push shlb pop ljmp jle fsub loopne pusha jp inc pop add daa xor icebp pop xchg or gs (bad) jb mov sbb push jns pop ds fcompl or dec dec scas lret fcoms pop push sbb cli cmp pop in push movsb ljmp ja aam pop sub pop add or push push pushf add out jmp jmp mov or inc leave inc fdivrs loopne inc mov and and jae aad sub mov pop pop push cmpb xor add xchg ret sub mov (bad) and inc cs test clc test pop das out inc xchg clc pop lock in jno push or or gs dec (bad) jmp pop pop popa add xor scas xchg push into and lock pop sub sbb dec loope add add int3 dec clc add push pop or adc xor sub daa iret inc sub xchg inc test loope add or mov sub sbb and sub or inc jmp bound negl aas adc dec pop xor xchg ja mov dec jge jg mov pop in lock sbb xor ret fidivl subl loopne call hlt sub fnstenv addl out ja or pop std mov or icebp sti imul pusha mov jmp and inc mov or mov adc mov mov lahf jbe add and repnz jb mov in popw out jbe push add loopne fisttpl int3 push sub and (bad) pop leave fiadd (bad) cmovns fs inc bound clc pop push xor mov and imul and mull adc dec xor pop pop data16 in pop inc hlt aaa out (bad) ds lock fsubs jns jne xor pop add xchg ja dec loopne and js nop pop pop stc lds jo mov xor adc xor fidiv jl xor jne cmpsl jnp sub in sub movl ret test jnp sub and xor int3 fistp loopne and sub push mov pop loope inc jae mov push ds ds stos pop dec cmc push pop jmp popa pmaxsw mov movsl std mov push push movsl aad nop or jmp add xor inc xor mov lods jl mov and or xchg test sbb loope or cmp fidivr or lret push add sub push or cs ds jl jmp nop aaa and mov mov (bad) jmp in jmp cmp dec pop mulb push jmp in or in jg (bad) outsl lahf sub cmp xor mov adc fcoml xchg aas add stos loope add pop std jb add xchg or push loope add push jl xorl xchg push push add xchg or lods outsb adc xor shl pusha in cmovno inc pop dec addr16 ljmp je pop push jo and cs nop lods xchg xchg sahf dec push cli inc dec subb dec push in push mov lret shrl scas (bad) shr xor mov rcrl xor pop int loop lea pop xchg sub dec jne mov inc add xchg icebp testl jge pop push xchg and push add ret ret inc cwtl push sub dec dec dec test mov repz in add mov rclb adc aam int out and xchg insl jmp pop addl shr pop (bad) iret repnz mov shr not ds push popa inc nop in nop loop jnp movsb sbb or cld mov repz test pop stos (bad) and les mov dec sub adc adc push push mov daa sub sbb adc mov out out out lret in sub sbbl mov sbb pop push push outsl add mov pop pop pushf cmp and push jb jge jg aam add inc scas cld sub dec xor mov mov (bad) push cltd or sbb inc jns (bad) (bad) mov data16 add test fwait jo movaps sub sub ret mov xchg out pusha sub out (bad) aaa notl jl mov rorl add jbe std fnstsw or sbbl xchg add outsb lods xor pop inc or jmp lret push jmp int3 push or insb lods jmp (bad) mov pop ljmp push int aam jmp mov or out mov popa pop inc xor xchg add sub or iret xor jmp pop test dec ret sub ja jne sub daa xor jbe jne sub (bad) dec daa daa push (bad) aaa and popf jle dec sbb js roll movsl mov mov push adc pop or jb cs js add lock sub sarb movsb mov mov or pop ja sbbl sub sarl cltd jmp loope das cwtl imul cmpsl pop std adc mov sahf test or in and adc stos push push mov cwtl add movsb mov ljmp cmp jmp mov add jno or add xor push push sbb bound pop lock dec cld xor cmp dec stos je shrb jmp es add ret jbe int fdivs lcall movsl mov push dec ret (bad) xor in xor sahf mov mov iret jno int adc jbe jp jbe pop cmp jecxz,pn das add push dec and sub or test lock lahf dec mov mov inc (bad) and aad adc sbb jns stos xchg and es cmp (bad) dec jmp ds sub adc jns pop mov inc ret repnz and ss inc lret mov jmp pop roll push mov mov outsl mov push jge cli mov inc popa repz in cld out mov ret and je outsb dec sarl subl ja cld lret mov and push fiaddl push push jmp mov pop cmp push lret adcl mov stos inc mov xchg and stos dec movl std and cs pop push cmc pop cmp pop out lahf inc adc jl pop adc xchg mov pop xchg mov jge adc push arpl pop pop pop and testl cmpsb ret jmp mov add pop inc neg andb cmp std pop repnz adc stos dec push push ss add pause sbb sbb sar add lret cmp mov clc jg mov dec sub fcompl test sub fdivs dec fisub lock mov nop sub pop add scas lret inc das incb xchg flds pop pop cld mov mov jns aaa clc mov and add inc fptan pop gs aas mov cltd push in ret pop mov repnz push mov cmp daa jmp pop fwait movsl mov sbb arpl mov sub sbb cmc pop sahf push push mov arpl aaa jle jp loope mov ret xor scas add xor mov pushf mov jbe insb add or xchg cmp imul push orl pop inc pop and fistl xor notb je jge add (bad) mov popa pop pop repnz cmp fisub shr addl clc add scas push xor fisubl push pop mov inc jp out inc (bad) xchg add add jmp mov mov pusha sar lret sbb test sti sub pop aam pop push icebp adc mov stos push nop mov mov jge rorb or pop lret jmp push jo sbb sbb fadds pop pop test sbb inc daa xchg xor lcall jne pop fwait cmp pop sbbl sub inc adc cmp iret pop sub leave cltd inc out and push jg xchg adcb xor jmp and das cltd push add push sar out popf dec xor or xor dec jbe add push outsl addr16 dec inc jmp popf pop jge lret pop add jge pop in sbb sbb adc out out loop pop and jecxz test mov (bad) sub out push dec out cmp xchg int pop push dec sti dec mov or mov or adcb popf cmp push xor jmp fstpl or adc add cmc push cmpsb insb mov lahf adc mov sub push xchg call adc sti or mov paddq inc stos cmpsl mov lret pop test int adc in and mov add dec arpl in int ret jbe dec orb push pop xchg imul mov shl pop push mov sub rcrb jmp and push scas and daa aad fwait adc pop imul repnz sbb add es push mov and mov or pop rorb inc pop stc push jo mov daa dec dec pop int or cmovb cld dec inc sbb aam pop cmp lret shr jne scas sub sbb jb ret ljmp rcl cmp inc push and pop loopne lods aaa rcll sbb sub icebp mov loope ds (bad) sub mov cmpsl jb xchg cli in sti aaa leave je rcll int3 mov adc cmp mov clc xor and jl add mov fs stos loopne out fwait pop mov mov scas sub pusha push out lock and popa xchg pop out sbb clc ja dec jg stc add cmp push jge imul jae inc sub icebp sub add pop xor jne sbb mov decl push lret dec insb pop cmp push das xchg in adc out dec ljmp fisubrl in jb dec adc or (bad) mov jno incl out fistp je mov pop inc arpl add push push push jge pop leave out daa add xor mov out (bad) in add fbld jg aam hlt inc iret xchg push das xor and xorb sub gs inc aaa and lods enter out out jb dec popf add daa orb stos das lods add sub xchg adc push jne cmp adc push clc push andl and mov dec xor cmc mov dec (bad) mov loop mov sub daa pop dec inc or loopne insb or or pop add sbb ja in in xchg sbb stc call jmp outsb hlt pop daa aas sub xor adc add push mov cmp cs jmp int outsl in cmp mov and xor push xor (bad) xor mov push push inc pop das loope jns mov rorl add loopne adc mov inc mov adc aad push test adc cmp sbb fwait and pop or adc and cmpsb and xor idivl add (bad) mov (bad) bnd xlat and adc pop mov shrb xor enter mov jmp sub and inc cwtl sub movsb and (bad) repnz or or mov cmpsb stos rorl jne or icebp lcall jle (bad) negl test cmpsl jl sub imul daa jmp lds or and das mov mov cltd repz sti push jge (bad) ss push xchg adc mov and mov xchg inc (bad) push xor popa add cltd in scas sbb push int3 dec or add jb stos xchg or jp test fldl sbbl push xchg push outsl pop add (bad) int jne push sbb js push adc or int push jp xchg pop sub jns push int (bad) cmc js repz scas xor mov push iret rcll xchg call rorl xchg push xchg dec test sbb cltd jp inc pop add inc sub pop cmc shl inc nop mov dec clc push (bad) pop inc or loope mov aaa sub jnp xor add cld orb aam or in add inc pop pop cmp nop std scas pop xor cwtl pop lahf shll (bad) mov scas loop,pn (bad) mov inc xchg (bad) lock daa (bad) int iret pop pop add push xor sbb xor shl jnp push xor or divl mov push push pop push mov aaa jno cmp ss xchg shll mov inc sbb ljmp (bad) roll inc icebp xchg pop fwait lret lret pop aaa or xchg and in sub dec push dec xchg add and repz addr16 outsl or or push pop (bad) mov cmp loope lods test insl shrb (bad) fildl add jne pop in and (bad) jge pop add movups push jp or out sbb add popa pop add mov mov (bad) pushf sub add push aad xor dec dec in pop mov fcos ds js push out cmp decb (bad) mov sub mov arpl mov aas add sbb daa js daa int aad cmp sbb xor pop int mov in sar lods and xor jle cs push push mov decb les xchg and push pop arpl in in jle jmp or xor mov cmp js or adc sub pusha jle dec pop sbb dec pop je add nop sbb inc fistpl mov mov daa ja push pop xchg dec inc ret ds cmp push push push push push jmp mov push std pop push roll or add push int xchg sbb int3 roll pop pop pop (bad) sub cmc mov adc mov incb mov pop add clc vphsubwd insb xchg shlb dec pop cld xchg rcrl cltd jg pop imul mov fdivl pop cmp sbb cmp cld clc add xchg mov add lcall ljmp mov pop enter sub or jmp mov dec imul mov push ja popa dec pop jmp sti dec loopne mov cmp mov jb xchg mov xor pop jg or and mov push loope orl or xchg arpl push mov (bad) lret xlat push fsubs mov les xor mov or mov push or jmp adc xchg iret imul call push mov mov push inc mov push das adc push lahf push sub jg add subl and in push lea mov jo bound xchg dec cli test dec dec lea movsl jmp movsl adc loopne negb push dec cmpb mov pop clc sub in clc xchg xchg mov loope dec xor push lret or push inc sub cwtl lea add push cmp icebp lods or jnp xchg lahf jns outsl out or rcrl push lahf sti sahf push adc dec ss test inc push mov cli int3 cwtl subl (bad) pop cmp jmp add mov add and in jns xor ret or pop mov or add jne push loope aam pop jnp cli addr16 sbb jb (bad) and mov ret icebp seto pushf ret and faddl mov sbb sub pop in movsb lds push (bad) adc ljmp push popa dec push into lret jnp or pop dec rcr inc cmovge pop push mov cmpl mov or insb pop notb mov outsl nop in add dec sub in push jmp insb dec popf mov data16 sub mov add pop jnp mov hlt nop dec adc adc inc pop data16 hlt fbld cmp or xchg icebp adc (bad) addr16 scas add lahf cwtl pop jmp shl jns add loopne je stos out pop lret pop lods rcl mov adc xor stc xor daa sub sbb iret rorl sti lahf xor shrb xor loop bound sub mov call sub mov sub sub mov les (bad) jne add and and push or cmc jge and pop add js mov and test push mov mov cmp fisubl pop sbb mov pop out sbb lea sbb std push and clc pop jmp add cld inc rcll add xor je or mov pop or jmp mov inc fsubrs xchg xchg (bad) sub mov jnp (bad) adc movsl out out dec scas (bad) jmp or pop push test leave iret jo mov and popf mov sub add (bad) (bad) adc add cmp out ss cmc repz sub jmp sub and loope add repnz out mov xchg jp pop fildl cmpl cmc dec mov notb stos mov mov ds or push push push add push mov pop lcall push xor loopne (bad) dec jns sub push and ret xorb lahf fsts xor out cmp push push or cmp (bad) adc dec add lcall stc pop pop xor and jae adc push or add xchg cwtl hlt sti addr16 mov jno,pn add push pusha or cmp cs pop xor mov hlt cwtl add insl jmp sahf lods dec gs add ret mov js ficoml pop push sti xor xor shrl shll and pop shrb or jecxz lds inc faddp push fs push mov hlt push xchg sub adc iret (bad) sarb mov iret mov pop inc test inc incl jnp mov mov adc mov shr sti mov inc sbb fisttpl (bad) out insb ret pop adc scas sub push (bad) test xchg loopne and mov cmp adc shr les cld dec mov push das std adc push push mov mov or dec cmp dec scas xor call sbb into adc das loopne loope push cmp pop call cmpsb push pop in adc sbb add push dec push test in ja inc jmp loop push and add sub add add cwtl xor inc push push pop fs xchg stos stc cmp and inc sub adc data16 fcmove test jno push ss in inc and test movsb jl sub in sub mov int sbb cmpl add (bad) pop inc sub in cld out mov outsl sarl addl jo dec mov clc inc xchg je out (bad) mov push pusha test loope push cmp es sbbl lods arpl ja aad pop rcrl imul push fisttpl daa (bad) push dec addr16 lcall adc push ss test pushf aaa (bad) cmc fidiv add stos stc add jo jb and loopne adc add pop push push push int jge rolb dec mov dec sub in std inc dec movsl (bad) movsl pushf (bad) in mov stos mov clc (bad) movb aas out (bad) repnz adc and aam pop mov int fisttpll pop sub addr16 setle mov into pop pop clc add sub jmp jge movsb adc inc inc xor push xchg stc loope arpl scas es xlat popa (bad) or jbe adc sarb cmp lret dec ljmp or daa xchg (bad) dec mov stc popa or dec xor add or shl jo insb imul cmp and dec shrb cmp mov pop in xlat pop pop mov sbb into cwtl inc pushf lahf and add sbb out jl dec sbb sbb push cmp pop in pop jmp mov mov fildl data16 cmp push sub or arpl ljmp pop mov adc and test out flds sub push je push in icebp scas fwait push pop adc jmp je imul sarb mov lahf ret lret ja pop push push cmp add aaa add jmp mov pop loopne pop addl mov fwait jns dec ret xchg pop mov jmp divb mov sarb loope or sbb adc mov rclb adc mov imul leave sbb xchg pop shrl repz stos cmp test inc incb and hlt jmp fldl ret push inc pusha std sub add dec jp ds insb iret ja pop push in and pop mov insb pop popa popf nop inc xchg mulb fistpll sahf icebp imul push or (bad) (bad) das jl jno lock lret push pop push insb or xchg fs shrl sub mov dec cmp imul shrb add sub and and xor lret imul pop addr16 push jmp pop (bad) mov push lahf ljmp jo insb jne adc push push movsl adc outsb std sbb pop pop stos lcall scas fidivr and test mov mov cmp stos inc xor je xchg in mov push push pop push movsl leave rcl push push inc mov aas mov sub pop xchg pop push rcrl mov sbb ret (bad) adc sbb xchg xchg and mov push or lea sub xchg mov imul sub lret xor into or mov add jl (bad) (bad) mov add push iret popf xchg mov lock int3 stos xor (bad) dec xlat mov fiadd push in mov mov mov sub mov and rcr jg adc das push pop sub fadd sub outsl leave or push fisubl pop mov jmp xor pop push push fnstsw xchg neg sbb mov cmp aaa or decb (bad) aad pop or rol (bad) fist inc (bad) div daa sub and xor popa jg add fsubr stos xchg jns push ret cmp inc mov (bad) into xchg pmullw cwtl and neg subb and enter cs sbb or aad call pop jecxz jle stc and ret nop jl dec xchg lret add sub mov loopne cltd or sbb lea jge (bad) push pop (bad) mov jp pop push push repnz popf je pop xor jecxz aas gs dec add or sysexit pop adc das mov add dec mov xchg xor int3 (bad) mov or and in push mov call loope mov icebp inc das sti sub pusha dec or dec sub adc mov add add fucom popa push mov test sub jmp push add push push push call pop mov cmp push inc inc inc sub (bad) cmp bound sub pop stos aas inc mov sub or mov daa push mov test leave imul mov mov ljmp or ja lcall (bad) jno pop adc test and mov dec push jmp cmp add cmp push mov shr push push push mov mov rcr and inc test sub inc mov sbb aas ror hlt inc sarl dec sub ja jmp mov pop out outsb xchg stos pop mov mov loopne mov das xchg pusha adc push xchg and add xor inc lret jle clc push pop mov arpl sahf jb inc inc jmp or jns dec rorb push inc cmp ror dec adc jl pop pop cmp jmp jbe jb fs mov pop mov imul pushl rclb enter sub pop (bad) push cmpsb gs lds pop dec mov xchg pushf divb or mov inc xor imul cmp add dec jg loop mov jmp pop in pop mov ja cmp int ds mov pop test adc rolb add stos jne inc js xchg xchg (bad) daa ja cwtl mov xor push push sbb out mov les jae ljmp dec xor or rcrb cmp xchg adc ffree (bad) out mov jmp in leave jge rcrb sahf dec or flds (bad) cmp jmp or pop cmp inc xchg add je sti push sti or cmp cmp mov mov xor add sub inc jp xor out xchg stos xchg stc or push repz pop cmp fimull jo jmp mov out movsb daa and xor sti sub push and int js aaa fild lcall pop aad das or sub inc loop adc cmp arpl sub inc addl mov and out jmp sub pop fs cld sbb mov shl or or stos inc jbe testl imul mov sbb es scas daa std test scas adc push ds fisubl jmp xor pop (bad) sub adc add add add push mov xchg stos push fdivrs pop jmp sahf adc adc inc mov xchg int3 xchg and pusha lock inc mov jnp movsl pop push or nop and xor or push add pop mov cwtl and cmp fistp (bad) push sti out aas sbb into mov mov xchg jae mov push andb adc out push push cltd add fadds pop add fnstsw mov inc rcrl cmp xorl adc popa add cltd sbb dec in into or cli pop inc jno clc cmpl cmc nop pop push add push sbb or out sub pop jns es or pop lods clc (bad) ss push das push jnp bound push xchg nop mov push mov je pop call int3 mov inc cmp adc idivb adc add or pop aam xchg mov sti das (bad) lret dec popf jnp mov aaa inc lcall sbb cwtl pushw xchg push lret lock jle pop xchg loope fs mov jge (bad) out xchg mov popl mov push jecxz fisttpl bound mov sub push cmp (bad) push xchg fstpl push ja test inc dec mov cmpsl or out mov dec push repnz jo inc (bad) mov sbb pop mov jnp xlat pop out or test add sub jp out push (bad) sub in pop sub cmc inc sbb mov pcmpgtw neg cmpsl or sbb and mov das cmc adc dec and push mov push pop dec jecxz ss and mov (bad) (bad) mov das lret pop pop add adc loopne ss sbb pop inc jge in pop jne and pop mov and mov or rcrb adc popa pop add mov push jne (bad) repnz dec fldl jno lahf jle jb jbe repnz les and pop orb mov jmp xchg push push push xchg push add popa adc jg inc fidivr add mov push xchg movsb pushl jecxz vmovlpd sub and loop adc mov add mov xlat push test dec inc lods or mov inc inc mov adc ss out lret add (bad) pop jb xchg (bad) sahf (bad) push mov inc mov aaa jne add mov repz imul xor dec pop test fidivr mov xlat mov cltd mull imul jle das push inc dec cld idivb daa sbb add scas es outsl sbb insb mov cmp jmp adc repz mov pop loopne xor jp jle in in (bad) mov mov or sub or ret add imul xor jle and popf popf push jg icebp mov pop cmc repnz inc sbb subl push cmp and mov mov orps int3 inc out sbb push or inc add sub fistl cmp pop xor lahf and sbb ret daa mov pushf or inc rolb adc xchg rcl add and fistpll jmp test test fildl pop pop push jb push dec sub nop bound in fild aad pop stos inc cmp mov and or xor push cli (bad) (bad) and sub mov cld cmp lds inc subb mov pop repnz int or mov xor pop add add (bad) call jmp jne add mov fnop aas notl sub add mov data16 jo mov jbe out mov mov mov push jnp lahf data16 loop jns pop pop fs sbb lcall pop adcb neg jo mov mov (bad) ja mov jecxz mov push sub or int3 push jmp adc add insl adc outsl push or pop clc mov and sub jg push cmpsb fadds pop push mov xchg pop movsb inc sbb pop sub ret or (bad) lock js add repz adc add mov das jmp and enter push nop jb xor dec aas or fldt bnd add pusha mov nop inc cli cmp stc out scas xor fwait jge xor popa addr16 outsb sub mov adc ret mov pop add add movsl adc cmp ds jne sbb dec add sub cmp sbb (bad) xor dec add add add rcrl test inc int pop sub pop scas push add fwait push mov sbb cwtl popf ret pop call sub neg int3 in cmp dec out jne mov (bad) jmp inc pop das mov mov mov push mov lock pop sbb mov sub int std enter mov pop xlat sbb mov sbb mov mov movb sub or repnz out cmp xlat incb add push pop jg cld ja leave push (bad) out pushf aaa adcb push rcll test pop pushl or or or outsl adc (bad) dec adc outsl out dec scas test jmp sarl xor adc arpl stos addr16 cmc and xor leave push push cs cmp cmp aad fucomi sbb sub (bad) pop cwtl sbb lea push jne push inc mov loope jmp enter mov enter and and fist adc inc xor cmp jge jl push ds mov (bad) repnz mov jg jb daa (bad) movsb mov out pop pop xor mov rol inc loopne inc imul or jno scas je int push das addl lahf adc mov sarl int3 hlt dec pop aam pop and jbe (bad) mov dec jmp pop shr loopne inc loope call rcll jns inc and push pop pop push or stos cwtl adc repz out sbb stos test mov loope (bad) jb and pop test pop xchg push jae insb cmp xor xor push push adc push mov das mov adc mov (bad) (bad) out pop mov xor or jnp fidivl imul mov pop xchg andb call push xchg fsubrl aas push ret or adcb fs mov jp loop push push or in rorl jb adc mov cmp not dec nop arpl inc fwait out push inc fs mov rol mov jb sub repnz adc jo jecxz cltd dec mov insl lea dec inc or xchg xor je icebp movd mov push mov insl test add jae loop out aam push or cld loopne push pop pop inc cli mov push jl ret add push or repz or faddl sub sub or and push push or (bad) mov cmc push arpl xchg cmc push or enter jecxz mov jg jecxz mov push lods lret daa add test movsb loopne adc push adc mov pushf ds mov iret scas xlat mov pop imul jae or inc std sbb (bad) test out hlt xlat inc subb popf push pop and mov fisubr sbb jg pop mov das and aas xchg xchg pop add and movsl in push shr jp jne xlat inc sbb pop pop inc mov pop lds or (bad) lock lock out sub cmp pop sub inc (bad) cmp into (bad) repz jo adc lret or enter dec mov or pop push (bad) push fs push jne jp xchg je mov adc loop mov lods xchg or insb aad cld sbb push mov jle sub (bad) mov dec or jno or jecxz insb pop clc insl sbb pusha mov xchg inc aaa mov add pop outsb loope les push mov ret or jmp xchg addb or daa out xor or repz sbbb push sub xor adc fdiv push push pop test push arpl jb dec xorb and nop mov adc mov sub push push fldt add xor popa scas out sub cwtl daa cld loopne shrl mov cmpsb push push (bad) movsb bnd (bad) ljmp sbb outsl adc sub add add or inc test in sbbl sti or xor dec dec aaa loop or loope fcomi mov mov xor xlat out hlt inc rclb (bad) repnz mov mov pop dec cmp rcrl xchg or ss mov pop cmp or jnp push lea icebp cvtpi2ps outsl pop inc cmp add flds aam cmp xchg loopne out or jmp aad cmp adc sub inc pop push in imul push je jae dec xor jmp pop data16 mov push sub call inc fadds and lds lods dec pop (bad) and es jbe dec mov cmp lods sbb pop lods fsubrp pop adc dec push and cvtpi2ps mov mov mov xor scas lahf (bad) hlt sub dec jg sub aad out test rorb jle ret xor add (bad) jge jbe (bad) jg xchg les aam arpl pushf xchg rclb pop sbb push mov stos ja push in push (bad) mov (bad) add add mov xchg icebp jno mov in mov mov bound push mov fnstsw cmp and arpl testb cld xlat rcrl ret jge call xor mov leave sbb or and (bad) in add adc popf mov loope sbb pop and mov mov pop call jmp rcrl mov dec (bad) out ds pop frstor xor dec lret adc inc pusha jb xor push sub xlat inc pop or lock lods push mov shll jg jecxz jmp rorb fnsave fld add in iret in push add add inc ret inc testb sub pop or sbb seto (bad) push mov dec leave int3 pusha add add in rcll mov data16 lret sub neg out outsl adc subl (bad) aas int3 scas pop jno imul dec jp or cmpsl inc inc (bad) inc std or add inc mov in ljmp xor pop xchg not rorb movl mov (bad) push pop in fild bnd push mull daa leave pop add push shlb push inc scas jle push sub adc sbb sbbl push push fdivl jne out imulb stos or icebp js fistl fs loopne jmp lcall push add push add pop (bad) or jbe cmp mov imul push cwtl cmp cltd adc subl das dec or xchg arpl std inc sbb aad mov or jns cmp aam push mov mov add sub fcmovnb or dec xchg (bad) loopne lods nop ret add jl push sub mov loop pop jle arpl mov (bad) mov and adc loope push pop addl mov pusha inc sbb mov push in into pop adc mov xor jmp inc push sti popf add fmul jecxz pop xchg mov xor aad sub or repnz pop mov and jno xor aam adc mov xchg adc dec add inc add mov xchg mov jo xchg mov pop leave mov mov clc (bad) pop (bad) outsb leave clc andl in push push xchg in cltd mov jmp dec mov ds jp in das mov out inc jbe clc test hlt inc sbbl int3 adc pop jl cmp push or and daa (bad) add out push or adc fcompl mov pop mov movsl pop cmpsb push divl sub fadd push pop cli jo jb jl push inc jmp dec cli inc repnz (bad) add add sbb lods or clc mov mov push js xlat adc xor xlat out into insl or std cmc mulb ja lahf jae jo aas push add or pop cmp sti lea das or jns jl add jb or adc out adc xchg push test or cmp pop xchg or fdivs jnp je int3 mov out or ret pushw lods xchg fldenv xor movsl fsubrs sub mov adc dec les (bad) fmull neg stc add cmp pop mov hlt dec lret xor jns popa push cmpsb ret je or cs and mov cmpsb dec adc stos push mov aam adc out add aam hlt (bad) jmp cmp or or push ret add stos mov icebp or (bad) xor add jmp mov xlat out popf mov shlb adc loop inc adc es cmp test out mov adc movsl test pop ljmp push (bad) cli je sub sti outsb sbb stos jae out inc in (bad) pop add std arpl daa mov push and lds mov dec inc jmp mov shl les (bad) scas ror movzbl orl stc inc imul in mov or testb jns roll (bad) rcrb push das (bad) sub cmpsl xor mov mov sub sbb int3 mov add push mov adc out fcoms sbbl push jns arpl mov push insl out iret inc xor and push sub add sbb lea or push add xor push adc mov test fldenv cmp or dec jne sub call test jmp dec sti sub andl lock pop or test adc popf test and or mov or or add sub sbb mov aam call popf ja cmp sbb sub mov outsb in (bad) or or mov xchg mull sbb (bad) (bad) mov lret test lea dec jae xchg out subb sub sub or sub mov mov jae pop out pop or dec popf pop in add sub add sbb sbb loop pop inc mov out orl mov mov push mov test sub pusha mov pop inc inc pop ret movsb enter jl dec testb incl push xchg push scas lret xor cmp notl pop loope cmp and inc or push rcll das inc ja xor stos in pop (bad) pop sub arpl daa in pop les out push pop and mov mov push jge test sbb sub dec or cwtl mov out and xchg pop aad xchg repnz (bad) and in inc mov mov idivb pop lods inc lock jbe,pn (bad) and mov adc push mov or or and xor pushf lods (bad) inc xchg mov push push sahf pop cmp sub inc add push jmp (bad) mov in jo out mov inc scas je push xlat inc and jnp ljmp jns stc xor out pop add xchg mov shrb lret test fmuls xor add push or in xchg mov ret push aad add cmp jne or incb pop sub cmp lock pop sbb add sub bound fiadd push (bad) xchg pop jl adc push sbb xor add dec (bad) mov xchg xchg adc (bad) cmpsl mov daa sub or jle insb add pop (bad) push rcrb pushf or adc or mov outsb mov cmp in dec xchg dec in pusha mov (bad) add (bad) jbe ds jle push adc inc inc dec int3 stos test mov leave bound fsubrl cs pusha sbb adc or jmp lret jp sbb dec jge add aad or or popf push lret jp jno or adc lea leave inc xor push lahf icebp jg push mov arpl (bad) jmp push daa pop push jnp out push xor and jnp outsl xor mov lock mov dec mov adc sub (bad) sbb lahf lret (bad) ds xchg sbb cmp lods inc addb std (bad) call inc ret and dec frstor (bad) sbb pop in es aam scas lret dec dec (bad) pop out insl push sub leave push fnsave push mov adc add popf sbb mov std jb nop stc ror (bad) add sbb and cltd add push inc pop add leave xchg or jno cld (bad) pop stos push jmp cmc cmp push pusha mov sbbb rorl loop mov jne pop pop inc push inc ficoml ret pusha data16 pop (bad) mov ret loopne jmp scas push add shl sub (bad) cmc jnp pop jmp sub inc pop push mov and xchg repz rorb xchg not push cvtdq2ps mov add adc subl ret cmp xchg fadd push imul push loopne push sbb bound (bad) (bad) mov push testl mov fldl call mov imul xchg jnp mov push repz daa add pop ret lret outsb mov sbb (bad) loop push mov sbb cld subb xchg mov loope pop xchg (bad) cld cmp stc jnp dec arpl test sbbl pop sub xor mov dec (bad) push push add (bad) ss outsb push sbb add cli cld add cld pop adc je xchg (bad) decb cli xor xchg pusha ljmp pop int clc fs rcrb adc push cwtl jns sub rorb das xor mov das xlat adc cwtl fs shr fcomps xchg ret mov aaa (bad) push pop mov add loop jnp jg mov add cmc jmp pop (bad) cmp adc or pop sub loop enter jecxz test arpl mov andb add fwait xchg loope cmp mov (bad) hlt cmp dec pop inc cwtl pop sbb and adc ds sbb jp (bad) pop push loopne jmp cmp sarb cmp pop xor xchg mov jmp sub xchg inc ret inc and cmp (bad) mov dec testb addl enter push add out cmp sti out xchg std adc pop sub add push jb aas out in cmp das insb xchg cmpsb jecxz and test add adc xchg scas cmp and enter fist scas fcoms loop mov xchg pop pop outsl or icebp or rcrl (bad) ja popf lret mov pop stc loop jmp or or lods push lods or pop mov jne daa leave inc jl fdivs or inc push dec in cmpsb int adc rcrl cmp cmpsb lret fcoml mov ds xchg jp inc fucomi ret (bad) sbb mov test cli pop dec pop stos pusha cmpsl mov pop xor (bad) fadds faddp pop daa jmp sub ret in aad dec pusha test bound daa pop jmp out loopne pop mov mov fwait mov dec (bad) je add jmp mov mov adcl push mov push es adc dec or add push test or adc (bad) popa adc lret lret jge xchg fisttp pop cmp cmpsl mov jp pop roll push sub stos push inc stos icebp sub sbb xchg imul pop sbb pop neg jg das mov shl xchg jecxz fstps outsb lret adc mov add les js sub (bad) push jmp cmpsb sarl addb rcll pushf mov xor test sti in ror adc adc mov mov (bad) inc jmp push dec pop scas dec jg fbstp jb int in minps inc rcrl ljmp push sub data16 dec or adc jecxz xchg out repz fimull or push out lock push jmp ja cmc das icebp call push mov repz dec push cmp mov or push dec mov sub cld (bad) sti xlat fcomps in cmp sub scas mov dec and adc jmp dec fstl jnp dec test sub (bad) xchg pop mov sbb aaa dec das stos nop lcall in rcr mov jmp jno cld movsl push jno test xchg cli jg sarb lcall mov dec xlat adc jb cltd aaa dec jl sub xchg mov fxch xorb bound and mov push mov sub xor sub ds fnstcw mov mov inc dec jae sub jecxz mov inc push lahf pop xor lock (bad) fisubr mov xor sub ret andl popa mov add mov jecxz or push jge sbb enter dec loope xchg ret mov jmp mov pop push cli mov and popf mov inc xchg ja daa loop push inc and xor jge daa push sbb and es sbb mov or or mull xor outsl mov pop mov into or jns pop mov in lock sub push inc lods mov dec mov push dec cmc adc dec int inc imull adc dec lds add push dec add nop cld or mov adc or xor adcb sub bound (bad) lret mov push mov pop pop pop call mov movsl jg fwait popf into decb fdiv out xor shlb and mov daa pusha rorl ret cmpb test inc jmp arpl roll les data16 jmp lods (bad) decl scas in xor sub adc sti std cmp loop and ret aaa sub insl pop fstps clc fistpll sub or push mov xchg or in lahf adc jl mov pop push push add out add cmp and dec cli pop xor cmc stos jbe (bad) pop jmp mov lret dec jge loop mov adc cmp cmp dec inc cs call out jp jg ret fninit dec sub pop fadds sbb fldenv jecxz sbbl xchg fs or add pop xorl pusha jmp sub adc lahf dec popf pop sub je mov dec jle arpl and mov push ret push mov test mov mov jbe pop (bad) sbb test and or cwtl repnz (bad) jo lods jb popf cld das sub push mov call sbb mov lahf clc lods fisttp mov (bad) cmc xchg dec dec adc inc mov inc fistl push add leave pop pop and inc icebp add scas mov and or sbb or sub sub or or mov popf add pop sub and push cli scas mov push pop dec adc push dec pop xor mov stos xorl mov and mov push inc test popf jle sub rcrl std dec add sbb and insb popf cwtl cmpsb push or jmp dec xchg (bad) sbb in and pushf adc push add (bad) test ja divb xchg gs push mov and mov cli pop shl cmp mov xor fwait mul dec or inc test out sub adc xor dec stc lds cmpl mov pop inc out sub jle and push pop add jo or adc add outsl popa in jmp and stc loop out or sbb mov outsl push rorl lds hlt jns add call sbb jge ficoml mov push (bad) mov add fld1 addl pop and mov fildll rcrl xor (bad) lea fdivrl ss test outsb std dec mov inc mov jle xor mov and or dec cmp ljmp mov jmp push test mov xchg sbb je sbb js dec lods push movl lret repz or dec sub or int jecxz rclb rol adc xchg daa inc push movsb jecxz outsb mov call ret mov (bad) (bad) xchg pop inc mov sub iret inc into rcll dec mov mov mov cmp jle nop inc pop (bad) icebp int3 jg sbb fmul jmp stos les dec push push ds or divb or push pop loope outsb out pop mov jno mov mov and inc jg sbb test jecxz inc imul clc cmp out push idivl or push je cmp lods iret fnstsw stos and sub cmc or pop adcl rcrl mov sbb jbe bound jne jge sbb mov es dec and aad aad (bad) mov iret (bad) rcrb imul lods scas rorl jmp xor pop mov cmp push inc popf arpl mov push shr ds outsb pop xchg push dec xchg add mov pop push mov andb cmc cmp daa rcrb das push push cmp adc int3 loopne mov jo pop xor movsb aam mov jnp and sbb sbb sbb and xlat jae ret mov ret scas sub cmp xchg mov jle cltd (bad) adc test dec stos mov pop les xchg mov pusha stos mov (bad) push dec jmp add cmp mov jle iret dec mov and int3 dec inc adc out mov (bad) fisubl imul adc pop loopne repz (bad) jmp add xor add les mov adc fcmovbe fild addl pop pusha divb sub pop aad xchg mov add lds push add sub nop mov cmp sub inc rorl xchg jg aad sbb aam imul (bad) mov adc daa lods or decl mov testb cmpl stos pop pop leave aad repnz clts push daa data16 mov std jo jp dec iret les cmc or dec aad mov inc mov in push xlat loop popa and les jp xor mov jne into and loope out or out das jmp aas loope mov cmp jge je jne add jmp fdivr out jecxz lock or xor jne scas cmp pusha (bad) adc xor add jnp cld push inc sub mov jo (bad) mov stos out cmp adc loopne mov or (bad) push cmp outsb push imul js xadd push pushf fistpll mov jecxz mov lods mov sar int in and jo push pop jle or (bad) jmp pop shll push sbb test imul les (bad) dec call mov out push ror je mov insl jno add sub or jae mov adc xorl jp lods push add sbb or test lcall sbb inc fdivrp xchg inc or neg add pop xchg jnp cmp mov xor dec pop int3 jle pusha call or xchg cltd add mov outsb imulb test inc (bad) jo cmc jl ds dec lods jo mov stos xchg mov cmp add inc mov cld sub jp rcll out sub nop shr add push pop cs push or fsts sbb xchg mov or mov dec pop push xchg nop outsb add or adc add cmp lods repz mov push adc mov test jl sti sbb mov and pop out or mov inc not inc sbb add xor stc (bad) pop loopne push push jne inc add jp js stc mov or (bad) pop jne xchg mov jb idivb mov or inc test imul into mov xchg loop mov cmp or mov and push mov jns and cwtl imul call push (bad) arpl mov jmp add stos fs and jmp mov inc cmp addb cs in test loop call mov xchg mov pop data16 pop pop and xchg stos test pop adc jmp push and loope mov fucom xchg add sub mov xchg mov jmp nop ja cmpsb push rcll push sbb aam ret cmpsl and test add pop mov cmp or sub and add jno pusha aam mov rcr push popf dec inc loope loope or fcoml and xor je xchg out lcall daa cmp mov or mov faddl gs xor sbb xor cmp rcrb stc adc sbb out (bad) xchg hlt fimull xor push stc or mov imul or daa mov inc sti adc out (bad) mov sbb sub stc push lea xor mov adc jo nop pop add inc scas enter xchg dec cwtl cmpsb and push push fisubrl push mov mov pusha xor push rolb daa jae cmp and dec rorb xor push xor jmp xor repnz lods popa sbb shlb repnz cmp mov mov xchg jle ret lret xchg and xchg xor push lods xchg arpl fcoms mov popa or outsl popa adc mov add jg and sbb inc mov or repnz cli mov xchg or js jnp imul sahf (bad) rorl loope mov fnstcw pop add pop lea push adc jno adc push dec mov and clc sbb cmp adc in sub adc cmp xor les inc mov and pop pop sub aad jp sbb cmp inc dec and jg dec aas cli str and ffreep jg and pop push sbb cli cmp add rcl mov jmp xorl shlb sbb jne push or out pop dec lret cmpsl and pop and pop push cmpsb jnp and (bad) mov in shr jbe push pusha add adc or pop insb iret cltd rep test push jno imul lahf movsb jmp cs js push fldt jecxz mov pusha adc xor mov out mov jbe mov sub sub inc jmp ret or cmp int3 shr push sub jp dec ret std or repz daa fstps lds dec mov sub jo jle cwtl insl push mov mov jae rcr shrl push add (bad) push mov add test into fnstsw cmp jbe mov (bad) cs out sti mov cmp push pop loopne mov sbb push mov jmp jnp push jecxz push jp lock (bad) not xchg (bad) aam xchg aas adc out pop lods add mov jg sub inc push cs inc sub mov pop dec and addr16 bound fistp pop inc jno repnz (bad) push mov fucomi inc sbb call lods dec mov aam sub pop mov and mov jo push std inc cmp cmpsl aad pop stos add jo mov jmp std inc leave push jge int3 daa popa addr16 icebp inc cmc sti push mov test cs gs add insl adc neg pop mov adc (bad) dec fwait sub adc aam scas jmp and aas pop pushf neg sbb push scas imul pop addr16 negl mov jl pushf mov jle add ljmp mov or pushf cli inc jb mulb fdiv aas cmpsl loopne xchg push dec bound push push (bad) mov dec nop add jl and movsl push shlb mov lret in (bad) test inc mov pushf add add sub fisub ret ljmp in sbb daa (bad) xor mov lret mov decb imul rcrb test leave in prefetchwt1 add mov and or add cs dec add jmp push idivl and add (bad) jg mov loope sbbb dec jmp cmp das fs test mov aaa lods iret enter mov jmp mov out sbb lret ds cmp fstpl mov mov aam ret push pushf pop pusha shr ret or and cli mov xor sub mov inc jmp mov ljmp lret enter sbbl and sahf fimul sub dec xchg xor pop xor nop bound (bad) xor in mov jae,pt lret fist or (bad) lods ss inc push movsb inc or jmp movsl test inc aam addl mov jg shrl add mov adc jo pop mov adc add jno out sub imul adc rol test push fcmovb push cmpsl das (bad) xchg jne in or mov inc fld loope jbe mov and mov notb pop mov out std mov js mov test movsl mov out cmc leave jbe aaa xchg lret ljmp (bad) mov cmp das push pop adc hlt in xchg mov pop mov cmp jmp mov and push jae movsb lock and dec add xchg push mov std loop adc sti movsb and push pop xorl jns ret mov imul into inc enter subl sbb xor push clc add pop inc jbe pop jmp loop xor mov test popa sarb xor push cmp or int jne mov add repz sub push bound pop enter in mov and pop sub cmc ljmp gs pop add int3 lea stos std (bad) xchg out test stos punpckhwd push fist xchg pop out cmp aaa mov inc mov fwait mov (bad) or int test jmp imull sbb push jmp cmpsb popf hlt std into (bad) negl push lcall pop add cmc and call bnd daa aaa pop repnz or and push or pop xor inc ljmp and inc or out insb add dec or cmpb sub pop dec mov or inc test adc repz sub add xor mov or flds orb and add cld jmp and aaa and xor add sbb addl pop call pandn sub movl add ret or movsb add cmpsl inc arpl adc pop jo ljmp mov rcrb jae cmc push add rcl sbb add lea mov pop pop out popa push mov test jmp add inc adc jmp loop fstl pop fsubp inc add pop insl mov loop sbb mov jmp lods andl (bad) pop cmc cmpsl fbld jns xlat sbb sub fnstsw and mov inc aas pop outsb call jp xor push daa data16 ret and mov pop dec mov dec adc scas vpsubq ljmp cmp mov sub icebp cmp or mov mov incb or das test mov ret int subl out dec and or cmp bound popf test dec lahf jge enter jno xor int sub or hlt movsb repnz jb je js dec rorb push and adc les gs mov xchg les add xor add add xchg inc fldl xor dec ret sbb sub fcompl insl dec add mov mov mov lock arpl push jmp dec add inc jmp mov push pop mov fxch test pop inc cwtl rcrb jmp or clc aam imul push iret test push jmp sbb pusha loop xor popf push inc pop add cs push and pop stc iret (bad) rorl incl lret adc rcrl sub (bad) hlt lds aad jp push mov xor fcomps jp cmp (bad) fsubl push dec mov stos inc mov pusha pop inc in cld and neg jp or mov clc cmp and mov push adc xchg mov push insl stc mov js push mov sub pushf sub mov sbb (bad) or cmp xor in xchg or les repnz mov cmp or lea adc push xchg push mov fistpl jl dec ljmp fwait adc mov xor inc dec push ds pop push imulb das inc ja xchg notl (bad) xor adc or fdivrp cmp fwait inc mov test add jp xchg lds out add decb sub orb gs pop aam pop add jne or jge fnstenv sti cmp cs rcrb jmp dec cmp jb or jbe inc outsl arpl pop cmp loopne daa lret dec (bad) mov leave and neg add mov rorb xor add das ja jnp pusha je xor sbb movsb jbe add xchg and ja into xor loopne jnp pop adc adc fdivrs outsb pusha cmp add push mov out adcl xchg pop je inc xchg pop push jmp mov movsl in (bad) fisttpll mov fmuls push je push push adc cltd cmp arpl mov (bad) mov inc mov jmp dec push lods std adcb gs femms out push pop mov push idiv (bad) movsl add mov mov push out pop add cwtl mov in bound ljmp sbb xor sbb mov cmp mov cmp xchg adc mov sbb push icebp pop pop icebp sub push jnp rcrb dec pop (bad) cwtl mov pop sbb sbb sub aas sti (bad) int pop jns mov dec rorb (bad) sub stc pop mov mov roll aaa outsl (bad) popa fistp xchg pop mov cmp (bad) and inc mov cmp mov sahf imul mov cli (bad) into fsave cmp dec aam mov jae dec into rclb jne movsb cltd sub lock jg jo icebp jmp push mov add sarb daa push and jbe into es negl ret repnz mov sbb xor test xchg jnp in (bad) fisub fsubr nop addr16 or rolb icebp or sub xor pop xor dec bound (bad) cmp insb outsl push mov daa pop mov and push push add cmp inc loop shlb mov cmc jb push inc fist test inc pushf loope shrl icebp adc or rcrb cwtd les or bound pusha lock into les jmp sbb popa mov xchg cmp mov jmp std mov push mov (bad) pop push rep sbb mov mov push xchg or ret pop outsb sbb neg cld push mov dec ja lock pop mov sub popf (bad) gs mov push jmp lods cmc leave xor mov or rorb xchg jge push mov out (bad) push lret xor sub dec adc mov lret xchg das cmpsb outsl jno dec popa clc (bad) or mov or int xchg push rcrl inc sub or mov cwtl shlb xor pop and rolb dec mov push mov jge fsubs ret or jmp or stos out xchg mov dec outsb dec pop xchg fdivs add mov (bad) (bad) sbb shrl xor jne push adc and bound test and push inc (bad) mov mov pop cli les push inc push das sbb push xchg (bad) xor hlt push stos leave fisubrl rol mov ljmp std addb xchg jl adc sarb or mov mov (bad) mov dec jle sub inc push push insb movsb in je cmpsb or mov pop or sbb adc adc orl outsl and testb ja and or dec inc orl mov cmp fwait inc sub ljmp cld push repnz pop pop cmc sbb gs dec jo xchg push iret aam iret fldt subb inc ja cmpsl cmp pop xor dec out adc mov cmp das lahf (bad) push repz or dec sub orl or jmp xchg (bad) xor lods push call xchg add pop jecxz push cmpsb mov incb movsl add mov xor jmp xor add adc or cli popa std mov xchg test add xchg pop icebp cmpl outsl xor push add je aaa pop hlt rolb dec pusha mov sahf cld pop (bad) mov dec imul fimull jmp ja jecxz sbb (bad) ljmp fstpl push dec push mov fnstsw push push int push outsl sbb push (bad) fist pop repnz lods jl jo movsb leave ljmp sbb loopne repz and fldl add xlat xor xadd fsubrl inc stos clc sub jp fldl push std push push leave pop pop mov (bad) xor ja push sbb or lods pop (bad) enter push pop mov jb xchg xor push mov push dec lcall (bad) adc std sub xchg sub out mov test or loopne pop dec push jnp pop cmpb push imul jg rolb or adc sti jno push or pop loopne shr and jle add push or push or and icebp jmp push (bad) jmp xorb (bad) mov test push xchg pushf aaa push das jmp cmpsb leave ja ds sarb push sub sbb ljmp sub mov jo lcall lods test imul push test and mov movl or push xor mov mov xor pop inc js mov push mov subb call addr16 ja adc mov dec sti push lret loope jnp stos rolb pop jmp push dec out xor loopne push mov insb dec push mov cmc pop push mov xor push jo stc clc out fisttpll jbe mov (bad) pop sub mov dec sbb (bad) loop ja out shrl fs and or in cmc add lret es dec dec (bad) test bound popl sub pop pop push adc cmp add mov jb cmp std aas pushf add mov pop (bad) in lea loope jp xchg mov sbb outsb cmc xchg push inc popl and push mov dec out ss hlt inc test jo,pt ljmp cltd sub cmp pushf or pop daa or lock mov mov daa (bad) and lret jne lcall pop sbb inc notb dec xor push fisubr ret aam mov add jb loop into mov add inc xchg cs cmp icebp or jg call out hlt int dec (bad) sahf dec out sub aas xchg push add adc test pop insl hlt mov xchg and mov roll xchg lods aas int sub ret or inc mov and rcrl add ja lods cli mov fiaddl sbb fcompl add cmc sub jp cltd jae stos and mov inc dec mov movsl dec add test or pop push imul push pop inc xchg inc add xchg addr16 enter rcrb loopne testl pop adc jl es ret ja int push ret jno push push hlt jbe popf call push popf fucomi and pop fisub push add or push mov inc mov sbb mull sub in out movsb dec xchg or sub loope adc push cmp pop fwait test (bad) mov fs insl adc xchg call add pop lds cwtl push (bad) cmpsb pop push repz sub mov adc pop add pop sub push cwtl mov adc dec les je lds in addl or pop push push xor fistpll adc test xchg adc sub mov daa fcomi or (bad) jmp std or rcr cmp mov les jbe xor stos xlat adc pop xor ds loopne push sub ss pop loope call pop jns leave add pop jmp aam push jns mov xchg (bad) (bad) and and dec add out jae xchg cvtps2pd xlat insl add mov xchg push mov jmp inc sbb bnd sub push push ljmp mov add js push hlt jae or inc sub (bad) (bad) or mov (bad) push imul mov lret add cmp shrl imull cwtl sub add mov and loop mov cli add mov mov (bad) mov shrl xchg mov or fs jl fsubs push xor rclb add icebp dec into fistp xchg push inc lock mov sbb jmp leave mov or call jecxz mov adc jge add add in loop mov or aaa add add rcrb jo add int pop lea jl adc pop cmc fcmovne inc (bad) cmc scas (bad) lcall xchg movsl mov fdivrp je pop mov push out add sub jne jo pop xchg adc jmp hlt pop add pop clc movl or push not add add lahf dec pop push mov or and out xchg arpl sub jp movsb sbb mov test lods adc mov mov repz xchg ret push mov xor pop dec es inc stc aaa mov xlat add js xor out lods jbe and adc test stos adc adc dec (bad) rorl or mov or xchg jg,pt or fs mov sbb jp loopne mov adc adc jge adc (bad) jno (bad) xor mov lret aam sar sub shll or push add push sti sbb push jp jnp leave cmc out outsb dec iret neg cmp push mov sti cmp push mov dec pop push mov jecxz adc cld mov and pop xor neg rorl loopne popf xchg sahf add sbb aas or push push rorb jns add test or mov and mov add rcl add push rcrb sbb add jnp jne sub mov jecxz dec mov ljmp repz mov cmp or mov mov bound push or pop nop sti ljmp int3 dec or lahf push and jns pop xchg inc (bad) xor or pusha cmp mov xchg mov mov sub xor fsts adcl ja push adc jmp mov mov fs std rorb cmc or xchg lock mov inc bound xchg cmpb repnz jle or imulb lret (bad) gs adc inc pop inc lods or pop sbb sub loope adc out cmpsl adc fistl push inc and insb xchg cwtl nop add sub outsb mov add cmpsl or jmp stc push dec leave jnp fstl test in loopne sub dec pop sub je pop push mov call fs and jmp pop xchg and push pop stos sahf lea je sbb push pop mov mov das push jae mov fistpl nop inc clc xchg popf inc add mov loope insl xchg icebp push je jmp pop fdivs xchg shlb out dec repnz push add je jne mov sub jle or in mov push es push cli das jmp xchg movl test dec push mov jno out push repz add and out add bound loop popa mov ret push pop mov sti or sbb sub and add jmp mov push dec outsl and aad pushf adc insb les mov adc std pusha pushf mov call imul cli sub or xchg mov movsb gs sub movsb mov in push out shl dec lock pop lret adc lock push xchg popa (bad) pop inc or fist cmp rclb mov (bad) mov cmp js out lahf and hlt adc loope scas add inc mov inc adc mov push inc mov mov aaa sbb inc xor (bad) daa (bad) pop (bad) cmc int3 xchg out cmp xchg or and jmp dec fwait roll daa adc xor push jb inc add pop pusha fsts aaa push push mov dec cmc pop addb outsl xor sub aad or aam sbb sarb mov pop mov and xchg or add cld mov xor insb test sub add jp mov push mov orb push sub add jmp push sub fmulp sbb out rol mov loopne mov loope dec xchg ret sbb push (bad) repz push push sbb inc xchg sbb add je sub or divps mov jge jmp pusha and shr mov cmp pop or outsl sub add outsl add pop ret and gs xor sub dec or and aam lods std sbb xchg jbe lret add and daa call xor xlat into add nopl add call xchg nop jmp call pop and pop xor pop addr16 ret es stos in push xor testl pop test mov stos adc fimull add aas adc adc ret cmc mull mov push bound mov lret pop adc mov leave xor shrb xchg adc cmp stos sahf neg and test sub popa lea les out mov add push loope mov mov test mov sub (bad) or mov jg push push je xor cmp fucomip enter and es mov jbe rol cmp push or inc and or ja cltd mov bound jge repnz dec mov repz into ljmp adc or cs mov and or pinsrw incb les outsb push sbb cmp or xor fimull pop pop add sbb cmpsb adc lcall adc test sub xor inc push add add jo or pop orb les sti es adc adc push xor add and xor dec or pop mov inc sub les ljmp mov add out sbb dec test push or mov xor adc xor aas or mov inc push cltd push xor les push daa add lret push insl popa or inc pop sbb add adc cmp movsl adc push adc sbb inc or cmp enter jmp data16 add in and and xor sub repnz add test dec repz mov adc xor push loopne sbb push mov inc or sbb test add dec mov fcoml inc push (bad) jns push adc icebp jne add pop adc test xchg aaa xor cmp or xor and and stos loopne andb fldl push mov adc cmp push or (bad) incb xchg (bad) jns push xor std fmuls ljmp (bad) cmp nop and bound xacquire loopne and add adc or pusha xor adc add movsl push and pop les xor or imul sahf push xor (bad) xor fst and xor add add inc push call sub leave lock and push inc int xchg dec push lock xchg arpl sbb imull or jo dec shlb xor adcl sub dec add or add out ljmp push pop inc enter sarb sbb push loopne inc mov add sahf loopne loop sbb jg mov orb push mov sbb fcomps loopne dec sub (bad) pop call dec imul cli les push stos mov xor aam addl add dec sub add mov sub cld push cmovnp loope add or pop inc xchg loopne gs pop stos test sahf and push test int3 test in int3 das push popf fwait dec mov add nop das fldenv idivl and mov daa add push loope mov cmp mov push mov and xor pop pop jecxz dec in pushf imul insb jnp aas sub ret inc or fistpll adc cwtl mov or mov push mov ljmp add mov pop push repz fcomps xor mov add xchg pop mov ret call xchg jge in aaa dec pop stc fidivl dec mov insb ror push push dec out push fcomps pop scas pop pop (bad) sbb imul scas cmp jns add out add roll xor xchg (bad) stos push repz outsl popa and pop lahf cmp or loope pop fild adc push in sub push push jne pop push xchg add pop push lret push adc ds fstps repnz pop gs in push jmp or lret repnz pushf adc insl and xor call push add xor jne aad add fwait jnp imul inc mulb neg loope (bad) scas outsb pop mov sub and push imul pusha mov add push mov xor pcmpeqw or das xchg push jmp flds mov xchg pop (bad) dec xchg lea (bad) lahf xchg stos lret insb sbb cmp mov imul ds mov hlt imul xlat sbb push roll pop pop addl popa dec repnz hlt push sub rolb and xor push sub dec roll aas sarb testb jnp into incl and ljmp push jnp out les out cmpb popl adc lock subb add rol or jne sti mov fs add add mov xor jns sub sub jl add xor adc loope dec fisttp pop inc push add xchg push mov dec fucomip add jmp pxor test push movsb insb or add lret push sub loopne int push push sbb add push mov jb mov into sub cmp nop mov pop xchg inc jnp adc xchg or (bad) mulb xlat mov jl or (bad) xchg cmpsb in mov adc decb adc cli sbb icebp pop add sbbl pop nop pop sbb pop jnp sub pop roll mov fs lret fstps mov js nop popa mov jmp and mov inc (bad) push cmp cli sar out inc mov adc mov add adc xchg sub imul add cs sbb addl pop inc or ficom (bad) cs stos inc cmpsw jo cmp dec or pop xor outsl stos movsl sub xor pop cmp and sbb outsb inc inc xor out xor or adc mov sub daa and sbb arpl fnstenv lock or shr jle sub mov rolb xor out jo and out enter or adc dec push rorb and mov or pop pop xor jae mov fiaddl scas cmc mov ret or popa fbld data16 rorl les imul adc add sbb test push inc inc sbb inc push jge and mov inc push daa or xchg imul dec js insb das loopne sub fstps add and adc lahf mov js xor xchg dec adcl xchg (bad) ds add add lahf jo testb (bad) push or inc sbb adc js pop mov dec ljmp or stc inc rcr jp sbb inc and dec mov dec jle cmp cmp xchg or push js push push push or ret icebp and sbb jg mov clc jb (bad) xor dec add stos jne pop push jns mov add je cmp cmp ljmp insb push loopne jb test pusha div fwait wrmsr mov jo inc pop inc mov imul pop or xor in pop (bad) cmp push adc and lahf jns ret sbb xchg daa idivl xchg push sbb mov outsl lret push push cld std pusha sub mov push push data16 add jmp cmp ds int (bad) test pop jmp push adc test push push push jmp jecxz xchg dec es adc jecxz (bad) push pop or jne push xchg inc movsb int3 fadds add sub or add enter cs mov inc sti pop mov aad mov pop inc cmp inc and orb push mov cmp jno sbb mov mov fcoml lock adc pop pop jle pop mov adc pop fiadd pop es jns xor lock push jnp sbb icebp xorb not dec inc or ja xor pop and xchg adc adc cmp dec lods mov mov into add add loop push pop in dec cmc xchg pushf es cmpsb or fidivl andb jno lds cmp cmp loopne out dec inc xchg out not xlat add and inc cli dec adc nop or loopne inc movsb pop lock fist xor rcll or pusha mov push and stos test mov lcall xchg inc dec push movl and flds aas xchg in cwtl sub sti xor mov mov les jecxz les mov push imul push push sub aas pop daa add xor add imul mov push insb imul jb ja (bad) scas mov (bad) fmull mov jne js es mov ret jecxz adc mov pop shl jmp icebp xor test push mov roll pusha pop pop mov pop inc mov clc fidivr scas jae punpckhdq dec cmp (bad) inc sbb mov add mov popa dec adc xchg inc inc mov dec or pop (bad) add js ja mov psrad xchg cmp sbb or pushf movb (bad) out push mov push mov and lcall mov jbe push jge ret rcll fstps cltd or and mov dec sbb inc dec inc (bad) stc pop mov stos push (bad) or adc mov in cmp xor lock push inc scas lods push mov (bad) mov pop pop in cmp popa xchg dec push lods xlat loopne mov rclb or add dec adc jmp xchg jecxz lahf cmpsb aas ljmp push arpl mov dec xchg mov out insl addr16 outsl loop aaa cwtl shl out add xchg (bad) imul leave fdivr cmpsl add cwtl mov mov mov xchg je (bad) and inc jbe test jg mov gs pop add sub push sub adcl lcall std cmpl xor jg add jp cs add leave sbb test push scas cwtl sub push xchg jnp add aad dec pop outsb cwtl clc pop adc inc add imul cli pop dec ja and nop ds cmp stc jo push mov push loopne lods inc push pushf mov or lock xchg and dec or ds sub std ljmp and mov mov cli lret xchg jg mov sbb addl mov cmc sub pop jne sar pop pop sub in sbb out out test loopne mov add fcomps or sub adc pop scas movsb pop sub mov jmp sub jle loopne (bad) pop pop in imul push aam shl mov ds lcall push jns add cs dec popa inc and out adc push fidivrl (bad) fistpll cmp call minps xlat xor push pop mov mov insb (bad) xchg enter test inc and psubusw inc leave xor mov cmp fwait xchg popf rol mov dec out lret dec or sub push clc inc xor dec sti jmp loope xor insl jge das sbb movsl stc lcall xor mov push push jmp stos lock ja xor push xchg hlt or xor insb lock or pop dec (bad) call subl enter jmp push push xor lahf (bad) xchg xor arpl mov and ljmp push sti jmp add out test xchg leave add mov cs pop leave pop repz mov movsb mov popa pop mov jecxz test pop test ret imul arpl outsb dec dec scas xor mov pop push insb inc xchg add sub jg (bad) adcl cs imul mov orl cmp fcmovbe pop pop (bad) dec loope and repnz test pop or jle in imul pop cmc jnp call imul adc jo mov inc popf pusha and das jmp aas cmp sub (bad) cmp cmp push icebp daa ja js pop iret inc pop or das add push stos mov pusha scas (bad) cmc test ljmp add ja dec and xor push jmp js popa and pop mov cld sbb or adc mov dec inc and dec mov lcall mov xor jecxz ja cmp fisttp dec ljmp push ret push (bad) fcomip addr16 stos pop rcr xor out mov jmp enter cmp cmovo daa push mov cmp mov xchg sbb lret mov pop dec jb loopne pop pop mov pop xor icebp inc jne fs inc lods xor jae push les xchg into and add push (bad) sbb aad mov dec aad mov das ret xchg call loopne lahf jbe jo jmp pop les lcall rorb aad enter (bad) mov inc cmp add push insl jo pop push and xchg pop mov and (bad) xlat das lret pusha rcrb push and inc xor adc adc dec jle cs cmpsl aam add mov sub hlt sbb sarb notb mov mov and pop stos (bad) sbb push jmp xor das mov icebp and jge imul or mov dec xor rorb int push mov push clc sub or xor sbb outsl cmp cs xor sub sbb mov sahf dec ds test sub test out je pusha or lcall insl fcoms mov loop or adc add xor scas jnp dec sbb sbb enter cmp or ret pop jp add aad and mov fisub and fs stc mov data16 and sbb push push pop pop enter sub push inc and adc stos hlt and dec pop sbb add pop push mov cmpsl or rcll cmpsb imul in aas das es lock xor jae mov push js daa jmp push out psrld stos add cwtl pop shrl xchg mov enter xor es adc xor jg repnz cmc (bad) out jl fsub mov aaa inc mov lods cmp mov rcrb xor and sbb xlat call xchg cmp pop repnz imul outsb leave cmp orl je out mov push xlat xor arpl arpl push push jne jl jnp test add jno movsl les out jmp cmc imul jne dec xchg and and xchg xlat sbb push xor pop lahf or addr16 adc addl cmp mov xchg stos push sbb jb mov ja rol jmp in pop xor adc (bad) aas mov sahf sub out mov stc add lods cwtl ljmp pusha andl push push add sbbl lea adc lods pop cmp cs aas loopne aad sub pop push test loopne add adc dec cmpb std aaa xchg jbe jno sub call add push (bad) out jns daa jbe daa or add cmp dec out jp xor jb mov mov rclb xor test imul push add xchg addr16 scas pop rclb lret jmp push or loope (bad) cld mov jmp lcall leave xchg and push and movsl pop cmpsl icebp hlt sub push arpl or test mov sub jns jge pop inc movsl dec cmpsl xchg iret mov cwtl jbe mov cmpsl loope jmp dec sbb sbb std lods xchg pop (bad) mov lods jle jns cmp add pusha mov mov jmp rcll dec enter sbbb mov push out repnz xor les cld pop jns or inc and sub insb mov (bad) pop add add push mov pop push jmp dec jge repz mov mov std adc adc lods xchg stc adc inc iret int push push mov call inc fnstcw bound xchg out cmpsl xchg outsb xor shlb or outsb lods add ret jge sub or pop mov dec inc mov cmp pop cmp adc or pop jg xor pop cmp xor adc or divl add push mov ds xchg mov inc inc dec shl out xchg out xchg dec sub fcomip fisttpll in mov or out aam orl std outsb loopne push jmp pop pop call jmp push push push mov inc dec mov jmp xchg std cmc push (bad) stos lret inc push pop dec cmpsb int mov (bad) mov les fdivp and jle loopne (bad) xchg inc pop pop in or pop out fdivl mov std icebp mov xlat xchg addl xchg dec mov add bound pop (bad) sbb pop add mov stos push out in mov push sub mov das push dec pop clc lods pop add lock pop or jg xor xor repnz mov rolb neg out sbb pop addr16 cmp mov clc lock inc sub mov rcr mov push mov mov adc (bad) jp sub cmp mov sub loop jl sub fldenv add pop sub cmp andb dec pop pop mov popa andl in scas pop or jmp push pop xor or cltd sub inc dec lock mov sarb in mov lods pop or (bad) xor loope jecxz pushf push mov imul jo icebp (bad) sarl shr gs mov pop jno mov mov dec push lds cmpb cs aas cwtl cmpsl add xor js (bad) dec xor inc jecxz out add fistpl sbb mull imul cmp mov pop push mov dec js dec nop cmpsb out sti pushf pusha push mov sbb xorl pop daa fsubrs and sbb mov into push and (bad) not sub cmp or ss loopne fstl dec jmp add mov (bad) negb sbb jnp or movsl hlt mov xchg dec xlat adc jmp cld xchg adc pop push push dec jns cmp enter pop scas add and ret cli lret push or push insl lahf enter (bad) cmpl inc push movsb insb push pop sub orb xorl add das or loopne into adc arpl xor dec cmp in and imulb leave imul in pusha rorl xor pop xor jle pop add incb imul dec jns jns,pt fbld or adc popa inc xchg xchg and loope mov jne fimull in test pop jnp ret lods mov mov fcoms dec add roll pusha popa push fwait adc ret cli shrl push adc pop je sarb xor xor out or xor (bad) cld xchg xchg add lds sbb in xchg fcomps bound das xor scas jb adc add scas mov or add sub sub cmpsl imul js dec imul jbe push test cmp into xor add mov pop insl lods je mov addr16 aas or push dec sbb in (bad) jg imull dec movsb dec repz inc xor pop (bad) mov xchg movsb pop add popf out test lds mov fcoms sub push xor pop jp xor scas or popa push mov insl add adc call push imul inc or sbbb sub ds pop pop mov or push push dec jle sub xacquire dec mov mov frndint dec xor int3 and dec out cmpl add ret or leave stc repnz (bad) stos mov xchg and xor jmp rcrb rclb inc jbe cmp dec pop push in add xor push mov or fsts xchg add insb mov mov dec incl push (bad) and or xor sub and fs mov rorl lret rolb fistl sub pop push pop outsl add pop shll and lcall push xchg mov out mov out sbb and xchg mul enter adc jmp shrb xchg (bad) adc pushf and jecxz jns je xor (bad) cmp loope repz test stc cmp ret popa push mov jo in cltd and push repnz sbb dec cmp pop xor dec jmp xor jecxz lds inc js or add mov test mov push je xlat pop outsl test or (bad) push ret jbe inc pop push inc fs in mov dec push adc pop fstps cmpsb (bad) pop (bad) rorl lods sub pop jno adc scas sub push sbb and pop pop dec push mov push sub repz jmp (bad) jl and sahf sub pop xor cmp inc adc cs push inc mov or outsb lock int mov push (bad) or fprem mov test cs addr16 push dec rclb xchg mov inc aas fwait aas inc sub push loope (bad) in xchg xor (bad) aas xchg ret mov sub gs in mov in outsl sub lret xlat icebp mov jo adc rolb jns and sbb out pop lahf xchg sahf xchg push imul xchg ds pop les jecxz dec push lahf adc add add push adc incl mov (bad) mov test mov lods jae loopne pop arpl push or (bad) cwtl aas mov stc enter pop mov pop test add stc mov jae mov das sub aad mov (bad) mov inc and mov jb lret or jmp es (bad) inc inc ja insl or pop sub scas int xor xchg je js cwtl inc cmp pmaxsw ret push pop or xchg adc hlt es nop sbb ds mov xor shl loopne aam dec add jmp sub jle daa mov in inc sub cmpsl sbb mov mov sub pop add rorl pop fcoml fstpl or mov jno xchg ds push fcom inc lcall inc dec (bad) (bad) je add leave push cmp enter add or and pop jmp icebp mov lea lods mov jb xchg mov leave loop pop push outsb xchg jge (bad) push cmpsl pop sti jns sbb std xchg js loop repnz add in adc push call jbe sbb ds adc add adc shlb jp jns pop or sub insb push dec cmpsb pop mov inc mov repz das out sub sti mov jecxz adc xchg or push jmp sub push icebp out test push lea lea adcl and jl dec sarl adc mov jnp (bad) bnd and and dec push in mov stos dec lods pop add ret pop std push xor dec repnz dec shl hlt push mov dec ret les iret nop dec call xor push jne (bad) icebp repz ja pusha mov jmp enter clc arpl xor pop push loope popf sub mov fistp or jno imul xor stos fidivr pop inc sub mov fstps mov pop in xor les (bad) imul xchg cmp pop push fldl sbb sbb mov loope insb lods bound insb mov cs imul sbb call xchg es adc loope cmp mov neg xchg loopne mov and push dec (bad) loop popl scas int3 btc and pop jl xor call lods xchg addb push push cmpsl sub ud1 cmp xchg movsb nop sbb push loopne cmp bnd mov add daa pop aad iret or dec sbb add repz or pop frstor xor xor into (bad) push faddl sbb jecxz mov sub dec not jmp loop and or ja pop push in jge xor adc dec shrb add add push cwtl adc outsl xchg dec stos jmp mov mov adc rorl mov and jmp gs sbb call jge sub ficom insb add je sti nop repz das mov pop mov pop mov mov xor inc icebp pop add jmp mov jmp mov pop icebp repnz imull sub xlat jne dec lock ja in jmp cmp mov or es jecxz sub nop jl pop cmp inc lret add jns loopne stos mov or rolb rclb add popf popf fisttp xor pop push cli fdiv jmp pop add lods (bad) sbb into adc fsts xchg inc ret mov mov and push es and pushf xchg sarl dec das jp (bad) dec mov hlt ss cltd ljmp jb (bad) mov into gs pop loope jo loope cwtl or jg inc cmp cmp das mov xor adc mov xchg add lods adc push inc (bad) repz mov pop ret pop shlb fisub mov sub mov loope dec popf push sbb mov inc pop out pop pop xchg loop out aas xor pop push jb pop pop not inc mov push lods jmp test mov sub jmp mov scas div ret pop push ljmp dec add sbb cmc cs aad xchg ja pop shl adc cli xor das dec popa jns mov popf add jae add mov in loope push repnz inc mov cmp mov or or xchg (bad) jne xchg xor ficomp lret inc and push insl loop mov mov (bad) div mov jns and in jmp aad loope int xor mov xchg jae inc (bad) pop (bad) add mov nop or or cmpsb pop js,pn push (bad) xchg loope xchg loope cld jmp cwtl cmp push sbb add mov aas cmp (bad) std xor sub jge lahf pop xchg add sub xor mov push out or add add mov lcall arpl push pop aam push jmp jmp push dec push xor jg or and push push mov lret loope sti sub xchg scas insb out xor rcrl not cmpsb daa movsb dec outsl mov clc mov sahf pop or adc cs arpl jg mov rcl jmp stc mov mov and cli jne dec dec mov outsl nop pop add mov inc jmp push repz jne mov enter mov cmp fs loopne stos and out add add jns add xchg push cs repnz mov or and or pop jmp mov push pmaxub out xchg or push cmp (bad) hlt in call ret mov inc cmp or add mov scas daa fwait test lret int3 ret push cmp pop fnstenv inc repnz or popa xchg in adc dec and jo cmc daa push xlat pop mov mov or add push mov adc in add or inc scas push jp xchg push mov aas add push mov mov notb lret loopne fstpl test mov pop in fimull dec jmp xor aam or pop push jle pop dec imul sub jns mov fisttpl pusha pop mov movsl popf jnp mov dec push push mov add push hlt dec add imul cmp pop jnp nop lods das lods xor insl loope sub iret lcall icebp rol push push jmp sbb sub mov mov add or ds lahf fwait jmp aas std add or loope or js sub (bad) xor add or jmp push or pop mov push iret lds daa xchg inc sbbl mov xchg mov movsb daa pop cmc adc arpl dec sub cmpsl das ret mov adc and jmp in add cld add add push faddl cwtl xor outsb daa mov hlt mov mov inc mov or inc pop push rolb cmp sub inc push add xor xlat add pop push xchg dec testl lods (bad) mov pop je add xchg aad inc jmp mov gs add sub pop xor push stc int (bad) (bad) pop push mov inc dec push in push fstps xor ror push repnz mov (bad) ret lock sub pop fidivr dec lods dec mov pop dec dec sub dec xchg repnz out pop test add out bound xchg dec das xchg (bad) push or push add mov mov vmwrite dec ror decb sbb sub mov dec das je mov xchg sub jbe pop jp cmc push pop fstps (bad) jl,pt outsl in rcr faddp (bad) ljmp jo fs sub aaa int dec loopne sub je add int jmp je outsb icebp in and mov xchg add push ret mov xor shll xor dec hlt and inc and mov push mov cmc mov push loope fisubl shr jg xchg mov jo xchg jecxz xchg out into loop js jb add cld (bad) or add dec mov add pop dec ja dec jmp add daa into pop add sub jae fstps jnp enter fnstsw bound pop dec inc sub add pop push repz dec xor pop mov rcrl addl jle cmp jbe (bad) lea decb add sub and loopne stos enter imul les in aam mov xchg rcl inc xor mov out add dec xor adc pop push or dec and xchg adc and cmp outsl xor mov (bad) data16 clc pushf pop sti jb pop jge xor jmp in pop pop mov and push pop hlt test pop mov in sbb rcll or (bad) jbe ret fs jae scas inc push (bad) push nop xchg jp mov add sub xlat in aaa or sbb mulb cmp pushl add push mov sarb js jno push jmp (bad) scas push adc sbb jne mov cmc out dec xor pop daa pop repz dec les aas add insl call or inc imul xchg ret sub sub add mov dec mov push xchg jns test xlat pop into cmp inc mov xchg ret test sbb push cmp cltd shl adc xor orl shrl add cmp push push push jg int3 pop push inc scas inc mov jmp adc dec movsb lock add jmp push jnp nop cmc out inc icebp pusha jae or add or adc cs sbb dec or imul adc repnz stc cld into mov das (bad) gs (bad) lods daa cmpsb data16 cs sub add mov inc xchg das repnz mov jp mov test push imul ja jae push mov mov daa or or mov pop test pop mov adc (bad) movsl test pop popf js mov pop or sub push and jmp cld xor icebp pop fidivl cwtl xor ds or push dec mov mov add sti push (bad) pop inc pop jns cmc les xchg push mov dec mov aaa pop imul mov mov sub call pop cmc adc daa (bad) pop xchg inc pop and out xchg add out adc push aam inc push repnz mov pop dec aad mov lods jge cmpb addr16 jmp add and push das adc jo dec sbb mov adc fcmovu fsubr jmp pop stos popf dec inc ret test (bad) adc fildl add mov push daa fildl mov out lods mov inc pop push cld mov add cwtl and push push out sub mov es push mov outsb xchg or lds inc and sub push pop jmp pop stos sub inc cmp (bad) test mov mov sub or fmul insl nop cmp shlb mov xchg or jmp add mov adc or push (bad) call pop lods fldcw adc jbe pop in push (bad) or pusha jns pusha (bad) repz dec xlat icebp (bad) cmp dec and aad loope insb pop push jle fimul mov adc jmp fimull mov mov dec sbb das cli hlt iret hlt bound popl add xchg (bad) jne stc jb add jge and mov xor data16 mulps (bad) call stos rcrb call repz add xor add adc xchg lahf mov push dec in mov xor pop outsb dec cs test addr16 jp xchg mov imul fmul pop jmp add lcall arpl jno pusha add icebp sbb lret stos xchg pop mov inc mov jmp roll mov popa sub pop nop adc or arpl push push jnp loop inc or and and pop pop mov jmp xor mov mov and jo fstpt pop sti dec fmuls or and rcr adc or pop insl xchg dec xor jmp push mov xchg pop stos (bad) adc pop imul or aad push fldcw in cwtl jmp lock xor loope loop lods sub fwait or test add pop stos sbb sub mov (bad) jp inc and shr sub in sub aas push fsubrp mov mov fwait jne xchg sub mull cmp or (bad) mov inc or loope add mov xchg in add mov sub mov (bad) in orl call adc cmpsl (bad) mov push sarl inc or popf mov pop sbb sbb jmp shrl pop insb test inc or fdivrp add sub rcll loope and xor mov adc xlat push dec je dec fidivrl cmp xchg add pop or js xor fdivl adc lods mov outsb mov fs add adc popa push push and dec stos mov jns xor cmp shr inc inc pop mov or andb mov sub dec nop sbb add jae mov add push mov sub pop in jmp dec jo outsl imul mov add sbb add add andl sti push jg jne and xchg xchg iret cmc or xchg sub or adc (bad) loopne pop sahf and jle pop std ret (bad) sti bound sbb pop pushf ja pop sub jmp mov pop sbb add push mov neg sbb mov mov in add jmp inc jns jnp inc and xchg jmp jbe jmp jae insb shr aad and clc bound pop and iret sarl cmp fldl or jb popa pop push iret push pop cmovae mov pop aam jno sbb lock mov js test lds lods jae xor mov and xlat pop inc adc and sub movsb sbb and pop rorl imul add sahf daa sub dec loopne dec and imul xchg fcoml pop push push jmp or mov popa mov add stc pop cli xor hlt adc sub or cwtl cmc jmp pop rorb sbb cmp lock mov jge cs (bad) imull push jmp push dec mov xchg scas aam xchg sub fiadd aaa nop jmp in push pusha push or sbb hlt pop mov (bad) icebp lahf mov sub add xchg test mov add cmc out aam add dec hlt scas xchg inc inc push in fstpl test loope fiaddl mov add scas scas push or outsb mov pop push pop (bad) (bad) (bad) jne jnp divl mov cli lds jne jmp inc xor andl daa or or xchg call sti repz mov push cmpsb cli and adc sarl (bad) sub bound mov mov pop mov bound leave pop movsb xchg sub repz pop dec add xlat inc pop xlat add add mov mov (bad) pusha pop mov fwait sbb lods ja push sub pop inc ljmp xor jbe or es xchg incb inc cli pushf bound sub cld xor xchg xchg lods jmp push mov fs in mov push aam in (bad) push mov lret jmp (bad) jb cmp pushw pushf mov mov mov jle out out add jl imul int (bad) or jmp jb mov lock fildl pop push daa inc scas jl pop and lret sub mov pushf cld and jmp pop pop out ss imul cmp jnp adcl lret inc int3 dec pop jo not (bad) hlt pop or test dec xchg nop sbb roll mov or pop jo pushf add cwtl das jns jb jnp test push jae pop pop and jecxz mov mov ljmp cmp jmp jl ret test iret aaa adc fsubl sbb (bad) comiss ret adc sub (bad) mov pop push das pop push pop xchg imul aad test in push mov push (bad) stos movsb mov jno daa or out pusha leave jae add dec xor dec test mov dec and shr inc in jle cli addr16 ficomp iretw cmp pusha pop jg or cmp and jg pushf test jl dec cs call imul xor cli or or or fstl mov or (bad) cmc xchg repz mov adc mov in bound inc adc fiadd mov add dec repz lretw or dec add mov jns sbb mov jle sbb je bound ljmp jb js xchg pusha fdiv rclb fimul incl leave mov movsb (bad) loope mov xchg aaa push fldenv pop xor jp dec loope daa jbe or adc test in mov (bad) pop adc add fstl jecxz and jnp je mov mov repz or or lahf cmp sbb or dec push fimull or insl dec mov movsl and or cmp sbb mov mov clc (bad) sbbl inc jmp pop inc loop pop xor or (bad) jmp inc push push or arpl add fscale pop movsl pop js xlat mov addr16 cmp data16 mov mov lds pop arpl sahf pop add int popa std ret pop push xor push imul (bad) mov pop lahf (bad) lods hlt inc dec or pop movb xorb jp push cmpl les add push cmc mov jle dec push aas mov mov fsubs sbb jp or insl aad fstps mov inc les (bad) jno ds xchg cmc jmp push push adcl jno sub mov int insb and sbb leave pop fstpt test sub out movsl daa mov sub insb movsb or jno adc jns add mov mov push push pop (bad) rorl sub out daa xchg (bad) and dec nop data16 test loop push or push lds inc ljmp push mulb popa fmul fdiv cld adc mov mov add add mov mov test push enter push mov out lret mov add xlat shl call inc daa push or add testb pop int inc sti sub mov pop mov cwtl data16 add and (bad) inc mov push jmp fidivrl idivl ret push push ljmp movsb dec or out jg int3 and sbb add sub pop inc xchg xor cmp jecxz inc sub and sbb leave push in inc or jae shrl lea sub push fadds push and dec sbb stc mov idivb mov adc jbe jae pop xor push pop jle cmp adc (bad) lock and xor inc ja orl xor pop mov add push shlb call and (bad) lock xchg ret cld shr test add test or mov lcall aaa push pop pop roll fs test mov loope js add gs cmpps lret or and popf sbb in pop popl jl and pop loope and or jl (bad) pusha jle push cmp cmp das out (bad) mov cltd lret int imul scas jbe popf lret in lea jno das pop add mov jns jo movl adc push movb in addl sub hlt dec sahf pop add call xlat (bad) enter addb cld push in push pop xor and fdivrl and or sub orb pop (bad) outsl mov out pop outsl (bad) mov rcr add mov xchg pop lds push lods call daa pop jg mov aam mov or mov xchg adc jmp add push and push lcall inc fcoms mov ljmp lds add mov xchg rcrl or (bad) (bad) (bad) imul xor fdivrl push pop push push sub int add and or ja inc push adc imul adc push imul bound (bad) lcall adc pmaxsw std and lcall jp xor mov imul stos add sub xchg push push add cmp sbb dec aaa cmp mov aad dec add xor pusha repnz lock and cmp xlat js pusha imulb into and pop add push sbb sbb pusha jo add repnz xchg adc jmp jle xor xlat mov mov out sub mov push iret add pop scas xor stos mov and (bad) push imul in (bad) jns bound dec call push jae sub xchg outsb andl and aaa pop clc (bad) mov je fist mov pop push push inc fadd xor jmp jbe clc mov push out jl jmp psubsw or dec pusha int3 stos inc mov (bad) pop stc add push jge pop shrb jmp pop mov (bad) mov dec mov icebp aaa sub mov fistp push out pop test cmp or sar xor xorb hlt dec roll sbb add loop or rolb mov test jnp cmp aas repz fadds movsbl jmp out rorl (bad) aam xor dec adc mov xchg jae pushf in out xchg add mov scas or dec pop addr16 test sbb xlat daa add jae imul pop lock test rorb add es fadds popf mov out lods or jno cmp add inc mov push rcl or dec add flds pop popa push dec jmp and or adc ljmp inc lret cmp out loope movsb push sub ljmp and and adcl adc mov dec dec pop add insb inc xor pop sti inc cmp mov push pop mov sti mov leave std jg pop ja test jmp jl sub add sbb pop jmp icebp fs jbe mov pop xor and das xlat push push mov and lock or and inc or mov or lcall mov add push push adc insb add inc cltd leave das (bad) sub dec lahf or leave sbb inc xchg mov sbb (bad) push enter xchg out jg add fidivr sbb sub es push jmp push lret inc roll sub add push mov jmp out sarl push mov mov test sub sub mov adc clc push pop jl repnz test jg arpl in add or scas jns add (bad) or jne jmp jp jns lock decb lret dec or fsubl in inc jecxz dec push (bad) call adc pop jnp (bad) jb out int3 and inc out cwtl loopne push and mov icebp or cld mov sbb mov or fsub cmpb nop and cmp ret xchg stos pushl adc add repnz jns fnstcw cwtl push mov out jmp add add imul out lahf nop sbb mov add push shl jge aam fistl add inc sbb jmp mov or outsb xchg faddl sub mov hlt mov mov mov or gs inc jl mov stc mov dec xor cmp adcb mov out pop imul lret adc sub or cmp enter sub add shl not push sbb sub mov or aas negb icebp les xor adc dec push pop add cmp in cmp loop add dec dec inc (bad) mov (bad) pop jmp test daa xor pop (bad) or adc jg mov dec mov aaa or inc into jmp hlt jne lahf (bad) dec loop in mov mov push imul test inc stos mov pop and stc arpl or movl push lock lock mov bound add rcll or push das shll xchg push call jo rclb shl sub mov and mov ljmp ljmp mov std leave pop pop adc and popl aas out and push push sub lcall dec fidiv inc bound inc add insb test bound pop mov mov scas jle hlt bound inc and lods push mov clc cmp in std sbb (bad) and xor add das mov adc pusha mov push mov out add loope jmp dec adc jp lret mov cli sarb add jecxz add mov pop push out sub sub dec enter gs outsl nop push jg lret ljmp mov sarb nop or rclb xchg xor mov mov push push pop in and jne daa xchg jnp add xchg mov popa and aad cwtl or pop test in xchg xchg call xor test add movsl test xchg ret sbb shll stos xor xchg daa xor data16 and mov add sbb call xor adc dec add pop pop xor xor xchg mov add push rclb inc and pushf pop sub push push and pop push stos in lret popa sarb pop ss jg pop add push pusha (bad) jp add sub jle add cmp push or bound mov mov cmp scas dec fadds aad cmp fimul dec call loope fiaddl push hlt or push jnp mov sub push gs add push ljmp test stc scas repz xchg cmp jns cmp arpl (bad) shlb je mov dec out js inc mov add xor jg or pop push xchg jae cmp dec sbb repnz jecxz gs mov dec std es mov imull stos adc lods daa jne jno jbe push fisub add test jmp lret nop dec out push xor rorb inc cmp test sub sbb or clc inc pop std inc jmp adc movsb test pusha inc rcll movsl jle mov pop push (bad) xor cmp repz bound int3 xor test mov or (bad) fmul cmpsb call cmp fs push jmp xchg (bad) jmp dec jmp jg jle and std mov mov pop cmp mov or jne mov push push mov imul (bad) sub inc xor les mov sbb mov push jg xchg mov pop cmp fs fcoml rorl sbb enter jmp add rcrl pop push mov lock and push out adc cltd insb popa frstor sahf lret fmuls daa jns jne or roll call pop out adc inc or mov popf mov (bad) or stos inc lds call push push inc sub fbld jmp cmp and push repnz xchg or jno xor sbb inc dec dec xlat subb pop adc dec pop and push fistp outsb call dec jno popa pop in sub ret or and sub mov add pop jmp mov in mov bound shl psrad and mov xchg jo repz and hlt call add daa xchg and js jbe mov lcall and aas test sub cmc dec ds jns insl mov lods lds push jg call jmp (bad) cmp (bad) scas int3 in push dec mov push nop ljmp cwtl repnz sub or sub cs sub cli mov adc leave lods loopne and cltd and cmp jl mov repnz int mov mov adc shlb cmp mov push out push dec jle outsb adc sub neg fisubl push or sub (bad) js clc cmpb cmpsb and sbb ljmp ljmp rcl pop es mov popa xchg mul int3 push shll ja and std ret clc jns cmp sub mov xchg je mov jmp mov add ljmp int3 adc jmp lret dec xchg jmp inc pop (bad) jmp xor xchg mov mov sti je repz add cmp lcall dec add mov fmuls inc push btc sbb add inc pop push mov mov jg push imul pop add (bad) adc adc loope lds mov pop cwtl fldl int3 subb adc iret or push clc leave jne std pop jp mov fwait and adc jmp or inc pusha test aaa ds repnz push jmp sub cwtl bound outsb or xchg mov sar add cmp or mov and pusha (bad) decb sub pop rol test add sbb inc adc ficompl (bad) movsl rcrb dec in repz inc xor shrl div and pop jmp (bad) (bad) cli add sub sub mov push push jmp ret xlat and and dec and packssdw xchg imul mov test data16 cmp mov mov pop pop outsb addr16 sub les call mov mov (bad) sub push xchg sub and mov xor dec or stos push inc repz cmpsl lcall mov loop jne shl orl xchg popf mov push mov int adc jns mov inc out inc jno or mov aas sbb or pop roll jp xchg mov xchg pop sub add mov adc add sbb js pop (bad) loop inc leave addr16 sbb sub mov mov outsl shr jmp pushl jecxz push pop outsb loopne stos leave repnz fcom out xchg mov inc dec mov gs cld sbb xchg arpl pop push adc jmp scas outsl fwait add into adc pop adc inc loope out cmp mov pop push divl out push adc xor in add mov dec mov adc sar pop scas mov mov loope pop outsb mov adc mov sbb inc shlb insb or std fcoml sahf push push pop mov xor cmc int3 icebp ja aam xor in clc mov bound push int and adc enter lret xchg int3 hlt xor pop mov xchg call jne sub mov and cwtl in das fstl and push cltd stos mov add mov fwait rorl ret pusha repz adc in pushl aaa mov xchg call or xchg roll (bad) icebp xor adc jae das mov xchg js lahf pusha jl shl rorb out pop fs scas xor push ficomp (bad) mov into rorb (bad) mov push call lret push in jnp mov cmpxchg push mov sar and sar dec jecxz inc pop push aam jmp xor mov mul push outsl sbb xor nop imul ljmp mov jg out add pop push sbb mov aam jecxz pop inc je mov lret pop push and aaa cs aad je test int jl and jae push mov xchg movsb insl xchg add mov popa sub sub or push mov sbb push cmpsl addb sbb lret push aas cli inc xchg dec xor sbb push fidivr lret jl xor mov jecxz xchg in mov jg mov lock xor je inc and pop cs mov lret pop jp and sub cltd repnz jg push and or cmp and sbb cltd or hlt push or (bad) cli pop (bad) xor push repnz push cmp mov pusha mov pop add sub fildll sub adc iret int3 (bad) leave jnp in fsub outsl xlat add dec ret jne subl leave sub in daa mov rorl ja dec jp push sbb dec pop mov loope scas cmp inc mov adc xchg mov imul pop xor pop pop lcall push fisubrl cltd std cmpsb cs test call stc shr xor pusha std dec inc inc mov add xor add jne jmp xchg adcb roll popa int3 inc leave jecxz dec or add negb gs mov imul pop pop mov decl test scas mov add mov not or fisubl pop pop xchg add xchg mov pop xchg jns fwait lock push outsl adc into mov repnz add jbe pop xlat pushw jnp cmp cmp dec mov decb bound adc ja adc test sbb add repnz ret fs push int3 stos add inc adc sti pop or mov in add ret jmp mov or aas mov inc mov fstp ja inc push sub mov les shrb in sub (bad) dec call aaa add adc sbb jle in std aas add (bad) mov (bad) and ret or add gs xchg sarl push mov lahf aam add ja jmp adc cmp mov mov or or sbb lock (bad) adc daa add push pop pop adc add aas aaa xor mov lahf dec (bad) movlps xchg pop mov lds mov enter mov ret or leave inc daa mov add rcrb push ja adc cli sbb add fidivrl mov mov cmp add bswap sub mov pop (bad) mov mov jge jmp mov in aad ss jo mov inc lcall imul add jg pop sub mov or adc ret add xor test mov mov lock push cmp (bad) call jge mov fidiv mov or mov test add dec mov mov das fdivrl mov mov jmp negl add cmp sub (bad) aam out push aad loope mov or add pop aam call repnz adc and jns push in pop pop mov jl mov jle sbb add xor nop mov jle xchg jb (bad) or fmull (bad) adc incl (bad) or dec mov pushw or mov cmp push mov dec mov jno add add ret or ret int xchg inc shll mov mov xchg mov sub adc test faddl inc jmp mov mov jnp push mov mov js mov cmpsl and dec out sub xadd push loopne add inc inc cmc sub add jp jecxz cmc or lea (bad) incl and add iret out push fcom jne sub dec daa adc xor lea mov stos dec dec outsb dec stos and cld clc dec (bad) ja pushf insb cmp scas push jge dec int fs cmpsb xor mov in jge sbb push mov xchg jno jmp sub mov jmp add mov pop iret test mov jmp pop sub push adc xchg js cmp (bad) xor or push add mov sub hlt jle not cwtl jecxz push sub and mov sub je shll fwait (bad) stc (bad) mov pop jge insl cmpsl adc add out xchg in push xchg clc pop xlat mov adc fisubl add or je jge adc mov sub scas xchg shl daa nop cmpsl jg aaa sbb dec dec std push mov ret xor xchg add xlat add cwtl xor push lgs icebp outsb cmpsl sarl push cwtl test mov sbb cmc clc xchg cwtl (bad) fcoms cmp ret xor lods mov or test loope jge xlat sahf jbe jmp ss xor inc xchg xchg icebp push fwait lret orb jb pop aad jg jmp loop jl ds hlt arpl out sbb push in ds lods push inc pop lods add adc mov push xchg out add and adc add mov into fs xchg loop push mov pop xchg push jle enter pop mov and pop pop fidivrl test sti mov mov mov xor or sub imul add (bad) into add pop push adc jne test mov inc pop out sub mov push mov push jmp addl mov mov sbb sub dec (bad) pop das fcomip sbb inc in int3 dec cwtl clc sbb insl or popa fisubrl mov mov push nop adc dec dec add aas inc sub cmp mov or popa and mov fisubrl cmp mov lea leave (bad) jp mov push cwtl stos adcb xchg inc scas sbb or pop push jns mov mov lds std inc adc rolb dec je add pop cli sub jmp push cwtd clc mov adc sbb arpl pop test daa outsl pop cmp ret shrb pop add out sbb nop xor jmp dec pop mov fwait negb pop lods les iret cwtl pop lret add das (bad) mov add pop push xchg outsb shrb cmp lods add jle jl roll or push adcl movsb daa push sbb pop mov ficomp sbb mov pusha push test data16 xchg in lods std xchg mov jle mov fisub pop hlt pop jmp adc sahf (bad) sub jp push inc lcall fsubrp das jns pop sub arpl jae sti mov add add mov or mov jmp in add pusha mov div pop pop adc add stos movsl adc popa iret repnz lahf dec jle cmc mov std cld mov popf data16 xor and cmp pop andl add inc dec imul sbb jmp aaa jp frstor pop ss mov test mov cmc cmp enter sbb pop mov addl cmp rolb jg int push xor pop xchg xor add pop fnstsw or jmp add sbb mov mov inc jl xchg ret pop sub push xor out jno fs mov aaa arpl pop and out mov (bad) mov (bad) lock or pop out lock mov hlt cmp pop jns push add or andb sbb jl jmp add pushf sbb sbb pop xor ss lods xchg adc or push dec mov dec aas pop pushf das add xlat (bad) mov mov jno scas hlt xchg xchg pop (bad) outsl repnz icebp and imul aam xchg call imul mov stos das (bad) cmc push sbb sbb fcoms imul jmp xchg jbe data16 movups cmp ljmp shr fnstenv fwait mov lss ret leave iret repz xchg jg ja pop dec call jb push xchg bound lea add pusha fisttp popf sbb push mov outsl jno nop aaa dec adc popa imul mov insb loop inc loope jae push outsb loope jle pop ret add cmp push push arpl (bad) jns pusha xchg (bad) shll insl sub mov cmpsl mov movsl lcall jnp dec mov ljmp add pushf inc inc cmp jb sbb jg lret mov mov cmp scas pop fsubrs add ret xchg or negl fstpt jne in sarb push push cmovs jmp jnp pop push notl addb neg dec cmp dec mov adc push mov and jg in or dec jmp push pop vzeroall pop adc push push mov ret lcall lahf aam clc gs shll mov jbe cmp pop push aam cmpsb adc (bad) fwait and mov bound aam js mov adc daa cmc dec mov gs outsl mov and and fnstcw lds jg out ficoml jmp dec add das xor enter (bad) cmpsb or dec adc das cltd cmp dec and ficoml out test or test mov jmp lret je neg mov mov repnz lfs cmp into gs icebp les pop cli imulb mov test push push sub mov pop xchg mov test xor push jnp sbb movsl inc (bad) (bad) (bad) dec jmp jne sub cld test jp ljmp dec cmp loope in mov rolb aaa jae add push cmc and pop mov xlat mov (bad) repz movl or pop call insb sub inc mov imul add cld pop testl (bad) cli mov jbe js outsb (bad) bound push sub sub mov xchg jno adc sub pop xor jnp stos gs push push jecxz xchg ljmp icebp or dec sub ds xchg add mov sbb icebp scas in nop push dec mov (bad) xor dec jg pop push (bad) pop pushf mov mov pop jp sbb sub jnp xchg cmp lahf mov push cwtl cmp ret add or cmp push (bad) jmp mov and and aad je stc fs add lock imul dec pop adc dec add xchg xor push mov inc ljmp xchg bound push popa add push add push adc lret ret mov mov mov (bad) pop jmp movsb jns jp pop int add jne xor pop add lcall repz inc push xchg mov (bad) ljmp dec and lods push sbb inc mov mov movl sar dec cmpsb add add jmp cmp repnz cs cmp lret pop jmp in mov and pop pop push out lds aaa mov std mov lds xchg scas popa fild mov xor add push dec jmp push ljmp loopne (bad) pop add and xlat shl jmp adcb outsl ja and xor mov cmp sub aaa iret popf aam inc insl inc rorb cld int adc mov push es xor nop add jmp ret ret inc pop (bad) mov fsts ljmp inc jmp aas notb cwtl outsb or adc and jg pop jecxz dec cmc xchg sbb adc or jg cmpsl sbb (bad) lods insb inc xor xchg movb and adc and sub push insb pushf das add sub les movsl pop adc stos cmp loope and cmp fstl popf or and jmp cmp xchg cld adc stc xchg lds push fs adcb shl jmp out test int3 les lock (bad) push and loopne daa insl jns (bad) jmp mov or jb sub pop enter adc ret pop push pop pushf adc imul xor call outsl lret mov adc dec dec jle daa mov aam pushf xchg adc cli aaa repz loopne data16 das sub inc icebp daa xor dec pop cld dec daa jmp mov in push inc call inc mov push sub je jp lds mov dec sub add jle mov xchg (bad) mov pop enter xchg or jmp out adc ja and or xor shr sbb inc lods fcom push push fadds (bad) hlt pop add test cwtl adc rcll bound icebp fstl loopne jp adc cwtl dec lahf lret mov jno js add jmp fnstsw iret sub push es sbb dec mov mov adc shrb push xor in pop lret pop pop xlat sar in lods popf (bad) sub ffreep xor out adc xchg imul aas jb dec repnz add mov xor push inc jp push test daa cwtl icebp cmp xchg mov pop repz dec jmp out sub cmpsb fs adc inc shl inc or xor pusha jb je idivb test (bad) leave fstpt lret popl xchg adc fidivl rol loope pop repz or xchg repnz mov pop cmpl insb push mov xchg or and (bad) int ret stc lds mov adc xchg scas pushf add insb jb addr16 nop iret or icebp xchg test or jns adc cwtl jb sbb push cmp adc orl mov jmp dec pop push pop dec scas jo jecxz lock xor test popf mov adcl mov pusha pop push push frstor data16 mov cmc jmp jg add fsubrs add mov pop mov (bad) adc aas lea call jns jg inc rorl jecxz ret add jl mov lea jl jg out mull inc sbb mov dec dec pop pop test out xchg xchg mov cmpsb pop jl adc cmp sbb xchg mov xor push and fs sub xchg mov and test call icebp lds or insb cld and stos inc aaa inc clc out movsb add in mov jge iret roll ret mov pop pop push mov daa in pop into jmp mov jle popa ficomp cli mov or dec jo jle mov inc jne sub push sub orb pop jmp in mov (bad) add pop add add fsubl dec or cmpsb cmp and or jecxz mov push xchg pop xor jns pop pop mov stos or inc xchg fadd sub and test mov adc pop mov fstl push (bad) push push pop mov push push int sub (bad) fisub mov inc dec in jmp lret sub and push ds loop inc and shll pop or mov jg cwtl lret (bad) xor and cltd add popa cmp femms outsb (bad) jno pop mov cmp out or pop je dec xchg cmpsb adc out or orb aaa add repz add mov les xor add pop mov pop roll es aaa lock push mov sbb (bad) gs jl clc repnz push dec push mov jmp stos bound sub testb add mov mov or mov push ret jmp js fcoml or or push addb sub lock call xor adc xchg add lds (bad) cmc jmp icebp jmp mov (bad) dec push ds or out cmp jo dec push xor std jo,pn cmp das jecxz adc pop push mov cmp daa add push or insb addb mov xchg pop sbb mov sbb rolb divb rolb ljmp mov int dec incb or push add jb iret and add pop push mov imul test add dec xchg adc stc lods pushf lret xchg sub leave mov cs les (bad) inc fldcw in add cli xchg (bad) out dec and sub jecxz (bad) hlt adc mov pop sbb and bound pop sub stos dec mov mov sti or repz sub and std test xlat adc push pop push push aam dec add imul push (bad) testl gs std cmpsb inc inc sbb push mov loopne xchg mov and (bad) cmc xchg dec ret ja dec mov or in dec xor sub xchg loope les hlt fimul push lock mov test or adc mov in cmp sahf dec push pop jae add mov outsl xor pop push mov xchg jmp (bad) insl fs pop lock rcrb idivl xor sti mov sub subl push out sub or sbb push daa jbe or inc (bad) xchg xor pusha (bad) subb add add mov mov cs add cmpb cmp test sbb mov jne lahf pop fimull test sub sub xchg in rolb and jg push add push (bad) repnz pop pop dec sbb pop adc mov cmp cwtl cwtl mov adc repnz orl aam outsb lret mov mov pop xchg fs enter add lcall pushf negl adc (bad) dec hlt jnp mov lock mov enter sarl fisubrl insb insl or dec movlps push sti add add add call shr aad stos dec in inc into pop pop mov pop lock daa xlat inc dec or (bad) ljmp pop pop push sbb roll jo add sbb out shlb test xor lock xchg cmc insb and push lret outsb add lret aas std push cmpsb pminsw add xor lock and les push sbb pop xor mov add mov shl or sub push jge pop sti or mov or pop xchg nop stos stc sbb outsl fdivrs push fsubrp lret pop add mov jo push pop mov ss mov std test mov inc sahf and or cmpsl and add dec xor dec fcomps pop cli cmp lcall push sti sbb add ljmp in or (bad) mov test inc jge loopne mov push inc cmpsl fstpl inc pushf call popa adc dec cmp sbb push jns mov sub pop sub out mov rorb popa jne and ja sub sub dec mov and mov dec or xor xor cld mov mov jmp das ljmp inc in outsb ret add add repnz test and iret jle mov xchg pop adc pop xchg sub add out mov push jns cmpl iret neg mov xor lock test inc jae sub imul mov jbe aaa dec lcall out xor mov mov cmp cwtl das idiv xchg aam inc push jne adc sub scas int xor add into les or stos inc adc pop mov xor inc inc push ljmp es inc fs push jns enter push cmp xchg mull shr hlt ljmp push fiaddl fldenv imul pop mov sahf push or add or (bad) adc xor nop jl movsb mov mov mov (bad) mov or jp jmp std or jnp das outsb movsb cmp rolb popf xlat or fs decl or mov or xchg jns movsb add stc bound or mov mov mov stos mov andb pop (bad) call ret test cmpsl les rcll popa adc pop pop fs ficompl int3 sub mov mov sub (bad) fdivs sbb (bad) mov ljmp lcall sbb fcom mov sub mov adc sub sub xchg and inc mov lea testl jnp push xor hlt or sub xchg add add mov js jmp sti sahf js or sub or mov jge pop mov andl sub rcll (bad) into mov cld cmp xchg push and mov test jno push mov jp lret insl jno loopne xchg es mov and dec ret mov xchg adc test mov xchg arpl sub cwtl fisttp jecxz cmpl insb inc push mov mov jmp stos xorl pop push and xchg sbb pop push jmp mov shl outsb xchg lret pop xor add sbb mov sub mov mov mov (bad) jg adc jp fsubl inc push push je test or cmp push or pop stos clc movsl sti mov call and popa and xchg adc mov and fmuls lret roll xor popa adc es jnp xor pop gs js inc imul pop rorl ret pusha outsl leave mov mov push nop cmpsl add pop sub rclb sbb sub clc fsubl pop lods das cmp cmpsl and push (bad) or pop xchg add aam out rorl push out sahf mov xor das adc stos adc daa iret and dec inc xchg cmc punpckhdq sbb inc sbb lock xchg test pop out jmp (bad) mov inc cmp sbb xor iret cs daa or pop xchg and mov pop push (bad) fcoml jno push jmp adc fwait andb cmp sub loopne (bad) push mov jae popf mov pop inc das push into lret imull pop pop push test jp sub das hlt out push dec stos movsl aaa lret js push xor sub xor xchg das push adc daa pop jl inc push sbb dec mov cli movsb out popa pop xchg ja xorb cmpsl jle nop out es outsb or popf pop mov inc js push jmp dec sub pop shl ret (bad) call fstl mov and out jbe inc cltd icebp ds push pushw (bad) pop daa stc pop (bad) and (bad) stos test lret call hlt sbb repz aad jle out lret cmp ss outsb cli ret jl sub fs pop xor jne stos hlt aaa pushf add imul mov mov or jnp ljmp loop sub inc or in mov push lcall jle mov xchg jp jge add enter inc shll data16 fsubrs mov pop pop push pop add pop aaa (bad) cli mov xchg imul dec push sbb mov or sub mov iret jbe add add mov pop rol scas add adc movsb sbb jecxz pop ljmp mov (bad) mov xchg mov es imul aas adc adc loopnew push stos xlat lods adc arpl imul pop shr inc dec pop repz aaa aam outsl inc sub jge add mov jae (bad) push (bad) lret pop mov push push in cs xor pusha sbbb mov (bad) fbld jno sub cmpsb or fs (bad) jo sub xor xchg or cmp incl fsubrl sub (bad) add cmp add xlat inc leave iret adc imul jnp jno dec fucom cld pusha pop lret xchg push das int3 es shr xor leave in jp add gs mov test pop adc or ret push pop stos into and loope sahf lds inc in push jne jo adcl pop dec rcll out jp stos cmp cmpsb lret lods inc lods mov out shrb testb (bad) jne jp jmp mov (bad) lods or sbbb (bad) jns into rorb sbbb sub cmpsl xchg mov icebp mov xor movsb xor push orb inc push and stc push pop sti lret cwtl sub mov mov inc jne (bad) je lea or inc add stos hlt xchg cmp subl pop fstpl call jmp in mov clc aaa pop push mov pop sbb cmpsl add mov adc jge ss push aaa daa sub push xor pop in jp cwtl jb aas mov movsl out inc and lret mov pop jge or xor mov xchg ja sbb adc xchg je das les mov repz je bound push inc or scas cs jl ret xchg std inc push add into icebp (bad) mov sub lock sbb ds push or pop stos xor inc test int sub aam imul test push mov jbe cltd psllq and lock jge shrb sub adc frstor jno dec push sarb js or and imul or jmp add sbb pop sbb nop scas mov cmp push cwtl push mulb (bad) mov je inc xchg cmp mov rcr jns or ds adc push loope roll xchg scas xor pop movlps sbb and jmp add fsts jmp out dec fsubrl ds sbb mov mov xlat lahf add lock jle es ds push cltd inc loop cmp jmp (bad) mov mov mov jno add repnz decb xor xchg jns pop outsl push mov in mov xchg sahf and mov adc push pop xor sbb xchg out mov aaa std shl out pop pop rcll iret rep mov cmp and pop aas arpl mov add inc jecxz pop and xlat data16 scas aas add xchg cmp lahf lods xchg ret pop in adc mov or outsb push (bad) clc pop push mov fildl rclb (bad) push mov call add fildll inc pusha fwait push add push jbe pop and mov adc xchg cld inc je jmp fistpl jnp decb push mov add add jg orl mov lahf jecxz mov (bad) int lahf mov pop es push ret jne pop mov inc pop xchg das mov movsl dec xchg pop mov xchg add hlt imull lcall pop mov or and push jmp out stc iret push xchg mov movb out popf adc rcrb (bad) popa flds adcl (bad) and lds inc mov pop and test xlat xor mov push clc jno cmpsb (bad) lock shrl add lods or (bad) out add ss outsb xor sub jg mov jmp add es and sbb test arpl dec popa cmp loopne xor push aam js jmp scas sbb pop jg dec pop mov insb (bad) push or adc mov mov test pop or push lret test fcoms insl mov sub jmp scas mov aad adc or xlat pop test movsl pop sbb insb int3 repnz sub jecxz les ficoml mov and cmp (bad) xchg cmpsb testl mov cltd and jbe jle ljmp aaa lret inc or insb loope inc test lahf push pop xchg push rcrl imul ja push movsb test daa loopne sub mov (bad) lret mov repnz les cmp or aas in andb adc ja jmp sbb push inc push mov xchg mov and dec ret cmpsl aam jb cltd (bad) in jno pusha movsl and or neg or xchg add cmp xchg pop xchg push aam push and jmp push imul inc movl add pop arpl mov aam clc pop jb sbb sarl idivb decb test xor pop or mov pop out enter popf (bad) or xor rorb and cltd lods jl sub sahf push inc addl ja sbb es jnp je inc pop call adc pop sub sbb (bad) imul mov add pop out xchg pop scas mov jmp mov nop pushw mov inc (bad) rol mov xchg mov inc mov nop pop pop jmp xor adc push add mov dec push push mov jmp lret jge xchg and fst push aaa cmp push mov push mov enter inc pop mov pop cmp rorl das xchg mov mov imul lret shr mov les lret inc and pop addr16 das icebp pop jne cmc scas lock inc push daa sub gs or inc insl cwtl dec adc sub fistp mov xor (bad) in add mov adc rorb mov add jno ds ss and cmc adc xor outsl into fs dec cmp movsl adc or pop inc or mov push jne loope xchg insb scas xchg hlt mov out pop dec pop pop xor add jne and test pop xchg lds lcall xlat inc out and or scas and std jns or xor ror fadd scas inc jmp mov jge pop and gs stos push lods lcall xchg add sub dec decl mov sbb dec cmc addb add sbb imul jmp xchg jae or js daa cmpb mov mov mov das jge shl unpckhps add in xor sbb dec dec dec and (bad) jle adc pop xor sbb xor sub cwtl sbb push insb sub and pop push call stos push jno and bound or push xor xor mov xor call push pop addl ja insl loope jmp lods popf xchg das sub ficompl pop mov dec xchg mov mov test jmp mov adc dec xor enter sbb xchg jno adc mov mov cmc cmp inc ljmp mov jp sub test pushf pop and data16 mov add pop sub push mov cmp shrb xor (bad) or pop mov sub add sub and or les dec pop or lret add aaa or cltd adc push add cmp js xorb divl pop out push rorl and cmp (bad) or outsb pop jbe mov pusha adc push sti sub pop inc (bad) mov pop pop pop (bad) sub push mov xchg fisttp pushf out enter loope test mov dec add lea mov or test pop incl pushf push inc lock jmp add cmp rol sbbb adc loop xchg mov orl ds mov mulb das (bad) pop jb xchg or fdivp xchg or mov and pop add add sbb mov ret inc jge int aad loopne sub jno pusha push push outsl jmp aad and push jle aad or jmp add or cmc js dec sbb mov leave inc nop cmpb fistl push xchg repnz mov pop pop xor jno inc pop push sbb or aam add dec lret dec jae shll fcomi inc mov fadd out add pop jmp iret pushf aam and int fcos loop cmp mov lods aas inc mov mov dec aam adc jnp and add jg icebp loope popa add pushf inc ds jb mov test mov btc add mov sub xor mov jle push (bad) mov or loopne mov dec mov jp pop push push test fs push mov test das (bad) jge leave xor xchg pop or and fdivr and xchg mov fldcw sbb ja icebp cmpsl push pusha xchg and and inc in std popa xor xor add (bad) mov fwait push mov push inc mov add aaa add insb sub inc jne shrl dec pop sbb jge sbb push add dec xor mov mov stos add pop sbb sub mov roll rorb dec scas adc orl (bad) mov dec pusha pop adc mov cmp js mov lock add sub inc dec jmp icebp jg std dec fnstsw mov jae add loop int3 jo faddl pop xchg pop test sub mov jmp xor add insl add xchg outsb daa scas pusha inc xor out rcll dec push pop stc xor mov push fmul cmpb xchg (bad) jb xor clc enter scas outsb dec push js pop fwait ror mov mov or or cld mov sbb iret (bad) jnp cmp scas or push packsswb adc pop or xor aas shlb dec lds or mov insl fnop cs jbe xchg pop push dec notl mov mov pop or xlat je lret push cmp stos mov stos test lock je pop add xor outsb mov cli (bad) or jmp dec call sub cmp mov out jmp (bad) sti int3 in notb xchg mov lret mov or jmp dec icebp and (bad) cmpsl lahf pusha xchg pop (bad) das out jb xor (bad) fistl dec mov fstps mov jg ljmp add xchg mov mov push mov scas adc jb adc leave (bad) cmp fwait mov leave leave scas add or or pop add mov test arpl cmp jne jg jae xor mov push add or mov es sbb mov adc and pmaxsw jno gs (bad) or sbb jno push inc psubd mov sarb push mov jns fstl mov jmp dec push outsb pop das lret shlb test pop mov bound and push or mov in (bad) sub jle (bad) pop add dec add or insb jnp push add adc push sti stos loop jns cmp adc inc test jno xor cltd xchg test lret mov jmp pop mov jo push sub and rcl add jmp mov stc in cs les add or mov bound mov push or or ja addr16 es inc out sub subps adc out dec mov add adc outsb inc xchg mov inc (bad) mov and outsb dec int incl add xor lahf pusha arpl cld (bad) nop mov adc fimul je aad aas sbb into ljmp jmp aas cmp mov out cmp divb xchg (bad) popa int3 push test in mov jae fcompl pop pop xchg mov add fnstsw push push mov cmc mov popf adc pop fsin jns adc mov cwtl dec aam lods ror movsl xor call push jmp jbe dec jne adc outsl pop test les adc das fs inc mov fdivrs sub jb and adc add or imul cmc xorb adc xchg pop or sti test inc pop mov dec jnp (bad) sbb pop push jae idiv popf pop xchg push dec dec push mov jle xchg decl dec test out int3 push mov jle jno movsb dec scas adc add xchg sub mov cmp mov mov pusha mov inc add jae test in into adc push jns add sbb xchg push (bad) jg in jns fsubrs imul inc sahf aad fidiv sbb add ficomp repnz or jne ror (bad) daa and or and dec jecxz dec xchg call xor xchg and mov sub add sub in mov mov fldcw jp rcrb pop inc jmp mov mov fsubr popa ja in mov xchg push jns inc push in inc dec xchg (bad) leave push add jmp mov sub cmp fimull lods lea andb xor and mov mov add dec push pop mov dec not xor jmp xchg ljmp (bad) pusha and xor push adc sub aas test sub mov mull out mov nop dec push std loopne or inc movsb pusha (bad) mov push scas sbb aam rol imul mov xchg lret sbb add test ret cwtl scas and jae cmpsl jl xchg imulb lret cli push push adc fstl outsl mov push xchg push xchg outsb mov lds pop shll cmp pop pop jmp push addr16 jg repnz dec shrb push call xor cld (bad) fild jmp aas (bad) inc cmpsl lods jg out add pop jmp (bad) mov cmp sub mov add scas lods test mov inc test jg jno testl mov (bad) dec hlt fs jmp add push popa aaa mov pop mov add or sub lods pop sub insb dec test sub ds aad add leave add cmp xlat int sub pop test dec inc (bad) nop inc sbb imul (bad) iret and sahf ljmp adc adc push addl je inc or fs pop push ja cmpsl or je pop dec jp in and sbb or subl add sarb out mov lahf arpl and lahf icebp push ret (bad) xor push push test lret mov jl jle push ror add cltd mov outsb rcr pop dec or (bad) imull mov adc or test (bad) push push push inc stc inc adc pop and (bad) jb les pushf sbb ja out pop addl push jecxz jnp scas roll jp or ficompl adc adc daa add out popa psubsw scas shr (bad) in xor jmp mov sub lds mov lahf adc lds sub dec popa imull sbb repz mov popf or sub cs loopne xor pop adcb dec and mov icebp sub outsb inc pop dec xor popa neg mov add mov inc (bad) iret stos pop ret cmp xor or out rorb cld pop js dec rorl scas mov arpl xor mov mov pop popa ret repnz lock fsubl stc js pop mov mov inc mov repnz and dec sub add pop mov push mov fbld rorl std mov sbbb lods push xlat adc cmc mov inc or jl mov std mov in sbb dec add sub jbe sub add pop add stos pusha int3 ret add or outsl jmp out pop mov jbe pop (bad) sub mov push sahf fs js ret xchg push pop inc cmp sbb jo movsb (bad) xlat int and cs popf dec xor mov lods repz inc inc bound xor adc insl call or lret test (bad) mov aad (bad) dec aas call jo jmp sbb int or xchg out push icebp xor stos xchg push sbb sarl dec and daa (bad) repnz push outsb xor push mov aas fnsave ljmp jae mov call or into dec lahf addr16 scas std adc mov xchg outsl repnz rclb fsubr scas xor cmc mov jne sbb lods jae leave xor fisttpll adc mov test call dec xchg pop daa or fildll mov pop ljmp mov and popa aaa adc add and ds push add jns xchg xor pop test adcb jns (bad) loop sbb sub and cmpsb test scas imul stos pop aaa (bad) pop shr (bad) in push mov mov push jecxz (bad) ss cmp popa cmp and addb sub sub repnz xchg adc dec mov jmp sar xchg jo aam bound faddl jecxz mov rcll xlat nop insb inc sbb add sbb mov jmp ds inc pop arpl mov lods add or scas pop push pop or push mov das jne jo jmp repz or sub sub mov mov clc or les sub fsubr int mov mov mulb arpl add mov movb jno aad push ret mov mov jge (bad) jne xchg xchg ret ljmp mov ja jnp inc xchg leave or sub xchg les nop inc push sbb mov mov lods dec jp sbb repz jmp jmp mov loopne popf xchg adc add lea out js adc adc jae inc loope push rcrb xchg jae or fisub aas push pop sub es dec xor dec dec stos into add sub xor je cwtl cmp dec shlb lahf mov and pop loope push push push nop loop inc jns pushf int3 pop outsb ljmp sbb (bad) add push sub push push ja dec clc add or imulb xchg jnp mov cld lret pop fcomip lret jg inc mov mov xor mov xlat sbb or cmp inc enter or mov bound jge rcll cmp (bad) mov mov jge sub pop fmull addl xchg lea (bad) fldenv imul cli xorl shrb sbb push inc data16 inc (bad) shll mov popa ljmp mov xchg fimul gs lods xchg test mov or or push mov jnp daa pop or lea xlat scas and inc inc add adc or push je fild (bad) push cmp adc adc fimul add popf inc mov xlat and dec mov xor and pop mov sbb ud2 sbbb fdivrs das sbb push jg imul xchg sbb out dec mov xchg add shlb (bad) dec mov cmpsl or imul iret push mov push push mov orl inc pop fstpt pop push dec jae outsl fwait add push push cmp mov repnz xchg shlb jmp sbb lret std andl xor push and mov push pop not loope jmp arpl and or pop test sub mov inc lcall add xor pop adc mov jne push jns (bad) cmpb sub int3 xchg or xor pop movsl jb xchg out push cli adc loope pop mov adc dec add loopne addl pusha lds pop push cwtl pop xor sti xchg lds and push add imul push mov (bad) xor clc pop dec xchg mov stos (bad) xchg push sub xchg or test js rcll call xor lret pushf pop pop xchg mov xchg jecxz jge das adc mov xchg add addr16 or jg ds dec dec xchg cmp push push ljmp test xchg das clc xorl add jecxz pop in and negb jmp fiadd jns cs sbb dec and add add pop push push into loop adc sub push xor out sub testb pop stc lret and hlt cmpsb pop outsl (bad) mul sarb rcrb pop xor lods (bad) addl xor fsubr and mov imul mov or add imul jno sub insl sbb xor push outsl adc add nop add mov lea and in jnp dec inc loope imul into cwtl (bad) leave addr16 lcall cmc add jmp xchg jmp add push loop push scas (bad) (bad) cmc pop sub inc mov and scas xchg push push jge (bad) js xor iret mov loope movsb outsl pop sub adc pop dec mov pop sbb cmp add or xchg pushf adc add mov (bad) jno jmp jb add pop push jnp pop sti pop movzwl push sbb cmp pop push sbb pusha add sub pop mov (bad) rcrl mov (bad) cmp jg and pop in rcll repnz mov test (bad) rol mov aaa dec add inc and bound jmp sub scas leave push fldenv repnz push bound (bad) aad dec shrl push cmp xchg mov sub aad sbb jge div movsl sub xchg in clc adc adc mov pop clc add cltd scas dec addr16 imul lahf test dec in loopne xor add cmpsl dec pop adc (bad) das rolb stc pop sub rol es out sbb or ljmp sub fldcw add arpl mov add push mov int3 mov addr16 test test cmp aas fcomps aam mov cltd and cmp add out jecxz or xchg or hlt xorb pushf (bad) or jb adc lds jmp pop mov push pusha jbe pop lret dec in jnp daa xor addr16 mov jmp mov push xor fdivrs bound fildll pop lock subl push lds or mov adc dec jmp sbb jmp cld ds jmp mov mov xchg fsubrl movl lods sti shrb or xor and and jle pop pusha cmp lock cmp sub sub add ds cs pusha add push outsl adc push sub and mov pop inc or push and or insb movsl inc and pop push pop (bad) pop cmp xor adc xchg cltd xchg out jnp (bad) mov dec mov pop pop xchg mov jecxz dec jb popf popl int mov or xor lds push out enter inc popa insb or daa and fs jbe cltd add lods sub mov fwait das rorl push dec mov rolb add xlat sub xlat cmp lods ds jno test cli outsb repz ljmp or lods mov push mov in xchg sbb jle loop dec out cmp loopne sbb mov sub jmp decb std cmp push imul add cmc popa lods es mov sub lea imul xor push pop (bad) or dec mov (bad) xlat adc add rcr mov sub in imul inc lods sbb inc insl data16 sbb repz aam pop cmp (bad) cld cli clc adc push mov adc jmp rclb mov rclb push cmp jge jmp xchg push sbb xchg and pop xchg movsl dec xchg adc scas xor mov jp shr mov pushf jmp fucomip cltd sub cmp mov scas xchg jp mov sub ficom dec fst js and ret cmp mov adc int push rcl pop add leave pusha sbb mov jne not jecxz mov cmpsb and jge jbe insl cs jo sub movsb jecxz jge insb scas mov shrb or mov mov or sub rol movhps jns mov fimul mov data16 xchg fdivrs adc pusha push test add sub in mov jmp ljmp sbb dec and push jnp cmp sahf (bad) lcall mov pusha jl in or pop (bad) hlt (bad) xor pusha pop push mov into jmp dec pop ljmp mov inc jmp push jb pop mov cmp sbb test adc push repz adc stc jb add lea insb and jge ret mov mov sub cwtl jecxz pop mov lahf outsb pop pop push mov jne adc sbb dec pop push inc das adc or (bad) jmp or and adc jmp inc cli add and xchg loop arpl jns out pop (bad) lret daa xchg push (bad) cmp add addr16 cmp rorl stos adc mov mov push rcll repz (bad) xchg aaa call jo xlat into or dec sbb es mov stos cld ficompl call dec mov pop cmc adc adc les mov daa test mov add dec shr add outsl and jg lahf call fldenv mov loopne dec inc mov cwtl pop mov xchg sbb pop fnstcw push lods icebp jg cmp inc outsb adc loope cmp add push jae adc add pop sub gs (bad) ss dec pop sub xchg js xor push jns test sub pop fild imul jbe popf push sbb adc fcmovb jle sub push inc aas lods inc loopne int xchg pop add (bad) or int out arpl popa stc in mov jns jnp or jb pop rorl neg push jne sbb cld pop dec mov cli and adc mov sub in movsl add mov jecxz push fimul scas pop jp stos pop adc mov out and mov mov push pop push popf cmpsl mov sti inc inc jno jb std rcrb adc mov sti mulb jmp nop dec dec nop dec lcall int3 xor (bad) popa xor lds push out test add pop add pop addl lds xorb and scas pop push inc push jmp lods insb (bad) mov cld or sub push fcoms subl jmp xchg icebp add enter rcll jge xor push mov xchg mov sbb pusha mov out or mov xchg out lods test mov push icebp mov mov jle enter sub cld adc lock push cwtl ljmp jb pop pop xchg dec stc push or xor sbb cs (bad) inc xor push xor jge xchg and pop cs push or adcb rorl add in ja pop adc pop (bad) mov jnp add popa inc shr cmc fsubr int mov or add lods mov pop test inc mov inc outsl gs out and or stc (bad) xor or stc roll ds push add sbb add xlat (bad) pop cmp mov jns inc adc into sub pop ret inc pop sti xor sbb iret sub sub cld outsl rcrb sti insb xchg popf or jns insb nop fldcw push add insl adc dec clc leave xchg or xlat or clc add js dec sti cmp push adc xchg outsl inc js cmpsb insl add sbbl leave pop add dec (bad) adc jmp (bad) icebp out in push mov sub mov and or daa repnz lret (bad) jge gs cmp mov push dec out mov or xchg dec pop mov insl cmp fmull or jbe lock xchg and je pop sahf lods movl push es xchg mov fwait sahf push loope lods xor lods dec mov sbb pop push adc push scas insb add sahf add rolb cmp mov popf jmp loope add add in decb icebp sub fidivr mov mov push sub mov sub aad subl mov stos mov and ljmp push push xor (bad) pop cmp add jmp inc adc fimul aaa daa jnp and fistp lcall inc pop push mov push jne mov sahf push add mov dec out sbb sbb cmp jg mov push and andl (bad) xor or and xor push or dec (bad) data16 cld push push xor xchg leave cmp scas pop icebp add mov scas test or cmc jge loope in mov stc mov (bad) sbb inc dec daa pop push aas xor inc ret mov push add (bad) test add mov adc add imul mov lock pop aam adc loop sbb mull pop push hlt xchg cld jmp vpaddusw rcrb xorl pop xchg jb sub push jmp pop gs jmp push inc mov call (bad) hlt or push addl jg add jae sbb lret das xchg sbb inc dec or or add test push jmp adc push adc in fiaddl add mov add dec lock jmp ds push call fs add push negb mov push ret jg lds or pop push js (bad) mov push sub into (bad) mov adc inc sbb in aam mov xchg lods clc or out aas (bad) lock or leave stc loop popa pop cmp adc pop lods jl mov jge icebp add cmp and (bad) mov add or push in mov xor jmp fiaddl jge fisubl adc test push cmp xor pop mov stos loopne jmp mov cltd insl daa mov (bad) aam adc imul loopne jno sbb xor jae push std pop jmp loope test movsl mov jb add stc ja push add imul pop pop int dec loop jmp jge lock push lret dec cli cmp xchg add xor clc in xlat lods jbe insb call push jnp inc adc push mulb ror pop push andb add mov push mov push call mov enter xor mov and push loopne lds popf sub push inc add xchg adc loopne negb orl in in inc mov add sub loope cli sub dec pop xchg stc mov or xor lock mov lret cmpsb test dec outsb or add xchg sbb jmp mov into pop in jno lds ret gs popf scas push scas inc test imul sbb pop in mov repz push adc lret int or icebp adcl pop shr jmp xchg dec push pop cmp neg aam sub mov pop add mov jns loope jmp sti mov ret pop cli les dec sbb mov imul mov (bad) ss mov xchg push push pop pop sub sahf pop adc dec cmp call pop mov popl add mov push pop jge out cmp cmc negb mov mov nop sub test decl rclb aas and in js jg rcrb fiadd jmp stos jns and cwtl insl (bad) call js test sahf xchg jns mov xchg cmp sahf mov cmc mul je in clc mov mov (bad) cmc xchg ret (bad) push pop insb xor xchg and sbbb push dec add xor dec (bad) xor inc adc push cwtl dec js shl inc add out sub mov and push pop pop and sub adc outsb adcl inc sahf xor jne dec dec push mov inc loopne mov psadbw std pop mov scas adc push pushf test roll inc and cs cmp dec or jnp mov ret mov dec stc enter xlat adc lds pop mov mov mov js sub movsb or adc (bad) aaa add push scas mov dec dec ja xchg or into pop mov pop sbb jno mov nop jp or jle jbe bound shrb (bad) pop pop in cmp sub pcmpeqw adc stos dec loope test hlt pop repnz roll mull pop xchg stc pop add mov mov out dec push inc stc movsl push xchg pop lock push push pop repnz add jp mulb shlb jp add ljmp sub cld (bad) adc push jmp sub mov push dec jne add jmp jmp push bound pop pop pop movsl pop test scas in xchg jmp mov dec xor test dec xchg add push dec add mov push mov jae xchg lret adc mov loopne or ja pushf jns dec add lret adc mov lods enter adc jbe pop movsl rcrb in dec sub cmpb mov dec test dec mov test mov nop es mov repnz adc inc pop daa nop mov jb jmp jle or cwtl or (bad) mov xchg lcall scas addr16 rcr sbb pop idivl push and test ret insb (bad) fnstenv xor loopne dec mov and add cmp mov add lea xlat jmp jo popf fimul push addr16 movsl pop ss mov mov and xchg nop test nop dec add jne add test mov push push add fcmovne pop rorl cmp ret in rclb jmp inc and and not add mov add mov mov js mov rorb insl adc pop jmp leave jo std ret imul sbb lret push xchg add int in pushw sbbl insl mov pop cs or jecxz adc xchg sub sbb sbb inc cltd call or mov (bad) icebp pop or out out push sahf push popf shll mov add iret rolb std adc popa neg shr rolb sbb stc and stos mov dec mov fist shr orb das test adc js cli pop aas dec or and addr16 sub gs adc xchg push mov adc push push (bad) fcoms inc push mov push jnp sub (bad) mov jl jl daa mov bound xchg add andb mov cld add ljmp dec mov push or mov inc mov mov xor jmp ret das in xchg mov movsl ret cmp fdiv pop mov pusha in lret and add ret pop aam xor mov test in lahf ss incb xchg inc mov incb scas cld xchg push fwait mov aaa arpl pop push jmp dec mov jmp dec or adcb xchg push lahf adc and sub inc in add lds sub sub push repnz orb and out push adc xchg call mov (bad) jae fmuls jmp mov pusha add adc pusha out mov sbb and cwtl sub jns data16 sbb sub lret dec stos xlat add aad mov push mov jmp loope push mov xor xor dec daa std cmpsl movsb jecxz inc push cmc sti ss flds cmp sahf aad add fildl sub das mov add jmp not or push popa cmpsl jno push xlat mov push clc and mov cwtl aaa xchg jnp repz inc xchg daa mov xchg test les dec and leave cmp bound out in adc and (bad) mul jo dec in mov inc adc inc dec lods mov push jns iret adc pushf jmp scas lret pusha aam loope xchg jp mov mov pop loope push (bad) sbb dec inc pop je out jmp xchg jae das mov or dec in inc xchg add push adc jge cmp lds cmp shl inc std jno add jmp xor xchg bound sti bnd sub scas adcl mov mov add ret (bad) in and mov add add movsl mov lods rcll xlat inc lods aad jmp xchg jp notb mov iret arpl jne test xor sub inc add loope,pn cmp dec pop or adc mov shrb dec mov add loopne mov pop sbb pop or or rolb sub rclb nop jns jle pop jb into dec push mov cmp pop jns push push or jge icebp jae and sti inc or adc (bad) cwtl gs adc jno mov out jo pop jmp (bad) or fldl arpl test lods push dec push sbb mov add pusha xor sub inc adc out xlat xchg ss jg lahf fisubrl clc pop sbb pop xor xchg pop outsb subb adc jmp mov not sub pop aas call (bad) cltd dec and sub inc fbstp push push mov push cltd push add pop cmp sarb test xlat cli cwtl test mov push fiaddl mov xor and test rcrl sbb lock jo lahf pop cmp dec cs sbb mov push add push xor or sbb jge stos jle leave jne stos sbb adc jb popl cmp in daa mov out (bad) jp dec and and loope add push push inc pop jmp xor sub mov pop das mov leave lods lahf adc add fcomps jns aad je dec push jnp sub aam sbb add push inc negb (bad) jg dec pop sub jmp jb fs sub xchg cmc es xchg mov add lock call jo add clc push sbb call ljmp mov fadds mov xor push push mov xor les mov mov push jmp pop cmpsb push int adc xchg testl mov mov jb sbb aaa mov add sub pop fcomip lock mull js and dec sub cmpsl pop pushf adc sbb sub or cmp jle pop inc add loopne insb add fcmovnu out int3 test push movshdup bound or mov bound jmp negl aas lahf sub and push (bad) cs movsb js scas sub cmp jle push pop lock mov pusha jb call sub sbb pop and icebp cmc gs push cld addr16 stos aam cli or out mov sbb es mov pop insb adc lods mov lds inc pop cs shr push cmp or ja cmp add imul lods mov mov jb rol stos mov mov pop jb pop mov push jne xchg add add orb dec (bad) (bad) jecxz cld packsswb test cmp pop inc pop pop ja or sub outsb and cli mov lret pop jbe push pop pusha xchg mov cmp pop inc or pop push xchg pop shrl aaa mov jmp add xlat or popf fstpl jge test daa movsb test xor inc jle jecxz add xchg lds cmp push (bad) ret sub data16 jp sub lahf push aas adc sub sub cmpl or dec inc mov mov lcall add sbb pop inc orl mov test mov call jmp pop movl pop scas pop push mov mov push icebp in pop pusha add sbb das mov cwtl xchg jbe add jmp icebp inc jmp cmp sbbl rol xchg xor pop jmp sub dec mov mov aad xchg scas mov add dec dec jle ret jnp (bad) mov jne and xchg popf std adc xchg out xchg sbb inc sub loopne adc daa pop push jbe jb or jge mov dec imul mov in mov mov sbb pop mov push and adc xor das ja fstl fisubl jmp ret imul das aad push mov out jo pop push dec push lods sbb sub jb fstps sub daa arpl scas les lcall push je stos ljmp daa push mov xlat sbb pop outsb pop push push rcr jmp popa push jmp int insb push pop ret cli sbb lahf hlt sti add andb mull mov dec andb or adc jg out mov add ss inc jl out jbe mov (bad) cli aad add add inc add xchg or sbb jmp dec imul push push shr jg imul cmp and sub inc adc cmp or rolb push adc and xchg dec pop mov pushf xor dec lock imulb jge mov (bad) mov jl xchg rorl pop pop push popa jb or (bad) js jp int3 add jp jns sub add cli loopne icebp xchg scas add (bad) js flds cmpsl scas push out sub xor jmp fiadd imul jnp sub or adc fistl and push mov ret add lahf pop pop arpl dec cmp bound xor lds or imul int add add leave fxch loope jo mov cmp aam (bad) ss inc fstps icebp repnz out (bad) or mov sahf fs out mov dec lods or mov pop test xor imul pop dec sub push cmp and pop add push mov cmc xchg aas mov xchg or hlt ficom data16 inc pop sub inc fwait xchg hlt bound pop cmp mov jecxz pusha or cmc lods or jmp mov xor jmp xor xor push mov cmp pop lods mov add push jbe pop js jns pop test hlt arpl inc pop lret daa pop or clc jmp xchg push outsl add pop test (bad) test test or sbb cwtl fbstp popa pop push jns inc adc mov inc cmp and testb sub mov cmpsb jg jle xor sbb mov mov or or hlt mov jg jl test pop ljmp iret das add jb dec cs rclb rcrb lret sub inc lea nop mov jle push or jp xor mov dec jnp dec push sbbl inc cmp rcr loop movsb push push jmp mov stc pushl or xchg cmpsl mov push push pop pushl jne xchg ret (bad) fdivrs adc adc add push push inc lods int3 (bad) push lds into push lock lcall add cmp mov sarb ret and lds and add repz push add cmp sub decb pop xor push mov test pause mov pop xlat std test mov loop pop and jecxz inc push sbb mov add or arpl or mov ret loopne icebp shll inc or xchg out add ljmp je loopne jl inc push push (bad) jnp stos jg out push jnp jnp inc rcrb sub dec aad cmpsb lahf js dec mov mov pop rol out and cmp jnp rclb test gs mov nop cmp test push or xchg rclb ja les or out push inc sub into xor add and push add push dec neg push pop or lock adc or dec cmc leave xor pop adc pop mov stos fsubp dec movsl lret jmp inc les mov orb sub (bad) std sub fcompl or cwtl adc jp adc jae cmp dec push pop xor mov jns and add cmp arpl stos sub sti mov jo push cmp mov movsb daa repnz clc das fnsave repz pop pop frstor cs pop sti add aad jo addr16 (bad) mov or fsubrs pop pop ja xchg inc enter cmp inc bound jae push cwtl (bad) dec fs lock push push in add dec jnp leave or pop sub mov sub sub xchg rclb ss xor inc mov pop pop cmp cwtl add pop sub (bad) mov cmp xor and add pop push test sbb cwtl dec jno cmp or fidivr daa clc in mov mov push icebp leave cmp inc jbe adc lret sub sbb rclb insl pop daa addr16 or jmp dec jle ret push imul push push out xor lds dec je and dec imul cmc call ret sub adc cwtl mov jb call adc sub inc jmp jge adc mov loopne push adc in xchg push stc jo push jmp bound std outsl sahf movsl divb jnp icebp ja add ret pop out and adc js adc xor cmp mov cmp pop mov xchg out cmp dec pop nop divl push (bad) mov jge fimul or dec int (bad) insl xor jmp dec hlt jne adc jns test adc sub call ret sbb pop adc sub xor call cmp sub dec cli and stos lods add (bad) push mov data16 push pop in adc in pop push jmp lea in sahf xlat pop leave lock lret mov and jno add xchg jo sub sub add jmp fstl cmp not or cld push repnz pop jg adc int inc mov fistpll bound and stos cld pop mov loop pusha and push sbb inc adc jmp jl scas adc loope or dec inc add adc or adc jae ljmp dec xor pop push rcrl jle stc mov (bad) sub inc insb ja sbb push push inc lea rorb push adc or jmp dec jmp rorb arpl inc imul pop inc xchg or (bad) cmpsb dec fcoms xchg cmpsb fsubr pop and outsl js (bad) jp nop inc push pushf adc lock (bad) movaps jmp stos pop rolb pop mov xchg pushl ret loope cmp adc push add lret lret and adc cmp pop fs or ja je xchg dec dec mov sbb nop repnz ljmp push lret mov iret push cmp push mov lret ljmp and adc cmp or rcr std xor ds call (bad) int3 pop xor lret hlt push out test jp mov add jge sub push xchg je dec add mov inc jno mov push mov xchg lret mov in pop mov mov push ds cmp aam sbb scas sub test fsubrs inc jo test mov inc and cmp adc (bad) pop mov in mov lret adc inc sti repz adc fs in ds les or push push int3 inc pop test push adc push rorl shr push mov adc es cmc pop add xor adcb nop daa fcmovnu xchg in lea jns addr16 into adc inc push jmp getsec inc scas decb cmp and cmp jg adc inc test jb sub or add push pop daa push mov lock insb adc sbb outsl inc out xor mov dec cmpl pusha xchg xor fldenv imul jg popf sbb sub xor nop dec cmp ja (bad) push adc (bad) xor gs jmp mov mov ds mov mov je inc jmp add stc pop xor sub out dec test push cs cwtl mov (bad) je cwtl pop push xchg push and push mov mov ja subb xchg or cmc dec bound inc mov jo push mov cmpsb out cmp (bad) not xor xor xlat adc mov icebp mov inc add movsb cmp dec mov jle xchg roll loope xchg or shl aad in stos lahf dec stos and sub int3 dec fs mov adc and pop mov or xchg or or jne add das sbbb cmp in insb jno jb daa lahf pop cmp das lods mov lahf sub movsl cmc nop or clc popf (bad) lock mov in (bad) iret stos jno test test aam scas lret rol jle outsb outsl in or jp dec mov mov call add push cmpsl ss ds add outsb cmp dec jg inc mov push dec mov sarl push lock int and (bad) and push popf (bad) mov inc repnz xor fnstsw shr xchg jb adc (bad) adc popa push xor fistpl push add hlt rcrl popa fwait jne add jle negl in dec and fs paddusb push add mov mov ds cmp cwtl push lds lret mov repnz add cmpsl sub mov mov add adc dec clc decl cmp jmp out push sbb stos inc (bad) push dec inc cli daa or repnz insl push movsl jne sbb ja push (bad) cmp inc sbb sub mov xchg adc xorl add add jp cmc out rcll sub pop mov hlt dec ljmp fstl push jno cmp mov pop mov pushf les mov cmp or ja dec (bad) idiv push pop and popa insl jg int3 add loope test and in outsb daa pop cwtl mov mov jmp push adc lret out popf fsubs aam je inc pop inc xchg dec add fcmovnbe pop pop cmp je popf pop sub subb xor (bad) fstps mov aam xlat ror adc out cltd add add sbb sbb mov and push pop push add pushf add subb push push xorl pop pop sbb enter (bad) jmp cmpsb fisubl aam cmpsl enter or mov xchg and movsb push add je cmc icebp movsl sti leave push in xchg lcall push (bad) dec add pop test xor (bad) aam cmp mov loop lds pop push arpl mov shl push mov cmp mov ud1 aas xor movsb mov in popa rep add es sub neg cwtl inc sti jns add scas sbb xchg pop dec les jp push pop das fnstenv jbe mov rol sub es xchg sub cltd add mov sub sub call out or out dec or outsb xor or std or test hlt lret lret cwtl fld mov cmp mov pop push mov js jp loope pop jne jl xor mov cmp lds push mov xchg leave add sub repnz adc mov adc jno sub fcoms js jnp push add push or sub out jo push jb into mov jnp daa lret std cmc jmp mov inc xchg sub icebp add rcll loopne push cmpsb (bad) jmp fdivs xchg sub sub out push mov sbb test cmp imul cmp add repz or (bad) xchg dec aam out xor push shrl xor in (bad) repnz addl mov bound jg (bad) xor test or sbb cli adc dec lea push xchg or jmp pop add adc push mov mov (bad) cld jg dec cmp test stos lahf or add imul add int xlat pop sub lret test push mov arpl push lea push adcl lock or inc imul xchg outsb mov jl pop or (bad) add sarl lods inc les dec rep gs mov int3 and sub shlb cmp mov addb mov push inc push js mov outsb mov xchg dec adc adc xchg fidivl mov jg inc (bad) dec push fidivl lret nop jns popf push ret in mov rcrl sub ss in (bad) out pop add jmp aad push inc movsb mov xor mov bound or das pusha cmc pop jb push pop mul jne sbbb adc inc jg adc pop lds adc sub loop shr xor cmp (bad) sbb add adc test or inc das jns mov xorb sub pop fisubl popa dec ret and push add sub ficomp xchg fidivrl or push mov sbb outsl inc cmp mov adc jg not out psrad movsl ret jne fildll rcl and lret pop pop out xor (bad) push test js mov dec add adc sahf xor xchg icebp sbb adc dec notb aas or jl inc repz rcr test sbbb cs leave dec add ss out sbb jp pop inc add in addr16 add addr16 aas into aad mov jmp jmp mov mov pop lret jmp loop pop in mov and adc pop sbb mov arpl sub sbb add sahf fisubl leave push sarl imul loop insb fcoms mov pop lret sub repz je sbb pop sub or and and ljmp ret mov jnp pop dec mov mov ret notb out in jo cwtl jmp push cmp mov push das sub fist lret jmp pop and mov addr16 sbb aam add pop jmp pop mov push lock adc add jmp repnz push sub jnp push inc jecxz push jp mov pop push frstor add imul xor jle or test dec ja jp popf fidivr daa push sbb lds xor ret or pop adc stc add jmp push mov sub dec (bad) insb rorb sub (bad) or nop push jecxz hlt jg mov sub call imul lock shrb fisubrl dec add push pxor scas xchg bound or jmp js daa cs jl bound ja xor dec call pop jmp xchg pop adc lods pop jl leave jp ret repz das cld enter dec pop and repz (bad) sarl out push lock adc ret pop and (bad) mov add jns mov nop push and or in das sub pop stc jo lock js cli sub push fstp inc adc testl xchg or js push mov mov pop (bad) jp add jmp cmpb add sarl xor push mov mov jmp mov fildl xchg or push mov push jns add fwait data16 aaa mov mov add int3 xor push movzwl not dec (bad) pop cltd add outsl add pop rcrb daa adc and xor fsubl fs and cmp mov sub icebp push pop popf pop and loop jmp dec out inc ljmp or (bad) xrelease add lods xlat data16 xor sub lret push pusha dec mov mov lahf insl imul xor sub cmp and syscall mov cli xor mov dec pusha xor fcoms cmc push loope add adc (bad) data16 std (bad) insb das ljmp xor iret inc mov mov xchg shll into jle fs pop ret ljmp push mov sub popf jne enter in and in popf mov add mov xor dec fmuls cli sub aaa cmp pop add jl shr pop outsb out dec add xchg adc aas loopne ljmp data16 inc iret fs dec roll gs inc sbb sbb outsl push ds inc mov xlat (bad) dec dec (bad) sub push push or add pop cmc jns popf out add and inc in mov pop out jg lods xor and cmc out adc mov add not lds mov loop ljmp inc pop fsts sub push mov dec pusha sbb loop jo add jg pop movl push shr loopne movb dec scas iret fs xor sbb mov xchg enter mov fldcw jmp add into ret lahf ljmp mov mov dec mov mov inc pushf out loope cmp inc out pop cmp pop sbb in and inc mov push xor dec lret lock dec neg pusha and dec add cmp push dec jmp adc loope jl or xchg sbb xchg jmp xchg jle pop sbb xchg or push (bad) dec rcrl sbb sub inc adc cmpl fnsave jecxz and pushf push jge or adc (bad) cli pop push push mov and or push incl dec out aam mov lods std sbb cld inc push and pusha sub (bad) cmp xor pop mov jo cli pop lret lcall adc jg int adc lods jne arpl into subl sub add jne pop cmp aam push negl inc cmc enter mov xorl (bad) incl mov jle or jmp and fdivrl pop and mov (bad) adc xchg in mov or pxor aaa movsl pusha jmp ljmp pop jecxz outsl add test icebp xchg pushf jo pop jmp ret pop sbb in jp jno cld sahf ss mov bound or lcall mov pop sbb in cs mov or sub (bad) cwtl xor loope mov cmp movlps push mov clc sub xchg lret and inc nop inc and lcall cmpb xchg inc (bad) and jge lret cmp repz imul sarl adc scas movb fbld call aam push js xor movsl mov lock pop fwait cs imul push pop dec mov push popf out dec cmp repz repnz push jge and push push jnp or jns pop cs pop jmp aad cmp jle js jbe push or add leave js ficom push in mov add test in cmpsl xor add js and sub or push adc jno dec pop test xchg and or data16 clc movsb pusha jnp,pn push adc pop sub movsl pop pop pusha jge nop inc out mov sub decb out push cmp (bad) lret add inc ljmp adcb test mov shrb and mov cli adc idivl jp sbb mov mov mov adc ss push rorb pop popl lods ja bound imul mov pop repz xchg push loop clc jmp stc pop adc pop add and int adc pop cmpsb and and mov add fnsave add jp cmp jg mov mov jg cltd mov sbb inc inc ret das push inc leave cmp inc test add sbb dec and sub (bad) mov aaa or xor outsb aas mov cmpsl imul leave fcompl mov add add push xorl loopne and cmp test fnstsw add cli sub and sbb in jbe and pusha cs push imul add pop and aam ret pop fidiv test jae jl scas fcom xchg pop xchg sub adc ret movsb xorl (bad) or pusha add loop mov jg ljmp ja ds and inc dec sbbl push aas xchg lahf pop xor out push xor push xor xchg (bad) fsts push shr mov xadd das pop dec sub (bad) add pop xor pop loopne jp push (bad) mov sub decb jb js lret pop pusha aaa add loope mov mov jmp pop jae nop cmp ret add imul push ret les sub cltd pop test repz scas mov dec xor jno add pusha lods int3 jae sbb adc iret push pushf mov jbe pop das add dec nop mov in cmp sub pop or inc cmpsl icebp jl fsubrp stos fs pop xlat cmpsb lahf in jge loopne sub inc add inc adc add lahf cmc adc jns xor roll cmp xchg int3 or add mov push mov add jg dec repz jmp cmp cmp pop (bad) mov test adc sub out push jg or xchg jo fwait rcr pop or add dec add sbb push push fstl icebp (bad) cmp inc ja aas mov (bad) sbb insl cli dec dec add add mov sub add orb dec jbe shlb ficompl dec loopne cmpsb pop cmc addr16 pop pop xor push add sbb into jg ja fwait ss int3 call rolb jb incb fbld or mov xchg fxch das jns or jmp jno or (bad) dec ficompl adc mov mov mov cs push aad scas inc in sbb dec cld sahf inc popf and imul (bad) mov pop pushf add mov sti cmc add out push shr orb addr16 sbb addl add inc int sar sbb lahf sbb cmc cli inc daa sbb in push jg or dec mov in outsb push (bad) add dec xchg add fstl (bad) hlt or jbe cmp xchg dec dec or lods push pop fadd pop and adc fistpll adc (bad) aad loop pop sub sub mov into daa repz pushf xchg push int xor cmc dec pushf test lock mov fmull jl push mov int or test mov sub pop imul jo mov push mov imul outsb or aaa mov popf inc in xor dec pushf pop jae (bad) fsubr mov (bad) jmp iret jg addr16 push outsb adc add pushl or insl inc jne inc add push mov outsl bound inc jmp enter push aas out pop xor repnz add sarb cmpsb push sbb repnz loop js lret jle push adc or jne call inc sbb fcomps (bad) and sti xor pop xor ss mov adc inc push dec mov jle test adc cmc lret cmc data16 pop (bad) add xchg pop xchg in adc pop das testb sarl push mov dec rclb add test std sub (bad) out cli faddl imul arpl mov popf dec dec add lea or push movsl add jb fadds xor jmp inc cld add in pop pusha mov es arpl add push mov cld in ret xor or dec mov ja cltd sub iret andl leave std add push loope push adc int add outsb xor fldcw adc lods daa test cmpsl xor aam outsl and repnz shr and or mov sub outsb fisubrl mov cmp push jle sahf test ljmp adc nop lods mov rcrb es ljmp call push mov sbb push or dec jns add aas add xor fstpl sub popa aad mov and or add xor rolb popf fadds sbb insl add add or adc pop push lock jmp add and sbb add dec sub cmp stc scas imul and (bad) or (bad) iret jbe dec dec lods mov add mov or les es push sbb lret cmpsb adc or dec and pop sbb mov push cmp xchg xchg xchg xor xchg add dec push mov jne in adc or dec jbe push mov loopne mov and pextrw ss int roll pop push mov cmp add jmp ret iret xor (bad) push pop add jmp xchg pop cli ja in mov dec push and inc fnstcw lods jae jae bound mov mov clc inc cwtl inc or add les or xor jns dec sub outsb push mov inc loope das bound imul mov or in comiss fs lret pushf and sbb popf leave push (bad) int3 ret jmp sub push (bad) fidivr adc mov fcmovb push pop test jl shrb dec popa mov jmp leave mov leave sub popa mov sbb push add push mov adc enter inc nop in sti sub xchg call pop xor (bad) leave inc cmp enter add out daa in xchg xchg scas mov jecxz jg mov xor in xchg xor sub cli sub in mov dec add and mov pminub mov (bad) call cwtl mov rclb mov inc pop or or adc jl,pt out daa add imul or test fldl test xchg lods ss or ljmp sub in xor or cmp sub push push pop jmp aas pushw push pop lret cs inc lahf pop iret sarb push pop mov js pop add push mov mov aam leave incl popf lret test push loop pop outsb mov add xor pop lock pop insb inc cmp decl lods dec dec ljmp push fwait cs aam repz test ljmp or addr16 mov xchg inc sbb mov pop xchg in std xchg popl lret inc or mov in add dec std mov jl scas std xor rcl out lret inc jmp jns sahf mov les and jmp lret aam cli test out mov call xchg dec fnsave (bad) and or sbb xlat bnd ds ja jbe sub daa push mov inc outsl pop mov push imul jns call test punpckldq push mov (bad) inc dec push sarb and xor add imul add xor aas sbb dec ljmp daa xchg mov sub or lock inc add mov pop push movl push mov add aaa cmp jle cmp xchg push pop add jno cmp popf and les imul or cmp jmp nop pop psraw and (bad) push push jge stos stc push fs stos insb and push pop push gs nop pusha mov xor fadds xchg adc add xchg add lds ret arpl xor cmp sahf dec (bad) jns xor lret or jb les pop hlt add movsb or loope pop jmp dec sub cli (bad) jl mov push dec bound je add and pop lock dec inc mov repnz shr or xor dec xor mov fstp mov shrb das xchg mov sub inc ret shr rcl pop sub fbstp mov inc pop mov dec or das int cmp dec jns cmp data16 pop ret (bad) int3 mov shrl dec jns insb adc jg fwait sti bound push mov addb add sub aas add mov rcrb xchg mov dec enter push mov push push popf ret dec mov shr lds popf in aam js das pop jb orb sub jno xchg fcoms iret mov and iret lahf cmp or in test and daa fs jg lea xor loopne adc imul add fisttpl and mov mov add cmp out sub rolb or enter add lock mov sub insb test adc push or jmp add mov push jg packsswb mov scas mov push and das int cs xchg cmc pop fldenv or and ja push push xchg jbe or or lock repnz pusha cwtl jp aad daa xlat (bad) push pusha je jnp push mov push xor dec mov mov sub xor adc popa (bad) mov sub push sbbb mov push and inc adc scas frstor adc pop pop mov sub adc sub cmp hlt rolb lcall jne jmp test mov dec xor ret outsl pop mov fdivr test sub scas ja lods fildl dec pop repnz cmp xor pop push mov or push xchg outsl mov mov dec test jg inc cmpsb js shl sub mov xor cmp mov xor push xor imull jae imul xor and add inc in and in push loope lret jle pop (bad) loopne or lock push pop or dec mov popf cmp in fwait xor push pop mov (bad) push mov mov ret fnsave pop mov clc mov (bad) ja pop sarb pop sub je xchg adc mov or loopne pop mov mov push pop jmp add inc lods mov mov aam mov addr16 or je gs out xchg stc rcrl fdivrs lret add popf and bound ja scas lahf pop popf fsubl mov popf (bad) dec push cmc adc fldl or ret in stos sub or adc mov arpl push sbb int3 mov cmp cmp iret or (bad) mov test repz and rcrb xchg pop sub push popf test nop ds mov pop push xchg mov pop mulb xchg imul xor ljmp push mulb pop (bad) repnz loopne sub add jne push inc pop add jge sbb popf xchg or cld xchg xor mov (bad) xchg cmp fcmovnu push leave out xor mov out lahf inc dec cltd daa and sub jnp jmp movswl mov negl movsl lahf push xchg push jmp ljmp pop adc (bad) and xor leave pop sub push notb jmp fildl ja mov sbb add add sbb sub loope gs xor divps mov pusha hlt (bad) mov or add jae push jl jo mov mov xchg outsl std mov mov mov leave sub (bad) in inc repz rcrb push pusha das or sub xor mov out push and movsl bound xlat int add ret push lcall icebp iret cmpb inc jae inc mov cmp inc (bad) xor adc pusha push jnp dec testl add cmp xchg and push add sub mov inc js jp jb adc (bad) fist sub jbe cmpsl std or mull xchg pop ret into jge inc add dec xorl mov (bad) jge dec mov das push cmp test sbbl mov repz pushf xlat jmp push cmc negl pop pop les cmp lods outsb dec jge repz (bad) sbb mov int3 push pop mov sbb push lret pop (bad) ficompl call sahf pop jle adc add jecxz scas push mov (bad) inc pop xchg mov cltd lret xchg negl adc dec repnz test dec cld ficoml xchg loope addl test inc and sub icebp out jecxz jmp in push dec inc pop sahf sub aaa adc stc pop xor ret dec add push push popa inc or test ret add fbstp xorb repz sbb push push sar ljmp imul mov sti add mov ljmp cmp aad jo sub jg adc enter aam xor jmp out mov movsb add jmp int3 dec mov xchg mov or or push test mov sub add dec call xchg push sub xchg repnz mov fcomps jg mov pusha sub add pop addr16 xlat subb jmp jnp stos je lea popa lds aad in push or fbld out cmc nop xor push jp inc clc xchg adc fwait sub push xlat sbb pop jbe jb scas mov mov in push movsl cltd add and movaps in push js movsb rcr test sub xchg adc and adc adc and mov sub lods adc adc add out hlt add push mov es lahf push (bad) (bad) cmc dec iret cs cmpb xor cli out dec pop sub jmp jbe js xor sarb push dec adc dec das bnd mov ljmp sub (bad) push xchg xor clc jnp xlat pop sub fcomip push cltd rcl addr16 fst cmc mov dec ret push pop mov mov dec das adc dec scas mov sarl adc push das out push stos xchg jmp repz inc dec cmp (bad) (bad) dec ret push les cs pop push inc jmp mov mov xor (bad) add xchg bound lods (bad) xor imul roll js movl mov sbb int inc and lcall adc into enter popf cmc adc mov xor and fucomi (bad) mov or push lcall add add (bad) (bad) xor negb push mov xor neg add push push (bad) jno sbb push jmp and les xchg ds mov pop popa fwait popa inc add inc add pusha lods jmp cs aad push hlt xor or xor xchg pop les push add xchg bound (bad) sbb and or pop sbb or xchg ljmp mov mov test std jge add mov jmp sub test mov xchg cld mov jb dec adc mov popf fisttp jl push jb incb inc or call pusha mov repz dec add insb ja jp (bad) pop xchg test push aad pusha add adc imul bound scas add daa mov lods jge mov xchg or lods add push flds aad in scas adc jmp nop add pushf sub mov sub das mov jmp xor lea movsb pop xor jl xor push xor outsl out pop inc ret push push pop sub sbb cvtpi2ps xor xor in lret aas xchg jge sub pop and loopne jl pop enter mov mov sti scas and jnp inc inc push xor in xor sbb and mov cmp loopne adc and out xchg sub pop das stc (bad) out pop xchg roll mov test stos inc (bad) pusha and xor std test adc jnp data16 inc xor aaa sbb sub arpl mov js cmp dec aaa aam pop cmp xor cld and sub faddl mov or add pop jmp lock cs mov outsb cltd push das ret lret pop xor and popa push sbb loope mov push mov fcoms add aad cs stc popf imul dec inc cld aad loop xorb cmpsb add orl lock cmpsl gs mov mov mov popa dec rcll or or sub adcl ror and into jne loop pop push mov popf loope jnp sbb stos cltd jge mov or xchg xchg pop ds mov adc shl and mov cli mov cld add add push mov and push outsl mov cmp sbb jmp test (bad) sub push ret bound sbb je add ds sarb push jg or mov and cmp jecxz xor into sub repnz and mov jnp bound adc jecxz fisttpll movsl inc jle xor cmpsb sub ret lahf mov ljmp dec add iret jp push inc jmp addr16 mov xchg xor dec pop in adc adc jmp jmp cld out clc sub fs stos test (bad) stos pop push xchg add lret cld mov inc roll sub psadbw dec data16 jp push fwait add (bad) loopne jbe or mov mov and dec lods sub cli mov (bad) lods cmp jg sbb mov dec (bad) mov inc out mov sub mov sub xchg xor (bad) lret dec sub pop lods pop mov (bad) punpcklwd in xor push sarb daa xchg mov test stos mov orl xchg stc pop push (bad) in sbb std aaa shrb mov cwtl mov mov fdivs inc cmp adc mov xor (bad) fmull mov push ret dec sahf mov ds push and hlt pop push in jmp and nop lret add pop sub call lcall fmuls aas clc sub rorb mov and lock or stos mov clc push push sar enter outsl push cld out mov mov push adc mov movl negb ret and xchg daa js test in add mov push xor adc add clc push enter push rcrb add xor push and mov push pop in jmp cmp dec dec mov (bad) incb push pop cltd cmc clc inc cmp stc pop or and push push (bad) mov or dec lahf ret or add sbb push clc out pop lret sbb push jns sub xchg divb lret mov xor ja enter or cmp shrb pusha pop mov xor lock popf inc call pop cs mov adc mov and out mov lods popa in xor lea adc insl imul std cmpsb and inc icebp mov insl xor and pop inc cmp mov xchg push test call xchg mov lahf push push dec and aaa dec in dec loope sub xor pop xchg jmp mov mov sub lcall push (bad) iret pop mov xor icebp or xchg sbb jg enter movsb inc pushf mov gs sub (bad) xor inc cmpsl popf pop shlb add jae cwtl rcrl mov dec cmp pop rorl dec dec xor dec (bad) (bad) jo add orl lahf inc in xor jmp cwtl pop fdivs push cmp push int mov xor bswap popf add ret movsl inc and xor sbb xchg push cmp mov cli enter cwtl inc in mov cmp dec sub jo ja push jge jg push nop imul dec dec pop add xor push and out sbb add cli test cli mov mov dec jecxz scas mov jne subl movsb mov les and movsl pop mov push pop dec cld mov pop sbb fwait xorb sbb sub or push pop mov imul shll daa rolb movsl jae xchg or popf mov in cmp dec adc lods lock and call adc dec loop dec les (bad) jne push fxch (bad) div push xlat cmpsb flds inc xchg sbb xlat xlat in or test jecxz mov shr dec aas cwtl daa clc mull mov repz stos test pop popf dec pop test in or fildl aad dec insb mov add xchg dec notl inc fwait cmp and aad push or lret addr16 std adc roll or pop icebp iret repz jecxz push repz ret push or pop scas xor in and cld and out sub xchg popa or cwtl (bad) or dec mov dec stos out jg push ss mov pop lret enter cmc jnp mov sub test dec jno mov mov imul cli push sbb and cmp sub sub lahf adc daa push push lcall jbe dec push pop push leave stc lods or bnd xor loope and xchg add aam decb (bad) pop (bad) dec scas cmc test add pop add sahf in popa jmp pop inc dec and mov dec cmc daa inc (bad) dec (bad) clc call je inc into loopne lods add mov dec subl int3 aaa add and add cmp sub push in sub pop cmp add xchg pusha mov and in stos rol pushw pop popf fnstsw dec mov mov (bad) and dec adc push sub push addr16 mov nop push outsl je in or mov jmp icebp xchg pop push stos das push xorl push mov sbb ds js add pop adc (bad) rcl cli sub add adc cli xor push and inc in sahf dec push pop and jbe out call push arpl inc and pusha sbb negb xor sbb inc daa cmc adc cld addr16 subb popa or dec xor push adc fstpl jp (bad) bnd jmp xor lods cltd add and shlb sbb daa inc and (bad) fcmovnu mov inc adc adc xor and dec sub and add nop xchg or aas mov push or pop das add outsl sub push fsub sub jo xchg roll lock cmp mov das sub mov clc int test mov add jle push pop or jno lea sahf push (bad) and xchg ja xor mov pop (bad) adc aad js call pop or int rorl stc int push mov imull notl mov pop mov scas int3 std pusha mov push jmp pushf movsb mov mov notb scas out mov mov adc stos popa add sbb mov lahf adc push repz push rorb jbe repnz and daa pop ret mov adc xchg daa loopne or push xchg popa test lods mov je and aas imul jnp or in pop lcall inc lcall push push cmp aaa into inc daa sub inc es fnstsw xor repz ljmp push or call dec pop cld xor enter pop pop add es push aaa pop sub fwait push or add pop mov push xchg testb sbbw dec adc xchg mov ret ret pop sti jae push fdivs int3 orl dec outsl sub pushf or lock sbb adc insl fiadd scas sub mov stc push lods out add scas dec add cmc scas cwtl xchg sbb (bad) (bad) mov test pop adcb mov mov stc das xlat xor push inc add popf nop sbb pop (bad) and hlt mov dec dec mov add bound pop jmp mov inc inc ljmp push out sub pop xchg icebp xchg inc dec mov jge rcll cmpsb dec mov sub data16 jbe and repnz inc cmp rcll les mov enter and out push mov xchg adc dec jnp sub iret jmp adc jne jp enter fildll imul sbb aas inc daa adc xchg shrl icebp and call in fbstp sarb popf pop aad inc add jmp mov push mov sbb das sub push pop sbb and xchg jb daa call push in cld add mov push shrb loopne mov push mov pop pushf daa xor lea pushf shrb daa push jle xchg (bad) movsl bound test (bad) xchg pop mov out das pop int add stos inc adc inc sbb inc in xor jmp and sub jmp (bad) push dec xor cs jmp xchg pop jmp arpl or pop push jo pop add mov or or dec push xor out imul das mov shrl inc loopne push outsb pop add cltd and jge fbld xchg and pop adc fcmove and sbb loopne mull mov test adc mov pop dec push cwtl sub ret loope insb daa and and push mov add shr push add pop mov dec jge pop dec les pushf call ret inc divl or cmpsb dec mov or fldt cld data16 cmp inc scas cli push jle mov inc ret pop push add inc push bound adc push adc jmp pop out cmp dec cmp lods sbb jno and mov push cltd daa ret sbb call push leave fwait iret push add cmpsb scas adc cs push fs (bad) adc jmp jge std stos push sub ficompl and cmp cli in add mov sub xchg and adc add and lcall push mov (bad) mov jne jo jb (bad) das xchg lret inc mov dec aam loopne push adc inc push mov cmp jmp call (bad) repnz add push cmp out in cmc adc aas add lret std sbb mov in inc in mov add (bad) jmp sahf dec push dec ljmp xchg bound lahf loop and cwtl push and mov insb xor mov in sub ljmp cwtl adc dec and mov mov (bad) pop (bad) pop bound cmpsb loopne mov je pop add pop and rcrl aad or mov and (bad) sub mov sbb lods in xchg fistl imul in movsl mov dec add daa push jl test xchg cld pop loope outsl add cmpsl pushf push (bad) mov jne push mov lahf ret add or cmp jmp mov scas dec retw mov es (bad) mov in (bad) sub decb or lret ja mov repz mov adc fcomps push mov jbe in and lahf cld add mov and xchg mov jmp pop push ret ja int cmp jnp add out out nop gs pop cli int3 ja (bad) jmp mov bound ds jg hlt aad ljmp out jae leave sbb dec loopne dec add sub pop pop dec call insb lods das or jg mov leave int in push or dec and cmp daa iret push add cs jmp mov jge xor sarl jle fs mov mov push pop push push and or daa int3 pop mov negb addb and rcl andl fstl mov or notl insl call push je cvtps2pd lods fist sub mov push adc jo mov adc insb jae sbb dec add mov jecxz sbb add (bad) adc clc sub mov (bad) dec js push mov and fisub shr adc notb add repnz add jecxz mov push (bad) xor test mov ja jns,pn push jg repz lods or fild fwait sub xchg mov lods rcll dec rclb cmp popa and adc add add call sub mov cwtl sti jmp loop adc xor or (bad) lahf push push adcb inc lods adc jl jb cwtl gs or addr16 rcrl jl shrb xor jg mov das pop adc in or jl mov mov push incb adc loope cld sub in cli inc pop fadds or xor adc pop lret test pop mov andb jecxz (bad) add test notb cltd or mov jae movsl cmp jg insl fstpl (bad) mov imul pop mov or loope es xchg push sub out jg jns addr16 std inc jnp (bad) cmpb mov and jl rcrb xchg (bad) mov jmp mov movb shl loop fisttpll into lds pop push ds loope inc inc (bad) sbb enter int lcall dec dec out sub ljmp and test inc lret imul sub pushf cwtl push add and rolb or movb xor mov xlat jmp sarl sti cmc jnp loop cmp inc popf iret or test cmp jle call push mov cmp sbb and ja mov out decl aam mov jbe cmp mov cltd add or mov inc mov sbb sbb fwait out scas mov movsl icebp fdivs orb ljmp xor pop mov cmpl adc sub dec push push out mov dec les cs xchg rclb not jnp daa jmp scas mov mov aad out (bad) jb push clc clc mov pop jmp pop mov add mov cmp sub lret or repz mov or adc cmc cmp aaa (bad) dec fldl ja outsb arpl or push ljmp call adc fstpl nop pop jmp ds mov das bts aam dec cmc in add mov stos pop jbe subb adc addr16 pop sarl mov mov pop push mov lret lret mov outsl or bound add (bad) lock lea cltd adc bound std jno scas xlat or popf xchg mov or and sahf (bad) and jmp (bad) xchg inc pop ret movsb mov sbb mov hlt adc inc aad xchg (bad) ljmp pop adc int outsb fst les cmc cli mov add xor jnp mov xchg jmp mov pop mov scas mov cmp fcoms sbb loope mov xlat rol xchg je pop dec in pop cmp adc jmp mov roll sub icebp shr cli dec dec cmc lcall push mov mov pop xor jmp inc (bad) mov jb mov sub push ljmp push insl inc pop (bad) cli cmp out std test or sbb pop rcl negl rclb inc pop xchg sub pusha mov (bad) bound test mov sbbl or pushf bsr out dec roll and xor shl inc pop arpl jl,pt call add mov push xchg xchg pop fstpl clc jp dec test mov fdivr mov pop push add hlt bound and add pop (bad) rolb or mov hlt jb lock mov add add xor pop jmp add sti push or dec shll sbb mov fldcw cli mov xchg mov push and popf jl test add or push jns ret inc add cmp into push xchg cmpsl sti or pop lcall repnz pop sbb mov xor adc mov add out nop icebp jmp test loop push imul ficoml add mov cmc cltd dec sbb and rclb push scas movsb fidivrl pusha ret jg sbb add add jb pop fcoms nop out xlat scas cmp test push lcall (bad) inc mov das loop,pn mov fcmovnb mov sub jns mov pusha sahf (bad) dec repnz dec pop adc stos pop loopne into inc mov add inc and cmp testl jmp xchg (bad) pop mov pmulhuw (bad) bound push fabs mov cmc fs xor sub xchg loop hlt pop mov mov paddw dec mov lds pop arpl inc push (bad) sbb jg popa jb mov xor inc pop adc ss xchg and dec jle jae dec dec jg xor sbb jb daa jne adc or shrb cmp mov jecxz cltd sub test sahf ds push jmp adc pop xchg lods lock sub dec test int mov mov xor dec ja nop adc inc les rcrl clc nop fildl mov add das mov xor jl jmp jae mov inc inc dec inc or divb xor sti cli pop and fsubr and decl xor divb fdivs fstps leave jge repnz into int das mov ret jmp push adc xor or sub (bad) test pop mov xlat (bad) xlat push sti mov or add ficomp dec dec xor cmp xor pusha cmp ja mov xor mov lahf or sahf aad dec subl add mov neg mov adc (bad) outsl xor out test lods and jle lret xchg jne sbb loopne dec pop (bad) or push dec mov push mov xchg fldl (bad) ja push push xlat addb sti inc (bad) js jp mov gs xor jmp in add scas in (bad) rcrl mov jo jg cmp out daa lods and pop sbb lds xor pop xor push (bad) pop js adc mov leave pop fs lods xorl push cmp adc repnz add cli enter add sbb mov pop not push mov jmp mov dec mov sub or test loopne sub sub or mov lret (bad) sbb dec jmp pop lret jae sbbb ds jl dec cmp lret mov pop js cltd cltd add mov lock mov push xchg jo sbb daa js rolb xor in jmp dec cmc adc jl sbb popf or cs je dec ja cs pop push mov fidivr jb inc jle in loope and xor add (bad) dec addl outsb dec cmp pop nop sbb test mov cs add test arpl adc loop pop jmp ds adc xor add xor adc out add outsb clc mov push adc negl jle adc dec repz mov cmpsb dec loop sbb xchg std adc push push pop pop enter daa (bad) add inc xchg aad (bad) mov inc dec addr16 lods lea (bad) or hlt mov pop pushf (bad) jmp cmp imul mov jmp shr and cwtl hlt and adc jmp fnstenv cwtl inc rclb mov mov imul jmp sbb nop cmp repnz inc inc cmp gs push or out jge cmp arpl xlat add pop test cmp loop or push xchg in xor shll cli icebp pop mov ljmp subb xchg negl bound loope test in cmp mov cmp stc inc lahf or pop xchg add xor jns and mov rcrb jne mov es ret xor rcrl outsb test add ljmp add fiaddl ss cmovle push adc dec add out cpuid mov repz leave loop sbb inc xor jnp imul (bad) fwait cld cltd (bad) pop imul leave mov add and push mov mov adc out pop push cmp push loopne cmpsl jne xor mov lock or pop push mov jp orl dec mov or adc lahf push cltd cmp inc and mov fstpt jb (bad) xor jns cmpsl pop nop rcr mov and in or popa pop shl jo repz jmp xlat dec scas ret fstl or insb mov repz add ljmp flds gs adc ret pop repnz iret in aas scas mov pop adc in ljmp popf inc sub (bad) push jmp and pop shr loope int shl cmpxchg nop xchg mov dec add inc (bad) fistp add sub test mov pop mov nop sub push add mov inc in pop dec mov lcall pop shl jg or mov outsb pop add and addr16 sbb (bad) jno inc push in xchg dec add roll dec pop inc sbb pop jecxz lret bound pusha push sub jb dec xchg xor or push pusha push push fwait lret jg xor pop sub mov arpl jecxz lods stos xor ret lahf mov movsb insb out cmp and pop mov xor or repz ds out and mov sub mov (bad) mov cli bound int3 mov clc fst divb popa into add (bad) scas gs cmp push mov lea sbb jmp lods lcall pop push adc lods sub in loope rcl push (bad) loope ds rcrl subb pusha aas sub daa pushl fdivs dec xlat mov and das or sub cmp lret aam ja iret inc and sbb pusha lret add lcall (bad) dec push xlat lea dec mov push sub (bad) pushf in lahf push sub dec mov in push jecxz push add inc pop sub inc pop cmp pop jg inc loope sub icebp jnp or or xchg mov sbb inc out jmp mov imul lahf push inc lods dec pop mov push stc sbb mov push push add test cmp jbe push jne pop je fs add jl mov fidiv push cmp pop adc pop rep xor imul neg subl dec dec push pop pop pop push dec pop in popa jle pop (bad) cs xor loopne imul sbb cli dec pop push add xlat mov ljmp xor mov je jmp outsb in pop xchg mov lods push and mov scas dec mov adc and in cmpb pop ljmp cwtl outsb dec das mov (bad) xchg mov in adc inc mov jne arpl mov js cmc jg adcl popf stos cs in push jmp stos cmp jae aam cmp jmp add fmuls leave sub or rorb ret dec and aas pop mov mov out ds (bad) mov or sbb pop mov cwtl push sub pop push mov adc add ja pop pusha and arpl testl ret adc stos pop push insl addr16 pop pop and rolb add xchg push popf push jbe jmp test mov and repnz lahf das pop xor adc dec notl jb dec loopne in pop and pop enter adc pop pop addb lds mov leave fist (bad) ret test rcl cmp cmpb inc fwait mov push cld mov cld fmuls inc (bad) repnz lret mov and sarl cmp inc lods scas rcrl fwait cmp test test lods xor sbb inc rcll lock jns repz hlt cmp adc mov sub fmul jge and and mov nop (bad) lds inc mov add or imul into mov lahf sub sub notl (bad) mov fwait or inc jmp pop jg cmp push mov mov xor or sub dec dec xchg cs inc neg xlat mov pop pop in push sub pop icebp ljmp mov ja sub cmp test test push mov cld pop or or xchg lahf pop lret xchg sti jne outsl cld cld sub push in pop mov dec xchg addl pop stos sub mov or lods add (bad) xchg movsb sub roll pop mov mov push repz mov push or (bad) or lock mov sub dec xor push pop and loopne mov sbb sahf pop mov dec jmp aas xlat push pop add sub mov adc (bad) add inc jb mov lea outsl in pop jle mov push mov arpl loop mov jns adc and out sbb sub jmp inc fildll mov dec push xor fcomps addr16 sub aas push ret mov outsl mov stos xchg inc cmp adc pushw mov (bad) adc into sub lret bound xlat mov cld and aam or add mov ss clc xchg fsubr dec fidivr rclb cs mov add jmp clc xchg mov leave (bad) repz or mov or gs xor cmp loope or andl pop lds and fidiv inc pusha sbb pop loop mov mov or mov (bad) fimull or outsb jl jnp sti cmp add addr16 test xor mov sti mov dec mov rorb xor fstpl mov (bad) popa push outsb orb and and dec scas adc add movsb das sub inc dec or out das orb outsb cmp out sbb stc sub add int3 test cmc add (bad) mov les out cld cmp jnp push in xor andl xchg enter push push push mov aaa add sbb loope (bad) mov in jp jmp fdivp xchg pop xchg xchg hlt pop push mov push xchg pop test dec mov adc nop inc cmp mov add call and inc mov scas cmc inc adc pop lods mov mov push push lcall fwait je int3 xchg or ja cmpsl insb movsb std xchg pop cmp cld aam ss test lods mov mov adc push mov push imul fxch loopne not adc not or sbb ret pop mov dec xor mov ds pinsrw sti add call loopne out jmp and (bad) pop and aaa adc xchg pop pop iret data16 pcmpgtw movl mov cmpsl rorb jmp testl in lock add jbe icebp jmp outsb mov add and jo roll xchg popa pop aam inc adcl mov pop xchg mov adc xchg xchg (bad) es mov dec inc add lods push or lret pop clc inc addl pushf inc mov and xor sbb sbb clc lds sub add cwtl scas push pop xchg (bad) cmp fptan adc dec stos or or xchg lret sub pop inc sub scas fcmovbe push push jmp dec std mov test dec pop ret push mov (bad) mov pop pop push dec repz cmpb out bnd xor cs pop push loopne (bad) cmpsl cmp call jge jne das in (bad) pusha lds and jl sub pop popf (bad) fs mov add js rorb mov push ljmp leave shr sub jmp mulb (bad) aad add test adc adc shlb mov lret roll iret cmp xor mov and imulb pop xlat (bad) pusha mov push add mov sub (bad) mov daa not shlb imul loopne pop dec out and pop in and dec rcll daa pop xor std push cmp (bad) fisub or mov pop jmp enter ffree dec repnz mov inc cmp mov push jbe xor add cmp pop rolb pop add test pop xor inc adc mov jmp cmpsl aad (bad) or mov mov popa test imul popa dec cmpsb xor push cltd and xchg cli inc mov sti jecxz jmp inc jg pop cmp xor arpl pop inc cmp inc ficompl sbbb int outsl ds cltd stos ret cmpsl lret popa or add mov sbb dec or ja or out xchg push outsl daa jmp imul rolb sbbb pop stc push pop shl xor push push jge jmp inc and repnz adc inc xor add xor icebp into inc cmp add adc aam scas pop std (bad) in mov mov jmp dec or sub (bad) mov push stc push inc adc test pusha cmc jns mov das fst fmuls push push add loop ror dec add ds sub rcll aad mov push jns in xchg push sub lods dec cmpsb cmpsb xchg dec xor shrl cmc out cld scas inc adc mov jbe push mov outsl and and cmpsl daa imul mov lea mov jecxz cmp je mov inc lret pop pop mov push (bad) lcall sub add aaa or out js or es sub scas sbb inc or clc in mov lods orb cmp xor pop sbb push mov repz jp (bad) es cmpsl xchg jmp das mov std lods jmp sbb cld jo mov sbb (bad) add and sub or push mov pop sti (bad) out popa std and std repz leave fimul push jge dec and in in jmp sar repz add add cmp (bad) xor xchg jno dec xchg xlat mov xchg cmpsl pop repz cmp mov push icebp iret add les jg ja sbb sbb fmul (bad) xor push imul sbb mov cli (bad) xor out or add jecxz jne int test or sub jle push sbb scas push add or pop ds ljmp ja dec pusha xor xchg pop add (bad) sbb cs fsubrp add rorb dec push adc lods mov xor loopne xor mov cmp fildl popa cmpsl dec ja negl (bad) pop lret and pop or rorl aas div dec jle,pt popa inc leave xor mov mov mov (bad) fs shrb in jmp aas mov add (bad) lahf popa imul jle xchg cmp test xor pop pusha sub push mov jle dec adc arpl ret enter in xor pop mov lahf mov mov xchg lock jle dec cmp xchg ja add into inc pop sbb leave pop inc push pop add bound push pop ret pop mov fnsave sub das faddl cmpsl jg fistpll cmp and orw enter cli sub stc jmp xor scas adc jle push (bad) sub movsl xchg pop stos out inc adc iret imul jl cmp nop dec lds lea inc pop pop cld ja test fwait jbe (bad) icebp jle xor adc out jae dec add cmp cmc movsl pushf inc xchg cli mov and mov ret pop pop xchg push mov outsb sub data16 dec inc mov and dec pusha rorl inc fisttp dec and pop daa int aam fs stos test mov add pushf pop mov fs cmp and dec or (bad) cmp call mov adc push push mov pop add stos in cld pop lock fchs loope push xchg fwait cmp jmp pusha out pop dec in ds dec (bad) out sbb cmp inc scas (bad) clc dec pushf jnp cs stos push dec jp mov jae mov and or out push scas adc movsl ds dec jo inc push mov jecxz lahf dec sbb and jmp ja aam cld mov pop sub sbb and cmc adc or repnz xchg sub or dec push stc and mov inc (bad) mov jmp mov aam popf fidivl xor (bad) in xchg lret inc pop lahf lcall gs sub push cmp (bad) insl stos mov lea (bad) pusha insl out adc add xor pop add shlb pop cld push inc in cmp dec popa xchg dec into lds mov aas popf mov cmp add (bad) dec dec adc scas inc sbbb das shr inc addb xor mov sub jecxz cmpsb mov add xor lods inc dec lods push push pusha push jmp ljmp sub std push push mov mov adc outsl outsl xor out sub xchg cld sub aam jne int3 or std fiadd scas movsb push fistpl xchg (bad) mov mov and cmp add rcll ret call das add jmp sub jae and call adc mov xor jle mov jp outsb sub pop or ficompl add fsubrs push jae adc xchg mov fdivs ds sbbl jno xchg mov add sahf pop xor rcll hlt pop xchg dec in mov adc lret icebp sub pop cmpsb insl sbb ret push fnstenv push lock test in mov xchg push jl jmp mov sbb outsl dec sbb jmp into ja ljmp imul shrl cltd jnp loop jmp xchg clc repnz pop clc cmp and add jbe pop jmp in rolb add stc add sbb jmp inc mov lret cmpsb adc rorl test out stos notl push cmp fisttp dec jge pop (bad) fbstp sbb xor rcrl (bad) push rorb mov lods mov and popa adc lods dec lock call sbb outsl into add outsb sbb push sbb jne mov fsubrs add js pop jmp jo xor nop jns jns stc mov pop cs mov (bad) sub xlat add add test (bad) jge push dec push (bad) mov bound mov or lock push pop push das add repz (bad) or in cwtl popf or jo adc jbe pop push dec push out mov (bad) leave (bad) pop jo inc sarb loop cld inc loope and mov and dec mov cld add pop pop mov xor push mov and loop xor sub scas in call dec lods sub cmpsl add aas divl or mov cli js xchg (bad) movsl fcoms setno push xchg mov sbb pop nop out adc sub push pusha lret adc jmp jg addr16 or rolb or mov cli jmp pop pushl pop ja (bad) xlat pop scas shrl cmc mov or outsb jecxz pop mov inc xor xor out ret push ljmp es jmp dec mov push mov sub pusha cmp push inc jecxz nop ss imul push in push cmp pop pop fwait mov test dec mov mov add (bad) jb mov or fadds shr jmp sub inc inc inc cmp popf mov push or push es ds pop push inc jnp mov dec ljmp xor sbb add in sub pop push push jmp outsl add sub xchg lods xchg or cs jbe test dec (bad) (bad) sub lds cmp cmc jns hlt iret dec popl leave or inc sub cmp repz jmp jl mov shr dec insl cltd dec stos ret aad test push shll sbbb lcall dec in jge mov dec add hlt movsl xchg add mov adc push xchg or mov nop add cmpsb jg inc lahf cld inc iret mov adc test pop out mov imul dec mov push bound divb pop pop inc pop sbb xor aam inc popf push movsb ret add xor not addr16 lods lret call addr16 sarl add lds adc cltd test inc sub bnd shrl mov jne xor add push cli test out (bad) jb mov pusha (bad) ja mov icebp mov ret (bad) int3 jmp xchg inc (bad) fadd roll and int3 jmp lods cli cmp dec sub loop adc dec adc push xchg pop ret js shrb pop jmp push cmp out mov rcll lret sti (bad) adc inc (bad) jne nop decb fnsave sub in rolb adc pop mov repnz sub rol sbb push fwait add and pop jbe repnz and adc pop xor jle into jbe sub out leave xchg pop les sub pop das jbe scas scas cmpsl std mov popf (bad) jl lods pop test std dec mov xchg mov loope lods and xor fstpl pop pop test inc roll jmp (bad) sub xor rcrb out repz xlat dec push push xchg sbb adc push mov into cld push aaa nop lea (bad) jp mov add mov push jg int3 or loope clc repz pop fildll push push add and or fsts adc pushf aas cmc dec pop jge fsts mov notb fdivr int3 adc add pop pop les cltd xor es shrl clc ds pop daa mov rcrl cwtl lcall out or jo in jmp adc jecxz xchg clc lock and push mov popa lahf jmp add fnstsw shr add sbb cmp loop outsb movsl adcl call mov lcall add inc pop cmpsl mov inc aas in push or mov push and pop out xchg mov sbb xor das jmp mov outsl add repz jecxz mov (bad) pop add add out push push inc and dec shll scas test push jnp scas dec push dec sbb pop fisttpl frstor aaa dec mov stos pushf and mov bound sbb mov cmp shld inc dec add pop xor test in std push ja sti push ja push or dec add push pop cmp pop add sub leave pusha push addb ficomp mov loopne jg mov jb or inc add xor mov mov dec xlat fild (bad) jecxz out xlat lock loope stos push pop inc stos push dec pop xor popa adc inc outsl pop movsb sub movsb add lahf cli mov or push lret mov sbb loopne movsl add out pop jmp xchg sbb jo mov ljmp lods lret sub or xchg (bad) scas mov pop pop std bound pop dec inc xchg bound jge mov xchg stc daa cli icebp and outsb (bad) insb sbb or mov or notb adc pop sbb pushf (bad) idivb sub cmpsl das sub and test movsl inc xchg inc jp xor jge scas add call add add pop hlt (bad) outsb out cmpl fdivrs add inc jmp inc sub test xor jmp movsl inc data16 xor cwtl push or or xor jl add getsec cltd or jnp fimul das cli adc cmp pop and nop mov (bad) (bad) fild (bad) pop mov imul push or pop mov dec out sbb inc jmp pusha (bad) mov push dec lods push push add mov sbb jle jno sahf jmp mov lret add dec jl add in insb int3 aaa std clc push or add push push mov mov jno out adc add subl iret mov add cli dec movsl pop xor call mov out push outsl call fstpt add dec out jae dec jmp jbe inc sahf mov fist ja adc sahf jns xchg xor scas cmp mov cmp jmp lods enter lcall imul jl pop inc push loop jle inc jmp dec inc test sahf mov int3 xchg pop dec stos test les in shl sbb repz dec mov adc cmc mov mov repz clc jmp pop jmp mov add cmp add insl daa sub lret and lds jmp pop rcrb push or push and mov es faddl adc adc in xor or and xchg adc mov adc ljmp push dec fpatan push adc pop (bad) adc pop push jge imul jg pop and shrl add stos ds add cmc pop add xor pop xchg mov pop aam enterw iret cwtl daa xchg (bad) xor fimull es inc mov out fwait cli cmpb (bad) shrb rcrl sub out lret notb cmp cmp mov pop out pusha movsl adc scas add or bound rorb cwtl push push mov adc je inc mov sbb or adc cmc ss push lds xor push pop dec jl push stc cmpsl decl popa cwtl cmp scas mov xchg dec mov dec inc ss aad (bad) jmp jae popa cmp test int or in cwtl or sub fldenv mov idivl lds repnz adc push mov (bad) push mov imul arpl push mov mov dec mov push cmp bound ljmp mulb mov and xchg pop jne hlt push dec mov pop jge inc lcall out aam stos shrl xchg mov insl das jmp fild js push or ja lahf jmp (bad) ret pop aas pop push (bad) mov add fcoms mov adc dec xchg inc decb clc pop fisttpll sbb lods inc lmsw xor add mov bound adc pop xor (bad) adc call ret mov mov lahf ret jns push jge cmpsl jno xchg mov or cmp xor das enter pop sub sub push ret pop pop fstps dec enter lahf loope cmp pop out pushf cwtl lahf pop inc jle adc es sub push imul or sub xchg pop ljmp cwtl lret push mov call rcrb jne add (bad) jmp push loope aas sub jmp gs xor dec mov sbb ud2 xchg add push call jg,pn daa inc inc sub or mov pop sbb js add xchg sub outsb pushl fsubr push add bound pop rolb cmp in iret pop das and mov push add jge pushf push sti inc cmpsb jmp jl push negb popf insl sub add pop sbbl scas inc sub push lahf push or ret push arpl icebp pop test sub or mov cmpsl add mov adc ret daa jne and fwait mov push add mov sub loopne cmp add mov add cltd fldt adc sub xchg push cmpb xor test jl rcr cmc add sub (bad) jnp jp ja jle sbb fidivl and mov add jl inc cmp inc mov (bad) and sub pop sub dec (bad) js mov dec adc cmp mov mov lock dec movsb dec cmp pop sbb pop imul and dec sbb aam push pop ljmp or lds lret sbb cmp iret les pop aad pop roll std (bad) mov jp and and ret sbb inc sub loope inc adcl subl and ljmp pop xchg arpl loope mov sbb sti or scas cmp push dec int xor aaa jne inc mov push subl test (bad) sar outsb dec mov xor mov nop imul inc mov push push jmp jge adc aad cmp and sti test dec out add (bad) mov jne popa (bad) notl mov inc lahf out mov or sub inc jmp in hlt sbb aam scas fild sub mov jbe lret jg (bad) adc jae fmull xor ljmp jbe add xchg cmc lret push fisubl js mov sbb loopne dec add dec insb xor (bad) and or fisubl push mov inc pop jno data16 pop mov cltd or (bad) out loop inc pop stc loopne push add stos enter mov lock mov bound push addr16 or jb inc and icebp xlat out dec sti inc aas or xchg push mov pusha into test or push xchg fild shlb cmc stc push mov sarl adc je cmp fadd cltd ret nop pop push rorb imul push cmp aam push mov mov sbb call jns sub jle add stos mov nop in stc sub sub shrl add pop mov fs incb xlat inc mov jbe push and xchg and shrl and push ficompl mov add and add rol and add sar ljmp fcmovnu dec mov scas mov cmp ds and jmp ds stc subl mov and icebp push push icebp sbb test cmp cmp dec add out hlt sub pop shlb scas cmp add ret and mov das mov mov jne xchg push rclb neg sub into jmp push aaa xchg pusha std ds push sub sub push rsqrtps das dec mov adc and mov jmp xchg iret xchg push inc push push and push mov jns add in ljmp test sub cmp nop xchg test mov setp popa negb add (bad) cmp (bad) stc iret nop mov mov pop xchg hlt dec movsl stos bound in cmpsl sub hlt pop out mov out pop daa pop fdivrs pop push and add push aas sub enter pusha incb test xchg mov or mov mov ljmp adc push inc shr dec fwait pusha pop shrl jmp dec jns je pop sub add pop add inc add pop sbb cltd repz inc and and jp ficom in das xor in daa push jnp mov mull cmp repnz shr xor jo push std sbb mov pop imulb and mov jle outsl outsl push or and pusha sarb call push das sbb xchg test dec cmp cmpl add push lods jecxz adc dec (bad) popf dec pop inc sub jmp mov cmpl jne sub sub int mov loope add jecxz leave adc insl daa adc and punpcklbw mov outsb insl call test mov dec loop xchg or adc xor ja xor sbb ds int and xchg cli mov sbb pop inc inc cli lret push add and out mov lock aam add jb jnp in sub add test sub dec jne sbb enter sub dec inc mov pop inc aas jmp pop int xchg and sbb mov flds les xchg shr (bad) lahf dec (bad) movsl jmp mov push mov xor neg push (bad) fistpl rcll push push hlt mov mov movaps iret add test popl stc cmp clc add mov ljmp jle dec repnz lret pop mov jg dec and fcmovnb stos repz cmp add cmp sub movsl xor add push adc je lret cli cld push mov mov or xchg test das movsb nop dec insb scas leave (bad) hlt iret mov mov cwtl (bad) jle rolb sahf dec adc jl push push ds mov xchg (bad) push shll (bad) xchg mov out inc loope mov add push xor ret mov pop adc outsb cmp inc add rolb aam dec pusha test mov cmp rolb add mov not xlat clc loop pop clc pop add jmp push adc add arpl cmpl add push fldl jmp inc cmpsb sbb ss xchg push in daa pop pop and jmp std aas or pop fimul std inc cmp iret and mov pop jo hlt mov out enter sbb mov mov sbb out int lcall mov inc xor hlt pop xchg mov leave cmp push incb or pushf dec dec int3 imul inc jne inc mov hlt ret dec (bad) jge clc adc and xchg fisubrl sub pop in xchg add (bad) icebp ret test xchg mov ret js mov call pop sub (bad) sti aas cmp fwait fs orl mov addr16 cmp cmp mov in and adc jl dec sbb adcb cmp push push les (bad) mov dec jl mov ret enter xlat mov mov mov mov lock sub and lcall mov enter pop sub mov push dec loope sub lds leave gs cs xchg rorl flds pop or cmc in xchg cmp sub cmp (bad) jno or (bad) fmuls push pushf lcall fnop inc mov popf jne addb jmp test push mov (bad) in push jmp pop lock lcall add addr16 or daa xor pop cltd mov aad adc inc in pushf inc xor adcl cmpsl outsl or adc repz loope jp push incl stos xor mov jne pop pop push mov jmp and (bad) inc mov sub (bad) ret je or adc jnp pushf out fbld (bad) imul movsl add xor xchg or cmp repz jmp mov and dec subl fild cmp sub mov push mov add add adc add lret or or ret ret cld sub jns shl pop stc mov inc push icebp movsb fldt icebp les cld or stos cwtl lds fdivrl cmp in mov sbb push inc cmp addb loope and ja ja mov (bad) push imul pop adc ss cmp push mov or imul or inc fcomp or xor inc inc pop (bad) mov imul call testl repnz mov sbb sub stc fisub cwtl jmp outsb and and ss dec mov pop push std repz add and leave lcall sbb sub pop inc jmp mov sub jecxz jmp pop mov push cmpw mov push (bad) xor sti inc (bad) mov push lahf push aaa sbb pop lcall mov repz fcmovnb or and mov or fimull sub push mov sub lahf cld mov push dec incl cmp stc aaa adc adc and incl nop repnz dec mov (bad) mov jp and dec mov imul ret lea add push pop ret aad cs outsl loop test pop lock sbb dec push test jae jmp mov pop adc adc mov not shl push inc mov loop arpl push js rcrl dec cwtl das cmc xor cmc mov adc xor mov lock mov popf ret das mov in push pusha and pop mov pop dec add push add inc (bad) push ja out push insl dec mov out dec pop fisubrl or mov cmpsl dec push movsl or pop xor push cli add inc jmp sub inc fnstenv mov movsl xor sub dec daa and ljmp fwait lahf addb pop jmp aaa and inc icebp xlat mov xor push add pop pop jmp ffree dec adc mov mov decl dec push lock cmp movsb in aam inc adc add ljmp pop mov aam xchg movsl sahf cmp hlt movsl jmp fnsave es loopne push or ficom ljmp (bad) pop adc rclb sub xchg cmc repz daa adc arpl pop out nop mov add add jmp stos pushf xchg andl nop fimull popl jp hlt push push push (bad) mov lock xchg cwtl push or pop data16 bound test sbb addr16 xchg outsl call mov push add add dec jmp mov jg imul popf test into pop scas cmc int3 (bad) pop sbb test add or lret enter mov xchg scas loope in ds pop imul ja push cmp fs jle jne das in jle or pop adc pop push jg and imul lods cld test mov and jne orb cs repnz jle dec fstl insb mov pop cmp cli fs add es push jo aam jle or xor sbb (bad) shrl arpl add repnz and mov xor int (bad) adc jg jle dec popa sub fs pop movsb stos adc and sub add jb clc lret push adc mov sbb jb push enter lock jmp mov ja dec sub and mov repnz fucomi pop nop jle rep adc ret int3 push (bad) mov scas mov add or sbb and or ret or pop sub jmp ljmpw sarb pop push add sub pop lock mov mov xor jge iret xchg rcll jecxz mov stos pop pop push inc inc cltd pop shr adcb js scas or inc add push mov jns cvtdq2ps lcall mov inc mov fdivr inc pushf xchg dec pop sub mov sti cs stc stos jg cmp call cmp pop lods mov pop mov (bad) in pop jecxz push lods add dec jnp push lcall adcl mov or mov mov xchg outsb inc add je pop or add repz out imul sub daa ljmp aas pop inc xchg fimul mov ret fsubl arpl mov jg lods and fsubs fdivr jmp (bad) add dec lds inc ljmp adcb pop dec sub push sub pop pop mov ds fildll fnsave jbe test jo cs int pop sbb xor ret dec mov cmp xor mov test cmc xchg lods mov dec rolb jle and fsubr in fistpll mov push or cmc stc (bad) mov into sbb in and pop dec jnp pop cmpsb stos shll pop ret lret rcr fadds and add lret aam mov insb xchg lahf cmp xchg pop inc (bad) xor mov pusha andb xor mov cmp pop outsb or sub mov mov cmpb xor pop dec add xchg mov pop pop xor jne jmp ljmp push or mov negb xchg imulb jecxz dec repz mov stc or sub sub fildll push sub dec xor lret jnp pop xchg outsl std mov lahf fisttpll adc inc sbb or test sub mov aas out xorb jns pop nop into or out cwtl jg movsl adc or sub scas pop lods inc mov mov fldt ret popf fmulp and adc xor out xchg loop imul jo push (bad) mov stos js add push sub inc repnz adc or into out inc out sub jbe and and sbb jae add call pop out mov (bad) addr16 aam stos mov push add (bad) pop push rorl push and and or pop fldt leave std nop nop jmp ja aaa cli adc mov mov xor jle pop xor jmp repz jp int3 adc or mov sbb cmp in lods lock jmp mov iret pop adc ljmp mov clc pminsw add loope enter sub add mov push imul popl mov cwtl inc sbb add incl negb call push js es imul jno xchg lret push or mov mov int cld and add jno ret push out xor pop lcall mov push push jl sbbl aas std jle test fiadd negl sahf dec add add repnz xor jle adc dec popa js out mov pop fsubrp mov and inc ffreep outsb pop xchg cld je sbb and add xchg pop and jmp repz cltd test xchg aam mov cld xor daa loop push fidivr popf adc jne or xor pop push movsl sub test aas and inc pop xchg add jns negl daa xor (bad) ficomp cli movsl or popf or jne je mov mov into je arpl xor add adc and data16 inc pop cmp add andl xor cs pop mov xchg dec aaa in sub out lea pop ds add jge or push cs push flds sub cmp jno dec inc dec add mov jp mov jp imul mov (bad) aaa xor testl sbb jne cwtl adc inc and mov stos lcall sti hlt and and mov aad fsubrl rorb and mov repnz pop aas xchg movsl stos lods popf sub pop adc add into pusha lods or gs hlt ficom (bad) js sbb pusha pop test and sub movsb and icebp add xor xchg sub mov ret or xor cld or add mov sub mov jns and fsubl inc push and (bad) xor adc lea cmp insb adc and xor rcl add add xchg mov cs lret mov add int3 loop inc (bad) std or and jnp cbtw arpl daa inc adc inc idivl jecxz xchg jo arpl or sub loope scas or pop sub adc mov add cmp or pop or xchg add fsubl pop sbb fisubr int3 adc jmp test and in sbb cmp mov les sbb or inc xchg les decl xor mov enter (bad) jno loope add roll pop fnstenv jmp les cmpl mov sti add out push xchg sbb cltd fs iret xchg and xchg add subb dec xchg xor aam and or and and lcall xchg mov and or outsl push add add icebp cmpsb mov inc adc inc outsb pop xor and loopne or pop inc (bad) lock dec cmc or cwtl xchg mov add cwtl or rcll ja mov into cmp cmp adc in fcompl xchg test xor int3 or stc fs push test pop loop cltd inc mov fs mov sub (bad) lods sti add movl inc shlb mov xor add add add adc push in das in adc mov push add gs enter stos das cmp ret scas dec dec inc or pop and lret mov (bad) int mov cmpsl lock test pop rcr pop sub inc mov inc dec les mov adc repz fnstcw lahf push lods dec imul mov aas inc sub pop jle jge xchg xchg jl les mov (bad) repz or cmp cmpsl fstl adc in jne pushf sub mov mov inc out (bad) into add ds add lcall xor pop xor push mov cs mov dec xor popf aad jb out add xor pusha sti inc inc jl ds enter sub lea or add dec sbb or adc pop (bad) ljmp jge lods daa mov cltd lds mov mov sti stos out pop cmpsl rcr pop xlat in inc call scas das push push cmpsb and mov in cmp popf adc aas ja mov mov gs sub and cmp ds outsb push jb es les mov mov fs out or inc jb (bad) or jp or push add xor or pop out dec pop dec repz or xchg sbb popl test jmp and pop dec mov ds and push cwtl sub popa jecxz mov xor les imull jg xor push add or xlat push movb cmpl cmpsl js (bad) lock mov aaa adc sub aas sbb sbb adc or pop ret xchg loopne add sub cmp pop pop push push fldt cmpsb repz fcomps and cmp ja js or sbb outsb imul lods es push out pop mov dec add lahf sbb imul aas je or xorb dec push add dec jae repz jmp adc inc adc insb pop js inc jno loop das pop nop mov in push das mov or mov xchg add push jno insb nop dec sbb scas dec outsl std sub cltd mov pop dec dec ja add xor add adc bound or or adc dec cmp movsl adc loop xchg js ljmp in sub jne bound dec push jb mov mov sub xor lret roll xor push in stc ret push push add cld out jno add cmp push mov push cmpsl and sbb push ss xor jns mov jmp mov scas imul mov pop dec rcrl fsts push xchg fnstenv xlat push fisubr fisttpll sub add bound pop cmp pusha sub pop xchg fadd cmp and (bad) mov sti (bad) enter and seto notb or add push and add pop lret xor or xchg pop ss adc mov push fmul loop and add mov scas or add jp and mov adc mov movsb sub push mov push xchg push mov add push xchg cld inc cli data16 sbbb cld jp aad mov movsb fsub mov mov icebp and inc les adc test add (bad) sub push or adc add mov mov popa dec add faddl add jne sub xorl xor or fisubr cld mov xor scas fwait gs adc call or cld inc jo outsl add lret dec xlat test mov jb negl icebp mov fwait or or mov lcall in push sub push cwtl cs or mov inc (bad) xor lock mov insb sbb aam jl jmp pop or jo push dec sbb ja loope fs xor imulb lcall std dec mov cmpsl pop jmp jg out and popa pop fwait ss (bad) sub pop mov sub leave pop jle jg test mov sahf dec add icebp inc popf and xor or jmp (bad) movsb aaa into in adc fild and push flds ljmp popa (bad) jmp mov pushl scas dec cwtl stos (bad) mov lcall pop mov jno sub hlt jmp into pop jle add mov in sub add mov add pop ljmp mov das loope lret mov (bad) in inc mov pop pop mov xchg pop pop fwait jle jns loope aaa add ret neg xchg mov js jb les gs push std dec add jno dec adcb sub and repz dec ja mov sub inc push mov push mov push push divb or pop xor aam (bad) mov jmp pop mov enter aam pop pop jle daa cmp push mov mov pop imul adc xchg roll mov loope pop ja and ljmp das mov outsl popf aam pop push int3 insb mov daa sub or fadds ja (bad) jle pop or inc fs incl dec mov mov hlt adc inc leave mov lea and sbb shll or push dec shrl add push add pop stos mov test ljmp rorl adc or cmp cmc fs repnz enter je and push sbb pop add cmp repz push sbb xor add sti xor push xlat push push mov pusha gs int xor dec pop jmp rorb lahf and mov push enter daa hlt sub mov pop pop dec pmulhuw test or add push ficoml lods push jle sub int3 jmp test (bad) loopne push int lds inc fsub xor jo mov (bad) dec fnstsw xchg push hlt or mov inc shl aad push push mov jle add fdivrs outsb pusha icebp lds dec (bad) push mov xor pushf push bnd test mov pop jecxz xchg mov pop out xchg (bad) out (bad) jmp sub xor pop sbb sub lds (bad) hlt ss fs jnp mov sti test cli into xchg and lods dec out mov dec sub pop push and arpl dec sub dec das push or into cmpsb xchg push lret adc add in lock cli jmp sbbl adc and out (bad) cmpsl xchg pop (bad) stc or dec dec pop sub int jl push xchg ds fsubl cli inc mov movhps loope xor rorb std faddp test sti pop push add outsl pcmpgtb mov add (bad) pop sbb repnz or push jmp add push push push popa das adc out divb pop pop push and cwtl lock ret frstor jle dec jmp lods xor (bad) push ljmp jnp mov cs in movsb push sub sub xor fucomip add aad adc lret or cmp imul and lret bnd xchg cli (bad) sbb push or jae scas add or mov addr16 repnz push aad jle movsb push jmp ljmp loop mov push ljmp lcall mov mov cmp and cwtl in pushf xor loope sub stc call jmp (bad) pop cmp adc in gs pop cmp sub add add insl cmp push dec neg add and xor sbb push pushf dec lods add (bad) mov test pause pusha or pop nop dec cwtl inc pop das repnz dec call cmp add cwtl jae clc (bad) pop fsubrp pop jmp mov psubusb or outsl movsb or add ret or pusha inc or or mov repnz and scas pop xchg jne mov scas (bad) repz sub pop sbb js cmp sub out mulb (bad) mov icebp pop jo sbb stc push sub scas add hlt shll push jne jb popf and jp cmpsb jp and inc in cmp test testl dec add or jle movsl aam jne cmp sub adc push or xchg push adc enter xchg in push sub add hlt push cmc push je int shl jp push addb das add std mov dec jne dec jmp out pop push in mov adc mov cli lcall cmp js ret ljmp call ljmp loope jbe or cli (bad) popf jno (bad) xchg push sbb jno or cmp fnop dec add cmp lcall movsl and scas (bad) das xor loop gs testb push mov add sahf mov sub mov and cld push enter das and daa loopne jb sub xchg and xchg int3 xchg aas adc es (bad) push pop stc mov test cmp lods into or ret add rorl lret dec decb add sbb lods pop es mov jbe pop mov jge xor and and pop jmp mov mov in and ret xchg jmp scas mov dec test jmp std cs xor popa push xchg add (bad) sub cmpb mov pop pop add add xor sub and adc js push std outsl pop or mov shrl inc add pop jge jmp fdivs jmp in inc jl xor cmp sub call leave mov jmp xchg dec mov cs jnp mov mov popf divl push fwait or or mov imul jo outsl add int add pop ret add mov js add adc jo leave jnp push push sub leave add mov inc pop in inc bnd out in andl push mov pop push fs pop cld pop inc sbb repz mov pop test sbb movsl jecxz and mov and rorl fdivrs cli and xchg shr add es cmp adc inc cmpsb stos sub int3 out pop in sub sub sub mov lret lods cmp sbb out jns gs popf insb mov xchg das lods pop adc jmp bswap out nop add cmc ret in stc (bad) mov loopne jge ret xchg repz push xlat mov xchg push sub test lahf repz rsm pop lea adc lds test add mov pusha lods cmp dec sahf push mov xchg mov cltd lret sbb xor roll add rol (bad) mov (bad) mov (bad) or jo shlb test mov xor pushf and in mov push dec ret pop dec xor pop pop lahf or fwait jle data16 push pop xor out xor pop (bad) sbb or mov scas jge ds pop ffreep std dec (bad) aaa inc js imul out add mov inc xor pop add inc popa pop hlt xor inc sbb sub mov rcl add add push mov pop das jbe pop (bad) pop add icebp pop shr push loope xchg push scas imul lods test cmp rcll loopne mov inc test std add dec sub cmc outsl inc mov mov push dec xor ljmp jo jns dec sub inc es or lahf push imul push mov stos lds dec add xlat push jmp pushl or pop add lods sbb add jge inc xchg fbstp ds movsb icebp test lds inc testl add aam movb xorl sub pop or adc pop or add mov cmp call aad repz mov fmuls mov jne push jmp pushf push cli jno (bad) xor pop jbe fs mov out cmp mov dec xor sbb dec pop repnz lock sub popf xor sarb dec mov pop cwtl (bad) xor push pop sbb push mov jl lds sub imul jb gs push push (bad) xor xlat dec xor pop xchg loopne push inc add mov pop push mov xchg test sub gs inc and inc sbb jmp popa mov add inc or and repnz cli mov fwait dec sahf stc cmp push je outsl movsb pusha popf jmp lret fiadd add or in and add and adc ret xor out xor add pop jnp mov push jb pop rcrb fldenv mov push lock icebp aam int pop les sti rolb adc push jmp lods (bad) cmovle mov nop cmp inc aas test in xchg add lock cltd les scas (bad) cmc or test xchg cli fwait mov sub int imul add xor pop mov sub leave jnp sbb pop mov dec ds insl xchg cli pop jb or or outsl xlat test add adc mov or dec dec add sub jmp inc sub push adc or ss inc pop pop and or mov or dec insb aaa or fmuls add push jge in pop pop or icebp ret ljmp lahf pop sahf cmp mov inc sub sub pop cmovnp and cs repnz lret add hlt xchg (bad) or das jnp insl roll push mov scas sar (bad) mov and dec (bad) in ss (bad) daa in aam lret push js pop pusha data16 ds dec add aam cmpsb inc jmp and dec xchg (bad) jae inc fadds and inc inc inc fmull clc ljmp dec sub repnz stos sub stc pop xor iret add jb fdivrs dec mov xor add sbb mov jnp sub mov (bad) xor adc add sbb jmp xchg push mov add add jecxz mov or jmp mov (bad) mov (bad) (bad) and jbe pop mov jmp rcll mov packsswb or sub cs add adc mov rcrl jg orl cld jae shll inc ds aaa (bad) pop dec lahf mov xchg fisub mov nop imul xor ds insl push (bad) js sub adc dec or jmp xor mov (bad) subl in hlt push push jnp ljmp push mov mov inc adc jmp mov pop popa push and jb icebp sub scas jbe adc in mov pop es pop pusha fcomi addr16 xchg inc pop stos add rclb jns stos into mov sub ffree out clc in ret arpl mov jmp sbbl in mov jmp out leave iret das mov mov fldl data16 movl sub cltd pop in loop dec js aam in xor push push pop testb inc repnz cwtl leave push jae test scas icebp dec lock pop mov scas je stos jmp inc rcrl push nop fs push bound mov sbb pusha xchg dec mov cmpl mov mov push sub nop popa jmp push cmovo and inc call jmp hlt pop ret popa dec xor mov das std lret test push mov ja nop les fs and fucomp ja sub call fcompl dec push cli mov out es subb sub scas (bad) mov adc test push inc inc loope xor mov mov adc push mov roll inc cmp add sub lock push dec sub sub (bad) push pop rolb fist push push pop pop sti cmpsb ljmp nop xor mov add loope adc push add add sar push aas and mov push lahf or leave lret lds dec adc insb push xorl sbb sub lret fdiv sub and xor adc sbb cmpsl (bad) mov mov (bad) roll pop sub push (bad) and fnstenv mov sbb jo stos push imul (bad) xor and ret add ror add push xor (bad) cmp sbb add or pop xor sbb daa cmp (bad) lock cmpsl mov push ds jle jge mov or pop icebp sub cmp dec mov inc add fsubs push (bad) inc (bad) pop cmpl mov sub cmp xlat cmpsb (bad) and xor jb mov inc sbb inc push (bad) lahf sub push adc pop and pop xchg dec lcall sub (bad) mov mov sub mov sub xchg cmp dec push mov ds push bound adc adcb outsl or scas push add ds and and imul or dec xor inc mov imul mov sub xchg jg xorl out jp push loop xlat jmp push mov add sbb pop xor ret xchg ficom mov sub jmp bnd push push push xor jle mov mov lds out (bad) loopne (bad) jno mov inc (bad) in outsl inc nop push mov inc or push cmc test inc icebp lock cs mov es nop int or mul call add dec xchg int stc fildll sub or mov nop push (bad) jge out loop arpl adc jmp mov mov clc dec lods fisttpll push aam and and mov push std les cltd movsb out test mov dec pop adc (bad) or jo into and fs and aaa push data16 cld lds mov mov (bad) xor sub cmp add shlb icebp dec mov pop notl loope mov sub je or mov push cltd mov xchg pop xor ret mov std xchg sub jmp in cmp jge adcl mov repz ds dec sub mov dec add xchg std pushl mov xchg add cld test lret jb stc andl sbb scas lods in mov pop sarl sti or or dec sbb daa imul add sub (bad) das mov adc clc add in xor aas and imul jae push and clc mov arpl sub inc and cmp sahf sub push jne je push mov mov je daa xchg and and xlat ret das aam sbb jecxz mov mov psraw push mov mov notl gs pop dec das and cmp mov push lcall adc jno js in aad test and mov and fs add xor (bad) jmp mov cmp popf push sbb mov pop xchg sub push lds jp xorb push daa and pop jmp rclb fwait sbb sbbl insb dec and mov je into pop or push sub fidivrl outsb or push mov shr add in xchg scas dec xchg add mov mov fdiv imul call or jmp pop sbb dec mov add push pop lret jl adc and cmp repz add mov mov mov mov or neg push movsl mov inc dec push mov std popf mov jmp icebp nop outsb popf and int3 stc addb dec push push mov mov imul sub inc cli mov out pop push and sub add fldcw jp leave rorb enter lea add xor add test pusha or (bad) jb mov or push mov or loop push gs jmp shll push imul sub jecxz mov xorb outsb aam or xor pop pop clc mov enter (bad) stos loope loopne and adc and ja mov fwait leave mov pop mov popf (bad) pop shlb jmp std cmp pop mov sbb and pop pop push popa mov aaa sub lret cli pop stos and jecxz sahf mov ret lds push mov add call xchg dec mov jo cs into push ljmp pop jge dec cmp mov repz sbb jns movsl call fs scas repz pop call ret test (bad) mov (bad) and adc test (bad) (bad) adc or and jb or and dec dec inc or rclb inc add inc daa ds sub test rcrb ret push push (bad) idivb dec pop rcll xchg push dec lods xchg sbb inc pop inc or and nop std out ja mov mov rclb adc adc pop dec adc enter pop cmp jge mov fcomps int mov cmp dec sbbb xor fdivrp (bad) lods cltd cmp pop es push jge push push mov xor dec jb jle insb sarl cmp jae mov push lahf push incl outsl imul loop rcrb arpl inc or mov mov scas xchg loopne mov adc jbe out out (bad) jmp lcall adc dec add sub rcl jns mov push push scas sbb push mov jae pop (bad) mov sbb scas lock mov or mov sahf pop daa testl xlat pushf pop imul adc add test (bad) out loope dec cmpsb xor ja xchg push add jg and stc out int jle sub aad push or jmp inc lea (bad) je cs sbb add mov cmp jns add push push mov dec mov mov icebp inc and (bad) in jae or outsl adc test dec divps bound popf sbb fdivrs lea or (bad) and shl orl scas adc xorb push popf sbb jb lock dec add and pop pop add pop mov pop adc push pop inc iret cmp repnz repnz push mov and adc add add or pusha jnp loopne movsb ret or jmp cmpsb incl mov mov push push mov mov pop sub jmp mov icebp into das mov ret test es pop adc pop jg push inc pushf ret jne xchg imul dec (bad) lret rcrl loope lea add or adc enter and ja cmp jle dec inc push mov aas scas cmp out adc and add mov inc mov sub ret inc sub loop xchg aam daa pop add pop clc jmp add add aad fiaddl pop movsb pop shr bnd test rorb in add mov sbbl add call dec pop or fild push insl js inc jmp add enter sub push mov and repz sbb jmp lock in push pop xor cli and test or jns mov jmp fnsave sub xchg pop jg sub repz std mov out mov popa jmp pop cli imul sbb push daa push sbb lock add adc repz movsb fisubr and fs add xchg xlat adc jo adc cmp mov and xchg ret mov daa pop clc push data16 fxam call cmp jl cwtl and gs add bound loop adc pop jmp ss rorl mov js fcomps xchg subl dec sub or push sub test daa aas (bad) pop xor pop sub fcoms pop popf inc enter lods push add imul add lea aas add push cmp add lods ja lock das (bad) mov fnstsw or aaa shlb jne mov inc jmp stos pop mov or test cmp or repz std out daa mov hlt xor test dec cmp push pusha xchg pop idivb imul pop (bad) cmp pop mov xor cs xor pop and push mulb push stc jbe cld aam and cmp jecxz mov push sti pop movsb sub icebp xchg pop or xchg xsaves sub pop (bad) negl sub std sbb in outsl xor sbb das and int3 push dec sbb mov leave pop jne lods (bad) dec iret (bad) and movsl test jnp pop jae in jno int3 sbb ljmp movsl sbb or jmpw xchg insl mov rcll iret test xchg xlat cli sbbb pusha mov repz test dec mov pop sub call enter std push iret mov cmc jle mov es or cmp mov imul xchg cmp add adc aas cltd int3 es nop xor lods cld cmpsb xchg and jmp cmp icebp push fnstsw fisubl and add dec lahf sbb sarb out inc mov sub pop movsb loopne sub hlt xchg arpl sub (bad) mov gs cmp lahf insl sbb fist mov sbb lock or popa adc jmp or call push lods pop or inc push push pop out insb aaa sub jl aas aaa je jns out test and repz mov mov pop dec aaa inc (bad) sub rcrb std rclb push mov ret ss dec icebp adc lock cld jbe mov in adc daa iret xchg ljmp sbb rcl cmp adc movsl test fild inc ljmp std mov xor call arpl xchg sbb adc jmp leave jo call pop or mov negb cmp or stc clc or dec into stos adc pop sub test inc clc loop rcll or data16 loope mov mov or adc mov (bad) push outsl stos pop fdivs (bad) cltd clc loope stos (bad) mov mov xchg mov pop bound stos notl scas fmull sub outsl or push aas adc pop out xchg pop lret pushf push outsl xor imul out pop (bad) inc ja int cmp cmp loop inc add aas in rorb je pop mov add cli daa cld pop add lods cltd loop movsl cs mov xor (bad) pushl mov xchg push inc (bad) mov sub and xor in stc pop cmp inc idivb movsl imul ljmp and or push std (bad) mov inc test sarb push aad fbld add pop stc daa xchg inc aad (bad) arpl call jp leave pop xchg adc pop mov inc pusha mov (bad) jbe dec add push pop cltd (bad) or imul imul mov cltd xchg popf std rcrb mov and cmp push fs aad jnp test sub imul bound cmp sub stos or pop (bad) scas or mov in push push scas mov dec in sbb xor in xchg mov mov sbb daa jg sbb xor adc mov adc pop inc cmp and out xor stos test lea xor inc xchg jo in rol push push push adc rcll sub sarb sarl in test mov call dec in pop jno push hlt ret jb in push lret decb pop lds cli cmp xor push pop (bad) loopne in out ja popf sub jne out sbbb add jmp cmp pop sub hlt daa iret and sbb shrb xor cli in jl dec push scas int3 mov dec mov in jg jo add xor negb mov lahf icebp in xchg mov pop pop (bad) jb sub rclb dec std lea push and shrb rcll enter cmp ljmp iret mov sub ret add nop push jmp pavgb pop add daa dec in (bad) fsubl ret jmp mov xor add stc inc push lods lds inc clc hlt add inc adc insb add sbb in or dec adc push cli add add stos ret or cli xchg sub xlat mov pop push fimul dec sbbl sub daa (bad) lret repnz cld cmc leave je jmp mov push rdtsc lds imull sarl out sub icebp cmp adc shrl dec scas push sub pop sub rolb repz lods test loop push sahf lods rcl jl pop pop fsubrs push jae pusha movzwl push cmp ror leave push add cs sub add push pop mov mov push adc fs popf jno cs cld and mov popf (bad) ss nop push xchg imull or adc cs cmp std xor adc xor inc jmp frstor pop inc fwait sub aaa inc pop and adc fiadd scas add or fsubrl mov jno inc mov xor push xchg dec jp jmp dec sub loope fwait dec punpckhbw sub fbstp dec jp aad or aas lret mov inc popf das shld dec in sub push jl pop or pop xlat in clc sbb or or in pop repz pop xchg cmp mov mov and sbb or mov nop mov (bad) dec (bad) je add push push icebp inc cmp out jb push div push or and pop and jbe push push test neg lret sti push dec mov jbe fist jmp push push mov (bad) pusha add jmp xchg out inc xchg movsl mov jmp loop inc hlt fs ljmp scas jge pop fucom fisttpl and icebp add cli pop insl pusha jno push imul pop push sbb sub insb in fnstenv sti sub mov fucomi push xchg cmp mov inc ds dec mov or cli push fstps popl call mov addr16 dec cmp std xor pop ret test inc hlt add (bad) into in inc imul sbb adcb xchg or add incl negb repz das rclb xchg or pop andb movd scas and dec and out inc xchg imul push lods cld test dec je ljmp orl pop dec add mov jmp pop fs (bad) in or jne xchg and push popf rep das out mov mov pusha xlat lret icebp inc inc push jb xchg push add add mov gs mov inc out pusha or jo dec cmp pop addr16 jg push dec js xor jmp or xlat add pop cs test mov sub jecxz cmpsl push aam stos xchg clc movq mov stc and leave push xor pop shl adcb push les push out inc sbb dec (bad) mov pop js pop push (bad) cmp loope ljmp or inc test cmp jb push jno (bad) mov icebp pop xor jmp sub js popa or lods xor xchg push push cmp push sub pop or or in push add nop or fnstsw fistpl (bad) popa inc adc iret xor sbb or xor cs ds add jg adc push mov sub insl or sbb inc xchg test cmp mov inc adc outsb or sub movsb jbe and push jo fiaddl outsl add test hlt pop movsl leave pop lods sbb mov popf jo mov jne add stos ret or cmc push dec dec ret mov repz in sub stc fstps mov jle and or mov insl mov test js sub test loopne pop add adc mov adc dec add loop js xchg xchg push sbbl jnp fnstenv movsl or dec mov xlat (bad) mov push xchg dec sbb lahf mov or (bad) pusha popf dec jmp jecxz dec xchg popa testb fcoml sti and stos cmpsl aad push clc xor jg lds popf cmp mov daa lret fs orl dec aad lds mov and mov pusha inc cs cmp sub pop xlat or ljmp je sub out loope pushl stos popa lods popf in and cmc jns pop fisttp or mov inc and and jmp lods xchg cmpl jb fild mov push or fsubs push aad into popl imul in pushl xchg adc adc into mov ds movsl dec mov aad push xlat ja insb sbb ret or loop push sbb daa std sbb cmpb sti xor mov inc repz mov imul add jo out or inc xchg pop (bad) outsb mov imul mov arpl ja ljmp mov cli mov aam xchg cli adc ds movsb push and lcall sbb popf add int dec xor clc cmc add aam add in pop add adc push jmp ret adc push dec in add pop fnstsw push dec sarl pop call inc mov lock imul or dec xor loopne cs sbb lahf ljmp xchg or mov push aas inc jg mov (bad) xor or int pusha jmp xchg mov pop adc add rol pcmpgtb pusha add adc pop mov jae minpd int3 sbb or cmp sahf pop out mov mov call or sbbl push cmp lcall pop push addr16 sar sbb or xlat dec lds test not mov nop and pop cmp das jmp mov add shr mov adc (bad) lods sbb jmp xchg jae add add mov dec inc jno js push or mov in mov jl pop daa adc sub mov out mov aaa hlt in mov push xchg mov (bad) mov inc popa or push cmc imul ljmp sbb insl sub add pop or dec jb add stos adc adc inc mov or in and pop sbb jp mov add fidivl add aad jne movl dec push out jge adc ja cmp pusha push fisubl sbb out dec shrb cmp loope cmp pop pop add inc loope fsubrs adc and mov dec stos cmc js add ss xor jmp sbb iret dec adc mov int3 and out sub mov lret outsl imul mov jno loop fild push lret fistp mov inc fstps sub xlat enter jo adc insb inc add das mov push loopne cltd jmp clc push mov xor push mov sarl (bad) das in js lock jno push push cmp push sahf lret push adc loop repnz inc mov bswap add fsubrl out nop xor bound pop add es adc dec xor inc in mov inc std mov jge xor dec loop push ja lea out les pop test into mov shr call sub in pop mov call inc pop sub repz mov popa repz add mov stos fwait pop adc int3 (bad) jmp sub lock lahf mov cmp jo add sbb hlt sbb imul or dec inc pop cltd insl ljmp sbb enter inc mov rol or mov jg test cld pop addr16 stos out adc lahf and xchg mov xlat (bad) (bad) mov push iret add (bad) mov mov add enter push pop sub (bad) loopne dec stos pushf (bad) rorl ja xlat sahf dec mov (bad) pop pop cmpsb (bad) sbb outsb cmp movlps push mov xor repz inc or xor fild xchg fnstcw (bad) shl mov daa adc sbb jp or out imul cmp insl jl imul jmp loope testl sbb div mov dec (bad) sbb mov sub pushf addl inc movsb add dec dec dec jbe sbb sbb lds fmuls and pop fcomps push jmp (bad) in popa hlt sub cli xchg mov rol mov das shl inc push imul lmsw rcl lret xchg push rep in lods movb sub mov ret add jle push outsl sar popf mov adc sbb push dec xor hlt daa sbb neg add push clc leave adc jo xchg and inc pop dec outsl mov adc js mov stc add (bad) dec sub hlt pop fidivl inc icebp lcall xchg inc xchg sub and popa loope ljmp stc inc mov int divl pop or mov sub lea ret int3 movsl data16 dec or xor mov push or add into lret in inc and lods fwait js pop subb aaa stos xor sbb xchg test push xchg adc ficom xlat or adc (bad) inc push mov das adc and aad cmp jecxz movsl les mov dec cld add rol sbb dec push out push clc cli and repnz nop cmp cwtl popf sub push sbb int3 (bad) cmp lds or test jmp lea mov arpl cltd pop scas mov sub out sbb xor mov mov xor sbb jmp or jmp push popl popf nop faddl (bad) mov mov shr movsb xchg int xor mov lock stos cmp jno nop xchg dec out popl xchg sbb add inc and and mov loope xchg mov call inc add jae jmp dec add inc cmp jno mov ss xor push push (bad) cmp test adc daa adc (bad) push pushf xor (bad) fisttpll and ret pop cmc mov lods adc mov imul pop pop cmp or pop push repz movsl dec leave lahf push lods pop rolb mov mov push inc mov sti or xchg call lea fcmovnu in xchg xor dec sbb sti xor jb sub sub inc cwtl push add popa add cli push or cmpb mov pusha mov adc test aad popaw enter and jmp jbe pusha hlt pop test or pop bound (bad) stos jp movsb sbb stc jge loope bound fnstcw add into xchg mov mov pop test cld fadds subl dec sqrtps and and aaa adcb push test mov adc test out shlb pusha adc cld xor sbb inc loopne lock or push sub adc out jno loope nop dec jg scas xchg mov or pop mov add cli cmp xchg pop (bad) cmp jne jl sub add inc fs jmp dec cld and mov sub cmp es int push add (bad) orps ficom out and dec lret clc stc test gs je xchg add ficomp ss jbe dec or inc push mov add mov in pop xor dec mov inc imul add mov movsb adc xor or and addb in imul xchg push ficom push je dec mov lock rolb pop fnop pop or add pop dec or add jmp xchg inc cmp mov jecxz add fidivr ficom lret add clc pop in call jge pop dec out add cwtl out mov pop dec sarb xchg add jmp mov call or das imul popf push add mov cmp add dec xor or in roll out inc dec pop jne loope pop ljmp mov cwtl loope out sub push add dec ret into xlat cwtl mov popf jl add aam sub bound rolb xchg ficom or inc sbb add jl mov fs out lods push add lds ret call cmp pop cmp mov (bad) not scas out mov fwait sub stc mov aam pop jae or jmp fiaddl ljmp scas push or clc and mov xlat pop and lretw das cmp push rolb add push int3 test nop lahf fild dec outsb mov pop cmpsb pop pop inc lahf aas in in ljmp not out nop dec sbb xor add jae pop adc cld jno jmp xor sub and shr mov hlt jl popa cs out test jae mov mov adcb lcall push lahf ficomp out popf test mov mov fldl2t pusha jp pop push mov push mov pop (bad) cmc or xor add push int3 out sub and cld addl adc inc push jmp or popa cmpsb jle aam inc xchg push add xor repnz popw and nop/reserved push add (bad) and xchg push invd pop and lcall test cltd or adc xchg jae nop and or xor int3 in jmp cmp icebp push test inc arpl mov jl or mov jmp mov hlt cmp cld push cmc add jecxz (bad) jmp inc sub (bad) (bad) fldz mov mov xor mov or mov adc and add xor jmp idivb repnz xchg int3 (bad) adc inc add or pop and adc sub sbb negb in jb pcmpeqb mov bnd adc jno lds js adc jge lds (bad) loop add ret pop pop push mov dec add jbe add jecxz aas pop pop daa enter out cmc xchg (bad) inc sub mov nop add leave outsb add push in jmp movsb adc xor neg or dec daa std sbb call (bad) jnp sbb jbe sub aaa movsb mov push out pop scas dec jmp ret dec scas or push or outsl inc lea out pop dec mov inc in jle test and out sub pop cmpb jmp and add loope test in repz and imul push pop add inc mov cmc mov popf mov testb or inc maskmovq (bad) mov jne ljmp mov adc test (bad) dec sub pop movsb (bad) add push bound sbb fs mov test movsl mov jne jb push or pop in pushf int3 add mov jmp jae repnz sub ficompl cmpl jno sahf sbb fs pop jne or xchg shrb mov pop mov idiv setg test inc cmp ja mov daa sbb lret js jmp loopne sbb (bad) and ljmp xor setns sbb cli cltd cmpb les adc and je repz xchg std out sbb pop notb addl sbb pusha xorl pop pop bound cld xchg loope jle notl addw fidivr add lret push adc pop mov (bad) fstpl in out and sub inc cwtl out add jns shll jg cld leave inc jp ret out push fadd sbb pop mov cmp cltd cs imul push test mov fimull mov dec out mov add jmp adc jmp add mov inc pop mov les fnsave inc mov or jmp clc push outsl frstor inc mov cmpsl ficompl sbb mov or in add xor sub sub clc pop pop lret xor incl xor jmp add ffree cmc inc or lahf test adc sub dec push ss leave in jle mov cmp mov inc and pop push lret stos dec mov cmp mov insl mov add push sahf movsl sub cld pop pop loope inc aas nop loopne mov inc stos push pop loop sbb or rcll and push cli out adc jge dec xchg repz imul shlb or (bad) std (bad) out sub jge arpl mov xchg xchg dec rcl jg push push daa cmpsl add mov ss xor xor pop (bad) outsb sbbl or or scas xor pop add or and fdivs sbbl lahf mov add mov popa mov (bad) sti add sarl dec push xlat jge and add stos jb (bad) sub and mov loopne cli or pop mov dec fsub adc jle inc push jnp mov sub add xor sbb cmp insb dec mov xchg mov or push lock xor call inc adc out inc fdivs stc mov (bad) fadd push mov or pop xchg aad data16 cs sub push jmp out and cmpsl mov fstpt push sti cwtl jae xor pop repnz ret repnz aas in lahf mov push idivb repz jle add mov sbb fsubrs in addb lahf inc scas mov ss push sar aad jne add imul gs adcb xor add mov daa and jmp imul shl push fstl jge pop ljmp jne mov mov lret xor (bad) sub das stos mov dec xchg fmuls cld loope int jg stos push jae (bad) dec inc jmp mov mov pop out xchg pusha push jmp cmpl adc add inc in lock mov xchg mov push cmp xchg in xor lods cmp pop js notl cmp jb imul push or jmp pop std mov in bound lock mov pop inc in dec pop movsl outsb mov daa add add mov xchg push inc nop cmpl pop inc sub push push notl and and cmp bnd out cmp scas jge cmp jne mov pushl push mov sub cltd mov rol mov shrb push add xchg insb in and jmp icebp aaa dec aam dec loope bound add push repz loope adcb add push mov and fdivp sbb jmp cmp push xor pop comiss jle lods loope (bad) mov (bad) int in pop fwait or pop pop pop mov xchg lock mov sub mov jecxz (bad) enter or (bad) push pop fldcw push pop jmp or sbb or mov push pop dec ja push mov xchg fcoms add pop mov jns cwtl jno jg push rclb and mov sbb std sub cmp (bad) sarl jno and pop stos mov loope inc and push sub (bad) dec test inc mov mov jmp adc adc or inc stos pop pop stos mov pop add (bad) mov das das cmpsb mov lods out adc hlt pop xchg add push or inc loop (bad) lock cmp imul pop scas icebp push aas icebp iret sub sub inc jmp pop mov push repnz mov stos sub sbb (bad) mov ljmp add lds adc call repnz lods dec stos aam mov push jmp jle dec scas adc cmp push xlat lods and inc in es jbe sbb push ss lods (bad) jl xor cltd out sub shr add mov pop scas sub and mov orl loope nop shr pop mov add jno rolb pop xor or pop sub leave scas xor outsb mov std adc ret fcmovne and dec add and ljmp movsl push nop pushf into or add mov add dec jg xchg in lods lods out (bad) jmp roll sub xchg daa push jg jb and pop rorl cli jnp push aam clc inc cmp xchg push sbb mov ficomp xchg push add sbb xor mov or (bad) or xchg ljmp nop push pop fcmovu out inc dec addl mov push ret arpl or leave add pop inc xchg mov pop mov or dec popf or testl pop hlt out faddl imul aaa in icebp inc dec or xchg adc ret inc (bad) fidivr sti mov (bad) jbe dec sub stos ds (bad) mov dec dec sbb pop jb (bad) cmp dec negl xchg or push add shr push jp mov cmp mov xchg mov testl push int3 push dec adc popa cmp mov pmaxsw jmp leave or pusha dec sub jg push clc jb push pusha jmp mov addr16 add xchg sbb das cmpsl out dec xor les loopne ljmp dec and pop push (bad) stc inc xchg mov int test xor dec in aaa xchg je shlb rolb pushf sahf and sbb and and inc inc jmp in add xor in iret sti pusha inc or mov cmc dec test stos xchg arpl rorl mov lods xchg pop xchg fcmovb push mov sub hlt fwait mov or jle sarb pop push stos and adc push mov scas fmulp mov dec (bad) mov add dec int3 lock fidivrl jne (bad) or inc add and test pop mov xchg dec in rol ljmp dec xchg cli nop or mov imul test xor sbb or mov sub or mov add jecxz sub mov push mov aam add xchg loopne les add push popf bound or enter xor (bad) jae pop and pop out lret ds jmp inc xor pop scas inc test nop (bad) jb jo cwtl lcall xchg lea mov lret mov pushf data16 pop dec sub arpl inc push mov call push push pop pop andl out cmp fisttpll fildl dec scas xchg sbbl in xor mov out mov adc inc pop fnstsw imul inc (bad) or out es add pop stos fcoms mov adc sarl out and push or roll sub xchg or add (bad) pop sub icebp jb iret add inc sbb inc add in (bad) ret mov fmuls orb sbb push fisttpl lods jne imulb dec daa dec leave push push cmc cmpsl sbb and xor inc dec push push gs sub xor adc dec push mov push mov scas sub push inc xorb and clc add jno dec push adc sbb add in jnp sub mov jle or pop aam imul insl sub adc cmpsl push jne fcompl adc xchg ret aam xor dec push fdivrs inc cmp sbb sahf xorl out sbb fcos pusha insb test addb popf push mov arpl out rcrl andl jno add push push xor sub mov and jno dec adcl pop adc je mov popa lea cltd pusha or dec add or pop or lea jns push push push jge mov inc pop mov and and lahf push jnp sub fs xor push cs gs sbb (bad) mov loope push fdivrs inc jmp test icebp insb (bad) jle mov jae dec adc push (bad) dec mov xor mov xor pop iret mov sarl pushf adc push pop mov xor mov pop jmp mov lods gs and jge movsb cld (bad) cli dec push cmp fcmovnbe and adc shr rorl dec xchg xor call sbb jecxz dec sbb xchg inc mov add int loopne inc daa shrl mov xor pusha dec jo insb repz xor cmpsb sbb push jo jmp test repz fistl xchg jns dec (bad) scas cld repz push mov jnp mov dec lods xor dec aaa add lods fmuls sub inc sarl or xor sub mov cmc sub push cltd push xchg popf push cmp dec sub pop xchg cs pop pop or sub add adc xor add and cli fsts push dec sbb dec dec adc push pusha aaa pusha mov push lret dec push test pop mov xchg shrl es and xchg out inc out adc dec jo or sub cs add in xchg sbb sbb mov popf fnstenv leave push push jne pop ret int3 test lahf pop pop mov flds jmp sarb xor push xchg inc adc roll xchg mov cmp ljmp adc sub (bad) or pop xchg cmp in cwtl insl lock out add and cs js xor inc insb pop pop rcr scas das std push pop mov in and xchg mull mul invd notl and pop jno xchg jns (bad) into cmp dec in add (bad) adc (bad) mov imul (bad) xor mov mov pop mov jmp (bad) (bad) out sub jo or fild jae scas push movb aad mov xlat fnstenv imul adc fldl inc insl fs xor mov xlat aad cli pop es (bad) or mov pop pop out fwait movsb mov push mov pop ss jl or pop push pop xchg jmp scas jno pop in push mov hlt loop (bad) pusha lret sub cwtl inc xor gs push jge add fisubl or fldl and add daa dec or add jmp in (bad) dec iret in outsb shrb pop ljmp jl add jp mov outsl rolb adc or (bad) icebp lret xor inc mov mov out ffreep xlat rcl aaa inc mov std mov jb (bad) idiv es jp les jno cmp sahf xchg lret inc lods push push sub test mov adc adc add xor or pop (bad) mov mov rcl test mov mov or jne lret lahf push sub jmp mov cltd in add sbb dec adc adc test in pop mov sub (bad) ret pop jne fnstsw or jno inc mov int cwtl jno shrb stos dec mul jne or mov and push push pop xor cmp or push cmp adc push scas push fs test mov or imul imulb lock jmp fwait mov push loopne xchg mov into jne inc fwait subl out cld popf pusha and outsb cmp pusha popa dec stc sbb jmp (bad) aam out mov sub bound aaa push adc ret mov pop dec mov lret loop test pop stos sub mov jnp xchg mov aas mov dec push sbb and idivl cwtl pop sub dec or dec in clc jg (bad) mov pop xchg bound jmp sub push push add and je lret loopne cmpb mov stc dec sub xchg sub scas sbbb or rclb mov cmc test lods and pop inc push or xor and cs push aam pop dec sbb sbb jnp xchg rolb xchg lret cld add inc xor xchg push push outsl sbb (bad) sbb sub test (bad) pop xor pop int3 fucompp sub iret leave jge js cmp test push dec xor xor mov stos stos xor mov lods dec (bad) inc mov sub lret add (bad) adc push sbb in imul mov mov push mov and mov and mov sub sub sub movmskps mov stos insb bound jge or adcl dec test or ds or (bad) ret cwtl jge pop mov imul subl or movsl adc xchg mov push fidivrl or sub xor dec mov mov inc scas imul mov mov jl push std xchg mov insb pop jmp push adc hlt pop or sahf lret jg test jmp or popf mov mov pushf ficomp mov int and imull jno inc ds out dec pop popa push and add jecxz enter jbe or std data16 pop mov ror jle lods pop cwtl mov out cmp mov cmp imul push call mov jmp jge jnp es into add or sarb dec ret (bad) mov pop mov add cmc ret pop les cmp fiadd and xor enter mov ffreep fldl cmp fcompl add jo jmp adc sbb inc push cmp mov xor jne cltd jne inc mov pop push das jmp dec dec inc mov in add add sub xor repnz cmpsl out xor das lock (bad) sbbb inc mov push aas xor jne adc push enter pop jle mov icebp xchg sub pop fldl xchg sub ret pop lods (bad) int add push inc dec sub sbb cli notl xchg out test inc lods inc mov cmp or and test adc jp or lcall leave dec mov les add out (bad) repz or adc fisubr xorl push (bad) jmp sbb jb es or adc mov adc clc cmp push xchg es mov adc rolb popa call loopne scas cmpsl add sub mov iret dec jecxz and std mov mov dec xor pushf adc ljmp and dec cli add ss dec fild push das clc and mov js dec mov enter subb cmp je cmp js imul pop add arpl xchg stos testb out cltd and or icebp dec pop loopne pop inc dec subl and or dec mov andl and dec cmp mov jp test push pop and pop jge jp sub mov xchg (bad) and in push (bad) fadds sbb dec and xor sbb or push ja xchg in or mov lahf mov add fildl inc outsb xor xor mov mov sarl cli xchg jg bound jns enter dec lods mov inc neg cmp gs popf std xchg mov stos dec pop jmp pop lret push cmp cmp sub cmp pop cs fiaddl in sti pusha (bad) jne aam jnp imul (bad) and jmp sub jmp adc cmpsb cld or jmp and sub fs pop pop xchg push ret pop popa into mov or push cmpl adc out cmpsb dec pop mov sub or add mov stos je (bad) mov jge ja out dec mov adc cwtl ss push pop loopne roll inc hlt cmp sbb mov addr16 add (bad) aam dec (bad) xor (bad) mov dec or dec dec in ljmp out mov mov mov and push pusha aas aaa (bad) popa repnz fbstp cmp xlat cmpsl mov fs inc mov and xor pop mov and mov jecxz add leave sub cmp dec imul popf out dec popa stc push sbbl mov mov stos fwait loop fstl loop cli mov push mov test jno test out push pop cwtl push push sub push inc pop jl adc repz clc fwait dec fs das inc jmp or test adc pop xchg push jnp jecxz push adc push inc pop add xlat xchg rcr lahf cld call cwtl enter int3 adc mov iret ret (bad) les ret jno out add add cmpsl fiadd xchg stos xchg xlat xchg mov loopne mov divb pop ja out mov mov push jmp (bad) and pop dec or sbb cmp add aad hlt (bad) dec inc mov stos mov enter push jno or push sub inc test sbb add icebp popa outsb fidivrl scas jne inc xlat loopne or add xchg add pop iret imul ret or and int jg notl sbb inc mov daa pop inc or jo mov sbb inc fnstenv sub add push les sarb xchg and std dec jl or repz popf add fs dec sub and mov add ds outsb xchg aad shl dec sub and xor ljmp lds jne (bad) jns add mov aam test adc inc pop shl adc and or movsl (bad) mov sub rcll mov adc dec xchg dec in repz inc enter insb push js sub pop add add loope mov jge out push jg sarl (bad) or pop movsl add jmp adc xchg dec dec adc or icebp fwait jo and jne xchg xchg outsb push mov mov daa pop inc add dec xor jns cmp push cld mov cld sub in pop roll sub and shr add ja gs add jo pop mov sbb push cmp jmp sti int3 mov pop push inc adc fildl outsb in pop and sub cmpsb cwtl xchg dec push sbb cmp jle sbb xor pushf es mov mov add cwtl push pop repz mov mov mov push jmp mov fnstcw (bad) adc and stos addr16 xor jle repnz out mov and push push push pop pop sbb xchg mov adcl or imul sahf push movsl in adc or pop jns pusha mul push pop or cwtl xchg push add out pop mov cmpsl idivb cmc test int3 pop pop rclb jbe aad mov cmp xchg loop push pop jns cld xchg jl jle sbb mov pop dec (bad) sahf or popl ds inc push pop cmp xor jmp jmp mov aam adc fimul addl lods or xor push pusha inc adc mov mov push inc sub push xor adc xorb or mov in mov icebp in sub xor jmp xchg cmp fstpl (bad) mov shrl sbb push push jo,pt mov ret push pop aad in add ret nop pop sarb pop push js addl xlat ret push fild jmp xor out int3 addr16 or push call ret adc mov dec push mov call ds or movsb jbe dec xor rcl sub fidivrl cmp mov cs jns xchg cmpsl pop adc mov mov nop lods push insb xor and out les xor aaa stos int3 jle dec lods call push aaa inc pop jb xchg push hlt inc call jno es in xchg and dec inc pop mov add xor and sar push sbb cs shll (bad) popa cmpsb nop adc push mov pop scas add xor and mov sub int push jns sub mov xor pop push movsb flds push jmp arpl xchg add lock ds xchg lahf test ret stc push stc hlt adc and add dec jmp popl incb xor enter fdivrs iret xor movsb movsl jmp (bad) jbe jne pop dec push stos mov xor das pop loope mov jne leave jno or jo (bad) (bad) in dec and mov dec pop scas imul (bad) fild jg mov bound push mov jl dec jnp cmp xor and int3 push add push mov pop fiaddl fmuls add sub mov cmp out adc out testl mov add mov enter dec bound mov dec ja cmp sub cmp or in pop adc sub sub jl adc pop mov insl popf push xor dec cmp sub pop push or pop rorl mov sub adc xor mov xor dec or ljmp add aad jl adc xor (bad) icebp mov and popa in aas add fcoms sar sub push mov xchg pop sub roll iret pop cmpsl push push cmc ljmp movsb adc pushf push jb ror (bad) jmp mov adc ljmp or ja cmp sarl daa xlat xbegin sub sti mov or rcrl repz clc lea insl push and push push stos or stos sbb adc dec or arpl adcl sub sbb mov pusha adc jle lcall push mov pop in sahf fucomip loop out add stos sahf xor nop inc mov add in clc xor mov movl popf jo jns pop lea add mov xchg sub push mov cld mov cmp stos mulb les shrb jb lgs loopne mov in mov out popf aam ds pusha movsl cmp adc jnp xor and mov xor hlt add or jge outsl loope test cmp xchg push repz mov jl adc out lods mov insl push sub stos rol inc ss jnp sti cmp add jns mov or in int3 xchg jmp cmp das sbb or aad push sarl jmp out mov lds or or in sub sub dec mov pop (bad) inc cmp fstps adc sub and outsl test mov push and lods loopne in mov jge hlt (bad) jo mov jge ljmp pop shr jb ffree inc jne jae subb lea cmp pop bnd pop aaa or sub pop pop (bad) and mov add jmp leave push jecxz mov push out cmp aas movsl push je sub push add push movsb popf (bad) insl jnp or xchg test inc in inc sahf or test add iret stos out push push add ret cmp mov jge cmpsb jmp gs or inc inc mov and cwtl fs (bad) cmc add ret movsb sbb xor (bad) out mov (bad) jb or jmp xchg test sub data16 mov pop add (bad) mov imul xor orl push push lock aaa insl int aas cmpsb jp mov adc pushf std pop mov pop add outsl adc fnstcw cld or mov insl pop inc fld std cmp shrl (bad) imul (bad) repz and dec jmp rcrl inc int inc sti jmp or lret push and push add ds jecxz inc rcrb pop gs pop mov xorl add es loop push pop xor sbb mov push outsl in add arpl and inc ret jmp xchg aad mov lret pop pop das addb dec outsl (bad) pop movsl pop stc sahf mov movsl sahf pop and aad jns push imul mov rcrl pushf or or push fucomi or xchg rorl idivl es mov das mov (bad) daa xor pop sub (bad) pop imul test push push push jmp in ret pop pop addr16 xchg and and sub lret or jmp add in add mov es mov push daa popa fcmovb cld daa ja (bad) mov (bad) inc and push inc mov cmp dec lea jns into or or iret shlb or cmp xchg shr pop xchg mov sub xchg xor aam or mov ds pop jmp pusha xchg je nop mov xor fs outsb rol insb add pop add mov divb pop mov push lods xchg or test in popf in out or js dec push loop add pop push mov or dec push test (bad) jnp push or sub jmp xor jp,pn ljmp sub add push sbb add inc mov or jmp popa push shrl sbb inc sub jmp mov push lock xor xchg push xchg not or (bad) push shrl popf stos rcll pop xor sbb mov cltd inc jae lgs pop mov das mov dec mov fdivr sahf loop inc add pop imul pop xor (bad) or test dec cld fwait shlb bound (bad) xor adc lcall cli dec cmp int (bad) add sbb aaa neg adc sub ret pop fisttpl aad inc cmp or push xor cmc insb daa pusha inc icebp push das push jmp cli hlt push movaps add or fistpl pop mov add fsubrp mov add (bad) aam aam fcmovnbe sti push or fistp add adc aad sti jo jg bound jne dec iret dec call rclb sbb mov imul or xlat testl add (bad) loopne pop aam repnz nop les das (bad) push push imul mov lret sub lock out or gs idiv jb mov xchg jbe sti cmp pop lea mov imul add mov addl xchg ficom cmp je ss mov sub mov sbb insb or ja xchg rclb sbb push lock fisttpll es ret pop add aad jmp lea cld (bad) mov cmpsl hlt add lcall das ja lret stos inc gs sub dec pushl and push pop dec fnstsw jbe shrb repnz jb into inc (bad) mov pushf (bad) pushf inc xchg cmp jae pop or push (bad) inc mov xchg mov sub daa push repz jmp xlat movsb inc push pop sar push es dec mov cwtl popf hlt data16 nop ja or enter xor jns and jmp pop movl mov gs mov dec fsubl adc dec sub add sub dec inc (bad) fmuls mov ja jo iret and ret dec mov pusha sti test leave imul push jnp fstl mov call mov lds test rolb and into jge mov pop js std call sub in xchg mov loop inc or daa mov jle mov add push pusha dec outsb popf ret dec dec pop xchg pop out mov test pushf add aad jge xor out cli mov mov lds adc aas mov in mov jecxz scas mov sbb repnz xchg (bad) mov mov hlt or fldt mov idiv rolb pop (bad) xchg fnstenv or mov outsb and out testl mov mov data16 add jmp jno cmp shl jg or dec loopne mov popf faddl add (bad) add pop movhps mov (bad) aaa push scas ret inc push daa stos fs pop or pop (bad) xchg mov mov cs les and out lods adc jg xchg out mov cltd xchg dec in push js rcrb in dec cwtl add mov ds and cs add xorl mov inc push out and icebp mov loope mov pop xchg call jg add (bad) add jmp lods push sub rcrb xor pop sahf leave adc xchg (bad) push jmp xchg push (bad) jmp fucom repz pop int sub mov inc push pusha xchg je inc nop cmp push sub (bad) adc das push mov out xor push dec into fimull dec mov pop push sbb bound push jmp or pop dec mov insb mov pop sub jno pop das loope add ds dec adc push inc mov dec mov jle adc xor dec shl and add cmpsl je aaa aas test inc sub data16 sbb fabs das pop xor lds (bad) sub pop mov and push or aad divw adc sbb pop jle xor sub pop push ret inc sub icebp lret adc mov imul jg test push push insb add (bad) pop xor clc or pop add push fnop ja mov push mov adc aam scas and mov mov (bad) xchg push mov sti nop inc push rcrl mov ret movsb arpl push lret inc and ds mov add lcall add mov es lds push add push mov add ljmp pop add dec push outsb out movsl jl sbbb (bad) clc rcr out add fs arpl sub inc lret and dec jecxz push ds out mov dec adc add jl mov incb ja movsl shlb adc and and ljmp xchg subb mov das sub ficom popa jl mov push pop cmp mov jmp cltd rcrl xchg cmp aaa jle sbbl add (bad) cmp adcb cmp mov or cmp loop vhsubpd add clc mov lret movsl sub movsb mov pop popf jne or and in add nop fs cmp jnp and (bad) xchg sub add mov mov scas mov mov inc or push rcrb ffreep mov jmp icebp and jg fistl pop mov aad mov sti adc out push ret daa out adc aas jle sbb push inc test clc js push mov icebp sub add iret mov neg cltd nop jo cmp cld cli and (bad) lahf call pop push je int jl adc popf insb push (bad) test lds jmp adc (bad) xchg mov add xor push add orb sti inc jmp (bad) adc jno xchg cs sub push push jl xor pop fdivrl out sub jnp mov lret ret sub lahf loope mov loopne add test add mov jge faddl fdivrs mov sahf pop or sbb out pop test or repnz cmpsb (bad) sub dec sub sub sbb imul loope ret test pop push xchg push repnz movsl lahf or test ret sub add add dec cs pop add jl dec or mov icebp cmp dec loope jns push sbb inc loope (bad) repnz jl jg jmp sbb pop ret lret out inc and sbb sub pop mov testl mov shr add int3 or enter xchg and or adc cltd push jbe nop sub mov fidivr ret pop xor mov pop push push or jmp pop inc data16 mov pop stos sbbb push (bad) cld xchg loop mov or mov mov mov mov jne cmovae push sbb rcrb es mov lret js dec out add sub cs mov jecxz jmp mov dec movsb imul movsb cmp add push mov lods push push push cmc inc pop xchg push push jmp and not scas mov push sti mov push repnz mov add outsl fisub mov movsl xchg pop push inc mov scas mov in fidiv xchg inc xchg push add in mov dec xchg lahf pop loop clc bound adcl adc dec scas dec xchg es lock imul call int negb push ja imul mov mov cwtl mov ficom xor stc mov ja js cmpsb (bad) jnp (bad) imull sti mov lcall lock std lret jle dec pusha xor xchg mov mov leave jbe push sub dec sbb mov sahf push out fs stos xor roll pop jo repz lods add mov jnp mov and sub iret out jmp lea int imul push pop jp dec lds jmp js mov or test movb pop xchg rcll das jmp les dec push and pop xchg xchg push cmpsb sbb cld movsl lock jge rclb bound (bad) mov in in cmp mov inc in lods and mov xor test or ss jmp (bad) pcmpeqb popa aam das pop cld (bad) lock dec push lea xchg sbb fsubs nop in push out mov or ss or sub (bad) jg mulb mov insl pop jae xor add ret adc pop push sub dec xor ja jno xchg add repnz add shr into xor and dec mov cwtl jns aas adc cmp push or pop repz inc or les mov push inc cmpsl jp fs jl mov inc insb mov lcall and mov jmp push mov into call inc xchg mov out or scas lea or add adc push pop or loope pop inc pusha mov (bad) stos lds outsl sbb cli lcall or es (bad) cmp cld cltd fsts inc sub sbb dec xchg lods xor jl dec mov push es add mov mov push sub cmp add (bad) cwtl daa and xchg dec pop lds fdivrl test inc sbb fmul (bad) lcall mov not (bad) pop int3 mov inc jno jmp pop or cwtl rcl imul mov daa stc aas xlat inc fimull repz jmp sub jle shrl push push lea sbb dec int pop mov mov je mov jecxz sub add inc push mov fdiv mov shr push mov shl ret loop imul lods and in push ds or pop sub cmp sbb dec xchg lds mov pop pop mov decb mov mov (bad) mov mov xchg lret xor loopew jge push nop push movsl stos in or mov mov jmp adc push add pop (bad) cwtl or das sub jns push xchg stos mov sub lea xchg fdivr pop insb mov and adc add lods adc pop dec leave mov cli xchg sbb and sub adc int add or mov cmc or adc (bad) shrb clc out or sub pop pop and mov jl cld or dec jmp leave jg dec jmp shrb addl cwtl jbe ret int3 xchg lods in jns movl ret fcmovu or aam (bad) test cmc sbb mov in dec dec fwait pop xchg cmp test or xchg mov adc leave jp adc insb adc scas push cmpsb cmpb jae repz push inc movsb jp mov mov push addl adc jae mov and mov xchg mov sti ficom xor insl cld inc nop mov and cmp sbb lds or dec jecxz ds add inc cmp shl jno insl add test (bad) adc inc stc jg out cmp dec mov imul inc mov imul sub insl adc test jo and movsb shl add sahf mov jge std xor mov daa in push je push sub pop jb (bad) repnz xchg jo xchg ficom in mov shr shrl les lret or xor jo dec and xchg or dec jle mov dec or push rolb or (bad) into popf push push out xorl hlt in (bad) popf jne (bad) outsl xor aad iret mov into (bad) test mov clc dec sub sub or mov lahf mov dec pop ljmp mov adc neg movsb push stos adc (bad) scas inc pop mov in jno sbbb dec pop push das loope dec or daa neg push push dec jmp out add dec std add popa push or inc (bad) outsb add xchg in and add jmp inc adc out and cs add rolb inc hlt lock leave popa cwtl xor std iret push popf xchg into ror lahf and in aad pusha jg jl sbb sbbb nop jp mov adc xchg sub mov sahf mov xor push mov mulb dec sub dec sbb inc jns xchg pusha iret push add popa test fcompl add add stc cwtl mov add fmull xchg jp mov and mov mov cmp inc jnp pop loopne out cmp and jbe ret pop adc inc xor dec ja mov jp unpckhps push xor daa rol mov sub add xchg je cmp das loop jae cmc lds lock xor and test icebp sbb popl jmp and in sub pop mov mov daa pop add fsubrs hlt mov mov (bad) hlt (bad) shrb call test loop mov mov scas and jl mov push or push cmp sub xor pop sbb (bad) xor ftst adc cld cmc mov fadd inc testb sub mov daa aaa sbb js test sbb (bad) jbe sub (bad) mov inc mov lods stos fdivs push fs xchg les xchg lods push pop jb adc rorl and scas movsb adc addr16 mov xchg shr dec pop and jne mov fbstp jg stc test or roll mov jecxz add xor push sub or orl ljmp mov imull pop fisub stos repnz (bad) (bad) mov ffreep lea or pusha mov inc and add mov mov (bad) mov inc push (bad) cmp mov adc fiadd fsubrs sub fs enter cltd and and mov mov test add xchg inc or das ja sub clc inc pop mov mov fwait adc xrelease in incb xor jle xor jno add (bad) push push lods stos xor mov mov scas inc insb push cmc inc jmp push xchg sub lods enter add or sub mov shlb xchg mov cli mov repnz in push mov lret sub leave and jle jns (bad) jbe shrb cmp dec pop mov sbb in dec cmpsl pop add xor mov xchg lret mov and xchg sbb push and sub jns jae ds push xchg sub out das sar push inc sub and aam dec dec pop add mov in lahf add jbe adc dec pop or cwtl pop and js or out jnp inc mov sub and es add fs ss mov sub loope out cli and pop add sbb cmp stos jae add out adc (bad) sbb daa pusha push sar push cmp leave rolb daa pop push popf in dec push test jne adc sti data16 push mov (bad) es in add in scas (bad) lock cs jg push push enter testl push jg xor adc mov jp cmpsb adcb jb pop in inc lret ds divl jb push jbe add xor ret bnd push mov lahf cmp lret xor push dec xor out jne fdivrl xchg mov lcall icebp add int3 fmul sbb dec xor faddl mov dec mov push cmpsl aas or inc subb inc subl cli and cltd rorb mov (bad) das (bad) rclb repz jmp aaa jl xchg cli loope sub mov iret daa pusha out push mov push and ss jne ret out add mov sahf sub loop jnp (bad) hlt xor push jb out sbb cmp add mov jmp mov scas test fildl adc or inc jnp or cmpsl jae cmc adc pop call inc push inc cmp jns shrb xchg push in jp mov mov repnz out imul add icebp mov idiv jp (bad) push aam leave pushf or inc jle mov mov repnz lea shr stos addl cmc aad test fsubrl mov xchg adc xor xchg push clc das mov add dec dec pshufw jnp adc in push mov or ret daa sub sbb lret cmp cmp mov mov les inc dec loopne add ds movsb dec pushf imull xor and and xchg mov dec gs xor xlat out in daa mov (bad) sbb pop fbld scas mov int hlt (bad) dec or ljmp jbe das cmp lret enter lret inc mov fist sub xor lds jmp hlt into or (bad) or cld shll test andl adc push andl push mov mov jno inc jb insb pusha ds popf or adc test mov or fnsave mov inc in ret imul (bad) stc adc les mov mov mov (bad) das sub sbb or or (bad) add or pop call or rorb sarl pop ret mov sub mov pop mov cli jo cmp shl lret test das aaa jbe add faddl push push xor jl cmpsl push fwait popf cmp dec shrl ret dec mov push movb out mov jb jo push push jne cwtl mov add adc xchg mov sub bound inc movsb hlt lods add cmp dec je mov scas sub cmp add lds xor push addb xchg fidivrl jl adc add call push inc sbb adcl lret pop sbbb (bad) sub int test je xor fimull inc cmpb pop mov inc mov sbb pop mov add ja imul test add jmp sub (bad) ret lahf mov sub into cmp dec into and fstpl xor orb add aaa jmp repz sti mov add repnz (bad) jmp sub movsl add push stos mov mov xchg cmpsl lock bound and jle fimull sbb rorl sub mov popa jp and bt les negb test dec mov jp xchg push inc xchg loope fisub dec pop les dec stos imul cmp jmp loop shr shll jmp les xchg popa dec push add fdivrs notb pop jmp sub add cld mov jg fsubs fild out orl mov js or sub dec loop dec mov icebp cmp mov popf push dec mov test mov out popa fdivp pop ds xchg popa ret jge dec scas sub (bad) mov lods xchg test mov pusha jo dec adc cmp or add (bad) jmp push (bad) aas and clc or ja rolb xor testl lds loopne jo dec cld xchg add (bad) daa or pop xor jmp int adc jg test (bad) lret lock mov movsb repnz push push mov leave or outsb and push lods xor or (bad) pop push in or cmc dec push test imul jmp test jbe imul pop jle adc clc enter inc fldl jmp jb cmp pop pop inc push and icebp shrb pop sub mov in cmc out and jl push sahf add loope rorl mov xchg and aad inc sbb mov test dec sahf pop popf jbe rol mov and subb push aad (bad) jns push push jo adc ficomp sti cmp icebp imul jl and into loope imul pop cmp dec adc sti dec movsb mov or lahf push (bad) sub pop rcll cmp jle out addr16 adc shll add test scas mov jnp add out adc out xchg hlt push ljmp cmp dec pmaddwd or jbe inc daa and ljmp stos add cmpsl or fadds je and cmp inc mov push mov insb push add aaa (bad) icebp mov xchg outsl xchg inc cmp rol push and mov ds adc or adc pop mov iret data16 jle ljmp inc mov or cmpsl shrb cmp addb fimul pop mov int ret pop pusha ljmp gs in je sbb das add mov out and sbbl cs mov lods pop mov add jns xor sarb jecxz (bad) ljmp pop into pop jge xor add movsb xor orl mov bnd mov add aad (bad) mov inc mov addr16 andps mov imul (bad) jb dec fstpl mov rorl arpl adc mov xchg xchg dec insl aas xor sub mov rcrl or cmp inc (bad) adc inc inc (bad) or sub mov js stos iret mov add outsl and jb fdivrs and bound mov ja push ds or inc ret jne add sub nop js sbb sub in add jnp cmc jmp aad inc push neg xchg (bad) stc push or jmp and lds repz jno cwtl jbe rcrb daa push sub out add push mov ret jb rcrb sub mov pop sub pop and imul (bad) es add push cmpsl jmp mov sti jb leave push push dec decb in lcall insb xchg sbb fiadd (bad) pop inc or mov pop daa push jbe jno sarl add mul push cs mov and and sub mov or dec mov jge mov sub mov and and mov jne adc jns das lods xor (bad) neg mov int3 jp out mov cwtl test mov adc fscale jne test rorl and mov jns int and add in sub pop adc stos push add inc les push jo (bad) ljmp addb add roll je or fmuls aad stos aam rolb sub orb pop and inc push mov mov and jecxz ficomp lret (bad) or sbb gs inc popa dec in je inc rol lret (bad) xlat cmpsb lods (bad) push in push pop jbe loop jo stc sub out popf adc cmp mov adc push pop mov jae std lret adc in outsl add mul stos cmp mov mov ljmp or js jne cli movsl jne mov test cwtl addb cmp stc mov inc add jmp sti lret stos into adc leave rolb bound in js dec in movsl fisttp imul mov mov jmp icebp int push dec or lret outsb xor or or daa push pushf aaa add pop nop loope mov xor inc cli call mov jecxz mov xchg jmp loope aas lea mov mov out movsl xchg loope and das mov inc sub xchg inc push push jne dec sub sub adcl mov add inc sub sub add sbb movsl das ror mov sbb and sub add jg call dec jb sbb inc int3 mov inc dec (bad) movsb jb xchg ss ret fldenv jmp jb mov jno or dec cmp outsl cmp ljmp lcall sub and jp mov lods mov add aam pop ret sub adc mov dec loope in int out aad mov adc loop pop ljmp and cmc negb daa push dec std xchg mov push sbb jns pop in out mov imul add xor push ja pop orl sbb sub inc sahf pop and lret cmp out xchg test loopne jmp dec add std add xchg push xchg movb clc mov in xor mov frstor adc test fisttpll or mov test or daa push in push mov test subb je addr16 test sub (bad) jg fucom jb push sbb push jmp sub test (bad) mov aaa push mov mov jle adc ficoml mov pop cld outsl mov dec aaa loope sbb (bad) jo iret jge pop (bad) xor jmp jle scas dec sti adc rcrb xchg lds nop fnsave mov mov or xlat push pop cmp shr addb jp xchg fild jns xchg mov mov fistpll outsl inc or loop cs sub (bad) neg cmp adc test cmp add push push shrl test lret or jle in add pop test add (bad) sub and leave add sahf (bad) mov xchg mov mov adc fistl or fldt imul mov loopne out sub push inc mov lods push roll mov cmp mov jmp pop push das xor xor int3 mov mov cmp mov stos mov lods fnstcw xlat in sbb mov rcll push je push push push add push jb or inc xor repz repnz xchg jo mov pop hlt inc cltd inc scas push jne push add les dec mov ret xor mov cld jno adc jo mov push and popw pop add xchg ret pop dec lods adc pop outsb and push cmp adc dec adc (bad) xchg mov push cmc les push popf fcompl lock daa sbb clc daa or push jle fistp jmp cmp dec xchg inc inc sub jle scas jno or mov cmpsl cli mov pusha xchg jnp movsb (bad) jecxz mov inc xlat add inc imul sbb cmp add adc jp (bad) mov push jbe mov push push xor jne fdivrs les mov pop and lods leave mov jno mov rclb jmp aaa cmp das in bound dec xchg sahf add pop pop push add out (bad) aaa push dec push dec test lret (bad) cmp mov mov mulb mov push les or neg aam es dec pop mov mov rclb adc push notl adc in pushf shrb mov xor push push cmp ljmp fbld or fistpll das mov pop pop cmp scas out test mov adc scas (bad) pop xor pop inc xor addb push arpl mov (bad) pop lahf cmp push rclb jp pop pop int3 add std sub cld aaa loop ja or or push adc sub int (bad) call push mov movsl lds cltd stc and mov jnp stos jl or insb icebp sbb adc xor call stos and (bad) addr16 mov or fistl dec cmp shl sarl add add sub dec add inc sbb lret in sub xchg add mov stc insl hlt (bad) int add fiaddl mov ds pusha mov ret or and add jmp repz sub je sbb mov lret std mov scas les or iret dec out mov mov pop gs pop mov push and gs inc fnstsw std pop lods mov lret lahf scas clc adc orb push sub scas jmp push dec push outsb clc add ficoml iret inc mov sbbb (bad) adc sub loope pop add mov imul lea pop jno pop cmc in or mov das lret mov insl xchg or fs push add std pop (bad) jno mov inc push add add adc sbb into pop sbb aam mov stos outsl or mov bound xor xlat (bad) or push lods push notl jno add jmp lea cmp pop mov das mov pop inc js cltd pusha push shl or arpl jo pop enter and das sbb lods adc push mov mov cmp sub mov xchg xor test dec add and das fcoms fisttpl jmp out (bad) mov add dec push pop dec xor inc je adc decl sub bound add cmp sub dec sar mov add out adc shrl cmp mov mov int addr16 pop sbb fldcw out sbb or adc push pop or sub cmp mov sarl (bad) adc add sbb stos lds inc cs push test stos cmpsb fcoms shl or sub pop cmc bound push mov (bad) jne xchg fiaddl (bad) xchg ficoml lea pop push pop push push lret scas inc (bad) jg dec in cmpb inc sbb inc sti test jns mov adcl pop scas pop mov add add lods lods pop adc jno les cmc add jp cmpsb test scas (bad) xor into push (bad) inc cs xlat jnp pop sub or xchg (bad) jl sub dec leave jge mov push jg lret scas pop jmp sub lods (bad) fdivrp adc inc pop shr push add inc jb subl out in jne leave xchg xchg mov (bad) and fnstcw adc ja out sub jmp imul fdivrs mov mov cli mov sub dec jo mov adc fldl test vpunpckhbw inc (bad) or jmp add mov fnstsw imul lea fucomip sub pop clc rep jmp enter nop pusha add test (bad) ljmp jmp sub and cmp pushf xchg data16 mov stos popf or std pop sub sub push inc nop rcrb test push push mov adc dec call cmp pop push roll cmp movsb mov inc jmp adc scas fs cld mov pop (bad) adc or push dec int3 daa adc push (bad) jns je test (bad) and outsb pushf pop pop std mov lret push inc sub push mov inc lret xor (bad) xor pop or std orl scas imul cld cmp xor out adc (bad) pusha out jns or das pop rcr pop sub mov inc out xor imul loope leave repz dec mov and fidivr pop loope outsb cmpsl iret adc mov out sub add pop mov cmp fidivl rolb add and adc sub jnp adc sub aas dec dec mov hlt jge xor stos (bad) mov sahf dec jp out push mov popf inc adcl fs jo dec and shrl imul adc push addl imul dec jb mov cmp sub fimul xor jp inc mov in sar adc pop sub ljmp rolb (bad) mov cli mov es lds jns pop mov and or dec test mov outsl dec mov jne fs pop lahf mov insb cld test ret (bad) jo test inc mov rolb sub mov mov mov cld ret mov xchg push mov sbb xorb inc into add add call pop pop (bad) dec aas das mov stc mov mov rorb cmp inc popf mov outsb outsb mov imul mov punpcklwd sub jb loop lahf lcall das mov jmp faddp pop sub in (bad) pop push dec add or mov sub add das lock push inc mov add fdivrl push shrb daa mov std push mov mov mov add int or aaa (bad) xchg ja insb inc pop or or push and pop sub (bad) lock pop inc ds jb xor frstor lock rorl sub xor push xchg addb mov dec sub or xchg faddl sub adc loop jnp push sub shrl jmp out lcall push das inc popa (bad) inc arpl adc sub (bad) scas jmp dec jns cmp mov add jecxz inc insl adcb repz xor pop add stos mov adc jecxz nop aad in jp inc outsl xor ret mov push dec inc cmp insl fwait cld jb (bad) mull sbb pushw lea sub fbstp popa mov jmp dec adc das mov daa stos push lcall imul adc sahf xchg dec jg mov cmp or call jle mov (bad) cli hlt mov mov xor les pop jb leave mov mov adc dec popa ret in cmc pop dec push jmp aaa lock idivl sub inc mov sbb adc adc rcl mov cld or int3 xor jg aaa sbb (bad) xchg jge mov or add xchg cmp insb fsubr adc add pop and sbb jmp ret or xor mov loopne sbb mov mov rcl dec stos add (bad) testl dec nop xor movsl lcall fdivrl push cwtl lret rclb jbe fcompl add int3 sbb xchg xor sub add add mov ljmp xchg xchg xchg add jl das and jno loopne dec or push xorb push cmp jp fwait icebp popf sub ds ljmp notl sti (bad) dec sub add pop jbe mov add rolb sbb imulb pop jg lcall adc jg push (bad) repz xchg das movsl jmp outsb mov xor out es push dec jp or adc fadds or ja cwtl movsb add pop mov mov dec dec or jns repz and add or add or jno mov dec cli (bad) fs rcr dec add (bad) in std dec mov or mov jo mov mov cmp daa xor psraw fnstcw fmuls inc mov stc jnp push (bad) lock loopne jmp xor je in mov scas sar iret out cmpsl shrb imul inc bound cmp fsubrs and pop hlt std pop test pop sti jge aas cmpsb xor pop dec mov mov rclb lods add fisttpl shrl loope lods test pop inc es insl insb add lret test or inc push pop sub cmp add push mov sub xchg push lret mov (bad) jg lea lret dec jmp xor push inc clc adc ss xorl mov dec outsl hlt jle loope fiadd xchg movsl cs lret jmp repz icebp gs shlb out xchg xor pop sub scas xor add xor add dec adc jmp xchg stos xlat mov fildl lret pusha movsl cmpsl movsb inc xor add lcall fsubl lds loopne in add sub mov lcall xchg lahf popf mov cmpb cltd add and dec sbb and in cmc icebp bound or loop pop popf add sub dec dec sahf push push push push fsubl aam inc jmp mov out movsl stc xor jbe push mov or dec or lea ret dec inc test movsb test lret add lret dec out dec push loope add push popa je sub cmp pop mov adc mov sub push pop mov fstpt mov (bad) jb aam xor mov or sub add popf stos ss gs dec and (bad) (bad) (bad) sub pop enter out adc xor or pop jae mov add ss stos push lahf xchg iret daa es push mov inc push nop (bad) fild clc movsb sbb repnz fdivrs pusha jo (bad) inc dec pop test sbb jmp subl ljmp mov or xor push gs call mov lock int3 and mov sarb add in mov lret cmpb dec into add inc aas cli dec jmp push call clc dec stos push xor out vpinsrw dec cmpsb and sub jp pop push dec xchg push jno mull jg,pt inc movsb mov xchg push jmp repnz sbb jb inc jle mov inc add std inc or std sub cmp inc push call mov cmp std sbb xchg dec icebp xchg mov popa and in dec adc ret sub jbe cmp pop loope jmp add clc ret lret inc or mov pop pop push push in pop (bad) fstpt and or int3 sarl aad (bad) sub add inc mov arpl adc pop or xchg sub popf test mov dec decl stos std push daa push adc jmp inc mov xor adc cmc mov lret add sbb pop push nop jle leave cmp dec adc pop pop in xor push jecxz adcl daa push cmp sub (bad) lret lods pop mov jne,pn pusha sub hlt push cmp pop testb lds cmc enter jl xor push fs sub adc and add pop pop es push bound cmp pop xor add (bad) nop jbe das in mov cmp inc jnp test mov push add call sahf and sbb mov das xchg jl dec scas mov mov scas add loope fdivs mov gs inc call adc jo mov rorb cmp nop pop sub sbb push rcl dec or hlt add xor xchg xor or jne enter adc or push std add dec jmp loop or sub lds add test cs or mov xchg add adc push aam inc out jmp mov mov cli jmp inc xchg sub add fsts ljmp push cmp jb or and push push mov push outsb ret test pop xor fmulp mov fadds pop cwtl lret sbb cmp call mov cmc sbb jmp or or dec xor clc sub dec out xor lds scas add ja xlat pop push push pop adc xchg call ljmp pop add sub hlt cmpsb (bad) lret mov pop add frstor cli mov outsl mov (bad) aas jnp jecxz dec or adc cmpb test jbe cltd aam lea popf dec mov and sub incl xor pop push or pop aad stos ficomp jl or repnz sbbl imul pop scas sahf inc xlat mov cmc int xor inc sarl cmc push or cmpsb stos jg,pt sub icebp adc jns inc jle bound xor sbb stos movsl faddp push mov out das cmp cmp sar dec inc pop incb pop jmp or push call push adc loope and mov cmp push pop or (bad) mov ret iret (bad) xlat and xor and clc popf cmp int3 pop cli sti out ja and (bad) or in lods or popl xchg mov mov cld mov ret or add sbb sub push orl push unpckhps push in fwait les stos xchg jge ret xor mov sub xchg mov xchg inc add rcrl mov or mov add xchg gs pop cmp sbb sbb inc cltd nop imul fstl inc inc push sarb js iret pop incl popf sbb ret jo lock push mov movsb add out std rolb leave inc mov shr add xor and fstps loope das cmpsb jmp rol arpl test xchg sti (bad) jmp xchg xchg jns dec lds fisttpl in outsb lea pop and jne xchg movsb xor push dec push mov sbb insb subb add insl je cltd inc daa pop sti scas jne (bad) hlt lods call or js,pt jge clc add jecxz imul popa cmp add mov inc mov pusha nop popl cmp and mov in mov test xor sub test mov add add mov data16 add sub call cld std and movsl dec (bad) mov ret hlt mov mov pop xor scas test inc and jle rolb cli outsl sbb lods sahf or ljmp repnz or push jmp lods dec push mov push xor scas rorl and pop out orb sbb fsubrl imul mov sbb std adc dec xlat loopne rol ret iret js pusha push stos dec cld popa dec lret xor mov dec data16 dec push pop xor dec rorl imul stc fldt add ljmp dec popf out or push std fs and add mov fcoms gs and and xchg pop in outsb inc mov push or sub adc or shlb sub rcl mov mov scas mov loopne inc in mov inc push leave sbb cmc ja jb jmp repnz rorb and call jne jmp sahf faddp pop and mov push repz mov pop fnstenv out pop cltd aad (bad) jmp sub inc cmp les mov lods jg cmp add jbe push icebp adc or popa js and test pop lcall add jmp insl cmc call ljmp mov out test adc xor inc pop inc jae lds pop int3 dec sub jmp stos pop add aaa int xchg jle sub or ja pushf and sub push insb fisubrl movsl fild and icebp pop xor ja cs and jg push scas jb stos xchg jg in das jmp push test jmp shr fadds outsl mov xchg adc rorl mov and mov (bad) push mov mov inc sub (bad) jmp lods push mov sub stos lods jae jg hlt fist movsb adcl mov cmpsl dec fnsave xchg stos hlt push int3 pop out shrb mov mov pop roll push sub out dec or call jl push inc xor push cmp and push sbb sub or pop push mov (bad) mov fnstcw leave add scas fs mov mov (bad) push mov fstps shrl jmp add pusha jge sub pop mov jmp sbb inc add xchg in xchg out cmc (bad) rcl sub pop mov push fldenv (bad) shrl sub imul in dec cmc shr je cli sub mov push cs inc jp std pop bound aam sarb lods or add cltd imul or (bad) and daa lcall jg pop (bad) shld sub adc pop (bad) loope jp cmp sbb and mov dec sub jl sbb pop es mov pop movl sbb push jecxz lods aad fisttpll cmc sub sub push cmp pop repnz push xchg fist insl aas ja enter inc adc cltd add (bad) xchg push mov pop xchg sbb push loopne arpl jnp adc sbb iret test jg mov dec cmpsb inc jns aaa in std sub cltd jle cmpb dec and add xor stos push jno imul jmp fisub dec xlat cwtl (bad) push fwait inc pop test sub data16 (bad) dec stc push or in pop cli mov pusha mov mov xor ja dec inc mov es cli testb sbb push lahf dec jmp sti xchg pop call aas movsb xchg iret or or loopne mov mov push push imul jns dec cmp or pop pop xor xor pop fstpl mov add testb add pop xchg stos add mov js sbb add jge ja aaa js inc pusha inc cmp add (bad) dec or pop mov lds jbe dec and imul jno adc mov and sti and int xor (bad) int3 xor mov jg out ret cmpsb pop pop std loopne call or jnp mov jmp les movb push or xor cmp push cmp (bad) jmp out dec xlat push add cmp jmp inc push push pop pop cltd push add ret (bad) (bad) bound stos rorl outsb (bad) xor insb aad fisubr or lret mov arpl mov or inc mov pop adc add bound or std pop cmp adc jle fildl push ss push pop dec dec lods cmc adc repz sbb add daa jg fadds add dec and pop lock (bad) mov fs add hlt mov push push sbb (bad) dec div cmpsl sbb out jmp aad add push mov xor lds movsb call xchg pop lods add push adc or mov inc stos cmpb pop loopne sub scas mov mov jae cmpsb daa (bad) jmp repnz or aaa add mov xchg or or fs and xchg gs mov mov imull add decl or leave stc or xchg or je js push in jg test or scas mov mov scas inc cmp xchg xor andb push push cltd hlt nop push sub inc mov add mov aas dec adc test fadds xchg push inc and loope sarb dec pop loop pusha pop clc add jae adc jg iret adc and inc stos aam cli iret negl shrl jmp (bad) and jb mov or sub lahf adc andl inc mov xchg (bad) lahf scas int adc cli rorb push jno lods sub bound push pop (bad) jmp push or fsubs mov xor aam cltd pop push enter dec sub adc pop mulb mov sub push mov xlat sub sahf mov iret fldl2t (bad) push mov insb dec jo sarl fdivr add sub xchg jnp add fdivl sub pop cmc add mov mov data16 (bad) and ljmp sub popa pop jmp sub pop in aam add sbb or fldenv lret jge xor je mov lds ja jmp aaa lret fdivl add sbb pop push jl idivl nop cli push fcmovu add lahf push ret sub cmpsl inc or popa pop inc enter roll cwtl ja pop sub add adc je add stc inc inc jnp push add (bad) or insl fwait adc push (bad) push aaa in push gs lahf or add lea xor mov inc pushf cld add cmp push test orb inc xor xchg clc fsubl cmp cwtl nop dec mov jle cmp mov inc loopne push aas push mov jmp push pop movsl idivb iret sub test imul pop fcmovu daa cvtps2pd add cmp insl add ret or inc mov push pop pop pop aaa imul mov bound rcrl sbb cli mov fildl mov dec fldln2 fildl test btsl push test iret in adcl jnp inc insb xor sti (bad) push push leave js add push (bad) jns cmpsl push scas insb xchg jmp dec push or mov sbb (bad) and pushl shr sti jg loop ljmp pop add push rcll je repnz sbb inc or popa jbe sbb cmpsb pop (bad) mov imul cli inc test mov leave push jg dec sub std pop push cmpsb scas testl push fmull js fs (bad) sti cmp std clc adc insb push pop je ds xchg push xchg pop xlat adc sahf inc hlt adc xorl bnd pop mov stc inc mov or (bad) and cmp stc jno xor xor or jmp pop inc int3 inc (bad) mov push cld int (bad) loop sub mov mov imul mov iret cltd fisubr scas and imul lds popa into sti xorl xchg jp pop push xor mov jg jp or mov xchg (bad) loop rcll js,pn xchg or inc sub loope (bad) push cld mov or add or xor (bad) lahf hlt aaa jecxz sbb out cmp test rcll ret mov outsl mull xor sbb icebp scas loopne dec adc adc ljmp fs xchg xor jg int and rclb fsts or jmp daa int3 pusha orl cs (bad) xor sahf jno mov outsl mov and notl and sub in roll or fidivr and (bad) adc mov andl por ds sbb mov insl xor xor movsb sbb xchg lret cli aad mov jg mov jns daa add sbb pop lods test push adc test and cltd test fsubr ret add jmp jo dec or sub flds jl (bad) movsb cmp sahf lea xchg bound add dec dec xor aaa jmp add mov sbb call sti xlat pop lahf addb add jge rolb imul (bad) icebp les jmp sbb ja fistpl xchg lahf das pop jbe loop cli pop in sbb pop mov push or xchg cmpsl adc decb sarl ret ds xor cld cmp or dec outsl leave insb dec scas icebp dec cli das mov shrl inc aaa push push ljmp mov and cmp adc adc cmpsl xor cmp ljmp xor call add data16 pop in push out and push leave in xor dec and inc loopne pop cmpsb cmp cli or cmp mov movl loopne dec mov push movsl xchg mov (bad) ja jb aaa dec mov test push jne mov jno (bad) lcall inc into push push addl adc cld jbe or and xchg hlt fwait xchg mov or (bad) cwtl jnp dec inc adc inc mov inc movsl mov and mov lcall nop xchg test inc dec xchg inc mov and mov adcl loopne mov fiadd and xchg (bad) mov in push cmp imul xor adc mov add lahf mov mov fadds inc rclb add push jp int jne lods mov leave mov rclb add outsl repz add in dec xor adcb mov rcrb enter cmpsb mov shrb subb mov dec and bound push fisubl ret sbbl das insb clc push jbe add fiaddl adc cmp push sub sbb ret xchg mov fstp xor xor pop or mov lcall add push lret jbe jo lods or and push gs sbb push sbb mov add jle pop lahf or test inc test rolb add xor jbe mov mov (bad) and add xchg popa add cld scas sbb imul (bad) xchg lret add jae insb add hlt jb pop pusha sbb and in mov sbb es or inc xor nop cmp (bad) sahf insl sbb pop mov pusha jl jae add stos add out jbe fdivp adc add mov lahf mov ljmp or rclb outsb add iret outsl mov test jge lret test les jae push imul sub mov add mov dec add pushf icebp std xchg dec subl rcr push mov lock pushf xchg push (bad) cmp jle hlt sbb sub outsb push in mov mov pop xor push mov arpl mov add (bad) enter jl push (bad) idivb add xchg out cmpl xchg (bad) jmp fcmovu lods xchg mulb loopne add add dec mov fnstenv add icebp int3 inc add hlt test sub orl sub cld daa lea jns sub dec pop add in jp pop inc ljmp addb mov test add sub or loop push cli das xchg pop mov adc rclb xor lret mov inc popf stc sti mov out inc mov pop add pop out test push fbld add leave mov xchg pop icebp jae outsb scas shll add xchg mov adc loope sbb pop jle inc add into movsl (bad) lods sbb push rolb je add outsl add cwtl mov add sub lahf movsb xchg sbb sahf add rolb icebp and xor cwtl js add pop cmp sbb and add std nopl fnstenv sbbb ret sub add sub push prefetch mov mov add xchg fxch jmp (bad) pusha and sub xchg add popf pop fildl jne repz add fwait mov jl lock push scas roll (bad) mov and xchg ljmp call mov push mov fdivs cmp (bad) push mov add les inc mov lcall push mov outsb add mov fadds ror push inc iret xchg mov jne sbb loopne cltd pusha lahf inc in dec hlt mov sub ja jle push lock jo adc sahf repz lods or out or cmp and xor aas jle add lea or jp add adc push lods mov jae add jp inc xlat dec add jnp into adc ss test cltd push mov outsb mov cmp (bad) push xor jge enter (bad) repnz aaa lahf jnp ss add mov add mov repz xor test or hlt add add es sbb fdivs adc mov lods bnd inc dec inc sbb cmp fisttp (bad) fdivr mov mov imul sub xchg fisub xchg mov xor xchg repz pusha (bad) nop xchg mul daa cmpl fsubrl add or test push inc pusha dec mov mov jnp adc pushf add loop std (bad) daa in xchg jnp add xchg push cmp jmp cld add test mov or stos add repnz fsubl out or adc mov daa pop lock and push add stos std pop call mov add adc (bad) adc pop sub mov rolb add stc cmpsb mov adc sbb mov fs pop test es push daa imul jae test (bad) pop mov and ret stos sbb mov push aam fwait add push (bad) push or dec push sub mov sbb cmp pop inc push stc add mov push shlb ja and icebp inc hlt adc popf mov adc mov pop push sti outsl les loopne mov mov scas (bad) out (bad) jg les add cmpsl (bad) dec xor pop pusha dec push add cwtl jns sarb jge ret int sub push test inc cmp ss pop loope dec test (bad) cmpsb sti divb fcompl add je cmovno and add fsubr or aas out ljmp outsl fisub dec and scas add insl jge xadd lret loope push stos jg add outsb cwtl dec mov cltd jle pop lods sarl fisubl (bad) fstps xchg push iret in lahf aas fiaddl lret in push out (bad) mov dec pop orb insl add inc imul and in (bad) xor mov cltd stos dec inc adcl fildl dec push and test dec xchg mov imul mov add inc push inc adc dec ret lea or imul dec push dec and repnz cltd cmpb push lds pop aad fild jle add xchg adc sbb roll cmc mov test mov out cmp ds outsl loope pushf rcrl or clc cmp pop add adc pop cmc and and mov mov jle add or mov sub lock fld es adc ss insb call loope xor sub jb outsl adc fiadd lret loopne stos into cmc mov add out dec ss jg inc sarb scas mov push clc shrb icebp subb push ret add and pop add inc sub sbb jnp mov fisubr jb cmc ret inc lea les add sti loop cmpsl dec into jne add out adc add adc pop ss mov test out xchg ja lods lock aas dec lret popf call sub inc mov cwtl enter mov push xchg and cmp mov and add mov lea lcall (bad) pop stc pop sub lock incb call scas cmp repz add adc jge pop dec xchg sub dec jge push sub add addr16 ret movsb xlat lds (bad) jbe push dec xor pushf addb push adc cmpsl add das je add test push push add in nop movsb sahf sbb lods sbb ja pop add rcrb pop dec insb pop mov imulb jne add lods fbld push xchg orl xchg cmp xlat adc push or sbb (bad) fsubs pusha repnz sbbl inc imul push dec ds in aad pop inc bound or icebp add ret call push dec bound mov pop add ret add loope ficompl mov lock push in mov push cmp sahf jmp mov jae ds jnp add dec mov and mov push test add imul rclb dec stos adc inc (bad) sbb push sbb xchg push and mov or cwtl pop sbb inc (bad) jmp hlt xchg cmp aad arpl push decl xor jecxz add sub lret pop xor mov call fbld or mov push arpl xchg ljmp data16 pop ja in mov andb neg ja mov mov jb mov sbb and (bad) sbb out push xor or jecxz popa (bad) mov add fidivl inc jle ds jecxz add and pop add loope (bad) inc push add push adc and push add fisubl das sbb popl and scas lret mov cmp addb cmpsb mov sbbb xchg ljmp test loopne or xchg fndisi(8087 loopne push iret mov push cwtl into sbb or pusha xor and popa xor enter xlat push or pushf es cmp add inc popa dec mov pop mov add imul fisttpll fs add push push insb sar add sbbb dec sar dec push inc add or test inc mov mov fstpl (bad) lods inc add push test mov or xor mov popa outsb das pop mov push ds js and dec test les inc inc cmpsl or inc adc ljmp movsb xor inc inc mov in addl pop cmpsl mov subb sbb mov pop fcomps fadds sub int lods cli test sub (bad) and jne cwtl scas jo push int3 incl cs xor lea xor add mov push fidivr fadd rolb mov inc andb mov mov mov sbb jg cmc dec aas arpl jmp repnz rorb scas fldl iret into cmp out add sahf clc sub dec and fldenv add and test add pop add sbb add xor (bad) test sbb cmc (bad) js dec int lds in lea mov mov pop into push and pop pusha push sbb cmp mov cwtl add arpl mov ficoml loope leave sbb inc push fwait inc or lods loop jg out pop call jp test pop das roll stos add lahf mov sub adc loopne call pop hlt lahf dec out incb adc dec rorb jo bswap jns fwait pusha mov int sbb sub fcmovne push add hlt cmc (bad) cmp push icebp test cmp cli adc pop xchg and test ljmp add leave push test sub xchg add cltd dec stos pop aam cli add shrd pusha adc pop inc test add pop mov pop je push sub dec inc add sti push iret (bad) xor xor sub and pop mov into pop mov daa aaa push sbb fldpi sti mull lcall loopne stos loop add outsb nop gs repnz jl mov xchg add insb pusha add inc cmp rclb add sub add sub nop hlt add add fcmovbe mov mov or dec cltd push mov or add ret cwtl insl sbb les and mov cmp or cmpb loopne add inc call bound gs add mov fidivrl clc fs pop push adc and mov add push adc inc test xor mov dec jne in (bad) and jnp jg xor cltd stc xchg dec jle add ret in push dec ret add (bad) dec cmp mov into mov add pop mov jae mov rolb jmp add cmp fs jmp pop cld push push (bad) xchg inc test in dec iret adc adc int3 mov sbb xchg bound push dec fwait mov loope dec add push or cmp test cmpb mov loope jb adc and insb fdivp adc int3 aas fcoml sub jp mov mov movsb aas jae push fadds mov cmpsb or sbb repz rcrb add pusha mov adc adc out leave hlt aad aam lahf orl pop roll scas fcomps dec pusha pusha lock out add negl jae test pop jb add orb jmp add mov lcall shrb pop mov add dec clc fdivrl es in add cmpsl jb in add adc gs xchg out jg mov push cmp push fwait rclb fmull push dec jecxz add out std andb inc or (bad) sbb (bad) clc pushf or (bad) jp adc mov add ficom adc push out and cmpsb popa or and les fnstsw cltd dec cmp lods (bad) adc pop rorb mov lods inc pop inc adc cli loopne pop sub push mov xchg or aaa add movsl addl (bad) shlb int3 add push sbb jb cwtl int3 jb nop call add sbb dec add aam mov mov adc dec sbb add jns push pop jl add or push mov arpl adc sub add adc inc scas sbb mov rol negl mov and lret movsb cmp paddw cmp popa cmp (bad) xor mov repnz sbb aam mov mov jmp push jbe jae xchg sub xchg aam (bad) xor jl nop (bad) insl mov scas in xchg testb mov mov mov sub inc dec adc outsb cmp cwtl xor test add mov lock flds clc mov dec mov jo push roll jg jne inc repnz lock xchg bswap repz jae add mov pop push push enter sub cmpsl fmul test ss test (bad) (bad) in lods pop xchg shrb subb push in xchg inc cli rcl aad fiadd in lcall data16 insl mov cmp add pop pushf fsub fwait mov sbb pop xorb and sbb imul xor shrb cmp sbb roll lcall addr16 movsl int rcr pop add jo enter push mov sahf push dec push adc add push fbstp movl dec aaa sbb or add je push popa and add jne les nop xchg xor nop inc add test stos lahf lock mov add push mov stos jae pop mov xchg add sti cmp js add fcomps add scas jb test in add pop adc fadds out pusha sbb fs pushf mov jmp inc imul inc push mov add xchg dec mov fdivrs in shrl enter jmp mov jl or dec add cmc into sub clc jg (bad) and (bad) jo cmpsl mov pop les pop jecxz add mov or imul inc pop ja mov pusha clc sbb push xor add and cwtl or dec test and (bad) data16 hlt push outsb addr16 pop or push sub xchg and jnp data16 into cmp inc insb sahf int jecxz inc mov xlat inc jbe (bad) sub cs jl adc add push std lcall stos xlat (bad) sub outsl fwait add aam cmp cmp jl aad out add outsl fadds sbb dec push imul mov pop push loop mov mov imul pshufw lods shll sbb pop loopne fdivrs in pop fldcw out or fadd mov sbbl inc hlt int aas inc push sub sarl les and leave inc add sub test cwtl add call jg xor clc jl mov jg ds cmp out push push or fildl (bad) es add ret incl mov add or dec mov add and mov inc scas sub pusha sub add push je add dec xor (bad) mov xor lock add rcr nop mov pusha fcmovu sbb add inc adc add ret or and jle adc mov mov sbb jecxz decb sahf (bad) xor dec cmp in in mov stos outsb and push xor mov cmp je mov aam xor pusha lea jno nop add inc mov je (bad) cmc jo add adc add aas loopne cmp dec add or lahf fsub clc adc cmp scas cwtl add or jo cmpsl xor pop dec add addr16 add (bad) rcr adc call and enter mov cmp push mov jbe loopne jae and jle jo xor (bad) in add pusha sbb arpl aas jg mov xchg js add pushf test fstl and jg stos adc test jno mov xchg mov and sbb xchg mov add pop fmuls add in push test cwtl or xchg cltd popf inc (bad) loopne xchg pusha add in js push ds sub mov push push std add mov jne add xor in or pop adc fcoml dec stc cltd and push xor jge movsl pop subb mov push shrb jno jp jo xor es addl repz adc cld cltd inc add sub sahf push je mov enter loopne sbb mov cmp add mov rclb enter shrl jmp jle push test popf dec cmp clc push (bad) fdivr enter cld adc mov outsb addb mov (bad) jns jg pop popa cld dec popa push jo fwait int3 cmc jno rolb mov jmp and lcall addps jne adc enter mov or xor call aaa sbbl pop fimul jns adc roll cld push mov sub jbe inc add icebp add scas jl add pusha add push shrb inc push mov xor lock adc xor cli mov test sbb or xchg and test pop pop sbb xor mov (bad) test (bad) dec addl or push nop (bad) mov add mov or xchg push cltd aad decl js add xchg xchg fsubl into mov sar pop mov addr16 push aad loopne xchg dec pop cmp jb aam rorl and mov xchg call popa push sbb addb ss jns adc fprem1 ljmp sbb adc daa push cmp test and sarl icebp inc inc xorb cmpb push push add mov and xor fcoml call inc dec or aam mov decb pop jo std push add and and les cs (bad) outsl (bad) jns cmpsb mov sub outsb lock push adc and sub adc aam in adc cwtl xchg (bad) fisttpl imul mov movsl inc xchg (bad) cmp mov ja pop xor xchg and or or push ror pop xchg mov jg dec fstps (bad) cli jmp rorb push jp jns cmpsl nop add lea add test and sbbl and test xchg push and sub mov mov adc test pop mov sub test jnp aad add mov (bad) cld (bad) xchg sbb shrb mov xchg out or ss pop jns movsb sub (bad) mov mov fisubl leave repz push xchg mov cwtl (bad) in xor push insb shl hlt test stos lea dec sub ret xor xchg fsubl ror xor mov add add test std dec xor xchg divl (bad) adc xchg daa clc add pop fsubrl roll fs fsubl dec jbe mov stos test add cld add sub test mov sbb in cmpsl rol movsb inc or xchg push jl xor sti jns js add neg gs add xor popf fcoms (bad) ja xchg cmp (bad) sbb repnz addr16 iret hlt pop faddl cmp aad jns and mov mov movb js dec stos xor mov push outsb and or jmp xchg adc scas sub or and std push inc in or add cmp pusha sbb ds add vmovaps bound sub mov ds adc or push mov aam or mov cld js push in jbe cmc add mov dec insb or mov je jmp inc nop or mov sub shrl add faddl and dec add (bad) jl mov and lcall inc jae in pop sbb and mov or inc adc sub lea fwait pop jb adc push arpl inc (bad) mov ljmp mov or test fnstenv jb int fsubl and sub and dec outsl rorb jge xchg push movsb fcompl mov fsubrs cld jecxz and (bad) je daa imul mov jns test cmp loopne loop fdiv jns (bad) rorb add ss rcll lahf mov test jo add cmp fldcw mov add test add mov push mov (bad) cwtl push mov mov pop test hlt add and xchg cmp mov mov inc pushf pop sub test jne cpuid or cld xchg push sub mov aam cwtl pushf jmp sub mov pushf dec dec aam push inc rcrl xchg adc xor int3 cld es or cmpsb pop xchg inc lods push jle or sar fucom rorb cld push scas int fisubl and or xchg pop verr fisttpll inc orl subl sbb popl mov sbb ss ja clc jecxz popf add adc cmp or or loope movsb add pushf (bad) (bad) hlt scas insb add (bad) cmc inc jbe addb dec jno sub addl or add pop jb xor daa aam insb test adc inc aad (bad) rolb add sub outsb imul inc and mov rorb mov sbb xchg sub std xchg adc mov inc inc dec dec mov xchg and jmp ret rcrb mov mov gs stos daa cmp pusha imul ja push cmp adc and and addr16 pop push std fldcw addl iret mov mov mov push popf jno sub jb xor fimull mov test mov xchg or add imull pop mov cltd cwtl inc je pusha shrl sub loope insl fistpl ja std imul lret sbb nop and add pop cmp enter imul out sbbl pusha fdivl movsb or cmp xchg push sub cmp push mull pusha adc jne clc mulb fsubr xchg or dec stc testb or rclb add jge loope add cld cmp jne loopne cmpl nop lock mov fnstenv iret fadd pop insb shll cmp add pop pushf push cmp xchg and add (bad) nop or fsts sub or ja push js jne cs mov mov int3 (bad) roll mov sub popf xchg je dec sub add test sub nop sub rclb notl or cltd adc xchg and fadds sub leave (bad) and sub cmp lock mov push out adc hlt movlps xchg fidivrl into imul push cs inc (bad) rclb pop (bad) out inc mov sub (bad) shll or adc dec in in mov cli cmp cmp rol sub nop adc cmp sbb es popa bound enter jns into enter lcall stos scas push sub insl dec bound pop je dec mov fdivs jbe adc jle pusha mov arpl loop bound lods roll sar fs mov mov push sub pushf cltd and inc or mov dec jge mov je call pop cld dec dec or add movsb movsl mov mov mov adc fdecstp cld and outsb xchg mov sub inc xchg or mov nop fs sbb fsubrs lret insb andl cld or push faddl icebp push scas hlt pusha xor push jns push cmp fsubrs (bad) out mov or adc hlt js xor jg mov shlb jge ss mov leave rcr cmp inc add inc stos jns sbbb push jb cmp jb dec mov xchg cld mov test add cmp cmp add jo aad pop pop mov push test mov pop les jb sbbb xchg arpl mov sbb inc loope imul outsb push pop or outsl cmp sbb cmpsl fidivrl shlb xor sub or jns nop sbb xchg inc lds and lcall xchg mov pop (bad) out adc cmc or and pop mov pop movzbl std insl orl test dec int or jns xchg pop shrb adcb jns xor das out ljmp pop xchg ret mov push ljmp arpl sub es xchg fs inc lods push dec outsl in js rclb jle mov arpl and jae call cmc and (bad) xor mov cld into push pop iret addb adc lock lret sbb adc mov test stc sub inc mov pusha fsubr add divl sbb or sub mov inc push mov in sub pop xor js lcall outsl cwtl sub or jns pop mov add fs sub cmp add sub pusha aas xchg out adc adc out add add test and into call mov orb add mov or outsb jge test mov insl add inc cltd xchg or pusha sarb jle dec adc adc cs push enter or sbb pusha nop orb xchg sub dec bnd aam xchg dec insb add xor subb fisub mov dec pop aam xor popa hlt pop pop pushf push jp dec dec sbb cli jo (bad) jge inc addb sub mov and je add mov add into pusha pusha imull daa addr16 and cmp dec nop loopne sbb xor and ror mov repnz or js pop jecxz in dec aad xor arpl dec adcl adc adc and call adc mov xchg add hlt dec mov push je std das mov addr16 cld push pop sbb ds pushf pusha mov add fiadd dec pop enter imull loope aaa cli mov or in add (bad) lock std adc jmp test insl inc arpl mov (bad) int stos sbbb mov scas mov sbb std sbb jp div adc xchg sub sub inc xor in and mov xor or sub jle mov shrb add xor mov popa xor nop add sub loopne pop xchg js fsubl test add fs cmc shrb adc cmpsb pushf ds dec dec pop mov nop std jo mov inc cmp js and or mov sub pop mov inc sahf lock adc subb imul adc cmpsb dec adc (bad) cmp mov mov cmp jno mov pop add dec xchg int push in (bad) xchg dec test pop xchg adc sbb mov stos les (bad) adc sbb jge arpl pop push pop adc or xchg test hlt add push adc std mov xchg shr add mov and push adc or enter add fisub test ja ljmp int3 insl sub daa or in fsubl sub pop and lods cmp movsb sbb xlat jle add (bad) lds jbe xchg add lock sub cld adc jo,pt push xchg pop (bad) out fadds push movsb lea mov pop push inc pop in mov mov sub js pop fidivl test xorl mov push es test imul push addl fistpll mov cmpsb hlt js pop movnti sub or mov pop sbb fwait pop cmp xchg or add pusha mov mov sarb clc mov mov xor into enter cmp mov stos mov xor adc push addr16 adc push mov mov jns lock addr16 and fcomps fsubrl or addr16 test xchg sub inc dec clc lea sub call js jl cmpsl pop xchg jae,pn sbb pop sbbb (bad) and lock das push cmp aaa mov jnp cmc mov test mov movsb nop iret sahf cwtl inc push or adc daa add push nop push sbb push sbbl inc sbb mov stos and jae mov jae and or imul or rcl nop nop js outsl pop icebp mov in inc and cltd call xlat loop push sbb add cld and mov inc add push adc sub sbb rolb pop insl cld push in aam cmp enter inc jl pop arpl loop jmp add push ret or int3 add cltd mov inc test js pop pop xor mov and stos adc dec push loopne dec or mov mov mov fadds adc shrl arpl mov leave push test dec ja aam push lock cld dec pushf add test jg push pop push daa mov pop icebp push repz cmpsb sub pushf rorl push fisttpl push jle cs add repz subb sub add pop mov cwtl test cmp in fdivs sbb ret fwait or sub or cld mov push test in add add test xor es xorb mov pushf lahf dec insb lods addr16 push jbe fs xor pop addl loope cld aas dec test jne add inc adc lds xchg xchg fsubr outsb sub loopne pop and xchg cltd inc xlat xor and cld pop jmp or ljmp rorb js popa ficompl jmp mov pop push jb lds call push or lods pusha in mov pop xor les les inc lods imul push stc aas jge add sub sbb fs andb movsb mov xlat sar data16 (bad) fadd in icebp push cmp cmp inc inc push mov rcl or mov lock mov js nop sub movsb fs es xchg lock inc xchg and xchg mov mov cmp into test cs insl std jnp mov inc test xlat xor jmp out setns shrl push mov cmpsl pop cld sub fmuls popa xor stos jb test out inc inc enter add cli (bad) push mov test sbb in aam addb fsubs outsb rorb fxam fmull xor cld jo push sarb pop cld mov pop les loope,pt xor pop mov inc cld sub and pop jae add int3 fistpl adc data16 mov dec adc mov mov or stos mov in sub pop xor std imul add cmpsb sub jae cmp jmp add adc cmp test fstpt and sahf hlt sbb pop js inc add cld jns sarb or or xor add xchg mov aaa jns add popf ret aam loopne dec leave or add jbe dec popf xlat xor or scas sbb inc pop (bad) aas cmp xlat dec ret out add test adcl xchg add jae cmp jne inc les insb faddl aaa (bad) xchg ret ds mov shrb (bad) jg cmc loopne fwait popf pop subl add and cwtl int cmp dec dec mov out pop (bad) cmc push rorl mov or aaa cld lock shrl pop dec add dec mov adc ljmp fimul lods sbb push jno pushf pop cmc or outsl mov mov in shll repnz dec cltd andb popl sar sub int aam jl sbb or dec or js shrb sub into test jns roll sar cld iret push jo and cli adc nop (bad) sbb popf push test mov in enter inc rcrb xchg sub push mov sbb mov cwtl add ss adc jo sub movsb hlt add push xor sbb mov jns test jo out insb xchg jo inc jge es inc lea pop test xchg insl int3 lcall cs pop bound int cld pop and and mov es jp insb pop jno addb adc shlb pop push ret sbb loop add (bad) es std and cmp pop fmuls call fldcw dec mov jle add push ja push mov divl xorl aas mov rcrb inc or push xor jb cli mov add aam jo or add or gs mov subl xor js mov inc pop in xchg pushf and clc jmp sub fcoml add and adc bound in inc jno cld sub (bad) sti mov jb loopne adc test out je jae add mov das shl nop leave jns adc incb fistl pop and cmp out jp cld or (bad) cmc cmp in ds or sub test or flds add aaa into outsb movsb rcr (bad) add dec int3 push sarl js hlt mov insb adc jne push aaa or mov push movsb pop dec and inc insb aam les jl push xor mov pop movsl sbb jne jle push in ret js js jmp or (bad) dec aam add fcompl (bad) pop rolb xchg ja insl mov paddq jge pusha scas push (bad) leave push or dec cmp int3 jle add inc xlat je outsl shl test add pop lock mov xor ss enter add xor cmp (bad) cmc aaa add ljmp in scas and hlt mov jo rcrl pushf addl jecxz lods or sbb adc clc imul scas adc frstor (bad) fldl imul mov xchg and aaa iret mov and (bad) mov jmp (bad) (bad) or mov mov push adcl loopne mov push sbb mov and sbb mov stos aaa nop bound inc nop sbb and xlat add into cli push adc test inc lret push sbb mov jb or inc dec or xor dec pop je out and dec dec jb sub inc adc inc adc fs mov and rcrb jl rorb sub (bad) mov xor or call loope and adc sbb insb ds jge (bad) sbb jo mov push fwait clc hlt push sahf (bad) mov pushf adc or addr16 mov data16 mov inc popa (bad) pop cmpsl fs inc inc sub les jge call pop in jle push cmp pushf pop (bad) (bad) inc out jg fsubrl xchg lods enter aam push in lea idivb inc cld sub and roll xchg mov adc or add aad rcrb out in data16 dec pop add pop and and mov (bad) stos dec add dec (bad) pop sbb jb hlt out mov jnp cmc add add jecxz roll jnp pop nop xchg insl pop ret inc ds cmp jl cmp (bad) mov add jmp sbb int test mov or sbb xchg and jecxz push push or push mov enter push or icebp add jmp inc pusha aas adc push and sbb repz cvtpi2ps dec mov add pop pop gs add jo jae or (bad) lock mov xor hlt call and jle ds add mov mov in dec int inc fdiv push mov add push insl pop ret cs addl jbe add ds pop mov dec enter dec sahf fdivs pop or je std xchg sbb ja loopne icebp (bad) push sbb ss mov loop pop aam fcompl sub push cmp mov pop int3 jno je add test mov ds mov sub dec inc mov mov pop in inc or mov cld in pop inc in jno sbb (bad) test mov pusha outsb jns insl rcl inc mov or cli iret sbb cmc pop mov divl adc mov jo repnz push shll ds mov adc add jae push pushf push int3 (bad) je adc dec inc add pusha int popa je pusha push and (bad) ljmp push push je add mov inc xchg adc shrl jo mov adc aas aam xchg iret adc jns std xlat ja imul fldcw or dec fsubl in inc add (bad) rorb imul or mov add sti lret jae (bad) daa (bad) pop push sbb fs mov lret fs inc add push mov test push test aam into push or mov fmuls out cmp mov mov test fdiv or movsb test pusha (bad) (bad) movsb xor push push mov mov movsl lds mov lock test xor ljmp xlat mov push push pop fstpt orb rorb (bad) inc xor test fsubl or (bad) cwtl xchg sbb or add cmpsl aaa stc repz jl adc dec andb call (bad) ds mov xchg mov push lock jge ss in add test lock xor push popf cmpsb push lods add or add and lods sub call cmp loopne test add add loope pop int sub mov cld and dec and loop jmp or loope mov add ret scas outsb sbb and mov push or jns movsb jb insb pusha xor xchg insl clc pop test lcall fcoml dec rcr enter rcrb dec mov leave decb shrb test subl dec cmp jmp rorb es add inc xlat jnp es test ds call movsb xorl pop xor or dec cld ret fdivs test sbb or fsubrl dec sub dec rcrl mov js sbb or xor sub xchg enter orb mov (bad) mov add dec popa dec mov jmp popf add jae inc and push push add mov add lahf adc pop dec cwtl sub or jecxz pop cmp enter outsb add fwait (bad) in and ss lret pusha adc dec cmp (bad) mov sub add scas jae sahf shr pop adc rolb loopne push add xchg (bad) or push push jg loopne in fisubl push aad add mov imul out adc sbb imul mov cli pushf mov insb inc rcrl (bad) int3 dec jmp jae fcomip rcr or daa push lock xabort imull adc add mov rclb cmp bnd jo mov aad jecxz jl rolb xorb cmpsl mov sbb cwtl and push pop cmp xor inc xor mov pop arpl dec mov or sub fsub xor jmp lahf or mov enter aaa push mov add mov mov and mov test and lcall dec lods adc std in dec lock fs sahf aam loop invlpg mov sbb adc (bad) jbe test out adc fwait xchg add (bad) mov mov movsb mov call cmpsl or and cmp adc mov aam pushf add xchg out add push mov dec push or pop test add faddl pop lret outsb push in or or insl dec (bad) or aad inc xor xchg jl adc (bad) push insb imul mov xor mov jp push inc cmp jae test xchg sbb in mov nop xchg leave mov enter adc nop and in add and sbb xor dec xchg pop add pushf mov lods ret loopne test sub inc dec xor dec add and push cmpsb aam xchg adc mov pop inc addb mov mov add or add (bad) push inc mov fldl lahf add xchg pop pop cwtl arpl sahf adc adcb mov sub mov aam mov cmp ss xchg in add jp jb (bad) (bad) xchg aaa js add flds adc pop roll pop sub mov xlat and andb mov test sbbl pop rcrl pop cmp jl push sub cmp pusha sub push fsubl daa fs arpl cmp push loopne lret inc iret xor shlb movsl cwtl (bad) leave nop inc ficom mov lods push rorl je flds fsubs pop mov push push mov js stos pop enter popa mov mov xlat dec or sub nop addb bound push movsb push shrl sbb mov pop hlt add or dec sbb mov pop cs xchg movsb mov rolb out push repnz mov mov arpl dec test sarb imul xor xor (bad) sbb int3 xorb test negl insl ds stos push lods fnsave das fdivl and cltd xchg sbb dec push dec add push mov roll sbb cmp test shrb test and pusha clc mov pop add dec mov pop inc xchg ret daa (bad) (bad) fdivrs lock je sbb jo dec aad push lret cmpsl or call pushf sub push rcrl in loopne fs mov jno mov adc push adc inc mov jp mov aad pusha mov test xor push cld popf cmp loop and outsb enter adc mov pop sub dec fisubr jl cmp cmp repz pushf movsb adc pop pop and dec jno inc movsb push cs ss or push pop or inc enter les inc das push test jge mov in mov and adc ljmp stos xor stc or inc aaa icebp adcl sbb stc add and sbb push jp sub imul sbb cmp pop inc imulb mov xorl mov ljmp add jle add jmp or and add leave mov and xchg mov push aam (bad) cmp icebp clc dec or lods add adc push mov leave fs inc (bad) (bad) mov push add imul repz mov xchg cs rclb cmp mov sub (bad) pusha xor aaa ret (bad) or sahf or pop inc andb aas jmp cltd pop xchg fisubl leave aas dec and add sbb mov (bad) out adc sbb mov jmp les test jns imull enter sbb push test rcll xchg mov pushf ret jo mov jl push rclb inc in push mov pop pop mov (bad) pop mov pop fldenv call add xchg pop iret jl add fistl push pop inc (bad) mov mov pop sarb rcll out add sub and push push lret pop in fcompl adc leave (bad) incl and inc sbb and test cmp mov (bad) inc test andl xor mov push repz lock add cld cli iret mov mov inc cld test pop addr16 add (bad) xor test iret sbb daa jb repz xlat mov xor outsb push sub repnz fsubs inc inc push js push jb in add (bad) dec pop xor push adc daa stos and pop add fist arpl fdivrs xorb gs dec xchg inc add rcl and sahf pop add sub popf sub (bad) pusha les cbtw and xchg pop pop addr16 pop xor out leave sbb mov sub pop lret hlt xchg add mov mov rclb mov sub push je jl adc or rolb pop jb sub js pop and sub add in mov or or jle repnz enter out (bad) cmp or (bad) inc and pop xor push cmp push adc clc (bad) xor or ja jo mov (bad) orl lods mov jp sbb orb enter mov mov mov mov xchg mov scas mov mov mov ror mov mov or es pop ljmp sub loopne (bad) pushf loopne pop movsb cmp out (bad) enter (bad) decb lock push popf ss popa leave incl negb mov leave imul data16 les inc inc repz aam add (bad) jns sbb dec shll adc inc add mov inc pop stos cli loopne inc and adcl negb rclb pop adcl sbb add aam mov sbb clc push add iretw inc mov mov pop push call mov inc xorl and sub in or jmp pop sub loop add jnp sbb jg mov addr16 mov add pop pop jge add dec inc popl sbb nop and int3 xchg mov or (bad) ret dec add add sbb outsb jae lea sti lret add adc sbb push pop lcall rcll xchg and mov ret (bad) mov pxor out jg mov notb xchg pusha or jne add loopne out inc loope or mov cmp sti inc pop cmc or xchg movsb mov inc xchg fistp and push dec pop imul outsb mov pusha lock (bad) or dec call mov bnd (bad) dec dec (bad) rorb movsb fmul and test sbb or or cmp out push inc mov mov pop pusha sbb and lods add or pop cmp fs in or (bad) mov or mov cmp add lods adcl adc mov lods popf add dec je (bad) les leave or or or sti add xchg mov adc pushl in mov pop mov jae insl (bad) (bad) loopne test in jge andl arpl pusha pop nop sub push outsl or sbbb jg nop add cmp mov sbb sbb rorl push sbb or jmp cmc dec xchg add popf (bad) mov xor xchg clc sbb out cmpsl (bad) pop mov sbb pop add and nop pushf pop push addr16 imul lret xchg lret int3 push mov sbb fist loopne mul (bad) enter icebp out flds or adc push (bad) mov stos mov add push dec pusha pusha frstor (bad) lcall sbb fmull dec movsb xchg sub les xorl ss mov (bad) mov mov sbb dec or test mov lds add in push xchg pushf outsb nop sbb js inc sarb shr cltd cwtl adc lcall inc mov aaa fs dec mov xchg popf add dec pop mov mov sbb cltd add and sbb int3 sbb cmc je fsub push test popa add into push repnz bound dec xchg mov inc test dec ljmp inc push ljmp push mov push cmpl in enter pop dec adc xor (bad) call jmp cmp in pop rorl jmp or sahf andb lcall imul fstpl (bad) int3 mov pop inc adc add aas aad loopne add and fdiv fcmovb mov aad adcb inc (bad) je mov pop and sahf and fs sbb mov daa xchg or mov adc inc jns pusha adc mov push and fsubrs (bad) into pop add aad movsl adc dec mov or and or push out add push pop push xor inc (bad) arpl pop cmp (bad) lahf push mov and pop sbb icebp or and clc mov mov sub int and mov sub jmp add push ds lds rcll dec push test pusha xlat push and mov out call bound sbbb sub mov aad mov ja add and lods out inc sbb pop xchg cwtl dec adc sbb sbb dec jo addb mov std pop push in movl sbb add pop aad test sbb js rcrb jo dec cmpsl cli les ror lret adc das add gs or insb in add jno dec mov sbb icebp push flds mov pop add in mov sbb inc fisttpll push jg mov jp mov mov aam cmpsl ljmp or (bad) ss mov jmp add inc adc test test push or sbb jg jne push in outsb xchg inc fwait sar int3 mov cmpl and and mov mov fmuls or ds ljmp cmp push addr16 fistp loopne cltd in cwtl pop inc out dec sub stc loopne lock pop (bad) pop cmpsb rcll mov icebp xchg (bad) lock je xchg rorb scas xchg ficomp sub add xchg pop mov dec (bad) dec or cmp adc bound and xor xor orb sub (bad) jb jo jo mov roll mov pop and cmp bound icebp rclb mov je sbb or inc push stc pusha loope jmp daa add push scas icebp in xchg dec int3 ja add in dec add mov push inc mov cmp xchg dec adc mov mov or lret push add mov push ljmp enter cmp addr16 mov rorl or mov nop lret leave adc push (bad) cmp icebp or out pop xor test xor or mov jne int3 adc add test movsb adc std or popa out mov dec mov inc mov popa dec add pop repnz xchg cmp adc movsb and fs cltd hlt adc popa sbb mov std jle pop cmp cmc jbe mov inc mov dec (bad) clc mov pusha mov pop inc mov loope std push int dec inc sbb dec int out or sbb or xor and test xchg or lock sub sbb add push add lock dec xchg mov lret or es pop inc mov lock jns rorb inc cld ret sti push insl mov add cmc or cmp push add pop out xchg mov adc mov pop pop lret loopne inc xchg lods cli push push cmc cltd or imul jae pop push add mov out cld popw dec dec and mov sbb adc push cmpsl or and lret push add jg (bad) xorl and enter push je xchg loop mov test add and add mov ret shrl js add in pusha lcall and pop push dec test mov shll xor push clc dec clc mov sahf or add sbb dec mov add jnp rolb cld (bad) loopne and push ljmp mulb loope adc inc test sbb push push cltd push (bad) push lea call add fildl pop add push push push stos fs rolb or sub sub sbb sbb movsb (bad) loop mov push adc fcmovnb dec cs insb push sbb insb xchg ret jo push jbe in xchg test les lea and imulb pushf aad add pop or and faddl nop jo add push push inc sbb js xchg fldl jo jo dec cmpl or push (bad) mulb mov add gs or mov jg (bad) mov sar push add sub xor cmp mov xor hlt adc or xor lahf dec inc cld popa or ret mov and ljmp push es mov ss cmp mov and add nop sbb xor xor mov sbb bswap mov dec and pushl add or mov add xor out (bad) rolb mov (bad) mov rorb ret or jb loopne sub pop inc pop test push imul xchg js gs repnz mov adc sbb dec out jo out push mov xchg pop shrb add mov fcomi mov push or sarb aas xchg mov dec mov push jmp add fs mov (bad) dec push movsb sbb inc add jge jecxz lods add sahf and push sbb or cmc in mov add add push (bad) lock push mov inc pop (bad) xchg push cltd addr16 out adc mov test cltd push add fidivr inc mov (bad) sahf inc pushf nop repz loopne sub sbb sub push push movsb cmc adc sahf dec test test ret fisubl ljmp pop in scas push mov add xchg imul add sub inc push cmp js or push mov and mov xor (bad) mov add jg (bad) mov popf add arpl push or sub fdiv pop jge sub mov sub push into xchg mov shrl or loop sub add cmp xor inc dec xor popf lock dec cmc dec inc in add mov mov mov xchg fadds and jo pop pop cld jo shr add scas inc mov inc add test fcoml sub out rorl pop lea add sbbl push mov dec add mov mov xor daa mov pop xchg add inc mov xor jg and sub lcall or pusha add outsb xchg pop xchg aam rolb sbb popf sbb les outsl mov jns push addr16 jle js dec adc mov mov repz stos fdivr test out push test add mov cli std into sbb loopne push add (bad) shlb (bad) insb sbb add lret out (bad) jno enter or aad mov jns sar (bad) jae cmp and fwait pop lock and cmp inc sub enter fiaddl inc mov add and pop ret lods push cmp fidivl bswap into idivb adc mov dec movl add fdivrs scas mov stc pop and (bad) insl xor js dec mov mov pop nop inc roll mov dec add sbb cmp adc adc jne mov (bad) and or jnp pcmpeqw mov rdpmc pusha cmp inc movsb inc add int3 ret mov add add (bad) pop add test fdivrs enter add movsl test repz push xchg andb and mov icebp adc add (bad) out fiadd rcrb sbb mov mov jl leave lods jbe xor pop dec push cmpsb push sub add cs mov (bad) aad inc gs pop ljmp and inc clc xor xchg mov and mov fcoms idivl mov or or push add pushf pop lcall loopne add inc mov sbb arpl fidiv insb add xor mov sub loope les movsb daa fldl dec or aad push mov gs mul inc jnp out pusha add cmp mov aam pop rclb add sub in mov leave sbb add mov addl daa fisubr add gs (bad) sub scas sbb fistpll add test es je xor adc in (bad) cmp (bad) pusha sbb dec push scas mov add cld leave insb les xchg xor add test sub test (bad) mov xchg mov (bad) jbe sbb cltd out imul xchg cmp dec pusha push pop push pop xor iret fs mov repnz xorb add (bad) jmp sti and xor add in hlt sbb or ja add push cmp jb aad sbb gs mov jecxz add push or and pop outsb add or fcomps push sbb inc pop push enter add xor dec stc lcall (bad) xor notb xchg add adc ljmp out and adc hlt and lods pop adc out stos add dec sub adc inc push in icebp and sub xor xchg mov mov pop push xchg rol cmp pop stos cmp pushf jle xchg inc faddl push jl pushf nop and ss testb jmp add inc notl and sub aas fstpt cs je popa xchg call add shlb loope pusha sbb lods sub (bad) push or fwait xlat shrb rol push add les add jnp mov sahf rorb push mov and lcall ds mov cmp fnstenv cs cmp add sahf adc sub insl mov add push and call xchg ds and sub add jo mov mov or pop xchg popf mov sbb xchg adc popl aam inc scas jnp cmp add (bad) push cltd (bad) lahf or clc jne inc xor or lcall sti or (bad) pop das loopne add mov add aad cltd add dec xor mov inc sub jecxz icebp push les or pop sarl stos daa rcrb cmp mov mov test out xor adc mov add (bad) hlt jbe cmp add ret gs mov push add rorl jo cmpsl les mov sbb addr16 lock (bad) dec sahf and xchg or popf inc and mov lret or loop jo adc out lock mov imul push cltd sbb popa mov mov dec mulb das cld add test cmp sbb lds lea rolb rolb call pop outsb dec js add stos ret pop add cmp mov cmpsb adc aad dec push popf add adc adc (bad) int popa cmp roll xchg lock mov out or pop xorl cltd add pop and add sarb xchg pop pop and shrb jg jbe hlt jp dec fmull js and nop and jns ret loopne outsb js sbb enter or sbb shlb xor xor mov outsb dec dec or pop cmc mov rolb xlat cmpsl hlt stos xchg mov adc lods push inc inc cld cs add subl push inc push (bad) pop jg fs (bad) mov jae jmp scas mov mov xor (bad) outsb and loope int3 jne add inc sbb clc inc adc fsubrs add mov inc pop sti lock movups jmp es xor outsb jne cmpsl sarb in popa add push cmc lock repz inc jl xor mov add fnop sbb (bad) cwtl (bad) out xor cwtl sbb xchg out inc pop cltd gs repz mov jne mov jo inc mov rorb push cltd sbb cmp mov cmp jae hlt loopne mov inc (bad) ljmp pop popf out cltd cmp std fs sti dec movsl sub inc jne popf std jge test cmp je sub clc jae adc jne xchg stos inc add or es aam pop daa sub push add dec push (bad) ljmp sub xor sub xchg and add div xor sub es push mov and stos push jo mov jge (bad) pusha adc movsb add sbb in push and cmc dec mov pop inc or xor pop push pop (bad) into cmp ljmp push inc xor pusha mov clc xor out xor push adc repnz es clc push push or inc add dec sbb pusha pop cmc lock js pusha inc inc mov dec fmulp push inc push mov cwtl xor (bad) clc cli icebp (bad) mov jmp adc adc cmp nop add lods dec clc nop hlt or sarb push stc cmc (bad) arpl sarb repnz push hlt in popf mov aaa adc inc rcrb add out nop call or stc cmp jl xchg orb and imul inc xchg hlt inc nop les mov les fmuls mov push xor xchg sbb push mov les or out popa les jl push push and jg icebp xor dec adc inc imul mov out xor (bad) sub push cmc clc dec xor loope idivl jmp xchg or rolb add add clc sub sub clc xor test cmp jnp jmp xor push xor push or dec loopne leave add movsl lret popf movl dec cmp lret inc es xor lock cmp (bad) hlt pop inc xor out sbb push sbb push int push or xor fstpt or cmp aad add lock add cmc aaa push add clc inc orl arpl fdivr lock loopne mov sbb js je bound aas push cwtl icebp inc and pop cmc pushf cmp or cmp (bad) loopne or movsb loopne cmc lock lret mov push cmp out clc or add xor shr xor out sbb and stc inc push test inc inc enter xor popa iret cmp push adc es pusha scas mov push cmpsb nop mov stos dec jmp inc fdivl sbb loope xor xchg test movsb test pushf cld lds and or jo pmuludq test push call fcmovnbe pop fadds sbb sbb adc inc mov pop pusha mov scas cltd call mov ljmp scas or ss nop sbb hlt mov in add inc nop js xor inc enter add inc pop cmc in xor int add lods stos rorl lock add adc sub ljmp add or repnz jge aam in scas sbb out dec and push adc jmp neg sub in hlt jnp pop insb lea call xor push sbb je cmp in mov xor add mov jno (bad) popa jns,pn gs mov xor mov lcall push iret (bad) cmp sarl and outsb add jns cltd js popa lcall push fwait jg xor popf sbb fnsave lods xchg and je xor adc enter push jbe mov xor push and test sub in mov jno push fcompl data16 les mov idivl inc mov ds push xor mov cmp data16 ds gs aaa lods (bad) adc inc add sub push addl inc jo aas push (bad) mov (bad) and xchg movsl subl push adc mov jb and xor gs cld lock les or jl out into test aam sbb add cmpsb add and jp push sahf xor pusha xchg adc int3 mov sbb std mov cltd icebp sbb xchg insb mov sbb lock mov jno dec pop sbb or and mov dec clc cmp mov (bad) pop cld push and loope bound stos add and arpl dec aas sub pop test mov sbb and daa out rolb mov jno and push add movb and mov loope lea loopne adc movsl test clc add mov add mov push adc adc (bad) cmp or mov cld sub aam push or adc cld ljmp push adc adc lcall nop jae sub dec cltd cmp roll fwait sti aam dec data16 and mov push fisubr sub stos mov jo and sbb js add pop and cmp cwtl stos jg sbb es and adc lret icebp cld or in sbb jae fsubs jecxz xor and rcrb leave (bad) and imul pop iret pop fistp in sub jne test and lock mov adcb lock jno (bad) pop pushf or add loopne xor in inc mov data16 pushf xchg mov push mov cs (bad) in jg adc rcrb movd add (bad) mov jp xchg test add dec sub (bad) es add add (bad) mov mov cwtl fisttpll sahf xor rcrl ret or push in and jp adc or or push enter jno mov and adc push fstl out mov scas mov sbb test nop test push xor (bad) push add lcall jg sbb loop mov push nop sub adc pop les jg call cmpsb outsl mov sbb cmc (bad) mov sbb xchg out int3 mov lods loopne push out mov xor jnp test pop add mov pop dec or push inc xchg mov pop mov and jb and xor add sbb lahf out popa frstor lock add (bad) inc lods in (bad) dec insb lods test jle imul cltd lods push stc mov push clc inc pusha decl dec mov jae and or pushf add jbe and add pop orb cmp mov and sbb test xlat stc push mov or movb mov inc dec pop jo mov cmp test fwait or les notl nop sbb push repz ret and es shrl je adc cs bound popl (bad) lret data16 and in mov xchg mov cmp xchg cs pop add std dec push dec aaa out pop add gs jno lahf or sub jle mov mov orb fwait icebp test sbb xchg mov xor sbb (bad) mov les inc mov or das and add (bad) adc add push dec jp xchg lods cmp lock inc adc loopne psraw push add addl out inc cltd mov mov lahf inc enter pop push or xor dec mov adc out mov push mov xchg adc daa lock push stc mov xor je in mov pop xchg jl cwtl enter addl xchg js clc mov push sub mov pop (bad) jle push mov es aad push adc sbb sub loopne jno pusha aaa and or jns fadds cmp pusha push sub repz (bad) call ja hlt push push and (bad) xor mov pop dec xor add push xor mov dec or mov pushf shrb mov adc push (bad) xor sarb insl xchg mov lods mov pushf mov cwtl lret inc fsubs test mov xchg add into imull mulb mov pusha es and syscall int3 popf sbb sbb sti sub rol adc sub add jnp jo mov pop mov add mov pop cmpsl lods add call mov lock jno and inc (bad) leave sub repnz mov pop inc lea dec cld dec and subl rcr or or test nop (bad) sbb pop jle adc (bad) pop aas ret inc mov jo sbb call or inc add pushf inc and mov test mov push pop insl inc mov cli mov pop in mov mov sub pop push mov xchg cs nop or bound orl jl or aaa js hlt mov scas insl jl sbb lock sbb (bad) mov jae (bad) mov or test fsubrl xor or jnp lods and xchg lret out adc pop hlt or imul loope int js es jp test adc xchg dec lock mov les pusha add and xchg and pop stos and sbb addl out add (bad) rcr mov fwait je add cs or sbb jae (bad) fcoml ret sbb and test pushf sub inc js dec inc lret mov repnz inc scas jo imul or stc xor push je enter push insl lds sahf rcll xor cmpb in (bad) cmp cltd lods adc cwtl lahf add in xchg adc out add cmp add push es in mov jp inc cltd popf pop adc lret xor outsl rsqrtps scas (bad) or add sub fmull adc test movsb pushf sub cli mov lcall xchg push inc sub adc es jl sub mov pop dec je push jl push pop mov (bad) or stos mov fimul pop ja mov loopne icebp mov dec in idiv pop ljmp push mov lahf mov pop cltd inc push push enter pusha dec sbbl in mov cld lods adc into jo push add ret sub cltd mov leave sub lret andw lahf or pop pop rolb ficompl (bad) cs mov add and loopne sahf xor hlt adc pusha (bad) cwtl pop clc ljmp shrb push nop mov xchg out add and sub mov add arpl xchg icebp mov xor xor das loop inc dec adc inc addr16 add sbb out jne jge mov xchg inc popl jmp les std mov mov in inc sbb mov mov hlt and dec outsb in mov jge,pt push xchg sbb pusha sbb hlt movsl push test inc pushf inc int3 xor cmp mov jp in test xchg jo lock in add cld (bad) xor outsb add (bad) add inc add ja xchg dec ret pusha mov stos mov cs js mov add in inc jp dec and scas add jno pop lock push ljmp inc pop xor cld sbb in (bad) and pop jo (bad) lahf pop sahf and dec gs hlt and sbb ret or add jle (bad) dec adc adc lods (bad) sbbb cwtl xorb mov add push imul and lcall xor jl xchg xchg add rolb daa je adc push xchg enter jle ret lahf cwtl push sbb push ret loope push cmp enter pushf cwtl and lods inc cmpsl xor (bad) rcr jecxz dec xchg pushf or nop sbb or adc pushf js add hlt push push push es mov aam mov add lock add ret or push push aaa push xchg (bad) jl push je push jo inc jno rolb push sub push push push pop insb jb sub fwait jo movsl inc pusha lods jb insb xlat pop inc out inc adc aad ds mov jns pop sbb mov out pop jnp call orb push sub ret add lcall jp mov je inc xchg adc sub xchg and aaa shlb fcmovb pusha push popa (bad) pop jo cmpsb pop cwtl push mov dec lods es push mov sbb push enter jg lea jo dec inc jo je fadd xchg mov call xor js cmpsl hlt lahf adc sub inc and mov or mov sub or rcrl movsb out dec mov push mov and dec icebp adc aam leave andl adc iret in scas or jbe cmpsb cld push push das pusha push jg test hlt and pop push jno jp mov dec clc aad add push xor divl insb inc pushf cld or call addr16 and or adc mov lret add dec xor jge ret cwtl dec pusha xchg adc call mov adc lret cmc (bad) mov rolb dec rcrl mov add add xchg xchg lock movb jbe fmull push add repnz push xchg icebp fadds leave jno comiss or xchg int3 sub and add in cltd mov cmpsl rorl ja dec idivl and (bad) mov adc hlt daa enter inc push test ret push (bad) mov push xchg sub sahf mov insl sbb xchg lcall nop add aaa dec aas dec lock hlt jo sub lea insb shr sbb mov (bad) xchg int3 add push sbb scas or inc xchg dec je mov and cmp mov sub and push cmp or xchg push dec (bad) add out inc add out dec or mov inc cltd push mov jns sbb mov jmp shrb mov inc pushf and adc cld js mov push adc pop pushf and and mov inc cmc adc fs mov jl or mov out and mov dec xor push inc cmp sub add push sbb mov adcb pusha dec mov or xchg add (bad) andb aam adc pop and add fwait mov mov mov adc xchg xchg mov and inc adc hlt xor sti adc push mov push lret adc jl cs cmp or outsl add ljmp mov or jge,pt or mov es out cwtl insb mov dec pop enter (bad) stos dec and daa mov push mov sbb cld pop mov mov ja pop fcoml jno pushf divb movsl sub fcoml lods movsb push xchg test cld test jb adc ficomp popa inc push add pop in loopne mov cmp xorl xchg test jbe xorb mov cli pop test cmpsb add loope pop or pushf inc pusha scas clc dec popf mov sub jb dec adc dec adc mov insl cmp shrl or mov (bad) je lods insl jo mov jne les cli cwtl je cltd add mov pop jmp sub mov inc fist addr16 jno andb push fisubl and xchg jl ficomp mov mov jmp lcall nop aas xchg js cltd aam sbb je pop movb and inc lret cmp xchg popf dec and mov das push pop test mov addl fadds (bad) push sub out adc xor (bad) and sbb mov je lcall neg xchg push adc xor add xor and (bad) push push inc mov (bad) pop jg std add jo mov sbb sbb lea inc xor pop jb or inc xor inc data16 push sub outsb cmpsl add loop cltd loope push dec xchg lock adc test testl add mov subb jns lret rorb loope sub rol scas add xorb cld orb in and push inc add out jo in test pop mov cltd inc nop addr16 xchg sub movsb pushf xor mov nop and outsb addb scas mov add int3 sbb icebp mov adc mov pop add movsl cmpb inc cmp pushf pop outsl jno in add add imul cmp mov adc fisubrl add mov sub incl test fidivrl pop jg pop push cld xchg addl pop loopne xor cli xchg sbb in (bad) fcom jge fdivs inc jno test lea mov push push test mov loopne cs in cmp mov nop pop push ret jge andb adc adc jo inc test xchg mov cmp movsl ret push cltd arpl imul push or pop cmp push add aam cmp xorl jo add mov push xor xor adc imull and shlb test int3 fs (bad) dec int3 mov pop push jno sub in test fs lahf sbb mov movsb (bad) cmp or aad call rep (bad) dec pop and xchg add mov ss in (bad) (bad) jnp lret mov shlb mov and sbb mov shr mov mull jns loop pop les decb sbb push cmp icebp fsubs popf add arpl rorb jecxz mov daa push mov add mov add test loope int3 (bad) cld call add mov cmpsb test (bad) adc inc in sbb jl add mov pop and aas nop or jmp inc cli push jbe inc nop mov and and outsb and inc mov scas push and rcrb pop imul lahf popf jmp adc je,pt daa sahf dec sbb ret in int3 mov rorb xor adc outsb repnz push addr16 mov push mov inc addb ljmp inc mov push adc pushf clc and xchg lock jo (bad) lock movsb fadds and out dec or (bad) cs adc popf dec pushf jno dec mov mov inc movb add or enter enter dec dec mov pop add lea repnz (bad) aaa and lods mov sub and xchg andb (bad) sbb xchg xor or pop in pop punpckhbw scas mov movb das xor faddl sbb jno pop add out add (bad) push repz pop mov int3 divb xchg add jno mov pop sbb movsb adc adc leave add pop sti mov add outsl xchg push jp es test and pop jl je and sbb aas push xchg (bad) std movsl jae loope push rcrb mov sbb jg das in mov mov mov dec hlt xor sbb loopne lahf into arpl xor pushf dec pusha pop mov test add lds mov inc icebp call leave push iret rol add push dec lret push pop cld inc in mov add add js mov es push lcall inc ja mov mov mov in sti jp add scas mov (bad) in arpl adc inc adc insl or stc jge pop lahf (bad) jo jo mov adcl add repz test mov (bad) push cmp mov lds cld mov ljmp or sub mov in inc es and mov mov inc in ja fcompl and (bad) cwtl jbe xchg outsl jno add or call add lods mov mov stc in xor sub sbb fidiv and adc clc and lea out cmp icebp lret sbb inc xchg in jo notb mov pop or in insb movsb sub inc (bad) das loop and mov (bad) or (bad) push cmc xchg pop data16 scas or lods ja push sahf gs push jg sti mov popf loope enter fwait push mov push fsubrs dec add cmp rcll outsb push and int3 insb pop pushf rclb push movsl add add sbb int3 mov in loopne cmpl cltd dec xchg sbb or dec aas nop mov pop push inc jae sbb js dec lods push (bad) test push push iret enter call adc pop loopne cld push das clc ret adc nop xorb pop and mov xchg sbb lods add loop adc dec mov sbb or aas lods add (bad) mov dec popa ror call mov or adc add xor add and cs cltd mov push sub lahf xor movsb icebp jo je mov das push jbe mov dec shrb or (bad) xorl sahf inc cld dec push mov test gs and pushf popa push inc push outsl test imul enter add jmp push pushf add lock or push sub fs pop xor mov fsubrs and enter sub fcoml into push push xor xchg add mov outsb jnp es sbb clc ljmp adc adc pop mov xor jbe int3 out xchg hlt addr16 and pop lods sbbl orl add and xchg push (bad) cli sub aam mov adc cmpsb cmp cmp popf jbe and or rol clc in (bad) mov sub (bad) sbb test push fist popf mov (bad) (bad) lock lret orl jae bound push cmp fs push out jl idivl enter addr16 adc mov enter (bad) and hlt adc xor dec mov inc js cmp add xchg aam xor je cmp pushf or add movsl cltd fsubrl add adc mov enter movl and and (bad) pop sbb dec addr16 pushf cmp push les loop push pushf jns xlat dec (bad) int3 inc mov mov jo fsubrs (bad) enter add aas hlt jbe cmp adc push mov push adc push je pop aam and and inc stc sub or mov pop mov and mov mov push push xor pop inc mov add pushf xchg jno or loop and sbb dec adc lock lods push and xor rorl test test sub mov (bad) call movsl fdivrs xchg sbbb jl arpl mov adc test cmp mov lahf and gs (bad) daa inc push cld ljmp sub lea dec dec pushf stc mov and test neg add adc push lods pushf xlat popa insb fwait jbe dec in aas add sbb lcall sbb enter fs push or xchg pop and jmp cli lea adc insl xadd mov ret cmp cmp pop or dec push cwtl add or rolb lods popa pushf mov cmp add jle cwtl sub sub sarb dec and into test sbb sbb dec pop xchg inc sub js cmp add andb lock in adc hlt push inc xchg loopne insb gs push push call jl clc add jb int3 add dec push and or inc les xchg pusha je mov inc inc sub push loope sub pop mov int3 and loop dec cmpsb fcoml es sbb hlt jae imul daa or (bad) add mov push enter mov xchg leave (bad) xor adc fild or mov adc lods cld scas mov and lods mov ret sbb push insb inc adc add pop test pop xchg add push xor add mov mov xor dec inc lds repnz in jns and jg ds rep or loope cmp jno sub movsb add cmp in xor cltd pusha jmp divb inc and pop sbb inc lds nop mov popf sub push pusha das mov in xchg or sbb xor jo or or mov (bad) in dec fadds cli lods inc mov inc insb int3 outsl sbbb xchg aam test js call and mov (bad) divb jl push cmp push jnp cli sub movsb (bad) push mov js and test add ljmp mov (bad) jns mov iret ficompl fdivrs lcall addr16 or sub fnsave hlt jb jbe pop adc push popf cld sub fsubrs mov js dec and dec dec inc rcll lret jns hlt dec pushf xor push mov add adc int hlt pop les ret adc in and testb cmp nop (bad) cli nop shrl in pop mulb jle dec or adc (bad) clc lock aas or pop xchg dec loopne imul popf jnp sbb pushf (bad) jo call jne cli and lcall cld jo mov les sub and dec dec pushf xor js add fsubl cmp fmull mov cmp adc mov jle in adc sbb adc arpl imul mov pushf cmp rorb cld je sub fcompl inc jge daa cmp ret js and push imul and lock inc movsb adc add popfw and pop push dec mov cmp aas aas add cmp dec repnz or pop mov push test daa test mov inc push and lea or data16 in inc mov cld or (bad) les aam inc daa adc xor mov scas add cmp (bad) cltd lods push movsb out adc adcb sete or pop jb scas ret cmpsb nop nop movsb and or imul dec push mov sbbb jnp push add and inc andb inc sub pop xchg push sbb pop sbb cmpl cmpl sbb cs mov mov adc fs push arpl mov mov and xchg mov cmpsb xor cmp and jp jo add inc loop xor cmp test hlt sbb scas jnp mov movsb lea sahf nop push mov bound (bad) ret inc mov lods inc mov sbb jns lock mov out mov or add movsl pop add jp sarw jo xchg or movsb lahf mov hlt rorl and mov cli xchg mov inc lods push dec pop rcr mov add push sub add xchg jo scas push mov inc mov jl dec mov dec test mov sub ror cmpb dec std rorb mov push ljmp imul adc sub mov dec adc movsb enter sub decl xchg adc jp mov in or push adc push mov je or lahf leave inc enter shlb push mov mov and icebp add movsl aaa dec pop pop ret inc cmp pop je (bad) in lock or jo (bad) ror insb rcrl xlat pop cmpsb lret fmuls cmp int3 mov push pop pushf jno xchg lea jmp adc loop push push (bad) hlt add and mov lahf sbb mov dec and mov xor lcall (bad) outsl fs lahf pop loop add dec daa add xchg add mov pop sub sub and mov mov pop sub xchg jge stc sbb add in aam out adc adc icebp xchg add aam sub rorb adc mov stos icebp xchg jae and adc mov fs jmp mov add push xorb dec jecxz adc mov dec inc pop mov (bad) cmp pusha sbb lods js xchg out shrb jp sbb int3 lock inc int or lods xor popf fsubs mov pop add sahf cmc aaa outsb xchg gs or mov (bad) jne adc jp mov les mov dec cmc and cmp gs adc fs and cmp (bad) fadds movsb pop hlt rorb inc pop inc sbb dec in adc jl xchg hlt (bad) xchg test cs inc sarl xchg sbb inc mov sub add nop push sub push lock into movups clc cmp rcrb notl sub mov enter jno ret test call loope dec sub in cmpsl mov mov add xchg hlt mov mov jne mov mov and test bound dec cmp movsb dec mov loope mov aam xchg and movsb pop or decl mov out push dec insl movsl mov mov loope aam jno xchg repnz cs dec and ficomp add jp je les mov push clc jl or insb adc mov mov pusha lret jo outsb add in mov test js mov sbb mov fist or (bad) cmp sbbb cmpsl xchg fsubl add popa add ret pop pushf andb in lret call add jmp add or cmc mov fimul ret jecxz out xchg inc inc or push ja dec fisub fdivs jnp add adc xor test push and sub in addl data16 cld orb push xlat mov xchg jo call test divb and cmp add addr16 mov mov xorl xor xchg rclb fbld jne and and rcr inc jno andl rol pop or (bad) ja enter add dec mov fmull sub mov daa call andb mov cmp dec mov movb xor mov mov or in test les cmpsl mov xchg or mov xor adcl js pushf shlb adcb push and add lahf dec inc test call add cmp lahf in adc icebp jo xchg aam jbe pop movsl jno rolb stos pusha add inc (bad) jo cs sub push adcb mov add les idiv andl (bad) mov or xchg in shrl inc adc or in sarb push dec adc (bad) hlt je arpl loop rolb jo push lahf fsubrp je xchg xor and insb dec aas int3 pushf divb sbb dec or (bad) andb addl inc mov das sub enter bound pusha push icebp sbb or lea sbb insb inc scas adc hlt mov and fwait dec sub popa pushf incb shrl cmp rolb (bad) scas xchg dec xor icebp pop inc add adc pop adc add dec (bad) pusha leave push cmp int3 cld xchg ret fimull jmp dec sbb sbb pushf add adc movsb xchg (bad) mov daa hlt inc in enter imul xchg subl (bad) aas or dec mov (bad) cmp and pop dec lea xchg push mov add dec pushf push inc (bad) adc js js icebp ja jmp (bad) jne lods clc inc popa jae jp (bad) lret aam sub icebp jg mov lret les sub push xor sbb sub and or pop cmp test jo mov js fiadd das inc orb pop lods rolb pop int3 enter popa fwait mov daa push fs sbb (bad) fwait push cmpsl pop add cmp imul add es mov enter jne pop jbe mov mov ds adcb pushf (bad) rorl mov iret pop push inc test inc or xchg into pinsrw pop lcall test leave testl nop ret or sub test jl out aad pop add mov add inc dec lret mov or and addl es mov xor or pop mov pusha scas jno dec arpl addb pusha rolb push mov lcall cmp mov stc mov (bad) data16 pushf in arpl sbb pop sub or das cmpsb sub jp xor push mov into mov mov pop pop js (bad) and cltd gs xor push or push mov jle sub push jmp add jo test add insb cmp and std (bad) loop imul loopne leave pop mov test lods jecxz mov neg test addr16 pop dec repnz mov push cmp cltd mov data16 or inc es or call adc (bad) inc into mov subps mov and (bad) in loop popa lock sub (bad) rolb mov pop fwait mov mov xor leave add das out inc dec out daa jp loopne (bad) notb or pushf fidiv mov (bad) scas mov pop inc or cli add cmp andb adc jns (bad) call jl test imul (bad) mulb adc sbb push leave lret inc cld jg divl das cltd push xchg cwtl int sub mov lds test or mov inc (bad) lods mov cld scas xchg movsl push push das popa pop mov insb or sbb sbb repz jnp rcr imul inc sub mov pop inc mov loopne inc lret lea cwtl push (bad) jle or inc movsb mov popa fwait loope dec fcmovu or dec jl pop sbbb add hlt mov inc cltd fiadd jns fsubl ds add mov loopne push xchg adc pop or jno arpl push dec pushf cld mov adc xchg in pop xchg sbbb cmp inc lock mov jne cmp adc and scas call push (bad) insb xchg jle or inc inc add sub xchg dec push sub jne xchg xchg xor mov vpunpckhbw enter push movsl mov or mov xor iret mov or idiv pushf push fisttpll lock add cwtl inc mulb xor daa aas cltd xchg fsubrs cs sub jo mov and hlt cmpsb sbb pshufw fsubl je or adc sub lret adc outsl add adc shlb imul mov popf inc fdiv aas test sub push dec (bad) sbb and (bad) enter in cmpsb sbb push inc daa adc sub add lods shrb movsb mov cs pop inc inc sub fstl mov push mov adc xor js and fisub aas mov mov std cmp adc mov (bad) imul push jno push mov pop cmp inc jo stos mov mov add push daa (bad) test leave adc jno leave jbe test mov inc loopne fst adc inc jl vpsubsb jno adc cmp jne mov les sub icebp je or or xor aaa scas inc pop iret mov mov test aas mov jle pushf mov add fsubrl xor add out lahf outsl lock sbb lods adc xchg int3 fsubr dec dec fldl fsubr or adc mov aam (bad) and nop les mov je (bad) mov mov ja dec pop mov and xchg jno sbb add inc fs sbb (bad) rcll idivb and push in shlb fwait hlt and adc xchg ret stos in (bad) sub xor cmp mov lret imul sub cli jo or divb popf fs push in or adc pushf ret add mov hlt or pop sti jg add pop add cs adc negl inc inc js repz aas int3 mov jnp mov gs pushf imul pusha pop push xchg mov es push push cmp dec push pushf pop sbb mov adc outsb or loope jo adc or addr16 imul xchg mov repz pop push call push pusha loope idiv xchg movsl adc xchg mov and add test mov mov xchg dec test out inc rcrb cltd xor mov xchg pushf icebp xchg push push or in data16 pusha add mov dec mov pop xbegin jecxz insb cwtl cs adc mov jnp adc pop outsb cmp xadd mov in fwait ss es jo adc ret inc push loope addr16 rorb mov movsl mov dec sub push xchg dec test mov xchg sub fist mov ret sub adc jae dec roll stc clc xlat push dec loopne repnz add lahf data16 enter push ljmp mov and push mov js sahf or movsb fild inc nop addl pop sub into dec mov (bad) adc lods inc xor adc xchg in pusha xor mov and loop add in aad push test sbb pop mov jo sub adc (bad) cs mov xor leave scas (bad) or adc pop dec popf pop int or mov sti test xchg cld (bad) es xchg ljmp loop add vcvtsi2sdl add lods cmp jno call les in arpl clc lahf push push fstpt pop xor pusha or mov sbb mov jns test int mov je jbe arpl mov or cwtl push adc or adc xchg rol jl and cmp mov and mov pop sbb dec call pusha push mulb mov add jmp pop and sub clc pop ret add fcomps outsl jno jnp lds iret cmp leave pushf mull pusha jnp push outsl mov fnstcw push add xchg jb mov xor sbb xor jno bound pop cmp out and pushf aas push sub cmp inc inc add enter xchg fs inc sub sub sub pushf xchg jo adc das mov sbb cwtl call cld cmpsl inc fdivl sbb ret pushf lea in rorb mov add outsb xchg test loope push jp (bad) mov push stos cmpsl jle dec dec rclb add mov mov sbb dec call inc ret xchg xchg jo dec in jg lret (bad) das jbe pop sbb sbb or insl mov mov fldcw inc icebp pop cmp mov les hlt adc push jns xor xchg jo jno mov xchg inc cmc push lea pushf xor xchg and add (bad) mov mov mov push lea icebp cmp clc jae push add clc sub push dec movsb js out add dec cwtl jo mov rclb adc loopne scas add sbb test add push xchg (bad) lods adc push inc dec pop pushf out pop loopne xchg add iret cs mov ret scas mov sub stc (bad) push popa and pusha pop jle fbstp push rcr push or xor jno shll xchg add push ficom sub push dec (bad) hlt ficom mov cld sbb adc scas punpckhwd inc inc mov nop sub cwtl pop adc mov mov data16 testl out cmp push add insb mov sub and mov out jns jo push lcall fstpl push xchg add jg jg nop add movsb push jno stos inc cmp dec (bad) mov test xchg in jg nop in adc xchg and cwtl add add stc fwait popa inc (bad) cmpl dec adc dec mov popf rcl fs xor aaa (bad) hlt scas and xor sub dec in and cmp ljmp bound pop aaa add (bad) cwtl mov aas divl sub pop (bad) jae push daa lds xchg sub or insl add sbbb add ret or insl inc inc push les jns mov mov stc mov adc nop cmp add insb cmpsb mov les mov cmp je in (bad) arpl sub das stc push (bad) jo inc cld pop push sbb jmp adc sub bswap lcall push and and dec add pushf leave fidivr push mov popa rcll in sub mov addr16 bound inc sub and test add les and cwtl popf xlat inc xrelease sbb aaa jle test ss test lcall (bad) fmuls inc adc fwait cwtl out stc push mov je mov adc mov push pop test shl subb movsb adc dec (bad) aam pop pop jl cmp insb call add int3 (bad) cmp in int3 shlb add mov test push mov mov jge mov xchg sti mov sub lds cwtl mov push push mov add xor sbbb dec dec cmpl sahf or push mov idivl xchg push inc imul cmpsb es inc and iret add adc cs dec jg cmp xor cmpsl xor push into and sub ret mov jns jno subb cmpsb push arpl push pop pushf mov mov in or push or lock fs xchg loopne add cmc sahf (bad) dec add int or test sbb inc and and mov sub xor out mov dec mov pop lahf add repnz (bad) jp arpl ljmp inc movsb jb pop cs add fwait adc mov push stc fistl xchg fsub add dec test jo (bad) xor and add adc sbb cld xchg jp xor fsubrl data16 push hlt add sbb jl push das dec call xchg sbb add jo push push lock pushf jl adc ret xchg mov or (bad) jo (bad) xchg data16 cmp ljmp dec in xchg (bad) jno lret test mov inc int3 aam add and push add ja or pushf inc shlb fs (bad) xchg jne js cmp inc movb adc aam ljmp fmull and xchg mov aam and add hlt jae add pushf cwtl mov adc and sub mov jb in mov mov fdivrs cs cmpsl aaa or rcrb outsb jl add in mov jg mov cmp jns jbe dec adc aad stos or daa add push repnz fiaddl lret gs lock pop add mov fwait nop/reserved inc adc jp pop mov or dec sbb sub xchg (bad) std or inc insl push (bad) lock sub movsl push and mov (bad) (bad) int3 rcll pop and mov sub lahf push or insb push (bad) negb push xchg js inc xchg pop push in cmpsl inc arpl xchg fildl mov enter dec inc mov jle add adc ret push in xchg (bad) (bad) mulb push xorl jo aad std mov adc push sbb je add (bad) in fistp (bad) pop test add cwtl sub pop sbb pop (bad) (bad) test or mov aad or sbb and rcrl adc (bad) in test popf sbb out test pop fsubp add fwait push rolb cmp es cwtl mov inc push and jg (bad) stos mov js and push cmp dec jl mov gs sbb push jecxz mov mov add xchg sbb adc push aas sbb lea xchg and ffree cmpsb nop std sbb mov mov xor loop or mov pop sub xchg jnp les sbb add xchg pop dec rcrb or dec cld cmp idivl pop push and call enter jge sub inc and enter lea hlt mov adc (bad) pop xchg loopne ss vmread scas fadds ljmp dec ds xor imul adc ss push push lock pop mov (bad) popa std sub sbb int3 ror dec fnstsw push lahf shrl in jo daa xchg adc fwait rolb dec and enter femms mov jno insb add (bad) mov lahf (bad) jo dec rorl pop loopne mov in push gs mov lret lock sbb dec inc rcrb xchg nop inc xchg test test lcall push jno aas xchg sub scas das mov leave fisubrl dec pop les dec mov mov mov pop jo lods xchg inc add xor or lcall and and xor iret mov add push add add adc mov imul nop lods xchg xchg repnz cmp es lock hlt add push lods orb adc dec or adc jo mov loope push mov lock adc fsubp fs pop adc cmpsl hlt xchg add enter imul and rorb test or sub mov and je call in loop jo popa add dec inc movsb add adc pusha fdiv call lock dec mov inc add sub pop mov test js dec mov mov clc mov jb orb movl mov fwait add lods pop mov pop xchg jo shrb and out pop dec pop xor cwtl iret add rolb xor icebp rcrl pop in int3 rclb cmp and inc loopne add jmp or xchg lret rclb add insl push push icebp sbb je (bad) ljmp or rorl push mov push pop or (bad) and aas scas add mov pop push lret inc cli loope sahf jl mov mov dec lret xor or pop pop cmpsb enter jnp sub (bad) daa or jno push mov cmp push mov lds xchg mov (bad) mov test addr16 or adc rcll sub icebp pop jns pop mov cmp sub jg dec adc data16 mov arpl gs jp (bad) testl xchg sbbb lahf repnz cwtl jo pushf dec cmpsl nop in outsl add mov int3 add or outsb movsb rcr jno or jo mov cltd and ljmp scas ja add jmp hlt in xchg or or arpl xchg dec adc push pop xor xor mov jb dec cmpsb adc mov dec jle (bad) hlt lock je adc xchg xor lods int3 orl xchg pop aad cmp aad out xor lcall orb pop rolb imul fs imul sbb (bad) xor test pop mov mov (bad) and dec (bad) mov xchg fwait dec ds jno mov pop test aam jmp add push into cmp loopne sarb stc adc stos and sarl cmp dec popa mov cmc popf pop sbbb popa int3 mov dec cmp out add or mov inc hlt scas (bad) and std sbb mov lcall mov sub shlb (bad) sbb ljmp clc mov (bad) test cmp icebp sbb dec cmc xchg jo inc sbb scas iret mov mov pusha call lcall addb sbb orb js mov les fisttpll xor stc lock mov mov pop pop and sbb mov cmp test les in cmp or nop mov bound push nop shr mov or sahf jo pop or loop mov push and adc js cs pusha adc and mov jl scas mov scas add and (bad) std mov lods sbb add popa rcrl cmp mov es mov (bad) jl inc lahf std inc xchg call xchg dec lods sbb (bad) push sbb and outsb cmp cld adc andb xor imul or and sub in push add mov and jge,pt cmp cmp not inc or jmp shll jmp mov mov jmp or adc push dec stos mov add push pop addl push (bad) xchg adc sbb mov lret sub add sub pop cs add xchg xchg es lock jmp jae dec pop (bad) xor icebp mov dec sub pop or xor push mov aaa add fildll xor xlat pop sarb jmp ret pop lret in (bad) int3 imul inc jecxz or (bad) mov fs clc pusha inc or imul ficomp in xor aaa popa inc push mov pop xor pop and inc mov push adc icebp into mov mov stos mov incl pop cmp repnz xor push inc mov add ret mov negb pop xchg cmp stos mov xor sub xchg pop adc stos in jg daa dec jmp sar loop cmp dec or out pop and (bad) mov ror jnp inc and cmp xor adc cld loope lret xor fildll or icebp lods cwtl pop mov sbb jbe or add dec loope mov sub (bad) jmp push in jl xor adc insl add or dec push lock add inc mov ljmp pop icebp fimul mov add (bad) or jne shrb jmp mov push push out and lock adc lret jmp ret sbb adc nop aad mov stos in lds adc jmp mov inc mov sub fsubrl lcall fs shl push xor cmpsl das pop pop fst and idivl dec dec push pop mov or pop jmp rol call mov shrl pop orb test sub push push pop dec js mov cltd push pushl popf adc or lahf test push fstps or inc outsb dec (bad) jb xchg orl cmpsl xor lcall xor dec shll adc arpl jmp or dec mov add mov sbb std (bad) adc neg adc add rcrl in xchg add xor fucomp cli bound sub or mov sbb inc mov std (bad) int3 jge cmc or pusha pusha inc push fnop stos mov pop push inc jmp adc push dec rcpps push inc inc cmpsb sbb and cwtl inc ret push add cli cld cmc dec mov ds xor pushf es or (bad) (bad) push popf jne fwait xchg outsb jno jnp xchg rorl shrb xchg lahf xchg pop mov adc (bad) and xor and cmpsb xchg push clc lods sbb dec push (bad) add sbb push aam flds int3 and dec bswap xlat decl pop mov jmp aad push repnz add push and push mov (bad) jns rcrl in pop push (bad) into mov xor add cmp scas jmp pop leave or adc outsb sub push jmp pop and jl rcrl inc ds mov sbb jmp sarl pusha push popw pop mov pop rcrl add aaa sarb mov sub sub and add sub rcll add cmp dec cli mov add xor into (bad) cmp js jno outsb xor add ret xchg das cmp ljmp mov mov shrl loope stos in xchg sub pop stos mov pop pop add sub call fmuls mov pop or mov sub rcll mov jmp and (bad) popf pop mov and jno jbe add pop and inc sub jmp ret in or push rorb cmpb jge sub adc sti dec and daa cli pop push lds int xchg cltd and push mov pop mov dec mov mov sbb xchg jg pop test xor xor sub add ljmp adc adc xor popl push call adc out mov pop push shll aaa push mov add add sti sub dec cmp in call loope xchg jmp push cld arpl add and stos xchg lcall addl cwtl inc push test roll sub aaa jmp xor pop jne add mov aaa ds and inc inc aaa in gs cmc pop add xor mov add jle mov xchg fisttp push sbb scas int3 mov xor jmp movsb add dec mov ljmp push cld add add xor arpl loopne into pushf adc mov adc push or xchg xchg jg in outsl dec xor pop cmp adc sub ja stos sbb pop pop inc (bad) and shlb add mov loopne sti rorl (bad) pusha push cmp repnz lock jb adc jnp lret ret inc push mov add rorl imul sub push ret mov loopne or movsl sub add adc mov jnp mov push or push lds or cmpsl sbb mov fwait push mov and push or pop sub add xchg adc inc cltd mov jno dec out push add std sub sub mov jp cmp pop mov stos mov xchg stos out dec mov nop inc or mov dec addl out sub push add mov or scas mov sub inc xchg inc xor insb or pop ja mov push pop pushl rol les sti test jns loop push xor fstps cmp sub mov adc orl adc outsl mov out xchg mov and push repnz repz xor inc pop mov adcb adc sahf pop mov imul push xbegin xor (bad) jp in sub pop roll adc inc push jns mov pop jb and mov mov push xor cmp or mov test jmp rolb aam pop and and std xchg jne xchg push cmpsb xchg pop cmp into je bound lahf xchg adc repz dec (bad) sub xchg mov push sbb push cmp jae ljmp cmp pop or (bad) mov xor jae shr sub add aaa push add sbb xchg (bad) and adc xchg mov pop xchg lds dec repnz jl push xchg jl sub add inc sub pop or shll lods cmp xchg xchg dec or pop cmpb call and pop inc mov repz hlt cmc out out jnp testl jno test or aaa (bad) jl jmp iret add adc into pop xor test pop mov testl jp adc cltd je cmp sarb push sub sbb subb push mov jo sub push (bad) cli jae sub cli lea sbb adc scas push mov fs repnz loop inc fild pop bound daa insl mov scas mov mov adc fistp push adc fistp sbb mov cmp movsl rcrl add mov sub orl outsb inc shr icebp enter sub pop dec loopne xor dec mov (bad) (bad) mov out inc sarl sbb or or xchg ja inc sub arpl add test push xlat and pop or and adc stos std pop dec das shlb js sbb pop mov xchg pop js orl aam pusha int3 outsl push push pop sbb sub mov outsb pop mov mov push int3 push inc jecxz sub push push mov jmp push cmpl dec and lea cmc shrl inc add (bad) stos icebp nop (bad) push sub iret jmp out inc fiadd repz lret and jg pop call mov push repnz push pop dec push lds sbb or flds icebp add dec jmp mov mov sti sbb jge mov mov jge outsl mov cld add push push sub mov push scas sbb pushf push data16 loopne xor loopne in lods cmpsb or lea mov sub add ffreep out dec push cwtl movsb add jp int3 enter out dec pop sbb jmp loopne (bad) dec pop (bad) adc sbb je xchg mov ss xchg jg sub into lcall loope xor insb inc dec shll pop adc and xor iret pop xor and jmp add inc test out mov xor in pop dec pop jb jb push xchg add jne cwtl jne xchg negl mov xchg xchg pop push push popf ja test dec das clc push jae add pop shl sar add int3 add jne pop imul or xor repz mov std dec idiv sbbb push pusha ja sbb xsha256 cmpsb rorb sahf or add jl jmp shrl jno inc pusha hlt add jmp imul dec adc out xor lahf pop cmp (bad) les orb or mov and or mov and push outsb rcrb or sub dec lock pop push push or push dec shll jmp jle out pusha push or add xor (bad) jmp js fcmovnu lret (bad) jno dec mov ljmp pop mov int3 pop jae test dec jmp pop cmp out add add push sub sub push push mov (bad) lret inc pop pop inc mov icebp mov mov inc dec sbb popa dec rcll cmp jo xchg sbb xor dec je add (bad) dec out mov xor mov inc or das mov jmp mov add dec cmp inc lea xchg push xchg shll push dec push pop add add jmp (bad) nop out test jecxz xchg cli pop mov inc adc push cmp push scas std repz imul (bad) shlb ret faddl lea lea add stos in push xchg mov dec jp dec roll lds add ror xchg pop xor or scas pminsw xlat inc shrl pop mov sbb movsl cmpsl lcall and es cmpsl push dec outsl mov jnp push pop inc lock push cmp lret jne xor iret sbb push sahf and mov adc jb adc pop xchg mov sub jmp or dec lods xor test cld test sbb lret lret add ret pop clc lret mov (bad) ficoml jmp dec and pop pop and push shrl arpl dec mov mov push insb mov iret pop (bad) sti pop or cli das inc pop movl add stc (bad) mov or jmp or jb ss stos popf out push arpl inc xor inc or pop sub adc popa mov jmp movsb pop aaa pop aad inc in mov mov jne into adc fsubr sub pop jb dec add mov dec pop xor add sti dec int3 enter adc push incb mul push and inc int3 add xor jmp out enter xor inc cld pop mov jmp cmc movb aam lock push (bad) xor or sub cmp adc lret xor xor or dec sti sbb dec dec mov add mov inc mov cmp in loop sub sbb sbb outsb insb sbb ss sbb or adc xor pop add push pop ds jne mov add mov cli sub add sub and in push idivl insl adc mov sbb shr and movsb sahf ljmp (bad) pop push adc push mov clc pop pop rcll nop xchg es lret int adc push outsb push out xor jne (bad) mov or data16 (bad) pop sbb decl subl push js mov nop enter pusha pop jle ss test in mov and push mov arpl aad push int or or cmp sarl pop pop (bad) mov push fcomip mov inc dec xchg adc out fdivrl enter daa stos pop and sarl mov (bad) popa cmp repnz inc xchg call mov sahf insb cmp mov jne (bad) aad jmp stos loop mov mov call lds or push add inc rcrl or pop jecxz,pn lahf sbb mov mov into jae mov push jne and push pop sub lret jmp push sbb aaa cmp inc xchg push dec orb (bad) clc add mov push mov mov jne scas cli add inc hlt xor sbb add cmp xor or inc cld repz jno xchg cli not lock mov mov ljmp cld push mov push leave sbb mov mov sub pop push push pusha sbb pop dec idivb cmc pop mov pop fldt test lock adc inc leave (bad) mov pop xchg insb std mov adc push sarb jge mov std scas mov dec stos and repnz mov pop dec (bad) repnz sub gs push cld dec jbe mov or sbb or xchg and fs mov cmpsl or mov jmp xchg adc ja mov mov rorl jno push or scas mov inc dec adc fldl es lock lahf mov int3 mov cmp add pop das scas and push nop ljmp inc jae pop jge adc dec outsb ret and cli pop jle and add pop (bad) ss add xchg sbb xchg and and lcall pusha mov lret out push loope sub inc (bad) mov lahf mov test adc adcl out dec fistl dec xchg shl push test repnz pop push mov cli fwait inc lods add out loop les fdivs ja cmpsl (bad) pop push inc bound sub mov enter pop imul (bad) enter lea add into (bad) into jmp (bad) mov mov xor je mov dec push lock fst imul mov jb add xchg adc lock cltd out imul (bad) cmpsb incb orl mov mov jmp insl mov and mov add fiadd out aas popf sub jge movsl in sub mov sti add mov out add inc and sarb xor sti mov cmp or out or push std sub loopne sbb jmp movsl push int3 or xchg in sbb dec dec xchg ficoml inc push cli pop pop fs jns xchg in add sbb ret gs test scas in sahf jno add into std add mov jmp test add nop andl inc minps sub popa ret jmp adc or push mov jbe inc mov out xchg popf or xor sbb cmp xchg jbe cmp fdivrs push data16 rolb cmp test or pop pop cmp iret sub int or sidtl rclb push push lret mov pop push or adc mov xorb add test mov gs leave mov sbb push cwtl lds mov clc sbb enter xor int3 add mov rcll jbe add sbb cmp xor ror or rolb mov fs (bad) in and fstl adc mov push sarl shr and lea pop mov xor test adc dec test rcl sarb inc outsl aaa mov mov xchg call pop pop pop adc jnp adc sub sub rolb psubusb xor jmp test sub popl inc sti sub mov jmp bound add mov (bad) lods inc push sbb repz fwait jo sbb sub aaa sbb mov popa cmp orb add lds inc cs push or pop xor push les sbb inc les jo (bad) pop add sub adc inc sub xor aam lock pop add das mov lds imul leave popa jl adc mov xor or nop stos int3 mov xchg repz loop jle cmp mov out pop inc stc xchg out dec adc lods sahf (bad) outsl adc adc push dec mov jle shrl jge cmc (bad) adc (bad) xor daa inc orb jg jmp dec outsl loope and xor notl sbb shll push or (bad) mov test sub dec sub push mov xor arpl mov pusha sub mov pop jp push mov loopne jecxz add adc sti jmp xor inc sbb jmp mov mov and pop ds push push stos fsubp aad adc add out xchg pop xor cmp push mov or out test (bad) mov cli pop mov pusha lret loopne or sbb push jmp (bad) dec mov pop mov ret adcb lcall daa ljmp insl and add sub push xchg iret add push mov inc mov push movsb mov sahf cltd mov or and lods lds xchg jecxz push call mov loope pop push fist pop cltd xchg jmp sub mov and push cwtl and xor insl das inc iret imul jecxz dec rcl dec scas add jb jo inc add outsb sbb xchg ljmp add mov (bad) push lods fs xor test adcb add div js aas loop xor or inc mov adc imul (bad) inc add daa out dec pop scas mov push or hlt mov jmp push rorb (bad) movb push mov or pop mov dec dec mov push adcl or mov fild je or pop add sub jp outsb pusha adc aaa sahf cwtl popa add dec enter icebp and inc jmp fdivs add fwait jo or repnz pop jns add int or pop xchg je inc fnstenv xchg dec push inc sbb popf imul jns xor mov popf add xchg xchg ret mov add push jmp xchg dec clc (bad) nop outsl push or daa aad sbb jmp ljmp xchg push push loop xchg bndstx xor arpl xchg jne mov pop push lahf add or mov add cld dec or roll lcall mov ss popa mov fisubl mov jl loop xor or pop movl jns sub add jge and xor adc lods int3 jmp cmc add pusha inc pop loope std jbe sub push lret push outsl add and or js or mov xor aas push add jno in rol xor imul add pop mov sub lock fbstp add push push mov push loopne add sub or (bad) fisttpll jbe nop pop jb mov jno popf mov jle jp pop stos scas mov mov loope dec adc out cmpsl pop into jg dec (bad) mov jb add popf and pop mov pop std inc std jmp mov out sbb pop mov sub aas fisubl push xlat jmp repnz test flds sarb lret imulb fs das mov fs rolb mov push jnp xor test push out sti neg popa pop pop jmp push cmpsb adc ficom push add cwtl adc popa orb cmp sbb xlat pop stc push push xchg or adc (bad) xchg test xchg in out out (bad) in push inc push add not xor roll call enter pop ja cs cmp dec or or xor leave bound roll or fisttpll sub pusha pop stos inc add adcb sbb inc (bad) xchg insl pop xor adc pop cmp ret jmp or jge push pop lock hlt dec nop insb dec sub xchg pop push mov fs mov add (bad) loope (bad) jbe ja xchg dec mov cmpsb push (bad) fstl dec pushf imul and sub je add jmp adc mov les in xchg movsb sbb sub pop add (bad) sub push pop inc xlat push push jmp repnz pop mov dec js dec notb sub xchg mov cmpsb fild cs ljmp cld fildll negb and pop nop mov pop adc out sub mov sub ljmp push loope jno les repnz mov cltd sbb push pop mov nop mov rorl inc ss mov cmp push add shr dec mov xor movsl rcr in inc jecxz jle push pop fwait (bad) jbe pop ret cwtl pop and sbb pusha (bad) or adc push inc and dec lcall adc push pop xlat out xchg adc xchg int lods pusha test dec shr imul sarl add pop leave xor dec add add daa shll or es dec inc add add xchg inc add lret (bad) sub mov xchg add cmc inc dec or xchg std xchg pop lods mov rcll adc repnz outsb std mov push icebp mov add cmp or loopne dec ficoml stc hlt and add dec cmp ds mov mov insb movsb sbb scas dec fnstenv jg and test addl adc scas mov push push mov shr loopne jp and mov pop push adc mov pop inc add sahf test adc das fs es or das stos sub decl enter add push sub jg adc push inc and or mov pop aam cmpsb jecxz jle enter xchg xchg addr16 add dec dec and dec imul scas lea in sbb mov jno lret add xor mov hlt push xchg pop cs push leave sahf pop fidiv jnp mov adc mov dec dec mov jmp out loopne dec push decl push pop push push push push fwait test cmp inc notb mov push adc or sub pop nop sub pop add fimul inc imul inc or jns pop fwait jle imul lcall ss or out push add xchg pop lahf das adc and ja das sub jo or xor mov jmp into ret cld cmp outsb sbb xchg mov jmp popa scas xchg dec loop cld (bad) jecxz add mov cmpsl sbb cld repz mov pop jnp pop pop arpl jae and lock (bad) dec imul flds sti adc jmp xor jecxz push pusha out mov add jmp popf mov mov pop dec sub dec jnp and or dec test (bad) dec test mov or push mov mov push loope or popf jge mov cli inc cwtl add xchg xor adc push pop ret aad notb push sbb adc std test adc rcrl incl fdivs icebp cltd mov adc mov jg rcrb or sub int in in lock xor movsl (bad) in mov add cmc repnz xchg call stc jno xchg jge cli nop sbb imul (bad) sbb and das ret sub dec mov cmp inc insl sbb ja repz das dec push lret int3 mov popf popf lock lcall ret in js mov add mov sbb dec adc pop xchg jl addr16 scas cmp add lret xor lds lds clc pop fwait (bad) pushf push adc xchg lcall sub mov pop mov dec nop jl push shlb dec jmp push lea pop jmp sahf xchg jmp pop mov xor push pop popl mov push lcall sbb inc cmp aas adc inc or andl pop jne mov fs mov inc lods out sbb add hlt push xchg or sub push std xchg stos pop gs adc je or sub push add mov or inc xchg pop ficomp icebp sar add jge neg in cmp call mov bound aas out cmpsl pop jle adc pop xor ja mov lock in pop lret push and push mov dec dec std ror mov cmp adc cmpsb fcmovu adc das inc add pop adc (bad) push ljmp dec movsl jns scas push pop cli xchg or lods call sub add jge sbb std jae xor sbbl das aam dec xor add out add rcrb xchg mov and mov add in rcrb add fnstcw jge add pop inc xor mov jnp fcmovbe stos stos add cvtpi2ps inc xchg or cmp cmp lahf mov and movsl js scas andl test or push mov xor add xor cmpsb cltd rorl mov add xor (bad) mov repnz or pop mov clc adc sub mov call push popf xor jmp add xor (bad) int3 ficomp mov push xor sbb pop sbb movsl test cmp lock lahf sub xlat in (bad) mov or (bad) and mov inc add lods shlb nop pusha out xor bound sub test mov repz daa sbb ret les mov mov xchg jno mov mov repz mov loopne inc clc das out push cmp int fisub hlt xlat inc add sbb aas mov adc sub jbe,pn icebp xor mov mov cld aas jne add aam push fidiv or add push icebp in add pop imul aad push sbb popf je mov add pop dec hlt rorb pop adc xor loopne repz add test inc push in pusha sub mov popf push outsl pop lea enter lock dec add fs sbb xor adc (bad) mov adc jnp push flds sbb or xor jo cmc pop pop aas pop dec sti xor sbb loope daa or add ja sub sub sbbl lea mov ja pop cwtl add mov add pop sub mov adc push imul sbb and and xor (bad) mov sti xchg lret nop cwtl xor adc mov outsb mov mov jge inc scas jl cmp cwtl addb cmc cmp loopne inc das cmp lock xchg mov xor add sbb cli or shlb stos les mov repnz inc mulb out cli flds xor xchg in sbb cmpsl inc cmp cmp loope imul push adc xchg mov sub sub xor (bad) or nop adc sub mov enter ret xchg mov push add sub icebp lret cs inc cmpsl cmc ret jo mov mov and (bad) cmp pop fstp jbe mov mov cld dec movsb (bad) sarb add mov inc push call lds test idivl jo dec sbb push int3 out pop fdivs sub jmp test dec or cs or mov pop and (bad) cmp ja pop mov push sub or add push rol xchg cmpsb add push inc les sbb inc mov mov in loope (bad) lock add xor xorl fwait cmpsb xlat loopne movsl xor stos mov xchg lods add lock movsb inc loopne test ss mov inc cmp pop pop pusha fisubl mov pop mov push xor and pop mov push aaa jg sub rol sub mov les mov mov push enter les ja adcl andb mov xor rcrl das inc roll in adc out (bad) mov dec pop sub push js notl sbb fsts xor mov aam (bad) jne pop daa fisubr jns addl jb xchg add jge cmp inc out dec pusha (bad) push repnz add or lss jae cld cmpsl out ret cmp pop cmpsb pop (bad) fs add cli jg dec or pop xchg subb popf jns fldenv push pushf fdivp outsl (bad) sbb stc xlat inc cmp add scas cwtl roll mov mov cmp fstpt lods cli dec mov push es gs stos dec add sbb add cmc jb sub dec popa xor cmp std aaa add and sub cmpsl inc data16 add (bad) inc push sub add call leave in add daa cmpsl aam rorl adc outsl and add int3 cld jl cmp inc add mov test adc out mov lcall or jecxz pop mov adc inc sahf aas lds js jmp push add jne (bad) ss roll insb scas adcb dec pusha iret jne jo call mul rorb in adc in out in pop orl mov maxps cmp cmp pop in mov mov outsb add mov add int3 insb fild cmp xor lahf pop xchg add pop mov stos in fstpt add or mov into inc inc fmul fidivl jne add test (bad) lock add and cmp (bad) pop mov add adc push or in push loope nop add adc repz push (bad) rcll sub stc jecxz xchg adc inc push xor cmp cld adc mov lret shlb (bad) mov mov bound pop or pop mov or and mov test sub jne push add and cmp stos mov pop adc push pop mov add js test mov sbb mov (bad) loopne shrl (bad) sahf add rcrl cmp push js ljmp mov dec shlb sub addr16 ds lret fistpl add cmp pop adc dec mov sbb or jmp lods shll add fsubrs cmpl mov and sub js adc cmp fimull lea gs mov inc (bad) xchg insb rolb mov cmp push decl pusha loop inc mov es xor fdivrs idivb and sbb inc lds mov sahf cmpsb mov cmc orb mov sub add and and push add mov imul popa and pusha mov push jns xor int inc and xor mov mov dec arpl fwait jmp imul push movsb push out cmp andl xor add mov xor scas adcb pop popa and mov inc adc ret jb xor imul popa insb fbstp jbe add mov ja add push cwtl mov out popf cwtl or jns add mov out dec sahf sub pop cmp sub pop add cmp int3 daa enter xchg icebp cmp adc push sub inc cwtl pop sar mov ja orb out cltd and jbe aam add add xchg mov mov fidivrl and jmp add cvttps2pi scas dec mov add (bad) scas cmp jle or daa out sbb decl xchg mov outsb lods repnz push cmc xor mov movzbl add ficoml rorl or add xchg cld push fdiv outsb cmp fiadd dec shlb fst leave inc add push fcoms pushf xor dec xor push (bad) (bad) mov iret push dec imul fnsave (bad) rorb xchg (bad) js popa sub and aaa add mov loop mov push jp call mov mov cmpsl add loope xor sbb repnz adc add shlb xor mov mov stos dec iret add or mov scas and jne aaa icebp mov les push pusha insb test dec xchg mov inc mov mov adc faddl movsb or andl add sub or sub movsb add xchg leave jmp (bad) jae push shl dec cmp add rorb jl mov inc dec sbb aam dec or in jmp jno push mov test add add pop les jmp mov setg push js cmp and fdivs pusha xchg add adc pop cmpsl cmp add je rolb add adc jmp cld jae xor lods nop push repz es xor and les pushf mov cmc sbb stc std cld pop in xchg add push pop loopne adc cmp jg dec add add inc in dec ret fist aaa sarl sbb popw (bad) mov pop (bad) push xchg xchg or mov dec push xchg fnop push icebp add xor nop push mov int cmc icebp das adc popa shrb cmp xchg jmp adcl xor aad into cs rolb mov lock pusha icebp adc (bad) add sub and sub sub jb xchg add jmp mov or mov xchg out add inc cmp insb xor xchg (bad) (bad) mov push mov orl lea js in jp pop sub jbe or cld fadds dec inc arpl mov daa sbb popf lret lock xchg popa cmp jg add push call inc orb add or fmull and (bad) fimull icebp add shl cmp mov add ret lods sub add pop cmpsb nop jecxz xor and xlat adc cmp loopne jge add ss insb mov and fcmovne bound add add cmp jmp cld les mov cmovae and add nop or cmp mov add ja aam movl and inc push fwait sarl cmp dec xchg or idivl scas and pop add test lods jne or into mov mov xor add pop pop push movsb das jne add mov xchg flds mov jbe pop movsb addb sub mov dec and loop je xor inc add or faddl jno addr16 fs inc (bad) (bad) leave add cwtl add sbb out add or nop inc xor cmp ja sbb lret jns test push sub pop fdiv xor pop mov cli push sahf mov dec pushf mov call mov mov fild imul sub or cmp popa imul pop sbb bound jg mov add movsb popf xor flds ja or add insb jno mov pushf mov and pop add xchg xlat push xchg jns add addl mov sahf loope inc push movsb push cmp addr16 push mov lret std fstpt jge nop jo ficoml or dec adc std xchg loopne add mov sbb ljmp mov fcmove loop cmpl dec or dec cli sub int add jb (bad) or add and add fidiv jne popa pushf packuswb adc xorb enter push loopne scas test int3 push adc jns (bad) aad add fdivl push inc adc sub jg or push pusha lahf idivl test add push ficompl mov sub hlt mov nop fcomps inc jge nop sub iret cmpsl sbb test or into cld int xchg inc sub inc or add mov (bad) jge sbb das inc cmp or (bad) loop jo in imul out dec pusha mov or sbb inc jo cli and xchg dec bound (bad) scas in dec dec lret cld dec sbb mov cmpsb cmp mov pushf mov lods outsb cld pop push enter nop sahf mov aas and jle sbb enter outsb mov lahf jne add ljmp xadd xchg and sub sbb add daa aam imul out pop sbb mov aad push sub test (bad) jg insl out imul pop mov inc add or fwait shr add sub lret stos add push fldt aas cmp fadds add mov popa (bad) sbb out adc fisub cs and mov xor sbb pop cmpsb rcrl (bad) inc fsubp dec or sub lds jne dec and and int3 je adc xchg lea add add xor cmp mov add (bad) lods repz pop jnp movntps add ret xchg sbb jp inc popf into loopne dec adc xchg fidiv and insb fisubrl xacquire push int shlb inc mov sarb add or fidivr add or aaa add pop and xchg cmp add push out jmp in shlb into ds jge test sub pop pop std push (bad) je mov xchg cmp (bad) mov adc (bad) imul mov daa mov sbb loope pop pop bound or ret add test fs incb roll push (bad) add mov dec or in jbe cwtl cmp sbb mov ds add lret stos push popl jp test cmc add outsl sbb inc xor xor imul add in xchg sub add xor push xor rcr sub push insb add fimul lock add pop mov jge popl adc mov sbb and pop add jg aas lds push xchg and call sbb loopne sahf ss roll popf pop add iret add cltd fnstcw fldl add pop (bad) repnz sbb jbe add add out add xchg and add clc cmp scas fildl dec aad loopne push incl pop rcrl and add jmp jl (bad) rorb sub mov mov mov jno mov push xchg mov pop cmpsb pop test rorb sub inc pop jb cmp pop pop mov adc mov sbb xor pop fldln2 jns dec imul enter fmuls mov mov jle dec sarb jae pushf add imul push push and inc xchg add ret sbb shr sub or add pop or (bad) ja (bad) (bad) mov js nop cmp jno and lret int3 add fucomp addr16 add mov push xchg and xchg pusha pop and arpl add test ficompl fistl adc and pop faddl mov mov fiaddl int adc lock les add push cmpsl int3 scas adcb add das xchg std int jb pop xorl ret dec cmp fildl push (bad) pop push add out mov add test mov pop adc mov add imul sbb or rorb pop fisub adc movsb add and sub (bad) iret or movsl sbb addl dec lock and into add pop dec and sbb rolb fldl imul ret fwait popf je adc sub add sbb loopne sbb inc mov jnp lods mov sub aam xchg fsubl add jns shr sahf je add mov adc movsl add stos jbe pop xchg loopne pop cmp test hlt add aaa dec pushf jg ja aas sub pop or (bad) xchg lods and cwtl nop add mov xchg lds mov cmp sarb adc inc push ljmp sbb mov fs mov xor aaa inc add xor cmpb clc mov lahf push (bad) fisubr xchg mov int3 xchg add repz push add mov adc cmpsl add hlt (bad) xchg sub mov lea into jp,pn fnstcw add sub lock sarl fidiv inc imul das dec jmp enter lods movsl pop lods xchg add js cmpb mov push mov in or push add add stos pop (bad) std cmpb inc add test lahf xchg nop into add sarl push mov leave add fdivp push in sahf data16 xlat mov add loope mov pushf add add jo jae mov xor aaa idivb cwtl dec lret stos faddl ds (bad) pop movsl in mov (bad) mov sub push xchg add int xchg nop mov stc add jae mov xorb add imul push cltd cmp jle je add stos sub xchg js add imul inc and aad lds pop xadd xchg or repnz fwait cmp add mov addl dec mov loopne xor cli lds stc add ret in inc xor jg fldcw mov jle mulb mov push add mov cli push ds jge add dec aam xor je cmp add sub and sbb sbb bound xor jmp xor push push mov fmull test push je add adc les (bad) fucom mov aad movsb add inc sbb nop mov xchg cs fdivl cli data16 mov jns sahf xcrypt-ofb cmpsl scas sbbb mov neg mov xchg sbb lods jl out cmpsb hlt ret push rcrb cmp pop clc pop ja fs lock fmulp lock jle add movb shlb jg push inc xor mov out adc sbb mov insl orb jnp add inc jb add xor jne leave xor (bad) mov push jno orb das lret repz scas outsb in movsb xchg (bad) sub jae and add test adc xor movsl popa add faddl sub fidivrl jb add mov arpl loop rclb lods push pop pop mov (bad) push in loopne adc sbb dec outsl imul mov jp test cmp in xchg add fdivrl pop push inc or adc adc (bad) jne add mov pop add sbb sbb stos jg add aas mov cmp lds sub xchg sub xchg dec xchg jle add data16 mov sbb sbb add cld lret ja mov cmp mov inc pop fwait xor sbb shl or sar add cli sub jmp mov mov dec lods jle add jns aam rcr sbbb out call scas fs xor add and sub xchg pop xor cmc std xor fadds add (bad) aaa inc jo cmc jl add sub xchg loopne das pop mov pusha xor push cld xchg cmc cmpsl sub mov xor jo unpckhps xchg pop loopne adc or add aaa hlt and inc cmp mov (bad) movsb rcl arpl sbb dec mov inc jp adc xor (bad) ja cmc test lods mov ret cmp xchg add rcll ror lods nop sub test es les popf jle and and into jp shll jb inc out inc or mov lea xchg std cmp and mov mov jno jle inc idivl mov and jge daa (bad) imul push fstl add adc lods add repnz mov fadds dec aaa inc jle cmp inc jecxz and outsb (bad) push je xchg mov dec mov ss add inc out add jecxz gs pop hlt dec add push sub je int3 pop xchg jl add rcrl adcl add in and mov cmp adc rorb clc nop push adc mov je jg add cmpsb (bad) push fmuls jge js inc mov inc and push enter dec js cwtl rdpmc or js adcb ror into xchg clc dec add or inc push mov mov sahf jge dec test insl jp pop sbb mov add jbe mov or imul cmp jb sub sbb xchg sub or push inc or out fmuls jne xchg add mov mov xor mov xchg inc mov mov jmp in pop loope push cmp xor in sbb lods fidivrl sbbb movl call add cmp fcompl add roll inc push das test dec mov roll popa std inc add ret repnz or les mov xchg lods ss inc vmovntpd cmp fildl sarl lret mov push lahf xor data16 (bad) mov jle jg push jl (bad) out loopne mov adc dec mov dec in in andb mov pop ret mov inc jno add push pop push xor push enter add mov inc mov in mov cmp cmp add xor add dec jle jb mov lret (bad) push clc push inc in aas add data16 pop jno cmpsl fstl mov pop aad inc inc lcall clc mov push mov xor xchg sbbb mov pop cmpps addb mov push sub add cmpsb add jno out jmp sbbl add and add repnz dec call popf add pop pusha jbe or add dec inc jg push repz sbb jmp (bad) cmc mov insb add push lret push xor push xchg (bad) divb gs ret add push rcrb push xlat lret std cli pusha dec roll jb xor mov rcrl jae call add cmp add ret aaa sti xchg or sub (bad) fsubrs pusha lock pop cmc mov popa pop add cmp xchg stos xor cmp hlt int3 ret fwait inc pop imul pushf add clc pop popa pop je negl cmp aad das mov add repz cmpsl pusha adc mov aam add mov pop pop and or dec mov lret out pusha popf adc mov add push add cmp imul rcll out js andb mov (bad) stos pop mov jno lock add dec lds clc add cwtl push iret add sbb pop test xlat fmuls (bad) pushf repnz jp xchg sahf iret inc and mov ret mov cmp enter add test jae cmp add pop push fsubrs xor cmp in loope lock adc mull nop fs pop mov (bad) int stc sbb cltd pop test sub (bad) sbb adc hlt sub (bad) add xchg add ret add pop push inc sbb and add add lea mov es out hlt push inc cmp mov xchg repnz sbb mov nop mov push push rorb rclb add mov (bad) lret add rcrl add sarb jmp xorl xchg clc cs loopne cld or les jns mov and pop mov lcall mov adc sti dec add leave in add (bad) dec stos and fmull stc outsl sub jne test cmp dec pop and xchg sbb call clc xor ja push or xchg iret cmp ds sub push maxps cmp sbb sub test (bad) push xchg pop pop xor (bad) loope andb or das (bad) add mov xchg sahf rolb add xor pusha add repz add int adc push add imull es stos popf je jo sbb sub or out inc push push mov jno add sub mov mov out sub es fistp in and mov cmc add aas dec (bad) je cmp enter (bad) mov stc cltd lods call addb cmp sbbl in in inc or hlt lahf mov test aas lret jmp push xchg xchg int pop into fidivl cld cs clc mov push pop dec pop add imul xor aas add pop int les xor scas sub repnz xchg mov jb jp add mov in cmp addl frstor aad cmc inc adc sar popa xlat lock push packsswb jns (bad) mov cltd mov movsb inc test push lock add lods inc dec mov or mov (bad) push enter hlt jns out cmp sbb push and mov test aam dec add test sub adc add fs inc jle jnp add (bad) test inc cmc in mov mov dec xor xor repz scas cwtl outsb aam lods and test add xchg adc jb sbb fsubl mov in pop push cmpsl add dec out pop push xor and sbb mov into sub mov out aad add xor fwait sub inc xor icebp xor dec add pop out movsb int loopne fcompl daa inc dec xchg add rcr jb and sub or dec push insb pop leave test in adcb cmc sub fcoms xchg shrl (bad) adc lods mov pop jae or int cwtl das mov sub movsb cmp and cmp outsb repnz adc (bad) imulb sbb jmp add add stos cmp dec push rclb pusha pop pushf xchg das jnp add stos sbb dec add ljmp or xchg insb insl int loopne pop cltd repz movsl xor and lods clc dec popf jl bound jne add lds xor outsl aas or frstor movl mov cmpb add das xchg mov cmp add mov nop in jae pop add add loope mov lea out ljmp pop add arpl lcall mov mov fildl and jle ljmp lahf add dec or inc lock sub cmp mov dec push and adc xor sub jecxz and and add and (bad) sub lret insb mov jne xchg jns push sbb es inc mov push mov rorb cmp xchg rorb leave push das cmpsb dec and sbb stc test aad add inc ret into loop lods test loopne add fwait repnz fstpt pop add xor push push jle test ljmp js mov push lahf sbbl sub enter xor or and cmp mov sub and lcall gs or ja je push int3 iret imul xchg loopne dec add push mov shlb in inc xchg rcrl cmp cmp sub shld mov xchg jo dec jnp clc mov lods popf cmp mov loopne xor in cs imul xor (bad) ss sbb (bad) lock out ljmp dec dec das push imul xor (bad) rcrl das sub fidivrl cmpsb push test add sbb mov xchg xchg fildll mov adc cmp test jnp fadd adc push or jg or cmp mov clc pop jnp add cmp inc jg insl inc push incb add mov int add add call adc mov into add xor outsb jb push mov js call lock cmp rorl fwait sub (bad) loopne add sbb xor lds push cwtl adc mov jo insb add add cmp scas mov xchg sarb jecxz sti and pop sub add sub fildl mov arpl and sub mov xor repnz in cld jne add into push outsb or ret add xor add (bad) cmp add jl stc fisubrl sub add ds mov loope adc adc lahf in (bad) mov (bad) aas xchg inc add aam insb add mov call enter sub (bad) mov (bad) sbb nop jl sti sbb add adc add inc sahf jb call push xor in and inc push subb pop sub lahf push sahf call ret mov rorb mov mov xchg add movsl lret xor arpl sbb popa dec ljmp stos fsubl cli and add sub sbb popa add enter and sbb mov push dec mov fiaddl mov loop inc (bad) lock jbe pusha fldcw push aad jg in sub mov stos jbe jo xor in xchg pop xchg cmc movsl sbb rorb and push and scas enter mov and add test mov and add sub or push stos add mov leave mov and lret gs mov jo push xlat push mov sbb adc mov out pop jno and lret mov xchg fiadd jl (bad) pop dec ljmp mov add cmc sub xchg add pop stos sbb imul rclb mov call and stc add or addb pop mov aaa sub lahf adc testl fld xchg out add pushf cli adc scas arpl aas add mov cmp mov jp leave push fsts add push xchg test rorb push pop xor push inc jns add xor rol mov xchg cmp leave ret inc adcl inc (bad) fdecstp loop add icebp imul sbb int incb sbb pushf inc js hlt leave rolb mov push icebp xchg xchg out sti add dec mov imul mov aaa mov jae (bad) xchg xchg xchg std mov test push je nop es cltd or jne and push fimull push dec or cld sets adc add (bad) or xlat int3 add fidivl sub ja fcom sbb pusha jnp jg or pop adc sub xor lds add add pushf int3 cmp xchg (bad) inc add fiadd scas add mov dec fs mov mov sti cmc inc xchg imul and add (bad) adc jnp pop and fcmovb ja or or sbb add sbbb (bad) loop add push aas pop push sbb imul aad jne or insl gs sahf lret int3 insb imul enter add fdivrs sub pop je push movlps lret test (bad) pusha sub push cld sbb sbbb movsb xchg adc sub xchg pushf dec push cmp (bad) cmp lds xor mov pop add mov stos add rorl sub add mov mov mov sbb pop imul je pusha test jg int xor aad xchg cmp in mov add outsb sub jae rorb scas stc add ss xchg cmp xor jno mov add daa fistpll add int ja in pop add sarb (bad) cmc add ret and ss cmp sbb clc or pop (bad) jg pop jle scas xor mov adcb and push push cwtl jg pop mov push add push ljmp sbb out and mov pop fsubs pop adc fiadd and in loope loop cmpsb pop mov nop mov and cli sahf jg mov sub loope inc adc cmp jp mov add pop xchg xor pop shlb xchg jl push add mov cli push xorb xor add push jg pop data16 or pop push mov pop sbb imul xchg add adcb imull stos fucomp hlt daa pusha mov jmp cmp inc inc ja out mov es inc push jno add pop inc mov mov mov jnp dec std mov add pop or or mov ror cmp nop cmp mov stos pop and rorl sbb xchg pop sti fsubs icebp or xor add into (bad) hlt shrb aas xchg clc xchg aam add add jb dec es mov loop mov jno daa cmp jmp ret pop xorb pop xchg mov mov rorl jo cmpsb and movsb mov movsl adc arpl push or es mov mov int3 add ljmp enter lds xlat (bad) jno cmp mov imul jae loopne out push push mov add test dec push cmp jle call inc fisttpll scas das ds push add ja add je fadds add cltd or add and gs inc in push cmp dec frstor xor add std loopne adc dec push loopne cs mov test test sbb xchg testb dec mov cmp addr16 mov mov shll adc (bad) mov add jp add fiadd mov xchg dec jbe sbb xchg shr (bad) add dec xchg mov sub xor and jo lahf inc loopne call dec lea add test mov fldt iret inc test rorb icebp sar pop add imull push cmpsl pop mov add in stos mov enter add xor jae insb add mov mov sub push test aam jb cmp xchg rclb lret jl pop (bad) clc outsl cmc fcoms add xchg add sbb cmp cmpsb nop (bad) mov stc sbb mov je push inc pop xchg and push insl add jbe popa or repz push fdivs shlb adcb mov ficoml jnp push int3 pop add fstps jmp add hlt mov xor mov fwait cmp dec xor pop enter arpl cmp loopne inc cmp dec scas movl inc in scas jb add push sbbl arpl je sub dec cmp mov repz enter nop int3 leave sbb arpl nop adc mov in stc pop aaa mov add dec mov lret fldcw adc and add cmp daa adc sbb push push sahf (bad) notb add (bad) mov arpl cmp inc cmp xchg rcrb and (bad) or xor (bad) and popf sahf enter movsb rol stos shrb subl aam stos sub (bad) (bad) xor aad xor and inc stc mov test inc sbb add les sbb loope icebp mov sahf in loop push imull arpl pop mov push xor sub xchg mov sti mov sub cmp sub inc test xor xchg rol sbb push xor cmpsb or int3 mov jns (bad) test inc inc arpl adc mov adc test jns push sub sbb lret andb sbb loop sbb lahf jb jp dec mov leave cmp push sbb enter xchg test rclb and insl adc add out leave mov cmp push push and (bad) xor inc inc mov xchg or outsb fwait dec pop mov lods mull (bad) mov nop fistpl movsl push push in test add (bad) sbb int3 xor (bad) into push mov or mov sub pushf rcrl cmp xor push mov adc add aas clc daa idivb test and mov sbb clc and mov push pop sbb mov in in sbb loope pop and and repz div sbb pushf and outsl pusha inc ljmp adc test cmp sub add aam ljmp push mov add or lahf add cmpsl repnz addb xchg in (bad) lock adc push inc rorb mov pop inc cmp adc out dec push jae fist mov and mov stc loopne movsl aam xchg or js cmp jp add in and add inc xlat test push shrb sbbb insl inc test mov jnp add xchg mov ret aaa stos sub sbb lock mov push lock add and xor xchg xchg das add lahf jbe shll dec sub scas lcall inc outsb jae pop insl add xchg xor xor in (bad) cmpsl mov cmp lods xor fldl2t sub inc inc adc int3 xchg pop fs xchg and sub xchg popf addl cli add xor nop dec arpl and push sub or mov mov inc cmp int dec lret (bad) das scas in clc (bad) movsb test dec sbb je pop add stc sub jecxz or ret sbb mov mov add adc pop sub scas add push mov js cwtl xor inc adc lsl aam sub or xor pushf add inc imul lods cs and loop or pop or in xor pop push out (bad) (bad) into mov loopne cld push das cmp repz fistp std and sub data16 rclb (bad) lods loope adc das xchg or and push scas stc xor jmp call inc or repz xchg inc insb add or rcr cmpsl in adc and aaa rclb dec sar cmp or add scas pop sbb mov mov adc call mov xor ret mov mov lock popf inc xchg fs cs das jle test fcmovb and enter ret sbb rolb (bad) aam sub pusha mov or inc (bad) sbb cwtl fsubrs inc cmp pop jbe cmp adc add (bad) xchg iret loop add mov push push movsb icebp adc xchg push cld or das mov inc add movsb xor enter lahf roll mov inc jo lods mov push adc call repz add push les out adc and add pop mov inc (bad) pop jo (bad) and out or mov call aad sbb and lret clc pop cld out (bad) clc jno add arpl ss sub loope lods xor push jns imul jl pop sub jo mov push btrl adc xchg and ds inc sub fcmovnu add mov ret or stos in cmp enter (bad) mov cmp mov test imul add add cmp ja test push scas mov jg pop push sub or sbb int3 js or or lods add shlb fistpll leave add cltd jp jge sbb pop mov fbld lea stos sbb dec push loopne xor cmpsl inc and rcll test inc jle test xor orb mov jae mov movsb jo mov sbb (bad) movsb cmpb rcrl mov jb pusha aaa adc stos sub xor sbb imul aaa push (bad) jnp incb leave subl add ja sub repnz lahf ret or pop cmp sub rcrl movsb dec xor inc jno push add mov sar push xor pop cwtl mov mov (bad) leave mov ss nop cltd jecxz aam sbb enter dec hlt das cmpsb xchg pop lahf fistp cld loope test faddl loopne adc mov mov mov fcompl (bad) iret jnp cld push mov jle and push cwtl mov add sbb cmpsl cmp cmc test daa dec or push jb add mov mov and (bad) jle je mov cmp int jo into sbb out xchg adc sub jecxz inc push push and mov fdivrs sub add mov jno in mull and aas mov add xchg lret sub xchg mov dec in jae mov adc add dec mov clc xchg or shrl orb cld sub adc outsl shlb and lret int or in iret cmp adcl mov loopne mov js loopne stos add mov xor push popa ret idiv cmp mov dec fidiv mov shrl jmp mov dec push add in push insl cli pop inc sti mov int3 mov push push dec pop das lret mov call aad mov bound mov xchg fs pushf mov aaa dec xchg int (bad) inc les iret push out lea out sub jno les (bad) scas sub jmp xor push mov cwtl mov ljmp sbb jns mov adc pop and dec sbb js sub jb mov shlb jp push cmp push push js cwtl add inc cmpsl jmp loop orl and add (bad) and test jo xlat cmp jl movsl loope fucomi xorb mov add scas pop mov jo (bad) jmp add dec ret or (bad) test and in cmpsl or pop add jmp mov pmulhw mov push jge cmp push ja in add ljmp adc pop sub leave loop les sub leave add repnz and ja xchg inc pusha mov bound mov inc pop adc sbb pop sbb cmpsb inc es or jle xchg aam jbe ret cmpsl cmp cmpsb xor jne les popf mov ss inc xor cmp lahf iret dec nop pop sub orb into loopne xor mov dec pop (bad) repnz lock lahf jnp jno adc cmpb jo sub pop inc daa jnp lock mov mov in mov (bad) hlt inc inc mov in fdivl in xor enter js xor xchg xchg pop mov dec call mov js cwtl cmp pop loope cmp add hlt fmuls aam xor push push mov inc mov pop push clc pop inc xchg addl in mov pop imul fdivrl push mov mov and hlt loopne push inc test mov and stos fbld xor xor cmp xchg xor lods add add fsub loopne cli jo pop scas push repz sbb or mov insb sub inc aaa and adc arpl nop mov mov rolb add js adc adc sahf ret adc adc pop mov mov mov or inc add in and out lods and inc test and push or leave nop pop test or (bad) nop pop test pop dec dec inc out mov jb scas cmp mov ljmp jo jge sbb sbb push sbb xchg jmp in fiadd jb fmuls add in rdpmc fwait jbe sbb and push ljmp xor jae dec or pop cmp mov and xchg sub push add add jbe icebp repz mov rcll dec and repz mov aas cltd loop pop and and (bad) jmp dec sub popf mov push in cld lcall jb dec inc pusha adc (bad) xor xchg fcmove xor imul aam in add push in int3 inc rol add mov addl (bad) push adcb xchg cmp roll xor icebp cmc pop jnp add or adc ss xor es enter add stos add xchg lods add xchg sub fsubr lret loop mov cld add popa mov adc int3 cs rcr jns stos das add xor in icebp inc add jecxz fidivrl or imul or rolb fs sbb push mov and test loopne pop loope shll xchg cmp sub mulb sbb cmpsb mov mov ror in (bad) fcomps inc fcmovnbe jnp mov pop imul add cmpsl push std ljmp in add inc add adc or xchg data16 mov push roll dec dec cli repnz cmc enter (bad) adc xchg fildl (bad) ja xor push ficomp in adc mov ljmp out pop out add call push popf mov fldl insb clc cmp hlt add adc push addr16 loopne jmp mov mov shlb aad fidivl and cmp (bad) notb sbb add inc mov outsb pop xor mov scas sub nop push pushf mov rcrl testb xor stos and push adc sbb out inc dec add into jle inc sbb xor inc push lea cmp pop ja test mov add mov imul icebp cltd fs sahf jl add push loope test ljmp and pop push loope test pop pusha xorb cmp add sub cmpsl mov or inc int3 add outsl add push mov mov sub test dec xor jge mov add arpl xchg hlt dec add dec fucomip inc aas push (bad) add stos xchg sbb or and fsubrl push cmpsb out sbb xor jb jmp ljmp pop or push dec add arpl scas add dec imul push mov nop adc sub ret pop add xor or push loop cmp xchg xchg jmp clc mov mov pusha stc adc movsl dec xchg cs adc dec popf test cmp mov out add (bad) jne mov jp mov mov pop cli mov scas pop xorb adc or jp xor pop rclb sub shr adc cmp cmp add popa adc sbb mov add dec mov fcomip add outsb pop inc test imul invd mov out push jbe adc xlat jne verw xchg rep jb add and or add push and dec add repz sahf cmp jecxz mov xor jno add adc xor pushf or mov push test fsubl adc ficomp mov dec (bad) push sahf addb push cmpsl lods lahf add dec cpuid add ds (bad) mov add (bad) cld and cltd add push stos cmp lret in cmp cs loopne out add mov xchg add pop mov iret add add pop popa push enter test sbb aaa pusha add add jmp (bad) sbb insl test cmpsb mov jno add sbb icebp sbb lret mov mov inc (bad) lea xchg (bad) mov cltd pop in hlt je inc and lret rdmsr js loopnew push jb mov cmp fwait mov pop rorl add bound (bad) mov or test add and pop inc ljmp push hlt not cli pop xchg and fistp mov inc push xchg pop adc loopne cwtl aas xchg jns ds xor xchg inc add test add out rcl cld add or inc add push mov outsb jne mov in fwait jb fsub pminub inc mov inc in lcall pop mov add fcoml imul push cwtl add pop out xchg push repnz inc addr16 push xorb mov aad add loope das cmp pop lcall xor xor cmp adc inc cwtl aaa test clc push nop push add (bad) sbb ret pop xor fildl aam push add inc sbb mov aas adc pop roll jp in add ljmp add cmp mov pop fldenv es popa pop ret add mov (bad) cmc pop mov sub sti repnz add jp inc movsl (bad) ja push xchg (bad) xor xor out pusha xor jo xlat fildl stos aas arpl insb adc dec popa faddl and roll pushf (bad) pop nop dec daa js jo sub push call cli outsl inc int3 in sub cmp add cmp sub (bad) aad nop ljmp out stos shlb push ja pop pushf movb ljmp and sub sbb or movb aas cs pushf and push insl push mov add outsb push jb stc mov iret pop add xlat lret inc push add sbb imul fcom jbe loopne cld pop nop scas outsl mov push inc add sub sub jp inc movsb jle add test dec icebp or (bad) repnz (bad) repz sub mov ficom xor mov test dec lret add bnd jno add shl mov sub pop test andw add adc sti rclb jns ljmp addb xchg (bad) xor or (bad) pop js mov jecxz sub inc fnstsw xchg xchg subb js mov ljmp lret add dec (bad) add mov add jbe mov mov and xchg xor int inc pop pop lock icebp or sbb add pop cmp (bad) idivl sbb cltd cld sbb cs inc xor scas cmpsl mov jle add stc hlt js stos jb je add push push stos call shrl jae je cli aas nop add loop adc sbb cmpsb add dec jns scas int3 je add (bad) sbb jne add dec xor hlt pop imul repz mov pop pushf pop pop icebp adc mov pop jae push pop in stc loope loop enter sbb push mov mov add add jmp test js insl lock in insb out add lcall push orl push clc pop add add bound sahf lcall add out adc cld sbb bound mov rclb mov xor inc add mov and ds jnp add push sub cwtl cmpsb mov (bad) out ss lock dec mov (bad) pop (bad) dec and push pop push mov cmpsl mov lahf rcrl xor mov in lds adc mov repz inc cmp iret not and ficomp sti and mov add les sub shrb add jns add add jmp (bad) jle xor mov cli or xchg xor incl outsl or xchg cmp cltd mov popl sub lret loope,pt fwait push out pop data16 pusha push stos add insl jb fildll lds js mov sbb add push adc pop inc xchg cmp cmp cmpsb fbstp test jmp pop hlt pop in scas mov outsb dec sbb push inc push xor lods mov cmp pop xor nop das adc lcall hlt add inc in imul add iret adc cs xor add push ss loopne mov add push popf xchg ds cmp add xlat jne or imul sub xchg lret icebp add ja push xor (bad) push jns out add imulb in adc add (bad) cli jnp xchg cmp shrb add ja jns fcoms out cmp call imul jl xchg out sahf (bad) lahf inc adc sbb enter pop mov sub ja je pop mov test cmp lock aam hlt mul add ret push push sbb mov fadds cmp jns into mov adc jl add jg ja imul mov add mov fadds stc mov aad mov xchg add add push pop ds xor push pop add dec ret add stc pop (bad) xor aam cmc sbb movsl psubsb add cli cmp add mov jecxz jo cwtl flds dec std and pusha add mov and out sbb lahf lock dec add repz ret add dec inc jp aam pushl (bad) adc sub and or roll shlb cmp out adc (bad) sbb push jo sti rorb mov pop push add cs mov pop loop cmc lret push or adc mov repz or inc lods mov lea out adc (bad) test sub jp sub adc in aam add fisub add dec sahf xor lcall mov mov sub rorb or out test pop jns sub les pop and test aas in movsl mov imul scas sub push cmp insb push sbb xchg sub int pop pause mov adc jae lea jge cltd insl mov xchg imulb sbb dec xlat push fidivr sarl test out clc jp and jecxz cmp fild pop mov add pop lds pushf add repnz jo add movsb jnp add mov mov sbb clc lods dec jno add pop xor xor clc add aas addb add outsl or add ror pop add inc mov nop mov popf or mov mov repnz in add xor xor mov add or fwait mov inc and xchg xchg jbe arpl mov mov add aas pop xchg sub sbb add mov pusha test nop lods iret pop sahf add and sbb mov sbb lods pop add xchg dec aas add (bad) je add daa push dec mov shlb add in jmp inc stos lcall fsubl aaa add in mov adc js or jne mov push add mov mov lods ret mov xchg hlt jg add or xchg lods lret aad int3 sbb rol dec xchg mov loop cmpsl mov pop lods add jno iret or mov dec ja cs add stos in imul jg inc cmp cld mov xor jbe,pn rorl pop dec pushf mov lock pop jnp leave sti into push fsubl and sarb cltd arpl mov into adc push sub fdivrs inc adc popa inc xchg int3 mov aaa add xor pop nop add mov xchg ds popf aam mov pop xchg adc mov lods notl push (bad) fwait add (bad) adc shl add or imul jl add sbb insl incl dec std (bad) loopne cmpsb div ljmp add (bad) pop adcb cmp mov rcrl icebp jb mov add int3 xchg roll or dec loop aam add xorl test inc (bad) je push mov (bad) dec dec or fisubr inc loopne sarb mov inc xchg aad aas ret adc subb xchg xor add popf adc add sbb into jb jo jle cmp imulb mov add enter dec fnsave push add icebp sarl data16 sub add repnz sub sbb and lock cmp xchg stc (bad) pop in mov int3 es mov mov add sbb int sbb ja es std or mov add or sbb and test sub sub movsb add dec push repz outsb ljmp movsl mov sub add mov cmc sbb xor lret outsl pop jl loop dec add add shll enter sbb out add mov push lods rorl adc or cwtl add rolb jns inc icebp in mul je pop pusha gs and add lods sahf mov mov loop (bad) cld pop inc add adc mov pop lds and outsb (bad) pop stos cltd in call mov movsl push stos pop push popa adc in jbe pushf cmpl jle push or push hlt jecxz out inc sbbl icebp out clc push in popf jl add xor ljmp rcrb mov iret add pop sbb push add jnp es and inc lods insl add loope add fcoml out sub push adc mov lret add jne das cmp lcall pop fldl test lret (bad) adc (bad) push (bad) xchg sahf sub cmc faddl scas jb in sbb outsb pusha or dec xchg push xchg testb sub int3 add jb stos pusha jnp enter test (bad) xor test das xchg in test mov in jnp cmp add cmc ror cmp ja mov test xlat sbb and test aaa (bad) leave cwtl mov push push add mov add mov (bad) push (bad) jge add jne test cld loopne jmp pop cmpsl add (bad) cmc mov pop cli pop add shl xchg cmp ret mov jae dec or mov mov add leave in test lahf aas add mov mov jge test mov mov pop movsb sub jp jo aaa pop and test sub orb (bad) add cli inc mov add cltd add jp out pushf in lahf fwait lds cmp int3 stos jno sbb add lret ds dec xor mov out xlat cld add push ljmp orb loope dec adc leave add dec add and je jne xor pop xchg mov mov and xor push call cltd jns mov xor stc or push inc pop bound inc out cmpsb pop pusha push sbb xchg mov iret add hlt and cmc mov or (bad) dec inc mov mov repz pushf mov inc mov mov add push push shll loopne mov pop add mov cmc add push or fs xor sti je sbb jns push es js cwtl add (bad) lcall sbb fistpl (bad) xor mov pop dec jle sahf sarl ret lret add inc jp adc jo shrb jle test lea lods jge jmp xchg add rcll fdivrp insl cli in xchg mov (bad) adc sahf popa lods cmp shl gs call fsubrp dec mov add cmp sub aam add je stos mov and fmuls loope xlat rclb outsl je xchg add enter test sti bound ja jp dec cwtl push or call test je add mov jge add xlat and lcall sahf cmpsb lock pusha dec sbb test add pusha adcb push data16 outsl cwtl aaa es pushf xor add and mov jb add dec push jp les pop (bad) popf enter sub xorl sahf mov imul inc out add adc cmp ljmp ds jo and adc push pop scas jp sbb es jne pop add (bad) adc pop adc xchg inc std stos sti sub mov popf pusha xorl sub aam inc les adcl shr sub jne push add xor out outsb xchg pop sub outsl insb pop shrb sub rorl push mov adc mov pushf enter in dec mov add fnsave mov in ljmp adc cmp pop xchg aas mov das ja fisttpll and pop out push or rcrl shl add hlt or pop pop cmpl test cmp add outsb xchg inc add rorb xchg imul jo and cmp dec stc mov sub sub cmp jge or add cwtl stc (bad) mov lea xor fs outsb mov js repz out aad xor pop jns add (bad) lods dec lock repnz mov xchg and notb arpl pop fnstsw clc (bad) add (bad) sti push inc int dec add out inc mov xchg xchg lds pop add dec xchg mov add fisubl or scas add mov adc in in push xor fs jns popa cmp push mull ret add sarl add add stos xor bound popf stc dec pop leave or jp mov pushf dec xor sbb fs mov pop sub fcmovbe (bad) mov popa add mov mov cmp negl add cmpsb fs xor mov ljmp mov dec pop cltd dec adc jno stos loope mov mov sub (bad) or sbb push es adc popa call push dec push dec xchg jne enter push hlt add mov or in inc bound jno add cltd leave jg jo jns jecxz cmp mov aaa add fs xor jb add push and cmp (bad) imul pop jle inc or pop (bad) pop jp rolb and sbb add mov outsb add xchg add lods inc mov dec mov xchg add sub xchg mov sti add inc mov pop leave pushf and cmp icebp add in loop mov add xchg push sbb pop push mov scas mov jp rorb dec mov addl sahf (bad) rcrl je int3 fdivrs adc mov fstpl fwait iret add mov jne add rclb dec pop mov aam add fisubrl jne fstl dec out adc add ljmp xchg mov add pop pop xchg (bad) in cld iret repnz (bad) xchg in push xchg call into arpl mov adc add push shrb lock flds das xlat scas and or clc or inc and push pop mov fistp ret enter inc stc dec jge cmp bndldx sub adc cmpb das or insb loopne leave push jle or (bad) pop xchg cmpsl nop in inc cmp xchg icebp ret inc dec orl cmp dec (bad) push cli jb add jle ret addr16 add xor cltd mov mov aaa inc push call fidivr add cs pop lea shrb jo outsl dec sub fldl add mov popf call dec push or and mov pop inc jge mov pop sarb or sahf in pop faddl sub fldenv jle mov (bad) mov cmp shll mov fwait or xor cltd push pop gs mov and rcrb in add les add inc es test push test test add dec jo outsl adc js push push jnp fldl mov add mov (bad) (bad) lods push add mov add inc shll clc and shrb les add mov xchg loopne mov add add lock add (bad) (bad) sbb cmpsb mov mov dec sub adcb ret test adc add repz add lods and add aam aam sar or jmp lock mov sub mov aaa out out sbb push adc cmpsb aam das fsubl gs jmp (bad) cltd push pop testl mov iret add popf test add add loope pop fdiv dec sub or add movsl pop add mov add xor cmc add push inc imul js es (bad) repnz add or bound push lds imul mov xchg cld pop push push jno and xchg jbe sub pop fld inc mov hlt rolb aad jmp cmp xchg mov cs pop add xor push test sbb mov jl pop add aad adc (bad) adc add sti bound andb icebp cmc push or add ret add notl ljmp mov add icebp or daa incb pop fidivr adc adcb push push out add cli mov jl jne repnz test ljmp aaa adc movmskps xchg dec add ret out repz add imul stos lds add sbb les movsb push mov xlat andb add lretw loop loopne loope xor or inc (bad) and adc fistp cmp sbb cmpsb cmp jmp inc add in sub and mov pop xchg sub dec pushf cmp mov or ret add pop add int dec xchg cmp add dec push clc jbe add call arpl stos xor mov subb mov js add adc mov int3 mov sbb lea jmp cmp dec lret add sub mov (bad) xchg popa jmp or dec mov shrl aam add test or cmp jb sbb pop in mov pusha lds int3 out add test in data16 add jae lret add ss xor test xchg add pusha inc xor adc js aas or test jmp jecxz xor fidiv lock in outsl or add aam xchg movsb inc out nop loop shld dec mov sub sahf mov mov pop scas das dec out sbbl jmp pop stc adc into pop movsl add adc push add push jns testl enter outsl sub pop xchg enter inc addl add dec add mov enter cwtl mov pop jp test add xor add dec ss clc vmovups stc and dec adc sbb loop add cmpsb and imul adc popa fcoms popa jno outsb push mov add iret xchg add imul adc pop add or add or sbb jb inc add dec or mov lods daa push je test ret push pop xchg sbb add loope,pn (bad) cmp push in (bad) mov dec dec jns pusha dec xor clc lahf mov sbb dec pop scas cmpsb cmp add movsb insb cli mov ret or lds sbb xor pop sbb push test fwait out xchg xor ret arpl cmp mov es jg movsb scas xchg xor add std mov stos add xchg xchg and int out inc add out push mov hlt sbb lods adc ss jbe push inc je mov test in xchg inc add shrb sub je dec push push (bad) lods xchg mov jae dec jp icebp clc add lds rolb nop add movsb mov adc sub mov xor push and jbe cltd andl jno xchg shl jnp movsb xchg int3 and xchg enter (bad) push push in shll lock xor add mov sub cmp mov call mov jne pop imul and add stc sbb add fisttpl mov jg fcomps cmp mov outsl rclb jmp out mov sbb aas pop outsb (bad) push in sbb inc cs cmp pop dec jl adc stos fldl sub (bad) xor or inc sahf daa add mov inc mov enter mov mov push xor verw lds mov add mov aam cmp pop outsb fs mulb add add roll mov cmc icebp out xor xchg add (bad) je lds in rclb fldl arpl jnp mov fnsave stc sbb add test and add pusha sub xchg add add push add xchg lock sub cmp dec jns pop adc add sbbl in fild int3 inc xor add xchg jmp mov xor mov arpl aas imul sbb mov pop jns sbb dec mov (bad) dec pop push lock (bad) mov and bound cli out mov jmp sub in add push dec add lds hlt repz jmp cld add lret js cmp fdivr lcall dec adc cmp add and pop cmc inc sbb lret add push aas test add and jle xor pop movsb and inc movsw pop sub jmp adc xchg mov push dec pop pop (bad) or and das add xor clc sbb aam and (bad) sbb dec (bad) insb fsubrp add mov ret jne sub (bad) adc out (bad) jae in or test push jp stc bound push sbb mov (bad) hlt and dec nop movsb or jbe (bad) jno cmp (bad) rcr addr16 push push mov negl mov mov jae add (bad) sub push cmp fucomip inc xlat pop dec add fiaddl (bad) call add jae mov por inc adc cld xorl in sbb popf stos out add enter push cmp out scas popf add add xor aaa mov cmp adc pop pusha adc add ljmp retw sahf icebp cmpsb inc andl imul pop (bad) ljmp das (bad) movsb sbb pop lea jmp lea in mov jmp mov arpl dec pusha jp test popa fdivl out daa xor loopne xchg call inc addr16 je mov or fldl (bad) jnp out inc shl in add ds sub mov adcb mov sub insl mov add or aaa pop jl sbb add cmp pop xchg loopne out inc repnz and add mov psubsb stos in push out pop jmp add xor clc adc pop punpckldq lret icebp aad shlb and jecxz adc add repnz sahf pushl xchg mov arpl mov ljmp das push xor add sbb jmp loopne lds stos add int3 in fdivl cmp jbe xchg test inc sub cmc popl jbe fild imul mov fsubrl pop lcall pop shrl outsl bound xchg loope jae call and inc dec jg or mov (bad) cmp add xchg js lods add mov lock cs mov lret loope inc outsl hlt out add mov mulb sbb loop loope lar cli popa in or sub jle pop pop fisttpl cmpb jge aaa fimull or pop movl popf sahf cltd stos rolb ljmp xchg add sub mov mov or add inc adcl add jae push rcl js lods or decl nop aam sbb push push or cmpb xchg sahf loope nop arpl or inc out dec jbe sub fidivrl pop push cld jp sbb and or outsb imul neg add push out imul push push mov pop rorl test dec adc add push std inc rolb xor adc jl or stos jb mov arpl or shrl xor mov pop sbb lods pop mov stos stos incl cltd (bad) aaa push or sub clc lret inc sti add test push in xchg cld faddl mov stc dec add sbb push mov pop add mov jle xlat sarb xchg add sbb stos loop pop loopne loope das mov add (bad) jecxz fsubs add sbb mov sbb inc clc fwait add cmp cltd add cmp cmp pop add or add enter aam cli add insb jecxz add (bad) pushf test clc jbe,pn add lcall xchg dec aam adc ss add bound add aaa (bad) (bad) xor jg out xor out cmp mov sub loopne loop or push (bad) lock stc hlt sub repz cmp loopne cmpsl shlb add paddw dec inc jmp sub xor push add push adcb lock pop sbb inc in sub rcrl mov push and push bswap mov sbbb pop push sub fiaddl dec les (bad) mov sub decb jns std xchg adcb pop nop jle inc mov xlat cli xor cmp jno (bad) xor aaa add mov mov and xor xchg sahf add (bad) bound sbb and add add les pop push mov int3 ret ljmp cld jno jns in jne and sbb or (bad) outsb cmp std pop mov xchg mov aaa (bad) jo mov and sti push add pop mov bswap outsl mov sbbl fwait stc shlb push lock mov sub pop jnp jle insb xchg call cmp xchg xchg dec jl add xor lret push rep dec add (bad) pop xor insl cmp inc loope test (bad) (bad) xor jae cmp outsb outsl mov lcall cs sti popa cld rolb mov or and xlat adc ret mov sub insb xchg add cltd lgs (bad) sti add in and sarb fadds inc lret stos sar cmpsb xor into lods pusha fdivs (bad) mov clc mov (bad) cmpsb dec cwtl cwtl jle rorb xchg and xor adc loop add int mov inc add imul jp sbb xlat out es xchg add mov xor push jo je lock (bad) jp add cmovnp inc or jo dec sbb daa push pop sbb xchg add adc inc jns pop sarb add mov roll inc push jmp into loopne adc je das cli and outsb cmp outsb push xchg cmp enter add xchg push sahf test into insb add sub push or sbb xor xchg push daa cmp mov mov mov add adc pop popa mov dec dec jbe jp js loopne mov enter add fisubrl bound mov sub js enter inc ficomp mov dec nop jle fadd or je loope mov jae cmp push xchg insl lea add fwait and add push imul cmp and call and test fiadd pusha or add xor lock (bad) ja mov je and xchg and lods mov inc es jmp pop mov mov test dec mov inc fistpl add push addr16 jle stc out pop pusha pop ja jae pop (bad) dec mov nop xor loop outsb pusha loopne add push add insl faddl adc in add sub xor imul jecxz fwait mov out adc push or add (bad) push stos dec test test mov add push in sub mov stos push pop add push int3 (bad) js mov fmuls cmpb outsl mov in in cmp cmp inc jbe (bad) testb pop lret add and add repz es test add iret pop sbb loope and bound add and push cs lret pop adc inc in adc jno ja and cmp add lock out add in push add sbb and mov push cmp mov test stc add lret std mov jbe cld push add mov add add adc out mov repnz out inc (bad) cld (bad) cli rcrl add aaa cmp push insl cmpsl cmp push add leave add jnp dec add pop fldcw sbb lock mov lret add outsb xor rcrl pop add mov dec test jb notb or insb (bad) mov add push in xchg aaa in xchg test cmp mov stc into pusha test mov add sbb bound flds sub and dec mov test dec cmc adc mov (bad) sbb cmp pop addl popa cmp push lock mov mov push add fsub aad daa pop mov jnp out sar dec mov out ja aaa icebp add jle pusha sbbb pop cmc repz pop mov and pop jmp (bad) push orb mov fcompl fldl mov adc pop mov iret stos andb test int sub and pop into out add jp mov pop dec xchg repz sbb jl xchg test ret rcpps in cwtl into call jecxz cmpsl aad shrb add popf or inc test pop or mov xchg dec repz or nop jl inc pop push leave clc scas sub das inc mov (bad) jb pop jo mov adc xor sti out (bad) add into jge imul add in push faddl je sub add mov cmp xlat add movhps jns pop fsubrl dec dec push and mov daa add cld xor add out sub idivb sahf adc add jmp cmp out mov loope nop jo repnz inc movsl sub pusha mov add dec jg pop pop dec inc jp mov daa shll adc into clc sbb pushf jl dec xor add cmpb imul push add lods cmp sub inc mov lahf (bad) loopne imul ss (bad) das aas cmp lret lock push push or push (bad) mov jmp icebp test add iret dec push adc clc lock in test je hlt incb add mov mov or mov mov add lock push and addb push mov popf inc call xor (bad) sbb mov fcomi or rorb int cmp pop adc push loopne adc and push and push pushf lods adc mov outsl dec mov ret enter sbb mov shl add jmp test mov movsl pop mov loopne cmp sti call lret dec dec ds fstp orb cmp pop cmpsb test push dec xchg mov outsl pushf fldl fs loopne jne mov outsb or jno pop add ret and int3 ficomp fdivrl ret arpl add xchg mov pusha fldl mov push sti add popa andb or sbb xchg mov (bad) or add jmpw xchg stos aad cli pop inc add loope movb xor ds loopne mov add jmp stc fwait or fdivrl add hlt xor scas xor xchg enter add loopne jbe xchg jp sbb daa orl push mov mov mov insb loopne sub xchg push pop insb add fnsave scas xchg mov rcl cs push xchg add jmp fwait lock ret adc and add cmc add pop push subb aas (bad) scas (bad) add adc jecxz or sub add add mov mov outsb cmpsl iret (bad) notl add jno or aam std push inc repz das mov fidiv sbb add fstl add jle arpl in ja loope jb jae cwtl xchg add sti mov mov add fmuls and add int3 add repz jp inc (bad) enter xor sti test adc nop cwtl adc andl pop add stc and lods jl add jo jne adc movsl jbe add (bad) insl cwtl dec jne sbb or addr16 pop xchg pop jb js pop stos (bad) mov nop sbb pop pushf loope,pn lea ljmp jbe add xchg jbe add cld adc lret add mov adc nop fwait lcall add add pop sbb add nop rep movsb lods dec bound dec lcall pop mov mov inc ret push adc (bad) add pop jecxz notl addr16 mov subl sub dec push call push ja mov cmp cmp test dec ljmp and add das fildll push sbb cld ja sub xchg mov test mov lock mov call clc dec add movsl hlt ljmp lods inc dec pop xchg mov mov or and lcall rorb adc scas cltd mov mov inc mov pusha movsb bound jp xchg mov push ret (bad) xor mov loopne inc add and mov scas test jno add add clc cmpsb int (bad) dec add mov pop add arpl test push mov add or xchg scas pop push pushf xor inc jnp xlat loop add or popa ds lea mov push fwait pop and jo cmp add inc cmp xor fs push pop pop fisttpl repnz jecxz or push mov add stos fstl bound pop pop cwtl mov sbb sbb inc (bad) cs dec bound jle add das hlt pop jle pop add test outsl adc sbb cmpsl add (bad) ja aad fwait rclb bound cmpsb hlt pop dec rdpmc hlt ret shll test push mov dec ret xchg hlt add roll mov sbb mov mov push mov cmp arpl mov sub scas stos cs lock scas fnop add push repz adc scas dec adc cld add pusha and inc movsl add int test in nop cmp cld repnz pop adc cmpsb add jl hlt add sub out add mov imul add mov int3 fdivl fwait mul cmp pop leave push pop test js or shlb mov pop add adc out sub sbb insl jmp mov or add (bad) push sti outsl mov xor stc xchg cmp rclb movb sbb jns jl pop add aaa mov rolb and or push ja add sbb push add pop mov pop jg mov and dec jnp add add movl aam pop jl pop clc push (bad) push xchg sbb ja sbb push push mov mov add lock cmpsl stc jg push xchg mov cs les es jns add sbb setne subb xlat push jb xchg lahf ljmp sub inc pop jecxz mov lods mov mov fisubr mov inc scas mov pop jle push leave loop addr16 movsb add mov add dec xchg pop mov outsb jmp jbe and pop lock inc mov clc dec push inc push (bad) mov xchg mov add or cmp add xor stc jo add xchg and xchg sub les xorl add cmc sbb dec inc nop je push loopne sbb outsl lock add lods inc mov add (bad) fisubl andl in shlb hlt mov loopne mov add (bad) sbb cwtl cld add in fsubr sbb andb mov push or aas push jae cmp and mov cwtl fsubl xchg push rcrb xor adc aas adc add mov mov mov dec xor movsb stc pop fsubs add gs pusha loop into aas sti dec sahf out roll or adc jle jo dec in ljmp jns pop sub sub jb add push xor andb lret (bad) int repz aaa insb adc in icebp bound les jb cmpb roll fildl mov xchg dec cmpsb dec cmp cld movsl pop xchg jnp lock lock test xor je int ja jge in (bad) ds shl scas mov dec adc xorb rorb and mov hlt sub add (bad) lcall add mov push iret and jns or (bad) cmpsl je dec aad rolb clc mov scas pop pushf pop mov pmullw and scas imul dec cmp sbb push xor mov mov add sbb add xor je sbb (bad) out (bad) push adc pop push in adc movsl and adc icebp push ds jb int3 sub leave add add cmpsl pop aad out clc in jbe add fistpl int pop adc cmpl jp pushf add out xlat pop repnz cltd inc jbe pusha add push les leave mov cld rolb inc push dec mov cmp and addl push pop scas xor push inc xor pop dec add mov jne iret mov xchg test test add addr16 scas push aas lock out jmp sahf add pusha jl nop call xchg fild das (bad) pop rolb jne push jg sbb ret xor jno mov loopne enter pop loop xchg or pop mov dec insb add loope mov (bad) cmp push mov sbbl pusha lds ljmp mov ret xchg inc dec add jb leave add fistpl xchg or jo cltd andl lock push sarb or mov add xchg xchg sbb loop pusha cltd jle int cmp cs je sahf pop pop dec pushf push add mov aad (bad) (bad) add xor xchg xchg ss inc ror add add mov jle scas xor add fwait pop out adc cmp add push pop fiadd cmp pop mov or mov sahf adcl and call andb mov pop test add dec sbb ja imul mov xchg push aaa add mov inc sbb sarb loopne fwait imul test push add (bad) mov add jl ret add add into jp leave dec add adc push sub add mov aaa dec clc mov sub popf mov xchg pushf (bad) cmp xlat xor in adc pop add call dec push mov dec scas inc cwtl sub ss stos jl add (bad) inc nop add xor mov pop pop push add mov sub testb roll cwtl add jmp subb aam int cli adc mov test wrmsr leave mov mov mov jns and mov mov xor pop clc inc xor lds pop xchg push call inc xor xchg dec add push arpl fstps sbb ljmp jae xchg pop pop add xor mov fs scas dec ss inc stos xor and (bad) fwait cmovle stos bsr fmull pxor sbb pop add popf pop arpl add xchg outsb insl add mov les mov das aam sbb in and mov enter lret in add lock add xor icebp lods call or add mov add cmp cmp call es jmp lret inc add jle fildl push jae (bad) and in xor dec and insb inc add gs sbb sbb add pop imul inc xor push hlt clc add aad xchg add cmpsb add add js pop add pusha orb xor cmp or rolb add xor sub aaa mov add pushf loopne sbb add and rcrl dec jge inc shlb jns cwtl mov xchg jl out add clc movsb fs (bad) sub ret pop add setno add (bad) sahf fcmovb inc sbb sub insl jae (bad) roll cmc rorl ss int xor adc or inc push add (bad) or js (bad) iret adc dec push xor cltd cmpsb test in mov cmp inc push or mov (bad) leave push xchg ds push stos jecxz daa pusha cmc ljmp test std or icebp pop roll pop into movsb sub das xor mov fbstp sbb add scas xchg outsl add pop rcrl lea adc mov and push in popa int3 std or push inc iret add js (bad) push (bad) push dec dec insl imul xchg cmp lock (bad) add inc into mov repnz lret xor adc jmp and nop aas out pop jne testb mov (bad) or mov xchg out stos lret ds mov (bad) mov cmp push lea imul and inc inc rorb fisttp leave mov lret lea and fdivl sti add cli aaa scas sbb cmp rorl pop sub jecxz stos inc pop push mov je cmp mov dec push daa add out inc push add mov insl add mov insb faddp add adc leave ret adc sbb cmp dec aad add inc call sarb jae jne mull dec cmp push movsl lret lods es jnp outsb cmp add mov lock (bad) test add daa sbb test cmp ds push add push mov fmull into sbb xchg xor add stos arpl or mov mov mov cmpsb add or pop mov xchg jae dec in dec push leave stos insb or arpl inc loope rolb mov adc xchg and and and mov or loop push mulb jle push cmpsb loopne adc (bad) lock or cs add out out push dec pop adc add xor mov add mov xor repnz add outsb mov stos ds scas add push add mov les pop idivl pop aam xor jb xor bound (bad) pop in stc push loopne push sub jp lahf push sub popa add into call mov and xor add addl jno push fildl fadds bt movl sub xor xchg sbb clc sub inc in test xor enter adc xchg mov cmp std mov rolb sub mov add int3 into cmpsb stos xchg add repz add xor add xchg xchg lods add xor insl mov aas inc jae (bad) xchg ljmp adc rcl nop pop add out add stos jno dec aaa loopne loop pop sub adc and fstl add lock ret xchg add int add push aaa xor fmuls jno add dec xor xor out add adc scas mov add add jne cmp movsb imul gs cli stos add xor push test test mov in adc jmp add push (bad) fndisi(8087 sbb cmp jae rorb add fisubrl rcrb repz je andb mov mov add pop (bad) jge sti push dec sub mov pushf add pusha outsb xchg repnz sbb fs xchg loop gs pop fnstsw loopne (bad) mov or cwtl push mov dec sti cmp pop fdivp and inc sbb pop pop jne add div and imul xchg dec mov pusha and aad pop test outsl cmp mov inc pusha cmc fistp adc xor add ficoml add addl cmp (bad) xor add imul add dec sub fisttpl push in sub adc shrb cwtl inc fs sbb jle icebp sbb loopne add add cmpsl jle stos sub in (bad) sbb jne pushf inc mov lock cmp xorb in xor loopne add out add add scas xchg pop loopne loope dec dec cwtl je movsl xchg adcl and sub pop adc rcr xor in add hlt std les mov mov xchg xchg fbstp sahf push sti lcall lret add cwtl loopne test sbb test in pop sahf lcall xchg or mov stos adc pop aam add andb sbb hlt movsl pushf lock xor add loope add aaa les stos jns add inc ss jnp and and xchg add pusha cwtl ret push add (bad) jmp mov or clc std inc gs fdivrl add xchg addr16 test add neg dec sahf insb mov add jae loop sub ret imul pop sbb loope adc outsb jnp add dec jp call test nop loop push lahf push gs cld pop bound ret dec (bad) xlat pop inc xchg push add jle mov pop and xchg add fcompl daa hlt adc sti fisttpll add and (bad) rclb push pop sub je add lock pop daa mov dec outsl adc and xchg add push push lods repnz mov popa repnz lret (bad) je adc pusha xlat (bad) mov dec addl fwait jp xor xor out jbe inc mov xchg mov pusha push test adc lret inc stos lcall fildl ja lret in lds xchg dec jle outsl (bad) repnz mov sub loope lods add jp xor ja push jns mov mov into jnp and enter mov lods rcrb dec fcmove adc add rcrl scas push lret sbb (bad) dec popa inc add inc xor jmp add xchg pushf pusha pushf test loopne cmp add dec fs push (bad) mov fidiv loop inc cs add mov aad pop pushf and inc inc add cwtl inc pop and push pop push (bad) pop inc into add mov lret cmpsb or mov (bad) add mov roll mov xor mov add sbb jne sub pop and xlat lcall mov pop cli comiss pop push in add nop inc ret aad rep int3 inc call (bad) fimul dec orb repz add incl test adc mov fbstp sbb cld idivb mov dec repz repnz adc pop mov add decb mov jg add fst or mov adc sbb hlt cmpb push test push mov xchg mov add lock mov mov sarb push fistpl sbb pop mov test incl xchg xor mov mov pop add cmp cmp aas jg,pt in or push cmp push out add test jle cltd add mov fsubs jne ret pop mov mov add popa pop xchg addr16 xchg mov loopne jge sub xchg cmp shrb add fwait popa popf jp cwtl daa mov push lret jmp js push add jle fidivr xchg add loop cmp sbb jmp pop lock je outsb scas adc add dec pop movsb aas packssdw xchg add pusha push ss push aad cmp xor xchg adc mov cmp add dec cmpsb sbb inc dec sbb push jno scas mov push loopne cld push add ds fistl addb pop stos sub fstl xchg enter sub ret lea in pop dec int enter aas push lahf or cmp sub pop cmp sbb aam pop add or fs aas dec cmpsl mov fcomps adc fnstcw add popa rorl dec sub mov or (bad) lret add cmc es push jb,pt mov mov call lahf xchg fadds (bad) mov xorb je rol icebp (bad) push addr16 push mov dec jl pop dec add (bad) mov enter int3 jb lret js aas dec xor xor stos add add dec xchg jl dec into in mov sub cwtl fucomip pop leave scas outsl mov pop or cmp dec jo add or add mov movsl adc lea adc bound enter jge add pop clc loope hlt add jmp test sti sub mov into mov add inc push jne mov ljmp mov add push into cs mov add cmp push jg cmp cltd out je fisttp pop clc push dec stc sbb cwtl cmpsl inc loopne xor sub ss fnsave sbb add iret stc fisubrl adc pop pop call jne mov pop push cmpl add nop or sbb ljmp pusha int3 and es inc cmp sbb mov in enter arpl ds push inc fdivrs sbb arpl and jo femms xor xlat int pop out push test es repz clc cmp les lea jno (bad) shl cmp decb and add sahf fadd dec (bad) lods push in pop xor ja jb add jno push jns loope sub push aas testb mov and xchg xor xchg imul dec xchg add jg mov adc push pop pusha push sub dec jno add sub pop cmpsl fwait add loop mov cmp ljmp adc inc mov in inc (bad) mov lret adc dec jns mov cwtl pop add (bad) or sbb cmp out pop int3 jecxz mov add dec pushf xchg xchg clc sbb andl cmp add xchg pop (bad) std loope (bad) testb mov aad iret push and stos jmp dec xchg fisubl push sub testl rol push fsubs lods sbb or inc scas dec aaa mov add jmp das test add test rclb mov (bad) jl call jbe sub sbbl mov xor xchg insb push pop es ret lret call in push je sti push jle fidiv call js mov mov xor popf (bad) mov out jae iret cwtl inc add (bad) cld rcrl (bad) xor add adc xor decb inc sti and imul popf jb mov jmp mov out push enter add repnz push je call out shlb sub test mov push das rclb mov push mov lock and add adc ss mov push addl jl aam nop pop and mov (bad) jp scas mov sbb jmp inc sbb add pop xchg xchg add and push or adc (bad) clc add cmpsl popa add pop in test rcrb in or xor out push mov enter clc mov or imul add push or lcall inc push add jbe xor sbb sbb pop xor and push out mov mov rcrb push loopne push add push and or sbb pushl cmp jg inc dec pusha cld dec xchg dec add mov ret push xchg add dec add cmp xor cmp add es sbb (bad) mov or in popf adcb sub or mov xchg mov lock sbb mov mov adc adc scas add jle out sahf in bound push mov arpl dec inc (bad) jne jge push add sbb adc std loope stos fidivr sub lods and pop mov pop mov fcomps les mov xor test xchg cmp xor and cmp pop gs shrb orl test (bad) mov sub cld ds in adc addw pushf or xchg orl cli and (bad) not ror mov leave cwtl xchg lret mov andl or xchg add ja fs pop pusha es sub push sarb and jle and mov subb add xchg mov sbb xchg add aaa inc mov or in pushf sbb cwtl xchg lods xor xchg inc les sbb data16 push push (bad) push mov test adc xor lret cmp gs sub mov push or xchg data16 sbb fldcw add ret cli push dec popf push xchg pop fidiv adc fdivrs add std lret mov mov rolb cld icebp ret cmp sbb jo add sbb movsl pop leave mov jnp add pop (bad) faddl mov inc orb fwait jg mov add cltd cmpl push mov ret stc mov mov dec add roll out out cs leave nop add or int fwait add popa and pop push call or adc xor orb add jne push mov nop adcl sub adc out loopne cmpl mov fsts jp push xor insl xchg rorl enter jno add ljmp popa jnp pop scas adc stos xchg xchg jle and (bad) mov inc clc rclb pop scas inc cwtl mov dec ss loopne loop lock popa lods dec aaa add push fmuls (bad) aam sbbl ss dec and loope add in pshufw sub jle cld aam out pusha inc outsb add or out dec xchg (bad) add jmp addb cmp out add jg repz sbb pop into cmpsl cmp push imull add sar gs repnz add inc xlat pop sub inc adcb aam inc cmp mov dec sub cmp sar lods fadd out imul jmp lahf mov dec xchg push loopne add stos push das lret xor aas inc loopne fmull add test add pop push test add (bad) and add xor lahf cmp lea stos sbb (bad) sahf popl addr16 adc and xlat mov (bad) xchg xor add pop jp adc lds mov out push pop sbb adcb outsb dec imull cmp jmp das mov cmc imull cld pusha pop adc icebp sbb push xchg fwait (bad) jne fsubs or nop mov push push mov pop push stos outsl or jg add mov (bad) insl lahf push xor bound cmp push dec movsb ja push cmp je out les aaa addr16 (bad) push add add mov les sbbb mov and or ret aam pusha mov adc push in xor push add pop mov loopne clc sbb daa push pop pop mov pavgb cmpb lretw adc loopne scas and mov adc outsl repnz jbe sub add push cmp int mov mov mov test aas mov sub fsubs adc add add mov aas dec aam add in or imul loop push mov adc lock or aas scas cmc add arpl mov add pop or loop add lcall add sahf sarb ret add inc mov test in add jle sbb lds or test sub out fwait adc mov jo sub dec cmp test lret cmp pop cmpsl adc shlb and fdivrl sbb adc add pop hlt xchg push mov pusha es rcrl adc out dec jnp mov pop lcall mov pop xor adc mov adc sbb iret xor sahf sub mov add mov add mov and add jnp jns jmp fstpt enter jge aas enter scas and and pushf ret shl or out lahf fnop stc jnp movhps jno jecxz repnz rorb mov push (bad) mov fnstenv movsb test mov pushf or mov pop adc lock add jmp sub inc stc add js incl push jecxz and cld out add add js jne push inc mov rcrb add push push (bad) or sub aaa and mov xor dec mov add popa mov add in inc in mov cli decb das cmpsb insb mov pushf add test cmp xor cli es pop add dec (bad) test mov jbe push rolb xchg cmpsb cmp mov test fwait insl in xchg jge arpl dec add add cmp jg mov xor sahf add cwtl mov sbb add dec stos lret push (bad) mov ljmp lahf add push dec das out xor call add fistp lds rcrb push xchg push mov (bad) mov and pop pop add inc pop into jecxz xchg add mov cs adc dec clc mov je pop mov xor cmp lods pop popf jbe inc mov cs int jb sarl hlt mov add sub popa jns data16 orb cmpsb out inc insl test popa popf add dec aas push outsl int3 je add (bad) sti stos cmp mov lods sbb aas xchg add mov mov xor push test pop fsubl arpl add add pop movsb cmp add cwtl mov add and loop push adc add or test jle (bad) ss ret movsb add or inc xchg mov xor sbb negb fst add (bad) pushf sub and mov aaa outsl and inc insl inc add stos (bad) pop jge mov sub push out out pop add push sahf sub fildl pop pop inc fs hlt out mov and shlb adc roll push imul sbb xorb xchg add adc fldcw pop sub roll cmp xchg add adc jle imul sub cmp shrb xchg xor dec sub sbb add xor cmp mov cmp (bad) push add stos mov aam sti leave int3 iret addb bswap push push (bad) push adc jb ljmp daa adc add xor add cmpsb xchg fidivl jnp aaa sub adc pusha imul pop test das add scas mov lea add adc cmp (bad) sbb push push popa push dec pop imul stos and call or lods adc xchg cmp rcrl pop (bad) sub jns dec add and cmpsl sbb lock inc jl mov insl xor add stc mov pop and scas xchg shrl jle cmp inc xchg sub outsl jnp daa mov pop insb adc jmp mov sbb push rcll inc lret insb sbb and cmpb mov or fstp jg leave cmp inc daa and push mov add xor sti pop xchg push push mov add fmull sub cmp clc pop pop mov inc add xor sahf (bad) rolb and adc in fadds sarb mov idivl lahf add ret push cltd fild out and add fimull pusha mov ds fmul add aam add jnp out call enter js sti adc scas call loop nop inc jae dec (bad) mov mov bound inc push xchg add cmc jmp inc jl cs or jnp push push fildll adc mov add (bad) int mov sub sbb fcomp jge movsl pop jle add rdtsc mov pop xor push add or enter and pop inc sub add (bad) fbld add or imul cmc push jo iret movsb adc cmpsb add cmp dec dec sub inc shlb je insl rcl aad cld lock pusha push call out cmp push (bad) dec into jmp mov add cmp cs xchg xor mov lcall loop jg lahf xchg adc stc mov sbb jbe leave mov fisttpl xchg sub add dec outsb cld xchg aaa jle nopl mov test cwtl add jbe (bad) xor sbb inc clc orb dec out mov cmp jle push pop sub loop mov inc cmpb mov loope pusha test push fbstp push mov lcall jo js add pop popf ja mov or test dec scas add shrb add inc stc and push es (bad) xchg xchg dec add dec sbb push push mov aam push push out pop push std add cmc lock lds cmp pop test test int cmp clc cmp sbb iret push sub xchg sbbb jge adc lds sti jne aaa stos icebp mov rorb pop inc arpl adc add fwait lds adc into cmpsb lock ljmp loopne dec add jmp ss push popa add test repnz push in fstpt movsb lock (bad) and inc fsubrl incb add inc fdivrs aam repz adc mov jnp icebp rorb mov scas add mov pop or cs gs dec push and nop inc xchg cmpsl add cltd stos cmp mov add (bad) ljmp sub nop test push (bad) pop (bad) loopne lods dec xlat add pusha dec aam in add insl jbe lea pop cli add or mov xor (bad) xor mov mov loopne fldl pushf popa push sub xor cmp adc cmp push stos xor cmp xor test clc cmp xor orb repz jle,pt add mov call add sbb pushf inc jno ja in dec jbe cmovo (bad) jp sbb push push add xor int3 es ret cmp pop xchg or fwait arpl cmpsl push jecxz leave loopne sub ljmp mov cmp cmp add mov ja adc push inc mov int mov mov jg inc dec js push dec (bad) test jge clc xchg push ret aas inc je js test add iret shrb roll push mov adc add add push adcl and cwtl sub imul pop scas dec mov dec pop cs rcll or add nop push dec outsl inc or (bad) xor pop pop subl add hlt inc pop (bad) imul cltd mov mov mov xor stos fistl mov ja (bad) dec push leave or and adcb insb add mov add inc jl add loop fcompl xor pop mov daa scas or fnop sub mov pop mov cwtl pop add insb add stc add sti lods pusha sub add cmpsl popa or jo cs jg (bad) pop cmp daa mov add out movsb add stc imul test dec sarb add bound enter push insb sub adc adc or cmp cmpsl add cmp add push push (bad) hlt sete inc pusha xor enter push pop and cmp add sbb push dec sahf incl xchg xchg mov dec cmp add imul jno jne cs lahf sbb (bad) outsb mov cmp (bad) rcl ljmp adc and add mov push pop out add fidiv pop cld push sbb loopne jns lock push add jecxz loopne addb add pop sub lock cld xor sbb repz push sbb fnop nop bound (bad) fwait dec pop inc cltd sub add and and add test xchg push popa (bad) cmpsb sub (bad) pop push fidivrl nop inc aam mov jmp or divb mov xor dec jp add dec test shll aam add insb mov push add cmc cmp cs pop pop add into rcll adc adc fwait lcall inc add mov inc dec out add xchg push idiv sub pop rclb popa cmpl xchg add or pop (bad) fistp cs bound xor mov pop insl lcall into pop (bad) ds inc mov outsb add cli btl xor data16 adcb pop pop pop and or outsb fsubrl add jno outsl stos cmpsb addl mov sub rcrl loop out sbb decl push add adc push je call cmpsb shlb mov out push push divl dec add lods sub mov scas add mov loope call mov idiv enter outsb push mov add aam sub lods leave call xor pop mov inc dec lock mov imul in dec ljmp (bad) inc gs cmp rol add test cmp push or je notl add pusha dec fcoms shrl jge enter sbb xor xor sub jnp or int je cmp pop jge incb cld shlb adc mov insl jl rorb pop stos sub ss inc (bad) cmp inc jns in lahf jle add orl dec mov std rolb sbb jecxz out and or (bad) xor pop xchg inc (bad) int3 lret shll add or dec adc xor xor orb xchg add adcl out push xor push neg lock xchg mov adc fisttpll or test loope int3 inc inc lahf pop push mov push mov orb pop xor pop ret das gs (bad) decb mov dec pusha hlt add ljmp imul push jno xchg add pusha xchg xlat adc add mov mov and xchg imull sbb sbb hlt and inc push les movsb add (bad) dec das adc mov mov push xchg lock adc inc add push inc xor je sub add mov mov jge mov xchg mov (bad) push jns add mov daa (bad) jo jl,pt mov movsb sbb pop cmpsl mov pushf (bad) push imulb add mov enter push shrl mov dec cmp jbe jo,pt or in pop adc dec push and je ds enter movsl push pusha test push mov andl mov nop push or enter dec add or shlb popa imul lcall jb dec jle or mov sbb jnp (bad) jge cmp faddl add adc cmpsb mov ds or (bad) sar cmp add roll add xchg pushf (bad) mov mov xor addr16 pop add ret push (bad) sub add mov add add mov fs pop and or pop mov xchg pop pushf sub addb dec rolb sbb fsts push cmp pop clc adc rclb imulb add jnp inc and mov aas add and add test jo xchg pop pop shl jmp xor sub cli add incb mov mov loope mov add adc fucomp xor out in shlb pop pop bswap push mov (bad) sbb pop add repz js (bad) es dec dec add cmpsb out push (bad) mov add lret mov gs imul bsr sub dec lret hlt enter mov addr16 mov inc pop cmp loopne imul (bad) icebp jmp sahf or mov outsb pop shr cmpsb mov aad popf fs enter pop loop mov mov and adc or rorb xor aas fld and add es pop ss out fstpt stc add mov outsl jbe push xchg daa add inc sbb pop jo cmp (bad) add int sbb mov repz enter xor outsb dec movsb mov jle shrb mov fwait icebp stos addr16 (bad) mov dec imul jbe dec das sub les cmp pop lret dec cmpsb push add mov mov mov add mov in sbb cmc add xchg lea mov add stc in cwtl mov call sub hlt pop and jle and add adc and loope fsubrs (bad) adc push pop rolb iret dec xchg mov jmp add sub lahf cmp add cs rolb sub and lahf loop add cmp mov dec dec add sub jg (bad) test and inc add or xor sti dec cmp push into (bad) jmp inc xor enter nop fwait mov idiv aas ror push mov das into jae repz shrb jb aam inc xchg or rclb (bad) out mov and mov repnz js jne int3 add cld stc str pop cmp out add pop sbb add imul xor in mov add mov add push mov dec add (bad) movsb (bad) xchg aas sub cwtl stc sub or arpl push js cmp lods mov das roll daa and dec cmpsl fs fsubs out xchg mov sarb mov xchg sub sub ja add test dec lea pop add cmp push or fsubrs pop xorl in rolb fidivrl out add lcall je add jae cmpl sub pop movsl out xchg jno jmp (bad) rorb add mov inc int lds add js icebp sarl push dec jle mov cld idivb push and add xchg dec dec sahf and shr mov cs sub sbb pop test inc add pop cmp xor fcmove adc mov add fldcw in aam pop outsb xor cs inc daa sarb mov std in rolb scas daa ljmp pusha add test loopne push test jo pop or xlat idivl inc push inc ficompl and faddl mov stos (bad) movl sbb push push loop fbld clc push test add sub inc push fisubrl or add stos test add mov xorl dec and xchg dec (bad) int3 add jno fdiv mov jae push loope pop aas sti add or fsubl les cmc dec outsl loopw or mov loopne adc pop xchg (bad) sub add inc lret push add xchg push mov add cmp push mov xor or jo add cmp dec and push jno cmp jmp xchg out iret sti cmp addb jbe (bad) hlt add jecxz aaa cmp out or cmp mov scas dec or sub in loope pop lret mov addl dec outsl mov jns add out cmp add lcall add icebp push sar sbb test lock sub fadds mov cwtl daa mov js push int3 in imul or aas or add sbb push orb push mov es jne inc clc pusha sbb mov insb lods hlt movsb rcrb jp jl lds add shll lods adc dec push push dec cltd inc lcall add stos push lret movsb dec movsb or hlt and iret ffreep jo movlps push repz fisttpll or jg or push dec lock arpl mov inc cmpsl lahf test add jb clc dec push pop jmp push jecxz fwait jge ret out popf pop xchg js aas mov add out icebp imulb lret xchg xor dec inc add lods fwait ror jb pop cs dec jp lret sbb lds ja fcomip repz jl nop sbb and inc xorl pop cwtl xor push sbb add mov jecxz xchg pusha inc mov pop pop adc add fisttpl repz mov jo xchg pop xor scas pop xor into push mov sub adc xchg call cs sbb sar jg xorb add lret (bad) dec sti movsl push mov popa mov mov add mov inc push jecxz mov leave xor add dec mov jge call push dec iret adc xlat add mov lahf incl mov adc data16 jle pop mov insb fisub xchg bound dec mov dec pop jle mov add (bad) or sub mov xor add add ret cmpsl lcall pop sub cmpsb test lods testb add cmp sbb and mov aad in lods sub out add or dec hlt inc aas xor add pusha outsl fiaddl mov insb inc pop loopne pcmpgtd jg out xor enter add leave mov enter (bad) cmp stos add mov or pop add dec sub mov and mov cmp add ret cmc pushl pop pop aas (bad) lods out shrl popa fwait xor (bad) add sub add cmp lea push lock push sub outsb fwait pop fsubs loope leave cmp dec add aad pusha mov push add aam repz and dec jge inc pushf ret jbe mov add bound jnp test add mov xor stc dec cmc sub and idiv add pop mov (bad) out add xlat stos jno cmp addr16 mov adc or pop inc mov aam fsubp mov shlb add jo mov push out testb loopne dec shll fwait xchg add sti cmp out or leave sub lea je mov mov cwtl jbe lock es cs addl pusha fstps xchg enter mov (bad) cmc icebp std and add pop popa fs sar mov ljmp adc pop ret push fs hlt loopne (bad) push add mov push out cmp ja sbb xchg xlat dec cmp mov adc mov add shrb lods xchg push adc nop add add (bad) xor outsl cltd mov cmp xor adc shl jmp int add lods and add es and and pushf aas add stos fiadd or out or aaa xchg addb inc mov loop xchg sub add jle inc lahf ret ljmp adc lds rorl cmp add enter dec lahf movsb mov cltd add (bad) xchg sub or enter es scas xor inc xchg outsl add jle outsb mov jp ja jbe or in mov dec add enter fdiv add scas add xchg aad sub adc leave add enter mov add sqrtps call dec xchg add or popf jmp pop adc and lcall add mov sbbl push mov call and fstl add jbe and sbb and and adc add (bad) (bad) pop aad dec cmpb add cmpl xor dec jns add push or mov mov scas jg dec lds pop js inc jecxz lahf jnp and sub repz add shrb pop lods jmp jo fbld mov std sbb jnp xchg les outsl mov pop sub dec xchg adc std (bad) lret push inc jg aam ljmp adcl add pop sar adc mov fwait push ret nop inc outsb addr16 add rcrl dec jnp add (bad) or add insb push roll mov jp cs cwtl loopne dec iret inc rcrl hlt and dec insl rol outsl add xlat enter ja loopne jle add fdiv sbb iret (bad) xchg (bad) and mov mov jae bnd add mov pop xchg add mov and out fstpt lcall shlb dec jne sub maxps repz mov add jg xchg pop xor push xchg pop repz inc and pop cmp movsl add and ljmp rcll lods cmp jecxz mov sbb xacquire cmp add xor mov cmp movsb insb outsl add pop mov cmp or or scas sub add into sub dec sbb mov xor loopne and xor insl das andb mov sbb and jle add mov leave es add dec lods test imul push add cmp out add ljmp in push bound repz loop xchg bound mov mov daa mov cmp sbb das arpl lods dec dec repz negl test jb add lock xchg jo dec lcall fdivl and xlat (bad) mov aam pusha add cmp jle add sbb mov scas pop add das aam add xor leave add push into hlt add push stos add and inc add stc (bad) adc dec add imul in sub stos push dec mov mov lock mov xor dec mov mov and push add aad hlt cmp inc mov adc mov loopne in cmp jb cmpsb sub lock mov lahf sbb lfs xchg test xor stos add scas bound movl push cwtl mov jne mov xor or push jp inc adcl sub aad add xor and push push pushf jne (bad) call outsb pop cmpb pushf insb pop (bad) sahf hlt dec cmp sbb dec pop inc incl test aam repnz ret or stc push xor sbb insb push jge cmc sub pop push add sbb dec mov add rcrb (bad) scas fidivl mov sbb ljmp add adc sbb loope or test pop pop or mov out mov add dec nop xor add sub loopne jecxz stos punpcklbw arpl add cld push icebp lahf add xchg or sub jnp add aaa add jecxz js loope (bad) and add pop add (bad) sub pusha je popa sbb loopne add cmpsb test test add lods sub cmp jmp arpl rorb jge pop add stos pop adc jp test rolb inc and aad aas (bad) lds add xor lea add sub in out xchg (bad) cwtl into add repz (bad) (bad) rolb sbb inc (bad) dec mov jne sub orb cmpsl test call clc addb add inc cmp out add mov sub lock into mov sub jb push mov or add dec fisttp fsubp fs mov jnp repz mov mov arpl outsb fstpt push mov add xchg cmp outsl mov add mov imul out xor pop shlb test ficoml xchg insl in add sub add test xor push scas pop test es aas mov movsb pusha push movsb add loop fcomip pusha or nop push add int xlat popf loopne sub cmp or rcl pop pop add mov in je add cmp jecxz and mov and add xchg loopne sbb fist mov cmp cmp (bad) cmp pop lods mov pop ret jns pop add add fcompl cmp test mov sarb stos mov ret (bad) jnp sbb jb shll cmp (bad) dec adc sbb call lock add pop loopne add dec fwait cmp pop jmp test mov (bad) std loope cld and addr16 inc movsl cltd je enter sub nop mov ljmp cmp push fwait stc cmpsb xchg call and or add mov mov add sub add (bad) cwtl test pop xchg jbe adc movsl adc shrb scas cli xor and cld aaa add divl inc rolb and shl push in cli int3 or lahf add mov xor and popa pop add lods add jb add add fldt cmp gs movsb scas mov or add psrad pop mov addl pop or addr16 fcompl xchg xor movsb adc orl xlat add lret dec dec loopne push jbe paddw add push iret mov sbb or cmp mov (bad) (bad) sbb in jge popa ds push test push mov jns sub dec in int and stos xor pushf or add sub mov add cltd push mov cmp cmp fbld jbe jle jl es dec inc inc subb xchg or cmp or and cmp int rcrl movzwl popa add or cmp push push call pop ret enter and addl ret jge add jne pop xchg pop lret int mov inc push sbb ret mov inc push ret je pusha or lret (bad) jbe mov sbb les or or (bad) xchg dec hlt jg sbb mov and xchg call mov es jb add mov mov ret mov cmp push ds adc and in pop cmpsb arpl shlb add fmuls push dec mov cmpsb mov push sbb ret mov inc push ret test add sbb clc pusha mov inc loope popa or ret sub hlt and xor in inc push and add ret mov xor or aaa xchg jo push mov repnz adc mov sub int3 andl into fucomip stos adc or int aas daa cld and mov dec lahf fdivl sbb into mov adc add xchg push imul jno xchg inc testl ja,pn mov mov push mov and cmpsl inc xchg in cli push mov (bad) hlt in sti add push or inc jle fs add iret popa stc and inc leave push xor in inc je sbb inc push ret mov or decl rclb adc lods pop xchg loopne into aas orl fwait add jo pop pop pop and adcl xor call or and jbe push (bad) and (bad) sbb mov push sbb ret and inc push ret inc test dec fidivl or adc movb aam mov xchg add pusha popa pop pop push aad int3 pop pop and mov dec std imul adc loopne add inc sbb scas jmp popa xchg xchg call add lea andb dec and or mov ret popa std and pusha push push pusha mov out pop cmp pusha (bad) nop push add sti sbbb lahf hlt (bad) pushf dec pop out cmpsb scas push mov adc movb pop add jbe xor cld fs in sarl pop jle pop cs inc rcll add cli jp mov ss lock pop loope lock xor divb imul jnp pop loopne into adc pusha push and aad lea (bad) subb mov aam push mov fadds lds imul mov xor out (bad) hlt jno ret add stc es clc adc add pusha mov jmp mov or call dec (bad) enter add mov and sub lds int mov push mov pushf daa pop xor sub pop push sub pop and dec cmpsl lea or mov jb popa call stc mov test sub popa (bad) orb xchg add leave add popf decl push mov add mov jbe push add mov dec sahf sub repnz and mov popf lods adc adc xchg pop push mov (bad) mov jne adc ss mov test add ljmp stc imulb inc fwait push int3 testl (bad) mov inc or incb xchg mov sti fmul dec sbb or je aaa lea mov cmpsb jne dec cwtl cli mov xor inc sarb pop xor adc rolb por scas sbb iret psrld xlat and cmc add push or ret mov inc add push dec sbb leave push push mov js push push push bound lret mov sbb xchg rclb add adc out pop inc mov push add call or add adc shrl cld push lret dec jg repz mov mov inc aad jge xchg mov lea data16 push push mov xor mov pop add pop xchg stos mov sub popl and aaa mov shl mov loopne mov pop add mov inc sub jmp rcll pop jnp ret (bad) incb push imul mov loop mov inc lcall jmp out dec mov loop add shl pop pop pop jle daa jmp jg (bad) sub insb mov add sbb lret cmp imul jecxz mov push and leave pop jg in push jmp and neg cmp or add push mov notl aad lds je pop inc jns sbb (bad) cmc fisubrl xor xor lock loope jmp add mov (bad) mov sti idivl cltd movsl in test jmp ss add add and dec or aas adc out add add inc ja repnz mov push jmp fild add out sub sti rsqrtps pop int3 sub add push dec int3 and sub mov jbe cltd andb or popaw mov or mov sub push pop repnz add lea push cmc xchg push (bad) mov imul inc xor stos xor (bad) jb add or jbe inc icebp push jo dec mov pop mov icebp sarl sbb xchg shrb mov pop push push and leave and idivl cmpb loopne and add in jbe adc adc and loop std or pop pop sar jo movsl push cmpsb popa sub call out lcall leave cwtl bound sti add push mov xor cli dec (bad) insl push test mov and cmp jg cmp (bad) push pusha xchg sbb and cli sbb sti scas mov sub cmp dec shl lods dec xchg les pop and jge dec xor add fisubrl xor popa sub pop jb sarl jge push movsb or sbb in (bad) push bound push repnz add push lahf jle rorb or pop sbb leave inc push sti push push cmp fcmovnbe or jno jl das enter ja add mov pop add push ljmp js jmp push push push sub ret jmp adc dec push xchg lock adc sub push pop inc ret icebp xor sbbl jne sub or inc shr pop stos stos jge jecxz xor push xor mov dec or inc stos shlb popa pusha test cmp test pop les ljmp clc outsb test add mov mov sbb mov aas mov cli imul push mov mov pushf lret push in adc mov cld pushf sub add int mov stc adc addr16 popa jno adc movsl jg mov sbb rcrl add in mov out push cli add orl ljmp xor mov out cmc fldt jne (bad) push mov add sbb addl inc mov jp mov lret loopne mov outsb add sub fs fwait or cmp push addr16 xchg insb lock addr16 adc pop sbb ja push pop jecxz aas sbb int sub add push add inc orl lods push leave and into ljmp and imulb lmsw jmp rcr test push push jae enter jmp iret inc (bad) pop incl (bad) repnz rcll sub xor add xor lret push mov loope pop and outsl mov jmp push into insl lahf hlt test mov lods addl outsl adc addl roll pop dec sbb push test inc in out (bad) and mov pop pop pop stos pusha pop pop jmp outsl leave inc or imul pop inc lds inc popa je std push cmpsb ljmp pop dec lsl pop sti and mov pop loop cmc shl add add cmp mov cltd (bad) sbb mov xor or push pop pop pop mov and lahf add (bad) cmpb xor ss pop push pushf inc mov pop ss dec dec in adc sbb or xchg cli xchg push cltd adc pop and and jb or and orb xor jmp repnz adc xchg cld dec ja mov push mov cmc aad xchg (bad) pop aaa daa out cmc sub jle inc jecxz test lcall mov cmp or xor stc dec cmp and aam (bad) push cmc mov mov cld inc data16 arpl push sub sbb dec push (bad) aas jmp popf js,pn add out mov and es rolb xlat pusha loopne sub and push add ja lret cmp outsl subb gs pop dec sbb mov add ja sub test or or (bad) clc push jmp sub jmp and mov dec arpl mov test and sub aas movsb (bad) jg pop ljmp lods adc xchg sysexit adc pusha dec and cmp jns lods cmpsb leave push rorl lock mov daa test mov dec daa mov xorb pop insl stc fimull cli pushf test pusha adc sub mov adc fimul jmp and xor test test mov cmp movsl mov mov inc test sti ljmp sub aam inc pop add xchg jp mov or imul xchg dec or inc and xchg in xchg dec push jge mov adc rcrl push jmp jno xor adc loop pop movsb sahf adc push adc push push mov int3 outsb jae fistpll mov mov jmp xchg jb fimul pop xor aad pop mov aas add jg cmp movsl adc xor xor inc sub pop sub pop in mov add jbe jns sbb ds dec cmp (bad) sbb pop pop popa enter pop pop bound fistl in cli pop mov cli jb flds adc inc es adc add jo or push out jmp (bad) or out dec dec sbb dec or push (bad) push add adc push sub mov loop int3 cmp sub lds add mov inc neg push stos lds inc cmpsl daa add lds (bad) mov dec ret and loop mov mov add loopne inc add and mov adc push xchg xor pop mov pop repz mov in movsb and adc mov fwait cmp inc jmp and cmc (bad) or popa xchg lock jecxz jo or pop popl out pop pop and idivl jp stos lahf push mov pop cli int3 ret push stos mov push repz pop jge lahf das push test nop adc jle xchg pushf or clc adc cmp cmpsb push add es cmpxchg jo clc push (bad) aad pushf lods or push aam test mov dec mov (bad) (bad) pop lret xchg mov push rcll mov in add fchs notl faddl sub pop sbb loope inc xor or not or fsubl pop (bad) sahf imul jle or push mov mov mov hlt add gs fwait add sbb mov fldenv imul pop xor pop and or js loopne mov xchg mov jmp mov and ljmp add cmp popf xor jg sbb (bad) fsubrs xor jmp out adc or add jae sbb adc and dec sbb add ret inc test mov add xor fs jbe cltd nop dec stos mov and cmp cmp push sbb jp dec orb xchg mov subb nop mov add jmp jno (bad) push rcl push negb mov cld jae mov xor int3 sahf add enter fisubrl xor stos clc cmpsl ret faddl jb xchg push test psllw mov aam int3 sarl sbb mov fsub into xchg test pusha mov inc jb fstpl jno push jle xor add push popf mov adc adc jns enter xor jbe adcl mov cli mov sbb popa mov enter add je sti out sbb (bad) test scas cwtl sbb outsb add (bad) jno fwait add and int lods ja add mov push in jno inc xchg outsb ljmp jnp inc icebp jle add repnz and idiv jbe jne sbb aas test sbb push mov sub mov push sbb loopne nop add mov mov pushf push sbb popa inc add loopne adc int push shrb adc js add leave xchg pusha mov cltd add xchg stos push pop cmp or int3 pusha fmul fcomp xchg cmpsl arpl add jg cmp add cli clc pop data16 iret mov rcr in cmp jmp push sar xchg add or sbb add pushf add jns divb leave xor xor lock push pop (bad) test mov sbb ja ja add add and mov jb mov dec add daa push mov mov add mov and clc sarb das add arpl sbb add or push (bad) inc inc xor out iret jbe inc and pop cmc mov or push cwtl mov add add jbe or jb in xchg or pop cwtl ret fisubrl pop jl push dec stc pushf mov in iret pop in inc or scas js lock hlt pop sbb (bad) sbb into add inc jns ja pop repnz fs mov add add bound inc add sub push xchg push adc mov add rcrl xlat pop ds jp add adc lods rclb sub inc and add pop and sub push xchg jg ljmp int outsb (bad) lods mov (bad) test cli dec push xor fsubrs loop jge pop inc in sub fiadd mov xchg leave dec jb pop lds jnp shrb mov repz cmpsl adc adc inc out push pop push into cmp adc pop or (bad) mov outsb sti call loopne loopne mov sarl or (bad) jge add or push add enter out movb aas or add divl jo xchg outsl enter lods mov ret arpl mov fbld sti xorb jns mov pop and out (bad) inc xchg add inc mov imull sub jno add lea les fwait aam xchg out (bad) jbe xor stc inc sub arpl jle pop jo nop or dec mov mov jmp add in fdivl hlt dec inc outsl icebp lahf out push pop dec push xor mov lret imul mov add mov push mov or dec or xchg sbb push jle and inc xchg (bad) incl add lds jne dec xor (bad) jg add jbe xchg adc dec mov add or xchg ja add mov dec es push sarb xor mov add (bad) sbb (bad) icebp movups push or cmp insl xchg call xor mov sbbb jae jp pop scas and sub loopne and je aas int push lods adc sub mov paddusw sub sub and ret add xor sbb out sbb or divl pop xor flds inc add mov movsb or mov out pop test adc leave cmpsl inc mov fs and data16 add mov pusha repz add mov cmp add xchg lds add push mov fisubl je lret add push decl mov xchg adc xchg dec push add jecxz sbb movsb leave insl outsl jg and repnz mov aaa add dec adc jl jp sub (bad) into mov add mov es or cmpsl loop sbbb mov mov mov adc rolb pmuludq mov test sbb inc scas in mov sub add sbb cld add sub push xchg call int3 pop (bad) pop loop adc imul lods sub or jg xchg pop daa dec lea lret ror or and pop scas mov inc ret and cwtl (bad) mov lea sbb cmp scas (bad) lock les movsb fisttpl and add movl push jne and test ret sub push dec pop and (bad) sub or cmpsl adc leave into sbb cmp and mov les mov repnz add loopne adc mov icebp fidivl mov jp inc sub dec test jns lods gs imul (bad) and stos add loop mov sub lods ret cmpsl sub jbe inc add xor jle sub sub sti mov pop iret outsb add mov in dec sbb dec mov clc jno push lea pcmpeqb mov dec js (bad) xchg and xlat dec mov lock and dec and cwtl sub cli call or xchg dec cmc clc dec cmpsl xor xchg addl movsb cmpsl je jae mov lea dec mov int add and adc (bad) out mov in pusha leave scas mov iret pop rorl sub push and sub or xlat sbb test es aam dec in lds lcall jae stc inc int3 sub mov dec and sbb and mov mov xorb inc lahf pop sub movsl cmpsb pop enter outsb add stc dec les into je or add sub push xlat mov shll push (bad) jae loop and aad insl jns xchg cmpsl mov adc cmp xchg andl add iret cmp jns icebp push mov add fisubrl fcomip xchg lods xor sbb aam xchg test rcll jp shr add data16 cmp add aas addr16 push mov pushf sbb push gs leave dec and xchg push jb ds or loop js sub test adc iret inc mov out jmp data16 jle and jg jnp mov lahf jp movsl (bad) insb cmp clc loop sbb lea dec or orl pusha fs inc cld mov mov and pop cmp mov (bad) or jae pop dec jno xor stos je clc xlat addr16 in adc popf fmuls and in and cmp dec mov adcl xchg dec sub add pop jecxz rcll inc pushf sub xchg dec and inc and mov repz or vmulps int3 cwtl push sbb sub pop mov ss dec jp pushf push movsb mov and rorb jl (bad) jo dec add test push (bad) sti adc adc mov ds fldcw jnp test lds pop call jnp add int3 icebp movsl lods add adc cmp mov xchg jmp adc xchg push add xor movsb sbb ret out adc dec mov adc xor test jne inc ret in jns adc push iret pop arpl insb in mov mov mov jle push movsl mov out sbb je lea mov or adc (bad) cltd gs or arpl add xor cld add mov pop and or xchg sub adc mov jg rclb out xor xchg or xchg jo test es sbb lods stos nop shll push movsb sub and test add lahf stos cmpb jno push popa loopne add outsb pop cmc and fs stos mov movsb push mov clc cs xor les pop push add lds movl and mov aam ret inc xchg into mov xor outsl xor rolb test mov dec or add je fldl pusha jbe jnp int jg pop sbb pop addr16 test jl insb (bad) xlat dec cmpsb add mov pop mov xlat add movsb sbb mov push sbbb jge call lods outsb les pop cmp repz xor cmp rcrb mov add (bad) stos mov and xlat xorb cmp inc or mov (bad) and mov mov mov or stos cmpsb xchg add jns cmpl xchg std mov sbb in cwtl dec js xor rolb push sub push xor adc mov add in xor mov orb push add cmp sub shlb jo test mov push or xor lea jo lods mov shlb les add pop insb cld adc jns sbbb js mov mov es and mov andl in sub jnp jb cwtl int3 lret in scas divl in data16 fs xlat outsl cmp (bad) jl test outsb add iret jg test popf or fadds sub cs mov add cmp (bad) leave mov mov adc js jmp or push pop popa adc in mov inc in xchg js rcll xlat or sbb iret jo xchg mov movsb imull lea icebp mov and and adc int3 das pop add mov xchg add into pop test clc popf nop mov in pcmpgtb (bad) clc adc movsb adcb push mov cltd call and fsubrs inc int mov or enter (bad) gs nop jae loop pop inc scas enter xor stos xchg push jo into fbstp cmpb mov mov lahf dec pop jp adc add jno xchg cwtl adc incb adc call nop adc mov lds sbb loopne xor lret xorl add into arpl push and fs lea dec adc adc nop mov mov push rcr sub pop dec adc and jae pusha add out cmp fwait outsb dec scas stos hlt or fiaddl xor push orb (bad) test mov clc test aam mov repz lahf ret rorl movsb ds dec test sub add or sbb push arpl jl and and fnstsw jmp jecxz rclb xchg popf xchg (bad) pusha push and rclb int3 add jbe lock push inc add (bad) int3 sub mov jbe xor lods rcrb into xlat pop xchg and push dec mov popa mov mov xor inc xchg lahf xor adc inc pop int3 rorb mov mov aad inc xor pusha cli negl ja pop in mov xor sahf sub pop in lea addb and mov adc pop mov shrl loop mov pop rcrl es outsl pusha and jb shl push adcl xor ret dec int3 cmp xchg fsubl mov mov jo pop movsl movsb subb jnp popf add imul adc cmpsb sub cli mov or enter add dec and imul popa and adc inc dec cli xchg (bad) imul sarb popf xchg js pop (bad) dec dec inc loop jb clc fwait not sbb jne loope lock enter call pop fmul fnstenv adc arpl xor adc ja sub mov inc rcr pop lods dec nop push fldt adc push mov add xchg pop add inc xor lock push movsl sbb imul add xchg jg add rcrl and pop cmp rcl jle xchg lea xchg pushf mov or pop sub xor loope dec hlt push push mov rolb xchg in loop scas adc sub jae clc and or jle enter movsb lock (bad) jge les notb jb and mov add xor xchg pop sahf mov mov xchg cwtl sarl clc add je xchg sub push lods (bad) pop xchg mov cmc pop ds xchg call mov add (bad) nop call adc addl dec adc js add cltd insl call lcall jmp push pusha es test mov call lret adc cmpsl mov popa sub cmp mov sub xor lods mov adc dec movsb in adc outsb inc add jno call mov push loope mov fadds rcll fdivrs mov mov cmp add adc test je les je insl sbb xor mov int3 adc repz push icebp or cmp push add loop (bad) push popf push xor cmpsl xchg push push add jecxz loope xchg mov nop test push add sub lds mov lods add test hlt add jnp lahf add xlat andl pop (bad) xor xchg sub emms add sub dec pushf jb (bad) pop mov popa cmp imul addps push pop imul test add sbb push inc jo imul add cwtl mov pop add mov xchg pop mov dec pop scas push cld jnp movsb pop and ror mov mov pusha push xlat inc xchg mov sub push cwtl hlt test push xor jecxz pop adcl out xor mov mov sbb (bad) orb aas addl adc xchg and and nop or cmp xchg js iret addl fisubr adc dec rcrb movsb sub push mov hlt pop push call add mov addr16 int3 shl and fidivl add mov jg jo rcrb push push mov inc adc repnz mov sbb cmpsb cmp dec inc xor hlt cmp aam mov pop and insl pusha ds mov insb stc add (bad) pop popaw lods enter push adc mov adc xorl push pop rcrb jl add or mov add jg out add loop sub and adc cmpsl (bad) pop xchg sbb and test inc lods daa sub sub inc in inc jnp mov pop sbb xchg lea aad daa test adc fs stc sub sbb pushf loopne push or (bad) rolb inc sub mov rorb add and fcomp add (bad) mov and and and jle cld mull sbb lods mov jmp clc push push out add je sbb and adc adcl in push call mov int scas mov shr sbb mov mov sub sbb loopne dec sbb test xor movsb push arpl imul inc orl dec fcom sbb stos test pop es les cltd je push sbb mov es inc imul daa test pop out sarb leave inc adc loopne jmp nop push and mov xchg cmp arpl push movsl or jg loopne mov or (bad) fidiv push imul daa pop inc inc mov mov nop push in add xchg mov and (bad) cmc add and mov sub xlat lahf movsb pop push sub in add sub sub cwtl mov or pusha in int3 cmp test nop js ret or loope aam or xor mov das mov sbb sbb mull popf mov push jle sub jo (bad) in xchg sub push fcoml add lock fldenv adc and or or std add ds cmp jl jle loopne mov pop xor or nop sub pop push push outsb shlb pop inc adc push mov sbb mov jl add ja mov adc and movsl movsb adc inc mov pop and and (bad) sbb mov cld fsubr add mov jp dec lahf scas lahf add dec sbb mov popa jp or dec test and sbbl leave or les pop cwtl mov pop hlt sub sbb adc xchg mov jl jnp mov orb into push xchg add arpl sar or nop cmp test inc nop test in add pop inc adc lret push cmc add (bad) stos xchg hlt add adc mov enter pusha mov insb sub icebp (bad) cmp add lcall out nop mov jo loopne fdivrp push lock stc cmpsl and addl enter add pop jb fisubl int stos push and in sub les punpckhwd and add dec xor insl cltd add fsubr (bad) jno sub and or mov mov clc rclb mov add fucomi or sub jmp imul sbb push add int3 ja pop call sbb aas notl cs inc add xchg (bad) fcmovbe sub sub pop arpl ss es addb jo sub jge imul mov inc mov jbe or rorb push rclb xchg jb push mov es add pusha or fs ja pop push mov pusha lods das mov mov movsb lcall dec inc test jmp test add popf xchg mov ja pushf push lods mov and (bad) call xchg inc (bad) test add test movsl or add aas outsb adc (bad) rorb or add out jmp test aaa add inc or insl sub mov cmp sahf movsb mov dec add and test in outsl lods jne adc sub and add sub adc int3 jns sub ret or andb and clc andl xor cltd mov xchg add int3 and xor stos je (bad) xlat lds jle aaa sub sbb push popf adc adc pop mov faddl jns rcl sarb subl pushf popa insb hlt sub sub pop insb std imul (bad) push or and add cmpsl (bad) pop mov cmp jns jle jb pop test mov imul mov jo sub lret cwtl mov stc xchg lods in das or add sub xorl lea bound adc mov popf dec adc aam inc je pop cwtl add sahf into cwtl pushf xorb and and (bad) pop notb icebp sub ret xlat les jle add (bad) cmpsl rcr test mov out lcall mov test xor leave xlat test rclb xchg dec rclb mov cli das movsb sub pop sahf push rolb xlat aas popa test pushf gs pusha test rclb mov fcompl lods les hlt dec test pushf cltd mov adc inc and stos inc jmp sbb in or add js dec lods rorb add cld aam sub int lods xchg fldcw mov push xor jne adc sbb mov mov jl xchg inc mov movsb popa add cmp jecxz add add fstps cmp scas test xchg stos sub jbe lcall mov mov (bad) jge xchg jle or mov mov add push and dec xchg inc add pop xchg (bad) fisttpll add jns inc sub adc popf aam lods cwtl sbb add lcall jnp (bad) pop dec test cld or sub stc cmc scas add js aaa dec fstpt and sahf and fstpl fs mov mov and dec xor adc push loop and enter dec xchg mov (bad) (bad) cmc mov adc pushf les test cmp pop lods adc xor lret lcall or in jnp or jbe jo jl jp int3 cltd push les dec pusha jne sub xchg pop pop mov sub jmp movsb add scas sti stos dec ljmp adc js daa out sti add pop and or stos xchg test mov cwtl add or cmp mov mov pushf add adc jne (bad) into push jg out stos or mov test push jno or scas enter add pushf xchg lea mov inc (bad) add add pusha js arpl pusha clc lods in ficoml movsl lods lahf mov popf cwtl mov push inc (bad) xlat mov or das (bad) mov jb or mov js push or jae jmp pop inc dec int and mov pushf wrmsr rcrl and cmpsl jo scas sbb mov imul clc or add mov orb xchg andb jnp pop (bad) fimull lock adc sbb ret push xorb push enter add js or sub push andl dec push add loope xor xchg in add movsl fsubs es push adc and shrl jg push push mov ror inc mov (bad) rclb adc lahf cmp lock (bad) int3 xor mov popf sbb mov (bad) inc and mov mov xorl je jge adc movsb add lcall jae pop cmp scas dec inc push scas dec shlb and stc mov cmp inc jb or push roll mov mov aad popf lock sub cmp sub arpl dec cmp mov inc js xchg inc cmpsb fisubr hlt or sub push push and adc sti and dec push or addb xlat int and outsb mov clc rcl push jp pop icebp pop inc adc cmc cwtl cmp lds and sub sbb in sub add fcoms daa mov lods mov push or movsl and nop push adc pop inc xchg push xchg (bad) sub jge mov jmp loope ja or aad jns xchg imul adc add and out add (bad) jp ja dec cwtl cwtl test movsb add gs adc sub inc xchg movsl rolb jo cmp pop syscall jb sub xchg loopne ljmp pop shrl adc xlat pushf loopne ret js cwtl shrb mov (bad) loope pop push jb add sub pop into sbb inc mov add push out data16 sbb imul shll movsb or mov sub mov shll fdiv push clc insb dec je jl mov cmpsl mov inc dec add fsubs jae mov dec gs push stos lea leave movsb xor int3 mov and sub mov js sbb lds loop xor int jmp scas rorb pusha movsl xor jbe pop inc or in dec cmp fiadd mov jl push call inc test cld js push xchg test xchg cwtl mov sub mov int3 pop mov or orl adc lock sub gs test pop int3 push jmp dec in imul sub pushf or in les jp mov pop cmp pop mov rclb dec mov push pmaddwd or mov or lods mov mov add pop adc lods es enter cld mov cmpsl adc adc sub and or mov (bad) pop call jge mov sbb mov test cwtl repnz pop cmp inc fldt pop and scas leave inc js adc lahf cld jp add scas into pushf lds and push inc fsubrl inc sti popf cwtl stc mov adc add xchg add mov out lock pop jne loop and jmp adc (bad) (bad) stos cli adc add sub (bad) jb adc dec add xlat hlt mov or mov mov int js mov lea push hlt mov mulb cwtl jo mov lret or cmc and mov lds aas mov xchg nop lock add ret and (bad) dec xchg add add pusha sti scas aas or push xor dec mov loope cmp jmp and xor or xchg rolb nop push push inc divb dec xchg sub imul dec inc mov das push push cwtl xchg cmp mov rolb hlt dec sbb bound rep mov mov push add into jl add rolb movsl cmpsb (bad) outsl push enter aam adc xlat icebp sbb (bad) arpl inc shrb jecxz mov popa pop cmpsb mov lds lods cs (bad) jae and subb dec xor pop adc int3 sbb lds jg clc (bad) cmp add imul sub adcl sarb xor mov adc push ljmp (bad) mov adc add push xor inc or cmp (bad) sbb push adc std popa insb mov sub mov pop add iret lods fisttpll sub add adc rorb adc addr16 pmulhw inc imul rcl adc fcoms fdivr dec lcall nop movsb ja dec popf (bad) pop inc sub xor test and dec mov xchg xchg or faddl and (bad) lea sbb mov or add jl movsl dec ret shll dec mov push lock clc in cmp lahf and mov jp jle add add dec js outsb xchg add sbb mov sub dec jge push sub imul xor push cmpb es sbb adc ljmp loopne sub shlb lret sbb xor or ljmp add in add xorb popa jp cltd int mov or movsl add sbbl inc push xchg icebp repnz push rol cmp in pop orb mov sbb ds adcb sbb sub add add (bad) int3 imul jmp sbb pop pop and lock xchg adc add jg cmpsb sub sbb and add hlt int3 pop sbb fs fcmovnb adc sbb add dec xchg and jns add (bad) jo cwtl sbb in push adc xor jae nop cmc daa pusha sahf dec add pushf repz mov ljmp sub ja jno xor xchg and or scas mov test adc in mov jo repnz rorb fnstenv add stc inc cwtl add movsb inc push pop jns jne and sub int3 aaa mov nop mov fistl pop dec inc add push adc mov xchg adc fldenv add cwtl pop mov mov popf fldcw mov loopne adc dec adc jne repz mov addl cmp movsb enter test arpl jno mov fcomps pop cmp andb adcl movsb call bound js je inc fbstp sbb cmp adc push lods test sbb push adc or inc add int les popf rorb adc sahf (bad) leave ret sub rol fwait jo xor jecxz xor (bad) repz nop add pushf cli (bad) cmpsb mov mov add sbb mov adc bound add (bad) mov add pop sbb hlt inc cs cltd lods icebp mov or cmp stos (bad) xchg dec sbb loopne jmp sbb dec dec jb add dec scas out cmp adc bound cmp test je mov movsb pusha cmp push add push xchg lahf sbb int push mov cmpb xchg mov sbb in lret mov popf fcoms pop sub call lcall testb sbb add ljmp or add loopne mov mov sbb and mov out aaa add push add addr16 xchg popl adc dec push outsl push pop cs popa jbe add mov xchg add mov inc xchg clc push sbb cs cmp fild mov fmul mov aad insb or pop sbb xorl cmpsb hlt mov repz dec xchg add nop call ja xchg sbb mov sub (bad) sub (bad) cld pop add ret jbe push arpl inc ja mov roll stc call jbe mov sub xchg add in imul or inc addb shlb arpl push (bad) (bad) popa les pop imul test cld inc mov xor or jb icebp mov movsb mov testb rcrb sbb push add jecxz clc lods mov ret cmpsl ja sub jne cmp ret fidivl dec xor sbbl dec add (bad) pop pop inc int3 fisubr xchg das add and and add pop mov stc mov jb sub in pusha rcrb inc mov ret push orl pop loopne,pt xchg jecxz fnop stc cmp jno (bad) int3 inc out add fisttpl sbb mov iret add push movsb sbb cwtl mov popa xchg or andb es in pop je sbb pushf scas adc push mov dec outsb push (bad) ja xchg nop or mov lea push dec stc bound mov bndldx pop add call mov xor je lods pusha cltd add movsl ret push loope in lods (bad) cmc repnz push add push das ljmp xor pop jnp add and sbb ja pop mov xchg rcrb dec repz outsb mov adc adc in mov inc jbe pushf fldcw mov or mov mov sbb mov and cmp adc cmp fstps fimull dec ret xor je xchg sbb test push sub inc je xor ds sarb or xchg pop inc popa in movsb aam sti stos inc push dec outsl out lods xor lods cmp gs inc test sbb pusha inc pop inc add xchg loop pusha fsubl pusha mull xchg dec out mov xchg sbb and movsl mov cmc mov sbb dec fidiv xlat ljmp nop lock push int3 dec les imul out push dec mov adc adc pushf add repz movsl cltd icebp nop push out pop and pop xor movsl loopne call mov xchg mov mov bound sub dec test popa insl push aam push cltd xor out push inc jo jle testb jp push xchg cltd stos add xor xchg jns int add (bad) or pop and cmpsl and pop cmpsb jno adc dec jae cmp and das jp cmp xchg adc in pushf add cmpb sub nop add lds mov push sub lcall repz scas inc pop enter cs pop adc jns or pop lahf mov add popa clc jnp popf or js lret xor insb adc int3 hlt pop movsb adc adc in and add and dec jbe add xorl pushf fs inc inc add (bad) stos sub adc sbb mov aam pop inc cs push add mov mov or and stos and es (bad) lret sbbl and dec adc mov js push (bad) mov repz xor clc sbb jb inc add je mov pop xchg adc loopne out pop aam ret xchg dec in je sbb adc fdivrs enter pop and sbb jns int outsl call movsl pop pop js add inc cmpsb (bad) mov lock xchg jne loopne inc dec mov loopne xor inc and shlb push sbb les je std (bad) xchg out aam outsl mov inc sbb sub push dec mov add mov cmpsl outsl cmc test out ds clc addb add jbe pop je imul mov cmp sub pop pop and cld ret push movsb jns sub stos xlat outsl mov add mov into mov cwtl add (bad) pusha add jo jnp pop lods adc (bad) cmc mov ja (bad) adc mov inc push push pop pusha push mov f2xm1 mov pushf mov mov test inc test orb push imul sbb and in cltd js sbb jo fcmovne int3 mov jns push (bad) mov das cltd notb pop cwtl fcoms orb int3 fiadd jmp lahf mov movsb adc adcb cli cmp adc add mov test lsl push test lock adc jo mov popa push orb pop imul adc jbe xchg pushf xor fstps mov jl imul xchg adc mov jo icebp das mov xor sub orb scas push cld loop call cltd mov sbb push xchg clc iret pop push add push adc and mov inc testb popa cmp sarb and rolb sti cmp je mov das inc adc mov jbe das mov subb jns xchg inc incb aad mov jnp push sub test fdivl and fmull das inc mov fidivrl dec mov or xchg std inc rol xor jb or sbb or inc jno leave gs scas pusha test mov in lds adc jno pop mov test sar (bad) hlt sub push xor (bad) test pop ret aad sub xchg pop and sbb pop int3 es mov add adcb push movsb shrb inc loopne mul (bad) inc lret and add jno insl xchg in (bad) push add adc jno sbb ret cwtl push mov inc sub int3 xchg jo pop cmp sbb add sbb imul into fld ja loope add lods mov subl fcmovu adc dec mov test je js add gs pop fwait dec inc lea or call add notb push in xchg mov ljmp cltd add jo outsl add and xchg sbb xchg or enter push ds test xchg in aad imul push call mov popa je add subl lds push or (bad) jns cmpsb fwait sbb inc xorb push inc cltd mov inc and pop xchg mov mov add sub movsb sbb or bsf stos sar and xchg xchg pop or movsb pextrw cmp lret mov xor lock les fdivs cli fs repz cmpsl mov inc and jg xor mov faddl fdivs adc or (bad) sbb stos test fimul inc pop xor or inc idiv mov jne add inc jns test je sub cwtl sbb lock add mov (bad) inc jo ja out cwtl add scas and or cld lret lock mov in loopne data16 outsl loopne jns lahf in inc nop mov jge mov out pop push cmp out stos cmpsl cmp sub (bad) testl jle xor xchg in pop inc mov int int3 and cmpsb les dec and ss xor add es repz imul push (bad) out pop add dec inc mov xchg lret nop inc mov and mov (bad) fldenv cli js lods inc sarb daa fdivr cmp inc movsb loop (bad) jno mov adc and movsb cmc stc ret leave rclb cmpsb sub pop sub xor mov dec push jge sbb iret push mov clc cmp pop mov int mov or inc push pop add sahf cmp xchg pop cmpsb ret mov inc fisttp fstps mov lcall add inc hlt gs push cmpsb mov add inc ja cltd fist pop mov popf jbe test sets sub mov jecxz subl sarb sbbl sbb lea fimul repz nop pop jge addb sub (bad) lret test inc fstl pop sbb add push sub sbb dec das add test lret and xor xor ljmp out adc dec (bad) jnp enter test fstl movsb insb mov sbb xchg xor sbb push fdivrs inc add movsb mov add test push sub adc or jp cmpsl and pop dec add in jbe subl cmp lock jo mov mov hlt and xchg xor and sub fsubs aad adc (bad) add adc or mov cmpsl and push nop inc repz jne adc sbb call call pop mov inc push aaa or pop subl aas lcall movsb jl mov nop outsl dec iret adc push pop and test xchg add out mov sahf clc pop inc xor fildl jl xorb push imul xchg mov dec call leave test jno fmuls orb sbb in sbb test cmp dec js mov and adc and loopne push xor inc test in inc mov fcompl adc add mov orl mov movsb js pop push in roll push clc push arpl sbb adc push popf cmpsl mov pop mov mov (bad) push insb sbb in fldenv add adc cmp ljmp sbb fcoms cmpsb cmp cmp sbb dec xor or ja sbb fdiv inc insb icebp in xor cmpsb pop fsub add je inc movsb es test push add insl stos mov mov cmp hlt dec idivl neg or nop repnz pop jle sub adc cmp into inc push ficom or mov pop and inc xchg dec adc push adcb imulb xor inc jl inc mov pushf cltd cs sahf add int3 and xor mov jl addl int test pushf adc or insb and cmpb imul mov mov inc xchg xchg test cmpsl ficoml mov lahf mov mov movsb xor push addl lock xchg daa cld out insb lret add (bad) push pop inc pop adc and push jo shr cmp add imul adc icebp lcall add ja sbb outsl dec stos fcomps push sbb pushf outsl xchg fs or pop cmp add inc or call jno pop add cmp lea sbb test and loop ret sti add adc inc inc add and dec or push stos adc shrb call aad mov mov les cs sub pop cwtl cmpsl in add aad in les dec stos dec lock pop cwtl sub pusha pusha jge sub addr16 leave out jb inc dec push add jmp xchg lcall mov icebp inc and mov push ret mov popf mov cmpsb inc or data16 stos roll fdivl mov fistp aaa pusha and inc xchg inc add loope (bad) sbb push popa sub dec cli inc or mull and sahf inc lods lds sbb jae negl fs mov data16 and dec mov mov jne jge outsl or adcl push adc add int3 int or fcmovb dec fcomps mov dec cs mov mov adc movsb mov out add (bad) sub mov fcompl (bad) or test mov sub loope incb out rolb and add jp in nop jl jecxz mov xchg rcl pop fsts mov aaa std add aas fimull or test sbb (bad) xor xor xor cmp stos test dec lea mov shlb jae into mov lods add mov cmp xchg add test subb jmp sub pop mov adc and pushf pop cltd repnz mov mov add push (bad) and jns inc sbb das add cmp xchg and js add daa xchg dec pop sub into hlt dec call pop inc and add (bad) pop cmp mov push push push subl xor scas call sbb lret push movsl enter imull mov add arpl (bad) lods inc jp pusha shrb mov iret and mov in mov sub xchg or movsl (bad) daa cs cmp push lods sub adc jbe inc inc das cltd adcb sub jg add mov fdivs test movsl sbb push push bound xchg adc xchg das hlt in (bad) or cmc xor icebp mov insb imul sub mov sbb adc fsts jno outsl sahf je stos in push inc int fistpl hlt xchg nop xor les add out into sti jo xchg repz xor mov int or dec push lods sbb xchg (bad) adc ds jecxz aad xchg add xchg cmc loopne daa push mov imul add loop jp inc and lods jbe xchg pop je dec inc (bad) and jmp cltd (bad) movsb sarl mov test jo hlt enter aad and sbb sub rol dec pop aam inc pop or mov xchg jne cmp jmp mov mov and inc sbb xchg sbb sbb xchg push push stc push in dec adcl push addb mov ljmp mov xchg ss mov add aas sub adc aam test jo loopne inc mov insl movsb and mov icebp imul xchg cmp test push movsb movsl ds fadds sti add adc imul mov scas or or fldl repnz lcall subb cmp pop mov lock inc and int3 add push in mov add xchg jo cmp add movsb and adc gs inc or lcall sbb jno or or jnp mov and sub lock jo and in sub cmpsl aaa stos lahf call push lea mov mov add mov sbb stc repnz cmpsb pcmpeqb sbb fadds push mov xchg sbb stos add xor add jmp pop add cmp inc xchg inc jge jmp es call in enter cmpsl fldenv pop sbbb lcall xchg dec and jb jne outsb add fcoml imul inc jmp rcl or add sub xor xor ds adc xor jp js cmp xchg mov add jbe lock fwait add add ja aad fdivs sub xor sbb xchg int3 leave sahf push or push push or adc mov mov es push (bad) mov lock es inc mov lret bound or dec in (bad) or imul repz addl sar into lds andb adc incl xchg test inc xchg in roll ss adc sub jp xor jmp push in ss cwtl fcomi lock xor push mov adc mov adc push (bad) (bad) and scas jl call je and add movl mov outsl jp mov dec cmp jl inc pop (bad) je insl adc add sbb adc ja xchg add sbb mov imul and dec pusha jmp add fnsave push je mov in push push jecxz out (bad) js adc jle add (bad) add pop xchg sub das cmp push lods mov fbld dec push push add gs test movsb fiaddl stc cmpsb icebp pop xchg add mov stos dec sbb and mov xor add mov data16 test sub pushf testb add ljmp popl daa or nop adc roll jp add mov mov jmp call insl arpl sub enter je adc or aaa sbb xchg add jnp nop and dec pushf pop rolb cmc pop xor and cmp lret loop add or and call mov out inc (bad) outsb add dec aad and add mov scas add sbb add cs xchg lods adc mov in shr mov fdivs repz xchg pop mov push inc js mov into sub pop ffree adc mov lea mov pusha cwtl cmp hlt aam jmp (bad) or fstl icebp add dec sbb fistl cmp adc test xor test dec xchg aas pop pop into xlat mov cmp and rclb or aam cwtl add scas daa inc fistp cmpl leave call clc rorb mov cs aas repz jge in jnp and xchg rol popf call cwtl testb sbb pop dec add mov adc jo mov add mov rsqrtps cmp sahf add mov mov aam push pop repz ljmp ljmp (bad) mov mov dec loop jne add adc ljmp mov ret rorl dec pop int cld or mov mov daa cmp add outsl sti test rcrb test das ds lods (bad) or xchg pop dec shrb mulb pop push jbe (bad) jne movsl loopne int addb mov fidivl add fs xor ja inc sbb sbb adc mov sub test pop idivl out inc add mov aad cli mov mov cmp out adc out push out dec pop daa push sub aaa push mov xchg int3 add ljmp cmpl jne cltd ficompl jl lcall push loop and aaa (bad) jbe mov aad sbb pop orb scas aam add (bad) notb sbb in add or pusha js or cmp sbb movsb add fldl lds push in pop test pop mov loopne pop bnd cmpsb mov into mov inc mov push cs xchg xor pop mov push pop outsl insb orb or hlt stc or out pusha cli dec add clc jle push aas cmp add and or pop inc sti les xor mov out aad add daa data16 jb add dec gs push fisubrl mov or xor dec (bad) and cmpl mov sbb hlt int pop sahf push push cmp je loopne add cltd mov add popf pop or adc cmp insb add sub inc imul pop and iret bound out movsl mov fcomps add mov push mov outsl pop add addr16 mov jecxz sub push arpl fwait push roll (bad) sub push jge xchg mov lea in orl cmp mov sbb dec out js,pt add mov je push or jp sti mov add jmp adc jl lcall in push add int movsl add sbb stos sbb insb pop inc mov cmpsb incl sub dec dec lock and add jle xchg loopne push jno sub rcl add add mov rclb add cmpsl test push cmp mov dec mov mov add test sub add cmp jg insl aaa in roll stc std jne add or pop inc xchg jb xchg nop movsb add push imull mov dec fdivrp or and lret int xchg mov (bad) mov and out cmp mov sub stos pop add dec adc add pop add push pusha adc mov add jno aas add sub sbb ljmp pop jp xchg sahf add lret mov cwtl add fldl pop xchg fwait sahf lods pusha adc cmpsl add inc sbb or cmp fwait pusha arpl es hlt or adc repz adc mov inc cld fwait add xor cmp scas dec or pop add xchg and sbb xorl push fwait inc jne add dec (bad) mov ss or int mov jno pop add xchg xchg cld roll mov dec add xchg inc ss (bad) je jns addr16 pusha ret sbb and pusha in dec sub (bad) jo sub nop mov add add add sub (bad) adc clc mov xchg and dec sub cltd adc and inc sbb push pop xchg pavgb std xchg pop shrl xor out add lds sbb add mov inc add cmp inc test jns sub jg pop pop mov push jle add dec adc mov push rcrl out jbe out scas in (bad) add mov lcall (bad) repz pop lea xchg ret adc jns xor call mov out pop (bad) inc cmp cld jle push add pop cmp fcompl or cmpsb mov inc leave shll mov adc lods mov out pop push cltd mov xchg mov mov ljmp inc aam out push ror cld add inc sbb or outsb push add test sbb stc adc adc das push sarb mov jns mov inc xchg daa cmpsl adc jl adc add test (bad) xor and push rolb mov sbb fdivrs push xor imul sbb and pop dec mov adc stos and inc add xchg xchg add movsl scas pushf mov add mov xor or call add xchg and mov dec add inc insl sahf dec sub lahf add pop clc add stos add dec push call add dec leave mov aas add adcb xor push clc jg pop jbe fimull cmpsl int daa sbb push (bad) and mov fs in and (bad) and ds clc or add sbb mov loope inc cmp dec or cmc clc jae xor (bad) out sbb mov js and fcompl cmpl pop mov (bad) xor xor add dec icebp and and int3 sbbl je dec shlb fsub add add stos clc xor roll daa pop xor cmp rcl outsb addb fwait incb add outsl mov sub sbb adc or add ror test jno add and icebp mov inc sarb inc sub inc clc int3 test cmp push inc sub inc hlt sbb test ret cli inc inc fild stc clc lcall mov adc add loopne in movsb push lea out ret dec outsl inc add cmp sub stc fistpll sbb fadd cmp inc std (bad) xchg stos aas call push lret add mov cld addr16 mov mov add shll shrl push mov inc fnstenv pusha mov and sbb xchg add dec lock and pop jb cmp add sub mov dec jle test pop lds dec add mov inc add cmp add mov pop mov xor push movsl daa fstl vmwrite out scas (bad) outsl mov add (bad) idivb pusha add out add bound dec mov dec push mov add cmp cltd or scas into dec mov add test pop add rolb jne (bad) jns xchg xchg int add ljmp js add sbb adc insl test xchg mov cmpl mov add push mov fs add les hlt cmc int3 js add push rcrl sbb fnstsw add inc push mov lock pop adc jno add or popa outsl daa imul out imul add sbb dec dec add push ret ljmp push adc push jmp and (bad) stos stos ss (bad) sbb sbbb jne fidiv lcall add das push into sub pop add movl mov xchg fistp mov andl cmpsb in inc push mov mov fs addr16 (bad) push (bad) int3 push mov adc nop inc nop sbb xor sti rcl cmpsl pop add xchg lcall call rcrl cmp imulb or mov mov stc sti sbb sub jge add mov mov mov mov pop jo mov fiaddl testl pop or or xchg ret pusha push mov rolb pop fistpll xchg dec int3 pop add lea sub sbb push enter insl push enter daa mov mov pop pusha jl add adc sub dec sub xchg arpl inc cmp out mov and fstl push cmp push push movsl iret call repnz pxor nop inc call xchg nop adc fmull xchg jl add sbb loopne and jmp fnstcw and nop cmp lods stos mov mov orl pop xor jg push inc (bad) xor aam jg sbb add mov xor xchg inc fwait psllw xlat out shrl andb scas sbb jecxz lock loop dec inc push faddl mov lret push stos adc or les lea pop xchg jo or cld dec rolb and fmull les add sbb mov push pop stos xchg cmp stc and movl mov ret dec jmp fs sub ret aas mov imul xor shrl xchg pminub sub inc push stos mov xor std (bad) mov inc add mov sbb cmp add or or adc or sysexit pop (bad) sbb push ret ljmp add imul push cmpb push cld jne aad dec xchg scas cmp sbb add test mov fwait in jne jp fcompl movlps mov leave rcll cmp dec mov xor add fmull cmpsb pop call dec loope add xchg lcall cli sarl enter xchg xchg movsb push in push test popf cli xor sbb iret sub pop pop test inc nop lods add jno mov les jo call out orb pop jg int3 movb je cli insl mov jb lret add popa sbb roll cmp movl add call test sbbb or push xor jge and jbe add cmpsl and subl pop arpl add fadds imul cs loopne add xchg fistpl jle inc mov imul out mov and xchg jae (bad) sub or add je leave addb cmp cli and sbb lds cmp testl xchg push (bad) mov pop test mov add jae sbb popf pop adc rolb sbb inc pop jno mov lock stc add push xor gs mov cltd xchg pop push xchg xorb js adc cmc ret mov xchg add mov sub rolb test push pushf add mov pop mov jecxz mov ss xorb and add cmp xor loope pop push movsl jg add or fild or mov pop fdivrl cmp push sbb shrl dec push aas mov enter dec and shl mov jo jnp data16 negb mov (bad) in sub jne bound inc push nop or hlt clc mov enter mov jmp jo inc pushf push inc pop pop jl xor mov loopne mov mov test fcompl ja lea in sti cmc mov outsb sub push rep add outsb mov aam ljmp cmp add test flds (bad) ja adc or add negb ret xor add test add sysexit pop or mov sbb add jae fucomp lock sbb inc call lahf inc mov add (bad) push xchg xchg mov xchg or test and cli pop inc add rcrl lea dec hlt (bad) shrl pushf daa cld add mov jle xlat mov mov notb pop cmp in out orb xlat flds cmpsl nop mov shrb cmp sbb push imul shrb sarl mov add or aad nop add pop inc test adc dec push lret dec nop lds sbb cld add add push mov push and adc fxch pop je cltd incb xor sbb mov stc outsl mov push xorl pop adc push shll pop aaa push mov out pop mov nop jmp int xor cmp mov loopne sub dec cmc inc jns stc jb call mov out sbb sub (bad) test lret add addr16 sbb js mov aam push cmc pop xor btr int int3 mov and push add xchg pop pop mov aas sub inc cmp add fldt mov nop insl adc add lret cmpb sbb in mov les (bad) test dec js (bad) or adc xchg mov fisttp cmp add movl das sbb in add popl ret aas test xor addr16 lret gs pop adc movsl in mov sub pop cmp in data16 pop lea dec loop sbb and loop dec add xor inc mov loopne sbb aam fdivr stc cli push imul movsb xor pop inc stc push cmpsb sub popf add xor push mov sub out sub adc pop subl or hlt insl sub add cwtd xchg fmull add xchg ds out (bad) dec jno jg adc outsl sbb mov sbb add sbb mov adc mov add mov add jnp gs push movsl icebp ja add into scas xor push xchg adc iret mov add shl pop add xor mov or int3 adc cli das leave mov jns or push and jo mov or (bad) loopne pop les mov daa push sub mov lock mov cmp pop xchg add xchg fdivl add push add xlat cmpsl pop (bad) jmp fistpll (bad) mov lret loopne fimull js pusha xchg lcall imul sbb jl into push orb test cs iret push push xor jge je insl jle jle add mov xchg pop and je out movsl add and bound dec ss outsb xchg cmp cld inc icebp mov cmp cmp add je (bad) icebp cmp aas add xor xchg xor xchg call pusha or inc lcall (bad) xor inc xchg mov test ficompl xorb and mov aaa mull fadds mov das xchg add orb subb add inc test fild add in adc enter cwtl push inc xchg mov cmp cmp ret int3 add cltd xchg xor sbb sub inc je cmp add jg aad or lock ja in mov push arpl sub fcoml push rcll xchg je popa add push bound js add cmp daa inc pop rolb or std fcmovnb xor mov pop pop pop push out add aam fucomp iret add add lea jo fistpll or add repz mov inc adc cmpsl jge add and sbb std inc adc dec sbb jp insb sub sbb sub xlat hlt cwtl sbb mov adc stos jno xor mov leave fmul pop sub sbb repnz mov and mov add ds or push fwait jo adc push push dec pop add pop icebp inc xchg jnp add mov nop add scas cmp add mov cmp fimull inc jg cmpsb mov popf add mov cld movsb insb and add dec shr leave adcb movswl das mov loope inc cmp fwait pop sub ljmp add xor xchg call sahf sysexit lcall xor lds and bound xlat adc repnz mov nop add jp movb hlt pop push rclb lahf xorl cmc or in add adc add and int pusha xlat leave add out xor bound fstpl and fcomps orl jnp ret jb xor pop ds enter (bad) jb add outsl mov push lahf dec cmp add arpl push mov pop xor enter in and xor out (bad) js arpl in lahf repnz std add add test add das gs mov jl dec push push popf or fldl xchg lods push cmp loope fsubrs mov in jns pop pop cmp pop xchg and enter or push scas fcmovu data16 pop jnp add mov pop sbb imul mov aaa and push add (bad) mov mov sbb jno pop inc and add std mov hlt les ljmp and pop jb int and nop pop dec (bad) ss mov rorl insb xor add cmpsl add dec (bad) adc cs sub movsl dec adc push add lock push xor ljmp xchg xchg add lahf mov fs jb decl mov dec jg nop mov add lahf jno cmpsl cmp add push dec add in fnsave mov cmp daa repnz sub mov stc pusha lock mov and add mov add push mov cmp int cmp xchg mov vunpcklps pop mov outsl fimul or mov jmp add inc iret dec add jne ret scas aam pop or popf xchg jb cmp adc bound push repnz add adc xchg sar jge fwait pop sbb loopne push inc xlat mov int3 dec or enter jne mov cmp mov test add add sub int dec mov aas xlat add push cli sub xchg fstpt insl pop xchg add cmovno xor shr add mov push pop cmp add (bad) lods add and add push (bad) and xchg movl inc mov add inc pusha lds or add stos xchg mov cmpsl jbe roll cmp mov add shr je enter insb loopne or nop test imull cwtl inc jo add outsl fdiv mov mov movsb xcrypt-ecb cmpsl mov data16 dec ds pop aad adc and ljmp icebp fldt push lods jecxz xchg add pusha mov sti or add jns mov arpl das outsl jge add movl lea pop fcoml movsl and add mov popf aaa cmp and push (bad) ljmp (bad) xor dec mov into pusha xor sbb pusha mov cmpsl push jno pop add xchg add leave add outsb outsl xor add jg fadds lds dec cmp pop push pop add cwtl stos or mov iret into dec sub testl or (bad) cmp or pop jle inc out stos inc lcall mov and hlt test jmp call mov lret push into ret loopne,pt add stos imul push loope aad sub add cld add (bad) xor pop or bound fimull mov fbld test shl (bad) jne add js and add mov lahf fadd rcll imul push and or pop test inc insb je cmp jg ja sbb sub add jbe add cltd aaa enter arpl repnz push add fbld add mov ds lahf sahf rolb std outsl push int3 push ret mov rorb test pop leave and sbb add stos std mov call loopne xlat add ss dec mov aaa pop push shl sub orl rorb jae push into addr16 sub add es jmp xlat je xchg mov sub add and pop iret cmp cmp add fs or sub pop push push subb add nop or cmpl rclb lock and ja add iret sbb lock jl pop clc shlb add pop paddq bound (bad) xor pop incb cmp pushf movl xchg adc inc mov xchg add movsl pop pushf xchg and test mov push mov (bad) cmp push ljmp adc jnp movsb inc sub test sbb add push mov push cmp ja js int3 jae jno add dec repz xor sbb add jle enter mov xchg and inc add push test dec lock dec jnp mov xlat (bad) sbb adc mov dec mov inc out mov xchg mov cs xchg push adc jo sbb mov or pushf repnz dec and mov cltd dec inc and lret pusha add sbb popa mov xor stc js dec sub fist or add xor aas lcall test daa sahf or xchg push pusha sbb mov jge push mov push fidivr jne cmp mov (bad) je pop out (bad) fnstcw jbe sbbl or enter push xchg mov decl mov adc lods sbb push into mov add mov xor mov cmp mov bndldx push lret push adc orl adc dec lahf mov subb int3 adc xor or adc cltd aas in pusha repnz jp add fwait push enter add jle (bad) xor and xchg je add sub dec in cmp rdmsr xor sub add push mov fwait inc shlb ljmp push push sbb gs or nop jne test mov xor fcompl add imul xchg mov cmp jnp push dec jbe,pn mov les or into mov or test pop jno add and add push dec mov sub fcmovnu rcrb movsb add mov inc movsb lahf ljmp pop xor enter add lret in int3 dec add int sahf mov cmp enter cwtl insb adc test imul faddl mov das pop cmpsb nop sbb xchg add mov add pop iret adc gs aam cmp int3 pop cmp push xor (bad) cltd jb or push cmp or sub les rclb or xor frstor jmp add xchg outsl movsl add imul or in xchg sub aad xor cmp repz int3 and dec jl xor cmp dec jg pushf lret stc xchg inc sbb loope mov pushf inc cmp adcl movsl and add push add jnp repz inc enter or movsl ficompl or pop and iret sub push inc (bad) xchg add push sub cmp std inc mov (bad) ds inc pop jns cmp add outsl xchg or cmp add jge cmp adc sub xor mov sbb outsl rorl or rolb mov das addr16 mov cwtl out and movsb cwtl pusha outsl int and mov hlt inc mov pushf pop gs jbe fiadd cwtl fbld movsb add pop fimull sbb into push mov sahf mov (bad) xor push mov cmp xor les test fild movl pop lcall test push mov lock add jae cmp inc xor addr16 adc in or lea pop xor (bad) cwtl mov adc inc int3 mov popf daa lahf pusha mov cmp shr dec adc and or loope push cltd cld push hlt clc lret scas jle xchg mov inc xchg fs mov add xchg xchg ja push inc movsb popf dec movsb (bad) push mov cmp insb mov iret add in (bad) xor enter nop pop jmp add call push push mov loope inc or add imul and adcb pop sub sbb mov adcl sub cwtl aad cmpsl sti push (bad) int3 dec lods adc sub push adc xor or fwait push addb sbb adc in (bad) push pusha xor nop mov imul jbe xchg sbb sbb add js stc or add int xchg andb fimul sbb sbb daa cmp cmpb (bad) std aas or pop imul sub adcl adc cli aam jecxz pop add in push std inc pop mov cmpsb add and sbb xchg add add cld inc lds aad bound add dec in dec xchg shl ss and xlat and mov movsb es cmovs xchg insb mov cltd dec fldenv nop push loopne into in arpl mov pusha lcall sbb sub insb js cmp jo cmp movhps clc add lahf jmp scas mov mov or test movsl xor inc enter stc and orl ret sub rcll dec xchg xor int3 inc movsb fstpl sub out inc push add mov sbb sbb cmpsl test push xchg rcrb das xor sahf pop les lcall jmp or add mov lock xchg add dec cli cmpsl fcoml roll roll popl cmp jmp inc gs jbe mov mov pop (bad) scas pop (bad) or lods fist jb cmp sub jne jg xchg imul mov sbb mov test in and shrb push in pop (bad) hlt jl,pn adc js xor push push aam xor jmp cmp pop (bad) pusha jo cld es and adc sahf in and fidivrl and movsb mov mov inc loopne (bad) sub sbb adc jnp enter call add movsl dec ja pop push lods pop in sbb pusha daa fldenv cmpsl mov int pop adc mov pop cmpsl or mov and inc dec xchg inc repnz das mov sub or (bad) jge pop dec test add xchg js call lods push sub xchg cmc ret and cltd dec fisubl int3 fldenv fs add rorb std lea pop push and push cmp and sbb in and (bad) aad (bad) int es sbb jae lcall push enter add cmpsb in fwait dec shll jno pop jmp cmp std les inc aaa mov or xchg sbb sbb cmp les inc js inc movsb jmp out add mov or dec xor jb sbb inc lock in pusha sbb push jnp sub adc dec mov imul add int3 fisubrl xchg orb inc cltd adc fidivr add int3 les imul dec mov (bad) mov mov mov int arpl add fwait bound xor aam xlat mov movsb adcb xchg add addr16 movsb xor int3 cltd int3 and lahf dec mov lea incl mov leave pusha adc sub mov adc xor xchg test or add cmp pop ret pop xchg cld movsl and inc imul add pusha pop xadd push int3 loopne mov ja lock jmp mov pop xchg out pop test sbb daa in ret out das adc popa mov sub sub lock roll push mov sub shr add xchg add pop aaa pushf push mov xorb sbb xchg sbb dec popf outsl inc push les push inc les daa fs inc lea nop sub shr out cld fwait lds lahf insb pop scas inc mov add es or pop jl and test out daa in cwtl add push loop and mov inc xchg xor push nop aam fstl out mov and sub add mov stos and loopne sub int3 lds loopne lea sbb pop sahf add imul jnp clc cli add into adc aam adc loop inc push cld ss inc xor (bad) enter sahf add lahf fucom or sub mov cmpsl jo mov xchg add (bad) push insl vcomiss mov and ds imul pop pop sbb adc inc adc into adc xor in lock inc jo hlt sub mov movsb dec mov xor push fcompl pop rcrl jo loopne jno dec cmpsb or movl rorl inc push nop lods xchg xor lahf jnp cmpsl out roll aam out push mov xchg in jo fs xchg loope pop sbb jae (bad) ds movsl add sub cmp sbb ret adc sbbb cmp in xor mov cwtl shll push adc ret xorl (bad) fmulp fdivr repnz sbb cmpsl and in scas mov mov sbb ljmp and es rclb jl cmc in add aaa cmpsl popa aad fs test roll cmpsb sub add cmp clc orl sbb mov add xor pop mov push mov sahf (bad) into sbb sbb mov (bad) in loopne xchg jmp jp imul hlt int sbb fstl jb loopne js rcrb xchg mov add out mov cmp in addr16 pop adc out add wbinvd aad cwtl icebp pop sbb xchg jecxz jbe push add outsl setne jp lcall sbb add ficomp mov in orl and fildl mov xor cld jo test rcll fisttpl mov (bad) repnz in push into xchg add mov mov jnp mov mov outsl cwtl sbb push (bad) call adc sub inc dec add push fnstcw int3 stc add xchg mov scas xchg mov mov sbb push xor inc fild ds jbe cld negb popf add xorb pusha and icebp add rcr das mov jmp or test shll cmpl xchg xorb repz push sbb dec pop sbb out xchg xchg inc in rcrb or mov mov rorb and mov pop vmovaps fisttpll push adc mov adc mov lcall cmp push std popf pusha cwtl lahf pop inc push pop mov pusha dec fsubs push sub xor lcall leave out xchg cmp fadds loopne adc mov sub push sub xchg in nop pop cmp mov pop pop mov stos push mov pusha mov outsl add hlt mov and sub nop xor fadds xorps leave push add inc in subb pusha push mov clc xchg add movsb or rolb sub lea into loope mov fldt cmp mov movsb push add popf pop call pop pop or icebp pop call js shll jg xor mov xchg repnz fwait inc int3 bound ja inc and adc dec ds or imul inc xchg js jbe inc xor adc in xor add repnz mov xor loopne jb rcll adc gs sub and iret xlat std loopne test mov xor ret inc sti arpl (bad) add mov mov mov fcomps push cmp dec xor pusha or ja and rcrb ror out loope (bad) movsb loopne add xor cltd rcrb test cmpl jo add mov mov add sbb bound or mov jmp add aas or add inc lret mov sbb js cltd or sub fwait mov or ror (bad) push aad arpl adc pop rclb dec mov sbb xor ja push outsl xchg mov mov (bad) sbb xchg dec nop jno xor mov cmp mov bound xchg mov xchg pusha or addr16 movsb sub loopne cmpb subl mov lods movsl inc ds pop in andb jp pop out stc add add inc dec andb jns aaa (bad) xor sbb (bad) in scas rcl test xlat mov lock cs inc xor inc sbb sub pop xlat sti loop hlt mov sbb mov add js mov mov pusha push addb fwait adc mov cwtl mov adc jecxz dec pusha mov int3 sbb mov out popf mov add cmp cmp adc xchg xor mov hlt add jns call movsb fmull fwait setl and push nop pop insl popl add sbb ja add mov sub add xchg push lods dec dec sbb add repz movsl jp lahf fdivrl out out sbb add jns cltd addr16 xor pop dec sbb sub notb xchg add test inc mov jnp dec sbb jp sahf hlt mov sub in xchg js sahf xchg xchg sbb es or (bad) xor pusha cmp push cmp movsl dec mov imul xor add jae ljmp xor loopne (bad) sbb cwtl js and orb and pop je or jne jge dec enter jae jo adc and outsl imul or pop cmp loopne icebp incl sbb xchg push mov xchg add jo or repnz push inc cmpl insl and and jae add sbb sbb sbb pusha sbb pop mov out punpckhbw push andb cwtl mov test cmp in jns or adc js sbb das sub jo and out out rorb mov push or push sub add sub in fld popf or mov js cmp shrb jg fild lcall fs jecxz rol mov fildl sbb or add das lret (bad) mov mov add and mov and lock or or sbb inc arpl adc push inc inc popf and cmp cmp cmp aad sbb (bad) jb and xchg cmp bound enter ret xorl push xchg sub jns cvtps2pi cmpsb call add xchg mov inc movsl add push mov ljmp lcall sub out mov mull loope add cmp and and jne fadds cld add dec push lods xor rol and adc jne loop sub add push or cmc jge sbb xchg mov bnd push icebp bswap dec subb cmpsb int out lock lcall fsubl mov mov push dec fldl ja icebp or xor std ss cli call fs pusha sbb aad lods cltd fnop sbb xor fisttpl mov cltd mov xchg inc sbb stc xchg cmp add or pusha cmp (bad) push in sbb mov jg inc jle jae loope mov stc jg std sub in add loop and loop,pn add (bad) mov out push aaa icebp push outsl int call dec jbe pop inc movsl into popa xchg jo jecxz mov out rolb test or imul call sbb hlt cmpsb dec jl ja cmp sub int mov xor icebp inc sti data16 fbld inc xchg sbb add or jae loopne add in pop icebp mov sub repz call jmp in jns pop sbb sub cltd pusha adc cwtl adc mov mov push push cmp and enter mov cwtl and ret xchg mov and fs pusha cmp adc ss jmp aaa add pop das add add mov mov (bad) dec jl fxch fdivl lods outsl dec cld dec xor fidivr cmp fisttpl cmp pusha xchg addb (bad) and clc icebp popf push sub jmp lock aas movsl outsb push xchg sub sbb mov dec (bad) push notb out adc je popa data16 xlat arpl sahf and lret in add lcall call sub and sub lret dec sbb xchg pusha add cmp and jns arpl movsb cmpsl adc dec subb add (bad) jmp pop push ds add jle add mov xchg mov jae cmp push jp adc push push pusha fdivrl mov inc stos andb push add stc mov inc add pop ret adc test loope add inc movsl xchg and out mov push mov jmp mov int3 mov cs inc push add or les or les push add iret leave je in and inc movsl inc nop dec add jmp mov or mov xchg add cmp inc (bad) sbb rol inc in cmpsb dec hlt stos rolb ljmp sbbl push mov or jg aaa sbb xor and test mov jo imul out xor mov mov nop aam fistpll scas mov xchg cmp dec (bad) lock sbb xor (bad) aad add dec cmp and popa mov xlat add sub dec mov mov into lret xchg jmp leave aaa add dec in jns idivb add cmp movb out gs sbb lock add mov (bad) loope iret sbb dec or jns mov sbb movsl sbb enter enter sahf xchg cli and sbb test fwait inc mov mov cmc push and sub mov out in inc pushf icebp and push xchg mov out add aaa test cli mov sbbb inc std or adc xchg add dec and nop mov enter call lahf jge add xor dec or sbb jno add cmp jle adc push or inc mov cmp adc add fsubrs loope push push imul sbb or sbb ret xor xchg test push inc pop shld popf clc xor add mov outsl dec inc pop mov add pop test sbb repnz xor jo lcall fisubrl add adc rclb loop pop xor xchg add shrb fistp mov lahf xchg add stos lods mov and add mov xchg or inc mov add lods jne jns add ret sbb inc fidivl push clc mov push jg cmpsb add movsl outsl aam jle jae inc pop add pusha test pop ficom jb cmp mov push clc push adc sar xchg stos icebp or imul jns lcall inc jmp mov lock cmpsb dec jp cmp in xor dec hlt pushf pop adc test pop jmp and icebp pop inc pop cmpsl js xor xor inc sub dec xor jl inc add in xor les icebp lock negb xor cwtl cmpsl in mov out pop outsl jo push xchg pop inc testb outsb xor jmp push outsl mov inc inc pop out pusha pop add sbb (bad) cli inc rcr sbb aad aam adc fiaddl pop mov cld and push std add dec push pop dec stos das mov inc pusha les icebp test xor ror xchg pop dec mov mov insl ljmp xor or test aam ret sub mov add adc jne xor mov xlat test add and cmpb sbb mov pushl push sub push out mov and lods inc outsl cmp mov ret and out add and xchg xchg sub jnp sub int3 pop mov add add mov push sbb and dec pushf pop xchg adc mov test pop in into add bound mov int3 fs cmp xor pusha and and ds pop mov inc or in adc sar rolb clc (bad) mov mov fsubrl cltd sub and leave enter lret test and ficom (bad) push test movsl out je fsubrp mov cmpsl add xchg negb sub cmp add ja (bad) xor adc lea add hlt movsl and mov (bad) cwtl test js mov fwait add or adc cmp add push and (bad) clc or je pushf (bad) push xchg cli clc jne or int3 pusha add iret mov je pusha mov adc mov dec outsl in xchg dec add (bad) pushf leave clc pusha mov nop mov subb mov jmp sbb adc adc (bad) or xor xor pop int3 jo adc loopne xor mov pop jne loope inc int3 dec jp inc lahf add xchg inc and lret mov mov inc or adc pop loopne jmp mov cmp xchg add inc sbb add pop sbb xor cmp pop jne add addl add adc jns add xchg icebp scas fbstp dec outsb dec or cwtl loopne jmp push pop pop mov roll push sbb stc mov xchg (bad) push call jns adc mov ljmp ds pop add ljmp aam push pusha jle mov adc js mov faddl in push cmp stc cltd pop add add in orb dec mov sub add insb jmp negl jge int3 push mov in mov pop add add add mov lods lahf in push add mov movsb std orl cwtl pop inc rolb dec add outsb xor add gs ret inc fdivrl xchg or pop dec inc test add fistp in mov clc decb mov daa mov out inc lret jecxz push inc pop nop add movsl sbb arpl push fs add xor push jbe pop push cmpl fdivr and adc add push mov lock mov enter xor repz sbb cmp jbe pop mov js shr add and sahf imul jns push stc pop jle mov jg sub mov push ja and jns fsubs cmpsb repz add scas jbe sub dec xchg inc push lds cmp push mov test sbb inc movsb mov pop into outsl aam add and nop push dec imul bound and mov adc rcrl loope and xchg pusha inc pop icebp and adc add dec pop xlat cwtl dec smsw jne inc mov rolb lods iret nop mov mov ljmp cwtl pop or cmp sbb jl mov xor lods dec in aaa rclb and jne dec es add lock sub xor mov lock inc inc jo int3 jg gs (bad) repz scas outsl xor inc dec jl push lods cmp xchg jge les rol jns sbb add out pop test imul mov dec js insl push and lret add sbb pop (bad) sub push stc and lea inc sbb shrb add sub mov pop mov scas add mov das call ficom sahf outsl or pop xor inc pusha cmp add adc cmp lret movsb cmpsb and mov push pop pop cmp and push jge adcb pushf jp add movsb cmc jns lods dec es inc dec mov popf les xor pop test in mov aas sub test aas pop mov inc and out rolb xchg push dec lods adc orb or jl sub popa push jno dec push les mov mov add sub outsb fiaddl aas sar clc push andb pop add xor push rcr sbb cs mov add out mov mov jmp fidivr dec mov (bad) lock cmp push lahf jmp movsl inc je xchg sub in pop add xchg dec add and sub xor mov popf insl das popa xchg cmpsb imulb inc movsb icebp pop adc dec loopne push adcb lcall fcomp and pop mov pusha xchg or adc xor stc aas shrb xchg loopne rolb sub bswap mov pusha add xchg or xor jmp (bad) addr16 mov mulps and fiaddl xor jge or adc icebp mov movsb shll test pop mov sub add xor fldl cmp test mov in add push js jns jle add bound xor inc mov aaa jno mov pop cmc and xor mov mov and mov lods pop jmp in sub repz cmc adc xor cli clc neg pop mov add pushf add pop cli les push fild sbb inc scas leave cld int3 pop mov data16 cmp adc inc xchg and and or xor aas pop rolb push cmp xor mov test lea cli loop push or aas adc enter mov data16 sbb cld add (bad) mov add ficomp loopne cmpsl pop push das or inc add (bad) cmc inc or add fmull lea push add cmp xor add mov push call or or mov push rol into aaa fucomp xchg sbb lods jae insl imul les or icebp cmpl aad pop in (bad) mov push int inc dec dec call sbb test into push jge mov jl and inc sbb add xor arpl mov jb add or clc cld pusha pop sbb inc sbb mov out add pop lea push add and bound xchg sub dec add add sbb aas adc and test imul add xchg and jns adc cld push mov mov sbb sti testb (bad) and jle add mov jb sub outsb das add dec (bad) repz std test inc test cmp mov mov leave add call or cmp loopne stos mov push mov popa add add inc sbb test aad sarl jne test pop add sub dec sub fwait dec arpl test pop or insb mov stos scas push in mov push mov and inc jns inc pusha sahf and mov lcall jle (bad) jo xor pop pushf loop adc fild insb outsb hlt int3 in inc push dec std fstpt pop pop inc ljmp test xchg insb ja xor nop movsb mov nop add and aaa inc out xchg ret inc add mov jle or pushf gs call add xchg xor es mov jecxz cld idivb addr16 add cli jo call je rorl jg cmp push in js repnz (bad) xor cmp jl jp add loope aaa add shrb enter rclb fs pusha and fwait ret mov mov push push lods mov cmp add add rorl cmp inc jmp sti orl (bad) add call roll das clc aad cmp adc mov rorb stos dec dec js popa inc xchg push negb movsl fs out ljmp repz sub movsb adc sbbb dec dec sub loope mov popa push and stos or or jnp adc cmpsl xchg inc dec sub mov dec sbb add sub and aad sub adc mov xor mov loope sbb pop xchg testb inc cmp fildll andl stos lret adc jne andb dec dec xor jl arpl loop call jge jb add stos or mov aam sbb rcl push mov inc loope je push cltd shlb dec fsubs push aad cltd dec pop stos mov in add (bad) and jne adc shr subl dec cmp push cmp imul jnp mov pop jmp mov or mov add dec sbb adc outsb pop cs test add js popf mov adc xor jl add sbb inc lods dec mov or fdiv mov and dec dec mov lahf adc mov add adc cmc xchg rcl pop inc and cmp xor repz cmp inc mov sub sbb mov dec cwtl push dec mov dec adc mov mov stos jle jge adc push xchg add pop add stos push dec push cmp mov stc add movsb adc and push enter loopne cmc dec dec loope dec clc xchg or aam jecxz lods pop shrb sub inc mov or jns (bad) aam add adc cld loopne lods mov cmp addb rorl stos repz scas jnp hlt and add inc dec pusha pop or pop dec pop jo movl push loop shrb aam (bad) ja cmp push gs test scas loopne and (bad) orb pop (bad) add jo xchg cwtl inc mov nop ljmp or loope mov and add add out repnz sbb add mov aaa popf add and mov scas add jp jbe and add add or push or pushf push mov dec mov nop fs add dec and jb add std insb cmp xor js stos je clc xor dec les and or and mov lods sbb inc push std cmp roll in int3 clc stos add cmp test xor nop in (bad) cli adc dec in xor pop addr16 sub push mov imul test dec add adc inc sub subb mov inc pop pushf xchg enter loopne push cmc dec daa add call aam mov insl and dec shll cmp pop mov sbb aam call adc push (bad) push add int3 data16 cmpsb mov add mov push clc adc or mov adc mov add mov test add fildll loopne pop xor je rorb stos and mov inc xchg pop pop dec idivl icebp outsl inc sbb iret inc adc std int3 mov int3 pop inc xor cmpl cmpsb xchg xchg shrl scas push bound or mov pop sub ret push mov sbb out into cmp dec xchg paddw popa cmp sbb loope dec xchg inc xor and mov pop or cmp les loopne add sahf test mov dec fsubs fisttpll data16 pop sbb dec mov lahf xorb dec outsb push divb add ljmp leave les mov roll lods stc inc mov iret adc insb cli inc xor leave jl (bad) and dec loope addr16 adc ret push jbe sbb leave negb pextrw add popf popa adc add (bad) call int andb int3 sbb test xor add xchg and stos repz inc add sub mov jg and xor xor push or mov (bad) lods jne dec push xor pop lahf jmp mov sub or xorl push cmpsb and aaa fisub mov cmp cmpsl add jne call jno jno sbb add adc popa sub and sbb and int3 orb adc in sbb sbb or (bad) imul les repnz fidivl test xor inc (bad) cmp xor mov sbb fs jl mov faddl fisubl roll cltd adc push les or push mov lahf cmp sub sub aaa or inc adc add dec aaa or xchg in ret sbb rol add repz sbb cwtl inc xor lcall mov mov movsb lret lock sub or push jbe les and (bad) insb (bad) dec cld imul pusha jno iret test (bad) add ds push fimul cmc add aad and dec push mov repz xchg cmp sbb fistp mov mov insb xor imul pop roll mov xor inc stc int3 jns add inc scas add cltd loopne rol out mov push xor fdivrp adc notb loopne push cli dec rclb xchg add aaa xchg adc popf xor xchg mov ds inc mov aad outsb pusha (bad) stc sbb scas cmp (bad) inc push (bad) je mov mov mov push lods cmc (bad) (bad) jl xchg enter stos rcll popf subl add sbb and fistp push sbb movsl pushf cwtl (bad) or lret in inc and pop mov imul push movsb iret loopne loopne inc rcll pop or push loop cwtl dec pusha mov or add and int3 inc mov repz mov cmp stc ret pop jl scas cmc mov or cmpsl mov sbb mov pop incl in shll xchg sub shlb cmp xchg dec xchg test dec add dec loopne dec add sub push jbe jo xchg in inc mov and insb add in mov icebp mov das testl ja cwtl test inc nop adc rol ret inc dec cmp add (bad) mov jmp nop stc add jg mov cwtl les adc pop sub inc and fs and dec mov or mov (bad) movsb (bad) out sub sub xor xorl and push std clc mov and add (bad) mov (bad) xor adc xor cmpsl inc rclb loopne daa push insb mov cltd sbb inc push mov pop jmp ljmp fstpt es hlt xchg add cmc dec mov add mov xor lods mov mov push pop add frstor adc pop out jl aaa and dec rcl das xchg in fildl cmp lea and cmp add and xor divl in mov pop mulb inc jge (bad) mov dec pusha and sub push rorl movsl popf push add enter pusha nop mov dec mov push dec in sbb popf imul into call mov adc inc or mov xchg ds inc pop mov adc mov sub cli std testb xor cli adc out sbb into cmpsb mov idivb inc pushf sub pop dec nop cmp xchg mov mov enter lods sub xor mov clc xor lcall mov in scas add xchg sar add enter and sub jo rcrb mov out cltd gs popf (bad) aaa test mov mov dec test adc xchg stos cmp iret lock add int3 (bad) mov or cmp mov les cmp stc add inc shl xor (bad) mov arpl mov and cld mov sub loope (bad) adc icebp jo rclb add daa xchg aad or clc lea jl add jl test pusha cld mov aam scas mov movsb sarb pop or leave (bad) dec call mov push add fildl lds (bad) or ljmp mov je sub jo pop xor mov pusha aam scas orl cmp mov mov (bad) and sub cmpsb test loopne mov mov mov adc inc xchg sarb dec rcl lea (bad) or lds mov movsl ret lea enter repz mov xor nop sbb jmp pop pop fcoml gs add hlt into frstor or sbb outsb inc add mov (bad) push or enter cmp lea pop dec movsl hlt clc adc mov into add sub or push pop sarb out mov call mov addb sub test inc sbb mov inc leave pop xchg je push mov or sbb sahf andl cmc sub and ds sbb pusha inc jecxz sbb call sub cld and push cmpsl add shlb inc inc xchg js pusha or cmp inc and movsl mov mov sub aaa mov dec and pop or lahf sbb lahf subb xor add cld jg orl pop add or test cld jmp cmp cltd adc and rcll push daa sbb sti hlt stc loop leave xor xor call fs dec mov mulb dec jecxz and pop cmp hlt sub sub pusha arpl sub mov rorb sub pop out xchg addb push xchg mov cs xor hlt inc sar ficom xchg add mov lret pop cltd shlb fistp cmpsb xchg test sub scas clc inc inc dec pop je dec mov cmp jb (bad) xor mov (bad) rcl in sbb test pusha and and inc std pop push jno gs add push and inc aam fcoml insb popa (bad) xor mov loopne cmpsl (bad) ret call and xchg sbb out xorl add sti jl and push sub mov inc push mov fcoms shlb insb icebp mov sub sti dec xor ja je icebp add xchg xchg dec adc call dec inc add js lds rolb xchg xchg mov daa jge movsb test mov outsl inc (bad) xor sub loopne push add add rorb imul mov inc xchg pop aaa out xchg leave mov testl push cmp cmp cmp mov sub ljmp lock mov sbb loope outsb in (bad) cmp dec or pop cmp and or cltd bound scas mov idivl (bad) mov add and test sub sub add idivl je push push inc mov fdivr mov or loopne ficomp add inc pop sub adcl cs and mov xor or mov xor inc adc test add test jns jno sbb add dec popf and adc cwtl push stc xor sbb cmp jae inc and and sbb mov inc je ds cmp pop out xchg sti arpl sarl xor adc rol pop sbbl push cmpsb adc rcl or imul dec stos or cmp dec lods pop xchg cld int and add (bad) icebp add xchg dec (bad) fisttp jp add jmp aas and push and in xor in aam aaa inc fcmovbe sub decb (bad) or pop lods pop mov lds or mov xchg push cmpl and cmp or jno push add rcll test mov pop adc pop push sahf sbb bound sbb mov pusha push jge xchg mov add adc adc dec popa movsb fdivrs call dec xchg addr16 or call dec cwtl std in jae adc dec add add shlb push push sbb and nop jmp stos jge in or loop negb out clc sub pusha add mov pop jne cmp mov lea call bound xor mov jl rolb dec mov mov adc out push add rolb or stc sbb mov leave ret pop in test andb je dec and add mov test inc mov sbb jno (bad) shl popf clc insb mov lcall sub push call adcb lds dec sar das gs in pusha insb mov stos xchg push imulb jo mov nop sbb adc enter fstl dec repnz mov js add pop popf insb shrb sub jae ljmp pusha subl mov rclb loopne lods xor xchg repz imul adcl enter and fcompl (bad) or inc rcrl xor dec or push sub push and hlt pusha imul sbb jle or mov daa xlat xchg pop adc aam outsb dec push mulb xchg dec sbb cmp dec std push sar push or cmp add mov mov clc fucomip add push movsl adc push lds in and sub or xlat lahf js dec mov cs ds add sarl or clc mov mov dec ficoml xor add std scas in jmp cmp mov pop inc mov icebp xchg dec int3 roll pusha fldl cs lods mov and and add rolb adc dec adc repz fdiv fstpl adc dec mov daa stc xchg fs loope xor jne ljmp mov mov popf sub sub pop mov call mov fdiv fnstenv outsb gs enter inc insb xor test rorb pop push adc jbe mov and pop pop mov mov mov inc ja je add and inc jl (bad) sbb sub sbb icebp cmpb dec dec int push enter xor or push lcall pushf cmpsl and loopne mov mov add insb dec inc sarb or or (bad) xor imull imul cmpsl std adc xor scas mov add lods fwait movl ss or lds dec movb lock add cmp aam addb lret xchg mov rorb inc push or and add (bad) and mov icebp sbb cmp pusha mov adc hlt mov mov jge push stos enter pusha aam addr16 add jmp inc cld mov les or (bad) xchg xchg jp add dec inc test inc nop mov add rclb xor jae pop pusha mov in xchg jns outsb adc in add add mov shrb mov mov inc cmp xchg verw leave mov js adc dec (bad) scas das push and cmp cmpsl or add cmp jb adc push repnz and pop sbb imul xlat sti je dec rorl inc pop jg dec add loope das xor xchg jne sbb jae rcrl gs adc outsl sbb push jl testl into mov rolb push inc or dec cmpsb cmp jl add mov mov lahf mov add inc shrb gs std or push or loope inc rorl sub sbb pop and mov cmp and loope aad cmp lret in enter scas rcrb pushf repz dec sbb outsl shrb mov mov mov repnz out nop insb inc out add sbb mov loop repnz fildl jle push lea arpl mov cwtl mov ds push jnp std xchg pusha cmpsl push inc pushaw imull sbb add loope orb insb sarb nop pusha stos or xchg add imul cmpsb push nop int3 ljmp push insb and mov add int ja push subb jl sbbl xchg xchg pop mov dec scas jae add rolb cld add jmp nop shlb mov les xchg pusha pop sti inc and dec push inc inc pusha pushl cmp testl pop rcll xchg xchg adc ficom in and pop push add inc insl sbb imull insb in add stos pusha fmuls jo mov aam imul and add mov stc popa js push xor mov pop jl add pop fs jg into xor add cmp into das and cmp sbb sub jl push inc or clc sbb mov (bad) cmp xor and pop jnp test loop repnz lock cmp jno add jo mov xchg cmp loopne add mov pop decb mov ror mov test cld inc mov pop mov int3 push (bad) jo xchg hlt and js cmp sub cmp lcall pusha jl nop jbe add (bad) jge jb push je add into sbb (bad) dec add and xchg test xor inc cmpsl mov into cli add sub pop rclb lahf pop mov xchg xor cli fwait jo imul jl (bad) shrb in (bad) pop or sub mov jle mov cmp mov es and add push xchg cwtl dec rcrb mov jge mov rcrb mov add orb test add cltd scas add insb inc pop loopne insb fild dec jno cmp pop test in cld lret cs xchg add push (bad) push push ret ljmp inc jns mov dec shlb add andl or lahf adcl add jge test dec daa push push gs andl xor mov add xchg mov nop insb inc leave dec add in mov stc add mov shrb lcall add dec ret sub les pusha cmp popf pop xor mov roll pop sub cmp outsl popa dec into xor jo arpl or test inc pop mov inc into add (bad) pop lods pusha adc mov mov mov push jnp cld mov mov gs addr16 popa mov add sub sub push push jb (bad) inc pushw add test insb aas and xchg (bad) insb popf into dec xchg bound push sub mov insl dec jne jo in add jb pop into movsl xorb shll mov aas xchg mov push jg cld mov xchg xchg pop imul js xchg insl pusha imul ret mov push mov inc scas (bad) fcomps rclb sbb fimul icebp (bad) and scas ffreep xor aam lods bswap add data16 add and xchg add movsl or adc ss jge dec fidivr test or sub ja add stos (bad) cmpsb or dec jecxz jecxz arpl mov push aaa aam inc sbb dec jl xlat lret mov scas cld and or cmp mov jg add xchg movsb cwtl adc loopne push lds dec cmp adc ret iret call and sbb jo xchg icebp subb pop push les dec add dec push mov push daa popl dec movsb cmp mov pop add jmp xchg inc xchg adc nop push test mov push mov push mov dec fdivr mov dec and jmp hlt add pop fldt movsl mov add daa andl xchg es enter les mov aas imul xchg inc inc pop cltd mov pushf mov mov out bound clc stc adc jl and adc imul or lock or andb fcmovu xchg stos scas cmp and add xchg and out jl or or dec mov rorb pop into in mov scas fs lret into adc xchg jo popf addr16 fsubs fdivs rcrb and cmpb adc lret xor adcb add fiadd or ljmp xchg add loopne inc icebp aam aas pop dec call push xor mov xor cli add mov cs ret inc push mov das stc int3 rcrb notb std sbb add mov sar nop lods xchg dec movsl or mov in negb add mov lods add pop inc faddl sub fisub cmp add fcmovnb sub lahf mov lret imul in push lahf pop add in cmp and add out sub es mov mov scas outsb xchg push mov test movsb leave icebp testl adc jno xchg pusha subl dec stc mov (bad) fcoms out pop clc inc loop (bad) cltd enter fmulp cmp stos or shrb pop (bad) and add jmp inc aad sbb adc pop add push sub (bad) (bad) rolb xorb adc mov out mov xchg mov mov mov fisubr xchg ret pop in jl add les das out imul aam bound andb adc pop call int int add test dec idivl mov jp add push rol scas repz addr16 jae sub push inc push mov in fs out or xor (bad) fcompl (bad) push lcall and inc mov adc test push movsb mov push or popa aam into movsb jno lock aaa stc leave in or andb pop into aad int3 std sub dec inc dec cld aad or into movsl pop add add mov js cli xor add sbb push add sub xchg repnz adcl in stos add dec push xor mov popl mov cmp add dec and cs fnstenv cwtl add mov stc xor xchg inc xor jb dec sbb mov and (bad) addb jge jge add sub sbb add fmuls lea jns jge mov ds jae insl in cmpsl and ficoml stos xor rcll call stc cmp sbb ret cmp into cmpsb push (bad) mov pop dec mov enter pushf jns pop xchg mov pop insl aaa fisttpll add pop push sti inc stos inc jl push test outsl cmp sub add adc xchg inc loopne (bad) nop cs sub gs xor or and ja cmp sub lods into add js cwtl sbb rorl xor int3 add cmp ljmp xor enter lock sbb fdivr lret sub jo es sub sub rcrl push mov push jns clc mov mov outsl and fs out rclb push aam xchg pusha xchg gs xorb aam sub jecxz dec mov xorb into jp cld in inc mov mov sub cmpsb mov adc push movsb hlt ficom or mov adc int3 xchg aad ds fsubrl scas es in sti add popf stc ja scas pop mulb daa add loop mov mov mov or push (bad) aas add neg dec sti push bound add or adc dec cmp add inc jge push or ja mov adc xor mov test aaa sub inc adc push xchg nop and insb sub enter loope sub (bad) mov cld mov mov jns mov sub mov mov fwait jne pop (bad) push in pusha mov inc stos loop add mov sub cs and add jne dec or adc xor leave xchg jl pop inc test mov loopne push pop mov xchg add sbb xchg cli int3 addr16 bound sbb es push jo pusha push test cmp cmpsb nop loop das pop mov insb loopne fdivl ret mov ja (bad) or fsubrs inc cld cltd sbb xor lret in icebp ret mov (bad) sti add roll sbb jmp dec sub mov leave out (bad) push fdivrl aas xchg mov and mov jnp jae movsl add cmp cli sub dec call mov (bad) data16 pop jo or inc xchg xorl test inc lret and inc sub inc test hlt xchg shl or push js (bad) stos pop pop or push push or jbe pusha and xchg fs les xchg xor (bad) mov fildl notl pop pushf mov mov add adc fidivrl hlt add mov ret sub lods bound or and insb je cmpsb aad negl sub xor call mov and dec fimul dec loopne jne jl cmp mov mov loop call jp inc inc jne push int inc adc cmp mov cmpl jl xchg pop cli push and pop orb xchg mov dec mov in pusha dec shlb push jo inc inc push mov outsb lods sub jno ja dec jbe movhps rolb jbe add bswap arpl loop xor add lahf mov or adc mov jo testb aam ret call xlat test mov dec mov xor xor jbe push mov lock clc lret ficoml shl popf lock fucomi push pop pop (bad) (bad) repnz or js inc les dec adc mov mov fldl push dec dec or jnp imul sub aad pop xor adc mov xor and scas or push pop enter add (bad) xor adc add test sbb scas call inc sub clc popa scas add sub das adc xor dec jg sbb mov cmpsl in and sbbl xchg aaa fstl jg add dec pop (bad) push cld adc out xor jnp adc and loopne inc pop pop nop mov je pop xor jb pop mov mov imul jb mov outsb jns loope xor std popf adc inc mov mov adc push daa hlt mov xlat orb aas dec sbb hlt inc adc and pop stos inc pop fnop subb shlb add mov insb mov mov cmpsl xchg and mov mov pop push pop or aad push imul and pop inc data16 add addb into (bad) (bad) cs jle jge lock arpl jmp movsb in insl mov inc je gs adc popa enter outsb adc sub jle or push inc or test imul xor inc mov dec inc (bad) aad and pop cld scas aaa insb add fbstp pop rclb mov popa dec mov das and add inc push fcomip cmp lods lods rolb (bad) repz push repnz and les mov push add cwtl loope pop (bad) jne mov imul rcl push insb outsl je mov and (bad) xor inc bound pop fcoms mov andb push mov sub or xchg adc imul adc lods adc das test xor ds xlat dec repnz and ret jne xlat mov adc enter mov inc sahf cmp add mov dec cli stos repz out in mov add jne daa or out negl ds cld rolb add movsl lret pop scas mov lods mov loopne add aam mov std fstps inc fsubs sbb pop push std and in and add push and inc jae cmp daa idivb sbb adc jb es enter pop call ljmp and cmpsb sbb (bad) je leave es adc clc (bad) out or repnz hlt sub pop and push push cmp mov sbb inc dec sub mov and adc xchg mov dec adc sbb sbb push sbb int3 sbb and das push fmuls fisttp mov fwait or rclb pusha xlat mov add pop cmp out ret sub adc repz or in inc inc cmpsl fstpl leave mov adc lcall (bad) stc mov push push sahf lods das data16 aaa add imul pop mov daa and dec and cwtl lods pop (bad) das fildll pop xchg nop fcompl (bad) jae push pop test mov jl add in ret (bad) loop jge movsb inc rorl inc sub add dec dec loopne nop pusha push out lea dec in sarb daa mov test or xor (bad) or pop xchg insb faddl loope xchg hlt das (bad) add aaa dec xor test mov je jb cltd dec adc movsl and mov or jb jle lret hlt fisub jecxz fstpt pusha das push scas dec sar sbb lods mov faddl mov mov adc enter mov fsubs loopne mov xchg out js pop je lock cmp adc loopne pop push outsb pop xchg fstl lock stc xor dec jl lahf pop push cltd add dec popf push in les ja test sbb sub jbe inc push icebp jns roll lods rclb mov xor or (bad) cmc fnstenv pop insb ret xchg nop clc stc add insl cltd sub test or faddl or daa pop inc scas dec cmp (bad) pushw mov leave push fiadd and jno ret pop pcmpeqw pusha into (bad) add cmp nop xor les and and mov lock sbb dec enter fwait sbb xchg mov add jae cmp xchg sbb xchg lods add loope cmp in mov sarb gs sahf icebp test jmp add sbb and in jae jo incl sbb outsb out or divl jo clc cmp popf enter adcb push pop add loop and mov fs xor stc jl push add adc sbb lea cmc lret add outsl inc sti kmovb pop dec das push pop out push cmp jns sti arpl rclb dec repnz pop pop insl int xor jbe sbb push sti sub push fmull xor pop mov in out sub in cmp test les fildl sbb out pop pop andl xchg mov pop jecxz mov enter stos push add sbb dec xor xor inc insl ret mov mov push add lret movb ja sbb faddl mov loope inc push test adc lods jo ret or call pusha test lods jge dec enter dec (bad) shlb sub mov insb cmc dec fldl enter fstps js and pop sti adc xchg or popa mov addr16 or jl addr16 push (bad) pushf push inc movsl jnp lock lock inc int3 xlat roll mov push clc jl ss push repnz push and dec jl lock outsl push add fildll dec mov xlat jo xchg sar int es lock xor mov adc push push inc fist mov mov push loopne,pt or test mov (bad) lods jl pusha mov lods ss jno insb les fiadd test rorb cmpsl or cmp (bad) popf mov adc test loope into and lds sbb mov and jo inc pop fimull adc mov push adc stos xchg jg pop rcrb arpl (bad) lret cld sub aas dec push in sbb negb das or bound mov pusha xor or adc jo push dec ret sbb jnp or cmpsl rclb dec stos icebp push (bad) jnp fcomps test cwtl xchg add inc lahf mov movsl sbb scas sbb cli pop clc add scas sbb dec inc aas push les cld xor add lret stos inc int3 adc add fidivrl push enter repnz je mov adc cmc jb cmpl sbb inc (bad) pop push sbb pop (bad) dec inc xchg scas ret into and (bad) push in or jle push mov fldl sbb dec lret push xlat popa lods into adc xchg lds (bad) lea stc push cwtl mov jmp loopne push xor push xor mov mov lock jo push negl sarl xchg push and lods mov and repz fisub movsl add jg in loopne fcom add or das dec push add jae cli adc or pop dec cmp movsl mov inc fcoms mov test mov jne jns ret inc ja pushf test dec pop xchg cmpsl or jl es stc int outsl leave mov enter inc push sahf cmpsb inc push sarb mov dec negl lds mov xchg movd push rolb movsl ret aaa mov pop push aam mov add sub lods xor pop jbe push cld xor test push ret push xchg stos xor pusha dec roll sahf stc dec outsl lods mov and adc cmpsl lods inc push popa out call pop mov clc or push xchg sbb jl movsb aam stos (bad) sbb push fadds or add mov mov repz push add sub or xchg dec (bad) add mov fnstenv sbb sub jne cwtl pop add adc lcall cld je aad jle lods sbb sub pop dec jb lahf in cmp andb or inc (bad) pop push dec repnz daa xor mov jns mov lods and lock enter aaa fdiv sbb dec stos shr out mov dec push ljmp data16 jnp jo sbb inc sbb mov add sub xchg repnz imul mov inc das jno repz cwtl jo inc mov push hlt pop mov pop cmpsb mov mov push in cmp (bad) cwtl cld cmp jae lock and inc loop sbb dec jmp cmp test (bad) ljmp push inc and lret in xor pusha sbb xor fadds popa mov enter sub outsb insb pusha es push arpl mov ret inc mov mov negl rcrb jl in jno or inc cmp jmp int inc pop popf data16 sub mov sarb mov test (bad) mov cmc sbb xchg fdivr scas jne add push cmp stos loopne ds pop loope sub (bad) rcrb push sbb jp sti int3 ljmp sub mov cmp adc cmp sub (bad) ds subl mov mov (bad) mov lcall mov mov add push in add rcll fiaddl mov fwait mov pop add imul cmp loope iret inc cmpsl sbb lds in fld movsl pop nop xchg fiaddl leave pop rcrb hlt and mov xor inc add xchg aam mov ja xlat xchg (bad) fs inc or js xor data16 mov inc inc mov bound sti pop xor mov and and push mov lcall stos jb xor xor xor mov jl pop insl push push sub add std mov xor sti js xchg sbbl mov pop pop sbb sub (bad) fstpl dec into int3 cmp call add dec mov adcb daa mov (bad) or fsubl dec mov cld out add or idivl jl sub in fadd nop pushf mov lods call jmp cmp and outsb cmpsb mov inc sub roll adc jl sahf sbb and push jp stos or insb sarl dec jne push sbb dec dec cmp in jo imul cltd out ret dec in add movsl mov and add in mov sbb repnz add mov adc aaa xchg push scas rcl xor dec mov xor aam orl cwtl inc add out push fst lahf dec hlt dec dec mul add adc mov dec add and arpl subb sbb lds movsb addb inc mov addr16 into sahf in mov jmp mov mov add jns lods xor lea xor je mov and add dec mov movsb stc jbe aaa fiadd push dec rol mov (bad) or sbb int3 roll out dec jge stos pop push dec sarl xchg jo inc and or (bad) cld jo xchg aam dec add data16 and in cmp add outsb sbb add xchg daa lock shr fdivrs mov adc add ss mov repz push pop xchg or test cltd mov rorb mov stos push popa test daa mov (bad) jo imull ds jl mov test ja jmp pop adc push cli ljmp and gs xchg dec mov orl shl inc add mov xchg or (bad) xor jge mov adc inc adc and mov mov pop sti fisubrl mov jl fidivl jae push xor shlb add push inc aas add stos jnp scas lock aam cltd cwtl jno sbb mov iret jne add mov push nop je idivl add loop (bad) pop arpl lahf mov out mov outsl and pop jb shrb sarb mov loopne aas xchg lcall pop (bad) loopne or incb mov mov mov (bad) fwait cmp push stos stc test cld out push or sub cwtl inc mov mov xchg (bad) xor or cmp push add (bad) je out lea fimull (bad) mov in out adc inc sub test lea inc sahf add rclb iret mov inc cmp add mov jbe or les mov scas inc aam vmovss pusha addr16 into sub mov je (bad) in adc pop or ds faddl not cmp xchg aad outsl fildl mov sub (bad) hlt (bad) inc test je cmc int3 and and orl xorb mov jno rclb sub into dec pop xchg ret inc nop stos add and les xor shlb mov adc dec outsb inc lods lds mov std ror outsb outsb cmp addr16 lods xor inc out into push nop jecxz repz mov add ljmp jp adc jno jne mov or roll dec mov cli pop in repz rolb jo cmp jge inc sbbl or dec add std nop nop sub pop sarb lea dec adc add add add test cld cmp cli imul and xchg lahf negl cmp pop cs sub or fiadd push dec or adc stos add push test fcoms popa lds add fldcw mov shl cli outsl leave xor jle push faddl lods adcl roll mov xor lret xchg (bad) in loope jno add push hlt cmp inc add dec loope out push in add test repz jbe movl jmp fdivrs loopne push mov les daa add movl push or push adc jecxz sub and aam ja ret xor push mov xchg (bad) lcall adc stos jns sbb inc cmp or jp add add add cmp cmc and jecxz mov popf sub cmpsb dec out or push outsl nop or sti je pop pushf push push add push bound aad sub scas inc gs lret out pop hlt loop mov js dec sub cmp das pop hlt xchg test push imul repz clc ss mov faddl dec push divl das jns lahf mov insb shl pop push or into sbb cwtl jl movsb test pop mov sbb mov popf add int3 cmp seta add scas jnp and dec in in dec faddl ss cmp mov and mov shlb push add xchg pop nop and jge movsl xor aam xchg clc or cld pusha mov cmp jmp and or add jns sub xorb in lock mov cmp in jnp (bad) std loope inc dec inc xor push dec fnstsw js mov jl das loopne or adcl out xchg rclb jb getsec push shlb push mov rolb xor inc idivb fs push popf cld push dec call xchg enter pusha lcall popf mov or or testb hlt lods aaa pop adc adc lea inc fs adc push cmp dec pop mov push push ficoml and int3 dec lods dec xchg mov sbb pop adc and sbb mov jge ret int mov mov dec imul fcomip inc mov push lret cmp je push jmp push jmp cmp iret mov add hlt and loop divb xchg ret (bad) fiaddl (bad) lods add push pop push into rdtsc mov push push enter sub lret pop sbb dec lock mov and push into aas stos fisubr mov dec mov call xchg dec es jne mov mov sub daa test inc xchg push pop rcll pop rclb jmp icebp imul fwait test jmp test mov lcall mov pop popa nop add xchg and int3 (bad) fdivr pop xlat or fidivrl stos xchg or cmpsl push shr int3 imulb jo mov sub idivb jge inc stos or int mov push sbb ret and ja inc push ret rcrl mov or xchg (bad) mov jo clc enter pop dec out sub out dec scas push adc test and jno jae or sbb add or xor mov mov fcoms shr stos mov jmp or ja xchg rcll int3 jge add cwtl stos jbe js fimull out adc mov orl loop xor mov idivl ljmp adc sbb push addl push push rcrl add fisubrl sbb cld sbb mov cmp jbe mov sub test je push xchg sbb lock jnp or or movsb jl adc xor add in mov pop inc mov fmuls mov mov adc shl mov repz hlt ds arpl xor sbb daa fisttpll shl xchg daa adc xchg (bad) rcl mov aam push movl call push das dec out pop xchg add mov xor sub ret popf sahf adc mov xlat mov sbb mov add test mov pop inc (bad) (bad) push push sub cltd aaa inc or cmpsb loope xchg dec ljmp jmp inc adc pop mov pop into incl add cwtl mov add nop cltd push rcrl sbb and and adc daa (bad) inc dec cli int3 mov adc mov sbb add add xor inc fmull or aaa lock mov add ret jmpw xor jae dec dec mov nop inc xorl sub dec repz fisttpll cmp inc mov cld mov push lods dec xchg call (bad) out add push xlat and mov and les adc inc cmp rol ja fstl mov sbb jmp stos div mov sub (bad) les fildl and sbb std adc iret and add test or icebp sub sub sbb repnz or sub ds outsl lea je sub xchg jl clc jb add ds mov mov shr (bad) and sti dec (bad) paddsb sub nop rclb dec pusha xor mov cli sbb or imul fs push push insb xor lahf push into mov mov adc lret xor adc jl scas popf pop out cli shl mov or lds cmpsb xchg sbb lahf test cwtl add push fwait mov adc pop dec pusha fstpl or mov test or nop pusha or jno nop push and cs push jbe pop sub mov push or test and lea and (bad) faddl sub in sbb es sbb push jbe xor call repnz loope cli add ja push out or mov xchg pusha pop add fcoml and sbb add inc fwait testl lcall add loop pop jmp xor pop sub in call xor jl inc test pop ljmp or test stos les aas sbb inc mov inc pop push mov pop lfs sbb int loope loopne pusha jle xor add out fwait hlt sub into pop jmp sub mov and (bad) repnz mov mov cmp or jbe xor or mov pusha dec movsb sub ds pusha leave jno xor push inc mov rcrl test pop mov xor inc mov adc pop dec lea fisttpll xchg jge cli pop and inc iret (bad) (bad) xor sbb fistpl dec ret or push xchg stc int cmc mov push cmp shr inc ss and inc and jle mov mov and call adc test test and add (bad) aam out loopne sbb ja add mov out outsb xchg add pop out dec jbe pusha or push popf enter pop out outsl testl push pop decb jae hlt cld xor mov and loop bound cs cs lods add xchg gs xchg pop inc lods or mov mov and xor add sbb add sub enter movsb lret sub outsb lcall es dec push adc xchg (bad) (bad) adc pop (bad) jmp adc mov push mov or insl push int add enter mov cmpsb out or repz inc add push or in xchg out lock sqrtps imul pushf add inc jp enter inc dec xchg repnz jg cmpsl mov pop adc xor add out cs xchg lock jno sbb (bad) lea push pop dec call scas pop mov inc rcll mov outsb fwait pop jne and (bad) or test ret popa jb insl xchg push inc add jae jp imul sahf mov xor andl arpl dec inc push fidivr push and add jl enter and and or (bad) pop mov in pusha rclb mov add adc mov mov mov cmp mov mov ja adc shrb addr16 dec pop fnstsw sub and cs sbb adc pusha ljmp cmp gs das mov pop inc inc scas push mov fcmovnb mov sub mov mov stos stc scas lods inc add pop mov pop sbb xor push pop das dec daa add test jge popf push xchg inc scas sub mov cs xchg push xchg jae push test (bad) shlb push inc and pop mov mov sub xlat dec adc (bad) (bad) in jne js dec add scas roll sub (bad) or and mov enter jns xchg pop addl add call dec rcll and test sbb cmp out sbb (bad) xchg mov push pop addr16 sbb jle adc andb mov xor add dec xorb jmp loopne push iret add mov pop cmp xor push inc or add xor adc or mov movb sub add inc push xchg jbe mov adcl lret or adc inc neg lret mov into or and mov add loopne pop arpl mov add jl leave popa je pop and mov (bad) fisub xor jmp fisttpl and into xchg ja mov (bad) push sahf (bad) lret lea repz lea repz push jmp aad rcrl lret push lcall inc sub mov jge hlt les or cltd (bad) (bad) mov ss mov repz roll jno inc in cmc sbb sub jno insl or mov pop sbb inc call es mov xchg mov data16 not insb call mov push add ret into (bad) insl test sub stc insl inc (bad) jb adc dec or and sbb adc sti pop mov jns adc xor jbe cmp inc xor dec outsl sub inc add jl inc xchg out aam mov and mov mov jl sbb pushf pusha (bad) adcb xorb (bad) add mov push mov or call or sbb inc mov mov adc inc daa push inc flds xchg and sti jne add mov xor lret into imul ficomp js xorb mov int3 imulb sar imul (bad) mov int3 cmp sbbb mov (bad) mov (bad) push (bad) and fbld shrb mov sub pusha push enter syscall mov add mov inc pushf cli xor test fwait mov addr16 xchg cltd adc mov outsb mov cmp les mov mov (bad) jae add jo loope sub xor inc in push (bad) adc leave popa sub pushl xchg pop test fwait inc dec pop (bad) mov and xchg bound popa fsubr pushf and push jmp push int mov aad cmpsl rclw mov xor test adc mov dec sarl inc popa mov inc loop xchg xchg nop sbb int3 or mov sbb insb or inc add add mov push dec mov add mov ja and add into pop mov dec iret addl aaa movsl cmpsb (bad) mov test and jb add in ret mov adc pop repnz adc or nop pop mov pusha xchg mov mov add mov or xor mov dec adc mov mov mov lret test or cmpl inc cld mov sub sub test sub test jp or popa xchg mov xchg push fucom mov xchg jne cmpsb or sbb rcr add adc or or imul data16 mov and push mov bound test rcr dec sub pusha stc pusha cmp popa add jp sub add mov das xor popa enter cwtl lret add add jne stc pop fstpt or popl xor fcomps pop lods fs and add push or jmp push sbb mulb sub cmp adc leave add inc add jg or pusha fdivrs or mov aad addr16 (bad) les stos rorb outsl or push fs mov popa inc xchg cmpsl ljmp pop cwtl clc push inc xor jae fwait leave or dec cmp lret inc sub cmp repnz or xor pop popa inc add mov dec xor mov aam out nop nop and mov test aam xlat and test leave subb pop ja (bad) cmc aaa add (bad) pop fnstcw inc sub cli out loopne jno aaa lcall (bad) mov test (bad) or jno sbb pop lods lcall add mov scas gs lock push jmp dec loopne (bad) cmc add pusha inc sbb cmpl push push pop sbb mov mov push and cwtl push dec cmp mov xlat es xor xor repz jl dec pushf push mov (bad) adc jecxz loope mov jp add jecxz mov popf cwtl pushf mov adc or pusha pop imul or jae jne pop popa jno add test mov daa pop mov stos sbb lcall inc pop popa cmc xor outsb test add jmp add repnz push addr16 popf jno add jge test nop xor bound movsb (bad) fisubl incl rol or mov xor inc cmp push pop sbbb aam push sub xchg in mov jge bt mov inc mov push test dec xchg movsl jmp pop rcrb push rcrb xlat in mov dec xor sbb cmpsb add jecxz lahf ljmp pop sub data16 out xrelease add nop test inc mov or xchg movsb pop or sub mov add jle cmp enter js icebp xchg aaa (bad) xchg add movsb cltd jecxz sbb fcoms dec sbb or xchg in dec fcompl inc cmpsb inc add (bad) nop aam adc add repz xor inc sub imul inc ret add scas sub cmc inc sbb aaa mov mov scas add (bad) ss dec xor and add mov cmc ja mov fstpl gs test cmp sub or lcall sub scas push lret jmp or (bad) add dec outsb lock enter and hlt or mov ret movl cmp add xchg orl cli lahf mov test jmp shlb mov inc xor add outsl jp or xor addb divl xor jg add push out aam pusha jmp dec rcll mov xchg inc (bad) or outsb jg add mov cmp adc addr16 cld out add push or adc movsb out mov inc and addb dec jg sbb cmpl sbb add leave or addb loope je and fnstcw add inc clc test std jg shll jb out lock sub or jl mov mov and hlt dec cs inc std add jnp jno arpl cmpsl (bad) mov repnz shll add jg add jbe xchg aam lret pop mov jge and jns stos add cmpsb icebp add popf fs rolb sahf pandn xchg push add stc je mov push dec (bad) mov add outsl fbstp mov cmpsl cmc inc add cld inc xchg push dec xor lds push pop xor xor mov mov sbb xor sahf sbb xchg xchg cltd loopne sbb dec cmpsw and add dec jo add cmovo cmp xor add cmp addl xchg mov push sub add jb add mov add pop mov in addr16 adc pop cmpsl call adc lret mov xchg out add add dec icebp outsb or jle add adc mov add or or movsl adc add pushf sbb push mov ret add js push cmp inc push mov sbb outsb push cld mov (bad) jbe add test sti add aas jp gs mov dec enter pop xchg adc xchg shrl in mov push xchg rcll xchg fildll ret inc mov push outsl dec mov or xchg adc xor mov in in push (bad) sbb gs cmp mov mov movb push sub cmp js sahf jne xor cmp in es ss mov cmp jne jge idiv cli (bad) add inc inc cmp cmp (bad) xchg add fistpl dec add (bad) fucomp push fdivs sbb xor inc push push add mov pusha loopne jb,pn adc add mov push mov cmp pusha sub push in addr16 jns push cmp inc mov ret ds fimull jge ja test xchg adc xchg daa push addr16 test test insb enter and sub scas mov adc icebp pop xor add js mov push and dec in add adc and sbb xor mov ljmp stos test sbbb incb add bnd mull add mov rcll add andb call xchg xor cld lock mov inc add in fdivl enter imul pop popa cmp add xor daa lret add iret lock cmc xchg ja imull pop cmpb lret ficom leave inc adc push or ja inc sbbl loop rcrb and dec sbb push sbb and xchg mov out xor inc daa push rorb aas inc cmp hlt push pop cmpsb call dec lret push popa jno xor fisub ja mov insb loop pop pop pusha sbb mov lds push test sahf mov inc mov mov movsl cmpsb add push arpl jo or add push and or mov in and cmp mov out sub lcall mov test packuswb xor fldl cwtl xchg ficomp dec add jnp cli dec mov hlt les push adc sub fs inc imul or cltd andb dec (bad) out sbb mov mov push inc mov sub mov pop testl jle ljmp rcrb push cs inc add and ja dec xchg jle je or and mov cmp adc mulb (bad) cmp daa rolb lcallw jnp add push sbb or (bad) insl or adc mov adc lret inc jg adc inc adc jne lea xor add mov nop inc add sbb push or adcl faddl inc mov lods ret pop mov mov mov pop clc mov loope xor idivb ds lahf jbe mov sub push adc in add neg mov xorb jb and inc mov mov cld push cmp int sbb loopne pop dec fwait out add aad add xlat mov xor xchg sbb pop xchg (bad) pop das nop imul ss test add cmp js and jno (bad) push dec dec push mov ja jne jno cmp cwtl adc jecxz jg add lds mov add lret std daa nop (bad) add jge fist repz (bad) adc mov je jg add or call pushf insl add cmpsl adc jmp loope xchg in or fwait push cmp and jno xchg loopne adc out dec or idivb mov add int3 shrb add aam xor inc or rorl dec push sub out mov add ret aad add in mov test add add jmp dec cmp mov push and pop gs cwtl adc mov mov xor dec sub inc jmp iret cmpsb and and subb cmpsl and push outsb jle mov xor mov jle mov xor ja lock lret pop pop dec and pop push out lea or mov push add sarl jg das loop add add cwtl jl out fldcw adc jae sbb inc ss fs pop mov cmp or sbb cmp inc mov sbb stos jno popf mov mov clc data16 loope or mov or enter test mov iret lods pmaxsw sub dec xchg sub sbb shrb je ror nop addl or mov pop rcll push push sbb pop mov cmp pop pop push scas stc (bad) fisubrl rorb or ret mov pop dec js and inc sub fidivrl cmp add scas mov mov push adc mov add jmp movsb sbb lods dec movsl fcomps mov inc add mov ja add outsb xchg dec add xor add je roll sbb xor adc push pusha mov loopne arpl and mov (bad) (bad) and pop and outsb outsb add fld push adc mov jmp mov mov cmp outsb cld das je mov lret pop mov and mov imul cli (bad) sub pusha mov repz (bad) js xchg fstpl mov aad sarl rcrl cmpl sbb aaa cmpsb adc add stc jl test lret test mov lods sbb insb jo xchg pop aaa cmpsl sbb add inc das pop addr16 inc jecxz xchg pop aaa rorl dec int es fwait mov add popa loopne (bad) sub leave sub icebp sbb stos jmp adc add cmp inc and aad lds into add mov mov add clc mov test mov inc in sub or mov add addr16 and mov add outsb ror and out xchg in sub aas xchg xchg pop or push movsb dec inc shrb pop and push jno adc pop xchg mov fnstenv pop pusha (bad) pop add paddb mov mov (bad) inc add out jmp dec movsl lret mov cmpsl lahf push add fistp pop popa and stc sbb add or fucomi rorb fs xchg out ss xchg jnp or mov xchg setbe sar hlt jns sub add push or xchg push and dec push mov enter pop pop fsubl mov mov insb scas push mov std cmp pop in add imul add mov jo mov sbb cld idiv cmp jp xor mov shlb sbb inc add es mov mov xchg add push nop aas scas sbb mov mov rorb add stc loope,pt mov xorb outsb jo rcrb sub sbb loopne pushf pop cwtl clc cmp movsl lahf (bad) incl jmp xor test add sbb fcmovbe jle or lods add popa adc in stos cmpsb ds sahf dec add les lods add cwtl lahf push add aad dec mov xchg sbb icebp popa sahf loope inc add pop push push fmuls mov incb xor (bad) push xlat pop aam lds test mov cmp adc pop push sbb pop (bad) mov loopne icebp xor jne xor xchg fimull hlt add fisttp arpl push and test ret stos add test inc inc pop dec add out in jae sysret pop popf loop push pop cmc mov testl sub xor xchg jns lret cmp sub mov daa (bad) orl xchg and inc add ret and adc adc sbb dec repnz iret cmp loopne enter and aad shrb or lcall add pop jmp jno mov pop sahf inc mov xor sbb cltd or inc (bad) xor fs adc idivb mov mov inc scas popa bnd push adcb nop movsl adcb rorb call aaa mov jae faddl lcall jmp pop enter xor shr mov dec je add dec les mov inc mov in jmp pop stc sub add inc test jle testb mov jbe (bad) test jl fs bt pop fstl add sub inc mov inc aam fisubl or jae daa mov inc mov lcall xor sbb leave push mov jae add rolb stc dec and cmpl ds pop sbb and hlt add lahf invlpg sti jno pop int xor add or adc push (bad) insl sarb add dec outsb cltd dec andb xchg in add dec in stos cmpsl push xchg mov add cmp or or and cmp int sbb xchg (bad) sti mov add imul mov jg cmp add adc jecxz xchg ss mov lret cmp add add sub xor cmp je out or cmp in add daa bound ja push (bad) incl push clc popa or adc aam ffree inc (bad) pop into add dec cmpl and fmuls pop pusha into ds push mov and addl mov testl push cli mov pop pop int mov inc or outsl jmp stc jle and (bad) mov inc mov insl int jns dec mov aas out popa mov add imul fmull (bad) or ret jg fnstenv push loop add nop mov dec loopne test jo sub out inc sbb inc or add sbb xor mov push scas jge (bad) js cmp jae cmp jns rcrl fiaddl sub test add inc cltd lods ja xchg lods pop push add jns xor pop lds mov ds lods repz inc add push jbe add gs add imul aaa sub repnz imul loope sub cs push dec mov pusha shrl imul lock loopne add pop int3 cmp clc ds push les popa add daa inc or add mov cli add sub mov inc mov jno push dec adc inc fnsave (bad) adc xor add sbb jno adc insb adc pop sub sub fistl stos push add jle imul fimul aaa cld lock push xor ret push bound roll lock sbb test loopne push add shll sbb xor icebp loopne pusha add out sets push lahf and push add sbb push jne cmp mov and ret (bad) add fwait cltd sbb and xlat mov adc xor adcb lret shrl inc aad faddp or add inc add inc mov and jmp and ljmp insl fs cmp xchg addr16 fsubs mov mov xor mov (bad) jo add pop iret adc or and dec cld roll sarb (bad) fild icebp add and mov mov mov rorl cmpsb idiv mov or movsl pop scas adc (bad) lcall mov push mov mov stos sbb stos out and popf scas rolb aad subl pop vmovhps cmp xor sub dec add and rclb das xchg test stos jmp mov notb pop dec cmpsl inc cmp outsb add in cwtl pop jno add and jo xor and add adc iret and adc add cmp xadd popl add add (bad) insb sub arpl repnz and sbb mov leave and push add xchg push loopne mov dec bound lods sbb (bad) aas cs add lds pop fs xchg add mov sahf or pusha out pop or cld insb fdivl fcomp insl out jbe pop xchg mull and mov mov setae add inc lahf in or aam xor add test add jns push movb out mov fwait add je outsl add jmp loop mov adc add or mov ja and std clc pop mov sub push xchg push cmp mov sbb cmp and xor mov enter jecxz mov dec sbb pusha sarb imul in in inc mov jns dec repnz mov push aas scas movsl je jbe inc int3 mov fstps mov pand fwait cld (bad) sub inc mov js cmp xchg in lret inc aam or out int3 xchg aad cmpb inc (bad) xchg mov mov repnz lods lcall cmp addr16 and lea sub loope sub inc cs lahf cmp sbb or pop (bad) or aas add jl es dec mov xchg (bad) push test pusha rolb add xor out mov pop les pmuludq repnz add nop push cli in pop testl ja je xchg andb add pop jecxz es shr fwait loopne xchg and mov es adc fisub pushf mov xchg insb push xchg and test imul sbb fadds das cmp add aad movb pop pop xlat sbb jge hlt jmp pusha add mov xchg push andps add cmpsl xor mov lret mov test lret mov add add loopne or imul push pop loopne mov mov and imul add jbe das mov jmp sub push dec jmp push lret adc fisttpl sub inc add jae sti jle and jg (bad) mov mov xor rolb lock jns cltd pop and enter (bad) dec es ret loope mov into jne pop mov cs inc out mov pushl test aad scas lret xchg and mov push jl ret shl fild incb repnz sbb mov push mov add cmp add mov lods jg pop orl jnp push jle stc rolb dec jb add dec sub fsubl and add sahf adc leave shrb cmp and lret add xor mov xor push jl or pop insl je bound pop add outsl xchg loop and adc and jo imul mov stos mov in add add mov les or xor leave cltd mov inc mov insb adc out pop cltd add cltd inc mov sbb cmp adc fidivr add cltd shrb sub sbb xchg rorl push or ss repz incl out inc sar or ffree jmp push testl movl ds mov sub mov fistpl push mov push push call adc inc sub pop mov pop ret push leave in push les or add shlb push jmp jge or test lret or inc cld add std inc dec add mov mov sbb add push push mov out add movzbl inc mov mov push xor leave sbb xchg mov push push in pusha mov add cmp and or inc cmpb (bad) dec rcrl push sub test sub mov int add sbb mov mov cmpl xor imul inc test std inc lods arpl mov cwtl lret mov ret shr stos lods add addb pop sbb push mov adc mov add and mov shr or jmp ret (bad) rcrl (bad) mov add or fimul xor (bad) sbb mov mov scas (bad) push and cmp lret xor (bad) xchg add jmp push mov push inc lds and push add pop or mov mov (bad) mov add pop jmp inc enter sub sub fild or in mov add rorb (bad) adc jmp add and jecxz decb loope or mov or or movsb adc mov mov xor in xor (bad) cmp int3 sbb pop cmp xacquire adc cmp dec xchg stc mov or xchg cmp mov jbe ret and callw inc sbb or (bad) mov add push rolb jae push lahf in test push sbb hlt inc (bad) xchg adc xchg and xchg adc adc aas pop pop add (bad) sbb orl push and cmp lcall shl loopne mov fcomp sub xorl xorl or cmp push mov popf push pop pop popf pop inc xchg adc jae mov add xchg add std sbb pop sbb inc jns or fwait add stos rcll push xchg into jp jmp and imul pop call icebp fimul mov call pop cli mov mov push sbb andb sub int divl repz jno lcall sub adcl dec sbb inc test rcll inc mov lea push sub fldl (bad) mov call mov inc rcrb xchg mov (bad) fldenv xchg je xor in pop (bad) (bad) lock jge or cmc idivb sub bound mov xor add stc jl and call mov adc xchg push inc bound jmp inc sbb lret out or push inc sub and lret ds leave xchg call test cwtl mov or (bad) or jae or je add sub dec repnz test xchg jge jae push sub add xchg icebp add cmpsl jns adc jo pop xchg iret and push test push (bad) push mov mov das mov sbb sbb pop xchg nop pop (bad) mov xchg sbb and cmp mov cmp mov mov add out iret inc rolb bound and jl xchg mov inc xchg push addr16 or cmp std add dec add sub jl (bad) movsl sbb bound sbb leave sar in add cwtd loop jno popf dec pop rcrb dec repnz sub xchg mov cmp (bad) std xchg in daa jo shr add popa lea push add dec xchg or cmc outsl insl pop gs call adc lock adc mov ret ror in push lods adc pop mov aad daa ror and sar js call rclb fs jb pop dec gs test push mov lahf inc sub mov add enter pop test ss and and sub ret jp and call inc hlt xchg fstpl jecxz pop push pop ja (bad) mov test ljmp mov cmp fisttpll mov out mov add pop out pop xor and sbbb pop jge adc mov push (bad) push mov outsl adc sub stos jns imul repz in xor or cmpsb loope cs ljmp movsw push lcall and mov mov push lahf pusha mov add movsb cmpsl sub sbb shrb popa sbb pushl jmp rorb and inc sub ret and mov or add js jg movsl shrl scas imul flds ljmp mov pusha pop cmpsb mov pop lock xchg inc shll or inc stc mov loop inc jbe push aaa subb push mov repnz add mov and xor push es sub adc mov dec (bad) inc adc push add push lds pushf popf mov mov mov dec and adc xor daa pop pop rcrb sub imul faddl movsl dec push shr imul mov jmp stc ficom repnz outsl add orl and inc pop jmp ret std aaa jb xchg (bad) out mov bound mov and add mov out dec xchg loope sti add cwtl mov (bad) pop mov pop call mov sub jbe mov fisubr test sub adc sbb (bad) mov iret (bad) fnstenv jno sub xor cmpl mov inc shrb pop fs addb mov mov push repnz in add sbb add add dec adc mov sub movsb or add loope or subb or les ss daa ds clc inc mov jp cmp sbb fadd cltd movsb daa fdivs arpl ret xor inc mov push pop dec loopne data16 stos add jmp jecxz rolb popf or push aaa in loope std mov hlt cld add repnz jno js inc sarb add movsl push pop mulb pop mov fdivr push test xchg repz fildl ret clc nop jmp cmp fimul push test jge int3 repz lahf push push pop xor mov push fsts rcrl loopne adc or sub outsb aaa xor (bad) push je sub movsb mov out mov mov jo pushl out (bad) jmp mov mov mov sub aaa push add xchg jmp sti push dec outsl mov enter cmp out aam imul mov push mov loopne aaa test in or push cmp adc adcb loopne push fwait xlat add jge outsb push sti mov mov lcall (bad) daa sub push add mov push adc mov inc mov inc arpl push out jo int3 and or mov add xor test xor jg sub and mov test push mov or and jg enter fnstenv mov out aas xor (bad) xor in loopne mov sub sub sahf add cmp test addl pushf std inc lea inc daa and xor pop cwtl add push adc sub ret adc aam pop sub mov xchg pop add jae jne adc adc pop popf aam and leave imul notl je pop xor mov and mov jo inc add add pop sbb test addr16 pusha xor mov add adc in mov push (bad) inc sbb cmp and lahf mov jl fisttp (bad) and addl dec cld (bad) test mov loop rcr and xor dec leave or inc push and add push dec out int3 lock int sbb rclb add pop popa jnp fisttpl cld pop pop mov lods xor rcll call or cld in icebp sarb or adc mov dec xorl lcall gs or add shrl or dec (bad) push nop pop jg sbb add or dec lret xchg sbb mov pop jns inc adc pusha pop out mov movsb sbb outsl and loopne pop testb fnstenv mov cltd xor pop add (bad) imul dec cmp xor test xlat mov leave out lahf push mov mov testl add jg jp fisttpl cmc and add push in adc pushf pop cwtl add lds dec and mov popf stos sahf int vpinsrw movl pusha pop stc movsb sbb popf jmp add add add or xchg in xor test (bad) xchg dec add cmp push push mov jl and push aam add mov das pop push mov pop mov and xor jg std mov push sub inc xchg add adc mov loope,pn and ljmp and test mov imul fstpl jo jge push punpckhbw lret or fadds sub popa jne movsl push push outsb mov sub xor (bad) cmp or mov xor mov dec ret jne outsl sub fist jmp mov shll inc mov ret lcall (bad) push daa aaa jl addl add mov fwait loope cmp aam mov inc ljmp fcmovnb mov xor push cmp push das scas mov inc add outsb sbb orl xor cld dec sub xchg cmpl mov sub cmpsb jle cmpsl xchg or popa push adc lcall (bad) aaa rsm add lret pushl jl mov into aas out inc pusha push mov or mov lds inc mov add mov xchg test pop add add add cmp inc pop and mov mov xorl pop in stos mov xchg add xchg hlt or fadds pop andb mov adc jmp xchg sbbl test clc popa mov add pop (bad) pop andl cmpsl ret mov sti (bad) notl pop mov rolb adc outsl pop cmp adc and jo add mov sub xor outsl sub cltd xchg add jmp shrb jbe loopne push mov and sub sub push xor out inc int3 add cmp add or jmp ja andl sub shlb sbb pop adc inc push sbb fiaddl lock cmp and mov lret imul mov scas fwait lea and fdivl push ss jno cmc pop dec popf dec xchg or pop mov les adc adc jmp mov jecxz or fsubs cmpsb outsl jp jmp add mov push add mov adc mov pop outsb outsl cs jne movl pop and loope jae push aaa loopne movb rcl outsl xadd mov repz gs insl add test add mov mov popf push push int3 fisttp push mov orb jae ret loopne inc adc out pushf sub push and outsb incb pop orps jle sarb pusha mov adc push sbbl cmc call stos mov and push outsl sbb push pop mov pop xchg outsb jne adc xchg out mov and add repnz sbb add sbb outsb push xchg dec jbe repz dec xor imul in test data16 int add push pushf push inc stos loopne fildl jg out daa repnz push sahf and fimull and das sahf and add add xchg cmp es push aaa roll jne stos call fldcw mov mov call push cmpsl adc ljmp outsb cmp inc mov sub call xchg loopne jae and popa pusha xor sbb pop in popa mov or adc lods xor push jne mov add jp and aas sbb cmp insb xor fs call inc repnz das pop popf setae enter sub mov pushf push add or or aam jle add jl gs inc add in add jno pop xchg jg,pt add icebp and push mov jmp inc sub xor pop add mov add out stos lock add ljmp mov add subl add aas mov push cmpsb add lds mov shrb mov in scas add ss aas jecxz add imul iret add mov test adc push dec xchg xchg pusha ljmp jbe adc inc add pop lret mov xor (bad) adc dec (bad) lock lock adc push mov jle sub (bad) jne mov cli add mov or aas sbb cmp ret add cmp sbb inc sub push add xor mov xor mov int3 sbb fwait adc pop cmpsb and pop add subl movl add jge lds aas into imul or jg push in add outsl adc icebp scas jnp call in mov cmp out xor ljmp mov cwtl mov data16 leave cmpsb (bad) xchg dec cld xchg xchg stos aad add (bad) add mov pop int inc testb xchg add icebp sbb repnz mov outsl iret aas std clc add inc cmp xor fdivr mov sahf (bad) pop sbb (bad) (bad) cmpl mov outsb cmp sbb ftst xorb pop pop xchg pusha (bad) inc std aas call jg lcall or sub adc or xchg faddl sbb lahf dec (bad) xor jl mov cmp push int3 pop cmp xchg dec leave or sub jp ja cmp add xchg inc mov mov stos jl out rcrb mov cmp mov ja mov mov cs orb stc push (bad) cmp popa movsb dec add pop sub idiv stc add and loope mov scas ja adc mov dec rorb push add ret pop fisttpll xchg out xchg xchg adc das lea int3 jg xchg sbb out popf or push adc ja lock enter arpl push mov mov cli fwait sbb (bad) (bad) (bad) nop fisubl xchg ficomp pusha and jns adc push stc mov add je add mov add jmp sarl sarb add pop add in xchg jmp lret mov setae imul xor mov add and add sbb and mov add rorb inc xchg or and mov push sti orb dec dec in repnz add mov mov and pushf push fs sub inc or test xchg xlat sub add icebp pop xchg push dec shrb ficoml push adc or rorl dec bound or cs dec cld push cwtl cmpsl gs jle jg jg jns pop out rcl push adc pop scas ret rcl ja xor sarb lods imul imul adc xor mov (bad) add xchg xlat (bad) icebp sub adc rorl loopne mov test dec adc add es rclb sti adc add fs lds xchg roll add mov or xor int jae fdivr cmpsb sub jns push jp dec pop in sub push push sbb or clc push sbb sbb mov fmul pop push (bad) rclb arpl jmp inc push les outsb scas sub adc sbb or loop jo xchg mov aas mov rolb xor mov xor mov inc mov cmp push mov xchg lcall and pop dec test sbb add mov out dec add jl rolb adc lret add call out pushf mov push scas dec add mov aam and cli loope mov pop mov fdivrs mov lods pop pop add pushf add or mov movsb mov stc sti adcl or out sub aaa enter mov lock lahf shr push scas push jp and xor jnp mov adc add aas shlb push add pop or hlt xor jae sub add adc xchg sbb inc les adcb ss push mov add mov sbb fiadd (bad) and sub mov jae push aad ret cmp mov inc out jae and add mov add and cmp xor add pop (bad) aaa std out or sbb add sub fcoms pop push add mov dec xchg xor inc mov add incb hlt dec push lods pop or cmpsb adc sbb mov pop dec cli sub pop rclb enter xchg fildll mov mov jne lret or (bad) ficom dec mov mov (bad) lret add loopne or xchg rclb jg pop call loopne stc mov add add jns cmp sub pop aaa cmp push pusha lret adc cmp aam sahf test ss push pop inc jb add js fisttpl daa add ret sarb test rorb iret jb sbb add or out cmp cmp dec or fisubr jecxz daa into add fs push mov or sbb test mov cmpsb rcll mov inc mov push cltd pop bound add mov fsubrs sub inc in xor xor (bad) or stos hlt cmp add and aad xchg push xor arpl inc (bad) adc or cltd in push xchg inc pop mov add loope mov push es add sub hlt iret cmp mov movl cltd fildl test jae,pn test cmpsl add lock pop pop adc pop leave jle enter loopne add arpl ss cmp loopne mov pop sbb popa inc js loop pop fs repnz aaa jnp (bad) std mov lea jle or jmp mov fwait cld dec add inc int mov xor rolb adc jg lcall xchg in repz mov add add inc pushf pop sbb add or jno ja icebp cmpb mov sub (bad) (bad) into cmp popl popa push movsl pop std or out cli loop fistp cmp enter add std pop mov scas ds daa pop in mov mulb iret fistpl mov rcll jo mov mov mov inc push xor add aaa jl out cvtdq2ps cmp cli add mov add and movsb and dec je cmp lahf cmp mov dec push andb cli sub add jge sbb sbb in popf inc rcll adc cltd xor cmpb adc in push fs adc cld xchg imul mov aaa scas loopne loope mov idivb mov ljmp xor jecxz orl inc lock (bad) add or pop add inc test ficomp aas movsl cmpsb or cwtl dec lock nop ljmp add or sub push sub add push into pop movsb cmpsl test or pop push jbe push add test rol lret sub add xchg pop jae adc aam xchg mov pop movb sub lret xchg mov out mov or cmp sbb gs adc push mov pop push mov ss cmp lahf fbld jecxz dec xor in pop cmp sub mov or jnp jnp cld jb clc popf mov ret add ja push addb mov mov adc xchg sub pop mov jmp pop in add pusha and push ds shlb or stos outsl leave mov mov sarl and add cmpsl cmp addb add into clc pop mov fistp (bad) sbb sub xor sahf add fs push and repnz pop xor std add (bad) gs and mov pop dec pop icebp pop jmp (bad) mov pop mov or add std movsb add xchg bound pop sti lret cwtl daa js call cmc add mov test rclb int and leave push dec repz xor xlat add or adc add lahf cmpsl push push mov shr clc dec dec pop push aad cmp jl shlb sub (bad) add inc lea cmp in dec pushf add fucom xchg mov sbb aam dec cltd add inc repnz je sbb jo sbb add fisttpll jmp iret js jno fwait cmp sbb jo lods paddq addl (bad) cmp jl jne sbb mov add ret pop fnstsw push xchg mov movb or push sti cmpb cmpsl mov test mov repz in mov mov adc sub ror inc imul sub xchg add repnz pop add push (bad) pushf cs cmp rolb daa je test mov pop or push fisttp fsubrl (bad) mov mov jae and sbb push cmpl mov push scas loopne pop test inc sbb loope add scas sub push test jge add pop mov dec push int3 pop or and mov mov push cld xchg mov (bad) mov cmpsl dec push add or mov popa (bad) scas out cwtl xchg add xor sub aam test pop arpl or jns enter data16 cmp aad add or xchg rclb mov out xor sub push mov imul and test jbe jmp fabs pop xchg mov insb mov pop add sti dec push (bad) mov and pop dec dec add or add mov pop add push mov fs add add xchg jl (bad) push mov sbb into call out nop inc (bad) insb je push or mov jecxz inc jnp add (bad) inc inc mov daa lods add push dec clc cmp push call mov push mov and orb push add sub data16 pop pushf push (bad) mov add lret cmp mov inc out sahf xchg xor mov add sub or inc and or mov fistp flds mov orb mov or add add daa and mov nop mov inc lock loope dec dec js mov nop callw push jnp stc mov push iret popa inc (bad) mov add mov (bad) ja mov cmp ja push test call loop call mov push ljmp add pop sbb jle popa (bad) sub movsb loopne,pt je out (bad) cmc lahf divl mov or lods mulb in jg xor and add add jnp sbb pop and (bad) iret fcom aam jnp xor push stos movsl add cmpsb jae mov cmpl mov inc add cmp scas push dec (bad) (bad) inc in leave adc mov mov aad insb push (bad) adc add add fbstp push adc adc or inc (bad) mov fist rcrb nop sub (bad) addr16 cmpsl rol push fwait cmpb sub sahf call cmc out aam nop or inc (bad) xchg or inc and mov adc mov and (bad) cmpsl icebp xchg sahf cwtl sub repz into pop pop sbb mov inc icebp stc test (bad) int3 mov cmpl cli ss inc (bad) popf cmpsb fiadd mov addr16 shl adc movsl repz cwtl fs jno adc add in jge insb mov jp pop lods push add mov movsb lods rcrl dec (bad) outsl or (bad) fmuls mov adc cmp cmp pop js dec and rcrb in or add ret sub xor add pop jmp test push add bound or pusha shrl xchg aad dec cs enter jecxz loopne dec add ret or mov jle daa xor mov dec push pop and add (bad) dec add dec rclb pop cmp sti dec add out ds shrb push mov add (bad) stc xchg jb sub test lcall mov movq pusha imul cwtl jmp bound adc mov (bad) (bad) push cmp add and out std and movsl add rorl mov add inc dec stc repz int3 nop push push dec out cmc xchg movsb push sub add scas stos sarb das imul mov cli add cld movsl hlt cltd xchg fnop adc add push mov std add (bad) pop add negb add stos inc test pop mov push lock popa or pop cmpsb negl dec inc adc insl rcrb (bad) mov pushw add push int add jmp inc aaa add dec add fimul icebp add sbb leave and push call cmp popa shl (bad) xchg cmp mov lahf inc mov ja iret test jl mov xor jl sbb shl call imul or sti mov add xchg jl aad sbb wrmsr sub jo fs add pushf cs jns stc inc or hlt dec popf subb jecxz dec xor adc or cwtl pop lock cmp xchg loope sbb add and xchg jg outsb jbe es sub or adc jns inc adc lahf cltd (bad) cmp xor test add fisubrl rolb mov sbb mov aas shll mov cmp addr16 sub jo add pop loop outsb adcb adc ja pcmpeqw mov dec inc into inc add out nop aad jp rolb push mov iret popf dec add ficompl enter jge push aaa cmp jg es add xlat nop sbb push add call push ret dec mov jnp fs push dec mov stos jbe pop outsl adc enter or movsl dec cmp add shrb ljmp mov push leave mov subb sarl js es out or (bad) xchg or jns inc sub js or shr add jnp xchg inc cmp mov mov sub jo mov out rolb sbb adcl movsb data16 pop pop bound sub mov lret sbb lret test popa push scas in push pushf pop adc rolb add cli (bad) mov nop es add loope aad fisttpll out push imul data16 lods ds or mov or or (bad) pop xchg lret mov inc sub pop adc cltd aad insl jne add movsl add iret lods jl sbb mov sub and ljmp mov mov adc lea xchg add fadd repz cltd mov add cs xchg add fsubrs pop push mov adc fwait mov cmpl mov pop notb add mov xor add rcll cmp outsl mov xor pusha pop pop xchg cwtl jno sub (bad) xlat jl cld enter mov or ds add rcrb bound xchg cmp ljmp cmpsl inc sti mov loope jae aam shl lock jge ja movsl jmp lahf inc movsb xchg popa scas loop inc xchg adc out flds cmp xchg jecxz mov or (bad) add or jnp sbb shl or push add cs add adc jmp lock scas cltd outsb cmp and out lods mov xor push aas or das jnp push add mov fcoms lahf pop pop push mov xchg or lret mov hlt mov push xchg inc mov adc pop jmp decl bound rcrb or out fsubs (bad) mov mov pusha xchg test arpl lods lock outsb stos jnp mov and gs inc cmp jbe (bad) cmp sahf or das inc jne imul scas add mov xchg cmp jmp pop pop lea adc js pop (bad) jle jno add in insb imul add push xchg add je lea roll cmc test push add popf sub lcall sarl movzwl fist push pop pop push std subl jae cmp inc stos fisub loopne mov fwait rclb lret or mov int3 decb push adc push mov xor mov cmpsl sbb pop sbb insb xor iret jp jmp int3 idivb lock mov popa mov pop and pop es sub mov add add adc mov jb sar mov or push movsl test push pop lods pop shr sbb jo gs or pop imul ja mov pusha mov inc fst bound mov insb adc mov jmp mov arpl add shlb mov inc popa push stc pop popa sub or mov imul pop inc loop dec cwtl popf add push movsl rcll (bad) or add push imul jns xor sub pop adc xor mov (bad) je decl push pop stos es mov dec mov enter xor (bad) push ret (bad) dec aam and push cmp xchg or mov imul lods xchg int inc aam inc (bad) out xor cmp push (bad) cli jmp mov fisttp inc incl push push mov jl inc enter push xor std test hlt loop mov sub lcall loope mov adc dec lods inc mov mov mov pop lea mov jno or rcrl int3 repz inc mov mov mov stc xchg jo and and or jno lret popf insb dec imul mov cmp inc mov les into call enter iret push lds fwait dec (bad) jne dec xor cmp hlt scas div add and das insl sub cwtl sub dec dec movsb insb pop (bad) hlt push popa mov and cmc mov jne pop inc push sub jmp dec sbb push add pop testl mov push je call test xchg mov or push or or in xor divb mov lods sub shlb add aas jae mov xchg pop cli cmpl mov cld sub inc xchg add popf push dec stc cmp repnz push add mov add mov popf lods test xor mov in js clc aam popf add push and pop mov or push sub subl cld cmc mov push jg add std pop and jo or icebp test movsb movl cld jbe pop inc incl lods jl test add cmp movsb cmp out loopne pushf cmp adc xchg push adc lods cmp cltd xor mov hlt mov popf hlt loop pop pop popf inc inc les or jg cmp outsb inc jae sub or (bad) call push scas sub cmp cmpl push ds mov mov mov mov push mov adc lods xor mov pusha cmp (bad) lock jg popw (bad) in loopne add mov rol mov mov push hlt lock or (bad) les dec mov and inc es aam sub inc popa jmp xor in sub fild inc insl mov cmc mov and push repnz jge pushf fs popf inc xor movsb pop xor and lods repz data16 repz lds xchg push ret cltd pop xor call aas test dec stos lods je fdivrl add in mov jle sub push push mov jecxz subl arpl out pop loope ror fdivrl jno lahf pop inc pop inc cmpsb and xchg in sbb imul mov arpl jmp dec fisub ret cmp out push fiadd test or nopl in inc loope adcb mov lea aas (bad) jne push ss lock push add jbe or cmp sub pushf ljmp or inc sub push loop push mov add and rolb or popf cld xchg and lret aam rolb mov sub incl pop ret ds scas repz push push cmpsl mov adc xchg andl rcrb jg jb test sbb jae ret and push push pop pop xlat dec jle (bad) cmp outsl (bad) imul push pop test loopne xchg push add aad mov inc in mov pusha push mov sub pusha in push mov xchg imul adc (bad) pop add daa mov lahf push cli repnz jbe shrb (bad) jmp cmc push fisubr cmp push int xlat adc dec movsb popa insl rol dec sub sub or popf mov mov aas jecxz jmp repz (bad) push inc test jmp mov pusha lahf data16 sub (bad) xor or add fnstsw pop mov mov cmp xchg (bad) je sbb pop mov sbb add lret push dec add in mov or push lds jecxz mov (bad) xchg lcall dec test push aam add lcall lock addr16 pop rolb push or mov mov jecxz roll and pushf ljmp mov or pop sahf into popa lcall sub push repnz pop aas arpl add test sub jae cmp stc into test add test daa mov dec pop in mov inc out outsl cmp push popf inc das (bad) cmpsb fucomip in cmp test pop (bad) sbb mov inc jno popl fild adc in push in adc xchg and fiaddl xorb xchg movsb xor lods sbb fstpt pop popa jbe inc incl outsb dec jo xchg pop repz mov sbb jmp mulb sbb sub jne mov add push pop mov mov mov inc pop push lods mov bound and xchg or ljmp and jns in and xor sbb and or std lods jo daa adc push cld inc inc inc xor cmp xorl in adc lret lret fidivrl ds adc iret pop mov push or xor xchg add mov out out sub stc lret mov ja ljmp call lcall mov clc test into (bad) pop jmp push lea mov (bad) daa jge push insl jmp xchg xchg rorl lahf cltd ja dec rcrl lret popa jmp add xor mov cmp jge mov jno dec jp add mulb xchg adc cs push std (bad) mov (bad) and sbb xor adc icebp cmpsl cmp subb mov (bad) and (bad) fadds xor jne lock iret (bad) mov fdivrl push cmpsb fsubs adc ret pop (bad) xor dec lods nop lods out mov mov mov cmpsl add add mov std push cmc pop scas imul pop mov popf loope sub pop popf (bad) jmp movsb sbb loopne out in sub xchg pop inc push aam leave daa sbb out fcoms mov imul in pusha (bad) xchg add imul popf and loopne xor dec mov xor ret pop pop subb add aam xor push xlat daa add test aad loopne sub mov fwait or outsb repz push inc repnz jmp ficompl ret mov push aam daa mov jb add loop xrelease cli push push lahf push repnz ds das aam dec jo inc adcb push popa movsb lahf mov push stc out pop mov xchg mov mov and mov pop mov dec add or rclb and cltd in sub and pop jne inc add adc ljmp mov add orl pop cmc adc or lret or and daa repnz or and and xor sbbl sbb ret test xor je cmp outsb mov repz out bound jle xchg add xor hlt stos in push rorl pop out adc fwait jbe sbb andl negb push (bad) pusha cmpsb inc pop frndint rorl inc sub mov sub lret push dec movsl push and aam out push nop xchg push cld mov dec rorl js mov mov fnstenv cmpl imul rcrl mov icebp adc push inc sub and in aam pop lret inc je jecxz cmp ljmp mov lret aad cmp lock mov nop pop pop jmp aaa jne dec movsb and cmp repz adc adc loop dec outsb mov xor adc sahf das push xchg nop cld pusha cmp fdivrl ljmp fimull add clc mov xchg dec das push scas mov or out test pop popf (bad) cmp sti mov aaa mov fcmovnb pop inc xchg pusha xchg xor xor or jge gs adc out fldt and pusha or insl dec mov xchg adc sub rcr add popf and xchg push pushf or and or push mov mov (bad) pop test fstpt jb in cld pop xchg and pusha push int3 fildll and (bad) outsb jg sub dec imul pop nop jg push mov aad gs cmp cli les pushl nop jecxz jb out inc or push negl mov in movl cmpsb mov add lret xchg stc push jnp js inc and mov mov icebp pushf adc pop popa rcl lods ljmp xor mov xchg call pop cwtl add and dec loop push dec cld loopne (bad) xor lcall mov iret ret rcrb jbe ljmp fdivrl sub mov loop das mov mov pushf popa faddl mov shll fs mov sti addb adc add mov dec push or push aas and push and and imul sbbl (bad) adc push dec sub clc dec and add xchg loopne jle sahf ret pusha push mov jno or call ds and bound or xor mov mov ret or aas jae mov nop and mov sub cmp xor popa mov push jb adc loope push data16 jg jle mov in xchg dec xchg out lret sbb xchg nop enter xchg out fldl std stos call xor (bad) fsubrl xor popa pop dec pop roll jle cs push adc scas pusha add cltd xor stos loopne add sub or push cmc jmp inc insb movsl fdivrp aam pop in test mov sub pop pusha mov fnsave xchg jo push movsl addr16 and or pop jae sub and popf nop jb int3 sarb xchg frstor jg xor outsl inc xor cwtl sub test clc jno dec icebp dec je cld and add add mov inc scas inc aam leave lods sbb (bad) movsl lret outsl mov mov adc jl xchg aas push into pop adcb les add stos aad testb xor cwtl js clc mov lods xchg mov and jmp cmp xchg inc lock mov xchg scas enter (bad) faddl daa or xchg add scas aas cwtl add and mov add jle pop popa jp pop leave (bad) ljmp cmc aam (bad) inc sbb mov inc in xchg in mov sbb mov aam (bad) mov and or lcall jae pmaddwd fsubs aad push mov icebp add jnp push ds mov inc clc xchg mov cmp imul add jbe imul jmp push ss test cmc sub pop jb dec (bad) and mov ja std dec mov push rcr ljmp or mov jns je inc pop cmp mov rcrl mov bound push ljmp ret mov mov rcrb in push dec jmp xor imul push leave dec or push sub sahf mov and mov shrl stc xchg adc inc push jp rolb lret cmp xchg in cmc push push insl addb mov in popa out pop cs test push sbb (bad) push out lock sar mov jmp neg loopne bound add mov test movsb pop test sbb mov lret fs cli fsub add lea mov mov into mov in cld and jb iret push pop mov pusha cmpsb in cmp inc sbbb xchg inc rcll sub es adc and bound aas mov mov ss add sbb fistl lea mov mov xchg dec popa inc or pusha push pop mov andnps xor fsts sbb ret adc daa dec mov loope in push sbb repz mov daa push sbb dec fs add inc cmp mov cmpsb fistl js outsb sti cltd add sbb hlt fnstcw scas test test and jp dec faddl das fnstsw rcll xchg pop leave jnp movsl xchg fstl mov stc and jno movsl (bad) dec faddl out dec mov enter leave addl in out jno fisttpll popf jns sub add xor stos rep cmp scas xor mov (bad) pop push push lods rol sbb sbb orb mov subl fildl pop sub call lret cmp add subl and pop test int3 sar push jmp jge cmp repz fcomip and mov out add sbb add jno adc lahf and and and lds dec in outsb pop rolb bound call mov negl decb dec test mov dec sub cmc mov mov inc shlb iret mov jp lods jl inc inc add popf out or mov fldenv add mov stos add xor call push push adc test mov bound adc mov out dec adc or stc (bad) popa popf outsl sub pop cmpsb or sarl imul and inc sbb rcl push addr16 add mov or sub pushf int3 ret loop std dec pop (bad) aam cmp and cmc push xchg out outsl sti dec sti push mov jae fisubr jae js add jle (bad) inc sbb xchg sub ja mov mov ljmp test jl faddl jge popf mov (bad) xor dec (bad) mov add xchg daa add shrb out or xchg daa je hlt sub jmp pusha mov xor adc mov cwtl mov subl inc jb stos pusha sbb lea jns sub aas mov pop stos loope mov cmpl mov mov dec dec mov mov rorl fwait daa fisttpl mov loop test add sahf daa test pusha test cmp dec lds and jb test add adc jae mov inc mov xchg and rorl pop xchg std push mov add xor fsubrl xor imul add or xor addl fsubr add mov jp push mov ret sahf lea sbb add ret scas in movsl test or test add ljmp sbb push mov shll mov push (bad) lds xor mov aaa xchg push sbb xchg add daa and adc out lahf sbb dec incl or dec mulb into dec popa lret sbb ds xchg in nop in or addb jp and dec push (bad) fistp or xchg call add (bad) pop sbb mov adc pop jmp outsl inc pop mov xchg cmp add addr16 and cmp xchg out adc jne out adc loopne xlat daa bsr fnstsw pusha (bad) mov pop outsb inc popa rcrl inc (bad) push mov mov je push inc leave dec pop xor xor sbb nop iret mov popa orl js mov movsb xor push pop and mov sbbl xor loop add gs or mov mov movsl dec xchg push sub ja hlt loop jp rcll addr16 adc dec and push mov inc and cwtl add dec mov add push xor push lcall mov sub ficom jg push or push lds into divb fisubrl mov xchg pop (bad) ret mov sub mov adc mov (bad) xlat popf loope mov (bad) mov lahf pop jge cs push push cmpsl mov jns (bad) mov adc popf fildll movlhps and jnp bound aam jno (bad) jne (bad) dec or cmp addb jae add jbe cmp sub data16 dec xor push insb int3 and pop mov or pop add inc imul ds movsl or testl mov add inc push pop test pop jno movsl (bad) xor inc adc sbb pop mov mov adc push clc (bad) xchg out mov cmp lcall sub xchg mov jae pop sbb rclb enter mov cmp pop jle verw xchg popf pop jae shl push dec jmp xor repz daa call mov pop dec pop out sub add sub xchg inc ljmp push mov dec or pop add fistp cmpb mov mov (bad) jle es and xchg xor ss pop js add push push and or xchg call sbb pop mov cmpsl dec or push add pop add mov xchg mov jnp dec call testb push and mov lods mov cmp mov loopne pop loope icebp mov xchg popa sahf xor push cmp (bad) repnz push (bad) ljmp cmp incl xor jno xor push cmpsl test test mov stos and or je aam inc aam mov fsubrl dec or pop dec lea mov xchg xchg sti aaa movsl insl roll mov (bad) lret xor (bad) int (bad) jno jmp cmp addb sbb call pop jmp mov mov movsb pop adc (bad) cmp push mov lea inc sarl ficoml or dec push nop daa repnz add add mov xor xor push dec pusha vpcomd sub (bad) addb lock js fwait mov mov pop push ret add lods out leave xor push adc (bad) add stos mov out mov mov test cmp fildl sub inc dec pop push adc mov xor xchg inc push out mov push xlat js mov fs das xchg jl sub (bad) loopne inc lcall mov xor cli outsb sbb mov pusha sti cs mov push add test pop popa xchg in sub mov sub push jnp fdivr jb je loop and push pop add movsb mov stos sbb addb jmp mov mov mov in add cmp pop clc jmp and jnp lcall and mov pusha (bad) imulb pusha push pop popa push xchg adc lret adc fsubs push cmp push jo push aad add (bad) mov dec jb shr cmpsb scas dec and add roll sbb sub cwtl call bound xor push addb popa mov shll (bad) sti fdivs or xchg add add xor (bad) clc stos stos aam jno sbb mov xlat daa add cmpsl pmaxub push loop mov adc test test cs mov sbb popa mov jo cmc addb jno in aam mov sti sub (bad) out push pop cmp js and fnstenv (bad) xor cli repnz mov xchg into inc popa and sbb stc sub jmp adc bnd xor jmp roll add ret daa sbb mov mov and pop and mov add sbb psraw xor xchg repnz cs jb push test arpl mov jle test movzwl jns adc lret lret push movsl push (bad) xchg and adc das mov add shrb mov les push pop jno fisttpl mov or adc ret sbb ja cwtl and mov lock fmuls int inc xor or add xchg or dec mov mov xchg subb mov jl fsubl inc int3 inc loope (bad) mov mov daa mov push aam and fistl xor add or pop movsl jmp daa pop mov xchg xor fldcw and arpl mov xor mov leave fsubl daa ljmp loopne movsl mov dec inc push pusha mov push mov mov mov xchg das cmc and mov mov sub sti sub out or pop or sub sub mov mov cmp jns push stc mov negb or pusha fsubrl pop jg xchg es add mov adc (bad) call xor sbb pushf idivb sbbb loopne lahf adc sbb add pop pop test xchg mov out pushf or aam jp das push add int inc and pop sub sti (bad) inc adc inc jp repz fbld es mov add xchg aam scas pop adc jnp add xchg mull pop subl ja (bad) icebp rclb xor jl cs jno movsl mov push adc cmp sbb enter push call sub iret inc add xchg out jnp and aad aas add repnz ret mov and push push data16 pop pop pop pop outsl dec std out ja xchg fistpl push dec mov dec xchg add mov xchg cmp repnz add scas xchg pop shl pop sbb jne cmp push or pop mov add or (bad) mov pop leave cmpsl mov sub and xchg mov dec call cmp cli jbe js mov or pop cmpsb fidiv leave mov data16 not aam test mov adc outsl sbb xchg in or mov (bad) mov sub rorb cmp sti push jbe leave xchg pop das aaa repnz out lret les (bad) mov mov add aad cld out push push in xchg push ljmp inc sub or lds clc adc mov push add icebp sub shlb data16 add hlt cwtl adc xchg scas les push mull fwait push pusha jecxz dec pop test insl pop cs mov and sub js add mov pop scas fs mov loop push adc stos xor mov je jecxz ljmp sti add push leave mov test sahf psraw inc jg ljmp fiadd (bad) xor aad or push push mov jle xchg and shl sahf insb in test cmpb aad mov sub push enter xor cs jo pusha insb adc sbb xchg pop sahf sti cmp pop notl subb rcll sar xchg adc xor xchg sbb pop mov popa rcll mov or push (bad) sbb lret add aam je test or (bad) and rcrl stos sub or cli xchg xchg xlat and push add mov pop inc lods mov sub rcrb in movsl jnp lods mov add cmp push in mov je and insb push nop mov pop mov pop push lahf xor stc insb adc ficomp fnstsw mov int3 pop xchg int rcrl dec (bad) outsl outsl inc add fisttpll and add ja nop decb mov jl mov jp xchg out pop inc pop jae andb adc dec cld add push out xor mov decb repz inc xor mov push test sbb ds adc in push aam xor aas (bad) fdiv aad (bad) daa aas cs pop cmpsl pop test mov popf je mov and sub jae dec jno add add shrb outsb (bad) popf lods (bad) and mov cmp cmp aad nop jg ja pop xchg push mov xchg adc repnz push mov dec sbb add mov imul pop cwtl mulb mov push not and fidivrl out or pusha test das ja (bad) sbb add (bad) sub lock push pop fisubl and jecxz jns in sub movsb scas hlt add jl push and jbe cltd add sub lahf adc pop out push or add or cmpsl shlb fildll adc and xchg ret jnp loope,pt xor (bad) inc aas pop rcrl mov pop xor push or sbb adc cmp jecxz outsb add sub mov cmc (bad) hlt lods enter push loop faddl add clc add nopl in out mov mov fcoms mov nop mov jb push mov adc arpl and adc ret inc data16 imul (bad) fcom add inc stc cmp add lods push enter lods loopne sub popf jge pop jb xchg mov lret stos ds dec fcmove dec add repnz add out mov aad pop push mov push dec mov lretw pop (bad) out inc jo sbb cmp or out add test stc adc xchg test pop pop fmull icebp xor sbb dec call jmp xchg push ret push fxch add clc push sub cmp mov push stc pop imul dec fdivrl mov cmc divb push lock adc fisttpll enter icebp sub jmp push rclb jo mov pusha shrl push mov pop (bad) adc lcall push fimul pop sbb xor stos xchg stos jo iret mov pop mulb add mov xlat and add mull icebp imul (bad) cmpsl outsl pop mov popf and nop into and mov fstpl inc jne sbb cmc lea fsubs ss jne lds notb mov hlt std mov fldl test push push adc inc out sub mov aad pop push and mov push aam pop and xor fbstp out push ret frstor mov inc sub push jp inc notb lret cld pop (bad) dec pop sub add mov out add mov and mov in mov lret test repz adc loopne shlb pop mov sub pop or xor mov (bad) dec sbb int cs adcb jbe jge rolb in xchg lods xorb stc int3 jmp fisubr call popf pop sbb nop lret fildl enter mov xchg fsubrl mov es and call ljmp sub divb mov mov cld int rorb add popf adc push xor in or xor fwait add jge sub (bad) repz and jno in fwait sub rcrl cld adc test xor stos fist mov xor mov into iret add cli push lret or into jb daa fist push out dec pop ja loop adc das xor add inc ss pop adc add sbbl sbbl inc adc in in das call cmp (bad) imul fstpl dec mov adc dec mov sub pushf sti inc add test xchg add cmp rcrb adc sahf cmp shll cs adc es cltd push adcb sahf divb dec or jmp cmc movsl sahf pusha lods sub jne or pop xlat or in sub jo stos ss inc xchg push pop lea xor adc stos fsubs xor ror push popa das xor sarb nop xchg clc mov sub fdecstp or cmp pop rorb jnp lcall or jl xchg jle hlt mov mov fistpl cmp mov rclb push pop pop in mov popa jge add xchg iret les inc jg inc js cmp repnz aam and pusha sub push das xchg mov mov (bad) pop fs adc outsb sti pop dec test scas (bad) pusha push push or leave aad nop xor add cli cld loop roll cmp in add arpl push inc push repz sub sarl lods fsts xchg loope mov rcrl sub out clc outsb mov adc sub jmp shlb xor out push iret sub imul or mov (bad) test xchg mov iret mov pop jecxz add cmp andl icebp test and pusha andb adc (bad) mov xchg fimul mov cmp cmpsl sbb lcall jo and mov fistpll xor push pop push xor and jmp xorb mov faddl cmp mov test xchg lods inc xchg ds mov test push pop jo dec mov repnz xor das dec pop mov jmp jnp push insl cmp mov (bad) jg in xor mov jne mov mov mov mov push das pop pop stos pop lcall push push mov dec cmp stos dec cmc push cmp into test mov lods push or in add inc hlt cltd loop mov dec pop add gs add jns jmp jmp and in add sti mov pushf push adc mov or jle loope cli xlat add add push mov andnps imul mov repz inc xchg lock sub sahf mov stos imul and lcall xor pop fnsave loope cmc call movb fstps mov dec mov add sbb mov or cmp in out xchg lock mov or push add sub outsb cmpsb popa mov aad or mov popf (bad) dec outsb enter cmpsl (bad) lock or rorb xor cmp repz adc mov sub les push or and adc scas jnp add pop jl repnz pop in int3 mov xchg sbbl daa (bad) mov cmp mov push pop les mov dec pop mov add mov fiadd pop scas jae cmc push lock adc scas cmp mov fdivr dec pop sbb and add mov pop out hlt push sub mov mov inc pop xor xchg nop or cmc call addr16 xor adcb icebp xchg cmpsb xchg call pushf and imul inc mov mov push sub pop and in repnz xchg gs rol stos lods sub mov lods add andl push pop movl xlat outsl xchg xchg add adc scas je negb outsb fwait (bad) mov mov cld repnz mov test repz (bad) int loop sbb mov dec sub add fldenv mov lea or sbb xchg cmp ss insb push mov mov mov fisubrl push pop push adc add xchg xchg in addr16 ljmp push sbbl pop mov push sbb popf idivb fisubr ljmp jnp pop (bad) dec pop pop xchg mov or outsb xchg fmull jge or cmp das dec cmp adc add sbb cmp stos shlb jmp mov push stos or and mov pop addl xlat mov jns in dec mov mov or xlat and jle out or xlat add xchg sbb test mov daa int jne addr16 add fsubrs pop and shlb dec jo sub ds test jmp pushf pop xor icebp or sub mov xchg (bad) cltd repnz jno mov mov xchg dec insb mov movsb cwtl add xchg xor leave or mov arpl and idiv xchg sbb xchg dec dec push lods aam add and push cmpsl add mov xor mov add inc rcrl jae sbbb insb and mov out mov mov and aad int3 mov test inc inc xor adc mov push mov cmp popf movsl pop jns (bad) add xor scas push add insl and pop rclb pop clc push dec jb pop xor adc push push out imul lea sub pop adc adc pusha inc test jge (bad) push xchg cmc mov mov stos push dec (bad) rclb out or mov or sub (bad) sub sub push lcall or sub xor and sub pop repz and mov adc mov shrb fdivrl movsl and sahf loopne or aaa mov mov mov inc jle mov cld add lods inc out imul out call xor xor and jb pop out lcall pop add mov rcl sub dec pop fcmovbe mov and mov (bad) dec push or add out stos mov ret pop mov sub gs jmp into push push or into jg aaa dec std lret (bad) xchg lret mov pop adc jo xchg pop sti (bad) jb add popf jne pop pop cltd xchg roll push or push mov imul in mov addl push mov outsb and sub sub insl or xor mov jecxz movsl fimul add sahf fldenv pop fsubs xchg (bad) mov add fwait in sub xchg pop call sbb xchg inc repz mov cmp xchg jge and and inc adc jl lahf or jns movsb movsl dec (bad) or push lahf push mov leave les xor imul movsl jae shrb in and xchg subl xchg xchg add lret loopne adc out stos ja add or adc aam into aas js pushf jmp add daa dec mov push pop rorb fisubr lock cmp rolb shrl xchg mov lods daa add (bad) mov stos and sub sbb iret push movsb add scas push dec mov push scas aam les xchg icebp mov jne nop stos sub xchg adc and cmp jle ljmp addb xchg or jno lock or ljmp outsb shrb add mov into sub xchg mov push fstpt adcb (bad) addb mov xor out test mov add out sub push cs (bad) fwait add push and and insb js mov jecxz daa and push ret shlb mov adc dec icebp cmp das stc out int3 inc mov es enter or jl orb inc adc enter xor mov mov pop imul mov sahf dec popa pop xchg fsubl jmp std inc scas jae daa pop xor sub das adc aas stos sahf xlat roll scas mov pop cmc xlat and popa jg mov jo aad add test stos sti pop add mov mov sub push and scas jns test nop subl cld jle dec mov xorb pop and pop loop pusha ret nop mov cld dec scas gs add ds push dec or mov shrb sarl (bad) repz idivb mulb popf cmc xchg xor jb pop or ss faddl js incb pop (bad) enter add je and mov (bad) inc aaa je (bad) add and pushl adc test fisubr or sbb sahf lods xchg popf scas negb or leave cmp mov test jmp pop jae add imul xchg cli and push rolb cmp leave push push (bad) outsl xchg lods inc pop sbbb jmp in dec in pusha cwtl cmpsl jne add push jne mov mov lcall ss add push push mov (bad) adc inc cmp into lcall adc add sbb or lds sbb jae jo xor (bad) adc push (bad) mov stos push (bad) dec or pop pop (bad) mov xchg mov cmc movd mov push mov push fiadd mov cmp movsb pop loope in mov insl lods dec test dec jg xor outsb test add xor jmp jb out cs ljmp les pop adc mov or sbb xchg dec add mov mov or rorb cmp ret add leave cmp aaa xchg or call jle jnp push aaa push cmc (bad) test xchg xor xor inc mov aad mov or xchg cmp and jl fnstenv sbb imul jmp outsl push sub stc sbb xor mov add mov lea mov lock adc insb or pop push dec and xchg pop decb mov or add cli sar push jbe stos rcll pop and add (bad) or out add add and addl dec push outsb pop pop push (bad) out add jmp mov adc pop std push xor inc es jae orb inc mov les sti or inc nop (bad) stos ret pop mov mov mov sub pop jns jp mov or rol xchg fldt cld lret sub mov (bad) xchg movsl pop jle push loopne sub add push test mov mov mov fsub fisttp or mov cld sbb pop push js enter add cltd sub fcmovb andb push popf icebp sbb lret pop jmp rcrb add and nop mov pop or (bad) in fs sub mov jbe pop and scas push mov mov sub and cld or repz mov mov and mov cltd inc mov (bad) outsb xchg call cltd js sub push lods jg pop ja mov insl xor mov add xor ljmp push das adc mov je in test jo scas mov and mov pusha xchg in or mov movsl je out push jbe xchg jns add movsb push xor (bad) or jle add jge cmp adc mov jmp add fimul pop popf and mov and inc or sti push dec pop scas pop stos mov mov dec cmp inc or add add mov cs dec xor inc repz (bad) cli push adc dec repz mov mov shrl mov or and cmp mov push stc sub mov inc icebp jle jb add mov js aam pop popf and and arpl pop (bad) mov sbb idivb pop inc sub adc out loop inc mov daa daa lods inc dec inc sub hlt movsl mov ds fdivl xchg mov pop jno or pop sub sbb lea daa pop ja mov xor add testl stc push inc (bad) dec mov popf scas add mov mov repz jg xlat mov (bad) jae lcall push xor pushf movsl dec mov mov stos int3 repnz inc ljmp (bad) repz cmpsb lds cs idivb pop xor pop sub sub sbb sub xchg shrl sbb and mov (bad) cmp or (bad) nop mov and fldenv sub fs cmp aam mov lret lret xchg cmp fiadd scas inc xchg mov add xchg dec lea sub fsubp popa xor xchg fisubr inc xor and jge nop mov xchg sti sub lock sbb push add or scas leave mov mov rcl push inc add pop mov xor jge hlt es call and mov cmp push cmp adc xlat add jmp inc xchg fwait adc ror pop inc inc popf rcrb pop clc mul pop push add out mov nop push andl pop push scas les and sbb xchg add or pop push popa jg insb inc nop out mov loopne enter rcll aam sub aam ficom sbb sub mov adc ss (bad) test jge sbb xchg sbb adc cmpsb movsb xchg and pop lcall mov pushf add fsubrp xchg dec testl popa scas and push out hlt inc add scas xchg adc sbb push les fwait pop mov and dec jno mov daa push icebp and jno xchg inc dec adc jg sub and sub sbb je imul sub inc pop add rclb enter dec and adc jmp add push mov ret out (bad) fisttp shrb push mov fsubrs fistp mov jnp add lock xor push push pop movsl add and adc inc je sbb in and fwait xchg jno sbb cmp xchg sti xchg pop shll hlt movsl fcomps fsub movsb loopne (bad) jecxz in arpl mov cmc or jb mov jg adc inc stos add and xlat inc push cmpsl mov mov inc rcll ja mov es xor and and and sub (bad) idivb push repnz add mov scas add daa nop sub (bad) scas nopl pop inc xor enter sbbb mov test adc popl (bad) lock mov adc jns jno (bad) je sbb sbb hlt xchg jge mov mov dec push cli ss jae fidivl adc lret into push adc xor clc mov sbb jo inc repz cmp loop scas pusha sub ljmp incb xor jno mov adcb mov es loope loop lea mov ss frstor aas addl in daa jmp les add xchg (bad) lock mov add addb (bad) sub add loope push and std xchg push (bad) roll adc pop mov dec stc jmp pop cmp add xor movsl xor bound inc int (bad) test ret dec or sbb inc push adc test jmp jnp xchg sub push stos popf add mov push in mov ffreep mov jae jmp jo jbe add and push mov int pop repnz ror shrl call adc jbe std and sti inc push pop pop das imul sbb inc push flds adc lcall dec add loope and mov and cmpsb xor hlt adc pop xor push pusha scas fst cmp and mov cmp fsubr jle rcrl xor and mov and dec test test aam add and cwtl loopne fidivl push jb or sub test popf (bad) daa push inc xor xor cli movsb lock (bad) lea mov loope sbb fwait mov lcall jo mov jecxz aas outsb dec add lea pop pop lcall cmc out dec cmpsb push mov jecxz xor mov nop jmp enter push ret divb out ja lods mov pop ret pusha or nop add and push mov mov add lods pop mov xor fcmovb inc jle insl insb loopne xchg or push cli ja sub xchg pop mov cld nop pop leave out or mov pop mov pop call jmp test popa ja frstor shrb and add mov mov sub add add push pop pop mov inc test (bad) es es std scas push icebp inc push jnp outsl popa xchg adc inc sbb dec inc test test cltd xchg adc stc sub js in sub inc jae xchg int in (bad) aaa inc popa or adc aam les push clc mov mov push idivb mov add std mov pop outsb in fdivrp adc inc cmc scas sub jae stos mov cmp lods and sub pop mov rcll ljmp mov aaa lcall out outsl jne dec xchg mov push sub or sub mov call mov daa sub test imul mov scas add fucomi aam cmp xchg movl jns pusha jmp dec xchg mov cs js (bad) add jo pop pop mov sub dec adc call adc jmp jg mov imul sub sub adc stc sbbl xor jmp push adc or or (bad) aaa out mov lret and sub dec push in repnz (bad) jg add stc jno aas and sbb mov add mov (bad) dec jmp push push loopne sbb icebp cld stc mov mov lock stos lret cwtl jne adc or rcl dec icebp pusha mov dec mov sarb sahf addl cli rolb add mov adc popf add mov popf push cli mov add mov mov dec sbb fisubr stos mov fmuls popa pop cld or sar in cmp push add and insl xor add push mov or lret movsl test cmpsb je or pusha push xchg inc or popf mov and pop data16 testl xchg repz xor popa jb lahf iret mov fldl mov pop cmpsb ljmp mov leave inc sub push pop xor xor lods stos mov push (bad) or jbe pop repz cwtl add call adc xorb lahf push shlb (bad) mov es mov jno xor pop mov xchg in jno,pt add stos mov and adcb enter mov cmc push jns ret pop mov fwait scas cmp pop arpl mov and imul xchg push xchg aas mov mov add test pop in sub and in stos (bad) cmc mov xchg sub sbb add cmpsb dec mov popa add scas sub popa fnstcw lods push movsl dec xchg jp testb sub add ss add inc pop sub push or inc (bad) cli mov jae mov add and jo aam fdivrl or push mov push jno mov xchg leave push pop and or mov add insb pop push dec push lods mov cmp data16 mull xor (bad) stc mov popf add out sar push xchg inc dec push cs jns jl leave fbld daa jmp out jb push pop addr16 rcrl insl and inc ss jle pop sub mov adc mov das int sub jb push in and xor out ljmp adc je lcall ret dec sarl stc mov mov pop xchg push add pop sbb cltd aam loop add outsl push push (bad) dec inc xchg sub call sti repz out sub inc cmpsl aad xor cld xor repz cmpsl out mov nop add xchg dec enter mov mov xchg inc test or xor ss lds push lods ret cmp lea xchg sti cmp dec dec mov adc mov jle nop aas mov push xor fnstenv and add adc jo imul lds sub ja pop daa ds or mov nop push sarb (bad) jae dec xor ja mov adc cltd (bad) adcb data16 pop lea cs mov mov xor test xchg in push mov cltd inc rcll add cmp xor and mov mov xchg dec je xor dec ffreep xor add mov mov arpl mov pop push push xor push push rolb adc adc cmp mov (bad) mov mov cmp or cmp inc push add xchg or sub aas adc xor (bad) xchg adc mov mov lods mov fnstsw sbb inc adc mov aaa test leave lcall sub cmc add xor rol cmp sub mov stc push dec xor mov cmp or jnp push sub pop push adc inc xchg cmpsb shl mov ret push gs mov jge test sub or lret sbb mov int3 rep jo clc xchg rcrl movb lret mov fdivl inc imul ror daa pop popa mov pop das xchg out repnz fildl iret xor shlb (bad) repnz nop roll sbb adc mov ret lds mov fistpll mov xchg push xchg add xlat add lds ljmp movsl or insl popa pop mov ffreep aas popf loopne mov pop or xor ds pop jg mov mov arpl nop add pop xlat dec mov jg jnp add push adc and sub (bad) adc inc mov push xor xchg movsl sub push dec cs pop lret and rcl xchg test rorb lret sub inc sbb ja cmc in dec xchg sub jg add pop loope pop into pop add lret add pop push mov pop mov mov mov push fnsave movsl or and dec add sbbb pushf sub cmp mov mov (bad) notb mov je xchg fwait mov repz notb mov icebp ljmp adc add call cld fiadd bnd lret sbb dec adc add cld mov fstpt faddl ljmp add ja jb add pop lea mov or call int3 das insl arpl mov sub sub ja xchg ja mov xchg pop push cmpsb push sbb xor mov lret adc or mov mov adc pop mov push (bad) cmp xor stos add sbb popf fstpt repz mov push (bad) decl and repz xor dec incl popf shrb cmpps add out jno xchg mov loopne jns mov pop rcll and push leave dec add push and pop pop jecxz int3 mov jge sarl test inc mov loopne xchg pop cmc dec test xchg fiadd push cmpsb lret xor gs mov daa xor mov out jnp add xchg cmp lods (bad) mov dec cmp add cmc xor add cmp mov cmp xor mov jle movsb lods icebp cmpb push cmovb rorb lock add ret test or movsl pop xor xor add mov inc adc in dec nop mov rcr push sub sub in mov sbb hlt pop pop pop jp lahf mov imul xor jbe fdivrl xor sbb neg inc jmp in int3 les pusha rclb mov jecxz and adc icebp mov adc or ret adc mov pop in dec sarb lea sbb in add les xchg cltd test mov cltd cwtl jl fwait or (bad) leave popa outsb cmpsb and adc sbb fdivl shlb push or cwtl popa fucomip cmp aad push dec push jno (bad) (bad) in pop mov movsb or out es sti jecxz cld das push popa jge xchg mov (bad) xchg dec xchg xor mov xor jbe push (bad) (bad) mov rorb dec dec movsb mov mov xor inc stc out lock test add roll lret pushl add mov pop pop xchg xor sbb xchg push arpl rolb add xchg jp sub add mov xor ret dec and xor mov jbe int adc mov ja mov pop add jmp jo or or fisubl fadds aam adc pusha adc mov push xchg sbb jnp stos mov fwait (bad) fistpll mov xchg xchg in add movl mov stc in add loopne cltd push pop cmp dec dec scas cmpb cld or stos ret repz insb sahf pminub jbe icebp and and in add cwtl lds jnp inc stos fdivp fs popf push pop dec xor daa pop sahf inc (bad) cmp loop inc inc mov cmp push es imul push (bad) loopne or outsl (bad) sarl dec shlb xlat fisub test xor xor mov mov mov sahf daa lods jmp cmp mov sarb xchg cltd sub sbb adc inc cs mov cmpsl cmp inc mov in mov sbb push xchg xor les inc mov push loopne jno daa xchg shlb adc mov je xor xchg add xchg dec mov mov fs and mov cld mov fdivrl imul test add xchg arpl rclb cmp adc add hlt mov repnz adc cmp add sbb insl add (bad) adc jbe dec aad hlt xchg sbb push aaa xchg add fwait (bad) into sbb inc lcall pop (bad) or or ja pop inc mov sbb das testl adc nop outsb loop cli mov addl fidivrl sub sbb arpl sti and cwtl shl add sub mov mov clc rorb or aam mov jmp orb ljmp xchg aam xchg in push test or iret mov xchg imul movsb dec sub divl cmpl xchg dec shrb je fmuls mov sub sbb jo imul xor jnp xchg (bad) sbbl inc lds adc mov mov cmc loopne and es pusha sub jb out leave pop sub adc add push push mov mov pop xor mov mov adcb xchg xchg xchg lret or dec movsl pop aad push pusha pusha lahf test in bound jmp mov jecxz push sub xlat or out and push cmc (bad) and mov pop daa cmp fwait orb out jp push pop push pop out mov push sub loopne cli sbb cltd jo loope cmp pop mov (bad) xchg das fisubrl add or xor fnstenv hlt push das ljmp xchg cld ret or popa jae jo pop add pop fsubs ds ficom aaa outsl add add jbe je jp mov cmp pop xchg popa mov sbb xor jbe mov jg insl jmp jo loope pop or stc fnsave (bad) xor xor sarb mov in and cli adc lea push pop ffreep jg mov adc jecxz push bound jg insl push int dec mov aad add clc mov adc mov inc data16 scas outsl push mov pop mov and cmp mov sub mov push faddl add lahf xlat daa cmp cld shrb push adc scas cmc pop std push and lods adc and xchg daa enter (bad) xchg xor xchg or pop pop hlt cmp mov add pushf pop lret xchg adc scas or add jecxz jbe jmp aas mov fs fistpll out fnstsw ret test orb add sub test xor sbb addl hlt fisttpl xlat es dec xchg pop mov and mov int mov add sub pop jne ss pop inc stos mov mov pop repnz jno cmp jo push fldl inc sarl add in xchg push adc in mov int aad (bad) lock enter iret fnstsw lcall push or mov mov add push dec clc rcll xor jb add adc imul ljmp jnp sbb or iret repz xchg lret or mov sbb out pop mov inc push shrb cmp popf (bad) std faddl loopne adc hlt jp mov fiadd cwtl adc sarl mov scas enter cmpsl or xchg pop and daa popa jbe subb sub ficomp aad std mov and mov mov daa repz mov xchg cs xor lcall mov mov popl bound in imul adc mov add xchg xor repz mov push rol inc mov adc arpl inc sub jmp cmpsl hlt (bad) mov xlat cli mov repz inc add mov lea fwait jno push mov lret (bad) rcr mov lds xchg push hlt mov sub cmpsl (bad) mov das dec negl les pop pop icebp nop fstl push pop inc incb movsl cmp jnp lahf add lcall add push and push cmpsl (bad) adc sahf (bad) push nop mov mulb pusha and pop pop out outsb in es pop sbb rcrb es lahf pusha pop (bad) pop nop fs lcall mov imul cmpsb (bad) and mov call adc cs je daa cmp jl jmp and scas push rcrl shl mov sub sbb in addr16 mov ja or ret inc in mov sbb jno dec push clc repz enter loope addr16 pop jbe push push dec fldl mov sub hlt sbb scas (bad) mov cwtl push dec cmp sub cld bound ja fadds jl or sbb fistpll (bad) (bad) mov push mov push rcll add xor stc cmp inc xchg clc lock fistl out add inc xchg xor xor pop dec cmp cmpsl fdivs clc test xchg jo sbb mov stos mov (bad) sahf arpl sbb cmp adc jmp iret mov or es jae jo call sbb mov out xor xor push push dec in mov ja add aam mov pop fcom inc add mov cmpsb (bad) and xchg push dec aaa out add jns pop push pop dec add xchg jo dec cld mov add stos mov xchg cmp imul dec mov push xorb mov add jecxz and out and jge jo lahf insb lods pop push mov icebp nop int3 bnd mov jle jge idivb sbb movsl clc pop cmp (bad) push pop or push and and shlb enter jne add inc xchg pushf addr16 test in push mov ss add inc clc lock xlat out pextrw jne xor pop xchg xor mov cld push or jmp add je pusha or adc sub stc push into or add ja pop mov test dec inc dec repnz addb xor pop sbb mov nop sub loope pmullw js dec rcrl psubb gs cli mov xor mov mov inc add push in mov add mov cmc lcall adc pop xor dec or sub or fistpll sbb repnz mov test call xchg fisttpl sub sub mov push mov cmpsb stc dec pop repnz push adc pop fbstp adc daa test inc bound loop pop mov dec inc dec lcall xchg pop pusha psubb (bad) popa adc popf loopne mov pop mov mov popf or jae adc jb mov and mov fldenv ds outsb (bad) sub jg adc add sub cmp sbb push insb adc loope or rcrl (bad) out mov pushf mov aas test push cmpsb ss sti pop mov inc add push sbb pop pop adc mov xchg sbb pop ss mov mov dec loop mov (bad) sbb sbb gs xor test mov lds outsb pop (bad) scas pop (bad) mov cmp stos int3 lock das add mov pop cmpsb mov adc das addb test pop (bad) cltd push jnp add mov sub push cmp fimull or daa adcb fs pop jmp lcall inc push pop sub cmpl xor mov xchg jp imul sub popa pop mov nop je mov jg and jno push add push in cmp test xor fwait sub mov cmp daa std mov xor ret and push xchg mov pop in jbe dec xchg ret mov imul arpl ret lods pop pop xchg xchg sarb adc mov and cld lret xor sbb inc sbb and daa cmpb mov out icebp dec push test es inc test idivb dec adc push ficom push test testb mov cmp xchg or sub sub in jp popfw add jbe icebp jecxz,pn mov or pop cltd mov cmp nop js movsb xchg mov sbb cli xchg push in cmp or stc push sub xchg (bad) sarb sbb and pop dec out mov cmp ret dec and cmp xchg mov adc dec cmp cmp in movsl insb and inc push sub dec mov (bad) adc mov jle int pop sub xchg mov out mov dec push adc and pushf daa adc add xchg out aas lock lea xor mov sbb mov mov insb dec pop popf test nop rorl jg scas fs test dec test rcll call and xchg xor (bad) dec pop fstpl add or add pop testl inc gs stos xor xor inc loopne clc inc xchg cmp test add xchg popa add leave push je or pop js xchg mov add pop xchg add in sbb jo fisubr popa mov test call enter mov cmp test cmpb fisub hlt inc jno xor cmp mov mov mov insl or adc cs call (bad) cmc pop mov cmp mov push or pop xchg xchg inc jo loope mov lock sbb mov xchg push inc add pop (bad) cli dec jo xchg mov js nop add es add cmp pop nop (bad) mov xchg fiaddl dec adc out lcall jbe icebp mov notl mov ja (bad) fistpll pop xchg xor addr16 mov add test cmp lcall dec add loopne pop pop cmp cmp pop adc mov jmp lods adc mov das out mov dec or enter and pop ss test gs js push jp pop mov inc enter loop add or clc xor lahf adcb push nop mov leave imul pop subb out xor lret popa nop cmc rol outsl test pusha in xchg lret aas dec int xor add outsl bound and insl adc daa fistpl inc jo (bad) add and lods bound pop xchg je movsb nop fildl in es inc push cltd mov adc sub sar jp cmp sbb int loope lcall out add imul cmpsb daa into aas das add mov pop inc lods rorb clc push pop mov sbb jae and mov lods dec add das jmp mov sub cmp dec xchg cld iret or dec pop mov mov xchg mov in jns ret adc inc push jge xchg pop out cmp fdivrp leave fwait popa xor inc dec test les pop sub icebp aad mov fimull gs adc and nop xchg sar movsl push dec push scas les cld inc add (bad) mov pop nop sbb or adc and push jge xchg mov adc adc fwait outsb or push jle mov pop xor add mov (bad) cwtl mov out popa shlb adc xchg push in push lahf (bad) addr16 rclb enter inc jno sbb mov (bad) stc ds lea inc adc sbb push pop lcall repz ss (bad) test and inc push nop cmp iret xor inc ret xchg push popa mov cs pop mov xchg xor push lahf xchg mov mov inc cs xor mov adc and lret movsl lcall cmp sbb push ljmp pop cmc mov out adc addb daa jmp fcmove inc jnp jmp inc adc push mov scas inc or add nop mov repnz scas lods daa pop sbb in inc and movsl and add push push out loopne dec xor mov push xor and hlt add and push push cmpsl push insb add test push mov cs mov pop icebp xchg jbe loopne mov pusha mov and jle ficomp pusha mov imul enter xor in adc xchg scas mov popf fdivl bound rcl sbb add or stc (bad) mov fisubr (bad) mov scas add jecxz js xchg mov sub (bad) in fbld sub sbb lahf or xor mov pop outsb popf push stos cmpsl inc jl mov mov mov (bad) (bad) and inc pop js mov (bad) mov out sbb add ss dec xchg add insb pop mov pop iret push xor mov sub ret jnp shrb out pusha aas fwait and pop mov pop pushf xchg jle dec and pmullw lcall mov inc sbb aaa sahf andl add mov mov add xor mov jle sbb sub (bad) inc adc mov inc and mov jmp fbld fwait les in (bad) or ljmp mulb insb push xor (bad) sti dec xlat dec add inc dec lahf cmpl rcrl jnp (bad) in popa jae sub in (bad) pop sti or mov dec fwait pusha or xchg icebp push cmpsb (bad) add popa xlat in (bad) push push pop pop add inc or mov scas sbb xchg repnz add mov push jo mov lods mov cmp xlat daa stos aam push outsb fnstsw das in mov addr16 fidiv sub add aad sarb mov lock in jp fsts test mov mov scas fnop testl sbb pop cmpsl aaa clc jne repnz in in std addb sub add pop out fldenv mov pusha imul shrb add popa popf sbb js je in or cmp jg repnz mov insl ror push out xor and xlat inc push std pop add subb inc push or lds inc dec dec lcall jb inc and xchg mov gs fisubr add sub push push stos mov adc jp or aas imul cmpsb xor (bad) xchg and dec out add jecxz mov aaa xchg jo repnz pop pusha jns cmc push mov sub andb inc nop dec push lods imul daa cmp jp out cwtl jo xchg inc jg rol andl adc imul pushw jle jno imul in ss repnz push push js rorb pop popa out xchg mov mov adc adcb out add rcr pop jmp pop das inc sbb test mov mov das cmp or jle dec mov mov sbb leave and daa dec cwtl xlat add inc es (bad) (bad) jmp js cmp sarl sahf adc mov cs push pop xlat es loopne cmp push adc cwtl xor push xlat int imul mov test aad scas mov movsl fsubs daa adc push (bad) clc xchg fnstenv cltd pop dec mov jns pop jl push pusha lret add ds jbe in ds lahf test mov pusha stos xor cld pusha je mov sarb lret cmp xor cltd loop stc pop mov adc movsb test xchg aad inc mov popf sbb je inc sub cmp fucomi xchg jb and mov pusha shrl jge inc pop sti ret cltd push mov jae inc xor stos les jecxz das sub pop lcall mov shl add jb fisttp fisubrl std mov test pop popf mov mov ljmp clc mov xchg jp fs fidiv lahf sub mov shl mov push mov mov and mov pop sti (bad) jo xchg xchg gs je bound in aas and stos jmp add mov or enter pop mov or push add or sub in mov pop leave andl mul inc jmp mov loopne inc cltd cmpl hlt and push popa notl xor scas add sub dec aad add (bad) xorb test mov popl lret das sbb cmc sub dec xchg out dec fldl incb xchg dec push lods push js push int iret sar (bad) xor add (bad) mov cld adc mov (bad) test add gs xchg mov cmpb test ja jmp enter add mov cmp mov ret sub sbb das add stc jge mov pop int lret imul mov std stos fnstenv pop pop sbb pop mov insl loopne mov add adc cmpsb xchg pop popa mov test insb adc mov sbb cwtl push mov scas mov and into in add jne adc inc add loope sub xchg rcrb pop inc lock rcrl jle or mov push cmpsb jmp inc xor dec jne call mov in cs dec cs add imul xor jmp jp xor stos fistpl mov sub cwtl push sub sub or jnp jbe push pop cmp stc inc cld iret fwait rclb dec push cmpsb adc enter xor and pop push test out add imulb je dec roll adc and sub jge or jp and outsl popa dec add xlat aam cmc aaa add push cmpsb jne adc lahf loope sti push (bad) repnz shll je fs and push sub mulb hlt push cmpsb sub pop xor dec in lods sarl adc incl dec mov jne mov mov mov push pop cld out js pop push fmul in dec pop idivl push out loopne mov add jo cmp pop dec (bad) pop push mov mov pop push adc lea hlt pop adc fildll push out jg dec dec cwtl (bad) gs add lret pop add and (bad) js std inc ljmp cmp push add fst pop iret mov jecxz inc mov nop movsl popf cmc pop dec pop mov roll dec (bad) fnstsw imul mov cmovne (bad) rorb or retw bound enter fidivrl jle test add push stos (bad) xchg inc cmp std fldl xchg insb fidivr cmpsb sar sub and btr lret xchg mov stc je insb jp inc sub xchg sub mov ja push and adc and inc and lea repz sub push adc sub pop dec dec pop cmc mov inc adc test and inc cmp add (bad) mov mov sub push sub mov cmp inc sub mov cmp cmpsb mov inc pop add dec je mov jecxz sub stos test pop adc mov (bad) pop (bad) and add xlat push xor sti xor jbe xchg cmpsb or pop orb push xor mov negb mov (bad) pop jne icebp adc stc int3 mov std dec push xor push loop (bad) into js add inc cwtl sbb popf sub fbstp subb addr16 lcall cwtl push add mov mov mov adc gs adc add add into jg adc jb xor dec loopne divb cld fcomps lock pop popf adc pop inc mov pop test xchg les jp dec mov fnstenv popa mov adc or xchg faddl adc imul pop push push mov std cmp push cld xchg jp in cmp into test mov mov je and sti inc rorl scas dec ljmp dec fistpll xchg nop push cltd jb jae jnp jno sbb jo inc and cmc pop push inc fmul push (bad) in push nop nop add mov mov cmp nop mov push mov in scas xor mov loopne xor dec xor mov adc jnp test xchg dec sub lds dec shrb sub xchg push and xor and test (bad) daa dec pop leave das jp mov sub cli cli sub jp mov inc dec adcb fisubrl add cmp fildll mov sar loope mov mov (bad) jle jmp ds jg inc inc pop adc mov mov jo lea (bad) cmp xor xchg fucom es pusha mov popa push cli (bad) shrb cmp xchg decb adc fwait pushl aam rcr icebp sub mov mov pusha outsl into or inc rcrl or pop movsb or pop adcl movsw dec pusha mov adc xor arpl ds or sarl scas js xchg mov sahf pusha repz scas xchg jo cld pop movsl (bad) movsb daa xor and std popf clc mov add mov push cmp pop das add xchg inc or xchg inc xchg movsb mov xchg pop imul and fmuls test inc mov xchg or pusha scas sub and sub mov cvttps2pi inc lahf pop push cmp stos loope mov sbb (bad) outsl mov repz fcomps adc shrb xchg lds or or addb xchg cwtl and stos fmuls (bad) xchg xor call adc xchg fiadd sti add inc inc pop pushf test or test movsb lahf xchg jmp push pop mov pushf repz push jbe loopne cs js xchg dec pop push out fisubl (bad) imul in mov imul pop fs add icebp dec push cmp push add lret and xor cwtl add and xor adc adc pop cld inc adc and sbb and data16 ds data16 mov stos das lock xchg repz jns sbb (bad) pop ret push and jl (bad) hlt xchg inc adc ss jae add cmp mov pushf sbb cmp rcrl icebp mov in (bad) test popl mov pop leave outsb in xchg (bad) add xchg movzwl mov loopne dec or sub jmp fwait cmp pop pop push cmp ljmp fisub add sarb insb aas sar or push mov xchg cli repz outsb (bad) leave loop jns cltd pusha fdivrs and popa mov xor pop adc mov das sub sbb xchg xor push push jno xchg (bad) add mov popl mov and fcmovnu xchg stos add repz sbb les push pop inc jne sbb pop inc popa jbe fimull loope sub lea mov dec addr16 jp and dec imul xor adcl lea loope imul mov ficom fstpl mov subl pop stc mov je dec jae xor popf popa (bad) or push stc daa add jbe imul pop add pop inc lock dec sub adc fnstenv or incl sbb out push outsb mov (bad) xchg fsub xor jmp cltd jb pop loope call dec add lahf cmp cs adc orl mov loop cld jmp pushf dec and push or loope jle dec sub outsl and test fwait adc adc aam push or push or (bad) or mov scas (bad) mov shl call pop cmp out aad push out aam xchg leave push sub mov stos and push jo mov add into pop leave add imul fisubr mov dec inc dec mov sbbb ret or imul push pop add mov aad daa scas xchg push add push jg xor mov push dec lds xchg xor jle test in fxch jnp cmpsl clc push mov adc mov sub and (bad) add fisttpl xor icebp adc lcall lcall and rcll pop sub repnz push loopne rclb inc xor jbe or inc jp adc add mov jmp lret stos (bad) bound adc out fmul fs (bad) xchg sbb jmp and sbb jne test xchg iret sub lods in adcb rcrl mov xchg dec repnz cmp (bad) mov push add pop not add popa sub (bad) or ja sbb imul mov int3 xchg nop add in xchg and add inc sahf pop or pop or mov hlt or mov les or pop repz popa incl mov xor sarb xchg rclb push and mov jle (bad) push sbb or mov js jnp js sub jle outsl (bad) cltd add inc stc jle imul push fneni(8087 add mov add jl pop push xor jge cwtl mov add mov mov lahf add andb loopne dec (bad) notl sbb in xchg out jbe arpl mov fist subl mov pop pop lds (bad) mov (bad) dec or xor fwait dec lcall bnd and xchg adc das xor jge aaa xchg pusha mov xchg scas dec lds sarl aad adc sbbb lret mov repz pop test repz lods mov dec push lret mov gs out xor mov aad fcoms sbb aam (bad) adc cmp hlt lea fsubl xchg inc in mov pop rclb dec into rdtsc sub xor add sbb inc xor jmp mov pop sbb pop fs nop cmpsb ja mov (bad) jbe,pt imul pop mov pusha iret paddd in jne (bad) fsubrl cmp mov jl pop (bad) xchg xchg inc mov mov xchg jle outsb icebp cmpb jmp xor xlat mov movups dec sub push flds add cwtd mov push jmp mov stc xor ljmp add (bad) xor pop pop loope repnz mov lahf ret xlat dec xor lock sbb add dec mov mov out insl sub pop cs dec push fs xchg and idivb adc add mov out flds inc enter imulb in fcmovb rcll shrb mov jle jbe xchg jle repnz into cmp in sub hlt and and and das and daa (bad) lahf fldl test dec cmpsb movsl pop sub inc dec mov add cli je (bad) imull fsubrs xchg mov mov mov add push out or and mov jmp push cli cmp in push imul fs incl sbb leave (bad) xor push rorl rcrb sbb test sub and mov int gs sub aaa xchg add leave or stos out add xchg fs dec pop mov test xchg or rcrb add cld (bad) jae xchg bound push or or add pop sub or repz call addr16 sbb (bad) movsb mov out jge ret jae into call sbb adc in ds (bad) mov out fist xor shrb mov inc mov adcl mov movsl dec ret fwait pop and xorl divb add daa jns icebp cmp sbb insl inc jne add in fmull mov sar lgs dec (bad) dec and pop xchg loope imul mov sub lcall jbe mov aas mov das lods fdivrl push outsl or push or jl adc clc mov ret jl xchg mov (bad) rclb std add mov mov sbb push out xor out loop cmpl mov pop ficom sbb sahf adc cmp repnz and std fisttpl inc add push xchg gs push les cmpsl and add dec adc add in adcl loopne add pop loop add dec add push mov sti push lahf pop mov fiadd fs cltd add sub test adc jg pop xor jecxz mov mov popf les push cmp or mov add fnstenv jb stc push xor add add xchg out sbb dec push pop mov inc mov pop loopne xchg mov stos out das or ret add add mov fstps loop dec test fidivr xorl daa cmp push mov sbb test loope dec (bad) push xor ljmp mov or es loope inc xchg push xor and jo mov or adc push fxam movsl repnz les leave mov lcall mov cs mov adc add xchg mov or xorb pop mov gs pushl leave pop nop test stos sub fnop xchg add mov mov jo test stos loop test cwtl aam xor int mov ficompl pop jle aad push aas adc test out mov jnp sub call test shrl imul pop adc xlat es add jmp add cmpl enter or cmp nop sub xchg out push lods push mov mov mov out insb adc lods push jg pop shufps inc mov (bad) fnsave sub std sub clc pop sub hlt inc imul jmp xchg mov mov cmp push push cwtd mov mov add test xchg jbe cwtl (bad) cmc jns xchg insb inc pop mov mov mov jmp mov adc push popa push inc insb mov pop pop adc sbb add pushf xor xor inc mov mov sub xchg xor mov push movsl fs aas mov add and inc outsb mov mov sub push add push and xchg popa scas int in xchg mov outsb hlt add xor jnp js (bad) dec cmp test out in outsl jp aas adc in add sti ds xor adc adc sti push xor in dec movsl enter sbb xor cmp mov pop shr adc scas fist sbb mov xor sub nop test leave sub cld mov lods setle repz mov mulb push (bad) adc cli adc cmp pop pop mul ljmp push adc daa ljmp pusha (bad) mov dec out add lcall push mov fidivl sbbl mov mov fimul lret push (bad) xchg xchg test aam or daa jge in jne xchg ja or dec imul (bad) call and and jne jb insb stc push div mov mov bound or xchg mov ljmp cmp push mov loope test testl jle xchg insl gs cmpsb decb jne mov dec mov mov mov or lods fs test aam lods push (bad) pushf or arpl ror gs sbb out add fmuls and pop cmpsb cli dec lahf jb lock push xor lds ret mov rol xchg outsl insl daa shrl mov ljmp jp aad inc push mov jno and hlt adc outsb fldt into pop inc xchg or sbb pop cld inc leave fsubrl (bad) pop sub lar scas lods aad ds jp pusha mov cmp ss adc popa mov loopne adc pop out pop push (bad) stc lahf jl pusha fiaddl movsl aaa jmp mov fs mov (bad) xchg pop int3 cmpsl loop aad je sbb push js pop jge fisub jbe jg aad (bad) fistpll lea mov fs out movsb fnsave fistl pop mov mov add sub (bad) xchg lock mov je lods xchg clc add cld mov mov ret jnp adc arpl scas cwtl cmp mov inc jg aad mov in movsl es mov inc adcb sub (bad) cmp sahf or and sub add sub test ljmp inc xchg mov and fs sub insl push call mov sbb js mov push push add cmp mov jb sub imul sub push and jno mov mov iret lret imul xor cmc push sub insb insl jge add inc push in stos fisub enter xchg lock cld cli xor dec and (bad) dec adc cmpsb aas negl xchg lcall mov lea mov rcl or add imul add dec jno push sub dec mov addr16 lahf mov adc jle mov lods int3 pop negl mov negl push xchg push mov aam je jl xchg mov rcrl mov fsubl xchg (bad) sbb mov popa ja sarl jle mov pop inc jo test add and dec outsb pop add sub addr16 in orl and fcompl sbb pop inc (bad) pop mov cs call cmp rorl sbb andb and and sub sub jp add out xchg or clc mov sbb sub adc iret fadd mov pop js dec push mov fistpl subb mov cmp mov leave sbb test sti xorl sar xor arpl and clc sub push push iret push adc or sub sbb fbstp dec outsl icebp arpl lock mov and and add push clc arpl outsl add cmp push hlt push pop rcr sbb dec lods add lea lret inc dec mov pusha popa stc mov cmp dec leave dec mov sub or iret movzwl scas fld cs pop jmp adc inc mov add sbb sub dec add pop sub imull jbe jns xchg push cld scas je lcall mov loopne call jp and out fidiv leave mov dec add pop scas adc out mov mov in push and outsb repnz dec mov pop cmp jecxz mov hlt lea jp jbe mov fwait dec mov leave pop (bad) add std pop test mov mov mov inc cmp adc xlat and test and (bad) jno and rcll insb adc (bad) cmc std pop imul dec test mov stos cmpsb pop add shrb cmpsl xor jecxz jmp xor xor loopne pusha add mov xchg jbe lds cmp lods sbb mov ucomiss hlt cwtl andl nop inc rcrl adc xchg sub sbb jle push stos int loop mov (bad) daa pop in mov insl jne lds adc mov add lods es scas daa fistp movl call jmp mov sub notb cmpsb ficoml lods adc daa push mov push fiadd pusha (bad) pusha lock add pop insb adc (bad) nop idivl mov inc pop lods or stos add push dec (bad) mov pop nop bound sbb pop ss and mov lods clc sub aam xchg rcrl sbb in scas imul cli ret leave and adcl cmpsl and dec cmp inc or push ljmp mov insb add popa mov add (bad) nop stos int3 add cwtl pop aas mov pushf iret mov cmpsb pusha sarb push mov das mov (bad) arpl nop mov hlt push push adc inc mov fsubrs cld fwait xorl out dec mov push cmp xor in and popf add mov xor repz inc and nop (bad) stc cmp push cmpsl push shll mov push jl (bad) dec jge mov movsl ds in scas xor scas and (bad) in xchg add (bad) mov aad push adc or scas loope pop fsubs mov jbe mov sbb dec lock xchg fsubrl jmp jg cmp ja ja push int3 lahf pop pop ljmp scas and inc push sbb bound jo enter jo xchg jle lret push xlat inc mov push orb je dec loop adc cmp mov xor adc xor mov mov dec xor mov call (bad) or mov pop sbb jp popa sar pop xchg inc cld cli cltd inc jp jnp sub mov fs test mov (bad) mov or mov iret jno jo adc leave sbbb sti xlat inc xor in xchg push aam lock aam push and movsl push push aam adc fstl jge mov pusha mov sbb je adc repnz test jmp aaa dec xor push in test mov lret sarl lcall push adc push inc sub sbb jecxz test ds or jl (bad) ljmp add movsb adc dec sahf pop lock mov js add jmp mov outsb in popl and and add adc inc mov clc ss mov mov mov ret dec lock aas ret and add mov pusha xchg jecxz roll sub movsb jns inc std fcoml jmp pop hlt iret and out add cmp xor jo fistpl inc ljmp icebp jnp (bad) mov (bad) icebp pop mov or sub addb mov pop xor pop mov fidivl dec (bad) mov push pop pop mov mov loop sbb and (bad) hlt sbb std repnz add mov dec je dec mov lds mov movsl in jp sbb push movsb cmp push adcb and mov pop mov dec stos adc fildll repnz adc push or mov mov mov sub in ret int sbb popf mov xchg dec cpuid pusha jl imul ds pop cmp popl pop es nop xor xor mov insl ja aam (bad) les es lcall sub nop xor lcall mov mov pushf mov push jbe push iret adc sbb stos cmp in push hlt aad rorb mov outsl pop lcall pop les lret call movsl mov es pop lea push scas xchg inc mov nop lea mov cwtl xor popf (bad) insb and test fs jmp sub out or lret pop xchg sbb inc mov mov push lds mov xchg aas push roll pop lcall xor mov mov sti cmpsl mov adc rcr (bad) xor jb test xchg add fisubrl cmc cld pop jmp and in je enter push sub dec in sub mov jg or mulb aad mov mov in arpl xchg pop add cmc popa scas out mov mov dec and mov xchg fdecstp cmp leave in xchg repnz xchg lret adc in es or and jg jne fbld cmp jno pop mov int3 hlt scas ja mov adc ficom test and push add outsb fwait mov pop scas or mov fiadd add pop or daa push das jb pop (bad) ljmp das inc or cmp or pop pop out jg int cmp lock mov inc shr pop pop push mov popa scas xchg sahf sarl cltd dec sti call add xchg pop outsl adc sbb mov (bad) jp add lods push pop jb in lret cli and scas pop mov pusha cmp push mov add or cltd repnz pop mov mov pop lret dec or loop sbbl repnz int3 cwtl lahf jnp add mov xor std ret dec ret inc test sub fcomi imul dec cmp fcmovu cmp add push pop imul xlat and iret cmpsl cmp jle pop (bad) pmulhuw sbb pop push jae mov out es pop mov pop mov cmpsl mov scas popa cmp dec in cwtl leave push (bad) cmp mov push out clc xchg repz call jne insb ret adc push repnz mov xchg (bad) or test xchg mov pop sub (bad) movsb jb mov mov cmp scas xchg or sbb add rcll popa jge outsb (bad) mov xlat push ret push push mov int3 push jo xchg int3 adc push sub or cmpsb add and outsb scas pop jl lret les adc test fsubrs fbstp in sub (bad) cs jmp fcmovne (bad) mov arpl sub out push aas stos mov jg scas outsb jg dec xchg pop nop enter push fsubrs inc jne add aaa decb push pop lea addl jge ficomp pop xor jmp or sbb add mov sbb outsl (bad) notl pop push mov add add push mov sbb (bad) ljmp inc pop add add push sub inc imul pop inc das cmc sbb push je inc sub cmpsb inc push pop dec push mov fstl and into mov sarb xor pop bound add push (bad) pop or sub cmpsb jnp or out inc mov enter bound add inc sbbb push add sub out push sbb and inc fisubl lret insb dec sahf push jmp adc xlat sub das rcrl arpl mov gs push adc es (bad) fcompl xor xor imul (bad) cmc das stos ja clc xor pop out repnz pop lods int xor push adc ja loopne,pt mov subl or imul imul jmp fisttpll and push out sbb xchg rorl sub jbe sub mov add movsl sbb inc pop (bad) cmc dec lret and stos loopne mov or sub pop sbb hlt xchg push xchg cmp mov lret dec rclb int3 (bad) push adc test ret cli or mov inc add jbe jmp dec mov lea add mull (bad) jno cmpsb or arpl pop add or sbb sbb clc add andl dec push mov mov (bad) sub add addr16 arpl daa mov fs dec xorl (bad) jmp pop add gs sub push sti shr cwtl enter loop add les and pop shrl sbb jge or stos mov stos mov pop dec mov mov cld add imul push pop test adc stc mull or adc mov jecxz mov xchg testl (bad) (bad) sti enter clc mov jbe movsl lret xor mov xor push loop sbb rcrb iret in in xor aad xchg inc jmp pusha js pop cli jno add fildll subl arpl or sub pop dec jne push jmp push push lea add das incb ffreep and jnp test sub cmp (bad) outsl mov pop rolb cs dec add pop sbb fldenv and movsb inc or add push xchg jne sti jb orl insl cs mov xor push and jmp aam inc aam pop daa push pop and sub adc and cwtl (bad) dec iret insb add sbbb push imul adc fsts sahf leave pop add xor mov maskmovq add rclb xor addr16 rorl movb xor adc fisttpll push (bad) (bad) lds xor mov push lods aam sub xchg xor popa mov daa out sbb testl adc rorl mov loope mov adc sarb shl rolb push mov add mov jp adc xor cli imull push movsl and pop sbb push push mov cmp xor mov push jnp and out imul pop push lret dec adc stc inc mov push movsb or lods sbbl inc pop pushf in add arpl jae aam mov jmp cmp adc push std rcll cmpl stc jmp push je jmp (bad) mov cs adcl and add addr16 push pop mov enter ficom sub out (bad) cli fs pop add jo or outsb stos or push pop and inc inc imul arpl mov cmp repz iret jmp decl outsb pop sub and jmp dec push add mov lea icebp imul push dec and push mov adc jno add jnp and mov xlat cmp (bad) mov cld inc cmpsl adc test mov and jns mov mov push adc sub out cmp cmp outsb adc jmp jnp push mov and pop xchg lds push pop adc inc mov data16 and jo es sbb xchg cmp sbb sbb sub mov jge std cwtl or jae adc sbb jmp adc cmovns push jmp adc adc push push push adc adc dec loop xor pop ror and dec jae icebp jmp push movsb (bad) lods add shl popa pop inc mov mov scas dec jl hlt jnp mov xchg sbb movb or sub and adc inc arpl or ret out test sbb add adc mov rcrl jmp mov fcmovnbe xchg adc xlat sub addr16 (bad) xor dec pop add andl push loop or mov pop push or sbb and pop pop sub mov hlt test lret int pop adc add loope aaa inc pop cwtl push (bad) fisttpll jmp dec insb rcrl (bad) push out push test dec jmp cmpsl cmp dec sub push mov and adc push sub or (bad) cmp dec nop pop xchg mull mov jne and add lods adc js movl popf push cmp sub jnp jnp (bad) dec push sbb sub divb sub push jne jne mov leave adc push fwait sahf sbb repz pop adc test mov jmp les and (bad) shr ficompl (bad) lock mov sub mov add adc sbb or cs sub inc or (bad) sti xchg sub icebp add mov cmp pop mov jne add stos test sbb mulb push sar fs mov add jge and (bad) xlat (bad) cmpsl popa sub jmp (bad) xchg ja pop icebp pop mov xchg int add sbb pop imul xchg jmp call pop jbe push mov ljmp pop js ds xchg insl je pop and fildll push pop pop inc or xor loopne push lea (bad) es adc pusha loop inc pusha or add push push pop pop sub adc (bad) enter stos (bad) bt call dec sub mov adc mov sbb (bad) cmpb mov inc jmp out jne add adc jae ds incb jg or es add add std inc pop imul add fsubr shrb pop and (bad) stos daa adc adc sbb cmp push and test pop sub mov and pop dec pop pop test mov push mov fsubs lock add cmp mov fwait test jge xor xchg (bad) pminsw call xor lock flds push push inc sub pop lcall pop shr push adc ja hlt jnp into and arpl push jo sbb pop jmp add push jl jo pop xchg pop xchg add jmp daa add iret adc into loopne adc fsubrl adcb and stos sbb dec into orb push add pop repz fldt loopne loopne push pop push aas jo stc mov add movsl adc (bad) lahf and stos pop loop add in jecxz mov out lock mov mov js push cmc nop adc inc aas int push adc outsb stos lods push in out cmp dec pushf outsb push jg mov rcrb adc fdivrl add inc inc inc iret inc sbb xor add out or loope (bad) mov xor cmpsl adc sbb jns add dec jbe jge out jl loope,pt xchg repnz push jb out mov push add loope xor lea out pop cmp dec add push or mov insb cmc push adc test add aam sti into inc or add sub nop add xor in fidiv adc add jae add push test jle or inc mov test repnz push push mov sbb rolb add test dec nop (bad) mov scas outsl mov popa add sbb add push into jle inc fimull jne jne rcll dec mov adc and jmp and lods jbe pop lret add jle sahf and inc add adc (bad) mov dec jnp add push cmpl add repz iret stos pop dec pop add flds clc sbb loope lods fild inc inc cmpl adc inc pop insb mov in mov and add loopne enter sbb xor xchg pop sbb shrb das or push adc and pusha psubw in xor jo sbb in and jge pop mov cltd or adc jecxz cs mov mov lds lret fisubr cmp add rorb push in pop fcomi (bad) stos pusha std iret inc movl in stos mov and jo pop add xor add mov sahf push mov stos in inc and mov jp inc mov inc add data16 sbb frndint xlat pop scas stos fbld add clc push jl les dec add mov inc hlt push adc scas cld xor into add xor or loopne mov (bad) cli nop inc sti xchg jg outsl sbb xor retw cmpps fimull push cmpsl pop inc and pop dec rol mov mov subl sbb mov jp fild mov fsubs out ret leave mov mov jmp vmread pop xchg mov (bad) rolb push xchg popf fnsave and cmp mov in add sarb jmp jne sbb pushf rcll jns mov or (bad) out pop pusha clc xchg or cmp jae outsl pop xlat and xchg (bad) fldcw inc cmp arpl cld xor sarl movsb inc mov xchg popf xchg loop add in test mov insb addr16 cli (bad) xor in dec pop pusha add arpl scas sub sbb mov xchg add mov cltd pop sbb jne cmpsl and jo,pn add andb inc pop jbe and mov test imul jl xor xchg cmp hlt clc fildl lea imul mov add scas call outsb icebp mov nop lret xor (bad) push pop push inc movl fdivrs aam pop add pop add push js fcomps xor pop add lret nop jb mov sbb mov insl ffreep sub and add sbb or push mov andb into (bad) mov add and aaa sub addb (bad) jo push lds jmp mov call aaa xor fnstenv cli push push outsl das sub decb xor push sbb pop roll arpl shrb mov or cmp (bad) pusha lods stos ds mov ret lret pushf xchg fwait add int3 sbb jne call or inc sahf pop or sarb dec je sbb inc add (bad) pop fucomp cli jp and add sbb sbb lods cwtl cmc xchg mov mov pusha or jmp mov sub sbb sub push and rclb pshufw add push adc cwtl push cmp inc out std ret icebp movsl xchg add sbb push stc push nop push clc mov push arpl orl mov sub add jbe fwait pop movsb push pop imul add arpl mov sub mov lret push icebp cmpxchg cmp lods push cmp imul cld pusha dec in cmp mov pop jge add (bad) jnp pusha stos inc in inc cli sub mov mov xchg montmul cmpsb add ljmp push (bad) jmp test cs daa mov (bad) aaa jecxz xor adc sbb inc or stos daa add cltd xchg xchg mov hlt inc loopne pusha inc cmp ret mov sbb jecxz lret jg int3 add sbb ret sbb and cmp adc mov add mov in repnz mov dec mov add test pop add sti cmp imul out cmpsw (bad) (bad) dec xor std xor enter scas lods hlt roll mov push jmp leave jo push cmc push or movsl jp in test pop call cld sbb add jo add sarb xchg inc (bad) or add xchg dec cmp out inc sub add push rcr adc pusha pop in add cmp jns push popa stos arpl pop es xchg jl test rorl cmp movl add mov lea lods imul mov std out add addb xor (bad) mov and add dec jne jno stos push inc dec add cmp xchg pop xor add in sbb add hlt mov stc add jecxz mov dec jnp add sbb (bad) mov pop insl cmpsb test test icebp mov pop cs popa xchg orb jmp cmp fimull cwtl pop clc icebp pushf lcall xchg (bad) aaa push and push push jmp sbb add xor (bad) enter jp loope ret jmp ret mov pop mov aad add cli mov inc hlt shr jge adc imul adc sbb fldz mov and mov jmp cmp je add stos imul jae push jbe stc rorb mov jb or rcr sub jnp popf loopne mov loopne add test iret sbb cltd mov xchg aam xchg mov xchg sbb out bound fs or pop sbb mov lea out xchg rcll add dec popf or mov stc (bad) negb adc in fild push mov push test lcall fadds jno jo add daa out cltd (bad) and jecxz aam test call push out das mov int3 jle xchg andl mov jmp cwtl icebp push cmpsb jo xor xchg mov fdivs pusha push push add xor and out pushf test (bad) jp imul ror out add lret mov lcall or cmp cmp adc fistpll pop sbb sub add mov add scas addr16 (bad) (bad) popf sbbb sub pop sbb cld sub and fldl add cli sbb out call add mov dec cwtl aaa sub adc pop insl add iret add jp push add leave lock sub xor insl mov imul xchg and mov pop add mov adc lock dec or loope stos push add test cmp adc jecxz aas sbb add aaa fild push jle dec daa jne imul and mov pop dec jo in movsb and fs mov subl add mov rcr push add fdivr mov or cmp push out mov push shr ja cmc scas jg test cmp add or cmp push add into sbb pop adc subb dec add fdivs mov into or ficom mov (bad) pop xchg pop or stos es mov out int and push mov dec adc popl pop nop dec dec xchg aad xor xchg add sbb cli jecxz (bad) aam add sub add xor sarb cmpb aam mov orb inc jnp add lds add roll jo enter aam dec daa mov fsubrl in mov loope fcompl and out lret les out and pop mov in ret (bad) jb roll mov int xchg push js push push mov mov cwtl fstpt and fildl or in add popf fsubs and lea in sbbl out stos mov in std data16 adc cmp mov jl add sti shr imul out daa inc movsl cld repz aaa xchg fnstsw add repnz enter stos mov flds mov mov push das pop nop pop inc push (bad) arpl pop gs dec and pop ret sbb mov test and fildl sbb nop xor mov insb cmp pop adc sbb cmp in mov pop push arpl popa int3 or and dec ss enter xchg pop push daa repz add in add in fwait or sub test mov mov loope dec fdivs gs cld fldl pop movsl add or and pop inc adcl jno pushl sbb call mov or in pop or pop jp daa and pusha in xorl mov cmp dec in imul lahf adc adc add ficompl ja,pt or add or xor inc add aas mov add cmp inc iret add jg dec jecxz rolb jb les stos (bad) jno jne fisubrl rolb rcll cli or push mov js add sbb sti cmp je pop dec adc sub adc cmp rclb inc jno loope cmp mov add loop push push xor dec add lea pusha je adc rolb iret cmpsl subb push aas and xor mov fcoml mov cmpsl rclb popf add push pushf pop stos pop mov add subl adcl mov or in cltd (bad) in (bad) dec cmp inc xor cwtl dec and add test push or or in lock xor ficomp sahf jb push xor aam addl (bad) movsl or rorb cmp into roll adc adc cmp inc mov pop inc sahf inc jnp orl add dec loopne pop inc inc and clc or test jo add adc loopne (bad) pop add gs and loopne scas xchg and xor ja mov fsubrl xor rclb add lea out leave (bad) aaa shrl add mov xchg push add xchg rolb movsb jb mov and add iret out mov cmp lea jb test mov pop aaa jge dec (bad) or fnsave push mov ja gs call add and add aaa test xor pusha aad add add insl jl nop push sub cmpsb add xchg jl mov inc jl and negb adc int cmpsl int3 or shlb jecxz aad add imul (bad) loopne and je add mov dec out mov call and mov adc or out jns and clc add push dec add call cwtl or xor mov pop add out mov into add adc sub mov negb and divb stc push mov dec mov jmp xor mov dec add xchg mov xor add outsl xor mov and fisubl repnz add push xchg (bad) int pushf add jmp hlt out js jne sub in and fcompl xor outsl loopne mov add or mov xchg lcall sub adc out out popa add push arpl sbb in pop mov (bad) xor mov dec add add loopne cmp fdivl insb mov js inc and cmp push cmp jmp adc (bad) jo sub cld xchg pop movl sub add cmp add adc arpl or adc mov pop ret ficoml inc insl lds jge xchg xchg cmp sub js push mov xor mov xchg mov xor sbb mov sub mov fsubr in pop ficom syscall mov push sbb stc sub arpl xlat ljmp push and in adcb add mov ret sub call xchg ds hlt mov dec sarb push in push lods les cmp insb negl cmp stc push add movsl (bad) sub sbb add xchg sub and or sarl pop jle daa add pop sbb stos and fistpll inc add xchg cli nop mov pop add in xor and add sbb clc add test and ss jae out xchg jle out stos test insb add popf popa mov xor mov xor pop leave addb ret pop sbb xor xchg add clc mov pusha stc or add jl xor icebp or scas push int3 pop mov mov or arpl movsb adc jnp xor adc stc pusha and ss add loop std outsb rcll mov rorb and adc and sub mov lock ret and add mov dec hlt decb jg xchg dec andb jo add pop inc nop and and fs dec sub and lods xorl int3 mov add mov jns or mov sub inc add inc sbb jbe and and fwait mov mov add jno mov or lods hlt add aad out mov mov int3 dec dec pop adc std push aas test sub pusha adc insl movb out xor cmp mov mov add (bad) push push add cli xorb adc cmpsb add test adc push sbb and mov xor inc movsb add and and push and lcall xchg sub add pop in addr16 mov jne inc push mov sub add add inc jle lea clc call sub inc mov push subb bound xor clc and adc mov and push pop dec sbb scas sub or sub add push pushf xchg adc mov jecxz add ljmp cwtl daa (bad) in lds (bad) xchg ret sbb cwtl fsts mov hlt cli cmpsb xchg test fmull xchg sbb movsl push (bad) rcl in mov js add aaa xor dec fcmovnu jb and cld imul imul in jmp mov lods lcall mov xor popa xor add faddl scas enter mov and pop fcoml sub inc sbb adc and jo mov and int nop adc adc dec mov call adc js aam jo test add mov call ret (bad) std adc adc jnp iret push stos (bad) jp mov xor fidiv (bad) mov jo dec push arpl add loopne xor scas lods xchg dec or sti sub mov inc jl fs adc js jle sub fidivrl dec adc push or xor add aam popf and add and mov add hlt jno rolb add les add or add pop rclb das xchg adc arpl jne cmp iret into call jb (bad) hlt cs sub cmpsl or sar in mov mov adcb test mov call dec jp mov push dec ret loope out push mov fdiv iret cmpsl mov cs and mov jnp jmp and mov xor lods mov xchg movsb xchg lods inc add lea rol out nop call cmc cs cmpl fsubl mov pop lods add fwait sti mov add xchg cld add outsl cmc insl test daa adc or mov int3 add pop pop call add add stos add jecxz cwtl test inc les and outsl sub and mov xor and cs and test mov subl xor xor mov ficomp inc ja lret add (bad) fdivr outsb lret cmp aaa or int3 inc nop mov cltd test les inc aam adc and je ror leave call and test rcll or mov rcrb pusha jbe add push lret mov popa test push lahf mov pop (bad) inc aaa adc mov adc sti inc inc insb sub inc adc or xchg mov pusha imul push mov clc dec andb jl ficoml add popa mov movsb clc in imul sbb and mov and and roll pop call cmp mov push cwtl mov or test add jle mov mov mov sub jmp cmp add sub cmpsb sti call or shrb add adc ret call sbb nop adc and imul adc ja add in ss or push int3 xor push andb and xchg mov jns or pop les push (bad) jne jo arpl xor adc popa popa adc cwtl xor inc jno and xchg add inc rolb dec push inc sbb enter hlt popf dec add jno lea aaa add push mov xor (bad) movsl jl inc nop xchg arpl cld pop sub jl pop cltd inc cmp pop stc xchg mov add out and jne pop jp xchg add rclb cwtl insl and mov sbb cwtl lcall mov (bad) mov dec stc out popf loope adc sbb pop or leave hlt sub sbb lds adc dec jnp cmc (bad) jge stos pop in inc or data16 push cmpsl pop lea hlt pop nop fsubr mov and out mov aaa cs mov in mov add outsb mov adcb jae jl adc mov xchg adc shr mov andl xchg xchg dec test xor fs sub dec push subb dec iret dec pop push mov mov add mov (bad) mov sbb test sub add jecxz andb daa (bad) jb insb add or (bad) clc add push mov adc fs cmc faddl mov push add lock std and pop nop mov jae or xchg mov fildl stos mov les in cli jbe sub enter xchg push pusha insl into sbb mov out and cmpsl cmp sbb and scas inc cld push cmpsb lret sub push les hlt jge ret mov lret mov lods out mov xchg lock xor call cld test test ljmp add inc je add dec push mov mov or sbb xor (bad) fsubrl add int sti adc inc mov mov shlb fidiv dec cmp push add adc and xor sub cmp inc mov mov dec inc mov xchg stos xchg pushf ret leave js adc sbb jle add or add sbb cmp add inc and mov cli dec add mov mov sbbl or fcompl add (bad) push insb push push add and jo adc (bad) sbbl mov add or subb sbb and (bad) xor dec fcompl je mov push sub in ja in add cwtl orb push das pop inc shlb push add jno hlt cmp xchg and js push movsb in (bad) mov sbb inc pop and gs jo inc sub jnp (bad) mov add ljmp lea cmp or je sbb cmp push mov add lock rolb mov repz jmp mov movsb sub jmp and or inc es sub (bad) aaa cmp xor icebp mov pop add punpckhbw dec xchg test add xchg add inc (bad) or jno sub cmpsb movsb test mov lds stos or pop fildll mov sub stos sahf sti (bad) stc add nop faddl addr16 popf jp push or lahf fs dec sub cmpsl inc inc jns aam jl dec adc lods sub sub sub sub popa or adc mov (bad) jle add test leave aas jp add int3 add mov add rclb lret mov mov mov and test outsl dec jo notb and mov xchg xchg add cld xchg mov jns mov add mov sbb push insb test mov sub cmp into je popf push add insl xor sub jno fcomp scas repz add aaa (bad) mov mov xchg add movsl mov or sahf and inc sahf xor fs add adc aam add xchg out ja enter and adc fadd mov sbb fcmove sub dec or push loope das jae and inc add and iret hlt pop mov jg mov lods cwtl rorb (bad) xchg push in adcb jne daa mov mov sub mov push inc movsb in mov lock xchg jl sub xlat jae shl inc adc arpl jl mov lods mov cmp aad in add nop mov mov pop jns loopne add xlat cmpsb je xorl movsb or or adc sub nop mov add cmc adc outsb stc imul jns and jecxz push (bad) mov pop outsb hlt in or xor xchg (bad) mov or sub jp add jbe (bad) push inc add jno sbb dec in int inc pop xor repz ja pop mov loopne call pusha xchg inc bound push in cltd repnz dec cwtl mov cmp pop push jbe add mov pop and cmc mov call pop ja sub outsl test adcl pop std sti add add jg and add xchg cmp add cmp out pop sub sub sbb add and popa rcll xchg in pushf rolb jbe std arpl push into movsl pop cmp js (bad) add sbb pop xor sti int mov pop sub stos out mov dec sbb add sbb test fisub jb add loope add in jnp pop or pop rcrb test and jle pop sub adc in scas (bad) jp (bad) sarb inc pop cltd xor cli lock pop xor pusha in mov dec xchg arpl pop adc add popf push jo pusha fldenv mov lods xchg or push and mov clc push xchg pop jge ljmp addr16 add nop imul and ret in lock adc pop fmul stos test insl push in in shlb je,pt aam sub into mov cltd ror add or mov and xchg mov outsb cmp aam nop adc sub jl inc inc (bad) fcoms call (bad) aas (bad) pop sub test xchg xchg cld cmp gs cli mov fstpt loopne stos adc insb shl and (bad) test adc push test xor pop add shll pop sub inc cmp mov rorb hlt push aas outsl cmp stos cld lock inc jb pusha insb adc adc add lods and mov mov xchg rolb xor push in movsl or and mov (bad) mov inc mov add pusha add pop cli jnp add sub roll loope inc xchg xor rcrb adc xchg pop push and addb mov and sub xchg scas mov pushf xor xchg xorb jle sub adc es adc mov jp push mov adc or (bad) pop sub adc push push xor mov mov dec add arpl add pop xor call and popf or mov mov xlat jecxz rorb xchg dec jmp cmp sbb movsb notb shll sarb stc repnz pusha and test mov dec sub sub adc stos push xchg addb xchg (bad) jno bound mov cmpsl add xor adc inc xchg dec xchg mov xchg adc sbb adc mov adc cwtl and in es add pop add xor and icebp add xorb jp ret push jo (bad) fidivr nop loopne subb scas pop sub pop mov push xchg sbb aaa (bad) int3 test sub (bad) mov nop or outsb aad sbb arpl pop mov mov aam cltd sub dec xchg xchg pop jge gs push sub popf in jno sub popa add jl xchg mov dec sbb pop jle inc in xchg sub cwtl push add lret nop in pop mov jp nop push add inc test cmp or iret fistpll ret lods bound imulb enter jle add inc nop aad add cmc cmp lods loopne daa fcmovb sbb cld xor push imul (bad) lea data16 xchg add out mov pusha hlt or push mov sahf icebp xchg sbb scas pop mov dec (bad) cmpsl adc gs les sbb dec call outsl cmp fcompl xor jl push nop jo dec inc pop (bad) ja (bad) imul and mov jo dec stos stc rclb leave (bad) rcrl mov mov bound fisubr pop sub inc push mov jle push cwtl dec sub mov and lds and cwtl fmuls xchg push leave dec fadds cmpl ret pop test sbb push cmp adc adc scas jo and sarb ficomp pop sahf sbb dec pusha jo mov jb rcll lock jmp inc add adc jae imulb add stos enter pop fs arpl jg sub mov not nop or pop shll xor add mov dec mov xor adc out pusha cwtl xchg andl ss add leave dec sub sub pop add (bad) pusha sbb push adc bound dec loopne sbb mov notb add mov stos fcoms add ret in xor lret sarb mov inc cmp jl movsb bound orb mov add hlt pop inc inc cs and or add sbb mul js push rorb cli pusha pushf jmp add insb imul and aam push xchg sbb add loop inc std jne iret (bad) mov dec sbb fidiv lds std pop and in clc sti add adc sahf pop leave repnz dec cmc call lods and dec jmp cwtl movsl cltd loopne orl xchg rolb lock js ss jge and arpl xchg cwtl mov cwtl pop mov pop mov sbb xlat mov fcoml sub jl int3 mov int3 adcb (bad) rolb pop adc lods nop cwtl mov sub loop movsl movsb xchg in cmc je pop (bad) int3 aas mov xchg mov jo jmp inc and (bad) pusha (bad) push repz je icebp add addb jnp mov mov dec inc call cwtl js daa mov push add sbb adc fdivrl notb loopne fdivrp and insb nop adc andb xchg or int and xchg or nop (bad) lods or in add test push outsl out mov or dec mov sub jge test push psubb inc fstps xchg in fcoms adc dec sub jo outsb ret outsl adc cmp test mov rcll mov add neg pusha hlt pop cli push cmc adc adc pop pusha add sbb lret (bad) aaa addr16 dec pushf jmp pop xchg sub mov pop outsl inc adc push gs int3 sub mov outsb mov xor hlt pusha pop rorl addb pop divb imul cltd add in sub test (bad) add rcll adc sub imul in divb inc popa push sbb push mov xchg rclb les js inc es xchg mov aam adc pop repz out in and sub cwtl mov fsubrs push test ret popa sub call in stos fbstp sub fidivl push jnp pop clc cmp (bad) testb pop dec pop dec xchg outsl dec clc inc push imul scas loopne pop pop mov imul adc lret loopne sbb cmp sub or inc inc rcrb fild jb nop je xchg daa adc adc add (bad) xchg add dec leave inc xor nop sbbb mov fdivp leave cwtl xor sub pcmpeqb jmp shrl mov les clc cmp loopne cli ret mov fsubs aaa push test js add sbb in and nop fadd js push mov imul sub dec pop push or push mov or jecxz sbb lea push test nop jl push pop cli popa inc or out cs mov mov jnp test ret inc sub pop sbb jp (bad) test bound or mov push xchg or mov cs in inc mov xchg xor inc pop sbb jge sarb and jne pushf pop loopne pop popf repz xchg enter add incl repnz jg push out mov scas cs sbb in or test lds jl ret (bad) pop ljmp pop and cmp stos ss arpl or jb aad out lock adc cli in inc sbb xchg loopne add push subb rcr cmp sub inc xchg mov inc insb mov jl mov sub ds pop mov cmp pop and inc fmuls mov cmp jecxz lods test add or leave mov inc jno and and xchg stc insb cmp fwait in or es push and cmpsb stc leave dec or pushf hlt jnp or popa lock pop fs push test (bad) nop cmp add dec inc cli stos rcr dec jp push pop jl and enter add sub add bound je aas (bad) cld mov pop and roll and mov mov ljmp out lds les adc fnstcw dec jb cmp push cwtl and pusha inc xchg loop int3 pop pop dec xor sub add push in push cld inc push lods push leave sahf cld and add sub add jnp sbb out icebp xchg mov into xchg cmpl scas (bad) cmpsb insl add dec out jp scas lret push inc xchg jbe icebp dec push cmp mov ds mov pusha pop scas movsb pop fbld jb andb adc or fdivr pop xchg dec add mov cmp add rolb pushf fsubs stc mov pop sub sub test lods sarb ss mov inc lret dec sbb pop orb stc shl inc mov scas lock in push leave dec bound sbbl rolb aaa pop sub dec cmc sbb push in sahf dec mov movsb out jl mov outsl jl mov or mov inc shlb cmp test and (bad) call nop or hlt sub xchg add sahf pop cltd push fldl into (bad) inc pop push xchg (bad) xor mov daa mov ret add xchg dec pop call lcall add push sbb shrb sub in stos push leave xor jns cmp adc push xchg cmp sbb andb or add lock nop ljmp mov pushf add (bad) or xchg movsb add push xor or and in movsl mov pop fnsave shlb or adcw enter xchg aaa data16 imull mov push clc sti sub dec cmp mov mov pop lods cli dec shrl fstl jb mov ret jg test mov jle int3 js scas iret repz les or push xor pusha ret rcrb or adc orb sbb add movsl ss sbb mov movsb mov push nop add (bad) mov sbb das pop pop cmpsb subl xorb ss push mov mov and jae mov scas xchg mov sbbb sbb inc test add movsl sbb clc mov xchg out mov and nop mov mov je add mov idivl ret cmp mov (bad) cmp adc fs and sbb decl (bad) mov jg inc fistpll mov dec dec and dec mov fstl xchg or (bad) daa lret shrb rolb stc jge lea jp jno dec cwtl aam inc (bad) xchg sbb mov mov ror xchg adc orb sbb inc mov add movsl mov jne and pop add inc pop sub push mov lock mov add add adc dec mov mov add lods inc lret adc push subb lods adc jnp test sahf cmp sub dec nop pusha lock jg sbb cltd icebp cmp cmp (bad) dec ljmp cmpsl (bad) mov inc mov mov pop adc loopne mov pop popa sbb push hlt jecxz mov push (bad) hlt aas mov popf or jmp in test sub addl and adc adc mov cmp add or rol pop push movsb aad jmp cmp inc out jns fildl add add jmp add repz or lock mov or (bad) leave adc fs mov jge add loope out push push mov jecxz in sbbb or insb mov or mov xchg mov mov stc pop inc cwtl and xor sbb loop int3 es inc bound pop lods add mov sbb add mov mov ljmp add sbb jmp nop jne out outsl addr16 in fwait inc jl mov dec sbb mov fdivl mov imul (bad) dec lods aam push inc adc sahf movl pop jnp inc rcr or andl movsl jne ljmp ds adc hlt pusha push jns scas pop xlat stc dec push push jne nop enter add test pushf adc pop add mov clc cwtl xchg cmp cmp push mov fs lcall push movsl imul sub lods add nop mov mov inc test add int3 adc sbb jge testl sub lods sbb cmp (bad) or mov push cmp sub dec inc push inc cmp pop and inc pop xchg inc or adc jns and push push adc cmp int3 in add inc mov or or aas pushf or push in jnp push js xor cmp mov xlat sub jmp jns sbb mov (bad) xor adc ljmp pop jbe or nop call fdivrl xchg mov je js add ljmp pop mov data16 out xor pushf ljmp shlb test or into sub sbb rcl dec (bad) jns sbb lock xorb jg and or xchg lea xchg lcall adc fmuls mov xor add mov inc push mov xor mov inc fsubrp or mov mov inc aaa pop lret dec push push cmp js xor jg cltd mov inc and jl dec dec cld or test rol cwtl dec or inc repz or test adc pop mov mov inc xor push sub cwtl xor mov xorb xor xor push adc repz dec test fisubr push or jle adc push add sub jl pop nop clc cmp adc push mov jns les in push sbb cwtl loopne pop push push (bad) jmp pop sahf (bad) sub mov fmuls lock out add out mov js pop imul inc or addr16 outsb cmp mov mov push jne (bad) iret shlb gs ds dec icebp ja out and js cmc xor pop xorl test cmp cld push or pop or and (bad) mov xor int3 adc aaa add leave cmp gs arpl lods push call jg jle xchg add sbb adc and pop and xor add mov or pushf lcall mov sbb add pop inc adc adc mov fs out add inc data16 lock sub imul jns adc xor sahf add jb aaa adc push push cmpsb sub dec in insb popa cmp (bad) sahf cmp add xor adc xchg pop mov sbb fist jnp outsb xchg or mov xchg scas add fsubrs or pop in mov cltd push ror imulb test mov xor pop pop rclb adc hlt pop cmp inc jg xchg insb mov pushf (bad) cmp and (bad) nop les or cmpsb cmc pop add adc ja dec push push ret xchg and bound xor add (bad) mov int3 xchg sbb lods arpl rcr (bad) leave xchg orl xor xor dec test jo call sbb jno pushf or aam add shrl jnp das inc add mov dec rol or adc sti sub jle and add and xchg mov adc jnp or and inc out loop in lock cvtpi2ps jle inc adc or xor pop rcll mov push xor lcall out add negb ja aas cmp sti add cmp mov (bad) mov push inc insb or add outsb sub jg xchg xchg add or adc imul fsubs jp (bad) mov sub jns add inc addr16 iret in jg pushf movsb xor dec xchg (bad) dec (bad) jb imul cmp mov add dec lods sub imul adc repnz hlt das lret sar mov inc push arpl jg aaa push fadds in pusha icebp mov cmpsb or or xchg sub lret xor shrb js cmpl (bad) add movsl or in add jo or adc mov add jns aaa (bad) outsb loopne push add mov cmp fist js clc cltd push dec push fsubs int lock xchg rorb ja cmpsl adc mov xchg add arpl rcll adc (bad) or sub push pop and dec loopne mov je sub adc stos push mov or movsb (bad) rcrb fisttpll adcl popa jg jo push xchg adc sub sahf sub and leave insb add push stc xchg outsl jg insl add add or sbbl mov and add (bad) push or add or js enter dec scas sbb or imul or nop js fs sub les or mov inc add adc int3 dec pop push add outsl xor or pusha or xor jecxz add push jmp insl lret dec test xor sbb fistl pop sub cmp fldenv mov jg outsl repz pop pusha stc int inc or xchg ss xchg adc nop adc pop cmp incl sub jb xorl adc xor icebp adc or scas enter pop xor sbb adc add (bad) cmp or andl xor sub das xchg stc cmpl enter or mov push inc cltd mov xlat dec mov psubw or movsb mov nop add fbld outsb xchg and xor sbb mov in enter cmp hlt leave mov push sub insb add dec shrb jg dec cld jl and jb inc sub fsub popa aam jne pop pusha xor sti pop dec test pop xor (bad) je movsl add adc stc push pop and leave jg popa sub jo push and dec les loopne hlt sahf add out lret out ljmp lock inc jl fnsave and mov lcall adc mov out add test mov jle add jecxz icebp mov add dec wbinvd outsl mov sub pop fchs leave cmp lret push movsb inc push rolb pop dec mov loope outsb pushw cmpsl or sbb mov rcrl add jge int xor movsl mov pusha mov add sarl add jne push add cmpb movsb int3 jle out add arpl out shrl and inc push int3 (bad) outsb fcoms pop (bad) test paddsb push and xor in xchg ds dec out or loop movsb loopne cwtl inc ret stc fstp lock add jbe xchg clc js mov jo xchg rolb imul mov sahf jg xchg lcall dec push push or in cmp fnstenv icebp xchg or ds loope push add mov sbb and inc adc fs call ja or movsb add shlb fdivl (bad) dec xchg rolb add mov adc dec pop sub ret xchg pop mov dec adc or push or aas sbb jo mov pop sub mov push scas lcall js jmp sub inc ja xor add dec jecxz adc add pushw fild js insb inc add fwait (bad) shll loop mov adc pop sub movsb mov inc outsl cs lods sbb dec add pop or sub pop mov adc push or add cltd nop out imul push add mov xchg pushf push loop adcb cld jno pushf mov or inc test xor aam xchg sbb movsb push pop add inc aaa subl add or mov xor mov mov push daa inc sbb je orb dec mov cltd rorl xchg pushl (bad) scas lds jo adc jmp add rcrl pop aas sbb in cmpsl pop clc jo sbb push scas mov loopne dec fwait inc mov add (bad) in inc dec sub cmpsl stc sahf push jg popa outsl nop mov mov and sar jno js sahf js pop jg push cmp or or aas add push daa or sarl int3 call mov sbbb jle sub data16 mov imul ficompl lock into jp cmpsb add xchg xor adc and and sbb addl xchg mov xchg xor pop xchg add mov loopne and or enter inc jle mov cmp add and lds test cmp dec mov addr16 (bad) rcl sub xchg sub loope xor mov jmp or rol pop jle pop xchg cmp lahf add cld lret or fadds mov inc rol fcomp in pusha movsb fadds jecxz rorb or push or add pop cmp jg lcall dec mov xlat jae sarb jecxz pop cmp cli jnp add adc xor outsl int3 push and mov ja lcall cmpl notb dec sarb xchg mov andb inc xor jo push xorb or xor popf pusha inc inc xchg and add xor push ds mov add inc popa xchg fimull cmpsl dec jns fdivl mov flds mov add mov cli add inc addr16 adc xchg jb sub mul push push jge jnp or (bad) xchg cmp andb fnsave push pop subl push pop jp mov out imulb inc shl pop ja sarl mov orb mov add andb lods add add mov lea inc add mov mov and lret jmp fisub and or mov in xor mov add push out or add (bad) fmuls pop clc inc test andb pop fwait mov int3 adc mov stos aam or sub xchg pusha and out add movsb xchg xchg jl mov out mov push adc push add dec sar cmpsl addr16 cmpps stos sahf cmp and (bad) aas add out push dec bound (bad) sbb jbe jns pop mov nop and mov andb in lock jnp mov (bad) pop add cmp nop or outsl rorl mov roll xchg rolb ja cli pop mov xchg add or inc mov loopne (bad) xchg and aas insb add jp inc mov push dec stos cmp into rorb sbb push mov push dec push jb dec mov cwtl cmc and idivb js (bad) lahf test out mov sar dec pop push jae jl mov mov or scas xor sbb hlt stos out fistpll add gs mov repnz mov dec mov xchg inc or aad out add inc inc psrad lea stos call cwtl add add xor pop mov data16 or fs sub je (bad) arpl js call mov and cmp or arpl ds insl mov aam test sbb (bad) jp int3 adc addl xor (bad) mov jecxz or sbb sub push les and xor jnp cmp or scas test xlat or clc pop pop jge in dec push mov es pop (bad) jno sub enter ret repnz enter xlat add outsl ja cmpsl sahf xor add js fcomp lock jecxz jle xchg jae cwtl jnp add fwait jp jne loopne and and add xchg rclb add mov adc std add add pop int3 adcl inc clc test ljmp in pop dec xchg inc adc and lahf adc int in pop mov negb add push jo or dec add pop mov xchg pop xor add push out xchg es aas cmpsb push add inc lods add jns mov idivl add sti mov add lods leave pop xchg mov adc jne or sbb addr16 (bad) out cmp add jmp inc or pop adc sbbb mov test stos aaa arpl iret adc imul sub sbb xchg add jmp sub mov dec and incl clc movsl inc mov outsb push rcll cmp test nop inc (bad) mov int3 in add mov imul dec sub sbb bound xchg pop jno xor shlb das shlb add repz adc xchg fiaddl enter jne add cmp mov dec out add push addb test xchg dec ds sbbb inc add bound in xchg ds andl mov das add mov cwtl enter dec lcall sub imul xor adc inc lea test mov add dec insb out jo mov (bad) dec je or stc pop push jne sub sub cmp arpl fstps (bad) fsts loope jp or out sub and daa add jns fistl cmc xor (bad) iret es jg sbb inc (bad) lret add or pop dec (bad) xchg and stos add clc cmpsb xchg lret dec add rcr push add jne stos lods adcb pop (bad) add push and mov fsts leave int3 mov in cltd pop out push push dec cmp pop clc add incl or add aas inc sbb sub dec add pop outsl adc and in lods shlb lds cmp mov pop int mov shrl test inc sahf inc lret mov jo rcrb cmpb or push aaa nop add aad and in std inc or and sub or das clc and jl or mov movsb pop or stos cmpb fcomps add jge add enter scas nop sti add add push and mov testb in mov in pop and add jp call add in or notl (bad) nop or loopne push stos test sti popa add sub lcall jne movsb mov push dec sub jbe push add movsb (bad) xor addr16 push xchg fs mov test insl pop or jns test imul mov int xor mov (bad) fldl cmp jne incl test mov je add fisttpl pop mov push and jle add add sbb xor sub add xor cltd mov pop cmp mov fs xor pop into orb add imul add insb cmpsl push pop pop push ret cld or clc jno ljmp (bad) ror (bad) out arpl jbe sahf cmpl jb mov test cwtl movsl add and dec stc add aas into pop std pusha hlt popf add in jle aaa dec and cmp (bad) cld add into add ljmp fwait stos sub insl add mov add cmp cmp loop movsl add ja push cmp lar orl add in and inc mov fprem mov icebp int pop push push sub jle jne cs popa or (bad) enter das add jno cld mov dec aaa loopne push add pop push and add enter and adc data16 mov lock lret sar adc dec jbe push (bad) mov dec loope add pop outsl add cli dec sub add mov push or js les test pop pop inc xchg add sub or ss daa sub stc lock xorl jg (bad) cs jb lods add std aaa cmp pop dec roll lret dec mov jo jno test les sbb add add popa test cmpsb mov jne add lds mov fldt cmp inc jne ljmp rcl add fwait stc xchg negb pop es lds pop mov add and and out add cmp xor aam mov add popf out ret cmp loop cmp add cmpsb dec sub icebp xor aad push and mov std les cmp mov pop mov add add out in sub add pop xchg int jne or or jnp sbb xchg xstore-rng cmpsl ret loopne out imul sbb call inc adcb inc bound sub pushf pop cmp notl roll jl dec enter dec fimul inc jp mov pushf lods movsl call or sbb add test dec sub inc add pop jnp adcb pop into out (bad) mov add jae jecxz and mov jle add dec loopne add daa stc fstps mov dec xchg add dec test sbb add loope jle test dec or outsl push stos push call pop sbb push or add jo ljmp addr16 cld pop es (bad) cmp stc add sub adcb jmp and addl push inc xchg jo cmp clc subb pop sub movsl add pop repnz inc fs mov sbb das pop fldl loop pop cs ja mov pop sbbl insb jo add lods sbb push pop repnz pop outsb push adc adc add adc test fildl imul xor stc les xor add inc and mov push jge ds mov xor sub out dec adcb dec js mov imul pushf popa add into in in inc xchg add adc cmp (bad) sbb sub imul inc push mov add or mov fs pop add fisttpl das popa std enter enter (bad) jecxz ss fwait add outsb mov je lods mov stos and gs add shrl ja icebp adc push jp les pusha xchg push add mov add (bad) ficoml ja test cmp and decb xchg pop sub add jmp pop and (bad) into rol adc cwtl mov sub in pop mov add out mov lahf pcmpgtd dec dec enter add mov mov loopne dec sub add test mov loopne (bad) push sub mov popf add (bad) xor push shrb nop and fldt and jecxz ror aas add test out (bad) in mov push add bound xchg xorl stos mov shlb dec incb pop (bad) cmpb add jae outsl rcr jp add mov pop pop add les jle mov xchg jbe out sbb or mov arpl jb mov jp xor cwtl inc int3 imul xchg popw pushf add sbb jb jnp sub pop imulb (bad) roll int3 or sbb loope pusha call loopne fistp jl add je outsl movb xchg lods pop mov repnz addr16 ret pusha fadd sbb aam sub jae std pop popa div adc dec xor pop and add aaa push sub outsl cld add jg (bad) cmp jecxz inc sbb sbb test and hlt fdivp (bad) mov mov scas add pushf out call add xor inc jb mov mov mov les mov clc ss mov test jle add aaa xor jo and lcall jle mov adc iret add xchg lret out or add loope cld inc mov fcmovu (bad) (bad) add mov pop mov xlat (bad) or inc mov jo and push add add xor xor fnstsw sbb adc fsub xor fisttpl sbb pop inc insl (bad) jno mov mov (bad) push inc outsb daa stc or add loopne xchg enter sbb in mov negl add sbbl stos roll (bad) insl add pop jo add jg sbb and xor fistpll sahf jb cmp decl ds sub (bad) adc inc cmpsb nop ss add jno pop (bad) mov pop jnp in push xchg mov push add pop add inc shr push pop cmp adc sub andb fwait xor xchg pop testb stc aas bound (bad) mov es cli sbb imul lcall addr16 insb pop pop stos and dec mov pop nop xchg scas loopne mov fcomip inc or mov jnp push or iret add (bad) lods repz ss inc fstp (bad) and pop dec xchg insb add dec push mov pushf jge lock addb or ret push add adc push out add jecxz scas call mov fwait aas adc test (bad) leave rol inc mov adc mov insb fisttp sub xchg cld add sub pop jno repz add mov aam xchg test add push sub out lahf js aas hlt lods orl (bad) nop cwtl add ror xchg jne mov add adc jnp mov or rcrb cli imul cs shrb fstpt add xchg outsl les das mov int3 xor mov mov movsb inc mov or das push fstpt add fcoms outsl dec sub xlat mov push mov insb or popf mov outsb or xchg pop mov bswap les in add sti jne sbb add push cmc fldt ret aam (bad) or test push out lds add cmp mov and insl inc movb in test add sbbl add int lock xchg cs lret xor test lods aad pop pop movsl mov cmp or jns clc and cwtl xor addl jno lods cltd stc rolb add jne int3 jnp gs push xor into loope pop add inc inc fs lret outsb or inc cmp out cmp adc fincstp adc jo clc dec rorb push xchg and pop xor insb sub rolb ret aas loope add add sar dec xor adc idivb adc (bad) aas loop add push push dec fiadd (bad) jmp push lea leave mov jle addl sbb xchg adc inc ja ret push push pop int xor adc popf leave rorl rep sub jl sub mov add pushf jo (bad) stos pop cmp imul adc add xchg stos jo jmp jp in inc nop mulb mov mov fldl outsb inc xchg sub pop mov xlat sub dec aas movsl xchg subb outsl push fwait add push (bad) lock dec cmp out add fstps enter mov mov push mov fwait add or mov fcomi xchg add (bad) cmpsl add imul mov add cmp (bad) dec aaa es add add mov in push mov cmp push stos fisttp (bad) and enter ja sti rolb lahf (bad) mov mov add pop push shrb inc and pusha iret jb add push sti sbb outsb mov es sub popa and loopne jne and lock and jmp mov inc or push adc push mov (bad) aam pushl push stos fadds gs dec push add mov incl or and repz cwtl stos add xor and int lock add jo (bad) out je inc add xor fs mov in aas xchg add mov adc lds loope jmp iret pop xor dec jns cmpb sbb jnp (bad) push in add adc push cwtl in clc mov in push imul mov inc add xor add pop push push test mov enter jg push std add mov cli into pushf adc add cmp shll and pop ljmp into add lods test or js cwtl aaa sub xchg add and push scas adc add es idiv cmp nop and je push and xchg mov or and fs fidivrl jg sti cltd mov ljmp clc push cmp mov add loope arpl push jle and mov mov and in jae movl test pushf add sub xor (bad) mov icebp andb outsl stc rolb xchg jno pop sub mov pop mov stos add loop sbb sarl mov out push std mov pop sahf pop xchg les in lea xchg jo imul and xchg addb add testb mov mull jne add xchg outsl and nop cmp inc dec add dec pop jmp into addb mov mov je mov aam push xchg (bad) dec movsb shlb enter js pop xor cmp cld pushl in ret mov add je out mov mov jo rcr std repz pop add jmp or inc or xchg xor add jo sub mov push bound and addb dec add stc pop mov jp push mov rcr add in lods add dec mov pop mov add mov jmp add sbb inc add xlat jae add adc lods loopne cpuid push xor cmc mov outsl lcall xor inc add sti imul add insb xchg xchg rorb add lds add and mov xor inc lret loopne cmpsb lods pop lock add pop (bad) and arpl ljmp cli xchg add mov push ret inc push cli movsb jo rcr cmp addr16 mov jmp pop and popf sbb adc ret sbb cmp aad sub mov (bad) hlt push jne add ja gs lcall or and push mov pusha loop xchg dec fadds fildl test dec aad loope stos movsl into rorb shlb xchg (bad) ja add pop jnp in aaa rcrb add push lods cs lcall int3 je pop push push (bad) adc adc xor cwtl test dec dec push test and cmp add ds xor cmpsl jno xor pop rolb test scas dec xor scas xchg fisttpl incl nop add pop xchg in xchg sarl aas cmp or fild and push inc mov sub test cli cmp sbb sub lods add stc js,pt lock and or mov pop ficoml mov dec sahf and das push mov scas add orl push (bad) jl in popf jb fist inc cmp sbb add (bad) dec hlt repz sbb je cwtl mov popf fchs mov arpl add or repnz iret pop lds lret add push popa in add sub leave or mov sub mov mov rolb xchg or dec fs ljmp popa addr16 cmp ljmp cmp mov pop mov sarl jmp cmp jne sbb mov ljmp (bad) clc inc add lds movsl adc mov jle int fisttpll add adc add sbb fisubl sbb out into (bad) xchg dec enter test test push icebp bound xor add push mov popa add shr dec enter js icebp mov adc pop imulb jb test lcall bnd mov cmpsb or iret cmpsl cltd imul push add clc jmp add jp sub dec jbe add out data16 int3 cmc add js cmp cld push jg and mov ss lcall mov jne xchg jmp nop and push xor mov repnz pop enterw mov sbb sti out lcall sub push divl cli xchg pop cmp out (bad) mov adc nop int3 fistpl add add xor mov bound push andl and ss lds clc (bad) aad aaa cltd push jmp sub adc add pop pop es pusha repnz xchg cmp adc call and pop shrb or or add jmp dec mov or lods (bad) sbb pop jle daa cmp cmp add loope mov cmp nop pusha jne add push test push xor pop cmp jge into inc fucomip pop flds out repz adc sbb push jbe xor add mov std pop mov hlt xor dec and adc add iret mov add adc or cmp dec add es pop test call jns cmp mov xchg jle cmp add in addr16 lret cmp mov aad and fcomps jne and xor loopne dec inc ret pusha adc jmp cwtl cli push das dec rolb jno and lods xchg jmp fwait sub rorb xor add popf inc int3 adc xchg sbb js,pt adc mov add push and addr16 call xchg push fs sub enter imul add add sbb dec jecxz mov cltd jno jnp dec mov movsb cmpb pop das xor mov ss mov pusha jno movsl ds add test sbb pop in cmpsl hlt mov pop mov repnz inc stos movsb dec add or sub add pusha or scas (bad) pusha add mov pop add dec outsb lods out sbb into es xchg movl mov sub mov and sub shrb aaa test jne fucomi adc sbb sbb add std and cs loopne insb orl mov imul jp fcoms adc loop add (bad) xor out and add rcrb rcl jnp jb add insl ret sub inc cmp imul mov call push sbb cwtl and pushf icebp into (bad) push push mov lock test (bad) repnz add lahf adc push inc adc dec ret ret pop aas or fcompp pop je hlt out jg cmp add push mov in arpl sub inc mov inc mov ds call es push add jns mov addb loop mov mov lock mov xor dec pop jnp cmp inc cmpsl fwait ret mov add adc push insl sarl or adc push jmp lret adc sub jns pop arpl xor cmpsl xor jbe dec out loopne xor sub jae adc and (bad) mov dec xor xchg pusha adc in add pop mov bound push jno mov clc jg leave sub and daa cmovl jne mov mov push orb test cmpsb push mov lret (bad) xlat or stos jl add outsl into sbb cmp sbbb jmp mov pusha dec inc aad push sub pop add lods xchg dec mov dec add rcl push sub pop mov jo cmpsb mov jmp dec mov add dec mov cmp divb add movsb and xor stos ficom je,pn sub lret mov jle pop add subl add data16 js (bad) (bad) dec das push into ss cmp add pop jmp adc insl dec cmc shrl test cmpsb mov rcr cli ljmp sub add fistl cli add dec jecxz push aad fstpl movsb adc cmp jnp repz fsts xchg jnp add and pop test xchg xchg mov das add xchg fiadd loopne mov int add cld mov sub dec mov jmp testb and cli dec pop clc cmove data16 add adc xor cmp add scas push in pop inc loopne int addr16 add lods rcl cmc pop and mov mov outsl aam imul add adc ret xor cmp popf daa jle ret inc shrb outsl mov iret sub add loop ffree int sbb call cwtl add cmpsl cmp jmp int3 fcmovnbe add or testl pop and data16 mov cltd xchg out add call push or cmpsb je pop popa jne pop (bad) dec jns push add (bad) scas push test sbb out outsl cwtl sbb mov push cmp (bad) add out hlt pop js xchg insb push nop daa xor sub mov jae stos cmpsb lret mov add adc mov fsubl xchg jg cmp mov arpl push mov add stc push mov add push jge mov jne jae add aaa sbb add jnp test sub lock mov mov imul pop and sbb fild outsl cld push sub xor repz push mov add push pop ljmp add inc pop mov adc mov and es or add xchg pop push mov sub add mov cmp (bad) dec jmp je adc out incb ja mov clc fs and cmp xchg lahf gs sbb mov mov push rcl add mov or scas sbb out (bad) mov imul cmp mov and pavgb jb jo shlb ret or ret jo les (bad) ljmp loopne mov adc inc xchg xchg nop xchg sub pop cwtl sbb nop dec inc pop push negb stc notl pop mov pop loop nop loop jmp rcll mov repz or movsl out add jmp jo sarb in mov add xor test lods sbb push add xchg adc (bad) test orl xchg fucomip sub pop mov push (bad) movswl lea lock test push nop cwtl pushf jg adc test add pop mov xor sub xor scas test sbb ret (bad) jbe fstp addl jle xor mov inc and rolb inc lods inc outsb pop ror ret sbb xor add or (bad) clc push xchg out mov fild gs or clc repz jns push and icebp out fldcw xor scas ret mov std cmp pop mov sbb jge xchg out sub lahf cmp ret movsb mov or addl movsb inc pop movsl nop cmp roll lret inc cmp sbb cmpb add push lsl stos sbb mov sbb fiaddl push movsl dec xor add ljmp inc pop outsb and (bad) loopne inc movl and mov rcrb sub adc rcrb scas call inc jle mov mov mov inc loope decl xchg in or or inc jno ds mov cwtl jl jl pop ret (bad) dec nop adc cld lods pop push jae add outsl mov inc mov (bad) addr16 xor cmpsb cltd dec xor cs nop es and add lret push (bad) adc mov sbb cli test add stc inc pushf inc jl xchg test mov jge dec lcall push out jb cltd test (bad) add ss sbb mov add jno stos push xchg scas mul add cmp lock cmpsl xor js (bad) xor pushf push loopne add mov lods inc and movsb jo sti and mov add mov ds imul add out or subl data16 loop loopne cmpsb mov adc adcl sub out fsubrs les add or xlat sbb mov pop xor clc lahf xchg xor int add push stos rclb outsb sbb clc xchg call fsubrl push ret into mov dec sbb sub jns mov test sahf lahf ret sbb shlb cmp shrb repz mov jo sbb lfs add add cmp sub fwait ja rcll or sub out jecxz push dec mov (bad) aaa ret adc inc out arpl rcrl xor cmp andl jbe push lds push pop aaa jne jno mov mov dec pusha insb aad pop or sbb (bad) sub cmpb imull std mov add clc dec push lods les cmp mov xchg jae sub aaa insb mov mov push dec popa jecxz test js xor icebp adc rolb push cli (bad) dec dec inc fmul fwait push pushf adc xor (bad) js xor rcr add subl mov dec movsb sbb push adc loopne leave into or enter pop mov mov sub sub dec xor push sub add pop and cltd ljmp hlt sbb mov imul mov or and (bad) fmull sbb mov xor lahf jecxz mov push cmpb fwait jl fs push adc mov cli xlat hlt xor test jbe cmp jo aas cmp mov or fmuls and inc sbb or or lret add lods inc pop adc pop jge mov js pinsrw out add jge xor test sbb sbb dec add xor dec add js jbe nop dec aaa mov shld add and fmull jns adc mov ret stos jecxz scas add jbe in adc test push cwtl popf out add insb mov mov sbb popa cmp sub fwait jnp adc push add jp push ffree jecxz arpl mov sub mov dec leave rol (bad) aaa adcb add mov loop mov xor jno in pop imul out mov loope inc and pop ja stos rorl push cli dec outsb fcoms (bad) jbe popa leave sub test ror push push scas cwtl mov fbld dec xor daa xchg fnstsw adc dec add add mov std stc aaa pusha and fwait ds xor repnz jmp cs daa lret add sbb push or and cli mov orb mov pop mov ret daa push scas inc mov cmp icebp arpl dec sub or mov push (bad) pop les aad je jmp or cmp or mov mov hlt les cld push aad adcb xchg insl dec clc dec mov dec (bad) or xor or xorb lret ja mov push dec add fwait push jp sbb and jge jno xorb xor add bound test jno clc inc push jae and jecxz mov fildll push in cmp in js mov cs inc sub dec mov adc sahf (bad) aam or xor jecxz mov les xchg pushf add push add insb es and or icebp adc cltd sbb jae outsb (bad) cltd mov out fildl xor pop aas nop inc mov and dec dec xchg xchg cmp xor notl subb fnstcw pop fwait push mov mov mov sub mov jns in jbe push cmp bound ja outsl lods xor and (bad) sub cs fs mov rcr ds pop mov in push call pop push mov mov into xchg cld fneni(8087 icebp and inc inc sahf xchg (bad) sar push (bad) push inc mov aad xchg and test mov add or or or mov jo cmpb cwtl mov pusha xchg and ja lds sbb jo mov lods add out popa sub mov push or and cmpsb mov pusha mov dec add jge push popa or ljmp cmp mov mov test mov pop jbe xchg enter aas shlb out lock cmp jge pop lahf addb xorl repz shl push add mov add cmpsl xchg je mov cmp loop arpl icebp shl je andb test enter xor scas test ja aam push mov mov pop mov add dec sub pop mov mov push mov xchg clc scas jmp jns push stos fcom jb in sbb sub fisttpll sub pop repnz and jle add out movsb nop dec mov into or add xchg sub push in jp jge and push lar sub cwtl add pusha mov ss maxps js loop nop test out fcompl mov rorl sbb dec or orb push clc rcrb add ret or sbb popf jl rcrb out push and jbe popa arpl inc dec loopne pop add jp sbb sub loopne popa and (bad) sbb idivl xchg and sbb popa popl fimull inc mov add sbb das cmpsb sub (bad) mov push sbb jmp out add xor and mov and dec mov cwtl and and pop dec in mov sbb aaa xchg xor iret xchg loopne cmp arpl cwtl les cmp pop push scas test add (bad) divl xor imul mov rorb leave mov loope lds ja sbb jne loopne rcrb fistl dec or xchg push dec push adc adc mov sarl add out jecxz dec inc cmp in frstor lock arpl loopne push xchg cmp and pop in nop rcll mov sub pushf dec or mov bswap mov push xacquire and je jo cmpsl push push lock lahf jmp (bad) mov adc mov outsl mov loop nop mov pop daa mov dec call jbe xlat fdivrl sub inc add xorl and bound pop pop xor adc pop imul fsubr add cltd in add adc add pop mov ja jo mov nop call jg aam pop jecxz mov rorb mov add push sar mov sar inc push mov mov testb add push fimull andl sbb test aaa xchg add push mov insl or in pop test push cwtl sbbb jmp sbb xchg rorl loop les xlat xor mov push mov sub dec adc add pushf add inc testb lods lahf pop sub dec adc or add adc cwtl push mov mov push xchg and pop mov inc enter mov jne mov xor or xor mov dec movsb orb mov push and js aas clc sbb fucomp test cmp dec sti mov (bad) in jbe imul dec out aam mov pusha mov les and mov insb js push lret loope sbb mov loopne (bad) (bad) test add mov inc pop or jecxz dec leave nop mov add push cwtl and out hlt or add lods add test sbb or jl mov xor imul pop dec pop mov cld pop outsb add pop jb dec jnp xorb push mov pop cld or or scas mov shlb jae adc aaa mov les data16 jecxz shl sahf pop lods pusha add push and fsubr testb mov add loope pop fsubp cmp jp mov jbe xor arpl cld adc fwait lods mov add aaa mov cmpsb mov jo,pn test (bad) or and dec push call pushf add jns into data16 mov test out pop in jbe inc aam hlt sub ds daa loopne shr fmuls insb aam cwtl lahf push sub ja pop push orl fs pop fs lods pop mov xor cmp ret or test dec imul push push arpl push mov push (bad) xor jns hlt push and xor lods insb (bad) lods outsb add push ja push test add add in mov popa outsl mov lret add aas hlt cmp dec push lahf add jae lods pusha imul or or fdivl movl push mov arpl push mov jne in das dec add popa pop subl les pop push mov sub pop mov rclb mov lahf pop adc ljmp loop dec sub pop sub adc lcall shl inc add add mov addl sar cmc pusha sti (bad) cmp popa aas sbb jae idivl (bad) sbb adc dec lea or mov add mov inc or add cs movsl pop test adc pop scas xchg add sbb mov enter les cmp dec mov jge fld in (bad) idivl push cmp adc jo adc pusha cmp jecxz mov lret mov add lods cltd sub pushf (bad) xor leavew leave (bad) pop cmpb scas outsb mov sbb mov mulb xchg mov inc add gs int3 or jns add or ret fwait mov cmp inc ja jle imul movb cmp add xor sub add mov cmp cmp push mov lea shrl fldcw lcall les add sub sarb bound inc jl stos xchg sbb mov cmp push or sbb test and adc scas inc sub andl std or cmp push rorb and frstor outsb out out imul popa int3 rorl mov lds mov or cmpsl cld add movl out test push dec out add ljmp sbb popf in add and sub adc ds add ret imul ret pop cmp popf sbb mov (bad) dec out xor push add mov and pop out add repnz fdivrl mov rorl sub add xchg xor in test out push hlt jbe mov inc add test cmp jg outsl mov add cld loope add add loope add fs or incb repnz loop add into add pop xchg in pop jp add xchg pop xchg xchg add fs ss outsb adc ret add xor in mov pop mov movsl xor fadds pop aaa pushf out loope ret (bad) jo pop or jmp jg,pn rcrb xorb or scas sbb lret repz add push mov sarb aas add sbb scas pusha (bad) jb dec fild std jae loopne jnp adc add fildl fwait cmp sub xor add (bad) and ljmp push cmp add jp stc out loop add les push clc add ja add cmpsl test jecxz (bad) mov cld and out mov int push pusha jno sub enter xchg dec jp and rolb int3 stos xchg add fstl pop cmp (bad) cmc lret xchg stos dec lock je push sbb push cwtl mov add and ljmp or fildl cmc scas lahf dec cmp mov pusha dec gs add xor push push pusha or dec xor outsb inc sbb int3 add nop adc iret aad outsb mov inc pusha rolb outsl rcrl pop in add aam lret mov in mov pop sub add cmc lods fwait insb imul inc push ret roll rorl jl or (bad) cmp jle sub xorl mov add adc cmp aas cmp data16 pop test adc enter sub dec xchg mov hlt ja fsub cli (bad) in addr16 mov mov ja idivl fucomp pop push dec sbb popa pushw sti add sub out add dec sub xor pop imul std pop movsl lods pop cli testl (bad) ljmp loopne xor jo ret cld add repnz rsqrtps xchg sbb pop insb xchg xor sti or add fnstsw xchg pushf jecxz (bad) cwtl add pusha push les repnz dec int loopne add in push xchg inc jp les cmp dec femms inc testl out inc sbb mov andb xor add add xchg fstpt fs mov inc repz xor out add xor mov mov mov inc in jb push mov loopne scas mov jo xchg dec cmp sbb std in mov mov int or or xchg adc test xor mov roll aad push in and mov jge sbb outsb test loopne (bad) cli bound add push mov pop movsb push or inc dec jge in add mov sub scas bnd pop sbb out ljmp cmp scas add ret lret inc stc xor mov scas mov inc jmp jg and push sbb cltd inc add inc dec aaa xlat mov rcl out jno add jne push inc inc pusha std push pop dec fldl cwtl icebp addb push add cmpsb imul jle or fdiv adcl addb sbb push or out pop inc nop cli adc xor mov mov lods pop push (bad) int rcrb or push lock and (bad) into dec in pop xchg sbb aam jge aas mov or pusha jmp push aas cmp std pop fidivr jo sub adc jle ds repnz xor sahf lock cmp inc sbb jmp leave data16 fwait xchg mov and inc ret fsubl test jecxz (bad) and add ja push and pop add cwtl pop scas in cmp xchg add call data16 out lahf xchg inc inc jbe and enter nop and es mov mov hlt pop push sbb cmpsb lret cwtl dec mov mov add jecxz cmp mov xchg cltd gs test jle ds pop xchg dec sarb loopne lods pop or cld test xchg push dec decb mov dec call jae les loopne (bad) jmp ss jb negb push mov pop int push popa mov leave push dec dec fwait call insl arpl cli add cmpsb mov ss add or fldenv add in add lods pop cs jp movsb incb add and or pop ja sub neg hlt and test or sbb and cltd loopne add cmpsl movsl hlt mov pop and dec xor xchg jns or sub or and jecxz jo add lret lea add fidivr add ret gs adcb adc and orb xor dec leave sub mov (bad) cld add add nop das inc jae cmp fbld pop jmp iret pusha sbb sti mov fwait (bad) (bad) xchg div pop mov imul cmp nop ds pop in fmull add test fcomp mov adc aam int3 lods or lret push cwtl stc add mov (bad) pop add sub rorb sbb xchg fadds pop test into lock push mov inc add xchg inc lret pop shrl clc rcrl adc jns bound add push add fdecstp sbb inc cwtl les cmpl inc push sub loope pop cltd add dec js add xchg loop add dec rcll mov out pop insl rolb mov call push cmp loopne cmp pop rcr mov sub lret add adc std add inc add fdivp inc sbb ficompl pop dec mov add sbb (bad) mov shrb nop jne add jge add push cmc adcb test lods inc xor sub lods mov mov or (bad) ljmp or insb mov push add add lds pop push int3 repz add mov add hlt mov mov int inc fdivrl mov addb cld push jmp xorl movups dec cwtl int push aam in xchg in sub (bad) aam insl icebp scas sbb dec jle adc or cmpsl cmp add fwait stos lret in sub xor andb or adc iret cli sub frstor std xor adc or out or push ss cmpl dec loop bswap add dec or mov sub rcrb adc roll add pop divb xor mov cwtl push and or cmpsb dec lea mov mov scas add add sub mov add pop stos push lods xchg loope add cmp ljmp ret xchg ss jns push aad xor in push jecxz cmpsb out cmp cld push cmp or dec cwtl (bad) in cltd lea sbb popa lock pop sahf out adc enter sbb pop adc add add icebp lea dec or and sbb mov jle add mov loop (bad) cmp movsb add stos and mov inc lock sbb out ljmp sbb or adc in nop inc push push xor mov cmp pop pop inc mov fildll imul rol sbb pinsrw bound mov clc pop popf push adc int3 js adc leave movsb inc scas in aam xor xor ljmp leave jge pop (bad) daa add pop or add js sbb addr16 pop xchg xor adc leave out rolb popl mov xchg add mov mov std push add xchg orb loope repnz jmp fwait aas sbbb add test (bad) and mov push jno pop addl and fisubr push cld repnz adc jmp or add push pop lcall sbb mov incb ror pusha push es sub jle pop xor push adc and add pop popf pop cmp xchg mov out shrb add fwait (bad) jae add sbb out repnz pop adc shll xor adc jp xchg or add loopne push inc lcall cmpsl scas cmp xor jg push inc outsb add mov faddl lret pop add lahf int fimul jb jbe cmc inc mov (bad) loop mov movsl add inc popa mov mov adc mov push jb out add mov sahf loop add mov stos adcb js and cmpsl add sub jae adcl bound add or mov movsl cmpsb orb mov jmp loope add pusha mov sbb js push gs loopne cld inc add cmp sub adc lahf xchg inc pushf inc cmova or mov dec mov or push jle xchg adc fadds push sub add mov xor adcb xor rolb add imul daa stos loop loopne sar jbe (bad) cli cmpsl pop add sarl or dec test sub xchg xchg inc push jns add cmp push add xchg mov (bad) lock mov dec add fwait data16 int3 mov mov inc mov int test fisubr lea out adc push add push scas aad jmp movsb dec shrl js add pop dec je (bad) sub sbb popf dec dec add pop pusha push xor push in xchg movsl mov test or xor es out sbb mov ss pop aad loopne mov subb xor cmp test inc cs add mov add add test cmp jns dec inc cmp fldcw cmpsl adc xorl push das lods add mov sbb out mov insl adc pop push pop imul inc or addb pop cli je xchg fnsave or add movsb (bad) je xorl jae (bad) call mov mov or stos sbb orl imul (bad) repz mov sub push inc imul test pop mov jns in nop pop fcmovnb dec or mov (bad) mov add insb dec cwtl ret add dec cmp ja adc add movsl inc enter sub rclb pop out sub loop fnsave add pop or cmp adc push push mov inc (bad) dec cmp xchg subl stos pop add scas adc jecxz fdivs cltd imul add andl cmp xchg out punpckldq loopne push lock shr xor add xchg scas dec xor add leave fstp sbb or or jnp js cmpsl ja fnop aaa mov cwtl add sar push mov gs jb (bad) frstor xchg jmp out loopne out (bad) mov ja push inc shrb sbb (bad) lret jno mov adc es jmp pop or cwtl or push mov insb mov push mov test repnz push push cmp dec push mov fsubp push add sub jbe ss rclb add cmpsb push mov xchg mov idivb lock push add or nop ja out mov jnp dec jbe adc pop jne insl iret dec fldl (bad) ja xor inc add lea inc jle ljmp pusha sbb adc mov mov xchg push add cmpsb mov scas mov or mov cwtl push rcrb aad cli out jo sbb mov dec into dec mov add lea pop or dec fs xorl jne add clc test fldl sar jge adcl jmp std add xchg pop adc cmp jo add faddl lods pushf repnz add jns lds loope jle pmulhuw cmp xchg lahf data16 incb lock scas outsb cmpxchg pop and jno aam sub imul jmp dec mov adc add mov out inc cmc sub pop fidivr roll add popf mov mov cmp mov in push fcomps mov imul scas xchg incl pop push jbe in sahf (bad) pop aaa in outsl cli add mov daa loopne gs incb pop iret mov xchg sub xchg and add arpl sahf xchg je clc neg add mov sbb ds dec push cld jle insb out or in imul pop rorb add movsl sarb addr16 mov (bad) fildll lret mov leave test int3 or lahf xchg aas das add inc inc (bad) lds subl test sarb loopne add jecxz in imul add insl aaa stc pop inc add sub xor cmp adc lods movsl test mov add inc pusha mov cmp mov jne cld mov repz xchg push test fdivrl repnz sbb ja mov mov sbb or inc out test shl cmp jge cmp mov cmp add test and sbb repz add and mov imul test call jg rorb iret add jp jnp mov add fisttpl lret incb ja mov and sbb mov inc push scas pop xchg mov xor jp fstpl sbb loope (bad) rclb xor inc adc stos add or insb pextrw gs add fnop subps xchg in push movsl les add scas mov data16 loop and lock and popf fsubl push pop jno (bad) scas insb or jb inc ret fsubs add rcrb mov sub fisub les orb jns add sbb mov mov out sbb jl cmp (bad) mov cmp aad je add push rorl cwtl ljmp push add sbbl mov push inc push dec int3 mov mov pushf push popf adc lret sbb in or fldlg2 add mov add enter add jle mov push sbb data16 (bad) mov fisubl inc sub sahf ds sbb push inc cmpsl dec flds stos and mov das aaa ret jno pop movsb inc in add out jne cli std xchg jg push xchg test lea adcl cld inc cmp cltd and or insb add lock fistpll rorl dec mov cmp push sub (bad) mov xchg xor adc lock push sub add das neg and cmpsl and arpl jle jge pand pop pop jecxz fwait xor and arpl scas out sub subl mov push and xchg fs pop outsl sahf adc cli sub adc test lods in pop leave jbe hlt jns rcrb (bad) mov pop shrl imul jnp add sbb clc mov js push push loope or mov (bad) push sahf mov and ljmp or test and jnp dec add mov push rcr stc or add cmp cmpsl sbb out lea mov stos and jp adc xchg hlt aad leave adc sbb inc sub adc shl daa cmp aas into roll fwait ret cmpsl (bad) add pop dec push xchg push outsb or punpcklwd add cltd mov jge aad in dec test cmpsl js and lcall push enter sub stos in adc pusha insl pop push push sbb jo fisttp (bad) hlt mov ja add pop inc lahf sub sar jns mov xor or call imul adc aaa xchg enter cmpsb push jb (bad) lret or andb scas and pop xchg test add cwtl (bad) xor pop popa sbb call push repz pop icebp inc add pop addr16 xor or bound pop add mov pushf insb lock rorl in push sarb pop arpl xchg mov (bad) xor dec push fsubrp xor sub pop test or rolb sub xor fsubrl test mov rcrl add xor xlat lea cld loope add imul fsubl add mov push mov sbb mov pop or mov lcall add fistpll inc or cli icebp rcl inc sub or rclb repnz mov xor sub test mov or jle lods xchg mov into out cltd mov push adc push movsl add mov loopne in push subl jns neg out dec pop mov inc scas inc das out add or imul adc xchg mov into lahf (bad) (bad) cld dec pop pusha sbb mov les ja pop jp or jmp mov es ljmp or mov xchg cld (bad) xor fidivrl imul add repz addl mov inc shll pop inc or (bad) rorl loopne out pusha stos aas mov pop or pushf jle jns pop fwait dec fldenv mov and out or dec and inc adcl mov rcl insl fwait mov ljmp mov insb inc or cmpsl popa jp in fstpt (bad) leave subl jmp mov adc dec add insl mov data16 icebp cld aam add dec push pop call lret dec mov leave subb icebp adc cpuid or inc loopne inc mov int3 js xor and test rorb add push (bad) jno add insl sbb arpl adc movsl add orl push mov into lret call add inc mov out leave popa (bad) and mov xor fnstsw subl lar sub cmp mov icebp loopne mov fs rolb pop loope or ret sbb sbbb xchg add movsl jmp arpl push xchg cli add les pushf or sahf sub lods lahf mov xchg cmp gs or sbbl inc xor daa adc pop sub dec dec test ret cmp sbb sbb add jl imul cmpsb or nop cmp sbb lahf sub mov movsb mov adc sbb xchg add xor setne lret xchg shlb lcall xor jo clc push je imul mov xchg dec push mov inc dec push and test scas pop sub (bad) outsl jle cwtl pop mov xor (bad) cmp addr16 ljmp ds pusha adc xor dec movsl add fisttpll and push es lcall and jns push jmp in (bad) sub sarl sti ret add mov faddl dec sbb cltd lcall lods adc lock std xor lcall mov cmp fbstp and jge sbbb sub and mov jg stc fmull jmp mov adc pop mov add rcl jo in gs dec xor stc jns es jo add pop or insl adcl inc add jmp clc hlt out add xor jbe call and jmp mov push dec cwtl adc pop addr16 or or inc mov cmpb fldenv xrelease lock hlt sahf out mov adc xor mov xor pop lods inc or gs dec cmc xchg sbb mov jmp lods and xor xchg pusha test cwtl sbb fmull ror out sub (bad) or fnsave add push add arpl adc lock mov int mov push test andb clc (bad) je (bad) mov mov loopne sub mov insb imul jl sub enter bnd cmp jne and pusha cmp cmpsl add jmp (bad) cmpsb ret and iret mov aam je adc sub mov das repnz mov add dec out clc mov mov add lret or sub fadds fwait popf mov rolb (bad) fnstcw cmpsl jo aas nop or rclb cs lahf clc and adc sub jge mov es cld add insl out call mov and int xchg mov cmc (bad) and mov ret and mov cmp push cmp sbb cmp dec sub insl bswap call xchg xor mov and gs add pop mov nop lret xchg sub xchg cmp mov lock and dec cmp jp jge push (bad) cmp and mov or ds jae or in (bad) call lret dec pop sahf leave jo orb aam call or lcall xor sub and add notb xchg mov (bad) cs test sub lods outsl adc imul cmp pop mov xchg repnz pop leave lock lock test sub push push and leave cli xor clc mov movb xor or sbb or xor add mov adc xor and test rorl jecxz pop out add and int3 test (bad) mov mov and jle scas mov cmp test xor adcl jl es inc sbb xchg adcl and and clc pop or jmp adc add jge xchg mov and jecxz lods inc cwtl clc (bad) jae xchg pop xchg add adc lock push sub add inc pop jmp scas mov jnp cwtl outsl or stc test xchg cmp push lret mov sbbl push mov dec rcrb (bad) popa sbb imul leave sbb xchg push mov call dec inc push add insb packuswb hlt les nop aam mov movsb in add jge sub sub cmp inc sub push inc lea pop pop adcb popf movb pop (bad) dec lahf ret pop add cmp call xchg jno adc sub and dec mov push (bad) adc in push xchg mov push sub or into neg test and sub push pop hlt imul xchg mov addr16 std jns lcall clc and and pushf jo movsb add nop int3 mov test (bad) or jns pop scas adc xchg sahf int or sub ss out test loopne mov call in adc scas adc cmpsb (bad) xchg jl dec adc addb gs and mov mov stos mov test add pop inc mov cmp outsl daa cwtl movsb rclb sub (bad) adc shrl push in call jae mov pop aaa mov add dec push and mov mov cwtl clc xchg adc daa (bad) xchg and pop and add pop xor inc int3 and and (bad) sub mov mov or test cmp mov fs pusha xor (bad) fisub and adc std movsb adc jns js add push adc sahf cmp jg mov imul mov out imul cmp dec popa fcomps test scas and imul adc and lock sbb push add add push xchg es jge inc out loopne out or mov dec mov mov xchg jge call arpl or mov imul mov add adc push sbb loopne cld rorb sub hlt mov in inc sub push mov sub xchg xor and add inc mov in lock add inc lret mov and test jo xchg adc add xlat and sbb mov mov xchg lds dec ret in pop dec sbb inc add inc aas add cmp pop rclb mov test or cmp add inc inc rorb jge push add mov mov and push sbb xor xor imul mov dec ret jo test jl outsl nop sbb mov movaps loopne mov or aas push insl dec sbb jnp sar call test shlb clc std aas sbb pop rolb scas xchg sbb out outsb inc mulb in and sbb roll movsb clc imul add mov popa jp jmp out add pop loop or mov sbb (bad) jns mov dec dec sbbb jns nop dec pop or dec cli ja adcb or adc or repz test pop mov (bad) dec or xchg xor adc popf xor pop xchg cwtl fisttpll outsl mov (bad) aam scas xlat shlb aaa sub inc push cwtl mov mov mov inc inc cmpsl jmp sub xor repnz in add xor out mov pop xchg nop or sub (bad) or add sub mov xor push mov mov xor sbb adc or cmpsb sbbb loop sub push pop lret addr16 xchg and ficom cs mov push (bad) fdivs es pushf mov dec and test imul mov call jl (bad) int sbb mov mov push daa and mov mov les jge mov mov mov push add movsl stc cmpsb or mov push subl sbb lcall (bad) test (bad) hlt add lock mov loopne test fcomp xchg and js out lods xchg lods lods nop int3 add push pop adc insb mov inc mov adc into cwtl jl adc inc pop jb pusha dec pushf adc adc add xor loopne ret movb xor fcoml les sbb aam mov xor add ret push pushf xchg jo,pt or cmp in or loopne mov lahf mov pop in mov sbb sub xorb jno pushf insb cmp (bad) adc scas jmp outsb movsl shll add faddl sbb mov shl jmp addr16 xor add jb and pop lret cli out popf pop aad orl xor rorb outsb jae lds and add jge leave jl inc ds movsb and bound xchg add scas insb add and cmp jae dec or sbb xor mov daa (bad) hlt mov inc mov popf xchg dec aas mov (bad) push shlb jle add xchg popf mov add lods mov rorb adc adc dec repnz cmp mov out xchg addb cmp add add clc jmp int mov call or mov scas add aad pop adc dec sbb jle mov or movsb enter nop and sbb jnp orb imul (bad) mov out lods int3 cmp mov movsb push rorl mov enter arpl fs out mov dec mov je and les jmp jb bound mov dec cld loope dec inc nop add iret dec and pop mov dec pusha mov cwtl (bad) into xchg pop movsl fwait cmp sub sbb xor add imul xlat add add jmp xchg pop ror pop push mull dec jnp add xor stc nop lock push xlat cs mov and (bad) mov sti xchg sbb adc sub add xchg sahf ficom mov jmp call add icebp fbld or pusha dec xchg add lods add add xor mov insl pusha add or sub add mov nop sbb call adc cmp mov das add loope repz push xchg rol push sub daa sti aam xchg or jmp lods push fisub mov je add pop fdivrs xchg add push jp mov cltd out adc ss les aam ret and out (bad) jno mov roll int3 jecxz outsl fiadd cs pop mov push mov push push inc jmp movsl fwait pushf popf call jl loope in adcb roll sub push xor adc int3 cltd sub test movsb sbb outsb mov adc call test fwait adc dec lahf add add lret pushf jo in and dec pusha adcb jg hlt (bad) cmpl sti out jns les dec sbb add in pop insb lods push pusha sub les out rol inc rcrb and add es push add cmpsl fcmovb dec test enter push fs scas sub add inc ret or pop mov or ret and inc mov mov sbb mov dec push xchg lods sbb outsl rorb and xor push movsb addb dec pop insl mov lret jno xor es bound mov push test sbb popa cmp out mov jle inc adc sbb sbb and fwait add shrb add pop mov imul mov sbb push mov fwait dec fistpll aam pusha inc mov sbb add iret pop movsl inc mov and and add and rolb dec pop (bad) xor pop lret cwtl xor orb adc push push lcall or jne adc scas dec mov sbb add mov mov push add jecxz test cmp popf and sub repz bound fcmovb jo scas ret aas add and add lods daa scas mov into ljmp ret sbb mov add push xor sbb leave inc sub add add ficompl sbb repnz cmp add inc mov push mov fs xor add loope jle dec jl add dec fisttpl sub xor movl (bad) negb or xor mov adc out or fcompl pop inc add mov add push sbb pop xor or mov imul aad pop orb adc sub lock sbb sbb test jp add ret or xchg (bad) mov es pusha ss std jne int3 pusha pop cmp ret (bad) adc sbb movsl cmp negb add iret or pop loopne pop cmp or xchg test mov adc ret mov add pop cmp ret lret jo enter xchg test cmp adc or mov fbld out adc les mov add dec stc outsl call sbb add and mov nop xor iret jns test paddd pop add sub je inc push rcrl push enter int cwtl inc xor in (bad) dec mov inc lods pusha xchg push adc add mov inc lds mov insl mov daa aad inc mov mov sbb pop dec xor jecxz mov aad andl outsb add add addb out jl test rolb pop test pop movsb aaa jge mov push mov cmp jecxz add inc (bad) jl insb (bad) push in mov leave lock inc or ret ss fs cmpb (bad) pop and insb add in into pop (bad) jle movnti (bad) mov sar clc push xchg out data16 cmp push daa divl dec fs add out xchg mov out add (bad) nop pop add popf lock jp fbstp divb outsb ficompl inc in add insl (bad) or xor adc push pop (bad) into nop outsl and sahf or pop push gs aam add mov mov adc mov jg dec shrb xorb add dec sbb adc dec push or das mov pop pop jl lret xchg stos out cmc aas cmpl pop cli dec add push repnz outsb jecxz push cld mov and mov sub das adc adc lcall add xchg lahf inc add inc pop push push repnz add out add je stos sbb gs test outsl and cmp xor add (bad) xchg inc cmp or mov fsubrs or or and shll cmp nop cld adc add pop sbb shrl cmp pusha into push sbb sub cmp arpl fs jo add cld or jle push lahf push mov mov fldenv cwtl or jecxz sub adc negl lea test ficompl inc notb push faddl nop xor shlb aas pop jno imul shlb jb jl cs cmpsl add xchg roll sub pop cmp sbb and add mov mov mov sar xchg dec pop dec add (bad) sahf or insb aas inc adc mov stos sbb mov push repnz xor xor sbb (bad) popa pop sar imul jl dec push (bad) rcrl int3 out mov jmp mov mov outsb and inc or hlt dec mov sub leave aam xlat loopne cli add or ljmp inc es mov nop outsb roll mov sub and cmp ret lock sbb inc inc fidiv jmp fildl mov mov xlat inc xor (bad) and push (bad) ja outsb xchg cmp add jle je arpl add cmc rcrl leave shll cmpsl and mov xor sbbb add fisttpl jne jp notl mov adc leave inc mov mov js dec shrb aam in add inc jns scas fisttp jno add sbb ja cmpsb mov dec je xor enter and mov dec or push scas xchg or inc shlb sbb test jmp jnp mov or xchg js leave dec test (bad) jo rorb (bad) addr16 gs and adc jnp sbb stos lcall clc jns inc dec or xchg rcl pop mov add sub push xchg jg push cld inc add fdivrs dec (bad) repz or insb das mov add cltd mov clc mov lret lret sub mov pop push fstpt cld mov sbb xchg lods mov adc inc imul inc jo lods jbe mov push popf push jmp (bad) add cli addr16 push (bad) adc mov push popa pusha cmpsl and jecxz add sti roll enter pop ja push xchg dec or aas add or fnsave and fs jne inc popl sbb inc je inc fsubs sub fmull rolb cwtl or adc push push or imul or xor cmp stc and (bad) xchg jl mov mov popl test dec cmc outsl ja or pop nop sahf hlt movl or orl int3 test jbe add cli jnp into nop test adc (bad) mov push inc adc test mov sbb mov inc test pop imul pop mov leave xor jbe add and and xorb or or or iret pushf and add pop jl mov enter lods stos pop and (bad) and mulb (bad) pusha fmuls mov sub sbb mov mov lea fldcw and xor ja add adc add inc jbe dec jl add xchg popa xor sbb dec les mov iret dec data16 das test xlat pop pop dec rorl mov mov adc insl pop push cs mov and add xlat mul insb rorb popa xor dec mov push or (bad) xor add sbb les mov bound hlt (bad) inc sbb jbe adc or daa movsb test dec movsl rclb inc mov jbe adc lock mov jmp adc cwtl loope push hlt push aam faddl push adc jl mov pushf push pop adc addr16 inc push cmpb mov push sahf mov fs mov or and and and inc sahf orb jmp rolb (bad) cmp lods jecxz orb pop pusha mov popa mov adcl testb dec add fcompl xor pusha iret fdivrs je cmp sub stos out popf das add xchg mov addr16 aam cmc (bad) dec (bad) les sub (bad) lock adc mov add dec jb fcompl test jge imul leave cmp cwtl hlt jnp add les mov mov xchg test imul into add clc cmp xchg jge stc mov pop js push test (bad) push add fidivr std xor fsub movsb adc dec adc jae xor rclb add or addb rcll push add in inc adc scas dec jns nop lcall pop cli add adc mov addr16 xchg add inc test sbb aad outsl jge jl rcr jo jle cmp adc add jg hlt xor push mov sub sbb mov xlat adc es das add or add mov xor scas jg movsb jbe inc add cmp call mov es icebp js inc fcompl xchg pop push std nop ds and ret (bad) sbb dec lock nop rcrb jo leave add add (bad) test pop lods xor lods lock pop pop or xor stos fs mov and cmp icebp fistl ds call out add jno fnstcw add mov fmuls std cld pop mov xor aam js jp inc jo test inc xor stos cli iret test fdivr add cmpsl insl pushf (bad) mov mov test jbe sbb lods orl dec cmpsb fs movb rcll cmpb (bad) imul gs lea mov xor or (bad) jecxz hlt cmp in push clc mov inc mov cltd hlt push inc dec cmp mov jmp (bad) push add dec iret adc xor jbe inc adc repnz fs or and mov arpl push in cwtl mov mov (bad) mov add push sbb in inc repnz ror pusha mov add adc cmp mov mov push push push jmp shlb jle add mov jnp jg xlat mov pop mov (bad) inc lock frstor inc cltd pop iret shrb jne movsl and jmp fdivl fmuls add (bad) sbb jb push popa std leave add cmp bound in cld xchg hlt mov fs gs mov (bad) adc push inc xor mov ret push dec sahf sub add popa add repz xchg inc mov cmp or xchg inc int3 loope pop adc aas mov cmpsl stos mov cld xchg add jne aas cld fwait and imul faddl int cwtl add mov enter mov mov sub std in fcomi sub dec in lret or (bad) xor cmpsl call mov add nop test pushf mov or ds mov pop push nop xchg cwtl add pop jo or sub or adc xor cmp pusha aam mov sbb nop xor sbb popw jbe or pusha jp mov negb pop sbb xlat dec or xchg or jnp pop push mov add mov or add repnz lds dec inc sbb cmp add (bad) std jle test mov jnp test xchg mov xchg xchg add push cmp push cmp push in (bad) mov jl clc gs jge js mov sub inc loopne jae or mov push imul stos inc inc push pop jp lods add addr16 mov cmpsb imul (bad) pushf rorb pop dec and push jl and xchg sub jg and sub js dec mov enter sbb xor xchg fnstcw or dec or cld mov cmp dec xorb push add loop cmpsl or push mov ret xchg (bad) sbb pop sarb data16 jne push push inc pushf es sub push mov ja sub sub add loop mov dec mov lret add mov inc scas xlat mov xor mov sbb in dec add mov das ja or jbe and sub imul or std mov rol aam xorl lock add jbe and adc cmp xor and repnz and adc aam fs xchg das test les addb in sub dec adc sub sub mov push xorb mulb mov dec pop shr inc xchg and fdivr enter popa lcall ss pop test mov cmpsl and add sarl test lahf push pop add movsb add mov add add icebp fsubrs mov push add mov dec dec add in xchg jecxz pop xchg xchg mov pop roll sbb xchg jle jno test mov outsl imull mov sub das loopne outsb pusha out addr16 dec sub nop daa pop mov pop cmp or pop mov inc mov sbb popl add sahf or and test lods out add enter aam loope inc dec sub lea dec pusha mov add xor pop or stc jp andb cmpsl push push (bad) lock je psubb jo sub adc dec or xor into xchg out dec mov test cmc lds fldcw lock add fnop adcb movb jno adc daa imul cmp movsl add (bad) lock les cmp push inc lahf lea movsb rolb rclb ss mov mov cmp cmp mov push mov ret mov mov or pop clc sbb sbb xchg test mov add pop xchg dec js,pn add pop test push jo pop fdivrl movsl mov mov clc fmuls sub daa push xchg xor ljmp cmp pop adc in lods dec mov ficompl gs addb lret hlt pusha sahf popa daa aaa jno pop scas jbe add call fldl subb mov and jne push fisttpll sub mov movsb push fnop hlt xchg xor rcrl add sub int3 lods pop (bad) xor std xchg jb add xchg sub stc xorl pop and jle cmpsl nop mov das into push mov sbb jnp add stc shl jns push push mov lock mov scas add xor or add out pushf mov xchg fs sub lods fdivrs in call in data16 dec movsb rcl cmp sub fxch pushf xor (bad) pop inc inc nop sbb outsb sahf leave push les int3 mov rorb les adc and push pushf mov roll dec bound lods fnop sub push clc sub lret add or inc inc andl test sub dec adc and push sbb imul push mov jge outsl cmp mov sub xor jnp dec test and sbb adc scas xor inc mov das adc adc bound (bad) int push popa test mov (bad) mov cmp int es sub aad sub ds mov fldlg2 mov lea sub mov aaa enter lods jp bound jl adc and dec dec jecxz cmp dec xor adc shlb push xchg stos lock pop insb push jp sbb fmull xchg jle nop jmp cs dec xchg or add sbbl xor ljmp mov std fwait or push or js pusha ja add xlat cwtl push pop mov add mov and test push shrl cmp mov add hlt pushf je,pn adc push fsub mov daa xchg lds mov cwtl cwtl fucomi and add sub mov jg cld push pop adc xchg xlat or div xchg add xor cmp mov mov jge fmull adc ds xchg inc pop mov aam ret cmp pop addl or js and test xchg stos (bad) mov add pminub repz inc xchg jnp add inc lret mov adc jnp jne add push push cltd daa pop and pop (bad) inc sbb adc insl adc mov push (bad) fmull push and (bad) adc int movsb pop sbb push mov push sbbb sbb and xchg popa and out enter shlb cmp scas xor xor cmp push out pusha xor add cmp out nop xor adc pop sbb out xor pop adc mov xor mov nop fcmovb aam les adc popa in sahf adc or add and push rolb xor xchg and je pusha mov jle sub pop mov insl xchg xchg les dec sub fcoml lods add mov inc add cmp xor lcall or jl mov insb add cmpb add pop das jns cmp in or sbb fs repz sti pop adc lock jb test addb xchg mov mov pop xchg pop or lret orl mov mov jo xor fmul mov mov call bound push cld push rorl xchg push aad mov pop adc push jo and out adc mov mov imul sbb test fistpl mov jecxz add sti add xor mov sub or push xor mov or nop add add lock jge cmp cmp xchg and lret mov andl les sub ja inc fdivl mov mov nop int3 lods pop sbb hlt idivl mov mov mov mov push int dec mov enter gs or and or adc lods add repnz jns enter cmpsb or sbb gs jg xchg call pop inc test ja test daa sarb sub mov mov mov add adc xor or fnstsw dec jle push ror dec mov xor rcrb adc jecxz roll cmpsl and cld pop aad maskmovq notl fcmovnu int3 jns adc es loopne sub sbb test fnstenv inc mov push mov push sub aad add push cld or (bad) fs adc in sbb push das add mov sub adc pop out jne jnp arpl pop shrb int3 pop sbb jne and jg lds mov add dec jl (bad) ja pcmpgtd inc pop (bad) add gs ja pop mov hlt mov dec loopne lods in push dec (bad) push shr arpl out sbb jle icebp push orb mulb inc push xor in clc mov loope ret add dec lcall xchg and mov arpl pop test fmul outsl and lods sbb test mov fisttpll xor outsl pop clc push or sub push popf iret sbb pop add push dec xchg inc cltd adc mov lods arpl push cmp jne js aad out add orl jnp add aaa popl and jmp pop dec dec test (bad) loopne sbb add inc or inc or xchg arpl popl nop and test inc xchg cmp sub test ret mov int3 jge fmull call add sbb popa in imul aas dec cmpsl or pop pop sbb je mov aas jnp icebp cmp test xchg add dec iret std add xor xor push shr push xchg movsb adc inc and mov imul dec bswap inc xor inc add lea popa and ds pop sbb adc xchg cmp add and dec (bad) pop and xor add sub adc js ja add das mov lahf xchg pop push enter and cltd add cmp mov decb mov and mov cmp dec sar loop and add push outsl jno add add jge lods fisttp bound ljmp xor pushf adc addl nop or push xchg (bad) jl dec xor fldl mov es jl xor mov xor jns sbb call pop fwait xor mov xchg add push push add movsb xorb push popa jns cli test movsl xor clc ficomp xor sbb dec xor lods inc lock sbb clc divl pusha (bad) rolb fldl or (bad) mov sub add push rolb add enter mov add push stos test divb adc in push xor pop cmp test jmp mov or mov cmp jecxz add pop negb adc xchg sub rcll pop sub inc add lea push inc imul add add je push mov dec xor outsl add scas mov adc jecxz imul sub aam out push add xor add (bad) fidiv dec or sbb pop mov loopne rcrb jge mov fdivs in add insl call pop sarb add jnp,pt or xchg hlt sar cmpb popf orb add (bad) and mov sub jmp mov (bad) je cmp mov ret lods cs cltd jle add aad xchg adc add fs and scas xchg ds sub sub cmpsb and jmp mov add lock fs xor out xchg inc and inc cmc andl sub or cs je mov inc divl fdiv int jecxz add insb roll ret ret add xchg in imul xor shll xchg out cmpsb aas lods dec xor sbb das and dec les add rcl movl adc rolb aas mov stos pop push (bad) test cwtl mov movsb imul add inc aas icebp sub xchg insl inc aad shlb aas push loopne and lret or add fisttpll sbb roll inc outsb fwait mov push push adc out (bad) push pop sub insl cmp add loop outsl daa push jbe ljmp add add xor push cmp pop hlt cmpl dec mov sti mov or sbb movsb es pop xor pop cs pop call sarl sbb icebp push std add pop push sub dec aas popa inc pop test cwtl sub push cld adc xor cmpsl push mov and popa pop data16 lret in add jmp lods adc and movl ljmp test lahf js push incl (bad) sarl lds dec ficompl insl (bad) out jne add sarl xchg test test repz lds xchg xor inc out sbb rolb cmc (bad) std adc repz jnp add cwtl mov fcmovb xor into jo push movntps lods lds push mov (bad) add dec pop push add push cmc aad mov push lock sub cmp cld mov int add inc mov pop add les scas lea cs nop mov add and or pop addl cld jmp and add call sub inc add pop or adc mov add xor jl add enter xor mov mov add mov addr16 push stos cmp push ds (bad) test sub xor add iret mov adc jnp add or dec (bad) add arpl mov add (bad) icebp loope call fsubl add insb aad daa and int lret mov push call and int3 jbe add pop gs in push xor push mov mov mov inc mov jno add hlt pop jp cld sub test jb xor roll mov xchg lahf cwtl inc pop es cld pop jg inc leave dec jge lock loope out (bad) pop ja cmp subl push pop adc scas test or mov sbb push push lods add push in add insb add ja roll inc stc mov ss add cmp cmp cli cmc dec repz int adc or stos jnp jge movsb mov push xchg iret jb push ljmp popa (bad) and fist jecxz mov pop pop ss adc push movsl popf cld rcrb sub addr16 loopne cmp ds in xchg rcrb daa call inc or ds (bad) mov sbb sub add es movsl push inc mov add mov hlt fimul mov leave cltd es hlt xor mov dec enter inc in push pop jmp xor cwtl xchg scas sti jns push mov inc push add in inc or in mov xor fwait or mov mov push shl jno rcrl pop mov inc cmp and inc cltd lock out sbb cmp sahf or sub dec (bad) fiadd mov jg add scas notb test shlb add ret mov sbb gs int inc add jnp add (bad) icebp add jbe sub adc jle movsl xchg xorl arpl mov enter out fwait jb xor pop pop sub add fcomps adc mov xchg lret outsb ret mov sbb out jge test ljmp das inc xchg and dec and xor movsl xor in inc pop sarb jp or adcl add mov xor ds scas repz adc sbb imul push push fsts add movsb cltd inc fsubrl add and inc and (bad) divl das js add cmp add sbb push jmp (bad) and mov pop pop aas mov push daa rol add jne mov push loopne or xchg insb pusha and inc fadds pop xchg rorl or loope cmp je pop ljmp dec rolb (bad) jl daa pop inc pop je xor pop sbb sub push mov (bad) pop jp xchg leave std add inc ret mov dec push insl nop test stc xchg pushf xor sub jle (bad) in pop rorb add cmp jle add pop into mov mov pop lcall or and imul stc pop sub jge mov enter and repnz loope sti jl pop jecxz out xchg add xchg or pusha cwtl clc call cmpl or and add and loope jg cmp mov cwtl test sar inc scas (bad) pop and dec sub dec or add lahf or mov or jecxz inc xchg mov rolb adc jg cmp or aaa popl xor in xor mov mov jbe xorb mov mov push leave adc or shll ja and (bad) movsl outsb inc das jne adc sarb xor loop add insb dec and mov (bad) imul xchg dec mov nop fs add nop lahf cmp fwait cmc pop cld add add mov cltd add adc jnp mov xor ss imul outsl dec sbb dec mov push sub pushf aam and and add add popf add aad ljmp mov dec bound (bad) jge xchg loop sbb add add fyl2x hlt or push testb dec (bad) push xor xchg (bad) mov lahf popa mov aaa pop sbb movb jne jmp stos (bad) lock repz pusha movsl cmpsl xor cmc nop ret pop or add add shrl fild add dec add (bad) fdiv cmp les xlat gs push mov add push in (bad) mov add cmp mov aad inc sub dec insl loop sbb mov push (bad) aas inc fcmovbe jne lock iret out aad mov cld jmp out xor in out add pop xchg lods add sti mov xlat fdivrl fistpll push mov popf lahf pop sarl test sbb int3 add stc xor add ljmp mov insb add mov rcrb xchg ss or outsl dec push add or pusha add stos mov sbbb mov sbb out add aad lods cmp aaa loop and lahf xor sbb jne (bad) mov aas fmul jle add and mov sub fidiv clc mov add stc inc hlt (bad) mov cmp jns dec and push std ret ja lret add dec stos or push (bad) jp inc cwtl push add cltd fs add push in xor cld jo lret push ret mov inc add mov add push leave sbb inc push jno mov add push lret jl sub hlt pusha (bad) jno and mov cmpl push loopne add mov push cmpsl ss int ret add pop mov add add jno jg pop mov outsl sub xor retw adc inc fcompl fild fcoms push je mov push add jmp jae mov sbb scas mov sbb mov adc mov scas push sub nop dec subl inc sti or inc ss sbb cld pop bndstx test inc loopne mov mov push outsb xor xchg jo xor (bad) adcl mov pusha ja pop clc arpl stc incl stos and loope push cld (bad) push sub jg mov or add rcl adc mov orl mov add mov push inc dec add das mov outsb sar rolb fs lods (bad) or push adc sbb pop subl pop addb orb jmp mov inc jl cltd (bad) jb or sbb ltr mov je movsb push pop push cmpsb push ja add insl imul lock leave out enter jns lcall jne cmp xor clc iret pop outsl cmpsb lahf pop jle nop sub and in rcr pushf fsubrl arpl push mov fmuls jmp push loopnew pop mov fwait add cwtl icebp add jne (bad) cmp jle fldl test push fsts add (bad) jg sub clc leave outsl imulb lods test cmc cmpsl aam add add jl lock add mov xchg pushf rolb inc (bad) repz mov inc sahf cmp inc push ret sub mov movsb and pop mov xor sbb jmp int add test push push pop xorb push pop inc mov dec jno mov sahf cs pushf roll or or clc jecxz mov ss add ret in inc inc out pop pusha imul test fildll add repz std xor jns add mov lock fbstp xchg add add (bad) jae add xchg movb test dec ss les jns sub psllw mov pop loopne xchg movl mov push lcall cmp mov push push call mov xchg push (bad) lods adc inc adc jns cmp cmpsb jle aas jb and and add aas and mov das inc adc sbb cmp cmp sub jns adc cmp scas out cmp or dec xor in mov inc popa sti adc in pop xchg push mov fcoml lock add jmp dec mov imul lret in mov je std pop sub or add add outsb inc push sbb adc add icebp cmp ret loope sbb jecxz lds add pop mov mov jo hlt lea add jae add fwait adc call lcall and (bad) loop test and cmp incb cmp addb test fwait cmp das xchg mov mov push mov sbb iret fcoms add sbbl pop pop leave andb pushf add and minps cwtl loopne bound xchg add enter jp push mov sub mov adc pop call lea pop jmp loopne,pn mov dec cwtl hlt jecxz xor and xchg das sub clc out sub add fisubrl mov xor mov js or xchg mov sub rclb test mov daa jb push shr out add inc push mov shld mov jno,pn mov jge lcall mov and adc popf pop out jne adc sbb sub arpl sahf insb cwtl add stos pusha or or and push repnz mov and idivb or push xchg mov add aas inc jmp push push icebp jecxz jp (bad) fprem add (bad) negl add jl stc sarb sub push cmp mov push cmp imul xlat mov push (bad) cmpsb leave out mov jp adc pop std xchg sbb lahf xchg dec loop or repnz outsb in adc adc fdivrs popa xlat pop mov rolb sbb mov andb insl dec and loope jb (bad) pop fs dec imul xchg ret hlt add sbb lret (bad) dec or sub jmp jno shrl lret imul xchg sbb add inc popa cmpsb jmp add push outsb out je mov out cltd xlat jno jmp (bad) or add inc stc stos push (bad) ja dec or push inc fistpll sub push sbb lods test push or test hlt pop cmp xor pop add mov cmpsl mov pop mov lds lock mov and popa push in add inc xchg sub lods js jnp outsl loopne and pop fdivrl add fadds push in add test jmp mov pop xor jg (bad) push or pop lahf jle xor or dec sub mov ds mov sub add clc sub int dec roll push lret cmpsb xorl jae leave adc add stc xchg test int3 out out pop jl push (bad) mov push cltd add bound dec add fdivrs add sub jle cmp mov lods mov xlat lret fcmovnu push pop add push aam cmp incb in bound imul lods add jecxz xchg push jge sar dec push out add xor adc pop add mov add pop insb arpl xchg mov sbb xchg inc and mov popf add scas xorb in (bad) add jae (bad) ds push hlt mov xor inc adcl pop lock or jge add xlat push mov cmp xchg or in adc sbb stos sub (bad) icebp dec lods icebp push inc jns iret faddl mov cltd dec ret push imul add out fsts stos mov lret and xchg inc je add sub mov ljmp add mov nop jecxz add imul bound push inc dec hlt fild std xchg fldt add arpl cmp repnz add pop (bad) add sbb loopne push add and adc fucomp sbb pop insl jno xorl leave cmp mov or xchg test fwait (bad) movl jmp xlat dec and jbe decl inc testl dec lret test fcmovu ds sub es loop jnp add jbe dec jl add mov xchg xor fisubrl add mov (bad) lcall lock pop shlb fldenv ja neg add mov sub xlat inc roll sbb jae jp or add daa std xor cmpb jae dec stos enter cltd lret mov daa out psrld das rolb into jmp xchg add cmp sahf roll xchg test add inc xor jno adc ds xchg (bad) mov mov out dec xor cmp addb movsl jnp and lock mov sub pop insb lret or xchg inc cmp mov mov pusha xchg xchg popf lret pop dec mov xor aam rolb fisub stos pop add mov (bad) pop mov jge fcmovu pop mov test add in outsb jl xchg lret add movsb mov arpl mov jo dec add push loopne pop inc loopne mov mov and cmp jge sub add lods xchg jle,pn or sbb js push (bad) (bad) dec push cmp in adc and bound add pop mov ficom cli mov popf addb das mov dec cwtl inc imul sbb in add lock aas pop jnp popa sahf test je push pop andl cmp fiaddl add jl push jo dec rcrl call mov push out daa xor rorb ret clc std xchg jmp inc outsb sbb mov loop inc mov call ja nop (bad) je add jae in xor fsubp outsb pop out pop sub fisttpl jge add jbe scas (bad) add call push les lahf push add add cmp test sub test sahf pop mov xchg add xchg int call mov push mov push sub push call mov push mov dec xchg pop or or xor add mov inc adc mov popaw loopne in add xor sbb add mov pop xlat push xor sbb loope jne add or mov sub and hlt xor rcrb mov xchg movsl rcrl and inc add push mov nop cwtl cmp dec xor mov fs add lock jge pop inc push add xchg scas movl cmc jns xchg inc fisttp loope shr rolb leave stos sbb and and sub mov sti mov adcl je add push data16 jo pop inc mov inc mov mov add cs lods imul (bad) cmpsb aas adc daa or jmp push sub fsubrs or and add cmp cmp xlat out mov (bad) lock pop fldl dec out cmp adc in call xchg jo add insb jle add push and sbb lods test enter add ret andb pop imul pop mulb adc pushl (bad) mov push out add cmp push mov stos iret aad pop cmp test pop les sub popf stos (bad) adc test fsubrl adc jns dec aad pop je xor (bad) call in cltd mov add imul add jno push mov inc repnz cmp pop mov ret pop or adc inc pop sbb rorb clc add pop and loop or inc in add pop testl aad add pop out add in loopne cltd lcall xchg push sbb lods pop pop mov xchg and xchg inc lods lods enter es jbe roll push mov jmp popa add je sbb xor push loopne int3 add enter sbb jnp sub fimul mov outsl or mov jae stos ret js sahf (bad) cmc popl sub mov nop setbe (bad) xor mov or (bad) xor dec out js add mov rol add mov pop dec push inc pusha push fisttpll cmp pop sbb add inc roll push in jp out scas mov (bad) mov push lret xor inc jne mov mov pushf add push push inc cs int3 or and pop movsb pop add push enter bndstx in mov loopne add loope cmp sub popa scas jl add sbb out inc cmp mulb inc dec dec (bad) fiadd dec fisub pop popf sar loopne,pt xor adc xor fisttp adc pop pop (bad) ss arpl aas adc inc jns add adc and movb or mov lods sbb repz inc (bad) jbe daa sbb sbb dec sbb mov push loope insl sbb add in or xor push push add test jno cwtl or test xchg pop (bad) stos icebp pushf icebp imul cmp mov add aad inc (bad) pop lcall add cmc es or mov out pusha cmpsb pop jne mov push and add scas pusha in sub test push xor dec icebp loopne adc sub pop out or push dec mov scas push or and add in popa sub fist mov dec jo subb inc sti ret adc mov and jne add xchg jae mov js mov add test subb xchg gs (bad) cmp xchg xchg jb add and repnz cmpsl cli inc lods add iret mov rclb push fdivs xlat add pop cmpl push cmpb push or mov shlb loop bound adc mov or in je and sbb andl dec movsl add dec (bad) cwtl stos int scas xor in xchg cmp negl xor hlt pop add fadds dec and lcall mov add mov jle ret mov cwtl push lea sbb lret mov sbbb or loop int3 adc mov ret add ds add xchg pusha mov mov mov ret jns ds add mov js ljmp lret and mov lds out add arpl in mov xchg jge call mov fldl pop rcrb xchg mov outsl xor fidivl xor lahf idivb mov iret add inc xchg mov icebp popa xchg out add and imul fwait popf sub dec sbb lods sahf test sbb add dec push adc arpl push cmp cltd sub push ss mov cmp js imull push and and sbb (bad) insb addr16 sub xchg add push outsl mov dec cmp jns movsb or das jl ja add je push lret movsb les fistpll out or xor cs inc add inc stos (bad) int3 pop aad xchg cmp cmp sbb mov mov or popa dec xchg addr16 and mov fisttpl mov and lret xchg in sbbl mov add mov pop jge sbb movb cmp test mov add xchg pop call inc push pop xchg leave xor pop xor cmp pop pusha xchg inc or loopne sbb ficom hlt add pop idivb add out rorl fsubrs mov sbb dec inc icebp or dec fcmove jl adc or insb scas add test push inc inc fmul out adc dec dec pop sub test lods ret sbb int test add idivl sub (bad) cwtl movsl xor or (bad) adc hlt sbb sahf ljmp push mov roll pop rorl cltd fiaddl cmpsb or jo xlat jns inc popf xchg add (bad) insl xchg mov jo clc lock jnp dec inc sbb push movsl pop icebp (bad) or test dec int les js sti add cmp mov cmp cmp scas fldenv adc (bad) lods add ljmp adc and fwait js cltd cmp add pop lret or dec sbb and popf les out pop add pop dec leave aam hlt or adc call into mull mov pop cs (bad) inc mov sbb push sub dec movsb adc adc xchg pop cmp mov stos cmp aad cmpsb add insl loopne and inc popf add sahf lret dec sub jg push (bad) leave inc (bad) (bad) out call mov daa (bad) jb imul icebp shrl movsl add les shr or xchg lcall adc les loopne addb pop and lcall fs mov pop fmuls dec jno cwtl xchg inc popa inc add aas movsl xchg scas loope addb push vmovq sbb mov stos out arpl mov cltd and shrb mov jge sbb adc dec mov adc rclb push lock sahf aam cmc xor add dec cwtl jmp cmp clc push jo add or dec add or rolb xchg orl fadds mov aaa nop loop pop push inc (bad) hlt or les js daa pop roll mov jl data16 xchg inc xchg mov add int3 jp lea leave mov movsb dec outsb sarb pusha je or fs loopne cmp sub mov mov inc cld jge add adc add rep mov inc repnz mov dec mov enter rcrb mov outsl lock add adc sbb pop pusha pop loop shlb or and sub sub jmp mov jp clc xchg cmp xchg sahf and aas lods mov (bad) stc cmp testb xor out dec xchg add cmp and pop rclb mov and xor add mov (bad) pop addr16 xor sbb mov or out cwtl and stc cld add mov adc notl addl adc or jbe in sbb mov add adc add movsl and xor sub adc jne adc sbbl mov pusha push jns clc imul jl leave hlt jl sbb nop sbb pop mov stc lret add xchg push aas cli ret pop jno jo add jns jne arpl mov mov outsb push fistpll je jns pop int add jnp call inc mov subl les incl ret sbb out cmpsb mov lds mov lea loopne or scas add or scas push or pop add pop jb cmp sbb call imul addb pop jnp add adc sbb mov add rcll out add inc cmc cli jp (bad) mov int lcall gs (bad) mov sub test and add pop rcrb stos add pop xchg add pop mov xchg add std pop mov (bad) mov push xor xchg inc cmc out dec mov les sbb rcrl add int3 inc iret or gs add dec pop ss pusha xchg data16 jae rorb push lcall dec icebp mov sbb add lds pop aaa sub sbb push lret sbb mov push lods cmp addl rcr add mov mov add mov jo dec rcl (bad) mov mov test add inc jmp rclb cmc out pop or jo cmp pop add push lods inc cmpsb incb mov push mov adc mov inc (bad) jbe xchg jo cld xor std add test xor add xor insl stos pop sub mov add push dec add pusha inc js and xor out (bad) sbb pop std loope iret cld mov jl clc adc outsl adc sbb das repnz in movb or inc add rcll dec jnp aad addl sbb (bad) mov jg setno (bad) icebp subb ds out jae lret and cmp inc add inc sub daa cli jg out fcom xchg pusha sub push rclb inc aad and mul test xchg mov pop fdivr pop mov adc hlt jae add leave icebp enter pop add shl (bad) imul cmp (bad) in or loop pop xor loopne rorl (bad) cwtl add dec mov nop inc mov adc push add pushf cmp mov rclb lret dec cmpsl stc shl add stos mov xchg add xlat cld insb mov pop fwait nop cli andb in and insb mov repnz pop mov aas shrl lea xchg fiadd cmp mov adc mov xorb fs add imul inc pop add push out add test inc lea add xchg mov test add sbb dec loope dec les add leave ds jle pop fimull inc xor add sub pop xchg fist imull (bad) repnz sti dec ds mov stos lcall push pop add pop out mov xchg jge or mov lret incl add jb and mov push imul push dec fadds (bad) (bad) in cwtl jae fs cmp out gs sub pop aaa push or mov or xchg add dec mov add pop repz pusha xchg sub add mull clc mov cmp add lret mov sbb aad or loopne mov add std in pop rcrb mov or cmp add push sbb (bad) outsl dec adc add (bad) xchg add out outsb scas mov sti int lock aaa add lret push scas cmpsl rclb fisubr sbb add movmskps ljmp iret add push mov mov or fs bound ret sti ja iret mov ljmp faddp pusha inc mov loop add scas jl fsubrs in mov or add movsl outsb and enter leave pop subb aas decb mov out arpl notl jle dec push pop add add mov jge clc lret add lods mov xor (bad) xor rcr sahf jae icebp hlt pop add lret mulb sbb test inc jmp cmp stos imul call int movsl lcall pop (bad) in scas (bad) jbe call enter sub pop xchg je call mov add add add fadds je and push jmp xor lds and sahf outsl cmc leave int3 psrlw fistpll test pusha int icebp fsubr jb rcl push gs sub (bad) bound je outsl call lea pop inc cmp out add push mov or dec push xlat and add add sbb push bound mov xchg pop or xor mov cld sub cs in int3 jno mov popl or sub add push jb cmp jae add int3 mov nop inc mov dec in add dec data16 leave sti mov (bad) repnz fsubs mov and add inc nop dec push out (bad) xor push dec inc jnp jb push inc popf mov add popa xchg pop adc xlat mov inc cmp sahf jo add cmpl add fist shr and pop add jne int in out insl ds lret lea jns mov int3 in inc xchg clc add or inc pop xchg jge xchg shlb dec sti xor lea pop mov lock push jae repz test fldl lahf jnp pop inc orb cmp fdivs stos or aad jl pusha cli add clc cmp xorb lahf or xchg jle jbe jb add push test add (bad) and pop dec mov loopne sub xchg aam str popf fcmovne ja add js push ja loop popw insb pop jb push pusha addl adc xchg lea dec test push mov push pop sub (bad) mov (bad) cmpsb jns jmp hlt cli xlat fiadd ficompl mov loop in leave pop jge or mov add dec jecxz sbb stos lods rolb jnp ljmp lea pushf fdivl enter inc lock sbbl jmp pop cmp add aas fisubrl rcrl or push or add add ds in dec and cmp or (bad) nop xchg add pop jmp push stc mull xor out ds lcall (bad) in popa mov cs cmc push cmp mov sbb xor jl and or es xchg sub cmp dec vmovupd sbb insl popa add out addr16 sub loope sbb lds sub mov lea add enter popa rclb in push sub push dec jno mov pop out push rorb xorps negl add push mov jmp add pop arpl cs icebp pushf xor cmp pmullw inc or inc dec xor add insl pop push add cmp cmpsl add dec outsl and movb mov sub push jl xchg add pop mov (bad) outsb test ja pop xchg mov xlat add in pop test jp add push xchg add xchg xchg inc cmc xorl fs sub dec xor call push jmp lahf cmp in idivl cwtl or add push xor pop mov dec and inc and add sub mov inc mov mov jns mov orb push (bad) adc adc cltd pop je shr add cmc js pop nop cmp subl lret mov adc dec int3 dec mov inc roll aad add ret rcrb adc orl xor into mov and fldcw jb cmp adcl dec addr16 xchg or cmp insl ret adc rcl and aaa scas loope stos mov sbb fist or icebp rcrl int3 loope pop add cmp adc xchg mov in (bad) or lea dec xor add lcall lds mov iret push xchg fstpl mov add cs lods (bad) and adc pop (bad) sbb pop rorb xchg icebp inc cmpsb subb mov mov addr16 add sti xor mov or fimull xchg leave fildl stos jge sbb dec sub add mov xor es bound dec mov fadds dec jmp rcrb cwtl cltd dec (bad) xchg loop cmp enter fnsave push sbb lds push lods js ja sub push stos outsb sbb fbstp movsl movsb (bad) mov add xor hlt es cmp xchg cltd int (bad) loopne mov jno add and jl fcomps inc fs repz add dec fildl ja lret daa ret sar mov sbb adc inc xor gs ret in sub or adc add add fstpl or mov cmp ljmp notb stos add and outsb pop aas pop xchg push inc inc mov jl cmp (bad) je sbb (bad) cwtl (bad) mov lret sub mov cmp outsb adc fcompl les imul out out add sbb dec ja adc imul out je or jno add cmp mov add mov out dec mov jae xor add push sub mov sbb inc and or clc ja loopne xchg add mov repz adc add (bad) jnp lret addl mov aad jne cmp or inc mov nop dec ret inc lret or xchg pop leave and mov adc orb pusha sarb bound shlb xorl scas or fs andl lods (bad) adc outsb in ficom lea sbb cltd or outsl mov out add insl in sub sub add repz push dec add mov mov mov in (bad) repnz shrb add ss dec mov add adc mov xchg push sub cmp movsb test pop test mov pop pushf pop add jge dec mov test pop lcall push mov insb or movzwl pop call push outsb pop sbb cmp cmp int3 add scas jne sahf jge add std dec andl adc outsl push dec sti scas iret aaa push jmp cmp add loopne call jns outsl pusha fwait push xor (bad) jns mov xchg pop nop sbb xchg mov cmc not hlt xchg sarb cli mov orb int gs in jmp daa leave pop xor add xlat imul lods pop sbb sti nop lods cmpsb mov pop or jo frstor add jecxz rcrb bound scas add dec lods push movd dec lods popf dec bound popa loopne jmp mov aad insb ret repnz push mov cmp cwtl addr16 add xchg test addl ljmp push add inc push adc push add fisttpll mov sub out rolb add and jge pusha sub cmp sarl pop roll movsb arpl add add push xor mov xchg adc pusha mov (bad) add std das mov in add cmp add das xchg movsb fstl call push add cmpsb fild popf bound frstor fiadd pop repz loope pop jns add aam bound out dec inc scas into lock ds inc add fucomip mov xorl jae add mov and inc test add mov add push fcoms adc jl add push lods hlt sub pop jmp mov jo paddusb cmpsl dec and mov mov cli insb out xchg jo fildl add insl mov mov fildl fidivr adc cmp and pop test cmp fidivr lcall xor jp cld jge xchg jp (bad) lret insb push fild aam nop inc outsl test jns xor fadds push dec fcoms mov leave mov or out and call popf add adc mov scas push sarb mov rorb push sub jns shr and add cwtl mov add mov mov cwtl cmp bound stos xor add inc mov add adc sub test out mov mov negl adc cmp sbb pushf cmp inc and and mov lea pop mov sbb divb add pop js add jae pop push mov mov rolb std cmpsb mov pop mov add out adcl or pusha sbb rcrb (bad) jo mov stos add sbb sbb cmp sub add mov cwtl sub jb push movsl sbb inc imul rclb into add sub (bad) fstpt pop and inc add dec (bad) sbb popa add imul add push inc (bad) loope mov xchg repnz jmp sbb inc or add (bad) add cmpsl adc jg jnp ret fisttpll dec add scas in xlat sbb gs pop dec into int3 add mov movsb int (bad) add add mov push mov bound jne pop mov and cli addb movzwl add stos test adc inc add jle push gs jo dec push jp aaa lcall pop lret add mov add lea pop inc add or shrb mov test mov stc and leave or adc push js icebp stc and js (bad) hlt push add jbe mov fs sub dec xchg jns into sub loop jns inc test push call testl arpl adc int3 add std add dec push or mull scas jbe mov mov outsb sti insl int in push rorl pushf or addl add aas mov jb jne stos push fxch sahf clc lods xchg repnz add xor pop inc add adc scas add lret sbbb mov xor pop add (bad) call push aas lea inc repz sbb inc out add add adc cmp add and outsb mov pop add std or decl sbb pop push jae xchg push loopne dec mov push (bad) imul sub lahf outsb repz call add push dec cld sbb pop add fs xchg mov and cmp pop test jns lods push jbe add cltd cmp pop aam mov cmc in test scas add loop clc push add pop mov push add dec das cmp or addl xlat out jbe or dec push gs ret xor popa add out jbe inc xlat cmpsl jno and jle adc enter adc push fwait mov cmpsb push sbb test ja js add lods loope in push lret add add test add std and add lods pop ror jg add push movsl cmp pushf fadds js pop jo add inc scas ss cwtl leave movsb push xor pusha and stos jg stc mov or or jne aad (bad) sbb mov mov clc jp pop mov add jle lret dec add data16 add (bad) jb add mov jle mov push cwtl call (bad) invd add in xchg ret sbb ss fcompl lea aaa sahf cmp and bound pushf shrb inc addr16 and fcoml arpl or pop mov clc popa push stos getsec ret fstl ljmp roll mov xor andl (bad) jle mov dec dec push fst rcr stos sbb fistpl clc xor aam mov jecxz cmc jb sbb xor mov pushf add rcll push jl nop pop jmp inc out inc jb aad adc lret push sbb add xchg xor inc add clc sbb jne inc push add imul add imul sbb sti dec mov push sbb andl insb pop movsl inc push add xchg add (bad) pusha popf nopl sbb insb mov pop in add jge adc mov and cmpsb out data16 mov jne jno inc add dec fsubl fmull add mov add add lods jge add lods aas out sub dec add mov mov push jecxz pop xchg sub cmp mov inc inc xchg cmp icebp (bad) hlt imul test movl add mov or add jmp inc inc add cmp add pop out mov add ds clc lods pop sti cmc add push jle add cmp jle call jge bswap jns sbb xchg add jg pushf psllq mov or xchg mov xchg mov fiaddl insb call xor lret popf xor cmp (bad) fs imul push jbe pop jb xor add mov aas mov loop adc pop add inc xchg (bad) mov shl decl fildll daa pop scas pop shlb pop xor xor add popa mov mov pop mov xchg cli jb testb lahf jno add sbb adc loope incl (bad) mov ja add (bad) jge push adc cld xorb sub add inc push aam sbb sbb add bound cwtl cmp jge jae adc lds je mov adc or xorb and or pop (bad) add loop cmp nop mov outsl add les mov xor mov and dec ja push sub pop sbb add sbb and jge lea pmulhuw jecxz pusha leave lret call adc setae sbb ss cmp add jle lods das push adc mov nop cmp lret inc popa rcll lea js xchg sbb sahf mov les pusha add inc aas (bad) jo mov xchg sbb push loope cs mov push mov jae jnp nop and test inc add adc in lahf pop and ds sbb hlt jecxz std jmp cwtl add mov add push les test xor clc sbb jno add mov sub rol dec mov nop mov fldl2t sub imul dec dec xor movsb std rcll inc out inc dec adc pop push cs or es push mov and adc push daa xor nop/reserved mov add aas dec add add adc testb repz aaa mov imul mov adcl mov imul enter and add ss adc rolb push sbb jns cs add mov lock jge add mov dec xor jg push sahf sub cmp insb imul pop cmp push js mov add test aas cli push stos fld add xlat dec add ret jb stc dec subl or inc movsl fstl jne or ds test popa gs jbe jle push sbb push cwtl loop xchg dec enter sbb andb loopne add or push or rcl inc adc int3 mov aas add mov adc movl add insb jae xor (bad) je mov mov mov jp pinsrw orl popf (bad) xchg adcb add sub adc add xor pop pushf add inc (bad) fldenv arpl fadds or mov inc fnop push add jmp cmp add insb cmc push inc rcrb sarb rcrl jo ds out int3 xor leave nop (bad) sbb fiaddl les add sub lcall out jmp mov aad cld insl add sar add pop push push sbb cli lahf xor cmpsl mov ljmp add inc lcall dec add jnp incl sub lods (bad) (bad) dec or es clc inc jg sbb out ret sub jmp mov xor movsl nop add hlt or pop test sti clc xlat push loopne (bad) add shl cs js or add jno test and dec shlb inc pusha addb jo jp sbb and jne add jno add push in pop mov push shrl call sub jge loop bound add aam mov add pop addl pusha mov shlb imul out lods les jns fwait es daa dec adcl add mov pop dec jnp add xchg pop cli js lods add inc ret mov xchg enter add cmpsb out jae std or ja adc push xlat pop sbb jp jecxz,pt dec adc or jbe stos and dec (bad) repz sbb fldl xchg xchg mov inc add pop inc roll idivl fbld inc mov cmp inc adc cmp dec mov add pop icebp add pop mul into enter add pop jnp fisttp add sub aas in jns decb loop add jbe hlt add jb out sub (bad) addl dec data16 nop (bad) jle and ljmp pop stc mov (bad) jp cs stos pop pop inc cmp mov lods imul negl jge jae add sub scas mov inc sahf ret pop repnz jb pop xor incl xor add cmpsb stos inc jns dec lods push sarl add pusha push jb push in cmp pushf add insb popa add cmp xor and mov dec sbbl pop push inc fsubs das add push (bad) aam sbb mov add loop jno sub jae mov add (bad) test mov and jb pop (bad) les mov addb jbe add adcb mov lahf leave pop mov jo or aam push add cltd (bad) pusha sbb (bad) xor cld cmp loop xor lock cli pop out mov cmc add adc ds and outsl mov dec dec push dec push cmpsl jge mov push in fcoms mulb cmp dec add lds jl mov and or or pop cwtl mov in lods pop mov rcll cmpl aad xchg pop mov fistpll xchg sbb fidivl in add jecxz cmc ret les in and popa or inc test or fs or je es mov or and adc movl stos mov cmp iret sti pusha outsb sti pop (bad) stc add loopne popa lcall rcll in aad pop push add mov dec sbb hlt cli aas push cmpl add movsb jge dec sbb mov jno xor sub dec dec pop inc cmp inc loop dec push sbb xadd sahf mov jno add push cmpsl (bad) jo imul (bad) mov push fldlg2 and sahf or inc or repnz sub add push nop jg les (bad) dec fwait jns sbb bound and aam imul mov sub add mov dec jecxz sub (bad) add cmp adc dec inc cmp and stos jns,pn cmp push jp addb (bad) xchg inc push aam xor adcb xor and jo and and mov xor push idivl jbe (bad) or add pop push xchg aas nop sub sbb out loopne pop sbb loopne xchg rclb aas or add lret testl push mulb out dec dec stc jge add add ficom mov mov call jl les and sti add jno or add int push je mov jb push inc inc test (bad) fs int3 dec aas lret jb mov cmp ret mov pop repnz sbb lods add sub daa je bswap jecxz movsl loop scas inc rclb xchg fmuls sbb cld or jb or push mov lock das xor rcrl mov or and fildl add mov sbb push jge flds nop cs xchg push mov xor dec pop adc or push (bad) mov pop dec push faddl cld and jno add add mov sbb fwait test add sbb out push hlt les lret lds cwtl and mov add adc add cmp cmp sub push and push cmc jnp add fwait popa pop xchg adc push add out ljmp mov xor in pop rorl mov add add daa pop pop mov push fldl mov push inc dec mov inc jle cmpsb push (bad) jp add mov int3 inc push add lock aam sbb push and add mov orl dec inc add (bad) xchg cwtl ljmp out fs add pop pop mov adc (bad) repz cmp add mov or xchg (bad) es jb add pushf cmp test adc lret mov mov nop xor add pop mov add push mov and lret or sahf movsb addb orl gs bound pop jnp add cmpsb sub pop stc loopne adc cmp or pop mov mov cmp scas push jno mov xor (bad) (bad) jl pop mov or sub das mov test add sub outsb add rcrb pop cld add xchg or in in sub xor xor push bound loope je jle pop lods das xchg gs mov iret fs aam push mov mov adc inc add iret jmp sbb sarl cwtl mov aam jmp ds (bad) mov push fnsave mov jmp test rol pop pop cmc push push push scas inc out inc dec clc dec add (bad) cwtl adc mov leave add inc mov jb (bad) mov fcmovnb xchg push xchg and ds jp mov (bad) cmpsl imul jg add push out pushf lcall js,pn addr16 pop hlt into insl test fist inc add pop popa mov and ret xchg mov xor add (bad) test (bad) adc add imul lcall pop mov push lods jno add adc dec add sub jae dec je push add jg or xchg in repnz cwtl test add lret cltd jo aam inc fistpll lock mov add cmp mov mov pop sbb add fwait pop mov addl xor cmp repz add rorb loopne xchg inc add jmp and xor mov cmp sti pop or std xor adcl (bad) cmp (bad) or inc add (bad) mov sub lret pop or lds add push sub mov jbe rorb ja jl jp push adc (bad) jecxz aaa adc pop mov sbb xchg dec or xor add lret push cmpsl ret inc lods and dec and fwait mov sbb xchg or pop add enter daa add out mov cld popa cmp inc mov cmp sbb mov jmp or add and lods add inc repz add xchg sbb adcl add and lret xor inc sub jae rol inc add insb je sbb ret mov aam or cmp xor push faddl or scas mov add add push das adc cltd (bad) dec in jmp push sub outsl and pushf inc incl ds nop pop push leave jmp add mov add xor outsb pop pop dec std lret rcrl jmp (bad) int3 inc cltd inc sub push sti pop sub andb add shl push push mov mov push das or add sbb cmpsb or sbb scas cld jo jns push sub icebp dec jmp pushf add mov (bad) cmp out sbb loopne push test addr16 arpl inc xchg lods ja xchg inc test out push in dec test loope push pushf (bad) je pop sub push out xor or sahf (bad) (bad) call push cmp inc and clc jmp fnstcw pop add mov idiv cmc add jno mov add inc cmp push loopne mov add lods and pop cmp cli mov pushf ss outsb rorb add hlt xor add sbb fisubr dec fadds pop pusha in inc mov lahf repnz and mov or test in movsb hlt add out mov fwait push cmp inc int and sub cmp cmp push andl xor fdivs pop addb out and and hlt prefetch or push pop clc add lret add jecxz cltd inc cli fild add jg mov dec out sub je pop fiadd leave rolb push nop andb sti push rcl flds cmp sub adc xor lods add cmc daa add pop add pop idivl cmpsb add imul xor pusha add mov stos movl push xor int3 add cmp outsb add rcrb xor mov cmp mov mov stc (bad) xor jno or adc addl rclb popw test jnp (bad) jno ret (bad) outsb or cld lret shrb addl test call mov xchg jecxz shlb cli add (bad) mov mov dec pop pop adc repz clc pusha mov or mov repnz jl std orb or jns pop pop pop cmp gs (bad) cwtl and imul in and dec inc popf xchg lds push dec mov sbb pop insb or jnp mov pop (bad) push movsl cs les push in add mov mov push push lock js jge sub push mov add sub dec inc and add shr xlat rolb in lds dec mov add scas jecxz,pt loope or mov pop fildl push lods loop movsl lahf sysexit mov sarb sbb dec popa cld dec jae pop notb push imul jp ds add cmp sbb lahf or mov xor push add add xchg xor (bad) fwait xor dec lods mov daa pop jnp loope cmc sahf or xor test pop xchg dec jge pop jae xor aas xor movb add aad jl negb xchg inc cmc mov add pop in insl jl xlat add imul js adc cmp add jnp push mov inc xor mov sub cmp inc push sbb popf dec mov jns test xor test or mov punpckhbw movsb mov jb in addb and xor dec cmc push mov popa pop and inc int3 jb mov mov pop rolb daa (bad) loope mov pop cmp mov test insl or pop add int enter push mov roll sbb (bad) mov gs outsl movl or or sub adc inc loop sbb xchg cltd mov mov int or add stos xor rorb adc outsb sbb movsb dec (bad) and mov add or sbb lcall mov sbb pusha out and mov andl loopne ds add mov push cmp add ret in dec in jmp jb in call add pushf stos add add pop inc sub and push stc xchg mov int3 add iret mov repnz nop rclb add cmc arpl cwtl xor aad sbb out push mov les fmul mov sub jo out xor (bad) jno jmp mov test es pop mov and clc add adc icebp jne push (bad) test add and pusha or fwait in in sbb sbb loop subb movsb in lock lsl scas orl sub mov pusha fs loope mov outsl dec pusha push fild mov or sbb and and and ljmp insl (bad) adc lock and mov lds cmpsb add and jno mov or inc rolb (bad) jle dec cltd ljmp push mov mov jne add and jg pop int3 jns add xchg jecxz xor and xlat lret inc mov inc cmp jno fdivrl mov enter add sbbl jmp xor cmp inc mov xchg dec ret mov cmp add loop xor xor mov sbbl sbb or push scas std or popa aaa pop fstpl xorl xor cwtl shr mov cmp movsb xor sbb mov shrb mov cld adc xor movsl add jbe aam xchg sub sub sbb mov jp repz gs inc inc pop cmpb aas or lods pushf aam dec mov stc fwait dec mov add leave or dec add xor add (bad) mov nop sbbb sbb cmp jae xor adc jns add test sbb xchg cld or notb orl popf or sbb add cltd test add cmp imul mov lock mov jmp push enter add adcb mov push dec pop popa mov adc lock lret add outsl add cmp fadds ror add mov cld cmp inc push xchg inc or adc add inc pop pop xchg insb cmp sbb loop adc lahf add (bad) mov add sub cwtl movsb push push and jg mov test sbb repz (bad) div shl dec add loopne mov (bad) cltd dec sbb mov mov xor insl sub imul dec lock (bad) pop mov leave into sub dec cmp mov aaa shrl lods popf lock sti xorl sahf pusha pop (bad) mov outsb pop xadd mov or test test lods std arpl push dec inc mov add add scas mov jne adc (bad) mov lock xor ret repnz adc and loop test mov push or dec add mov cltd test fbstp cmpb push data16 mov andl imul fiadd cld mov fsubl add dec nop daa movsl jecxz fisttp clc mov xor popf dec in inc and insb jbe test pusha jle lods dec add jg loopne ja lsl dec jb inc insl cmp add push jo adcl add pop out sub add cwtl popa inc mov add movsb fldpi or rorl add push call cmc stos aas addb add or out cmp (bad) jmp add mov (bad) jo ljmp mov incl ret mov inc adc sbb ret mov jno push (bad) in fcoms sbb or daa xchg mov and inc repnz bound or call add fimul jnp pusha xlat add xor (bad) lods mov lock aaa sub xchg cmp loop stos push (bad) mov int3 sub sbb sub sbb jnp sti shlb ja and les cmpsl sbb or imulb (bad) fidivl (bad) testb iret cmpsl mov xor mov inc ret push imul arpl push mov lcall add faddl pop xor add add push cmpsb mov movb mov pusha dec mov out xor test inc cmpsb call ret sti or or adc add fildll rol add xchg aam and out push insl popa mov fild adc sub push sub xor push popl jbe out xchg call or adc add pop mov add in cmp or scas mov push jnp add push push add in clc imul dec add call or in sti mov movsb lock xorl jae mov add xchg and push xorl mov aas sbb sbbb sahf adc imul pop enter add lods les add outsb xchg xor xlat ds mov mov loope bswap call jecxz shr mov ret aas add (bad) add jnp js add stos mov cld add mov or add ret sbb mov add data16 or idivb mov dec jno push jge aas mov imul (bad) leave aam test gs mov add cmpsl xorb adc add cmp in pop push call js loopne xchg jne int3 add lea movsb fwait in and mov clc inc add xchg jg ret test sub xor push mov loopne fdivrs ds movsl and jge adc cmp inc mov rorl lds add xchg pop negb scas mov mov adc sbb cmp lods add fdivrs dec add xchg mov fwait or push push leave fstps add inc ret sarb fldt nop out mov adc aam add cmp fmull jae mov lret pop inc rcrb push pop subb data16 add jle jnp popf add or in es outsb mov roll lea icebp dec xchg fcomps fcomi jno sbb pop test mov xor mov punpcklbw insb (bad) jbe add gs sbb add loopne sbb mov push addr16 cld scas fdivl pop inc pop xchg dec jge push mov cmp daa jae push mov popl cmpb dec cs pushf pop stos (bad) ja sbb mov aam pop sub mov or add inc mov or and jbe and pushf add adc (bad) cmp push jo jnp rolb int3 popa jbe into sub or pushf hlt add and loopne mov ficomp ja pusha (bad) lahf add lcall push mov push sbb outsb aas add nop mov add enter mov xor mov or in out mov jmp fldcw jne add stc mov adcb test and add push jne lcall mov hlt mov jne adc push sub inc nop ljmp sub jle push xor add clc daa rcrl (bad) xor mov inc mov mov add repnz mov push jns add outsb sahf (bad) jmp lock jo loop cmp loope add ds clc push lcall cmp shlb mov loop push js daa stc jno dec mov mov adcl jmp ret sub or pop cmc sbb mov adc push add fcmovu dec mov push (bad) jae arpl in adc fstps push or clc or je sbb xchg xor aaa dec sbb add mov jmp andl fildll and mulb test jmp pop xchg insl int3 in push int ror std repz adc enter ljmp mov add fdivrs negb in add adc push dec movsb sbb push scas add sub xlat add cmpb or xchg mov cmp add push popa jnp cmpsb add aas lods adc cmovns loop pop cmp in out add push sbb add aas or sbb pop stc dec mov push cwtl cmc adc inc cltd call (bad) (bad) imul push or sbb cs xchg add pop ds lock push lret mov addl je loop push xchg and repnz jns dec mov daa les sub xchg xchg mov roll iret (bad) inc sub pop lea (bad) mov cltd fwait and xorb ret or or push in and add cwtl nop add jae rolb aam inc insb lods jo pop add lock mov jp sub mov sbb jl add dec pop lock lods call push fs or inc sub sbb cmp loope push add pop xchg inc pop mov movsb lret xchg add add test add push or mov add push jl adc cs push adc mov push cmp xor mov movsl iret pop (bad) pusha pushf cltd shrb test bound pop inc lock fsubs or or sti dec xor cs icebp or inc xchg inc popf cli xchg jae outsl jp das inc movsl mov pop pusha xchg fist or add pop add icebp divl gs xchg xchg (bad) adc push lods push test imul sbb mov lods sbb jge add and pusha enter push cmp pop fdivs orl ss out add or ds inc repnz faddl add inc mov loope push mov adc cmp bswap sarb mov mov into pusha cmp mov or push mov or popf add xor inc mov loop dec add and add jg scas fdivrl lock jle add push pop fs test adc ficompl add repz inc test aas mov add sub pop sub js out adc jb rcrl push cli sbb inc pop lea loopne xchg mov mov pop add mov das xor cwtl sbb notl fwait mov shlb and stos push nop std lcall inc or les mov sbb inc addl icebp stos add adc outsb ljmp lods sarb mov std and push incl adc cmp adc fiadd push sub pop rcrl or add repnz add cmp push cmpsb fild xor xchg sub mov pop mov lods add mov sbb pop push sub std mov adc cmp xor fiaddl loope xchg or pop enter fildll pop shlb adc add or dec add rcr pop ja mov add cmpsb js stos pop out daa xor aaa push (bad) stc sub add lds insl xor cmp inc aas fild xor or clc and stc rolb cmp lds jb dec cmp out dec ljmp hlt mov lods dec popa add jo push imul frstor add or mov rcrb push data16 and hlt lret icebp pavgusb scas pop mov iret or fwait mov inc jno call shrl inc adc mov sub push add cmp pop adc cmp sbbb clc adc xor cmp sahf mov jge add je cmp adc push dec add pop aad inc push xor add das add fiaddl pop add adc jge push adc jecxz mov (bad) mov pop test add lret pop les orb shrb js add ljmp scas add iret mov xchg pop pushf jne sub es mov mov pusha xchg pusha dec icebp repnz fnstenv xor push aas or adc pop pop test loopne fwait add adc dec mov adc movsb ret push add fdivr inc cmp cmpsl cmp leave and cwtl pusha (bad) mov adc mov dec (bad) ret jo out xchg lock (bad) push add (bad) jne pop dec and add and pop pop inc xchg mov xlat dec add mov rcrb add rol lock aam add xchg lret xor mov test clc ja xor add xchg (bad) add push dec in cmp repnz adcl enter repnz imul and cmp cmp mov jne in iret fisub pop xchg add jle push add je ret or out ret add outsl call mov jnp es cmp ja mov fdivrl jb test mov shrl add sub js add int ja test stos push mov xor (bad) push ret and ret out enter shrl push fbstp push xor and dec push sub rcl roll nop inc arpl mov add pusha cli test and xor push rolb push pop push push inc stc fisttp push inc add mov daa es aad jb xor push ret inc test push mov add fcomps dec mov inc dec rcrl or pop sub int adc xlat pusha popa (bad) repz add push inc xor clc imul psubusb sahf add cmp add mov adc enter pop push pop sbb dec push jnp push es sub lds out xchg ds ficompl xchg ret jns lock stos jne stos push or pop inc stos add mov cmp dec cmp stos mov test mov nop mov xchg jmp das cmpsl out or mov jns js add movsb pop xchg push dec mov mov xchg rcrb push sbb mov (bad) push add fcompl add xor imul cltd jne repnz push addr16 decb outsb add adc and add outsw jmp into and rclb sub cmp xor sub les inc push cmp fimul sub and lret add sti mov repz xor adc mov test ds stos lret int imul icebp jg negl aaa in jge adc mov and push pushl mov fs rolb cmp cs icebp or cmpsl jnp add sub cmp leave add xchg mov push jg add mov sub sbb add cmp les push (bad) pop sub pop xchg xchg sbb orl (bad) into add fld xor push outsl add roll mov (bad) call dec jae pop jle jb cwtl add lret lcall xchg cmc lea (bad) mov add jecxz push (bad) outsb and add outsl loop add and repz sbb cmp rcr dec fs push aam push repnz inc mov add jl imul add pop and insb in mov test cmp add jmp adc mov pushf jnp pop adc std pop adc add fcomip stos rolb jmp add gs ds lret sbbl fcompl ret fs add stc dec push insb add mov test nop inc sub call jge xor dec test sahf dec and cli push jle je cmp out pusha mov adc roll fdivrp jle push hlt arpl and or lret add dec mov push add popf clc jp mov rorl pop or adc pusha aaa inc (bad) pop add jmp xchg inc fimull xchg pop negb cmc out xchg outsb rolb out inc sub push pop pop xchg dec dec in cmp (bad) sub inc inc js jne mov invd out push sub add pop sbb mov out out adc or das inc add call aas out lret pushf add nop cmpsl sub frstor add dec pop test aad lods out scas cmc adc out clc sbb mov add aas pop mov push adc pop cmp push mov adc push pop ds je jge into ljmp gs sbb loope addl pop jb loopne add fimull or and push shrd inc stc mov loope push pop rcll dec sbb jbe or mov je add and lcall hlt or aam add out test mov (bad) call inc add fdivrs aam jne (bad) push gs aas inc pusha inc push push (bad) dec mov push inc (bad) mov fwait add and add into push pop add and mov (bad) xchg add inc pushf das mov or adc push js push repnz xor lret scas add jl out xlat shr fsubr cmp outsl add jle add pop push add push (bad) in enter sub lea nop scas fs std lret add hlt cld insb arpl and mov in adc js mov cmpsb ret bound jns cld add mov add adc lods sub dec fild and add pop fcomi add sbb loope fs aaa cmp adc add push sbb mov push aam or sub and (bad) sbb daa sti inc shlb cwtl inc add (bad) imul ss jle mov xchg lods dec cltd ret and ljmp push sub out push sarb sbb add out insb adc cld push add cmpsl xor pop add mov imul inc jbe jo and inc sbb and dec sbb mov jae or inc ja movl movsb aam fmull test lret add aad cmp (bad) ja in repz add push dec mov or lret ficomp sbb jmp (bad) in insb add sbb add imul jns jnp notb or in lea daa and insl cmp xchg (bad) dec jo cmc add add mov add add xchg sbb inc mov leave stos es lret mov fsubrs or lods add mov add (bad) movsb add cmp sbb jg nop mov add data16 ljmp mov push sbb pop in imul out mov lcall leave add add pop mov pop inc lea fistpll and push jbe and orb lcall in sbb xchg lahf add and mov stos mov push mov or add add roll in xchg (bad) idivl push in add jb cmp movsb dec sbb popa mov cwtl cld (bad) divl subb loope fidiv lods inc std test push mov pop add cmp (bad) fidivr mov ds push pop jo add xchg gs add ret (bad) xlat add pusha add and fsubr jg je pushf sbb out rclb imull mov fistpll dec enter lcall add in or movsl add add out out mov pop data16 incl adc dec xchg dec inc jnp mov mov adc add cmp lock pop or popf (bad) sub pusha std jo add add in mov setg xor lea jge cmp das test (bad) or jmp in sub cmp jmp sub imul stc fmull in fucomp dec xchg lods ret pop cli cwtl inc mov add lret je xlat rolb adc js shlb push add das xor adc and jne xchg andb mov loopne add inc push in sbb or add pop jb jo popa leave add xor ljmp pop call sub jmp or jnp push push add outsb push sti cmp in (bad) add clc sbb add imul inc mov xchg mov mov pop aaa adc pop rolb add int jae gs pushf sub inc pop xor pop add adc js mov std testl ficom into or pop test and (bad) and cld stc fistpll mov xor decb stos gs add mov mov sbb aam jmp cmp int3 fcoml and jl mov adc dec cmp add in lock ljmp add movsb cmpsl adc enter movsl or jae mov cmpsb sub add xor aaa stos sub outsl lret mov xor dec and sahf (bad) aad cmp int clc (bad) inc lret add nop in test mov add sbb (bad) cwtl cmp xor cmc lods sbb into pop add (bad) int dec push call cmp jg and xchg inc xchg dec mov sbb jo mov loopne push push mov xchg cmp cmp andb loop push ret cld pusha or cmp jo xor cs dec stos lods cwtl in nopl sbb mov push mov dec add stos push int3 lret andb cmpsb add ljmp sbb fildl cmp mov loopne stos jp xor sbb daa psubsb pusha add push stos sbb xor loope jae sbb nop daa adc test testl js push iret sub mov mov cmp inc cmp in rcll mov jl fldl call xor add sahf test cmpsl rolb (bad) push fcoml mov add fstpt in sub fwait das fsubrs push xlat pop inc pop in lret pop jbe popa ret clc sbb add (bad) aam add ret mov cmp daa mov sbb out cwtl add push es pop sahf push outsl rcl add xor dec daa call mov pop sbb dec add pop cld pop inc pop sbb jb sub hlt sbb add or pop outsl (bad) jmp es adc push inc dec lds add clc pusha leave fadd cmp rolb movsb out sbb mov jne aas push inc mov pusha add inc jns lret jmp aad insb push cmp cmp xor test andb dec sub les notb std cli icebp cmpsb jae bound sar call pop add pop aad roll jg inc imul stos jl cmp adc pusha rolb pop adc adc add shlb ret push jg dec xorb sub xchg adc add jp fs and inc pop mov das stos push push fsin mov dec and dec xchg cmp or adcl jmp cmpsl add notl push stos int3 add dec (bad) incl sahf add mov out sbb cmp add in (bad) in pusha jb enter cld dec add push test sub jb lret and jmp sti loopne add push rcrl xchg push push (bad) mov adc push addr16 mov jg ror xchg rcrl out clc orb pushf mov pop xor (bad) pminsw imul adc fsts fadds dec xchg xor pop cmpsb hlt mov mov xchg sarb (bad) mull call outsl pop dec pop push (bad) xlat sbbb inc adc loopne push (bad) mov cmpsl add push inc hlt or mov lcall aas jbe fsubrs push enter iret (bad) pop pusha movsl cmpl or add insl sbb and (bad) jo dec push adc adc push scas cmpsl cmp lcall sbb mov add cmpsl cs les fnstcw loopne xchg mov lods clc pop pop or (bad) incb fcmovnbe push iret cmp mov mov aad xchg push pop lcall inc push ja cmp adc mov mov xor and nop and fsts aam std add jmp int3 stos add inc xchg push mov inc jg shrb push sbb xchg xor mov test stc shr sbb nop add jnp fildl mov addr16 daa add outsl sub add cwtl (bad) jl pshufw cmpsb and add js cld dec inc dec jo jl dec xchg jae jp cmp fistl pop fwait or and and dec adc sbb add and sar jno or fldenv std js mull fs add (bad) insl sahf imul das popa or jno addb inc mov lcall xlat fdivrp addb test mov add pop cs aaa add mov ja add repnz pusha jl clc xchg adcb add xchg cmp push and test stos sti add sub ret cs inc add out je add fild int3 fiadd add mov adc (bad) or or add jb aam subps mov cmp jle add xor cmpb sub inc push ret pop cmpb cwtl faddl cli mov orl (bad) xchg and stos leave in icebp rclb jbe add hlt roll mov adc mov add pop inc mov xor adc clc adc xchg (bad) xor sbb add jnp (bad) mov pop jnp add push add dec lock movl add loope out adc popa fisubl add pop js mov (bad) mov add xlat in addr16 push add data16 inc cmp leave andb cmpsb aas add add lret cli dec fwait xlat js dec cmp aas sbb jmp test cmc shlb or gs pushf jp cmp jmp push mov add inc negb jne test adc dec pop add mov pop inc clc lds push adc mov test outsl pop mov stos mov inc pusha dec sub in jno call add lock add lret test mov push add fs lds aad fldl or pop dec mov mov dec pop adc add sbb xchg jo cmpb ret jns lea add mov (bad) mov aam rolb fisttpll movsl pop (bad) xchg add adc mov clc jbe jle adc xchg add dec arpl (bad) int outsb add jecxz and xchg add mov out add (bad) xor pop adcb imul subb (bad) aas pop adc int3 jle lock add pop xor mov pusha jmp jle out clc addr16 mov nop cld add fmul lret add and icebp sti inc lods adc mov pop fucom cmpl xor inc mov add mov test mov xchg cmp clc into aas dec and add lock sbb lods lcall dec (bad) bt and push call add inc pop add add sti xchg sbb xor add and jecxz ficom add mov insl aaa add orl int3 mov xor or hlt (bad) mov icebp cmpb jno std pushf jo adc mov lcall inc je push add sub fsubl jb rolb or add je ret pop sub mov push packssdw cmpsb imul and push or inc test or add mov jb test (bad) scas test nop pop push inc cmp sub or dec push pop lds cmpsl add (bad) shlb xor or rcr lret xor jle mov cmp cwtl pop out insb adc add bound imul xor clc ljmp rcrb cmp add mov imul into cmpsb add jns cmp into xorb inc dec inc push clc mov mov or les jg push imul add add (bad) pusha push add mov leave test add and das pop mov mov jno in fldl cli xchg dec or lds push add adc dec aas mov dec inc enter outsl sub push pop push add push lods sarb orl in imul aam movsb mov xchg int3 push inc add and add nop xchg in pop push ret call fs movsl add xchg imul add (bad) mov add test adc jnp mov or push fst rcr fildll pop add repnz movsl add mov (bad) push mov mov mov sahf pop add outsb dec imul sub mov inc adc sti packuswb mov xlat add inc lods cmp nop fwait aaa add xchg add in add mov out incl jmp in mov sbb pop inc shlb jae inc cmp and mov add sbb pop lret test add lods sbb or cmp jge dec outsb fwait push sbb dec (bad) push loopne out mov outsl out add loopne imul or incl push (bad) lret aaa dec add aad sbb cld arpl mov pop adc sbb insb orb (bad) jmp lods add popa ffree (bad) shrl test hlt mov add jno xchg mov push add bound (bad) lahf dec mov add sub xchg bnd fs xchg cli icebp inc add mov aaa jl (bad) inc add xchg insb mov adc (bad) xchg adc add cmpb aas sarl loopne dec pop add sub in lret push xchg mov (bad) cli jl add int fildl mov loop add xor test mov sub ds flds test movsl (bad) xor loope lds icebp outsl cs and add ret xchg fldl push push push pop push push out popa and xor and in negb jp xchg xor rcrb add push add sahf cwtl cmp cli incb sub mov xor add jp scas xchg call je push out add and xchg and testl mov xchg cmp testl push leave lods mov jnp call inc mov decb dec mov test jl iret add add add jb lods (bad) pop mov loopne (bad) test inc out cmpsl fwait jbe add dec lds mov loopne pop jns call shll cld iret add push sahf and inc sub sub icebp push jmp adc in nop push cmp (bad) or iret lock ret inc test scas xchg add cwtl add test jg push or andb pop sub or in push pop add cmp mov push lea insb movb cli js add pop ss and mov add fs or popa fadd add mov jecxz movsb add push xchg test pminsw call adc add mov xor je das add daa test fsubrs add in shlb repz loopne daa xchg (bad) xor add pop and mov push fcmovnbe dec (bad) (bad) dec add sbb add (bad) or push sub icebp inc repz mov jo,pn lea xor cli stc inc push add (bad) daa (bad) aad add sub cmp and hlt in movsl pop incb lret loope pop mov mov fadd sahf loopne stc sbb (bad) incl in pop xchg imul mov push cltd xor inc sahf add rcrl pop add adc push pop mov arpl jb adcb inc cli add popa mov dec add sbb (bad) pop cmp ljmp inc sbb mov dec add or pop mov rclb in movd test popa xor cs add daa stos clc pop hlt dec add pop mov pusha test sub in xchg into inc int3 xor pop sbb fdivr mov pop ljmp rcrl cmp loopne pushf cmp das add xchg sti fnop out xor sbb inc rcrb cmp jae int nop cmp addr16 dec insb sub pop mov cmp lcall add lock or add lret dec or lods jecxz out add push xchg add add pusha aam inc mov add es add xlat push mov add add jecxz sub movsb sbb call roll into es adc inc add ficompl ret and mov loope cmp scas mov enter adc lods outsb add mov jo rorl add (bad) dec pop (bad) rol add add sbb push (bad) int3 push enter add jnp sub xchg sub popf fdivr addr16 push xchg push loop add and xchg xor out movsb mov leave call dec and add int push rorb out sahf or int3 fdiv adcl fcmovbe push xchg les jp and dec dec or mov sbb adc inc push sbb imul inc int push mov jno iret adc add add lret inc cltd add push jmp cmpsl pop push mov int3 cmc aad mov mov jecxz fdivl in jp add mov add popa cli sbb lods sbb xchg sbb rcrb les outsl inc jns aaa fldcw dec xchg test jo andb js pusha mov dec mov aas jbe xorl xor inc rorb xchg xchg clc push add push loope add adc es jne movsb pushf into test xchg push dec call add cmp inc sbb (bad) lock sti push sbb mov (bad) mov inc or or cmp mov (bad) mov jae xor test xchg mov fmull push adc mov push sub dec sub lods cwtl cmp and call arpl dec pop in popf loope push add mov pusha sbb add jo push mov nop mov jl add lret fcoml mov mov and dec lods lahf shrl loope xor lock fwait ror add (bad) in xor sbb call push mov and add cwtl xor rcll or or xchg jp adc test mov adc and dec sbb adc dec jmp mov orl in xchg or pop push sbb loop insb iret sbb sub xchg rorb xor add add xchg mov add xlat mov inc mov inc adcb jecxz scas or lods add sub mov and (bad) es and pop cmc dec and push test mov push loope sub popf repnz lods xor ret std movsl psrlw sbb xchg jo add cwtl and xor loopne ds add sub cld aaa cmpsb dec cmp js push out int3 adc pushf fidivl sti psubsb adc rolb and xchg bound mov sub icebp inc and pop mov (bad) fcoms xchg adc xchg add push test (bad) pop push xchg mov ret enter enter ret push das push mov les std sbb pop lea cld sub inc (bad) push and pop pusha cmp nopl adc in cwtl aaa cwtl mov fndisi(8087 (bad) cli inc int3 add aam shrb mov cwtl or xchg (bad) dec mov add fsubrp inc and enter add mov jo xchg dec cmp pop add mov cmp cmp xor sub cmp mov icebp push test add imul and mov loopne sbb xchg and loop or adc nop inc push cld addr16 sar out or or dec into stos flds lret or sub inc inc mov dec lock sub pusha mov mov dec or rorl dec xchg call in loopne test mov xchg and sarb call pusha xor or xchg push dec and cmpsb mov outsl fmul mov add fcoms call mov or icebp mov add mov sub outsb mov push mov cmpsb push or mov push cmp pusha cltd adc ret test pop or xchg enter js mov inc mov movsb and inc dec xchg fs mov xorb push add movsb loope movl imul ficompl xor int aas test push cmp addr16 xor imul xchg rorb mov sub in fmul mov sub lret pushf push scas or pushf (bad) xchg and loope xor add and xor call scas (bad) enter pop dec dec mov mov cmp inc aas stos xchg add mov aaa mov imul sbbl icebp rorb adc inc cwtl add push nop add daa or sahf clc xor sub dec cld pop test mov push rcll in add xor cltd xchg add leave mov shll dec fcomps stos movups repnz adc int sbb and mov dec flds and sbb add ret mov daa and dec hlt dec and push add int3 cmp mov add arpl push fwait xchg add fcmovb inc jae pushf nop xchg int xchg push rclb fmuls rorb and popf leave cwtl and jns push stos add decl mov aam add fadds fsubrl mov mov (bad) mov ljmp in out nop pop add leave add loop inc fldt sub loope mov ds adc (bad) jno jl and (bad) jno adc inc cmp rorb lahf shll jg mov pusha sub cld cmp pop and mov leave add inc xchg sbb aad mov out idivl out mov cs movsb or hlt in pop sub mov xchg outsl frndint inc or and mov and mov lcall dec mov popf add faddl xor add lods add addr16 push or xchg xchg sbb outsl cmp aam sub sub adc xor add (bad) mov add fdivs jp cmp cmp mov (bad) or xor and inc add push mov and dec add dec clc icebp fsubr xor pop in xor mov aas and stos add inc aam test movsb lahf cmp vmovlps subb stc cmp cs xor sbb and dec mov push dec inc outsl mov aas xor int3 inc (bad) bound push das hlt loope mov add mov and mov sub mov dec es inc (bad) mov enter lret mov or inc sub daa lods dec xor add or daa loop push repnz mov dec fsubrl sbb lock rcrl xchg dec add movsb and std add mov lahf movb xchg pop pusha or add adc hlt fild stos rolb rolb or inc cmp and or je mov sbb lods mov cltd add add pushf fiadd push adc cwtl arpl sub push sub and mov sbb shrb push ror cwtl test mov adc inc mov xchg adc lcall stos dec adc xchg and ljmp shl pop xchg adc inc je sub cwtl insb add pop mov fsts cmp dec xchg dec aaa xor add or dec and mov das or sahf add in add in mov and jl rcll inc call cmp mov push fldl test stos add (bad) gs and movsl push outsb xchg inc pop xor lock dec fwait add xadd xchg clc enter rclb and and adc xor mov movsb add cmp xchg lods into xchg jno enter js or in fcmovnb sub adc sti xor rorb into (bad) jb sbb xchg push jns mov fsubr push inc mov push mov fadds aam mov mov cmp add stc or adc pop nopl cltd lods dec dec loope jp clc lds sub movsb std mov fstpt mov dec push sar aaa test and sub das in popa lods icebp pop lahf adc sahf inc mov sub hlt push dec mov insb int3 dec stc loope xchg adc xor push inc adc aaa xchg insb fisubr lds sbb jle dec aaa test pop xchg lret ret push adc sub lods mov jb pause xchg cmpsl out mov (bad) popa push xor lods and xor dec sahf sbb push iret adc sbb int3 add ja push inc lea add test and mov adc loopne jl out sbb sbbb arpl mov mov (bad) in sbb decl pop test mov sahf mov push mov pop insb imul ret shr push gs lock jb add dec test push and scas das jl or xchg popf add xchg sbb dec xor jmp pusha mov clc test aam in dec orb test cmp or mov test adc mov test or rcrl loope or mov add mov pop adc rorb sbb sub add xchg test inc mov test mov pop std add rcr mov xchg movsb inc inc mov and lds add sbb mov cmpsl xchg insb dec add repnz gs or (bad) cmc jnp enter dec mov sbb ljmp adc call arpl fs inc iret dec cwtl sub aam mov test adcb data16 repnz int mov mov sbb push or shrl lock out loop cmpb movl xchg call adc xor jp push test sbb add call xor (bad) dec fiadd clc fs xchg in mov lret inc jbe int mov or data16 sbb rcl pusha or dec dec addb std in add push fisttpl dec or add in jg or insb pop inc xchg dec push sbb xor add lds mov sub inc ds add pop (bad) mov inc pextrw adc dec jge les mov xchg pop sbb loope repz sahf mov adc inc mov je mov andb lods push xchg sbb pop mov ja (bad) sbb cwtl mov and fwait xor jecxz js sbb test inc clc repz adc adc les adc inc movsb dec pusha pusha cmp adc addb mov repnz push lea xor aas add sbb push lock je adc pop stos in pusha dec inc inc dec push inc dec xchg push test xchg push push sbb sbb sub adc adc adc fwait (bad) js mov mov push insb stos mov or mov xchg pop inc add jb push cmp adc cmp dec inc push ror add mov jle xor xor insb iret dec jl xchg inc sub sahf fadd and mov jge aas sbb pop fnstcw mov push lods inc cmp mov inc xchg gs push push push and jmp ret xchg aam pop xchg jl push sbb roll in nop cmp inc dec mov and pop insb add and push push jmp mov in adc mov and mov sub mov inc iret sub or jno push aam int3 clc add (bad) push mov lds movsb aas rclb test stos rcrl andl (bad) dec sbb sbb int3 push ret aaa mov pop pop in sub jge dec xorl cltd hlt lods ret mov adc adc sti inc mov xchg out push jmp cltd in push call inc pop shll mov mov mov push sub sbb mov inc sarb inc mov rolb (bad) pop jns insb or xlat xchg xchg cs push pushf mov push lods sti lret inc nop icebp out inc push mov mov fs mull add pop sub and jmp lds sub pop nop pop insb adc or mov sbb test dec xor inc sbb roll or jl push loope sbb fwait decb dec xor jne shrl mov add adc enter push add and mov xchg xor in sbb repz lds or xchg and and xchg and push xor jg xchg out dec or xchg dec cmp jp loope and and pop inc add insb sti xchg in loope rolb mov ret dec push and push in inc sub dec loopne add orb jmp in or add push pop fdivrs mov dec ljmp push pop push inc dec mov dec and addl leave or fcmovu loopne cmp xchg and adc movsl mov dec push dec mov addb in test add aaa test cmp mov mov inc inc aaa lods xor pop xor pushf xor repnz pusha push rcrb lds lret jecxz add sahf dec int3 shl adc lds or pop sbb push in in mov lcall add mov ss mov das jmp neg add sub sahf adc dec in sub xor jb enter movsl test or mov in in cltd xchg out adc dec sub xchg pop pop jnp inc jbe std (bad) jnp add dec (bad) fstps mov ds stc add popf mov push pop insb ret push xchg pop lods inc and pushf lock icebp adc sbbl dec pusha dec add dec jno movl fldenv cmp test imul js popf xchg xor ds sbb loopne fcoms movsb sub mov pop lds pop jae xor xchg sbbl add dec and mov adc adc pop cwtl cmc adc inc dec ret jmp xchg nop mov test enter sbb adc sub and dec lock leave movsl cld dec rol dec daa and pop or orb loopne inc test in inc nop pop pop inc add in enter loopne and int3 loopne fmuls or add lret pushf int aas mov faddp cmp cmpsb cmp out jae or lea cltd pop cli push arpl lock sub hlt pop pop aam clc enter addr16 (bad) jne std mov in and mov add add adc (bad) cmp sbb int3 add out xchg mov std xchg insb sbb inc jo or pop sbb mov jmp inc sbb js mov xor push xor leave adc daa pop sbb adc loop lock fcoml es add dec jne jnp add imul insb mov mov sub dec insl (bad) and dec or (bad) jecxz sbb add mov sarb push adc push add sub inc and std mov jno cmp inc aaa jo shll xor pop lcall mov mov das mov lret add les into dec (bad) sbb fadd loopne push sub icebp aaa test add enter loopne xor dec ss faddl inc mov fwait dec daa inc push add lea out sbb add out pop dec in clc pop enter and aam insb jne sarb or test in dec sub sahf test mov lds pop adc hlt inc add loopne mov bound fldl lods adc push add push sbb push es push add popf cmp str (bad) popa or test xor pop mov add adc cwtl jmp add dec adc inc call fwait sbb push or shrb sbb cwtl add stos cld xchg gs xor fmuls stc add pushf xchg add rol dec test loope stos jmp rorb xor gs sbb push and cltd leave in incl inc mov jns push ss add xchg cltd sbb fild and int stos add stc push scas ret mov sbb mov adc fdivp adc out addr16 xchg inc enter nop jl (bad) (bad) adc sbb movsb test sahf adcb dec dec jo out add mov inc adc mov push in hlt into roll sub test repnz or dec jp sbb jne add iret das xchg sbb add rorl movsb push sarb leave mov inc jl in inc and xor sub pop xchg mov test dec orb (bad) push mov adc rep or xchg clc test dec pop and mov adc sarl mov mov imul mov jg sub js ret cmp dec cmc inc fcom xor push lret insb jle xchg fs dec orl test or call lods inc mov lock push xchg loope jp cmp or imulb add aaa mov rolb xchg daa mov xchg fwait int rclb sbb rcrl add xor inc or in shlb pop sub cld sub int3 popa pop add mov outsl add test mov jbe add xor fnsave insl add push sub ret push jecxz push and cmp xor push and jo bound pop jg and loopne push adc dec sub sub repz inc scas add loope sbb adc fs stos add fisub add insb and cmovb mov add add outsb out add jl gs (bad) push add push incb jae dec in int3 leave outsl add aas mov gs ljmp mov rcr into or loope xor mov cli sbb ret in inc and das add add mov lock inc clc jae pop popf push es xor (bad) or pop dec in adc and loop add div add imul fmulp add lea enter add jg popa in adc je lds xor rcrl lock cwtl mov mov lock inc sub xchg inc scas mov je sub mov add sub sub sbb sbb stos aad adc test add lock adc (bad) add dec ret add inc dec aaa or pop pusha fwait pop in adc inc pop (bad) out pop js pop add test shlb jnp jp int (bad) xor cmp addb shufps jns push push add cmp sbb outsb movsb and pop jbe cmp sub (bad) (bad) mov outsl jnp call jb pop sahf (bad) ja movsb and enter sbb idiv (bad) mov notb or cmc cmpsb or add repnz cmp adc scas or mov push les cmpsl loopne add add shl sbb in mov or xlat adc dec pusha xchg cmp xchg cld or push sti jl add and and xchg and adc add inc add add repz push add mov jg test push sub mov xor enter add pinsrw in lods movsb add mov add jmp adc add in movsb adc pop outsl loop clc add decl rolb js mov fneni(8087 xor cmp push cmp lret fcmove inc add push imul and fldl dec inc xchg lock mov push daa add in mov divb mov mov dec pop mov pusha out movsl push add stc int3 fsubl fcomi cmc idiv rclb xchg mov nop test add sub std add ja repz mov xor mov jecxz inc test push mov mov add pusha data16 sahf add in adc sbb lret adc outsb hlt (bad) lock add lahf (bad) mov int sbb push ret fmulp xchg dec jecxz jl imul shrb or add or or add jnp clc (bad) fadds lret fnstenv add subl dec out sbb test jae pop out (bad) lcall adc adc mov andb sbb loopne (bad) cltd jbe cmp add insb in cmc gs enter mov fidivl add jne adc add and outsb (bad) scas sub mov sbbb mov mov scas stos sbbl aad in cmp sbb cmp and jbe divb faddl push add mov roll lds imul loopne cwtl enter inc adc cld jl add gs fiadd andb sbb and aad add arpl sbb add pop es ss pop fidivrl push sbb sahf adc lds ja add (bad) jo arpl adc or add mov sub stos sbb push jmp mov add aam (bad) and call dec (bad) jb mov mov jl daa jmp rcr ja ljmp cmp scas int xor cmpsl add inc imul dec adc imul loope and fdivl rcrb sbb inc sub jmp push adc int3 inc sub adc and adc adc hlt mov xchg test dec stc inc pop adc and sbb bound adc cmp sbb push and adc aaa and pop roll xor ljmp jge mov xor add je jne add fwait outsl xor bound mov xchg sahf jmp push add or pusha add arpl mov xchg adc push xchg data16 out adc mov sbb lea xlat adc pop lock or add xor hlt or (bad) ja add sub add mov icebp add outsb int3 bound xchg inc cwtl mov add inc mov ror in sbb pop and push adc (bad) xor leave mov (bad) mov adc sbb add mov in sbb jo pop js pop add aas fcomip push lcall jno out mov mov enter dec mov lock add pop jo dec repz stos fs add cltd or mov sub add lcall test movsb mov add or enter xchg mov mov iret and popf push xor add add or jge dec add sarl add cmp pop pop popf pop push mov test pop mov dec add xchg mov in add fisubr cmpsl push cltd xchg adc add mov cmpxchg or sbb jb popl in int scas cmp sub and pop push add sbb sub int3 add or add std fldl2t add fnstsw les aas mov subl jnp mov add xchg aaa out jbe (bad) call cmpsb push leave jmp loope insl movsb hlt sbb int repnz mov pushf pop cld mov add jae add pop pushf xor in add fldt jl mov lock mov out icebp pop add (bad) out pop ret (bad) negb add sub pop or push sub sti add cmp (bad) and test mull inc sbb loope hlt xchg add xchg gs clc inc cmc cmp (bad) or out subl jns xchg cltd scas mov leave pop nop test xor jo shl pop mov add ja addr16 xor push loop sbb add sarb mov mov add daa data16 (bad) xchg mov outsb subl enter cmp sbb ja add push mov xchg mov in cmp test dec sub repz xchg out sbb fisubrl push outsb imull xlat fdivl movsl loopne rcrl stos mov add lret ja jecxz add lret jo push push test jns add (bad) pop adc out adc adc addr16 sbb iret push cwtl enter das scas adc sub xor pop jge mov add and push lcall es add cld pop and add pop or rcll mov or (bad) fcmove loopne (bad) repz push mov jnp gs or mov mov loope mov xchg push ljmp out pop mov bound mov jle in int int3 insl cmp orb xchg add adc sbb (bad) dec adc mov call mov push loopne cwtl add inc pushf cmp mov cwtl cli pop inc xor sti jg (bad) out (bad) mov pop jge cmpsl jecxz inc sbb test push sbb rcll mov cwtl add sub lahf fwait cmpsl inc enter test nop sub or and popa (bad) insb mov add addr16 mov adc xlat ss lret and push or push jo setae clc inc fistpl and jnp mov push sarb lds or add jl add pop mov jnp dec jae mov lea jg mov icebp (bad) lods mov add pop sub cwtl mov push insl mov push add cmp jmp sbb insb mov sub cmp lock dec mov lcall gs mov mov pop insl push pushf bound and jmp lock test xchg mov cmp jl add pop jg mov enter dec inc test lret or pop adc js sub pop xor aad add mov sub pop in cmp pop push add pop jle (bad) mov mov add push xorb mov mov cmp pop cmp dec mov stos pmuludq test fildll pop sbb sahf push sbb xchg ja add loop push jp inc das add call mov in adc pushf add in mov ja loopne add fninit cmp pop fldenv cwtl in and mov rcrl mov rcrl cmp sbbl mov test cmp cmp (bad) and or data16 addb fnop add test push inc aas dec add mov add mov dec es or adc adc mov pop mov push add jmp cltd lds cli sub xor inc pop adc and ficompl add jne aam and mov loope enter sbb add mov cmp add fwait cs add pop (bad) lret add cli lcall nop jecxz mov mov aas or addb add dec enter add pop gs sbb repnz into stos push sarb add orl mov scas dec inc ret pop dec repnz int3 aas or movsb add scas push push mov push imul xor inc jbe pop cmpsb add (bad) int3 ja test cli sub add mov add popf lcall cmp adc cmpsb xchg sbb arpl in push adc inc sbb jb sarl inc gs mov pusha (bad) and and fs push add mov inc lahf add bound xchg cmp test sarb mov fildl sbb add jp (bad) fxch sub push sub xor xchg cmp or mov push add imul mov ds sarb sub cmp pop cmc pop jle cli add std pop bound sarl paddsw xor pop jp adc jl mov inc popf cld roll sub add add ficomp mov scas not inc inc out add aas dec mov andl mov rcrl jo sbb sub test ret insb ja cmc pop mov sub adc jb or mov bound dec ljmp or add sub mov addr16 mov dec imul cwtl aam mov cmpsl (bad) negb outsl jo adc jno dec fisub dec add add dec (bad) push pop add sbb push add mov shll jge (bad) fldt shlb push jbe inc push inc and cmpsb mov pop jnp pop jo jae inc shl xchg outsl add xor pop shl testb insl sar xchg repz or mov ret inc add add int xor (bad) jge xchg add repnz inc aam xchg cmpsl dec jmp xor test lahf xor lcall cs dec sub les sub add mov xchg stos ss xlat add add lret lods jo je add pushf popf jl fstpl call mov cmpsl movsb mov cli adc xchg popa out lcall je jp inc es sub out cwtl or mov pop xchg add lret hlt mov out or mov add cltd (bad) dec rcl add inc in cmp add and movsb lock add jecxz cltd and outsb add imul push imul std jo push mov jl push push repnz lret (bad) push out pop sbb add lcall jb incl push dec sahf in xchg mov jge aad xor cwtl jl lcall inc in xchg add js leave out fildll mov inc xchg out aaa add daa subb sbb adc add xlat and sub movsb cmp repnz sbb cmpb xor fwait push jmp sbbb ja inc mov adcb (bad) mov and mov xchg movsb mov sbb add inc (bad) jecxz xchg dec adcl call hlt loop add sub add enter fnstsw jg push cld int inc add sar (bad) mulb cltd mov push adc out imul loope xchg add (bad) rcr std mov repnz or sub add cmp out add stc sbb inc dec and mov (bad) int3 arpl icebp push xchg mov adc clc andnps cwtl divb xor hlt xchg or dec fdivrp ljmp sub dec pop pushf or add aaa loope cmp or add dec inc stos mov mov faddl push subl push cmc sbb call roll shrb aad add add mov movsl ret sahf js add out or fucomi jge aad cmp xor add loop and gs or inc outsl xor adc aas mov add adc call addl fimul negb mov jmp add sub add pop hlt push mov aam or insb inc xlat adc xchg add inc loope mov xor add ret add jecxz call push (bad) rclb (bad) sub movsb call jbe mov or adc ss cmp testl addr16 xchg push aad and add cld arpl add rolb es rcr mov lock add loop cmp cwtl dec lea pop mov cmpsl fsubr xchg pushf mov dec leave mov sbb test iret or jbe nop push ljmp dec adc (bad) aam mov rol test scas pop jmp cmp push das inc clc sub (bad) insl pushf ja imul aas add into fdivrs adcb add pop inc xchg inc flds add sbb pusha test and dec add xchg lock pop clc add in mov adcb into add dec sub test xor test pushf jecxz jne sub (bad) lcall and add jmp into aas (bad) sub loope bswap fimul xor adc push add fs push push dec jmp cmp add xor gs std pop movsl hlt adc and jo sbb adc add xchg mov clc xchg outsl mov js pop and mov test pop (bad) jno jne add les inc add pop jae,pn push jns jecxz sahf out jo outsl pop ret push fsubr lea and push faddl push add inc movsl dec sbb imul pop push add rolb add lods xchg mov rcrb in or add mov jge add fiadd mov push add lret ret add es xor pushf inc imul add jl cmpsb ss js add fyl2x hlt in (bad) mov setae mov pop js ljmp cmp cmovnp push adc mov push adc in push scas add mov add out rorl fcompl add mov (bad) pop out add mov aas xchg add push dec inc mov inc in in ja dec jge sub dec lret clc jns dec in xchg sti shrb cmp rcrl bound pop and (bad) mov aam pop mov add dec cli into jg cmp imul sbb outsb movsl or data16 popl pop lea sub pop xor (bad) hlt lock aad add jae inc mov pop inc clc fmull add adc jecxz test pop loopne inc adc jmp add or test add into xchg push or lea out dec xchg fadds mov jbe fisubl jge add stos jo dec sbb add mov or faddl not inc cli mov cmpsl roll push enter sub incl sti inc pushf das js sub rcll mov and or imulb scas fcom nop push stc fidivr lods inc aam or mov cltd pop sbb add xlat lcall pop lock xor into loope rcr lods in ret push add adc jl enter xchg rcrb add rcr rcrl xchg add pop out pop int push xor leave add std sub aaa add cmp inc push fcoml lret (bad) pushf inc pop mov mov cmpsb cmp icebp adc mov pop mov aas add into push mov add (bad) inc dec cmp fmulp and inc lcall pusha pop pop popa jae sbb je aaa jb insl add add and pop cmp adc lods pop sub psubb fnstsw sub pop lock icebp (bad) sbb adc xor jno insl mov cs jo or add repz mov pop and pop pop add push into stos xsetbv in (bad) enter ljmp adc jmp ret add fnsave add sbb in mov pop pushf add jae push outsb incb jle add add loop and sub in push and cmp xor inc cmp add cmp daa int3 popf into dec add adc fcompl mov sbb repz cmp je and xchg bound dec inc lret stc mov lods cli add clc fidivr dec repnz (bad) repz push popa addl mov je test dec xor cwtl lret sbb xchg outsb nop push mov lods popa add std (bad) jno scas xor dec add or roll cmp push hlt xchg mov test ret sub sbb daa ljmp add test out fistl dec aam aaa push cmp mov ficompl std add dec sbbl fnsave add and add dec xorb arpl jg xor js out push gs adc jecxz add test loope xor push push fidiv adc std sub add sub push fsubrs out div sbb and add mov dec js,pn push shll cmpsb cmp jle jbe scas pop add xor mov (bad) mov idiv pop out into ret inc mov add stos rclb popa jnp rclb (bad) leave adc add in dec icebp add cld ficomp mov mov pushf rorl jnp push sbb test add xor out cli pop push sbb and lods sub gs and xor add xchg mov int3 mov push std sbb addr16 pop add out adc mov repnz fimull sbb lahf std cld add or test pop sub popa lds pop test pop test mov sbb cmpsb adc xchg push repz loopne or ss insb push pusha test sti inc jo loope,pn subl jae sbb ret add mov or hlt or xor and dec mov inc inc xor js das shll adcb stos pop int3 xlat and lock add inc dec in sbb jns mov pop lret jl add sub sbb outsl and pop (bad) cmp call in cwtl fiaddl xor sub cmp add rol xor inc sub mov push pop cmp xor jno negb jge jle mov (bad) or lahf cmp ljmp mov loop roll mov pop insb or outsl inc add cmp dec cmp sbbb dec add data16 pop fdivs add sbb subl inc les pushf fimul push jnp nop rolb dec imul icebp jl add std sbb fildll jecxz orb mov add rorl push outsb lret xor and jecxz adc or aaa lods addr16 add (bad) fdivl jmp aam pop rcl push ss (bad) popa aaa jne nop inc add sub and sbb mov push inc movsb mov sub sarb subb jno mov hlt stos jnp push add mov sbb add xor leave add test popa adc adc mov ljmp sbb sbb xchg lock and or and jmp sbb arpl add mov push lcall cmp (bad) xchg aas add out jo xchg pop add test mov add pop sbb cld fs fldenv std add adc js mov jns enter or push xor sub lock mov iret add loopne jge cmp lahf add xor mov push mov dec or popa and sub xor outsl or or sub add xor mov cmpsl pop test adcw icebp and in adc inc mov shlb xchg jmp pop add or test jo or mov pop inc rcrb dec jmp out mov or push adc xchg andb xor lcall add cmp jns jb pop insb in add fdivp (bad) sbb sbb jmp jns push or inc xor cmpsb je add sub mov mov pop dec or imul xor and cs xor cmp add and pop mov sub cmp sub loopne loopne cmc dec (bad) fdivs jb (bad) test add mov mov sub loopne cltd daa test loopne mov pop in (bad) loop xor and xchg (bad) repz mov popa sbb add jg or out add andl es pop push fs push sub lahf sub in popa fcomps js icebp pop adc enter cwtl js stc enter mov jb jb or lret movsb in xor mov adc jae mov mov mov out inc loope sub push add mov mov and pop dec insb cmpsb push mov punpcklwd dec add (bad) xor jmp jae sti add mov xor dec add mov pushf xchg cld ja add cmpsb push (bad) std fdiv faddl int3 out test in add and pop push in sbb popf iret inc imul pop repz mov daa aaa into add push cmpsb stos enter scas mov cmp cli incl lock jnp js cmp add pop aad mov inc in daa leave add jbe dec add mov and push cltd scas add jo orl adc daa pop loope add inc call mov cwtl testl ret mov lods in ffreep or mov xchg add stos das inc add pop mov add or jno add mov mov fpatan incb insl push rcr xchg jge dec andb ds push out xchg addl mov sbb jmp dec xchg aas inc xor outsl add xorl (bad) jp repz add loop shrb inc jl or ffree adc mov test jp pop iret add pop xorb rolb add mov sub add (bad) pop mov jecxz add or mov and add and insb dec out lock push add add pop or adc sti pusha loop jge loopne add int3 (bad) in cmp mov fbstp inc fsubr xchg jl dec add mov and inc xchg adc fstpl (bad) xor adc adc or sbb mov aad in js add sub and add stc loopne mov dec hlt cmp (bad) adc outsl in and ss lods cmp psubw clc test out or mov jmp pop cmpl enter das xchg incl ficomp xlat dec ds adc lock add cmp mov xor ljmp (bad) and inc jnp enter lock xor jmp xchg mov pop arpl es and loope addr16 cli inc verw test int3 jo cmp add lds dec xchg rolb adc adc dec push push add add push je add rolb subl push int3 and inc sbb pop add test sbb pop adc cmp adc popa add lahf clc and pop add add fisubl add push inc adc (bad) dec pushf add or push lret xor add in sbb jnp pusha pop enter push sub shrb loopne cmpsl lock sbb shrb mov stos push add cwtl call lahf es cmp push jg (bad) ret cmpb add fstpt mov (bad) clc mov mov jns inc sar and adc mov cmp jp or dec add mov mov in ret mov or gs mov pop sldt mov sbb fwait cwtl add sub and mov jo roll or fdivs in scas cli movsl dec add push imul add test add push add pop movsl inc dec add insl jne mov ss sub add dec scas (bad) xchg les add pop int3 lea ljmp je jnp jns add jae pop add repz jb lcall clc pusha add sarb add mov cmpsb daa sbb inc lods subb sti or data16 and das sbb jnp outsl (bad) cmp push loope cmc (bad) sub cmpsl sub add aam (bad) dec rorl arpl push xor mov push add xchg sahf mov jo jb add lds (bad) add jnp sbb and lods dec andb fiaddl and and push xor sub js aas add mov mov sbb pusha movsl shlb sub lahf adc and fldl push push dec pop push mov adc js sbb lods hlt sbb jbe or push mov sbb (bad) rolb leave mov popa lods test pop pop shrb sub fidivr enter out adc sbbl popf add (bad) ja xchg outsl sub out mov adc (bad) aaa lods add out popa mov (bad) out add popf loope fstp lds fwait scas sub enter add mov jne movsb fdivrl (bad) pushf pop ret out adc ds add stc jge sbb mov adc clc sbb mov aas xchg add mov mov icebp push in sbb jg xchg test pop xor call mov andl fiaddl dec mov push aas int3 cmp xchg inc sti je pmaddwd xchg insl test roll pop adc (bad) mov sahf add and cmp push add movsb pop imul scas sbb cmp imul mov sbb loopne loope nop hlt ja add and mov xor pop jmp pop shrb add or mov mov or js sbb or bound (bad) rcll jle adc xchg xor cmp sbbl and push cmpsl repz mov xchg add mov lea cmp sub stos lock xor jge stos or inc cmpsl in mov fldt jmp mov das pop add push lcall roll inc or sub dec loop addb push fadds (bad) fildll mov pop mov (bad) out aad mov fs ss sbb jmp cmp dec add (bad) std or xchg aaa add push lds xor cmc and add adc sbb sub cmp dec add jne std xor nop rcrb ret pop subb push jl stos hlt enter jg and test movsb shrb aaa pop push add das mov add lods pushf insb es push sub (bad) stos mov cld push or test add adc int3 push mov pop add xchg xor call sarl jg mov ret add xor inc sbb sbb adc inc cmp aam push push clc mov repnz std add pop test aaa fmull rclb out pop icebp sbb add add cmp add sbb xor pop scas fidivl aas iret pop add rol loopne adc stos sbb icebp ds fild aad xchg add mov sbb fdivrs pop add inc and rcll rcll insb out jge in fmull adc add sahf add push add add scas leave das std mov cwtl add mov out lea rclb xor add in pusha xor and (bad) sub push imul pop lret xor dec push loopne sbb out jb jl mov scas js cmp fdivl sbb jg cmpsb inc mov (bad) ret testb fcoml mov pop mov adc mov add pop popf push cmp pop es cwtl xchg jo xor cmp and cmp dec mov mov iret std data16 pop cs test stos adc sarb enter cmp mov inc loope dec ret add inc push jno inc mov xor mov lcall fldl ljmp pop add orb sbb cmp sbb add test or push imul popf cmp adc pushf (bad) xor fwait cmpsl sub mov jne add ret test cmp and dec cli mov cmp ret adc (bad) jb sbb mov lret enter sbb idivl std push nop test mov (bad) mov mov xchg add xchg inc mov xchg (bad) jnp mov add lds lock jmp sub loope add ret cwtl dec das cmpsb add adc cld iret xor mov cmp or out add call cmc aas mov jp add scas add adc adc and add jno js loope cwtl or cmp add ja and jne xor out push mov add icebp roll mov xor clc push add mov mov xchg (bad) mov sbb mov add orb call mov mov dec add hlt call add push dec jo xchg sub mov mov add cmpsl jo icebp ret mov addb push sub out es in jae ds dec mov pop pop icebp cmpsl lods add in sub and cli cmp or xor push out and add mov push push int xor sbb scas pushf inc mov jmp cmp fsubrl dec lcall mov jo mov jns fiaddl dec mov in xor adc aas push jb mov mov and sbb or aas xchg movsb stos movsl dec add pop popf xchg imul test dec lret add lock add repnz adc add nop or push shll imul punpcklwd push rcl add push pop dec scas sahf xor call mov or inc xor jo pop addr16 cmp add leave pop push stos lock pop hlt jge sahf jmp xchg add js sub inc mov lock cld xor adc cltd add outsl roll sahf push dec dec in dec jecxz popf aas add mov (bad) pop (bad) aam mov out add (bad) xor test jl loope and xor push jae loopne mov cmp add xor xor pop popa seto je ds js sub sub movsl add cs fcos lock xchg pusha loope jmp inc jmp add or fs jno pushl add mov pop nop pusha add aaa aam add mov xchg jo and cwtl (bad) cmp movsb loop add sbb push repnz xchg sbb push jp or pusha mov jb pop shlb mov adc dec mov ret inc push push imul popa ljmp mov sbbl jnp or frstor add rorb (bad) cmp pop cli push xor jbe adc outsl sub sbb xchg loop mov or je sahf sbb arpl adc adcb xchg mov inc daa or test add adc repz xor push out pop add mov add addr16 pop inc push mov movsl js push stos sbb loopne je ret les mov fchs ss cmp stos outsl inc fsubl bound xchg pusha (bad) cld inc or or add cmp add dec sbb pop jecxz repnz jns add inc call xor nop xchg ds in sub xor cmp es lock cmp fcomip enter stos mov loopne hlt outsb popf add dec pop mov movsb sarb mov sbb popf cwtl jl add mov movsb add dec addr16 sub lods lock jno pop xlat je or xchg pop inc call adcl pop enter add xchg dec add ja iret mov ret push (bad) shll and cld and lds cmpb xor punpckldq push jl add and lods addb or push pop adc mov (bad) mov xchg xchg or fisub push arpl (bad) push loopne cltd or add ss push add cltd shrb or pusha inc sub ss add cmpsl shlb rorb sub roll movsb (bad) clc aas dec cld addl jl and add cmpsl inc dec jnp jns jbe add ss xor (bad) sbbl cmp jl,pt or rolb lods fs push mov push jbe mov mov and int (bad) daa jae xor push roll and pop mov sub stos test popa sbb mov pop sbbl push push or fs ja js pop cmp dec add lahf add dec rolb aaa mov int sahf sarb sub icebp repnz add ret cltd jnp jne jecxz or push add sub and fistpl xchg js repz cltd addr16 push es add repnz xor inc push add xchg arpl clc cmp add pcmpgtb bound enter das xchg aas mov push adc or cltd cmp or ss inc decb mov (bad) ljmp and inc mov jle ret fdivrl add push movb out xor dec adc das add cli add std add out in out insl add ret loop mov pop sbb add mov and jne rolb ljmp jg push dec and fwait mov xor mov push jge mov push and push movups adc rcl out cltd pop mov arpl cmp out and (bad) or lcall xchg add and fsub and inc stos sub mov adc dec icebp into out int add jae push xchg xchg cld add aad and and push rclb call es add inc fwait (bad) pop lods inc add iret dec adc hlt inc jbe push xchg push cmp aam lock push sbb pop mov lahf cmc add test (bad) xor je scas jne add ficomp push add xchg dec mov push into add xlat fldenv in jns adc vmovups add in push add cmp jne add mov cli ss xor lea or cmp pop dec addl or sub test repnz add pop mov fidivl push shl into push add fs add jo dec push xchg dec push and data16 xchg mov movsb nop adc mov or repz add or xchg push out add or adc adc popf sbb add das add flds (bad) jecxz jg pop insb daa notb lahf sbb jge add jmp push stc adc xchg (bad) mov and loopne inc jge shl pop popf imul sbb jno mov add loop insb add aam mov sub je cmp add call jo mov sbb xor iret stc cs outsl or aas inc xor (bad) popa subb cmp push and dec adc and add add mov pop sti cli je mov (bad) push add jo xchg add xchg test out jmp add push pop cli pop gs add jno mov xchg push (bad) add mov xlat adc add jnp fs and loopne adc subb inc sbb daa lds lock and lock loope testl sbbb pop add in data16 jle incl push es movsl lock cmp add aas ret mov xchg stos lahf ffree fwait cmp int3 ror add outsl aam and push mov cmp mov add sti jno cmp sub movsb in push je push outsb rcrb adc ja jno inc adc pop add stos jle pop add dec int3 mov repnz call pop inc inc and adc int sub into ljmp add dec sbb sub pop mov or add loop xlat movsl daa sub mov out cltd and sub leave in mov xchg add jns fcompl lahf sbb adc xor call ds xor icebp push bnd add push mov rclb cld jmp scas call dec and add inc or into mov mov mov arpl inc sbb add add mov pop out imul cmp xchg mov jbe stos stos call sbb fs inc xchg or mov stos mov (bad) xlat cs vcvttss2si repz (bad) jge lock add dec and cltd fwait xchg mov mov nop jns add or cmp (bad) cmp mov add xchg iret dec clc sbb pop pop xchg scas xchg add or test xor sub jp add stos outsl adc in push add ret add add add hlt bound in sbb push dec shlb jbe loopne push iret fwait sub ret push ret jecxz add arpl add dec insb jg call adc rcl movsl aas nopl (bad) jle scas xchg ja mov nop rolb repz int3 das mov cltd scas pop cmp push je ljmp push or and add cmp sbb lods stos or and push and cmpb daa lods adc add fiaddl fcomps mov test negb add sti xchg insb stc (bad) pop add aas sub test push dec in fwait in push and cmp mov jns add stos cmp push add (bad) scas push pop scas pop cmpl cmp jae nop mov push sbb es fcoms or add (bad) icebp mov xchg add mov xor insl and test adc adc enter test shll xor rorb push lock jae pop xchg (bad) cmp addb sbb dec add adc gs cmp (bad) out ljmp mov xchg add stos repz xor aas push test cmpsb stc jge cmp xor (bad) icebp mov sbb pop enter lret push mov push test adc loope add dec insl add lret lods adc fisubl sahf pop add sarl int inc cmc add adc (bad) jo dec roll (bad) pop sbb jmp mov fwait and fsubrs fldt lahf roll push cs fbld mov loopne add mov dec push mov xchg sti mov movsb jo sbb (bad) mov xchg cs or cmpsb push add mov ja inc add jbe xor add cmp xor xor add mov xorl iret ficompl movsl fadds sub xchg jmp (bad) insb pop out add test jnp notb push or pop sbbb int3 xchg js jmp ret add xor mov add leave fmul or mov mov jae test mov aaa test cld dec pop sub fidivr or and mov adc int3 adc dec push sub sarb jno cmpl add lcall add push js adc jne loop push out push pop das and add add repnz ds xchg stos add lds add arpl std xorb dec jge hlt sub orb (bad) mov add rclb mov test mov mov mov sub pusha adc inc pop pusha das jo pop xor add xor aad sarb add xor jbe mov pop rcll addl xchg inc mov jo je push xor call fsubrl cs jg sbb inc lods rol pop lret xlat add jno add out adc outsl pop inc pushf sbb mov jp add jecxz xor aad mov add mov push add adc mov and lea hlt outsl jmp call pushf loopne,pt inc cltd and (bad) aam add adc test xor add test inc add lcall out pop enter test push xchg adc jns pop sbb and outsl sbb les decl mov fadds addb lods sub pop sub lcall in add xor test sub mov stos clc jg xor icebp add sti pushf scas mov xor mov sub adc mov and inc xlat add jg add rcl repz mov divb jmp inc dec enter fimull jmp add daa xor jns (bad) jecxz or ss dec mov add roll (bad) push jle cwtl movsb add arpl pop daa sbb xchg fs xor dec push or out lods xchg imul das js sub jo loopne test cmp ficoml movsl rorl jge fldl adc loop mov xchg sbb or inc xchg insb push mov inc add test jbe jle add fimul xor pop dec jne fsubrl pop rcrl adc (bad) and mov sub cmp add sub push in mov add pop mov call adc mov push ret add cmc iret mov mov sbb cmpsl mov clc push in or xchg dec dec add jo dec sub das add and add xchg mov sarb pop lods mov jo jnp cli ret sub leave aam dec dec xchg jo movsb inc add sti jnp mov mov add jle dec xor inc jg or cld push add (bad) lods cmp adc int subb inc dec mov es es les popfw sbb imulb sbb xor fstps imul cmp rcrb inc mov ss mov or pushf setl (bad) mov or pop jle shrb sti mov push xchg sahf fadds inc lcall rol push cmp pop dec sub fiaddl ret mov scas shlb and xchg add adc je test and jo xchg lahf or sub adc int3 flds add mov stos aas pop inc in add movsb mov cmp xor add insb cmp popa loop (bad) fdivr lcall mov nopl add inc subb out (bad) add lret fcoms add xchg cmpsl arpl dec jg lods insb add jmp and jle adc out pop fcoms inc adc and adc or mov sbb pop lock insb je mov adc jmp mov in pusha or sbb mov cmp in (bad) push jno xor add es and cmp xchg or jmp pop lret mov or jo push add mov mov add ret pusha jnp jno pusha xor in cmc or lock adc pop push xchg inc mov jle mov js or adc push pushf hlt jo cmpsl add fst sbbl inc mov test (bad) fdivl ljmp adc xor mov add jno add jne sub add roll insl add push and mov cmpsl mov sbb dec pop sbbb or pop jno ja inc push arpl loope roll (bad) mov mov in mov pop mov pop outsl mov stos sub sbb sbb jbe scas add xlat mov repnz (bad) pop test jle fmul (bad) aaa pusha rdpmc leave inc aas push loop jp sub cld sub enter jl sub push movb adc push divb cmp mov dec sbb push bound das rorl (bad) inc lcall or jecxz test mov jge xchg and imul rcl cmpsb and push (bad) cld ja lea xor je addps xlat jp hlt arpl mov mov bound mov add pop xor dec insb (bad) mov mov sbb add shll sbb mov and and stc adc xor add out pusha push push lcall jne sub add std in pop sti sbb shll adc dec lret dec xchg pop inc or cs add dec dec into add jo pop clc xorb add jb outsb fstps aad sahf push mov lods pop out call and jnp mov movsb (bad) mov les add xlat in lods add inc iret xchg mov jl add (bad) mov jg adc fxch cmpb bound pop add xchg testl dec out testb xor pop and aad (bad) mov ret ja jb jae hlt mov sub add (bad) adc sbb and out inc add lcall mov adc add enter scas xor ficompl add ja jo cmpl insb insb add dec sti into pop push add in sub mov inc add fucomi sub and gs adc cmpb test add pop fistl fistpll xor (bad) pop xchg addb cmp jne add fsts jp cmp jge (bad) lock add incb mov in jno mov jns ficom add jle lcall add adc addr16 ficom cmp dec adc data16 sti repz shrl les adc xor imul mov jmp (bad) out or jb sbb orb cld mov inc pop jl add xor (bad) push dec inc outsb xchg ja (bad) mov fisttpl inc stos mov add mov fwait jle add push pop test cld cmp outsl adc jo dec xor fnsave add and subl add lret add mov mov add or mov lods add insb daa aam (bad) pushf jae outsl xor cwtl adc (bad) mov incl clc (bad) pop cmp add test shlb add mov push and je cmpsl test in dec jae jnp sahf mov sub push push movsb add ss cmp pusha xor nop mov aam cmpb dec iret cs call add push add cmp mov mov cmp pop jmp adc cmpsl (bad) jb rcr push cld or and inc add sub mov add shlb mov adc push add add loope xor mov push push jmp lods and mov cltd je jno clc movsb int3 sbb add and (bad) and outsb xor cmp push stos sub add push in pop add shrl nop fiaddl int push rol (bad) cmp add sub add repz xorl ret pop pushf and rolb sbb mov fstpl mov dec fbld push loopne and inc aas nop mov outsb aaa call push jo add xchg xor pushf sub mov (bad) shlb xchg push fistpll (bad) aam mov ja call jle adc (bad) insl adcb ljmp js ret xchg jle sbb adc test lods add push mov cmpsb scas icebp xor adc pusha jecxz arpl xchg rep enter jmp unpckhps das mov xor enter imul cltd push int inc push jns ja jp inc repnz enter scas xor pusha loop pop push pop jmp icebp aaa out jb mov xor adc mov pusha add lock mov fadds or hlt daa mov pusha xchg jle add sti rclb push test ficom pop cmp push add int3 imul xchg jge cmp and (bad) leave push pop icebp aam mov lock add inc add outsb jp lds dec adc pop mov adcl push pop outsl mov push enter clc je dec pop nop fdivrl es pop xchg add out out jb or jle inc clc adc (bad) xor xor mov add fistp pop add sub addb mov push push pop and jnp add or outsl nop dec jo and mov add push (bad) stc rolb ljmp subl and out dec fadds mov mov dec ljmp inc add repz or repnz sub cmp mov push mov hlt pop add stos xchg push ljmp movsl repz push xchg pusha pop jo hlt push add icebp cwtl add pop jno push aad and je add add inc scas add mov sub (bad) lock jne addl in sbb lea sub daa inc testl cmp add pop jecxz inc add add mov mov outsl sub adc dec xor add repz cmp test inc push push fcomps and cltd pop out and inc jmp and cmp int3 add sbb mov out sbb xor add lcall outsb (bad) push xor lret pop pop sbb hlt cmpsl (bad) cmc ljmp sub call inc or pop inc orb fwait jecxz cwtl push push and mov mov iret adc add push lock mov xorl push mov or push addr16 xchg dec out push add insb cmp and loopne lahf pop rorb adcl mov or mov mov xchg or in cmpl pushf shrl notl mov cld scas add bound pusha jo or arpl in int3 add xor ret por stos mov mov std dec clc add jns ret add outsl dec inc jne add mov add popa repz add fdivrs adc rorl lock push push (bad) and test add push cmp xor inc inc int3 rorb add xor lahf int or adc movsl les add in cmp stc shll movsb cmp jne add (bad) pop mov jecxz rolb imul jno mov mov push add jns comiss sbb lock ja adc rorb or xchg jmp cmp adc mov (bad) arpl push jl test test add add insb imul fisttpll and addb mov mov mov js loope pop or push lret lods ficom sbb dec dec lds add ja xchg lods (bad) cmp enter add les std add add cmp push mov imul loopne cmp (bad) xor mov adc scas call mov out add mov insl sbbb add lret push mov in insb add sub adc ret inc test insl jecxz pushf mov push orb and lds cmp or and add dec pushf sbb inc mov jne add fmull out pop inc jp (bad) or shufps or and xchg and dec mov sbb or jl ja cmp (bad) je mov add dec sbb add jae mov add mov call xchg sbb fimul jl jl lcall ret add push pushf mov (bad) inc mov dec clc mov inc mov jnp add jl outsb adc push add mov jae aam jbe,pn inc add pop jecxz push out (bad) cwtl add out fsubrs jae (bad) setne (bad) mov xchg or fs add sbb and mov rolb cmpb add mov (bad) xor aaa icebp adc add mov pop add fmuls xchg add add pop xor or adc add mov xor adc (bad) pushf mov lcall sub sub adc add or sti xchg mov lock add fildll add adc loop mov movsb mov lods sahf addr16 sub sub push mov aaa adc add das inc xchg mov mov out scas iret lock push dec leave sbb and cmc pop ffreep add lock mov inc test adc pop sar rcrl dec mov outsl push push cltd sbb aas dec in add sub add mov loope adc subb cld add movsb cmc jmp add mov push or insb pop pushf push aas add fldl add xlat jb pop arpl pop mov mov incl xor scas jecxz add pop pop and repnz dec push add js add jmp jno shr xorl nop and add ljmp pop and sub addl jg outsb ljmp repz in push xor adc or test inc dec jns jp add ljmp loop cmp add sbb cmp sub jmp (bad) loopne imul aaa clc mov add pop mov xchg in out dec add int movsb roll xor loope stos sbb dec inc add cmp (bad) mov nop in mov icebp jno test inc lds cmc out add jae in adc pop sbbl add mov inc xchg sbb push adc aad lea xchg fwait dec mov mov pop pop mov inc sarb and cli dec add in into pop addb gs push sbb icebp add jg xchg add cltd cmp and clc xchg int3 adc test mov jmp push (bad) ljmp pop nop pop ret add sahf push call in adc cmpsl add loop mov add insb push adcb dec cmp inc cmpsb or imul sbb mov and adc add pop cmp mov push fsubs rcrl (bad) dec and fisttpl (bad) js out inc pop mov pop fmul xor xchg (bad) popf xor in cmp xchg cmc pop cmp pusha cltd and inc pop dec sbb clc sbb scas add sbb in dec int3 push test test rolb add test (bad) mov jmp mov dec add cwtl pusha cli inc add pop mov aad and test adc add and mov add arpl out inc test or xchg sbb notl lds mov shrb (bad) add jo in testb shrl push aas nop add add shrl jb mov add daa dec popf fdivrl cmpsl les testl das loop in lods cld fisttpll outsb push push popa loope orl add pop iret jmp push ss ret jmp pop xor dec xor pop add mov mov fadds clc xlat xchg cltd nop mov into outsl pop sbb (bad) in aas shlb jb add stos out int3 cmp xlat add xor inc pop in mov cmp (bad) aaa dec add push clc sbb aam add jp ljmp subb mov pop addl cmp fnstenv in push cpuid xchg sbbb (bad) sub push int call xchg jmp inc clc cwtl lret cmp add rcl mov fisubl aas cmp lret stos dec fistpll mov mov add sbb das out or mov add leave adc dec pop pusha cmp mov mov imul cld xchg outsb dec rolb inc pop adc add xchg or test addr16 add cltd add into add xchg (bad) push jle add xlat movsl cmpsb imul cld jge fnstsw fsubl addl fstpt std add sbb cld testl ss dec test xor stc gs std add imul jne sbb jb add dec jecxz add aad lds out add (bad) ret adc sbb pop stc ss add imul push add jg inc jecxz test add ja shl scas xor jnp sbb and inc stos rolb mov stc fistl popf ss leave movsb mov mov notl jnp incb loop or aam add and inc jmp adc fistpll (bad) pop jmp or sar aas call push dec push loope sub popa ja jle xchg sbb sbb adc inc or sbb cltd add ds loopne cmp mov add fsts add add push jne sarb mov (bad) mov fidivr aaa nop xchg int3 test mov jg add cld cmp cltd add jbe push inc es and pop dec inc clc aam pop jne add outsl or xor and sbb mov aas sbb xchg add mov mov pop push pop add xchg shrb in pop add pop xchg ret bound cmp pushf pop and xchg cmp stos leave es or andb adc (bad) scas add add mov dec xor mov add mov test pop add ds jle xchg add jo aam push mov call add rolb pop add pop sbb mov add add and fbld mov xchg cmp daa subb (bad) cmp into cli add gs or lds out lret push sbb pusha dec daa mov add fisttpll rorl and xchg int3 add stos insl sbb fldenv dec imulb or add insl jae fist into orb add push jecxz adc cmc add dec mull clc aad invd js inc adcl lds mov xor jae pop jo jbe or cwtl inc add push pop mov jbe test arpl pushf insb mov std sbb sbb cmp cs dec or aas push pop call cmp ror pop (bad) xor jg leave mov iret jp add (bad) pop dec add sbb mov add iret sbb cmp lds inc lods cmpsb add imul add mov add dec jbe out fstpl jne pop dec inc in (bad) sub push add xchg xorl mov add pusha push add jg mov add mov jo or mov clc xchg (bad) mov push dec pusha repnz repz repnz popf test add sub cmp sbb sub or ja cbtw shrb rolb adcb inc daa add add pushf push mov add xchg sbb push add stos sbb int inc shlb movsl and mov mov nop imul xor pop jo push in nop jl add out lock push xchg iret sti xor test xchg mov push jae or cld sbb pusha cwtl or arpl or push sbb xor pop add mov dec adc in ret loopne das sbb lcall mov fsubrl or sub mov arpl repnz mov (bad) mov (bad) and xor cmp rcr add inc add add xchg addr16 sub sbb (bad) and insb push orb ja push loopne pop test adc (bad) add dec inc mov (bad) lods mov loope leave xchg dec test dec xchg add mov or adcb inc push sbb pop pop rorl pop jmp push jo inc or ret lea stos cmp xor cwtl add (bad) fistpll pusha mov aaa sbb into xlat pop lea xor out xchg cwtl cs add mov pop push push jecxz test xor leave inc push popl neg xor or ds push loope mov repnz mov xorb jns add lea icebp test add hlt xchg dec fbld rolb call sub nop sbb pop adc aad ret sbb mov sbb sub negb adc mov insl in insb cmpl subb cmovge xchg rcrb fidivrl loop loopne mov mov mov pop mov mov jle add lods cli mov xor xchg ffree nop lahf call sub xchg and cmpsb add push clc mov mov rcl push xlat ss jle ret push cwtl pop mov stos cmpsb or shll sbb dec pop (bad) mov xchg mov jo lods ja aad iret (bad) jle push push jp in inc or (bad) sti xor jmp inc cmpl ret cmpsl adc sub inc ret and rcrb or negl mov fisttpl cmp dec out cmpsl rolb jne dec xor nop xchg cmp xor sahf jo cld insb cwtl inc dec gs (bad) jg jbe cmp fcomps in leave add or pusha fld add imul add add cmp in jle pop add jge add jmp add xchg stc in icebp dec fiaddl subl outsb sub jne add add add fsubl outsl sarb mov lds adc mov inc add insl movsb sbb fsubs pop push xor sbb pop cmc add mov scas stos adc adc out add insb fsub add adc mov dec test mov xor pop mov aam insl lods and mov negb loop lret sub lahf js loopne xor add stos add mov sbb push lock cld push fisubl mov (bad) push pop rorb pop adc ret mov stos xor rcrl jmp mov mov subl dec jne in mov dec stc mov push adc mov jbe adc add push in pop test adc sbb scas add (bad) out insb jmp jb (bad) dec xchg ss or sbb aam cwtl add mov jnp add xor jne xchg and repz mov enter mov dec sbb repnz bound sbb movb sarb add hlt repz daa outsl pop dec inc push pusha ss xchg lret sbb nop push push cmp add xlat (bad) cld mov add clc aaa adc (bad) jno ljmp stc mov push pop jbe std insb sub out lods mov sub mov ljmp push inc cmp jp sub (bad) mov cmc inc add incl fimull jo add or add cltd (bad) das add out imul jge loopne pop mov jl push mov sbb stos inc rorb mov imul mov or pusha adc sarb lea add mov cmpb sbb movsb mov loop mov les add or dec stos and mov mov pop scas jnp insb les clc icebp movsl sbb imul popa and mov add repnz test lret push push jbe subb ja adc or (bad) lret sub rolb xchg mov ficom cwtl push push add pop pop sub cmpsb enter (bad) nop sub je data16 and loope cmp aam aaa lock insb pop add and loopne out pop dec add test mov cmc xor repnz add addr16 push add jbe imul ret nop ds and cmp ja jbe in add (bad) sbb add pop fwait push fsub out add cmpsl and xchg scas out pop or add mov add jae dec je jnp mov add adc and pusha jo cmp dec push adc xchg into pushf mov xchg xlat xor jl push daa mov stos push mov adc cmp pop lods add les stc mov push add push adc add or push out add adc lods xchg ffree es rol xorb insb mov and movsb pop ficomp jno aad cmp xchg adc arpl bound xor inc pop mov lahf mov xchg push mov add pop jns mov jne add xchg add adc adc jo bound xchg pop orl inc cmp cmpsb jns bt mov and hlt call push add or daa inc sbb and lea call pop ja aas fistpl sbb mov icebp aas push add xor cs fnstsw dec addr16 add sub mov dec mov pop out inc mov cmp lcall pop push add push pop add xchg xor xchg enter cwtl jo call inc mov sbb aaa lcall inc cwtl xlat cmp aas xchg pop idivl or stos fcoms fldl mov and mov xor xorl (bad) sahf push test push (bad) movsb xchg and push rorl pop out mov fldl inc cmp aas cmp sbb pop or fimul stos ss dec dec sbb loopne daa push idivl ret inc andl and imul or flds lret ja shrb sarl arpl lcall inc push or pop mov test leave pop pop push mov movsl pop add sbb sbb cmp ror dec rcrl sti out adc push or movsl xchg mov es (bad) in movsb in pop push or aas mov or adc mov fnstenv adc push fdivs adc pop outsb stos fstps rolb rorl xor out push mov fstpt (bad) ja xadd out xor xor xor add or mov inc fildl inc sbb int pop xchg ds lret or mov cmc add adc inc push xor jmp out add mov movsb shrl cmp pop fistpll xchg sub (bad) mov popf pop mov jne xchg sbb cmp js sub out popa call or addb adc adc lret sub les int dec out sbbb mov add and les jo add ds int3 roll sbb iret sar jns insb adc rcrb in cwtl maskmovq imull ljmp add movsl test add mov mov cmpw jne out add clc rcr add adc adc test sbb sahf (bad) add jns jmp adc out add mov stc sbb xor jnp mov pop add ja fwait adc mov add jg loopne daa jge add stc mov pop loop jp stos xor bswap leave add cmp mov sub cmp push push arpl fwait jp stc rolb inc movsb cld dec mov repz jmp or loop xchg in push mov cmp lods pop out fisttpl jmp jle movsl loope cltd fmull bound sbbb call cs daa sub stos ja mulps add mov xchg outsb jge in fisub add fnclex bnd add les repz in ficompl loope xchg addr16 add sarb out movsl inc je add pop inc lret adc int3 and mov iret and add call rclb pop dec fild push push jl add and stos jnp dec cltd pop adc add div shlb ljmp arpl lds nop push mov xchg push mov movb xchg lock mov or add and jno inc out sbb add xor roll fbld xor xchg into in jnp inc adc cmp xchg shll pop push push (bad) jg push sbb in das xchg scas push inc (bad) lock add lock mov addb pop int mov xchg and movl push xchg popf jo push jp pop or mov sub lahf hlt fiaddl xchg xchg sub test iret stos add jnp cmc cwtl rorb push ret mulb or and push arpl xor cmp sub push test xchg cpuid dec inc cmp dec push jp xor movsb push int or bound sbb add or sarb mov andb loop push xor add pop and jae mov popa enter mov icebp lock jle xor movsb repz ss lret andl cmp mov add sub cld nop push pushf sbb mov inc into ljmp or push push (bad) jae mov pop jge rcl mov jle xor push sub icebp and adc jmp stos sbb test lret sbb add dec sub jb out push add mov flds adc arpl (bad) push clc incl repz sub pop jno es addb nop dec mov push rcr mov or and gs push inc push add imul das xor add cmp jl clc jle adc inc addr16 cmc roll mov pop in sub sbb xor aaa shrb pop push mov pop add outsl mov add inc pushf call dec sti loope mov pop cmpsb (bad) mov push stc fxch out add or insb pop daa aad add scas jg imul sbb movsb sub pushf add xchg pop sbb xchg pop pop pop (bad) dec dec and adc call mov ss mov add sub or nop pop add fld xchg ja pusha lret mov aam aad add ljmp add add add out (bad) scas mov cwtl movsb jg js std in sti pop enter pop inc mov lods sub xchg lds (bad) bound xchg push pushf addr16 cmp add lret std add and push in xchg es fst add (bad) clc xchg add scas jo dec std or add rorb scas xchg in add xor xor push pusha cmp mov or and shrb push aad enter jae push shll out add push gs test mov add insl jle push pop repz xor mov add mov ja inc mov sahf fild scas xlat lods rcrl inc jns in xor jo in adc ja adc outsb inc divl push sub cwtl cmp loopne insl mov pop pop mov or jecxz xchg std test push mov add add fs jo add in pop cmp hlt mov push fcmovbe pop mov in xor add enter jno push add cmp jb loopne push test inc jo inc daa dec hlt jge add ljmp cli fmuls aad (bad) pop orb push stc dec push xchg mov and mov iret sbb cmp xor jl adcl inc and fwait ja add adc mov jno cmp add lock mov mov aaa cmpsb ret xchg iret (bad) clc add test ja js pop mov xchg adc mov mov scas push inc or into mov xor jae add adc and sbb cmp dec out add jge pop inc cmp adcb aas push mov pop addr16 aaa js sub sbb addb stos in mov das in es cmp imul std out pop pop pop sub (bad) lods adc pop and loopne xchg mov and add cltd xor pop fisubrl xchg jp push rolb aaa push ret add add mov in int3 fbld cld sbb cli add and or out nop jmp psubusb popa push popl add pusha stos sub not add in push movsl out xchg mov mov addr16 insb movsl sar or movb test aas mov add xchg xlat and les pop add hlt sub push cs sub xor (bad) dec fisttp cli call sbb loopne mov je and mov cmpsb sbb scas cmp push xchg in jle cli xchg or jmp loop ljmp test ss adc std cmp cld call mov or xor sub pop mov and sub mov out inc and leave mov pop ds sbb bound add add add fcmovnb and fimull addl xor adc add mov adc mov jg lods cmp add in mov lock and cmp (bad) lock push fwait lods pop inc arpl push jae in pop inc sbb cltd cmp cli lret movsb mov add pop fmuls loop xor dec outsl aad cmpsl sbb dec cmp xor pusha dec in leave jbe mov push out inc mov mov ficoml fdivs or es lea add cwtl cld aaa std pop pop add sarb sbb out pop xchg pop mov lods std and jo add mov or aas (bad) icebp in or cmc xor xor add int fs cs cmpsl sbb cld add pop push negb inc add cmp lock lock sub sub jmp movsl jo js sbb push pop mov pop das dec jl,pn push bound sbb and pop mov (bad) ds cltd xchg jnp hlt cld clc push aam sbb in mov cld punpckhbw ret or inc add lret push in pusha les sbb cmpsb add lcall sbb lea push addr16 add mov add movsl jle mov mov jg lock xchg add jmp ud2 jnp roll adc (bad) lods cmp (bad) pop mov mov mov mov push mov icebp lahf inc call aam ds mov jb mov scas cmp aad dec lea inc mov push xor and pop xchg push cmp xor (bad) negl jo cmp cmp mov push sub scas sub mov lret outsb iret fcomps cs push push or or orb enter sbb jns push dec dec push and arpl call push cmp (bad) push aam pop stos sbb mov lods adcb stos adc jns or inc xchg movsb inc mov jl push call push dec mov and and aam jns jno jmp mov add inc mov aam rcr push sub add (bad) les adc push add xchg add inc (bad) mov ds mov adcl jo outsl mov push call add ljmp enter and xor adc jbe,pt fisttpll xor nop add mov loope inc aam rclb (bad) dec in stos insb or push daa test es add push sub push pop adc mov aas cmp and scas xor arpl dec in lea cld push outsl or in test lock push mov push (bad) js popa sbb imul or push (bad) and jl jge or push mov and xchg les mov push js dec mov and fwait loopne or jl pusha dec sbb pop lock nop fmull lahf insl xor or dec push je in push jns add xchg and ret rcr mov xor femms mov xchg movsl aam lret cwtl xchg add jo icebp loop or and pusha and aam scas nop shr ljmp add mov (bad) jns sub loopne or jge add fwait and lret push adc fildl jns mov out dec mov jo push cmp adc pop and lds push push xor clc (bad) xor adcl enter push inc xchg lods in sub mov decb jo add imul (bad) (bad) rcrl adc pop andb xchg inc fmull in aas out pop sbb add mov jne push add arpl movsl aad and adc pushf inc dec mov das arpl sub popa test add xorl and arpl adc or mov aam sbb cmp mov sub add adc push pusha insb roll sbb inc add inc pop mov jg inc xchg lret mov cmp aad imul mov test outsb xchg pop sub or xlat mov in scas cmp push psraw adc dec mov clc pop mov mov cmc add push sti aam in cmp push rclb xchg jmp test add dec aas dec jb pusha add adc sub in jp inc ljmp push pop mov stc les and jbe fcompl pop scas mov adc xlat xor cmp and aam sub dec pop lods and push push aam dec inc ljmp xchg (bad) adc insb add pop repnz dec bound jo inc push mov fidivrl and mov lret data16 pop les push and loop addr16 mov inc (bad) mov divl pop xchg pop add in (bad) aam and adc sbb adc inc mov pop xchg sbb imul leave (bad) mov fcompl adc les dec mov xor icebp enter dec and cmp push xchg jo nop incb shlb and sarl aam (bad) aam inc into in lea test xor jne adc pusha js fsubr dec inc and icebp mov movsb lods je andb rclb push push add mov inc sarb mov hlt or in lret dec add and rclb xor lret mov fs xor add xchg mov or (bad) xor jbe out pop adc aas pop push adc add mov divb sti fild aad push mov dec jno fsub lahf loopne mov fwait jp in mov xchg scas dec cmp xchg sub or and ret hlt sub rorb xchg gs mov lock mov ficomp adc mov jne fadd mov jns add lahf push push mov fs sub mov xchg add (bad) adc cs mov scas icebp cmp xchg cmp add mov push dec push add or jge add mov push mov (bad) ficomp push push ss mov sbb cmp add or lods dec insb cmpsl sub ds mov rclb mov jno inc mov aas mov pop rorb lock cwtl loop cwtl sbb jp movsb mov lret js push dec lcall mov ds in out or pop (bad) lock mov and sbb sub pop pushl add cmpsb sub and movsb or cmpsl inc aam cmp push pop mov jl imul xchg jne mov fs lds fsubrs dec pusha test push sbb (bad) popf push mov sbb clc addr16 lock mov xor jne push and add cmpsl fisttp mov pusha dec imul xor (bad) rol addr16 add add sbb aad push sub call dec inc adc in push lods pop push add fst cli insl add lahf jns scas or dec inc cs repz or sub add icebp pop lods mov cmpsb jae inc add add das sbb add pop aam sub sbb (bad) mov shrb hlt push lds sub aam add pusha and mov add jle add fucomp or ret sub sahf imul cs fadds jle sub in mov bound out and (bad) cmp flds jg aas inc mov sub pop mov pop jl ja add sarl add pushf or mov adc in push inc push fist out mov fidivl addl inc (bad) mov sbb jne cwtl adc test or hlt and add push clc xor sarb dec jae fisub xchg add or and xchg mov mov add jae mov mov cmc or test (bad) sub add mov jo xor jp les xor imul or xor sub sbb push dec inc cmp push mov in and scas mov je test rolb push (bad) daa mov jno addr16 leave mov add neg or or ret mov daa or test jo push and push mov aad imul xchg fs jle sbb mov call mov mov pusha xor xchg push andb xchg mov sbb rcrl dec lods add xchg in lds scas or add lret pop mov push in faddl nop call sahf pop add ds ret sbb push pop inc mov pop and push add pushf aam lcall mov neg cmp jl sbb sub mov cwtl xorb in fcoml nop dec dec data16 or in jne add push cmp mov xlat lcall fs or insb push movsb fmuls jo and add jl mov xchg test or pop add or cwtl jp pop add adc mov shll fild push jb movsl mov inc add sub xor add insl daa xchg clc add in adc jge in (bad) push ja jo mov mov push dec adc cmp adc sub add adc add adc sbb jae out mov addr16 xor sbb mov push fs push je mov bnd shlb cld add adc or lods nop dec aam inc les and cmpsl in rcl js inc loopne movl or and jl lods add scas dec cmc dec adc sub inc adc fsubs hlt or sub adc mov add adc js sub nop mov mov add dec aas add dec test inc fwait adc leave push sbbl test xor cmp (bad) add mov sub adc ret sahf leave add xchg or fs add out arpl loop mov mov lock sbb add popl mov push xchg cmp xor aam sbb xor (bad) into cmp push jb sub inc lock cmp or add jne aad or add pop add and inc hlt loopne aam adc and cmpsl scas or aaa popa test sbb (bad) jo adc pop sbb jp inc movsb dec mov pop push dec enter movsb add aam sbb pop inc mov into lds sbb jl sbb dec mov icebp scas sub adc lret jge mov add mov stos (bad) inc jp sbb dec push push shrl mov push mov cmpsb leave cmc lds cmp push inc outsb jo mov lret int3 xchg and or ret add lock test pushf add sub add and jno stc mov rorb lock inc push push and lock imul std and xor divb sub add fcoms mov rcll mov dec xchg imul rclb fiaddl sub js xor cmp (bad) je movsb fnsave scas jl mov jmp xchg in sti adc sub mov dec mov xor outsb or add sarl xchg ss add roll ja (bad) pop mov ret xchg sbb mov and xchg adc add push adcb cwtl into insb pushf add and or in repz push insb adc sbbb inc out lods add fs inc fistpl loopne ja sub fiaddl icebp xchg iret (bad) stos mov aaa mov outsb push cwtl enter imul add nop repnz sbb dec movsl hlt sahf les inc ret or add pop shrb push jns sbb out jecxz lods jno sbb lds or xchg sbb lret dec roll add sub push icebp add ja popf push dec pop and xor jo jnp mov les push ljmp add pop icebp and jae out add outsb xor std dec mov pusha in cmp xor inc xor dec scas add xor cvtps2pi call pop jnp add sbb cld xor add adcb in add mov mov inc cwtl add adc lock add subb clc pop jmp add inc mov pop sbb popf push loope es int (bad) mov jp add xor push inc cwtl jmp pop loop ss mov jmp adc cld push cli add aas jmp mov cmp out or call js jnp imulb lods mov addb or add repnz dec jnp inc push mov mov mov in fdivl inc mov adc jmp jns movsb roll cpuid adc adc adc sub and mov les adc dec mov roll adc add jae or mov js add adc cli add scas pushf dec ljmp es and add pop cmpsl test pop mov test mov cmp push cmp or jbe fadds rol adc add sbb test mul data16 inc cmc push add xchg cli and push cmp sub jns add fstps or loope adc ja add adc xchg push (bad) cmp add pop cld sbb stos add lods lea cmp push add sbb add in push aam test pop das in jbe test jle lods pop jae xor orl insl cmp add jle mov push mov nop in push lds sub mov jl xorb repz imul or add stos sbb invd sbb xchg adc push mov ljmp push sti mov imul loopne popa in leave arpl push mov jle xchg add sbb sub pop andb les loopne,pt adc xchg mov aas into jg,pt xor xor addb xchg (bad) sbb add mov and mov out push dec xchg xor popa add cmp push in inc and inc add mov mov cmp (bad) js add mov xchg sbb imul repnz cmp idivb cmp in (bad) mov out stos sahf cmp sub jecxz es jg add sbb lahf pop rcr xlat movsl push add cld sub test ret sarl add bound add dec jne loope push add aas xchg add add lret sub lea jg,pn imul stos test push mov (bad) dec cltd dec mov cmpb or mov cmpb aaa (bad) dec imul lcall mov jg jp push call push loopne xlat push or inc aad nop dec andb push (bad) sbb icebp cwtl js jecxz xchg lret add cmc je pop punpckhdq rolb and push mov lcall and xorb pop dec mov add cmp sub dec hlt adc mov and cmp es push or jnp ret test loop imul or roll shll xchg and outsb add into and jge mov cmpsl add inc sbb idivl and mov xor mov ret inc or jbe push lea mov in fwait les add mov or out mov add push mov add jb test add mov xchg add push xchg push (bad) pop enter loopne jae std push sub add add mov dec add in (bad) xor sub notb (bad) out push and cmp or push test lea ret inc and fst pop roll movsl mov pop add xor test fwait adc shrl and aaa loop add ret dec mov add dec cmp cmp cld push stc movsl mov adc sbb loope pop dec add inc push lods push push jae add or jb mov add push imul jge jns add mov inc imul cmp sub or add fldl add out ss dec mov in notb mov jns add push rolb (bad) and outsb cmc cmpl and mov mov xchg add cmp js gs pop cld cmp mov inc push icebp sbb sub clc jl imul jg or fidivr add add add icebp je fwait sbb sti and popl imul out cmp sbb mov scas inc daa leave out fist shr lcall or ret stos adc mov incl mov lret repz testl cmp testb xor adc jo lea inc aam cs divb dec mov or xchg mov inc jnp jmp lea pop inc inc xor add sub push mov inc xor ror cwtl stos je add jo aas jne add and aad mov into mov inc mov push insb inc mov test andb add mov stos add (bad) pop inc cli int3 push xor rolb jmp (bad) and push cmp je arpl scas xchg add rcl (bad) fistl jecxz adc sub add aaa lahf push arpl mov xchg int3 fmuls push or aaa stc out sar add mov xchg mov out jno (bad) or cmc cmp mul push fadds ret xor push xchg dec xchg or pop gs stc mov cld add mov xor out mov add negb add push jno into test mov jl js cmp mov or push cli and mov (bad) mov cmpsb sarl adcb lods call loop push repnz add adc insl adc in mov pop add rcrb mov mov popf mov push mov mulb mov mov int3 mov pop mov in fadds add xchg (bad) jg hlt insl add sbb dec gs jno mov loopne mov ja pusha xor or mov fdivs (bad) insl cmpsb sti mov call mov inc mov mov mov sahf hlt les lret add ja adc pusha mov mov nop pop or fadd out mov lahf cs pop hlt es mov mov inc mov pop mov or add sub dec pop inc add outsb les scas add lock pop xchg mov and sarb jge push jp mov add (bad) cmc sub lret add int (bad) ljmp mov stc sbb es mov movsb or (bad) das mov dec or test add lds or jp and loope test and inc ss sub cmp and (bad) sub cmp data16 xor adc ss lret dec incl lret stos jno faddl andl arpl push add pusha pushf clc mov lret inc xlat loope dec add lock rorb mov ljmp lcall add add inc mov inc lahf xchg and enter inc add out ja push daa inc popw pop jbe xchg lods and push sbb imul pop adc andb pop ja add mov clc add mov add inc pop and push push xorl and xlat popa sbb mov mov int adc push pusha xlat mov add jmp fild cs pop cmp lods xor inc cmp mov cli or ffreep subb mov rcrb xchg std (bad) arpl stc adc inc int3 sub dec sub inc cmc pop add mov lock cmovp mov shrb clc mov sub jo nop sarl add jg push sub movsl sub mov daa mov or and push add aas or orb jno into and jecxz mov mov pushf sbb adc add lds mov xor add fnstcw cmpsb jo dec jmp movsl add ret scas sbb and mov sbb outsl jb dec fcompl std nop xor xor pusha cs push cld in js xchg dec or lods rolb add and inc mov jae add (bad) (bad) add fiadd xor lods push add movb test dec repnz or add mov mov addr16 xchg sbb or adc cmp push shll push xor mov xchg cli and out push adc jmp sub aas fildl push loopne in push nop mov and loope out and repnz movsl mov lret push fcomps lods sbb xchg movsb shll add mov inc fwait pop pushf or imul movsb lods rolb fisttpll or sub or stos (bad) outsb sub pop rol les lods dec dec int3 aad mov and adcb dec jno add mov mov arpl sbb fidiv loopne icebp adc xor fwait lret (bad) add andb pop jl add ret addb mov add add inc in sbb addb ja xchg dec push and mov in add into push imul cmpl mov lds shl pop xchg sbb jl gs stc sub (bad) add cli es incl rorb add mov pop add xlat add jo dec cmp add fisub mov test xchg stos push mov xchg sbbl inc pop adc push in xchg loope jbe mov std mov add loop jge aam sub cmp mov inc cmc xchg mov mov lahf addr16 imul or pop popa out aam clc mov inc out add iret or lods in xorb inc addl push sub jo int3 out mov sub jecxz mov inc add imul cmp cwtl mov push lds ror dec push hlt sub roll jo xor mov jb mov fwait pop xchg add hlt fdivrl mov (bad) icebp push and rcll fs mov add mov inc (bad) faddl add push add adc addl shlb xchg add faddl loop icebp pusha xchg (bad) xor or cmpsb add jmp loop sbb out in jle icebp pop clc adc xchg movsb fs psubw outsb or xor enter cmpsb fiaddl push add sbb or cmp scas add insl push xchg xchg lods nop lret jno punpckhbw aam add das daa mov xchg lcall add repnz fisttpl mov or and adc sub add add movsl sub add push and adc or cmp aad ljmp inc xchg out mov pushl jae inc pop sub enter cmpsb scas stos test ret ds pop outsl jp inc pop add sub pusha mov (bad) insl inc dec jecxz ljmp test clc roll or icebp mov jne pop sbb add dec xchg sbbb enter inc mov pop xchg sbb dec out jl ljmp je inc xor jmp orl push sar movsb fldl (bad) pop pop xchg sub arpl aas pop lea insl sbb fwait mov out jle popa stc add and xor je in (bad) loop sbb iret std add jge sahf nop mov mov hlt lods add ret (bad) mov fldt push outsl and xor iret pusha adc mov fidivl popl dec add xor outsl xchg out sbb jo pop clc in add adc add pop cmp cmp mov mov jge dec sub jo or ror push leave mov add aad sub and sub nop xchg add or mov jo ljmp pop call arpl push mov mov inc (bad) push in mov pop add fdiv lds movb sub adc lcall es test push add lret adc (bad) sahf inc add jo rol mov roll loopne xorb repz loopne push aaa cwtl pop add mov cmpsl or inc or inc adc test add mov and or (bad) sbb cmove cmp jecxz cs and sub js push shr mov add adc mov add jne inc (bad) adc gs sar add or cmp (bad) (bad) mov mov sub mov (bad) xorl push sbb popf rcrb rolb sbb clc bound push ret movsb pop das leave test lock shrl adc ljmp (bad) lock push imul sbb loopne sbbb push add mov push inc add sub mov shrl movsb add outsl mov (bad) pop scas fs es or lea sahf test inc in mov int dec add cwtl in mov je mov jb sub push or mov int3 mov pop mulps jl loopne jo std mov sti pop inc dec sub push cmp pop sbb fs ljmp fldl data16 jle gs rol fcoml pop push or add rol insl gs movsb add (bad) repz test rolb stc mov add scas jnp or (bad) xor add jecxz,pt enter push in mov (bad) xchg push (bad) ljmp mov pop dec mov inc xor cltd mov jne push punpcklwd xor jecxz,pt rclb das cs repz repz pop push sbb pop or mov pusha cmp pop stos pop and loopne lods or rcrb lret (bad) jo or add gs dec (bad) lock rolb in xchg sahf lahf cli dec add neg stos loopne nop nop push sub pop push addb add lea cmp mov inc xlat xor pop mov add xchg fldl ja add test add shlb pop pop xchg xchg add cmp stc cltd mov add push iret rolb jb das mov and imul movsl and xor fldt mov dec inc adc or jne enter jo test std add fcoms movsb jb push sbb aas outsb xor or cmp cld loope jl subb std push pop inc cmp nop push inc loopne mov xchg add call lahf jo add add push sar push jl xor xor sbb cmp enter rcrb lret cltd or aad into jg add cli add pop pop mov adc sarb fsubp mov and or and jbe or aam push sbb into aad cmp test test sbb sbb add stos pop dec push jb sbb iret jle add rclb xor rcrb inc mov ret xchg add sub testl cmp or shlb repz jne ror add test cmp xor test leave popa add scas push inc adc sbb pusha (bad) inc or mov push lcall movsb jle add in sub add inc in jbe rorl dec popf and test and add cs (bad) dec out add in mov gs inc les add mov add inc lods fdivs movsb (bad) sbb mov or imul or lds push xorb and and push in adc test add ja inc stos and push add dec push push leave push loope jl add mov mov in enter cld into fsts stos loop cmc mov loopne (bad) popa jno add jle or lods movsb push and xor cwtl and fldenv push mov mov shl or push or call and adc movsl cmpsl sbb or (bad) mov push jecxz fildll inc out sbbl movsb jl jg pop xor clc or cmp pop add lahf mov mov pushf add (bad) je pop push or jae add adc leave out and (bad) cmp xchg orl aam and dec mov pop inc push in js cmp sbb sti cmpsl mov add push push daa (bad) ljmp mov movsb pusha test (bad) mov scas add push rorb lds add insb xor jp,pn mov add jmp js clc jne addr16 lcall lock lds inc inc add add push inc xor inc cmp arpl dec sbbl andl push hlt xor movd and jl sub inc and dec in test xchg push jno and outsl pop inc jbe test mov adc imul jbe bound or xchg int3 call add icebp enter ss dec dec add lock mov (bad) push cmp add sbb popf icebp roll fucomi jno daa cmp std mov (bad) pop arpl fwait sti mov (bad) xor leave adc dec sar mov ds nop test aam enter mov xor ss ret cmp mov (bad) rcll and repnz mov add scas stos jae inc mov fcoml push mov push pop repnz inc ds inc sbb bound adc mov add in and imull lods add outsb cmc es add (bad) jae add jl shrl lret test imulb fs add hlt movsb pop pop andl rcrb add mov loope jne iret push add sbb in jns pop mov xchg sub mov push pushf mov lret je push sbb test (bad) call push test in jnp adc or mov xchg pusha jge stc stos add and into loop mov in fwait loopne sbb add pop ffreep push pushf cmpb push ror lret movsl mov into clc pinsrw dec adc je out xchg ja es pop mov dec mov and adc mov inc sbb insl push add fdivs in lret dec pop mov pusha push (bad) popf sub loopne add imul clc dec jne (bad) out fmull add std adc aaa sbb sbb jbe add or add pop inc pushf (bad) xor out call cmp cltd rcl cwtl add dec or aas (bad) sbb roll repz push sbb mov fmuls inc add dec adc jge xchg add test addl mov mov mov mov jo (bad) mov pop negb shrb jns scas mov add push ja sbb cmp in and jg add push pop pop mov xchg pop mov ja fs insb mov test and rcrl jl int xor push dec (bad) shlb mov add stos cmc jb aam subl sub aad xchg or insb aam add mov mov or add mov add enter lret outsb mov fnstsw or scas xchg lahf mov jo ret push mov add ja into add push pop (bad) inc xor jbe mov add mov add aas sub xchg xchg or jl pop dec inc jo mov repz fcmovb mov out xor mov lahf mov add imul ja sub fadds xorl iret add jnp bound cmp xor dec add lret jbe sub sahf sarl jg gs nopl jo test cmp add and cwtl mov adc ret push mov inc mov push and sbb (bad) xor subl imul sbb xchg aam stos mov nop mov add pop add add adc in inc add or mull fistl test mov out mov adc fst add mov pop ret pusha andb add and push jne jecxz xlat (bad) les dec xor (bad) xor adc dec adc push test pop xor cmp add pop push or pop lret subb int3 add pop fsubr std loope add cmp shlb aaa add sbb mov jo add add inc and or sub cmp das mov mov outsb adcb adc sarl sbb and cmp jmp fdivp das cmp faddl icebp scas fs and leave cmp orl (bad) dec rorb lret mov lods mov pop push dec (bad) jb rcr movsl mov data16 jge insl aam cmp (bad) fwait add fisttpl or sarl into insb andps lahf adcb fwait cld in sub repz stos jge icebp popf jge pop aam das adc cmp outsb jnp add ja mov fstps mov mov mov dec xor add outsb mov push int3 or test je imul jecxz mov pop shll inc dec push aad sub pop (bad) hlt push negl xor pusha pop cwtl jb push sti test add xor jae add lea sub test mov and fiaddl push out fist add pop push clc pop rol cld aam add mov add iret pop and ret cmpsl add mov cltd xor in imul mov cmc push cltd and pop inc adc mov shl int3 xor mov cli pop orb push arpl roll jmp sahf stc andb cmpsb adcb int3 mov add je ljmp rol mov xchg enter bswap push pop add push sub sarb add jb,pn int add mov add ret popf xchg pop sub fwait cs imul add pop adc or loopne push mov test popa inc xchg and adc mov insb int push (bad) rolb and dec mov add rcrb cmp test lahf jmp inc adc rolb adc inc outsl sbb or push dec add imul adc cwtl and lret sti jle andl pop lods test in cmp testl mov pushf add mulb cld gs nop dec rcrb cmpsl and js add aas or pop (bad) lock lods loopne jmp insb or jle or adc scas cmpsb les add icebp xchg xchg add adc push and pop out movsl adc pop mov push pushl psrld add fsubrs add loop xor sbbb lea lock pop add leave dec (bad) jb cwtl jl inc cmc xor mov lock add movl adc insb add cmp outsb mov fwait dec movsb dec sub leave push add test jmp cwtl mov push mov cmpsl adc add inc mov push (bad) aaa hlt jg cs imul inc mov mov stos cmp jmp add pop push inc mull mov sbb in addr16 mov movl mov ja (bad) and push mov pop xchg fs and cmpsb sub xor js add loop cmp (bad) repnz imul xor add and insl xchg add sbb push std mov and push xchg sbb jge lock jnp add jecxz mov aad mov inc xchg fild jne jno hlt js mov pushf cltd pop ljmp in sbb cmp xor stc cmp push sbb add les fs sahf imul pop shrl push xchg pusha mov add fiadd sbb add test add and movsb and out pop scas (bad) hlt mov inc pop add pop mov add pusha ret out inc aad or sbb daa mov aaa adc nop bound add mov and fadds add inc xchg sbb stc inc mov mov add pop or adcb cld or sbb push (bad) xor cmp xchg sub loopne mov pop bound inc inc inc jp arpl outsb aad je jnp ret xor es ja adc gs lods jmp xor add pop call pop loopne flds daa adc std add test dec (bad) loop ss cmp jno add frstor sbb sub adc or xchg cs ds (bad) les nop (bad) icebp pop mov js add dec ljmp add add divl mov daa mov xorb incl (bad) mov insb in push mov leave push fstpl add movsb xchg sub js adc or test addr16 aad xchg pop mov add stos fisub adc or mov inc push cmp add imul sbb sbbb mov rol ja add aas inc cli pop sub pop xor gs setle add ja lock dec lahf loopne and fildl pop sbb repz xor or and cwtl add test add (bad) jg int3 cmc clc fdiv inc add nop lcall lret sbb jg jno shrl push mov xchg insb daa cmp shl (bad) loopne mov gs andl sbb xchg inc daa mov movsl xor test or adc pusha pop inc add mov es std scas or fs jnp cmp ds mov gs or js andl and pop inc enter push or push mov out lds push mov push mov std test lock pop cmp fldt sub mov (bad) xor call add push movsb sarl bound rorb push add mov les add loop fbstp or jle add stos jnp cmp and inc jecxz subl add test cmp mov clc xchg jmp push rcrb arpl mov in mov mov mov add (bad) jle test (bad) or cmpsl outsb dec test add inc lret mov or sbb fwait xchg xchg sbb jb add mov mov lret std sbb insb les push aas mov add and and adc shr in insl add jns shrb xor ss inc int incb movl pop or xor ror mov mov cmpsl popf adc subb nop or ja dec push add neg add xchg sbb loope add pop push adc pop xor push xchg pop lret add (bad) adc add je cwtl adc xchg cmp ret dec les add aas push ljmp pop test outsl jbe sub loop pusha aam mov pop jp jno cwtl jo repz add repnz sub insb pop adc in sahf add scas pop stos nop adc in popf jmp add and sub xor data16 imul cmc push mov or mov mov lcall jns cwtl stc xor and movb movsl mov aad xchg pop jge js add mov test or mov dec stc add and pop mov pop mov lcall dec sarl push repnz adc fcomps add push ss and or fcmovu pop or gs add cmp sbb sahf pop out (bad) pushf lds jle sbb sbb mov stos mov xchg mov jle add je std jb add out jbe xlat adc jl add jle or add cmp pop mov clc lods sbb imul add sbb inc add bound pop je xchg or mov into add add cwtl or fsubrl aas arpl mov mul dec add dec mov add lods loop jne push ljmp inc dec lahf mov cmp lcall lea fs mov pop cmp pop outsb xor mov mov add mov cwtl incb test imul sub movsl fldcw sbb sub mov pusha push popf fisub inc dec jecxz push movsl ljmp add jecxz jge fwait jmp fbstp add aad (bad) stos leave addr16 sbb ds cmp xchg xchg popl inc jmp sub add js mov mov (bad) mov in add sbb ss enter add cmp ja mov hlt pop jmp sbb add sbb popa cmp cld add sub xor (bad) ficompl jno pop xor cmp les lcall popa cli fwait dec inc js add movb jp inc call decl inc push cmp mov les and std xor ljmp push iret inc dec scas pop test (bad) xor xorl ljmp xchg push stos lret scas test fildll dec xor icebp aaa ljmp dec ja fnstenv loope push mov lea jno jp mov dec jo mov adc arpl fidiv lods aad popa adc push mov or repnz dec frstor roll add sbb pop mov test mov fldcw scas icebp push iret aas insb movsb mov push leave mov add and or mov enter jne int3 mov invd push test cmp ljmp lock shlb lds pop js xchg scas jno dec int add lods (bad) xor movl or ja int3 adc or insl fistpll xor xor mov dec cmp add mov pop inc xor sbb jo lods dec shll aam xor loope fisttpll scas sub pusha sbb push dec add imul insb xor jo add test aad jmp icebp les aam sbb adc mov sahf mov pop jle dec sub sarb pusha into dec pop std mov push mov nop sub push pop call add push dec cwtl iret lcall xlat mov (bad) aas lahf xor cmp sub sub imul xlat inc add adc loopne jno add cmp inc jmp gs (bad) adc dec cmp adc dec pop fcmove add cmpsl shrb shr aaa loopne add jns bound cs mov sahf adc lret cmp inc mov xor (bad) dec and push les pop mov or pop pop mov cmp and dec popa sub bound ss pop in loopne loop cs xchg mov xor mov fiadd les pop jge pop jp dec add mov add mov rcl dec (bad) std sub push movsl xlat add dec bound int3 jo mov (bad) je inc inc popf jno add jg cmp pop cmp mov mov or (bad) cwtl xor rorb dec pusha adc lret add iret cmp pop mov pop test jl aad scas data16 iret add sub mov push ja inc sub scas sub scas ljmp pop and ja pop (bad) adc dec inc loope pop add inc dec mov popf pop movsb call xchg inc cmp inc adc cmp adc sub adc bound sub xchg add fmul and lds dec xor xlat lods pop adc int3 pop out movl test sbb ja pop push fistl rolb and xchg mov xchg aam inc mov adc xor mov sbb xchg dec shlb or pop dec lock push dec push jno sbb dec cmp mov cmp sbb jge imul add cmp call rclb mov aaa in or mov mov sbb imul cs pop adc lods dec inc inc mov mov movsl pop or addr16 push lods xchg inc pop iret push pop mov jns add add ss adc call lock or std rolb jo sahf ret insl pop push imul sub movsb mov mov cmp pushf jle lock inc add ss or enter jo inc iret add adc dec scas sub sbb out adc clc lahf sbb je ret or test fs fcmove add std xchg call pop push mov movsb cs int3 sahf adc clc int loopne mov mov mov add inc dec mov mov outsb dec mov xchg mov mov dec dec loopne cmp add sbb jge jle and data16 ss xchg leave fsubs jbe,pt cmp cmp (bad) stos jno aam mov pushf inc mov and xlat loop and incl fadds cs cmpsb cmp int add ja mov ss xchg dec xchg fistl add and mov data16 pop lcall cmp je add cltd mov dec fsubl popa add mov add (bad) lret rcrb inc pop adc inc or inc inc iret add pop roll and out adc ljmp pop pop xchg int3 pop or hlt gs xchg mov bound or inc mov fsubs mov je jle and or sarb jp mov xor popa popl mov mov int3 adc fstpt ja push mov popf push out push or ss cmp and push xor jnp mov loope mov mov and int add rolb add addr16 dec inc push in (bad) add or out lahf add popf xor test and (bad) dec lcall cmp push add pop mov dec mov clc lods jge dec lcall jbe add mov mov add lds pop jecxz sbb shrb in mov lock add movsb xor and or sub pop test scas or pop xchg rclb loopne xchg pop ret xchg mov and sbb and dec jo cmpsb jle mov pop ja dec mov je jo scas sub dec add mov lock iret mov shrl cmp adc jl jnp icebp arpl and adc cmp and mov les dec push bound das lds push push dec or xor in mov scas inc and dec jl push cmp mov mov fcoml jne add xlat arpl sti fmull (bad) xor or popa sbb rcrb xchg lcall add mov push mov mov shrb ljmp inc fmuls jo lods fisubrl cmp in lock sti mov mov mov push icebp je cwtl int jb add pushf jmp fadd fs sahf mov add jb (bad) push leave iret jne push ret mov mov push xchg jg cmpsl lock pop inc mov jmp sti cmc mov xor iret mov add cmp fildll fisub sub testl xchg pusha xchg cs push out dec push stos jecxz adc sbb pop inc cmp push jae mov shrb add cwtl cmc sub leave movl std fnstsw pushf add inc movsb dec push jp cmp sub fnstsw jmp mov adc gs jmp xlat pusha push sarb test adc jno ds cld jno fcoml dec test popf lahf push mov adc add cmp mov push mov icebp add push dec sbb mov mov fsub push add pop cmp bound lea mov sbb add ret sbb shll jl mov add xchg and sahf add (bad) jb push mov sub push jmp add add arpl or js mov mov mov add fisttpll dec jne popf cmp sub (bad) sub rolb es sub mov push stos scas push movsl call sbb jo sbb jmp mov cmp adc inc cmp icebp jg xchg cmp out pop test loopne sub lods cmp and mov inc mov shlb push aas add jmp add xchg or outsb xchg sub cwtl in jg imul andb jns pop inc sub outsb mov push jmp dec jne sbb dec bnd push decb adc lcall out (bad) js inc dec adc dec inc out (bad) (bad) add enter out dec test inc jge cmpsb pop and mov inc inc out jmp add sbb std push not sbb daa in sbb push fsubrs (bad) roll cmpsb (bad) cmc inc jns and sbb xor mov in mov push jle inc adcb cmp jg lods and add stc dec es or inc mov stos movsb lret push imul mov loopne movsl jg mov fsub (bad) mov xor nop inc test mov or cmp pop adcb pusha int sub adc lret (bad) push or jg fwait xor push mull sbb push mov jg cltd adc mov pushf push fdivrs incb xor shll lret movsl mov clc fs cmp dec dec adc or inc xchg add movsl adc push loopne mov ss lret test push xor call lahf and push xchg cltd add push jmp out xor adc push cmpsb dec mov push mov stos push test (bad) mov dec xor jbe xlat mov call fisubl subl inc enter or add mov cs pushf dec jl or fiadd cltd xor dec mov inc fsubr test xchg jno inc push cmp add pop out add cwtl sbb push rclb add or popa fcoms mov arpl sbb jp add push fmul in (bad) aaa or (bad) out mov roll adc mov and adc cmp add add sub push leave jl add jno test aam sbb inc mov push mov daa dec jp add scas xor mov add lds jmp imul inc add pop and daa imul mov push mov and sahf add dec pop clts or mov add pusha inc mov add imul mov nop push add jecxz adc gs sub hlt and add mov cmp xor mov out pop sahf sub mov adc lret clc sub pop mov sti cld stc fnstcw add (bad) pop cs repnz sbb (bad) adc sub add mov jmp int3 or xchg iret fsubl mov idivb mov add pusha imulb daa popf jno movsb pop push xchg add mov into aaa push stc push int xchg add dec (bad) movsb repz add push test add scas int3 (bad) adc into ljmp clc add dec mov or lret xor xlat inc ds add push (bad) fsubrs jne pop std or cwtl (bad) dec fnop lock add and add sbb mov dec pop and mov mov and push jle pop pop sub mov loopne add into jecxz mov and jmp inc loopne or pusha (bad) (bad) shll add fbld rol out mov cmp xchg pop jns out xchg nop rcrb nop push add pop (bad) fs adc cmp cs (bad) pop inc pop sbb out mov popa jne mov sbb mov daa push shlb dec jnp push fs mov jmp pusha aaa xchg test or mov cmp or adc xchg mov movsl imul mov xor and into push push xor push (bad) sub and clc add nop loope test jge mov cmp aam jg inc ret push and inc mov pop shrb xchg (bad) jno ret add insl adc push add xchg aas jle cs add stos nop fucomi cmp fmul lcall xchg or enter js inc sub aam sub cmp lret (bad) lahf mov fwait push (bad) mov rcrl mov add aad mov jbe add fmull or push cmpsl jmp lods cwtl rcrb add sub out addr16 ja scas cmp jecxz pop icebp daa jge gs stos add imul and das andl sbb add mov mov jg jecxz (bad) mov mov pushf sbb sti add cmp pop movsb add test repz divl out shr add ds fdivr (bad) add mov xor adc mov loopne or fsub add mov xor add or add push dec repz pop xchg mov mov adc or enter jg add inc ficoml sbb dec jge add lods xchg out jbe test test and (bad) jae mov push push add cld loopne xor sbb add ficompl add mov lock cwtl jg aaa addr16 shl inc mov push cmp push icebp jp mov iret mov add dec scas fiaddl push or sti je adcb roll cmp inc jno inc cs jecxz jmp adc cli add popf xchg push and dec lds lods dec pop stc mov push adc mov adc sub inc dec test into pop cmpsb cmp gs add add push fildl pop add (bad) inc mov jb pop clc adc or jns repz cld add pop dec mov ja (bad) scas imul cmp xadd rcr mov (bad) jp ds cld (bad) es pusha inc jmp sub out ret sti lcall jne pop mov (bad) js mov ds mov dec cwtl cmpsl testb add jmp jl add inc push int3 or out das add aam mov sbbb add leave or xor xor dec arpl pushf mov sarb cmp loope cmc (bad) outsl subb pop add nop add push scas lods hlt pop (bad) and and clc mov lahf in (bad) cmp inc mov jb loopne lahf sub dec mov (bad) pop mov lods mov out popa dec bnd push mov lock ja std clc xchg es jmp cmp adc scas mov (bad) daa out push aas js (bad) pop add lahf outsb mov mov xchg mov leave jae lock sbb add fisttp mov add dec rorb repz pop sti cmp mov mov pop pop pop add adc add or pop cmp pop sbb pop js (bad) pop sar xor and lds data16 jo lods call xchg mov mov pop add iret xchg add sbb and ret cld (bad) hlt pushf xchg aad and cmpsl fcmovnu mov fadd inc adc jl add (bad) push fwait cmp or cld mov int pop test adc add out xchg cmp mov add jmp pop add add mov enter mov xchg cmp and (bad) or repnz xor push push mov (bad) push hlt xchg fdivrp unpcklps push inc test inc pusha rolb loop pop sbb add movsb xchg add dec cmp add dec clc leave mov add imull cmp sub repnz pop sub mov loopne add mov and lahf insb in jns idiv jle xor je add popf mov jl push mov scas lret push jae mov jle dec bound ficomp and push cld xchg dec scas xor nop add in (bad) test pop push mov sbb cwtl pop (bad) sub add pop divl add sub aad mov sub clc cmp ror jo movsl (bad) rol mov pop jge cmp rclb inc add cli push cltd add ret data16 mov lahf push rolb cmp stos add nop xor push inc je pop inc mov lret pop test jne xor sub mov ljmp xor sarb push inc arpl addl cmc and add popf xor mov test cmp jnp in repnz jle cmp enter mov jo test add xlat add loopne cmp mov xlat lods aas int3 mov sub add incl add xchg inc lret and enter (bad) scas pushf jecxz ret test mov (bad) andb push fnstenv cmp leave xchg and dec stos in add jecxz sub loope test xchg add in adc cld pusha lock cmp pop insl movb inc out out adc dec jecxz lret cld into loop sub js sub add sbb mov fidivr js nop insl test jne test imul mov pusha pop subl and pushf dec cmpsl xchg add dec adc adc jnp pop rclb or add xchg in insw lock add and dec cld test pop jno scas incb data16 mov iret fadd or out cmp and add outsb lock mov jae xchg mov arpl cltd add stos les bsf lock in rorb jnp sbb shl mov jb bnd push add fxch (bad) movsb push jae test test enter aaa or adc xorl (bad) (bad) xor push xchg adc add push mov dec mov mov add inc in add subl sti testb cltd add add fdivs add inc adc add sbb dec add and add or cld add pop mov push jl cmpsb icebp loopne ss xor insl push sbb pop (bad) push adc sbb adc std test mov stc insb pusha mov add or fist sub push sbb mov cmp loopne shl pop add inc jb add es push and sbb pop and fwait or enter adc outsb jmp out call lret shlb negb sub xorb imul push add leave (bad) push mov (bad) jbe push (bad) and add (bad) add jge jno test mov popa push jne cltd sbb frstor mov (bad) pop push xor or add jo add int3 cmc push movsl adc add xchg insb cmp cld add inc lds (bad) lret mov jno loopne insb es roll sub push mov hlt jl inc adc mov xorb ljmp xorb mov in push enter xchg and ljmp rcrl add data16 add jne movsl sub dec jb in js addl les cmp repnz add dec mov cld sbb pusha add loop push add mov and mov fwait iret scas sbb daa mov jns mov pop jb sbbb sbb cmc test ret cli push adc or add push lret mov and jns sbb mov orl inc jno xor jo add cmpb sahf int3 mov (bad) fisubl aam loop and jle xor rcrl int3 adcl movsl lret xor add xchg jbe jns pop sub dec mov dec nop pop xchg sub in xchg pop jo mov andb xor test fdivrs or dec jp idiv jne xor add pop or les rolb mov in inc adcb fdivs add rcl push orb add sahf mov mov add popf or sub push cltd add jg cld jecxz add movsb mov lret mov leave lcall cmp movsl mov test enter jbe add sbb ret out xor orb (bad) add xchg das sbb aad add add mov dec test cli add jmp enter pop idivb mov mov add xor push gs pop fwait sbb int3 sub add mov sub adc pop jg cli add add pop adc pop in mov dec add xchg adc or adc popf in sar stc ffree lcall inc pop mov icebp movsl xchg push faddl lock ljmp int xchg mov add pop dec mov sub adc fistpl mov call stc popf cltd hlt xchg repz push movb jnp mov or movl sbb xor les js push jg jmp lret add xchg loop rclb push xor (bad) xor push (bad) jb in stos or pushf dec or jo bound mov sahf std or popf dec movsl dec inc shrb sub gs cld add mov sub pop sub jns scas add adc loop pop cmp repnz xchg push xchg push add push and mov (bad) add das push push jle add test push jns xor leave in cmp sahf sub rolb or xlat aam mov loopne mov std ds gs and inc cli out xchg dec sbb mov idivb dec ret sbb push pop rolb add add scas lock arpl sub cmpsl mov fdivl (bad) jb loope,pn movd add mov addb fadds mov pop clc fcmovnb add pop scas mov pusha mov and pop sbb mov les and add das ljmp inc mov jp add push cld iret aas and imul cltd bound jo rcll fwait lock lods gs xor mov add lcall cmp jp mov add mov call and xchg push cltd imul push add jbe mov mov dec pop sbb add adc andb ja jl leave mov test add shrd xchg add mov scas add or aam dec adc lret push shll ds mov and (bad) nop stos pop (bad) cwtl jo rcr (bad) mov jmp add lock sbb add (bad) push pop icebp jo cmp mov sbb push mov out sbb jge jecxz push scas xor mov or add sahf (bad) push pop dec add dec add xchg and pusha shrb mov pop pop and jnp test (bad) mov das and in add mov and sti nop addb pop push push cli push std shrb dec or add add adc cmpsl aas fstpt pop inc and mov in xchg les call xchg push push fsts lods jmp add lahf shlb inc test rolb xchg or add cmpsl (bad) add scas and arpl pop push cwtl shr sub push xchg and add xor dec lcall add xchg loopne bound (bad) je pusha (bad) xor jo jne dec add shrb loope jg mov push mov and loope or fdivs cld xchg add cmp cmc push out pop inc loop pop add in sub adc out mov mov inc roll pop or jb or in lock jl rclb pop loope les and lods xchg add adc add sbb sahf mov outsb or rclb sub mov pcmpgtd xchg sub icebp mov test rcll ljmp in loope sbb push or repz xchg cli dec dec pop adc jge sbb or scas fcomip cs addb sbb add pop push aad sub pop add mov loopne sbb lcall mov imul enter mov scas add push xchg popf mov mov sahf test adc mov push mov cmp in mov scas adc arpl test adc pop xchg mov popa add repnz add inc add cmp andl add loope js add jle inc add mov jl inc mov les add add jle mov xor clc mov testl jg mov stos nop pop dec sbb out or jb add cmc stos add xchg idivl jl lock inc (bad) hlt int jns inc cmp dec pop mov push add stc dec sub sub jge repnz xorl inc and add call int cld fcmovb push (bad) xor sbb adc mov fist scas mov xorb push rol movsl (bad) cmp nop sub test inc push inc pop adc push add and pop sub adc adc hlt adc pop sub cmp call test (bad) jbe pop jns add xchg cmp rorb and pop lock aad repnz cmp sub and loopne mov push dec inc daa (bad) and lret mov add xor mov and test adc add mov jg pop sahf xlat add and andl in xchg iret fisubrl or andl sbb adc mov (bad) mov jbe mov scas sub cltd in jne mov mov push add jge jp and and add push fild or imul pop shlb test lds mov inc loopne jno add and xchg mov rclb add lods and sbb push cmc test es sbb nop cwtl and xor push mov jno sti iret (bad) sbb movsl and xor add jae movsb lret test jns push dec xchg popf add imul mov mov mov loopne out sbb je adcb cmp pop add leave out adc push (bad) enter xchg add je and add (bad) sbb dec call xor aad loopne cld pushf clc xchg mov push pop and sub fstl daa cmpsb movsb mov add pop adc add add ret lret lahf add pop mov xchg push movsl rorl cmp sbb out cmc jmp xchg jae pop add lock add out jl mov (bad) popl sub lock push jg mov mov stos dec int3 mov inc mov roll adc loop das mov inc inc (bad) add notb fwait adc imul or lahf push scas add xchg or inc add mov jle sub add mov cld aas inc xor pop jge push and in jl mov inc daa lret dec iret add pop sahf add mov jo push xchg add and rcrb pusha leave lock inc hlt push or xchg sbb loop mov add mov daa or mov cmp xchg xchg lret mov push jg sub mov push in je add cmp adc inc es sbb and xor jge jae (bad) push loope add int3 loopne ret fs sub add cmpsl les aas and add mov test add inc clc dec cs dec cmp je repz es dec mov add push outsl aaa mov pop and add sahf sbb mov sub cmp loope sub add fildl fisubr xchg cmp movsl add imulb push aad cmp sub jne pop inc roll cltd cmp ret dec les add mov add xchg adc push ret (bad) ljmp or imul dec fidivrl sbb adc aam add in pop jae add test insb jne mov add mov inc adc dec adcb add les mov pop push sub xor (bad) call das inc jo adc jp push in add add dec jl cmp add rclb jnp add and cld loopne xchg and and mov lahf inc dec nop mov mov inc push arpl mov in sub inc adc mov mov leave or and jmp sub (bad) popa pop nop movsl cwtl add xchg ret push add (bad) mov insb rcrb (bad) rcr gs add fisttpl pop mov pushf inc push add push repnz xor (bad) lock cwtl pop push sahf add jns test loop lods stc std fidiv add add add xor cmp rclb pop adc dec cmp fcmovnb sbb jne jbe xor scas add cmp jno dec es add mov push jl pop xchg pop in loopne sbb mov jl jnp jl add idivl out jb push fxtract xor jo adc in ds jmp add mov xchg cmpxchg cmp add pop jns andb (bad) mov pusha xchg push add adcb cmpb (bad) add xlat inc out imul inc adc inc repnz add scas in test inc add push push test mov inc add mov sbb xchg aad inc mov add out add pop dec or jecxz aas shl jmp incl idivb (bad) cli hlt push lret mov les mov or arpl clc cmpsl xor fwait into test in inc sar out pop rolb clc and test mov pop mov add mov dec mov add ret nop ss (bad) jge mov cmpsb cmp add test ds repz lea xor add mov inc dec sbb mov jo add (bad) xor mov pop or out inc cmp dec pop or clc imul jno push jno dec testb sub push or dec xor ret loopne out cmp mov dec aas sahf jbe inc xchg mov inc mov (bad) in pop inc iret xchg push mov add (bad) leave xchg ja add mov or jne add sbb lods add mov arpl mov out mov sbb xor test push pop sub jmp or test push fcoms adc jb mov xor push pop ljmp gs negb and sbb mov in fidivrl pushf and stc out add pushl pop mov adc aad ljmp dec add xchg fild lds inc add lea pop repz add hlt mov pop and mov jge or cmp xchg daa ret add mov add imul jp cmp fmul repnz out cmp cmpsb add loope fmull jecxz add dec sbb add xchg std lock fsubrs lcall jns push loop xor sub lods jo jl mov (bad) mov fstpt pushf pop sbb js jno pop xor xchg or call jns and jl cmp hlt sbb sub cmpsb add sbb cmp bound addb (bad) or xor xchg fsubrl rorb dec add in pusha xchg mov test cld (bad) jp add test fwait push sti aas jo inc jne cmp enter add lret je inc adc in sarb arpl inc adc ffree out inc sub push jbe (bad) pop pop mov adc inc stos sub aam fwait add idiv jle mov insl adc test cmc mov inc mov nop addl cs add lock or jmp call pop mov dec sub enter das add push mov insl int out lock (bad) mov add (bad) sub orb and sub hlt jle sbb sub nop mov lcall cld mov rorb pop pop sub inc and lret mov fildll dec inc add fcmove cmp xor cli vpunpckhwd les add dec xchg and mov insb adc hlt add aam adc jo dec push adc jle pop popf sbb stos and leave add pop sar dec call (bad) cmp call add pop aaa push lret dec add fldt push or les ret xchg pushf clc dec (bad) xchg adc je adc mov xchg shr incl mov (bad) jecxz sbb add mov push clc jne fbstp push lods inc dec sbb sub xchg xor les push push sub fcoms and push xchg int add mov sub xlat hlt js test or pop push add sub lock fcmovnbe imul fstl mov cmp iret mov and test add cld or ljmp in add addl jp add mov add mull pop add andnps stc push add sar dec pop cmp pop add xor out rcl sub shrl mov es icebp (bad) popf movswl add jbe sub dec mov mov dec sub pushf mov and imulb scas cli lahf mov fmull loopne in mov std insl xor aas inc cmc add dec push pop jl sub cs addb pop into popf push xlat xor int3 sahf push cli loop pop add ja stc call push sbb xchg mov jnp into ljmp mov notb sbb imul popl aam orl loopne rclb int3 dec fs ljmp je fistpll xor movsb inc in add or cmpsl js add sbb xchg subps idivb repnz push dec jns inc push iret xchg std add cltd mov test into int3 inc add pop addr16 negl pop in xchg add push dec push movsb inc xchg pop in lods xor inc xchg loop loopne add icebp je xchg call cmovae hlt dec mov aas daa jge cld adc les (bad) pop or cmp mov idivl bound sbb sbb mov cmp test andl xchg test andb mov jmp jno dec add sarl xchg push bound add leave mov cmc cmp lret lds add or or test add xor lock xor xor test add loop pop mov cmp lock or pop cmp paddsw pusha movsl xchg push in jne push scas out rclb jle (bad) add out movsb mov jns add enter push mov lods add dec bound mov in incb mov mov icebp add xchg add pop pop and add imulb cmp insl out add jo ret or js push loop pop test dec jo mov aaa sbb xchg xchg out gs clc sbb sub ds scas ja push shrb sbb inc loope ret pop add stos jb pop gs jno or pop (bad) cs xchg sbb fnstcw or in pop add nop push pusha mov leave dec idiv inc push add int3 sub sub cmpsb negb and js sub out cmc sarb add ds or cld imul cmp jmp inc add js or ret add dec es outsl out xchg shll and adc sub sub imulb rcr addl jmp inc ret nop imul aad jo rcrl jno scas (bad) mov out xchg lods xchg and repnz or gs push rol test mov orl add mov dec push xor pop jp jo add (bad) sub outsl jmp add sub mov adc adc (bad) mov sub pop sahf sbb fsts push enter (bad) pop pop cmp add mov cld push ja and pusha ret jae mov daa fisub (bad) xor or xchg jge (bad) outsl andb unpckhps dec int into in fs cmp orb cli mov sbb (bad) fcomip cmp add mov or sub or mov incb movsl ret mov fmuls test add outsl xor iret inc testb push std dec insl movsb pop jo lret aas push mov add inc add pop rolb daa sarb add dec and inc lds stos push add into dec add aas mov lea pop inc mov pushf add lods dec add sahf popf sbb and out scas xchg push enter fidivl test ljmp dec scas and add and adc call or (bad) fucom mov push dec mov mov int and fisttpl or pusha sbbb fdivrp or inc mov scas add movsb or add dec (bad) movsl sbb add dec sbb vsqrtss add pop je mov dec xor inc sub addb stos sub sbb xchg pop or (bad) rorb and xchg add insl mov or pushf add es sbb mov daa pxor ficompl shr lret xchg cmp loope cmc pop pmuludq xor dec mov mov (bad) cltd lea out sar adc add jne inc cmc pusha popa mov leave push clc adc jle add jge cmp aad push sbb mov add xlat out popf mov add or and fwait sbb rclb sub loopne add call dec cmpsl adc (bad) sbb push add sub and pop mov test test cmp pushf gs mov mov and dec fldl ret insl dec sub sahf or loop sbb out push inc cmp arpl insb add push push fmulp inc add push add mov sarb mov iret add pop pop jl and aas cltd pusha add push (bad) outsl (bad) push add mov push addr16 popa xchg or sub ds test fmul cltd in push mov jecxz xor xor push scas div ja jmp lds xchg mov xor enter iret das cmpsl cwtl push loope faddl setne ljmp inc jnp inc jmp (bad) fnsave ret pop jae inc jne pop loop cmp pop add outsb cli scas sub add cmp add pop push incb daa rorl cmpsb mov sbb jns cmc imul add mov enter jnp jmp jbe shrb aaa push std xchg xchg fidivl inc fidiv (bad) aas add (bad) dec aad pop inc xchg fwait mov add into push std movb aaa ret xchg dec sbb inc lds add test rol push mov pop in and rorb mov or xchg add movl adc pusha xor xchg sti sub hlt inc fist shrb call scas add jmp inc cmp pop dec (bad) ja jle dec pop cmp mov arpl add xor (bad) lret add dec mov or xchg icebp aaa pushf pop push shr pop mov pop add adc icebp das cmp xor sbb sub movsl xchg cs dec or sahf pop xor mov cwtl pop add stc cmp roll add fnsave aaa and or popf rcl lahf ret mov or add fistpl mov dec inc incl push and jmp jecxz add (bad) es inc popf or mov mov std out push add fisub popf mov add (bad) lods pusha cmp test in int3 xor mov hlt add and lods les inc daa pop arpl lret jno sbb xchg add xchg fld1 addr16 add movsb pop jmp cmpsl mov add out leave mov dec add stos daa and add push xchg sub add dec mov rorl lret popf mov push mov in pop cmovns je stos add lcall mov dec sahf add adc pusha add mov xchg push rcrb fstpt sbb xor mov push jl mov or add lods cmp mov xchg stc add (bad) std lock sbbl push sub sbb wbinvd adc test cmpsl int3 xchg rolb add mov dec loop sar mov pop rolb inc add mov hlt jmp dec sbb adc sbb pop xchg xchg inc sub cmp pop adc mov dec test fcmovnbe repnz add mov loop add or and mov (bad) and lcall jo add dec lock add lea dec fwait cwtl add in pushf (bad) adc xorb fs gs pop and sbb andl cmp insb add jns mov pmaxsw (bad) movsl jmp add adc dec xlat jmp mov inc fdivrs xchg and aas cwtl fild dec pop jg mov xor sub rcr dec or stc mov out push lods in pop push cmp sub mov cwtl add push xchg cwtl sbb or mov adc (bad) jne in cmp icebp es outsb and cmc sahf call jmp movsb dec cmpl pop mov ficoml outsl addr16 add xchg pop imul add mov mov andb inc add daa test cmp subb loopne daa xchg fwait push add je jo mov pop pop mov (bad) sbb xchg fs out add repnz or jmp mov adc and xchg push add add notb loopne add pop sbb aas inc xlat add xor mov sbb xchg (bad) push gs pusha cwtl mov xor inc mov divb mov nop adc cmp lods xor out inc sar in add or fsub dec addb test fisubrl xchg push mov inc xor fwait leave fisttpl add popf xor jg inc stc cli js add jmp mov mov rclb cmp ds pusha and add xor rcrb pop enter dec out sub das (bad) inc hlt mov or sbb add int (bad) ja pop mov adc imul sbb movsb loopne xor xchg dec loopne adc mov adc ret pop loope fisttpl add xchg dec lret mov add (bad) aas mov jbe aaa adc ss call jg jmp cmpsb les idivl sbb jne or hlt add push in pop frstor pop stos shll pop lds mov mov mov and flds insl mov or in add repz mov and aam or mov xchg insb push xchg nop sbb js jns jge incb iret xchg (bad) mov inc xor testl mov dec sub add pop adc mov nop sub (bad) cmp fidivrl movb push adc jne aas sub cmp rcll aaa mov xchg mov js adc xor or xchg mov push ljmp jae xlat inc mov jb sub lea mov fstpl nop dec out mov xchg xchg pop xchg ss add lcall xor cld mov add hlt lods push pop and orb mov inc mov dec mov bound aas push stos jno shrb push adc cli cld xor rcrl dec cmpsb sub mov clc jae mov jns data16 inc lock mov dec or adc sub inc loopne (bad) push add lods dec mulb enter adc mov jp outsb sbb add (bad) cmpsl fsubs loopne mov add push xorb add sub add jg inc jns mov lock mov adc lods add repnz lds es xchg rcrl push cwtl rorb add fistpl inc cmpsb push and add (bad) ficomp mov push (bad) loope jle adc stos or jmp test push insl inc mov mov fs data16 or add lahf lret testb frstor xchg sbb cmp adc mov or sbb iret add idivb cmp cs inc imul jo inc dec add mov add icebp mov pop add fwait pop test add fildl mov das sub fidivr subl adcb fsubrl (bad) jmp dec mov and add daa pop mov mov pop nop rcll mov sbb push cmp adc mov mov lods sbb adc fldenv mov push mov mov add mov pushl movsb add jb (bad) inc stc fldenv (bad) push jge adc out pushf fcompl jnp mov xor cltd movl pusha hlt jle lahf loopne aaa adc xor mov (bad) mov std add iret mov cmpsb inc out dec add sub jle lahf fsubrs push pop aas jmp sbb add and ljmp push repnz sub dec push ret add les enter movsb and sub jb xchg adc in int mov adc repnz sarl push hlt add daa add fldl imul sbb add mov cmp sub sbb mov call fbstp xor ljmp cmp lahf xor loopne in lods (bad) dec dec popl inc aas dec mov ljmp xchg sbb rclb xchg dec std add in out rorb jne push notb (bad) (bad) sar pop les push add add shlb mov js push dec cmp lods rorb push cli sub dec out dec jmp out and add sbb pop mov xor push aaa stos xchg add cmpsb stc in push popa add (bad) push and into push int3 or add sbb stos or sbb jbe out mov xchg cmp pop ret mov and dec or sbb bound ret dec sub arpl xlat pop push xor sbb dec leave inc cmp sahf fsubl js gs shrb (bad) mov rclb lds std insb push push lcall bound call sub xlat testb sbb or shlb subb hlt rcll stos xor adc bound and insl stc and push inc cwtl call sbb xor add cmp roll mov pop dec aas adc jnp cs ds push inc (bad) push pop xor mov sbb adc push lock fdivl mov cwtl test pusha mov sbb ljmp loop xlat push insb mov fldcw roll in dec add lods outsl adc sub sbb adc sbbb pop jnp adc sbb or clc sbb add int3 repnz xor (bad) call (bad) aad and pop cmp stos call rorb faddl mov movsb pusha clc rclb jae mov fcompp rolb xchg adc inc xor adc ss or xor test in inc add call push sub xchg adc aaa andl or jecxz lds fmull addr16 mov cmp (bad) sahf sub pop xchg (bad) xchg out mov add scas add sbb cwtl mov or dec lock (bad) or lods mov add int3 (bad) mov sbb call xchg mov xor adcl push dec pop sbb add scas mov insl sbb pop sbb idivl gs (bad) repz fiadd hlt cwtl loop mov push push orl or sub add xlat mov xchg cmp jge sub shl or inc out lods mov adc push dec mov in xor sub stos jmp cwtl xlat and pop sbb mov dec pusha outsl sbb shl shlb inc movsb adc sub loopne jo mov loop xchg or addb or je mov and movsb mov (bad) sbb mov mov and push mov nop stc aas ss jnp ret mov jno stos pop adc jl (bad) int3 adc add (bad) dec test push and sbb fsubrl dec fcomp bound push stc push sarb sahf adc stos lds call repnz or loope cmp lods ret lods loop push imul push setno mull leave xor inc inc dec (bad) inc or fsubl bound mov xchg add sub sti test and adcl mov add cld loop adc jb cld lret xchg daa add fnstcw jle sub sbb mov push xlat cmp cwtl pusha sbb (bad) mov dec or shrb rol (bad) repnz xor dec and fstps ja adc iret jno,pt xchg or inc jno and xchg and mov lock adc call lret inc jmp iret loopne mov dec ljmp (bad) stos pop imul adc add mov loopne inc das (bad) sub pop mov clc mov adc and fisttp adc add mov or inc xor out jecxz loop,pn add mov in and out add xor sbb nop pop pop clc pop push je push outsb sub ret xor sub (bad) xchg add add pop sbb xlat jno test lret mov mov lret jmp add ja xor and sbb insb sarb mov and loop pop stc stos xor mov jb add scas movsb js add inc push es les pusha pop aaa lds and and mov inc ret add mov mov mov sub cmp or and xchg sbb jecxz mov adc loope pusha pop push mov sbb pop aas xor xor inc addl sarl enter test into in addr16 push add nop rcr outsl pusha fild fcom push loopne adc inc pop enter ret dec adc fwait popa add jae mov inc dec mov stos add pusha loop sahf es push dec mov cli and pop faddp jo jl cmp in xchg push nop add movsb sub or loopne fnop dec cmpsl add cmpsb cltd pop ljmp aas dec mov loopne int cmp add xchg in in mov addl pop cwtl cmp xor mov fcmovnb jmp mov dec jbe rol fsubs and (bad) jo iret fisttpll mov cld pop shr sar pop add mov loope pusha mov in xor lcall out loopne test mov cmp cmc das loopne pop fwait add notw inc sbb add or xor clc cmp dec inc adc into scas cmp sbb mov add stos aam test int jnp xor add fsts ja cmp adc nop adc subl dec add insl mov in add mov enter enter bound les add in icebp jle xor pop add mov and mov sub xchg (bad) fwait xchg rorl dec and or fnstcw inc nop adc and (bad) pusha cli cmp fs adc out aad mov loope popa xchg cmp and or adc inc inc and cmp sub mov push lods sub xor mov ret stos add xor test or sub jbe js in scas imul adc cmpb mov mov jns in cwtl mov scas cmp test lock mov cmp and in ja aam xchg fwait push or dec inc mov jb jno add test (bad) (bad) jae das je add ficompl pop mov cmpsl int3 mov cmpsb lods and dec repz lret in mov and or jmp lods adc cmp fcomps sarb xchg add pushf in outsl icebp push sub push cltd sbb fldenv mov movsb pop sbb add jo fistp addb pop pop mov iret pusha int3 cmp out cmp sbb rorb dec test adc ljmp pop pop mov add adcb inc sbb outsb xchg ljmp mov xor mov cs push mov lods mov pop dec orb xchg data16 mov jnp cmp inc pop xchg (bad) int3 enter jl and xchg mov mov sahf out pop or pop pushf pop imul loop call sbb fcompl nop add pop xchg add cmp push mov fildl flds pop xor mov out cmc or add mov mov and inc or push xchg in popf inc iret add pushf shrb icebp loopne push stos rolb gs push movsb mov in adc pusha roll push dec lret inc add ja add mov cmc xor jnp (bad) int3 mov add jb popa or sub lahf andb enter test loop adc sbb mov ja outsl add pop sub add rclb sbb pop and or ret jecxz and mov aam inc pop lock insb or iret movsb xorl add and cmp sub dec add repz dec push movsl or xor inc lock fidivr into movsb cmp sub and cmp dec stos xchg adc lock mov ss js adc test jl and in push aas and push xor rorb adc fadds (bad) std jmp xchg in mov mov cmp add ss mov mov mov notb adc add std ftst jg imul fadds loope add adc cmc pop cmpsl in sbb xor jg loope pusha iret fstpl mov sar xchg xor lcall sub test push sbb lock shrb dec pop adc sub xlat mov xor jnp stc out stos int3 push cmpb xchg fcoml sbb add aas mov (bad) call add lret test add push repz adc mov adc and cmp add std lods jecxz popf jmp adc dec mov mov (bad) xchg faddl aaa iret push (bad) mov test push and jmp mov shrb sbb in xor mov push sbb icebp pop adc push std popf sti inc or dec mov push lock push cmc jmp adc dec mov dec cmp sahf sti inc mov xor add cld pop lock nop loope adcb cmc sbb pusha sbbb xchg adc mov rcl xor repnz adc aas pop pop enter pushf nop mov mov stos stc or or xor in pop push xchg ret xlat fcomp out adc xor and out test add xchg inc lea dec adc lock clc inc xchg sub sub xchg mov mov out test movsb pop mov loopne inc leave adc cmpl and sbb inc and push clc jp mov (bad) jmp sub enter adc in adc lds xor shrl (bad) cli das sub iret mov aas repnz scas cmpsb xor dec add xchg jo dec sub ffree loopne sub jl push int3 sub icebp sub int loope mov xor dec mov js mov pop adc xchg sbb inc or pop cmp sahf sarl mov or gs (bad) xor shlb pop test dec or insb test push ficoml dec jle or adc add push xchg cmp adc jns add cmpb or sub adc mov jmp adc (bad) adc js and jmp subl ja in mov sub add fistpl push call setge pop shlb (bad) adc mov adc js ret or subb add push or cmp or ja pop in add clc add scas pop jg sub xor and insb ss pusha lret mov add jns insl sbb pop xor fwait adc push add in push add loop add js push pop inc push ret and (bad) jo mov xchg pop and in ja add movsl push inc mov and js cmpb sbb mov and and lret in xchg pop push sub mov jae xor or jno add adc xchg ljmp add test xor inc adc out add into mov or mov sahf pop push push xchg inc push mov rdpmc push jnp enter fiaddl cmp cmp add test pushf mov mov inc mov int3 stc sub push adc pop in jle in xchg jbe shl aas inc lcall or sbb add mov les addr16 ss gs mov call nop adc pushf aas push push xchg push push adc xor add dec js add and cmpsl xor add std xchg stc push cmp rcll mov jg xchg inc jb inc push sbb (bad) pushf and xor add je cltd rolb jmp lahf jle fstps sbb (bad) out mov mov into sub mov stc inc jl adc daa dec dec aam and mov and jo add jne mov inc enter push xchg jbe add rorw arpl pop xlat jecxz xor adc push mov loope ror add sub pop add or push add xor inc sbb push add loope mov xchg pop xor lahf add add shrl or dec dec fnsave xchg push lods imul mov pusha pop push add aam dec test repz mov and fisttpll insl push cmp add xchg pop scas add fiaddl cmp ja cli jns adc les lods dec or mov fdivrs mov scas in pop inc xchg mov notl add shlb inc add push mov add repnz aas call push in mov add xor dec cmc push (bad) jmp pop in push add sbb add clc frstor dec outsl cmp movl je movsl test cltd lcall into out mov fs add dec arpl stos ss jnp leave sbb sub std cmc jmp xor mov add mov loop jno push sbb or xchg jae test pop mov cmp xchg cld jl push sarl mov (bad) sub push int3 xor ror and cltd cmp out sbb cmp in or subl insl add adc and and cld aad add stos cli rolb inc (bad) hlt cmp and shll rcrb fisubr add (bad) or sbb pop pop mov lret mov add stos fcoml fild add or jns (bad) lldt pop mov out pop ss ja insl imul mov push jge add sub and jl out jg add sub add (bad) test mov (bad) mov mov mov pop mov push xchg nop fsubs or push insb outsb inc fistpll lock hlt add subl pop popa jo jae dec cmp mov mov pop scas lds xor movsl jnp cmp add jg xchg push arpl fild stos (bad) mov mov cmp add sti rcrb pop add push loopne cmp jge pop aas mov jmp mov add xchg dec or jne cmp xchg (bad) adc mov call subb jbe sahf pop add jmp mov outsb aaa xchg pop mov cmpb cmp mov gs sbb out sbb je cmpsl push orb mov es jl dec mov push xor or clc subb xor and roll mov dec push jne push or inc add imul scas loopne pushl rclb and inc jne adc jg add js addl xchg test and cmpsb je xorl adc mov dec adc jge ret mov add jae sti mov in and loope mov sub jno pop movsl push add out pushf inc es sbb in pop test test fist (bad) outsl mov xchg imul and add imul pop sahf lahf pop jge es dec and pop push fiadd inc icebp cmp push lret jmp add inc iret rcr scas cmp gs mov int3 push es xor and pop push aas enter fs mov push rorl (bad) pop loope stos adc sub add das mov pop hlt and dec jbe (bad) mov push (bad) and shr (bad) add icebp popf (bad) fcompl fwait cwtl imul or jns je add ret sarb add add add sti cwtl es inc pop add adc mov add add add les cmp add pop mov sub mov cmc pop add mov add mov imul hlt mov push sbb je xlat sub push test cmpsl add inc or or fldcw xor add dec test mov repnz fadd pop mov add adc ffreep cld fidivl mov add dec sarl mov add addr16 pushf lahf sub in jbe shl push add fbld add out ss jg sarl xchg fisubl jecxz,pn sbb test lahf jns adc out sbb cmp loope xor movsb dec mov jg dec mov push mov (bad) mov inc jo fldenv int3 movsb add out jmp cmpsb adc cmp push imulb leave scas movsb and into dec add xchg test aaa adc or pop rorl add vmread sbb fcmovnbe test fucomip add lea add xor lock aas push jns loopne,pt push lret add gs aaa in jns add mov in fucom int xor popa clc sub pusha fcoms add sub test push mov push popa imul lea js adc pushf xchg mov dec add adc push and push roll insb xchg push dec ret xchg cs ficom add add jns mov cmc out ja jmp cmpsl lea repz cmp mov (bad) push lds es in (bad) insb add and fistpll add mov shll add sbb add dec adc fimul or lock mov xchg loope loopne pusha (bad) adc dec mov mov dec add pushf orb adc add fs inc mov mov testb neg pop addl imul mov push add push les repnz pushf clc push insl sbb jo (bad) jmp mov dec out inc test add xchg add inc scas jge mov repz or ja mov cld xchg xor lea add xchg mov fildl push add xchg add popa mov (bad) lods mov jbe (bad) push add xchg pop (bad) lahf add pop inc movsl cmp orb inc xchg rclb add repz insb sbb or mov add mov mov xor sbb in (bad) push rdtsc mov dec rolb das cmp jnp cmp out in pop add adc sbb outsl sbb push cs add pop subl lods ljmp dec xchg sub adc lahf out lret add inc (bad) fs mov mov out add sar sarl sahf repz add sbb push iret lods mov add (bad) pop stos lahf mov push addr16 push out and jmp or pop jmp not repz sti rolb fsubl rcr lods xor inc adcb and or andb mov mov add (bad) je cmp push add lea mov add stos imul paddusb xor les xchg in pop jne add push cli mov add cmp or mov adc pop orb sub jecxz push hlt fadds imul jge push sbb mov cmp add inc push stc pusha in lods test cmp mov sub loope rolb stos add cmp mov movsl fwait and adc pop cmp pop jae mov mov adc popf mov inc out mov mov cld movsb lea enter xchg adc add sbb rolb and test xchg aas mul mov jp add ss repnz add xchg shlb add add dec push add loope ja cmp hlt aas sbb jns leave (bad) mov push pusha push or imul sub stos xor jno pop dec push push fbld insb int adc sub pop mov sub jle add mov or adc add in ficompl and cmp sub add loop scas pop cmp lds dec dec add xchg cmc lea rcrb mov add sbb push jge (bad) negb push mov mov push leave faddl pop incl add mov (bad) iret jle sub addr16 add mov incl ret stc add addb stos add in loope add icebp fisttpl sbb hlt enter fisttp pusha movsb dec mov pop and idivb push fsubrs (bad) xor cmp add adc cwtl mov jmp push dec pushf int3 add and dec in or cmp dec jge mov mov test cmp inc push jno add ljmp ja pop pusha into insl push (bad) push roll int aad mov ret data16 icebp adc pushf out test scas paddusw xchg dec cmp iret fs nop ljmp nop or in mov or xchg out add movzwl cmpsl pushf inc lds fidivrl mov xchg sbb mov repnz inc test les mov test cmp cmp add pop xor sub lods mov mov xorb pop xor cwtl mov sarb loope jle (bad) mov jge mov jne pop call or ljmp sub mov cmpsl xor cmp in dec add jmp mov cltd inc add and pusha gs jno test xor in insb (bad) insb fadds cltd cli or mov popf mov dec xchg outsb add das adc mov aam mov sub pusha fmull in add (bad) and mov inc sbbb cmp pop adc sbb add add dec xor and lret shrl sub stos loopne dec out shll mov subb xorl or fist popf dec loopne sub cmp sahf sbbb test mov mov (bad) xor je jg add mov sub add outsl xchg add inc in mov pop and adc fdiv (bad) sbb sbbb sub jne fincstp and pop inc cmp loop clc inc out jo je,pn pop add lret leave add xchg loope xchg adcl sub xor xlat inc sbb mov pusha adc lea and pop cmpsl jp cmp add std scas popa mov sbb data16 mov popl inc int3 test (bad) hlt call in mov cmp cmc add xchg sahf stos jecxz call repz imul (bad) push xchg xchg adc push in mov push sub sahf inc mov jae xor add push dec loopne pop leave jg adc pop int3 dec and or mov outsl xor add inc mov push push mul add lret cmp add das leave in addb js add adc cld mov sti add add dec (bad) fld sarl dec imulb or aam mov adc sbb lods add inc in jne imul add mov adc rcrl add dec cwtl arpl sbb cmpsb jbe clc dec ljmp lahf xadd test xchg testl cwtl daa nop mov mov sbb add and les cld fstl jmp adc mov aam add stos sbb jmp hlt rolb or mov test notl pop add les in popa and and add pop sub jge ret sub pop add cmp xchg add (bad) call cmp data16 mov int3 arpl or pop adc mov push andb pusha rcl xchg lahf mov or cmp (bad) neg xchg jl mov iret pushf add scas add es fwait add mov cwtl imul daa jnp scas push xor mov add sub sbb in mov lahf add shl pop mov arpl enter push jne add (bad) clc enter xor jo jp or cmp or dec ret cmp mov adc pop sbb insb ljmp inc sub js lds sbb jmp push in (bad) push fist xchg in clc ss (bad) in movsl dec out test cli add jae push jb pop xor clc mov add out inc mov xor jne add sahf pusha pop and pop xor jne pop sti add movl jge (bad) sbb inc sbb xor shll pushf nop dec sti cld sub add mov aas sbbb adc fwait sub mov sub pusha adc inc mov mov mov cmp inc insl pop lret add or mov inc mov add cmp xor lret jl add cmp or out test aas out pop inc sbb ds shll iret add pop xor ds scas addb sbb jmp inc icebp in push mov push fbstp fdivr movl int3 cmpsb repnz add cmc int loope je je or mov fdivs stc sbb mov rcr mov xchg dec xorb xchg adc or aam test hlt lret adc push mov sub loop sbb or sbb sbb icebp test loope repnz add ret push jbe dec pop js iret ss add ljmp jg adc cmp mov xor dec cmp imul xchg jecxz or adc jmp test dec push fbstp add jo sub and lret ss xor fcmovnbe jmp movb add push adc add mov dec add iret xor or add cmpsb dec or or push jg in ds sbb jb add cmp lods pop into jnp add sub pop and rcr jge pop jecxz add push and add dec incl int3 les and iret scas push dec mov push add xchg xor and not add nop adc mov add pop xlat lods push add mov je jae rcr add adc aaa mov mov rorb sub add jge pop mov pop sarl adcb into xor and dec popl aas and and jb xchg adc mov aad adc jp mov into and and scas jp fisttp and mov mov sub int3 mov add ljmp inc testl xor out wrmsr popa js rclb cli cmp mov (bad) jnp push dec xchg add mov ret or pop push movsl dec aam dec jno (bad) (bad) jge bound or (bad) mov cwtl lock push cmp jecxz insb mov sub jp repz pop add or or pop sub xchg xor sbb aas loop mov mov push loope add jae mov sbbb into jle add sbb rcrl incl and add add jb das testb xor ljmp lods pop xlat add jb (bad) mov add sub xchg sbb les cmp mov add dec test ja add add jb jg and insb addb push shlb push movsl xor add cli and pop or repnz movsl xor push fwait and (bad) lock pop shlb in inc mov or sub pop sahf sahf sahf orb sub push sbb loopne add jae (bad) dec add (bad) in add movb das (bad) push test cmp jnp and inc or sbb (bad) cltd mov add sbb jo add scas push sub insl push or inc movsb xorl in lock movb dec add xchg pushf adc push es mov or or xorl adc out mov hlt mov xchg inc idivb ret jo and cmpsb cltd push and add shrb add ss xchg shr mov jg sub rcl and add pop lret pop ret mov test add inc mov lock sbbl nop add push push scas movsl or cmpsb jo out jg and dec adcb outsl jne adc insb add insl mov loop add cld and push in mov pop cmp repnz cmpsb out ss add fs orl rolb add pop test mov pop pushf add popa dec xchg lcall jl xor mov add mov loope dec and push add fimul fldl cltd push fisttp add or jns roll xor add cmp out aad stos add in xchg inc inc jg cs add sbb clc mov sub mov unpckhps push nop add int3 adc sbb cvtps2pd (bad) push mov xor push cmp add bound pop out push js addl test (bad) fisttpl lret jnp jg jno cmpsb fsts or or xor daa repnz mov jle add mov jecxz inc add scas ret rorb gs jle (bad) mov aad outsb stc (bad) addr16 jns sub inc hlt push and or cli daa test jecxz shrb jecxz add xor adc add xor daa outsl lahf cmp ds add or (bad) ror fsubrs add sbb sbb adc add cmp mov bound xor imul dec mov jns or dec xchg push nop xor lret fisttpl add or push xor jl pop ja leave jg adc cwtl insl sbb clc xlat sub gs or enter (bad) push imul adc cmp add or add add mov (bad) pop dec xchg pusha outsb mov mov and lods aad hlt mov notb xchg mov or bound add inc hlt sbb imul sbb mov arpl or movsb test xchg cmp ja shrb sbbl lea (bad) cmp cmp fldenv inc je xchg ret mov shrl outsb adc data16 push (bad) adc cwtl dec addb xchg mov in (bad) mov pop xlat aaa cmp mov jmp jb add xchg (bad) and imul add pop test fdivrl enter aas nop js and int std add test call add xchg mov out outsb mov sar push subb ss add pop stos push jns popf add orl dec pop loopne out (bad) insl cltd xor add ss aas cmp nop pop adc stc das cmpsl mov jne add jg fbstp rcrl clc adc mov sub clc sub call push lock xor repnz xchg fadd inc mov lcall cmp (bad) (bad) pop xchg inc dec lock and sbb xchg lret add out pop out xor rolb sbb adc mov fdivl xor rcl mov fnstsw lcall imul cmc popf dec pop dec loopne sub add clc bound mov mov lahf add xchg int add mov lea sbb fwait clc add pop jnp hlt jne movsb or js fildll dec (bad) mov jmp sub mov add movsb (bad) dec mov cmp aas lods pop xchg pop mov rclb testl mov dec add cmp pop ss rcrl xchg sbb aam inc dec jb mov cltd inc mov loop and mov add loop mov xchg or push xchg jg push fdivrp dec xor mov xchg pop hlt xor inc mov xor or sub inc das (bad) repnz xchg fiadd cs dec stos jg out mov (bad) aad xor std sbbb imul and pushf cmp rcll test push lock push pop adc and pop dec sbb mov adc add mov addl push cmp jp push sub add and sub loopne jl add dec cmp push test xchg inc mov add cmp dec or out add sub jp push rcl call in and fidivr cmp callw insb add adc lret adc push divb sub lcall (bad) cld cmp roll sub inc punpcklbw push pop add xlat and add mov into add jecxz les xchg add pop enter sbb loope cmpb es adc ret push xlat pop (bad) in mov test cmp inc mov (bad) and cmp inc pop xchg hlt add repnz pushf pop add mov mov inc nop lds or jmp dec add and pop pop sbb cmpsl mov hlt (bad) lds cmp push mov ret cli sbb daa jno pop bound add jb or pop add enter iret inc insl push aam add pop (bad) pop add push (bad) rclb insb add push jne mov pop xor pop lods mov movsl mov mov inc jecxz jnp or fmuls pusha xor jmp sbb stos lods imul xor mov push xchg sbb popa push (bad) loopne add jg or bnd cmpl dec or fisttp data16 bnd add sbb or out add sbb dec adc repnz test lahf inc lods clc jns divl push fldt dec imul jge or out or or ret test fcomi mov scas add loop push lods in pop add cli lret ljmp and jl sbb xor repz add stc in add les push insl lret aam rclb adc bswap mov xor std sbb rcr add (bad) xchg jne movsl ret hlt loope pusha mov mov fcomip loopne jns add push fistl xor ror leave add addb push fwait cmc aas add aaa dec jnp jle mov pop xchg jmp shlb cld mov mov xchg or inc add jmp add xor pop mov xchg add movl and inc cmp fildll popa or enter inc pop nop fdivrl mov inc ret mov add cmpsl pusha aam push or xor push daa (bad) rclb aaa (bad) push add cs loope sub push and pop mov dec scas ljmp cmpsb ja movsb add and pop mov cmpsl xlat cmp add cmc aaa bswap add insl xor add stc jg fucomp push xor inc push in mov je sti call xor add push cmpsl lock push mov add inc mov add ja ljmp fadd cld enter cmp add aas scas add and and xor nop cmp std ljmp nop dec (bad) popa pop dec add fdivs out outsl gs jno or pusha cld int3 cmp es mov push sbb addl inc hlt push dec cmp add mov add insl pop jns mov cld hlt xor mov in outsl sahf imul add shlb lods add ljmp add xchg popf jno sub jae pop add xlat sub test xchg addr16 mov (bad) cmp push lods test dec fiaddl add push jg add (bad) or out pop bound and jle xchg xchg push gs add lcall jg lock jl jp cli cmp add call add add dec lahf (bad) cmp cld push adc in add les xlat fiaddl xchg xor fs js mov mov enter sub rolb pop and scas or and ds add nop add orl xchg repz sub loopne aam aad cli shlb inc add inc scas arpl pop mov fnop inc loopne adc in push add aas jge std ja movzbl or add and rcrl loop decb and andb fadds ret push (bad) ss ds add fsubl nop sub lcall call lds pop fsubs cltd or add loopne add jmp inc add in test xchg mov out lret or aas pusha mov pop loop fs xor (bad) repz xchg jne mov add sub jns adc pusha add push (bad) push rorb mov (bad) or mov jmp mov (bad) add xchg mov sarb sub add jl pushf jne jb add lds bound add xchg icebp xchg cmp ljmp rol push (bad) sbb add lcall add imull in jo add (bad) sub test and adc sbb sub test xor xor sub add pop or jns fsubrl add stos mov cmp (bad) lock add xor (bad) push jp jae popf mov rcrb jge mov jo jae insb outsl adcb repz sub (bad) (bad) cmc push mov push pop shr dec mov addr16 adc adc xor cltd orl pop andl add outsb add pushf loope xchg fiadd pop jp adc lret das sbb movlps mov into (bad) adc add (bad) loope inc inc lret add xchg xchg insb mov add dec imull dec mov (bad) sbb inc sub xchg add dec (bad) loope sub in jns movsl orb xorl mov jp movsl mov and push mov cltd sbb int popa in add dec nop aas sbb sub add popf cwtl add enter hlt add dec daa repnz and mov movsl sbb loopne popf out mov jg mov dec add inc outsl lods orl pusha inc mov mov dec and push clc (bad) push mov ret dec gs add fildl mov addr16 pop hlt repnz in dec aaa xorl add push scas xchg pop mov out jne sub lods mov xchg movsb dec bound sbbl pop test xchg add (bad) jns movsl jg rcrb dec sub cld jmp inc or sub push add inc fmul dec pop aam inc dec stc cs cwtl cmp add enter fsubs mov mov sub cmp adc add (bad) mov sbb push les mov add (bad) ds arpl mov add subl std mov pop sti add not pop jns pop and pop popf mov inc or inc xchg xchg std iret roll push and in repz inc dec xorb push cmp stos out mov loopnew mov pusha jb or mov xchg icebp sub sbb cltd mov insb fcmovb pop and and popf jae loope push sub loop mov cmpsb add push and in test ljmp adc dec add and xor dec mov mov (bad) xor pop jbe sub adc je xchg (bad) scas pop jb imul pop cmp pushf ljmp sub jns pop lret or xchg repnz aaa shl add les addl xor xchg pusha lods lahf add inc xchg jae sbb add push or ds xor fildl xchg (bad) xor pusha add call lock loopne add and and pop dec mov lods jae add inc sub sar mov inc das add scas je mov cltd mov push cmp pop mov movsb and push add insb mov sti aad push idiv mov lds test inc cmp lahf scas ss movsl adc pop add and out cmpb xor scas push inc das and and or add cmp int xchg ja repz lea cmc movsb adcb jnp xor lds mov inc lock fcmovbe push int inc cmp int3 iret (bad) std add mov pop bound lret mov jne cmp aad dec or add int sti add cltd call roll mov out mov out jle out lds mov pop sub pop es add sbbl lds pop dec jecxz mull nop dec (bad) and movb dec es sub add jl in jge mov cmpsb subb mov push inc repnz sub sti lahf add xor mov (bad) fwait add push mov nop aas add xchg addr16 cmp mov add sbb cmp pop mov add repz pusha scas dec pop pop addr16 test jnp inc fist in cmp pop roll pop (bad) cmp pop xor in sbb add xchg stc enter xchg (bad) cmp cwtl mov inc xchg mov add xor fs fwait rcll icebp inc jnp xchg jb addb xchg (bad) mov push jbe inc push jge ret ja add fimul dec lock mov sub stc push cmp popf outsl pop push hlt add stos inc test call std cwtl test pop scas lret mov mov cwtl pop jo pusha sbb xchg scas add dec imul add inc add add push (bad) lock push push add dec lret adc hlt loopne add pop mov add out mov sub dec sbb cmp push and sar or and aaa or pop nop lret push in add cwtl cltd adc add and xor dec sbb add adc add and pop es movsb pop insl fcomi loopne mov call fidivr mov insl add lcall call add mov mov popa jle gs js ljmp jbe dec push push pop nop enter insl out fdivrl add lretw fdivr and daa rol testl pop in imul add loopne aam out xchg add dec lret in or in add mov clc movsl add aaa pop aas ljmp sub sub and iret jno add or dec add (bad) (bad) push scas enter add push push ja ss sbb and sub xor mov pusha mov jge add dec dec verw icebp (bad) jbe sbb dec and lods test es scas pop out mov cmp xchg mov pop and mov add pop sbb jb inc outsb pop das or in fisttpll ja add inc cld adc jae dec out add movsl mov add xchg jecxz mov and in test loope in fisubrl mov orb call push jo shl mov mov jmp or ljmp and add and stc sbb sbb jbe dec jns unpckhps and stos mov int3 jo (bad) and sbb cmp aad lods pop lods cwtl mov hlt add out and test mov dec aas lret dec shrl psadbw mov aad clc loop add out cmp push fdivs mov and loopne sub stc adc test adc imulb sbb popa mov xchg xor js verr popa test mov sub mov add or cli cmp ret in push sbb mov xor cmp mov xchg push pop mov repnz jns mov push (bad) adc cmpsb and leave ffree nop add sbb in mov mov flds or lods sub add lea jo jge sub insb cmp outsb sbbb bound xor inc rolb or sbb not gs cmpsb xor push fld ja xchg addr16 es cltd xor loopne mov or cli ds ror xorl fistpll sub add lods mov jbe cmpl aam nop movsl in inc popf lret mov bound jmp sarb add fdivrs jl fcomps idiv mov pushf mov mov jae adc cmp sbb outsl hlt adc js push xor mov outsb add push popa push iret xchg xchg pop jo or sub insl pushf enter es mov add js out lock dec repz push lock pop mov iret insl movsl or scas mov push xorb or jg arpl or pop hlt icebp xlat popa push inc cs add out lock imul add pop shr loope pop in insb or loopne faddl lods pop jno or cwtl roll loope aaa jbe jns inc add test and dec inc (bad) icebp loope (bad) scas cmp add lea mov cmp iret mov xlat and and jmp mov sub mov mov call add mov adc push lods iret push dec mov mov pop aad mov mov rcrb jg add nop andb xor cmp lods adc and ds xor faddl mov rolb cmpsl push cli cmp xor inc fisub mov outsl dec jmp les andb clc arpl scas push (bad) out inc or dec mov push push cmpsl add jg or outsl push pop add repnz faddl push mov mov dec iret adc call cwtl and adc mov arpl nop mov cli test repnz sub dec (bad) push jp add insl lock and fnsave fwait sub jmp mov add mov lods (bad) jns add loope add imul stos dec add jmp inc fldl clc and loopne add sbb idivb xor mov adc insl std jb push mov jle sbb push jb add or sbb or add inc cld lret in jne push clc stos inc jno add lock out adcb test test push sbb jmp add pop jo inc stc xchg bnd inc loop adc adc imul inc mov mov add test sarl addr16 inc repnz push addb mov and mov or test fdivs add pop icebp pop test leave mov sbb repnz outsl rcl dec add scas sub inc mov mov or test clc data16 xor into stos stos enter pop je dec adc sub clc mov jge mov sbb mov sahf lcall add mov mov test stos adc pop aam fs (bad) push adc hlt test pop icebp ljmp mov ss test arpl mov xchg inc mov and iret sub mov cltd cwtl test add iret negb aam xchg add adcl cmp aad mov add mov xor mov and test add xchg lea add jno in or add test adc xchg ret lock dec push sbb cltd sbb mov or pop rolb icebp jecxz and add test fldt push rcr clc loop movsb jo cmpsb add pop mov mov insb and xchg lret scas and mov ffreep pop cmp movsb xor vmread inc rclb pop test addr16 add into inc xlat pop rcr cmp addb xchg mov bound notb je dec and test scas icebp adc xchg int3 xor cs mov cmpb insb adc imul add cmp (bad) or inc or sahf add mov out xchg rorb push mov test and adc inc mov push shlb adc jne bound cmc add pop jge xchg cmpsb stos push in sub adc pushf fstl lret adc test add ds xor mov lods pop cmc fucom lods xor fnstenv stos inc jl ss add jns out nop les (bad) cli pusha add test inc lds sahf sub outsl add inc (bad) pop push ds mov clc jbe xchg mov dec mov mov sahf js cltd int3 pop inc stos cwtl pop mul mov and or sub lock scas adc lock fstps adc fist add (bad) cmp ds (bad) xchg or mov pop imul movsb dec xchg push inc or ds fsubrl fdivr lret add stos pop cld mov push jns (bad) push enter cld loop pop sbb mov and ret or and mov xor and xchg push mov xchg cmp inc sub or add jae sbb inc and inc aad out insl inc and xchg (bad) shrb pop cwtl xor cmp movsl add (bad) jae nop add jg add or push xchg call out dec nop (bad) fmuls adc fcompl and dec ror add xor lea and jne lcall mov fldl pop rcr jge mov not faddl mov jl jg add sarl hlt fs pop sbb mov jns adc rorb mov or mov xor call cmp or and inc repnz xchg add or dec movsl test adc pop call pop icebp inc pop into xchg pop mov mov mov inc lods fsubl lods mov pushf jo adcb push mov cli xchg inc and dec clc (bad) ss and psubb jecxz sub in mov inc js or sbb je or dec in lock sbb mov xor hlt add sbb orl test outsl dec or or je and sbb sub test dec pop test adc ljmp add ljmp loopne (bad) push out dec cmp jb cli push cltd mov enter cli dec mov iret inc and push cmc movsb and or insb push mov clc outsl adc sub inc sub xchg nop xchg and xor addl pop dec sub add nop and xchg movsb or ret sbb inc jno mov pop lds lds inc jmp fs int3 mov cmp inc pusha push and sub jecxz add jno es adc add inc mov cmpsb mov addr16 mov pop jo pop (bad) shrl push clc outsl data16 scas mov pushf pop rol xor inc sbbl fstpl into sub dec mov lea inc or cmp cmc scas sub je (bad) enter and pushf adc mov sub xchg test ljmp xchg inc fild cmp sub cmp xor push jecxz ret aam fstl (bad) aam mov fs xor out jno xor stos lcall cmpsb scas pop xor or inc and xchg mov push addr16 addl sub push ror adc jg add and push call mov and adc je out mov and invd add pusha test aas jae popa mov and popf cwtl cld enter cmc or outsl and and mov aam dec mov (bad) je adc lods test enter push addl mov cwtl cmp push sub cmp push push inc xchg inc jno loopne loop cltd arpl add xchg adc mov adc mov enter adc dec mov jnp xchg pop test fstl mov mov (bad) xor (bad) ds aaa mov add jo inc dec mov push in frstor (bad) out mov scas and xor adc pushf add push xor adc or cltd jl or mov sub or xchg mov les mov pop xchg and rcl in xchg cld jno data16 faddl and out adc add (bad) sarl add les (bad) xor jl pusha hlt ljmp mov jge or adc cli mov bound mov adc xchg arpl int3 adc insb push cmp sbb rolb cli sbb fxch jno jmp inc mov inc fidivr cmp clc or dec les aad or sub inc inc pop add add pop shl test imul inc (bad) ss in (bad) dec pop lahf leave inc test enter cmp outsb aad sub jnp jp mov sahf xor sub rcrb add inc mov mov divb sbb popa mov add and lods or dec xchg jae faddl inc (bad) icebp dec aam popa xor rorl adc pushf or or adc ds mov or sbb dec enter sbb jns adc leave jle sub fiaddl popa (bad) mov xchg add gs pop xlat scas jl sbb and adc inc push sub jno enter (bad) movsl scas lahf subl lds jle aam popf or mov adc add ror jl and clc (bad) push in (bad) mov in stos jbe or popa and aas dec jg adc push out dec add pop dec inc jge push call push fisttpl jecxz sub add and adc pop adc adc mov or fild inc aad mov mov enter push and and inc fiadd and jbe jns xchg sub adc xchg pop nop and out and and les inc adc and pop and jl or dec mull negb inc push adc xor jmp fsub jns add jp xchg fldcw das add andb fwait (bad) xor lahf popa ja js mov test lret sbb add fnsave mov movsb or sbb lods mov add jnp leave adc mov inc scas in movsb loope clc cltd add ret int3 push add cmp add sub ret add inc cmc sbb mov cwtl mov (bad) sbb pop pop add rcrb lret aad movsl add leave cmp xchg orb sbb mov fild cmp add fsub icebp jo pop loopne,pt add jg sar add jecxz int inc cmp add fistpl add mov scas call add fucom cmp mov adc call add cli ret js lock jecxz movsl pop pop pop xor jnp add cmc sti insl (bad) jle inc cwtl add in dec out das nop pop cmpsl sbb add movnti aas icebp stos lock cmpsb cmp dec inc es push mov mov rolb testb push movsl fdivrl adc loopne add imul mov call les mov rcrl xchg add (bad) add adcb ret rolb icebp lret mov popa mov dec sti push js sarb push fmuls sar lea pop lret mov (bad) jge inc enter or test jl add popf xor rcrl adc cmp pop inc loope mov sub js lods add stos in cmpsb dec add cmp add or ja jae add jp ret es inc lods mov inc add test adc add sbb pop cli fldt dec (bad) leave push mov add cmp pop sbb xor inc rorl imul jp ja rolb fnop jb sbb push call ror jno add pop fnop push xor in mov lea movl insl and add jns push cmp jecxz cld sahf pop xor jb bound arpl je add out fmull jp insl inc loop jnp ret in scas sub add int adc dec and lret js and das (bad) jno push sub inc mov (bad) lret ficomp add call and push nop add daa add mov in mov lret xchg add and sbb add mov (bad) sti (bad) push add insl stos push cwtl sbb sub push push pop rclb rolb mov cmpsb xchg jno add (bad) mov push dec test scas sbb clc jno inc dec add je out pop js add sub sub into adc leave loop in out adc insl sbb mov pop pop jno cmpb sub sub dec mov aaa nop jg sub popa push sub dec (bad) leave pop push dec shr faddl pop push dec xchg mov fcmovne add mov add out insb jnp add outsl lcall xor pop test mov jg push loopne in push out orb mov mov rcll popa add jb arpl push enter in cmp pusha add (bad) pop jb add dec scas dec rcl ret dec (bad) inc add jge movsl or sti xor js mov repz pop or rcrl out mov cs xchg into mov les aam sarb sub push in and inc push jne lea push and into mov add insl outsb movsb fsubrp lea inc sti pop and dec inc push add int insb jns push add adc inc cltd inc mov add push test cs (bad) repnz push popa pushf cmp xchg add cwtl scas lods lock add mov xlat sub inc cld out jl add pop and adc pop dec mov inc add addb cld in mov in jns xchg xchg add gs pop add push xlat mov scas add inc int3 cmp sbb pusha (bad) push add das xchg push mov int3 add mov pop inc jge add iret mov lods inc shl pop add mov hlt outsb jl dec jno or cmpsl ja (bad) jbe add sub inc (bad) pop sbb xchg xor or mov addl xor inc int lods in sti repz add add mov aaa insb cmpb fiaddl dec add cmp mov add adc int aaa or sbb lcall test lods mov mov xchg test popa mov push add insb addb add add mov add movsl xor mov outsl add xchg dec int3 add ret pop sbb sti or inc cmp push in rorb push jae xor lods in add fdivs xor cmpsb add add bound nop js push sbb sub adc add xchg jb scas out fcomps add push lods adc ja sbb daa xchg (bad) loopne sub pop pushf (bad) test pop mov push add outsl or imul fisttpll into inc loopne push rcll jns test cmpb jge int jmp or mov into sar insb add jo (bad) jmp out cmc add xchg out lcall and fsubs gs fdivrp sbb xchg aaa cmpl dec shlb jns push sbb lret xchg xchg fnsave cmp test int3 push sub aad mov popa ss inc and lea lcall sbb dec inc or popf rclb pop add adc pusha xor mov into sarb cmpsb add scas test loope inc paddb out push cmpsl pop push call pusha add addb mull add inc add push cmp mov mov pop cmpsl pop popl dec call enter pop xchg add sbb pusha inc fdivrs dec and dec in inc ret or or nop mov push xchg mov (bad) mov jbe and iret inc push je mov xchg push mov fildll cmpl fldl mov cmp adc into fidivrl sti add lods es pop sub aad dec and add mov mov out aas mov or test add ss ja mov sbb sbb dec jecxz ret add jp cld or or jne test sub iret cwtl pop repnz les (bad) add repz pusha insb orb aad cmp (bad) sub popa adc or pop sub push scas mov add xchg mov js push jmp mov xchg in add fidivr adc adc aas add mov in aam outsl (bad) lret pop mov flds testl mov enterw jge (bad) arpl test or mov lea test xchg or ds add rorb mov xchg out inc add hlt and (bad) or (bad) (bad) ds sub lret inc stos sbb push xlat ss cmp pop push jge shrl cmp jecxz sbb cmp imul dec (bad) or and cwtl setnp pop dec out jne lock out fcoms adc mov lret frstor mov repz paddq pop ja sbbl add sarl int3 mov xor xor mov stc test cltd mov rorb jge push movl icebp ljmp hlt sti mov fstps insb mov rolb daa xchg add push lcall mov loope pop dec push add leave imul mov roll xor or lds jb loop out jl xor out push push (bad) mov push xor and jae add out pop jb mov data16 dec fwait inc or bts inc fsubs or hlt mov add stos je aam scas rorb in (bad) mov sbb sub mov sub push andb xchg inc push ljmp in (bad) fadds pop xor addl les xchg or sbb push pusha jl sbb adc pop loop (bad) push jge and outsb mov aad jg pusha testb cmpsl sbbl jno adc and mov ret movsl fidivrl cmp fsubr (bad) rclb cli xor xchg push popa pop sub rolb lcall movsl add sbb std das lcall repz jl sbb adc lds inc mov (bad) sbb ret (bad) ljmp ja add pop mov jne inc andl and pop push cmp pop into mov ret lret ja iret add xchg mov test sub mov outsb fbstp add xchg out lea inc jmp roll in dec mov cmp cmp popf push cmpsl inc adc xlat inc adc repz in add or push add inc cltd sub mov push add cmp in hlt pop inc lcall (bad) pushf andnps add ret (bad) xor cmp mov movl push nop outsl daa mov loop push hlt test add aad pop pop push int cwtl adc adc adc pop adc lods dec add xlat fldenv ret mov imul pop test push mov scas add xchg sarb pop mov stos pop xchg and inc mov aas add mov pop xor xchg imul xor pusha lock add or xor sbb push into leave jae punpckhwd cwtl sarb out xor push dec lcall call arpl mov mov add push std pop jmp (bad) xor jo sete loopne cmp jle lock sbb xor test pop fbstp loopne sahf sub insl xchg roll add dec sarb pop arpl ja or xchg add lcall imul jecxz f2xm1 je fcoms rorl jl lea push (bad) and (bad) int3 jns test in movsl push mov insl mov mov sbb pushf loop icebp push and cmp mov push dec gs lods add sub add push push mov xor fdiv subb pop sbb test mov pop daa inc (bad) cmp inc xor (bad) fdivr nop add stos scas xchg add movsb les out aas adc sub mov xchg or lods cld add inc arpl inc add dec rorl add movsb mov cmc add fcompl nop adc adc jne jge mov dec mov sbb sub daa inc add (bad) mov adc add sub xchg mov rolb jno jbe add pop adc add push add mov add iret cmp adc shr sbbl clc xorl mov sub mov pop add mov movsl jl add dec (bad) push cmpsl pop jo sbb mov rolb adc mov sbb jbe (bad) jnp add push pop into mov orb add call xchg add push les mov stc xchg cmp sub push add cmp into shrb mov int and add or push adc add add subb adc jg push movsl loope shrb cwtl movl ss or dec fdivrl fbld andb test jo add test mov ret xor add push xchg rorl loopne aaa and jg inc shl fnstenv repz scas rcl fiadd fldl inc adcb xchg or sub pusha mov adc mov mov xchg push inc xchg movb pop pop mov mov add push nop lea fnsave pusha adc add xchg sbb out fldt sbb add push jae xchg mov add add pop leave daa rcr scas push add jne mov add lods pop pop add dec loop ss test dec sub daa repnz outsb stos popa mov add pop (bad) leave adc jle xor pop mov sbb fisubr sbb jge xor cs test cmpsb cmp in and in rclb rcl in pop imul pusha mov pop ljmp pop add gs and fsubr cld roll ret adc enter or fnop leave pop xchg sub jo ja (bad) out jle inc mov xlat push mov shrb and and enter pop xor jb sub adc cmp add (bad) xorb cmp fnsave (bad) mov add in xchg xchg pop testl fmul add movsb dec sbb add sbb sarb add mov (bad) add cwtl jmp cltd jecxz push cmc mov pop push cmp scas out movsb addb jg fdivl ja ljmp inc mov or (bad) adc rolb push or shl lea add cmp aas add jnp roll dec daa cli fcmovnbe push xor nop daa add out std dec push sub faddl xchg or loop (bad) aas push mov dec or pusha push add (bad) ret jo add xchg xchg in inc enter in sahf andl pop and lods js aas mov mov dec push (bad) xor mov in jns and aas mov pop sub mov push adc roll or clc ljmp mov out (bad) xor jno jo rcrl pop out add sub mov call adc xor mov add gs out cmpsb jecxz int into mov inc push out add and jnp movb sub jle,pn add xor (bad) adc jae pop jl test repnz mov into mov jg cmp mov xchg stos out jo or add inc js out (bad) testl jmp and add orl mov or xchg icebp xchg adc cli sub es sbb scas insl aam adc pop arpl lods pop (bad) ja roll jge jnp jecxz sub adc repz sub imul xor mov mov push add fcomi js xchg dec clc add int3 mov cmovbe fdivs mov (bad) fimul inc fsts dec add inc ss or sahf (bad) jo add out out sbb mov sub xchg les mov pop scas ret test and test (bad) cs add dec rcll cmpsb inc loope jp cmp mov inc scas int3 push lds push orl add add js pop icebp mov movnti lods (bad) divb cmp dec lds xchg adc (bad) fiadd adc push test pop mov sarb sti lret call lock adc lret pop subl inc inc in push xchg pop fildl popf loope mov add push stos andl fstl add orb stc sub out jne sahf mov movsl inc out push xor xor sub mov imul iret inc xor aam stc add ja fldl jmp fwait xchg push bound scas fisubrl mov nop enter int ja xchg xchg out add mov sbb mov jg aas inc or add nop mull add ds push lock push cmp add add jge out lcall jmp or add lods and fs mov prefetch int3 xor cmp ret call inc cmp negb add leave scas add xor mov fnstcw ljmp push ds or add jne mov cld add sti sbb les inc jno mov sbb loop inc mov inc pop in xor lds mov ljmp iret inc pop scas jle pop testl push es mov lds pop negb scas mov add flds add aaa pop das rclb (bad) and dec cmp sbbb popa inc repz jg add sti dec lock shll cmpl sahf sub rclb inc mov add mov pop mov pop mov cmp add xor or mov add aad xor daa mov sub push jl dec mov cmp andb xor daa push mov xchg movsb enter fwait add xchg jnp push pusha cwtl test outsl xchg stos pop and sti and decl movsb add inc cmp inc sbb jno jb jecxz xor push pusha data16 das adc push push push mov jbe leave leave shlb jge and (bad) hlt or pop out lock mov lock int3 testb mov mov mov sub add outsb ret leave out jl push add adc fwait imul test ffreep mov ret add adc roll arpl int3 in jmp push add (bad) mov and xlat dec shr sarb and sbb inc in test add iret ljmp xchg cwtl push cli inc repnz adc push inc stc fsub mov outsl data16 ret shrb mov adcb stos (bad) in adc ja mov xchg xlat shrl mov jecxz lock nop lea (bad) cmc ljmp add and mov xor scas int3 clc pop mov les inc lret mov daa pop jge mov add mov fisttpll add jns mov mov xor xchg mov inc jae add add jmp mov icebp sbb mov add mov leave inc cmc add add add cmp jne xchg cmp rorb jp push inc xchg incl mov cmp add jae out xchg add add shrb or js add (bad) jbe stos nop pop lret add pop xchg xchg xchg push sbb adc rcrb lock ljmp gs (bad) lock cli pushf mov mov sub pop outsl insl pusha (bad) jo stc add (bad) sub lret add mov rolb leave push andb fucomip sub add lret xlat out pusha or bound adc pop (bad) dec cmp roll sbb adc rol jle rolb adc stos (bad) adcl or sub cli ret jb mov push mov lods adc rcrb test data16 dec (bad) das ljmp push adc cmp push sbb or add adc inc mov popf dec add adc cmc add frstor adc cli (bad) push cmpl pop pop mov or idivl mov jne pusha inc les push shr sti pop int3 pop pushf pop mov fisub mov es xchg mov sti shll call fsubr push mov sub push das addr16 sub ret xchg andb fwait xchg pusha mov rol add rcll add xor test in cmp dec aas movsl mov (bad) jno mov xchg mov fisubrl mov push push mov add test mov pusha fnop lods add xor loope cs cli popl outsb aas push out ds mov in mov aad dec inc rolb outsb sbb pop mov add je mov movsl or add ret daa lds mov add push (bad) mov jno pop fisttp xor mov adc dec sub adc jp fmuls xor jl (bad) cmp out dec push xchg xor pop jp dec out mov hlt mov jmp int3 imul icebp orb mov rolb jnp or adc or ficoml mov jg xlat mov add aad push push and inc jne popa lock cmc shll fidivl dec lret (bad) dec icebp add ljmp add fcoms mov push fsqrt pop and lahf xorb xlat mov add addr16 out (bad) (bad) in lock xchg xchg add mov jge rol pusha jno push cmc push mov movsl xor lds xchg jp or pop cwtl jno pop push inc pop rorb and add aas int3 push ja popl shr fisttpll lcall push fadds icebp mov fmull popf nop mov call pop enter jmp js pop mov jno call adc sbb rolb mov cli jne loope cmp cltd pop test inc jg,pt jecxz sub add aad enter mov icebp push sbb adc push ret xor mov lahf out or and push inc adc xchg (bad) negb inc lock stos std add fisttpll mov mov out jmp outsl jno cmc aaa jnp sub mov xchg add pop pop sahf je inc inc xchg lcall mov add and cld aad leave cmp pop jp ja add pop and jo aam dec lock xor push stc cmpsb iret add test jmp lock sub fmuls movsb ds pop xor sbb mov (bad) cmp aaa lods dec mov or outsl mov sbb or cmpb sbb pop ret inc or mov mov loopne adc jle mov sbbb mov clc add mov sbb dec and test sbb sbb pop cmp pop (bad) xor cmp add mov mov repz dec jge mov push (bad) fninit loopne adc add idivl dec add (bad) inc rolb cmpsl (bad) ja sbb add add nop clc mov add pusha dec enter pusha push data16 mov orl cwtl pop fdivl out mov add sbb mov mov mov xor sub je sbb push lea into not mov dec cmp xor (bad) lcall add clc enter lods add std pop xchg cmp into in or loope rcrb add cltd mov inc fcoml mov mov jg jle add movsb inc adc add mov mov out sub sub or dec add lahf mov lods push fwait les bound stos sbb cld add mov xor orl flds mov adc test cmp das insb lods inc add call cmp add push sbb enter (bad) pop cmp add sbb fnsave xor mov jecxz cmp lret adc pop mov cltd adc popa (bad) lret jno loopne mov aad arpl js pop add inc popl adc pop jne out add and pusha xlat mov sbb sarl adcb add jnp add mov or outsb stos add rclb dec add stos cld adc ds add jae xor cld push push loop and popa leave mov push mov push push clc add cmc sub pop sbb mov lods push xchg loope aad jnp je mov and sub (bad) cld pop cwtl push pop fidiv pop adc push xor cmpsb shrl add mov pop inc cmp jl iret cwtl push aaa lea daa scas jo comiss pop movsl inc add fs out add push out sub push add pop data16 lret dec jp pop mov xor jmp movsb lahf aas push mov dec mov ret push push aam insb and (bad) fcoms movsl mov pop lea jbe jnp mov adc push sbb fldcw jns mov outsl sub or pop insl mov icebp movsb lock mov xchg cmp gs sbb mov fcmovnb xchg xchg pop push sbb or dec jo ret mov pusha aam movsb dec or xchg sbb inc cs sbb test add ja push popf mov add mov or lret jo xchg fcoms cli fist add (bad) test shrl (bad) push pop das pop mov cmp es outsl in nop rorl adc xchg leave stc lock pop jl add rol fimull lds and mov scas lcall mov cmp push (bad) dec je add hlt push (bad) or cmpsb hlt in outsl mov or outsb test jmp dec into pop xlat repz sbb ficoml push mov cmp adc sbb pop daa push into add jle xchg loope add out sbb dec sti sbb (bad) cmp (bad) adc xor ja movsl jnp xchg call iret inc jg sub lret xor aas les sbb mov addr16 cmp xor xor fadd push lret imul insb push jmp jmp push dec sbb add int inc dec and add pop arpl push dec inc push mov orb aas dec clc add jbe movsb loop sbb and nop push inc test js xchg hlt xchg dec dec iret add aaa popa adc pop test cmp jnp or in push mov ret out loopne and jge pop xchg outsl les aad (bad) push hlt mov hlt pop int3 xor add dec push ret sbb cmpl sbb sbb jo mov hlt sbb pop lds imul sbb add dec shrl push mov inc jmp fmull sub iret mov jnp add xchg lds cmp adc or dec sbb test mov loop push addl es test add sub adc mov (bad) cwtl dec mov jle lret mov (bad) aaa add jge xchg sbb int add mov push add loopne in es xchg or xchg adc je inc push lahf add jae push jg push rol daa test test mov rcrb add iret jge ja rorb inc icebp sub rclb sub inc sub lss add sarl dec jecxz push dec int3 add add fdivrs dec mov sub popf dec sti add mov outsl arpl jp je fdivs iret cmp sub sub pusha mov mov roll js dec movb mov rclb xchg roll sub sti mov ret lods mov popf mov jle int repnz subb shl rol jecxz loope imul cmp inc xchg xlat sbb add add cwtl xchg or pop push mov lock lods mov xchg rcrl lods add xor mov popa or lock inc adc les outsl mov inc lret and adc cmp jb add daa jo add imul in shlb pushf inc push jb repz push dec and cmp add mov pop push add imul xchg andb fsubrl add std lds sarl sub sbb int3 mov jns ds add cmp mov sbb in mov cmpsb cmp jle add orb inc test ja add aam icebp or jbe pushf out inc (bad) popf call sbb jl cmp mov jno lret add in lods scas and and outsb jb add sahf in pop cmpsl inc add iret call in sbb inc pop test jo or sub mov add xchg stos xchg and cld test nop pop lods xchg out push xor adc (bad) pop pusha jge or iret rolb xor in cltd or nop inc aam pusha sbb outsl mov or dec xor (bad) sar mov jg jecxz xchg in shl adc adc aam xor mov cmp sbb inc shll popl mov pusha fcomps add push jp mov and les xchg pmaxub add adc pop sbbl jb andb inc sub stc iret sub jle and in push push mov mov cli or fwait add add dec aas jno xor pavgw movl sahf or add mov call push dec sbb add pop adc int nop sbb lret pop xchg hlt lahf pop sub pop xor push lods sarb xor fcomps or mov (bad) je mov (bad) popa roll pushl jb add lret jnp and xor cltd push cmp adcb nop xor add call pop jo add adc inc fsts dec int add arpl pop jnp or add xor xor (bad) jge sub add lcall jle repnz add cmp push dec push in or mov jnp je fiaddl jecxz out lds dec xchg pushf add sbb push dec cmp out mul andb (bad) mov jle cwtl add jo (bad) jp insb out rclb jne push cmp icebp xorb cli mov notb lahf je and add fs insl push in mov addr16 add aam fsts cmp add or sub movlps sar insl jg adc inc cmp xorb (bad) cs add ljmp mov int3 mov sbb mov and xchg sbb jmp dec add movsb fcmovb mov out add jmp pop add inc stos fsubrl loop insl push push fcoml mov addl hlt iret jmp ret add (bad) es scas shrb sub inc arpl sbb inc and sahf cmpsl cmp fild cs push and mov movsl sub push jo pop dec adc push cmp es cmpsb cmp pop les lock cmp aad ror add loope add and sub and pop add push mov dec cmp add popa add stos or sub pop sub add xchg (bad) leave push xor cmp xor roll aas add stos loopne add ds mov movsb add and clc push scas test mov jg iret lea push cmp xchg fcmovne push xchg add push jb add notl add stc sub scas add cmp (bad) negl aam cs aad pop movsb gs (bad) mov push mov in xor test inc jb lcall add shrb pop add stos hlt mov xchg ss pusha pop add lret mov pop add loop adc fs clc bound enter xchg ljmp gs add fsubl call add lods pop mov push insl xor fs mov push clc jbe add aam mov add inc and sar add mov pop lret js add fiadd add lods imul cld mov aam popa add cmpsl add dec repz jge scas pop adc add cmp or pop out scas push jb pop pop stc dec sbbb seto addr16 test orb insl and movsl ficompl iret call clc pop xchg mov dec add add js and into lods add jae jno pop or test sub adc mov ret inc int rol push fiaddl adc leave (bad) mov cli xor cmp pop lds push push sub gs lods decb loopne pop xor fild std aam in in jle imul or roll sbb lods jmp and bound xchg or mov stos addb pop mov inc cmpsl fdivr cmp push hlt add mov (bad) jmp aas mov pop add shlb cmpsb loopne cmp les add ret dec cmc jecxz cmpsl jge cmp sub in iret pop sahf adcl outsl mov loope and loop add lcall xor dec dec movsb mov call sbb pop mov in paddw and inc push adc aaa mov scas in add outsb xor dec mov cmpb or in cmp dec add jle fcmovb outsb push add pop (bad) push sub xor pop inc aad mov int3 call les push cli add imul mov popa mov dec aad add iret outsl jp add inc decb jmp lds test popf add (bad) push lock xor js pop jne,pt sub mov iret add xchg jge fstpl fcomi stos imul sbb add push xchg js hlt sub mov roll jno ret add dec stos add pop cmp adc mov shrb pop cltd xchg xchg adc (bad) xchg stos jb push add sbb in arpl xchg (bad) add out pand popa pop add pushf lock ja lea xorb adc (bad) pop mov loop cmpsl xchg das pusha push mov sti push add and iret xchg pop jne dec mov nop cmp adc pop sbb adc cmpb pop push ja push stc add adc imul sahf add jns test out xor ror js add movsl ljmp cmp stc inc aam (bad) dec add jle push xor sbb inc das pabsb xorl or cmpb push add (bad) mov out stc mov ficom inc test ret cltd add fist cld mov mov rorb jge fs and pop dec or jp repnz sub in scas or dec mov adc jle mov cs push mov shr pop rcrb sbb xor cmp jo jae sub jns scas xorl int3 xchg pop add jne jp imul xchg in mov mov (bad) fs cmp add xchg orb int jne add pusha loop pop movl or sbb lret xor adc jecxz sbb pop subl faddl mov jno packsswb jns jg sub add jo roll test cli sub push push fs fisttpll push inc cmp xchg pop mov adc xchg dec add add jmp call cmp std imul inc fdivs sub popa adc mov add rcr pop mov pop sarb xor enter sub inc pushf imul jg push lea jmp out sub rcr test pop pusha sbb iret jl hlt shl add mov (bad) divps or (bad) mov add iret int lcall add in daa test str cltd call add cmp sbb jne add iret push daa (bad) shr out pop add lcall ja lahf arpl jb jno adc push (bad) ds dec iret inc add push push mov add add das inc add dec or test pop leave insl add (bad) jecxz push ds into xchg hlt imul aam outsb jmp push fsubs pop sub cwtl hlt cmp (bad) xor lods and sbb clc or insl push rolb jp sbb add add test xchg add or mov xor les xor sub stos jae nop jns cmpsl out (bad) xchg jno push outsb push inc sti add test ficomp mov loopne nop add xor mov arpl mov gs sub add in jbe fldenv mov jo,pn loopne adc mov push and dec cli test into push shrb add jo int push lcall pop cmp inc xchg cli or movlps add push jbe and (bad) sbb enter sub addl add jl jns pop dec stos pop jnp add inc push push arpl je push mov push add leave fsubr push jns les mov repnz add mov out sub inc into add fstpt xchg lods loope into arpl das jl mov icebp cmp inc jnp lahf inc ret inc add (bad) xor imul cmpsb cwtl mov ret aaa push and nop pop add sub outsb addr16 enter dec cmp add pop push cltd xchg out add xor xchg adc mov push addl sbb pusha pop pop inc movsb sbb jmp xor add lock stc mov xchg aas lret cmc loopne lods pop cmp or fs cld das push inc inc add jo je scas jl dec mov push dec push fildl xchg sbb push jl xorl cmp leave not pop add ret lock add shl pop jge in fadds inc (bad) fisubr movsl std je add lods in cmc or inc sbb gs jno ret adc adc inc mov aas out popa and fldl loopne jb and xor (bad) daa aam adc test int3 test add adc add stos call std adc ljmp xor (bad) jnp std testl out fnsave cmpb xchg sbb push iret add sub add jb and test cwtl inc inc pop and fs mov out cmpl mov jno aaa adc iret jns push insb outsl loopne test les xchg fdivrl mov lret lock addr16 adc ljmp lock mov loopne push pop add icebp aaa repnz push sarb out sbb hlt outsb push hlt mov add fisubl imul add mov xchg xchg repnz out sbb push pop pop jae push imul mov lcall call (bad) jne jnp dec (bad) imul xchg pusha push cmp push add xchg in mov les dec in jp pop and mov mov add xchg adcl (bad) pop inc add pop xor popf movb xchg xsha1 cmpsb dec enter push sub fdivl and add sbb (bad) adc (bad) xchg cltd add or jno test inc in add and push cwtl xchg cmpb and dec xlat pop add movsb push add jae and mov pusha or test ds xor fimul jnp adc mov jl sbb sbb lea jae mov push cwtl push scas rclb jl,pt add test (bad) sarb dec fucomip cmpsl adc sub (bad) push mov push dec cmp jns jle cmp dec out adcb adc cli repnz fcmovnb andnps inc adc dec popa jmp add mov testl or gs or aas mov fwait and ret inc sbb fadd sbb add je pop loopne clc jbe add xchg mov fcompl orb mov or cmp (bad) hlt cmp mov cmpsb gs inc and mov add daa shr pop add sub les add jbe and imul hlt sbb stc lahf roll xchg into rorl mov mov mov cmpsl data16 jle dec fs lret push inc dec call adc add adc xchg imul cmp mov adc push mov xchg outsb int3 loope adc js pop push cld outsl push jno cmp cmp or ret ja add in fisubrl jl cmpsb pop das movsl push push pop jnp push inc popa pop mov sub daa loopne,pn jo mov pop shll sbb mov sbb and loopne pop pop fwait mov xchg mull je mov jp enter imul lds sbbl (bad) pop sahf sbb lret (bad) adc stos dec jnp fdivr mov test cmp movsl adc mov into ret push mov mov and dec sub dec mov jle into jnp les dec imul faddl js dec punpckhwd dec enter add ror frstor in sbb sbb idivb lahf andb add mov test dec cli add imul shrb sub jg add stc push inc add mov push je pop xchg sbb inc stos imul inc sub and sbb roll in jo or mov push iret mov addr16 hlt add or daa cmp xor lahf out add stc mov add mov pusha adcb cltd mov inc pop pinsrw addr16 sbb clc inc imul loop inc sbb push mov dec pop jb push stos divb loopne jge inc addl cmpsl lret push push jmp and add xlat lods pusha lods mov call cmpsl in mov rol fcoms jg push les imul pop or add sub loopne mov in cwtl test leave pop adc sbb cli rolb lret add jecxz sarb sub xor lock mov movsb and cmp add pop sbb hlt inc adc inc adc jne pop pop cld add jnp adc cmpsl add incb mov jno add (bad) cmp pop push sub subb add dec dec movsb mov into leave mov (bad) pop pop mov lock pop dec xchg lcall cmp cmpsb mov fiaddl sub lret xchg add or sbbl je add pop xlat jne cs movsb adc jnp dec jno push pop and aam add mov xor adc or or inc sbb repnz repnz pop test mov les jae pop int (bad) rclb cld add or dec mov jmp cmp jae inc add shrb xor add sub sub xlat fdivs mov stc ljmp movsl push add arpl mov in call jp rol add inc push add sti les add inc xchg pop arpl pushf dec cmp scas dec xchg add dec dec push xor enter add call add stc cs rclb push in adc jns (bad) jl pusha mov sbb pop jne pop jmp (bad) movsb inc pusha adc rclb inc (bad) mov mov in inc mov mov push lods cmp and pop cwtl xchg inc dec lret arpl add aad mov lcall out xchg jmp xchg js xchg loopne cwtl mov push pusha push fimul std imul jl add nop cld test into or (bad) sub mov scas repnz aaa sub popf xorl cmpb xor inc rolb test cmp dec mov xor repz cmpsl ds leave idivl mov arpl jl bound dec std repnz xchg jl decl cmp int or jbe popl pop mov inc sti shr xlat and cltd jns shrb into fs dec fdivrl adc jne pop pop sarb jae and add insb mov call fist idivb rolb xchg lea test mov movsl rolb sub push roll ror xor xchg adcl add sub stos rorl gs clc les loopne repz hlt stos pop add jle jge faddl out (bad) and fnsave in adc cmp mov mov jno add gs xchg inc scas jb flds (bad) repnz add outsl add nop dec xchg test adc mov jmp popf in add push lods xlat add test add (bad) add stos sbb cmp mov and test sub aaa int loope in mov jns jb add dec inc aaa dec sbb les add insl add cs adc clc sahf add aas sti shll jne or add or or ja pushf add mov rolb add int3 sbb in dec call stc aas fisubrl add add mov add lcall pop and push push mov mov (bad) sbb bound xor or pop add ptest popf test aas mov and outsb lods xor cmpsb stos insb xchg loope jbe cmp cltd lea movsb adc and xchg cli movb push adc clc cmp vmread cmpsl jg mov inc lods xchg cld shl and movsb or cs fwait mov xchg add inc push fmuls add into cmp ret jmp inc ffree je pop mov repz stos enter push dec test std pop add test dec loopne add lock and call lds mov cltd fwait xchg add xor jo xchg dec add mov addr16 mov mov add rcl decb lods enter mov push addr16 sbb cltd xchg cmp iret mov mov and dec xor js in in sub out mov dec xlat sub jmp rcrb scas pop add int3 cmp jle dec sub add xor add mov (bad) adc mov xor shrb lret or call add jnp inc lcall bnd clc js pop jp add and into jb das fs mov loop push adc xchg nop xor sbb jne xor pop out outsb add pop addr16 shl inc mov sbb cmp dec cld pop dec push mov movsb pop insl xchg xor ret and stc scas fldenv jb add mov mov inc mov and xor add or push or jne push (bad) mov xor (bad) add mov not and lods xchg rolb and arpl loopne lea sub push loop cmp add push jae inc fsubrs adc cmp cmp jne xor sbb cmp xchg in add test fsubrs mov add inc add mov add scas cmp mov les add pop and enter xor pushf push sbb inc test add call loopne add jb dec out aad loopne and xchg inc cmpsl xchg loopne cld orb pop cli pop ret mov xor jmp inc jmp push adc leave loopne xor in or inc push sbb mov stos out jl sub inc mov mov push cmp aam cld adcl sbb push es icebp cmp cwtl in test push loopne cmp adc mov idivb jne lret inc test sbb aad (bad) sbb cwtl cmp add sub mov cmpb pop push mov pop sbb clc or push cmp sbb cmp add mov dec mov repnz add mov addl rorb push js lcall pusha mov ljmp (bad) push test and orl pusha sbb les mov fisubl clc nop js out sbb add xor fildl ds aaa lock shlb jns loopne repnz push mov js and fnsave mov fild push jl in mov jecxz or clc (bad) orl addl push jecxz and adc sbb pusha mov jle setb adc (bad) xor lock mov and ret dec adc or int lock sbb xlat mov jp gs push enter mov fucomi fwait mov mov jmp aas loope out pop jl cmp fs dec insb and outsb mov add pop cmpsb jbe jae add call cli ss mov inc rcrl pop jns inc out xchg popa add addr16 push push mov aas cmp pop fsubl xchg dec test lods lock cmp test push fcom (bad) lock test stc loope push pop xchg cli sbb psllw mov pushf cmp add dec and ja push inc and jo xor pop scas xchg rclb adc fnstsw aaa adc (bad) (bad) jle add icebp xchg jecxz jne out jno push xor sub and mov ja xor and shrb pop scas mov cmp test outsl dec mov out imul addr16 sub adc pop loopne pop fisttp sbb push testl dec jle push adc addr16 push cmpl mov stos jp sbb ds add adc ss mov adc pusha pop (bad) xchg ds pop and mov mov es ficomp mov cli xchg mov dec adc es aam pop pop jns inc push cwtl and repnz push lcall clc xor pop inc into dec xchg or ja mov rcpps add cltd fcompl mov cmpb sbb and mov push pop pop pop mov cmp push cmp (bad) bound or lret (bad) mov cmpsb cwtl dec icebp sbb sarl jo jmp mov lods mov arpl jecxz mov stc hlt icebp rorb cmp mov push cmp test add cwtl fcomps call or xor add sub xchg jbe stc jp and push add mov push adc push in push add scas jl mov mov movsb mov pop andl fcomps xchg call mov cli inc fcoml pop and mov cltd scas mov lock bound or sbb clc jne and and mov cmp js cmp pop (bad) adc push fldcw and mov add js int3 pop add (bad) pop dec xchg lds popf xlat dec arpl fmuls or lock xorb xchg fs push jns dec mov jbe jo push pop mov mov ds es sub aas cwtl add sbb or cmpb dec inc and jo lret xor jecxz mov add cmp push jnp push movsb cmp les fsubrs inc lock pushf mov sub fdivl lret js push lcall sbb (bad) push mov and dec inc (bad) and jecxz jno les sbb mov push adc popf push loope mov sbb mov (bad) cli mov add pop ret jmp shr xor and xor into flds inc mov inc and add pusha popf mov add cmpsb lods lods jecxz ret inc inc int mov (bad) aam cld sub dec out cmp dec shl js aas inc xchg addb sbb xor fisttpll jno dec xchg pop inc enter add adc fcoml mov fistp dec and add out push pop xchg pusha push std test add int3 mov inc mov hlt dec push mov pop lahf add mov adc xor fist movsb push nop les mov push rorl push seta mov popf es push rol or out add vpackssdw imul xchg and add xchg sub inc push mov and call ds pop clc mov sub or addb clc push adc xor insl jnp cmc les cmpb loop or cld movsb xchg adc test aad jl xor inc pushf lods xchg cmp jecxz add lds dec push adc push sub loope (bad) call test add xor (bad) insl add dec lds inc push adc mov cmp repz xchg rclb pop loope movsl push sub push xchg insb fstps mov xchg faddl xor dec cwtl sbb and (bad) xor cmp idivl add xchg mov mov in push pop cmp loop std jl dec je dec xor push xlat aam adc pusha pop dec btc incl ret adc js push je int3 jecxz mov rorb inc ret adc adc pusha and mov lock sbb ljmp (bad) cmp cli mov cmp mov test pop and pop xor cwtl and push in (bad) or clc jg (bad) mov cmp das pop inc xchg je sarl adc mov mov cwtl mov adc sub ja mov test mov popf add adc and jb mov (bad) inc jl sbb lods sbbb mov fisub movsb mov add sti shrl xchg pusha jo out or dec add lods or rorb xor cmp sub lea fcomps fsts cmp push cld cmc int3 push xchg shlb mov rcl add das int3 sub pop jecxz js nop adc lds xchg test mov ret xchg pop sahf adc ds dec scas out aad es xor es rolb shlb cltd mov rcrl test pushf pop js popf mov sub jge add clc jp ret andb and or add add cwtl jmp daa sub mov adc mov shr ss int3 (bad) and loopne mov lock sbb push fadds out jecxz and add dec lock jmp (bad) or adc movsb rclb jl (bad) (bad) mov xchg xchg add (bad) dec xor add ret cmpsb fild ljmp js cld cmpsl add mov adc clc mov ret stc push mov loopne and lea insb or (bad) or shll jno,pt nop mov xorb aam mov mov int3 ds xor andb pop lcall push aas mov mov push dec xchg test je add scas mov adc sub xchg lods sub or (bad) jecxz rcrb fisubr push add je cmpsb dec jno repnz and fldl mov dec clc inc call fcoms sub push lcall add push nop loopne or jmp pop dec or mov mov inc add lahf jb xchg sbb lock jecxz and lock orb lods sbb sarb dec ja mov jecxz xor or inc xor push mov jmp lret out push jecxz cld jl cmp std push mov add aad jbe xchg or xor xchg mov insl rcl (bad) push pop sbb mov outsb sbb popa (bad) popf fidivr daa dec aas ret iret les or and ljmp movsl ret mov aas push lret mov sbb sbb adc repz inc mov cmp add add push push clc stc daa and mov aam adc pop xchg mov sti pop inc in es stc dec mov enter xchg insb cltd mov stos cmp add cs jg sub xchg push jne or xlat push into and lret jecxz jns movsb add outsl add or push lret loope mov stc aam xor push daa test fdivr add mov jo add xchg push loopne xor or cli and mov cwtl mov cmp dec fcompl cmp push bound sub mov xlat das xor mov mov dec push movsb sub pop jbe pop test sbb jecxz dec mov data16 stc pushf fstps sub add cmp iret int3 outsl xchg cs (bad) jo addb sub addr16 in loop push push dec cli jge dec (bad) mov jmp jl movsb rclb out inc popl mov mov mov orb jb pusha jbe push xor jle idivb sub ljmp cli mov outsb pop sbb cmpsb add sub ret jge xchg imul jno je ret mov pop cmp mov movsb mov (bad) jo and cmp dec andl in icebp push pop std cmpsl nop data16 and in or je les xor out inc aas lods inc pushf pop xchg stos test cmp hlt mov sub faddl inc jmp jo nop dec test sbb and fidiv test movsb push pusha cltd outsl push out and pop test sub out mov (bad) push shrb pushf adc dec mov lea rolb test jns add lret mov add cmp ret push dec and cmp add sarb add or inc xchg jae dec xchg push dec adc movl cmp jle push adc lods and stc movsb sbb push test push inc mov push mov addr16 cwtl ret pop xchg loope sbb call adc dec pop and ds call adc jl es xor push pop sbb cmp fist les cmp adc jl dec xorl fs cmp xchg mov test int cs test aas push jbe or dec sub cmp insl cmpl pop (bad) mov mov cmp (bad) mov lds add popf in fstl icebp push movsb and pop sub lret subb push das orps out adc push mov lock mov and enter lds mov sbb sbb push and or js add and (bad) divb addr16 cwtl inc push xor push idivl adc pop cmp roll adc sub shlb pop mov add inc call lea les fisubr xchg mov out test and xchg mov adc adc pushf orl inc fildll jp imulb jge mov pusha pop or subb lcall jo push call add jecxz lock push add (bad) sbb or adc push adc inc lock add aad push cmpsl out xor iret in adc jns das mov das roll sbb adc xchg xchg fldcw cmp mov mov sub push sub or movsb mov fnstcw or mov add or aad pop cmp jo pusha mov rol dec cs fdivrs into test and xchg dec ret les jp loopne rol fildl (bad) cs and pop xchg mov push push mov (bad) jbe jecxz insb or pop pop and loop adcl sub xlat dec cwtl cmp and push mov push je and or mov ja mov or shl mov mov and add pop jae ja jbe push fisttp push and loope sbb or jecxz nop addb add shrl jecxz adc aas add xlat cmp sysret push popa and nop pop or and add (bad) lret add mov sub call inc add pusha in mov subb push pop andb out fstpl xor sbb pop and push xchg pop dec adc shr add jge dec cmp xor jmp jnp test cli inc pop call adc jne pop mov pop sub and cmp jne mov and fnstsw inc mov popf sub mov adc mov hlt pop andb in cmp rcrl mov and test jle adc mov mov sub addl dec fildl pop pop xchg pop add xlat push fld aas jle xchg daa popf push les or and lret scas sbb sbbl out test movsb out mov push pop jns sbb out test fstl pop mov adc sbb sarl add xchg add or andl mov lea pop aas xchg pop push in xchg stc add in mov push arpl or xchg add push ret in mov xchg push add lret inc sub fnsave push clc ss test or push es cmp in daa add enter test add or push add loope or loopw adc add rclb jl,pn cmp and fldl mov clc push test mov ficompl add pshufd cs dec adc pop add xor js leave cmp add dec sub inc dec mov cs pop test cmp lea je or jo divb add sub mov les cwtl test imul and adc mov nop xchg into xor jbe test in test cmp mov add pop inc loope daa and mov fsubrp xchg add mov in mov push outsl ss lret mov data16 sbb dec pop pop push cmp cltd dec mov subb insb cmp mov adc mov movsb fnstcw mov mov cltd xchg pop inc test sub pusha inc xchg xchg out pop nop sbb test push xor jo mov adc and or xor inc or ljmp jno inc fxch mov je adc mov out xchg cmp jnp lea push cmp iret rcll xchg rcrb sbb cmc arpl cmp xor xchg jo dec jns sbb sub or xchg adc popa and outsl cmp cld pusha mov xchg icebp jns xchg sbbb insb ret xchg add stos mov dec clc aam sub add mov (bad) ffree in pop rcrb push fdivrl mov pop xchg dec add and inc xor clc add mov das adc out repz xchg loopne orb cmp insl out imul add pop pop mov mov gs and inc mov mov inc cltd push dec mov jnp add test inc xor call mov push sarb add xor ror jecxz pop and or cmpsb add arpl sbb loopne stos xor in xchg rcrb adc cmp and test sub call jl arpl xchg mov movsl es add sub pop add sbb ss stos fisttp sub xor or loope jecxz lea inc imul pop mov mov daa mov rclb andl sub pop imul jno scas push pop mov adc or fsts leave add adc mov fnstcw hlt (bad) fstpt mov xor or pop push mov dec xlat nop mov mov jnp lcall mov fadds (bad) cs rorl and add sub push xor es mov cs xchg jb jl sbb aaa add xchg ja add outsl ds ljmp daa mov mov pop jb add ljmp add and cs mov jns pushf add push mov add jl arpl repnz and loop clc subl ret xchg inc add xchg mov addr16 lcall stos fdivs das sub pusha adc jg pusha andl aam cmp stos movsb xchg hlt and or jge iret lock push punpcklbw ud1 out rorl lea rorb and sarl add push loope cmp sahf fsubrp test outsl cmp add idiv aad sahf adc rclb or adc adc das ljmp or rorb adc mov andl or pop loop cld nop pop out leave pop mov bound hlt into push js sarb add in push enter mov add dec jnp mov rclb enter mov mov insb pushf dec js (bad) test jg test pop mov out jno int3 outsl pop add mov (bad) std (bad) sbb shrl jecxz add adc dec mov je js add sub loop push xchg les mov push pop jno push sbb and loopne and rclb addr16 cwtl add or sub nop cwtl test xchg lcall add cmp mov je jp mov push push stos xchg daa loop pop test sbb je xchg cs sbb mov jnp popa rcrb dec pop adc mov shr call push sub dec pop ja adc and jns aad sbb fsubrs movsb leave sarb pop and xchg jg cld mov or inc das sahf xchg in xchg xrelease xor shl push mov add in push loope add jnp xor outsl xchg and inc (bad) pushf xchg ret je sbb js or les push mov xchg sub aam pop push push push orl sub jb or (bad) and repz pcmpeqw es mov (bad) mov push mov test inc lods dec push add push pop xor mov das lcall cmp cmp je in xorb mov mov daa and jno ss xlat xor test mov lds fmuls or jge out cmp push pop mov cmp xor add adc fcomps push das sbb rclb mov pushf add in int3 pop add mov (bad) sbb mov loopne inc xor mov xchg mov adc sub rolb fildl inc and mov xor sbb inc and mov mov push sub mov xor mov and decl add ret xchg xchg and (bad) cld add cs fs cmp dec cmpb sub lahf add push add cmp cmp sahf das add nop mov jecxz push mov (bad) mov push and in mov mov sbb imul cltd jecxz adc jne sub ror stc and or (bad) (bad) push push aas push mov jns fidiv cwtl mov outsl push add mov setbe or stos test fdivl lret fnop mov cmc pop xor cs seto or add mov loope and sub pop ja cwtl sub xchg add pop js stos pop (bad) and pusha sti imul mov inc adc mov xor nop pop mov cmp iret xor in or dec ret sub and arpl xchg or pop mov pop mov sbb sub mov or cmp mov dec sahf add xchg stos mov test aas push fdivrs pop sbb (bad) fcoms pop dec adc adc mov add das jle int3 fdivl cltd nop adc mov enter lds add cmp xlat or xchg sbb das dec cs dec xchg sti jl imul imul and xchg mov icebp ds inc mov pushf add cs add push jo inc adc cs mov sbb into or cmp outsb adc je dec cwtl mov je mov dec (bad) mov add xor (bad) jno adc stc popf mov push jl cmpb push mov divl push mov js adc mov xchg or int3 pop lret imul push mov cmp adc ror xlat sub mov mov je negl (bad) ja mov adc fwait xchg insb mov pop fcoml call lock insl jbe (bad) xor sub push inc loopne push sbbl pushf mov addb in or mov add icebp adc add sbb and xchg in add cs inc cld mov out push dec or inc int sub pop pop mov or xor jns bswap fisubr pop xor mov push daa out push int3 mov inc mov nop sbb add (bad) xchg adc dec sbb xchg repz jno and mov arpl (bad) push sub mov mov add leave mov pop stos mov add inc mov cmp pop (bad) xchg adc les cmp adc adc dec mov jl rolb insl stos (bad) pushf adc add shrb call pusha push sub push pop idivb sub sbb mov xchg inc add pop loopne ja rcrb scas (bad) pop insl dec and loopne inc dec xrelease inc xchg js xchg inc (bad) adc mov shlb xchg inc mov sarb addl dec mov int leave movsl pusha push cmpsb imull (bad) aam aad and xchg pusha stos nop test insl add lock icebp and mov clc sub sti imul dec stc out pop add data16 pushf (bad) leave mov addl dec mul and push xor rcll loopne scas cmp mov add mov (bad) sahf adc movsb cli mov sbb repnz loopne (bad) loop fmull scas add lcall sbb leave loopne xchg push (bad) inc adc xor std add add add adc aam jg mov or mov mov hlt dec cmc in xor adc lods inc loop insl jg,pn gs out (bad) stos push inc inc jp imul fsubrs or shrb shrb or mov enter sar test jo add dec aas xor outsl and dec fdivs lock xchg rolb cwtl sbb pop xor movsl and pop addl cmp nop mov pop sub cmp daa inc push out scas jae imul add (bad) popl sub inc cs mov sarl jp sti pushf pusha sub in mov sbb inc repz adc lcall or leavew jns cld faddp mov test call mov jo loopne rolb mov mov int3 jp push loope sub hlt adc fs add dec stos push adc shrb push ja mov cmpsb aas (bad) in icebp push movsb sub movsb push shlb testl sub cmc mov add jmp cmpsl xchg mov fisubrl leave cmp xchg xchg add fistl push lods push add ss push lret or movsb pushf divb rclb inc loop lods out xchg push push inc cwtl add cmp addb adc and cmp jp hlt inc mov dec push push cmpsb adc data16 jne js pusha push lret xchg test (bad) imul mov leave aaa cli popa icebp enter fisubl enter movsl add mov adc dec loopne (bad) xchg (bad) seto mov cs enter ss leave sub dec mov in cmc sub lcall popf and xchg or or lock dec clc inc (bad) (bad) div pop xorl inc xor cmp add mov out sahf pusha dec push fdivrs inc cmpb add or inc pop movsb mov jbe repnz mov mov enter add int repnz pop dec sbb std test or movsl adc jl jno xchg enter push or je push add push mov mov add fimull mov xchg cmp ja fimul loope movsl divb mov shrb testb js add ljmp add hlt or les roll imul push int3 loope jne les dec shlb jmp sbb loopne sbb in cmp pshufw lret shll and loopne adc or sahf and jo lds push in (bad) dec jl inc xchg add xor cltd xor adc xchg add (bad) adc mov add and adc dec add inc data16 cs or add xchg adc out sbb enter sarb add and out push fcompl out js fiadd inc int3 jmp mov stos cmp xchg or mov or loopne dec add push lret movsl jge ja or aad adc and pop push sbb stos loopne xchg inc (bad) sub sbb add enter and adc push xor pop lret adc cwtl ja mov add xor xor rolb scas dec pop or add cmpsl sbb xor out xchg push jge add push call arpl adc out pushf jne popf and adc (bad) hlt bound int3 sbb xor nop sub das cmp sahf xchg enter shlb (bad) cmp mov in jg test pop mov inc pushf xchg mov ja and loope xchg cltd and sub in fsubs fwait pop and add aas cmp push sub shll add ja lret movsb jle or in sbb dec sub ds stc adc out lcall jo cmpsl or fs loopne jp mov cltd cmp push orl add xchg cmc (bad) call xchg push dec xorb loope pop and nop add xor stos sbb test addr16 xor dec ja inc cwtl push orl sbb pop xor pusha inc imul jl sub rol fsubrl dec std add pop aam mov push cmp cmp sbb sarb loopne aam rorb outsl mov notb test sysenter (bad) mov loopne mov push inc nop sub test cwtl testl stos sbb popf (bad) pop adc xor cmp rcpps cld cmp cmp movsl add dec mov sbb sub push faddl repnz mov cmp enter inc incl jns call (bad) mov mov cwtl xchg fldl xor (bad) mov adc add mov cltd data16 sub or in inc mov pop int3 out add subl pusha mov inc int3 cmp dec cmc xor out pop mov dec insl add and xchg int3 inc push out xor (bad) mov inc jl dec iret pop leave loope pop mov or push loopne int3 xor test adc mov shl ret dec std es sbb loopne xlat mov jle add pushf jo lahf in addr16 mov add iret add and sbb sarl add out inc dec hlt inc add or push xchg xchg cmp add in jmp add add scas nop jp or add or sahf fcmovne lods popa jg and pop add push stc je das lret popa iret xchg and rolb adc dec add xor dec sub cwtl out fbld loop jae mov in mov adc gs fisubrl sub dec jl pop pushf mov xchg int3 add pop test sbb add ljmp xor and jle jbe mov les or test aas loop and out outsl popa mov lds jecxz pop ror cli push add add mov jnp adc hlt roll xchg and mov cmp push les nop pop mov adc adc cmp pop pop mov xor push sarb and or loop rorb push dec test lahf (bad) mov icebp dec sbb mov call add dec xor inc loopne sahf mov dec ficom push push (bad) jle,pt xor loopne notb and js push stc lock insb pushf mov and mov sub xor lods test cltd xchg pop mov mov call cmp or push popf loopne jmp es push jnp insb mov and shll sbb lret (bad) or xchg adc jp shll sub pop rolb bnd or dec hlt je hlt nop cmp arpl add cmp movsl xor adc sub add xchg push cltd out add outsb hlt (bad) in and loop adc lods or idivb cld rclb daa add add nop (bad) out les sahf int adc mov cmp sahf or loopne in addr16 push mov and add ret adc or mov gs idivl out lods and cmp inc dec sbb in jmp ffreep (bad) push jbe pop fisttpll mov jo insb xchg adc icebp mov in cwtl and fs ds mov jo (bad) nop adc out mov pop (bad) (bad) out mov fsubrl movsb sbb mov or add sub cmp cmp mov lock jbe xor cltd add xchg std outsb or arpl mov add mov ja pop pop add (bad) aaa out xlat cwtl sub jnp sbb push xchg dec pusha mov and push into fnsave xor inc cwtl sbb inc jo add test mov xor push mov loop sahf xchg cmpsb sub pop add adc rorl loop push adc adc sbb pop pop sahf push test aad shll mov inc ljmp hlt xchg cld lods call addr16 fcomp inc add xor mov out cmp or movsl add dec ret pusha add or jno mov dec in push loopne or and inc les mov in or sub hlt arpl test lret lret nop push push mov pop lea pop dec or sub sbb rcrb (bad) in inc repz sbb mov roll push std enter lods pop cmc sub mov and or adc xor in stos cmpsl adc or rclb dec fistpl test pusha js add aas xor lock push int3 sub test sub leave pop ljmp mov dec push test mov add mov jecxz (bad) in lret movsl ja bound mov dec add xor xchg pusha and in inc dec test outsb mov sbb out les jp popf mov cmp pusha pop mov mov add nop xor (bad) cmpsl add xchg lock mov test adc in pop je vmovaps dec push or or fisubl (bad) call out dec cmp les les movsl or push addl add ljmp pop dec aam in mov jmp xor mov (bad) lret pushf es call or push loopne mov add mov lods enter xor mov pop mov imul sbb (bad) int cli push xor dec popa out pushf rorl movsl fnsave int in sbb xchg in adc movsl fistl sub xchg lcall add (bad) lds adc push or gs dec or jmp incb xchg pushf mov in pop enter or cmpb fisub rorb std in jp loop test xchg add or adc ret push mov mov and out xchg pop clc std imul mov add sahf outsl repnz inc enter xor into mov cmp rclb dec xchg push or dec xchg xor adc cwtl sbb adc xor test dec les pop sub insb ret test jmp imul stc pop mov stos cld lret andb adc int3 jmp sub iret add xlat xor hlt cld pop shll in adc (bad) xchg pop mov out add or insb (bad) fsubrl xchg dec cmc push loopne sub je fwait and out mov rclb push test pop inc aam mov jp cmp cs dec jp sbb fmull dec adc xor rorb mov mov pusha (bad) adc dec sub fdivl ja sahf add mov enter imul mov jecxz adc hlt mov pusha in icebp stc push js nop push mov dec mov or add sbb sbb cwtl aaa or loopne mov fsubp jbe add push adc movsb sbbb movsb bnd adc enter inc addb add push int3 jg xchg push add add mov add and mov fdivs cmp dec adc xor fcom or and movsb xor fsubl pop dec push daa loope insb test push xor (bad) icebp loopne cmp aas rorl add fcoml adc pop push test mov dec jo dec adc mov (bad) dec jg enter jl xor add dec dec in stos dec inc add cs jo pop add inc fs and dec add jl pusha xor dec add add pop sbbb in add sub mov in inc jecxz test outsl ret inc sub repnz and cltd mov stc xor adc js je pop icebp sub orl mov dec lods push loope add mov fwait xchg movsl pop lods jne xor xchg loope sub jecxz vpmulhuw bound js and inc ret jg jp fistpl mov fadds pusha dec leave jb mov add and stos sbb push jmp push fwait (bad) push ja mov cli mov add inc pop jno fist sub aam in add mov add or nop in adc add push push add out pop cwtl pop add push js (bad) jp fcomp pop icebp int3 dec jne pusha pop mov pop out nop and add aam pushf xchg mov sub shrb sbb int3 or movsl fdivrl adc decb loop add mov imul add adc mov je pop mov in outsl in stos pusha mov and fadd mov add (bad) jmp add jp jns scas aam pop jmp push loopne scas addl pusha shrb mov jne cmp sub outsl movsb mov add fistl fwait dec pusha out push xor sub outsb sbb fidivr add addr16 hlt adc jo xchg out (bad) je add (bad) xor out fdiv add and rolb jns (bad) mov movsl sbb pop push cli pusha jb sbb test adc inc rorb or mov hlt jns cmp and ret xchg add fisubl add mov mov add addl sbb mov inc push shll repz adc xlat test inc fdiv (bad) imul addb enter add jmp movsl movsb adc sub sarl sti push pusha pusha push in xor mov insl adc (bad) ss add pop popa jge inc movsb ret fs call add pop mov cld add cs jbe subb push addr16 add cmpb subb iret push jno adc adc and mov cmp and cmpsb roll jl inc jecxz and add xchg jo mov add fist and aad pop pop les out jbe cmp pop arpl jne adc movd mov xlat jmp (bad) fisttp scas add outsl inc test mov aas mov mov pavgw clc mov push xorl orb xorb xor jb out dec out add (bad) push sahf cmpsl pop mov or mov push pop arpl pusha xor into popf in jge sbb adcl add call jp add xchg inc (bad) arpl add lea stc (bad) clc add sbb (bad) gs std jnp add idivb iret jns mov cwtl lods add inc cs rol lods mov cld and sbbl add xor jns fsubrl mov lret (bad) jno mov bound mov add xor das je movsb pusha xor fbstp shr lods add mov jnp addr16 fmuls mov cld (bad) mulb push and outsl adc cmpsl insl add enter xor jbe out popa sbb mov add arpl mov sbb add mov (bad) imul add pop mov out add movsb jl add fstpt push ds push idivb adcl adc sub les cmpsl add into xchg pop subl add mov addr16 nop xor ret add imul xchg adc outsb sahf sbb push int sbb cmp lock cwtl and flds mov xchg call add popl adc and aam add push jp imul or push inc lock inc sbb add push arpl sub fwait pop add sbb mov add or add add leave pop or xor mov xor clc mov js add sbb jmp rcrb cltd test push in prefetchnta test lcall cltd (bad) notl mov adcl add aam rolb enter add inc sbb xchg cmpsb push inc fldcw icebp or add cmp cmp inc jl pop push dec arpl jmp ret jl or push inc jl add pop adcl cltd imul mov push rolb push leave clc outsl (bad) add mov and xor popa inc cmovle adc mov js fidivrl je das mov cs sub mov mov push mov push cmpsb and add fwait loop sbb push rolb mov push add daa iret push setne mov dec xchg xor adc add xor add loop fisub orl sub add adc sbb nop ljmp pusha fdivrl fucomp add add lods jns fidivrl aad lea sar jle addb test add jno mov jae adc push les mov cld add pop out gs aas or hlt mov inc sbbb in in add cmpsl rsqrtps dec cmc add jl sub lea sub je mov imul and addr16 xor in dec shll dec sbb sti mov cmp in movq incl add mulps pop test push hlt dec ljmp sbb rolb std mov sbb hlt cmp mov and mov add lcall add xor pop imul clc call mov xchg add inc insb push (bad) inc popa inc pop int3 jl add jno test aad push (bad) nop fnsave sub scas stc sbb add xchg cmpsl mov cli ret test je in ja lahf or std cmp bound test jmp divb sub pop mov inc cmp sbb inc shrl xor adc add cwtl ds shlb add sbb outsl jb xchg xor movsb enter inc add dec icebp jp mov data16 lcall xchg shr mov add fistpll scas insb fnsave les jns pop adc add pop sbb stc xor (bad) jo push test fildl pop mov hlt add out pushf sub and mov xor leave (bad) loope rolb adc jle dec xor cld add push jne mov pop xor xchg cmp push cmpsb ficompl xchg cwtl add imul enter sbb mov mov dec adc cmp cld mov push lahf (bad) xlat js (bad) into fwait cli stos es je sbb pop lock xchg dec je add fchs push sbb jge add out jne xchg pop mulb fnop in les push push push jno or add xlat in dec xchg adc mov in pop inc out pop adc add aaa fidivl add sub push fadds jge cmp or ja adc fmul xor add dec lds loopne mov cmp jmp loopne aam sarb xchg (bad) mov mov fadd jo inc jecxz or dec cli lahf rorb add icebp cmp data16 mov add mov in test and movsb loopne stc in add push adc popf cs add mov icebp lcall xchg mov mov xchg jecxz insb pop dec jno mov mov fisubr shll movsb push (bad) repz (bad) mov iret cs mov lret (bad) mov xchg push mov xor popf incb in mov add (bad) outsb ds jmp enter jbe or (bad) adc mov push mov add and jl add addr16 loopne push mov mov (bad) jne cmpl cmc shrl add mov (bad) xlat add sarb lret xor xor fs mov mov (bad) jmp je mov add dec cmp push movsl inc jmp lret les jo and outsl shlb scas subb mov adc or add and gs ss stos dec mov decb into out add cli sbb and adc inc add and push iret dec pushf add add andnps jecxz cli add nop or shlb xchg add dec in add pop leave sub push negl inc jecxz xor xor push (bad) incl movsl adc mov loopne adcb cmp add pmulhuw aam add popf jne,pt in dec adc add mov nop mov jecxz insl decl pop push adc sbbl (bad) ljmp shrb cmp movl out xor movsl xchg pop mov cld cmp sbb addb jl add inc imul dec fild (bad) cmp call jmp stos pop cmp test ret shlb jns add mov sti jae leave daa mov mov stos ret sub cmpl and cmpsl sub xor sbb sahf jo add mov (bad) push push ret call xor or or test clc jne mov dec mov pop fcmovu jns das test xor xor or cli or cmp cmp outsb insl xor testl jle loope sbb leave cmp lock mull or xchg addl sub sbb or (bad) push test sub data16 loopne cmp cs (bad) sbb in sbb mov pusha pop test sub das xchg enter push subb pop dec or or jmp rcr mov mov mov inc push fldt imul repnz (bad) loopne cmp xor pop mov pop fs pop pop mov sarl add lock dec adcb js or bound mov movsl hlt mov test enter push pop fdivrl pop aas and mov shll sbbl push cld xchg inc cmp int add lods sbb pop js outsl mov lock movsl lea mov ljmp mov insl and mov adc sbb jl cmp add insl mov ja inc adc or inc pusha jmp pusha jno stos dec xor int3 mov add cmpsb js enter xor push mov mov adcl add stc push xlat les outsb imul mov imul lret (bad) xor les repnz fistp in push inc dec addr16 jno pop stc pop add or cmp add pop pop pop sbbb add xchg fisttpl xor cmpsb icebp push add mov daa sbb inc ds mov outsb xchg mov pop mov aad dec and popl add ret addr16 sub and addl xor call lret loop inc adc loopne or xor and nop subb inc rcr add frstor jbe (bad) push test nop dec mov and and (bad) fabs nop ds fldl mov outsb pop adc cli adc andb dec push add or fidivl aas and cmp add hlt add shrl repz outsl or mov in mov rcll pop aad sub dec mov (bad) call movsb adc test cmp pop cmp push mov sbb movsb adc xchg xchg or repnz add (bad) in add xor and mov dec adc fcompl lret xchg jmp or icebp pop loopne mov (bad) xor int add sbb or lret push add xchg test cmp iret jge add push pop fs fcomip rcl and jecxz leave (bad) dec sub cmp es mov addb pop dec mov in cmp add imul mov mov rorl (bad) cmc stc xor sub aad mov or xlat fsub out fwait enter sub push jp mov adc cs and or jl es add ss pop sbb xchg push push (bad) mov scas xor jb xchg fstl mov add pop hlt pop les push push enter or cmp hlt add divl lods loop fs push or (bad) jno xchg dec cmp rcrb or jl pushf and sti in stos int rcr les jecxz dec sbb sbb psubusw cmpsb es xchg inc mov daa ja jns pop orl cmpsb add push punpckhwd fsubs add cld and xchg (bad) mov icebp jge shll repnz fcompl dec inc push pop xchg call mov ljmp arpl aas push push pop add into iret mov clc shl pop sbb push jne jl jmp jno es clc nop add out ret lcall mov dec fadd add pop outsl insl cmpsb cmpsl sbb add in insb or shlb cmc and aad jns mov mov pop pop pop stos outsb cmp test jge xchg lods ret mov push rcl dec and or cld lret mov pop adc jmp mov lcall inc jne mov or lcall mov add test and fdiv mov mov enter mov pushf cmp cmp xor or push mov or fildl xlat scas notl mov shrl imul dec mov mov inc adc or rolb xchg and movsl (bad) iret bound clc fsubrl pop add subb imulb push pushf into adc (bad) lret mov cmp (bad) fs dec lods es pop pop dec es inc sarb mov cmp aaa jmp jmp insb fs add xchg push out ljmp fcompl (bad) fidivr push icebp movsl aaa or lea sbbb xchg scas enter out pop (bad) dec les jl dec lcall adc and adc iret (bad) dec sti jl bound jmp fsubs (bad) jo add mov push fcmovnu inc les push sub dec subb mov pusha mov int3 cli or pop and pusha xor cmp push and fsubs lds adc (bad) mov sub mov lret pop ret dec jl rcrl mov pushf xlat dec ret ljmp fistp sarb cmp dec adc dec dec int3 add add insb and add cmc jge push mov clc and push loope mov and fstl outsl add adc cld subl verr or xchg push mov pop add mov js cwtl mov stos ficompl inc xchg dec adc push cwtl adc sub aad and imul dec scas jl pop pop mov inc es and ret mov push and jl test push loop adc (bad) jae fs sbb test shrb fistpll (bad) pushf and cmp aaa xchg pushl cvttps2pi or movsl sub int lret and nop test lea (bad) mov jne pop sub mov hlt or and and cmc inc lods mov dec jae add lds fucomip nop gs pop mov daa and clc xor cmpsb jge add outsb inc mov mov fmull (bad) push iret les jns and sbb stc jle sbb jne push call pusha ret add scas dec add push popa sbb out cwtl add pop mov popl adc icebp jbe pop shrb add movsl push fcmovnbe mov mov (bad) jnp or sbb push push inc das test les js (bad) pusha dec int add mov call lods inc pushf mov sub jp fsubrp fildll add or hlt sub nop in std test repnz sti addb iret sbb cmp adc (bad) sub inc test movb mov cmp movsb sbb rcrl out cmp jl and dec pop (bad) test or cmp jle cli cmpsb mov fcomp sbb jb movsb adc sub cmc (bad) stc xor add pop roll int3 xchg and lret faddp cmpsb hlt xchg add mov add xchg adc jbe pop loopne or ds pop cmp sahf ret int xorb xlat ficoml push dec mov mov (bad) scas les outsb arpl pop push jp push cwtl roll pusha dec mov pusha cs jl test arpl imul add push pop cs mov and dec cmovg mov xchg mov cmpsb inc in lock rorl jmp add popa add cmp mov add or cmp je lea cmp add and jl sub es div mov addb idivb mov push stos xchg dec sbb cwtl mov mov pop enter pop sub dec aad mov repnz mov inc mov cmp dec dec mov inc (bad) divb add sub and ds in mov iret loopne cmp ds or cmp push push out sub jl call cwtl test outsb test sbb xor test rorb dec xlat das (bad) or orb pop je xchg les sbb cmp add mov pop xor cld push mov pop adc addb rcr loop adc hlt xor sarb sbb xchg fcmovnb jo inc mov (bad) loopne xchg aaa or or inc and xor scas aas or (bad) call in lock ror xor pop mov lods data16 pop jns lcall adc je push (bad) fcoml popa insl jmp adc mov add mov xchg xor jno les movsb push jae sub call in jmp loope (bad) jmp shlb enter jmp jae adc pop popw lret shlb (bad) add outsl mov inc rcl jg sbb out ljmp xchg dec adc fcoms enter (bad) xor int cmp mov nop loopne dec mov jno test enter or push xlat push mov and jle les push or sub push push xchg hlt add loop xlat imul mov popf xor lock adc jge mov add push pop dec stos cmp enter sahf add js popa loopne scas xor mov repnz add xor sub sbbb (bad) das pop out movsl rorl xor test jl inc lock (bad) vpunpcklqdq pushf mov push daa mov jmp call or stos xlat xor add add or ljmp and or or insl jo or xor lods pop movsb ds (bad) mov or imul pop jge outsb xlat pusha adcb inc mov shlb (bad) imul out mov daa in cmp or loopne push jo pop aam fs movsb jns mov sti (bad) jno jg cmp stos mov add or mov mov add (bad) ljmp sbb and inc cmp lds jnp jne fidiv xor xchg aad (bad) or fwait adc mov cmp orl inc mov inc adc add push or test testl jecxz roll sbb inc insb dec push xor jl hlt lds sub outsb adc xchg add adc mov shrb add daa dec dec mov mov sub pop mov xlat add adc dec out inc dec sub lock mov fs pop ds add jge (bad) rolb imulb mov mov push lret testl inc fstps movsb cwtl lock nop pop mov pop lds mov jg mov pop pop (bad) dec mov add xchg or adc cmp pop sub lret mov enter test sti inc push pop outsb std xor fdivrl pop fisttp mov test jecxz cmp mov push add cs rcll imull stos inc mov in adc rcl and jae stc xchg cltd dec and mov mov sbb dec movsbl xchg inc aas push bound mov adc in popl test mov push mov (bad) mov aam sbb add cmp xchg test add cmc pop mov xchg inc les loopne mov inc rolb mov std out cltd push and or sub test popa xchg sub negl inc add jle inc js dec nop sbb add fnsave or or push xchg dec mov iret add fnsave scas inc and sarb add das inc insl and mov popa or adc inc and imul pop sbb inc arpl sub adc cmp cld aas into popf lret xchg test (bad) push push jne dec insb in or add (bad) test add (bad) negl fnsave or lret fwait sub push sbb cwtl jle jns cmp rolb test (bad) xor cli in outsb dec jge jae mov xor mov xor test dec std and jl add mov arpl test pusha cmpsb cwtl cmp inc sub aam or daa cltd adc cmp jecxz xor les adc push inc jo xchg add xor pushf xorb inc test add in loope es sarb ja pusha jae (bad) xor mov xchg scas or rcll push sbb fcoms dec fldl or scas mov jbe jp push jge or or push test stos add xorl add inc xchg xlat lcall in mov pusha mov in mov add cmp mov cmc clc mov dec adc std pop (bad) pop push mov (bad) inc pop call imul std dec or int3 pop push sbb sti shll test push fdivr jae outsl stc jno mov inc sub push leave xor enter mov enter adc ror fmuls inc loope cwtl or mov mov pop arpl hlt dec ret das mov inc jl mov fsubl pop iret notl push mov lock push adc jne push hlt incb or fcoms mov add sub xor clc rcl insb adc inc repnz sti push adc dec fidivr xorl xor jbe,pn jo stc stos jmp xor faddl cltd arpl xchg sbb repnz xchg and add xchg sbb mov addr16 test xchg add repnz std int3 cmp testb dec adc xchg and mov fsubl iret jg sbb fxtract out xor das mov (bad) mov cli add cmp lret sbbl loop pusha sub popf or loop pop xchg addr16 stos aas enter push jae out test imul out inc lret jnp (bad) in scas cmp inc out test std inc inc inc xor jns frstor rclb sbb sti add push and outsl in cli movsl mov and mov daa das pushl insb add dec fiadd addb jnp std int3 xchg push mov and shl pop inc push lcall dec dec mov and sbb sbb in popa imul roll and pop out outsb icebp jp jo adc or cwtl roll in fist xlat jl stc jne (bad) jl imul mov outsb stc lods hlt lret lods fs psignd loopne xor in pop push fwait out dec xchg inc hlt inc stos mov adc mov mov nop pop jge add pop xlat dec cltd enter xor adc ret sub mov add dec jl or xchg cld (bad) sub mov lret inc cmp cld pop mov lds scas cld add xor nop lahf outsl xor xchg xor enter fnop add (bad) pop push pusha (bad) inc pop jg add push (bad) popa (bad) notl add pop stos pushf lret inc dec mov cmp cwtl jl mov sub in xchg or xor lock popf mov or add dec loopne mov insb cmp pop nop add jno (bad) movsb push scas or mov pushf pop cmp cmpsb pusha sub dec testb xadd xor and stc (bad) (bad) adc repz (bad) or jno call sub xchg nop cli (bad) xor shlb mov jl add repnz mov jmp daa movsb push inc sbb add (bad) test cmp repz add mov incl sub inc xor in jle jge inc add mov mov test daa sub incl dec (bad) test popa cmpsl xchg add fwait sub push mov ud1 repz bound (bad) loop jecxz lds or pop stc sbb gs add xchg inc xchg (bad) sarb lds adc loop sbb adc rolb enter jmp pop xchg add outsb insb jl pop in sbb pop push cwtl lods les cmp sub rclb lcall hlt xchg push rolb loop cmpsb cmp aad sbb xor int3 enter lock imul xchg pop in sbb aas xor lods jno add loopne loopne jnp xor leave mov pop xchg push add lcall out in rolb add dec cwtl addr16 cltd adc ljmp ds add adc mov mov jno sbb and movsb push and imul or add testl xor rclb pushf inc or mov int3 inc cmp inc push or aas repz test xor (bad) subl mov movsb leave faddl imul ss lret adc mov enter mov adc popa mov adc and xchg mov sbb adc jmp xor add scas cli and adc hlt out fsubl leave das or jle sbb sti fdivrl lock push dec subl fimul lcall je in loope mov xor das jo mov aas mov mov and (bad) lock and dec jno (bad) cltd dec sbb xchg pusha loopne fmull or cmp xchg mov xchg fmuls jl sbb mov push repz jmp adc (bad) repz add testb add mov xor jno rorb sti sub mov inc shll or and mov fmul sub add sub lret clc xor in push outsb mov xor fxtract iret push adc repz outsb add loop (bad) mov inc adc cmp je (bad) adc roll rcr push add das repz adc leave jmp pop pmulhw add imul ja inc lods test repz roll inc sbb jae or or std (bad) test rclb (bad) jo bound loope fiadd fcompl cld movsb sbb and mov pop hlt aas pop mov pop test dec pop xchg add std cmc add sub es push add xor hlt pusha fnstenv mov (bad) clc stos mov mov and push in xchg pusha and pop in fdivl push loop adc and inc xor cs xchg push repz arpl imul pusha std loopne sbb jb jmp out mov mov lods lds mov dec and jns les aas push add xchg xorb add inc jns jno imul outsb sahf fcoml iret test adc pop stos ficomp push mov jge daa mov push mov das cli test xor movsl and jl push loop cmp and inc bound test and nop xor clc or cmc add fldl call adc dec out lret icebp xor add jbe negb or sub mov dec es in xchg js cmp nop ja add bswap mov in das add loopne icebp inc xchg loope inc cmpl pop xchg xor mov sub stc loope out adc sbb inc jo shl inc xchg mov int3 jb shll mov add dec push repnz stc ret sbb adc mov cs (bad) popa mov ja jbe test cmp stos enter mov in dec xor repz push ds pop cmp hlt cmp roll dec dec mov mov loop sub adc dec sbb mov inc mov push or adc repnz sbb lcall push push js cwtl sbb mov add dec cli cmp out ret sbb mov mov in ret inc lret shlb or cwtl lea sbb add cli les into call sbb ret xor clc rorb and and movl xchg fbstp lock xchg pusha notl inc cmp in loop mov lret and imul mov cli mov jae push roll sbb pop pusha cli jmp popa jle xor mov mov in and rcll inc xchg pop inc mov pusha jne imul cltd into mov test adc adc xor mov adc js outsb add imull jmp dec dec sarb adc or xchg mov add nop jmp or movsb xchg lods cmp dec orb mov test push fidivr adc dec push loop faddl adc lret or dec inc add ja jo xchg loop sbb aaa xchg adc dec popa add out adc loope sub test in adc xchg ljmp (bad) push inc push test cld dec fsts xchg jl jl and adcb push mov adc mov lcall and mov lods jne jnp jns mov add dec jmp add std cltd dec jecxz sbb enter jb sahf xchg sbb sub mov xchg jp add cmp xorb push test sbb cmp les dec xor inc mov in cmp clc sbb sbb nop inc test push ljmp pop adc pop mov inc adc jle sarb lahf jo dec stos pop outsl rcrb adc clc mov cltd int3 add in mov je imul inc dec mov mov dec adc mov mov inc fistpll add mov push rol mov dec pop mov inc daa xchg or dec sahf add xchg and adc inc clc xchg lods mov jle call addl les div mov inc adc lds xchg cmc jg les nop paddb inc mov mov idivl jmp cmp arpl xor lds adc mov add and add clc icebp dec or outsb xor inc adc add push into enter loope add bound dec test aam sub int mov rcl and cs inc dec hlt add hlt cmp cs daa icebp jge sub inc inc dec imul fstps lods insl int sbb push fs test mov test inc inc stos cwtl xor mov mov add outsb mov (bad) push push dec hlt inc les pop add push enter test inc sbb dec lds dec adc push adc sub cmp jne testl popa rcrb clc mov xchg jge test fwait adc pop jmp cmp (bad) mov pop fs or xchg inc and lahf or xchg xor dec clc fwait or xchg (bad) loopne and xor out cmp out sti mov arpl add sbb mov inc mov mov into mov adc push xor mov pushf mov daa fcoml jb lcall jo ret rcr icebp test cmp dec dec pop pusha sbb shll and sbb sub xchg mov sarb and jl push inc leave pop ret mov rol xor and call and xchg mov adc cwtl pop xor shrb or fcomps dec in push jo and aam add pop call insl cmp std movsb (bad) fcoms imul rclb xchg repz dec jno pop mov add (bad) jns adc dec repz mov (bad) jb out and cld sbb sbb (bad) es dec or pop or cmp test movsb jno popf dec adc jb push aam and cli sub incl lret in sbb cmp add mov adc call adc dec loope mov lock pop ss stc adc xchg pop sub (bad) cli mov inc add (bad) inc addr16 sbb int3 lret leave les fist inc sub cmp fbld in or addr16 lock mov xor ljmp add mov dec pop mov and lock movl stos push mov adc push jp xorb mov add ret push mov addb adcb fwait lea inc mov test mov sbb mov mov adc jecxz add pop inc cmpsl rorb and inc add and mov inc pop xchg or dec inc inc imul cli loopne pop into outsl mov adc dec bound xor fidiv jnp and push jns push loope sbb jecxz pushf push stos mov dec lds mov inc mov rclb mov mov or arpl jae test jle and cmp cmp sbb sub or adc pop pop lahf testb adc xchg push xor rorb lods pop mov mov jmp push pop clc pop mov jge inc in and jp add lea inc and testl add jae sahf jl call add push notb jo pop adc sub pusha sbb sbb add add jg pop pop addl rol cmc add test int3 in add popa mov xchg jb adc cmpsb shlb inc and mov fisubr sbb add sub jbe cltd dec icebp loop sub mov fnsave lahf int3 and add or lcall and les loop and lock jne xchg xor call pusha nop pusha lahf lcall inc test jmp scas cwtl jbe jge inc or inc dec adc test addr16 and inc arpl dec lahf mov mov test or inc jp push out mov cltd adc cmpsb and test adc sub and sbb les pusha test shrl push pop inc frstor sbb adc int3 inc sub sub cmp rorb ss pop xor mov stos lret xor dec mov in es xor add test push or xor inc in lcall adc outsb add and jge jb sub nop add sarb cmp xor pop inc mov lahf push lock pop jl adc sub jmp scas push js ja or pop inc mov test js mov leave cmp loopne rcrl mov jle pop jo outsb aas ds sbb leave inc xchg cli lret add cli lock add test pop (bad) out lods (bad) inc movsb push fdivs add or mull inc inc cmpb rcr sbb mov xor xor and mov sbbb and push (bad) xchg cmp les subb movsb adc inc cmp mov or add lahf les lret xchg cmp and sbb sti loopne mov add (bad) mov lods add or scas jp idivb adcl cwtl or and inc addb xchg (bad) scas push add or mov jle pop aam imul dec push js push stos (bad) loopne orb mov dec pop mov bnd es xor sub and fs cltd dec inc cmp and xchg sbbb push bound into add mov xor nop jno cmp addb xchg add test repnz mov fld xchg and or cmpb sub pusha pop subl push jno and std int inc icebp sbb repz test push jecxz cmp push pop out fstps fidiv mov adc ficom push lea and fdivrp add inc je lahf cld cmp sub lea int3 jmp popf mov add mov xor push rcll push sbb adc adc add fildl add fidivl add mov pop inc adc test je (bad) xchg inc push fldenv push cmpsl sbb lret jno inc in sub pop add xlat mov inc xchg lret cmc sub ret xchg pop sti popf fild push xor push out fiadd mov and test add mov lret mov pushf (bad) jbe add and and xchg jo mov sbb movsl repnz inc cs xlat sbb pusha sahf sbbb push sub dec cmp cs and mov mov inc aam push pop lods or ljmp add into push mov xchg pop in jle cmp add lods dec rolb (bad) out xchg xchg xchg (bad) (bad) (bad) mov fdivl fsubrp aam outsb sub add sub fldl pusha mov xchg (bad) jmp add subl add test push popa shr mov cmpsb jl mov out push rclb dec mov pushf stc std outsb cs add inc (bad) sbb lret in loopne adc sbb lcall mov xor imul add add push iret sub fs out mov ds jno push ja add and push lods dec jp cmp in push xchg jbe cld add or leave int3 sbb push pusha push adc leave js add xor scas add mov push push hlt les lret xchg mov enter push pop loop inc mov sbb xor (bad) mov add pop insb mov fdivr add inc add pop sbb fwait mov pop sub movsl mov or lods cmp stc mov jge sbb and aas pop in mov mov (bad) aaa pop mov and (bad) mov sahf dec cmp iret outsb punpcklbw add xchg mov mov out sub scas mov and add daa inc or sbb pop bound mov (bad) icebp int3 add das mov in mov add cmp or or nop add dec (bad) or cli add leave arpl sarl insb jne lods add divl out aad cmp loopne xchg mov pop daa into inc add roll nop and pop pusha ss mov inc nop xchg test inc scas add adc jmp or sub xor xchg arpl iret sub mov push divb in imul add pusha mov mov inc in xor xchg in add fisubr sub jl add lret jge add adc jle cmp pop xchg stos mov xchg add adc jecxz jge popa mov sub std mov jge adc ret sub pop out push add add add repz inc dec aas cmp lods push mov jmp adc cmp xchg pop or sbb mov les adcb xor lret enter sub jne aas add add mov jmp in jo mov sub in mov mov and and (bad) cwtl push mov sbb add test dec jmp push add js rolb mov roll adc inc xchg es daa jmp test mov dec rcrb add mov xchg f2xm1 cwtl rcl cmp add enter sub add les or lds jmp mov cmp sbb fiadd xchg xor dec ficoml xchg mov pop iret add pop mov mov movsl inc xchg es inc in cwtl add nop inc fs ret rclb movsb in or jnp sub dec xchg xchg inc loope ljmp jae push push push xor sub mov fldl in inc add int3 into icebp add adc popa dec out shl adc jns add xor movsl xchg arpl orb mov adc jle push outsl cmpsb add pop pop js lock dec sub xlat add xor add mov (bad) iret clc in sahf pop push icebp cmpb fsubl sbb mov xlat mov dec scas ljmp scas mov jae xor add adc pop and add jno rol inc add ss in fs inc dec sbb (bad) adc or inc inc sbb xor cmpsl lret mov adc add sbb lock dec nop and div add xlat pop lea push cmp lods pop mov mov sub push add mov (bad) mov or xchg jg jmp and aaa mov adc mov add mov xlat lcall ret xchg sti add ret pop xchg cmp mov aas inc popf mov mov (bad) cli push add add pushf mov cmp dec (bad) jecxz push ja or int add pop fs pop mov dec aam andb cmc mov xchg aas cli or sbb jb inc mov add mov in add sbb arpl mov sbb cmpl fildl lret sub icebp inc adc mov je pop dec xchg add inc xor or loope add cwtl fidivl pop sbb jnp pop push mov mov inc cmp (bad) jbe push hlt pop pop or mov cmp daa add shrb stos mov xchg hlt inc jle mov out adc jmp stos add lds jnp inc pop in pop mov add push xchg adc jmp shlb leave sub icebp sbb add push sbbb es rcrb xchg outsb aad sub adc jbe mov push push pop and icebp sub ss pop lds sub cmp scas (bad) mov loopne in in ds mov mov cmp add mov aad dec jno or lock xchg xor mov lea adc adc imull loopne add cmp hlt and xor xchg mov xchg add sbb push (bad) adc cwtl pop popl leave xchg push or ja xchg add add fildll cmp dec push or add push mov scas pop add mov push mov add xor add fs pop iret add mov mov xchg sbb mov mov add aas or inc stos repz fucomip in pop mov add int3 mov xor stos out stos ja out popa shll lock and xor jecxz inc test sbb adc or clc mov cmp imul insb scas cmc mov or dec lock les iret sbb pop jmp pop pop dec lea (bad) xor dec mov les (bad) testl inc mov mov sub movsb cwtl add fnstsw lds (bad) mov insb std add das out mov add lock xchg rcrb add cld loop ficoml stc jecxz mov orb jae cmp add sahf sub clc cmp xchg scas push inc jno push mov mov xchg (bad) jmp stos pop sbb adc lods push lods jnp add adc flds in mov dec inc call jle add repnz jb xlat fistp ret dec orl addr16 xor jge shrb mov inc mov adc adc add mov adc mov lahf dec call cmp insl jl add pop leave inc andb add mov adc pop cmp aam mov pusha ffreep mov mov inc gs fadds jp cmp mov mov test pop mov pusha mov imul aaa test test sbb push clc aad stc testl xor in dec jne repnz fcomps xchg add testb sbb push iretw ror and cmp xchg (bad) jge mov jae add icebp fadds outsl cmc pop (bad) roll sbb scas arpl inc and jmp push sbb dec lods xlat lret ds sbb xchg loop shrb sahf faddl sub cld add mov movsl stc daa jg push sub xor mov xor data16 fwait ljmp add jae jo pop shlb mov ljmp xchg xchg jo add (bad) dec cs rcll (bad) in stos ljmp pop mov ret imul jo into and push cmp and mov jb or xor cmp sbb lods in lds add mov roll imul mov dec decb insb addr16 cwtl lods gs inc pop ljmp icebp pop fxch push mov mov lods enter out test push call into push ljmp out test dec push ss pushw sub leave adc out rclb jae mov mulb pushf in imul push ror rcr mov fs add push insl shrb add cmp lret cmp pop add int add mov adc inc rcll test rorb push daa jo bswap pop pop iret pop fnclex sbbb pop cmp pop in lods jp orb bound dec (bad) lcall xor xchg lock dec pop add nop cmpsl icebp iret xchg pop dec mov pusha pop (bad) mov lea push add jne fwait xor dec sub add jle inc add push xchg jmp cmp add and call xor mov mov sub and cwtl inc inc ds or ds or sub and adc and and and lret sub adc adc ret xor nop and and add sbb pushf and and xchg js inc and inc cld cmp loop lods mov pop sub jl and and fistl aam cmp mov out mov insl push adc xchg xchg mov fdivr pop sub xorb jns outsl cmp insb cwtl mov rorl jbe sbb push jmp adc xor xchg xor mov or (bad) mov add and hlt push inc (bad) sub pop cmpsb add js mov cmpb push sbb push jno add dec jle dec test xchg sahf test out lcall jmp pop add push or inc stos sbb rolb in xchg push loope jecxz cmp aaa ja xchg jne or in xor push stos in jge lahf js add (bad) mov daa add and mov mov add jbe mov sbb popf mov xchg shll cs mov add mov add pop daa sti dec loop xchg fiaddl jmp lahf mov add or add repnz mov ljmp push les or sub cmp fucom test ret xor inc pop dec nop mov xchg inc test dec push adc inc or add jo mov pop fisttpl shlb add test or fist add push mov and and mov pop xor mov add xor adc dec int3 push imul scas add mov or or mov cmpb insb add mov push add negb add adc pop lret mov pop popa pop sbb dec and inc ljmp outsb inc mov push mov mov mov add or stc mov or cmp fcom mov add mov out inc repnz push dec lret loop pop cmc or rol pop add mov mov pop in add pop fnsave es lret and add adc lea or dec out fs xchg hlt pop sbb mov cmp push add mov cmp cmpsl lea enter xor testl lds mov ret ficom loopne mov dec cmp (bad) icebp outsb push inc (bad) arpl add sbb jle push test push js add sbb ss pop lds add xor add add xchg mov mov mov les iret repnz imul mov jns mov sarl cs pop jno pop andl add daa push aas cmpsb in add jns sbb imul iret sub add (bad) mov lock sbb jae pop inc jno pop rcrl or (bad) sahf arpl inc shr insb scas add pusha in cmp xchg popa or pop je add in test in ret out clc or sbb fcoml add adc bnd pop cs pop addr16 jb into xchg jl (bad) mov xor jmp mov jp int3 cmp iret lock repnz lahf add jb das lods ret push out or or sub add ljmp and (bad) sbb jo insl test add lcall add pop (bad) add mov xchg push xor jg xchg out stos push int3 pop movsb loop push inc pop cld push inc mov cwtl sub add push mov adc mov jecxz fldenv add sarl (bad) jb push dec mov rorl sahf or xlat xchg pop stos (bad) mov imul aam xchg idiv or add movsb out (bad) mov loopne mov dec pop add andl lds hlt add outsl mov mov xlat cmovg and adcb fild xchg inc and bound add mov aam jp lret (bad) mov sahf int jle pusha scas cmpl (bad) roll or aam mov (bad) imul jno add fs mov shlb pop mov xor fmull enter cltd jmp in mov dec xchg mov subb pop stos in fadds lods movsl (bad) cmpsb xor aad mov xor pop mov daa jle add dec sbb or ret cs add icebp xchg fwait loope xor (bad) pop mov mov enter in (bad) adc xor and cld sti aad cwtl test mov push fild jmp test fimull repnz lcall mov dec cwtl sbb or (bad) cmp add jg jl xchg es outsb popf loope or stc push push add jle cld test pushf repnz test or adc pop dec (bad) cmp cmp pop push int push jae adc pop add iret jecxz xchg adc jnp add in je jae lret std jno add or arpl pop sbb aas add add (bad) xor outsb enter cmp cmp int3 stos fwait movb mov mov cmp (bad) cmpsb enter popf sbb lock inc cltd xchg fsubrl xor addr16 jmp xchg ss fcomps xlat jbe adc cmpsl mov mov nop xor add sbb fnop roll mov (bad) xchg add movsl adc (bad) out inc cmp scas gs hlt pop and add dec jge xchg mov lcall es mov cli icebp add or lods ja cmp push and push jb (bad) int3 loopne mov inc add cwtl and cmp pop imul cmp dec shr jg sub sub ret and icebp add aam mov inc cmp jl add inc ret pop insb add aad and pop xchg stc xor subb add xor hlt shr enter add dec mov jl add cs xor cmp sahf add inc (bad) fmuls ja call and stos cmp cmpl ja push sbb shrb pop repnz cmp clc fcmove cwtl (bad) mov cmp cmp add hlt mov and fadds add sub add stos je stos or dec xor xchg cli sub or push lods pop repnz and and scas es xchg inc into shrb add sbb in mov dec das sub adc add sarb cmc int3 push xchg (bad) stos inc fimull push (bad) jmp ds lock fistpll add iret je push cli add lods push pop add or mov out loopne sub and add xchg jne add into jb or sub or in cmp push sub loope jno inc das sti add or sub lahf push lods scas and push push cmc adcb push add add push mov and aam cmp jl mulb xchg enter jl or push lret add sub cmp fbstp inc aam mov add pop (bad) fistpl jmp fild out les cmp jae add xor add pop mov xchg ss pusha rcrb sub insl popa or add sub add push mov mov push push (bad) and sub mov jb in ljmp fsubs adcb dec xor xor pusha or and ds mov pushf addl cld dec or lahf faddl lea ja add inc xor pop sahf fiaddl mov outsb addr16 xor mov adc test xor sar (bad) lock xchg pusha and repz sub add cmpsb inc mov mov cmp shufps jge lea in dec xorl movsl sar out enter js push mov (bad) daa push xchg add xor add das sbb rclb push sbb in fwait ja add shrb outsb mov sbb dec hlt pop in adc (bad) inc rol pusha xchg pushw test lahf lret repz xchg and loope stos clc jns add lods mov pop mov incb jnp cli stos add in rorb pop sti push push sub add mov outsb insl or add mov into dec daa test rorb roll and or pusha push arpl test mov sbb cmp enter dec sbb dec or add fnstcw add jp ret clc mov cmp je jbe cmp jmp scas mov lcall mov xor and sbb jl add xlat pop fwait (bad) outsb pusha ss mov lock push cmpb in jne add ljmp addl mov or jle lahf int3 mov insl pop std adc add into mov lods jl or stc repz xchg mov push fadds out jne test mov in and inc adc insl pop or repnz mov add xchg inc cld push pop sbb lods in or (bad) out jge sub sub mov dec rcll insb push divl push pushf lret add addr16 push add xchg add (bad) jmp lret orb mov sub movsl and sub roll adc pusha sbb fisubrl in insb test push sbb jnp inc int sbb add sahf or cltd push (bad) adc nop lods pusha pop repnz in add (bad) xor (bad) mul dec ds lahf cmp divl adc dec or insb push push dec repnz cs mov pop push or pop testb add add mov sarl or int add dec sbb in cmp test pop dec push and or lahf mov shlb adc jmp daa inc pop shld push lock rcrb int3 add outsl or and imul adc nop adc mov hlt pushf lods xor fiaddl std dec ljmp inc xchg add sbb xchg loopne xorl fs xor mov cs mov dec add lock mov loopne add scas add loop lcall orb jbe (bad) aam test outsl ds inc (bad) fcompl add dec (bad) lock pop sbb fcompl lcall jle push adc mov sahf rorl in push sbb cmp add push ds pusha iret negl and stos xor sahf rolb dec adc (bad) cli and xchg pop aad adc pop subl insb cmpsl push xor and jb loopne leave jne sbb fcomps jle push nop test ret dec and mov pop out sbb jecxz test mov sub or add popf aaa add fwait dec cmp int3 test cwtl dec std pop pop pop mov insb (bad) clc mov fcomps fildl fwait mov pop xor cmp into lds add mov add dec cmpsb mov dec addb fdivs mov aam enter mov test push jge adc or verw rorl cli or fs pop inc loop mov cltd cld add (bad) dec pop outsl je call lock xchg and aad xor add lds pushf addr16 lahf jp or adcb sub xchg xrelease test (bad) aam idivl sub push dec rcr add shll sbb nop add pusha cmp xor inc repz rorl lahf add jecxz add cmp mov jle add das jbe add jnp mov push call push push cmp stos mov lret mov repnz daa icebp (bad) xor push xor jecxz cld jg add mov adc mov dec sbb popl jo stos mov pop push loop lahf add cmpsb sbb pop jne rolb xchg (bad) mov xor mov (bad) jne ljmp sti cmp and mov xor mov push mov or fidivr xor je inc movl and add pop add or movsb pop cmp rcrl cmp js mov sub add xchg inc xchg movl cmp pop rolb or mov pusha fldcw rcrb in add push push repnz xor mov xchg fwait je xor scas mov add add aam dec add mov mov pop sub mov pop or mov sbb rolb add adcb mov pushf cmp add sbb mov mov or jo fiaddl inc mov mov (bad) push mov inc cld or addb ss xchg jo das fdivrl lds xor bound jge xor inc push fcoml xchg push into add clc xor nop push adc fisubr pop cmp or add in icebp add mov xchg pop sldt aaa mov pop or add pop xchg dec add dec mov push and fnop popa dec cltd and sbb add (bad) pop (bad) daa or mov pop mov add jp or jnp aad sub jg jno inc or lods inc stc test jge add mov mov mov ds sub add (bad) sbb add adc sbb xlat mov fsubl add push scas and cmp xchg push cmc shl add imul push nop (bad) ja lods fadd cld add add add cmc jmp push add lea dec rcl xor add xchg xor adc test mov pop movsl xchg dec mov mov sbb lret sub daa xor lods mov ret add xchg adc dec add dec movsb lock xor xchg (bad) dec pop and repnz mov ljmp xor sub mov add pop scas or mov out add or jae xlat rclb push push icebp (bad) sbb fs adc out sti adc mov dec xor sbb cmp ja rcll icebp mov or cwtl or pop mov inc cmp scas add insl dec jne mov dec add test jns ds add jge inc xor inc sub inc cmp jnp cmp mull gs mov lcall add out mov gs pop aad std mov jae add lea (bad) je add les push scas pushf xor jp sbb pop dec sbb mov and pop mov push add inc pop inc xchg sbb jecxz mov out bound (bad) mov cmpsl sub mov ficomp leave add mov les ja loopne sarb add cltd cmp jns loopne jl addr16 popf das mov lret add test lds mov mov jg add mov enter lock push jmp jnp inc dec shrb pusha push rolb (bad) and lret iret jnp lock mov add sub cmp cmp aad add inc fmul add xchg sbb fidivrl nop aam sbb cmp lods mov mov mov fdivrs mov sub addr16 loop xor push es cmc xchg dec and loop jg inc add imul lcall dec arpl xchg jbe cmc lcall add mov popf mov or daa loop add hlt add jge aaa push idivl push shufps insb mov xor dec mov or lret mov add mov or stc xchg and adc jo fsub add pop data16 push or mov les testb pusha std pusha rcll in inc push xor lods lahf mov mov inc cmp add in adcb add cmp lock add jp jmp xchg je mov std lods jmp or loopne rolb dec ret movl std fwait mov add jne pop adc mov push adc mov lea jp mov (bad) loopne shl dec add divb vpaddd sbb inc es call and (bad) dec push arpl add pop jmp psrad xor xor mov xor pop (bad) aas lahf mov and sbb add lcall xchg inc repz scas cmp in inc int push insl clc jge or ret xor mov push cli pop cmp mov sbb (bad) hlt add movl xorl push add dec xor ljmp dec pop out pushf jnp rcr enter pop add xor pop shr and dec bound xor arpl and sub or dec leave jo in and mov dec push pop add or fnstsw push inc stos push sbb push lcall sbb adc cmp add ja test pop je cmp fwait dec push cmp cmpsl sub sarl mov out add and add mov inc stc cmp pop push mov and das fwait loopne or cmp nop push orl and inc subb mov lcall inc into test sub mov gs add in rcrl xchg adc (bad) jne jg fwait push addb loope and idivb nop imulb je mov loope fsubr rcrb mov cmp and sarb sti std clc and mov sub xchg cli sub je call mov lock adc jb sbb add dec leave dec sahf mov xor lret cmp repz add lods add scas push adc aad cmp add (bad) pop add movsb adc out das mov clc mov dec add xlat pop addl decb jbe (bad) add xor ljmp pusha repz in es adc mov jg xor sbb mov and aaa cmpsb and rorb lret loopne loopne ret sbb add sub add pop andb inc hlt push pop pop lods sbb cmp leave mov sbb test add add sub and mov add or mov cmp push outsl lods push push outsb push (bad) mov add inc gs add out xchg cs sbb les pop pop bound mov ffreep mov pop in int3 rcl xchg push jns mov ja add outsb lock xchg dec hlt flds test or cmp and mov fdivrs add sarb in or loope,pt adc mov fimul cmpb lcall negl loope imul cmp xchg shrb add stos adc cmp xor rolb loope enter lds shlb xchg push xchg add jnp mov sbb xchg mov jge popa xchg aam jp sbb inc stos sahf cs (bad) lret mov adcl pushf add adc add icebp bound add movsl jp xor mov sub inc and add jbe mov repz mov add in outsb mov mov inc jne mov xchg add enter leave stos imul in pusha and int3 (bad) jg adc es sti scas adc add mull sarb add fstpt imul xor add aam test lahf pop add cmp xor ret outsb jno dec or mov adc push aad add cmp and add push (bad) pop inc movsl into mov arpl fs add imul int3 fnop jle test aam stos add icebp lods pusha shr nop mov and test mov adc sbb dec jge inc cmp cmp mov pop mov sub in xchg inc pop adc push out bound test je pop xchg pop pop (bad) xor add push out test jae adc jmp adc pusha adc dec add or pop out mov roll add xchg (bad) or loope xor push inc rol sbb pop repnz xor adc stos mov add mov fbld add pusha adc mov (bad) into fildll ds or pusha out std xor and adc sbb outsl addr16 add jge dec cli std rolb sub add sbb push aaa add push lock cltd xlat add cwtl cmp neg mov outsl adcb or cwtl fs rolb xchg jmp pop aaa add jle inc mov ror jae jge mov xchg add add pusha popf ror sbb or sbbl ds shlb add lahf or (bad) psubsw add (bad) scas mov sbb or mov std inc or dec push addps jge pushf xor add dec fistl andb add inc cmpsl jo xchg push scas dec (bad) or pop aas stos das lods and outsl inc jp rclb jno add es aas cmp jae stos or adc jo mov (bad) lret adc clc les pop sti rcrb or add call push xor and sbb inc xlat sbb mov push jg mov sbb push xchg cmp inc cmpsl repnz push pop ljmp dec adc aaa push (bad) cli add clc fisttpl cmc add repnz jae ret dec jmp in inc adc or add inc sahf mov xchg add jl adc push leave xor add push mov adc ds icebp push mov nop popa xlat pop repnz xchg movsb mov jbe push inc mov pop dec sub add loope add sbb add xchg sbb add push fdivs mov repnz adc mov sbb stos inc testl cli je mov mov insb out push add aad jnp fsubs iret sub stc xchg movsb xlat add jae mov loopne movups addb pop or jb jecxz or add aam add and sbb inc or (bad) lock dec test shrb aam and inc xchg mov out mov inc add out gs int3 mov or outsb push mov fadd int3 lcall push js,pn inc push add cmpsl insb xchg push adc cmp in cmp sahf ret bound cmp cmp cmp daa fxtract mov pusha mov ja xchg sub mov insb xchg sbb mov andl cmp sahf lods xchg insl loopne out add sub sar mov in shll out add rol pop xor lea sbb es push and fwait or shrb popa mov adc daa dec push inc push adc dec adc (bad) jno fsts mov fisttpll push adc movb pop jg testb hlt and push push in pop sbb xchg sbb add mov cmpsb cli rol pop test or out aad movsb adc testb cmp add cli fidiv pop mov scas (bad) add in add jae pcmpgtb (bad) arpl sar out js xor popa cmpsl data16 arpl lock dec outsl mov inc int3 cmp nop add jae sbb cmp xchg add rolb enter mov popa je cltd dec mov dec mov sub aaa adc and push add cs fwait and jmp into add jo xor stos jnp cmp stc pop fsubrs rcll aam mov test add (bad) stc sbb pop push or and hlt add add xchg cmp xlat xchg mov icebp (bad) popf pop aaa add pop add and in jle sub outsl or add cmp lods xchg gs pop outsl sub (bad) pop data16 mov mov mov mov cmc adc roll sbb push pop rorb lock dec cmc sub cmp (bad) pusha test add dec insl adc jno pop or mov dec push push dec jl and mov rcl dec out mov add in test push leave bound push or inc and inc cwtl or in add int3 ss jne outsl lods sub push out icebp aas mov test mov cmp cmp ljmp nop pop and pusha cmp es jns mov sarb and cli cmpl leave add inc add pop fnstenv xor sub inc fdivrs add loopne add cmp sub test outsb xor sbbb test fmul xchg mov dec add pop dec in cmp cwtl lea push and js pop xlat mov in andb lods add add xor xchg and cmpsl push ret inc ds rcrl push xor rclb jp repz mov ljmp add pop scas sbb into and fs add mov xchg add out cmpsb pusha jg jl add or mov add xor mov fs (bad) mov test push xor add lcall xchg pop mov cmpsb sbb pop add fucom insl stos (bad) push jge pop aas inc push rcrb lock xor xor and cmp scas add adc fstpt dec mov and xchg push xor in mov jmp cmp loopne add push leave jno or test in aad outsl add mov adc and dec sti jo pop repz xchg (bad) lods or push inc arpl sbb add hlt jns dec (bad) out cmp add and fcmovb or mov add fmulp xlat pusha and outsl jl dec add push movsb sbb shll rcrb clc pusha jno outsb lock aad out pop or add or cmpsb adc jae shrl stos imul mov hlt lcall add adc mov popa lods push stos mov les add jb add jo adc scas and mov scas add imul pop add cmp fildl mov cmp jo mov lahf dec data16 or add lret (bad) mov xchg loopne nop inc pop lds xchg adc mov std mov cmp push add push into adc pop lods rorb test jae add sahf jne dec repz notl or and xlat sahf mov add mov scas add mov jo cmpsb ja dec add test inc adcb mov out adc loopne rcrb aaa imul jne add shrb nop testb lahf pop lock les (bad) iret cs add and dec leavew inc add mov adc aas es mov dec xchg add mov push cmp loop push stc add sbb mov and adc jge clc mov dec mov mov ss loope add push cmp jmp add xchg push lock ret cmpl movsl dec cmpsl xchg in aam int3 (bad) outsl sbb xchg push fnstenv mov dec jb cld xchg stos cld push out test adc dec mov call cmc or mov pop call mov add (bad) jae add adc sbb lods pop out add divl add aaa adc ja mov imul add push push js mov test or xor clc ret rolb sbb push pop pop lcall fdivrs ja add xchg popf lret std adc insl push pop xchg lock add mov mov hlt sahf pop cmp inc pop rolb subb repz xor mov or and aam scas lock sbb mov lock add pop mov daa add push fmull cmp mov test mov or inc call in add push (bad) hlt rol loopne addr16 cli inc adc in xchg adc or sbb sbb fsubp fnsave call addr16 xchg jnp fs popa xchg mov cmpsb sub fldl push aas push sbbl add cmpsl ret jns inc adc pop popf mov inc pop mov out ja add push dec enter imul stos leave (bad) aaa pop or xchg daa xorl enter mov stos out push cmpl dec out add xchg rol test jo loopne mov jae push fadds loopne nop (bad) outsl (bad) jo add add xlat jecxz (bad) cmp dec add movsbl pop outsl cmp pusha cmpsl or pop add push out pushf nop mov pop cvtdq2ps pusha dec fistp inc inc or add sbb or rcrb lods add push dec xchg aaa sub inc cs jne jl psubsw jecxz and fistp or inc out lea push rcrl orb add inc push dec je popf sbb inc xchg leave cs jmp xchg dec pop (bad) add repnz dec aam (bad) icebp push sub push pushl mov in xchg or clc fisttpll jb stos mov push add rcrb pop push fildll jecxz fcomps mov shl in mov jg andb sbb loopne jl add add sub add cmp lock inc lret add scas ret sub mov mov shrb pop ss add and ud2 cld dec das add mov sub add cmp mov outsb mov add pop test xchg add sub add sub pop sub (bad) in pop adc call lahf cld test add (bad) xlat xor mov cmp push jne xor xchg or mov cmpsb add inc enter lock in lret movb mov test mov out xchg sbb repz call shrl dec or pop fidiv ret push sub or loopne out js fadds sub mov xchg fdivrl adc or mov xchg iret movsb addl xchg mov clc stos add not lea push pusha or push daa cmp xor add push out pop gs push lds dec push jecxz frstor aad in and jnp ljmp cmp or hlt rclb add inc jno imul sbb aad sub sbb out stos jle cmc xorb and lret mov xchg push mov xor add sbb je stos push add dec pop jecxz dec bound jge xchg pop popf cmp lret pop fdivr mov jle cld les sbb sub inc push and adc mov and and loop fisub pusha pop mov adc aad cmp lahf xor enter sub mov add out and or subl inc lock add in rcrb movsb shlb sub es std mov je jnp add fwait pusha loop subl lds add cmpsl rcl or in fadds das popa aaa sbb inc jnp (bad) lea mov out or (bad) adc inc dec mov xor cmpsl gs cwtl and add xchg int clc cmp xchg pop sahf arpl (bad) in rorb xor xchg call and add enter jns add add popa jo in jecxz int3 mov lret idivb lock adc loop ror pop repnz mov movb cmc jmp inc add mov test sbb mov jbe dec pop fcmovnu loop scas pusha mov mov dec push dec test outsb xchg add lcall jb dec or bound adc or add arpl test subb mov pop leave dec add adc mov les sarb outsb cmpsl inc movsl sbb inc xor pop popa or addr16 sbb pop call or lahf adc mov lock add mov pop add les ret cmp inc fsubs cmp popf pop jge aaa ja fldl and in sahf xor jne adc add pop pop icebp add xchg repz popa xor cwtl mov popf sbb rol cs loop add fist mov push push add (bad) cmp mov pushl mov repnz push fwait dec adc vmovntps fldenv in sbb mov punpckhdq and sbbl sub movsb add dec mov jmp sub fdivrp rolb mov arpl ret fcom movsl adc sub pop cli in cld cmpb xchg sbb add outsb inc fidiv dec push gs jmp push sub xor push cwtl pop jno scas and pushf sbb leave mov push add or jl push xchg add fsub test sub jg hlt push lock sbb jnp cwtl add mov jle add aam xchg push cmp clc int sub sub add (bad) in js aas sbb mov mov jle add add fstpl imul das inc pusha jne fninit imul push add pop aas xchg push clc in add pusha adc push (bad) mov adcb call aaa xor dec add sbb xchg in dec es xchg pop gs call outsb (bad) fldl mov add mov rclb rcll mov popf shr and sub xor iret loopne cld cmp imul add mov pop sub sti clc fimul xor pop jmp int stc addl mov xchg lods lods shl sbb ljmp push add (bad) mov jns seto or fcmovnb adc loop cmp push pop add mov idiv add add xor mov jg push pop mov dec cmp test roll xchg nop les cltd clc out add je pop sarb push add lds fdivrs leave add pop rorb pop mov inc mov pop add push push in cli (bad) je cwtl jo jmp in pop jb add repnz mov cmpsb add push sub mov mov inc add out rolb cmp jle (bad) cmp mov mov push and add dec mov jno lock aam and jb fiaddl (bad) lods subb sub cmpsb loope jecxz loop mov mov cmp enter loopne jae lods inc sbb fcmove sbb jns add (bad) clc add fildl ret stos mov mov adc cmp sub mov bound mov mov mov xchg clc add mov push push shlb gs add dec std pop add or sarb testb mov roll or mov scas lahf jl add (bad) mov add or push aad mov fdivrl jecxz mov (bad) and int sbb cld sub adc sbb test data16 mov aad inc popa sti inc in xor lea xor mov add fnstcw jno sbb add pop push add shrl movsb out add stos adc clc mov sub movsl in xor sahf add mov arpl or addr16 es mov mov push daa jb jns movsb xchg lds add mov push cmp clc shl leave add inc push dec sbb orl xchg push enter outsl gs (bad) out adc int3 jo pop jmp add or add lods pop mov mov das add sbbb pop (bad) repnz (bad) fs jne adc icebp popa jno jb push pop dec push lcall fwait scas add add lahf push out imul jecxz out fildl lret inc jle mov mov iret mov cli xchg inc push cltd sub add adc test and out pop mov push int3 mov or out movsb (bad) add dec out sub mov shlb sbb repnz lahf cld icebp adc add push dec stos lcall xor pop stos inc roll xor fwait lahf ljmp xor cltd add movsb rolb mov push (bad) mov pop testl xchg outsl in xchg or clc lds jp xor ret in add add scas adc add mov jo into imul bound xlat outsl add iret mov cmpsb lret clc push pop (bad) cld mov and add mov sub insl jmp dec jge (bad) pop rorb outsb lcall add int3 pop cs sbb push inc fsubrs xchg addb lcall roll xchg adc stc inc aas aas mov adc imul lea pop add xor pop iret pusha cmp push insl sbb (bad) cmp add mov pop js sub push add mov and mov mov inc sbb lret pop add jae aas lret pop push mov jae push notl add adc popa sub cmc std loopne or mov and sub daa sahf add sub test cwtl ret jl add sub inc xchg rolb into stc cmp xchg add cwtl lds adc xor cmp add adc cltd lcall sbb pop mov out mov ss out pop test push icebp push ficompl in mov outsl cld mov sbb call aas cmpb sub jno mov mov sub sbb ja insl roll aam mov xchg out pop add imul fiaddl packsswb push sub cwtl popl mov sub ds faddl jbe fwait mov pop adc ljmp or movsb pop cmpb or mov int adc fs add data16 ss inc mov xor sbb xor clc sbb lods push cmp or push cmp insb inc call jns jp bound sbb cmp repz dec inc pop mov (bad) lock add movl inc and and (bad) mov jnp nop in mov int3 pop roll sub out clc in mov fwait add mov xor jmp stos int sub dec pop shl mov xor outsb incl shr fcomp popa (bad) mov inc sub inc pop pop shrb dec sbb xchg inc add call pop aas pop lods mov sarb xor jo arpl or pop aas mov pop cmp fcoms dec shrl xchg add xor cwtl or xchg cmp loopne (bad) aad stos pop loop xlat sbb jo lret fidiv mov in xchg enter inc ljmp dec adc mov push mul or cmp pushf cmpsb ljmp cmp andb enter or add sub mov push pop and loopne cmp (bad) jo movsl in jnp jp add add or xor push clc xchg pop sbb sbb inc and mov cs pop add and push fs sti scas xor imul mov cmp jg aas mov push bound (bad) adc add mov jnp add fnstcw lcall (bad) pop push add js rcrl adc xchg rolb push pop mov jno lret (bad) xchg mov je pop (bad) adc pop xor out push les lds push orb cmpsb inc add mov repz iret ret fwait cmp inc cmpb fldl jo push lods adc push fidivrl inc jmp sub push lds les or push popl cmp mov add xchg jnp test pop push adc mov mov sbb andl sub div call repnz das outsb xchg mov dec ror pop hlt ss add imul je insl and cwtl add jne xchg ljmp cli in fcomps out aam xor jmp loope movsb mov scas add jb cmpl icebp inc jecxz (bad) stc mov cmp jno add orl sub lea sahf xor mov jl xchg pop imul adc cs add cwtl inc push sub outsl fildll jnp fabs fldenv and sub jg add lcall add pop lret inc jbe gs (bad) fwait pop rcrb ret addr16 ljmp test adc xor sub nop lea std dec bound pop int3 fildll dec shl cmp lods iret pop repnz cmc xorl dec add add je push xor aas shlb pop sbb add cmp cmp test cmp bound (bad) pushf and (bad) sub out inc add js or add ja lcall mov jge add pop mov jg add adc jae pusha and add inc cmc or adc sub mov mov test mov pop push xor ljmp push insb jbe sub pop add adc les sub push lret xchg pop add out sbb hlt test inc add jecxz and cmp fld push lods outsb jae push jbe out pop inc mov mov add inc add xchg inc mov ljmp adc outsb inc pop (bad) aam fimull cmp jmp test jbe inc aam xor sub les and cs inc mov or mov cmpsl cmp andl mov aad jne dec std add (bad) dec and xchg ss out adc mov xchg push and clc and aas mov xor add iret out sub jns sub xchg sti test mov lods sub orb mov pop mov add mov cwtl sbb and fstl add pop push enter add cmpsl lock cmp push add lea test add sub push or or dec cmp std add adc xor inc movsl or mov cmp popf movl adc ret lea int xchg sbb add add jp gs sahf sbb xor jo icebp cld jg xor scas loope enter push faddp cld mov adc ljmp arpl into movsb add and in fiadd xchg and mov fwait data16 arpl dec add jne mov add stos pop test add add add loopne inc test add shrb test xorb mov pop aas imul inc mov inc add repz and fnsave add jbe jns xchg add sti loop dec adc add and xchg enter sbb xor inc shrl stos xor aam inc add fldl mov imul (bad) mov and (bad) cmpsb add imul add idivb insl push push sub rol in and cmpsl clc xor lds pushf xchg jb mov mov scas pop out inc fcomp cmc add cmp outsl (bad) js push call mov rolb dec data16 adc out lods jae fdivrl push xchg mov lock jne add pop push int jo cwtl push add mov fcomps cmp pop add push fstpl add inc inc jg or lret mov or icebp jo jne push push sub js psrad out dec cmp sbb xor icebp in sbbl sbb mov insl add (bad) mov pusha xchg inc add popf fdivrl loopne cwtl data16 inc mov fistpll add popa jne mov sub cs or leave aam nop add pand cltd xchg and add ds shrb push inc call repnz stos ret imul mov cmp sbb (bad) pop inc push sbb enter or add dec fidivl mov das xchg addr16 int3 mov ret out test lret pop adc push dec add or adc sti inc or mov mov add dec sar xlat in mov sub outsb fisubl mov imul pop dec xor scas pop shlb into das inc repnz xchg add mov add or add sbbb jecxz pop mov dec or insl (bad) hlt add mov mov enter je add insb cmpsl pop cmp lods mov add xor icebp adc fwait mov pop (bad) cmp mov in dec iret shrb imul mov dec mov int mov mov mov sbb adc nop js xchg add dec out push jae add imul jnp insb cmp clc mov pop stos mov mov ja dec out mov xor add mov sub mov pop repnz pop dec xchg out add (bad) and mov or cmpsb mov jnp xlat lret push jecxz mov insb xor jne cli or mov add or add push xchg push inc (bad) jecxz push add lods cmp mov and or cwtl hlt insb leave testb mov pop out in sub add fcoml imul adc out bound adc jnp mov jb push cmpsb add sbb or or fstpt sub and add addl add mov test in lock add sahf (bad) and sbb dec in add rcrl jne outsb pop fst in push loope repz xor jecxz xor sbb inc pop inc (bad) lret inc out mov addr16 push cwtl lds in push add xchg bnd add inc mov cmp leave loope pop lret clc loopne clc mov lods fistl orl and xchg adc outsl mov pop and mov pop out pop jbe gs add pop (bad) xor push jno add jl pop mov dec fsubrs stos sbb lahf and dec xor cltd into add flds ss pushf adc push out mov lcall jl push pop jo add nop add push cmp shr adc es xchg addb and xor (bad) push minps int shll mov (bad) mov sbb sarl rorb add push mov test mov and clc jl sub or in sbbl mov push addl jle inc mov mov in mov add sbbl add mov mov int clc mov or xor pop xchg jg add push aaa jnp xor xor mov xchg bnd add add jle xor xchg sbb jge or jge mov cmpsl cli insl rcrl inc push push cmp or movsl inc mov js fwait add enter xor pushf movsb scas sarl outsl rolb jae imul mov popf (bad) xlat decb xchg imul mov mov adc orb and xor lock aas (bad) or cmpsb getsec inc mov adc test repz pop repz lods inc mov movsl xor add sub mov int dec arpl scas jb push push inc pop xchg (bad) rolb mov jmp add (bad) add adc cmp into roll push ret lret popa aaa mov sub cmp add sub push je sbb sarb into and in out sar add hlt (bad) fcompl mov scas adc repnz (bad) pop fidiv (bad) or jg push shrb mov fiaddl add mov js aaa inc pop xchg push imul mov adc leave adc roll pusha mov hlt cld adcb inc inc cmp stos jg add sub dec aad nop adc jae mov cmp imul mov or sub lahf pop add test sub out pusha mov popa hlt cmp pop or and add xor repz mov insb xchg std and push sbb xchg jmp sti xor xchg pop ljmp mov dec and adc cmp add jg inc mov mov sbb push (bad) push jbe sbb add rcrb lods mov fnstenv sbb std pusha push clc jp jae inc adc ss mov jmp fcoms inc and mov jnp aad sbb add pushl cli movsl call adc test dec test mov jbe cmp add sub imul inc mov pop ja jno add mov mov mov add mov sbb add adc pop shrb (bad) xor leave mov dec jge test movsl pop mov add adc xor pushf pushf lods cwtl das inc imul (bad) dec inc fistl mov and cmp loop stc lea sub and pushf ds ret pand sbb cmp add xor cli outsb sbb add add mov xchg xchg mov nop mov add lods out jle fs pop lcall in mov pusha movsl jl add mov aas incb (bad) popa xchg pop mov ret addl sub mov dec ja sbb cmp push inc lds cs lcall mov fstps cmp adc xor jl mov je cmp lea add push sub scas mov icebp shr cmp ret cmpsl insb mov in rcrl out add inc sub stos pop subb (bad) add out xor jp and lods test mov pop insl push add push mov data16 stos test cmpsl sbb in imul add jno (bad) (bad) in add idivl push and call mov mov and into movsl aas stos js push push cmp loopne add inc pop lods mov sahf int loope cmp mov push cmc (bad) scas xchg jge cmp fldt mov mov adc (bad) lock dec cmp je scas cmp add inc xorl loope xchg (bad) jo out (bad) clc cwtl jno aam pushw ds xchg add inc imul out mov xchg pop push test push mov cmpsl jl add nop xchg xor push test sub mov call and ljmp pushf sahf or add push stc add xchg sbb aad adc jbe mov or rcrb adc leave or xchg push jae lods aad js and add mov fild sub push or stos je add xchg aad daa cmpsl testb cltd mov call add outsl push xchg jo aaa jbe rorl xchg rcrb daa fidivrl xor and lods mov mov pusha add push loopne and add (bad) ja repnz ret ficomp xchg adc xor xor add insb dec xor add push or daa (bad) adc jge fildll int xchg add xor add jne push xchg mov add (bad) je sbb popa (bad) adc inc pop mov adc sbb jle popf jne fstpl inc mov jp xor push add (bad) mov add adc ds hlt jmp and divl xor fsts mov xor hlt add imul into adc pop sarb add (bad) sub test adc inc fcomi cmp mov add int es rolb cmp xchg push mov dec lret dec or ss pusha stc pop and into sub inc pusha (bad) dec fadd fstps test aam push jle outsb add mov xchg xchg rolb push dec cmc sub mov jmp lods pop cltd add jp dec add cmp sub nop mov and push (bad) add hlt jbe or mov addl pop aad mov jnp mov inc push jg mov inc call clc (bad) test pop push in test movsb add xchg adc movsl leave mov mov add (bad) or outsb and lods inc movsl sarl sub add jg adc dec xlat mov enter push mov loope pop out or sbb das enter add mov not add stc push fwait add push and es add ret cld lret int3 ljmp ficomp dec push lods mov add push fsubs outsb gs sbb xchg push int (bad) cld lock jb enter cmp jp dec add pop add dec jecxz sbb or fdivl adc cld les imul xor add test jl stc fildl nop sub pop xchg dec movsl add repnz scas (bad) inc or or test add scas leave inc pushf mov pushw cwtl insb lahf dec add lret sub mov rolb fildll test (bad) daa cmp dec pop ret push and sub add movl pop pop ljmp xor sub pop out ja fstp enter (bad) sbb xchg ror repnz ret jno stos data16 xchg jns lcall call es xchg add xor dec rcrl shrb inc aas popf push (bad) outsw add shrl (bad) into adc push inc fisttp jo add mov subl cs aad dec je ficomp add test add cs lock sub scas and pop push lods mov call (bad) jno pop sbb popa ljmp add mov push mov xchg add jecxz mov repnz pop dec or addl sti les jle sbbb sbb (bad) (bad) ss cmpl pop into and repnz data16 xor in push mov and or push jle xchg adc add inc repz (bad) dec sbb pop jl add xchg or lahf cmpsl nop add mov mov out addl add ljmp push (bad) mov nop mov sbb sub sahf and movsb add xchg lret mov ret dec pop call into add dec sbb pop xchg insl stos xchg test jecxz fsubrs inc add push dec and xchg mov push adc add push ret ja pop add mov inc cmp inc neg add stc lret mov add mov inc outsb add lods out or or scas mov add mov cmpsb sbb adc ds in pop add mov loope sbb scas mov mov jae add and mov add or pushf inc fdivs add cmc jmp roll sub adc xchg add push faddl (bad) mov loopne or out dec dec inc in ljmp jg rdmsr adc das mov sub mov sub jo scas sub icebp cmc fldenv sbb jns push into add repnz xchg mull add mov push sarl das mov push push cwtl rorb add mov mov cmp or cmp dec mov iret xchg jle movb add insl call test enter and push out ds inc or test mov add mov nop imul loopne inc rorl xor lret insb push pop mov arpl repz adc insl sub push add outsb xchg daa add fcoms addb leave sbb mov push and pop cwtl icebp cmpsl fdivrl add test test gs push pusha repnz add pop in add into add in mov adc aas (bad) aaa cmp loop cs cmp sub movl push orb test and (bad) push adc in sbb shll psrlw pop out cmp in mov add mov stc loopne add pop mov inc test shrb fsqrt loopne fwait iret add inc icebp dec (bad) out (bad) inc adc cmp lret mov lcall jo mov sub push ret xchg push ret jbe cld mov sbbl pop cmp movl ret pop mov push push sbb jbe mov dec xor and subl stc mov jle in fimul stos add imul movsl stc sti push add in adc sbbb ret adc mov aas cmp pop inc lods fistl push xchg xor outsl ss mov mov xor fisubl test out jle fadds lcall lea add in mov jg inc xor sub sbb rcrb cmp jge xchg cmp add mov add sar xchg imul ja inc pop xor jae jne dec xlat les mov ss xchg sub mov add in outsb aad pop and push call popf and ret mulb in push add outsl sbbb add dec sbb das cmp mov into add cltd aas xor fnstsw mull pop hlt insl loopne pusha cmpsb mov add daa bound (bad) mov lods jne xor pushf sbb mov dec mov xor mov lret loopne imul mov push xor out pop loope xchg ret arpl mov and add or testb scas dec cld adcb mov cmp aas std mov mov (bad) je out add icebp in push mov inc mov push mov xorl adc sbb mov push es jo imul adc or aad cmp mov add repnz mov imul dec add inc insb mov cmp pusha ds pop xchg add mov sub (bad) cmc sub jmp mov inc inc mov iret sub js mov sysret imul pop jmp or dec scas xchg pop dec in inc aas adc sub mov es fcmovnu lret cltd jmp out cmpl sbb add xchg ret lock jge pop or mov bound cs xor repnz cmp mov js add pop popa mov lock lods stc rcl loopne add inc adc or add push mov adc (bad) and add mov (bad) hlt and mov movsl mov in add inc test push xor popf loope xlat inc movsl mov fwait jbe or pushf inc lahf or inc (bad) mov stos fsubl push mov inc add out jp fsubr pusha sbb test cmp or mov pop mull imul sbb adc (bad) repnz rorl imul push rorl (bad) mov ds mov ret add jge imul mov add jns clc jbe add or adc mov inc test add jl aad xchg xor (bad) out hlt jbe inc in ljmp arpl mov xchg mov jge push or (bad) ljmp ret mul idivb add mov add fadd pop or pop mov loopne jo push scas addl aas out push pop mov shrb rcrl inc jecxz ret jl or jp rcll cmp sub fistl add inc sub or sahf sbb ja sub subl jns cmpsb xchg inc lock add leave add in push outsl sahf jecxz add adc pop (bad) sub dec out dec jge or fsub nop aad sahf cmp inc xorl jle ja addb mov inc add mov push mov in sahf jmp subb add sarl push cmpsb dec cld cmpsl xchg pop mov inc scas mov sbbb adc and call jmp jmp mov sbb addl jno xchg or je test pusha out sub dec xchg push paddw and add inc cmp adc pop add out orl sbb mov add cmc pop stos inc in flds data16 push jge dec out add inc push test addr16 pusha and test add imul sbb test scas addr16 xchg push fmuls sbb mov mov cld push dec test add sub adc pop mov xchg xorps daa enter popa inc adc addl cmp loop sbbb inc push dec xchg lcall into adc jb cmpsl add push ja pop add test inc iret inc rcll mov insl mov cmp xchg pusha rorb leave jmp pop lock xor jb pop inc mov sub cmp dec and add mov aad xor lds les imul int xor inc outsl ljmp jo dec add pop ret enter outsb add fadds nop (bad) push jle scas daa sbb mov mov fstpl jg loop dec xor dec aas mov jmp push aam jbe push or cs enter or adc lock xor adc jns cwtl cmp gs adc fwait dec rolb dec xorl pop arpl repnz gs orb lods sti add fcomps (bad) xlat sbb fmul push lods and scas add jp mov mov bound jo hlt add dec test xchg jae rorb jg pop mov cld and rcrl out and sub inc and fnsave xchg xchg bound jns rolb xor out fidivl add mov out mov shrl dec mov add xor mov cmp inc xlat sbb test adc cmp adcb aad aas lock pop xor adc iret aaa lods and int3 adc pusha dec out dec fstps add lds push test mov rolb out push mov sbb dec mov aam or lret enter add inc jnp jns es add movsl addr16 fisubr mov and pop lds pop mov add xor push xchg push jmp jmp nop sub sbb daa pmulhw pop mov inc int3 sub sub nop add dec repnz push int ficoml add (bad) xchg data16 pusha adc adc dec jl fdivs xor nop jbe inc push mov mov mov push xor mov stos pusha nop repnz mov adc xchg or adc sbb mov pushf in inc mov pusha mov stos adc jo jge push add xorb sbb sub add cld jbe in add daa pop int cmp jo jecxz sbb inc call add imul in dec rorl add add lcall mov cs sub add (bad) shlb (bad) mov add fadds (bad) daa clc push rolb sbb xlat aad mov lahf js pop ja add sbb mov add adc aaa loop sbb dec xchg fstps rcrb repz call and orl mov inc add or pop (bad) and sti add das loopne or jo orb out pop out add pop sub fidivrl mov push out bound mov or jb pop jno jl cmp add jp adc xorb or nop stos sub push add cld stos gs (bad) clc rclb push es inc fdivl adc (bad) add call (bad) mov lret xchg mov sbb das icebp push add ret jnp xchg and loope es ds arpl pop aam dec lods push repnz push ficoml bound sub adc aaa sbb push sti addb add jge or insl enter push inc add daa and das or mov add stc sbb int push add movsb outsb mov incb add cli add enter rorb inc and add mov jns js dec pop inc add call dec add ret xchg adc popf out out add in inc repnz lret inc pusha call mov add out in lret add or scas jb hlt addl add lods push add mov cs pop mov adc xor out shl ljmp mov xchg jecxz lret addb sbb cmc into add pop movsb jmp xchg adc xor mov add dec push dec and leave je cld fcoml mov jge push dec pop (bad) cmpl or dec mov add adc sub add (bad) nop mov add push stos dec jg xchg rolb xchg popf in pusha shlb fs fnsaves dec mov inc sarl daa test mov or add (bad) sub cld inc inc xorb sbb add jl inc jle orb jnp mov add add lock movsl add mov jno fs repnz xorl xor add aas xlat dec cmpsb mov out fidivrl pop add pop lods mov cld add adc fildll inc jb add jo push (bad) test xlat test cmp cmp pop sarl std mov dec movsl jne fisubr adc adc popa xchg add xlat aas jl add pop adcl shll in jnp add or or push loopne sbb loopne popf push andl push inc movsb lea inc insb xchg push fstpl nop std and add jecxz mov jo out fiadd (bad) out or pop jne mov add js pop addl adc aas (bad) hlt ja sub dec sahf inc mov sbb in jp cmpsl mov add lock dec and dec fcoms xchg dec mov insb sbb sbb add and js inc sbb dec lock repz push add or and dec cltd sbb leave insb nop adc imul or imul gs cmc lret aad and or cmp roll rcll jbe rcl pop dec push mov hlt cmp mov ljmp add sbb shl add icebp (bad) mov add xor fstpt pop sbb pusha aad loope push adc and cmpsl icebp adc and stos or add cltd mov movsl dec sub push add cld jg popf and adc into cmpsb sub movl dec sbb popa icebp push mov ret test or or mov push js adc push insb mov xor das popa or add fimull lea out je dec ds dec inc cmp sbb adc or fldcw mov xorl lds aas dec fildl sbb outsl adc iret in iret call adc inc xor roll es xchg pushw or and push pop rcrl out inc xor mov lods xchg cmp sbb mov (bad) adc add enter xor mov xchg ret jl push mov gs andl mov inc cmc xchg fsubrl xlat mov repz push adc mov mov or outsl dec mov push dec mov jno ffree pushf add mov mov add call and pop add push mov ljmp cmpsl cs mov jbe (bad) shrl inc add es jne cwtl inc add push lret lock and mov (bad) jno ret xor (bad) idiv sbb scas jne push stc outsb (bad) pushf scas add inc cld mov add mov aam scas jb jne test into xor repnz push mov pop jp sbb sbb add leave or addr16 call jno cli sbb xor test pop sbb mov movsl test sub scas leave stos add (bad) clc test js fwait pop push bound test pop lahf ror push pop fildll push scas cmpsl lock imul xor cld cwtl add xchg (bad) push ret (bad) icebp sub add pushf pop cmc (bad) jle sbb lds jne mov scas sbb add mov cwtl xchg mov pop stos and add mov xor rcrb xchg (bad) scas in add imul add xchg mov mov adc clc dec or add adc repnz add add hlt adc inc push scas sbb add cs aas aad mul loop push push movsl xor dec loopne add (bad) call and xor jo mov arpl sbb loop imul lahf pop (bad) (bad) sub xor lds shrl add enter push or test adc and inc pusha jno stos cmp test add xchg inc sbb add add repnz adc jge add fs test mov jp call add (bad) and popf inc pop jno stos ffree xor sahf cwtl iret pop jns mov dec movsb mov xor icebp mov push add inc adc es and mov xor test jne sub mov movsb lock (bad) and xor inc add movntq sbb aas aaa (bad) rcll cli pushf xchg inc sbbl mov add in (bad) add jno scas imul add jo cmp or inc push hlt cwtl incl dec pop (bad) loop test jo add sbb and adc adc (bad) xchg or test stos (bad) adc sub add lock jmp fucom cmp fisttpl notl mov xor mov inc sbb lcall les cmp leave cltd out add mov rorb inc mov iret push lods rolb push cwtl mov xchg stos sbb scas jl (bad) xor inc lods add inc fcmovu (bad) sbbb test inc test mov add fist or and mov inc pop daa dec inc (bad) insb mov add fstpt outsb and mov add xchg or push shlb (bad) (bad) sbb addr16 enter shll inc pop xor adc xor ret dec stos add pop xchg adc scas and (bad) adc or and repz xchg nop mov jnp hlt addr16 pop lahf sbb aam sub jnp lcall jg mov ret insb or leave mov add test pop push adc imul popf int xchg cmp push and cs fwait in add adc mov dec and sub sbb lods loopne mov mov cs mov in inc mov add (bad) dec jne jns jo pop nop pusha or (bad) and and es loop orb mulb cwtl hlt mov (bad) mov inc cmpsl mov add xchg push sbb rolb jne in xor mov cmp add jnp int3 xchg bound sub in jae add pop adc sub ds jl and cmp cwtl testb adc scas cwtl adc inc addb push and mov stc jo,pn xor jge mov test (bad) (bad) adc test and add jae or loope add inc leave ret xor and and and sbb and mov sbb loop add cld or iret sbb fist mov or cmp fwait xor lock (bad) sbb inc scas jae imul jg call mov enter mov and (bad) pop inc xchg mov adc scas cs xchg out jo sub xor lock (bad) mov sbb ds sarl inc or push sbb test add nop sbb pop add mov cltd or fwait out mov loop popa push push push hlt andb in pop xchg xchg cmc pop int in outsl adc cmp push cmp orl test adc or imul in inc fsubl pop mov fwait add adc add push ficompl lds sahf mov jnp add leave arpl push icebp cld add imul cld movsl add lret inc jno mov test mov lcall inc xchg test pop dec js ja,pn insb cmp cli fld std rcl aam out jb add sub inc rorb adcb popf dec test roll out fild mov pop icebp add mov xchg pop or in fcomps add (bad) mov xor jbe adc mov sub sahf adcl mov fstpl inc (bad) dec mov cmp (bad) xor addr16 mov out iret mov add xor bnd aam jg adc das emms cmp push adc or push jle test push icebp mov add and pop adc lock mov push hlt add insb loop icebp cmp ficompl int movmskps jno sahf adc lcall add jecxz push fnstsw adc aam lretw mov adcl fcompl inc add add pushf es dec cmp mov push mov xchg (bad) sub pop jno add rol scas push into lea clc fs loope aam add cmp cmp addr16 (bad) js mov dec pop sub cmp dec push sbb add in pop aam jg and xorl sbb xchg push dec pop jmp cmp xor lret mov fsubs jns cwtl push inc movsb subl push add and cwtl push xor and cmp lods jne push jnp xchg mov (bad) xchg mov pusha push inc xchg jmp mov mov jl add hlt xor rcrb adc jae jecxz adc nop or adc jg lods inc or addps inc addr16 add (bad) xchg sub add mov aam fdivs mov mov icebp and push xor loopne or dec xchg call xchg cmpsb (bad) enter fxch and addb shlb hlt lock idivl pop and std js adc sbb lock pop add mov mov loope fistpl (bad) in rcl clc in add or (bad) cld and jne pop fs cmpsl clc cmp mov mov mov (bad) push adc inc push xchg push mov jo mov mov mov mov inc lret pushf sbb out int3 aam xor cld test xor push cmp faddl pop les pop loope jbe sbb lret orb pop inc adc add lahf pop or lock (bad) out shlb add insb or mov xor cmc enter pusha push and stos mov add sub jbe pop dec in add cli add iret lock rolb fdiv nop lock in stos les popa mov inc sub add in adc pop mov cmpsb and repz fsubs mov inc push and stos add out inc cmpsl rorb push or inc jb xorb cmp adc out (bad) jg adc push lcall fsubrl icebp call push cmp repnz pop xor xchg clc or add call push addr16 jb lock int3 or (bad) jecxz cwtl or inc clc cltd ret dec push mov lcall add sti mov sbb test xor cwtl fs add (bad) popf hlt mov adc pop mov out xchg push adc lea add fcoml fildl fsubs pop cmp mov add xchg pop rclb push mov shr dec addl or push mov scas inc sbb xor out in cmpsb add mov xor cmpsl lock inc push and pop or pop or adc dec adc fsub dec icebp call cmp lcall cmpsb cwtl inc test push push stos mov pop or and mov sti dec jae and or inc cmp in xchg sub xor jnp mov mov into mov pop loope mov mov int3 lcall push or es mov dec add and js (bad) stos mov add lock aaa mov sbbb in lods loopne add ret test pushf mov addr16 pop ret mov scas test jne cmpsl pop jno emms int3 pop jae ret sub add test adc dec aam and ss mov mov add add mov pop sub js push dec in enter pop sbb in sbb dec add sbb xchg cmp xor test shld ja or add (bad) mov bound sbb fbstp leave scas adcb (bad) pop mov nop cmp add in cwtl mov rclb sbb scas jbe push fistpl sbb fs aad push wrmsr jnp out and push rclb or xchg pop add jnp and adc push push mov adc push add mov sub add push add es and lea and pop popf fldl add imul add nop rcrl cmp xor scas inc movsb sbb notl or jnp cmp dec outsb add add ret outsl cmpsl cmp fnstcw mov (bad) xor mov add aad inc jle mov mov sub or add inc push adc hlt insb iret dec ret repz sbb add mov jo std cwtl add jp (bad) cmp out add jns xchg push mov and rcrl mov pop cmp jns jge (bad) adc jl pop add or loope push or popf mov cwtl sbb lods ljmp add pushf or cmp dec push movsb add add sub js add and xor lods ja inc sbb jmp dec stos sub lahf push jp fildl sbb call jns jle dec add xchg pop imulb mov lcall xor pop les jns sbb jb add mov mov add incl xor outsl xlat dec hlt xorl mov dec sub test ret out daa push add dec xchg scas js clc sti es add push mov add or test mov xchg movsb add pop xor stos or inc adc movsl mov inc sbb loope or idivl push dec add jle push nop std and push les int3 pop add mov adc (bad) cltd cmpb imul or xchg xor fisubr data16 mov pushf test out add mov or sbb leave push inc je pop ss sub sarb js cmp or inc jnp xchg add adc imul or push lods pop add int xchg roll fs add pop shrb jecxz pop daa aad scas test cmp add and dec and out xor add enter sub jb sbb xor js (bad) test add xchg jle add fdivs bound loop sub sbb add jp stos pop call dec hlt pop pop addr16 inc sbbb aam add inc vmovsd adc cwtl and add std (bad) cmp aas add in jle cld scas add lods push loopne rcrl add pop add push mov sahf std sbb adc xor and sub mov lret imull pop roll hlt adc jb test push add std jnp and loope sub lods fsubs push imul mov pop mov sbb push into cmp repnz mov jmp push or into outsb int or xorl add test lods inc (bad) jo push add das sbb mov lds movsl ds nop loope stc int mov add out stos dec fisttpll xchg lea mov or add test rolb cmp les and mov popa aaa xchg out (bad) aad pop inc adc cmp orb jne clc add dec sbb jo mov adc jp adc fwait add adc pop pop popf hlt cmp mov nop jle cli pushf sub loope pop mov shll movsb inc or (bad) aad hlt mov lret or add jo push adc pusha loop xchg in pop cmp jnp fcoml ret cltd rolb or dec in nop sub shlb mov nop inc add out and dec or sub mov pop ljmp add xchg xchg add lahf dec aas add add xchg add cmp jle add ja add insb xlat xchg rolb push xchg pushf test hlt sub pop pop sbbl cld mov xor in mov out mov pop pop popf flds sub mov sub imul leave mov jo (bad) jnp add cwtl inc inc lea enter jb push add aad push test outsl add test sbb jecxz movsb out addr16 pop sti (bad) pop fdivr add push inc sub movsb loopne mov in mov daa orb repnz adc mov gs inc xor test add mov xor and add lret out xchg add cs push and sub mov scas jbe add loopne into outsb clc insl sub mov add loop cmp mov sbb stos add pop mov or rcrl (bad) fmuls mov push add pop and add mov adc orl lods add add pop les jns push jae mov stos cli and loopne jne nop mov sbb lahf cmc sti add mov popa sub mov stos es pusha dec cmpsl loopne cli sub repz or das or jo roll adc add pop std in cmp hlt inc dec repnz push xchg jg incl pop cmp adc pop fwait add out fsubr enter push mov (bad) icebp pop xchg cmp sub or mov scas add or add aam arpl rolb xorl dec adc movsb lods add and mov les jmp jge jae scas sbb aam add (bad) inc stc dec ss xchg pop pushf data16 jmp cmp mov fistp add xchg push nop push xchg sbb js dec pop rolb test inc sbb and sbb ljmp out fsubs add addl incb jmp sub jbe lock adc ljmp dec and rolb xchg mov pop test sub push sbb mov dec sub sbb lock sahf add mov lock test (bad) mov mov add dec add inc repnz pop xor mov loopne std cmpsb jg sbb jne adc loop adc movsl or push outsl pusha outsb dec mov and jle sbb xchg add xchg orl (bad) cmovb popa mov add push cmp popf add mov xor push or mov mov (bad) mov pop and jle das ret pop push scas inc sub clc shlb call lods repnz daa push mov adcb add mov push sbb push fwait iret lds mov inc hlt xchg call cwtl mov cld lret mov inc mov insb les (bad) mov xlat inc pop sti pop push dec icebp sbb sete lret mov cmp cmc pusha add or aas adc add js addr16 inc and movsb sub mov decb xor jg test cwtl inc in aaa lock pushf (bad) (bad) lds hlt cmp sti cli pusha cmp nop data16 cs or jnp ret cmpsl shrl inc and insl or out sbb add mov call dec xor pop xchg subb sub pop nop imul popf mov cwtl add out fistl push xor (bad) je repnz out sar xchg fucom call xchg pcmpgtw or cs icebp xchg mov adc sbb pusha cmpsb dec insb lods push mov add cmp aam add sbb add movsl cwtl clc or gs push inc lds test repz sti sbb or rcrl sub jne rsqrtps add mov aad fcoml dec dec sbb fisubrl sbb xor ss (bad) mov out repnz aad scas and mov add push mov xchg mov mov add iret dec lods sbb fcomps test mov and add je ljmp dec cmp push sub test in jle popa out pop push adc and mov repnz mov cli push (bad) jmp jnp ds in add pop das push cmp pop or adc rcll jbe out bound dec test inc or out xchg adc imul mov inc mov add cwtl add jmp push adc cmpsb call mov sbb adc and jno mov mov or ljmp call icebp mov dec rep add xlat or cmpb ljmp adc sub push cltd in cli sub or mov nop mov pop mov mov xchg addb ss negb and or jns inc xor sub fmull fwait adc imul rolb mov mul xchg icebp pop jo dec nop dec jo inc add scas nop cld push add mov adc sar mov and xchg mov rclb adc add pop sbb adc test sub and push scas and pop lock test xor and push out dec outsl and lock and popf mov or pop dec hlt lcall sbb push cld or mov repz cltd pop and inc xor and add movsb xlat test and xchg add in js cmpsl push test call adc xor les jo orl dec or loopne mov fimul sub lods bound sbb and mov mov inc ret push push sub out inc xchg pop addr16 push xchg add mov mov xchg sbbb popa push loop cwtl xchg cltd iret inc cmc add frndint inc push inc or push push insl (bad) cmovo pushf xor loope inc or adc test inc (bad) or mov jle mov mov pusha pop es pop js jae push xor push pusha inc cmp lahf adc mov shr in mov (bad) sti jae shr fdivs adc sbb jge nop movsb dec and add push inc and adc je inc xchg and nop (bad) xor xchg add test insl scas and xlat cwtl movsb sub and xchg cld out jp and ja jnp jae fcoms sbb mov arpl faddl or or jae scas sahf rclb inc pop lcall add lock and pusha mov les popf mov adc test mov dec xchg and push and sahf pushf and lcall dec jo ds add dec pop xor mov inc hlt and (bad) roll insb xor cld (bad) rolb mov pop push add sbb mov out add ret sub cmc pop sbb pop fstp jo es and inc ds push pop out xchg jl mov pushl gs inc cmpb insb es mov pop sub or sbb adc mov insl lods mov add xchg fadds push nop ret insb mov andb jbe jnp pushf lock pop add add sbb fwait in xchg push cmp inc push ret in dec mov lea aad int xlat cmpsl cmp jno (bad) sbb stc cmp push cwtl xchg test orl pop repnz add and fwait nop les jl xchg mov xchg inc add ret cltd cld pop cld sbb in je sbb into (bad) idivl add scas rcll out nop add adc push pop cld pushf pushf sbb xchg fldcw push mov cmpb pusha mov les je addr16 call test cld insb in inc sbb out je js sahf pop outsl xchg inc jne test loopne fisub push dec cmp xchg sbb sahf aaa mov pop push (bad) push add jne inc inc hlt cmp xor sub mov jl fild ljmp or int3 mov pop sub and pop dec pop pushw and (bad) into inc mov cmp inc loopne pop stos loop and insb sbb cmpb js add daa rolb xor stc (bad) movsb inc andb xor sti add test aad inc fs or mov sub add xor sub mov mov xor mov stc push mov movsb lcall mov add xor mov test jno enter roll call sahf jo rcrb adc cmc (bad) adcl out mov or adc mov sub out bound and cmp add loope scas dec pop das xchg clc xor sahf test cli xchg call pop xchg loopne aas xor pop sub loopne jno mov adc lcall cltd sbb adc push add popa push loope jae arpl out sub shrl popa out add xlat mov adc and pop xor test mov fcomps mov push jns jp add lea idiv add out test shll fwait sub cwtl lcall adcb and mov push or jns or jbe add enter dec jns outsl dec xor (bad) adc sbb add add dec xchg or pop addb dec dec adc call mov or outsb addr16 and mov xor nop or call or xor mov nop add xorb cwtl in fcomp jo divb add push push cmp inc push lods adcb inc cmp movsb scas push push mov and movsl xor pop jno out inc les pop sbb add sbb in cltd data16 (bad) sbb mov fisub hlt xchg int push nop xchg dec push nop xor rcrb std lods pop and stc push pop loope mov dec sahf test fisubrl inc js popf testb xor add mov sbb xor jns outsl mov xchg call dec and mov dec or fdivr dec or pop adc js test cltd inc jl in call call pusha push test xor mov cwtl rol enter xchg call add aaa fiadd mov pushf pusha pusha stc cwtl adc xor mov adc mov or add (bad) jae movsl inc inc or (bad) loop add xchg mov inc sahf rorb sbb enter push lods ja add fisttpll int3 insb lods xor pop xchg stos inc outsl (bad) mov call fs addl sarb dec dec pop xchg cli mov nop cwtl xchg movsl subl and mov add inc enter inc push adc xor or jno cltd xor out push lock pop loop cs sahf loopne push xor sti adc sub nop sbb dec hlt cwtl (bad) dec sbb and inc fdiv mov loope lock js and sbb cmp jg test mov or xorb xchg dec mov sub lods sub dec adc xchg nop add (bad) inc add or cs pusha sub call mov add mov mov mov push mov pop add stos xchg orb insb add je rorl and nop repz call xchg adc add inc jno push nop jb mov aas pop cwtl or jl test addr16 insb mov sub mov les add mov int fcoml xor fs or adcl loope sub js sti scas ds inc and aas cmpsl pop out sbb ja add aas add ficomp cwtl imul pop in mov adc out mov (bad) mov push sub nop out pop mov inc and add mov shrl out pusha decb push cs sbb dec repz mov cwtl sub mov repz mov jl stc xorb js xor adc int3 dec dec subps loope mov sub pop pop cwtl js adc xor sub pop movsb and out sbb pop and xor lret test insb sub jbe sahf cmp nop mov add sti bound pop call xor jnp test mov test repnz mov rclb repz dec loopne dec add js mov sub and adc outsb xor xchg movsb or jo nop fcoms dec lahf mov pop add cwtl xchg cmp push add insb js mov test mov add pop push dec in loopne inc add test xor test ror cwtl fs fbld mov faddl pop dec sub out mov and (bad) and cli mov pop pop mov enter add jo adc add hlt xchg inc rclb fcmovnb sbb adc fwait mov loop pop and test xchg loop call dec test (bad) and xchg mov mov add (bad) testb xchg or mov scas fadd add mov dec jle lea add adc rolb jo addr16 pop fs lods nop xor and and test dec ja adc (bad) mov lea and add xlat aaa (bad) pop pop addl lahf inc test add int adc add mov add mov push jle sbb push sub pop add out cld and mov push sub mov mul pop xchg mov leave outsl adc sbb ficoml bound jmp mov roll jns int and adc lods mov add testb dec pop cvttps2pi js add cmpb ja fdivl data16 sub repz jl add xor add cwtl adc sbb dec mov scas dec sbb xor push adc add cwtl xchg jmp sti inc fsts repnz clc adc pop or or or add scas mov add cmp sbb adc mov pop xchg xchg (bad) sbb in or loop dec inc xchg nop mov leave sbb add call pushf xor mov movsb sbb add scas pop mov adc dec mov xchg mov jg mov adc xor stc adc add cmp sbb mov push xorb and sub inc loop adc push addr16 clc nop cs pop cltd add fdivr mov aaa dec push cmp out push mov mov xor cmp mov movsb sahf cmpsl ror add insl xor ljmp xorb adc adc jg rol sti cli repz mov mov inc cmp add pop sarl rolb add inc imul es in not adcb cmc xor (bad) adc (bad) repz test (bad) inc movsl pop adc outsl rcrb insl sub adc push lock pusha pop cmc lcall xchg repz mov fdivr sbb (bad) add pop jb sub inc mov movsb in mov fnsave mov mov mov stc add out push lahf inc xor sahf fcomp cli bound inc cmp fild dec push xchg lods jae gs or mov adc das dec add add dec mov fldl punpcklbw lahf fisttp push sbb push out push add mov adc (bad) mov call cmp add outsl daa lahf sti pop fdiv fcoml add mov sbb orb adc in push lods ljmp mov cs pop push add and lea mov add jbe lods pusha dec das (bad) add lahf adc xchg pop enter xor push adc jne sbb dec push inc cli mov add sub je add ljmp ret pop pushf xlat mov daa pusha inc inc mov pop movsb das cmp push enter add mov iret pop data16 mov push and sbb ficompl aas and scas cmp inc xchg mov or jae xor adc sub pusha je xchg (bad) inc lock push mov movmskps cmp add fwait inc sub adc cmpb pop aam pusha add and push sarb or xchg arpl adc ficomp dec xchg push sti inc adc add push addr16 repz jecxz mov pop dec xor sub dec xchg loopne add mov aas and dec int3 add rclb daa add call add xchg xorb sub sub shll es or imul es add aaa add aad inc or dec and mov and rcr jl add lret or scas add xchg add xor cmp dec xchg add xchg fcmovnb add jg repz aas fs add xchg add nop dec and add mov test (bad) cld xor sbb add xchg cltd mov xchg shlb aam mov rolb pop lcall mov add in stos push jle pop hlt add pop sbb inc test xchg cmp adcb (bad) movsb leave lcall add out adc adc xchg sbb xor sbb xor xor add leave sub aam sti adc or mov mov push aam adc cmp mov das pop add push push idivb jmp (bad) int3 (bad) pusha loopne add mov jne or inc (bad) xor cwtl pop jnp or out in outsb add cld (bad) pcmpeqd lahf imul or push inc add xchg call loop add lret or mov fldenv mov jle push sbb add ss js push frstor les xchg add push insl imul pop push (bad) xor push rorb push cmp mov pop bound loopne xchg pop inc cmpsl mov push xor xchg addr16 in dec shrb sub sub xchg mov pop test push sub mov dec pop pop add test fistl sbb stc xor inc test test add lret flds cs int3 gs inc jp add icebp stos mov add sbb ss dec sub dec cld mov adc pop add xor inc cmpsb jp pop sub aaa ds sub (bad) mov insl jg subb das je mov add sub mov inc popf aam cmp add fs xchg icebp int3 inc push jg add sbb repnz dec lahf add loop cmpb add je xor insl inc mov xlat add cmc xchg addb mov clc jg inc jae call std int dec mov add pusha sub addb push rcrb add clc int enter add imul xchg push push add ds xor pop sub inc sbb adc mov mov outsb nop in add and negl inc sub mov addr16 popf stos push add jb mov and add xchg in fwait dec negb lock sbb les in xor and pop roll nop push xchg es mov pop jecxz dec out stc jg pusha hlt add jbe or xor nop shlb lcall jecxz xor mov lods sub mov sarl enter add jecxz jmp mov mov cltd adc pop add int call adc push mov pop faddl inc leave or mov and shll addl adc loopne add popf sbb js mov loop sbb (bad) xchg inc test in add cmpsl and (bad) pop clc mov into js lcall add stos dec sub xchg bound mov or sbb aad add mov pushf lret adc mov ret jne cld int3 xchg push movsb sbb add les cmp pusha es popa lock mov jecxz dec and lds cmp pop and add inc mulb sbb in or mov mov movsb ror xlat in or xor mov mov push or sti push xchg add lods fldl aad add (bad) mov or inc add lret les ds ror cmpsl andb outsb push xor xchg scas flds stc xor bnd inc inc movsl dec xor sub sub push bound sbb jo jne outsb push js pusha lds je int les add out sub loope lret xor jp loop add in cltd and mov jae pop fs xor cmpsl pop in data16 clc mov mov mov fidivr or andl gs push movsb pop lods pop shlb dec call add cmc add out in sub rorl add rdtsc or mov lods adc aaa add les mov nop lds add sti add sub mov mov orl sarb dec addb jnp dec push sarb in pop push daa fadds or outsl les fsubrl outsb add or inc out mov pop sbbl out test cmc std push insb in push pop ror daa cmpb (bad) or mov sub aas add sbb mov jb cltd and loop add and cmp jbe sahf jle add push adc xchg (bad) rdpmc fiadd adc mov incb js lods iret das sbb xchg daa pop add inc imul insl pop add fcmovb call adcb imul or decb orl insl mov scas rol cmp test jp insl scas stos inc jno lahf dec add mov push and mov clc mov imul mov mov or and (bad) cli adc pusha xchg mov cmpsl push cltd sub mov mov (bad) sub pop pusha xor or (bad) and scas les and xchg addr16 xchg sbb push cmp sti add lea mov inc jb adcl outsb cwtl and push (bad) adc mov lds mov adc dec lret add sbb dec mov aam add test jnp inc in add (bad) out call jb add jo leave and jbe aas bound fwait xchg add fsts ret sub punpcklwd nop scas or pop inc clc pop jl sbb fisubrl in sub jnp pop mov or data16 xchg clc pop push pop out pop and cli lea call in jmp and dec adc pop pushf sub sub mov insl rcl add call subl stos adcb ret inc ljmp cmpb rcrb and hlt xchg divb or pushf mov fdiv push fstp pop sbb mov pop enter adc pop movsb mov push pop mov sub adc clc jl int3 mov icebp cmpsb stos push movsl dec repnz hlt decl aam rcrb xor data16 xor cmp daa cwtl stos leave adc (bad) ret push pop mov sbb nop mov xchg mov add movsb sbb out sub out push sub les add cmp adc ds cmp test mov sub add shrb pop jmp and rcll inc nop cwtl xor jnp add xchg xlat cmpsl jne insl pop and add leave call add cld xor lods xor ret push pushf rcr xor or repnz adc push rclb add inc add fdivrl sbb inc dec pop or cmp add dec xor ljmp rolb mov ret in or or xchg (bad) dec add das push les mov push or pushf adc or (bad) fbstp clc lods pusha push mov xlat mov xor aas xchg clc es adc in add add daa dec hlt inc xchg add repnz scas fwait jmp mov add adc out pop xor xchg movsb clc add pop mov shl xor (bad) xor leave push add sbb push je xchg cmp inc out add les lret aad in adc push cmp pop ds iret rclb in icebp aas fstpt dec enter stos (bad) sbb mov lods lock or frstor adc cmc ds aas inc add pavgb inc (bad) leave mov (bad) mulb jl stc test cli sub or loop adc fsubrs adc inc js mov xor and out loop inc sbb adc popf pop cs enter push push push pushf lcall popa add xchg mov add aam fsubl cmp fldenv add testl (bad) mov lea and adc pop cmpsl popa pop adc aam jo inc push add call fxch cmp testb add mov mov hlt jae lcall scas out ret add pusha jl dec sbb sbb lret or les add lods in pushl mov pushf mov push sbb jmp ds pushf jp add or push sahf lds popa fstl inc inc jmp inc sub neg sub es dec (bad) push pop pop pushf popa or loopne cmp ljmp jno out jp cli dec outsb enter jo and faddl ds test pop jns pop xor les incl and cli repz loopne daa mov js cmp mov fild pop inc or adc sub les inc inc mov add (bad) or or shrb popf cmp xchg pushf xor insb or xchg inc push fs inc mov add testb std cltd insb divps push loopne lahf cltd sbb adc mov pusha jmp addb loop out mov mov add dec and mov mov into je pop cmpxchg or fcoml dec mov cld push add ss out shrb js mov xor mov lock lahf sbb shrb out pop sub xor push imulb and aaa sbb test lock sub mov lahf fsubl inc add and bound mov xor test inc data16 xchg and cmp xor jl addps add cmp push in mov xchg inc xor jmp xchg in sbb xor mov and cmp in add loopne insl sub loopne dec jno xchg sbb xor or adc sbb or rcrb (bad) fist adc pop test mov jl cltd sub push cmp cmpsb jns dec add cli mov jno sub (bad) mov sub pop cld cmp add inc push push mov lcall icebp pop aam fcomps ds scas lret mov cmp mov xor les call adc inc adc and xchg xor jne push cmp adc dec mov in mov sbb fchs movsb cwtl insl out pusha push push and fadds pushf loopne loope xor xchg sbb cld push lods popf lret sub mov addb enter inc add cmp pushf lea pop jl fidivrl mov pushf pop inc inc fnstcw push and jp mov xchg xor dec jno cmpb xor push nop push adc xchg enter or movsl sub dec loopne adc mov push adc push mov ljmp cmp add inc pop mov sbb or or ljmp sub hlt lea pop sarb adc sbb pop jbe fistl stos movsl jmp and dec adc xchg or and data16 add je loopne add inc (bad) mov pop push mov adc out mov dec inc pop dec mov xchg xorb les adc stc adc mov hlt clc or sbb sub pop pop pop lock ss test lods lock add push sbb xor cmp hlt inc mov adc movl nop aaa (bad) xor ror out clc mov popl sbb mov add inc or inc and sub aam call sahf sbb mov mov sbbb in fnsave or fistp fsubs push mov sub pop dec mov ljmp (bad) aad lods mov xchg add (bad) loopne xor push pushf xchg mov adc faddl pushf cltd mov sub add lret fmuls xchg dec push add xchg mov push and xchg sbb cmp add bound sbb or add xchg rcll or bound lods pop cwtl cmp clc fsts or stos inc mov and pusha fisubrl inc clc lods pusha inc sbb xchg add stc cld jl pushl adc sub and repnz int dec js subl dec ret sub dec or and pop pop subb int dec cmp lea addr16 pop jno cwtl sub (bad) cmp pusha adcb add or clc push xor dec or std xor cli pop mov add jmp jae inc pop add push movsl xor mov add dec les xchg xchg and and or negb repz mov jbe and mov insb gs cmp lods or xor xchg mov ret cmp fisub or push push int3 in push or (bad) push dec sbb cmp outsb and xchg mov pushf idivl push and sub mov and sub nop popf adc and or (bad) fnstcw sub (bad) cwtl in add hlt test dec das fldcw pop sahf (bad) or and pop movsb lds inc enter roll pushf lods cmp aad lock inc mov adc mov mov dec movd arpl fsts mov pop cmp les insl pop sbb out (bad) cmp fld pop std cmc hlt adc mov mov mov fdivl xor jle add dec mov addb test enter mov imul add ljmp sets popf test mov mov into fsub dec test or sbb mov jmp orl mov ds enter or and fs jo cmpsl mov cmp das add sub mov pop mov es push rol in mov test sbb add outsb and add (bad) aaa imul fs fsubrs or adc insb movsl pop pop nop mov add lahf mov pop mov andb adc pop adc lds gs in dec xorps dec mov xorb push jecxz test inc fadds cmp scas iret lret mov push mov xor push imul pushf inc pop mov lock push test sysenter add sub (bad) cli out or inc jle lahf lcall dec test dec fstpl test adc sub cmp test rolb push iret enter adc xchg sub pusha add adc (bad) sub adc add lds out mov cmp add aas or (bad) loope pop mov dec stos add push pop jge xchg js aaa test in ds nop dec dec rolb xor xor sbb (bad) mov stos sarl add jl inc les rcrl scas add xor inc add xor push sbbb xchg adc or sbb je loop add xlat pop xchg fs je push xor push lds or push fadds push push sbb imul lods in lods loopne cmp push fcompl mov daa sub xlat pop xor cmp xchg add notb push adc js les pop cmp fcos or fs adc add je pusha add mov cmp data16 pop xchg xor jb mov xor xor jl and jnp xor mov js mov push inc dec mov push popf xor dec repz imul push les pop jb cmp add adc clc lds leave mov (bad) mov (bad) out inc sub fidivrl ret in cmp xor mov mov pop and je sub mov clc loope mov add sbb xorb pop popa mull inc add push mov adc icebp (bad) fild movsl les mov cli daa adc loopne aam add or pusha push mov jmp add xorl add mov incb dec ja dec cwtl outsb mov imul mov add cltd add mov sbb gs mov adcl lods add outsl pop sub orb rorb rcll imulb out out adc rorl mov or (bad) lock lds pop adc mov pusha cmp and aas bound adc int les xchg fiadd xchg data16 sbb scas test repz loope add push int3 outsb fmull inc inc xchg (bad) leave add ret sub add jns sarb int3 add xlat and xchg dec (bad) adc jp mov loopne setnp inc subl (bad) mov mov add inc adc cmp lock add call andl lret pushf imul arpl fsubrs hlt loop pop sbbl ret dec stc adc fs aam outsb add ss or pusha cltd or fidivl xor xor cmpsb outsl add and adc (bad) xchg push cmp add sbb add shlb adc (bad) push and popf in mov daa lcall dec dec mov loopne xor shlb jbe (bad) movb cmp adc push inc jae mov dec cli mov mov inc stos ljmp mov negl push mov mov add in add add or and or mov loop add dec int3 lods out adc add or lods add cmp jae rcll add icebp inc shr lods outsb add mov or add sbb sub and insl rolb nop (bad) in add rcl sbb sti lock lods push add clc or std sub clc in xlat inc lea test or pop ds xor iret push scas mov push push mov (bad) dec sub in xor fadds cwtl sahf jl (bad) sbb xchg add dec imul out add xchg scas into jns ret xor mov xchg xchg sbb pop movsl add dec sbb leave cltd xor fistp add sub xchg or push imul or aam das outsb popa push cmpb add je mov jae test lds push cmpsl push js xor pop xchg mov test in push jmp xor xchg lcall std xor cmp sbb or push aaa fldcw incl scas dec mov or movsl and push inc or and fadds adc push jge decb or push fdivrl mov mov add mov inc add in stc (bad) sub mov call shl out loopne sub push mov xlat stos add jnp fdivl mov inc test xlat andb mov cmp adc popa xor add popf and (bad) mov mov dec fwait mov sti add and outsl (bad) sbb aad cs add add stos mov outsb pop xchg nop mov jle addb mov sub adc mov mov rol sbb and add xchg cmp lret sub scas push pop adc loope add jle (bad) enter dec cwtl mov cld fadds jne adc scas push jno es add xchg and mov sbb sbb enter cmp hlt inc push jbe mov in cmpb add mov pmullw into sub mov fldt inc adc and dec js,pt aam (bad) xor (bad) rcrl mov add xchg mov setb cltd sub add in jo add xlat dec mov xor das dec cmp add out push in stos add and cmp aas incl xorl add les add push shr cld loope out jns add dec add fsubrl js mov ds orb add add mov (bad) into test call test ss popa mov mov sbb enter xchg js psubd mov push (bad) add insl or sub dec adc lock in clc add inc dec (bad) xor divl add inc push xchg or sti cwtl add push inc mull mov (bad) inc aaa adcb ret dec scas ja add xchg sub add sub test lock cmp push jnp add and jle push addl sti pop add sarl pop mov in lock cmp jge inc jne inc sti subl sub cmpsl jo xor sbb push cwtl cs cmpsb dec add xor xchg pop sub and daa dec outsb add fild mov push rcl adc in add inc and mov jg mov (bad) cmp in push dec dec call loopne sbb lahf shl sbb add aaa ljmp lret pcmpgtd and cmp adc jo cmp mov push mov pop sbbb rcrb popa sbb lods jmp int mov ror inc (bad) je jecxz dec lods icebp outsl xchg cmpsl cwtl test push fnsave movsl rclb sub sti inc cmc subb call shrb test add out pushf arpl mov push push jmp lcall ljmp movsb jne cmp imul mov hlt dec push add or iret jp dec push fnstsw roll pop cmp mov mov mov inc cmp shl decl add mov push bound addr16 inc dec repnz and push or mov out call push fidiv mov nop push mov cwtl xchg xor xchg in add aam (bad) outsl fcoml mov sub fnstenv sbb or stc lock pop jecxz es fsubrs sub mov in add and adc inc je rol (bad) and fld cmp sub push dec or popf mov lock dec lahf jae btc js add cmp test mov je adc push clc leave int3 repnz clc push mov cmp xor add xchg clc push mov push sub xchg pop xorl mov and or add inc pop or sbb push pusha add mov cmp lret push pushf mov add fstpl lcall movsb add xor cwtl stos push dec sub ret jge aaa jmp mov clc and aas or adc sbb (bad) mov dec scas pop add in pop test leave (bad) cli imul hlt or jmp mov add xchg xchg xchg cmp push scas add dec lret jnp sbb lds mov cmp bound lret rclb xor jg add ds outsb add push mov dec adc xchg icebp fsubs dec jl orb jg xor mov icebp aas pop (bad) and (bad) mov add mov popl (bad) xor xor lea add cmpsb mov stc add sti add mov mov loopne push push add rolb add cwtl sub lret push jnp inc inc faddl addl adcl shlb inc push pusha (bad) add inc call adc in (bad) jbe xchg iret push or inc cmc and outsl mov cmp sqrtps bnd jne and cmpsl cli clc add sti inc (bad) loopne add xchg pop add mov sti into mov add dec lret loope js sbb sbb pop cmp push lret or sbb jns mov add rep pshufw (bad) loopne add inc (bad) stc mov rolb movl add or pusha mov in leave movsb push xchg add adc popa in movsb fidivrl pusha inc bound add mov mov pop xor (bad) xor ss cwtl xchg add repz push or lock add cmp js les addl inc or push imulb popl scas lahf andb sub insl icebp dec (bad) lock pop sub nop inc add lods daa enter mov mov push dec adc sub jae inc jecxz cmpl iret xor (bad) lods dec add ffreep mov xchg adc repnz inc in fidiv sahf popa aas pop pop add fstpt push mov out add mov mov adc push int3 in sub icebp or push inc hlt sbb mov into mov pushf mov pop not add mov push push ret jnp popf adc xor cmp orb xchg ja dec push int iret push push mov out repz nop jl cmp (bad) xlat ds and xchg ljmp add cmp test sub inc scas or lahf dec mov cmp lcall (bad) jmp ljmp xor (bad) shrb sub xchg dec sub es xor add data16 jle movsb or lret add adc stos faddl js or add sub jnp mov repnz inc add push mov xlat jp add mov and xor clc lret or cmp rcrb clc out add sub xchg dec add push loope call mov sub add jno test mov (bad) call cmpsb pop push js sbb out add aas aad hlt xchg lock outsl les xchg arpl scas or in negl adc decb inc enter pusha add fsub (bad) mov cmp xchg sarl cs cmpsb lods add mov jnp adc mov jl cwtl cmpxchg pop inc lods cmp push or aam add lahf in lods pop cmp movsb jbe aad or stos mov jge inc add out xor jg jmp gs add mov enter sbb aas loope inc enter sub ret xchg movsl rorb lahf paddb test (bad) cmp divl add nop push out inc or mov xchg cmc push add aaa rolb mov fistpll add push xchg xor add dec loopne or dec cmp rolb mov add pop repnz jmp mov or or inc adc incl pop lea sbb clc test ljmp cmp sbb sub aaa pop dec mov cs or lods push out add rcll pushf add jmp or push inc sub aas ljmp inc fs mov xchg xor mov mov push jae add mov repz stos cmpl push jge cmp mov pop sbb jmp push jg inc jmp mov cltd hlt add add add mov (bad) int3 mov popa mov test daa pop mov int3 push and out les loop ret xchg jp add pop mov add scas jo add pushf lods jmp mov xor add rol xchg mov das mov sbb outsl xor jmp addr16 jnp pop (bad) mov cli add les pop mov jp les and rorl loopne mov jo mov add insl adc add repz cwtl xor fist (bad) lret push and mov add pop insb and adc cs add sbb add (bad) mov mov adc cmp fsts add rcrl outsb popa ret jmp sub add in mov sub mov add out mov mov mov data16 shrb repnz cmp jns mov pop aad and push daa popa addr16 rol repz mov pop (bad) loope push push push or xor adc sub or sbb mov pop imul pop push shll inc and push cs dec add fsub add push stos add loope les mov push loopne fisttpll mov add mov loop ja push lret cli lret xor push loop nop add (bad) mov adc outsl mov inc in (bad) in add add pop les xor (bad) hlt cmp inc add jno add cmp ss psubusw add and pusha shlb sub pop jecxz add jbe aaa sahf sub incb and subb sbb adc jne pop xor dec xor mov push addr16 mov add dec ret add lahf and rorb jmp dec lds out add and or in and sub icebp adc ficompl lcall mov pusha sti lahf fdivrp mov nop xor stc push adc adc add int3 add add push jmp loope add inc lcall xor stc mov hlt pop sbb in nop enter cli jo add lods push inc int fistpll sbb subb jle add mov ret add and fistl test mov xor jp inc sub addb mov loop inc mov mov push or jle cmp clc stos add rcll nop xor bound subb (bad) in aaa cmp mov les addr16 test scas add mov inc inc cli fucomi imul add repz call xor aad ss sbb (bad) xor rcrb (bad) xchg add ljmp push mov into mov add xchg lret insb add inc mov cmp incl subl rorb sahf popa add fidivrl je insl pop dec call mov mov and and bnd ds addb outsb add mov cmc add rcr xchg add clc aad add data16 cmp fisttp add in mov inc (bad) xor add lea sbb dec aas imul sub into (bad) mov cmp rorb add jae les pushl mov (bad) nop ret leave pop lock aas nop xchg pusha cmp inc push mov lahf mov pop nop in add xchg jne ja adc mov dec sbbl push lea dec cmp cmp loope adc clc lea stc fistpll mov je or or inc jae add sub cmp lret add daa push movsl cmp add aad inc mov cmp or xor inc dec or dec icebp mov push cmp add inc xor push add dec aaa and out add adc sub sbb (bad) pusha mov add mov cwtl out xor add pop outsb mov (bad) lock add imul or jnp adc mov nop xchg add xchg bound add push outsl jecxz (bad) call in push dec adc add mov std push mov mov push les adc sub mov or lock repnz into out jmp pop mov sbb dec push add and arpl cwtl (bad) add test push pop (bad) jae lds adc jb mov out stos jbe das pusha cmp add mov (bad) ja mov or repnz rolb int3 inc jae push push stos sbb jmp xor sbb das adc mov jg inc std lock (bad) add jb data16 dec mov sbb out fadds sbb add mov icebp cwtl cmp add jmp popa and mov add std push fwait sbb ljmp add adc inc mul nop or mov cld adc add jbe insb enter cmpsb xlat int3 add loopne cmc cmpb sahf xorl pop cmpsb loope or add mov fucomi add hlt das std dec adc mov xchg imul mov stos pop jo push or sar adcl mov add (bad) out nop sub add cwtl subb jne mov mov dec mov add imul ret mov sbb xor xchg cmp add (bad) cwtl xchg aaa call cmp ret fsubrl jle add out int mov jl inc adc insb cltd push (bad) clc cli mov out fstps bound and add xor icebp sbb push mov cmp mov inc add cmpb add jg xchg and pop mov sets test cwtl aas inc mov cmp addr16 add jmp mov mov jno add xor mov mov data16 lods inc xlat mov and mov hlt clc xor and add and mov cmp xor aam lods adc mov add fildl mov ss test jge add jmp ficoml dec dec or out jb jne adc xchg push add sarb push outsb add add (bad) jae stos cmp sub jb inc aas sub scas test dec icebp mov ret ss popf rolb or sbb ljmp push push mov test dec add and add push (bad) icebp rclb pop jg xor cld pop repnz lods popf test inc ss fsubr ror hlt add mov cmc cmp add xchg aad je pop hlt add push jno jecxz add inc andl aad add pop data16 cmpsl xor add sbb enter add insl and push fmul leave add call scas pop mov nop or add out gs scas xchg cmpsl jae add sbb jmp sub jo cmpsb jnp add sbbb stos pop jle cmpsl xor ret xor test fstl flds or cmp rcrb ds add jae xor jmp out add mov sarl xchg or je fwait mov rclb xchg jne mov notb lea mov dec mov daa pop loopne push mov inc mov dec sbb jbe add rcll test insl pushf add addr16 inc mov popl pop fstps and cmpsb xchg idivb sub add scas lahf aas insb stos sbb test mov testl inc adc and scas pop xchg xor lea mov mov xor inc cmp add cmp adc mov ret ds into fiadd mov sub add das out divb pop mov push fldcw daa cmpsl mov xor dec add mov dec enter aad xchg push (bad) push inc add push sub les mov lock add test popa sbb pop cwtl stos add dec fsubr mov lea arpl ja adc sub or adc (bad) jb ja push je xchg out dec mov inc bound adc and sar add ds mov hlt add inc mov jo mov mov inc int3 loop add sub xchg add mov popl inc scas popa mov mov pusha add fcomps mov xor xchg dec xorb fnstenv add insb xchg hlt pop push cmp add and nop (bad) push cmp adc pop popa or mov insl xchg add (bad) xchg pop ret push leave test inc enter jns add inc hlt out push popf or stos dec fsub mov or sub jae mov scas hlt (bad) xchg add mov push add adc mov add push popa add push ret (bad) dec xor sti dec add adc add int fcoms cwtl loope sbb add dec aad jg test and loop inc adc notl bound pop orl lods cmp and jle jl test shr mov xchg inc sbb cli and aaa and in test test mul pop adc jbe lock cmp lcall pusha rol add fsts mov push push test inc jmp cld add dec cli sbb sbb cmp mov shlb fs jb xchg mov push daa inc movsb sub pop scas js mov or aaa inc dec sbb sub mov out mov js sub push mov add add fidivr mov inc add jb scas pop fisub sbb aam imul and insl mov adc add xchg and loopne test shrl mov push inc mov repnz push mov (bad) loop mov add cmp stc cmc add mov sbb in call mov xchg lds adc jne stos dec (bad) hlt pmaxsw imul insb add dec xor lods mov roll data16 sti xchg sub es pop addb adc out push sub (bad) xchg adc fbstp aam clc jmp add adc stos negl in and call mov fadds sub dec nop or sub rcl rolb or jg mov subl inc cmp push and inc mov sbb cmpsb dec cli push add loop enter sarb repnz (bad) repnz add mov push mov jge je adc outsb add arpl (bad) cmpsl dec je cwtl pop mov repz cmp cmp inc jl or mov sbb cs add push daa pop push call cli imul mov jecxz add out (bad) cltd repnz add xchg sbb repz add inc mov sub inc call in lret push leave jle (bad) jge add push lock xor inc mov mov ja daa xor negb mov mov add and xor cmp add cltd push cmpsb and daa mov in out and movsb push scas ja jp dec add sbb dec sub or into or cmp lock fcomps (bad) loopne and cmp arpl jno add cmpsl (bad) popf add xchg dec xchg imul movsb add xor daa cmp int3 lock loop mov arpl mov mov loop sub mov adc sbb jecxz xor and and orb das mov jmp mov ljmp sub sbb lahf add mov (bad) cmovge push mov or rcrb dec jbe (bad) je adc cmp and mov mov rcll mov jle push mov arpl je repz push xchg push sub dec add sub rcll or cmp addr16 add inc js and dec add imul pusha add pop sbb push jg pop cmpsb and cmp dec xor jge movsb ja add push roll jmp pop or dec (bad) ds adc cmpsl clc data16 sbb xor lahf push dec sbb adc ja loopne jle fbstp or cmp adc or mov fldl lcall repz pop rorb mov push ja out in enter xor cltd call push jae out push pop sbb negl loopne cmpl push and imul adc pop push notb rcll out pusha addb in xchg popa (bad) pop add fmull test mov iret cmp in (bad) jno jae loopne ja xchg fcompl sub sbb mov xor (bad) dec sub cltd mov pop mov cmpsb cli xchg add fwait in mov inc pop int loope hlt (bad) (bad) push lret xchg lahf dec out or pusha mov daa add jbe lock pop mov int3 stos sbb movsl pop push setae icebp add je lahf push fwait dec cmp hlt mov das mov cmp push add cwtl pop adc jnp js and dec xorl and in xor paddw cli shlb jno push xor xor lret add push aaa pop xchg loope or sti mov mov or icebp lret test enter ja inc or sub mov add stc add sbb ss mov pop jne inc mov stos in jg pusha xorl repnz incb cmp ret loopne or and ljmp das jne popa mov adcl adc sahf adc mov pop xor and add fwait popf insb scas cmp fidivrl test add jb push andl pop lret das lods xor cmp xchg int add mov adc (bad) adc (bad) push or and push xchg pop iret ret (bad) push enter push stos cmp jb sbb mov iret insl repz push xor sbb xchg sub ret push dec dec jl,pn add cli repz inc dec cmp aaa adc mov pop cmc mov rcrb or sbb sub fcompl cmp mov xor xorb jb aad lods iret push (bad) add jge mov inc stos and and push mov ret pop loop xchg lahf inc xor push and dec sub xor jb sbb pop xor push cli mov inc and lock shlb pop into sub jb subl inc clc cmp and xor clc dec ret cli cltd push pop add add out test sbbb icebp push xchg mov pop inc lods push cmp movsb or mov fldenv iret rcrl add dec xchg xor dec jnp xlat js xchg repz sub jne dec addr16 ret sbb mov enter add pop repz das push cld add mov adc sbb movsb shrl fcmovnb cmpsl xlat or out and jns orb (bad) out add and or pop (bad) mov mov repz xor add push clc sbb sbb les inc leave pop adc movsl int3 lret sbb test arpl mov or lods addr16 inc inc sbb adc mov or or mov and insl ss (bad) xor jp cmc iret sbb add std pop push fisubr clc inc rorb push pop mov mov pop cmp mov cmp int3 mov inc xchg or pusha add jae xchg cmp adc mov (bad) jle ret pusha mov aad dec mov cmp add cmp mov adc jl push mov sub add xchg jbe add pop test sbb pop add in sub and fwait mov movsb test test sbb pushf dec add jo adc xor jb add jle dec mov xor and (bad) icebp test inc sarb pop (bad) push jg push adc and add sbb lahf sar sub clc popa cmp test or mov test les je scas cld mov lret (bad) mov gs dec hlt add pop xchg dec or aas js push enter jl dec xchg or dec push cs (bad) inc xchg adc add ja es inc clc mov pop inc leave sbb out mov bswap mov rcl add les lret mov xorl fimull cwtl and int cmp shrb dec inc adc add stos xchg lcall enter xchg pextrw or and pusha (bad) sbb cli mov push repz xchg inc and mov shlb dec push aas lock mov (bad) inc xor mov pop lods or and stos call add xchg push shrl mov push sbb out add movsb loopne jle frstor fsubrs mov fxch adc repz inc mov lret mov stos push cmp push fsubp lods mov xchg add orb dec pusha movsb pusha daa sahf sti push xchg mov xorb lret pop inc jnp add mov adc add stc mov sub fcomps insl add daa mov mov xchg testl mov xchg xorl push cmp (bad) jmp add rorl jle push fsubrs dec pop cmpsl xchg aas or movsb push call and xor hlt jl rclb sbb add pop push or shrb jle rorb or imul ss cmp adc sti inc faddl loopne mov popa sbb cmpl aam jecxz fisttpll or push add add mov sbb push xor inc je int mov cmp hlt mov pop hlt adc push stos lret add out cmp push dec icebp nop push sbb (bad) pop cmc imul mov add push fbstp and lock sub int3 jns out rolb in mov sbbb subl inc mov stc and adc mov cmc dec (bad) mov das in (bad) mov sbb add pop sbb xor add xor loop (bad) mov add sbb int rorb rcll popa cmp loope and data16 pop pop daa test fs sub cmp pop and mov icebp push cwtl add nop xchg insl pop loop add cmp jno js (bad) sub loope mov xchg mov and cmp lods xor cmpsl mov cltd popa movsb addl pop decb in jno sub xor mov cltd mov icebp add jmp mov jl xchg (bad) sahf xor add mov popa jecxz clc mov push or add aas sub lret (bad) mov adc rcl sbb cmp je jns fwait or add std xor iret loopne (bad) int3 add mov push cs mov jl test shlb test cs (bad) movsb lea into or jb fcomps and push add dec lahf cld cmp testb imul ds add xchg das sub jg hlt adc (bad) adc add sbb inc jg or (bad) and enter mov xchg jb pop sub and out add arpl inc xor sub add test push pop cld sub stos sbb pop and mov lcall pusha push mov pop rolb or (bad) push push inc mov jbe enter std into add jecxz loopne mov mov (bad) push and adc dec int3 test pop pop inc nop sub jl mov mov push add push inc data16 jg clc push ret mov (bad) fisubrl ficomp add mov iret cs (bad) push mov mov add pop jg adc jmp add mov cmpsl sbbl mov jnp sbb and and xchg fdivrs mov push int3 mov xor add cs pusha xor movsl fs push add insl ds pop sub xor stc or jmp and jb push (bad) sub dec adc pop inc add add pusha hlt adc fcom icebp sahf and sbb mov push rcrb xchg fadds (bad) loopne jmp fadds outsl std dec pusha xor xchg scas ljmp ret cwtl out sbb jmp lock jnp pop mov std leave mov pusha enter inc test cld andb rcrb movsb mov loopne repnz cmp lret sysenter and loope add lret mov adc inc in mov pop ja add repz xchg pusha add add (bad) push jns xor or (bad) mov inc in dec mov lea in repz add sub cmp xchg pop adc cmp mov push call mov test mov enter xor ja xchg push push xor loopne mov sbb sub hlt loope test lret jno push sub mov nop sub ret pop add aas push dec loopne popa out inc das cmpl pusha mov popa movsb pop and in push xor (bad) mov mov xchg mov cwtl cld lea cmp data16 mov rolb dec addb lcall jo in ret fwait jb mov inc xchg dec adc mov cmp pushf call pop jg pop push mov or (bad) mov sub push sub cmpb xchg mov sbb aam nop and es lds sbbb lret int in xchg xor loopne inc jae pusha adc push test cwtl cmp inc sub (bad) mov inc ret inc mov add hlt adc or enter or pusha les mov int3 mov mov lock in xchg jle xor add fdivl into adc mov aas push or push aaa sarl cmp xor loop cmp mov rcll jl add je mov add hlt inc add cmpsb test pop into add shll add flds mov pop lret inc cmp fcmovnu and negb (bad) push inc add sub mov out or adc sbb test adc repnz in int3 add inc adc cmp push movsb xchg mov movsl sbb pop mov push cmpsb cld add push notl push (bad) pop enter stc inc mov inc movnti mov cmp and adc jno lcall dec sbb dec sub mov sub loop (bad) jno cmp adc stos inc cwtl pop push icebp nop mov cld mov jg mov cmp fnop sbb cwtl dec inc cmpsb (bad) dec push adc imul cli movsl jmp dec outsb adc in ds push xchg test sub sbb push mov mov push push test sub push std adc sbb xor pop xchg push mov adc jle mov pop (bad) std and ss pop mov and jnp xor xor movsb mov and xchg nop push mov dec int add in pop repnz test movsb stos mov fld scas cmp xchg jle xchg push jns aam pop and sub adc add push outsb popa push adc mov and or stc sub jnp jmp add push add pop in mov ja dec push (bad) mov add dec push xor mov add mov das loopne rcrl and aad adc or inc jns arpl mov push mov adc adc in mov mov icebp mov and inc sub nop adc and out addr16 dec decl mov cli adc xchg or sub out insb xchg mov pop rcll mov pusha push sti loopne or cwtl adc xor data16 mov roll dec aas jmp int3 mov sbb add xor insb or or add xor dec in cmp (bad) iret or stos add icebp out mov clc lret fnstsw (bad) mov (bad) fsts lock or repnz sub lods add clc bt inc sbbb dec jecxz fnstsw pop in xchg mov xor call inc dec enter lds pop sub inc loopne inc js xchg out icebp add mov addr16 and int3 add lcall push or add inc or mov mov and mov out dec add insl in push add xchg addb jmp inc mov add and or mov jl pusha jmp pop (bad) cwtl mov aas mov or movsb mov add aad add popf add stos add push push inc jecxz loopne pop add sub xchg push mov adc in push mov adc adc stos mov xchg xor push fs pusha dec or loop ret adc js pop (bad) fmull jnp test add pop inc jne mov xchg fnstenv mov jno jecxz mov add std stc xor (bad) sahf fcomps or out push and mov ja pop adc mov or pmaxsw clc das cmpsl cltd add call dec xchg xor xchg mov sbb das outsb and mov push dec test insb in or adc fs ja adc inc inc rcr mov cmp sbb roll mov jp sub or dec pusha sbb cwtl dec dec stos xchg add mov xor inc insb mov pop nop enter bound insl repnz and flds dec lods jecxz arpl mov and rol jnp in lock out mov and insl addb dec andb inc jle push insb adcb push add sub lcall mov and add mov jb mov push cmp cmp aas sbb jno pusha aas xor into inc pop pop insb jae ficom cmpsb dec call push push jmp xchg mov fistl mov add movsl jb es sub inc sub xchg mov pop add lahf insl lret popf add sub sub ret test mov std and lock xor push pop test mov dec cwtl js xchg pop test dec inc push shlb sub pushl jge in es rolb jmp sti lods lahf fs mov into mov sub cltd pushf xor test inc ret js test int3 shrb jecxz dec test icebp xchg adc mov inc les xor jb repz inc mov test icebp fisubrl insb and jno gs ret jo xchg adc scas pusha (bad) dec mov or dec stc xor inc jae inc (bad) (bad) lea cltd jecxz mov mov xor push pop adc xchg dec ljmp js jmp mov ret dec (bad) mov or pop add pusha cmpsb movsl cwtl jnp (bad) jb xchg mov add add cmc sub xor lret add pop mov shlb mov add rolb cmc dec mov dec pusha add push (bad) loopne aam inc sahf push and jl add cld push xchg sub mov test (bad) sarb mov lret mov or dec adc dec shr adc jp jo pop or cmp xor les mov insl sub outsb adc mov xor mov dec adc add das loopne pushf test inc mov add mov cmp (bad) cld push jge push sub adc adc pop xor ret dec and es or xchg pusha mov dec bound adc mov pop push mov jl jecxz add jb sub jle add dec insb mov clc cmpsl nop add mov adc push daa xchg or andl cmp loop mov push jecxz sbb xchg xchg inc rcl dec fldt and lea xor mov cmp push loope andb xor les (bad) enter cmp xchg std add adc subl wrmsr or mov movsl adc out dec sub adc les es and dec sbb xor mov xor addb fisubl call arpl mov cmpsl cltd jbe es push add pop adc (bad) lret mov addl mov cli or movsl cwtl stc andl push popf or push int3 adc or cld add jge test or and add jmp add gs adc mov loopne test mov movsl sbb (bad) cmp dec mov nop nop je lock shr sbb loopne add pop jp mov mov je dec scas aam sbb bswap pop dec sbbl push add (bad) jmp xlat pusha mov push push sti xchg pushw ret mov orb fmul mov sub es insb xor mov xor pop sarb pusha mov leave faddl mov and bound or loope adc xor loop xor pop inc call gs sbb fstps cli dec orb sub adc push add xchg loope in mov pop mov push js xor mov add mov dec dec push jb adc fsubrl add or cmpsl popa adc jg mov sub sub inc adcb sahf sub sti or add pushf hlt lret shlb mov and icebp and aad movsb mov loopne push xchg test jmp adc fidivr inc dec push push roll dec nop data16 adc mov add fildll dec aam inc pop enter jl add (bad) jecxz inc les sti pusha push jno pop add scas dec and dec and test call into test pop mov sbb mov pop sbb out pop (bad) ffreep inc sbb adc ret mov negl xchg mov daa nop mov sub cmp add inc out ljmp xor adcl cli mov cmpsb inc or mov ds pop and jge outsl pop insb lret jnp lods xor enter inc int3 hlt pop add lods inc or imul sbb ja sub ss xor xor adc push imulb loopne adc xor jo imul sub pop mov rcl lock mov es pop jl cmpsb loopne rorl int3 inc mov mov mov nop (bad) push rol or aas pop xor mov sub mov or adc add movsb clc jmp add add lret sub adc dec repz cmp or jnp aas push test mov pop insb adc daa xchg add loop mov adc mov aam insb mov and add and mov push cli enter in faddl (bad) js rolb scas push push dec xchg mov test dec lea push pop mov or subb cmp push push imul nop or (bad) icebp movsl push jbe aas hlt and cmp jge jl add add inc xor mov pop mov xor movsb sahf cwtl inc loopne frstor or loopne jmp pusha add repnz andb bound movsl das dec push bound adc mov add fistpl dec fs add and and add dec adc mov cmp clc insl js xlat adc dec adc add mov and add adc mov push enter adc adc rdtsc mov and out hlt xchg adc notl sub cmp dec lret enter fisttp orl push xchg hlt add xchg loopne in push cwtl test enter (bad) loop fwait arpl and lret test xor push push inc pop dec pop in fmull and push jnp arpl pop sub ret call cmp pop ja lods adc lcall mov push mov sarl cmpsl dec sahf add lret jp pop jmp and push cmpsl (bad) icebp sub adc xchg mov sbb and jge test mov add (bad) repz xor dec and lcall mov dec sub dec scas push call xchg aam (bad) xor xor dec rolb lock pop (bad) call xchg dec loopne adc jp or lret mov lds adc or (bad) inc cli addr16 jg inc idivb mov cwtl rcrl mov les mov adc lret sub hlt add xchg or sti scas mov push fs or push inc (bad) jns ret call pop repz add es lock jl inc test jge loope dec icebp mov inc pop xchg cmp loopne jl in addl adc rcrb or mov jmp mov lret popf jbe call (bad) add mov pusha test adc adc sbb loopne bound dec and ss push xchg je add sbb xor and and push xchg sub lahf pop fwait adc add (bad) addr16 das pop mov hlt xchg test pop pop mov scas add pop ds lods lret stc and insl or cmp cltd outsl arpl shrl push sub add sti pop jo repz push add or adc inc mov sbb mov dec add mov sub or and dec jne popa leave aas push xchg daa leave hlt loope xchg dec outsb popf xor cwtl rcrb xlat cmp lahf xor add mov (bad) add xchg or add lods cmpsb pop cmp fiaddl (bad) add or daa inc xor mov pop and aaa mov mov in loopne xor repz mov mov inc cmpsb pushl dec jnp ret sbb clc into arpl xor (bad) div push les adc sbb popa and cmp test mov xchg ffree or and pushf cmp lods jno cmc outsl jle add leave movsl push sbb mov mov xchg and test clc add dec add add adc mov sahf push xchg sbb pmaddwd and add pop xchg inc pusha bound or stos fcompl add rcrb lods int3 xchg fcmovne push xchg sbb inc and cmp pop nop mov in les add or jecxz enter mov push inc push add jno fst or sub cmp std add add pushf sub mov (bad) in xor mov or shrb hlt add pop roll push imul add out ljmp das add mov pop aas aam xor rclb add push ret and pop sbb sub pop int3 xor xorl sahf sub push insb (bad) pmaxsw xlat pusha mov scas and mov rorb jl add cli mov ffreep orb adc in fdivl jg adc add and jmp dec (bad) or pop hlt test lods and dec jp test mov movsb xchg in aad add mov test insb nop cmp sub pop xor xchg test push cmpsb popa stos cmc xor mov iret mov lea adc dec rorb sub pop loop into pop inc popf pusha loope cltd jno call xchg sub test and xchg inc jl pop mov nop add iret push mov cli adc fcoml enter push add sahf rorb popa (bad) cwtl aam bound flds in push add adc das aam ret or ds mov clc add dec add sub int3 sbb pop and xor cmp add sub or inc mov rorl adc and mov jo jbe cwtl loope inc or dec inc adc andb xor pop mov imul mov xor cli rclb movsl mov insl cs push cmp loopne aaa je or pop or or movsl dec mov test sub push sub add fxtract fmull mov jno nop cmp hlt mov aad sbb or adc push (bad) xor in fdiv add xor sub xchg loopne sarb jg jbe add test mov js fs cld pop xchg sarl or dec or xor push fisubl push xor sarl xchg arpl jle shll pop push mov and sub inc rorb loope and dec jo js nop sub jmp (bad) xor pop mov xor mov xchg add add into xor je,pt push xor shl sbb inc shrw test repz push cmp dec mov push and cmp push fisubrl mov mov lods pop fadds and push orl mov imul movsl adcb xchg hlt addb js or adc outsl push add mov mov and cmp and in fmuls inc pop pop mov test xlat mov sub clc push pop lods add push and sbbb std xor fpatan push xchg inc jg cld scas in ret nop lods (bad) jno pop sarb jo mov cmp jno cmp lea lods data16 jmp cmpb fcomps sbb lock push add xchg and and dec or sahf imul xor lods add pop mov dec andb sbb jo xor fsubrl mov mov dec lock sub cmp pop sbb add dec jb or dec repnz data16 outsb das xchg inc mov jns add dec or sub scas test mov pop and (bad) xchg adc loop xor xor push or push mov sub pop add xchg adc add repnz sti pop and push or cmp pop lods pop mov push (bad) testl fst add shll mov call mov es (bad) sbb test jle inc or mov clc enter cwtl xchg jo cwtl in xlat adc jle loop add pop push ret pop and iret dec sub mov mov or adc and xor xlat sub nop rclb mov (bad) add inc adc sbb movsl and mov scas pop and adc pop enter int3 push add add mov ds rcrb clc call fidivrl in mov ret inc jp inc mov mov and mov dec cld cmp mov mov lds pushf scas add mov or pop js push orb dec mov ds mov add mov jb movsl xor add adc rcrb call addr16 lcall sbb push stos mov push cmpsb cmp lea stc rcrb ds inc jl add insl cmpb jecxz std sub cmp js cmp inc sbbb int3 mov cmp in or scas ds ret sar mov dec adc pop push and mov cmc (bad) mov mov (bad) pop pushf add jb int3 movsb jae jle sbb nop add enter jecxz fmuls push push add pop inc xchg sbb pop dec loop imul add pop push stc (bad) fist lock xor jge ss add imul call mov ficom rorb xor or in mov or pusha xchg mov fsubs adc loope ret adc cmp push insl jb xchg cli orb xor ljmp push mov push pop sbb (bad) jae and jge xor ja movsl adc rclb jecxz jmp imul fstps scas cmp enter inc mov xchg pop xchg xchg sub add lods mov pop xor jne sbb fidivr sbb aam push xchg dec adc imul nop pusha iret mov push loop scas test test testl xchg inc ds movsb dec jno add adc add sbb js int3 push push addr16 and cmp or test and shrl call mov std iret shlb repz push cmp dec add jmp sbb cmp or pop outsb mov int3 jne mov cltd pusha add jmp ret call add add stos orb push mov sbb push mov mov xlat xor or and jbe add into mov add inc inc cld je insb mov lods jge movsb push popf shrb xor xor clc ret mov lock push jo test cmp dec fs and test inc adc xchg nop in jecxz xchg jo and pop out cmpsl fisttpll mulb dec cmp push enter cli xor ljmp (bad) ret mov loopne push es lock aaa or data16 pop xchg jecxz mov mov inc ret and test imul insb rcr adc into inc ss and rolb sbb mov xor loope (bad) ljmp scas sbb je dec sub add add push test js clc inc sub lods and xor sbb pop push leave xchg leave ret or nop int3 jl mul (bad) fsubrs in ljmp notb addr16 sub ja cwtl lock stos in jle in xchg repz faddl hlt dec call or pop lods ror xor adc cmp or or or jo lcall fisubl test in push add adc push aaa out cmp bound mov (bad) jo pop mov adc pcmpgtw sub mov mov pop mov cmp xchg popa inc add fs movsl icebp in xor sarb or or mov movsb mov gs add scas pop iret pop jmp xor jge rcll dec repnz ljmp pop xchg add in jecxz call ret roll adc mov sbb dec f2xm1 lret ret xchg (bad) xor addl sbb das sub pop and cmp pop jecxz push adc add hlt dec push push daa dec mov jg cmpsb jae or or (bad) push fdivs bound jl mov loop pop mov subl data16 sbb cmpsb push mov push (bad) imul lock (bad) fmuls xor lods mov daa lock cmpsb add out mov nop imul push jp or push xor movsl lcall int3 and add in mov sbb loopne inc jb loopne and push jo push mul push in push xor nop adc sbb inc fs push jns add add push xor pop insb int3 push adc decl inc nop xor push sbb inc cmp in cmp repz or dec mov jmp adc cltd push xchg jl cmp fdivl xchg inc imul ret out mov push loop add ret loopne into mov ds dec cld xor inc sub xchg jns jo dec lods inc mov mov mov int3 pop xchg push sbb dec mov out sbb push mov lret subl push inc inc pusha or mov outsl inc pop lods cltd xchg sbb cmc fwait add jecxz jmp (bad) xor pop cwtl sub movsl push mov pop pop and jnp push sub mov pusha aaa popa scas scas and outsl fcoms dec ret movsl int3 fwait add add mov push (bad) fsubrs add adc add push icebp test or mov ret or mov pop popl and push stc push push sub sbb jo lods mov aas int outsb jo dec pop test and jecxz push idivl push mov sub data16 fcomps add jae push push pop in pop sub dec or fxsave jne ret push sti lahf pop sbb and clc jno hlt jg iret mov sub inc add inc popa xor sbb mov add ja sbb insb les or test or ret pop mov pushf push mov aam mov sub mov sbb inc loopne stos jnp push shlb inc mov test adc lds in scas out or add or sub adc adc flds push aas (bad) mov jecxz nop and clc jb (bad) cld ss mov add and adc and out je or or cwtl inc imul push and add inc sbb push je nop hlt pop addr16 push out and ja add push cmpxchg pop jle or gs mov add aad imul xchg mov jg and sbb or mov jmp add sbb and (bad) dec ret cmp jo cmpsl lds inc dec xchg movsl cltd xor pop sub add dec data16 subb add mov or inc dec pop insb or sub sbb insl or cmp add imul test sbb xchg adc shr sub xlat pusha xchg adcl insb mov xchg or push xchg mov data16 lahf insl (bad) lods test sbb lds sbb repnz stos ljmp sub lock cmp mov pusha sbb ror dec sub adc mov je aaa or sub ret leave popa sub (bad) xchg andb add repnz jge fldl lock mov lods (bad) push jb xor inc sbb rorl add nop xchg cmc sub loope js addl xchg cmp add jmp into inc mov leave outsb add jmp xchg mov adc mov jg push mov aaa add push mov jp pop add dec imul or inc xor clc ja jo pop sub (bad) fldl or inc dec testl addr16 pop or les jno lods cld clc add insb mov ds je sbb and xchg add in clc inc adc xchg test outsb test inc push adc pusha sbb lahf std rcll mov pop nop add notb dec daa jne add and pop sub dec or lds test inc pushf push jle iret aas in xchg xorb and imul cmp outsl mov push inc ret mov aam mov mov movsb lahf add adc and or popa add inc pusha jno in ja sub out dec lods jecxz inc xchg nop out js push lcall add push xchg fs pop sbbb mov and jl sbb sbb scas and dec and jmp fmull add jne lods popa pusha dec js shrb mov mov sbb mov pop dec sbb ret popf inc push xor gs dec in paddusw arpl push dec fwait sbb and xor jae out pop ss xor sub add mov and adc dec inc nop leave mov mov mov mov test mov addr16 cltd in in jl or lock outsl dec xor xchg mov (bad) scas push sub cmp pcmpgtb pop cmp dec fwait sbb or or enter inc fstps (bad) lods jmp dec push jbe add xor sarl add scas mov ljmp hlt sub pop and sar dec mov into and subl movsb fimull fs and add dec lahf popa xor enter adc sub and nop lahf lea dec push les pusha mov aam push and dec mov js ret loope (bad) xchg test push mov add out pushf add cmp mov stos add (bad) mov push add out add popa adc add cwtl add insb je mov fstl pushf popa jmp and jno add xorb xor inc mov cmp jp or dec sub cld push rcrb add mov sbb xor scas lock test or bound or loope rolb mov insl lcall or int3 hlt dec dec cmp ds sbb insl sbb repnz pop cmp and popa mov jg inc shrl push xlat cmp sbb or fiadd cs add leave call add lock (bad) hlt mov dec outsl jnp pop testb push loopne test or rorl inc add mov dec or sbb mov add push sbb lods xor or and das ret jmp jo adc ljmp cmpsl or push and dec lods pop faddl dec call or imul in leave pop cmc xor cltd inc sub (bad) (bad) mov dec pusha in sbb divl lock push dec fbstp mov xchg push jbe pusha mov aas push add call popa jae jl xchg xchg pop mov adc test jmp mov sub mov or xor hlt and mov insb and enter and dec cwtl test jl jp arpl xchg (bad) adc leave ret (bad) fsubrl sub cltd (bad) and lds aad or in xor rclb xlat mov adc and cmpsl cmpsb cwtl cs fs ret nop mov add mov cwtl cmp scas or dec insb insb adc jb xor ss pop xchg call icebp movsb ret or or and ficoml fildl dec push xor ljmp dec pushf ret cmpb and xchg add ss iret xchg insb sub adc dec and and or js pop call dec arpl call inc mov cmp insl mov js loopne add add inc aam out cmp pop pusha int3 div out mov stos sbb int add pop movsl aad jmp xlat daa push or or sub fwait lods loope cmpsb jno test sub lock sub cmp incb cs mov adc add jnp and push push or jmp pop xor xchg lods adc adc leave inc cmp add je add out fdiv call push sbb and pop xchg add adc push sub adc inc push faddl loope fwait push out dec push add das pop sbb loop add push jg jmp test mov pushf jg and jbe imul mov xor scas loope inc xor dec mov inc dec pop push mov testb mov or imul pop cltd mov add dec out lds mov cmp addr16 call cld add addb add sbb xor push (bad) mov pop loopne imull dec push adc xchg mov loopne dec (bad) test jg inc es rorb test mov xchg call mov mov sbb adc push nop daa jae add enter cwtl dec jge xchg hlt add jmp mov pop or xchg adc add (bad) adc mov sbb aam out jbe lock mov pop rol xchg cmpsl sbb dec push adc roll stc jmp mov dec push add pop inc nop test dec pop add push mov push jnp fisttpll inc xor inc in add push push sub sbb ret or add es jg mov fadd push xor or or movaps push cmp add fstps (bad) mov xchg xor sub or movsl in xor dec add mov add stos xchg push lea push loop xorb hlt add daa jb or sub mov xchg clc or mov out outsb push dec mov and dec fiaddl add cmp mov or sbb int3 int adc push add adc xchg das push dec daa jl mov jmp stos (bad) fldl adc movsl adc data16 in in xchg shlb icebp test add push sbbb mov pop cmp aad add ret dec or mov fnstenv (bad) sub inc dec jmp or fdivrs cwtl adc pop lcall orl aas roll nop and ss add mov lock mov adc cmc sbb test ljmp lods (bad) mov mov adcb add stc inc xor add xor mov data16 ja push cs (bad) fistp mov or fsubs add inc enter mov mov scas or out push pop adc rcr (bad) lods loope and test jno add jmp lea xchg inc pushf add jne inc insb nop (bad) xchg mov sbb xchg mov insl jle or xchg xchg mov mov icebp mov je sahf cltd pusha cmc popf lock das add push or (bad) (bad) ret subl add fldenv pop insl test jno sbb andl fistpl jg movsl pusha cmp (bad) je aad sub and xchg jo std in orb cmp mov mov mov sete push pusha adc loopne add pop push sbb or or and mov insb mov jp jg (bad) clc sub and adc rcrb lea pushf fiadd or cltd push out rolb inc or xor inc add push mov xor (bad) xorb pcmpgtd inc ja sbbb sbb push call enter shlb test or pop ret push repz lods jnp test and mov or mov push xor dec cmp mov fcmovbe jp inc lcall adc je mov fsts xchg add push add adc and add cmp inc jae add lret lret into (bad) sub xor ret or cmp test cltd sub hlt pusha dec adc nop xor lock stc dec add lea out scas ror add fwait outsl jae aam push (bad) or xor and adc jae rorb hlt dec sbb mov outsl sbb les dec or call adc push insb add sub or and jbe add sub and or test enter sbb jns pop shrl jg insb enter add test xchg out call adcb sub jg or jmp inc lods sbb test sbb cli lods xor iret pop fwait daa xchg jl mov pop addr16 inc mov add mov cmpb pop xor and lock repz cltd xor jno mov cs ret xchg and test sbb jae sysenter inc lds pop movb (bad) or sub xor push mov xor (bad) or pop and lahf lock scas out syscall sbb inc lds inc icebp lahf dec add lods fwait xor aaa adc add or incb mov mov (bad) repnz add mov add push pop add mov adc (bad) jle pop add orb mov (bad) and add nop xchg add mov subl rolb psrlq (bad) jnp prefetch push adc jb mov xadd or jb mov add mov rcrb push sub outsb sbb lods sbb cmpsb inc popa xor push hlt mov popa mov sbb cmpsb adc cmp lahf xor mov fbstp add pop fimull sbb sub cmp cmp std rcrl mov mov clc xchg lea sbb cltd inc push push mov out xorb pop stc sub mov add dec lcall add in aam in cltd cs clc adc test (bad) cli shld loopne in pop jns add sbb cld pushf imul mov fwait mov test sub nop add add jg mov test or hlt sub cmp mov rclb adc add pop adc pop dec insb shrl inc xchg aam lods pop add cmpsl movq inc lods mov (bad) outsl adc xchg data16 insl sahf jnp test fisttpll add and mov dec mov add int3 jb repz adcw div add daa pop sub aas inc sub lods cld adc inc in sbbb dec inc sarl iret mov and ret xchg pusha or adc sbb addr16 pusha rclb out inc xchg inc icebp fdiv push dec divb mov lea mov and je and ss mov pop arpl adc pusha leave xchg add sub jno dec pop out add ret (bad) mov test call and cmpb xchg es sbb mov stos mov ljmp mov pushf insb cli sub add cmpsl inc xchg frstpm(287 ret stc dec orb sub xchg xchg imul mov mov adc mov (bad) jbe adc add add hlt inc xchg mov insb push pop jo pop xchg adc sbb cmp xorl (bad) cld (bad) int3 sub stos fcoml inc dec aad (bad) xchg fisttpl mov ds add insl xchg sub fistpll repz loope and inc cmpsl push or cmpb cld ret fstps jp aam pusha neg mov mov mov cwtl cmp lea push or fcoml lahf xchg jp inc sahf jne mov movl rclb xchg notb inc daa push ja dec mov add mov scas imul and cmp push mov pop add stos mov xchg arpl pop jae add and dec fild hlt xchg mov mov pop mov test add cmp movntps and inc or repz pop or mov cmp or xchg test loopne jne xor bound mov xor and jg out add ss dec pushf push pop into ja cmp mov outsb mov jge mov test xor call xchg mov mov mov pop ja es ljmp mov enter jne shlb lock imul test adc jo lcall pusha jbe inc push jle mov adc lock dec sbb fmulp or push mov sub loope inc clc jmp sahf mov push add enter inc add mov test cmp inc inc xchg sub push inc jns mov mov xchg std xor xchg inc add cmp xchg cmpsb f2xm1 mov call push rolb pop popf stc xchg and nop in xorb data16 xorl std clc leave cwtl scas popa xor mov and enter push sub out push rcrl cltd lcall ja push (bad) cmp insb push repz test add mov and push (bad) ljmp popl fwait sbb mov movb mull cmp cld add outsl mov mov int3 mov mov popa test xchg xor pop jo jns shrl les inc and inc mov arpl add adc pop shll je xchg pop push insb fprem add (bad) (bad) jbe add dec rcrb enter add cld sbb lock popf insb (bad) andb cs push add loop jle adc sbb sub add mov pushf jecxz pop or test adc jo ret mov cwtl out add mov hlt (bad) mov and mov sahf std in mov loopne,pt xor lea icebp xor rolb loope pop cs int mov test bound or push out push rclb dec test xorl push popa add mov dec jo cmp adc nop je stos add and and pop imul fsubrl std cmp mov rcll or pusha (bad) rorb mov test xchg test push sub pushf add lahf push hlt outsb xchg add stos adc out pop pop cmpsl sub xchg test loopne and clc dec add test (bad) lret add xchg cmp add and or cltd mov mov incb xor (bad) pop adc cld fmull jbe jmp call xchg lock xchg adc xchg dec rorb pop hlt cmp jecxz add popf xchg and fstl or lahf cwtl clc in pushf test jnp in mov aas mov frstor test push test adc dec xchg inc cld icebp mov or les jmp (bad) scas testb sbb pushf inc mov pop push pop fcomps lods scas adc cwtl xor addl xor loopne mov adc (bad) js add jmp sar sub (bad) mov cmpsl sub jbe cwtl adc and xor push add mov jg loopne push shlb shrl fsub push movsl sbb xchg std sub aam xchg xchg sbb adcl push and adc faddl aad xor mov fadds jmp mov adc imul out cwtl loope xchg setbe adc flds cs xchg mov sub arpl stos cmpsb int3 rorl xor mov popa icebp mov pushf xchg mov push adc sbb test mov dec std mov pushf scas rolb pop dec inc sbb inc mov rcrb sub addr16 js or mov xabort xchg xchg cwtl sbb dec movsb xchg mov icebp push test sbb jl call enter xchg pop fcompl jbe cmpb lret mov ljmp push jl ja rol jo cmp (bad) lock mov mov ja mov dec adc adc xchg lret jno negl inc xor (bad) mov dec addb enter pop pop push jnp jl int3 sbb jno imul ja add mov sbb mov (bad) fdivl out mov mov inc push (bad) rcll cli dec jecxz or call mov add nop dec in and xor push push push push insl cmp nop insb (bad) loop pop cmpsl dec (bad) andb mov add mov icebp sub mov dec xchg dec cld aas xchg add cwtl loop scas popa daa mov push xchg in movsl in adcl and xchg and mov sarb js,pn push outsb out add iret push sbb jb cmp pusha in adc adc mov cltd aam xor in adc or pop lea out inc lods notl fdivl cmpsl xchg push ret push lcall inc add std daa aam sbb pop fdivrl fist aas mov mov cwtl add (bad) xchg adc xchg cwtl add push dec mov push inc adc enter pop sahf xor rolb mov sub jb lahf jns incb add or xor ss mov add stos sti mov jnp add mov inc dec cmp lcall inc imul lock xor cs loop jl mov mov or sbb or add loop mov sarb clc cmpl xchg sub mov add mov xchg pushf or mov cmp test and (bad) cs enter xor and add pop mov popa (bad) dec mov push or lds aaa popa xchg movsb movsb mov cli ret mov push ja jbe bound or lods enter add jbe jnp mov xchg and push mov dec mov adc mov xor lahf jp xor inc cld repz mov cli dec pusha sbb push jmp mov ficomp or (bad) add mov aam jno arpl mov call cmovs add enter jnp add repnz xchg cwtl jecxz rorb sti push sbb mov add (bad) adc (bad) insb rcl subl out and adc jbe cmp test es jge add stos repz or imul popf xchg sahf xor push jne xchg (bad) mov jno add data16 or lods mov gs fidivrl push addr16 dec dec das pop fsubr std add mull rcll or adc aaa lahf cmpsl add jl xor pop in (bad) mov and mov inc cwtl add cltd movsl mov mov jl lahf pop fildll movl cmp loopne rol xor xlat inc std add (bad) fiaddl sub cmp incb cli mov adc loopne sarb test mov lock adcb jbe into jmp mov cmp in stos mov mov and cmp push loope jle,pt cld add lret mov add jnp ljmp cmp scas add dec fwait jg fstl pusha test dec push jne mov popa dec xor aas and cld ret fwait lret add xchg inc mov push add (bad) lods jb adc fsubl (bad) jl mov and imul add xchg sbb push inc fmull popa inc jl movsl xor je cltd mov aas lds or outsb popf push mov aam adc nop mov inc (bad) sbb jo push js pop add fiadd or push add inc std sub (bad) and pop or adc sarl call mov xor in add test add jne or jb add out pop and push cwtl cmp (bad) rorl and rorl lock enter add add leave jl add arpl sbb movntps dec add iret jle jae lea pop sbb pause adc adc enter add outsl dec push nop mov fidivr jge adc repz xor and add outsl popa gs pusha sub (bad) jb adc pop fiadd idiv rcll add fsubl je insb imul bound dec xor xor inc ret jae or bound jb xchg addr16 enter movsl lods enter adc adc xor scas (bad) (bad) test xchg and push cmpb scas mov xchg push pop ret or roll movsl es enter addl jge fs add fidivrl mov aam nop xchg jbe adc fisubl xorl add mov mov mov mov mov inc dec es hlt jnp add into sbb add js jge out push inc or aas out movsb add and xor (bad) aas int3 push cmp mov dec clc arpl outsb adc mov sarb and outsl sti pop mov or jg ss add or mov xchg test jg stc mov push lock add jbe jb mov cmp jne lahf stos loop cmp mov dec mov ljmp lret sub cmp scas ljmp or jne dec in push adc add scas adc sahf add and orl aas pop push jle or or push push aas insl mov sub lock sub ficompl int3 sub add cmpsb add or mov or cs inc (bad) mov xchg (bad) and and cltd repz adc add pop push fnsave xchg add out push add pop jbe hlt and push mov add push cs sbb dec and dec faddl jmp lea xchg es cmp adc mov push inc jmp sbb cmc mov inc and iret dec sub push jb addl (bad) add arpl push clc xor (bad) repz or (bad) sbb add mov clc jmp inc popa jb mov sti or xchg jecxz dec lods push add cwtl ds mov pop notb lock out push (bad) jo add and adc test push out add mov cwtl jecxz lock jo (bad) xor outsl enter jne js add fild cmp pop or sub lods cmp jno push adc push push jne push cmpsl fdivrs pushf adc repnz out push xchg ljmp jae cmp in dec repnz das xchg shrb adc cmpsb sbb out stos xor scas dec js jo mov outsl int cmp sbb jmp add mov dec or and or mov inc jmp adc imul xchg mov int3 sub fisttp cmp bound hlt add mov or xchg dec sub ljmp cwtl out shlb rcrl dec jge xor out fcoms lods mov adc cmp lds cwtl mov lea mov cmpsb pop add shrb sbbb cs ss add and movsb jmp fwait in das dec jge lret sbb cmp add dec pop jecxz xor push pop cs nop dec shll jbe or rcrb aaa push xchg out pop adc or xchg lret gs fcmovbe add push dec and pop bound adc inc jmp adc jle pop (bad) push inc fstpl push in mov push mov enter sbb xchg mov imul xchg leave sub inc out pushf push add ret cmp pop mov into jbe les sbb push in adc es lock out inc leave sub xchg add cwtl nop push jbe dec cmp cmp mov aam cs jo push movsl mov sub inc cmp jbe and adc push pop mov sub and (bad) cmp in adcl inc aad jb add test mov push test push aas mov mov xor adc dec stc dec pop stos (bad) mov mov inc mov lret and adc add adc add fisttpll movsb pop in and and test imul jbe push sub (bad) or sbb (bad) jl pop test imul cmp jp push js add pop dec (bad) xor popa sbb and add std adc aam xor or cmp mov lret test push mov cmp xorb imul cwtl cmp xor lret mov xor dec sub or pusha and pusha adc dec inc insb jle add push popa shl sbb mov add std fcoml clc popf add sub lock and mov or loop mov (bad) out (bad) and inc adc and inc cmpsl and xchg ret (bad) sbb mov pusha push lods jne cwtl je inc cmp or jmp pop imul test orps cwtl dec lahf xchg xchg insb sub hlt push out cmpsl push aaa sahf mov sub mov and ffreep fwait cmp mov test push xchg xor xchg xor dec scas mov sub movsb add sahf xchg inc imul mov dec dec js cmp cmpsb clc cmp push add stc xchg mov mov or out sub ret cs bound adc dec lock and and fcomps out jbe xor pop call loope bound lcall (bad) leave and xchg add add xchg rclb outsl (bad) push je mov and adc sbb mov add xlat jge jecxz mov std stos jmp xor mov pusha fsubrs imul or pusha rorl mov push enter jmp and adc push cmp ldmxcsr addr16 cmp push loopne in mov jbe idivb sbb mov call xorb jns adc out enter ss add mov mov xchg adc add push push mov (bad) loopne or or ss mov jl (bad) cmpb dec push movsb adc jno xchg xor (bad) jo es lret pop cmp fistpll cwtl (bad) cwtl ss pop jl cwtl fcomps inc cmp add movsb cmp imul sub sub xchg stos add js push clc jno out xchg lock clc jns clc dec push adc push dec in out (bad) popf xor sti xor out inc and sub push mov jbe pop popa iret push dec lea or add mov and pop in cld cmp incb fcomps pop or fimull lock jmp add push (bad) push cmp xor out dec sub mov lods push sub insb in and adc add push out lahf cmp mov sub test shlb sbb out jne jg (bad) adc xor sub push push and out or orl push sysenter enter adc int3 testl hlt add push add fs movsl out cwtl shrl jbe mov add mov push inc add fsubrs test dec rolb jbe in lock mov in adc rclb pop xchg xchg inc insb cmpb ss sub pop cld add movsl insb inc popa ficomp mov mov jmp mov cmpsb jl enter push ss (bad) pusha mov mov sub es xchg inc shrb mov lock fsubl popf adc fs mov cmp cwtl addb add cmp ljmp imul andb jb lcall xor and out les xchg pop es (bad) js mov sbb enter in or and inc sahf sub lea rorb mov dec popa inc dec push pop ret ss sub fs xchg push and jl addr16 rorb int3 or cmp les addb cld cmp in mov xor sub test lock inc and pop scas call sbb and jle cmp test mov cwtl adc inc cmpl xchg inc dec mov les movsb inc xchg inc pop fistpll movsl and mov call cmpsb popf pop push jo add or adc (bad) pusha mov bound mov andb add dec jnp sub loope aam testb popa mov lods xchg mov out andb cmp aad add ret dec jb jp pop outsl mov repnz mov jecxz xchg sub arpl daa pop sbb insb sub cld shrl pop pusha add push insb mov dec and pop rcr mov adc int sbb pusha cmpsl pop stos test add add out pop jno push (bad) inc inc shrb pop arpl pop cmp movsb mov mov js in sub add notl inc add cmp xchg lock stos shlb pop push popa inc mov (bad) ds ljmp xor lods xchg loope jo mov pop test jle imulb test inc sbb xor or test inc iret shrb mov adc xor add stos sbb fsubrs dec lcall push adcb push mov sub in add loop dec insl sub rolb call pop sub add and hlt add cmp add sub jae add cmpsb push testb pop fdivrs pop sub add cmp add std mov pusha jbe imul inc pusha popa adc imul cmp xor scas xorl sbb shr and xchg adc sbb xor mov popl insb nop xchg sub negb xchg xor add into ljmp push in inc es fsubrl inc and iret decl cmp andb testl jnp mov es add movsb adc adc push int fwait and lock add xor mov xchg pop xor mov xor xor cmpsb mov and decb rcr cmp lods scas push xchg nop pop rol mov insl xor jne stos rcll sub loopne lcall cmp stos adc cmpsb mov jl jo jb fmull add and sub in xchg out gs clc add dec mov stos cmpsl mov pop xor pusha and stos clc (bad) sub repz xchg cmp cltd add mov (bad) adc popa cli push nop mov adc cmp mov pop mov and xchg add addr16 cmp mov inc or push or mov cmp add pop dec enter andl rclb cmpsl add xchg loope cmpb xor mov jp or lock adc nopl mov add xchg andb out mov rorb hlt lret cltd cmp mov movsl sub inc fsubl loopne add jb hlt jle js adc mov pushf andl push jnp cli clc xor jb add mov adc pushf push add sarb cmp test ror dec dec jb xchg mov sub xor cmp fistp push pop shlb xchg out add cli sbb mov jae out pop iret js sbb mov int3 iret test and test inc jno add clc movsb xor and fiaddl outsl into notb mov cmp pop inc lret loope push mov cli (bad) dec rolb (bad) inc xchg cmp sti add push inc mov outsl sbb cmp cmp (bad) enter clc cmpl aas insb cmp add gs adc pushf (bad) popa and adc hlt loopne pop push cmp cld loope test (bad) call lods rcrl and stos add les in addr16 mov rolb xor leave jle push icebp sub push cltd clc lret ret cmp push cwtl mov jp pop nop ss xor add test sub xchg pop push and shrb add push push lods mov stos add dec std int xchg mov xchg fadds and xchg pusha cld loope dec add dec lret call dec jno inc (bad) into stc hlt mov adc and xchg loope loopne stos js cmpsb dec push test data16 (bad) sbbb or fildl mov xchg lcall sbb lods sbb ss and mov dec jne loope add or inc add jg rcr sarb les adc nop lods pop mov add mov inc add or std fcmovnb scas es pop and sub mov add popf mov add lea fistl sbb mov repz or inc xchg cmp rclb rol push mov cmp sbb xor mov cld add jo call inc mov mov rclb pushf clc sub push clc mov xor out mov les push add jnp mov add enter adc mov inc mov aaa ret leave stc icebp sahf add stos and mov fildl mov enter add lea mov pushf jbe pop test pop inc es add int3 mov xor mov inc dec std add inc mov lret adc (bad) jmp xorb sub or in pop scas or pop fdivrl add lahf or sbbl inc aad add inc sbb cmp inc bswap xchg push and lock popa mov xor stos pop lods adc out add ret dec fdiv mov faddl popa sub add sarb xor sub sarb scas out cltd jl pop or sub add into clc sbb add std xchg shlb add cmp push popa cwtl dec xchg enter dec sub xchg (bad) shrb ret cli call divb cld xchg int3 movsb adc dec push leave ss rol add cmp pop inc aad pop je mov int lods push pop add cmpsl cmp cmp xor inc push and adc jp test adc jo scas mov sbb stc sub inc adc fs pextrw dec ret xor sub int3 add loopne mov cmp cmp mov rorl dec nop insb (bad) add in aaa punpckldq or adc inc add mov loopne cli int pop popa adc mov mov ret push push test loopne sbb adc and das les pusha xor js rclb xchg push cmp loop in add inc pop fmull cmpl push xor in xchg mov add jle mov lds pushf xor mov test mov mov int3 rorl mov inc mov test rcrb rcll cmp or ss lock or mov pushf or and in shll shrl test pop (bad) enter and sarb lcall popf sbbl pop sbb push mov jnp sbb loop mov xchg sahf jecxz mov shll adc add jle lahf insb lret adc fmulp pop daa test add lret push push mov gs (bad) je mov jp (bad) cmpsb xchg mov (bad) ret enter add ljmp add jmp xor mov jle push out inc fcompl jl inc int xor push test cmp inc jbe call pop mov out jnp (bad) clc ds push enter lods aam add (bad) cli nop push adc lcall inc and popa ret test pushf cmp xchg fcompl cmp bound rolb fs fld ret pusha cmpsb dec push jb daa in adc mov jo push and clc or adc pop xchg lcall adc or repnz add mov and popf add (bad) es or int test jo inc mov call adc pop add icebp jns nop mov sub jmp sbb int inc xchg loop stos xchg add cmpsl divl or lret or daa xchg fisttp cmpsb mov inc mov add dec int3 cmp lods fimull lahf int push and add fdivrs pop subl jae es jo pop jno cwtl xor std cmp fidivl add dec mov loop,pn rcl mov loop add or jl jb lea mov nop insb aas push aas (bad) iret xor jp daa pop nop pop add add stos xchg jo aas icebp pandn mov lret sbb outsl mov scas nop xchg add or dec jle jecxz test stos push add rorl cmpsb add push je mov addr16 pushf xor xor aaa int3 imul dec and add fsubrl inc add add sbb and inc ret xor pusha or and repnz pusha movsbl lea and push mov adc xor test mov and jmp aad (bad) je xchg xor lock add neg and jg lods adc out sub add or loopne jmp out lret faddl add inc dec pop mov sub call mov mov sbb push stc mov and sarl add xor test les in mov lds dec mov or pop sub adc add out jl jbe aaa sbb or aad push popf nop lock or mov loop add sahf int (bad) inc pusha addr16 add sub and in and aam js jmp mov inc pop cltd enter inc call ss mov int3 popa mov aaa and pop add xchg test xor sti add popa push xchg add and fisub aaa sbb push add idiv push repnz jb add pop fdivs dec fs dec hlt fildll cmc cli mov insl cmpsl lcall jns and std popf inc and sub mov or and xchg add lea inc movsb rclb mov or cmp sub shrl xlat dec fs nop mov pop add sub add dec inc cwtl inc dec popa or ret std inc pop and inc dec (bad) adc lahf insb jl mov icebp or adc hlt xchg inc push fbstp cmp add cmp mov js hlt test add jns add loope fcoms or add sbb xchg or xor inc and dec mov sbb int3 bound mov cmp add inc fadds add loopne int imul pop inc dec fstps cltd in lret or ja mov inc scas dec push pop cld aas js add out or fsub fisubr fiaddl jo mov pop push and or invd arpl frstor pop jno jp add push add jo jg add pop clc outsl mov movsb mov jo mov xchg mov js cli bnd jge inc orb adc sbb mov frstor je mov mov lret add les xchg pop cmp mov mov cmp negb xchg hlt (bad) fimull inc push cmpsl lock and push cld or push (bad) push clc les test incl ret (bad) cld pop xchg movsl mov push lods cltd add mov cmp out ret adc mov xor lock inc mov out xor imull mov sarb add mov mov fisttpll or cmp or cmp mov or push inc jb xor xor dec pusha pop xor data16 test xor out fcomps ret popl fwait arpl adc push jg mov in ljmp and out jo mov (bad) sti fstps adc je test add xchg rclb fcomi xorb pop add inc sub insb pop fwait lock add test sbb out jle repnz or push int3 xor testb clc pop mov jg adc lock ret jmp xlat in or dec push sub push inc mov cltd sub pop xor int3 flds fwait out aaa fadd movsl loopne mov and inc (bad) mov or xchg xor fidiv addb popf ds mov jl dec daa orb inc and or push xchg imulb push sub xor aaa popf mov push pop sub and je or xchg dec faddl jmp das add mov and pusha jno add pushf in outsl dec faddp dec sub mov sub and scas or mov or faddl in pop hlt jo pop aam inc xchg dec cmc pusha pop gs lds aam dec test sbb push scas fdivrs fcmovbe mov dec popa xor pushf ret mov mov clts mov sbb lods pop testl and push arpl dec das je dec fstps sbb lock test xchg add mov add dec inc fwait or testb xor add lods jmp int fisub sar pop jp clc xchg inc xor rcrl push ret in data16 add push pop rcrl outsl push mov mov mov pop notl rcrl lods lahf js and xor add inc or andl mov cmpsb add xor je ret mov imul dec std mov sub mov dec repnz decb and test sub mov js lods aas inc std addb (bad) in stc roll mov punpckhwd add sbb inc pop lcall cmpsb sbb cmp movsb adc push movsl add pop mov cmp mov cmp into push push adc xchg sbb sbb es arpl pop jnp add mov andb in stc gs sub dec push pop hlt mov mov sbb clc sub sbb xor ret jo sahf xchg push je insb inc repz jle mov test xor arpl and cmc (bad) push adc rol cmp push jg and mov mov lock add pop lods add mov mov lret push (bad) rclb xor pop jg mov int jno mov fadds push or test mov pusha add cli add mov fwait lock insl incb int3 repz sbb lret imul inc and dec (bad) je adc ljmp mov add mov adc bound aas mov jb mov mov rol push cmpsl cmp cmpsb insl fcmovu iret and cmp imul add aaa mov xor or and and out cmpsb xor rclb mov push or outsb orl add frstor xchg pop push cwtl add jns rcr and dec add mov (bad) ja in movsl call pop inc add mov push cmp lock outsl push fstpl dec mov stc add aaa in mov add das call jmp popa cld add cli sub jno mov jp mov rolb cld add nop hlt pop add add add inc fs add scas pushf into popa jecxz mov in ds and jp jle lcall (bad) xor jae (bad) stos cmp add and jecxz stos xor stos jns add lock xchg cs movsl (bad) movsb pop and loop pop add and mov jb sbb outsl or pushf movsb rcrl aad jl add mov and imul xor dec in pop add jecxz test fmul mov push mov addl xchg mov repz mov pop jecxz inc out int3 jo or jl js add enter fimul loope push mov add in and maskmovq mov push das push pop hlt pop dec in and jns jae ja add fistl add sub xchg mov xchg pop dec dec in stos push add push add mov pop cmp sub dec pop pop rsm inc ds loopne mov (bad) pmulhw je mov add gs xchg add dec pop scas add xchg add cli aam sub add je add pop not in or add mov mov lods add popa adc je stos add mov or pop insb add add popa lret loopne inc adc fisubrl add (bad) in (bad) xchg dec cltd push mov es in cmp hlt add lock mov cmp and push mov add popa mov add sti jmp pop jle dec sbb xor inc sbb push imul mov xlat notb add adc dec mov je jno cmpb dec lea ds and in cmp xchg pop inc lock int and shlb fwait leave enter pop and (bad) subb add dec jb xor cmp pop lods andl jbe mov mov insl in pop add add mov adc and enter hlt ficoml sahf adc rolb push sbbl add adc or aas inc lret jle xchg mov (bad) jb xor shll (bad) icebp cltd or inc fwait pop repz push movsb sahf cmpsl xor adc inc xor imulb cmp cmpsl test out (bad) ljmp stos inc sub int3 and dec out jle jb sbb xchg mov add ret xchg or add xlat pop mov pop js mov aad add and sbb stc pop dec popf rolb orb jo sub (bad) and add mov push and add jns aas cli subl in jmp dec push add addr16 push adc cmp aam (bad) lock add xchg and fs dec addl add test pop hlt sbb hlt sarb jne xchg (bad) or pop iret add xlat aad aam into jns sub pop adc movb out adcb cmp jbe add pushf pop fisttpll mov dec push add mov pop xchg bound push js add xor sub xchg sbb ret add aaa insb xor pop lea sub xchg inc mov lock xor lret cmp fsubl push icebp arpl js lods sub call dec xor ret pop enter add imul xor dec sti inc cwtl mov push xorl xlat sbb push notb jp in into push out adc mov xchg xorb divb push and pop roll jl sti cmp lods mov (bad) into popa inc jp jne roll loope mov add inc inc and (bad) sub test inc xchg sbb jo leave add adc imul addl pop mov mov xchg fcoml inc inc in sub outsl in out cmpsb add (bad) and aad push hlt daa xchg andb or pop push (bad) divl cli cmc jp add cmp cld es insl addb or out add out aaa mov cmp cltd sahf cli pop jg addr16 mov or les mov push enter ljmp sub stos add (bad) out adc mov pusha mov dec jp fimull push dec ljmp jecxz aaa popa ret add pop sbb dec add inc add orl sti and pop push loope dec lret adc andb pop xor or mulb inc mov mov data16 mov mov jo pop add out push jo les cmpsb aas ljmp add mov fwait add add add cmpl clc pop add cli ss jmp xor mov in int add sbb jno add push es mov test mov (bad) xchg dec test add ds (bad) jbe cltd mov mov loope inc xorb jg cmp shlb das or clc in and enter insb adc adc fwait jo dec adc add push inc les fucomip outsb pop jle cltd mov add ret scas xchg dec add add adc mov lods out cld cwtl push ljmp push imul andb es mov sub adcl aad or dec in sub mov (bad) push push add test insb leave rolb or out jo lret loop xchg mov mov adc cwtl sub stc fistl loopne mov inc fldcw js and and hlt mov dec xor aad out mov (bad) in add arpl (bad) (bad) xor (bad) lret or add mov leave cmp jge add adc inc mov nop add jae int3 (bad) add dec mov bound nop lret std popf out push push push push and int mov lods scas or cmp scas imul add cmp ljmp add xchg adc push sbb icebp pop cmpsb mov sbb js fwait outsb nop xor pop sarl sbb mov jae in repnz sbbb int adc lock jg adc inc and add (bad) adc test lea and out pop jo leave push mov add fidivrl add stc push insb xchg rol add mov add mov out jo mov mov dec pusha fldt int sbb mov or add jmp push mov jno hlt add idiv add sbb movsl out fldenv pop mov add mov aam in data16 push adc mov out push add (bad) nop push shlb mov jne ret aam sarb xchg test inc jo push lcall loop mov add mov mov rolb (bad) repnz add (bad) aad cmpsb jge push fwait push add ret fstpt out or xchg mov dec jecxz sub or (bad) mov inc test mov pop mov add lock rorb pop push dec sub xchg jl jnp ret mov (bad) cmpsl sub subl rcr inc stos xchg and pop fistpl adc mov mov adc push add fdivrl addl loope ja xor (bad) mov pop stos cmp clc out and sub cwtl cmp xchg repnz and dec in sarb fwait inc fistp xor sbb push inc mov (bad) sub movsl mov dec imul xchg rcrl gs push cld enter dec sar dec andl dec iret push icebp mov xchg enter push add hlt (bad) aam dec fbstp fdivl push adc repnz out push jo shll cmpsl int mov sbb xchg rorb cmpsl sbb fnsave ret cld jmp or icebp test push dec outsl lcall xchg lret add xlat or stos mov push sbb mov push dec xor and mov pop sahf (bad) pop mov mov add inc aad (bad) popa mov jo (bad) ud1 lea add jecxz insb pusha jno xchg pushf subb cwtl jle add add adc jne and push push cmp ja nop pop and ja add jge mov in adcb add into int3 fnstenv mov and ljmp or lods add cmpsl dec pop add add xchg push sbb jle in int push add jecxz sbb mov icebp inc sbb cmp sar or test mov pop lahf leave mov rclb push mov and js and into cltd test arpl pop cli xor (bad) and mov inc inc mov addr16 pusha pop pusha ljmp add lcall in xor ret pusha add mov push or popl outsb in call loopne stos and jle and mov pusha mov aas add inc and fsubrl in and fisubrl nop and mov int push (bad) pop inc lods stc push add mov jne subb fcmovnb jno mov in dec xchg fist xor lock (bad) adc out pop jecxz fildl ljmp roll cmpsb int3 mov jge lods les insl sbbb mov testl adc daa js push cmp mov mov cmp stc add push daa cmp sub dec leave nop bound sub cmpsb jns pushf xor pop pop sar adc xchg adc jnp jb out jbe iret scas test and sahf pop test jp pusha rclb ficomp into add or andl fsub push fwait or cwtl and je sbb add icebp divl add cmpsb pop (bad) cmc jnp pop cmp push test dec mov mov mov pop cmc aam rcrb movsl dec pop cmpsb add xchg daa push test aas pusha mov xor lods es outsl test and add jl lock jae add fcmovnb (bad) rcr fsts insl adc pop negl xor add inc in rcr push roll (bad) jae add fwait mov sbb sbb jbe movsl lret gs add pop jae add mov dec and sbb xorb push add sub add mov lock cmp add and enter outsl xchg sarb movl push out ret (bad) cli lock cmp loopne sbb call xor add scas inc (bad) fs int ss jne add push mov push jnp jmp jno add into cmp shlb ds loope add push adc cld add pop imul shll mov add pop xchg inc jne pusha (bad) pop icebp xadd pop add add ret mov jo adc push sbb movsb fs daa into add imul push and xchg push mov test push in mov lods lock (bad) clc push ja jg rcrb add sub out and add mov popa mov mov jecxz es (bad) mov psubsb (bad) mov pop add leave add cmpsb cmp add lock nop bound call pop cmp hlt dec add mov mov mov mov jg xor xchg jnp dec mov inc outsl daa mov cmp add jp std pop add fisub movsl add inc mov fsubr inc mov hlt xchg mov inc cli xchg out nopl (bad) jbe int sub mov testl stos das mov pop cld add inc push inc jl pop jnp jp sbb setbe inc stc andb sti mov sbb faddl ljmp sbb mov nop mov les add sub pusha pop push add jo (bad) pop ds (bad) mov in jo adc imul or add dec imul add jnp adc mov pop push xor cli mov je xor call loopne ret add std fimull mov add fild dec mov and adc pop sbb fildl add pop add add push es add stos mulb xor stos dec les push cltd jge pusha and mov jl data16 outsl xor shll idivb (bad) sub pop pushf (bad) mov jo stos cmp pop std fbstp repz and int3 inc add or enter lock fwait pop xlat test mov fidivl add pop (bad) add push movsl outsl out sysenter cmp sti xchg insb inc fnstenv testb icebp jecxz mov dec (bad) xchg (bad) call and aam push jle pop mov flds sub test add mov bnd mov or (bad) pop mov mov (bad) xchg pop nop lea in dec add cmp sub fwait (bad) push push mov insl add xchg cmpl fadds cld xchg lods jno add jp pop add lds mov (bad) lds or sub inc jl cwtl sbb mov addr16 jo (bad) push or pop inc nop and aaa dec mov jo adc add clc cmpsl and stos mov repnz add or mov sbb ficom add jne mov add xchg (bad) mov lods cmc sbb add and adc lret mov loopne inc negb inc aas (bad) mov sub shrl jecxz add aam dec pop xchg pop imul arpl or rol (bad) jae jo add pop in adc (bad) shll aad clc roll lret adc lock lea dec pop in pop jbe shlb pop dec test mov adc adc xorb adc jno xchg mov icebp mov test jbe push scas sub inc (bad) lds pop loop ss pop jmp (bad) xor add data16 mov mov (bad) loopne gs cmp std pop or lahf jg xorl lcall push push pop in sti jmp in insl add out into push push lret add xchg mov mov jmp pop mov sti inc jl movsb add rcll lds fwait add fs xor loope lds or inc pop cmp fwait add mov inc cmp pushf shll adc dec pop imul mov or (bad) xor push add xor popf add xchg cmpsb das pop xchg mov sub cs orb neg add xchg (bad) verr sub out fs enter gs add pop mov stc fisttpll add add sti (bad) in pop add arpl cs mov scas add xor pop pop add add push out xchg pop mov fdivs and add nop insl mul add movsl std cmp xor aaa (bad) push sub jge inc mov jmp xor ds out loopne jo stc add iret lds shlb imul int3 sbb insb inc jns add inc (bad) add scas fldl mov hlt jge sub mov repz gs xchg roll add mov jl and jb stos jge adc push sbb fmull in xor sbb and (bad) stos imul inc stc in cwtl das xor je incl rorl lods notl pusha outsl cmp add (bad) and pop jbe pusha mov fadd cmp orb in (bad) stos fstps adc fisttpl inc mov bound push icebp cmp rcll sub mov dec sbb xchg loopne ficompl shrl shr xchg mov nop test xchg inc xor (bad) jmp ficoml jg dec mov nop jo inc cli add push or push cmp mov add xor and add adc scas addr16 add cltd jno into adcl push enter mov mov iret add pop cmp fidivrl fisub xchg stos push loop cs daa (bad) outsb sbb pop nop mov xor inc push mov data16 leave add stos xor ss loop dec orb pop sbb leave iret xchg mov jge jnp cmp cli jo cmp sbb lcall sahf mov jg sbb adc fdivrl add push (bad) pop add mov stos add ja incb dec adc out call clc add inc pop icebp pop rcl xchg mov add lods adc add dec adc lea push pop adc aam es pop inc add loop wrmsr jnp push loopne mov and je add mov js pop dec inc orl sbb int3 loope add rcll sub pop (bad) cmp rcrl fdivrl jle dec or mov mov add scas push jp in add loopne cltd add leave jb loope fcompl and add out push push cmp xor add sub jnp sub push stos sahf jae inc add (bad) icebp iret add push sbb push popa dec xchg jge test push cvtps2pd lcall cmp cmp into orb xchg add lods movsb mov push push mov ret dec jb and cmc adc call cwtl out pop daa jns mov add lret cmpsl sbb or adc inc adc aaa jno ja in add fldenv lds test aas nop adc cs jno mov add add into cmp xor jp or testl dec mov jae idiv clc mov shll test add in adc loopne (bad) loopne aas push inc mov f2xm1 mov loop pop xchg hlt cmp jno stos (bad) and inc rcrl add pop sbb pop adc xor dec pop scas ret repnz mov or mulb pop cmp xchg test add mov cmpb mov pop jo mov add lahf jle lock or mov mov dec sub bound add clc hlt cs jae xchg lea ja (bad) mov cmp push and test (bad) fs (bad) sub pop js add sub xor sbb out add jge mov xchg push cmp addl adc add (bad) cwtl cld add pop lret push mov add dec or push call addr16 add icebp shrb out push inc test scas call add inc call add mov or sbb jge test push or mov dec add push pushf pop cmp adc movsl adc dec cmpl mov in in (bad) out decb mov pop nop iret sub add and xchg enter xor test cmp xchg rcrb (bad) add pop sub xor push add sub jge int pop inc das in js mov cmp vmovdqa jnp sub hlt inc or popa sbb sbb add mov jo scas add pop mov shl mov lret pop les adc cmp mov sub in push insl or sti and inc add push and lret lea nop dec mov push dec fcompl lret pmaddwd inc mov fdivr add push xorl or (bad) rclb push xor in adc in bound adc push mov outsl pop lret add scas lock mov or pusha and add dec mov jo cltd add imul mov lea les push test xchg mov movb xor xor aaa pop mov stc cmp rcrb out cmp in les jp fdivl (bad) int divb xor pusha push pop and fwait push or (bad) (bad) push nop and xlat mov leave pop add insb sbb loopne repnz inc dec (bad) xor mov cmp push jge stos in mov add jecxz sahf push mov inc addr16 clc cmp subb (bad) jne ljmp jo add xchg pop mov inc test lcall mov cmpl xchg adc mov cmp push inc push dec push and jb js mov xchg in (bad) sbb (bad) call adc mov lods add in nop loop out mov (bad) (bad) out shr push sbb dec cwtl add or jle cs out add (bad) pavgb push jl mov xchg hlt jnp jecxz sub shr jl add push dec into jb stc jns xor roll daa out fadd jecxz je adc (bad) jns test xchg add and mov call jmp repz inc loope adc xchg push add stos mov mov push hlt xor fs aad mov mov in pop pop outsb je or jne daa push inc dec push push sarb jg or mov add and xor add push push nop add roll incb push or xchg pushf inc lea insl repnz sbb jmp jp ret add add ret imul pop add pop xor xchg pushf add in inc lret mov adc (bad) jb adc adc xor outsl dec xchg and add mov push ret clc cmpsl es adc and add pop out in xchg xor add jle and leave cmp and mov xor xchg add cmpsb or lcall addb lret imul data16 or fcomps dec fisub pop mov dec stc xor pop add push shlb pop pop jl sbb and insl testb mov jmp add push mov jno sar pop cmp fwait popa cmp out (bad) lock ljmp fnstcw inc scas rcll cmp and dec ja imulb test int3 (bad) enter cmp mov sahf cmc addl or adc call pop aas sub fild dec pop out xchg dec inc mov add ret or mov fnstsw jb xlat jo add (bad) jg pushl add xor bound add arpl dec cmp xchg pop addb aam cmc sbb inc cmp in ret jg dec or jl add sub xchg add adc jne jns mov fbstp sbb inc add clc outsb cmp jmp sarb add xor xchg shrl sub popl insl mov aaa cmp out add fsubrl add inc mov jnp xrelease add iret xchg sub in add lret xchg movb mov rorb cmpsl add in loope lret fs popl incb lods jle,pt sbb les mov lock adc and push fucomp in mov cmpb mov inc and sbb sbb add mov out xchg loopne,pn rcll add and jo incb clc pop stos adc loop add mov into or add insb fisubl or loopne imul sbb pop adc cmc xchg push cmp fsts mov and incb (bad) ljmp lret rclb lret jmp xor or data16 out add add inc xchg add pop aad dec sub push add dec cmp add add les jl push xor out ror dec cmp or sub sub (bad) test add jl bound cmc mov or dec stos jmp outsl push loopne mov pop lcall mov les push jg add pusha mov add and mov jecxz iret pusha aam add lea add testl ss fldcw fbstp cld inc pop xor fsubr add cmp xorb addr16 lods repnz pop insl adc andb or jnp movl xor add xchg fildll inc xor mov cmc push or mov and pop xchg (bad) push rcrl sub pop or jl jne mov pop aad out or add push cmp or cmp pop jmp pop add frstor (bad) push add mov jl and inc out test xchg pop fisub push popa pop push dec bts push jnp cmp sbb mov pusha or insb addl movsb cmpsb dec add and jno mov push aam or or rcrb push inc loopne inc add ljmp push jo push jne add inc dec dec sarb js sbb push add or mov call cmp add pop and xchg enter popa mov pop push pusha adcb lds adc into neg lahf pushf sar xor push cmp or push (bad) loop ljmp aad xchg mov push mov add retw mov dec cmp int3 or imul mov jl mov pop or add ret rclb fcomps push les sbb add je rolb incl fwait gs add xor cmp sbb sbb xor push sub or fdiv mov pusha dec lods add pop cmp pop sti sbb push stos in mov outsb add sub mov xchg add cld enter jmp bswap (bad) xlat dec add mov divl andl push push jp dec mov push lods push test sbb inc rcr or xchg add cld nop push (bad) lock dec jne xchg mov je xchg aas movsb add pop mov (bad) rcll rol jo incl in lret lods xchg mov add into pop or or add (bad) fcompl jmp call jnp xchg inc fcomps mov inc hlt sbb sub pop mov jmp jo xchg rorl pop inc sbb out dec pop fwait adc bound rorb ret jno dec dec push cmp sub pop (bad) ficompl lods inc in pusha sub (bad) imul inc inc or pop push ret out jns test cmp pop add inc dec out mov mov test in push jmp sbb pop inc fidivr leave cld (bad) sub lods cld fadds cli adc call les jnp mov test xchg das xor cmpsl mov add xor ljmp cmp iret or push loop xor mov mov orl xchg int jne (bad) mov loopne lds dec xor dec nop or push cltd add cli in shrb jns repnz cmp (bad) pop xor dec lods mov lock dec jg add outsb iret loop sbb aaa jl jo add ds js jg mov in pop repz add mov push icebp add inc outsb rolb jmp fwait loop mov out mov enter push ficoml int pushf jbe jecxz and inc loopne jae scas mov sub xorb jnp cmp add movsl xor repz (bad) pop or mov jb xchg fcoms lret mov cs stc rcl mov fldl adc loope cmpsl in lods add mov fidiv add push fiaddl fmuls mov iret or andl add mov das test fiadd (bad) testb mov imul loope or test jmp push out jne stc dec cmpsl imul mov out roll jb adcl mov inc push lds add rolb add add push icebp in ds orb inc add cmp lret add in push aaa mov clc dec test (bad) mov sbb test inc mov clc mov dec pushf sub xchg fdivr push jecxz pop sbb jo dec repz sbb cmc loope shrb roll loop scas sbb imul mov enter inc sbb add adc fidivr fcompl push (bad) cmp dec cmp loopne subl je mov sub int3 (bad) pop add sub je div xchg jmp test mov sub or cmc dec js in (bad) fwait mov cmp out cwtl add hlt leave jae push insb addl inc fistl test push push or (bad) mov cmpsb jo mov or mov dec pop lock orb bound cmp xchg jae mov enter add ret ss pop xchg hlt imul pop fnstenv pop repz lret pusha lahf in nop mov aam inc or mov jle test rorb add or cmp dec xor add in inc mov call sbb pop out xor dec in or inc xlat decb sub addr16 aaa add (bad) xrelease and call mov insl dec or clc in or lds mov out lock data16 dec arpl push push (bad) into aad push inc iret fildl jnp xchg pop stos mov vdivps test paddb clc sub dec xchg cli adcl mov cmp lcall iret cld sar je jmp orb (bad) push xchg xor fsubl push lds es outsl addr16 call add lds int3 xchg mov out xchg sbb loop jmp into xchg ss ljmp (bad) or dec call adc mov and add mov lcall inc mov and sbb xlat outsl nop (bad) out mov mov or pop xor adc cmp pusha and and das inc cld subl lcall ja sbb mov or or dec mov clc scas and lcall sbb xor inc fwait mov jmp add enter xchg push in mov imul nop or jle xlat mov or add sub and jae mov test pop outsb inc enter pop (bad) mov jae cmp jg mov leave (bad) das rcl adcb push pop cld mov jmp mov (bad) das sbb cwtl jo loop lods push outsl sub in push add or mov bound (bad) pop ret test fcmove shrb jo mov cld jb push icebp leave push adc sbb and push push repnz cmc push xor and and jne cmpsb adc cld xor cmp mov dec repz shl into add sahf pop xchg sbb mov lods mov and inc mov add sub adcl popf movsb push dec ror mov repnz and mov test in and jl ficoml sbb push (bad) std pop rolb or aaa pop or pop jnp bound xor test xorl fcompl pusha (bad) lds or inc sbb inc hlt cmp ds rcrl test lret cmp add aaa fisubr or pushf mov out pop dec jae and adc cmpsb adc (bad) movl jmp dec sub jo cmp add cmp xchg pop sbb loope jo dec in or xor sub add mov xchg push sbb sti lds ljmp lret cli sub push mov ret in (bad) (bad) mov hlt ret jno pop xor cltd adc sbb nop pusha lock or es mov jecxz pushl pop loopne hlt popa sub mov pop mov cwtl fs adc add pushf inc idivl loopne cmp inc cmpb jnp or aas dec test lods insb pop adc push adc dec add xor inc mov sub hlt gs arpl movsb add jmp and lock std xchg mov mov cltd and lods pop movsl push dec clc les sti dec pop inc sbb repz cmp fimull sbb mov pop cmp movsl shll nop in sub dec mov jno scas pop mov insl insb inc in in (bad) clc or mov or inc add xor sub jnp out lock push scas cmp les cwtl push aad lret add and xchg loop sbb xor sub (bad) add icebp xchg (bad) jge stos movsb orb mov add inc xchg fsts iret xchg xor in icebp es add jae cwtl jb and and test punpckhbw and movsb inc dec neg jae iret sub mov adc jecxz (bad) in mov adc and jb das or ja fisubl xchg inc push sbb test pop faddl js cmpsl rolb fist sbb dec leave push addr16 xor inc fcomp nop adc int3 cs rol pop cmc stc shrl mov pusha dec in and sub xchg pop cwtl in xorl mov fnop jne data16 hlt jecxz and cli sub loopne sti xchg sub mov sbb ljmp jl data16 popf not (bad) xor xlat jnp inc stc push test shrb in cld ss mov loop add es cmp cwtl push xchg mov (bad) aam fadds sbb inc scas push dec jl out xchg scas imul out aam sbb xchg hlt je pop icebp (bad) icebp adc daa add add fistpll pusha aaa sbb jp push xchg sub push cwtl js cmp xor and push inc (bad) xchg add fwait cmp pop andl add stc inc mov mov xorb (bad) test push xlat add lcall sahf int3 adc mov dec lea je mov sbbb mov xchg inc sub pop inc jnp cmp (bad) repz xor xor popf pop sub outsl outsb push rol xor lcall or (bad) outsl out xchg mov ja add or hlt (bad) push jmp les test lea stos mov scas sub test pusha xor mov out xchg xchg (bad) mov push mov jo cmp xchg out adc orl jo test jp orb popf push and adc sbb sub sub sub and test sbb push jo xchg add fidivl mov lea loopne repnz (bad) xor mov cwtl add jno mov dec loopne add xchg sti (bad) js sbb pop add jnp and or xchg arpl mov jp cmp inc mov add mov push and loope test push mov popa jns popa cltd dec push pop and loopne add xor mov and mov ret pop jp mov xor rcrb pop add mov xchg and jg mov push dec enter xchg push push mov sub add cmp mov xor sahf loopne xchg add out cmp das inc or pushf stc (bad) repz shlb pop dec popa or test notb sbb push stc mov push push xor sbb xlat lahf push inc (bad) rorb xchg cmpb sbb cmpsl xor mov sbb call jno sub jne insl lret fs and mov daa (bad) xor adc je mov das mov fbstp push addl daa fdiv or flds rolb cmp jp in adc jno fs jge dec cmpsb add (bad) mov mov xchg (bad) adc test fild sarl sub shlb pop iret test rcrl adc xchg lock ret add mov mov mov xor pop add in adc nop enter popa roll shrl pop add xchg add inc cmc aad inc jae add shrb pop ret jns insb jge sub (bad) mov pop daa sahf dec xor add mov dec aam pop data16 push mov and in cmpl insb add lods jbe ror jne jge sub xchg adc xor ja mov aad test mov sahf movsb das clc popf inc pop sbb das jb jne xchg or mov adc sbb cmp popa enter xchg adc xor xor jmp pavgb cltd add pop pusha adc mov mov pop xchg cmp dec jbe inc popa mov aad or movsl adc mov hlt in outsl add mov subb pop std push enter in das out inc ds pushf xor pusha xor mov mov pop xchg mov jbe sub pop add scas aad dec xchg test fnsave test mov pusha loopne xchg sbb add pop jnp call jns jle rorb sbb or mov dec add xchg enter add sahf inc jae mov xchg rcrb popa ret dec movsb aas test lcall hlt push add add pop pop sbb mov mov fldl add addr16 dec lods jo loopne fsts adc xchg inc call (bad) lcall jp xchg adc in push mov cld mov loopne inc mov aaa pushf sbb pop cli dec loopne dec lods or fcmovnb add dec imul lret in push pop test pop xor xchg fmull pop lock movsl add adc orb inc and sub ja add adc dec fstp lods jmp pusha dec mov hlt icebp sarb aam inc js pop xlat pusha sbb cmp add sbb loope cmp add pop mov adc add cmp xchg call mov jae add jmp add push repz and sub adcb cwtl pop adc ds inc daa in add loopne imul repnz mov jmp inc scas fldl popa fimul xor and call inc sahf xchg inc and add sbb pop in ret pop push cmp inc mov xchg add jl rolb das jmp lock mov pushf sub inc push icebp sahf enter mov mov push and mov dec push mov (bad) xor add cwtl and adc mov in pop sub adc jg pop js add xchg fdivrs scas pop xchg rcl inc jl dec rorb or xchg jne add push mov flds inc dec jno nop sub shlb dec fadds cmc fstl fcomp inc cmp daa add mov adc test sbb pop inc popf iret (bad) mov dec cltd pop je cmp cld pop loopne add pop or loop sbb sarb loop or or sub xchg movsb les jl call inc xor jp xchg or inc and lods sbb shrb or or mov sahf pop or and add add fistl sub mov push inc lret jg jb mov and cltd adc or mov add clc sbb js add (bad) aas lock inc dec jo sbb inc sarb outsb adc das push mov pop add out xchg sbb add adc imul fiadd mov loopne adc mov jns test or mov xchg add (bad) pusha scas lock icebp dec aad adcb mov movsl mov sub inc mov adc popa dec xor add mov sub sahf xchg lds add inc xor pop inc xchg insb mov mov jne sub cwtl inc mov and lcall xorb lret or dec xchg dec add jno push sarb dec xor cmp mov dec int3 mov insb jno jno adc pop adc pushf dec pop cld push mov pop inc mov xor mov lock inc add (bad) pop mov lods cwtl mov add adc mov push leave gs mov add ret jo out lret popa mov mov mov jbe les inc cmp arpl ffreep add push popf (bad) lea push sti add mov into jae jp mov loopne mov stc sub (bad) mov push cwtl and lods cs leave bound cmp jbe mov xor (bad) jno add mov ficompl fsubrs lret sbb in mov push mov sbb es outsl mov (bad) call xlat xchg (bad) lret pop mov insb roll xchg fldenv add pop or add inc adc sti enter enter int3 inc pop shll jo jmp leave mov lret sbb adc push and mov adc ljmp inc sub in mov inc jbe sti stos fnop or cmp push push inc enter rorl mov arpl movsb mov and mov insl dec mov (bad) test out nop aam jbe js cmp inc push pop in add (bad) test fbld cmpsl ss das or dec add fistpll dec add or jecxz imull in sub xor add out and add sbb shrb cld mov ret pushf popf fbstp dec sub addb je sbb jae add pop aam or or push xchg mov mov lret cmpb test jle and scas test xor sbb test add fs inc imul inc mov aaa pusha aam imul nop data16 loopne pushf pop cwtl add mov in addr16 bnd fisttpl xchg jnp scas or cli popf cltd fs mov and add cmp int3 pop pushf cmp dec add cmp add jne mov add (bad) (bad) add aaa fwait andl sub xlat add std lcall mov in add (bad) out cltd ljmp push xor push out mov mov jg jge mov sbb jno xchg lahf out sahf dec dec call stc popf (bad) xchg test pusha lods mov sub cli pop sub in add fsubl dec daa icebp jecxz add push xchg pusha imul add adc (bad) adc inc inc and mov mov mov pusha test pop xor xorl hlt push cmp test std dec repnz movsb push mov add movsb pop lcall out cmp test add sub loope cmp test lret lcall pusha sar je clc sub mov (bad) add inc and mov in movsl sbb cs push adc or or stc dec je jns add cmp push jb push add inc jne mov pop iret dec jmp adc popl je in mov dec push or add dec inc jle nop add inc aas xchg (bad) pop xchg mov mov mov or xor (bad) arpl jmp mov pushf push inc pop lret test cmp cld pop mov push ret pusha or fmuls dec adc sub scas dec movsb fnstsw xorb pop repz mov movsb mov adc xchg pop pop push pop xchg (bad) cmc add imul xorb jmp xchg pop mov push push paddsw sahf out fbld icebp hlt (bad) inc cmc add xlat mov clc andl sbbb loopne push hlt adc (bad) mov sbb xchg or inc inc push adc call sub cld add jbe ljmp cmp jb mov push add mov and pushf add mull add int scas cltd std loope pop in sbb mov push arpl lcall dec jmp push mov ret nop add es aad lods sub imul pop dec mov inc loopne,pt add cs inc xor imul add repnz lea imul add rclb daa or bound inc dec mov mov lods xchg out sbb cs add mov out or ror (bad) mov push pop push xor push sti mov imul (bad) mov add xor lret sarl mov inc outsl nop or and push shl mov sbb dec add leave cmpsb icebp jae in jno lods (bad) insl push les add sarl out in xor clc int3 and call mov ja call ret dec js sbb divl adc add fisubl mov and xchg rolb jno pop leave xchg mov andb jns mov push fnstcw add xchg imulb dec sbb pop mov repnz (bad) xlat dec icebp rcl xor jnp lcall fild push mov jge push sub or push xchg int3 test out and bound std mov or mov adc sbb fs xchg inc outsb pop mov add (bad) mov sahf add mov xchg repz in or cmp mov cmc (bad) icebp pop divb ss or jge dec loope mov push scas push andb mov add sub adc push (bad) loope mov cmp xor cwtl push dec pop mov fistpll or and add push fs nop bound push xchg xchg inc es sti int3 jb add test sub stos jo test idivb adc cmpsl add or mov add jno arpl push xor inc pusha inc pop mov adc pop add loopne add (bad) xchg pop dec or notl push xchg jb xor ja pop and add dec adc cwtl cmp inc pop inc xor adc or xchg add shrb int3 hlt mov and sti adc or lahf mov add jge mov xchg adc xor cmp es cmp dec idivl cmpsb jmp sahf add add xor xchg push cli (bad) dec sbb inc mov sahf xor hlt test stos pop add inc push xor jmp and cwtl and aam sub fmuls xchg inc adc sub bound jae cwtl pop push adc sbb push arpl dec mov ret mov out jb int leave mov mov lods (bad) cwtl gs add sbb rcrb sahf fsubrp add (bad) cmpsb jmp idivl pop sbb dec mov and xchg test rclb push add mov in xchg gs sub pop mov and cmpsl pop mov rcr xchg imul dec mov mov push and pop jmp add (bad) push mov jns dec outsl adc mov add cs sbb dec sub pop cmpsb iret jb push add lock icebp (bad) data16 push dec mov cmp andb add adc sbb add mov add push dec add inc dec fchs sbb out imul imul pop cmp sbb out sub adc push jne sahf jle mov mov and fcomps movsl sbb jae adc sti push mov imul adc fnstsw mov mov stos js sbb imul mov das inc sbbb ljmp lods dec aaa fsubrs and lret jecxz mov pushf xor and dec ret fmull mov push movb add adc dec adc or pop cmp lods sbb mov scas lock mov add inc pop lcall add arpl add test xor pop push cmc add dec dec mov add dec add ds jle pusha or (bad) lret add jo mov bt xchg fldenv daa jne push cmp test popa out inc pop lcall xor fldt cltd in push mov nop sub pop mov push (bad) lock cmp push aam icebp test add mov pop out addr16 dec push add in fdivrl add sub inc ror xor push addr16 mov insl add jne pusha add and movsb sbb test jle pop ljmp enter imul mov dec outsl sbb sbb and cld push xchg adc fnsave mov xchg push popa cmp stos rcl lock icebp push out sub aad pop (bad) xchg shr inc add aaa ja mov js add mov hlt cmp dec pop insl daa xor pushl pop pop push cmc jo lock mov jno lcall add add shl aad dec ss les cli inc dec int add repnz jbe adc gs mov cltd call sbb mov add std mov xchg mov mov fadd cli mov lock add or popa xchg in inc mov loopne stc ja (bad) push jp in push sbb fsub xchg pop sbb out fs or mov xchg push and dec movsb jbe pop enter adc push movups mov inc xchg pop sub faddl (bad) dec orb fs add fsubp ret or pop pop scas test repz pop inc jnp push sub out or std inc cmpb aam repnz cld enter mov adc mov imull push adc xlat add or inc sub add mov xor setg xor rorb (bad) pop fldcw xor insb jp and adc sbb or lock and xchg out jg aaa call xchg gs mov stos popa jbe loopne enter jno sbb sbb cli push xchg mov add inc add mov clc mov bound out adc cli flds dec sbb (bad) js aam jo cmpsb jle adc mov or inc mov dec loopne push pop and (bad) adcb xchg out nop or call in movsl fadds int mov scas fbld ljmp dec add mov in imul sub lret std jp out mov xchg outsl movsb rolb add xchg insl or mov pop jo nop add xchg popa clc dec xor jno jne add mov inc iret cmp push pop cmpsb mov loop mov jge ja fld les outsb mov or repz pop mov das inc cmc ss test sub mov sbb mov outsb jecxz inc fildl sub sbb jp or pop lret push fimull adc sub js loop inc pushf sbb dec jmp add mov roll push dec int3 jge pop add lds dec or cmp add inc ja dec test or lcall cmp fwait jno jo pop add popf pop mov cmp shlb add inc inc test dec fiaddl sahf in shll add scas popf pop jp rolb cmpl clc add xchg int cmp jae insb mov fisttp lret testl add cmp pop xchg ljmp bound jb testb sahf (bad) mov cmp mov add pop mov fsts push jp popa push lret sti test rolb mov pusha inc pop mov lock or (bad) dec inc es inc mov (bad) fistpll or cmp sarb std mov add add or add mov adcl inc rcrb pop std cmpsb add mov dec adc gs pusha mov xchg movsb cltd andl cmpsl testl add add pop push push push sub insl jle jp insb out (bad) adc xchg cmc cmp out loopne mov jae add jl cmp inc pusha jp repz stos in jecxz xor push xchg ret cwtl cli shrb add mov add popa lahf jp mov popf pushw or inc mov and (bad) (bad) clc push sbb jno nop jb add js mov or insb rolb add mov pop add sbb (bad) jno outsl addb inc jmp or rolb xchg nop stos ret cmp mov sbb cs (bad) and nop sub lods pop call insb cmp in loope aas xor or push sbb nop sbb add std pop lahf add or and ds sub add call pusha xor mov pop jmp test fsubrs add push stos push das insb out clc or inc (bad) fcomp stc test cmp orb sub shlb xor pop push add push daa pop jle call mov (bad) ja test add or out data16 mov add pushf add lods sbb dec add ljmp hlt adc cmp pop (bad) xor xchg lea adc call decb sarb adc hlt dec (bad) aad jge add lret in popf add push sbb pop push add mov xchg inc jo pop out pop add fcomi lahf add xorb fprem1 add xor out hlt movl ljmp xchg lea and outsl add xchg jmp inc or push mov stos xor xor inc sbb dec aas lret ljmp jl mov add enter mov dec jo jp loopne jg add add jbe dec adc push mov in lods in sub mov (bad) enter and mov orl cld sub adc or cmp add js clc aas sub loope or test add sub add and loop inc shr xor pop cmpsl lods (bad) jne sub lcall mov int pop sub in icebp rorb scas pop imul pop and std pusha mov sub les adc sbb mov nop hlt pcmpgtd pop sahf add push jo and cmp add imul outsb xor lock add fmuls adc mov jno fldl addb adc xchg push add clc repz popa aam ret stos std cmc cs sbb mov mov mov push js add jnp sub or dec cs mov ret dec stos rcrw sti sbb into or std mov push sbb jno mov add push pop sbb and cmp cmpsl jle cmpsb cmp fildl add aam stc sub (bad) enter jb in jnp add nopl or arpl lock add sub lahf sub add les iret movsl arpl orl and mov or ds sti test (bad) je push lcall xor jmp add pop call insb ja add mov mov pop pop cmp pop fstl xchg push and test mov xchg push sbb pop mov or lds nop fsubrl push inc (bad) test nopw xchg inc inc loopne inc fidiv or lods mov pop in clc lret adc scas adcl add xor adc cmp movsl inc dec out or add mov mov mov jmp (bad) icebp jmp xor xor pop dec movsb xchg add push out ja rolb xchg rcll add sbb icebp cwtl test js hlt dec or add fiadd sub xchg lods inc mov add data16 mov and and jg imulb mov cmp insb orb dec movsl (bad) insl add repz into lds or cs mov rclb loopne js ss add fnstsw aas gs dec les leave pop xchg add push ss and inc jl add call ja inc mov fdivrs xchg mov data16 int3 cmpsl xor add (bad) jo ljmp lret inc push push aas or arpl mov sbb sub mov xorb clc mov xor mov lret sub xchg dec daa movsb std dec lock or push push cmp pusha inc cmc and push or js cltd or movsb push out jno add dec popf (bad) popa es xor icebp sub sub sbb dec movsb adc xchg ljmp and pusha add cld (bad) jne outsl sub cmp add mov cmp add cmp int3 dec sub xor adc mov pusha in cltd aas sbb xchg xsaves xlat mov out push pushf add inc lods add cltd add pop lea popa fs cmpsb in sbb (bad) inc mov enter add enter fcoml inc xchg test sarb push sub push xchg js aad adc mov sub add jns jno xchg mov fcompl and movsb enter sub pusha int les mov xchg inc jnp pop in xlat xor or repnz into add add pop mov push insl pop mov pop popf and (bad) xor outsb xchg (bad) sub mov sbb xlat shll insb dec xor inc inc dec stc add xchg or leave add divl aam shr sahf sub in or jmp cli add and sbb iret inc push xor out in clc ret jmp out add es popa ds and and push xor pop or ja sub and nop sarl addb mov pop outsb rcrl dec in pusha mov add push push push les and dec pushf (bad) repnz xchg je xlat mov sub push lea add adc xchg addl cmpsb xor push adc or push (bad) jmp or jno ret fdivs insl fisubr inc aam or pusha (bad) push inc cmc xchg and cld pop xlat push and push mov out daa inc sub or jmp adc lret jge pop push scas les pop movsl nop nop popa push lds repnz arpl pushf dec ljmp xor dec jo or inc orb adcb ja and clc int3 ljmp sub push mov lret xlat and or repnz cmpsb mov push mov incl xchg pop shr jg and cld in mov popa mov gs loopne sar mov add ljmp movsb sub scas pop xor into sbb (bad) push cmp nop inc jb pop (bad) xor andb out in mov push ja mov fadds test incl jne jnp repnz es and ficom xchg mov fsubl or dec push std jg stos in xchg js add das (bad) scas jl cld jge faddl cwtl fisttp rcll pop loope js sub das int3 adc sbb push push (bad) stc add or pop inc ljmp aas roll and pop or dec inc mov cmp push into mov insl xchg (bad) lods add adc test xlat pop or pop cmpsb jnp jg shl shrl nop mov into and pop mov (bad) or inc dec test faddl popa icebp pop notl or les push leave int3 xor insl sub add xlat xor ja ds in into dec mov xchg mov add imul xor mov xor mov je lods das add cwtl in mov add nop loope or ffreep cwtl xchg outsb inc lods push add repz mov or das rolb fmul add xor repz rclb je and jg push cmc inc pushf adc push sahf and and dec inc in mov ret movsb add mov (bad) mov cmp xchg mov add js xor or into mov (bad) lock or jne rcrb stos aam pop into les or push andl int3 mov cmp jno push or roll mov dec pop sub xchg adc test dec cmpsb xlat dec mov testl lahf lcall push and cwtl scas push and or inc dec cmpsb ds cmc inc jle sbb cmp sbb les mov sub add (bad) and mov sub mov pushf xchg jo pop insl mov jae mov push dec dec and and push jns sbb (bad) int3 mov pop je inc xor sbb xor scas test pop inc jb adc xchg stos les jnp sbb mov xlat adc jns in and add push je js inc xchg ss add lods ds mov gs jbe enter movsb cld out sub xchg adc cmpl sbb outsb mov pop pop sbb cli xchg and test mov or mov or into sbb add outsb adc lods aam pminub inc mov fistpll fnstenv arpl rcrl cwtl push add lea adc or stos fdivp test bnd push push sub hlt pop fs leave test sbb orb (bad) (bad) sub mov and inc jle add out sti dec data16 mov in mov or int3 lock cmpsb in sub test ret sbb add xor add fisubrl add test mov sub popf (bad) aaa int3 mov cld xlat mov push pop ljmp fistpll jne les int ja je pop or add insl jge lcall pop lods clc icebp ljmp xchg rcrl into sti and or mov mov or dec sub adc lcall repz xlat fcompl test jo mov lea push cmpsb mov pushf sahf cmp rcl clc fwait in nop or add cmp pop adcb adc jl dec add mov js (bad) adc add jbe iret inc push add push fbstp rorb cli or sub prefetch aam les ret int3 xor add sbb jle dec lret xchg pusha test (bad) inc mov ja dec inc nop sbb cmp movsl mov lods sub (bad) inc and xchg add mov jl mov shlb decb pop dec sbb pop or popf xabort and cwtl in or aad insb jno,pt push inc push fildll inc in fdivp jae mov cmp mov jbe ja leave xchg mov inc fwait ds jg addb sbb pop push out mov cmp push jmp jno (bad) jne sub jnp pop aas mov inc add inc mov daa cwtl mov pop and lcall add adc loopne mov or add cmp and loopne out push orb fdivl inc cmpsb in jb sbb xlat inc cmp cli (bad) scas add test jge adc xchg sub inc mov movsl call sub add fwait in fmul cwtl daa inc les ss int pop mov push ljmp shlb or mov cmp js sub cmp pusha loopne inc test push pushf (bad) mov add xor or insb xchg test test lret add repnz ffreep out js adc xchg leave mov stc jl xchg in adc mov sub les pushf cld dec pop xchg cmp loopne (bad) adc mov jl mov into rclb cmp arpl mov push dec cmc pusha adc insb rolb mov js add add cmpsb add adc adc pop add pop add fmull jno mov mov inc cwtl hlt and pop (bad) in mov loopne push adc into pop jmp outsb aam mov hlt lds fs pop aad add mov or mov or mov push dec sbb lods push dec in xlat xor outsl cmp mov jnp mov pop fwait push or cld jge in dec cmp and je les loop je push adc jle cwtl sbb or call mov loopne les xor loope lods imul leave rcl cmp aam cmc data16 inc dec hlt loop out notb sbb or iret jge movsbl mov loop mov bound out mov cld add dec or test out lods cmp push into lock add shlb pop push test orps xor fldl cmp mov jns dec leave clc mov jl add inc xchg push popl mov in inc pop aam adc je jne push dec aaa inc add loopne xchg cmpsb xchg (bad) xor inc cmp mov push mov sbb ret jg,pt sub push hlt pop ss jno inc je sub movsb pop lret in pop loope or mov xchg into push xlat sbb fwait movsl adc daa iret inc add xchg or push jle or inc or and lret rcl loope insl fwait pop fmuls mov test pusha enter in mov inc das pop insl xor add sub lret xor pop into enter iret sbb sahf mov iret and jo add inc sbb sbb push add icebp sub addr16 out mov jl jge sbb mov loopne enter push js adc insb scas daa inc cld movsl add add xchg fld or mov xchg inc (bad) jmp add roll repz scas add add (bad) in test add imul pop (bad) loope mov cs xor sub or out xchg add sarb adc push in or add jb dec pop dec test pusha push mov or mov into incb mov arpl call fmuls test xlat loopne adc and test iret pop push push test ret dec push popa cli adc or loop xchg and std aam insl (bad) repnz pop mov mov jge xchg cmp push mov mov setbe or test pop loopne addb rcrl aas or push cmp rolb add jno mov xchg bound addb push add push andb pop loopne rolb mov xchg hlt mov or xchg inc loope cmp ror mov mov adc addl sbb call cmp (bad) lock cmp jo mov pop loopne mov add clc fdivrs jle mov rcrb cwtl push add mov out out jbe lahf xchg pop out pop cmp sbb pushf lods mov sbb add fwait mov aad add add std cmc (bad) ds inc xchg inc push cwtl cmpsb fbstp cmp cmp cmp and lods dec add jo jp sbb nop pop xor inc cmp rclb jg push mov mov repnz mov rorb movl add mov icebp push pop shrb std dec (bad) mov add jb rcll rclb ds inc mov pop sub xchg or ja add scas or fwait pop sbb cmp lahf add jnp add (bad) arpl mov mov jns mov test pop xchg lret stos ret cmpsb es pop outsl add mov negb addl mov add (bad) ljmp adc jo mov push and jge mov jns out sub in and and adc cmp cmp out add and xlat push mov xor aam mov mov inc pop loope clc and loop dec inc xchg aam and push cmpsl adc gs push xor pop mov stos or push and adc cmp imull mov pop andl mov fldcw pop scas add push add test adc (bad) shrd scas and insl mov movb cli lock sub sub xchg inc cwtl xor xchg popl jno pop lods (bad) xchg cmp fwait add stos hlt data16 xor lcall in popa lret aaa or add mov loop and inc or mov aas les add mov dec out fldcw mov jle inc jo nop xor add enter inc mov add cmp add xor daa stos add mov xchg add add lahf add sbb ds add pop push dec in fs lock loope popa (bad) mov sub dec mov jo jns lret add mov jge mov in faddl loopne xchg xlat out dec mov out mov addl xchg repnz fistl out add test pop mov jae push sti mov add ljmp clc js add mov jnp xor fstpl inc mov imulb jp add std mov dec xor decl mov icebp inc sti dec xchg mov into push mov mov cltd mov mov pop cmpleps scas hlt dec std add lods jmp mov jnp and ljmp cmpl sub stc (bad) repz cmp add cmp leave xor es and or push orl mov jg mov cmpsb int push inc aaa dec and add mov hlt mov fstpt jnp pop repz sub add out mov dec or in xor addr16 sbb rol lahf outsl lods (bad) or or push mov push lcall in shrb jg dec rorl movsb repz aas loopne call dec pop fwait add es outsb add push aam movsl repnz adc lret ss cmp cltd mov adc fildll add sub add lds or xchg xor dec ljmp pop scas sbb add outsb mov push add clc pushf or or inc loop fidivr jbe xchg lret js bound add mov clc and loope test xchg xchg mov pop enter fnstsw jnp or enter icebp add bound add push pop adc cmp in sub repz xchg in add xor lea popa jmp out pop adc adc outsl mov push lret lock popa icebp pushf mov cld xor mov add xchg ljmp lods pop mov popa xchg in mov push stos mov inc lock sub push cmp stos xchg add pop or add orl mov push push (bad) fistl sbb fcomps add pop sarb dec xchg push subl sahf sub mov xchg (bad) lock jl sbb xchg sub mov mov add loope jle fiaddl mov outsb dec cmpsb pop push sub lcall imull shlb std add lds dec (bad) or add out dec push mov cld jae xor xchg push mov in cmp mov js mov in jg xlat sbbb push or addr16 insb addl shrb in loope sarb xchg cwtl xchg add and lds pusha mov xor xor adc mov jg lret adc jbe xchg inc add adc cmp out jp lods lahf testb inc mov (bad) in std xchg jl jo mov test into jmp rclb jnp add jmp (bad) out ffree jmp xor popa adc leave lcall sahf outsl xchg add lock add in les inc mov mov cmpb add pop rcll clc fildl scas inc mov pop sti mov xor pusha lret (bad) mov repz or insb push add fxch xchg xchg lahf add int3 xchg les aas add mov adc sbb xchg push clc lock pop inc jge andl insb (bad) enter insl inc add cwtl repnz scas ficoml dec mov cmp xchg in mov pop ljmp daa xor cmp lea adc or add inc sub mov and das jecxz and or jne pop xchg pusha mov cmc add pop pop orl jle mov rcll push and mov push jb pop mov call leave ja xsha1 cmpsb dec movsl popf add mov scas add leave dec mov outsl xor sub inc in mov pop scas inc pop test inc xchg test add loop or or je bound add imulb pusha movsb es movsl mov pushf add mov movsb es loopne dec lds add test add add or or jle mov adc repnz mov jge daa jns mov xor les in movsl (bad) movsb mov sub inc cmp add pop sbb cmp jno mov add or or (bad) hlt dec out jae je (bad) mov cld dec movsl xor js aam pusha push fdivl scas pop call add pop mov add and flds rolb ss xchg cmp add jns mov es xor jae pusha jl arpl outsl sub and fmul xor bound jne add das notb add (bad) jo (bad) rorb xacquire ror pop pop inc cmp lock jmp out and into js fdivr jne pop stos mov push inc mov movsl dec jp rcrb push jb mov add sbb sbb mov arpl stos loopne jb ljmp aam in mov inc mov or add mov imul faddp leave or sub loope sub test inc xchg inc outsb ljmp call push and dec rorl les add add cmp fdivl in out mov rol (bad) adc sahf dec mov dec fcoms outsb xchg jmp out add outsl xor das mov mov orl mov and jmp push xor cmp pop sbb daa rclb push in outsl push and out aaa adc out rorl test test das aas daa pop push pop push inc es push dec add pop sbb or mov adc je arpl imul (bad) xor lods imul pusha xchg out cmpsl or gs mov (bad) xor inc xchg pop add mov push sub push xchg icebp mov mov sub add cli or stos add adc repnz dec mov push add mov (bad) jo pop pcmpgtd mov test or mov out mov mov xsaves jmp popf test movsl inc dec iret pop loop in xor jmp add xor pusha and leave jmp inc bound les jns dec push stos add mov sub nop jno jne add test pop xchg cmp adc rcr fnsave add push adc pop int3 add xchg sti mov mov divb add and pop (bad) sbb test hlt add sbb test mov movsb arpl sub push xor test add into ret test push add jp sahf gs sbbb add jne jle jae (bad) (bad) xchg add and aad sub loop jno js test push and ds add into and notb push add sahf cmpsl ror loopne or sub pushf or pop jle jmp jp mov scas ret stc cmp xor pop (bad) pop jb cmp lahf jle xor xchg ret mov int3 sbb sbb outsl cmp inc dec xor ret stos shr xchg fs ds add ds add mov jecxz add roll or xor xchg call call fcmove sbb jbe (bad) jne in sbb pop icebp test xor mov sbb subb or sbb pushf lock push xorb in pusha das push jecxz dec add and mov add jb clc sbb cmp mov jmp mov mov stos xlat pop mov add pop sub mov add pop pop xor inc es pushf jg sahf add add fildll mov cmp ret add push cmp sbb je loop jg cmp inc popf ss push clc mov xchg pop push (bad) imulb divl insb sbb jo aad sbb insl jmp and mov mov push pusha xor test cmpsl or pop push jns fs pop mov jl jle inc (bad) dec pop add xchg adc aad into mov imul pop inc into aad add dec or push add jns out mov push sub mov inc xchg gs and loope cmp pushf jmp (bad) xor or iret mov mov int mov push or xchg int and orl cmp pusha jmp ds inc movl or shrb jle add fild add out fisub pop movsb xchg add dec cwtl or mov out call movsl lret loopne push jbe or cld cmpsb fwait sbb je add jle lret (bad) mov fadds movb aad shrl add and add jo xchg cltd mov ljmp repnz add ja divl sbb xchg jl push (bad) sbb add out inc pop xor sub sbb inc adc adc mov lods pop add pop jge sbb testb (bad) jo test add ror push cwtl and push repnz out add (bad) insb mov jo dec jnp mov sbbl fsubrl cmpsl pop movsl scas int mov jno clc (bad) mov inc inc pop popf cmp push add lret lock add cmp sarl add cwtl or arpl add icebp push enter rorb cmpsb or add push scas mov ds adc ja cmp call hlt dec lahf add sub xchg (bad) mov and arpl test add add jb jp decb test rorb jmp (bad) mov test xor in in dec xor jne sarb jbe jmp or xor mov lret push dec mov sbb xchg add mov jge xor mov mov repnz adc add push mov in popa pop dec (bad) jmp and push cs cld xor fs mov push sub pop sti xlat cmp sbb cltd das add jmp je cmpsb jbe mov pop sbb jae push leave or add jmp lods or sarl test add leave adc insb cld add orb test pop ret adc rorb aas mov lods add mov sub ljmp add es out dec arpl cld cmc add or cmp movsb lods and es jp inc dec jl,pt hlt sarl and push loope mov je add push in (bad) sbb xchg add addb pop sysexit (bad) cli jecxz pop and dec mov push (bad) jns jge loope inc push xor jecxz mov (bad) nop sub shl dec pop cmp sahf sbb in xor call push fs jne adc std dec cli mov jmp mov mov mov in ss jne mov cmp mov xchg jp rcl call adc mov adc lret out sbb call repz mov adc mov pop out mov fildl (bad) cmc mov sbb daa sti loop (bad) or lea inc jp ja pop addr16 (bad) fcmovnu adc cmpb loope mov jl jp pushf fnstenv add push add rcr pop add dec dec pop add xor aam xchg mov xchg add mov je add adc add (bad) push imul adc addr16 push jb add test add jg push jge in pop mov les push (bad) shr insl xor lds test rorb add in mov or and dec or in add aas push jmp inc xor dec mov stos and (bad) push push repnz out jg test xor cwtl lcall add hlt sarb add add lds imul push js ret pop or add add das jns lahf xor mov sbb out mov push daa test repnz jno adc enter repz jbe hlt iret mov add mov push add (bad) out pushf add insl inc call add mov das pusha out fsts cmp sbb push lmsw xchg adc js pop push in dec jns cmp xchg lds or movsb in add sti mov inc rcll adcl (bad) mov add outsl or cmp in mov fs jno dec add mov jbe pop and sbb hlt ss mov rcr sub sahf pop dec add fisubl leave sbbb add lcall shrl loop sub andb fisubr cmc sub inc sub inc dec stc xchg dec add inc mov pop and sub adc add out mov push push xor jno push xchg stos ret bound push insl adc faddl mov in inc (bad) add pop xchg into add daa iret lret add cmp fmuls add mov add stc jecxz daa cmp cwtl (bad) sar (bad) std call cmpsb cmp roll inc gs ficom test mov adc (bad) cmp xchg ret cld push mov lret jl das gs negl cmpsb add (bad) add sub rol sub sbb add das and and dec xor nop sbb shll mov push rolb mov sub dec lods fildll leave jb sbb test movsb addb je mov testb call or xchg cld sahf sub bound add repz pop test xchg xchg cmp adc or rcrb fisub fcoms mov mov iret sete outsb and movlps jnp cmp jae sbb cld dec fcomps roll stos (bad) lea xor (bad) add ret sti scas repnz cltd (bad) xor rorb stc add ljmp cmp pop mov lods adc call sub cli pop cmp dec adcl sbb clc or add pop fisttpll add scas lahf bound sbb dec cmp mov int3 or sbb adcb ficomp les decb pop lds faddl clc or imul std and incb lods mov orl lods add (bad) cld pop nop call lcall sub lret pop add pop rol in insl add (bad) mov and test in or or add clc pop cmpl mov cmp aas add subl add jns mov leave sqrtps add inc mov test movsb push dec scas pop sarb sub iret daa popa xchg in (bad) fnsave add in repnz jb fimul jbe pop jns stc pop cmp (bad) xchg xchg jecxz push add mov (bad) aaa mov rcrl pop add movsl inc loop fldl mov aad ljmp iret test cmp outsb ja lds sbb pop dec add sbb clc xchg add mov sub dec sbb sbb lock cmpsb pop add loopne jge adc nop inc fwait jo rolb (bad) ret push jo add pop in cmc aaa fisub xchg or fstpl or pop int3 xor xchg repz leave add stc cltd daa ficoml fdivr gs lods (bad) sbb mov inc jmp aas adcb pop cmp mov pusha imul test icebp adc repz das xchg xchg inc mov push adc sbb lods loopne (bad) stos jmp xchg add inc push or mov sbb mov add ret sub add adc (bad) rcrb rep push cli mov pop lcall add (bad) dec sbb jo fiaddl mov pmulhw and and adc packssdw jo (bad) stc test mov jmp ret jbe shlb add xchg ret push imul cli shlb imul lret inc push xchg push iret jecxz fs loopne ret push cmpsb js mov or mov or cmp xchg dec lea test pop add notb (bad) xor xor jmp add iret add movsb frstor push cld cmp dec mov cmc (bad) ljmp adc or pushf hlt xorb in xor xchg loopne cltd sbb clc mov pop cmp adc mov jmp add fcmovnbe cmp mov loopne xchg push loop add add jbe pop gs sub sahf nop movsb pop jle push jp mov sub pop rolb rcr stos sbb test inc or (bad) data16 loopne cmp push add enter call or add add pop add jmp add pushf pusha rcr add and inc or hlt ret sub add enter push stos pushf cmp jg add outsb inc ror jge jo jmp test repnz push add sbb jmp add xor mov out add push cmc or adcb add movsb pop scas jg xchg int3 add lcall ja in mov ret jl into add inc mov idiv addr16 xor fcomip fyl2x add imul (bad) add jo sbb cmpsb cld sbb jecxz pop hlt add fstl inc fdivl rolb pusha (bad) movsl add repnz or in pop adc mov hlt jge push adc xchg sub xchg mov int rclb out cmp sysenter ja push xor add test dec flds mov inc inc mov or fs add out sub push loope ja add xchg push pop sbb mov pop loope push movsl loopne add pushf nop mov out sub add pop les add or sbb int mov sbbb aad jle ret push test mov cli out adc add or pop mov pop and popa shrb add pop sbb pop test mov push je inc push or jbe cmp mov rolb sarl mov mov and jg loopne arpl out pop push add imul push cmp inc add jmp adc push xchg inc (bad) or jbe add sti icebp pop mov mov xchg mov mov xchg (bad) xor sub (bad) push pushf loop and mov rorb push bound push add pop add test mov dec lcall mov and mov xchg jmp adc add inc push out mov add outsb jg ss push das fnstenv pop data16 push jl xstore-rng cmpsl (bad) add clc inc ror xor adc mov xchg push sbb cmp add add pushf pop je imul scas shr xchg cmpxchg dec mov mov adc xor sub or fs mov mov xchg xor sbb lods jle add add call xchg aad inc test or leave ficomp add add loopne,pt mov add insb mov (bad) sahf add out cld cmp push mov mov cmp cmp std push cltd int3 xor mov add mov roll push scas mov sub orb scas cmp mov mov cmp popl lahf adc sbb imul cwtl jmp mov mov push xchg (bad) cli dec pop mov nop insb push nop mov cmp pop dec inc sbb and cmp xor mov add mov arpl sbb out mov leave dec pop push sub add in adc cmp adc repnz mov jae int and jmp lods xchg push inc push (bad) daa xor stos push fldenv jl (bad) jp add pop sbb sbb mov insb fstpl pop and cmp sbb jae jns jne sbb out (bad) and mov add sub mov (bad) int (bad) add pop enter test mov adc push mov mov pop push inc add jg lods mov add push stc mov cld inc xchg es cmpsb sbb cs cwtl movsb add dec pop or jae add push mov data16 jge repz jae cmp add ljmp in (bad) shl pop pop cmpsb cli lock in fwait iret cmp xor inc movsl imul std dec push pushf add jae call or push add popf xchg mov inc dec adc cltd jmp sbb add jns (bad) mulb lods add sbb nop std sbb or sbb adc pop mov enter add movsl mov add xor out push jg adc test push fiaddl fldl add test cmp outsb mov mov fdivl mov hlt jge cmp andl add test push and mov pop push add sub shll mov xchg aad sub xor mov popf scas aaa and pop shrb in pop xor inc andb ljmp movsb pop inc arpl add (bad) add paddd insb lcall imul pusha sbb xor cmpsb add imul inc and insb arpl (bad) adc nop mov std adc in rolb fnsave pop jge cmp cltd add inc loop add test leave push dec sarb fwait loopne inc lahf add lds pop mov inc ret test repz mov jnp dec in add mov sbb shl adc mov sbb xor sub daa xor sbb mov test push push inc insb rorb push mov xchg push adc mov cwtl add incb decl cmp lret sbb shrl fcoml pop add push dec mov sahf mov cwtl push mov mov xor movsl inc fidivrl rcrb mov outsb mov mov add jge inc fwait repz push jnp pop daa in ds in xor mov or pusha aam add test jne sbb std data16 xor mov scas and pop xor popa xchg aad xchg rcrl add or and cwtl bound ret mov jno dec push test fsubp ds rclb jns cmp cmp sarb mov leave lcall add mov in fmuls mov (bad) scas or fimull fild push data16 pushf seto ja addl push pop aas jecxz out es in sub lret fildll nop xor or daa pop cmp add push push sub push cmp adc mov add lahf push loope aad out sahf pop add arpl lods jb (bad) mov add dec cs mov xchg sub aas mov (bad) mov pop or call icebp add test sbbl loop add arpl (bad) jo popa popf mov jmp add add nop icebp mov daa sbb and loopne mov pop or adc imul add sub and jo lahf mov jp pop add mov add inc xor dec push jne fcoml and arpl push add hlt popf mov inc dec cmpsb add add sub repz in adc or (bad) lock mov and idiv add clc aad mov sbb dec cmp movsl mov add jbe or fistl push shrb jg cmpsl or pop or push fs clc and (bad) or sarl pop fldl (bad) jcxz mov pop xchg adc loopne js add ret pop hlt stc dec pop rcll lret pop sub sbb mov neg inc in scas gs add push push mov inc inc lahf or cld add les (bad) jbe jnp add add add inc cltd pop add xchg mov or ss mov lds (bad) xchg ret icebp hlt or (bad) cmp mov in outsb rclb ljmp and mov add in ret cmp rolb (bad) sbb es push adc xchg xchg lahf add js gs imul push sbb add nop mov aaa movb (bad) lock add movsb cmp adc mov adc arpl cmpsl dec rcrb push add lea xor push and sub xchg push jno call add or std add repz add (bad) mov popf cmp add aas push xchg arpl outsb das jecxz add lock leave (bad) movl add and addb jecxz nop xchg mov fwait add clc mov jo clts xor mov adc imul loopne lret cmpsb mov fxch xor out add inc test mov add dec fisttp pop xchg daa add ret xorb xor (bad) and mov mul sub jmp add mov pop mov xchg rolb gs add mov add add int3 mov adc incl iret in movsb leave repz inc roll or dec pop mov (bad) sti jo rolb hlt pop mov jnp sbb dec jne bound jecxz enter loope test cmp shrl inc xlat add mov pmaddwd or add lds sbbl scas test clc mov add mov call hlt fstps in add jle jno and jmp icebp cmc sub xor es fcmovu add push push cmpsl push enter mov mov out adc or dec sbb rcrb movsb sbb dec in test (bad) out dec mov ficomp int mov pop data16 inc lods sbbb div mov adc dec add loop jns pop mov mov mov jecxz sub sbb loope add lret push bound (bad) imull fnstcw out inc mov mov es jle dec loope push mov mov sbb dec test sbb cmp and pusha mov and push stos stos sbb imul xor xchg and inc dec cld push pop adc inc into nop ds out pop mov cmp cld (bad) pop cs mov or repz insb mov pop movsl mov adc mov roll rolb xor (bad) mov out lret cmp roll leave xor test and les push int or xchg dec xchg int3 add test cmp out mov add enter in add jg sub cs sahf dec add (bad) adc pop pop js movsl mov lret inc and xchg mov add adc test movsb test dec loopne and repz scas rclb dec add comiss sub cli hlt jb sbb xchg add inc scas call (bad) lahf lcall shlb jno and inc and rcl test xchg les sub cwtl movsb call inc andb adc inc push shlb push insb jnp aaa jp dec daa lods push mov xchg pop inc add cmp push movsb xchg pop daa loope add mov xchg inc mov inc pop xlat dec (bad) fmuls aas mov out ljmp nop or sub jl push cmpsb int3 adc add in test out repnz and sub pop cld mov jno inc dec cwtl pusha sub (bad) ffree iret test loopne add gs dec lcall out xchg sbb add dec inc popa out addr16 xor pop lcall movsl add xorb lcall add lods fcoms pop les sbb and lock sbbl int3 cs jg add repz inc xchg aam mov pop mov or mull loope in pop mov lods mov rclb sahf repz jns jne stos sbb enter enter je rclb add lds jno xor inc mov or jge dec fstl inc std xor (bad) xor ror pop sbb sub daa inc sub jo cmpsl jl adc xor (bad) xchg xchg rolb push pusha mov iret push mov push int3 ds mov add pop enter out adc loop mov cs sbb add out push sub movsl push pop lock pop scas adc shrd add aas scas push jg loop jecxz ret and aad xlat push std fist sub pop cld add stos mov mov add adc cld add jns (bad) mov xchg fidiv ret push test dec lret mov loope xchg push in add (bad) jno adc bound loope adc cmp adc (bad) cmp jl dec iret mov push mov inc fimul je roll mov jecxz shrb bound mov mov sub ret aas cmp loop loopne cltd es mov gs xchg roll icebp out or fneni(8087 sub negb or jae or mov jp cwtl jo gs fimull sbb rcl mov subb push test cmpsb or test push mov mov push mov movsl jne pusha mov push and pop jbe add push test lods fwait inc sbb scas or add arpl xchg out lahf cmp cmp mov (bad) sbb (bad) and les fildll outsl jno int ret and es cmp inc xchg test fist cltd xchg add pusha call xor push fdivrl push es inc mov sub lds xlat cmpsl out xchg add mov fadds mov pusha mov jb inc inc insb out sarb roll or test outsb adc pusha inc fsubs adc ret pusha xchg sbb jae imul stos out movsb outsl in (bad) addb scas inc pop sbb add or dec icebp mov rolb es (bad) ljmp js movsb push dec mov add cld rorb lahf pop and sub (bad) arpl or lret mov inc mov rolb loope stc cs mov inc xor push lret xor cmp or jo mov test jle fcompl xchg adc loope adc or mov aam xor call or incb xor es sbb lock or adc shlb dec dec inc cmp add xchg cmpb or add push adc mov ss xchg fdivrs push int3 jo aam enter inc cmpsb pop or or xchg cmp mov jmp mov pop push je hlt sub cwtl sub mov dec in push cltd dec sarb pusha mov dec loopne repnz pop sbb dec cmp pop shr sub xchg mov rcrl fcompl pushf movsl xorb stos sub in aam push fwait nop pusha out sbb xor call inc ds mov mov sbb and popa insl cwtl cld pop lret jno sarb outsb pop imul (bad) or pusha adc stos pop or (bad) sbb test pop pop mov add mov (bad) jmp cmp movsb adc nop add xchg lahf mov fwait cmp fadds adc clc bound je rclb xor sbb movsb jecxz push (bad) addb jle push stos jb (bad) dec (bad) cmp cmp add cmc cwtl rorl hlt add call mov fdivrl jbe subb sarb lods mov mov cmp and int mov psrld or pop out es xor dec sub sbbb jns out and sub (bad) mov ficom out add pop in lahf jecxz add push mov je cs adc or loopne scas mov dec pop add sub cwtl inc das gs push inc cs (bad) mov imul clc mov rclb inc add xchg push aam lds enter fs sahf loopne leave add movups mov jmp enter lahf test xor cmpsb test rcrb ss loop fistpl mov and pop adc jl mov pop jnp sbb xor sbb loop pop mov hlt sub jg mov es jo das or movsb dec mov cwtl adc gs inc loope jmp iret inc call lret push pop add push xchg pop cwtl arpl loopne push lds les and push js,pt test nop sub pop movsb pusha pop icebp push dec push jg or add pop jmp adc js or int3 add xor jo ds pcmpgtw out jecxz shl pop and into pop rolb cmpb jo add (bad) (bad) fsubl push cs and lods aam or xchg dec in mov xor icebp ror lods insl push jecxz arpl pusha mov rcrb leave ljmp cld sysret out cmc or aam pop fs (bad) mov push cmp out push loopne aad and and popa cmp bound pop adc or ret mov loop cmp add hlt fnop mov pop adc sarb mov (bad) (bad) jo add ret sub add roll iret xchg cmp sarb add xor push xor aad (bad) out add movsb lret jns xor mov or adc jecxz cld ljmp pop std dec dec sub pop dec cmc pop and push dec add jp jg mov push ds (bad) xor pop inc sub icebp iret ret fisubr adc scas jl pop jmp rolb dec sbb movsb mov test aam pop aam std adc dec dec movaps test add xor cmp test lcall push jnp cs mov jecxz (bad) mov sub data16 mov push cld add sti enter add push ljmp cmp aaa andl cmpsb mov mov inc sub mov js xor jp xor mov dec add mov jp or jno xor add xor fcoms adc dec in push adc cmp mov das pop sbb fild pop cltd scas out fwait lret mov jo sub sub mov cwtl push add outsb (bad) inc push jecxz je pop and lahf fsubl inc (bad) in pusha movsb push pusha ja and cwtl inc or js add rcrl hlt loope sbb test bound mov cwtl enter add and mov cmp aaa pop insb inc push xchg cmpsb call mov cmp jle mov cmp lret jp or add mov (bad) and sub push sub (bad) aaa inc add inc xor cld add lcall jecxz int add mov in push ret sbb xchg jmp sti lds add pop and xchg cmp mov mov loope or rcll popa lock bnd test xor cmp les and cmpsl mov in add int cmp test shrl notb push cmpsb mov mov enter inc cmp shrb dec outsl inc cmp or pop mov inc lahf inc shr dec jnp or inc out movsb mov lods pop xor jns subb xchg or adc ret cmp adc inc clc cld xchg cmp iret add stc xchg cli sbb cmpsb call and jne add add push sub add fdivrs add pop shrb out in nop dec add mov add xor inc or movsl jle push inc clc (bad) push leave shll xchg add nop or data16 outsl (bad) rorb mov fidiv ss pop push inc sbb jmp stc jae add out arpl push movsl xlat insl out mov aaa add incb jg cmp fwait in lret or xchg hlt ljmp mov push dec mov in leave add aaa dec aas hlt std add push pop repz pushf dec pop jge nop lea cmpsb out fs lahf add ss fadd les js adc mov arpl inc mov push ss nop lods push in pop add push jnp dec call ret dec flds mov and es lods pop dec push pop std mov out cmp xchg jne add out pop test jns in shrb call stc sub jns add sbb add and jg cwtl enter lock sbb into or inc add xor loop cmpsl add inc adc push xor (bad) push adc in adc pop sbb imul jo xlat cld cmc daa add scas xor loopne scas add jb jl sbb lret xorb or loopne fdivl icebp fisttp inc dec add pusha les xor add fiaddl mov lret mov mov push push ds xchg xchg popa add mov add (bad) lahf pop (bad) in les add push mov jmp test xlat push lea and subl out and add daa fisttpl pop mov jb add int cmpsb leave fdivs fisttp mov pop jp add fsubs sbb cmp push popa mov push leave add xor fldt xor adc stos xchg es jl add fidivrl cmp inc mov and in cltd add fdivr mov xchg xor jo jne add sub push je push pop add cld dec mov xor add cmp sahf fs push ds pop pusha sub insl icebp cmp adcl jns add flds pop fdivrp popa adc imul add sub cmc pop lods shr jo clc sub hlt inc das adc mov fwait add adc ja shll jmp cmc cmp sbb pop jecxz loop mov jne subb add push ds push push fldl movsl sbb dec (bad) xchg les adc add pop nop (bad) sarb out pop dec jns aas add xlat andb mov dec xchg test in xchg xchg into fsts push add add lret test add pop mov aaa aad mov push stos jns sbb dec inc lret in pop scas aas ds mov xor sahf je nop rol inc adc fsubl fdiv clc add cmp clc fildl arpl jno pop lock fsubrs aam push fs mov adcb sub xchg std (bad) lret mov mov mov cmpb jle and or gs testl pop pop sarb mov push inc mov push jl push sbb shrb push insb add and add aad pop jle sub das sbb add (bad) dec jmp jno pop cmpsl add ds xor jns xor das jo or pop add lock xor cmp adc ds mov add in pop fidivl cltd test repnz mov test jne adc inc test mov aam mov enter (bad) std loop add sub sub test stos mov add and xchg (bad) dec adc lret test mov inc test das or mov xor pop sub dec pop hlt fisttpl sub (bad) jbe xchg push pop mov add mov iret adc pusha rolb mov or push je and iret lds or rorl jge push sbb mov roll repz and sub and faddl ss add mov jns push sbb je pop adc add popl inc addr16 into inc xor das add pop jb and loope pop xchg jbe iret mov cs xchg mov jbe add jp mov cmp cmpl jle rol je or pusha xor push xor add mov dec add clc pop ds push out adc sub popf ljmp fldt or aad mov or not and rcll mov xor sbb fwait addr16 jbe sub push in xchg ret add pushf lods and stos push push or call iret je adc add xlat add add push lret pop (bad) fiadd data16 ds orb (bad) adc ljmp pop mov push mov mov mov and sti or mov rcll rcrb cmp in ljmp pop pop and mov icebp outsl subl into cmp sbb dec data16 add mov arpl leave push incb fs adc dec pop add xor cmp pushf or mov in dec sahf jae dec int fsts add cmpsl in test mov mov inc ret mov sbb xchg bound cmp loopne and or daa int cmp add add pop adcb out fistp addl xchg sub mov cs int3 jb add mov dec add dec cwtl xchg hlt std push push xorb data16 and add mov inc inc cld push sar add pop cwtl test pop add inc jns lods jecxz mov outsl arpl loope fldcw insl ja ret lods divl adc mov iret or xchg push int xchg loopne clc cld jle ror xor dec add out lds mov ljmp in add ja imul pop jo adc scas aad adc pop mov jo cmp cmp add or push and dec arpl stc nop or ret adc add or sbb add xchg jp andl lea and pinsrw hlt pop jp (bad) dec add pop cli cltd cmp jo pop pusha fdivrp adc aas stos adc xlat xchg inc mov push dec xchg sbb or cmp pop pop in sti in xchg out jno mov pusha sub push pop push (bad) add lahf stc pop add dec ss lods fcomps rcl pop mov push push ficoml pop add repz fstps cmpsl hlt xor sbb push jne fwait mov sbb jnp and gs and icebp mov dec (bad) add cltd pop cmc mov dec jo adc popf cld add and (bad) loop or inc int3 stc add xchg sub (bad) les push lret inc push scas push xor sub (bad) cmp je hlt sbb fucom int3 scas cmp pop aam orl popl inc mov xchg dec les xchg (bad) jp push add repnz pop repz pop sub add fadds or sbb push loope push jo je add inc loop xlat fisubl in lods fldcw xor fwait mov cmp andl add add pop shrb fisttpl cmp mov jl lcall fs xchg and cmpb lea inc add addr16 jge add or xchg add jo push add mov dec test mov repz decb bound out dec leave jecxz dec add add not xor and add sbb hlt mov mov sarl inc xchg adc sub cmp jae add in fcmovne imul pop mov pop or add mov scas out jns xor addb push call lock sbb orb push push inc pop mov scas nop xor (bad) mov mov or sub xor xor mov nop dec add mov hlt lock add syscall dec push (bad) sbb push out xchg adcb add lods jns pusha loopne push hlt ja add clc pushf addr16 sub mov sbb cwtl pusha (bad) mov nop cmpb inc jmp lcall push mov cmp mov jo aad add int outsb dec add daa and add test mov inc xchg inc cmp or mov sbb ja scas push sub xchg faddl add add and xor (bad) mov inc sub sbb push push cmpsl cltd loopne pop int3 add lahf push lods (bad) jb jno mov in and mov pop fadds rcrb arpl in lods out scas add add mov pop or pop (bad) fildl test lahf xor adc andb leave xor cmp add lea out adc loop inc inc push jbe push inc nop call add add mov cs add ljmp mov mov adc lret adc lea push ficompl iret jae dec xchg or add xor loopne fild scas int3 movsl push data16 mov cmp sahf dec jp xlat loopne lock inc fcompl sub int3 fwait and adc shrd push sub mov dec adc push shll sbb pop dec or sub jp pusha push mov inc push push pop sbb adc sbb mov enter ss ljmp fidivrl push das xlat movsb clc pop push push push add xorb out ljmp cmc cmp add lret cmpsl jno mov add pop shll mov sahf cmpsb and test push mov jb test mov in dec es add and lods cmp mov movsb push cmp cmpsl mov mov cmpsb mov fcoms inc pop jno add mov or (bad) dec ret arpl xor xor or add sahf les xor rcll aad sarl sbb js nop push dec add jecxz out call (bad) js xchg or dec xchg mov jno sti mov fstpt adc inc adc arpl add (bad) insl inc add mov xchg jnp test xor loopne out call daa insl out lods lcall rolb pusha cmp and mov jo add into mov test and shlb adc cmpsb lea lock (bad) rcrl inc imul mov call and ret add scas jnp inc fstpt mov les cmp add call cmp mov mov rol mov dec push cli push sub sub test daa add fisttpll and add (bad) shl jno (bad) rol (bad) je cmp es lea pushf push test push arpl sub mov xor aam cld add jno (bad) aas clc aas in xchg sub adc cvtdq2ps mov stos mov test in call mov cmp add pop jg icebp inc cwtl sbb jb lret int and in sbb sbb pop cmp jne sbb movsb inc and mov xor or pusha push jmp (bad) enter stc mov cmp inc mov add mov xchg movsl in push dec jecxz (bad) jo incl jb in ja or sbb stc add push sub mov popa inc hlt out xchg icebp and sbb xor pop dec add imul mov testl sub mov push aaa xchg pusha xorl call push dec push stc xchg mov std jb xor popf add (bad) pusha sahf jae jno mov or mov pop or sub jb or and mov fsubl aam mov or or sub aaa jbe fwait and or add ret in and pop sbb stos in mov cmp inc mov or sbb rolb inc xor clc add ljmp add inc mov les roll adc pop (bad) aas add inc push mov nop stos adc dec xchg inc pushf (bad) xor sbb adc push dec jmp addps xchg sub or lock add pop sarb xor cmpb adc push sub je or jl lcall push inc test movsb or gs lds or mul dec incb cmp cmc add dec insb sub mov inc and stc add adc jl add mov cs xor lret add (bad) cld std icebp and hlt pop loop mov adcb pop out ds fsubrl sbb in dec call and push xchg rcrb jo sub es insb pop cmp adc jl mov addb mov push js or or lods xorl xchg xchg add cmpsl out fist add or add inc mov shl and aas rorl sbb xor push add sbbl cmpsb or aad mov inc lret mov adc or je mov cld cmp jne (bad) sub (bad) xchg cltd cmc or xchg add cmp push insb and es xor loopne cmpsl bound xchg dec pop orb lds mov sbbl xor add pop and pop arpl mov movsl (bad) pop and in mov call push inc sbb xchg fidiv add mov cmp shrb xor repz pop sub cmp push jnp loopne push test ljmp insl fwait add mulb add pop daa xchg sub subb pop pushf out cmp xchg and jl push iret cmp out jo dec movsl mov pop cmpsb xlat add sub cmp (bad) pop arpl and js mov cmp inc mov jne (bad) sti add sbb popf push jecxz mov out sub or add insb push jmp dec sub stc cwtl hlt xor mov mov push add movsb cmp stos adc orl in fisttpll aam dec lret adc shr jno mov mov jae (bad) test rolb add mov mov stos lds ds (bad) ljmpw dec addb pop fsubrl inc hlt jno add mov lea sub xchg sahf in cmpsb daa sub push cs dec pop xor push sar jno clc push cmp fist mov sub ja mov fcom jnp cmp inc test or test xchg add lret and push and pop out str notl orb mov xchg dec cmc decl dec add mov add sub jmp das jecxz sub fildl sbb loopne js adc mov lahf popa idivl xchg sub in mov jbe and inc jne cmc inc add push and add or test add xor dec or addr16 add ja je and stos add movsl sub cmp inc adcl cmp mov mov inc out dec mov sarb push adc or push jmp inc pop xor pop jg push hlt xchg std (bad) inc push fild mov or mov (bad) ljmp and push js rorb out sbb inc lret mov dec hlt ret ljmp sub mov mov add mov adc push pop push mov imull jmp lods in sub adc add out hlt inc mov int xor pop pop je cmp (bad) push mov dec dec fbstp add fsubrl inc and ret mov inc in es lahf test out mov mov addr16 divl and pop or stc test mov or ja pop js test stos int3 add jo xchg cmp push fstpt add icebp cwtl aam pusha or sub pop pop test sti test mov xorb stos adc rcl pop add inc out rorb sti push fisubl pop xor imul fstps stos add pop sti cmp adcl clc and popf xor mov sbbb pop popa je sbb mov mov mov add jge xor push cmp inc push nop push dec stc loop add sub nop (bad) incl fcom push mov mov xchg fwait push (bad) stos outsl add (bad) mov enter sub cli test cmp sbb dec nop pop dec or cmp or scas add lods push push cld push mov add ret add fmull ja stc sbb pop pop insl pusha and loopne and loopne mov push test cmp mov mov jne xor fs out and (bad) fadds js mov (bad) push daa inc mov pop in fldenv adc (bad) addr16 dec push jne or cmp ss jl lret leave test push mov cltd out sub mov push leave mov adc dec cmp sub pop mov inc push int lret addr16 add (bad) jo cmp enter hlt orb rclb push inc or js das adc xor mov scas cltd pusha aam add add adcb in loope jg or add mov add popf (bad) or xor dec test arpl inc mov cli mov or movsb sbb addl add jns mov xlat pop adc cmp mov dec jae shrb add call (bad) jo es pop push addb arpl stos enter ret pop iret add out push test add std icebp or sub xor into cs outsl jns pushf shlb popa sbb xor sub push fildll call ljmp adc sti pusha (bad) aad jge (bad) rol imul jl push int adc mov dec jl loopne mov cwtl popf sub stos cltd pop mov dec cmpsb or std pop ror insb inc in adc mov sub pusha mov gs push arpl inc vpmullw jmp insb push lret (bad) cltd or pop pop fnstcw in mov push incl jns push mov ret mov imul adc fiaddl inc icebp mov mov fs out incl stos shll sarl pop lods sub push ss dec dec aam call xchg xor inc push mov cmp pop add adc mov fiadd add xor dec jmp mov add les outsl and push int aam push or or aaa add xchg out stos (bad) repnz or into mov mov mov sti dec sub cmpsb das add xor mov les enter add setle mov test adc lcall add movsb push fs adc pushf ss cmp xchg ftst cmpsl nop in sbb pushf rolb sbb stc lret mov dec nop add xor add mov pushf sub inc dec lds fucomi mov jbe jmp test mov add adc imul je mov or sar (bad) incl sbb sahf and je or imul sub add js add clc push mul dec mov insl flds xchg shrb inc add add out adc sub xchg std dec add inc mov imul out incb lods arpl or (bad) jns pop mov add (bad) enter psrad andb jo cmp addl sub xchg insl xchg cwtl clc orl mov pop sub leave fwait (bad) jo or sbb ljmp pop ret mov outsb lahf cltd lods mov xchg adc sar add (bad) loope mov mov pop scas inc mov ljmp inc rclb fst mov insb xor int pop mov add ret sub rolb add aad fcmovb in pop add fidivr repz mov push dec insb add push jbe out pop push pop jno bound adc inc or sbb and fcoms test push mov mov add dec ja add push lahf sub popa fwait add lock mov add push fstps mov cmpsb add imul push mov das jmp jbe add lahf daa mov mul add bound cld xchg (bad) adc mov or mov add xor xchg pop dec dec push shr dec add pop mov loope aaa add and rorl lret push loop test movlhps subb daa mov push lcall jae add fildl in mov not into mov dec je pop dec aas sub pop adc sub mov adc add lods pop sbb aas add scas and bound (bad) outsb clc fsubrp call inc loop popa (bad) mov xlat xchg lods subl xchg mov push ret pop mov cwtl jge pop ja loopne inc nop lds mov pusha mov xchg add iret push inc movsl loope jns les out jne stos pminub shll rorb pusha cmp add or cld add sbb add xor and imul out add orl lahf daa mov rolb add lock adc popf sti test gs xadd arpl jnp outsb test add adc and mov scas in add movsl sub dec jecxz sub mov cmp push and pop test cld lcall movsl leave out add stos ret out push outsl add fsts in dec mov mov stos xor sahf aaa (bad) or ljmp push scas add mov repnz jmp ret rcr add jns sub outsb or or xchg popf inc or mov inc aas sbb and int3 pop adc lods fs and mov add pop mov mov mov inc or push xchg ds inc push test repnz jne jns je mov sub rorb push mov push movsb add sub loopne push stos or add fistl movsb fs xor xchg add aad jae sub shl cmp dec mov jp push mov rcrb test scas mov push ds adc pop ret push (bad) loop add mov push out into fs repz cld sub mov fadd cmp xlat mov cwtl pop cmp inc dec aam outsb or mov mov add adc mov (bad) iret mov push inc ja add xchg xor push scas jbe cmp outsl in cmp add cmpsb xor popa add dec pop xchg push lds pop bnd (bad) stos pop icebp out sbb aad (bad) jge cltd mov add lods pop mov mov add test adc push inc push incl (bad) testl mov jbe add pop cs cmpsl inc jb sahf jns ljmp adc add aam jecxz call outsb ret ljmp (bad) outsl icebp xlat dec add ja (bad) iret add push add push loope mov insb in push out sti mov leave jp xorb je xchg pop fs shlb test add mov fisubrl jmp out inc sub test mov mov pop sub and test (bad) out fild dec jne pop stos lock (bad) pop dec fwait int3 das mov push jno add sbb frstor (bad) lcall pop jl lods mov add mov add inc or roll ljmp xor jns fs push adc and inc xor (bad) lods out add jmp lret sbb adc dec push and dec add push cltd adc sub cld adc insb inc cld inc add and and int adc add sub les adc cmpsl lret cld add pop es fcmovnb xor or push sub dec cmp sti (bad) jo mov adc sub aam popf in clc lahf jmp add mov xchg push pusha add test in xchg add mov iret js inc sub add (bad) push aad pop push add loopne mov prefetch push push and or divl push outsb sbb xchg test fs add test cs push jnp add ds cmp sub mov enter and bound int3 inc push jb out or xor mov in or movb fwait mov loope mov outsl cld imul jo fcomip dec jae sarb add xchg mov cmp sbb leave inc (bad) push add xchg jae in inc aaa sub mov popa ds shrl push add lock out cld idivl test push and lahf bswap and inc jg ljmp pop add push inc mulb insb dec add push sbb mov in fwait mov imul rorb mov icebp pop loopne sbb lret test pop (bad) xor add js adc jnp lcall stos clc or sub sub pop cld ds mov cmp popf push decl in ret inc clc jecxz mov jo push jbe adc in cwtl push cmp pop sbb flds and add or xchg jl pop jmp push xlat mov xchg in inc sub dec pop (bad) ljmp mov push mov inc add inc sub insb mov inc cld and aad (bad) shrb addr16 adc aas add cltd jecxz out pushf aam or add rorl addl or mov xor sub loopne pushf ret mov sub add inc pop xor lret fs add icebp cmc xchg aam inc adc xchg (bad) mov call jp sbb push flds add xor xchg sub lods adc jo jge inc clc aad (bad) scas addr16 lods rcrb sub stos adc jnp xor aas addb inc sbb push iret and add (bad) aam push xor pop add in test (bad) aad and sbb movsb jb orl insl test jl nop loopne out jno push inc mov (bad) xor xchg in movsb adc sbb add pushf push lock jo push mov push sub out dec aad dec and jb mov and inc adc out loop rorb push lds mov cmp mov test dec add jl and lds xor mov add jne les mov stc out jge add js leave mov sub cmp cld scas aaa (bad) dec cli add xchg into sub popl aam mov adc xchg les mov mov gs pop mov xlat add or push jp enter divl stos ret rcl stc push cmp mov pushf mov adc inc mov sbb enter mov push xor int lods mov sbb inc xor clc adc aam add lock xchg mov out sub aam fstpl sbb jp inc push mov gs xchg xchg inc mov add inc inc add xor cli ret aam movsb cltd pop inc (bad) fnstcw call mov sub fist test sbb xor pop dec mov jns and mov xchg cmp rcrl es adc outsb add dec repz lods mov into rol repnz fiadd or cmp sbb push xor ja idivb in loopne push sbb xor shll fsubrl mov fcomps in mov adc xchg test aad dec shrb mov and dec pop out mov test lock push mov sbb cmpl out in incb popa pop shr fabs bound jp dec loopne or (bad) test and sub add stos jecxz add call (bad) jg andps in int3 inc xor es cmp push dec sbb lret and mov or xor (bad) in inc movsb and out popf cmp mov and test loope cmp add call sti add jp cmc dec pop inc in dec xchg sub xchg aad data16 dec enter cmpsb jl add iret lret push and shrb aaa jmp add cs orl insb dec xor jns rorb adc and sub sbb pusha ds test add arpl aaa lcall mov push cltd add or popa cmp dec add mov fcmovb imul mov loop push jnp dec roll popa cmp inc flds push sub mov jl js push inc xor push out dec pop fcoms fdivp push push inc (bad) mov rorb nop cmpsb andb test jmp sarb rol and (bad) cmp ljmp adc into testb jle xchg fisubl inc push jo xor cmp rcrb sarb imul lds shrb inc aad add mov xchg in mov je add in out out pusha push xor (bad) or stc cld arpl imul cwtl pcmpeqw (bad) mov and std cmp scas mov inc dec aad push push pop in push stc sahf arpl inc stos dec add ja in pop imul lcall push insb fildl push xchg dec or nop inc lea (bad) rclb or lret pop fisubrl int3 aas decl add aam mov scas sub cmpsb (bad) push inc aam adc add ss lods sbb sti ret inc mov mov insl mov in add roll pop adc inc cmpsb inc sbb lcall or xor stos mov adc cld add rorl int3 and or xchg mov sub sub pop jp movsb mov sbb std arpl xor add cmp test int3 mov nop pop add ds pop sahf fdivrp or adc hlt inc loop test mov bnd rcrb out cmpsb cmp mov scas enter adc jo inc xchg mov push xchg push ja and and push xor mov cld aam add and je sahf mov leave pop sub (bad) mov rcrb and add sub pop push ret arpl xchg cs in xor in or gs lret inc xor popa pop loop dec dec add mov fnop (bad) or nop fdivs test int add mov cwtl add bound cltd les mov cwtl mov sub pushf cmpl movsb and inc idiv cmp out pop lcall sub add pavgw test enter test xabort fsubs inc cmpsl popa mov dec ja repnz test mov jge pushf jmp fstps or popf add and xchg or call (bad) imul imul xor in (bad) std jl bound sbb fistp or mov add push js cli cbtw lock mov mov icebp stc cmp dec ror jae pop jb loopne das sub scas or adc dec cmp bnd cld (bad) cmpsb add aam scas and and arpl sub or jmp or aam les push add out scas inc and sti loope int3 sahf (bad) dec or bound adc and mov and push xor pop sbb and mov mov popf push sub pop mov pop cltd jle inc jmp inc test sbb hlt xchg and (bad) insb movsb dec sub dec and or adc add daa (bad) into pusha dec cmp push jo pusha adc add andb jne fwait ret add or xor xchg cwtl loopne inc sbb push inc pop fiaddl dec pop cmpsl mov mov pusha in rcll push inc xchg push cwtl nop cwtl pushf fs cwtl ret insb sub push jl testl lahf shll std jno in gs xor xor pop adc lock mov enter mov sub test scas in sub dec dec and (bad) sub call mov addb inc or nop es cmpsb mov sbb mov push sti cwtl lds adcl inc in out aad inc and adc jecxz and add fcoml add insl fimul subb or add bound mov sub or mov addl add sysexit lret ja jbe inc test rclb sub dec icebp jbe adc faddl lods ret or pop adc hlt nop or sub fisttp idivl popf mov inc xor jo sub and movsb add test js push rcr pop es outsl int test cmpsb adc jg lods sub mov mov sub sub sahf xor inc inc inc loope xlat clc dec jns mov push js cmpsb push pushf in fwait pop mov adc inc or loop mov popa test add ret dec ror jl lahf lcall stos lods dec adc rcll jno insb sub sub mov (bad) and test aam cld cli sbb jg subl orl add out push ret rcll fwait sbb dec or mov cli call push jl shl lret add inc popf and lahf and push sub sbb orl orb add push mov (bad) addb cmpsb cmp push push push sub push lahf adc inc jns push hlt xchg sbb cmc loop mov add jno pop xor push jle es lock shlb xchg mov adcb cli push in stc push pop adc das imul nop xor jo and pop cmp int3 sub dec cmp jo lods notl add std loop xchg xlat sub orl push cmpsb lods adc insl or adcl int3 and and mov aad sub and adc lea fsubrs xor insb or sub stc xchg or xor mov jne fs loop dec add sub inc test push ret add or daa mov stc lock xor (bad) mov push les jp inc jo fidivl jns xchg add xor dec cltd pop int xchg daa inc in inc sbb sub insb cmp push insb mov add mov jo cli add cld out sub movsb cli (bad) ja arpl pop mov into sbb (bad) sub imul lock cmovp push push pusha push arpl xlat push add sbb or push lahf inc or mov mov add push (bad) js jg andb dec stc mov adc add test add adc (bad) sahf (bad) je idivb sbb and adc dec add or sbb jbe adc jl inc mov in sbb xchg es inc (bad) cmp movsl and push adc adc inc dec and lods nop sub cwtl lods and stos fwait adc xor enter nop icebp pop bswap dec lock cmp addl push add sbb pushf lods stc repnz nop jl in xchg pop aas and in jl in sbb dec aam and rcrb popa cwtl sbb xchg or lock icebp jge and xchg xchg ret sbb mov jle xchg cmp xor push enter nop call jl cmp test (bad) movsl movl pusha sbb ds or mov (bad) cmpsl lret stc sbb and cmpsl jbe rclb gs xchg add in (bad) fisubl jecxz adc xor jae cs int3 out add repnz or fild clc fsubrs xchg cltd pusha roll add mov push pop pop xchg nop jg xor outsl stc in add aad jl mov add cmp add int3 iret sbb test cmp adc xor sub sahf or mov sbb lret sbb cwtl push mov jge test add out mov add icebp sub add mov sahf add aad jle aam add cmp (bad) scas or js inc lods dec stc jmp fwait add pop gs sahf sbb cmpsb in inc cli aam loopne add adc mov jnp addb popl aaa cvtpi2ps mov std aas push push and jle or mov loopne add mov add pop adc pushf jno loopne xor sti pop adc sub mov add loopne push jae out mov add mov adc add inc cmpsb scas inc sbb mov add js xchg sbb (bad) sbbb testb mov jo cli stos test push loope mov sarb jg pusha in push cmp cli push rcll xchg enter cmp jno addr16 rorb add inc test push or or mov lds orb in mov in sbb mulb subb pop es lods hlt mov pop cli push add jno push negb rorl ljmp mov hlt push add xor pop pop mov sahf inc pop test adc xchg xchg add imul insl jbe add int3 lahf adc mov cmp mov repnz push fist incl add sti mov (bad) jo loop adc fcomps xor adc mov inc jmp fs in aaa add xor bound mov movhps jns rolb fimul js xchg test push mov mov lcall dec push push cmp out xor stc cmp call push ds and dec adc pusha shlb jmp add das roll mov (bad) repz cmpb jmp pop adc dec inc or and mov jnp cmp cltd popa xor sub mov fldenv jle xchg add mov pop add jae jg push pop jbe cmp xor adc loope add mov movsb enter add ja xchg add add movsl in mov (bad) sub add inc mov repnz mov sub or lfs cmpsl jne add pop mov in cmp push outsl movsl insl test mov pop cmp mov jl add inc jno inc adc lock mov punpckhbw hlt bound shlb add mov lods cltd sti push dec xchg jnp cmp data16 mov (bad) xor xchg cmp jmp iret subl sbb mov xor es push push or fstpt (bad) enter pushf xchg xchg mov rcrb push sbb mov mov lcall xchg pop nop sbb jb add out jne add mov cli lret jge nop call outsl pop xchg fiadd frstor cwtl jno cmp arpl or mov add dec mov sbbl cmp pop js push ficoml fadd push and mov add pop dec add sbb into or jmp inc repz pop frstor scas (bad) pop push dec jnp xchg int3 cwtl popf push add pop cltd int call pusha stc or shlb cld (bad) sar dec pop nop push add cs call sub or mov paddusb push jmp push xchg xor cmp loopne into fisttpl rcll and mov pop cmp jns add (bad) jo add es (bad) add inc add push in add add mov xchg fmull add es out inc fadds jae ds scas pop cltd add loope xor xchg pop fcomi mov and leave stos push add call roll mov mov sbb jecxz subl test test lret pusha rcll mov fsubrl xchg stos ss sub adc addl rcll popf aad in xchg or cltd xlat add sub stc xor cmpsl jle (bad) sub outsl or or mov cmp cmpsl mov rolb push shrb outsb imul pop pop add inc mov xchg and loop add or push nop lahf fs xchg in mov pop mov sub scas dec and loopne repz (bad) lahf daa nop aad (bad) xchg cs pop mov rorb daa add nop jg mov mov inc outsl pop add loopne sbb nop or leave mov xor test popf cmp in (bad) sbb icebp fcomps pop push push xchg imul cmp jge add nop hlt mov adc icebp add popf das jb cmp pop addb adc mov mov (bad) fwait movsl cmpsb xor test dec cwtl add jae inc jb or andb push pop push mov push cmc rcrl dec xor xchg in add inc push add mov pusha cmpsb movl fs add insl add mov push adc cmp or cmp pushf add mov add das rclb xchg jmp dec pop js add iret movl gs cmp leave push jmp sahf shr roll xor add icebp mov pushf sub bound incl sbb rol (bad) xor movb jge dec enter shr adc add mov mov xchg out add cmpsb aam add sub pop jg sahf lods pop add push or or add jg outsl sub xor add mov lret add push xchg xor push cmpsb or pusha outsl jecxz jmp push insb xchg jp mov cmp pop nop bound rolb lods xchg outsb (bad) cwtl invd lret jecxz mov fdivr in or push or push subl dec pusha cld mov mov sbb xchg (bad) out jns add into and jle mov cwtl add ret and stos sbb xchg push loopne cmp les pop rorl fbld (bad) int mov mov pop scas push cmp cs push adc outsl add mov pop pop pop lock fild or ret test aam sbb rclb test sti push call inc jp inc dec pop shrl mov mov mov aas mov lea cmovs jns leave mov and aad sub mov (bad) stos push dec js pop dec xor push imul cwtl cmp adc xor je iret add pop inc (bad) add fbld popa imul dec lods test leave mov mov and popf adc xchg xor xchg insl inc dec inc push add mov sbb mov xchg iret jle add xor pop shll aaa add jg divl pop scas jbe inc jb pop pop adc adc cli dec fstps add enter iret jg pop in aas rolb add (bad) ficom scas std add inc loop stos xchg js xchg ret inc add jmp lea scas and lret popf sub xor repz pop ffreep sbb xchg push pop mov push or cmpsb sub mov outsb enter xor add movsb icebp cli pop shrb pop inc xor sub pop push jo je add aas mov adc xchg add icebp es add pop out cmp mov mov and rcrb pop xor push cmpsb add and sbb mov iret ret xor add add sub rolb or dec insb add or jne add in sbb xchg repnz dec pusha stos pusha push inc add jne cmpsb sub add and outsl aaa mov xor repnz ljmp add mov mov push jecxz in xlat xchg loop jge add rcrl adc xchg add stc out push loope inc test fsubr mov xor fistpl or js pusha and inc add add inc test dec add mov aad ret pushf rolb nop jo push incb inc xchg cli adc scas sbb add mov int3 lret enter add jp lods push push mov in and movsl cmp jmp push jno rclb sbb add adc outsb fimul mov dec add mov mov push movsl into add adcl jecxz lods daa add sub notl (bad) pop int3 hlt pushf xor push fldcw stc add and cmp push adc (bad) jp jbe pusha out in pop sub addr16 je,pn push jle xchg mov xor in push jecxz in enter add push mov sub shll notl les xchg (bad) in jbe pop add lods pop or movsl (bad) cltd pop (bad) fcompl inc add sysret repnz call pop je add mov mov mov mov jns cmc xor outsl loopne or add sub pop lock mov (bad) fmuls outsl and mov push and icebp or jl cmpsl call cmp push jmp das or add lock dec jae sti scas movsb cwtl into ja inc les push add dec push sub fwait sbb push and (bad) mov mov adc and cmp ret rcrb cld ds inc or xor mov adc mov popa adcl or sti jnp pop (bad) jg jecxz cmp inc mov sbb mov (bad) or cli std jbe (bad) mov xor pop sarb stos push push mov cmpsl cmp push rorl stos dec mov sbb add cmp add mov addr16 sar loopne out add pop sub add ret xchg pushf or icebp shrb ja test jle dec sbb dec push pusha lret dec add in fdivrs xor out jnp fs iret call and lahf pop add les fistpl pop or ja inc jns adc jno adc mov xor add inc cmp addl xchg pop fnop movsb inc cmp jmp cmpsb jb inc test pop cmp and mov imul add push pop idivb arpl sub loopne and xchg lret xor dec lcall add leave lock les adc pop cmp xchg pop lret cmp mov xor inc int3 rol iret add mov push jp add xlat xor mov xorl xor or es dec lods push imul js pop test clc and aam orl iret push in push pop ss clc jbe lds fdivrp imul mov sbb mov loopne fisub sub les add jns jae rclb mov insb or fldt aas pusha lock add loope repz sub push adc ja push inc xor dec mul cmp or mov scas mov ljmp rcrb push mov mov and imul and push mov jecxz std and cmp inc enter cmpsl pop jne add out andl add js clc (bad) dec cmp fsubr mov dec mov ja inc int3 out lock pop push mov dec cmp mov pop adc xor add xor pop loop ret jne nop enter js mov cmp loope sti add mov push add repnz cwtl fchs popa cmpsl ss lds out inc inc fadds push xor push leave test sub jo scas mov fcoml mov jo lock divw js aam int3 inc lods add stc pop ja add ss mulb outsb lret mov ret pop roll mov jb js int3 and add cmpsb movsl repnz add and mov icebp fcoms push ja add movl nop inc dec mov add mov test or (bad) sub js jae mov and cmp inc mov fidiv cld jnp movsb cmp inc push inc add jmp add andl inc jo add pop cmp roll cmp scas adcb add into mov add es pop mov pop rcr stos cmpsb (bad) clc outsb dec mov ret (bad) fs nop mov jmp daa and sbb push sbb aaa dec xchg cmc inc (bad) movsb repz and mov dec inc rorb fistpl pusha sub or loopne sbb push adc xor jp stc aad jns adc clc push or cld fstps xchg lock pop loopne ljmp pop sbb mov inc ja clc int3 xor lds add (bad) jae pusha scas and leave or mov or shlb xchg dec and add push clc movsl pop hlt push mov std lds in dec repz and mov cmp or pop lret mov int3 dec mov lds jl sarb addl cli add cmpl les mov push xor pop cmc sbb (bad) mov (bad) aaa add ficom mov aad cs test push dec rcrb xlat sub adc test jb or popa sub jo add xor sbb push pop js loope mov mov dec push aam ja cmp (bad) xor sub bound les jl aas xchg nop pop or int3 (bad) add fild divl rolb mov jp xchg add fwait mov nop add mov aam xchg pop add mov jb inc clc and dec test (bad) (bad) int adc std xchg or mov scas sbb sbb pop push ljmp int3 cmpl add sbbb inc xchg (bad) mov push fcomi dec enter push test mov or add mov xlat jg push mov jno fsts test js mov inc fsubrs push xor (bad) enter add (bad) fadd cwtl add into pop fldl jle hlt cmpsl push aaa sbb push enter ret (bad) pop imul shr cmpsl or out lret inc sbb jne (bad) push scas test inc or int3 mov xchg insl adc mov daa add pop cs ss out js cmpsb lock in sbb lea (bad) clc add pop add cmp imulb addb pop (bad) sub into lods and push imul push imul dec or pop mov pop add outsb pop dec mov stc shrl sub pusha dec adc add add add push dec stc (bad) lret aam add pop mov lea push xchg push (bad) push jecxz sbb call mov fisubl dec mov inc cmp push fwait add and mov movsl scas mov and aaa inc sbb lock mov dec push add fs fsubs xor sahf out or and nop insl test pop mov repnz movsb jmp mov lds (bad) leave cmp and fcoms les jne adc mov jmp adcb add adc idivb or inc nop subb jns mov dec add fnsave add sub fisubl outsb xor scas in inc clc push rclb adc pop add cld call loop add jecxz sbb sbb arpl lret inc popa xchg test add jns or pusha adc add pmaxsw movsl mov sbb push repz fild divl (bad) imul into test stc nop jnp add icebp fildl rcrb add dec xor add mov (bad) lret mov mov pop arpl icebp pop push xor fwait and dec fsubrs add fmulp jl pop arpl lea mov in dec (bad) xor or (bad) mov clc fcoms nop dec jl (bad) rorb dec mov add or sarb push mov jns cmp loopne xorb mov aam mov dec xchg or xor jae (bad) rolb call push fldt pusha pop and js pop icebp xor xchg out pop xor pop repz inc pop xchg push push adc adc and fs mov cmp aam out movb jl repz addl imulb push push arpl enter loope imul addr16 clc or jmp lret add jle pop loop scas dec rcrb add push notb subl pop clc pop jp add mov xor inc xchg imul fimull xchg ja add (bad) adc jb fild int les adc or inc mov fsubr and arpl pop jmp sub push insl mov and xor mov dec add fidivl lcall jno or fmul and add (bad) ficompl pop je mov pusha and lods inc inc pop ja and jo inc jne in push lods movaps inc adc add adc pop cmp push jbe cmpsb loopne mov cld or push fwait cmpsb icebp jno insl inc mov or ss mov xlat add cmp insl adc or push or dec add xor mov test dec mov movsl js add call xor add arpl ret int sbbl push pop fstpt push pop insl clc cmp jbe jne out push stos cmpsb fcmovu cmp sub push dec cld pop or xchg or inc (bad) movsb push add mov mov or inc push and inc in sarb or mov loop lods mov adc mov add (bad) and cmpsb adc push push lods xlat outsl mov dec scas adc test pop mov cmp dec ficompl scas mov int3 push add int (bad) ss ret cli imul mov pop jnp out pop dec sbb jae (bad) loope (bad) jle mov sarb jo cmc jno add push pop pop (bad) pushf pop js jecxz jno ds enter lds addr16 daa pop jmp inc mul add mov sbb lret mov mov outsb sbb or out call test cmp in js push lret sti je add pop fwait cmc add lret rcl popa (bad) (bad) (bad) add in (bad) inc add cmp jo add (bad) pop loope fldl popa aam js mov jo fsts xchg adc shll jp mov and jl lcall pop xchg sbbb out cmp add push jo xor movsl push rcrb je es or mov xor mov add cmpsb rcl xchg lea scas negb adc add cmpsl iret xor jl ja sbb dec test sti lcall addl popa sub movsb rcrl and aaa sahf shufps sbb addr16 sti pop add xchg pusha cmp mov add adc dec inc inc ja xor into pop xchg out testl scas lldt add push loopne push mov jo xorb add or dec sarb je pop loope adc loopne test dec push lret jae insb loopne mov sbb sbb gs lds cmpb int3 (bad) mov movsb loop sbb add jbe insb jo stc movsb add addr16 inc inc cmp out xchg faddl mov out and push mov add imul xor fmul lea pusha and or into sbbl test das aaa cmp push add cmpsb mov mov mov mov insb jmp xchg packuswb or test dec adcb pop pop jge les xor ljmp shr sbb push dec or mov loopne jge test sub pusha sbb mov xor xor insl fsubr push lods add stos lea jbe xor push add mov add cmp push into (bad) rorb jo add sbb lds cmpl jge sub jp fadds add sbb add push scas mov mov into call loope clc mov pop dec cmp stos jge inc loopne in mov and fs pop inc jo and push fs popf rol js add pop xchg dec shl clc jae add out sbbb mov mov sub repz push sbb pop inc ret loope in dec or or push mov mov pop scas jnp nop jl xor adc or outsb and (bad) bound mov add inc mov jl dec add or or hlt cmp push inc fcoms imul xchg in test lock dec jo add mov mov scas add xor rolb add jg ds xchg cli in mov push dec call stos dec and sbb in jmp stos mov rclb push enter fs add inc incb popa in jo in ret sbb jmp cmp cmp push cltd pop lahf cmp dec adcb adc xor test fistpl push mov add in rcrl ljmp outsb xchg (bad) lods jns in jle out add pop adc xchg xor or push jne xor mov test insb pop mov add pop lock inc jmp (bad) or cltd call sub (bad) int3 je ss xor pop cmpsl stc inc fwait pop cs lcall in loopne rcr jmp loope mov ltr or ret sub adc aam xor mov int3 adc inc add mov mov mov push pushf ja mov jmp adc into rorb add jne fstps shrb add dec mov inc mov sbb mov mov add int adc cmpsl insl test pop popf aaa out int3 pop or int3 test pusha add xchg push leave dec inc mov cmpsl jo cs mov add cwtl fwait sbb xchg xor imul insb jg fcoml sbb not mov or dec mov cmpsb xor leave add scas lods test mov push xchg push mov sub stos or cltd inc sti lock push xlat mov push push add mov in add outsb push add mov negb js inc add negl push outsb sarl cmp add into and mov or fldcw nop iret sar mov add sub and (bad) jbe adc sbb mov subb rol mov push nop/reserved mov sbb dec cmp sbb leave pop test and cwtl lahf add ret mov (bad) xor imul inc add inc int lods cmp ss (bad) fsubs (bad) or push (bad) jne xor add pop push lock je inc lret (bad) in fimul jno push in xchg in sarl pop sub pushf xchg dec in pop add cmp add mov jo or pop cmp inc mov loopne pusha inc mov push lds add push inc cmp jecxz lods cmp shr sub cmp jae sarb add inc mov cs cwtl add add sbb mov pop and dec movsb out mov icebp xchg cli or and fwait adc pop loopne movsb jl inc rep inc mov and das or fs adc pop and dec insb sbb mov add popa sub or in xor stos inc arpl or popa jo add mulb cmpsb lock sub aam add rcrl inc push xchg insb sbb mov lret add and stc xchg jb pop or and aad mov imul popa cmp or add out popa jne add test push sbb aam cmp popf pop inc ja,pt cmp add rcrb add loope adc mov xchg pop pop icebp lds jno mov add (bad) adc push repnz push loope jo ficoml sub iret inc stos dec adc add push or shlb xchg in sbb jecxz sbb (bad) ds out popa loopne pusha mov add (bad) loopne sbb push or cmp inc add fisubl addl movsb push ret stos lahf xor add mov inc cmp add xor push push lea repz and negl outsl add mov scas pop cmp sbb pop inc hlt cld inc lahf and jle aad or loope lea outsl jno add mov xor sahf cld add or aas add add sbb inc call mov dec inc pop add outsb xor test fsubs into and add adc xchg add mov jg and fidivl les ret cmp loope pop push and mov (bad) repz pusha jns pop add mov mov in jno cmp xlat enter pop scas sub shlb pusha in cwtl fnstenv inc mov fild jl xlat cmpl lds pop add mov cmpsl int jg xor dec sub stos sbb mov cltd jo add movsl in jp jae shr add nop add aad call push movb add mov add repz cwtl jne dec out push std inc add sarl add jo pop pop add cmp mov outsb stc cld xor cs or sub add push hlt les cs fisubrl xor jge jno xchg dec insb add iret dec std mov in push imul add les add ss insb (bad) add fisubrl mov add data16 cwtl or lock add push xchg call mov stos imul xor js lcall adc add mov inc xchg jb mov mov lahf cmp adc lcall mov xor repz push and xorb fadds shr aaa sub adc fsubl dec out lret add pop lret add adc sbb inc ret cli fsubl cs pop add adc add sub iret leave icebp testb lret xor and loop add call and std enter cmpsl ss ret (bad) cmpb faddl dec popa stc sub xchg fwait movsb aam push dec ret sub xor cld pop mov pop js nop roll xchg mov scas pop pop ret push inc icebp aas aam sbb push jbe andl stos cmp out push add jmp int3 repz sahf and sbb sbb xchg aam pop inc out cmp rclb outsb cmc sub psllw lods mov daa aaa add mov sahf mov cmp (bad) sbb inc cmpxchg mov sbb add mov push mov lods lahf sbb pop imul or dec xor in (bad) iret inc xchg cmp xor pop and lea jb rcrl std jmp add (bad) or lcall and pusha aaa rclb cmp add mov lea add cmovae and mov test jmp lods cmpsb mov sub or cmp call aas in shrb hlt shrl inc into aad mov pop subb sahf add repnz mov jno jbe int3 scas mov mov mov push jb test stos popf and push or pop cmp imul aaa inc aam test arpl mov mov or add adc cwtl (bad) and std in and add push jae pop pop jno pusha cmp mov xor add pop insl mov push mov insb or jmp adc popa jge sbb in dec flds test insl fisubl dec jge jnp push (bad) aam inc or nop out dec shrl aad les jbe lock gs xor add cmp insb mov adc inc xchg jecxz test cld jo add jno and sbb sbb shll push xchg xor inc mov repnz in mov push sub (bad) mov (bad) mov pop sub fldenv aaa imul add popa shrb and add loope sub call jbe nop xchg sahf sbb dec cmp and cmp pusha setno int adc mov sub mov add subl in clc sub add or or scas insl rol sahf cltd mov xchg ficomp nop aam or dec xor mov test add add (bad) in lock cmp ljmp mov outsb mov pop lds xor mov adc dec push adc inc sbb dec pop nop cmp out push fwait divb (bad) jno adc mov xchg in in xor pop scas and mov insb fs and sbbl fbstp mov fucom pop or or mov cmc mov sub outsb aam into adc xchg lods mov sub aam fucomip add cmp adcb mov jns daa cltd jb add (bad) call (bad) xor xchg lods add (bad) inc mov mov jb lcall ret out loopne xor and neg add aaa es pop mov inc adc cmp mov add jo jge jg or sbbb adc in aad ret fs clc add dec fisubr loop xor xor iret and dec mov je dec fcoml push and xor ja lahf outsb fsubr and dec mov lret push inc jae or dec enter movsb cmp fwait mov xchg inc divl daa inc (bad) push in fs add ds sbb je mov (bad) ret dec mov imul mov and leave inc jmp imul jl or pop mov popa (bad) xor dec test add mov jae push fwait push push not add pusha icebp xor jbe dec sbb pusha sbb pop xor adc orl js mov pop or mov imul mov (bad) lcall adc push les dec fwait enter dec add sub call mov pushf inc dec xchg adc scas mov sub jle mov aaa add jno ja nop mov add in cld repnz popa dec test adc xor xchg xchg mov jp rclb mov mov push mov repnz cld lcall shl push idivl movsb add mov inc mov dec nop push lcall (bad) cmp test pop stos iret push ret mov sbb pop mov ljmp pop pop test in mov out orl dec leave jmp and fmuls sti add ljmp (bad) cld sbb icebp push movsb outsl add pop popl adc push fs xor lret in jecxz sbb jae out add sub loopne outsl stos add mov adc aad iret roll xchg es inc sub xor ljmp subb or add jecxz pop mov and mov mov jns sub lcall sub add sub or inc in or cmpsl cmp test xor fstpt xchg mov addl adc rol insl or subl lock sbb dec adc add (bad) xchg inc sub add into and mov arpl and xor cmp xor xchg mov mov dec sahf push add scas (bad) aas int mov jb add pop enter add jmp in fsubrs adc hlt jo adc shrb adc dec jb subb les jne insb add movsl aaa xchg dec xchg in test (bad) fimul push orb sub pusha loopne jno mov cmp sbbb add loopne test dec inc add scas adc dec ja inc ss fs and lcall jns xchg pushf add les mov adcl cmp cmp sub cld and push or in or lock sahf outsl std dec int add sub out mov ds or cmp into scas popa mov add cmpsb repz fs movsb add sbb pusha mov xor fwait push pop inc (bad) and scas repnz aad and mov roll sub test xchg and clc mov lock insl lock inc and mov add mov adc add call or popf sbb or in push or mov ret (bad) cmp add and mov lds in xchg pushf fwait or adc cmp mov push push sub add cmp je mov addr16 xchg out xchg lcall and out pop push pop pop rcll add add mov xchg xor mov gs dec arpl sti jbe inc ds (bad) pop aam js fcomps xor mov test xor dec cmp (bad) repnz dec repz push xor push jno loop orl flds and cltd jno add pop orb sti inc push sbb shrl repnz lds loop loop push jno cld and xchg push fwait push mov jbe ret sbbb mov mov pop mov dec loop rcrl xchg fs cwtl adc jae insl (bad) cmp pusha mov loopne push dec mov inc cltd rolb shrb hlt cwtl popf inc ja imul push sbb mov ja js and enter (bad) (bad) (bad) xor out test (bad) and stos mov icebp add stc jp mov mov cmp add mov fcoml mov lock add push and or push icebp xchg sub jo mov mov (bad) push push and scas add cld call das add (bad) je push stc jae scas jb add pop nop imul xchg in add popa jno jmp xchg sti mov decl cmc cli scas lock adc add cwtl mov pop ja aam xor loopne outsb add push and xor mov aam clc sub xor sbb mov cmpb pop test mov lods and sub shr test xor addr16 jne adc outsb stc xor cmpsl jge hlt inc je mov sbb fnstenv popa pop (bad) subl wrmsr inc or incl test cmp and inc sub mov lcall add je sub jns dec adc or xchg jno lock dec cld loopne lcall mov push add and mov push jae fildll cwtl mov jae sub mov inc (bad) push insl xorb test xor mov test addb cwtl jmp es or dec mov cmpsb hlt loopne les test cbtw xor pusha je mov sti mov mov xchg dec or pop dec xchg pop jbe lcall stos add fs adc (bad) jle and test and add jne xchg sbb cli add pop inc cmp push orb lods mov clc cmp mov rolb push mov mov xor add sub and sub jne scas stc (bad) push hlt add repz inc cmp mov inc push mov xchg je mov pusha mov test cmp dec (bad) inc icebp xor test test je scas (bad) sbb fwait test fcomps cwtl test insl (bad) inc cmp call lods xor or inc jb lcall pop push iret dec add lcall loope jg sbb mov dec insl lea clc and xor les cmp loope mov mov cli and xchg sub xchg dec call add repz popa and pushf rolb fwait shlb repnz adc ret mov fld mov or hlt mov inc cwtl scas std lret mov mov int push jge arpl mov cmp mov ficompl sub stc loopne dec add test shlb mov adc push test add jo orb mov pop hlt sub mov push aam lcall int3 movsb cwtl add jp stc inc xchg test add xchg (bad) es mov fwait inc in jb addr16 inc jp mov arpl jle jne pop pop call pushf es lods add cli jmp xor mov jmp clc jns cwtl cmp sub jno add test lods mov outsb cltd and pushf icebp mov mov sub add das cmc jae fs xchg outsl icebp adc in mov dec cmp jae mov dec int3 add outsb cltd aad lret mov fsubr aam jne loope and add jne je xchg fnop pop mov je int sbb pop cld adc cli fs dec popf jmp jge mov aam mov lock out or push jnp and cmp (bad) mov ljmp xchg ret fs and js mov shll pusha xchg jne addr16 cltd loope add mov lret jp cmp lea fcomps test push add mov lods bnd dec add mov int xorb jno es mov cmp mov data16 loope je dec add inc sub (bad) mov jl cmp xor push mov sbb jno xchg cmp inc inc jno and daa dec fdivr lds add mov ficom daa cmpsb jecxz mov and repz and loopne shl cmp xchg out bound sbb mov rdtsc ss push add sbb xor push mov xor jmp jmp jae cwtl cwtl jmp in sub in inc push fmull dec test inc cwtl jmp dec (bad) push mov push cmp push jns rorb push xor cld add (bad) ss clc push xchg or (bad) mov and int3 dec fcompl xor ja push adc sahf mov xchg cmpsl mov dec and xor mov adc mov xor sub mov and mov mov fstl movsb mov fucomip jno xor shl pop xor cmp stos outsl dec subb inc hlt add cmp pop jns jecxz pusha mov pop adc inc shrl xchg out js shll addb jne inc push adcb jno pushl test lds in adc xor or push and push jmp mov cmpl sbb adc xorb xor mov arpl mov cmp mov (bad) mov mov dec pop int3 cmp xchg ljmp fdivrp add inc push insl aam leave add lods addr16 mov jns push jp mov mov mov in xchg ret out add jge adcb (bad) mov movsl jp or xor xor and mov jns test das xor mov xor sub test push jge test or outsl and or jns mov cwtl xor push loope push pop cwtl or or flds xor lds push or (bad) nop mov hlt aaa or out rcrb sarb movsl rcrb push popa add xchg cmp mov addr16 sbb mov scas cmc push add (bad) icebp and adc push sub mov loopne arpl fbstp add sbb mov mov add xor pop xchg dec push mov add aas dec pop add dec xchg sysenter xchg test xchg or pushf xor sub and cmp mov mov xchg cltd fs scas add sbb or jmp insb add imul cmp inc js mov mov cwtl ret ljmp xor ffree push pusha dec or cmp xorb cmpsb movsb or xor adcb fstl adc adc std add insb fiadd xor cwtl xor test sarb or lcall pushf xor int and mov cli aas mov or push fcmovne loopne ret xchg mov jecxz stos dec pop sub add shrb jle clc xchg mov (bad) xor xchg fist cmp jb pop mov stos or sub icebp aas es mov dec cmp les adc add pop and mov iret jnp flds dec push nop adc paddsw cs imul js adc es push dec loope sbbw lods cmpsl imul push xchg jae shlb cli dec push insb sub mov das cltd mov inc and cmc adc ret bound popf scas add jp jbe or test or notl dec lock xor and or mov cmp cld in xchg scas repz and je (bad) mov pop push and adc (bad) (bad) mov and add xor inc mov xor mov lds mov add add (bad) in das xor fwait cmp ljmp and add into mov cwtl and imul test ret scas mov sub mov mov pusha insl xchg pusha pop nop and jg mov mov lea fisubl push cmp xchg sbb sti imul or dec imul rclb adc add in hlt loope lods (bad) in xchg xchg and push mov xor fsub add mov mov (bad) pop jne dec mov nop dec cwtl push adc addb loopne xor and (bad) mov and cmp addb mov or lahf push adc popa enter sarb out xchg inc xchg js sub xor xor insb cmp sub rorb mov pushf lods sbb cmp sar cwtl xchg test loop pop xchg mov movsb imul cmpsl and cmp add or into outsl test pop or test imul mov aas mov xor int xchg xchg xor mov rolb je mov adc mov xor cmp adc lret (bad) int3 daa or add and push call xor (bad) repz push or pusha xorb fidivr sahf and and out in adc ret cmp dec je mov pop pushf daa xchg ud2 into push cmpsl ja mov push xor jns push les or push (bad) cwtl mov test push xchg imul adc rorb das fistpl in clc jmp mov mov add popa lret icebp jne mov add mov sbb or mov and int std mov xor and jns pop dec mov sub add mov cmp xor or ja test and xor scas jns loop add mov ret sub jmp pop adc mov dec add and lcall inc mov sti add push rcrb adc mov sub add push aam rolb xor and adc inc lds repz inc in mov cmp push (bad) imul std push xor cld add icebp rcll test or add cld nop repz enter add sbb add ficomp sub mov fdivrl aaa mov rol mov lcall mov pop popf and cwtl jo pop xorb and fcompl adc adc push sub or int3 pop xchg xor nop xchg push ss inc imul adc dec hlt mov addl pop xchg xchg jae mov fs jp inc ficomp xchg lods lret sub notl std (bad) fdivrp inc movsl xor add loope out mov cmp sbb sbb jne adc xor push pop shll pushf add adc xchg sub data16 dec cmp or xchg mov adc lock sbb dec mov dec stc inc and lret rcrb cmp cwtl je movsb dec fistpll les cs mov inc adc xchg add add jl or jno mov cmp push (bad) lock push push lods lea xchg xchg and mov mov xchg loopne and sbb dec cmpsb mov das add scas imul pop sbb addr16 std add jle jb cmp mov push insb dec inc stc loop sub sbb int3 icebp cld lea or push jbe je mov out or cltd iret xor inc icebp add dec mov push or and out jmp mov mov mov mov add mov adc sbb dec and add loop cmp dec fucomi sbb fsubs cmp push aas mov mov and orb outsb fidivr mov orb rclb sbb ja pusha adc cmc jb and popa pop jns inc fist lods aam in mov add les movsb push ret mov sarl xchg lds fs jl addb (bad) mov hlt stos mov adc mov rcl insb sahf popa add arpl and popa in (bad) inc inc xor inc add icebp xchg test sub ja jb (bad) popl (bad) xlat stos lret dec stos mov sbb cmp je out insb adc jb cli jns mov movsb cmp cmp cmpsl fwait dec sar movsb les cmc mov push push fnstsw add xor testb cmp or mov jmp push or sbb add mov xor (bad) nop (bad) xor and add leave jp add add push mov mov js les (bad) cmc and push push enter dec sub add repz xor sarl outsb subb adc push fadd add pop mov (bad) gs pop and int push sbb sti lret test imul or cmp fcomps jl inc cmp sub aam jle sahf nop and push stos adc push rolb sbb jno pusha loopne out push pop add jb mov (bad) call push in pop fs sub rol and push mov xchg test and popa fildl leave nop rclb pusha jl xor aam and icebp pop pop inc add adc mov loopne inc not push loopne scas jb inc mov adc inc iret push je ret popa mov incb mov xchg leave mov mov and or inc fwait mov xchg stos lret and inc add inc push cmp or rcrb and popf xchg inc or cmc pop mov test and loop cmp add add xor jecxz xor js or (bad) mov call pusha int cmp pop lock or int3 movsb add fildl sbb adcl inc ficom rclb stos mull adc scas inc sub nop lock hlt inc loopne js ret enter roll ljmp xchg inc dec mov sahf jl (bad) stos mov push mov sbbb aaa or out mov cmp es sub inc add adc xchg sarb jl sbb cwtl sub push sbb cmp outsl add add add and xor inc cs test loopne sbb into in testl or sbb or add js xor mov cmp mov xor inc icebp pushf je scas mov (bad) pop sbb call mov stos outsb add insb push nop (bad) mov les sub out jns mov (bad) loopne imul add (bad) mov mov xor movsb xchg pop jne fiaddl pop inc push aad sbb sub imulb push sub sub adc jl aaa mov stc and cld add adc out ds repz or fwait xchg inc push mov clc and in pusha and cmp rolb (bad) dec pusha lcall in lcall push sbb ds cmpsl sahf adc mov mov in je cmp cld out insb pushf inc popl jns xor scas mov js add ds rolb ret lods sub nop leave lods cmp ret mov add push mov xor subb push outsw rolb add sbb scas leave mov rorb lahf aaa mov cmpsb sbb rorl dec push imul sarb add outsl xchg lods jp sub mov push out and push jb,pn das inc push mov inc rcll cmp ljmp xor into arpl movsb lea add arpl stc flds (bad) add sub jne xchg (bad) ret adc push push mov dec mov and push (bad) or and xor int pop xor add imul int rolb out or mov push cmp inc and adc xchg jbe or leave icebp or and sub add mov sub add les push hlt jbe sbb cltd jo and xlat inc std add xor push cwtl mov mov scas add mov sbb sub dec adc add and icebp dec icebp in mov push cmp test int3 and mov or std mov fisub ret push inc popa adc push sarl fnsave and xchg adc sbb cmovno cld add jecxz (bad) mov leave pop incl pop add and or cmp add push dec sub adc dec xchg (bad) add jg add je test xchg add icebp imul and aaa add movups push cmpb (bad) sarb or dec bound adc mov icebp test fs adc sub faddl insb mov xchg xor sbb cmc xchg sub xchg nop adc hlt rorb push in cmp fldl mov adc inc add arpl cmp xchg pop popf lock mov lret pop sub dec xchg mov subb aas adc cmp (bad) mov push ljmp movl pusha sbb xchg xchg push add mov mov cwtl in pop jbe clc xchg pusha popa cmp es add jnp add pop sub xchg rorl pop and sbb jge sbb fimull xchg mov das orl movl mov and mov (bad) bound jg jp mov dec mov leave scas add add shl loopne xchg pop jno xor lds jno push add stos test arpl pusha (bad) ja js add push add (bad) push inc lods dec cwtl pop mov outsl and add jbe iret adc roll lock inc sub add dec (bad) adc imul ljmp ss cmc and lock lahf xor mov mov out lret push push shll (bad) lahf mov ss or jle outsb jns xlat movb sub ljmp dec dec inc cli pop loope or add pop clc fildl pushf pop cmp or xor jno hlt aad jo pop mov pop and dec bound push mov mov cltd nop add rcll loopne fcoml cmpsl cmpsb loopne cmp or aas and inc push jl inc cmp (bad) repnz mov and push dec adc add and jno sub ds fldcw add in or mov ljmp leave jge jl stc jmp shll sbb xlat xchg jmp movsl in dec add sub in clc dec lret aad dec lret jmp out xor mov or add out test sbbb (bad) or je jl push jl clc inc subl add jns js addl or sbb icebp or shlb lcall aad and jnp out mov aad lds add fwait imul lcall xor orl jg xor push xchg clc lret add sub cltd sarb push sub or cmp repz add jp movsl jbe mov bound mov js sub ds adc pop sbb add lcall xchg sar inc in sti (bad) addl std push rcrl pop add (bad) xor cs mov fldl dec mov add pop in and outsb push dec movsb movsb or push imul adc and adc or jno fmul cwtl test loopne pop pop lcall mov jle aam outsl dec sbb mov and call stc adc inc dec popf rcl dec xor jno pop repz xor and xor jl add fs into inc or mov lcall sub add in push das mov std push mov (bad) call mov pop out int3 lcall xorl outsl stc jae int3 xchg mov jecxz adcb push and pop adc xchg daa or rcrb push cmpsl roll outsl xchg ret fs push (bad) pop loopne ret and std (bad) (bad) jmp push dec adc xor outsb xchg adc ljmp ret fimull lret add mov adc test xchg test or add dec cmp add dec lock mov xchg test pushf cwtl or or push push (bad) fldl cmp ltr ljmp adc xchg punpckhwd clc mov mov or enter xchg mov sub xor push add and and bound mov xor add lcall jl (bad) ficoml cli (bad) xor jp roll cmp sarl dec sub cmp adc inc mov outsb push aaa mov cmp add sub mov sub mov add lahf sub data16 pop mov sbb push adc and out or mov add sbb clc imul add into fldl mov inc adc xlat or hlt aaa outsl mov jecxz in iret add outsb leave shlb popf xchg adc cs push pop inc stos add icebp add iret pop (bad) notl cltd and imul out decb (bad) mov pop shlb or sub mov mov or sarb lcall cmpsb mov push push gs les pop mov daa lods sub cwtl xchg fwait add xchg xchg lret push enter dec jmp inc xchg pop loop add cli lods push pop dec shl and cmp clc and push test adc (bad) jo sub and xor push adc inc aaa push fwait push lds fsubrs add add int3 (bad) fs fsts mov jb cmpb push clc roll cmpsl pop adc stc andl cmp incl imul adc into popa mov adcb ds add movsl insb pop inc dec or aam jle xor push xchg fiadd inc out ret jno rorb and into xchg and and into nop add push push inc in xor test test repnz sbbl dec (bad) ljmp fwait jg sub popf mov cmp xor sbb xchg pop cmp cwtl dec aam or pop dec adc rcrb insb cmp js and aaa and pop outsl dec pop enter and insb mov bound push fldt aam jmp pop adc xchg int3 shlb and and pop aad pop (bad) lock loop mov push inc es and dec and cld je dec lret cmp add (bad) xchg inc pop inc dec lock cltd mov mov mov imul push sbb pop push cli sub loopne xor aas lcall jecxz shrl or adc ljmp xchg fnstsw add fwait lret inc or imul dec movsb call imul das jo cmp adc sub jne fs les pop push cld jb sbb hlt push mov out rcrb or pusha adc jmp dec call adc cltd push (bad) lock js lcall testl adc cltd insl outsl mov cs jae and adc cmpb xchg cmp aaa sbb fwait repnz flds jmp leave sub or sub mov cmp pushf add (bad) mov and add ja adc in and mov mov mov test repnz xchg add or jmp mov push adc aad cmp cli add fdivrs add shrb adc (bad) mov movsl add xor mov pop and mov lahf fstps pop adc mov add cld shrb push hlt jl ds adc lcall inc (bad) xor xchg adc mov mov inc jns push lret or push fsubs adc mov aaa mov lret add dec fbld cld inc push iret hlt add fnstsw imul xor mov rol nop clc mov inc enter push push (bad) xchg (bad) adc loopne (bad) pop add sbb sarl je xor or lock push pop jg dec xchg (bad) xor add nop cwtl inc test xchg repnz decb std xchg or pop sub sbb int pushf (bad) adc punpckhdq sub sbb clc mov lcall dec test in jnp test mov push mov xchg inc add push pusha and mov nop cmp or daa repz add js insb addl nop sbb pop iret push push adc push jmp out inc sub jae xchg rolb dec sti mov push ret adc adcb dec mov pop pop push std daa xor inc xchg loope test lret jo xor (bad) mov stos or and test and xchg cmp fwait js fsubs push xchg orl sub stos jp push xchg sub test jg dec std es mov or jp (bad) inc and das or lret int3 rorl adc addb dec (bad) inc xchg adc loopne mov lods pop into cwtl bound and and js xor push sbb dec pushf add call add clc mov fwait jp pop mov test sti mov loope xchg jb jb push test rorb inc int fcmove add cli xchg int3 lcall ret and jo dec or or sbb js pop mov (bad) xor and mov mov fs mov xor pusha and xor roll mov inc scas std push and sub rdpmc fldcw and repz loopne ja adc cld mov cltd cwtl iret enter xchg hlt add dec adcb sub in xor call cmp jecxz cmp enter pop jo cmp lock test outsl dec les sub inc cmp or cs loop sbb in add out nop sbb xor sbb add adc cmp mov or mov jg ljmp jge dec in sub adc pop inc lods (bad) leave fsts add xchg mov lds and or std enter jecxz ljmp rolb add das lock loop lahf push jno js lret xchg cld outsb in cld (bad) sbb int test xchg les dec loopne pusha addr16 fmull jmp pop dec or or pop cmove xor arpl pop push xor adc scas and or mov (bad) sbb or or (bad) movsl js dec or gs js or pop lret mov xchg and pop loopne mov mov push sbb pop xchg or or jo mov cmp lcall cli icebp xchg mov xchg add mov dec xor fild fsubrl cwtl test jp push ss push pusha lcall pop stc in adc or mov mov adc test fwait and fldt mov mov loop push add es mov sbb xor pop or sub arpl sbb or or into fnsave fcmovnbe int3 adc jo push stc loopne pop cmp xor mov add pop mov (bad) push and jne (bad) shlb sbb cli lea clc sub movsl ret add bound sar sub cmp push mov add jmp loopne push or xchg into lds jne pop push insb cmp add adc test gs shr xor loopne shlb stos enter mov dec jns dec test shl movsl pop sbb sub dec scas fldt into ss add sbb add mov loop and sbb (bad) repnz cmp sbb xlat jp rorb rcrl jnp xchg in and es cmp mov sti sbb sarb mov or mov inc add xor pop nop enter adc and call mov orb mov test cli mov mov (bad) arpl inc rcr sub sub and sub or out add cli ret dec pop mov push loope shrb sbb jno xor push and (bad) push shlb jecxz popa fdivrl mov out insb inc push in popa xor push add (bad) push adcb dec add or add rolb inc xor fadds inc arpl outsl jl and inc or sbb mov ret jbe and add jg push sti add and pusha (bad) out arpl loope jno inc movsl iret jno add sub dec xchg jecxz and in jne mov das jo sbb ljmp fwait stc xor dec ss outsl xchg js repnz in fnstenv xchg dec andl mov inc mov inc rclb rcrb dec arpl mov add jecxz xor in add mov inc subb (bad) divl (bad) dec push or or inc pop arpl jmp je loopne les or cld imul sbb adc push test add pusha mov faddp test pop outsb add (bad) clc out movsb add pop pop add rclb push adc lods pusha (bad) imul pop adcb pusha xor sbb andb mov repnz movsb pop xchg mov or or les pop fisubl popa cs add mov cmpl lods call js ds jecxz add push mov shrl add (bad) sbb mov in ror mov add pusha loopne clc sub mov add or (bad) dec jbe call idivb push and add fs movsb enter mov ret fcomps inc bound mov cld add scas add les (bad) mov pop inc adc arpl cmp dec icebp add dec xor mov mov fldt dec mov pop cmp inc test mov daa nop enter call inc in (bad) add or xchg add pop stos mov sbb fwait pop jno add (bad) out inc add push sbb loope push inc test imul lcall add fldenv in jl sbb adc pop push adc fldenv rolb dec fwait cmpsl xchg inc clc repnz faddl cld add adc or or sbbb call or lds and into jge adc aad mov stos mov popa push data16 mov mov clc mov dec or stos in add sub mov inc mull dec aad addb jp push fsub sub mov xchg pop popa push test add faddl or addb add push xchg jle adc movsl pusha mov mov orb adc mov enter and aad cmp add mov stc (bad) sbb mov les or push mov dec pop and adc or push sbb orb in jae aam pop add jg sub add xlat pop push cmc mov lods add push cmp or or add pop rcrl and add cmp mov or sbb mov xlat dec ror testl test push lcall or xor xor rorb lds xorl mov cwtl lcall and lock adc in sub cmp decl dec mov push (bad) jns call xchg js sub push (bad) sub smsw sbb aas and les pop dec mov xchg and lcall dec and lret sub adc add or mov cmp jb sbb inc adc lock prefetch mov outsl bound xor popa cmp iret or adc or mov add add mov dec add movsb adc int3 add cwtl sahf mov iret bound or mov add or xchg adc mov aam mov adc xchg xor add or pushf lahf pop imul dec add cmpsl push mov cmp sbb bound out inc stos rcrb or pop daa lds or fisubrl mov or dec push push push jle rcrl jno adc pop fisubl iret cmpsl and pop and int3 xor in ja lret decl sahf and sub into xchg insb dec out adc mov and xchg and (bad) mulb sahf mov jns dec xor add jnp cmp or push mov iret push addr16 ror inc aas test inc or jbe and punpckldq inc outsb mov sbb jg push shll out sarl rcll or movsb (bad) rcrb add xor (bad) or je jmp xor and test ds xor popa cmpsl (bad) sbb add movups cmp imul xchg inc jns rorb and ret sbb push pusha mov cwtl aas pop popa mov sbb repnz pop sbb xor mov push insl or add hlt fisubl mov and nop and add mov xor sub andb into or pop adc lahf pop xor stc int3 fsts add mov add push paddusw and mov clc dec xchg scas cmp je mov mov (bad) repnz mov mov fmul adc inc rcr rorl fs push test jns (bad) hlt xchg add call mov loop dec push xlat (bad) or mov push xor sub add inc sbb int3 xchg add scas inc aad gs in cmc ds aam popf adcb push inc lret hlt sahf or (bad) in out mov notl sub in dec stc and vaddpd pusha dec icebp in and or and arpl sarl es dec in imul push pop mov out nop sbb mov hlt lock rol and pop out (bad) dec mov sbb je js dec adc icebp pop les xchg mov add lret pop faddl (bad) icebp mov or repnz int3 dec xor dec add lea js or cmpsb daa test or fwait nop lock sbb adc jle aad cltd aam daa add lret push push sbb sub dec (bad) mov in aam int3 add or fs jg add (bad) lds fldenv push push sbb (bad) adc or mov mov push testl cmp cmp and lahf je inc cmpsb mov daa loop add mov push mov cwtl mov pop push pop pop xor call mov movsb sub ret inc add and add enter (bad) lock arpl jbe mov and aaa xchg sub xor inc jl fcomi push mov add (bad) or lock iret jmp or mov push mov dec cwtl add hlt mov cltd sbb aas pushf push insl clc fldenv xorb repnz jg pusha ret sub push or add push ss stos jle ljmp aas addr16 cmpl xor xor add ja xadd xchg gs add es andl repnz and mov shlb xchg dec add jg addr16 push jns dec lock add cmp testl push mov hlt dec cwtl cmpl pop outsl popa xor (bad) mov bound pusha mov inc int3 icebp inc add mov dec sbb popf mulb out lret icebp xor sarb rcrb lret mov xchg stc xchg jbe orb mov daa sub int3 push dec pop (bad) cmp mov in mov dec imul or shrb dec add adc ret aaa xchg dec push enter mov sub and add mov or out inc nop jl cmpsb pminsw pop sbb in cmp out (bad) enter push enter test out add cmp je lea rcrb pusha inc test unpcklps movsb rcrb and fs adc out add movsb es xchg mulb xchg ss sahf mov pushf push std cs ficompl jmp sub lock sub leave call mov addr16 pop xchg dec add mov sub mov rolb nop or jo xchg inc out and sbb lds mov pop jp add movhps sub xchg push inc lods dec xlat cmp testl enter cmp icebp pop dec and adc mov mov xchg pop inc dec mov (bad) or or or and call bound jb das mov cmp out (bad) (bad) in mov adc out pop adcb dec paddsb add cld and jl jbe out and mov sub jbe mov (bad) mov (bad) clc mov out push ret dec outsl push int int3 test lret or cwtl mov cld cld iret xchg push sub cmpsl or mov mov xor jno pop movb lret dec stc or mov incb adcl test faddl repnz jbe pusha int3 loopne add nop test adcb in dec xchg mov adc hlt mov loope push add pop daa (bad) jmp mov sub or pop sub int3 dec enter cli or out or inc movsl mov cwtl rolb addb addl mov pushf popf inc loopne inc xor sub xor mov add (bad) cmp fisttpl in aas cmp stc lods mov or fistl fstps inc xor adc int3 iret and push inc sbb cvttps2pi adc and cmp add and leave inc mov testb adc fldenv dec jl sub or ljmp pop inc aad add cmp mov addr16 cld xor jo add mov mov lcall and push mov push mov adc fistpl xor fdiv inc xchg js es sub dec daa clc add or sub inc je sbb adc xor jmp mov dec mov ljmp test test aaa (bad) stos les popf or clc jno in mov or cmpl aas popa add or sub push iret mov push add dec (bad) dec popa sub or sbb out push imul sbb bound sbb (bad) jo aam jnp push dec xor add adc (bad) call leave or fmull add xchg in or or xlat (bad) and mov fs ljmp sbb out lds lods rcl stos testb pop add xlat aam dec adc out daa insb mov inc xchg lods push ret (bad) and fcompl and mov xlat enter fmuls shlb inc fwait add add xchg dec xchg loop xchg dec push call (bad) cld or mov sbb sbb iret cwtl pop xor int cmc fldz movl test (bad) repz add mov dec push inc inc pusha mov mov xor or mov xor lods cmp int3 (bad) mov pop xchg cmp and lods and inc enter or or mov lock add cmp dec mov dec std adc inc fdivrl cmp stos inc mov mov push roll int3 jle,pn inc and rcll and cmp mov xchg cld sub push mov push adc mov scas cmp or inc daa (bad) xchg sub mov cs scas or or cwtl test (bad) and pop mov addl xor ror mov fs push adc push jne fcmovnbe lods rcl lock scas xchg orb movsl nop xor fmull mov mov mov mov add decl dec arpl dec imul xor mov fisubrl es pusha test xchg call jo rolb xor add cli xor and adc int3 add orb inc cmpsl sbb sub add into iret mov adc (bad) jg mov pop dec aam dec je out pushf jae sarl adc leave mov inc add (bad) cmc mov add faddl aam adc or lret mov fdivl aas (bad) insb sub lret int3 shl (bad) aaa pop mov or movsb jo push and inc pusha lds cmp mov je flds (bad) sti add sub dec add out hlt cmp inc je scas xchg pusha jp add jg inc mov mov fmul les ret add pop sub aad and adc add (bad) push dec loop clc dec icebp ret in mov dec adc in push pusha mov dec test xchg xchg push sub inc fcomps ret add inc adc pop sahf xlat cwtl rolb in scas incl lds add dec ret push mov xorl das inc fdivrl push add popf add ljmp es add inc cmp pusha (bad) incl dec or xor (bad) js bound push lods loopne les mov jo push cld cmc jns and (bad) or mov inc in mov cmc in dec mov mov bound sbb add iret xchg inc sub add mov add jb inc addr16 jb add loope jl fldl pop fidiv aas lret and int3 cmp add or adc ljmp pop jo push xor xchg mov dec xchg arpl add inc clc (bad) xchg adc aad cmp loop pop pop adc mov movsb mov add fcompl addr16 fdivs pop repnz add or and adc push sub and in inc dec je (bad) das ljmp and fdivs cmp fsubp dec mov aas addr16 nop inc adc je push sbb sub mov aad leave pop push in das sbb hlt mov dec jno add (bad) (bad) jecxz xor call sahf pop pop xlat sub daa (bad) push add out add jecxz cmpsb pop mov es and ret pusha shrl das imul mov int3 aas subl orb adc or rol xor (bad) mov popl inc arpl (bad) loop in pushf lahf sub xor test rclb loop lret xchg pushf fs lahf fstp sbb fadd or and mov jecxz fs cmp xchg aad add adc rol dec or bnd pusha leave adc jp call push xor popf jge xlat adc stos test insb fisubrl pop xchg data16 and daa test add test mov sbb dec (bad) mov nop sahf fwait or (bad) fistp sub sete or xchg xor mov (bad) sbb orl sbb pop popa out xorb into insl add rolb inc xchg or pop jb add and adc xor ds push inc jg iret (bad) jbe jmp add in jge inc out rol mov out jbe nop jge adc outsb pop aam add adc (bad) clc adc test mov xchg cmovbe cmpsl cmc inc in daa inc adcb add add pop push or adc or push sbb push mov pop mov jecxz cltd and and fsubs or jnp lahf cld add cs (bad) hlt addb add dec (bad) not jl push xchg daa into and mov mov cmp adc add push jp loope mov ret popa bound sbb fs sub xor ret push lds or inc mov add dec pop add out cld sbb subb sbb jp sub push add call mov rcrl pusha ret ja test test bound mov add cmc xchg in mov dec je sahf and sbb or mov push mov jae and call push sbb pusha aad faddl jl js add jg in pop andb sbb add mov dec xlat push imul and cmp add add push int and pusha add ljmp test or push lret arpl mov mov sbb testb xor arpl or (bad) adc jge cmp les shll xchg pop adc sub inc fcoms sbb loope pop pusha push ret rclb hlt fmuls jne lods fisubrl push xchg les int mov stc shlb loope xor adc scas test adc inc or mov adc xchg dec in sbb add and xchg bound or loope mov cld pop aam dec ja push inc cwtl mov mov jns and add adc lahf mov jno mov mov lock and sti jns mov popa add push jle push or mov out js add (bad) pop mov ret add stos and (bad) mov jmp adc add (bad) mov ficom and lret mov inc push jns push dec (bad) mov jo (bad) sarl lret je inc push jp cmp push or adc shrl (bad) icebp or mov add dec stos pusha rorb push das pop test mov sbb sub test mov je mov inc fistp stos shrl gs call pusha add mov test jge (bad) popf dec and shlb adc nop or dec and adc mov mov add call subb xchg movsb psrad pop ret push popa sbb and or mov jo or in lret pop mov xor mov jmp jo add or jae add aad fsubrl nop cmp add xchg add cmp test sbb mov (bad) mov bound mov or pop mov lds pop loop sub mov add mov in pusha pop cmp arpl add pop mov flds jnp fild and sbb movsb pop ret inc lods fsubl pusha es in push stos sbb inc or (bad) mov dec adc add roll jnp dec sbb or xchg loopne in push icebp nop (bad) jb (bad) sahf (bad) je mov xchg clc pop js hlt call fstpt rclb jle add into fstl pop je pop repnz jg lcall arpl iret adc pop or imul xchg jae lea insb mov cwtl lock out add adcl mov mov insl dec cltd push into push repnz xor in es xchg xchg add xor dec and andl and add in xchg add push jne stos fneni(8087 sub push mov and lea adc fdivr add fisttpl xor jno add sbb mov fsubrs mov adc push les and xchg invd push leave rcrb push sbbb js je mov loopne insb mov sti lods adcb je addl loope mov out repnz push clc xchg mov mov les push das out mov and lret ret push fistl dec adc inc push mov pusha lahf nop faddl ret mov sbb loopne and add insl in sub mov inc pop sbb les aas pop adc fmull inc or andb push xor push add and xor push out repz jne rolb fild xor push pop out add add mov shlb xor mov or ljmp in imul loop push dec xchg adc (bad) pusha push jle mov pop mov cwtl faddl jae stos outsb call dec ficompl pusha (bad) fdivp fisttpll cmp call outsl add sbb push cmp int3 sub nop sbb inc xchg push in pop cmp push (bad) test adc jbe aad dec xlat int lds jo push and cld adc adc adc (bad) lret call push add jne addl sub (bad) dec ljmp fistl mov xchg pop nop mov das idivb js sub pop mov (bad) ss stc add jle,pn aaa rclb insb lea or mov (bad) dec push sbb push int3 imul lea and mov adc adc cmp dec mov and add pop cs popa faddl lret mov loopne jge jg lcall movsb leave push mov push (bad) mov sub add ficompl cmp les aaa je addl pop add and push fcomps inc scas pop ret nop les push test mov and ret fadds ja xor push or or bound nop subb xorl fstpt sub movsl pop loopne js or and adc outsb sbb daa add ret pop and push mov and mov jp mov or and and jno jo push mov (bad) rclb adc lcall adc pop popa ret fdivr sub pop lea dec inc subb sahf add andl pop (bad) xchg adc pop pop mov test xor add adc hlt push add sbb pop xchg dec movsl cmove ja (bad) aam clc cwtl rolb in pop mov cmpl (bad) (bad) mov add and dec int3 loope mov inc or dec xchg or inc call push add sbb jle push call and cld pop out or xor or mov and call push inc sbb testb add xchg in add mov pop lret fdivrs cli call int add xchg fimull fs out inc sbbl repnz xchg or push pop mov popa sub mov daa in push pop (bad) and call mov call movsb mov leave push xchg inc xor call cld lea je or mov (bad) test (bad) lret mov sbb les in xchg and cmp (bad) popf bound mov call push and nop (bad) jo mov dec adc push jecxz dec push rolb leave dec pop cli cwtl inc push sbbb insl jge add adc push ja dec (bad) sbb out pop test jmp aam data16 push push mov call sbbl pop xchg ss sti inc or imul inc fldenv arpl dec dec lods in and cmp mov sbb movsb cmp (bad) xchg sub cld lock jmp popf ret xchg fs cmp sbb leave dec pop push sahf rorb sbb test insl add push mov iret movsb shlb ret lods int and add push push xchg (bad) cld mov or mov or cld jbe data16 int3 add pop outsb arpl fwait cmp shll shr and sti dec push lock or (bad) int3 fsubs or mov or rcrb or in stos add loope lods mov sub mov insl cmp xor sbb or fmull dec fdivrl or mov xchg pop rorl fadds js ja push sbb jns out iret faddl push cli outsb jno int and nop add dec rep add xchg inc and or dec je push movsb cmpsb loope outsb pop ficomp add push dec jp fnsave ljmp add jb in and mov jge sbb jecxz lods in sbb pusha inc les mov or (bad) mov repnz das add dec ja adc cli into add add loopne mov add or adc dec ret inc rcr loope (bad) out jo inc (bad) iret sahf add and and ljmp xor cld push push add sbb push clc nop adc sbbb loop push gs sub cmp mov pop add xchg push xor or xchg add (bad) add out ss lods pop lock pop pop into js jns adc stos inc push call into add add outsb cmpsb pop jle aam add add pop mov orb fnstsw jne pop xor mov add jo adc (bad) and leave in aaa in sub nop sbb or mov xlat add lret cmpsb enter sub lds xorb mov test rorl sahf stos mov add and mov cmpsl add enter jnp incl lds out cmp xchg dec movsl pop imul sub xor popf repnz add adc or add add int3 add loopne push mov mov push (bad) mov ss out enter or iret out sbb adcl adc daa jns push mov adc fist es add scas cmp cli xor das add js (bad) jg add (bad) outsl je mov outsb cmp insb push call dec sbb adc add pshufw fidiv mov dec je ret repz sbb xchg or mov jl add int inc sbb pop add cmp mov pop nop iret push pop sub lods or xchg push int lock ret sbb mulb mov in xorb jmp jns (bad) or popa add inc xchg mov (bad) cmp mov jne pop gs inc int or in sbb dec sahf cmp xor add push loopne pop insb push test or jnp lds js,pn out add in ja mov pop add (bad) stc dec xchg push andb xchg mov dec fwait push xor cltd dec (bad) mov out lret roll dec arpl stc ss mov repz add out cmpsl cs sub dec out adc js mov addr16 mov xlat xor cwtl mov rolb inc pop enter pusha orl add add scas mov mov pop mov jge fsubl adc pop sbb (bad) out jle or mov cmp (bad) out add repz cmp xlat cmp sbbb add and js cmp inc mov clc pop xor mov insb add sbb jmp push loopne add aad fcmovnu lret cmpl icebp pop popf pushf leave stos adc or jecxz mov ret mov add (bad) dec pusha and sub add dec rolb jno push in fwait and pop add fnstcw jg sub jo jecxz inc call dec fstl cmpb lods or xor scas jg repz subl cmovge and incl and call push scas imul push fcoms notl (bad) push addr16 roll and mov inc inc jo mov push mov mov add lods out dec add jbe in jl add lret add aas rcll mov sub or add xor adc bound xchg sub jbe add sbb push and loop pop movsb push fimul xchg pusha js add mov jnp (bad) flds add lock daa xorl pop adc pop or repz cmp cwtl or sbb add pop jb push or test lock xchg and pusha cmpsb outsb ljmp jo loope dec (bad) js mov je inc lcall (bad) mov movl les mov cmp dec fdivrl push push cmp iret mov pop (bad) sahf xchg xor lea cld fisttp mov mov imull xorl sub xor cmp or cs sbb movsl and test jns cmp push idivl jbe add pop and xor repz pop xor orb push in pusha mov cmp pop dec aad repnz in test xchg cltd bound jo call xlat and out mov lods loop repnz sbb aas jge cmp add push push std add adc xchg cmpl xor lea mov sub mov arpl cli test jae aaa pop out pop pop mov int3 jb add sbb call mov pop sahf xchg xor cmp dec or mov pop ja out adc aas orb xchg leave xor mov fiadd dec sub int add cmp fdivp movb adc ss or jae cltd xorb lret scas data16 mov jno mov mov nop add or mov xchg push jl sbb ror call divb add in push add dec out jl dec add addr16 pop push inc dec (bad) push add test call mov js stos jno add inc out dec cmpsl and addb jno or inc rcll popf ljmp lods fisttpl push iret leave add fldcw (bad) pusha (bad) stc jnp cmp sbb inc pop mov push aas mov add mov prefetch add andb and push cmp clc insb cmpsb pushf movsl outsb imul sbb cmpsl add and loopne xor xchg mov (bad) iret add inc jmp test xchg sahf push xor popa data16 push xlat js inc rclb jle dec prefetch push jns js (bad) mov cmc push enter mov add adc jecxz add (bad) out add pop fcomps js adc add ds call sbb pop sub mov loope pop popa cmp outsl repnz pop add dec add add jp fneni(8087 jo rolb jno insb (bad) jl lds add xor xor xlat in cmc pop (bad) shl (bad) jl xchg push daa push add cwtl push mov lret inc sbb stos jb cmp dec cmp push mov jle sub mov int add mov ss das add arpl inc (bad) xchg inc xlat mov mov inc cltd js add mov xor adc inc pop lea or inc cmp fisttpl test rorb or sbb pop sub jno int3 loop divb jne add sbb adc cmp in add push push imul add aad rorl mov sub adc and cmp cld popa cmp add push mov mov lahf add pop pop add mov or sbb sub mov mov pop in cmp imul cmpsb xor pop rorb push inc pop loope out push orl orl push imul lcall xor add or push jbe push leave cmp sbb push shrb jne xor dec add fisttpll insb mov test mov cwtl inc test push push or ja push or bsr sbb push cmp push mov adc ret and movsb ja inc add (bad) jno (bad) sarb int3 movb (bad) cmpsl mov mov sub stc dec and repz leave sbb cltd pop scas aam and sbb nop out mov xchg sbb push (bad) int3 test mov repnz inc sbb lea or daa add mov cmp stc pop inc add xorb mov or jne pusha cmc out xchg adc xor add add test add ret adc inc insb add jns sub stos lahf cmp cmc push add leave fstpl mov mov jl (bad) add push sbb ljmp mov add std jge lock lahf jmp add pop adc movsb mov inc or mov sub xor clc pop add jne flds test mov (bad) nop push push push popa je sbb add sub imul xchg and add xchg in (bad) js enter and push inc call add arpl imul aad jne xlat andb mov insl add xchg les mov test sub ret mov into int3 pop int3 pop sti aas shld int inc add jge fnstsw add inc bnd jne add dec or mov in mov mov test add cmp add jle in and add jle mov leave adc mov vmread xchg mov fcoml mov xchg inc loop add das or and js jnp add sub adc loope lcall push jl add jo nop pop negl dec mov (bad) push push pop jo xchg or (bad) mov cs inc fwait sbb xchg outsl scas ja aaa cltd les rclb xlat lock pop xlat sub test pop loope or mov cmp sub clc cmpsb fs dec jmp pop mov push out push xor out inc xor data16 add push jle jmp jb add xor lea cli add addr16 cmpsl or pop rorl lret adc jbe jb (bad) fadds (bad) and rcll sub mov inc leave mov dec pop incl sahf insl ljmp int3 aaa push imul cwtl xchg or addl sti pop insl div jmp pusha lea xchg add test popf test lahf mov daa pushw pop int inc (bad) xlat and adc out test jmp clc sbb add sub mov sarb sbb mov jno xchg aas cli nop dec fildll fisubrl ret dec jbe xchg out or add int3 mov lods add aam (bad) pop sbb mov and test adcb dec daa sub aas imull xchg sbb fcoml adc das pop jmp int3 sbb push out std aad inc and pop add cli mov dec imul in add fmul pop xchg out mov pop pop push and fwait orb xor out incb add pop test out sbb sbb adc (bad) mov mov out in jae dec insl sub mov and add ss inc (bad) fcmovb push pop nop xchg (bad) popa pop movsb sarb jne add sbb add inc mov cltd (bad) dec lock mov or adc (bad) xor mov xor out test dec inc add js cli lea out jnp jl loop lret outsl add xor fist cwtl scas mov xor pop mov sbb pop imul ret lahf inc add or rorl sbb cmp (bad) loop mov mov sahf cmpb xchg adc (bad) adc fiadd out cmp pop add rcrb jb add (bad) lret cmpl dec dec add xor push mov inc xchg arpl xchg sub ljmp jle add inc lods cld add sub jno add stc scas mov pop cmpsb cmp fs inc mov mov aaa mov add mov out add add mov aas loop andb push xor pop mov lret hlt add movsl xchg jmp sbb pop fldenv std gs add add movsl test add jo addr16 push mov cmp icebp out stos dec add cmp mov add pop inc lds shll rorb push add out mov (bad) pop aad sub lock dec clc (bad) in in add rol rolb mov sub or jg negl cltd or es insl cwtl cli lds aaa xor popa popf pusha dec fadds jb movsb cs call fsubrl movsl add aam sbb add cmp sub movsb orl out mov cmp inc mov add pop xor shrl mov add push jle arpl add sbb fwait add iret inc add incb fsubs repz enter pop sahf add movsl dec (bad) push xor add icebp stos or int data16 jns insb ds int3 mov dec mov add ja jmp outsb add test (bad) rcrb in jb pop imull mov (bad) xchg add mov pop pop pushf push pop add pop pop or rclb mov jno sub lock in rolb btsl data16 mov jp xorl dec inc shl sbb (bad) outsl jle mov mov arpl xchg in push call pusha add dec es jae in cwtl mov jmp dec mov dec dec in cmpl lock sahf add cmpsl and sub lock enter jo mov cmp add lock push cmc inc test sub adcb sub pop ret mov out mov xor sbb mov mov fist ljmp rcrl add inc andb dec adc adc loopne cs stos mov aas fdivs add gs lea xchg arpl (bad) leave idivb bswap je (bad) rcrb movsl mov jbe ret add add mov add xor repz gs cmp cmp mov cltd inc jle adc fs mov (bad) xor add mov mov jecxz mov jl lods sbbb subl cld add inc pop push add je data16 inc lock ss jno sti xchg jp xchg push lds xchg cmpsl add pop lock lods (bad) ja or mov mov rolb lock movsb dec sbb or out add cld mov mov or test jge add loope test sbb mov cld lea add or pop (bad) jecxz push loopne je add es fstpt inc cmp push pop pop jmp add fisubr push rol jecxz fnstsw or xchg xchg sbb fsubrp add pusha (bad) cmpsb mov add mov add adc and cltd cmp add lret test andnps xlat gs or mov pop xor add xor xlat sub out jns (bad) xchg mov xchg sub cwtl cmp ss (bad) test xchg push xchg xlat mov (bad) inc cmp cmp adc (bad) out add lcall mov in pop lret add mov inc jg mov push push das roll inc fld nop mov jmp bound mov add into cmp mov adc add mov mov dec mov jno pop sar add (bad) jne cwtl mov fisttpll push sbb dec inc xchg bound add jle sbb dec scas out adc aaa dec xchg test mov mov icebp add sub jo cmp aas mov or std cs notb fdivp cli mov and jge inc mov xor int3 into les aam (bad) jl dec sbb daa mov adc imul lret cmove inc jge dec xchg xor jecxz imul aam fwait js add push add jecxz jae xlat bound pop scas or pop pop add mov fmulp jns stc popf add inc lret mov jb subl repz into (bad) jnp xchg sbb ljmp out push sbb xchg lds xchg add jle xchg or sbb jle imul pop jns mov (bad) sub leave jp xor jecxz sbb add je cmp cmp add mov pop jno leave pop les stc stos add push mov roll inc adc sar jo pusha lret fnop icebp add jbe psubsw mov inc outsl (bad) cmp or jbe inc sub lds sbb repnz minps cmp inc cmpsb jl sub push cwtl mov fwait jge stos xchg divl test repnz (bad) xorl sar add scas mov add iret inc jge cmpsb push nop vcvtps2ph jb dec jnp cmp nop pop add inc or mov inc or mov repz jns xchg dec inc les int (bad) ret push into outsl data16 out inc (bad) mov leave pop fst je addl in xchg push push (bad) pop pusha dec jb in in push pop sub add insb pop stc xchg lods iret add loope xchg sahf lea mov scas repnz pop out push add xor fldl into bound clc ja stos fistpl jne popa insl inc lret pop cmp push or pop dec lahf jl add jae aad xor aas int push push in shrb arpl mov dec popf add inc pushf push jb je adc xchg out test lret dec fwait add push and fistpll sub cmp pop lock mov add sub movsl fs add add push fsubl pop add mov sbb xchg fist mov add mov (bad) xor add cmp mov add sbb xchg push add mov cmp add add add shlb sub movl popf mov ljmp and and test sub in sub and xor (bad) les push aad cmc push cwtl in adc cmp cmpl dec gs jmp add shll lock enter in inc shll pop cmc add cmpxchg in pop (bad) push inc add lods xchg mov insb cld aaa cmc pop cs cli and or ret nop mov add fstps pusha in inc add outsl mov add adc cmp push dec test xor jno and pop adc mov pop xchg jg xor imul xchg add pop lcall xlat sbb mov movsb (bad) xchg loopne add scas lock lret or dec pop test je jle stos (bad) mov pop add xor frstor mov lcall fs add cltd out andb scas dec add lea jo xchg push mov hlt and or push mov add pop pop add mov inc inc dec sbb mov scas lret dec jmp mov (bad) (bad) and (bad) ja test ret shlb inc add insl leave sub adc cltd arpl add cli jb add mov cmp js clc fadds push test decl test scas pop add int bound in add dec jno out mov dec in lret lods daa fimul lock mov nop add push jnp inc lods movl pop popl add out inc out ret hlt dec bound das daa pop jp outsb mov add cmpsl mov push in push add jne ljmp cli ret add adc jns aad push dec inc dec repz js add incb add xor (bad) push jge jns add rorb fsubrs adc mov movsl fsts add jle mov cmpsb jecxz dec fldl imul pushf cmp shrl std jp dec adc adc sahf out pop icebp mov xor adc mov out add iret push xchg popf addl add je inc (bad) sar stos inc jge js sub add and xchg cmp mov cwtl aaa push sbb das insb cmpl rolb out or pop je jge cltd fs adc out inc add and sbb loop xchg sbb sub xor lret cmp cmp mov fisub loope popf xchg roll dec rolb xchg aas inc (bad) stc lock xchg arpl xor add fsubrl out adc ret cmp fnstcw roll pop and stc ds out mov adc subl push inc sbb scas jae and sbb addl sub push pop out stos sbb fs pop and mov jge adc fcmovnu (bad) in cmp jo inc ds jb jno mov xchg cmp orl push push (bad) decb add sbb cmp jle arpl dec std dec test add inc add rcll sldt inc cwtl and add int3 adc xchg pop pop test push shrb cmc sbb ljmp mov (bad) out inc pushf test out fnsave add mov (bad) mov push mov cmp adcw jae add packsswb add sub sti inc (bad) or popf stc rcll popa jecxz mov sub mov movsb bound jge add stc mov dec lds inc or add adc inc pop cmpsl and js cmp (bad) fldcw je mov dec in xchg add int jp shll or add test mov iret cmpsl add inc jecxz rorl or (bad) cli and out pushl add adc pusha mov jo leave pop mov lock test cs addr16 subb mov dec mov jecxz dec loopne lods cmp add mov es add xor sub pop jmp sahf scas jno (bad) aam add das push decl pusha (bad) jo mov mov add sarb lahf and leave loop mov imulb xor (bad) sub movsb fisub mov mov fwait xchg add fistpll fs icebp pop xor push mov fstpl add add popl xchg push mov add xor cli sbb pop and (bad) int3 clc lcall mov mov add in inc adc gs popa or inc lret subb in sbb fiadd pop (bad) test pop test inc std cmpsb (bad) testb mov sub (bad) mov adc and (bad) xor mov mov rolb pop (bad) jo lock icebp jge adc js arpl adc pop sub scas fiaddl add mov ja add jae mov aaa xor mov shufps fpatan popa addb test mov movsb ss push adc jnp mov jne inc cmp inc pop cmp mov pop xor add xor sti dec mov add jl cmpb mov (bad) and in sbb jmp inc or mov scas call cmp add add adc xchg mov test aam pop add aas pop or push insl iret (bad) shlb mov push les pushf pop outsl ficom fnop xor addr16 add push insl fmuls sbb lods mov jns and ss xchg enter lcall roll xchg bound test imul loopne,pn adc loop in push adc (bad) and mov add xchg sub xchg outsl add sbb add fisub push mov cmp adc sti jmp popf ror jmp and jns pushl out lock push fprem cmp add jg insb jge sbb pusha pop sbb loope mov imul add or jg add and xchg add scas popf jle out cmp orb or aad cmc bound ja loopne add pcmpgtw xchg sub add mov xchg push add pop sub call xchg adc inc daa arpl sub out adc int or mov xchg (bad) pop js roll pop adc iret push ja daa or sub add loop repz test mov jmp imul stos jg cmovle xchg cwtl test cwtl rcr xchg fiaddl daa mov (bad) xor push fistl lds lcall mov lds xchg or pop lods hlt out mov les adc cmp cmp dec pop (bad) repnz xchg (bad) loope sub push test mov cmp cmp dec push cmc cwtl mov repnz dec les out addr16 loopne movsl cmpsl (bad) xor mov popa xchg sub icebp movl pop cmc cmp jmp cmp add cmp rcr cmpsb add pop mov repz push arpl sub mov mov fnstsw sbb add add adc in dec pop push ret pop dec clc mov mov dec add add pop pop insb mov test hlt push adc mov subb scas insl xor lea xchg inc dec pop in stos aaa mov (bad) mov test add daa adc add aas pop jmp jge add (bad) in cmpsl jno (bad) in inc mov (bad) push mov add xlat fildll xchg aas (bad) jns mov mov ljmp xor mov test call ds add mov jae or pop jge in sbb xor nop mov in unpcklps mov in pop push dec mov dec sub mov enter (bad) mov movsl add out xor dec add (bad) mov jg jmp push cltd mov test dec gs cmp xchg fmuls push xchg popa out movsb lds xor pusha dec inc loop inc pop pushf enter (bad) (bad) outsb lahf roll xor test (bad) jo mov mov jbe and loopne imul dec add pop lahf push mov jp movntps flds cmp sbb mov add lret inc cmpsb lods arpl (bad) nop inc test (bad) cltd add pop hlt mov aad add xor lods movsb push stos cmp jge sti test clc push pop cmp clc push pop (bad) sub adc add popf add pop popa inc adc push adc shlb add jmp cmc inc lods mov xchg fnsave mov jo and enter pop (bad) xchg push mov mov xor cmp orl bound (bad) adc shl in pop leave scas inc inc inc add push inc inc ret test fsubrs popf bswap clc icebp fs adc cmpb pop pushf aam xchg clc push out enter bnd dec into sub cwtl push add and jae add pop mov xor add push or test aas mov das add sub add rcll cmp mov ds enter pop xor icebp inc test cmpsl and insb jno enter sub addr16 cli push daa out or push push outsl push sbb sbb adc out ds addl rolb xor sbb testb or stos mov and sti dec popa fstpl push fwait loopne mov and pop nop lock jne dec flds stos push pop xchg insb test repnz lock jne imul jge (bad) notb sub add mov xchg mov xlat sbb mov add pop push shlb insl add jo jne dec sub jmp inc in jmp add jnp push cmp rcl (bad) cmpsl push xchg xor sbb rcr je mov jg add or dec mov mov loop mov rolb lock push mov stc mov mov jecxz add and imul clc push xchg loope loopne enter add test repz sub dec mov arpl inc cmpsl lcall and or or pop bound cmp push movsb (bad) mov imul rol sub push fldenv mov push mul movb and hlt push mov arpl enter xchg xchg stos stc add repz sub daa sti aaa xchg xor in add stos (bad) pusha (bad) or xchg fist dec add inc push negb mov insb inc pop sbb into out movsl mov add inc gs add inc imul jb push adc sub xlat mull clc cmp sbb outsl das fstl add loopne add sub jmp add cwtl arpl pop dec xor (bad) cmpw (bad) packuswb mov ja add cmp (bad) xchg xchg xor (bad) test ja,pn mov lahf pop pop mov mov and dec mov pop mov test sbb sub fadds icebp je mov adc test or or sub inc sbb sub sar jp cli scas add lock popf pop mov or nop mov stos lds push sub push sarl fsubrs cmp cmc subb push add lods ret cmp (bad) rolb iret imul shlb jo cltd mov jo push add int pop add dec or mov push fsubr cltd push push sbb xchg sub sub add dec call sbb mov lds push xchg lods insl add lcall xor sbb jmp (bad) push add add imul lods and das and or inc nop mov bound xor sub inc fwait (bad) pop pop push roll push out inc jns and pop lods shll xchg lret iret hlt adc (bad) mov lds repz dec xchg subb dec (bad) mov popf push aaa sbb sbb xchg bound sbb xchg pop lcall cmp xor (bad) out pop add and sbb mov (bad) imul call stc dec adc int3 sarl or addr16 or add and add insl ljmp mov add mov call pop push loopne push sub mov mov and roll addl fadds sub ret outsl cmp int3 ljmp xor (bad) jae lcall inc inc cmp mov jl (bad) js cmp add imul pop xchg dec cmp add mov (bad) das and je inc jle sbb out outsl sub imul enter out loopne or loop xlat sbb outsl pop pop xor inc lret pop xchg rcl (bad) sbb adc mov xchg bound jg jecxz add lock mov test push insb or pop stos inc add jl cmpsl mov lret sub cli sub sub add xchg dec test pushf rclb add add mov ret jae mov pusha mov lock add mov inc xchg jmp cmp dec das mov je pop and test fcmovnb out bound lahf add dec sub frstor pop add loopne out add call jl jp jb sub addl div test cli imul sub aam dec or pop ss adc lods xchg add outsb xchg add xchg in push aas stos pop sub pop int3 inc push push outsl mov adc cmp dec out dec pop xor lcall dec mov sarl out dec aaa pop pop fwait je xchg mov iret shlb jne ret add push adc dec je call (bad) mov notl adcb pop (bad) lret add mov sub mov das mov sbb pop jl es jge add lret bound or push inc mov roll leave jb rorb repz mov mov aad popf lret add xor roll sti lcall (bad) mov loop sbbl imul jmp cmp unpckhps repnz nop popa cmc or sbb mov fwait out loopne xchg addb mov (bad) stc add insl add mov and ret repz xchg clc mov lock stos out aam dec pushf aaa xor cmp cld jl or cltd rorb rolb and (bad) dec add leave adc sbb xor jmp mov or mov test add cwtl add sub dec add arpl pop fcoml xchg inc ret pop gs aaa push jo sub nop mov mov dec add mov push add sbb xchg mov pop inc (bad) sub lea or add movsb dec aad enter imul fs cli sti lods push idiv add mov pop jb repz push js and add orl push cs pop jae es jmp insb push bound repz jp adc sbb movsl jmp pop orb subl mov aas cmp adc add mov add dec (bad) mov add add sahf int3 faddl rcrb loope icebp sub mov pop push jecxz jns negb cmp in lock add xchg sub cmp loope add out pusha mov mov jae add rcl std xchg add lods gs and shll sub add outsl xchg add pop xchg add add and sub inc push jno loop pusha addl divb loopne add mov mov repz test add mov xchg push mov sbb dec sbb repz xchg (bad) add icebp scas subb (bad) lock sub sub stos mov add lret dec fild fstps lret fnop xchg mov in fdivl add push pop add inc push cmc dec dec xor rcr test xchg (bad) mov adc icebp pop jle add scas adc fdivrl je popa xchg aam adcb rorb shrl nop add ds cmp xchg repnz fildl stc int mov test stos xor add mov cmp cli pop ret mov add pop sbb jb jnp pop jp jne loop lret add roll jae or cld lcall lods fcoms jmp (bad) sbb jle mov sahf add xchg lahf xor pop cmp xor andb inc pop sub dec je (bad) lock test sub popa mov xor ret clc xchg mov outsb xchg pop fcompl push cmpsl lods leave cmp pop mov popf in in movsb add cmp dec or imul (bad) pop lock and inc xchg pop rolb loopne mov clc mov mov fldenv call fiaddl clc int3 adc xchg or lahf add addr16 xor cli adc outsb in jnp pop push (bad) lcallw test (bad) loopne mov imul xor or cltd lds xchg scas add sahf sub ror (bad) sbb call leave lfs (bad) mov xchg loopne mov sub andl rorb xor cmp dec dec (bad) mov dec shrb add pop ds add ret cmp (bad) or cmpsb mov add lods xor popa adc mov xlat sbbb es mov adc mov xchg leave mov leave and push outsl add dec sbb adc mov enter or mov push jp lds ss pop (bad) in add stc jno das sub push sbb cli mov add imul in or cli testl push sub sbb in pushf (bad) out iret cmp in dec sbb scas push add add in or repz daa shrl mov or sub pop int3 pop insl data16 add cld in add (bad) mov jp mov or mov addl movsb ficomp push add mov rep stc mov and cmpb sub jns mov aaa add adc xchg or or (bad) jmp adc lret dec lret dec cmpsl roll std cs les enter pop adc mov mov add jae jge sahf cli push add or mov pop add and ret (bad) cmp dec xor sbb or loop sahf pop andb testl sub adc sbb fimull daa xorl cmpb inc pop leave mov es das (bad) ret or lret xor incl xchg xor aaa xorl ljmp lock pop int3 pop xor ss sbb clc fstp mov out xchg es sub mov lcall push stc add adc cmpsl rcrb popf lds xor loope mov add inc cli in pop add in test inc inc mov adcb out out cmp add xchg xor xchg in jge or adc and push adc cli sub (bad) mov fiaddl test test push or mov push rorb es bound push pop (bad) mov inc iret cmp adc mov mov stos mov or dec jns mulb sahf out adc pop aam xchg adc mov mov repnz stos test add and cld add mov mov lds dec ds sub mov fs pop pop sub add sbb ds ljmp icebp fnstcw add add jns mov int3 add (bad) mov ret push sub push mov and cmp les add sbb sub xchg jb sahf cmpsb xorl test jge cmp sub xchg je pop xchg stos (bad) mov out add mov dec outsb dec add mov dec imul mov and mov cmp mov push xchg mov lds jae das sub pop dec out add repz stc dec add add cwtl add pop cmp fldt nop adc popf add fcomip pop add (bad) js add sbb call sub cltd pop jl push mov xor clc adc dec stc add sub into nop js test jnp outsb xchg mov (bad) fucomi cmp push rorl call mov mulb jae in add lods xchg xor int scas (bad) xor dec lret subl push jl mov jg mov in xor sub shll rorb ret repz push clc out xchg les sbb add xchg ljmp mov jns sub jl add adcb incl sbbl pop loope or inc jge jnp push add dec sbb aad cwtl addl mov (bad) sbb inc mov (bad) popa push cmp scas add and cwtl add cmp xor jnp mov pop nop adc push insl cwtl stos add mov shl mov fsubrp adc add and adcb outsb ficom insl rorb add leave lret popa or or add cmc and add leave loope int3 add mov jmp jb add cld aaa leave push xchg push and add pop mov add cmc inc or mov call into loope testl sbb outsb xor push in pushf dec push in push cwtl clc les call pushl cmpl mov or add mov test push hlt cmp add mov aad and push push data16 dec fsubl cs pushl mov xor push push lods add jbe mov cmpsl jno test fadds sub inc push and pop in outsb scas movsb pop test mov xor mov push and roll int and adc push mov in clc ret cmp test mov ljmp cmc pusha inc cmp jg mov push sub in jp,pn pop adc mov pop shr jge jno xchg and sbb add sub jmp js mov sbb jg insl xor ret dec sbb xor orl sub js mov (bad) cmpb mov xchg add sbb repnz or add dec shrb jns adc pop in aad add mov xchg (bad) lret and and adc pop push inc hlt fwait push jg (bad) add jecxz sub cwtl daa pop dec loopne in lock push xor mov mov push cmp mov andb clc add inc inc mov xchg cmp je cmpsb add dec test mov outsl add xchg pop or cmpsl push enter jecxz rcl loope (bad) loopne fisttpl inc idivb add fdivl dec jl push outsb test dec add add pusha push testb and sbb shlb add cmp sbb hlt ja add sub cmp (bad) jge add jbe mov rclb mov jne fsts and add inc inc test or add lcall add repz std mov add jnp jmp cmpsb popa inc adc imul sbb jno xchg sti inc mov aam push shll pop ds js incb jbe cmpsl xchg pop test inc sub out movsb pop add jo xchg jecxz and pop pop jg fildll add dec arpl addl fistpl icebp loop adc ljmp js xchg adcb fistp aas addl scas addr16 ljmp push inc mov mov hlt xchg stos out (bad) jl pop testl sbb cmovns js pop sti lods popa enter sahf test mov add rcrb xlat add (bad) ficom adc mov nop stos push adc add pop loop mov pop je das xor pusha xor clc add or incl pop hlt add repnz adc loopne push clc add add jns pop jno dec xorb ds nop push xchg mov ret insb imul pop sbb xchg jo test and dec or int3 or jo (bad) rclb mov add adc nop mov and out inc pop scas add jle (bad) ds add mov mov jbe fnstcw rcr shrb cwtl roll subb movsb push loop icebp cmp jbe xor nop pop sub xchg or inc push (bad) hlt hlt add bound jle,pt add (bad) push push (bad) jno das (bad) fwait mov jb sub loopne push mov dec pop add outsb sarb mov imul scas into adc in and add cmpsl push (bad) dec and dec jmp int3 jg cmp mov aaa cmp add sti std xorb (bad) or cmpsl add scas xchg loope or pop mov cs xchg pop fsubr sbb bound pop xor xlat add mov cwtl movsb mov mov mov sbb cmp (bad) adc iret jae shl mov inc insb cmp cmpsl enter adc mov adc mov add mov stos jo adc stos loop mov ret dec mov notb rclb out in hlt lock mov inc sub aam popf xchg js stos cwtl lahf add scas mov pop (bad) sub or stos loopne stos ret push add les fdivp mov jne fistl push ljmp mov out add aad push hlt fadds imul pop data16 push add (bad) push xor inc aaa les pop loopne inc xchg in push fimull das push repz sahf add (bad) idiv (bad) inc mov xor in jl jno mov cmp les inc add or dec roll mov xchg sbb cwtl xor jae arpl jbe add test nop add lods cmp lret shl out loopne outsl cli sahf inc add in or sbb xor and call shlb out push and add mov insb sti add cmp mov pop adc adc loop jge call inc stos inc (bad) or jp insl cmp or mov mov subb dec pop add sarl jg cli (bad) dec das dec (bad) cmp add insb (bad) lret jnp add in push (bad) pop test les inc xchg fidivrl lods mov mov add sbb pop std xchg dec mov cmp cmp sbb cmpsl adc outsl and add ret movsb jl pop push push fsubrs jecxz pop add dec xor sbb aam add push xor dec push shrl mov mov das and lcall (bad) push push push mov (bad) mov xor lcall pop xchg add (bad) and fs out inc ret mov add mov fcmovbe xchg std mov pop cmc bound into aaa lcall jb pop iret xchg (bad) push mov sub jp jae inc pop add inc out in lock test add xor test rclb sub jnp lods xchg iret sar push add cmpsl popf (bad) jecxz les inc cmp bsf inc cmpsl loopne jne sarb mov mov je add sahf inc cmp pushf pop dec xorb push insl push pusha stos mov fildl loope mov sbbl and sub mov add mov xor xchg add (bad) pop outsl add mov mov push add adc (bad) ror subb popf out adc pop shlb loope add sub mov dec mov add in (bad) iret pop sbb or and imul lret test jle fimull lds das mov inc cmp (bad) add (bad) add cwtl out and push les aad cmp (bad) add insl lods fcmove push xchg push or add arpl addr16 sbb cltd lods add test jmp cld inc loopne or cltd pusha pop (bad) lcall cmp orl or dec add gs jnp dec add into lea add push ror shl pop cmp xor mov daa inc adc ret mov xor sub cmp popf xor fmull add mov pop insb inc roll mov xor mov pop mov fisub inc push adc add jge cmp add add sarl dec es sbb dec cmp add jp add and push inc dec pop add inc pop push insl push mov sub aam xchg sbb int3 cli outsl add adc sub cmc mov sti mov in add pop into ret jle sbb cmpsb add push mov and lcall je (bad) adc fdivs push (bad) sti loop push mov (bad) cmp xchg inc lods add dec add cmp enter arpl inc sbb pusha sbb dec out and incb lods movsb sub pop pop aas add fisubr add mov lock imul imulb ljmp push cmpsb mov dec iret mov adc sub cs sbb imul in stc pop fwait lahf sub das dec fldcw add mov inc add int dec jbe daa add dec cmp loopne je mov mov out ja xchg repz cmp lret xchg cwtl inc cltd sbb jmp sbb movsl pushf mov scas jle dec xlat imul arpl out add test lahf and fadds push push add push std repz or add popf pop ja call fldt mov mov out adc mov ja cmp fwait adc mov and and pop sysret and mov rcr push add fbld pop sbb nop nop call (bad) xchg sub sbb pop mov rolb dec add sbb push out mov jle lock test sbb add outsl add jmp test clc sub and andl pop push in popf cmp sub cld aaa mov push adc add and stos fcmovne mov nop movsb add mov jae stos mov add mov nop sbb js fstps pop adc inc (bad) (bad) loope cli fiadd ljmp push adc imul jmp lahf outsb add add or add mov add and xor xchg adc jae outsl push pop adc xchg mov int3 adc add sbb xor leave add imul stos stc fnop adc mov sub icebp mov sbb pop flds sbb add daa icebp or mov dec push fwait (bad) negl add test mov cmp jbe xchg jo pop sub aas add inc pop jne loopne pavgw ljmp pop scas outsb in stos add sarb xor mov push pop movsl sub mov jo imul fcomi jns xlat icebp add mov jp out push out jns mov cwtl pop pop jecxz rcll addr16 or frstor ja js mov jmp xlat das sbb push and js les or add lahf cmp pop adc lds cwtl push pop adc add imul xchg xor inc cmovns xchg jno and add leave call add dec or jp out ret push enter cmp les (bad) mov push js pop and in pusha ret dec add mov pop gs ljmp inc lahf icebp lods fldl jle push mov (bad) nop test insb call lock add mov xor add and shll pop cmp or jmp mov call lods and pushf scas lahf jns test sarl fcompl xchg inc iret cmp push sub sti xchg add out xor aaa jae arpl outsb add add add mov dec movsb add sti addr16 std xor cmp cwtl push orl gs sbb ljmp mov and fisubrl cmpsb lcall leave loopne clc xlat add add jl sub mov lahf mov int enter xlat sarb push add adc sti clc dec add cmpsb push dec lahf (bad) hlt je sbb cmp lods dec mov mov sbb sub in mov outsl rolb in lahf inc adc xor mov cmp lret es call add rcrb push movsb adc sub incl xchg add aad xor idivl add add pop outsb inc add pushf (bad) divl xlat imul clc hlt loopne nop add pop in mov adc movsb adc dec pop lea inc fs or adc test inc mov or (bad) dec add lock sbb test xor out pop mov bound (bad) inc add cmpsl push xchg mov (bad) mov es out pusha aam roll rorl out aas push lock pusha das fistp shl jae,pn add jae lods push mov inc in lcall cwtl jmp ja aad push scas fbstp add inc movl pusha loopne cwtl (bad) js dec add jno pop shrl mov jg sub add imul pop sarb jg and push lods or adc xor ss ljmp cld jmp fucomip sbb xor test mov popf iret int add ljmp ja add sub int3 test test mov nop inc add arpl pop out fisubl stos repnz int cltd add push or clc leave test rorb pop imul jnp loopne stos adcl (bad) pushf icebp daa inc or or andb test pop loop add nop and add dec jns cs xor adc jno add jecxz add push add sbb push outsb loopne push call cmp aam or add enter mov cmp push lds pop mov cltd rorb pop sub mov inc sub push lds mov (bad) pminub test cmpsl jo,pn js mov icebp mov mov mov lock jg cmp repnz hlt sti int3 add ror je add inc ret push pop push mov mov mov sub sbb (bad) cmp cmp xchg (bad) or loop out inc sbb fbstp pop rorb jns add test cmpxchg push mov rcrl (bad) fisttp sbb jne push ds outsb pop cmpb test loopne ljmp test popf mov inc jnp push pop and add add push and xchg add inc push sahf xchg nop sub repnz dec test aam es ret sub mov mov inc inc fstps push inc add (bad) (bad) enter loopne insb cmpxchg stos add pop ret jg into xchg push sbb xchg js add sbbl add sub in dec mov push lds add data16 gs jg sbb in xor add out iret aaa mov cmp jp int sub cmc add inc mov test sub cmp sti in xor add (bad) sbb push sub ficompl sar (bad) stc add pop or lret pop mov or inc sti adc rcrb dec addl inc xchg xor mov inc inc repnz cmp push int3 jb mov jo loop add testb xchg unpcklps dec rol popf sbb push sub test fisttp or lea xchg mov and js jno add push jl clc pusha adc cs inc dec stos cmp sub insl scas push cwtl in xor ficompl lods outsl orb rep jbe push jne (bad) in jb pushf enter js aas inc pop jb add jl in das popf (bad) add fucom insl rorl in sub add jbe and mov shll repz into add ja loop cmp mov add movsl fdivl or bound gs and jb add (bad) call (bad) cmp mov int cmp adc add add ja add push add cmp push dec sbb je fsubs in jns add sub jb or pop dec sub jecxz push add mov pop popf pop (bad) out add jb and ds mov jmp pop pop jo jb add add mov lock add adc pop cmc rolb sub mov stos mov mov add pop xor lea add movsl out repnz pop xchg scas xchg inc shll pop jp clc push or in scas dec jecxz jge xchg adc enter pop cmp add or (bad) aaa cmp loope ficoml and into jb add pop jle add mov xchg dec movsl cmpsb movsb add and pop out mov add pushf cmc mov icebp lock add jns inc mov mov pop ss adc add in and testb test adc add lock xlat add sub mov add and test add jb add leave inc (bad) mov xchg sbb pop cltd insl add pop push add push cltd mov sub pcmpgtb in fmul add dec icebp aam pop pop lret add or roll jle push dec push xor outsl xchg stos inc ja dec clc add mov out or add mov xlat enter push pop std xchg out (bad) fld je testb pop ficoml and jo add cmpsl cmp ljmp inc (bad) aas loop xlat fstp xorb (bad) cmp dec pop test lock std or int3 xor test xchg fadds sub repz push sbb push cs dec and mov add push arpl pusha and addl mov out pop sub or push jae (bad) incl mov mov sub nop lds ret pop push movsl add xor add iret adc testl mov push or fist add ficomp (bad) stc test xchg icebp sub lds scas cmp lds outsl mov add sub rcrb out test inc and jo xor (bad) je and sub mov add jne cmp ja call mov push test sti int stos inc shlb mov mov pusha pushf push sub pop stc (bad) xor jge sub add jp sub or push mov pop xchg push xchg pop lcall dec (bad) cmc add jnp inc repz dec jg pop add les jle jmp add pop lret add scas lods (bad) addl jae (bad) mov ja add sub mov mov rolb lock data16 testb xchg mov ret addb push xor in or lds test adc pop sub mov mov ret or sub daa rcrl sbb inc sbb cmp add cmp out outsb push lock loopne rolb ja push mov inc cmpsl adc sub add mov test add push int add pmulhuw xchg add xchg out sbb xor rorb sbb add xchg test call jo pop shl lret movsl call xchg rol mov add pusha cmp mov cmp (bad) cs mov or insl inc cwtl add addl or into add das jne ret mov add fidiv adc sar xchg ds daa jg add shrl pop sbb int test pop mov and xor dec jo push and dec jge je add jnp inc add aaa push adc mov dec add jge mov lods and mov or cmpsb aad add dec add insb into je add dec mov mov mov cmp mov xchg mov add aaa cmpsl cmc ds lea sub push jo test adc lret add aas inc out test pop add adc dec adc pop push sub xchg sbb xorb test adc into add mov fist mov xor add xlat lods add ss sbb notl xor aad xchg mov and add cli push out mov dec hlt add test lcall or lods add iret sbb xor xchg pop adc test add sbb sub add pop adc int3 jle in sbb dec adc fwait nop cs ficomp xor mov (bad) jb (bad) xor mov and in stos mov jge push jbe mov pop gs add addr16 mov jge rcrb seta xchg add outsl repz add test cmp ja push cmp add or imul cmp divb mov sbb push add nop call scas loopne inc add rcll jle mov add lret out enter adc out adc pop rolb push jae add adc loopne icebp mov sbb (bad) dec pop fst sbb out jo cli adc test sbb arpl mov add imull push lahf lea in push xor stos sbb add (bad) xor and dec (bad) call fmull add insl out adc xlat add jns lods cmp icebp cwtl cmpsl iret sarb add (bad) je js cmp aas push das mov xchg mov cmpsb push adc iret addl addr16 popa mov sbb add add xchg jne cs mov ret stos push scas (bad) mov xlat jmp add mov or mov into and sub lahf adc addr16 mov push mov add fcomps or sbbl cmp jno fidivrl pusha sti inc in mov cmp jmp std addb sub cmpsb jnp dec (bad) stos mov pop iret and stos dec add jge dec lcall and popf add je inc in push ret mov inc xchg adc jnp xor mov jecxz mov xor cld xchg ss (bad) rorb in dec mov mov add cs mov mov rcll int3 les pop test bnd dec cmpb out in shr movsb mov mov sbb repnz js cwtl dec jo xchg sti aas xchg jno inc movb jns (bad) add mov xor jle mov and and repnz push cmp and das mov push add adc or fadds add xor int fwait cmpsl xor sbb cltd aad jge mov lock pop add in popf dec ds ret es push add jmp cmp in push add push and jbe jb or mov sub adc loope xchg outsl and jo fistp loop pop add sub loopne ja xor shrb xchg cmpsb xorl mov sub jg or add and or add push mov mov (bad) add xor mov std inc jp sarl and xlat push mov outsl inc iret xor inc add mov mov stos aam je push rcrb jo add fldt lock cld push test ja push in fidiv add add xchg lea mov sub loop leave in mov cmp mov fsubs lods rorl cltd and cmpsl ret out fst push or and mov pop or ret inc std orb inc jl push xchg push aad popf rol push xchg adc nop or repz aad scas jp std into pop add or xchg add imul dec mov inc push mov inc and add in sub clc out add out mov faddl xor dec mov cmp mov push ja call idiv mov pop stc add call dec loope sub mov push push stos aaa push test addr16 (bad) clc imul and loop sbb int mov inc add out mov (bad) lock sub lcall add sahf xor xchg mov lea sarb add push rcrb dec xchg mov mov test fsubl jl (bad) xor bound add adc leave push xchg cmp inc dec movsl shll in xor push aaa stc jo pop pusha add loopne mov bound jg into add push sbb cld and add dec aas arpl fsubs push lret xorb xchg js cwtl aam cmp push add sahf fnstenv data16 aas or pop nop (bad) jno add xor push push js ljmp xchg adcb in add aad popf cs addr16 lods add shl or mov add and dec adc jae (bad) cmp insl pop mov mov sub cmp loopne enter inc addr16 in cmpxchg sahf mov js repnz sti fwait mov dec (bad) or push mov ret add adc gs lock add out push cwtl or out dec loopne adc stc xchg add scas pushf (bad) fildll or or rorl push sub cld movsl ja add sti fmull sbb push aas and sti push scas movsb push add fs dec cmpsb and or arpl mov pop mov pop add sahf or arpl dec mov push (bad) xor daa mov add mov iret cli mov push pop (bad) add (bad) movsb add cld jne cmc mov mov mov pop cmp sti push test pop dec lret xchg xchg sub mov adc mov mov gs inc shrb jg add or andb xchg (bad) adc and in sti fildl pop dec cmp (bad) inc xchg adc push xlat pop aaa inc dec mov aas lods icebp or pusha add ret push sub mov loopne test js hlt sub cmpl pop cli pop pusha lcall lret (bad) pop jg or mov add gs mov or add iret out rclb sti ret fsubrs jg mov nop mov mov sbb cmpsb dec xorb xor aad cs icebp cmpl push or ja xchg mov xor fs addb scas sbb pop call add fiaddl cltd add cwtl push xor lock jl add inc (bad) xchg repnz seta cmp inc in mov jge cmpsb mov sbb popf aad pop push jle inc je addr16 cmp pop movsb pop out out jne addr16 lock and pop add push xchg loope les call clc in adc test rcll mov push fwait repnz stc jp mov pusha pop pop push out cmp xchg mov lret sub xor (bad) lds mov adc adc lds jp ret icebp mov push repnz mov xor sysenter aam add push je lret cmp lock clc add (bad) mov aaa add lcall sete add enter cmp shrb cld pop push inc add mov jae xor sbb nop cmc push or add gs insl sub out pusha ss call testb inc adc add movl inc add xor fstl add mov pop xor add and pop pop mov cmp mov inc in mov std pop das add ds out in add xchg jno int3 add jmp in or add cmp xor jge cmp cmp mov cmp sarb pop adc fmull mov (bad) (bad) sub inc add add cmp add jmp gs nop arpl jbe add ret and lret or pop insl or scas cltd mov add sub mov push roll sbb add iret nop cld sbb or jno cmc jg outsb cmp out aas jnp rolb jns mov js add add jp cmc int cs or sbb lret popw jae add jp mov dec add mov cmp xchg cmp cmp orl add (bad) adc mov xchg std cld mov and aaa bound xchg push jbe sub movsl decl xchg cmp ds into xchg les adc ror sub jge scas mov imul xor mov sahf pop adc (bad) jmp add xchg in mov pop xor mov iret aam cmp mov fildl sub adc hlt cmp incl adc stos icebp push cmp rorb enter add leave stc mov or inc add (bad) loope (bad) adc dec and xchg pop mov xor test sahf sbb xchg and int3 push push dec clc push add add andl sbb xor addr16 sub sub test adc scas call lods jns push sbbb jp xchg cmp rcr lods (bad) popa daa ja mov leave mul add jge std inc rcrb fucomi dec movsb sub sbb scas arpl hlt popa adc in int3 pusha or mov add not mov loop adc (bad) sub inc loope xchg arpl add clc lcall repnz dec mov add sub mov pushf fildl ss lret pusha fstl xor nop add cmp jecxz insb add les jle sub pushl mov inc xor xchg xchg or jo mov in pop add stc dec mov jne cmp mov and pop mov loop adc add jge int int3 push lock loope inc xchg mov mov cltd and push mov (bad) stc xlat mov or mov push sbb and (bad) mov jle loopne add push inc sbb lods sahf jg add add dec jns sbb clc xor lret jbe jl add mov out cmp pop and jl in push or flds mov and rclb test movsl sub sub mov add xchg pop js out loopne movsb sub pop add cmp push addb daa hlt sub pop pop dec jnp lods call pushf xor add adc xor mov fldt (bad) test or add ret fwait xor pusha lds sbb lret adc mov lahf js outsl sub pop xor jae loop arpl or (bad) push mov in divl add gs loop cmp les clc mov fs hlt movsl add stc inc aam jae and push pop pushf add sbb lret fnstenv dec hlt pusha cwtl (bad) sub or mov jmp inc sbb and notb mov add aam sahf adc dec adc add test cmp mov int aas mov pop rorb mov in mov lcall dec dec (bad) movsl pop fcmovb pop xor loopne outsb add into iret inc fildl jbe mov ret nop add xor inc sbb adc mov mov mov (bad) insb flds mov int jno std les lret sub adc cmp xor jmp mov pop adc add pop add loop fmull popa rolb (bad) and add jbe add push jg (bad) xchg jns es std xorb or add lcall add loope xor add shlb xchg ret outsb (bad) xchg aaa dec mov xor cmp shll daa pusha enter jno mov mov adc add nop sar mov pop repz cmp pop dec add xchg push test aas call clc mov xchg add rcrb and sbb add sub inc and adc pop mov popa add jg xor add sarb sbb int3 cmp sarb pushf ret pmaddwd push lods incb aaa pop aad clc xlat imull dec faddl or loopne add mov outsl adc ljmp mov add xchg cmp add pop jae out pop mov xchg mov lock leave xor stc ds mov cs xor jne mov add sub call mov add movl jb fiaddl out andb cmp xor call add lret insl push or mov xor (bad) jae sbb and and outsb sbb jnp mov or pushf or lods xor add enter fadds lret maxps ret mov inc jo mov fcoml lea mov js and fidiv sub jl add mov cli (bad) pop sbb cltd jge or xor pop aad mov call and dec clc add cmp cmpsb sar sub insl adcb insb add loopne mov mov fs inc test dec enter (bad) movsl lock pop fxch xor pop mov icebp pop or add adc dec call inc add and push shrl sbb cmp outsb mov add jae cmpsb in out cwtl leave loopne,pt iret addr16 mov cli mov cmc or lock xchg sarb dec aaa mov clc jg add mov incb xor add cmp jb sub add neg cmpsl arpl add inc mov mov js push adc cmp leave mov add mov je lret adc mov push fsubrl cmpsl pusha mov ficomp imul add and push jae popa aas (bad) push add lahf push xor sahf in sti gs add aam and xchg add mov push nop fisubrl add repz jbe in add fdivrs jo jae jecxz cmp out inc cmpsl add test out xor dec xor les add jnp js aaa pop add mov sub adc pusha addb push cli add xor mov pop scas cld arpl add int3 dec push xor ror inc test mov loop scas xor and pop push roll sbb fcoms inc aam add xor push jecxz andl add sbb xor ljmp shrb add jge xor add pop mov add fwait outsl add rclb push add push shrd lds xor das addb mov xchg adc push adc push scas stos iret nop pop dec out add mov insl jo xchg pushf mov add xor mov mov daa add inc sbb test pop add loope jmp add stos mov in cmovg fbstp sub mov mov xor test lahf lds test es rorl imul push scas addb (bad) push add popa in mov mov cmp push repnz cltd add in xorb pop fwait cld popa outsb sahf (bad) std push in jecxz add pop and add int cmpsb lcall sub or decb add pop xor pop jnp repnz sbb add sbb das add jle in push addb ljmp jbe add mov aaa ret gs sbb mov addb xor test add aas mov decb aam xchg fidivrl loop xchg aad sahf inc dec pop add add test or mov add data16 add cmp cmp or enter add sub jle mov cltd add call xor mov scas mov push mov adc loop dec fildll arpl popa jecxz push in adc mov repnz dec sub and mov push fistp in jo hlt (bad) dec mov call and (bad) clc add popf push sub sub add test xchg add add pusha rcrl adc xor jno mov test clc add mov aaa or dec popf add fisubr cmp and outsl add in popf add adc xchg add add fisttp and and daa jb pop scas je push movsb mov rclb imul fiadd sbb sub cs add lods add inc jb cmp mov pop hlt sti test xchg loop sub jb shlb add add xor jle xchg out sub or scas movsb add les enter add mov ljmp lret sbb in add adc push cmp hlt mov jo cmp stos add sahf ljmp inc (bad) pushf dec push mov mov rcr mov mov pop lods lret push push and dec pop out inc cmpsl and xor cmc outsl add sub jp add (bad) pop icebp mov ret sbb andl addl out add pushf ret push mov or rolb mov or inc addr16 in ss inc in loop add cmp movsl in inc add mov pop add mov add push xchg cmp fs lahf ljmp (bad) in gs mov add outsb ret add lods lds in mov cmc add fwait mov icebp mov pop cmova inc stos (bad) mov sti jge sbb pushf xchg add (bad) loop popl xchg repnz add inc add in pop imul add pop scas xchg cmp mov addl cmp sti jle stos cmp push inc call add pusha cwtl mov add sub je adc lcall jo incb and mov iret add js mov pop mov dec mov add iret xchg xor inc repnz out mov loopne adc adc push fs xchg fwait add cmp lock mov das jmp shl add int3 and sub add mov fildl or nop pop add es ret cmp outsl push jb fwait mov lea rorl add mov mov add sub pop mov rcll lahf or xor adc add fstl and jnp sbbl or add loope imul insl add jnp mov rorl pop outsl or jp lcall jo inc push sbb cld add mov enter cmp popf nop mov ret addl mov pop (bad) roll sbb (bad) add add xchg adc add popa in lahf insb xor lock cmp jns pusha and sub jle pop scas push add xor pop cmp jl mov push lret loop add dec xchg xor lret cmp aaa mov sub in (bad) (bad) (bad) add daa jge arpl loopne,pt and mov icebp push outsl iret push or mov (bad) add aas add fdivl add repnz or and movl fwait cwtl inc inc add in in cltd pop lcall xchg push cld lret adc and sbb or add sub cli push push sbb movsb pop add sbb loopne mov sub jo adc testb sbb adc cld hlt push adc pusha incl adc push lea lods add xor xchg sbb pop push jne mov jge add add (bad) mov out add sbb leave add fidivrl shlb dec adc sahf adc xchg add jo cmc pop arpl pshufw sub mov dec sbbb call adc ljmp xadd inc lret add pushf mov cltd rorb or sbb lahf stc test push adc adc push popf xchg cmpsb and jp data16 add push (bad) stc neg pop adc xor or adc push int xchg repnz xor fs push pop clc push push loopne push jg dec mov daa and sbb inc jle or cmpl ss pop or cltd adc cmp jae ret add ds in add xor dec push add pushf mov xor in imul add (bad) test orl clc mov add out test lret or loope stos jo (bad) icebp cmp add push mov test scas int sub rcrb mov or (bad) arpl cmp lret das adc push inc lods jg cltd adc shrb stos (bad) stos arpl rol pop sbb data16 test add fwait mov or call sub xor inc xor and arpl fbld ds decl push mov dec xchg adc xchg jb ss cmc cmp nop test popf add enter push mov fimul push and rclb inc lods inc mov mov xor scas jp add movl add sti repnz cmp xchg add xchg push insl xor push adc mov xor rcll (bad) mov adc std sbb mov bound push push out sub int3 lahf mov shlb sbb adc sub xchg mov inc mov add hlt inc (bad) jnp out femms cmc mov jbe jmp cmp imul sbb adc push movsb out pop (bad) lods mov js and addl pop and loope nop sbb enter pop rcl in xchg cmc sub aas or (bad) rolb xchg cmp jecxz mov add cwtl mov mov mov jle cmp pop inc jbe mov lret inc rorl mov dec xor push int3 or sub cmp aam lea dec dec add out or call add enter mov inc add sbb adc int3 push cmp shll inc out push inc ret cmp mov mov das add popf cmpsl (bad) scas data16 add pop loop je mov cmp repnz mov add sub jg iret (bad) xor push insb loopne add in cmp rcll add xor and test nop and dec add sub aas and inc push sub into (bad) adc pop loope dec cmpxchg add xor inc sub sbb loope add jbe inc cmp xor push out mov imul and mov iret xor mov jp jno mov inc sbb loop mov sbb adcl out adc sti push xor xchg cltd int addb pop (bad) ljmp ret and and hlt add push jae adc insb mov sbb add xchg cwtl mov sahf add sub mov push add xchg loope (bad) enter (bad) imul add adc mov or mov jb pop popf cmpsl inc jo lret add mov inc xchg incl sbb adc orl cltd jle test inc mov push jg adc add das lock sub mov pop insb test adc int pop adc mov (bad) ja add mov add pushl dec pop and sub mov add dec out shl shlb xor push add jae pushf pop dec jns add vpmulhw push xor gs sub shrb inc (bad) (bad) subl out mov std add movsb sub push add arpl cmp fwait insl movsb or adc ret and hlt fistl add and push add dec mov jae lods mov cli movsb jle lret add shlb inc cmp fadds fnstcw ds rclb enter jae sub add addb inc sarl xchg jno push mov mov or repz push push (bad) xor cld pusha pop mov sbb das cmp prefetchw stos fs out xor pop mov (bad) mov add in jmp inc aad add add outsb mov jg inc push lahf ds ret cli test outsl cld aad jge das push jmp adc sbb mov aam dec push mov inc in cmpsl leave orb jmp push xor test cmp mov out rclb and pushf sahf add push js add test cltd (bad) cmp in add sbb or adc cmp sub sbb cmp add cwtl movsl jge cs popf enter add inc into rorl jne icebp adc int sbb dec cld enter mov in or sbb dec lock xor pcmpgtb clc cltd into and inc loop xchg addl add leave xchg ret lret jle jp add in mov fldenv insb daa push sub (bad) add jb mov xchg jg adc xorb mov popl jns mov mov push iret lds rclb cwtl add adc and pop add sub rolb add (bad) leave call lret nopl cmp mov stos pop fisubl pop andb jle clc test (bad) in imul push sub inc sbb imul stos fsubp in shl cmp push sbb add mov inc lods add xchg fdivrl cmp sub pushf push addl (bad) or cmp jb in pusha mov cmp dec add cltd push inc adc loope or add mov add ja mov movsl push and sarb ret xchg arpl mov movsl or cld cmpsb in add (bad) push or dec sti sbb jbe mov cmp fdivl xchg adc sbb ds mulb add mov cmp pop int3 and adc cmp pushf jg add test lock xchg dec adc mov mov (bad) repz mov add dec addl adc cli or pusha mov mov rcl test inc push push mov mov pop jge add dec aad push adc adc cwtl jbe les lahf pop jle int3 or fwait in mov add stos push jae scas adc add push add repz jno push fadd pop or outsl clc jle cmp daa add mov pop sbb enter or fstpl pop add daa mov insb push cmpl adc sti pop rorl out cmp into xor add mov lret xor pop pop mov push dec mov and add sbb or push roll arpl push test bswap push dec icebp iret aam jno (bad) mov xor (bad) repz fistp test ret cltd stc add in and andl ret push mov inc add inc outsl popf scas inc mov push pop (bad) lods adc call icebp jp movsl xchg jnp add jbe push jo je loopne and fs dec pushf jmp das push xor pop mov nop in push mov add lock aas sar mov pushf vrsqrt28ps dec add imull enter scas inc mov push pop adc push and and cli sbb inc cltd inc sbb mov nop sbbb or adc shlb pusha pop cmp decb mov add addb test jp add sbb daa movsb cmp and add jo (bad) inc mov call sbb stc dec and jge pop dec adc fsubrs cmp adc add xchg orl pop in and mov fstps imul (bad) sbb loop inc adc orb add inc lret in adc orl rol scas loopne pop clc add pusha es sub add add loopne xor pop pop inc inc loop mov push add lods inc jp push fnstsw pushf add movb sub mov add aam xchg add mov ret mov pop sub inc mov mov add aas lahf in adc cwtl inc nopl movsl dec pop inc loopne inc fs or dec pusha popf inc mov adc bound int3 xchg sub sbb stos jo cltd cli lods or cmp mov add ret or xorb pop sti add (bad) cmpsl int3 mov xor add xor sbb adc push pop sbb mov sub mov sbb loopne push add aam movsb lcall gs loopne sbb adc mov pop and lock mov or mov dec inc pop jmp or lahf cld mov sub fs rorb mov xchg in add aam pop fldl scas addr16 js ljmp sub pop add scas dec xchg arpl add in adc add inc mov push lods lock inc fcomp xor mov or into repnz daa dec jae mov addb jb cld push add iret mov add popf push mov aas rorb mov adc xor push cmp mov push xchg je mov dec adc push movsl xchg repnz aad and mov dec adc (bad) jbe xchg (bad) mov xor test lods lahf or leave cmp in sahf mov loope pop or sbb xor mov (bad) cltd mov clc push out push pushf loopne pop xchg push scas adc aas xor mov mov sbb dec push add jbe adc mov jp loopne xchg xchg xor arpl enter add or inc pop scas adc adc cmp inc add loop adc pop cmp push sbb mov or inc rorb jg add and lahf imul xchg insb push push out iret call and rolb sub dec subb jbe nop adc mov push aad fscale movsb or fwait into xor nop aas call sbb or push xchg xchg out add das and add sahf iret fldt enter and add cwtl jl pop mov (bad) insl movsb add fldt test cmp and jne push jg js xchg andl pushf adc ljmp xor addr16 fstl push or adc jge loope inc dec cmp pop aas ja mov mov rcrb xor cwtl cmp ss cmp inc sbb sub fnstenv pop add jbe cmpsb scas pop mov fidivrl rcrb xor sub mov inc pushf and subl mov pop adc sub idivb int gs add scas lods sbb loopne xchg shll mov add xor ffree inc or gs xor stos sbb add incb adc iret stc adc pop jmp je inc xor jp dec sbb or pusha sbb xlat in xchg arpl mov (bad) not (bad) mov js add mov add and dec add je add or mov pop cmc add mov xchg xchg xlat test lcall jmp dec clc pusha jno add mov fisttpll ljmp add dec sub pushf inc add das add aaa stc hlt add scas jnp xlat pop xchg cmp add loop insb fidiv add js lret sbb xchg insl add add inc fmuls sbb rcrb mov add jle cmp push cli pop mov mov rcrb push or icebp (bad) lret or frstor jge xor xchg ret push push mov mov test push add imul repnz push jl mov (bad) add dec sbb cmp or incl aaa lret enter jo add outsb sti in mov mov jge sub lock mov daa adc jp add mov fwait (bad) pop sub ss mov pop adc mov rcr test jnp pop daa push ja (bad) adc sbb sahf fbld dec gs push cmp sbb push inc mov lock sub das stc test outsb psubsb mov xor or test bnd addb sub cmpsb push xor enter xchg shrl sbb dec (bad) pop data16 push fldl fdiv mov (bad) xor jg jl mov and dec push stos pop sub aas mov mov (bad) bound sahf dec pop cld aas cmp sbb add sub or fcmove push push cmp scas shrb push pushw mov dec add xchg movsl dec sbb imul sbb pop aam sarl or mov jbe add or adc sub xor adc inc cli je jg add test test xor xchg addl pop loopne adc cmpsb add mov and insl adc andb dec loopne sub test movzwl mov xchg aas add push shrb cmc add scas ds dec xor add (bad) out push xchg cmp xchg mov xchg add clc adc test stos add inc and sbb add dec push jle xchg mov inc stc add adc xor (bad) pop add adc loope dec iret inc call sbb push fwait pop cmpsl scas cs lret je sbb mov add inc test jbe or jmp add mov jmp pop xlat ror rcl add sti push sub stc add addr16 in gs pop daa inc pop call loope lods mov add (bad) test or add xchg cs cli push push jmp inc dec sbb test (bad) adcb aas jb add fucom add fiaddl dec es sub mov jg sub sub adc negl jmp add daa fdivs adc push std add push mov and (bad) loopne loop je pop lahf cmp jecxz cs clc add dec mov mov clc fnstcw test and mov jno arpl dec imul jnp loop and jae xor cmp adc jae or loope xor js sub int push rcll adc imull ja shrl out inc xchg xchg mov push (bad) in fnsave es fldcw pusha cmpsl nop shrb add dec stc pushf aad xor pop (bad) imul rol or mov cmpsl add cmp mov and subl into jmp mov and insl sbb imul cmp sub push aad pop fiadd push and inc push sub mov adc cmp push jb fildll push nop popf jmp loopne add (bad) push inc add mov addl dec sub fcompl pop push test cmp scas cmovbe ret nop shrb sbb in pop dec xchg shrl lock xchg loopne int3 pop rcrb or push push mov dec push xor add popa or into je pop push pop pushf pop aam dec dec and test imul cmpl outsl rorl sbb sbb mov movsl cwtl (bad) ret cwtl enter fnstenv jecxz jmp sidtl pushf lahf in and orb sub leave push or jo in sbb aas les popf push xor inc xlat pop lcall (bad) inc pop mov add cmp xchg std jns add subl out popa add mov push cmp sbb mov rorb addb mov js add and add cmp or add repz jns inc mov ficom ljmp aad repnz (bad) and fidiv add jnp mov add sub out cld jmp in push xchg mov clc dec (bad) mov sbb fs mov lock adcl roll inc daa push frstor and out lret add pop xor sub adc es arpl cmc add shr fwait or jo xchg cmp (bad) xor out adc in add mov fstps cmpsl or push inc ret push pop data16 add nop cs test enter aad int mov xchg add dec js jg out loopne mov push add inc pop andl stc icebp dec add sub imull xor xor (bad) daa add mov pusha sub add test pop push mov insl inc out fidivrl sub jb mov out std jge add rol test (bad) jae add in lock and mov cmp stos call stc sbb inc sub sbb test jo (bad) cmp cli inc add jb jns dec xchg pop jg xchg xchg sbb pop faddl (bad) pusha lret (bad) je dec sti add (bad) xor jle add push push and scas les and cmpb mov and hlt movsl sub rolb xor dec sbbb mov push (bad) mov in lcall (bad) mov ret mov inc stos mov sbb or cmp adc cli add jp push add add cmpsl aaa jmp (bad) pop test pop gs pusha dec mov push psubq movsb sti mov inc mov mov (bad) mov popa sti add divl dec icebp cwtl sub fdivrl js fidivr push xchg jae adc push mov jns add sbb int or lock dec or mov ljmp adc testb add xchg imul sbb sub push (bad) jb jne mov pop loop imul add rorb in sbb add jo add jmp nop or (bad) inc in testl and mov pop addb or jge dec sbb adc push out push fildll flds (bad) push lret jbe xlat popa loopne add mov pop (bad) scas div add xor ja and push addr16 sub out in mov fmul mov add and out pop sbb leave das fnstsw add jnp enter repnz cmp xchg push ss test (bad) xchg dec xchg and mulb and add (bad) rolb or mov xor fild cwtl add movsb mov add repnz inc xlat mov adc imul fldl out es cmp add aam scas (bad) ja psadbw xchg lea repz fist sbb nop cmpsl jo cmp xor bound jb jp add popa dec dec jp add push push adc cltd mov testb test lahf add stc mov mov rorb pop dec and and addl inc lcall imul pop cli loop adc js add lahf lods inc mov mov les inc inc cmp xor (bad) loope jecxz es mov out add xor sub push jmp int mov xchg add aaa inc push enter sbbb jae cmp mov sbb lea sub mov pop xchg cmpsl lret divl pop add test add mov pusha leave and in mov adc pushf repz add jl fdivrl lret cli subb sub (bad) mov (bad) stc add fninit jge add push vdivss pop repz nop xorl idivl pop pop enter lret lods in (bad) sbb adc scas or jb adc pop pop dec aas cmp pop mov jecxz xchg adc and push mov sbb inc mov and inc adc pop dec mov les cmp in inc add mov lahf xor arpl pop push in andb adc sub mov es popf jp pop mov scas adc push test cld xor cmp jnp xchg insl shrb jmp push (bad) shlb cltd out (bad) int mov pop fstpl call and pop hlt mov xor js add mov loopne stc push adc mov add mov pushf push add cmp and pusha jg aad jbe fs int3 and clc in imul insb xchg jno add jns lods shrb es cmp aas cwtl stos add push jmp or ret push jg mov hlt cli add pop jge inc sbb dec fdivr add push cmpsl ja cmp sti sub adc or nop ja pop add cmp add xor mov call adc adc add pop mov out out push jp fwait int3 add cmpsl jnp cmp push push or adc mulb sub or xchg das sahf push hlt add cmp add mov testb add cmp stos sar movb stos jbe xchg pop cmc out inc push and cmp mov dec cs es or jmp jnp loope subb mov (bad) pushf pusha decl sbb xchg sub mov (bad) (bad) mov push pop or pop push outsl cld and add adc sub push adc cmp add mov push sbb push stos lea xorb adc add mov inc add and pop test outsl add clc cld mov mov push cmp jle add (bad) add sbb out out xchg xor jle and sub xor push add xchg inc js jnp adc mov loopne push ljmp bt or sub call fnop aam (bad) push sbbb jl lret jnp push jmp adc mov jg lds divb loopne out inc add jge mov push addb jecxz add add ja arpl (bad) dec aam adc aaa addl popf sbb sbb cmc xchg std lods test cmp xchg jne mov or dec aas loopne cmp xchg mov xchg mov aas fs or (bad) iret add push and inc in and add (bad) mov clc jmp imul xlat movsl jns sbb lock jp push fiadd pop call cmp int3 xorb inc mov pop or ljmp jp loop pusha in cmp lea add mov mov lahf ja add fucomip or mov xchg jne add and stos icebp cwtl add mov insl mov cmpsb xchg or pushf ja jnp js (bad) sbb xchg cmp or test sub adc fmull insb push jo inc xlat stos add clc inc adc push add (bad) fistpll cmp stos out fsubl push mov jecxz fwait dec loopne cmp sub je iret daa cmpb stos dec leave pop add xor cltd adc add add imul mov ret jns cwtl in cltd loopne jp push lods xchg nop adc lret test cmpsl mov (bad) into ret pusha or test xor xor xor push cld jmp sbb pop sbb add mov fadds movsl add int3 idiv fcmovne xor adc pop jno cmp adc push popa add daa xchg mov mov or mov push imul cmp sbb jb jmp ret inc mov jl pushf add jge imul mov ja,pt add push sbb out aad add push (bad) xchg mov jo add outsb add aad mov mov add dec ret add rcrb mov inc das jo sbb mov data16 jne in loopne xlat fildl dec or mov addb lds cld adc jecxz or mov jl movb cmpsb cmc insl pop inc shlb mov jecxz in adc mov call inc ds outsl or popa xorb imul cmp fistpll andb inc in sub loop or fstpt fwait jne push mov sub frstor xchg mov jns mov add movsb xor mov fnstsw sub push add je jo mov xchg add enter cmp cli pop add dec cltd jo push call jmp xlat pop rol adc push push push sbb or push pusha in nopl add fcoms lock je dec in into add lahf inc and nop adc jo aas cmp iret pusha jg flds arpl test hlt add jno add xchg mov mov cmp xor dec lock or int3 and add pop gs ror (bad) pop jne xchg push inc nop cmc cli jg add xor jns in in pop xor xchg cwtl cmpsb adcb pop push mov mov inc aas xor pop jno mov sbbb sbb in jmp or add mov cmp sbb inc loope add fs mov mov pusha fadds enter (bad) shlb mov and sbb inc add mov xchg cmp add xor stos repnz pop subl add dec rorb daa in xchg mov cmp je add add iret arpl mov mov add (bad) data16 mov cmp jge ljmp mov add mov aam pop mov mov cltd rorb add xorb add fild sub mov subl dec jae inc add lret inc and repz ja dec icebp inc mov add adc nop nop cwtl out or push sahf push jle andl faddl stos jbe scas inc jg mov push sahf in (bad) jae outsl fcmovnbe jo jecxz movsb aas xor mov inc shrb add and dec inc push sub pop bound pushf mov pop add cmp pushf add jne mov pop sbb pusha jge inc fisubr jae adc xchg repz sbb fs lods test adc out lahf (bad) sub pusha dec and push out sub xlat clc add adc or call ss imulb add cmp pop jbe inc dec shrl inc psraw inc hlt test nop push or in mov add fwait pop aaa push cmp xor sbb adc cmp mov dec (bad) aas add loopne repnz out jo and getsec inc or add and push mov sarb and cmp stc aaa dec lock popa sub push sti pop in cltd ljmp mov or add and ja jb movsb arpl or shlb les mov cmpb pop jns sub orb (bad) aaa into roll push cs mov mov negl pusha outsl sahf dec hlt xchg adc rcrb add fwait iret pop ret pop mov (bad) sbb mov in ret jne js inc add ss je adc inc add mov fxam add es adc out cmpsb shrb aaa inc add lods sahf and mov ret xchg xor movsb pop xor (bad) cmp jbe outsl add sbbl or inc and lret adc xchg sub ds daa rcrl std add jle imul jae cmpsl rorb add movsl xchg pop sub insb add pop dec movsl shll and out repz lock addr16 pop add mov xchg dec add ja dec adc xor push or hlt adc jnp add nop xchg lock add ja dec pop push pop mov mov add cmc out cmp push jp aaa pushf and xor dec adc inc adc sub and pop pop lds dec jmp sahf aad add cmp inc (bad) (bad) pop sti je inc and daa cld cmc and cs add out push add sahf or mov je mov rolb jne jmp cwtl or xlat or fsubr sbb xchg jp push rcrb bound inc add fnsave cmpsl inc mov dec out fwait add push jmp (bad) mov repz cld imul add xchg jno add sbb push adc jbe stos and lods pop enter rcrb ss jb push mov addb les mov lahf pusha cmp pop mov sub mov test sub inc add mov pop ret jnp xchg jmp push xor xor sbbl and cmpsb inc mov call sahf inc cltd add addr16 xor lcall cmp add mov pop out ret xorps cmp addl clc adc dec or pushf inc mov nop add andb pusha pop xor int3 sub test push ss pop dec aam mov xlat shrl lret add out fisttp push push dec push (bad) adc cmpsb (bad) roll (bad) int or sub add push jne adc mov rorb enter or pop nop inc in add mov xor (bad) adc and pop clc les inc popa sbb aas sub inc adc add jne xchg sub pop add cmpsb inc dec ljmp insb lret push stos add out mov mov mov rolb pusha cmp jge daa mov (bad) movsl xchg psubw mov mov pop hlt lea push int3 add jne popa xchg fwait dec dec dec enter divl mul add test xchg sahf stc fnop mov in push inc cmp pop outsl (bad) pop bnd (bad) icebp add xor fidiv xor push xchg ja pop jae outsl loope nop xchg cmp out pop out rolb dec sub in cli jo,pn xchg add js mov jle mov testb enter fstpt incb orl aaa cmp mov push fisttpl or sbb push fsubs dec add pop frstor sbb cmpsl mov loope add in mov test in add icebp adc shrl cmp mov sahf aam rolb outsb pop loop inc push out addr16 bswap mov lret push sub dec add sbb pop ficom das jne dec add test test fnstenv or xchg (bad) sarw mov (bad) cmc les ror mov add pop fisubrl movsl aam cwtl xlat in daa add (bad) mov lahf loop jb sbb push in lcall orl pop cwtl nop setnp test xor jp jecxz popa cld sbb jbe lods pop mov in mov mov mov (bad) stc into out in xchg cltd fnstcw dec sbb and sbb dec sbb sbb idiv add mov (bad) jb es xor insl push sub xchg sbb jnp ret sub lods dec dec pop mov cltd popf pop fidivl add lcall js add sbb popa popf xchg push adc pop mov cwtl rcrb mov js add push fnstsw pushf jbe sti pop cmc lret pop es sbb orl popl popf xor push inc das push jbe or pusha call stos out push das jns subb imul pop pop jg add cwtl mov mov loopne dec push divl (bad) out and in add addr16 add jmp or add out xchg mov mov cmp aam add dec cli jp or push cmp push adc pop add ss cmp push clc pand add clc adc mov enter xchg adc stc pushf fcoms cmp in mov cmpsl fcomp xchg rolb cmp sbb mov insb in outsb or push mov fisttpl adc (bad) imulb mov fisubl int dec xchg fistpll inc aaa mov sub pop push mov or cmc mov cs add fidivr mov inc (bad) or idiv dec loope adc daa sub mov and inc mov jne add lahf movsl mov mov enter xchg lret or and add pop push fwait inc aad insl add push cmp push and or and cmp dec (bad) or adc lahf xchg or adcb ss cmp add and xchg out xchg lcall adc add xor mov psllq outsl add arpl mov add and push jo cwtd fs outsl adc mov mov cmpsl mov dec cmp popl sub inc aas and es cmpb push outsb dec sarb and add mov dec inc add test inc sbb decb pop pop or xor or and adc popf imul xchg jnp call add push sti mov add jecxz xor and add int3 xor add xor das std fldl adc add popw and push lods addb or test ret outsb stos fistpl cld or sbb out add pop rolb fs pop pop mov push test inc xor cs dec and add push sarb test mov pop jb mov and insl sub (bad) adc loop xor ss cmp cs sub sbb sbb adc or lahf scas loope fnsave push add dec ret mov xor sbb or fmuls sub pop hlt mov inc add xchg dec icebp jmp fnstcw pop test mov loopne fucomp mov adc mov ljmp inc xor add add ret add push or (bad) fidivrl mov mov rolb lods dec out inc adcl push psubw inc and add (bad) mov mov add cltd pop and mov xor pop mov mov push or js jne pop add adcb (bad) jo adc and pop sbb lahf mov dec cmp fcomps inc mov pusha cwtl ja mov and mov mov add pop add sub sahf ds xchg dec fnstenv or wbinvd fmull mov cltd ja cmpb inc mov push sbb pop (bad) pop ja add js stc xchg pop loopne jno sub fistl xor cmp movsb nop repnz or mov mov pop add punpckhbw (bad) fild or enter shrb lds fwait jne pop mov xchg add (bad) sub cli stc js fsubs andb fwait ds jmp pop xchg add inc mov loopne xlat popf pop js xor push loopne mulb (bad) jg cmp mov jns addb sbb stos xchg sbbb stos xchg lahf push xor jbe inc push add hlt add sbb lahf mov pusha xchg cmp push leave mov and test mov imul mov shrb fs iret sbb cmp outsb sub repnz push (bad) repnz in sbb jae loopne arpl push icebp popa mov sbb add andb movsb (bad) lret ljmp js add clc mov add sbb dec xor cmp or aam pushf cmpps movsb push clc test je dec fadds incb andb mov pop hlt les inc dec pop aas add je call (bad) pop jp xchg mov sbb adc stc sub orb mov jecxz adc jmp ret gs mov fldl pop int inc cwtl xchg jmp shlb push jle mov add les pushf xchg mov cmc shl dec inc jg add clc jg dec push call adcl sub add pop sub popf pop jmp add and inc shll stos push stc xchg jnp sbb imul jmp movsb add push dec dec repz mov ds movl and push adc cwtl xlat arpl mov je dec in sti in lea adc mov pushf fnstsw pop sahf mov jg adc mov dec sub repnz mov sbb or push add rcrl in push cwtl test repnz jbe xor xor dec jb mov (bad) (bad) das (bad) lret fldl nop add ljmp pop leave outsl in xchg xorb fnstcw push push dec pop and cmp add dec cmc or fnsave out inc add fidivl or sete sarl push jne cmp mov ja stc add (bad) icebp imul lret repz leave cmp dec pop ljmp ret or ror sbb jg ss clc adc cltd and arpl movsb dec jp add cmp add cmc pop mov sbb sbb add push add icebp mov cmp lock mov xchg jae clc out add outsl push dec es lock jl add not jnp imul jnp jg add fild negb lods call leave xchg add add out and adc adc (bad) in or insb or sub cmp xchg cmp orb inc xchg repnz push cmp sbb xchg add mov stos loope movsb add rol inc sbb ror mov xor add loope sti add push xchg xor inc sub fimull add jns add jne repz xorb cs enter inc movsl rolb add sbb cmp ret or test mov ljmp push push (bad) or cmp call jns push cltd mov into sbb out and mov xchg add jno fstps les adc loop (bad) mov or lcall aas prefetch or adc (bad) insl adc fcoml xor lock jmp sub and xchg mov push mov jnp cmp sub sub dec das inc pop inc loopne xor add cmp push clc cltd icebp add mov mov jmp setns mov pop ja fdivs mov jmp addr16 add js dec scas negl lcall js jnp aad dec lcall mov rcll cs in out add or cmp push insl add push (bad) fadds addl shr outsl and testl mov mov outsl inc sub xchg test cmp imul call out cmpsl inc mov push lahf leave adc test stos adc jl cmp xor push mov jns sbb dec fmull movsl add (bad) xor imul and add jae add sub cmp test leave sbb push fs lahf add xchg dec add mov push decl push scas xor jmp or fdivs mov inc adc push adc or loope enter adc pusha test cmpsl cmp add sub pop inc (bad) ret add out xlat nop test clc lods push jo aaa push sbb scas imul cmpsb dec incb add dec fisttpll or call add out lcall test shlb push mov leave imul stc inc mov add push (bad) scas and rolb pop scas xor icebp movsb mov nop aam inc test inc dec pop pusha lret (bad) jle (bad) jmp cmc jp add and inc add cmp test dec sub cs stc scas fdiv add push leave xchg mov push add aas rorl mov ret sub or add orl sbb xchg add scas fidivrl test sbb xchg pop push rclb inc dec orb sub sbb and cmp pop js jns icebp sbb in jne fcmovnbe add xor loope lahf or stc xchg push or push sbb stos (bad) mov aas pop daa iret xor sbb rolb daa aam xchg adc ret ret bound dec push xlat lds in or enter jge lret flds dec aas adc adc scas cmp xchg xchg cmp or lret sbb lods and fdivrs int3 xor mov mov bound jg add and mov mov aam add call shrb push add pop js mov cld dec pop or push push add sti popa clc and shll test push xchg pop mov lret js clc sub out cmp mov or stc and cmp fdivs fidivrl or xchg pusha cmpsb rorb xor sub cmp cmp (bad) or inc pop mov pusha lcall or arpl and or mov (bad) add cmpsb sbb pop test mov and mov jns movsb sbbb add mov add ret mov or cmp adc or sbb cltd (bad) js pusha into test ret js add and lret and sbb loope incl aaa push fdivl or and xor daa (bad) xor inc (bad) inc xchg or inc add pop add bound adc inc mov push and mov les adc shlb js cld sar cmp push push inc pop add nop cmc fsubrl pop cs add mov mov sub je adc enter int3 arpl jns sarl shrl add jp out test fcmovnu adc add es bound fsub jnp jno scas adc mov dec adc cld push bound sbb (bad) pop mov cli pop add sub outsb lods (bad) pop clc mov fsubl idivb xchg xchg sbb pop movl xor pushf (bad) inc sub and test sbb popa add mov xchg das jp and lock add nop cmp ret mov sbb push pop pop in or (bad) cmp clc or in loop sbb sub add (bad) (bad) addr16 jge mov arpl adc pop mov lds int ljmp stos fadd fs loope mov inc add out mov je repz mov pop xchg push hlt call aaa mov aad dec int3 loope in outsl xor add add adc and pop fucomi subb jns dec lahf clc and shlb or push or add adc add dec sbb or inc jns dec (bad) rclb mov jp enter roll xor sbb jo push js mov add out rclb jb pusha mov lock lret add dec add or push lret push (bad) or adc cmp dec jbe jnp loop aaa sub std fsubs add faddl mov mov push add les rolb les and add inc jns rcrb pop pop jl out (bad) in stos (bad) rolb mov rcl int jno push adc or and mov imul cmp xchg arpl jp,pt adc mov or nop push pop in xchg cmp rclb and jns nop lcall mov add dec mov push dec (bad) stc (bad) loopne cmpsl jbe and jno add jns add js add sbb xor add mov rcrb add test mov lcall xchg mov cmp fcom cltd mov cmp test data16 pop gs add add or mov or xchg jns imul inc xchg dec rol cmp stos mov lock jecxz and pop dec movsb nop dec dec add inc test sbb jp add jnp bound cwtl mov push pop jo aam add rolb mov or icebp add sub add rcrb jbe cmp xor lods mov xchg es or jnp,pt icebp in das sbb cltd mov jb pop mov das nop xor jl pusha pop roll fidivr pop push xchg jnp scas or xor out xor daa pop hlt clc dec cmpsb stos xchg mov add cmp or xor or dec jno dec mov or pop ljmp dec and lock xchg cmp sbb pusha adc add in addr16 add (bad) sbb jae xor adc pop push or and fiadd rol lret call sbb or out pop pusha iret jmp nop lock nop fisubl mov mov push adc rcr dec or addr16 push adc js inc and aas stos shlb or (bad) cmp shrl add lret jg add xor pop cs jp jns,pt dec mov test fsubs and add jge xor mov cwtl cmp (bad) in mov stos js and ljmp adc loopne mov sti xchg cmc cmp in mov add xchg push addr16 pop pop (bad) sbb sbb push in mov add out dec mov rcr sub cli xchg cmc pop gs addl in inc pop xchg mov adc add jp mov add sbb sub aad pusha sub add jno test (bad) dec cs roll add mov or sbb test or test data16 xchg mov lock dec out jo push and add mov int3 daa xor fisubrl or mov scas loop mov repnz inc call test cmpb pop bound daa faddl xchg cmp jno mov xor xchg mov fistp adc je add test bound arpl mov mov push ficompl pop pop stos mov add fmuls andl fldenv inc hlt add adc pop mov xchg push jl sub sbb jo (bad) push add int cmp mov insb jl push in aas mov mov test pop pop loopne out add lret andb imul fcom test pop ret ja adc add jl fadds adc add xor push adc lock mov mov leave sar stos loop out aas and mov movsb add incb dec push movsl pop mov inc dec enter or cli les addr16 sub cmp jge xchg pop cmp mov js mov xor nop test add sbb jae jnp adc pop mov cwtl inc add push call mov cmp add (bad) fnop inc add addr16 cld xchg insl push fmuls test or decl ja sbb mov pusha dec rcrl cmp dec call inc (bad) sbb fs add sbb jmp cmp jns nop mov lods push fwait add push push mov cmc mov sbb sub or repz pop sub ret or add outsl xchg push pop and (bad) dec cmpsb adc sti push sub sbb fwait je lock or test xor (bad) xchg rcll cld (bad) jne jbe dec repz ljmp sbb jp mov clc xchg pop movsb dec or add shrl bound cld add hlt adc (bad) mov shrb push add and pop rcl pop cli (bad) stos add stos repz xchg push sbb rcrl fstps incb sbb mov cmp clc call fisubl iret xchg and adcl adc sub add mov cmpsl or inc push insb xor and xchg sbb lods daa cmp or (bad) fsubl mov add jl add hlt ja and mov and inc xor test adc test xchg enter pop jp in push sub xchg enter sbb insb bound sti mov xchg out cwtl clc orl orl xchg loopne pop mov int3 mov scas dec imul add clc dec loopne test les add xor push pushf mov cld clc push addl sub stc push data16 pop mov bound push pop and mov int cli call mov (bad) jo mov xor and jg cld js aaa mov icebp ljmp mov js test addb sub add push int3 lcall push sub dec adc sbb (bad) icebp popa adc cli mov pop jmp mov icebp adc push add jp mov and pop ds lock lock jge lret dec cmpsl shl mov xor mov cmp cmpsl test add mov (bad) cmp add sar cmp push sbb jg pop xor cmp add pop add in lods sbb js stc mov add test add cli and jl test js nop adc mov bound fsubs (bad) cli jns pop xchg and push cmp int mov stos mov mov pop addb xor push add or fs sbb jns negb aam mov push in add inc imul fmuls push shrl mov add (bad) or pop add enter pushf (bad) xchg cli test cmp orb add hlt shrb and hlt add rolb scas mov pushf sub out push arpl mov scas dec mov cmp xorb xchg jg cs notb inc push and (bad) push enter add ss jno inc push movsl sub jns jne xchg mov mov and add jmp dec or xor sbb aad outsb pop mov xchg jecxz jge pop push pop xchg xchg pusha inc dec jb sbb push call loopne mov dec arpl mov test mov push xchg jbe out push pop mov cmpsl mov cld (bad) jp adc sti ret andl dec hlt fnstenv enter adc cmp add xchg fidiv fs js push out or (bad) cwtl mov enter je les les cmpsl jne xchg pushf and add jbe bound lahf jle push or pop and cwtl aad nop add popa dec iret shr add fiaddl xrelease les lods inc pop add or xor jle jb add test sbb pusha lahf bnd cmp push or fadd insl mov sbb lock add pop pop pop and movsb or or icebp and sbb movsl ror mov or mov daa inc jecxz rolb int jl,pn add bound xor leave test mov inc shrb mov (bad) xchg inc pop pop lahf mov xchg ds bt push dec or pop lods movsl dec shlb adc out add mov hlt pop and jo jp xchg mov clc add cmp test and fisub cld jnp xchg and lcall mov ds lock cmpsb add xchg push sub add outsl add xchg jae mov inc adc (bad) jo add faddp jnp jne push pop outsb int sub scas lret xchg or bound ret mov mov ljmp in in mov push dec xchg sub sahf xor add pop sbb dec sbb imulb iret mov mov lcall out and mov sar ja mov fdivl xor loop adc cmp pop add lahf lea add jle cltd add popf dec mov sub inc outsl xchg xchg addb fdivs out clc mov inc and or into cmpsb fs pop mov add mov (bad) adc lcall (bad) and push fs add sub xor or inc jo (bad) loop add (bad) in cmp pusha jne arpl les or add pop clc mov flds inc sbb test orb jae fsubs pop mov xor mov sbb imul mov sbb mov out sbb push adc jle push add cmp add dec sbb pop push add outsl cltd sahf outsb push dec add aaa mov add sbb test add pusha pop or xchg testb add movsl ss add or push (bad) jo cmc push dec clc (bad) sub je add push movsb (bad) lret xlat inc jb orl jne (bad) int mov (bad) add add or sub cmp sub add ja pop lods aam push stos push adc mov adc pop pop insb aaa or add add sarl cmp andb sarb jb xrelease inc dec xchg cmc in mov pop add ljmp cmc das rorb push fldt int push inc lods out and mov into jo add repz pop adc mov push and jnp add jno xor mov or fwait dec adc mov mov adc das jno lcall mov inc subl add push into dec mov jne pushf (bad) loop addb pop push das mov dec insl lock or aam (bad) push mov (bad) xor push mov lret jo scas xchg (bad) add adc pop mov nop xor sti (bad) pop ret add dec into cmp pop rolb dec push pop movsl fisub outsb inc push push add das mov bound je aad in xor mov addl cmp orb repnz aas jp (bad) sub sub pusha or sbb int3 (bad) cmp loope es fnstcw cmp fcmove clc notb mov out jg cmp roll add pop add adc pop jb sub or push popf cs inc in icebp pop mov mov or (bad) add pusha movb mov stc insb lar mov int3 add pop enter int mov test lcall or cs lret inc cmpsb add mov adc xlat jae add dec out lcall pusha adc jmp sub ficoml add cli fwait insb mov sub clc add adc mov fsub repnz mov adc clc jge ds mov dec pop mov add xor loop out push clc xor jo clc mov add lret inc fisttpll add push push dec fild xorb icebp mov xchg shll adc mov mov add and sbb subb pop enter or pusha aam fwait cmpb add mov std mov push shll test xchg iret jns out mov fwait pop scas inc shr (bad) jmp mov outsb fildl sub mov xlat add xchg out inc mov jne or in dec dec xchg add xor arpl pop sub pop loope inc mov jmp add rcr hlt mov mov mov lods mov negl sub in mov arpl icebp cmc fmull gs fs in add jno and sub clc shll adc push cs out js int faddl push add mov sub cmp jno mov iret add in push mov mov cmp int sub pop mov adc add lds cwtl js cmp add fisttpll mov xchg jns xchg mov daa popf andb jo pop (bad) (bad) out test xchg inc add or test push xchg fistp aas int3 aaa js repz lret inc add test jp enter call out aaa mov sbb inc nop cmpsb sub xchg jno clc cltd js sbb adc add repz jb jns push cmp in aas data16 push insb stos push inc xchg add ffree adc xor lods mov loopne mov xchg int incb lcall rcrb (bad) mov jno add adc mov add add iret scas mov pop sbb pushf xor mov dec push lock add add mov mov sbb xchg leave push jmp push mov push fcom xor test addb out cmpsb add dec std add sahf adc jnp inc adc nop roll ss out sub push dec in ret push fistp fiadd mov pusha fs in push popl test iret pop andl jo cld fisttp nop jl scas rcr lock (bad) nop add jno les pop subb add std daa xchg mov (bad) rcrl (bad) jbe dec xor or cmp push xchg push pop xor sub mov in push adc mov cmp cmpsb mov lret sbbb nop mov mov test add add add iret test (bad) pop test and mov sub sbb push adc es add jns lret mov and add pusha icebp push or in mov pushf add das pusha mov inc lret push rep add mov nop jmp (bad) (bad) pshufw inc psubq (bad) lahf inc fyl2x mov xchg dec addl cmp mov rclb mov cmp xchg mov shrl mov fistpll insl clc daa add push or hlt adc push jle cmp mov in ljmp push push fnop sub xor or movsb pusha iret bound lods stos movsb ret les repz cmp sub xor mov lret xchg add arpl scas mov or movsl inc add jno xor push inc loopne add inc repnz sahf push jl sbb imul add sbb push push add and dec push xchg mov mov pop add jmp cmp repnz push mov cmpsl aas outsb xchg mov pop add xor out xor sti daa jp mov xchg int3 repz loop xor arpl jg mov cmovs xchg dec jmp int3 pop aam jno sub add loopne dec push pop or shll addl movsb lods cld jecxz call cmpsl ds arpl das pop pop ret add ja pop xlat xchg sub lret xchg out les add mov ror mov pop mov xor movl mov inc fwait test dec pusha sub cmovae pushl adc stos jle jge sbb xor fmull jbe sysret loopne imul sub les in sub mov popf fcmovb rorb ss movsl xor jo push out xorl cmp loope xchg add push or imul nop cmp adc dec fs std add and sti mov cmp rorb out jnp mov imul and test pop mov cmp and sub jns cmpsl (bad) cld pop cmp xor out mov add adc sbb jmp lret xchg add xor sbb adc xchg sub pop cmpb sub imul imul out mov xor ret add inc adc cmp lcall push adc pop dec inc lea repz mov inc add rorl pop add pop mov lret cmp and mov lods imulb hlt xchg bound mov dec push cmp xchg aad mov pusha lds add jge sti bound push xor mov add rorl inc push xorb jecxz sub or add fisttpll push dec and mov mov cli syscall add pushf push adc nop mov test sahf lods leave add out push mov cmp movsl mov adc add lods gs leave and jnp (bad) mov mov xor pop push add or add add les jb jnp insl inc and jbe push lea shlb je dec call sbbl call mov or inc add pusha or jl add mov add stc jmp sti aam test and mov push cmc popa addl add push cmp push and sbb cmp jmp lock fild out and xchg inc sbbl mov push arpl fsubr stc loop dec push xchg mov xor incb es clc dec add imul les jno (bad) jge and es fstpt push imul jnp push test rolb xchg lock cltd cmp xor cmpsl inc add mov jno stos aas add inc dec push fistpl lret in add sti mov jmp enter add insb or es jg cmpb mov cmc lock fldl sub lods push pop test mov sbb jae push jns insb cmc imul out and adc incb add or popa dec and mov enter inc adc add mov or ret mov les fcoml xchg sbb mov call jae out repnz sub mov xchg notb xor jo sbb (bad) add std popa mov cmp or push jmp and ret or mov rcrb out into or jmp adc ds dec loopne cmc mov jo cmp hlt or test adc xorl mov sbb dec fs pusha test sbb sahf mov mov xor add sbb mov adc (bad) aaa icebp lcall mov leave sbb stc (bad) and dec in lods sub push sub je adc loope inc iret sbb shll adc imul push mov inc pop push movsb mov xor pop jl xor cmpsl pop std sub inc lock dec sbbb inc cmp popl mov inc fstps test ljmp popa jl lods sub adc mov sbbl jne jbe repnz cli xor sbb and cld sbb cli add cmpsb sti inc fisttpll nop pop adc dec loopne imul add or inc (bad) adc clc adc addr16 repnz or mov xchg cwtl inc into les inc jns xchg cmp add adcl or iret push mov mov dec inc stos lret pop and insb pop mov movsl ljmp in hlt je cli iret or push movsl sub jl xchg call cmp mov clc lock popl sarl jmp pop sub jl les enter (bad) nop inc mov mov and push pop cld (bad) (bad) and mov or lret bound inc mov add inc dec scas mov pop and and and in adc jo mov push pop mov jecxz outsl jo js jp roll or cmp sti mov inc ss mov jge mov cmc adc push pop ret sbb test cwtl stc aad int3 shll nop pop sub test jnp call loop nop adc clc std into xor mov sbb push and mov clc push sbb dec test jnp int3 (bad) test out fnstsw inc out cmp or sbb add pop ret jl xchg clc loope pop in and adc sbb or pop push test mov repnz or or jae xor pop cmp jle cmp popl add arpl add setle pop lahf out stc (bad) dec test lods test inc pop or lret negl and add jnp in sub add (bad) in fnstsw lahf mov pop lret pop sarb inc data16 jne sbb push dec lds sub pop dec sub ljmp mov mov inc add mov xchg dec xchg dec (bad) nop movsl lock ljmp or in mov (bad) jp pop fcompl cmpsb lock or mov je mov jl repz rclb (bad) jo outsb and loop adc addr16 rolb das ds loope xchg dec stos pop sub and (bad) mov sbb clc add inc mov roll loope pop and pusha pop sub (bad) in push into or popa or or es icebp and sbb sbb lods cs mov aas add ljmp icebp lahf cmc cmp jo xor jb adc out jbe or out inc xchg js add popf std pop orl cmp jb fdivrs test (bad) pop add add mov loope mov cmp jnp lea or lea mov stc dec call loop stc sbb lock xor dec out adc and sub std (bad) js push and mov lods add xor dec add adc cs cmp sbbb idivl sbb mov out daa out push jne cmp add jmp iret loope sbbb xchg lods add xorb xorl inc sbb setno add push dec inc jmp mov mov pusha notl xchg add inc and xor (bad) mov xchg adc inc or mov jle (bad) ljmp scas lahf or inc jle pop jmp incl popf inc pop repz dec mov jl xchg xchg pusha cmc icebp cmp mov xor insl mov xlat js pop inc mov add add fidivr adc insl push fadd data16 jb insb push sub (bad) mov pop inc rcrl test sub push popa and xor lcallw rcr and jmp (bad) fiadd xchg int mov xchg and enter mov mov mov add dec xchg mov es cwtl add xchg jmp xchg lods enter xor dec icebp nop pusha jl push mov es mov add popf (bad) sbb cmpsl aas xchg addl fisttpll loopne cmp test and mov xchg out xor icebp aam xchg lods test (bad) and push jle push stos mov push xchg and mov dec lods scas inc add pop pusha cmp xchg add inc jmp and jecxz sub stc pusha hlt std push dec xlat mov aam ja arpl ret adc cmp test pop xchg pop jl sub cmp sub dec jl popa adc and pop shll add addr16 subl idivb insl mov enter es inc sbb movsl jp jmp lock jne out and pop push rol cmc adc pusha mov inc sub push cmp es (bad) popa das fldenv data16 sbb pop test or faddl cmp xchg and mov or mov xchg push stos mov pop push ret daa jo add scas or xchg es das mov xchg insb cltd inc test adc and and adc or inc xor mov push or adc add push cld mov sahf int3 inc xorl push incl (bad) shlb dec cmp sbb es jnp cmpsl mov sbb xor aas imul mov cld sub jo and sbb stos add inc std mov push enter or les idiv movsl dec xor or (bad) test mov hlt ds nop add sub xor jno adc dec push addl or cmp inc sbb pop cld loopne mov jmp repz or mov add inc inc xor xor sub jae nop (bad) pop fdiv (bad) and xchg sbb adc in jl test add mov jg inc adc sar orb stc or xchg out jns ljmp dec cld inc pop cmp inc test mov popa lea cmp and adc xchg push adc (bad) test (bad) cmp jle test lds dec dec popa fs int insl add mov adc insb mov inc inc insb add mov and pop cmp icebp and nop lock les dec and int3 std jno or pop daa pop mov mov je mov dec leave mov pushf xchg movd and loope int or cwtl popa jg mov cmp cld test pop imul inc pop testl mov and inc add (bad) stc or data16 icebp inc inc or mov nop adc enter movsb bound adc int3 sti xchg (bad) stc repnz ss rorb xchg inc cmc lea movsb and in lods sahf scas mov sub push xchg or addr16 fldenv adc adc cmp xor jb test cld and int3 mov shlb adc push xchg inc mov push nop loopne aad test jl lock xor gs cwtl movsl jmp and jl xor ja jo shll dec mov push jmp addl scas insl jb xchg sahf rolb mov or add (bad) repnz in ror inc sbb push inc and into adc push mov adc sbb movsb mov and push inc mov lret mov test jmp adc pop adc push mov xchg subl xchg push mov inc jae push mov pushf sbb sub xchg imul inc mov and repnz push or mov ds or sub or addb repnz js xor push movsl fcoml mov adc add sub sbbb xor add or xchg cs movsb sub std movsb xchg adc cmp jmp adc imul mov icebp bound pop jp je mov subb sub adc sbb or sbbl ljmp jne and add (bad) or pop ds jbe sbb mov (bad) lcall imul fwait and adc pop leave push test sbb inc inc cmp cmp sub dec sbb xor add sbb mov data16 addr16 adc daa inc add lock cwtl push (bad) cwtl test jl cmpb sub mov push aad mulb mov pop pop dec lea mov sub adc mov inc xchg int3 pop jns loopne (bad) pop fcmovnbe adc adc insl sub loopne pop popa (bad) pusha and (bad) xor lds pop mov or inc aam popa sbb (bad) clc cmc pop xchg xor aam inc js and popa inc clc xor popa in jmp add in das inc test sub movsb add subb add mov (bad) sub test sbb add add das (bad) dec dec arpl in in pushf sbb cwtl sub adc out sbb fsubrs add sub sbb push xchg call xchg or lods adc cwtl addl test mov adc jo ror jl xchg cld inc fldl inc adc sti loop andl jo and mov or xchg adc cmp or test loopne jl xor pop xor push daa loope or sub inc pop or jbe in nop je orl pop adc mov lods imul cmp xor lea sahf mov dec inc jo push and mov je sub test cwtl sbb xor call adc mov xchg or into adc cwtl add mov aas addr16 xor push daa pushf js adc cli pusha adc jno add inc aam xchg xor cmp in push pushl iret dec inc mov sbb mov cmp adc sub mov and les (bad) (bad) push push popa mov data16 fstpl call fs pop cmc adc ss mov inc jle or fidivrl mov push mov inc jns inc ljmp fiaddl jno scas mov inc mov cmp inc add push mov es add jo sub sbb and es pop inc and pushf push mov loope enter adc pushl dec or jno fs mov mov in xor sahf scas or aam sbb adc add inc add outsl cmp daa popa fnstsw sbb or ret mov mov cmp xchg into pop add insb cmp popa addr16 mov pop sub imul andb mov xchg (bad) mov in sbb les mov je push inc sub iret lock imul push jo push aam les cs fcoml adc sbb addr16 adc xchg add ljmp in jne rorb loopne mov data16 jmp mov push sbb mov sub cmp sub leave clc inc adc sbb or mov inc arpl inc mov (bad) nop push inc jae std nop adc xchg add mov push clc outsl or adc pop and mov ds pop mov cmc mov jno out clc pushf add dec test popa jns (bad) andb xchg inc movq clc jecxz xor xor jmp sbb mov inc icebp daa mov add insl xor adc and push add mov clc push pop add mov or and jle jg adcl adc cmp xchg jmp pop xchg jns ret add int3 loop pop adc adcb pop mov clc xchg jecxz and push and imul pop push mov subl xchg jbe xor push dec subl les and xchg or ja pusha push pop pop or jns adc push in fsubp pushf mov cld mov mov cwtl xchg add adc cld daa adc popa fldl mov sub andl scas dec es and addr16 xor inc cmp xchg repz mov sub test inc imul dec cmp mov shlb loop add cmp pop mov les and sbb lds data16 xor inc sbb add outsb sub test imul cld aas loop mov lret call cmp xor in push adc ds andl inc push mov (bad) push dec fcoml inc xor lock pusha or pusha adcb gs mov (bad) and pop fisub arpl mov loop ss sub mov push add mov cmp pop push test daa rcrb lock mov mov movsb and mov inc sub pop je aas xchg popa sarb mov jecxz push loopne je nop push mov push pushf cmp and cwtl mov jge lahf and push ds subl addr16 test add int3 (bad) clc shl cmp aaa jle dec adc and and fsubrs orl pop outsb lret mov inc rolb and adc or data16 pop adc cmp rclb mov or adc outsl add mov sahf adc inc mov xchg fadd add or test (bad) insl mov lds inc (bad) cmp cs mov outsl in and inc add lcall (bad) fwait mov rclb and cmpsb clc test push fmuls adc or cmp (bad) mov or mov shrb stc in push jb and popa inc mov lock pop (bad) cld cltd and push and xchg and test in or or adc in and and je mov sbb les cmp insl add sysenter sbb cmp push clc cmpsb fimull dec cmc dec test into add jnp xchg cmp push push pusha inc dec (bad) sub call andl xchg push orb loopne mov or mov loopne inc mov sahf add pushw jl dec int or cltd into daa adc and dec in loop test inc xor fs sub sub rorb xchg mov lahf mov push sbb jmp adc jle addr16 pop lret out sbbl in (bad) cmp add (bad) aaa call push data16 sbb xorb iret mov sbbb and push mov scas xchg ss outsl outsb pushf and sub add mov in mov xor pop pop test mov lock enter mov test pop push push mov xor popa xor call (bad) repz push (bad) leave test adc (bad) sbb arpl das ds and sub sbb xor lds test xchg mov cmp daa in sub mov push test pop dec ds xchg sbb and out in pop (bad) fld xor push jae lds imul in daa and and dec push shlb mov loop fdivrl mov cmp mov sbb fcomi or (bad) mov push or gs in (bad) outsb add jb cmp mov loope es mov mov xchg xor sbb (bad) insl iret pop jbe (bad) aaa fistpll push mov and adc or mov std push mov pop lods sbb daa pushf mov (bad) xchg xor cmp popa push xchg and mov (bad) push mov cltd movsb roll sbb movsl and pop sbb mov jecxz test xor ljmp jl mov jno stos pop insb add mov pop adc (bad) and jmp js cmp lahf inc jl add ret sahf es loope arpl or inc (bad) jne or in xor inc adcb imul test inc push das sub or mov inc daa mov and in add inc ss imul dec sahf add mov adc and pusha hlt fistl insb leave repz jo data16 test cmp push scas cmp sysret loope cwtl test in add fcompl push je push or imul adc push divl (bad) cmc fcmovbe (bad) pop add cli loop mov mov mov jg push daa pop inc rorb icebp push loop and and decl sbb xor das lret mov scas pop fmull pop xchg or add movsl popf loopne jae test addr16 add push cmp push decl add jl jo adc enter add repz mov dec call sbb (bad) xor add in les push sbb xchg pushf test hlt das sbb es dec push mov push mov add add (bad) in fistpl data16 add push das jecxz mov add sti roll sub mov add or jae mov inc or cmp cmc xlat dec enter nop add mov mov sub and arpl or add pop in jo add xor cmp mov enter add inc xchg mov sbb add ds cs int mov pop dec push add push add fild mov push insw imul or inc xchg and push jb sarb mov add lods mov ret xor push and mov negb pop aas imul pop lret dec daa jecxz dec push in cmp inc out inc notl scas inc xor movsb imul add fsubrl call dec mov rcrb dec add and mov jo enter cwtl jle mov (bad) addr16 add jbe push fcom iret pop push nop or xlat add ret add add add daa sub decl sarb xor cmp subb pop pop in pop or in jp dec dec mov push mov add lods or jnp xor or hlt add insl sub dec jne inc dec dec sub and and push cmp testb xor adc mov stos dec jne cmpsl adc addr16 cmp push imul xchg or xchg cwtl mov pop sbb and xchg xchg mov sub add sub xchg ffree mov jecxz movsb sbb fldenv mov sbb aas in mov (bad) clc push lods test fstpl hlt add test popa mov in incb push shll pushf adc ret fcoml in add or sub or loope mov mul or call mov adcb sub out add lcall add or in mov mov aam xor sub xchg jmp mov sbb mov xor add insl pop notl jmp addl xor (bad) xor sub jle push pop inc dec dec int3 in and xchg test shr mov cmovl fs ljmp popl sub add addr16 jb add popf and pop xchg xchg xchg add add add pop decb orb inc add and mov cmpb mov hlt int3 call mov mov push xchg mov jg in inc sub sub and add xlat in and mov (bad) push push ror add insl pop fcoml mov rcrl xor jbe or sub sbb ret clc call add lods ljmp mov xchg add lock push (bad) push and addr16 rol out xchg repnz adc imul jno add out mov cmp int dec add cld ds clc adc add loop or adc push lods jle dec incl sub movsl inc mov cmc rcll or (bad) fld dec cs xor cmp rolb (bad) andb int3 sub aam push jne inc push add rorl outsb notl xor (bad) pop jbe aam ret add inc pusha mov les in mov dec lea lods adc push add test or (bad) jl flds pushf sbb mov cmc fsubs les jo push mov test nop push mov icebp pop dec in add mov inc aas mov and and addr16 mov rorb xor cs jle hlt addr16 lods xor add mov lret mov dec sbb add mov inc add fwait push leave data16 fcmovnb xor sbb in inc adc adcl sbb xchg aam pop jo mov mov sbb and ljmp mov adc add add mov push orl nop pusha cli xchg and jb sbb inc pop and dec stc rolb mov pusha cld adc push pop mov or add (bad) jae insl xchg or sar jmp stc jl dec xchg cmp pop mov movsl nop lods dec xor nop aad mov les or cmp and mov addr16 xor and roll mov mov lea mov and sub add xor movl (bad) test add jmp xchg fnstenv clc and (bad) es nop mov dec shr and push imul out add jg insl inc sub adc out xchg int3 fs int3 sub xor pop adc inc data16 xor stos add xchg and flds bound dec inc xor leave pop fadds adc xchg mov inc push nop push push adc push negl xor and push push mov mull jo cmp mov sbb lea jmp sbb add push mov jl lock add jecxz stos es mov adc jbe jb add adc inc dec xor call sbb sbb enter or push jg jb mov sbb add xchg int3 push addr16 push add mov pop jg push push pusha enter sbb xchg in add xorb cwtl ret mov les xchg or sub pop mov syscall mov add pop std orb rcll shl icebp or lods add stos dec push adc out sbb lret daa pop cmp sarb jecxz jns add pop jmp outsb add push test mov subb aam xorl movsl in rcl adc loope fs (bad) mov fisttpll testb in inc icebp add dec jo or (bad) sub xor leave decl push cmp stc or or addl stos out gs in sbb sub or pop je and sub adc jns xor int3 in push (bad) mov out inc mov add cld enter and xchg int3 outsl mov nop add push movsb cmp adc (bad) clc and nop push mov add xchg lods xchg mov fnsave or adc (bad) jno pop and in ss (bad) cwtl pop xor mov jns mov ds lds mov test push movsl mov incl sti add in xor pop scas inc add jae or xor mov or movsl mov add inc push je call mov jo sbb mov adc jge (bad) lods lock xor pop and in adc fbld pushf rorb movb dec jb add jge cmp mov jnp xchg mov add test pop jl pop adc lock xor add addb insl loopne inc push sbb or fcoms mov daa add js stc imul pop jmp pop pop pop add out dec push roll dec lds adcb rorb (bad) sub bound inc adc es rorl out (bad) cmp sbb fs inc and push dec sub je daa push xchg int3 and lods add loope in push mov pusha into or xlat ja cmp xor and jne or inc ljmp in or push cmp sbb shll or pop lret adc sub sbb stos cmc cli dec sub lods or and xor push cmp add add addb negl sub adc test data16 and mov jae sub jle sub decb xchg mov fstpt jp pop xchg push or out movsb adc add mov subb leave mov notb pusha inc es push push add or cmp dec in or and inc jg cs in add outsl pushf mov add sbb dec cmpsb cmp leave add sbb and or or sarb out mov jae ss pop jecxz popf xor push adc add mov jmp repz sbb in push dec ljmp dec add cmp jecxz mov xchg cmp adc sub add and inc pushf popf sarb faddl fwait repnz ljmp jl sbb mov cmp hlt scas inc rorb add xchg pop add leave aam clc fnstenv or add sbbb add movups push or jg cmp inc adcb inc jle add sub cltd mov mov scas hlt xor add addr16 test int mov sbb cmp pop add ret add push jne arpl std inc add fwait add ds push add loop cmp lock cmp or jl repz popf rcrb test clc leave pop push cmpsl mov pusha lea enter jl or xchg (bad) mov repz adc pusha push jne add push std mov push repnz addl jo popa xor pop cmp sub out les xchg sbb ret mov dec daa mov push mov repz xchg or or jmp add add pop stos sub cmpsb pop mov scas rolb xor cld or std loopne icebp nop scas cmp pop popl xor xlat adc jb dec inc sti lea add jp fwait xlat fisubl sub int3 add inc in ret cmpsb and or lock idivb inc xor cmpsl imul add pop jbe and mov aam pop fldcw add loopne add pop pop jno add adc cmp pusha mov fadds jns mov push add cmp imul or pop insb shrl pop popa xor xor jne js mov add ds fldl in or mov add xchg inc mov cmp jle out repnz and mov outsb ljmpw sbb nop and aam jle add inc mov mov nop mov mov cs sub dec inc dec faddp cli add sbb out loope sbb test mov add lods mov (bad) scas fnop add loope aad and sbb test add add (bad) hlt cmp into mov dec insl add sahf enter pop cmpl cmp loopne (bad) push xchg iret testl add mov ficompl faddl ret sub add lock xchg pop cmp (bad) mov es (bad) sbb fnsave lahf push add inc inc jg loopne ret add xor pop add pop lds xchg or inc mov jno add sbb add cmpsb add mov sbb adcl mov push insb add outsl cmp adc push mov enter mov sbb popa push in add clc test ljmp mov cs cmp dec inc or stc pop test inc mov icebp mov xchg xor push jp ret fldl inc sbb cli dec xlat pop pop and es mov add jge out clc sbb rolb or lret or ja adc jns pop xlat mov mov push jo push xor sti inc dec (bad) les xchg add ss dec hlt inc rclb or mov inc nop ja clc jp data16 fsubrs jg aad daa lock bound out jo adc sub xor (bad) popa pop mov out repnz cmpl (bad) negl into pop xchg fdiv adc addr16 adc shlb mov aad sbb inc push jo lock inc dec push lea sbb pop (bad) xor xchg ltr jne jb (bad) arpl jae add pop pop out mov aad shrb xchg pushl xchg insb (bad) dec xchg sub pushf adc je cwtl adc in les dec jle test add ficom insl xchg inc jecxz add mov aas or aam pusha mov sti rolb sub sarl (bad) jae fiadd addl or sbb jb push xor xor sub add xor add jbe add arpl adc mov jg jp pusha inc daa add lock xor call or adc push cmp lock mov push loope add xchg xchg or hlt js (bad) or leave add ret xor and ljmp roll pop cmp outsl (bad) mov inc add pop aaa mov loopne test stos add fimul test add and mov pop dec sub or inc push sarb add decb iret jae js roll fisubl fdivs in push push int out inc push aam mov mov pusha clc loopne idivb sub push pop stos bound cmp pusha pop loop dec or leave adc in push push xlat xor adc das fidivl cmp add lahf mov shlb add rolb repz add add push mov add arpl or aaa add imul add inc (bad) negb mov cmpl mov aaa inc inc mov and cmp scas mov sti fild add and icebp add jp (bad) shll aas add pop sub insl pop xor mov or ret in add popf test (bad) add std sbb fisub rcrl das mov add inc add fwait pop test addr16 out mov or aam loope push ljmp das popa aas or dec pop bound out cmpsl mov insb pop daa add jo fadds and fidivr dec push pop mov lods cmp arpl mov add xchg xor jl mov cmc add ds sub (bad) sbb ljmp jmp push cmc sbb xchg lds mov inc inc xchg sub xchg add mov sub inc nop stos rolb aam insb add out cmp mov aas jnp out outsl inc pop ss mov and xor add dec or outsl mov or add sarb add (bad) adc adcb xor es jne add aaa cmp popf jno add sahf mov mov dec lds das push ret test add xchg aaa mov popa dec insb adcb add fdivs mov jp add incb add shrl push aad mov arpl jecxz addl push les cmp push fdivp (bad) rorb jg add cmp dec add iret imul in int3 xchg cmpsl mov aaa pop mov mov in loopne add test fs mov popa mov mov xor or stc roll sysexit into jae stos imul (bad) hlt scas add idiv subl adc cmp xchg pop mov and mov int3 lds daa test mov negl cmp pop insb jge jno fwait out pop push push add ja sbb or sbb jno jns add sub mov repnz lret fsubr test add jle and mov inc (bad) mov pop inc test add cmc rolb cmp or ret mov ljmp iret lret and out mov daa jne cs hlt adc jo inc jmp push call jecxz movsl enter popa or add xchg cmc in outsb xorb clc add mov mov sub and mov pop bound cmp xchg jo popa xor xchg call daa add fiaddl sbb add pop mov xchg pop add fnstenv loopne in cmp fs imul xor sbb jp adc push xchg sahf inc aaa dec cmpsb pop xchg pop xor jns in and pop addl mov xchg subl inc orb cltd add add fisubr aad pop movb dec (bad) cld out cmp daa loopne (bad) push ds nop shrb add jo leave jle or add adc arpl jno loopne sub addl or cld leave mov (bad) mov adc fisub or sbb into or dec adc push fidivrl lds push xchg jnp xchg enter xor imul pop add cmp mov imull hlt stos mov mov es lahf mov or fstl lea ds mov bound lar mov mov add jp nop ret add ud1 stc aam jecxz out sub mov (bad) fstps xor roll ja add daa pop fs mov add and push pop fdivrl fwait adc loopne lods int3 arpl lea and pop dec int3 mov jg hlt movsl rclb inc outsb (bad) sub das inc dec cmp add cmp test sub (bad) mov movsb xchg es dec xor xor sbb push daa sub loope mov mov and add shrb test adc gs insb (bad) stc add mov sbb mov es push dec fisubr repnz out sub loopne mov jbe cmpsl inc or jl jmp movsl inc xor add mov and push (bad) pavgb mov jmp or test xchg push dec dec mov adc int3 add les pop jno inc adc xchg es lahf cmpb push mov rcrb jo mov pop push add cwtl add push das push lock or xchg and and inc add lahf ds add std dec popf xor mov sbb call add cltd cld les adc push (bad) add mov fcoml mov loop xorl mov enter xor je xchg pop and call test xor or xchg ds sub adc push sbb add jp fisttpll xor repnz push mov jb (bad) lods push and rcrl jo mov sarb call lods mov das mov cmp and (bad) call adc out and inc mov lret add inc add jg nop xchg push mov dec sbb add cmp movsb and sbb lock xchg aam inc inc lods popa push rcll xor sub bound je add push nop enter shrl jle movl inc add popf push jae les clc cltd cmpsl and mov loope push xor and aad add mov fwait pop (bad) sahf push in or stos xor jo jecxz (bad) push cmp xor inc sbb jns (bad) sbb push mov test jo aas push (bad) lcall add out enter push push ja data16 loopne xchg pusha xchg adc imul loope inc sbbl pop shlb push aas nop mov pop cmpsb dec rcrb leave dec fild mov pop inc pop or enter mov xchg loope js cwtl je xchg push sub or (bad) out leave and nop pop sti and insl loopne,pn push movsb sub pop jmp or fmull xor xchg xchg add and lahf dec (bad) icebp adc push mov cmp aas xor push pop lahf fnstenv pop xor rorl jns pop (bad) sarb sbb in add jge push add (bad) sti (bad) iret sub iret and popl push (bad) xor add lret jne push clc lock xor test inc mov adc add outsb rcrl inc test push pop cmp xchg adc or sahf movsb adcl push dec pushf mov push dec cmp nop pop loope adc fs mov loopne std pop add jp sbbl mov daa mov fldl (bad) es mov xchg insb xor test inc mov in pop call dec and ret add daa cwtl adc pop loopne sahf add leave mov stos shl xchg (bad) test movsb test stc fs inc xchg sub sub in dec and in mov leave pop jne adc stos or hlt loopne push dec xchg add sub out aad mov mov adc cmpsb outsl sub add mov insb sbb push mov add push or dec repnz pop dec pop dec push cmp fwait or gs notb push adc add cwtl or push adc imul jbe sub ds push sbb iret jb into mov sub fdivs fwait int pop xchg adc sub jns pop cltd rorl movsb add push mov pusha pop push mov sbb jmp (bad) mov adc add or adc cwtl add adc cmpsb and (bad) shrb sub lret add shll shr mov push mov aaa inc push push insl jae roll mov loopne xchg jno pop mov add mov push xchg mov jecxz ret clc rcrb cmp stos and js jae pop pop dec int3 dec dec dec les pop mov test fcmovb out adc pop (bad) jo cmp add fldt adcl sbb into js cmp stos loopne dec inc mov and inc cmpb je push xchg movsl mov or iret jo int3 add loope adc clc adc (bad) rolb test test daa loopne outsl (bad) nop pusha insb xlat lds push movsb mov jno push mov es orb scas test xchg insl js daa (bad) push sbb out je (bad) jp daa xor or cmpsb nop repnz mov mov pop push adc int3 inc mov lds loopne popa les xchg pop and xor out xor jp sub scas ljmp insl xchg push adc pop push stos mov andb call mov mov pop orl es and xor imul mov xchg repnz and repz jo movsl das rclb fadds adc and xchg bound lds outsb sahf inc outsl mov dec pop cld mov sbb add xor jns xor add pop ret add aad loopne test (bad) dec and add inc insl inc xchg or pusha jo sarb cmp and mov rolb mov (bad) je push addr16 daa lock pop or xchg fs test jle dec outsl insb add loopne movsb nop mov ja push nop inc or mov xchg inc pop jg pop xbegin push adc dec dec adc mov gs pop jecxz cmp out loopne xchg int3 loopne jns mov pop inc xchg adc (bad) popa fs lcall and dec cld addb inc and nop adc lods call add rcr fsubp jae sarl dec xchg subl mov negb daa fldl mov or xor (bad) mov stos hlt jle je movsb and dec xchg andl inc push cmp pusha mov enter insb sahf in xor add mov int xchg add inc cmp pop data16 std sub fadds mov push add xchg add (bad) and pop jbe js shrl mov adc sub adc push loopne xor xor cmp sbb and lock xchg xor adc mov js pushf add mov sbb sbb jno repz add mov mov les test add pop int jno inc cwtl xor inc in add xchg inc xchg les push lea and mov and add clc ret fs inc mov les pop jp add inc push fs cmpsb movsb cmpb xor push or push rclb inc enter hlt popa add jmp add gs add mov or pop sbb push je jle add adc mov jo fmull fs clc dec fadds jo popl cmp test iret xlat or add xor jo cmpsl add mov dec jb jo mov and jbe stos pusha inc (bad) lock icebp xor aam sti push mov cmp ficomp fild scas xor push mov aas dec mov js,pt add inc lcall jmp add xchg jmp lcall nop and push or add lods fnsave icebp add outsb mov mov loopne mov adc adc xchg and inc pushf loop js sub in cltd fwait pop test dec pop cltd sub outsl jecxz in jns jo mov sub mov jo idivb push push or nop push rolb inc adc mov and fs adc test jno or and inc inc cmp in push push pushf and pop mov pop bound sub xor out sbb insl out push lret leave lcall lret daa mov fistpl js or pusha push aaa mov inc mov sbb sbb or fwait xchg adc mov sub sub daa push les bt push test pop cmp mov xchg cmp pop cmp std mov sbb pop (bad) xor lahf lock pusha xor jle adc xchg push and or mov es and adc sbb pop lods add cld push loopne popa ficompl gs fcom mov icebp jl decb add sarb push loop dec add add or sub add ljmp xor loop cmp pop push sti clc loopne scas and repz lods sub add xchg aad and jge push pop int3 gs (bad) jno fcmovnb pushf sbb mov pusha inc and add in pop pop mov dec sti ret push sbb outsb cmp dec rcrl (bad) loopne aas lret ret cmp lahf fstps xchg sbb pop nop xor lcall fdivl jno pop cmc rorl out cld lods data16 test scas mov sti lock rolb jne aaa mov rorb add imulb pushf gs inc outsb lea sti or inc cmp jp inc mov xchg xor jle cli pusha and mov cmp sub jg jp imulb loopne sub add xor push mov push push xor adc inc mov mov sbb mov addb ja sub adc test in hlt fnop adc fsubr repnz movsb (bad) pop sbb dec pop cmp aaa (bad) mov inc repz stos icebp addr16 ficoml adc push dec push pusha inc cmp rol mov repnz cmc push inc and daa sti xor and popa push xchg dec pusha call xor imul mov cmp test lock rcll xchg leave (bad) gs add sbb aam test push push xchg in mov fcoms push pop inc addps pusha daa adc (bad) cmp xchg jmp clc int3 jb add dec movsb stos push push (bad) andl subl andl xor (bad) xor test mov push repz aad push push push sbb arpl mov push fs jecxz sub pop dec adcb xchg xchg xchg inc call xor dec cwtl or jge mov lret mov push testl in or hlt and or insl scas inc xchg xlat jl jge pop sub sbb or add (bad) fild sbb adc bound xor data16 jns cs insb out add mov dec icebp loopne add mov enter fisub add pop or inc mull loope comiss mov adc jo bound sbb rcrb addl pop inc cwtl shrb add xchg xchg rep (bad) lock dec js cmp push sbb sbb dec push mov pop xchg xchg sbb fcoml test nop clc xor movsl dec fistp mov ds (bad) popa sarb inc xor sbb in es inc dec dec repz jmp jb and push adc mov inc add fadds popa in mov mov pusha aas xchg xor adc add sbb xor les jecxz add bound adc fs jo ret cmp outsl repz rcrb pushf push or xchg xchg sub pop add fnop lock add and test repz xchg sub inc xor or ret add mov in xchg and mov or lock add mov jno mov add push adc mov add cmp nop lods sbb lcall pop mull pop sub push push or add push cmp mov int3 sahf fld mov push movsb mov adc push clc les jne mov and pushf push xor adc adc add sti fild xchg addl test cld outsl xchg mov cwtl jl (bad) sub pop inc fisttp or loop sub cmp icebp addb stos in fistl jne and cwtl nop pop mov sbb dec and pop aas je jo jo call aad jae sbb mov and add push mov repz dec dec xor sub lock rclb and pop xor pop insl clc fstps add cmc add notl test loopne xchg cmp adc adc mov stc out adc xlat xchg into lock dec add jb pop movsb sbb inc pop test mov shll adcl inc push movsb add fadds andl cli inc movsb and fidivrl xchg mov sub mov aas (bad) (bad) je rolb jecxz xchg add sti add mov xchg stos dec orb pop cwtl push add les sti imul fstpl and hlt sub add xchg add push pop mov jae pop outsb add js cmp cmp lock mov cwtl add enter or cmp pop mov add pushf dec aam xchg mov orb iret cld inc add xchg fidivl add inc mov enter jl push (bad) scas nop and or push lds inc test data16 and sub inc adc mov and pop jo faddl aad loope xchg aas sbb push loopne incb xchg mov add subl pop jno jecxz jb repnz in mov fdivs lcall adc mov js or rcll data16 je sub sahf pop and and lock or test (bad) pop sbb add in icebp xor outsl int3 (bad) xlat aad pusha pop sar (bad) xor pop jecxz cmp or sbbb ret pop xchg jge dec add inc out jae add loopne rolb cmp inc inc and sub mov je pusha or push notl xor pop es mov dec arpl js subb clc pushf jo lea add insl pusha dec push mov lock xor fistp mov push adc or add (bad) push iret sti mov pop fdivl sub gs pop addl movsl fnop push lret sarb leave mov add or mov add gs xchg cmp fs and (bad) fucom cmpsb xor int aad std outsb jb sub lret ds mov inc sub (bad) add es or push outsl sbbb sbb orb adcb xchg bound add xor add sti ja sub cmp pop fisubl outsl add pop fsubrs divb and fnstcw xor es add push cmpsb or inc int adc sbb cmp cwtl cwtl fs loop add aam pop xchg pushf pop add push push rep ret dec pushf xlat pusha pop cmp pop mov dec push cmp push pop add lea lcall sub lods push xchg mov fs xchg sub mov aas mov stc inc lods inc loop jmp and push xor push add add mov cmp jg jo test fmul pop dec mov cwtl xor jno xor iret push sub jmp (bad) loopne jns sub cmpsw jns test inc jle and push sub xchg or aaa in sub pop insb sahf mov dec push cmp lret lock inc mov pushf cltd pop je push cmp pusha dec push xchg push and adc adc and psubusb int3 stos mov jno lret add addr16 mov sub dec shlb je pop test pop adc inc stc or (bad) or xor je mov call stos fidivl lds lock movsb mov push xchg dec inc les jns lods pusha dec adc mov dec cmp cs xor push pop inc lods (bad) xor scas xchg or jns cmp mov xor cld add cmp mov jb and xor sbb cmp xor cmpsl mov fstps cmpl imull ret scas clc add pop cli rorl sub jg fisttpl jle add fisubl sub out or sub adc test call leave add push pop and xchg dec clc and popa cs test out inc pusha xchg stos mov mov sub fsubrl loopne sbb xchg sbb xchg call js mov int3 sbb sarl xchg cmp push int or adc aaa and data16 rclb mov dec fs daa xchg mov and movsl (bad) and jmp out add mov gs loopne lret mov sub addl movsb or xchg mov test push xchg sbb dec pop push cmp xchg mov cmp and xor gs imul cmpsl imul and das inc mov jnp jle add mov jle push bound pushf gs leave inc inc mov imul or clc mov xor pop loopne dec loopne add popa mov xchg dec mov insb adc push je push sbb cmpsl out loope sub add mov dec insb addb push ss add inc cmp add shrl adc pop add (bad) push sti icebp cmp and popl xchg adc pop outsb add (bad) js mov rcr cs je cs ljmp shlb test jo or add call sub insl ret aaa sarl je pop xchg incb mov push nopl pushf xor or fld inc pusha mov movsl adcb test xchg sbb pop cmp daa and stos aas dec lea inc mov imul cmp pop pop es sbb or sub cltd fs push jo sub aam mov pop pop in push (bad) mov imul scas push adc inc xchg add xchg push in fldl nop mov mov mov test mov ffreep mov pop imul mov leave adc and sahf andb arpl pusha enter cwtl (bad) aas mov cld xchg adc mul mov add inc cld notl test fcoml or repz andb add sbb jp mov arpl sub jg (bad) add pop sbb sub pusha mov add xor push mov outsl (bad) xor cmp sbb test xchg pop notl pop dec lret fs mov pop and test cmp lea xchg hlt enter add (bad) gs icebp pop inc popa sbbb int3 push loop call add mov hlt cmp loopne invd rclb mov push inc jae jle pop dec and xchg incb xchg inc cmp cwtl les push imul mov sbb std and lds push cmc or ds sbb imul cmp mov lret sbb pop out das add adc jne insb jns stc sbb idivl add or jo and and popf rcl cmp mov mov mov dec dec (bad) sbb jecxz sbb mov inc out ja es fwait mov sbb or popf out add push nop push add xchg pop rolb (bad) jae leave pop nop add lret cmp adc iret int3 pusha inc push ja (bad) or ret sbb adc rclb push xor xchg jge sub and add add cmp xchg out or and inc sub inc fldenv push xor fwait daa in sbb xchg jo notl push or ds pop bound xor test push sub sbb int roll mov sub dec sbb cmpl xlat xor mov add pop dec mov jne cmp das xor pop inc pop mov jl and push xchg adc cmp push das sbb cwtl mov out pop xor mov imul imul jg add popa push aad mov hlt mov pop in cmp or rcrb aad hlt jp je or adc xor add dec js jecxz xor xchg add lea cmp add cltd mov les xor out xchg cmp add jecxz ret add (bad) imul cli int3 mov pop and adc inc fistpll int3 add sbb push push lods add or scas fwait es outsl cli xchg add into dec rorl and mov in inc cwtl adcb sahf aaa negl add or inc orb les cmpsb or jge sub pop push popa xchg jmp lahf cmp ficoml cwtl mov cmpb sub out or pop jp mov stos aam mov push jbe sbb into aad mov add dec pop xchg pop adc xchg add add add adc aam push dec or lea or roll rcrb in xor mov add sbb lea or mov jo sub fcoml mov out push pushf nop and lock mov and cli xor std jno sbb push jnp dec cmpl add push loopne ss sub inc and mov push xchg mov push btr dec pop in sbb aam mov icebp push mov or add jne pop mov hlt pop pop cmpsl xchg dec sub shrb mov xchg inc push clc add jl or out mov mov mov mul add adc and negb hlt std add pop stos int3 cs adc sbb out inc mov add jle mov add int push rol arpl pop dec aam and mov mov mov push mov mov or and inc pusha rorb inc dec pop bound push add and xchg mov pop loopne cmc addr16 mov push pop sub add mov xchg push or cmc sbb test in jp sbb xchg and in sub test adc leave add mov es add jno hlt movsb fsubrs cld xor rolb sbb subl icebp fdivrs cmp cli test sti stc mov or xchg pop adc inc add mov insl ds shlb and cmpb sub frstor push or in adc movsb inc ret pusha movsb or add cmp repnz push add add aaa fstps lahf popa mov addl pop aad xchg lret cs rcrb cmp push add adc dec jb sbb push mov mov lret pop ror mov add inc loop sub dec aas pop nop fcmovbe test std add insl push dec xchg and jae mov js dec add xor call hlt push nop int3 jg add ss rol clc add stc sbb mov jnp and cmp or mov xor sub aad lret jae cli loopne pop sub add mov add dec cwtl adc mov out ljmp fdiv inc mov aad rolb (bad) fwait shlb add mov mov (bad) add cli add sbb gs and mov int test dec xchg repnz push outsb add lock cltd (bad) xor pop inc les dec jmp add (bad) or leave and mov cmpsl inc dec mov xor std insb flds call out addb popa aad or es push (bad) adc dec cld sub sbb mov rorb and or pop sub pop mov sahf (bad) mov push scas add pop xchg or movsb and mov mov sarb addb mov gs test jmp rolb std les and je push jge add pop (bad) jno sub push cmp rcrb mov fsubs lret push stc push (bad) dec in enter js sbb push mov mov mov or xor js imull mov and loopne rorb pop out ret in (bad) divb sbb into or dec test mov pop cmp add jb jge loope and je in (bad) roll jg inc cmp dec rorb xchg mov jb add inc outsl and jno jle xchg loop cli int add mov mov dec loope or cmc add test add mov and push fidiv push or add (bad) int adc jno or pop es test xor add gs ret or popf aaa and add push dec nop push (bad) xor cmc jg add ljmp out xor hlt stos jecxz int3 aaa inc fcoms inc notl es lods cmp test mov dec or cltd jecxz lcall leave pop cwtl add mov fbstp xchg adc xchg leave or (bad) mov sub int jbe add mov sbb push xchg push add cli in mov push push mov xor nopl arpl mov popa cmc xlat jge cmp lahf test mov pop sarb mov inc add aam xchg push add mov add rolb jno cmc adc pop shrb or push mov dec sbb push iret ret add sub lock jl inc xchg cmp js mov (bad) pusha inc adc sbb add loopne out aaa lcall loope pushf shl cmp pop jb maskmovq negl pop fnstsw roll push loopne sbb jg movsb mov and mov xchg mov push in int3 xor mov arpl pop sub inc mov sbb push push test mov dec aaa sbb mov in xor lock nop add scas adc push xor pop sub pop push cmp popaw inc mov cmp iret cltd mov sbb daa fcmovnu sub add jns sbb mov mov (bad) lock sbb in add (bad) xor xor cmc inc in dec es ljmp add sub adc mov dec dec pop lds cmpsb rclb jl cli rolb sub jge add xchg xchg dec and loop push lods fistp movsl andl add leave int3 sti xor add dec shl call jbe add mov add enter movsl push push sti mov bndldx xor ja cmpb push ret xor pop mov mov cwtl hlt pop aam sub out std fist mov bound mov add jae dec int3 ret hlt mov xorl mov mov fs pushf cmp or ret fisttp inc je inc jl add divl add rcr and dec add sub aam nop loopne adc clc leave add and pop sti dec and and bound add mov jb cmc jne es push flds shrb sarb sarb dec cmp data16 andl lret xchg push test inc jo inc cmpsl add cmp out nop rcll pop cmp stos add out fmulp lret lock cmp lods addb mov aas popf es (bad) add stc pusha add ss pop dec sbb add xor mov ss push add repz arpl divl add inc shlb fldl2t jge and nopl mov or ljmp test out insb out mov jnp scas sub pop testb pop or xor and and sub push add ret xor clc movsb lcall aam pop add add inc push stc push mov pusha (bad) mov daa mov js add xchg ss and aad dec lret nop pop mov enter mov mov lahf cmp stos pop add fucom jb rcl (bad) enter add (bad) mov xor mov add fdivrs jbe loopne xchg add loopne jb mov faddl ss pusha mov jecxz arpl les sbb mov push dec rcr popa cmc inc jne pop fadds aaa dec sub cltd mov push mov adc ljmp push sub gs pop mov xor mov cmp pop jge fnop cwtl bnd test xchg ret je add loop mov movsb lret mov fnstcw aad pushf addr16 push inc pop pop lea and add stc push hlt aad pop addr16 cmp loopne int3 je add (bad) pop and rcr adc rolb sbb ret mov push pusha jcxz repz sbb subl lret aam sarl xor and popf xorb ss subps adc sbb js popf mov adc mov jge or or push inc pop sbb orl add insb rolb or mov inc jl mov push add and xchg jp pop int3 out in and int movsb cmp out ljmp popf add cmp and je negb mov hlt fwait arpl and push out addr16 loopne (bad) jo add test xchg and push add or out dec add (bad) lods loop insl xchg sbb subb inc xchg in add add call adc and imul std or mov add pop (bad) xchg sub out cmp cwtl push int3 jecxz jno jg faddl add and js adc mov les pusha push dec iret add in or nop inc jmp lods pop (bad) push hlt push add divb icebp or push jnp or ja lds mov mov (bad) nop movsl push xchg mov mov and add aaa and enter add mov xchg xor cwtl cmc push push stos aas add ljmp mov mov add test jno xchg dec je jne lret mov pop xchg push imulb subb mov into xor xlat je and call push outsb in xchg je push add stos dec xchg cld dec add ret inc xchg mov pop xchg sbbl dec movb (bad) push std add sbb and xor (bad) pop sub loop je push push enter rorb pusha in lea je add pushf fcomp lcall inc int add xor inc lea dec clc push sub push mov xor aaa cmp out sbb xchg add iret pop mov mov andb (bad) pop lret pop mov test and mov jo or and pushf mov mov adc fwait sub ret sbb aas les inc jecxz mov mov subw dec cmpl inc cld xor add and push mov fdivrs addl mov or add xlat es fcoms in add sub mov add outsb loopne lods test test (bad) and aad lahf mov add ret inc push sbb cmc lcall sbb cmp clc adc mov xchg xor xchg cmp enter add roll jne and negl orb lds inc outsl movsb testb pusha and xor mov aaa mov mov or bound les inc inc cmc cmp jge sub push add adc jns mov jno ds mov (bad) scas add push sti push add push inc sub and cmp xor mov adc xor stc pop cmpsl push dec out add aam in jle xor dec mov flds mov ljmp xchg (bad) and repnz or jge,pt xor adc xor pop mov nopl nop addb sbbl dec cmp push call fildll loopne inc add mov hlt push psllw mov mov add mov xor fs inc mov cmp rorl xor out (bad) mov or cmpsl fistl aas xor stos jle add enter cmp (bad) add in pop add mov addr16 add dec push inc mov in dec cwtl mov notl mov sbb out pop add std jb (bad) jne adc lret push loopne pop in xor and inc push pop cmp jnp xchg rolb (bad) mov lods mov stc movsl or sub loopne cmpsl dec outsb call ret iret inc xchg jg adc add pop pusha scas pop lahf or add fldt sbb xchg icebp cmp xor or iret inc pusha or pusha leave xlat icebp add cmp inc and roll iret movsb pusha xor push mov dec and test mov or lahf push (bad) rcrl fdivr cmp test xchg orl jecxz ja fcmovne mov pop rcrb jmp add push mov jle xor insb sub imul int mov sub lret jg add xlat fiaddl inc lods mov add imul (bad) add test in sbb popa inc stc addr16 xor out cmpsl mov adc mov xor pushf jne repnz or xchg scas mov lea arpl lret push sbb mov mul push into fildll xor imul mov push jb ljmp pop movsb xor repnz pop imul add daa mov xchg pop (bad) jae push sbb xorb fwait mov popf mov adc jecxz push (bad) (bad) lock out aas push ja insl adc sub sti xor cmp adc cmp xchg loope adc addl cld cli mov hlt mov enter pop in rcrl xchg mov or aas push push add sbb add shlb cmp adc sub mov inc mov pop push insl popf pop (bad) push lock mov test sub ljmp xor mov nop popa in dec add notb repz add (bad) mov pop push pop xor dec or outsl imul pop cmp and pop jge lahf sbb aas mov add in std fdiv xor mov add dec add imul fwait jns xchg xor scas pop cmp lahf push add fadds mov jle sub fstl push push mov and add gs mov mov add jp rolb or dec sbb lret movsb xchg xlat nop mov xchg add jbe cltd mov pusha cmp adcb icebp out sub push xchg jbe sbb rclb int3 inc in push add pop add lcall popf loopne sub add pop repz inc dec pusha inc push sub rcrb andb mov cmpsb xchg data16 adc shrb xchg or daa push movsl push jb add pop mov and sbb (bad) mov pop mov xchg add mov push pop (bad) negb jle adc mov dec icebp xor fmuls add (bad) pop add test cwtl dec mov add sbb add out arpl adc push add sub orb xor push out add sbb loop cmp pop cmpxchg sub cmp xchg pusha jns jmp jb repz add fwait add ss cmp insb sub pushf sbb icebp in cmp and jp push popf mov dec andb adcb loope xchg or inc xor add cmp xchg fimull aaa lock push xchg ss xchg or add in roll mov rcrb adc fiadd mov vsubps int3 rolb fisubrl or jecxz sub out add es mov add jo push test das pop cmp sar sbb add mov add mov jb subl repnz lahf mov add add insb cmp bound push and add imul xchg insl dec push ja push lcall ror (bad) je pop jb js fcomps jmp adc lea fwait push xor push (bad) xlat xchg lock je cli mov addl jns add (bad) call hlt flds sbb lea add movsl lock sbb dec ja sub cltd test loopne adc jecxz imul lahf movsl xchg and add mov outsl loop call loopne xchg push imul bound movsb mov ja jbe cmpsb lea jecxz adc fs cld lods paddsw adc das mov stos movb cmp and add jnp jg (bad) push mov imul outsl and lds jle add arpl xor aas jns add icebp shlb test add imul imul stos xor das and xorl add xor and adc inc in jno aaa bound sti push pop insb out mov or test inc cmc fsubrs jae push addl sub dec fbld xchg xchg addb cmp sub sbb movsb cli imul push xchg repz popf mov into inc pop or inc jl cwtl insl data16 push inc cmp sarb push pop popa fimul nopl stc fldl cltd adc test add repz fs addb (bad) pop mov mov lods out and test mov mov stc dec int3 jnp cmp add jecxz and (bad) aam pop loop mov inc and nop add jecxz sub xor repnz insl or out sbb add es add sarl into add mov add push mov and jecxz or push std sub mov (bad) mov xor add cmc ds pop add in mov popf add faddp mov sub lcall push add pop sti pop nop and jmp add pushf adc push inc adc idivb cli lock into lods bound mov add stos insl sub add or adc xor adc cwtl addb (bad) pushf add push cmp outsl mov lock push shll inc inc xor xor mov inc enter js add icebp cs enter rcrb mov jmp gs add xlat pusha mov loop mov and or cmp xor aad rolb and scas enter nop or mov pop loopne lcall or int3 stos add mov mov inc es out mov sbbb in and les iret jo mov loope add or mov add and xor and loope add (bad) adc sarb add pop fcomps adc pusha cmpsl add (bad) and pop fisubr jno enter adc pop mov mov pusha push sti es pop or test sub rolb mov rcrl insl (bad) or mov nop loopne push xchg fcoml mov aas pop jecxz repnz fidiv popa roll fistp mov jne (bad) fnstsw (bad) jnp ret data16 add add xchg cmpsl insl pop mov add lea sbb mov push sbb xchg mov xor and sub pop sub in push mov mov frstor jbe jnp add jg jecxz jge add cwtl xor mov popl cmp or mov push in das insl testb push test in xor xchg mov pop mov or add pop repnz xor loopne xchg nop push add shrb divl or mov int3 movlps add add xor clc pop or jbe jb adc (bad) fmull sarb add jl pop aam dec lds hlt les loopne jmp mov dec add punpcklwd in push mov loopne or and cmp repz aas pusha ja addb dec data16 sbb movsb (bad) xchg (bad) and nop or add inc and orb jns add add mov add mov add (bad) in (bad) lret mov add daa inc xchg pushf adc pop jbe add dec lahf clc mov aad insb out cmp sub dec fcmovbe xchg pop cmp add pop fs sub scas les movsb sahf xchg push outsl cmp pusha xor arpl fiaddl add es shrb or or xor push scas adc out mov add pop push sbb setnp push pop arpl loope add xchg lods and mov cmp in pop fmuls jl pusha push int3 sbb add push mov sub dec sbbl add bound add adc mov adc and sbb add xchg jle add pop push push insl cmp hlt pop (bad) int sub into xchg pop xchg aam add add push inc (bad) pop pop cmp js xchg fwait jle (bad) js add push pop pop scas dec (bad) testl (bad) push mov shll push mov jne call (bad) mov faddl add sbb and or dec mov xorl outsb shr popf pusha addr16 jg pusha or adc movl cmp imul (bad) cli in mov cld imul add push movsl add adc mov les fistpll inc scas cs add and icebp (bad) push rclb faddl adc or mov cli mov pushf fildl loop out xor xchg jb push xchg cmpsl call sarl (bad) mov mov mov aas jge add add mov loope push (bad) jno rolb dec (bad) jb mov in fs aas xchg je add sub idivl jae movsb ffree add and push inc add ja enter movsb add add in jo or adc jo inc dec cwtl push test sbb icebp add fsubr pop (bad) push adc adc int3 push (bad) mov lods jno setb push fiaddl inc sbb xor sbb psubq loop push cmp push iret push negl outsl mov lods dec shlb leave add jbe cmpsb addr16 cmpps cmp imul adc outsb dec jp or rclb add add addr16 ss push pop add sarl test call xchg out cltd nop mov inc cwtl push xor add int add sahf cmc inc sbb mov pushl (bad) mov push mov inc call (bad) pop insb (bad) (bad) je in xlat lods dec cld testb lock mov push xor addb fisubl adc js add sub add lret push and add popf (bad) addr16 mov adc sbb dec mov popa out ds cmpsb ss rcl dec add lret insb stos cmp and fs inc and xor pusha pushl jg sub mov mov orb int add push out inc xchg arpl (bad) scas sub dec add cwtl icebp loop adc jmp pop mov into dec push add mov push add inc incb sbb push test add imul out pusha fmul jne push hlt push rol data16 and clc sub add mov adc or push testb mov mov add aaa pusha (bad) mov and fldl je jnp cmp stc dec sbb into mov and aam push stos push or mov add scas sbb imul mov and mov inc loopne lds cs cwtl add jl in sahf add dec jbe add loopne pop add lods adc sbb (bad) popl ret add sub pop xchg jl clc outsb out or jb nop pop add or lods test lret mov int3 fsubs sub (bad) lock (bad) sbb cmp in dec xchg pusha fdivs jp cmp sub sbb adc or xchg cld ljmp lret sbb (bad) (bad) cwtl add in out sub add fwait pop adc es add jmp aaa inc test sahf mov adc or lock sarb addr16 sub add mov cmp test subb add xchg cmc sbb pop aas scas rorb ja inc cmp push xchg fisubr les and push insl inc mov add push cld adc xchg xor add mov lahf jnp jp cmp cmpsb add cmp ja in push aas xchg mov out pop mov cmp fidiv add std and push fsubrl mov loop aad sbb xor dec lock popf out cmpps lods add negb adc or jno mov dec and jae scas add pushf loope call xor push xchg pop push dec and test or mov add iret pop cmp dec (bad) push rolb push cmp sbb pop mov rorl add xor insb shr add (bad) (bad) mov mov sbb push pop sbb pop and push cmpsb mov add jp jg ss adc and scas cmpsl in mov (bad) jne jmp icebp int3 or mov mov sbb jmp mov pusha add or pop sub shrb cltd inc insl (bad) add push xchg cwtl gs pop int3 mov sbb lahf add pop hlt jno mov stos mov fsubl out pop add or je add cli pop mov loope rorl pusha sub add cmp test lock imul push xchg xor push or flds add cs dec mov mov sbb mov sbb xchg or arpl jl pusha cmpsl sahf outsl cmpsb out adc jbe mov cld push fcompl inc adc mov mov pop add scas dec stos popf es pop fmuls inc aas inc (bad) or outsl push or aad lds add cli adc sbb mov loopne pop je fild adc mov adc add mov sub push adc js add push inc enter aam inc add aam pop insb mov icebp call add pop outsb and andl movsb jg or xchg outsb enter test jp cwtl fadds int or add mov iret add xchg out fwait mov adc push aas gs mov aaa xor rolb xchg pop cmp inc and pop mov mov push movsl je sub add out hlt orb ss push mov pop jo ret fstps inc push pop adc mov push sub fs lods rcrb mov es stc dec sbb aam xor add mov mov dec sub or dec or add push leave push mov add jecxz xchg in in dec or adc jb mov dec dec xchg add or mov into ja xchg pusha adc lock and fsubl les and pandn test lahf popa sbb mov mov jecxz fnop xor gs cld pop inc mov pop jo add enter add jg ja aas xor push pop sbb sub mov fimull es lock add fisttpl pop mov pop dec cmp cmpb fiaddl cltd inc or or enter xor xor cs js sub sub lock aad ficom cmp sub rclb pusha pop jecxz cmpsl loopne (bad) stc js and decb (bad) addl data16 sarb pop sub lcall adc clc add jnp mov xchg mov push (bad) xchg add fmul pop xchg cltd pop in add or pusha pushf lock add inc and jle mov (bad) imul jno test inc fmul (bad) jp cwtl cmp add mov scas jle add xchg lea addl dec push imul xchg xor sbb int3 add fistpll mov test je in mov mov test and outsl movsl inc inc add mov (bad) ljmp hlt pop pop in into testl lea daa popa iret adc add lcall mov or jle add mov fwait sarb inc mov xor out add scas mov xlat xchg dec push xchg add call hlt add jno inc sbbl dec xlat adc dec cmpsl sub js dec add mov int3 xor sahf jne add sub ja adc call lock cld add int (bad) movsb add dec repnz inc loopne mov add mov add mov pop jecxz sub mov test into add out jae arpl stos xor inc add mov sbb test lret stc dec pop aaa add leave outsb xchg sub lock icebp pop mov inc inc lret dec iret add push and push xchg add in cwtl lret jle pop daa xor add cmp push lahf add adc jo sahf ja push in inc xor pop inc mov push and lret pop mov or lret bnd sub enter jp into mov xchg pop add (bad) fisubrl push lcall dec add jge sti shr (bad) fisttpll push adc stos roll (bad) or icebp faddl cmpsb int3 jge dec adc cmp orb push sub mov adc std sarl and lahf cmp xchg outsb (bad) or sbb or clc xchg push mov repnz sbb add fwait or jnp leave mov scas cmp mov jl daa xor sbb outsl mov dec adc inc jl inc fbstp add lgdtl imul or pusha dec test xchg rol xlat cmp add in xchg bound inc push or leave and adc xchg push add push cmc add xchg cmpsb mov aaa call mov rorb popa (bad) jmp lret and add mov add and insl sahf or fcoml adc es pop insb add xchg pop jl stc ljmp rorb add loopne imul iret ja sub jbe shrb xchg pop pop xor adc out inc mov add and data16 or test (bad) add sahf stc stos jne ljmp fld1 loop xchg sub xor push add ljmp adc add push xlat pop inc add (bad) jle xorl loopne aas dec addl jmp push or xor sahf (bad) ds icebp mov call aad rcrb adc cmp lahf ljmp or insb (bad) jp ds je dec inc nop or psrlw pushf cmp push cwtl adc das inc inc pop imul shlb loopne loope in pop sarb push inc cltd pop je or pop jle aam inc cmp mull loop xchg fdivrs imul in es loopne inc sbb scas jge jb mov or sbb loopne xchg add test loopne xor xor sbb add xchg xlat jecxz and push out bnd arpl cmp dec xchg rclb add or sub subb dec push mov aas (bad) rclb fidiv sub jb hlt xor push mov mov adc xchg mov jmp add in insl es cltd fadd inc imul outsb xchg xchg scas add fisttpll add imul xor sbb in mov add pop mov pop jne hlt inc push add inc cmc into iret inc (bad) lock das sbb mov dec mov push iret pop dec sub add loop nop mov pop aad test inc repz sub ljmp xor incl or inc jle gs insb sarb popa jmp movsb repz orl clc fidivr add push insl or xchg pop adc insb mov int call idivl test popf sub ljmp push xchg into in push mov add mov enter xlat mov mov shrb mov sub and xlat or add push aad add sbb and aaa ss jl add popf xchg (bad) test scas xchg add mov mov arpl cmp xchg fldl sbb dec pop or cs cmp aam imul cmc add out push out jmp inc dec pop in xchg cmp adc jle push and nop cmp xor fisttpl mov loope orb jle arpl adc lcall pusha sarb pusha pop mov fcoms mov cltd inc les ret jmp pop and pop out imul inc mov fcompl ds pusha sar add or cmc loopne mov mov cld mov push adc fnsave cmp les cmp add jnp pusha fdivp sti and mov shrb mov adc insb dec add (bad) adc in lret xor xchg pop (bad) jg xchg add push add mov out and js add pop add negb ficoml aam pop adc in pop jo jo int dec fwait add repz cld fmull add les inc sbb sub fbstp add movsl adc out das (bad) test lock add lds aaa jge xchg cmp sahf cwtl fnstenv lods sbb xadd mov stos mov mov jne push adc or pop xchg test insl mov into insb add fwait push cld pop hlt (bad) mov cmp xchg adc inc in mov dec js jo arpl cmp movsl jmp (bad) ja add (bad) in sub jecxz pop icebp lcall lods add lock shrl sarl scas cmp pop iret movsl add popa dec cs pusha pop push add dec inc cmpsl ljmp es sbb movsl in jo mov out jno and inc push pop and aas incb data16 xchg mov fmull sbbl daa in test scas cmp xchg xor push js jle pop cld ret push mov loope mov mov cli add lahf jb dec adc repz js bound push or sbb mov cmpb cwtl pusha and sbb and xchg mov xor adc adc mov adc or arpl into inc loopne bound mov rorl pop outsb sub add or addb (bad) sub ds pop add test sahf sub movsb popa add or je mov daa imull jle jg xor (bad) cld inc (bad) push sahf add mov fldcw sbb mov dec add and (bad) dec pop jns push or mov mov popa shlb sbb into popf out inc cmp pushf (bad) xchg dec in insb adc scas test add shlb or pop ds add dec sub ja aas stos mov inc cmp outsl add adc in outsl test neg xchg mov adc inc push dec xor adc add jle out push movsb shl (bad) es add or add iret push mov popa lea push sbb inc idiv inc idivb ja mov sbb jns ss and fdivrl or mov lds leave stos add movsl nop mov cli stc mov push jne fs xor cmpb stc cmpsl xor sbb loopne std xchg jg enter add sbb (bad) ja mov sub out (bad) mov jp orl push add inc push test cmp mov jno daa inc ds pcmpeqd in loopne pop test jle sub iret push (bad) call sbb ret sbb add mov jmp mov dec add loopne sbb leave add mov in mov dec loopne xacquire cmp cs adc push mov fisubrl jl add mov es inc in pushf adc add sahf inc xchg aas sbb stos or mov xor shrb bound mov push imul lock (bad) or movb mov insb rcr jae jb add das inc jns int3 lahf inc add dec enter or xor push inc jp (bad) xor inc mov adc mov sub mov add sbb jmp int dec sub sbb push add icebp jb add jb inc push cmp adc mov lods or add inc jecxz push and mov daa imull icebp push push addr16 sbbb jg mov popf push fs addb dec add pusha cwtl fwait dec out loop bound aaa mov daa add dec push stc icebp js jb loopne mov pop mov sub mov pop push es test cld cmc clc add push sub cmp cmpsb lahf xchg mov push mov inc test add xchg outsb mov add xor fisubrl mov jbe dec movsl add pop rcll mov rclb push jmp cmpb and dec cwtl dec adc mov clc int3 sbb jmp aas and pop adc add inc lcall mov mov sbb push mov lock sarb (bad) or add mov mov xor cmpsl and jecxz pop sbb jp (bad) add fnop push outsl sbb sbb jae lret les movsb stos insl int3 or and lret sbb in aam bound push loope js pop bnd xchg hlt push lods mov sbb dec ljmp idivb push adc or addr16 lock in xor lea inc jb add adc sarb adc add dec add pushf push les aas jns ret mov jmp and or pop sbb or jmp sbb aaa xor aad mov lods dec jne add mov add xchg mov test orb push loope xor add cmp jge cmp push add cmp fstps adc jmp rolb lahf xchg push add and add dec sarb arpl add loopne stos add add or stos gs cmp xor sub les mov out sbb or pop daa jnp xchg push xabort (bad) sub lods cmp adc xor outsl jns jbe pop sbb inc xchg inc daa xchg sub sti dec sbb in sub sub or and ret movsl and sub icebp xchg xor add js fwait sbb inc ret aaa lds push (bad) or jne cmp sub jp pop mov addl push and jp mov sub cltd cwtl push xchg xor mov or cltd and lods add out jge (bad) rolb sbb mov in jne sbb push cld pushf les cwtl jae pop push lock test and addb cmpsb xor leave mov test into orb xorl stos inc cmpl jl push sbb cld jo sahf lock mov stc xor daa insl add ljmp popa je sbb adc out mov (bad) lahf rorb iret push add add push test cmc jno cmpsl mov adc inc int scas sub (bad) adc stc iret stos js sub aaa dec pop (bad) jle (bad) fldenv xorl lods mov (bad) call adc arpl hlt repz call sbb xorl int icebp cmp jno add mov arpl xchg test add dec sar jne xor repnz mov xchg mov dec pop sub xor jg cwtl push int3 nop jne test sub or push in mov int mov (bad) xor pop icebp adc xorb cwtl mov or pop lock sbb mov sbb cmp and imul (bad) mov ret add in in mov xchg cmp push lds out mov mov std icebp sub and jno decl lcall movsb add push loop mov sbb xlat add inc scas jecxz sti sub shr pop cwtl pushf subl into jge sbb mov pop loopne ss pushf cmp and mov (bad) or pop push (bad) lret (bad) or std stos push cmpsb add xchg push aad shrb mov aaa stos int3 pusha mov in add dec mov pop pushf ret decl scas add dec in dec or nop adc and add jecxz shrl jb xor fsubrs adc cmpsl lcall adcb inc mov push push sahf push arpl mov xchg dec in add andb add xor insb cmp fldt hlt out jecxz daa lret outsb inc (bad) jo inc add jmp add xchg or add lret pop and inc scas mov iret push sbb adc or pop cld insb add stc mov dec jae pop dec ja jno lock adc rolb mov cmp addl add sub xor das xchg push push mov loope icebp add adc adc loopne push mov pop jb,pn add add mov xchg or add or mov add lea in dec popa and mov loopne jle fisubr push fs fisttpll dec sbb and inc mov add add cmp mov les lcall mov mov add popf adc mov lock add mov cmpb fcom sub imul pop lods adc sub bswap pop addr16 into cmp add mov mov rolb xchg in and and pop mulb rol scas mov or jle xchg test add stos or push enter (bad) pop pushf jge pop imul add retw jmp inc inc add cmc xchg ss jg add push sbb hlt add leave jbe call cld mov add loop inc sbb (bad) mov add cmp clc lret add inc jge out dec lods mov jne in adc pushf mov (bad) xchg pop xchg add and add mov rcrl cmp jo movsb pop jecxz pop push cmp rorl mov cmp push add ja lock cmpsb inc inc test xor lahf mov xor call sarb imul je pop and push das inc jns loop pop push aaa and add aad or addb xor inc mov dec sub push dec subb dec and inc xchg jge xchg adc loopne xor js cwtl divb cmc add inc push (bad) mov popa cmpl cli iret sub push ss je add fwait mov add clc add pop (bad) push xchg call xor and inc cmp mov cld dec stos xchg (bad) mov in fwait mov jns scas dec out sbb cld sbb loope inc out cwtl inc aaa clc jbe add out jge cltd add and pop cltd xchg (bad) push mov xor jmp js addr16 jb rolb cld daa or jp cwtl (bad) jne dec (bad) pop fadds je lea bound pop adc xchg lcall mov push mov and adc xor stos js jge jbe aas mov push loope notl loopne clc push rcrb add push mov pop insl outsl adc mov add popa je add and or or add xor lret and push sub leave and add stos cmp push cwtl inc subl aas pop add mov and cmp es xchg add xor int3 xchg add adc movsb mov jo das sti push pop sbb or je repnz lcall xor inc movsb xchg fmull mov cs mov pop lods int3 inc (bad) out sub cmove nop sbb add daa adc add in pop xor dec and add inc jmp push mov or mov push xchg add sbb push sbb add std xor mov mov imul xor mov and movl fcmovu or cli cmp cmp add lret jns add idivb cmp test call daa adc inc mov shrl stos movsb fadd jne or adc fildl outsb aas in lahf clc out aam mov pop jecxz idivb loopne std cmp cmpsb test add mov out nop inc push mov jge push mov mov pop sub (bad) jnp dec cmp jnp fldt dec xlat fmull xchg add rcl es lcall add (bad) jno inc mov mov inc test xlat stos aam movsb push daa inc lock sbb xchg xchg add mov cmp call flds xor fisub sbb add pop pop ret insb mov inc pop cmpl orb stos or or mov cmp jbe inc std lret mov push fs or stos or movsl add push add mov cmp sbb cld lock add cltd scas (bad) jecxz sti sbb lret mov inc jnp and sbb iret aas adc popf cmp pusha add ret and jecxz orb jmp aas or pop pop sbb iret cmp sub add pop ljmp cmp jb cmp sbb mov xchg mov movsl iret xchg std leave movl inc add ret add xor pop mov out or scas add aaa outsl mov add std adc roll jns cmp sbb fdivr add nop mov sbb and add jp add pop xorb dec (bad) repz mov pushf aam pusha (bad) xchg hlt inc add jae xor add sbbb add ficoml add mov out pop xor push leave outsl fildl out inc fdivl roll jle imul hlt in cmp popf jg add push push xrelease mov mov and in pop std loopne cwtl dec pop push or push push cmp add add dec adc pop add cmp jnp cltd js pop into pop mov add mov je xchg cmp add ds mov jecxz es mov mov or mov push mov nop jnp add and jge fnstcw inc hlt lahf ss scas xchg or out int mov test dec repz inc fsubs inc cmp notb popf or add out xchg jbe ret mov jno sti loopne movsb cmovno mov cmpsl dec fst out ds sbb test inc jp icebp aad outsl add test mov into xor lret cmpsl xchg cmp push frstpm(287 cmp add (bad) mov in mov or imul (bad) sbb xlat cmp movsb mov ja add (bad) cli push add movsl pop movq xchg mov adc adc sub push lock mov mov mov (bad) rolb std dec sbb idivl loopne and sub mov pop add cmpl call out xchg dec push inc pop jnp iret jo adc add jmp jg push xchg inc aam addr16 xor and fldenv int3 cld add gs (bad) movl repnz test cmp ds fisttp mov iret repnz loope pop sahf ljmp and inc add movsl pop aaa xor add xchg ror add (bad) xor movsb push icebp pop mov inc push hlt and add mov xor push mov add test add cmp push icebp adc in xchg and push ljmp rep sub pop jge les test jle add push adc js dec add lret mov mov push dec ja jl add sub (bad) adc xor jo mov inc add mov xchg loop add fcomi sbb mov cli dec push inc sbb rolb pop pop xlat or imul pop cmp sbb bt mov push cmp mov xchg test cmp ja jle add jg in sbb pop das mov mov ja lcall mov inc xor loopne sub rcl and scas fwait addps cmp mov jmp out mov add push sti sub xchg rolb enter sbb pop lcall daa iret imul pop xchg jne int3 adc rolb push and add mov test xchg add push or fldl2t pop insl inc jnp add push into jge fimull add in faddl xchg addb xor xchg jae mov mov pop inc clc fldcw mov adc add and in es stc cmp or sarb stos pop aaa sub and dec test sub clc cmpl daa dec or jmp pushf scas out rcrb aad add or add cmpb out out ret cli ljmp rcrl mov mov das cmp and cwtl mov and and adc sbb fist mov leave (bad) mov gs xor popf or cli and and scas xchg inc outsl add sbb adc lret mov out test les mov xor scas pop mov ficom iret sbb test mov jns subl scas xchg lock pusha add sti dec or and andl (bad) loope repnz mov and fildll into sbb jge fcomps enter and or cmp xchg add out inc mov push mov sbb stos push or push sbb in fmul dec arpl out (bad) cli es imul xor (bad) lods pop shlb fidivrl out enter int3 push mov xchg push mov xor cli movsb push push pushf and xchg cld mov js push xor (bad) (bad) test or int push enter fldz mov (bad) lds sbb pop into aas sbb (bad) cmpsl lods jns pusha lahf mov out imul cvttps2pi ret insb hlt popa leave add imul jns cltd fldcw sbb add push jecxz pop adc add dec adc add cs lock out add push js add jmp jns lds pop stc (bad) clc addb pop imul insl lahf testl ret cmp jae dec cwtl push jecxz mov inc sbb out sahf xor inc or push cmc mov aaa aas and sbbb pop cli jle xorl xor rorl (bad) lock sbb xchg jbe add mov or and sbb cmpl out dec test addb jp jle into rcrb cmp mov das pop dec adc dec inc sbb xlat lret pushf lock or and mov stos push push lds mov lret xor sub lcall push mov in sbb cmp js les loopne add lea add push push mov insl adc sti sub add repz mov jecxz mov pop inc fadds add mov repz push add (bad) or push lock inc dec fiaddl inc jno jnp and movb hlt jle rclb das aam test iret mov mov or divl add pop jns mov cwtl cwtl add add mov mov lea push inc cmpsl add lods and or xor xor pop scas out sub inc pop inc push mov stos and adc lcall nop clc xchg add xlat xchg adc adc cmp sbb fildll rolb popf adc push imul and add and add push xor add push cmpsl test jne adc or lret popa add stos jp add (bad) lret inc adc jae push or add mov dec jno add (bad) push loop mov cwtl mov mov pop outsl rorb xor push loop sub bound or pop test (bad) cmovge mov rclb lret push ds push mov in test lcall mov or stc xchg mov repnz adc cs jbe push hlt faddl inc call inc mov test jbe sbb cli xor shl stc call fbld jg mov xchg push clc dec cmp sub add sbb popf je js add mov dec stos sbb sbb mov and ror jbe jo add pusha push xchg or jg mov das (bad) xor and add xor roll pusha pop loopne sub lods xchg inc iret or mull cltd (bad) repnz sarb add push mov out xor data16 jp add int test add sbb stc add pop hlt xchg cs jo add fisttpl test mov out (bad) and cs mov mov pop ret sub les repnz and roll out inc and leave repz add insb inc mov push rol pop adc cmp jl adc lahf adc jnp mov imul fdivrs jnp inc enter loopne push icebp cmp sub jmp cmp mov sbb add push fld lsl push in jb loopne popf aam ds paddusb mov push add push cmp aam out (bad) mov test sbb lahf cld adc fildl push mov lods adc out mov inc jp mov add js aad popf iret or shr jl sahf or loop pushf loop lret add in sbb cwtl loop nop ljmp je add js aaa repnz scas xor jnp popa add aad or repnz lods or mov push add into or cmp repz loopne add aas and je lock (bad) out inc sbbb (bad) fild fsts push adc sub test test pusha aaa pusha or xchg cmp pusha and aas pusha je cwtl sub inc push xchg sbb out jns add pushf test roll or shrb imul cld jns xchg adc popf push dec sbb push rcrl mov roll movsl pop push sub das add cwtl fild lods mov (bad) aaa or in test mov pop es sbb leave push pop dec and jl mov cmpsb add imul fild jnp test insb jo repnz xlat in out inc pop add jge rclb (bad) jo and xor shl fs and cmpsb and jne in jmp int or sti add (bad) fbstp gs mov inc add enter fimull test lahf test inc push pop test push jno add and test mov call sbb xchg adc test dec pop popf shll lds lock pop ret in enter push imul pop mov sbb ja mov cmp mov ds hlt loope test inc inc adc test jae and fwait mulb (bad) in adc aas lcall xor xchg sub testb push (bad) sbb dec jbe iret ret call orb adc int dec add mov add scas adc adc mov mov and pop lea ljmp mov (bad) dec les fnstenv lea ja lods dec movsb movsb ret enter sar test inc dec add cs cmpsl add and mov fwait je jmp cmp mov sub sahf jo loopne add data16 cmp aam fs pusha fildll mov cli jg mov es (bad) jo aam adc out mov lret mov out jmp out mov negb mov call sub cmp adc fdivr mov jle pushf mov or rol lock in and adc imul adcb mov (bad) cmp and testl xor sbbb and sbb xchg loopne inc cmpl adc xchg add (bad) fstps mov inc lahf imul push lock push adc cmp test inc xchg push adc jbe inc enter adc sbb dec fiadd add pop jecxz dec mov out fstpt sbb call lock xchg jecxz mov adc (bad) cmp ds fs repz mov adc add mov adc xor fmuls mov mov (bad) dec inc jp aaa push or or flds pslld (bad) mov mov mov repz adcb lods or lods mov add lock sar cmpsb sarb sbb sbb lods fmuls push sarl cwtl (bad) pusha pusha fwait add add inc or cmp sbb mov add jl mov out add sub cmpb xor sbb jnp dec pusha mov imul jne pop jmp or cmp sbb cs movsl xchg push outsb add addr16 push mov cmpsl jne,pn int3 add out lea and cmpb add les jecxz leave into add jmp loopne add push sub aam mov add and pop xchg pop ret (bad) ss enter jle aas scas movsl movd inc cmpsb or (bad) cs push cmp push popf mov test xchg xchg add idivl adc dec sbb rcrb cmp pop movsb pushf sbb push out xchg lds jmp iret pop add in add xchg sbb mov loope adc jne cmpxchg pop aas adc sbb push jno xchg lcall jg divl or and push addl dec loopne or mov xchg xor push (bad) cmp imull (bad) xor sbb mov in test mov cld movsl add add ds mov int adc pop test inc mov loopne,pn in push ffree add lds or clc int3 add arpl mov jl (bad) fisubr pusha add push sub test mov xor add in add jl mov add sub inc add fisubr push xchg stos repnz imull mov add mov and add loope (bad) adc cltd daa sti fcmove outsl mov jns js cmp dec aaa add repz mov mov test mov inc lock add adc push push mov pop fs cli pusha orb push bound imul scas xor outsb xor cmc sub add stos loopne pop in decl data16 mov add fisttp push ja out add and sbb cmp push out fucomi add push and mov sbb sbb rclb jp in popl loop xorb in inc jp sbb mov (bad) int3 in cmp call dec mov or add dec pop das mov shrb (bad) add jg and loopne,pn lcallw adc push mov add dec or sbb fbld icebp sub cmp add lahf (bad) fsubrl lods ljmp add stos jmp cmp add scas jae sbb mov pop arpl loopne add pop bound fmull mov push adc mov mov add popl mov movsl outsl sbb push push mov jns xorb sbb out rolb icebp add push lds cld xor cwtl xchg ror loope inc clc cmp in push or mov jle add (bad) mov and ds add xor inc arpl jmp loopne sarb jnp jnp fistp add scas sbb pop push cwtl in xchg mov and add aas mov or ljmp xor lret jge cli psubw (bad) arpl stos pop pop cmp loopne mov inc jnp pop mov sub fld1 add xchg push mov test data16 push jo add loopne inc add testb add mov movsl pop push fidiv insb jg dec movsb xlat add sti je jl dec cld or sbb cmpsb add inc cltd cmp imul sub jno imul mov add out jno xor push pop movsl sub dec lea xchg xor loop into add (bad) mov jp sbb sbb xchg test cmp insl add mov lds and jnp sub sbb push cli jne add (bad) aaa push and (bad) jno inc mov xlat (bad) (bad) jb jmp inc add pop iret pop jl add insl push shrl sub popf test sub add xchg add outsl add and shrl aas mov sub aaa aaa mov loop mov add flds shrl hlt push fisttpll es sbb pop sbb lahf add mov xchg pop fildl outsb dec out mov xchg adc mov sub cmp sbb orb jbe lahf push mov jo push push imul les enter scas mov jne pop mov in mov popf out add in mov adc pop (bad) fs cli (bad) xor cld cmp mov mov repnz lret mov fcompl sbb aas xchg inc cmpb add cmp dec jge and pop std cltd idivb xchg mov stos int repnz push enter je cmp dec xchg (bad) jb jne push sbb cmp fs test mov adc out fild test jb addr16 push in sbb enter xchg push or outsl cmp test iret mov lods pop (bad) jno xor mov push incl push jnp sbb aad enter mov cwtl jg add (bad) fstp cs js or add mov in rcrl push cs push dec dec andb dec pop jp cmp add mov sti shrl mov and add mov aaa jp cwtl jbe movsb je loopne daa xor pop shr das xchg (bad) rol loop mov mov jne xchg test out add push add fiaddl (bad) mov addr16 or xor (bad) push ss add adc jg push add xchg add xor cld insb push push mov xchg add add or roll sbb in cli sbb add ss push data16 and sub add cmp mov xor inc imul cmp test add pop xor pop and add mov add cpuid icebp arpl daa ljmp mov rolb mov addl adc pop les mov loop aad jnp sbb push sub push sbb mov mov inc iret aad mov andb xor pushf call pop xchg aam sub loop fidivrl xchg test inc cmp xchg (bad) ljmp add push sbb dec inc jle jl cmp sbb repnz (bad) cmp add mov cmpsb out stc sbb push pop cmp cmp add test add divb sub (bad) and xchg add jmp mov cmpsb iret cmpsl nop test test adc add (bad) xor ficompl (bad) out pop loop pop mov sbb (bad) out inc xchg test xor xchg sbb jb or enter out pushf add movsb leave xchg xor jmp sub push xlat add add dec and jp inc dec ds sbb pusha sub pushf and pop mov inc (bad) mov loope es pop arpl adc pop mov and out dec cmp xlat xorb pop arpl cmp mov jnp xchg addr16 or andl push mov adc mov mov aad into add ds sbb mov mov mov dec mov inc in in and rolb lahf dec dec cwtl out cwtl insb add cmp mov sbb arpl or add and mov sahf pusha pop in inc jb enter jbe mov push popa xchg xchg aad sbb pop jo insb pop fadds pusha inc push jg inc aas lret daa pusha js lcall fcmovu push or sbb frstor enter push lret add mov andb es loopne sbb xorb adc repz pusha call sti jl add or jp test lds adc dec test sub sbb subl xor in jno xadd mov and inc mov sub xchg inc cmp iret push ds fmuls add xchg dec xorl js dec flds sahf fwait rcll je test push xchg mov dec add inc mov iret sub jge add xchg loope in loop or add divb fdiv aad outsl add fwait xor cmp push pop repz push mov push jo lret (bad) je and pop adc push or sbb je lock jae lock push mov test or xchg cmp pop add (bad) std mov and ljmp jnp lcall xor sbb cmpsl add in jp inc xchg add shll aad (bad) clc add icebp pop lret hlt cmp imul outsb lea outsl pop add mov jle cmp enter cs ret push inc add xlat int3 cltd pop jno inc add ja (bad) sub in imul jecxz jno lock push call aas mov push add xchg sbb incl (bad) gs xchg into sub xchg testb push cli stos jg push mov std (bad) push fcoml mov nop add push adc or or jmp cmp jnp adc adc mov pop imul and subb inc lds rorl push sbb adc andl jl adc pop add inc pop mov mov test repnz sbb mov push in or push clc dec les test sub aam call das jl add pop inc add push add jge and mov fldt in dec add add inc sahf cmp dec xor cmp add in test aas stc inc lock pop fiadd jne cmp jle cltd xor sarb xchg sub pop fdivl imul (bad) cli mov and push cmp inc xor shr stos jo (bad) or mov inc add cmp cmp cli pop ds (bad) or inc fcomip add es push std addl mov les scas mov mov or fwait mov roll xchg xor add sbb cmpsb mov dec or rclb inc les out sub add cmp mov add xchg stos mov cmpsb outsl inc xor push lea inc ljmp add and jle movsb add ffree hlt adc popf or (bad) dec mov sahf aas sub xchg add sbb mov dec jl arpl ret inc push iret mov (bad) push into repnz sahf xlat pop insb and call sbbb mov or mov add mov add and sti add sahf mov mov incb push pushf jmp mov inc add pop dec and ret add add repz add cmp xchg add pop loop mov and cmp mov test fwait cmp fsubr lret xor and mov lock jmp xchg es cld inc inc out gs push cmp pop fmuls shrb sbbl xchg ja add mov (bad) mov jns inc adc lret add nop mov fcomip inc sarb addl jns xchg test add pushf xor mov add int dec lea scas fs pop push leave add repz pusha cwtl sahf lock pop fbld addl sub nop add fistpl cmp inc jmp (bad) add scas loope clc push jns mov into xchg jae in jge movsl cmp imull out inc push in cmp sbb repnz std loopne and jg cmp inc add sti pop jecxz les js cld mov rcll cltd sub jae jle insb ja add cmp mov shlb push es sbb xor add pop dec clc or lret add mov xchg rolb sarb cltd push xchg sbb mov mov fild sti repz mov mov xor ds jb push (bad) cwtl push push cmpsb jl pusha imul cmp pop scas pop mov xlat shrb sub ss xor pusha push lcall pop jge mov jno iret push xchg pop lret ret arpl cmp out mov in adc dec mov jnp pop iret jle mov lods andb ret pusha cmpsl mov fcomps push in sahf sub loope pop sbb cld jl add xor cmp dec add add mov bound add mov sbb add aam or adc addr16 xchg push inc push add sahf jmp push ret mov cmp and jb and add mov daa mov cltd movsb enter add pop xchg test loop mov push cmp jae mov stos add mov jno lahf mov nop mov push (bad) hlt mov or xorl cmp inc or (bad) mov sbb and add sar mov lcall dec cmp repz add pop ljmp cmc jp jmp sbb pusha (bad) clts test push add mov addl pop jns cmpsl add fldl2t arpl inc add ret dec pusha lcall xor sub popa push jae push lods ret sub pushf test add and mov sti add idiv sub mov lahf lret ljmp inc lea loope sbb pop push stos clc or shrb fsubrp jbe push add lock dec cli add shlb add fwait orb xchg add mov testl mov dec push adc call repnz mov mov sbb mov rclb jb test (bad) (bad) fisttp adc rorl ja add mov testb ss mov jge pop lock mov jno mov mov mov loopne cmp inc sub or jno icebp test insl lea push push xchg mov call repnz call adc repz dec loop add cmc adc rolb xor pop in nop cmp dec jp inc enter add aam mov movsl adc mov xchg dec xor inc sub xchg cmp jo add fs cmp jp stos iret andb mov pusha les ret rcrl ret cld mov xchg sbb fiadd aas add fldcw mov dec dec cld or add sbb add mov lea adc mov xor (bad) mov jns pop push fdivl pop sub scas fldcw or inc sub or pusha inc dec sub insb outsl pop lock sub cmp or mov fiadd mov call (bad) lahf js ds movsl xchg add dec ficomp dec cmp mov cmp jp push ffree push test sti adc add fildll xchg lcall repz test ret cmp adc sbb adc mov sti mov flds (bad) cmp jmp push add fadd xor pop add dec inc loop fnstsw into add js pop pop ret int mov inc jnp (bad) jo mov leave push add mov test (bad) push fidiv jg cmp leave fildll cltd jl pop popf and cmp repnz ljmp (bad) call sub and jl inc orb fcomps push add lcall mov xor pop add mov lds popa or or add mov out jae movsb lods or or and fimull or stc popf jmp (bad) sbb test rorb sbb and adc das dec mov push mov mov mov test or pop xor xlat push and aam pop push fcomps inc jg jmp (bad) cmpsb loope aaa popa lock jb mov mov mov inc add arpl cmp or nop push push lock mov pop xlat cmpsl add xchg or adc sub add dec lcall mov sub add mov mov cmp add cltd cmp cmpsb les scas insb add rcrl out and mull mov and dec das outsl adc insb xchg adc pop and bound rcrl mov daa xchg lock xor jge sahf rolb push add xor int sbb pop aad imul out (bad) pusha inc mov aam and or or in cld add hlt xor je add rorl adcb out xchg add js lods iret sar stos inc cmp das adc sbb mov inc call hlt and or adc insb push lret xor mov or fidivrl pop cmp mov icebp sbb (bad) mov pusha (bad) push imul add sbb cltd mov inc sbb (bad) sbb mov sbb xchg cmpsb into push cwtl add add ret mov xor push or addl loope addr16 pop lock sti test dec push cmpsb add andl popa or cmp adc cmp and mov roll test in addr16 push jno jnp mov dec cmp push arpl out pop cli popf bound dec dec add test fwait hlt adc aam add loop rolb add jmp mov mov mov shr mov roll clc movsl es nop mov push mov imul push enter mov inc mov ja loope das jnp repnz mov push mov add imul cli mov bound into push lahf mov xlat pusha fsubs (bad) enter adc int inc cwtl or jmp scas add sub mov dec xor sub and inc sbb (bad) xor orl adcb pop pusha nop adc mov mov add mov sub mov adc mov cmp sbb add push mov or pusha xchg (bad) rclb add test jb dec (bad) in push add pop dec mov pop sbb imul jns sbb sbb stos int3 in mov das (bad) dec addr16 and push adc cmp ret cmpl xchg mov and sbb xor xor sbb push (bad) inc stos outsl popa xchg rorb lcall xchg add iret push mov movsb adc add shl insb sbb jb rcrb and cmp bound mov add rcl inc add pop mov addl in add push pop jl or mov dec out pop jg mov and outsl pop adc dec pop push movsl imul cmp sub addb test cmp and int3 out roll and or aas aaa sbb in add js cmpsb rclb faddl push xchg xchg fist loopne mov rol aaa or and mov outsl and notl cltd test int3 mov or das and out add testl pusha cli mov aam add dec dec xchg aaa mov mov add adc mov subl fstpt pop push movsl push scas rorb mov push popa cmp add imul orb sbb out std add sub xor push (bad) mov pop jl pushf into addw mov sub or and dec dec or jo test andnps rorl jle in mov jns mov and cld or mov and adc shl push mov rcrl pop mov inc sbb outsb fsubrs mov add mov sub and (bad) pop push cwtl xor cmp loope dec mov sub mov mov cld lods sbb clc and sbb je stc adc xchg sub addb dec movsl xchg in subb push jo add mov mov aas cmp or pusha das dec shrl add lea loopne pusha xchg (bad) or mov arpl stc xor (bad) cmp pop jecxz (bad) or loope hlt and jmp sub andl inc fbld lds add cmp xchg mov addb arpl stos and pop xlat add js mov add mov or add (bad) adc mov inc cwtl jp jle pop jecxz pusha cmp pop and leave flds sub jmp adc aad lahf hlt dec dec enter sub pop cmp mov xor adc add and jl test mov sbb das clc jge pushf mov pop jmp jo sub ret lcall add notl dec cwtl addl and test add and fdiv orl mov adc shlb pop loope or adc add adc ficompl mov (bad) inc fstps jnp xor push sbb fs push dec sub shrb lods dec add and pushf inc inc test jo ss popf and cmp push lret (bad) jle mov mov mov add gs shll js nop inc add fdivrs lods mov mov data16 sahf lock add clc add repnz sub push xchg orb fstpl xor dec xor hlt loop test mov cmpl xchg sbb (bad) enter and loopne rcrb stos inc mov adc call add push test insb bnd xor lock imul add cltd jns add jno (bad) pop mov xor ret and inc add mov in xor divb repnz push push cmp mov stc and add jl leave jle nop pop inc pop sub and dec sbb in mov in je adc loopne xor arpl xor fadd cmp repnz mov and clc dec inc xor sbb les (bad) mov cwtl mov jecxz add mov mov leave (bad) xor jle or int3 scas loopne call jne notb dec inc and daa xchg pop mov add in lds sub lret fldenv sbb mov add movsl les popa jns sbb test inc jecxz dec arpl dec push pushf add (bad) in pop ret add adc add scas adc daa popf test test subl adc mov sub (bad) sub pusha call push cmp and loop adc sbb (bad) sbb adc and mov dec or xchg xchg push adc pop hlt add jns incl in jae sbbb push mov sbb ret faddl cmpsb mov in arpl cltd out lods jp xchg mov sub cmp rcll xchg mov jae insl lods (bad) repnz inc jbe scas dec add int3 cmp add insb stos adc out imul (bad) test mov daa pusha ret sbb adc dec dec dec adc add add cli mov jno shrl xor in inc xchg xchg lock das je xchg insb (bad) xor pop or and add int3 ljmp cmp or add leave fwait mov jmp pusha inc movsb mov leave call mov int3 pop ja xchg faddl or shrb sub fs scas adc loopne dec mov test add fadd cld mov fcmovb hlt add test (bad) and test add xchg leave mov in add pop (bad) push mov ret push pusha lods das inc daa cwtl sub and incb jl jns and sub (bad) jbe add fs outsl shl in add push sub adc mov and scas or out lock imul rcrb jnp dec loopne mov (bad) pop add adc push add mov int3 sub (bad) sahf jecxz stos add lahf push incl sub das add pushaw lods loopne mov and insb std enter cwtl sub aam cmp xor add inc lahf sbb out cmp jp adc push xchg lods (bad) sbb bound push cmpsb clc jbe jb mov in mov lods push inc or ret aad jo sbb jl add stc mov cmp xchg xchg xor or pop or add (bad) sub lahf sub mov rclb xchg jbe sub (bad) hlt or mov sbb jg add stos es mov and cmp add add fdivs sub dec lds xor sub loopne dec dec nop adc adc add push push and lea lock dec sbb inc cmpl rolb cmp mov pusha ficomp dec insl popf dec sbb ret jbe add pop or fldenv add jmp sub scas cwtl ret or repnz leave or int3 repz adc or jne add cmp loope push sub dec sub lds fcoms mov pop add pop mov and cmp fistpll sbb stc mov fcompl pop jnp pop (bad) fisub dec xchg lahf mov sub andb dec and inc inc stos inc pop xchg sarl imul (bad) pop push and or add repnz push pop inc mov add xor inc mov add adc dec mov mov movsb adc push test rclb fsubr mov or lds fadds test sbb inc inc pop std adc ficoml inc test daa pop stos mov add mov and sbb enter sub or add pop ds dec test cmp dec push ds mov dec xor cltd shlb js push pop or leave xchg enter out push mov inc adc andb jo mov inc int in add out mov in inc daa leavew pushf outsl pusha or pusha rcll adc (bad) jecxz add jns mov call (bad) mov outsb in mov sti inc sub cmp out lahf lea add xor mov popa (bad) lock (bad) push lock jle add pop mov jmp repz adc stc scas jnp inc addb cmp or js mov popf and pusha (bad) sub int3 shlb roll imul in jp push push sub inc stc add (bad) arpl xor lret add fwait ds ljmp pop mov push lock ret aam sarb es add mov mov sbb hlt add xchg mov xchg call inc (bad) imul (bad) add and push jmp add int3 cmp loopne movsb xchg shll mov jp,pn jl (bad) xchg outsb xlat add cmp add lds dec pop ret or cmp and adc add mov fcomps sbb pop fs sbb test inc rorl lds mov sbb add lock inc shr sub addr16 xor packssdw les les push mov addb and loop int3 ss in and fmulp mov pusha and lds mov add lock icebp push testb xchg mov inc pop pusha dec cmp stc or adc mov (bad) loopne fs inc cli ss fldlg2 add sub dec mov or outsb imul add jle mov sbb sbb jmp push pop jmp or and test loopne pop xorl test sbb mov in leave (bad) xor es cmp mov xor add mov fldl lahf icebp and add pop push xor cs ret xor xor jmp shlb and adc and mov inc mov fadds xor mov adc jmp loop test pop cli (bad) mov add add or fdivrs or or lods inc add or pop mov add inc test (bad) adc cwtl sub add sub dec adc add das clc es xchg repz jnp adc jp cld test add dec mov jmp xor adc popa mov and xor jnp add fidivl xchg cmp rcll add pop mov add shlb rolb sub gs or das jno call add mov arpl sbb push xchg lds ret adc and push mov or xor mov add call push (bad) mov mov sti cmp lock ret dec mov in xchg pop mov push xchg add xchg imul sub inc outsl jb out push mov pusha cmp cmp idiv popa fsubr adc adc mov add je insl adcb cmpsb xor jle and pop push pusha or adc loope js shll cmp mov dec add pop int3 lock ljmp or cmp and sub rclb mov inc pop sub cwtl adc mov adc mov leave in repnz arpl and sbb pop cwtl popf icebp call add xor jge jmp mov imul sti test repnz (bad) lds pop push (bad) rcll add jmp adc add pop jo mov fldt xorl (bad) xor pop sbb rol cmp icebp cmp test mov jle ss cwtl or (bad) call push aam jl fnop jo js add jb sub nop or cmp in sbb or stc sub (bad) mov dec xor pop and adc popa push dec and cli add test cmc xchg sub sub (bad) xor (bad) jmp hlt add jecxz das sbb fstps mov mov mov aam push mov xchg int3 shrb add mov mov add xchg into sub pop inc cwtl push or jle (bad) xchg scas and add inc ljmp inc push mov adc jnp (bad) test cwtl lods xchg mov xor test add push jnp jno or push mov cli loopne push es pusha inc pop lcall add jae jmp adc xchg adc rcrl mov inc pop ss jbe fisttpl push (bad) cmc xor (bad) loopne or lea or and int3 mulb mov jle add es sub push cmc jge nop mov or add sbb fadds push sub (bad) enter js cmc popl jb xor fs lods call (bad) adc icebp jbe bound jl dec les mov out xorb rolb sub nop hlt add test pop adc scas sub insl mov adc adc or mov ljmp int add icebp sbb mov es outsb and xchg pop or (bad) inc cmc lcall xchg and sub imul mov or stc and or cwtl (bad) or pop jnp repnz cmpb mov pop pop lahf jno xor push dec inc in imul shr adc mov mov dec mov cs mov icebp mov rclb xchg sbb cwtl adc inc mov or pushf loopne fcomps repz test or jno in jo in enter loop sbb (bad) xchg cmp insb xor adc mov pop adc sbb hlt xor dec jno je inc sbb mov ds fisttp pop popa jg fsubs pop or lock (bad) (bad) mov ret sub jnp add das xchg nop xor push cmp xor loopne setle ret sub pop pusha and mov (bad) loopne cs dec cmp mov jb,pt mov fwait aad popf sarb das add rclb sub dec pop mov sarb jb shlb mov cwtl dec ja pushf out lcall mov push out in add mov xchg add or mov test les cmp in xchg cmpsl inc and adc sbb int3 cld iret inc push (bad) cmc pop (bad) push cs lods add int3 adc js add xor stc mov adc cmp xor outsl lret jo mov lahf adc sub cmp outsl popa inc or add and inc jno xchg (bad) pop jns les addr16 cmpb (bad) in add clc cmp add (bad) fnsave rcr and dec subb adc add xchg out sbb in adc dec jp sahf or out insl dec pop sub pop xor outsb mov sahf push bound xor xor out push mov cmp mov jno mov inc push jns dec mov add into cmp add dec rcll mov arpl jg je adc push lods test mov loop adc (bad) or or inc fs in ret add mov inc pop mov (bad) adc loopne cmp adc es andb stc pop cmp add and pop mov btc sub shrb inc fwait cmp mov bound or or add lock pop and aaa dec push add or test fmull mov push and out sbb pop mov mov and fnstenv lidtl add add fidiv jmp add pusha jl sub dec jo cmp (bad) adc and push nop pop dec data16 cs in mov (bad) adc aam sbb pushf mov add push rclb or mov dec sub sbb rorb adc mov cwtl cmp adc clc repnz add sbb in xor push arpl mov mov cs adc loopne lods adc int add cmp stos jecxz lock sub add mulb mov lret push sbb mov aaa loopne test and dec (bad) icebp loopne out inc and add imul int3 push popa mov test adc xchg mov (bad) adc cmp jns out xchg and sbb sahf jle inc jecxz push or sbb cld and jne mov lods popl push push fimull mov or jge incb inc pop clc xor mov aas clc or mov clc pop sub push add shr ljmp lret scas xchg mov xchg cld xor dec nop or pusha and ljmp mov add scas and stc push push pop mov add nop sub pop add xchg (bad) aam pop add fstpt mov dec insl or fs or pop cwtl and add orl lea adc add sbb jecxz movsb mov bound sub jbe inc pusha sbb cmp out rcrl add rcrb push sbb jbe cmp fldcw sub jno add cld adc cmp add dec inc and dec lahf push jl and or out loopne dec sbb call jmp jno mov inc js out mov add or sub mov and pop jmp (bad) ret push orb sub inc fmuls out mov mov inc push cmp iret lods push outsb xor sub sub add and or pop and inc jo xchg fildll hlt movswl adc inc xchg je sbb xchg xorb ja test add jecxz push sub dec mov jl insl je add int3 sbb nop add cs iret popl repnz push icebp loop enter (bad) mov mov rcrb loopne stos mov push dec push adc xor cmp cmp loop adc mov aaa ljmp lret ret push cmp sbb cmp mov xor rorb shlb stos in add mov sti xor popf mov pop test leave sub sbb pop dec (bad) mov jno cmp je jge add xchg ret sub push cwtl jl mov (bad) dec sbb xchg xchg fadds and les adc adc adc iret mov add xor mov shlb add add adc adc dec xor xchg dec cmp outsl loope dec sbbb push out lods stos add icebp mov sub add imul testb xor loop ror std data16 add pop maskmovq idivl clc jo push dec loopne pusha fnstsw leave xor lock mov xor stos and pop rcrb je insl fcomip pop mov sub jnp rcrl inc in mov jecxz inc mov stc xor cwtl mov adc dec test mov seta mov aas mov and sbb lods das adc push and pop cmp add dec jb pusha aam incl pop call leave inc out les xor or rcrb mov clc sbb and repz fcomp sub insb xor mov adc xchg ficom lret gs sbb dec pushf jecxz pop sbb in pop mov push mov inc xchg push add lods cwtl cmp fild add lret pop inc add or loopne cmp out scas pop push pop add xlat repz popa dec sub inc jns pop adc in xorl fnstsw lcall in aam lods xor js repz cwtl mov adc xor mov idivb or sar movsb call mov mov dec sahf push ja sbb and push xor shrb xchg repnz mov add sub mov ror pusha lock mov daa (bad) adc lods pop xlat add (bad) push or adc mov aas rclb or mov rcrl sbb inc inc loopne add and dec xor or sub (bad) mov add js fadds adc add xor enter sub add mov jb jl jmp rolb adc sub mov cwtl aas or scas sub daa insl cs cmp jg push pop xor inc lods adc clc in add icebp jl (bad) lahf mov mov inc sbb clc insb add daa sbb inc adc sbb push mov lods add or sti xor jge mov imul push fcoms or inc push xchg loope jg xor leave mov shl aad pop aam add add jae and ljmp mov inc or add jno stos cmp into pop add sub je fimul stc mov sarl dec icebp (bad) dec mov mov ss popa ljmp lret addr16 stc sub popa fldenv fadds push add adc mov xchg mov adc adc mov pop leave (bad) sarb fs flds jecxz pop mov inc ss sub in mov test pop xchg xchg rcrl dec loope rclb outsb or lea hlt cmp cltd jno xchg bound mov rorl mov jno ret and sbb adc notb or inc push out shll loop or int3 mov iret into xchg adc inc imul sub cmp jecxz and mov and jmp call inc jns stos subb shlb (bad) das (bad) rcll flds sub fwait inc xlat cmp mov dec (bad) push add (bad) out add aaa fwait push or jg add scas add dec fisub mov push cwtl and loopne pop shrb jg push or adc pop xchg or push add and pop jmp punpcklwd lock add mov mov push (bad) pop hlt sbb mov sub sbb mov jge push xchg xor or mull cmc mov (bad) scas add inc mov leave sub pushf mov add xchg lods flds and push call out daa cli dec loopne ret mov jns lods dec jp push test rolb mov sbb and push cmp enter movntq out loopne add mov and jmp inc adc call inc jne pushf mov xor pop cltd xor orl subl (bad) cs jl cli int (bad) pop cmp lock (bad) dec xchg push xchg iret fadds add test push stc sub xor loopne,pn (bad) mov dec hlt cmp fcoms arpl stc mov test cmp andl xchg and icebp int3 cmpsl cmc mov jmp aas and jl xchg pop insl add or inc add sbb inc inc cltd rclb lods aad out push push sub pop (bad) pop les testb mov loop pop push pop xor add mov xchg jo adc inc fisub add and push scas mov repz and dec cmpsl adc ljmp leave inc jns jmp jp pop imul int mov add or je xchg adc clc cltd pop fs adc in mov sub inc sub sbb sub neg sahf test adc add adc or movsb xor cmc push fldcw fldt pop sbb mov pop or cmp mov adc into add icebp dec pop cli out xor push mov int jns xchg add cmpsl mov mov dec and mov in inc or faddl sbb loop int3 cwtl xor nop add into sub xchg mov mov pop (bad) sub lock mov (bad) loopne adc adc sbb jmp mov and fiadd push sub push call insb sarb xchg jp push or (bad) xchg stos or or (bad) or ret sbb pop stos or cmp imul ret (bad) add mov sarb (bad) iret call and insb mov and clc aaa sub sti mov cmp aam pop scas jae (bad) fsubs inc jnp xchg mov adc inc pop pop test jnp (bad) pop cmp arpl pop addr16 or push sahf push inc mov stc sahf cmp push pop dec add flds (bad) lods out and mov jo inc rolb dec dec pop xchg shrb mov into fldl incb cltd jo arpl jae cmp shlb test cld or test sbb xor mov jp mov push mov in sub mov roll mov sbb xor cmp sbb mov sbb cmpsb xchg mov inc mov add (bad) mov pop xchg and or or jae sbbb xor cmp movsl jp mull push add cmp ret fistpl and xchg popf imul jle outsl adc punpckldq xor aas pusha adc ret roll adc and pop ss cs xchg call mov dec push push pop dec iret mov mov add xor stc add mov pop ss stos sbb mov push adc add dec xchg hlt jmp fmull jle ljmp pop mov (bad) pop push data16 (bad) push sbbl test leave (bad) sub test and pusha aas ficomp xchg (bad) jnp iret cmp inc in cmp leave or lds lock pop (bad) rorb xor aas xchg inc add into cmp pop insb lds scas push js mov add pop xorb pop or int push mov pop lds inc and cld int3 es scas insl mul rolb pop loope (bad) push cmpsl loop pop test cld add aam dec stos sahf add je jmp pop mov push xchg cltd (bad) aaa pop add in xchg mov addb or sbb insb and jnp cmp xor push push incb fs test out mov adcb dec sub aaa adc rorl mov (bad) push cld and cmpsb cmp movl mov add dec out es inc movq xorb pop cmpsl or mov inc add mov pop sbb ret cwtl push clc jb cmp xor cmpsl out (bad) pop sub and push sti or cmp adc roll inc mov fcomps imul pop test or loopne sbb test paddusb repz mov jge (bad) mov add pop ja ud1 or push mov inc out out push or sbb push jge addr16 ss nop xchg add repnz pop test mov pusha adc scas pop (bad) xor dec inc xor ds mov sbb int3 sar loopne adc sahf ss pop mov sub jmp iret scas push xchg faddl (bad) jno jl pushf mov xor ds mov jae call or sub adc sub cmp nop mov jbe adc (bad) incb popf cmp and add fildll es (bad) sbb pop mov (bad) mov mov cmpl xor aaa int3 nop rolb in ss (bad) lock cltd push sbb xchg rorl es jmp loopne push adc pop inc aad mov xchg stos insl sbbb aas loop (bad) sbb fsts add adcl push inc push xor fbld add ret push movsl mov fadds popa je test inc push aam mov in arpl xorb add add call enter cwtl sbb mov dec cwtl pop xchg mov outsl cmp xchg add scas bound sbb inc push pop cli sub pop pop or adc add adc lds into data16 enter mov rcr ret mov xor add dec enter adc mov add test sub xchg inc adc or outsb shl mov cwtl or loope scas mov jo pushf in cmp nop mov enter push out sarb (bad) addr16 inc ret sbb adc cmc stos xor out js lss in flds loopne iret rcr pop pop add cltd mov jmp mov jl push mov sub cmp add push out inc test xchg ss fistl dec popa xor mov sub clc mov adc and lea sbbl pop (bad) and mov inc dec mov jle fwait xor mov fsubrs insb jae push xor mov add daa pop pop lods sbb jo fiadd mov xor out or and rcl xchg rolb mov push insl push sub cmp jmp inc cmpsb dec add mov cmp or clc mov xchg add lahf cmp inc or pusha pop inc test dec jns add push insl cmp pop data16 leave rcrl cmp push loopne or jae jae mov add test cwtl inc imulb mov and inc jno rcrb add out mov mov mov daa mov (bad) int lock add popl add inc mov ds adc or mov xchg arpl dec adc rorb cmp add ja nop stc sub subb add xchg mov mov in imul sub pop cs cwtl sub lds xor lret add jg sbb sbb lds add inc cmpsl jb and cli add (bad) push popf test inc lock fwait push push loope lock sub (bad) jne and sbb inc loope mov (bad) jbe sbb scas iret mull inc sbb lret add scas pusha stos xchg test dec and inc jae,pt adcb or push pop xchg dec add fnstenv push out repnz add xor cmp pop sbbl adc push fsubrs or inc rcr (bad) cmp loop add fimul mov push (bad) or cmp cmpb fdivp ss or (bad) jmp inc sbb pop and inc fcoms mov cmp lock sarb (bad) (bad) cld arpl mov pop mov (bad) sub push mov jo pushf les mov xchg push nop dec cmp outsl add mov push add mov hlt aaa add in lahf popf outsb cltd inc cmpsl mov or ret aam push in jns movsb inc bound push adc lret repz sub or (bad) xor dec cltd int3 sarl stos add adc mov fsub test mov nop mov or xchg mov sub into and or xchg dec mov inc in inc arpl mov add iret pop jno add mov orb popf divb dec insb and jecxz adc cmp cmp dec inc inc mov inc adc dec aas pop push ret mov fidivl mov addr16 inc mov and sbb pop mov addb cmp push add ret out mov add sarb xchg andb sub cmp add fadd scas data16 pusha push clc cwtl aas dec pop pop inc inc outsl push mov flds sbb add sbb test test xor xor sbb ljmp stos adc insl test fld1 xor add mov sub iret int3 or and adc or aaa nop mov pop pop add push or pop in daa pop and loope xor pusha popa stos loop add hlt pop (bad) divl fcmovu or xor cmpsl sub mov add xlat popf xchg lret cwtl fistpll cli ret and jb fwait add add ss mov insb movsl and add dec xchg mov mov seta orb dec (bad) orb or mov insl add outsb sbb aam jecxz rol dec sub ja div add inc sub add into test add je xor insb adcl lahf xor pop jo test loope (bad) mov and loop cmp (bad) push pop outsb mov adc mov ljmp test pusha dec nop or jp add inc stc cld jl pop out push xor leave xor mov mov clc push add or xchg sti push call lret pop insb lret loope mov shrb fldl add inc rol xchg fnsave add test in dec pop insb push or shr imul or jle pop push push pop std push dec adc xchg adc pop add not cmpsb cmp std xor fs scas inc hlt stos fsub rolb jno push js roll adc sbb inc inc rcll leave jge ret dec pop jo fistp je lret jg jl rolb push out cltd inc cmp mov xchg fldt nop hlt lds dec test (bad) cmpsb mov dec push cmp nop add rorb pusha push xor mov lahf xchg inc (bad) mov loopne mov test (bad) jno xor (bad) ja dec movaps or cwtl test cmp or cmp hlt addl push xchg or aam (bad) push xchg subl mov xorl shll add inc (bad) lods add in (bad) adc mov jmp int3 mov pusha dec lods jae xor out pop mov or enter test scas adc add inc pop push or or mov jmp popa lods dec push xchg mov dec (bad) nop aam jg ficoml push sbbl xchg addb lds sbb jmp in push and jne pusha mov mov add sub inc fnstenv cmp cmp sbb push dec cmp mov sahf pop lret sub lret dec ss and add ret mov xor lret push enter sbb or push rolb mov cmp (bad) incb stos push fsubl xor jae xchg sbb push jl jl add inc fadd fs and outsl dec paddd faddl aad add jo icebp xchg pusha mov stos or add xchg outsl leave push push push mov cmp add out out stos push xor ret inc ror loope outsl mov inc add das jge and sbb add out lret jne ds cmp sti adc stos add es enter mov lret add call mov mov pop sub cmpsb inc pushf stos mov xor dec mov cld or dec add lret adc adc jbe or sbb mov pop rcrb dec cld jl jo std pusha xor lock (bad) out or mov mov inc pop dec pushl and mov pop push call enter dec cmp fdivl cld or push pop punpckhbw rcr repz mov inc inc xchg stc ss and cmp lock test inc xchg inc xor aam mov icebp jno push add dec outsb add aas adc addr16 or mov pop movsl lods in add or aad flds or int in xor mov add xchg clc xchg inc and xchg in ret repnz sub lods loopne test jb mov xor mov enter jmp or push pop pusha push out sbbb adc xlat push mov or cmpsb adcb or jns inc pop test cwtl or scas inc xchg mov hlt dec (bad) scas sbb aas clc inc movb pop jae mov push push loop aad push loopne pushf pop add (bad) lret push xchg and xchg inc adc jl inc jmp cmp add mov xchg push sbb push loope popf nop xor cli push xor roll jno jb add inc roll mov jmp stos sbb add ljmp subl les push add movsb jno pop xchg in adc into lods mov lret push call cmp int3 (bad) xor in pusha adc outsb mov sub popa or nop pop out push jo xor (bad) adc (bad) sbb xor inc fstl and mov add xor add hlt (bad) je (bad) nop add inc jb xor popf jne mov jbe addl or lods xor and aam inc jmp lret rcrl and sub mov rcrb lret pop pop and fisubrl jbe cmp xlat mov scas xor loope xchg nop add dec add mov (bad) insl and jmp add add fs xchg test sahf push ds xchg cmp pop push insl aam mov sbb or repz fwait mov imulb or sbb stos mov mov mov add arpl cmc dec inc add mov cmp sub pop and cmc sub roll xor or add sbb and jge xchg (bad) mov cld imul imul lea push inc (bad) jo add mov inc nop out pop es jo adc dec cmp out cwtl test sbb out inc and mov sbb outsb adc std nop mov dec test and rol jl add inc or xchg out push and mov and xor xchg cld add data16 lds jmp or (bad) mov outsb pushf pusha inc (bad) mov clc js add fisubrl xchg sbb test imul movsl flds xchg imul insb nop mov and add mov cwtd jb mov stos int3 dec loope add fmull data16 inc add std pop enter pushf add jl ljmp xchg bswap pop sbb jge cmpb into int mov imul leave nop movsl mov je sub sub ds loope pop gs call ljmp push dec loopne xchg cmp out lds sub xchg call add xor lcall loopne jl inc sbbl outsl mov mov (bad) in ret add sub add and add inc add add add add add add add add add add add add add add addb addb add addb rcr add add add or add or adc adc push push push add sbb and and sub sub push push push add dec add inc add cmp add jl add push push add add add (bad) movb out add add add add cltd add add add add xor add xor add add cltd xor add xor add xor add data16 xor add add cltd data16 int3 data16 jmp add cltd add xor add cltd cltd add int3 cltd add lcall add xor add data16 add cltd int3 add int3 int3 add dec add incw add incl add add add add add xor cltd add add add add add add xor add xor add xor cltd xor add xor add xor add xor xor add xor cltd xor int3 xor jmp add cltd xor xor xor cltd cltd xor int3 cltd xor lcall xor xor xor data16 xor cltd int3 xor int3 int3 xor dec xor xor xor pushw add pushl add pushl add add xor data16 data16 add incl data16 xor xor data16 data16 xor pushl data16 data16 data16 data16 data16 cltd data16 cltd data16 data16 cltd data16 cltd data16 int3 data16 int3 data16 int3 data16 int3 data16 jmp xor data16 jmp incl int3 add add add cltd cltd add add add add add cltd add xor add cwtd add cwtd add cltd add cwtd add xor add cltd add cltd cltd add cltd cltd add int3 cltd add int3 cltd add data16 int3 cltd add int3 cltd add lcall add cltd add lcall add add add add add add add xor add int3 add xor add xor add data16 add data16 add cltd add data16 add cwtd add cltd int3 add cltd int3 add int3 add cltd int3 add cltd int3 add int3 int3 add int3 int3 add int3 add int3 int3 add int3 int3 add dec add dec add cltd add dec add dec add add add incl cltd add add xor add xor add incl cltd xor add xor add xor add incw xor add int3 add incw jmp add cltd incl xor incl cltd cltd incl int3 cltd incl lcall incl xor incl data16 incl cltd int3 incl int3 int3 incl dec incl xor incl dec add (bad) incl jmp add data16 jmp data16 jmp add incl movsl add add pop add ja xchg xchg add lret lret add xlat xlat add fstp add jecxz add ljmp clc clc clc add sti lock addb add add (bad) incl add add add add add (bad) incl (bad) (bad) incl or or or or or or or or ljmp or or or or or or or or or or or ljmp xor or or or or or or mov or or ljmp pop xor lahf inc or or or or or in (bad) mov or ljmp pop xor lahf lahf lahf inc or or or or or mov imul or out out pop pop mov lahf repnz or or or or or (bad) mov imul out out out out pop mov repnz or or or or in mov imul ljmp or repnz out out inc or or or or in (bad) mov imul mov or or in in in out out inc or or or or in mov imul ljmp or or lock in in inc or or or or in (bad) mov imul repnz lahf pop pop or out idiv lock out inc or or or or in (bad) (bad) (bad) decl imul ljmp jae out testl or or or or in (bad) (bad) (bad) decl in imul ljmp mov incl or or or or in (bad) (bad) (bad) decl imul imul pop push push jae loope mov inc pop pop pop pop pop or or in (bad) (bad) (bad) decl div div ljmp mov or or pop out in or or (bad) (bad) (bad) decl div div or jmp loope mov in in in in in pop pop in or or (bad) (bad) (bad) decl div div or (bad) in in in in jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in or or in in in in or div (bad) or in in in in in in in in in in in in in in in out in or or ljmp div or or or or or or or or or out or in (bad) (bad) (bad) (bad) (bad) ljmp pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop in or in in in in in in in ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl in or or or or ljmp in incl add add add add add add pop in or or or or in ljmp incl sti jp xor xor dec dec dec add pop in or or or or or (bad) (bad) (bad) decl in incl ret pop jp xor xor dec dec add pop in or or or or or in in in in in or add pop jp xor xor dec add pop in or or or or or or or or incl ret pop ret pop jp xor xor add pop in or or or or or or or or incl pop ret pop ret pop jp xor xor incl in or or or or or or or or incl jp ret pop ret pop jp xor add pop in or or or or or or or or incl jp pop ret pop ret pop jp xor incl in or or or or or or or or incl jp jp ret pop ret sti jp add pop in or or or or or or or or incl add add add add add add pop in or or or or or or or or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl in or or or or or or or or jmp jmp jmp jmp jmp jmp jmp jmp or (bad) incb inc clc add (bad) jo inc and jg add jg add aas rolb aas rolb aas rolb aas rolb aas rolb aas rolb add add add add add add add add add add add add add add add add add add add add add add add clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) cld add sub add and add inc add add add add addb add add addb rol add add add incl add (bad) incl incl add incl incl (bad) incl add (bad) incl adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc ja ja ja ja ja ja adc adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb (bad) (bad) (bad) (bad) push ja jg jo adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb divl ja ja ja pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb divl ja ja ja pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl rol rol (bad) ja ja ja pushl or or or or (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) inc ja ja ja pushl cld or or decl (bad) (bad) (bad) (bad) (bad) pushl lock lock (bad) ja ja ja pushl cld or or decl (bad) (bad) (bad) (bad) (bad) pushl lock sar ja ja ja pushl cld or or jg (bad) pushl ja pushl lock ror pop ja ja (bad) jg jo or or or or pushl idivl jo ror iret rol ja jg (bad) jg jo or or or or pushl addb add (bad) (bad) (bad) (bad) (bad) inc (bad) pushl (bad) (bad) js or (bad) (bad) (bad) (bad) decl pushl (bad) testl sar (bad) decl or or or or (bad) (bad) incl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) decl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) incl adc sbb mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add incb add incb add incb add incb add incb add incb add incb add incb add incb add incb add add add add add add add incb add incb add incb add add add add add add add add add addb add add addb rol add add add incl add (bad) incl incl add incl incl (bad) incl add (bad) incl adc add add add adc ja ja ja adc (bad) (bad) (bad) (bad) pushl sbb push ja jo or or (bad) pushl (bad) (bad) push ja jo or paddb pushl (bad) jo lock jo or or jg jo iret (bad) lock jg or or or jg rol rol jg (bad) (bad) (bad) cld incl add rol sar add sbb (bad) (bad) incl mov add sbb add jmp add jmp add jo add sbb add add ja add pushl add sbb add incl add incl add jo add sbb add loopne ja loopne pushl add add add add add add or std stc stc add (bad) incb sti repz repnz add cmc hlt add in add in jmp mul in mul jecxz imul in imul out stc out in add clc testl mul loope cmc in add jmp add ljmp cli icebp out add out add out in add fs add test (bad) jne add jge add mov aam jne mov gs mov in xchg ficompl scas add in add out add cmc repz hlt repnz cld sti add sti cli add cli stc add je add jbe add jge add je add mov in push xchg pop inc add xchg outsb add xchg jb lcall add jno mov pushf jl cmpsl jae add test in test add mov xchg add mov add mov movsb add test add mov cmc add div add fs add jno add jns add jl add jp add test aam pop add (bad) pop add jl add mov fldl fs test loop addr16 mov xchg jb into xchg fstl jnp ljmp add in jmp add fs add imul lret add jae add js add pop cmp popf fs add mov mov add repz add clc cmc add std cld add sti cli add dec and movsb push sub lcall add arpl add push add jno add mov roll cli loope add (bad) lret add int3 ret out add jmp fldl cld in jecxz cld out call add cmc lock hlt out add div add dec push add popf imul in stos (bad) add mov add mov add mov mov stc fld add fcmovne add fmul add fmulp add (bad) add (bad) add loopne add jecxz add in add in add out add jmp in (bad) in jecxz sti jmp add in in std icebp ljmp bnd (bad) div add cmc lock stc testb clc cmc add lock add add (bad) cmp add aas push add mov add movsl xchg shlb xchg add mov add mov lcall (bad) lods add les add mov xlat add out add call loope cld jmp add ljmp cld out out std repz add div add mov addl fisubrl lea xlat scas xchg add mov add mov mov add shrl out mov in into mov add (bad) ret movsl xchg add fld add scas mov add mov aam sti in loope cld lock std div add hlt out add cli testl repz in sarl shrl add mov test iret mov in add clc repz cmc lock xor js dec add js add inc sbb pusha dec xor push pop inc add sti clc add and add xor push cmp add incl add fdiv repz repnz icebp icebp icebp icebp icebp clc clc clc clc clc div idiv sti sti lock add mov insb insb xchg xchg mov mov xchg xchg xchg mov xchg xchg xchg xchg nop nop nop nop nop (bad) (bad) (bad) (bad) (bad) testb add xchg movsb ret add sahf sahf lahf popf addb cwtl xchg xchg xchg xchg xchg xchg xchg xchg xchg (bad) testb add cmpsb cmpsl cmpsl loopne les mov lahf popf popf addb cwtl xchg xchg xchg xchg xchg xchg xchg (bad) testb add test cmpsb cmpsl xchg movsb ret mov sahf lahf popf popf cmpb cltd cltd cwtl xchg xchg xchg xchg xchg xchg (bad) testb add mov test cmpsb xchg movsb ret mov lahf lahf popf addb cwtl xchg xchg xchg xchg (bad) testb add stos mov iret mov mov mov enter leave leave leave leave leave leave leave leave leave leave leave leave cwtl xchg xchg xchg (bad) testb add test outsb test cmpsb cmpsl xchg les mov lahf popf popf sbbb (bad) testb add mov outsb outsb test cmpsb cmpsl xchg les test popf sbbb testb add outsl pop out mov mov int3 mov lret leave leave leave leave leave leave leave leave leave leave leave pushf fwait cltd cwtl nop testb add stos stos lods lods mov outsb (bad) test cmpsl xchg les test cmpb cltd nop testb add jecxz stos stos outsl pop mov outsb (bad) test cmpsl xchg movsl xchg mov sbbb fisubl stc jecxz rcl mov mov int3 mov lret leave leave leave leave leave leave leave leave popf popf cmpb add add es daa jecxz jecxz outsl pop pop mov (bad) cmpsb cmpsb xchg ret mov adcb add add add add es daa daa jecxz stos stos outsl pop pop (bad) loope insl mov test xchg les shlb add add jo xlat (bad) out rcl aam rcl ror mov mov mov leave leave leave leave leave leave shlb add call es daa stc jecxz stos outsl pop mov (bad) test cmpsl xchg movsl xchg ret test add add add jo es daa daa jecxz stos stos outsl pop (bad) test (bad) cmpsb cmpsl xchg les mov add add add (bad) xlat (bad) out rcl aam rcl ror mov mov mov enter ret xchg testb bound pop jns ja je jae jb mov scas daa daa jecxz stos stos pop pop mov test xchg les testb popa push push push push dec dec dec dec dec gs jp mov jns daa daa daa stc jecxz stos outsl pop mov test cmpsl xchg testb arpl adc or pop adc adc or or push movups out aad aam rcl ror mov int3 mov lret xchg fs and push pop adc adc or or adc es daa stc jecxz stos outsl pop (bad) loope outsb outsb test xchg add dec das add or pop jbe std decb or or jo es daa daa jecxz stos outsl pop mov cmpsb cmpsl xchg mov add jl inc add or jbe mov orl mov xlat (bad) (bad) out rcl daa jecxz leave leave leave leave leave leave leave leave test xchg push inc add fisttpll pop inc mov adc or jnp add jo jo es daa in mov mov outsb test cmpsl mov add sub and jbe push inc sub mov or jl add add jo jo daa daa in lret lret mov mov test mov add dec cmp or js aaa sub inc jb adc or (bad) (bad) xlat xlat (bad) out es mov mov into mov mov test testb push pop sub cmp xor dec cmp inc inc inc cmc mov adc (bad) incl add add jo in (bad) aad mov mov outsb mov add dec pop daa sub jle xor push adc addr16 (bad) incl add add jo xchg aad mov mov stos outsb mov add dec cmp jno imul xor pop cli mov dec jne (bad) (bad) (bad) xlat add fiadd lret leave pop mov add es xor push xor incb dec je (bad) (bad) (bad) incl add add in jo fidivr pop mov cs and sbb cmp and sub pop dec je (bad) (bad) (bad) (bad) (bad) incl add in loop outsb xlat pushf ror stos outsl pop mov testb push aas add inc inc cmp or push push sbb dec dec ja (bad) (bad) (bad) flds add in in in in jecxz outsl out (bad) testb das aas jmp and and sub sbb inc sbb ja (bad) (bad) (bad) (bad) (bad) (bad) incl add add jo jo es jecxz stos outsl (bad) testb xor add add daa daa sub or add push jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add jo out rcl mov add inc (bad) incl add jo jno sub and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add hlt hlt repz icebp clc sti testb xor (bad) incl add es add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add out aad aam xchg lock add inc inc inc inc aas aas ds pop cmp push push xor push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add jmp mov add xor xor das push cs push dec dec push dec sub arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp icebp add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov in in fstp fucomp ljmp (bad) fcmovnu fucomi call add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add rolb add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add addb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop add addb add sldt inc add add add inc add add add inc add add add rolb add add inc add add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add add or std stc stc add cli cli add icebp lock ljmp cld cmc hlt add hlt repz in jmp cld div add cmc hlt add call out cld div add out add in jmp add lock add clc testl imul out stc out in add out jmp int pop add subl rorb jle loope xchg add iret rolb mov sti add sti cli add cli stc add addr16 insb dec add jl add je add mov call jp add xchg jno jmp jno in xchg jae roll push add lea lods jns add mov xchg add test add mov add mov movsl add mov lods add les add int3 mov add lret ret popa cmp cltd push cmp ret add jne add js add jp add jge add sbbl mov in imul jle add mov mov in mov in mov rcrl xchg add stos popl jmp xchg add mov add mov add mov mov add jne add je add imul inc add popf jg aad jle fcomps addl mov les std out call add clc cmc add std cld add dec es xchg jb into xchg jbe rcrl jl sti out add jmp jecxz (bad) cmc lock hlt out add div add dec sbb cwtl dec sbb pushf dec pop add and movsb push daa add pop sub stos pop das add dec sub scas popa xor repz data16 lahf imul mov jnp enter (bad) nop jo lret add xchg je stc fmul add (bad) add lds add loop add fnop add jecxz add in add in add call fild (bad) out in cld jmp add in in cld out out cld lock add icebp ljmp repz add div add cmc lock stc testb xor add add xorl or mov or xchg or mov add dec pop add push and jmp mov add lods mov in xchg add movsl xchg shlb xchg add test cwtl add mov add mov mov add mov mov add out add out add xlat lret add jecxz add ljmp sti in loop cld out in sti in in std div add sti stc add mov test shrb lea (bad) lods popl xlat scas xchg add mov add mov add mov add mov test loopne mov add shlb jecxz test out lods add leave mov out mov in iret mov add sarb add cmpsl cwtl add mov stos add mov add mov icebp add hlt out add cli testl repz shrl add mov add mov add mov scas add mov lock xor bound add aaa add cmp add clc repz jmp std add cld sti add (bad) jnp push cmp add mov incl add (bad) hlt repz lock lock add add add xchg arpl scas scas lods lods stos stos stos test addl fstl outsl outsl xchg xchg outsb mov lea xor add add xchg ret xchg ret jo rol outsl xchg xchg mov lea add add add add xchg xchg xchg xchg xchg xchg xchg xchg jo xchg xchg mov (bad) lea add add add ficomp cwtl fs ret jo mov scas scas mov lock add add add pushf pushf pushf cltd cltd cltd lcall jo mov (bad) lea add add jmp rcl iret into int int3 mov lret enter xchg popl add add jmp jecxz sahf sahf jb pushf cltd lcall xchg mov add add add call aad rcl iret into into int mov lret enter test add add add add data16 (bad) sahf gs cltd cwtl xchg xchg sarl add add add in xlat fcom mov iret into into int mov lret jo stos lock cmpb jp ja jne cmpsb movsl mov data16 sahf pushf cltd cwtl xchg xchg jo lock pop push dec xor dec dec pusha pop insb imul iret iret into int mov cwtl fs lods lock pop push or adc adc or test data16 cltd fs add pop push or pop adc adc or ror iret into int pushf lcall xor push jg adc push cld std (bad) add and in data16 lcall and push jg out jg fwait movups addr16 mov (bad) jno cltd mov add inc add and jg or insl cmpsl clc addr16 sarb jb mov add inc aaa and dec dec push jg sub pop test clc out mov mov (bad) popf sahf gs add inc cmp sbb sub jg adc out (bad) mov mov jae jb lock inc cmp xor xor cmp dec js clc out mov mov add cmp xor xor sub cmp dec jns clc out addr16 hlt hlt xrelease dec push sbb sbb and jp clc out in jmp push lock add cmp (bad) clc clc addr16 and adc clc clc out out call lock add sub (bad) (bad) (bad) clc addr16 add adc clc clc clc addr16 call add add add sbb cmp aaa ss jle clc clc addr16 jmp xchg repz add add sub sub dec inc es inc inc inc inc inc pop pop cmp clc clc addr16 in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc (bad) clc clc addr16 in in in in loop in in out out (bad) loopne loope ljmp add add (bad) (bad) (bad) cld add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jo add aas cld add jg add (bad) (bad) (bad) (bad) ljmp add add add add add add add add js mov push add test hlt mov movsl add jecxz add xor add stos nop add lods xchg add mov mov repz add loop add jecxz add gs add pop cmp pushf push aaa add add dec add jge add andl stos jno add xchg je loope jl loop jg out xchg out mov fldcw hlt add popa cmp add div add jns add jle add sbbl mov (bad) mov sti out add ljmp cld out out std lock add hlt out add div add hlt lock ss jo add jne add mov jnp out jg out addb mov add fcmovb add fcmovne add fcmovne add mov add (bad) add fmulp add fmulp add loopne add loop add loope add loop add in add in add in add out add in add call loop sti jmp add in in std lock add lock add xor add add xchg cmp add mov add mov inc add add dec pop add dec or mov or mov sub call stos test out test in mov in mov in mov jecxz popl loop xchg add mov add mov add mov movsb add mov movsl add mov rolb cli in add out add jmp fild cld in loope sti in loop std icebp jmp add add scas nop add mov mov add mov xchg add stos pushf add mov add ret xlat (bad) mov (bad) (bad) mov aam scas add mov mov add hlt in add clc repz clc hlt add mov lret (bad) incl add add addl add jo insb push imul push dec dec dec inc inc inc addl push addl inc inc addl xor push xor dec inc imul arpl pop pop addl cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl pop xor cmpl adc xorl inc subl or push jl subl or cwtl popa sub sub prefetcht1 jle andl sbb sbb addl pop push push adc xchg xchg mov cwtl cwtl cwtl cwtl cwtl cwtl cwtl es and and sub xchg mov add js mov add loopne add loopne jmp shl add int add add mov add add add add popf add jecxz add sahf jb add xchg add xchg mov sub add xor add pusha add add add add fcompp dec jecxz fmuls (bad) dec loope aad loopne rcll fcom push fst rcrb aad pop fcmovnbe int fcmovbe int3 (bad) (bad) lret ror xlat iret (bad) push int insl aad lds lret ret jb lret ror (bad) ja enter (bad) mov jle lds int mov xchg (bad) mov lret (bad) mov lret (bad) leave mov mov enter (bad) mov mov (bad) mov scas cwtl lds scas cltd mov jl call jp decl js decl arpl mov mov incl outsl pop incl pop incl imul jl push (bad) jp dec (bad) js dec pushl dec pushl dec pushl pushl inc pushl inc ljmp inc ljmp aas ljmp ljmp cmp imul jmp aaa jmp xor jmp xor bound jmp xor lds add mov out in (bad) ret (bad) (bad) sar lret loope mov jmp (bad) mov jmp les jmp shrb out cmpsl jmp mov lahf (bad) call mov (bad) ljmp (bad) ljmp (bad) in scas xchg in lods test in stos cmp out test push movsl ja lock jne icebp mov outsl push mov push repz push push fwait jmp xor (bad) mov add mov lock (bad) cld out out cld out in cld in in cld in jecxz cld jmp (bad) cld ljmp sti jmp fdivr sti call (bad) sti in (bad) sti in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) cli loope (bad) cli loopne (bad) stc loopne (bad) stc fmulp (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmove (bad) stc fcmovb (bad) stc fcmovb (bad) stc fld (bad) clc fld (bad) clc fadd (bad) clc fadd push fwait jmpw xor (bad) mov add mov icebp ljmp lock (bad) cld out out cld out in cld in jecxz cld in loop cld jmp (bad) cld ljmp sti jmp fdivr sti out (bad) sti out (bad) cli in (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) stc loope (bad) stc loopne (bad) cli (bad) (bad) cli fmulp (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmove (bad) stc fcmovb (bad) stc fld (bad) stc fld (bad) clc fadd push pushf push inc mov add mov repnz (bad) cld repnz (bad) std icebp jmp std lock (bad) std out out cld out out cld in in cld in jecxz cld in jecxz sti jmp (bad) sti ljmp sti call fdivr sti out (bad) sti out (bad) cli in (bad) cli in (bad) cli in (bad) cli jecxz (bad) stc loope (bad) stc loope (bad) stc loopne (bad) stc (bad) (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmovb (bad) stc fld (bad) stc fld push popf push dec mov add mov hlt out (bad) std repz (bad) std repz (bad) std bnd std icebp ljmp lock (bad) std out in cld in in cld in jecxz cld in loop sti jmp (bad) cld ljmp sti call fdivr sti out (bad) cli in (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) cli loope (bad) stc loopne (bad) cli (bad) (bad) stc (bad) (bad) stc fmulp (bad) stc fmul (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmove (bad) stc fcmovb push sahf push pusha dec xor enter mov cmc lock std hlt out (bad) std hlt out (bad) fistpll (bad) fdivl xchg (bad) fdivs nop call stos mov shrl mov shlb test into mov cmp into mov cmp into mov cmp into mov cmp into mov cmp into mov lret fcmovne (bad) stc fcmovne (bad) stc fcmove push sahf insb jmp xor leave mov add mov div (bad) std div (bad) std cmc lock std hlt out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std bnd std icebp ljmp lock (bad) cld out in cld in in cld in jecxz sti in loope sti ljmp sti jmp fdivr sti out (bad) sti out (bad) cli in (bad) sti in (bad) cli jecxz (bad) cli jecxz (bad) stc loope (bad) stc loopne (bad) cli (bad) (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne push lahf insl jmp xor lret lea add add div (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock std hlt out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std bnd std icebp jmp (bad) cld out out cld out out cld out in cld in jecxz cld in loop sti jmp (bad) sti ljmp sti call (bad) sti out (bad) sti out (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) stc loopne (bad) cli (bad) (bad) stc fmulp (bad) stc (bad) (bad) stc (bad) (bad) stc fmul push mov xor lret (bad) mov mov clc cmc (bad) (bad) clc hlt (bad) (bad) clc repz les jmp mov mov (bad) fdivl cwtl (bad) fdivs xchg call lods mov shrl mov shlb test into mov cmp into mov cmp into mov cmp into mov cmp into mov sar stc (bad) (bad) stc fmulp (bad) stc (bad) push mov xor int3 sarl mov stc idiv (bad) stc idiv std clc cmc (bad) std clc hlt (bad) std div (bad) std div (bad) std div (bad) std cmc icebp (bad) std cmc lock std hlt out (bad) std repz (bad) std repz (bad) std bnd std icebp jmp cld icebp jmp (bad) cld out out cld out in cld in in cld in jecxz cld jmp (bad) sti ljmp sti jmp (bad) sti out (bad) sti in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) cli loope (bad) cli fnop (bad) stc (bad) (bad) stc (bad) (bad) out mov xor int mov add cli clc (bad) (bad) cli idiv (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) (bad) cmc lock std cmc out (bad) std hlt out (bad) std repz (bad) std repz (bad) std bnd cld icebp ljmp out out cld out out cld in in cld in jecxz cld in loop cld jmp (bad) sti ljmp sti call (bad) sti out (bad) cli in (bad) cli in (bad) cli loop (bad) cli loope (bad) stc loopne (bad) stc (bad) (bad) out movsb jbe pusha dec xor into ret mov add sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) in int (bad) jmp enter lds jmp shlb fidivr fwait (bad) (bad) call scas xchg call lods (bad) call stos mov shrl xchg shlb (bad) dec mov cmp into mov cmp into mov cmp cli jecxz (bad) cli jecxz (bad) cli loope (bad) cli loopne (bad) out movsl js pusha dec xor into les add cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) std cmc out (bad) std hlt out (bad) std repz (bad) std repz (bad) std icebp jmp cld icebp ljmp out out cld out out cld in in cld in loop cld jmp (bad) cld ljmp sti jmp (bad) sti out (bad) sti in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) out cmpsb jnp pusha dec xor iret lds shrb (bad) cld cli (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock (bad) hlt out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std bnd cld icebp jmp (bad) cld out out cld out in cld in jecxz cld in loop cld jmp (bad) sti ljmp sti call (bad) sti in (bad) cli in (bad) cli jecxz (bad) in test jmp xor rol mov add lods sahf (bad) (bad) std cld (bad) (bad) std sti (bad) (bad) cld sti push aad (bad) out sarl (bad) in into mov (bad) call (bad) scas jmp les jmp mov mov (bad) fdivl xchg (bad) fdivs nop call stos (bad) call test mov shll dec mov cmp into mov cmp sti call (bad) sti in (bad) cli in (bad) in test xor ror mov add scas lahf (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) (bad) stc idiv (bad) stc idiv (bad) stc cmc (bad) (bad) clc hlt (bad) std div (bad) std div (bad) std div (bad) (bad) cmc lock std cmc out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std icebp ljmp out out cld out out cld in in cld in loop cld in loope sti ljmp sti out (bad) sti out (bad) cli out (bad) in stos cmp ror (bad) jbe add add scas lahf (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) std sti (bad) (bad) cld sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) std div (bad) (bad) div (bad) std cmc icebp (bad) std cmc lock std hlt out (bad) std repz (bad) std repz (bad) std icebp jmp cld icebp jmp (bad) cld out out cld out in cld in jecxz cld jmp (bad) sti ljmp sti out (bad) sti out (bad) ljmp call lret ret jae add add scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push fld push fadd push xlat ret aad (bad) out sarl (bad) in iret mov (bad) call (bad) scas jmp les jmp mov mov (bad) (bad) xchg (bad) fdivs nop call stos (bad) call test call cmpsb mov shll cmp mov cmp cld jmp (bad) cld ljmp sti call xchg pusha dec xor aad les add add aas pushl cmp scas pusha aaa ljmp pop xor movsb pop sub lahf push sub lahf push sub lcall decl inc adc decl cmp incl xor add ja add (bad) sti stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) stc idiv (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) std cmc icebp (bad) std cmc out (bad) std hlt out (bad) std repz (bad) std bnd cld icebp ljmp out out cld out in cld in jecxz cld jmp (bad) sti ljmp jmp dec xor (bad) int insl add add mov mov loop arpl loop arpl fldl pop call sbbb sbbb jge dec jp dec jbe dec jae inc outsb dec inc insl inc (bad) mov push cmp mov cmp scas pusha aaa ljmp xor cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) cmc icebp (bad) (bad) cmc out (bad) std hlt out (bad) std repz (bad) std bnd cld icebp ljmp out out cld in in cld in jecxz cld in loop sti jmp (bad) call dec xor xlat iret (bad) push add add mov cli repnz cli repnz cli repnz stc out in (bad) stc out in (bad) clc out ljmp in jmp push jmp out imul in imul in cmc out push out push out push out pushl add out sarb jmp mov jmp enter lds loop movsl jmp mov lahf (bad) fdivl cwtl (bad) fnstenv xchg call lods mov aam mov shll xchg shlb (bad) cld out out cld in jecxz cld in loop out mov pusha dec xor fcom leave add add mov mov cli hlt repnz cli repnz cli repnz cli repnz stc out in (bad) stc out in (bad) clc out ljmp in jmp push ljmp imul in imul in cmc out push out push out (bad) mov xor cld (bad) (bad) std sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock std hlt out (bad) std repz (bad) std repnz (bad) std icebp ljmp out out cld out in cld in in out nop jmp xor (bad) lret add add outsb dec jmp xchg outsb (bad) cld cmc hlt (bad) cli hlt repnz push xor mov (bad) clc lock (bad) stc out in (bad) clc out ljmp inc and push cmp push jmp in imul in imul in cmc out (bad) mov cmp (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) std sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) std cmc lock (bad) hlt out (bad) std repz (bad) std repnz (bad) std icebp ljmp out out cld out in out xchg jmp xor fcmovbe int3 popa add add shrl out outsb (bad) cld div (bad) cld cmc hlt jmp pop ljmp dec es stc out in (bad) stc out in decl pop xor popl push and loop leave push jmp in imul in cmc out (bad) mov cmp push fadd push (bad) ret aam (bad) out sarb (bad) in int (bad) ljmp (bad) (bad) sti stc (bad) (bad) cli clc dec mov cmp into mov cmp into mov cmp std bnd std icebp ljmp out out in xchg jmp xor (bad) into pop add add (bad) jae (bad) jmp div (bad) cld cmc hlt ljmp xchg jnp fnstenv ljmp mov out lcall arpl decl mov imul out imul out imul in imul in mov inc adc (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc push lret jmp lods (bad) ljmp (bad) ljmp jmp mov jmp mov dec mov in (bad) std repnz (bad) cld icebp ljmp mov jmp xor fst iret pop add add lret (bad) jmp clc idiv cld div ljmp pushf cmp jbe (bad) fnstenv decl (bad) lcall jae (bad) mov push and outsb cmp (bad) ljmp push jmp in les decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) cld cli push lret repz (bad) fsubrs (bad) (bad) call mov (bad) fbstp popf dec mov out (bad) std hlt in (bad) std repnz (bad) std icebp ljmp dec xor (bad) rcll add add jp jmp sahf jg std stc clc (bad) std clc idiv mov data16 frstor (bad) fisttpl cmp (bad) push das jmp pop dec push cmp popl pushf mov clc ljmp imul out shrl popl repz push fld push fld push fadd push (bad) ret aad (bad) out sarl (bad) (bad) std sti (bad) (bad) cld sti push lret jecxz xchg jmp mov jmp mov jmp mov jmp mov (bad) fidiv popf dec mov lock std hlt out (bad) std repz (bad) cld repnz jmp mov xor (bad) rcll add sarl jmp sahf jg (bad) cli stc (bad) std stc clc (bad) mov stos xchg lcall test loopne push ljmp mov ret dec push xor outsb cmp (bad) ljmp push ljmp lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std sti push lret stc jmp push sarl push fcmove jmp mov (bad) fsubrl mov (bad) (bad) div (bad) (bad) cmc lock std hlt out (bad) std repz jmp mov xor loope aad add add xlat sbbb movsl mov (bad) sti cli (bad) std cli stc inc subl mov lcall arpl sahf jg loop arpl fnstenv (bad) fnstenv decl pop inc (bad) fnstenv lcall mov clc in jmp dec jbe lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std std (bad) (bad) std std (bad) (bad) std cld push lret jecxz mov in into mov jmp mov xchg (bad) fisubrl movsb dec mov repz std div (bad) std cmc lock std hlt out jmp mov xor loop xlat dec add add aad pop (bad) jmp cld sti (bad) std sti cli dec nop je ljmp (bad) out call push jmp sahf jg fldl inc decl mov fnstenv (bad) fnstenv ljmp and ljmp dec jp lcall fld push fld push fld push fld push fld push fld push fadd push xlat ret (bad) (bad) (bad) std (bad) (bad) std std push lret hlt jecxz (bad) in fmul (bad) sti cmc lock fistpll (bad) fldcw (bad) dec mov hlt (bad) (bad) div (bad) (bad) div (bad) std cmc lock mov xor jecxz fmuls add add test out xchg (bad) (bad) std cld (bad) (bad) cld sti call mov icebp mov dec push in jmp inc jl jmp sahf jg fldl dec (bad) cli xacquire push jmp jbe clc out ljmp push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push lret std stc idiv (bad) std std (bad) jmp leave push loopne push jecxz (bad) in lret jmp lods dec mov cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div jmp mov xor in fiaddl add add mov in mov (bad) (bad) std cld jmp ror (bad) ficompl dec nop je mov data16 clc lock (bad) fistpll jmp xchg outsb jmp repnz out jmp push pushl cmp repz jmp jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push lret (bad) (bad) (bad) (bad) sti hlt out push jecxz (bad) cld repz push xlat ret push loopne (bad) in lret into mov idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div jmp mov xor in fildl add loopne push (bad) (bad) (bad) std call xchg jbe icebp mov stos (bad) ljmp jmp idiv mov movsl mov stos je (bad) cld cmc hlt dec jnp call mov aad jbe iret test shrl xlat sbbb pop xor repz push fld push fld push fld push fld push fld push fld push fld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push lret repz repz repz repz repz repz repz into mov idiv (bad) stc idiv (bad) stc cmc (bad) (bad) clc repz mov xor out fldl add add mov lock (bad) (bad) (bad) (bad) (bad) ficompl (bad) ficompl call mov rorb stc (bad) fistpll dec jnp (bad) sti div inc jae inc jae inc jae inc jae (bad) mov test scas pusha aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc jmp mov xor call add add xchg outsb push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) sti cli (bad) (bad) sti cli (bad) std cli stc (bad) std stc clc (bad) std clc idiv cld div (bad) sti div (bad) cli hlt repnz cli hlt repnz cli repnz cli repnz fldl aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) in sarb (bad) jmp lret mov out mov jecxz lods jmp shrl pusha dec xor jmp add add xchg outsb push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) cld sti (bad) std sti cli (bad) std cli stc (bad) std stc clc (bad) std clc idiv std clc idiv cld div (bad) cld cmc hlt (bad) cld cmc hlt (bad) cli hlt repnz cli bnd mov mov cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) mov xchg subl xchg (bad) jle push pushl dec ljmp jmp jmp xor ljmp add xchg je icebp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) cld sti (bad) (bad) cld sti (bad) std sti cli (bad) std cli stc (bad) std stc clc (bad) std clc idiv std clc idiv cld div (bad) sti div (bad) cld cmc hlt (bad) cli hlt bnd mov mov aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sarb (bad) jmp lret out mov in scas jmp shrb (bad) lret out xor add add xchg je icebp mov stos push mov push mov push mov (bad) in mov (bad) in mov jmp stos xchg (bad) jmp movsl mov out jg out jg jmp xchg je out outsb jmp xchg outsb jmp mov loopne push pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in (bad) in jecxz cli call sar icebp fxch (bad) out aam ljmp cmp fcmovnbe int in jmp add add add jmp xchg je out outsb jmp xchg outsb jmp xchg outsb jmp mov loopne push (bad) fldl pop call sbbb jge dec jp dec jbe inc jae inc outsb dec inc outsb dec inc outsb dec (bad) mov imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in (bad) out in cld jmp aad repnz pushl inc (bad) fst iret pop out jmp sub sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in (bad) out in std jmp (bad) clc in (bad) jnp dec (bad) fnop rclb in jmp add mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in (bad) out in std in loope xchg jmp fcmovnbe push icebp out jmp sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in (bad) out in (bad) js jmp fstp dec repnz and add add mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in xchg subl repz out pop sarl mov sarb mov iret mov scas dec mov lods dec mov lods dec mov stos dec mov dec mov dec mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc scas mov inc scas lahf (bad) mov lods sahf (bad) mov xchg loop aas cmc repz sbb add add (bad) (bad) (bad) (bad) incl add loopne add add add rolb add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add addb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add rolb add add inc add add add inc add add add inc add add add inc add add add (bad) (bad) (bad) (bad) incl add add add add add add add and mov jl (bad) js dec ljmp cmp dec aaa jmp xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor mov ljmp ffree mov fidivr mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp scas mov jmp lods (bad) (bad) jmp jg in cmpsl jnp out movsl ja out mov outsl push mov push push fwait arpl pusha dec xor mov jmp (bad) cld jmp (bad) cld jmp (bad) cld jmp (bad) sti ljmp sti jmp (bad) cli call fdivr cli out (bad) cli out (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) stc loopne (bad) stc loopne (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne push pushf jmp xor mov out in sti in in cld in in sti in in sti in jecxz cld jmp (bad) sti jmp (bad) sti jmp (bad) sti ljmp sti jmp fdivr cli out (bad) cli out (bad) cli in (bad) cli in (bad) stc loop (bad) cli loope (bad) cli loopne (bad) stc (bad) (bad) stc fmulp (bad) stc fmul push popf jmp xor mov out out cld out out sti out out cld out out cld out out cld in in cld in in cld in in cld in jecxz cld jmp (bad) cld ljmp sti ljmp sti out (bad) cli out (bad) cli in (bad) cli in (bad) cli loop (bad) stc loope (bad) cli loopne (bad) cli (bad) push sahf push pusha dec xor mov icebp ljmp icebp ljmp lock (bad) std out call (bad) cld out out cld out in cld in in cld in jecxz cld in loope shrl mov shll xchg shlb (bad) cli jecxz (bad) cli loope (bad) cli loopne push mov xor mov repz (bad) std repz (bad) std repz (bad) std repnz (bad) std repz std bnd cld repnz icebp jmp (bad) cld out out cld out out cld in in cld in jecxz cld jmp (bad) sti ljmp sti call fcos cli in (bad) cli jecxz (bad) cli loop push mov xor mov cmc out (bad) std hlt out jmp shrl loope mov (bad) fidivr pushf (bad) (bad) xchg (bad) fnstenv xchg call scas xchg call lods (bad) call stos (bad) call test mov shlb xchg sti out (bad) cli in (bad) cli jecxz (bad) out mov xor mov div (bad) std div (bad) std div (bad) std div (bad) std div (bad) (bad) cmc lock std cmc lock std cmc lock std hlt out (bad) std repz (bad) std repz (bad) std repnz (bad) cld icebp ljmp out out cld out in cld in in cld jmp (bad) cld ljmp sti out (bad) cli in (bad) in movsl ja pusha dec xor shrb std div jmp lds jmp shrl loope mov (bad) fidivr pushf (bad) fdivl cwtl (bad) fnstenv xchg call scas xchg call lods (bad) call stos (bad) call stos mov shrl loopne sti jmp (bad) in cmpsl jnp pusha dec xor shrl (bad) (bad) stc cmc (bad) (bad) stc cmc (bad) (bad) clc cmc (bad) (bad) clc cmc (bad) (bad) clc cmc (bad) (bad) clc cmc (bad) std div (bad) (bad) div (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock std hlt out (bad) std repz (bad) cld bnd cld icebp jmp (bad) cld out in sti in loop sti ljmp jmp jg pusha dec xor ret (bad) (bad) cli idiv (bad) cli idiv call (bad) scas jmp lds jmp ret loop cmpsb jmp mov mov (bad) fnstsw lcall mov (bad) fdivs xchg call lods (bad) call stos mov cld out in cld in jecxz sti ljmp pusha dec xor scas pusha aaa ljmp pop xor movsb pop sub movsb pop sub lahf push sub lcall decl inc adc decl cmp incl xor add (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) std div (bad) std cmc lock std hlt in (bad) std bnd cld icebp jmp (bad) cld in in cld in loop call dec xor mov stos xchg jmp stos xchg jmp stos xchg jmp stos xchg (bad) jmp movsb mov frstor (bad) fcoms jnp leave nop je leave nop je leave nop je leave nop je (bad) xor movsb jmp mov lahf (bad) fnstsw fwait (bad) (bad) (bad) fdivs xchg (bad) cld icebp jmp (bad) cld in in out mov pusha dec xor mov mov (bad) cld div (bad) cli hlt repnz cli repnz cli repnz clc lock (bad) stc out in (bad) clc out ljmp ljmp imul in imul in leave nop je (bad) xor stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) stc idiv (bad) clc cmc (bad) std div (bad) std div (bad) std hlt out (bad) std repz (bad) std bnd std lock jmp mov jmp xor shrl in mov (bad) cld div (bad) cld cmc hlt (bad) cld cmc hlt (bad) cli repnz cli repnz clc lock (bad) stc out in (bad) clc out ljmp ljmp imul in leave nop je mov pop jmp ret loop cmpsl jmp mov mov (bad) fnstsw fwait (bad) (bad) (bad) std repz (bad) cld icebp ljmp mov jmp xor shrl lock (bad) std clc idiv test dec es mov lock cli repnz cmp (bad) clc in jmp push jmp je mov pop (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) stc idiv (bad) clc hlt (bad) std div (bad) std div (bad) std hlt out (bad) std repnz (bad) std icebp ljmp dec xor (bad) jae push mov (bad) std cli stc inc jl (bad) fnstenv decl call out dec push call adc (bad) clc in jmp (bad) fcoms adc (bad) (bad) std cld dec mov cmp into mov cmp into mov lock std hlt out (bad) std repnz jmp mov jmp xor into jp push mov stc inc subl xchg je fnstenv decl ror call sbbb jbe decl mov clc out ljmp xchg jnp popl (bad) (bad) std (bad) (bad) std cld push lret out mov jmp mov xchg jmp mov dec mov icebp (bad) std hlt out (bad) std repz jmp mov xor sarl push mov cli call mov mov data16 ficompl decl outsb dec inc subl bound call adc (bad) clc out ljmp inc adc (bad) (bad) (bad) std push lret fldcw xchg jmp mov xchg jmp mov dec mov repnz std div (bad) std repz jmp mov xor aad pop push mov sti (bad) fcoms data16 ljmp (bad) fnstenv decl stos xchg dec jae decl mov stc out in (bad) ficompl (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push lret jmp ret test out mov jmp mov cmp std div (bad) std cmc out (bad) fistpll xor fisttpl mov (bad) (bad) std (bad) frstor push out (bad) frstor decl ror (bad) fistpll call adc (bad) frstor (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push lret hlt jecxz (bad) in fmul (bad) sti cmc lock ret jecxz cmpsl jmp mov movsl (bad) fidivr movsl (bad) fistpll incl add add add add mov hlt enter xchg jnp out xchg jmp stos xchg pushl (bad) (bad) dec test (bad) push das jmp ror jmp stos xchg inc subl bound (bad) ficompl lcall (bad) (bad) (bad) (bad) (bad) std push lret std stc idiv (bad) std std (bad) jmp leave (bad) mov jbe decl imul arpl jb inc ljmp cmp pusha dec xor loopne push (bad) fcoms jno rorb push (bad) fistpll lcall clc idiv lret dec jnp dec jnp inc outsb dec (bad) jmp pop sub (bad) (bad) (bad) (bad) (bad) (bad) std push lret (bad) (bad) (bad) (bad) sti hlt out push jecxz (bad) mov sarb jmp lret in scas jmp mov xor out loopne out outsb push enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) sti cli (bad) std stc clc (bad) std clc idiv cld div (bad) cld cmc hlt (bad) cli hlt bnd stos xchg jmp (bad) (bad) (bad) (bad) (bad) push lret repz repz repz shrl (bad) sti call sar out aam jmp xor out loopne lock jmp jmp enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cli stc (bad) std cli stc (bad) std clc idiv cld div (bad) cld cmc hlt jmp stos xchg ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) std sti inc mov (bad) (bad) out in sti call sar gs ss in sub out jmp jmp enter enter enter enter enter enter mov stos push mov mov (bad) in mov (bad) in mov jmp stos xchg ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std sti inc mov (bad) (bad) out in sti call ds in sub out jmp jmp xchg je jmp xchg outsb jmp xchg outsb jmp mov fisttpl pop call sbbb jge dec jbe inc jae inc outsb dec inc outsb dec (bad) mov pusha aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std cld inc mov (bad) (bad) out in subl out loopne lock jmp sarl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std std (bad) (bad) std cld dec mov lcall loopne lock jmp sarl mov sarl mov sarb scas dec mov scas dec mov lods dec mov stos dec mov test dec mov dec mov dec mov jmp in sub out in sbb add add (bad) (bad) (bad) cld add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add paddb add cld add aas (bad) (bad) (bad) ljmp add add add add add add add add xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor add loop (bad) fistpll cltd jmp mov jmp mov jmp scas mov in mov out test out jg call mov xor add out (bad) sti out (bad) sti out (bad) cli in (bad) sti in (bad) sti loop (bad) stc loopne (bad) clc (bad) (bad) stc fcmovne (bad) clc fcmovb (bad) jmp dec xor add in loop cld in loop (bad) scas nop call scas nop call scas nop call scas nop call scas nop call scas nop (bad) clc fmulp (bad) clc fcmovne jmp cmpsl cmp dec xor add lock (bad) std lock (bad) cld in in sti jmp (bad) sti call xlat (bad) cli loop (bad) stc fmulp jmp lods test arpl pushl dec or mov or mov or fwait inc add lcall cmp incl xor call scas nop call scas nop (bad) sti in (bad) cli loope jmp scas mov arpl (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl add cld out call (bad) sti call (bad) jmp mov jmp xor (bad) (bad) (bad) (bad) decl pusha aaa (bad) cli xacquire gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl scas nop call scas nop (bad) sti ljmp loop xchg jmp xor (bad) (bad) (bad) (bad) jmp cmp hlt enter xor add sarb (bad) decl hlt out call scas nop (bad) cld in in sti jmp cltd jmp xor (bad) (bad) (bad) (bad) pushl imul (bad) xor xor insb cmp (bad) lcall div call scas nop (bad) cld out out sti ljmp arpl call xchg jbe (bad) (bad) (bad) call xchg jbe mov mov and frstor jmp ror lcall clc repz scas nop (bad) cld lock (bad) fnstsw xor push loop (bad) ficompl push loop (bad) mov loop jmp mov mov or (bad) scas nop call scas nop (bad) std icebp jmp (bad) fnstsw ss jmp mov cmp sbbb (bad) dec sbbb loop jmp mov mov or std clc hlt (bad) std cmc out pushl dec jmp jmp jmp stos xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl div (bad) std hlt out (bad) mov lds push out jmp out xchg jmp stos xchg (bad) jmp sahf jg fcoms callw jge dec jbe inc insl inc pushl div (bad) std hlt in inc stos pushf jmp push out jmp fadd mov xlat (bad) mov (bad) (bad) mov aam scas call mov stos dec mov test lret mov dec mov push out in sbb add add add add add add add add add add add add add incl add incl add incl add incl add jmp add add add and add add call add adc add add sub add add xor add add or test add add and add add or test add add add add add add push add xor add add add add and add add add add adc add add add add or add add add and add add or test add add sub push push call int3 pop mov inc sub sub add cmpb jne movb mov push push push push call add mov pop pop ret push mov push push push push mov mov shr mov mov test je xor add add dec jmp pop pop pop pop leave ret mov xchg fwait sub sbb cmp jb mov mov xor sub xor push mov mov or shl not xor add xor sub xor xor xor mov mov mov push mov add add xchg pop pop add and xor xchg xchg call cmpsl push adc jg or fiaddl push push mov call jae int3 and mov jno movsl add clc mov leave rcrb mov mov sbb movsb daa or xor js mov dec and lock fsubs xchg push repnz push test xchg nop (bad) pop fs lcall xchg cmp push adc clc xor add (bad) ss (bad) xchg inc pop cmc mov push push jb adc mov fadds sub jae jb mov fstpt ret cmp fadds sbb or pop add mov dec nop xchg mov shll push lods mov sub (bad) cld cmpsb add roll outsb (bad) mov hlt rolb xchg (bad) ja lret jb dec pop mov ja scas addr16 sbb dec mov cmpsb 